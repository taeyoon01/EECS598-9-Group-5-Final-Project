
examples/mbedtls/ecdsa/app:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	f3 0f 1e fa          	endbr64 
    4004:	48 83 ec 08          	sub    $0x8,%rsp
    4008:	48 8b 05 d1 df 02 00 	mov    0x2dfd1(%rip),%rax        # 31fe0 <__gmon_start__>
    400f:	48 85 c0             	test   %rax,%rax
    4012:	74 02                	je     4016 <_init+0x16>
    4014:	ff d0                	callq  *%rax
    4016:	48 83 c4 08          	add    $0x8,%rsp
    401a:	c3                   	retq   

Disassembly of section .plt:

0000000000004020 <.plt>:
    4020:	ff 35 c2 de 02 00    	pushq  0x2dec2(%rip)        # 31ee8 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	f2 ff 25 c3 de 02 00 	bnd jmpq *0x2dec3(%rip)        # 31ef0 <_GLOBAL_OFFSET_TABLE_+0x10>
    402d:	0f 1f 00             	nopl   (%rax)
    4030:	f3 0f 1e fa          	endbr64 
    4034:	68 00 00 00 00       	pushq  $0x0
    4039:	f2 e9 e1 ff ff ff    	bnd jmpq 4020 <.plt>
    403f:	90                   	nop
    4040:	f3 0f 1e fa          	endbr64 
    4044:	68 01 00 00 00       	pushq  $0x1
    4049:	f2 e9 d1 ff ff ff    	bnd jmpq 4020 <.plt>
    404f:	90                   	nop790
    4050:	f3 0f 1e fa          	endbr64 
    4054:	68 02 00 00 00       	pushq  $0x2
    4059:	f2 e9 c1 ff ff ff    	bnd jmpq 4020 <.plt>
    405f:	90                   	nop
    4060:	f3 0f 1e fa          	endbr64 
    4064:	68 03 00 00 00       	pushq  $0x3
    4069:	f2 e9 b1 ff ff ff    	bnd jmpq 4020 <.plt>
    406f:	90                   	nop
    4070:	f3 0f 1e fa          	endbr64 
    4074:	68 04 00 00 00       	pushq  $0x4
    4079:	f2 e9 a1 ff ff ff    	bnd jmpq 4020 <.plt>
    407f:	90                   	nop
    4080:	f3 0f 1e fa          	endbr64 
    4084:	68 05 00 00 00       	pushq  $0x5
    4089:	f2 e9 91 ff ff ff    	bnd jmpq 4020 <.plt>
    408f:	90                   	nop
    4090:	f3 0f 1e fa          	endbr64 
    4094:	68 06 00 00 00       	pushq  $0x6
    4099:	f2 e9 81 ff ff ff    	bnd jmpq 4020 <.plt>
    409f:	90                   	nop
    40a0:	f3 0f 1e fa          	endbr64 
    40a4:	68 07 00 00 00       	pushq  $0x7
    40a9:	f2 e9 71 ff ff ff    	bnd jmpq 4020 <.plt>
    40af:	90                   	nop
    40b0:	f3 0f 1e fa          	endbr64 
    40b4:	68 08 00 00 00       	pushq  $0x8
    40b9:	f2 e9 61 ff ff ff    	bnd jmpq 4020 <.plt>
    40bf:	90                   	nop
    40c0:	f3 0f 1e fa          	endbr64 
    40c4:	68 09 00 00 00       	pushq  $0x9
    40c9:	f2 e9 51 ff ff ff    	bnd jmpq 4020 <.plt>
    40cf:	90                   	nop
    40d0:	f3 0f 1e fa          	endbr64 
    40d4:	68 0a 00 00 00       	pushq  $0xa
    40d9:	f2 e9 41 ff ff ff    	bnd jmpq 4020 <.plt>
    40df:	90                   	nop
    40e0:	f3 0f 1e fa          	endbr64 
    40e4:	68 0b 00 00 00       	pushq  $0xb
    40e9:	f2 e9 31 ff ff ff    	bnd jmpq 4020 <.plt>
    40ef:	90                   	nop
    40f0:	f3 0f 1e fa          	endbr64 
    40f4:	68 0c 00 00 00       	pushq  $0xc
    40f9:	f2 e9 21 ff ff ff    	bnd jmpq 4020 <.plt>
    40ff:	90                   	nop
    4100:	f3 0f 1e fa          	endbr64 
    4104:	68 0d 00 00 00       	pushq  $0xd
    4109:	f2 e9 11 ff ff ff    	bnd jmpq 4020 <.plt>
    410f:	90                   	nop
    4110:	f3 0f 1e fa          	endbr64 
    4114:	68 0e 00 00 00       	pushq  $0xe
    4119:	f2 e9 01 ff ff ff    	bnd jmpq 4020 <.plt>
    411f:	90                   	nop
    4120:	f3 0f 1e fa          	endbr64 
    4124:	68 0f 00 00 00       	pushq  $0xf
    4129:	f2 e9 f1 fe ff ff    	bnd jmpq 4020 <.plt>
    412f:	90                   	nop
    4130:	f3 0f 1e fa          	endbr64 
    4134:	68 10 00 00 00       	pushq  $0x10
    4139:	f2 e9 e1 fe ff ff    	bnd jmpq 4020 <.plt>
    413f:	90                   	nop
    4140:	f3 0f 1e fa          	endbr64 
    4144:	68 11 00 00 00       	pushq  $0x11
    4149:	f2 e9 d1 fe ff ff    	bnd jmpq 4020 <.plt>
    414f:	90                   	nop
    4150:	f3 0f 1e fa          	endbr64 
    4154:	68 12 00 00 00       	pushq  $0x12
    4159:	f2 e9 c1 fe ff ff    	bnd jmpq 4020 <.plt>
    415f:	90                   	nop
    4160:	f3 0f 1e fa          	endbr64 
    4164:	68 13 00 00 00       	pushq  $0x13
    4169:	f2 e9 b1 fe ff ff    	bnd jmpq 4020 <.plt>
    416f:	90                   	nop
    4170:	f3 0f 1e fa          	endbr64 
    4174:	68 14 00 00 00       	pushq  $0x14
    4179:	f2 e9 a1 fe ff ff    	bnd jmpq 4020 <.plt>
    417f:	90                   	nop
    4180:	f3 0f 1e fa          	endbr64 
    4184:	68 15 00 00 00       	pushq  $0x15
    4189:	f2 e9 91 fe ff ff    	bnd jmpq 4020 <.plt>
    418f:	90                   	nop
    4190:	f3 0f 1e fa          	endbr64 
    4194:	68 16 00 00 00       	pushq  $0x16
    4199:	f2 e9 81 fe ff ff    	bnd jmpq 4020 <.plt>
    419f:	90                   	nop
    41a0:	f3 0f 1e fa          	endbr64 
    41a4:	68 17 00 00 00       	pushq  $0x17
    41a9:	f2 e9 71 fe ff ff    	bnd jmpq 4020 <.plt>
    41af:	90                   	nop
    41b0:	f3 0f 1e fa          	endbr64 
    41b4:	68 18 00 00 00       	pushq  $0x18
    41b9:	f2 e9 61 fe ff ff    	bnd jmpq 4020 <.plt>
    41bf:	90                   	nop
    41c0:	f3 0f 1e fa          	endbr64 
    41c4:	68 19 00 00 00       	pushq  $0x19
    41c9:	f2 e9 51 fe ff ff    	bnd jmpq 4020 <.plt>
    41cf:	90                   	nop
    41d0:	f3 0f 1e fa          	endbr64 
    41d4:	68 1a 00 00 00       	pushq  $0x1a
    41d9:	f2 e9 41 fe ff ff    	bnd jmpq 4020 <.plt>
    41df:	90                   	nop

Disassembly of section .plt.got:

00000000000041e0 <__cxa_finalize@plt>:
    41e0:	f3 0f 1e fa          	endbr64 
    41e4:	f2 ff 25 0d de 02 00 	bnd jmpq *0x2de0d(%rip)        # 31ff8 <__cxa_finalize@GLIBC_2.2.5>
    41eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000041f0 <free@plt>:
    41f0:	f3 0f 1e fa          	endbr64 
    41f4:	f2 ff 25 fd dc 02 00 	bnd jmpq *0x2dcfd(%rip)        # 31ef8 <free@GLIBC_2.2.5>
    41fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004200 <putchar@plt>:
    4200:	f3 0f 1e fa          	endbr64 
    4204:	f2 ff 25 f5 dc 02 00 	bnd jmpq *0x2dcf5(%rip)        # 31f00 <putchar@GLIBC_2.2.5>
    420b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004210 <puts@plt>:
    4210:	f3 0f 1e fa          	endbr64 
    4214:	f2 ff 25 ed dc 02 00 	bnd jmpq *0x2dced(%rip)        # 31f08 <puts@GLIBC_2.2.5>
    421b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004220 <ferror@plt>:
    4220:	f3 0f 1e fa          	endbr64 
    4224:	f2 ff 25 e5 dc 02 00 	bnd jmpq *0x2dce5(%rip)        # 31f10 <ferror@GLIBC_2.2.5>
    422b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004230 <fread@plt>:
    4230:	f3 0f 1e fa          	endbr64 
    4234:	f2 ff 25 dd dc 02 00 	bnd jmpq *0x2dcdd(%rip)        # 31f18 <fread@GLIBC_2.2.5>
    423b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004240 <clock_gettime@plt>:
    4240:	f3 0f 1e fa          	endbr64 
    4244:	f2 ff 25 d5 dc 02 00 	bnd jmpq *0x2dcd5(%rip)        # 31f20 <clock_gettime@GLIBC_2.17>
    424b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004250 <fclose@plt>:
    4250:	f3 0f 1e fa          	endbr64 
    4254:	f2 ff 25 cd dc 02 00 	bnd jmpq *0x2dccd(%rip)        # 31f28 <fclose@GLIBC_2.2.5>
    425b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004260 <strlen@plt>:
    4260:	f3 0f 1e fa          	endbr64 
    4264:	f2 ff 25 c5 dc 02 00 	bnd jmpq *0x2dcc5(%rip)        # 31f30 <strlen@GLIBC_2.2.5>
    426b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004270 <__stack_chk_fail@plt>:
    4270:	f3 0f 1e fa          	endbr64 
    4274:	f2 ff 25 bd dc 02 00 	bnd jmpq *0x2dcbd(%rip)        # 31f38 <__stack_chk_fail@GLIBC_2.4>
    427b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004280 <setbuf@plt>:
    4280:	f3 0f 1e fa          	endbr64 
    4284:	f2 ff 25 b5 dc 02 00 	bnd jmpq *0x2dcb5(%rip)        # 31f40 <setbuf@GLIBC_2.2.5>
    428b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004290 <gmtime_r@plt>:
    4290:	f3 0f 1e fa          	endbr64 
    4294:	f2 ff 25 ad dc 02 00 	bnd jmpq *0x2dcad(%rip)        # 31f48 <gmtime_r@GLIBC_2.2.5>
    429b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042a0 <memset@plt>:
    42a0:	f3 0f 1e fa          	endbr64 
    42a4:	f2 ff 25 a5 dc 02 00 	bnd jmpq *0x2dca5(%rip)        # 31f50 <memset@GLIBC_2.2.5>
    42ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042b0 <memcmp@plt>:
    42b0:	f3 0f 1e fa          	endbr64 
    42b4:	f2 ff 25 9d dc 02 00 	bnd jmpq *0x2dc9d(%rip)        # 31f58 <memcmp@GLIBC_2.2.5>
    42bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042c0 <fgets@plt>:
    42c0:	f3 0f 1e fa          	endbr64 
    42c4:	f2 ff 25 95 dc 02 00 	bnd jmpq *0x2dc95(%rip)        # 31f60 <fgets@GLIBC_2.2.5>
    42cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042d0 <calloc@plt>:
    42d0:	f3 0f 1e fa          	endbr64 
    42d4:	f2 ff 25 8d dc 02 00 	bnd jmpq *0x2dc8d(%rip)        # 31f68 <calloc@GLIBC_2.2.5>
    42db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042e0 <strcmp@plt>:
    42e0:	f3 0f 1e fa          	endbr64 
    42e4:	f2 ff 25 85 dc 02 00 	bnd jmpq *0x2dc85(%rip)        # 31f70 <strcmp@GLIBC_2.2.5>
    42eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042f0 <__memcpy_chk@plt>:
    42f0:	f3 0f 1e fa          	endbr64 
    42f4:	f2 ff 25 7d dc 02 00 	bnd jmpq *0x2dc7d(%rip)        # 31f78 <__memcpy_chk@GLIBC_2.3.4>
    42fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004300 <fopen64@plt>:
    4300:	f3 0f 1e fa          	endbr64 
    4304:	f2 ff 25 75 dc 02 00 	bnd jmpq *0x2dc75(%rip)        # 31f80 <fopen64@GLIBC_2.2.5>
    430b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004310 <strtol@plt>:
    4310:	f3 0f 1e fa          	endbr64 
    4314:	f2 ff 25 6d dc 02 00 	bnd jmpq *0x2dc6d(%rip)        # 31f88 <strtol@GLIBC_2.2.5>
    431b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004320 <memcpy@plt>:
    4320:	f3 0f 1e fa          	endbr64 
    4324:	f2 ff 25 65 dc 02 00 	bnd jmpq *0x2dc65(%rip)        # 31f90 <memcpy@GLIBC_2.14>
    432b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004330 <time@plt>:
    4330:	f3 0f 1e fa          	endbr64 
    4334:	f2 ff 25 5d dc 02 00 	bnd jmpq *0x2dc5d(%rip)        # 31f98 <time@GLIBC_2.2.5>
    433b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004340 <malloc@plt>:
    4340:	f3 0f 1e fa          	endbr64 
    4344:	f2 ff 25 55 dc 02 00 	bnd jmpq *0x2dc55(%rip)        # 31fa0 <malloc@GLIBC_2.2.5>
    434b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004350 <__printf_chk@plt>:
    4350:	f3 0f 1e fa          	endbr64 
    4354:	f2 ff 25 4d dc 02 00 	bnd jmpq *0x2dc4d(%rip)        # 31fa8 <__printf_chk@GLIBC_2.3.4>
    435b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004360 <memmove@plt>:
    4360:	f3 0f 1e fa          	endbr64 
    4364:	f2 ff 25 45 dc 02 00 	bnd jmpq *0x2dc45(%rip)        # 31fb0 <memmove@GLIBC_2.2.5>
    436b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004370 <__explicit_bzero_chk@plt>:
    4370:	f3 0f 1e fa          	endbr64 
    4374:	f2 ff 25 3d dc 02 00 	bnd jmpq *0x2dc3d(%rip)        # 31fb8 <__explicit_bzero_chk@GLIBC_2.25>
    437b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004380 <__memset_chk@plt>:
    4380:	f3 0f 1e fa          	endbr64 
    4384:	f2 ff 25 35 dc 02 00 	bnd jmpq *0x2dc35(%rip)        # 31fc0 <__memset_chk@GLIBC_2.3.4>
    438b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004390 <fwrite@plt>:
    4390:	f3 0f 1e fa          	endbr64 
    4394:	f2 ff 25 2d dc 02 00 	bnd jmpq *0x2dc2d(%rip)        # 31fc8 <fwrite@GLIBC_2.2.5>
    439b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000043a0 <main>:
    43a0:	f3 0f 1e fa          	endbr64 
    43a4:	41 56                	push   %r14
    43a6:	41 55                	push   %r13
    43a8:	41 54                	push   %r12
    43aa:	49 89 f4             	mov    %rsi,%r12
    43ad:	53                   	push   %rbx
    43ae:	89 fb                	mov    %edi,%ebx
    43b0:	bf 01 00 00 00       	mov    $0x1,%edi
    43b5:	48 83 ec 48          	sub    $0x48,%rsp
    43b9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    43c0:	00 00 
    43c2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    43c7:	31 c0                	xor    %eax,%eax
    43c9:	48 89 e6             	mov    %rsp,%rsi
    43cc:	e8 6f fe ff ff       	callq  4240 <clock_gettime@plt>
    43d1:	31 c0                	xor    %eax,%eax
    43d3:	e8 48 04 00 00       	callq  4820 <foo>
    43d8:	83 fb 01             	cmp    $0x1,%ebx
    43db:	7f 6f                	jg     444c <main+0xac>
    43dd:	e8 0e 05 00 00       	callq  48f0 <cf_init_target>
    43e2:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    43e7:	45 31 ed             	xor    %r13d,%r13d
    43ea:	45 31 e4             	xor    %r12d,%r12d
    43ed:	bf 01 00 00 00       	mov    $0x1,%edi
    43f2:	e8 49 fe ff ff       	callq  4240 <clock_gettime@plt>
    43f7:	41 83 f4 01          	xor    $0x1,%r12d
    43fb:	48 8d 1d 5e dc 02 00 	lea    0x2dc5e(%rip),%rbx        # 32060 <state.4967>
    4402:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4408:	45 85 ed             	test   %r13d,%r13d
    440b:	40 0f 94 c7          	sete   %dil
    440f:	44 09 e7             	or     %r12d,%edi
    4412:	40 0f b6 ff          	movzbl %dil,%edi
    4416:	e8 15 05 00 00       	callq  4930 <cf_run_target>
    441b:	e8 10 03 00 00       	callq  4730 <drop_taint>
    4420:	48 8d 15 19 dc 02 00 	lea    0x2dc19(%rip),%rdx        # 32040 <m>
    4427:	eb 10                	jmp    4439 <main+0x99>
    4429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4430:	48 83 c2 01          	add    $0x1,%rdx
    4434:	48 39 d3             	cmp    %rdx,%rbx
    4437:	74 05                	je     443e <main+0x9e>
    4439:	80 02 01             	addb   $0x1,(%rdx)
    443c:	74 f2                	je     4430 <main+0x90>
    443e:	41 8d 45 ff          	lea    -0x1(%r13),%eax
    4442:	45 85 ed             	test   %r13d,%r13d
    4445:	7e 79                	jle    44c0 <main+0x120>
    4447:	41 89 c5             	mov    %eax,%r13d
    444a:	eb bc                	jmp    4408 <main+0x68>
    444c:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    4451:	31 f6                	xor    %esi,%esi
    4453:	ba 0a 00 00 00       	mov    $0xa,%edx
    4458:	e8 b3 fe ff ff       	callq  4310 <strtol@plt>
    445d:	48 8d 35 af 9b 01 00 	lea    0x19baf(%rip),%rsi        # 1e013 <_IO_stdin_used+0x13>
    4464:	bf 01 00 00 00       	mov    $0x1,%edi
    4469:	49 89 c6             	mov    %rax,%r14
    446c:	89 c2                	mov    %eax,%edx
    446e:	31 c0                	xor    %eax,%eax
    4470:	e8 db fe ff ff       	callq  4350 <__printf_chk@plt>
    4475:	83 fb 02             	cmp    $0x2,%ebx
    4478:	0f 84 67 01 00 00    	je     45e5 <main+0x245>
    447e:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    4483:	48 8d 35 9c 9b 01 00 	lea    0x19b9c(%rip),%rsi        # 1e026 <_IO_stdin_used+0x26>
    448a:	45 31 e4             	xor    %r12d,%r12d
    448d:	e8 4e fe ff ff       	callq  42e0 <strcmp@plt>
    4492:	85 c0                	test   %eax,%eax
    4494:	0f 84 34 01 00 00    	je     45ce <main+0x22e>
    449a:	e8 51 04 00 00       	callq  48f0 <cf_init_target>
    449f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    44a4:	bf 01 00 00 00       	mov    $0x1,%edi
    44a9:	45 8d 6e ff          	lea    -0x1(%r14),%r13d
    44ad:	e8 8e fd ff ff       	callq  4240 <clock_gettime@plt>
    44b2:	45 85 f6             	test   %r14d,%r14d
    44b5:	0f 8f 3c ff ff ff    	jg     43f7 <main+0x57>
    44bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    44c0:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    44c5:	bf 01 00 00 00       	mov    $0x1,%edi
    44ca:	e8 71 fd ff ff       	callq  4240 <clock_gettime@plt>
    44cf:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    44d4:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    44d9:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    44e0:	9b c4 20 
    44e3:	48 89 f9             	mov    %rdi,%rcx
    44e6:	48 2b 4c 24 08       	sub    0x8(%rsp),%rcx
    44eb:	4d 89 c5             	mov    %r8,%r13
    44ee:	4c 2b 2c 24          	sub    (%rsp),%r13
    44f2:	48 89 c8             	mov    %rcx,%rax
    44f5:	4d 69 ed 40 42 0f 00 	imul   $0xf4240,%r13,%r13
    44fc:	48 c1 f9 3f          	sar    $0x3f,%rcx
    4500:	48 f7 ee             	imul   %rsi
    4503:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    4508:	48 29 f8             	sub    %rdi,%rax
    450b:	48 c1 fa 07          	sar    $0x7,%rdx
    450f:	48 89 c7             	mov    %rax,%rdi
    4512:	48 29 ca             	sub    %rcx,%rdx
    4515:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    451a:	48 c1 ff 3f          	sar    $0x3f,%rdi
    451e:	49 01 d5             	add    %rdx,%r13
    4521:	48 f7 ee             	imul   %rsi
    4524:	4c 29 c1             	sub    %r8,%rcx
    4527:	48 69 c9 40 42 0f 00 	imul   $0xf4240,%rcx,%rcx
    452e:	48 89 d6             	mov    %rdx,%rsi
    4531:	48 c1 fe 07          	sar    $0x7,%rsi
    4535:	48 29 fe             	sub    %rdi,%rsi
    4538:	bf 0a 00 00 00       	mov    $0xa,%edi
    453d:	4c 8d 24 31          	lea    (%rcx,%rsi,1),%r12
    4541:	e8 ba fc ff ff       	callq  4200 <putchar@plt>
    4546:	41 b8 09 00 00 00    	mov    $0x9,%r8d
    454c:	4c 89 e9             	mov    %r13,%rcx
    454f:	ba 09 00 00 00       	mov    $0x9,%edx
    4554:	48 8d 35 e5 9a 01 00 	lea    0x19ae5(%rip),%rsi        # 1e040 <_IO_stdin_used+0x40>
    455b:	bf 01 00 00 00       	mov    $0x1,%edi
    4560:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4564:	b8 01 00 00 00       	mov    $0x1,%eax
    4569:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    456e:	f2 0f 5e 05 32 9b 01 	divsd  0x19b32(%rip),%xmm0        # 1e0a8 <_IO_stdin_used+0xa8>
    4575:	00 
    4576:	e8 d5 fd ff ff       	callq  4350 <__printf_chk@plt>
    457b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    457f:	41 b8 09 00 00 00    	mov    $0x9,%r8d
    4585:	4c 89 e1             	mov    %r12,%rcx
    4588:	ba 09 00 00 00       	mov    $0x9,%edx
    458d:	bf 01 00 00 00       	mov    $0x1,%edi
    4592:	b8 01 00 00 00       	mov    $0x1,%eax
    4597:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
    459c:	48 8d 35 bd 9a 01 00 	lea    0x19abd(%rip),%rsi        # 1e060 <_IO_stdin_used+0x60>
    45a3:	f2 0f 5e 05 fd 9a 01 	divsd  0x19afd(%rip),%xmm0        # 1e0a8 <_IO_stdin_used+0xa8>
    45aa:	00 
    45ab:	e8 a0 fd ff ff       	callq  4350 <__printf_chk@plt>
    45b0:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    45b5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    45bc:	00 00 
    45be:	75 2d                	jne    45ed <main+0x24d>
    45c0:	48 83 c4 48          	add    $0x48,%rsp
    45c4:	31 c0                	xor    %eax,%eax
    45c6:	5b                   	pop    %rbx
    45c7:	41 5c                	pop    %r12
    45c9:	41 5d                	pop    %r13
    45cb:	41 5e                	pop    %r14
    45cd:	c3                   	retq   
    45ce:	48 8d 3d 56 9a 01 00 	lea    0x19a56(%rip),%rdi        # 1e02b <_IO_stdin_used+0x2b>
    45d5:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    45db:	e8 30 fc ff ff       	callq  4210 <puts@plt>
    45e0:	e9 b5 fe ff ff       	jmpq   449a <main+0xfa>
    45e5:	45 31 e4             	xor    %r12d,%r12d
    45e8:	e9 ad fe ff ff       	jmpq   449a <main+0xfa>
    45ed:	e8 7e fc ff ff       	callq  4270 <__stack_chk_fail@plt>
    45f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    45f9:	00 00 00 
    45fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004600 <_start>:
    4600:	f3 0f 1e fa          	endbr64 
    4604:	31 ed                	xor    %ebp,%ebp
    4606:	49 89 d1             	mov    %rdx,%r9
    4609:	5e                   	pop    %rsi
    460a:	48 89 e2             	mov    %rsp,%rdx
    460d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    4611:	50                   	push   %rax
    4612:	54                   	push   %rsp
    4613:	4c 8d 05 c6 8d 01 00 	lea    0x18dc6(%rip),%r8        # 1d3e0 <__libc_csu_fini>
    461a:	48 8d 0d 4f 8d 01 00 	lea    0x18d4f(%rip),%rcx        # 1d370 <__libc_csu_init>
    4621:	48 8d 3d 78 fd ff ff 	lea    -0x288(%rip),%rdi        # 43a0 <main>
    4628:	ff 15 aa d9 02 00    	callq  *0x2d9aa(%rip)        # 31fd8 <__libc_start_main@GLIBC_2.2.5>
    462e:	f4                   	hlt    
    462f:	90                   	nop

0000000000004630 <deregister_tm_clones>:
    4630:	48 8d 3d 51 da 02 00 	lea    0x2da51(%rip),%rdi        # 32088 <__TMC_END__>
    4637:	48 8d 05 4a da 02 00 	lea    0x2da4a(%rip),%rax        # 32088 <__TMC_END__>
    463e:	48 39 f8             	cmp    %rdi,%rax
    4641:	74 15                	je     4658 <deregister_tm_clones+0x28>
    4643:	48 8b 05 86 d9 02 00 	mov    0x2d986(%rip),%rax        # 31fd0 <_ITM_deregisterTMCloneTable>
    464a:	48 85 c0             	test   %rax,%rax
    464d:	74 09                	je     4658 <deregister_tm_clones+0x28>
    464f:	ff e0                	jmpq   *%rax
    4651:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4658:	c3                   	retq   
    4659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004660 <register_tm_clones>:
    4660:	48 8d 3d 21 da 02 00 	lea    0x2da21(%rip),%rdi        # 32088 <__TMC_END__>
    4667:	48 8d 35 1a da 02 00 	lea    0x2da1a(%rip),%rsi        # 32088 <__TMC_END__>
    466e:	48 29 fe             	sub    %rdi,%rsi
    4671:	48 89 f0             	mov    %rsi,%rax
    4674:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4678:	48 c1 f8 03          	sar    $0x3,%rax
    467c:	48 01 c6             	add    %rax,%rsi
    467f:	48 d1 fe             	sar    %rsi
    4682:	74 14                	je     4698 <register_tm_clones+0x38>
    4684:	48 8b 05 65 d9 02 00 	mov    0x2d965(%rip),%rax        # 31ff0 <_ITM_registerTMCloneTable>
    468b:	48 85 c0             	test   %rax,%rax
    468e:	74 08                	je     4698 <register_tm_clones+0x38>
    4690:	ff e0                	jmpq   *%rax
    4692:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4698:	c3                   	retq   
    4699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000046a0 <__do_global_dtors_aux>:
    46a0:	f3 0f 1e fa          	endbr64 
    46a4:	80 3d f5 d9 02 00 00 	cmpb   $0x0,0x2d9f5(%rip)        # 320a0 <completed.8061>
    46ab:	75 2b                	jne    46d8 <__do_global_dtors_aux+0x38>
    46ad:	55                   	push   %rbp
    46ae:	48 83 3d 42 d9 02 00 	cmpq   $0x0,0x2d942(%rip)        # 31ff8 <__cxa_finalize@GLIBC_2.2.5>
    46b5:	00 
    46b6:	48 89 e5             	mov    %rsp,%rbp
    46b9:	74 0c                	je     46c7 <__do_global_dtors_aux+0x27>
    46bb:	48 8b 3d 46 d9 02 00 	mov    0x2d946(%rip),%rdi        # 32008 <__dso_handle>
    46c2:	e8 19 fb ff ff       	callq  41e0 <__cxa_finalize@plt>
    46c7:	e8 64 ff ff ff       	callq  4630 <deregister_tm_clones>
    46cc:	c6 05 cd d9 02 00 01 	movb   $0x1,0x2d9cd(%rip)        # 320a0 <completed.8061>
    46d3:	5d                   	pop    %rbp
    46d4:	c3                   	retq   
    46d5:	0f 1f 00             	nopl   (%rax)
    46d8:	c3                   	retq   
    46d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000046e0 <frame_dummy>:
    46e0:	f3 0f 1e fa          	endbr64 
    46e4:	e9 77 ff ff ff       	jmpq   4660 <register_tm_clones>
    46e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000046f0 <classify>:
    46f0:	f3 0f 1e fa          	endbr64 
    46f4:	55                   	push   %rbp
    46f5:	48 89 e5             	mov    %rsp,%rbp
    46f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46fc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    46ff:	90                   	nop
    4700:	5d                   	pop    %rbp
    4701:	c3                   	retq   
    4702:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4709:	00 00 00 00 
    470d:	0f 1f 00             	nopl   (%rax)

0000000000004710 <declassify>:
    4710:	f3 0f 1e fa          	endbr64 
    4714:	55                   	push   %rbp
    4715:	48 89 e5             	mov    %rsp,%rbp
    4718:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    471c:	89 75 f4             	mov    %esi,-0xc(%rbp)
    471f:	90                   	nop
    4720:	5d                   	pop    %rbp
    4721:	c3                   	retq   
    4722:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4729:	00 00 00 00 
    472d:	0f 1f 00             	nopl   (%rax)

0000000000004730 <drop_taint>:
    4730:	f3 0f 1e fa          	endbr64 
    4734:	55                   	push   %rbp
    4735:	48 89 e5             	mov    %rsp,%rbp
    4738:	90                   	nop
    4739:	5d                   	pop    %rbp
    473a:	c3                   	retq   
    473b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004740 <dump_secret>:
    4740:	f3 0f 1e fa          	endbr64 
    4744:	41 57                	push   %r15
    4746:	49 89 ff             	mov    %rdi,%r15
    4749:	41 56                	push   %r14
    474b:	49 89 d6             	mov    %rdx,%r14
    474e:	48 63 d6             	movslq %esi,%rdx
    4751:	41 55                	push   %r13
    4753:	48 89 d7             	mov    %rdx,%rdi
    4756:	41 54                	push   %r12
    4758:	53                   	push   %rbx
    4759:	89 f3                	mov    %esi,%ebx
    475b:	48 83 ec 10          	sub    $0x10,%rsp
    475f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    4764:	e8 d7 fb ff ff       	callq  4340 <malloc@plt>
    4769:	bf 04 00 00 00       	mov    $0x4,%edi
    476e:	49 89 c5             	mov    %rax,%r13
    4771:	e8 ca fb ff ff       	callq  4340 <malloc@plt>
    4776:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    477b:	4c 89 fe             	mov    %r15,%rsi
    477e:	4c 89 ef             	mov    %r13,%rdi
    4781:	49 89 c4             	mov    %rax,%r12
    4784:	e8 97 fb ff ff       	callq  4320 <memcpy@plt>
    4789:	be 04 00 00 00       	mov    $0x4,%esi
    478e:	4c 89 e7             	mov    %r12,%rdi
    4791:	41 89 1c 24          	mov    %ebx,(%r12)
    4795:	e8 76 ff ff ff       	callq  4710 <declassify>
    479a:	41 8b 34 24          	mov    (%r12),%esi
    479e:	4c 89 ef             	mov    %r13,%rdi
    47a1:	e8 6a ff ff ff       	callq  4710 <declassify>
    47a6:	4d 85 f6             	test   %r14,%r14
    47a9:	74 16                	je     47c1 <dump_secret+0x81>
    47ab:	4c 89 f2             	mov    %r14,%rdx
    47ae:	48 8d 35 53 98 01 00 	lea    0x19853(%rip),%rsi        # 1e008 <_IO_stdin_used+0x8>
    47b5:	bf 01 00 00 00       	mov    $0x1,%edi
    47ba:	31 c0                	xor    %eax,%eax
    47bc:	e8 8f fb ff ff       	callq  4350 <__printf_chk@plt>
    47c1:	41 8b 04 24          	mov    (%r12),%eax
    47c5:	85 c0                	test   %eax,%eax
    47c7:	7e 2e                	jle    47f7 <dump_secret+0xb7>
    47c9:	31 db                	xor    %ebx,%ebx
    47cb:	4c 8d 35 3b 98 01 00 	lea    0x1983b(%rip),%r14        # 1e00d <_IO_stdin_used+0xd>
    47d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    47d8:	41 0f b6 54 1d 00    	movzbl 0x0(%r13,%rbx,1),%edx
    47de:	4c 89 f6             	mov    %r14,%rsi
    47e1:	bf 01 00 00 00       	mov    $0x1,%edi
    47e6:	31 c0                	xor    %eax,%eax
    47e8:	48 83 c3 01          	add    $0x1,%rbx
    47ec:	e8 5f fb ff ff       	callq  4350 <__printf_chk@plt>
    47f1:	41 39 1c 24          	cmp    %ebx,(%r12)
    47f5:	7f e1                	jg     47d8 <dump_secret+0x98>
    47f7:	bf 0a 00 00 00       	mov    $0xa,%edi
    47fc:	e8 ff f9 ff ff       	callq  4200 <putchar@plt>
    4801:	4c 89 ef             	mov    %r13,%rdi
    4804:	e8 e7 f9 ff ff       	callq  41f0 <free@plt>
    4809:	48 83 c4 10          	add    $0x10,%rsp
    480d:	5b                   	pop    %rbx
    480e:	41 5c                	pop    %r12
    4810:	41 5d                	pop    %r13
    4812:	41 5e                	pop    %r14
    4814:	41 5f                	pop    %r15
    4816:	c3                   	retq   
    4817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    481e:	00 00 

0000000000004820 <foo>:
    4820:	f3 0f 1e fa          	endbr64 
    4824:	55                   	push   %rbp
    4825:	48 89 e5             	mov    %rsp,%rbp
    4828:	48 83 ec 10          	sub    $0x10,%rsp
    482c:	bf 04 00 00 00       	mov    $0x4,%edi
    4831:	e8 0a fb ff ff       	callq  4340 <malloc@plt>
    4836:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    483a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    483e:	48 89 c7             	mov    %rax,%rdi
    4841:	e8 aa f9 ff ff       	callq  41f0 <free@plt>
    4846:	90                   	nop
    4847:	c9                   	leaveq 
    4848:	c3                   	retq   
    4849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004850 <myrng>:
    4850:	f3 0f 1e fa          	endbr64 
    4854:	48 85 d2             	test   %rdx,%rdx
    4857:	0f 84 8c 00 00 00    	je     48e9 <myrng+0x99>
    485d:	41 57                	push   %r15
    485f:	45 31 ff             	xor    %r15d,%r15d
    4862:	41 56                	push   %r14
    4864:	49 89 f6             	mov    %rsi,%r14
    4867:	41 55                	push   %r13
    4869:	49 89 d5             	mov    %rdx,%r13
    486c:	41 54                	push   %r12
    486e:	4c 8d 25 eb d8 02 00 	lea    0x2d8eb(%rip),%r12        # 32160 <rngCtx>
    4875:	53                   	push   %rbx
    4876:	31 db                	xor    %ebx,%ebx
    4878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    487f:	00 
    4880:	31 f6                	xor    %esi,%esi
    4882:	4c 89 e7             	mov    %r12,%rdi
    4885:	e8 b6 df 00 00       	callq  12840 <mbedtls_sha256_starts>
    488a:	48 8d 35 2f d8 02 00 	lea    0x2d82f(%rip),%rsi        # 320c0 <rngState>
    4891:	4c 89 e7             	mov    %r12,%rdi
    4894:	ba 20 00 00 00       	mov    $0x20,%edx
    4899:	e8 82 ed 00 00       	callq  13620 <mbedtls_sha256_update>
    489e:	48 8d 35 1b d8 02 00 	lea    0x2d81b(%rip),%rsi        # 320c0 <rngState>
    48a5:	4c 89 e7             	mov    %r12,%rdi
    48a8:	e8 93 ed 00 00       	callq  13640 <mbedtls_sha256_finish>
    48ad:	49 39 dd             	cmp    %rbx,%r13
    48b0:	76 1f                	jbe    48d1 <myrng+0x81>
    48b2:	48 8d 0d 07 d8 02 00 	lea    0x2d807(%rip),%rcx        # 320c0 <rngState>
    48b9:	48 89 d8             	mov    %rbx,%rax
    48bc:	48 29 d9             	sub    %rbx,%rcx
    48bf:	90                   	nop
    48c0:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
    48c4:	41 88 14 06          	mov    %dl,(%r14,%rax,1)
    48c8:	48 83 c0 01          	add    $0x1,%rax
    48cc:	49 39 c5             	cmp    %rax,%r13
    48cf:	75 ef                	jne    48c0 <myrng+0x70>
    48d1:	41 83 c7 20          	add    $0x20,%r15d
    48d5:	49 63 df             	movslq %r15d,%rbx
    48d8:	4c 39 eb             	cmp    %r13,%rbx
    48db:	72 a3                	jb     4880 <myrng+0x30>
    48dd:	5b                   	pop    %rbx
    48de:	31 c0                	xor    %eax,%eax
    48e0:	41 5c                	pop    %r12
    48e2:	41 5d                	pop    %r13
    48e4:	41 5e                	pop    %r14
    48e6:	41 5f                	pop    %r15
    48e8:	c3                   	retq   
    48e9:	31 c0                	xor    %eax,%eax
    48eb:	c3                   	retq   
    48ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000048f0 <cf_init_target>:
    48f0:	f3 0f 1e fa          	endbr64 
    48f4:	41 54                	push   %r12
    48f6:	48 8d 3d 63 d8 02 00 	lea    0x2d863(%rip),%rdi        # 32160 <rngCtx>
    48fd:	e8 9e de 00 00       	callq  127a0 <mbedtls_sha256_init>
    4902:	bf 00 04 00 00       	mov    $0x400,%edi
    4907:	e8 34 fa ff ff       	callq  4340 <malloc@plt>
    490c:	ba 00 04 00 00       	mov    $0x400,%edx
    4911:	31 ff                	xor    %edi,%edi
    4913:	49 89 c4             	mov    %rax,%r12
    4916:	48 89 c6             	mov    %rax,%rsi
    4919:	e8 32 ff ff ff       	callq  4850 <myrng>
    491e:	4c 89 e7             	mov    %r12,%rdi
    4921:	e8 ca f8 ff ff       	callq  41f0 <free@plt>
    4926:	41 5c                	pop    %r12
    4928:	c3                   	retq   
    4929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004930 <cf_run_target>:
    4930:	f3 0f 1e fa          	endbr64 
    4934:	41 55                	push   %r13
    4936:	be 20 00 00 00       	mov    $0x20,%esi
    493b:	41 54                	push   %r12
    493d:	53                   	push   %rbx
    493e:	89 fb                	mov    %edi,%ebx
    4940:	48 8d 3d d9 d6 02 00 	lea    0x2d6d9(%rip),%rdi        # 32020 <key>
    4947:	48 81 ec d0 02 00 00 	sub    $0x2d0,%rsp
    494e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4955:	00 00 
    4957:	48 89 84 24 c8 02 00 	mov    %rax,0x2c8(%rsp)
    495e:	00 
    495f:	31 c0                	xor    %eax,%eax
    4961:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    4966:	4c 8d ac 24 70 01 00 	lea    0x170(%rsp),%r13
    496d:	00 
    496e:	e8 7d fd ff ff       	callq  46f0 <classify>
    4973:	4c 89 e7             	mov    %r12,%rdi
    4976:	e8 a5 25 00 00       	callq  6f20 <mbedtls_ecp_keypair_init>
    497b:	4c 89 e6             	mov    %r12,%rsi
    497e:	b9 20 00 00 00       	mov    $0x20,%ecx
    4983:	48 8d 15 96 d6 02 00 	lea    0x2d696(%rip),%rdx        # 32020 <key>
    498a:	bf 03 00 00 00       	mov    $0x3,%edi
    498f:	e8 9c 4e 00 00       	callq  9830 <mbedtls_ecp_read_key>
    4994:	4c 89 ef             	mov    %r13,%rdi
    4997:	e8 74 0e 00 00       	callq  5810 <mbedtls_ecdsa_init>
    499c:	4c 89 e6             	mov    %r12,%rsi
    499f:	4c 89 ef             	mov    %r13,%rdi
    49a2:	e8 f9 0d 00 00       	callq  57a0 <mbedtls_ecdsa_from_keypair>
    49a7:	85 c0                	test   %eax,%eax
    49a9:	0f 85 91 00 00 00    	jne    4a40 <cf_run_target+0x110>
    49af:	bf 00 02 00 00       	mov    $0x200,%edi
    49b4:	e8 87 f9 ff ff       	callq  4340 <malloc@plt>
    49b9:	48 83 ec 20          	sub    $0x20,%rsp
    49bd:	4c 89 ef             	mov    %r13,%rdi
    49c0:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    49c7:	00 00 
    49c9:	49 89 c4             	mov    %rax,%r12
    49cc:	41 b9 00 02 00 00    	mov    $0x200,%r9d
    49d2:	48 8d 05 77 fe ff ff 	lea    -0x189(%rip),%rax        # 4850 <myrng>
    49d9:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    49e0:	00 00 
    49e2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    49e7:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
    49ec:	4d 89 e0             	mov    %r12,%r8
    49ef:	b9 20 00 00 00       	mov    $0x20,%ecx
    49f4:	48 89 04 24          	mov    %rax,(%rsp)
    49f8:	48 8d 15 41 d6 02 00 	lea    0x2d641(%rip),%rdx        # 32040 <m>
    49ff:	be 04 00 00 00       	mov    $0x4,%esi
    4a04:	e8 e7 0b 00 00       	callq  55f0 <mbedtls_ecdsa_write_signature>
    4a09:	48 83 c4 20          	add    $0x20,%rsp
    4a0d:	85 c0                	test   %eax,%eax
    4a0f:	75 5f                	jne    4a70 <cf_run_target+0x140>
    4a11:	84 db                	test   %bl,%bl
    4a13:	75 43                	jne    4a58 <cf_run_target+0x128>
    4a15:	4c 89 e7             	mov    %r12,%rdi
    4a18:	e8 d3 f7 ff ff       	callq  41f0 <free@plt>
    4a1d:	48 8b 84 24 c8 02 00 	mov    0x2c8(%rsp),%rax
    4a24:	00 
    4a25:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4a2c:	00 00 
    4a2e:	75 4e                	jne    4a7e <cf_run_target+0x14e>
    4a30:	48 81 c4 d0 02 00 00 	add    $0x2d0,%rsp
    4a37:	5b                   	pop    %rbx
    4a38:	41 5c                	pop    %r12
    4a3a:	41 5d                	pop    %r13
    4a3c:	c3                   	retq   
    4a3d:	0f 1f 00             	nopl   (%rax)
    4a40:	48 8d 3d 39 96 01 00 	lea    0x19639(%rip),%rdi        # 1e080 <_IO_stdin_used+0x80>
    4a47:	e8 c4 f7 ff ff       	callq  4210 <puts@plt>
    4a4c:	e9 5e ff ff ff       	jmpq   49af <cf_run_target+0x7f>
    4a51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4a58:	8b 74 24 08          	mov    0x8(%rsp),%esi
    4a5c:	48 8d 15 3b 96 01 00 	lea    0x1963b(%rip),%rdx        # 1e09e <_IO_stdin_used+0x9e>
    4a63:	4c 89 e7             	mov    %r12,%rdi
    4a66:	e8 d5 fc ff ff       	callq  4740 <dump_secret>
    4a6b:	eb a8                	jmp    4a15 <cf_run_target+0xe5>
    4a6d:	0f 1f 00             	nopl   (%rax)
    4a70:	48 8d 3d 1c 96 01 00 	lea    0x1961c(%rip),%rdi        # 1e093 <_IO_stdin_used+0x93>
    4a77:	e8 94 f7 ff ff       	callq  4210 <puts@plt>
    4a7c:	eb 93                	jmp    4a11 <cf_run_target+0xe1>
    4a7e:	e8 ed f7 ff ff       	callq  4270 <__stack_chk_fail@plt>
    4a83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4a8a:	00 00 00 00 
    4a8e:	66 90                	xchg   %ax,%ax

0000000000004a90 <cf_prepare_next>:
    4a90:	f3 0f 1e fa          	endbr64 
    4a94:	48 8d 15 a5 d5 02 00 	lea    0x2d5a5(%rip),%rdx        # 32040 <m>
    4a9b:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    4a9f:	eb 10                	jmp    4ab1 <cf_prepare_next+0x21>
    4aa1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4aa8:	48 83 c2 01          	add    $0x1,%rdx
    4aac:	48 39 ca             	cmp    %rcx,%rdx
    4aaf:	74 05                	je     4ab6 <cf_prepare_next+0x26>
    4ab1:	80 02 01             	addb   $0x1,(%rdx)
    4ab4:	74 f2                	je     4aa8 <cf_prepare_next+0x18>
    4ab6:	c3                   	retq   
    4ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4abe:	00 00 

0000000000004ac0 <derive_mpi>:
    4ac0:	41 56                	push   %r14
    4ac2:	49 89 fe             	mov    %rdi,%r14
    4ac5:	41 55                	push   %r13
    4ac7:	41 54                	push   %r12
    4ac9:	49 89 f4             	mov    %rsi,%r12
    4acc:	48 89 d6             	mov    %rdx,%rsi
    4acf:	53                   	push   %rbx
    4ad0:	48 89 cb             	mov    %rcx,%rbx
    4ad3:	48 83 ec 08          	sub    $0x8,%rsp
    4ad7:	48 8b 87 b8 00 00 00 	mov    0xb8(%rdi),%rax
    4ade:	4c 89 e7             	mov    %r12,%rdi
    4ae1:	48 83 c0 07          	add    $0x7,%rax
    4ae5:	48 c1 e8 03          	shr    $0x3,%rax
    4ae9:	48 39 c8             	cmp    %rcx,%rax
    4aec:	48 0f 46 d8          	cmovbe %rax,%rbx
    4af0:	48 89 da             	mov    %rbx,%rdx
    4af3:	e8 a8 1e 01 00       	callq  169a0 <mbedtls_mpi_read_binary>
    4af8:	41 89 c5             	mov    %eax,%r13d
    4afb:	85 c0                	test   %eax,%eax
    4afd:	75 3c                	jne    4b3b <derive_mpi+0x7b>
    4aff:	49 8b 96 b8 00 00 00 	mov    0xb8(%r14),%rdx
    4b06:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    4b0d:	00 
    4b0e:	48 39 d0             	cmp    %rdx,%rax
    4b11:	76 12                	jbe    4b25 <derive_mpi+0x65>
    4b13:	48 29 d0             	sub    %rdx,%rax
    4b16:	4c 89 e7             	mov    %r12,%rdi
    4b19:	48 89 c6             	mov    %rax,%rsi
    4b1c:	e8 3f 20 01 00       	callq  16b60 <mbedtls_mpi_shift_r>
    4b21:	85 c0                	test   %eax,%eax
    4b23:	75 4b                	jne    4b70 <derive_mpi+0xb0>
    4b25:	49 81 c6 98 00 00 00 	add    $0x98,%r14
    4b2c:	4c 89 e7             	mov    %r12,%rdi
    4b2f:	4c 89 f6             	mov    %r14,%rsi
    4b32:	e8 19 21 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    4b37:	85 c0                	test   %eax,%eax
    4b39:	79 15                	jns    4b50 <derive_mpi+0x90>
    4b3b:	48 83 c4 08          	add    $0x8,%rsp
    4b3f:	44 89 e8             	mov    %r13d,%eax
    4b42:	5b                   	pop    %rbx
    4b43:	41 5c                	pop    %r12
    4b45:	41 5d                	pop    %r13
    4b47:	41 5e                	pop    %r14
    4b49:	c3                   	retq   
    4b4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4b50:	48 83 c4 08          	add    $0x8,%rsp
    4b54:	4c 89 f2             	mov    %r14,%rdx
    4b57:	4c 89 e6             	mov    %r12,%rsi
    4b5a:	4c 89 e7             	mov    %r12,%rdi
    4b5d:	5b                   	pop    %rbx
    4b5e:	41 5c                	pop    %r12
    4b60:	41 5d                	pop    %r13
    4b62:	41 5e                	pop    %r14
    4b64:	e9 37 25 01 00       	jmpq   170a0 <mbedtls_mpi_sub_mpi>
    4b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4b70:	f3 0f 1e fa          	endbr64 
    4b74:	48 83 c4 08          	add    $0x8,%rsp
    4b78:	41 89 c5             	mov    %eax,%r13d
    4b7b:	5b                   	pop    %rbx
    4b7c:	44 89 e8             	mov    %r13d,%eax
    4b7f:	41 5c                	pop    %r12
    4b81:	41 5d                	pop    %r13
    4b83:	41 5e                	pop    %r14
    4b85:	c3                   	retq   
    4b86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4b8d:	00 00 00 

0000000000004b90 <mbedtls_ecdsa_sign_restartable>:
    4b90:	f3 0f 1e fa          	endbr64 
    4b94:	41 57                	push   %r15
    4b96:	41 56                	push   %r14
    4b98:	41 55                	push   %r13
    4b9a:	41 54                	push   %r12
    4b9c:	55                   	push   %rbp
    4b9d:	53                   	push   %rbx
    4b9e:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    4ba5:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
    4bac:	00 
    4bad:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
    4bb2:	41 b8 80 b0 ff ff    	mov    $0xffffb080,%r8d
    4bb8:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    4bbd:	4c 8b a4 24 60 01 00 	mov    0x160(%rsp),%r12
    4bc4:	00 
    4bc5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4bca:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
    4bd1:	00 
    4bd2:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    4bd7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4bdc:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
    4be3:	00 
    4be4:	4c 89 4c 24 50       	mov    %r9,0x50(%rsp)
    4be9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4bee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4bf5:	00 00 
    4bf7:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    4bfe:	00 
    4bff:	31 c0                	xor    %eax,%eax
    4c01:	8b 07                	mov    (%rdi),%eax
    4c03:	83 e0 fb             	and    $0xfffffffb,%eax
    4c06:	83 f8 09             	cmp    $0x9,%eax
    4c09:	0f 84 4c 01 00 00    	je     4d5b <mbedtls_ecdsa_sign_restartable+0x1cb>
    4c0f:	48 83 bf a8 00 00 00 	cmpq   $0x0,0xa8(%rdi)
    4c16:	00 
    4c17:	48 89 fb             	mov    %rdi,%rbx
    4c1a:	0f 84 3b 01 00 00    	je     4d5b <mbedtls_ecdsa_sign_restartable+0x1cb>
    4c20:	48 89 f5             	mov    %rsi,%rbp
    4c23:	48 89 cf             	mov    %rcx,%rdi
    4c26:	be 01 00 00 00       	mov    $0x1,%esi
    4c2b:	e8 10 21 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    4c30:	85 c0                	test   %eax,%eax
    4c32:	0f 88 b8 02 00 00    	js     4ef0 <mbedtls_ecdsa_sign_restartable+0x360>
    4c38:	4c 8d bb 98 00 00 00 	lea    0x98(%rbx),%r15
    4c3f:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    4c44:	4c 89 fe             	mov    %r15,%rsi
    4c47:	e8 04 20 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    4c4c:	85 c0                	test   %eax,%eax
    4c4e:	0f 89 9c 02 00 00    	jns    4ef0 <mbedtls_ecdsa_sign_restartable+0x360>
    4c54:	4c 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%r14
    4c5b:	00 
    4c5c:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
    4c61:	4c 89 f7             	mov    %r14,%rdi
    4c64:	e8 e7 21 00 00       	callq  6e50 <mbedtls_ecp_point_init>
    4c69:	4c 89 ef             	mov    %r13,%rdi
    4c6c:	e8 df 16 01 00       	callq  16350 <mbedtls_mpi_init>
    4c71:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    4c78:	00 
    4c79:	48 89 c7             	mov    %rax,%rdi
    4c7c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    4c81:	e8 ca 16 01 00       	callq  16350 <mbedtls_mpi_init>
    4c86:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    4c8d:	00 
    4c8e:	48 89 c7             	mov    %rax,%rdi
    4c91:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    4c96:	e8 b5 16 01 00       	callq  16350 <mbedtls_mpi_init>
    4c9b:	48 8d 43 50          	lea    0x50(%rbx),%rax
    4c9f:	c7 44 24 5c 0b 00 00 	movl   $0xb,0x5c(%rsp)
    4ca6:	00 
    4ca7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4cac:	c7 44 24 58 0b 00 00 	movl   $0xb,0x58(%rsp)
    4cb3:	00 
    4cb4:	0f 1f 40 00          	nopl   0x0(%rax)
    4cb8:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    4cbd:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    4cc2:	4c 89 ee             	mov    %r13,%rsi
    4cc5:	48 89 df             	mov    %rbx,%rdi
    4cc8:	e8 83 49 00 00       	callq  9650 <mbedtls_ecp_gen_privkey>
    4ccd:	85 c0                	test   %eax,%eax
    4ccf:	0f 85 bb 00 00 00    	jne    4d90 <mbedtls_ecdsa_sign_restartable+0x200>
    4cd5:	48 83 ec 08          	sub    $0x8,%rsp
    4cd9:	4c 89 ea             	mov    %r13,%rdx
    4cdc:	4d 89 e0             	mov    %r12,%r8
    4cdf:	4c 89 f6             	mov    %r14,%rsi
    4ce2:	6a 00                	pushq  $0x0
    4ce4:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4ce9:	48 89 df             	mov    %rbx,%rdi
    4cec:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    4cf1:	e8 fa 43 00 00       	callq  90f0 <mbedtls_ecp_mul_restartable>
    4cf6:	5a                   	pop    %rdx
    4cf7:	59                   	pop    %rcx
    4cf8:	85 c0                	test   %eax,%eax
    4cfa:	0f 85 90 00 00 00    	jne    4d90 <mbedtls_ecdsa_sign_restartable+0x200>
    4d00:	4c 89 fa             	mov    %r15,%rdx
    4d03:	4c 89 f6             	mov    %r14,%rsi
    4d06:	48 89 ef             	mov    %rbp,%rdi
    4d09:	e8 f2 34 01 00       	callq  18200 <mbedtls_mpi_mod_mpi>
    4d0e:	85 c0                	test   %eax,%eax
    4d10:	75 7e                	jne    4d90 <mbedtls_ecdsa_sign_restartable+0x200>
    4d12:	31 f6                	xor    %esi,%esi
    4d14:	48 89 ef             	mov    %rbp,%rdi
    4d17:	e8 24 20 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    4d1c:	85 c0                	test   %eax,%eax
    4d1e:	75 78                	jne    4d98 <mbedtls_ecdsa_sign_restartable+0x208>
    4d20:	83 6c 24 58 01       	subl   $0x1,0x58(%rsp)
    4d25:	75 91                	jne    4cb8 <mbedtls_ecdsa_sign_restartable+0x128>
    4d27:	41 b8 00 b3 ff ff    	mov    $0xffffb300,%r8d
    4d2d:	4c 89 f7             	mov    %r14,%rdi
    4d30:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    4d35:	e8 16 22 00 00       	callq  6f50 <mbedtls_ecp_point_free>
    4d3a:	4c 89 ef             	mov    %r13,%rdi
    4d3d:	e8 2e 16 01 00       	callq  16370 <mbedtls_mpi_free>
    4d42:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    4d47:	e8 24 16 01 00       	callq  16370 <mbedtls_mpi_free>
    4d4c:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    4d51:	e8 1a 16 01 00       	callq  16370 <mbedtls_mpi_free>
    4d56:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
    4d5b:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    4d62:	00 
    4d63:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4d6a:	00 00 
    4d6c:	0f 85 89 01 00 00    	jne    4efb <mbedtls_ecdsa_sign_restartable+0x36b>
    4d72:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    4d79:	44 89 c0             	mov    %r8d,%eax
    4d7c:	5b                   	pop    %rbx
    4d7d:	5d                   	pop    %rbp
    4d7e:	41 5c                	pop    %r12
    4d80:	41 5d                	pop    %r13
    4d82:	41 5e                	pop    %r14
    4d84:	41 5f                	pop    %r15
    4d86:	c3                   	retq   
    4d87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4d8e:	00 00 
    4d90:	41 89 c0             	mov    %eax,%r8d
    4d93:	eb 98                	jmp    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4d95:	0f 1f 00             	nopl   (%rax)
    4d98:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    4d9d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    4da2:	48 89 df             	mov    %rbx,%rdi
    4da5:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    4daa:	e8 11 fd ff ff       	callq  4ac0 <derive_mpi>
    4daf:	41 89 c0             	mov    %eax,%r8d
    4db2:	85 c0                	test   %eax,%eax
    4db4:	0f 85 73 ff ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4dba:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    4dbf:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    4dc4:	4c 89 e2             	mov    %r12,%rdx
    4dc7:	48 89 df             	mov    %rbx,%rdi
    4dca:	e8 81 48 00 00       	callq  9650 <mbedtls_ecp_gen_privkey>
    4dcf:	41 89 c0             	mov    %eax,%r8d
    4dd2:	85 c0                	test   %eax,%eax
    4dd4:	0f 85 53 ff ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4dda:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    4ddf:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    4de4:	48 89 ee             	mov    %rbp,%rsi
    4de7:	e8 a4 23 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    4dec:	41 89 c0             	mov    %eax,%r8d
    4def:	85 c0                	test   %eax,%eax
    4df1:	0f 85 36 ff ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4df7:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    4dfc:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4e01:	48 89 c6             	mov    %rax,%rsi
    4e04:	48 89 c7             	mov    %rax,%rdi
    4e07:	e8 84 22 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    4e0c:	41 89 c0             	mov    %eax,%r8d
    4e0f:	85 c0                	test   %eax,%eax
    4e11:	0f 85 16 ff ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4e17:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    4e1c:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    4e21:	48 89 f7             	mov    %rsi,%rdi
    4e24:	e8 67 23 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    4e29:	41 89 c0             	mov    %eax,%r8d
    4e2c:	85 c0                	test   %eax,%eax
    4e2e:	0f 85 f9 fe ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4e34:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    4e39:	4c 89 ee             	mov    %r13,%rsi
    4e3c:	4c 89 ef             	mov    %r13,%rdi
    4e3f:	e8 4c 23 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    4e44:	41 89 c0             	mov    %eax,%r8d
    4e47:	85 c0                	test   %eax,%eax
    4e49:	0f 85 de fe ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4e4f:	4c 89 fa             	mov    %r15,%rdx
    4e52:	4c 89 ee             	mov    %r13,%rsi
    4e55:	4c 89 ef             	mov    %r13,%rdi
    4e58:	e8 a3 33 01 00       	callq  18200 <mbedtls_mpi_mod_mpi>
    4e5d:	41 89 c0             	mov    %eax,%r8d
    4e60:	85 c0                	test   %eax,%eax
    4e62:	0f 85 c5 fe ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4e68:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    4e6d:	4c 89 fa             	mov    %r15,%rdx
    4e70:	4c 89 ee             	mov    %r13,%rsi
    4e73:	e8 b8 4e 01 00       	callq  19d30 <mbedtls_mpi_inv_mod>
    4e78:	41 89 c0             	mov    %eax,%r8d
    4e7b:	85 c0                	test   %eax,%eax
    4e7d:	0f 85 aa fe ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4e83:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    4e88:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    4e8d:	48 89 f7             	mov    %rsi,%rdi
    4e90:	e8 fb 22 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    4e95:	41 89 c0             	mov    %eax,%r8d
    4e98:	85 c0                	test   %eax,%eax
    4e9a:	0f 85 8d fe ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4ea0:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    4ea5:	4c 89 fa             	mov    %r15,%rdx
    4ea8:	48 89 f7             	mov    %rsi,%rdi
    4eab:	e8 50 33 01 00       	callq  18200 <mbedtls_mpi_mod_mpi>
    4eb0:	41 89 c0             	mov    %eax,%r8d
    4eb3:	85 c0                	test   %eax,%eax
    4eb5:	0f 85 72 fe ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4ebb:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    4ec0:	31 f6                	xor    %esi,%esi
    4ec2:	89 44 24 58          	mov    %eax,0x58(%rsp)
    4ec6:	e8 75 1e 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    4ecb:	44 8b 44 24 58       	mov    0x58(%rsp),%r8d
    4ed0:	85 c0                	test   %eax,%eax
    4ed2:	0f 85 55 fe ff ff    	jne    4d2d <mbedtls_ecdsa_sign_restartable+0x19d>
    4ed8:	83 6c 24 5c 01       	subl   $0x1,0x5c(%rsp)
    4edd:	0f 84 44 fe ff ff    	je     4d27 <mbedtls_ecdsa_sign_restartable+0x197>
    4ee3:	e9 c4 fd ff ff       	jmpq   4cac <mbedtls_ecdsa_sign_restartable+0x11c>
    4ee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4eef:	00 
    4ef0:	41 b8 80 b3 ff ff    	mov    $0xffffb380,%r8d
    4ef6:	e9 60 fe ff ff       	jmpq   4d5b <mbedtls_ecdsa_sign_restartable+0x1cb>
    4efb:	e8 70 f3 ff ff       	callq  4270 <__stack_chk_fail@plt>

0000000000004f00 <mbedtls_ecdsa_can_do>:
    4f00:	f3 0f 1e fa          	endbr64 
    4f04:	83 e7 fb             	and    $0xfffffffb,%edi
    4f07:	31 c0                	xor    %eax,%eax
    4f09:	83 ff 09             	cmp    $0x9,%edi
    4f0c:	0f 95 c0             	setne  %al
    4f0f:	c3                   	retq   

0000000000004f10 <mbedtls_ecdsa_sign>:
    4f10:	f3 0f 1e fa          	endbr64 
    4f14:	48 83 ec 10          	sub    $0x10,%rsp
    4f18:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4f1d:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    4f22:	6a 00                	pushq  $0x0
    4f24:	41 52                	push   %r10
    4f26:	50                   	push   %rax
    4f27:	41 52                	push   %r10
    4f29:	50                   	push   %rax
    4f2a:	e8 61 fc ff ff       	callq  4b90 <mbedtls_ecdsa_sign_restartable>
    4f2f:	48 83 c4 38          	add    $0x38,%rsp
    4f33:	c3                   	retq   
    4f34:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4f3b:	00 00 00 00 
    4f3f:	90                   	nop

0000000000004f40 <mbedtls_ecdsa_sign_det_restartable>:
    4f40:	f3 0f 1e fa          	endbr64 
    4f44:	41 57                	push   %r15
    4f46:	41 56                	push   %r14
    4f48:	41 55                	push   %r13
    4f4a:	49 89 cd             	mov    %rcx,%r13
    4f4d:	41 54                	push   %r12
    4f4f:	55                   	push   %rbp
    4f50:	48 89 fd             	mov    %rdi,%rbp
    4f53:	53                   	push   %rbx
    4f54:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
    4f5b:	48 8b 84 24 b8 01 00 	mov    0x1b8(%rsp),%rax
    4f62:	00 
    4f63:	48 8b 9c 24 c8 01 00 	mov    0x1c8(%rsp),%rbx
    4f6a:	00 
    4f6b:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    4f70:	48 8b 8c 24 c0 01 00 	mov    0x1c0(%rsp),%rcx
    4f77:	00 
    4f78:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    4f7d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4f82:	48 8b 85 b8 00 00 00 	mov    0xb8(%rbp),%rax
    4f89:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    4f8e:	4c 89 04 24          	mov    %r8,(%rsp)
    4f92:	48 8d 58 07          	lea    0x7(%rax),%rbx
    4f96:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    4f9b:	48 c1 eb 03          	shr    $0x3,%rbx
    4f9f:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    4fa4:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
    4fab:	00 00 
    4fad:	48 89 bc 24 68 01 00 	mov    %rdi,0x168(%rsp)
    4fb4:	00 
    4fb5:	31 ff                	xor    %edi,%edi
    4fb7:	8b bc 24 b0 01 00 00 	mov    0x1b0(%rsp),%edi
    4fbe:	e8 3d 83 00 00       	callq  d300 <mbedtls_md_info_from_type>
    4fc3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4fc8:	48 85 c0             	test   %rax,%rax
    4fcb:	0f 84 f6 00 00 00    	je     50c7 <mbedtls_ecdsa_sign_det_restartable+0x187>
    4fd1:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
    4fd6:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
    4fdb:	4c 89 f7             	mov    %r14,%rdi
    4fde:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
    4fe5:	00 
    4fe6:	e8 65 13 01 00       	callq  16350 <mbedtls_mpi_init>
    4feb:	4c 89 e7             	mov    %r12,%rdi
    4fee:	e8 dd 75 00 00       	callq  c5d0 <mbedtls_hmac_drbg_init>
    4ff3:	48 89 da             	mov    %rbx,%rdx
    4ff6:	4c 89 fe             	mov    %r15,%rsi
    4ff9:	4c 89 ef             	mov    %r13,%rdi
    4ffc:	e8 0f 1a 01 00       	callq  16a10 <mbedtls_mpi_write_binary>
    5001:	85 c0                	test   %eax,%eax
    5003:	74 43                	je     5048 <mbedtls_ecdsa_sign_det_restartable+0x108>
    5005:	4c 89 e7             	mov    %r12,%rdi
    5008:	89 04 24             	mov    %eax,(%rsp)
    500b:	e8 00 7d 00 00       	callq  cd10 <mbedtls_hmac_drbg_free>
    5010:	4c 89 f7             	mov    %r14,%rdi
    5013:	e8 58 13 01 00       	callq  16370 <mbedtls_mpi_free>
    5018:	8b 04 24             	mov    (%rsp),%eax
    501b:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
    5022:	00 
    5023:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    502a:	00 00 
    502c:	0f 85 9f 00 00 00    	jne    50d1 <mbedtls_ecdsa_sign_det_restartable+0x191>
    5032:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
    5039:	5b                   	pop    %rbx
    503a:	5d                   	pop    %rbp
    503b:	41 5c                	pop    %r12
    503d:	41 5d                	pop    %r13
    503f:	41 5e                	pop    %r14
    5041:	41 5f                	pop    %r15
    5043:	c3                   	retq   
    5044:	0f 1f 40 00          	nopl   0x0(%rax)
    5048:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    504d:	48 8b 14 24          	mov    (%rsp),%rdx
    5051:	4c 89 f6             	mov    %r14,%rsi
    5054:	48 89 ef             	mov    %rbp,%rdi
    5057:	e8 64 fa ff ff       	callq  4ac0 <derive_mpi>
    505c:	85 c0                	test   %eax,%eax
    505e:	75 a5                	jne    5005 <mbedtls_ecdsa_sign_det_restartable+0xc5>
    5060:	49 8d 34 1f          	lea    (%r15,%rbx,1),%rsi
    5064:	48 89 da             	mov    %rbx,%rdx
    5067:	4c 89 f7             	mov    %r14,%rdi
    506a:	e8 a1 19 01 00       	callq  16a10 <mbedtls_mpi_write_binary>
    506f:	85 c0                	test   %eax,%eax
    5071:	75 92                	jne    5005 <mbedtls_ecdsa_sign_det_restartable+0xc5>
    5073:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    5078:	48 8d 0c 1b          	lea    (%rbx,%rbx,1),%rcx
    507c:	4c 89 fa             	mov    %r15,%rdx
    507f:	4c 89 e7             	mov    %r12,%rdi
    5082:	e8 39 78 00 00       	callq  c8c0 <mbedtls_hmac_drbg_seed_buf>
    5087:	48 83 ec 08          	sub    $0x8,%rsp
    508b:	4c 89 e9             	mov    %r13,%rcx
    508e:	48 89 ef             	mov    %rbp,%rdi
    5091:	ff 74 24 40          	pushq  0x40(%rsp)
    5095:	ff 74 24 40          	pushq  0x40(%rsp)
    5099:	ff 74 24 40          	pushq  0x40(%rsp)
    509d:	41 54                	push   %r12
    509f:	ff 35 43 cf 02 00    	pushq  0x2cf43(%rip)        # 31fe8 <_GLOBAL_OFFSET_TABLE_+0x108>
    50a5:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    50aa:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    50af:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    50b4:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    50b9:	e8 d2 fa ff ff       	callq  4b90 <mbedtls_ecdsa_sign_restartable>
    50be:	48 83 c4 30          	add    $0x30,%rsp
    50c2:	e9 3e ff ff ff       	jmpq   5005 <mbedtls_ecdsa_sign_det_restartable+0xc5>
    50c7:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    50cc:	e9 4a ff ff ff       	jmpq   501b <mbedtls_ecdsa_sign_det_restartable+0xdb>
    50d1:	e8 9a f1 ff ff       	callq  4270 <__stack_chk_fail@plt>
    50d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    50dd:	00 00 00 

00000000000050e0 <mbedtls_ecdsa_sign_det_ext>:
    50e0:	f3 0f 1e fa          	endbr64 
    50e4:	48 83 ec 08          	sub    $0x8,%rsp
    50e8:	6a 00                	pushq  $0x0
    50ea:	ff 74 24 28          	pushq  0x28(%rsp)
    50ee:	ff 74 24 28          	pushq  0x28(%rsp)
    50f2:	8b 44 24 28          	mov    0x28(%rsp),%eax
    50f6:	50                   	push   %rax
    50f7:	e8 44 fe ff ff       	callq  4f40 <mbedtls_ecdsa_sign_det_restartable>
    50fc:	48 83 c4 28          	add    $0x28,%rsp
    5100:	c3                   	retq   
    5101:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5108:	00 00 00 00 
    510c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005110 <mbedtls_ecdsa_verify_restartable>:
    5110:	f3 0f 1e fa          	endbr64 
    5114:	41 57                	push   %r15
    5116:	41 56                	push   %r14
    5118:	41 55                	push   %r13
    511a:	41 54                	push   %r12
    511c:	55                   	push   %rbp
    511d:	48 89 fd             	mov    %rdi,%rbp
    5120:	53                   	push   %rbx
    5121:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
    5128:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    512d:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    5132:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
    5137:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    513c:	4c 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%r15
    5143:	00 
    5144:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
    5149:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    514e:	4c 89 ff             	mov    %r15,%rdi
    5151:	48 8d 9c 24 90 00 00 	lea    0x90(%rsp),%rbx
    5158:	00 
    5159:	4c 89 04 24          	mov    %r8,(%rsp)
    515d:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    5162:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5169:	00 00 
    516b:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
    5172:	00 
    5173:	31 c0                	xor    %eax,%eax
    5175:	e8 d6 1c 00 00       	callq  6e50 <mbedtls_ecp_point_init>
    517a:	4c 89 e7             	mov    %r12,%rdi
    517d:	e8 ce 11 01 00       	callq  16350 <mbedtls_mpi_init>
    5182:	4c 89 ef             	mov    %r13,%rdi
    5185:	e8 c6 11 01 00       	callq  16350 <mbedtls_mpi_init>
    518a:	4c 89 f7             	mov    %r14,%rdi
    518d:	e8 be 11 01 00       	callq  16350 <mbedtls_mpi_init>
    5192:	48 89 df             	mov    %rbx,%rdi
    5195:	e8 b6 11 01 00       	callq  16350 <mbedtls_mpi_init>
    519a:	8b 55 00             	mov    0x0(%rbp),%edx
    519d:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    51a2:	83 e2 fb             	and    $0xfffffffb,%edx
    51a5:	83 fa 09             	cmp    $0x9,%edx
    51a8:	74 6b                	je     5215 <mbedtls_ecdsa_verify_restartable+0x105>
    51aa:	48 83 bd a8 00 00 00 	cmpq   $0x0,0xa8(%rbp)
    51b1:	00 
    51b2:	74 61                	je     5215 <mbedtls_ecdsa_verify_restartable+0x105>
    51b4:	48 8b 3c 24          	mov    (%rsp),%rdi
    51b8:	be 01 00 00 00       	mov    $0x1,%esi
    51bd:	e8 7e 1b 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    51c2:	85 c0                	test   %eax,%eax
    51c4:	78 1c                	js     51e2 <mbedtls_ecdsa_verify_restartable+0xd2>
    51c6:	48 8d 85 98 00 00 00 	lea    0x98(%rbp),%rax
    51cd:	48 8b 3c 24          	mov    (%rsp),%rdi
    51d1:	48 89 c6             	mov    %rax,%rsi
    51d4:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    51d9:	e8 72 1a 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    51de:	85 c0                	test   %eax,%eax
    51e0:	78 5e                	js     5240 <mbedtls_ecdsa_verify_restartable+0x130>
    51e2:	b8 00 b2 ff ff       	mov    $0xffffb200,%eax
    51e7:	4c 89 ff             	mov    %r15,%rdi
    51ea:	89 04 24             	mov    %eax,(%rsp)
    51ed:	e8 5e 1d 00 00       	callq  6f50 <mbedtls_ecp_point_free>
    51f2:	4c 89 e7             	mov    %r12,%rdi
    51f5:	e8 76 11 01 00       	callq  16370 <mbedtls_mpi_free>
    51fa:	4c 89 ef             	mov    %r13,%rdi
    51fd:	e8 6e 11 01 00       	callq  16370 <mbedtls_mpi_free>
    5202:	4c 89 f7             	mov    %r14,%rdi
    5205:	e8 66 11 01 00       	callq  16370 <mbedtls_mpi_free>
    520a:	48 89 df             	mov    %rbx,%rdi
    520d:	e8 5e 11 01 00       	callq  16370 <mbedtls_mpi_free>
    5212:	8b 04 24             	mov    (%rsp),%eax
    5215:	48 8b 9c 24 f8 00 00 	mov    0xf8(%rsp),%rbx
    521c:	00 
    521d:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    5224:	00 00 
    5226:	0f 85 3a 01 00 00    	jne    5366 <mbedtls_ecdsa_verify_restartable+0x256>
    522c:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
    5233:	5b                   	pop    %rbx
    5234:	5d                   	pop    %rbp
    5235:	41 5c                	pop    %r12
    5237:	41 5d                	pop    %r13
    5239:	41 5e                	pop    %r14
    523b:	41 5f                	pop    %r15
    523d:	c3                   	retq   
    523e:	66 90                	xchg   %ax,%ax
    5240:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5245:	be 01 00 00 00       	mov    $0x1,%esi
    524a:	e8 f1 1a 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    524f:	85 c0                	test   %eax,%eax
    5251:	78 8f                	js     51e2 <mbedtls_ecdsa_verify_restartable+0xd2>
    5253:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    5258:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    525d:	e8 ee 19 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    5262:	85 c0                	test   %eax,%eax
    5264:	0f 89 78 ff ff ff    	jns    51e2 <mbedtls_ecdsa_verify_restartable+0xd2>
    526a:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    526f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    5274:	4c 89 e6             	mov    %r12,%rsi
    5277:	48 89 ef             	mov    %rbp,%rdi
    527a:	e8 41 f8 ff ff       	callq  4ac0 <derive_mpi>
    527f:	85 c0                	test   %eax,%eax
    5281:	0f 85 60 ff ff ff    	jne    51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    5287:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    528c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    5291:	4c 89 ef             	mov    %r13,%rdi
    5294:	e8 97 4a 01 00       	callq  19d30 <mbedtls_mpi_inv_mod>
    5299:	85 c0                	test   %eax,%eax
    529b:	0f 85 46 ff ff ff    	jne    51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    52a1:	4c 89 ea             	mov    %r13,%rdx
    52a4:	4c 89 e6             	mov    %r12,%rsi
    52a7:	4c 89 f7             	mov    %r14,%rdi
    52aa:	e8 e1 1e 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    52af:	85 c0                	test   %eax,%eax
    52b1:	0f 85 30 ff ff ff    	jne    51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    52b7:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    52bc:	4c 89 f6             	mov    %r14,%rsi
    52bf:	4c 89 f7             	mov    %r14,%rdi
    52c2:	e8 39 2f 01 00       	callq  18200 <mbedtls_mpi_mod_mpi>
    52c7:	85 c0                	test   %eax,%eax
    52c9:	0f 85 18 ff ff ff    	jne    51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    52cf:	48 8b 34 24          	mov    (%rsp),%rsi
    52d3:	4c 89 ea             	mov    %r13,%rdx
    52d6:	48 89 df             	mov    %rbx,%rdi
    52d9:	e8 b2 1e 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    52de:	85 c0                	test   %eax,%eax
    52e0:	0f 85 01 ff ff ff    	jne    51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    52e6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    52eb:	48 89 de             	mov    %rbx,%rsi
    52ee:	48 89 df             	mov    %rbx,%rdi
    52f1:	e8 0a 2f 01 00       	callq  18200 <mbedtls_mpi_mod_mpi>
    52f6:	85 c0                	test   %eax,%eax
    52f8:	0f 85 e9 fe ff ff    	jne    51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    52fe:	50                   	push   %rax
    52ff:	48 8d 4d 50          	lea    0x50(%rbp),%rcx
    5303:	4c 89 f2             	mov    %r14,%rdx
    5306:	49 89 d8             	mov    %rbx,%r8
    5309:	6a 00                	pushq  $0x0
    530b:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    5310:	4c 89 fe             	mov    %r15,%rsi
    5313:	48 89 ef             	mov    %rbp,%rdi
    5316:	e8 f5 40 00 00       	callq  9410 <mbedtls_ecp_muladd_restartable>
    531b:	5a                   	pop    %rdx
    531c:	59                   	pop    %rcx
    531d:	85 c0                	test   %eax,%eax
    531f:	0f 85 c2 fe ff ff    	jne    51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    5325:	4c 89 ff             	mov    %r15,%rdi
    5328:	e8 b3 25 00 00       	callq  78e0 <mbedtls_ecp_is_zero>
    532d:	85 c0                	test   %eax,%eax
    532f:	0f 85 ad fe ff ff    	jne    51e2 <mbedtls_ecdsa_verify_restartable+0xd2>
    5335:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    533a:	4c 89 fe             	mov    %r15,%rsi
    533d:	4c 89 ff             	mov    %r15,%rdi
    5340:	e8 bb 2e 01 00       	callq  18200 <mbedtls_mpi_mod_mpi>
    5345:	85 c0                	test   %eax,%eax
    5347:	0f 85 9a fe ff ff    	jne    51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    534d:	48 8b 34 24          	mov    (%rsp),%rsi
    5351:	4c 89 ff             	mov    %r15,%rdi
    5354:	e8 f7 18 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    5359:	85 c0                	test   %eax,%eax
    535b:	0f 84 86 fe ff ff    	je     51e7 <mbedtls_ecdsa_verify_restartable+0xd7>
    5361:	e9 7c fe ff ff       	jmpq   51e2 <mbedtls_ecdsa_verify_restartable+0xd2>
    5366:	e8 05 ef ff ff       	callq  4270 <__stack_chk_fail@plt>
    536b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005370 <mbedtls_ecdsa_verify>:
    5370:	f3 0f 1e fa          	endbr64 
    5374:	48 83 ec 10          	sub    $0x10,%rsp
    5378:	6a 00                	pushq  $0x0
    537a:	e8 91 fd ff ff       	callq  5110 <mbedtls_ecdsa_verify_restartable>
    537f:	48 83 c4 18          	add    $0x18,%rsp
    5383:	c3                   	retq   
    5384:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    538b:	00 00 00 00 
    538f:	90                   	nop

0000000000005390 <mbedtls_ecdsa_write_signature_restartable>:
    5390:	f3 0f 1e fa          	endbr64 
    5394:	41 57                	push   %r15
    5396:	49 89 d7             	mov    %rdx,%r15
    5399:	41 56                	push   %r14
    539b:	41 55                	push   %r13
    539d:	41 89 f5             	mov    %esi,%r13d
    53a0:	41 54                	push   %r12
    53a2:	55                   	push   %rbp
    53a3:	53                   	push   %rbx
    53a4:	48 89 cb             	mov    %rcx,%rbx
    53a7:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    53ae:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    53b3:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
    53ba:	00 
    53bb:	48 8b 94 24 70 01 00 	mov    0x170(%rsp),%rdx
    53c2:	00 
    53c3:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
    53ca:	00 
    53cb:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    53d0:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    53d5:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
    53dc:	00 
    53dd:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    53e2:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    53e7:	64 48 8b 34 25 28 00 	mov    %fs:0x28,%rsi
    53ee:	00 00 
    53f0:	48 89 b4 24 18 01 00 	mov    %rsi,0x118(%rsp)
    53f7:	00 
    53f8:	31 f6                	xor    %esi,%esi
    53fa:	48 85 c0             	test   %rax,%rax
    53fd:	48 89 04 24          	mov    %rax,(%rsp)
    5401:	0f 84 c1 01 00 00    	je     55c8 <mbedtls_ecdsa_write_signature_restartable+0x238>
    5407:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
    540c:	48 8d 6c 24 60       	lea    0x60(%rsp),%rbp
    5411:	49 89 fc             	mov    %rdi,%r12
    5414:	4c 89 f7             	mov    %r14,%rdi
    5417:	e8 34 0f 01 00       	callq  16350 <mbedtls_mpi_init>
    541c:	48 89 ef             	mov    %rbp,%rdi
    541f:	e8 2c 0f 01 00       	callq  16350 <mbedtls_mpi_init>
    5424:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    5429:	4c 89 e7             	mov    %r12,%rdi
    542c:	49 89 d9             	mov    %rbx,%r9
    542f:	4d 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%r11
    5436:	00 
    5437:	4c 89 f6             	mov    %r14,%rsi
    543a:	41 50                	push   %r8
    543c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    5441:	4d 89 f8             	mov    %r15,%r8
    5444:	4c 89 d9             	mov    %r11,%rcx
    5447:	52                   	push   %rdx
    5448:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    544d:	48 89 ea             	mov    %rbp,%rdx
    5450:	50                   	push   %rax
    5451:	41 55                	push   %r13
    5453:	e8 e8 fa ff ff       	callq  4f40 <mbedtls_ecdsa_sign_det_restartable>
    5458:	48 83 c4 20          	add    $0x20,%rsp
    545c:	41 89 c4             	mov    %eax,%r12d
    545f:	85 c0                	test   %eax,%eax
    5461:	74 3d                	je     54a0 <mbedtls_ecdsa_write_signature_restartable+0x110>
    5463:	4c 89 f7             	mov    %r14,%rdi
    5466:	e8 05 0f 01 00       	callq  16370 <mbedtls_mpi_free>
    546b:	48 89 ef             	mov    %rbp,%rdi
    546e:	e8 fd 0e 01 00       	callq  16370 <mbedtls_mpi_free>
    5473:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
    547a:	00 
    547b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5482:	00 00 
    5484:	0f 85 54 01 00 00    	jne    55de <mbedtls_ecdsa_write_signature_restartable+0x24e>
    548a:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    5491:	44 89 e0             	mov    %r12d,%eax
    5494:	5b                   	pop    %rbx
    5495:	5d                   	pop    %rbp
    5496:	41 5c                	pop    %r12
    5498:	41 5d                	pop    %r13
    549a:	41 5e                	pop    %r14
    549c:	41 5f                	pop    %r15
    549e:	c3                   	retq   
    549f:	90                   	nop
    54a0:	31 c0                	xor    %eax,%eax
    54a2:	4c 8d 6c 24 38       	lea    0x38(%rsp),%r13
    54a7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    54ab:	48 89 ea             	mov    %rbp,%rdx
    54ae:	48 8d 9c 24 80 00 00 	lea    0x80(%rsp),%rbx
    54b5:	00 
    54b6:	4c 89 ef             	mov    %r13,%rdi
    54b9:	66 89 84 24 08 01 00 	mov    %ax,0x108(%rsp)
    54c0:	00 
    54c1:	48 8d 84 24 0b 01 00 	lea    0x10b(%rsp),%rax
    54c8:	00 
    54c9:	48 89 de             	mov    %rbx,%rsi
    54cc:	c6 84 24 0a 01 00 00 	movb   $0x0,0x10a(%rsp)
    54d3:	00 
    54d4:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
    54db:	00 00 00 00 00 
    54e0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    54e5:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    54ec:	00 
    54ed:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
    54f4:	00 
    54f5:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
    54fc:	00 
    54fd:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
    5504:	00 
    5505:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    550c:	00 
    550d:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
    5514:	00 
    5515:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    551c:	00 
    551d:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
    5524:	00 
    5525:	e8 56 06 01 00       	callq  15b80 <mbedtls_asn1_write_mpi>
    552a:	4c 63 f8             	movslq %eax,%r15
    552d:	45 85 ff             	test   %r15d,%r15d
    5530:	78 76                	js     55a8 <mbedtls_ecdsa_write_signature_restartable+0x218>
    5532:	4c 89 f2             	mov    %r14,%rdx
    5535:	48 89 de             	mov    %rbx,%rsi
    5538:	4c 89 ef             	mov    %r13,%rdi
    553b:	e8 40 06 01 00       	callq  15b80 <mbedtls_asn1_write_mpi>
    5540:	85 c0                	test   %eax,%eax
    5542:	78 6c                	js     55b0 <mbedtls_ecdsa_write_signature_restartable+0x220>
    5544:	48 98                	cltq   
    5546:	48 89 de             	mov    %rbx,%rsi
    5549:	4c 89 ef             	mov    %r13,%rdi
    554c:	49 01 c7             	add    %rax,%r15
    554f:	4c 89 fa             	mov    %r15,%rdx
    5552:	e8 49 03 01 00       	callq  158a0 <mbedtls_asn1_write_len>
    5557:	85 c0                	test   %eax,%eax
    5559:	78 65                	js     55c0 <mbedtls_ecdsa_write_signature_restartable+0x230>
    555b:	ba 30 00 00 00       	mov    $0x30,%edx
    5560:	48 89 de             	mov    %rbx,%rsi
    5563:	4c 89 ef             	mov    %r13,%rdi
    5566:	89 04 24             	mov    %eax,(%rsp)
    5569:	e8 82 05 01 00       	callq  15af0 <mbedtls_asn1_write_tag>
    556e:	85 c0                	test   %eax,%eax
    5570:	78 3e                	js     55b0 <mbedtls_ecdsa_write_signature_restartable+0x220>
    5572:	48 63 0c 24          	movslq (%rsp),%rcx
    5576:	48 98                	cltq   
    5578:	49 01 cf             	add    %rcx,%r15
    557b:	49 01 c7             	add    %rax,%r15
    557e:	4c 39 7c 24 18       	cmp    %r15,0x18(%rsp)
    5583:	72 4e                	jb     55d3 <mbedtls_ecdsa_write_signature_restartable+0x243>
    5585:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    558a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    558f:	4c 89 fa             	mov    %r15,%rdx
    5592:	e8 89 ed ff ff       	callq  4320 <memcpy@plt>
    5597:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    559c:	4c 89 39             	mov    %r15,(%rcx)
    559f:	e9 bf fe ff ff       	jmpq   5463 <mbedtls_ecdsa_write_signature_restartable+0xd3>
    55a4:	0f 1f 40 00          	nopl   0x0(%rax)
    55a8:	45 89 fc             	mov    %r15d,%r12d
    55ab:	e9 b3 fe ff ff       	jmpq   5463 <mbedtls_ecdsa_write_signature_restartable+0xd3>
    55b0:	41 89 c4             	mov    %eax,%r12d
    55b3:	e9 ab fe ff ff       	jmpq   5463 <mbedtls_ecdsa_write_signature_restartable+0xd3>
    55b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    55bf:	00 
    55c0:	41 89 c4             	mov    %eax,%r12d
    55c3:	e9 9b fe ff ff       	jmpq   5463 <mbedtls_ecdsa_write_signature_restartable+0xd3>
    55c8:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    55ce:	e9 a0 fe ff ff       	jmpq   5473 <mbedtls_ecdsa_write_signature_restartable+0xe3>
    55d3:	41 bc 00 b1 ff ff    	mov    $0xffffb100,%r12d
    55d9:	e9 85 fe ff ff       	jmpq   5463 <mbedtls_ecdsa_write_signature_restartable+0xd3>
    55de:	e8 8d ec ff ff       	callq  4270 <__stack_chk_fail@plt>
    55e3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    55ea:	00 00 00 00 
    55ee:	66 90                	xchg   %ax,%ax

00000000000055f0 <mbedtls_ecdsa_write_signature>:
    55f0:	f3 0f 1e fa          	endbr64 
    55f4:	48 83 ec 08          	sub    $0x8,%rsp
    55f8:	6a 00                	pushq  $0x0
    55fa:	ff 74 24 28          	pushq  0x28(%rsp)
    55fe:	ff 74 24 28          	pushq  0x28(%rsp)
    5602:	ff 74 24 28          	pushq  0x28(%rsp)
    5606:	e8 85 fd ff ff       	callq  5390 <mbedtls_ecdsa_write_signature_restartable>
    560b:	48 83 c4 28          	add    $0x28,%rsp
    560f:	c3                   	retq   

0000000000005610 <mbedtls_ecdsa_read_signature_restartable>:
    5610:	f3 0f 1e fa          	endbr64 
    5614:	41 57                	push   %r15
    5616:	41 56                	push   %r14
    5618:	49 89 d6             	mov    %rdx,%r14
    561b:	41 55                	push   %r13
    561d:	41 54                	push   %r12
    561f:	49 89 fc             	mov    %rdi,%r12
    5622:	55                   	push   %rbp
    5623:	53                   	push   %rbx
    5624:	4a 8d 1c 01          	lea    (%rcx,%r8,1),%rbx
    5628:	48 83 ec 68          	sub    $0x68,%rsp
    562c:	48 89 34 24          	mov    %rsi,(%rsp)
    5630:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
    5635:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
    563a:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    563f:	4c 89 ff             	mov    %r15,%rdi
    5642:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
    5647:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    564e:	00 00 
    5650:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    5655:	31 c0                	xor    %eax,%eax
    5657:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    565c:	e8 ef 0c 01 00       	callq  16350 <mbedtls_mpi_init>
    5661:	48 89 ef             	mov    %rbp,%rdi
    5664:	e8 e7 0c 01 00       	callq  16350 <mbedtls_mpi_init>
    5669:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    566e:	48 89 de             	mov    %rbx,%rsi
    5671:	4c 89 ef             	mov    %r13,%rdi
    5674:	b9 30 00 00 00       	mov    $0x30,%ecx
    5679:	e8 92 fa 00 00       	callq  15110 <mbedtls_asn1_get_tag>
    567e:	85 c0                	test   %eax,%eax
    5680:	75 25                	jne    56a7 <mbedtls_ecdsa_read_signature_restartable+0x97>
    5682:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5687:	48 03 44 24 10       	add    0x10(%rsp),%rax
    568c:	48 39 c3             	cmp    %rax,%rbx
    568f:	0f 85 a3 00 00 00    	jne    5738 <mbedtls_ecdsa_read_signature_restartable+0x128>
    5695:	4c 89 fa             	mov    %r15,%rdx
    5698:	48 89 de             	mov    %rbx,%rsi
    569b:	4c 89 ef             	mov    %r13,%rdi
    569e:	e8 8d fb 00 00       	callq  15230 <mbedtls_asn1_get_mpi>
    56a3:	85 c0                	test   %eax,%eax
    56a5:	74 39                	je     56e0 <mbedtls_ecdsa_read_signature_restartable+0xd0>
    56a7:	44 8d a0 80 b0 ff ff 	lea    -0x4f80(%rax),%r12d
    56ae:	4c 89 ff             	mov    %r15,%rdi
    56b1:	e8 ba 0c 01 00       	callq  16370 <mbedtls_mpi_free>
    56b6:	48 89 ef             	mov    %rbp,%rdi
    56b9:	e8 b2 0c 01 00       	callq  16370 <mbedtls_mpi_free>
    56be:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    56c3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    56ca:	00 00 
    56cc:	75 75                	jne    5743 <mbedtls_ecdsa_read_signature_restartable+0x133>
    56ce:	48 83 c4 68          	add    $0x68,%rsp
    56d2:	44 89 e0             	mov    %r12d,%eax
    56d5:	5b                   	pop    %rbx
    56d6:	5d                   	pop    %rbp
    56d7:	41 5c                	pop    %r12
    56d9:	41 5d                	pop    %r13
    56db:	41 5e                	pop    %r14
    56dd:	41 5f                	pop    %r15
    56df:	c3                   	retq   
    56e0:	48 89 ea             	mov    %rbp,%rdx
    56e3:	48 89 de             	mov    %rbx,%rsi
    56e6:	4c 89 ef             	mov    %r13,%rdi
    56e9:	e8 42 fb 00 00       	callq  15230 <mbedtls_asn1_get_mpi>
    56ee:	85 c0                	test   %eax,%eax
    56f0:	75 b5                	jne    56a7 <mbedtls_ecdsa_read_signature_restartable+0x97>
    56f2:	48 83 ec 08          	sub    $0x8,%rsp
    56f6:	4c 89 f2             	mov    %r14,%rdx
    56f9:	4c 89 e7             	mov    %r12,%rdi
    56fc:	49 89 e9             	mov    %rbp,%r9
    56ff:	ff 74 24 10          	pushq  0x10(%rsp)
    5703:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    5708:	49 8d 8c 24 10 01 00 	lea    0x110(%r12),%rcx
    570f:	00 
    5710:	4d 89 f8             	mov    %r15,%r8
    5713:	e8 f8 f9 ff ff       	callq  5110 <mbedtls_ecdsa_verify_restartable>
    5718:	41 89 c4             	mov    %eax,%r12d
    571b:	58                   	pop    %rax
    571c:	5a                   	pop    %rdx
    571d:	45 85 e4             	test   %r12d,%r12d
    5720:	75 8c                	jne    56ae <mbedtls_ecdsa_read_signature_restartable+0x9e>
    5722:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
    5727:	b8 00 b4 ff ff       	mov    $0xffffb400,%eax
    572c:	44 0f 45 e0          	cmovne %eax,%r12d
    5730:	e9 79 ff ff ff       	jmpq   56ae <mbedtls_ecdsa_read_signature_restartable+0x9e>
    5735:	0f 1f 00             	nopl   (%rax)
    5738:	41 bc 1a b0 ff ff    	mov    $0xffffb01a,%r12d
    573e:	e9 6b ff ff ff       	jmpq   56ae <mbedtls_ecdsa_read_signature_restartable+0x9e>
    5743:	e8 28 eb ff ff       	callq  4270 <__stack_chk_fail@plt>
    5748:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    574f:	00 

0000000000005750 <mbedtls_ecdsa_read_signature>:
    5750:	f3 0f 1e fa          	endbr64 
    5754:	45 31 c9             	xor    %r9d,%r9d
    5757:	e9 b4 fe ff ff       	jmpq   5610 <mbedtls_ecdsa_read_signature_restartable>
    575c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005760 <mbedtls_ecdsa_genkey>:
    5760:	f3 0f 1e fa          	endbr64 
    5764:	41 54                	push   %r12
    5766:	49 89 d4             	mov    %rdx,%r12
    5769:	55                   	push   %rbp
    576a:	48 89 fd             	mov    %rdi,%rbp
    576d:	53                   	push   %rbx
    576e:	48 89 cb             	mov    %rcx,%rbx
    5771:	e8 ea 5f 00 00       	callq  b760 <mbedtls_ecp_group_load>
    5776:	85 c0                	test   %eax,%eax
    5778:	74 06                	je     5780 <mbedtls_ecdsa_genkey+0x20>
    577a:	5b                   	pop    %rbx
    577b:	5d                   	pop    %rbp
    577c:	41 5c                	pop    %r12
    577e:	c3                   	retq   
    577f:	90                   	nop
    5780:	48 8d 95 10 01 00 00 	lea    0x110(%rbp),%rdx
    5787:	49 89 d8             	mov    %rbx,%r8
    578a:	4c 89 e1             	mov    %r12,%rcx
    578d:	5b                   	pop    %rbx
    578e:	48 8d b5 f8 00 00 00 	lea    0xf8(%rbp),%rsi
    5795:	48 89 ef             	mov    %rbp,%rdi
    5798:	5d                   	pop    %rbp
    5799:	41 5c                	pop    %r12
    579b:	e9 20 40 00 00       	jmpq   97c0 <mbedtls_ecp_gen_keypair>

00000000000057a0 <mbedtls_ecdsa_from_keypair>:
    57a0:	f3 0f 1e fa          	endbr64 
    57a4:	41 54                	push   %r12
    57a6:	55                   	push   %rbp
    57a7:	48 89 fd             	mov    %rdi,%rbp
    57aa:	53                   	push   %rbx
    57ab:	48 89 f3             	mov    %rsi,%rbx
    57ae:	e8 0d 19 00 00       	callq  70c0 <mbedtls_ecp_group_copy>
    57b3:	41 89 c4             	mov    %eax,%r12d
    57b6:	85 c0                	test   %eax,%eax
    57b8:	74 16                	je     57d0 <mbedtls_ecdsa_from_keypair+0x30>
    57ba:	48 85 ed             	test   %rbp,%rbp
    57bd:	74 08                	je     57c7 <mbedtls_ecdsa_from_keypair+0x27>
    57bf:	48 89 ef             	mov    %rbp,%rdi
    57c2:	e8 69 18 00 00       	callq  7030 <mbedtls_ecp_keypair_free>
    57c7:	44 89 e0             	mov    %r12d,%eax
    57ca:	5b                   	pop    %rbx
    57cb:	5d                   	pop    %rbp
    57cc:	41 5c                	pop    %r12
    57ce:	c3                   	retq   
    57cf:	90                   	nop
    57d0:	48 8d b3 f8 00 00 00 	lea    0xf8(%rbx),%rsi
    57d7:	48 8d bd f8 00 00 00 	lea    0xf8(%rbp),%rdi
    57de:	e8 1d 0e 01 00       	callq  16600 <mbedtls_mpi_copy>
    57e3:	41 89 c4             	mov    %eax,%r12d
    57e6:	85 c0                	test   %eax,%eax
    57e8:	75 d0                	jne    57ba <mbedtls_ecdsa_from_keypair+0x1a>
    57ea:	48 8d b3 10 01 00 00 	lea    0x110(%rbx),%rsi
    57f1:	48 8d bd 10 01 00 00 	lea    0x110(%rbp),%rdi
    57f8:	e8 73 18 00 00       	callq  7070 <mbedtls_ecp_copy>
    57fd:	41 89 c4             	mov    %eax,%r12d
    5800:	85 c0                	test   %eax,%eax
    5802:	74 c3                	je     57c7 <mbedtls_ecdsa_from_keypair+0x27>
    5804:	eb b4                	jmp    57ba <mbedtls_ecdsa_from_keypair+0x1a>
    5806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    580d:	00 00 00 

0000000000005810 <mbedtls_ecdsa_init>:
    5810:	f3 0f 1e fa          	endbr64 
    5814:	e9 07 17 00 00       	jmpq   6f20 <mbedtls_ecp_keypair_init>
    5819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005820 <mbedtls_ecdsa_free>:
    5820:	f3 0f 1e fa          	endbr64 
    5824:	48 85 ff             	test   %rdi,%rdi
    5827:	74 07                	je     5830 <mbedtls_ecdsa_free+0x10>
    5829:	e9 02 18 00 00       	jmpq   7030 <mbedtls_ecp_keypair_free>
    582e:	66 90                	xchg   %ax,%ax
    5830:	c3                   	retq   
    5831:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5838:	00 00 00 
    583b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005840 <self_test_rng>:
    5840:	f3 0f 1e fa          	endbr64 
    5844:	48 85 d2             	test   %rdx,%rdx
    5847:	74 2c                	je     5875 <self_test_rng+0x35>
    5849:	8b 05 11 c8 02 00    	mov    0x2c811(%rip),%eax        # 32060 <state.4967>
    584f:	48 01 f2             	add    %rsi,%rdx
    5852:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5858:	69 c0 0d 66 19 00    	imul   $0x19660d,%eax,%eax
    585e:	48 83 c6 01          	add    $0x1,%rsi
    5862:	05 5f f3 6e 3c       	add    $0x3c6ef35f,%eax
    5867:	88 46 ff             	mov    %al,-0x1(%rsi)
    586a:	48 39 f2             	cmp    %rsi,%rdx
    586d:	75 e9                	jne    5858 <self_test_rng+0x18>
    586f:	89 05 eb c7 02 00    	mov    %eax,0x2c7eb(%rip)        # 32060 <state.4967>
    5875:	31 c0                	xor    %eax,%eax
    5877:	c3                   	retq   
    5878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    587f:	00 

0000000000005880 <ecp_modp>:
    5880:	41 54                	push   %r12
    5882:	55                   	push   %rbp
    5883:	48 89 fd             	mov    %rdi,%rbp
    5886:	53                   	push   %rbx
    5887:	48 83 be c8 00 00 00 	cmpq   $0x0,0xc8(%rsi)
    588e:	00 
    588f:	48 89 f3             	mov    %rsi,%rbx
    5892:	0f 84 e8 00 00 00    	je     5980 <ecp_modp+0x100>
    5898:	8b 17                	mov    (%rdi),%edx
    589a:	85 d2                	test   %edx,%edx
    589c:	0f 88 be 00 00 00    	js     5960 <ecp_modp+0xe0>
    58a2:	48 89 ef             	mov    %rbp,%rdi
    58a5:	e8 56 10 01 00       	callq  16900 <mbedtls_mpi_bitlen>
    58aa:	49 89 c0             	mov    %rax,%r8
    58ad:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
    58b4:	48 01 c0             	add    %rax,%rax
    58b7:	49 39 c0             	cmp    %rax,%r8
    58ba:	0f 87 af 00 00 00    	ja     596f <ecp_modp+0xef>
    58c0:	48 89 ef             	mov    %rbp,%rdi
    58c3:	ff 93 c8 00 00 00    	callq  *0xc8(%rbx)
    58c9:	48 83 c3 08          	add    $0x8,%rbx
    58cd:	41 89 c4             	mov    %eax,%r12d
    58d0:	85 c0                	test   %eax,%eax
    58d2:	74 2c                	je     5900 <ecp_modp+0x80>
    58d4:	eb 6b                	jmp    5941 <ecp_modp+0xc1>
    58d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    58dd:	00 00 00 
    58e0:	31 f6                	xor    %esi,%esi
    58e2:	48 89 ef             	mov    %rbp,%rdi
    58e5:	e8 56 14 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    58ea:	85 c0                	test   %eax,%eax
    58ec:	74 44                	je     5932 <ecp_modp+0xb2>
    58ee:	48 89 da             	mov    %rbx,%rdx
    58f1:	48 89 ee             	mov    %rbp,%rsi
    58f4:	48 89 ef             	mov    %rbp,%rdi
    58f7:	e8 94 17 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    58fc:	85 c0                	test   %eax,%eax
    58fe:	75 50                	jne    5950 <ecp_modp+0xd0>
    5900:	8b 45 00             	mov    0x0(%rbp),%eax
    5903:	85 c0                	test   %eax,%eax
    5905:	78 d9                	js     58e0 <ecp_modp+0x60>
    5907:	48 89 de             	mov    %rbx,%rsi
    590a:	48 89 ef             	mov    %rbp,%rdi
    590d:	e8 3e 13 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    5912:	85 c0                	test   %eax,%eax
    5914:	78 2b                	js     5941 <ecp_modp+0xc1>
    5916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    591d:	00 00 00 
    5920:	48 89 da             	mov    %rbx,%rdx
    5923:	48 89 ee             	mov    %rbp,%rsi
    5926:	48 89 ef             	mov    %rbp,%rdi
    5929:	e8 82 15 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    592e:	85 c0                	test   %eax,%eax
    5930:	75 1e                	jne    5950 <ecp_modp+0xd0>
    5932:	48 89 de             	mov    %rbx,%rsi
    5935:	48 89 ef             	mov    %rbp,%rdi
    5938:	e8 13 13 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    593d:	85 c0                	test   %eax,%eax
    593f:	79 df                	jns    5920 <ecp_modp+0xa0>
    5941:	44 89 e0             	mov    %r12d,%eax
    5944:	5b                   	pop    %rbx
    5945:	5d                   	pop    %rbp
    5946:	41 5c                	pop    %r12
    5948:	c3                   	retq   
    5949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5950:	41 89 c4             	mov    %eax,%r12d
    5953:	5b                   	pop    %rbx
    5954:	5d                   	pop    %rbp
    5955:	44 89 e0             	mov    %r12d,%eax
    5958:	41 5c                	pop    %r12
    595a:	c3                   	retq   
    595b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5960:	31 f6                	xor    %esi,%esi
    5962:	e8 d9 13 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    5967:	85 c0                	test   %eax,%eax
    5969:	0f 84 33 ff ff ff    	je     58a2 <ecp_modp+0x22>
    596f:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    5975:	eb ca                	jmp    5941 <ecp_modp+0xc1>
    5977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    597e:	00 00 
    5980:	5b                   	pop    %rbx
    5981:	48 8d 56 08          	lea    0x8(%rsi),%rdx
    5985:	5d                   	pop    %rbp
    5986:	48 89 fe             	mov    %rdi,%rsi
    5989:	41 5c                	pop    %r12
    598b:	e9 70 28 01 00       	jmpq   18200 <mbedtls_mpi_mod_mpi>

0000000000005990 <ecp_safe_invert_jac>:
    5990:	41 56                	push   %r14
    5992:	41 55                	push   %r13
    5994:	41 54                	push   %r12
    5996:	49 89 fc             	mov    %rdi,%r12
    5999:	55                   	push   %rbp
    599a:	48 89 f5             	mov    %rsi,%rbp
    599d:	53                   	push   %rbx
    599e:	48 83 c5 18          	add    $0x18,%rbp
    59a2:	89 d3                	mov    %edx,%ebx
    59a4:	48 83 ec 20          	sub    $0x20,%rsp
    59a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    59af:	00 00 
    59b1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    59b6:	31 c0                	xor    %eax,%eax
    59b8:	49 89 e6             	mov    %rsp,%r14
    59bb:	4c 89 f7             	mov    %r14,%rdi
    59be:	e8 8d 09 01 00       	callq  16350 <mbedtls_mpi_init>
    59c3:	31 f6                	xor    %esi,%esi
    59c5:	48 89 ef             	mov    %rbp,%rdi
    59c8:	e8 73 13 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    59cd:	49 8d 74 24 08       	lea    0x8(%r12),%rsi
    59d2:	48 89 ea             	mov    %rbp,%rdx
    59d5:	4c 89 f7             	mov    %r14,%rdi
    59d8:	41 89 c5             	mov    %eax,%r13d
    59db:	e8 c0 16 01 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    59e0:	41 89 c4             	mov    %eax,%r12d
    59e3:	85 c0                	test   %eax,%eax
    59e5:	75 18                	jne    59ff <ecp_safe_invert_jac+0x6f>
    59e7:	31 d2                	xor    %edx,%edx
    59e9:	45 85 ed             	test   %r13d,%r13d
    59ec:	4c 89 f6             	mov    %r14,%rsi
    59ef:	48 89 ef             	mov    %rbp,%rdi
    59f2:	0f 95 c2             	setne  %dl
    59f5:	21 da                	and    %ebx,%edx
    59f7:	e8 b4 73 01 00       	callq  1cdb0 <mbedtls_mpi_safe_cond_assign>
    59fc:	41 89 c4             	mov    %eax,%r12d
    59ff:	4c 89 f7             	mov    %r14,%rdi
    5a02:	e8 69 09 01 00       	callq  16370 <mbedtls_mpi_free>
    5a07:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5a0c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5a13:	00 00 
    5a15:	75 10                	jne    5a27 <ecp_safe_invert_jac+0x97>
    5a17:	48 83 c4 20          	add    $0x20,%rsp
    5a1b:	44 89 e0             	mov    %r12d,%eax
    5a1e:	5b                   	pop    %rbx
    5a1f:	5d                   	pop    %rbp
    5a20:	41 5c                	pop    %r12
    5a22:	41 5d                	pop    %r13
    5a24:	41 5e                	pop    %r14
    5a26:	c3                   	retq   
    5a27:	e8 44 e8 ff ff       	callq  4270 <__stack_chk_fail@plt>
    5a2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005a30 <mbedtls_mpi_sub_mod>:
    5a30:	41 54                	push   %r12
    5a32:	55                   	push   %rbp
    5a33:	48 89 fd             	mov    %rdi,%rbp
    5a36:	53                   	push   %rbx
    5a37:	48 89 f3             	mov    %rsi,%rbx
    5a3a:	48 89 d6             	mov    %rdx,%rsi
    5a3d:	48 89 ca             	mov    %rcx,%rdx
    5a40:	48 89 df             	mov    %rbx,%rdi
    5a43:	48 83 c5 08          	add    $0x8,%rbp
    5a47:	e8 54 16 01 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    5a4c:	41 89 c4             	mov    %eax,%r12d
    5a4f:	85 c0                	test   %eax,%eax
    5a51:	74 25                	je     5a78 <mbedtls_mpi_sub_mod+0x48>
    5a53:	eb 29                	jmp    5a7e <mbedtls_mpi_sub_mod+0x4e>
    5a55:	0f 1f 00             	nopl   (%rax)
    5a58:	31 f6                	xor    %esi,%esi
    5a5a:	48 89 df             	mov    %rbx,%rdi
    5a5d:	e8 de 12 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    5a62:	85 c0                	test   %eax,%eax
    5a64:	74 18                	je     5a7e <mbedtls_mpi_sub_mod+0x4e>
    5a66:	48 89 ea             	mov    %rbp,%rdx
    5a69:	48 89 de             	mov    %rbx,%rsi
    5a6c:	48 89 df             	mov    %rbx,%rdi
    5a6f:	e8 1c 16 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    5a74:	85 c0                	test   %eax,%eax
    5a76:	75 18                	jne    5a90 <mbedtls_mpi_sub_mod+0x60>
    5a78:	8b 03                	mov    (%rbx),%eax
    5a7a:	85 c0                	test   %eax,%eax
    5a7c:	78 da                	js     5a58 <mbedtls_mpi_sub_mod+0x28>
    5a7e:	44 89 e0             	mov    %r12d,%eax
    5a81:	5b                   	pop    %rbx
    5a82:	5d                   	pop    %rbp
    5a83:	41 5c                	pop    %r12
    5a85:	c3                   	retq   
    5a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5a8d:	00 00 00 
    5a90:	f3 0f 1e fa          	endbr64 
    5a94:	41 89 c4             	mov    %eax,%r12d
    5a97:	5b                   	pop    %rbx
    5a98:	5d                   	pop    %rbp
    5a99:	44 89 e0             	mov    %r12d,%eax
    5a9c:	41 5c                	pop    %r12
    5a9e:	c3                   	retq   
    5a9f:	90                   	nop

0000000000005aa0 <mbedtls_mpi_mul_mod>:
    5aa0:	41 54                	push   %r12
    5aa2:	49 89 fc             	mov    %rdi,%r12
    5aa5:	55                   	push   %rbp
    5aa6:	48 89 f5             	mov    %rsi,%rbp
    5aa9:	48 89 d6             	mov    %rdx,%rsi
    5aac:	48 89 ca             	mov    %rcx,%rdx
    5aaf:	48 89 ef             	mov    %rbp,%rdi
    5ab2:	48 83 ec 08          	sub    $0x8,%rsp
    5ab6:	e8 d5 16 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    5abb:	85 c0                	test   %eax,%eax
    5abd:	74 11                	je     5ad0 <mbedtls_mpi_mul_mod+0x30>
    5abf:	48 83 c4 08          	add    $0x8,%rsp
    5ac3:	5d                   	pop    %rbp
    5ac4:	41 5c                	pop    %r12
    5ac6:	c3                   	retq   
    5ac7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5ace:	00 00 
    5ad0:	4c 89 e6             	mov    %r12,%rsi
    5ad3:	48 89 ef             	mov    %rbp,%rdi
    5ad6:	e8 a5 fd ff ff       	callq  5880 <ecp_modp>
    5adb:	85 c0                	test   %eax,%eax
    5add:	75 e0                	jne    5abf <mbedtls_mpi_mul_mod+0x1f>
    5adf:	f3 0f 1e fa          	endbr64 
    5ae3:	48 83 05 4d c6 02 00 	addq   $0x1,0x2c64d(%rip)        # 32138 <mul_count>
    5aea:	01 
    5aeb:	48 83 c4 08          	add    $0x8,%rsp
    5aef:	5d                   	pop    %rbp
    5af0:	41 5c                	pop    %r12
    5af2:	c3                   	retq   
    5af3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5afa:	00 00 00 00 
    5afe:	66 90                	xchg   %ax,%ax

0000000000005b00 <ecp_select_comb>:
    5b00:	41 57                	push   %r15
    5b02:	49 89 d7             	mov    %rdx,%r15
    5b05:	41 56                	push   %r14
    5b07:	41 55                	push   %r13
    5b09:	4c 8d 6e 18          	lea    0x18(%rsi),%r13
    5b0d:	41 54                	push   %r12
    5b0f:	45 89 c4             	mov    %r8d,%r12d
    5b12:	55                   	push   %rbp
    5b13:	41 d0 ec             	shr    %r12b
    5b16:	48 89 f5             	mov    %rsi,%rbp
    5b19:	53                   	push   %rbx
    5b1a:	41 83 e4 3f          	and    $0x3f,%r12d
    5b1e:	31 db                	xor    %ebx,%ebx
    5b20:	48 83 ec 18          	sub    $0x18,%rsp
    5b24:	48 89 3c 24          	mov    %rdi,(%rsp)
    5b28:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    5b2d:	88 4c 24 0b          	mov    %cl,0xb(%rsp)
    5b31:	84 c9                	test   %cl,%cl
    5b33:	75 2b                	jne    5b60 <ecp_select_comb+0x60>
    5b35:	eb 59                	jmp    5b90 <ecp_select_comb+0x90>
    5b37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5b3e:	00 00 
    5b40:	49 8d 77 18          	lea    0x18(%r15),%rsi
    5b44:	44 89 f2             	mov    %r14d,%edx
    5b47:	4c 89 ef             	mov    %r13,%rdi
    5b4a:	e8 61 72 01 00       	callq  1cdb0 <mbedtls_mpi_safe_cond_assign>
    5b4f:	85 c0                	test   %eax,%eax
    5b51:	75 29                	jne    5b7c <ecp_select_comb+0x7c>
    5b53:	83 c3 01             	add    $0x1,%ebx
    5b56:	49 83 c7 48          	add    $0x48,%r15
    5b5a:	38 5c 24 0b          	cmp    %bl,0xb(%rsp)
    5b5e:	74 30                	je     5b90 <ecp_select_comb+0x90>
    5b60:	45 31 f6             	xor    %r14d,%r14d
    5b63:	44 38 e3             	cmp    %r12b,%bl
    5b66:	4c 89 fe             	mov    %r15,%rsi
    5b69:	48 89 ef             	mov    %rbp,%rdi
    5b6c:	41 0f 94 c6          	sete   %r14b
    5b70:	44 89 f2             	mov    %r14d,%edx
    5b73:	e8 38 72 01 00       	callq  1cdb0 <mbedtls_mpi_safe_cond_assign>
    5b78:	85 c0                	test   %eax,%eax
    5b7a:	74 c4                	je     5b40 <ecp_select_comb+0x40>
    5b7c:	48 83 c4 18          	add    $0x18,%rsp
    5b80:	5b                   	pop    %rbx
    5b81:	5d                   	pop    %rbp
    5b82:	41 5c                	pop    %r12
    5b84:	41 5d                	pop    %r13
    5b86:	41 5e                	pop    %r14
    5b88:	41 5f                	pop    %r15
    5b8a:	c3                   	retq   
    5b8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5b90:	44 0f b6 7c 24 0c    	movzbl 0xc(%rsp),%r15d
    5b96:	48 8b 3c 24          	mov    (%rsp),%rdi
    5b9a:	48 89 ee             	mov    %rbp,%rsi
    5b9d:	41 c0 ef 07          	shr    $0x7,%r15b
    5ba1:	41 0f b6 d7          	movzbl %r15b,%edx
    5ba5:	e8 e6 fd ff ff       	callq  5990 <ecp_safe_invert_jac>
    5baa:	85 c0                	test   %eax,%eax
    5bac:	75 ce                	jne    5b7c <ecp_select_comb+0x7c>
    5bae:	48 83 c4 18          	add    $0x18,%rsp
    5bb2:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    5bb6:	be 01 00 00 00       	mov    $0x1,%esi
    5bbb:	5b                   	pop    %rbx
    5bbc:	5d                   	pop    %rbp
    5bbd:	41 5c                	pop    %r12
    5bbf:	41 5d                	pop    %r13
    5bc1:	41 5e                	pop    %r14
    5bc3:	41 5f                	pop    %r15
    5bc5:	e9 a6 0b 01 00       	jmpq   16770 <mbedtls_mpi_lset>
    5bca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005bd0 <mbedtls_ecp_point_free.part.0>:
    5bd0:	53                   	push   %rbx
    5bd1:	48 89 fb             	mov    %rdi,%rbx
    5bd4:	e8 97 07 01 00       	callq  16370 <mbedtls_mpi_free>
    5bd9:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    5bdd:	e8 8e 07 01 00       	callq  16370 <mbedtls_mpi_free>
    5be2:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    5be6:	5b                   	pop    %rbx
    5be7:	e9 84 07 01 00       	jmpq   16370 <mbedtls_mpi_free>
    5bec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005bf0 <mbedtls_mpi_shift_l_mod.constprop.0>:
    5bf0:	41 54                	push   %r12
    5bf2:	55                   	push   %rbp
    5bf3:	48 89 fd             	mov    %rdi,%rbp
    5bf6:	53                   	push   %rbx
    5bf7:	48 89 f3             	mov    %rsi,%rbx
    5bfa:	be 01 00 00 00       	mov    $0x1,%esi
    5bff:	48 83 c5 08          	add    $0x8,%rbp
    5c03:	48 89 df             	mov    %rbx,%rdi
    5c06:	e8 25 0e 01 00       	callq  16a30 <mbedtls_mpi_shift_l>
    5c0b:	41 89 c4             	mov    %eax,%r12d
    5c0e:	85 c0                	test   %eax,%eax
    5c10:	74 18                	je     5c2a <mbedtls_mpi_shift_l_mod.constprop.0+0x3a>
    5c12:	eb 25                	jmp    5c39 <mbedtls_mpi_shift_l_mod.constprop.0+0x49>
    5c14:	0f 1f 40 00          	nopl   0x0(%rax)
    5c18:	48 89 ea             	mov    %rbp,%rdx
    5c1b:	48 89 de             	mov    %rbx,%rsi
    5c1e:	48 89 df             	mov    %rbx,%rdi
    5c21:	e8 8a 12 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    5c26:	85 c0                	test   %eax,%eax
    5c28:	75 1e                	jne    5c48 <mbedtls_mpi_shift_l_mod.constprop.0+0x58>
    5c2a:	48 89 ee             	mov    %rbp,%rsi
    5c2d:	48 89 df             	mov    %rbx,%rdi
    5c30:	e8 1b 10 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    5c35:	85 c0                	test   %eax,%eax
    5c37:	79 df                	jns    5c18 <mbedtls_mpi_shift_l_mod.constprop.0+0x28>
    5c39:	44 89 e0             	mov    %r12d,%eax
    5c3c:	5b                   	pop    %rbx
    5c3d:	5d                   	pop    %rbp
    5c3e:	41 5c                	pop    %r12
    5c40:	c3                   	retq   
    5c41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5c48:	f3 0f 1e fa          	endbr64 
    5c4c:	41 89 c4             	mov    %eax,%r12d
    5c4f:	5b                   	pop    %rbx
    5c50:	5d                   	pop    %rbp
    5c51:	44 89 e0             	mov    %r12d,%eax
    5c54:	41 5c                	pop    %r12
    5c56:	c3                   	retq   
    5c57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5c5e:	00 00 

0000000000005c60 <mbedtls_mpi_add_mod>:
    5c60:	41 54                	push   %r12
    5c62:	55                   	push   %rbp
    5c63:	48 89 fd             	mov    %rdi,%rbp
    5c66:	53                   	push   %rbx
    5c67:	48 89 f3             	mov    %rsi,%rbx
    5c6a:	48 89 d6             	mov    %rdx,%rsi
    5c6d:	48 89 ca             	mov    %rcx,%rdx
    5c70:	48 89 df             	mov    %rbx,%rdi
    5c73:	48 83 c5 08          	add    $0x8,%rbp
    5c77:	e8 14 14 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    5c7c:	41 89 c4             	mov    %eax,%r12d
    5c7f:	85 c0                	test   %eax,%eax
    5c81:	74 17                	je     5c9a <mbedtls_mpi_add_mod+0x3a>
    5c83:	eb 24                	jmp    5ca9 <mbedtls_mpi_add_mod+0x49>
    5c85:	0f 1f 00             	nopl   (%rax)
    5c88:	48 89 ea             	mov    %rbp,%rdx
    5c8b:	48 89 de             	mov    %rbx,%rsi
    5c8e:	48 89 df             	mov    %rbx,%rdi
    5c91:	e8 1a 12 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    5c96:	85 c0                	test   %eax,%eax
    5c98:	75 1e                	jne    5cb8 <mbedtls_mpi_add_mod+0x58>
    5c9a:	48 89 ee             	mov    %rbp,%rsi
    5c9d:	48 89 df             	mov    %rbx,%rdi
    5ca0:	e8 ab 0f 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    5ca5:	85 c0                	test   %eax,%eax
    5ca7:	79 df                	jns    5c88 <mbedtls_mpi_add_mod+0x28>
    5ca9:	44 89 e0             	mov    %r12d,%eax
    5cac:	5b                   	pop    %rbx
    5cad:	5d                   	pop    %rbp
    5cae:	41 5c                	pop    %r12
    5cb0:	c3                   	retq   
    5cb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5cb8:	f3 0f 1e fa          	endbr64 
    5cbc:	41 89 c4             	mov    %eax,%r12d
    5cbf:	5b                   	pop    %rbx
    5cc0:	5d                   	pop    %rbp
    5cc1:	44 89 e0             	mov    %r12d,%eax
    5cc4:	41 5c                	pop    %r12
    5cc6:	c3                   	retq   
    5cc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5cce:	00 00 

0000000000005cd0 <ecp_sw_rhs>:
    5cd0:	41 56                	push   %r14
    5cd2:	41 55                	push   %r13
    5cd4:	49 89 d5             	mov    %rdx,%r13
    5cd7:	41 54                	push   %r12
    5cd9:	55                   	push   %rbp
    5cda:	48 89 f5             	mov    %rsi,%rbp
    5cdd:	48 89 d6             	mov    %rdx,%rsi
    5ce0:	53                   	push   %rbx
    5ce1:	48 89 fb             	mov    %rdi,%rbx
    5ce4:	48 89 ef             	mov    %rbp,%rdi
    5ce7:	e8 a4 14 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    5cec:	41 89 c4             	mov    %eax,%r12d
    5cef:	85 c0                	test   %eax,%eax
    5cf1:	74 0d                	je     5d00 <ecp_sw_rhs+0x30>
    5cf3:	5b                   	pop    %rbx
    5cf4:	44 89 e0             	mov    %r12d,%eax
    5cf7:	5d                   	pop    %rbp
    5cf8:	41 5c                	pop    %r12
    5cfa:	41 5d                	pop    %r13
    5cfc:	41 5e                	pop    %r14
    5cfe:	c3                   	retq   
    5cff:	90                   	nop
    5d00:	48 89 de             	mov    %rbx,%rsi
    5d03:	48 89 ef             	mov    %rbp,%rdi
    5d06:	e8 75 fb ff ff       	callq  5880 <ecp_modp>
    5d0b:	41 89 c4             	mov    %eax,%r12d
    5d0e:	85 c0                	test   %eax,%eax
    5d10:	75 e1                	jne    5cf3 <ecp_sw_rhs+0x23>
    5d12:	48 83 05 1e c4 02 00 	addq   $0x1,0x2c41e(%rip)        # 32138 <mul_count>
    5d19:	01 
    5d1a:	48 83 7b 30 00       	cmpq   $0x0,0x30(%rbx)
    5d1f:	0f 84 db 00 00 00    	je     5e00 <ecp_sw_rhs+0x130>
    5d25:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    5d29:	48 89 ee             	mov    %rbp,%rsi
    5d2c:	4c 8d 73 08          	lea    0x8(%rbx),%r14
    5d30:	48 89 ef             	mov    %rbp,%rdi
    5d33:	e8 58 13 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    5d38:	41 89 c4             	mov    %eax,%r12d
    5d3b:	85 c0                	test   %eax,%eax
    5d3d:	74 1e                	je     5d5d <ecp_sw_rhs+0x8d>
    5d3f:	eb b2                	jmp    5cf3 <ecp_sw_rhs+0x23>
    5d41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5d48:	4c 89 f2             	mov    %r14,%rdx
    5d4b:	48 89 ee             	mov    %rbp,%rsi
    5d4e:	48 89 ef             	mov    %rbp,%rdi
    5d51:	e8 5a 11 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    5d56:	41 89 c4             	mov    %eax,%r12d
    5d59:	85 c0                	test   %eax,%eax
    5d5b:	75 96                	jne    5cf3 <ecp_sw_rhs+0x23>
    5d5d:	4c 89 f6             	mov    %r14,%rsi
    5d60:	48 89 ef             	mov    %rbp,%rdi
    5d63:	e8 e8 0e 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    5d68:	85 c0                	test   %eax,%eax
    5d6a:	79 dc                	jns    5d48 <ecp_sw_rhs+0x78>
    5d6c:	4c 89 ea             	mov    %r13,%rdx
    5d6f:	48 89 ee             	mov    %rbp,%rsi
    5d72:	48 89 ef             	mov    %rbp,%rdi
    5d75:	e8 16 14 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    5d7a:	41 89 c4             	mov    %eax,%r12d
    5d7d:	85 c0                	test   %eax,%eax
    5d7f:	0f 85 6e ff ff ff    	jne    5cf3 <ecp_sw_rhs+0x23>
    5d85:	48 89 de             	mov    %rbx,%rsi
    5d88:	48 89 ef             	mov    %rbp,%rdi
    5d8b:	e8 f0 fa ff ff       	callq  5880 <ecp_modp>
    5d90:	41 89 c4             	mov    %eax,%r12d
    5d93:	85 c0                	test   %eax,%eax
    5d95:	0f 85 58 ff ff ff    	jne    5cf3 <ecp_sw_rhs+0x23>
    5d9b:	48 8d 53 38          	lea    0x38(%rbx),%rdx
    5d9f:	48 89 ee             	mov    %rbp,%rsi
    5da2:	48 89 ef             	mov    %rbp,%rdi
    5da5:	48 83 05 8b c3 02 00 	addq   $0x1,0x2c38b(%rip)        # 32138 <mul_count>
    5dac:	01 
    5dad:	e8 de 12 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    5db2:	48 83 c3 08          	add    $0x8,%rbx
    5db6:	41 89 c4             	mov    %eax,%r12d
    5db9:	85 c0                	test   %eax,%eax
    5dbb:	0f 85 32 ff ff ff    	jne    5cf3 <ecp_sw_rhs+0x23>
    5dc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5dc8:	48 89 de             	mov    %rbx,%rsi
    5dcb:	48 89 ef             	mov    %rbp,%rdi
    5dce:	e8 7d 0e 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    5dd3:	85 c0                	test   %eax,%eax
    5dd5:	0f 88 18 ff ff ff    	js     5cf3 <ecp_sw_rhs+0x23>
    5ddb:	48 89 da             	mov    %rbx,%rdx
    5dde:	48 89 ee             	mov    %rbp,%rsi
    5de1:	48 89 ef             	mov    %rbp,%rdi
    5de4:	e8 c7 10 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    5de9:	85 c0                	test   %eax,%eax
    5deb:	74 db                	je     5dc8 <ecp_sw_rhs+0xf8>
    5ded:	f3 0f 1e fa          	endbr64 
    5df1:	41 89 c4             	mov    %eax,%r12d
    5df4:	e9 fa fe ff ff       	jmpq   5cf3 <ecp_sw_rhs+0x23>
    5df9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5e00:	ba 03 00 00 00       	mov    $0x3,%edx
    5e05:	48 89 ee             	mov    %rbp,%rsi
    5e08:	4c 8d 73 08          	lea    0x8(%rbx),%r14
    5e0c:	48 89 ef             	mov    %rbp,%rdi
    5e0f:	e8 0c 13 01 00       	callq  17120 <mbedtls_mpi_sub_int>
    5e14:	41 89 c4             	mov    %eax,%r12d
    5e17:	85 c0                	test   %eax,%eax
    5e19:	74 30                	je     5e4b <ecp_sw_rhs+0x17b>
    5e1b:	e9 d3 fe ff ff       	jmpq   5cf3 <ecp_sw_rhs+0x23>
    5e20:	31 f6                	xor    %esi,%esi
    5e22:	48 89 ef             	mov    %rbp,%rdi
    5e25:	e8 16 0f 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    5e2a:	85 c0                	test   %eax,%eax
    5e2c:	0f 84 3a ff ff ff    	je     5d6c <ecp_sw_rhs+0x9c>
    5e32:	4c 89 f2             	mov    %r14,%rdx
    5e35:	48 89 ee             	mov    %rbp,%rsi
    5e38:	48 89 ef             	mov    %rbp,%rdi
    5e3b:	e8 50 12 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    5e40:	41 89 c4             	mov    %eax,%r12d
    5e43:	85 c0                	test   %eax,%eax
    5e45:	0f 85 a8 fe ff ff    	jne    5cf3 <ecp_sw_rhs+0x23>
    5e4b:	8b 45 00             	mov    0x0(%rbp),%eax
    5e4e:	85 c0                	test   %eax,%eax
    5e50:	78 ce                	js     5e20 <ecp_sw_rhs+0x150>
    5e52:	e9 15 ff ff ff       	jmpq   5d6c <ecp_sw_rhs+0x9c>
    5e57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5e5e:	00 00 

0000000000005e60 <ecp_randomize_mxz>:
    5e60:	41 56                	push   %r14
    5e62:	49 89 ce             	mov    %rcx,%r14
    5e65:	41 55                	push   %r13
    5e67:	41 54                	push   %r12
    5e69:	49 89 d4             	mov    %rdx,%r12
    5e6c:	55                   	push   %rbp
    5e6d:	48 89 fd             	mov    %rdi,%rbp
    5e70:	53                   	push   %rbx
    5e71:	48 89 f3             	mov    %rsi,%rbx
    5e74:	48 83 ec 20          	sub    $0x20,%rsp
    5e78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5e7f:	00 00 
    5e81:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5e86:	31 c0                	xor    %eax,%eax
    5e88:	49 89 e5             	mov    %rsp,%r13
    5e8b:	4c 89 ef             	mov    %r13,%rdi
    5e8e:	e8 bd 04 01 00       	callq  16350 <mbedtls_mpi_init>
    5e93:	4c 89 e1             	mov    %r12,%rcx
    5e96:	48 8d 55 08          	lea    0x8(%rbp),%rdx
    5e9a:	4d 89 f0             	mov    %r14,%r8
    5e9d:	be 02 00 00 00       	mov    $0x2,%esi
    5ea2:	4c 89 ef             	mov    %r13,%rdi
    5ea5:	e8 06 3e 01 00       	callq  19cb0 <mbedtls_mpi_random>
    5eaa:	41 89 c4             	mov    %eax,%r12d
    5ead:	85 c0                	test   %eax,%eax
    5eaf:	74 3f                	je     5ef0 <ecp_randomize_mxz+0x90>
    5eb1:	4c 89 ef             	mov    %r13,%rdi
    5eb4:	e8 b7 04 01 00       	callq  16370 <mbedtls_mpi_free>
    5eb9:	41 83 fc f2          	cmp    $0xfffffff2,%r12d
    5ebd:	0f 84 ad 00 00 00    	je     5f70 <ecp_randomize_mxz+0x110>
    5ec3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5ec8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5ecf:	00 00 
    5ed1:	0f 85 a4 00 00 00    	jne    5f7b <ecp_randomize_mxz+0x11b>
    5ed7:	48 83 c4 20          	add    $0x20,%rsp
    5edb:	44 89 e0             	mov    %r12d,%eax
    5ede:	5b                   	pop    %rbx
    5edf:	5d                   	pop    %rbp
    5ee0:	41 5c                	pop    %r12
    5ee2:	41 5d                	pop    %r13
    5ee4:	41 5e                	pop    %r14
    5ee6:	c3                   	retq   
    5ee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5eee:	00 00 
    5ef0:	4c 89 ea             	mov    %r13,%rdx
    5ef3:	48 89 de             	mov    %rbx,%rsi
    5ef6:	48 89 df             	mov    %rbx,%rdi
    5ef9:	e8 92 12 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    5efe:	41 89 c4             	mov    %eax,%r12d
    5f01:	85 c0                	test   %eax,%eax
    5f03:	75 ac                	jne    5eb1 <ecp_randomize_mxz+0x51>
    5f05:	48 89 ee             	mov    %rbp,%rsi
    5f08:	48 89 df             	mov    %rbx,%rdi
    5f0b:	e8 70 f9 ff ff       	callq  5880 <ecp_modp>
    5f10:	41 89 c4             	mov    %eax,%r12d
    5f13:	85 c0                	test   %eax,%eax
    5f15:	75 9a                	jne    5eb1 <ecp_randomize_mxz+0x51>
    5f17:	4c 8d 73 30          	lea    0x30(%rbx),%r14
    5f1b:	4c 89 ea             	mov    %r13,%rdx
    5f1e:	48 83 05 12 c2 02 00 	addq   $0x1,0x2c212(%rip)        # 32138 <mul_count>
    5f25:	01 
    5f26:	4c 89 f6             	mov    %r14,%rsi
    5f29:	4c 89 f7             	mov    %r14,%rdi
    5f2c:	e8 5f 12 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    5f31:	41 89 c4             	mov    %eax,%r12d
    5f34:	85 c0                	test   %eax,%eax
    5f36:	0f 85 75 ff ff ff    	jne    5eb1 <ecp_randomize_mxz+0x51>
    5f3c:	48 89 ee             	mov    %rbp,%rsi
    5f3f:	4c 89 f7             	mov    %r14,%rdi
    5f42:	e8 39 f9 ff ff       	callq  5880 <ecp_modp>
    5f47:	41 89 c4             	mov    %eax,%r12d
    5f4a:	85 c0                	test   %eax,%eax
    5f4c:	0f 85 5f ff ff ff    	jne    5eb1 <ecp_randomize_mxz+0x51>
    5f52:	4c 89 ef             	mov    %r13,%rdi
    5f55:	48 83 05 db c1 02 00 	addq   $0x1,0x2c1db(%rip)        # 32138 <mul_count>
    5f5c:	01 
    5f5d:	e8 0e 04 01 00       	callq  16370 <mbedtls_mpi_free>
    5f62:	e9 5c ff ff ff       	jmpq   5ec3 <ecp_randomize_mxz+0x63>
    5f67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5f6e:	00 00 
    5f70:	41 bc 00 b3 ff ff    	mov    $0xffffb300,%r12d
    5f76:	e9 48 ff ff ff       	jmpq   5ec3 <ecp_randomize_mxz+0x63>
    5f7b:	e8 f0 e2 ff ff       	callq  4270 <__stack_chk_fail@plt>

0000000000005f80 <ecp_randomize_jac>:
    5f80:	41 57                	push   %r15
    5f82:	49 89 cf             	mov    %rcx,%r15
    5f85:	41 56                	push   %r14
    5f87:	41 55                	push   %r13
    5f89:	49 89 f5             	mov    %rsi,%r13
    5f8c:	41 54                	push   %r12
    5f8e:	49 89 d4             	mov    %rdx,%r12
    5f91:	55                   	push   %rbp
    5f92:	48 89 fd             	mov    %rdi,%rbp
    5f95:	48 83 ec 20          	sub    $0x20,%rsp
    5f99:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5fa0:	00 00 
    5fa2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5fa7:	31 c0                	xor    %eax,%eax
    5fa9:	49 89 e6             	mov    %rsp,%r14
    5fac:	4c 89 f7             	mov    %r14,%rdi
    5faf:	e8 9c 03 01 00       	callq  16350 <mbedtls_mpi_init>
    5fb4:	4c 89 e1             	mov    %r12,%rcx
    5fb7:	48 8d 55 08          	lea    0x8(%rbp),%rdx
    5fbb:	4d 89 f8             	mov    %r15,%r8
    5fbe:	be 02 00 00 00       	mov    $0x2,%esi
    5fc3:	4c 89 f7             	mov    %r14,%rdi
    5fc6:	e8 e5 3c 01 00       	callq  19cb0 <mbedtls_mpi_random>
    5fcb:	41 89 c4             	mov    %eax,%r12d
    5fce:	85 c0                	test   %eax,%eax
    5fd0:	74 3e                	je     6010 <ecp_randomize_jac+0x90>
    5fd2:	4c 89 f7             	mov    %r14,%rdi
    5fd5:	e8 96 03 01 00       	callq  16370 <mbedtls_mpi_free>
    5fda:	41 83 fc f2          	cmp    $0xfffffff2,%r12d
    5fde:	0f 84 4c 01 00 00    	je     6130 <ecp_randomize_jac+0x1b0>
    5fe4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5fe9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5ff0:	00 00 
    5ff2:	0f 85 43 01 00 00    	jne    613b <ecp_randomize_jac+0x1bb>
    5ff8:	48 83 c4 20          	add    $0x20,%rsp
    5ffc:	44 89 e0             	mov    %r12d,%eax
    5fff:	5d                   	pop    %rbp
    6000:	41 5c                	pop    %r12
    6002:	41 5d                	pop    %r13
    6004:	41 5e                	pop    %r14
    6006:	41 5f                	pop    %r15
    6008:	c3                   	retq   
    6009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6010:	4d 8d 7d 30          	lea    0x30(%r13),%r15
    6014:	4c 89 f2             	mov    %r14,%rdx
    6017:	4c 89 fe             	mov    %r15,%rsi
    601a:	4c 89 ff             	mov    %r15,%rdi
    601d:	e8 6e 11 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6022:	41 89 c4             	mov    %eax,%r12d
    6025:	85 c0                	test   %eax,%eax
    6027:	75 a9                	jne    5fd2 <ecp_randomize_jac+0x52>
    6029:	48 89 ee             	mov    %rbp,%rsi
    602c:	4c 89 ff             	mov    %r15,%rdi
    602f:	e8 4c f8 ff ff       	callq  5880 <ecp_modp>
    6034:	41 89 c4             	mov    %eax,%r12d
    6037:	85 c0                	test   %eax,%eax
    6039:	75 97                	jne    5fd2 <ecp_randomize_jac+0x52>
    603b:	4d 8d 7d 18          	lea    0x18(%r13),%r15
    603f:	4c 89 f2             	mov    %r14,%rdx
    6042:	48 83 05 ee c0 02 00 	addq   $0x1,0x2c0ee(%rip)        # 32138 <mul_count>
    6049:	01 
    604a:	4c 89 fe             	mov    %r15,%rsi
    604d:	4c 89 ff             	mov    %r15,%rdi
    6050:	e8 3b 11 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6055:	41 89 c4             	mov    %eax,%r12d
    6058:	85 c0                	test   %eax,%eax
    605a:	0f 85 72 ff ff ff    	jne    5fd2 <ecp_randomize_jac+0x52>
    6060:	48 89 ee             	mov    %rbp,%rsi
    6063:	4c 89 ff             	mov    %r15,%rdi
    6066:	e8 15 f8 ff ff       	callq  5880 <ecp_modp>
    606b:	41 89 c4             	mov    %eax,%r12d
    606e:	85 c0                	test   %eax,%eax
    6070:	0f 85 5c ff ff ff    	jne    5fd2 <ecp_randomize_jac+0x52>
    6076:	4c 89 f2             	mov    %r14,%rdx
    6079:	4c 89 f6             	mov    %r14,%rsi
    607c:	4c 89 f7             	mov    %r14,%rdi
    607f:	48 83 05 b1 c0 02 00 	addq   $0x1,0x2c0b1(%rip)        # 32138 <mul_count>
    6086:	01 
    6087:	e8 04 11 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    608c:	41 89 c4             	mov    %eax,%r12d
    608f:	85 c0                	test   %eax,%eax
    6091:	0f 85 3b ff ff ff    	jne    5fd2 <ecp_randomize_jac+0x52>
    6097:	48 89 ee             	mov    %rbp,%rsi
    609a:	4c 89 f7             	mov    %r14,%rdi
    609d:	e8 de f7 ff ff       	callq  5880 <ecp_modp>
    60a2:	41 89 c4             	mov    %eax,%r12d
    60a5:	85 c0                	test   %eax,%eax
    60a7:	0f 85 25 ff ff ff    	jne    5fd2 <ecp_randomize_jac+0x52>
    60ad:	4c 89 f2             	mov    %r14,%rdx
    60b0:	4c 89 ee             	mov    %r13,%rsi
    60b3:	4c 89 ef             	mov    %r13,%rdi
    60b6:	48 83 05 7a c0 02 00 	addq   $0x1,0x2c07a(%rip)        # 32138 <mul_count>
    60bd:	01 
    60be:	e8 cd 10 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    60c3:	41 89 c4             	mov    %eax,%r12d
    60c6:	85 c0                	test   %eax,%eax
    60c8:	0f 85 04 ff ff ff    	jne    5fd2 <ecp_randomize_jac+0x52>
    60ce:	48 89 ee             	mov    %rbp,%rsi
    60d1:	4c 89 ef             	mov    %r13,%rdi
    60d4:	e8 a7 f7 ff ff       	callq  5880 <ecp_modp>
    60d9:	41 89 c4             	mov    %eax,%r12d
    60dc:	85 c0                	test   %eax,%eax
    60de:	0f 85 ee fe ff ff    	jne    5fd2 <ecp_randomize_jac+0x52>
    60e4:	4c 89 f2             	mov    %r14,%rdx
    60e7:	4c 89 fe             	mov    %r15,%rsi
    60ea:	4c 89 ff             	mov    %r15,%rdi
    60ed:	48 83 05 43 c0 02 00 	addq   $0x1,0x2c043(%rip)        # 32138 <mul_count>
    60f4:	01 
    60f5:	e8 96 10 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    60fa:	41 89 c4             	mov    %eax,%r12d
    60fd:	85 c0                	test   %eax,%eax
    60ff:	0f 85 cd fe ff ff    	jne    5fd2 <ecp_randomize_jac+0x52>
    6105:	48 89 ee             	mov    %rbp,%rsi
    6108:	4c 89 ff             	mov    %r15,%rdi
    610b:	e8 70 f7 ff ff       	callq  5880 <ecp_modp>
    6110:	41 89 c4             	mov    %eax,%r12d
    6113:	85 c0                	test   %eax,%eax
    6115:	0f 85 b7 fe ff ff    	jne    5fd2 <ecp_randomize_jac+0x52>
    611b:	4c 89 f7             	mov    %r14,%rdi
    611e:	48 83 05 12 c0 02 00 	addq   $0x1,0x2c012(%rip)        # 32138 <mul_count>
    6125:	01 
    6126:	e8 45 02 01 00       	callq  16370 <mbedtls_mpi_free>
    612b:	e9 b4 fe ff ff       	jmpq   5fe4 <ecp_randomize_jac+0x64>
    6130:	41 bc 00 b3 ff ff    	mov    $0xffffb300,%r12d
    6136:	e9 a9 fe ff ff       	jmpq   5fe4 <ecp_randomize_jac+0x64>
    613b:	e8 30 e1 ff ff       	callq  4270 <__stack_chk_fail@plt>

0000000000006140 <ecp_normalize_jac>:
    6140:	41 57                	push   %r15
    6142:	41 56                	push   %r14
    6144:	4c 8d 76 30          	lea    0x30(%rsi),%r14
    6148:	41 55                	push   %r13
    614a:	49 89 fd             	mov    %rdi,%r13
    614d:	4c 89 f7             	mov    %r14,%rdi
    6150:	41 54                	push   %r12
    6152:	55                   	push   %rbp
    6153:	48 89 f5             	mov    %rsi,%rbp
    6156:	31 f6                	xor    %esi,%esi
    6158:	48 83 ec 30          	sub    $0x30,%rsp
    615c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6163:	00 00 
    6165:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    616a:	31 c0                	xor    %eax,%eax
    616c:	e8 cf 0b 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    6171:	85 c0                	test   %eax,%eax
    6173:	75 2b                	jne    61a0 <ecp_normalize_jac+0x60>
    6175:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    617a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    6181:	00 00 
    6183:	0f 85 13 01 00 00    	jne    629c <ecp_normalize_jac+0x15c>
    6189:	48 83 c4 30          	add    $0x30,%rsp
    618d:	5d                   	pop    %rbp
    618e:	41 5c                	pop    %r12
    6190:	41 5d                	pop    %r13
    6192:	41 5e                	pop    %r14
    6194:	41 5f                	pop    %r15
    6196:	c3                   	retq   
    6197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    619e:	00 00 
    61a0:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    61a5:	4c 89 ff             	mov    %r15,%rdi
    61a8:	e8 a3 01 01 00       	callq  16350 <mbedtls_mpi_init>
    61ad:	49 8d 55 08          	lea    0x8(%r13),%rdx
    61b1:	4c 89 f6             	mov    %r14,%rsi
    61b4:	4c 89 ff             	mov    %r15,%rdi
    61b7:	e8 74 3b 01 00       	callq  19d30 <mbedtls_mpi_inv_mod>
    61bc:	85 c0                	test   %eax,%eax
    61be:	75 16                	jne    61d6 <ecp_normalize_jac+0x96>
    61c0:	4c 8d 65 18          	lea    0x18(%rbp),%r12
    61c4:	4c 89 fa             	mov    %r15,%rdx
    61c7:	4c 89 e6             	mov    %r12,%rsi
    61ca:	4c 89 e7             	mov    %r12,%rdi
    61cd:	e8 be 0f 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    61d2:	85 c0                	test   %eax,%eax
    61d4:	74 1a                	je     61f0 <ecp_normalize_jac+0xb0>
    61d6:	4c 89 ff             	mov    %r15,%rdi
    61d9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    61dd:	e8 8e 01 01 00       	callq  16370 <mbedtls_mpi_free>
    61e2:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    61e6:	eb 8d                	jmp    6175 <ecp_normalize_jac+0x35>
    61e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    61ef:	00 
    61f0:	4c 89 ee             	mov    %r13,%rsi
    61f3:	4c 89 e7             	mov    %r12,%rdi
    61f6:	e8 85 f6 ff ff       	callq  5880 <ecp_modp>
    61fb:	85 c0                	test   %eax,%eax
    61fd:	75 d7                	jne    61d6 <ecp_normalize_jac+0x96>
    61ff:	4c 89 fa             	mov    %r15,%rdx
    6202:	4c 89 fe             	mov    %r15,%rsi
    6205:	4c 89 ff             	mov    %r15,%rdi
    6208:	48 83 05 28 bf 02 00 	addq   $0x1,0x2bf28(%rip)        # 32138 <mul_count>
    620f:	01 
    6210:	e8 7b 0f 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6215:	85 c0                	test   %eax,%eax
    6217:	75 bd                	jne    61d6 <ecp_normalize_jac+0x96>
    6219:	4c 89 ee             	mov    %r13,%rsi
    621c:	4c 89 ff             	mov    %r15,%rdi
    621f:	e8 5c f6 ff ff       	callq  5880 <ecp_modp>
    6224:	85 c0                	test   %eax,%eax
    6226:	75 ae                	jne    61d6 <ecp_normalize_jac+0x96>
    6228:	4c 89 fa             	mov    %r15,%rdx
    622b:	48 89 ee             	mov    %rbp,%rsi
    622e:	48 89 ef             	mov    %rbp,%rdi
    6231:	48 83 05 ff be 02 00 	addq   $0x1,0x2beff(%rip)        # 32138 <mul_count>
    6238:	01 
    6239:	e8 52 0f 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    623e:	85 c0                	test   %eax,%eax
    6240:	75 94                	jne    61d6 <ecp_normalize_jac+0x96>
    6242:	4c 89 ee             	mov    %r13,%rsi
    6245:	48 89 ef             	mov    %rbp,%rdi
    6248:	e8 33 f6 ff ff       	callq  5880 <ecp_modp>
    624d:	85 c0                	test   %eax,%eax
    624f:	75 85                	jne    61d6 <ecp_normalize_jac+0x96>
    6251:	4c 89 fa             	mov    %r15,%rdx
    6254:	4c 89 e6             	mov    %r12,%rsi
    6257:	4c 89 e7             	mov    %r12,%rdi
    625a:	48 83 05 d6 be 02 00 	addq   $0x1,0x2bed6(%rip)        # 32138 <mul_count>
    6261:	01 
    6262:	e8 29 0f 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6267:	85 c0                	test   %eax,%eax
    6269:	0f 85 67 ff ff ff    	jne    61d6 <ecp_normalize_jac+0x96>
    626f:	4c 89 ee             	mov    %r13,%rsi
    6272:	4c 89 e7             	mov    %r12,%rdi
    6275:	e8 06 f6 ff ff       	callq  5880 <ecp_modp>
    627a:	85 c0                	test   %eax,%eax
    627c:	0f 85 54 ff ff ff    	jne    61d6 <ecp_normalize_jac+0x96>
    6282:	be 01 00 00 00       	mov    $0x1,%esi
    6287:	4c 89 f7             	mov    %r14,%rdi
    628a:	48 83 05 a6 be 02 00 	addq   $0x1,0x2bea6(%rip)        # 32138 <mul_count>
    6291:	01 
    6292:	e8 d9 04 01 00       	callq  16770 <mbedtls_mpi_lset>
    6297:	e9 3a ff ff ff       	jmpq   61d6 <ecp_normalize_jac+0x96>
    629c:	e8 cf df ff ff       	callq  4270 <__stack_chk_fail@plt>
    62a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    62a8:	00 00 00 00 
    62ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000062b0 <ecp_normalize_jac_many>:
    62b0:	41 57                	push   %r15
    62b2:	41 56                	push   %r14
    62b4:	41 55                	push   %r13
    62b6:	41 54                	push   %r12
    62b8:	55                   	push   %rbp
    62b9:	48 89 fd             	mov    %rdi,%rbp
    62bc:	53                   	push   %rbx
    62bd:	48 83 ec 58          	sub    $0x58,%rsp
    62c1:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    62c6:	48 89 14 24          	mov    %rdx,(%rsp)
    62ca:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    62d1:	00 00 
    62d3:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    62d8:	31 c9                	xor    %ecx,%ecx
    62da:	48 83 fa 01          	cmp    $0x1,%rdx
    62de:	0f 86 3c 01 00 00    	jbe    6420 <ecp_normalize_jac_many+0x170>
    62e4:	4c 8b 34 24          	mov    (%rsp),%r14
    62e8:	be 18 00 00 00       	mov    $0x18,%esi
    62ed:	4c 89 f7             	mov    %r14,%rdi
    62f0:	e8 db df ff ff       	callq  42d0 <calloc@plt>
    62f5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    62fa:	49 89 c5             	mov    %rax,%r13
    62fd:	48 89 c3             	mov    %rax,%rbx
    6300:	48 85 c0             	test   %rax,%rax
    6303:	0f 84 7e 03 00 00    	je     6687 <ecp_normalize_jac_many+0x3d7>
    6309:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    630e:	4c 89 e7             	mov    %r12,%rdi
    6311:	e8 3a 00 01 00       	callq  16350 <mbedtls_mpi_init>
    6316:	49 8d 46 ff          	lea    -0x1(%r14),%rax
    631a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    631f:	4b 8d 04 76          	lea    (%r14,%r14,2),%rax
    6323:	48 c1 e0 03          	shl    $0x3,%rax
    6327:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    632c:	48 01 c3             	add    %rax,%rbx
    632f:	90                   	nop
    6330:	4c 89 ef             	mov    %r13,%rdi
    6333:	49 83 c5 18          	add    $0x18,%r13
    6337:	e8 14 00 01 00       	callq  16350 <mbedtls_mpi_init>
    633c:	49 39 dd             	cmp    %rbx,%r13
    633f:	75 ef                	jne    6330 <ecp_normalize_jac_many+0x80>
    6341:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    6346:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    634b:	49 8b 06             	mov    (%r14),%rax
    634e:	4c 89 ef             	mov    %r13,%rdi
    6351:	48 8d 70 30          	lea    0x30(%rax),%rsi
    6355:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    635a:	e8 a1 02 01 00       	callq  16600 <mbedtls_mpi_copy>
    635f:	41 89 c7             	mov    %eax,%r15d
    6362:	85 c0                	test   %eax,%eax
    6364:	75 5f                	jne    63c5 <ecp_normalize_jac_many+0x115>
    6366:	48 8b 0c 24          	mov    (%rsp),%rcx
    636a:	4c 89 f0             	mov    %r14,%rax
    636d:	4d 8d 76 08          	lea    0x8(%r14),%r14
    6371:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
    6375:	48 89 04 24          	mov    %rax,(%rsp)
    6379:	eb 2d                	jmp    63a8 <ecp_normalize_jac_many+0xf8>
    637b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6380:	48 89 ee             	mov    %rbp,%rsi
    6383:	4c 89 ef             	mov    %r13,%rdi
    6386:	e8 f5 f4 ff ff       	callq  5880 <ecp_modp>
    638b:	41 89 c7             	mov    %eax,%r15d
    638e:	85 c0                	test   %eax,%eax
    6390:	75 33                	jne    63c5 <ecp_normalize_jac_many+0x115>
    6392:	48 83 05 9e bd 02 00 	addq   $0x1,0x2bd9e(%rip)        # 32138 <mul_count>
    6399:	01 
    639a:	49 83 c6 08          	add    $0x8,%r14
    639e:	4c 3b 34 24          	cmp    (%rsp),%r14
    63a2:	0f 84 88 00 00 00    	je     6430 <ecp_normalize_jac_many+0x180>
    63a8:	49 8b 06             	mov    (%r14),%rax
    63ab:	4c 89 ee             	mov    %r13,%rsi
    63ae:	49 83 c5 18          	add    $0x18,%r13
    63b2:	4c 89 ef             	mov    %r13,%rdi
    63b5:	48 8d 50 30          	lea    0x30(%rax),%rdx
    63b9:	e8 d2 0d 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    63be:	41 89 c7             	mov    %eax,%r15d
    63c1:	85 c0                	test   %eax,%eax
    63c3:	74 bb                	je     6380 <ecp_normalize_jac_many+0xd0>
    63c5:	4c 89 e7             	mov    %r12,%rdi
    63c8:	e8 a3 ff 00 00       	callq  16370 <mbedtls_mpi_free>
    63cd:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    63d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    63d8:	48 89 ef             	mov    %rbp,%rdi
    63db:	48 83 c5 18          	add    $0x18,%rbp
    63df:	e8 8c ff 00 00       	callq  16370 <mbedtls_mpi_free>
    63e4:	48 39 dd             	cmp    %rbx,%rbp
    63e7:	75 ef                	jne    63d8 <ecp_normalize_jac_many+0x128>
    63e9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    63ee:	e8 fd dd ff ff       	callq  41f0 <free@plt>
    63f3:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    63f8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    63ff:	00 00 
    6401:	0f 85 7b 02 00 00    	jne    6682 <ecp_normalize_jac_many+0x3d2>
    6407:	48 83 c4 58          	add    $0x58,%rsp
    640b:	44 89 f8             	mov    %r15d,%eax
    640e:	5b                   	pop    %rbx
    640f:	5d                   	pop    %rbp
    6410:	41 5c                	pop    %r12
    6412:	41 5d                	pop    %r13
    6414:	41 5e                	pop    %r14
    6416:	41 5f                	pop    %r15
    6418:	c3                   	retq   
    6419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6420:	48 8b 36             	mov    (%rsi),%rsi
    6423:	e8 18 fd ff ff       	callq  6140 <ecp_normalize_jac>
    6428:	41 89 c7             	mov    %eax,%r15d
    642b:	eb c6                	jmp    63f3 <ecp_normalize_jac_many+0x143>
    642d:	0f 1f 00             	nopl   (%rax)
    6430:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    6435:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    643a:	48 8d 55 08          	lea    0x8(%rbp),%rdx
    643e:	49 8d 7c 05 e8       	lea    -0x18(%r13,%rax,1),%rdi
    6443:	48 89 fe             	mov    %rdi,%rsi
    6446:	e8 e5 38 01 00       	callq  19d30 <mbedtls_mpi_inv_mod>
    644b:	41 89 c7             	mov    %eax,%r15d
    644e:	85 c0                	test   %eax,%eax
    6450:	0f 85 6f ff ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    6456:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    645b:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6460:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    6465:	49 8d 44 05 d0       	lea    -0x30(%r13,%rax,1),%rax
    646a:	48 89 04 24          	mov    %rax,(%rsp)
    646e:	4c 8d 34 d1          	lea    (%rcx,%rdx,8),%r14
    6472:	e9 e2 01 00 00       	jmpq   6659 <ecp_normalize_jac_many+0x3a9>
    6477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    647e:	00 00 
    6480:	48 8b 04 24          	mov    (%rsp),%rax
    6484:	4c 89 e7             	mov    %r12,%rdi
    6487:	4c 8d 68 18          	lea    0x18(%rax),%r13
    648b:	48 89 c2             	mov    %rax,%rdx
    648e:	4c 89 ee             	mov    %r13,%rsi
    6491:	e8 fa 0c 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6496:	41 89 c7             	mov    %eax,%r15d
    6499:	85 c0                	test   %eax,%eax
    649b:	0f 85 24 ff ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    64a1:	48 89 ee             	mov    %rbp,%rsi
    64a4:	4c 89 e7             	mov    %r12,%rdi
    64a7:	e8 d4 f3 ff ff       	callq  5880 <ecp_modp>
    64ac:	41 89 c7             	mov    %eax,%r15d
    64af:	85 c0                	test   %eax,%eax
    64b1:	0f 85 0e ff ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    64b7:	49 8b 0e             	mov    (%r14),%rcx
    64ba:	4c 89 ee             	mov    %r13,%rsi
    64bd:	4c 8b 2c 24          	mov    (%rsp),%r13
    64c1:	48 83 05 6f bc 02 00 	addq   $0x1,0x2bc6f(%rip)        # 32138 <mul_count>
    64c8:	01 
    64c9:	48 8d 51 30          	lea    0x30(%rcx),%rdx
    64cd:	4c 89 ef             	mov    %r13,%rdi
    64d0:	e8 bb 0c 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    64d5:	41 89 c7             	mov    %eax,%r15d
    64d8:	85 c0                	test   %eax,%eax
    64da:	0f 85 e5 fe ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    64e0:	48 89 ee             	mov    %rbp,%rsi
    64e3:	4c 89 ef             	mov    %r13,%rdi
    64e6:	e8 95 f3 ff ff       	callq  5880 <ecp_modp>
    64eb:	41 89 c7             	mov    %eax,%r15d
    64ee:	85 c0                	test   %eax,%eax
    64f0:	0f 85 cf fe ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    64f6:	48 83 05 3a bc 02 00 	addq   $0x1,0x2bc3a(%rip)        # 32138 <mul_count>
    64fd:	01 
    64fe:	49 8b 06             	mov    (%r14),%rax
    6501:	4c 89 e2             	mov    %r12,%rdx
    6504:	4c 8d 68 18          	lea    0x18(%rax),%r13
    6508:	4c 89 ee             	mov    %r13,%rsi
    650b:	4c 89 ef             	mov    %r13,%rdi
    650e:	e8 7d 0c 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6513:	41 89 c7             	mov    %eax,%r15d
    6516:	85 c0                	test   %eax,%eax
    6518:	0f 85 a7 fe ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    651e:	48 89 ee             	mov    %rbp,%rsi
    6521:	4c 89 ef             	mov    %r13,%rdi
    6524:	e8 57 f3 ff ff       	callq  5880 <ecp_modp>
    6529:	41 89 c7             	mov    %eax,%r15d
    652c:	85 c0                	test   %eax,%eax
    652e:	0f 85 91 fe ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    6534:	4c 89 e2             	mov    %r12,%rdx
    6537:	4c 89 e6             	mov    %r12,%rsi
    653a:	4c 89 e7             	mov    %r12,%rdi
    653d:	48 83 05 f3 bb 02 00 	addq   $0x1,0x2bbf3(%rip)        # 32138 <mul_count>
    6544:	01 
    6545:	e8 46 0c 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    654a:	41 89 c7             	mov    %eax,%r15d
    654d:	85 c0                	test   %eax,%eax
    654f:	0f 85 70 fe ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    6555:	48 89 ee             	mov    %rbp,%rsi
    6558:	4c 89 e7             	mov    %r12,%rdi
    655b:	e8 20 f3 ff ff       	callq  5880 <ecp_modp>
    6560:	41 89 c7             	mov    %eax,%r15d
    6563:	85 c0                	test   %eax,%eax
    6565:	0f 85 5a fe ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    656b:	4d 8b 2e             	mov    (%r14),%r13
    656e:	4c 89 e2             	mov    %r12,%rdx
    6571:	48 83 05 bf bb 02 00 	addq   $0x1,0x2bbbf(%rip)        # 32138 <mul_count>
    6578:	01 
    6579:	4c 89 ee             	mov    %r13,%rsi
    657c:	4c 89 ef             	mov    %r13,%rdi
    657f:	e8 0c 0c 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6584:	41 89 c7             	mov    %eax,%r15d
    6587:	85 c0                	test   %eax,%eax
    6589:	0f 85 36 fe ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    658f:	48 89 ee             	mov    %rbp,%rsi
    6592:	4c 89 ef             	mov    %r13,%rdi
    6595:	e8 e6 f2 ff ff       	callq  5880 <ecp_modp>
    659a:	41 89 c7             	mov    %eax,%r15d
    659d:	85 c0                	test   %eax,%eax
    659f:	0f 85 20 fe ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    65a5:	49 8b 06             	mov    (%r14),%rax
    65a8:	4c 89 e2             	mov    %r12,%rdx
    65ab:	48 83 05 85 bb 02 00 	addq   $0x1,0x2bb85(%rip)        # 32138 <mul_count>
    65b2:	01 
    65b3:	4c 8d 68 18          	lea    0x18(%rax),%r13
    65b7:	4c 89 ee             	mov    %r13,%rsi
    65ba:	4c 89 ef             	mov    %r13,%rdi
    65bd:	e8 ce 0b 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    65c2:	41 89 c7             	mov    %eax,%r15d
    65c5:	85 c0                	test   %eax,%eax
    65c7:	0f 85 f8 fd ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    65cd:	48 89 ee             	mov    %rbp,%rsi
    65d0:	4c 89 ef             	mov    %r13,%rdi
    65d3:	e8 a8 f2 ff ff       	callq  5880 <ecp_modp>
    65d8:	41 89 c7             	mov    %eax,%r15d
    65db:	85 c0                	test   %eax,%eax
    65dd:	0f 85 e2 fd ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    65e3:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    65e7:	49 8b 3e             	mov    (%r14),%rdi
    65ea:	48 83 05 46 bb 02 00 	addq   $0x1,0x2bb46(%rip)        # 32138 <mul_count>
    65f1:	01 
    65f2:	e8 e9 fe 00 00       	callq  164e0 <mbedtls_mpi_shrink>
    65f7:	41 89 c7             	mov    %eax,%r15d
    65fa:	85 c0                	test   %eax,%eax
    65fc:	0f 85 c3 fd ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    6602:	49 8b 06             	mov    (%r14),%rax
    6605:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    6609:	48 8d 78 18          	lea    0x18(%rax),%rdi
    660d:	e8 ce fe 00 00       	callq  164e0 <mbedtls_mpi_shrink>
    6612:	41 89 c7             	mov    %eax,%r15d
    6615:	85 c0                	test   %eax,%eax
    6617:	0f 85 a8 fd ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    661d:	49 8b 06             	mov    (%r14),%rax
    6620:	be 01 00 00 00       	mov    $0x1,%esi
    6625:	48 8d 78 30          	lea    0x30(%rax),%rdi
    6629:	e8 42 01 01 00       	callq  16770 <mbedtls_mpi_lset>
    662e:	41 89 c7             	mov    %eax,%r15d
    6631:	85 c0                	test   %eax,%eax
    6633:	0f 85 8c fd ff ff    	jne    63c5 <ecp_normalize_jac_many+0x115>
    6639:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    663e:	48 83 2c 24 18       	subq   $0x18,(%rsp)
    6643:	49 83 ee 08          	sub    $0x8,%r14
    6647:	48 85 c0             	test   %rax,%rax
    664a:	0f 84 75 fd ff ff    	je     63c5 <ecp_normalize_jac_many+0x115>
    6650:	48 83 e8 01          	sub    $0x1,%rax
    6654:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6659:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    665f:	0f 85 1b fe ff ff    	jne    6480 <ecp_normalize_jac_many+0x1d0>
    6665:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    666a:	4c 89 e7             	mov    %r12,%rdi
    666d:	e8 8e ff 00 00       	callq  16600 <mbedtls_mpi_copy>
    6672:	41 89 c7             	mov    %eax,%r15d
    6675:	85 c0                	test   %eax,%eax
    6677:	0f 84 81 fe ff ff    	je     64fe <ecp_normalize_jac_many+0x24e>
    667d:	e9 43 fd ff ff       	jmpq   63c5 <ecp_normalize_jac_many+0x115>
    6682:	e8 e9 db ff ff       	callq  4270 <__stack_chk_fail@plt>
    6687:	41 bf 80 b2 ff ff    	mov    $0xffffb280,%r15d
    668d:	e9 61 fd ff ff       	jmpq   63f3 <ecp_normalize_jac_many+0x143>
    6692:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6699:	00 00 00 00 
    669d:	0f 1f 00             	nopl   (%rax)

00000000000066a0 <ecp_double_jac>:
    66a0:	41 57                	push   %r15
    66a2:	4c 8d 79 18          	lea    0x18(%rcx),%r15
    66a6:	41 56                	push   %r14
    66a8:	41 55                	push   %r13
    66aa:	49 89 fd             	mov    %rdi,%r13
    66ad:	41 54                	push   %r12
    66af:	49 89 cc             	mov    %rcx,%r12
    66b2:	55                   	push   %rbp
    66b3:	48 89 d5             	mov    %rdx,%rbp
    66b6:	53                   	push   %rbx
    66b7:	48 83 ec 28          	sub    $0x28,%rsp
    66bb:	48 83 05 7d ba 02 00 	addq   $0x1,0x2ba7d(%rip)        # 32140 <dbl_count>
    66c2:	01 
    66c3:	48 83 7f 30 00       	cmpq   $0x0,0x30(%rdi)
    66c8:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    66cd:	0f 84 f5 00 00 00    	je     67c8 <ecp_double_jac+0x128>
    66d3:	48 89 d6             	mov    %rdx,%rsi
    66d6:	4c 89 ff             	mov    %r15,%rdi
    66d9:	e8 b2 0a 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    66de:	85 c0                	test   %eax,%eax
    66e0:	74 16                	je     66f8 <ecp_double_jac+0x58>
    66e2:	48 83 c4 28          	add    $0x28,%rsp
    66e6:	5b                   	pop    %rbx
    66e7:	5d                   	pop    %rbp
    66e8:	41 5c                	pop    %r12
    66ea:	41 5d                	pop    %r13
    66ec:	41 5e                	pop    %r14
    66ee:	41 5f                	pop    %r15
    66f0:	c3                   	retq   
    66f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    66f8:	4c 89 ee             	mov    %r13,%rsi
    66fb:	4c 89 ff             	mov    %r15,%rdi
    66fe:	e8 7d f1 ff ff       	callq  5880 <ecp_modp>
    6703:	85 c0                	test   %eax,%eax
    6705:	75 db                	jne    66e2 <ecp_double_jac+0x42>
    6707:	ba 03 00 00 00       	mov    $0x3,%edx
    670c:	4c 89 fe             	mov    %r15,%rsi
    670f:	49 8d 5d 08          	lea    0x8(%r13),%rbx
    6713:	4c 89 e7             	mov    %r12,%rdi
    6716:	48 83 05 1a ba 02 00 	addq   $0x1,0x2ba1a(%rip)        # 32138 <mul_count>
    671d:	01 
    671e:	e8 5d 0c 01 00       	callq  17380 <mbedtls_mpi_mul_int>
    6723:	85 c0                	test   %eax,%eax
    6725:	74 1b                	je     6742 <ecp_double_jac+0xa2>
    6727:	eb b9                	jmp    66e2 <ecp_double_jac+0x42>
    6729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6730:	48 89 da             	mov    %rbx,%rdx
    6733:	4c 89 e6             	mov    %r12,%rsi
    6736:	4c 89 e7             	mov    %r12,%rdi
    6739:	e8 72 07 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    673e:	85 c0                	test   %eax,%eax
    6740:	75 a0                	jne    66e2 <ecp_double_jac+0x42>
    6742:	48 89 de             	mov    %rbx,%rsi
    6745:	4c 89 e7             	mov    %r12,%rdi
    6748:	e8 03 05 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    674d:	85 c0                	test   %eax,%eax
    674f:	79 df                	jns    6730 <ecp_double_jac+0x90>
    6751:	4d 8d 75 20          	lea    0x20(%r13),%r14
    6755:	31 f6                	xor    %esi,%esi
    6757:	4c 89 f7             	mov    %r14,%rdi
    675a:	e8 e1 05 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    675f:	85 c0                	test   %eax,%eax
    6761:	0f 85 41 04 00 00    	jne    6ba8 <ecp_double_jac+0x508>
    6767:	49 8d 4c 24 30       	lea    0x30(%r12),%rcx
    676c:	49 89 ce             	mov    %rcx,%r14
    676f:	48 8d 45 18          	lea    0x18(%rbp),%rax
    6773:	4c 89 f7             	mov    %r14,%rdi
    6776:	48 89 c2             	mov    %rax,%rdx
    6779:	48 89 c6             	mov    %rax,%rsi
    677c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6781:	e8 0a 0a 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6786:	85 c0                	test   %eax,%eax
    6788:	0f 85 54 ff ff ff    	jne    66e2 <ecp_double_jac+0x42>
    678e:	4c 89 ee             	mov    %r13,%rsi
    6791:	4c 89 f7             	mov    %r14,%rdi
    6794:	e8 e7 f0 ff ff       	callq  5880 <ecp_modp>
    6799:	85 c0                	test   %eax,%eax
    679b:	0f 85 41 ff ff ff    	jne    66e2 <ecp_double_jac+0x42>
    67a1:	be 01 00 00 00       	mov    $0x1,%esi
    67a6:	4c 89 f7             	mov    %r14,%rdi
    67a9:	48 83 05 87 b9 02 00 	addq   $0x1,0x2b987(%rip)        # 32138 <mul_count>
    67b0:	01 
    67b1:	e8 7a 02 01 00       	callq  16a30 <mbedtls_mpi_shift_l>
    67b6:	85 c0                	test   %eax,%eax
    67b8:	0f 84 88 01 00 00    	je     6946 <ecp_double_jac+0x2a6>
    67be:	e9 1f ff ff ff       	jmpq   66e2 <ecp_double_jac+0x42>
    67c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    67c8:	48 8d 72 30          	lea    0x30(%rdx),%rsi
    67cc:	4c 89 ff             	mov    %r15,%rdi
    67cf:	48 89 f2             	mov    %rsi,%rdx
    67d2:	e8 b9 09 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    67d7:	85 c0                	test   %eax,%eax
    67d9:	0f 85 03 ff ff ff    	jne    66e2 <ecp_double_jac+0x42>
    67df:	4c 89 ee             	mov    %r13,%rsi
    67e2:	4c 89 ff             	mov    %r15,%rdi
    67e5:	e8 96 f0 ff ff       	callq  5880 <ecp_modp>
    67ea:	85 c0                	test   %eax,%eax
    67ec:	0f 85 f0 fe ff ff    	jne    66e2 <ecp_double_jac+0x42>
    67f2:	4d 8d 74 24 30       	lea    0x30(%r12),%r14
    67f7:	4c 89 fa             	mov    %r15,%rdx
    67fa:	49 8d 5d 08          	lea    0x8(%r13),%rbx
    67fe:	48 89 ee             	mov    %rbp,%rsi
    6801:	4c 89 f7             	mov    %r14,%rdi
    6804:	48 83 05 2c b9 02 00 	addq   $0x1,0x2b92c(%rip)        # 32138 <mul_count>
    680b:	01 
    680c:	e8 7f 08 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    6811:	85 c0                	test   %eax,%eax
    6813:	74 21                	je     6836 <ecp_double_jac+0x196>
    6815:	e9 c8 fe ff ff       	jmpq   66e2 <ecp_double_jac+0x42>
    681a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6820:	48 89 da             	mov    %rbx,%rdx
    6823:	4c 89 f6             	mov    %r14,%rsi
    6826:	4c 89 f7             	mov    %r14,%rdi
    6829:	e8 82 06 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    682e:	85 c0                	test   %eax,%eax
    6830:	0f 85 ac fe ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6836:	48 89 de             	mov    %rbx,%rsi
    6839:	4c 89 f7             	mov    %r14,%rdi
    683c:	e8 0f 04 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    6841:	85 c0                	test   %eax,%eax
    6843:	79 db                	jns    6820 <ecp_double_jac+0x180>
    6845:	4d 8d 44 24 48       	lea    0x48(%r12),%r8
    684a:	4c 89 fa             	mov    %r15,%rdx
    684d:	48 89 ee             	mov    %rbp,%rsi
    6850:	4c 89 c7             	mov    %r8,%rdi
    6853:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    6858:	e8 43 08 01 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    685d:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    6862:	85 c0                	test   %eax,%eax
    6864:	74 42                	je     68a8 <ecp_double_jac+0x208>
    6866:	e9 77 fe ff ff       	jmpq   66e2 <ecp_double_jac+0x42>
    686b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6870:	31 f6                	xor    %esi,%esi
    6872:	4c 89 c7             	mov    %r8,%rdi
    6875:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    687a:	e8 c1 04 01 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    687f:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    6884:	85 c0                	test   %eax,%eax
    6886:	74 29                	je     68b1 <ecp_double_jac+0x211>
    6888:	4c 89 c6             	mov    %r8,%rsi
    688b:	4c 89 c7             	mov    %r8,%rdi
    688e:	48 89 da             	mov    %rbx,%rdx
    6891:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    6896:	e8 f5 07 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    689b:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    68a0:	85 c0                	test   %eax,%eax
    68a2:	0f 85 3a fe ff ff    	jne    66e2 <ecp_double_jac+0x42>
    68a8:	41 8b 44 24 48       	mov    0x48(%r12),%eax
    68ad:	85 c0                	test   %eax,%eax
    68af:	78 bf                	js     6870 <ecp_double_jac+0x1d0>
    68b1:	4c 89 c2             	mov    %r8,%rdx
    68b4:	4c 89 f6             	mov    %r14,%rsi
    68b7:	4c 89 ff             	mov    %r15,%rdi
    68ba:	e8 d1 08 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    68bf:	85 c0                	test   %eax,%eax
    68c1:	0f 85 1b fe ff ff    	jne    66e2 <ecp_double_jac+0x42>
    68c7:	4c 89 ee             	mov    %r13,%rsi
    68ca:	4c 89 ff             	mov    %r15,%rdi
    68cd:	e8 ae ef ff ff       	callq  5880 <ecp_modp>
    68d2:	85 c0                	test   %eax,%eax
    68d4:	0f 85 08 fe ff ff    	jne    66e2 <ecp_double_jac+0x42>
    68da:	ba 03 00 00 00       	mov    $0x3,%edx
    68df:	4c 89 fe             	mov    %r15,%rsi
    68e2:	4c 89 e7             	mov    %r12,%rdi
    68e5:	48 83 05 4b b8 02 00 	addq   $0x1,0x2b84b(%rip)        # 32138 <mul_count>
    68ec:	01 
    68ed:	e8 8e 0a 01 00       	callq  17380 <mbedtls_mpi_mul_int>
    68f2:	85 c0                	test   %eax,%eax
    68f4:	0f 85 e8 fd ff ff    	jne    66e2 <ecp_double_jac+0x42>
    68fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6900:	48 89 de             	mov    %rbx,%rsi
    6903:	4c 89 e7             	mov    %r12,%rdi
    6906:	e8 45 03 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    690b:	85 c0                	test   %eax,%eax
    690d:	0f 88 5c fe ff ff    	js     676f <ecp_double_jac+0xcf>
    6913:	48 89 da             	mov    %rbx,%rdx
    6916:	4c 89 e6             	mov    %r12,%rsi
    6919:	4c 89 e7             	mov    %r12,%rdi
    691c:	e8 8f 05 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    6921:	85 c0                	test   %eax,%eax
    6923:	74 db                	je     6900 <ecp_double_jac+0x260>
    6925:	e9 b8 fd ff ff       	jmpq   66e2 <ecp_double_jac+0x42>
    692a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6930:	48 89 da             	mov    %rbx,%rdx
    6933:	4c 89 f6             	mov    %r14,%rsi
    6936:	4c 89 f7             	mov    %r14,%rdi
    6939:	e8 72 05 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    693e:	85 c0                	test   %eax,%eax
    6940:	0f 85 9c fd ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6946:	48 89 de             	mov    %rbx,%rsi
    6949:	4c 89 f7             	mov    %r14,%rdi
    694c:	e8 ff 02 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    6951:	85 c0                	test   %eax,%eax
    6953:	79 db                	jns    6930 <ecp_double_jac+0x290>
    6955:	4c 89 f2             	mov    %r14,%rdx
    6958:	48 89 ee             	mov    %rbp,%rsi
    695b:	4c 89 ff             	mov    %r15,%rdi
    695e:	e8 2d 08 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6963:	85 c0                	test   %eax,%eax
    6965:	0f 85 77 fd ff ff    	jne    66e2 <ecp_double_jac+0x42>
    696b:	4c 89 ee             	mov    %r13,%rsi
    696e:	4c 89 ff             	mov    %r15,%rdi
    6971:	e8 0a ef ff ff       	callq  5880 <ecp_modp>
    6976:	85 c0                	test   %eax,%eax
    6978:	0f 85 64 fd ff ff    	jne    66e2 <ecp_double_jac+0x42>
    697e:	be 01 00 00 00       	mov    $0x1,%esi
    6983:	4c 89 ff             	mov    %r15,%rdi
    6986:	48 83 05 aa b7 02 00 	addq   $0x1,0x2b7aa(%rip)        # 32138 <mul_count>
    698d:	01 
    698e:	e8 9d 00 01 00       	callq  16a30 <mbedtls_mpi_shift_l>
    6993:	85 c0                	test   %eax,%eax
    6995:	74 1f                	je     69b6 <ecp_double_jac+0x316>
    6997:	e9 46 fd ff ff       	jmpq   66e2 <ecp_double_jac+0x42>
    699c:	0f 1f 40 00          	nopl   0x0(%rax)
    69a0:	48 89 da             	mov    %rbx,%rdx
    69a3:	4c 89 fe             	mov    %r15,%rsi
    69a6:	4c 89 ff             	mov    %r15,%rdi
    69a9:	e8 02 05 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    69ae:	85 c0                	test   %eax,%eax
    69b0:	0f 85 2c fd ff ff    	jne    66e2 <ecp_double_jac+0x42>
    69b6:	48 89 de             	mov    %rbx,%rsi
    69b9:	4c 89 ff             	mov    %r15,%rdi
    69bc:	e8 8f 02 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    69c1:	85 c0                	test   %eax,%eax
    69c3:	79 db                	jns    69a0 <ecp_double_jac+0x300>
    69c5:	4d 8d 44 24 48       	lea    0x48(%r12),%r8
    69ca:	4c 89 f2             	mov    %r14,%rdx
    69cd:	4c 89 f6             	mov    %r14,%rsi
    69d0:	4c 89 c7             	mov    %r8,%rdi
    69d3:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    69d8:	e8 b3 07 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    69dd:	85 c0                	test   %eax,%eax
    69df:	0f 85 fd fc ff ff    	jne    66e2 <ecp_double_jac+0x42>
    69e5:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    69ea:	4c 89 ee             	mov    %r13,%rsi
    69ed:	4c 89 c7             	mov    %r8,%rdi
    69f0:	e8 8b ee ff ff       	callq  5880 <ecp_modp>
    69f5:	85 c0                	test   %eax,%eax
    69f7:	0f 85 e5 fc ff ff    	jne    66e2 <ecp_double_jac+0x42>
    69fd:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6a02:	be 01 00 00 00       	mov    $0x1,%esi
    6a07:	48 83 05 29 b7 02 00 	addq   $0x1,0x2b729(%rip)        # 32138 <mul_count>
    6a0e:	01 
    6a0f:	4c 89 c7             	mov    %r8,%rdi
    6a12:	e8 19 00 01 00       	callq  16a30 <mbedtls_mpi_shift_l>
    6a17:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6a1c:	85 c0                	test   %eax,%eax
    6a1e:	74 28                	je     6a48 <ecp_double_jac+0x3a8>
    6a20:	e9 bd fc ff ff       	jmpq   66e2 <ecp_double_jac+0x42>
    6a25:	0f 1f 00             	nopl   (%rax)
    6a28:	4c 89 c6             	mov    %r8,%rsi
    6a2b:	4c 89 c7             	mov    %r8,%rdi
    6a2e:	48 89 da             	mov    %rbx,%rdx
    6a31:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    6a36:	e8 75 04 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    6a3b:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6a40:	85 c0                	test   %eax,%eax
    6a42:	0f 85 9a fc ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6a48:	4c 89 c7             	mov    %r8,%rdi
    6a4b:	48 89 de             	mov    %rbx,%rsi
    6a4e:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    6a53:	e8 f8 01 01 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    6a58:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6a5d:	85 c0                	test   %eax,%eax
    6a5f:	79 c7                	jns    6a28 <ecp_double_jac+0x388>
    6a61:	4c 89 e2             	mov    %r12,%rdx
    6a64:	4c 89 e6             	mov    %r12,%rsi
    6a67:	4c 89 f7             	mov    %r14,%rdi
    6a6a:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    6a6f:	e8 1c 07 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6a74:	85 c0                	test   %eax,%eax
    6a76:	0f 85 66 fc ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6a7c:	4c 89 ee             	mov    %r13,%rsi
    6a7f:	4c 89 f7             	mov    %r14,%rdi
    6a82:	e8 f9 ed ff ff       	callq  5880 <ecp_modp>
    6a87:	85 c0                	test   %eax,%eax
    6a89:	0f 85 53 fc ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6a8f:	4c 89 f9             	mov    %r15,%rcx
    6a92:	4c 89 f2             	mov    %r14,%rdx
    6a95:	4c 89 f6             	mov    %r14,%rsi
    6a98:	4c 89 ef             	mov    %r13,%rdi
    6a9b:	48 83 05 95 b6 02 00 	addq   $0x1,0x2b695(%rip)        # 32138 <mul_count>
    6aa2:	01 
    6aa3:	e8 88 ef ff ff       	callq  5a30 <mbedtls_mpi_sub_mod>
    6aa8:	85 c0                	test   %eax,%eax
    6aaa:	0f 85 32 fc ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6ab0:	4c 89 f9             	mov    %r15,%rcx
    6ab3:	4c 89 f2             	mov    %r14,%rdx
    6ab6:	4c 89 f6             	mov    %r14,%rsi
    6ab9:	4c 89 ef             	mov    %r13,%rdi
    6abc:	e8 6f ef ff ff       	callq  5a30 <mbedtls_mpi_sub_mod>
    6ac1:	85 c0                	test   %eax,%eax
    6ac3:	0f 85 19 fc ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6ac9:	4c 89 f1             	mov    %r14,%rcx
    6acc:	4c 89 fa             	mov    %r15,%rdx
    6acf:	4c 89 fe             	mov    %r15,%rsi
    6ad2:	4c 89 ef             	mov    %r13,%rdi
    6ad5:	e8 56 ef ff ff       	callq  5a30 <mbedtls_mpi_sub_mod>
    6ada:	85 c0                	test   %eax,%eax
    6adc:	0f 85 00 fc ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6ae2:	4c 89 e1             	mov    %r12,%rcx
    6ae5:	4c 89 fa             	mov    %r15,%rdx
    6ae8:	4c 89 fe             	mov    %r15,%rsi
    6aeb:	4c 89 ef             	mov    %r13,%rdi
    6aee:	e8 ad ef ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    6af3:	85 c0                	test   %eax,%eax
    6af5:	0f 85 e7 fb ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6afb:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6b00:	4c 89 fa             	mov    %r15,%rdx
    6b03:	4c 89 fe             	mov    %r15,%rsi
    6b06:	4c 89 ef             	mov    %r13,%rdi
    6b09:	4c 89 c1             	mov    %r8,%rcx
    6b0c:	e8 1f ef ff ff       	callq  5a30 <mbedtls_mpi_sub_mod>
    6b11:	85 c0                	test   %eax,%eax
    6b13:	0f 85 c9 fb ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6b19:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6b1e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    6b23:	48 8d 4d 30          	lea    0x30(%rbp),%rcx
    6b27:	4c 89 ef             	mov    %r13,%rdi
    6b2a:	4c 89 c6             	mov    %r8,%rsi
    6b2d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    6b32:	e8 69 ef ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    6b37:	85 c0                	test   %eax,%eax
    6b39:	0f 85 a3 fb ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6b3f:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    6b44:	4c 89 ef             	mov    %r13,%rdi
    6b47:	4c 89 c6             	mov    %r8,%rsi
    6b4a:	e8 a1 f0 ff ff       	callq  5bf0 <mbedtls_mpi_shift_l_mod.constprop.0>
    6b4f:	85 c0                	test   %eax,%eax
    6b51:	0f 85 8b fb ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6b57:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    6b5c:	4c 89 f6             	mov    %r14,%rsi
    6b5f:	48 89 df             	mov    %rbx,%rdi
    6b62:	e8 99 fa 00 00       	callq  16600 <mbedtls_mpi_copy>
    6b67:	85 c0                	test   %eax,%eax
    6b69:	0f 85 73 fb ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6b6f:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    6b73:	4c 89 fe             	mov    %r15,%rsi
    6b76:	e8 85 fa 00 00       	callq  16600 <mbedtls_mpi_copy>
    6b7b:	85 c0                	test   %eax,%eax
    6b7d:	0f 85 5f fb ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6b83:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    6b88:	48 83 c3 30          	add    $0x30,%rbx
    6b8c:	48 83 c4 28          	add    $0x28,%rsp
    6b90:	48 89 df             	mov    %rbx,%rdi
    6b93:	5b                   	pop    %rbx
    6b94:	5d                   	pop    %rbp
    6b95:	4c 89 c6             	mov    %r8,%rsi
    6b98:	41 5c                	pop    %r12
    6b9a:	41 5d                	pop    %r13
    6b9c:	41 5e                	pop    %r14
    6b9e:	41 5f                	pop    %r15
    6ba0:	e9 5b fa 00 00       	jmpq   16600 <mbedtls_mpi_copy>
    6ba5:	0f 1f 00             	nopl   (%rax)
    6ba8:	48 8d 75 30          	lea    0x30(%rbp),%rsi
    6bac:	4c 89 ff             	mov    %r15,%rdi
    6baf:	48 89 f2             	mov    %rsi,%rdx
    6bb2:	e8 d9 05 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6bb7:	85 c0                	test   %eax,%eax
    6bb9:	0f 85 23 fb ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6bbf:	4c 89 ee             	mov    %r13,%rsi
    6bc2:	4c 89 ff             	mov    %r15,%rdi
    6bc5:	e8 b6 ec ff ff       	callq  5880 <ecp_modp>
    6bca:	85 c0                	test   %eax,%eax
    6bcc:	0f 85 10 fb ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6bd2:	49 8d 4c 24 30       	lea    0x30(%r12),%rcx
    6bd7:	4c 89 fa             	mov    %r15,%rdx
    6bda:	4c 89 fe             	mov    %r15,%rsi
    6bdd:	48 83 05 53 b5 02 00 	addq   $0x1,0x2b553(%rip)        # 32138 <mul_count>
    6be4:	01 
    6be5:	48 89 cf             	mov    %rcx,%rdi
    6be8:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    6bed:	e8 9e 05 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6bf2:	85 c0                	test   %eax,%eax
    6bf4:	0f 85 e8 fa ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6bfa:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6bff:	4c 89 ee             	mov    %r13,%rsi
    6c02:	48 89 cf             	mov    %rcx,%rdi
    6c05:	e8 76 ec ff ff       	callq  5880 <ecp_modp>
    6c0a:	85 c0                	test   %eax,%eax
    6c0c:	0f 85 d0 fa ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6c12:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6c17:	4c 89 f2             	mov    %r14,%rdx
    6c1a:	4c 89 ff             	mov    %r15,%rdi
    6c1d:	48 83 05 13 b5 02 00 	addq   $0x1,0x2b513(%rip)        # 32138 <mul_count>
    6c24:	01 
    6c25:	48 89 ce             	mov    %rcx,%rsi
    6c28:	e8 63 05 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    6c2d:	85 c0                	test   %eax,%eax
    6c2f:	0f 85 ad fa ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6c35:	4c 89 ee             	mov    %r13,%rsi
    6c38:	4c 89 ff             	mov    %r15,%rdi
    6c3b:	e8 40 ec ff ff       	callq  5880 <ecp_modp>
    6c40:	85 c0                	test   %eax,%eax
    6c42:	0f 85 9a fa ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6c48:	4c 89 fa             	mov    %r15,%rdx
    6c4b:	4c 89 e6             	mov    %r12,%rsi
    6c4e:	4c 89 e7             	mov    %r12,%rdi
    6c51:	48 83 05 df b4 02 00 	addq   $0x1,0x2b4df(%rip)        # 32138 <mul_count>
    6c58:	01 
    6c59:	e8 32 04 01 00       	callq  17090 <mbedtls_mpi_add_mpi>
    6c5e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6c63:	85 c0                	test   %eax,%eax
    6c65:	0f 85 77 fa ff ff    	jne    66e2 <ecp_double_jac+0x42>
    6c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6c70:	48 89 de             	mov    %rbx,%rsi
    6c73:	4c 89 e7             	mov    %r12,%rdi
    6c76:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    6c7b:	e8 d0 ff 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    6c80:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6c85:	85 c0                	test   %eax,%eax
    6c87:	0f 88 df fa ff ff    	js     676c <ecp_double_jac+0xcc>
    6c8d:	48 89 da             	mov    %rbx,%rdx
    6c90:	4c 89 e6             	mov    %r12,%rsi
    6c93:	4c 89 e7             	mov    %r12,%rdi
    6c96:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    6c9b:	e8 10 02 01 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    6ca0:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6ca5:	85 c0                	test   %eax,%eax
    6ca7:	74 c7                	je     6c70 <ecp_double_jac+0x5d0>
    6ca9:	e9 34 fa ff ff       	jmpq   66e2 <ecp_double_jac+0x42>
    6cae:	66 90                	xchg   %ax,%ax

0000000000006cb0 <mbedtls_ecp_curve_list>:
    6cb0:	f3 0f 1e fa          	endbr64 
    6cb4:	48 8d 05 65 6b 02 00 	lea    0x26b65(%rip),%rax        # 2d820 <ecp_supported_curves>
    6cbb:	c3                   	retq   
    6cbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006cc0 <mbedtls_ecp_grp_id_list>:
    6cc0:	f3 0f 1e fa          	endbr64 
    6cc4:	8b 05 16 b4 02 00    	mov    0x2b416(%rip),%eax        # 320e0 <init_done.4245>
    6cca:	85 c0                	test   %eax,%eax
    6ccc:	75 4e                	jne    6d1c <mbedtls_ecp_grp_id_list+0x5c>
    6cce:	b9 08 00 00 00       	mov    $0x8,%ecx
    6cd3:	48 8d 15 46 6b 02 00 	lea    0x26b46(%rip),%rdx        # 2d820 <ecp_supported_curves>
    6cda:	31 c0                	xor    %eax,%eax
    6cdc:	be 05 00 00 00       	mov    $0x5,%esi
    6ce1:	48 8d 3d 14 b4 02 00 	lea    0x2b414(%rip),%rdi        # 320fc <init_done.4245+0x1c>
    6ce8:	eb 0b                	jmp    6cf5 <mbedtls_ecp_grp_id_list+0x35>
    6cea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6cf0:	89 ce                	mov    %ecx,%esi
    6cf2:	8b 4a 10             	mov    0x10(%rdx),%ecx
    6cf5:	48 83 c0 01          	add    $0x1,%rax
    6cf9:	48 83 c2 10          	add    $0x10,%rdx
    6cfd:	89 34 87             	mov    %esi,(%rdi,%rax,4)
    6d00:	85 c9                	test   %ecx,%ecx
    6d02:	75 ec                	jne    6cf0 <mbedtls_ecp_grp_id_list+0x30>
    6d04:	48 8d 15 f5 b3 02 00 	lea    0x2b3f5(%rip),%rdx        # 32100 <ecp_supported_grp_id>
    6d0b:	c7 05 cb b3 02 00 01 	movl   $0x1,0x2b3cb(%rip)        # 320e0 <init_done.4245>
    6d12:	00 00 00 
    6d15:	c7 04 82 00 00 00 00 	movl   $0x0,(%rdx,%rax,4)
    6d1c:	48 8d 05 dd b3 02 00 	lea    0x2b3dd(%rip),%rax        # 32100 <ecp_supported_grp_id>
    6d23:	c3                   	retq   
    6d24:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6d2b:	00 00 00 00 
    6d2f:	90                   	nop

0000000000006d30 <mbedtls_ecp_curve_info_from_grp_id>:
    6d30:	f3 0f 1e fa          	endbr64 
    6d34:	48 8d 05 e5 6a 02 00 	lea    0x26ae5(%rip),%rax        # 2d820 <ecp_supported_curves>
    6d3b:	ba 05 00 00 00       	mov    $0x5,%edx
    6d40:	eb 11                	jmp    6d53 <mbedtls_ecp_curve_info_from_grp_id+0x23>
    6d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6d48:	8b 50 10             	mov    0x10(%rax),%edx
    6d4b:	48 83 c0 10          	add    $0x10,%rax
    6d4f:	85 d2                	test   %edx,%edx
    6d51:	74 0d                	je     6d60 <mbedtls_ecp_curve_info_from_grp_id+0x30>
    6d53:	39 d7                	cmp    %edx,%edi
    6d55:	75 f1                	jne    6d48 <mbedtls_ecp_curve_info_from_grp_id+0x18>
    6d57:	c3                   	retq   
    6d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6d5f:	00 
    6d60:	31 c0                	xor    %eax,%eax
    6d62:	c3                   	retq   
    6d63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6d6a:	00 00 00 00 
    6d6e:	66 90                	xchg   %ax,%ax

0000000000006d70 <mbedtls_ecp_curve_info_from_tls_id>:
    6d70:	f3 0f 1e fa          	endbr64 
    6d74:	ba 19 00 00 00       	mov    $0x19,%edx
    6d79:	48 8d 05 a0 6a 02 00 	lea    0x26aa0(%rip),%rax        # 2d820 <ecp_supported_curves>
    6d80:	eb 15                	jmp    6d97 <mbedtls_ecp_curve_info_from_tls_id+0x27>
    6d82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6d88:	8b 50 10             	mov    0x10(%rax),%edx
    6d8b:	48 83 c0 10          	add    $0x10,%rax
    6d8f:	85 d2                	test   %edx,%edx
    6d91:	74 0d                	je     6da0 <mbedtls_ecp_curve_info_from_tls_id+0x30>
    6d93:	0f b7 50 04          	movzwl 0x4(%rax),%edx
    6d97:	66 39 d7             	cmp    %dx,%di
    6d9a:	75 ec                	jne    6d88 <mbedtls_ecp_curve_info_from_tls_id+0x18>
    6d9c:	c3                   	retq   
    6d9d:	0f 1f 00             	nopl   (%rax)
    6da0:	31 c0                	xor    %eax,%eax
    6da2:	c3                   	retq   
    6da3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6daa:	00 00 00 00 
    6dae:	66 90                	xchg   %ax,%ax

0000000000006db0 <mbedtls_ecp_curve_info_from_name>:
    6db0:	f3 0f 1e fa          	endbr64 
    6db4:	41 54                	push   %r12
    6db6:	53                   	push   %rbx
    6db7:	48 83 ec 08          	sub    $0x8,%rsp
    6dbb:	48 85 ff             	test   %rdi,%rdi
    6dbe:	74 48                	je     6e08 <mbedtls_ecp_curve_info_from_name+0x58>
    6dc0:	48 89 fb             	mov    %rdi,%rbx
    6dc3:	4c 8d 25 56 6a 02 00 	lea    0x26a56(%rip),%r12        # 2d820 <ecp_supported_curves>
    6dca:	48 8d 3d df 72 01 00 	lea    0x172df(%rip),%rdi        # 1e0b0 <_IO_stdin_used+0xb0>
    6dd1:	eb 17                	jmp    6dea <mbedtls_ecp_curve_info_from_name+0x3a>
    6dd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6dd8:	41 8b 44 24 10       	mov    0x10(%r12),%eax
    6ddd:	49 83 c4 10          	add    $0x10,%r12
    6de1:	85 c0                	test   %eax,%eax
    6de3:	74 23                	je     6e08 <mbedtls_ecp_curve_info_from_name+0x58>
    6de5:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    6dea:	48 89 de             	mov    %rbx,%rsi
    6ded:	e8 ee d4 ff ff       	callq  42e0 <strcmp@plt>
    6df2:	85 c0                	test   %eax,%eax
    6df4:	75 e2                	jne    6dd8 <mbedtls_ecp_curve_info_from_name+0x28>
    6df6:	48 83 c4 08          	add    $0x8,%rsp
    6dfa:	4c 89 e0             	mov    %r12,%rax
    6dfd:	5b                   	pop    %rbx
    6dfe:	41 5c                	pop    %r12
    6e00:	c3                   	retq   
    6e01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6e08:	45 31 e4             	xor    %r12d,%r12d
    6e0b:	48 83 c4 08          	add    $0x8,%rsp
    6e0f:	4c 89 e0             	mov    %r12,%rax
    6e12:	5b                   	pop    %rbx
    6e13:	41 5c                	pop    %r12
    6e15:	c3                   	retq   
    6e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6e1d:	00 00 00 

0000000000006e20 <mbedtls_ecp_get_type>:
    6e20:	f3 0f 1e fa          	endbr64 
    6e24:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    6e29:	74 15                	je     6e40 <mbedtls_ecp_get_type+0x20>
    6e2b:	31 c0                	xor    %eax,%eax
    6e2d:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    6e32:	0f 94 c0             	sete   %al
    6e35:	83 c0 01             	add    $0x1,%eax
    6e38:	c3                   	retq   
    6e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6e40:	31 c0                	xor    %eax,%eax
    6e42:	c3                   	retq   
    6e43:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6e4a:	00 00 00 00 
    6e4e:	66 90                	xchg   %ax,%ax

0000000000006e50 <mbedtls_ecp_point_init>:
    6e50:	f3 0f 1e fa          	endbr64 
    6e54:	53                   	push   %rbx
    6e55:	48 89 fb             	mov    %rdi,%rbx
    6e58:	e8 f3 f4 00 00       	callq  16350 <mbedtls_mpi_init>
    6e5d:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    6e61:	e8 ea f4 00 00       	callq  16350 <mbedtls_mpi_init>
    6e66:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    6e6a:	5b                   	pop    %rbx
    6e6b:	e9 e0 f4 00 00       	jmpq   16350 <mbedtls_mpi_init>

0000000000006e70 <mbedtls_ecp_group_init>:
    6e70:	f3 0f 1e fa          	endbr64 
    6e74:	53                   	push   %rbx
    6e75:	48 89 fb             	mov    %rdi,%rbx
    6e78:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    6e7c:	c7 47 f8 00 00 00 00 	movl   $0x0,-0x8(%rdi)
    6e83:	e8 c8 f4 00 00       	callq  16350 <mbedtls_mpi_init>
    6e88:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    6e8c:	e8 bf f4 00 00       	callq  16350 <mbedtls_mpi_init>
    6e91:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
    6e95:	e8 b6 f4 00 00       	callq  16350 <mbedtls_mpi_init>
    6e9a:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
    6e9e:	e8 ad ff ff ff       	callq  6e50 <mbedtls_ecp_point_init>
    6ea3:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    6eaa:	e8 a1 f4 00 00       	callq  16350 <mbedtls_mpi_init>
    6eaf:	48 c7 83 b0 00 00 00 	movq   $0x0,0xb0(%rbx)
    6eb6:	00 00 00 00 
    6eba:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
    6ec1:	00 00 00 00 
    6ec5:	c7 83 c0 00 00 00 00 	movl   $0x0,0xc0(%rbx)
    6ecc:	00 00 00 
    6ecf:	48 c7 83 c8 00 00 00 	movq   $0x0,0xc8(%rbx)
    6ed6:	00 00 00 00 
    6eda:	48 c7 83 d0 00 00 00 	movq   $0x0,0xd0(%rbx)
    6ee1:	00 00 00 00 
    6ee5:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
    6eec:	00 00 00 00 
    6ef0:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
    6ef7:	00 00 00 00 
    6efb:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
    6f02:	00 00 00 00 
    6f06:	48 c7 83 f0 00 00 00 	movq   $0x0,0xf0(%rbx)
    6f0d:	00 00 00 00 
    6f11:	5b                   	pop    %rbx
    6f12:	c3                   	retq   
    6f13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6f1a:	00 00 00 00 
    6f1e:	66 90                	xchg   %ax,%ax

0000000000006f20 <mbedtls_ecp_keypair_init>:
    6f20:	f3 0f 1e fa          	endbr64 
    6f24:	53                   	push   %rbx
    6f25:	48 89 fb             	mov    %rdi,%rbx
    6f28:	e8 43 ff ff ff       	callq  6e70 <mbedtls_ecp_group_init>
    6f2d:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
    6f34:	e8 17 f4 00 00       	callq  16350 <mbedtls_mpi_init>
    6f39:	48 8d bb 10 01 00 00 	lea    0x110(%rbx),%rdi
    6f40:	5b                   	pop    %rbx
    6f41:	e9 0a ff ff ff       	jmpq   6e50 <mbedtls_ecp_point_init>
    6f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6f4d:	00 00 00 

0000000000006f50 <mbedtls_ecp_point_free>:
    6f50:	f3 0f 1e fa          	endbr64 
    6f54:	48 85 ff             	test   %rdi,%rdi
    6f57:	74 07                	je     6f60 <mbedtls_ecp_point_free+0x10>
    6f59:	e9 72 ec ff ff       	jmpq   5bd0 <mbedtls_ecp_point_free.part.0>
    6f5e:	66 90                	xchg   %ax,%ax
    6f60:	c3                   	retq   
    6f61:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6f68:	00 00 00 00 
    6f6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006f70 <mbedtls_ecp_group_free>:
    6f70:	f3 0f 1e fa          	endbr64 
    6f74:	48 85 ff             	test   %rdi,%rdi
    6f77:	0f 84 a3 00 00 00    	je     7020 <mbedtls_ecp_group_free+0xb0>
    6f7d:	55                   	push   %rbp
    6f7e:	48 89 fd             	mov    %rdi,%rbp
    6f81:	53                   	push   %rbx
    6f82:	48 83 ec 08          	sub    $0x8,%rsp
    6f86:	83 bf c0 00 00 00 01 	cmpl   $0x1,0xc0(%rdi)
    6f8d:	75 69                	jne    6ff8 <mbedtls_ecp_group_free+0x88>
    6f8f:	4c 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%r8
    6f96:	4d 85 c0             	test   %r8,%r8
    6f99:	74 43                	je     6fde <mbedtls_ecp_group_free+0x6e>
    6f9b:	48 83 bd f0 00 00 00 	cmpq   $0x0,0xf0(%rbp)
    6fa2:	00 
    6fa3:	74 39                	je     6fde <mbedtls_ecp_group_free+0x6e>
    6fa5:	31 db                	xor    %ebx,%ebx
    6fa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6fae:	00 00 
    6fb0:	48 8d 04 db          	lea    (%rbx,%rbx,8),%rax
    6fb4:	49 8d 3c c0          	lea    (%r8,%rax,8),%rdi
    6fb8:	48 85 ff             	test   %rdi,%rdi
    6fbb:	74 0c                	je     6fc9 <mbedtls_ecp_group_free+0x59>
    6fbd:	e8 0e ec ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    6fc2:	4c 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%r8
    6fc9:	48 83 c3 01          	add    $0x1,%rbx
    6fcd:	48 39 9d f0 00 00 00 	cmp    %rbx,0xf0(%rbp)
    6fd4:	77 da                	ja     6fb0 <mbedtls_ecp_group_free+0x40>
    6fd6:	4c 89 c7             	mov    %r8,%rdi
    6fd9:	e8 12 d2 ff ff       	callq  41f0 <free@plt>
    6fde:	48 83 c4 08          	add    $0x8,%rsp
    6fe2:	48 89 ef             	mov    %rbp,%rdi
    6fe5:	be f8 00 00 00       	mov    $0xf8,%esi
    6fea:	5b                   	pop    %rbx
    6feb:	5d                   	pop    %rbp
    6fec:	e9 bf 80 00 00       	jmpq   f0b0 <mbedtls_platform_zeroize>
    6ff1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6ff8:	48 8d 7f 20          	lea    0x20(%rdi),%rdi
    6ffc:	e8 6f f3 00 00       	callq  16370 <mbedtls_mpi_free>
    7001:	48 8d 7d 38          	lea    0x38(%rbp),%rdi
    7005:	e8 66 f3 00 00       	callq  16370 <mbedtls_mpi_free>
    700a:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    700e:	e8 bd eb ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    7013:	e9 77 ff ff ff       	jmpq   6f8f <mbedtls_ecp_group_free+0x1f>
    7018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    701f:	00 
    7020:	c3                   	retq   
    7021:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7028:	00 00 00 00 
    702c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007030 <mbedtls_ecp_keypair_free>:
    7030:	f3 0f 1e fa          	endbr64 
    7034:	48 85 ff             	test   %rdi,%rdi
    7037:	74 27                	je     7060 <mbedtls_ecp_keypair_free+0x30>
    7039:	53                   	push   %rbx
    703a:	48 89 fb             	mov    %rdi,%rbx
    703d:	e8 2e ff ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    7042:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
    7049:	e8 22 f3 00 00       	callq  16370 <mbedtls_mpi_free>
    704e:	48 8d bb 10 01 00 00 	lea    0x110(%rbx),%rdi
    7055:	5b                   	pop    %rbx
    7056:	e9 75 eb ff ff       	jmpq   5bd0 <mbedtls_ecp_point_free.part.0>
    705b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7060:	c3                   	retq   
    7061:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7068:	00 00 00 00 
    706c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007070 <mbedtls_ecp_copy>:
    7070:	f3 0f 1e fa          	endbr64 
    7074:	55                   	push   %rbp
    7075:	48 89 f5             	mov    %rsi,%rbp
    7078:	53                   	push   %rbx
    7079:	48 89 fb             	mov    %rdi,%rbx
    707c:	48 83 ec 08          	sub    $0x8,%rsp
    7080:	e8 7b f5 00 00       	callq  16600 <mbedtls_mpi_copy>
    7085:	85 c0                	test   %eax,%eax
    7087:	74 07                	je     7090 <mbedtls_ecp_copy+0x20>
    7089:	48 83 c4 08          	add    $0x8,%rsp
    708d:	5b                   	pop    %rbx
    708e:	5d                   	pop    %rbp
    708f:	c3                   	retq   
    7090:	48 8d 75 18          	lea    0x18(%rbp),%rsi
    7094:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    7098:	e8 63 f5 00 00       	callq  16600 <mbedtls_mpi_copy>
    709d:	85 c0                	test   %eax,%eax
    709f:	75 e8                	jne    7089 <mbedtls_ecp_copy+0x19>
    70a1:	48 83 c4 08          	add    $0x8,%rsp
    70a5:	48 8d 75 30          	lea    0x30(%rbp),%rsi
    70a9:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    70ad:	5b                   	pop    %rbx
    70ae:	5d                   	pop    %rbp
    70af:	e9 4c f5 00 00       	jmpq   16600 <mbedtls_mpi_copy>
    70b4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    70bb:	00 00 00 00 
    70bf:	90                   	nop

00000000000070c0 <mbedtls_ecp_group_copy>:
    70c0:	f3 0f 1e fa          	endbr64 
    70c4:	8b 36                	mov    (%rsi),%esi
    70c6:	e9 95 46 00 00       	jmpq   b760 <mbedtls_ecp_group_load>
    70cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000070d0 <mbedtls_ecp_set_zero>:
    70d0:	f3 0f 1e fa          	endbr64 
    70d4:	53                   	push   %rbx
    70d5:	be 01 00 00 00       	mov    $0x1,%esi
    70da:	48 89 fb             	mov    %rdi,%rbx
    70dd:	e8 8e f6 00 00       	callq  16770 <mbedtls_mpi_lset>
    70e2:	85 c0                	test   %eax,%eax
    70e4:	74 0a                	je     70f0 <mbedtls_ecp_set_zero+0x20>
    70e6:	5b                   	pop    %rbx
    70e7:	c3                   	retq   
    70e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    70ef:	00 
    70f0:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    70f4:	be 01 00 00 00       	mov    $0x1,%esi
    70f9:	e8 72 f6 00 00       	callq  16770 <mbedtls_mpi_lset>
    70fe:	85 c0                	test   %eax,%eax
    7100:	75 e4                	jne    70e6 <mbedtls_ecp_set_zero+0x16>
    7102:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    7106:	31 f6                	xor    %esi,%esi
    7108:	5b                   	pop    %rbx
    7109:	e9 62 f6 00 00       	jmpq   16770 <mbedtls_mpi_lset>
    710e:	66 90                	xchg   %ax,%ax

0000000000007110 <ecp_add_mixed>:
    7110:	48 83 05 30 b0 02 00 	addq   $0x1,0x2b030(%rip)        # 32148 <add_count>
    7117:	01 
    7118:	48 83 79 40 00       	cmpq   $0x0,0x40(%rcx)
    711d:	0f 84 e3 03 00 00    	je     7506 <ecp_add_mixed+0x3f6>
    7123:	41 57                	push   %r15
    7125:	49 89 ff             	mov    %rdi,%r15
    7128:	41 56                	push   %r14
    712a:	49 89 f6             	mov    %rsi,%r14
    712d:	31 f6                	xor    %esi,%esi
    712f:	41 55                	push   %r13
    7131:	49 89 d5             	mov    %rdx,%r13
    7134:	41 54                	push   %r12
    7136:	4d 89 c4             	mov    %r8,%r12
    7139:	55                   	push   %rbp
    713a:	48 89 cd             	mov    %rcx,%rbp
    713d:	53                   	push   %rbx
    713e:	48 8d 5a 30          	lea    0x30(%rdx),%rbx
    7142:	48 89 df             	mov    %rbx,%rdi
    7145:	48 83 ec 18          	sub    $0x18,%rsp
    7149:	e8 f2 fb 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    714e:	48 89 ee             	mov    %rbp,%rsi
    7151:	85 c0                	test   %eax,%eax
    7153:	0f 84 82 00 00 00    	je     71db <ecp_add_mixed+0xcb>
    7159:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    715d:	31 f6                	xor    %esi,%esi
    715f:	48 89 3c 24          	mov    %rdi,(%rsp)
    7163:	e8 d8 fb 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    7168:	48 8b 3c 24          	mov    (%rsp),%rdi
    716c:	85 c0                	test   %eax,%eax
    716e:	74 68                	je     71d8 <ecp_add_mixed+0xc8>
    7170:	be 01 00 00 00       	mov    $0x1,%esi
    7175:	e8 c6 fb 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    717a:	85 c0                	test   %eax,%eax
    717c:	0f 85 de 01 00 00    	jne    7360 <ecp_add_mixed+0x250>
    7182:	48 89 da             	mov    %rbx,%rdx
    7185:	48 89 de             	mov    %rbx,%rsi
    7188:	4c 89 e7             	mov    %r12,%rdi
    718b:	e8 00 00 01 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    7190:	85 c0                	test   %eax,%eax
    7192:	75 32                	jne    71c6 <ecp_add_mixed+0xb6>
    7194:	4c 89 fe             	mov    %r15,%rsi
    7197:	4c 89 e7             	mov    %r12,%rdi
    719a:	e8 e1 e6 ff ff       	callq  5880 <ecp_modp>
    719f:	85 c0                	test   %eax,%eax
    71a1:	75 23                	jne    71c6 <ecp_add_mixed+0xb6>
    71a3:	49 8d 44 24 18       	lea    0x18(%r12),%rax
    71a8:	48 89 da             	mov    %rbx,%rdx
    71ab:	4c 89 e6             	mov    %r12,%rsi
    71ae:	48 83 05 82 af 02 00 	addq   $0x1,0x2af82(%rip)        # 32138 <mul_count>
    71b5:	01 
    71b6:	48 89 c7             	mov    %rax,%rdi
    71b9:	48 89 04 24          	mov    %rax,(%rsp)
    71bd:	e8 ce ff 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    71c2:	85 c0                	test   %eax,%eax
    71c4:	74 32                	je     71f8 <ecp_add_mixed+0xe8>
    71c6:	48 83 c4 18          	add    $0x18,%rsp
    71ca:	5b                   	pop    %rbx
    71cb:	5d                   	pop    %rbp
    71cc:	41 5c                	pop    %r12
    71ce:	41 5d                	pop    %r13
    71d0:	41 5e                	pop    %r14
    71d2:	41 5f                	pop    %r15
    71d4:	c3                   	retq   
    71d5:	0f 1f 00             	nopl   (%rax)
    71d8:	4c 89 ee             	mov    %r13,%rsi
    71db:	48 83 c4 18          	add    $0x18,%rsp
    71df:	4c 89 f7             	mov    %r14,%rdi
    71e2:	5b                   	pop    %rbx
    71e3:	5d                   	pop    %rbp
    71e4:	41 5c                	pop    %r12
    71e6:	41 5d                	pop    %r13
    71e8:	41 5e                	pop    %r14
    71ea:	41 5f                	pop    %r15
    71ec:	e9 7f fe ff ff       	jmpq   7070 <mbedtls_ecp_copy>
    71f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    71f8:	48 8b 3c 24          	mov    (%rsp),%rdi
    71fc:	4c 89 fe             	mov    %r15,%rsi
    71ff:	e8 7c e6 ff ff       	callq  5880 <ecp_modp>
    7204:	85 c0                	test   %eax,%eax
    7206:	75 be                	jne    71c6 <ecp_add_mixed+0xb6>
    7208:	48 89 ea             	mov    %rbp,%rdx
    720b:	4c 89 e6             	mov    %r12,%rsi
    720e:	4c 89 e7             	mov    %r12,%rdi
    7211:	48 83 05 1f af 02 00 	addq   $0x1,0x2af1f(%rip)        # 32138 <mul_count>
    7218:	01 
    7219:	e8 72 ff 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    721e:	85 c0                	test   %eax,%eax
    7220:	75 a4                	jne    71c6 <ecp_add_mixed+0xb6>
    7222:	4c 89 fe             	mov    %r15,%rsi
    7225:	4c 89 e7             	mov    %r12,%rdi
    7228:	e8 53 e6 ff ff       	callq  5880 <ecp_modp>
    722d:	85 c0                	test   %eax,%eax
    722f:	75 95                	jne    71c6 <ecp_add_mixed+0xb6>
    7231:	48 8d 55 18          	lea    0x18(%rbp),%rdx
    7235:	48 8b 2c 24          	mov    (%rsp),%rbp
    7239:	48 83 05 f7 ae 02 00 	addq   $0x1,0x2aef7(%rip)        # 32138 <mul_count>
    7240:	01 
    7241:	48 89 ee             	mov    %rbp,%rsi
    7244:	48 89 ef             	mov    %rbp,%rdi
    7247:	e8 44 ff 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    724c:	85 c0                	test   %eax,%eax
    724e:	0f 85 72 ff ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    7254:	4c 89 fe             	mov    %r15,%rsi
    7257:	48 89 ef             	mov    %rbp,%rdi
    725a:	e8 21 e6 ff ff       	callq  5880 <ecp_modp>
    725f:	85 c0                	test   %eax,%eax
    7261:	0f 85 5f ff ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    7267:	4c 89 ea             	mov    %r13,%rdx
    726a:	4c 89 e6             	mov    %r12,%rsi
    726d:	49 8d 6f 08          	lea    0x8(%r15),%rbp
    7271:	4c 89 e7             	mov    %r12,%rdi
    7274:	48 83 05 bc ae 02 00 	addq   $0x1,0x2aebc(%rip)        # 32138 <mul_count>
    727b:	01 
    727c:	e8 1f fe 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    7281:	85 c0                	test   %eax,%eax
    7283:	74 2f                	je     72b4 <ecp_add_mixed+0x1a4>
    7285:	e9 3c ff ff ff       	jmpq   71c6 <ecp_add_mixed+0xb6>
    728a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7290:	31 f6                	xor    %esi,%esi
    7292:	4c 89 e7             	mov    %r12,%rdi
    7295:	e8 a6 fa 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    729a:	85 c0                	test   %eax,%eax
    729c:	74 1e                	je     72bc <ecp_add_mixed+0x1ac>
    729e:	48 89 ea             	mov    %rbp,%rdx
    72a1:	4c 89 e6             	mov    %r12,%rsi
    72a4:	4c 89 e7             	mov    %r12,%rdi
    72a7:	e8 e4 fd 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    72ac:	85 c0                	test   %eax,%eax
    72ae:	0f 85 12 ff ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    72b4:	41 8b 14 24          	mov    (%r12),%edx
    72b8:	85 d2                	test   %edx,%edx
    72ba:	78 d4                	js     7290 <ecp_add_mixed+0x180>
    72bc:	48 8b 34 24          	mov    (%rsp),%rsi
    72c0:	49 8d 45 18          	lea    0x18(%r13),%rax
    72c4:	49 8d 6f 08          	lea    0x8(%r15),%rbp
    72c8:	48 89 c2             	mov    %rax,%rdx
    72cb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    72d0:	48 89 f7             	mov    %rsi,%rdi
    72d3:	e8 c8 fd 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    72d8:	85 c0                	test   %eax,%eax
    72da:	74 32                	je     730e <ecp_add_mixed+0x1fe>
    72dc:	e9 e5 fe ff ff       	jmpq   71c6 <ecp_add_mixed+0xb6>
    72e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    72e8:	48 8b 3c 24          	mov    (%rsp),%rdi
    72ec:	31 f6                	xor    %esi,%esi
    72ee:	e8 4d fa 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    72f3:	85 c0                	test   %eax,%eax
    72f5:	74 20                	je     7317 <ecp_add_mixed+0x207>
    72f7:	48 8b 34 24          	mov    (%rsp),%rsi
    72fb:	48 89 ea             	mov    %rbp,%rdx
    72fe:	48 89 f7             	mov    %rsi,%rdi
    7301:	e8 8a fd 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    7306:	85 c0                	test   %eax,%eax
    7308:	0f 85 b8 fe ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    730e:	41 8b 44 24 18       	mov    0x18(%r12),%eax
    7313:	85 c0                	test   %eax,%eax
    7315:	78 d1                	js     72e8 <ecp_add_mixed+0x1d8>
    7317:	31 f6                	xor    %esi,%esi
    7319:	4c 89 e7             	mov    %r12,%rdi
    731c:	e8 1f fa 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    7321:	85 c0                	test   %eax,%eax
    7323:	75 45                	jne    736a <ecp_add_mixed+0x25a>
    7325:	48 8b 3c 24          	mov    (%rsp),%rdi
    7329:	31 f6                	xor    %esi,%esi
    732b:	e8 10 fa 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    7330:	85 c0                	test   %eax,%eax
    7332:	0f 85 b8 01 00 00    	jne    74f0 <ecp_add_mixed+0x3e0>
    7338:	48 83 c4 18          	add    $0x18,%rsp
    733c:	4c 89 e1             	mov    %r12,%rcx
    733f:	4c 89 ea             	mov    %r13,%rdx
    7342:	4c 89 f6             	mov    %r14,%rsi
    7345:	5b                   	pop    %rbx
    7346:	4c 89 ff             	mov    %r15,%rdi
    7349:	5d                   	pop    %rbp
    734a:	41 5c                	pop    %r12
    734c:	41 5d                	pop    %r13
    734e:	41 5e                	pop    %r14
    7350:	41 5f                	pop    %r15
    7352:	e9 49 f3 ff ff       	jmpq   66a0 <ecp_double_jac>
    7357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    735e:	00 00 
    7360:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    7365:	e9 5c fe ff ff       	jmpq   71c6 <ecp_add_mixed+0xb6>
    736a:	49 8d 6e 30          	lea    0x30(%r14),%rbp
    736e:	4c 89 e2             	mov    %r12,%rdx
    7371:	48 89 de             	mov    %rbx,%rsi
    7374:	48 89 ef             	mov    %rbp,%rdi
    7377:	e8 14 fe 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    737c:	85 c0                	test   %eax,%eax
    737e:	0f 85 42 fe ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    7384:	4c 89 fe             	mov    %r15,%rsi
    7387:	48 89 ef             	mov    %rbp,%rdi
    738a:	e8 f1 e4 ff ff       	callq  5880 <ecp_modp>
    738f:	85 c0                	test   %eax,%eax
    7391:	0f 85 2f fe ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    7397:	49 8d 5c 24 30       	lea    0x30(%r12),%rbx
    739c:	4c 89 e2             	mov    %r12,%rdx
    739f:	4c 89 e6             	mov    %r12,%rsi
    73a2:	48 83 05 8e ad 02 00 	addq   $0x1,0x2ad8e(%rip)        # 32138 <mul_count>
    73a9:	01 
    73aa:	48 89 df             	mov    %rbx,%rdi
    73ad:	e8 de fd 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    73b2:	85 c0                	test   %eax,%eax
    73b4:	0f 85 0c fe ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    73ba:	4c 89 fe             	mov    %r15,%rsi
    73bd:	48 89 df             	mov    %rbx,%rdi
    73c0:	e8 bb e4 ff ff       	callq  5880 <ecp_modp>
    73c5:	85 c0                	test   %eax,%eax
    73c7:	0f 85 f9 fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    73cd:	49 8d 6c 24 48       	lea    0x48(%r12),%rbp
    73d2:	4c 89 e1             	mov    %r12,%rcx
    73d5:	48 89 da             	mov    %rbx,%rdx
    73d8:	4c 89 ff             	mov    %r15,%rdi
    73db:	48 89 ee             	mov    %rbp,%rsi
    73de:	48 83 05 52 ad 02 00 	addq   $0x1,0x2ad52(%rip)        # 32138 <mul_count>
    73e5:	01 
    73e6:	e8 b5 e6 ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    73eb:	85 c0                	test   %eax,%eax
    73ed:	0f 85 d3 fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    73f3:	4c 89 e9             	mov    %r13,%rcx
    73f6:	48 89 da             	mov    %rbx,%rdx
    73f9:	48 89 de             	mov    %rbx,%rsi
    73fc:	4c 89 ff             	mov    %r15,%rdi
    73ff:	e8 9c e6 ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    7404:	85 c0                	test   %eax,%eax
    7406:	0f 85 ba fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    740c:	48 89 de             	mov    %rbx,%rsi
    740f:	4c 89 e7             	mov    %r12,%rdi
    7412:	e8 e9 f1 00 00       	callq  16600 <mbedtls_mpi_copy>
    7417:	85 c0                	test   %eax,%eax
    7419:	0f 85 a7 fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    741f:	4c 89 e6             	mov    %r12,%rsi
    7422:	4c 89 ff             	mov    %r15,%rdi
    7425:	e8 c6 e7 ff ff       	callq  5bf0 <mbedtls_mpi_shift_l_mod.constprop.0>
    742a:	85 c0                	test   %eax,%eax
    742c:	0f 85 94 fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    7432:	4c 8b 2c 24          	mov    (%rsp),%r13
    7436:	4c 89 f6             	mov    %r14,%rsi
    7439:	4c 89 ff             	mov    %r15,%rdi
    743c:	4c 89 e9             	mov    %r13,%rcx
    743f:	4c 89 ea             	mov    %r13,%rdx
    7442:	e8 59 e6 ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    7447:	85 c0                	test   %eax,%eax
    7449:	0f 85 77 fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    744f:	4c 89 e1             	mov    %r12,%rcx
    7452:	4c 89 f2             	mov    %r14,%rdx
    7455:	4c 89 f6             	mov    %r14,%rsi
    7458:	4c 89 ff             	mov    %r15,%rdi
    745b:	e8 d0 e5 ff ff       	callq  5a30 <mbedtls_mpi_sub_mod>
    7460:	85 c0                	test   %eax,%eax
    7462:	0f 85 5e fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    7468:	48 89 e9             	mov    %rbp,%rcx
    746b:	4c 89 f2             	mov    %r14,%rdx
    746e:	4c 89 f6             	mov    %r14,%rsi
    7471:	4c 89 ff             	mov    %r15,%rdi
    7474:	e8 b7 e5 ff ff       	callq  5a30 <mbedtls_mpi_sub_mod>
    7479:	85 c0                	test   %eax,%eax
    747b:	0f 85 45 fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    7481:	4c 89 f1             	mov    %r14,%rcx
    7484:	48 89 da             	mov    %rbx,%rdx
    7487:	48 89 de             	mov    %rbx,%rsi
    748a:	4c 89 ff             	mov    %r15,%rdi
    748d:	e8 9e e5 ff ff       	callq  5a30 <mbedtls_mpi_sub_mod>
    7492:	85 c0                	test   %eax,%eax
    7494:	0f 85 2c fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    749a:	4c 89 e9             	mov    %r13,%rcx
    749d:	48 89 da             	mov    %rbx,%rdx
    74a0:	48 89 de             	mov    %rbx,%rsi
    74a3:	4c 89 ff             	mov    %r15,%rdi
    74a6:	e8 f5 e5 ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    74ab:	85 c0                	test   %eax,%eax
    74ad:	0f 85 13 fd ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    74b3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    74b8:	48 89 ea             	mov    %rbp,%rdx
    74bb:	48 89 ee             	mov    %rbp,%rsi
    74be:	4c 89 ff             	mov    %r15,%rdi
    74c1:	e8 da e5 ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    74c6:	85 c0                	test   %eax,%eax
    74c8:	0f 85 f8 fc ff ff    	jne    71c6 <ecp_add_mixed+0xb6>
    74ce:	48 83 c4 18          	add    $0x18,%rsp
    74d2:	49 8d 76 18          	lea    0x18(%r14),%rsi
    74d6:	48 89 e9             	mov    %rbp,%rcx
    74d9:	48 89 da             	mov    %rbx,%rdx
    74dc:	4c 89 ff             	mov    %r15,%rdi
    74df:	5b                   	pop    %rbx
    74e0:	5d                   	pop    %rbp
    74e1:	41 5c                	pop    %r12
    74e3:	41 5d                	pop    %r13
    74e5:	41 5e                	pop    %r14
    74e7:	41 5f                	pop    %r15
    74e9:	e9 42 e5 ff ff       	jmpq   5a30 <mbedtls_mpi_sub_mod>
    74ee:	66 90                	xchg   %ax,%ax
    74f0:	48 83 c4 18          	add    $0x18,%rsp
    74f4:	4c 89 f7             	mov    %r14,%rdi
    74f7:	5b                   	pop    %rbx
    74f8:	5d                   	pop    %rbp
    74f9:	41 5c                	pop    %r12
    74fb:	41 5d                	pop    %r13
    74fd:	41 5e                	pop    %r14
    74ff:	41 5f                	pop    %r15
    7501:	e9 ca fb ff ff       	jmpq   70d0 <mbedtls_ecp_set_zero>
    7506:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    750b:	c3                   	retq   
    750c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007510 <ecp_mul_comb_after_precomp>:
    7510:	41 57                	push   %r15
    7512:	41 56                	push   %r14
    7514:	49 89 f6             	mov    %rsi,%r14
    7517:	41 55                	push   %r13
    7519:	49 89 d5             	mov    %rdx,%r13
    751c:	41 54                	push   %r12
    751e:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    7524:	55                   	push   %rbp
    7525:	53                   	push   %rbx
    7526:	48 89 fb             	mov    %rdi,%rbx
    7529:	48 81 c3 98 00 00 00 	add    $0x98,%rbx
    7530:	48 81 ec 38 02 00 00 	sub    $0x238,%rsp
    7537:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    753c:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
    7541:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
    7546:	48 8b 84 24 78 02 00 	mov    0x278(%rsp),%rax
    754d:	00 
    754e:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
    7553:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    7558:	48 8b 84 24 80 02 00 	mov    0x280(%rsp),%rax
    755f:	00 
    7560:	44 88 4c 24 30       	mov    %r9b,0x30(%rsp)
    7565:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    756a:	48 89 ef             	mov    %rbp,%rdi
    756d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7572:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7579:	00 00 
    757b:	48 89 84 24 28 02 00 	mov    %rax,0x228(%rsp)
    7582:	00 
    7583:	31 c0                	xor    %eax,%eax
    7585:	e8 c6 ed 00 00       	callq  16350 <mbedtls_mpi_init>
    758a:	4c 89 ff             	mov    %r15,%rdi
    758d:	e8 be ed 00 00       	callq  16350 <mbedtls_mpi_init>
    7592:	31 f6                	xor    %esi,%esi
    7594:	48 89 df             	mov    %rbx,%rdi
    7597:	e8 54 f2 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    759c:	83 f8 01             	cmp    $0x1,%eax
    759f:	75 30                	jne    75d1 <ecp_mul_comb_after_precomp+0xc1>
    75a1:	31 f6                	xor    %esi,%esi
    75a3:	4c 89 ef             	mov    %r13,%rdi
    75a6:	e8 45 f2 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    75ab:	4c 89 ee             	mov    %r13,%rsi
    75ae:	48 89 ef             	mov    %rbp,%rdi
    75b1:	89 44 24 08          	mov    %eax,0x8(%rsp)
    75b5:	e8 46 f0 00 00       	callq  16600 <mbedtls_mpi_copy>
    75ba:	41 89 c4             	mov    %eax,%r12d
    75bd:	85 c0                	test   %eax,%eax
    75bf:	74 3f                	je     7600 <ecp_mul_comb_after_precomp+0xf0>
    75c1:	4c 89 ff             	mov    %r15,%rdi
    75c4:	e8 a7 ed 00 00       	callq  16370 <mbedtls_mpi_free>
    75c9:	48 89 ef             	mov    %rbp,%rdi
    75cc:	e8 9f ed 00 00       	callq  16370 <mbedtls_mpi_free>
    75d1:	48 8b 84 24 28 02 00 	mov    0x228(%rsp),%rax
    75d8:	00 
    75d9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    75e0:	00 00 
    75e2:	0f 85 f0 02 00 00    	jne    78d8 <ecp_mul_comb_after_precomp+0x3c8>
    75e8:	48 81 c4 38 02 00 00 	add    $0x238,%rsp
    75ef:	44 89 e0             	mov    %r12d,%eax
    75f2:	5b                   	pop    %rbx
    75f3:	5d                   	pop    %rbp
    75f4:	41 5c                	pop    %r12
    75f6:	41 5d                	pop    %r13
    75f8:	41 5e                	pop    %r14
    75fa:	41 5f                	pop    %r15
    75fc:	c3                   	retq   
    75fd:	0f 1f 00             	nopl   (%rax)
    7600:	4c 89 ea             	mov    %r13,%rdx
    7603:	48 89 de             	mov    %rbx,%rsi
    7606:	4c 89 ff             	mov    %r15,%rdi
    7609:	e8 92 fa 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    760e:	41 89 c4             	mov    %eax,%r12d
    7611:	85 c0                	test   %eax,%eax
    7613:	75 ac                	jne    75c1 <ecp_mul_comb_after_precomp+0xb1>
    7615:	8b 54 24 08          	mov    0x8(%rsp),%edx
    7619:	31 c0                	xor    %eax,%eax
    761b:	4c 89 fe             	mov    %r15,%rsi
    761e:	48 89 ef             	mov    %rbp,%rdi
    7621:	85 d2                	test   %edx,%edx
    7623:	0f 94 c0             	sete   %al
    7626:	89 c2                	mov    %eax,%edx
    7628:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    762c:	e8 7f 57 01 00       	callq  1cdb0 <mbedtls_mpi_safe_cond_assign>
    7631:	41 89 c4             	mov    %eax,%r12d
    7634:	85 c0                	test   %eax,%eax
    7636:	75 89                	jne    75c1 <ecp_mul_comb_after_precomp+0xb1>
    7638:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
    763f:	00 
    7640:	48 8d 9c 24 20 01 00 	lea    0x120(%rsp),%rbx
    7647:	00 
    7648:	31 f6                	xor    %esi,%esi
    764a:	b9 06 01 00 00       	mov    $0x106,%ecx
    764f:	48 89 df             	mov    %rbx,%rdi
    7652:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    7657:	48 8d 50 01          	lea    0x1(%rax),%rdx
    765b:	e8 20 cd ff ff       	callq  4380 <__memset_chk@plt>
    7660:	48 83 bc 24 70 02 00 	cmpq   $0x0,0x270(%rsp)
    7667:	00 00 
    7669:	0f 84 c2 00 00 00    	je     7731 <ecp_mul_comb_after_precomp+0x221>
    766f:	0f b6 44 24 30       	movzbl 0x30(%rsp),%eax
    7674:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
    7679:	45 31 e4             	xor    %r12d,%r12d
    767c:	4c 8b ac 24 70 02 00 	mov    0x270(%rsp),%r13
    7683:	00 
    7684:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
    7689:	4d 89 e6             	mov    %r12,%r14
    768c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    7691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7698:	4d 89 f4             	mov    %r14,%r12
    769b:	45 31 ff             	xor    %r15d,%r15d
    769e:	66 90                	xchg   %ax,%ax
    76a0:	4c 89 e6             	mov    %r12,%rsi
    76a3:	48 89 ef             	mov    %rbp,%rdi
    76a6:	4d 01 ec             	add    %r13,%r12
    76a9:	e8 42 f1 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    76ae:	44 89 f9             	mov    %r15d,%ecx
    76b1:	49 83 c7 01          	add    $0x1,%r15
    76b5:	d3 e0                	shl    %cl,%eax
    76b7:	42 08 04 33          	or     %al,(%rbx,%r14,1)
    76bb:	4c 3b 7c 24 30       	cmp    0x30(%rsp),%r15
    76c0:	75 de                	jne    76a0 <ecp_mul_comb_after_precomp+0x190>
    76c2:	49 83 c6 01          	add    $0x1,%r14
    76c6:	4d 39 f5             	cmp    %r14,%r13
    76c9:	75 cd                	jne    7698 <ecp_mul_comb_after_precomp+0x188>
    76cb:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    76d0:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    76d5:	31 c9                	xor    %ecx,%ecx
    76d7:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    76dc:	4c 89 ce             	mov    %r9,%rsi
    76df:	4c 03 8c 24 70 02 00 	add    0x270(%rsp),%r9
    76e6:	00 
    76e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    76ee:	00 00 
    76f0:	44 0f b6 56 01       	movzbl 0x1(%rsi),%r10d
    76f5:	44 0f b6 06          	movzbl (%rsi),%r8d
    76f9:	48 83 c6 01          	add    $0x1,%rsi
    76fd:	44 89 d7             	mov    %r10d,%edi
    7700:	31 cf                	xor    %ecx,%edi
    7702:	44 21 d1             	and    %r10d,%ecx
    7705:	89 fa                	mov    %edi,%edx
    7707:	41 89 fb             	mov    %edi,%r11d
    770a:	f7 d2                	not    %edx
    770c:	83 e2 01             	and    $0x1,%edx
    770f:	89 d0                	mov    %edx,%eax
    7711:	0f b6 d2             	movzbl %dl,%edx
    7714:	41 0f af c0          	imul   %r8d,%eax
    7718:	c1 e2 07             	shl    $0x7,%edx
    771b:	44 09 c2             	or     %r8d,%edx
    771e:	88 56 ff             	mov    %dl,-0x1(%rsi)
    7721:	31 c7                	xor    %eax,%edi
    7723:	41 21 c3             	and    %eax,%r11d
    7726:	40 88 3e             	mov    %dil,(%rsi)
    7729:	44 09 d9             	or     %r11d,%ecx
    772c:	49 39 f1             	cmp    %rsi,%r9
    772f:	75 bf                	jne    76f0 <ecp_mul_comb_after_precomp+0x1e0>
    7731:	4c 89 ff             	mov    %r15,%rdi
    7734:	48 8d 9c 24 c0 00 00 	lea    0xc0(%rsp),%rbx
    773b:	00 
    773c:	e8 2f ec 00 00       	callq  16370 <mbedtls_mpi_free>
    7741:	48 89 ef             	mov    %rbp,%rdi
    7744:	48 89 dd             	mov    %rbx,%rbp
    7747:	e8 24 ec 00 00       	callq  16370 <mbedtls_mpi_free>
    774c:	4c 89 ff             	mov    %r15,%rdi
    774f:	44 0f b6 6c 24 38    	movzbl 0x38(%rsp),%r13d
    7755:	e8 f6 f6 ff ff       	callq  6e50 <mbedtls_ecp_point_init>
    775a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7760:	48 89 ef             	mov    %rbp,%rdi
    7763:	48 83 c5 18          	add    $0x18,%rbp
    7767:	e8 e4 eb 00 00       	callq  16350 <mbedtls_mpi_init>
    776c:	48 3b 6c 24 08       	cmp    0x8(%rsp),%rbp
    7771:	75 ed                	jne    7760 <ecp_mul_comb_after_precomp+0x250>
    7773:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    7778:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    777d:	44 89 e9             	mov    %r13d,%ecx
    7780:	4c 89 f6             	mov    %r14,%rsi
    7783:	48 03 ac 24 70 02 00 	add    0x270(%rsp),%rbp
    778a:	00 
    778b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    7790:	44 0f b6 45 00       	movzbl 0x0(%rbp),%r8d
    7795:	e8 66 e3 ff ff       	callq  5b00 <ecp_select_comb>
    779a:	41 89 c4             	mov    %eax,%r12d
    779d:	85 c0                	test   %eax,%eax
    779f:	0f 85 a3 00 00 00    	jne    7848 <ecp_mul_comb_after_precomp+0x338>
    77a5:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    77aa:	48 85 c0             	test   %rax,%rax
    77ad:	74 1d                	je     77cc <ecp_mul_comb_after_precomp+0x2bc>
    77af:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    77b4:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    77b9:	48 89 c2             	mov    %rax,%rdx
    77bc:	4c 89 f6             	mov    %r14,%rsi
    77bf:	e8 bc e7 ff ff       	callq  5f80 <ecp_randomize_jac>
    77c4:	85 c0                	test   %eax,%eax
    77c6:	0f 85 04 01 00 00    	jne    78d0 <ecp_mul_comb_after_precomp+0x3c0>
    77cc:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
    77d1:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    77d6:	eb 61                	jmp    7839 <ecp_mul_comb_after_precomp+0x329>
    77d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    77df:	00 
    77e0:	48 89 d9             	mov    %rbx,%rcx
    77e3:	4c 89 f2             	mov    %r14,%rdx
    77e6:	4c 89 f6             	mov    %r14,%rsi
    77e9:	4c 89 e7             	mov    %r12,%rdi
    77ec:	e8 af ee ff ff       	callq  66a0 <ecp_double_jac>
    77f1:	85 c0                	test   %eax,%eax
    77f3:	0f 85 d7 00 00 00    	jne    78d0 <ecp_mul_comb_after_precomp+0x3c0>
    77f9:	44 0f b6 45 ff       	movzbl -0x1(%rbp),%r8d
    77fe:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7803:	44 89 e9             	mov    %r13d,%ecx
    7806:	4c 89 fe             	mov    %r15,%rsi
    7809:	4c 89 e7             	mov    %r12,%rdi
    780c:	e8 ef e2 ff ff       	callq  5b00 <ecp_select_comb>
    7811:	85 c0                	test   %eax,%eax
    7813:	0f 85 b7 00 00 00    	jne    78d0 <ecp_mul_comb_after_precomp+0x3c0>
    7819:	49 89 d8             	mov    %rbx,%r8
    781c:	4c 89 f9             	mov    %r15,%rcx
    781f:	4c 89 f2             	mov    %r14,%rdx
    7822:	4c 89 f6             	mov    %r14,%rsi
    7825:	4c 89 e7             	mov    %r12,%rdi
    7828:	48 83 ed 01          	sub    $0x1,%rbp
    782c:	e8 df f8 ff ff       	callq  7110 <ecp_add_mixed>
    7831:	85 c0                	test   %eax,%eax
    7833:	0f 85 97 00 00 00    	jne    78d0 <ecp_mul_comb_after_precomp+0x3c0>
    7839:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
    783e:	75 a0                	jne    77e0 <ecp_mul_comb_after_precomp+0x2d0>
    7840:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    7845:	0f 1f 00             	nopl   (%rax)
    7848:	4c 89 ff             	mov    %r15,%rdi
    784b:	e8 80 e3 ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    7850:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    7855:	0f 1f 00             	nopl   (%rax)
    7858:	48 89 df             	mov    %rbx,%rdi
    785b:	48 83 c3 18          	add    $0x18,%rbx
    785f:	e8 0c eb 00 00       	callq  16370 <mbedtls_mpi_free>
    7864:	48 39 eb             	cmp    %rbp,%rbx
    7867:	75 ef                	jne    7858 <ecp_mul_comb_after_precomp+0x348>
    7869:	45 85 e4             	test   %r12d,%r12d
    786c:	0f 85 5f fd ff ff    	jne    75d1 <ecp_mul_comb_after_precomp+0xc1>
    7872:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
    7876:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    787b:	4c 89 f6             	mov    %r14,%rsi
    787e:	e8 0d e1 ff ff       	callq  5990 <ecp_safe_invert_jac>
    7883:	41 89 c4             	mov    %eax,%r12d
    7886:	85 c0                	test   %eax,%eax
    7888:	0f 85 43 fd ff ff    	jne    75d1 <ecp_mul_comb_after_precomp+0xc1>
    788e:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    7894:	74 22                	je     78b8 <ecp_mul_comb_after_precomp+0x3a8>
    7896:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    789b:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    78a0:	4c 89 f6             	mov    %r14,%rsi
    78a3:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    78a8:	e8 d3 e6 ff ff       	callq  5f80 <ecp_randomize_jac>
    78ad:	41 89 c4             	mov    %eax,%r12d
    78b0:	85 c0                	test   %eax,%eax
    78b2:	0f 85 19 fd ff ff    	jne    75d1 <ecp_mul_comb_after_precomp+0xc1>
    78b8:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    78bd:	4c 89 f6             	mov    %r14,%rsi
    78c0:	e8 7b e8 ff ff       	callq  6140 <ecp_normalize_jac>
    78c5:	41 89 c4             	mov    %eax,%r12d
    78c8:	e9 04 fd ff ff       	jmpq   75d1 <ecp_mul_comb_after_precomp+0xc1>
    78cd:	0f 1f 00             	nopl   (%rax)
    78d0:	41 89 c4             	mov    %eax,%r12d
    78d3:	e9 70 ff ff ff       	jmpq   7848 <ecp_mul_comb_after_precomp+0x338>
    78d8:	e8 93 c9 ff ff       	callq  4270 <__stack_chk_fail@plt>
    78dd:	0f 1f 00             	nopl   (%rax)

00000000000078e0 <mbedtls_ecp_is_zero>:
    78e0:	f3 0f 1e fa          	endbr64 
    78e4:	48 83 ec 08          	sub    $0x8,%rsp
    78e8:	48 83 c7 30          	add    $0x30,%rdi
    78ec:	31 f6                	xor    %esi,%esi
    78ee:	e8 4d f4 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    78f3:	85 c0                	test   %eax,%eax
    78f5:	0f 94 c0             	sete   %al
    78f8:	48 83 c4 08          	add    $0x8,%rsp
    78fc:	0f b6 c0             	movzbl %al,%eax
    78ff:	c3                   	retq   

0000000000007900 <mbedtls_ecp_point_cmp>:
    7900:	f3 0f 1e fa          	endbr64 
    7904:	55                   	push   %rbp
    7905:	48 89 f5             	mov    %rsi,%rbp
    7908:	53                   	push   %rbx
    7909:	48 89 fb             	mov    %rdi,%rbx
    790c:	48 83 ec 08          	sub    $0x8,%rsp
    7910:	e8 3b f3 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    7915:	85 c0                	test   %eax,%eax
    7917:	75 2f                	jne    7948 <mbedtls_ecp_point_cmp+0x48>
    7919:	48 8d 75 18          	lea    0x18(%rbp),%rsi
    791d:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    7921:	e8 2a f3 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    7926:	85 c0                	test   %eax,%eax
    7928:	75 1e                	jne    7948 <mbedtls_ecp_point_cmp+0x48>
    792a:	48 8d 75 30          	lea    0x30(%rbp),%rsi
    792e:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    7932:	e8 19 f3 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    7937:	85 c0                	test   %eax,%eax
    7939:	75 0d                	jne    7948 <mbedtls_ecp_point_cmp+0x48>
    793b:	48 83 c4 08          	add    $0x8,%rsp
    793f:	5b                   	pop    %rbx
    7940:	5d                   	pop    %rbp
    7941:	c3                   	retq   
    7942:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7948:	48 83 c4 08          	add    $0x8,%rsp
    794c:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    7951:	5b                   	pop    %rbx
    7952:	5d                   	pop    %rbp
    7953:	c3                   	retq   
    7954:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    795b:	00 00 00 00 
    795f:	90                   	nop

0000000000007960 <mbedtls_ecp_point_read_string>:
    7960:	f3 0f 1e fa          	endbr64 
    7964:	41 54                	push   %r12
    7966:	49 89 cc             	mov    %rcx,%r12
    7969:	55                   	push   %rbp
    796a:	89 f5                	mov    %esi,%ebp
    796c:	53                   	push   %rbx
    796d:	48 89 fb             	mov    %rdi,%rbx
    7970:	e8 cb fa 00 00       	callq  17440 <mbedtls_mpi_read_string>
    7975:	85 c0                	test   %eax,%eax
    7977:	74 07                	je     7980 <mbedtls_ecp_point_read_string+0x20>
    7979:	5b                   	pop    %rbx
    797a:	5d                   	pop    %rbp
    797b:	41 5c                	pop    %r12
    797d:	c3                   	retq   
    797e:	66 90                	xchg   %ax,%ax
    7980:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    7984:	4c 89 e2             	mov    %r12,%rdx
    7987:	89 ee                	mov    %ebp,%esi
    7989:	e8 b2 fa 00 00       	callq  17440 <mbedtls_mpi_read_string>
    798e:	85 c0                	test   %eax,%eax
    7990:	75 e7                	jne    7979 <mbedtls_ecp_point_read_string+0x19>
    7992:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    7996:	be 01 00 00 00       	mov    $0x1,%esi
    799b:	5b                   	pop    %rbx
    799c:	5d                   	pop    %rbp
    799d:	41 5c                	pop    %r12
    799f:	e9 cc ed 00 00       	jmpq   16770 <mbedtls_mpi_lset>
    79a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    79ab:	00 00 00 00 
    79af:	90                   	nop

00000000000079b0 <mbedtls_ecp_point_write_binary>:
    79b0:	f3 0f 1e fa          	endbr64 
    79b4:	41 57                	push   %r15
    79b6:	41 56                	push   %r14
    79b8:	41 55                	push   %r13
    79ba:	41 54                	push   %r12
    79bc:	55                   	push   %rbp
    79bd:	53                   	push   %rbx
    79be:	48 83 ec 18          	sub    $0x18,%rsp
    79c2:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    79c7:	83 fa 01             	cmp    $0x1,%edx
    79ca:	0f 87 58 01 00 00    	ja     7b28 <mbedtls_ecp_point_write_binary+0x178>
    79d0:	48 89 fb             	mov    %rdi,%rbx
    79d3:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    79d7:	48 89 f5             	mov    %rsi,%rbp
    79da:	41 89 d5             	mov    %edx,%r13d
    79dd:	49 89 cf             	mov    %rcx,%r15
    79e0:	4d 89 c4             	mov    %r8,%r12
    79e3:	e8 38 ef 00 00       	callq  16920 <mbedtls_mpi_size>
    79e8:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
    79ed:	49 89 c6             	mov    %rax,%r14
    79f0:	0f 84 d2 00 00 00    	je     7ac8 <mbedtls_ecp_point_write_binary+0x118>
    79f6:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
    79fb:	0f 84 df 00 00 00    	je     7ae0 <mbedtls_ecp_point_write_binary+0x130>
    7a01:	31 f6                	xor    %esi,%esi
    7a03:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    7a07:	e8 34 f3 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    7a0c:	85 c0                	test   %eax,%eax
    7a0e:	75 30                	jne    7a40 <mbedtls_ecp_point_write_binary+0x90>
    7a10:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    7a16:	0f 84 1c 01 00 00    	je     7b38 <mbedtls_ecp_point_write_binary+0x188>
    7a1c:	41 c6 04 24 00       	movb   $0x0,(%r12)
    7a21:	49 c7 07 01 00 00 00 	movq   $0x1,(%r15)
    7a28:	48 83 c4 18          	add    $0x18,%rsp
    7a2c:	5b                   	pop    %rbx
    7a2d:	5d                   	pop    %rbp
    7a2e:	41 5c                	pop    %r12
    7a30:	41 5d                	pop    %r13
    7a32:	41 5e                	pop    %r14
    7a34:	41 5f                	pop    %r15
    7a36:	c3                   	retq   
    7a37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7a3e:	00 00 
    7a40:	45 85 ed             	test   %r13d,%r13d
    7a43:	75 3b                	jne    7a80 <mbedtls_ecp_point_write_binary+0xd0>
    7a45:	4b 8d 44 36 01       	lea    0x1(%r14,%r14,1),%rax
    7a4a:	49 89 07             	mov    %rax,(%r15)
    7a4d:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    7a52:	0f 87 e0 00 00 00    	ja     7b38 <mbedtls_ecp_point_write_binary+0x188>
    7a58:	41 c6 04 24 04       	movb   $0x4,(%r12)
    7a5d:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
    7a62:	4c 89 f2             	mov    %r14,%rdx
    7a65:	48 89 ef             	mov    %rbp,%rdi
    7a68:	e8 a3 ef 00 00       	callq  16a10 <mbedtls_mpi_write_binary>
    7a6d:	85 c0                	test   %eax,%eax
    7a6f:	75 b7                	jne    7a28 <mbedtls_ecp_point_write_binary+0x78>
    7a71:	4b 8d 74 34 01       	lea    0x1(%r12,%r14,1),%rsi
    7a76:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    7a7a:	4c 89 f2             	mov    %r14,%rdx
    7a7d:	eb 30                	jmp    7aaf <mbedtls_ecp_point_write_binary+0xff>
    7a7f:	90                   	nop
    7a80:	49 8d 46 01          	lea    0x1(%r14),%rax
    7a84:	49 89 07             	mov    %rax,(%r15)
    7a87:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    7a8c:	0f 87 a6 00 00 00    	ja     7b38 <mbedtls_ecp_point_write_binary+0x188>
    7a92:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    7a96:	31 f6                	xor    %esi,%esi
    7a98:	e8 53 ed 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    7a9d:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
    7aa2:	4c 89 f2             	mov    %r14,%rdx
    7aa5:	48 89 ef             	mov    %rbp,%rdi
    7aa8:	83 c0 02             	add    $0x2,%eax
    7aab:	41 88 04 24          	mov    %al,(%r12)
    7aaf:	48 83 c4 18          	add    $0x18,%rsp
    7ab3:	5b                   	pop    %rbx
    7ab4:	5d                   	pop    %rbp
    7ab5:	41 5c                	pop    %r12
    7ab7:	41 5d                	pop    %r13
    7ab9:	41 5e                	pop    %r14
    7abb:	41 5f                	pop    %r15
    7abd:	e9 4e ef 00 00       	jmpq   16a10 <mbedtls_mpi_write_binary>
    7ac2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ac8:	48 83 c4 18          	add    $0x18,%rsp
    7acc:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    7ad1:	5b                   	pop    %rbx
    7ad2:	5d                   	pop    %rbp
    7ad3:	41 5c                	pop    %r12
    7ad5:	41 5d                	pop    %r13
    7ad7:	41 5e                	pop    %r14
    7ad9:	41 5f                	pop    %r15
    7adb:	c3                   	retq   
    7adc:	0f 1f 40 00          	nopl   0x0(%rax)
    7ae0:	49 89 07             	mov    %rax,(%r15)
    7ae3:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    7ae8:	77 4e                	ja     7b38 <mbedtls_ecp_point_write_binary+0x188>
    7aea:	48 89 c2             	mov    %rax,%rdx
    7aed:	4c 89 e6             	mov    %r12,%rsi
    7af0:	48 89 ef             	mov    %rbp,%rdi
    7af3:	e8 f8 ee 00 00       	callq  169f0 <mbedtls_mpi_write_binary_le>
    7af8:	85 c0                	test   %eax,%eax
    7afa:	0f 85 28 ff ff ff    	jne    7a28 <mbedtls_ecp_point_write_binary+0x78>
    7b00:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
    7b05:	0f 84 1d ff ff ff    	je     7a28 <mbedtls_ecp_point_write_binary+0x78>
    7b0b:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
    7b10:	0f 85 eb fe ff ff    	jne    7a01 <mbedtls_ecp_point_write_binary+0x51>
    7b16:	48 83 c4 18          	add    $0x18,%rsp
    7b1a:	5b                   	pop    %rbx
    7b1b:	5d                   	pop    %rbp
    7b1c:	41 5c                	pop    %r12
    7b1e:	41 5d                	pop    %r13
    7b20:	41 5e                	pop    %r14
    7b22:	41 5f                	pop    %r15
    7b24:	c3                   	retq   
    7b25:	0f 1f 00             	nopl   (%rax)
    7b28:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    7b2d:	e9 f6 fe ff ff       	jmpq   7a28 <mbedtls_ecp_point_write_binary+0x78>
    7b32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7b38:	b8 00 b1 ff ff       	mov    $0xffffb100,%eax
    7b3d:	e9 e6 fe ff ff       	jmpq   7a28 <mbedtls_ecp_point_write_binary+0x78>
    7b42:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7b49:	00 00 00 00 
    7b4d:	0f 1f 00             	nopl   (%rax)

0000000000007b50 <mbedtls_ecp_point_read_binary>:
    7b50:	f3 0f 1e fa          	endbr64 
    7b54:	41 57                	push   %r15
    7b56:	41 56                	push   %r14
    7b58:	41 55                	push   %r13
    7b5a:	41 54                	push   %r12
    7b5c:	55                   	push   %rbp
    7b5d:	53                   	push   %rbx
    7b5e:	48 83 ec 38          	sub    $0x38,%rsp
    7b62:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7b69:	00 00 
    7b6b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7b70:	31 c0                	xor    %eax,%eax
    7b72:	48 85 c9             	test   %rcx,%rcx
    7b75:	0f 84 c5 01 00 00    	je     7d40 <mbedtls_ecp_point_read_binary+0x1f0>
    7b7b:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
    7b7f:	49 89 ff             	mov    %rdi,%r15
    7b82:	49 89 f4             	mov    %rsi,%r12
    7b85:	48 89 d5             	mov    %rdx,%rbp
    7b88:	4c 89 ef             	mov    %r13,%rdi
    7b8b:	48 89 cb             	mov    %rcx,%rbx
    7b8e:	e8 8d ed 00 00       	callq  16920 <mbedtls_mpi_size>
    7b93:	49 83 7f 60 00       	cmpq   $0x0,0x60(%r15)
    7b98:	49 89 c6             	mov    %rax,%r14
    7b9b:	0f 84 1f 01 00 00    	je     7cc0 <mbedtls_ecp_point_read_binary+0x170>
    7ba1:	49 83 7f 78 00       	cmpq   $0x0,0x78(%r15)
    7ba6:	0f 84 24 01 00 00    	je     7cd0 <mbedtls_ecp_point_read_binary+0x180>
    7bac:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
    7bb0:	75 3e                	jne    7bf0 <mbedtls_ecp_point_read_binary+0xa0>
    7bb2:	48 83 fb 01          	cmp    $0x1,%rbx
    7bb6:	0f 85 84 01 00 00    	jne    7d40 <mbedtls_ecp_point_read_binary+0x1f0>
    7bbc:	4c 89 e7             	mov    %r12,%rdi
    7bbf:	e8 0c f5 ff ff       	callq  70d0 <mbedtls_ecp_set_zero>
    7bc4:	41 89 c1             	mov    %eax,%r9d
    7bc7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    7bcc:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7bd3:	00 00 
    7bd5:	0f 85 57 02 00 00    	jne    7e32 <mbedtls_ecp_point_read_binary+0x2e2>
    7bdb:	48 83 c4 38          	add    $0x38,%rsp
    7bdf:	44 89 c8             	mov    %r9d,%eax
    7be2:	5b                   	pop    %rbx
    7be3:	5d                   	pop    %rbp
    7be4:	41 5c                	pop    %r12
    7be6:	41 5d                	pop    %r13
    7be8:	41 5e                	pop    %r14
    7bea:	41 5f                	pop    %r15
    7bec:	c3                   	retq   
    7bed:	0f 1f 00             	nopl   (%rax)
    7bf0:	49 8d 46 01          	lea    0x1(%r14),%rax
    7bf4:	48 89 04 24          	mov    %rax,(%rsp)
    7bf8:	48 39 d8             	cmp    %rbx,%rax
    7bfb:	0f 87 3f 01 00 00    	ja     7d40 <mbedtls_ecp_point_read_binary+0x1f0>
    7c01:	48 8d 75 01          	lea    0x1(%rbp),%rsi
    7c05:	4c 89 f2             	mov    %r14,%rdx
    7c08:	4c 89 e7             	mov    %r12,%rdi
    7c0b:	e8 90 ed 00 00       	callq  169a0 <mbedtls_mpi_read_binary>
    7c10:	41 89 c1             	mov    %eax,%r9d
    7c13:	85 c0                	test   %eax,%eax
    7c15:	75 b0                	jne    7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7c17:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    7c1c:	be 01 00 00 00       	mov    $0x1,%esi
    7c21:	e8 4a eb 00 00       	callq  16770 <mbedtls_mpi_lset>
    7c26:	41 89 c1             	mov    %eax,%r9d
    7c29:	85 c0                	test   %eax,%eax
    7c2b:	75 9a                	jne    7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7c2d:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    7c31:	88 44 24 0c          	mov    %al,0xc(%rsp)
    7c35:	3c 04                	cmp    $0x4,%al
    7c37:	0f 84 cb 01 00 00    	je     7e08 <mbedtls_ecp_point_read_binary+0x2b8>
    7c3d:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    7c42:	83 e8 02             	sub    $0x2,%eax
    7c45:	3c 01                	cmp    $0x1,%al
    7c47:	0f 87 f3 00 00 00    	ja     7d40 <mbedtls_ecp_point_read_binary+0x1f0>
    7c4d:	48 39 1c 24          	cmp    %rbx,(%rsp)
    7c51:	0f 85 e9 00 00 00    	jne    7d40 <mbedtls_ecp_point_read_binary+0x1f0>
    7c57:	31 f6                	xor    %esi,%esi
    7c59:	4c 89 ef             	mov    %r13,%rdi
    7c5c:	49 8d 6c 24 18       	lea    0x18(%r12),%rbp
    7c61:	e8 8a eb 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    7c66:	83 f8 01             	cmp    $0x1,%eax
    7c69:	75 55                	jne    7cc0 <mbedtls_ecp_point_read_binary+0x170>
    7c6b:	be 01 00 00 00       	mov    $0x1,%esi
    7c70:	4c 89 ef             	mov    %r13,%rdi
    7c73:	e8 78 eb 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    7c78:	83 f8 01             	cmp    $0x1,%eax
    7c7b:	75 43                	jne    7cc0 <mbedtls_ecp_point_read_binary+0x170>
    7c7d:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    7c82:	4c 89 f7             	mov    %r14,%rdi
    7c85:	e8 c6 e6 00 00       	callq  16350 <mbedtls_mpi_init>
    7c8a:	4c 89 e2             	mov    %r12,%rdx
    7c8d:	48 89 ee             	mov    %rbp,%rsi
    7c90:	4c 89 ff             	mov    %r15,%rdi
    7c93:	e8 38 e0 ff ff       	callq  5cd0 <ecp_sw_rhs>
    7c98:	41 89 c1             	mov    %eax,%r9d
    7c9b:	85 c0                	test   %eax,%eax
    7c9d:	0f 84 ad 00 00 00    	je     7d50 <mbedtls_ecp_point_read_binary+0x200>
    7ca3:	4c 89 f7             	mov    %r14,%rdi
    7ca6:	44 89 0c 24          	mov    %r9d,(%rsp)
    7caa:	e8 c1 e6 00 00       	callq  16370 <mbedtls_mpi_free>
    7caf:	44 8b 0c 24          	mov    (%rsp),%r9d
    7cb3:	e9 0f ff ff ff       	jmpq   7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7cb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7cbf:	00 
    7cc0:	41 b9 80 b1 ff ff    	mov    $0xffffb180,%r9d
    7cc6:	e9 fc fe ff ff       	jmpq   7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7cd0:	48 39 c3             	cmp    %rax,%rbx
    7cd3:	75 6b                	jne    7d40 <mbedtls_ecp_point_read_binary+0x1f0>
    7cd5:	48 89 da             	mov    %rbx,%rdx
    7cd8:	48 89 ee             	mov    %rbp,%rsi
    7cdb:	4c 89 e7             	mov    %r12,%rdi
    7cde:	e8 6d ec 00 00       	callq  16950 <mbedtls_mpi_read_binary_le>
    7ce3:	41 89 c1             	mov    %eax,%r9d
    7ce6:	85 c0                	test   %eax,%eax
    7ce8:	0f 85 d9 fe ff ff    	jne    7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7cee:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
    7cf3:	e8 78 e6 00 00       	callq  16370 <mbedtls_mpi_free>
    7cf8:	41 83 3f 09          	cmpl   $0x9,(%r15)
    7cfc:	0f 84 de 00 00 00    	je     7de0 <mbedtls_ecp_point_read_binary+0x290>
    7d02:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    7d07:	be 01 00 00 00       	mov    $0x1,%esi
    7d0c:	e8 5f ea 00 00       	callq  16770 <mbedtls_mpi_lset>
    7d11:	41 89 c1             	mov    %eax,%r9d
    7d14:	85 c0                	test   %eax,%eax
    7d16:	0f 85 ab fe ff ff    	jne    7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7d1c:	49 83 7f 60 00       	cmpq   $0x0,0x60(%r15)
    7d21:	0f 84 a0 fe ff ff    	je     7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7d27:	49 83 7f 78 00       	cmpq   $0x0,0x78(%r15)
    7d2c:	0f 84 95 fe ff ff    	je     7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7d32:	e9 75 fe ff ff       	jmpq   7bac <mbedtls_ecp_point_read_binary+0x5c>
    7d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7d3e:	00 00 
    7d40:	41 b9 80 b0 ff ff    	mov    $0xffffb080,%r9d
    7d46:	e9 7c fe ff ff       	jmpq   7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7d50:	ba 01 00 00 00       	mov    $0x1,%edx
    7d55:	4c 89 ee             	mov    %r13,%rsi
    7d58:	4c 89 f7             	mov    %r14,%rdi
    7d5b:	e8 50 f3 00 00       	callq  170b0 <mbedtls_mpi_add_int>
    7d60:	41 89 c1             	mov    %eax,%r9d
    7d63:	85 c0                	test   %eax,%eax
    7d65:	0f 85 38 ff ff ff    	jne    7ca3 <mbedtls_ecp_point_read_binary+0x153>
    7d6b:	be 02 00 00 00       	mov    $0x2,%esi
    7d70:	4c 89 f7             	mov    %r14,%rdi
    7d73:	e8 e8 ed 00 00       	callq  16b60 <mbedtls_mpi_shift_r>
    7d78:	41 89 c1             	mov    %eax,%r9d
    7d7b:	85 c0                	test   %eax,%eax
    7d7d:	0f 85 20 ff ff ff    	jne    7ca3 <mbedtls_ecp_point_read_binary+0x153>
    7d83:	45 31 c0             	xor    %r8d,%r8d
    7d86:	4c 89 e9             	mov    %r13,%rcx
    7d89:	4c 89 f2             	mov    %r14,%rdx
    7d8c:	48 89 ee             	mov    %rbp,%rsi
    7d8f:	48 89 ef             	mov    %rbp,%rdi
    7d92:	e8 19 0b 01 00       	callq  188b0 <mbedtls_mpi_exp_mod>
    7d97:	41 89 c1             	mov    %eax,%r9d
    7d9a:	85 c0                	test   %eax,%eax
    7d9c:	0f 85 01 ff ff ff    	jne    7ca3 <mbedtls_ecp_point_read_binary+0x153>
    7da2:	31 f6                	xor    %esi,%esi
    7da4:	48 89 ef             	mov    %rbp,%rdi
    7da7:	89 04 24             	mov    %eax,(%rsp)
    7daa:	e8 41 ea 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    7daf:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    7db4:	44 8b 0c 24          	mov    (%rsp),%r9d
    7db8:	41 83 e7 01          	and    $0x1,%r15d
    7dbc:	41 39 c7             	cmp    %eax,%r15d
    7dbf:	0f 84 de fe ff ff    	je     7ca3 <mbedtls_ecp_point_read_binary+0x153>
    7dc5:	48 89 ea             	mov    %rbp,%rdx
    7dc8:	4c 89 ee             	mov    %r13,%rsi
    7dcb:	48 89 ef             	mov    %rbp,%rdi
    7dce:	e8 cd f2 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    7dd3:	41 89 c1             	mov    %eax,%r9d
    7dd6:	e9 c8 fe ff ff       	jmpq   7ca3 <mbedtls_ecp_point_read_binary+0x153>
    7ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7de0:	48 8d 34 dd ff ff ff 	lea    -0x1(,%rbx,8),%rsi
    7de7:	ff 
    7de8:	31 d2                	xor    %edx,%edx
    7dea:	4c 89 e7             	mov    %r12,%rdi
    7ded:	e8 2e ea 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    7df2:	41 89 c1             	mov    %eax,%r9d
    7df5:	85 c0                	test   %eax,%eax
    7df7:	0f 84 05 ff ff ff    	je     7d02 <mbedtls_ecp_point_read_binary+0x1b2>
    7dfd:	e9 c5 fd ff ff       	jmpq   7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7e02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7e08:	4b 8d 44 36 01       	lea    0x1(%r14,%r14,1),%rax
    7e0d:	48 39 d8             	cmp    %rbx,%rax
    7e10:	0f 85 2a ff ff ff    	jne    7d40 <mbedtls_ecp_point_read_binary+0x1f0>
    7e16:	48 8b 34 24          	mov    (%rsp),%rsi
    7e1a:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
    7e1f:	4c 89 f2             	mov    %r14,%rdx
    7e22:	48 01 ee             	add    %rbp,%rsi
    7e25:	e8 76 eb 00 00       	callq  169a0 <mbedtls_mpi_read_binary>
    7e2a:	41 89 c1             	mov    %eax,%r9d
    7e2d:	e9 95 fd ff ff       	jmpq   7bc7 <mbedtls_ecp_point_read_binary+0x77>
    7e32:	e8 39 c4 ff ff       	callq  4270 <__stack_chk_fail@plt>
    7e37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7e3e:	00 00 

0000000000007e40 <mbedtls_ecp_tls_read_point>:
    7e40:	f3 0f 1e fa          	endbr64 
    7e44:	48 83 f9 01          	cmp    $0x1,%rcx
    7e48:	76 36                	jbe    7e80 <mbedtls_ecp_tls_read_point+0x40>
    7e4a:	48 8b 02             	mov    (%rdx),%rax
    7e4d:	4c 8d 48 01          	lea    0x1(%rax),%r9
    7e51:	4c 89 0a             	mov    %r9,(%rdx)
    7e54:	44 0f b6 00          	movzbl (%rax),%r8d
    7e58:	45 84 c0             	test   %r8b,%r8b
    7e5b:	74 23                	je     7e80 <mbedtls_ecp_tls_read_point+0x40>
    7e5d:	48 83 e9 01          	sub    $0x1,%rcx
    7e61:	49 39 c8             	cmp    %rcx,%r8
    7e64:	77 1a                	ja     7e80 <mbedtls_ecp_tls_read_point+0x40>
    7e66:	4b 8d 04 01          	lea    (%r9,%r8,1),%rax
    7e6a:	4c 89 c1             	mov    %r8,%rcx
    7e6d:	48 89 02             	mov    %rax,(%rdx)
    7e70:	4c 89 ca             	mov    %r9,%rdx
    7e73:	e9 d8 fc ff ff       	jmpq   7b50 <mbedtls_ecp_point_read_binary>
    7e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7e7f:	00 
    7e80:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    7e85:	c3                   	retq   
    7e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7e8d:	00 00 00 

0000000000007e90 <mbedtls_ecp_tls_write_point>:
    7e90:	f3 0f 1e fa          	endbr64 
    7e94:	4d 85 c9             	test   %r9,%r9
    7e97:	74 37                	je     7ed0 <mbedtls_ecp_tls_write_point+0x40>
    7e99:	83 fa 01             	cmp    $0x1,%edx
    7e9c:	77 32                	ja     7ed0 <mbedtls_ecp_tls_write_point+0x40>
    7e9e:	55                   	push   %rbp
    7e9f:	49 83 e9 01          	sub    $0x1,%r9
    7ea3:	4c 89 c5             	mov    %r8,%rbp
    7ea6:	4d 8d 40 01          	lea    0x1(%r8),%r8
    7eaa:	53                   	push   %rbx
    7eab:	48 89 cb             	mov    %rcx,%rbx
    7eae:	48 83 ec 08          	sub    $0x8,%rsp
    7eb2:	e8 f9 fa ff ff       	callq  79b0 <mbedtls_ecp_point_write_binary>
    7eb7:	85 c0                	test   %eax,%eax
    7eb9:	75 0a                	jne    7ec5 <mbedtls_ecp_tls_write_point+0x35>
    7ebb:	48 8b 13             	mov    (%rbx),%rdx
    7ebe:	88 55 00             	mov    %dl,0x0(%rbp)
    7ec1:	48 83 03 01          	addq   $0x1,(%rbx)
    7ec5:	48 83 c4 08          	add    $0x8,%rsp
    7ec9:	5b                   	pop    %rbx
    7eca:	5d                   	pop    %rbp
    7ecb:	c3                   	retq   
    7ecc:	0f 1f 40 00          	nopl   0x0(%rax)
    7ed0:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    7ed5:	c3                   	retq   
    7ed6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7edd:	00 00 00 

0000000000007ee0 <mbedtls_ecp_tls_read_group_id>:
    7ee0:	f3 0f 1e fa          	endbr64 
    7ee4:	48 83 fa 02          	cmp    $0x2,%rdx
    7ee8:	76 64                	jbe    7f4e <mbedtls_ecp_tls_read_group_id+0x6e>
    7eea:	48 8b 06             	mov    (%rsi),%rax
    7eed:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7ef1:	48 89 16             	mov    %rdx,(%rsi)
    7ef4:	80 38 03             	cmpb   $0x3,(%rax)
    7ef7:	75 55                	jne    7f4e <mbedtls_ecp_tls_read_group_id+0x6e>
    7ef9:	48 8d 50 02          	lea    0x2(%rax),%rdx
    7efd:	48 89 16             	mov    %rdx,(%rsi)
    7f00:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    7f04:	c1 e1 08             	shl    $0x8,%ecx
    7f07:	89 ca                	mov    %ecx,%edx
    7f09:	48 8d 48 03          	lea    0x3(%rax),%rcx
    7f0d:	48 89 0e             	mov    %rcx,(%rsi)
    7f10:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
    7f14:	48 8d 05 05 59 02 00 	lea    0x25905(%rip),%rax        # 2d820 <ecp_supported_curves>
    7f1b:	09 d1                	or     %edx,%ecx
    7f1d:	ba 19 00 00 00       	mov    $0x19,%edx
    7f22:	eb 13                	jmp    7f37 <mbedtls_ecp_tls_read_group_id+0x57>
    7f24:	0f 1f 40 00          	nopl   0x0(%rax)
    7f28:	8b 50 10             	mov    0x10(%rax),%edx
    7f2b:	48 83 c0 10          	add    $0x10,%rax
    7f2f:	85 d2                	test   %edx,%edx
    7f31:	74 15                	je     7f48 <mbedtls_ecp_tls_read_group_id+0x68>
    7f33:	0f b7 50 04          	movzwl 0x4(%rax),%edx
    7f37:	66 39 d1             	cmp    %dx,%cx
    7f3a:	75 ec                	jne    7f28 <mbedtls_ecp_tls_read_group_id+0x48>
    7f3c:	8b 00                	mov    (%rax),%eax
    7f3e:	89 07                	mov    %eax,(%rdi)
    7f40:	31 c0                	xor    %eax,%eax
    7f42:	c3                   	retq   
    7f43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7f48:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    7f4d:	c3                   	retq   
    7f4e:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    7f53:	c3                   	retq   
    7f54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7f5b:	00 00 00 00 
    7f5f:	90                   	nop

0000000000007f60 <mbedtls_ecp_tls_read_group>:
    7f60:	f3 0f 1e fa          	endbr64 
    7f64:	48 83 ec 18          	sub    $0x18,%rsp
    7f68:	49 89 f8             	mov    %rdi,%r8
    7f6b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7f72:	00 00 
    7f74:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7f79:	31 c0                	xor    %eax,%eax
    7f7b:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    7f80:	e8 5b ff ff ff       	callq  7ee0 <mbedtls_ecp_tls_read_group_id>
    7f85:	85 c0                	test   %eax,%eax
    7f87:	75 0c                	jne    7f95 <mbedtls_ecp_tls_read_group+0x35>
    7f89:	8b 74 24 04          	mov    0x4(%rsp),%esi
    7f8d:	4c 89 c7             	mov    %r8,%rdi
    7f90:	e8 cb 37 00 00       	callq  b760 <mbedtls_ecp_group_load>
    7f95:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    7f9a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    7fa1:	00 00 
    7fa3:	75 05                	jne    7faa <mbedtls_ecp_tls_read_group+0x4a>
    7fa5:	48 83 c4 18          	add    $0x18,%rsp
    7fa9:	c3                   	retq   
    7faa:	e8 c1 c2 ff ff       	callq  4270 <__stack_chk_fail@plt>
    7faf:	90                   	nop

0000000000007fb0 <mbedtls_ecp_tls_write_group>:
    7fb0:	f3 0f 1e fa          	endbr64 
    7fb4:	44 8b 07             	mov    (%rdi),%r8d
    7fb7:	48 8d 05 62 58 02 00 	lea    0x25862(%rip),%rax        # 2d820 <ecp_supported_curves>
    7fbe:	bf 05 00 00 00       	mov    $0x5,%edi
    7fc3:	eb 0e                	jmp    7fd3 <mbedtls_ecp_tls_write_group+0x23>
    7fc5:	0f 1f 00             	nopl   (%rax)
    7fc8:	8b 78 10             	mov    0x10(%rax),%edi
    7fcb:	48 83 c0 10          	add    $0x10,%rax
    7fcf:	85 ff                	test   %edi,%edi
    7fd1:	74 2d                	je     8000 <mbedtls_ecp_tls_write_group+0x50>
    7fd3:	41 39 f8             	cmp    %edi,%r8d
    7fd6:	75 f0                	jne    7fc8 <mbedtls_ecp_tls_write_group+0x18>
    7fd8:	48 c7 06 03 00 00 00 	movq   $0x3,(%rsi)
    7fdf:	48 83 f9 02          	cmp    $0x2,%rcx
    7fe3:	76 21                	jbe    8006 <mbedtls_ecp_tls_write_group+0x56>
    7fe5:	c6 02 03             	movb   $0x3,(%rdx)
    7fe8:	0f b7 40 04          	movzwl 0x4(%rax),%eax
    7fec:	66 c1 c0 08          	rol    $0x8,%ax
    7ff0:	66 89 42 01          	mov    %ax,0x1(%rdx)
    7ff4:	31 c0                	xor    %eax,%eax
    7ff6:	c3                   	retq   
    7ff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7ffe:	00 00 
    8000:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    8005:	c3                   	retq   
    8006:	b8 00 b1 ff ff       	mov    $0xffffb100,%eax
    800b:	c3                   	retq   
    800c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008010 <mbedtls_ecp_check_pubkey>:
    8010:	f3 0f 1e fa          	endbr64 
    8014:	41 57                	push   %r15
    8016:	41 56                	push   %r14
    8018:	41 55                	push   %r13
    801a:	49 89 f5             	mov    %rsi,%r13
    801d:	41 54                	push   %r12
    801f:	55                   	push   %rbp
    8020:	48 89 fd             	mov    %rdi,%rbp
    8023:	48 8d 7e 30          	lea    0x30(%rsi),%rdi
    8027:	be 01 00 00 00       	mov    $0x1,%esi
    802c:	53                   	push   %rbx
    802d:	48 83 ec 48          	sub    $0x48,%rsp
    8031:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8038:	00 00 
    803a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    803f:	31 c0                	xor    %eax,%eax
    8041:	e8 fa ec 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    8046:	85 c0                	test   %eax,%eax
    8048:	0f 85 12 02 00 00    	jne    8260 <mbedtls_ecp_check_pubkey+0x250>
    804e:	48 83 7d 60 00       	cmpq   $0x0,0x60(%rbp)
    8053:	0f 84 17 01 00 00    	je     8170 <mbedtls_ecp_check_pubkey+0x160>
    8059:	48 83 7d 78 00       	cmpq   $0x0,0x78(%rbp)
    805e:	0f 84 1c 01 00 00    	je     8180 <mbedtls_ecp_check_pubkey+0x170>
    8064:	31 f6                	xor    %esi,%esi
    8066:	4c 89 ef             	mov    %r13,%rdi
    8069:	e8 d2 ec 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    806e:	85 c0                	test   %eax,%eax
    8070:	0f 88 ea 01 00 00    	js     8260 <mbedtls_ecp_check_pubkey+0x250>
    8076:	4d 8d 65 18          	lea    0x18(%r13),%r12
    807a:	31 f6                	xor    %esi,%esi
    807c:	4c 89 e7             	mov    %r12,%rdi
    807f:	e8 bc ec 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    8084:	85 c0                	test   %eax,%eax
    8086:	0f 88 d4 01 00 00    	js     8260 <mbedtls_ecp_check_pubkey+0x250>
    808c:	4c 8d 75 08          	lea    0x8(%rbp),%r14
    8090:	4c 89 ef             	mov    %r13,%rdi
    8093:	4c 89 f6             	mov    %r14,%rsi
    8096:	e8 b5 eb 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    809b:	85 c0                	test   %eax,%eax
    809d:	0f 89 bd 01 00 00    	jns    8260 <mbedtls_ecp_check_pubkey+0x250>
    80a3:	4c 89 f6             	mov    %r14,%rsi
    80a6:	4c 89 e7             	mov    %r12,%rdi
    80a9:	e8 a2 eb 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    80ae:	85 c0                	test   %eax,%eax
    80b0:	0f 89 aa 01 00 00    	jns    8260 <mbedtls_ecp_check_pubkey+0x250>
    80b6:	49 89 e7             	mov    %rsp,%r15
    80b9:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    80be:	4c 89 ff             	mov    %r15,%rdi
    80c1:	e8 8a e2 00 00       	callq  16350 <mbedtls_mpi_init>
    80c6:	4c 89 f7             	mov    %r14,%rdi
    80c9:	e8 82 e2 00 00       	callq  16350 <mbedtls_mpi_init>
    80ce:	4c 89 e2             	mov    %r12,%rdx
    80d1:	4c 89 e6             	mov    %r12,%rsi
    80d4:	4c 89 ff             	mov    %r15,%rdi
    80d7:	e8 b4 f0 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    80dc:	41 89 c4             	mov    %eax,%r12d
    80df:	85 c0                	test   %eax,%eax
    80e1:	74 3d                	je     8120 <mbedtls_ecp_check_pubkey+0x110>
    80e3:	4c 89 ff             	mov    %r15,%rdi
    80e6:	e8 85 e2 00 00       	callq  16370 <mbedtls_mpi_free>
    80eb:	4c 89 f7             	mov    %r14,%rdi
    80ee:	e8 7d e2 00 00       	callq  16370 <mbedtls_mpi_free>
    80f3:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    80f8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    80ff:	00 00 
    8101:	0f 85 91 01 00 00    	jne    8298 <mbedtls_ecp_check_pubkey+0x288>
    8107:	48 83 c4 48          	add    $0x48,%rsp
    810b:	44 89 e0             	mov    %r12d,%eax
    810e:	5b                   	pop    %rbx
    810f:	5d                   	pop    %rbp
    8110:	41 5c                	pop    %r12
    8112:	41 5d                	pop    %r13
    8114:	41 5e                	pop    %r14
    8116:	41 5f                	pop    %r15
    8118:	c3                   	retq   
    8119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8120:	48 89 ee             	mov    %rbp,%rsi
    8123:	4c 89 ff             	mov    %r15,%rdi
    8126:	e8 55 d7 ff ff       	callq  5880 <ecp_modp>
    812b:	41 89 c4             	mov    %eax,%r12d
    812e:	85 c0                	test   %eax,%eax
    8130:	75 b1                	jne    80e3 <mbedtls_ecp_check_pubkey+0xd3>
    8132:	4c 89 ea             	mov    %r13,%rdx
    8135:	4c 89 f6             	mov    %r14,%rsi
    8138:	48 89 ef             	mov    %rbp,%rdi
    813b:	48 83 05 f5 9f 02 00 	addq   $0x1,0x29ff5(%rip)        # 32138 <mul_count>
    8142:	01 
    8143:	e8 88 db ff ff       	callq  5cd0 <ecp_sw_rhs>
    8148:	41 89 c4             	mov    %eax,%r12d
    814b:	85 c0                	test   %eax,%eax
    814d:	75 94                	jne    80e3 <mbedtls_ecp_check_pubkey+0xd3>
    814f:	4c 89 f6             	mov    %r14,%rsi
    8152:	4c 89 ff             	mov    %r15,%rdi
    8155:	e8 f6 ea 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    815a:	41 89 c4             	mov    %eax,%r12d
    815d:	85 c0                	test   %eax,%eax
    815f:	b8 80 b3 ff ff       	mov    $0xffffb380,%eax
    8164:	44 0f 45 e0          	cmovne %eax,%r12d
    8168:	e9 76 ff ff ff       	jmpq   80e3 <mbedtls_ecp_check_pubkey+0xd3>
    816d:	0f 1f 00             	nopl   (%rax)
    8170:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    8176:	e9 78 ff ff ff       	jmpq   80f3 <mbedtls_ecp_check_pubkey+0xe3>
    817b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8180:	4c 89 ef             	mov    %r13,%rdi
    8183:	e8 98 e7 00 00       	callq  16920 <mbedtls_mpi_size>
    8188:	49 89 c0             	mov    %rax,%r8
    818b:	48 8b 85 b8 00 00 00 	mov    0xb8(%rbp),%rax
    8192:	48 83 c0 07          	add    $0x7,%rax
    8196:	48 c1 e8 03          	shr    $0x3,%rax
    819a:	49 39 c0             	cmp    %rax,%r8
    819d:	0f 87 bd 00 00 00    	ja     8260 <mbedtls_ecp_check_pubkey+0x250>
    81a3:	31 f6                	xor    %esi,%esi
    81a5:	4c 89 ef             	mov    %r13,%rdi
    81a8:	e8 93 eb 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    81ad:	85 c0                	test   %eax,%eax
    81af:	0f 88 ab 00 00 00    	js     8260 <mbedtls_ecp_check_pubkey+0x250>
    81b5:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    81ba:	8b 5d 00             	mov    0x0(%rbp),%ebx
    81bd:	48 83 c5 08          	add    $0x8,%rbp
    81c1:	4c 89 f7             	mov    %r14,%rdi
    81c4:	e8 87 e1 00 00       	callq  16350 <mbedtls_mpi_init>
    81c9:	4c 89 ee             	mov    %r13,%rsi
    81cc:	4c 89 f7             	mov    %r14,%rdi
    81cf:	e8 2c e4 00 00       	callq  16600 <mbedtls_mpi_copy>
    81d4:	41 89 c4             	mov    %eax,%r12d
    81d7:	85 c0                	test   %eax,%eax
    81d9:	74 1e                	je     81f9 <mbedtls_ecp_check_pubkey+0x1e9>
    81db:	e9 0b ff ff ff       	jmpq   80eb <mbedtls_ecp_check_pubkey+0xdb>
    81e0:	48 89 ea             	mov    %rbp,%rdx
    81e3:	4c 89 f6             	mov    %r14,%rsi
    81e6:	4c 89 f7             	mov    %r14,%rdi
    81e9:	e8 b2 ee 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    81ee:	41 89 c4             	mov    %eax,%r12d
    81f1:	85 c0                	test   %eax,%eax
    81f3:	0f 85 f2 fe ff ff    	jne    80eb <mbedtls_ecp_check_pubkey+0xdb>
    81f9:	48 89 ee             	mov    %rbp,%rsi
    81fc:	4c 89 f7             	mov    %r14,%rdi
    81ff:	e8 4c ea 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    8204:	85 c0                	test   %eax,%eax
    8206:	79 d8                	jns    81e0 <mbedtls_ecp_check_pubkey+0x1d0>
    8208:	be 01 00 00 00       	mov    $0x1,%esi
    820d:	4c 89 f7             	mov    %r14,%rdi
    8210:	e8 2b eb 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    8215:	85 c0                	test   %eax,%eax
    8217:	7e 33                	jle    824c <mbedtls_ecp_check_pubkey+0x23c>
    8219:	83 fb 09             	cmp    $0x9,%ebx
    821c:	74 52                	je     8270 <mbedtls_ecp_check_pubkey+0x260>
    821e:	ba 01 00 00 00       	mov    $0x1,%edx
    8223:	4c 89 f6             	mov    %r14,%rsi
    8226:	4c 89 f7             	mov    %r14,%rdi
    8229:	e8 82 ee 00 00       	callq  170b0 <mbedtls_mpi_add_int>
    822e:	41 89 c4             	mov    %eax,%r12d
    8231:	85 c0                	test   %eax,%eax
    8233:	0f 85 b2 fe ff ff    	jne    80eb <mbedtls_ecp_check_pubkey+0xdb>
    8239:	48 89 ee             	mov    %rbp,%rsi
    823c:	4c 89 f7             	mov    %r14,%rdi
    823f:	e8 0c ea 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    8244:	85 c0                	test   %eax,%eax
    8246:	0f 85 9f fe ff ff    	jne    80eb <mbedtls_ecp_check_pubkey+0xdb>
    824c:	41 bc 80 b3 ff ff    	mov    $0xffffb380,%r12d
    8252:	e9 94 fe ff ff       	jmpq   80eb <mbedtls_ecp_check_pubkey+0xdb>
    8257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    825e:	00 00 
    8260:	41 bc 80 b3 ff ff    	mov    $0xffffb380,%r12d
    8266:	e9 88 fe ff ff       	jmpq   80f3 <mbedtls_ecp_check_pubkey+0xe3>
    826b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8270:	48 8d 35 89 55 02 00 	lea    0x25589(%rip),%rsi        # 2d800 <ecp_x25519_bad_point_1>
    8277:	4c 89 f7             	mov    %r14,%rdi
    827a:	e8 d1 e9 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    827f:	85 c0                	test   %eax,%eax
    8281:	74 c9                	je     824c <mbedtls_ecp_check_pubkey+0x23c>
    8283:	48 8d 35 56 55 02 00 	lea    0x25556(%rip),%rsi        # 2d7e0 <ecp_x25519_bad_point_2>
    828a:	4c 89 f7             	mov    %r14,%rdi
    828d:	e8 be e9 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    8292:	85 c0                	test   %eax,%eax
    8294:	75 88                	jne    821e <mbedtls_ecp_check_pubkey+0x20e>
    8296:	eb b4                	jmp    824c <mbedtls_ecp_check_pubkey+0x23c>
    8298:	e8 d3 bf ff ff       	callq  4270 <__stack_chk_fail@plt>
    829d:	0f 1f 00             	nopl   (%rax)

00000000000082a0 <mbedtls_ecp_check_privkey>:
    82a0:	f3 0f 1e fa          	endbr64 
    82a4:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    82a9:	74 45                	je     82f0 <mbedtls_ecp_check_privkey+0x50>
    82ab:	55                   	push   %rbp
    82ac:	48 89 f5             	mov    %rsi,%rbp
    82af:	53                   	push   %rbx
    82b0:	48 89 fb             	mov    %rdi,%rbx
    82b3:	48 83 ec 08          	sub    $0x8,%rsp
    82b7:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    82bc:	74 42                	je     8300 <mbedtls_ecp_check_privkey+0x60>
    82be:	be 01 00 00 00       	mov    $0x1,%esi
    82c3:	48 89 ef             	mov    %rbp,%rdi
    82c6:	e8 75 ea 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    82cb:	85 c0                	test   %eax,%eax
    82cd:	0f 88 7d 00 00 00    	js     8350 <mbedtls_ecp_check_privkey+0xb0>
    82d3:	48 8d b3 98 00 00 00 	lea    0x98(%rbx),%rsi
    82da:	48 89 ef             	mov    %rbp,%rdi
    82dd:	e8 6e e9 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    82e2:	85 c0                	test   %eax,%eax
    82e4:	79 6a                	jns    8350 <mbedtls_ecp_check_privkey+0xb0>
    82e6:	31 c0                	xor    %eax,%eax
    82e8:	48 83 c4 08          	add    $0x8,%rsp
    82ec:	5b                   	pop    %rbx
    82ed:	5d                   	pop    %rbp
    82ee:	c3                   	retq   
    82ef:	90                   	nop
    82f0:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    82f5:	c3                   	retq   
    82f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    82fd:	00 00 00 
    8300:	31 f6                	xor    %esi,%esi
    8302:	48 89 ef             	mov    %rbp,%rdi
    8305:	e8 e6 e4 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    830a:	85 c0                	test   %eax,%eax
    830c:	75 42                	jne    8350 <mbedtls_ecp_check_privkey+0xb0>
    830e:	be 01 00 00 00       	mov    $0x1,%esi
    8313:	48 89 ef             	mov    %rbp,%rdi
    8316:	e8 d5 e4 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    831b:	85 c0                	test   %eax,%eax
    831d:	75 31                	jne    8350 <mbedtls_ecp_check_privkey+0xb0>
    831f:	48 89 ef             	mov    %rbp,%rdi
    8322:	e8 d9 e5 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    8327:	48 83 e8 01          	sub    $0x1,%rax
    832b:	48 3b 83 b8 00 00 00 	cmp    0xb8(%rbx),%rax
    8332:	75 1c                	jne    8350 <mbedtls_ecp_check_privkey+0xb0>
    8334:	48 3d fe 00 00 00    	cmp    $0xfe,%rax
    833a:	75 aa                	jne    82e6 <mbedtls_ecp_check_privkey+0x46>
    833c:	be 02 00 00 00       	mov    $0x2,%esi
    8341:	48 89 ef             	mov    %rbp,%rdi
    8344:	e8 a7 e4 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    8349:	85 c0                	test   %eax,%eax
    834b:	74 99                	je     82e6 <mbedtls_ecp_check_privkey+0x46>
    834d:	0f 1f 00             	nopl   (%rax)
    8350:	b8 80 b3 ff ff       	mov    $0xffffb380,%eax
    8355:	eb 91                	jmp    82e8 <mbedtls_ecp_check_privkey+0x48>
    8357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    835e:	00 00 

0000000000008360 <ecp_mul_restartable_internal>:
    8360:	41 57                	push   %r15
    8362:	41 56                	push   %r14
    8364:	41 55                	push   %r13
    8366:	49 89 cd             	mov    %rcx,%r13
    8369:	41 54                	push   %r12
    836b:	55                   	push   %rbp
    836c:	53                   	push   %rbx
    836d:	48 89 fb             	mov    %rdi,%rbx
    8370:	48 81 ec b8 01 00 00 	sub    $0x1b8,%rsp
    8377:	48 8b 84 24 f0 01 00 	mov    0x1f0(%rsp),%rax
    837e:	00 
    837f:	48 89 34 24          	mov    %rsi,(%rsp)
    8383:	48 89 d6             	mov    %rdx,%rsi
    8386:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    838b:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    8390:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    8395:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    839a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    83a1:	00 00 
    83a3:	48 89 84 24 a8 01 00 	mov    %rax,0x1a8(%rsp)
    83aa:	00 
    83ab:	31 c0                	xor    %eax,%eax
    83ad:	e8 ee fe ff ff       	callq  82a0 <mbedtls_ecp_check_privkey>
    83b2:	41 89 c4             	mov    %eax,%r12d
    83b5:	85 c0                	test   %eax,%eax
    83b7:	74 2f                	je     83e8 <ecp_mul_restartable_internal+0x88>
    83b9:	48 8b 84 24 a8 01 00 	mov    0x1a8(%rsp),%rax
    83c0:	00 
    83c1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    83c8:	00 00 
    83ca:	0f 85 ee 0b 00 00    	jne    8fbe <ecp_mul_restartable_internal+0xc5e>
    83d0:	48 81 c4 b8 01 00 00 	add    $0x1b8,%rsp
    83d7:	44 89 e0             	mov    %r12d,%eax
    83da:	5b                   	pop    %rbx
    83db:	5d                   	pop    %rbp
    83dc:	41 5c                	pop    %r12
    83de:	41 5d                	pop    %r13
    83e0:	41 5e                	pop    %r14
    83e2:	41 5f                	pop    %r15
    83e4:	c3                   	retq   
    83e5:	0f 1f 00             	nopl   (%rax)
    83e8:	4c 89 ee             	mov    %r13,%rsi
    83eb:	48 89 df             	mov    %rbx,%rdi
    83ee:	e8 1d fc ff ff       	callq  8010 <mbedtls_ecp_check_pubkey>
    83f3:	41 89 c4             	mov    %eax,%r12d
    83f6:	85 c0                	test   %eax,%eax
    83f8:	75 bf                	jne    83b9 <ecp_mul_restartable_internal+0x59>
    83fa:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
    83ff:	0f 84 5b 03 00 00    	je     8760 <ecp_mul_restartable_internal+0x400>
    8405:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
    840a:	0f 84 a8 03 00 00    	je     87b8 <ecp_mul_restartable_internal+0x458>
    8410:	48 8d 73 68          	lea    0x68(%rbx),%rsi
    8414:	49 8d 7d 18          	lea    0x18(%r13),%rdi
    8418:	e8 33 e8 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    841d:	85 c0                	test   %eax,%eax
    841f:	0f 84 7b 02 00 00    	je     86a0 <ecp_mul_restartable_internal+0x340>
    8425:	48 8b 93 b8 00 00 00 	mov    0xb8(%rbx),%rdx
    842c:	48 81 fa 7f 01 00 00 	cmp    $0x17f,%rdx
    8433:	77 0a                	ja     843f <ecp_mul_restartable_internal+0xdf>
    8435:	48 83 fa 04          	cmp    $0x4,%rdx
    8439:	0f 86 6f 0c 00 00    	jbe    90ae <ecp_mul_restartable_internal+0xd4e>
    843f:	48 8d 42 03          	lea    0x3(%rdx),%rax
    8443:	c6 44 24 38 08       	movb   $0x8,0x38(%rsp)
    8448:	48 c1 e8 02          	shr    $0x2,%rax
    844c:	c7 44 24 30 08 00 00 	movl   $0x8,0x30(%rsp)
    8453:	00 
    8454:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8459:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
    8460:	00 00 00 00 
    8464:	c7 44 24 60 03 00 00 	movl   $0x3,0x60(%rsp)
    846b:	00 
    846c:	c7 44 24 48 04 00 00 	movl   $0x4,0x48(%rsp)
    8473:	00 
    8474:	8b 44 24 30          	mov    0x30(%rsp),%eax
    8478:	be 48 00 00 00       	mov    $0x48,%esi
    847d:	48 89 c7             	mov    %rax,%rdi
    8480:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    8485:	e8 46 be ff ff       	callq  42d0 <calloc@plt>
    848a:	48 89 c5             	mov    %rax,%rbp
    848d:	48 85 c0             	test   %rax,%rax
    8490:	0f 84 0d 0c 00 00    	je     90a3 <ecp_mul_restartable_internal+0xd43>
    8496:	0f b6 44 24 38       	movzbl 0x38(%rsp),%eax
    849b:	49 89 ef             	mov    %rbp,%r15
    849e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    84a3:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    84a7:	48 c1 e0 03          	shl    $0x3,%rax
    84ab:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    84b0:	4c 8d 74 05 00       	lea    0x0(%rbp,%rax,1),%r14
    84b5:	0f 1f 00             	nopl   (%rax)
    84b8:	4c 89 ff             	mov    %r15,%rdi
    84bb:	49 83 c7 48          	add    $0x48,%r15
    84bf:	e8 8c e9 ff ff       	callq  6e50 <mbedtls_ecp_point_init>
    84c4:	4d 39 f7             	cmp    %r14,%r15
    84c7:	75 ef                	jne    84b8 <ecp_mul_restartable_internal+0x158>
    84c9:	48 8d 84 24 40 01 00 	lea    0x140(%rsp),%rax
    84d0:	00 
    84d1:	4c 8d bc 24 a0 01 00 	lea    0x1a0(%rsp),%r15
    84d8:	00 
    84d9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    84dd:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
    84e4:	00 00 00 00 00 
    84e9:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    84ee:	49 89 c6             	mov    %rax,%r14
    84f1:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
    84f6:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
    84fd:	00 
    84fe:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    8505:	00 
    8506:	0f 29 84 24 20 01 00 	movaps %xmm0,0x120(%rsp)
    850d:	00 
    850e:	66 90                	xchg   %ax,%ax
    8510:	4c 89 f7             	mov    %r14,%rdi
    8513:	49 83 c6 18          	add    $0x18,%r14
    8517:	e8 34 de 00 00       	callq  16350 <mbedtls_mpi_init>
    851c:	4d 39 fe             	cmp    %r15,%r14
    851f:	75 ef                	jne    8510 <ecp_mul_restartable_internal+0x1b0>
    8521:	4c 89 ee             	mov    %r13,%rsi
    8524:	48 89 ef             	mov    %rbp,%rdi
    8527:	e8 44 eb ff ff       	callq  7070 <mbedtls_ecp_copy>
    852c:	41 89 c6             	mov    %eax,%r14d
    852f:	85 c0                	test   %eax,%eax
    8531:	0f 85 94 00 00 00    	jne    85cb <ecp_mul_restartable_internal+0x26b>
    8537:	4c 63 6c 24 60       	movslq 0x60(%rsp),%r13
    853c:	4c 0f af 6c 24 08    	imul   0x8(%rsp),%r13
    8542:	45 31 ff             	xor    %r15d,%r15d
    8545:	4d 85 ed             	test   %r13,%r13
    8548:	0f 84 bf 08 00 00    	je     8e0d <ecp_mul_restartable_internal+0xaad>
    854e:	44 89 64 24 60       	mov    %r12d,0x60(%rsp)
    8553:	4d 89 fc             	mov    %r15,%r12
    8556:	4d 89 ef             	mov    %r13,%r15
    8559:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
    855e:	eb 0d                	jmp    856d <ecp_mul_restartable_internal+0x20d>
    8560:	49 83 c4 01          	add    $0x1,%r12
    8564:	4d 39 fc             	cmp    %r15,%r12
    8567:	0f 84 9b 08 00 00    	je     8e08 <ecp_mul_restartable_internal+0xaa8>
    856d:	4c 89 e0             	mov    %r12,%rax
    8570:	31 d2                	xor    %edx,%edx
    8572:	be 01 00 00 00       	mov    $0x1,%esi
    8577:	48 f7 74 24 08       	divq   0x8(%rsp)
    857c:	89 c1                	mov    %eax,%ecx
    857e:	d3 e6                	shl    %cl,%esi
    8580:	40 0f b6 ce          	movzbl %sil,%ecx
    8584:	89 f0                	mov    %esi,%eax
    8586:	48 8d 0c c9          	lea    (%rcx,%rcx,8),%rcx
    858a:	4c 8d 74 cd 00       	lea    0x0(%rbp,%rcx,8),%r14
    858f:	48 85 d2             	test   %rdx,%rdx
    8592:	75 1a                	jne    85ae <ecp_mul_restartable_internal+0x24e>
    8594:	d0 e8                	shr    %al
    8596:	4c 89 f7             	mov    %r14,%rdi
    8599:	0f b6 c0             	movzbl %al,%eax
    859c:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    85a0:	48 8d 74 c5 00       	lea    0x0(%rbp,%rax,8),%rsi
    85a5:	e8 c6 ea ff ff       	callq  7070 <mbedtls_ecp_copy>
    85aa:	85 c0                	test   %eax,%eax
    85ac:	75 15                	jne    85c3 <ecp_mul_restartable_internal+0x263>
    85ae:	4c 89 e9             	mov    %r13,%rcx
    85b1:	4c 89 f2             	mov    %r14,%rdx
    85b4:	4c 89 f6             	mov    %r14,%rsi
    85b7:	48 89 df             	mov    %rbx,%rdi
    85ba:	e8 e1 e0 ff ff       	callq  66a0 <ecp_double_jac>
    85bf:	85 c0                	test   %eax,%eax
    85c1:	74 9d                	je     8560 <ecp_mul_restartable_internal+0x200>
    85c3:	44 8b 64 24 60       	mov    0x60(%rsp),%r12d
    85c8:	41 89 c6             	mov    %eax,%r14d
    85cb:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
    85d0:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    85d5:	0f 1f 00             	nopl   (%rax)
    85d8:	4c 89 ef             	mov    %r13,%rdi
    85db:	49 83 c5 18          	add    $0x18,%r13
    85df:	e8 8c dd 00 00       	callq  16370 <mbedtls_mpi_free>
    85e4:	4d 39 fd             	cmp    %r15,%r13
    85e7:	75 ef                	jne    85d8 <ecp_mul_restartable_internal+0x278>
    85e9:	45 85 f6             	test   %r14d,%r14d
    85ec:	0f 85 fe 07 00 00    	jne    8df0 <ecp_mul_restartable_internal+0xa90>
    85f2:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
    85f9:	85 c0                	test   %eax,%eax
    85fb:	0f 85 6f 01 00 00    	jne    8770 <ecp_mul_restartable_internal+0x410>
    8601:	ff 74 24 28          	pushq  0x28(%rsp)
    8605:	48 89 e9             	mov    %rbp,%rcx
    8608:	48 89 df             	mov    %rbx,%rdi
    860b:	ff 74 24 28          	pushq  0x28(%rsp)
    860f:	ff 74 24 20          	pushq  0x20(%rsp)
    8613:	ff 74 24 20          	pushq  0x20(%rsp)
    8617:	44 8b 4c 24 68       	mov    0x68(%rsp),%r9d
    861c:	44 8b 44 24 50       	mov    0x50(%rsp),%r8d
    8621:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    8626:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    862b:	e8 e0 ee ff ff       	callq  7510 <ecp_mul_comb_after_precomp>
    8630:	48 83 c4 20          	add    $0x20,%rsp
    8634:	41 89 c6             	mov    %eax,%r14d
    8637:	48 3b ab e8 00 00 00 	cmp    0xe8(%rbx),%rbp
    863e:	74 39                	je     8679 <ecp_mul_restartable_internal+0x319>
    8640:	0f b6 44 24 38       	movzbl 0x38(%rsp),%eax
    8645:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    864a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    864f:	48 89 eb             	mov    %rbp,%rbx
    8652:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    8656:	4c 8d 6c d5 00       	lea    0x0(%rbp,%rdx,8),%r13
    865b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8660:	48 89 df             	mov    %rbx,%rdi
    8663:	48 83 c3 48          	add    $0x48,%rbx
    8667:	e8 64 d5 ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    866c:	49 39 dd             	cmp    %rbx,%r13
    866f:	75 ef                	jne    8660 <ecp_mul_restartable_internal+0x300>
    8671:	48 89 ef             	mov    %rbp,%rdi
    8674:	e8 77 bb ff ff       	callq  41f0 <free@plt>
    8679:	45 85 f6             	test   %r14d,%r14d
    867c:	0f 84 37 fd ff ff    	je     83b9 <ecp_mul_restartable_internal+0x59>
    8682:	f3 0f 1e fa          	endbr64 
    8686:	48 8b 3c 24          	mov    (%rsp),%rdi
    868a:	45 89 f4             	mov    %r14d,%r12d
    868d:	48 85 ff             	test   %rdi,%rdi
    8690:	0f 84 23 fd ff ff    	je     83b9 <ecp_mul_restartable_internal+0x59>
    8696:	e8 35 d5 ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    869b:	e9 19 fd ff ff       	jmpq   83b9 <ecp_mul_restartable_internal+0x59>
    86a0:	48 8d 73 50          	lea    0x50(%rbx),%rsi
    86a4:	4c 89 ef             	mov    %r13,%rdi
    86a7:	e8 a4 e5 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    86ac:	31 d2                	xor    %edx,%edx
    86ae:	85 c0                	test   %eax,%eax
    86b0:	0f 94 c2             	sete   %dl
    86b3:	89 94 24 88 00 00 00 	mov    %edx,0x88(%rsp)
    86ba:	48 8b 93 b8 00 00 00 	mov    0xb8(%rbx),%rdx
    86c1:	48 81 fa 7f 01 00 00 	cmp    $0x17f,%rdx
    86c8:	0f 87 c2 00 00 00    	ja     8790 <ecp_mul_restartable_internal+0x430>
    86ce:	85 c0                	test   %eax,%eax
    86d0:	0f 85 5f fd ff ff    	jne    8435 <ecp_mul_restartable_internal+0xd5>
    86d6:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
    86dd:	b8 05 00 00 00       	mov    $0x5,%eax
    86e2:	48 89 fd             	mov    %rdi,%rbp
    86e5:	48 85 ff             	test   %rdi,%rdi
    86e8:	0f 84 a2 06 00 00    	je     8d90 <ecp_mul_restartable_internal+0xa30>
    86ee:	48 83 bb f0 00 00 00 	cmpq   $0x0,0xf0(%rbx)
    86f5:	00 
    86f6:	0f 85 9f 06 00 00    	jne    8d9b <ecp_mul_restartable_internal+0xa3b>
    86fc:	0f b6 f0             	movzbl %al,%esi
    86ff:	48 39 f2             	cmp    %rsi,%rdx
    8702:	0f 86 88 08 00 00    	jbe    8f90 <ecp_mul_restartable_internal+0xc30>
    8708:	8d 48 ff             	lea    -0x1(%rax),%ecx
    870b:	89 44 24 48          	mov    %eax,0x48(%rsp)
    870f:	b8 01 00 00 00       	mov    $0x1,%eax
    8714:	d3 e0                	shl    %cl,%eax
    8716:	89 4c 24 60          	mov    %ecx,0x60(%rsp)
    871a:	89 44 24 30          	mov    %eax,0x30(%rsp)
    871e:	88 44 24 38          	mov    %al,0x38(%rsp)
    8722:	48 8d 44 16 ff       	lea    -0x1(%rsi,%rdx,1),%rax
    8727:	31 d2                	xor    %edx,%edx
    8729:	48 f7 f6             	div    %rsi
    872c:	8b 94 24 88 00 00 00 	mov    0x88(%rsp),%edx
    8733:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8738:	85 d2                	test   %edx,%edx
    873a:	0f 84 34 fd ff ff    	je     8474 <ecp_mul_restartable_internal+0x114>
    8740:	48 89 fd             	mov    %rdi,%rbp
    8743:	48 85 ff             	test   %rdi,%rdi
    8746:	0f 85 b5 fe ff ff    	jne    8601 <ecp_mul_restartable_internal+0x2a1>
    874c:	c7 84 24 88 00 00 00 	movl   $0x1,0x88(%rsp)
    8753:	01 00 00 00 
    8757:	e9 18 fd ff ff       	jmpq   8474 <ecp_mul_restartable_internal+0x114>
    875c:	0f 1f 40 00          	nopl   0x0(%rax)
    8760:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    8766:	e9 4e fc ff ff       	jmpq   83b9 <ecp_mul_restartable_internal+0x59>
    876b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8770:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    8775:	48 89 ab e8 00 00 00 	mov    %rbp,0xe8(%rbx)
    877c:	48 89 83 f0 00 00 00 	mov    %rax,0xf0(%rbx)
    8783:	e9 79 fe ff ff       	jmpq   8601 <ecp_mul_restartable_internal+0x2a1>
    8788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    878f:	00 
    8790:	85 c0                	test   %eax,%eax
    8792:	0f 85 a7 fc ff ff    	jne    843f <ecp_mul_restartable_internal+0xdf>
    8798:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
    879f:	48 89 fd             	mov    %rdi,%rbp
    87a2:	48 85 ff             	test   %rdi,%rdi
    87a5:	0f 84 c9 08 00 00    	je     9074 <ecp_mul_restartable_internal+0xd14>
    87ab:	b8 06 00 00 00       	mov    $0x6,%eax
    87b0:	e9 39 ff ff ff       	jmpq   86ee <ecp_mul_restartable_internal+0x38e>
    87b5:	0f 1f 00             	nopl   (%rax)
    87b8:	4c 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%r15
    87bf:	00 
    87c0:	4c 8d b4 24 a0 01 00 	lea    0x1a0(%rsp),%r14
    87c7:	00 
    87c8:	4c 89 ff             	mov    %r15,%rdi
    87cb:	e8 80 e6 ff ff       	callq  6e50 <mbedtls_ecp_point_init>
    87d0:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    87d7:	00 
    87d8:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    87dd:	e8 6e db 00 00       	callq  16350 <mbedtls_mpi_init>
    87e2:	48 8d 84 24 40 01 00 	lea    0x140(%rsp),%rax
    87e9:	00 
    87ea:	4c 89 74 24 50       	mov    %r14,0x50(%rsp)
    87ef:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    87f4:	48 89 c5             	mov    %rax,%rbp
    87f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    87fe:	00 00 
    8800:	48 89 ef             	mov    %rbp,%rdi
    8803:	48 83 c5 18          	add    $0x18,%rbp
    8807:	e8 44 db 00 00       	callq  16350 <mbedtls_mpi_init>
    880c:	4c 39 f5             	cmp    %r14,%rbp
    880f:	75 ef                	jne    8800 <ecp_mul_restartable_internal+0x4a0>
    8811:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    8817:	0f 84 43 ff ff ff    	je     8760 <ecp_mul_restartable_internal+0x400>
    881d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8822:	4c 89 ee             	mov    %r13,%rsi
    8825:	e8 d6 dd 00 00       	callq  16600 <mbedtls_mpi_copy>
    882a:	41 89 c6             	mov    %eax,%r14d
    882d:	85 c0                	test   %eax,%eax
    882f:	0f 85 fb 04 00 00    	jne    8d30 <ecp_mul_restartable_internal+0x9d0>
    8835:	4c 89 ee             	mov    %r13,%rsi
    8838:	4c 89 ff             	mov    %r15,%rdi
    883b:	e8 30 e8 ff ff       	callq  7070 <mbedtls_ecp_copy>
    8840:	41 89 c6             	mov    %eax,%r14d
    8843:	85 c0                	test   %eax,%eax
    8845:	0f 85 e5 04 00 00    	jne    8d30 <ecp_mul_restartable_internal+0x9d0>
    884b:	48 8b 2c 24          	mov    (%rsp),%rbp
    884f:	be 01 00 00 00       	mov    $0x1,%esi
    8854:	48 89 ef             	mov    %rbp,%rdi
    8857:	e8 14 df 00 00       	callq  16770 <mbedtls_mpi_lset>
    885c:	41 89 c6             	mov    %eax,%r14d
    885f:	85 c0                	test   %eax,%eax
    8861:	0f 85 c9 04 00 00    	jne    8d30 <ecp_mul_restartable_internal+0x9d0>
    8867:	48 8d 45 30          	lea    0x30(%rbp),%rax
    886b:	31 f6                	xor    %esi,%esi
    886d:	48 89 c7             	mov    %rax,%rdi
    8870:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    8875:	e8 f6 de 00 00       	callq  16770 <mbedtls_mpi_lset>
    887a:	41 89 c6             	mov    %eax,%r14d
    887d:	85 c0                	test   %eax,%eax
    887f:	0f 85 ab 04 00 00    	jne    8d30 <ecp_mul_restartable_internal+0x9d0>
    8885:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    8889:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
    888d:	e8 de da 00 00       	callq  16370 <mbedtls_mpi_free>
    8892:	eb 1a                	jmp    88ae <ecp_mul_restartable_internal+0x54e>
    8894:	0f 1f 40 00          	nopl   0x0(%rax)
    8898:	48 89 ea             	mov    %rbp,%rdx
    889b:	4c 89 fe             	mov    %r15,%rsi
    889e:	4c 89 ff             	mov    %r15,%rdi
    88a1:	e8 0a e6 00 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    88a6:	85 c0                	test   %eax,%eax
    88a8:	0f 85 08 07 00 00    	jne    8fb6 <ecp_mul_restartable_internal+0xc56>
    88ae:	48 89 ee             	mov    %rbp,%rsi
    88b1:	4c 89 ff             	mov    %r15,%rdi
    88b4:	e8 97 e3 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    88b9:	85 c0                	test   %eax,%eax
    88bb:	79 db                	jns    8898 <ecp_mul_restartable_internal+0x538>
    88bd:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    88c2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    88c7:	4c 89 fe             	mov    %r15,%rsi
    88ca:	48 89 df             	mov    %rbx,%rdi
    88cd:	e8 8e d5 ff ff       	callq  5e60 <ecp_randomize_mxz>
    88d2:	41 89 c6             	mov    %eax,%r14d
    88d5:	85 c0                	test   %eax,%eax
    88d7:	0f 85 53 04 00 00    	jne    8d30 <ecp_mul_restartable_internal+0x9d0>
    88dd:	48 8b 83 b8 00 00 00 	mov    0xb8(%rbx),%rax
    88e4:	44 89 a4 24 88 00 00 	mov    %r12d,0x88(%rsp)
    88eb:	00 
    88ec:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
    88f1:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    88f6:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    88fd:	00 
    88fe:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    8903:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    8908:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    890d:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
    8912:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15
    8917:	48 83 7c 24 58 ff    	cmpq   $0xffffffffffffffff,0x58(%rsp)
    891d:	0f 84 a0 06 00 00    	je     8fc3 <ecp_mul_restartable_internal+0xc63>
    8923:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    8928:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    892d:	e8 be de 00 00       	callq  167f0 <mbedtls_mpi_get_bit>
    8932:	4c 8b 34 24          	mov    (%rsp),%r14
    8936:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    893b:	44 0f b6 e8          	movzbl %al,%r13d
    893f:	44 89 ea             	mov    %r13d,%edx
    8942:	4c 89 f7             	mov    %r14,%rdi
    8945:	e8 16 45 01 00       	callq  1ce60 <mbedtls_mpi_safe_cond_swap>
    894a:	85 c0                	test   %eax,%eax
    894c:	0f 85 be 03 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8952:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    8957:	44 89 ea             	mov    %r13d,%edx
    895a:	4c 89 ff             	mov    %r15,%rdi
    895d:	e8 fe 44 01 00       	callq  1ce60 <mbedtls_mpi_safe_cond_swap>
    8962:	85 c0                	test   %eax,%eax
    8964:	0f 85 a6 03 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    896a:	4c 89 fa             	mov    %r15,%rdx
    896d:	4c 89 f6             	mov    %r14,%rsi
    8970:	48 89 df             	mov    %rbx,%rdi
    8973:	e8 18 e7 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    8978:	85 c0                	test   %eax,%eax
    897a:	74 22                	je     899e <ecp_mul_restartable_internal+0x63e>
    897c:	e9 8f 03 00 00       	jmpq   8d10 <ecp_mul_restartable_internal+0x9b0>
    8981:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8988:	48 89 ea             	mov    %rbp,%rdx
    898b:	48 89 de             	mov    %rbx,%rsi
    898e:	48 89 df             	mov    %rbx,%rdi
    8991:	e8 1a e5 00 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    8996:	85 c0                	test   %eax,%eax
    8998:	0f 85 72 03 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    899e:	48 89 ee             	mov    %rbp,%rsi
    89a1:	48 89 df             	mov    %rbx,%rdi
    89a4:	e8 a7 e2 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    89a9:	85 c0                	test   %eax,%eax
    89ab:	79 db                	jns    8988 <ecp_mul_restartable_internal+0x628>
    89ad:	4c 8d a4 24 58 01 00 	lea    0x158(%rsp),%r12
    89b4:	00 
    89b5:	48 8b 34 24          	mov    (%rsp),%rsi
    89b9:	4c 89 fa             	mov    %r15,%rdx
    89bc:	4c 89 e7             	mov    %r12,%rdi
    89bf:	e8 dc e6 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    89c4:	85 c0                	test   %eax,%eax
    89c6:	74 2c                	je     89f4 <ecp_mul_restartable_internal+0x694>
    89c8:	e9 43 03 00 00       	jmpq   8d10 <ecp_mul_restartable_internal+0x9b0>
    89cd:	0f 1f 00             	nopl   (%rax)
    89d0:	31 f6                	xor    %esi,%esi
    89d2:	4c 89 e7             	mov    %r12,%rdi
    89d5:	e8 66 e3 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    89da:	85 c0                	test   %eax,%eax
    89dc:	74 21                	je     89ff <ecp_mul_restartable_internal+0x69f>
    89de:	48 89 ea             	mov    %rbp,%rdx
    89e1:	4c 89 e6             	mov    %r12,%rsi
    89e4:	4c 89 e7             	mov    %r12,%rdi
    89e7:	e8 a4 e6 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    89ec:	85 c0                	test   %eax,%eax
    89ee:	0f 85 1c 03 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    89f4:	8b b4 24 58 01 00 00 	mov    0x158(%rsp),%esi
    89fb:	85 f6                	test   %esi,%esi
    89fd:	78 d1                	js     89d0 <ecp_mul_restartable_internal+0x670>
    89ff:	4c 8d b4 24 70 01 00 	lea    0x170(%rsp),%r14
    8a06:	00 
    8a07:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    8a0c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    8a11:	4c 89 f7             	mov    %r14,%rdi
    8a14:	e8 77 e6 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    8a19:	85 c0                	test   %eax,%eax
    8a1b:	74 21                	je     8a3e <ecp_mul_restartable_internal+0x6de>
    8a1d:	e9 ee 02 00 00       	jmpq   8d10 <ecp_mul_restartable_internal+0x9b0>
    8a22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8a28:	48 89 ea             	mov    %rbp,%rdx
    8a2b:	4c 89 f6             	mov    %r14,%rsi
    8a2e:	4c 89 f7             	mov    %r14,%rdi
    8a31:	e8 7a e4 00 00       	callq  16eb0 <mbedtls_mpi_sub_abs>
    8a36:	85 c0                	test   %eax,%eax
    8a38:	0f 85 d2 02 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8a3e:	48 89 ee             	mov    %rbp,%rsi
    8a41:	4c 89 f7             	mov    %r14,%rdi
    8a44:	e8 07 e2 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    8a49:	85 c0                	test   %eax,%eax
    8a4b:	79 db                	jns    8a28 <ecp_mul_restartable_internal+0x6c8>
    8a4d:	48 8d 84 24 88 01 00 	lea    0x188(%rsp),%rax
    8a54:	00 
    8a55:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    8a5a:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    8a5f:	48 89 c7             	mov    %rax,%rdi
    8a62:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    8a67:	e8 34 e6 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    8a6c:	85 c0                	test   %eax,%eax
    8a6e:	0f 85 9c 02 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8a74:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
    8a79:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    8a7e:	eb 24                	jmp    8aa4 <ecp_mul_restartable_internal+0x744>
    8a80:	31 f6                	xor    %esi,%esi
    8a82:	48 89 df             	mov    %rbx,%rdi
    8a85:	e8 b6 e2 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    8a8a:	85 c0                	test   %eax,%eax
    8a8c:	74 21                	je     8aaf <ecp_mul_restartable_internal+0x74f>
    8a8e:	48 89 ea             	mov    %rbp,%rdx
    8a91:	48 89 de             	mov    %rbx,%rsi
    8a94:	48 89 df             	mov    %rbx,%rdi
    8a97:	e8 f4 e5 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    8a9c:	85 c0                	test   %eax,%eax
    8a9e:	0f 85 a7 05 00 00    	jne    904b <ecp_mul_restartable_internal+0xceb>
    8aa4:	8b 8c 24 88 01 00 00 	mov    0x188(%rsp),%ecx
    8aab:	85 c9                	test   %ecx,%ecx
    8aad:	78 d1                	js     8a80 <ecp_mul_restartable_internal+0x720>
    8aaf:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
    8ab4:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
    8ab9:	48 89 da             	mov    %rbx,%rdx
    8abc:	48 89 f7             	mov    %rsi,%rdi
    8abf:	e8 cc e6 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    8ac4:	85 c0                	test   %eax,%eax
    8ac6:	0f 85 44 02 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8acc:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    8ad1:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
    8ad6:	e8 a5 cd ff ff       	callq  5880 <ecp_modp>
    8adb:	85 c0                	test   %eax,%eax
    8add:	0f 85 2d 02 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8ae3:	4c 89 e2             	mov    %r12,%rdx
    8ae6:	4c 89 f6             	mov    %r14,%rsi
    8ae9:	4c 89 f7             	mov    %r14,%rdi
    8aec:	48 83 05 44 96 02 00 	addq   $0x1,0x29644(%rip)        # 32138 <mul_count>
    8af3:	01 
    8af4:	e8 97 e6 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    8af9:	85 c0                	test   %eax,%eax
    8afb:	0f 85 0f 02 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8b01:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    8b06:	4c 89 f7             	mov    %r14,%rdi
    8b09:	e8 72 cd ff ff       	callq  5880 <ecp_modp>
    8b0e:	85 c0                	test   %eax,%eax
    8b10:	0f 85 fa 01 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8b16:	48 89 da             	mov    %rbx,%rdx
    8b19:	48 89 de             	mov    %rbx,%rsi
    8b1c:	48 89 df             	mov    %rbx,%rdi
    8b1f:	48 83 05 11 96 02 00 	addq   $0x1,0x29611(%rip)        # 32138 <mul_count>
    8b26:	01 
    8b27:	e8 64 e6 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    8b2c:	85 c0                	test   %eax,%eax
    8b2e:	0f 85 dc 01 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8b34:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    8b39:	48 89 df             	mov    %rbx,%rdi
    8b3c:	e8 3f cd ff ff       	callq  5880 <ecp_modp>
    8b41:	85 c0                	test   %eax,%eax
    8b43:	0f 85 c7 01 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8b49:	4c 89 e2             	mov    %r12,%rdx
    8b4c:	4c 89 e6             	mov    %r12,%rsi
    8b4f:	4c 89 e7             	mov    %r12,%rdi
    8b52:	48 83 05 de 95 02 00 	addq   $0x1,0x295de(%rip)        # 32138 <mul_count>
    8b59:	01 
    8b5a:	e8 31 e6 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    8b5f:	85 c0                	test   %eax,%eax
    8b61:	0f 85 a9 01 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8b67:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    8b6c:	4c 89 e7             	mov    %r12,%rdi
    8b6f:	e8 0c cd ff ff       	callq  5880 <ecp_modp>
    8b74:	85 c0                	test   %eax,%eax
    8b76:	0f 85 94 01 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8b7c:	48 8b 3c 24          	mov    (%rsp),%rdi
    8b80:	4c 89 e2             	mov    %r12,%rdx
    8b83:	48 89 de             	mov    %rbx,%rsi
    8b86:	48 83 05 aa 95 02 00 	addq   $0x1,0x295aa(%rip)        # 32138 <mul_count>
    8b8d:	01 
    8b8e:	e8 fd e5 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    8b93:	85 c0                	test   %eax,%eax
    8b95:	0f 85 75 01 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8b9b:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    8ba0:	48 8b 3c 24          	mov    (%rsp),%rdi
    8ba4:	e8 d7 cc ff ff       	callq  5880 <ecp_modp>
    8ba9:	85 c0                	test   %eax,%eax
    8bab:	0f 85 5f 01 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8bb1:	4c 89 e2             	mov    %r12,%rdx
    8bb4:	48 89 de             	mov    %rbx,%rsi
    8bb7:	48 89 df             	mov    %rbx,%rdi
    8bba:	48 83 05 76 95 02 00 	addq   $0x1,0x29576(%rip)        # 32138 <mul_count>
    8bc1:	01 
    8bc2:	e8 d9 e4 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    8bc7:	85 c0                	test   %eax,%eax
    8bc9:	74 29                	je     8bf4 <ecp_mul_restartable_internal+0x894>
    8bcb:	e9 40 01 00 00       	jmpq   8d10 <ecp_mul_restartable_internal+0x9b0>
    8bd0:	31 f6                	xor    %esi,%esi
    8bd2:	48 89 df             	mov    %rbx,%rdi
    8bd5:	e8 66 e1 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    8bda:	85 c0                	test   %eax,%eax
    8bdc:	74 20                	je     8bfe <ecp_mul_restartable_internal+0x89e>
    8bde:	48 89 ea             	mov    %rbp,%rdx
    8be1:	48 89 de             	mov    %rbx,%rsi
    8be4:	48 89 df             	mov    %rbx,%rdi
    8be7:	e8 a4 e4 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    8bec:	85 c0                	test   %eax,%eax
    8bee:	0f 85 1c 01 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8bf4:	83 bc 24 40 01 00 00 	cmpl   $0x0,0x140(%rsp)
    8bfb:	00 
    8bfc:	78 d2                	js     8bd0 <ecp_mul_restartable_internal+0x870>
    8bfe:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    8c03:	48 89 d9             	mov    %rbx,%rcx
    8c06:	4c 89 fe             	mov    %r15,%rsi
    8c09:	48 8d 57 20          	lea    0x20(%rdi),%rdx
    8c0d:	e8 8e ce ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    8c12:	85 c0                	test   %eax,%eax
    8c14:	0f 85 f6 00 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8c1a:	4c 89 e2             	mov    %r12,%rdx
    8c1d:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
    8c22:	4c 89 f9             	mov    %r15,%rcx
    8c25:	4c 89 fe             	mov    %r15,%rsi
    8c28:	4c 89 e7             	mov    %r12,%rdi
    8c2b:	e8 30 d0 ff ff       	callq  5c60 <mbedtls_mpi_add_mod>
    8c30:	85 c0                	test   %eax,%eax
    8c32:	0f 85 d8 00 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8c38:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
    8c3d:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    8c42:	4c 89 f1             	mov    %r14,%rcx
    8c45:	4c 89 e7             	mov    %r12,%rdi
    8c48:	e8 13 d0 ff ff       	callq  5c60 <mbedtls_mpi_add_mod>
    8c4d:	85 c0                	test   %eax,%eax
    8c4f:	0f 85 bb 00 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8c55:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    8c5a:	4c 89 e7             	mov    %r12,%rdi
    8c5d:	48 89 c1             	mov    %rax,%rcx
    8c60:	48 89 c2             	mov    %rax,%rdx
    8c63:	48 89 c6             	mov    %rax,%rsi
    8c66:	e8 35 ce ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    8c6b:	85 c0                	test   %eax,%eax
    8c6d:	0f 85 9d 00 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8c73:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
    8c78:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    8c7d:	4c 89 f1             	mov    %r14,%rcx
    8c80:	4c 89 e7             	mov    %r12,%rdi
    8c83:	4d 89 e6             	mov    %r12,%r14
    8c86:	e8 a5 cd ff ff       	callq  5a30 <mbedtls_mpi_sub_mod>
    8c8b:	85 c0                	test   %eax,%eax
    8c8d:	0f 85 7d 00 00 00    	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8c93:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
    8c98:	4c 89 f7             	mov    %r14,%rdi
    8c9b:	4c 89 e1             	mov    %r12,%rcx
    8c9e:	4c 89 e2             	mov    %r12,%rdx
    8ca1:	4c 89 e6             	mov    %r12,%rsi
    8ca4:	e8 f7 cd ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    8ca9:	85 c0                	test   %eax,%eax
    8cab:	75 63                	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8cad:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8cb2:	4c 89 e1             	mov    %r12,%rcx
    8cb5:	4c 89 e6             	mov    %r12,%rsi
    8cb8:	4c 89 f7             	mov    %r14,%rdi
    8cbb:	e8 e0 cd ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    8cc0:	85 c0                	test   %eax,%eax
    8cc2:	75 4c                	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8cc4:	4c 89 f9             	mov    %r15,%rcx
    8cc7:	48 89 da             	mov    %rbx,%rdx
    8cca:	4c 89 fe             	mov    %r15,%rsi
    8ccd:	4c 89 f7             	mov    %r14,%rdi
    8cd0:	e8 cb cd ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    8cd5:	85 c0                	test   %eax,%eax
    8cd7:	75 37                	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8cd9:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    8cde:	48 8b 3c 24          	mov    (%rsp),%rdi
    8ce2:	44 89 ea             	mov    %r13d,%edx
    8ce5:	e8 76 41 01 00       	callq  1ce60 <mbedtls_mpi_safe_cond_swap>
    8cea:	85 c0                	test   %eax,%eax
    8cec:	75 22                	jne    8d10 <ecp_mul_restartable_internal+0x9b0>
    8cee:	44 89 ea             	mov    %r13d,%edx
    8cf1:	4c 89 e6             	mov    %r12,%rsi
    8cf4:	4c 89 ff             	mov    %r15,%rdi
    8cf7:	e8 64 41 01 00       	callq  1ce60 <mbedtls_mpi_safe_cond_swap>
    8cfc:	48 83 6c 24 58 01    	subq   $0x1,0x58(%rsp)
    8d02:	85 c0                	test   %eax,%eax
    8d04:	0f 84 0d fc ff ff    	je     8917 <ecp_mul_restartable_internal+0x5b7>
    8d0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8d10:	44 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12d
    8d17:	00 
    8d18:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    8d1d:	41 89 c6             	mov    %eax,%r14d
    8d20:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    8d25:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    8d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8d30:	4c 89 ff             	mov    %r15,%rdi
    8d33:	e8 98 ce ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    8d38:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8d3d:	e8 2e d6 00 00       	callq  16370 <mbedtls_mpi_free>
    8d42:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
    8d47:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    8d4c:	0f 1f 40 00          	nopl   0x0(%rax)
    8d50:	48 89 ef             	mov    %rbp,%rdi
    8d53:	48 83 c5 18          	add    $0x18,%rbp
    8d57:	e8 14 d6 00 00       	callq  16370 <mbedtls_mpi_free>
    8d5c:	4c 39 fd             	cmp    %r15,%rbp
    8d5f:	75 ef                	jne    8d50 <ecp_mul_restartable_internal+0x9f0>
    8d61:	45 85 f6             	test   %r14d,%r14d
    8d64:	0f 85 1e 02 00 00    	jne    8f88 <ecp_mul_restartable_internal+0xc28>
    8d6a:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
    8d6f:	0f 84 44 f6 ff ff    	je     83b9 <ecp_mul_restartable_internal+0x59>
    8d75:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
    8d7a:	0f 85 90 f6 ff ff    	jne    8410 <ecp_mul_restartable_internal+0xb0>
    8d80:	45 31 e4             	xor    %r12d,%r12d
    8d83:	e9 31 f6 ff ff       	jmpq   83b9 <ecp_mul_restartable_internal+0x59>
    8d88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8d8f:	00 
    8d90:	c7 84 24 88 00 00 00 	movl   $0x1,0x88(%rsp)
    8d97:	01 00 00 00 
    8d9b:	48 83 fa 05          	cmp    $0x5,%rdx
    8d9f:	48 19 f6             	sbb    %rsi,%rsi
    8da2:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    8da6:	48 83 c6 04          	add    $0x4,%rsi
    8daa:	48 83 fa 05          	cmp    $0x5,%rdx
    8dae:	19 c0                	sbb    %eax,%eax
    8db0:	83 e0 fa             	and    $0xfffffffa,%eax
    8db3:	83 c0 08             	add    $0x8,%eax
    8db6:	48 83 fa 05          	cmp    $0x5,%rdx
    8dba:	88 44 24 38          	mov    %al,0x38(%rsp)
    8dbe:	19 c0                	sbb    %eax,%eax
    8dc0:	83 e0 fa             	and    $0xfffffffa,%eax
    8dc3:	83 c0 08             	add    $0x8,%eax
    8dc6:	48 83 fa 05          	cmp    $0x5,%rdx
    8dca:	89 44 24 30          	mov    %eax,0x30(%rsp)
    8dce:	19 c0                	sbb    %eax,%eax
    8dd0:	83 e0 fe             	and    $0xfffffffe,%eax
    8dd3:	83 c0 03             	add    $0x3,%eax
    8dd6:	48 83 fa 05          	cmp    $0x5,%rdx
    8dda:	89 44 24 60          	mov    %eax,0x60(%rsp)
    8dde:	19 c0                	sbb    %eax,%eax
    8de0:	83 e0 fe             	and    $0xfffffffe,%eax
    8de3:	83 c0 04             	add    $0x4,%eax
    8de6:	89 44 24 48          	mov    %eax,0x48(%rsp)
    8dea:	e9 33 f9 ff ff       	jmpq   8722 <ecp_mul_restartable_internal+0x3c2>
    8def:	90                   	nop
    8df0:	48 3b ab e8 00 00 00 	cmp    0xe8(%rbx),%rbp
    8df7:	0f 85 4d f8 ff ff    	jne    864a <ecp_mul_restartable_internal+0x2ea>
    8dfd:	e9 80 f8 ff ff       	jmpq   8682 <ecp_mul_restartable_internal+0x322>
    8e02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8e08:	44 8b 64 24 60       	mov    0x60(%rsp),%r12d
    8e0d:	48 8d bc 24 00 01 00 	lea    0x100(%rsp),%rdi
    8e14:	00 
    8e15:	0f b6 74 24 38       	movzbl 0x38(%rsp),%esi
    8e1a:	31 d2                	xor    %edx,%edx
    8e1c:	b8 01 00 00 00       	mov    $0x1,%eax
    8e21:	48 89 bc 24 80 00 00 	mov    %rdi,0x80(%rsp)
    8e28:	00 
    8e29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8e30:	0f b6 c8             	movzbl %al,%ecx
    8e33:	48 83 c2 01          	add    $0x1,%rdx
    8e37:	01 c0                	add    %eax,%eax
    8e39:	48 8d 0c c9          	lea    (%rcx,%rcx,8),%rcx
    8e3d:	48 8d 4c cd 00       	lea    0x0(%rbp,%rcx,8),%rcx
    8e42:	48 89 4c d7 f8       	mov    %rcx,-0x8(%rdi,%rdx,8)
    8e47:	40 38 f0             	cmp    %sil,%al
    8e4a:	72 e4                	jb     8e30 <ecp_mul_restartable_internal+0xad0>
    8e4c:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
    8e53:	00 
    8e54:	48 89 df             	mov    %rbx,%rdi
    8e57:	e8 54 d4 ff ff       	callq  62b0 <ecp_normalize_jac_many>
    8e5c:	41 89 c6             	mov    %eax,%r14d
    8e5f:	85 c0                	test   %eax,%eax
    8e61:	0f 85 64 f7 ff ff    	jne    85cb <ecp_mul_restartable_internal+0x26b>
    8e67:	c6 44 24 60 01       	movb   $0x1,0x60(%rsp)
    8e6c:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    8e71:	48 89 6c 24 78       	mov    %rbp,0x78(%rsp)
    8e76:	44 89 a4 24 8c 00 00 	mov    %r12d,0x8c(%rsp)
    8e7d:	00 
    8e7e:	44 0f b6 64 24 60    	movzbl 0x60(%rsp),%r12d
    8e84:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    8e89:	4f 8d 2c e4          	lea    (%r12,%r12,8),%r13
    8e8d:	49 c1 e5 03          	shl    $0x3,%r13
    8e91:	4e 8d 3c 28          	lea    (%rax,%r13,1),%r15
    8e95:	4a 8d 6c 28 b8       	lea    -0x48(%rax,%r13,1),%rbp
    8e9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8ea0:	49 8d 74 2d 00       	lea    0x0(%r13,%rbp,1),%rsi
    8ea5:	4d 89 f0             	mov    %r14,%r8
    8ea8:	4c 89 f9             	mov    %r15,%rcx
    8eab:	48 89 ea             	mov    %rbp,%rdx
    8eae:	48 89 df             	mov    %rbx,%rdi
    8eb1:	e8 5a e2 ff ff       	callq  7110 <ecp_add_mixed>
    8eb6:	85 c0                	test   %eax,%eax
    8eb8:	0f 85 b2 00 00 00    	jne    8f70 <ecp_mul_restartable_internal+0xc10>
    8ebe:	48 83 ed 48          	sub    $0x48,%rbp
    8ec2:	49 83 ec 01          	sub    $0x1,%r12
    8ec6:	75 d8                	jne    8ea0 <ecp_mul_restartable_internal+0xb40>
    8ec8:	d0 64 24 60          	shlb   0x60(%rsp)
    8ecc:	0f b6 44 24 60       	movzbl 0x60(%rsp),%eax
    8ed1:	3a 44 24 38          	cmp    0x38(%rsp),%al
    8ed5:	72 a7                	jb     8e7e <ecp_mul_restartable_internal+0xb1e>
    8ed7:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
    8edc:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    8ee1:	b8 01 00 00 00       	mov    $0x1,%eax
    8ee6:	44 8b a4 24 8c 00 00 	mov    0x8c(%rsp),%r12d
    8eed:	00 
    8eee:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
    8ef5:	00 
    8ef6:	48 8d 55 48          	lea    0x48(%rbp),%rdx
    8efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f00:	48 89 54 c1 f8       	mov    %rdx,-0x8(%rcx,%rax,8)
    8f05:	48 83 c0 01          	add    $0x1,%rax
    8f09:	48 83 c2 48          	add    $0x48,%rdx
    8f0d:	48 39 f0             	cmp    %rsi,%rax
    8f10:	72 ee                	jb     8f00 <ecp_mul_restartable_internal+0xba0>
    8f12:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    8f17:	80 7c 24 38 01       	cmpb   $0x1,0x38(%rsp)
    8f1c:	48 89 df             	mov    %rbx,%rdi
    8f1f:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
    8f26:	00 
    8f27:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    8f2b:	b8 01 00 00 00       	mov    $0x1,%eax
    8f30:	48 0f 46 d0          	cmovbe %rax,%rdx
    8f34:	e8 77 d3 ff ff       	callq  62b0 <ecp_normalize_jac_many>
    8f39:	41 89 c6             	mov    %eax,%r14d
    8f3c:	85 c0                	test   %eax,%eax
    8f3e:	0f 85 87 f6 ff ff    	jne    85cb <ecp_mul_restartable_internal+0x26b>
    8f44:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
    8f49:	4c 8d 7d 30          	lea    0x30(%rbp),%r15
    8f4d:	4d 01 fd             	add    %r15,%r13
    8f50:	4c 89 ff             	mov    %r15,%rdi
    8f53:	49 83 c7 48          	add    $0x48,%r15
    8f57:	e8 14 d4 00 00       	callq  16370 <mbedtls_mpi_free>
    8f5c:	4d 39 fd             	cmp    %r15,%r13
    8f5f:	75 ef                	jne    8f50 <ecp_mul_restartable_internal+0xbf0>
    8f61:	e9 65 f6 ff ff       	jmpq   85cb <ecp_mul_restartable_internal+0x26b>
    8f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8f6d:	00 00 00 
    8f70:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
    8f75:	44 8b a4 24 8c 00 00 	mov    0x8c(%rsp),%r12d
    8f7c:	00 
    8f7d:	41 89 c6             	mov    %eax,%r14d
    8f80:	e9 46 f6 ff ff       	jmpq   85cb <ecp_mul_restartable_internal+0x26b>
    8f85:	0f 1f 00             	nopl   (%rax)
    8f88:	45 89 f4             	mov    %r14d,%r12d
    8f8b:	e9 29 f4 ff ff       	jmpq   83b9 <ecp_mul_restartable_internal+0x59>
    8f90:	48 8d 42 01          	lea    0x1(%rdx),%rax
    8f94:	c6 44 24 38 02       	movb   $0x2,0x38(%rsp)
    8f99:	48 d1 e8             	shr    %rax
    8f9c:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
    8fa3:	00 
    8fa4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8fa9:	c7 44 24 48 02 00 00 	movl   $0x2,0x48(%rsp)
    8fb0:	00 
    8fb1:	e9 4b f6 ff ff       	jmpq   8601 <ecp_mul_restartable_internal+0x2a1>
    8fb6:	41 89 c6             	mov    %eax,%r14d
    8fb9:	e9 72 fd ff ff       	jmpq   8d30 <ecp_mul_restartable_internal+0x9d0>
    8fbe:	e8 ad b2 ff ff       	callq  4270 <__stack_chk_fail@plt>
    8fc3:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    8fc8:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    8fcd:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    8fd2:	48 8b 34 24          	mov    (%rsp),%rsi
    8fd6:	48 89 df             	mov    %rbx,%rdi
    8fd9:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    8fde:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    8fe3:	44 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12d
    8fea:	00 
    8feb:	e8 70 ce ff ff       	callq  5e60 <ecp_randomize_mxz>
    8ff0:	41 89 c6             	mov    %eax,%r14d
    8ff3:	85 c0                	test   %eax,%eax
    8ff5:	0f 85 35 fd ff ff    	jne    8d30 <ecp_mul_restartable_internal+0x9d0>
    8ffb:	48 89 ea             	mov    %rbp,%rdx
    8ffe:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
    9003:	48 89 ee             	mov    %rbp,%rsi
    9006:	48 89 ef             	mov    %rbp,%rdi
    9009:	e8 22 0d 01 00       	callq  19d30 <mbedtls_mpi_inv_mod>
    900e:	41 89 c6             	mov    %eax,%r14d
    9011:	85 c0                	test   %eax,%eax
    9013:	0f 85 17 fd ff ff    	jne    8d30 <ecp_mul_restartable_internal+0x9d0>
    9019:	48 8b 14 24          	mov    (%rsp),%rdx
    901d:	48 89 e9             	mov    %rbp,%rcx
    9020:	48 89 df             	mov    %rbx,%rdi
    9023:	48 89 d6             	mov    %rdx,%rsi
    9026:	e8 75 ca ff ff       	callq  5aa0 <mbedtls_mpi_mul_mod>
    902b:	41 89 c6             	mov    %eax,%r14d
    902e:	85 c0                	test   %eax,%eax
    9030:	0f 85 fa fc ff ff    	jne    8d30 <ecp_mul_restartable_internal+0x9d0>
    9036:	be 01 00 00 00       	mov    $0x1,%esi
    903b:	48 89 ef             	mov    %rbp,%rdi
    903e:	e8 2d d7 00 00       	callq  16770 <mbedtls_mpi_lset>
    9043:	41 89 c6             	mov    %eax,%r14d
    9046:	e9 e5 fc ff ff       	jmpq   8d30 <ecp_mul_restartable_internal+0x9d0>
    904b:	41 89 c6             	mov    %eax,%r14d
    904e:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    9053:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    9058:	44 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12d
    905f:	00 
    9060:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    9065:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    906a:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    906f:	e9 bc fc ff ff       	jmpq   8d30 <ecp_mul_restartable_internal+0x9d0>
    9074:	48 83 c2 03          	add    $0x3,%rdx
    9078:	c7 44 24 48 04 00 00 	movl   $0x4,0x48(%rsp)
    907f:	00 
    9080:	48 c1 ea 02          	shr    $0x2,%rdx
    9084:	c7 44 24 60 03 00 00 	movl   $0x3,0x60(%rsp)
    908b:	00 
    908c:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9091:	c7 44 24 30 08 00 00 	movl   $0x8,0x30(%rsp)
    9098:	00 
    9099:	c6 44 24 38 08       	movb   $0x8,0x38(%rsp)
    909e:	e9 9d f6 ff ff       	jmpq   8740 <ecp_mul_restartable_internal+0x3e0>
    90a3:	41 be 80 b2 ff ff    	mov    $0xffffb280,%r14d
    90a9:	e9 d4 f5 ff ff       	jmpq   8682 <ecp_mul_restartable_internal+0x322>
    90ae:	48 83 c2 01          	add    $0x1,%rdx
    90b2:	c6 44 24 38 02       	movb   $0x2,0x38(%rsp)
    90b7:	48 d1 ea             	shr    %rdx
    90ba:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
    90c1:	00 
    90c2:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    90c7:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
    90ce:	00 00 00 00 
    90d2:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
    90d9:	00 
    90da:	c7 44 24 48 02 00 00 	movl   $0x2,0x48(%rsp)
    90e1:	00 
    90e2:	e9 8d f3 ff ff       	jmpq   8474 <ecp_mul_restartable_internal+0x114>
    90e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    90ee:	00 00 

00000000000090f0 <mbedtls_ecp_mul_restartable>:
    90f0:	f3 0f 1e fa          	endbr64 
    90f4:	4d 85 c0             	test   %r8,%r8
    90f7:	74 05                	je     90fe <mbedtls_ecp_mul_restartable+0xe>
    90f9:	e9 62 f2 ff ff       	jmpq   8360 <ecp_mul_restartable_internal>
    90fe:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    9103:	c3                   	retq   
    9104:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    910b:	00 00 00 00 
    910f:	90                   	nop

0000000000009110 <mbedtls_ecp_mul>:
    9110:	f3 0f 1e fa          	endbr64 
    9114:	4d 85 c0             	test   %r8,%r8
    9117:	74 10                	je     9129 <mbedtls_ecp_mul+0x19>
    9119:	48 83 ec 10          	sub    $0x10,%rsp
    911d:	6a 00                	pushq  $0x0
    911f:	e8 3c f2 ff ff       	callq  8360 <ecp_mul_restartable_internal>
    9124:	48 83 c4 18          	add    $0x18,%rsp
    9128:	c3                   	retq   
    9129:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    912e:	c3                   	retq   
    912f:	90                   	nop

0000000000009130 <mbedtls_ecp_mul_shortcuts>:
    9130:	41 57                	push   %r15
    9132:	49 89 ff             	mov    %rdi,%r15
    9135:	41 56                	push   %r14
    9137:	49 89 ce             	mov    %rcx,%r14
    913a:	41 55                	push   %r13
    913c:	49 89 f5             	mov    %rsi,%r13
    913f:	41 54                	push   %r12
    9141:	49 89 d4             	mov    %rdx,%r12
    9144:	55                   	push   %rbp
    9145:	53                   	push   %rbx
    9146:	4c 89 c3             	mov    %r8,%rbx
    9149:	48 83 ec 28          	sub    $0x28,%rsp
    914d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9154:	00 00 
    9156:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    915b:	31 c0                	xor    %eax,%eax
    915d:	48 89 e5             	mov    %rsp,%rbp
    9160:	48 89 ef             	mov    %rbp,%rdi
    9163:	e8 e8 d1 00 00       	callq  16350 <mbedtls_mpi_init>
    9168:	31 f6                	xor    %esi,%esi
    916a:	4c 89 e7             	mov    %r12,%rdi
    916d:	e8 ce db 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    9172:	85 c0                	test   %eax,%eax
    9174:	75 4a                	jne    91c0 <mbedtls_ecp_mul_shortcuts+0x90>
    9176:	4c 89 f6             	mov    %r14,%rsi
    9179:	4c 89 ff             	mov    %r15,%rdi
    917c:	e8 8f ee ff ff       	callq  8010 <mbedtls_ecp_check_pubkey>
    9181:	41 89 c4             	mov    %eax,%r12d
    9184:	85 c0                	test   %eax,%eax
    9186:	0f 84 f4 00 00 00    	je     9280 <mbedtls_ecp_mul_shortcuts+0x150>
    918c:	48 89 ef             	mov    %rbp,%rdi
    918f:	e8 dc d1 00 00       	callq  16370 <mbedtls_mpi_free>
    9194:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9199:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    91a0:	00 00 
    91a2:	0f 85 0e 01 00 00    	jne    92b6 <mbedtls_ecp_mul_shortcuts+0x186>
    91a8:	48 83 c4 28          	add    $0x28,%rsp
    91ac:	44 89 e0             	mov    %r12d,%eax
    91af:	5b                   	pop    %rbx
    91b0:	5d                   	pop    %rbp
    91b1:	41 5c                	pop    %r12
    91b3:	41 5d                	pop    %r13
    91b5:	41 5e                	pop    %r14
    91b7:	41 5f                	pop    %r15
    91b9:	c3                   	retq   
    91ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    91c0:	be 01 00 00 00       	mov    $0x1,%esi
    91c5:	4c 89 e7             	mov    %r12,%rdi
    91c8:	e8 73 db 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    91cd:	85 c0                	test   %eax,%eax
    91cf:	75 27                	jne    91f8 <mbedtls_ecp_mul_shortcuts+0xc8>
    91d1:	4c 89 f6             	mov    %r14,%rsi
    91d4:	4c 89 ff             	mov    %r15,%rdi
    91d7:	e8 34 ee ff ff       	callq  8010 <mbedtls_ecp_check_pubkey>
    91dc:	41 89 c4             	mov    %eax,%r12d
    91df:	85 c0                	test   %eax,%eax
    91e1:	75 a9                	jne    918c <mbedtls_ecp_mul_shortcuts+0x5c>
    91e3:	4c 89 f6             	mov    %r14,%rsi
    91e6:	4c 89 ef             	mov    %r13,%rdi
    91e9:	e8 82 de ff ff       	callq  7070 <mbedtls_ecp_copy>
    91ee:	41 89 c4             	mov    %eax,%r12d
    91f1:	eb 99                	jmp    918c <mbedtls_ecp_mul_shortcuts+0x5c>
    91f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    91f8:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    91ff:	4c 89 e7             	mov    %r12,%rdi
    9202:	e8 39 db 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    9207:	85 c0                	test   %eax,%eax
    9209:	0f 85 81 00 00 00    	jne    9290 <mbedtls_ecp_mul_shortcuts+0x160>
    920f:	4c 89 f6             	mov    %r14,%rsi
    9212:	4c 89 ff             	mov    %r15,%rdi
    9215:	e8 f6 ed ff ff       	callq  8010 <mbedtls_ecp_check_pubkey>
    921a:	41 89 c4             	mov    %eax,%r12d
    921d:	85 c0                	test   %eax,%eax
    921f:	0f 85 67 ff ff ff    	jne    918c <mbedtls_ecp_mul_shortcuts+0x5c>
    9225:	4c 89 f6             	mov    %r14,%rsi
    9228:	4c 89 ef             	mov    %r13,%rdi
    922b:	e8 40 de ff ff       	callq  7070 <mbedtls_ecp_copy>
    9230:	41 89 c4             	mov    %eax,%r12d
    9233:	85 c0                	test   %eax,%eax
    9235:	0f 85 51 ff ff ff    	jne    918c <mbedtls_ecp_mul_shortcuts+0x5c>
    923b:	49 83 c5 18          	add    $0x18,%r13
    923f:	31 f6                	xor    %esi,%esi
    9241:	4c 89 ef             	mov    %r13,%rdi
    9244:	e8 f7 da 00 00       	callq  16d40 <mbedtls_mpi_cmp_int>
    9249:	49 8d 77 08          	lea    0x8(%r15),%rsi
    924d:	4c 89 ea             	mov    %r13,%rdx
    9250:	48 89 ef             	mov    %rbp,%rdi
    9253:	89 c3                	mov    %eax,%ebx
    9255:	e8 46 de 00 00       	callq  170a0 <mbedtls_mpi_sub_mpi>
    925a:	41 89 c4             	mov    %eax,%r12d
    925d:	85 c0                	test   %eax,%eax
    925f:	0f 85 27 ff ff ff    	jne    918c <mbedtls_ecp_mul_shortcuts+0x5c>
    9265:	31 d2                	xor    %edx,%edx
    9267:	85 db                	test   %ebx,%ebx
    9269:	48 89 ee             	mov    %rbp,%rsi
    926c:	4c 89 ef             	mov    %r13,%rdi
    926f:	0f 95 c2             	setne  %dl
    9272:	e8 39 3b 01 00       	callq  1cdb0 <mbedtls_mpi_safe_cond_assign>
    9277:	41 89 c4             	mov    %eax,%r12d
    927a:	e9 0d ff ff ff       	jmpq   918c <mbedtls_ecp_mul_shortcuts+0x5c>
    927f:	90                   	nop
    9280:	4c 89 ef             	mov    %r13,%rdi
    9283:	e8 48 de ff ff       	callq  70d0 <mbedtls_ecp_set_zero>
    9288:	41 89 c4             	mov    %eax,%r12d
    928b:	e9 fc fe ff ff       	jmpq   918c <mbedtls_ecp_mul_shortcuts+0x5c>
    9290:	48 83 ec 08          	sub    $0x8,%rsp
    9294:	4c 89 e2             	mov    %r12,%rdx
    9297:	45 31 c9             	xor    %r9d,%r9d
    929a:	45 31 c0             	xor    %r8d,%r8d
    929d:	53                   	push   %rbx
    929e:	4c 89 f1             	mov    %r14,%rcx
    92a1:	4c 89 ee             	mov    %r13,%rsi
    92a4:	4c 89 ff             	mov    %r15,%rdi
    92a7:	e8 b4 f0 ff ff       	callq  8360 <ecp_mul_restartable_internal>
    92ac:	41 89 c4             	mov    %eax,%r12d
    92af:	58                   	pop    %rax
    92b0:	5a                   	pop    %rdx
    92b1:	e9 d6 fe ff ff       	jmpq   918c <mbedtls_ecp_mul_shortcuts+0x5c>
    92b6:	e8 b5 af ff ff       	callq  4270 <__stack_chk_fail@plt>
    92bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000092c0 <mbedtls_ecp_muladd_restartable.part.0>:
    92c0:	41 57                	push   %r15
    92c2:	41 56                	push   %r14
    92c4:	41 55                	push   %r13
    92c6:	49 89 fd             	mov    %rdi,%r13
    92c9:	41 54                	push   %r12
    92cb:	55                   	push   %rbp
    92cc:	53                   	push   %rbx
    92cd:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    92d4:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    92d9:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
    92de:	48 8d 9c 24 80 00 00 	lea    0x80(%rsp),%rbx
    92e5:	00 
    92e6:	4c 8b bc 24 30 01 00 	mov    0x130(%rsp),%r15
    92ed:	00 
    92ee:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    92f3:	4c 89 f7             	mov    %r14,%rdi
    92f6:	49 89 dc             	mov    %rbx,%r12
    92f9:	48 8d ac 24 e0 00 00 	lea    0xe0(%rsp),%rbp
    9300:	00 
    9301:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    9306:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    930b:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    9310:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9317:	00 00 
    9319:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
    9320:	00 
    9321:	31 c0                	xor    %eax,%eax
    9323:	e8 28 db ff ff       	callq  6e50 <mbedtls_ecp_point_init>
    9328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    932f:	00 
    9330:	4c 89 e7             	mov    %r12,%rdi
    9333:	49 83 c4 18          	add    $0x18,%r12
    9337:	e8 14 d0 00 00       	callq  16350 <mbedtls_mpi_init>
    933c:	49 39 ec             	cmp    %rbp,%r12
    933f:	75 ef                	jne    9330 <mbedtls_ecp_muladd_restartable.part.0+0x70>
    9341:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    9346:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    934b:	4d 89 f8             	mov    %r15,%r8
    934e:	4c 89 f6             	mov    %r14,%rsi
    9351:	4c 89 ef             	mov    %r13,%rdi
    9354:	e8 d7 fd ff ff       	callq  9130 <mbedtls_ecp_mul_shortcuts>
    9359:	41 89 c4             	mov    %eax,%r12d
    935c:	85 c0                	test   %eax,%eax
    935e:	74 48                	je     93a8 <mbedtls_ecp_muladd_restartable.part.0+0xe8>
    9360:	48 89 df             	mov    %rbx,%rdi
    9363:	48 83 c3 18          	add    $0x18,%rbx
    9367:	e8 04 d0 00 00       	callq  16370 <mbedtls_mpi_free>
    936c:	48 39 eb             	cmp    %rbp,%rbx
    936f:	75 ef                	jne    9360 <mbedtls_ecp_muladd_restartable.part.0+0xa0>
    9371:	4c 89 f7             	mov    %r14,%rdi
    9374:	e8 57 c8 ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9379:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
    9380:	00 
    9381:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9388:	00 00 
    938a:	75 72                	jne    93fe <mbedtls_ecp_muladd_restartable.part.0+0x13e>
    938c:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
    9393:	44 89 e0             	mov    %r12d,%eax
    9396:	5b                   	pop    %rbx
    9397:	5d                   	pop    %rbp
    9398:	41 5c                	pop    %r12
    939a:	41 5d                	pop    %r13
    939c:	41 5e                	pop    %r14
    939e:	41 5f                	pop    %r15
    93a0:	c3                   	retq   
    93a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    93a8:	4d 89 f8             	mov    %r15,%r8
    93ab:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
    93b0:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    93b5:	4c 89 ef             	mov    %r13,%rdi
    93b8:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    93bd:	4c 89 fe             	mov    %r15,%rsi
    93c0:	e8 6b fd ff ff       	callq  9130 <mbedtls_ecp_mul_shortcuts>
    93c5:	41 89 c4             	mov    %eax,%r12d
    93c8:	85 c0                	test   %eax,%eax
    93ca:	75 94                	jne    9360 <mbedtls_ecp_muladd_restartable.part.0+0xa0>
    93cc:	49 89 d8             	mov    %rbx,%r8
    93cf:	4c 89 f9             	mov    %r15,%rcx
    93d2:	4c 89 f2             	mov    %r14,%rdx
    93d5:	4c 89 fe             	mov    %r15,%rsi
    93d8:	4c 89 ef             	mov    %r13,%rdi
    93db:	e8 30 dd ff ff       	callq  7110 <ecp_add_mixed>
    93e0:	41 89 c4             	mov    %eax,%r12d
    93e3:	85 c0                	test   %eax,%eax
    93e5:	0f 85 75 ff ff ff    	jne    9360 <mbedtls_ecp_muladd_restartable.part.0+0xa0>
    93eb:	4c 89 fe             	mov    %r15,%rsi
    93ee:	4c 89 ef             	mov    %r13,%rdi
    93f1:	e8 4a cd ff ff       	callq  6140 <ecp_normalize_jac>
    93f6:	41 89 c4             	mov    %eax,%r12d
    93f9:	e9 62 ff ff ff       	jmpq   9360 <mbedtls_ecp_muladd_restartable.part.0+0xa0>
    93fe:	e8 6d ae ff ff       	callq  4270 <__stack_chk_fail@plt>
    9403:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    940a:	00 00 00 00 
    940e:	66 90                	xchg   %ax,%ax

0000000000009410 <mbedtls_ecp_muladd_restartable>:
    9410:	f3 0f 1e fa          	endbr64 
    9414:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    9419:	74 15                	je     9430 <mbedtls_ecp_muladd_restartable+0x20>
    941b:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    9420:	74 0e                	je     9430 <mbedtls_ecp_muladd_restartable+0x20>
    9422:	e9 99 fe ff ff       	jmpq   92c0 <mbedtls_ecp_muladd_restartable.part.0>
    9427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    942e:	00 00 
    9430:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    9435:	c3                   	retq   
    9436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    943d:	00 00 00 

0000000000009440 <mbedtls_ecp_muladd>:
    9440:	f3 0f 1e fa          	endbr64 
    9444:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    9449:	74 1d                	je     9468 <mbedtls_ecp_muladd+0x28>
    944b:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    9450:	74 16                	je     9468 <mbedtls_ecp_muladd+0x28>
    9452:	48 83 ec 10          	sub    $0x10,%rsp
    9456:	6a 00                	pushq  $0x0
    9458:	e8 63 fe ff ff       	callq  92c0 <mbedtls_ecp_muladd_restartable.part.0>
    945d:	48 83 c4 18          	add    $0x18,%rsp
    9461:	c3                   	retq   
    9462:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9468:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    946d:	c3                   	retq   
    946e:	66 90                	xchg   %ax,%ax

0000000000009470 <self_test_point.constprop.0>:
    9470:	41 57                	push   %r15
    9472:	45 31 ff             	xor    %r15d,%r15d
    9475:	41 56                	push   %r14
    9477:	4d 89 c6             	mov    %r8,%r14
    947a:	41 55                	push   %r13
    947c:	49 89 d5             	mov    %rdx,%r13
    947f:	41 54                	push   %r12
    9481:	49 89 f4             	mov    %rsi,%r12
    9484:	be 10 00 00 00       	mov    $0x10,%esi
    9489:	55                   	push   %rbp
    948a:	4c 89 cd             	mov    %r9,%rbp
    948d:	53                   	push   %rbx
    948e:	48 89 cb             	mov    %rcx,%rbx
    9491:	48 83 ec 28          	sub    $0x28,%rsp
    9495:	49 8b 11             	mov    (%r9),%rdx
    9498:	48 c7 05 a5 8c 02 00 	movq   $0x0,0x28ca5(%rip)        # 32148 <add_count>
    949f:	00 00 00 00 
    94a3:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    94a7:	48 89 cf             	mov    %rcx,%rdi
    94aa:	48 c7 05 8b 8c 02 00 	movq   $0x0,0x28c8b(%rip)        # 32140 <dbl_count>
    94b1:	00 00 00 00 
    94b5:	48 c7 05 78 8c 02 00 	movq   $0x0,0x28c78(%rip)        # 32138 <mul_count>
    94bc:	00 00 00 00 
    94c0:	e8 7b df 00 00       	callq  17440 <mbedtls_mpi_read_string>
    94c5:	41 89 c0             	mov    %eax,%r8d
    94c8:	85 c0                	test   %eax,%eax
    94ca:	74 24                	je     94f0 <self_test_point.constprop.0+0x80>
    94cc:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    94d0:	85 c0                	test   %eax,%eax
    94d2:	0f 85 38 01 00 00    	jne    9610 <self_test_point.constprop.0+0x1a0>
    94d8:	48 83 c4 28          	add    $0x28,%rsp
    94dc:	44 89 c0             	mov    %r8d,%eax
    94df:	5b                   	pop    %rbx
    94e0:	5d                   	pop    %rbp
    94e1:	41 5c                	pop    %r12
    94e3:	41 5d                	pop    %r13
    94e5:	41 5e                	pop    %r14
    94e7:	41 5f                	pop    %r15
    94e9:	c3                   	retq   
    94ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    94f0:	48 83 ec 08          	sub    $0x8,%rsp
    94f4:	45 31 c9             	xor    %r9d,%r9d
    94f7:	4c 89 e7             	mov    %r12,%rdi
    94fa:	4c 89 f1             	mov    %r14,%rcx
    94fd:	6a 00                	pushq  $0x0
    94ff:	4c 8d 05 3a c3 ff ff 	lea    -0x3cc6(%rip),%r8        # 5840 <self_test_rng>
    9506:	48 89 da             	mov    %rbx,%rdx
    9509:	4c 89 ee             	mov    %r13,%rsi
    950c:	e8 4f ee ff ff       	callq  8360 <ecp_mul_restartable_internal>
    9511:	5f                   	pop    %rdi
    9512:	41 59                	pop    %r9
    9514:	41 89 c0             	mov    %eax,%r8d
    9517:	85 c0                	test   %eax,%eax
    9519:	75 b1                	jne    94cc <self_test_point.constprop.0+0x5c>
    951b:	48 8b 05 26 8c 02 00 	mov    0x28c26(%rip),%rax        # 32148 <add_count>
    9522:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    9528:	48 89 04 24          	mov    %rax,(%rsp)
    952c:	48 8b 05 0d 8c 02 00 	mov    0x28c0d(%rip),%rax        # 32140 <dbl_count>
    9533:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9538:	48 8b 05 f9 8b 02 00 	mov    0x28bf9(%rip),%rax        # 32138 <mul_count>
    953f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9544:	0f 1f 40 00          	nopl   0x0(%rax)
    9548:	4a 8b 54 fd 00       	mov    0x0(%rbp,%r15,8),%rdx
    954d:	be 10 00 00 00       	mov    $0x10,%esi
    9552:	48 89 df             	mov    %rbx,%rdi
    9555:	48 c7 05 e8 8b 02 00 	movq   $0x0,0x28be8(%rip)        # 32148 <add_count>
    955c:	00 00 00 00 
    9560:	48 c7 05 d5 8b 02 00 	movq   $0x0,0x28bd5(%rip)        # 32140 <dbl_count>
    9567:	00 00 00 00 
    956b:	48 c7 05 c2 8b 02 00 	movq   $0x0,0x28bc2(%rip)        # 32138 <mul_count>
    9572:	00 00 00 00 
    9576:	e8 c5 de 00 00       	callq  17440 <mbedtls_mpi_read_string>
    957b:	85 c0                	test   %eax,%eax
    957d:	0f 85 c5 00 00 00    	jne    9648 <self_test_point.constprop.0+0x1d8>
    9583:	48 83 ec 08          	sub    $0x8,%rsp
    9587:	4c 89 f1             	mov    %r14,%rcx
    958a:	4c 89 ee             	mov    %r13,%rsi
    958d:	45 31 c9             	xor    %r9d,%r9d
    9590:	6a 00                	pushq  $0x0
    9592:	4c 8d 05 a7 c2 ff ff 	lea    -0x3d59(%rip),%r8        # 5840 <self_test_rng>
    9599:	48 89 da             	mov    %rbx,%rdx
    959c:	4c 89 e7             	mov    %r12,%rdi
    959f:	e8 bc ed ff ff       	callq  8360 <ecp_mul_restartable_internal>
    95a4:	59                   	pop    %rcx
    95a5:	5e                   	pop    %rsi
    95a6:	85 c0                	test   %eax,%eax
    95a8:	0f 85 9a 00 00 00    	jne    9648 <self_test_point.constprop.0+0x1d8>
    95ae:	48 8b 0c 24          	mov    (%rsp),%rcx
    95b2:	48 39 0d 8f 8b 02 00 	cmp    %rcx,0x28b8f(%rip)        # 32148 <add_count>
    95b9:	75 7d                	jne    9638 <self_test_point.constprop.0+0x1c8>
    95bb:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    95c0:	48 3b 35 79 8b 02 00 	cmp    0x28b79(%rip),%rsi        # 32140 <dbl_count>
    95c7:	75 6f                	jne    9638 <self_test_point.constprop.0+0x1c8>
    95c9:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    95ce:	48 39 3d 63 8b 02 00 	cmp    %rdi,0x28b63(%rip)        # 32138 <mul_count>
    95d5:	75 61                	jne    9638 <self_test_point.constprop.0+0x1c8>
    95d7:	49 83 c7 01          	add    $0x1,%r15
    95db:	49 83 ff 06          	cmp    $0x6,%r15
    95df:	0f 85 63 ff ff ff    	jne    9548 <self_test_point.constprop.0+0xd8>
    95e5:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    95e9:	41 89 c0             	mov    %eax,%r8d
    95ec:	85 d2                	test   %edx,%edx
    95ee:	0f 84 e4 fe ff ff    	je     94d8 <self_test_point.constprop.0+0x68>
    95f4:	48 8d 3d cc 4a 01 00 	lea    0x14acc(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
    95fb:	44 89 04 24          	mov    %r8d,(%rsp)
    95ff:	e8 0c ac ff ff       	callq  4210 <puts@plt>
    9604:	44 8b 04 24          	mov    (%rsp),%r8d
    9608:	e9 cb fe ff ff       	jmpq   94d8 <self_test_point.constprop.0+0x68>
    960d:	0f 1f 00             	nopl   (%rax)
    9610:	44 89 fa             	mov    %r15d,%edx
    9613:	48 8d 35 a0 4a 01 00 	lea    0x14aa0(%rip),%rsi        # 1e0ba <_IO_stdin_used+0xba>
    961a:	31 c0                	xor    %eax,%eax
    961c:	44 89 04 24          	mov    %r8d,(%rsp)
    9620:	bf 01 00 00 00       	mov    $0x1,%edi
    9625:	e8 26 ad ff ff       	callq  4350 <__printf_chk@plt>
    962a:	44 8b 04 24          	mov    (%rsp),%r8d
    962e:	e9 a5 fe ff ff       	jmpq   94d8 <self_test_point.constprop.0+0x68>
    9633:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9638:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    963e:	e9 89 fe ff ff       	jmpq   94cc <self_test_point.constprop.0+0x5c>
    9643:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9648:	41 89 c0             	mov    %eax,%r8d
    964b:	e9 7c fe ff ff       	jmpq   94cc <self_test_point.constprop.0+0x5c>

0000000000009650 <mbedtls_ecp_gen_privkey>:
    9650:	f3 0f 1e fa          	endbr64 
    9654:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    9659:	74 3d                	je     9698 <mbedtls_ecp_gen_privkey+0x48>
    965b:	41 54                	push   %r12
    965d:	49 89 d1             	mov    %rdx,%r9
    9660:	49 89 c8             	mov    %rcx,%r8
    9663:	55                   	push   %rbp
    9664:	48 89 f5             	mov    %rsi,%rbp
    9667:	53                   	push   %rbx
    9668:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    966d:	74 31                	je     96a0 <mbedtls_ecp_gen_privkey+0x50>
    966f:	48 8d 97 98 00 00 00 	lea    0x98(%rdi),%rdx
    9676:	4c 89 c9             	mov    %r9,%rcx
    9679:	be 01 00 00 00       	mov    $0x1,%esi
    967e:	48 89 ef             	mov    %rbp,%rdi
    9681:	e8 2a 06 01 00       	callq  19cb0 <mbedtls_mpi_random>
    9686:	83 f8 f2             	cmp    $0xfffffff2,%eax
    9689:	0f 84 a3 00 00 00    	je     9732 <mbedtls_ecp_gen_privkey+0xe2>
    968f:	5b                   	pop    %rbx
    9690:	5d                   	pop    %rbp
    9691:	41 5c                	pop    %r12
    9693:	c3                   	retq   
    9694:	0f 1f 40 00          	nopl   0x0(%rax)
    9698:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    969d:	c3                   	retq   
    969e:	66 90                	xchg   %ax,%ax
    96a0:	48 8b 9f b8 00 00 00 	mov    0xb8(%rdi),%rbx
    96a7:	48 89 ef             	mov    %rbp,%rdi
    96aa:	49 89 dc             	mov    %rbx,%r12
    96ad:	49 c1 ec 03          	shr    $0x3,%r12
    96b1:	49 83 c4 01          	add    $0x1,%r12
    96b5:	4c 89 e6             	mov    %r12,%rsi
    96b8:	e8 13 00 01 00       	callq  196d0 <mbedtls_mpi_fill_random>
    96bd:	85 c0                	test   %eax,%eax
    96bf:	75 ce                	jne    968f <mbedtls_ecp_gen_privkey+0x3f>
    96c1:	48 89 d8             	mov    %rbx,%rax
    96c4:	48 89 ef             	mov    %rbp,%rdi
    96c7:	48 f7 d0             	not    %rax
    96ca:	4a 8d 34 e0          	lea    (%rax,%r12,8),%rsi
    96ce:	e8 8d d4 00 00       	callq  16b60 <mbedtls_mpi_shift_r>
    96d3:	85 c0                	test   %eax,%eax
    96d5:	75 b8                	jne    968f <mbedtls_ecp_gen_privkey+0x3f>
    96d7:	ba 01 00 00 00       	mov    $0x1,%edx
    96dc:	48 89 de             	mov    %rbx,%rsi
    96df:	48 89 ef             	mov    %rbp,%rdi
    96e2:	e8 39 d1 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    96e7:	85 c0                	test   %eax,%eax
    96e9:	75 a4                	jne    968f <mbedtls_ecp_gen_privkey+0x3f>
    96eb:	31 d2                	xor    %edx,%edx
    96ed:	31 f6                	xor    %esi,%esi
    96ef:	48 89 ef             	mov    %rbp,%rdi
    96f2:	e8 29 d1 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    96f7:	85 c0                	test   %eax,%eax
    96f9:	75 94                	jne    968f <mbedtls_ecp_gen_privkey+0x3f>
    96fb:	31 d2                	xor    %edx,%edx
    96fd:	be 01 00 00 00       	mov    $0x1,%esi
    9702:	48 89 ef             	mov    %rbp,%rdi
    9705:	e8 16 d1 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    970a:	85 c0                	test   %eax,%eax
    970c:	0f 85 7d ff ff ff    	jne    968f <mbedtls_ecp_gen_privkey+0x3f>
    9712:	48 81 fb fe 00 00 00 	cmp    $0xfe,%rbx
    9719:	0f 85 70 ff ff ff    	jne    968f <mbedtls_ecp_gen_privkey+0x3f>
    971f:	5b                   	pop    %rbx
    9720:	48 89 ef             	mov    %rbp,%rdi
    9723:	31 d2                	xor    %edx,%edx
    9725:	5d                   	pop    %rbp
    9726:	be 02 00 00 00       	mov    $0x2,%esi
    972b:	41 5c                	pop    %r12
    972d:	e9 ee d0 00 00       	jmpq   16820 <mbedtls_mpi_set_bit>
    9732:	b8 00 b3 ff ff       	mov    $0xffffb300,%eax
    9737:	e9 53 ff ff ff       	jmpq   968f <mbedtls_ecp_gen_privkey+0x3f>
    973c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009740 <mbedtls_ecp_gen_keypair_base>:
    9740:	f3 0f 1e fa          	endbr64 
    9744:	41 57                	push   %r15
    9746:	4d 89 cf             	mov    %r9,%r15
    9749:	41 56                	push   %r14
    974b:	49 89 f6             	mov    %rsi,%r14
    974e:	41 55                	push   %r13
    9750:	49 89 cd             	mov    %rcx,%r13
    9753:	4c 89 c9             	mov    %r9,%rcx
    9756:	41 54                	push   %r12
    9758:	49 89 d4             	mov    %rdx,%r12
    975b:	4c 89 c2             	mov    %r8,%rdx
    975e:	55                   	push   %rbp
    975f:	4c 89 e6             	mov    %r12,%rsi
    9762:	48 89 fd             	mov    %rdi,%rbp
    9765:	53                   	push   %rbx
    9766:	4c 89 c3             	mov    %r8,%rbx
    9769:	48 83 ec 08          	sub    $0x8,%rsp
    976d:	e8 de fe ff ff       	callq  9650 <mbedtls_ecp_gen_privkey>
    9772:	85 c0                	test   %eax,%eax
    9774:	75 24                	jne    979a <mbedtls_ecp_gen_keypair_base+0x5a>
    9776:	48 85 db             	test   %rbx,%rbx
    9779:	74 2e                	je     97a9 <mbedtls_ecp_gen_keypair_base+0x69>
    977b:	48 83 ec 08          	sub    $0x8,%rsp
    977f:	4c 89 f1             	mov    %r14,%rcx
    9782:	4c 89 e2             	mov    %r12,%rdx
    9785:	4d 89 f9             	mov    %r15,%r9
    9788:	6a 00                	pushq  $0x0
    978a:	49 89 d8             	mov    %rbx,%r8
    978d:	4c 89 ee             	mov    %r13,%rsi
    9790:	48 89 ef             	mov    %rbp,%rdi
    9793:	e8 c8 eb ff ff       	callq  8360 <ecp_mul_restartable_internal>
    9798:	5a                   	pop    %rdx
    9799:	59                   	pop    %rcx
    979a:	48 83 c4 08          	add    $0x8,%rsp
    979e:	5b                   	pop    %rbx
    979f:	5d                   	pop    %rbp
    97a0:	41 5c                	pop    %r12
    97a2:	41 5d                	pop    %r13
    97a4:	41 5e                	pop    %r14
    97a6:	41 5f                	pop    %r15
    97a8:	c3                   	retq   
    97a9:	f3 0f 1e fa          	endbr64 
    97ad:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    97b2:	eb e6                	jmp    979a <mbedtls_ecp_gen_keypair_base+0x5a>
    97b4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    97bb:	00 00 00 00 
    97bf:	90                   	nop

00000000000097c0 <mbedtls_ecp_gen_keypair>:
    97c0:	f3 0f 1e fa          	endbr64 
    97c4:	49 89 f2             	mov    %rsi,%r10
    97c7:	4d 89 c1             	mov    %r8,%r9
    97ca:	48 8d 77 50          	lea    0x50(%rdi),%rsi
    97ce:	49 89 c8             	mov    %rcx,%r8
    97d1:	48 89 d1             	mov    %rdx,%rcx
    97d4:	4c 89 d2             	mov    %r10,%rdx
    97d7:	e9 64 ff ff ff       	jmpq   9740 <mbedtls_ecp_gen_keypair_base>
    97dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000097e0 <mbedtls_ecp_gen_key>:
    97e0:	f3 0f 1e fa          	endbr64 
    97e4:	41 54                	push   %r12
    97e6:	49 89 d4             	mov    %rdx,%r12
    97e9:	55                   	push   %rbp
    97ea:	48 89 f5             	mov    %rsi,%rbp
    97ed:	89 fe                	mov    %edi,%esi
    97ef:	53                   	push   %rbx
    97f0:	48 89 ef             	mov    %rbp,%rdi
    97f3:	48 89 cb             	mov    %rcx,%rbx
    97f6:	e8 65 1f 00 00       	callq  b760 <mbedtls_ecp_group_load>
    97fb:	85 c0                	test   %eax,%eax
    97fd:	74 09                	je     9808 <mbedtls_ecp_gen_key+0x28>
    97ff:	5b                   	pop    %rbx
    9800:	5d                   	pop    %rbp
    9801:	41 5c                	pop    %r12
    9803:	c3                   	retq   
    9804:	0f 1f 40 00          	nopl   0x0(%rax)
    9808:	48 8d 8d 10 01 00 00 	lea    0x110(%rbp),%rcx
    980f:	49 89 d9             	mov    %rbx,%r9
    9812:	48 8d 75 50          	lea    0x50(%rbp),%rsi
    9816:	5b                   	pop    %rbx
    9817:	48 8d 95 f8 00 00 00 	lea    0xf8(%rbp),%rdx
    981e:	4d 89 e0             	mov    %r12,%r8
    9821:	48 89 ef             	mov    %rbp,%rdi
    9824:	5d                   	pop    %rbp
    9825:	41 5c                	pop    %r12
    9827:	e9 14 ff ff ff       	jmpq   9740 <mbedtls_ecp_gen_keypair_base>
    982c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009830 <mbedtls_ecp_read_key>:
    9830:	f3 0f 1e fa          	endbr64 
    9834:	41 57                	push   %r15
    9836:	41 56                	push   %r14
    9838:	49 89 d6             	mov    %rdx,%r14
    983b:	41 55                	push   %r13
    983d:	41 89 fd             	mov    %edi,%r13d
    9840:	41 54                	push   %r12
    9842:	55                   	push   %rbp
    9843:	48 89 f5             	mov    %rsi,%rbp
    9846:	89 fe                	mov    %edi,%esi
    9848:	53                   	push   %rbx
    9849:	48 89 ef             	mov    %rbp,%rdi
    984c:	48 83 ec 18          	sub    $0x18,%rsp
    9850:	48 89 0c 24          	mov    %rcx,(%rsp)
    9854:	e8 07 1f 00 00       	callq  b760 <mbedtls_ecp_group_load>
    9859:	41 89 c4             	mov    %eax,%r12d
    985c:	85 c0                	test   %eax,%eax
    985e:	75 3a                	jne    989a <mbedtls_ecp_read_key+0x6a>
    9860:	48 83 7d 60 00       	cmpq   $0x0,0x60(%rbp)
    9865:	4c 8d bd f8 00 00 00 	lea    0xf8(%rbp),%r15
    986c:	bb 80 b1 ff ff       	mov    $0xffffb180,%ebx
    9871:	74 1c                	je     988f <mbedtls_ecp_read_key+0x5f>
    9873:	48 83 7d 78 00       	cmpq   $0x0,0x78(%rbp)
    9878:	74 4e                	je     98c8 <mbedtls_ecp_read_key+0x98>
    987a:	48 8b 14 24          	mov    (%rsp),%rdx
    987e:	4c 89 f6             	mov    %r14,%rsi
    9881:	4c 89 ff             	mov    %r15,%rdi
    9884:	e8 17 d1 00 00       	callq  169a0 <mbedtls_mpi_read_binary>
    9889:	89 c3                	mov    %eax,%ebx
    988b:	85 c0                	test   %eax,%eax
    988d:	74 21                	je     98b0 <mbedtls_ecp_read_key+0x80>
    988f:	4c 89 ff             	mov    %r15,%rdi
    9892:	41 89 dc             	mov    %ebx,%r12d
    9895:	e8 d6 ca 00 00       	callq  16370 <mbedtls_mpi_free>
    989a:	48 83 c4 18          	add    $0x18,%rsp
    989e:	44 89 e0             	mov    %r12d,%eax
    98a1:	5b                   	pop    %rbx
    98a2:	5d                   	pop    %rbp
    98a3:	41 5c                	pop    %r12
    98a5:	41 5d                	pop    %r13
    98a7:	41 5e                	pop    %r14
    98a9:	41 5f                	pop    %r15
    98ab:	c3                   	retq   
    98ac:	0f 1f 40 00          	nopl   0x0(%rax)
    98b0:	4c 89 fe             	mov    %r15,%rsi
    98b3:	48 89 ef             	mov    %rbp,%rdi
    98b6:	e8 e5 e9 ff ff       	callq  82a0 <mbedtls_ecp_check_privkey>
    98bb:	89 c3                	mov    %eax,%ebx
    98bd:	85 c0                	test   %eax,%eax
    98bf:	74 d9                	je     989a <mbedtls_ecp_read_key+0x6a>
    98c1:	eb cc                	jmp    988f <mbedtls_ecp_read_key+0x5f>
    98c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    98c8:	41 83 fd 09          	cmp    $0x9,%r13d
    98cc:	0f 84 ae 00 00 00    	je     9980 <mbedtls_ecp_read_key+0x150>
    98d2:	bb 80 b1 ff ff       	mov    $0xffffb180,%ebx
    98d7:	41 83 fd 0d          	cmp    $0xd,%r13d
    98db:	75 b2                	jne    988f <mbedtls_ecp_read_key+0x5f>
    98dd:	48 83 3c 24 38       	cmpq   $0x38,(%rsp)
    98e2:	0f 85 46 01 00 00    	jne    9a2e <mbedtls_ecp_read_key+0x1fe>
    98e8:	ba 38 00 00 00       	mov    $0x38,%edx
    98ed:	4c 89 f6             	mov    %r14,%rsi
    98f0:	4c 89 ff             	mov    %r15,%rdi
    98f3:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
    98f8:	e8 53 d0 00 00       	callq  16950 <mbedtls_mpi_read_binary_le>
    98fd:	89 c3                	mov    %eax,%ebx
    98ff:	85 c0                	test   %eax,%eax
    9901:	75 8c                	jne    988f <mbedtls_ecp_read_key+0x5f>
    9903:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9908:	31 d2                	xor    %edx,%edx
    990a:	31 f6                	xor    %esi,%esi
    990c:	48 89 cf             	mov    %rcx,%rdi
    990f:	e8 0c cf 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    9914:	89 c3                	mov    %eax,%ebx
    9916:	85 c0                	test   %eax,%eax
    9918:	0f 85 71 ff ff ff    	jne    988f <mbedtls_ecp_read_key+0x5f>
    991e:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9923:	31 d2                	xor    %edx,%edx
    9925:	be 01 00 00 00       	mov    $0x1,%esi
    992a:	48 89 cf             	mov    %rcx,%rdi
    992d:	e8 ee ce 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    9932:	89 c3                	mov    %eax,%ebx
    9934:	85 c0                	test   %eax,%eax
    9936:	0f 85 53 ff ff ff    	jne    988f <mbedtls_ecp_read_key+0x5f>
    993c:	ba 01 00 00 00       	mov    $0x1,%edx
    9941:	be bf 01 00 00       	mov    $0x1bf,%esi
    9946:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    994b:	48 89 cf             	mov    %rcx,%rdi
    994e:	e8 cd ce 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    9953:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9958:	85 c0                	test   %eax,%eax
    995a:	89 c3                	mov    %eax,%ebx
    995c:	0f 85 2d ff ff ff    	jne    988f <mbedtls_ecp_read_key+0x5f>
    9962:	48 83 7d 60 00       	cmpq   $0x0,0x60(%rbp)
    9967:	0f 84 2d ff ff ff    	je     989a <mbedtls_ecp_read_key+0x6a>
    996d:	48 83 7d 78 00       	cmpq   $0x0,0x78(%rbp)
    9972:	0f 84 22 ff ff ff    	je     989a <mbedtls_ecp_read_key+0x6a>
    9978:	49 89 cf             	mov    %rcx,%r15
    997b:	e9 fa fe ff ff       	jmpq   987a <mbedtls_ecp_read_key+0x4a>
    9980:	48 83 3c 24 20       	cmpq   $0x20,(%rsp)
    9985:	0f 85 a3 00 00 00    	jne    9a2e <mbedtls_ecp_read_key+0x1fe>
    998b:	ba 20 00 00 00       	mov    $0x20,%edx
    9990:	4c 89 f6             	mov    %r14,%rsi
    9993:	4c 89 ff             	mov    %r15,%rdi
    9996:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
    999b:	e8 b0 cf 00 00       	callq  16950 <mbedtls_mpi_read_binary_le>
    99a0:	89 c3                	mov    %eax,%ebx
    99a2:	85 c0                	test   %eax,%eax
    99a4:	0f 85 e5 fe ff ff    	jne    988f <mbedtls_ecp_read_key+0x5f>
    99aa:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    99af:	31 d2                	xor    %edx,%edx
    99b1:	31 f6                	xor    %esi,%esi
    99b3:	48 89 cf             	mov    %rcx,%rdi
    99b6:	e8 65 ce 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    99bb:	89 c3                	mov    %eax,%ebx
    99bd:	85 c0                	test   %eax,%eax
    99bf:	0f 85 ca fe ff ff    	jne    988f <mbedtls_ecp_read_key+0x5f>
    99c5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    99ca:	31 d2                	xor    %edx,%edx
    99cc:	be 01 00 00 00       	mov    $0x1,%esi
    99d1:	48 89 cf             	mov    %rcx,%rdi
    99d4:	e8 47 ce 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    99d9:	89 c3                	mov    %eax,%ebx
    99db:	85 c0                	test   %eax,%eax
    99dd:	0f 85 ac fe ff ff    	jne    988f <mbedtls_ecp_read_key+0x5f>
    99e3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    99e8:	31 d2                	xor    %edx,%edx
    99ea:	be 02 00 00 00       	mov    $0x2,%esi
    99ef:	48 89 cf             	mov    %rcx,%rdi
    99f2:	e8 29 ce 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    99f7:	89 c3                	mov    %eax,%ebx
    99f9:	85 c0                	test   %eax,%eax
    99fb:	0f 85 8e fe ff ff    	jne    988f <mbedtls_ecp_read_key+0x5f>
    9a01:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9a06:	31 d2                	xor    %edx,%edx
    9a08:	be ff 00 00 00       	mov    $0xff,%esi
    9a0d:	48 89 cf             	mov    %rcx,%rdi
    9a10:	e8 0b ce 00 00       	callq  16820 <mbedtls_mpi_set_bit>
    9a15:	89 c3                	mov    %eax,%ebx
    9a17:	85 c0                	test   %eax,%eax
    9a19:	0f 85 70 fe ff ff    	jne    988f <mbedtls_ecp_read_key+0x5f>
    9a1f:	ba 01 00 00 00       	mov    $0x1,%edx
    9a24:	be fe 00 00 00       	mov    $0xfe,%esi
    9a29:	e9 18 ff ff ff       	jmpq   9946 <mbedtls_ecp_read_key+0x116>
    9a2e:	41 bc 80 b3 ff ff    	mov    $0xffffb380,%r12d
    9a34:	e9 61 fe ff ff       	jmpq   989a <mbedtls_ecp_read_key+0x6a>
    9a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009a40 <mbedtls_ecp_write_key>:
    9a40:	f3 0f 1e fa          	endbr64 
    9a44:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    9a49:	74 25                	je     9a70 <mbedtls_ecp_write_key+0x30>
    9a4b:	53                   	push   %rbx
    9a4c:	48 89 fb             	mov    %rdi,%rbx
    9a4f:	48 8d bf f8 00 00 00 	lea    0xf8(%rdi),%rdi
    9a56:	48 83 ec 20          	sub    $0x20,%rsp
    9a5a:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
    9a5f:	74 1f                	je     9a80 <mbedtls_ecp_write_key+0x40>
    9a61:	48 83 c4 20          	add    $0x20,%rsp
    9a65:	5b                   	pop    %rbx
    9a66:	e9 a5 cf 00 00       	jmpq   16a10 <mbedtls_mpi_write_binary>
    9a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9a70:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    9a75:	c3                   	retq   
    9a76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9a7d:	00 00 00 
    9a80:	8b 03                	mov    (%rbx),%eax
    9a82:	83 f8 09             	cmp    $0x9,%eax
    9a85:	74 51                	je     9ad8 <mbedtls_ecp_write_key+0x98>
    9a87:	48 83 fa 37          	cmp    $0x37,%rdx
    9a8b:	77 05                	ja     9a92 <mbedtls_ecp_write_key+0x52>
    9a8d:	83 f8 0d             	cmp    $0xd,%eax
    9a90:	74 4c                	je     9ade <mbedtls_ecp_write_key+0x9e>
    9a92:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
    9a99:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    9a9e:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    9aa3:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    9aa8:	e8 43 cf 00 00       	callq  169f0 <mbedtls_mpi_write_binary_le>
    9aad:	85 c0                	test   %eax,%eax
    9aaf:	75 1d                	jne    9ace <mbedtls_ecp_write_key+0x8e>
    9ab1:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
    9ab6:	74 16                	je     9ace <mbedtls_ecp_write_key+0x8e>
    9ab8:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
    9abd:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    9ac2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    9ac7:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    9acc:	75 93                	jne    9a61 <mbedtls_ecp_write_key+0x21>
    9ace:	48 83 c4 20          	add    $0x20,%rsp
    9ad2:	5b                   	pop    %rbx
    9ad3:	c3                   	retq   
    9ad4:	0f 1f 40 00          	nopl   0x0(%rax)
    9ad8:	48 83 fa 1f          	cmp    $0x1f,%rdx
    9adc:	77 b4                	ja     9a92 <mbedtls_ecp_write_key+0x52>
    9ade:	b8 00 b1 ff ff       	mov    $0xffffb100,%eax
    9ae3:	eb e9                	jmp    9ace <mbedtls_ecp_write_key+0x8e>
    9ae5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9aec:	00 00 00 00 

0000000000009af0 <mbedtls_ecp_check_pub_priv>:
    9af0:	f3 0f 1e fa          	endbr64 
    9af4:	41 57                	push   %r15
    9af6:	41 56                	push   %r14
    9af8:	41 55                	push   %r13
    9afa:	41 54                	push   %r12
    9afc:	55                   	push   %rbp
    9afd:	53                   	push   %rbx
    9afe:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    9b05:	48 89 0c 24          	mov    %rcx,(%rsp)
    9b09:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9b10:	00 00 
    9b12:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
    9b19:	00 
    9b1a:	31 c0                	xor    %eax,%eax
    9b1c:	8b 07                	mov    (%rdi),%eax
    9b1e:	85 c0                	test   %eax,%eax
    9b20:	0f 84 4a 01 00 00    	je     9c70 <mbedtls_ecp_check_pub_priv+0x180>
    9b26:	48 89 f3             	mov    %rsi,%rbx
    9b29:	3b 06                	cmp    (%rsi),%eax
    9b2b:	0f 85 3f 01 00 00    	jne    9c70 <mbedtls_ecp_check_pub_priv+0x180>
    9b31:	4c 8d ae 10 01 00 00 	lea    0x110(%rsi),%r13
    9b38:	49 89 fc             	mov    %rdi,%r12
    9b3b:	48 89 d5             	mov    %rdx,%rbp
    9b3e:	48 8d bf 10 01 00 00 	lea    0x110(%rdi),%rdi
    9b45:	4c 89 ee             	mov    %r13,%rsi
    9b48:	e8 03 d1 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    9b4d:	85 c0                	test   %eax,%eax
    9b4f:	0f 85 1b 01 00 00    	jne    9c70 <mbedtls_ecp_check_pub_priv+0x180>
    9b55:	4c 8d b3 28 01 00 00 	lea    0x128(%rbx),%r14
    9b5c:	49 8d bc 24 28 01 00 	lea    0x128(%r12),%rdi
    9b63:	00 
    9b64:	4c 89 f6             	mov    %r14,%rsi
    9b67:	e8 e4 d0 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    9b6c:	85 c0                	test   %eax,%eax
    9b6e:	0f 85 fc 00 00 00    	jne    9c70 <mbedtls_ecp_check_pub_priv+0x180>
    9b74:	48 8d 83 40 01 00 00 	lea    0x140(%rbx),%rax
    9b7b:	49 8d bc 24 40 01 00 	lea    0x140(%r12),%rdi
    9b82:	00 
    9b83:	48 89 c6             	mov    %rax,%rsi
    9b86:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9b8b:	e8 c0 d0 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    9b90:	85 c0                	test   %eax,%eax
    9b92:	0f 85 d8 00 00 00    	jne    9c70 <mbedtls_ecp_check_pub_priv+0x180>
    9b98:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    9b9d:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
    9ba2:	4c 89 ff             	mov    %r15,%rdi
    9ba5:	e8 a6 d2 ff ff       	callq  6e50 <mbedtls_ecp_point_init>
    9baa:	4c 89 e7             	mov    %r12,%rdi
    9bad:	e8 be d2 ff ff       	callq  6e70 <mbedtls_ecp_group_init>
    9bb2:	8b 33                	mov    (%rbx),%esi
    9bb4:	4c 89 e7             	mov    %r12,%rdi
    9bb7:	e8 a4 1b 00 00       	callq  b760 <mbedtls_ecp_group_load>
    9bbc:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
    9bc0:	48 8d 93 f8 00 00 00 	lea    0xf8(%rbx),%rdx
    9bc7:	48 85 ed             	test   %rbp,%rbp
    9bca:	74 7c                	je     9c48 <mbedtls_ecp_check_pub_priv+0x158>
    9bcc:	48 83 ec 08          	sub    $0x8,%rsp
    9bd0:	49 89 e8             	mov    %rbp,%r8
    9bd3:	4c 89 fe             	mov    %r15,%rsi
    9bd6:	4c 89 e7             	mov    %r12,%rdi
    9bd9:	6a 00                	pushq  $0x0
    9bdb:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    9be0:	e8 7b e7 ff ff       	callq  8360 <ecp_mul_restartable_internal>
    9be5:	89 c3                	mov    %eax,%ebx
    9be7:	58                   	pop    %rax
    9be8:	5a                   	pop    %rdx
    9be9:	85 db                	test   %ebx,%ebx
    9beb:	74 3b                	je     9c28 <mbedtls_ecp_check_pub_priv+0x138>
    9bed:	4c 89 ff             	mov    %r15,%rdi
    9bf0:	e8 db bf ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9bf5:	4c 89 e7             	mov    %r12,%rdi
    9bf8:	e8 73 d3 ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    9bfd:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
    9c04:	00 
    9c05:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9c0c:	00 00 
    9c0e:	75 67                	jne    9c77 <mbedtls_ecp_check_pub_priv+0x187>
    9c10:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    9c17:	89 d8                	mov    %ebx,%eax
    9c19:	5b                   	pop    %rbx
    9c1a:	5d                   	pop    %rbp
    9c1b:	41 5c                	pop    %r12
    9c1d:	41 5d                	pop    %r13
    9c1f:	41 5e                	pop    %r14
    9c21:	41 5f                	pop    %r15
    9c23:	c3                   	retq   
    9c24:	0f 1f 40 00          	nopl   0x0(%rax)
    9c28:	4c 89 ee             	mov    %r13,%rsi
    9c2b:	4c 89 ff             	mov    %r15,%rdi
    9c2e:	e8 1d d0 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    9c33:	85 c0                	test   %eax,%eax
    9c35:	75 11                	jne    9c48 <mbedtls_ecp_check_pub_priv+0x158>
    9c37:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    9c3c:	4c 89 f6             	mov    %r14,%rsi
    9c3f:	e8 0c d0 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    9c44:	85 c0                	test   %eax,%eax
    9c46:	74 08                	je     9c50 <mbedtls_ecp_check_pub_priv+0x160>
    9c48:	bb 80 b0 ff ff       	mov    $0xffffb080,%ebx
    9c4d:	eb 9e                	jmp    9bed <mbedtls_ecp_check_pub_priv+0xfd>
    9c4f:	90                   	nop
    9c50:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    9c55:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    9c5a:	e8 f1 cf 00 00       	callq  16c50 <mbedtls_mpi_cmp_mpi>
    9c5f:	89 c3                	mov    %eax,%ebx
    9c61:	85 c0                	test   %eax,%eax
    9c63:	74 88                	je     9bed <mbedtls_ecp_check_pub_priv+0xfd>
    9c65:	eb e1                	jmp    9c48 <mbedtls_ecp_check_pub_priv+0x158>
    9c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9c6e:	00 00 
    9c70:	bb 80 b0 ff ff       	mov    $0xffffb080,%ebx
    9c75:	eb 86                	jmp    9bfd <mbedtls_ecp_check_pub_priv+0x10d>
    9c77:	e8 f4 a5 ff ff       	callq  4270 <__stack_chk_fail@plt>
    9c7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009c80 <mbedtls_ecp_export>:
    9c80:	f3 0f 1e fa          	endbr64 
    9c84:	41 54                	push   %r12
    9c86:	49 89 d4             	mov    %rdx,%r12
    9c89:	55                   	push   %rbp
    9c8a:	48 89 cd             	mov    %rcx,%rbp
    9c8d:	53                   	push   %rbx
    9c8e:	48 89 fb             	mov    %rdi,%rbx
    9c91:	48 89 f7             	mov    %rsi,%rdi
    9c94:	8b 33                	mov    (%rbx),%esi
    9c96:	e8 c5 1a 00 00       	callq  b760 <mbedtls_ecp_group_load>
    9c9b:	85 c0                	test   %eax,%eax
    9c9d:	74 09                	je     9ca8 <mbedtls_ecp_export+0x28>
    9c9f:	5b                   	pop    %rbx
    9ca0:	5d                   	pop    %rbp
    9ca1:	41 5c                	pop    %r12
    9ca3:	c3                   	retq   
    9ca4:	0f 1f 40 00          	nopl   0x0(%rax)
    9ca8:	48 8d b3 f8 00 00 00 	lea    0xf8(%rbx),%rsi
    9caf:	4c 89 e7             	mov    %r12,%rdi
    9cb2:	e8 49 c9 00 00       	callq  16600 <mbedtls_mpi_copy>
    9cb7:	85 c0                	test   %eax,%eax
    9cb9:	75 e4                	jne    9c9f <mbedtls_ecp_export+0x1f>
    9cbb:	48 8d b3 10 01 00 00 	lea    0x110(%rbx),%rsi
    9cc2:	48 89 ef             	mov    %rbp,%rdi
    9cc5:	5b                   	pop    %rbx
    9cc6:	5d                   	pop    %rbp
    9cc7:	41 5c                	pop    %r12
    9cc9:	e9 a2 d3 ff ff       	jmpq   7070 <mbedtls_ecp_copy>
    9cce:	66 90                	xchg   %ax,%ax

0000000000009cd0 <mbedtls_ecp_self_test>:
    9cd0:	f3 0f 1e fa          	endbr64 
    9cd4:	41 57                	push   %r15
    9cd6:	41 56                	push   %r14
    9cd8:	41 55                	push   %r13
    9cda:	41 54                	push   %r12
    9cdc:	55                   	push   %rbp
    9cdd:	53                   	push   %rbx
    9cde:	89 fb                	mov    %edi,%ebx
    9ce0:	48 81 ec 48 02 00 00 	sub    $0x248,%rsp
    9ce7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9cee:	00 00 
    9cf0:	48 89 84 24 38 02 00 	mov    %rax,0x238(%rsp)
    9cf7:	00 
    9cf8:	31 c0                	xor    %eax,%eax
    9cfa:	48 8d 05 4f 44 01 00 	lea    0x1444f(%rip),%rax        # 1e150 <_IO_stdin_used+0x150>
    9d01:	48 8d ac 24 d0 00 00 	lea    0xd0(%rsp),%rbp
    9d08:	00 
    9d09:	48 89 84 24 d0 01 00 	mov    %rax,0x1d0(%rsp)
    9d10:	00 
    9d11:	48 89 ef             	mov    %rbp,%rdi
    9d14:	48 8d 05 6d 44 01 00 	lea    0x1446d(%rip),%rax        # 1e188 <_IO_stdin_used+0x188>
    9d1b:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
    9d20:	48 89 84 24 d8 01 00 	mov    %rax,0x1d8(%rsp)
    9d27:	00 
    9d28:	48 8d 05 91 44 01 00 	lea    0x14491(%rip),%rax        # 1e1c0 <_IO_stdin_used+0x1c0>
    9d2f:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    9d34:	48 89 84 24 e0 01 00 	mov    %rax,0x1e0(%rsp)
    9d3b:	00 
    9d3c:	48 8d 05 b5 44 01 00 	lea    0x144b5(%rip),%rax        # 1e1f8 <_IO_stdin_used+0x1f8>
    9d43:	4c 8d ac 24 80 00 00 	lea    0x80(%rsp),%r13
    9d4a:	00 
    9d4b:	48 89 84 24 e8 01 00 	mov    %rax,0x1e8(%rsp)
    9d52:	00 
    9d53:	48 8d 05 d6 44 01 00 	lea    0x144d6(%rip),%rax        # 1e230 <_IO_stdin_used+0x230>
    9d5a:	48 89 84 24 f0 01 00 	mov    %rax,0x1f0(%rsp)
    9d61:	00 
    9d62:	48 8d 05 ff 44 01 00 	lea    0x144ff(%rip),%rax        # 1e268 <_IO_stdin_used+0x268>
    9d69:	48 89 84 24 f8 01 00 	mov    %rax,0x1f8(%rsp)
    9d70:	00 
    9d71:	48 8d 05 28 45 01 00 	lea    0x14528(%rip),%rax        # 1e2a0 <_IO_stdin_used+0x2a0>
    9d78:	48 89 84 24 00 02 00 	mov    %rax,0x200(%rsp)
    9d7f:	00 
    9d80:	48 8d 05 61 45 01 00 	lea    0x14561(%rip),%rax        # 1e2e8 <_IO_stdin_used+0x2e8>
    9d87:	48 89 84 24 08 02 00 	mov    %rax,0x208(%rsp)
    9d8e:	00 
    9d8f:	48 8d 05 9a 45 01 00 	lea    0x1459a(%rip),%rax        # 1e330 <_IO_stdin_used+0x330>
    9d96:	48 89 84 24 10 02 00 	mov    %rax,0x210(%rsp)
    9d9d:	00 
    9d9e:	48 8d 05 d3 45 01 00 	lea    0x145d3(%rip),%rax        # 1e378 <_IO_stdin_used+0x378>
    9da5:	48 89 84 24 18 02 00 	mov    %rax,0x218(%rsp)
    9dac:	00 
    9dad:	48 8d 05 0c 46 01 00 	lea    0x1460c(%rip),%rax        # 1e3c0 <_IO_stdin_used+0x3c0>
    9db4:	48 89 84 24 20 02 00 	mov    %rax,0x220(%rsp)
    9dbb:	00 
    9dbc:	48 8d 05 45 46 01 00 	lea    0x14645(%rip),%rax        # 1e408 <_IO_stdin_used+0x408>
    9dc3:	48 89 84 24 28 02 00 	mov    %rax,0x228(%rsp)
    9dca:	00 
    9dcb:	e8 a0 d0 ff ff       	callq  6e70 <mbedtls_ecp_group_init>
    9dd0:	4c 89 f7             	mov    %r14,%rdi
    9dd3:	e8 78 d0 ff ff       	callq  6e50 <mbedtls_ecp_point_init>
    9dd8:	4c 89 ef             	mov    %r13,%rdi
    9ddb:	e8 70 d0 ff ff       	callq  6e50 <mbedtls_ecp_point_init>
    9de0:	4c 89 e7             	mov    %r12,%rdi
    9de3:	e8 68 c5 00 00       	callq  16350 <mbedtls_mpi_init>
    9de8:	be 01 00 00 00       	mov    $0x1,%esi
    9ded:	48 89 ef             	mov    %rbp,%rdi
    9df0:	e8 6b 19 00 00       	callq  b760 <mbedtls_ecp_group_load>
    9df5:	41 89 c7             	mov    %eax,%r15d
    9df8:	85 c0                	test   %eax,%eax
    9dfa:	0f 85 c0 01 00 00    	jne    9fc0 <mbedtls_ecp_self_test+0x2f0>
    9e00:	85 db                	test   %ebx,%ebx
    9e02:	0f 85 a0 00 00 00    	jne    9ea8 <mbedtls_ecp_self_test+0x1d8>
    9e08:	be 02 00 00 00       	mov    $0x2,%esi
    9e0d:	4c 89 e7             	mov    %r12,%rdi
    9e10:	e8 5b c9 00 00       	callq  16770 <mbedtls_mpi_lset>
    9e15:	41 89 c7             	mov    %eax,%r15d
    9e18:	85 c0                	test   %eax,%eax
    9e1a:	75 3c                	jne    9e58 <mbedtls_ecp_self_test+0x188>
    9e1c:	4c 89 e2             	mov    %r12,%rdx
    9e1f:	45 31 c9             	xor    %r9d,%r9d
    9e22:	4c 8d 05 17 ba ff ff 	lea    -0x45e9(%rip),%r8        # 5840 <self_test_rng>
    9e29:	4c 89 ee             	mov    %r13,%rsi
    9e2c:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
    9e33:	00 
    9e34:	48 83 ec 08          	sub    $0x8,%rsp
    9e38:	48 89 ef             	mov    %rbp,%rdi
    9e3b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9e40:	48 89 c1             	mov    %rax,%rcx
    9e43:	6a 00                	pushq  $0x0
    9e45:	e8 16 e5 ff ff       	callq  8360 <ecp_mul_restartable_internal>
    9e4a:	41 89 c7             	mov    %eax,%r15d
    9e4d:	58                   	pop    %rax
    9e4e:	5a                   	pop    %rdx
    9e4f:	45 85 ff             	test   %r15d,%r15d
    9e52:	0f 84 d0 00 00 00    	je     9f28 <mbedtls_ecp_self_test+0x258>
    9e58:	48 89 ef             	mov    %rbp,%rdi
    9e5b:	e8 10 d1 ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    9e60:	4c 89 f7             	mov    %r14,%rdi
    9e63:	e8 68 bd ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9e68:	4c 89 ef             	mov    %r13,%rdi
    9e6b:	e8 60 bd ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9e70:	4c 89 e7             	mov    %r12,%rdi
    9e73:	e8 f8 c4 00 00       	callq  16370 <mbedtls_mpi_free>
    9e78:	48 8b 84 24 38 02 00 	mov    0x238(%rsp),%rax
    9e7f:	00 
    9e80:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9e87:	00 00 
    9e89:	0f 85 61 02 00 00    	jne    a0f0 <mbedtls_ecp_self_test+0x420>
    9e8f:	48 81 c4 48 02 00 00 	add    $0x248,%rsp
    9e96:	44 89 f8             	mov    %r15d,%eax
    9e99:	5b                   	pop    %rbx
    9e9a:	5d                   	pop    %rbp
    9e9b:	41 5c                	pop    %r12
    9e9d:	41 5d                	pop    %r13
    9e9f:	41 5e                	pop    %r14
    9ea1:	41 5f                	pop    %r15
    9ea3:	c3                   	retq   
    9ea4:	0f 1f 40 00          	nopl   0x0(%rax)
    9ea8:	48 8d 35 a1 45 01 00 	lea    0x145a1(%rip),%rsi        # 1e450 <_IO_stdin_used+0x450>
    9eaf:	bf 01 00 00 00       	mov    $0x1,%edi
    9eb4:	31 c0                	xor    %eax,%eax
    9eb6:	e8 95 a4 ff ff       	callq  4350 <__printf_chk@plt>
    9ebb:	be 02 00 00 00       	mov    $0x2,%esi
    9ec0:	4c 89 e7             	mov    %r12,%rdi
    9ec3:	e8 a8 c8 00 00       	callq  16770 <mbedtls_mpi_lset>
    9ec8:	41 89 c7             	mov    %eax,%r15d
    9ecb:	85 c0                	test   %eax,%eax
    9ecd:	0f 84 2d 01 00 00    	je     a000 <mbedtls_ecp_self_test+0x330>
    9ed3:	45 85 ff             	test   %r15d,%r15d
    9ed6:	79 1a                	jns    9ef2 <mbedtls_ecp_self_test+0x222>
    9ed8:	85 db                	test   %ebx,%ebx
    9eda:	74 16                	je     9ef2 <mbedtls_ecp_self_test+0x222>
    9edc:	44 89 fa             	mov    %r15d,%edx
    9edf:	48 8d 35 da 45 01 00 	lea    0x145da(%rip),%rsi        # 1e4c0 <_IO_stdin_used+0x4c0>
    9ee6:	bf 01 00 00 00       	mov    $0x1,%edi
    9eeb:	31 c0                	xor    %eax,%eax
    9eed:	e8 5e a4 ff ff       	callq  4350 <__printf_chk@plt>
    9ef2:	48 89 ef             	mov    %rbp,%rdi
    9ef5:	e8 76 d0 ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    9efa:	4c 89 f7             	mov    %r14,%rdi
    9efd:	e8 ce bc ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9f02:	4c 89 ef             	mov    %r13,%rdi
    9f05:	e8 c6 bc ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9f0a:	4c 89 e7             	mov    %r12,%rdi
    9f0d:	e8 5e c4 00 00       	callq  16370 <mbedtls_mpi_free>
    9f12:	bf 0a 00 00 00       	mov    $0xa,%edi
    9f17:	e8 e4 a2 ff ff       	callq  4200 <putchar@plt>
    9f1c:	e9 57 ff ff ff       	jmpq   9e78 <mbedtls_ecp_self_test+0x1a8>
    9f21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9f28:	4c 8b 04 24          	mov    (%rsp),%r8
    9f2c:	31 ff                	xor    %edi,%edi
    9f2e:	4c 89 e1             	mov    %r12,%rcx
    9f31:	4c 89 f2             	mov    %r14,%rdx
    9f34:	4c 8d 8c 24 d0 01 00 	lea    0x1d0(%rsp),%r9
    9f3b:	00 
    9f3c:	48 89 ee             	mov    %rbp,%rsi
    9f3f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9f44:	e8 27 f5 ff ff       	callq  9470 <self_test_point.constprop.0>
    9f49:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9f4e:	85 c0                	test   %eax,%eax
    9f50:	41 89 c7             	mov    %eax,%r15d
    9f53:	75 6b                	jne    9fc0 <mbedtls_ecp_self_test+0x2f0>
    9f55:	4d 89 e8             	mov    %r13,%r8
    9f58:	4c 89 e1             	mov    %r12,%rcx
    9f5b:	4c 89 f2             	mov    %r14,%rdx
    9f5e:	48 89 ee             	mov    %rbp,%rsi
    9f61:	31 ff                	xor    %edi,%edi
    9f63:	e8 08 f5 ff ff       	callq  9470 <self_test_point.constprop.0>
    9f68:	41 89 c7             	mov    %eax,%r15d
    9f6b:	85 c0                	test   %eax,%eax
    9f6d:	0f 85 e5 fe ff ff    	jne    9e58 <mbedtls_ecp_self_test+0x188>
    9f73:	48 89 ef             	mov    %rbp,%rdi
    9f76:	e8 f5 cf ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    9f7b:	4c 89 f7             	mov    %r14,%rdi
    9f7e:	e8 4d bc ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9f83:	be 09 00 00 00       	mov    $0x9,%esi
    9f88:	48 89 ef             	mov    %rbp,%rdi
    9f8b:	e8 d0 17 00 00       	callq  b760 <mbedtls_ecp_group_load>
    9f90:	41 89 c7             	mov    %eax,%r15d
    9f93:	85 c0                	test   %eax,%eax
    9f95:	0f 85 bd fe ff ff    	jne    9e58 <mbedtls_ecp_self_test+0x188>
    9f9b:	4c 8b 04 24          	mov    (%rsp),%r8
    9f9f:	4c 89 e1             	mov    %r12,%rcx
    9fa2:	4c 89 f2             	mov    %r14,%rdx
    9fa5:	48 89 ee             	mov    %rbp,%rsi
    9fa8:	4c 8d 8c 24 00 02 00 	lea    0x200(%rsp),%r9
    9faf:	00 
    9fb0:	89 df                	mov    %ebx,%edi
    9fb2:	e8 b9 f4 ff ff       	callq  9470 <self_test_point.constprop.0>
    9fb7:	41 89 c7             	mov    %eax,%r15d
    9fba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9fc0:	45 85 ff             	test   %r15d,%r15d
    9fc3:	79 08                	jns    9fcd <mbedtls_ecp_self_test+0x2fd>
    9fc5:	85 db                	test   %ebx,%ebx
    9fc7:	0f 85 0f ff ff ff    	jne    9edc <mbedtls_ecp_self_test+0x20c>
    9fcd:	48 89 ef             	mov    %rbp,%rdi
    9fd0:	e8 9b cf ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    9fd5:	4c 89 f7             	mov    %r14,%rdi
    9fd8:	e8 f3 bb ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9fdd:	4c 89 ef             	mov    %r13,%rdi
    9fe0:	e8 eb bb ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    9fe5:	4c 89 e7             	mov    %r12,%rdi
    9fe8:	e8 83 c3 00 00       	callq  16370 <mbedtls_mpi_free>
    9fed:	85 db                	test   %ebx,%ebx
    9fef:	0f 84 83 fe ff ff    	je     9e78 <mbedtls_ecp_self_test+0x1a8>
    9ff5:	e9 18 ff ff ff       	jmpq   9f12 <mbedtls_ecp_self_test+0x242>
    9ffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a000:	4c 89 ee             	mov    %r13,%rsi
    a003:	45 31 c9             	xor    %r9d,%r9d
    a006:	4c 8d 05 33 b8 ff ff 	lea    -0x47cd(%rip),%r8        # 5840 <self_test_rng>
    a00d:	4c 89 e2             	mov    %r12,%rdx
    a010:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
    a017:	00 
    a018:	48 83 ec 08          	sub    $0x8,%rsp
    a01c:	48 89 ef             	mov    %rbp,%rdi
    a01f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a024:	48 89 c1             	mov    %rax,%rcx
    a027:	6a 00                	pushq  $0x0
    a029:	e8 32 e3 ff ff       	callq  8360 <ecp_mul_restartable_internal>
    a02e:	59                   	pop    %rcx
    a02f:	5e                   	pop    %rsi
    a030:	41 89 c7             	mov    %eax,%r15d
    a033:	85 c0                	test   %eax,%eax
    a035:	0f 85 98 fe ff ff    	jne    9ed3 <mbedtls_ecp_self_test+0x203>
    a03b:	4c 8b 04 24          	mov    (%rsp),%r8
    a03f:	4c 89 e1             	mov    %r12,%rcx
    a042:	4c 89 f2             	mov    %r14,%rdx
    a045:	48 89 ee             	mov    %rbp,%rsi
    a048:	4c 8d 8c 24 d0 01 00 	lea    0x1d0(%rsp),%r9
    a04f:	00 
    a050:	89 df                	mov    %ebx,%edi
    a052:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    a057:	e8 14 f4 ff ff       	callq  9470 <self_test_point.constprop.0>
    a05c:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    a061:	85 c0                	test   %eax,%eax
    a063:	41 89 c7             	mov    %eax,%r15d
    a066:	0f 85 54 ff ff ff    	jne    9fc0 <mbedtls_ecp_self_test+0x2f0>
    a06c:	48 8d 35 15 44 01 00 	lea    0x14415(%rip),%rsi        # 1e488 <_IO_stdin_used+0x488>
    a073:	bf 01 00 00 00       	mov    $0x1,%edi
    a078:	31 c0                	xor    %eax,%eax
    a07a:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    a07f:	e8 cc a2 ff ff       	callq  4350 <__printf_chk@plt>
    a084:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    a089:	4d 89 e8             	mov    %r13,%r8
    a08c:	4c 89 e1             	mov    %r12,%rcx
    a08f:	4c 89 f2             	mov    %r14,%rdx
    a092:	48 89 ee             	mov    %rbp,%rsi
    a095:	89 df                	mov    %ebx,%edi
    a097:	e8 d4 f3 ff ff       	callq  9470 <self_test_point.constprop.0>
    a09c:	41 89 c7             	mov    %eax,%r15d
    a09f:	85 c0                	test   %eax,%eax
    a0a1:	74 0d                	je     a0b0 <mbedtls_ecp_self_test+0x3e0>
    a0a3:	0f 88 33 fe ff ff    	js     9edc <mbedtls_ecp_self_test+0x20c>
    a0a9:	e9 44 fe ff ff       	jmpq   9ef2 <mbedtls_ecp_self_test+0x222>
    a0ae:	66 90                	xchg   %ax,%ax
    a0b0:	48 89 ef             	mov    %rbp,%rdi
    a0b3:	e8 b8 ce ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    a0b8:	4c 89 f7             	mov    %r14,%rdi
    a0bb:	e8 10 bb ff ff       	callq  5bd0 <mbedtls_ecp_point_free.part.0>
    a0c0:	48 8d 35 21 44 01 00 	lea    0x14421(%rip),%rsi        # 1e4e8 <_IO_stdin_used+0x4e8>
    a0c7:	bf 01 00 00 00       	mov    $0x1,%edi
    a0cc:	31 c0                	xor    %eax,%eax
    a0ce:	e8 7d a2 ff ff       	callq  4350 <__printf_chk@plt>
    a0d3:	be 09 00 00 00       	mov    $0x9,%esi
    a0d8:	48 89 ef             	mov    %rbp,%rdi
    a0db:	e8 80 16 00 00       	callq  b760 <mbedtls_ecp_group_load>
    a0e0:	41 89 c7             	mov    %eax,%r15d
    a0e3:	85 c0                	test   %eax,%eax
    a0e5:	0f 85 e8 fd ff ff    	jne    9ed3 <mbedtls_ecp_self_test+0x203>
    a0eb:	e9 ab fe ff ff       	jmpq   9f9b <mbedtls_ecp_self_test+0x2cb>
    a0f0:	e8 7b a1 ff ff       	callq  4270 <__stack_chk_fail@plt>
    a0f5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a0fc:	00 00 00 
    a0ff:	90                   	nop

000000000000a100 <ecp_mod_p255>:
    a100:	f3 0f 1e fa          	endbr64 
    a104:	41 56                	push   %r14
    a106:	41 55                	push   %r13
    a108:	41 54                	push   %r12
    a10a:	55                   	push   %rbp
    a10b:	53                   	push   %rbx
    a10c:	48 83 ec 30          	sub    $0x30,%rsp
    a110:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    a114:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a11b:	00 00 
    a11d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    a122:	31 c0                	xor    %eax,%eax
    a124:	49 83 fd 04          	cmp    $0x4,%r13
    a128:	0f 86 95 00 00 00    	jbe    a1c3 <ecp_mod_p255+0xc3>
    a12e:	49 83 ed 04          	sub    $0x4,%r13
    a132:	49 83 fd 04          	cmp    $0x4,%r13
    a136:	0f 87 a4 00 00 00    	ja     a1e0 <ecp_mod_p255+0xe0>
    a13c:	48 8b 6f 10          	mov    0x10(%rdi),%rbp
    a140:	49 89 e1             	mov    %rsp,%r9
    a143:	49 89 fc             	mov    %rdi,%r12
    a146:	b9 20 00 00 00       	mov    $0x20,%ecx
    a14b:	4a 8d 1c ed 00 00 00 	lea    0x0(,%r13,8),%rbx
    a152:	00 
    a153:	4c 89 cf             	mov    %r9,%rdi
    a156:	4c 8d 75 20          	lea    0x20(%rbp),%r14
    a15a:	48 89 da             	mov    %rbx,%rdx
    a15d:	4c 89 f6             	mov    %r14,%rsi
    a160:	e8 8b a1 ff ff       	callq  42f0 <__memcpy_chk@plt>
    a165:	48 8d 55 28          	lea    0x28(%rbp),%rdx
    a169:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
    a170:	00 
    a171:	31 ff                	xor    %edi,%edi
    a173:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    a177:	49 89 c1             	mov    %rax,%r9
    a17a:	89 d8                	mov    %ebx,%eax
    a17c:	48 c7 44 05 18 00 00 	movq   $0x0,0x18(%rbp,%rax,1)
    a183:	00 00 
    a185:	49 29 d6             	sub    %rdx,%r14
    a188:	42 8d 04 33          	lea    (%rbx,%r14,1),%eax
    a18c:	83 e0 f8             	and    $0xfffffff8,%eax
    a18f:	83 f8 08             	cmp    $0x8,%eax
    a192:	72 12                	jb     a1a6 <ecp_mod_p255+0xa6>
    a194:	83 e0 f8             	and    $0xfffffff8,%eax
    a197:	31 c9                	xor    %ecx,%ecx
    a199:	89 ce                	mov    %ecx,%esi
    a19b:	83 c1 08             	add    $0x8,%ecx
    a19e:	48 89 3c 32          	mov    %rdi,(%rdx,%rsi,1)
    a1a2:	39 c1                	cmp    %eax,%ecx
    a1a4:	72 f3                	jb     a199 <ecp_mod_p255+0x99>
    a1a6:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    a1ab:	4c 89 e9             	mov    %r13,%rcx
    a1ae:	4c 89 ca             	mov    %r9,%rdx
    a1b1:	be 05 00 00 00       	mov    $0x5,%esi
    a1b6:	41 b8 26 00 00 00    	mov    $0x26,%r8d
    a1bc:	e8 7f 1b 01 00       	callq  1bd40 <mbedtls_mpi_core_mla>
    a1c1:	31 c0                	xor    %eax,%eax
    a1c3:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    a1c8:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    a1cf:	00 00 
    a1d1:	75 14                	jne    a1e7 <ecp_mod_p255+0xe7>
    a1d3:	48 83 c4 30          	add    $0x30,%rsp
    a1d7:	5b                   	pop    %rbx
    a1d8:	5d                   	pop    %rbp
    a1d9:	41 5c                	pop    %r12
    a1db:	41 5d                	pop    %r13
    a1dd:	41 5e                	pop    %r14
    a1df:	c3                   	retq   
    a1e0:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    a1e5:	eb dc                	jmp    a1c3 <ecp_mod_p255+0xc3>
    a1e7:	e8 84 a0 ff ff       	callq  4270 <__stack_chk_fail@plt>
    a1ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a1f0 <ecp_mod_p448>:
    a1f0:	f3 0f 1e fa          	endbr64 
    a1f4:	41 55                	push   %r13
    a1f6:	41 54                	push   %r12
    a1f8:	55                   	push   %rbp
    a1f9:	53                   	push   %rbx
    a1fa:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    a201:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    a205:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a20c:	00 00 
    a20e:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    a215:	00 
    a216:	31 c0                	xor    %eax,%eax
    a218:	48 83 fa 07          	cmp    $0x7,%rdx
    a21c:	0f 86 95 00 00 00    	jbe    a2b7 <ecp_mod_p448+0xc7>
    a222:	48 83 ea 07          	sub    $0x7,%rdx
    a226:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    a22d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    a232:	48 83 fa 07          	cmp    $0x7,%rdx
    a236:	0f 87 9a 01 00 00    	ja     a3d6 <ecp_mod_p448+0x1e6>
    a23c:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    a240:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a244:	48 89 fd             	mov    %rdi,%rbp
    a247:	48 c1 e2 03          	shl    $0x3,%rdx
    a24b:	48 8d 9c 24 80 00 00 	lea    0x80(%rsp),%rbx
    a252:	00 
    a253:	b9 40 00 00 00       	mov    $0x40,%ecx
    a258:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    a25f:	00 
    a260:	49 8d 74 24 38       	lea    0x38(%r12),%rsi
    a265:	48 89 df             	mov    %rbx,%rdi
    a268:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    a26d:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
    a274:	00 
    a275:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
    a27c:	00 
    a27d:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
    a284:	00 
    a285:	e8 66 a0 ff ff       	callq  42f0 <__memcpy_chk@plt>
    a28a:	b8 07 00 00 00       	mov    $0x7,%eax
    a28f:	90                   	nop
    a290:	49 c7 04 c4 00 00 00 	movq   $0x0,(%r12,%rax,8)
    a297:	00 
    a298:	48 83 c0 01          	add    $0x1,%rax
    a29c:	48 39 45 08          	cmp    %rax,0x8(%rbp)
    a2a0:	77 ee                	ja     a290 <ecp_mod_p448+0xa0>
    a2a2:	49 89 e4             	mov    %rsp,%r12
    a2a5:	48 89 ee             	mov    %rbp,%rsi
    a2a8:	48 89 ef             	mov    %rbp,%rdi
    a2ab:	4c 89 e2             	mov    %r12,%rdx
    a2ae:	e8 dd cd 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    a2b3:	85 c0                	test   %eax,%eax
    a2b5:	74 29                	je     a2e0 <ecp_mod_p448+0xf0>
    a2b7:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
    a2be:	00 
    a2bf:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a2c6:	00 00 
    a2c8:	0f 85 12 01 00 00    	jne    a3e0 <ecp_mod_p448+0x1f0>
    a2ce:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    a2d5:	5b                   	pop    %rbx
    a2d6:	5d                   	pop    %rbp
    a2d7:	41 5c                	pop    %r12
    a2d9:	41 5d                	pop    %r13
    a2db:	c3                   	retq   
    a2dc:	0f 1f 40 00          	nopl   0x0(%rax)
    a2e0:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    a2e5:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    a2ea:	66 0f 6f 94 24 80 00 	movdqa 0x80(%rsp),%xmm2
    a2f1:	00 00 
    a2f3:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    a2f8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    a2fd:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    a304:	00 
    a305:	be e0 00 00 00       	mov    $0xe0,%esi
    a30a:	4c 89 ef             	mov    %r13,%rdi
    a30d:	66 0f 6f 9c 24 90 00 	movdqa 0x90(%rsp),%xmm3
    a314:	00 00 
    a316:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    a31b:	66 0f 6f a4 24 a0 00 	movdqa 0xa0(%rsp),%xmm4
    a322:	00 00 
    a324:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    a329:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
    a32e:	0f 29 5c 24 50       	movaps %xmm3,0x50(%rsp)
    a333:	0f 29 64 24 60       	movaps %xmm4,0x60(%rsp)
    a338:	e8 23 c8 00 00       	callq  16b60 <mbedtls_mpi_shift_r>
    a33d:	85 c0                	test   %eax,%eax
    a33f:	0f 85 72 ff ff ff    	jne    a2b7 <ecp_mod_p448+0xc7>
    a345:	4c 89 ea             	mov    %r13,%rdx
    a348:	48 89 ee             	mov    %rbp,%rsi
    a34b:	48 89 ef             	mov    %rbp,%rdi
    a34e:	e8 3d cd 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    a353:	85 c0                	test   %eax,%eax
    a355:	0f 85 5c ff ff ff    	jne    a2b7 <ecp_mod_p448+0xc7>
    a35b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a360:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a365:	48 21 84 24 98 00 00 	and    %rax,0x98(%rsp)
    a36c:	00 
    a36d:	48 83 fa 04          	cmp    $0x4,%rdx
    a371:	76 1c                	jbe    a38f <ecp_mod_p448+0x19f>
    a373:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    a37a:	00 
    a37b:	48 8d 14 d3          	lea    (%rbx,%rdx,8),%rdx
    a37f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a386:	48 83 c0 08          	add    $0x8,%rax
    a38a:	48 39 c2             	cmp    %rax,%rdx
    a38d:	75 f0                	jne    a37f <ecp_mod_p448+0x18f>
    a38f:	4c 89 ea             	mov    %r13,%rdx
    a392:	4c 89 e6             	mov    %r12,%rsi
    a395:	4c 89 e7             	mov    %r12,%rdi
    a398:	e8 f3 cc 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    a39d:	85 c0                	test   %eax,%eax
    a39f:	0f 85 12 ff ff ff    	jne    a2b7 <ecp_mod_p448+0xc7>
    a3a5:	be e0 00 00 00       	mov    $0xe0,%esi
    a3aa:	4c 89 e7             	mov    %r12,%rdi
    a3ad:	48 c7 44 24 08 08 00 	movq   $0x8,0x8(%rsp)
    a3b4:	00 00 
    a3b6:	e8 75 c6 00 00       	callq  16a30 <mbedtls_mpi_shift_l>
    a3bb:	85 c0                	test   %eax,%eax
    a3bd:	0f 85 f4 fe ff ff    	jne    a2b7 <ecp_mod_p448+0xc7>
    a3c3:	4c 89 e2             	mov    %r12,%rdx
    a3c6:	48 89 ee             	mov    %rbp,%rsi
    a3c9:	48 89 ef             	mov    %rbp,%rdi
    a3cc:	e8 bf cc 00 00       	callq  17090 <mbedtls_mpi_add_mpi>
    a3d1:	e9 e1 fe ff ff       	jmpq   a2b7 <ecp_mod_p448+0xc7>
    a3d6:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    a3db:	e9 d7 fe ff ff       	jmpq   a2b7 <ecp_mod_p448+0xc7>
    a3e0:	e8 8b 9e ff ff       	callq  4270 <__stack_chk_fail@plt>
    a3e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a3ec:	00 00 00 00 

000000000000a3f0 <ecp_mod_p224k1>:
    a3f0:	f3 0f 1e fa          	endbr64 
    a3f4:	41 56                	push   %r14
    a3f6:	41 55                	push   %r13
    a3f8:	41 54                	push   %r12
    a3fa:	55                   	push   %rbp
    a3fb:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    a402:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    a406:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a40d:	00 00 
    a40f:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a414:	31 c0                	xor    %eax,%eax
    a416:	48 83 fa 03          	cmp    $0x3,%rdx
    a41a:	0f 86 98 01 00 00    	jbe    a5b8 <ecp_mod_p224k1+0x1c8>
    a420:	48 8d 05 49 7c 02 00 	lea    0x27c49(%rip),%rax        # 32070 <Rp.5158>
    a427:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    a42c:	48 83 ea 03          	sub    $0x3,%rdx
    a430:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
    a437:	00 
    a438:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    a43d:	48 89 fd             	mov    %rdi,%rbp
    a440:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
    a447:	00 00 
    a449:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    a450:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    a455:	48 83 fa 05          	cmp    $0x5,%rdx
    a459:	0f 87 81 01 00 00    	ja     a5e0 <ecp_mod_p224k1+0x1f0>
    a45f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    a464:	48 c1 e2 03          	shl    $0x3,%rdx
    a468:	48 8b 45 10          	mov    0x10(%rbp),%rax
    a46c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a470:	4c 89 ef             	mov    %r13,%rdi
    a473:	b9 30 00 00 00       	mov    $0x30,%ecx
    a478:	49 89 e6             	mov    %rsp,%r14
    a47b:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    a480:	48 8d 70 18          	lea    0x18(%rax),%rsi
    a484:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    a489:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    a48e:	e8 5d 9e ff ff       	callq  42f0 <__memcpy_chk@plt>
    a493:	be 20 00 00 00       	mov    $0x20,%esi
    a498:	4c 89 f7             	mov    %r14,%rdi
    a49b:	e8 c0 c6 00 00       	callq  16b60 <mbedtls_mpi_shift_r>
    a4a0:	85 c0                	test   %eax,%eax
    a4a2:	0f 85 10 01 00 00    	jne    a5b8 <ecp_mod_p224k1+0x1c8>
    a4a8:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    a4ac:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    a4b1:	48 01 44 24 08       	add    %rax,0x8(%rsp)
    a4b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a4bb:	48 21 42 18          	and    %rax,0x18(%rdx)
    a4bf:	48 83 7d 08 04       	cmpq   $0x4,0x8(%rbp)
    a4c4:	b8 04 00 00 00       	mov    $0x4,%eax
    a4c9:	76 17                	jbe    a4e2 <ecp_mod_p224k1+0xf2>
    a4cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a4d0:	48 c7 04 c2 00 00 00 	movq   $0x0,(%rdx,%rax,8)
    a4d7:	00 
    a4d8:	48 83 c0 01          	add    $0x1,%rax
    a4dc:	48 3b 45 08          	cmp    0x8(%rbp),%rax
    a4e0:	72 ee                	jb     a4d0 <ecp_mod_p224k1+0xe0>
    a4e2:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
    a4e7:	4c 89 f6             	mov    %r14,%rsi
    a4ea:	4c 89 f7             	mov    %r14,%rdi
    a4ed:	4c 89 e2             	mov    %r12,%rdx
    a4f0:	e8 9b cc 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    a4f5:	85 c0                	test   %eax,%eax
    a4f7:	0f 85 bb 00 00 00    	jne    a5b8 <ecp_mod_p224k1+0x1c8>
    a4fd:	4c 89 f2             	mov    %r14,%rdx
    a500:	48 89 ee             	mov    %rbp,%rsi
    a503:	48 89 ef             	mov    %rbp,%rdi
    a506:	e8 a5 c8 00 00       	callq  16db0 <mbedtls_mpi_add_abs>
    a50b:	85 c0                	test   %eax,%eax
    a50d:	0f 85 a5 00 00 00    	jne    a5b8 <ecp_mod_p224k1+0x1c8>
    a513:	48 8b 45 08          	mov    0x8(%rbp),%rax
    a517:	48 8d 50 fd          	lea    -0x3(%rax),%rdx
    a51b:	48 83 fa 05          	cmp    $0x5,%rdx
    a51f:	0f 87 d3 00 00 00    	ja     a5f8 <ecp_mod_p224k1+0x208>
    a525:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    a52a:	48 c1 e2 03          	shl    $0x3,%rdx
    a52e:	48 8b 45 10          	mov    0x10(%rbp),%rax
    a532:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a536:	4c 89 ef             	mov    %r13,%rdi
    a539:	b9 30 00 00 00       	mov    $0x30,%ecx
    a53e:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    a543:	48 8d 70 18          	lea    0x18(%rax),%rsi
    a547:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    a54c:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    a551:	e8 9a 9d ff ff       	callq  42f0 <__memcpy_chk@plt>
    a556:	be 20 00 00 00       	mov    $0x20,%esi
    a55b:	4c 89 f7             	mov    %r14,%rdi
    a55e:	e8 fd c5 00 00       	callq  16b60 <mbedtls_mpi_shift_r>
    a563:	85 c0                	test   %eax,%eax
    a565:	75 51                	jne    a5b8 <ecp_mod_p224k1+0x1c8>
    a567:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    a56b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    a570:	48 01 44 24 08       	add    %rax,0x8(%rsp)
    a575:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a57a:	48 21 42 18          	and    %rax,0x18(%rdx)
    a57e:	48 83 7d 08 04       	cmpq   $0x4,0x8(%rbp)
    a583:	b8 04 00 00 00       	mov    $0x4,%eax
    a588:	76 18                	jbe    a5a2 <ecp_mod_p224k1+0x1b2>
    a58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a590:	48 c7 04 c2 00 00 00 	movq   $0x0,(%rdx,%rax,8)
    a597:	00 
    a598:	48 83 c0 01          	add    $0x1,%rax
    a59c:	48 3b 45 08          	cmp    0x8(%rbp),%rax
    a5a0:	72 ee                	jb     a590 <ecp_mod_p224k1+0x1a0>
    a5a2:	4c 89 e2             	mov    %r12,%rdx
    a5a5:	4c 89 f6             	mov    %r14,%rsi
    a5a8:	4c 89 f7             	mov    %r14,%rdi
    a5ab:	e8 e0 cb 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    a5b0:	85 c0                	test   %eax,%eax
    a5b2:	74 5c                	je     a610 <ecp_mod_p224k1+0x220>
    a5b4:	0f 1f 40 00          	nopl   0x0(%rax)
    a5b8:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    a5bd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a5c4:	00 00 
    a5c6:	75 58                	jne    a620 <ecp_mod_p224k1+0x230>
    a5c8:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    a5cf:	5d                   	pop    %rbp
    a5d0:	41 5c                	pop    %r12
    a5d2:	41 5d                	pop    %r13
    a5d4:	41 5e                	pop    %r14
    a5d6:	c3                   	retq   
    a5d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a5de:	00 00 
    a5e0:	48 c7 44 24 08 05 00 	movq   $0x5,0x8(%rsp)
    a5e7:	00 00 
    a5e9:	ba 28 00 00 00       	mov    $0x28,%edx
    a5ee:	e9 75 fe ff ff       	jmpq   a468 <ecp_mod_p224k1+0x78>
    a5f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a5f8:	48 c7 44 24 08 05 00 	movq   $0x5,0x8(%rsp)
    a5ff:	00 00 
    a601:	ba 28 00 00 00       	mov    $0x28,%edx
    a606:	e9 23 ff ff ff       	jmpq   a52e <ecp_mod_p224k1+0x13e>
    a60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a610:	4c 89 f2             	mov    %r14,%rdx
    a613:	48 89 ee             	mov    %rbp,%rsi
    a616:	48 89 ef             	mov    %rbp,%rdi
    a619:	e8 92 c7 00 00       	callq  16db0 <mbedtls_mpi_add_abs>
    a61e:	eb 98                	jmp    a5b8 <ecp_mod_p224k1+0x1c8>
    a620:	e8 4b 9c ff ff       	callq  4270 <__stack_chk_fail@plt>
    a625:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a62c:	00 00 00 00 

000000000000a630 <ecp_mod_p521>:
    a630:	f3 0f 1e fa          	endbr64 
    a634:	41 55                	push   %r13
    a636:	be 12 00 00 00       	mov    $0x12,%esi
    a63b:	41 54                	push   %r12
    a63d:	53                   	push   %rbx
    a63e:	48 89 fb             	mov    %rdi,%rbx
    a641:	e8 8a bd 00 00       	callq  163d0 <mbedtls_mpi_grow>
    a646:	41 89 c4             	mov    %eax,%r12d
    a649:	85 c0                	test   %eax,%eax
    a64b:	74 13                	je     a660 <ecp_mod_p521+0x30>
    a64d:	44 89 e0             	mov    %r12d,%eax
    a650:	5b                   	pop    %rbx
    a651:	41 5c                	pop    %r12
    a653:	41 5d                	pop    %r13
    a655:	c3                   	retq   
    a656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a65d:	00 00 00 
    a660:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    a664:	48 83 bb 88 00 00 00 	cmpq   $0x0,0x88(%rbx)
    a66b:	00 
    a66c:	0f 85 8e 00 00 00    	jne    a700 <ecp_mod_p521+0xd0>
    a672:	4c 8d 6b 48          	lea    0x48(%rbx),%r13
    a676:	48 89 df             	mov    %rbx,%rdi
    a679:	b9 09 00 00 00       	mov    $0x9,%ecx
    a67e:	49 b8 00 00 00 00 00 	movabs $0x80000000000000,%r8
    a685:	00 80 00 
    a688:	4c 89 ea             	mov    %r13,%rdx
    a68b:	be 09 00 00 00       	mov    $0x9,%esi
    a690:	e8 ab 16 01 00       	callq  1bd40 <mbedtls_mpi_core_mla>
    a695:	48 8b 53 40          	mov    0x40(%rbx),%rdx
    a699:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a69d:	48 89 de             	mov    %rbx,%rsi
    a6a0:	48 c1 e0 37          	shl    $0x37,%rax
    a6a4:	0f 11 43 48          	movups %xmm0,0x48(%rbx)
    a6a8:	48 89 df             	mov    %rbx,%rdi
    a6ab:	48 89 d1             	mov    %rdx,%rcx
    a6ae:	48 c1 ea 09          	shr    $0x9,%rdx
    a6b2:	0f 11 43 58          	movups %xmm0,0x58(%rbx)
    a6b6:	48 01 c2             	add    %rax,%rdx
    a6b9:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
    a6bf:	0f 11 43 68          	movups %xmm0,0x68(%rbx)
    a6c3:	48 89 4b 40          	mov    %rcx,0x40(%rbx)
    a6c7:	b9 09 00 00 00       	mov    $0x9,%ecx
    a6cc:	48 89 53 48          	mov    %rdx,0x48(%rbx)
    a6d0:	4c 89 ea             	mov    %r13,%rdx
    a6d3:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
    a6da:	00 00 00 00 
    a6de:	0f 11 43 78          	movups %xmm0,0x78(%rbx)
    a6e2:	e8 49 15 01 00       	callq  1bc30 <mbedtls_mpi_core_add>
    a6e7:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    a6ee:	00 
    a6ef:	44 89 e0             	mov    %r12d,%eax
    a6f2:	5b                   	pop    %rbx
    a6f3:	41 5c                	pop    %r12
    a6f5:	41 5d                	pop    %r13
    a6f7:	c3                   	retq   
    a6f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a6ff:	00 
    a700:	f3 0f 1e fa          	endbr64 
    a704:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    a70a:	e9 3e ff ff ff       	jmpq   a64d <ecp_mod_p521+0x1d>
    a70f:	90                   	nop

000000000000a710 <ecp_mod_p384>:
    a710:	f3 0f 1e fa          	endbr64 
    a714:	41 57                	push   %r15
    a716:	be 0c 00 00 00       	mov    $0xc,%esi
    a71b:	41 56                	push   %r14
    a71d:	41 55                	push   %r13
    a71f:	41 54                	push   %r12
    a721:	55                   	push   %rbp
    a722:	53                   	push   %rbx
    a723:	48 89 fb             	mov    %rdi,%rbx
    a726:	48 83 ec 58          	sub    $0x58,%rsp
    a72a:	e8 a1 bc 00 00       	callq  163d0 <mbedtls_mpi_grow>
    a72f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    a733:	85 c0                	test   %eax,%eax
    a735:	74 19                	je     a750 <ecp_mod_p384+0x40>
    a737:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    a73b:	48 83 c4 58          	add    $0x58,%rsp
    a73f:	5b                   	pop    %rbx
    a740:	5d                   	pop    %rbp
    a741:	41 5c                	pop    %r12
    a743:	41 5d                	pop    %r13
    a745:	41 5e                	pop    %r14
    a747:	41 5f                	pop    %r15
    a749:	c3                   	retq   
    a74a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a750:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
    a757:	ff ff ff 
    a75a:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    a75e:	48 8b 0a             	mov    (%rdx),%rcx
    a761:	48 8b 5a 30          	mov    0x30(%rdx),%rbx
    a765:	48 8b 7a 50          	mov    0x50(%rdx),%rdi
    a769:	4c 8b 5a 58          	mov    0x58(%rdx),%r11
    a76d:	41 89 d9             	mov    %ebx,%r9d
    a770:	89 ce                	mov    %ecx,%esi
    a772:	48 c1 e9 20          	shr    $0x20,%rcx
    a776:	49 89 fc             	mov    %rdi,%r12
    a779:	4c 01 ce             	add    %r9,%rsi
    a77c:	89 ff                	mov    %edi,%edi
    a77e:	4d 89 d8             	mov    %r11,%r8
    a781:	49 c1 ec 20          	shr    $0x20,%r12
    a785:	49 c1 e8 20          	shr    $0x20,%r8
    a789:	45 89 db             	mov    %r11d,%r11d
    a78c:	4c 01 e6             	add    %r12,%rsi
    a78f:	48 c1 eb 20          	shr    $0x20,%rbx
    a793:	48 01 fe             	add    %rdi,%rsi
    a796:	4c 29 c6             	sub    %r8,%rsi
    a799:	49 89 f6             	mov    %rsi,%r14
    a79c:	89 f6                	mov    %esi,%esi
    a79e:	49 c1 fe 20          	sar    $0x20,%r14
    a7a2:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a7a7:	49 01 ce             	add    %rcx,%r14
    a7aa:	49 01 de             	add    %rbx,%r14
    a7ad:	4d 01 de             	add    %r11,%r14
    a7b0:	4d 01 c6             	add    %r8,%r14
    a7b3:	4d 29 ce             	sub    %r9,%r14
    a7b6:	49 29 fe             	sub    %rdi,%r14
    a7b9:	4c 89 f1             	mov    %r14,%rcx
    a7bc:	49 c1 e6 20          	shl    $0x20,%r14
    a7c0:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    a7c5:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    a7c9:	48 c1 f9 20          	sar    $0x20,%rcx
    a7cd:	45 89 f5             	mov    %r14d,%r13d
    a7d0:	49 21 c6             	and    %rax,%r14
    a7d3:	49 01 cd             	add    %rcx,%r13
    a7d6:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    a7da:	4c 89 f6             	mov    %r14,%rsi
    a7dd:	45 89 f7             	mov    %r14d,%r15d
    a7e0:	48 c1 ee 20          	shr    $0x20,%rsi
    a7e4:	41 89 ca             	mov    %ecx,%r10d
    a7e7:	48 c1 e9 20          	shr    $0x20,%rcx
    a7eb:	4d 01 d5             	add    %r10,%r13
    a7ee:	4d 01 c5             	add    %r8,%r13
    a7f1:	49 29 dd             	sub    %rbx,%r13
    a7f4:	4d 29 e5             	sub    %r12,%r13
    a7f7:	4c 89 ed             	mov    %r13,%rbp
    a7fa:	48 c1 fd 20          	sar    $0x20,%rbp
    a7fe:	48 01 ee             	add    %rbp,%rsi
    a801:	48 01 ce             	add    %rcx,%rsi
    a804:	4c 01 ce             	add    %r9,%rsi
    a807:	48 01 fe             	add    %rdi,%rsi
    a80a:	4c 01 e6             	add    %r12,%rsi
    a80d:	4c 29 d6             	sub    %r10,%rsi
    a810:	4c 29 de             	sub    %r11,%rsi
    a813:	45 09 ef             	or     %r13d,%r15d
    a816:	4c 8b 6a 10          	mov    0x10(%rdx),%r13
    a81a:	4c 29 c6             	sub    %r8,%rsi
    a81d:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    a822:	4c 8b 7a 40          	mov    0x40(%rdx),%r15
    a826:	48 89 f5             	mov    %rsi,%rbp
    a829:	48 c1 e6 20          	shl    $0x20,%rsi
    a82d:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    a832:	48 c1 fd 20          	sar    $0x20,%rbp
    a836:	44 89 ee             	mov    %r13d,%esi
    a839:	49 21 c5             	and    %rax,%r13
    a83c:	48 01 f5             	add    %rsi,%rbp
    a83f:	4a 8d 74 65 00       	lea    0x0(%rbp,%r12,2),%rsi
    a844:	44 89 fd             	mov    %r15d,%ebp
    a847:	48 01 ee             	add    %rbp,%rsi
    a84a:	48 01 de             	add    %rbx,%rsi
    a84d:	4c 01 ce             	add    %r9,%rsi
    a850:	48 01 fe             	add    %rdi,%rsi
    a853:	4c 01 de             	add    %r11,%rsi
    a856:	48 29 ce             	sub    %rcx,%rsi
    a859:	4c 29 c6             	sub    %r8,%rsi
    a85c:	4c 29 c6             	sub    %r8,%rsi
    a85f:	49 89 f1             	mov    %rsi,%r9
    a862:	49 c1 f9 20          	sar    $0x20,%r9
    a866:	4d 89 ce             	mov    %r9,%r14
    a869:	4d 89 e9             	mov    %r13,%r9
    a86c:	49 c1 e9 20          	shr    $0x20,%r9
    a870:	4d 01 f1             	add    %r14,%r9
    a873:	4f 8d 34 59          	lea    (%r9,%r11,2),%r14
    a877:	4d 89 f9             	mov    %r15,%r9
    a87a:	49 c1 e9 20          	shr    $0x20,%r9
    a87e:	4d 01 ce             	add    %r9,%r14
    a881:	4d 01 d6             	add    %r10,%r14
    a884:	4c 01 f3             	add    %r14,%rbx
    a887:	45 89 ee             	mov    %r13d,%r14d
    a88a:	4c 01 e3             	add    %r12,%rbx
    a88d:	41 09 f6             	or     %esi,%r14d
    a890:	4c 01 c3             	add    %r8,%rbx
    a893:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
    a898:	4c 8b 72 18          	mov    0x18(%rdx),%r14
    a89c:	48 29 eb             	sub    %rbp,%rbx
    a89f:	49 89 df             	mov    %rbx,%r15
    a8a2:	44 89 f6             	mov    %r14d,%esi
    a8a5:	48 c1 e3 20          	shl    $0x20,%rbx
    a8a9:	49 c1 ff 20          	sar    $0x20,%r15
    a8ad:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    a8b2:	49 01 f7             	add    %rsi,%r15
    a8b5:	48 8b 72 48          	mov    0x48(%rdx),%rsi
    a8b9:	4f 8d 2c 47          	lea    (%r15,%r8,2),%r13
    a8bd:	89 f3                	mov    %esi,%ebx
    a8bf:	49 01 dd             	add    %rbx,%r13
    a8c2:	49 01 cd             	add    %rcx,%r13
    a8c5:	4d 01 ea             	add    %r13,%r10
    a8c8:	4d 01 da             	add    %r11,%r10
    a8cb:	49 21 c6             	and    %rax,%r14
    a8ce:	48 c1 ee 20          	shr    $0x20,%rsi
    a8d2:	4d 29 ca             	sub    %r9,%r10
    a8d5:	4d 89 f5             	mov    %r14,%r13
    a8d8:	4d 89 d7             	mov    %r10,%r15
    a8db:	49 c1 ed 20          	shr    $0x20,%r13
    a8df:	45 09 f2             	or     %r14d,%r10d
    a8e2:	49 c1 ff 20          	sar    $0x20,%r15
    a8e6:	4d 01 fd             	add    %r15,%r13
    a8e9:	49 01 f5             	add    %rsi,%r13
    a8ec:	49 01 ed             	add    %rbp,%r13
    a8ef:	4c 01 e9             	add    %r13,%rcx
    a8f2:	4c 01 c1             	add    %r8,%rcx
    a8f5:	48 29 d9             	sub    %rbx,%rcx
    a8f8:	49 89 cd             	mov    %rcx,%r13
    a8fb:	48 c1 e1 20          	shl    $0x20,%rcx
    a8ff:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
    a904:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
    a908:	49 c1 fd 20          	sar    $0x20,%r13
    a90c:	41 89 ce             	mov    %ecx,%r14d
    a90f:	4d 01 f5             	add    %r14,%r13
    a912:	49 01 fd             	add    %rdi,%r13
    a915:	4d 01 cd             	add    %r9,%r13
    a918:	4c 01 ed             	add    %r13,%rbp
    a91b:	48 29 f5             	sub    %rsi,%rbp
    a91e:	49 89 ed             	mov    %rbp,%r13
    a921:	48 c1 fd 20          	sar    $0x20,%rbp
    a925:	49 89 ee             	mov    %rbp,%r14
    a928:	48 89 cd             	mov    %rcx,%rbp
    a92b:	48 21 c5             	and    %rax,%rbp
    a92e:	49 89 ef             	mov    %rbp,%r15
    a931:	44 09 ed             	or     %r13d,%ebp
    a934:	49 c1 ef 20          	shr    $0x20,%r15
    a938:	4d 01 fe             	add    %r15,%r14
    a93b:	4d 01 e6             	add    %r12,%r14
    a93e:	49 01 de             	add    %rbx,%r14
    a941:	4d 01 f1             	add    %r14,%r9
    a944:	4c 8b 72 28          	mov    0x28(%rdx),%r14
    a948:	49 29 f9             	sub    %rdi,%r9
    a94b:	4d 89 cf             	mov    %r9,%r15
    a94e:	49 c1 e1 20          	shl    $0x20,%r9
    a952:	49 c1 ff 20          	sar    $0x20,%r15
    a956:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    a95b:	45 89 f1             	mov    %r14d,%r9d
    a95e:	4c 89 f9             	mov    %r15,%rcx
    a961:	4c 01 c9             	add    %r9,%rcx
    a964:	4c 01 d9             	add    %r11,%rcx
    a967:	48 01 f1             	add    %rsi,%rcx
    a96a:	4c 8d 2c 0b          	lea    (%rbx,%rcx,1),%r13
    a96e:	4d 29 e5             	sub    %r12,%r13
    a971:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
    a976:	4c 89 e9             	mov    %r13,%rcx
    a979:	49 c1 fd 20          	sar    $0x20,%r13
    a97d:	4d 89 e9             	mov    %r13,%r9
    a980:	4d 89 f5             	mov    %r14,%r13
    a983:	49 21 c5             	and    %rax,%r13
    a986:	4c 89 eb             	mov    %r13,%rbx
    a989:	41 09 cd             	or     %ecx,%r13d
    a98c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    a991:	48 c1 eb 20          	shr    $0x20,%rbx
    a995:	49 01 d9             	add    %rbx,%r9
    a998:	4d 01 c1             	add    %r8,%r9
    a99b:	49 01 f9             	add    %rdi,%r9
    a99e:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    a9a3:	4e 8d 04 0e          	lea    (%rsi,%r9,1),%r8
    a9a7:	4d 29 d8             	sub    %r11,%r8
    a9aa:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    a9af:	4c 89 c3             	mov    %r8,%rbx
    a9b2:	48 c1 fb 20          	sar    $0x20,%rbx
    a9b6:	49 09 fb             	or     %rdi,%r11
    a9b9:	49 89 d9             	mov    %rbx,%r9
    a9bc:	4c 89 c3             	mov    %r8,%rbx
    a9bf:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    a9c4:	49 21 c3             	and    %rax,%r11
    a9c7:	48 c1 e3 20          	shl    $0x20,%rbx
    a9cb:	4c 09 c1             	or     %r8,%rcx
    a9ce:	4b 8d 34 08          	lea    (%r8,%r9,1),%rsi
    a9d2:	49 89 ce             	mov    %rcx,%r14
    a9d5:	49 89 f0             	mov    %rsi,%r8
    a9d8:	49 21 c6             	and    %rax,%r14
    a9db:	49 c1 f8 20          	sar    $0x20,%r8
    a9df:	4d 89 f7             	mov    %r14,%r15
    a9e2:	41 09 f6             	or     %esi,%r14d
    a9e5:	49 c1 ef 20          	shr    $0x20,%r15
    a9e9:	4d 01 c7             	add    %r8,%r15
    a9ec:	4d 29 cf             	sub    %r9,%r15
    a9ef:	4d 89 f8             	mov    %r15,%r8
    a9f2:	49 c1 e7 20          	shl    $0x20,%r15
    a9f6:	49 c1 f8 20          	sar    $0x20,%r8
    a9fa:	4c 01 c7             	add    %r8,%rdi
    a9fd:	4d 89 d8             	mov    %r11,%r8
    aa00:	49 c1 e8 20          	shr    $0x20,%r8
    aa04:	48 89 fe             	mov    %rdi,%rsi
    aa07:	41 09 fb             	or     %edi,%r11d
    aa0a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    aa0f:	48 c1 fe 20          	sar    $0x20,%rsi
    aa13:	4c 89 c1             	mov    %r8,%rcx
    aa16:	48 01 f1             	add    %rsi,%rcx
    aa19:	4c 01 c9             	add    %r9,%rcx
    aa1c:	48 89 ce             	mov    %rcx,%rsi
    aa1f:	49 89 c8             	mov    %rcx,%r8
    aa22:	48 c1 fe 20          	sar    $0x20,%rsi
    aa26:	49 c1 e0 20          	shl    $0x20,%r8
    aa2a:	49 09 fc             	or     %rdi,%r12
    aa2d:	4c 09 eb             	or     %r13,%rbx
    aa30:	48 8d 0c 37          	lea    (%rdi,%rsi,1),%rcx
    aa34:	49 21 c4             	and    %rax,%r12
    aa37:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    aa3c:	49 01 c9             	add    %rcx,%r9
    aa3f:	4c 89 e6             	mov    %r12,%rsi
    aa42:	4c 89 cf             	mov    %r9,%rdi
    aa45:	48 c1 ee 20          	shr    $0x20,%rsi
    aa49:	45 09 cc             	or     %r9d,%r12d
    aa4c:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    aa51:	48 c1 ff 20          	sar    $0x20,%rdi
    aa55:	48 89 f9             	mov    %rdi,%rcx
    aa58:	49 09 e9             	or     %rbp,%r9
    aa5b:	48 01 f1             	add    %rsi,%rcx
    aa5e:	49 21 c1             	and    %rax,%r9
    aa61:	48 89 ce             	mov    %rcx,%rsi
    aa64:	48 89 cf             	mov    %rcx,%rdi
    aa67:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    aa6c:	48 c1 fe 20          	sar    $0x20,%rsi
    aa70:	48 c1 e7 20          	shl    $0x20,%rdi
    aa74:	4c 09 d1             	or     %r10,%rcx
    aa77:	4d 8d 04 32          	lea    (%r10,%rsi,1),%r8
    aa7b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    aa80:	48 21 c1             	and    %rax,%rcx
    aa83:	4c 89 c6             	mov    %r8,%rsi
    aa86:	48 89 cf             	mov    %rcx,%rdi
    aa89:	48 c1 fe 20          	sar    $0x20,%rsi
    aa8d:	49 89 ca             	mov    %rcx,%r10
    aa90:	48 c1 ef 20          	shr    $0x20,%rdi
    aa94:	45 09 c2             	or     %r8d,%r10d
    aa97:	48 01 f7             	add    %rsi,%rdi
    aa9a:	48 89 fe             	mov    %rdi,%rsi
    aa9d:	48 c1 e7 20          	shl    $0x20,%rdi
    aaa1:	48 c1 fe 20          	sar    $0x20,%rsi
    aaa5:	4c 8d 44 35 00       	lea    0x0(%rbp,%rsi,1),%r8
    aaaa:	4c 89 ce             	mov    %r9,%rsi
    aaad:	4c 89 c1             	mov    %r8,%rcx
    aab0:	48 c1 ee 20          	shr    $0x20,%rsi
    aab4:	45 09 c1             	or     %r8d,%r9d
    aab7:	49 89 d8             	mov    %rbx,%r8
    aaba:	48 c1 f9 20          	sar    $0x20,%rcx
    aabe:	49 21 c0             	and    %rax,%r8
    aac1:	48 01 ce             	add    %rcx,%rsi
    aac4:	4c 89 c5             	mov    %r8,%rbp
    aac7:	48 89 f1             	mov    %rsi,%rcx
    aaca:	48 c1 ed 20          	shr    $0x20,%rbp
    aace:	48 c1 f9 20          	sar    $0x20,%rcx
    aad2:	48 c1 e6 20          	shl    $0x20,%rsi
    aad6:	49 8d 5c 0d 00       	lea    0x0(%r13,%rcx,1),%rbx
    aadb:	48 89 d9             	mov    %rbx,%rcx
    aade:	41 09 d8             	or     %ebx,%r8d
    aae1:	48 c1 f9 20          	sar    $0x20,%rcx
    aae5:	48 01 e9             	add    %rbp,%rcx
    aae8:	49 89 cd             	mov    %rcx,%r13
    aaeb:	49 c1 fd 20          	sar    $0x20,%r13
    aaef:	48 c1 e1 20          	shl    $0x20,%rcx
    aaf3:	4d 09 f7             	or     %r14,%r15
    aaf6:	4c 89 fb             	mov    %r15,%rbx
    aaf9:	4d 01 ee             	add    %r13,%r14
    aafc:	48 21 c3             	and    %rax,%rbx
    aaff:	4d 89 f7             	mov    %r14,%r15
    ab02:	48 89 dd             	mov    %rbx,%rbp
    ab05:	49 c1 ff 20          	sar    $0x20,%r15
    ab09:	44 09 f3             	or     %r14d,%ebx
    ab0c:	48 c1 ed 20          	shr    $0x20,%rbp
    ab10:	4c 01 fd             	add    %r15,%rbp
    ab13:	4c 29 ed             	sub    %r13,%rbp
    ab16:	49 89 ef             	mov    %rbp,%r15
    ab19:	48 c1 e5 20          	shl    $0x20,%rbp
    ab1d:	48 09 eb             	or     %rbp,%rbx
    ab20:	49 c1 ff 20          	sar    $0x20,%r15
    ab24:	48 89 1a             	mov    %rbx,(%rdx)
    ab27:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    ab2c:	4b 8d 2c 3b          	lea    (%r11,%r15,1),%rbp
    ab30:	4c 09 db             	or     %r11,%rbx
    ab33:	49 89 eb             	mov    %rbp,%r11
    ab36:	48 21 c3             	and    %rax,%rbx
    ab39:	49 c1 fb 20          	sar    $0x20,%r11
    ab3d:	49 89 de             	mov    %rbx,%r14
    ab40:	09 eb                	or     %ebp,%ebx
    ab42:	49 c1 ee 20          	shr    $0x20,%r14
    ab46:	4d 01 f3             	add    %r14,%r11
    ab49:	4d 01 eb             	add    %r13,%r11
    ab4c:	4d 89 de             	mov    %r11,%r14
    ab4f:	49 c1 e3 20          	shl    $0x20,%r11
    ab53:	4c 09 db             	or     %r11,%rbx
    ab56:	49 c1 fe 20          	sar    $0x20,%r14
    ab5a:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    ab5f:	4b 8d 2c 34          	lea    (%r12,%r14,1),%rbp
    ab63:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
    ab67:	4c 01 ed             	add    %r13,%rbp
    ab6a:	4d 09 e3             	or     %r12,%r11
    ab6d:	49 21 c3             	and    %rax,%r11
    ab70:	48 89 eb             	mov    %rbp,%rbx
    ab73:	48 c1 fb 20          	sar    $0x20,%rbx
    ab77:	4d 89 dd             	mov    %r11,%r13
    ab7a:	49 c1 eb 20          	shr    $0x20,%r11
    ab7e:	49 01 db             	add    %rbx,%r11
    ab81:	41 09 ed             	or     %ebp,%r13d
    ab84:	4c 89 db             	mov    %r11,%rbx
    ab87:	49 c1 e3 20          	shl    $0x20,%r11
    ab8b:	48 c1 fb 20          	sar    $0x20,%rbx
    ab8f:	4d 09 dd             	or     %r11,%r13
    ab92:	4c 09 d7             	or     %r10,%rdi
    ab95:	4c 09 ce             	or     %r9,%rsi
    ab98:	4d 8d 1c 1a          	lea    (%r10,%rbx,1),%r11
    ab9c:	48 21 c7             	and    %rax,%rdi
    ab9f:	48 21 c6             	and    %rax,%rsi
    aba2:	4c 09 c1             	or     %r8,%rcx
    aba5:	49 89 fa             	mov    %rdi,%r10
    aba8:	4c 89 db             	mov    %r11,%rbx
    abab:	44 09 df             	or     %r11d,%edi
    abae:	48 21 c1             	and    %rax,%rcx
    abb1:	48 c1 fb 20          	sar    $0x20,%rbx
    abb5:	49 c1 ea 20          	shr    $0x20,%r10
    abb9:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    abbd:	49 01 da             	add    %rbx,%r10
    abc0:	4c 89 d3             	mov    %r10,%rbx
    abc3:	49 c1 e2 20          	shl    $0x20,%r10
    abc7:	48 c1 fb 20          	sar    $0x20,%rbx
    abcb:	4c 09 d7             	or     %r10,%rdi
    abce:	49 01 d9             	add    %rbx,%r9
    abd1:	48 89 7a 18          	mov    %rdi,0x18(%rdx)
    abd5:	48 89 f7             	mov    %rsi,%rdi
    abd8:	4d 89 ca             	mov    %r9,%r10
    abdb:	48 c1 ef 20          	shr    $0x20,%rdi
    abdf:	44 09 ce             	or     %r9d,%esi
    abe2:	49 c1 fa 20          	sar    $0x20,%r10
    abe6:	4c 01 d7             	add    %r10,%rdi
    abe9:	49 89 fa             	mov    %rdi,%r10
    abec:	48 c1 e7 20          	shl    $0x20,%rdi
    abf0:	49 c1 fa 20          	sar    $0x20,%r10
    abf4:	48 09 fe             	or     %rdi,%rsi
    abf7:	4b 8d 3c 10          	lea    (%r8,%r10,1),%rdi
    abfb:	48 89 72 20          	mov    %rsi,0x20(%rdx)
    abff:	48 89 ce             	mov    %rcx,%rsi
    ac02:	49 89 f8             	mov    %rdi,%r8
    ac05:	48 c1 ee 20          	shr    $0x20,%rsi
    ac09:	09 f9                	or     %edi,%ecx
    ac0b:	49 c1 f8 20          	sar    $0x20,%r8
    ac0f:	4c 01 c6             	add    %r8,%rsi
    ac12:	48 89 f7             	mov    %rsi,%rdi
    ac15:	48 c1 e7 20          	shl    $0x20,%rdi
    ac19:	48 09 f9             	or     %rdi,%rcx
    ac1c:	48 c1 ee 20          	shr    $0x20,%rsi
    ac20:	48 89 4a 28          	mov    %rcx,0x28(%rdx)
    ac24:	75 39                	jne    ac5f <ecp_mod_p384+0x54f>
    ac26:	be 0c 00 00 00       	mov    $0xc,%esi
    ac2b:	eb 17                	jmp    ac44 <ecp_mod_p384+0x534>
    ac2d:	0f 1f 00             	nopl   (%rax)
    ac30:	83 e1 ff             	and    $0xffffffff,%ecx
    ac33:	48 89 0f             	mov    %rcx,(%rdi)
    ac36:	48 83 c6 01          	add    $0x1,%rsi
    ac3a:	48 83 fe 18          	cmp    $0x18,%rsi
    ac3e:	0f 84 f3 fa ff ff    	je     a737 <ecp_mod_p384+0x27>
    ac44:	48 89 f1             	mov    %rsi,%rcx
    ac47:	48 d1 e9             	shr    %rcx
    ac4a:	48 8d 3c ca          	lea    (%rdx,%rcx,8),%rdi
    ac4e:	48 8b 0f             	mov    (%rdi),%rcx
    ac51:	40 f6 c6 01          	test   $0x1,%sil
    ac55:	75 d9                	jne    ac30 <ecp_mod_p384+0x520>
    ac57:	48 21 c1             	and    %rax,%rcx
    ac5a:	48 89 0f             	mov    %rcx,(%rdi)
    ac5d:	eb d7                	jmp    ac36 <ecp_mod_p384+0x526>
    ac5f:	f3 0f 1e fa          	endbr64 
    ac63:	c7 44 24 0c 80 b0 ff 	movl   $0xffffb080,0xc(%rsp)
    ac6a:	ff 
    ac6b:	e9 c7 fa ff ff       	jmpq   a737 <ecp_mod_p384+0x27>

000000000000ac70 <ecp_mod_p256>:
    ac70:	f3 0f 1e fa          	endbr64 
    ac74:	41 57                	push   %r15
    ac76:	be 08 00 00 00       	mov    $0x8,%esi
    ac7b:	41 56                	push   %r14
    ac7d:	41 55                	push   %r13
    ac7f:	41 54                	push   %r12
    ac81:	55                   	push   %rbp
    ac82:	53                   	push   %rbx
    ac83:	48 89 fb             	mov    %rdi,%rbx
    ac86:	48 83 ec 28          	sub    $0x28,%rsp
    ac8a:	e8 41 b7 00 00       	callq  163d0 <mbedtls_mpi_grow>
    ac8f:	85 c0                	test   %eax,%eax
    ac91:	74 15                	je     aca8 <ecp_mod_p256+0x38>
    ac93:	48 83 c4 28          	add    $0x28,%rsp
    ac97:	5b                   	pop    %rbx
    ac98:	5d                   	pop    %rbp
    ac99:	41 5c                	pop    %r12
    ac9b:	41 5d                	pop    %r13
    ac9d:	41 5e                	pop    %r14
    ac9f:	41 5f                	pop    %r15
    aca1:	c3                   	retq   
    aca2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    aca8:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    acaf:	ff ff ff 
    acb2:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
    acb6:	49 8b 39             	mov    (%r9),%rdi
    acb9:	49 8b 71 20          	mov    0x20(%r9),%rsi
    acbd:	49 8b 69 28          	mov    0x28(%r9),%rbp
    acc1:	4d 8b 59 30          	mov    0x30(%r9),%r11
    acc5:	89 f2                	mov    %esi,%edx
    acc7:	41 89 fe             	mov    %edi,%r14d
    acca:	48 c1 ee 20          	shr    $0x20,%rsi
    acce:	4d 8b 51 38          	mov    0x38(%r9),%r10
    acd2:	49 01 d6             	add    %rdx,%r14
    acd5:	49 89 ed             	mov    %rbp,%r13
    acd8:	45 89 dc             	mov    %r11d,%r12d
    acdb:	49 c1 eb 20          	shr    $0x20,%r11
    acdf:	49 c1 ed 20          	shr    $0x20,%r13
    ace3:	49 01 f6             	add    %rsi,%r14
    ace6:	44 89 d1             	mov    %r10d,%ecx
    ace9:	48 c1 ef 20          	shr    $0x20,%rdi
    aced:	4d 29 ee             	sub    %r13,%r14
    acf0:	89 ed                	mov    %ebp,%ebp
    acf2:	49 c1 ea 20          	shr    $0x20,%r10
    acf6:	4d 29 e6             	sub    %r12,%r14
    acf9:	4d 29 de             	sub    %r11,%r14
    acfc:	49 29 ce             	sub    %rcx,%r14
    acff:	4c 89 f3             	mov    %r14,%rbx
    ad02:	45 89 f7             	mov    %r14d,%r15d
    ad05:	48 c1 fb 20          	sar    $0x20,%rbx
    ad09:	4c 89 3c 24          	mov    %r15,(%rsp)
    ad0d:	4d 8b 79 08          	mov    0x8(%r9),%r15
    ad11:	48 01 df             	add    %rbx,%rdi
    ad14:	48 01 f7             	add    %rsi,%rdi
    ad17:	48 01 ef             	add    %rbp,%rdi
    ad1a:	4c 29 e7             	sub    %r12,%rdi
    ad1d:	4c 29 df             	sub    %r11,%rdi
    ad20:	48 29 cf             	sub    %rcx,%rdi
    ad23:	4c 29 d7             	sub    %r10,%rdi
    ad26:	48 89 fb             	mov    %rdi,%rbx
    ad29:	48 c1 e7 20          	shl    $0x20,%rdi
    ad2d:	48 c1 fb 20          	sar    $0x20,%rbx
    ad31:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    ad36:	44 89 ff             	mov    %r15d,%edi
    ad39:	4d 21 c7             	and    %r8,%r15
    ad3c:	48 01 df             	add    %rbx,%rdi
    ad3f:	4c 89 fb             	mov    %r15,%rbx
    ad42:	48 01 ef             	add    %rbp,%rdi
    ad45:	48 c1 eb 20          	shr    $0x20,%rbx
    ad49:	4c 01 ef             	add    %r13,%rdi
    ad4c:	4c 29 df             	sub    %r11,%rdi
    ad4f:	48 29 cf             	sub    %rcx,%rdi
    ad52:	4c 29 d7             	sub    %r10,%rdi
    ad55:	49 89 fe             	mov    %rdi,%r14
    ad58:	49 c1 fe 20          	sar    $0x20,%r14
    ad5c:	4c 01 f3             	add    %r14,%rbx
    ad5f:	4a 8d 1c 6b          	lea    (%rbx,%r13,2),%rbx
    ad63:	4a 8d 1c 63          	lea    (%rbx,%r12,2),%rbx
    ad67:	4c 01 db             	add    %r11,%rbx
    ad6a:	4c 29 d3             	sub    %r10,%rbx
    ad6d:	41 09 ff             	or     %edi,%r15d
    ad70:	48 29 d3             	sub    %rdx,%rbx
    ad73:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    ad78:	48 29 f3             	sub    %rsi,%rbx
    ad7b:	49 89 de             	mov    %rbx,%r14
    ad7e:	48 c1 e3 20          	shl    $0x20,%rbx
    ad82:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    ad87:	49 8b 59 10          	mov    0x10(%r9),%rbx
    ad8b:	49 c1 fe 20          	sar    $0x20,%r14
    ad8f:	89 df                	mov    %ebx,%edi
    ad91:	4c 21 c3             	and    %r8,%rbx
    ad94:	49 01 fe             	add    %rdi,%r14
    ad97:	4b 8d 3c 66          	lea    (%r14,%r12,2),%rdi
    ad9b:	4e 8d 3c 5f          	lea    (%rdi,%r11,2),%r15
    ad9f:	48 89 df             	mov    %rbx,%rdi
    ada2:	49 01 cf             	add    %rcx,%r15
    ada5:	48 c1 ef 20          	shr    $0x20,%rdi
    ada9:	49 29 f7             	sub    %rsi,%r15
    adac:	49 29 ef             	sub    %rbp,%r15
    adaf:	4d 89 fe             	mov    %r15,%r14
    adb2:	44 09 fb             	or     %r15d,%ebx
    adb5:	45 8b 79 18          	mov    0x18(%r9),%r15d
    adb9:	49 c1 fe 20          	sar    $0x20,%r14
    adbd:	4c 01 f7             	add    %r14,%rdi
    adc0:	4a 8d 3c 5f          	lea    (%rdi,%r11,2),%rdi
    adc4:	48 8d 3c 4f          	lea    (%rdi,%rcx,2),%rdi
    adc8:	4c 01 d7             	add    %r10,%rdi
    adcb:	48 29 ef             	sub    %rbp,%rdi
    adce:	4c 29 ef             	sub    %r13,%rdi
    add1:	49 89 fe             	mov    %rdi,%r14
    add4:	48 c1 e7 20          	shl    $0x20,%rdi
    add8:	49 c1 fe 20          	sar    $0x20,%r14
    addc:	4d 01 fe             	add    %r15,%r14
    addf:	4d 8d 34 4e          	lea    (%r14,%rcx,2),%r14
    ade3:	4f 8d 34 56          	lea    (%r14,%r10,2),%r14
    ade7:	4c 01 f1             	add    %r14,%rcx
    adea:	4c 01 d9             	add    %r11,%rcx
    aded:	48 29 d1             	sub    %rdx,%rcx
    adf0:	48 29 f1             	sub    %rsi,%rcx
    adf3:	49 8b 71 18          	mov    0x18(%r9),%rsi
    adf7:	49 89 ce             	mov    %rcx,%r14
    adfa:	4c 21 c6             	and    %r8,%rsi
    adfd:	49 c1 fe 20          	sar    $0x20,%r14
    ae01:	4d 89 f7             	mov    %r14,%r15
    ae04:	49 89 f6             	mov    %rsi,%r14
    ae07:	49 c1 ee 20          	shr    $0x20,%r14
    ae0b:	4d 01 fe             	add    %r15,%r14
    ae0e:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    ae13:	4f 8d 34 56          	lea    (%r14,%r10,2),%r14
    ae17:	4d 01 f2             	add    %r14,%r10
    ae1a:	49 01 d2             	add    %rdx,%r10
    ae1d:	48 8b 14 24          	mov    (%rsp),%rdx
    ae21:	49 29 ea             	sub    %rbp,%r10
    ae24:	4d 29 ea             	sub    %r13,%r10
    ae27:	09 f1                	or     %esi,%ecx
    ae29:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    ae2e:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    ae33:	4d 29 e2             	sub    %r12,%r10
    ae36:	48 09 df             	or     %rbx,%rdi
    ae39:	4d 29 da             	sub    %r11,%r10
    ae3c:	48 09 d6             	or     %rdx,%rsi
    ae3f:	4d 09 fd             	or     %r15,%r13
    ae42:	4c 21 c7             	and    %r8,%rdi
    ae45:	4d 89 d3             	mov    %r10,%r11
    ae48:	4c 21 c6             	and    %r8,%rsi
    ae4b:	4d 21 c5             	and    %r8,%r13
    ae4e:	49 c1 e2 20          	shl    $0x20,%r10
    ae52:	49 c1 fb 20          	sar    $0x20,%r11
    ae56:	49 89 f4             	mov    %rsi,%r12
    ae59:	49 09 ca             	or     %rcx,%r10
    ae5c:	4a 8d 2c 1a          	lea    (%rdx,%r11,1),%rbp
    ae60:	49 c1 ec 20          	shr    $0x20,%r12
    ae64:	48 89 ea             	mov    %rbp,%rdx
    ae67:	09 ee                	or     %ebp,%esi
    ae69:	4c 89 ed             	mov    %r13,%rbp
    ae6c:	48 c1 fa 20          	sar    $0x20,%rdx
    ae70:	48 c1 ed 20          	shr    $0x20,%rbp
    ae74:	49 01 d4             	add    %rdx,%r12
    ae77:	4c 89 e2             	mov    %r12,%rdx
    ae7a:	49 c1 e4 20          	shl    $0x20,%r12
    ae7e:	48 c1 fa 20          	sar    $0x20,%rdx
    ae82:	4d 8d 34 17          	lea    (%r15,%rdx,1),%r14
    ae86:	4c 89 f2             	mov    %r14,%rdx
    ae89:	45 09 f5             	or     %r14d,%r13d
    ae8c:	48 c1 fa 20          	sar    $0x20,%rdx
    ae90:	48 01 d5             	add    %rdx,%rbp
    ae93:	4c 29 dd             	sub    %r11,%rbp
    ae96:	48 89 ea             	mov    %rbp,%rdx
    ae99:	48 c1 e5 20          	shl    $0x20,%rbp
    ae9d:	48 c1 fa 20          	sar    $0x20,%rdx
    aea1:	4c 8d 34 13          	lea    (%rbx,%rdx,1),%r14
    aea5:	48 89 fa             	mov    %rdi,%rdx
    aea8:	4c 89 f3             	mov    %r14,%rbx
    aeab:	48 c1 ea 20          	shr    $0x20,%rdx
    aeaf:	44 09 f7             	or     %r14d,%edi
    aeb2:	48 c1 fb 20          	sar    $0x20,%rbx
    aeb6:	48 01 da             	add    %rbx,%rdx
    aeb9:	48 89 d3             	mov    %rdx,%rbx
    aebc:	48 c1 e2 20          	shl    $0x20,%rdx
    aec0:	48 c1 fb 20          	sar    $0x20,%rbx
    aec4:	48 01 cb             	add    %rcx,%rbx
    aec7:	4d 21 c2             	and    %r8,%r10
    aeca:	49 09 f4             	or     %rsi,%r12
    aecd:	4c 09 ed             	or     %r13,%rbp
    aed0:	4c 29 db             	sub    %r11,%rbx
    aed3:	4c 89 d1             	mov    %r10,%rcx
    aed6:	4d 21 c4             	and    %r8,%r12
    aed9:	4c 21 c5             	and    %r8,%rbp
    aedc:	49 89 de             	mov    %rbx,%r14
    aedf:	48 c1 e9 20          	shr    $0x20,%rcx
    aee3:	41 09 da             	or     %ebx,%r10d
    aee6:	4c 89 e3             	mov    %r12,%rbx
    aee9:	49 c1 fe 20          	sar    $0x20,%r14
    aeed:	48 c1 eb 20          	shr    $0x20,%rbx
    aef1:	48 09 fa             	or     %rdi,%rdx
    aef4:	4c 01 f1             	add    %r14,%rcx
    aef7:	49 01 cb             	add    %rcx,%r11
    aefa:	4c 89 d9             	mov    %r11,%rcx
    aefd:	49 c1 e3 20          	shl    $0x20,%r11
    af01:	48 c1 f9 20          	sar    $0x20,%rcx
    af05:	4c 8d 34 0e          	lea    (%rsi,%rcx,1),%r14
    af09:	4c 89 f6             	mov    %r14,%rsi
    af0c:	45 09 f4             	or     %r14d,%r12d
    af0f:	48 c1 fe 20          	sar    $0x20,%rsi
    af13:	48 01 f3             	add    %rsi,%rbx
    af16:	48 89 de             	mov    %rbx,%rsi
    af19:	48 c1 e3 20          	shl    $0x20,%rbx
    af1d:	49 09 dc             	or     %rbx,%r12
    af20:	48 c1 fe 20          	sar    $0x20,%rsi
    af24:	4d 89 21             	mov    %r12,(%r9)
    af27:	4d 8d 64 35 00       	lea    0x0(%r13,%rsi,1),%r12
    af2c:	48 89 ee             	mov    %rbp,%rsi
    af2f:	4c 89 e3             	mov    %r12,%rbx
    af32:	48 c1 ee 20          	shr    $0x20,%rsi
    af36:	44 09 e5             	or     %r12d,%ebp
    af39:	48 c1 fb 20          	sar    $0x20,%rbx
    af3d:	48 01 de             	add    %rbx,%rsi
    af40:	48 29 ce             	sub    %rcx,%rsi
    af43:	48 89 f3             	mov    %rsi,%rbx
    af46:	48 c1 e6 20          	shl    $0x20,%rsi
    af4a:	48 c1 fb 20          	sar    $0x20,%rbx
    af4e:	48 09 f5             	or     %rsi,%rbp
    af51:	48 01 df             	add    %rbx,%rdi
    af54:	49 89 69 08          	mov    %rbp,0x8(%r9)
    af58:	48 89 fb             	mov    %rdi,%rbx
    af5b:	48 c1 fb 20          	sar    $0x20,%rbx
    af5f:	4c 21 c2             	and    %r8,%rdx
    af62:	48 89 d6             	mov    %rdx,%rsi
    af65:	09 fa                	or     %edi,%edx
    af67:	48 c1 ee 20          	shr    $0x20,%rsi
    af6b:	48 01 de             	add    %rbx,%rsi
    af6e:	48 89 f3             	mov    %rsi,%rbx
    af71:	48 c1 e6 20          	shl    $0x20,%rsi
    af75:	48 09 f2             	or     %rsi,%rdx
    af78:	48 c1 fb 20          	sar    $0x20,%rbx
    af7c:	49 89 51 10          	mov    %rdx,0x10(%r9)
    af80:	4c 89 da             	mov    %r11,%rdx
    af83:	4d 8d 1c 1a          	lea    (%r10,%rbx,1),%r11
    af87:	4c 89 de             	mov    %r11,%rsi
    af8a:	4c 09 d2             	or     %r10,%rdx
    af8d:	48 29 ce             	sub    %rcx,%rsi
    af90:	4c 21 c2             	and    %r8,%rdx
    af93:	48 89 f7             	mov    %rsi,%rdi
    af96:	49 89 d3             	mov    %rdx,%r11
    af99:	48 c1 ea 20          	shr    $0x20,%rdx
    af9d:	48 c1 ff 20          	sar    $0x20,%rdi
    afa1:	41 09 f3             	or     %esi,%r11d
    afa4:	48 01 fa             	add    %rdi,%rdx
    afa7:	48 01 d1             	add    %rdx,%rcx
    afaa:	48 89 ca             	mov    %rcx,%rdx
    afad:	48 c1 e2 20          	shl    $0x20,%rdx
    afb1:	49 09 d3             	or     %rdx,%r11
    afb4:	48 c1 e9 20          	shr    $0x20,%rcx
    afb8:	4d 89 59 18          	mov    %r11,0x18(%r9)
    afbc:	75 38                	jne    aff6 <ecp_mod_p256+0x386>
    afbe:	b9 08 00 00 00       	mov    $0x8,%ecx
    afc3:	eb 17                	jmp    afdc <ecp_mod_p256+0x36c>
    afc5:	0f 1f 00             	nopl   (%rax)
    afc8:	83 e2 ff             	and    $0xffffffff,%edx
    afcb:	48 89 16             	mov    %rdx,(%rsi)
    afce:	48 83 c1 01          	add    $0x1,%rcx
    afd2:	48 83 f9 10          	cmp    $0x10,%rcx
    afd6:	0f 84 b7 fc ff ff    	je     ac93 <ecp_mod_p256+0x23>
    afdc:	48 89 ca             	mov    %rcx,%rdx
    afdf:	48 d1 ea             	shr    %rdx
    afe2:	49 8d 34 d1          	lea    (%r9,%rdx,8),%rsi
    afe6:	48 8b 16             	mov    (%rsi),%rdx
    afe9:	f6 c1 01             	test   $0x1,%cl
    afec:	75 da                	jne    afc8 <ecp_mod_p256+0x358>
    afee:	4c 21 c2             	and    %r8,%rdx
    aff1:	48 89 16             	mov    %rdx,(%rsi)
    aff4:	eb d8                	jmp    afce <ecp_mod_p256+0x35e>
    aff6:	f3 0f 1e fa          	endbr64 
    affa:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    afff:	e9 8f fc ff ff       	jmpq   ac93 <ecp_mod_p256+0x23>
    b004:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b00b:	00 00 00 00 
    b00f:	90                   	nop

000000000000b010 <ecp_mod_p224>:
    b010:	f3 0f 1e fa          	endbr64 
    b014:	41 57                	push   %r15
    b016:	be 07 00 00 00       	mov    $0x7,%esi
    b01b:	41 56                	push   %r14
    b01d:	41 55                	push   %r13
    b01f:	41 54                	push   %r12
    b021:	55                   	push   %rbp
    b022:	53                   	push   %rbx
    b023:	48 89 fb             	mov    %rdi,%rbx
    b026:	48 83 ec 18          	sub    $0x18,%rsp
    b02a:	e8 a1 b3 00 00       	callq  163d0 <mbedtls_mpi_grow>
    b02f:	85 c0                	test   %eax,%eax
    b031:	74 15                	je     b048 <ecp_mod_p224+0x38>
    b033:	48 83 c4 18          	add    $0x18,%rsp
    b037:	5b                   	pop    %rbx
    b038:	5d                   	pop    %rbp
    b039:	41 5c                	pop    %r12
    b03b:	41 5d                	pop    %r13
    b03d:	41 5e                	pop    %r14
    b03f:	41 5f                	pop    %r15
    b041:	c3                   	retq   
    b042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b048:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    b04f:	ff ff ff 
    b052:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    b056:	48 8b 11             	mov    (%rcx),%rdx
    b059:	4c 8b 79 28          	mov    0x28(%rcx),%r15
    b05d:	4c 8b 61 18          	mov    0x18(%rcx),%r12
    b061:	48 8b 69 30          	mov    0x30(%rcx),%rbp
    b065:	89 d7                	mov    %edx,%edi
    b067:	4d 89 fe             	mov    %r15,%r14
    b06a:	48 c1 ea 20          	shr    $0x20,%rdx
    b06e:	4c 8b 59 08          	mov    0x8(%rcx),%r11
    b072:	49 c1 ec 20          	shr    $0x20,%r12
    b076:	49 c1 ee 20          	shr    $0x20,%r14
    b07a:	41 89 ed             	mov    %ebp,%r13d
    b07d:	4c 29 e7             	sub    %r12,%rdi
    b080:	45 89 da             	mov    %r11d,%r10d
    b083:	48 c1 ed 20          	shr    $0x20,%rbp
    b087:	4d 21 c3             	and    %r8,%r11
    b08a:	4c 29 f7             	sub    %r14,%rdi
    b08d:	49 89 f9             	mov    %rdi,%r9
    b090:	89 ff                	mov    %edi,%edi
    b092:	49 c1 f9 20          	sar    $0x20,%r9
    b096:	49 01 d1             	add    %rdx,%r9
    b099:	48 8b 51 20          	mov    0x20(%rcx),%rdx
    b09d:	89 d3                	mov    %edx,%ebx
    b09f:	48 c1 ea 20          	shr    $0x20,%rdx
    b0a3:	49 29 d9             	sub    %rbx,%r9
    b0a6:	4d 29 e9             	sub    %r13,%r9
    b0a9:	4c 89 ce             	mov    %r9,%rsi
    b0ac:	49 c1 e1 20          	shl    $0x20,%r9
    b0b0:	48 c1 fe 20          	sar    $0x20,%rsi
    b0b4:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    b0b9:	49 01 f2             	add    %rsi,%r10
    b0bc:	49 29 d2             	sub    %rdx,%r10
    b0bf:	49 29 ea             	sub    %rbp,%r10
    b0c2:	4c 89 d6             	mov    %r10,%rsi
    b0c5:	48 c1 fe 20          	sar    $0x20,%rsi
    b0c9:	49 89 f1             	mov    %rsi,%r9
    b0cc:	4c 89 de             	mov    %r11,%rsi
    b0cf:	45 09 d3             	or     %r10d,%r11d
    b0d2:	4c 8b 51 10          	mov    0x10(%rcx),%r10
    b0d6:	48 c1 ee 20          	shr    $0x20,%rsi
    b0da:	4c 01 ce             	add    %r9,%rsi
    b0dd:	45 89 f9             	mov    %r15d,%r9d
    b0e0:	4c 29 ce             	sub    %r9,%rsi
    b0e3:	4c 01 e6             	add    %r12,%rsi
    b0e6:	45 89 d4             	mov    %r10d,%r12d
    b0e9:	4d 21 c2             	and    %r8,%r10
    b0ec:	4c 01 f6             	add    %r14,%rsi
    b0ef:	49 89 f7             	mov    %rsi,%r15
    b0f2:	48 c1 e6 20          	shl    $0x20,%rsi
    b0f6:	49 c1 ff 20          	sar    $0x20,%r15
    b0fa:	4d 01 fc             	add    %r15,%r12
    b0fd:	4d 29 f4             	sub    %r14,%r12
    b100:	4d 89 d6             	mov    %r10,%r14
    b103:	4c 01 e3             	add    %r12,%rbx
    b106:	4c 01 eb             	add    %r13,%rbx
    b109:	49 89 dc             	mov    %rbx,%r12
    b10c:	49 c1 fc 20          	sar    $0x20,%r12
    b110:	49 c1 ee 20          	shr    $0x20,%r14
    b114:	41 09 da             	or     %ebx,%r10d
    b117:	8b 59 18             	mov    0x18(%rcx),%ebx
    b11a:	4d 01 f4             	add    %r14,%r12
    b11d:	4c 09 de             	or     %r11,%rsi
    b120:	4d 29 ec             	sub    %r13,%r12
    b123:	4c 21 c6             	and    %r8,%rsi
    b126:	4c 01 e2             	add    %r12,%rdx
    b129:	4c 8b 61 18          	mov    0x18(%rcx),%r12
    b12d:	48 01 ea             	add    %rbp,%rdx
    b130:	49 89 d5             	mov    %rdx,%r13
    b133:	4d 21 c4             	and    %r8,%r12
    b136:	48 c1 e2 20          	shl    $0x20,%rdx
    b13a:	49 c1 fd 20          	sar    $0x20,%r13
    b13e:	49 01 dd             	add    %rbx,%r13
    b141:	49 29 ed             	sub    %rbp,%r13
    b144:	4b 8d 1c 29          	lea    (%r9,%r13,1),%rbx
    b148:	48 89 dd             	mov    %rbx,%rbp
    b14b:	41 89 d9             	mov    %ebx,%r9d
    b14e:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    b153:	48 c1 fd 20          	sar    $0x20,%rbp
    b157:	4d 09 e1             	or     %r12,%r9
    b15a:	48 09 fb             	or     %rdi,%rbx
    b15d:	48 29 ef             	sub    %rbp,%rdi
    b160:	4c 21 c3             	and    %r8,%rbx
    b163:	49 89 fd             	mov    %rdi,%r13
    b166:	49 89 dc             	mov    %rbx,%r12
    b169:	49 c1 fd 20          	sar    $0x20,%r13
    b16d:	09 fb                	or     %edi,%ebx
    b16f:	48 89 f7             	mov    %rsi,%rdi
    b172:	49 c1 ec 20          	shr    $0x20,%r12
    b176:	48 c1 ef 20          	shr    $0x20,%rdi
    b17a:	4d 01 ec             	add    %r13,%r12
    b17d:	4d 89 e5             	mov    %r12,%r13
    b180:	49 c1 e4 20          	shl    $0x20,%r12
    b184:	49 c1 fd 20          	sar    $0x20,%r13
    b188:	4c 09 e3             	or     %r12,%rbx
    b18b:	4d 01 eb             	add    %r13,%r11
    b18e:	48 89 19             	mov    %rbx,(%rcx)
    b191:	4c 89 db             	mov    %r11,%rbx
    b194:	44 09 de             	or     %r11d,%esi
    b197:	48 c1 fb 20          	sar    $0x20,%rbx
    b19b:	48 01 df             	add    %rbx,%rdi
    b19e:	48 01 fd             	add    %rdi,%rbp
    b1a1:	48 89 ef             	mov    %rbp,%rdi
    b1a4:	48 c1 ff 20          	sar    $0x20,%rdi
    b1a8:	48 c1 e5 20          	shl    $0x20,%rbp
    b1ac:	4c 09 d2             	or     %r10,%rdx
    b1af:	48 09 ee             	or     %rbp,%rsi
    b1b2:	4c 01 d7             	add    %r10,%rdi
    b1b5:	4c 21 c2             	and    %r8,%rdx
    b1b8:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    b1bc:	49 89 fa             	mov    %rdi,%r10
    b1bf:	48 89 d6             	mov    %rdx,%rsi
    b1c2:	09 fa                	or     %edi,%edx
    b1c4:	49 c1 fa 20          	sar    $0x20,%r10
    b1c8:	48 c1 ee 20          	shr    $0x20,%rsi
    b1cc:	4c 01 d6             	add    %r10,%rsi
    b1cf:	49 89 f2             	mov    %rsi,%r10
    b1d2:	48 c1 e6 20          	shl    $0x20,%rsi
    b1d6:	48 09 f2             	or     %rsi,%rdx
    b1d9:	49 c1 fa 20          	sar    $0x20,%r10
    b1dd:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    b1e1:	44 89 ca             	mov    %r9d,%edx
    b1e4:	4d 21 c1             	and    %r8,%r9
    b1e7:	4c 01 d2             	add    %r10,%rdx
    b1ea:	89 d6                	mov    %edx,%esi
    b1ec:	49 09 f1             	or     %rsi,%r9
    b1ef:	48 c1 ea 20          	shr    $0x20,%rdx
    b1f3:	4c 89 49 18          	mov    %r9,0x18(%rcx)
    b1f7:	75 32                	jne    b22b <ecp_mod_p224+0x21b>
    b1f9:	be 07 00 00 00       	mov    $0x7,%esi
    b1fe:	eb 15                	jmp    b215 <ecp_mod_p224+0x205>
    b200:	8b 1c 11             	mov    (%rcx,%rdx,1),%ebx
    b203:	48 89 1c 11          	mov    %rbx,(%rcx,%rdx,1)
    b207:	48 83 c6 01          	add    $0x1,%rsi
    b20b:	48 83 fe 0e          	cmp    $0xe,%rsi
    b20f:	0f 84 1e fe ff ff    	je     b033 <ecp_mod_p224+0x23>
    b215:	48 89 f2             	mov    %rsi,%rdx
    b218:	48 d1 ea             	shr    %rdx
    b21b:	48 c1 e2 03          	shl    $0x3,%rdx
    b21f:	40 f6 c6 01          	test   $0x1,%sil
    b223:	75 db                	jne    b200 <ecp_mod_p224+0x1f0>
    b225:	4c 21 04 11          	and    %r8,(%rcx,%rdx,1)
    b229:	eb dc                	jmp    b207 <ecp_mod_p224+0x1f7>
    b22b:	f3 0f 1e fa          	endbr64 
    b22f:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    b234:	e9 fa fd ff ff       	jmpq   b033 <ecp_mod_p224+0x23>
    b239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b240 <ecp_mod_p192>:
    b240:	f3 0f 1e fa          	endbr64 
    b244:	53                   	push   %rbx
    b245:	be 06 00 00 00       	mov    $0x6,%esi
    b24a:	48 89 fb             	mov    %rdi,%rbx
    b24d:	e8 7e b1 00 00       	callq  163d0 <mbedtls_mpi_grow>
    b252:	85 c0                	test   %eax,%eax
    b254:	74 0a                	je     b260 <ecp_mod_p192+0x20>
    b256:	5b                   	pop    %rbx
    b257:	c3                   	retq   
    b258:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b25f:	00 
    b260:	f3 0f 1e fa          	endbr64 
    b264:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    b268:	31 f6                	xor    %esi,%esi
    b26a:	48 8b 57 18          	mov    0x18(%rdi),%rdx
    b26e:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    b272:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
    b279:	00 
    b27a:	4c 8b 5f 20          	mov    0x20(%rdi),%r11
    b27e:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
    b285:	00 
    b286:	49 89 d0             	mov    %rdx,%r8
    b289:	4c 03 07             	add    (%rdi),%r8
    b28c:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    b293:	00 
    b294:	40 0f 92 c6          	setb   %sil
    b298:	49 01 c8             	add    %rcx,%r8
    b29b:	48 83 d6 00          	adc    $0x0,%rsi
    b29f:	45 31 d2             	xor    %r10d,%r10d
    b2a2:	48 03 77 08          	add    0x8(%rdi),%rsi
    b2a6:	41 0f 92 c2          	setb   %r10b
    b2aa:	48 01 f2             	add    %rsi,%rdx
    b2ad:	49 83 d2 00          	adc    $0x0,%r10
    b2b1:	4c 01 da             	add    %r11,%rdx
    b2b4:	49 83 d2 00          	adc    $0x0,%r10
    b2b8:	48 89 d6             	mov    %rdx,%rsi
    b2bb:	48 01 ce             	add    %rcx,%rsi
    b2be:	4c 89 d2             	mov    %r10,%rdx
    b2c1:	48 83 d2 00          	adc    $0x0,%rdx
    b2c5:	48 03 57 10          	add    0x10(%rdi),%rdx
    b2c9:	49 89 d1             	mov    %rdx,%r9
    b2cc:	0f 92 c2             	setb   %dl
    b2cf:	0f b6 d2             	movzbl %dl,%edx
    b2d2:	4d 01 d9             	add    %r11,%r9
    b2d5:	48 83 d2 00          	adc    $0x0,%rdx
    b2d9:	4c 01 c9             	add    %r9,%rcx
    b2dc:	48 83 d2 00          	adc    $0x0,%rdx
    b2e0:	45 31 c9             	xor    %r9d,%r9d
    b2e3:	49 01 d0             	add    %rdx,%r8
    b2e6:	41 0f 92 c1          	setb   %r9b
    b2ea:	4c 01 ce             	add    %r9,%rsi
    b2ed:	41 0f 92 c1          	setb   %r9b
    b2f1:	48 01 f2             	add    %rsi,%rdx
    b2f4:	45 0f b6 c9          	movzbl %r9b,%r9d
    b2f8:	4c 89 ce             	mov    %r9,%rsi
    b2fb:	48 83 d6 00          	adc    $0x0,%rsi
    b2ff:	48 01 f1             	add    %rsi,%rcx
    b302:	40 0f 92 c6          	setb   %sil
    b306:	40 0f b6 f6          	movzbl %sil,%esi
    b30a:	49 01 f0             	add    %rsi,%r8
    b30d:	4c 89 07             	mov    %r8,(%rdi)
    b310:	41 0f 92 c0          	setb   %r8b
    b314:	45 0f b6 c0          	movzbl %r8b,%r8d
    b318:	4c 01 c2             	add    %r8,%rdx
    b31b:	41 0f 92 c0          	setb   %r8b
    b31f:	48 01 f2             	add    %rsi,%rdx
    b322:	40 0f 92 c6          	setb   %sil
    b326:	45 0f b6 c0          	movzbl %r8b,%r8d
    b32a:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b32e:	40 0f b6 f6          	movzbl %sil,%esi
    b332:	4c 01 c1             	add    %r8,%rcx
    b335:	48 01 f1             	add    %rsi,%rcx
    b338:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    b33c:	5b                   	pop    %rbx
    b33d:	c3                   	retq   
    b33e:	66 90                	xchg   %ax,%ax

000000000000b340 <ecp_mod_p192k1>:
    b340:	f3 0f 1e fa          	endbr64 
    b344:	41 57                	push   %r15
    b346:	41 56                	push   %r14
    b348:	41 55                	push   %r13
    b34a:	41 54                	push   %r12
    b34c:	55                   	push   %rbp
    b34d:	53                   	push   %rbx
    b34e:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    b355:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    b359:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b360:	00 00 
    b362:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    b369:	00 
    b36a:	31 c0                	xor    %eax,%eax
    b36c:	49 83 fd 02          	cmp    $0x2,%r13
    b370:	0f 86 72 01 00 00    	jbe    b4e8 <ecp_mod_p192k1+0x1a8>
    b376:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b37a:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
    b37f:	49 8d 55 fd          	lea    -0x3(%r13),%rdx
    b383:	48 89 fd             	mov    %rdi,%rbp
    b386:	48 8d 05 db 6c 02 00 	lea    0x26cdb(%rip),%rax        # 32068 <Rp.5154>
    b38d:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    b394:	00 
    b395:	4c 8b 77 10          	mov    0x10(%rdi),%r14
    b399:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    b39e:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
    b3a5:	00 00 
    b3a7:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    b3ae:	00 
    b3af:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    b3b4:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    b3b9:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    b3be:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    b3c3:	48 83 fa 03          	cmp    $0x3,%rdx
    b3c7:	0f 87 43 01 00 00    	ja     b510 <ecp_mod_p192k1+0x1d0>
    b3cd:	48 c1 e2 03          	shl    $0x3,%rdx
    b3d1:	49 8d 76 18          	lea    0x18(%r14),%rsi
    b3d5:	b9 30 00 00 00       	mov    $0x30,%ecx
    b3da:	4c 89 e7             	mov    %r12,%rdi
    b3dd:	e8 0e 8f ff ff       	callq  42f0 <__memcpy_chk@plt>
    b3e2:	49 8d 45 fe          	lea    -0x2(%r13),%rax
    b3e6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b3eb:	49 83 fd 03          	cmp    $0x3,%r13
    b3ef:	74 21                	je     b412 <ecp_mod_p192k1+0xd2>
    b3f1:	b8 03 00 00 00       	mov    $0x3,%eax
    b3f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b3fd:	00 00 00 
    b400:	49 c7 04 c6 00 00 00 	movq   $0x0,(%r14,%rax,8)
    b407:	00 
    b408:	48 83 c0 01          	add    $0x1,%rax
    b40c:	48 3b 45 08          	cmp    0x8(%rbp),%rax
    b410:	72 ee                	jb     b400 <ecp_mod_p192k1+0xc0>
    b412:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    b417:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
    b41c:	4c 89 ea             	mov    %r13,%rdx
    b41f:	4c 89 f6             	mov    %r14,%rsi
    b422:	4c 89 f7             	mov    %r14,%rdi
    b425:	e8 66 bd 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    b42a:	85 c0                	test   %eax,%eax
    b42c:	0f 85 b6 00 00 00    	jne    b4e8 <ecp_mod_p192k1+0x1a8>
    b432:	4c 89 f2             	mov    %r14,%rdx
    b435:	48 89 ee             	mov    %rbp,%rsi
    b438:	48 89 ef             	mov    %rbp,%rdi
    b43b:	e8 70 b9 00 00       	callq  16db0 <mbedtls_mpi_add_abs>
    b440:	85 c0                	test   %eax,%eax
    b442:	0f 85 a0 00 00 00    	jne    b4e8 <ecp_mod_p192k1+0x1a8>
    b448:	4c 8b 45 08          	mov    0x8(%rbp),%r8
    b44c:	4d 8d 78 fd          	lea    -0x3(%r8),%r15
    b450:	49 83 ff 03          	cmp    $0x3,%r15
    b454:	0f 87 de 00 00 00    	ja     b538 <ecp_mod_p192k1+0x1f8>
    b45a:	4a 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%rdx
    b461:	00 
    b462:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
    b466:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b46a:	b9 30 00 00 00       	mov    $0x30,%ecx
    b46f:	4c 89 e7             	mov    %r12,%rdi
    b472:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    b477:	48 8d 73 18          	lea    0x18(%rbx),%rsi
    b47b:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    b480:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    b485:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    b48a:	e8 61 8e ff ff       	callq  42f0 <__memcpy_chk@plt>
    b48f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    b494:	4c 03 7c 24 38       	add    0x38(%rsp),%r15
    b499:	b8 03 00 00 00       	mov    $0x3,%eax
    b49e:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    b4a3:	49 83 f8 03          	cmp    $0x3,%r8
    b4a7:	76 19                	jbe    b4c2 <ecp_mod_p192k1+0x182>
    b4a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b4b0:	48 c7 04 c3 00 00 00 	movq   $0x0,(%rbx,%rax,8)
    b4b7:	00 
    b4b8:	48 83 c0 01          	add    $0x1,%rax
    b4bc:	48 3b 45 08          	cmp    0x8(%rbp),%rax
    b4c0:	72 ee                	jb     b4b0 <ecp_mod_p192k1+0x170>
    b4c2:	4c 89 ea             	mov    %r13,%rdx
    b4c5:	4c 89 f6             	mov    %r14,%rsi
    b4c8:	4c 89 f7             	mov    %r14,%rdi
    b4cb:	e8 c0 bc 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    b4d0:	85 c0                	test   %eax,%eax
    b4d2:	75 14                	jne    b4e8 <ecp_mod_p192k1+0x1a8>
    b4d4:	4c 89 f2             	mov    %r14,%rdx
    b4d7:	48 89 ee             	mov    %rbp,%rsi
    b4da:	48 89 ef             	mov    %rbp,%rdi
    b4dd:	e8 ce b8 00 00       	callq  16db0 <mbedtls_mpi_add_abs>
    b4e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b4e8:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    b4ef:	00 
    b4f0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    b4f7:	00 00 
    b4f9:	75 4d                	jne    b548 <ecp_mod_p192k1+0x208>
    b4fb:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    b502:	5b                   	pop    %rbx
    b503:	5d                   	pop    %rbp
    b504:	41 5c                	pop    %r12
    b506:	41 5d                	pop    %r13
    b508:	41 5e                	pop    %r14
    b50a:	41 5f                	pop    %r15
    b50c:	c3                   	retq   
    b50d:	0f 1f 00             	nopl   (%rax)
    b510:	f3 41 0f 6f 4e 18    	movdqu 0x18(%r14),%xmm1
    b516:	48 c7 44 24 18 04 00 	movq   $0x4,0x18(%rsp)
    b51d:	00 00 
    b51f:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
    b524:	49 8b 46 28          	mov    0x28(%r14),%rax
    b528:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    b52d:	e9 bf fe ff ff       	jmpq   b3f1 <ecp_mod_p192k1+0xb1>
    b532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b538:	ba 18 00 00 00       	mov    $0x18,%edx
    b53d:	41 bf 03 00 00 00    	mov    $0x3,%r15d
    b543:	e9 1a ff ff ff       	jmpq   b462 <ecp_mod_p192k1+0x122>
    b548:	e8 23 8d ff ff       	callq  4270 <__stack_chk_fail@plt>
    b54d:	0f 1f 00             	nopl   (%rax)

000000000000b550 <ecp_mod_p256k1>:
    b550:	f3 0f 1e fa          	endbr64 
    b554:	41 57                	push   %r15
    b556:	41 56                	push   %r14
    b558:	41 55                	push   %r13
    b55a:	41 54                	push   %r12
    b55c:	55                   	push   %rbp
    b55d:	53                   	push   %rbx
    b55e:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    b565:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    b569:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b570:	00 00 
    b572:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    b579:	00 
    b57a:	31 c0                	xor    %eax,%eax
    b57c:	49 83 fd 03          	cmp    $0x3,%r13
    b580:	0f 86 72 01 00 00    	jbe    b6f8 <ecp_mod_p256k1+0x1a8>
    b586:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b58a:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
    b58f:	49 8d 55 fc          	lea    -0x4(%r13),%rdx
    b593:	48 89 fd             	mov    %rdi,%rbp
    b596:	48 8d 05 db 6a 02 00 	lea    0x26adb(%rip),%rax        # 32078 <Rp.5162>
    b59d:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    b5a4:	00 
    b5a5:	4c 8b 77 10          	mov    0x10(%rdi),%r14
    b5a9:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    b5ae:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
    b5b5:	00 00 
    b5b7:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    b5be:	00 
    b5bf:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    b5c4:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    b5c9:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    b5ce:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    b5d3:	48 83 fa 04          	cmp    $0x4,%rdx
    b5d7:	0f 87 43 01 00 00    	ja     b720 <ecp_mod_p256k1+0x1d0>
    b5dd:	48 c1 e2 03          	shl    $0x3,%rdx
    b5e1:	49 8d 76 20          	lea    0x20(%r14),%rsi
    b5e5:	b9 30 00 00 00       	mov    $0x30,%ecx
    b5ea:	4c 89 e7             	mov    %r12,%rdi
    b5ed:	e8 fe 8c ff ff       	callq  42f0 <__memcpy_chk@plt>
    b5f2:	49 8d 45 fd          	lea    -0x3(%r13),%rax
    b5f6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b5fb:	49 83 fd 04          	cmp    $0x4,%r13
    b5ff:	74 21                	je     b622 <ecp_mod_p256k1+0xd2>
    b601:	b8 04 00 00 00       	mov    $0x4,%eax
    b606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b60d:	00 00 00 
    b610:	49 c7 04 c6 00 00 00 	movq   $0x0,(%r14,%rax,8)
    b617:	00 
    b618:	48 83 c0 01          	add    $0x1,%rax
    b61c:	48 3b 45 08          	cmp    0x8(%rbp),%rax
    b620:	72 ee                	jb     b610 <ecp_mod_p256k1+0xc0>
    b622:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    b627:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
    b62c:	4c 89 ea             	mov    %r13,%rdx
    b62f:	4c 89 f6             	mov    %r14,%rsi
    b632:	4c 89 f7             	mov    %r14,%rdi
    b635:	e8 56 bb 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    b63a:	85 c0                	test   %eax,%eax
    b63c:	0f 85 b6 00 00 00    	jne    b6f8 <ecp_mod_p256k1+0x1a8>
    b642:	4c 89 f2             	mov    %r14,%rdx
    b645:	48 89 ee             	mov    %rbp,%rsi
    b648:	48 89 ef             	mov    %rbp,%rdi
    b64b:	e8 60 b7 00 00       	callq  16db0 <mbedtls_mpi_add_abs>
    b650:	85 c0                	test   %eax,%eax
    b652:	0f 85 a0 00 00 00    	jne    b6f8 <ecp_mod_p256k1+0x1a8>
    b658:	4c 8b 45 08          	mov    0x8(%rbp),%r8
    b65c:	4d 8d 78 fc          	lea    -0x4(%r8),%r15
    b660:	49 83 ff 04          	cmp    $0x4,%r15
    b664:	0f 87 de 00 00 00    	ja     b748 <ecp_mod_p256k1+0x1f8>
    b66a:	4a 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%rdx
    b671:	00 
    b672:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
    b676:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b67a:	b9 30 00 00 00       	mov    $0x30,%ecx
    b67f:	4c 89 e7             	mov    %r12,%rdi
    b682:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    b687:	48 8d 73 20          	lea    0x20(%rbx),%rsi
    b68b:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    b690:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    b695:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    b69a:	e8 51 8c ff ff       	callq  42f0 <__memcpy_chk@plt>
    b69f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    b6a4:	4c 03 7c 24 38       	add    0x38(%rsp),%r15
    b6a9:	b8 04 00 00 00       	mov    $0x4,%eax
    b6ae:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    b6b3:	49 83 f8 04          	cmp    $0x4,%r8
    b6b7:	76 19                	jbe    b6d2 <ecp_mod_p256k1+0x182>
    b6b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b6c0:	48 c7 04 c3 00 00 00 	movq   $0x0,(%rbx,%rax,8)
    b6c7:	00 
    b6c8:	48 83 c0 01          	add    $0x1,%rax
    b6cc:	48 3b 45 08          	cmp    0x8(%rbp),%rax
    b6d0:	72 ee                	jb     b6c0 <ecp_mod_p256k1+0x170>
    b6d2:	4c 89 ea             	mov    %r13,%rdx
    b6d5:	4c 89 f6             	mov    %r14,%rsi
    b6d8:	4c 89 f7             	mov    %r14,%rdi
    b6db:	e8 b0 ba 00 00       	callq  17190 <mbedtls_mpi_mul_mpi>
    b6e0:	85 c0                	test   %eax,%eax
    b6e2:	75 14                	jne    b6f8 <ecp_mod_p256k1+0x1a8>
    b6e4:	4c 89 f2             	mov    %r14,%rdx
    b6e7:	48 89 ee             	mov    %rbp,%rsi
    b6ea:	48 89 ef             	mov    %rbp,%rdi
    b6ed:	e8 be b6 00 00       	callq  16db0 <mbedtls_mpi_add_abs>
    b6f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b6f8:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    b6ff:	00 
    b700:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    b707:	00 00 
    b709:	75 4d                	jne    b758 <ecp_mod_p256k1+0x208>
    b70b:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    b712:	5b                   	pop    %rbx
    b713:	5d                   	pop    %rbp
    b714:	41 5c                	pop    %r12
    b716:	41 5d                	pop    %r13
    b718:	41 5e                	pop    %r14
    b71a:	41 5f                	pop    %r15
    b71c:	c3                   	retq   
    b71d:	0f 1f 00             	nopl   (%rax)
    b720:	f3 41 0f 6f 4e 20    	movdqu 0x20(%r14),%xmm1
    b726:	48 c7 44 24 18 05 00 	movq   $0x5,0x18(%rsp)
    b72d:	00 00 
    b72f:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
    b734:	f3 41 0f 6f 56 30    	movdqu 0x30(%r14),%xmm2
    b73a:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
    b73f:	e9 bd fe ff ff       	jmpq   b601 <ecp_mod_p256k1+0xb1>
    b744:	0f 1f 40 00          	nopl   0x0(%rax)
    b748:	ba 20 00 00 00       	mov    $0x20,%edx
    b74d:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    b753:	e9 1a ff ff ff       	jmpq   b672 <ecp_mod_p256k1+0x122>
    b758:	e8 13 8b ff ff       	callq  4270 <__stack_chk_fail@plt>
    b75d:	0f 1f 00             	nopl   (%rax)

000000000000b760 <mbedtls_ecp_group_load>:
    b760:	f3 0f 1e fa          	endbr64 
    b764:	55                   	push   %rbp
    b765:	48 89 fd             	mov    %rdi,%rbp
    b768:	53                   	push   %rbx
    b769:	89 f3                	mov    %esi,%ebx
    b76b:	48 83 ec 18          	sub    $0x18,%rsp
    b76f:	e8 fc b7 ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    b774:	48 89 ef             	mov    %rbp,%rdi
    b777:	e8 f4 b6 ff ff       	callq  6e70 <mbedtls_ecp_group_init>
    b77c:	89 5d 00             	mov    %ebx,0x0(%rbp)
    b77f:	83 fb 0d             	cmp    $0xd,%ebx
    b782:	0f 87 2b 0d 00 00    	ja     c4b3 <mbedtls_ecp_group_load+0xd53>
    b788:	48 8d 15 d1 2d 01 00 	lea    0x12dd1(%rip),%rdx        # 1e560 <x25519_bad_point_1+0x20>
    b78f:	48 63 04 9a          	movslq (%rdx,%rbx,4),%rax
    b793:	48 01 d0             	add    %rdx,%rax
    b796:	3e ff e0             	notrack jmpq *%rax
    b799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b7a0:	48 8d 05 49 ea ff ff 	lea    -0x15b7(%rip),%rax        # a1f0 <ecp_mod_p448>
    b7a7:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    b7ab:	be aa 98 00 00       	mov    $0x98aa,%esi
    b7b0:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    b7b7:	e8 b4 af 00 00       	callq  16770 <mbedtls_mpi_lset>
    b7bc:	85 c0                	test   %eax,%eax
    b7be:	0f 84 04 0d 00 00    	je     c4c8 <mbedtls_ecp_group_load+0xd68>
    b7c4:	48 89 ef             	mov    %rbp,%rdi
    b7c7:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    b7cb:	e8 a0 b7 ff ff       	callq  6f70 <mbedtls_ecp_group_free>
    b7d0:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    b7d4:	e9 0b 01 00 00       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    b7d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b7e0:	48 8d 05 59 fa ff ff 	lea    -0x5a7(%rip),%rax        # b240 <ecp_mod_p192>
    b7e7:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    b7ee:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    b7f2:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    b7f9:	48 8d 05 e0 9c 01 00 	lea    0x19ce0(%rip),%rax        # 254e0 <secp192r1_p>
    b800:	48 89 45 18          	mov    %rax,0x18(%rbp)
    b804:	48 8d 05 b5 9c 01 00 	lea    0x19cb5(%rip),%rax        # 254c0 <secp192r1_b>
    b80b:	48 89 45 48          	mov    %rax,0x48(%rbp)
    b80f:	48 8d 05 4a 9c 01 00 	lea    0x19c4a(%rip),%rax        # 25460 <secp192r1_n>
    b816:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    b81d:	48 8d 05 7c 9c 01 00 	lea    0x19c7c(%rip),%rax        # 254a0 <secp192r1_gx>
    b824:	48 89 45 60          	mov    %rax,0x60(%rbp)
    b828:	48 8d 05 51 9c 01 00 	lea    0x19c51(%rip),%rax        # 25480 <secp192r1_gy>
    b82f:	48 89 45 78          	mov    %rax,0x78(%rbp)
    b833:	48 8d 05 46 68 02 00 	lea    0x26846(%rip),%rax        # 32080 <mpi_one>
    b83a:	48 c7 45 10 03 00 00 	movq   $0x3,0x10(%rbp)
    b841:	00 
    b842:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    b849:	48 c7 45 40 03 00 00 	movq   $0x3,0x40(%rbp)
    b850:	00 
    b851:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    b858:	00 00 00 
    b85b:	48 c7 85 a0 00 00 00 	movq   $0x3,0xa0(%rbp)
    b862:	03 00 00 00 
    b866:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    b86d:	48 c7 45 58 03 00 00 	movq   $0x3,0x58(%rbp)
    b874:	00 
    b875:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    b87c:	48 c7 45 70 03 00 00 	movq   $0x3,0x70(%rbp)
    b883:	00 
    b884:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    b88b:	00 00 00 
    b88e:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    b895:	01 00 00 00 
    b899:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    b8a0:	e8 5b b0 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    b8a5:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    b8ac:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    b8b3:	e8 48 b0 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    b8b8:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    b8bf:	00 00 00 
    b8c2:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    b8c9:	00 00 00 00 
    b8cd:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    b8d4:	48 8d 05 25 5f 02 00 	lea    0x25f25(%rip),%rax        # 31800 <secp192r1_T>
    b8db:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    b8e2:	31 c0                	xor    %eax,%eax
    b8e4:	48 83 c4 18          	add    $0x18,%rsp
    b8e8:	5b                   	pop    %rbx
    b8e9:	5d                   	pop    %rbp
    b8ea:	c3                   	retq   
    b8eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b8f0:	48 8d 05 19 f7 ff ff 	lea    -0x8e7(%rip),%rax        # b010 <ecp_mod_p224>
    b8f7:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    b8fe:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    b902:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    b909:	48 8d 05 30 97 01 00 	lea    0x19730(%rip),%rax        # 25040 <secp224r1_p>
    b910:	48 89 45 18          	mov    %rax,0x18(%rbp)
    b914:	48 8d 05 05 97 01 00 	lea    0x19705(%rip),%rax        # 25020 <secp224r1_b>
    b91b:	48 89 45 48          	mov    %rax,0x48(%rbp)
    b91f:	48 8d 05 9a 96 01 00 	lea    0x1969a(%rip),%rax        # 24fc0 <secp224r1_n>
    b926:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    b92d:	48 8d 05 cc 96 01 00 	lea    0x196cc(%rip),%rax        # 25000 <secp224r1_gx>
    b934:	48 89 45 60          	mov    %rax,0x60(%rbp)
    b938:	48 8d 05 a1 96 01 00 	lea    0x196a1(%rip),%rax        # 24fe0 <secp224r1_gy>
    b93f:	48 89 45 78          	mov    %rax,0x78(%rbp)
    b943:	48 8d 05 36 67 02 00 	lea    0x26736(%rip),%rax        # 32080 <mpi_one>
    b94a:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
    b951:	00 
    b952:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    b959:	48 c7 45 40 04 00 00 	movq   $0x4,0x40(%rbp)
    b960:	00 
    b961:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    b968:	00 00 00 
    b96b:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
    b972:	04 00 00 00 
    b976:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    b97d:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
    b984:	00 
    b985:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    b98c:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
    b993:	00 
    b994:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    b99b:	00 00 00 
    b99e:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    b9a5:	01 00 00 00 
    b9a9:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    b9b0:	e8 4b af 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    b9b5:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    b9bc:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    b9c3:	e8 38 af 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    b9c8:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    b9cf:	00 00 00 
    b9d2:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    b9d9:	48 8d 05 a0 59 02 00 	lea    0x259a0(%rip),%rax        # 31380 <secp224r1_T>
    b9e0:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    b9e7:	31 c0                	xor    %eax,%eax
    b9e9:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    b9f0:	00 00 00 00 
    b9f4:	e9 eb fe ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    b9f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ba00:	48 8d 05 69 f2 ff ff 	lea    -0xd97(%rip),%rax        # ac70 <ecp_mod_p256>
    ba07:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    ba0e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    ba12:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    ba19:	48 8d 05 80 91 01 00 	lea    0x19180(%rip),%rax        # 24ba0 <secp256r1_p>
    ba20:	48 89 45 18          	mov    %rax,0x18(%rbp)
    ba24:	48 8d 05 55 91 01 00 	lea    0x19155(%rip),%rax        # 24b80 <secp256r1_b>
    ba2b:	48 89 45 48          	mov    %rax,0x48(%rbp)
    ba2f:	48 8d 05 ea 90 01 00 	lea    0x190ea(%rip),%rax        # 24b20 <secp256r1_n>
    ba36:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    ba3d:	48 8d 05 1c 91 01 00 	lea    0x1911c(%rip),%rax        # 24b60 <secp256r1_gx>
    ba44:	48 89 45 60          	mov    %rax,0x60(%rbp)
    ba48:	48 8d 05 f1 90 01 00 	lea    0x190f1(%rip),%rax        # 24b40 <secp256r1_gy>
    ba4f:	48 89 45 78          	mov    %rax,0x78(%rbp)
    ba53:	48 8d 05 26 66 02 00 	lea    0x26626(%rip),%rax        # 32080 <mpi_one>
    ba5a:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
    ba61:	00 
    ba62:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    ba69:	48 c7 45 40 04 00 00 	movq   $0x4,0x40(%rbp)
    ba70:	00 
    ba71:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    ba78:	00 00 00 
    ba7b:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
    ba82:	04 00 00 00 
    ba86:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    ba8d:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
    ba94:	00 
    ba95:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    ba9c:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
    baa3:	00 
    baa4:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    baab:	00 00 00 
    baae:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    bab5:	01 00 00 00 
    bab9:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    bac0:	e8 3b ae 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    bac5:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    bacc:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    bad3:	e8 28 ae 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    bad8:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    badf:	00 00 00 
    bae2:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    bae9:	48 8d 05 10 54 02 00 	lea    0x25410(%rip),%rax        # 30f00 <secp256r1_T>
    baf0:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    baf7:	31 c0                	xor    %eax,%eax
    baf9:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    bb00:	00 00 00 00 
    bb04:	e9 db fd ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    bb09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bb10:	48 8d 05 f9 eb ff ff 	lea    -0x1407(%rip),%rax        # a710 <ecp_mod_p384>
    bb17:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    bb1e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    bb22:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    bb29:	48 8d 05 b0 8b 01 00 	lea    0x18bb0(%rip),%rax        # 246e0 <secp384r1_p>
    bb30:	48 89 45 18          	mov    %rax,0x18(%rbp)
    bb34:	48 8d 05 65 8b 01 00 	lea    0x18b65(%rip),%rax        # 246a0 <secp384r1_b>
    bb3b:	48 89 45 48          	mov    %rax,0x48(%rbp)
    bb3f:	48 8d 05 9a 8a 01 00 	lea    0x18a9a(%rip),%rax        # 245e0 <secp384r1_n>
    bb46:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    bb4d:	48 8d 05 0c 8b 01 00 	lea    0x18b0c(%rip),%rax        # 24660 <secp384r1_gx>
    bb54:	48 89 45 60          	mov    %rax,0x60(%rbp)
    bb58:	48 8d 05 c1 8a 01 00 	lea    0x18ac1(%rip),%rax        # 24620 <secp384r1_gy>
    bb5f:	48 89 45 78          	mov    %rax,0x78(%rbp)
    bb63:	48 8d 05 16 65 02 00 	lea    0x26516(%rip),%rax        # 32080 <mpi_one>
    bb6a:	48 c7 45 10 06 00 00 	movq   $0x6,0x10(%rbp)
    bb71:	00 
    bb72:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    bb79:	48 c7 45 40 06 00 00 	movq   $0x6,0x40(%rbp)
    bb80:	00 
    bb81:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    bb88:	00 00 00 
    bb8b:	48 c7 85 a0 00 00 00 	movq   $0x6,0xa0(%rbp)
    bb92:	06 00 00 00 
    bb96:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    bb9d:	48 c7 45 58 06 00 00 	movq   $0x6,0x58(%rbp)
    bba4:	00 
    bba5:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    bbac:	48 c7 45 70 06 00 00 	movq   $0x6,0x70(%rbp)
    bbb3:	00 
    bbb4:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    bbbb:	00 00 00 
    bbbe:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    bbc5:	01 00 00 00 
    bbc9:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    bbd0:	e8 2b ad 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    bbd5:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    bbdc:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    bbe3:	e8 18 ad 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    bbe8:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    bbef:	00 00 00 
    bbf2:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    bbf9:	48 8d 05 00 4a 02 00 	lea    0x24a00(%rip),%rax        # 30600 <secp384r1_T>
    bc00:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    bc07:	31 c0                	xor    %eax,%eax
    bc09:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    bc10:	00 00 00 00 
    bc14:	e9 cb fc ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    bc19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bc20:	48 8d 05 09 ea ff ff 	lea    -0x15f7(%rip),%rax        # a630 <ecp_mod_p521>
    bc27:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    bc2e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    bc32:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    bc39:	48 8d 05 40 79 01 00 	lea    0x17940(%rip),%rax        # 23580 <secp521r1_p>
    bc40:	48 89 45 18          	mov    %rax,0x18(%rbp)
    bc44:	48 8d 05 d5 78 01 00 	lea    0x178d5(%rip),%rax        # 23520 <secp521r1_b>
    bc4b:	48 89 45 48          	mov    %rax,0x48(%rbp)
    bc4f:	48 8d 05 aa 77 01 00 	lea    0x177aa(%rip),%rax        # 23400 <secp521r1_n>
    bc56:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    bc5d:	48 8d 05 5c 78 01 00 	lea    0x1785c(%rip),%rax        # 234c0 <secp521r1_gx>
    bc64:	48 89 45 60          	mov    %rax,0x60(%rbp)
    bc68:	48 8d 05 f1 77 01 00 	lea    0x177f1(%rip),%rax        # 23460 <secp521r1_gy>
    bc6f:	48 89 45 78          	mov    %rax,0x78(%rbp)
    bc73:	48 8d 05 06 64 02 00 	lea    0x26406(%rip),%rax        # 32080 <mpi_one>
    bc7a:	48 c7 45 10 09 00 00 	movq   $0x9,0x10(%rbp)
    bc81:	00 
    bc82:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    bc89:	48 c7 45 40 09 00 00 	movq   $0x9,0x40(%rbp)
    bc90:	00 
    bc91:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    bc98:	00 00 00 
    bc9b:	48 c7 85 a0 00 00 00 	movq   $0x9,0xa0(%rbp)
    bca2:	09 00 00 00 
    bca6:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    bcad:	48 c7 45 58 09 00 00 	movq   $0x9,0x58(%rbp)
    bcb4:	00 
    bcb5:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    bcbc:	48 c7 45 70 09 00 00 	movq   $0x9,0x70(%rbp)
    bcc3:	00 
    bcc4:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    bccb:	00 00 00 
    bcce:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    bcd5:	01 00 00 00 
    bcd9:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    bce0:	e8 1b ac 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    bce5:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    bcec:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    bcf3:	e8 08 ac 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    bcf8:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    bcff:	00 00 00 
    bd02:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    bd09:	48 8d 05 f0 3f 02 00 	lea    0x23ff0(%rip),%rax        # 2fd00 <secp521r1_T>
    bd10:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    bd17:	31 c0                	xor    %eax,%eax
    bd19:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    bd20:	00 00 00 00 
    bd24:	e9 bb fb ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    bd29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bd30:	48 8d 05 c9 50 01 00 	lea    0x150c9(%rip),%rax        # 20e00 <brainpoolP256r1_p>
    bd37:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    bd3e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    bd42:	48 89 45 18          	mov    %rax,0x18(%rbp)
    bd46:	48 8d 05 93 50 01 00 	lea    0x15093(%rip),%rax        # 20de0 <brainpoolP256r1_a>
    bd4d:	48 89 45 30          	mov    %rax,0x30(%rbp)
    bd51:	48 8d 05 68 50 01 00 	lea    0x15068(%rip),%rax        # 20dc0 <brainpoolP256r1_b>
    bd58:	48 89 45 48          	mov    %rax,0x48(%rbp)
    bd5c:	48 8d 05 fd 4f 01 00 	lea    0x14ffd(%rip),%rax        # 20d60 <brainpoolP256r1_n>
    bd63:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    bd6a:	48 8d 05 2f 50 01 00 	lea    0x1502f(%rip),%rax        # 20da0 <brainpoolP256r1_gx>
    bd71:	48 89 45 60          	mov    %rax,0x60(%rbp)
    bd75:	48 8d 05 04 50 01 00 	lea    0x15004(%rip),%rax        # 20d80 <brainpoolP256r1_gy>
    bd7c:	48 89 45 78          	mov    %rax,0x78(%rbp)
    bd80:	48 8d 05 f9 62 02 00 	lea    0x262f9(%rip),%rax        # 32080 <mpi_one>
    bd87:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
    bd8e:	00 
    bd8f:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
    bd96:	48 c7 45 28 04 00 00 	movq   $0x4,0x28(%rbp)
    bd9d:	00 
    bd9e:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    bda5:	48 c7 45 40 04 00 00 	movq   $0x4,0x40(%rbp)
    bdac:	00 
    bdad:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    bdb4:	00 00 00 
    bdb7:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
    bdbe:	04 00 00 00 
    bdc2:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    bdc9:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
    bdd0:	00 
    bdd1:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    bdd8:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
    bddf:	00 
    bde0:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    bde7:	00 00 00 
    bdea:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    bdf1:	01 00 00 00 
    bdf5:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    bdfc:	e8 ff aa 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    be01:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    be08:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    be0f:	e8 ec aa 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    be14:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    be1b:	00 00 00 
    be1e:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    be25:	48 8d 05 d4 2c 02 00 	lea    0x22cd4(%rip),%rax        # 2eb00 <brainpoolP256r1_T>
    be2c:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    be33:	31 c0                	xor    %eax,%eax
    be35:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    be3c:	00 00 00 00 
    be40:	e9 9f fa ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    be45:	0f 1f 00             	nopl   (%rax)
    be48:	48 8d 05 d1 4a 01 00 	lea    0x14ad1(%rip),%rax        # 20920 <brainpoolP384r1_p>
    be4f:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    be56:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    be5a:	48 89 45 18          	mov    %rax,0x18(%rbp)
    be5e:	48 8d 05 7b 4a 01 00 	lea    0x14a7b(%rip),%rax        # 208e0 <brainpoolP384r1_a>
    be65:	48 89 45 30          	mov    %rax,0x30(%rbp)
    be69:	48 8d 05 30 4a 01 00 	lea    0x14a30(%rip),%rax        # 208a0 <brainpoolP384r1_b>
    be70:	48 89 45 48          	mov    %rax,0x48(%rbp)
    be74:	48 8d 05 65 49 01 00 	lea    0x14965(%rip),%rax        # 207e0 <brainpoolP384r1_n>
    be7b:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    be82:	48 8d 05 d7 49 01 00 	lea    0x149d7(%rip),%rax        # 20860 <brainpoolP384r1_gx>
    be89:	48 89 45 60          	mov    %rax,0x60(%rbp)
    be8d:	48 8d 05 8c 49 01 00 	lea    0x1498c(%rip),%rax        # 20820 <brainpoolP384r1_gy>
    be94:	48 89 45 78          	mov    %rax,0x78(%rbp)
    be98:	48 8d 05 e1 61 02 00 	lea    0x261e1(%rip),%rax        # 32080 <mpi_one>
    be9f:	48 c7 45 10 06 00 00 	movq   $0x6,0x10(%rbp)
    bea6:	00 
    bea7:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
    beae:	48 c7 45 28 06 00 00 	movq   $0x6,0x28(%rbp)
    beb5:	00 
    beb6:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    bebd:	48 c7 45 40 06 00 00 	movq   $0x6,0x40(%rbp)
    bec4:	00 
    bec5:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    becc:	00 00 00 
    becf:	48 c7 85 a0 00 00 00 	movq   $0x6,0xa0(%rbp)
    bed6:	06 00 00 00 
    beda:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    bee1:	48 c7 45 58 06 00 00 	movq   $0x6,0x58(%rbp)
    bee8:	00 
    bee9:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    bef0:	48 c7 45 70 06 00 00 	movq   $0x6,0x70(%rbp)
    bef7:	00 
    bef8:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    beff:	00 00 00 
    bf02:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    bf09:	01 00 00 00 
    bf0d:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    bf14:	e8 e7 a9 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    bf19:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    bf20:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    bf27:	e8 d4 a9 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    bf2c:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    bf33:	00 00 00 
    bf36:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    bf3d:	48 8d 05 bc 22 02 00 	lea    0x222bc(%rip),%rax        # 2e200 <brainpoolP384r1_T>
    bf44:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    bf4b:	31 c0                	xor    %eax,%eax
    bf4d:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    bf54:	00 00 00 00 
    bf58:	e9 87 f9 ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    bf5d:	0f 1f 00             	nopl   (%rax)
    bf60:	48 8d 05 39 38 01 00 	lea    0x13839(%rip),%rax        # 1f7a0 <brainpoolP512r1_p>
    bf67:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    bf6e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    bf72:	48 89 45 18          	mov    %rax,0x18(%rbp)
    bf76:	48 8d 05 e3 37 01 00 	lea    0x137e3(%rip),%rax        # 1f760 <brainpoolP512r1_a>
    bf7d:	48 89 45 30          	mov    %rax,0x30(%rbp)
    bf81:	48 8d 05 98 37 01 00 	lea    0x13798(%rip),%rax        # 1f720 <brainpoolP512r1_b>
    bf88:	48 89 45 48          	mov    %rax,0x48(%rbp)
    bf8c:	48 8d 05 cd 36 01 00 	lea    0x136cd(%rip),%rax        # 1f660 <brainpoolP512r1_n>
    bf93:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    bf9a:	48 8d 05 3f 37 01 00 	lea    0x1373f(%rip),%rax        # 1f6e0 <brainpoolP512r1_gx>
    bfa1:	48 89 45 60          	mov    %rax,0x60(%rbp)
    bfa5:	48 8d 05 f4 36 01 00 	lea    0x136f4(%rip),%rax        # 1f6a0 <brainpoolP512r1_gy>
    bfac:	48 89 45 78          	mov    %rax,0x78(%rbp)
    bfb0:	48 8d 05 c9 60 02 00 	lea    0x260c9(%rip),%rax        # 32080 <mpi_one>
    bfb7:	48 c7 45 10 08 00 00 	movq   $0x8,0x10(%rbp)
    bfbe:	00 
    bfbf:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
    bfc6:	48 c7 45 28 08 00 00 	movq   $0x8,0x28(%rbp)
    bfcd:	00 
    bfce:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    bfd5:	48 c7 45 40 08 00 00 	movq   $0x8,0x40(%rbp)
    bfdc:	00 
    bfdd:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    bfe4:	00 00 00 
    bfe7:	48 c7 85 a0 00 00 00 	movq   $0x8,0xa0(%rbp)
    bfee:	08 00 00 00 
    bff2:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    bff9:	48 c7 45 58 08 00 00 	movq   $0x8,0x58(%rbp)
    c000:	00 
    c001:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    c008:	48 c7 45 70 08 00 00 	movq   $0x8,0x70(%rbp)
    c00f:	00 
    c010:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    c017:	00 00 00 
    c01a:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    c021:	01 00 00 00 
    c025:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    c02c:	e8 cf a8 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c031:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    c038:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    c03f:	e8 bc a8 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c044:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    c04b:	00 00 00 
    c04e:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    c055:	48 8d 05 a4 18 02 00 	lea    0x218a4(%rip),%rax        # 2d900 <brainpoolP512r1_T>
    c05c:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    c063:	31 c0                	xor    %eax,%eax
    c065:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    c06c:	00 00 00 00 
    c070:	e9 6f f8 ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    c075:	0f 1f 00             	nopl   (%rax)
    c078:	48 8d 05 81 e0 ff ff 	lea    -0x1f7f(%rip),%rax        # a100 <ecp_mod_p255>
    c07f:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    c083:	be 42 db 01 00       	mov    $0x1db42,%esi
    c088:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    c08f:	e8 dc a6 00 00       	callq  16770 <mbedtls_mpi_lset>
    c094:	85 c0                	test   %eax,%eax
    c096:	0f 85 28 f7 ff ff    	jne    b7c4 <mbedtls_ecp_group_load+0x64>
    c09c:	48 8d 05 9d 25 01 00 	lea    0x1259d(%rip),%rax        # 1e640 <curve25519_p>
    c0a3:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    c0aa:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    c0ae:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
    c0b5:	00 
    c0b6:	48 89 45 18          	mov    %rax,0x18(%rbp)
    c0ba:	e8 41 a8 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c0bf:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    c0c3:	be 09 00 00 00       	mov    $0x9,%esi
    c0c8:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    c0cf:	00 00 00 
    c0d2:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    c0d9:	48 8d 05 40 25 01 00 	lea    0x12540(%rip),%rax        # 1e620 <curve25519_n>
    c0e0:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
    c0e7:	04 00 00 00 
    c0eb:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    c0f2:	e8 79 a6 00 00       	callq  16770 <mbedtls_mpi_lset>
    c0f7:	85 c0                	test   %eax,%eax
    c0f9:	0f 85 c5 f6 ff ff    	jne    b7c4 <mbedtls_ecp_group_load+0x64>
    c0ff:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
    c106:	be 01 00 00 00       	mov    $0x1,%esi
    c10b:	e8 60 a6 00 00       	callq  16770 <mbedtls_mpi_lset>
    c110:	85 c0                	test   %eax,%eax
    c112:	0f 85 ac f6 ff ff    	jne    b7c4 <mbedtls_ecp_group_load+0x64>
    c118:	48 8d 7d 68          	lea    0x68(%rbp),%rdi
    c11c:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    c120:	e8 4b a2 00 00       	callq  16370 <mbedtls_mpi_free>
    c125:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    c129:	48 c7 85 b8 00 00 00 	movq   $0xfe,0xb8(%rbp)
    c130:	fe 00 00 00 
    c134:	e9 ab f7 ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    c139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c140:	48 8d 05 f9 f1 ff ff 	lea    -0xe07(%rip),%rax        # b340 <ecp_mod_p192k1>
    c147:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    c14e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    c152:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    c159:	48 8d 05 70 5a 01 00 	lea    0x15a70(%rip),%rax        # 21bd0 <secp192k1_p>
    c160:	48 89 45 18          	mov    %rax,0x18(%rbp)
    c164:	48 8d 05 55 5a 01 00 	lea    0x15a55(%rip),%rax        # 21bc0 <secp192k1_a>
    c16b:	48 89 45 30          	mov    %rax,0x30(%rbp)
    c16f:	48 8d 05 42 5a 01 00 	lea    0x15a42(%rip),%rax        # 21bb8 <secp192k1_b>
    c176:	48 89 45 48          	mov    %rax,0x48(%rbp)
    c17a:	48 8d 05 df 59 01 00 	lea    0x159df(%rip),%rax        # 21b60 <secp192k1_n>
    c181:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    c188:	48 8d 05 11 5a 01 00 	lea    0x15a11(%rip),%rax        # 21ba0 <secp192k1_gx>
    c18f:	48 89 45 60          	mov    %rax,0x60(%rbp)
    c193:	48 8d 05 e6 59 01 00 	lea    0x159e6(%rip),%rax        # 21b80 <secp192k1_gy>
    c19a:	48 89 45 78          	mov    %rax,0x78(%rbp)
    c19e:	48 8d 05 db 5e 02 00 	lea    0x25edb(%rip),%rax        # 32080 <mpi_one>
    c1a5:	48 c7 45 10 03 00 00 	movq   $0x3,0x10(%rbp)
    c1ac:	00 
    c1ad:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
    c1b4:	48 c7 45 28 01 00 00 	movq   $0x1,0x28(%rbp)
    c1bb:	00 
    c1bc:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    c1c3:	48 c7 45 40 01 00 00 	movq   $0x1,0x40(%rbp)
    c1ca:	00 
    c1cb:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    c1d2:	00 00 00 
    c1d5:	48 c7 85 a0 00 00 00 	movq   $0x3,0xa0(%rbp)
    c1dc:	03 00 00 00 
    c1e0:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    c1e7:	48 c7 45 58 03 00 00 	movq   $0x3,0x58(%rbp)
    c1ee:	00 
    c1ef:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    c1f6:	48 c7 45 70 03 00 00 	movq   $0x3,0x70(%rbp)
    c1fd:	00 
    c1fe:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    c205:	00 00 00 
    c208:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    c20f:	01 00 00 00 
    c213:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    c21a:	e8 e1 a6 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c21f:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    c226:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    c22d:	e8 ce a6 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c232:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    c239:	00 00 00 
    c23c:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    c243:	48 8d 05 36 36 02 00 	lea    0x23636(%rip),%rax        # 2f880 <secp192k1_T>
    c24a:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    c251:	31 c0                	xor    %eax,%eax
    c253:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    c25a:	00 00 00 00 
    c25e:	e9 81 f6 ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    c263:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c268:	48 8d 05 81 e1 ff ff 	lea    -0x1e7f(%rip),%rax        # a3f0 <ecp_mod_p224k1>
    c26f:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    c276:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    c27a:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    c281:	48 8d 05 b8 54 01 00 	lea    0x154b8(%rip),%rax        # 21740 <secp224k1_p>
    c288:	48 89 45 18          	mov    %rax,0x18(%rbp)
    c28c:	48 8d 05 95 54 01 00 	lea    0x15495(%rip),%rax        # 21728 <secp224k1_a>
    c293:	48 89 45 30          	mov    %rax,0x30(%rbp)
    c297:	48 8d 05 82 54 01 00 	lea    0x15482(%rip),%rax        # 21720 <secp224k1_b>
    c29e:	48 89 45 48          	mov    %rax,0x48(%rbp)
    c2a2:	48 8d 05 17 54 01 00 	lea    0x15417(%rip),%rax        # 216c0 <secp224k1_n>
    c2a9:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    c2b0:	48 8d 05 49 54 01 00 	lea    0x15449(%rip),%rax        # 21700 <secp224k1_gx>
    c2b7:	48 89 45 60          	mov    %rax,0x60(%rbp)
    c2bb:	48 8d 05 1e 54 01 00 	lea    0x1541e(%rip),%rax        # 216e0 <secp224k1_gy>
    c2c2:	48 89 45 78          	mov    %rax,0x78(%rbp)
    c2c6:	48 8d 05 b3 5d 02 00 	lea    0x25db3(%rip),%rax        # 32080 <mpi_one>
    c2cd:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
    c2d4:	00 
    c2d5:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
    c2dc:	48 c7 45 28 01 00 00 	movq   $0x1,0x28(%rbp)
    c2e3:	00 
    c2e4:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    c2eb:	48 c7 45 40 01 00 00 	movq   $0x1,0x40(%rbp)
    c2f2:	00 
    c2f3:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    c2fa:	00 00 00 
    c2fd:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
    c304:	04 00 00 00 
    c308:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    c30f:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
    c316:	00 
    c317:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    c31e:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
    c325:	00 
    c326:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    c32d:	00 00 00 
    c330:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    c337:	01 00 00 00 
    c33b:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    c342:	e8 b9 a5 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c347:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    c34e:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    c355:	e8 a6 a5 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c35a:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    c361:	00 00 00 
    c364:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    c36b:	48 8d 05 8e 30 02 00 	lea    0x2308e(%rip),%rax        # 2f400 <secp224k1_T>
    c372:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    c379:	31 c0                	xor    %eax,%eax
    c37b:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    c382:	00 00 00 00 
    c386:	e9 59 f5 ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    c38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c390:	48 8d 05 b9 f1 ff ff 	lea    -0xe47(%rip),%rax        # b550 <ecp_mod_p256k1>
    c397:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    c39e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    c3a2:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
    c3a9:	48 8d 05 f0 4e 01 00 	lea    0x14ef0(%rip),%rax        # 212a0 <secp256k1_p>
    c3b0:	48 89 45 18          	mov    %rax,0x18(%rbp)
    c3b4:	48 8d 05 cd 4e 01 00 	lea    0x14ecd(%rip),%rax        # 21288 <secp256k1_a>
    c3bb:	48 89 45 30          	mov    %rax,0x30(%rbp)
    c3bf:	48 8d 05 ba 4e 01 00 	lea    0x14eba(%rip),%rax        # 21280 <secp256k1_b>
    c3c6:	48 89 45 48          	mov    %rax,0x48(%rbp)
    c3ca:	48 8d 05 4f 4e 01 00 	lea    0x14e4f(%rip),%rax        # 21220 <secp256k1_n>
    c3d1:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    c3d8:	48 8d 05 81 4e 01 00 	lea    0x14e81(%rip),%rax        # 21260 <secp256k1_gx>
    c3df:	48 89 45 60          	mov    %rax,0x60(%rbp)
    c3e3:	48 8d 05 56 4e 01 00 	lea    0x14e56(%rip),%rax        # 21240 <secp256k1_gy>
    c3ea:	48 89 45 78          	mov    %rax,0x78(%rbp)
    c3ee:	48 8d 05 8b 5c 02 00 	lea    0x25c8b(%rip),%rax        # 32080 <mpi_one>
    c3f5:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
    c3fc:	00 
    c3fd:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
    c404:	48 c7 45 28 01 00 00 	movq   $0x1,0x28(%rbp)
    c40b:	00 
    c40c:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
    c413:	48 c7 45 40 01 00 00 	movq   $0x1,0x40(%rbp)
    c41a:	00 
    c41b:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    c422:	00 00 00 
    c425:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
    c42c:	04 00 00 00 
    c430:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
    c437:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
    c43e:	00 
    c43f:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
    c446:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
    c44d:	00 
    c44e:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
    c455:	00 00 00 
    c458:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
    c45f:	01 00 00 00 
    c463:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    c46a:	e8 91 a4 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c46f:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
    c476:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    c47d:	e8 7e a4 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c482:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
    c489:	00 00 00 
    c48c:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
    c493:	48 8d 05 e6 2a 02 00 	lea    0x22ae6(%rip),%rax        # 2ef80 <secp256k1_T>
    c49a:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
    c4a1:	31 c0                	xor    %eax,%eax
    c4a3:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
    c4aa:	00 00 00 00 
    c4ae:	e9 31 f4 ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    c4b3:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
    c4ba:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    c4bf:	e9 20 f4 ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    c4c4:	0f 1f 40 00          	nopl   0x0(%rax)
    c4c8:	48 8d 05 11 21 01 00 	lea    0x12111(%rip),%rax        # 1e5e0 <curve448_p>
    c4cf:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
    c4d6:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    c4da:	48 c7 45 10 08 00 00 	movq   $0x8,0x10(%rbp)
    c4e1:	00 
    c4e2:	48 89 45 18          	mov    %rax,0x18(%rbp)
    c4e6:	e8 15 a4 00 00       	callq  16900 <mbedtls_mpi_bitlen>
    c4eb:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    c4ef:	be 05 00 00 00       	mov    $0x5,%esi
    c4f4:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
    c4fb:	e8 70 a2 00 00       	callq  16770 <mbedtls_mpi_lset>
    c500:	85 c0                	test   %eax,%eax
    c502:	0f 85 bc f2 ff ff    	jne    b7c4 <mbedtls_ecp_group_load+0x64>
    c508:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
    c50f:	be 01 00 00 00       	mov    $0x1,%esi
    c514:	e8 57 a2 00 00       	callq  16770 <mbedtls_mpi_lset>
    c519:	85 c0                	test   %eax,%eax
    c51b:	0f 85 a3 f2 ff ff    	jne    b7c4 <mbedtls_ecp_group_load+0x64>
    c521:	48 8d 7d 68          	lea    0x68(%rbp),%rdi
    c525:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    c529:	e8 42 9e 00 00       	callq  16370 <mbedtls_mpi_free>
    c52e:	48 8d 05 6b 20 01 00 	lea    0x1206b(%rip),%rax        # 1e5a0 <curve448_n>
    c535:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
    c53c:	00 00 00 
    c53f:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
    c546:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    c54a:	48 c7 85 a0 00 00 00 	movq   $0x8,0xa0(%rbp)
    c551:	08 00 00 00 
    c555:	48 c7 85 b8 00 00 00 	movq   $0x1bf,0xb8(%rbp)
    c55c:	bf 01 00 00 
    c560:	e9 7f f3 ff ff       	jmpq   b8e4 <mbedtls_ecp_group_load+0x184>
    c565:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c56c:	00 00 00 
    c56f:	90                   	nop

000000000000c570 <hmac_drbg_self_test_entropy>:
    c570:	f3 0f 1e fa          	endbr64 
    c574:	55                   	push   %rbp
    c575:	49 89 f8             	mov    %rdi,%r8
    c578:	48 89 d5             	mov    %rdx,%rbp
    c57b:	48 89 f7             	mov    %rsi,%rdi
    c57e:	53                   	push   %rbx
    c57f:	48 83 ec 08          	sub    $0x8,%rsp
    c583:	48 8b 1d c6 5b 02 00 	mov    0x25bc6(%rip),%rbx        # 32150 <test_offset>
    c58a:	49 8d 34 18          	lea    (%r8,%rbx,1),%rsi
    c58e:	48 01 eb             	add    %rbp,%rbx
    c591:	e8 8a 7d ff ff       	callq  4320 <memcpy@plt>
    c596:	48 89 1d b3 5b 02 00 	mov    %rbx,0x25bb3(%rip)        # 32150 <test_offset>
    c59d:	48 83 c4 08          	add    $0x8,%rsp
    c5a1:	31 c0                	xor    %eax,%eax
    c5a3:	5b                   	pop    %rbx
    c5a4:	5d                   	pop    %rbp
    c5a5:	c3                   	retq   
    c5a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c5ad:	00 00 00 

000000000000c5b0 <mbedtls_hmac_drbg_free.part.0>:
    c5b0:	53                   	push   %rbx
    c5b1:	48 89 fb             	mov    %rdi,%rbx
    c5b4:	e8 f7 0d 00 00       	callq  d3b0 <mbedtls_md_free>
    c5b9:	48 89 df             	mov    %rbx,%rdi
    c5bc:	be 80 00 00 00       	mov    $0x80,%esi
    c5c1:	e8 ea 2a 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    c5c6:	c7 43 6c 10 27 00 00 	movl   $0x2710,0x6c(%rbx)
    c5cd:	5b                   	pop    %rbx
    c5ce:	c3                   	retq   
    c5cf:	90                   	nop

000000000000c5d0 <mbedtls_hmac_drbg_init>:
    c5d0:	f3 0f 1e fa          	endbr64 
    c5d4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    c5db:	48 89 fa             	mov    %rdi,%rdx
    c5de:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    c5e2:	31 c0                	xor    %eax,%eax
    c5e4:	48 c7 47 70 00 00 00 	movq   $0x0,0x70(%rdi)
    c5eb:	00 
    c5ec:	48 89 d1             	mov    %rdx,%rcx
    c5ef:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c5f3:	48 29 f9             	sub    %rdi,%rcx
    c5f6:	83 e9 80             	sub    $0xffffff80,%ecx
    c5f9:	c1 e9 03             	shr    $0x3,%ecx
    c5fc:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    c5ff:	c7 42 6c 10 27 00 00 	movl   $0x2710,0x6c(%rdx)
    c606:	c3                   	retq   
    c607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c60e:	00 00 

000000000000c610 <mbedtls_hmac_drbg_update>:
    c610:	f3 0f 1e fa          	endbr64 
    c614:	41 57                	push   %r15
    c616:	49 89 f7             	mov    %rsi,%r15
    c619:	41 56                	push   %r14
    c61b:	41 55                	push   %r13
    c61d:	49 89 d5             	mov    %rdx,%r13
    c620:	41 54                	push   %r12
    c622:	55                   	push   %rbp
    c623:	53                   	push   %rbx
    c624:	48 89 fb             	mov    %rdi,%rbx
    c627:	48 83 ec 78          	sub    $0x78,%rsp
    c62b:	48 8b 3f             	mov    (%rdi),%rdi
    c62e:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    c633:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c63a:	00 00 
    c63c:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    c641:	31 c0                	xor    %eax,%eax
    c643:	e8 08 13 00 00       	callq  d950 <mbedtls_md_get_size>
    c648:	0f b6 e8             	movzbl %al,%ebp
    c64b:	4d 85 ff             	test   %r15,%r15
    c64e:	0f 84 14 01 00 00    	je     c768 <mbedtls_hmac_drbg_update+0x158>
    c654:	41 be 02 00 00 00    	mov    $0x2,%r14d
    c65a:	4d 85 ed             	test   %r13,%r13
    c65d:	0f 84 05 01 00 00    	je     c768 <mbedtls_hmac_drbg_update+0x158>
    c663:	c6 44 24 1f 00       	movb   $0x0,0x1f(%rsp)
    c668:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    c66d:	4c 8d 63 18          	lea    0x18(%rbx),%r12
    c671:	eb 60                	jmp    c6d3 <mbedtls_hmac_drbg_update+0xc3>
    c673:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c678:	4c 89 ee             	mov    %r13,%rsi
    c67b:	48 89 df             	mov    %rbx,%rdi
    c67e:	e8 ed 18 00 00       	callq  df70 <mbedtls_md_hmac_finish>
    c683:	85 c0                	test   %eax,%eax
    c685:	0f 85 a5 00 00 00    	jne    c730 <mbedtls_hmac_drbg_update+0x120>
    c68b:	48 89 ea             	mov    %rbp,%rdx
    c68e:	4c 89 ee             	mov    %r13,%rsi
    c691:	48 89 df             	mov    %rbx,%rdi
    c694:	e8 c7 15 00 00       	callq  dc60 <mbedtls_md_hmac_starts>
    c699:	85 c0                	test   %eax,%eax
    c69b:	0f 85 8f 00 00 00    	jne    c730 <mbedtls_hmac_drbg_update+0x120>
    c6a1:	48 89 ea             	mov    %rbp,%rdx
    c6a4:	4c 89 e6             	mov    %r12,%rsi
    c6a7:	48 89 df             	mov    %rbx,%rdi
    c6aa:	e8 91 18 00 00       	callq  df40 <mbedtls_md_hmac_update>
    c6af:	85 c0                	test   %eax,%eax
    c6b1:	75 7d                	jne    c730 <mbedtls_hmac_drbg_update+0x120>
    c6b3:	4c 89 e6             	mov    %r12,%rsi
    c6b6:	48 89 df             	mov    %rbx,%rdi
    c6b9:	e8 b2 18 00 00       	callq  df70 <mbedtls_md_hmac_finish>
    c6be:	85 c0                	test   %eax,%eax
    c6c0:	75 6e                	jne    c730 <mbedtls_hmac_drbg_update+0x120>
    c6c2:	0f b6 4c 24 1f       	movzbl 0x1f(%rsp),%ecx
    c6c7:	8d 51 01             	lea    0x1(%rcx),%edx
    c6ca:	88 54 24 1f          	mov    %dl,0x1f(%rsp)
    c6ce:	44 38 f2             	cmp    %r14b,%dl
    c6d1:	73 5d                	jae    c730 <mbedtls_hmac_drbg_update+0x120>
    c6d3:	48 89 df             	mov    %rbx,%rdi
    c6d6:	e8 75 19 00 00       	callq  e050 <mbedtls_md_hmac_reset>
    c6db:	85 c0                	test   %eax,%eax
    c6dd:	75 51                	jne    c730 <mbedtls_hmac_drbg_update+0x120>
    c6df:	48 89 ea             	mov    %rbp,%rdx
    c6e2:	4c 89 e6             	mov    %r12,%rsi
    c6e5:	48 89 df             	mov    %rbx,%rdi
    c6e8:	e8 53 18 00 00       	callq  df40 <mbedtls_md_hmac_update>
    c6ed:	85 c0                	test   %eax,%eax
    c6ef:	75 3f                	jne    c730 <mbedtls_hmac_drbg_update+0x120>
    c6f1:	48 8d 74 24 1f       	lea    0x1f(%rsp),%rsi
    c6f6:	ba 01 00 00 00       	mov    $0x1,%edx
    c6fb:	48 89 df             	mov    %rbx,%rdi
    c6fe:	e8 3d 18 00 00       	callq  df40 <mbedtls_md_hmac_update>
    c703:	85 c0                	test   %eax,%eax
    c705:	75 29                	jne    c730 <mbedtls_hmac_drbg_update+0x120>
    c707:	41 80 fe 02          	cmp    $0x2,%r14b
    c70b:	0f 85 67 ff ff ff    	jne    c678 <mbedtls_hmac_drbg_update+0x68>
    c711:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c716:	4c 89 fe             	mov    %r15,%rsi
    c719:	48 89 df             	mov    %rbx,%rdi
    c71c:	e8 1f 18 00 00       	callq  df40 <mbedtls_md_hmac_update>
    c721:	85 c0                	test   %eax,%eax
    c723:	0f 84 4f ff ff ff    	je     c678 <mbedtls_hmac_drbg_update+0x68>
    c729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c730:	be 40 00 00 00       	mov    $0x40,%esi
    c735:	4c 89 ef             	mov    %r13,%rdi
    c738:	89 44 24 08          	mov    %eax,0x8(%rsp)
    c73c:	e8 6f 29 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    c741:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    c746:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    c74d:	00 00 
    c74f:	8b 44 24 08          	mov    0x8(%rsp),%eax
    c753:	75 1e                	jne    c773 <mbedtls_hmac_drbg_update+0x163>
    c755:	48 83 c4 78          	add    $0x78,%rsp
    c759:	5b                   	pop    %rbx
    c75a:	5d                   	pop    %rbp
    c75b:	41 5c                	pop    %r12
    c75d:	41 5d                	pop    %r13
    c75f:	41 5e                	pop    %r14
    c761:	41 5f                	pop    %r15
    c763:	c3                   	retq   
    c764:	0f 1f 40 00          	nopl   0x0(%rax)
    c768:	41 be 01 00 00 00    	mov    $0x1,%r14d
    c76e:	e9 f0 fe ff ff       	jmpq   c663 <mbedtls_hmac_drbg_update+0x53>
    c773:	e8 f8 7a ff ff       	callq  4270 <__stack_chk_fail@plt>
    c778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c77f:	00 

000000000000c780 <hmac_drbg_reseed_core>:
    c780:	41 57                	push   %r15
    c782:	41 89 cf             	mov    %ecx,%r15d
    c785:	41 56                	push   %r14
    c787:	49 89 f6             	mov    %rsi,%r14
    c78a:	41 55                	push   %r13
    c78c:	41 54                	push   %r12
    c78e:	49 89 d4             	mov    %rdx,%r12
    c791:	55                   	push   %rbp
    c792:	53                   	push   %rbx
    c793:	48 89 fb             	mov    %rdi,%rbx
    c796:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
    c79d:	48 8b 57 60          	mov    0x60(%rdi),%rdx
    c7a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c7a8:	00 00 
    c7aa:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    c7b1:	00 
    c7b2:	31 c0                	xor    %eax,%eax
    c7b4:	48 89 d0             	mov    %rdx,%rax
    c7b7:	85 c9                	test   %ecx,%ecx
    c7b9:	74 07                	je     c7c2 <hmac_drbg_reseed_core+0x42>
    c7bb:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    c7bf:	48 d1 e8             	shr    %rax
    c7c2:	49 81 fc 00 01 00 00 	cmp    $0x100,%r12
    c7c9:	0f 87 d9 00 00 00    	ja     c8a8 <hmac_drbg_reseed_core+0x128>
    c7cf:	4c 01 e0             	add    %r12,%rax
    c7d2:	48 3d 80 01 00 00    	cmp    $0x180,%rax
    c7d8:	0f 87 ca 00 00 00    	ja     c8a8 <hmac_drbg_reseed_core+0x128>
    c7de:	48 89 e5             	mov    %rsp,%rbp
    c7e1:	31 c0                	xor    %eax,%eax
    c7e3:	b9 30 00 00 00       	mov    $0x30,%ecx
    c7e8:	48 89 ef             	mov    %rbp,%rdi
    c7eb:	48 89 ee             	mov    %rbp,%rsi
    c7ee:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    c7f1:	48 8b 7b 78          	mov    0x78(%rbx),%rdi
    c7f5:	ff 53 70             	callq  *0x70(%rbx)
    c7f8:	85 c0                	test   %eax,%eax
    c7fa:	0f 85 b0 00 00 00    	jne    c8b0 <hmac_drbg_reseed_core+0x130>
    c800:	4c 8b 6b 60          	mov    0x60(%rbx),%r13
    c804:	45 85 ff             	test   %r15d,%r15d
    c807:	74 24                	je     c82d <hmac_drbg_reseed_core+0xad>
    c809:	4c 89 ea             	mov    %r13,%rdx
    c80c:	48 8b 7b 78          	mov    0x78(%rbx),%rdi
    c810:	4a 8d 74 2d 00       	lea    0x0(%rbp,%r13,1),%rsi
    c815:	48 d1 ea             	shr    %rdx
    c818:	ff 53 70             	callq  *0x70(%rbx)
    c81b:	85 c0                	test   %eax,%eax
    c81d:	0f 85 8d 00 00 00    	jne    c8b0 <hmac_drbg_reseed_core+0x130>
    c823:	48 8b 43 60          	mov    0x60(%rbx),%rax
    c827:	48 d1 e8             	shr    %rax
    c82a:	49 01 c5             	add    %rax,%r13
    c82d:	4d 85 f6             	test   %r14,%r14
    c830:	74 05                	je     c837 <hmac_drbg_reseed_core+0xb7>
    c832:	4d 85 e4             	test   %r12,%r12
    c835:	75 59                	jne    c890 <hmac_drbg_reseed_core+0x110>
    c837:	4c 89 ea             	mov    %r13,%rdx
    c83a:	48 89 ee             	mov    %rbp,%rsi
    c83d:	48 89 df             	mov    %rbx,%rdi
    c840:	e8 cb fd ff ff       	callq  c610 <mbedtls_hmac_drbg_update>
    c845:	41 89 c4             	mov    %eax,%r12d
    c848:	85 c0                	test   %eax,%eax
    c84a:	75 07                	jne    c853 <hmac_drbg_reseed_core+0xd3>
    c84c:	c7 43 58 01 00 00 00 	movl   $0x1,0x58(%rbx)
    c853:	4c 89 ee             	mov    %r13,%rsi
    c856:	48 89 ef             	mov    %rbp,%rdi
    c859:	e8 52 28 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    c85e:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    c865:	00 
    c866:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    c86d:	00 00 
    c86f:	75 47                	jne    c8b8 <hmac_drbg_reseed_core+0x138>
    c871:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
    c878:	44 89 e0             	mov    %r12d,%eax
    c87b:	5b                   	pop    %rbx
    c87c:	5d                   	pop    %rbp
    c87d:	41 5c                	pop    %r12
    c87f:	41 5d                	pop    %r13
    c881:	41 5e                	pop    %r14
    c883:	41 5f                	pop    %r15
    c885:	c3                   	retq   
    c886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c88d:	00 00 00 
    c890:	4a 8d 7c 2d 00       	lea    0x0(%rbp,%r13,1),%rdi
    c895:	4c 89 e2             	mov    %r12,%rdx
    c898:	4c 89 f6             	mov    %r14,%rsi
    c89b:	4d 01 e5             	add    %r12,%r13
    c89e:	e8 7d 7a ff ff       	callq  4320 <memcpy@plt>
    c8a3:	eb 92                	jmp    c837 <hmac_drbg_reseed_core+0xb7>
    c8a5:	0f 1f 00             	nopl   (%rax)
    c8a8:	41 bc fb ff ff ff    	mov    $0xfffffffb,%r12d
    c8ae:	eb ae                	jmp    c85e <hmac_drbg_reseed_core+0xde>
    c8b0:	41 bc f7 ff ff ff    	mov    $0xfffffff7,%r12d
    c8b6:	eb a6                	jmp    c85e <hmac_drbg_reseed_core+0xde>
    c8b8:	e8 b3 79 ff ff       	callq  4270 <__stack_chk_fail@plt>
    c8bd:	0f 1f 00             	nopl   (%rax)

000000000000c8c0 <mbedtls_hmac_drbg_seed_buf>:
    c8c0:	f3 0f 1e fa          	endbr64 
    c8c4:	41 56                	push   %r14
    c8c6:	49 89 f6             	mov    %rsi,%r14
    c8c9:	41 55                	push   %r13
    c8cb:	49 89 cd             	mov    %rcx,%r13
    c8ce:	41 54                	push   %r12
    c8d0:	49 89 d4             	mov    %rdx,%r12
    c8d3:	ba 01 00 00 00       	mov    $0x1,%edx
    c8d8:	55                   	push   %rbp
    c8d9:	48 89 fd             	mov    %rdi,%rbp
    c8dc:	53                   	push   %rbx
    c8dd:	e8 9e 0c 00 00       	callq  d580 <mbedtls_md_setup>
    c8e2:	85 c0                	test   %eax,%eax
    c8e4:	74 0a                	je     c8f0 <mbedtls_hmac_drbg_seed_buf+0x30>
    c8e6:	5b                   	pop    %rbx
    c8e7:	5d                   	pop    %rbp
    c8e8:	41 5c                	pop    %r12
    c8ea:	41 5d                	pop    %r13
    c8ec:	41 5e                	pop    %r14
    c8ee:	c3                   	retq   
    c8ef:	90                   	nop
    c8f0:	4c 89 f7             	mov    %r14,%rdi
    c8f3:	48 8d 5d 18          	lea    0x18(%rbp),%rbx
    c8f7:	e8 54 10 00 00       	callq  d950 <mbedtls_md_get_size>
    c8fc:	48 89 de             	mov    %rbx,%rsi
    c8ff:	48 89 ef             	mov    %rbp,%rdi
    c902:	0f b6 d0             	movzbl %al,%edx
    c905:	e8 56 13 00 00       	callq  dc60 <mbedtls_md_hmac_starts>
    c90a:	85 c0                	test   %eax,%eax
    c90c:	75 d8                	jne    c8e6 <mbedtls_hmac_drbg_seed_buf+0x26>
    c90e:	4c 89 f7             	mov    %r14,%rdi
    c911:	e8 3a 10 00 00       	callq  d950 <mbedtls_md_get_size>
    c916:	0f b6 d0             	movzbl %al,%edx
    c919:	48 b8 01 01 01 01 01 	movabs $0x101010101010101,%rax
    c920:	01 01 01 
    c923:	83 fa 08             	cmp    $0x8,%edx
    c926:	73 28                	jae    c950 <mbedtls_hmac_drbg_seed_buf+0x90>
    c928:	f6 c2 04             	test   $0x4,%dl
    c92b:	75 5b                	jne    c988 <mbedtls_hmac_drbg_seed_buf+0xc8>
    c92d:	85 d2                	test   %edx,%edx
    c92f:	74 3c                	je     c96d <mbedtls_hmac_drbg_seed_buf+0xad>
    c931:	c6 45 18 01          	movb   $0x1,0x18(%rbp)
    c935:	f6 c2 02             	test   $0x2,%dl
    c938:	74 33                	je     c96d <mbedtls_hmac_drbg_seed_buf+0xad>
    c93a:	b8 01 01 00 00       	mov    $0x101,%eax
    c93f:	66 89 44 13 fe       	mov    %ax,-0x2(%rbx,%rdx,1)
    c944:	eb 27                	jmp    c96d <mbedtls_hmac_drbg_seed_buf+0xad>
    c946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c94d:	00 00 00 
    c950:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    c954:	48 89 45 18          	mov    %rax,0x18(%rbp)
    c958:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c95c:	48 89 44 13 f8       	mov    %rax,-0x8(%rbx,%rdx,1)
    c961:	48 29 fb             	sub    %rdi,%rbx
    c964:	8d 0c 1a             	lea    (%rdx,%rbx,1),%ecx
    c967:	c1 e9 03             	shr    $0x3,%ecx
    c96a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    c96d:	5b                   	pop    %rbx
    c96e:	4c 89 ea             	mov    %r13,%rdx
    c971:	4c 89 e6             	mov    %r12,%rsi
    c974:	48 89 ef             	mov    %rbp,%rdi
    c977:	5d                   	pop    %rbp
    c978:	41 5c                	pop    %r12
    c97a:	41 5d                	pop    %r13
    c97c:	41 5e                	pop    %r14
    c97e:	e9 8d fc ff ff       	jmpq   c610 <mbedtls_hmac_drbg_update>
    c983:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c988:	c7 45 18 01 01 01 01 	movl   $0x1010101,0x18(%rbp)
    c98f:	c7 44 13 fc 01 01 01 	movl   $0x1010101,-0x4(%rbx,%rdx,1)
    c996:	01 
    c997:	eb d4                	jmp    c96d <mbedtls_hmac_drbg_seed_buf+0xad>
    c999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c9a0 <mbedtls_hmac_drbg_reseed>:
    c9a0:	f3 0f 1e fa          	endbr64 
    c9a4:	31 c9                	xor    %ecx,%ecx
    c9a6:	e9 d5 fd ff ff       	jmpq   c780 <hmac_drbg_reseed_core>
    c9ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000c9b0 <mbedtls_hmac_drbg_seed>:
    c9b0:	f3 0f 1e fa          	endbr64 
    c9b4:	41 57                	push   %r15
    c9b6:	49 89 f7             	mov    %rsi,%r15
    c9b9:	41 56                	push   %r14
    c9bb:	49 89 fe             	mov    %rdi,%r14
    c9be:	41 55                	push   %r13
    c9c0:	49 89 d5             	mov    %rdx,%r13
    c9c3:	ba 01 00 00 00       	mov    $0x1,%edx
    c9c8:	41 54                	push   %r12
    c9ca:	4d 89 cc             	mov    %r9,%r12
    c9cd:	55                   	push   %rbp
    c9ce:	4c 89 c5             	mov    %r8,%rbp
    c9d1:	53                   	push   %rbx
    c9d2:	48 89 cb             	mov    %rcx,%rbx
    c9d5:	48 83 ec 18          	sub    $0x18,%rsp
    c9d9:	e8 a2 0b 00 00       	callq  d580 <mbedtls_md_setup>
    c9de:	85 c0                	test   %eax,%eax
    c9e0:	74 16                	je     c9f8 <mbedtls_hmac_drbg_seed+0x48>
    c9e2:	48 83 c4 18          	add    $0x18,%rsp
    c9e6:	5b                   	pop    %rbx
    c9e7:	5d                   	pop    %rbp
    c9e8:	41 5c                	pop    %r12
    c9ea:	41 5d                	pop    %r13
    c9ec:	41 5e                	pop    %r14
    c9ee:	41 5f                	pop    %r15
    c9f0:	c3                   	retq   
    c9f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c9f8:	4c 89 ff             	mov    %r15,%rdi
    c9fb:	e8 50 0f 00 00       	callq  d950 <mbedtls_md_get_size>
    ca00:	49 8d 4e 18          	lea    0x18(%r14),%rcx
    ca04:	4c 89 f7             	mov    %r14,%rdi
    ca07:	44 0f b6 f8          	movzbl %al,%r15d
    ca0b:	48 89 ce             	mov    %rcx,%rsi
    ca0e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ca13:	4c 89 fa             	mov    %r15,%rdx
    ca16:	e8 45 12 00 00       	callq  dc60 <mbedtls_md_hmac_starts>
    ca1b:	85 c0                	test   %eax,%eax
    ca1d:	75 c3                	jne    c9e2 <mbedtls_hmac_drbg_seed+0x32>
    ca1f:	41 83 ff 08          	cmp    $0x8,%r15d
    ca23:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ca28:	48 b8 01 01 01 01 01 	movabs $0x101010101010101,%rax
    ca2f:	01 01 01 
    ca32:	72 6c                	jb     caa0 <mbedtls_hmac_drbg_seed+0xf0>
    ca34:	49 8d 7e 20          	lea    0x20(%r14),%rdi
    ca38:	49 89 46 18          	mov    %rax,0x18(%r14)
    ca3c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    ca40:	4a 89 44 39 f8       	mov    %rax,-0x8(%rcx,%r15,1)
    ca45:	48 29 f9             	sub    %rdi,%rcx
    ca48:	44 01 f9             	add    %r15d,%ecx
    ca4b:	c1 e9 03             	shr    $0x3,%ecx
    ca4e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    ca51:	49 83 7e 60 00       	cmpq   $0x0,0x60(%r14)
    ca56:	4d 89 6e 70          	mov    %r13,0x70(%r14)
    ca5a:	49 89 5e 78          	mov    %rbx,0x78(%r14)
    ca5e:	75 1e                	jne    ca7e <mbedtls_hmac_drbg_seed+0xce>
    ca60:	b8 10 00 00 00       	mov    $0x10,%eax
    ca65:	49 83 ff 14          	cmp    $0x14,%r15
    ca69:	76 0f                	jbe    ca7a <mbedtls_hmac_drbg_seed+0xca>
    ca6b:	49 83 ff 1d          	cmp    $0x1d,%r15
    ca6f:	48 19 c0             	sbb    %rax,%rax
    ca72:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    ca76:	48 83 c0 20          	add    $0x20,%rax
    ca7a:	49 89 46 60          	mov    %rax,0x60(%r14)
    ca7e:	48 83 c4 18          	add    $0x18,%rsp
    ca82:	4c 89 e2             	mov    %r12,%rdx
    ca85:	48 89 ee             	mov    %rbp,%rsi
    ca88:	4c 89 f7             	mov    %r14,%rdi
    ca8b:	5b                   	pop    %rbx
    ca8c:	b9 01 00 00 00       	mov    $0x1,%ecx
    ca91:	5d                   	pop    %rbp
    ca92:	41 5c                	pop    %r12
    ca94:	41 5d                	pop    %r13
    ca96:	41 5e                	pop    %r14
    ca98:	41 5f                	pop    %r15
    ca9a:	e9 e1 fc ff ff       	jmpq   c780 <hmac_drbg_reseed_core>
    ca9f:	90                   	nop
    caa0:	41 f6 c7 04          	test   $0x4,%r15b
    caa4:	75 22                	jne    cac8 <mbedtls_hmac_drbg_seed+0x118>
    caa6:	45 85 ff             	test   %r15d,%r15d
    caa9:	74 a6                	je     ca51 <mbedtls_hmac_drbg_seed+0xa1>
    caab:	41 c6 46 18 01       	movb   $0x1,0x18(%r14)
    cab0:	41 f6 c7 02          	test   $0x2,%r15b
    cab4:	74 9b                	je     ca51 <mbedtls_hmac_drbg_seed+0xa1>
    cab6:	b8 01 01 00 00       	mov    $0x101,%eax
    cabb:	66 42 89 44 39 fe    	mov    %ax,-0x2(%rcx,%r15,1)
    cac1:	eb 8e                	jmp    ca51 <mbedtls_hmac_drbg_seed+0xa1>
    cac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cac8:	41 c7 46 18 01 01 01 	movl   $0x1010101,0x18(%r14)
    cacf:	01 
    cad0:	42 c7 44 39 fc 01 01 	movl   $0x1010101,-0x4(%rcx,%r15,1)
    cad7:	01 01 
    cad9:	e9 73 ff ff ff       	jmpq   ca51 <mbedtls_hmac_drbg_seed+0xa1>
    cade:	66 90                	xchg   %ax,%ax

000000000000cae0 <mbedtls_hmac_drbg_set_prediction_resistance>:
    cae0:	f3 0f 1e fa          	endbr64 
    cae4:	89 77 68             	mov    %esi,0x68(%rdi)
    cae7:	c3                   	retq   
    cae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    caef:	00 

000000000000caf0 <mbedtls_hmac_drbg_set_entropy_len>:
    caf0:	f3 0f 1e fa          	endbr64 
    caf4:	48 89 77 60          	mov    %rsi,0x60(%rdi)
    caf8:	c3                   	retq   
    caf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000cb00 <mbedtls_hmac_drbg_set_reseed_interval>:
    cb00:	f3 0f 1e fa          	endbr64 
    cb04:	89 77 6c             	mov    %esi,0x6c(%rdi)
    cb07:	c3                   	retq   
    cb08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb0f:	00 

000000000000cb10 <mbedtls_hmac_drbg_random_with_add>:
    cb10:	f3 0f 1e fa          	endbr64 
    cb14:	41 57                	push   %r15
    cb16:	41 56                	push   %r14
    cb18:	41 55                	push   %r13
    cb1a:	49 89 fd             	mov    %rdi,%r13
    cb1d:	41 54                	push   %r12
    cb1f:	49 89 f4             	mov    %rsi,%r12
    cb22:	55                   	push   %rbp
    cb23:	48 89 d5             	mov    %rdx,%rbp
    cb26:	53                   	push   %rbx
    cb27:	4c 89 c3             	mov    %r8,%rbx
    cb2a:	48 83 ec 18          	sub    $0x18,%rsp
    cb2e:	48 8b 3f             	mov    (%rdi),%rdi
    cb31:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    cb36:	4c 89 04 24          	mov    %r8,(%rsp)
    cb3a:	e8 11 0e 00 00       	callq  d950 <mbedtls_md_get_size>
    cb3f:	48 81 fd 00 04 00 00 	cmp    $0x400,%rbp
    cb46:	0f 87 97 01 00 00    	ja     cce3 <mbedtls_hmac_drbg_random_with_add+0x1d3>
    cb4c:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    cb53:	0f 87 94 01 00 00    	ja     cced <mbedtls_hmac_drbg_random_with_add+0x1dd>
    cb59:	49 83 7d 70 00       	cmpq   $0x0,0x70(%r13)
    cb5e:	44 0f b6 f0          	movzbl %al,%r14d
    cb62:	0f 84 10 01 00 00    	je     cc78 <mbedtls_hmac_drbg_random_with_add+0x168>
    cb68:	41 83 7d 68 01       	cmpl   $0x1,0x68(%r13)
    cb6d:	74 0e                	je     cb7d <mbedtls_hmac_drbg_random_with_add+0x6d>
    cb6f:	41 8b 45 6c          	mov    0x6c(%r13),%eax
    cb73:	41 39 45 58          	cmp    %eax,0x58(%r13)
    cb77:	0f 8e fb 00 00 00    	jle    cc78 <mbedtls_hmac_drbg_random_with_add+0x168>
    cb7d:	48 8b 14 24          	mov    (%rsp),%rdx
    cb81:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    cb86:	31 c9                	xor    %ecx,%ecx
    cb88:	4c 89 ef             	mov    %r13,%rdi
    cb8b:	e8 f0 fb ff ff       	callq  c780 <hmac_drbg_reseed_core>
    cb90:	85 c0                	test   %eax,%eax
    cb92:	0f 85 cc 00 00 00    	jne    cc64 <mbedtls_hmac_drbg_random_with_add+0x154>
    cb98:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    cb9f:	00 
    cba0:	4d 8d 7d 18          	lea    0x18(%r13),%r15
    cba4:	48 85 ed             	test   %rbp,%rbp
    cba7:	75 2d                	jne    cbd6 <mbedtls_hmac_drbg_random_with_add+0xc6>
    cba9:	e9 9c 00 00 00       	jmpq   cc4a <mbedtls_hmac_drbg_random_with_add+0x13a>
    cbae:	66 90                	xchg   %ax,%ax
    cbb0:	f6 c3 04             	test   $0x4,%bl
    cbb3:	0f 85 f7 00 00 00    	jne    ccb0 <mbedtls_hmac_drbg_random_with_add+0x1a0>
    cbb9:	85 db                	test   %ebx,%ebx
    cbbb:	74 11                	je     cbce <mbedtls_hmac_drbg_random_with_add+0xbe>
    cbbd:	41 0f b6 07          	movzbl (%r15),%eax
    cbc1:	41 88 04 24          	mov    %al,(%r12)
    cbc5:	f6 c3 02             	test   $0x2,%bl
    cbc8:	0f 85 02 01 00 00    	jne    ccd0 <mbedtls_hmac_drbg_random_with_add+0x1c0>
    cbce:	49 01 dc             	add    %rbx,%r12
    cbd1:	48 29 dd             	sub    %rbx,%rbp
    cbd4:	74 74                	je     cc4a <mbedtls_hmac_drbg_random_with_add+0x13a>
    cbd6:	49 39 ee             	cmp    %rbp,%r14
    cbd9:	48 89 eb             	mov    %rbp,%rbx
    cbdc:	4c 89 ef             	mov    %r13,%rdi
    cbdf:	49 0f 46 de          	cmovbe %r14,%rbx
    cbe3:	e8 68 14 00 00       	callq  e050 <mbedtls_md_hmac_reset>
    cbe8:	85 c0                	test   %eax,%eax
    cbea:	75 78                	jne    cc64 <mbedtls_hmac_drbg_random_with_add+0x154>
    cbec:	4c 89 f2             	mov    %r14,%rdx
    cbef:	4c 89 fe             	mov    %r15,%rsi
    cbf2:	4c 89 ef             	mov    %r13,%rdi
    cbf5:	e8 46 13 00 00       	callq  df40 <mbedtls_md_hmac_update>
    cbfa:	85 c0                	test   %eax,%eax
    cbfc:	75 66                	jne    cc64 <mbedtls_hmac_drbg_random_with_add+0x154>
    cbfe:	4c 89 fe             	mov    %r15,%rsi
    cc01:	4c 89 ef             	mov    %r13,%rdi
    cc04:	e8 67 13 00 00       	callq  df70 <mbedtls_md_hmac_finish>
    cc09:	85 c0                	test   %eax,%eax
    cc0b:	75 57                	jne    cc64 <mbedtls_hmac_drbg_random_with_add+0x154>
    cc0d:	83 fb 08             	cmp    $0x8,%ebx
    cc10:	72 9e                	jb     cbb0 <mbedtls_hmac_drbg_random_with_add+0xa0>
    cc12:	49 8b 07             	mov    (%r15),%rax
    cc15:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
    cc1a:	4c 89 e1             	mov    %r12,%rcx
    cc1d:	4c 89 fe             	mov    %r15,%rsi
    cc20:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    cc24:	49 89 04 24          	mov    %rax,(%r12)
    cc28:	89 d8                	mov    %ebx,%eax
    cc2a:	48 29 f9             	sub    %rdi,%rcx
    cc2d:	49 8b 54 07 f8       	mov    -0x8(%r15,%rax,1),%rdx
    cc32:	48 29 ce             	sub    %rcx,%rsi
    cc35:	01 d9                	add    %ebx,%ecx
    cc37:	c1 e9 03             	shr    $0x3,%ecx
    cc3a:	49 89 54 04 f8       	mov    %rdx,-0x8(%r12,%rax,1)
    cc3f:	49 01 dc             	add    %rbx,%r12
    cc42:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    cc45:	48 29 dd             	sub    %rbx,%rbp
    cc48:	75 8c                	jne    cbd6 <mbedtls_hmac_drbg_random_with_add+0xc6>
    cc4a:	48 8b 14 24          	mov    (%rsp),%rdx
    cc4e:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    cc53:	4c 89 ef             	mov    %r13,%rdi
    cc56:	e8 b5 f9 ff ff       	callq  c610 <mbedtls_hmac_drbg_update>
    cc5b:	85 c0                	test   %eax,%eax
    cc5d:	75 05                	jne    cc64 <mbedtls_hmac_drbg_random_with_add+0x154>
    cc5f:	41 83 45 58 01       	addl   $0x1,0x58(%r13)
    cc64:	48 83 c4 18          	add    $0x18,%rsp
    cc68:	5b                   	pop    %rbx
    cc69:	5d                   	pop    %rbp
    cc6a:	41 5c                	pop    %r12
    cc6c:	41 5d                	pop    %r13
    cc6e:	41 5e                	pop    %r14
    cc70:	41 5f                	pop    %r15
    cc72:	c3                   	retq   
    cc73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cc78:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    cc7d:	48 85 f6             	test   %rsi,%rsi
    cc80:	0f 84 1a ff ff ff    	je     cba0 <mbedtls_hmac_drbg_random_with_add+0x90>
    cc86:	48 8b 04 24          	mov    (%rsp),%rax
    cc8a:	48 85 c0             	test   %rax,%rax
    cc8d:	0f 84 0d ff ff ff    	je     cba0 <mbedtls_hmac_drbg_random_with_add+0x90>
    cc93:	48 89 c2             	mov    %rax,%rdx
    cc96:	4c 89 ef             	mov    %r13,%rdi
    cc99:	e8 72 f9 ff ff       	callq  c610 <mbedtls_hmac_drbg_update>
    cc9e:	85 c0                	test   %eax,%eax
    cca0:	0f 84 fa fe ff ff    	je     cba0 <mbedtls_hmac_drbg_random_with_add+0x90>
    cca6:	eb bc                	jmp    cc64 <mbedtls_hmac_drbg_random_with_add+0x154>
    cca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ccaf:	00 
    ccb0:	41 8b 07             	mov    (%r15),%eax
    ccb3:	41 89 04 24          	mov    %eax,(%r12)
    ccb7:	89 d8                	mov    %ebx,%eax
    ccb9:	41 8b 54 07 fc       	mov    -0x4(%r15,%rax,1),%edx
    ccbe:	41 89 54 04 fc       	mov    %edx,-0x4(%r12,%rax,1)
    ccc3:	e9 06 ff ff ff       	jmpq   cbce <mbedtls_hmac_drbg_random_with_add+0xbe>
    ccc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cccf:	00 
    ccd0:	89 d8                	mov    %ebx,%eax
    ccd2:	41 0f b7 54 07 fe    	movzwl -0x2(%r15,%rax,1),%edx
    ccd8:	66 41 89 54 04 fe    	mov    %dx,-0x2(%r12,%rax,1)
    ccde:	e9 eb fe ff ff       	jmpq   cbce <mbedtls_hmac_drbg_random_with_add+0xbe>
    cce3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    cce8:	e9 77 ff ff ff       	jmpq   cc64 <mbedtls_hmac_drbg_random_with_add+0x154>
    cced:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    ccf2:	e9 6d ff ff ff       	jmpq   cc64 <mbedtls_hmac_drbg_random_with_add+0x154>
    ccf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ccfe:	00 00 

000000000000cd00 <mbedtls_hmac_drbg_random>:
    cd00:	f3 0f 1e fa          	endbr64 
    cd04:	45 31 c0             	xor    %r8d,%r8d
    cd07:	31 c9                	xor    %ecx,%ecx
    cd09:	e9 02 fe ff ff       	jmpq   cb10 <mbedtls_hmac_drbg_random_with_add>
    cd0e:	66 90                	xchg   %ax,%ax

000000000000cd10 <mbedtls_hmac_drbg_free>:
    cd10:	f3 0f 1e fa          	endbr64 
    cd14:	48 85 ff             	test   %rdi,%rdi
    cd17:	74 07                	je     cd20 <mbedtls_hmac_drbg_free+0x10>
    cd19:	e9 92 f8 ff ff       	jmpq   c5b0 <mbedtls_hmac_drbg_free.part.0>
    cd1e:	66 90                	xchg   %ax,%ax
    cd20:	c3                   	retq   
    cd21:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cd28:	00 00 00 00 
    cd2c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000cd30 <mbedtls_hmac_drbg_write_seed_file>:
    cd30:	f3 0f 1e fa          	endbr64 
    cd34:	41 55                	push   %r13
    cd36:	41 54                	push   %r12
    cd38:	49 89 fc             	mov    %rdi,%r12
    cd3b:	48 89 f7             	mov    %rsi,%rdi
    cd3e:	48 8d 35 b3 87 01 00 	lea    0x187b3(%rip),%rsi        # 254f8 <secp192r1_p+0x18>
    cd45:	55                   	push   %rbp
    cd46:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
    cd4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cd54:	00 00 
    cd56:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    cd5d:	00 
    cd5e:	31 c0                	xor    %eax,%eax
    cd60:	e8 9b 75 ff ff       	callq  4300 <fopen64@plt>
    cd65:	48 85 c0             	test   %rax,%rax
    cd68:	0f 84 88 00 00 00    	je     cdf6 <mbedtls_hmac_drbg_write_seed_file+0xc6>
    cd6e:	48 89 c7             	mov    %rax,%rdi
    cd71:	31 f6                	xor    %esi,%esi
    cd73:	49 89 e5             	mov    %rsp,%r13
    cd76:	48 89 c5             	mov    %rax,%rbp
    cd79:	e8 02 75 ff ff       	callq  4280 <setbuf@plt>
    cd7e:	4c 89 e7             	mov    %r12,%rdi
    cd81:	45 31 c0             	xor    %r8d,%r8d
    cd84:	31 c9                	xor    %ecx,%ecx
    cd86:	ba 00 01 00 00       	mov    $0x100,%edx
    cd8b:	4c 89 ee             	mov    %r13,%rsi
    cd8e:	e8 7d fd ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    cd93:	41 89 c4             	mov    %eax,%r12d
    cd96:	85 c0                	test   %eax,%eax
    cd98:	75 24                	jne    cdbe <mbedtls_hmac_drbg_write_seed_file+0x8e>
    cd9a:	48 89 e9             	mov    %rbp,%rcx
    cd9d:	ba 00 01 00 00       	mov    $0x100,%edx
    cda2:	be 01 00 00 00       	mov    $0x1,%esi
    cda7:	4c 89 ef             	mov    %r13,%rdi
    cdaa:	e8 e1 75 ff ff       	callq  4390 <fwrite@plt>
    cdaf:	48 3d 00 01 00 00    	cmp    $0x100,%rax
    cdb5:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    cdba:	44 0f 45 e0          	cmovne %eax,%r12d
    cdbe:	48 89 ef             	mov    %rbp,%rdi
    cdc1:	e8 8a 74 ff ff       	callq  4250 <fclose@plt>
    cdc6:	be 00 01 00 00       	mov    $0x100,%esi
    cdcb:	4c 89 ef             	mov    %r13,%rdi
    cdce:	e8 dd 22 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    cdd3:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    cdda:	00 
    cddb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    cde2:	00 00 
    cde4:	75 18                	jne    cdfe <mbedtls_hmac_drbg_write_seed_file+0xce>
    cde6:	48 81 c4 10 01 00 00 	add    $0x110,%rsp
    cded:	44 89 e0             	mov    %r12d,%eax
    cdf0:	5d                   	pop    %rbp
    cdf1:	41 5c                	pop    %r12
    cdf3:	41 5d                	pop    %r13
    cdf5:	c3                   	retq   
    cdf6:	41 bc f9 ff ff ff    	mov    $0xfffffff9,%r12d
    cdfc:	eb d5                	jmp    cdd3 <mbedtls_hmac_drbg_write_seed_file+0xa3>
    cdfe:	e8 6d 74 ff ff       	callq  4270 <__stack_chk_fail@plt>
    ce03:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    ce0a:	00 00 00 00 
    ce0e:	66 90                	xchg   %ax,%ax

000000000000ce10 <mbedtls_hmac_drbg_update_seed_file>:
    ce10:	f3 0f 1e fa          	endbr64 
    ce14:	41 57                	push   %r15
    ce16:	41 56                	push   %r14
    ce18:	49 89 fe             	mov    %rdi,%r14
    ce1b:	41 55                	push   %r13
    ce1d:	49 89 f5             	mov    %rsi,%r13
    ce20:	48 8d 35 d4 86 01 00 	lea    0x186d4(%rip),%rsi        # 254fb <secp192r1_p+0x1b>
    ce27:	41 54                	push   %r12
    ce29:	4c 89 ef             	mov    %r13,%rdi
    ce2c:	55                   	push   %rbp
    ce2d:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
    ce34:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ce3b:	00 00 
    ce3d:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
    ce44:	00 
    ce45:	31 c0                	xor    %eax,%eax
    ce47:	e8 b4 74 ff ff       	callq  4300 <fopen64@plt>
    ce4c:	48 85 c0             	test   %rax,%rax
    ce4f:	0f 84 f6 00 00 00    	je     cf4b <mbedtls_hmac_drbg_update_seed_file+0x13b>
    ce55:	48 89 c5             	mov    %rax,%rbp
    ce58:	31 f6                	xor    %esi,%esi
    ce5a:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    ce5f:	48 89 c7             	mov    %rax,%rdi
    ce62:	e8 19 74 ff ff       	callq  4280 <setbuf@plt>
    ce67:	48 89 e9             	mov    %rbp,%rcx
    ce6a:	ba 00 01 00 00       	mov    $0x100,%edx
    ce6f:	4c 89 ff             	mov    %r15,%rdi
    ce72:	be 01 00 00 00       	mov    $0x1,%esi
    ce77:	e8 b4 73 ff ff       	callq  4230 <fread@plt>
    ce7c:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
    ce81:	48 89 e9             	mov    %rbp,%rcx
    ce84:	ba 01 00 00 00       	mov    $0x1,%edx
    ce89:	be 01 00 00 00       	mov    $0x1,%esi
    ce8e:	49 89 c4             	mov    %rax,%r12
    ce91:	e8 9a 73 ff ff       	callq  4230 <fread@plt>
    ce96:	48 85 c0             	test   %rax,%rax
    ce99:	0f 85 a1 00 00 00    	jne    cf40 <mbedtls_hmac_drbg_update_seed_file+0x130>
    ce9f:	4d 85 e4             	test   %r12,%r12
    cea2:	75 4c                	jne    cef0 <mbedtls_hmac_drbg_update_seed_file+0xe0>
    cea4:	41 bc f9 ff ff ff    	mov    $0xfffffff9,%r12d
    ceaa:	4c 89 ff             	mov    %r15,%rdi
    cead:	be 00 01 00 00       	mov    $0x100,%esi
    ceb2:	e8 f9 21 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    ceb7:	48 89 ef             	mov    %rbp,%rdi
    ceba:	e8 91 73 ff ff       	callq  4250 <fclose@plt>
    cebf:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
    cec6:	00 
    cec7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    cece:	00 00 
    ced0:	0f 85 80 00 00 00    	jne    cf56 <mbedtls_hmac_drbg_update_seed_file+0x146>
    ced6:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
    cedd:	44 89 e0             	mov    %r12d,%eax
    cee0:	5d                   	pop    %rbp
    cee1:	41 5c                	pop    %r12
    cee3:	41 5d                	pop    %r13
    cee5:	41 5e                	pop    %r14
    cee7:	41 5f                	pop    %r15
    cee9:	c3                   	retq   
    ceea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cef0:	48 89 ef             	mov    %rbp,%rdi
    cef3:	e8 28 73 ff ff       	callq  4220 <ferror@plt>
    cef8:	85 c0                	test   %eax,%eax
    cefa:	75 a8                	jne    cea4 <mbedtls_hmac_drbg_update_seed_file+0x94>
    cefc:	48 89 ef             	mov    %rbp,%rdi
    ceff:	e8 4c 73 ff ff       	callq  4250 <fclose@plt>
    cf04:	4c 89 e2             	mov    %r12,%rdx
    cf07:	4c 89 fe             	mov    %r15,%rsi
    cf0a:	4c 89 f7             	mov    %r14,%rdi
    cf0d:	e8 fe f6 ff ff       	callq  c610 <mbedtls_hmac_drbg_update>
    cf12:	be 00 01 00 00       	mov    $0x100,%esi
    cf17:	4c 89 ff             	mov    %r15,%rdi
    cf1a:	41 89 c4             	mov    %eax,%r12d
    cf1d:	e8 8e 21 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    cf22:	45 85 e4             	test   %r12d,%r12d
    cf25:	75 98                	jne    cebf <mbedtls_hmac_drbg_update_seed_file+0xaf>
    cf27:	4c 89 ee             	mov    %r13,%rsi
    cf2a:	4c 89 f7             	mov    %r14,%rdi
    cf2d:	e8 fe fd ff ff       	callq  cd30 <mbedtls_hmac_drbg_write_seed_file>
    cf32:	41 89 c4             	mov    %eax,%r12d
    cf35:	eb 88                	jmp    cebf <mbedtls_hmac_drbg_update_seed_file+0xaf>
    cf37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cf3e:	00 00 
    cf40:	41 bc fb ff ff ff    	mov    $0xfffffffb,%r12d
    cf46:	e9 5f ff ff ff       	jmpq   ceaa <mbedtls_hmac_drbg_update_seed_file+0x9a>
    cf4b:	41 bc f9 ff ff ff    	mov    $0xfffffff9,%r12d
    cf51:	e9 69 ff ff ff       	jmpq   cebf <mbedtls_hmac_drbg_update_seed_file+0xaf>
    cf56:	e8 15 73 ff ff       	callq  4270 <__stack_chk_fail@plt>
    cf5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cf60 <mbedtls_hmac_drbg_self_test>:
    cf60:	f3 0f 1e fa          	endbr64 
    cf64:	41 55                	push   %r13
    cf66:	41 54                	push   %r12
    cf68:	55                   	push   %rbp
    cf69:	53                   	push   %rbx
    cf6a:	89 fb                	mov    %edi,%ebx
    cf6c:	bf 02 00 00 00       	mov    $0x2,%edi
    cf71:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    cf78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cf7f:	00 00 
    cf81:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
    cf88:	00 
    cf89:	31 c0                	xor    %eax,%eax
    cf8b:	48 89 e5             	mov    %rsp,%rbp
    cf8e:	e8 6d 03 00 00       	callq  d300 <mbedtls_md_info_from_type>
    cf93:	b9 10 00 00 00       	mov    $0x10,%ecx
    cf98:	48 89 ef             	mov    %rbp,%rdi
    cf9b:	49 89 c4             	mov    %rax,%r12
    cf9e:	31 c0                	xor    %eax,%eax
    cfa0:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    cfa3:	c7 44 24 6c 10 27 00 	movl   $0x2710,0x6c(%rsp)
    cfaa:	00 
    cfab:	85 db                	test   %ebx,%ebx
    cfad:	0f 85 bd 01 00 00    	jne    d170 <mbedtls_hmac_drbg_self_test+0x210>
    cfb3:	45 31 c9             	xor    %r9d,%r9d
    cfb6:	45 31 c0             	xor    %r8d,%r8d
    cfb9:	48 8d 0d 80 86 01 00 	lea    0x18680(%rip),%rcx        # 25640 <entropy_pr>
    cfc0:	4c 89 e6             	mov    %r12,%rsi
    cfc3:	48 8d 15 a6 f5 ff ff 	lea    -0xa5a(%rip),%rdx        # c570 <hmac_drbg_self_test_entropy>
    cfca:	48 89 ef             	mov    %rbp,%rdi
    cfcd:	48 c7 05 78 51 02 00 	movq   $0x0,0x25178(%rip)        # 32150 <test_offset>
    cfd4:	00 00 00 00 
    cfd8:	e8 d3 f9 ff ff       	callq  c9b0 <mbedtls_hmac_drbg_seed>
    cfdd:	85 c0                	test   %eax,%eax
    cfdf:	74 2f                	je     d010 <mbedtls_hmac_drbg_self_test+0xb0>
    cfe1:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    cfe7:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
    cfee:	00 
    cfef:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    cff6:	00 00 
    cff8:	0f 85 fa 02 00 00    	jne    d2f8 <mbedtls_hmac_drbg_self_test+0x398>
    cffe:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    d005:	44 89 e0             	mov    %r12d,%eax
    d008:	5b                   	pop    %rbx
    d009:	5d                   	pop    %rbp
    d00a:	41 5c                	pop    %r12
    d00c:	41 5d                	pop    %r13
    d00e:	c3                   	retq   
    d00f:	90                   	nop
    d010:	4c 8d ac 24 80 00 00 	lea    0x80(%rsp),%r13
    d017:	00 
    d018:	45 31 c0             	xor    %r8d,%r8d
    d01b:	31 c9                	xor    %ecx,%ecx
    d01d:	48 89 ef             	mov    %rbp,%rdi
    d020:	ba 50 00 00 00       	mov    $0x50,%edx
    d025:	4c 89 ee             	mov    %r13,%rsi
    d028:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%rsp)
    d02f:	00 
    d030:	e8 db fa ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    d035:	85 c0                	test   %eax,%eax
    d037:	75 a8                	jne    cfe1 <mbedtls_hmac_drbg_self_test+0x81>
    d039:	45 31 c0             	xor    %r8d,%r8d
    d03c:	31 c9                	xor    %ecx,%ecx
    d03e:	ba 50 00 00 00       	mov    $0x50,%edx
    d043:	4c 89 ee             	mov    %r13,%rsi
    d046:	48 89 ef             	mov    %rbp,%rdi
    d049:	e8 c2 fa ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    d04e:	85 c0                	test   %eax,%eax
    d050:	75 8f                	jne    cfe1 <mbedtls_hmac_drbg_self_test+0x81>
    d052:	ba 50 00 00 00       	mov    $0x50,%edx
    d057:	48 8d 35 82 85 01 00 	lea    0x18582(%rip),%rsi        # 255e0 <result_pr>
    d05e:	4c 89 ef             	mov    %r13,%rdi
    d061:	e8 4a 72 ff ff       	callq  42b0 <memcmp@plt>
    d066:	85 c0                	test   %eax,%eax
    d068:	0f 85 73 ff ff ff    	jne    cfe1 <mbedtls_hmac_drbg_self_test+0x81>
    d06e:	48 89 ef             	mov    %rbp,%rdi
    d071:	e8 3a f5 ff ff       	callq  c5b0 <mbedtls_hmac_drbg_free.part.0>
    d076:	48 89 ef             	mov    %rbp,%rdi
    d079:	e8 32 f5 ff ff       	callq  c5b0 <mbedtls_hmac_drbg_free.part.0>
    d07e:	85 db                	test   %ebx,%ebx
    d080:	0f 85 aa 01 00 00    	jne    d230 <mbedtls_hmac_drbg_self_test+0x2d0>
    d086:	31 c0                	xor    %eax,%eax
    d088:	b9 10 00 00 00       	mov    $0x10,%ecx
    d08d:	48 89 ef             	mov    %rbp,%rdi
    d090:	45 31 c9             	xor    %r9d,%r9d
    d093:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d096:	45 31 c0             	xor    %r8d,%r8d
    d099:	48 8d 0d 00 85 01 00 	lea    0x18500(%rip),%rcx        # 255a0 <entropy_nopr>
    d0a0:	4c 89 e6             	mov    %r12,%rsi
    d0a3:	48 8d 15 c6 f4 ff ff 	lea    -0xb3a(%rip),%rdx        # c570 <hmac_drbg_self_test_entropy>
    d0aa:	48 89 ef             	mov    %rbp,%rdi
    d0ad:	c7 44 24 6c 10 27 00 	movl   $0x2710,0x6c(%rsp)
    d0b4:	00 
    d0b5:	48 c7 05 90 50 02 00 	movq   $0x0,0x25090(%rip)        # 32150 <test_offset>
    d0bc:	00 00 00 00 
    d0c0:	e8 eb f8 ff ff       	callq  c9b0 <mbedtls_hmac_drbg_seed>
    d0c5:	85 c0                	test   %eax,%eax
    d0c7:	0f 85 14 ff ff ff    	jne    cfe1 <mbedtls_hmac_drbg_self_test+0x81>
    d0cd:	31 c9                	xor    %ecx,%ecx
    d0cf:	31 d2                	xor    %edx,%edx
    d0d1:	31 f6                	xor    %esi,%esi
    d0d3:	48 89 ef             	mov    %rbp,%rdi
    d0d6:	e8 a5 f6 ff ff       	callq  c780 <hmac_drbg_reseed_core>
    d0db:	85 c0                	test   %eax,%eax
    d0dd:	0f 85 fe fe ff ff    	jne    cfe1 <mbedtls_hmac_drbg_self_test+0x81>
    d0e3:	45 31 c0             	xor    %r8d,%r8d
    d0e6:	31 c9                	xor    %ecx,%ecx
    d0e8:	ba 50 00 00 00       	mov    $0x50,%edx
    d0ed:	4c 89 ee             	mov    %r13,%rsi
    d0f0:	48 89 ef             	mov    %rbp,%rdi
    d0f3:	e8 18 fa ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    d0f8:	85 c0                	test   %eax,%eax
    d0fa:	0f 85 e1 fe ff ff    	jne    cfe1 <mbedtls_hmac_drbg_self_test+0x81>
    d100:	45 31 c0             	xor    %r8d,%r8d
    d103:	31 c9                	xor    %ecx,%ecx
    d105:	ba 50 00 00 00       	mov    $0x50,%edx
    d10a:	4c 89 ee             	mov    %r13,%rsi
    d10d:	48 89 ef             	mov    %rbp,%rdi
    d110:	e8 fb f9 ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    d115:	85 c0                	test   %eax,%eax
    d117:	0f 85 c4 fe ff ff    	jne    cfe1 <mbedtls_hmac_drbg_self_test+0x81>
    d11d:	ba 50 00 00 00       	mov    $0x50,%edx
    d122:	48 8d 35 17 84 01 00 	lea    0x18417(%rip),%rsi        # 25540 <result_nopr>
    d129:	4c 89 ef             	mov    %r13,%rdi
    d12c:	e8 7f 71 ff ff       	callq  42b0 <memcmp@plt>
    d131:	41 89 c4             	mov    %eax,%r12d
    d134:	85 c0                	test   %eax,%eax
    d136:	0f 85 af 01 00 00    	jne    d2eb <mbedtls_hmac_drbg_self_test+0x38b>
    d13c:	48 89 ef             	mov    %rbp,%rdi
    d13f:	e8 6c f4 ff ff       	callq  c5b0 <mbedtls_hmac_drbg_free.part.0>
    d144:	48 89 ef             	mov    %rbp,%rdi
    d147:	e8 64 f4 ff ff       	callq  c5b0 <mbedtls_hmac_drbg_free.part.0>
    d14c:	85 db                	test   %ebx,%ebx
    d14e:	0f 84 93 fe ff ff    	je     cfe7 <mbedtls_hmac_drbg_self_test+0x87>
    d154:	48 8d 3d 6c 0f 01 00 	lea    0x10f6c(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
    d15b:	e8 b0 70 ff ff       	callq  4210 <puts@plt>
    d160:	bf 0a 00 00 00       	mov    $0xa,%edi
    d165:	e8 96 70 ff ff       	callq  4200 <putchar@plt>
    d16a:	e9 78 fe ff ff       	jmpq   cfe7 <mbedtls_hmac_drbg_self_test+0x87>
    d16f:	90                   	nop
    d170:	48 8d 35 87 83 01 00 	lea    0x18387(%rip),%rsi        # 254fe <secp192r1_p+0x1e>
    d177:	bf 01 00 00 00       	mov    $0x1,%edi
    d17c:	e8 cf 71 ff ff       	callq  4350 <__printf_chk@plt>
    d181:	45 31 c9             	xor    %r9d,%r9d
    d184:	45 31 c0             	xor    %r8d,%r8d
    d187:	4c 89 e6             	mov    %r12,%rsi
    d18a:	48 8d 0d af 84 01 00 	lea    0x184af(%rip),%rcx        # 25640 <entropy_pr>
    d191:	48 89 ef             	mov    %rbp,%rdi
    d194:	48 8d 15 d5 f3 ff ff 	lea    -0xc2b(%rip),%rdx        # c570 <hmac_drbg_self_test_entropy>
    d19b:	48 c7 05 aa 4f 02 00 	movq   $0x0,0x24faa(%rip)        # 32150 <test_offset>
    d1a2:	00 00 00 00 
    d1a6:	e8 05 f8 ff ff       	callq  c9b0 <mbedtls_hmac_drbg_seed>
    d1ab:	85 c0                	test   %eax,%eax
    d1ad:	74 21                	je     d1d0 <mbedtls_hmac_drbg_self_test+0x270>
    d1af:	48 8d 3d 67 8e 01 00 	lea    0x18e67(%rip),%rdi        # 2601d <sha1_test_buf+0xbd>
    d1b6:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    d1bc:	e8 4f 70 ff ff       	callq  4210 <puts@plt>
    d1c1:	e9 21 fe ff ff       	jmpq   cfe7 <mbedtls_hmac_drbg_self_test+0x87>
    d1c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d1cd:	00 00 00 
    d1d0:	4c 8d ac 24 80 00 00 	lea    0x80(%rsp),%r13
    d1d7:	00 
    d1d8:	45 31 c0             	xor    %r8d,%r8d
    d1db:	31 c9                	xor    %ecx,%ecx
    d1dd:	48 89 ef             	mov    %rbp,%rdi
    d1e0:	ba 50 00 00 00       	mov    $0x50,%edx
    d1e5:	4c 89 ee             	mov    %r13,%rsi
    d1e8:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%rsp)
    d1ef:	00 
    d1f0:	e8 1b f9 ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    d1f5:	85 c0                	test   %eax,%eax
    d1f7:	75 b6                	jne    d1af <mbedtls_hmac_drbg_self_test+0x24f>
    d1f9:	45 31 c0             	xor    %r8d,%r8d
    d1fc:	31 c9                	xor    %ecx,%ecx
    d1fe:	ba 50 00 00 00       	mov    $0x50,%edx
    d203:	4c 89 ee             	mov    %r13,%rsi
    d206:	48 89 ef             	mov    %rbp,%rdi
    d209:	e8 02 f9 ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    d20e:	85 c0                	test   %eax,%eax
    d210:	75 9d                	jne    d1af <mbedtls_hmac_drbg_self_test+0x24f>
    d212:	ba 50 00 00 00       	mov    $0x50,%edx
    d217:	48 8d 35 c2 83 01 00 	lea    0x183c2(%rip),%rsi        # 255e0 <result_pr>
    d21e:	4c 89 ef             	mov    %r13,%rdi
    d221:	e8 8a 70 ff ff       	callq  42b0 <memcmp@plt>
    d226:	85 c0                	test   %eax,%eax
    d228:	75 85                	jne    d1af <mbedtls_hmac_drbg_self_test+0x24f>
    d22a:	e9 3f fe ff ff       	jmpq   d06e <mbedtls_hmac_drbg_self_test+0x10e>
    d22f:	90                   	nop
    d230:	48 8d 3d 90 0e 01 00 	lea    0x10e90(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
    d237:	e8 d4 6f ff ff       	callq  4210 <puts@plt>
    d23c:	48 8d 35 d6 82 01 00 	lea    0x182d6(%rip),%rsi        # 25519 <secp192r1_p+0x39>
    d243:	bf 01 00 00 00       	mov    $0x1,%edi
    d248:	31 c0                	xor    %eax,%eax
    d24a:	e8 01 71 ff ff       	callq  4350 <__printf_chk@plt>
    d24f:	31 c0                	xor    %eax,%eax
    d251:	b9 10 00 00 00       	mov    $0x10,%ecx
    d256:	48 89 ef             	mov    %rbp,%rdi
    d259:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d25c:	45 31 c9             	xor    %r9d,%r9d
    d25f:	45 31 c0             	xor    %r8d,%r8d
    d262:	48 8d 0d 37 83 01 00 	lea    0x18337(%rip),%rcx        # 255a0 <entropy_nopr>
    d269:	48 8d 15 00 f3 ff ff 	lea    -0xd00(%rip),%rdx        # c570 <hmac_drbg_self_test_entropy>
    d270:	4c 89 e6             	mov    %r12,%rsi
    d273:	48 89 ef             	mov    %rbp,%rdi
    d276:	c7 44 24 6c 10 27 00 	movl   $0x2710,0x6c(%rsp)
    d27d:	00 
    d27e:	48 c7 05 c7 4e 02 00 	movq   $0x0,0x24ec7(%rip)        # 32150 <test_offset>
    d285:	00 00 00 00 
    d289:	e8 22 f7 ff ff       	callq  c9b0 <mbedtls_hmac_drbg_seed>
    d28e:	85 c0                	test   %eax,%eax
    d290:	0f 85 19 ff ff ff    	jne    d1af <mbedtls_hmac_drbg_self_test+0x24f>
    d296:	31 c9                	xor    %ecx,%ecx
    d298:	31 d2                	xor    %edx,%edx
    d29a:	31 f6                	xor    %esi,%esi
    d29c:	48 89 ef             	mov    %rbp,%rdi
    d29f:	e8 dc f4 ff ff       	callq  c780 <hmac_drbg_reseed_core>
    d2a4:	85 c0                	test   %eax,%eax
    d2a6:	0f 85 03 ff ff ff    	jne    d1af <mbedtls_hmac_drbg_self_test+0x24f>
    d2ac:	45 31 c0             	xor    %r8d,%r8d
    d2af:	31 c9                	xor    %ecx,%ecx
    d2b1:	ba 50 00 00 00       	mov    $0x50,%edx
    d2b6:	4c 89 ee             	mov    %r13,%rsi
    d2b9:	48 89 ef             	mov    %rbp,%rdi
    d2bc:	e8 4f f8 ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    d2c1:	85 c0                	test   %eax,%eax
    d2c3:	0f 85 e6 fe ff ff    	jne    d1af <mbedtls_hmac_drbg_self_test+0x24f>
    d2c9:	45 31 c0             	xor    %r8d,%r8d
    d2cc:	31 c9                	xor    %ecx,%ecx
    d2ce:	ba 50 00 00 00       	mov    $0x50,%edx
    d2d3:	4c 89 ee             	mov    %r13,%rsi
    d2d6:	48 89 ef             	mov    %rbp,%rdi
    d2d9:	e8 32 f8 ff ff       	callq  cb10 <mbedtls_hmac_drbg_random_with_add>
    d2de:	85 c0                	test   %eax,%eax
    d2e0:	0f 84 37 fe ff ff    	je     d11d <mbedtls_hmac_drbg_self_test+0x1bd>
    d2e6:	e9 c4 fe ff ff       	jmpq   d1af <mbedtls_hmac_drbg_self_test+0x24f>
    d2eb:	85 db                	test   %ebx,%ebx
    d2ed:	0f 84 ee fc ff ff    	je     cfe1 <mbedtls_hmac_drbg_self_test+0x81>
    d2f3:	e9 b7 fe ff ff       	jmpq   d1af <mbedtls_hmac_drbg_self_test+0x24f>
    d2f8:	e8 73 6f ff ff       	callq  4270 <__stack_chk_fail@plt>
    d2fd:	0f 1f 00             	nopl   (%rax)

000000000000d300 <mbedtls_md_info_from_type>:
    d300:	f3 0f 1e fa          	endbr64 
    d304:	83 ff 07             	cmp    $0x7,%edi
    d307:	77 7f                	ja     d388 <mbedtls_md_info_from_type+0x88>
    d309:	48 8d 15 70 83 01 00 	lea    0x18370(%rip),%rdx        # 25680 <entropy_pr+0x40>
    d310:	89 ff                	mov    %edi,%edi
    d312:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
    d316:	48 01 d0             	add    %rdx,%rax
    d319:	3e ff e0             	notrack jmpq *%rax
    d31c:	0f 1f 40 00          	nopl   0x0(%rax)
    d320:	48 8d 05 a9 49 02 00 	lea    0x249a9(%rip),%rax        # 31cd0 <mbedtls_ripemd160_info>
    d327:	c3                   	retq   
    d328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d32f:	00 
    d330:	48 8d 05 a9 49 02 00 	lea    0x249a9(%rip),%rax        # 31ce0 <mbedtls_md5_info>
    d337:	c3                   	retq   
    d338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d33f:	00 
    d340:	48 8d 05 79 49 02 00 	lea    0x24979(%rip),%rax        # 31cc0 <mbedtls_sha1_info>
    d347:	c3                   	retq   
    d348:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d34f:	00 
    d350:	48 8d 05 59 49 02 00 	lea    0x24959(%rip),%rax        # 31cb0 <mbedtls_sha224_info>
    d357:	c3                   	retq   
    d358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d35f:	00 
    d360:	48 8d 05 29 49 02 00 	lea    0x24929(%rip),%rax        # 31c90 <mbedtls_sha384_info>
    d367:	c3                   	retq   
    d368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d36f:	00 
    d370:	48 8d 05 09 49 02 00 	lea    0x24909(%rip),%rax        # 31c80 <mbedtls_sha512_info>
    d377:	c3                   	retq   
    d378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d37f:	00 
    d380:	48 8d 05 19 49 02 00 	lea    0x24919(%rip),%rax        # 31ca0 <mbedtls_sha256_info>
    d387:	c3                   	retq   
    d388:	31 c0                	xor    %eax,%eax
    d38a:	c3                   	retq   
    d38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d390 <mbedtls_md_init>:
    d390:	f3 0f 1e fa          	endbr64 
    d394:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d398:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    d39f:	00 
    d3a0:	0f 11 07             	movups %xmm0,(%rdi)
    d3a3:	c3                   	retq   
    d3a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d3ab:	00 00 00 00 
    d3af:	90                   	nop

000000000000d3b0 <mbedtls_md_free>:
    d3b0:	f3 0f 1e fa          	endbr64 
    d3b4:	48 85 ff             	test   %rdi,%rdi
    d3b7:	0f 84 c3 00 00 00    	je     d480 <mbedtls_md_free+0xd0>
    d3bd:	55                   	push   %rbp
    d3be:	48 8b 07             	mov    (%rdi),%rax
    d3c1:	48 89 fd             	mov    %rdi,%rbp
    d3c4:	48 85 c0             	test   %rax,%rax
    d3c7:	74 67                	je     d430 <mbedtls_md_free+0x80>
    d3c9:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d3cd:	48 85 ff             	test   %rdi,%rdi
    d3d0:	74 2c                	je     d3fe <mbedtls_md_free+0x4e>
    d3d2:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    d3d6:	77 21                	ja     d3f9 <mbedtls_md_free+0x49>
    d3d8:	8b 40 08             	mov    0x8(%rax),%eax
    d3db:	48 8d 15 be 82 01 00 	lea    0x182be(%rip),%rdx        # 256a0 <entropy_pr+0x60>
    d3e2:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    d3e6:	48 01 d0             	add    %rdx,%rax
    d3e9:	3e ff e0             	notrack jmpq *%rax
    d3ec:	0f 1f 40 00          	nopl   0x0(%rax)
    d3f0:	e8 1b 0e 00 00       	callq  e210 <mbedtls_md5_free>
    d3f5:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    d3f9:	e8 f2 6d ff ff       	callq  41f0 <free@plt>
    d3fe:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    d402:	48 85 ff             	test   %rdi,%rdi
    d405:	74 1b                	je     d422 <mbedtls_md_free+0x72>
    d407:	48 8b 45 00          	mov    0x0(%rbp),%rax
    d40b:	0f b6 70 0d          	movzbl 0xd(%rax),%esi
    d40f:	01 f6                	add    %esi,%esi
    d411:	48 63 f6             	movslq %esi,%rsi
    d414:	e8 97 1c 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    d419:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    d41d:	e8 ce 6d ff ff       	callq  41f0 <free@plt>
    d422:	48 89 ef             	mov    %rbp,%rdi
    d425:	be 18 00 00 00       	mov    $0x18,%esi
    d42a:	5d                   	pop    %rbp
    d42b:	e9 80 1c 00 00       	jmpq   f0b0 <mbedtls_platform_zeroize>
    d430:	5d                   	pop    %rbp
    d431:	c3                   	retq   
    d432:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d438:	e8 73 68 00 00       	callq  13cb0 <mbedtls_sha512_free>
    d43d:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    d441:	e8 aa 6d ff ff       	callq  41f0 <free@plt>
    d446:	eb b6                	jmp    d3fe <mbedtls_md_free+0x4e>
    d448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d44f:	00 
    d450:	e8 7b 53 00 00       	callq  127d0 <mbedtls_sha256_free>
    d455:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    d459:	e8 92 6d ff ff       	callq  41f0 <free@plt>
    d45e:	eb 9e                	jmp    d3fe <mbedtls_md_free+0x4e>
    d460:	e8 3b 1d 00 00       	callq  f1a0 <mbedtls_ripemd160_free>
    d465:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    d469:	eb 8e                	jmp    d3f9 <mbedtls_md_free+0x49>
    d46b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d470:	e8 bb 39 00 00       	callq  10e30 <mbedtls_sha1_free>
    d475:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    d479:	e9 7b ff ff ff       	jmpq   d3f9 <mbedtls_md_free+0x49>
    d47e:	66 90                	xchg   %ax,%ax
    d480:	c3                   	retq   
    d481:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d488:	00 00 00 00 
    d48c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d490 <mbedtls_md_clone>:
    d490:	f3 0f 1e fa          	endbr64 
    d494:	48 85 ff             	test   %rdi,%rdi
    d497:	0f 84 cb 00 00 00    	je     d568 <mbedtls_md_clone+0xd8>
    d49d:	48 8b 17             	mov    (%rdi),%rdx
    d4a0:	48 85 d2             	test   %rdx,%rdx
    d4a3:	0f 84 bf 00 00 00    	je     d568 <mbedtls_md_clone+0xd8>
    d4a9:	48 85 f6             	test   %rsi,%rsi
    d4ac:	0f 84 b6 00 00 00    	je     d568 <mbedtls_md_clone+0xd8>
    d4b2:	48 8b 06             	mov    (%rsi),%rax
    d4b5:	48 39 c2             	cmp    %rax,%rdx
    d4b8:	0f 85 aa 00 00 00    	jne    d568 <mbedtls_md_clone+0xd8>
    d4be:	48 85 c0             	test   %rax,%rax
    d4c1:	0f 84 a1 00 00 00    	je     d568 <mbedtls_md_clone+0xd8>
    d4c7:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    d4cb:	0f 87 97 00 00 00    	ja     d568 <mbedtls_md_clone+0xd8>
    d4d1:	48 83 ec 08          	sub    $0x8,%rsp
    d4d5:	8b 40 08             	mov    0x8(%rax),%eax
    d4d8:	48 8d 15 e1 81 01 00 	lea    0x181e1(%rip),%rdx        # 256c0 <entropy_pr+0x80>
    d4df:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    d4e3:	48 01 d0             	add    %rdx,%rax
    d4e6:	3e ff e0             	notrack jmpq *%rax
    d4e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d4f0:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    d4f4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d4f8:	e8 d3 67 00 00       	callq  13cd0 <mbedtls_sha512_clone>
    d4fd:	31 c0                	xor    %eax,%eax
    d4ff:	48 83 c4 08          	add    $0x8,%rsp
    d503:	c3                   	retq   
    d504:	0f 1f 40 00          	nopl   0x0(%rax)
    d508:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    d50c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d510:	e8 db 52 00 00       	callq  127f0 <mbedtls_sha256_clone>
    d515:	31 c0                	xor    %eax,%eax
    d517:	48 83 c4 08          	add    $0x8,%rsp
    d51b:	c3                   	retq   
    d51c:	0f 1f 40 00          	nopl   0x0(%rax)
    d520:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    d524:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d528:	e8 23 39 00 00       	callq  10e50 <mbedtls_sha1_clone>
    d52d:	31 c0                	xor    %eax,%eax
    d52f:	48 83 c4 08          	add    $0x8,%rsp
    d533:	c3                   	retq   
    d534:	0f 1f 40 00          	nopl   0x0(%rax)
    d538:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    d53c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d540:	e8 7b 1c 00 00       	callq  f1c0 <mbedtls_ripemd160_clone>
    d545:	31 c0                	xor    %eax,%eax
    d547:	48 83 c4 08          	add    $0x8,%rsp
    d54b:	c3                   	retq   
    d54c:	0f 1f 40 00          	nopl   0x0(%rax)
    d550:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    d554:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d558:	e8 d3 0c 00 00       	callq  e230 <mbedtls_md5_clone>
    d55d:	31 c0                	xor    %eax,%eax
    d55f:	48 83 c4 08          	add    $0x8,%rsp
    d563:	c3                   	retq   
    d564:	0f 1f 40 00          	nopl   0x0(%rax)
    d568:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    d56d:	c3                   	retq   
    d56e:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    d573:	eb 8a                	jmp    d4ff <mbedtls_md_clone+0x6f>
    d575:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d57c:	00 00 00 00 

000000000000d580 <mbedtls_md_setup>:
    d580:	f3 0f 1e fa          	endbr64 
    d584:	48 85 f6             	test   %rsi,%rsi
    d587:	0f 84 4e 01 00 00    	je     d6db <mbedtls_md_setup+0x15b>
    d58d:	41 54                	push   %r12
    d58f:	55                   	push   %rbp
    d590:	48 89 fd             	mov    %rdi,%rbp
    d593:	53                   	push   %rbx
    d594:	48 85 ff             	test   %rdi,%rdi
    d597:	0f 84 34 01 00 00    	je     d6d1 <mbedtls_md_setup+0x151>
    d59d:	83 7e 08 07          	cmpl   $0x7,0x8(%rsi)
    d5a1:	48 89 37             	mov    %rsi,(%rdi)
    d5a4:	48 89 f3             	mov    %rsi,%rbx
    d5a7:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    d5ae:	00 
    d5af:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    d5b6:	00 
    d5b7:	0f 87 14 01 00 00    	ja     d6d1 <mbedtls_md_setup+0x151>
    d5bd:	8b 46 08             	mov    0x8(%rsi),%eax
    d5c0:	41 89 d4             	mov    %edx,%r12d
    d5c3:	48 8d 15 16 81 01 00 	lea    0x18116(%rip),%rdx        # 256e0 <entropy_pr+0xa0>
    d5ca:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    d5ce:	48 01 d0             	add    %rdx,%rax
    d5d1:	3e ff e0             	notrack jmpq *%rax
    d5d4:	0f 1f 40 00          	nopl   0x0(%rax)
    d5d8:	bf 01 00 00 00       	mov    $0x1,%edi
    d5dd:	be d8 00 00 00       	mov    $0xd8,%esi
    d5e2:	e8 e9 6c ff ff       	callq  42d0 <calloc@plt>
    d5e7:	48 89 45 08          	mov    %rax,0x8(%rbp)
    d5eb:	48 89 c7             	mov    %rax,%rdi
    d5ee:	48 85 c0             	test   %rax,%rax
    d5f1:	74 34                	je     d627 <mbedtls_md_setup+0xa7>
    d5f3:	e8 78 66 00 00       	callq  13c70 <mbedtls_sha512_init>
    d5f8:	45 85 e4             	test   %r12d,%r12d
    d5fb:	75 0b                	jne    d608 <mbedtls_md_setup+0x88>
    d5fd:	31 c0                	xor    %eax,%eax
    d5ff:	5b                   	pop    %rbx
    d600:	5d                   	pop    %rbp
    d601:	41 5c                	pop    %r12
    d603:	c3                   	retq   
    d604:	0f 1f 40 00          	nopl   0x0(%rax)
    d608:	0f b6 73 0d          	movzbl 0xd(%rbx),%esi
    d60c:	bf 02 00 00 00       	mov    $0x2,%edi
    d611:	e8 ba 6c ff ff       	callq  42d0 <calloc@plt>
    d616:	48 89 45 10          	mov    %rax,0x10(%rbp)
    d61a:	48 85 c0             	test   %rax,%rax
    d61d:	75 de                	jne    d5fd <mbedtls_md_setup+0x7d>
    d61f:	48 89 ef             	mov    %rbp,%rdi
    d622:	e8 89 fd ff ff       	callq  d3b0 <mbedtls_md_free>
    d627:	b8 80 ae ff ff       	mov    $0xffffae80,%eax
    d62c:	eb d1                	jmp    d5ff <mbedtls_md_setup+0x7f>
    d62e:	66 90                	xchg   %ax,%ax
    d630:	bf 01 00 00 00       	mov    $0x1,%edi
    d635:	be 6c 00 00 00       	mov    $0x6c,%esi
    d63a:	e8 91 6c ff ff       	callq  42d0 <calloc@plt>
    d63f:	48 89 45 08          	mov    %rax,0x8(%rbp)
    d643:	48 89 c7             	mov    %rax,%rdi
    d646:	48 85 c0             	test   %rax,%rax
    d649:	74 dc                	je     d627 <mbedtls_md_setup+0xa7>
    d64b:	e8 50 51 00 00       	callq  127a0 <mbedtls_sha256_init>
    d650:	eb a6                	jmp    d5f8 <mbedtls_md_setup+0x78>
    d652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d658:	bf 01 00 00 00       	mov    $0x1,%edi
    d65d:	be 5c 00 00 00       	mov    $0x5c,%esi
    d662:	e8 69 6c ff ff       	callq  42d0 <calloc@plt>
    d667:	48 89 45 08          	mov    %rax,0x8(%rbp)
    d66b:	48 89 c7             	mov    %rax,%rdi
    d66e:	48 85 c0             	test   %rax,%rax
    d671:	74 b4                	je     d627 <mbedtls_md_setup+0xa7>
    d673:	e8 f8 1a 00 00       	callq  f170 <mbedtls_ripemd160_init>
    d678:	e9 7b ff ff ff       	jmpq   d5f8 <mbedtls_md_setup+0x78>
    d67d:	0f 1f 00             	nopl   (%rax)
    d680:	bf 01 00 00 00       	mov    $0x1,%edi
    d685:	be 58 00 00 00       	mov    $0x58,%esi
    d68a:	e8 41 6c ff ff       	callq  42d0 <calloc@plt>
    d68f:	48 89 45 08          	mov    %rax,0x8(%rbp)
    d693:	48 89 c7             	mov    %rax,%rdi
    d696:	48 85 c0             	test   %rax,%rax
    d699:	74 8c                	je     d627 <mbedtls_md_setup+0xa7>
    d69b:	e8 40 0b 00 00       	callq  e1e0 <mbedtls_md5_init>
    d6a0:	e9 53 ff ff ff       	jmpq   d5f8 <mbedtls_md_setup+0x78>
    d6a5:	0f 1f 00             	nopl   (%rax)
    d6a8:	bf 01 00 00 00       	mov    $0x1,%edi
    d6ad:	be 5c 00 00 00       	mov    $0x5c,%esi
    d6b2:	e8 19 6c ff ff       	callq  42d0 <calloc@plt>
    d6b7:	48 89 45 08          	mov    %rax,0x8(%rbp)
    d6bb:	48 89 c7             	mov    %rax,%rdi
    d6be:	48 85 c0             	test   %rax,%rax
    d6c1:	0f 84 60 ff ff ff    	je     d627 <mbedtls_md_setup+0xa7>
    d6c7:	e8 34 37 00 00       	callq  10e00 <mbedtls_sha1_init>
    d6cc:	e9 27 ff ff ff       	jmpq   d5f8 <mbedtls_md_setup+0x78>
    d6d1:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    d6d6:	e9 24 ff ff ff       	jmpq   d5ff <mbedtls_md_setup+0x7f>
    d6db:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    d6e0:	c3                   	retq   
    d6e1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d6e8:	00 00 00 00 
    d6ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d6f0 <mbedtls_md_starts>:
    d6f0:	f3 0f 1e fa          	endbr64 
    d6f4:	48 85 ff             	test   %rdi,%rdi
    d6f7:	0f 84 9e 00 00 00    	je     d79b <mbedtls_md_starts+0xab>
    d6fd:	48 8b 07             	mov    (%rdi),%rax
    d700:	48 85 c0             	test   %rax,%rax
    d703:	0f 84 92 00 00 00    	je     d79b <mbedtls_md_starts+0xab>
    d709:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    d70d:	0f 87 88 00 00 00    	ja     d79b <mbedtls_md_starts+0xab>
    d713:	8b 40 08             	mov    0x8(%rax),%eax
    d716:	48 8d 15 e3 7f 01 00 	lea    0x17fe3(%rip),%rdx        # 25700 <entropy_pr+0xc0>
    d71d:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    d721:	48 01 d0             	add    %rdx,%rax
    d724:	3e ff e0             	notrack jmpq *%rax
    d727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d72e:	00 00 
    d730:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d734:	e9 c7 1a 00 00       	jmpq   f200 <mbedtls_ripemd160_starts>
    d739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d740:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d744:	e9 27 0b 00 00       	jmpq   e270 <mbedtls_md5_starts>
    d749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d750:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d754:	e9 37 37 00 00       	jmpq   10e90 <mbedtls_sha1_starts>
    d759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d760:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d764:	be 01 00 00 00       	mov    $0x1,%esi
    d769:	e9 d2 50 00 00       	jmpq   12840 <mbedtls_sha256_starts>
    d76e:	66 90                	xchg   %ax,%ax
    d770:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d774:	31 f6                	xor    %esi,%esi
    d776:	e9 c5 50 00 00       	jmpq   12840 <mbedtls_sha256_starts>
    d77b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d780:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d784:	be 01 00 00 00       	mov    $0x1,%esi
    d789:	e9 f2 65 00 00       	jmpq   13d80 <mbedtls_sha512_starts>
    d78e:	66 90                	xchg   %ax,%ax
    d790:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d794:	31 f6                	xor    %esi,%esi
    d796:	e9 e5 65 00 00       	jmpq   13d80 <mbedtls_sha512_starts>
    d79b:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    d7a0:	c3                   	retq   
    d7a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d7a8:	00 00 00 00 
    d7ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d7b0 <mbedtls_md_update>:
    d7b0:	f3 0f 1e fa          	endbr64 
    d7b4:	48 85 ff             	test   %rdi,%rdi
    d7b7:	74 70                	je     d829 <mbedtls_md_update+0x79>
    d7b9:	48 8b 07             	mov    (%rdi),%rax
    d7bc:	48 85 c0             	test   %rax,%rax
    d7bf:	74 68                	je     d829 <mbedtls_md_update+0x79>
    d7c1:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    d7c5:	77 62                	ja     d829 <mbedtls_md_update+0x79>
    d7c7:	8b 40 08             	mov    0x8(%rax),%eax
    d7ca:	48 8d 0d 4f 7f 01 00 	lea    0x17f4f(%rip),%rcx        # 25720 <entropy_pr+0xe0>
    d7d1:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    d7d5:	48 01 c8             	add    %rcx,%rax
    d7d8:	3e ff e0             	notrack jmpq *%rax
    d7db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d7e0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d7e4:	e9 87 6e 00 00       	jmpq   14670 <mbedtls_sha512_update>
    d7e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d7f0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d7f4:	e9 27 5e 00 00       	jmpq   13620 <mbedtls_sha256_update>
    d7f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d800:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d804:	e9 27 4b 00 00       	jmpq   12330 <mbedtls_sha1_update>
    d809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d810:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d814:	e9 c7 32 00 00       	jmpq   10ae0 <mbedtls_ripemd160_update>
    d819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d820:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d824:	e9 67 14 00 00       	jmpq   ec90 <mbedtls_md5_update>
    d829:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    d82e:	c3                   	retq   
    d82f:	90                   	nop

000000000000d830 <mbedtls_md_finish>:
    d830:	f3 0f 1e fa          	endbr64 
    d834:	48 85 ff             	test   %rdi,%rdi
    d837:	74 70                	je     d8a9 <mbedtls_md_finish+0x79>
    d839:	48 8b 07             	mov    (%rdi),%rax
    d83c:	48 85 c0             	test   %rax,%rax
    d83f:	74 68                	je     d8a9 <mbedtls_md_finish+0x79>
    d841:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    d845:	77 62                	ja     d8a9 <mbedtls_md_finish+0x79>
    d847:	8b 40 08             	mov    0x8(%rax),%eax
    d84a:	48 8d 15 ef 7e 01 00 	lea    0x17eef(%rip),%rdx        # 25740 <entropy_pr+0x100>
    d851:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    d855:	48 01 d0             	add    %rdx,%rax
    d858:	3e ff e0             	notrack jmpq *%rax
    d85b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d860:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d864:	e9 27 6e 00 00       	jmpq   14690 <mbedtls_sha512_finish>
    d869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d870:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d874:	e9 c7 5d 00 00       	jmpq   13640 <mbedtls_sha256_finish>
    d879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d880:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d884:	e9 c7 4a 00 00       	jmpq   12350 <mbedtls_sha1_finish>
    d889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d890:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d894:	e9 67 32 00 00       	jmpq   10b00 <mbedtls_ripemd160_finish>
    d899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d8a0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    d8a4:	e9 07 14 00 00       	jmpq   ecb0 <mbedtls_md5_finish>
    d8a9:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    d8ae:	c3                   	retq   
    d8af:	90                   	nop

000000000000d8b0 <mbedtls_md>:
    d8b0:	f3 0f 1e fa          	endbr64 
    d8b4:	49 89 f0             	mov    %rsi,%r8
    d8b7:	48 89 d6             	mov    %rdx,%rsi
    d8ba:	48 89 ca             	mov    %rcx,%rdx
    d8bd:	48 85 ff             	test   %rdi,%rdi
    d8c0:	0f 84 84 00 00 00    	je     d94a <mbedtls_md+0x9a>
    d8c6:	83 7f 08 07          	cmpl   $0x7,0x8(%rdi)
    d8ca:	77 7e                	ja     d94a <mbedtls_md+0x9a>
    d8cc:	8b 47 08             	mov    0x8(%rdi),%eax
    d8cf:	48 8d 0d 8a 7e 01 00 	lea    0x17e8a(%rip),%rcx        # 25760 <entropy_pr+0x120>
    d8d6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    d8da:	48 01 c8             	add    %rcx,%rax
    d8dd:	3e ff e0             	notrack jmpq *%rax
    d8e0:	4c 89 c7             	mov    %r8,%rdi
    d8e3:	e9 e8 32 00 00       	jmpq   10bd0 <mbedtls_ripemd160>
    d8e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d8ef:	00 
    d8f0:	4c 89 c7             	mov    %r8,%rdi
    d8f3:	e9 08 15 00 00       	jmpq   ee00 <mbedtls_md5>
    d8f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d8ff:	00 
    d900:	4c 89 c7             	mov    %r8,%rdi
    d903:	e9 a8 4b 00 00       	jmpq   124b0 <mbedtls_sha1>
    d908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d90f:	00 
    d910:	b9 01 00 00 00       	mov    $0x1,%ecx
    d915:	4c 89 c7             	mov    %r8,%rdi
    d918:	e9 e3 61 00 00       	jmpq   13b00 <mbedtls_sha256>
    d91d:	0f 1f 00             	nopl   (%rax)
    d920:	31 c9                	xor    %ecx,%ecx
    d922:	4c 89 c7             	mov    %r8,%rdi
    d925:	e9 d6 61 00 00       	jmpq   13b00 <mbedtls_sha256>
    d92a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d930:	b9 01 00 00 00       	mov    $0x1,%ecx
    d935:	4c 89 c7             	mov    %r8,%rdi
    d938:	e9 23 73 00 00       	jmpq   14c60 <mbedtls_sha512>
    d93d:	0f 1f 00             	nopl   (%rax)
    d940:	31 c9                	xor    %ecx,%ecx
    d942:	4c 89 c7             	mov    %r8,%rdi
    d945:	e9 16 73 00 00       	jmpq   14c60 <mbedtls_sha512>
    d94a:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    d94f:	c3                   	retq   

000000000000d950 <mbedtls_md_get_size>:
    d950:	f3 0f 1e fa          	endbr64 
    d954:	48 85 ff             	test   %rdi,%rdi
    d957:	74 07                	je     d960 <mbedtls_md_get_size+0x10>
    d959:	0f b6 47 0c          	movzbl 0xc(%rdi),%eax
    d95d:	c3                   	retq   
    d95e:	66 90                	xchg   %ax,%ax
    d960:	31 c0                	xor    %eax,%eax
    d962:	c3                   	retq   
    d963:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d96a:	00 00 00 00 
    d96e:	66 90                	xchg   %ax,%ax

000000000000d970 <mbedtls_md_get_type>:
    d970:	f3 0f 1e fa          	endbr64 
    d974:	48 85 ff             	test   %rdi,%rdi
    d977:	74 07                	je     d980 <mbedtls_md_get_type+0x10>
    d979:	8b 47 08             	mov    0x8(%rdi),%eax
    d97c:	c3                   	retq   
    d97d:	0f 1f 00             	nopl   (%rax)
    d980:	31 c0                	xor    %eax,%eax
    d982:	c3                   	retq   
    d983:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d98a:	00 00 00 00 
    d98e:	66 90                	xchg   %ax,%ax

000000000000d990 <mbedtls_md_list>:
    d990:	f3 0f 1e fa          	endbr64 
    d994:	48 8d 05 e5 7d 01 00 	lea    0x17de5(%rip),%rax        # 25780 <supported_digests>
    d99b:	c3                   	retq   
    d99c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d9a0 <mbedtls_md_info_from_string>:
    d9a0:	f3 0f 1e fa          	endbr64 
    d9a4:	48 89 f8             	mov    %rdi,%rax
    d9a7:	48 85 ff             	test   %rdi,%rdi
    d9aa:	0f 84 20 01 00 00    	je     dad0 <mbedtls_md_info_from_string+0x130>
    d9b0:	b9 04 00 00 00       	mov    $0x4,%ecx
    d9b5:	48 8d 35 e4 7d 01 00 	lea    0x17de4(%rip),%rsi        # 257a0 <supported_digests+0x20>
    d9bc:	4c 8d 05 1d 43 02 00 	lea    0x2431d(%rip),%r8        # 31ce0 <mbedtls_md5_info>
    d9c3:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    d9c5:	0f 97 c2             	seta   %dl
    d9c8:	80 da 00             	sbb    $0x0,%dl
    d9cb:	84 d2                	test   %dl,%dl
    d9cd:	0f 84 f9 00 00 00    	je     dacc <mbedtls_md_info_from_string+0x12c>
    d9d3:	b9 0a 00 00 00       	mov    $0xa,%ecx
    d9d8:	48 8d 35 c5 7d 01 00 	lea    0x17dc5(%rip),%rsi        # 257a4 <supported_digests+0x24>
    d9df:	48 89 c7             	mov    %rax,%rdi
    d9e2:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    d9e4:	4c 8d 05 e5 42 02 00 	lea    0x242e5(%rip),%r8        # 31cd0 <mbedtls_ripemd160_info>
    d9eb:	0f 97 c2             	seta   %dl
    d9ee:	80 da 00             	sbb    $0x0,%dl
    d9f1:	84 d2                	test   %dl,%dl
    d9f3:	0f 84 d3 00 00 00    	je     dacc <mbedtls_md_info_from_string+0x12c>
    d9f9:	b9 05 00 00 00       	mov    $0x5,%ecx
    d9fe:	48 8d 35 a9 7d 01 00 	lea    0x17da9(%rip),%rsi        # 257ae <supported_digests+0x2e>
    da05:	48 89 c7             	mov    %rax,%rdi
    da08:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    da0a:	4c 8d 05 af 42 02 00 	lea    0x242af(%rip),%r8        # 31cc0 <mbedtls_sha1_info>
    da11:	0f 97 c2             	seta   %dl
    da14:	80 da 00             	sbb    $0x0,%dl
    da17:	84 d2                	test   %dl,%dl
    da19:	0f 84 ad 00 00 00    	je     dacc <mbedtls_md_info_from_string+0x12c>
    da1f:	b9 04 00 00 00       	mov    $0x4,%ecx
    da24:	48 8d 35 88 7d 01 00 	lea    0x17d88(%rip),%rsi        # 257b3 <supported_digests+0x33>
    da2b:	48 89 c7             	mov    %rax,%rdi
    da2e:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    da30:	0f 97 c2             	seta   %dl
    da33:	80 da 00             	sbb    $0x0,%dl
    da36:	84 d2                	test   %dl,%dl
    da38:	0f 84 8e 00 00 00    	je     dacc <mbedtls_md_info_from_string+0x12c>
    da3e:	b9 07 00 00 00       	mov    $0x7,%ecx
    da43:	48 8d 35 6d 7d 01 00 	lea    0x17d6d(%rip),%rsi        # 257b7 <supported_digests+0x37>
    da4a:	48 89 c7             	mov    %rax,%rdi
    da4d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    da4f:	4c 8d 05 5a 42 02 00 	lea    0x2425a(%rip),%r8        # 31cb0 <mbedtls_sha224_info>
    da56:	0f 97 c2             	seta   %dl
    da59:	80 da 00             	sbb    $0x0,%dl
    da5c:	84 d2                	test   %dl,%dl
    da5e:	74 6c                	je     dacc <mbedtls_md_info_from_string+0x12c>
    da60:	b9 07 00 00 00       	mov    $0x7,%ecx
    da65:	48 8d 35 52 7d 01 00 	lea    0x17d52(%rip),%rsi        # 257be <supported_digests+0x3e>
    da6c:	48 89 c7             	mov    %rax,%rdi
    da6f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    da71:	4c 8d 05 28 42 02 00 	lea    0x24228(%rip),%r8        # 31ca0 <mbedtls_sha256_info>
    da78:	0f 97 c2             	seta   %dl
    da7b:	80 da 00             	sbb    $0x0,%dl
    da7e:	84 d2                	test   %dl,%dl
    da80:	74 4a                	je     dacc <mbedtls_md_info_from_string+0x12c>
    da82:	b9 07 00 00 00       	mov    $0x7,%ecx
    da87:	48 8d 35 37 7d 01 00 	lea    0x17d37(%rip),%rsi        # 257c5 <supported_digests+0x45>
    da8e:	48 89 c7             	mov    %rax,%rdi
    da91:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    da93:	4c 8d 05 f6 41 02 00 	lea    0x241f6(%rip),%r8        # 31c90 <mbedtls_sha384_info>
    da9a:	0f 97 c2             	seta   %dl
    da9d:	80 da 00             	sbb    $0x0,%dl
    daa0:	84 d2                	test   %dl,%dl
    daa2:	74 28                	je     dacc <mbedtls_md_info_from_string+0x12c>
    daa4:	48 89 c7             	mov    %rax,%rdi
    daa7:	b9 07 00 00 00       	mov    $0x7,%ecx
    daac:	48 8d 35 19 7d 01 00 	lea    0x17d19(%rip),%rsi        # 257cc <supported_digests+0x4c>
    dab3:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dab5:	4c 8d 05 c4 41 02 00 	lea    0x241c4(%rip),%r8        # 31c80 <mbedtls_sha512_info>
    dabc:	0f 97 c0             	seta   %al
    dabf:	1c 00                	sbb    $0x0,%al
    dac1:	84 c0                	test   %al,%al
    dac3:	b8 00 00 00 00       	mov    $0x0,%eax
    dac8:	4c 0f 45 c0          	cmovne %rax,%r8
    dacc:	4c 89 c0             	mov    %r8,%rax
    dacf:	c3                   	retq   
    dad0:	45 31 c0             	xor    %r8d,%r8d
    dad3:	eb f7                	jmp    dacc <mbedtls_md_info_from_string+0x12c>
    dad5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    dadc:	00 00 00 00 

000000000000dae0 <mbedtls_md_info_from_ctx>:
    dae0:	f3 0f 1e fa          	endbr64 
    dae4:	48 85 ff             	test   %rdi,%rdi
    dae7:	74 07                	je     daf0 <mbedtls_md_info_from_ctx+0x10>
    dae9:	48 8b 07             	mov    (%rdi),%rax
    daec:	c3                   	retq   
    daed:	0f 1f 00             	nopl   (%rax)
    daf0:	31 c0                	xor    %eax,%eax
    daf2:	c3                   	retq   
    daf3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    dafa:	00 00 00 00 
    dafe:	66 90                	xchg   %ax,%ax

000000000000db00 <mbedtls_md_file>:
    db00:	f3 0f 1e fa          	endbr64 
    db04:	41 57                	push   %r15
    db06:	41 56                	push   %r14
    db08:	41 55                	push   %r13
    db0a:	41 54                	push   %r12
    db0c:	49 89 fc             	mov    %rdi,%r12
    db0f:	55                   	push   %rbp
    db10:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
    db17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    db1e:	00 00 
    db20:	48 89 84 24 28 04 00 	mov    %rax,0x428(%rsp)
    db27:	00 
    db28:	31 c0                	xor    %eax,%eax
    db2a:	48 85 ff             	test   %rdi,%rdi
    db2d:	0f 84 0d 01 00 00    	je     dc40 <mbedtls_md_file+0x140>
    db33:	48 89 f7             	mov    %rsi,%rdi
    db36:	48 8d 35 be 79 01 00 	lea    0x179be(%rip),%rsi        # 254fb <secp192r1_p+0x1b>
    db3d:	49 89 d6             	mov    %rdx,%r14
    db40:	e8 bb 67 ff ff       	callq  4300 <fopen64@plt>
    db45:	48 89 c5             	mov    %rax,%rbp
    db48:	48 85 c0             	test   %rax,%rax
    db4b:	0f 84 fa 00 00 00    	je     dc4b <mbedtls_md_file+0x14b>
    db51:	48 89 c7             	mov    %rax,%rdi
    db54:	31 f6                	xor    %esi,%esi
    db56:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
    db5b:	49 89 e5             	mov    %rsp,%r13
    db5e:	e8 1d 67 ff ff       	callq  4280 <setbuf@plt>
    db63:	66 0f ef c0          	pxor   %xmm0,%xmm0
    db67:	4c 89 e6             	mov    %r12,%rsi
    db6a:	31 d2                	xor    %edx,%edx
    db6c:	4c 89 ef             	mov    %r13,%rdi
    db6f:	0f 29 04 24          	movaps %xmm0,(%rsp)
    db73:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    db7a:	00 00 
    db7c:	e8 ff f9 ff ff       	callq  d580 <mbedtls_md_setup>
    db81:	41 89 c4             	mov    %eax,%r12d
    db84:	85 c0                	test   %eax,%eax
    db86:	74 48                	je     dbd0 <mbedtls_md_file+0xd0>
    db88:	be 00 04 00 00       	mov    $0x400,%esi
    db8d:	4c 89 ff             	mov    %r15,%rdi
    db90:	e8 1b 15 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    db95:	48 89 ef             	mov    %rbp,%rdi
    db98:	e8 b3 66 ff ff       	callq  4250 <fclose@plt>
    db9d:	4c 89 ef             	mov    %r13,%rdi
    dba0:	e8 0b f8 ff ff       	callq  d3b0 <mbedtls_md_free>
    dba5:	48 8b 84 24 28 04 00 	mov    0x428(%rsp),%rax
    dbac:	00 
    dbad:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    dbb4:	00 00 
    dbb6:	0f 85 9a 00 00 00    	jne    dc56 <mbedtls_md_file+0x156>
    dbbc:	48 81 c4 30 04 00 00 	add    $0x430,%rsp
    dbc3:	44 89 e0             	mov    %r12d,%eax
    dbc6:	5d                   	pop    %rbp
    dbc7:	41 5c                	pop    %r12
    dbc9:	41 5d                	pop    %r13
    dbcb:	41 5e                	pop    %r14
    dbcd:	41 5f                	pop    %r15
    dbcf:	c3                   	retq   
    dbd0:	4c 89 ef             	mov    %r13,%rdi
    dbd3:	e8 18 fb ff ff       	callq  d6f0 <mbedtls_md_starts>
    dbd8:	41 89 c4             	mov    %eax,%r12d
    dbdb:	85 c0                	test   %eax,%eax
    dbdd:	74 1b                	je     dbfa <mbedtls_md_file+0xfa>
    dbdf:	eb a7                	jmp    db88 <mbedtls_md_file+0x88>
    dbe1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dbe8:	4c 89 fe             	mov    %r15,%rsi
    dbeb:	4c 89 ef             	mov    %r13,%rdi
    dbee:	e8 bd fb ff ff       	callq  d7b0 <mbedtls_md_update>
    dbf3:	41 89 c4             	mov    %eax,%r12d
    dbf6:	85 c0                	test   %eax,%eax
    dbf8:	75 8e                	jne    db88 <mbedtls_md_file+0x88>
    dbfa:	ba 00 04 00 00       	mov    $0x400,%edx
    dbff:	48 89 e9             	mov    %rbp,%rcx
    dc02:	be 01 00 00 00       	mov    $0x1,%esi
    dc07:	4c 89 ff             	mov    %r15,%rdi
    dc0a:	e8 21 66 ff ff       	callq  4230 <fread@plt>
    dc0f:	48 89 c2             	mov    %rax,%rdx
    dc12:	48 85 c0             	test   %rax,%rax
    dc15:	75 d1                	jne    dbe8 <mbedtls_md_file+0xe8>
    dc17:	48 89 ef             	mov    %rbp,%rdi
    dc1a:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
    dc20:	e8 fb 65 ff ff       	callq  4220 <ferror@plt>
    dc25:	85 c0                	test   %eax,%eax
    dc27:	0f 85 5b ff ff ff    	jne    db88 <mbedtls_md_file+0x88>
    dc2d:	4c 89 f6             	mov    %r14,%rsi
    dc30:	4c 89 ef             	mov    %r13,%rdi
    dc33:	e8 f8 fb ff ff       	callq  d830 <mbedtls_md_finish>
    dc38:	41 89 c4             	mov    %eax,%r12d
    dc3b:	e9 48 ff ff ff       	jmpq   db88 <mbedtls_md_file+0x88>
    dc40:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    dc46:	e9 5a ff ff ff       	jmpq   dba5 <mbedtls_md_file+0xa5>
    dc4b:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
    dc51:	e9 4f ff ff ff       	jmpq   dba5 <mbedtls_md_file+0xa5>
    dc56:	e8 15 66 ff ff       	callq  4270 <__stack_chk_fail@plt>
    dc5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000dc60 <mbedtls_md_hmac_starts>:
    dc60:	f3 0f 1e fa          	endbr64 
    dc64:	41 57                	push   %r15
    dc66:	41 56                	push   %r14
    dc68:	41 55                	push   %r13
    dc6a:	41 54                	push   %r12
    dc6c:	55                   	push   %rbp
    dc6d:	53                   	push   %rbx
    dc6e:	48 83 ec 58          	sub    $0x58,%rsp
    dc72:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dc79:	00 00 
    dc7b:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    dc80:	31 c0                	xor    %eax,%eax
    dc82:	48 85 ff             	test   %rdi,%rdi
    dc85:	0f 84 9d 02 00 00    	je     df28 <mbedtls_md_hmac_starts+0x2c8>
    dc8b:	48 89 fd             	mov    %rdi,%rbp
    dc8e:	48 8b 3f             	mov    (%rdi),%rdi
    dc91:	48 85 ff             	test   %rdi,%rdi
    dc94:	0f 84 8e 02 00 00    	je     df28 <mbedtls_md_hmac_starts+0x2c8>
    dc9a:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
    dc9e:	4d 85 ed             	test   %r13,%r13
    dca1:	0f 84 81 02 00 00    	je     df28 <mbedtls_md_hmac_starts+0x2c8>
    dca7:	49 89 d4             	mov    %rdx,%r12
    dcaa:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
    dcae:	48 89 f3             	mov    %rsi,%rbx
    dcb1:	49 89 e7             	mov    %rsp,%r15
    dcb4:	4c 39 e2             	cmp    %r12,%rdx
    dcb7:	73 5f                	jae    dd18 <mbedtls_md_hmac_starts+0xb8>
    dcb9:	48 89 ef             	mov    %rbp,%rdi
    dcbc:	49 89 e7             	mov    %rsp,%r15
    dcbf:	e8 2c fa ff ff       	callq  d6f0 <mbedtls_md_starts>
    dcc4:	41 89 c6             	mov    %eax,%r14d
    dcc7:	85 c0                	test   %eax,%eax
    dcc9:	0f 85 4f 01 00 00    	jne    de1e <mbedtls_md_hmac_starts+0x1be>
    dccf:	4c 89 e2             	mov    %r12,%rdx
    dcd2:	48 89 de             	mov    %rbx,%rsi
    dcd5:	48 89 ef             	mov    %rbp,%rdi
    dcd8:	e8 d3 fa ff ff       	callq  d7b0 <mbedtls_md_update>
    dcdd:	41 89 c6             	mov    %eax,%r14d
    dce0:	85 c0                	test   %eax,%eax
    dce2:	0f 85 36 01 00 00    	jne    de1e <mbedtls_md_hmac_starts+0x1be>
    dce8:	4c 89 fe             	mov    %r15,%rsi
    dceb:	48 89 ef             	mov    %rbp,%rdi
    dcee:	e8 3d fb ff ff       	callq  d830 <mbedtls_md_finish>
    dcf3:	41 89 c6             	mov    %eax,%r14d
    dcf6:	85 c0                	test   %eax,%eax
    dcf8:	0f 85 20 01 00 00    	jne    de1e <mbedtls_md_hmac_starts+0x1be>
    dcfe:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    dd02:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
    dd06:	4c 89 fb             	mov    %r15,%rbx
    dd09:	44 0f b6 67 0c       	movzbl 0xc(%rdi),%r12d
    dd0e:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
    dd12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dd18:	49 8d 74 15 00       	lea    0x0(%r13,%rdx,1),%rsi
    dd1d:	89 d1                	mov    %edx,%ecx
    dd1f:	48 b8 36 36 36 36 36 	movabs $0x3636363636363636,%rax
    dd26:	36 36 36 
    dd29:	83 fa 08             	cmp    $0x8,%edx
    dd2c:	0f 82 26 01 00 00    	jb     de58 <mbedtls_md_hmac_starts+0x1f8>
    dd32:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    dd36:	4c 89 e9             	mov    %r13,%rcx
    dd39:	49 89 45 00          	mov    %rax,0x0(%r13)
    dd3d:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    dd41:	49 89 44 15 f8       	mov    %rax,-0x8(%r13,%rdx,1)
    dd46:	48 29 f9             	sub    %rdi,%rcx
    dd49:	01 d1                	add    %edx,%ecx
    dd4b:	c1 e9 03             	shr    $0x3,%ecx
    dd4e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    dd51:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    dd55:	48 b8 5c 5c 5c 5c 5c 	movabs $0x5c5c5c5c5c5c5c5c,%rax
    dd5c:	5c 5c 5c 
    dd5f:	0f b6 4f 0d          	movzbl 0xd(%rdi),%ecx
    dd63:	83 f9 08             	cmp    $0x8,%ecx
    dd66:	0f 83 24 01 00 00    	jae    de90 <mbedtls_md_hmac_starts+0x230>
    dd6c:	f6 c1 04             	test   $0x4,%cl
    dd6f:	0f 85 9b 01 00 00    	jne    df10 <mbedtls_md_hmac_starts+0x2b0>
    dd75:	85 c9                	test   %ecx,%ecx
    dd77:	0f 85 3b 01 00 00    	jne    deb8 <mbedtls_md_hmac_starts+0x258>
    dd7d:	49 83 fc 03          	cmp    $0x3,%r12
    dd81:	0f 86 51 01 00 00    	jbe    ded8 <mbedtls_md_hmac_starts+0x278>
    dd87:	ba 04 00 00 00       	mov    $0x4,%edx
    dd8c:	0f 1f 40 00          	nopl   0x0(%rax)
    dd90:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
    dd94:	41 31 44 15 fc       	xor    %eax,-0x4(%r13,%rdx,1)
    dd99:	48 89 d0             	mov    %rdx,%rax
    dd9c:	48 8d 52 04          	lea    0x4(%rdx),%rdx
    dda0:	49 39 d4             	cmp    %rdx,%r12
    dda3:	73 eb                	jae    dd90 <mbedtls_md_hmac_starts+0x130>
    dda5:	49 39 c4             	cmp    %rax,%r12
    dda8:	76 1a                	jbe    ddc4 <mbedtls_md_hmac_starts+0x164>
    ddaa:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
    ddae:	41 30 54 05 00       	xor    %dl,0x0(%r13,%rax,1)
    ddb3:	48 83 c0 01          	add    $0x1,%rax
    ddb7:	49 39 c4             	cmp    %rax,%r12
    ddba:	77 ee                	ja     ddaa <mbedtls_md_hmac_starts+0x14a>
    ddbc:	31 c0                	xor    %eax,%eax
    ddbe:	49 83 fc 03          	cmp    $0x3,%r12
    ddc2:	76 25                	jbe    dde9 <mbedtls_md_hmac_starts+0x189>
    ddc4:	ba 04 00 00 00       	mov    $0x4,%edx
    ddc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ddd0:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
    ddd4:	31 44 16 fc          	xor    %eax,-0x4(%rsi,%rdx,1)
    ddd8:	48 89 d0             	mov    %rdx,%rax
    dddb:	48 8d 52 04          	lea    0x4(%rdx),%rdx
    dddf:	49 39 d4             	cmp    %rdx,%r12
    dde2:	73 ec                	jae    ddd0 <mbedtls_md_hmac_starts+0x170>
    dde4:	49 39 c4             	cmp    %rax,%r12
    dde7:	76 10                	jbe    ddf9 <mbedtls_md_hmac_starts+0x199>
    dde9:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
    dded:	30 14 06             	xor    %dl,(%rsi,%rax,1)
    ddf0:	48 83 c0 01          	add    $0x1,%rax
    ddf4:	49 39 c4             	cmp    %rax,%r12
    ddf7:	77 f0                	ja     dde9 <mbedtls_md_hmac_starts+0x189>
    ddf9:	48 89 ef             	mov    %rbp,%rdi
    ddfc:	e8 ef f8 ff ff       	callq  d6f0 <mbedtls_md_starts>
    de01:	41 89 c6             	mov    %eax,%r14d
    de04:	85 c0                	test   %eax,%eax
    de06:	75 16                	jne    de1e <mbedtls_md_hmac_starts+0x1be>
    de08:	48 8b 45 00          	mov    0x0(%rbp),%rax
    de0c:	4c 89 ee             	mov    %r13,%rsi
    de0f:	48 89 ef             	mov    %rbp,%rdi
    de12:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    de16:	e8 95 f9 ff ff       	callq  d7b0 <mbedtls_md_update>
    de1b:	41 89 c6             	mov    %eax,%r14d
    de1e:	be 40 00 00 00       	mov    $0x40,%esi
    de23:	4c 89 ff             	mov    %r15,%rdi
    de26:	e8 85 12 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    de2b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    de30:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    de37:	00 00 
    de39:	0f 85 f4 00 00 00    	jne    df33 <mbedtls_md_hmac_starts+0x2d3>
    de3f:	48 83 c4 58          	add    $0x58,%rsp
    de43:	44 89 f0             	mov    %r14d,%eax
    de46:	5b                   	pop    %rbx
    de47:	5d                   	pop    %rbp
    de48:	41 5c                	pop    %r12
    de4a:	41 5d                	pop    %r13
    de4c:	41 5e                	pop    %r14
    de4e:	41 5f                	pop    %r15
    de50:	c3                   	retq   
    de51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    de58:	83 e2 04             	and    $0x4,%edx
    de5b:	0f 85 8f 00 00 00    	jne    def0 <mbedtls_md_hmac_starts+0x290>
    de61:	85 c9                	test   %ecx,%ecx
    de63:	0f 84 ec fe ff ff    	je     dd55 <mbedtls_md_hmac_starts+0xf5>
    de69:	41 c6 45 00 36       	movb   $0x36,0x0(%r13)
    de6e:	f6 c1 02             	test   $0x2,%cl
    de71:	0f 84 da fe ff ff    	je     dd51 <mbedtls_md_hmac_starts+0xf1>
    de77:	ba 36 36 00 00       	mov    $0x3636,%edx
    de7c:	66 41 89 54 0d fe    	mov    %dx,-0x2(%r13,%rcx,1)
    de82:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    de86:	e9 ca fe ff ff       	jmpq   dd55 <mbedtls_md_hmac_starts+0xf5>
    de8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    de90:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    de94:	48 89 f2             	mov    %rsi,%rdx
    de97:	48 89 06             	mov    %rax,(%rsi)
    de9a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    de9e:	48 89 44 0e f8       	mov    %rax,-0x8(%rsi,%rcx,1)
    dea3:	48 29 fa             	sub    %rdi,%rdx
    dea6:	01 d1                	add    %edx,%ecx
    dea8:	c1 e9 03             	shr    $0x3,%ecx
    deab:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    deae:	e9 ca fe ff ff       	jmpq   dd7d <mbedtls_md_hmac_starts+0x11d>
    deb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    deb8:	c6 06 5c             	movb   $0x5c,(%rsi)
    debb:	f6 c1 02             	test   $0x2,%cl
    debe:	0f 84 b9 fe ff ff    	je     dd7d <mbedtls_md_hmac_starts+0x11d>
    dec4:	b8 5c 5c 00 00       	mov    $0x5c5c,%eax
    dec9:	66 89 44 0e fe       	mov    %ax,-0x2(%rsi,%rcx,1)
    dece:	e9 aa fe ff ff       	jmpq   dd7d <mbedtls_md_hmac_starts+0x11d>
    ded3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ded8:	31 c0                	xor    %eax,%eax
    deda:	4d 85 e4             	test   %r12,%r12
    dedd:	0f 85 c7 fe ff ff    	jne    ddaa <mbedtls_md_hmac_starts+0x14a>
    dee3:	e9 11 ff ff ff       	jmpq   ddf9 <mbedtls_md_hmac_starts+0x199>
    dee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    deef:	00 
    def0:	41 c7 45 00 36 36 36 	movl   $0x36363636,0x0(%r13)
    def7:	36 
    def8:	41 c7 44 0d fc 36 36 	movl   $0x36363636,-0x4(%r13,%rcx,1)
    deff:	36 36 
    df01:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    df05:	e9 4b fe ff ff       	jmpq   dd55 <mbedtls_md_hmac_starts+0xf5>
    df0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    df10:	c7 06 5c 5c 5c 5c    	movl   $0x5c5c5c5c,(%rsi)
    df16:	c7 44 0e fc 5c 5c 5c 	movl   $0x5c5c5c5c,-0x4(%rsi,%rcx,1)
    df1d:	5c 
    df1e:	e9 5a fe ff ff       	jmpq   dd7d <mbedtls_md_hmac_starts+0x11d>
    df23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df28:	41 be 00 af ff ff    	mov    $0xffffaf00,%r14d
    df2e:	e9 f8 fe ff ff       	jmpq   de2b <mbedtls_md_hmac_starts+0x1cb>
    df33:	e8 38 63 ff ff       	callq  4270 <__stack_chk_fail@plt>
    df38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    df3f:	00 

000000000000df40 <mbedtls_md_hmac_update>:
    df40:	f3 0f 1e fa          	endbr64 
    df44:	48 85 ff             	test   %rdi,%rdi
    df47:	74 17                	je     df60 <mbedtls_md_hmac_update+0x20>
    df49:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    df4d:	74 11                	je     df60 <mbedtls_md_hmac_update+0x20>
    df4f:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
    df54:	74 0a                	je     df60 <mbedtls_md_hmac_update+0x20>
    df56:	e9 55 f8 ff ff       	jmpq   d7b0 <mbedtls_md_update>
    df5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df60:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    df65:	c3                   	retq   
    df66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    df6d:	00 00 00 

000000000000df70 <mbedtls_md_hmac_finish>:
    df70:	f3 0f 1e fa          	endbr64 
    df74:	41 56                	push   %r14
    df76:	41 55                	push   %r13
    df78:	41 54                	push   %r12
    df7a:	55                   	push   %rbp
    df7b:	53                   	push   %rbx
    df7c:	48 83 ec 50          	sub    $0x50,%rsp
    df80:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    df87:	00 00 
    df89:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    df8e:	31 c0                	xor    %eax,%eax
    df90:	48 85 ff             	test   %rdi,%rdi
    df93:	0f 84 a7 00 00 00    	je     e040 <mbedtls_md_hmac_finish+0xd0>
    df99:	48 8b 07             	mov    (%rdi),%rax
    df9c:	49 89 fe             	mov    %rdi,%r14
    df9f:	48 85 c0             	test   %rax,%rax
    dfa2:	0f 84 98 00 00 00    	je     e040 <mbedtls_md_hmac_finish+0xd0>
    dfa8:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    dfac:	48 85 db             	test   %rbx,%rbx
    dfaf:	0f 84 8b 00 00 00    	je     e040 <mbedtls_md_hmac_finish+0xd0>
    dfb5:	49 89 e4             	mov    %rsp,%r12
    dfb8:	48 89 f5             	mov    %rsi,%rbp
    dfbb:	44 0f b6 68 0d       	movzbl 0xd(%rax),%r13d
    dfc0:	4c 89 e6             	mov    %r12,%rsi
    dfc3:	e8 68 f8 ff ff       	callq  d830 <mbedtls_md_finish>
    dfc8:	85 c0                	test   %eax,%eax
    dfca:	74 24                	je     dff0 <mbedtls_md_hmac_finish+0x80>
    dfcc:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    dfd1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    dfd8:	00 00 
    dfda:	75 6b                	jne    e047 <mbedtls_md_hmac_finish+0xd7>
    dfdc:	48 83 c4 50          	add    $0x50,%rsp
    dfe0:	5b                   	pop    %rbx
    dfe1:	5d                   	pop    %rbp
    dfe2:	41 5c                	pop    %r12
    dfe4:	41 5d                	pop    %r13
    dfe6:	41 5e                	pop    %r14
    dfe8:	c3                   	retq   
    dfe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dff0:	4c 89 f7             	mov    %r14,%rdi
    dff3:	e8 f8 f6 ff ff       	callq  d6f0 <mbedtls_md_starts>
    dff8:	85 c0                	test   %eax,%eax
    dffa:	75 d0                	jne    dfcc <mbedtls_md_hmac_finish+0x5c>
    dffc:	49 8b 06             	mov    (%r14),%rax
    dfff:	41 0f b6 f5          	movzbl %r13b,%esi
    e003:	4c 89 f7             	mov    %r14,%rdi
    e006:	48 01 de             	add    %rbx,%rsi
    e009:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    e00d:	e8 9e f7 ff ff       	callq  d7b0 <mbedtls_md_update>
    e012:	85 c0                	test   %eax,%eax
    e014:	75 b6                	jne    dfcc <mbedtls_md_hmac_finish+0x5c>
    e016:	49 8b 06             	mov    (%r14),%rax
    e019:	4c 89 e6             	mov    %r12,%rsi
    e01c:	4c 89 f7             	mov    %r14,%rdi
    e01f:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
    e023:	e8 88 f7 ff ff       	callq  d7b0 <mbedtls_md_update>
    e028:	85 c0                	test   %eax,%eax
    e02a:	75 a0                	jne    dfcc <mbedtls_md_hmac_finish+0x5c>
    e02c:	48 89 ee             	mov    %rbp,%rsi
    e02f:	4c 89 f7             	mov    %r14,%rdi
    e032:	e8 f9 f7 ff ff       	callq  d830 <mbedtls_md_finish>
    e037:	eb 93                	jmp    dfcc <mbedtls_md_hmac_finish+0x5c>
    e039:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e040:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    e045:	eb 85                	jmp    dfcc <mbedtls_md_hmac_finish+0x5c>
    e047:	e8 24 62 ff ff       	callq  4270 <__stack_chk_fail@plt>
    e04c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e050 <mbedtls_md_hmac_reset>:
    e050:	f3 0f 1e fa          	endbr64 
    e054:	48 85 ff             	test   %rdi,%rdi
    e057:	74 56                	je     e0af <mbedtls_md_hmac_reset+0x5f>
    e059:	41 54                	push   %r12
    e05b:	55                   	push   %rbp
    e05c:	48 89 fd             	mov    %rdi,%rbp
    e05f:	48 83 ec 08          	sub    $0x8,%rsp
    e063:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    e067:	74 3f                	je     e0a8 <mbedtls_md_hmac_reset+0x58>
    e069:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    e06d:	4d 85 e4             	test   %r12,%r12
    e070:	74 36                	je     e0a8 <mbedtls_md_hmac_reset+0x58>
    e072:	e8 79 f6 ff ff       	callq  d6f0 <mbedtls_md_starts>
    e077:	85 c0                	test   %eax,%eax
    e079:	74 0d                	je     e088 <mbedtls_md_hmac_reset+0x38>
    e07b:	48 83 c4 08          	add    $0x8,%rsp
    e07f:	5d                   	pop    %rbp
    e080:	41 5c                	pop    %r12
    e082:	c3                   	retq   
    e083:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e088:	48 8b 45 00          	mov    0x0(%rbp),%rax
    e08c:	4c 89 e6             	mov    %r12,%rsi
    e08f:	48 89 ef             	mov    %rbp,%rdi
    e092:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    e096:	48 83 c4 08          	add    $0x8,%rsp
    e09a:	5d                   	pop    %rbp
    e09b:	41 5c                	pop    %r12
    e09d:	e9 0e f7 ff ff       	jmpq   d7b0 <mbedtls_md_update>
    e0a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e0a8:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    e0ad:	eb cc                	jmp    e07b <mbedtls_md_hmac_reset+0x2b>
    e0af:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    e0b4:	c3                   	retq   
    e0b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e0bc:	00 00 00 00 

000000000000e0c0 <mbedtls_md_hmac>:
    e0c0:	f3 0f 1e fa          	endbr64 
    e0c4:	41 57                	push   %r15
    e0c6:	41 56                	push   %r14
    e0c8:	41 55                	push   %r13
    e0ca:	41 54                	push   %r12
    e0cc:	55                   	push   %rbp
    e0cd:	53                   	push   %rbx
    e0ce:	48 83 ec 38          	sub    $0x38,%rsp
    e0d2:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e0d7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e0de:	00 00 
    e0e0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    e0e5:	31 c0                	xor    %eax,%eax
    e0e7:	48 85 ff             	test   %rdi,%rdi
    e0ea:	0f 84 b4 00 00 00    	je     e1a4 <mbedtls_md_hmac+0xe4>
    e0f0:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    e0f5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e0f9:	48 89 f5             	mov    %rsi,%rbp
    e0fc:	49 89 d5             	mov    %rdx,%r13
    e0ff:	48 89 fe             	mov    %rdi,%rsi
    e102:	ba 01 00 00 00       	mov    $0x1,%edx
    e107:	4c 89 f7             	mov    %r14,%rdi
    e10a:	48 89 cb             	mov    %rcx,%rbx
    e10d:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    e114:	00 00 
    e116:	4d 89 c7             	mov    %r8,%r15
    e119:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    e11e:	e8 5d f4 ff ff       	callq  d580 <mbedtls_md_setup>
    e123:	41 89 c4             	mov    %eax,%r12d
    e126:	85 c0                	test   %eax,%eax
    e128:	74 2e                	je     e158 <mbedtls_md_hmac+0x98>
    e12a:	4c 89 f7             	mov    %r14,%rdi
    e12d:	e8 7e f2 ff ff       	callq  d3b0 <mbedtls_md_free>
    e132:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    e137:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    e13e:	00 00 
    e140:	75 75                	jne    e1b7 <mbedtls_md_hmac+0xf7>
    e142:	48 83 c4 38          	add    $0x38,%rsp
    e146:	44 89 e0             	mov    %r12d,%eax
    e149:	5b                   	pop    %rbx
    e14a:	5d                   	pop    %rbp
    e14b:	41 5c                	pop    %r12
    e14d:	41 5d                	pop    %r13
    e14f:	41 5e                	pop    %r14
    e151:	41 5f                	pop    %r15
    e153:	c3                   	retq   
    e154:	0f 1f 40 00          	nopl   0x0(%rax)
    e158:	4c 89 ea             	mov    %r13,%rdx
    e15b:	48 89 ee             	mov    %rbp,%rsi
    e15e:	4c 89 f7             	mov    %r14,%rdi
    e161:	e8 fa fa ff ff       	callq  dc60 <mbedtls_md_hmac_starts>
    e166:	41 89 c4             	mov    %eax,%r12d
    e169:	85 c0                	test   %eax,%eax
    e16b:	75 bd                	jne    e12a <mbedtls_md_hmac+0x6a>
    e16d:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    e173:	74 37                	je     e1ac <mbedtls_md_hmac+0xec>
    e175:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    e17b:	74 2f                	je     e1ac <mbedtls_md_hmac+0xec>
    e17d:	4c 89 fa             	mov    %r15,%rdx
    e180:	48 89 de             	mov    %rbx,%rsi
    e183:	4c 89 f7             	mov    %r14,%rdi
    e186:	e8 25 f6 ff ff       	callq  d7b0 <mbedtls_md_update>
    e18b:	41 89 c4             	mov    %eax,%r12d
    e18e:	85 c0                	test   %eax,%eax
    e190:	75 98                	jne    e12a <mbedtls_md_hmac+0x6a>
    e192:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    e197:	4c 89 f7             	mov    %r14,%rdi
    e19a:	e8 d1 fd ff ff       	callq  df70 <mbedtls_md_hmac_finish>
    e19f:	41 89 c4             	mov    %eax,%r12d
    e1a2:	eb 86                	jmp    e12a <mbedtls_md_hmac+0x6a>
    e1a4:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    e1aa:	eb 86                	jmp    e132 <mbedtls_md_hmac+0x72>
    e1ac:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    e1b2:	e9 73 ff ff ff       	jmpq   e12a <mbedtls_md_hmac+0x6a>
    e1b7:	e8 b4 60 ff ff       	callq  4270 <__stack_chk_fail@plt>
    e1bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e1c0 <mbedtls_md_get_name>:
    e1c0:	f3 0f 1e fa          	endbr64 
    e1c4:	48 85 ff             	test   %rdi,%rdi
    e1c7:	74 07                	je     e1d0 <mbedtls_md_get_name+0x10>
    e1c9:	48 8b 07             	mov    (%rdi),%rax
    e1cc:	c3                   	retq   
    e1cd:	0f 1f 00             	nopl   (%rax)
    e1d0:	31 c0                	xor    %eax,%eax
    e1d2:	c3                   	retq   
    e1d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e1da:	00 00 00 
    e1dd:	0f 1f 00             	nopl   (%rax)

000000000000e1e0 <mbedtls_md5_init>:
    e1e0:	f3 0f 1e fa          	endbr64 
    e1e4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    e1eb:	48 89 f9             	mov    %rdi,%rcx
    e1ee:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    e1f2:	31 c0                	xor    %eax,%eax
    e1f4:	48 c7 47 48 00 00 00 	movq   $0x0,0x48(%rdi)
    e1fb:	00 
    e1fc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    e200:	48 29 f9             	sub    %rdi,%rcx
    e203:	83 c1 58             	add    $0x58,%ecx
    e206:	c1 e9 03             	shr    $0x3,%ecx
    e209:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    e20c:	c3                   	retq   
    e20d:	0f 1f 00             	nopl   (%rax)

000000000000e210 <mbedtls_md5_free>:
    e210:	f3 0f 1e fa          	endbr64 
    e214:	48 85 ff             	test   %rdi,%rdi
    e217:	74 0f                	je     e228 <mbedtls_md5_free+0x18>
    e219:	be 58 00 00 00       	mov    $0x58,%esi
    e21e:	e9 8d 0e 00 00       	jmpq   f0b0 <mbedtls_platform_zeroize>
    e223:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e228:	c3                   	retq   
    e229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000e230 <mbedtls_md5_clone>:
    e230:	f3 0f 1e fa          	endbr64 
    e234:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    e238:	0f 11 07             	movups %xmm0,(%rdi)
    e23b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    e240:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    e244:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    e249:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    e24d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    e252:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    e256:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    e25b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    e25f:	48 8b 46 50          	mov    0x50(%rsi),%rax
    e263:	48 89 47 50          	mov    %rax,0x50(%rdi)
    e267:	c3                   	retq   
    e268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e26f:	00 

000000000000e270 <mbedtls_md5_starts>:
    e270:	f3 0f 1e fa          	endbr64 
    e274:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    e27b:	ab cd ef 
    e27e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    e285:	48 89 47 08          	mov    %rax,0x8(%rdi)
    e289:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    e290:	54 32 10 
    e293:	48 89 47 10          	mov    %rax,0x10(%rdi)
    e297:	31 c0                	xor    %eax,%eax
    e299:	c3                   	retq   
    e29a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000e2a0 <mbedtls_internal_md5_process>:
    e2a0:	f3 0f 1e fa          	endbr64 
    e2a4:	41 57                	push   %r15
    e2a6:	41 56                	push   %r14
    e2a8:	41 55                	push   %r13
    e2aa:	41 54                	push   %r12
    e2ac:	55                   	push   %rbp
    e2ad:	53                   	push   %rbx
    e2ae:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    e2b5:	44 8b 36             	mov    (%rsi),%r14d
    e2b8:	44 8b 4e 04          	mov    0x4(%rsi),%r9d
    e2bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e2c3:	00 00 
    e2c5:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    e2ca:	31 c0                	xor    %eax,%eax
    e2cc:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
    e2d0:	8b 6e 14             	mov    0x14(%rsi),%ebp
    e2d3:	44 8b 6e 1c          	mov    0x1c(%rsi),%r13d
    e2d7:	44 8b 7e 08          	mov    0x8(%rsi),%r15d
    e2db:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
    e2e0:	8b 46 10             	mov    0x10(%rsi),%eax
    e2e3:	8b 5e 18             	mov    0x18(%rsi),%ebx
    e2e6:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
    e2eb:	8b 4e 20             	mov    0x20(%rsi),%ecx
    e2ee:	8b 56 24             	mov    0x24(%rsi),%edx
    e2f1:	44 89 7c 24 28       	mov    %r15d,0x28(%rsp)
    e2f6:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
    e2fb:	89 04 24             	mov    %eax,(%rsp)
    e2fe:	89 44 24 30          	mov    %eax,0x30(%rsp)
    e302:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
    e306:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
    e30a:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
    e30e:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    e312:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
    e316:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    e31a:	44 89 6c 24 3c       	mov    %r13d,0x3c(%rsp)
    e31f:	89 54 24 44          	mov    %edx,0x44(%rsp)
    e323:	44 8b 66 34          	mov    0x34(%rsi),%r12d
    e327:	44 8b 56 28          	mov    0x28(%rsi),%r10d
    e32b:	8b 5e 30             	mov    0x30(%rsi),%ebx
    e32e:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
    e333:	44 8b 46 2c          	mov    0x2c(%rsi),%r8d
    e337:	8b 47 08             	mov    0x8(%rdi),%eax
    e33a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
    e33f:	8b 57 0c             	mov    0xc(%rdi),%edx
    e342:	33 57 10             	xor    0x10(%rdi),%edx
    e345:	44 89 64 24 54       	mov    %r12d,0x54(%rsp)
    e34a:	44 8b 66 38          	mov    0x38(%rsi),%r12d
    e34e:	8b 76 3c             	mov    0x3c(%rsi),%esi
    e351:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    e356:	42 8d 84 30 78 a4 6a 	lea    -0x28955b88(%rax,%r14,1),%eax
    e35d:	d7 
    e35e:	8b 4f 10             	mov    0x10(%rdi),%ecx
    e361:	44 89 44 24 4c       	mov    %r8d,0x4c(%rsp)
    e366:	89 74 24 18          	mov    %esi,0x18(%rsp)
    e36a:	89 74 24 5c          	mov    %esi,0x5c(%rsp)
    e36e:	8b 77 10             	mov    0x10(%rdi),%esi
    e371:	42 8d 8c 39 db 70 20 	lea    0x242070db(%rcx,%r15,1),%ecx
    e378:	24 
    e379:	33 77 14             	xor    0x14(%rdi),%esi
    e37c:	23 77 0c             	and    0xc(%rdi),%esi
    e37f:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    e384:	33 77 14             	xor    0x14(%rdi),%esi
    e387:	44 8b 3c 24          	mov    (%rsp),%r15d
    e38b:	89 5c 24 50          	mov    %ebx,0x50(%rsp)
    e38f:	01 c6                	add    %eax,%esi
    e391:	8b 47 14             	mov    0x14(%rdi),%eax
    e394:	44 89 64 24 58       	mov    %r12d,0x58(%rsp)
    e399:	c1 c6 07             	rol    $0x7,%esi
    e39c:	03 77 0c             	add    0xc(%rdi),%esi
    e39f:	21 f2                	and    %esi,%edx
    e3a1:	42 8d 84 08 56 b7 c7 	lea    -0x173848aa(%rax,%r9,1),%eax
    e3a8:	e8 
    e3a9:	33 57 10             	xor    0x10(%rdi),%edx
    e3ac:	01 c2                	add    %eax,%edx
    e3ae:	8b 47 0c             	mov    0xc(%rdi),%eax
    e3b1:	c1 c2 0c             	rol    $0xc,%edx
    e3b4:	01 f2                	add    %esi,%edx
    e3b6:	31 f0                	xor    %esi,%eax
    e3b8:	21 d0                	and    %edx,%eax
    e3ba:	33 47 0c             	xor    0xc(%rdi),%eax
    e3bd:	01 c8                	add    %ecx,%eax
    e3bf:	89 f1                	mov    %esi,%ecx
    e3c1:	31 d1                	xor    %edx,%ecx
    e3c3:	c1 c8 0f             	ror    $0xf,%eax
    e3c6:	01 d0                	add    %edx,%eax
    e3c8:	41 89 c8             	mov    %ecx,%r8d
    e3cb:	8b 4f 0c             	mov    0xc(%rdi),%ecx
    e3ce:	41 21 c0             	and    %eax,%r8d
    e3d1:	41 31 f0             	xor    %esi,%r8d
    e3d4:	42 8d 8c 19 ee ce bd 	lea    -0x3e423112(%rcx,%r11,1),%ecx
    e3db:	c1 
    e3dc:	42 8d b4 3e af 0f 7c 	lea    -0xa83f051(%rsi,%r15,1),%esi
    e3e3:	f5 
    e3e4:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    e3e9:	41 01 c8             	add    %ecx,%r8d
    e3ec:	89 d1                	mov    %edx,%ecx
    e3ee:	41 c1 c8 0a          	ror    $0xa,%r8d
    e3f2:	31 c1                	xor    %eax,%ecx
    e3f4:	41 01 c0             	add    %eax,%r8d
    e3f7:	44 21 c1             	and    %r8d,%ecx
    e3fa:	31 d1                	xor    %edx,%ecx
    e3fc:	8d 94 2a 2a c6 87 47 	lea    0x4787c62a(%rdx,%rbp,1),%edx
    e403:	01 f1                	add    %esi,%ecx
    e405:	89 c6                	mov    %eax,%esi
    e407:	c1 c1 07             	rol    $0x7,%ecx
    e40a:	44 01 c1             	add    %r8d,%ecx
    e40d:	44 31 c6             	xor    %r8d,%esi
    e410:	21 ce                	and    %ecx,%esi
    e412:	31 c6                	xor    %eax,%esi
    e414:	42 8d 84 38 13 46 30 	lea    -0x57cfb9ed(%rax,%r15,1),%eax
    e41b:	a8 
    e41c:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
    e421:	01 d6                	add    %edx,%esi
    e423:	44 89 c2             	mov    %r8d,%edx
    e426:	c1 c6 0c             	rol    $0xc,%esi
    e429:	31 ca                	xor    %ecx,%edx
    e42b:	01 ce                	add    %ecx,%esi
    e42d:	21 f2                	and    %esi,%edx
    e42f:	44 31 c2             	xor    %r8d,%edx
    e432:	47 8d 84 28 01 95 46 	lea    -0x2b96aff(%r8,%r13,1),%r8d
    e439:	fd 
    e43a:	01 c2                	add    %eax,%edx
    e43c:	89 c8                	mov    %ecx,%eax
    e43e:	c1 ca 0f             	ror    $0xf,%edx
    e441:	31 f0                	xor    %esi,%eax
    e443:	01 f2                	add    %esi,%edx
    e445:	21 d0                	and    %edx,%eax
    e447:	31 c8                	xor    %ecx,%eax
    e449:	42 8d 8c 39 d8 98 80 	lea    0x698098d8(%rcx,%r15,1),%ecx
    e450:	69 
    e451:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    e456:	44 01 c0             	add    %r8d,%eax
    e459:	41 89 f0             	mov    %esi,%r8d
    e45c:	c1 c8 0a             	ror    $0xa,%eax
    e45f:	41 31 d0             	xor    %edx,%r8d
    e462:	01 d0                	add    %edx,%eax
    e464:	41 21 c0             	and    %eax,%r8d
    e467:	41 31 f0             	xor    %esi,%r8d
    e46a:	42 8d b4 3e af f7 44 	lea    -0x74bb0851(%rsi,%r15,1),%esi
    e471:	8b 
    e472:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
    e477:	41 01 c8             	add    %ecx,%r8d
    e47a:	89 d1                	mov    %edx,%ecx
    e47c:	41 c1 c0 07          	rol    $0x7,%r8d
    e480:	31 c1                	xor    %eax,%ecx
    e482:	41 01 c0             	add    %eax,%r8d
    e485:	44 21 c1             	and    %r8d,%ecx
    e488:	31 d1                	xor    %edx,%ecx
    e48a:	42 8d 94 12 b1 5b ff 	lea    -0xa44f(%rdx,%r10,1),%edx
    e491:	ff 
    e492:	01 f1                	add    %esi,%ecx
    e494:	89 c6                	mov    %eax,%esi
    e496:	c1 c1 0c             	rol    $0xc,%ecx
    e499:	44 31 c6             	xor    %r8d,%esi
    e49c:	44 01 c1             	add    %r8d,%ecx
    e49f:	21 ce                	and    %ecx,%esi
    e4a1:	31 c6                	xor    %eax,%esi
    e4a3:	42 8d 84 38 be d7 5c 	lea    -0x76a32842(%rax,%r15,1),%eax
    e4aa:	89 
    e4ab:	01 d6                	add    %edx,%esi
    e4ad:	44 89 c2             	mov    %r8d,%edx
    e4b0:	c1 ce 0f             	ror    $0xf,%esi
    e4b3:	31 ca                	xor    %ecx,%edx
    e4b5:	01 ce                	add    %ecx,%esi
    e4b7:	21 f2                	and    %esi,%edx
    e4b9:	44 31 c2             	xor    %r8d,%edx
    e4bc:	45 8d 84 18 22 11 90 	lea    0x6b901122(%r8,%rbx,1),%r8d
    e4c3:	6b 
    e4c4:	01 c2                	add    %eax,%edx
    e4c6:	89 c8                	mov    %ecx,%eax
    e4c8:	c1 ca 0a             	ror    $0xa,%edx
    e4cb:	31 f0                	xor    %esi,%eax
    e4cd:	01 f2                	add    %esi,%edx
    e4cf:	21 d0                	and    %edx,%eax
    e4d1:	31 c8                	xor    %ecx,%eax
    e4d3:	44 01 c0             	add    %r8d,%eax
    e4d6:	41 89 f0             	mov    %esi,%r8d
    e4d9:	41 31 d0             	xor    %edx,%r8d
    e4dc:	c1 c0 07             	rol    $0x7,%eax
    e4df:	01 d0                	add    %edx,%eax
    e4e1:	45 89 c7             	mov    %r8d,%r15d
    e4e4:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    e4e9:	41 21 c7             	and    %eax,%r15d
    e4ec:	41 31 f7             	xor    %esi,%r15d
    e4ef:	42 8d 8c 01 93 71 98 	lea    -0x2678e6d(%rcx,%r8,1),%ecx
    e4f6:	fd 
    e4f7:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
    e4fc:	42 8d b4 26 8e 43 79 	lea    -0x5986bc72(%rsi,%r12,1),%esi
    e503:	a6 
    e504:	41 01 cf             	add    %ecx,%r15d
    e507:	89 d1                	mov    %edx,%ecx
    e509:	41 c1 c7 0c          	rol    $0xc,%r15d
    e50d:	31 c1                	xor    %eax,%ecx
    e50f:	41 01 c7             	add    %eax,%r15d
    e512:	44 21 f9             	and    %r15d,%ecx
    e515:	31 d1                	xor    %edx,%ecx
    e517:	42 8d 94 02 21 08 b4 	lea    0x49b40821(%rdx,%r8,1),%edx
    e51e:	49 
    e51f:	01 f1                	add    %esi,%ecx
    e521:	89 c6                	mov    %eax,%esi
    e523:	c1 c9 0f             	ror    $0xf,%ecx
    e526:	44 31 fe             	xor    %r15d,%esi
    e529:	44 01 f9             	add    %r15d,%ecx
    e52c:	21 ce                	and    %ecx,%esi
    e52e:	31 c6                	xor    %eax,%esi
    e530:	42 8d 84 08 62 25 1e 	lea    -0x9e1da9e(%rax,%r9,1),%eax
    e537:	f6 
    e538:	01 d6                	add    %edx,%esi
    e53a:	89 ca                	mov    %ecx,%edx
    e53c:	c1 ce 0a             	ror    $0xa,%esi
    e53f:	01 ce                	add    %ecx,%esi
    e541:	31 f2                	xor    %esi,%edx
    e543:	41 89 d0             	mov    %edx,%r8d
    e546:	89 f2                	mov    %esi,%edx
    e548:	45 21 f8             	and    %r15d,%r8d
    e54b:	41 31 c8             	xor    %ecx,%r8d
    e54e:	41 01 c0             	add    %eax,%r8d
    e551:	8b 44 24 04          	mov    0x4(%rsp),%eax
    e555:	41 c1 c0 05          	rol    $0x5,%r8d
    e559:	41 01 f0             	add    %esi,%r8d
    e55c:	41 8d 84 07 40 b3 40 	lea    -0x3fbf4cc0(%r15,%rax,1),%eax
    e563:	c0 
    e564:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
    e569:	44 31 c2             	xor    %r8d,%edx
    e56c:	21 ca                	and    %ecx,%edx
    e56e:	42 8d 8c 39 51 5a 5e 	lea    0x265e5a51(%rcx,%r15,1),%ecx
    e575:	26 
    e576:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
    e57b:	31 f2                	xor    %esi,%edx
    e57d:	01 c2                	add    %eax,%edx
    e57f:	44 89 c0             	mov    %r8d,%eax
    e582:	c1 c2 09             	rol    $0x9,%edx
    e585:	44 01 c2             	add    %r8d,%edx
    e588:	31 d0                	xor    %edx,%eax
    e58a:	21 f0                	and    %esi,%eax
    e58c:	42 8d b4 36 aa c7 b6 	lea    -0x16493856(%rsi,%r14,1),%esi
    e593:	e9 
    e594:	44 31 c0             	xor    %r8d,%eax
    e597:	01 c8                	add    %ecx,%eax
    e599:	89 d1                	mov    %edx,%ecx
    e59b:	c1 c0 0e             	rol    $0xe,%eax
    e59e:	01 d0                	add    %edx,%eax
    e5a0:	31 c1                	xor    %eax,%ecx
    e5a2:	44 21 c1             	and    %r8d,%ecx
    e5a5:	45 8d 84 28 5d 10 2f 	lea    -0x29d0efa3(%r8,%rbp,1),%r8d
    e5ac:	d6 
    e5ad:	31 d1                	xor    %edx,%ecx
    e5af:	01 f1                	add    %esi,%ecx
    e5b1:	89 c6                	mov    %eax,%esi
    e5b3:	c1 c9 0c             	ror    $0xc,%ecx
    e5b6:	01 c1                	add    %eax,%ecx
    e5b8:	31 ce                	xor    %ecx,%esi
    e5ba:	21 d6                	and    %edx,%esi
    e5bc:	42 8d 94 12 53 14 44 	lea    0x2441453(%rdx,%r10,1),%edx
    e5c3:	02 
    e5c4:	31 c6                	xor    %eax,%esi
    e5c6:	44 01 c6             	add    %r8d,%esi
    e5c9:	41 89 c8             	mov    %ecx,%r8d
    e5cc:	c1 c6 05             	rol    $0x5,%esi
    e5cf:	01 ce                	add    %ecx,%esi
    e5d1:	41 31 f0             	xor    %esi,%r8d
    e5d4:	41 21 c0             	and    %eax,%r8d
    e5d7:	42 8d 84 38 81 e6 a1 	lea    -0x275e197f(%rax,%r15,1),%eax
    e5de:	d8 
    e5df:	44 8b 3c 24          	mov    (%rsp),%r15d
    e5e3:	41 31 c8             	xor    %ecx,%r8d
    e5e6:	41 01 d0             	add    %edx,%r8d
    e5e9:	89 f2                	mov    %esi,%edx
    e5eb:	41 c1 c0 09          	rol    $0x9,%r8d
    e5ef:	41 01 f0             	add    %esi,%r8d
    e5f2:	44 31 c2             	xor    %r8d,%edx
    e5f5:	21 ca                	and    %ecx,%edx
    e5f7:	42 8d 8c 39 c8 fb d3 	lea    -0x182c0438(%rcx,%r15,1),%ecx
    e5fe:	e7 
    e5ff:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    e604:	31 f2                	xor    %esi,%edx
    e606:	01 c2                	add    %eax,%edx
    e608:	44 89 c0             	mov    %r8d,%eax
    e60b:	c1 c2 0e             	rol    $0xe,%edx
    e60e:	44 01 c2             	add    %r8d,%edx
    e611:	31 d0                	xor    %edx,%eax
    e613:	21 f0                	and    %esi,%eax
    e615:	42 8d b4 3e e6 cd e1 	lea    0x21e1cde6(%rsi,%r15,1),%esi
    e61c:	21 
    e61d:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
    e622:	44 31 c0             	xor    %r8d,%eax
    e625:	01 c8                	add    %ecx,%eax
    e627:	89 d1                	mov    %edx,%ecx
    e629:	c1 c8 0c             	ror    $0xc,%eax
    e62c:	01 d0                	add    %edx,%eax
    e62e:	31 c1                	xor    %eax,%ecx
    e630:	44 21 c1             	and    %r8d,%ecx
    e633:	47 8d 84 20 d6 07 37 	lea    -0x3cc8f82a(%r8,%r12,1),%r8d
    e63a:	c3 
    e63b:	31 d1                	xor    %edx,%ecx
    e63d:	01 f1                	add    %esi,%ecx
    e63f:	89 c6                	mov    %eax,%esi
    e641:	c1 c1 05             	rol    $0x5,%ecx
    e644:	01 c1                	add    %eax,%ecx
    e646:	31 ce                	xor    %ecx,%esi
    e648:	21 d6                	and    %edx,%esi
    e64a:	42 8d 94 1a 87 0d d5 	lea    -0xb2af279(%rdx,%r11,1),%edx
    e651:	f4 
    e652:	31 c6                	xor    %eax,%esi
    e654:	44 01 c6             	add    %r8d,%esi
    e657:	41 89 c8             	mov    %ecx,%r8d
    e65a:	c1 c6 09             	rol    $0x9,%esi
    e65d:	01 ce                	add    %ecx,%esi
    e65f:	41 31 f0             	xor    %esi,%r8d
    e662:	41 21 c0             	and    %eax,%r8d
    e665:	42 8d 84 38 ed 14 5a 	lea    0x455a14ed(%rax,%r15,1),%eax
    e66c:	45 
    e66d:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
    e672:	41 31 c8             	xor    %ecx,%r8d
    e675:	41 01 d0             	add    %edx,%r8d
    e678:	89 f2                	mov    %esi,%edx
    e67a:	41 c1 c0 0e          	rol    $0xe,%r8d
    e67e:	41 01 f0             	add    %esi,%r8d
    e681:	44 31 c2             	xor    %r8d,%edx
    e684:	21 ca                	and    %ecx,%edx
    e686:	42 8d 8c 39 05 e9 e3 	lea    -0x561c16fb(%rcx,%r15,1),%ecx
    e68d:	a9 
    e68e:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    e693:	31 f2                	xor    %esi,%edx
    e695:	01 c2                	add    %eax,%edx
    e697:	44 89 c0             	mov    %r8d,%eax
    e69a:	c1 ca 0c             	ror    $0xc,%edx
    e69d:	44 01 c2             	add    %r8d,%edx
    e6a0:	31 d0                	xor    %edx,%eax
    e6a2:	21 f0                	and    %esi,%eax
    e6a4:	42 8d b4 3e f8 a3 ef 	lea    -0x3105c08(%rsi,%r15,1),%esi
    e6ab:	fc 
    e6ac:	44 31 c0             	xor    %r8d,%eax
    e6af:	01 c8                	add    %ecx,%eax
    e6b1:	89 d1                	mov    %edx,%ecx
    e6b3:	c1 c0 05             	rol    $0x5,%eax
    e6b6:	01 d0                	add    %edx,%eax
    e6b8:	31 c1                	xor    %eax,%ecx
    e6ba:	44 21 c1             	and    %r8d,%ecx
    e6bd:	47 8d 84 28 d9 02 6f 	lea    0x676f02d9(%r8,%r13,1),%r8d
    e6c4:	67 
    e6c5:	31 d1                	xor    %edx,%ecx
    e6c7:	01 f1                	add    %esi,%ecx
    e6c9:	89 c6                	mov    %eax,%esi
    e6cb:	c1 c1 09             	rol    $0x9,%ecx
    e6ce:	01 c1                	add    %eax,%ecx
    e6d0:	31 ce                	xor    %ecx,%esi
    e6d2:	21 d6                	and    %edx,%esi
    e6d4:	8d 94 1a 8a 4c 2a 8d 	lea    -0x72d5b376(%rdx,%rbx,1),%edx
    e6db:	31 c6                	xor    %eax,%esi
    e6dd:	44 01 c6             	add    %r8d,%esi
    e6e0:	41 89 c8             	mov    %ecx,%r8d
    e6e3:	c1 c6 0e             	rol    $0xe,%esi
    e6e6:	01 ce                	add    %ecx,%esi
    e6e8:	41 31 f0             	xor    %esi,%r8d
    e6eb:	45 89 c7             	mov    %r8d,%r15d
    e6ee:	41 89 c0             	mov    %eax,%r8d
    e6f1:	8d 84 28 42 39 fa ff 	lea    -0x5c6be(%rax,%rbp,1),%eax
    e6f8:	45 21 f8             	and    %r15d,%r8d
    e6fb:	41 31 c8             	xor    %ecx,%r8d
    e6fe:	41 01 d0             	add    %edx,%r8d
    e701:	89 f2                	mov    %esi,%edx
    e703:	41 c1 c8 0c          	ror    $0xc,%r8d
    e707:	41 01 f0             	add    %esi,%r8d
    e70a:	45 31 c7             	xor    %r8d,%r15d
    e70d:	44 31 c2             	xor    %r8d,%edx
    e710:	41 01 c7             	add    %eax,%r15d
    e713:	8b 44 24 08          	mov    0x8(%rsp),%eax
    e717:	41 c1 c7 04          	rol    $0x4,%r15d
    e71b:	45 01 c7             	add    %r8d,%r15d
    e71e:	8d 84 01 81 f6 71 87 	lea    -0x788e097f(%rcx,%rax,1),%eax
    e725:	44 89 c1             	mov    %r8d,%ecx
    e728:	44 31 fa             	xor    %r15d,%edx
    e72b:	44 31 f9             	xor    %r15d,%ecx
    e72e:	01 c2                	add    %eax,%edx
    e730:	8b 44 24 10          	mov    0x10(%rsp),%eax
    e734:	c1 c2 0b             	rol    $0xb,%edx
    e737:	44 01 fa             	add    %r15d,%edx
    e73a:	8d 84 06 22 61 9d 6d 	lea    0x6d9d6122(%rsi,%rax,1),%eax
    e741:	44 89 fe             	mov    %r15d,%esi
    e744:	31 d1                	xor    %edx,%ecx
    e746:	31 d6                	xor    %edx,%esi
    e748:	01 c1                	add    %eax,%ecx
    e74a:	89 f0                	mov    %esi,%eax
    e74c:	43 8d b4 20 0c 38 e5 	lea    -0x21ac7f4(%r8,%r12,1),%esi
    e753:	fd 
    e754:	c1 c1 10             	rol    $0x10,%ecx
    e757:	47 8d 84 0f 44 ea be 	lea    -0x5b4115bc(%r15,%r9,1),%r8d
    e75e:	a4 
    e75f:	44 8b 3c 24          	mov    (%rsp),%r15d
    e763:	01 d1                	add    %edx,%ecx
    e765:	31 c8                	xor    %ecx,%eax
    e767:	01 f0                	add    %esi,%eax
    e769:	89 d6                	mov    %edx,%esi
    e76b:	42 8d 94 3a a9 cf de 	lea    0x4bdecfa9(%rdx,%r15,1),%edx
    e772:	4b 
    e773:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
    e778:	c1 c8 09             	ror    $0x9,%eax
    e77b:	31 ce                	xor    %ecx,%esi
    e77d:	01 c8                	add    %ecx,%eax
    e77f:	31 c6                	xor    %eax,%esi
    e781:	44 01 c6             	add    %r8d,%esi
    e784:	41 89 c8             	mov    %ecx,%r8d
    e787:	42 8d 8c 29 60 4b bb 	lea    -0x944b4a0(%rcx,%r13,1),%ecx
    e78e:	f6 
    e78f:	c1 c6 04             	rol    $0x4,%esi
    e792:	41 31 c0             	xor    %eax,%r8d
    e795:	01 c6                	add    %eax,%esi
    e797:	41 31 f0             	xor    %esi,%r8d
    e79a:	41 01 d0             	add    %edx,%r8d
    e79d:	89 c2                	mov    %eax,%edx
    e79f:	42 8d 84 10 70 bc bf 	lea    -0x41404390(%rax,%r10,1),%eax
    e7a6:	be 
    e7a7:	41 c1 c0 0b          	rol    $0xb,%r8d
    e7ab:	31 f2                	xor    %esi,%edx
    e7ad:	41 01 f0             	add    %esi,%r8d
    e7b0:	44 31 c2             	xor    %r8d,%edx
    e7b3:	01 ca                	add    %ecx,%edx
    e7b5:	89 f1                	mov    %esi,%ecx
    e7b7:	42 8d b4 3e c6 7e 9b 	lea    0x289b7ec6(%rsi,%r15,1),%esi
    e7be:	28 
    e7bf:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    e7c4:	c1 c2 10             	rol    $0x10,%edx
    e7c7:	44 31 c1             	xor    %r8d,%ecx
    e7ca:	44 01 c2             	add    %r8d,%edx
    e7cd:	31 d1                	xor    %edx,%ecx
    e7cf:	01 c1                	add    %eax,%ecx
    e7d1:	44 89 c0             	mov    %r8d,%eax
    e7d4:	47 8d 84 30 fa 27 a1 	lea    -0x155ed806(%r8,%r14,1),%r8d
    e7db:	ea 
    e7dc:	c1 c9 09             	ror    $0x9,%ecx
    e7df:	31 d0                	xor    %edx,%eax
    e7e1:	01 d1                	add    %edx,%ecx
    e7e3:	31 c8                	xor    %ecx,%eax
    e7e5:	01 c6                	add    %eax,%esi
    e7e7:	89 d0                	mov    %edx,%eax
    e7e9:	42 8d 94 1a 85 30 ef 	lea    -0x2b10cf7b(%rdx,%r11,1),%edx
    e7f0:	d4 
    e7f1:	c1 c6 04             	rol    $0x4,%esi
    e7f4:	31 c8                	xor    %ecx,%eax
    e7f6:	01 ce                	add    %ecx,%esi
    e7f8:	31 f0                	xor    %esi,%eax
    e7fa:	44 01 c0             	add    %r8d,%eax
    e7fd:	41 89 c8             	mov    %ecx,%r8d
    e800:	42 8d 8c 39 05 1d 88 	lea    0x4881d05(%rcx,%r15,1),%ecx
    e807:	04 
    e808:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    e80d:	c1 c0 0b             	rol    $0xb,%eax
    e810:	41 31 f0             	xor    %esi,%r8d
    e813:	01 f0                	add    %esi,%eax
    e815:	41 31 c0             	xor    %eax,%r8d
    e818:	41 01 d0             	add    %edx,%r8d
    e81b:	89 f2                	mov    %esi,%edx
    e81d:	42 8d b4 3e 39 d0 d4 	lea    -0x262b2fc7(%rsi,%r15,1),%esi
    e824:	d9 
    e825:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
    e82a:	41 c1 c0 10          	rol    $0x10,%r8d
    e82e:	31 c2                	xor    %eax,%edx
    e830:	41 01 c0             	add    %eax,%r8d
    e833:	44 31 c2             	xor    %r8d,%edx
    e836:	01 d1                	add    %edx,%ecx
    e838:	89 c2                	mov    %eax,%edx
    e83a:	8d 84 18 e5 99 db e6 	lea    -0x1924661b(%rax,%rbx,1),%eax
    e841:	c1 c9 09             	ror    $0x9,%ecx
    e844:	44 31 c2             	xor    %r8d,%edx
    e847:	44 01 c1             	add    %r8d,%ecx
    e84a:	31 ca                	xor    %ecx,%edx
    e84c:	01 f2                	add    %esi,%edx
    e84e:	44 89 c6             	mov    %r8d,%esi
    e851:	47 8d 84 38 f8 7c a2 	lea    0x1fa27cf8(%r8,%r15,1),%r8d
    e858:	1f 
    e859:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    e85e:	c1 c2 04             	rol    $0x4,%edx
    e861:	31 ce                	xor    %ecx,%esi
    e863:	01 ca                	add    %ecx,%edx
    e865:	31 d6                	xor    %edx,%esi
    e867:	01 c6                	add    %eax,%esi
    e869:	89 c8                	mov    %ecx,%eax
    e86b:	42 8d 8c 39 65 56 ac 	lea    -0x3b53a99b(%rcx,%r15,1),%ecx
    e872:	c4 
    e873:	c1 c6 0b             	rol    $0xb,%esi
    e876:	31 d0                	xor    %edx,%eax
    e878:	01 d6                	add    %edx,%esi
    e87a:	31 f0                	xor    %esi,%eax
    e87c:	41 01 c0             	add    %eax,%r8d
    e87f:	89 d0                	mov    %edx,%eax
    e881:	42 8d 94 32 44 22 29 	lea    -0xbd6ddbc(%rdx,%r14,1),%edx
    e888:	f4 
    e889:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    e88e:	41 c1 c0 10          	rol    $0x10,%r8d
    e892:	31 f0                	xor    %esi,%eax
    e894:	41 01 f0             	add    %esi,%r8d
    e897:	44 31 c0             	xor    %r8d,%eax
    e89a:	01 c1                	add    %eax,%ecx
    e89c:	89 f0                	mov    %esi,%eax
    e89e:	42 8d b4 2e 97 ff 2a 	lea    0x432aff97(%rsi,%r13,1),%esi
    e8a5:	43 
    e8a6:	c1 c9 09             	ror    $0x9,%ecx
    e8a9:	f7 d0                	not    %eax
    e8ab:	44 01 c1             	add    %r8d,%ecx
    e8ae:	09 c8                	or     %ecx,%eax
    e8b0:	44 31 c0             	xor    %r8d,%eax
    e8b3:	01 d0                	add    %edx,%eax
    e8b5:	44 89 c2             	mov    %r8d,%edx
    e8b8:	47 8d 84 20 a7 23 94 	lea    -0x546bdc59(%r8,%r12,1),%r8d
    e8bf:	ab 
    e8c0:	c1 c0 06             	rol    $0x6,%eax
    e8c3:	f7 d2                	not    %edx
    e8c5:	01 c8                	add    %ecx,%eax
    e8c7:	09 c2                	or     %eax,%edx
    e8c9:	31 ca                	xor    %ecx,%edx
    e8cb:	01 f2                	add    %esi,%edx
    e8cd:	89 ce                	mov    %ecx,%esi
    e8cf:	8d 8c 29 39 a0 93 fc 	lea    -0x36c5fc7(%rcx,%rbp,1),%ecx
    e8d6:	c1 c2 0a             	rol    $0xa,%edx
    e8d9:	f7 d6                	not    %esi
    e8db:	01 c2                	add    %eax,%edx
    e8dd:	09 d6                	or     %edx,%esi
    e8df:	31 c6                	xor    %eax,%esi
    e8e1:	44 01 c6             	add    %r8d,%esi
    e8e4:	41 89 c0             	mov    %eax,%r8d
    e8e7:	8d 84 18 c3 59 5b 65 	lea    0x655b59c3(%rax,%rbx,1),%eax
    e8ee:	8b 1c 24             	mov    (%rsp),%ebx
    e8f1:	c1 c6 0f             	rol    $0xf,%esi
    e8f4:	41 f7 d0             	not    %r8d
    e8f7:	01 d6                	add    %edx,%esi
    e8f9:	41 09 f0             	or     %esi,%r8d
    e8fc:	89 f5                	mov    %esi,%ebp
    e8fe:	41 31 d0             	xor    %edx,%r8d
    e901:	f7 d5                	not    %ebp
    e903:	41 01 c8             	add    %ecx,%r8d
    e906:	89 d1                	mov    %edx,%ecx
    e908:	42 8d 94 1a 92 cc 0c 	lea    -0x70f3336e(%rdx,%r11,1),%edx
    e90f:	8f 
    e910:	44 8b 5c 24 14       	mov    0x14(%rsp),%r11d
    e915:	41 c1 c8 0b          	ror    $0xb,%r8d
    e919:	f7 d1                	not    %ecx
    e91b:	41 01 f0             	add    %esi,%r8d
    e91e:	44 09 c1             	or     %r8d,%ecx
    e921:	31 f1                	xor    %esi,%ecx
    e923:	42 8d b4 16 7d f4 ef 	lea    -0x100b83(%rsi,%r10,1),%esi
    e92a:	ff 
    e92b:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
    e930:	01 c1                	add    %eax,%ecx
    e932:	89 e8                	mov    %ebp,%eax
    e934:	c1 c1 06             	rol    $0x6,%ecx
    e937:	44 01 c1             	add    %r8d,%ecx
    e93a:	09 c8                	or     %ecx,%eax
    e93c:	44 31 c0             	xor    %r8d,%eax
    e93f:	01 d0                	add    %edx,%eax
    e941:	44 89 c2             	mov    %r8d,%edx
    e944:	47 8d 84 08 d1 5d 84 	lea    -0x7a7ba22f(%r8,%r9,1),%r8d
    e94b:	85 
    e94c:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
    e951:	c1 c0 0a             	rol    $0xa,%eax
    e954:	f7 d2                	not    %edx
    e956:	01 c8                	add    %ecx,%eax
    e958:	09 c2                	or     %eax,%edx
    e95a:	31 ca                	xor    %ecx,%edx
    e95c:	01 f2                	add    %esi,%edx
    e95e:	89 ce                	mov    %ecx,%esi
    e960:	42 8d 8c 11 4f 7e a8 	lea    0x6fa87e4f(%rcx,%r10,1),%ecx
    e967:	6f 
    e968:	c1 c2 0f             	rol    $0xf,%edx
    e96b:	f7 d6                	not    %esi
    e96d:	01 c2                	add    %eax,%edx
    e96f:	09 d6                	or     %edx,%esi
    e971:	31 c6                	xor    %eax,%esi
    e973:	44 01 c6             	add    %r8d,%esi
    e976:	41 89 c0             	mov    %eax,%r8d
    e979:	42 8d 84 30 e0 e6 2c 	lea    -0x1d31920(%rax,%r14,1),%eax
    e980:	fe 
    e981:	c1 ce 0b             	ror    $0xb,%esi
    e984:	41 f7 d0             	not    %r8d
    e987:	01 d6                	add    %edx,%esi
    e989:	41 09 f0             	or     %esi,%r8d
    e98c:	41 31 d0             	xor    %edx,%r8d
    e98f:	41 01 c8             	add    %ecx,%r8d
    e992:	89 d1                	mov    %edx,%ecx
    e994:	42 8d 94 0a 14 43 01 	lea    -0x5cfebcec(%rdx,%r9,1),%edx
    e99b:	a3 
    e99c:	41 c1 c0 06          	rol    $0x6,%r8d
    e9a0:	f7 d1                	not    %ecx
    e9a2:	41 01 f0             	add    %esi,%r8d
    e9a5:	44 09 c1             	or     %r8d,%ecx
    e9a8:	31 f1                	xor    %esi,%ecx
    e9aa:	01 c1                	add    %eax,%ecx
    e9ac:	89 f0                	mov    %esi,%eax
    e9ae:	42 8d b4 1e a1 11 08 	lea    0x4e0811a1(%rsi,%r11,1),%esi
    e9b5:	4e 
    e9b6:	c1 c1 0a             	rol    $0xa,%ecx
    e9b9:	f7 d0                	not    %eax
    e9bb:	44 01 c1             	add    %r8d,%ecx
    e9be:	09 c8                	or     %ecx,%eax
    e9c0:	44 31 c0             	xor    %r8d,%eax
    e9c3:	01 d0                	add    %edx,%eax
    e9c5:	44 89 c2             	mov    %r8d,%edx
    e9c8:	45 8d 84 18 82 7e 53 	lea    -0x8ac817e(%r8,%rbx,1),%r8d
    e9cf:	f7 
    e9d0:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    e9d4:	c1 c0 0f             	rol    $0xf,%eax
    e9d7:	f7 d2                	not    %edx
    e9d9:	01 c8                	add    %ecx,%eax
    e9db:	09 c2                	or     %eax,%edx
    e9dd:	31 ca                	xor    %ecx,%edx
    e9df:	01 d6                	add    %edx,%esi
    e9e1:	89 ca                	mov    %ecx,%edx
    e9e3:	8d 8c 19 35 f2 3a bd 	lea    -0x42c50dcb(%rcx,%rbx,1),%ecx
    e9ea:	c1 ce 0b             	ror    $0xb,%esi
    e9ed:	f7 d2                	not    %edx
    e9ef:	01 c6                	add    %eax,%esi
    e9f1:	09 f2                	or     %esi,%edx
    e9f3:	31 c2                	xor    %eax,%edx
    e9f5:	44 01 c2             	add    %r8d,%edx
    e9f8:	41 89 c0             	mov    %eax,%r8d
    e9fb:	42 8d 84 38 bb d2 d7 	lea    0x2ad7d2bb(%rax,%r15,1),%eax
    ea02:	2a 
    ea03:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    ea08:	c1 c2 06             	rol    $0x6,%edx
    ea0b:	41 f7 d0             	not    %r8d
    ea0e:	01 f2                	add    %esi,%edx
    ea10:	41 09 d0             	or     %edx,%r8d
    ea13:	89 54 24 60          	mov    %edx,0x60(%rsp)
    ea17:	41 31 f0             	xor    %esi,%r8d
    ea1a:	44 01 c1             	add    %r8d,%ecx
    ea1d:	41 89 f0             	mov    %esi,%r8d
    ea20:	42 8d b4 3e 91 d3 86 	lea    -0x14792c6f(%rsi,%r15,1),%esi
    ea27:	eb 
    ea28:	c1 c1 0a             	rol    $0xa,%ecx
    ea2b:	41 f7 d0             	not    %r8d
    ea2e:	01 d1                	add    %edx,%ecx
    ea30:	41 09 c8             	or     %ecx,%r8d
    ea33:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
    ea37:	41 31 d0             	xor    %edx,%r8d
    ea3a:	44 01 c0             	add    %r8d,%eax
    ea3d:	41 89 d0             	mov    %edx,%r8d
    ea40:	c1 c0 0f             	rol    $0xf,%eax
    ea43:	41 f7 d0             	not    %r8d
    ea46:	01 c8                	add    %ecx,%eax
    ea48:	41 09 c0             	or     %eax,%r8d
    ea4b:	89 44 24 68          	mov    %eax,0x68(%rsp)
    ea4f:	41 31 c8             	xor    %ecx,%r8d
    ea52:	44 01 c6             	add    %r8d,%esi
    ea55:	c1 ce 0b             	ror    $0xb,%esi
    ea58:	01 c6                	add    %eax,%esi
    ea5a:	89 74 24 64          	mov    %esi,0x64(%rsp)
    ea5e:	03 57 08             	add    0x8(%rdi),%edx
    ea61:	03 77 0c             	add    0xc(%rdi),%esi
    ea64:	03 47 10             	add    0x10(%rdi),%eax
    ea67:	89 57 08             	mov    %edx,0x8(%rdi)
    ea6a:	03 4f 14             	add    0x14(%rdi),%ecx
    ea6d:	89 77 0c             	mov    %esi,0xc(%rdi)
    ea70:	be 50 00 00 00       	mov    $0x50,%esi
    ea75:	89 47 10             	mov    %eax,0x10(%rdi)
    ea78:	89 4f 14             	mov    %ecx,0x14(%rdi)
    ea7b:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    ea80:	e8 2b 06 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    ea85:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    ea8a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ea91:	00 00 
    ea93:	75 14                	jne    eaa9 <mbedtls_internal_md5_process+0x809>
    ea95:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    ea9c:	31 c0                	xor    %eax,%eax
    ea9e:	5b                   	pop    %rbx
    ea9f:	5d                   	pop    %rbp
    eaa0:	41 5c                	pop    %r12
    eaa2:	41 5d                	pop    %r13
    eaa4:	41 5e                	pop    %r14
    eaa6:	41 5f                	pop    %r15
    eaa8:	c3                   	retq   
    eaa9:	e8 c2 57 ff ff       	callq  4270 <__stack_chk_fail@plt>
    eaae:	66 90                	xchg   %ax,%ax

000000000000eab0 <mbedtls_md5_update.part.0>:
    eab0:	41 56                	push   %r14
    eab2:	41 55                	push   %r13
    eab4:	41 54                	push   %r12
    eab6:	49 89 fc             	mov    %rdi,%r12
    eab9:	55                   	push   %rbp
    eaba:	48 89 f5             	mov    %rsi,%rbp
    eabd:	53                   	push   %rbx
    eabe:	8b 07                	mov    (%rdi),%eax
    eac0:	48 89 d3             	mov    %rdx,%rbx
    eac3:	ba 40 00 00 00       	mov    $0x40,%edx
    eac8:	41 89 c5             	mov    %eax,%r13d
    eacb:	41 83 e5 3f          	and    $0x3f,%r13d
    eacf:	44 29 ea             	sub    %r13d,%edx
    ead2:	01 d8                	add    %ebx,%eax
    ead4:	89 07                	mov    %eax,(%rdi)
    ead6:	41 89 d6             	mov    %edx,%r14d
    ead9:	73 04                	jae    eadf <mbedtls_md5_update.part.0+0x2f>
    eadb:	83 47 04 01          	addl   $0x1,0x4(%rdi)
    eadf:	45 85 ed             	test   %r13d,%r13d
    eae2:	74 05                	je     eae9 <mbedtls_md5_update.part.0+0x39>
    eae4:	49 39 de             	cmp    %rbx,%r14
    eae7:	76 37                	jbe    eb20 <mbedtls_md5_update.part.0+0x70>
    eae9:	48 83 fb 3f          	cmp    $0x3f,%rbx
    eaed:	77 17                	ja     eb06 <mbedtls_md5_update.part.0+0x56>
    eaef:	eb 7f                	jmp    eb70 <mbedtls_md5_update.part.0+0xc0>
    eaf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eaf8:	48 83 eb 40          	sub    $0x40,%rbx
    eafc:	48 83 c5 40          	add    $0x40,%rbp
    eb00:	48 83 fb 3f          	cmp    $0x3f,%rbx
    eb04:	76 6a                	jbe    eb70 <mbedtls_md5_update.part.0+0xc0>
    eb06:	48 89 ee             	mov    %rbp,%rsi
    eb09:	4c 89 e7             	mov    %r12,%rdi
    eb0c:	e8 8f f7 ff ff       	callq  e2a0 <mbedtls_internal_md5_process>
    eb11:	85 c0                	test   %eax,%eax
    eb13:	74 e3                	je     eaf8 <mbedtls_md5_update.part.0+0x48>
    eb15:	5b                   	pop    %rbx
    eb16:	5d                   	pop    %rbp
    eb17:	41 5c                	pop    %r12
    eb19:	41 5d                	pop    %r13
    eb1b:	41 5e                	pop    %r14
    eb1d:	c3                   	retq   
    eb1e:	66 90                	xchg   %ax,%ax
    eb20:	4d 8d 44 24 18       	lea    0x18(%r12),%r8
    eb25:	4d 01 c5             	add    %r8,%r13
    eb28:	83 fa 08             	cmp    $0x8,%edx
    eb2b:	0f 83 87 00 00 00    	jae    ebb8 <mbedtls_md5_update.part.0+0x108>
    eb31:	f6 c2 04             	test   $0x4,%dl
    eb34:	0f 85 19 01 00 00    	jne    ec53 <mbedtls_md5_update.part.0+0x1a3>
    eb3a:	85 d2                	test   %edx,%edx
    eb3c:	74 11                	je     eb4f <mbedtls_md5_update.part.0+0x9f>
    eb3e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    eb42:	83 e2 02             	and    $0x2,%edx
    eb45:	41 88 45 00          	mov    %al,0x0(%r13)
    eb49:	0f 85 30 01 00 00    	jne    ec7f <mbedtls_md5_update.part.0+0x1cf>
    eb4f:	4c 89 c6             	mov    %r8,%rsi
    eb52:	4c 89 e7             	mov    %r12,%rdi
    eb55:	e8 46 f7 ff ff       	callq  e2a0 <mbedtls_internal_md5_process>
    eb5a:	85 c0                	test   %eax,%eax
    eb5c:	75 b7                	jne    eb15 <mbedtls_md5_update.part.0+0x65>
    eb5e:	4c 01 f5             	add    %r14,%rbp
    eb61:	4c 29 f3             	sub    %r14,%rbx
    eb64:	45 31 ed             	xor    %r13d,%r13d
    eb67:	eb 80                	jmp    eae9 <mbedtls_md5_update.part.0+0x39>
    eb69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eb70:	31 c0                	xor    %eax,%eax
    eb72:	48 85 db             	test   %rbx,%rbx
    eb75:	74 9e                	je     eb15 <mbedtls_md5_update.part.0+0x65>
    eb77:	4b 8d 4c 2c 18       	lea    0x18(%r12,%r13,1),%rcx
    eb7c:	89 d8                	mov    %ebx,%eax
    eb7e:	83 fb 08             	cmp    $0x8,%ebx
    eb81:	0f 83 7e 00 00 00    	jae    ec05 <mbedtls_md5_update.part.0+0x155>
    eb87:	83 e3 04             	and    $0x4,%ebx
    eb8a:	0f 85 d9 00 00 00    	jne    ec69 <mbedtls_md5_update.part.0+0x1b9>
    eb90:	85 c0                	test   %eax,%eax
    eb92:	74 16                	je     ebaa <mbedtls_md5_update.part.0+0xfa>
    eb94:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
    eb98:	88 11                	mov    %dl,(%rcx)
    eb9a:	a8 02                	test   $0x2,%al
    eb9c:	74 0c                	je     ebaa <mbedtls_md5_update.part.0+0xfa>
    eb9e:	89 c2                	mov    %eax,%edx
    eba0:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
    eba5:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    ebaa:	31 c0                	xor    %eax,%eax
    ebac:	5b                   	pop    %rbx
    ebad:	5d                   	pop    %rbp
    ebae:	41 5c                	pop    %r12
    ebb0:	41 5d                	pop    %r13
    ebb2:	41 5e                	pop    %r14
    ebb4:	c3                   	retq   
    ebb5:	0f 1f 00             	nopl   (%rax)
    ebb8:	48 8b 45 00          	mov    0x0(%rbp),%rax
    ebbc:	49 8d 75 08          	lea    0x8(%r13),%rsi
    ebc0:	49 89 e9             	mov    %rbp,%r9
    ebc3:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    ebc7:	49 89 45 00          	mov    %rax,0x0(%r13)
    ebcb:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
    ebd0:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
    ebd5:	49 29 f5             	sub    %rsi,%r13
    ebd8:	44 01 ea             	add    %r13d,%edx
    ebdb:	4d 29 e9             	sub    %r13,%r9
    ebde:	83 e2 f8             	and    $0xfffffff8,%edx
    ebe1:	83 fa 08             	cmp    $0x8,%edx
    ebe4:	0f 82 65 ff ff ff    	jb     eb4f <mbedtls_md5_update.part.0+0x9f>
    ebea:	83 e2 f8             	and    $0xfffffff8,%edx
    ebed:	31 c0                	xor    %eax,%eax
    ebef:	89 c1                	mov    %eax,%ecx
    ebf1:	83 c0 08             	add    $0x8,%eax
    ebf4:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
    ebf8:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    ebfc:	39 d0                	cmp    %edx,%eax
    ebfe:	72 ef                	jb     ebef <mbedtls_md5_update.part.0+0x13f>
    ec00:	e9 4a ff ff ff       	jmpq   eb4f <mbedtls_md5_update.part.0+0x9f>
    ec05:	48 8b 45 00          	mov    0x0(%rbp),%rax
    ec09:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    ec0d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    ec11:	48 89 01             	mov    %rax,(%rcx)
    ec14:	89 d8                	mov    %ebx,%eax
    ec16:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
    ec1b:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    ec20:	48 29 f1             	sub    %rsi,%rcx
    ec23:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
    ec26:	48 29 cd             	sub    %rcx,%rbp
    ec29:	83 e0 f8             	and    $0xfffffff8,%eax
    ec2c:	83 f8 08             	cmp    $0x8,%eax
    ec2f:	0f 82 75 ff ff ff    	jb     ebaa <mbedtls_md5_update.part.0+0xfa>
    ec35:	83 e0 f8             	and    $0xfffffff8,%eax
    ec38:	31 d2                	xor    %edx,%edx
    ec3a:	89 d1                	mov    %edx,%ecx
    ec3c:	83 c2 08             	add    $0x8,%edx
    ec3f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
    ec44:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    ec48:	39 c2                	cmp    %eax,%edx
    ec4a:	72 ee                	jb     ec3a <mbedtls_md5_update.part.0+0x18a>
    ec4c:	31 c0                	xor    %eax,%eax
    ec4e:	e9 59 ff ff ff       	jmpq   ebac <mbedtls_md5_update.part.0+0xfc>
    ec53:	8b 45 00             	mov    0x0(%rbp),%eax
    ec56:	41 89 45 00          	mov    %eax,0x0(%r13)
    ec5a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
    ec5f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
    ec64:	e9 e6 fe ff ff       	jmpq   eb4f <mbedtls_md5_update.part.0+0x9f>
    ec69:	8b 55 00             	mov    0x0(%rbp),%edx
    ec6c:	89 11                	mov    %edx,(%rcx)
    ec6e:	89 c2                	mov    %eax,%edx
    ec70:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
    ec74:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    ec78:	31 c0                	xor    %eax,%eax
    ec7a:	e9 2d ff ff ff       	jmpq   ebac <mbedtls_md5_update.part.0+0xfc>
    ec7f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
    ec85:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
    ec8b:	e9 bf fe ff ff       	jmpq   eb4f <mbedtls_md5_update.part.0+0x9f>

000000000000ec90 <mbedtls_md5_update>:
    ec90:	f3 0f 1e fa          	endbr64 
    ec94:	48 85 d2             	test   %rdx,%rdx
    ec97:	74 07                	je     eca0 <mbedtls_md5_update+0x10>
    ec99:	e9 12 fe ff ff       	jmpq   eab0 <mbedtls_md5_update.part.0>
    ec9e:	66 90                	xchg   %ax,%ax
    eca0:	31 c0                	xor    %eax,%eax
    eca2:	c3                   	retq   
    eca3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    ecaa:	00 00 00 00 
    ecae:	66 90                	xchg   %ax,%ax

000000000000ecb0 <mbedtls_md5_finish>:
    ecb0:	f3 0f 1e fa          	endbr64 
    ecb4:	41 54                	push   %r12
    ecb6:	4c 8d 67 18          	lea    0x18(%rdi),%r12
    ecba:	55                   	push   %rbp
    ecbb:	48 89 f5             	mov    %rsi,%rbp
    ecbe:	53                   	push   %rbx
    ecbf:	8b 07                	mov    (%rdi),%eax
    ecc1:	48 89 fb             	mov    %rdi,%rbx
    ecc4:	83 e0 3f             	and    $0x3f,%eax
    ecc7:	8d 48 01             	lea    0x1(%rax),%ecx
    ecca:	c6 44 07 18 80       	movb   $0x80,0x18(%rdi,%rax,1)
    eccf:	89 c8                	mov    %ecx,%eax
    ecd1:	4c 01 e0             	add    %r12,%rax
    ecd4:	83 f9 38             	cmp    $0x38,%ecx
    ecd7:	77 57                	ja     ed30 <mbedtls_md5_finish+0x80>
    ecd9:	ba 38 00 00 00       	mov    $0x38,%edx
    ecde:	31 ff                	xor    %edi,%edi
    ece0:	29 ca                	sub    %ecx,%edx
    ece2:	83 fa 08             	cmp    $0x8,%edx
    ece5:	72 79                	jb     ed60 <mbedtls_md5_finish+0xb0>
    ece7:	89 d1                	mov    %edx,%ecx
    ece9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ecf0:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
    ecf7:	00 00 
    ecf9:	48 8d 48 08          	lea    0x8(%rax),%rcx
    ecfd:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ed01:	48 29 c8             	sub    %rcx,%rax
    ed04:	01 c2                	add    %eax,%edx
    ed06:	83 e2 f8             	and    $0xfffffff8,%edx
    ed09:	83 fa 08             	cmp    $0x8,%edx
    ed0c:	0f 82 8b 00 00 00    	jb     ed9d <mbedtls_md5_finish+0xed>
    ed12:	83 e2 f8             	and    $0xfffffff8,%edx
    ed15:	31 c0                	xor    %eax,%eax
    ed17:	89 c6                	mov    %eax,%esi
    ed19:	83 c0 08             	add    $0x8,%eax
    ed1c:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
    ed20:	39 d0                	cmp    %edx,%eax
    ed22:	72 f3                	jb     ed17 <mbedtls_md5_finish+0x67>
    ed24:	eb 77                	jmp    ed9d <mbedtls_md5_finish+0xed>
    ed26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ed2d:	00 00 00 
    ed30:	ba 40 00 00 00       	mov    $0x40,%edx
    ed35:	29 ca                	sub    %ecx,%edx
    ed37:	89 d1                	mov    %edx,%ecx
    ed39:	74 0f                	je     ed4a <mbedtls_md5_finish+0x9a>
    ed3b:	31 d2                	xor    %edx,%edx
    ed3d:	89 d6                	mov    %edx,%esi
    ed3f:	83 c2 01             	add    $0x1,%edx
    ed42:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
    ed46:	39 ca                	cmp    %ecx,%edx
    ed48:	72 f3                	jb     ed3d <mbedtls_md5_finish+0x8d>
    ed4a:	4c 89 e6             	mov    %r12,%rsi
    ed4d:	48 89 df             	mov    %rbx,%rdi
    ed50:	e8 4b f5 ff ff       	callq  e2a0 <mbedtls_internal_md5_process>
    ed55:	85 c0                	test   %eax,%eax
    ed57:	74 27                	je     ed80 <mbedtls_md5_finish+0xd0>
    ed59:	5b                   	pop    %rbx
    ed5a:	5d                   	pop    %rbp
    ed5b:	41 5c                	pop    %r12
    ed5d:	c3                   	retq   
    ed5e:	66 90                	xchg   %ax,%ax
    ed60:	f6 c2 04             	test   $0x4,%dl
    ed63:	0f 85 7f 00 00 00    	jne    ede8 <mbedtls_md5_finish+0x138>
    ed69:	85 d2                	test   %edx,%edx
    ed6b:	74 30                	je     ed9d <mbedtls_md5_finish+0xed>
    ed6d:	c6 00 00             	movb   $0x0,(%rax)
    ed70:	f6 c2 02             	test   $0x2,%dl
    ed73:	74 28                	je     ed9d <mbedtls_md5_finish+0xed>
    ed75:	31 c9                	xor    %ecx,%ecx
    ed77:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
    ed7c:	eb 1f                	jmp    ed9d <mbedtls_md5_finish+0xed>
    ed7e:	66 90                	xchg   %ax,%ax
    ed80:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ed84:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
    ed88:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
    ed8f:	00 00 
    ed91:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
    ed97:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
    ed9d:	8b 13                	mov    (%rbx),%edx
    ed9f:	8b 43 04             	mov    0x4(%rbx),%eax
    eda2:	4c 89 e6             	mov    %r12,%rsi
    eda5:	48 89 df             	mov    %rbx,%rdi
    eda8:	89 d1                	mov    %edx,%ecx
    edaa:	c1 e0 03             	shl    $0x3,%eax
    edad:	c1 e9 1d             	shr    $0x1d,%ecx
    edb0:	c1 e2 03             	shl    $0x3,%edx
    edb3:	09 c8                	or     %ecx,%eax
    edb5:	89 53 50             	mov    %edx,0x50(%rbx)
    edb8:	89 43 54             	mov    %eax,0x54(%rbx)
    edbb:	e8 e0 f4 ff ff       	callq  e2a0 <mbedtls_internal_md5_process>
    edc0:	85 c0                	test   %eax,%eax
    edc2:	75 95                	jne    ed59 <mbedtls_md5_finish+0xa9>
    edc4:	8b 53 08             	mov    0x8(%rbx),%edx
    edc7:	89 55 00             	mov    %edx,0x0(%rbp)
    edca:	8b 53 0c             	mov    0xc(%rbx),%edx
    edcd:	89 55 04             	mov    %edx,0x4(%rbp)
    edd0:	8b 53 10             	mov    0x10(%rbx),%edx
    edd3:	89 55 08             	mov    %edx,0x8(%rbp)
    edd6:	8b 53 14             	mov    0x14(%rbx),%edx
    edd9:	5b                   	pop    %rbx
    edda:	89 55 0c             	mov    %edx,0xc(%rbp)
    eddd:	5d                   	pop    %rbp
    edde:	41 5c                	pop    %r12
    ede0:	c3                   	retq   
    ede1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ede8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    edee:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
    edf5:	00 
    edf6:	eb a5                	jmp    ed9d <mbedtls_md5_finish+0xed>
    edf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    edff:	00 

000000000000ee00 <mbedtls_md5>:
    ee00:	f3 0f 1e fa          	endbr64 
    ee04:	41 55                	push   %r13
    ee06:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee0a:	41 54                	push   %r12
    ee0c:	55                   	push   %rbp
    ee0d:	48 89 d5             	mov    %rdx,%rbp
    ee10:	48 83 ec 60          	sub    $0x60,%rsp
    ee14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ee1b:	00 00 
    ee1d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    ee22:	31 c0                	xor    %eax,%eax
    ee24:	49 89 e5             	mov    %rsp,%r13
    ee27:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ee2e:	00 
    ee2f:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    ee36:	ab cd ef 
    ee39:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ee3e:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    ee45:	54 32 10 
    ee48:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    ee4d:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    ee52:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    ee57:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
    ee5c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    ee61:	48 85 f6             	test   %rsi,%rsi
    ee64:	74 15                	je     ee7b <mbedtls_md5+0x7b>
    ee66:	48 89 f2             	mov    %rsi,%rdx
    ee69:	48 89 fe             	mov    %rdi,%rsi
    ee6c:	4c 89 ef             	mov    %r13,%rdi
    ee6f:	e8 3c fc ff ff       	callq  eab0 <mbedtls_md5_update.part.0>
    ee74:	41 89 c4             	mov    %eax,%r12d
    ee77:	85 c0                	test   %eax,%eax
    ee79:	75 0e                	jne    ee89 <mbedtls_md5+0x89>
    ee7b:	48 89 ee             	mov    %rbp,%rsi
    ee7e:	4c 89 ef             	mov    %r13,%rdi
    ee81:	e8 2a fe ff ff       	callq  ecb0 <mbedtls_md5_finish>
    ee86:	41 89 c4             	mov    %eax,%r12d
    ee89:	be 58 00 00 00       	mov    $0x58,%esi
    ee8e:	4c 89 ef             	mov    %r13,%rdi
    ee91:	e8 1a 02 00 00       	callq  f0b0 <mbedtls_platform_zeroize>
    ee96:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    ee9b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    eea2:	00 00 
    eea4:	75 0d                	jne    eeb3 <mbedtls_md5+0xb3>
    eea6:	48 83 c4 60          	add    $0x60,%rsp
    eeaa:	44 89 e0             	mov    %r12d,%eax
    eead:	5d                   	pop    %rbp
    eeae:	41 5c                	pop    %r12
    eeb0:	41 5d                	pop    %r13
    eeb2:	c3                   	retq   
    eeb3:	e8 b8 53 ff ff       	callq  4270 <__stack_chk_fail@plt>
    eeb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    eebf:	00 

000000000000eec0 <mbedtls_md5_self_test>:
    eec0:	f3 0f 1e fa          	endbr64 
    eec4:	41 57                	push   %r15
    eec6:	41 56                	push   %r14
    eec8:	45 31 f6             	xor    %r14d,%r14d
    eecb:	41 55                	push   %r13
    eecd:	4c 8d 2d ec 69 01 00 	lea    0x169ec(%rip),%r13        # 258c0 <md5_test_buf>
    eed4:	41 54                	push   %r12
    eed6:	4c 8d 25 23 69 01 00 	lea    0x16923(%rip),%r12        # 25800 <md5_test_sum>
    eedd:	55                   	push   %rbp
    eede:	89 fd                	mov    %edi,%ebp
    eee0:	53                   	push   %rbx
    eee1:	31 db                	xor    %ebx,%ebx
    eee3:	48 83 ec 28          	sub    $0x28,%rsp
    eee7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    eeee:	00 00 
    eef0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    eef5:	31 c0                	xor    %eax,%eax
    eef7:	49 89 e7             	mov    %rsp,%r15
    eefa:	85 ed                	test   %ebp,%ebp
    eefc:	75 61                	jne    ef5f <mbedtls_md5_self_test+0x9f>
    eefe:	66 90                	xchg   %ax,%ax
    ef00:	4c 89 f6             	mov    %r14,%rsi
    ef03:	4c 89 fa             	mov    %r15,%rdx
    ef06:	4c 89 ef             	mov    %r13,%rdi
    ef09:	e8 f2 fe ff ff       	callq  ee00 <mbedtls_md5>
    ef0e:	41 89 c6             	mov    %eax,%r14d
    ef11:	85 c0                	test   %eax,%eax
    ef13:	75 71                	jne    ef86 <mbedtls_md5_self_test+0xc6>
    ef15:	48 89 d8             	mov    %rbx,%rax
    ef18:	49 8b 17             	mov    (%r15),%rdx
    ef1b:	49 8b 77 08          	mov    0x8(%r15),%rsi
    ef1f:	48 c1 e0 04          	shl    $0x4,%rax
    ef23:	4c 01 e0             	add    %r12,%rax
    ef26:	48 33 70 08          	xor    0x8(%rax),%rsi
    ef2a:	48 33 10             	xor    (%rax),%rdx
    ef2d:	48 09 d6             	or     %rdx,%rsi
    ef30:	75 4e                	jne    ef80 <mbedtls_md5_self_test+0xc0>
    ef32:	85 ed                	test   %ebp,%ebp
    ef34:	74 0c                	je     ef42 <mbedtls_md5_self_test+0x82>
    ef36:	48 8d 3d 8a f1 00 00 	lea    0xf18a(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
    ef3d:	e8 ce 52 ff ff       	callq  4210 <puts@plt>
    ef42:	48 83 c3 01          	add    $0x1,%rbx
    ef46:	49 83 c5 51          	add    $0x51,%r13
    ef4a:	48 83 fb 07          	cmp    $0x7,%rbx
    ef4e:	74 60                	je     efb0 <mbedtls_md5_self_test+0xf0>
    ef50:	48 8d 05 29 69 01 00 	lea    0x16929(%rip),%rax        # 25880 <md5_test_buflen>
    ef57:	4c 8b 34 d8          	mov    (%rax,%rbx,8),%r14
    ef5b:	85 ed                	test   %ebp,%ebp
    ef5d:	74 a1                	je     ef00 <mbedtls_md5_self_test+0x40>
    ef5f:	8d 53 01             	lea    0x1(%rbx),%edx
    ef62:	48 8d 35 6a 68 01 00 	lea    0x1686a(%rip),%rsi        # 257d3 <supported_digests+0x53>
    ef69:	bf 01 00 00 00       	mov    $0x1,%edi
    ef6e:	31 c0                	xor    %eax,%eax
    ef70:	e8 db 53 ff ff       	callq  4350 <__printf_chk@plt>
    ef75:	eb 89                	jmp    ef00 <mbedtls_md5_self_test+0x40>
    ef77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ef7e:	00 00 
    ef80:	41 be 01 00 00 00    	mov    $0x1,%r14d
    ef86:	85 ed                	test   %ebp,%ebp
    ef88:	75 46                	jne    efd0 <mbedtls_md5_self_test+0x110>
    ef8a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    ef8f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ef96:	00 00 
    ef98:	75 44                	jne    efde <mbedtls_md5_self_test+0x11e>
    ef9a:	48 83 c4 28          	add    $0x28,%rsp
    ef9e:	44 89 f0             	mov    %r14d,%eax
    efa1:	5b                   	pop    %rbx
    efa2:	5d                   	pop    %rbp
    efa3:	41 5c                	pop    %r12
    efa5:	41 5d                	pop    %r13
    efa7:	41 5e                	pop    %r14
    efa9:	41 5f                	pop    %r15
    efab:	c3                   	retq   
    efac:	0f 1f 40 00          	nopl   0x0(%rax)
    efb0:	85 ed                	test   %ebp,%ebp
    efb2:	75 0c                	jne    efc0 <mbedtls_md5_self_test+0x100>
    efb4:	45 31 f6             	xor    %r14d,%r14d
    efb7:	eb d1                	jmp    ef8a <mbedtls_md5_self_test+0xca>
    efb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    efc0:	bf 0a 00 00 00       	mov    $0xa,%edi
    efc5:	e8 36 52 ff ff       	callq  4200 <putchar@plt>
    efca:	eb be                	jmp    ef8a <mbedtls_md5_self_test+0xca>
    efcc:	0f 1f 40 00          	nopl   0x0(%rax)
    efd0:	48 8d 3d 46 70 01 00 	lea    0x17046(%rip),%rdi        # 2601d <sha1_test_buf+0xbd>
    efd7:	e8 34 52 ff ff       	callq  4210 <puts@plt>
    efdc:	eb ac                	jmp    ef8a <mbedtls_md5_self_test+0xca>
    efde:	e8 8d 52 ff ff       	callq  4270 <__stack_chk_fail@plt>
    efe3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    efea:	00 00 00 
    efed:	0f 1f 00             	nopl   (%rax)

000000000000eff0 <mbedtls_get_unaligned_uint16>:
    eff0:	f3 0f 1e fa          	endbr64 
    eff4:	0f b7 07             	movzwl (%rdi),%eax
    eff7:	c3                   	retq   
    eff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    efff:	00 

000000000000f000 <mbedtls_put_unaligned_uint16>:
    f000:	f3 0f 1e fa          	endbr64 
    f004:	66 89 37             	mov    %si,(%rdi)
    f007:	c3                   	retq   
    f008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f00f:	00 

000000000000f010 <mbedtls_get_unaligned_uint32>:
    f010:	f3 0f 1e fa          	endbr64 
    f014:	8b 07                	mov    (%rdi),%eax
    f016:	c3                   	retq   
    f017:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f01e:	00 00 

000000000000f020 <mbedtls_put_unaligned_uint32>:
    f020:	f3 0f 1e fa          	endbr64 
    f024:	89 37                	mov    %esi,(%rdi)
    f026:	c3                   	retq   
    f027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f02e:	00 00 

000000000000f030 <mbedtls_get_unaligned_uint64>:
    f030:	f3 0f 1e fa          	endbr64 
    f034:	48 8b 07             	mov    (%rdi),%rax
    f037:	c3                   	retq   
    f038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f03f:	00 

000000000000f040 <mbedtls_put_unaligned_uint64>:
    f040:	f3 0f 1e fa          	endbr64 
    f044:	48 89 37             	mov    %rsi,(%rdi)
    f047:	c3                   	retq   
    f048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f04f:	00 

000000000000f050 <mbedtls_xor>:
    f050:	f3 0f 1e fa          	endbr64 
    f054:	48 83 f9 03          	cmp    $0x3,%rcx
    f058:	76 46                	jbe    f0a0 <mbedtls_xor+0x50>
    f05a:	b8 04 00 00 00       	mov    $0x4,%eax
    f05f:	90                   	nop
    f060:	44 8b 44 02 fc       	mov    -0x4(%rdx,%rax,1),%r8d
    f065:	44 33 44 06 fc       	xor    -0x4(%rsi,%rax,1),%r8d
    f06a:	44 89 44 07 fc       	mov    %r8d,-0x4(%rdi,%rax,1)
    f06f:	49 89 c0             	mov    %rax,%r8
    f072:	48 83 c0 04          	add    $0x4,%rax
    f076:	48 39 c1             	cmp    %rax,%rcx
    f079:	73 e5                	jae    f060 <mbedtls_xor+0x10>
    f07b:	4c 39 c1             	cmp    %r8,%rcx
    f07e:	76 16                	jbe    f096 <mbedtls_xor+0x46>
    f080:	42 0f b6 04 06       	movzbl (%rsi,%r8,1),%eax
    f085:	42 32 04 02          	xor    (%rdx,%r8,1),%al
    f089:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
    f08d:	49 83 c0 01          	add    $0x1,%r8
    f091:	4c 39 c1             	cmp    %r8,%rcx
    f094:	75 ea                	jne    f080 <mbedtls_xor+0x30>
    f096:	c3                   	retq   
    f097:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f09e:	00 00 
    f0a0:	45 31 c0             	xor    %r8d,%r8d
    f0a3:	eb d6                	jmp    f07b <mbedtls_xor+0x2b>
    f0a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f0ac:	00 00 00 00 

000000000000f0b0 <mbedtls_platform_zeroize>:
    f0b0:	f3 0f 1e fa          	endbr64 
    f0b4:	48 85 f6             	test   %rsi,%rsi
    f0b7:	75 07                	jne    f0c0 <mbedtls_platform_zeroize+0x10>
    f0b9:	c3                   	retq   
    f0ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f0c0:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    f0c7:	e9 a4 52 ff ff       	jmpq   4370 <__explicit_bzero_chk@plt>
    f0cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f0d0 <mbedtls_platform_gmtime_r>:
    f0d0:	f3 0f 1e fa          	endbr64 
    f0d4:	e9 b7 51 ff ff       	jmpq   4290 <gmtime_r@plt>
    f0d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f0e0 <mbedtls_ms_time>:
    f0e0:	f3 0f 1e fa          	endbr64 
    f0e4:	48 83 ec 28          	sub    $0x28,%rsp
    f0e8:	bf 01 00 00 00       	mov    $0x1,%edi
    f0ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f0f4:	00 00 
    f0f6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f0fb:	31 c0                	xor    %eax,%eax
    f0fd:	48 89 e6             	mov    %rsp,%rsi
    f100:	e8 3b 51 ff ff       	callq  4240 <clock_gettime@plt>
    f105:	85 c0                	test   %eax,%eax
    f107:	75 47                	jne    f150 <mbedtls_ms_time+0x70>
    f109:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    f10e:	48 69 0c 24 e8 03 00 	imul   $0x3e8,(%rsp),%rcx
    f115:	00 
    f116:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    f11d:	de 1b 43 
    f120:	48 89 f0             	mov    %rsi,%rax
    f123:	48 c1 fe 3f          	sar    $0x3f,%rsi
    f127:	48 f7 ea             	imul   %rdx
    f12a:	48 c1 fa 12          	sar    $0x12,%rdx
    f12e:	48 29 f2             	sub    %rsi,%rdx
    f131:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    f135:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    f13a:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    f141:	00 00 
    f143:	75 1b                	jne    f160 <mbedtls_ms_time+0x80>
    f145:	48 83 c4 28          	add    $0x28,%rsp
    f149:	c3                   	retq   
    f14a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f150:	31 ff                	xor    %edi,%edi
    f152:	e8 d9 51 ff ff       	callq  4330 <time@plt>
    f157:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
    f15e:	eb d5                	jmp    f135 <mbedtls_ms_time+0x55>
    f160:	e8 0b 51 ff ff       	callq  4270 <__stack_chk_fail@plt>
    f165:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f16c:	00 00 00 
    f16f:	90                   	nop

000000000000f170 <mbedtls_ripemd160_init>:
    f170:	f3 0f 1e fa          	endbr64 
    f174:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    f17b:	48 89 f9             	mov    %rdi,%rcx
    f17e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    f182:	31 c0                	xor    %eax,%eax
    f184:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
    f18b:	00 
    f18c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    f190:	48 29 f9             	sub    %rdi,%rcx
    f193:	83 c1 5c             	add    $0x5c,%ecx
    f196:	c1 e9 03             	shr    $0x3,%ecx
    f199:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    f19c:	c3                   	retq   
    f19d:	0f 1f 00             	nopl   (%rax)

000000000000f1a0 <mbedtls_ripemd160_free>:
    f1a0:	f3 0f 1e fa          	endbr64 
    f1a4:	48 85 ff             	test   %rdi,%rdi
    f1a7:	74 0f                	je     f1b8 <mbedtls_ripemd160_free+0x18>
    f1a9:	be 5c 00 00 00       	mov    $0x5c,%esi
    f1ae:	e9 fd fe ff ff       	jmpq   f0b0 <mbedtls_platform_zeroize>
    f1b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f1b8:	c3                   	retq   
    f1b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f1c0 <mbedtls_ripemd160_clone>:
    f1c0:	f3 0f 1e fa          	endbr64 
    f1c4:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    f1c8:	0f 11 07             	movups %xmm0,(%rdi)
    f1cb:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    f1d0:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    f1d4:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    f1d9:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    f1dd:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    f1e2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    f1e6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    f1eb:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    f1ef:	48 8b 46 50          	mov    0x50(%rsi),%rax
    f1f3:	48 89 47 50          	mov    %rax,0x50(%rdi)
    f1f7:	8b 46 58             	mov    0x58(%rsi),%eax
    f1fa:	89 47 58             	mov    %eax,0x58(%rdi)
    f1fd:	c3                   	retq   
    f1fe:	66 90                	xchg   %ax,%ax

000000000000f200 <mbedtls_ripemd160_starts>:
    f200:	f3 0f 1e fa          	endbr64 
    f204:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    f20b:	ab cd ef 
    f20e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    f215:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f219:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    f220:	54 32 10 
    f223:	48 89 47 10          	mov    %rax,0x10(%rdi)
    f227:	31 c0                	xor    %eax,%eax
    f229:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
    f230:	c3                   	retq   
    f231:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f238:	00 00 00 00 
    f23c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f240 <mbedtls_internal_ripemd160_process>:
    f240:	f3 0f 1e fa          	endbr64 
    f244:	41 57                	push   %r15
    f246:	41 56                	push   %r14
    f248:	41 55                	push   %r13
    f24a:	41 54                	push   %r12
    f24c:	55                   	push   %rbp
    f24d:	53                   	push   %rbx
    f24e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    f255:	44 8b 66 08          	mov    0x8(%rsi),%r12d
    f259:	8b 56 10             	mov    0x10(%rsi),%edx
    f25c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f263:	00 00 
    f265:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    f26c:	00 
    f26d:	31 c0                	xor    %eax,%eax
    f26f:	8b 46 0c             	mov    0xc(%rsi),%eax
    f272:	44 8b 1e             	mov    (%rsi),%r11d
    f275:	44 8b 6e 04          	mov    0x4(%rsi),%r13d
    f279:	8b 5e 1c             	mov    0x1c(%rsi),%ebx
    f27c:	44 89 24 24          	mov    %r12d,(%rsp)
    f280:	44 89 64 24 70       	mov    %r12d,0x70(%rsp)
    f285:	44 8b 66 18          	mov    0x18(%rsi),%r12d
    f289:	89 44 24 24          	mov    %eax,0x24(%rsp)
    f28d:	89 44 24 74          	mov    %eax,0x74(%rsp)
    f291:	8b 46 14             	mov    0x14(%rsi),%eax
    f294:	89 54 24 04          	mov    %edx,0x4(%rsp)
    f298:	89 54 24 78          	mov    %edx,0x78(%rsp)
    f29c:	8b 56 20             	mov    0x20(%rsi),%edx
    f29f:	44 89 5c 24 68       	mov    %r11d,0x68(%rsp)
    f2a4:	44 89 6c 24 6c       	mov    %r13d,0x6c(%rsp)
    f2a9:	89 44 24 08          	mov    %eax,0x8(%rsp)
    f2ad:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
    f2b1:	44 89 a4 24 80 00 00 	mov    %r12d,0x80(%rsp)
    f2b8:	00 
    f2b9:	89 9c 24 84 00 00 00 	mov    %ebx,0x84(%rsp)
    f2c0:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    f2c4:	89 94 24 88 00 00 00 	mov    %edx,0x88(%rsp)
    f2cb:	44 8b 76 24          	mov    0x24(%rsi),%r14d
    f2cf:	44 8b 7e 2c          	mov    0x2c(%rsi),%r15d
    f2d3:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    f2d7:	44 33 57 10          	xor    0x10(%rdi),%r10d
    f2db:	8b 4e 28             	mov    0x28(%rsi),%ecx
    f2de:	44 89 b4 24 8c 00 00 	mov    %r14d,0x8c(%rsp)
    f2e5:	00 
    f2e6:	8b 47 08             	mov    0x8(%rdi),%eax
    f2e9:	8b 6e 38             	mov    0x38(%rsi),%ebp
    f2ec:	44 89 7c 24 14       	mov    %r15d,0x14(%rsp)
    f2f1:	44 8b 46 30          	mov    0x30(%rsi),%r8d
    f2f5:	44 8b 4e 34          	mov    0x34(%rsi),%r9d
    f2f9:	44 89 bc 24 94 00 00 	mov    %r15d,0x94(%rsp)
    f300:	00 
    f301:	44 8b 7f 14          	mov    0x14(%rdi),%r15d
    f305:	44 01 d8             	add    %r11d,%eax
    f308:	8b 76 3c             	mov    0x3c(%rsi),%esi
    f30b:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    f30f:	89 8c 24 90 00 00 00 	mov    %ecx,0x90(%rsp)
    f316:	8b 4f 10             	mov    0x10(%rdi),%ecx
    f319:	45 31 d7             	xor    %r10d,%r15d
    f31c:	44 8b 57 10          	mov    0x10(%rdi),%r10d
    f320:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
    f325:	41 01 c7             	add    %eax,%r15d
    f328:	8b 44 24 08          	mov    0x8(%rsp),%eax
    f32c:	44 89 84 24 98 00 00 	mov    %r8d,0x98(%rsp)
    f333:	00 
    f334:	41 c1 c2 0a          	rol    $0xa,%r10d
    f338:	44 89 4c 24 1c       	mov    %r9d,0x1c(%rsp)
    f33d:	41 c1 c7 0b          	rol    $0xb,%r15d
    f341:	44 03 7f 18          	add    0x18(%rdi),%r15d
    f345:	44 89 d2             	mov    %r10d,%edx
    f348:	44 8b 57 14          	mov    0x14(%rdi),%r10d
    f34c:	44 89 8c 24 9c 00 00 	mov    %r9d,0x9c(%rsp)
    f353:	00 
    f354:	89 ac 24 a0 00 00 00 	mov    %ebp,0xa0(%rsp)
    f35b:	41 f7 d2             	not    %r10d
    f35e:	89 74 24 20          	mov    %esi,0x20(%rsp)
    f362:	44 09 d1             	or     %r10d,%ecx
    f365:	44 8b 57 08          	mov    0x8(%rdi),%r10d
    f369:	33 4f 0c             	xor    0xc(%rdi),%ecx
    f36c:	89 b4 24 a4 00 00 00 	mov    %esi,0xa4(%rsp)
    f373:	41 8d 84 02 e6 8b a2 	lea    0x50a28be6(%r10,%rax,1),%eax
    f37a:	50 
    f37b:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    f37f:	01 c1                	add    %eax,%ecx
    f381:	41 31 d2             	xor    %edx,%r10d
    f384:	c1 c1 08             	rol    $0x8,%ecx
    f387:	03 4f 18             	add    0x18(%rdi),%ecx
    f38a:	44 89 6c 24 34       	mov    %r13d,0x34(%rsp)
    f38f:	45 89 d0             	mov    %r10d,%r8d
    f392:	8b 47 18             	mov    0x18(%rdi),%eax
    f395:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    f399:	89 6c 24 28          	mov    %ebp,0x28(%rsp)
    f39d:	45 31 f8             	xor    %r15d,%r8d
    f3a0:	89 5c 24 30          	mov    %ebx,0x30(%rsp)
    f3a4:	44 01 e8             	add    %r13d,%eax
    f3a7:	41 c1 c2 0a          	rol    $0xa,%r10d
    f3ab:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
    f3b0:	44 8b 2c 24          	mov    (%rsp),%r13d
    f3b4:	45 89 d1             	mov    %r10d,%r9d
    f3b7:	41 01 c0             	add    %eax,%r8d
    f3ba:	41 89 d2             	mov    %edx,%r10d
    f3bd:	8b 47 0c             	mov    0xc(%rdi),%eax
    f3c0:	41 f7 d2             	not    %r10d
    f3c3:	41 c1 c0 0e          	rol    $0xe,%r8d
    f3c7:	44 03 47 14          	add    0x14(%rdi),%r8d
    f3cb:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
    f3d0:	44 09 d0             	or     %r10d,%eax
    f3d3:	44 8b 57 18          	mov    0x18(%rdi),%r10d
    f3d7:	31 c8                	xor    %ecx,%eax
    f3d9:	41 8d b4 2a e6 8b a2 	lea    0x50a28be6(%r10,%rbp,1),%esi
    f3e0:	50 
    f3e1:	45 89 fa             	mov    %r15d,%r10d
    f3e4:	45 31 ca             	xor    %r9d,%r10d
    f3e7:	01 f0                	add    %esi,%eax
    f3e9:	44 89 d5             	mov    %r10d,%ebp
    f3ec:	44 8b 14 24          	mov    (%rsp),%r10d
    f3f0:	44 03 57 14          	add    0x14(%rdi),%r10d
    f3f4:	c1 c0 09             	rol    $0x9,%eax
    f3f7:	44 31 c5             	xor    %r8d,%ebp
    f3fa:	03 47 14             	add    0x14(%rdi),%eax
    f3fd:	44 01 d5             	add    %r10d,%ebp
    f400:	45 89 ca             	mov    %r9d,%r10d
    f403:	41 f7 d2             	not    %r10d
    f406:	c1 c5 0f             	rol    $0xf,%ebp
    f409:	44 89 d6             	mov    %r10d,%esi
    f40c:	44 8b 57 14          	mov    0x14(%rdi),%r10d
    f410:	01 d5                	add    %edx,%ebp
    f412:	41 c1 c7 0a          	rol    $0xa,%r15d
    f416:	09 ce                	or     %ecx,%esi
    f418:	c1 c1 0a             	rol    $0xa,%ecx
    f41b:	31 c6                	xor    %eax,%esi
    f41d:	45 8d 94 1a e6 8b a2 	lea    0x50a28be6(%r10,%rbx,1),%r10d
    f424:	50 
    f425:	44 01 d6             	add    %r10d,%esi
    f428:	45 89 c2             	mov    %r8d,%r10d
    f42b:	41 c1 c0 0a          	rol    $0xa,%r8d
    f42f:	45 31 fa             	xor    %r15d,%r10d
    f432:	c1 c6 09             	rol    $0x9,%esi
    f435:	44 89 d3             	mov    %r10d,%ebx
    f438:	44 8b 54 24 24       	mov    0x24(%rsp),%r10d
    f43d:	01 d6                	add    %edx,%esi
    f43f:	31 eb                	xor    %ebp,%ebx
    f441:	41 01 d2             	add    %edx,%r10d
    f444:	42 8d 94 1a e6 8b a2 	lea    0x50a28be6(%rdx,%r11,1),%edx
    f44b:	50 
    f44c:	41 89 eb             	mov    %ebp,%r11d
    f44f:	c1 c5 0a             	rol    $0xa,%ebp
    f452:	44 01 d3             	add    %r10d,%ebx
    f455:	41 89 ca             	mov    %ecx,%r10d
    f458:	45 31 c3             	xor    %r8d,%r11d
    f45b:	41 f7 d2             	not    %r10d
    f45e:	c1 c3 0c             	rol    $0xc,%ebx
    f461:	41 09 c2             	or     %eax,%r10d
    f464:	44 01 cb             	add    %r9d,%ebx
    f467:	c1 c0 0a             	rol    $0xa,%eax
    f46a:	41 31 f2             	xor    %esi,%r10d
    f46d:	41 31 db             	xor    %ebx,%r11d
    f470:	41 01 d2             	add    %edx,%r10d
    f473:	8b 54 24 04          	mov    0x4(%rsp),%edx
    f477:	41 c1 c2 0b          	rol    $0xb,%r10d
    f47b:	44 01 ca             	add    %r9d,%edx
    f47e:	45 01 ca             	add    %r9d,%r10d
    f481:	47 8d 8c 31 e6 8b a2 	lea    0x50a28be6(%r9,%r14,1),%r9d
    f488:	50 
    f489:	41 01 d3             	add    %edx,%r11d
    f48c:	89 c2                	mov    %eax,%edx
    f48e:	f7 d2                	not    %edx
    f490:	41 c1 c3 05          	rol    $0x5,%r11d
    f494:	09 f2                	or     %esi,%edx
    f496:	45 01 fb             	add    %r15d,%r11d
    f499:	44 31 d2             	xor    %r10d,%edx
    f49c:	44 01 ca             	add    %r9d,%edx
    f49f:	41 89 d9             	mov    %ebx,%r9d
    f4a2:	c1 c2 0d             	rol    $0xd,%edx
    f4a5:	01 ca                	add    %ecx,%edx
    f4a7:	c1 c6 0a             	rol    $0xa,%esi
    f4aa:	41 31 e9             	xor    %ebp,%r9d
    f4ad:	44 03 7c 24 08       	add    0x8(%rsp),%r15d
    f4b2:	45 31 d9             	xor    %r11d,%r9d
    f4b5:	42 8d 8c 29 e6 8b a2 	lea    0x50a28be6(%rcx,%r13,1),%ecx
    f4bc:	50 
    f4bd:	c1 c3 0a             	rol    $0xa,%ebx
    f4c0:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
    f4c5:	45 01 f9             	add    %r15d,%r9d
    f4c8:	41 89 f7             	mov    %esi,%r15d
    f4cb:	41 f7 d7             	not    %r15d
    f4ce:	41 c1 c1 08          	rol    $0x8,%r9d
    f4d2:	45 09 d7             	or     %r10d,%r15d
    f4d5:	45 01 c1             	add    %r8d,%r9d
    f4d8:	41 c1 c2 0a          	rol    $0xa,%r10d
    f4dc:	45 01 e0             	add    %r12d,%r8d
    f4df:	41 31 d7             	xor    %edx,%r15d
    f4e2:	41 01 cf             	add    %ecx,%r15d
    f4e5:	44 89 d9             	mov    %r11d,%ecx
    f4e8:	41 c1 c3 0a          	rol    $0xa,%r11d
    f4ec:	31 d9                	xor    %ebx,%ecx
    f4ee:	41 c1 c7 0f          	rol    $0xf,%r15d
    f4f2:	44 31 c9             	xor    %r9d,%ecx
    f4f5:	41 01 c7             	add    %eax,%r15d
    f4f8:	42 8d 84 28 e6 8b a2 	lea    0x50a28be6(%rax,%r13,1),%eax
    f4ff:	50 
    f500:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
    f505:	44 01 c1             	add    %r8d,%ecx
    f508:	45 89 d0             	mov    %r10d,%r8d
    f50b:	41 f7 d0             	not    %r8d
    f50e:	c1 c1 07             	rol    $0x7,%ecx
    f511:	41 09 d0             	or     %edx,%r8d
    f514:	01 e9                	add    %ebp,%ecx
    f516:	c1 c2 0a             	rol    $0xa,%edx
    f519:	03 6c 24 30          	add    0x30(%rsp),%ebp
    f51d:	45 31 f8             	xor    %r15d,%r8d
    f520:	41 01 c0             	add    %eax,%r8d
    f523:	44 89 c8             	mov    %r9d,%eax
    f526:	44 31 d8             	xor    %r11d,%eax
    f529:	41 c1 c0 0f          	rol    $0xf,%r8d
    f52d:	31 c8                	xor    %ecx,%eax
    f52f:	41 01 f0             	add    %esi,%r8d
    f532:	42 8d b4 2e e6 8b a2 	lea    0x50a28be6(%rsi,%r13,1),%esi
    f539:	50 
    f53a:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    f53f:	01 e8                	add    %ebp,%eax
    f541:	89 d5                	mov    %edx,%ebp
    f543:	c1 c0 09             	rol    $0x9,%eax
    f546:	f7 d5                	not    %ebp
    f548:	01 d8                	add    %ebx,%eax
    f54a:	44 09 fd             	or     %r15d,%ebp
    f54d:	41 c1 c1 0a          	rol    $0xa,%r9d
    f551:	03 5c 24 0c          	add    0xc(%rsp),%ebx
    f555:	44 31 c5             	xor    %r8d,%ebp
    f558:	41 c1 c7 0a          	rol    $0xa,%r15d
    f55c:	01 f5                	add    %esi,%ebp
    f55e:	89 ce                	mov    %ecx,%esi
    f560:	c1 c1 0a             	rol    $0xa,%ecx
    f563:	44 31 ce             	xor    %r9d,%esi
    f566:	c1 c5 05             	rol    $0x5,%ebp
    f569:	31 c6                	xor    %eax,%esi
    f56b:	44 01 d5             	add    %r10d,%ebp
    f56e:	47 8d 94 2a e6 8b a2 	lea    0x50a28be6(%r10,%r13,1),%r10d
    f575:	50 
    f576:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    f57b:	01 de                	add    %ebx,%esi
    f57d:	44 89 fb             	mov    %r15d,%ebx
    f580:	f7 d3                	not    %ebx
    f582:	c1 c6 0b             	rol    $0xb,%esi
    f585:	44 09 c3             	or     %r8d,%ebx
    f588:	44 01 de             	add    %r11d,%esi
    f58b:	41 c1 c0 0a          	rol    $0xa,%r8d
    f58f:	45 01 f3             	add    %r14d,%r11d
    f592:	31 eb                	xor    %ebp,%ebx
    f594:	44 01 d3             	add    %r10d,%ebx
    f597:	41 89 c2             	mov    %eax,%r10d
    f59a:	c1 c0 0a             	rol    $0xa,%eax
    f59d:	41 31 ca             	xor    %ecx,%r10d
    f5a0:	c1 c3 07             	rol    $0x7,%ebx
    f5a3:	41 31 f2             	xor    %esi,%r10d
    f5a6:	01 d3                	add    %edx,%ebx
    f5a8:	42 8d 94 22 e6 8b a2 	lea    0x50a28be6(%rdx,%r12,1),%edx
    f5af:	50 
    f5b0:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    f5b5:	45 01 da             	add    %r11d,%r10d
    f5b8:	45 89 c3             	mov    %r8d,%r11d
    f5bb:	41 f7 d3             	not    %r11d
    f5be:	41 c1 c2 0d          	rol    $0xd,%r10d
    f5c2:	41 09 eb             	or     %ebp,%r11d
    f5c5:	45 01 ca             	add    %r9d,%r10d
    f5c8:	41 31 db             	xor    %ebx,%r11d
    f5cb:	41 01 d3             	add    %edx,%r11d
    f5ce:	89 f2                	mov    %esi,%edx
    f5d0:	41 c1 c3 07          	rol    $0x7,%r11d
    f5d4:	45 01 fb             	add    %r15d,%r11d
    f5d7:	31 c2                	xor    %eax,%edx
    f5d9:	c1 c5 0a             	rol    $0xa,%ebp
    f5dc:	44 03 4c 24 10       	add    0x10(%rsp),%r9d
    f5e1:	44 31 d2             	xor    %r10d,%edx
    f5e4:	47 8d bc 2f e6 8b a2 	lea    0x50a28be6(%r15,%r13,1),%r15d
    f5eb:	50 
    f5ec:	c1 c6 0a             	rol    $0xa,%esi
    f5ef:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    f5f4:	44 01 ca             	add    %r9d,%edx
    f5f7:	41 89 e9             	mov    %ebp,%r9d
    f5fa:	41 f7 d1             	not    %r9d
    f5fd:	c1 c2 0e             	rol    $0xe,%edx
    f600:	41 09 d9             	or     %ebx,%r9d
    f603:	01 ca                	add    %ecx,%edx
    f605:	c1 c3 0a             	rol    $0xa,%ebx
    f608:	03 4c 24 14          	add    0x14(%rsp),%ecx
    f60c:	45 31 d9             	xor    %r11d,%r9d
    f60f:	45 01 f9             	add    %r15d,%r9d
    f612:	45 89 d7             	mov    %r10d,%r15d
    f615:	41 c1 c2 0a          	rol    $0xa,%r10d
    f619:	41 31 f7             	xor    %esi,%r15d
    f61c:	41 c1 c1 08          	rol    $0x8,%r9d
    f620:	41 31 d7             	xor    %edx,%r15d
    f623:	45 01 c1             	add    %r8d,%r9d
    f626:	47 8d 84 20 e6 8b a2 	lea    0x50a28be6(%r8,%r12,1),%r8d
    f62d:	50 
    f62e:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    f633:	41 01 cf             	add    %ecx,%r15d
    f636:	89 d9                	mov    %ebx,%ecx
    f638:	f7 d1                	not    %ecx
    f63a:	41 c1 c7 0f          	rol    $0xf,%r15d
    f63e:	44 09 d9             	or     %r11d,%ecx
    f641:	41 01 c7             	add    %eax,%r15d
    f644:	41 c1 c3 0a          	rol    $0xa,%r11d
    f648:	03 44 24 18          	add    0x18(%rsp),%eax
    f64c:	44 31 c9             	xor    %r9d,%ecx
    f64f:	44 01 c1             	add    %r8d,%ecx
    f652:	41 89 d0             	mov    %edx,%r8d
    f655:	45 31 d0             	xor    %r10d,%r8d
    f658:	c1 c1 0b             	rol    $0xb,%ecx
    f65b:	45 31 f8             	xor    %r15d,%r8d
    f65e:	01 e9                	add    %ebp,%ecx
    f660:	42 8d ac 2d e6 8b a2 	lea    0x50a28be6(%rbp,%r13,1),%ebp
    f667:	50 
    f668:	41 01 c0             	add    %eax,%r8d
    f66b:	44 89 d8             	mov    %r11d,%eax
    f66e:	f7 d0                	not    %eax
    f670:	41 c1 c0 06          	rol    $0x6,%r8d
    f674:	44 09 c8             	or     %r9d,%eax
    f677:	c1 c2 0a             	rol    $0xa,%edx
    f67a:	41 01 f0             	add    %esi,%r8d
    f67d:	03 74 24 1c          	add    0x1c(%rsp),%esi
    f681:	31 c8                	xor    %ecx,%eax
    f683:	41 c1 c1 0a          	rol    $0xa,%r9d
    f687:	01 e8                	add    %ebp,%eax
    f689:	44 89 fd             	mov    %r15d,%ebp
    f68c:	41 c1 c7 0a          	rol    $0xa,%r15d
    f690:	31 d5                	xor    %edx,%ebp
    f692:	c1 c0 0e             	rol    $0xe,%eax
    f695:	44 31 c5             	xor    %r8d,%ebp
    f698:	01 d8                	add    %ebx,%eax
    f69a:	42 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%rbx,%r12,1),%ebx
    f6a1:	50 
    f6a2:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    f6a7:	01 f5                	add    %esi,%ebp
    f6a9:	44 89 ce             	mov    %r9d,%esi
    f6ac:	f7 d6                	not    %esi
    f6ae:	c1 c5 07             	rol    $0x7,%ebp
    f6b1:	09 ce                	or     %ecx,%esi
    f6b3:	44 01 d5             	add    %r10d,%ebp
    f6b6:	c1 c1 0a             	rol    $0xa,%ecx
    f6b9:	44 03 54 24 28       	add    0x28(%rsp),%r10d
    f6be:	31 c6                	xor    %eax,%esi
    f6c0:	01 de                	add    %ebx,%esi
    f6c2:	44 89 c3             	mov    %r8d,%ebx
    f6c5:	41 c1 c0 0a          	rol    $0xa,%r8d
    f6c9:	44 31 fb             	xor    %r15d,%ebx
    f6cc:	c1 c6 0e             	rol    $0xe,%esi
    f6cf:	31 eb                	xor    %ebp,%ebx
    f6d1:	44 01 de             	add    %r11d,%esi
    f6d4:	47 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%r11,%r12,1),%r11d
    f6db:	50 
    f6dc:	44 01 d3             	add    %r10d,%ebx
    f6df:	41 89 ca             	mov    %ecx,%r10d
    f6e2:	41 f7 d2             	not    %r10d
    f6e5:	c1 c3 09             	rol    $0x9,%ebx
    f6e8:	41 09 c2             	or     %eax,%r10d
    f6eb:	01 d3                	add    %edx,%ebx
    f6ed:	41 31 f2             	xor    %esi,%r10d
    f6f0:	45 01 da             	add    %r11d,%r10d
    f6f3:	41 89 eb             	mov    %ebp,%r11d
    f6f6:	41 c1 c2 0c          	rol    $0xc,%r10d
    f6fa:	45 31 c3             	xor    %r8d,%r11d
    f6fd:	03 54 24 20          	add    0x20(%rsp),%edx
    f701:	c1 c0 0a             	rol    $0xa,%eax
    f704:	41 31 db             	xor    %ebx,%r11d
    f707:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
    f70c:	45 01 ca             	add    %r9d,%r10d
    f70f:	c1 c5 0a             	rol    $0xa,%ebp
    f712:	41 01 d3             	add    %edx,%r11d
    f715:	89 c2                	mov    %eax,%edx
    f717:	f7 d2                	not    %edx
    f719:	47 8d 8c 21 e6 8b a2 	lea    0x50a28be6(%r9,%r12,1),%r9d
    f720:	50 
    f721:	41 c1 c3 08          	rol    $0x8,%r11d
    f725:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    f72a:	09 f2                	or     %esi,%edx
    f72c:	45 01 fb             	add    %r15d,%r11d
    f72f:	c1 c6 0a             	rol    $0xa,%esi
    f732:	44 31 d2             	xor    %r10d,%edx
    f735:	47 8d bc 27 99 79 82 	lea    0x5a827999(%r15,%r12,1),%r15d
    f73c:	5a 
    f73d:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    f742:	44 01 ca             	add    %r9d,%edx
    f745:	41 89 d9             	mov    %ebx,%r9d
    f748:	c1 c3 0a             	rol    $0xa,%ebx
    f74b:	41 31 e9             	xor    %ebp,%r9d
    f74e:	c1 c2 06             	rol    $0x6,%edx
    f751:	45 21 d9             	and    %r11d,%r9d
    f754:	01 ca                	add    %ecx,%edx
    f756:	42 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%rcx,%r12,1),%ecx
    f75d:	5c 
    f75e:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    f763:	41 31 e9             	xor    %ebp,%r9d
    f766:	45 01 f9             	add    %r15d,%r9d
    f769:	45 89 d7             	mov    %r10d,%r15d
    f76c:	41 31 d7             	xor    %edx,%r15d
    f76f:	41 c1 c1 07          	rol    $0x7,%r9d
    f773:	41 21 f7             	and    %esi,%r15d
    f776:	45 01 c1             	add    %r8d,%r9d
    f779:	47 8d 84 20 99 79 82 	lea    0x5a827999(%r8,%r12,1),%r8d
    f780:	5a 
    f781:	44 8b 64 24 14       	mov    0x14(%rsp),%r12d
    f786:	45 31 d7             	xor    %r10d,%r15d
    f789:	41 c1 c2 0a          	rol    $0xa,%r10d
    f78d:	41 01 cf             	add    %ecx,%r15d
    f790:	44 89 d9             	mov    %r11d,%ecx
    f793:	31 d9                	xor    %ebx,%ecx
    f795:	41 c1 c7 09          	rol    $0x9,%r15d
    f799:	44 21 c9             	and    %r9d,%ecx
    f79c:	41 01 c7             	add    %eax,%r15d
    f79f:	42 8d 84 20 24 d1 4d 	lea    0x5c4dd124(%rax,%r12,1),%eax
    f7a6:	5c 
    f7a7:	44 8b 64 24 1c       	mov    0x1c(%rsp),%r12d
    f7ac:	31 d9                	xor    %ebx,%ecx
    f7ae:	41 c1 c3 0a          	rol    $0xa,%r11d
    f7b2:	44 01 c1             	add    %r8d,%ecx
    f7b5:	41 89 d0             	mov    %edx,%r8d
    f7b8:	45 31 f8             	xor    %r15d,%r8d
    f7bb:	c1 c1 06             	rol    $0x6,%ecx
    f7be:	45 21 d0             	and    %r10d,%r8d
    f7c1:	01 e9                	add    %ebp,%ecx
    f7c3:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
    f7ca:	5a 
    f7cb:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    f7d0:	41 31 d0             	xor    %edx,%r8d
    f7d3:	c1 c2 0a             	rol    $0xa,%edx
    f7d6:	41 01 c0             	add    %eax,%r8d
    f7d9:	44 89 c8             	mov    %r9d,%eax
    f7dc:	41 c1 c1 0a          	rol    $0xa,%r9d
    f7e0:	44 31 d8             	xor    %r11d,%eax
    f7e3:	41 c1 c0 0d          	rol    $0xd,%r8d
    f7e7:	21 c8                	and    %ecx,%eax
    f7e9:	41 01 f0             	add    %esi,%r8d
    f7ec:	42 8d b4 26 24 d1 4d 	lea    0x5c4dd124(%rsi,%r12,1),%esi
    f7f3:	5c 
    f7f4:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    f7f9:	44 31 d8             	xor    %r11d,%eax
    f7fc:	01 c5                	add    %eax,%ebp
    f7fe:	44 89 f8             	mov    %r15d,%eax
    f801:	44 31 c0             	xor    %r8d,%eax
    f804:	c1 c5 08             	rol    $0x8,%ebp
    f807:	21 d0                	and    %edx,%eax
    f809:	01 dd                	add    %ebx,%ebp
    f80b:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
    f812:	5a 
    f813:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
    f818:	44 31 f8             	xor    %r15d,%eax
    f81b:	41 c1 c7 0a          	rol    $0xa,%r15d
    f81f:	01 f0                	add    %esi,%eax
    f821:	89 ce                	mov    %ecx,%esi
    f823:	44 31 ce             	xor    %r9d,%esi
    f826:	c1 c0 0f             	rol    $0xf,%eax
    f829:	21 ee                	and    %ebp,%esi
    f82b:	44 01 d0             	add    %r10d,%eax
    f82e:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
    f835:	5c 
    f836:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
    f83b:	44 31 ce             	xor    %r9d,%esi
    f83e:	01 de                	add    %ebx,%esi
    f840:	44 89 c3             	mov    %r8d,%ebx
    f843:	c1 c6 0d             	rol    $0xd,%esi
    f846:	44 01 de             	add    %r11d,%esi
    f849:	c1 c1 0a             	rol    $0xa,%ecx
    f84c:	31 c3                	xor    %eax,%ebx
    f84e:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
    f855:	5a 
    f856:	44 21 fb             	and    %r15d,%ebx
    f859:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    f85e:	44 31 c3             	xor    %r8d,%ebx
    f861:	41 c1 c0 0a          	rol    $0xa,%r8d
    f865:	44 01 d3             	add    %r10d,%ebx
    f868:	41 89 ea             	mov    %ebp,%r10d
    f86b:	c1 c5 0a             	rol    $0xa,%ebp
    f86e:	41 31 ca             	xor    %ecx,%r10d
    f871:	c1 c3 07             	rol    $0x7,%ebx
    f874:	41 21 f2             	and    %esi,%r10d
    f877:	01 d3                	add    %edx,%ebx
    f879:	42 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%rdx,%r13,1),%edx
    f880:	5c 
    f881:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    f886:	41 31 ca             	xor    %ecx,%r10d
    f889:	45 01 d3             	add    %r10d,%r11d
    f88c:	41 89 c2             	mov    %eax,%r10d
    f88f:	41 31 da             	xor    %ebx,%r10d
    f892:	41 c1 c3 0b          	rol    $0xb,%r11d
    f896:	45 21 c2             	and    %r8d,%r10d
    f899:	45 01 cb             	add    %r9d,%r11d
    f89c:	47 8d 8c 21 99 79 82 	lea    0x5a827999(%r9,%r12,1),%r9d
    f8a3:	5a 
    f8a4:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    f8a9:	41 31 c2             	xor    %eax,%r10d
    f8ac:	c1 c0 0a             	rol    $0xa,%eax
    f8af:	41 01 d2             	add    %edx,%r10d
    f8b2:	89 f2                	mov    %esi,%edx
    f8b4:	c1 c6 0a             	rol    $0xa,%esi
    f8b7:	31 ea                	xor    %ebp,%edx
    f8b9:	41 c1 c2 0c          	rol    $0xc,%r10d
    f8bd:	44 21 da             	and    %r11d,%edx
    f8c0:	45 01 fa             	add    %r15d,%r10d
    f8c3:	47 8d bc 2f 24 d1 4d 	lea    0x5c4dd124(%r15,%r13,1),%r15d
    f8ca:	5c 
    f8cb:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    f8d0:	31 ea                	xor    %ebp,%edx
    f8d2:	44 01 ca             	add    %r9d,%edx
    f8d5:	41 89 d9             	mov    %ebx,%r9d
    f8d8:	45 31 d1             	xor    %r10d,%r9d
    f8db:	c1 c2 09             	rol    $0x9,%edx
    f8de:	41 21 c1             	and    %eax,%r9d
    f8e1:	01 ca                	add    %ecx,%edx
    f8e3:	42 8d 8c 29 99 79 82 	lea    0x5a827999(%rcx,%r13,1),%ecx
    f8ea:	5a 
    f8eb:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    f8f0:	41 31 d9             	xor    %ebx,%r9d
    f8f3:	45 01 f9             	add    %r15d,%r9d
    f8f6:	45 89 df             	mov    %r11d,%r15d
    f8f9:	c1 c3 0a             	rol    $0xa,%ebx
    f8fc:	41 c1 c1 08          	rol    $0x8,%r9d
    f900:	41 31 f7             	xor    %esi,%r15d
    f903:	41 c1 c3 0a          	rol    $0xa,%r11d
    f907:	41 21 d7             	and    %edx,%r15d
    f90a:	45 01 c1             	add    %r8d,%r9d
    f90d:	47 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%r8,%r13,1),%r8d
    f914:	5c 
    f915:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
    f91a:	41 31 f7             	xor    %esi,%r15d
    f91d:	41 01 cf             	add    %ecx,%r15d
    f920:	44 89 d1             	mov    %r10d,%ecx
    f923:	44 31 c9             	xor    %r9d,%ecx
    f926:	41 c1 c7 07          	rol    $0x7,%r15d
    f92a:	21 d9                	and    %ebx,%ecx
    f92c:	41 01 ef             	add    %ebp,%r15d
    f92f:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
    f936:	5a 
    f937:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    f93c:	44 31 d1             	xor    %r10d,%ecx
    f93f:	41 c1 c2 0a          	rol    $0xa,%r10d
    f943:	44 01 c1             	add    %r8d,%ecx
    f946:	41 89 d0             	mov    %edx,%r8d
    f949:	c1 c2 0a             	rol    $0xa,%edx
    f94c:	45 31 d8             	xor    %r11d,%r8d
    f94f:	c1 c1 09             	rol    $0x9,%ecx
    f952:	45 21 f8             	and    %r15d,%r8d
    f955:	01 c1                	add    %eax,%ecx
    f957:	42 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%rax,%r13,1),%eax
    f95e:	5c 
    f95f:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    f964:	45 31 d8             	xor    %r11d,%r8d
    f967:	41 01 e8             	add    %ebp,%r8d
    f96a:	44 89 cd             	mov    %r9d,%ebp
    f96d:	31 cd                	xor    %ecx,%ebp
    f96f:	41 c1 c0 0f          	rol    $0xf,%r8d
    f973:	44 21 d5             	and    %r10d,%ebp
    f976:	41 01 f0             	add    %esi,%r8d
    f979:	42 8d b4 2e 99 79 82 	lea    0x5a827999(%rsi,%r13,1),%esi
    f980:	5a 
    f981:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    f986:	44 31 cd             	xor    %r9d,%ebp
    f989:	41 c1 c1 0a          	rol    $0xa,%r9d
    f98d:	01 c5                	add    %eax,%ebp
    f98f:	44 89 f8             	mov    %r15d,%eax
    f992:	c1 c5 0b             	rol    $0xb,%ebp
    f995:	01 dd                	add    %ebx,%ebp
    f997:	31 d0                	xor    %edx,%eax
    f999:	42 8d 9c 23 24 d1 4d 	lea    0x5c4dd124(%rbx,%r12,1),%ebx
    f9a0:	5c 
    f9a1:	41 c1 c7 0a          	rol    $0xa,%r15d
    f9a5:	44 21 c0             	and    %r8d,%eax
    f9a8:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    f9ad:	31 d0                	xor    %edx,%eax
    f9af:	01 f0                	add    %esi,%eax
    f9b1:	89 ce                	mov    %ecx,%esi
    f9b3:	31 ee                	xor    %ebp,%esi
    f9b5:	c1 c0 07             	rol    $0x7,%eax
    f9b8:	44 21 ce             	and    %r9d,%esi
    f9bb:	44 01 d8             	add    %r11d,%eax
    f9be:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
    f9c5:	5a 
    f9c6:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    f9cb:	31 ce                	xor    %ecx,%esi
    f9cd:	c1 c1 0a             	rol    $0xa,%ecx
    f9d0:	01 de                	add    %ebx,%esi
    f9d2:	44 89 c3             	mov    %r8d,%ebx
    f9d5:	41 c1 c0 0a          	rol    $0xa,%r8d
    f9d9:	44 31 fb             	xor    %r15d,%ebx
    f9dc:	c1 c6 07             	rol    $0x7,%esi
    f9df:	21 c3                	and    %eax,%ebx
    f9e1:	44 01 d6             	add    %r10d,%esi
    f9e4:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
    f9eb:	5c 
    f9ec:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    f9f1:	44 31 fb             	xor    %r15d,%ebx
    f9f4:	44 01 db             	add    %r11d,%ebx
    f9f7:	41 89 eb             	mov    %ebp,%r11d
    f9fa:	41 31 f3             	xor    %esi,%r11d
    f9fd:	c1 c3 0c             	rol    $0xc,%ebx
    fa00:	41 21 cb             	and    %ecx,%r11d
    fa03:	01 d3                	add    %edx,%ebx
    fa05:	42 8d 94 32 99 79 82 	lea    0x5a827999(%rdx,%r14,1),%edx
    fa0c:	5a 
    fa0d:	41 31 eb             	xor    %ebp,%r11d
    fa10:	c1 c5 0a             	rol    $0xa,%ebp
    fa13:	45 01 d3             	add    %r10d,%r11d
    fa16:	41 89 c2             	mov    %eax,%r10d
    fa19:	45 31 c2             	xor    %r8d,%r10d
    fa1c:	41 c1 c3 07          	rol    $0x7,%r11d
    fa20:	41 21 da             	and    %ebx,%r10d
    fa23:	45 01 cb             	add    %r9d,%r11d
    fa26:	47 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%r9,%r12,1),%r9d
    fa2d:	5c 
    fa2e:	45 31 c2             	xor    %r8d,%r10d
    fa31:	41 01 d2             	add    %edx,%r10d
    fa34:	89 f2                	mov    %esi,%edx
    fa36:	41 c1 c2 0f          	rol    $0xf,%r10d
    fa3a:	44 31 da             	xor    %r11d,%edx
    fa3d:	c1 c0 0a             	rol    $0xa,%eax
    fa40:	21 ea                	and    %ebp,%edx
    fa42:	45 01 fa             	add    %r15d,%r10d
    fa45:	47 8d bc 2f 99 79 82 	lea    0x5a827999(%r15,%r13,1),%r15d
    fa4c:	5a 
    fa4d:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    fa52:	31 f2                	xor    %esi,%edx
    fa54:	c1 c6 0a             	rol    $0xa,%esi
    fa57:	44 01 ca             	add    %r9d,%edx
    fa5a:	41 89 d9             	mov    %ebx,%r9d
    fa5d:	c1 c3 0a             	rol    $0xa,%ebx
    fa60:	41 31 c1             	xor    %eax,%r9d
    fa63:	c1 c2 0c             	rol    $0xc,%edx
    fa66:	45 21 d1             	and    %r10d,%r9d
    fa69:	01 ca                	add    %ecx,%edx
    fa6b:	42 8d 8c 29 24 d1 4d 	lea    0x5c4dd124(%rcx,%r13,1),%ecx
    fa72:	5c 
    fa73:	44 8b 2c 24          	mov    (%rsp),%r13d
    fa77:	41 31 c1             	xor    %eax,%r9d
    fa7a:	45 01 f9             	add    %r15d,%r9d
    fa7d:	45 89 df             	mov    %r11d,%r15d
    fa80:	41 31 d7             	xor    %edx,%r15d
    fa83:	41 c1 c1 09          	rol    $0x9,%r9d
    fa87:	41 21 f7             	and    %esi,%r15d
    fa8a:	45 01 c1             	add    %r8d,%r9d
    fa8d:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
    fa94:	5a 
    fa95:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
    fa9a:	45 31 df             	xor    %r11d,%r15d
    fa9d:	41 c1 c3 0a          	rol    $0xa,%r11d
    faa1:	41 01 cf             	add    %ecx,%r15d
    faa4:	44 89 d1             	mov    %r10d,%ecx
    faa7:	41 c1 c2 0a          	rol    $0xa,%r10d
    faab:	31 d9                	xor    %ebx,%ecx
    faad:	41 c1 c7 07          	rol    $0x7,%r15d
    fab1:	44 21 c9             	and    %r9d,%ecx
    fab4:	41 01 ef             	add    %ebp,%r15d
    fab7:	42 8d ac 2d 24 d1 4d 	lea    0x5c4dd124(%rbp,%r13,1),%ebp
    fabe:	5c 
    fabf:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
    fac4:	31 d9                	xor    %ebx,%ecx
    fac6:	44 01 c1             	add    %r8d,%ecx
    fac9:	41 89 d0             	mov    %edx,%r8d
    facc:	c1 c1 0b             	rol    $0xb,%ecx
    facf:	45 31 f8             	xor    %r15d,%r8d
    fad2:	01 c1                	add    %eax,%ecx
    fad4:	45 21 d8             	and    %r11d,%r8d
    fad7:	42 8d 84 28 99 79 82 	lea    0x5a827999(%rax,%r13,1),%eax
    fade:	5a 
    fadf:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
    fae4:	41 31 d0             	xor    %edx,%r8d
    fae7:	c1 c2 0a             	rol    $0xa,%edx
    faea:	41 01 e8             	add    %ebp,%r8d
    faed:	44 89 cd             	mov    %r9d,%ebp
    faf0:	41 c1 c1 0a          	rol    $0xa,%r9d
    faf4:	44 31 d5             	xor    %r10d,%ebp
    faf7:	41 c1 c0 06          	rol    $0x6,%r8d
    fafb:	21 cd                	and    %ecx,%ebp
    fafd:	41 01 f0             	add    %esi,%r8d
    fb00:	42 8d b4 36 24 d1 4d 	lea    0x5c4dd124(%rsi,%r14,1),%esi
    fb07:	5c 
    fb08:	44 31 d5             	xor    %r10d,%ebp
    fb0b:	01 c5                	add    %eax,%ebp
    fb0d:	44 89 f8             	mov    %r15d,%eax
    fb10:	44 31 c0             	xor    %r8d,%eax
    fb13:	c1 c5 07             	rol    $0x7,%ebp
    fb16:	21 d0                	and    %edx,%eax
    fb18:	01 dd                	add    %ebx,%ebp
    fb1a:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
    fb21:	5a 
    fb22:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    fb27:	44 31 f8             	xor    %r15d,%eax
    fb2a:	41 c1 c7 0a          	rol    $0xa,%r15d
    fb2e:	01 f0                	add    %esi,%eax
    fb30:	89 ce                	mov    %ecx,%esi
    fb32:	c1 c1 0a             	rol    $0xa,%ecx
    fb35:	44 31 ce             	xor    %r9d,%esi
    fb38:	c1 c0 0f             	rol    $0xf,%eax
    fb3b:	21 ee                	and    %ebp,%esi
    fb3d:	44 01 d8             	add    %r11d,%eax
    fb40:	47 8d 9c 2b 24 d1 4d 	lea    0x5c4dd124(%r11,%r13,1),%r11d
    fb47:	5c 
    fb48:	44 31 ce             	xor    %r9d,%esi
    fb4b:	01 de                	add    %ebx,%esi
    fb4d:	44 89 c3             	mov    %r8d,%ebx
    fb50:	31 c3                	xor    %eax,%ebx
    fb52:	c1 c6 0d             	rol    $0xd,%esi
    fb55:	44 21 fb             	and    %r15d,%ebx
    fb58:	44 01 d6             	add    %r10d,%esi
    fb5b:	47 8d 94 22 99 79 82 	lea    0x5a827999(%r10,%r12,1),%r10d
    fb62:	5a 
    fb63:	44 8b 24 24          	mov    (%rsp),%r12d
    fb67:	44 31 c3             	xor    %r8d,%ebx
    fb6a:	44 01 db             	add    %r11d,%ebx
    fb6d:	41 89 eb             	mov    %ebp,%r11d
    fb70:	c1 c3 0d             	rol    $0xd,%ebx
    fb73:	01 d3                	add    %edx,%ebx
    fb75:	41 31 cb             	xor    %ecx,%r11d
    fb78:	42 8d 94 22 24 d1 4d 	lea    0x5c4dd124(%rdx,%r12,1),%edx
    fb7f:	5c 
    fb80:	c1 c5 0a             	rol    $0xa,%ebp
    fb83:	41 21 f3             	and    %esi,%r11d
    fb86:	41 c1 c0 0a          	rol    $0xa,%r8d
    fb8a:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    fb8f:	41 31 cb             	xor    %ecx,%r11d
    fb92:	45 01 d3             	add    %r10d,%r11d
    fb95:	41 89 c2             	mov    %eax,%r10d
    fb98:	41 31 da             	xor    %ebx,%r10d
    fb9b:	41 c1 c3 0c          	rol    $0xc,%r11d
    fb9f:	45 21 c2             	and    %r8d,%r10d
    fba2:	45 01 cb             	add    %r9d,%r11d
    fba5:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
    fbac:	6e 
    fbad:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
    fbb2:	41 31 c2             	xor    %eax,%r10d
    fbb5:	c1 c0 0a             	rol    $0xa,%eax
    fbb8:	41 01 d2             	add    %edx,%r10d
    fbbb:	89 f2                	mov    %esi,%edx
    fbbd:	c1 c6 0a             	rol    $0xa,%esi
    fbc0:	f7 d2                	not    %edx
    fbc2:	41 c1 c2 0b          	rol    $0xb,%r10d
    fbc6:	44 09 da             	or     %r11d,%edx
    fbc9:	45 01 fa             	add    %r15d,%r10d
    fbcc:	47 8d bc 27 f3 3e 70 	lea    0x6d703ef3(%r15,%r12,1),%r15d
    fbd3:	6d 
    fbd4:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    fbd9:	31 ea                	xor    %ebp,%edx
    fbdb:	44 89 74 24 3c       	mov    %r14d,0x3c(%rsp)
    fbe0:	44 01 ca             	add    %r9d,%edx
    fbe3:	41 89 d9             	mov    %ebx,%r9d
    fbe6:	c1 c3 0a             	rol    $0xa,%ebx
    fbe9:	41 f7 d1             	not    %r9d
    fbec:	c1 c2 0b             	rol    $0xb,%edx
    fbef:	45 09 d1             	or     %r10d,%r9d
    fbf2:	01 ca                	add    %ecx,%edx
    fbf4:	42 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r12,1),%ecx
    fbfb:	6e 
    fbfc:	44 8b 64 24 08       	mov    0x8(%rsp),%r12d
    fc01:	41 31 c1             	xor    %eax,%r9d
    fc04:	45 01 f9             	add    %r15d,%r9d
    fc07:	45 89 df             	mov    %r11d,%r15d
    fc0a:	41 f7 d7             	not    %r15d
    fc0d:	41 c1 c1 09          	rol    $0x9,%r9d
    fc11:	41 09 d7             	or     %edx,%r15d
    fc14:	45 01 c1             	add    %r8d,%r9d
    fc17:	47 8d 84 20 f3 3e 70 	lea    0x6d703ef3(%r8,%r12,1),%r8d
    fc1e:	6d 
    fc1f:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    fc24:	41 31 f7             	xor    %esi,%r15d
    fc27:	41 01 cf             	add    %ecx,%r15d
    fc2a:	44 89 d1             	mov    %r10d,%ecx
    fc2d:	41 c1 c7 0d          	rol    $0xd,%r15d
    fc31:	f7 d1                	not    %ecx
    fc33:	41 01 ef             	add    %ebp,%r15d
    fc36:	44 09 c9             	or     %r9d,%ecx
    fc39:	41 c1 c3 0a          	rol    $0xa,%r11d
    fc3d:	42 8d ac 25 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r12,1),%ebp
    fc44:	6e 
    fc45:	31 d9                	xor    %ebx,%ecx
    fc47:	41 c1 c2 0a          	rol    $0xa,%r10d
    fc4b:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    fc50:	44 01 c1             	add    %r8d,%ecx
    fc53:	41 89 d0             	mov    %edx,%r8d
    fc56:	c1 c2 0a             	rol    $0xa,%edx
    fc59:	41 f7 d0             	not    %r8d
    fc5c:	c1 c1 07             	rol    $0x7,%ecx
    fc5f:	45 09 f8             	or     %r15d,%r8d
    fc62:	01 c1                	add    %eax,%ecx
    fc64:	42 8d 84 28 f3 3e 70 	lea    0x6d703ef3(%rax,%r13,1),%eax
    fc6b:	6d 
    fc6c:	45 31 d8             	xor    %r11d,%r8d
    fc6f:	41 01 e8             	add    %ebp,%r8d
    fc72:	44 89 cd             	mov    %r9d,%ebp
    fc75:	41 c1 c1 0a          	rol    $0xa,%r9d
    fc79:	f7 d5                	not    %ebp
    fc7b:	41 c1 c0 06          	rol    $0x6,%r8d
    fc7f:	09 cd                	or     %ecx,%ebp
    fc81:	41 01 f0             	add    %esi,%r8d
    fc84:	42 8d b4 26 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r12,1),%esi
    fc8b:	6e 
    fc8c:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    fc91:	44 31 d5             	xor    %r10d,%ebp
    fc94:	01 c5                	add    %eax,%ebp
    fc96:	44 89 f8             	mov    %r15d,%eax
    fc99:	f7 d0                	not    %eax
    fc9b:	c1 c5 0f             	rol    $0xf,%ebp
    fc9e:	44 09 c0             	or     %r8d,%eax
    fca1:	01 dd                	add    %ebx,%ebp
    fca3:	42 8d 9c 23 f3 3e 70 	lea    0x6d703ef3(%rbx,%r12,1),%ebx
    fcaa:	6d 
    fcab:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    fcb0:	31 d0                	xor    %edx,%eax
    fcb2:	01 c6                	add    %eax,%esi
    fcb4:	44 89 f8             	mov    %r15d,%eax
    fcb7:	41 89 cf             	mov    %ecx,%r15d
    fcba:	c1 c1 0a             	rol    $0xa,%ecx
    fcbd:	c1 c6 07             	rol    $0x7,%esi
    fcc0:	41 f7 d7             	not    %r15d
    fcc3:	c1 c0 0a             	rol    $0xa,%eax
    fcc6:	41 09 ef             	or     %ebp,%r15d
    fcc9:	44 01 de             	add    %r11d,%esi
    fccc:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
    fcd3:	6e 
    fcd4:	45 31 cf             	xor    %r9d,%r15d
    fcd7:	41 01 df             	add    %ebx,%r15d
    fcda:	44 89 c3             	mov    %r8d,%ebx
    fcdd:	41 c1 c7 0b          	rol    $0xb,%r15d
    fce1:	f7 d3                	not    %ebx
    fce3:	45 01 d7             	add    %r10d,%r15d
    fce6:	09 f3                	or     %esi,%ebx
    fce8:	47 8d 94 22 f3 3e 70 	lea    0x6d703ef3(%r10,%r12,1),%r10d
    fcef:	6d 
    fcf0:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
    fcf5:	31 c3                	xor    %eax,%ebx
    fcf7:	41 c1 c0 0a          	rol    $0xa,%r8d
    fcfb:	44 01 db             	add    %r11d,%ebx
    fcfe:	41 89 eb             	mov    %ebp,%r11d
    fd01:	c1 c5 0a             	rol    $0xa,%ebp
    fd04:	41 f7 d3             	not    %r11d
    fd07:	c1 c3 0e             	rol    $0xe,%ebx
    fd0a:	45 09 fb             	or     %r15d,%r11d
    fd0d:	01 d3                	add    %edx,%ebx
    fd0f:	42 8d 94 22 a1 eb d9 	lea    0x6ed9eba1(%rdx,%r12,1),%edx
    fd16:	6e 
    fd17:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    fd1c:	41 31 cb             	xor    %ecx,%r11d
    fd1f:	45 01 d3             	add    %r10d,%r11d
    fd22:	41 89 f2             	mov    %esi,%r10d
    fd25:	c1 c6 0a             	rol    $0xa,%esi
    fd28:	41 f7 d2             	not    %r10d
    fd2b:	41 c1 c3 08          	rol    $0x8,%r11d
    fd2f:	41 09 da             	or     %ebx,%r10d
    fd32:	45 01 cb             	add    %r9d,%r11d
    fd35:	47 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%r9,%r12,1),%r9d
    fd3c:	6d 
    fd3d:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    fd42:	45 31 c2             	xor    %r8d,%r10d
    fd45:	41 01 d2             	add    %edx,%r10d
    fd48:	44 89 fa             	mov    %r15d,%edx
    fd4b:	41 c1 c7 0a          	rol    $0xa,%r15d
    fd4f:	f7 d2                	not    %edx
    fd51:	41 c1 c2 09          	rol    $0x9,%r10d
    fd55:	44 09 da             	or     %r11d,%edx
    fd58:	41 01 c2             	add    %eax,%r10d
    fd5b:	42 8d 84 20 a1 eb d9 	lea    0x6ed9eba1(%rax,%r12,1),%eax
    fd62:	6e 
    fd63:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    fd68:	31 ea                	xor    %ebp,%edx
    fd6a:	44 01 ca             	add    %r9d,%edx
    fd6d:	41 89 d9             	mov    %ebx,%r9d
    fd70:	c1 c3 0a             	rol    $0xa,%ebx
    fd73:	41 f7 d1             	not    %r9d
    fd76:	c1 c2 06             	rol    $0x6,%edx
    fd79:	45 09 d1             	or     %r10d,%r9d
    fd7c:	01 ca                	add    %ecx,%edx
    fd7e:	42 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%rcx,%r12,1),%ecx
    fd85:	6d 
    fd86:	41 31 f1             	xor    %esi,%r9d
    fd89:	41 01 c1             	add    %eax,%r9d
    fd8c:	44 89 d8             	mov    %r11d,%eax
    fd8f:	f7 d0                	not    %eax
    fd91:	41 c1 c1 0d          	rol    $0xd,%r9d
    fd95:	09 d0                	or     %edx,%eax
    fd97:	45 01 c1             	add    %r8d,%r9d
    fd9a:	47 8d 84 28 a1 eb d9 	lea    0x6ed9eba1(%r8,%r13,1),%r8d
    fda1:	6e 
    fda2:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
    fda7:	44 31 f8             	xor    %r15d,%eax
    fdaa:	01 c8                	add    %ecx,%eax
    fdac:	44 89 d1             	mov    %r10d,%ecx
    fdaf:	41 c1 c3 0a          	rol    $0xa,%r11d
    fdb3:	c1 c0 06             	rol    $0x6,%eax
    fdb6:	f7 d1                	not    %ecx
    fdb8:	41 c1 c2 0a          	rol    $0xa,%r10d
    fdbc:	44 09 c9             	or     %r9d,%ecx
    fdbf:	01 e8                	add    %ebp,%eax
    fdc1:	42 8d ac 35 f3 3e 70 	lea    0x6d703ef3(%rbp,%r14,1),%ebp
    fdc8:	6d 
    fdc9:	44 8b 34 24          	mov    (%rsp),%r14d
    fdcd:	31 d9                	xor    %ebx,%ecx
    fdcf:	44 01 c1             	add    %r8d,%ecx
    fdd2:	41 89 d0             	mov    %edx,%r8d
    fdd5:	c1 c2 0a             	rol    $0xa,%edx
    fdd8:	41 f7 d0             	not    %r8d
    fddb:	c1 c1 0f             	rol    $0xf,%ecx
    fdde:	41 09 c0             	or     %eax,%r8d
    fde1:	01 f1                	add    %esi,%ecx
    fde3:	42 8d b4 36 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r14,1),%esi
    fdea:	6e 
    fdeb:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    fdf0:	45 31 d8             	xor    %r11d,%r8d
    fdf3:	41 01 e8             	add    %ebp,%r8d
    fdf6:	44 89 cd             	mov    %r9d,%ebp
    fdf9:	41 c1 c1 0a          	rol    $0xa,%r9d
    fdfd:	f7 d5                	not    %ebp
    fdff:	41 c1 c0 0e          	rol    $0xe,%r8d
    fe03:	09 cd                	or     %ecx,%ebp
    fe05:	45 01 f8             	add    %r15d,%r8d
    fe08:	47 8d bc 37 f3 3e 70 	lea    0x6d703ef3(%r15,%r14,1),%r15d
    fe0f:	6d 
    fe10:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    fe15:	44 31 d5             	xor    %r10d,%ebp
    fe18:	01 f5                	add    %esi,%ebp
    fe1a:	89 c6                	mov    %eax,%esi
    fe1c:	c1 c0 0a             	rol    $0xa,%eax
    fe1f:	f7 d6                	not    %esi
    fe21:	c1 c5 0e             	rol    $0xe,%ebp
    fe24:	44 09 c6             	or     %r8d,%esi
    fe27:	01 dd                	add    %ebx,%ebp
    fe29:	42 8d 9c 2b a1 eb d9 	lea    0x6ed9eba1(%rbx,%r13,1),%ebx
    fe30:	6e 
    fe31:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    fe36:	31 d6                	xor    %edx,%esi
    fe38:	44 01 fe             	add    %r15d,%esi
    fe3b:	41 89 cf             	mov    %ecx,%r15d
    fe3e:	41 f7 d7             	not    %r15d
    fe41:	c1 c6 0c             	rol    $0xc,%esi
    fe44:	41 09 ef             	or     %ebp,%r15d
    fe47:	44 01 de             	add    %r11d,%esi
    fe4a:	47 8d 9c 2b f3 3e 70 	lea    0x6d703ef3(%r11,%r13,1),%r11d
    fe51:	6d 
    fe52:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    fe57:	45 31 cf             	xor    %r9d,%r15d
    fe5a:	41 01 df             	add    %ebx,%r15d
    fe5d:	44 89 c3             	mov    %r8d,%ebx
    fe60:	41 c1 c7 08          	rol    $0x8,%r15d
    fe64:	f7 d3                	not    %ebx
    fe66:	45 01 d7             	add    %r10d,%r15d
    fe69:	09 f3                	or     %esi,%ebx
    fe6b:	c1 c1 0a             	rol    $0xa,%ecx
    fe6e:	47 8d 94 2a a1 eb d9 	lea    0x6ed9eba1(%r10,%r13,1),%r10d
    fe75:	6e 
    fe76:	31 c3                	xor    %eax,%ebx
    fe78:	41 c1 c0 0a          	rol    $0xa,%r8d
    fe7c:	44 01 db             	add    %r11d,%ebx
    fe7f:	41 89 eb             	mov    %ebp,%r11d
    fe82:	c1 c5 0a             	rol    $0xa,%ebp
    fe85:	41 f7 d3             	not    %r11d
    fe88:	c1 c3 0d             	rol    $0xd,%ebx
    fe8b:	45 09 fb             	or     %r15d,%r11d
    fe8e:	01 d3                	add    %edx,%ebx
    fe90:	42 8d 94 32 f3 3e 70 	lea    0x6d703ef3(%rdx,%r14,1),%edx
    fe97:	6d 
    fe98:	44 8b 34 24          	mov    (%rsp),%r14d
    fe9c:	41 31 cb             	xor    %ecx,%r11d
    fe9f:	45 01 d3             	add    %r10d,%r11d
    fea2:	41 89 f2             	mov    %esi,%r10d
    fea5:	c1 c6 0a             	rol    $0xa,%esi
    fea8:	41 f7 d2             	not    %r10d
    feab:	41 c1 c3 0d          	rol    $0xd,%r11d
    feaf:	41 09 da             	or     %ebx,%r10d
    feb2:	45 01 cb             	add    %r9d,%r11d
    feb5:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
    febc:	6e 
    febd:	45 31 c2             	xor    %r8d,%r10d
    fec0:	41 01 d2             	add    %edx,%r10d
    fec3:	44 89 fa             	mov    %r15d,%edx
    fec6:	41 c1 c7 0a          	rol    $0xa,%r15d
    feca:	f7 d2                	not    %edx
    fecc:	41 c1 c2 05          	rol    $0x5,%r10d
    fed0:	44 09 da             	or     %r11d,%edx
    fed3:	41 01 c2             	add    %eax,%r10d
    fed6:	42 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%rax,%r14,1),%eax
    fedd:	6d 
    fede:	44 8b 74 24 1c       	mov    0x1c(%rsp),%r14d
    fee3:	31 ea                	xor    %ebp,%edx
    fee5:	44 01 ca             	add    %r9d,%edx
    fee8:	41 89 d9             	mov    %ebx,%r9d
    feeb:	c1 c3 0a             	rol    $0xa,%ebx
    feee:	41 f7 d1             	not    %r9d
    fef1:	c1 c2 06             	rol    $0x6,%edx
    fef4:	45 09 d1             	or     %r10d,%r9d
    fef7:	01 ca                	add    %ecx,%edx
    fef9:	42 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r14,1),%ecx
    ff00:	6e 
    ff01:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
    ff06:	41 31 f1             	xor    %esi,%r9d
    ff09:	41 01 c1             	add    %eax,%r9d
    ff0c:	44 89 d8             	mov    %r11d,%eax
    ff0f:	41 c1 c1 0e          	rol    $0xe,%r9d
    ff13:	f7 d0                	not    %eax
    ff15:	45 01 c1             	add    %r8d,%r9d
    ff18:	09 d0                	or     %edx,%eax
    ff1a:	47 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%r8,%r14,1),%r8d
    ff21:	6d 
    ff22:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    ff27:	44 31 f8             	xor    %r15d,%eax
    ff2a:	41 c1 c3 0a          	rol    $0xa,%r11d
    ff2e:	01 c8                	add    %ecx,%eax
    ff30:	44 89 d1             	mov    %r10d,%ecx
    ff33:	41 c1 c2 0a          	rol    $0xa,%r10d
    ff37:	f7 d1                	not    %ecx
    ff39:	c1 c0 05             	rol    $0x5,%eax
    ff3c:	44 09 c9             	or     %r9d,%ecx
    ff3f:	01 e8                	add    %ebp,%eax
    ff41:	42 8d ac 35 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r14,1),%ebp
    ff48:	6e 
    ff49:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
    ff4e:	31 d9                	xor    %ebx,%ecx
    ff50:	44 01 c1             	add    %r8d,%ecx
    ff53:	41 89 d0             	mov    %edx,%r8d
    ff56:	c1 c2 0a             	rol    $0xa,%edx
    ff59:	41 f7 d0             	not    %r8d
    ff5c:	c1 c1 0d             	rol    $0xd,%ecx
    ff5f:	41 09 c0             	or     %eax,%r8d
    ff62:	01 f1                	add    %esi,%ecx
    ff64:	42 8d b4 2e f3 3e 70 	lea    0x6d703ef3(%rsi,%r13,1),%esi
    ff6b:	6d 
    ff6c:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    ff71:	45 31 d8             	xor    %r11d,%r8d
    ff74:	41 01 e8             	add    %ebp,%r8d
    ff77:	44 89 cd             	mov    %r9d,%ebp
    ff7a:	41 c1 c1 0a          	rol    $0xa,%r9d
    ff7e:	f7 d5                	not    %ebp
    ff80:	41 c1 c0 0c          	rol    $0xc,%r8d
    ff84:	09 cd                	or     %ecx,%ebp
    ff86:	45 01 f8             	add    %r15d,%r8d
    ff89:	47 8d bc 2f a1 eb d9 	lea    0x6ed9eba1(%r15,%r13,1),%r15d
    ff90:	6e 
    ff91:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    ff96:	44 31 d5             	xor    %r10d,%ebp
    ff99:	01 f5                	add    %esi,%ebp
    ff9b:	89 c6                	mov    %eax,%esi
    ff9d:	c1 c0 0a             	rol    $0xa,%eax
    ffa0:	f7 d6                	not    %esi
    ffa2:	c1 c5 0d             	rol    $0xd,%ebp
    ffa5:	44 09 c6             	or     %r8d,%esi
    ffa8:	01 dd                	add    %ebx,%ebp
    ffaa:	42 8d 9c 33 f3 3e 70 	lea    0x6d703ef3(%rbx,%r14,1),%ebx
    ffb1:	6d 
    ffb2:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    ffb7:	31 d6                	xor    %edx,%esi
    ffb9:	44 01 fe             	add    %r15d,%esi
    ffbc:	41 89 cf             	mov    %ecx,%r15d
    ffbf:	41 f7 d7             	not    %r15d
    ffc2:	c1 c6 07             	rol    $0x7,%esi
    ffc5:	41 09 ef             	or     %ebp,%r15d
    ffc8:	44 01 de             	add    %r11d,%esi
    ffcb:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
    ffd2:	6e 
    ffd3:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
    ffd8:	45 31 cf             	xor    %r9d,%r15d
    ffdb:	41 01 df             	add    %ebx,%r15d
    ffde:	44 89 c3             	mov    %r8d,%ebx
    ffe1:	c1 c1 0a             	rol    $0xa,%ecx
    ffe4:	41 c1 c7 07          	rol    $0x7,%r15d
    ffe8:	f7 d3                	not    %ebx
    ffea:	41 c1 c0 0a          	rol    $0xa,%r8d
    ffee:	09 f3                	or     %esi,%ebx
    fff0:	45 01 d7             	add    %r10d,%r15d
    fff3:	47 8d 94 2a f3 3e 70 	lea    0x6d703ef3(%r10,%r13,1),%r10d
    fffa:	6d 
    fffb:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   10000:	31 c3                	xor    %eax,%ebx
   10002:	44 01 db             	add    %r11d,%ebx
   10005:	41 89 eb             	mov    %ebp,%r11d
   10008:	c1 c5 0a             	rol    $0xa,%ebp
   1000b:	41 f7 d3             	not    %r11d
   1000e:	c1 c3 05             	rol    $0x5,%ebx
   10011:	45 09 fb             	or     %r15d,%r11d
   10014:	01 d3                	add    %edx,%ebx
   10016:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
   1001d:	8f 
   1001e:	41 31 cb             	xor    %ecx,%r11d
   10021:	45 01 d3             	add    %r10d,%r11d
   10024:	41 89 f2             	mov    %esi,%r10d
   10027:	41 31 da             	xor    %ebx,%r10d
   1002a:	41 c1 c3 05          	rol    $0x5,%r11d
   1002e:	45 21 c2             	and    %r8d,%r10d
   10031:	45 01 cb             	add    %r9d,%r11d
   10034:	47 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%r9,%r14,1),%r9d
   1003b:	7a 
   1003c:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   10041:	41 31 f2             	xor    %esi,%r10d
   10044:	c1 c6 0a             	rol    $0xa,%esi
   10047:	41 01 d2             	add    %edx,%r10d
   1004a:	44 89 fa             	mov    %r15d,%edx
   1004d:	41 c1 c7 0a          	rol    $0xa,%r15d
   10051:	31 ea                	xor    %ebp,%edx
   10053:	41 c1 c2 0b          	rol    $0xb,%r10d
   10057:	44 21 da             	and    %r11d,%edx
   1005a:	41 01 c2             	add    %eax,%r10d
   1005d:	42 8d 84 30 dc bc 1b 	lea    -0x70e44324(%rax,%r14,1),%eax
   10064:	8f 
   10065:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   1006a:	31 ea                	xor    %ebp,%edx
   1006c:	44 01 ca             	add    %r9d,%edx
   1006f:	41 89 d9             	mov    %ebx,%r9d
   10072:	45 31 d1             	xor    %r10d,%r9d
   10075:	c1 c2 0f             	rol    $0xf,%edx
   10078:	41 21 f1             	and    %esi,%r9d
   1007b:	01 ca                	add    %ecx,%edx
   1007d:	42 8d 8c 21 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r12,1),%ecx
   10084:	7a 
   10085:	41 31 d9             	xor    %ebx,%r9d
   10088:	c1 c3 0a             	rol    $0xa,%ebx
   1008b:	41 01 c1             	add    %eax,%r9d
   1008e:	44 89 d8             	mov    %r11d,%eax
   10091:	41 c1 c3 0a          	rol    $0xa,%r11d
   10095:	44 31 f8             	xor    %r15d,%eax
   10098:	41 c1 c1 0c          	rol    $0xc,%r9d
   1009c:	21 d0                	and    %edx,%eax
   1009e:	45 01 c1             	add    %r8d,%r9d
   100a1:	47 8d 84 30 dc bc 1b 	lea    -0x70e44324(%r8,%r14,1),%r8d
   100a8:	8f 
   100a9:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
   100ae:	44 31 f8             	xor    %r15d,%eax
   100b1:	01 c8                	add    %ecx,%eax
   100b3:	44 89 d1             	mov    %r10d,%ecx
   100b6:	44 31 c9             	xor    %r9d,%ecx
   100b9:	c1 c0 05             	rol    $0x5,%eax
   100bc:	21 d9                	and    %ebx,%ecx
   100be:	01 e8                	add    %ebp,%eax
   100c0:	42 8d ac 35 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r14,1),%ebp
   100c7:	7a 
   100c8:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   100cd:	44 31 d1             	xor    %r10d,%ecx
   100d0:	41 c1 c2 0a          	rol    $0xa,%r10d
   100d4:	44 01 c1             	add    %r8d,%ecx
   100d7:	41 89 d0             	mov    %edx,%r8d
   100da:	c1 c2 0a             	rol    $0xa,%edx
   100dd:	45 31 d8             	xor    %r11d,%r8d
   100e0:	c1 c1 0e             	rol    $0xe,%ecx
   100e3:	41 21 c0             	and    %eax,%r8d
   100e6:	01 f1                	add    %esi,%ecx
   100e8:	42 8d b4 36 dc bc 1b 	lea    -0x70e44324(%rsi,%r14,1),%esi
   100ef:	8f 
   100f0:	45 31 d8             	xor    %r11d,%r8d
   100f3:	41 01 e8             	add    %ebp,%r8d
   100f6:	44 89 cd             	mov    %r9d,%ebp
   100f9:	31 cd                	xor    %ecx,%ebp
   100fb:	41 c1 c0 08          	rol    $0x8,%r8d
   100ff:	44 21 d5             	and    %r10d,%ebp
   10102:	45 01 f8             	add    %r15d,%r8d
   10105:	47 8d bc 2f e9 76 6d 	lea    0x7a6d76e9(%r15,%r13,1),%r15d
   1010c:	7a 
   1010d:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   10112:	44 31 cd             	xor    %r9d,%ebp
   10115:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   1011a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
   1011f:	01 f5                	add    %esi,%ebp
   10121:	89 c6                	mov    %eax,%esi
   10123:	c1 c5 0f             	rol    $0xf,%ebp
   10126:	01 dd                	add    %ebx,%ebp
   10128:	41 c1 c1 0a          	rol    $0xa,%r9d
   1012c:	31 d6                	xor    %edx,%esi
   1012e:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
   10135:	8f 
   10136:	44 21 c6             	and    %r8d,%esi
   10139:	c1 c0 0a             	rol    $0xa,%eax
   1013c:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   10141:	31 d6                	xor    %edx,%esi
   10143:	44 01 fe             	add    %r15d,%esi
   10146:	41 89 cf             	mov    %ecx,%r15d
   10149:	41 31 ef             	xor    %ebp,%r15d
   1014c:	c1 c6 0b             	rol    $0xb,%esi
   1014f:	45 21 cf             	and    %r9d,%r15d
   10152:	44 01 de             	add    %r11d,%esi
   10155:	47 8d 9c 23 e9 76 6d 	lea    0x7a6d76e9(%r11,%r12,1),%r11d
   1015c:	7a 
   1015d:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   10162:	41 31 cf             	xor    %ecx,%r15d
   10165:	c1 c1 0a             	rol    $0xa,%ecx
   10168:	41 01 df             	add    %ebx,%r15d
   1016b:	44 89 c3             	mov    %r8d,%ebx
   1016e:	41 c1 c0 0a          	rol    $0xa,%r8d
   10172:	31 c3                	xor    %eax,%ebx
   10174:	41 c1 c7 0e          	rol    $0xe,%r15d
   10178:	21 f3                	and    %esi,%ebx
   1017a:	45 01 d7             	add    %r10d,%r15d
   1017d:	47 8d 94 32 dc bc 1b 	lea    -0x70e44324(%r10,%r14,1),%r10d
   10184:	8f 
   10185:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   1018a:	31 c3                	xor    %eax,%ebx
   1018c:	44 01 db             	add    %r11d,%ebx
   1018f:	41 89 eb             	mov    %ebp,%r11d
   10192:	45 31 fb             	xor    %r15d,%r11d
   10195:	c1 c3 0e             	rol    $0xe,%ebx
   10198:	41 21 cb             	and    %ecx,%r11d
   1019b:	01 d3                	add    %edx,%ebx
   1019d:	42 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%rdx,%r14,1),%edx
   101a4:	7a 
   101a5:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   101aa:	41 31 eb             	xor    %ebp,%r11d
   101ad:	c1 c5 0a             	rol    $0xa,%ebp
   101b0:	45 01 d3             	add    %r10d,%r11d
   101b3:	41 89 f2             	mov    %esi,%r10d
   101b6:	45 31 c2             	xor    %r8d,%r10d
   101b9:	41 c1 c3 0f          	rol    $0xf,%r11d
   101bd:	41 21 da             	and    %ebx,%r10d
   101c0:	45 01 cb             	add    %r9d,%r11d
   101c3:	47 8d 8c 31 dc bc 1b 	lea    -0x70e44324(%r9,%r14,1),%r9d
   101ca:	8f 
   101cb:	45 31 c2             	xor    %r8d,%r10d
   101ce:	41 01 d2             	add    %edx,%r10d
   101d1:	44 89 fa             	mov    %r15d,%edx
   101d4:	c1 c6 0a             	rol    $0xa,%esi
   101d7:	44 31 da             	xor    %r11d,%edx
   101da:	41 c1 c2 0e          	rol    $0xe,%r10d
   101de:	21 ea                	and    %ebp,%edx
   101e0:	41 01 c2             	add    %eax,%r10d
   101e3:	42 8d 84 20 e9 76 6d 	lea    0x7a6d76e9(%rax,%r12,1),%eax
   101ea:	7a 
   101eb:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   101f0:	44 31 fa             	xor    %r15d,%edx
   101f3:	41 c1 c7 0a          	rol    $0xa,%r15d
   101f7:	44 01 ca             	add    %r9d,%edx
   101fa:	41 89 d9             	mov    %ebx,%r9d
   101fd:	c1 c3 0a             	rol    $0xa,%ebx
   10200:	41 31 f1             	xor    %esi,%r9d
   10203:	c1 c2 09             	rol    $0x9,%edx
   10206:	45 21 d1             	and    %r10d,%r9d
   10209:	01 ca                	add    %ecx,%edx
   1020b:	42 8d 8c 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%ecx
   10212:	8f 
   10213:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   10218:	41 31 f1             	xor    %esi,%r9d
   1021b:	41 01 c1             	add    %eax,%r9d
   1021e:	44 89 d8             	mov    %r11d,%eax
   10221:	31 d0                	xor    %edx,%eax
   10223:	41 c1 c1 06          	rol    $0x6,%r9d
   10227:	44 21 f8             	and    %r15d,%eax
   1022a:	45 01 c1             	add    %r8d,%r9d
   1022d:	47 8d 84 28 e9 76 6d 	lea    0x7a6d76e9(%r8,%r13,1),%r8d
   10234:	7a 
   10235:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   1023a:	44 31 d8             	xor    %r11d,%eax
   1023d:	41 c1 c3 0a          	rol    $0xa,%r11d
   10241:	01 c8                	add    %ecx,%eax
   10243:	44 89 d1             	mov    %r10d,%ecx
   10246:	41 c1 c2 0a          	rol    $0xa,%r10d
   1024a:	31 d9                	xor    %ebx,%ecx
   1024c:	c1 c0 08             	rol    $0x8,%eax
   1024f:	44 21 c9             	and    %r9d,%ecx
   10252:	01 e8                	add    %ebp,%eax
   10254:	42 8d ac 2d dc bc 1b 	lea    -0x70e44324(%rbp,%r13,1),%ebp
   1025b:	8f 
   1025c:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   10261:	31 d9                	xor    %ebx,%ecx
   10263:	44 01 c1             	add    %r8d,%ecx
   10266:	41 89 d0             	mov    %edx,%r8d
   10269:	c1 c1 0e             	rol    $0xe,%ecx
   1026c:	01 f1                	add    %esi,%ecx
   1026e:	41 31 c0             	xor    %eax,%r8d
   10271:	42 8d b4 2e e9 76 6d 	lea    0x7a6d76e9(%rsi,%r13,1),%esi
   10278:	7a 
   10279:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   1027e:	45 21 d8             	and    %r11d,%r8d
   10281:	41 31 d0             	xor    %edx,%r8d
   10284:	c1 c2 0a             	rol    $0xa,%edx
   10287:	41 01 e8             	add    %ebp,%r8d
   1028a:	44 89 cd             	mov    %r9d,%ebp
   1028d:	41 c1 c1 0a          	rol    $0xa,%r9d
   10291:	44 31 d5             	xor    %r10d,%ebp
   10294:	41 c1 c0 09          	rol    $0x9,%r8d
   10298:	21 cd                	and    %ecx,%ebp
   1029a:	45 01 f8             	add    %r15d,%r8d
   1029d:	47 8d bc 27 dc bc 1b 	lea    -0x70e44324(%r15,%r12,1),%r15d
   102a4:	8f 
   102a5:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   102aa:	44 31 d5             	xor    %r10d,%ebp
   102ad:	01 f5                	add    %esi,%ebp
   102af:	89 c6                	mov    %eax,%esi
   102b1:	44 31 c6             	xor    %r8d,%esi
   102b4:	c1 c5 06             	rol    $0x6,%ebp
   102b7:	21 d6                	and    %edx,%esi
   102b9:	01 dd                	add    %ebx,%ebp
   102bb:	42 8d 9c 33 e9 76 6d 	lea    0x7a6d76e9(%rbx,%r14,1),%ebx
   102c2:	7a 
   102c3:	44 8b 34 24          	mov    (%rsp),%r14d
   102c7:	31 c6                	xor    %eax,%esi
   102c9:	c1 c0 0a             	rol    $0xa,%eax
   102cc:	44 01 fe             	add    %r15d,%esi
   102cf:	41 89 cf             	mov    %ecx,%r15d
   102d2:	c1 c1 0a             	rol    $0xa,%ecx
   102d5:	45 31 cf             	xor    %r9d,%r15d
   102d8:	c1 c6 0e             	rol    $0xe,%esi
   102db:	41 21 ef             	and    %ebp,%r15d
   102de:	44 01 de             	add    %r11d,%esi
   102e1:	47 8d 9c 23 dc bc 1b 	lea    -0x70e44324(%r11,%r12,1),%r11d
   102e8:	8f 
   102e9:	45 31 cf             	xor    %r9d,%r15d
   102ec:	41 01 df             	add    %ebx,%r15d
   102ef:	44 89 c3             	mov    %r8d,%ebx
   102f2:	31 f3                	xor    %esi,%ebx
   102f4:	41 c1 c7 09          	rol    $0x9,%r15d
   102f8:	21 c3                	and    %eax,%ebx
   102fa:	45 01 d7             	add    %r10d,%r15d
   102fd:	47 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%r10,%r14,1),%r10d
   10304:	7a 
   10305:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   1030a:	44 31 c3             	xor    %r8d,%ebx
   1030d:	44 01 db             	add    %r11d,%ebx
   10310:	41 89 eb             	mov    %ebp,%r11d
   10313:	c1 c3 05             	rol    $0x5,%ebx
   10316:	41 31 cb             	xor    %ecx,%r11d
   10319:	41 c1 c0 0a          	rol    $0xa,%r8d
   1031d:	45 21 fb             	and    %r15d,%r11d
   10320:	01 d3                	add    %edx,%ebx
   10322:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
   10329:	8f 
   1032a:	c1 c5 0a             	rol    $0xa,%ebp
   1032d:	41 31 cb             	xor    %ecx,%r11d
   10330:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   10335:	45 01 d3             	add    %r10d,%r11d
   10338:	41 89 f2             	mov    %esi,%r10d
   1033b:	41 31 da             	xor    %ebx,%r10d
   1033e:	41 c1 c3 0c          	rol    $0xc,%r11d
   10342:	45 21 c2             	and    %r8d,%r10d
   10345:	45 01 cb             	add    %r9d,%r11d
   10348:	47 8d 8c 29 e9 76 6d 	lea    0x7a6d76e9(%r9,%r13,1),%r9d
   1034f:	7a 
   10350:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
   10355:	41 31 f2             	xor    %esi,%r10d
   10358:	c1 c6 0a             	rol    $0xa,%esi
   1035b:	41 01 d2             	add    %edx,%r10d
   1035e:	44 89 fa             	mov    %r15d,%edx
   10361:	41 c1 c7 0a          	rol    $0xa,%r15d
   10365:	31 ea                	xor    %ebp,%edx
   10367:	41 c1 c2 06          	rol    $0x6,%r10d
   1036b:	44 21 da             	and    %r11d,%edx
   1036e:	41 01 c2             	add    %eax,%r10d
   10371:	42 8d 84 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%eax
   10378:	8f 
   10379:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   1037e:	31 ea                	xor    %ebp,%edx
   10380:	44 01 ca             	add    %r9d,%edx
   10383:	41 89 d9             	mov    %ebx,%r9d
   10386:	45 31 d1             	xor    %r10d,%r9d
   10389:	c1 c2 09             	rol    $0x9,%edx
   1038c:	41 21 f1             	and    %esi,%r9d
   1038f:	01 ca                	add    %ecx,%edx
   10391:	42 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r14,1),%ecx
   10398:	7a 
   10399:	41 31 d9             	xor    %ebx,%r9d
   1039c:	c1 c3 0a             	rol    $0xa,%ebx
   1039f:	41 01 c1             	add    %eax,%r9d
   103a2:	44 89 d8             	mov    %r11d,%eax
   103a5:	41 c1 c1 08          	rol    $0x8,%r9d
   103a9:	44 31 f8             	xor    %r15d,%eax
   103ac:	45 01 c1             	add    %r8d,%r9d
   103af:	21 d0                	and    %edx,%eax
   103b1:	47 8d 84 28 dc bc 1b 	lea    -0x70e44324(%r8,%r13,1),%r8d
   103b8:	8f 
   103b9:	41 c1 c3 0a          	rol    $0xa,%r11d
   103bd:	44 31 f8             	xor    %r15d,%eax
   103c0:	44 8b 2c 24          	mov    (%rsp),%r13d
   103c4:	01 c8                	add    %ecx,%eax
   103c6:	44 89 d1             	mov    %r10d,%ecx
   103c9:	44 31 c9             	xor    %r9d,%ecx
   103cc:	c1 c0 0c             	rol    $0xc,%eax
   103cf:	21 d9                	and    %ebx,%ecx
   103d1:	01 e8                	add    %ebp,%eax
   103d3:	42 8d ac 25 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r12,1),%ebp
   103da:	7a 
   103db:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   103e0:	44 31 d1             	xor    %r10d,%ecx
   103e3:	41 c1 c2 0a          	rol    $0xa,%r10d
   103e7:	44 01 c1             	add    %r8d,%ecx
   103ea:	41 89 d0             	mov    %edx,%r8d
   103ed:	c1 c2 0a             	rol    $0xa,%edx
   103f0:	45 31 d8             	xor    %r11d,%r8d
   103f3:	c1 c1 06             	rol    $0x6,%ecx
   103f6:	41 21 c0             	and    %eax,%r8d
   103f9:	01 f1                	add    %esi,%ecx
   103fb:	42 8d b4 26 dc bc 1b 	lea    -0x70e44324(%rsi,%r12,1),%esi
   10402:	8f 
   10403:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   10408:	45 31 d8             	xor    %r11d,%r8d
   1040b:	41 01 e8             	add    %ebp,%r8d
   1040e:	44 89 cd             	mov    %r9d,%ebp
   10411:	31 cd                	xor    %ecx,%ebp
   10413:	41 c1 c0 05          	rol    $0x5,%r8d
   10417:	44 21 d5             	and    %r10d,%ebp
   1041a:	45 01 f8             	add    %r15d,%r8d
   1041d:	47 8d bc 27 e9 76 6d 	lea    0x7a6d76e9(%r15,%r12,1),%r15d
   10424:	7a 
   10425:	44 31 cd             	xor    %r9d,%ebp
   10428:	41 c1 c1 0a          	rol    $0xa,%r9d
   1042c:	01 f5                	add    %esi,%ebp
   1042e:	89 c6                	mov    %eax,%esi
   10430:	31 d6                	xor    %edx,%esi
   10432:	c1 c5 05             	rol    $0x5,%ebp
   10435:	44 21 c6             	and    %r8d,%esi
   10438:	01 dd                	add    %ebx,%ebp
   1043a:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
   10441:	8f 
   10442:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
   10447:	31 d6                	xor    %edx,%esi
   10449:	44 01 fe             	add    %r15d,%esi
   1044c:	41 89 cf             	mov    %ecx,%r15d
   1044f:	c1 c6 0f             	rol    $0xf,%esi
   10452:	44 01 de             	add    %r11d,%esi
   10455:	41 31 ef             	xor    %ebp,%r15d
   10458:	c1 c0 0a             	rol    $0xa,%eax
   1045b:	47 8d 9c 2b e9 76 6d 	lea    0x7a6d76e9(%r11,%r13,1),%r11d
   10462:	7a 
   10463:	45 21 cf             	and    %r9d,%r15d
   10466:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
   1046b:	41 31 cf             	xor    %ecx,%r15d
   1046e:	c1 c1 0a             	rol    $0xa,%ecx
   10471:	44 01 fb             	add    %r15d,%ebx
   10474:	41 89 cf             	mov    %ecx,%r15d
   10477:	44 89 c1             	mov    %r8d,%ecx
   1047a:	41 c1 c0 0a          	rol    $0xa,%r8d
   1047e:	31 c1                	xor    %eax,%ecx
   10480:	c1 c3 0c             	rol    $0xc,%ebx
   10483:	21 f1                	and    %esi,%ecx
   10485:	44 01 d3             	add    %r10d,%ebx
   10488:	47 8d 94 2a 4e fd 53 	lea    -0x56ac02b2(%r10,%r13,1),%r10d
   1048f:	a9 
   10490:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   10495:	31 c1                	xor    %eax,%ecx
   10497:	44 01 d9             	add    %r11d,%ecx
   1049a:	45 89 fb             	mov    %r15d,%r11d
   1049d:	41 f7 d3             	not    %r11d
   104a0:	c1 c1 08             	rol    $0x8,%ecx
   104a3:	41 09 eb             	or     %ebp,%r11d
   104a6:	01 d1                	add    %edx,%ecx
   104a8:	c1 c5 0a             	rol    $0xa,%ebp
   104ab:	03 54 24 18          	add    0x18(%rsp),%edx
   104af:	41 31 db             	xor    %ebx,%r11d
   104b2:	45 01 da             	add    %r11d,%r10d
   104b5:	41 89 f3             	mov    %esi,%r11d
   104b8:	c1 c6 0a             	rol    $0xa,%esi
   104bb:	45 31 c3             	xor    %r8d,%r11d
   104be:	41 c1 c2 09          	rol    $0x9,%r10d
   104c2:	41 31 cb             	xor    %ecx,%r11d
   104c5:	45 01 ca             	add    %r9d,%r10d
   104c8:	47 8d 8c 29 4e fd 53 	lea    -0x56ac02b2(%r9,%r13,1),%r9d
   104cf:	a9 
   104d0:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   104d5:	44 01 da             	add    %r11d,%edx
   104d8:	41 89 eb             	mov    %ebp,%r11d
   104db:	41 f7 d3             	not    %r11d
   104de:	c1 c2 08             	rol    $0x8,%edx
   104e1:	41 09 db             	or     %ebx,%r11d
   104e4:	01 c2                	add    %eax,%edx
   104e6:	45 31 d3             	xor    %r10d,%r11d
   104e9:	45 01 d9             	add    %r11d,%r9d
   104ec:	41 89 cb             	mov    %ecx,%r11d
   104ef:	41 c1 c1 0f          	rol    $0xf,%r9d
   104f3:	41 31 f3             	xor    %esi,%r11d
   104f6:	c1 c3 0a             	rol    $0xa,%ebx
   104f9:	03 44 24 20          	add    0x20(%rsp),%eax
   104fd:	41 31 d3             	xor    %edx,%r11d
   10500:	45 01 f9             	add    %r15d,%r9d
   10503:	47 8d bc 2f 4e fd 53 	lea    -0x56ac02b2(%r15,%r13,1),%r15d
   1050a:	a9 
   1050b:	c1 c1 0a             	rol    $0xa,%ecx
   1050e:	41 01 c3             	add    %eax,%r11d
   10511:	89 d8                	mov    %ebx,%eax
   10513:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   10518:	f7 d0                	not    %eax
   1051a:	41 c1 c3 05          	rol    $0x5,%r11d
   1051e:	44 09 d0             	or     %r10d,%eax
   10521:	45 01 c3             	add    %r8d,%r11d
   10524:	41 c1 c2 0a          	rol    $0xa,%r10d
   10528:	45 01 e0             	add    %r12d,%r8d
   1052b:	44 31 c8             	xor    %r9d,%eax
   1052e:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   10533:	41 01 c7             	add    %eax,%r15d
   10536:	89 d0                	mov    %edx,%eax
   10538:	c1 c2 0a             	rol    $0xa,%edx
   1053b:	31 c8                	xor    %ecx,%eax
   1053d:	41 c1 c7 05          	rol    $0x5,%r15d
   10541:	44 31 d8             	xor    %r11d,%eax
   10544:	41 01 ef             	add    %ebp,%r15d
   10547:	42 8d ac 35 4e fd 53 	lea    -0x56ac02b2(%rbp,%r14,1),%ebp
   1054e:	a9 
   1054f:	41 01 c0             	add    %eax,%r8d
   10552:	44 89 d0             	mov    %r10d,%eax
   10555:	f7 d0                	not    %eax
   10557:	41 c1 c0 0c          	rol    $0xc,%r8d
   1055b:	44 09 c8             	or     %r9d,%eax
   1055e:	41 01 f0             	add    %esi,%r8d
   10561:	41 c1 c1 0a          	rol    $0xa,%r9d
   10565:	03 74 24 04          	add    0x4(%rsp),%esi
   10569:	44 31 f8             	xor    %r15d,%eax
   1056c:	01 c5                	add    %eax,%ebp
   1056e:	44 89 d8             	mov    %r11d,%eax
   10571:	31 d0                	xor    %edx,%eax
   10573:	c1 c5 0b             	rol    $0xb,%ebp
   10576:	44 31 c0             	xor    %r8d,%eax
   10579:	01 dd                	add    %ebx,%ebp
   1057b:	01 c6                	add    %eax,%esi
   1057d:	44 89 c8             	mov    %r9d,%eax
   10580:	41 c1 c3 0a          	rol    $0xa,%r11d
   10584:	f7 d0                	not    %eax
   10586:	c1 c6 09             	rol    $0x9,%esi
   10589:	41 89 c6             	mov    %eax,%r14d
   1058c:	42 8d 84 23 4e fd 53 	lea    -0x56ac02b2(%rbx,%r12,1),%eax
   10593:	a9 
   10594:	44 89 c3             	mov    %r8d,%ebx
   10597:	01 ce                	add    %ecx,%esi
   10599:	45 09 fe             	or     %r15d,%r14d
   1059c:	44 31 db             	xor    %r11d,%ebx
   1059f:	41 c1 c7 0a          	rol    $0xa,%r15d
   105a3:	44 01 e9             	add    %r13d,%ecx
   105a6:	41 31 ee             	xor    %ebp,%r14d
   105a9:	41 c1 c0 0a          	rol    $0xa,%r8d
   105ad:	41 01 c6             	add    %eax,%r14d
   105b0:	89 d8                	mov    %ebx,%eax
   105b2:	44 89 fb             	mov    %r15d,%ebx
   105b5:	31 f0                	xor    %esi,%eax
   105b7:	41 c1 c6 06          	rol    $0x6,%r14d
   105bb:	f7 d3                	not    %ebx
   105bd:	01 c1                	add    %eax,%ecx
   105bf:	8b 44 24 18          	mov    0x18(%rsp),%eax
   105c3:	45 01 d6             	add    %r10d,%r14d
   105c6:	09 eb                	or     %ebp,%ebx
   105c8:	c1 c1 0c             	rol    $0xc,%ecx
   105cb:	44 31 f3             	xor    %r14d,%ebx
   105ce:	c1 c5 0a             	rol    $0xa,%ebp
   105d1:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
   105d8:	a9 
   105d9:	41 89 f2             	mov    %esi,%r10d
   105dc:	01 d1                	add    %edx,%ecx
   105de:	c1 c6 0a             	rol    $0xa,%esi
   105e1:	45 31 c2             	xor    %r8d,%r10d
   105e4:	01 c3                	add    %eax,%ebx
   105e6:	03 54 24 08          	add    0x8(%rsp),%edx
   105ea:	44 89 d0             	mov    %r10d,%eax
   105ed:	41 89 ea             	mov    %ebp,%r10d
   105f0:	c1 c3 08             	rol    $0x8,%ebx
   105f3:	31 c8                	xor    %ecx,%eax
   105f5:	41 f7 d2             	not    %r10d
   105f8:	44 01 cb             	add    %r9d,%ebx
   105fb:	01 c2                	add    %eax,%edx
   105fd:	8b 04 24             	mov    (%rsp),%eax
   10600:	45 09 f2             	or     %r14d,%r10d
   10603:	c1 c2 05             	rol    $0x5,%edx
   10606:	41 31 da             	xor    %ebx,%r10d
   10609:	41 8d 84 01 4e fd 53 	lea    -0x56ac02b2(%r9,%rax,1),%eax
   10610:	a9 
   10611:	41 89 c9             	mov    %ecx,%r9d
   10614:	44 01 da             	add    %r11d,%edx
   10617:	41 01 c2             	add    %eax,%r10d
   1061a:	41 31 f1             	xor    %esi,%r9d
   1061d:	41 c1 c6 0a          	rol    $0xa,%r14d
   10621:	44 03 5c 24 0c       	add    0xc(%rsp),%r11d
   10626:	41 c1 c2 0d          	rol    $0xd,%r10d
   1062a:	44 89 c8             	mov    %r9d,%eax
   1062d:	45 89 f1             	mov    %r14d,%r9d
   10630:	c1 c1 0a             	rol    $0xa,%ecx
   10633:	31 d0                	xor    %edx,%eax
   10635:	41 f7 d1             	not    %r9d
   10638:	45 01 fa             	add    %r15d,%r10d
   1063b:	41 01 c3             	add    %eax,%r11d
   1063e:	8b 44 24 10          	mov    0x10(%rsp),%eax
   10642:	41 09 d9             	or     %ebx,%r9d
   10645:	c1 c3 0a             	rol    $0xa,%ebx
   10648:	45 31 d1             	xor    %r10d,%r9d
   1064b:	41 c1 c3 0e          	rol    $0xe,%r11d
   1064f:	41 8d 84 07 4e fd 53 	lea    -0x56ac02b2(%r15,%rax,1),%eax
   10656:	a9 
   10657:	41 89 df             	mov    %ebx,%r15d
   1065a:	45 01 c3             	add    %r8d,%r11d
   1065d:	45 01 e0             	add    %r12d,%r8d
   10660:	41 01 c1             	add    %eax,%r9d
   10663:	41 f7 d7             	not    %r15d
   10666:	89 d0                	mov    %edx,%eax
   10668:	c1 c2 0a             	rol    $0xa,%edx
   1066b:	31 c8                	xor    %ecx,%eax
   1066d:	41 c1 c1 0c          	rol    $0xc,%r9d
   10671:	45 89 fc             	mov    %r15d,%r12d
   10674:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
   10679:	41 01 e9             	add    %ebp,%r9d
   1067c:	44 31 d8             	xor    %r11d,%eax
   1067f:	45 09 d4             	or     %r10d,%r12d
   10682:	41 c1 c2 0a          	rol    $0xa,%r10d
   10686:	41 01 c0             	add    %eax,%r8d
   10689:	45 31 cc             	xor    %r9d,%r12d
   1068c:	42 8d 84 3d 4e fd 53 	lea    -0x56ac02b2(%rbp,%r15,1),%eax
   10693:	a9 
   10694:	44 89 dd             	mov    %r11d,%ebp
   10697:	41 01 c4             	add    %eax,%r12d
   1069a:	41 c1 c0 06          	rol    $0x6,%r8d
   1069e:	31 d5                	xor    %edx,%ebp
   106a0:	44 8b 7c 24 38       	mov    0x38(%rsp),%r15d
   106a5:	41 01 f0             	add    %esi,%r8d
   106a8:	41 c1 c4 05          	rol    $0x5,%r12d
   106ac:	43 8d 84 2e 4e fd 53 	lea    -0x56ac02b2(%r14,%r13,1),%eax
   106b3:	a9 
   106b4:	45 01 f4             	add    %r14d,%r12d
   106b7:	44 31 c5             	xor    %r8d,%ebp
   106ba:	03 74 24 38          	add    0x38(%rsp),%esi
   106be:	41 c1 c3 0a          	rol    $0xa,%r11d
   106c2:	01 ee                	add    %ebp,%esi
   106c4:	44 89 d5             	mov    %r10d,%ebp
   106c7:	44 8b 74 24 24       	mov    0x24(%rsp),%r14d
   106cc:	f7 d5                	not    %ebp
   106ce:	c1 c6 08             	rol    $0x8,%esi
   106d1:	44 09 cd             	or     %r9d,%ebp
   106d4:	01 ce                	add    %ecx,%esi
   106d6:	41 c1 c1 0a          	rol    $0xa,%r9d
   106da:	03 0c 24             	add    (%rsp),%ecx
   106dd:	44 31 e5             	xor    %r12d,%ebp
   106e0:	01 c5                	add    %eax,%ebp
   106e2:	44 89 c0             	mov    %r8d,%eax
   106e5:	41 c1 c0 0a          	rol    $0xa,%r8d
   106e9:	44 31 d8             	xor    %r11d,%eax
   106ec:	c1 c5 0c             	rol    $0xc,%ebp
   106ef:	31 f0                	xor    %esi,%eax
   106f1:	01 dd                	add    %ebx,%ebp
   106f3:	01 c1                	add    %eax,%ecx
   106f5:	44 89 c8             	mov    %r9d,%eax
   106f8:	f7 d0                	not    %eax
   106fa:	c1 c1 0d             	rol    $0xd,%ecx
   106fd:	41 89 c5             	mov    %eax,%r13d
   10700:	42 8d 84 33 4e fd 53 	lea    -0x56ac02b2(%rbx,%r14,1),%eax
   10707:	a9 
   10708:	89 f3                	mov    %esi,%ebx
   1070a:	01 d1                	add    %edx,%ecx
   1070c:	45 09 e5             	or     %r12d,%r13d
   1070f:	44 31 c3             	xor    %r8d,%ebx
   10712:	41 c1 c4 0a          	rol    $0xa,%r12d
   10716:	03 54 24 1c          	add    0x1c(%rsp),%edx
   1071a:	31 cb                	xor    %ecx,%ebx
   1071c:	41 31 ed             	xor    %ebp,%r13d
   1071f:	c1 c6 0a             	rol    $0xa,%esi
   10722:	41 01 c5             	add    %eax,%r13d
   10725:	01 da                	add    %ebx,%edx
   10727:	44 89 e3             	mov    %r12d,%ebx
   1072a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1072e:	41 c1 c5 0d          	rol    $0xd,%r13d
   10732:	f7 d3                	not    %ebx
   10734:	c1 c2 06             	rol    $0x6,%edx
   10737:	45 01 d5             	add    %r10d,%r13d
   1073a:	09 eb                	or     %ebp,%ebx
   1073c:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
   10743:	a9 
   10744:	44 01 da             	add    %r11d,%edx
   10747:	44 31 eb             	xor    %r13d,%ebx
   1074a:	c1 c5 0a             	rol    $0xa,%ebp
   1074d:	44 03 5c 24 28       	add    0x28(%rsp),%r11d
   10752:	01 c3                	add    %eax,%ebx
   10754:	89 c8                	mov    %ecx,%eax
   10756:	41 89 ea             	mov    %ebp,%r10d
   10759:	c1 c1 0a             	rol    $0xa,%ecx
   1075c:	31 f0                	xor    %esi,%eax
   1075e:	41 f7 d2             	not    %r10d
   10761:	c1 c3 0e             	rol    $0xe,%ebx
   10764:	31 d0                	xor    %edx,%eax
   10766:	44 01 cb             	add    %r9d,%ebx
   10769:	41 01 c3             	add    %eax,%r11d
   1076c:	44 89 d0             	mov    %r10d,%eax
   1076f:	44 8b 54 24 14       	mov    0x14(%rsp),%r10d
   10774:	44 09 e8             	or     %r13d,%eax
   10777:	41 c1 c5 0a          	rol    $0xa,%r13d
   1077b:	31 d8                	xor    %ebx,%eax
   1077d:	47 8d 8c 11 4e fd 53 	lea    -0x56ac02b2(%r9,%r10,1),%r9d
   10784:	a9 
   10785:	41 c1 c3 05          	rol    $0x5,%r11d
   10789:	41 89 d2             	mov    %edx,%r10d
   1078c:	41 01 c1             	add    %eax,%r9d
   1078f:	44 89 e8             	mov    %r13d,%eax
   10792:	45 01 c3             	add    %r8d,%r11d
   10795:	41 31 ca             	xor    %ecx,%r10d
   10798:	41 c1 c1 0b          	rol    $0xb,%r9d
   1079c:	f7 d0                	not    %eax
   1079e:	44 03 44 24 2c       	add    0x2c(%rsp),%r8d
   107a3:	45 31 da             	xor    %r11d,%r10d
   107a6:	45 01 e1             	add    %r12d,%r9d
   107a9:	09 d8                	or     %ebx,%eax
   107ab:	45 01 c2             	add    %r8d,%r10d
   107ae:	c1 c2 0a             	rol    $0xa,%edx
   107b1:	41 c1 c2 0f          	rol    $0xf,%r10d
   107b5:	44 31 c8             	xor    %r9d,%eax
   107b8:	45 89 d8             	mov    %r11d,%r8d
   107bb:	c1 c3 0a             	rol    $0xa,%ebx
   107be:	47 8d a4 3c 4e fd 53 	lea    -0x56ac02b2(%r12,%r15,1),%r12d
   107c5:	a9 
   107c6:	41 01 f2             	add    %esi,%r10d
   107c9:	41 31 d0             	xor    %edx,%r8d
   107cc:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   107d1:	41 01 c4             	add    %eax,%r12d
   107d4:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   107d8:	41 c1 c4 08          	rol    $0x8,%r12d
   107dc:	41 01 ec             	add    %ebp,%r12d
   107df:	45 31 d0             	xor    %r10d,%r8d
   107e2:	44 01 f6             	add    %r14d,%esi
   107e5:	41 c1 c3 0a          	rol    $0xa,%r11d
   107e9:	44 01 c6             	add    %r8d,%esi
   107ec:	41 89 d8             	mov    %ebx,%r8d
   107ef:	44 89 5c 24 54       	mov    %r11d,0x54(%rsp)
   107f4:	41 f7 d0             	not    %r8d
   107f7:	c1 c6 0d             	rol    $0xd,%esi
   107fa:	45 89 c6             	mov    %r8d,%r14d
   107fd:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
   10802:	01 ce                	add    %ecx,%esi
   10804:	03 4c 24 3c          	add    0x3c(%rsp),%ecx
   10808:	45 09 ce             	or     %r9d,%r14d
   1080b:	41 c1 c1 0a          	rol    $0xa,%r9d
   1080f:	42 8d 84 05 4e fd 53 	lea    -0x56ac02b2(%rbp,%r8,1),%eax
   10816:	a9 
   10817:	45 89 d0             	mov    %r10d,%r8d
   1081a:	45 31 e6             	xor    %r12d,%r14d
   1081d:	41 c1 c2 0a          	rol    $0xa,%r10d
   10821:	45 31 d8             	xor    %r11d,%r8d
   10824:	41 01 c6             	add    %eax,%r14d
   10827:	44 89 c8             	mov    %r9d,%eax
   1082a:	44 89 54 24 64       	mov    %r10d,0x64(%rsp)
   1082f:	41 31 f0             	xor    %esi,%r8d
   10832:	41 c1 c6 05          	rol    $0x5,%r14d
   10836:	f7 d0                	not    %eax
   10838:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
   1083d:	44 01 c1             	add    %r8d,%ecx
   10840:	41 89 f0             	mov    %esi,%r8d
   10843:	45 01 ee             	add    %r13d,%r14d
   10846:	44 09 e0             	or     %r12d,%eax
   10849:	c1 c1 0b             	rol    $0xb,%ecx
   1084c:	45 31 d0             	xor    %r10d,%r8d
   1084f:	44 31 f0             	xor    %r14d,%eax
   10852:	c1 c6 0a             	rol    $0xa,%esi
   10855:	01 d1                	add    %edx,%ecx
   10857:	03 54 24 14          	add    0x14(%rsp),%edx
   1085b:	41 c1 c4 0a          	rol    $0xa,%r12d
   1085f:	89 74 24 60          	mov    %esi,0x60(%rsp)
   10863:	41 31 c8             	xor    %ecx,%r8d
   10866:	43 8d ac 3d 4e fd 53 	lea    -0x56ac02b2(%r13,%r15,1),%ebp
   1086d:	a9 
   1086e:	44 89 64 24 4c       	mov    %r12d,0x4c(%rsp)
   10873:	01 c5                	add    %eax,%ebp
   10875:	44 01 c2             	add    %r8d,%edx
   10878:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
   1087c:	c1 c5 06             	rol    $0x6,%ebp
   1087f:	c1 c2 0b             	rol    $0xb,%edx
   10882:	01 dd                	add    %ebx,%ebp
   10884:	44 01 da             	add    %r11d,%edx
   10887:	03 77 0c             	add    0xc(%rdi),%esi
   1088a:	44 03 57 10          	add    0x10(%rdi),%r10d
   1088e:	44 03 5f 14          	add    0x14(%rdi),%r11d
   10892:	03 5f 18             	add    0x18(%rdi),%ebx
   10895:	41 01 f6             	add    %esi,%r14d
   10898:	45 01 d4             	add    %r10d,%r12d
   1089b:	45 01 d9             	add    %r11d,%r9d
   1089e:	89 54 24 58          	mov    %edx,0x58(%rsp)
   108a2:	01 da                	add    %ebx,%edx
   108a4:	be 68 00 00 00       	mov    $0x68,%esi
   108a9:	44 89 4f 10          	mov    %r9d,0x10(%rdi)
   108ad:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
   108b1:	44 89 67 0c          	mov    %r12d,0xc(%rdi)
   108b5:	44 89 74 24 48       	mov    %r14d,0x48(%rsp)
   108ba:	89 57 14             	mov    %edx,0x14(%rdi)
   108bd:	03 4f 08             	add    0x8(%rdi),%ecx
   108c0:	01 cd                	add    %ecx,%ebp
   108c2:	44 89 77 08          	mov    %r14d,0x8(%rdi)
   108c6:	89 6f 18             	mov    %ebp,0x18(%rdi)
   108c9:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   108ce:	e8 dd e7 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   108d3:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   108da:	00 
   108db:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   108e2:	00 00 
   108e4:	75 14                	jne    108fa <mbedtls_internal_ripemd160_process+0x16ba>
   108e6:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   108ed:	31 c0                	xor    %eax,%eax
   108ef:	5b                   	pop    %rbx
   108f0:	5d                   	pop    %rbp
   108f1:	41 5c                	pop    %r12
   108f3:	41 5d                	pop    %r13
   108f5:	41 5e                	pop    %r14
   108f7:	41 5f                	pop    %r15
   108f9:	c3                   	retq   
   108fa:	e8 71 39 ff ff       	callq  4270 <__stack_chk_fail@plt>
   108ff:	90                   	nop

0000000000010900 <mbedtls_ripemd160_update.part.0>:
   10900:	41 56                	push   %r14
   10902:	41 55                	push   %r13
   10904:	41 54                	push   %r12
   10906:	49 89 fc             	mov    %rdi,%r12
   10909:	55                   	push   %rbp
   1090a:	48 89 f5             	mov    %rsi,%rbp
   1090d:	53                   	push   %rbx
   1090e:	8b 07                	mov    (%rdi),%eax
   10910:	48 89 d3             	mov    %rdx,%rbx
   10913:	ba 40 00 00 00       	mov    $0x40,%edx
   10918:	41 89 c5             	mov    %eax,%r13d
   1091b:	41 83 e5 3f          	and    $0x3f,%r13d
   1091f:	44 29 ea             	sub    %r13d,%edx
   10922:	01 d8                	add    %ebx,%eax
   10924:	89 07                	mov    %eax,(%rdi)
   10926:	41 89 d6             	mov    %edx,%r14d
   10929:	73 04                	jae    1092f <mbedtls_ripemd160_update.part.0+0x2f>
   1092b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   1092f:	45 85 ed             	test   %r13d,%r13d
   10932:	74 05                	je     10939 <mbedtls_ripemd160_update.part.0+0x39>
   10934:	49 39 de             	cmp    %rbx,%r14
   10937:	76 37                	jbe    10970 <mbedtls_ripemd160_update.part.0+0x70>
   10939:	48 83 fb 3f          	cmp    $0x3f,%rbx
   1093d:	77 17                	ja     10956 <mbedtls_ripemd160_update.part.0+0x56>
   1093f:	eb 7f                	jmp    109c0 <mbedtls_ripemd160_update.part.0+0xc0>
   10941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10948:	48 83 eb 40          	sub    $0x40,%rbx
   1094c:	48 83 c5 40          	add    $0x40,%rbp
   10950:	48 83 fb 3f          	cmp    $0x3f,%rbx
   10954:	76 6a                	jbe    109c0 <mbedtls_ripemd160_update.part.0+0xc0>
   10956:	48 89 ee             	mov    %rbp,%rsi
   10959:	4c 89 e7             	mov    %r12,%rdi
   1095c:	e8 df e8 ff ff       	callq  f240 <mbedtls_internal_ripemd160_process>
   10961:	85 c0                	test   %eax,%eax
   10963:	74 e3                	je     10948 <mbedtls_ripemd160_update.part.0+0x48>
   10965:	5b                   	pop    %rbx
   10966:	5d                   	pop    %rbp
   10967:	41 5c                	pop    %r12
   10969:	41 5d                	pop    %r13
   1096b:	41 5e                	pop    %r14
   1096d:	c3                   	retq   
   1096e:	66 90                	xchg   %ax,%ax
   10970:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
   10975:	4d 01 c5             	add    %r8,%r13
   10978:	83 fa 08             	cmp    $0x8,%edx
   1097b:	0f 83 87 00 00 00    	jae    10a08 <mbedtls_ripemd160_update.part.0+0x108>
   10981:	f6 c2 04             	test   $0x4,%dl
   10984:	0f 85 19 01 00 00    	jne    10aa3 <mbedtls_ripemd160_update.part.0+0x1a3>
   1098a:	85 d2                	test   %edx,%edx
   1098c:	74 11                	je     1099f <mbedtls_ripemd160_update.part.0+0x9f>
   1098e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   10992:	83 e2 02             	and    $0x2,%edx
   10995:	41 88 45 00          	mov    %al,0x0(%r13)
   10999:	0f 85 30 01 00 00    	jne    10acf <mbedtls_ripemd160_update.part.0+0x1cf>
   1099f:	4c 89 c6             	mov    %r8,%rsi
   109a2:	4c 89 e7             	mov    %r12,%rdi
   109a5:	e8 96 e8 ff ff       	callq  f240 <mbedtls_internal_ripemd160_process>
   109aa:	85 c0                	test   %eax,%eax
   109ac:	75 b7                	jne    10965 <mbedtls_ripemd160_update.part.0+0x65>
   109ae:	4c 01 f5             	add    %r14,%rbp
   109b1:	4c 29 f3             	sub    %r14,%rbx
   109b4:	45 31 ed             	xor    %r13d,%r13d
   109b7:	eb 80                	jmp    10939 <mbedtls_ripemd160_update.part.0+0x39>
   109b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   109c0:	31 c0                	xor    %eax,%eax
   109c2:	48 85 db             	test   %rbx,%rbx
   109c5:	74 9e                	je     10965 <mbedtls_ripemd160_update.part.0+0x65>
   109c7:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
   109cc:	89 d8                	mov    %ebx,%eax
   109ce:	83 fb 08             	cmp    $0x8,%ebx
   109d1:	0f 83 7e 00 00 00    	jae    10a55 <mbedtls_ripemd160_update.part.0+0x155>
   109d7:	83 e3 04             	and    $0x4,%ebx
   109da:	0f 85 d9 00 00 00    	jne    10ab9 <mbedtls_ripemd160_update.part.0+0x1b9>
   109e0:	85 c0                	test   %eax,%eax
   109e2:	74 16                	je     109fa <mbedtls_ripemd160_update.part.0+0xfa>
   109e4:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   109e8:	88 11                	mov    %dl,(%rcx)
   109ea:	a8 02                	test   $0x2,%al
   109ec:	74 0c                	je     109fa <mbedtls_ripemd160_update.part.0+0xfa>
   109ee:	89 c2                	mov    %eax,%edx
   109f0:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   109f5:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   109fa:	31 c0                	xor    %eax,%eax
   109fc:	5b                   	pop    %rbx
   109fd:	5d                   	pop    %rbp
   109fe:	41 5c                	pop    %r12
   10a00:	41 5d                	pop    %r13
   10a02:	41 5e                	pop    %r14
   10a04:	c3                   	retq   
   10a05:	0f 1f 00             	nopl   (%rax)
   10a08:	48 8b 45 00          	mov    0x0(%rbp),%rax
   10a0c:	49 8d 75 08          	lea    0x8(%r13),%rsi
   10a10:	49 89 e9             	mov    %rbp,%r9
   10a13:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   10a17:	49 89 45 00          	mov    %rax,0x0(%r13)
   10a1b:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
   10a20:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
   10a25:	49 29 f5             	sub    %rsi,%r13
   10a28:	44 01 ea             	add    %r13d,%edx
   10a2b:	4d 29 e9             	sub    %r13,%r9
   10a2e:	83 e2 f8             	and    $0xfffffff8,%edx
   10a31:	83 fa 08             	cmp    $0x8,%edx
   10a34:	0f 82 65 ff ff ff    	jb     1099f <mbedtls_ripemd160_update.part.0+0x9f>
   10a3a:	83 e2 f8             	and    $0xfffffff8,%edx
   10a3d:	31 c0                	xor    %eax,%eax
   10a3f:	89 c1                	mov    %eax,%ecx
   10a41:	83 c0 08             	add    $0x8,%eax
   10a44:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   10a48:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   10a4c:	39 d0                	cmp    %edx,%eax
   10a4e:	72 ef                	jb     10a3f <mbedtls_ripemd160_update.part.0+0x13f>
   10a50:	e9 4a ff ff ff       	jmpq   1099f <mbedtls_ripemd160_update.part.0+0x9f>
   10a55:	48 8b 45 00          	mov    0x0(%rbp),%rax
   10a59:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   10a5d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   10a61:	48 89 01             	mov    %rax,(%rcx)
   10a64:	89 d8                	mov    %ebx,%eax
   10a66:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
   10a6b:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   10a70:	48 29 f1             	sub    %rsi,%rcx
   10a73:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   10a76:	48 29 cd             	sub    %rcx,%rbp
   10a79:	83 e0 f8             	and    $0xfffffff8,%eax
   10a7c:	83 f8 08             	cmp    $0x8,%eax
   10a7f:	0f 82 75 ff ff ff    	jb     109fa <mbedtls_ripemd160_update.part.0+0xfa>
   10a85:	83 e0 f8             	and    $0xfffffff8,%eax
   10a88:	31 d2                	xor    %edx,%edx
   10a8a:	89 d1                	mov    %edx,%ecx
   10a8c:	83 c2 08             	add    $0x8,%edx
   10a8f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   10a94:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   10a98:	39 c2                	cmp    %eax,%edx
   10a9a:	72 ee                	jb     10a8a <mbedtls_ripemd160_update.part.0+0x18a>
   10a9c:	31 c0                	xor    %eax,%eax
   10a9e:	e9 59 ff ff ff       	jmpq   109fc <mbedtls_ripemd160_update.part.0+0xfc>
   10aa3:	8b 45 00             	mov    0x0(%rbp),%eax
   10aa6:	41 89 45 00          	mov    %eax,0x0(%r13)
   10aaa:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
   10aaf:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
   10ab4:	e9 e6 fe ff ff       	jmpq   1099f <mbedtls_ripemd160_update.part.0+0x9f>
   10ab9:	8b 55 00             	mov    0x0(%rbp),%edx
   10abc:	89 11                	mov    %edx,(%rcx)
   10abe:	89 c2                	mov    %eax,%edx
   10ac0:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   10ac4:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   10ac8:	31 c0                	xor    %eax,%eax
   10aca:	e9 2d ff ff ff       	jmpq   109fc <mbedtls_ripemd160_update.part.0+0xfc>
   10acf:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
   10ad5:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
   10adb:	e9 bf fe ff ff       	jmpq   1099f <mbedtls_ripemd160_update.part.0+0x9f>

0000000000010ae0 <mbedtls_ripemd160_update>:
   10ae0:	f3 0f 1e fa          	endbr64 
   10ae4:	48 85 d2             	test   %rdx,%rdx
   10ae7:	74 07                	je     10af0 <mbedtls_ripemd160_update+0x10>
   10ae9:	e9 12 fe ff ff       	jmpq   10900 <mbedtls_ripemd160_update.part.0>
   10aee:	66 90                	xchg   %ax,%ax
   10af0:	31 c0                	xor    %eax,%eax
   10af2:	c3                   	retq   
   10af3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10afa:	00 00 00 00 
   10afe:	66 90                	xchg   %ax,%ax

0000000000010b00 <mbedtls_ripemd160_finish>:
   10b00:	f3 0f 1e fa          	endbr64 
   10b04:	55                   	push   %rbp
   10b05:	48 89 f5             	mov    %rsi,%rbp
   10b08:	53                   	push   %rbx
   10b09:	48 89 fb             	mov    %rdi,%rbx
   10b0c:	48 83 ec 18          	sub    $0x18,%rsp
   10b10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10b17:	00 00 
   10b19:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10b1e:	31 c0                	xor    %eax,%eax
   10b20:	8b 07                	mov    (%rdi),%eax
   10b22:	8b 7f 04             	mov    0x4(%rdi),%edi
   10b25:	89 c1                	mov    %eax,%ecx
   10b27:	8d 14 fd 00 00 00 00 	lea    0x0(,%rdi,8),%edx
   10b2e:	c1 e9 1d             	shr    $0x1d,%ecx
   10b31:	09 ca                	or     %ecx,%edx
   10b33:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
   10b3a:	83 e0 3f             	and    $0x3f,%eax
   10b3d:	89 0c 24             	mov    %ecx,(%rsp)
   10b40:	89 54 24 04          	mov    %edx,0x4(%rsp)
   10b44:	83 f8 37             	cmp    $0x37,%eax
   10b47:	77 37                	ja     10b80 <mbedtls_ripemd160_finish+0x80>
   10b49:	ba 38 00 00 00       	mov    $0x38,%edx
   10b4e:	29 c2                	sub    %eax,%edx
   10b50:	48 8d 35 49 53 01 00 	lea    0x15349(%rip),%rsi        # 25ea0 <ripemd160_padding>
   10b57:	48 89 df             	mov    %rbx,%rdi
   10b5a:	e8 a1 fd ff ff       	callq  10900 <mbedtls_ripemd160_update.part.0>
   10b5f:	85 c0                	test   %eax,%eax
   10b61:	74 2d                	je     10b90 <mbedtls_ripemd160_finish+0x90>
   10b63:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   10b68:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   10b6f:	00 00 
   10b71:	75 51                	jne    10bc4 <mbedtls_ripemd160_finish+0xc4>
   10b73:	48 83 c4 18          	add    $0x18,%rsp
   10b77:	5b                   	pop    %rbx
   10b78:	5d                   	pop    %rbp
   10b79:	c3                   	retq   
   10b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10b80:	ba 78 00 00 00       	mov    $0x78,%edx
   10b85:	29 c2                	sub    %eax,%edx
   10b87:	eb c7                	jmp    10b50 <mbedtls_ripemd160_finish+0x50>
   10b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b90:	48 89 e6             	mov    %rsp,%rsi
   10b93:	ba 08 00 00 00       	mov    $0x8,%edx
   10b98:	48 89 df             	mov    %rbx,%rdi
   10b9b:	e8 60 fd ff ff       	callq  10900 <mbedtls_ripemd160_update.part.0>
   10ba0:	85 c0                	test   %eax,%eax
   10ba2:	75 bf                	jne    10b63 <mbedtls_ripemd160_finish+0x63>
   10ba4:	8b 53 08             	mov    0x8(%rbx),%edx
   10ba7:	89 55 00             	mov    %edx,0x0(%rbp)
   10baa:	8b 53 0c             	mov    0xc(%rbx),%edx
   10bad:	89 55 04             	mov    %edx,0x4(%rbp)
   10bb0:	8b 53 10             	mov    0x10(%rbx),%edx
   10bb3:	89 55 08             	mov    %edx,0x8(%rbp)
   10bb6:	8b 53 14             	mov    0x14(%rbx),%edx
   10bb9:	89 55 0c             	mov    %edx,0xc(%rbp)
   10bbc:	8b 53 18             	mov    0x18(%rbx),%edx
   10bbf:	89 55 10             	mov    %edx,0x10(%rbp)
   10bc2:	eb 9f                	jmp    10b63 <mbedtls_ripemd160_finish+0x63>
   10bc4:	e8 a7 36 ff ff       	callq  4270 <__stack_chk_fail@plt>
   10bc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010bd0 <mbedtls_ripemd160>:
   10bd0:	f3 0f 1e fa          	endbr64 
   10bd4:	41 55                	push   %r13
   10bd6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10bda:	41 54                	push   %r12
   10bdc:	55                   	push   %rbp
   10bdd:	48 89 d5             	mov    %rdx,%rbp
   10be0:	48 83 ec 70          	sub    $0x70,%rsp
   10be4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10beb:	00 00 
   10bed:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   10bf2:	31 c0                	xor    %eax,%eax
   10bf4:	49 89 e5             	mov    %rsp,%r13
   10bf7:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   10bfc:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   10c03:	ab cd ef 
   10c06:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10c0b:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   10c12:	54 32 10 
   10c15:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
   10c1c:	00 
   10c1d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   10c24:	00 
   10c25:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10c2a:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
   10c31:	c3 
   10c32:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   10c37:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   10c3c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   10c41:	48 85 f6             	test   %rsi,%rsi
   10c44:	74 15                	je     10c5b <mbedtls_ripemd160+0x8b>
   10c46:	48 89 f2             	mov    %rsi,%rdx
   10c49:	48 89 fe             	mov    %rdi,%rsi
   10c4c:	4c 89 ef             	mov    %r13,%rdi
   10c4f:	e8 ac fc ff ff       	callq  10900 <mbedtls_ripemd160_update.part.0>
   10c54:	41 89 c4             	mov    %eax,%r12d
   10c57:	85 c0                	test   %eax,%eax
   10c59:	75 0e                	jne    10c69 <mbedtls_ripemd160+0x99>
   10c5b:	48 89 ee             	mov    %rbp,%rsi
   10c5e:	4c 89 ef             	mov    %r13,%rdi
   10c61:	e8 9a fe ff ff       	callq  10b00 <mbedtls_ripemd160_finish>
   10c66:	41 89 c4             	mov    %eax,%r12d
   10c69:	be 5c 00 00 00       	mov    $0x5c,%esi
   10c6e:	4c 89 ef             	mov    %r13,%rdi
   10c71:	e8 3a e4 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   10c76:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   10c7b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10c82:	00 00 
   10c84:	75 0d                	jne    10c93 <mbedtls_ripemd160+0xc3>
   10c86:	48 83 c4 70          	add    $0x70,%rsp
   10c8a:	44 89 e0             	mov    %r12d,%eax
   10c8d:	5d                   	pop    %rbp
   10c8e:	41 5c                	pop    %r12
   10c90:	41 5d                	pop    %r13
   10c92:	c3                   	retq   
   10c93:	e8 d8 35 ff ff       	callq  4270 <__stack_chk_fail@plt>
   10c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10c9f:	00 

0000000000010ca0 <mbedtls_ripemd160_self_test>:
   10ca0:	f3 0f 1e fa          	endbr64 
   10ca4:	41 57                	push   %r15
   10ca6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10caa:	41 56                	push   %r14
   10cac:	4c 8d 35 4d 4f 01 00 	lea    0x14f4d(%rip),%r14        # 25c00 <ripemd160_test_str>
   10cb3:	41 55                	push   %r13
   10cb5:	41 89 fd             	mov    %edi,%r13d
   10cb8:	41 54                	push   %r12
   10cba:	45 31 e4             	xor    %r12d,%r12d
   10cbd:	55                   	push   %rbp
   10cbe:	bd 01 00 00 00       	mov    $0x1,%ebp
   10cc3:	53                   	push   %rbx
   10cc4:	48 8d 1d 55 4e 01 00 	lea    0x14e55(%rip),%rbx        # 25b20 <ripemd160_test_md>
   10ccb:	48 83 ec 28          	sub    $0x28,%rsp
   10ccf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10cd6:	00 00 
   10cd8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10cdd:	31 c0                	xor    %eax,%eax
   10cdf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   10ce6:	00 
   10ce7:	49 89 e7             	mov    %rsp,%r15
   10cea:	0f 29 04 24          	movaps %xmm0,(%rsp)
   10cee:	66 90                	xchg   %ax,%ax
   10cf0:	45 85 ed             	test   %r13d,%r13d
   10cf3:	75 6b                	jne    10d60 <mbedtls_ripemd160_self_test+0xc0>
   10cf5:	4c 89 e6             	mov    %r12,%rsi
   10cf8:	4c 89 fa             	mov    %r15,%rdx
   10cfb:	4c 89 f7             	mov    %r14,%rdi
   10cfe:	e8 cd fe ff ff       	callq  10bd0 <mbedtls_ripemd160>
   10d03:	41 89 c4             	mov    %eax,%r12d
   10d06:	85 c0                	test   %eax,%eax
   10d08:	75 22                	jne    10d2c <mbedtls_ripemd160_self_test+0x8c>
   10d0a:	49 8b 07             	mov    (%r15),%rax
   10d0d:	49 8b 57 08          	mov    0x8(%r15),%rdx
   10d11:	48 33 03             	xor    (%rbx),%rax
   10d14:	48 33 53 08          	xor    0x8(%rbx),%rdx
   10d18:	48 09 c2             	or     %rax,%rdx
   10d1b:	75 09                	jne    10d26 <mbedtls_ripemd160_self_test+0x86>
   10d1d:	8b 43 10             	mov    0x10(%rbx),%eax
   10d20:	41 39 47 10          	cmp    %eax,0x10(%r15)
   10d24:	74 5a                	je     10d80 <mbedtls_ripemd160_self_test+0xe0>
   10d26:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   10d2c:	45 85 ed             	test   %r13d,%r13d
   10d2f:	0f 85 ab 00 00 00    	jne    10de0 <mbedtls_ripemd160_self_test+0x140>
   10d35:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10d3a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10d41:	00 00 
   10d43:	0f 85 a8 00 00 00    	jne    10df1 <mbedtls_ripemd160_self_test+0x151>
   10d49:	48 83 c4 28          	add    $0x28,%rsp
   10d4d:	44 89 e0             	mov    %r12d,%eax
   10d50:	5b                   	pop    %rbx
   10d51:	5d                   	pop    %rbp
   10d52:	41 5c                	pop    %r12
   10d54:	41 5d                	pop    %r13
   10d56:	41 5e                	pop    %r14
   10d58:	41 5f                	pop    %r15
   10d5a:	c3                   	retq   
   10d5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10d60:	89 ea                	mov    %ebp,%edx
   10d62:	48 8d 35 8e 4d 01 00 	lea    0x14d8e(%rip),%rsi        # 25af7 <md5_test_buf+0x237>
   10d69:	bf 01 00 00 00       	mov    $0x1,%edi
   10d6e:	31 c0                	xor    %eax,%eax
   10d70:	e8 db 35 ff ff       	callq  4350 <__printf_chk@plt>
   10d75:	e9 7b ff ff ff       	jmpq   10cf5 <mbedtls_ripemd160_self_test+0x55>
   10d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10d80:	45 85 ed             	test   %r13d,%r13d
   10d83:	74 0c                	je     10d91 <mbedtls_ripemd160_self_test+0xf1>
   10d85:	48 8d 3d 3b d3 00 00 	lea    0xd33b(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   10d8c:	e8 7f 34 ff ff       	callq  4210 <puts@plt>
   10d91:	48 83 c3 14          	add    $0x14,%rbx
   10d95:	49 83 c6 51          	add    $0x51,%r14
   10d99:	48 83 fd 08          	cmp    $0x8,%rbp
   10d9d:	74 19                	je     10db8 <mbedtls_ripemd160_self_test+0x118>
   10d9f:	48 8d 05 1a 4e 01 00 	lea    0x14e1a(%rip),%rax        # 25bc0 <ripemd160_test_strlen>
   10da6:	4c 8b 24 e8          	mov    (%rax,%rbp,8),%r12
   10daa:	48 83 c5 01          	add    $0x1,%rbp
   10dae:	e9 3d ff ff ff       	jmpq   10cf0 <mbedtls_ripemd160_self_test+0x50>
   10db3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10db8:	45 85 ed             	test   %r13d,%r13d
   10dbb:	75 0b                	jne    10dc8 <mbedtls_ripemd160_self_test+0x128>
   10dbd:	45 31 e4             	xor    %r12d,%r12d
   10dc0:	e9 70 ff ff ff       	jmpq   10d35 <mbedtls_ripemd160_self_test+0x95>
   10dc5:	0f 1f 00             	nopl   (%rax)
   10dc8:	bf 0a 00 00 00       	mov    $0xa,%edi
   10dcd:	e8 2e 34 ff ff       	callq  4200 <putchar@plt>
   10dd2:	e9 5e ff ff ff       	jmpq   10d35 <mbedtls_ripemd160_self_test+0x95>
   10dd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10dde:	00 00 
   10de0:	48 8d 3d 36 52 01 00 	lea    0x15236(%rip),%rdi        # 2601d <sha1_test_buf+0xbd>
   10de7:	e8 24 34 ff ff       	callq  4210 <puts@plt>
   10dec:	e9 44 ff ff ff       	jmpq   10d35 <mbedtls_ripemd160_self_test+0x95>
   10df1:	e8 7a 34 ff ff       	callq  4270 <__stack_chk_fail@plt>
   10df6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10dfd:	00 00 00 

0000000000010e00 <mbedtls_sha1_init>:
   10e00:	f3 0f 1e fa          	endbr64 
   10e04:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   10e0b:	48 89 f9             	mov    %rdi,%rcx
   10e0e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   10e12:	31 c0                	xor    %eax,%eax
   10e14:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
   10e1b:	00 
   10e1c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   10e20:	48 29 f9             	sub    %rdi,%rcx
   10e23:	83 c1 5c             	add    $0x5c,%ecx
   10e26:	c1 e9 03             	shr    $0x3,%ecx
   10e29:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10e2c:	c3                   	retq   
   10e2d:	0f 1f 00             	nopl   (%rax)

0000000000010e30 <mbedtls_sha1_free>:
   10e30:	f3 0f 1e fa          	endbr64 
   10e34:	48 85 ff             	test   %rdi,%rdi
   10e37:	74 0f                	je     10e48 <mbedtls_sha1_free+0x18>
   10e39:	be 5c 00 00 00       	mov    $0x5c,%esi
   10e3e:	e9 6d e2 ff ff       	jmpq   f0b0 <mbedtls_platform_zeroize>
   10e43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e48:	c3                   	retq   
   10e49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010e50 <mbedtls_sha1_clone>:
   10e50:	f3 0f 1e fa          	endbr64 
   10e54:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   10e58:	0f 11 07             	movups %xmm0,(%rdi)
   10e5b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   10e60:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   10e64:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   10e69:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   10e6d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   10e72:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   10e76:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   10e7b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   10e7f:	48 8b 46 50          	mov    0x50(%rsi),%rax
   10e83:	48 89 47 50          	mov    %rax,0x50(%rdi)
   10e87:	8b 46 58             	mov    0x58(%rsi),%eax
   10e8a:	89 47 58             	mov    %eax,0x58(%rdi)
   10e8d:	c3                   	retq   
   10e8e:	66 90                	xchg   %ax,%ax

0000000000010e90 <mbedtls_sha1_starts>:
   10e90:	f3 0f 1e fa          	endbr64 
   10e94:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   10e9b:	ab cd ef 
   10e9e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   10ea5:	48 89 47 08          	mov    %rax,0x8(%rdi)
   10ea9:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   10eb0:	54 32 10 
   10eb3:	48 89 47 10          	mov    %rax,0x10(%rdi)
   10eb7:	31 c0                	xor    %eax,%eax
   10eb9:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
   10ec0:	c3                   	retq   
   10ec1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10ec8:	00 00 00 00 
   10ecc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010ed0 <mbedtls_internal_sha1_process>:
   10ed0:	f3 0f 1e fa          	endbr64 
   10ed4:	41 57                	push   %r15
   10ed6:	41 56                	push   %r14
   10ed8:	41 55                	push   %r13
   10eda:	41 54                	push   %r12
   10edc:	49 89 f4             	mov    %rsi,%r12
   10edf:	55                   	push   %rbp
   10ee0:	53                   	push   %rbx
   10ee1:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   10ee8:	45 8b 44 24 24       	mov    0x24(%r12),%r8d
   10eed:	44 8b 56 04          	mov    0x4(%rsi),%r10d
   10ef1:	41 8b 5c 24 38       	mov    0x38(%r12),%ebx
   10ef6:	45 8b 5c 24 18       	mov    0x18(%r12),%r11d
   10efb:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   10f00:	45 89 c7             	mov    %r8d,%r15d
   10f03:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
   10f08:	45 8b 6c 24 2c       	mov    0x2c(%r12),%r13d
   10f0d:	45 89 d6             	mov    %r10d,%r14d
   10f10:	41 0f cb             	bswap  %r11d
   10f13:	44 8b 0e             	mov    (%rsi),%r9d
   10f16:	8b 7e 08             	mov    0x8(%rsi),%edi
   10f19:	41 0f ce             	bswap  %r14d
   10f1c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10f23:	00 00 
   10f25:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   10f2c:	00 
   10f2d:	31 c0                	xor    %eax,%eax
   10f2f:	41 8b 44 24 20       	mov    0x20(%r12),%eax
   10f34:	45 8b 54 24 1c       	mov    0x1c(%r12),%r10d
   10f39:	44 89 5c 24 14       	mov    %r11d,0x14(%rsp)
   10f3e:	41 8b 6c 24 34       	mov    0x34(%r12),%ebp
   10f43:	41 89 db             	mov    %ebx,%r11d
   10f46:	8b 76 0c             	mov    0xc(%rsi),%esi
   10f49:	41 0f cd             	bswap  %r13d
   10f4c:	0f c8                	bswap  %eax
   10f4e:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   10f52:	44 89 c0             	mov    %r8d,%eax
   10f55:	41 0f ca             	bswap  %r10d
   10f58:	45 8b 44 24 30       	mov    0x30(%r12),%r8d
   10f5d:	41 8b 4c 24 10       	mov    0x10(%r12),%ecx
   10f62:	0f cd                	bswap  %ebp
   10f64:	41 0f cb             	bswap  %r11d
   10f67:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   10f6b:	41 0f c9             	bswap  %r9d
   10f6e:	0f cf                	bswap  %edi
   10f70:	0f ce                	bswap  %esi
   10f72:	41 8b 54 24 14       	mov    0x14(%r12),%edx
   10f77:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
   10f7c:	41 0f c8             	bswap  %r8d
   10f7f:	0f c9                	bswap  %ecx
   10f81:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
   10f86:	41 0f cf             	bswap  %r15d
   10f89:	0f c8                	bswap  %eax
   10f8b:	44 89 1c 24          	mov    %r11d,(%rsp)
   10f8f:	0f ca                	bswap  %edx
   10f91:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   10f96:	45 8b 44 24 3c       	mov    0x3c(%r12),%r8d
   10f9b:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   10fa0:	89 44 24 28          	mov    %eax,0x28(%rsp)
   10fa4:	41 0f c8             	bswap  %r8d
   10fa7:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
   10fac:	44 8b 53 14          	mov    0x14(%rbx),%r10d
   10fb0:	44 8b 63 10          	mov    0x10(%rbx),%r12d
   10fb4:	44 8b 5b 08          	mov    0x8(%rbx),%r11d
   10fb8:	8b 6b 0c             	mov    0xc(%rbx),%ebp
   10fbb:	45 89 d5             	mov    %r10d,%r13d
   10fbe:	44 8b 53 18          	mov    0x18(%rbx),%r10d
   10fc2:	44 89 6c 24 4c       	mov    %r13d,0x4c(%rsp)
   10fc7:	44 89 54 24 38       	mov    %r10d,0x38(%rsp)
   10fcc:	45 89 e2             	mov    %r12d,%r10d
   10fcf:	8b 5c 24 38          	mov    0x38(%rsp),%ebx
   10fd3:	45 31 ea             	xor    %r13d,%r10d
   10fd6:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
   10fda:	45 89 d0             	mov    %r10d,%r8d
   10fdd:	45 89 da             	mov    %r11d,%r10d
   10fe0:	41 21 e8             	and    %ebp,%r8d
   10fe3:	41 c1 c2 05          	rol    $0x5,%r10d
   10fe7:	45 31 e8             	xor    %r13d,%r8d
   10fea:	46 8d 94 13 99 79 82 	lea    0x5a827999(%rbx,%r10,1),%r10d
   10ff1:	5a 
   10ff2:	89 eb                	mov    %ebp,%ebx
   10ff4:	44 89 dd             	mov    %r11d,%ebp
   10ff7:	c1 cb 02             	ror    $0x2,%ebx
   10ffa:	45 01 d0             	add    %r10d,%r8d
   10ffd:	45 89 e2             	mov    %r12d,%r10d
   11000:	89 6c 24 40          	mov    %ebp,0x40(%rsp)
   11004:	41 31 da             	xor    %ebx,%r10d
   11007:	45 01 c8             	add    %r9d,%r8d
   1100a:	45 21 da             	and    %r11d,%r10d
   1100d:	45 89 e3             	mov    %r12d,%r11d
   11010:	45 31 e2             	xor    %r12d,%r10d
   11013:	41 89 dc             	mov    %ebx,%r12d
   11016:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   1101b:	46 8d 9c 1f 99 79 82 	lea    0x5a827999(%rdi,%r11,1),%r11d
   11022:	5a 
   11023:	47 8d ac 15 99 79 82 	lea    0x5a827999(%r13,%r10,1),%r13d
   1102a:	5a 
   1102b:	45 89 c2             	mov    %r8d,%r10d
   1102e:	45 01 f5             	add    %r14d,%r13d
   11031:	41 c1 c2 05          	rol    $0x5,%r10d
   11035:	45 01 d5             	add    %r10d,%r13d
   11038:	41 89 ea             	mov    %ebp,%r10d
   1103b:	41 c1 ca 02          	ror    $0x2,%r10d
   1103f:	45 31 d4             	xor    %r10d,%r12d
   11042:	45 21 c4             	and    %r8d,%r12d
   11045:	41 c1 c8 02          	ror    $0x2,%r8d
   11049:	41 31 dc             	xor    %ebx,%r12d
   1104c:	44 89 c5             	mov    %r8d,%ebp
   1104f:	8d 9c 1e 99 79 82 5a 	lea    0x5a827999(%rsi,%rbx,1),%ebx
   11056:	45 01 dc             	add    %r11d,%r12d
   11059:	45 89 eb             	mov    %r13d,%r11d
   1105c:	41 c1 c3 05          	rol    $0x5,%r11d
   11060:	45 01 dc             	add    %r11d,%r12d
   11063:	45 89 d3             	mov    %r10d,%r11d
   11066:	45 31 c3             	xor    %r8d,%r11d
   11069:	45 21 eb             	and    %r13d,%r11d
   1106c:	41 c1 cd 02          	ror    $0x2,%r13d
   11070:	45 31 d3             	xor    %r10d,%r11d
   11073:	44 31 ed             	xor    %r13d,%ebp
   11076:	46 8d 94 11 99 79 82 	lea    0x5a827999(%rcx,%r10,1),%r10d
   1107d:	5a 
   1107e:	41 01 db             	add    %ebx,%r11d
   11081:	44 89 e3             	mov    %r12d,%ebx
   11084:	44 21 e5             	and    %r12d,%ebp
   11087:	c1 c3 05             	rol    $0x5,%ebx
   1108a:	41 01 db             	add    %ebx,%r11d
   1108d:	44 31 c5             	xor    %r8d,%ebp
   11090:	41 c1 cc 02          	ror    $0x2,%r12d
   11094:	46 8d 84 02 99 79 82 	lea    0x5a827999(%rdx,%r8,1),%r8d
   1109b:	5a 
   1109c:	44 01 d5             	add    %r10d,%ebp
   1109f:	45 89 da             	mov    %r11d,%r10d
   110a2:	41 c1 c2 05          	rol    $0x5,%r10d
   110a6:	44 01 d5             	add    %r10d,%ebp
   110a9:	45 89 ea             	mov    %r13d,%r10d
   110ac:	45 31 e2             	xor    %r12d,%r10d
   110af:	45 21 da             	and    %r11d,%r10d
   110b2:	41 c1 cb 02          	ror    $0x2,%r11d
   110b6:	45 31 ea             	xor    %r13d,%r10d
   110b9:	45 01 c2             	add    %r8d,%r10d
   110bc:	41 89 e8             	mov    %ebp,%r8d
   110bf:	41 c1 c0 05          	rol    $0x5,%r8d
   110c3:	45 01 c2             	add    %r8d,%r10d
   110c6:	45 89 e0             	mov    %r12d,%r8d
   110c9:	45 31 d8             	xor    %r11d,%r8d
   110cc:	44 89 c3             	mov    %r8d,%ebx
   110cf:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   110d4:	21 eb                	and    %ebp,%ebx
   110d6:	c1 cd 02             	ror    $0x2,%ebp
   110d9:	44 31 e3             	xor    %r12d,%ebx
   110dc:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
   110e3:	5a 
   110e4:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   110e9:	44 01 c3             	add    %r8d,%ebx
   110ec:	45 89 d0             	mov    %r10d,%r8d
   110ef:	41 c1 c0 05          	rol    $0x5,%r8d
   110f3:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
   110fa:	5a 
   110fb:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   11100:	44 01 c3             	add    %r8d,%ebx
   11103:	45 89 d8             	mov    %r11d,%r8d
   11106:	41 31 e8             	xor    %ebp,%r8d
   11109:	45 21 d0             	and    %r10d,%r8d
   1110c:	41 c1 ca 02          	ror    $0x2,%r10d
   11110:	45 31 d8             	xor    %r11d,%r8d
   11113:	47 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%r11,1),%r11d
   1111a:	5a 
   1111b:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   11120:	45 01 e0             	add    %r12d,%r8d
   11123:	41 89 dc             	mov    %ebx,%r12d
   11126:	41 c1 c4 05          	rol    $0x5,%r12d
   1112a:	45 01 e0             	add    %r12d,%r8d
   1112d:	41 89 ec             	mov    %ebp,%r12d
   11130:	45 31 d4             	xor    %r10d,%r12d
   11133:	41 21 dc             	and    %ebx,%r12d
   11136:	41 31 ec             	xor    %ebp,%r12d
   11139:	41 8d ac 2f 99 79 82 	lea    0x5a827999(%r15,%rbp,1),%ebp
   11140:	5a 
   11141:	45 01 dc             	add    %r11d,%r12d
   11144:	45 89 c3             	mov    %r8d,%r11d
   11147:	41 c1 c3 05          	rol    $0x5,%r11d
   1114b:	45 01 dc             	add    %r11d,%r12d
   1114e:	c1 cb 02             	ror    $0x2,%ebx
   11151:	45 89 d3             	mov    %r10d,%r11d
   11154:	41 31 db             	xor    %ebx,%r11d
   11157:	45 21 c3             	and    %r8d,%r11d
   1115a:	41 c1 c8 02          	ror    $0x2,%r8d
   1115e:	45 31 d3             	xor    %r10d,%r11d
   11161:	46 8d 94 10 99 79 82 	lea    0x5a827999(%rax,%r10,1),%r10d
   11168:	5a 
   11169:	41 01 eb             	add    %ebp,%r11d
   1116c:	44 89 e5             	mov    %r12d,%ebp
   1116f:	c1 c5 05             	rol    $0x5,%ebp
   11172:	41 01 eb             	add    %ebp,%r11d
   11175:	89 dd                	mov    %ebx,%ebp
   11177:	44 31 c5             	xor    %r8d,%ebp
   1117a:	44 21 e5             	and    %r12d,%ebp
   1117d:	41 c1 cc 02          	ror    $0x2,%r12d
   11181:	31 dd                	xor    %ebx,%ebp
   11183:	41 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%rbx,1),%ebx
   1118a:	5a 
   1118b:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   11190:	44 01 d5             	add    %r10d,%ebp
   11193:	45 89 da             	mov    %r11d,%r10d
   11196:	41 c1 c2 05          	rol    $0x5,%r10d
   1119a:	44 01 d5             	add    %r10d,%ebp
   1119d:	45 89 c2             	mov    %r8d,%r10d
   111a0:	45 31 e2             	xor    %r12d,%r10d
   111a3:	89 e8                	mov    %ebp,%eax
   111a5:	45 21 da             	and    %r11d,%r10d
   111a8:	c1 c0 05             	rol    $0x5,%eax
   111ab:	45 31 c2             	xor    %r8d,%r10d
   111ae:	41 c1 cb 02          	ror    $0x2,%r11d
   111b2:	47 8d 84 05 99 79 82 	lea    0x5a827999(%r13,%r8,1),%r8d
   111b9:	5a 
   111ba:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
   111bf:	41 01 da             	add    %ebx,%r10d
   111c2:	41 01 c2             	add    %eax,%r10d
   111c5:	44 89 e0             	mov    %r12d,%eax
   111c8:	44 31 d8             	xor    %r11d,%eax
   111cb:	89 c3                	mov    %eax,%ebx
   111cd:	8b 04 24             	mov    (%rsp),%eax
   111d0:	21 eb                	and    %ebp,%ebx
   111d2:	c1 cd 02             	ror    $0x2,%ebp
   111d5:	44 31 e3             	xor    %r12d,%ebx
   111d8:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
   111df:	5a 
   111e0:	44 01 c3             	add    %r8d,%ebx
   111e3:	45 89 d0             	mov    %r10d,%r8d
   111e6:	41 c1 c0 05          	rol    $0x5,%r8d
   111ea:	44 01 c3             	add    %r8d,%ebx
   111ed:	45 89 d8             	mov    %r11d,%r8d
   111f0:	41 31 e8             	xor    %ebp,%r8d
   111f3:	45 21 d0             	and    %r10d,%r8d
   111f6:	45 31 d8             	xor    %r11d,%r8d
   111f9:	46 8d 9c 18 99 79 82 	lea    0x5a827999(%rax,%r11,1),%r11d
   11200:	5a 
   11201:	8b 44 24 04          	mov    0x4(%rsp),%eax
   11205:	45 01 e0             	add    %r12d,%r8d
   11208:	41 89 dc             	mov    %ebx,%r12d
   1120b:	41 c1 ca 02          	ror    $0x2,%r10d
   1120f:	41 31 f9             	xor    %edi,%r9d
   11212:	41 c1 c4 05          	rol    $0x5,%r12d
   11216:	44 33 4c 24 1c       	xor    0x1c(%rsp),%r9d
   1121b:	41 31 f6             	xor    %esi,%r14d
   1121e:	45 01 e0             	add    %r12d,%r8d
   11221:	41 89 ec             	mov    %ebp,%r12d
   11224:	45 31 e9             	xor    %r13d,%r9d
   11227:	45 31 d4             	xor    %r10d,%r12d
   1122a:	41 d1 c1             	rol    %r9d
   1122d:	41 21 dc             	and    %ebx,%r12d
   11230:	c1 cb 02             	ror    $0x2,%ebx
   11233:	41 31 ec             	xor    %ebp,%r12d
   11236:	8d ac 28 99 79 82 5a 	lea    0x5a827999(%rax,%rbp,1),%ebp
   1123d:	45 01 dc             	add    %r11d,%r12d
   11240:	45 89 c3             	mov    %r8d,%r11d
   11243:	41 c1 c3 05          	rol    $0x5,%r11d
   11247:	45 01 dc             	add    %r11d,%r12d
   1124a:	45 89 d3             	mov    %r10d,%r11d
   1124d:	41 31 db             	xor    %ebx,%r11d
   11250:	45 21 c3             	and    %r8d,%r11d
   11253:	41 c1 c8 02          	ror    $0x2,%r8d
   11257:	45 31 d3             	xor    %r10d,%r11d
   1125a:	47 8d 94 0a 99 79 82 	lea    0x5a827999(%r10,%r9,1),%r10d
   11261:	5a 
   11262:	41 01 eb             	add    %ebp,%r11d
   11265:	44 89 e5             	mov    %r12d,%ebp
   11268:	c1 c5 05             	rol    $0x5,%ebp
   1126b:	41 01 eb             	add    %ebp,%r11d
   1126e:	89 dd                	mov    %ebx,%ebp
   11270:	44 31 c5             	xor    %r8d,%ebp
   11273:	44 21 e5             	and    %r12d,%ebp
   11276:	41 c1 cc 02          	ror    $0x2,%r12d
   1127a:	31 dd                	xor    %ebx,%ebp
   1127c:	44 01 d5             	add    %r10d,%ebp
   1127f:	45 89 da             	mov    %r11d,%r10d
   11282:	41 c1 c2 05          	rol    $0x5,%r10d
   11286:	44 01 d5             	add    %r10d,%ebp
   11289:	45 89 f2             	mov    %r14d,%r10d
   1128c:	45 31 fa             	xor    %r15d,%r10d
   1128f:	44 33 14 24          	xor    (%rsp),%r10d
   11293:	45 89 d6             	mov    %r10d,%r14d
   11296:	45 89 c2             	mov    %r8d,%r10d
   11299:	41 d1 c6             	rol    %r14d
   1129c:	45 31 e2             	xor    %r12d,%r10d
   1129f:	31 cf                	xor    %ecx,%edi
   112a1:	33 7c 24 28          	xor    0x28(%rsp),%edi
   112a5:	45 21 da             	and    %r11d,%r10d
   112a8:	44 89 f0             	mov    %r14d,%eax
   112ab:	42 8d 9c 33 99 79 82 	lea    0x5a827999(%rbx,%r14,1),%ebx
   112b2:	5a 
   112b3:	31 d6                	xor    %edx,%esi
   112b5:	45 31 c2             	xor    %r8d,%r10d
   112b8:	41 89 ee             	mov    %ebp,%r14d
   112bb:	41 c1 cb 02          	ror    $0x2,%r11d
   112bf:	33 7c 24 04          	xor    0x4(%rsp),%edi
   112c3:	41 01 da             	add    %ebx,%r10d
   112c6:	41 c1 c6 05          	rol    $0x5,%r14d
   112ca:	33 74 24 08          	xor    0x8(%rsp),%esi
   112ce:	33 4c 24 14          	xor    0x14(%rsp),%ecx
   112d2:	45 01 f2             	add    %r14d,%r10d
   112d5:	45 89 e6             	mov    %r12d,%r14d
   112d8:	d1 c7                	rol    %edi
   112da:	44 31 ce             	xor    %r9d,%esi
   112dd:	45 31 de             	xor    %r11d,%r14d
   112e0:	d1 c6                	rol    %esi
   112e2:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   112e6:	89 44 24 20          	mov    %eax,0x20(%rsp)
   112ea:	44 89 f3             	mov    %r14d,%ebx
   112ed:	45 8d 84 38 99 79 82 	lea    0x5a827999(%r8,%rdi,1),%r8d
   112f4:	5a 
   112f5:	45 89 d6             	mov    %r10d,%r14d
   112f8:	21 eb                	and    %ebp,%ebx
   112fa:	41 c1 c6 05          	rol    $0x5,%r14d
   112fe:	44 31 e3             	xor    %r12d,%ebx
   11301:	c1 cd 02             	ror    $0x2,%ebp
   11304:	45 8d a4 34 99 79 82 	lea    0x5a827999(%r12,%rsi,1),%r12d
   1130b:	5a 
   1130c:	44 01 c3             	add    %r8d,%ebx
   1130f:	44 01 f3             	add    %r14d,%ebx
   11312:	45 89 de             	mov    %r11d,%r14d
   11315:	41 31 ee             	xor    %ebp,%r14d
   11318:	45 89 f0             	mov    %r14d,%r8d
   1131b:	41 89 ee             	mov    %ebp,%r14d
   1131e:	45 21 d0             	and    %r10d,%r8d
   11321:	41 c1 ca 02          	ror    $0x2,%r10d
   11325:	45 31 d8             	xor    %r11d,%r8d
   11328:	45 01 e0             	add    %r12d,%r8d
   1132b:	41 89 dc             	mov    %ebx,%r12d
   1132e:	41 c1 c4 05          	rol    $0x5,%r12d
   11332:	45 01 e0             	add    %r12d,%r8d
   11335:	31 c1                	xor    %eax,%ecx
   11337:	33 54 24 18          	xor    0x18(%rsp),%edx
   1133b:	45 31 d6             	xor    %r10d,%r14d
   1133e:	44 31 ea             	xor    %r13d,%edx
   11341:	d1 c1                	rol    %ecx
   11343:	41 31 de             	xor    %ebx,%r14d
   11346:	31 fa                	xor    %edi,%edx
   11348:	45 8d 9c 0b a1 eb d9 	lea    0x6ed9eba1(%r11,%rcx,1),%r11d
   1134f:	6e 
   11350:	c1 cb 02             	ror    $0x2,%ebx
   11353:	d1 c2                	rol    %edx
   11355:	45 01 de             	add    %r11d,%r14d
   11358:	45 89 c3             	mov    %r8d,%r11d
   1135b:	89 d0                	mov    %edx,%eax
   1135d:	44 89 d2             	mov    %r10d,%edx
   11360:	41 c1 c3 05          	rol    $0x5,%r11d
   11364:	31 da                	xor    %ebx,%edx
   11366:	45 01 de             	add    %r11d,%r14d
   11369:	44 8d 9c 05 a1 eb d9 	lea    0x6ed9eba1(%rbp,%rax,1),%r11d
   11370:	6e 
   11371:	89 44 24 24          	mov    %eax,0x24(%rsp)
   11375:	41 89 d5             	mov    %edx,%r13d
   11378:	44 89 f2             	mov    %r14d,%edx
   1137b:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   1137f:	45 31 c5             	xor    %r8d,%r13d
   11382:	c1 c2 05             	rol    $0x5,%edx
   11385:	45 01 dd             	add    %r11d,%r13d
   11388:	44 8b 1c 24          	mov    (%rsp),%r11d
   1138c:	41 c1 c8 02          	ror    $0x2,%r8d
   11390:	41 01 d5             	add    %edx,%r13d
   11393:	8b 54 24 14          	mov    0x14(%rsp),%edx
   11397:	31 c2                	xor    %eax,%edx
   11399:	41 31 d3             	xor    %edx,%r11d
   1139c:	89 da                	mov    %ebx,%edx
   1139e:	44 31 c2             	xor    %r8d,%edx
   113a1:	41 31 f3             	xor    %esi,%r11d
   113a4:	41 d1 c3             	rol    %r11d
   113a7:	41 89 d4             	mov    %edx,%r12d
   113aa:	44 89 ea             	mov    %r13d,%edx
   113ad:	45 31 f4             	xor    %r14d,%r12d
   113b0:	47 8d 94 1a a1 eb d9 	lea    0x6ed9eba1(%r10,%r11,1),%r10d
   113b7:	6e 
   113b8:	c1 c2 05             	rol    $0x5,%edx
   113bb:	45 01 d4             	add    %r10d,%r12d
   113be:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
   113c3:	41 c1 ce 02          	ror    $0x2,%r14d
   113c7:	41 01 d4             	add    %edx,%r12d
   113ca:	44 89 c2             	mov    %r8d,%edx
   113cd:	45 31 fa             	xor    %r15d,%r10d
   113d0:	44 33 54 24 04       	xor    0x4(%rsp),%r10d
   113d5:	41 31 ca             	xor    %ecx,%r10d
   113d8:	41 d1 c2             	rol    %r10d
   113db:	44 31 f2             	xor    %r14d,%edx
   113de:	44 33 7c 24 08       	xor    0x8(%rsp),%r15d
   113e3:	89 d5                	mov    %edx,%ebp
   113e5:	42 8d 9c 13 a1 eb d9 	lea    0x6ed9eba1(%rbx,%r10,1),%ebx
   113ec:	6e 
   113ed:	44 89 e2             	mov    %r12d,%edx
   113f0:	44 31 ed             	xor    %r13d,%ebp
   113f3:	c1 c2 05             	rol    $0x5,%edx
   113f6:	01 dd                	add    %ebx,%ebp
   113f8:	41 c1 cd 02          	ror    $0x2,%r13d
   113fc:	44 89 f3             	mov    %r14d,%ebx
   113ff:	01 d5                	add    %edx,%ebp
   11401:	8b 54 24 28          	mov    0x28(%rsp),%edx
   11405:	44 31 eb             	xor    %r13d,%ebx
   11408:	44 31 e3             	xor    %r12d,%ebx
   1140b:	41 c1 cc 02          	ror    $0x2,%r12d
   1140f:	31 d0                	xor    %edx,%eax
   11411:	33 54 24 0c          	xor    0xc(%rsp),%edx
   11415:	44 31 c8             	xor    %r9d,%eax
   11418:	33 44 24 24          	xor    0x24(%rsp),%eax
   1141c:	d1 c0                	rol    %eax
   1141e:	45 8d 84 00 a1 eb d9 	lea    0x6ed9eba1(%r8,%rax,1),%r8d
   11425:	6e 
   11426:	44 01 c3             	add    %r8d,%ebx
   11429:	41 89 e8             	mov    %ebp,%r8d
   1142c:	41 c1 c0 05          	rol    $0x5,%r8d
   11430:	44 01 c3             	add    %r8d,%ebx
   11433:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
   11438:	45 31 f8             	xor    %r15d,%r8d
   1143b:	45 89 ef             	mov    %r13d,%r15d
   1143e:	45 31 d8             	xor    %r11d,%r8d
   11441:	45 31 e7             	xor    %r12d,%r15d
   11444:	41 d1 c0             	rol    %r8d
   11447:	41 31 ef             	xor    %ebp,%r15d
   1144a:	c1 cd 02             	ror    $0x2,%ebp
   1144d:	47 8d b4 06 a1 eb d9 	lea    0x6ed9eba1(%r14,%r8,1),%r14d
   11454:	6e 
   11455:	45 01 f7             	add    %r14d,%r15d
   11458:	41 89 de             	mov    %ebx,%r14d
   1145b:	41 c1 c6 05          	rol    $0x5,%r14d
   1145f:	45 01 f7             	add    %r14d,%r15d
   11462:	41 89 d6             	mov    %edx,%r14d
   11465:	41 31 fe             	xor    %edi,%r14d
   11468:	45 31 d6             	xor    %r10d,%r14d
   1146b:	41 d1 c6             	rol    %r14d
   1146e:	44 89 f2             	mov    %r14d,%edx
   11471:	45 89 e6             	mov    %r12d,%r14d
   11474:	41 31 ee             	xor    %ebp,%r14d
   11477:	45 8d ac 15 a1 eb d9 	lea    0x6ed9eba1(%r13,%rdx,1),%r13d
   1147e:	6e 
   1147f:	89 54 24 14          	mov    %edx,0x14(%rsp)
   11483:	8b 54 24 08          	mov    0x8(%rsp),%edx
   11487:	41 31 de             	xor    %ebx,%r14d
   1148a:	45 01 ee             	add    %r13d,%r14d
   1148d:	45 89 fd             	mov    %r15d,%r13d
   11490:	33 54 24 10          	xor    0x10(%rsp),%edx
   11494:	c1 cb 02             	ror    $0x2,%ebx
   11497:	41 c1 c5 05          	rol    $0x5,%r13d
   1149b:	45 01 ee             	add    %r13d,%r14d
   1149e:	41 89 d5             	mov    %edx,%r13d
   114a1:	41 31 f5             	xor    %esi,%r13d
   114a4:	41 31 c5             	xor    %eax,%r13d
   114a7:	44 89 ea             	mov    %r13d,%edx
   114aa:	41 89 ed             	mov    %ebp,%r13d
   114ad:	d1 c2                	rol    %edx
   114af:	41 31 dd             	xor    %ebx,%r13d
   114b2:	45 31 fd             	xor    %r15d,%r13d
   114b5:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
   114bc:	6e 
   114bd:	89 54 24 08          	mov    %edx,0x8(%rsp)
   114c1:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   114c5:	45 01 e5             	add    %r12d,%r13d
   114c8:	45 89 f4             	mov    %r14d,%r12d
   114cb:	33 14 24             	xor    (%rsp),%edx
   114ce:	41 c1 cf 02          	ror    $0x2,%r15d
   114d2:	41 c1 c4 05          	rol    $0x5,%r12d
   114d6:	45 01 e5             	add    %r12d,%r13d
   114d9:	41 89 d4             	mov    %edx,%r12d
   114dc:	41 31 cc             	xor    %ecx,%r12d
   114df:	45 31 c4             	xor    %r8d,%r12d
   114e2:	41 d1 c4             	rol    %r12d
   114e5:	44 89 e2             	mov    %r12d,%edx
   114e8:	41 89 dc             	mov    %ebx,%r12d
   114eb:	45 31 fc             	xor    %r15d,%r12d
   114ee:	8d ac 15 a1 eb d9 6e 	lea    0x6ed9eba1(%rbp,%rdx,1),%ebp
   114f5:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   114f9:	45 31 f4             	xor    %r14d,%r12d
   114fc:	41 c1 ce 02          	ror    $0x2,%r14d
   11500:	41 01 ec             	add    %ebp,%r12d
   11503:	44 89 ed             	mov    %r13d,%ebp
   11506:	c1 c5 05             	rol    $0x5,%ebp
   11509:	41 01 ec             	add    %ebp,%r12d
   1150c:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
   11510:	33 6c 24 04          	xor    0x4(%rsp),%ebp
   11514:	33 6c 24 24          	xor    0x24(%rsp),%ebp
   11518:	33 6c 24 14          	xor    0x14(%rsp),%ebp
   1151c:	d1 c5                	rol    %ebp
   1151e:	89 ea                	mov    %ebp,%edx
   11520:	44 89 fd             	mov    %r15d,%ebp
   11523:	44 31 f5             	xor    %r14d,%ebp
   11526:	8d 9c 13 a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rdx,1),%ebx
   1152d:	89 54 24 28          	mov    %edx,0x28(%rsp)
   11531:	44 31 ed             	xor    %r13d,%ebp
   11534:	01 dd                	add    %ebx,%ebp
   11536:	44 89 e3             	mov    %r12d,%ebx
   11539:	c1 c3 05             	rol    $0x5,%ebx
   1153c:	01 dd                	add    %ebx,%ebp
   1153e:	8b 1c 24             	mov    (%rsp),%ebx
   11541:	41 c1 cd 02          	ror    $0x2,%r13d
   11545:	44 31 cb             	xor    %r9d,%ebx
   11548:	41 31 f9             	xor    %edi,%r9d
   1154b:	44 31 db             	xor    %r11d,%ebx
   1154e:	33 5c 24 08          	xor    0x8(%rsp),%ebx
   11552:	41 31 c1             	xor    %eax,%r9d
   11555:	44 33 4c 24 28       	xor    0x28(%rsp),%r9d
   1155a:	d1 c3                	rol    %ebx
   1155c:	89 da                	mov    %ebx,%edx
   1155e:	44 89 f3             	mov    %r14d,%ebx
   11561:	44 31 eb             	xor    %r13d,%ebx
   11564:	45 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%r15,%rdx,1),%r15d
   1156b:	6e 
   1156c:	89 14 24             	mov    %edx,(%rsp)
   1156f:	44 31 e3             	xor    %r12d,%ebx
   11572:	41 c1 cc 02          	ror    $0x2,%r12d
   11576:	44 01 fb             	add    %r15d,%ebx
   11579:	41 89 ef             	mov    %ebp,%r15d
   1157c:	41 c1 c7 05          	rol    $0x5,%r15d
   11580:	44 01 fb             	add    %r15d,%ebx
   11583:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
   11588:	44 33 7c 24 20       	xor    0x20(%rsp),%r15d
   1158d:	45 31 d7             	xor    %r10d,%r15d
   11590:	44 33 7c 24 0c       	xor    0xc(%rsp),%r15d
   11595:	41 d1 c7             	rol    %r15d
   11598:	44 89 fa             	mov    %r15d,%edx
   1159b:	45 89 ef             	mov    %r13d,%r15d
   1159e:	45 31 e7             	xor    %r12d,%r15d
   115a1:	45 8d b4 16 a1 eb d9 	lea    0x6ed9eba1(%r14,%rdx,1),%r14d
   115a8:	6e 
   115a9:	89 54 24 10          	mov    %edx,0x10(%rsp)
   115ad:	41 31 ef             	xor    %ebp,%r15d
   115b0:	c1 cd 02             	ror    $0x2,%ebp
   115b3:	45 01 f7             	add    %r14d,%r15d
   115b6:	41 89 de             	mov    %ebx,%r14d
   115b9:	41 c1 c6 05          	rol    $0x5,%r14d
   115bd:	45 01 fe             	add    %r15d,%r14d
   115c0:	45 89 cf             	mov    %r9d,%r15d
   115c3:	45 89 e1             	mov    %r12d,%r9d
   115c6:	41 d1 c7             	rol    %r15d
   115c9:	41 31 e9             	xor    %ebp,%r9d
   115cc:	41 31 d9             	xor    %ebx,%r9d
   115cf:	47 8d ac 3d a1 eb d9 	lea    0x6ed9eba1(%r13,%r15,1),%r13d
   115d6:	6e 
   115d7:	c1 cb 02             	ror    $0x2,%ebx
   115da:	45 01 cd             	add    %r9d,%r13d
   115dd:	45 89 f1             	mov    %r14d,%r9d
   115e0:	41 c1 c1 05          	rol    $0x5,%r9d
   115e4:	45 01 e9             	add    %r13d,%r9d
   115e7:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   115ec:	41 31 f5             	xor    %esi,%r13d
   115ef:	31 cf                	xor    %ecx,%edi
   115f1:	44 31 d9             	xor    %r11d,%ecx
   115f4:	45 31 c5             	xor    %r8d,%r13d
   115f7:	44 33 2c 24          	xor    (%rsp),%r13d
   115fb:	41 d1 c5             	rol    %r13d
   115fe:	44 89 ea             	mov    %r13d,%edx
   11601:	41 89 ed             	mov    %ebp,%r13d
   11604:	41 31 dd             	xor    %ebx,%r13d
   11607:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
   1160e:	6e 
   1160f:	89 54 24 18          	mov    %edx,0x18(%rsp)
   11613:	33 7c 24 14          	xor    0x14(%rsp),%edi
   11617:	45 31 f5             	xor    %r14d,%r13d
   1161a:	33 7c 24 10          	xor    0x10(%rsp),%edi
   1161e:	41 c1 ce 02          	ror    $0x2,%r14d
   11622:	8b 54 24 24          	mov    0x24(%rsp),%edx
   11626:	45 01 e5             	add    %r12d,%r13d
   11629:	45 89 cc             	mov    %r9d,%r12d
   1162c:	d1 c7                	rol    %edi
   1162e:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   11632:	41 c1 c4 05          	rol    $0x5,%r12d
   11636:	31 d6                	xor    %edx,%esi
   11638:	33 74 24 08          	xor    0x8(%rsp),%esi
   1163c:	45 01 ec             	add    %r13d,%r12d
   1163f:	41 89 fd             	mov    %edi,%r13d
   11642:	89 df                	mov    %ebx,%edi
   11644:	44 31 fe             	xor    %r15d,%esi
   11647:	44 31 f7             	xor    %r14d,%edi
   1164a:	42 8d ac 2d a1 eb d9 	lea    0x6ed9eba1(%rbp,%r13,1),%ebp
   11651:	6e 
   11652:	d1 c6                	rol    %esi
   11654:	44 31 cf             	xor    %r9d,%edi
   11657:	41 c1 c9 02          	ror    $0x2,%r9d
   1165b:	01 fd                	add    %edi,%ebp
   1165d:	44 89 e7             	mov    %r12d,%edi
   11660:	c1 c7 05             	rol    $0x5,%edi
   11663:	01 ef                	add    %ebp,%edi
   11665:	89 f5                	mov    %esi,%ebp
   11667:	44 89 f6             	mov    %r14d,%esi
   1166a:	44 31 ce             	xor    %r9d,%esi
   1166d:	8d 9c 2b a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rbp,1),%ebx
   11674:	44 31 e6             	xor    %r12d,%esi
   11677:	41 c1 cc 02          	ror    $0x2,%r12d
   1167b:	01 f3                	add    %esi,%ebx
   1167d:	89 fe                	mov    %edi,%esi
   1167f:	c1 c6 05             	rol    $0x5,%esi
   11682:	01 de                	add    %ebx,%esi
   11684:	33 4c 24 18          	xor    0x18(%rsp),%ecx
   11688:	44 89 cb             	mov    %r9d,%ebx
   1168b:	44 31 d2             	xor    %r10d,%edx
   1168e:	d1 c1                	rol    %ecx
   11690:	44 31 e3             	xor    %r12d,%ebx
   11693:	41 31 c3             	xor    %eax,%r11d
   11696:	44 33 1c 24          	xor    (%rsp),%r11d
   1169a:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   1169e:	31 fb                	xor    %edi,%ebx
   116a0:	c1 cf 02             	ror    $0x2,%edi
   116a3:	41 31 eb             	xor    %ebp,%r11d
   116a6:	41 8d 8c 0e a1 eb d9 	lea    0x6ed9eba1(%r14,%rcx,1),%ecx
   116ad:	6e 
   116ae:	41 89 f6             	mov    %esi,%r14d
   116b1:	45 31 c2             	xor    %r8d,%r10d
   116b4:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
   116b9:	41 c1 c6 05          	rol    $0x5,%r14d
   116bd:	01 cb                	add    %ecx,%ebx
   116bf:	44 33 54 24 1c       	xor    0x1c(%rsp),%r10d
   116c4:	44 89 f1             	mov    %r14d,%ecx
   116c7:	41 d1 c2             	rol    %r10d
   116ca:	01 d9                	add    %ebx,%ecx
   116cc:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   116d0:	44 89 54 24 2c       	mov    %r10d,0x2c(%rsp)
   116d5:	31 da                	xor    %ebx,%edx
   116d7:	44 31 ea             	xor    %r13d,%edx
   116da:	41 89 d6             	mov    %edx,%r14d
   116dd:	44 89 e2             	mov    %r12d,%edx
   116e0:	41 d1 c6             	rol    %r14d
   116e3:	31 fa                	xor    %edi,%edx
   116e5:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
   116ea:	47 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%r9,%r14,1),%r9d
   116f1:	6e 
   116f2:	41 89 ce             	mov    %ecx,%r14d
   116f5:	31 f2                	xor    %esi,%edx
   116f7:	41 c1 c6 05          	rol    $0x5,%r14d
   116fb:	41 01 d1             	add    %edx,%r9d
   116fe:	c1 ce 02             	ror    $0x2,%esi
   11701:	44 89 f2             	mov    %r14d,%edx
   11704:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   11709:	44 01 ca             	add    %r9d,%edx
   1170c:	45 89 d9             	mov    %r11d,%r9d
   1170f:	41 89 fb             	mov    %edi,%r11d
   11712:	41 d1 c1             	rol    %r9d
   11715:	41 31 f3             	xor    %esi,%r11d
   11718:	42 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%rdi,%r10,1),%edi
   1171f:	6e 
   11720:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
   11725:	41 31 cb             	xor    %ecx,%r11d
   11728:	47 8d 8c 0c a1 eb d9 	lea    0x6ed9eba1(%r12,%r9,1),%r9d
   1172f:	6e 
   11730:	41 89 d4             	mov    %edx,%r12d
   11733:	41 c1 c4 05          	rol    $0x5,%r12d
   11737:	45 01 cb             	add    %r9d,%r11d
   1173a:	c1 c9 02             	ror    $0x2,%ecx
   1173d:	45 01 e3             	add    %r12d,%r11d
   11740:	41 89 f4             	mov    %esi,%r12d
   11743:	41 31 cc             	xor    %ecx,%r12d
   11746:	44 31 f0             	xor    %r14d,%eax
   11749:	45 89 e1             	mov    %r12d,%r9d
   1174c:	45 89 dc             	mov    %r11d,%r12d
   1174f:	44 31 f8             	xor    %r15d,%eax
   11752:	33 44 24 20          	xor    0x20(%rsp),%eax
   11756:	41 c1 c4 05          	rol    $0x5,%r12d
   1175a:	41 31 d1             	xor    %edx,%r9d
   1175d:	d1 c0                	rol    %eax
   1175f:	44 01 cf             	add    %r9d,%edi
   11762:	89 44 24 14          	mov    %eax,0x14(%rsp)
   11766:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
   1176b:	c1 ca 02             	ror    $0x2,%edx
   1176e:	44 01 e7             	add    %r12d,%edi
   11771:	8d b4 06 dc bc 1b 8f 	lea    -0x70e44324(%rsi,%rax,1),%esi
   11778:	45 89 dc             	mov    %r11d,%r12d
   1177b:	89 f8                	mov    %edi,%eax
   1177d:	45 31 c8             	xor    %r9d,%r8d
   11780:	44 33 44 24 18       	xor    0x18(%rsp),%r8d
   11785:	44 33 44 24 04       	xor    0x4(%rsp),%r8d
   1178a:	c1 c0 05             	rol    $0x5,%eax
   1178d:	41 21 d4             	and    %edx,%r12d
   11790:	41 d1 c0             	rol    %r8d
   11793:	01 c6                	add    %eax,%esi
   11795:	44 89 d8             	mov    %r11d,%eax
   11798:	41 c1 cb 02          	ror    $0x2,%r11d
   1179c:	09 d0                	or     %edx,%eax
   1179e:	21 c8                	and    %ecx,%eax
   117a0:	44 09 e0             	or     %r12d,%eax
   117a3:	45 89 c4             	mov    %r8d,%r12d
   117a6:	41 89 f8             	mov    %edi,%r8d
   117a9:	01 c6                	add    %eax,%esi
   117ab:	45 09 d8             	or     %r11d,%r8d
   117ae:	89 f8                	mov    %edi,%eax
   117b0:	44 89 64 24 08       	mov    %r12d,0x8(%rsp)
   117b5:	41 21 d0             	and    %edx,%r8d
   117b8:	44 21 d8             	and    %r11d,%eax
   117bb:	c1 cf 02             	ror    $0x2,%edi
   117be:	44 09 c0             	or     %r8d,%eax
   117c1:	46 8d 84 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%r8d
   117c8:	8f 
   117c9:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   117ce:	89 f1                	mov    %esi,%ecx
   117d0:	41 01 c0             	add    %eax,%r8d
   117d3:	c1 c1 05             	rol    $0x5,%ecx
   117d6:	45 31 e6             	xor    %r12d,%r14d
   117d9:	41 01 c8             	add    %ecx,%r8d
   117dc:	45 31 ee             	xor    %r13d,%r14d
   117df:	44 89 c1             	mov    %r8d,%ecx
   117e2:	45 31 d6             	xor    %r10d,%r14d
   117e5:	c1 c1 05             	rol    $0x5,%ecx
   117e8:	41 31 d9             	xor    %ebx,%r9d
   117eb:	44 33 24 24          	xor    (%rsp),%r12d
   117ef:	41 d1 c6             	rol    %r14d
   117f2:	89 c8                	mov    %ecx,%eax
   117f4:	89 f1                	mov    %esi,%ecx
   117f6:	45 89 ca             	mov    %r9d,%r10d
   117f9:	42 8d 94 32 dc bc 1b 	lea    -0x70e44324(%rdx,%r14,1),%edx
   11800:	8f 
   11801:	21 f9                	and    %edi,%ecx
   11803:	41 31 ea             	xor    %ebp,%r10d
   11806:	41 89 d9             	mov    %ebx,%r9d
   11809:	01 d0                	add    %edx,%eax
   1180b:	89 f2                	mov    %esi,%edx
   1180d:	c1 ce 02             	ror    $0x2,%esi
   11810:	44 33 54 24 14       	xor    0x14(%rsp),%r10d
   11815:	09 fa                	or     %edi,%edx
   11817:	41 d1 c2             	rol    %r10d
   1181a:	44 33 64 24 1c       	xor    0x1c(%rsp),%r12d
   1181f:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
   11824:	44 21 da             	and    %r11d,%edx
   11827:	44 89 54 24 0c       	mov    %r10d,0xc(%rsp)
   1182c:	41 d1 c4             	rol    %r12d
   1182f:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   11833:	09 ca                	or     %ecx,%edx
   11835:	44 89 c1             	mov    %r8d,%ecx
   11838:	47 8d 94 13 dc bc 1b 	lea    -0x70e44324(%r11,%r10,1),%r10d
   1183f:	8f 
   11840:	01 c2                	add    %eax,%edx
   11842:	09 f1                	or     %esi,%ecx
   11844:	46 8d 9c 27 dc bc 1b 	lea    -0x70e44324(%rdi,%r12,1),%r11d
   1184b:	8f 
   1184c:	44 89 c0             	mov    %r8d,%eax
   1184f:	21 f9                	and    %edi,%ecx
   11851:	21 f0                	and    %esi,%eax
   11853:	41 c1 c8 02          	ror    $0x2,%r8d
   11857:	09 c8                	or     %ecx,%eax
   11859:	8b 0c 24             	mov    (%rsp),%ecx
   1185c:	41 01 c2             	add    %eax,%r10d
   1185f:	89 d0                	mov    %edx,%eax
   11861:	c1 c0 05             	rol    $0x5,%eax
   11864:	41 01 c2             	add    %eax,%r10d
   11867:	44 89 d7             	mov    %r10d,%edi
   1186a:	c1 c7 05             	rol    $0x5,%edi
   1186d:	89 f8                	mov    %edi,%eax
   1186f:	89 d7                	mov    %edx,%edi
   11871:	44 09 c7             	or     %r8d,%edi
   11874:	44 01 d8             	add    %r11d,%eax
   11877:	41 89 fb             	mov    %edi,%r11d
   1187a:	89 d7                	mov    %edx,%edi
   1187c:	44 21 c7             	and    %r8d,%edi
   1187f:	41 21 f3             	and    %esi,%r11d
   11882:	41 09 fb             	or     %edi,%r11d
   11885:	41 01 c3             	add    %eax,%r11d
   11888:	41 31 d9             	xor    %ebx,%r9d
   1188b:	44 33 4c 24 20       	xor    0x20(%rsp),%r9d
   11890:	c1 ca 02             	ror    $0x2,%edx
   11893:	45 31 f1             	xor    %r14d,%r9d
   11896:	44 31 f9             	xor    %r15d,%ecx
   11899:	33 4c 24 04          	xor    0x4(%rsp),%ecx
   1189d:	44 89 cf             	mov    %r9d,%edi
   118a0:	d1 c7                	rol    %edi
   118a2:	41 89 f9             	mov    %edi,%r9d
   118a5:	44 89 d7             	mov    %r10d,%edi
   118a8:	09 d7                	or     %edx,%edi
   118aa:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   118af:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   118b3:	89 f8                	mov    %edi,%eax
   118b5:	44 89 d7             	mov    %r10d,%edi
   118b8:	41 c1 ca 02          	ror    $0x2,%r10d
   118bc:	44 21 c0             	and    %r8d,%eax
   118bf:	21 d7                	and    %edx,%edi
   118c1:	09 c7                	or     %eax,%edi
   118c3:	42 8d 84 0e dc bc 1b 	lea    -0x70e44324(%rsi,%r9,1),%eax
   118ca:	8f 
   118cb:	44 89 de             	mov    %r11d,%esi
   118ce:	44 8b 4c 24 18       	mov    0x18(%rsp),%r9d
   118d3:	01 c7                	add    %eax,%edi
   118d5:	c1 c6 05             	rol    $0x5,%esi
   118d8:	01 f7                	add    %esi,%edi
   118da:	89 ce                	mov    %ecx,%esi
   118dc:	d1 c6                	rol    %esi
   118de:	89 74 24 24          	mov    %esi,0x24(%rsp)
   118e2:	41 8d b4 30 dc bc 1b 	lea    -0x70e44324(%r8,%rsi,1),%esi
   118e9:	8f 
   118ea:	41 89 f8             	mov    %edi,%r8d
   118ed:	41 c1 c0 05          	rol    $0x5,%r8d
   118f1:	44 89 c0             	mov    %r8d,%eax
   118f4:	45 89 d8             	mov    %r11d,%r8d
   118f7:	45 09 d0             	or     %r10d,%r8d
   118fa:	01 f0                	add    %esi,%eax
   118fc:	44 89 c1             	mov    %r8d,%ecx
   118ff:	45 89 d8             	mov    %r11d,%r8d
   11902:	41 c1 cb 02          	ror    $0x2,%r11d
   11906:	45 21 d0             	and    %r10d,%r8d
   11909:	21 d1                	and    %edx,%ecx
   1190b:	44 89 c6             	mov    %r8d,%esi
   1190e:	09 ce                	or     %ecx,%esi
   11910:	89 f9                	mov    %edi,%ecx
   11912:	01 c6                	add    %eax,%esi
   11914:	89 d8                	mov    %ebx,%eax
   11916:	44 09 d9             	or     %r11d,%ecx
   11919:	44 31 c8             	xor    %r9d,%eax
   1191c:	33 44 24 2c          	xor    0x2c(%rsp),%eax
   11920:	44 21 d1             	and    %r10d,%ecx
   11923:	44 31 e0             	xor    %r12d,%eax
   11926:	41 89 c0             	mov    %eax,%r8d
   11929:	89 f8                	mov    %edi,%eax
   1192b:	41 d1 c0             	rol    %r8d
   1192e:	44 21 d8             	and    %r11d,%eax
   11931:	45 31 ef             	xor    %r13d,%r15d
   11934:	c1 cf 02             	ror    $0x2,%edi
   11937:	09 c8                	or     %ecx,%eax
   11939:	42 8d 94 02 dc bc 1b 	lea    -0x70e44324(%rdx,%r8,1),%edx
   11940:	8f 
   11941:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
   11945:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
   1194a:	01 c2                	add    %eax,%edx
   1194c:	89 f0                	mov    %esi,%eax
   1194e:	41 89 f8             	mov    %edi,%r8d
   11951:	89 f7                	mov    %esi,%edi
   11953:	c1 c0 05             	rol    $0x5,%eax
   11956:	44 31 f9             	xor    %r15d,%ecx
   11959:	33 4c 24 10          	xor    0x10(%rsp),%ecx
   1195d:	44 09 c7             	or     %r8d,%edi
   11960:	01 c2                	add    %eax,%edx
   11962:	d1 c1                	rol    %ecx
   11964:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   11969:	89 d0                	mov    %edx,%eax
   1196b:	41 8d 9c 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%ebx
   11972:	8f 
   11973:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
   11977:	89 f1                	mov    %esi,%ecx
   11979:	c1 c0 05             	rol    $0x5,%eax
   1197c:	44 21 c1             	and    %r8d,%ecx
   1197f:	01 d8                	add    %ebx,%eax
   11981:	89 fb                	mov    %edi,%ebx
   11983:	89 d7                	mov    %edx,%edi
   11985:	44 21 db             	and    %r11d,%ebx
   11988:	09 cb                	or     %ecx,%ebx
   1198a:	89 f1                	mov    %esi,%ecx
   1198c:	01 c3                	add    %eax,%ebx
   1198e:	44 89 c8             	mov    %r9d,%eax
   11991:	c1 c9 02             	ror    $0x2,%ecx
   11994:	31 e8                	xor    %ebp,%eax
   11996:	33 44 24 08          	xor    0x8(%rsp),%eax
   1199a:	33 44 24 24          	xor    0x24(%rsp),%eax
   1199e:	21 cf                	and    %ecx,%edi
   119a0:	41 89 c1             	mov    %eax,%r9d
   119a3:	89 d0                	mov    %edx,%eax
   119a5:	41 89 fa             	mov    %edi,%r10d
   119a8:	c1 ca 02             	ror    $0x2,%edx
   119ab:	09 c8                	or     %ecx,%eax
   119ad:	41 d1 c1             	rol    %r9d
   119b0:	44 21 c0             	and    %r8d,%eax
   119b3:	44 89 0c 24          	mov    %r9d,(%rsp)
   119b7:	41 09 c2             	or     %eax,%r10d
   119ba:	43 8d 84 0b dc bc 1b 	lea    -0x70e44324(%r11,%r9,1),%eax
   119c1:	8f 
   119c2:	41 01 c2             	add    %eax,%r10d
   119c5:	89 d8                	mov    %ebx,%eax
   119c7:	c1 c0 05             	rol    $0x5,%eax
   119ca:	41 01 c2             	add    %eax,%r10d
   119cd:	44 89 e8             	mov    %r13d,%eax
   119d0:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   119d5:	44 31 f8             	xor    %r15d,%eax
   119d8:	41 89 c1             	mov    %eax,%r9d
   119db:	45 31 f1             	xor    %r14d,%r9d
   119de:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
   119e3:	44 31 ed             	xor    %r13d,%ebp
   119e6:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
   119ea:	45 89 cb             	mov    %r9d,%r11d
   119ed:	44 33 7c 24 04       	xor    0x4(%rsp),%r15d
   119f2:	41 d1 c3             	rol    %r11d
   119f5:	44 89 ff             	mov    %r15d,%edi
   119f8:	43 8d b4 18 dc bc 1b 	lea    -0x70e44324(%r8,%r11,1),%esi
   119ff:	8f 
   11a00:	45 89 d0             	mov    %r10d,%r8d
   11a03:	44 31 e7             	xor    %r12d,%edi
   11a06:	33 3c 24             	xor    (%rsp),%edi
   11a09:	41 c1 c0 05          	rol    $0x5,%r8d
   11a0d:	41 89 ff             	mov    %edi,%r15d
   11a10:	44 01 c6             	add    %r8d,%esi
   11a13:	41 89 d8             	mov    %ebx,%r8d
   11a16:	41 d1 c7             	rol    %r15d
   11a19:	41 09 d0             	or     %edx,%r8d
   11a1c:	46 8d 8c 3a dc bc 1b 	lea    -0x70e44324(%rdx,%r15,1),%r9d
   11a23:	8f 
   11a24:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   11a29:	44 89 c0             	mov    %r8d,%eax
   11a2c:	41 89 d8             	mov    %ebx,%r8d
   11a2f:	c1 cb 02             	ror    $0x2,%ebx
   11a32:	41 21 d0             	and    %edx,%r8d
   11a35:	21 c8                	and    %ecx,%eax
   11a37:	44 09 c0             	or     %r8d,%eax
   11a3a:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
   11a3f:	01 f0                	add    %esi,%eax
   11a41:	44 89 d6             	mov    %r10d,%esi
   11a44:	41 31 e8             	xor    %ebp,%r8d
   11a47:	09 de                	or     %ebx,%esi
   11a49:	41 d1 c0             	rol    %r8d
   11a4c:	21 d6                	and    %edx,%esi
   11a4e:	44 89 c5             	mov    %r8d,%ebp
   11a51:	45 89 d0             	mov    %r10d,%r8d
   11a54:	41 c1 ca 02          	ror    $0x2,%r10d
   11a58:	41 21 d8             	and    %ebx,%r8d
   11a5b:	41 09 f0             	or     %esi,%r8d
   11a5e:	8d b4 29 dc bc 1b 8f 	lea    -0x70e44324(%rcx,%rbp,1),%esi
   11a65:	89 c1                	mov    %eax,%ecx
   11a67:	41 01 f0             	add    %esi,%r8d
   11a6a:	c1 c1 05             	rol    $0x5,%ecx
   11a6d:	44 89 ee             	mov    %r13d,%esi
   11a70:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   11a75:	41 01 c8             	add    %ecx,%r8d
   11a78:	89 c1                	mov    %eax,%ecx
   11a7a:	44 89 c2             	mov    %r8d,%edx
   11a7d:	44 21 d1             	and    %r10d,%ecx
   11a80:	44 89 c7             	mov    %r8d,%edi
   11a83:	c1 c2 05             	rol    $0x5,%edx
   11a86:	44 01 ca             	add    %r9d,%edx
   11a89:	41 89 c1             	mov    %eax,%r9d
   11a8c:	45 09 d1             	or     %r10d,%r9d
   11a8f:	41 21 d9             	and    %ebx,%r9d
   11a92:	41 09 c9             	or     %ecx,%r9d
   11a95:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   11a99:	41 01 d1             	add    %edx,%r9d
   11a9c:	44 31 ee             	xor    %r13d,%esi
   11a9f:	33 74 24 10          	xor    0x10(%rsp),%esi
   11aa3:	c1 c8 02             	ror    $0x2,%eax
   11aa6:	44 31 de             	xor    %r11d,%esi
   11aa9:	21 c7                	and    %eax,%edi
   11aab:	89 f2                	mov    %esi,%edx
   11aad:	d1 c2                	rol    %edx
   11aaf:	41 89 d7             	mov    %edx,%r15d
   11ab2:	44 89 c2             	mov    %r8d,%edx
   11ab5:	41 c1 c8 02          	ror    $0x2,%r8d
   11ab9:	09 c2                	or     %eax,%edx
   11abb:	44 21 d2             	and    %r10d,%edx
   11abe:	09 d7                	or     %edx,%edi
   11ac0:	42 8d 94 3b dc bc 1b 	lea    -0x70e44324(%rbx,%r15,1),%edx
   11ac7:	8f 
   11ac8:	8b 5c 24 14          	mov    0x14(%rsp),%ebx
   11acc:	01 d7                	add    %edx,%edi
   11ace:	44 89 ca             	mov    %r9d,%edx
   11ad1:	c1 c2 05             	rol    $0x5,%edx
   11ad4:	31 d9                	xor    %ebx,%ecx
   11ad6:	33 4c 24 24          	xor    0x24(%rsp),%ecx
   11ada:	01 d7                	add    %edx,%edi
   11adc:	31 e9                	xor    %ebp,%ecx
   11ade:	d1 c1                	rol    %ecx
   11ae0:	89 fa                	mov    %edi,%edx
   11ae2:	41 8d b4 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%esi
   11ae9:	8f 
   11aea:	c1 c2 05             	rol    $0x5,%edx
   11aed:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   11af1:	44 89 c9             	mov    %r9d,%ecx
   11af4:	01 f2                	add    %esi,%edx
   11af6:	44 89 ce             	mov    %r9d,%esi
   11af9:	44 21 c1             	and    %r8d,%ecx
   11afc:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
   11b01:	44 09 c6             	or     %r8d,%esi
   11b04:	41 c1 c9 02          	ror    $0x2,%r9d
   11b08:	21 c6                	and    %eax,%esi
   11b0a:	09 ce                	or     %ecx,%esi
   11b0c:	89 f9                	mov    %edi,%ecx
   11b0e:	01 d6                	add    %edx,%esi
   11b10:	44 89 ea             	mov    %r13d,%edx
   11b13:	44 31 d2             	xor    %r10d,%edx
   11b16:	33 54 24 18          	xor    0x18(%rsp),%edx
   11b1a:	33 54 24 1c          	xor    0x1c(%rsp),%edx
   11b1e:	d1 c2                	rol    %edx
   11b20:	41 89 d5             	mov    %edx,%r13d
   11b23:	89 fa                	mov    %edi,%edx
   11b25:	44 09 ca             	or     %r9d,%edx
   11b28:	44 89 6c 24 2c       	mov    %r13d,0x2c(%rsp)
   11b2d:	44 21 c2             	and    %r8d,%edx
   11b30:	44 21 c9             	and    %r9d,%ecx
   11b33:	c1 cf 02             	ror    $0x2,%edi
   11b36:	09 d1                	or     %edx,%ecx
   11b38:	42 8d 94 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%edx
   11b3f:	8f 
   11b40:	89 f0                	mov    %esi,%eax
   11b42:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   11b47:	01 d1                	add    %edx,%ecx
   11b49:	c1 c0 05             	rol    $0x5,%eax
   11b4c:	01 c1                	add    %eax,%ecx
   11b4e:	89 d8                	mov    %ebx,%eax
   11b50:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   11b54:	44 31 f0             	xor    %r14d,%eax
   11b57:	31 c3                	xor    %eax,%ebx
   11b59:	44 31 fb             	xor    %r15d,%ebx
   11b5c:	89 d8                	mov    %ebx,%eax
   11b5e:	d1 c0                	rol    %eax
   11b60:	41 8d 94 00 dc bc 1b 	lea    -0x70e44324(%r8,%rax,1),%edx
   11b67:	8f 
   11b68:	41 89 c8             	mov    %ecx,%r8d
   11b6b:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   11b6f:	8b 1c 24             	mov    (%rsp),%ebx
   11b72:	41 c1 c0 05          	rol    $0x5,%r8d
   11b76:	44 89 c0             	mov    %r8d,%eax
   11b79:	41 89 f0             	mov    %esi,%r8d
   11b7c:	01 d0                	add    %edx,%eax
   11b7e:	89 f2                	mov    %esi,%edx
   11b80:	41 21 f8             	and    %edi,%r8d
   11b83:	c1 ce 02             	ror    $0x2,%esi
   11b86:	09 fa                	or     %edi,%edx
   11b88:	44 21 ca             	and    %r9d,%edx
   11b8b:	44 09 c2             	or     %r8d,%edx
   11b8e:	45 89 d0             	mov    %r10d,%r8d
   11b91:	45 31 e8             	xor    %r13d,%r8d
   11b94:	01 c2                	add    %eax,%edx
   11b96:	89 c8                	mov    %ecx,%eax
   11b98:	41 31 d8             	xor    %ebx,%r8d
   11b9b:	44 33 44 24 20       	xor    0x20(%rsp),%r8d
   11ba0:	21 f0                	and    %esi,%eax
   11ba2:	41 d1 c0             	rol    %r8d
   11ba5:	45 89 c2             	mov    %r8d,%r10d
   11ba8:	41 89 c8             	mov    %ecx,%r8d
   11bab:	c1 c9 02             	ror    $0x2,%ecx
   11bae:	41 09 f0             	or     %esi,%r8d
   11bb1:	44 89 14 24          	mov    %r10d,(%rsp)
   11bb5:	41 21 f8             	and    %edi,%r8d
   11bb8:	44 09 c0             	or     %r8d,%eax
   11bbb:	47 8d 84 11 dc bc 1b 	lea    -0x70e44324(%r9,%r10,1),%r8d
   11bc2:	8f 
   11bc3:	41 89 d1             	mov    %edx,%r9d
   11bc6:	44 01 c0             	add    %r8d,%eax
   11bc9:	41 c1 c1 05          	rol    $0x5,%r9d
   11bcd:	41 89 d0             	mov    %edx,%r8d
   11bd0:	44 01 c8             	add    %r9d,%eax
   11bd3:	45 89 f1             	mov    %r14d,%r9d
   11bd6:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   11bdb:	45 31 e1             	xor    %r12d,%r9d
   11bde:	45 31 d9             	xor    %r11d,%r9d
   11be1:	44 33 4c 24 2c       	xor    0x2c(%rsp),%r9d
   11be6:	41 21 c8             	and    %ecx,%r8d
   11be9:	41 d1 c1             	rol    %r9d
   11bec:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
   11bf1:	46 8d 94 0f dc bc 1b 	lea    -0x70e44324(%rdi,%r9,1),%r10d
   11bf8:	8f 
   11bf9:	89 c7                	mov    %eax,%edi
   11bfb:	41 89 d1             	mov    %edx,%r9d
   11bfe:	c1 c7 05             	rol    $0x5,%edi
   11c01:	41 09 c9             	or     %ecx,%r9d
   11c04:	c1 ca 02             	ror    $0x2,%edx
   11c07:	44 01 d7             	add    %r10d,%edi
   11c0a:	45 89 ca             	mov    %r9d,%r10d
   11c0d:	41 21 f2             	and    %esi,%r10d
   11c10:	45 09 c2             	or     %r8d,%r10d
   11c13:	45 89 e8             	mov    %r13d,%r8d
   11c16:	45 31 f0             	xor    %r14d,%r8d
   11c19:	41 01 fa             	add    %edi,%r10d
   11c1c:	41 31 e8             	xor    %ebp,%r8d
   11c1f:	44 33 44 24 3c       	xor    0x3c(%rsp),%r8d
   11c24:	44 89 c7             	mov    %r8d,%edi
   11c27:	d1 c7                	rol    %edi
   11c29:	41 89 fd             	mov    %edi,%r13d
   11c2c:	89 c7                	mov    %eax,%edi
   11c2e:	09 d7                	or     %edx,%edi
   11c30:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
   11c35:	41 89 f8             	mov    %edi,%r8d
   11c38:	89 c7                	mov    %eax,%edi
   11c3a:	c1 c8 02             	ror    $0x2,%eax
   11c3d:	41 21 c8             	and    %ecx,%r8d
   11c40:	21 d7                	and    %edx,%edi
   11c42:	44 09 c7             	or     %r8d,%edi
   11c45:	46 8d 84 2e dc bc 1b 	lea    -0x70e44324(%rsi,%r13,1),%r8d
   11c4c:	8f 
   11c4d:	44 89 d6             	mov    %r10d,%esi
   11c50:	44 8b 6c 24 24       	mov    0x24(%rsp),%r13d
   11c55:	44 01 c7             	add    %r8d,%edi
   11c58:	c1 c6 05             	rol    $0x5,%esi
   11c5b:	41 89 c0             	mov    %eax,%r8d
   11c5e:	01 f7                	add    %esi,%edi
   11c60:	44 89 e6             	mov    %r12d,%esi
   11c63:	44 31 ee             	xor    %r13d,%esi
   11c66:	33 74 24 1c          	xor    0x1c(%rsp),%esi
   11c6a:	33 34 24             	xor    (%rsp),%esi
   11c6d:	d1 c6                	rol    %esi
   11c6f:	41 89 f4             	mov    %esi,%r12d
   11c72:	89 d6                	mov    %edx,%esi
   11c74:	31 c6                	xor    %eax,%esi
   11c76:	42 8d 8c 21 d6 c1 62 	lea    -0x359d3e2a(%rcx,%r12,1),%ecx
   11c7d:	ca 
   11c7e:	44 89 64 24 0c       	mov    %r12d,0xc(%rsp)
   11c83:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
   11c88:	44 31 d6             	xor    %r10d,%esi
   11c8b:	41 c1 ca 02          	ror    $0x2,%r10d
   11c8f:	01 ce                	add    %ecx,%esi
   11c91:	89 f9                	mov    %edi,%ecx
   11c93:	c1 c1 05             	rol    $0x5,%ecx
   11c96:	01 ce                	add    %ecx,%esi
   11c98:	45 31 e6             	xor    %r12d,%r14d
   11c9b:	45 31 d0             	xor    %r10d,%r8d
   11c9e:	44 89 e9             	mov    %r13d,%ecx
   11ca1:	45 89 f1             	mov    %r14d,%r9d
   11ca4:	41 31 f8             	xor    %edi,%r8d
   11ca7:	c1 cf 02             	ror    $0x2,%edi
   11caa:	45 31 f9             	xor    %r15d,%r9d
   11cad:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
   11cb2:	45 89 ce             	mov    %r9d,%r14d
   11cb5:	41 89 d9             	mov    %ebx,%r9d
   11cb8:	41 d1 c6             	rol    %r14d
   11cbb:	44 89 74 24 10       	mov    %r14d,0x10(%rsp)
   11cc0:	42 8d 94 32 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r14,1),%edx
   11cc7:	ca 
   11cc8:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
   11ccd:	41 01 d0             	add    %edx,%r8d
   11cd0:	89 f2                	mov    %esi,%edx
   11cd2:	c1 c2 05             	rol    $0x5,%edx
   11cd5:	44 31 f1             	xor    %r14d,%ecx
   11cd8:	33 4c 24 20          	xor    0x20(%rsp),%ecx
   11cdc:	33 4c 24 08          	xor    0x8(%rsp),%ecx
   11ce0:	41 01 d0             	add    %edx,%r8d
   11ce3:	41 89 cd             	mov    %ecx,%r13d
   11ce6:	44 89 d2             	mov    %r10d,%edx
   11ce9:	89 f9                	mov    %edi,%ecx
   11ceb:	41 d1 c5             	rol    %r13d
   11cee:	31 fa                	xor    %edi,%edx
   11cf0:	31 f2                	xor    %esi,%edx
   11cf2:	42 8d 84 28 d6 c1 62 	lea    -0x359d3e2a(%rax,%r13,1),%eax
   11cf9:	ca 
   11cfa:	c1 ce 02             	ror    $0x2,%esi
   11cfd:	44 89 6c 24 14       	mov    %r13d,0x14(%rsp)
   11d02:	01 c2                	add    %eax,%edx
   11d04:	44 89 c0             	mov    %r8d,%eax
   11d07:	31 f1                	xor    %esi,%ecx
   11d09:	c1 c0 05             	rol    $0x5,%eax
   11d0c:	41 89 cd             	mov    %ecx,%r13d
   11d0f:	44 89 f1             	mov    %r14d,%ecx
   11d12:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   11d17:	01 c2                	add    %eax,%edx
   11d19:	44 89 e0             	mov    %r12d,%eax
   11d1c:	45 31 c5             	xor    %r8d,%r13d
   11d1f:	44 31 d9             	xor    %r11d,%ecx
   11d22:	31 d8                	xor    %ebx,%eax
   11d24:	33 44 24 2c          	xor    0x2c(%rsp),%eax
   11d28:	33 44 24 0c          	xor    0xc(%rsp),%eax
   11d2c:	41 c1 c8 02          	ror    $0x2,%r8d
   11d30:	d1 c0                	rol    %eax
   11d32:	44 31 f1             	xor    %r14d,%ecx
   11d35:	41 89 f4             	mov    %esi,%r12d
   11d38:	89 44 24 18          	mov    %eax,0x18(%rsp)
   11d3c:	41 8d 84 02 d6 c1 62 	lea    -0x359d3e2a(%r10,%rax,1),%eax
   11d43:	ca 
   11d44:	41 01 c5             	add    %eax,%r13d
   11d47:	89 d0                	mov    %edx,%eax
   11d49:	c1 c0 05             	rol    $0x5,%eax
   11d4c:	41 01 c5             	add    %eax,%r13d
   11d4f:	33 4c 24 10          	xor    0x10(%rsp),%ecx
   11d53:	45 31 c4             	xor    %r8d,%r12d
   11d56:	89 cb                	mov    %ecx,%ebx
   11d58:	41 31 d4             	xor    %edx,%r12d
   11d5b:	c1 ca 02             	ror    $0x2,%edx
   11d5e:	d1 c3                	rol    %ebx
   11d60:	41 89 d2             	mov    %edx,%r10d
   11d63:	8d 84 1f d6 c1 62 ca 	lea    -0x359d3e2a(%rdi,%rbx,1),%eax
   11d6a:	44 89 ef             	mov    %r13d,%edi
   11d6d:	89 5c 24 54          	mov    %ebx,0x54(%rsp)
   11d71:	41 01 c4             	add    %eax,%r12d
   11d74:	c1 c7 05             	rol    $0x5,%edi
   11d77:	44 89 c8             	mov    %r9d,%eax
   11d7a:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
   11d7e:	41 01 fc             	add    %edi,%r12d
   11d81:	44 89 c7             	mov    %r8d,%edi
   11d84:	31 e8                	xor    %ebp,%eax
   11d86:	33 04 24             	xor    (%rsp),%eax
   11d89:	31 d7                	xor    %edx,%edi
   11d8b:	33 44 24 14          	xor    0x14(%rsp),%eax
   11d8f:	45 89 d9             	mov    %r11d,%r9d
   11d92:	d1 c0                	rol    %eax
   11d94:	89 fb                	mov    %edi,%ebx
   11d96:	8d 8c 06 d6 c1 62 ca 	lea    -0x359d3e2a(%rsi,%rax,1),%ecx
   11d9d:	44 31 eb             	xor    %r13d,%ebx
   11da0:	44 89 e6             	mov    %r12d,%esi
   11da3:	41 c1 cd 02          	ror    $0x2,%r13d
   11da7:	01 cb                	add    %ecx,%ebx
   11da9:	c1 c6 05             	rol    $0x5,%esi
   11dac:	45 31 ea             	xor    %r13d,%r10d
   11daf:	89 44 24 58          	mov    %eax,0x58(%rsp)
   11db3:	01 f3                	add    %esi,%ebx
   11db5:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   11db9:	45 31 e2             	xor    %r12d,%r10d
   11dbc:	45 89 eb             	mov    %r13d,%r11d
   11dbf:	41 c1 cc 02          	ror    $0x2,%r12d
   11dc3:	41 31 f1             	xor    %esi,%r9d
   11dc6:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
   11dcb:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
   11dd0:	41 d1 c1             	rol    %r9d
   11dd3:	43 8d 8c 08 d6 c1 62 	lea    -0x359d3e2a(%r8,%r9,1),%ecx
   11dda:	ca 
   11ddb:	41 89 d8             	mov    %ebx,%r8d
   11dde:	44 89 4c 24 5c       	mov    %r9d,0x5c(%rsp)
   11de3:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   11de7:	41 01 ca             	add    %ecx,%r10d
   11dea:	41 c1 c0 05          	rol    $0x5,%r8d
   11dee:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   11df2:	45 01 c2             	add    %r8d,%r10d
   11df5:	41 89 e8             	mov    %ebp,%r8d
   11df8:	45 31 f8             	xor    %r15d,%r8d
   11dfb:	44 33 44 24 08       	xor    0x8(%rsp),%r8d
   11e00:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
   11e05:	41 d1 c0             	rol    %r8d
   11e08:	45 31 e3             	xor    %r12d,%r11d
   11e0b:	31 ce                	xor    %ecx,%esi
   11e0d:	44 31 f1             	xor    %r14d,%ecx
   11e10:	41 31 db             	xor    %ebx,%r11d
   11e13:	42 8d 94 02 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r8,1),%edx
   11e1a:	ca 
   11e1b:	31 f7                	xor    %esi,%edi
   11e1d:	c1 cb 02             	ror    $0x2,%ebx
   11e20:	41 01 d3             	add    %edx,%r11d
   11e23:	44 89 d2             	mov    %r10d,%edx
   11e26:	31 c7                	xor    %eax,%edi
   11e28:	8b 74 24 10          	mov    0x10(%rsp),%esi
   11e2c:	c1 c2 05             	rol    $0x5,%edx
   11e2f:	d1 c7                	rol    %edi
   11e31:	33 4c 24 14          	xor    0x14(%rsp),%ecx
   11e35:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
   11e3a:	41 01 d3             	add    %edx,%r11d
   11e3d:	44 89 e2             	mov    %r12d,%edx
   11e40:	44 31 c1             	xor    %r8d,%ecx
   11e43:	89 7c 24 64          	mov    %edi,0x64(%rsp)
   11e47:	31 da                	xor    %ebx,%edx
   11e49:	d1 c1                	rol    %ecx
   11e4b:	89 d5                	mov    %edx,%ebp
   11e4d:	41 8d 94 3d d6 c1 62 	lea    -0x359d3e2a(%r13,%rdi,1),%edx
   11e54:	ca 
   11e55:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   11e5a:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
   11e5e:	44 31 d5             	xor    %r10d,%ebp
   11e61:	41 c1 ca 02          	ror    $0x2,%r10d
   11e65:	45 31 ef             	xor    %r13d,%r15d
   11e68:	01 d5                	add    %edx,%ebp
   11e6a:	44 89 da             	mov    %r11d,%edx
   11e6d:	44 31 fe             	xor    %r15d,%esi
   11e70:	41 89 df             	mov    %ebx,%r15d
   11e73:	c1 c2 05             	rol    $0x5,%edx
   11e76:	44 31 ce             	xor    %r9d,%esi
   11e79:	45 31 d7             	xor    %r10d,%r15d
   11e7c:	01 d5                	add    %edx,%ebp
   11e7e:	d1 c6                	rol    %esi
   11e80:	45 31 df             	xor    %r11d,%r15d
   11e83:	41 c1 cb 02          	ror    $0x2,%r11d
   11e87:	41 8d 94 34 d6 c1 62 	lea    -0x359d3e2a(%r12,%rsi,1),%edx
   11e8e:	ca 
   11e8f:	45 89 f4             	mov    %r14d,%r12d
   11e92:	45 89 d6             	mov    %r10d,%r14d
   11e95:	89 74 24 68          	mov    %esi,0x68(%rsp)
   11e99:	41 01 d7             	add    %edx,%r15d
   11e9c:	89 ea                	mov    %ebp,%edx
   11e9e:	45 31 de             	xor    %r11d,%r14d
   11ea1:	c1 c2 05             	rol    $0x5,%edx
   11ea4:	41 31 ee             	xor    %ebp,%r14d
   11ea7:	41 01 d7             	add    %edx,%r15d
   11eaa:	8d 94 0b d6 c1 62 ca 	lea    -0x359d3e2a(%rbx,%rcx,1),%edx
   11eb1:	8b 5c 24 24          	mov    0x24(%rsp),%ebx
   11eb5:	41 01 d6             	add    %edx,%r14d
   11eb8:	44 89 fa             	mov    %r15d,%edx
   11ebb:	c1 cd 02             	ror    $0x2,%ebp
   11ebe:	44 33 64 24 04       	xor    0x4(%rsp),%r12d
   11ec3:	c1 c2 05             	rol    $0x5,%edx
   11ec6:	44 31 e3             	xor    %r12d,%ebx
   11ec9:	44 8b 24 24          	mov    (%rsp),%r12d
   11ecd:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
   11ed2:	41 01 d6             	add    %edx,%r14d
   11ed5:	8b 14 24             	mov    (%rsp),%edx
   11ed8:	31 f3                	xor    %esi,%ebx
   11eda:	d1 c3                	rol    %ebx
   11edc:	44 31 ea             	xor    %r13d,%edx
   11edf:	33 54 24 18          	xor    0x18(%rsp),%edx
   11ee3:	45 89 dd             	mov    %r11d,%r13d
   11ee6:	89 5c 24 74          	mov    %ebx,0x74(%rsp)
   11eea:	31 fa                	xor    %edi,%edx
   11eec:	41 31 ed             	xor    %ebp,%r13d
   11eef:	45 8d 9c 1b d6 c1 62 	lea    -0x359d3e2a(%r11,%rbx,1),%r11d
   11ef6:	ca 
   11ef7:	d1 c2                	rol    %edx
   11ef9:	45 31 fd             	xor    %r15d,%r13d
   11efc:	41 c1 cf 02          	ror    $0x2,%r15d
   11f00:	45 8d 94 12 d6 c1 62 	lea    -0x359d3e2a(%r10,%rdx,1),%r10d
   11f07:	ca 
   11f08:	89 54 24 70          	mov    %edx,0x70(%rsp)
   11f0c:	45 01 d5             	add    %r10d,%r13d
   11f0f:	45 89 f2             	mov    %r14d,%r10d
   11f12:	41 c1 c2 05          	rol    $0x5,%r10d
   11f16:	45 01 d5             	add    %r10d,%r13d
   11f19:	41 89 ea             	mov    %ebp,%r10d
   11f1c:	45 31 fa             	xor    %r15d,%r10d
   11f1f:	45 31 f2             	xor    %r14d,%r10d
   11f22:	41 c1 ce 02          	ror    $0x2,%r14d
   11f26:	45 01 da             	add    %r11d,%r10d
   11f29:	45 89 eb             	mov    %r13d,%r11d
   11f2c:	41 c1 c3 05          	rol    $0x5,%r11d
   11f30:	45 01 da             	add    %r11d,%r10d
   11f33:	45 89 e3             	mov    %r12d,%r11d
   11f36:	45 89 fc             	mov    %r15d,%r12d
   11f39:	41 31 c3             	xor    %eax,%r11d
   11f3c:	45 31 f4             	xor    %r14d,%r12d
   11f3f:	41 31 cb             	xor    %ecx,%r11d
   11f42:	45 31 ec             	xor    %r13d,%r12d
   11f45:	41 d1 c3             	rol    %r11d
   11f48:	42 8d ac 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%ebp
   11f4f:	ca 
   11f50:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   11f55:	41 01 ec             	add    %ebp,%r12d
   11f58:	44 89 d5             	mov    %r10d,%ebp
   11f5b:	c1 c5 05             	rol    $0x5,%ebp
   11f5e:	41 01 ec             	add    %ebp,%r12d
   11f61:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
   11f65:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
   11f69:	41 c1 cd 02          	ror    $0x2,%r13d
   11f6d:	41 31 e9             	xor    %ebp,%r9d
   11f70:	44 89 f5             	mov    %r14d,%ebp
   11f73:	41 31 d1             	xor    %edx,%r9d
   11f76:	44 31 ed             	xor    %r13d,%ebp
   11f79:	41 d1 c1             	rol    %r9d
   11f7c:	44 31 d5             	xor    %r10d,%ebp
   11f7f:	47 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%r15d
   11f86:	ca 
   11f87:	44 89 4c 24 7c       	mov    %r9d,0x7c(%rsp)
   11f8c:	44 01 fd             	add    %r15d,%ebp
   11f8f:	45 89 e7             	mov    %r12d,%r15d
   11f92:	41 c1 c7 05          	rol    $0x5,%r15d
   11f96:	44 01 fd             	add    %r15d,%ebp
   11f99:	45 89 d7             	mov    %r10d,%r15d
   11f9c:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
   11fa1:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
   11fa6:	45 31 d0             	xor    %r10d,%r8d
   11fa9:	41 c1 cf 02          	ror    $0x2,%r15d
   11fad:	44 31 c3             	xor    %r8d,%ebx
   11fb0:	45 89 e8             	mov    %r13d,%r8d
   11fb3:	d1 c3                	rol    %ebx
   11fb5:	45 31 f8             	xor    %r15d,%r8d
   11fb8:	45 31 e0             	xor    %r12d,%r8d
   11fbb:	45 8d b4 1e d6 c1 62 	lea    -0x359d3e2a(%r14,%rbx,1),%r14d
   11fc2:	ca 
   11fc3:	41 c1 cc 02          	ror    $0x2,%r12d
   11fc7:	89 9c 24 80 00 00 00 	mov    %ebx,0x80(%rsp)
   11fce:	45 01 f0             	add    %r14d,%r8d
   11fd1:	41 89 ee             	mov    %ebp,%r14d
   11fd4:	41 c1 c6 05          	rol    $0x5,%r14d
   11fd8:	45 01 c6             	add    %r8d,%r14d
   11fdb:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   11fe0:	44 33 44 24 14       	xor    0x14(%rsp),%r8d
   11fe5:	44 31 c7             	xor    %r8d,%edi
   11fe8:	45 89 f0             	mov    %r14d,%r8d
   11feb:	41 31 fb             	xor    %edi,%r11d
   11fee:	44 89 ff             	mov    %r15d,%edi
   11ff1:	41 c1 c0 05          	rol    $0x5,%r8d
   11ff5:	41 d1 c3             	rol    %r11d
   11ff8:	44 31 e7             	xor    %r12d,%edi
   11ffb:	47 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%r13,%r11,1),%r10d
   12002:	ca 
   12003:	31 ef                	xor    %ebp,%edi
   12005:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   1200a:	c1 cd 02             	ror    $0x2,%ebp
   1200d:	44 01 d7             	add    %r10d,%edi
   12010:	45 89 c2             	mov    %r8d,%r10d
   12013:	44 89 9c 24 84 00 00 	mov    %r11d,0x84(%rsp)
   1201a:	00 
   1201b:	41 01 fa             	add    %edi,%r10d
   1201e:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   12022:	44 31 ef             	xor    %r13d,%edi
   12025:	44 31 e8             	xor    %r13d,%eax
   12028:	31 fe                	xor    %edi,%esi
   1202a:	31 c2                	xor    %eax,%edx
   1202c:	41 31 f1             	xor    %esi,%r9d
   1202f:	44 89 e6             	mov    %r12d,%esi
   12032:	41 31 d3             	xor    %edx,%r11d
   12035:	31 ee                	xor    %ebp,%esi
   12037:	41 d1 c1             	rol    %r9d
   1203a:	44 31 f6             	xor    %r14d,%esi
   1203d:	41 c1 ce 02          	ror    $0x2,%r14d
   12041:	44 89 8c 24 88 00 00 	mov    %r9d,0x88(%rsp)
   12048:	00 
   12049:	43 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%edi
   12050:	ca 
   12051:	44 89 b4 24 a4 00 00 	mov    %r14d,0xa4(%rsp)
   12058:	00 
   12059:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   1205e:	01 fe                	add    %edi,%esi
   12060:	44 89 d7             	mov    %r10d,%edi
   12063:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
   12068:	c1 c7 05             	rol    $0x5,%edi
   1206b:	44 89 f0             	mov    %r14d,%eax
   1206e:	44 89 5c 24 50       	mov    %r11d,0x50(%rsp)
   12073:	44 31 c1             	xor    %r8d,%ecx
   12076:	01 fe                	add    %edi,%esi
   12078:	41 d1 c3             	rol    %r11d
   1207b:	31 cb                	xor    %ecx,%ebx
   1207d:	89 e9                	mov    %ebp,%ecx
   1207f:	42 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%edx
   12086:	ca 
   12087:	44 89 9c 24 90 00 00 	mov    %r11d,0x90(%rsp)
   1208e:	00 
   1208f:	d1 c3                	rol    %ebx
   12091:	44 31 f1             	xor    %r14d,%ecx
   12094:	44 31 d1             	xor    %r10d,%ecx
   12097:	41 8d bc 1c d6 c1 62 	lea    -0x359d3e2a(%r12,%rbx,1),%edi
   1209e:	ca 
   1209f:	41 c1 ca 02          	ror    $0x2,%r10d
   120a3:	89 9c 24 8c 00 00 00 	mov    %ebx,0x8c(%rsp)
   120aa:	01 f9                	add    %edi,%ecx
   120ac:	89 f7                	mov    %esi,%edi
   120ae:	44 31 d0             	xor    %r10d,%eax
   120b1:	44 89 94 24 a0 00 00 	mov    %r10d,0xa0(%rsp)
   120b8:	00 
   120b9:	c1 c7 05             	rol    $0x5,%edi
   120bc:	31 f0                	xor    %esi,%eax
   120be:	c1 ce 02             	ror    $0x2,%esi
   120c1:	01 f9                	add    %edi,%ecx
   120c3:	01 d0                	add    %edx,%eax
   120c5:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   120ca:	89 b4 24 9c 00 00 00 	mov    %esi,0x9c(%rsp)
   120d1:	89 ca                	mov    %ecx,%edx
   120d3:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%rsp)
   120da:	03 4c 24 44          	add    0x44(%rsp),%ecx
   120de:	c1 c2 05             	rol    $0x5,%edx
   120e1:	89 4f 0c             	mov    %ecx,0xc(%rdi)
   120e4:	01 d0                	add    %edx,%eax
   120e6:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
   120ed:	03 44 24 40          	add    0x40(%rsp),%eax
   120f1:	03 74 24 48          	add    0x48(%rsp),%esi
   120f5:	44 03 54 24 4c       	add    0x4c(%rsp),%r10d
   120fa:	89 47 08             	mov    %eax,0x8(%rdi)
   120fd:	44 03 74 24 38       	add    0x38(%rsp),%r14d
   12102:	89 77 10             	mov    %esi,0x10(%rdi)
   12105:	be 58 00 00 00       	mov    $0x58,%esi
   1210a:	44 89 57 14          	mov    %r10d,0x14(%rdi)
   1210e:	44 89 77 18          	mov    %r14d,0x18(%rdi)
   12112:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   12117:	e8 94 cf ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   1211c:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   12123:	00 
   12124:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1212b:	00 00 
   1212d:	75 14                	jne    12143 <mbedtls_internal_sha1_process+0x1273>
   1212f:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   12136:	31 c0                	xor    %eax,%eax
   12138:	5b                   	pop    %rbx
   12139:	5d                   	pop    %rbp
   1213a:	41 5c                	pop    %r12
   1213c:	41 5d                	pop    %r13
   1213e:	41 5e                	pop    %r14
   12140:	41 5f                	pop    %r15
   12142:	c3                   	retq   
   12143:	e8 28 21 ff ff       	callq  4270 <__stack_chk_fail@plt>
   12148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1214f:	00 

0000000000012150 <mbedtls_sha1_update.part.0>:
   12150:	41 56                	push   %r14
   12152:	41 55                	push   %r13
   12154:	41 54                	push   %r12
   12156:	49 89 fc             	mov    %rdi,%r12
   12159:	55                   	push   %rbp
   1215a:	48 89 f5             	mov    %rsi,%rbp
   1215d:	53                   	push   %rbx
   1215e:	8b 07                	mov    (%rdi),%eax
   12160:	48 89 d3             	mov    %rdx,%rbx
   12163:	ba 40 00 00 00       	mov    $0x40,%edx
   12168:	41 89 c5             	mov    %eax,%r13d
   1216b:	41 83 e5 3f          	and    $0x3f,%r13d
   1216f:	44 29 ea             	sub    %r13d,%edx
   12172:	01 d8                	add    %ebx,%eax
   12174:	89 07                	mov    %eax,(%rdi)
   12176:	41 89 d6             	mov    %edx,%r14d
   12179:	73 04                	jae    1217f <mbedtls_sha1_update.part.0+0x2f>
   1217b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   1217f:	45 85 ed             	test   %r13d,%r13d
   12182:	74 05                	je     12189 <mbedtls_sha1_update.part.0+0x39>
   12184:	49 39 de             	cmp    %rbx,%r14
   12187:	76 37                	jbe    121c0 <mbedtls_sha1_update.part.0+0x70>
   12189:	48 83 fb 3f          	cmp    $0x3f,%rbx
   1218d:	77 17                	ja     121a6 <mbedtls_sha1_update.part.0+0x56>
   1218f:	eb 7f                	jmp    12210 <mbedtls_sha1_update.part.0+0xc0>
   12191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12198:	48 83 eb 40          	sub    $0x40,%rbx
   1219c:	48 83 c5 40          	add    $0x40,%rbp
   121a0:	48 83 fb 3f          	cmp    $0x3f,%rbx
   121a4:	76 6a                	jbe    12210 <mbedtls_sha1_update.part.0+0xc0>
   121a6:	48 89 ee             	mov    %rbp,%rsi
   121a9:	4c 89 e7             	mov    %r12,%rdi
   121ac:	e8 1f ed ff ff       	callq  10ed0 <mbedtls_internal_sha1_process>
   121b1:	85 c0                	test   %eax,%eax
   121b3:	74 e3                	je     12198 <mbedtls_sha1_update.part.0+0x48>
   121b5:	5b                   	pop    %rbx
   121b6:	5d                   	pop    %rbp
   121b7:	41 5c                	pop    %r12
   121b9:	41 5d                	pop    %r13
   121bb:	41 5e                	pop    %r14
   121bd:	c3                   	retq   
   121be:	66 90                	xchg   %ax,%ax
   121c0:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
   121c5:	4d 01 c5             	add    %r8,%r13
   121c8:	83 fa 08             	cmp    $0x8,%edx
   121cb:	0f 83 87 00 00 00    	jae    12258 <mbedtls_sha1_update.part.0+0x108>
   121d1:	f6 c2 04             	test   $0x4,%dl
   121d4:	0f 85 19 01 00 00    	jne    122f3 <mbedtls_sha1_update.part.0+0x1a3>
   121da:	85 d2                	test   %edx,%edx
   121dc:	74 11                	je     121ef <mbedtls_sha1_update.part.0+0x9f>
   121de:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   121e2:	83 e2 02             	and    $0x2,%edx
   121e5:	41 88 45 00          	mov    %al,0x0(%r13)
   121e9:	0f 85 30 01 00 00    	jne    1231f <mbedtls_sha1_update.part.0+0x1cf>
   121ef:	4c 89 c6             	mov    %r8,%rsi
   121f2:	4c 89 e7             	mov    %r12,%rdi
   121f5:	e8 d6 ec ff ff       	callq  10ed0 <mbedtls_internal_sha1_process>
   121fa:	85 c0                	test   %eax,%eax
   121fc:	75 b7                	jne    121b5 <mbedtls_sha1_update.part.0+0x65>
   121fe:	4c 01 f5             	add    %r14,%rbp
   12201:	4c 29 f3             	sub    %r14,%rbx
   12204:	45 31 ed             	xor    %r13d,%r13d
   12207:	eb 80                	jmp    12189 <mbedtls_sha1_update.part.0+0x39>
   12209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12210:	31 c0                	xor    %eax,%eax
   12212:	48 85 db             	test   %rbx,%rbx
   12215:	74 9e                	je     121b5 <mbedtls_sha1_update.part.0+0x65>
   12217:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
   1221c:	89 d8                	mov    %ebx,%eax
   1221e:	83 fb 08             	cmp    $0x8,%ebx
   12221:	0f 83 7e 00 00 00    	jae    122a5 <mbedtls_sha1_update.part.0+0x155>
   12227:	83 e3 04             	and    $0x4,%ebx
   1222a:	0f 85 d9 00 00 00    	jne    12309 <mbedtls_sha1_update.part.0+0x1b9>
   12230:	85 c0                	test   %eax,%eax
   12232:	74 16                	je     1224a <mbedtls_sha1_update.part.0+0xfa>
   12234:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   12238:	88 11                	mov    %dl,(%rcx)
   1223a:	a8 02                	test   $0x2,%al
   1223c:	74 0c                	je     1224a <mbedtls_sha1_update.part.0+0xfa>
   1223e:	89 c2                	mov    %eax,%edx
   12240:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   12245:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   1224a:	31 c0                	xor    %eax,%eax
   1224c:	5b                   	pop    %rbx
   1224d:	5d                   	pop    %rbp
   1224e:	41 5c                	pop    %r12
   12250:	41 5d                	pop    %r13
   12252:	41 5e                	pop    %r14
   12254:	c3                   	retq   
   12255:	0f 1f 00             	nopl   (%rax)
   12258:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1225c:	49 8d 75 08          	lea    0x8(%r13),%rsi
   12260:	49 89 e9             	mov    %rbp,%r9
   12263:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   12267:	49 89 45 00          	mov    %rax,0x0(%r13)
   1226b:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
   12270:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
   12275:	49 29 f5             	sub    %rsi,%r13
   12278:	44 01 ea             	add    %r13d,%edx
   1227b:	4d 29 e9             	sub    %r13,%r9
   1227e:	83 e2 f8             	and    $0xfffffff8,%edx
   12281:	83 fa 08             	cmp    $0x8,%edx
   12284:	0f 82 65 ff ff ff    	jb     121ef <mbedtls_sha1_update.part.0+0x9f>
   1228a:	83 e2 f8             	and    $0xfffffff8,%edx
   1228d:	31 c0                	xor    %eax,%eax
   1228f:	89 c1                	mov    %eax,%ecx
   12291:	83 c0 08             	add    $0x8,%eax
   12294:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   12298:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   1229c:	39 d0                	cmp    %edx,%eax
   1229e:	72 ef                	jb     1228f <mbedtls_sha1_update.part.0+0x13f>
   122a0:	e9 4a ff ff ff       	jmpq   121ef <mbedtls_sha1_update.part.0+0x9f>
   122a5:	48 8b 45 00          	mov    0x0(%rbp),%rax
   122a9:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   122ad:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   122b1:	48 89 01             	mov    %rax,(%rcx)
   122b4:	89 d8                	mov    %ebx,%eax
   122b6:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
   122bb:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   122c0:	48 29 f1             	sub    %rsi,%rcx
   122c3:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   122c6:	48 29 cd             	sub    %rcx,%rbp
   122c9:	83 e0 f8             	and    $0xfffffff8,%eax
   122cc:	83 f8 08             	cmp    $0x8,%eax
   122cf:	0f 82 75 ff ff ff    	jb     1224a <mbedtls_sha1_update.part.0+0xfa>
   122d5:	83 e0 f8             	and    $0xfffffff8,%eax
   122d8:	31 d2                	xor    %edx,%edx
   122da:	89 d1                	mov    %edx,%ecx
   122dc:	83 c2 08             	add    $0x8,%edx
   122df:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   122e4:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   122e8:	39 c2                	cmp    %eax,%edx
   122ea:	72 ee                	jb     122da <mbedtls_sha1_update.part.0+0x18a>
   122ec:	31 c0                	xor    %eax,%eax
   122ee:	e9 59 ff ff ff       	jmpq   1224c <mbedtls_sha1_update.part.0+0xfc>
   122f3:	8b 45 00             	mov    0x0(%rbp),%eax
   122f6:	41 89 45 00          	mov    %eax,0x0(%r13)
   122fa:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
   122ff:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
   12304:	e9 e6 fe ff ff       	jmpq   121ef <mbedtls_sha1_update.part.0+0x9f>
   12309:	8b 55 00             	mov    0x0(%rbp),%edx
   1230c:	89 11                	mov    %edx,(%rcx)
   1230e:	89 c2                	mov    %eax,%edx
   12310:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   12314:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   12318:	31 c0                	xor    %eax,%eax
   1231a:	e9 2d ff ff ff       	jmpq   1224c <mbedtls_sha1_update.part.0+0xfc>
   1231f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
   12325:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
   1232b:	e9 bf fe ff ff       	jmpq   121ef <mbedtls_sha1_update.part.0+0x9f>

0000000000012330 <mbedtls_sha1_update>:
   12330:	f3 0f 1e fa          	endbr64 
   12334:	48 85 d2             	test   %rdx,%rdx
   12337:	74 07                	je     12340 <mbedtls_sha1_update+0x10>
   12339:	e9 12 fe ff ff       	jmpq   12150 <mbedtls_sha1_update.part.0>
   1233e:	66 90                	xchg   %ax,%ax
   12340:	31 c0                	xor    %eax,%eax
   12342:	c3                   	retq   
   12343:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1234a:	00 00 00 00 
   1234e:	66 90                	xchg   %ax,%ax

0000000000012350 <mbedtls_sha1_finish>:
   12350:	f3 0f 1e fa          	endbr64 
   12354:	41 54                	push   %r12
   12356:	4c 8d 67 1c          	lea    0x1c(%rdi),%r12
   1235a:	55                   	push   %rbp
   1235b:	48 89 f5             	mov    %rsi,%rbp
   1235e:	53                   	push   %rbx
   1235f:	8b 07                	mov    (%rdi),%eax
   12361:	48 89 fb             	mov    %rdi,%rbx
   12364:	83 e0 3f             	and    $0x3f,%eax
   12367:	8d 48 01             	lea    0x1(%rax),%ecx
   1236a:	c6 44 07 1c 80       	movb   $0x80,0x1c(%rdi,%rax,1)
   1236f:	89 c8                	mov    %ecx,%eax
   12371:	4c 01 e0             	add    %r12,%rax
   12374:	83 f9 38             	cmp    $0x38,%ecx
   12377:	77 57                	ja     123d0 <mbedtls_sha1_finish+0x80>
   12379:	ba 38 00 00 00       	mov    $0x38,%edx
   1237e:	31 ff                	xor    %edi,%edi
   12380:	29 ca                	sub    %ecx,%edx
   12382:	83 fa 08             	cmp    $0x8,%edx
   12385:	72 79                	jb     12400 <mbedtls_sha1_finish+0xb0>
   12387:	89 d1                	mov    %edx,%ecx
   12389:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12390:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   12397:	00 00 
   12399:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1239d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   123a1:	48 29 c8             	sub    %rcx,%rax
   123a4:	01 c2                	add    %eax,%edx
   123a6:	83 e2 f8             	and    $0xfffffff8,%edx
   123a9:	83 fa 08             	cmp    $0x8,%edx
   123ac:	0f 82 8b 00 00 00    	jb     1243d <mbedtls_sha1_finish+0xed>
   123b2:	83 e2 f8             	and    $0xfffffff8,%edx
   123b5:	31 c0                	xor    %eax,%eax
   123b7:	89 c6                	mov    %eax,%esi
   123b9:	83 c0 08             	add    $0x8,%eax
   123bc:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   123c0:	39 d0                	cmp    %edx,%eax
   123c2:	72 f3                	jb     123b7 <mbedtls_sha1_finish+0x67>
   123c4:	eb 77                	jmp    1243d <mbedtls_sha1_finish+0xed>
   123c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   123cd:	00 00 00 
   123d0:	ba 40 00 00 00       	mov    $0x40,%edx
   123d5:	29 ca                	sub    %ecx,%edx
   123d7:	89 d1                	mov    %edx,%ecx
   123d9:	74 0f                	je     123ea <mbedtls_sha1_finish+0x9a>
   123db:	31 d2                	xor    %edx,%edx
   123dd:	89 d6                	mov    %edx,%esi
   123df:	83 c2 01             	add    $0x1,%edx
   123e2:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   123e6:	39 ca                	cmp    %ecx,%edx
   123e8:	72 f3                	jb     123dd <mbedtls_sha1_finish+0x8d>
   123ea:	4c 89 e6             	mov    %r12,%rsi
   123ed:	48 89 df             	mov    %rbx,%rdi
   123f0:	e8 db ea ff ff       	callq  10ed0 <mbedtls_internal_sha1_process>
   123f5:	85 c0                	test   %eax,%eax
   123f7:	74 27                	je     12420 <mbedtls_sha1_finish+0xd0>
   123f9:	5b                   	pop    %rbx
   123fa:	5d                   	pop    %rbp
   123fb:	41 5c                	pop    %r12
   123fd:	c3                   	retq   
   123fe:	66 90                	xchg   %ax,%ax
   12400:	f6 c2 04             	test   $0x4,%dl
   12403:	0f 85 8f 00 00 00    	jne    12498 <mbedtls_sha1_finish+0x148>
   12409:	85 d2                	test   %edx,%edx
   1240b:	74 30                	je     1243d <mbedtls_sha1_finish+0xed>
   1240d:	c6 00 00             	movb   $0x0,(%rax)
   12410:	f6 c2 02             	test   $0x2,%dl
   12413:	74 28                	je     1243d <mbedtls_sha1_finish+0xed>
   12415:	31 c9                	xor    %ecx,%ecx
   12417:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   1241c:	eb 1f                	jmp    1243d <mbedtls_sha1_finish+0xed>
   1241e:	66 90                	xchg   %ax,%ax
   12420:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12424:	0f 11 43 1c          	movups %xmm0,0x1c(%rbx)
   12428:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   1242f:	00 00 
   12431:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   12437:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   1243d:	8b 13                	mov    (%rbx),%edx
   1243f:	8b 43 04             	mov    0x4(%rbx),%eax
   12442:	4c 89 e6             	mov    %r12,%rsi
   12445:	48 89 df             	mov    %rbx,%rdi
   12448:	89 d1                	mov    %edx,%ecx
   1244a:	c1 e0 03             	shl    $0x3,%eax
   1244d:	c1 e9 1d             	shr    $0x1d,%ecx
   12450:	c1 e2 03             	shl    $0x3,%edx
   12453:	09 c8                	or     %ecx,%eax
   12455:	0f ca                	bswap  %edx
   12457:	89 53 58             	mov    %edx,0x58(%rbx)
   1245a:	0f c8                	bswap  %eax
   1245c:	89 43 54             	mov    %eax,0x54(%rbx)
   1245f:	e8 6c ea ff ff       	callq  10ed0 <mbedtls_internal_sha1_process>
   12464:	85 c0                	test   %eax,%eax
   12466:	75 91                	jne    123f9 <mbedtls_sha1_finish+0xa9>
   12468:	8b 53 08             	mov    0x8(%rbx),%edx
   1246b:	0f ca                	bswap  %edx
   1246d:	89 55 00             	mov    %edx,0x0(%rbp)
   12470:	8b 53 0c             	mov    0xc(%rbx),%edx
   12473:	0f ca                	bswap  %edx
   12475:	89 55 04             	mov    %edx,0x4(%rbp)
   12478:	8b 53 10             	mov    0x10(%rbx),%edx
   1247b:	0f ca                	bswap  %edx
   1247d:	89 55 08             	mov    %edx,0x8(%rbp)
   12480:	8b 53 14             	mov    0x14(%rbx),%edx
   12483:	0f ca                	bswap  %edx
   12485:	89 55 0c             	mov    %edx,0xc(%rbp)
   12488:	8b 53 18             	mov    0x18(%rbx),%edx
   1248b:	5b                   	pop    %rbx
   1248c:	0f ca                	bswap  %edx
   1248e:	89 55 10             	mov    %edx,0x10(%rbp)
   12491:	5d                   	pop    %rbp
   12492:	41 5c                	pop    %r12
   12494:	c3                   	retq   
   12495:	0f 1f 00             	nopl   (%rax)
   12498:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1249e:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   124a5:	00 
   124a6:	eb 95                	jmp    1243d <mbedtls_sha1_finish+0xed>
   124a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   124af:	00 

00000000000124b0 <mbedtls_sha1>:
   124b0:	f3 0f 1e fa          	endbr64 
   124b4:	41 55                	push   %r13
   124b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   124ba:	41 54                	push   %r12
   124bc:	55                   	push   %rbp
   124bd:	48 89 d5             	mov    %rdx,%rbp
   124c0:	48 83 ec 70          	sub    $0x70,%rsp
   124c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   124cb:	00 00 
   124cd:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   124d2:	31 c0                	xor    %eax,%eax
   124d4:	49 89 e5             	mov    %rsp,%r13
   124d7:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   124dc:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   124e3:	ab cd ef 
   124e6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   124eb:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   124f2:	54 32 10 
   124f5:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
   124fc:	00 
   124fd:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   12504:	00 
   12505:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1250a:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
   12511:	c3 
   12512:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   12517:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   1251c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   12521:	48 85 f6             	test   %rsi,%rsi
   12524:	74 15                	je     1253b <mbedtls_sha1+0x8b>
   12526:	48 89 f2             	mov    %rsi,%rdx
   12529:	48 89 fe             	mov    %rdi,%rsi
   1252c:	4c 89 ef             	mov    %r13,%rdi
   1252f:	e8 1c fc ff ff       	callq  12150 <mbedtls_sha1_update.part.0>
   12534:	41 89 c4             	mov    %eax,%r12d
   12537:	85 c0                	test   %eax,%eax
   12539:	75 0e                	jne    12549 <mbedtls_sha1+0x99>
   1253b:	48 89 ee             	mov    %rbp,%rsi
   1253e:	4c 89 ef             	mov    %r13,%rdi
   12541:	e8 0a fe ff ff       	callq  12350 <mbedtls_sha1_finish>
   12546:	41 89 c4             	mov    %eax,%r12d
   12549:	be 5c 00 00 00       	mov    $0x5c,%esi
   1254e:	4c 89 ef             	mov    %r13,%rdi
   12551:	e8 5a cb ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   12556:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1255b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   12562:	00 00 
   12564:	75 0d                	jne    12573 <mbedtls_sha1+0xc3>
   12566:	48 83 c4 70          	add    $0x70,%rsp
   1256a:	44 89 e0             	mov    %r12d,%eax
   1256d:	5d                   	pop    %rbp
   1256e:	41 5c                	pop    %r12
   12570:	41 5d                	pop    %r13
   12572:	c3                   	retq   
   12573:	e8 f8 1c ff ff       	callq  4270 <__stack_chk_fail@plt>
   12578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1257f:	00 

0000000000012580 <mbedtls_sha1_self_test>:
   12580:	f3 0f 1e fa          	endbr64 
   12584:	41 57                	push   %r15
   12586:	b9 0b 00 00 00       	mov    $0xb,%ecx
   1258b:	41 56                	push   %r14
   1258d:	4c 8d 35 cc 39 01 00 	lea    0x139cc(%rip),%r14        # 25f60 <sha1_test_buf>
   12594:	41 55                	push   %r13
   12596:	41 89 fd             	mov    %edi,%r13d
   12599:	41 54                	push   %r12
   1259b:	55                   	push   %rbp
   1259c:	48 8d 2d 5d 39 01 00 	lea    0x1395d(%rip),%rbp        # 25f00 <sha1_test_sum>
   125a3:	53                   	push   %rbx
   125a4:	31 db                	xor    %ebx,%ebx
   125a6:	48 81 ec a8 04 00 00 	sub    $0x4a8,%rsp
   125ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   125b4:	00 00 
   125b6:	48 89 84 24 98 04 00 	mov    %rax,0x498(%rsp)
   125bd:	00 
   125be:	31 c0                	xor    %eax,%eax
   125c0:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   125c5:	4c 89 e7             	mov    %r12,%rdi
   125c8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   125cb:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   125d1:	45 85 ed             	test   %r13d,%r13d
   125d4:	0f 85 a6 00 00 00    	jne    12680 <mbedtls_sha1_self_test+0x100>
   125da:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   125e1:	ab cd ef 
   125e4:	c7 44 24 28 f0 e1 d2 	movl   $0xc3d2e1f0,0x28(%rsp)
   125eb:	c3 
   125ec:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   125f1:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   125f8:	54 32 10 
   125fb:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   12602:	00 00 
   12604:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12609:	48 83 fb 02          	cmp    $0x2,%rbx
   1260d:	0f 84 2d 01 00 00    	je     12740 <mbedtls_sha1_self_test+0x1c0>
   12613:	48 8d 05 26 39 01 00 	lea    0x13926(%rip),%rax        # 25f40 <sha1_test_buflen>
   1261a:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   1261e:	48 85 d2             	test   %rdx,%rdx
   12621:	74 11                	je     12634 <mbedtls_sha1_self_test+0xb4>
   12623:	4c 89 f6             	mov    %r14,%rsi
   12626:	4c 89 e7             	mov    %r12,%rdi
   12629:	e8 22 fb ff ff       	callq  12150 <mbedtls_sha1_update.part.0>
   1262e:	89 c2                	mov    %eax,%edx
   12630:	85 c0                	test   %eax,%eax
   12632:	75 3b                	jne    1266f <mbedtls_sha1_self_test+0xef>
   12634:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
   12639:	4c 89 e7             	mov    %r12,%rdi
   1263c:	4c 89 fe             	mov    %r15,%rsi
   1263f:	e8 0c fd ff ff       	callq  12350 <mbedtls_sha1_finish>
   12644:	89 c2                	mov    %eax,%edx
   12646:	85 c0                	test   %eax,%eax
   12648:	75 25                	jne    1266f <mbedtls_sha1_self_test+0xef>
   1264a:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   1264f:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   12654:	48 33 55 08          	xor    0x8(%rbp),%rdx
   12658:	48 33 45 00          	xor    0x0(%rbp),%rax
   1265c:	48 09 c2             	or     %rax,%rdx
   1265f:	75 09                	jne    1266a <mbedtls_sha1_self_test+0xea>
   12661:	8b 45 10             	mov    0x10(%rbp),%eax
   12664:	41 39 47 10          	cmp    %eax,0x10(%r15)
   12668:	74 36                	je     126a0 <mbedtls_sha1_self_test+0x120>
   1266a:	ba 01 00 00 00       	mov    $0x1,%edx
   1266f:	45 85 ed             	test   %r13d,%r13d
   12672:	0f 85 a8 00 00 00    	jne    12720 <mbedtls_sha1_self_test+0x1a0>
   12678:	41 89 d5             	mov    %edx,%r13d
   1267b:	eb 4f                	jmp    126cc <mbedtls_sha1_self_test+0x14c>
   1267d:	0f 1f 00             	nopl   (%rax)
   12680:	8d 53 01             	lea    0x1(%rbx),%edx
   12683:	48 8d 35 56 38 01 00 	lea    0x13856(%rip),%rsi        # 25ee0 <ripemd160_padding+0x40>
   1268a:	bf 01 00 00 00       	mov    $0x1,%edi
   1268f:	31 c0                	xor    %eax,%eax
   12691:	e8 ba 1c ff ff       	callq  4350 <__printf_chk@plt>
   12696:	e9 3f ff ff ff       	jmpq   125da <mbedtls_sha1_self_test+0x5a>
   1269b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   126a0:	45 85 ed             	test   %r13d,%r13d
   126a3:	74 0c                	je     126b1 <mbedtls_sha1_self_test+0x131>
   126a5:	48 8d 3d 1b ba 00 00 	lea    0xba1b(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   126ac:	e8 5f 1b ff ff       	callq  4210 <puts@plt>
   126b1:	48 83 c3 01          	add    $0x1,%rbx
   126b5:	48 83 c5 14          	add    $0x14,%rbp
   126b9:	49 83 c6 39          	add    $0x39,%r14
   126bd:	48 83 fb 03          	cmp    $0x3,%rbx
   126c1:	0f 85 0a ff ff ff    	jne    125d1 <mbedtls_sha1_self_test+0x51>
   126c7:	45 85 ed             	test   %r13d,%r13d
   126ca:	75 3c                	jne    12708 <mbedtls_sha1_self_test+0x188>
   126cc:	be 5c 00 00 00       	mov    $0x5c,%esi
   126d1:	4c 89 e7             	mov    %r12,%rdi
   126d4:	e8 d7 c9 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   126d9:	48 8b 84 24 98 04 00 	mov    0x498(%rsp),%rax
   126e0:	00 
   126e1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   126e8:	00 00 
   126ea:	0f 85 a6 00 00 00    	jne    12796 <mbedtls_sha1_self_test+0x216>
   126f0:	48 81 c4 a8 04 00 00 	add    $0x4a8,%rsp
   126f7:	44 89 e8             	mov    %r13d,%eax
   126fa:	5b                   	pop    %rbx
   126fb:	5d                   	pop    %rbp
   126fc:	41 5c                	pop    %r12
   126fe:	41 5d                	pop    %r13
   12700:	41 5e                	pop    %r14
   12702:	41 5f                	pop    %r15
   12704:	c3                   	retq   
   12705:	0f 1f 00             	nopl   (%rax)
   12708:	bf 0a 00 00 00       	mov    $0xa,%edi
   1270d:	45 31 ed             	xor    %r13d,%r13d
   12710:	e8 eb 1a ff ff       	callq  4200 <putchar@plt>
   12715:	eb b5                	jmp    126cc <mbedtls_sha1_self_test+0x14c>
   12717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1271e:	00 00 
   12720:	48 8d 3d f6 38 01 00 	lea    0x138f6(%rip),%rdi        # 2601d <sha1_test_buf+0xbd>
   12727:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   1272b:	e8 e0 1a ff ff       	callq  4210 <puts@plt>
   12730:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   12734:	41 89 d5             	mov    %edx,%r13d
   12737:	eb 93                	jmp    126cc <mbedtls_sha1_self_test+0x14c>
   12739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12740:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   12747:	00 
   12748:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   1274d:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   12754:	61 61 61 
   12757:	c7 44 24 0c e8 03 00 	movl   $0x3e8,0xc(%rsp)
   1275e:	00 
   1275f:	4c 89 ff             	mov    %r15,%rdi
   12762:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   12765:	eb 14                	jmp    1277b <mbedtls_sha1_self_test+0x1fb>
   12767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1276e:	00 00 
   12770:	83 6c 24 0c 01       	subl   $0x1,0xc(%rsp)
   12775:	0f 84 b9 fe ff ff    	je     12634 <mbedtls_sha1_self_test+0xb4>
   1277b:	ba e8 03 00 00       	mov    $0x3e8,%edx
   12780:	4c 89 fe             	mov    %r15,%rsi
   12783:	4c 89 e7             	mov    %r12,%rdi
   12786:	e8 c5 f9 ff ff       	callq  12150 <mbedtls_sha1_update.part.0>
   1278b:	89 c2                	mov    %eax,%edx
   1278d:	85 c0                	test   %eax,%eax
   1278f:	74 df                	je     12770 <mbedtls_sha1_self_test+0x1f0>
   12791:	e9 d9 fe ff ff       	jmpq   1266f <mbedtls_sha1_self_test+0xef>
   12796:	e8 d5 1a ff ff       	callq  4270 <__stack_chk_fail@plt>
   1279b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000127a0 <mbedtls_sha256_init>:
   127a0:	f3 0f 1e fa          	endbr64 
   127a4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   127ab:	48 89 f9             	mov    %rdi,%rcx
   127ae:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   127b2:	31 c0                	xor    %eax,%eax
   127b4:	48 c7 47 5c 00 00 00 	movq   $0x0,0x5c(%rdi)
   127bb:	00 
   127bc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   127c0:	48 29 f9             	sub    %rdi,%rcx
   127c3:	83 c1 6c             	add    $0x6c,%ecx
   127c6:	c1 e9 03             	shr    $0x3,%ecx
   127c9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   127cc:	c3                   	retq   
   127cd:	0f 1f 00             	nopl   (%rax)

00000000000127d0 <mbedtls_sha256_free>:
   127d0:	f3 0f 1e fa          	endbr64 
   127d4:	48 85 ff             	test   %rdi,%rdi
   127d7:	74 0f                	je     127e8 <mbedtls_sha256_free+0x18>
   127d9:	be 6c 00 00 00       	mov    $0x6c,%esi
   127de:	e9 cd c8 ff ff       	jmpq   f0b0 <mbedtls_platform_zeroize>
   127e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   127e8:	c3                   	retq   
   127e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000127f0 <mbedtls_sha256_clone>:
   127f0:	f3 0f 1e fa          	endbr64 
   127f4:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   127f8:	0f 11 07             	movups %xmm0,(%rdi)
   127fb:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   12800:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   12804:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   12809:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   1280d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   12812:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   12816:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   1281b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   1281f:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   12824:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
   12828:	48 8b 46 60          	mov    0x60(%rsi),%rax
   1282c:	48 89 47 60          	mov    %rax,0x60(%rdi)
   12830:	8b 46 68             	mov    0x68(%rsi),%eax
   12833:	89 47 68             	mov    %eax,0x68(%rdi)
   12836:	c3                   	retq   
   12837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1283e:	00 00 

0000000000012840 <mbedtls_sha256_starts>:
   12840:	f3 0f 1e fa          	endbr64 
   12844:	83 fe 01             	cmp    $0x1,%esi
   12847:	0f 87 93 00 00 00    	ja     128e0 <mbedtls_sha256_starts+0xa0>
   1284d:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   12854:	85 f6                	test   %esi,%esi
   12856:	74 48                	je     128a0 <mbedtls_sha256_starts+0x60>
   12858:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   1285f:	d5 7c 36 
   12862:	89 77 68             	mov    %esi,0x68(%rdi)
   12865:	48 89 47 08          	mov    %rax,0x8(%rdi)
   12869:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   12870:	59 0e f7 
   12873:	48 89 47 10          	mov    %rax,0x10(%rdi)
   12877:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   1287e:	15 58 68 
   12881:	48 89 47 18          	mov    %rax,0x18(%rdi)
   12885:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   1288c:	4f fa be 
   1288f:	48 89 47 20          	mov    %rax,0x20(%rdi)
   12893:	31 c0                	xor    %eax,%eax
   12895:	c3                   	retq   
   12896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1289d:	00 00 00 
   128a0:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   128a7:	ae 67 bb 
   128aa:	89 77 68             	mov    %esi,0x68(%rdi)
   128ad:	48 89 47 08          	mov    %rax,0x8(%rdi)
   128b1:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   128b8:	f5 4f a5 
   128bb:	48 89 47 10          	mov    %rax,0x10(%rdi)
   128bf:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   128c6:	68 05 9b 
   128c9:	48 89 47 18          	mov    %rax,0x18(%rdi)
   128cd:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   128d4:	cd e0 5b 
   128d7:	48 89 47 20          	mov    %rax,0x20(%rdi)
   128db:	31 c0                	xor    %eax,%eax
   128dd:	c3                   	retq   
   128de:	66 90                	xchg   %ax,%ax
   128e0:	b8 8c ff ff ff       	mov    $0xffffff8c,%eax
   128e5:	c3                   	retq   
   128e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   128ed:	00 00 00 

00000000000128f0 <mbedtls_internal_sha256_process>:
   128f0:	f3 0f 1e fa          	endbr64 
   128f4:	41 57                	push   %r15
   128f6:	48 89 f9             	mov    %rdi,%rcx
   128f9:	41 56                	push   %r14
   128fb:	41 55                	push   %r13
   128fd:	41 54                	push   %r12
   128ff:	55                   	push   %rbp
   12900:	53                   	push   %rbx
   12901:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
   12908:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   1290d:	48 8d 9c 24 58 01 00 	lea    0x158(%rsp),%rbx
   12914:	00 
   12915:	48 89 df             	mov    %rbx,%rdi
   12918:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1291f:	00 00 
   12921:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   12928:	00 
   12929:	31 c0                	xor    %eax,%eax
   1292b:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   12930:	8b 54 01 08          	mov    0x8(%rcx,%rax,1),%edx
   12934:	89 14 07             	mov    %edx,(%rdi,%rax,1)
   12937:	48 83 c0 04          	add    $0x4,%rax
   1293b:	48 83 f8 20          	cmp    $0x20,%rax
   1293f:	75 ef                	jne    12930 <mbedtls_internal_sha256_process+0x40>
   12941:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   12946:	31 c0                	xor    %eax,%eax
   12948:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
   1294d:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   12952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12958:	8b 14 06             	mov    (%rsi,%rax,1),%edx
   1295b:	0f ca                	bswap  %edx
   1295d:	89 14 01             	mov    %edx,(%rcx,%rax,1)
   12960:	48 83 c0 04          	add    $0x4,%rax
   12964:	48 83 f8 40          	cmp    $0x40,%rax
   12968:	75 ee                	jne    12958 <mbedtls_internal_sha256_process+0x68>
   1296a:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   1296f:	48 8d 05 6a 38 01 00 	lea    0x1386a(%rip),%rax        # 261e0 <K>
   12976:	c7 44 24 1c d5 5e 1c 	movl   $0xab1c5ed5,0x1c(%rsp)
   1297d:	ab 
   1297e:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
   12985:	00 
   12986:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1298b:	8b ac 24 74 01 00 00 	mov    0x174(%rsp),%ebp
   12992:	41 ba a5 db b5 e9    	mov    $0xe9b5dba5,%r10d
   12998:	41 b9 cf fb c0 b5    	mov    $0xb5c0fbcf,%r9d
   1299e:	48 89 04 24          	mov    %rax,(%rsp)
   129a2:	8b b4 24 68 01 00 00 	mov    0x168(%rsp),%esi
   129a9:	41 b8 98 2f 8a 42    	mov    $0x428a2f98,%r8d
   129af:	c7 44 24 18 a4 82 3f 	movl   $0x923f82a4,0x18(%rsp)
   129b6:	92 
   129b7:	44 8b bc 24 70 01 00 	mov    0x170(%rsp),%r15d
   129be:	00 
   129bf:	c7 44 24 14 f1 11 f1 	movl   $0x59f111f1,0x14(%rsp)
   129c6:	59 
   129c7:	44 8b b4 24 6c 01 00 	mov    0x16c(%rsp),%r14d
   129ce:	00 
   129cf:	c7 44 24 10 5b c2 56 	movl   $0x3956c25b,0x10(%rsp)
   129d6:	39 
   129d7:	44 8b ac 24 58 01 00 	mov    0x158(%rsp),%r13d
   129de:	00 
   129df:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   129e4:	44 8b 9c 24 5c 01 00 	mov    0x15c(%rsp),%r11d
   129eb:	00 
   129ec:	8b 9c 24 60 01 00 00 	mov    0x160(%rsp),%ebx
   129f3:	8b 8c 24 64 01 00 00 	mov    0x164(%rsp),%ecx
   129fa:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   129ff:	ba 91 44 37 71       	mov    $0x71374491,%edx
   12a04:	41 89 f4             	mov    %esi,%r12d
   12a07:	89 f0                	mov    %esi,%eax
   12a09:	41 c1 cc 06          	ror    $0x6,%r12d
   12a0d:	c1 c8 0b             	ror    $0xb,%eax
   12a10:	44 31 e0             	xor    %r12d,%eax
   12a13:	41 89 f4             	mov    %esi,%r12d
   12a16:	41 c1 c4 07          	rol    $0x7,%r12d
   12a1a:	44 31 e0             	xor    %r12d,%eax
   12a1d:	45 89 fc             	mov    %r15d,%r12d
   12a20:	45 31 f4             	xor    %r14d,%r12d
   12a23:	41 21 f4             	and    %esi,%r12d
   12a26:	45 31 fc             	xor    %r15d,%r12d
   12a29:	44 03 7f 0c          	add    0xc(%rdi),%r15d
   12a2d:	44 01 e0             	add    %r12d,%eax
   12a30:	03 47 08             	add    0x8(%rdi),%eax
   12a33:	45 89 ec             	mov    %r13d,%r12d
   12a36:	01 c5                	add    %eax,%ebp
   12a38:	44 89 e8             	mov    %r13d,%eax
   12a3b:	45 21 dc             	and    %r11d,%r12d
   12a3e:	44 01 c5             	add    %r8d,%ebp
   12a41:	45 89 e8             	mov    %r13d,%r8d
   12a44:	c1 c8 0d             	ror    $0xd,%eax
   12a47:	41 c1 c8 02          	ror    $0x2,%r8d
   12a4b:	01 e9                	add    %ebp,%ecx
   12a4d:	44 31 c0             	xor    %r8d,%eax
   12a50:	45 89 e8             	mov    %r13d,%r8d
   12a53:	41 c1 c0 0a          	rol    $0xa,%r8d
   12a57:	44 31 c0             	xor    %r8d,%eax
   12a5a:	45 89 e8             	mov    %r13d,%r8d
   12a5d:	45 09 d8             	or     %r11d,%r8d
   12a60:	41 21 d8             	and    %ebx,%r8d
   12a63:	45 09 e0             	or     %r12d,%r8d
   12a66:	41 01 c0             	add    %eax,%r8d
   12a69:	89 c8                	mov    %ecx,%eax
   12a6b:	41 01 e8             	add    %ebp,%r8d
   12a6e:	89 f5                	mov    %esi,%ebp
   12a70:	c1 c8 0b             	ror    $0xb,%eax
   12a73:	44 31 f5             	xor    %r14d,%ebp
   12a76:	45 89 c4             	mov    %r8d,%r12d
   12a79:	21 cd                	and    %ecx,%ebp
   12a7b:	44 31 f5             	xor    %r14d,%ebp
   12a7e:	41 01 ef             	add    %ebp,%r15d
   12a81:	89 cd                	mov    %ecx,%ebp
   12a83:	c1 cd 06             	ror    $0x6,%ebp
   12a86:	31 e8                	xor    %ebp,%eax
   12a88:	89 cd                	mov    %ecx,%ebp
   12a8a:	c1 c5 07             	rol    $0x7,%ebp
   12a8d:	45 21 ec             	and    %r13d,%r12d
   12a90:	44 03 77 10          	add    0x10(%rdi),%r14d
   12a94:	31 e8                	xor    %ebp,%eax
   12a96:	44 89 c5             	mov    %r8d,%ebp
   12a99:	44 01 f8             	add    %r15d,%eax
   12a9c:	c1 cd 0d             	ror    $0xd,%ebp
   12a9f:	01 c2                	add    %eax,%edx
   12aa1:	44 89 c0             	mov    %r8d,%eax
   12aa4:	c1 c8 02             	ror    $0x2,%eax
   12aa7:	01 d3                	add    %edx,%ebx
   12aa9:	31 c5                	xor    %eax,%ebp
   12aab:	44 89 c0             	mov    %r8d,%eax
   12aae:	c1 c0 0a             	rol    $0xa,%eax
   12ab1:	31 c5                	xor    %eax,%ebp
   12ab3:	44 89 c0             	mov    %r8d,%eax
   12ab6:	44 09 e8             	or     %r13d,%eax
   12ab9:	44 21 d8             	and    %r11d,%eax
   12abc:	44 09 e0             	or     %r12d,%eax
   12abf:	45 89 c4             	mov    %r8d,%r12d
   12ac2:	01 e8                	add    %ebp,%eax
   12ac4:	89 cd                	mov    %ecx,%ebp
   12ac6:	31 f5                	xor    %esi,%ebp
   12ac8:	01 d0                	add    %edx,%eax
   12aca:	89 da                	mov    %ebx,%edx
   12acc:	21 dd                	and    %ebx,%ebp
   12ace:	c1 ca 0b             	ror    $0xb,%edx
   12ad1:	31 f5                	xor    %esi,%ebp
   12ad3:	41 01 ee             	add    %ebp,%r14d
   12ad6:	89 dd                	mov    %ebx,%ebp
   12ad8:	c1 cd 06             	ror    $0x6,%ebp
   12adb:	31 ea                	xor    %ebp,%edx
   12add:	89 dd                	mov    %ebx,%ebp
   12adf:	c1 c5 07             	rol    $0x7,%ebp
   12ae2:	31 ea                	xor    %ebp,%edx
   12ae4:	89 c5                	mov    %eax,%ebp
   12ae6:	44 01 f2             	add    %r14d,%edx
   12ae9:	c1 cd 0d             	ror    $0xd,%ebp
   12aec:	41 01 d1             	add    %edx,%r9d
   12aef:	89 c2                	mov    %eax,%edx
   12af1:	c1 ca 02             	ror    $0x2,%edx
   12af4:	45 01 cb             	add    %r9d,%r11d
   12af7:	31 d5                	xor    %edx,%ebp
   12af9:	89 c2                	mov    %eax,%edx
   12afb:	c1 c2 0a             	rol    $0xa,%edx
   12afe:	41 21 c4             	and    %eax,%r12d
   12b01:	03 77 14             	add    0x14(%rdi),%esi
   12b04:	31 d5                	xor    %edx,%ebp
   12b06:	44 89 c2             	mov    %r8d,%edx
   12b09:	09 c2                	or     %eax,%edx
   12b0b:	44 21 ea             	and    %r13d,%edx
   12b0e:	44 09 e2             	or     %r12d,%edx
   12b11:	01 ea                	add    %ebp,%edx
   12b13:	44 89 dd             	mov    %r11d,%ebp
   12b16:	44 01 ca             	add    %r9d,%edx
   12b19:	41 89 c9             	mov    %ecx,%r9d
   12b1c:	c1 cd 06             	ror    $0x6,%ebp
   12b1f:	41 31 d9             	xor    %ebx,%r9d
   12b22:	45 21 d9             	and    %r11d,%r9d
   12b25:	41 31 c9             	xor    %ecx,%r9d
   12b28:	44 01 ce             	add    %r9d,%esi
   12b2b:	45 89 d9             	mov    %r11d,%r9d
   12b2e:	41 c1 c9 0b          	ror    $0xb,%r9d
   12b32:	41 31 e9             	xor    %ebp,%r9d
   12b35:	44 89 dd             	mov    %r11d,%ebp
   12b38:	c1 c5 07             	rol    $0x7,%ebp
   12b3b:	41 31 e9             	xor    %ebp,%r9d
   12b3e:	89 c5                	mov    %eax,%ebp
   12b40:	44 01 ce             	add    %r9d,%esi
   12b43:	41 89 d1             	mov    %edx,%r9d
   12b46:	21 d5                	and    %edx,%ebp
   12b48:	41 01 f2             	add    %esi,%r10d
   12b4b:	89 d6                	mov    %edx,%esi
   12b4d:	41 c1 c9 0d          	ror    $0xd,%r9d
   12b51:	c1 ce 02             	ror    $0x2,%esi
   12b54:	45 01 d5             	add    %r10d,%r13d
   12b57:	41 31 f1             	xor    %esi,%r9d
   12b5a:	89 d6                	mov    %edx,%esi
   12b5c:	c1 c6 0a             	rol    $0xa,%esi
   12b5f:	41 31 f1             	xor    %esi,%r9d
   12b62:	89 c6                	mov    %eax,%esi
   12b64:	09 d6                	or     %edx,%esi
   12b66:	44 21 c6             	and    %r8d,%esi
   12b69:	09 ee                	or     %ebp,%esi
   12b6b:	44 01 ce             	add    %r9d,%esi
   12b6e:	45 89 e9             	mov    %r13d,%r9d
   12b71:	44 01 d6             	add    %r10d,%esi
   12b74:	41 89 da             	mov    %ebx,%r10d
   12b77:	45 31 da             	xor    %r11d,%r10d
   12b7a:	03 4f 18             	add    0x18(%rdi),%ecx
   12b7d:	41 c1 c9 06          	ror    $0x6,%r9d
   12b81:	45 21 ea             	and    %r13d,%r10d
   12b84:	41 31 da             	xor    %ebx,%r10d
   12b87:	03 5f 1c             	add    0x1c(%rdi),%ebx
   12b8a:	41 01 ca             	add    %ecx,%r10d
   12b8d:	44 89 e9             	mov    %r13d,%ecx
   12b90:	c1 c9 0b             	ror    $0xb,%ecx
   12b93:	44 31 c9             	xor    %r9d,%ecx
   12b96:	45 89 e9             	mov    %r13d,%r9d
   12b99:	41 c1 c1 07          	rol    $0x7,%r9d
   12b9d:	44 31 c9             	xor    %r9d,%ecx
   12ba0:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   12ba5:	44 01 d1             	add    %r10d,%ecx
   12ba8:	41 89 d2             	mov    %edx,%r10d
   12bab:	41 01 c9             	add    %ecx,%r9d
   12bae:	89 f1                	mov    %esi,%ecx
   12bb0:	41 21 f2             	and    %esi,%r10d
   12bb3:	43 8d 2c 08          	lea    (%r8,%r9,1),%ebp
   12bb7:	41 89 f0             	mov    %esi,%r8d
   12bba:	c1 c9 02             	ror    $0x2,%ecx
   12bbd:	41 c1 c8 0d          	ror    $0xd,%r8d
   12bc1:	41 31 c8             	xor    %ecx,%r8d
   12bc4:	89 f1                	mov    %esi,%ecx
   12bc6:	c1 c1 0a             	rol    $0xa,%ecx
   12bc9:	41 31 c8             	xor    %ecx,%r8d
   12bcc:	89 d1                	mov    %edx,%ecx
   12bce:	09 f1                	or     %esi,%ecx
   12bd0:	21 c1                	and    %eax,%ecx
   12bd2:	44 09 d1             	or     %r10d,%ecx
   12bd5:	44 01 c1             	add    %r8d,%ecx
   12bd8:	41 89 e8             	mov    %ebp,%r8d
   12bdb:	44 01 c9             	add    %r9d,%ecx
   12bde:	45 89 d9             	mov    %r11d,%r9d
   12be1:	41 c1 c8 0b          	ror    $0xb,%r8d
   12be5:	45 31 e9             	xor    %r13d,%r9d
   12be8:	41 21 e9             	and    %ebp,%r9d
   12beb:	45 31 d9             	xor    %r11d,%r9d
   12bee:	41 01 d9             	add    %ebx,%r9d
   12bf1:	89 eb                	mov    %ebp,%ebx
   12bf3:	c1 cb 06             	ror    $0x6,%ebx
   12bf6:	41 31 d8             	xor    %ebx,%r8d
   12bf9:	89 eb                	mov    %ebp,%ebx
   12bfb:	c1 c3 07             	rol    $0x7,%ebx
   12bfe:	41 31 d8             	xor    %ebx,%r8d
   12c01:	89 cb                	mov    %ecx,%ebx
   12c03:	44 03 5f 20          	add    0x20(%rdi),%r11d
   12c07:	45 01 c8             	add    %r9d,%r8d
   12c0a:	44 03 44 24 14       	add    0x14(%rsp),%r8d
   12c0f:	c1 cb 02             	ror    $0x2,%ebx
   12c12:	41 89 f1             	mov    %esi,%r9d
   12c15:	46 8d 3c 00          	lea    (%rax,%r8,1),%r15d
   12c19:	89 c8                	mov    %ecx,%eax
   12c1b:	41 21 c9             	and    %ecx,%r9d
   12c1e:	c1 c8 0d             	ror    $0xd,%eax
   12c21:	31 d8                	xor    %ebx,%eax
   12c23:	89 cb                	mov    %ecx,%ebx
   12c25:	c1 c3 0a             	rol    $0xa,%ebx
   12c28:	31 d8                	xor    %ebx,%eax
   12c2a:	89 f3                	mov    %esi,%ebx
   12c2c:	09 cb                	or     %ecx,%ebx
   12c2e:	21 d3                	and    %edx,%ebx
   12c30:	44 09 cb             	or     %r9d,%ebx
   12c33:	01 c3                	add    %eax,%ebx
   12c35:	44 89 f8             	mov    %r15d,%eax
   12c38:	44 01 c3             	add    %r8d,%ebx
   12c3b:	45 89 e8             	mov    %r13d,%r8d
   12c3e:	c1 c8 0b             	ror    $0xb,%eax
   12c41:	41 31 e8             	xor    %ebp,%r8d
   12c44:	41 89 d9             	mov    %ebx,%r9d
   12c47:	45 21 f8             	and    %r15d,%r8d
   12c4a:	45 31 e8             	xor    %r13d,%r8d
   12c4d:	45 01 d8             	add    %r11d,%r8d
   12c50:	45 89 fb             	mov    %r15d,%r11d
   12c53:	41 c1 cb 06          	ror    $0x6,%r11d
   12c57:	44 31 d8             	xor    %r11d,%eax
   12c5a:	45 89 fb             	mov    %r15d,%r11d
   12c5d:	41 c1 c3 07          	rol    $0x7,%r11d
   12c61:	44 31 d8             	xor    %r11d,%eax
   12c64:	45 8d 1c 00          	lea    (%r8,%rax,1),%r11d
   12c68:	8b 44 24 18          	mov    0x18(%rsp),%eax
   12c6c:	41 89 c8             	mov    %ecx,%r8d
   12c6f:	44 01 d8             	add    %r11d,%eax
   12c72:	41 89 db             	mov    %ebx,%r11d
   12c75:	44 8d 34 02          	lea    (%rdx,%rax,1),%r14d
   12c79:	89 da                	mov    %ebx,%edx
   12c7b:	41 c1 cb 0d          	ror    $0xd,%r11d
   12c7f:	c1 ca 02             	ror    $0x2,%edx
   12c82:	44 31 da             	xor    %r11d,%edx
   12c85:	41 89 db             	mov    %ebx,%r11d
   12c88:	41 c1 c3 0a          	rol    $0xa,%r11d
   12c8c:	44 31 da             	xor    %r11d,%edx
   12c8f:	41 89 cb             	mov    %ecx,%r11d
   12c92:	41 09 db             	or     %ebx,%r11d
   12c95:	41 21 f3             	and    %esi,%r11d
   12c98:	41 21 d8             	and    %ebx,%r8d
   12c9b:	44 03 6f 24          	add    0x24(%rdi),%r13d
   12c9f:	48 83 04 24 20       	addq   $0x20,(%rsp)
   12ca4:	45 09 c3             	or     %r8d,%r11d
   12ca7:	48 83 c7 20          	add    $0x20,%rdi
   12cab:	41 01 d3             	add    %edx,%r11d
   12cae:	44 89 f2             	mov    %r14d,%edx
   12cb1:	41 01 c3             	add    %eax,%r11d
   12cb4:	89 e8                	mov    %ebp,%eax
   12cb6:	c1 ca 0b             	ror    $0xb,%edx
   12cb9:	44 31 f8             	xor    %r15d,%eax
   12cbc:	45 89 d8             	mov    %r11d,%r8d
   12cbf:	45 21 d9             	and    %r11d,%r9d
   12cc2:	44 21 f0             	and    %r14d,%eax
   12cc5:	41 c1 c8 0d          	ror    $0xd,%r8d
   12cc9:	31 e8                	xor    %ebp,%eax
   12ccb:	41 01 c5             	add    %eax,%r13d
   12cce:	44 89 f0             	mov    %r14d,%eax
   12cd1:	c1 c8 06             	ror    $0x6,%eax
   12cd4:	31 d0                	xor    %edx,%eax
   12cd6:	44 89 f2             	mov    %r14d,%edx
   12cd9:	c1 c2 07             	rol    $0x7,%edx
   12cdc:	31 d0                	xor    %edx,%eax
   12cde:	44 89 da             	mov    %r11d,%edx
   12ce1:	c1 ca 02             	ror    $0x2,%edx
   12ce4:	41 01 c5             	add    %eax,%r13d
   12ce7:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   12ceb:	44 31 c2             	xor    %r8d,%edx
   12cee:	45 89 d8             	mov    %r11d,%r8d
   12cf1:	41 c1 c0 0a          	rol    $0xa,%r8d
   12cf5:	44 01 e8             	add    %r13d,%eax
   12cf8:	44 31 c2             	xor    %r8d,%edx
   12cfb:	41 89 d8             	mov    %ebx,%r8d
   12cfe:	01 c6                	add    %eax,%esi
   12d00:	45 09 d8             	or     %r11d,%r8d
   12d03:	41 21 c8             	and    %ecx,%r8d
   12d06:	45 09 c8             	or     %r9d,%r8d
   12d09:	4c 8b 0c 24          	mov    (%rsp),%r9
   12d0d:	44 01 c2             	add    %r8d,%edx
   12d10:	44 8d 2c 10          	lea    (%rax,%rdx,1),%r13d
   12d14:	48 39 7c 24 20       	cmp    %rdi,0x20(%rsp)
   12d19:	74 3d                	je     12d58 <mbedtls_internal_sha256_process+0x468>
   12d1b:	4c 89 c8             	mov    %r9,%rax
   12d1e:	45 8b 01             	mov    (%r9),%r8d
   12d21:	41 8b 51 04          	mov    0x4(%r9),%edx
   12d25:	44 8b 60 10          	mov    0x10(%rax),%r12d
   12d29:	44 8b 50 0c          	mov    0xc(%rax),%r10d
   12d2d:	45 8b 49 08          	mov    0x8(%r9),%r9d
   12d31:	44 89 64 24 10       	mov    %r12d,0x10(%rsp)
   12d36:	44 8b 60 14          	mov    0x14(%rax),%r12d
   12d3a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
   12d3f:	44 8b 60 18          	mov    0x18(%rax),%r12d
   12d43:	8b 40 1c             	mov    0x1c(%rax),%eax
   12d46:	44 89 64 24 18       	mov    %r12d,0x18(%rsp)
   12d4b:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   12d4f:	e9 b0 fc ff ff       	jmpq   12a04 <mbedtls_internal_sha256_process+0x114>
   12d54:	0f 1f 40 00          	nopl   0x0(%rax)
   12d58:	89 44 24 50          	mov    %eax,0x50(%rsp)
   12d5c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   12d61:	41 b9 86 47 be ef    	mov    $0xefbe4786,%r9d
   12d67:	41 b8 c1 69 9b e4    	mov    $0xe49b69c1,%r8d
   12d6d:	89 b4 24 68 01 00 00 	mov    %esi,0x168(%rsp)
   12d74:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   12d79:	48 05 c0 00 00 00    	add    $0xc0,%rax
   12d7f:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
   12d86:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   12d8b:	89 f0                	mov    %esi,%eax
   12d8d:	89 ce                	mov    %ecx,%esi
   12d8f:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
   12d96:	00 
   12d97:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
   12d9e:	00 
   12d9f:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
   12da6:	00 
   12da7:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
   12dae:	00 
   12daf:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
   12db6:	89 8c 24 64 01 00 00 	mov    %ecx,0x164(%rsp)
   12dbd:	89 54 24 54          	mov    %edx,0x54(%rsp)
   12dc1:	c7 44 24 28 da 88 f9 	movl   $0x76f988da,0x28(%rsp)
   12dc8:	76 
   12dc9:	c7 44 24 20 dc a9 b0 	movl   $0x5cb0a9dc,0x20(%rsp)
   12dd0:	5c 
   12dd1:	c7 44 24 1c aa 84 74 	movl   $0x4a7484aa,0x1c(%rsp)
   12dd8:	4a 
   12dd9:	c7 44 24 18 6f 2c e9 	movl   $0x2de92c6f,0x18(%rsp)
   12de0:	2d 
   12de1:	c7 44 24 14 cc a1 0c 	movl   $0x240ca1cc,0x14(%rsp)
   12de8:	24 
   12de9:	c7 44 24 10 c6 9d c1 	movl   $0xfc19dc6,0x10(%rsp)
   12df0:	0f 
   12df1:	eb 37                	jmp    12e2a <mbedtls_internal_sha256_process+0x53a>
   12df3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12df8:	8b 57 48             	mov    0x48(%rdi),%edx
   12dfb:	44 8b 47 40          	mov    0x40(%rdi),%r8d
   12dff:	44 8b 4f 44          	mov    0x44(%rdi),%r9d
   12e03:	89 54 24 10          	mov    %edx,0x10(%rsp)
   12e07:	8b 57 4c             	mov    0x4c(%rdi),%edx
   12e0a:	89 54 24 14          	mov    %edx,0x14(%rsp)
   12e0e:	8b 57 50             	mov    0x50(%rdi),%edx
   12e11:	89 54 24 18          	mov    %edx,0x18(%rsp)
   12e15:	8b 57 54             	mov    0x54(%rdi),%edx
   12e18:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
   12e1c:	8b 57 58             	mov    0x58(%rdi),%edx
   12e1f:	8b 7f 5c             	mov    0x5c(%rdi),%edi
   12e22:	89 54 24 20          	mov    %edx,0x20(%rsp)
   12e26:	89 7c 24 28          	mov    %edi,0x28(%rsp)
   12e2a:	41 8b 54 24 40       	mov    0x40(%r12),%edx
   12e2f:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
   12e34:	41 8b 7c 24 0c       	mov    0xc(%r12),%edi
   12e39:	45 8b 54 24 08       	mov    0x8(%r12),%r10d
   12e3e:	c1 c1 0d             	rol    $0xd,%ecx
   12e41:	c1 c2 0f             	rol    $0xf,%edx
   12e44:	45 03 54 24 2c       	add    0x2c(%r12),%r10d
   12e49:	31 ca                	xor    %ecx,%edx
   12e4b:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
   12e50:	c1 e9 0a             	shr    $0xa,%ecx
   12e53:	31 d1                	xor    %edx,%ecx
   12e55:	89 fa                	mov    %edi,%edx
   12e57:	44 01 d1             	add    %r10d,%ecx
   12e5a:	41 89 fa             	mov    %edi,%r10d
   12e5d:	c1 c2 0e             	rol    $0xe,%edx
   12e60:	41 c1 ca 07          	ror    $0x7,%r10d
   12e64:	44 31 d2             	xor    %r10d,%edx
   12e67:	41 89 fa             	mov    %edi,%r10d
   12e6a:	41 c1 ea 03          	shr    $0x3,%r10d
   12e6e:	44 31 d2             	xor    %r10d,%edx
   12e71:	44 8d 14 11          	lea    (%rcx,%rdx,1),%r10d
   12e75:	89 c1                	mov    %eax,%ecx
   12e77:	89 c2                	mov    %eax,%edx
   12e79:	c1 c9 06             	ror    $0x6,%ecx
   12e7c:	c1 ca 0b             	ror    $0xb,%edx
   12e7f:	45 89 54 24 48       	mov    %r10d,0x48(%r12)
   12e84:	31 ca                	xor    %ecx,%edx
   12e86:	89 c1                	mov    %eax,%ecx
   12e88:	44 89 14 24          	mov    %r10d,(%rsp)
   12e8c:	c1 c1 07             	rol    $0x7,%ecx
   12e8f:	31 ca                	xor    %ecx,%edx
   12e91:	44 89 f9             	mov    %r15d,%ecx
   12e94:	44 31 f1             	xor    %r14d,%ecx
   12e97:	21 c1                	and    %eax,%ecx
   12e99:	44 31 f9             	xor    %r15d,%ecx
   12e9c:	01 ca                	add    %ecx,%edx
   12e9e:	44 89 e9             	mov    %r13d,%ecx
   12ea1:	44 01 d2             	add    %r10d,%edx
   12ea4:	44 21 d9             	and    %r11d,%ecx
   12ea7:	01 d5                	add    %edx,%ebp
   12ea9:	44 89 ea             	mov    %r13d,%edx
   12eac:	41 01 e8             	add    %ebp,%r8d
   12eaf:	44 89 ed             	mov    %r13d,%ebp
   12eb2:	c1 ca 0d             	ror    $0xd,%edx
   12eb5:	c1 cd 02             	ror    $0x2,%ebp
   12eb8:	46 8d 14 06          	lea    (%rsi,%r8,1),%r10d
   12ebc:	89 c6                	mov    %eax,%esi
   12ebe:	31 ea                	xor    %ebp,%edx
   12ec0:	44 89 ed             	mov    %r13d,%ebp
   12ec3:	c1 c5 0a             	rol    $0xa,%ebp
   12ec6:	31 ea                	xor    %ebp,%edx
   12ec8:	44 89 ed             	mov    %r13d,%ebp
   12ecb:	44 09 dd             	or     %r11d,%ebp
   12ece:	21 dd                	and    %ebx,%ebp
   12ed0:	09 cd                	or     %ecx,%ebp
   12ed2:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
   12ed7:	41 03 7c 24 30       	add    0x30(%r12),%edi
   12edc:	44 31 f6             	xor    %r14d,%esi
   12edf:	01 d5                	add    %edx,%ebp
   12ee1:	41 8b 54 24 44       	mov    0x44(%r12),%edx
   12ee6:	44 21 d6             	and    %r10d,%esi
   12ee9:	c1 c1 0f             	rol    $0xf,%ecx
   12eec:	44 01 c5             	add    %r8d,%ebp
   12eef:	45 8b 44 24 10       	mov    0x10(%r12),%r8d
   12ef4:	44 31 f6             	xor    %r14d,%esi
   12ef7:	c1 c2 0d             	rol    $0xd,%edx
   12efa:	31 ca                	xor    %ecx,%edx
   12efc:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
   12f01:	c1 e9 0a             	shr    $0xa,%ecx
   12f04:	31 d1                	xor    %edx,%ecx
   12f06:	44 89 c2             	mov    %r8d,%edx
   12f09:	01 cf                	add    %ecx,%edi
   12f0b:	44 89 c1             	mov    %r8d,%ecx
   12f0e:	c1 ca 07             	ror    $0x7,%edx
   12f11:	c1 c1 0e             	rol    $0xe,%ecx
   12f14:	31 d1                	xor    %edx,%ecx
   12f16:	44 89 c2             	mov    %r8d,%edx
   12f19:	c1 ea 03             	shr    $0x3,%edx
   12f1c:	31 d1                	xor    %edx,%ecx
   12f1e:	44 89 d2             	mov    %r10d,%edx
   12f21:	01 f9                	add    %edi,%ecx
   12f23:	c1 ca 0b             	ror    $0xb,%edx
   12f26:	44 89 ef             	mov    %r13d,%edi
   12f29:	41 01 cf             	add    %ecx,%r15d
   12f2c:	41 89 4c 24 4c       	mov    %ecx,0x4c(%r12)
   12f31:	41 01 f7             	add    %esi,%r15d
   12f34:	44 89 d6             	mov    %r10d,%esi
   12f37:	c1 ce 06             	ror    $0x6,%esi
   12f3a:	31 f2                	xor    %esi,%edx
   12f3c:	44 89 d6             	mov    %r10d,%esi
   12f3f:	c1 c6 07             	rol    $0x7,%esi
   12f42:	31 f2                	xor    %esi,%edx
   12f44:	89 ee                	mov    %ebp,%esi
   12f46:	44 01 fa             	add    %r15d,%edx
   12f49:	c1 ce 0d             	ror    $0xd,%esi
   12f4c:	44 8b 3c 24          	mov    (%rsp),%r15d
   12f50:	41 01 d1             	add    %edx,%r9d
   12f53:	89 ea                	mov    %ebp,%edx
   12f55:	c1 ca 02             	ror    $0x2,%edx
   12f58:	44 01 cb             	add    %r9d,%ebx
   12f5b:	31 d6                	xor    %edx,%esi
   12f5d:	89 ea                	mov    %ebp,%edx
   12f5f:	c1 c2 0a             	rol    $0xa,%edx
   12f62:	21 ef                	and    %ebp,%edi
   12f64:	45 03 44 24 34       	add    0x34(%r12),%r8d
   12f69:	31 d6                	xor    %edx,%esi
   12f6b:	44 89 ea             	mov    %r13d,%edx
   12f6e:	09 ea                	or     %ebp,%edx
   12f70:	44 21 da             	and    %r11d,%edx
   12f73:	09 fa                	or     %edi,%edx
   12f75:	44 89 ff             	mov    %r15d,%edi
   12f78:	01 f2                	add    %esi,%edx
   12f7a:	44 89 fe             	mov    %r15d,%esi
   12f7d:	c1 c7 0d             	rol    $0xd,%edi
   12f80:	c1 c6 0f             	rol    $0xf,%esi
   12f83:	44 01 ca             	add    %r9d,%edx
   12f86:	45 8b 4c 24 14       	mov    0x14(%r12),%r9d
   12f8b:	31 f7                	xor    %esi,%edi
   12f8d:	44 89 fe             	mov    %r15d,%esi
   12f90:	41 89 ef             	mov    %ebp,%r15d
   12f93:	c1 ee 0a             	shr    $0xa,%esi
   12f96:	31 fe                	xor    %edi,%esi
   12f98:	44 89 cf             	mov    %r9d,%edi
   12f9b:	41 01 f0             	add    %esi,%r8d
   12f9e:	44 89 ce             	mov    %r9d,%esi
   12fa1:	c1 cf 07             	ror    $0x7,%edi
   12fa4:	c1 c6 0e             	rol    $0xe,%esi
   12fa7:	31 fe                	xor    %edi,%esi
   12fa9:	44 89 cf             	mov    %r9d,%edi
   12fac:	c1 ef 03             	shr    $0x3,%edi
   12faf:	31 fe                	xor    %edi,%esi
   12fb1:	44 01 c6             	add    %r8d,%esi
   12fb4:	41 89 c0             	mov    %eax,%r8d
   12fb7:	45 31 d0             	xor    %r10d,%r8d
   12fba:	41 89 74 24 50       	mov    %esi,0x50(%r12)
   12fbf:	41 21 d8             	and    %ebx,%r8d
   12fc2:	44 89 c7             	mov    %r8d,%edi
   12fc5:	45 8d 04 36          	lea    (%r14,%rsi,1),%r8d
   12fc9:	41 89 de             	mov    %ebx,%r14d
   12fcc:	31 c7                	xor    %eax,%edi
   12fce:	41 c1 ce 0b          	ror    $0xb,%r14d
   12fd2:	41 01 f8             	add    %edi,%r8d
   12fd5:	89 df                	mov    %ebx,%edi
   12fd7:	c1 cf 06             	ror    $0x6,%edi
   12fda:	41 31 fe             	xor    %edi,%r14d
   12fdd:	89 df                	mov    %ebx,%edi
   12fdf:	c1 c7 07             	rol    $0x7,%edi
   12fe2:	41 31 fe             	xor    %edi,%r14d
   12fe5:	89 d7                	mov    %edx,%edi
   12fe7:	45 01 c6             	add    %r8d,%r14d
   12fea:	41 89 d0             	mov    %edx,%r8d
   12fed:	44 03 74 24 10       	add    0x10(%rsp),%r14d
   12ff2:	45 01 f3             	add    %r14d,%r11d
   12ff5:	41 c1 c8 02          	ror    $0x2,%r8d
   12ff9:	41 21 d7             	and    %edx,%r15d
   12ffc:	c1 cf 0d             	ror    $0xd,%edi
   12fff:	44 31 c7             	xor    %r8d,%edi
   13002:	41 89 d0             	mov    %edx,%r8d
   13005:	41 c1 c0 0a          	rol    $0xa,%r8d
   13009:	44 31 c7             	xor    %r8d,%edi
   1300c:	41 89 e8             	mov    %ebp,%r8d
   1300f:	41 09 d0             	or     %edx,%r8d
   13012:	45 21 e8             	and    %r13d,%r8d
   13015:	45 09 f8             	or     %r15d,%r8d
   13018:	41 01 f8             	add    %edi,%r8d
   1301b:	89 cf                	mov    %ecx,%edi
   1301d:	c1 c7 0f             	rol    $0xf,%edi
   13020:	45 01 f0             	add    %r14d,%r8d
   13023:	45 8b 74 24 18       	mov    0x18(%r12),%r14d
   13028:	41 89 ff             	mov    %edi,%r15d
   1302b:	89 cf                	mov    %ecx,%edi
   1302d:	c1 e9 0a             	shr    $0xa,%ecx
   13030:	c1 c7 0d             	rol    $0xd,%edi
   13033:	44 31 ff             	xor    %r15d,%edi
   13036:	41 89 d7             	mov    %edx,%r15d
   13039:	31 cf                	xor    %ecx,%edi
   1303b:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
   13040:	44 01 c9             	add    %r9d,%ecx
   13043:	45 89 f1             	mov    %r14d,%r9d
   13046:	01 f9                	add    %edi,%ecx
   13048:	44 89 f7             	mov    %r14d,%edi
   1304b:	41 c1 c9 07          	ror    $0x7,%r9d
   1304f:	c1 c7 0e             	rol    $0xe,%edi
   13052:	44 31 cf             	xor    %r9d,%edi
   13055:	45 89 f1             	mov    %r14d,%r9d
   13058:	41 c1 e9 03          	shr    $0x3,%r9d
   1305c:	44 31 cf             	xor    %r9d,%edi
   1305f:	45 89 d9             	mov    %r11d,%r9d
   13062:	01 cf                	add    %ecx,%edi
   13064:	44 89 d1             	mov    %r10d,%ecx
   13067:	41 c1 c9 06          	ror    $0x6,%r9d
   1306b:	31 d9                	xor    %ebx,%ecx
   1306d:	01 f8                	add    %edi,%eax
   1306f:	41 89 7c 24 54       	mov    %edi,0x54(%r12)
   13074:	44 21 d9             	and    %r11d,%ecx
   13077:	44 31 d1             	xor    %r10d,%ecx
   1307a:	01 c8                	add    %ecx,%eax
   1307c:	44 89 d9             	mov    %r11d,%ecx
   1307f:	c1 c9 0b             	ror    $0xb,%ecx
   13082:	44 31 c9             	xor    %r9d,%ecx
   13085:	45 89 d9             	mov    %r11d,%r9d
   13088:	45 21 c7             	and    %r8d,%r15d
   1308b:	45 03 74 24 3c       	add    0x3c(%r12),%r14d
   13090:	41 c1 c1 07          	rol    $0x7,%r9d
   13094:	44 31 c9             	xor    %r9d,%ecx
   13097:	01 c1                	add    %eax,%ecx
   13099:	03 4c 24 14          	add    0x14(%rsp),%ecx
   1309d:	44 89 c0             	mov    %r8d,%eax
   130a0:	45 8d 4c 0d 00       	lea    0x0(%r13,%rcx,1),%r9d
   130a5:	45 89 c5             	mov    %r8d,%r13d
   130a8:	c1 c8 02             	ror    $0x2,%eax
   130ab:	41 c1 cd 0d          	ror    $0xd,%r13d
   130af:	41 31 c5             	xor    %eax,%r13d
   130b2:	44 89 c0             	mov    %r8d,%eax
   130b5:	c1 c0 0a             	rol    $0xa,%eax
   130b8:	41 31 c5             	xor    %eax,%r13d
   130bb:	89 d0                	mov    %edx,%eax
   130bd:	44 09 c0             	or     %r8d,%eax
   130c0:	21 e8                	and    %ebp,%eax
   130c2:	44 09 f8             	or     %r15d,%eax
   130c5:	44 01 e8             	add    %r13d,%eax
   130c8:	45 8b 6c 24 1c       	mov    0x1c(%r12),%r13d
   130cd:	01 c8                	add    %ecx,%eax
   130cf:	89 f1                	mov    %esi,%ecx
   130d1:	c1 c1 0f             	rol    $0xf,%ecx
   130d4:	41 89 cf             	mov    %ecx,%r15d
   130d7:	89 f1                	mov    %esi,%ecx
   130d9:	c1 ee 0a             	shr    $0xa,%esi
   130dc:	c1 c1 0d             	rol    $0xd,%ecx
   130df:	44 31 f9             	xor    %r15d,%ecx
   130e2:	45 89 c7             	mov    %r8d,%r15d
   130e5:	31 f1                	xor    %esi,%ecx
   130e7:	44 89 f6             	mov    %r14d,%esi
   130ea:	45 89 ee             	mov    %r13d,%r14d
   130ed:	01 ce                	add    %ecx,%esi
   130ef:	44 89 e9             	mov    %r13d,%ecx
   130f2:	41 c1 ce 07          	ror    $0x7,%r14d
   130f6:	c1 c1 0e             	rol    $0xe,%ecx
   130f9:	44 31 f1             	xor    %r14d,%ecx
   130fc:	45 89 ee             	mov    %r13d,%r14d
   130ff:	41 c1 ee 03          	shr    $0x3,%r14d
   13103:	44 31 f1             	xor    %r14d,%ecx
   13106:	01 f1                	add    %esi,%ecx
   13108:	89 de                	mov    %ebx,%esi
   1310a:	44 31 de             	xor    %r11d,%esi
   1310d:	41 89 4c 24 58       	mov    %ecx,0x58(%r12)
   13112:	44 21 ce             	and    %r9d,%esi
   13115:	41 89 f6             	mov    %esi,%r14d
   13118:	41 8d 34 0a          	lea    (%r10,%rcx,1),%esi
   1311c:	45 89 ca             	mov    %r9d,%r10d
   1311f:	41 31 de             	xor    %ebx,%r14d
   13122:	44 01 f6             	add    %r14d,%esi
   13125:	45 89 ce             	mov    %r9d,%r14d
   13128:	41 c1 ca 0b          	ror    $0xb,%r10d
   1312c:	41 21 c7             	and    %eax,%r15d
   1312f:	41 c1 ce 06          	ror    $0x6,%r14d
   13133:	45 31 f2             	xor    %r14d,%r10d
   13136:	45 89 ce             	mov    %r9d,%r14d
   13139:	41 c1 c6 07          	rol    $0x7,%r14d
   1313d:	45 31 f2             	xor    %r14d,%r10d
   13140:	41 89 c6             	mov    %eax,%r14d
   13143:	41 01 f2             	add    %esi,%r10d
   13146:	89 c6                	mov    %eax,%esi
   13148:	41 c1 ce 0d          	ror    $0xd,%r14d
   1314c:	44 03 54 24 18       	add    0x18(%rsp),%r10d
   13151:	c1 ce 02             	ror    $0x2,%esi
   13154:	44 01 d5             	add    %r10d,%ebp
   13157:	41 31 f6             	xor    %esi,%r14d
   1315a:	89 c6                	mov    %eax,%esi
   1315c:	c1 c6 0a             	rol    $0xa,%esi
   1315f:	41 31 f6             	xor    %esi,%r14d
   13162:	44 89 c6             	mov    %r8d,%esi
   13165:	09 c6                	or     %eax,%esi
   13167:	21 d6                	and    %edx,%esi
   13169:	44 09 fe             	or     %r15d,%esi
   1316c:	41 89 ff             	mov    %edi,%r15d
   1316f:	44 01 f6             	add    %r14d,%esi
   13172:	41 89 fe             	mov    %edi,%r14d
   13175:	41 c1 c7 0f          	rol    $0xf,%r15d
   13179:	41 c1 c6 0d          	rol    $0xd,%r14d
   1317d:	c1 ef 0a             	shr    $0xa,%edi
   13180:	44 01 d6             	add    %r10d,%esi
   13183:	45 8b 54 24 20       	mov    0x20(%r12),%r10d
   13188:	45 31 fe             	xor    %r15d,%r14d
   1318b:	41 31 fe             	xor    %edi,%r14d
   1318e:	41 8b 7c 24 40       	mov    0x40(%r12),%edi
   13193:	44 01 ef             	add    %r13d,%edi
   13196:	45 89 d5             	mov    %r10d,%r13d
   13199:	41 01 fe             	add    %edi,%r14d
   1319c:	44 89 d7             	mov    %r10d,%edi
   1319f:	41 c1 cd 07          	ror    $0x7,%r13d
   131a3:	c1 c7 0e             	rol    $0xe,%edi
   131a6:	44 31 ef             	xor    %r13d,%edi
   131a9:	45 89 d5             	mov    %r10d,%r13d
   131ac:	41 c1 ed 03          	shr    $0x3,%r13d
   131b0:	44 31 ef             	xor    %r13d,%edi
   131b3:	41 89 ed             	mov    %ebp,%r13d
   131b6:	44 01 f7             	add    %r14d,%edi
   131b9:	41 89 ee             	mov    %ebp,%r14d
   131bc:	41 c1 cd 0b          	ror    $0xb,%r13d
   131c0:	41 c1 ce 06          	ror    $0x6,%r14d
   131c4:	01 fb                	add    %edi,%ebx
   131c6:	41 89 7c 24 5c       	mov    %edi,0x5c(%r12)
   131cb:	45 31 f5             	xor    %r14d,%r13d
   131ce:	41 89 ee             	mov    %ebp,%r14d
   131d1:	41 c1 c6 07          	rol    $0x7,%r14d
   131d5:	45 31 f5             	xor    %r14d,%r13d
   131d8:	45 89 de             	mov    %r11d,%r14d
   131db:	45 31 ce             	xor    %r9d,%r14d
   131de:	41 21 ee             	and    %ebp,%r14d
   131e1:	45 31 de             	xor    %r11d,%r14d
   131e4:	44 01 f3             	add    %r14d,%ebx
   131e7:	41 89 c6             	mov    %eax,%r14d
   131ea:	44 01 eb             	add    %r13d,%ebx
   131ed:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   131f2:	41 21 f6             	and    %esi,%r14d
   131f5:	41 01 dd             	add    %ebx,%r13d
   131f8:	89 f3                	mov    %esi,%ebx
   131fa:	46 8d 3c 2a          	lea    (%rdx,%r13,1),%r15d
   131fe:	89 f2                	mov    %esi,%edx
   13200:	c1 cb 02             	ror    $0x2,%ebx
   13203:	c1 ca 0d             	ror    $0xd,%edx
   13206:	31 da                	xor    %ebx,%edx
   13208:	89 f3                	mov    %esi,%ebx
   1320a:	c1 c3 0a             	rol    $0xa,%ebx
   1320d:	31 da                	xor    %ebx,%edx
   1320f:	89 c3                	mov    %eax,%ebx
   13211:	09 f3                	or     %esi,%ebx
   13213:	44 21 c3             	and    %r8d,%ebx
   13216:	44 09 f3             	or     %r14d,%ebx
   13219:	41 89 ce             	mov    %ecx,%r14d
   1321c:	01 d3                	add    %edx,%ebx
   1321e:	41 c1 c6 0f          	rol    $0xf,%r14d
   13222:	41 8b 54 24 24       	mov    0x24(%r12),%edx
   13227:	45 03 54 24 44       	add    0x44(%r12),%r10d
   1322c:	44 01 eb             	add    %r13d,%ebx
   1322f:	41 89 cd             	mov    %ecx,%r13d
   13232:	c1 e9 0a             	shr    $0xa,%ecx
   13235:	41 c1 c5 0d          	rol    $0xd,%r13d
   13239:	45 31 f5             	xor    %r14d,%r13d
   1323c:	41 31 cd             	xor    %ecx,%r13d
   1323f:	89 d1                	mov    %edx,%ecx
   13241:	45 01 d5             	add    %r10d,%r13d
   13244:	41 89 d2             	mov    %edx,%r10d
   13247:	c1 c9 07             	ror    $0x7,%ecx
   1324a:	41 c1 c2 0e          	rol    $0xe,%r10d
   1324e:	41 31 ca             	xor    %ecx,%r10d
   13251:	89 d1                	mov    %edx,%ecx
   13253:	c1 e9 03             	shr    $0x3,%ecx
   13256:	41 31 ca             	xor    %ecx,%r10d
   13259:	44 89 f9             	mov    %r15d,%ecx
   1325c:	45 01 ea             	add    %r13d,%r10d
   1325f:	45 89 fd             	mov    %r15d,%r13d
   13262:	c1 c9 0b             	ror    $0xb,%ecx
   13265:	41 c1 cd 06          	ror    $0x6,%r13d
   13269:	45 01 d3             	add    %r10d,%r11d
   1326c:	45 89 54 24 60       	mov    %r10d,0x60(%r12)
   13271:	41 89 f2             	mov    %esi,%r10d
   13274:	44 31 e9             	xor    %r13d,%ecx
   13277:	45 89 fd             	mov    %r15d,%r13d
   1327a:	41 21 da             	and    %ebx,%r10d
   1327d:	41 c1 c5 07          	rol    $0x7,%r13d
   13281:	44 31 e9             	xor    %r13d,%ecx
   13284:	45 89 cd             	mov    %r9d,%r13d
   13287:	41 31 ed             	xor    %ebp,%r13d
   1328a:	45 21 fd             	and    %r15d,%r13d
   1328d:	45 31 cd             	xor    %r9d,%r13d
   13290:	45 01 eb             	add    %r13d,%r11d
   13293:	41 01 cb             	add    %ecx,%r11d
   13296:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   1329a:	44 01 d9             	add    %r11d,%ecx
   1329d:	41 89 db             	mov    %ebx,%r11d
   132a0:	45 8d 34 08          	lea    (%r8,%rcx,1),%r14d
   132a4:	41 89 d8             	mov    %ebx,%r8d
   132a7:	41 c1 cb 02          	ror    $0x2,%r11d
   132ab:	41 c1 c8 0d          	ror    $0xd,%r8d
   132af:	45 89 f5             	mov    %r14d,%r13d
   132b2:	45 31 d8             	xor    %r11d,%r8d
   132b5:	41 89 db             	mov    %ebx,%r11d
   132b8:	41 c1 c3 0a          	rol    $0xa,%r11d
   132bc:	45 31 d8             	xor    %r11d,%r8d
   132bf:	41 89 f3             	mov    %esi,%r11d
   132c2:	41 09 db             	or     %ebx,%r11d
   132c5:	41 21 c3             	and    %eax,%r11d
   132c8:	45 09 d3             	or     %r10d,%r11d
   132cb:	41 89 fa             	mov    %edi,%r10d
   132ce:	45 01 c3             	add    %r8d,%r11d
   132d1:	41 c1 c2 0f          	rol    $0xf,%r10d
   132d5:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
   132da:	41 01 cb             	add    %ecx,%r11d
   132dd:	89 f9                	mov    %edi,%ecx
   132df:	c1 ef 0a             	shr    $0xa,%edi
   132e2:	c1 c1 0d             	rol    $0xd,%ecx
   132e5:	44 31 d1             	xor    %r10d,%ecx
   132e8:	41 89 ea             	mov    %ebp,%r10d
   132eb:	31 f9                	xor    %edi,%ecx
   132ed:	03 14 24             	add    (%rsp),%edx
   132f0:	44 89 c7             	mov    %r8d,%edi
   132f3:	41 c1 cd 06          	ror    $0x6,%r13d
   132f7:	01 d1                	add    %edx,%ecx
   132f9:	44 89 c2             	mov    %r8d,%edx
   132fc:	c1 c7 0e             	rol    $0xe,%edi
   132ff:	45 31 fa             	xor    %r15d,%r10d
   13302:	c1 ca 07             	ror    $0x7,%edx
   13305:	41 c1 e8 03          	shr    $0x3,%r8d
   13309:	45 21 f2             	and    %r14d,%r10d
   1330c:	31 d7                	xor    %edx,%edi
   1330e:	44 89 f2             	mov    %r14d,%edx
   13311:	41 31 ea             	xor    %ebp,%r10d
   13314:	c1 ca 0b             	ror    $0xb,%edx
   13317:	44 31 c7             	xor    %r8d,%edi
   1331a:	41 31 d5             	xor    %edx,%r13d
   1331d:	44 89 f2             	mov    %r14d,%edx
   13320:	01 f9                	add    %edi,%ecx
   13322:	89 df                	mov    %ebx,%edi
   13324:	c1 c2 07             	rol    $0x7,%edx
   13327:	41 89 4c 24 64       	mov    %ecx,0x64(%r12)
   1332c:	41 01 c9             	add    %ecx,%r9d
   1332f:	44 89 d9             	mov    %r11d,%ecx
   13332:	41 31 d5             	xor    %edx,%r13d
   13335:	44 89 da             	mov    %r11d,%edx
   13338:	c1 c9 0d             	ror    $0xd,%ecx
   1333b:	44 21 df             	and    %r11d,%edi
   1333e:	c1 ca 02             	ror    $0x2,%edx
   13341:	45 01 d1             	add    %r10d,%r9d
   13344:	31 ca                	xor    %ecx,%edx
   13346:	44 89 d9             	mov    %r11d,%ecx
   13349:	45 01 e9             	add    %r13d,%r9d
   1334c:	44 03 4c 24 28       	add    0x28(%rsp),%r9d
   13351:	c1 c1 0a             	rol    $0xa,%ecx
   13354:	44 01 c8             	add    %r9d,%eax
   13357:	31 d1                	xor    %edx,%ecx
   13359:	89 da                	mov    %ebx,%edx
   1335b:	44 09 da             	or     %r11d,%edx
   1335e:	21 f2                	and    %esi,%edx
   13360:	09 fa                	or     %edi,%edx
   13362:	01 ca                	add    %ecx,%edx
   13364:	49 83 c4 20          	add    $0x20,%r12
   13368:	48 83 44 24 08 20    	addq   $0x20,0x8(%rsp)
   1336e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   13373:	45 8d 2c 11          	lea    (%r9,%rdx,1),%r13d
   13377:	4c 39 64 24 30       	cmp    %r12,0x30(%rsp)
   1337c:	0f 85 76 fa ff ff    	jne    12df8 <mbedtls_internal_sha256_process+0x508>
   13382:	89 84 24 68 01 00 00 	mov    %eax,0x168(%rsp)
   13389:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1338e:	31 c0                	xor    %eax,%eax
   13390:	89 54 24 54          	mov    %edx,0x54(%rsp)
   13394:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   13399:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
   133a0:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
   133a7:	00 
   133a8:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
   133af:	00 
   133b0:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
   133b7:	00 
   133b8:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
   133bf:	00 
   133c0:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
   133c7:	89 b4 24 64 01 00 00 	mov    %esi,0x164(%rsp)
   133ce:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
   133d3:	eb 07                	jmp    133dc <mbedtls_internal_sha256_process+0xaec>
   133d5:	0f 1f 00             	nopl   (%rax)
   133d8:	44 8b 2c 01          	mov    (%rcx,%rax,1),%r13d
   133dc:	44 01 6c 02 08       	add    %r13d,0x8(%rdx,%rax,1)
   133e1:	48 83 c0 04          	add    $0x4,%rax
   133e5:	48 83 f8 20          	cmp    $0x20,%rax
   133e9:	75 ed                	jne    133d8 <mbedtls_internal_sha256_process+0xae8>
   133eb:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   133f0:	be 28 01 00 00       	mov    $0x128,%esi
   133f5:	e8 b6 bc ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   133fa:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   13401:	00 
   13402:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13409:	00 00 
   1340b:	75 14                	jne    13421 <mbedtls_internal_sha256_process+0xb31>
   1340d:	48 81 c4 88 01 00 00 	add    $0x188,%rsp
   13414:	31 c0                	xor    %eax,%eax
   13416:	5b                   	pop    %rbx
   13417:	5d                   	pop    %rbp
   13418:	41 5c                	pop    %r12
   1341a:	41 5d                	pop    %r13
   1341c:	41 5e                	pop    %r14
   1341e:	41 5f                	pop    %r15
   13420:	c3                   	retq   
   13421:	e8 4a 0e ff ff       	callq  4270 <__stack_chk_fail@plt>
   13426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1342d:	00 00 00 

0000000000013430 <mbedtls_sha256_update.part.0>:
   13430:	41 56                	push   %r14
   13432:	41 55                	push   %r13
   13434:	49 89 d5             	mov    %rdx,%r13
   13437:	ba 40 00 00 00       	mov    $0x40,%edx
   1343c:	41 54                	push   %r12
   1343e:	49 89 fc             	mov    %rdi,%r12
   13441:	55                   	push   %rbp
   13442:	48 89 f5             	mov    %rsi,%rbp
   13445:	53                   	push   %rbx
   13446:	8b 07                	mov    (%rdi),%eax
   13448:	41 89 c6             	mov    %eax,%r14d
   1344b:	41 83 e6 3f          	and    $0x3f,%r14d
   1344f:	44 29 f2             	sub    %r14d,%edx
   13452:	44 01 e8             	add    %r13d,%eax
   13455:	89 07                	mov    %eax,(%rdi)
   13457:	89 d3                	mov    %edx,%ebx
   13459:	73 04                	jae    1345f <mbedtls_sha256_update.part.0+0x2f>
   1345b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   1345f:	45 85 f6             	test   %r14d,%r14d
   13462:	74 05                	je     13469 <mbedtls_sha256_update.part.0+0x39>
   13464:	4c 39 eb             	cmp    %r13,%rbx
   13467:	76 69                	jbe    134d2 <mbedtls_sha256_update.part.0+0xa2>
   13469:	31 db                	xor    %ebx,%ebx
   1346b:	49 83 fd 3f          	cmp    $0x3f,%r13
   1346f:	0f 86 69 01 00 00    	jbe    135de <mbedtls_sha256_update.part.0+0x1ae>
   13475:	0f 1f 00             	nopl   (%rax)
   13478:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   1347d:	4c 89 e7             	mov    %r12,%rdi
   13480:	e8 6b f4 ff ff       	callq  128f0 <mbedtls_internal_sha256_process>
   13485:	85 c0                	test   %eax,%eax
   13487:	75 37                	jne    134c0 <mbedtls_sha256_update.part.0+0x90>
   13489:	48 83 c3 40          	add    $0x40,%rbx
   1348d:	4c 89 e8             	mov    %r13,%rax
   13490:	48 29 d8             	sub    %rbx,%rax
   13493:	48 83 f8 3f          	cmp    $0x3f,%rax
   13497:	77 df                	ja     13478 <mbedtls_sha256_update.part.0+0x48>
   13499:	48 83 fb 3f          	cmp    $0x3f,%rbx
   1349d:	76 21                	jbe    134c0 <mbedtls_sha256_update.part.0+0x90>
   1349f:	48 01 dd             	add    %rbx,%rbp
   134a2:	45 31 c0             	xor    %r8d,%r8d
   134a5:	48 85 c0             	test   %rax,%rax
   134a8:	0f 85 b4 00 00 00    	jne    13562 <mbedtls_sha256_update.part.0+0x132>
   134ae:	5b                   	pop    %rbx
   134af:	44 89 c0             	mov    %r8d,%eax
   134b2:	5d                   	pop    %rbp
   134b3:	41 5c                	pop    %r12
   134b5:	41 5d                	pop    %r13
   134b7:	41 5e                	pop    %r14
   134b9:	c3                   	retq   
   134ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   134c0:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   134c6:	5b                   	pop    %rbx
   134c7:	5d                   	pop    %rbp
   134c8:	44 89 c0             	mov    %r8d,%eax
   134cb:	41 5c                	pop    %r12
   134cd:	41 5d                	pop    %r13
   134cf:	41 5e                	pop    %r14
   134d1:	c3                   	retq   
   134d2:	4d 8d 44 24 28       	lea    0x28(%r12),%r8
   134d7:	44 89 f0             	mov    %r14d,%eax
   134da:	4c 01 c0             	add    %r8,%rax
   134dd:	83 fa 08             	cmp    $0x8,%edx
   134e0:	73 3c                	jae    1351e <mbedtls_sha256_update.part.0+0xee>
   134e2:	f6 c2 04             	test   $0x4,%dl
   134e5:	0f 85 fb 00 00 00    	jne    135e6 <mbedtls_sha256_update.part.0+0x1b6>
   134eb:	85 d2                	test   %edx,%edx
   134ed:	74 0f                	je     134fe <mbedtls_sha256_update.part.0+0xce>
   134ef:	0f b6 4d 00          	movzbl 0x0(%rbp),%ecx
   134f3:	83 e2 02             	and    $0x2,%edx
   134f6:	88 08                	mov    %cl,(%rax)
   134f8:	0f 85 09 01 00 00    	jne    13607 <mbedtls_sha256_update.part.0+0x1d7>
   134fe:	4c 89 c6             	mov    %r8,%rsi
   13501:	4c 89 e7             	mov    %r12,%rdi
   13504:	e8 e7 f3 ff ff       	callq  128f0 <mbedtls_internal_sha256_process>
   13509:	41 89 c0             	mov    %eax,%r8d
   1350c:	85 c0                	test   %eax,%eax
   1350e:	75 9e                	jne    134ae <mbedtls_sha256_update.part.0+0x7e>
   13510:	48 01 dd             	add    %rbx,%rbp
   13513:	49 29 dd             	sub    %rbx,%r13
   13516:	45 31 f6             	xor    %r14d,%r14d
   13519:	e9 4b ff ff ff       	jmpq   13469 <mbedtls_sha256_update.part.0+0x39>
   1351e:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   13522:	48 8d 70 08          	lea    0x8(%rax),%rsi
   13526:	49 89 e9             	mov    %rbp,%r9
   13529:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1352d:	48 89 08             	mov    %rcx,(%rax)
   13530:	48 8b 4c 1d f8       	mov    -0x8(%rbp,%rbx,1),%rcx
   13535:	48 89 4c 18 f8       	mov    %rcx,-0x8(%rax,%rbx,1)
   1353a:	48 29 f0             	sub    %rsi,%rax
   1353d:	01 c2                	add    %eax,%edx
   1353f:	49 29 c1             	sub    %rax,%r9
   13542:	83 e2 f8             	and    $0xfffffff8,%edx
   13545:	83 fa 08             	cmp    $0x8,%edx
   13548:	72 b4                	jb     134fe <mbedtls_sha256_update.part.0+0xce>
   1354a:	83 e2 f8             	and    $0xfffffff8,%edx
   1354d:	31 c0                	xor    %eax,%eax
   1354f:	89 c1                	mov    %eax,%ecx
   13551:	83 c0 08             	add    $0x8,%eax
   13554:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   13558:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   1355c:	39 d0                	cmp    %edx,%eax
   1355e:	72 ef                	jb     1354f <mbedtls_sha256_update.part.0+0x11f>
   13560:	eb 9c                	jmp    134fe <mbedtls_sha256_update.part.0+0xce>
   13562:	4b 8d 4c 34 28       	lea    0x28(%r12,%r14,1),%rcx
   13567:	89 c2                	mov    %eax,%edx
   13569:	83 f8 08             	cmp    $0x8,%eax
   1356c:	73 29                	jae    13597 <mbedtls_sha256_update.part.0+0x167>
   1356e:	a8 04                	test   $0x4,%al
   13570:	0f 85 82 00 00 00    	jne    135f8 <mbedtls_sha256_update.part.0+0x1c8>
   13576:	85 d2                	test   %edx,%edx
   13578:	74 15                	je     1358f <mbedtls_sha256_update.part.0+0x15f>
   1357a:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1357e:	88 01                	mov    %al,(%rcx)
   13580:	f6 c2 02             	test   $0x2,%dl
   13583:	74 0a                	je     1358f <mbedtls_sha256_update.part.0+0x15f>
   13585:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   1358a:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   1358f:	45 31 c0             	xor    %r8d,%r8d
   13592:	e9 17 ff ff ff       	jmpq   134ae <mbedtls_sha256_update.part.0+0x7e>
   13597:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1359b:	48 89 11             	mov    %rdx,(%rcx)
   1359e:	89 c2                	mov    %eax,%edx
   135a0:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   135a5:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   135aa:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   135ae:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   135b2:	48 29 f1             	sub    %rsi,%rcx
   135b5:	48 89 ca             	mov    %rcx,%rdx
   135b8:	48 29 cd             	sub    %rcx,%rbp
   135bb:	01 c2                	add    %eax,%edx
   135bd:	83 e2 f8             	and    $0xfffffff8,%edx
   135c0:	83 fa 08             	cmp    $0x8,%edx
   135c3:	72 ca                	jb     1358f <mbedtls_sha256_update.part.0+0x15f>
   135c5:	83 e2 f8             	and    $0xfffffff8,%edx
   135c8:	31 c0                	xor    %eax,%eax
   135ca:	89 c1                	mov    %eax,%ecx
   135cc:	83 c0 08             	add    $0x8,%eax
   135cf:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   135d4:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   135d8:	39 d0                	cmp    %edx,%eax
   135da:	72 ee                	jb     135ca <mbedtls_sha256_update.part.0+0x19a>
   135dc:	eb b1                	jmp    1358f <mbedtls_sha256_update.part.0+0x15f>
   135de:	4c 89 e8             	mov    %r13,%rax
   135e1:	e9 bc fe ff ff       	jmpq   134a2 <mbedtls_sha256_update.part.0+0x72>
   135e6:	8b 55 00             	mov    0x0(%rbp),%edx
   135e9:	89 10                	mov    %edx,(%rax)
   135eb:	8b 54 1d fc          	mov    -0x4(%rbp,%rbx,1),%edx
   135ef:	89 54 18 fc          	mov    %edx,-0x4(%rax,%rbx,1)
   135f3:	e9 06 ff ff ff       	jmpq   134fe <mbedtls_sha256_update.part.0+0xce>
   135f8:	8b 45 00             	mov    0x0(%rbp),%eax
   135fb:	89 01                	mov    %eax,(%rcx)
   135fd:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   13601:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   13605:	eb 88                	jmp    1358f <mbedtls_sha256_update.part.0+0x15f>
   13607:	0f b7 54 1d fe       	movzwl -0x2(%rbp,%rbx,1),%edx
   1360c:	66 89 54 18 fe       	mov    %dx,-0x2(%rax,%rbx,1)
   13611:	e9 e8 fe ff ff       	jmpq   134fe <mbedtls_sha256_update.part.0+0xce>
   13616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1361d:	00 00 00 

0000000000013620 <mbedtls_sha256_update>:
   13620:	f3 0f 1e fa          	endbr64 
   13624:	48 85 d2             	test   %rdx,%rdx
   13627:	74 07                	je     13630 <mbedtls_sha256_update+0x10>
   13629:	e9 02 fe ff ff       	jmpq   13430 <mbedtls_sha256_update.part.0>
   1362e:	66 90                	xchg   %ax,%ax
   13630:	31 c0                	xor    %eax,%eax
   13632:	c3                   	retq   
   13633:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1363a:	00 00 00 00 
   1363e:	66 90                	xchg   %ax,%ax

0000000000013640 <mbedtls_sha256_finish>:
   13640:	f3 0f 1e fa          	endbr64 
   13644:	41 54                	push   %r12
   13646:	4c 8d 67 28          	lea    0x28(%rdi),%r12
   1364a:	55                   	push   %rbp
   1364b:	48 89 f5             	mov    %rsi,%rbp
   1364e:	53                   	push   %rbx
   1364f:	8b 07                	mov    (%rdi),%eax
   13651:	48 89 fb             	mov    %rdi,%rbx
   13654:	83 e0 3f             	and    $0x3f,%eax
   13657:	8d 48 01             	lea    0x1(%rax),%ecx
   1365a:	c6 44 07 28 80       	movb   $0x80,0x28(%rdi,%rax,1)
   1365f:	89 c8                	mov    %ecx,%eax
   13661:	4c 01 e0             	add    %r12,%rax
   13664:	83 f9 38             	cmp    $0x38,%ecx
   13667:	77 57                	ja     136c0 <mbedtls_sha256_finish+0x80>
   13669:	ba 38 00 00 00       	mov    $0x38,%edx
   1366e:	31 ff                	xor    %edi,%edi
   13670:	29 ca                	sub    %ecx,%edx
   13672:	83 fa 08             	cmp    $0x8,%edx
   13675:	72 79                	jb     136f0 <mbedtls_sha256_finish+0xb0>
   13677:	89 d1                	mov    %edx,%ecx
   13679:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13680:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   13687:	00 00 
   13689:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1368d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   13691:	48 29 c8             	sub    %rcx,%rax
   13694:	01 c2                	add    %eax,%edx
   13696:	83 e2 f8             	and    $0xfffffff8,%edx
   13699:	83 fa 08             	cmp    $0x8,%edx
   1369c:	0f 82 8b 00 00 00    	jb     1372d <mbedtls_sha256_finish+0xed>
   136a2:	83 e2 f8             	and    $0xfffffff8,%edx
   136a5:	31 c0                	xor    %eax,%eax
   136a7:	89 c6                	mov    %eax,%esi
   136a9:	83 c0 08             	add    $0x8,%eax
   136ac:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   136b0:	39 d0                	cmp    %edx,%eax
   136b2:	72 f3                	jb     136a7 <mbedtls_sha256_finish+0x67>
   136b4:	eb 77                	jmp    1372d <mbedtls_sha256_finish+0xed>
   136b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   136bd:	00 00 00 
   136c0:	ba 40 00 00 00       	mov    $0x40,%edx
   136c5:	29 ca                	sub    %ecx,%edx
   136c7:	89 d1                	mov    %edx,%ecx
   136c9:	74 0f                	je     136da <mbedtls_sha256_finish+0x9a>
   136cb:	31 d2                	xor    %edx,%edx
   136cd:	89 d6                	mov    %edx,%esi
   136cf:	83 c2 01             	add    $0x1,%edx
   136d2:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   136d6:	39 ca                	cmp    %ecx,%edx
   136d8:	72 f3                	jb     136cd <mbedtls_sha256_finish+0x8d>
   136da:	4c 89 e6             	mov    %r12,%rsi
   136dd:	48 89 df             	mov    %rbx,%rdi
   136e0:	e8 0b f2 ff ff       	callq  128f0 <mbedtls_internal_sha256_process>
   136e5:	85 c0                	test   %eax,%eax
   136e7:	74 27                	je     13710 <mbedtls_sha256_finish+0xd0>
   136e9:	5b                   	pop    %rbx
   136ea:	5d                   	pop    %rbp
   136eb:	41 5c                	pop    %r12
   136ed:	c3                   	retq   
   136ee:	66 90                	xchg   %ax,%ax
   136f0:	f6 c2 04             	test   $0x4,%dl
   136f3:	0f 85 b7 00 00 00    	jne    137b0 <mbedtls_sha256_finish+0x170>
   136f9:	85 d2                	test   %edx,%edx
   136fb:	74 30                	je     1372d <mbedtls_sha256_finish+0xed>
   136fd:	c6 00 00             	movb   $0x0,(%rax)
   13700:	f6 c2 02             	test   $0x2,%dl
   13703:	74 28                	je     1372d <mbedtls_sha256_finish+0xed>
   13705:	31 c9                	xor    %ecx,%ecx
   13707:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   1370c:	eb 1f                	jmp    1372d <mbedtls_sha256_finish+0xed>
   1370e:	66 90                	xchg   %ax,%ax
   13710:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13714:	0f 11 43 28          	movups %xmm0,0x28(%rbx)
   13718:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   1371f:	00 00 
   13721:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   13727:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   1372d:	8b 13                	mov    (%rbx),%edx
   1372f:	8b 43 04             	mov    0x4(%rbx),%eax
   13732:	4c 89 e6             	mov    %r12,%rsi
   13735:	48 89 df             	mov    %rbx,%rdi
   13738:	89 d1                	mov    %edx,%ecx
   1373a:	c1 e0 03             	shl    $0x3,%eax
   1373d:	c1 e9 1d             	shr    $0x1d,%ecx
   13740:	c1 e2 03             	shl    $0x3,%edx
   13743:	09 c8                	or     %ecx,%eax
   13745:	0f ca                	bswap  %edx
   13747:	89 53 64             	mov    %edx,0x64(%rbx)
   1374a:	0f c8                	bswap  %eax
   1374c:	89 43 60             	mov    %eax,0x60(%rbx)
   1374f:	e8 9c f1 ff ff       	callq  128f0 <mbedtls_internal_sha256_process>
   13754:	85 c0                	test   %eax,%eax
   13756:	75 91                	jne    136e9 <mbedtls_sha256_finish+0xa9>
   13758:	8b 53 08             	mov    0x8(%rbx),%edx
   1375b:	0f ca                	bswap  %edx
   1375d:	89 55 00             	mov    %edx,0x0(%rbp)
   13760:	8b 53 0c             	mov    0xc(%rbx),%edx
   13763:	0f ca                	bswap  %edx
   13765:	89 55 04             	mov    %edx,0x4(%rbp)
   13768:	8b 53 10             	mov    0x10(%rbx),%edx
   1376b:	0f ca                	bswap  %edx
   1376d:	89 55 08             	mov    %edx,0x8(%rbp)
   13770:	8b 53 14             	mov    0x14(%rbx),%edx
   13773:	0f ca                	bswap  %edx
   13775:	89 55 0c             	mov    %edx,0xc(%rbp)
   13778:	8b 53 18             	mov    0x18(%rbx),%edx
   1377b:	0f ca                	bswap  %edx
   1377d:	89 55 10             	mov    %edx,0x10(%rbp)
   13780:	8b 53 1c             	mov    0x1c(%rbx),%edx
   13783:	0f ca                	bswap  %edx
   13785:	89 55 14             	mov    %edx,0x14(%rbp)
   13788:	8b 53 20             	mov    0x20(%rbx),%edx
   1378b:	0f ca                	bswap  %edx
   1378d:	89 55 18             	mov    %edx,0x18(%rbp)
   13790:	8b 53 68             	mov    0x68(%rbx),%edx
   13793:	85 d2                	test   %edx,%edx
   13795:	0f 85 4e ff ff ff    	jne    136e9 <mbedtls_sha256_finish+0xa9>
   1379b:	8b 53 24             	mov    0x24(%rbx),%edx
   1379e:	5b                   	pop    %rbx
   1379f:	0f ca                	bswap  %edx
   137a1:	89 55 1c             	mov    %edx,0x1c(%rbp)
   137a4:	5d                   	pop    %rbp
   137a5:	41 5c                	pop    %r12
   137a7:	c3                   	retq   
   137a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   137af:	00 
   137b0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   137b6:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   137bd:	00 
   137be:	e9 6a ff ff ff       	jmpq   1372d <mbedtls_sha256_finish+0xed>
   137c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   137ca:	00 00 00 00 
   137ce:	66 90                	xchg   %ax,%ax

00000000000137d0 <mbedtls_sha256_common_self_test>:
   137d0:	41 57                	push   %r15
   137d2:	41 56                	push   %r14
   137d4:	41 55                	push   %r13
   137d6:	41 89 f5             	mov    %esi,%r13d
   137d9:	41 54                	push   %r12
   137db:	41 89 fc             	mov    %edi,%r12d
   137de:	bf 00 04 00 00       	mov    $0x400,%edi
   137e3:	55                   	push   %rbp
   137e4:	48 8d 2d b5 28 01 00 	lea    0x128b5(%rip),%rbp        # 260a0 <sha224_test_sum>
   137eb:	53                   	push   %rbx
   137ec:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   137f3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   137fa:	00 00 
   137fc:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   13803:	00 
   13804:	31 c0                	xor    %eax,%eax
   13806:	85 f6                	test   %esi,%esi
   13808:	48 8d 05 31 28 01 00 	lea    0x12831(%rip),%rax        # 26040 <sha256_test_sum>
   1380f:	be 01 00 00 00       	mov    $0x1,%esi
   13814:	48 0f 44 e8          	cmove  %rax,%rbp
   13818:	e8 b3 0a ff ff       	callq  42d0 <calloc@plt>
   1381d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13822:	48 85 c0             	test   %rax,%rax
   13825:	0f 84 a9 02 00 00    	je     13ad4 <mbedtls_sha256_common_self_test+0x304>
   1382b:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   13830:	31 c0                	xor    %eax,%eax
   13832:	b9 0d 00 00 00       	mov    $0xd,%ecx
   13837:	31 db                	xor    %ebx,%ebx
   13839:	4c 89 f7             	mov    %r14,%rdi
   1383c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1383f:	b8 08 00 00 00       	mov    $0x8,%eax
   13844:	44 29 e8             	sub    %r13d,%eax
   13847:	89 c1                	mov    %eax,%ecx
   13849:	c1 e0 02             	shl    $0x2,%eax
   1384c:	c1 e1 05             	shl    $0x5,%ecx
   1384f:	48 89 04 24          	mov    %rax,(%rsp)
   13853:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   13857:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1385d:	45 85 e4             	test   %r12d,%r12d
   13860:	0f 85 ea 01 00 00    	jne    13a50 <mbedtls_sha256_common_self_test+0x280>
   13866:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1386d:	00 00 
   1386f:	45 85 ed             	test   %r13d,%r13d
   13872:	0f 85 28 01 00 00    	jne    139a0 <mbedtls_sha256_common_self_test+0x1d0>
   13878:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   1387f:	ae 67 bb 
   13882:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
   13889:	00 
   1388a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1388f:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   13896:	f5 4f a5 
   13899:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1389e:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   138a5:	68 05 9b 
   138a8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   138ad:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   138b4:	cd e0 5b 
   138b7:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   138bc:	48 83 fb 02          	cmp    $0x2,%rbx
   138c0:	0f 84 28 01 00 00    	je     139ee <mbedtls_sha256_common_self_test+0x21e>
   138c6:	48 8d 05 33 28 01 00 	lea    0x12833(%rip),%rax        # 26100 <sha_test_buflen>
   138cd:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   138d1:	48 85 d2             	test   %rdx,%rdx
   138d4:	74 29                	je     138ff <mbedtls_sha256_common_self_test+0x12f>
   138d6:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   138dd:	00 
   138de:	4c 89 f7             	mov    %r14,%rdi
   138e1:	48 29 d8             	sub    %rbx,%rax
   138e4:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
   138e8:	48 8d 05 31 28 01 00 	lea    0x12831(%rip),%rax        # 26120 <sha_test_buf>
   138ef:	48 01 c6             	add    %rax,%rsi
   138f2:	e8 39 fb ff ff       	callq  13430 <mbedtls_sha256_update.part.0>
   138f7:	85 c0                	test   %eax,%eax
   138f9:	0f 85 3f 01 00 00    	jne    13a3e <mbedtls_sha256_common_self_test+0x26e>
   138ff:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   13906:	00 
   13907:	4c 89 f7             	mov    %r14,%rdi
   1390a:	4c 89 fe             	mov    %r15,%rsi
   1390d:	e8 2e fd ff ff       	callq  13640 <mbedtls_sha256_finish>
   13912:	85 c0                	test   %eax,%eax
   13914:	0f 85 24 01 00 00    	jne    13a3e <mbedtls_sha256_common_self_test+0x26e>
   1391a:	48 8b 14 24          	mov    (%rsp),%rdx
   1391e:	48 89 ee             	mov    %rbp,%rsi
   13921:	4c 89 ff             	mov    %r15,%rdi
   13924:	e8 87 09 ff ff       	callq  42b0 <memcmp@plt>
   13929:	85 c0                	test   %eax,%eax
   1392b:	0f 85 8f 01 00 00    	jne    13ac0 <mbedtls_sha256_common_self_test+0x2f0>
   13931:	45 85 e4             	test   %r12d,%r12d
   13934:	0f 85 36 01 00 00    	jne    13a70 <mbedtls_sha256_common_self_test+0x2a0>
   1393a:	48 83 c3 01          	add    $0x1,%rbx
   1393e:	48 83 c5 20          	add    $0x20,%rbp
   13942:	48 83 fb 03          	cmp    $0x3,%rbx
   13946:	0f 85 11 ff ff ff    	jne    1385d <mbedtls_sha256_common_self_test+0x8d>
   1394c:	45 85 e4             	test   %r12d,%r12d
   1394f:	0f 85 33 01 00 00    	jne    13a88 <mbedtls_sha256_common_self_test+0x2b8>
   13955:	be 6c 00 00 00       	mov    $0x6c,%esi
   1395a:	4c 89 f7             	mov    %r14,%rdi
   1395d:	45 89 e5             	mov    %r12d,%r13d
   13960:	e8 4b b7 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   13965:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1396a:	e8 81 08 ff ff       	callq  41f0 <free@plt>
   1396f:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   13976:	00 
   13977:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1397e:	00 00 
   13980:	0f 85 6e 01 00 00    	jne    13af4 <mbedtls_sha256_common_self_test+0x324>
   13986:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   1398d:	44 89 e8             	mov    %r13d,%eax
   13990:	5b                   	pop    %rbx
   13991:	5d                   	pop    %rbp
   13992:	41 5c                	pop    %r12
   13994:	41 5d                	pop    %r13
   13996:	41 5e                	pop    %r14
   13998:	41 5f                	pop    %r15
   1399a:	c3                   	retq   
   1399b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   139a0:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   139a7:	d5 7c 36 
   139aa:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
   139b1:	00 
   139b2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   139b7:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   139be:	59 0e f7 
   139c1:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   139c6:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   139cd:	15 58 68 
   139d0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   139d5:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   139dc:	4f fa be 
   139df:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   139e4:	48 83 fb 02          	cmp    $0x2,%rbx
   139e8:	0f 85 d8 fe ff ff    	jne    138c6 <mbedtls_sha256_common_self_test+0xf6>
   139ee:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   139f3:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   139f8:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   139fd:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   13a04:	61 61 61 
   13a07:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   13a0c:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   13a12:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13a15:	eb 13                	jmp    13a2a <mbedtls_sha256_common_self_test+0x25a>
   13a17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13a1e:	00 00 
   13a20:	41 83 ef 01          	sub    $0x1,%r15d
   13a24:	0f 84 a0 00 00 00    	je     13aca <mbedtls_sha256_common_self_test+0x2fa>
   13a2a:	ba e8 03 00 00       	mov    $0x3e8,%edx
   13a2f:	48 89 de             	mov    %rbx,%rsi
   13a32:	4c 89 f7             	mov    %r14,%rdi
   13a35:	e8 f6 f9 ff ff       	callq  13430 <mbedtls_sha256_update.part.0>
   13a3a:	85 c0                	test   %eax,%eax
   13a3c:	74 e2                	je     13a20 <mbedtls_sha256_common_self_test+0x250>
   13a3e:	89 c2                	mov    %eax,%edx
   13a40:	45 85 e4             	test   %r12d,%r12d
   13a43:	75 5b                	jne    13aa0 <mbedtls_sha256_common_self_test+0x2d0>
   13a45:	41 89 d4             	mov    %edx,%r12d
   13a48:	e9 08 ff ff ff       	jmpq   13955 <mbedtls_sha256_common_self_test+0x185>
   13a4d:	0f 1f 00             	nopl   (%rax)
   13a50:	8b 54 24 14          	mov    0x14(%rsp),%edx
   13a54:	8d 4b 01             	lea    0x1(%rbx),%ecx
   13a57:	48 8d 35 c6 25 01 00 	lea    0x125c6(%rip),%rsi        # 26024 <sha1_test_buf+0xc4>
   13a5e:	31 c0                	xor    %eax,%eax
   13a60:	bf 01 00 00 00       	mov    $0x1,%edi
   13a65:	e8 e6 08 ff ff       	callq  4350 <__printf_chk@plt>
   13a6a:	e9 f7 fd ff ff       	jmpq   13866 <mbedtls_sha256_common_self_test+0x96>
   13a6f:	90                   	nop
   13a70:	48 8d 3d 50 a6 00 00 	lea    0xa650(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   13a77:	e8 94 07 ff ff       	callq  4210 <puts@plt>
   13a7c:	e9 b9 fe ff ff       	jmpq   1393a <mbedtls_sha256_common_self_test+0x16a>
   13a81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13a88:	bf 0a 00 00 00       	mov    $0xa,%edi
   13a8d:	45 31 e4             	xor    %r12d,%r12d
   13a90:	e8 6b 07 ff ff       	callq  4200 <putchar@plt>
   13a95:	e9 bb fe ff ff       	jmpq   13955 <mbedtls_sha256_common_self_test+0x185>
   13a9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13aa0:	48 8d 3d 76 25 01 00 	lea    0x12576(%rip),%rdi        # 2601d <sha1_test_buf+0xbd>
   13aa7:	89 14 24             	mov    %edx,(%rsp)
   13aaa:	e8 61 07 ff ff       	callq  4210 <puts@plt>
   13aaf:	8b 14 24             	mov    (%rsp),%edx
   13ab2:	41 89 d4             	mov    %edx,%r12d
   13ab5:	e9 9b fe ff ff       	jmpq   13955 <mbedtls_sha256_common_self_test+0x185>
   13aba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13ac0:	ba 01 00 00 00       	mov    $0x1,%edx
   13ac5:	e9 76 ff ff ff       	jmpq   13a40 <mbedtls_sha256_common_self_test+0x270>
   13aca:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   13acf:	e9 2b fe ff ff       	jmpq   138ff <mbedtls_sha256_common_self_test+0x12f>
   13ad4:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   13ada:	45 85 e4             	test   %r12d,%r12d
   13add:	0f 84 8c fe ff ff    	je     1396f <mbedtls_sha256_common_self_test+0x19f>
   13ae3:	48 8d 3d 21 25 01 00 	lea    0x12521(%rip),%rdi        # 2600b <sha1_test_buf+0xab>
   13aea:	e8 21 07 ff ff       	callq  4210 <puts@plt>
   13aef:	e9 7b fe ff ff       	jmpq   1396f <mbedtls_sha256_common_self_test+0x19f>
   13af4:	e8 77 07 ff ff       	callq  4270 <__stack_chk_fail@plt>
   13af9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013b00 <mbedtls_sha256>:
   13b00:	f3 0f 1e fa          	endbr64 
   13b04:	41 55                	push   %r13
   13b06:	41 54                	push   %r12
   13b08:	55                   	push   %rbp
   13b09:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   13b0d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13b14:	00 00 
   13b16:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   13b1b:	31 c0                	xor    %eax,%eax
   13b1d:	83 f9 01             	cmp    $0x1,%ecx
   13b20:	0f 87 12 01 00 00    	ja     13c38 <mbedtls_sha256+0x138>
   13b26:	49 89 f0             	mov    %rsi,%r8
   13b29:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   13b2e:	49 89 f9             	mov    %rdi,%r9
   13b31:	49 89 d5             	mov    %rdx,%r13
   13b34:	48 89 f7             	mov    %rsi,%rdi
   13b37:	89 ca                	mov    %ecx,%edx
   13b39:	b9 0c 00 00 00       	mov    $0xc,%ecx
   13b3e:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   13b45:	00 
   13b46:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13b49:	85 d2                	test   %edx,%edx
   13b4b:	0f 84 9f 00 00 00    	je     13bf0 <mbedtls_sha256+0xf0>
   13b51:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   13b58:	d5 7c 36 
   13b5b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13b60:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   13b67:	59 0e f7 
   13b6a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13b6f:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   13b76:	15 58 68 
   13b79:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   13b7e:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   13b85:	4f fa be 
   13b88:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   13b8d:	89 54 24 68          	mov    %edx,0x68(%rsp)
   13b91:	48 89 e5             	mov    %rsp,%rbp
   13b94:	4d 85 c0             	test   %r8,%r8
   13b97:	74 15                	je     13bae <mbedtls_sha256+0xae>
   13b99:	4c 89 c2             	mov    %r8,%rdx
   13b9c:	4c 89 ce             	mov    %r9,%rsi
   13b9f:	48 89 ef             	mov    %rbp,%rdi
   13ba2:	e8 89 f8 ff ff       	callq  13430 <mbedtls_sha256_update.part.0>
   13ba7:	41 89 c4             	mov    %eax,%r12d
   13baa:	85 c0                	test   %eax,%eax
   13bac:	75 0e                	jne    13bbc <mbedtls_sha256+0xbc>
   13bae:	4c 89 ee             	mov    %r13,%rsi
   13bb1:	48 89 ef             	mov    %rbp,%rdi
   13bb4:	e8 87 fa ff ff       	callq  13640 <mbedtls_sha256_finish>
   13bb9:	41 89 c4             	mov    %eax,%r12d
   13bbc:	be 6c 00 00 00       	mov    $0x6c,%esi
   13bc1:	48 89 ef             	mov    %rbp,%rdi
   13bc4:	e8 e7 b4 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   13bc9:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   13bce:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13bd5:	00 00 
   13bd7:	75 67                	jne    13c40 <mbedtls_sha256+0x140>
   13bd9:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   13bdd:	44 89 e0             	mov    %r12d,%eax
   13be0:	5d                   	pop    %rbp
   13be1:	41 5c                	pop    %r12
   13be3:	41 5d                	pop    %r13
   13be5:	c3                   	retq   
   13be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13bed:	00 00 00 
   13bf0:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   13bf7:	ae 67 bb 
   13bfa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13bff:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   13c06:	f5 4f a5 
   13c09:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13c0e:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   13c15:	68 05 9b 
   13c18:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   13c1d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   13c24:	cd e0 5b 
   13c27:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   13c2c:	e9 5c ff ff ff       	jmpq   13b8d <mbedtls_sha256+0x8d>
   13c31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13c38:	41 bc 8c ff ff ff    	mov    $0xffffff8c,%r12d
   13c3e:	eb 89                	jmp    13bc9 <mbedtls_sha256+0xc9>
   13c40:	e8 2b 06 ff ff       	callq  4270 <__stack_chk_fail@plt>
   13c45:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   13c4c:	00 00 00 00 

0000000000013c50 <mbedtls_sha256_self_test>:
   13c50:	f3 0f 1e fa          	endbr64 
   13c54:	31 f6                	xor    %esi,%esi
   13c56:	e9 75 fb ff ff       	jmpq   137d0 <mbedtls_sha256_common_self_test>
   13c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000013c60 <mbedtls_sha224_self_test>:
   13c60:	f3 0f 1e fa          	endbr64 
   13c64:	be 01 00 00 00       	mov    $0x1,%esi
   13c69:	e9 62 fb ff ff       	jmpq   137d0 <mbedtls_sha256_common_self_test>
   13c6e:	66 90                	xchg   %ax,%ax

0000000000013c70 <mbedtls_sha512_init>:
   13c70:	f3 0f 1e fa          	endbr64 
   13c74:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   13c7b:	48 89 f9             	mov    %rdi,%rcx
   13c7e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   13c82:	31 c0                	xor    %eax,%eax
   13c84:	48 c7 87 c8 00 00 00 	movq   $0x0,0xc8(%rdi)
   13c8b:	00 00 00 00 
   13c8f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   13c93:	48 29 f9             	sub    %rdi,%rcx
   13c96:	81 c1 d8 00 00 00    	add    $0xd8,%ecx
   13c9c:	c1 e9 03             	shr    $0x3,%ecx
   13c9f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13ca2:	c3                   	retq   
   13ca3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   13caa:	00 00 00 00 
   13cae:	66 90                	xchg   %ax,%ax

0000000000013cb0 <mbedtls_sha512_free>:
   13cb0:	f3 0f 1e fa          	endbr64 
   13cb4:	48 85 ff             	test   %rdi,%rdi
   13cb7:	74 0f                	je     13cc8 <mbedtls_sha512_free+0x18>
   13cb9:	be d8 00 00 00       	mov    $0xd8,%esi
   13cbe:	e9 ed b3 ff ff       	jmpq   f0b0 <mbedtls_platform_zeroize>
   13cc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13cc8:	c3                   	retq   
   13cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013cd0 <mbedtls_sha512_clone>:
   13cd0:	f3 0f 1e fa          	endbr64 
   13cd4:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   13cd8:	0f 11 07             	movups %xmm0,(%rdi)
   13cdb:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   13ce0:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   13ce4:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   13ce9:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   13ced:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   13cf2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   13cf6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   13cfb:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   13cff:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   13d04:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
   13d08:	f3 0f 6f 76 60       	movdqu 0x60(%rsi),%xmm6
   13d0d:	0f 11 77 60          	movups %xmm6,0x60(%rdi)
   13d11:	f3 0f 6f 7e 70       	movdqu 0x70(%rsi),%xmm7
   13d16:	0f 11 7f 70          	movups %xmm7,0x70(%rdi)
   13d1a:	f3 0f 6f 86 80 00 00 	movdqu 0x80(%rsi),%xmm0
   13d21:	00 
   13d22:	0f 11 87 80 00 00 00 	movups %xmm0,0x80(%rdi)
   13d29:	f3 0f 6f 8e 90 00 00 	movdqu 0x90(%rsi),%xmm1
   13d30:	00 
   13d31:	0f 11 8f 90 00 00 00 	movups %xmm1,0x90(%rdi)
   13d38:	f3 0f 6f 96 a0 00 00 	movdqu 0xa0(%rsi),%xmm2
   13d3f:	00 
   13d40:	0f 11 97 a0 00 00 00 	movups %xmm2,0xa0(%rdi)
   13d47:	f3 0f 6f 9e b0 00 00 	movdqu 0xb0(%rsi),%xmm3
   13d4e:	00 
   13d4f:	0f 11 9f b0 00 00 00 	movups %xmm3,0xb0(%rdi)
   13d56:	f3 0f 6f a6 c0 00 00 	movdqu 0xc0(%rsi),%xmm4
   13d5d:	00 
   13d5e:	0f 11 a7 c0 00 00 00 	movups %xmm4,0xc0(%rdi)
   13d65:	48 8b 86 d0 00 00 00 	mov    0xd0(%rsi),%rax
   13d6c:	48 89 87 d0 00 00 00 	mov    %rax,0xd0(%rdi)
   13d73:	c3                   	retq   
   13d74:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   13d7b:	00 00 00 00 
   13d7f:	90                   	nop

0000000000013d80 <mbedtls_sha512_starts>:
   13d80:	f3 0f 1e fa          	endbr64 
   13d84:	83 fe 01             	cmp    $0x1,%esi
   13d87:	0f 87 13 01 00 00    	ja     13ea0 <mbedtls_sha512_starts+0x120>
   13d8d:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   13d94:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   13d9b:	00 
   13d9c:	85 f6                	test   %esi,%esi
   13d9e:	0f 84 7c 00 00 00    	je     13e20 <mbedtls_sha512_starts+0xa0>
   13da4:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   13dab:	9d bb cb 
   13dae:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   13db4:	48 89 47 10          	mov    %rax,0x10(%rdi)
   13db8:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   13dbf:	29 9a 62 
   13dc2:	48 89 47 18          	mov    %rax,0x18(%rdi)
   13dc6:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   13dcd:	01 59 91 
   13dd0:	48 89 47 20          	mov    %rax,0x20(%rdi)
   13dd4:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   13ddb:	ec 2f 15 
   13dde:	48 89 47 28          	mov    %rax,0x28(%rdi)
   13de2:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   13de9:	26 33 67 
   13dec:	48 89 47 30          	mov    %rax,0x30(%rdi)
   13df0:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   13df7:	4a b4 8e 
   13dfa:	48 89 47 38          	mov    %rax,0x38(%rdi)
   13dfe:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   13e05:	2e 0c db 
   13e08:	48 89 47 40          	mov    %rax,0x40(%rdi)
   13e0c:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   13e13:	48 b5 47 
   13e16:	48 89 47 48          	mov    %rax,0x48(%rdi)
   13e1a:	31 c0                	xor    %eax,%eax
   13e1c:	c3                   	retq   
   13e1d:	0f 1f 00             	nopl   (%rax)
   13e20:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   13e27:	e6 09 6a 
   13e2a:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   13e30:	48 89 47 10          	mov    %rax,0x10(%rdi)
   13e34:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   13e3b:	ae 67 bb 
   13e3e:	48 89 47 18          	mov    %rax,0x18(%rdi)
   13e42:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   13e49:	f3 6e 3c 
   13e4c:	48 89 47 20          	mov    %rax,0x20(%rdi)
   13e50:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   13e57:	f5 4f a5 
   13e5a:	48 89 47 28          	mov    %rax,0x28(%rdi)
   13e5e:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   13e65:	52 0e 51 
   13e68:	48 89 47 30          	mov    %rax,0x30(%rdi)
   13e6c:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   13e73:	68 05 9b 
   13e76:	48 89 47 38          	mov    %rax,0x38(%rdi)
   13e7a:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   13e81:	d9 83 1f 
   13e84:	48 89 47 40          	mov    %rax,0x40(%rdi)
   13e88:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   13e8f:	cd e0 5b 
   13e92:	48 89 47 48          	mov    %rax,0x48(%rdi)
   13e96:	31 c0                	xor    %eax,%eax
   13e98:	c3                   	retq   
   13e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13ea0:	b8 8b ff ff ff       	mov    $0xffffff8b,%eax
   13ea5:	c3                   	retq   
   13ea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13ead:	00 00 00 

0000000000013eb0 <mbedtls_internal_sha512_process>:
   13eb0:	f3 0f 1e fa          	endbr64 
   13eb4:	41 57                	push   %r15
   13eb6:	48 89 f9             	mov    %rdi,%rcx
   13eb9:	41 56                	push   %r14
   13ebb:	41 55                	push   %r13
   13ebd:	41 54                	push   %r12
   13ebf:	55                   	push   %rbp
   13ec0:	53                   	push   %rbx
   13ec1:	48 81 ec 28 03 00 00 	sub    $0x328,%rsp
   13ec8:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   13ecd:	48 8d 9c 24 d0 02 00 	lea    0x2d0(%rsp),%rbx
   13ed4:	00 
   13ed5:	48 89 df             	mov    %rbx,%rdi
   13ed8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13edf:	00 00 
   13ee1:	48 89 84 24 18 03 00 	mov    %rax,0x318(%rsp)
   13ee8:	00 
   13ee9:	31 c0                	xor    %eax,%eax
   13eeb:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   13ef0:	48 8b 54 01 10       	mov    0x10(%rcx,%rax,1),%rdx
   13ef5:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   13ef9:	48 83 c0 08          	add    $0x8,%rax
   13efd:	48 83 f8 40          	cmp    $0x40,%rax
   13f01:	75 ed                	jne    13ef0 <mbedtls_internal_sha512_process+0x40>
   13f03:	31 c0                	xor    %eax,%eax
   13f05:	4c 8d 54 24 50       	lea    0x50(%rsp),%r10
   13f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13f10:	48 8b 14 06          	mov    (%rsi,%rax,1),%rdx
   13f14:	48 0f ca             	bswap  %rdx
   13f17:	49 89 14 02          	mov    %rdx,(%r10,%rax,1)
   13f1b:	48 83 c0 08          	add    $0x8,%rax
   13f1f:	48 3d 80 00 00 00    	cmp    $0x80,%rax
   13f25:	75 e9                	jne    13f10 <mbedtls_internal_sha512_process+0x60>
   13f27:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   13f2e:	00 
   13f2f:	4c 89 d1             	mov    %r10,%rcx
   13f32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13f38:	48 8b 41 70          	mov    0x70(%rcx),%rax
   13f3c:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   13f40:	48 83 c1 08          	add    $0x8,%rcx
   13f44:	48 89 c2             	mov    %rax,%rdx
   13f47:	49 89 c0             	mov    %rax,%r8
   13f4a:	48 c1 e8 06          	shr    $0x6,%rax
   13f4e:	49 c1 c0 03          	rol    $0x3,%r8
   13f52:	48 c1 ca 13          	ror    $0x13,%rdx
   13f56:	4c 31 c2             	xor    %r8,%rdx
   13f59:	49 89 f0             	mov    %rsi,%r8
   13f5c:	48 31 c2             	xor    %rax,%rdx
   13f5f:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
   13f63:	48 03 41 40          	add    0x40(%rcx),%rax
   13f67:	49 c1 c8 08          	ror    $0x8,%r8
   13f6b:	48 01 c2             	add    %rax,%rdx
   13f6e:	48 89 f0             	mov    %rsi,%rax
   13f71:	48 c1 ee 07          	shr    $0x7,%rsi
   13f75:	48 d1 c8             	ror    %rax
   13f78:	4c 31 c0             	xor    %r8,%rax
   13f7b:	48 31 f0             	xor    %rsi,%rax
   13f7e:	48 01 d0             	add    %rdx,%rax
   13f81:	48 89 41 78          	mov    %rax,0x78(%rcx)
   13f85:	48 39 cf             	cmp    %rcx,%rdi
   13f88:	75 ae                	jne    13f38 <mbedtls_internal_sha512_process+0x88>
   13f8a:	48 8b 8c 24 d8 02 00 	mov    0x2d8(%rsp),%rcx
   13f91:	00 
   13f92:	48 8b 94 24 e0 02 00 	mov    0x2e0(%rsp),%rdx
   13f99:	00 
   13f9a:	49 bf 18 81 6d da d5 	movabs $0xab1c5ed5da6d8118,%r15
   13fa1:	5e 1c ab 
   13fa4:	48 8d 1d 75 26 01 00 	lea    0x12675(%rip),%rbx        # 26620 <K+0x40>
   13fab:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   13fb0:	4c 8b 8c 24 08 03 00 	mov    0x308(%rsp),%r9
   13fb7:	00 
   13fb8:	49 bf 9b 4f 19 af a4 	movabs $0x923f82a4af194f9b,%r15
   13fbf:	82 3f 92 
   13fc2:	48 bd 2f 3b 4d ec cf 	movabs $0xb5c0fbcfec4d3b2f,%rbp
   13fc9:	fb c0 b5 
   13fcc:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   13fd1:	4c 8b 84 24 f0 02 00 	mov    0x2f0(%rsp),%r8
   13fd8:	00 
   13fd9:	49 bf 19 d0 05 b6 f1 	movabs $0x59f111f1b605d019,%r15
   13fe0:	11 f1 59 
   13fe3:	49 bd cd 65 ef 23 91 	movabs $0x7137449123ef65cd,%r13
   13fea:	44 37 71 
   13fed:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   13ff2:	48 8b bc 24 00 03 00 	mov    0x300(%rsp),%rdi
   13ff9:	00 
   13ffa:	49 bf 38 b5 48 f3 5b 	movabs $0x3956c25bf348b538,%r15
   14001:	c2 56 39 
   14004:	49 bc 22 ae 28 d7 98 	movabs $0x428a2f98d728ae22,%r12
   1400b:	2f 8a 42 
   1400e:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   14013:	48 8b b4 24 f8 02 00 	mov    0x2f8(%rsp),%rsi
   1401a:	00 
   1401b:	49 89 d6             	mov    %rdx,%r14
   1401e:	49 bf bc db 89 81 a5 	movabs $0xe9b5dba58189dbbc,%r15
   14025:	db b5 e9 
   14028:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   1402d:	4c 8b 9c 24 d0 02 00 	mov    0x2d0(%rsp),%r11
   14034:	00 
   14035:	49 89 df             	mov    %rbx,%r15
   14038:	48 89 cb             	mov    %rcx,%rbx
   1403b:	48 8b 84 24 e8 02 00 	mov    0x2e8(%rsp),%rax
   14042:	00 
   14043:	eb 3f                	jmp    14084 <mbedtls_internal_sha512_process+0x1d4>
   14045:	0f 1f 00             	nopl   (%rax)
   14048:	49 8b 4f 18          	mov    0x18(%r15),%rcx
   1404c:	4d 8b 27             	mov    (%r15),%r12
   1404f:	49 83 c7 40          	add    $0x40,%r15
   14053:	4d 8b 6f c8          	mov    -0x38(%r15),%r13
   14057:	49 8b 6f d0          	mov    -0x30(%r15),%rbp
   1405b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   14060:	49 8b 4f e0          	mov    -0x20(%r15),%rcx
   14064:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   14069:	49 8b 4f e8          	mov    -0x18(%r15),%rcx
   1406d:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   14072:	49 8b 4f f0          	mov    -0x10(%r15),%rcx
   14076:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1407b:	49 8b 4f f8          	mov    -0x8(%r15),%rcx
   1407f:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   14084:	4c 89 c1             	mov    %r8,%rcx
   14087:	4c 89 c2             	mov    %r8,%rdx
   1408a:	48 c1 c9 0e          	ror    $0xe,%rcx
   1408e:	48 c1 ca 12          	ror    $0x12,%rdx
   14092:	48 31 ca             	xor    %rcx,%rdx
   14095:	4c 89 c1             	mov    %r8,%rcx
   14098:	48 c1 c1 17          	rol    $0x17,%rcx
   1409c:	48 31 ca             	xor    %rcx,%rdx
   1409f:	48 89 f9             	mov    %rdi,%rcx
   140a2:	48 31 f1             	xor    %rsi,%rcx
   140a5:	4c 21 c1             	and    %r8,%rcx
   140a8:	48 31 f9             	xor    %rdi,%rcx
   140ab:	49 03 7a 08          	add    0x8(%r10),%rdi
   140af:	48 01 d1             	add    %rdx,%rcx
   140b2:	49 03 0a             	add    (%r10),%rcx
   140b5:	4c 89 da             	mov    %r11,%rdx
   140b8:	49 01 c9             	add    %rcx,%r9
   140bb:	48 c1 c2 1e          	rol    $0x1e,%rdx
   140bf:	4b 8d 0c 21          	lea    (%r9,%r12,1),%rcx
   140c3:	4d 89 d9             	mov    %r11,%r9
   140c6:	4d 89 dc             	mov    %r11,%r12
   140c9:	49 c1 c9 1c          	ror    $0x1c,%r9
   140cd:	49 21 dc             	and    %rbx,%r12
   140d0:	48 01 c8             	add    %rcx,%rax
   140d3:	4c 31 ca             	xor    %r9,%rdx
   140d6:	4d 89 d9             	mov    %r11,%r9
   140d9:	49 c1 c1 19          	rol    $0x19,%r9
   140dd:	4c 31 ca             	xor    %r9,%rdx
   140e0:	4d 89 d9             	mov    %r11,%r9
   140e3:	49 09 d9             	or     %rbx,%r9
   140e6:	4d 21 f1             	and    %r14,%r9
   140e9:	4d 09 e1             	or     %r12,%r9
   140ec:	49 01 d1             	add    %rdx,%r9
   140ef:	48 89 c2             	mov    %rax,%rdx
   140f2:	49 01 c9             	add    %rcx,%r9
   140f5:	4c 89 c1             	mov    %r8,%rcx
   140f8:	48 c1 ca 12          	ror    $0x12,%rdx
   140fc:	48 31 f1             	xor    %rsi,%rcx
   140ff:	48 21 c1             	and    %rax,%rcx
   14102:	48 31 f1             	xor    %rsi,%rcx
   14105:	48 01 cf             	add    %rcx,%rdi
   14108:	48 89 c1             	mov    %rax,%rcx
   1410b:	48 c1 c9 0e          	ror    $0xe,%rcx
   1410f:	48 31 ca             	xor    %rcx,%rdx
   14112:	48 89 c1             	mov    %rax,%rcx
   14115:	48 c1 c1 17          	rol    $0x17,%rcx
   14119:	48 31 ca             	xor    %rcx,%rdx
   1411c:	4c 89 c9             	mov    %r9,%rcx
   1411f:	49 03 72 10          	add    0x10(%r10),%rsi
   14123:	48 01 fa             	add    %rdi,%rdx
   14126:	48 c1 c1 1e          	rol    $0x1e,%rcx
   1412a:	4c 89 cf             	mov    %r9,%rdi
   1412d:	49 01 d5             	add    %rdx,%r13
   14130:	4c 89 ca             	mov    %r9,%rdx
   14133:	4c 21 df             	and    %r11,%rdi
   14136:	48 c1 ca 1c          	ror    $0x1c,%rdx
   1413a:	4d 01 ee             	add    %r13,%r14
   1413d:	48 31 d1             	xor    %rdx,%rcx
   14140:	4c 89 ca             	mov    %r9,%rdx
   14143:	48 c1 c2 19          	rol    $0x19,%rdx
   14147:	48 31 d1             	xor    %rdx,%rcx
   1414a:	4c 89 ca             	mov    %r9,%rdx
   1414d:	4c 09 da             	or     %r11,%rdx
   14150:	48 21 da             	and    %rbx,%rdx
   14153:	48 09 fa             	or     %rdi,%rdx
   14156:	4c 89 c7             	mov    %r8,%rdi
   14159:	48 31 c7             	xor    %rax,%rdi
   1415c:	48 01 ca             	add    %rcx,%rdx
   1415f:	4c 89 f1             	mov    %r14,%rcx
   14162:	4c 21 f7             	and    %r14,%rdi
   14165:	48 c1 c9 12          	ror    $0x12,%rcx
   14169:	4c 01 ea             	add    %r13,%rdx
   1416c:	4c 31 c7             	xor    %r8,%rdi
   1416f:	48 01 fe             	add    %rdi,%rsi
   14172:	4c 89 f7             	mov    %r14,%rdi
   14175:	48 c1 cf 0e          	ror    $0xe,%rdi
   14179:	48 31 f9             	xor    %rdi,%rcx
   1417c:	4c 89 f7             	mov    %r14,%rdi
   1417f:	48 c1 c7 17          	rol    $0x17,%rdi
   14183:	48 31 f9             	xor    %rdi,%rcx
   14186:	4c 89 cf             	mov    %r9,%rdi
   14189:	48 01 f1             	add    %rsi,%rcx
   1418c:	48 89 d6             	mov    %rdx,%rsi
   1418f:	48 01 cd             	add    %rcx,%rbp
   14192:	48 89 d1             	mov    %rdx,%rcx
   14195:	48 c1 c6 1e          	rol    $0x1e,%rsi
   14199:	48 c1 c9 1c          	ror    $0x1c,%rcx
   1419d:	48 01 eb             	add    %rbp,%rbx
   141a0:	48 31 ce             	xor    %rcx,%rsi
   141a3:	48 89 d1             	mov    %rdx,%rcx
   141a6:	48 c1 c1 19          	rol    $0x19,%rcx
   141aa:	48 31 ce             	xor    %rcx,%rsi
   141ad:	4c 89 c9             	mov    %r9,%rcx
   141b0:	48 21 d7             	and    %rdx,%rdi
   141b3:	4d 03 42 18          	add    0x18(%r10),%r8
   141b7:	48 09 d1             	or     %rdx,%rcx
   141ba:	4c 21 d9             	and    %r11,%rcx
   141bd:	48 09 f9             	or     %rdi,%rcx
   141c0:	48 89 c7             	mov    %rax,%rdi
   141c3:	4c 31 f7             	xor    %r14,%rdi
   141c6:	48 01 f1             	add    %rsi,%rcx
   141c9:	48 89 de             	mov    %rbx,%rsi
   141cc:	48 21 df             	and    %rbx,%rdi
   141cf:	48 c1 ce 12          	ror    $0x12,%rsi
   141d3:	48 01 e9             	add    %rbp,%rcx
   141d6:	48 89 d5             	mov    %rdx,%rbp
   141d9:	48 31 c7             	xor    %rax,%rdi
   141dc:	48 21 cd             	and    %rcx,%rbp
   141df:	4c 01 c7             	add    %r8,%rdi
   141e2:	49 89 d8             	mov    %rbx,%r8
   141e5:	49 c1 c8 0e          	ror    $0xe,%r8
   141e9:	4c 31 c6             	xor    %r8,%rsi
   141ec:	49 89 d8             	mov    %rbx,%r8
   141ef:	49 c1 c0 17          	rol    $0x17,%r8
   141f3:	4c 31 c6             	xor    %r8,%rsi
   141f6:	49 89 c8             	mov    %rcx,%r8
   141f9:	48 01 fe             	add    %rdi,%rsi
   141fc:	48 89 cf             	mov    %rcx,%rdi
   141ff:	49 c1 c8 1c          	ror    $0x1c,%r8
   14203:	48 03 74 24 08       	add    0x8(%rsp),%rsi
   14208:	48 c1 c7 1e          	rol    $0x1e,%rdi
   1420c:	49 01 f3             	add    %rsi,%r11
   1420f:	4c 31 c7             	xor    %r8,%rdi
   14212:	49 89 c8             	mov    %rcx,%r8
   14215:	49 c1 c0 19          	rol    $0x19,%r8
   14219:	4c 31 c7             	xor    %r8,%rdi
   1421c:	49 89 d0             	mov    %rdx,%r8
   1421f:	49 09 c8             	or     %rcx,%r8
   14222:	4d 21 c8             	and    %r9,%r8
   14225:	49 09 e8             	or     %rbp,%r8
   14228:	48 89 cd             	mov    %rcx,%rbp
   1422b:	49 01 f8             	add    %rdi,%r8
   1422e:	4c 89 f7             	mov    %r14,%rdi
   14231:	48 31 df             	xor    %rbx,%rdi
   14234:	49 01 f0             	add    %rsi,%r8
   14237:	4c 89 de             	mov    %r11,%rsi
   1423a:	4c 21 df             	and    %r11,%rdi
   1423d:	49 03 42 20          	add    0x20(%r10),%rax
   14241:	48 c1 ce 0e          	ror    $0xe,%rsi
   14245:	4c 21 c5             	and    %r8,%rbp
   14248:	4c 31 f7             	xor    %r14,%rdi
   1424b:	4d 03 72 28          	add    0x28(%r10),%r14
   1424f:	48 01 c7             	add    %rax,%rdi
   14252:	4c 89 d8             	mov    %r11,%rax
   14255:	48 c1 c8 12          	ror    $0x12,%rax
   14259:	48 31 f0             	xor    %rsi,%rax
   1425c:	4c 89 de             	mov    %r11,%rsi
   1425f:	48 c1 c6 17          	rol    $0x17,%rsi
   14263:	48 31 f0             	xor    %rsi,%rax
   14266:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1426b:	48 01 f8             	add    %rdi,%rax
   1426e:	4c 89 c7             	mov    %r8,%rdi
   14271:	48 01 c6             	add    %rax,%rsi
   14274:	4c 89 c0             	mov    %r8,%rax
   14277:	48 c1 cf 1c          	ror    $0x1c,%rdi
   1427b:	48 c1 c0 1e          	rol    $0x1e,%rax
   1427f:	49 01 f1             	add    %rsi,%r9
   14282:	48 31 c7             	xor    %rax,%rdi
   14285:	4c 89 c0             	mov    %r8,%rax
   14288:	48 c1 c0 19          	rol    $0x19,%rax
   1428c:	48 31 c7             	xor    %rax,%rdi
   1428f:	48 89 c8             	mov    %rcx,%rax
   14292:	4c 09 c0             	or     %r8,%rax
   14295:	48 21 d0             	and    %rdx,%rax
   14298:	48 09 e8             	or     %rbp,%rax
   1429b:	4c 89 c5             	mov    %r8,%rbp
   1429e:	48 01 f8             	add    %rdi,%rax
   142a1:	4c 89 cf             	mov    %r9,%rdi
   142a4:	48 01 f0             	add    %rsi,%rax
   142a7:	48 89 de             	mov    %rbx,%rsi
   142aa:	48 c1 cf 12          	ror    $0x12,%rdi
   142ae:	4c 31 de             	xor    %r11,%rsi
   142b1:	4c 21 ce             	and    %r9,%rsi
   142b4:	48 31 de             	xor    %rbx,%rsi
   142b7:	49 01 f6             	add    %rsi,%r14
   142ba:	4c 89 ce             	mov    %r9,%rsi
   142bd:	48 c1 ce 0e          	ror    $0xe,%rsi
   142c1:	48 31 fe             	xor    %rdi,%rsi
   142c4:	4c 89 cf             	mov    %r9,%rdi
   142c7:	48 c1 c7 17          	rol    $0x17,%rdi
   142cb:	48 31 fe             	xor    %rdi,%rsi
   142ce:	48 21 c5             	and    %rax,%rbp
   142d1:	49 03 5a 30          	add    0x30(%r10),%rbx
   142d5:	49 01 f6             	add    %rsi,%r14
   142d8:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   142dd:	4c 01 f6             	add    %r14,%rsi
   142e0:	49 89 c6             	mov    %rax,%r14
   142e3:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   142e7:	48 89 c2             	mov    %rax,%rdx
   142ea:	49 c1 c6 1e          	rol    $0x1e,%r14
   142ee:	48 c1 ca 1c          	ror    $0x1c,%rdx
   142f2:	4c 31 f2             	xor    %r14,%rdx
   142f5:	49 89 c6             	mov    %rax,%r14
   142f8:	49 c1 c6 19          	rol    $0x19,%r14
   142fc:	4c 31 f2             	xor    %r14,%rdx
   142ff:	4d 89 c6             	mov    %r8,%r14
   14302:	49 09 c6             	or     %rax,%r14
   14305:	49 21 ce             	and    %rcx,%r14
   14308:	49 09 ee             	or     %rbp,%r14
   1430b:	48 89 c5             	mov    %rax,%rbp
   1430e:	49 01 d6             	add    %rdx,%r14
   14311:	4c 89 da             	mov    %r11,%rdx
   14314:	4c 31 ca             	xor    %r9,%rdx
   14317:	49 01 f6             	add    %rsi,%r14
   1431a:	48 89 fe             	mov    %rdi,%rsi
   1431d:	48 21 fa             	and    %rdi,%rdx
   14320:	48 c1 ce 12          	ror    $0x12,%rsi
   14324:	4c 31 da             	xor    %r11,%rdx
   14327:	48 01 d3             	add    %rdx,%rbx
   1432a:	48 89 fa             	mov    %rdi,%rdx
   1432d:	48 c1 ca 0e          	ror    $0xe,%rdx
   14331:	48 31 f2             	xor    %rsi,%rdx
   14334:	48 89 fe             	mov    %rdi,%rsi
   14337:	48 c1 c6 17          	rol    $0x17,%rsi
   1433b:	48 31 f2             	xor    %rsi,%rdx
   1433e:	48 01 da             	add    %rbx,%rdx
   14341:	48 03 54 24 20       	add    0x20(%rsp),%rdx
   14346:	4c 89 f3             	mov    %r14,%rbx
   14349:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
   1434d:	4c 89 f1             	mov    %r14,%rcx
   14350:	48 c1 cb 1c          	ror    $0x1c,%rbx
   14354:	48 c1 c1 1e          	rol    $0x1e,%rcx
   14358:	48 31 cb             	xor    %rcx,%rbx
   1435b:	4c 89 f1             	mov    %r14,%rcx
   1435e:	48 c1 c1 19          	rol    $0x19,%rcx
   14362:	48 31 cb             	xor    %rcx,%rbx
   14365:	48 89 c1             	mov    %rax,%rcx
   14368:	4c 09 f1             	or     %r14,%rcx
   1436b:	4c 21 c1             	and    %r8,%rcx
   1436e:	4c 21 f5             	and    %r14,%rbp
   14371:	4d 03 5a 38          	add    0x38(%r10),%r11
   14375:	49 83 c2 40          	add    $0x40,%r10
   14379:	48 09 e9             	or     %rbp,%rcx
   1437c:	4c 89 cd             	mov    %r9,%rbp
   1437f:	48 31 fd             	xor    %rdi,%rbp
   14382:	48 01 cb             	add    %rcx,%rbx
   14385:	4c 89 f1             	mov    %r14,%rcx
   14388:	48 21 f5             	and    %rsi,%rbp
   1438b:	48 01 d3             	add    %rdx,%rbx
   1438e:	48 89 f2             	mov    %rsi,%rdx
   14391:	4c 31 cd             	xor    %r9,%rbp
   14394:	48 c1 ca 12          	ror    $0x12,%rdx
   14398:	49 89 dc             	mov    %rbx,%r12
   1439b:	48 21 d9             	and    %rbx,%rcx
   1439e:	49 01 eb             	add    %rbp,%r11
   143a1:	48 89 f5             	mov    %rsi,%rbp
   143a4:	49 c1 cc 1c          	ror    $0x1c,%r12
   143a8:	48 c1 cd 0e          	ror    $0xe,%rbp
   143ac:	48 31 d5             	xor    %rdx,%rbp
   143af:	48 89 f2             	mov    %rsi,%rdx
   143b2:	48 c1 c2 17          	rol    $0x17,%rdx
   143b6:	48 31 d5             	xor    %rdx,%rbp
   143b9:	48 89 da             	mov    %rbx,%rdx
   143bc:	48 c1 c2 1e          	rol    $0x1e,%rdx
   143c0:	4c 01 dd             	add    %r11,%rbp
   143c3:	48 03 6c 24 28       	add    0x28(%rsp),%rbp
   143c8:	49 31 d4             	xor    %rdx,%r12
   143cb:	48 89 da             	mov    %rbx,%rdx
   143ce:	49 01 e8             	add    %rbp,%r8
   143d1:	48 c1 c2 19          	rol    $0x19,%rdx
   143d5:	4c 31 e2             	xor    %r12,%rdx
   143d8:	4d 89 f4             	mov    %r14,%r12
   143db:	49 09 dc             	or     %rbx,%r12
   143de:	49 21 c4             	and    %rax,%r12
   143e1:	49 09 cc             	or     %rcx,%r12
   143e4:	48 8d 0d 75 24 01 00 	lea    0x12475(%rip),%rcx        # 26860 <K+0x280>
   143eb:	49 01 d4             	add    %rdx,%r12
   143ee:	4e 8d 5c 25 00       	lea    0x0(%rbp,%r12,1),%r11
   143f3:	4c 39 f9             	cmp    %r15,%rcx
   143f6:	0f 85 4c fc ff ff    	jne    14048 <mbedtls_internal_sha512_process+0x198>
   143fc:	48 89 84 24 e8 02 00 	mov    %rax,0x2e8(%rsp)
   14403:	00 
   14404:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   14409:	31 c0                	xor    %eax,%eax
   1440b:	4c 89 8c 24 08 03 00 	mov    %r9,0x308(%rsp)
   14412:	00 
   14413:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   14418:	4c 89 84 24 f0 02 00 	mov    %r8,0x2f0(%rsp)
   1441f:	00 
   14420:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
   14427:	00 
   14428:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
   1442f:	00 
   14430:	4c 89 9c 24 d0 02 00 	mov    %r11,0x2d0(%rsp)
   14437:	00 
   14438:	48 89 9c 24 d8 02 00 	mov    %rbx,0x2d8(%rsp)
   1443f:	00 
   14440:	4c 89 b4 24 e0 02 00 	mov    %r14,0x2e0(%rsp)
   14447:	00 
   14448:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1444d:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   14452:	eb 08                	jmp    1445c <mbedtls_internal_sha512_process+0x5ac>
   14454:	0f 1f 40 00          	nopl   0x0(%rax)
   14458:	4c 8b 1c 01          	mov    (%rcx,%rax,1),%r11
   1445c:	4c 01 5c 02 10       	add    %r11,0x10(%rdx,%rax,1)
   14461:	48 83 c0 08          	add    $0x8,%rax
   14465:	48 83 f8 40          	cmp    $0x40,%rax
   14469:	75 ed                	jne    14458 <mbedtls_internal_sha512_process+0x5a8>
   1446b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14470:	be d0 02 00 00       	mov    $0x2d0,%esi
   14475:	e8 36 ac ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   1447a:	48 8b 84 24 18 03 00 	mov    0x318(%rsp),%rax
   14481:	00 
   14482:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14489:	00 00 
   1448b:	75 14                	jne    144a1 <mbedtls_internal_sha512_process+0x5f1>
   1448d:	48 81 c4 28 03 00 00 	add    $0x328,%rsp
   14494:	31 c0                	xor    %eax,%eax
   14496:	5b                   	pop    %rbx
   14497:	5d                   	pop    %rbp
   14498:	41 5c                	pop    %r12
   1449a:	41 5d                	pop    %r13
   1449c:	41 5e                	pop    %r14
   1449e:	41 5f                	pop    %r15
   144a0:	c3                   	retq   
   144a1:	e8 ca fd fe ff       	callq  4270 <__stack_chk_fail@plt>
   144a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   144ad:	00 00 00 

00000000000144b0 <mbedtls_sha512_update.part.0>:
   144b0:	41 56                	push   %r14
   144b2:	41 55                	push   %r13
   144b4:	49 89 d5             	mov    %rdx,%r13
   144b7:	ba 80 00 00 00       	mov    $0x80,%edx
   144bc:	41 54                	push   %r12
   144be:	49 89 fc             	mov    %rdi,%r12
   144c1:	55                   	push   %rbp
   144c2:	48 89 f5             	mov    %rsi,%rbp
   144c5:	53                   	push   %rbx
   144c6:	48 8b 07             	mov    (%rdi),%rax
   144c9:	41 89 c6             	mov    %eax,%r14d
   144cc:	41 83 e6 7f          	and    $0x7f,%r14d
   144d0:	44 29 f2             	sub    %r14d,%edx
   144d3:	4c 01 e8             	add    %r13,%rax
   144d6:	48 89 07             	mov    %rax,(%rdi)
   144d9:	89 d3                	mov    %edx,%ebx
   144db:	73 05                	jae    144e2 <mbedtls_sha512_update.part.0+0x32>
   144dd:	48 83 47 08 01       	addq   $0x1,0x8(%rdi)
   144e2:	45 85 f6             	test   %r14d,%r14d
   144e5:	74 05                	je     144ec <mbedtls_sha512_update.part.0+0x3c>
   144e7:	4c 39 eb             	cmp    %r13,%rbx
   144ea:	76 6e                	jbe    1455a <mbedtls_sha512_update.part.0+0xaa>
   144ec:	31 db                	xor    %ebx,%ebx
   144ee:	49 83 fd 7f          	cmp    $0x7f,%r13
   144f2:	0f 86 3e 01 00 00    	jbe    14636 <mbedtls_sha512_update.part.0+0x186>
   144f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   144ff:	00 
   14500:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   14505:	4c 89 e7             	mov    %r12,%rdi
   14508:	e8 a3 f9 ff ff       	callq  13eb0 <mbedtls_internal_sha512_process>
   1450d:	85 c0                	test   %eax,%eax
   1450f:	75 37                	jne    14548 <mbedtls_sha512_update.part.0+0x98>
   14511:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
   14515:	4c 89 e8             	mov    %r13,%rax
   14518:	48 29 d8             	sub    %rbx,%rax
   1451b:	48 83 f8 7f          	cmp    $0x7f,%rax
   1451f:	77 df                	ja     14500 <mbedtls_sha512_update.part.0+0x50>
   14521:	48 83 fb 7f          	cmp    $0x7f,%rbx
   14525:	76 21                	jbe    14548 <mbedtls_sha512_update.part.0+0x98>
   14527:	48 01 dd             	add    %rbx,%rbp
   1452a:	45 31 c0             	xor    %r8d,%r8d
   1452d:	48 85 c0             	test   %rax,%rax
   14530:	0f 85 9c 00 00 00    	jne    145d2 <mbedtls_sha512_update.part.0+0x122>
   14536:	5b                   	pop    %rbx
   14537:	44 89 c0             	mov    %r8d,%eax
   1453a:	5d                   	pop    %rbp
   1453b:	41 5c                	pop    %r12
   1453d:	41 5d                	pop    %r13
   1453f:	41 5e                	pop    %r14
   14541:	c3                   	retq   
   14542:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14548:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   1454e:	5b                   	pop    %rbx
   1454f:	5d                   	pop    %rbp
   14550:	44 89 c0             	mov    %r8d,%eax
   14553:	41 5c                	pop    %r12
   14555:	41 5d                	pop    %r13
   14557:	41 5e                	pop    %r14
   14559:	c3                   	retq   
   1455a:	4d 8d 44 24 50       	lea    0x50(%r12),%r8
   1455f:	44 89 f1             	mov    %r14d,%ecx
   14562:	4c 01 c1             	add    %r8,%rcx
   14565:	83 fa 08             	cmp    $0x8,%edx
   14568:	73 3c                	jae    145a6 <mbedtls_sha512_update.part.0+0xf6>
   1456a:	f6 c2 04             	test   $0x4,%dl
   1456d:	0f 85 cb 00 00 00    	jne    1463e <mbedtls_sha512_update.part.0+0x18e>
   14573:	85 d2                	test   %edx,%edx
   14575:	74 0f                	je     14586 <mbedtls_sha512_update.part.0+0xd6>
   14577:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1457b:	83 e2 02             	and    $0x2,%edx
   1457e:	88 01                	mov    %al,(%rcx)
   14580:	0f 85 d9 00 00 00    	jne    1465f <mbedtls_sha512_update.part.0+0x1af>
   14586:	4c 89 c6             	mov    %r8,%rsi
   14589:	4c 89 e7             	mov    %r12,%rdi
   1458c:	e8 1f f9 ff ff       	callq  13eb0 <mbedtls_internal_sha512_process>
   14591:	41 89 c0             	mov    %eax,%r8d
   14594:	85 c0                	test   %eax,%eax
   14596:	75 9e                	jne    14536 <mbedtls_sha512_update.part.0+0x86>
   14598:	48 01 dd             	add    %rbx,%rbp
   1459b:	49 29 dd             	sub    %rbx,%r13
   1459e:	45 31 f6             	xor    %r14d,%r14d
   145a1:	e9 46 ff ff ff       	jmpq   144ec <mbedtls_sha512_update.part.0+0x3c>
   145a6:	48 8b 45 00          	mov    0x0(%rbp),%rax
   145aa:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   145ae:	48 89 ee             	mov    %rbp,%rsi
   145b1:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   145b5:	48 89 01             	mov    %rax,(%rcx)
   145b8:	48 8b 44 1d f8       	mov    -0x8(%rbp,%rbx,1),%rax
   145bd:	48 89 44 19 f8       	mov    %rax,-0x8(%rcx,%rbx,1)
   145c2:	48 29 f9             	sub    %rdi,%rcx
   145c5:	48 29 ce             	sub    %rcx,%rsi
   145c8:	01 d1                	add    %edx,%ecx
   145ca:	c1 e9 03             	shr    $0x3,%ecx
   145cd:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   145d0:	eb b4                	jmp    14586 <mbedtls_sha512_update.part.0+0xd6>
   145d2:	4b 8d 4c 34 50       	lea    0x50(%r12,%r14,1),%rcx
   145d7:	89 c2                	mov    %eax,%edx
   145d9:	83 f8 08             	cmp    $0x8,%eax
   145dc:	73 25                	jae    14603 <mbedtls_sha512_update.part.0+0x153>
   145de:	a8 04                	test   $0x4,%al
   145e0:	75 6e                	jne    14650 <mbedtls_sha512_update.part.0+0x1a0>
   145e2:	85 d2                	test   %edx,%edx
   145e4:	74 15                	je     145fb <mbedtls_sha512_update.part.0+0x14b>
   145e6:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   145ea:	88 01                	mov    %al,(%rcx)
   145ec:	f6 c2 02             	test   $0x2,%dl
   145ef:	74 0a                	je     145fb <mbedtls_sha512_update.part.0+0x14b>
   145f1:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   145f6:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   145fb:	45 31 c0             	xor    %r8d,%r8d
   145fe:	e9 33 ff ff ff       	jmpq   14536 <mbedtls_sha512_update.part.0+0x86>
   14603:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   14607:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   1460b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1460f:	48 89 11             	mov    %rdx,(%rcx)
   14612:	89 c2                	mov    %eax,%edx
   14614:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   14619:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   1461e:	48 29 f9             	sub    %rdi,%rcx
   14621:	48 89 ee             	mov    %rbp,%rsi
   14624:	48 89 ca             	mov    %rcx,%rdx
   14627:	48 29 ce             	sub    %rcx,%rsi
   1462a:	01 c2                	add    %eax,%edx
   1462c:	c1 ea 03             	shr    $0x3,%edx
   1462f:	89 d1                	mov    %edx,%ecx
   14631:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   14634:	eb c5                	jmp    145fb <mbedtls_sha512_update.part.0+0x14b>
   14636:	4c 89 e8             	mov    %r13,%rax
   14639:	e9 ec fe ff ff       	jmpq   1452a <mbedtls_sha512_update.part.0+0x7a>
   1463e:	8b 45 00             	mov    0x0(%rbp),%eax
   14641:	89 01                	mov    %eax,(%rcx)
   14643:	8b 44 1d fc          	mov    -0x4(%rbp,%rbx,1),%eax
   14647:	89 44 19 fc          	mov    %eax,-0x4(%rcx,%rbx,1)
   1464b:	e9 36 ff ff ff       	jmpq   14586 <mbedtls_sha512_update.part.0+0xd6>
   14650:	8b 45 00             	mov    0x0(%rbp),%eax
   14653:	89 01                	mov    %eax,(%rcx)
   14655:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   14659:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   1465d:	eb 9c                	jmp    145fb <mbedtls_sha512_update.part.0+0x14b>
   1465f:	0f b7 44 1d fe       	movzwl -0x2(%rbp,%rbx,1),%eax
   14664:	66 89 44 19 fe       	mov    %ax,-0x2(%rcx,%rbx,1)
   14669:	e9 18 ff ff ff       	jmpq   14586 <mbedtls_sha512_update.part.0+0xd6>
   1466e:	66 90                	xchg   %ax,%ax

0000000000014670 <mbedtls_sha512_update>:
   14670:	f3 0f 1e fa          	endbr64 
   14674:	48 85 d2             	test   %rdx,%rdx
   14677:	74 07                	je     14680 <mbedtls_sha512_update+0x10>
   14679:	e9 32 fe ff ff       	jmpq   144b0 <mbedtls_sha512_update.part.0>
   1467e:	66 90                	xchg   %ax,%ax
   14680:	31 c0                	xor    %eax,%eax
   14682:	c3                   	retq   
   14683:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1468a:	00 00 00 00 
   1468e:	66 90                	xchg   %ax,%ax

0000000000014690 <mbedtls_sha512_finish>:
   14690:	f3 0f 1e fa          	endbr64 
   14694:	41 54                	push   %r12
   14696:	4c 8d 67 50          	lea    0x50(%rdi),%r12
   1469a:	55                   	push   %rbp
   1469b:	48 89 f5             	mov    %rsi,%rbp
   1469e:	53                   	push   %rbx
   1469f:	8b 07                	mov    (%rdi),%eax
   146a1:	48 89 fb             	mov    %rdi,%rbx
   146a4:	83 e0 7f             	and    $0x7f,%eax
   146a7:	8d 48 01             	lea    0x1(%rax),%ecx
   146aa:	c6 44 07 50 80       	movb   $0x80,0x50(%rdi,%rax,1)
   146af:	89 c8                	mov    %ecx,%eax
   146b1:	4c 01 e0             	add    %r12,%rax
   146b4:	83 f9 70             	cmp    $0x70,%ecx
   146b7:	0f 87 d3 00 00 00    	ja     14790 <mbedtls_sha512_finish+0x100>
   146bd:	ba 70 00 00 00       	mov    $0x70,%edx
   146c2:	29 ca                	sub    %ecx,%edx
   146c4:	83 fa 08             	cmp    $0x8,%edx
   146c7:	0f 82 73 01 00 00    	jb     14840 <mbedtls_sha512_finish+0x1b0>
   146cd:	48 8d 78 08          	lea    0x8(%rax),%rdi
   146d1:	89 d1                	mov    %edx,%ecx
   146d3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   146da:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   146e1:	00 00 
   146e3:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   146e7:	48 29 f8             	sub    %rdi,%rax
   146ea:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
   146ed:	31 c0                	xor    %eax,%eax
   146ef:	c1 e9 03             	shr    $0x3,%ecx
   146f2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   146f5:	48 8b 13             	mov    (%rbx),%rdx
   146f8:	48 8b 43 08          	mov    0x8(%rbx),%rax
   146fc:	4c 89 e6             	mov    %r12,%rsi
   146ff:	48 89 df             	mov    %rbx,%rdi
   14702:	48 89 d1             	mov    %rdx,%rcx
   14705:	48 c1 e0 03          	shl    $0x3,%rax
   14709:	48 c1 e9 3d          	shr    $0x3d,%rcx
   1470d:	48 c1 e2 03          	shl    $0x3,%rdx
   14711:	48 09 c8             	or     %rcx,%rax
   14714:	48 0f ca             	bswap  %rdx
   14717:	48 89 93 c8 00 00 00 	mov    %rdx,0xc8(%rbx)
   1471e:	48 0f c8             	bswap  %rax
   14721:	48 89 83 c0 00 00 00 	mov    %rax,0xc0(%rbx)
   14728:	e8 83 f7 ff ff       	callq  13eb0 <mbedtls_internal_sha512_process>
   1472d:	85 c0                	test   %eax,%eax
   1472f:	75 50                	jne    14781 <mbedtls_sha512_finish+0xf1>
   14731:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   14735:	48 0f ca             	bswap  %rdx
   14738:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   1473c:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   14740:	48 0f ca             	bswap  %rdx
   14743:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   14747:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   1474b:	48 0f ca             	bswap  %rdx
   1474e:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   14752:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   14756:	48 0f ca             	bswap  %rdx
   14759:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   1475d:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   14761:	48 0f ca             	bswap  %rdx
   14764:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   14768:	48 8b 53 38          	mov    0x38(%rbx),%rdx
   1476c:	48 0f ca             	bswap  %rdx
   1476f:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   14773:	8b 93 d0 00 00 00    	mov    0xd0(%rbx),%edx
   14779:	85 d2                	test   %edx,%edx
   1477b:	0f 84 e7 00 00 00    	je     14868 <mbedtls_sha512_finish+0x1d8>
   14781:	5b                   	pop    %rbx
   14782:	5d                   	pop    %rbp
   14783:	41 5c                	pop    %r12
   14785:	c3                   	retq   
   14786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1478d:	00 00 00 
   14790:	ba 80 00 00 00       	mov    $0x80,%edx
   14795:	31 ff                	xor    %edi,%edi
   14797:	29 ca                	sub    %ecx,%edx
   14799:	83 fa 08             	cmp    $0x8,%edx
   1479c:	0f 82 7e 00 00 00    	jb     14820 <mbedtls_sha512_finish+0x190>
   147a2:	89 d1                	mov    %edx,%ecx
   147a4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   147ab:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   147b2:	00 00 
   147b4:	48 8d 48 08          	lea    0x8(%rax),%rcx
   147b8:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   147bc:	48 29 c8             	sub    %rcx,%rax
   147bf:	01 c2                	add    %eax,%edx
   147c1:	83 e2 f8             	and    $0xfffffff8,%edx
   147c4:	83 fa 08             	cmp    $0x8,%edx
   147c7:	72 12                	jb     147db <mbedtls_sha512_finish+0x14b>
   147c9:	83 e2 f8             	and    $0xfffffff8,%edx
   147cc:	31 c0                	xor    %eax,%eax
   147ce:	89 c6                	mov    %eax,%esi
   147d0:	83 c0 08             	add    $0x8,%eax
   147d3:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   147d7:	39 d0                	cmp    %edx,%eax
   147d9:	72 f3                	jb     147ce <mbedtls_sha512_finish+0x13e>
   147db:	4c 89 e6             	mov    %r12,%rsi
   147de:	48 89 df             	mov    %rbx,%rdi
   147e1:	e8 ca f6 ff ff       	callq  13eb0 <mbedtls_internal_sha512_process>
   147e6:	85 c0                	test   %eax,%eax
   147e8:	75 97                	jne    14781 <mbedtls_sha512_finish+0xf1>
   147ea:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
   147ef:	4c 89 e1             	mov    %r12,%rcx
   147f2:	31 c0                	xor    %eax,%eax
   147f4:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
   147fb:	00 
   147fc:	49 c7 44 24 68 00 00 	movq   $0x0,0x68(%r12)
   14803:	00 00 
   14805:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   14809:	48 29 f9             	sub    %rdi,%rcx
   1480c:	83 c1 70             	add    $0x70,%ecx
   1480f:	c1 e9 03             	shr    $0x3,%ecx
   14812:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   14815:	e9 db fe ff ff       	jmpq   146f5 <mbedtls_sha512_finish+0x65>
   1481a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14820:	f6 c2 04             	test   $0x4,%dl
   14823:	75 63                	jne    14888 <mbedtls_sha512_finish+0x1f8>
   14825:	85 d2                	test   %edx,%edx
   14827:	74 b2                	je     147db <mbedtls_sha512_finish+0x14b>
   14829:	c6 00 00             	movb   $0x0,(%rax)
   1482c:	f6 c2 02             	test   $0x2,%dl
   1482f:	74 aa                	je     147db <mbedtls_sha512_finish+0x14b>
   14831:	31 c9                	xor    %ecx,%ecx
   14833:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   14838:	eb a1                	jmp    147db <mbedtls_sha512_finish+0x14b>
   1483a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14840:	f6 c2 04             	test   $0x4,%dl
   14843:	75 5b                	jne    148a0 <mbedtls_sha512_finish+0x210>
   14845:	85 d2                	test   %edx,%edx
   14847:	0f 84 a8 fe ff ff    	je     146f5 <mbedtls_sha512_finish+0x65>
   1484d:	c6 00 00             	movb   $0x0,(%rax)
   14850:	f6 c2 02             	test   $0x2,%dl
   14853:	0f 84 9c fe ff ff    	je     146f5 <mbedtls_sha512_finish+0x65>
   14859:	31 f6                	xor    %esi,%esi
   1485b:	66 89 74 10 fe       	mov    %si,-0x2(%rax,%rdx,1)
   14860:	e9 90 fe ff ff       	jmpq   146f5 <mbedtls_sha512_finish+0x65>
   14865:	0f 1f 00             	nopl   (%rax)
   14868:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   1486c:	48 0f ca             	bswap  %rdx
   1486f:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   14873:	48 8b 53 48          	mov    0x48(%rbx),%rdx
   14877:	5b                   	pop    %rbx
   14878:	48 0f ca             	bswap  %rdx
   1487b:	48 89 55 38          	mov    %rdx,0x38(%rbp)
   1487f:	5d                   	pop    %rbp
   14880:	41 5c                	pop    %r12
   14882:	c3                   	retq   
   14883:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14888:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1488e:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   14895:	00 
   14896:	e9 40 ff ff ff       	jmpq   147db <mbedtls_sha512_finish+0x14b>
   1489b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   148a0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   148a6:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   148ad:	00 
   148ae:	e9 42 fe ff ff       	jmpq   146f5 <mbedtls_sha512_finish+0x65>
   148b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   148ba:	00 00 00 00 
   148be:	66 90                	xchg   %ax,%ax

00000000000148c0 <mbedtls_sha512_common_self_test>:
   148c0:	41 57                	push   %r15
   148c2:	41 56                	push   %r14
   148c4:	41 55                	push   %r13
   148c6:	41 89 f5             	mov    %esi,%r13d
   148c9:	41 54                	push   %r12
   148cb:	41 89 fc             	mov    %edi,%r12d
   148ce:	bf 00 04 00 00       	mov    $0x400,%edi
   148d3:	55                   	push   %rbp
   148d4:	48 8d 2d c5 1a 01 00 	lea    0x11ac5(%rip),%rbp        # 263a0 <sha384_test_sum>
   148db:	53                   	push   %rbx
   148dc:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   148e3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   148ea:	00 00 
   148ec:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   148f3:	00 
   148f4:	31 c0                	xor    %eax,%eax
   148f6:	85 f6                	test   %esi,%esi
   148f8:	48 8d 05 e1 19 01 00 	lea    0x119e1(%rip),%rax        # 262e0 <sha512_test_sum>
   148ff:	be 01 00 00 00       	mov    $0x1,%esi
   14904:	48 0f 44 e8          	cmove  %rax,%rbp
   14908:	e8 c3 f9 fe ff       	callq  42d0 <calloc@plt>
   1490d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14912:	48 85 c0             	test   %rax,%rax
   14915:	0f 84 19 03 00 00    	je     14c34 <mbedtls_sha512_common_self_test+0x374>
   1491b:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   14920:	31 c0                	xor    %eax,%eax
   14922:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   14927:	31 db                	xor    %ebx,%ebx
   14929:	4c 89 f7             	mov    %r14,%rdi
   1492c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1492f:	b8 04 00 00 00       	mov    $0x4,%eax
   14934:	44 29 e8             	sub    %r13d,%eax
   14937:	89 c1                	mov    %eax,%ecx
   14939:	c1 e0 04             	shl    $0x4,%eax
   1493c:	c1 e1 07             	shl    $0x7,%ecx
   1493f:	48 89 04 24          	mov    %rax,(%rsp)
   14943:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   14947:	45 85 e4             	test   %r12d,%r12d
   1494a:	0f 85 58 02 00 00    	jne    14ba8 <mbedtls_sha512_common_self_test+0x2e8>
   14950:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   14957:	00 00 
   14959:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   14960:	00 00 
   14962:	45 85 ed             	test   %r13d,%r13d
   14965:	0f 85 55 01 00 00    	jne    14ac0 <mbedtls_sha512_common_self_test+0x200>
   1496b:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   14972:	e6 09 6a 
   14975:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   1497c:	00 
   1497d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   14982:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   14989:	ae 67 bb 
   1498c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   14991:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   14998:	f3 6e 3c 
   1499b:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   149a0:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   149a7:	f5 4f a5 
   149aa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   149af:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   149b6:	52 0e 51 
   149b9:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   149be:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   149c5:	68 05 9b 
   149c8:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   149cd:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   149d4:	d9 83 1f 
   149d7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   149dc:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   149e3:	cd e0 5b 
   149e6:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   149eb:	48 83 fb 02          	cmp    $0x2,%rbx
   149ef:	0f 84 55 01 00 00    	je     14b4a <mbedtls_sha512_common_self_test+0x28a>
   149f5:	48 8d 05 64 1a 01 00 	lea    0x11a64(%rip),%rax        # 26460 <sha_test_buflen>
   149fc:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   14a00:	48 85 d2             	test   %rdx,%rdx
   14a03:	74 1e                	je     14a23 <mbedtls_sha512_common_self_test+0x163>
   14a05:	48 6b f3 71          	imul   $0x71,%rbx,%rsi
   14a09:	48 8d 05 70 1a 01 00 	lea    0x11a70(%rip),%rax        # 26480 <sha_test_buf>
   14a10:	4c 89 f7             	mov    %r14,%rdi
   14a13:	48 01 c6             	add    %rax,%rsi
   14a16:	e8 95 fa ff ff       	callq  144b0 <mbedtls_sha512_update.part.0>
   14a1b:	85 c0                	test   %eax,%eax
   14a1d:	0f 85 73 01 00 00    	jne    14b96 <mbedtls_sha512_common_self_test+0x2d6>
   14a23:	4c 8d bc 24 00 01 00 	lea    0x100(%rsp),%r15
   14a2a:	00 
   14a2b:	4c 89 f7             	mov    %r14,%rdi
   14a2e:	4c 89 fe             	mov    %r15,%rsi
   14a31:	e8 5a fc ff ff       	callq  14690 <mbedtls_sha512_finish>
   14a36:	85 c0                	test   %eax,%eax
   14a38:	0f 85 58 01 00 00    	jne    14b96 <mbedtls_sha512_common_self_test+0x2d6>
   14a3e:	48 8b 14 24          	mov    (%rsp),%rdx
   14a42:	48 89 ee             	mov    %rbp,%rsi
   14a45:	4c 89 ff             	mov    %r15,%rdi
   14a48:	e8 63 f8 fe ff       	callq  42b0 <memcmp@plt>
   14a4d:	85 c0                	test   %eax,%eax
   14a4f:	0f 85 cb 01 00 00    	jne    14c20 <mbedtls_sha512_common_self_test+0x360>
   14a55:	45 85 e4             	test   %r12d,%r12d
   14a58:	0f 85 72 01 00 00    	jne    14bd0 <mbedtls_sha512_common_self_test+0x310>
   14a5e:	48 83 c3 01          	add    $0x1,%rbx
   14a62:	48 83 c5 40          	add    $0x40,%rbp
   14a66:	48 83 fb 03          	cmp    $0x3,%rbx
   14a6a:	0f 85 d7 fe ff ff    	jne    14947 <mbedtls_sha512_common_self_test+0x87>
   14a70:	45 85 e4             	test   %r12d,%r12d
   14a73:	0f 85 6f 01 00 00    	jne    14be8 <mbedtls_sha512_common_self_test+0x328>
   14a79:	be d8 00 00 00       	mov    $0xd8,%esi
   14a7e:	4c 89 f7             	mov    %r14,%rdi
   14a81:	45 89 e5             	mov    %r12d,%r13d
   14a84:	e8 27 a6 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   14a89:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   14a8e:	e8 5d f7 fe ff       	callq  41f0 <free@plt>
   14a93:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   14a9a:	00 
   14a9b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14aa2:	00 00 
   14aa4:	0f 85 aa 01 00 00    	jne    14c54 <mbedtls_sha512_common_self_test+0x394>
   14aaa:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   14ab1:	44 89 e8             	mov    %r13d,%eax
   14ab4:	5b                   	pop    %rbx
   14ab5:	5d                   	pop    %rbp
   14ab6:	41 5c                	pop    %r12
   14ab8:	41 5d                	pop    %r13
   14aba:	41 5e                	pop    %r14
   14abc:	41 5f                	pop    %r15
   14abe:	c3                   	retq   
   14abf:	90                   	nop
   14ac0:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   14ac7:	9d bb cb 
   14aca:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   14ad1:	00 
   14ad2:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   14ad7:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   14ade:	29 9a 62 
   14ae1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   14ae6:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   14aed:	01 59 91 
   14af0:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   14af5:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   14afc:	ec 2f 15 
   14aff:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14b04:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   14b0b:	26 33 67 
   14b0e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   14b13:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   14b1a:	4a b4 8e 
   14b1d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   14b22:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   14b29:	2e 0c db 
   14b2c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   14b31:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   14b38:	48 b5 47 
   14b3b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   14b40:	48 83 fb 02          	cmp    $0x2,%rbx
   14b44:	0f 85 ab fe ff ff    	jne    149f5 <mbedtls_sha512_common_self_test+0x135>
   14b4a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   14b4f:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   14b54:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   14b59:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   14b60:	61 61 61 
   14b63:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   14b68:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   14b6e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   14b71:	eb 0f                	jmp    14b82 <mbedtls_sha512_common_self_test+0x2c2>
   14b73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14b78:	41 83 ef 01          	sub    $0x1,%r15d
   14b7c:	0f 84 a8 00 00 00    	je     14c2a <mbedtls_sha512_common_self_test+0x36a>
   14b82:	ba e8 03 00 00       	mov    $0x3e8,%edx
   14b87:	48 89 de             	mov    %rbx,%rsi
   14b8a:	4c 89 f7             	mov    %r14,%rdi
   14b8d:	e8 1e f9 ff ff       	callq  144b0 <mbedtls_sha512_update.part.0>
   14b92:	85 c0                	test   %eax,%eax
   14b94:	74 e2                	je     14b78 <mbedtls_sha512_common_self_test+0x2b8>
   14b96:	89 c2                	mov    %eax,%edx
   14b98:	45 85 e4             	test   %r12d,%r12d
   14b9b:	75 63                	jne    14c00 <mbedtls_sha512_common_self_test+0x340>
   14b9d:	41 89 d4             	mov    %edx,%r12d
   14ba0:	e9 d4 fe ff ff       	jmpq   14a79 <mbedtls_sha512_common_self_test+0x1b9>
   14ba5:	0f 1f 00             	nopl   (%rax)
   14ba8:	8b 54 24 14          	mov    0x14(%rsp),%edx
   14bac:	8d 4b 01             	lea    0x1(%rbx),%ecx
   14baf:	48 8d 35 6e 14 01 00 	lea    0x1146e(%rip),%rsi        # 26024 <sha1_test_buf+0xc4>
   14bb6:	31 c0                	xor    %eax,%eax
   14bb8:	bf 01 00 00 00       	mov    $0x1,%edi
   14bbd:	e8 8e f7 fe ff       	callq  4350 <__printf_chk@plt>
   14bc2:	e9 89 fd ff ff       	jmpq   14950 <mbedtls_sha512_common_self_test+0x90>
   14bc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14bce:	00 00 
   14bd0:	48 8d 3d f0 94 00 00 	lea    0x94f0(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   14bd7:	e8 34 f6 fe ff       	callq  4210 <puts@plt>
   14bdc:	e9 7d fe ff ff       	jmpq   14a5e <mbedtls_sha512_common_self_test+0x19e>
   14be1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14be8:	bf 0a 00 00 00       	mov    $0xa,%edi
   14bed:	45 31 e4             	xor    %r12d,%r12d
   14bf0:	e8 0b f6 fe ff       	callq  4200 <putchar@plt>
   14bf5:	e9 7f fe ff ff       	jmpq   14a79 <mbedtls_sha512_common_self_test+0x1b9>
   14bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14c00:	48 8d 3d 16 14 01 00 	lea    0x11416(%rip),%rdi        # 2601d <sha1_test_buf+0xbd>
   14c07:	89 14 24             	mov    %edx,(%rsp)
   14c0a:	e8 01 f6 fe ff       	callq  4210 <puts@plt>
   14c0f:	8b 14 24             	mov    (%rsp),%edx
   14c12:	41 89 d4             	mov    %edx,%r12d
   14c15:	e9 5f fe ff ff       	jmpq   14a79 <mbedtls_sha512_common_self_test+0x1b9>
   14c1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14c20:	ba 01 00 00 00       	mov    $0x1,%edx
   14c25:	e9 6e ff ff ff       	jmpq   14b98 <mbedtls_sha512_common_self_test+0x2d8>
   14c2a:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   14c2f:	e9 ef fd ff ff       	jmpq   14a23 <mbedtls_sha512_common_self_test+0x163>
   14c34:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   14c3a:	45 85 e4             	test   %r12d,%r12d
   14c3d:	0f 84 50 fe ff ff    	je     14a93 <mbedtls_sha512_common_self_test+0x1d3>
   14c43:	48 8d 3d c1 13 01 00 	lea    0x113c1(%rip),%rdi        # 2600b <sha1_test_buf+0xab>
   14c4a:	e8 c1 f5 fe ff       	callq  4210 <puts@plt>
   14c4f:	e9 3f fe ff ff       	jmpq   14a93 <mbedtls_sha512_common_self_test+0x1d3>
   14c54:	e8 17 f6 fe ff       	callq  4270 <__stack_chk_fail@plt>
   14c59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014c60 <mbedtls_sha512>:
   14c60:	f3 0f 1e fa          	endbr64 
   14c64:	41 55                	push   %r13
   14c66:	41 54                	push   %r12
   14c68:	55                   	push   %rbp
   14c69:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   14c70:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14c77:	00 00 
   14c79:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   14c80:	00 
   14c81:	31 c0                	xor    %eax,%eax
   14c83:	83 f9 01             	cmp    $0x1,%ecx
   14c86:	0f 87 94 01 00 00    	ja     14e20 <mbedtls_sha512+0x1c0>
   14c8c:	49 89 f0             	mov    %rsi,%r8
   14c8f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   14c94:	49 89 f9             	mov    %rdi,%r9
   14c97:	49 89 d5             	mov    %rdx,%r13
   14c9a:	48 89 f7             	mov    %rsi,%rdi
   14c9d:	89 ca                	mov    %ecx,%edx
   14c9f:	b9 19 00 00 00       	mov    $0x19,%ecx
   14ca4:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   14cab:	00 
   14cac:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   14caf:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   14cb6:	00 00 
   14cb8:	85 d2                	test   %edx,%edx
   14cba:	0f 84 e0 00 00 00    	je     14da0 <mbedtls_sha512+0x140>
   14cc0:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   14cc7:	9d bb cb 
   14cca:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   14ccf:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   14cd6:	29 9a 62 
   14cd9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14cde:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   14ce5:	01 59 91 
   14ce8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   14ced:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   14cf4:	ec 2f 15 
   14cf7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   14cfc:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   14d03:	26 33 67 
   14d06:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   14d0b:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   14d12:	4a b4 8e 
   14d15:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   14d1a:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   14d21:	2e 0c db 
   14d24:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   14d29:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   14d30:	48 b5 47 
   14d33:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14d38:	89 94 24 d0 00 00 00 	mov    %edx,0xd0(%rsp)
   14d3f:	48 89 e5             	mov    %rsp,%rbp
   14d42:	4d 85 c0             	test   %r8,%r8
   14d45:	74 15                	je     14d5c <mbedtls_sha512+0xfc>
   14d47:	4c 89 c2             	mov    %r8,%rdx
   14d4a:	4c 89 ce             	mov    %r9,%rsi
   14d4d:	48 89 ef             	mov    %rbp,%rdi
   14d50:	e8 5b f7 ff ff       	callq  144b0 <mbedtls_sha512_update.part.0>
   14d55:	41 89 c4             	mov    %eax,%r12d
   14d58:	85 c0                	test   %eax,%eax
   14d5a:	75 0e                	jne    14d6a <mbedtls_sha512+0x10a>
   14d5c:	4c 89 ee             	mov    %r13,%rsi
   14d5f:	48 89 ef             	mov    %rbp,%rdi
   14d62:	e8 29 f9 ff ff       	callq  14690 <mbedtls_sha512_finish>
   14d67:	41 89 c4             	mov    %eax,%r12d
   14d6a:	be d8 00 00 00       	mov    $0xd8,%esi
   14d6f:	48 89 ef             	mov    %rbp,%rdi
   14d72:	e8 39 a3 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   14d77:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   14d7e:	00 
   14d7f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14d86:	00 00 
   14d88:	0f 85 9d 00 00 00    	jne    14e2b <mbedtls_sha512+0x1cb>
   14d8e:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   14d95:	44 89 e0             	mov    %r12d,%eax
   14d98:	5d                   	pop    %rbp
   14d99:	41 5c                	pop    %r12
   14d9b:	41 5d                	pop    %r13
   14d9d:	c3                   	retq   
   14d9e:	66 90                	xchg   %ax,%ax
   14da0:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   14da7:	e6 09 6a 
   14daa:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   14daf:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   14db6:	ae 67 bb 
   14db9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14dbe:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   14dc5:	f3 6e 3c 
   14dc8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   14dcd:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   14dd4:	f5 4f a5 
   14dd7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   14ddc:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   14de3:	52 0e 51 
   14de6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   14deb:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   14df2:	68 05 9b 
   14df5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   14dfa:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   14e01:	d9 83 1f 
   14e04:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   14e09:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   14e10:	cd e0 5b 
   14e13:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14e18:	e9 1b ff ff ff       	jmpq   14d38 <mbedtls_sha512+0xd8>
   14e1d:	0f 1f 00             	nopl   (%rax)
   14e20:	41 bc 8b ff ff ff    	mov    $0xffffff8b,%r12d
   14e26:	e9 4c ff ff ff       	jmpq   14d77 <mbedtls_sha512+0x117>
   14e2b:	e8 40 f4 fe ff       	callq  4270 <__stack_chk_fail@plt>

0000000000014e30 <mbedtls_sha512_self_test>:
   14e30:	f3 0f 1e fa          	endbr64 
   14e34:	31 f6                	xor    %esi,%esi
   14e36:	e9 85 fa ff ff       	jmpq   148c0 <mbedtls_sha512_common_self_test>
   14e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000014e40 <mbedtls_sha384_self_test>:
   14e40:	f3 0f 1e fa          	endbr64 
   14e44:	be 01 00 00 00       	mov    $0x1,%esi
   14e49:	e9 72 fa ff ff       	jmpq   148c0 <mbedtls_sha512_common_self_test>
   14e4e:	66 90                	xchg   %ax,%ax

0000000000014e50 <asn1_get_sequence_of_cb>:
   14e50:	f3 0f 1e fa          	endbr64 
   14e54:	41 56                	push   %r14
   14e56:	41 55                	push   %r13
   14e58:	49 89 d5             	mov    %rdx,%r13
   14e5b:	41 54                	push   %r12
   14e5d:	49 89 cc             	mov    %rcx,%r12
   14e60:	55                   	push   %rbp
   14e61:	89 f5                	mov    %esi,%ebp
   14e63:	53                   	push   %rbx
   14e64:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   14e68:	48 89 fb             	mov    %rdi,%rbx
   14e6b:	49 83 7e 10 00       	cmpq   $0x0,0x10(%r14)
   14e70:	74 36                	je     14ea8 <asn1_get_sequence_of_cb+0x58>
   14e72:	be 20 00 00 00       	mov    $0x20,%esi
   14e77:	bf 01 00 00 00       	mov    $0x1,%edi
   14e7c:	e8 4f f4 fe ff       	callq  42d0 <calloc@plt>
   14e81:	49 89 46 18          	mov    %rax,0x18(%r14)
   14e85:	48 85 c0             	test   %rax,%rax
   14e88:	74 23                	je     14ead <asn1_get_sequence_of_cb+0x5d>
   14e8a:	4c 89 68 10          	mov    %r13,0x10(%rax)
   14e8e:	4c 89 60 08          	mov    %r12,0x8(%rax)
   14e92:	89 28                	mov    %ebp,(%rax)
   14e94:	48 89 43 08          	mov    %rax,0x8(%rbx)
   14e98:	31 c0                	xor    %eax,%eax
   14e9a:	5b                   	pop    %rbx
   14e9b:	5d                   	pop    %rbp
   14e9c:	41 5c                	pop    %r12
   14e9e:	41 5d                	pop    %r13
   14ea0:	41 5e                	pop    %r14
   14ea2:	c3                   	retq   
   14ea3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14ea8:	4c 89 f0             	mov    %r14,%rax
   14eab:	eb dd                	jmp    14e8a <asn1_get_sequence_of_cb+0x3a>
   14ead:	b8 96 ff ff ff       	mov    $0xffffff96,%eax
   14eb2:	eb e6                	jmp    14e9a <asn1_get_sequence_of_cb+0x4a>
   14eb4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   14ebb:	00 00 00 00 
   14ebf:	90                   	nop

0000000000014ec0 <mbedtls_asn1_get_len>:
   14ec0:	f3 0f 1e fa          	endbr64 
   14ec4:	48 8b 07             	mov    (%rdi),%rax
   14ec7:	49 89 f0             	mov    %rsi,%r8
   14eca:	49 29 c0             	sub    %rax,%r8
   14ecd:	4d 85 c0             	test   %r8,%r8
   14ed0:	0f 8e 02 01 00 00    	jle    14fd8 <mbedtls_asn1_get_len+0x118>
   14ed6:	0f b6 08             	movzbl (%rax),%ecx
   14ed9:	84 c9                	test   %cl,%cl
   14edb:	78 23                	js     14f00 <mbedtls_asn1_get_len+0x40>
   14edd:	4c 8d 40 01          	lea    0x1(%rax),%r8
   14ee1:	4c 89 07             	mov    %r8,(%rdi)
   14ee4:	0f b6 08             	movzbl (%rax),%ecx
   14ee7:	48 89 0a             	mov    %rcx,(%rdx)
   14eea:	4c 29 c6             	sub    %r8,%rsi
   14eed:	48 39 ce             	cmp    %rcx,%rsi
   14ef0:	0f 82 e2 00 00 00    	jb     14fd8 <mbedtls_asn1_get_len+0x118>
   14ef6:	31 c0                	xor    %eax,%eax
   14ef8:	c3                   	retq   
   14ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14f00:	41 89 c9             	mov    %ecx,%r9d
   14f03:	41 83 e1 7f          	and    $0x7f,%r9d
   14f07:	41 80 f9 03          	cmp    $0x3,%r9b
   14f0b:	0f 84 8f 00 00 00    	je     14fa0 <mbedtls_asn1_get_len+0xe0>
   14f11:	83 e1 7c             	and    $0x7c,%ecx
   14f14:	75 32                	jne    14f48 <mbedtls_asn1_get_len+0x88>
   14f16:	41 80 f9 01          	cmp    $0x1,%r9b
   14f1a:	74 64                	je     14f80 <mbedtls_asn1_get_len+0xc0>
   14f1c:	41 80 f9 02          	cmp    $0x2,%r9b
   14f20:	75 4e                	jne    14f70 <mbedtls_asn1_get_len+0xb0>
   14f22:	49 83 f8 02          	cmp    $0x2,%r8
   14f26:	0f 8e ac 00 00 00    	jle    14fd8 <mbedtls_asn1_get_len+0x118>
   14f2c:	0f b7 48 01          	movzwl 0x1(%rax),%ecx
   14f30:	4c 8d 40 03          	lea    0x3(%rax),%r8
   14f34:	66 c1 c1 08          	rol    $0x8,%cx
   14f38:	0f b7 c9             	movzwl %cx,%ecx
   14f3b:	48 89 0a             	mov    %rcx,(%rdx)
   14f3e:	4c 89 07             	mov    %r8,(%rdi)
   14f41:	eb a7                	jmp    14eea <mbedtls_asn1_get_len+0x2a>
   14f43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14f48:	41 80 f9 04          	cmp    $0x4,%r9b
   14f4c:	75 22                	jne    14f70 <mbedtls_asn1_get_len+0xb0>
   14f4e:	49 83 f8 04          	cmp    $0x4,%r8
   14f52:	0f 8e 80 00 00 00    	jle    14fd8 <mbedtls_asn1_get_len+0x118>
   14f58:	8b 48 01             	mov    0x1(%rax),%ecx
   14f5b:	4c 8d 40 05          	lea    0x5(%rax),%r8
   14f5f:	0f c9                	bswap  %ecx
   14f61:	89 c9                	mov    %ecx,%ecx
   14f63:	48 89 0a             	mov    %rcx,(%rdx)
   14f66:	4c 89 07             	mov    %r8,(%rdi)
   14f69:	e9 7c ff ff ff       	jmpq   14eea <mbedtls_asn1_get_len+0x2a>
   14f6e:	66 90                	xchg   %ax,%ax
   14f70:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax
   14f75:	c3                   	retq   
   14f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14f7d:	00 00 00 
   14f80:	49 83 f8 01          	cmp    $0x1,%r8
   14f84:	74 52                	je     14fd8 <mbedtls_asn1_get_len+0x118>
   14f86:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
   14f8a:	4c 8d 40 02          	lea    0x2(%rax),%r8
   14f8e:	48 89 0a             	mov    %rcx,(%rdx)
   14f91:	4c 89 07             	mov    %r8,(%rdi)
   14f94:	e9 51 ff ff ff       	jmpq   14eea <mbedtls_asn1_get_len+0x2a>
   14f99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14fa0:	49 83 f8 03          	cmp    $0x3,%r8
   14fa4:	7e 32                	jle    14fd8 <mbedtls_asn1_get_len+0x118>
   14fa6:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
   14faa:	44 0f b6 40 02       	movzbl 0x2(%rax),%r8d
   14faf:	48 c1 e1 10          	shl    $0x10,%rcx
   14fb3:	49 c1 e0 08          	shl    $0x8,%r8
   14fb7:	4c 09 c1             	or     %r8,%rcx
   14fba:	44 0f b6 40 03       	movzbl 0x3(%rax),%r8d
   14fbf:	4c 09 c1             	or     %r8,%rcx
   14fc2:	4c 8d 40 04          	lea    0x4(%rax),%r8
   14fc6:	48 89 0a             	mov    %rcx,(%rdx)
   14fc9:	4c 89 07             	mov    %r8,(%rdi)
   14fcc:	e9 19 ff ff ff       	jmpq   14eea <mbedtls_asn1_get_len+0x2a>
   14fd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14fd8:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   14fdd:	c3                   	retq   
   14fde:	66 90                	xchg   %ax,%ax

0000000000014fe0 <asn1_get_tagged_int>:
   14fe0:	48 83 ec 18          	sub    $0x18,%rsp
   14fe4:	49 89 ca             	mov    %rcx,%r10
   14fe7:	48 89 f1             	mov    %rsi,%rcx
   14fea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14ff1:	00 00 
   14ff3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14ff8:	31 c0                	xor    %eax,%eax
   14ffa:	48 8b 07             	mov    (%rdi),%rax
   14ffd:	48 29 c1             	sub    %rax,%rcx
   15000:	48 85 c9             	test   %rcx,%rcx
   15003:	0f 8e ee 00 00 00    	jle    150f7 <asn1_get_tagged_int+0x117>
   15009:	0f b6 08             	movzbl (%rax),%ecx
   1500c:	39 ca                	cmp    %ecx,%edx
   1500e:	0f 85 d5 00 00 00    	jne    150e9 <asn1_get_tagged_int+0x109>
   15014:	48 83 c0 01          	add    $0x1,%rax
   15018:	48 89 e2             	mov    %rsp,%rdx
   1501b:	48 89 07             	mov    %rax,(%rdi)
   1501e:	e8 9d fe ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   15023:	85 c0                	test   %eax,%eax
   15025:	0f 85 a0 00 00 00    	jne    150cb <asn1_get_tagged_int+0xeb>
   1502b:	48 8b 14 24          	mov    (%rsp),%rdx
   1502f:	48 85 d2             	test   %rdx,%rdx
   15032:	0f 84 b8 00 00 00    	je     150f0 <asn1_get_tagged_int+0x110>
   15038:	48 8b 37             	mov    (%rdi),%rsi
   1503b:	44 0f b6 06          	movzbl (%rsi),%r8d
   1503f:	45 84 c0             	test   %r8b,%r8b
   15042:	79 21                	jns    15065 <asn1_get_tagged_int+0x85>
   15044:	e9 a7 00 00 00       	jmpq   150f0 <asn1_get_tagged_int+0x110>
   15049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15050:	48 83 c6 01          	add    $0x1,%rsi
   15054:	48 83 ea 01          	sub    $0x1,%rdx
   15058:	48 89 37             	mov    %rsi,(%rdi)
   1505b:	48 89 14 24          	mov    %rdx,(%rsp)
   1505f:	74 7f                	je     150e0 <asn1_get_tagged_int+0x100>
   15061:	44 0f b6 06          	movzbl (%rsi),%r8d
   15065:	45 84 c0             	test   %r8b,%r8b
   15068:	74 e6                	je     15050 <asn1_get_tagged_int+0x70>
   1506a:	48 83 fa 04          	cmp    $0x4,%rdx
   1506e:	0f 87 7c 00 00 00    	ja     150f0 <asn1_get_tagged_int+0x110>
   15074:	75 05                	jne    1507b <asn1_get_tagged_int+0x9b>
   15076:	45 84 c0             	test   %r8b,%r8b
   15079:	78 75                	js     150f0 <asn1_get_tagged_int+0x110>
   1507b:	48 8b 0c 24          	mov    (%rsp),%rcx
   1507f:	41 c7 02 00 00 00 00 	movl   $0x0,(%r10)
   15086:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   1508a:	48 89 14 24          	mov    %rdx,(%rsp)
   1508e:	48 85 c9             	test   %rcx,%rcx
   15091:	74 38                	je     150cb <asn1_get_tagged_int+0xeb>
   15093:	48 8b 17             	mov    (%rdi),%rdx
   15096:	31 f6                	xor    %esi,%esi
   15098:	4c 8d 0c 0a          	lea    (%rdx,%rcx,1),%r9
   1509c:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
   150a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   150a8:	44 0f b6 02          	movzbl (%rdx),%r8d
   150ac:	c1 e6 08             	shl    $0x8,%esi
   150af:	48 83 c2 01          	add    $0x1,%rdx
   150b3:	44 09 c6             	or     %r8d,%esi
   150b6:	49 89 c8             	mov    %rcx,%r8
   150b9:	49 29 d0             	sub    %rdx,%r8
   150bc:	41 89 32             	mov    %esi,(%r10)
   150bf:	4c 89 04 24          	mov    %r8,(%rsp)
   150c3:	48 89 17             	mov    %rdx,(%rdi)
   150c6:	49 39 d1             	cmp    %rdx,%r9
   150c9:	75 dd                	jne    150a8 <asn1_get_tagged_int+0xc8>
   150cb:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   150d0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   150d7:	00 00 
   150d9:	75 23                	jne    150fe <asn1_get_tagged_int+0x11e>
   150db:	48 83 c4 18          	add    $0x18,%rsp
   150df:	c3                   	retq   
   150e0:	41 c7 02 00 00 00 00 	movl   $0x0,(%r10)
   150e7:	eb e2                	jmp    150cb <asn1_get_tagged_int+0xeb>
   150e9:	b8 9e ff ff ff       	mov    $0xffffff9e,%eax
   150ee:	eb db                	jmp    150cb <asn1_get_tagged_int+0xeb>
   150f0:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax
   150f5:	eb d4                	jmp    150cb <asn1_get_tagged_int+0xeb>
   150f7:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   150fc:	eb cd                	jmp    150cb <asn1_get_tagged_int+0xeb>
   150fe:	e8 6d f1 fe ff       	callq  4270 <__stack_chk_fail@plt>
   15103:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1510a:	00 00 00 00 
   1510e:	66 90                	xchg   %ax,%ax

0000000000015110 <mbedtls_asn1_get_tag>:
   15110:	f3 0f 1e fa          	endbr64 
   15114:	48 8b 07             	mov    (%rdi),%rax
   15117:	49 89 f0             	mov    %rsi,%r8
   1511a:	49 29 c0             	sub    %rax,%r8
   1511d:	4d 85 c0             	test   %r8,%r8
   15120:	7e 24                	jle    15146 <mbedtls_asn1_get_tag+0x36>
   15122:	44 0f b6 00          	movzbl (%rax),%r8d
   15126:	41 39 c8             	cmp    %ecx,%r8d
   15129:	75 15                	jne    15140 <mbedtls_asn1_get_tag+0x30>
   1512b:	48 83 c0 01          	add    $0x1,%rax
   1512f:	48 89 07             	mov    %rax,(%rdi)
   15132:	e9 89 fd ff ff       	jmpq   14ec0 <mbedtls_asn1_get_len>
   15137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1513e:	00 00 
   15140:	b8 9e ff ff ff       	mov    $0xffffff9e,%eax
   15145:	c3                   	retq   
   15146:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   1514b:	c3                   	retq   
   1514c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015150 <mbedtls_asn1_get_bool>:
   15150:	f3 0f 1e fa          	endbr64 
   15154:	48 83 ec 18          	sub    $0x18,%rsp
   15158:	49 89 d2             	mov    %rdx,%r10
   1515b:	48 89 f2             	mov    %rsi,%rdx
   1515e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15165:	00 00 
   15167:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1516c:	31 c0                	xor    %eax,%eax
   1516e:	48 8b 07             	mov    (%rdi),%rax
   15171:	48 29 c2             	sub    %rax,%rdx
   15174:	48 85 d2             	test   %rdx,%rdx
   15177:	7e 5e                	jle    151d7 <mbedtls_asn1_get_bool+0x87>
   15179:	80 38 01             	cmpb   $0x1,(%rax)
   1517c:	75 4a                	jne    151c8 <mbedtls_asn1_get_bool+0x78>
   1517e:	48 83 c0 01          	add    $0x1,%rax
   15182:	48 89 e2             	mov    %rsp,%rdx
   15185:	48 89 07             	mov    %rax,(%rdi)
   15188:	e8 33 fd ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   1518d:	85 c0                	test   %eax,%eax
   1518f:	75 1c                	jne    151ad <mbedtls_asn1_get_bool+0x5d>
   15191:	48 83 3c 24 01       	cmpq   $0x1,(%rsp)
   15196:	75 38                	jne    151d0 <mbedtls_asn1_get_bool+0x80>
   15198:	48 8b 17             	mov    (%rdi),%rdx
   1519b:	31 c9                	xor    %ecx,%ecx
   1519d:	80 3a 00             	cmpb   $0x0,(%rdx)
   151a0:	0f 95 c1             	setne  %cl
   151a3:	48 83 c2 01          	add    $0x1,%rdx
   151a7:	41 89 0a             	mov    %ecx,(%r10)
   151aa:	48 89 17             	mov    %rdx,(%rdi)
   151ad:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   151b2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   151b9:	00 00 
   151bb:	75 21                	jne    151de <mbedtls_asn1_get_bool+0x8e>
   151bd:	48 83 c4 18          	add    $0x18,%rsp
   151c1:	c3                   	retq   
   151c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   151c8:	b8 9e ff ff ff       	mov    $0xffffff9e,%eax
   151cd:	eb de                	jmp    151ad <mbedtls_asn1_get_bool+0x5d>
   151cf:	90                   	nop
   151d0:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax
   151d5:	eb d6                	jmp    151ad <mbedtls_asn1_get_bool+0x5d>
   151d7:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   151dc:	eb cf                	jmp    151ad <mbedtls_asn1_get_bool+0x5d>
   151de:	e8 8d f0 fe ff       	callq  4270 <__stack_chk_fail@plt>
   151e3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   151ea:	00 00 00 00 
   151ee:	66 90                	xchg   %ax,%ax

00000000000151f0 <mbedtls_asn1_get_int>:
   151f0:	f3 0f 1e fa          	endbr64 
   151f4:	48 89 d1             	mov    %rdx,%rcx
   151f7:	ba 02 00 00 00       	mov    $0x2,%edx
   151fc:	e9 df fd ff ff       	jmpq   14fe0 <asn1_get_tagged_int>
   15201:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15208:	00 00 00 00 
   1520c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015210 <mbedtls_asn1_get_enum>:
   15210:	f3 0f 1e fa          	endbr64 
   15214:	48 89 d1             	mov    %rdx,%rcx
   15217:	ba 0a 00 00 00       	mov    $0xa,%edx
   1521c:	e9 bf fd ff ff       	jmpq   14fe0 <asn1_get_tagged_int>
   15221:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15228:	00 00 00 00 
   1522c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015230 <mbedtls_asn1_get_mpi>:
   15230:	f3 0f 1e fa          	endbr64 
   15234:	53                   	push   %rbx
   15235:	49 89 d2             	mov    %rdx,%r10
   15238:	48 89 f2             	mov    %rsi,%rdx
   1523b:	48 83 ec 10          	sub    $0x10,%rsp
   1523f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15246:	00 00 
   15248:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1524d:	31 c0                	xor    %eax,%eax
   1524f:	48 8b 07             	mov    (%rdi),%rax
   15252:	48 29 c2             	sub    %rax,%rdx
   15255:	48 85 d2             	test   %rdx,%rdx
   15258:	7e 5d                	jle    152b7 <mbedtls_asn1_get_mpi+0x87>
   1525a:	80 38 02             	cmpb   $0x2,(%rax)
   1525d:	75 51                	jne    152b0 <mbedtls_asn1_get_mpi+0x80>
   1525f:	48 83 c0 01          	add    $0x1,%rax
   15263:	48 89 e2             	mov    %rsp,%rdx
   15266:	48 89 fb             	mov    %rdi,%rbx
   15269:	48 89 07             	mov    %rax,(%rdi)
   1526c:	e8 4f fc ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   15271:	85 c0                	test   %eax,%eax
   15273:	74 1b                	je     15290 <mbedtls_asn1_get_mpi+0x60>
   15275:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1527a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   15281:	00 00 
   15283:	75 39                	jne    152be <mbedtls_asn1_get_mpi+0x8e>
   15285:	48 83 c4 10          	add    $0x10,%rsp
   15289:	5b                   	pop    %rbx
   1528a:	c3                   	retq   
   1528b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15290:	48 8b 14 24          	mov    (%rsp),%rdx
   15294:	48 8b 37             	mov    (%rdi),%rsi
   15297:	4c 89 d7             	mov    %r10,%rdi
   1529a:	e8 01 17 00 00       	callq  169a0 <mbedtls_mpi_read_binary>
   1529f:	48 8b 14 24          	mov    (%rsp),%rdx
   152a3:	48 01 13             	add    %rdx,(%rbx)
   152a6:	eb cd                	jmp    15275 <mbedtls_asn1_get_mpi+0x45>
   152a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   152af:	00 
   152b0:	b8 9e ff ff ff       	mov    $0xffffff9e,%eax
   152b5:	eb be                	jmp    15275 <mbedtls_asn1_get_mpi+0x45>
   152b7:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   152bc:	eb b7                	jmp    15275 <mbedtls_asn1_get_mpi+0x45>
   152be:	e8 ad ef fe ff       	callq  4270 <__stack_chk_fail@plt>
   152c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   152ca:	00 00 00 00 
   152ce:	66 90                	xchg   %ax,%ax

00000000000152d0 <mbedtls_asn1_get_bitstring>:
   152d0:	f3 0f 1e fa          	endbr64 
   152d4:	48 8b 07             	mov    (%rdi),%rax
   152d7:	48 89 f1             	mov    %rsi,%rcx
   152da:	49 89 f2             	mov    %rsi,%r10
   152dd:	48 29 c1             	sub    %rax,%rcx
   152e0:	48 85 c9             	test   %rcx,%rcx
   152e3:	7e 6b                	jle    15350 <mbedtls_asn1_get_bitstring+0x80>
   152e5:	80 38 03             	cmpb   $0x3,(%rax)
   152e8:	75 56                	jne    15340 <mbedtls_asn1_get_bitstring+0x70>
   152ea:	48 83 c0 01          	add    $0x1,%rax
   152ee:	48 89 07             	mov    %rax,(%rdi)
   152f1:	e8 ca fb ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   152f6:	85 c0                	test   %eax,%eax
   152f8:	75 40                	jne    1533a <mbedtls_asn1_get_bitstring+0x6a>
   152fa:	4c 8b 02             	mov    (%rdx),%r8
   152fd:	4d 85 c0             	test   %r8,%r8
   15300:	74 4e                	je     15350 <mbedtls_asn1_get_bitstring+0x80>
   15302:	49 8d 48 ff          	lea    -0x1(%r8),%rcx
   15306:	48 89 0a             	mov    %rcx,(%rdx)
   15309:	48 8b 0f             	mov    (%rdi),%rcx
   1530c:	0f b6 09             	movzbl (%rcx),%ecx
   1530f:	88 4a 08             	mov    %cl,0x8(%rdx)
   15312:	80 f9 07             	cmp    $0x7,%cl
   15315:	77 1e                	ja     15335 <mbedtls_asn1_get_bitstring+0x65>
   15317:	48 8b 0f             	mov    (%rdi),%rcx
   1531a:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   1531e:	48 89 72 10          	mov    %rsi,0x10(%rdx)
   15322:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
   15326:	4c 39 d2             	cmp    %r10,%rdx
   15329:	48 89 17             	mov    %rdx,(%rdi)
   1532c:	ba 9a ff ff ff       	mov    $0xffffff9a,%edx
   15331:	0f 45 c2             	cmovne %edx,%eax
   15334:	c3                   	retq   
   15335:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax
   1533a:	c3                   	retq   
   1533b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15340:	b8 9e ff ff ff       	mov    $0xffffff9e,%eax
   15345:	c3                   	retq   
   15346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1534d:	00 00 00 
   15350:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   15355:	c3                   	retq   
   15356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1535d:	00 00 00 

0000000000015360 <mbedtls_asn1_traverse_sequence_of>:
   15360:	f3 0f 1e fa          	endbr64 
   15364:	41 57                	push   %r15
   15366:	41 56                	push   %r14
   15368:	41 55                	push   %r13
   1536a:	41 54                	push   %r12
   1536c:	55                   	push   %rbp
   1536d:	53                   	push   %rbx
   1536e:	89 d3                	mov    %edx,%ebx
   15370:	48 89 f2             	mov    %rsi,%rdx
   15373:	48 83 ec 28          	sub    $0x28,%rsp
   15377:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1537c:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   15381:	44 88 44 24 0a       	mov    %r8b,0xa(%rsp)
   15386:	44 88 4c 24 0b       	mov    %r9b,0xb(%rsp)
   1538b:	48 89 04 24          	mov    %rax,(%rsp)
   1538f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15396:	00 00 
   15398:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1539d:	31 c0                	xor    %eax,%eax
   1539f:	48 8b 07             	mov    (%rdi),%rax
   153a2:	48 29 c2             	sub    %rax,%rdx
   153a5:	48 85 d2             	test   %rdx,%rdx
   153a8:	0f 8e 12 01 00 00    	jle    154c0 <mbedtls_asn1_traverse_sequence_of+0x160>
   153ae:	80 38 30             	cmpb   $0x30,(%rax)
   153b1:	0f 85 e9 00 00 00    	jne    154a0 <mbedtls_asn1_traverse_sequence_of+0x140>
   153b7:	48 83 c0 01          	add    $0x1,%rax
   153bb:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   153c0:	49 89 fd             	mov    %rdi,%r13
   153c3:	49 89 f4             	mov    %rsi,%r12
   153c6:	48 89 07             	mov    %rax,(%rdi)
   153c9:	4c 89 f2             	mov    %r14,%rdx
   153cc:	89 cd                	mov    %ecx,%ebp
   153ce:	e8 ed fa ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   153d3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   153d7:	85 c0                	test   %eax,%eax
   153d9:	0f 85 99 00 00 00    	jne    15478 <mbedtls_asn1_traverse_sequence_of+0x118>
   153df:	48 8b 17             	mov    (%rdi),%rdx
   153e2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   153e7:	48 01 d0             	add    %rdx,%rax
   153ea:	49 39 c4             	cmp    %rax,%r12
   153ed:	0f 85 c3 00 00 00    	jne    154b6 <mbedtls_asn1_traverse_sequence_of+0x156>
   153f3:	4c 39 e2             	cmp    %r12,%rdx
   153f6:	72 14                	jb     1540c <mbedtls_asn1_traverse_sequence_of+0xac>
   153f8:	eb 7e                	jmp    15478 <mbedtls_asn1_traverse_sequence_of+0x118>
   153fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15400:	48 01 ca             	add    %rcx,%rdx
   15403:	49 89 55 00          	mov    %rdx,0x0(%r13)
   15407:	4c 39 e2             	cmp    %r12,%rdx
   1540a:	73 6c                	jae    15478 <mbedtls_asn1_traverse_sequence_of+0x118>
   1540c:	48 8d 42 01          	lea    0x1(%rdx),%rax
   15410:	49 89 45 00          	mov    %rax,0x0(%r13)
   15414:	44 0f b6 12          	movzbl (%rdx),%r10d
   15418:	44 89 d0             	mov    %r10d,%eax
   1541b:	21 d8                	and    %ebx,%eax
   1541d:	40 38 e8             	cmp    %bpl,%al
   15420:	75 7e                	jne    154a0 <mbedtls_asn1_traverse_sequence_of+0x140>
   15422:	4c 89 f2             	mov    %r14,%rdx
   15425:	4c 89 e6             	mov    %r12,%rsi
   15428:	4c 89 ef             	mov    %r13,%rdi
   1542b:	e8 90 fa ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   15430:	85 c0                	test   %eax,%eax
   15432:	75 7c                	jne    154b0 <mbedtls_asn1_traverse_sequence_of+0x150>
   15434:	0f b6 44 24 0a       	movzbl 0xa(%rsp),%eax
   15439:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1543e:	49 8b 55 00          	mov    0x0(%r13),%rdx
   15442:	44 21 d0             	and    %r10d,%eax
   15445:	3a 44 24 0b          	cmp    0xb(%rsp),%al
   15449:	75 b5                	jne    15400 <mbedtls_asn1_traverse_sequence_of+0xa0>
   1544b:	4d 85 ff             	test   %r15,%r15
   1544e:	74 b0                	je     15400 <mbedtls_asn1_traverse_sequence_of+0xa0>
   15450:	48 8b 3c 24          	mov    (%rsp),%rdi
   15454:	41 0f b6 f2          	movzbl %r10b,%esi
   15458:	41 ff d7             	callq  *%r15
   1545b:	85 c0                	test   %eax,%eax
   1545d:	75 51                	jne    154b0 <mbedtls_asn1_traverse_sequence_of+0x150>
   1545f:	49 8b 55 00          	mov    0x0(%r13),%rdx
   15463:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   15468:	48 01 ca             	add    %rcx,%rdx
   1546b:	49 89 55 00          	mov    %rdx,0x0(%r13)
   1546f:	4c 39 e2             	cmp    %r12,%rdx
   15472:	72 98                	jb     1540c <mbedtls_asn1_traverse_sequence_of+0xac>
   15474:	0f 1f 40 00          	nopl   0x0(%rax)
   15478:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1547d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   15484:	00 00 
   15486:	75 42                	jne    154ca <mbedtls_asn1_traverse_sequence_of+0x16a>
   15488:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1548c:	48 83 c4 28          	add    $0x28,%rsp
   15490:	5b                   	pop    %rbx
   15491:	5d                   	pop    %rbp
   15492:	41 5c                	pop    %r12
   15494:	41 5d                	pop    %r13
   15496:	41 5e                	pop    %r14
   15498:	41 5f                	pop    %r15
   1549a:	c3                   	retq   
   1549b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   154a0:	c7 44 24 0c 9e ff ff 	movl   $0xffffff9e,0xc(%rsp)
   154a7:	ff 
   154a8:	eb ce                	jmp    15478 <mbedtls_asn1_traverse_sequence_of+0x118>
   154aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   154b0:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   154b4:	eb c2                	jmp    15478 <mbedtls_asn1_traverse_sequence_of+0x118>
   154b6:	c7 44 24 0c 9a ff ff 	movl   $0xffffff9a,0xc(%rsp)
   154bd:	ff 
   154be:	eb b8                	jmp    15478 <mbedtls_asn1_traverse_sequence_of+0x118>
   154c0:	c7 44 24 0c a0 ff ff 	movl   $0xffffffa0,0xc(%rsp)
   154c7:	ff 
   154c8:	eb ae                	jmp    15478 <mbedtls_asn1_traverse_sequence_of+0x118>
   154ca:	e8 a1 ed fe ff       	callq  4270 <__stack_chk_fail@plt>
   154cf:	90                   	nop

00000000000154d0 <mbedtls_asn1_get_bitstring_null>:
   154d0:	f3 0f 1e fa          	endbr64 
   154d4:	48 8b 07             	mov    (%rdi),%rax
   154d7:	48 89 f1             	mov    %rsi,%rcx
   154da:	48 29 c1             	sub    %rax,%rcx
   154dd:	48 85 c9             	test   %rcx,%rcx
   154e0:	7e 54                	jle    15536 <mbedtls_asn1_get_bitstring_null+0x66>
   154e2:	80 38 03             	cmpb   $0x3,(%rax)
   154e5:	75 39                	jne    15520 <mbedtls_asn1_get_bitstring_null+0x50>
   154e7:	48 83 c0 01          	add    $0x1,%rax
   154eb:	48 89 07             	mov    %rax,(%rdi)
   154ee:	e8 cd f9 ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   154f3:	85 c0                	test   %eax,%eax
   154f5:	75 2e                	jne    15525 <mbedtls_asn1_get_bitstring_null+0x55>
   154f7:	48 8b 0a             	mov    (%rdx),%rcx
   154fa:	48 85 c9             	test   %rcx,%rcx
   154fd:	74 31                	je     15530 <mbedtls_asn1_get_bitstring_null+0x60>
   154ff:	48 83 e9 01          	sub    $0x1,%rcx
   15503:	48 89 0a             	mov    %rcx,(%rdx)
   15506:	48 8b 17             	mov    (%rdi),%rdx
   15509:	80 3a 00             	cmpb   $0x0,(%rdx)
   1550c:	75 22                	jne    15530 <mbedtls_asn1_get_bitstring_null+0x60>
   1550e:	48 83 c2 01          	add    $0x1,%rdx
   15512:	48 89 17             	mov    %rdx,(%rdi)
   15515:	c3                   	retq   
   15516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1551d:	00 00 00 
   15520:	b8 9e ff ff ff       	mov    $0xffffff9e,%eax
   15525:	c3                   	retq   
   15526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1552d:	00 00 00 
   15530:	b8 98 ff ff ff       	mov    $0xffffff98,%eax
   15535:	c3                   	retq   
   15536:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   1553b:	c3                   	retq   
   1553c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015540 <mbedtls_asn1_sequence_free>:
   15540:	f3 0f 1e fa          	endbr64 
   15544:	48 85 ff             	test   %rdi,%rdi
   15547:	74 1f                	je     15568 <mbedtls_asn1_sequence_free+0x28>
   15549:	53                   	push   %rbx
   1554a:	48 89 fb             	mov    %rdi,%rbx
   1554d:	0f 1f 00             	nopl   (%rax)
   15550:	48 89 df             	mov    %rbx,%rdi
   15553:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
   15557:	e8 94 ec fe ff       	callq  41f0 <free@plt>
   1555c:	48 85 db             	test   %rbx,%rbx
   1555f:	75 ef                	jne    15550 <mbedtls_asn1_sequence_free+0x10>
   15561:	5b                   	pop    %rbx
   15562:	c3                   	retq   
   15563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15568:	c3                   	retq   
   15569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000015570 <mbedtls_asn1_get_sequence_of>:
   15570:	f3 0f 1e fa          	endbr64 
   15574:	48 83 ec 28          	sub    $0x28,%rsp
   15578:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1557c:	45 31 c9             	xor    %r9d,%r9d
   1557f:	45 31 c0             	xor    %r8d,%r8d
   15582:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15589:	00 00 
   1558b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15590:	31 c0                	xor    %eax,%eax
   15592:	48 89 e0             	mov    %rsp,%rax
   15595:	89 0c 24             	mov    %ecx,(%rsp)
   15598:	0f b6 c9             	movzbl %cl,%ecx
   1559b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   155a0:	0f 11 02             	movups %xmm0,(%rdx)
   155a3:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
   155a7:	ba ff 00 00 00       	mov    $0xff,%edx
   155ac:	50                   	push   %rax
   155ad:	48 8d 05 9c f8 ff ff 	lea    -0x764(%rip),%rax        # 14e50 <asn1_get_sequence_of_cb>
   155b4:	50                   	push   %rax
   155b5:	e8 a6 fd ff ff       	callq  15360 <mbedtls_asn1_traverse_sequence_of>
   155ba:	5a                   	pop    %rdx
   155bb:	59                   	pop    %rcx
   155bc:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   155c1:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   155c8:	00 00 
   155ca:	75 05                	jne    155d1 <mbedtls_asn1_get_sequence_of+0x61>
   155cc:	48 83 c4 28          	add    $0x28,%rsp
   155d0:	c3                   	retq   
   155d1:	e8 9a ec fe ff       	callq  4270 <__stack_chk_fail@plt>
   155d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   155dd:	00 00 00 

00000000000155e0 <mbedtls_asn1_get_alg>:
   155e0:	f3 0f 1e fa          	endbr64 
   155e4:	53                   	push   %rbx
   155e5:	48 89 d3             	mov    %rdx,%rbx
   155e8:	48 89 f2             	mov    %rsi,%rdx
   155eb:	48 83 ec 20          	sub    $0x20,%rsp
   155ef:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   155f6:	00 00 
   155f8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   155fd:	31 c0                	xor    %eax,%eax
   155ff:	48 8b 07             	mov    (%rdi),%rax
   15602:	48 29 c2             	sub    %rax,%rdx
   15605:	48 85 d2             	test   %rdx,%rdx
   15608:	0f 8e 02 01 00 00    	jle    15710 <mbedtls_asn1_get_alg+0x130>
   1560e:	80 38 30             	cmpb   $0x30,(%rax)
   15611:	0f 85 e9 00 00 00    	jne    15700 <mbedtls_asn1_get_alg+0x120>
   15617:	48 83 c0 01          	add    $0x1,%rax
   1561b:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   15620:	49 89 f2             	mov    %rsi,%r10
   15623:	49 89 cb             	mov    %rcx,%r11
   15626:	48 89 07             	mov    %rax,(%rdi)
   15629:	e8 92 f8 ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   1562e:	85 c0                	test   %eax,%eax
   15630:	0f 85 92 00 00 00    	jne    156c8 <mbedtls_asn1_get_alg+0xe8>
   15636:	48 8b 07             	mov    (%rdi),%rax
   15639:	49 29 c2             	sub    %rax,%r10
   1563c:	4d 85 d2             	test   %r10,%r10
   1563f:	0f 8e cb 00 00 00    	jle    15710 <mbedtls_asn1_get_alg+0x130>
   15645:	0f b6 10             	movzbl (%rax),%edx
   15648:	4c 8d 43 08          	lea    0x8(%rbx),%r8
   1564c:	89 13                	mov    %edx,(%rbx)
   1564e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15653:	4c 8d 14 10          	lea    (%rax,%rdx,1),%r10
   15657:	48 85 d2             	test   %rdx,%rdx
   1565a:	0f 8e b0 00 00 00    	jle    15710 <mbedtls_asn1_get_alg+0x130>
   15660:	80 38 06             	cmpb   $0x6,(%rax)
   15663:	0f 85 97 00 00 00    	jne    15700 <mbedtls_asn1_get_alg+0x120>
   15669:	48 83 c0 01          	add    $0x1,%rax
   1566d:	4c 89 c2             	mov    %r8,%rdx
   15670:	4c 89 d6             	mov    %r10,%rsi
   15673:	48 89 07             	mov    %rax,(%rdi)
   15676:	e8 45 f8 ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   1567b:	85 c0                	test   %eax,%eax
   1567d:	75 49                	jne    156c8 <mbedtls_asn1_get_alg+0xe8>
   1567f:	48 8b 17             	mov    (%rdi),%rdx
   15682:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   15686:	48 03 53 08          	add    0x8(%rbx),%rdx
   1568a:	48 89 17             	mov    %rdx,(%rdi)
   1568d:	4c 39 d2             	cmp    %r10,%rdx
   15690:	74 4e                	je     156e0 <mbedtls_asn1_get_alg+0x100>
   15692:	0f b6 02             	movzbl (%rdx),%eax
   15695:	48 83 c2 01          	add    $0x1,%rdx
   15699:	4c 89 d6             	mov    %r10,%rsi
   1569c:	41 89 03             	mov    %eax,(%r11)
   1569f:	48 89 17             	mov    %rdx,(%rdi)
   156a2:	49 8d 53 08          	lea    0x8(%r11),%rdx
   156a6:	e8 15 f8 ff ff       	callq  14ec0 <mbedtls_asn1_get_len>
   156ab:	85 c0                	test   %eax,%eax
   156ad:	75 19                	jne    156c8 <mbedtls_asn1_get_alg+0xe8>
   156af:	48 8b 17             	mov    (%rdi),%rdx
   156b2:	49 89 53 10          	mov    %rdx,0x10(%r11)
   156b6:	49 03 53 08          	add    0x8(%r11),%rdx
   156ba:	4c 39 d2             	cmp    %r10,%rdx
   156bd:	48 89 17             	mov    %rdx,(%rdi)
   156c0:	ba 9a ff ff ff       	mov    $0xffffff9a,%edx
   156c5:	0f 45 c2             	cmovne %edx,%eax
   156c8:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   156cd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   156d4:	00 00 
   156d6:	75 3f                	jne    15717 <mbedtls_asn1_get_alg+0x137>
   156d8:	48 83 c4 20          	add    $0x20,%rsp
   156dc:	5b                   	pop    %rbx
   156dd:	c3                   	retq   
   156de:	66 90                	xchg   %ax,%ax
   156e0:	be 18 00 00 00       	mov    $0x18,%esi
   156e5:	4c 89 df             	mov    %r11,%rdi
   156e8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   156ec:	e8 bf 99 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   156f1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   156f5:	eb d1                	jmp    156c8 <mbedtls_asn1_get_alg+0xe8>
   156f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   156fe:	00 00 
   15700:	b8 9e ff ff ff       	mov    $0xffffff9e,%eax
   15705:	eb c1                	jmp    156c8 <mbedtls_asn1_get_alg+0xe8>
   15707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1570e:	00 00 
   15710:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   15715:	eb b1                	jmp    156c8 <mbedtls_asn1_get_alg+0xe8>
   15717:	e8 54 eb fe ff       	callq  4270 <__stack_chk_fail@plt>
   1571c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015720 <mbedtls_asn1_get_alg_null>:
   15720:	f3 0f 1e fa          	endbr64 
   15724:	48 83 ec 28          	sub    $0x28,%rsp
   15728:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1572c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15733:	00 00 
   15735:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1573a:	31 c0                	xor    %eax,%eax
   1573c:	48 89 e1             	mov    %rsp,%rcx
   1573f:	0f 29 04 24          	movaps %xmm0,(%rsp)
   15743:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1574a:	00 00 
   1574c:	e8 8f fe ff ff       	callq  155e0 <mbedtls_asn1_get_alg>
   15751:	85 c0                	test   %eax,%eax
   15753:	75 1a                	jne    1576f <mbedtls_asn1_get_alg_null+0x4f>
   15755:	8b 14 24             	mov    (%rsp),%edx
   15758:	83 fa 05             	cmp    $0x5,%edx
   1575b:	74 04                	je     15761 <mbedtls_asn1_get_alg_null+0x41>
   1575d:	85 d2                	test   %edx,%edx
   1575f:	75 23                	jne    15784 <mbedtls_asn1_get_alg_null+0x64>
   15761:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   15767:	ba 98 ff ff ff       	mov    $0xffffff98,%edx
   1576c:	0f 45 c2             	cmovne %edx,%eax
   1576f:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   15774:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1577b:	00 00 
   1577d:	75 0c                	jne    1578b <mbedtls_asn1_get_alg_null+0x6b>
   1577f:	48 83 c4 28          	add    $0x28,%rsp
   15783:	c3                   	retq   
   15784:	b8 98 ff ff ff       	mov    $0xffffff98,%eax
   15789:	eb e4                	jmp    1576f <mbedtls_asn1_get_alg_null+0x4f>
   1578b:	e8 e0 ea fe ff       	callq  4270 <__stack_chk_fail@plt>

0000000000015790 <mbedtls_asn1_free_named_data>:
   15790:	f3 0f 1e fa          	endbr64 
   15794:	48 85 ff             	test   %rdi,%rdi
   15797:	74 27                	je     157c0 <mbedtls_asn1_free_named_data+0x30>
   15799:	55                   	push   %rbp
   1579a:	48 89 fd             	mov    %rdi,%rbp
   1579d:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   157a1:	e8 4a ea fe ff       	callq  41f0 <free@plt>
   157a6:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   157aa:	e8 41 ea fe ff       	callq  41f0 <free@plt>
   157af:	48 89 ef             	mov    %rbp,%rdi
   157b2:	be 40 00 00 00       	mov    $0x40,%esi
   157b7:	5d                   	pop    %rbp
   157b8:	e9 f3 98 ff ff       	jmpq   f0b0 <mbedtls_platform_zeroize>
   157bd:	0f 1f 00             	nopl   (%rax)
   157c0:	c3                   	retq   
   157c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   157c8:	00 00 00 00 
   157cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000157d0 <mbedtls_asn1_free_named_data_list>:
   157d0:	f3 0f 1e fa          	endbr64 
   157d4:	55                   	push   %rbp
   157d5:	53                   	push   %rbx
   157d6:	48 83 ec 08          	sub    $0x8,%rsp
   157da:	48 8b 2f             	mov    (%rdi),%rbp
   157dd:	48 85 ed             	test   %rbp,%rbp
   157e0:	74 2f                	je     15811 <mbedtls_asn1_free_named_data_list+0x41>
   157e2:	48 89 fb             	mov    %rdi,%rbx
   157e5:	0f 1f 00             	nopl   (%rax)
   157e8:	48 8b 45 30          	mov    0x30(%rbp),%rax
   157ec:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   157f0:	48 89 03             	mov    %rax,(%rbx)
   157f3:	e8 f8 e9 fe ff       	callq  41f0 <free@plt>
   157f8:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   157fc:	e8 ef e9 fe ff       	callq  41f0 <free@plt>
   15801:	48 89 ef             	mov    %rbp,%rdi
   15804:	e8 e7 e9 fe ff       	callq  41f0 <free@plt>
   15809:	48 8b 2b             	mov    (%rbx),%rbp
   1580c:	48 85 ed             	test   %rbp,%rbp
   1580f:	75 d7                	jne    157e8 <mbedtls_asn1_free_named_data_list+0x18>
   15811:	48 83 c4 08          	add    $0x8,%rsp
   15815:	5b                   	pop    %rbx
   15816:	5d                   	pop    %rbp
   15817:	c3                   	retq   
   15818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1581f:	00 

0000000000015820 <mbedtls_asn1_free_named_data_list_shallow>:
   15820:	f3 0f 1e fa          	endbr64 
   15824:	48 85 ff             	test   %rdi,%rdi
   15827:	74 1f                	je     15848 <mbedtls_asn1_free_named_data_list_shallow+0x28>
   15829:	53                   	push   %rbx
   1582a:	48 89 fb             	mov    %rdi,%rbx
   1582d:	0f 1f 00             	nopl   (%rax)
   15830:	48 89 df             	mov    %rbx,%rdi
   15833:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
   15837:	e8 b4 e9 fe ff       	callq  41f0 <free@plt>
   1583c:	48 85 db             	test   %rbx,%rbx
   1583f:	75 ef                	jne    15830 <mbedtls_asn1_free_named_data_list_shallow+0x10>
   15841:	5b                   	pop    %rbx
   15842:	c3                   	retq   
   15843:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15848:	c3                   	retq   
   15849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000015850 <mbedtls_asn1_find_named_data>:
   15850:	f3 0f 1e fa          	endbr64 
   15854:	41 54                	push   %r12
   15856:	49 89 fc             	mov    %rdi,%r12
   15859:	55                   	push   %rbp
   1585a:	53                   	push   %rbx
   1585b:	48 85 ff             	test   %rdi,%rdi
   1585e:	74 35                	je     15895 <mbedtls_asn1_find_named_data+0x45>
   15860:	48 89 f5             	mov    %rsi,%rbp
   15863:	48 89 d3             	mov    %rdx,%rbx
   15866:	eb 12                	jmp    1587a <mbedtls_asn1_find_named_data+0x2a>
   15868:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1586f:	00 
   15870:	4d 8b 64 24 30       	mov    0x30(%r12),%r12
   15875:	4d 85 e4             	test   %r12,%r12
   15878:	74 1b                	je     15895 <mbedtls_asn1_find_named_data+0x45>
   1587a:	49 39 5c 24 08       	cmp    %rbx,0x8(%r12)
   1587f:	75 ef                	jne    15870 <mbedtls_asn1_find_named_data+0x20>
   15881:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   15886:	48 89 da             	mov    %rbx,%rdx
   15889:	48 89 ee             	mov    %rbp,%rsi
   1588c:	e8 1f ea fe ff       	callq  42b0 <memcmp@plt>
   15891:	85 c0                	test   %eax,%eax
   15893:	75 db                	jne    15870 <mbedtls_asn1_find_named_data+0x20>
   15895:	4c 89 e0             	mov    %r12,%rax
   15898:	5b                   	pop    %rbx
   15899:	5d                   	pop    %rbp
   1589a:	41 5c                	pop    %r12
   1589c:	c3                   	retq   
   1589d:	0f 1f 00             	nopl   (%rax)

00000000000158a0 <mbedtls_asn1_write_len>:
   158a0:	f3 0f 1e fa          	endbr64 
   158a4:	48 83 fa 7f          	cmp    $0x7f,%rdx
   158a8:	77 26                	ja     158d0 <mbedtls_asn1_write_len+0x30>
   158aa:	48 8b 07             	mov    (%rdi),%rax
   158ad:	48 89 c1             	mov    %rax,%rcx
   158b0:	48 29 f1             	sub    %rsi,%rcx
   158b3:	48 85 c9             	test   %rcx,%rcx
   158b6:	0f 8e 84 01 00 00    	jle    15a40 <mbedtls_asn1_write_len+0x1a0>
   158bc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   158c0:	48 89 0f             	mov    %rcx,(%rdi)
   158c3:	88 50 ff             	mov    %dl,-0x1(%rax)
   158c6:	b8 01 00 00 00       	mov    $0x1,%eax
   158cb:	c3                   	retq   
   158cc:	0f 1f 40 00          	nopl   0x0(%rax)
   158d0:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
   158d7:	77 37                	ja     15910 <mbedtls_asn1_write_len+0x70>
   158d9:	48 8b 07             	mov    (%rdi),%rax
   158dc:	48 89 c1             	mov    %rax,%rcx
   158df:	48 29 f1             	sub    %rsi,%rcx
   158e2:	48 83 f9 01          	cmp    $0x1,%rcx
   158e6:	0f 8e 54 01 00 00    	jle    15a40 <mbedtls_asn1_write_len+0x1a0>
   158ec:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   158f0:	48 89 0f             	mov    %rcx,(%rdi)
   158f3:	88 50 ff             	mov    %dl,-0x1(%rax)
   158f6:	48 8b 07             	mov    (%rdi),%rax
   158f9:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   158fd:	48 89 17             	mov    %rdx,(%rdi)
   15900:	c6 40 ff 81          	movb   $0x81,-0x1(%rax)
   15904:	b8 02 00 00 00       	mov    $0x2,%eax
   15909:	c3                   	retq   
   1590a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15910:	48 81 fa ff ff 00 00 	cmp    $0xffff,%rdx
   15917:	76 67                	jbe    15980 <mbedtls_asn1_write_len+0xe0>
   15919:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
   15920:	0f 87 a2 00 00 00    	ja     159c8 <mbedtls_asn1_write_len+0x128>
   15926:	48 8b 07             	mov    (%rdi),%rax
   15929:	48 89 c1             	mov    %rax,%rcx
   1592c:	48 29 f1             	sub    %rsi,%rcx
   1592f:	48 83 f9 03          	cmp    $0x3,%rcx
   15933:	0f 8e 07 01 00 00    	jle    15a40 <mbedtls_asn1_write_len+0x1a0>
   15939:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1593d:	48 89 0f             	mov    %rcx,(%rdi)
   15940:	88 50 ff             	mov    %dl,-0x1(%rax)
   15943:	48 8b 07             	mov    (%rdi),%rax
   15946:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1594a:	48 89 0f             	mov    %rcx,(%rdi)
   1594d:	48 89 d1             	mov    %rdx,%rcx
   15950:	48 c1 ea 10          	shr    $0x10,%rdx
   15954:	48 c1 e9 08          	shr    $0x8,%rcx
   15958:	88 48 ff             	mov    %cl,-0x1(%rax)
   1595b:	48 8b 07             	mov    (%rdi),%rax
   1595e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15962:	48 89 0f             	mov    %rcx,(%rdi)
   15965:	88 50 ff             	mov    %dl,-0x1(%rax)
   15968:	48 8b 07             	mov    (%rdi),%rax
   1596b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1596f:	48 89 17             	mov    %rdx,(%rdi)
   15972:	c6 40 ff 83          	movb   $0x83,-0x1(%rax)
   15976:	b8 04 00 00 00       	mov    $0x4,%eax
   1597b:	c3                   	retq   
   1597c:	0f 1f 40 00          	nopl   0x0(%rax)
   15980:	48 8b 07             	mov    (%rdi),%rax
   15983:	48 89 c1             	mov    %rax,%rcx
   15986:	48 29 f1             	sub    %rsi,%rcx
   15989:	48 83 f9 02          	cmp    $0x2,%rcx
   1598d:	0f 8e ad 00 00 00    	jle    15a40 <mbedtls_asn1_write_len+0x1a0>
   15993:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15997:	48 89 0f             	mov    %rcx,(%rdi)
   1599a:	88 50 ff             	mov    %dl,-0x1(%rax)
   1599d:	48 8b 07             	mov    (%rdi),%rax
   159a0:	48 c1 ea 08          	shr    $0x8,%rdx
   159a4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   159a8:	48 89 0f             	mov    %rcx,(%rdi)
   159ab:	88 50 ff             	mov    %dl,-0x1(%rax)
   159ae:	48 8b 07             	mov    (%rdi),%rax
   159b1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   159b5:	48 89 17             	mov    %rdx,(%rdi)
   159b8:	c6 40 ff 82          	movb   $0x82,-0x1(%rax)
   159bc:	b8 03 00 00 00       	mov    $0x3,%eax
   159c1:	c3                   	retq   
   159c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   159c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   159cd:	48 39 c2             	cmp    %rax,%rdx
   159d0:	77 74                	ja     15a46 <mbedtls_asn1_write_len+0x1a6>
   159d2:	48 8b 07             	mov    (%rdi),%rax
   159d5:	48 89 c1             	mov    %rax,%rcx
   159d8:	48 29 f1             	sub    %rsi,%rcx
   159db:	48 83 f9 04          	cmp    $0x4,%rcx
   159df:	7e 5f                	jle    15a40 <mbedtls_asn1_write_len+0x1a0>
   159e1:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   159e5:	48 89 0f             	mov    %rcx,(%rdi)
   159e8:	88 50 ff             	mov    %dl,-0x1(%rax)
   159eb:	48 8b 07             	mov    (%rdi),%rax
   159ee:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   159f2:	48 89 0f             	mov    %rcx,(%rdi)
   159f5:	48 89 d1             	mov    %rdx,%rcx
   159f8:	48 c1 e9 08          	shr    $0x8,%rcx
   159fc:	88 48 ff             	mov    %cl,-0x1(%rax)
   159ff:	48 8b 07             	mov    (%rdi),%rax
   15a02:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15a06:	48 89 0f             	mov    %rcx,(%rdi)
   15a09:	48 89 d1             	mov    %rdx,%rcx
   15a0c:	48 c1 ea 18          	shr    $0x18,%rdx
   15a10:	48 c1 e9 10          	shr    $0x10,%rcx
   15a14:	88 48 ff             	mov    %cl,-0x1(%rax)
   15a17:	48 8b 07             	mov    (%rdi),%rax
   15a1a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15a1e:	48 89 0f             	mov    %rcx,(%rdi)
   15a21:	88 50 ff             	mov    %dl,-0x1(%rax)
   15a24:	48 8b 07             	mov    (%rdi),%rax
   15a27:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   15a2b:	48 89 17             	mov    %rdx,(%rdi)
   15a2e:	c6 40 ff 84          	movb   $0x84,-0x1(%rax)
   15a32:	b8 05 00 00 00       	mov    $0x5,%eax
   15a37:	c3                   	retq   
   15a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15a3f:	00 
   15a40:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15a45:	c3                   	retq   
   15a46:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax
   15a4b:	c3                   	retq   
   15a4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015a50 <asn1_write_tagged_int>:
   15a50:	41 89 cb             	mov    %ecx,%r11d
   15a53:	45 31 c9             	xor    %r9d,%r9d
   15a56:	eb 20                	jmp    15a78 <asn1_write_tagged_int+0x28>
   15a58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15a5f:	00 
   15a60:	4c 8d 50 ff          	lea    -0x1(%rax),%r10
   15a64:	4d 8d 41 01          	lea    0x1(%r9),%r8
   15a68:	4c 89 17             	mov    %r10,(%rdi)
   15a6b:	88 50 ff             	mov    %dl,-0x1(%rax)
   15a6e:	c1 fa 08             	sar    $0x8,%edx
   15a71:	85 d2                	test   %edx,%edx
   15a73:	7e 1b                	jle    15a90 <asn1_write_tagged_int+0x40>
   15a75:	4d 89 c1             	mov    %r8,%r9
   15a78:	48 8b 07             	mov    (%rdi),%rax
   15a7b:	49 89 c0             	mov    %rax,%r8
   15a7e:	49 29 f0             	sub    %rsi,%r8
   15a81:	4d 85 c0             	test   %r8,%r8
   15a84:	7f da                	jg     15a60 <asn1_write_tagged_int+0x10>
   15a86:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15a8b:	c3                   	retq   
   15a8c:	0f 1f 40 00          	nopl   0x0(%rax)
   15a90:	48 8b 07             	mov    (%rdi),%rax
   15a93:	80 38 00             	cmpb   $0x0,(%rax)
   15a96:	79 1a                	jns    15ab2 <asn1_write_tagged_int+0x62>
   15a98:	48 89 c2             	mov    %rax,%rdx
   15a9b:	48 29 f2             	sub    %rsi,%rdx
   15a9e:	48 85 d2             	test   %rdx,%rdx
   15aa1:	7e e3                	jle    15a86 <asn1_write_tagged_int+0x36>
   15aa3:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   15aa7:	4d 8d 41 02          	lea    0x2(%r9),%r8
   15aab:	48 89 17             	mov    %rdx,(%rdi)
   15aae:	c6 40 ff 00          	movb   $0x0,-0x1(%rax)
   15ab2:	4c 89 c2             	mov    %r8,%rdx
   15ab5:	e8 e6 fd ff ff       	callq  158a0 <mbedtls_asn1_write_len>
   15aba:	85 c0                	test   %eax,%eax
   15abc:	78 22                	js     15ae0 <asn1_write_tagged_int+0x90>
   15abe:	48 8b 17             	mov    (%rdi),%rdx
   15ac1:	48 98                	cltq   
   15ac3:	49 83 c0 01          	add    $0x1,%r8
   15ac7:	48 89 d1             	mov    %rdx,%rcx
   15aca:	48 29 f1             	sub    %rsi,%rcx
   15acd:	48 85 c9             	test   %rcx,%rcx
   15ad0:	7e b4                	jle    15a86 <asn1_write_tagged_int+0x36>
   15ad2:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   15ad6:	44 01 c0             	add    %r8d,%eax
   15ad9:	48 89 0f             	mov    %rcx,(%rdi)
   15adc:	44 88 5a ff          	mov    %r11b,-0x1(%rdx)
   15ae0:	c3                   	retq   
   15ae1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15ae8:	00 00 00 00 
   15aec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015af0 <mbedtls_asn1_write_tag>:
   15af0:	f3 0f 1e fa          	endbr64 
   15af4:	48 8b 07             	mov    (%rdi),%rax
   15af7:	48 89 c1             	mov    %rax,%rcx
   15afa:	48 29 f1             	sub    %rsi,%rcx
   15afd:	48 85 c9             	test   %rcx,%rcx
   15b00:	7e 10                	jle    15b12 <mbedtls_asn1_write_tag+0x22>
   15b02:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15b06:	48 89 0f             	mov    %rcx,(%rdi)
   15b09:	88 50 ff             	mov    %dl,-0x1(%rax)
   15b0c:	b8 01 00 00 00       	mov    $0x1,%eax
   15b11:	c3                   	retq   
   15b12:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15b17:	c3                   	retq   
   15b18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15b1f:	00 

0000000000015b20 <mbedtls_asn1_write_raw_buffer>:
   15b20:	f3 0f 1e fa          	endbr64 
   15b24:	48 89 f8             	mov    %rdi,%rax
   15b27:	48 8b 3f             	mov    (%rdi),%rdi
   15b2a:	48 39 f7             	cmp    %rsi,%rdi
   15b2d:	72 41                	jb     15b70 <mbedtls_asn1_write_raw_buffer+0x50>
   15b2f:	49 89 d0             	mov    %rdx,%r8
   15b32:	48 89 fa             	mov    %rdi,%rdx
   15b35:	53                   	push   %rbx
   15b36:	48 89 cb             	mov    %rcx,%rbx
   15b39:	48 29 f2             	sub    %rsi,%rdx
   15b3c:	48 39 ca             	cmp    %rcx,%rdx
   15b3f:	72 1f                	jb     15b60 <mbedtls_asn1_write_raw_buffer+0x40>
   15b41:	48 29 cf             	sub    %rcx,%rdi
   15b44:	48 89 ca             	mov    %rcx,%rdx
   15b47:	4c 89 c6             	mov    %r8,%rsi
   15b4a:	48 89 38             	mov    %rdi,(%rax)
   15b4d:	e8 ce e7 fe ff       	callq  4320 <memcpy@plt>
   15b52:	89 d8                	mov    %ebx,%eax
   15b54:	5b                   	pop    %rbx
   15b55:	c3                   	retq   
   15b56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15b5d:	00 00 00 
   15b60:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15b65:	5b                   	pop    %rbx
   15b66:	c3                   	retq   
   15b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15b6e:	00 00 
   15b70:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15b75:	c3                   	retq   
   15b76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15b7d:	00 00 00 

0000000000015b80 <mbedtls_asn1_write_mpi>:
   15b80:	f3 0f 1e fa          	endbr64 
   15b84:	41 55                	push   %r13
   15b86:	49 89 d5             	mov    %rdx,%r13
   15b89:	41 54                	push   %r12
   15b8b:	49 89 fc             	mov    %rdi,%r12
   15b8e:	48 89 d7             	mov    %rdx,%rdi
   15b91:	55                   	push   %rbp
   15b92:	48 89 f5             	mov    %rsi,%rbp
   15b95:	53                   	push   %rbx
   15b96:	bb 01 00 00 00       	mov    $0x1,%ebx
   15b9b:	48 83 ec 08          	sub    $0x8,%rsp
   15b9f:	e8 7c 0d 00 00       	callq  16920 <mbedtls_mpi_size>
   15ba4:	49 8b 34 24          	mov    (%r12),%rsi
   15ba8:	48 85 c0             	test   %rax,%rax
   15bab:	48 0f 45 d8          	cmovne %rax,%rbx
   15baf:	48 39 ee             	cmp    %rbp,%rsi
   15bb2:	0f 82 98 00 00 00    	jb     15c50 <mbedtls_asn1_write_mpi+0xd0>
   15bb8:	48 89 f0             	mov    %rsi,%rax
   15bbb:	48 29 e8             	sub    %rbp,%rax
   15bbe:	48 39 d8             	cmp    %rbx,%rax
   15bc1:	0f 82 89 00 00 00    	jb     15c50 <mbedtls_asn1_write_mpi+0xd0>
   15bc7:	48 29 de             	sub    %rbx,%rsi
   15bca:	48 89 da             	mov    %rbx,%rdx
   15bcd:	4c 89 ef             	mov    %r13,%rdi
   15bd0:	49 89 34 24          	mov    %rsi,(%r12)
   15bd4:	e8 37 0e 00 00       	callq  16a10 <mbedtls_mpi_write_binary>
   15bd9:	85 c0                	test   %eax,%eax
   15bdb:	75 45                	jne    15c22 <mbedtls_asn1_write_mpi+0xa2>
   15bdd:	41 83 7d 00 01       	cmpl   $0x1,0x0(%r13)
   15be2:	75 09                	jne    15bed <mbedtls_asn1_write_mpi+0x6d>
   15be4:	49 8b 04 24          	mov    (%r12),%rax
   15be8:	80 38 00             	cmpb   $0x0,(%rax)
   15beb:	78 43                	js     15c30 <mbedtls_asn1_write_mpi+0xb0>
   15bed:	48 89 da             	mov    %rbx,%rdx
   15bf0:	48 89 ee             	mov    %rbp,%rsi
   15bf3:	4c 89 e7             	mov    %r12,%rdi
   15bf6:	e8 a5 fc ff ff       	callq  158a0 <mbedtls_asn1_write_len>
   15bfb:	85 c0                	test   %eax,%eax
   15bfd:	78 23                	js     15c22 <mbedtls_asn1_write_mpi+0xa2>
   15bff:	49 8b 14 24          	mov    (%r12),%rdx
   15c03:	48 98                	cltq   
   15c05:	48 83 c3 01          	add    $0x1,%rbx
   15c09:	48 89 d1             	mov    %rdx,%rcx
   15c0c:	48 29 e9             	sub    %rbp,%rcx
   15c0f:	48 85 c9             	test   %rcx,%rcx
   15c12:	7e 3c                	jle    15c50 <mbedtls_asn1_write_mpi+0xd0>
   15c14:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   15c18:	01 d8                	add    %ebx,%eax
   15c1a:	49 89 0c 24          	mov    %rcx,(%r12)
   15c1e:	c6 42 ff 02          	movb   $0x2,-0x1(%rdx)
   15c22:	48 83 c4 08          	add    $0x8,%rsp
   15c26:	5b                   	pop    %rbx
   15c27:	5d                   	pop    %rbp
   15c28:	41 5c                	pop    %r12
   15c2a:	41 5d                	pop    %r13
   15c2c:	c3                   	retq   
   15c2d:	0f 1f 00             	nopl   (%rax)
   15c30:	48 89 c2             	mov    %rax,%rdx
   15c33:	48 29 ea             	sub    %rbp,%rdx
   15c36:	48 85 d2             	test   %rdx,%rdx
   15c39:	7e 15                	jle    15c50 <mbedtls_asn1_write_mpi+0xd0>
   15c3b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   15c3f:	48 83 c3 01          	add    $0x1,%rbx
   15c43:	49 89 14 24          	mov    %rdx,(%r12)
   15c47:	c6 40 ff 00          	movb   $0x0,-0x1(%rax)
   15c4b:	eb a0                	jmp    15bed <mbedtls_asn1_write_mpi+0x6d>
   15c4d:	0f 1f 00             	nopl   (%rax)
   15c50:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15c55:	eb cb                	jmp    15c22 <mbedtls_asn1_write_mpi+0xa2>
   15c57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15c5e:	00 00 

0000000000015c60 <mbedtls_asn1_write_null>:
   15c60:	f3 0f 1e fa          	endbr64 
   15c64:	48 8b 07             	mov    (%rdi),%rax
   15c67:	48 89 c2             	mov    %rax,%rdx
   15c6a:	48 29 f2             	sub    %rsi,%rdx
   15c6d:	48 85 d2             	test   %rdx,%rdx
   15c70:	7e 2e                	jle    15ca0 <mbedtls_asn1_write_null+0x40>
   15c72:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   15c76:	48 89 17             	mov    %rdx,(%rdi)
   15c79:	c6 40 ff 00          	movb   $0x0,-0x1(%rax)
   15c7d:	48 8b 07             	mov    (%rdi),%rax
   15c80:	48 89 c2             	mov    %rax,%rdx
   15c83:	48 29 f2             	sub    %rsi,%rdx
   15c86:	48 85 d2             	test   %rdx,%rdx
   15c89:	7e 15                	jle    15ca0 <mbedtls_asn1_write_null+0x40>
   15c8b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   15c8f:	48 89 17             	mov    %rdx,(%rdi)
   15c92:	c6 40 ff 05          	movb   $0x5,-0x1(%rax)
   15c96:	b8 02 00 00 00       	mov    $0x2,%eax
   15c9b:	c3                   	retq   
   15c9c:	0f 1f 40 00          	nopl   0x0(%rax)
   15ca0:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15ca5:	c3                   	retq   
   15ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15cad:	00 00 00 

0000000000015cb0 <mbedtls_asn1_write_oid>:
   15cb0:	f3 0f 1e fa          	endbr64 
   15cb4:	41 54                	push   %r12
   15cb6:	49 89 f4             	mov    %rsi,%r12
   15cb9:	55                   	push   %rbp
   15cba:	48 89 fd             	mov    %rdi,%rbp
   15cbd:	53                   	push   %rbx
   15cbe:	48 8b 3f             	mov    (%rdi),%rdi
   15cc1:	48 39 fe             	cmp    %rdi,%rsi
   15cc4:	77 6a                	ja     15d30 <mbedtls_asn1_write_oid+0x80>
   15cc6:	48 89 f8             	mov    %rdi,%rax
   15cc9:	48 89 cb             	mov    %rcx,%rbx
   15ccc:	48 29 f0             	sub    %rsi,%rax
   15ccf:	48 39 c1             	cmp    %rax,%rcx
   15cd2:	77 5c                	ja     15d30 <mbedtls_asn1_write_oid+0x80>
   15cd4:	48 29 cf             	sub    %rcx,%rdi
   15cd7:	48 89 d6             	mov    %rdx,%rsi
   15cda:	48 89 ca             	mov    %rcx,%rdx
   15cdd:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
   15ce1:	e8 3a e6 fe ff       	callq  4320 <memcpy@plt>
   15ce6:	89 d8                	mov    %ebx,%eax
   15ce8:	85 db                	test   %ebx,%ebx
   15cea:	78 38                	js     15d24 <mbedtls_asn1_write_oid+0x74>
   15cec:	48 63 db             	movslq %ebx,%rbx
   15cef:	4c 89 e6             	mov    %r12,%rsi
   15cf2:	48 89 ef             	mov    %rbp,%rdi
   15cf5:	48 89 da             	mov    %rbx,%rdx
   15cf8:	e8 a3 fb ff ff       	callq  158a0 <mbedtls_asn1_write_len>
   15cfd:	85 c0                	test   %eax,%eax
   15cff:	78 23                	js     15d24 <mbedtls_asn1_write_oid+0x74>
   15d01:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   15d05:	48 98                	cltq   
   15d07:	48 83 c3 01          	add    $0x1,%rbx
   15d0b:	48 89 d1             	mov    %rdx,%rcx
   15d0e:	4c 29 e1             	sub    %r12,%rcx
   15d11:	48 85 c9             	test   %rcx,%rcx
   15d14:	7e 1a                	jle    15d30 <mbedtls_asn1_write_oid+0x80>
   15d16:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   15d1a:	01 d8                	add    %ebx,%eax
   15d1c:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
   15d20:	c6 42 ff 06          	movb   $0x6,-0x1(%rdx)
   15d24:	5b                   	pop    %rbx
   15d25:	5d                   	pop    %rbp
   15d26:	41 5c                	pop    %r12
   15d28:	c3                   	retq   
   15d29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15d30:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15d35:	eb ed                	jmp    15d24 <mbedtls_asn1_write_oid+0x74>
   15d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15d3e:	00 00 

0000000000015d40 <mbedtls_asn1_write_algorithm_identifier>:
   15d40:	f3 0f 1e fa          	endbr64 
   15d44:	41 54                	push   %r12
   15d46:	49 89 f4             	mov    %rsi,%r12
   15d49:	55                   	push   %rbp
   15d4a:	53                   	push   %rbx
   15d4b:	48 89 fb             	mov    %rdi,%rbx
   15d4e:	4d 85 c0             	test   %r8,%r8
   15d51:	0f 85 89 00 00 00    	jne    15de0 <mbedtls_asn1_write_algorithm_identifier+0xa0>
   15d57:	48 8b 07             	mov    (%rdi),%rax
   15d5a:	48 89 c6             	mov    %rax,%rsi
   15d5d:	4c 29 e6             	sub    %r12,%rsi
   15d60:	48 85 f6             	test   %rsi,%rsi
   15d63:	0f 8e 7f 00 00 00    	jle    15de8 <mbedtls_asn1_write_algorithm_identifier+0xa8>
   15d69:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   15d6d:	48 89 37             	mov    %rsi,(%rdi)
   15d70:	c6 40 ff 00          	movb   $0x0,-0x1(%rax)
   15d74:	48 8b 07             	mov    (%rdi),%rax
   15d77:	48 89 c6             	mov    %rax,%rsi
   15d7a:	4c 29 e6             	sub    %r12,%rsi
   15d7d:	48 85 f6             	test   %rsi,%rsi
   15d80:	7e 66                	jle    15de8 <mbedtls_asn1_write_algorithm_identifier+0xa8>
   15d82:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   15d86:	bd 02 00 00 00       	mov    $0x2,%ebp
   15d8b:	48 89 37             	mov    %rsi,(%rdi)
   15d8e:	c6 40 ff 05          	movb   $0x5,-0x1(%rax)
   15d92:	4c 89 e6             	mov    %r12,%rsi
   15d95:	48 89 df             	mov    %rbx,%rdi
   15d98:	e8 13 ff ff ff       	callq  15cb0 <mbedtls_asn1_write_oid>
   15d9d:	85 c0                	test   %eax,%eax
   15d9f:	78 38                	js     15dd9 <mbedtls_asn1_write_algorithm_identifier+0x99>
   15da1:	48 98                	cltq   
   15da3:	4c 89 e6             	mov    %r12,%rsi
   15da6:	48 89 df             	mov    %rbx,%rdi
   15da9:	48 01 c5             	add    %rax,%rbp
   15dac:	48 89 ea             	mov    %rbp,%rdx
   15daf:	e8 ec fa ff ff       	callq  158a0 <mbedtls_asn1_write_len>
   15db4:	85 c0                	test   %eax,%eax
   15db6:	78 21                	js     15dd9 <mbedtls_asn1_write_algorithm_identifier+0x99>
   15db8:	48 8b 13             	mov    (%rbx),%rdx
   15dbb:	48 98                	cltq   
   15dbd:	48 83 c5 01          	add    $0x1,%rbp
   15dc1:	48 89 d1             	mov    %rdx,%rcx
   15dc4:	4c 29 e1             	sub    %r12,%rcx
   15dc7:	48 85 c9             	test   %rcx,%rcx
   15dca:	7e 1c                	jle    15de8 <mbedtls_asn1_write_algorithm_identifier+0xa8>
   15dcc:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   15dd0:	01 e8                	add    %ebp,%eax
   15dd2:	48 89 0b             	mov    %rcx,(%rbx)
   15dd5:	c6 42 ff 30          	movb   $0x30,-0x1(%rdx)
   15dd9:	5b                   	pop    %rbx
   15dda:	5d                   	pop    %rbp
   15ddb:	41 5c                	pop    %r12
   15ddd:	c3                   	retq   
   15dde:	66 90                	xchg   %ax,%ax
   15de0:	4c 89 c5             	mov    %r8,%rbp
   15de3:	eb ad                	jmp    15d92 <mbedtls_asn1_write_algorithm_identifier+0x52>
   15de5:	0f 1f 00             	nopl   (%rax)
   15de8:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15ded:	eb ea                	jmp    15dd9 <mbedtls_asn1_write_algorithm_identifier+0x99>
   15def:	90                   	nop

0000000000015df0 <mbedtls_asn1_write_bool>:
   15df0:	f3 0f 1e fa          	endbr64 
   15df4:	48 8b 07             	mov    (%rdi),%rax
   15df7:	48 89 c1             	mov    %rax,%rcx
   15dfa:	48 29 f1             	sub    %rsi,%rcx
   15dfd:	48 85 c9             	test   %rcx,%rcx
   15e00:	7e 3e                	jle    15e40 <mbedtls_asn1_write_bool+0x50>
   15e02:	85 d2                	test   %edx,%edx
   15e04:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15e08:	0f 95 c2             	setne  %dl
   15e0b:	48 89 0f             	mov    %rcx,(%rdi)
   15e0e:	f7 da                	neg    %edx
   15e10:	88 50 ff             	mov    %dl,-0x1(%rax)
   15e13:	ba 01 00 00 00       	mov    $0x1,%edx
   15e18:	e8 83 fa ff ff       	callq  158a0 <mbedtls_asn1_write_len>
   15e1d:	85 c0                	test   %eax,%eax
   15e1f:	78 1c                	js     15e3d <mbedtls_asn1_write_bool+0x4d>
   15e21:	48 8b 17             	mov    (%rdi),%rdx
   15e24:	48 89 d1             	mov    %rdx,%rcx
   15e27:	48 29 f1             	sub    %rsi,%rcx
   15e2a:	48 85 c9             	test   %rcx,%rcx
   15e2d:	7e 11                	jle    15e40 <mbedtls_asn1_write_bool+0x50>
   15e2f:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   15e33:	83 c0 02             	add    $0x2,%eax
   15e36:	48 89 0f             	mov    %rcx,(%rdi)
   15e39:	c6 42 ff 01          	movb   $0x1,-0x1(%rdx)
   15e3d:	c3                   	retq   
   15e3e:	66 90                	xchg   %ax,%ax
   15e40:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15e45:	c3                   	retq   
   15e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15e4d:	00 00 00 

0000000000015e50 <mbedtls_asn1_write_int>:
   15e50:	f3 0f 1e fa          	endbr64 
   15e54:	b9 02 00 00 00       	mov    $0x2,%ecx
   15e59:	e9 f2 fb ff ff       	jmpq   15a50 <asn1_write_tagged_int>
   15e5e:	66 90                	xchg   %ax,%ax

0000000000015e60 <mbedtls_asn1_write_enum>:
   15e60:	f3 0f 1e fa          	endbr64 
   15e64:	b9 0a 00 00 00       	mov    $0xa,%ecx
   15e69:	e9 e2 fb ff ff       	jmpq   15a50 <asn1_write_tagged_int>
   15e6e:	66 90                	xchg   %ax,%ax

0000000000015e70 <mbedtls_asn1_write_tagged_string>:
   15e70:	f3 0f 1e fa          	endbr64 
   15e74:	41 55                	push   %r13
   15e76:	49 89 f5             	mov    %rsi,%r13
   15e79:	41 54                	push   %r12
   15e7b:	49 89 fc             	mov    %rdi,%r12
   15e7e:	55                   	push   %rbp
   15e7f:	53                   	push   %rbx
   15e80:	48 83 ec 08          	sub    $0x8,%rsp
   15e84:	48 8b 3f             	mov    (%rdi),%rdi
   15e87:	48 39 fe             	cmp    %rdi,%rsi
   15e8a:	77 74                	ja     15f00 <mbedtls_asn1_write_tagged_string+0x90>
   15e8c:	48 89 f8             	mov    %rdi,%rax
   15e8f:	4c 89 c3             	mov    %r8,%rbx
   15e92:	48 29 f0             	sub    %rsi,%rax
   15e95:	49 39 c0             	cmp    %rax,%r8
   15e98:	77 66                	ja     15f00 <mbedtls_asn1_write_tagged_string+0x90>
   15e9a:	4c 29 c7             	sub    %r8,%rdi
   15e9d:	89 d5                	mov    %edx,%ebp
   15e9f:	48 89 ce             	mov    %rcx,%rsi
   15ea2:	4c 89 c2             	mov    %r8,%rdx
   15ea5:	49 89 3c 24          	mov    %rdi,(%r12)
   15ea9:	e8 72 e4 fe ff       	callq  4320 <memcpy@plt>
   15eae:	89 d8                	mov    %ebx,%eax
   15eb0:	85 db                	test   %ebx,%ebx
   15eb2:	78 38                	js     15eec <mbedtls_asn1_write_tagged_string+0x7c>
   15eb4:	48 63 db             	movslq %ebx,%rbx
   15eb7:	4c 89 ee             	mov    %r13,%rsi
   15eba:	4c 89 e7             	mov    %r12,%rdi
   15ebd:	48 89 da             	mov    %rbx,%rdx
   15ec0:	e8 db f9 ff ff       	callq  158a0 <mbedtls_asn1_write_len>
   15ec5:	85 c0                	test   %eax,%eax
   15ec7:	78 23                	js     15eec <mbedtls_asn1_write_tagged_string+0x7c>
   15ec9:	49 8b 14 24          	mov    (%r12),%rdx
   15ecd:	48 98                	cltq   
   15ecf:	48 83 c3 01          	add    $0x1,%rbx
   15ed3:	48 89 d1             	mov    %rdx,%rcx
   15ed6:	4c 29 e9             	sub    %r13,%rcx
   15ed9:	48 85 c9             	test   %rcx,%rcx
   15edc:	7e 22                	jle    15f00 <mbedtls_asn1_write_tagged_string+0x90>
   15ede:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   15ee2:	01 d8                	add    %ebx,%eax
   15ee4:	49 89 0c 24          	mov    %rcx,(%r12)
   15ee8:	40 88 6a ff          	mov    %bpl,-0x1(%rdx)
   15eec:	48 83 c4 08          	add    $0x8,%rsp
   15ef0:	5b                   	pop    %rbx
   15ef1:	5d                   	pop    %rbp
   15ef2:	41 5c                	pop    %r12
   15ef4:	41 5d                	pop    %r13
   15ef6:	c3                   	retq   
   15ef7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15efe:	00 00 
   15f00:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   15f05:	eb e5                	jmp    15eec <mbedtls_asn1_write_tagged_string+0x7c>
   15f07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15f0e:	00 00 

0000000000015f10 <mbedtls_asn1_write_utf8_string>:
   15f10:	f3 0f 1e fa          	endbr64 
   15f14:	49 89 c8             	mov    %rcx,%r8
   15f17:	48 89 d1             	mov    %rdx,%rcx
   15f1a:	ba 0c 00 00 00       	mov    $0xc,%edx
   15f1f:	e9 4c ff ff ff       	jmpq   15e70 <mbedtls_asn1_write_tagged_string>
   15f24:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15f2b:	00 00 00 00 
   15f2f:	90                   	nop

0000000000015f30 <mbedtls_asn1_write_printable_string>:
   15f30:	f3 0f 1e fa          	endbr64 
   15f34:	49 89 c8             	mov    %rcx,%r8
   15f37:	48 89 d1             	mov    %rdx,%rcx
   15f3a:	ba 13 00 00 00       	mov    $0x13,%edx
   15f3f:	e9 2c ff ff ff       	jmpq   15e70 <mbedtls_asn1_write_tagged_string>
   15f44:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15f4b:	00 00 00 00 
   15f4f:	90                   	nop

0000000000015f50 <mbedtls_asn1_write_ia5_string>:
   15f50:	f3 0f 1e fa          	endbr64 
   15f54:	49 89 c8             	mov    %rcx,%r8
   15f57:	48 89 d1             	mov    %rdx,%rcx
   15f5a:	ba 16 00 00 00       	mov    $0x16,%edx
   15f5f:	e9 0c ff ff ff       	jmpq   15e70 <mbedtls_asn1_write_tagged_string>
   15f64:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15f6b:	00 00 00 00 
   15f6f:	90                   	nop

0000000000015f70 <mbedtls_asn1_write_bitstring>:
   15f70:	f3 0f 1e fa          	endbr64 
   15f74:	41 56                	push   %r14
   15f76:	41 55                	push   %r13
   15f78:	41 54                	push   %r12
   15f7a:	55                   	push   %rbp
   15f7b:	48 89 f5             	mov    %rsi,%rbp
   15f7e:	48 89 d6             	mov    %rdx,%rsi
   15f81:	48 8d 51 07          	lea    0x7(%rcx),%rdx
   15f85:	53                   	push   %rbx
   15f86:	49 89 d5             	mov    %rdx,%r13
   15f89:	48 8b 07             	mov    (%rdi),%rax
   15f8c:	49 89 d4             	mov    %rdx,%r12
   15f8f:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   15f93:	49 c1 ec 03          	shr    $0x3,%r12
   15f97:	49 29 cd             	sub    %rcx,%r13
   15f9a:	48 39 e8             	cmp    %rbp,%rax
   15f9d:	0f 82 ad 00 00 00    	jb     16050 <mbedtls_asn1_write_bitstring+0xe0>
   15fa3:	48 89 c1             	mov    %rax,%rcx
   15fa6:	4d 8d 74 24 01       	lea    0x1(%r12),%r14
   15fab:	48 29 e9             	sub    %rbp,%rcx
   15fae:	4c 39 f1             	cmp    %r14,%rcx
   15fb1:	0f 82 99 00 00 00    	jb     16050 <mbedtls_asn1_write_bitstring+0xe0>
   15fb7:	48 89 fb             	mov    %rdi,%rbx
   15fba:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
   15fbe:	48 83 fa 07          	cmp    $0x7,%rdx
   15fc2:	77 4c                	ja     16010 <mbedtls_asn1_write_bitstring+0xa0>
   15fc4:	48 89 3b             	mov    %rdi,(%rbx)
   15fc7:	4c 89 f2             	mov    %r14,%rdx
   15fca:	48 89 ee             	mov    %rbp,%rsi
   15fcd:	48 89 df             	mov    %rbx,%rdi
   15fd0:	44 88 68 ff          	mov    %r13b,-0x1(%rax)
   15fd4:	e8 c7 f8 ff ff       	callq  158a0 <mbedtls_asn1_write_len>
   15fd9:	85 c0                	test   %eax,%eax
   15fdb:	78 22                	js     15fff <mbedtls_asn1_write_bitstring+0x8f>
   15fdd:	48 8b 13             	mov    (%rbx),%rdx
   15fe0:	48 98                	cltq   
   15fe2:	49 83 c4 02          	add    $0x2,%r12
   15fe6:	48 89 d1             	mov    %rdx,%rcx
   15fe9:	48 29 e9             	sub    %rbp,%rcx
   15fec:	48 85 c9             	test   %rcx,%rcx
   15fef:	7e 5f                	jle    16050 <mbedtls_asn1_write_bitstring+0xe0>
   15ff1:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   15ff5:	44 01 e0             	add    %r12d,%eax
   15ff8:	48 89 0b             	mov    %rcx,(%rbx)
   15ffb:	c6 42 ff 03          	movb   $0x3,-0x1(%rdx)
   15fff:	5b                   	pop    %rbx
   16000:	5d                   	pop    %rbp
   16001:	41 5c                	pop    %r12
   16003:	41 5d                	pop    %r13
   16005:	41 5e                	pop    %r14
   16007:	c3                   	retq   
   16008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1600f:	00 
   16010:	44 89 e9             	mov    %r13d,%ecx
   16013:	ba 01 00 00 00       	mov    $0x1,%edx
   16018:	4d 8d 44 24 ff       	lea    -0x1(%r12),%r8
   1601d:	d3 e2                	shl    %cl,%edx
   1601f:	f7 da                	neg    %edx
   16021:	42 22 54 26 ff       	and    -0x1(%rsi,%r12,1),%dl
   16026:	48 89 3b             	mov    %rdi,(%rbx)
   16029:	bf 01 00 00 00       	mov    $0x1,%edi
   1602e:	88 50 ff             	mov    %dl,-0x1(%rax)
   16031:	4c 29 e7             	sub    %r12,%rdi
   16034:	48 03 3b             	add    (%rbx),%rdi
   16037:	4c 89 c2             	mov    %r8,%rdx
   1603a:	48 89 3b             	mov    %rdi,(%rbx)
   1603d:	e8 de e2 fe ff       	callq  4320 <memcpy@plt>
   16042:	48 8b 03             	mov    (%rbx),%rax
   16045:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
   16049:	e9 76 ff ff ff       	jmpq   15fc4 <mbedtls_asn1_write_bitstring+0x54>
   1604e:	66 90                	xchg   %ax,%ax
   16050:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   16055:	eb a8                	jmp    15fff <mbedtls_asn1_write_bitstring+0x8f>
   16057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1605e:	00 00 

0000000000016060 <mbedtls_asn1_write_named_bitstring>:
   16060:	f3 0f 1e fa          	endbr64 
   16064:	49 89 c8             	mov    %rcx,%r8
   16067:	48 85 c9             	test   %rcx,%rcx
   1606a:	74 26                	je     16092 <mbedtls_asn1_write_named_bitstring+0x32>
   1606c:	48 8d 49 07          	lea    0x7(%rcx),%rcx
   16070:	48 89 c8             	mov    %rcx,%rax
   16073:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   16077:	48 c1 e8 03          	shr    $0x3,%rax
   1607b:	4c 29 c1             	sub    %r8,%rcx
   1607e:	4c 8d 4c 02 ff       	lea    -0x1(%rdx,%rax,1),%r9
   16083:	41 0f b6 01          	movzbl (%r9),%eax
   16087:	d3 f8                	sar    %cl,%eax
   16089:	89 c1                	mov    %eax,%ecx
   1608b:	d0 e8                	shr    %al
   1608d:	83 e1 01             	and    $0x1,%ecx
   16090:	74 28                	je     160ba <mbedtls_asn1_write_named_bitstring+0x5a>
   16092:	4c 89 c1             	mov    %r8,%rcx
   16095:	e9 d6 fe ff ff       	jmpq   15f70 <mbedtls_asn1_write_bitstring>
   1609a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   160a0:	41 f6 c0 07          	test   $0x7,%r8b
   160a4:	75 09                	jne    160af <mbedtls_asn1_write_named_bitstring+0x4f>
   160a6:	41 0f b6 41 ff       	movzbl -0x1(%r9),%eax
   160ab:	49 83 e9 01          	sub    $0x1,%r9
   160af:	89 c1                	mov    %eax,%ecx
   160b1:	d0 e8                	shr    %al
   160b3:	83 e1 01             	and    $0x1,%ecx
   160b6:	84 c9                	test   %cl,%cl
   160b8:	75 d8                	jne    16092 <mbedtls_asn1_write_named_bitstring+0x32>
   160ba:	49 83 e8 01          	sub    $0x1,%r8
   160be:	75 e0                	jne    160a0 <mbedtls_asn1_write_named_bitstring+0x40>
   160c0:	4c 89 c1             	mov    %r8,%rcx
   160c3:	e9 a8 fe ff ff       	jmpq   15f70 <mbedtls_asn1_write_bitstring>
   160c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   160cf:	00 

00000000000160d0 <mbedtls_asn1_write_octet_string>:
   160d0:	f3 0f 1e fa          	endbr64 
   160d4:	41 54                	push   %r12
   160d6:	49 89 f4             	mov    %rsi,%r12
   160d9:	55                   	push   %rbp
   160da:	48 89 fd             	mov    %rdi,%rbp
   160dd:	53                   	push   %rbx
   160de:	48 8b 3f             	mov    (%rdi),%rdi
   160e1:	48 39 fe             	cmp    %rdi,%rsi
   160e4:	77 6a                	ja     16150 <mbedtls_asn1_write_octet_string+0x80>
   160e6:	48 89 f8             	mov    %rdi,%rax
   160e9:	48 89 cb             	mov    %rcx,%rbx
   160ec:	48 29 f0             	sub    %rsi,%rax
   160ef:	48 39 c1             	cmp    %rax,%rcx
   160f2:	77 5c                	ja     16150 <mbedtls_asn1_write_octet_string+0x80>
   160f4:	48 29 cf             	sub    %rcx,%rdi
   160f7:	48 89 d6             	mov    %rdx,%rsi
   160fa:	48 89 ca             	mov    %rcx,%rdx
   160fd:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
   16101:	e8 1a e2 fe ff       	callq  4320 <memcpy@plt>
   16106:	89 d8                	mov    %ebx,%eax
   16108:	85 db                	test   %ebx,%ebx
   1610a:	78 38                	js     16144 <mbedtls_asn1_write_octet_string+0x74>
   1610c:	48 63 db             	movslq %ebx,%rbx
   1610f:	4c 89 e6             	mov    %r12,%rsi
   16112:	48 89 ef             	mov    %rbp,%rdi
   16115:	48 89 da             	mov    %rbx,%rdx
   16118:	e8 83 f7 ff ff       	callq  158a0 <mbedtls_asn1_write_len>
   1611d:	85 c0                	test   %eax,%eax
   1611f:	78 23                	js     16144 <mbedtls_asn1_write_octet_string+0x74>
   16121:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   16125:	48 98                	cltq   
   16127:	48 83 c3 01          	add    $0x1,%rbx
   1612b:	48 89 d1             	mov    %rdx,%rcx
   1612e:	4c 29 e1             	sub    %r12,%rcx
   16131:	48 85 c9             	test   %rcx,%rcx
   16134:	7e 1a                	jle    16150 <mbedtls_asn1_write_octet_string+0x80>
   16136:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   1613a:	01 d8                	add    %ebx,%eax
   1613c:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
   16140:	c6 42 ff 04          	movb   $0x4,-0x1(%rdx)
   16144:	5b                   	pop    %rbx
   16145:	5d                   	pop    %rbp
   16146:	41 5c                	pop    %r12
   16148:	c3                   	retq   
   16149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16150:	b8 94 ff ff ff       	mov    $0xffffff94,%eax
   16155:	eb ed                	jmp    16144 <mbedtls_asn1_write_octet_string+0x74>
   16157:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1615e:	00 00 

0000000000016160 <mbedtls_asn1_store_named_data>:
   16160:	f3 0f 1e fa          	endbr64 
   16164:	41 57                	push   %r15
   16166:	41 56                	push   %r14
   16168:	49 89 d6             	mov    %rdx,%r14
   1616b:	41 55                	push   %r13
   1616d:	4d 89 c5             	mov    %r8,%r13
   16170:	41 54                	push   %r12
   16172:	55                   	push   %rbp
   16173:	48 89 cd             	mov    %rcx,%rbp
   16176:	53                   	push   %rbx
   16177:	48 89 f3             	mov    %rsi,%rbx
   1617a:	48 83 ec 18          	sub    $0x18,%rsp
   1617e:	4c 8b 3f             	mov    (%rdi),%r15
   16181:	48 89 3c 24          	mov    %rdi,(%rsp)
   16185:	4d 85 ff             	test   %r15,%r15
   16188:	0f 84 ba 00 00 00    	je     16248 <mbedtls_asn1_store_named_data+0xe8>
   1618e:	4d 89 fc             	mov    %r15,%r12
   16191:	eb 13                	jmp    161a6 <mbedtls_asn1_store_named_data+0x46>
   16193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16198:	4d 8b 64 24 30       	mov    0x30(%r12),%r12
   1619d:	4d 85 e4             	test   %r12,%r12
   161a0:	0f 84 a2 00 00 00    	je     16248 <mbedtls_asn1_store_named_data+0xe8>
   161a6:	4d 3b 74 24 08       	cmp    0x8(%r12),%r14
   161ab:	75 eb                	jne    16198 <mbedtls_asn1_store_named_data+0x38>
   161ad:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   161b2:	4c 89 f2             	mov    %r14,%rdx
   161b5:	48 89 de             	mov    %rbx,%rsi
   161b8:	e8 f3 e0 fe ff       	callq  42b0 <memcmp@plt>
   161bd:	85 c0                	test   %eax,%eax
   161bf:	75 d7                	jne    16198 <mbedtls_asn1_store_named_data+0x38>
   161c1:	4d 85 ed             	test   %r13,%r13
   161c4:	74 6a                	je     16230 <mbedtls_asn1_store_named_data+0xd0>
   161c6:	4d 39 6c 24 20       	cmp    %r13,0x20(%r12)
   161cb:	75 33                	jne    16200 <mbedtls_asn1_store_named_data+0xa0>
   161cd:	48 85 ed             	test   %rbp,%rbp
   161d0:	74 15                	je     161e7 <mbedtls_asn1_store_named_data+0x87>
   161d2:	4d 85 ed             	test   %r13,%r13
   161d5:	74 10                	je     161e7 <mbedtls_asn1_store_named_data+0x87>
   161d7:	49 8b 7c 24 28       	mov    0x28(%r12),%rdi
   161dc:	4c 89 ea             	mov    %r13,%rdx
   161df:	48 89 ee             	mov    %rbp,%rsi
   161e2:	e8 39 e1 fe ff       	callq  4320 <memcpy@plt>
   161e7:	48 83 c4 18          	add    $0x18,%rsp
   161eb:	4c 89 e0             	mov    %r12,%rax
   161ee:	5b                   	pop    %rbx
   161ef:	5d                   	pop    %rbp
   161f0:	41 5c                	pop    %r12
   161f2:	41 5d                	pop    %r13
   161f4:	41 5e                	pop    %r14
   161f6:	41 5f                	pop    %r15
   161f8:	c3                   	retq   
   161f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16200:	4c 89 ee             	mov    %r13,%rsi
   16203:	bf 01 00 00 00       	mov    $0x1,%edi
   16208:	e8 c3 e0 fe ff       	callq  42d0 <calloc@plt>
   1620d:	48 89 c3             	mov    %rax,%rbx
   16210:	48 85 c0             	test   %rax,%rax
   16213:	0f 84 c0 00 00 00    	je     162d9 <mbedtls_asn1_store_named_data+0x179>
   16219:	49 8b 7c 24 28       	mov    0x28(%r12),%rdi
   1621e:	e8 cd df fe ff       	callq  41f0 <free@plt>
   16223:	49 89 5c 24 28       	mov    %rbx,0x28(%r12)
   16228:	4d 89 6c 24 20       	mov    %r13,0x20(%r12)
   1622d:	eb 9e                	jmp    161cd <mbedtls_asn1_store_named_data+0x6d>
   1622f:	90                   	nop
   16230:	49 8b 7c 24 28       	mov    0x28(%r12),%rdi
   16235:	e8 b6 df fe ff       	callq  41f0 <free@plt>
   1623a:	49 c7 44 24 28 00 00 	movq   $0x0,0x28(%r12)
   16241:	00 00 
   16243:	eb a2                	jmp    161e7 <mbedtls_asn1_store_named_data+0x87>
   16245:	0f 1f 00             	nopl   (%rax)
   16248:	be 40 00 00 00       	mov    $0x40,%esi
   1624d:	bf 01 00 00 00       	mov    $0x1,%edi
   16252:	e8 79 e0 fe ff       	callq  42d0 <calloc@plt>
   16257:	49 89 c4             	mov    %rax,%r12
   1625a:	48 85 c0             	test   %rax,%rax
   1625d:	74 7a                	je     162d9 <mbedtls_asn1_store_named_data+0x179>
   1625f:	4d 89 74 24 08       	mov    %r14,0x8(%r12)
   16264:	4c 89 f6             	mov    %r14,%rsi
   16267:	bf 01 00 00 00       	mov    $0x1,%edi
   1626c:	e8 5f e0 fe ff       	callq  42d0 <calloc@plt>
   16271:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   16276:	48 85 c0             	test   %rax,%rax
   16279:	74 56                	je     162d1 <mbedtls_asn1_store_named_data+0x171>
   1627b:	4c 89 f2             	mov    %r14,%rdx
   1627e:	48 89 de             	mov    %rbx,%rsi
   16281:	48 89 c7             	mov    %rax,%rdi
   16284:	e8 97 e0 fe ff       	callq  4320 <memcpy@plt>
   16289:	4d 89 6c 24 20       	mov    %r13,0x20(%r12)
   1628e:	4d 85 ed             	test   %r13,%r13
   16291:	75 15                	jne    162a8 <mbedtls_asn1_store_named_data+0x148>
   16293:	48 8b 04 24          	mov    (%rsp),%rax
   16297:	4d 89 7c 24 30       	mov    %r15,0x30(%r12)
   1629c:	4c 89 20             	mov    %r12,(%rax)
   1629f:	e9 29 ff ff ff       	jmpq   161cd <mbedtls_asn1_store_named_data+0x6d>
   162a4:	0f 1f 40 00          	nopl   0x0(%rax)
   162a8:	4c 89 ee             	mov    %r13,%rsi
   162ab:	bf 01 00 00 00       	mov    $0x1,%edi
   162b0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   162b5:	e8 16 e0 fe ff       	callq  42d0 <calloc@plt>
   162ba:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   162bf:	48 85 c0             	test   %rax,%rax
   162c2:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   162c7:	75 ca                	jne    16293 <mbedtls_asn1_store_named_data+0x133>
   162c9:	4c 89 c7             	mov    %r8,%rdi
   162cc:	e8 1f df fe ff       	callq  41f0 <free@plt>
   162d1:	4c 89 e7             	mov    %r12,%rdi
   162d4:	e8 17 df fe ff       	callq  41f0 <free@plt>
   162d9:	45 31 e4             	xor    %r12d,%r12d
   162dc:	e9 06 ff ff ff       	jmpq   161e7 <mbedtls_asn1_store_named_data+0x87>
   162e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   162e8:	00 00 00 
   162eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000162f0 <mpi_select>:
   162f0:	41 56                	push   %r14
   162f2:	45 31 f6             	xor    %r14d,%r14d
   162f5:	41 55                	push   %r13
   162f7:	49 89 d5             	mov    %rdx,%r13
   162fa:	41 54                	push   %r12
   162fc:	49 89 fc             	mov    %rdi,%r12
   162ff:	55                   	push   %rbp
   16300:	48 89 cd             	mov    %rcx,%rbp
   16303:	53                   	push   %rbx
   16304:	48 89 f3             	mov    %rsi,%rbx
   16307:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1630e:	00 00 
   16310:	48 89 ee             	mov    %rbp,%rsi
   16313:	4c 89 f7             	mov    %r14,%rdi
   16316:	e8 35 65 00 00       	callq  1c850 <mbedtls_ct_size_bool_eq>
   1631b:	48 89 de             	mov    %rbx,%rsi
   1631e:	4c 89 e7             	mov    %r12,%rdi
   16321:	0f b6 d0             	movzbl %al,%edx
   16324:	e8 87 6a 00 00       	callq  1cdb0 <mbedtls_mpi_safe_cond_assign>
   16329:	85 c0                	test   %eax,%eax
   1632b:	75 0d                	jne    1633a <mpi_select+0x4a>
   1632d:	49 83 c6 01          	add    $0x1,%r14
   16331:	48 83 c3 18          	add    $0x18,%rbx
   16335:	4d 39 f5             	cmp    %r14,%r13
   16338:	75 d6                	jne    16310 <mpi_select+0x20>
   1633a:	5b                   	pop    %rbx
   1633b:	5d                   	pop    %rbp
   1633c:	41 5c                	pop    %r12
   1633e:	41 5d                	pop    %r13
   16340:	41 5e                	pop    %r14
   16342:	c3                   	retq   
   16343:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1634a:	00 00 00 00 
   1634e:	66 90                	xchg   %ax,%ax

0000000000016350 <mbedtls_mpi_init>:
   16350:	f3 0f 1e fa          	endbr64 
   16354:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   1635a:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   16361:	00 
   16362:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   16369:	00 
   1636a:	c3                   	retq   
   1636b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016370 <mbedtls_mpi_free>:
   16370:	f3 0f 1e fa          	endbr64 
   16374:	48 85 ff             	test   %rdi,%rdi
   16377:	74 47                	je     163c0 <mbedtls_mpi_free+0x50>
   16379:	53                   	push   %rbx
   1637a:	48 89 fb             	mov    %rdi,%rbx
   1637d:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16381:	48 85 ff             	test   %rdi,%rdi
   16384:	74 1a                	je     163a0 <mbedtls_mpi_free+0x30>
   16386:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1638a:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   16391:	00 
   16392:	e8 19 8d ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   16397:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1639b:	e8 50 de fe ff       	callq  41f0 <free@plt>
   163a0:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   163a6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   163ad:	00 
   163ae:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   163b5:	00 
   163b6:	5b                   	pop    %rbx
   163b7:	c3                   	retq   
   163b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   163bf:	00 
   163c0:	c3                   	retq   
   163c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   163c8:	00 00 00 00 
   163cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000163d0 <mbedtls_mpi_grow>:
   163d0:	f3 0f 1e fa          	endbr64 
   163d4:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
   163db:	0f 87 85 00 00 00    	ja     16466 <mbedtls_mpi_grow+0x96>
   163e1:	41 56                	push   %r14
   163e3:	31 c0                	xor    %eax,%eax
   163e5:	41 55                	push   %r13
   163e7:	41 54                	push   %r12
   163e9:	55                   	push   %rbp
   163ea:	48 89 fd             	mov    %rdi,%rbp
   163ed:	53                   	push   %rbx
   163ee:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   163f2:	48 89 f3             	mov    %rsi,%rbx
   163f5:	49 39 f4             	cmp    %rsi,%r12
   163f8:	72 0e                	jb     16408 <mbedtls_mpi_grow+0x38>
   163fa:	5b                   	pop    %rbx
   163fb:	5d                   	pop    %rbp
   163fc:	41 5c                	pop    %r12
   163fe:	41 5d                	pop    %r13
   16400:	41 5e                	pop    %r14
   16402:	c3                   	retq   
   16403:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16408:	be 08 00 00 00       	mov    $0x8,%esi
   1640d:	48 89 df             	mov    %rbx,%rdi
   16410:	e8 bb de fe ff       	callq  42d0 <calloc@plt>
   16415:	49 89 c5             	mov    %rax,%r13
   16418:	48 85 c0             	test   %rax,%rax
   1641b:	74 42                	je     1645f <mbedtls_mpi_grow+0x8f>
   1641d:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   16421:	4d 85 f6             	test   %r14,%r14
   16424:	74 26                	je     1644c <mbedtls_mpi_grow+0x7c>
   16426:	49 c1 e4 03          	shl    $0x3,%r12
   1642a:	4c 89 f6             	mov    %r14,%rsi
   1642d:	48 89 c7             	mov    %rax,%rdi
   16430:	4c 89 e2             	mov    %r12,%rdx
   16433:	e8 e8 de fe ff       	callq  4320 <memcpy@plt>
   16438:	4c 89 f7             	mov    %r14,%rdi
   1643b:	4c 89 e6             	mov    %r12,%rsi
   1643e:	e8 6d 8c ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   16443:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16447:	e8 a4 dd fe ff       	callq  41f0 <free@plt>
   1644c:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   16450:	31 c0                	xor    %eax,%eax
   16452:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   16456:	5b                   	pop    %rbx
   16457:	5d                   	pop    %rbp
   16458:	41 5c                	pop    %r12
   1645a:	41 5d                	pop    %r13
   1645c:	41 5e                	pop    %r14
   1645e:	c3                   	retq   
   1645f:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   16464:	eb 94                	jmp    163fa <mbedtls_mpi_grow+0x2a>
   16466:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   1646b:	c3                   	retq   
   1646c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016470 <mbedtls_mpi_resize_clear>:
   16470:	41 54                	push   %r12
   16472:	49 89 fc             	mov    %rdi,%r12
   16475:	55                   	push   %rbp
   16476:	48 83 ec 08          	sub    $0x8,%rsp
   1647a:	48 85 f6             	test   %rsi,%rsi
   1647d:	74 49                	je     164c8 <mbedtls_mpi_resize_clear+0x58>
   1647f:	48 89 f5             	mov    %rsi,%rbp
   16482:	48 39 77 08          	cmp    %rsi,0x8(%rdi)
   16486:	74 18                	je     164a0 <mbedtls_mpi_resize_clear+0x30>
   16488:	e8 e3 fe ff ff       	callq  16370 <mbedtls_mpi_free>
   1648d:	48 83 c4 08          	add    $0x8,%rsp
   16491:	48 89 ee             	mov    %rbp,%rsi
   16494:	4c 89 e7             	mov    %r12,%rdi
   16497:	5d                   	pop    %rbp
   16498:	41 5c                	pop    %r12
   1649a:	e9 31 ff ff ff       	jmpq   163d0 <mbedtls_mpi_grow>
   1649f:	90                   	nop
   164a0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   164a4:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   164ab:	00 
   164ac:	31 f6                	xor    %esi,%esi
   164ae:	e8 ed dd fe ff       	callq  42a0 <memset@plt>4930
   164b3:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   164ba:	00 
   164bb:	31 c0                	xor    %eax,%eax
   164bd:	48 83 c4 08          	add    $0x8,%rsp
   164c1:	5d                   	pop    %rbp
   164c2:	41 5c                	pop    %r12
   164c4:	c3                   	retq   
   164c5:	0f 1f 00             	nopl   (%rax)
   164c8:	e8 a3 fe ff ff       	callq  16370 <mbedtls_mpi_free>
   164cd:	48 83 c4 08          	add    $0x8,%rsp
   164d1:	31 c0                	xor    %eax,%eax
   164d3:	5d                   	pop    %rbp
   164d4:	41 5c                	pop    %r12
   164d6:	c3                   	retq   
   164d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   164de:	00 00 

00000000000164e0 <mbedtls_mpi_shrink>:
   164e0:	f3 0f 1e fa          	endbr64 
   164e4:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
   164eb:	0f 87 06 01 00 00    	ja     165f7 <mbedtls_mpi_shrink+0x117>
   164f1:	41 56                	push   %r14
   164f3:	41 55                	push   %r13
   164f5:	41 54                	push   %r12
   164f7:	55                   	push   %rbp
   164f8:	48 89 fd             	mov    %rdi,%rbp
   164fb:	53                   	push   %rbx
   164fc:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   16500:	49 39 f4             	cmp    %rsi,%r12
   16503:	0f 86 a7 00 00 00    	jbe    165b0 <mbedtls_mpi_shrink+0xd0>
   16509:	4c 89 e0             	mov    %r12,%rax
   1650c:	48 83 e8 01          	sub    $0x1,%rax
   16510:	0f 84 a7 00 00 00    	je     165bd <mbedtls_mpi_shrink+0xdd>
   16516:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   1651a:	eb 0a                	jmp    16526 <mbedtls_mpi_shrink+0x46>
   1651c:	0f 1f 40 00          	nopl   0x0(%rax)
   16520:	48 83 e8 01          	sub    $0x1,%rax
   16524:	74 7a                	je     165a0 <mbedtls_mpi_shrink+0xc0>
   16526:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
   1652b:	74 f3                	je     16520 <mbedtls_mpi_shrink+0x40>
   1652d:	48 83 c0 01          	add    $0x1,%rax
   16531:	48 39 f0             	cmp    %rsi,%rax
   16534:	48 89 f3             	mov    %rsi,%rbx
   16537:	be 08 00 00 00       	mov    $0x8,%esi
   1653c:	48 0f 43 d8          	cmovae %rax,%rbx
   16540:	48 89 df             	mov    %rbx,%rdi
   16543:	e8 88 dd fe ff       	callq  42d0 <calloc@plt>
   16548:	49 89 c5             	mov    %rax,%r13
   1654b:	48 85 c0             	test   %rax,%rax
   1654e:	0f 84 9c 00 00 00    	je     165f0 <mbedtls_mpi_shrink+0x110>
   16554:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   16558:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   1655f:	00 
   16560:	4c 89 f6             	mov    %r14,%rsi
   16563:	4c 89 ef             	mov    %r13,%rdi
   16566:	e8 b5 dd fe ff       	callq  4320 <memcpy@plt>
   1656b:	4c 89 f7             	mov    %r14,%rdi
   1656e:	4a 8d 34 e5 00 00 00 	lea    0x0(,%r12,8),%rsi
   16575:	00 
   16576:	e8 35 8b ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   1657b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1657f:	e8 6c dc fe ff       	callq  41f0 <free@plt>
   16584:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   16588:	31 c0                	xor    %eax,%eax
   1658a:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   1658e:	5b                   	pop    %rbx
   1658f:	5d                   	pop    %rbp
   16590:	41 5c                	pop    %r12
   16592:	41 5d                	pop    %r13
   16594:	41 5e                	pop    %r14
   16596:	c3                   	retq   
   16597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1659e:	00 00 
   165a0:	b8 01 00 00 00       	mov    $0x1,%eax
   165a5:	eb 8a                	jmp    16531 <mbedtls_mpi_shrink+0x51>
   165a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   165ae:	00 00 
   165b0:	5b                   	pop    %rbx
   165b1:	5d                   	pop    %rbp
   165b2:	41 5c                	pop    %r12
   165b4:	41 5d                	pop    %r13
   165b6:	41 5e                	pop    %r14
   165b8:	e9 13 fe ff ff       	jmpq   163d0 <mbedtls_mpi_grow>
   165bd:	48 85 f6             	test   %rsi,%rsi
   165c0:	b8 01 00 00 00       	mov    $0x1,%eax
   165c5:	48 0f 45 c6          	cmovne %rsi,%rax
   165c9:	be 08 00 00 00       	mov    $0x8,%esi
   165ce:	48 89 c7             	mov    %rax,%rdi
   165d1:	48 89 c3             	mov    %rax,%rbx
   165d4:	e8 f7 dc fe ff       	callq  42d0 <calloc@plt>
   165d9:	49 89 c5             	mov    %rax,%r13
   165dc:	48 85 c0             	test   %rax,%rax
   165df:	74 0f                	je     165f0 <mbedtls_mpi_shrink+0x110>
   165e1:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   165e5:	4d 85 f6             	test   %r14,%r14
   165e8:	74 9a                	je     16584 <mbedtls_mpi_shrink+0xa4>
   165ea:	e9 69 ff ff ff       	jmpq   16558 <mbedtls_mpi_shrink+0x78>
   165ef:	90                   	nop
   165f0:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   165f5:	eb 97                	jmp    1658e <mbedtls_mpi_shrink+0xae>
   165f7:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   165fc:	c3                   	retq   
   165fd:	0f 1f 00             	nopl   (%rax)

0000000000016600 <mbedtls_mpi_copy>:
   16600:	f3 0f 1e fa          	endbr64 
   16604:	41 55                	push   %r13
   16606:	41 54                	push   %r12
   16608:	55                   	push   %rbp
   16609:	53                   	push   %rbx
   1660a:	48 83 ec 08          	sub    $0x8,%rsp
   1660e:	48 39 f7             	cmp    %rsi,%rdi
   16611:	0f 84 d9 00 00 00    	je     166f0 <mbedtls_mpi_copy+0xf0>
   16617:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1661b:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1661f:	48 89 fd             	mov    %rdi,%rbp
   16622:	49 89 f4             	mov    %rsi,%r12
   16625:	48 85 c0             	test   %rax,%rax
   16628:	0f 84 92 00 00 00    	je     166c0 <mbedtls_mpi_copy+0xc0>
   1662e:	48 83 e8 01          	sub    $0x1,%rax
   16632:	0f 84 a8 00 00 00    	je     166e0 <mbedtls_mpi_copy+0xe0>
   16638:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   1663c:	eb 0c                	jmp    1664a <mbedtls_mpi_copy+0x4a>
   1663e:	66 90                	xchg   %ax,%ax
   16640:	48 83 e8 01          	sub    $0x1,%rax
   16644:	0f 84 96 00 00 00    	je     166e0 <mbedtls_mpi_copy+0xe0>
   1664a:	48 83 3c c1 00       	cmpq   $0x0,(%rcx,%rax,8)
   1664f:	74 ef                	je     16640 <mbedtls_mpi_copy+0x40>
   16651:	48 8d 58 01          	lea    0x1(%rax),%rbx
   16655:	41 8b 04 24          	mov    (%r12),%eax
   16659:	89 45 00             	mov    %eax,0x0(%rbp)
   1665c:	48 39 da             	cmp    %rbx,%rdx
   1665f:	73 1f                	jae    16680 <mbedtls_mpi_copy+0x80>
   16661:	48 89 de             	mov    %rbx,%rsi
   16664:	48 89 ef             	mov    %rbp,%rdi
   16667:	e8 64 fd ff ff       	callq  163d0 <mbedtls_mpi_grow>
   1666c:	41 89 c5             	mov    %eax,%r13d
   1666f:	85 c0                	test   %eax,%eax
   16671:	75 3e                	jne    166b1 <mbedtls_mpi_copy+0xb1>
   16673:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
   1667a:	00 
   1667b:	eb 20                	jmp    1669d <mbedtls_mpi_copy+0x9d>
   1667d:	0f 1f 00             	nopl   (%rax)
   16680:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16684:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
   1668b:	00 
   1668c:	48 29 da             	sub    %rbx,%rdx
   1668f:	31 f6                	xor    %esi,%esi
   16691:	48 c1 e2 03          	shl    $0x3,%rdx
   16695:	4c 01 ef             	add    %r13,%rdi
   16698:	e8 03 dc fe ff       	callq  42a0 <memset@plt>
   1669d:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   166a1:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   166a6:	4c 89 ea             	mov    %r13,%rdx
   166a9:	45 31 ed             	xor    %r13d,%r13d
   166ac:	e8 6f dc fe ff       	callq  4320 <memcpy@plt>
   166b1:	48 83 c4 08          	add    $0x8,%rsp
   166b5:	44 89 e8             	mov    %r13d,%eax
   166b8:	5b                   	pop    %rbx
   166b9:	5d                   	pop    %rbp
   166ba:	41 5c                	pop    %r12
   166bc:	41 5d                	pop    %r13
   166be:	c3                   	retq   
   166bf:	90                   	nop
   166c0:	45 31 ed             	xor    %r13d,%r13d
   166c3:	48 85 d2             	test   %rdx,%rdx
   166c6:	74 e9                	je     166b1 <mbedtls_mpi_copy+0xb1>
   166c8:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   166ce:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   166d2:	48 c1 e2 03          	shl    $0x3,%rdx
   166d6:	31 f6                	xor    %esi,%esi
   166d8:	e8 c3 db fe ff       	callq  42a0 <memset@plt>
   166dd:	eb d2                	jmp    166b1 <mbedtls_mpi_copy+0xb1>
   166df:	90                   	nop
   166e0:	bb 01 00 00 00       	mov    $0x1,%ebx
   166e5:	e9 6b ff ff ff       	jmpq   16655 <mbedtls_mpi_copy+0x55>
   166ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   166f0:	48 83 c4 08          	add    $0x8,%rsp
   166f4:	45 31 ed             	xor    %r13d,%r13d
   166f7:	5b                   	pop    %rbx
   166f8:	44 89 e8             	mov    %r13d,%eax
   166fb:	5d                   	pop    %rbp
   166fc:	41 5c                	pop    %r12
   166fe:	41 5d                	pop    %r13
   16700:	c3                   	retq   
   16701:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16708:	00 00 00 00 
   1670c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016710 <mbedtls_mpi_swap>:
   16710:	f3 0f 1e fa          	endbr64 
   16714:	48 83 ec 28          	sub    $0x28,%rsp
   16718:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
   1671c:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   16720:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16727:	00 00 
   16729:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1672e:	31 c0                	xor    %eax,%eax
   16730:	48 8b 47 10          	mov    0x10(%rdi),%rax
   16734:	0f 11 0f             	movups %xmm1,(%rdi)
   16737:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   1673b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16740:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   16744:	48 89 46 10          	mov    %rax,0x10(%rsi)
   16748:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1674c:	0f 11 06             	movups %xmm0,(%rsi)
   1674f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16754:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1675b:	00 00 
   1675d:	75 05                	jne    16764 <mbedtls_mpi_swap+0x54>
   1675f:	48 83 c4 28          	add    $0x28,%rsp
   16763:	c3                   	retq   
   16764:	e8 07 db fe ff       	callq  4270 <__stack_chk_fail@plt>
   16769:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016770 <mbedtls_mpi_lset>:
   16770:	f3 0f 1e fa          	endbr64 
   16774:	41 54                	push   %r12
   16776:	55                   	push   %rbp
   16777:	48 89 f5             	mov    %rsi,%rbp
   1677a:	be 01 00 00 00       	mov    $0x1,%esi
   1677f:	53                   	push   %rbx
   16780:	48 89 fb             	mov    %rdi,%rbx
   16783:	e8 48 fc ff ff       	callq  163d0 <mbedtls_mpi_grow>
   16788:	41 89 c4             	mov    %eax,%r12d
   1678b:	85 c0                	test   %eax,%eax
   1678d:	74 11                	je     167a0 <mbedtls_mpi_lset+0x30>
   1678f:	44 89 e0             	mov    %r12d,%eax
   16792:	5b                   	pop    %rbx
   16793:	5d                   	pop    %rbp
   16794:	41 5c                	pop    %r12
   16796:	c3                   	retq   
   16797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1679e:	00 00 
   167a0:	48 8b 43 08          	mov    0x8(%rbx),%rax
   167a4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   167a8:	31 f6                	xor    %esi,%esi
   167aa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   167b1:	00 
   167b2:	e8 e9 da fe ff       	callq  42a0 <memset@plt>
   167b7:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   167bb:	48 89 ee             	mov    %rbp,%rsi
   167be:	b8 01 00 00 00       	mov    $0x1,%eax
   167c3:	48 85 ed             	test   %rbp,%rbp
   167c6:	79 08                	jns    167d0 <mbedtls_mpi_lset+0x60>
   167c8:	48 f7 de             	neg    %rsi
   167cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   167d0:	f3 0f 1e fa          	endbr64 
   167d4:	48 89 32             	mov    %rsi,(%rdx)
   167d7:	89 03                	mov    %eax,(%rbx)
   167d9:	44 89 e0             	mov    %r12d,%eax
   167dc:	5b                   	pop    %rbx
   167dd:	5d                   	pop    %rbp
   167de:	41 5c                	pop    %r12
   167e0:	c3                   	retq   
   167e1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   167e8:	00 00 00 00 
   167ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000167f0 <mbedtls_mpi_get_bit>:
   167f0:	f3 0f 1e fa          	endbr64 
   167f4:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   167f8:	31 c0                	xor    %eax,%eax
   167fa:	48 c1 e2 06          	shl    $0x6,%rdx
   167fe:	48 39 f2             	cmp    %rsi,%rdx
   16801:	76 17                	jbe    1681a <mbedtls_mpi_get_bit+0x2a>
   16803:	48 8b 47 10          	mov    0x10(%rdi),%rax
   16807:	48 89 f2             	mov    %rsi,%rdx
   1680a:	89 f1                	mov    %esi,%ecx
   1680c:	48 c1 ea 06          	shr    $0x6,%rdx
   16810:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   16814:	48 d3 e8             	shr    %cl,%rax
   16817:	83 e0 01             	and    $0x1,%eax
   1681a:	c3                   	retq   
   1681b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016820 <mbedtls_mpi_set_bit>:
   16820:	f3 0f 1e fa          	endbr64 
   16824:	41 55                	push   %r13
   16826:	49 89 f5             	mov    %rsi,%r13
   16829:	41 54                	push   %r12
   1682b:	49 c1 ed 06          	shr    $0x6,%r13
   1682f:	55                   	push   %rbp
   16830:	53                   	push   %rbx
   16831:	48 83 ec 08          	sub    $0x8,%rsp
   16835:	80 fa 01             	cmp    $0x1,%dl
   16838:	77 66                	ja     168a0 <mbedtls_mpi_set_bit+0x80>
   1683a:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   1683e:	48 89 fd             	mov    %rdi,%rbp
   16841:	48 89 f3             	mov    %rsi,%rbx
   16844:	41 89 d4             	mov    %edx,%r12d
   16847:	48 c1 e1 06          	shl    $0x6,%rcx
   1684b:	48 39 f1             	cmp    %rsi,%rcx
   1684e:	77 13                	ja     16863 <mbedtls_mpi_set_bit+0x43>
   16850:	31 c0                	xor    %eax,%eax
   16852:	84 d2                	test   %dl,%dl
   16854:	74 37                	je     1688d <mbedtls_mpi_set_bit+0x6d>
   16856:	49 8d 75 01          	lea    0x1(%r13),%rsi
   1685a:	e8 71 fb ff ff       	callq  163d0 <mbedtls_mpi_grow>
   1685f:	85 c0                	test   %eax,%eax
   16861:	75 2a                	jne    1688d <mbedtls_mpi_set_bit+0x6d>
   16863:	48 8b 45 10          	mov    0x10(%rbp),%rax
   16867:	83 e3 3f             	and    $0x3f,%ebx
   1686a:	41 0f b6 d4          	movzbl %r12b,%edx
   1686e:	48 89 d9             	mov    %rbx,%rcx
   16871:	4a 8d 3c e8          	lea    (%rax,%r13,8),%rdi
   16875:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   1687c:	48 d3 e2             	shl    %cl,%rdx
   1687f:	48 d3 c0             	rol    %cl,%rax
   16882:	48 23 07             	and    (%rdi),%rax
   16885:	48 09 d0             	or     %rdx,%rax
   16888:	48 89 07             	mov    %rax,(%rdi)
   1688b:	31 c0                	xor    %eax,%eax
   1688d:	48 83 c4 08          	add    $0x8,%rsp
   16891:	5b                   	pop    %rbx
   16892:	5d                   	pop    %rbp
   16893:	41 5c                	pop    %r12
   16895:	41 5d                	pop    %r13
   16897:	c3                   	retq   
   16898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1689f:	00 
   168a0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   168a5:	eb e6                	jmp    1688d <mbedtls_mpi_set_bit+0x6d>
   168a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   168ae:	00 00 

00000000000168b0 <mbedtls_mpi_lsb>:
   168b0:	f3 0f 1e fa          	endbr64 
   168b4:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   168b8:	48 85 f6             	test   %rsi,%rsi
   168bb:	74 3c                	je     168f9 <mbedtls_mpi_lsb+0x49>
   168bd:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   168c1:	45 31 c0             	xor    %r8d,%r8d
   168c4:	31 c9                	xor    %ecx,%ecx
   168c6:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   168ca:	31 c0                	xor    %eax,%eax
   168cc:	eb 10                	jmp    168de <mbedtls_mpi_lsb+0x2e>
   168ce:	66 90                	xchg   %ax,%ax
   168d0:	48 83 c0 01          	add    $0x1,%rax
   168d4:	49 83 c0 01          	add    $0x1,%r8
   168d8:	48 83 f8 40          	cmp    $0x40,%rax
   168dc:	74 12                	je     168f0 <mbedtls_mpi_lsb+0x40>
   168de:	48 0f a3 c2          	bt     %rax,%rdx
   168e2:	73 ec                	jae    168d0 <mbedtls_mpi_lsb+0x20>
   168e4:	4c 89 c0             	mov    %r8,%rax
   168e7:	c3                   	retq   
   168e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   168ef:	00 
   168f0:	48 83 c1 01          	add    $0x1,%rcx
   168f4:	48 39 ce             	cmp    %rcx,%rsi
   168f7:	75 cd                	jne    168c6 <mbedtls_mpi_lsb+0x16>
   168f9:	45 31 c0             	xor    %r8d,%r8d
   168fc:	eb e6                	jmp    168e4 <mbedtls_mpi_lsb+0x34>
   168fe:	66 90                	xchg   %ax,%ax

0000000000016900 <mbedtls_mpi_bitlen>:
   16900:	f3 0f 1e fa          	endbr64 
   16904:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   16908:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1690c:	e9 0f 4e 00 00       	jmpq   1b720 <mbedtls_mpi_core_bitlen>
   16911:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16918:	00 00 00 00 
   1691c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016920 <mbedtls_mpi_size>:
   16920:	f3 0f 1e fa          	endbr64 
   16924:	48 83 ec 08          	sub    $0x8,%rsp
   16928:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1692c:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16930:	e8 eb 4d 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   16935:	48 83 c4 08          	add    $0x8,%rsp
   16939:	48 83 c0 07          	add    $0x7,%rax
   1693d:	48 c1 e8 03          	shr    $0x3,%rax
   16941:	c3                   	retq   
   16942:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16949:	00 00 00 00 
   1694d:	0f 1f 00             	nopl   (%rax)

0000000000016950 <mbedtls_mpi_read_binary_le>:
   16950:	f3 0f 1e fa          	endbr64 
   16954:	41 55                	push   %r13
   16956:	48 89 d0             	mov    %rdx,%rax
   16959:	49 89 f5             	mov    %rsi,%r13
   1695c:	31 f6                	xor    %esi,%esi
   1695e:	41 54                	push   %r12
   16960:	f6 c2 07             	test   $0x7,%dl
   16963:	49 89 d4             	mov    %rdx,%r12
   16966:	53                   	push   %rbx
   16967:	40 0f 95 c6          	setne  %sil
   1696b:	48 c1 e8 03          	shr    $0x3,%rax
   1696f:	48 89 fb             	mov    %rdi,%rbx
   16972:	48 01 c6             	add    %rax,%rsi
   16975:	e8 f6 fa ff ff       	callq  16470 <mbedtls_mpi_resize_clear>
   1697a:	85 c0                	test   %eax,%eax
   1697c:	74 0a                	je     16988 <mbedtls_mpi_read_binary_le+0x38>
   1697e:	5b                   	pop    %rbx
   1697f:	41 5c                	pop    %r12
   16981:	41 5d                	pop    %r13
   16983:	c3                   	retq   
   16984:	0f 1f 40 00          	nopl   0x0(%rax)
   16988:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1698c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   16990:	4c 89 e1             	mov    %r12,%rcx
   16993:	4c 89 ea             	mov    %r13,%rdx
   16996:	5b                   	pop    %rbx
   16997:	41 5c                	pop    %r12
   16999:	41 5d                	pop    %r13
   1699b:	e9 d0 4e 00 00       	jmpq   1b870 <mbedtls_mpi_core_read_le>

00000000000169a0 <mbedtls_mpi_read_binary>:
   169a0:	f3 0f 1e fa          	endbr64 
   169a4:	41 55                	push   %r13
   169a6:	48 89 d0             	mov    %rdx,%rax
   169a9:	49 89 f5             	mov    %rsi,%r13
   169ac:	31 f6                	xor    %esi,%esi
   169ae:	41 54                	push   %r12
   169b0:	f6 c2 07             	test   $0x7,%dl
   169b3:	49 89 d4             	mov    %rdx,%r12
   169b6:	53                   	push   %rbx
   169b7:	40 0f 95 c6          	setne  %sil
   169bb:	48 c1 e8 03          	shr    $0x3,%rax
   169bf:	48 89 fb             	mov    %rdi,%rbx
   169c2:	48 01 c6             	add    %rax,%rsi
   169c5:	e8 a6 fa ff ff       	callq  16470 <mbedtls_mpi_resize_clear>
   169ca:	85 c0                	test   %eax,%eax
   169cc:	74 0a                	je     169d8 <mbedtls_mpi_read_binary+0x38>
   169ce:	5b                   	pop    %rbx
   169cf:	41 5c                	pop    %r12
   169d1:	41 5d                	pop    %r13
   169d3:	c3                   	retq   
   169d4:	0f 1f 40 00          	nopl   0x0(%rax)
   169d8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   169dc:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   169e0:	4c 89 e1             	mov    %r12,%rcx
   169e3:	4c 89 ea             	mov    %r13,%rdx
   169e6:	5b                   	pop    %rbx
   169e7:	41 5c                	pop    %r12
   169e9:	41 5d                	pop    %r13
   169eb:	e9 00 4f 00 00       	jmpq   1b8f0 <mbedtls_mpi_core_read_be>

00000000000169f0 <mbedtls_mpi_write_binary_le>:
   169f0:	f3 0f 1e fa          	endbr64 
   169f4:	49 89 f0             	mov    %rsi,%r8
   169f7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   169fb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   169ff:	48 89 d1             	mov    %rdx,%rcx
   16a02:	4c 89 c2             	mov    %r8,%rdx
   16a05:	e9 86 4f 00 00       	jmpq   1b990 <mbedtls_mpi_core_write_le>
   16a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016a10 <mbedtls_mpi_write_binary>:
   16a10:	f3 0f 1e fa          	endbr64 
   16a14:	49 89 f0             	mov    %rsi,%r8
   16a17:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   16a1b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16a1f:	48 89 d1             	mov    %rdx,%rcx
   16a22:	4c 89 c2             	mov    %r8,%rdx
   16a25:	e9 36 50 00 00       	jmpq   1ba60 <mbedtls_mpi_core_write_be>
   16a2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016a30 <mbedtls_mpi_shift_l>:
   16a30:	f3 0f 1e fa          	endbr64 
   16a34:	41 55                	push   %r13
   16a36:	49 89 f5             	mov    %rsi,%r13
   16a39:	41 54                	push   %r12
   16a3b:	49 89 f4             	mov    %rsi,%r12
   16a3e:	55                   	push   %rbp
   16a3f:	48 89 fd             	mov    %rdi,%rbp
   16a42:	41 83 e4 3f          	and    $0x3f,%r12d
   16a46:	53                   	push   %rbx
   16a47:	48 89 f3             	mov    %rsi,%rbx
   16a4a:	48 c1 eb 06          	shr    $0x6,%rbx
   16a4e:	48 83 ec 08          	sub    $0x8,%rsp
   16a52:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   16a56:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16a5a:	e8 c1 4c 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   16a5f:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   16a63:	4c 01 e8             	add    %r13,%rax
   16a66:	48 c1 e2 06          	shl    $0x6,%rdx
   16a6a:	48 39 c2             	cmp    %rax,%rdx
   16a6d:	0f 82 b5 00 00 00    	jb     16b28 <mbedtls_mpi_shift_l+0xf8>
   16a73:	49 83 fd 3f          	cmp    $0x3f,%r13
   16a77:	76 56                	jbe    16acf <mbedtls_mpi_shift_l+0x9f>
   16a79:	48 8b 45 08          	mov    0x8(%rbp),%rax
   16a7d:	48 39 c3             	cmp    %rax,%rbx
   16a80:	73 32                	jae    16ab4 <mbedtls_mpi_shift_l+0x84>
   16a82:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16a86:	48 89 d9             	mov    %rbx,%rcx
   16a89:	48 f7 d9             	neg    %rcx
   16a8c:	48 8d 44 c2 f8       	lea    -0x8(%rdx,%rax,8),%rax
   16a91:	48 8d 74 da f8       	lea    -0x8(%rdx,%rbx,8),%rsi
   16a96:	48 c1 e1 03          	shl    $0x3,%rcx
   16a9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16aa0:	48 8b 14 08          	mov    (%rax,%rcx,1),%rdx
   16aa4:	48 83 e8 08          	sub    $0x8,%rax
   16aa8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   16aac:	48 39 c6             	cmp    %rax,%rsi
   16aaf:	75 ef                	jne    16aa0 <mbedtls_mpi_shift_l+0x70>
   16ab1:	48 89 d8             	mov    %rbx,%rax
   16ab4:	48 85 c0             	test   %rax,%rax
   16ab7:	74 16                	je     16acf <mbedtls_mpi_shift_l+0x9f>
   16ab9:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16abd:	0f 1f 00             	nopl   (%rax)
   16ac0:	48 c7 44 c2 f8 00 00 	movq   $0x0,-0x8(%rdx,%rax,8)
   16ac7:	00 00 
   16ac9:	48 83 e8 01          	sub    $0x1,%rax
   16acd:	75 f1                	jne    16ac0 <mbedtls_mpi_shift_l+0x90>
   16acf:	4d 85 e4             	test   %r12,%r12
   16ad2:	74 43                	je     16b17 <mbedtls_mpi_shift_l+0xe7>
   16ad4:	48 3b 5d 08          	cmp    0x8(%rbp),%rbx
   16ad8:	73 3d                	jae    16b17 <mbedtls_mpi_shift_l+0xe7>
   16ada:	41 b8 40 00 00 00    	mov    $0x40,%r8d
   16ae0:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   16ae4:	45 89 e1             	mov    %r12d,%r9d
   16ae7:	31 d2                	xor    %edx,%edx
   16ae9:	45 29 e0             	sub    %r12d,%r8d
   16aec:	0f 1f 40 00          	nopl   0x0(%rax)
   16af0:	48 8b 04 de          	mov    (%rsi,%rbx,8),%rax
   16af4:	48 89 d7             	mov    %rdx,%rdi
   16af7:	44 89 c1             	mov    %r8d,%ecx
   16afa:	48 89 c2             	mov    %rax,%rdx
   16afd:	48 d3 ea             	shr    %cl,%rdx
   16b00:	44 89 c9             	mov    %r9d,%ecx
   16b03:	48 d3 e0             	shl    %cl,%rax
   16b06:	48 09 f8             	or     %rdi,%rax
   16b09:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
   16b0d:	48 83 c3 01          	add    $0x1,%rbx
   16b11:	48 39 5d 08          	cmp    %rbx,0x8(%rbp)
   16b15:	77 d9                	ja     16af0 <mbedtls_mpi_shift_l+0xc0>
   16b17:	48 83 c4 08          	add    $0x8,%rsp
   16b1b:	31 c0                	xor    %eax,%eax
   16b1d:	5b                   	pop    %rbx
   16b1e:	5d                   	pop    %rbp
   16b1f:	41 5c                	pop    %r12
   16b21:	41 5d                	pop    %r13
   16b23:	c3                   	retq   
   16b24:	0f 1f 40 00          	nopl   0x0(%rax)
   16b28:	31 f6                	xor    %esi,%esi
   16b2a:	a8 3f                	test   $0x3f,%al
   16b2c:	48 89 ef             	mov    %rbp,%rdi
   16b2f:	40 0f 95 c6          	setne  %sil
   16b33:	48 c1 e8 06          	shr    $0x6,%rax
   16b37:	48 01 c6             	add    %rax,%rsi
   16b3a:	e8 91 f8 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   16b3f:	85 c0                	test   %eax,%eax
   16b41:	0f 84 2c ff ff ff    	je     16a73 <mbedtls_mpi_shift_l+0x43>
   16b47:	48 83 c4 08          	add    $0x8,%rsp
   16b4b:	5b                   	pop    %rbx
   16b4c:	5d                   	pop    %rbp
   16b4d:	41 5c                	pop    %r12
   16b4f:	41 5d                	pop    %r13
   16b51:	c3                   	retq   
   16b52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16b59:	00 00 00 00 
   16b5d:	0f 1f 00             	nopl   (%rax)

0000000000016b60 <mbedtls_mpi_shift_r>:
   16b60:	f3 0f 1e fa          	endbr64 
   16b64:	4c 8b 47 08          	mov    0x8(%rdi),%r8
   16b68:	4d 85 c0             	test   %r8,%r8
   16b6b:	75 03                	jne    16b70 <mbedtls_mpi_shift_r+0x10>
   16b6d:	31 c0                	xor    %eax,%eax
   16b6f:	c3                   	retq   
   16b70:	48 83 ec 08          	sub    $0x8,%rsp
   16b74:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16b78:	48 89 f2             	mov    %rsi,%rdx
   16b7b:	4c 89 c6             	mov    %r8,%rsi
   16b7e:	e8 bd 4f 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   16b83:	31 c0                	xor    %eax,%eax
   16b85:	48 83 c4 08          	add    $0x8,%rsp
   16b89:	c3                   	retq   
   16b8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016b90 <mbedtls_mpi_cmp_abs>:
   16b90:	f3 0f 1e fa          	endbr64 
   16b94:	48 8b 47 08          	mov    0x8(%rdi),%rax
   16b98:	48 85 c0             	test   %rax,%rax
   16b9b:	0f 84 7f 00 00 00    	je     16c20 <mbedtls_mpi_cmp_abs+0x90>
   16ba1:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16ba5:	eb 0f                	jmp    16bb6 <mbedtls_mpi_cmp_abs+0x26>
   16ba7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16bae:	00 00 
   16bb0:	48 83 e8 01          	sub    $0x1,%rax
   16bb4:	74 6a                	je     16c20 <mbedtls_mpi_cmp_abs+0x90>
   16bb6:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
   16bbc:	74 f2                	je     16bb0 <mbedtls_mpi_cmp_abs+0x20>
   16bbe:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16bc2:	48 85 d2             	test   %rdx,%rdx
   16bc5:	74 4d                	je     16c14 <mbedtls_mpi_cmp_abs+0x84>
   16bc7:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   16bcb:	eb 09                	jmp    16bd6 <mbedtls_mpi_cmp_abs+0x46>
   16bcd:	0f 1f 00             	nopl   (%rax)
   16bd0:	48 83 ea 01          	sub    $0x1,%rdx
   16bd4:	74 62                	je     16c38 <mbedtls_mpi_cmp_abs+0xa8>
   16bd6:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
   16bdc:	74 f2                	je     16bd0 <mbedtls_mpi_cmp_abs+0x40>
   16bde:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16be4:	48 39 c2             	cmp    %rax,%rdx
   16be7:	72 31                	jb     16c1a <mbedtls_mpi_cmp_abs+0x8a>
   16be9:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   16bef:	77 29                	ja     16c1a <mbedtls_mpi_cmp_abs+0x8a>
   16bf1:	48 85 c0             	test   %rax,%rax
   16bf4:	74 35                	je     16c2b <mbedtls_mpi_cmp_abs+0x9b>
   16bf6:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16bfa:	eb 0c                	jmp    16c08 <mbedtls_mpi_cmp_abs+0x78>
   16bfc:	0f 1f 40 00          	nopl   0x0(%rax)
   16c00:	72 42                	jb     16c44 <mbedtls_mpi_cmp_abs+0xb4>
   16c02:	48 83 e8 01          	sub    $0x1,%rax
   16c06:	74 23                	je     16c2b <mbedtls_mpi_cmp_abs+0x9b>
   16c08:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
   16c0d:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
   16c12:	76 ec                	jbe    16c00 <mbedtls_mpi_cmp_abs+0x70>
   16c14:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16c1a:	44 89 c0             	mov    %r8d,%eax
   16c1d:	c3                   	retq   
   16c1e:	66 90                	xchg   %ax,%ax
   16c20:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16c24:	31 c0                	xor    %eax,%eax
   16c26:	48 85 d2             	test   %rdx,%rdx
   16c29:	75 9c                	jne    16bc7 <mbedtls_mpi_cmp_abs+0x37>
   16c2b:	45 31 c0             	xor    %r8d,%r8d
   16c2e:	44 89 c0             	mov    %r8d,%eax
   16c31:	c3                   	retq   
   16c32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16c38:	45 31 c0             	xor    %r8d,%r8d
   16c3b:	48 85 c0             	test   %rax,%rax
   16c3e:	75 9e                	jne    16bde <mbedtls_mpi_cmp_abs+0x4e>
   16c40:	44 89 c0             	mov    %r8d,%eax
   16c43:	c3                   	retq   
   16c44:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   16c4a:	eb ce                	jmp    16c1a <mbedtls_mpi_cmp_abs+0x8a>
   16c4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016c50 <mbedtls_mpi_cmp_mpi>:
   16c50:	f3 0f 1e fa          	endbr64 
   16c54:	48 8b 47 08          	mov    0x8(%rdi),%rax
   16c58:	48 85 c0             	test   %rax,%rax
   16c5b:	0f 84 7f 00 00 00    	je     16ce0 <mbedtls_mpi_cmp_mpi+0x90>
   16c61:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16c65:	eb 0f                	jmp    16c76 <mbedtls_mpi_cmp_mpi+0x26>
   16c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16c6e:	00 00 
   16c70:	48 83 e8 01          	sub    $0x1,%rax
   16c74:	74 6a                	je     16ce0 <mbedtls_mpi_cmp_mpi+0x90>
   16c76:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
   16c7c:	74 f2                	je     16c70 <mbedtls_mpi_cmp_mpi+0x20>
   16c7e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16c82:	48 85 d2             	test   %rdx,%rdx
   16c85:	74 71                	je     16cf8 <mbedtls_mpi_cmp_mpi+0xa8>
   16c87:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   16c8b:	eb 09                	jmp    16c96 <mbedtls_mpi_cmp_mpi+0x46>
   16c8d:	0f 1f 00             	nopl   (%rax)
   16c90:	48 83 ea 01          	sub    $0x1,%rdx
   16c94:	74 6a                	je     16d00 <mbedtls_mpi_cmp_mpi+0xb0>
   16c96:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
   16c9c:	74 f2                	je     16c90 <mbedtls_mpi_cmp_mpi+0x40>
   16c9e:	48 39 c2             	cmp    %rax,%rdx
   16ca1:	72 55                	jb     16cf8 <mbedtls_mpi_cmp_mpi+0xa8>
   16ca3:	8b 16                	mov    (%rsi),%edx
   16ca5:	77 79                	ja     16d20 <mbedtls_mpi_cmp_mpi+0xd0>
   16ca7:	44 8b 07             	mov    (%rdi),%r8d
   16caa:	45 85 c0             	test   %r8d,%r8d
   16cad:	7e 61                	jle    16d10 <mbedtls_mpi_cmp_mpi+0xc0>
   16caf:	85 d2                	test   %edx,%edx
   16cb1:	78 76                	js     16d29 <mbedtls_mpi_cmp_mpi+0xd9>
   16cb3:	48 85 c0             	test   %rax,%rax
   16cb6:	74 33                	je     16ceb <mbedtls_mpi_cmp_mpi+0x9b>
   16cb8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16cbc:	eb 08                	jmp    16cc6 <mbedtls_mpi_cmp_mpi+0x76>
   16cbe:	66 90                	xchg   %ax,%ax
   16cc0:	48 83 e8 01          	sub    $0x1,%rax
   16cc4:	74 25                	je     16ceb <mbedtls_mpi_cmp_mpi+0x9b>
   16cc6:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
   16ccb:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
   16cd0:	77 29                	ja     16cfb <mbedtls_mpi_cmp_mpi+0xab>
   16cd2:	73 ec                	jae    16cc0 <mbedtls_mpi_cmp_mpi+0x70>
   16cd4:	41 f7 d8             	neg    %r8d
   16cd7:	eb 22                	jmp    16cfb <mbedtls_mpi_cmp_mpi+0xab>
   16cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16ce0:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16ce4:	31 c0                	xor    %eax,%eax
   16ce6:	48 85 d2             	test   %rdx,%rdx
   16ce9:	75 9c                	jne    16c87 <mbedtls_mpi_cmp_mpi+0x37>
   16ceb:	45 31 c0             	xor    %r8d,%r8d
   16cee:	44 89 c0             	mov    %r8d,%eax
   16cf1:	c3                   	retq   
   16cf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16cf8:	44 8b 07             	mov    (%rdi),%r8d
   16cfb:	44 89 c0             	mov    %r8d,%eax
   16cfe:	c3                   	retq   
   16cff:	90                   	nop
   16d00:	45 31 c0             	xor    %r8d,%r8d
   16d03:	48 85 c0             	test   %rax,%rax
   16d06:	75 96                	jne    16c9e <mbedtls_mpi_cmp_mpi+0x4e>
   16d08:	44 89 c0             	mov    %r8d,%eax
   16d0b:	c3                   	retq   
   16d0c:	0f 1f 40 00          	nopl   0x0(%rax)
   16d10:	79 a1                	jns    16cb3 <mbedtls_mpi_cmp_mpi+0x63>
   16d12:	85 d2                	test   %edx,%edx
   16d14:	7e 9d                	jle    16cb3 <mbedtls_mpi_cmp_mpi+0x63>
   16d16:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   16d1c:	eb dd                	jmp    16cfb <mbedtls_mpi_cmp_mpi+0xab>
   16d1e:	66 90                	xchg   %ax,%ax
   16d20:	f7 da                	neg    %edx
   16d22:	41 89 d0             	mov    %edx,%r8d
   16d25:	44 89 c0             	mov    %r8d,%eax
   16d28:	c3                   	retq   
   16d29:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16d2f:	eb ca                	jmp    16cfb <mbedtls_mpi_cmp_mpi+0xab>
   16d31:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16d38:	00 00 00 00 
   16d3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016d40 <mbedtls_mpi_cmp_int>:
   16d40:	f3 0f 1e fa          	endbr64 
   16d44:	48 83 ec 38          	sub    $0x38,%rsp
   16d48:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16d4f:	00 00 
   16d51:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16d56:	31 c0                	xor    %eax,%eax
   16d58:	b8 01 00 00 00       	mov    $0x1,%eax
   16d5d:	48 85 f6             	test   %rsi,%rsi
   16d60:	79 08                	jns    16d6a <mbedtls_mpi_cmp_int+0x2a>
   16d62:	48 f7 de             	neg    %rsi
   16d65:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   16d6a:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   16d6f:	48 89 e6             	mov    %rsp,%rsi
   16d72:	89 04 24             	mov    %eax,(%rsp)
   16d75:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   16d7a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   16d81:	00 00 
   16d83:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16d88:	e8 c3 fe ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   16d8d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   16d92:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   16d99:	00 00 
   16d9b:	75 05                	jne    16da2 <mbedtls_mpi_cmp_int+0x62>
   16d9d:	48 83 c4 38          	add    $0x38,%rsp
   16da1:	c3                   	retq   
   16da2:	e8 c9 d4 fe ff       	callq  4270 <__stack_chk_fail@plt>
   16da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16dae:	00 00 

0000000000016db0 <mbedtls_mpi_add_abs>:
   16db0:	f3 0f 1e fa          	endbr64 
   16db4:	41 56                	push   %r14
   16db6:	41 55                	push   %r13
   16db8:	49 89 fd             	mov    %rdi,%r13
   16dbb:	41 54                	push   %r12
   16dbd:	55                   	push   %rbp
   16dbe:	48 89 f5             	mov    %rsi,%rbp
   16dc1:	53                   	push   %rbx
   16dc2:	48 39 d7             	cmp    %rdx,%rdi
   16dc5:	74 14                	je     16ddb <mbedtls_mpi_add_abs+0x2b>
   16dc7:	48 89 d3             	mov    %rdx,%rbx
   16dca:	48 39 f7             	cmp    %rsi,%rdi
   16dcd:	74 09                	je     16dd8 <mbedtls_mpi_add_abs+0x28>
   16dcf:	e8 2c f8 ff ff       	callq  16600 <mbedtls_mpi_copy>
   16dd4:	85 c0                	test   %eax,%eax
   16dd6:	75 45                	jne    16e1d <mbedtls_mpi_add_abs+0x6d>
   16dd8:	48 89 dd             	mov    %rbx,%rbp
   16ddb:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
   16ddf:	41 c7 45 00 01 00 00 	movl   $0x1,0x0(%r13)
   16de6:	00 
   16de7:	48 85 db             	test   %rbx,%rbx
   16dea:	74 44                	je     16e30 <mbedtls_mpi_add_abs+0x80>
   16dec:	48 8b 45 10          	mov    0x10(%rbp),%rax
   16df0:	eb 0c                	jmp    16dfe <mbedtls_mpi_add_abs+0x4e>
   16df2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16df8:	48 83 eb 01          	sub    $0x1,%rbx
   16dfc:	74 32                	je     16e30 <mbedtls_mpi_add_abs+0x80>
   16dfe:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   16e04:	4c 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%r14
   16e0b:	00 
   16e0c:	74 ea                	je     16df8 <mbedtls_mpi_add_abs+0x48>
   16e0e:	48 89 de             	mov    %rbx,%rsi
   16e11:	4c 89 ef             	mov    %r13,%rdi
   16e14:	e8 b7 f5 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   16e19:	85 c0                	test   %eax,%eax
   16e1b:	74 23                	je     16e40 <mbedtls_mpi_add_abs+0x90>
   16e1d:	5b                   	pop    %rbx
   16e1e:	5d                   	pop    %rbp
   16e1f:	41 5c                	pop    %r12
   16e21:	41 5d                	pop    %r13
   16e23:	41 5e                	pop    %r14
   16e25:	c3                   	retq   
   16e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16e2d:	00 00 00 
   16e30:	5b                   	pop    %rbx
   16e31:	31 c0                	xor    %eax,%eax
   16e33:	5d                   	pop    %rbp
   16e34:	41 5c                	pop    %r12
   16e36:	41 5d                	pop    %r13
   16e38:	41 5e                	pop    %r14
   16e3a:	c3                   	retq   
   16e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16e40:	4d 8b 65 10          	mov    0x10(%r13),%r12
   16e44:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16e48:	48 89 d9             	mov    %rbx,%rcx
   16e4b:	4c 89 e6             	mov    %r12,%rsi
   16e4e:	4c 89 e7             	mov    %r12,%rdi
   16e51:	e8 da 4d 00 00       	callq  1bc30 <mbedtls_mpi_core_add>
   16e56:	48 89 c5             	mov    %rax,%rbp
   16e59:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
   16e5d:	48 85 ed             	test   %rbp,%rbp
   16e60:	75 1f                	jne    16e81 <mbedtls_mpi_add_abs+0xd1>
   16e62:	eb cc                	jmp    16e30 <mbedtls_mpi_add_abs+0x80>
   16e64:	0f 1f 40 00          	nopl   0x0(%rax)
   16e68:	31 d2                	xor    %edx,%edx
   16e6a:	48 03 28             	add    (%rax),%rbp
   16e6d:	0f 92 c2             	setb   %dl
   16e70:	48 89 28             	mov    %rbp,(%rax)
   16e73:	48 83 c0 08          	add    $0x8,%rax
   16e77:	bd 01 00 00 00       	mov    $0x1,%ebp
   16e7c:	48 85 d2             	test   %rdx,%rdx
   16e7f:	74 af                	je     16e30 <mbedtls_mpi_add_abs+0x80>
   16e81:	49 89 dc             	mov    %rbx,%r12
   16e84:	48 83 c3 01          	add    $0x1,%rbx
   16e88:	4d 39 65 08          	cmp    %r12,0x8(%r13)
   16e8c:	77 da                	ja     16e68 <mbedtls_mpi_add_abs+0xb8>
   16e8e:	48 89 de             	mov    %rbx,%rsi
   16e91:	4c 89 ef             	mov    %r13,%rdi
   16e94:	e8 37 f5 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   16e99:	85 c0                	test   %eax,%eax
   16e9b:	75 80                	jne    16e1d <mbedtls_mpi_add_abs+0x6d>
   16e9d:	49 8b 45 10          	mov    0x10(%r13),%rax
   16ea1:	4a 8d 04 e0          	lea    (%rax,%r12,8),%rax
   16ea5:	eb c1                	jmp    16e68 <mbedtls_mpi_add_abs+0xb8>
   16ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16eae:	00 00 

0000000000016eb0 <mbedtls_mpi_sub_abs>:
   16eb0:	f3 0f 1e fa          	endbr64 
   16eb4:	41 56                	push   %r14
   16eb6:	41 55                	push   %r13
   16eb8:	49 89 d5             	mov    %rdx,%r13
   16ebb:	41 54                	push   %r12
   16ebd:	49 89 f4             	mov    %rsi,%r12
   16ec0:	55                   	push   %rbp
   16ec1:	48 89 fd             	mov    %rdi,%rbp
   16ec4:	53                   	push   %rbx
   16ec5:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
   16ec9:	48 85 db             	test   %rbx,%rbx
   16ecc:	74 32                	je     16f00 <mbedtls_mpi_sub_abs+0x50>
   16ece:	48 8b 42 10          	mov    0x10(%rdx),%rax
   16ed2:	eb 0a                	jmp    16ede <mbedtls_mpi_sub_abs+0x2e>
   16ed4:	0f 1f 40 00          	nopl   0x0(%rax)
   16ed8:	48 83 eb 01          	sub    $0x1,%rbx
   16edc:	74 22                	je     16f00 <mbedtls_mpi_sub_abs+0x50>
   16ede:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   16ee4:	74 f2                	je     16ed8 <mbedtls_mpi_sub_abs+0x28>
   16ee6:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   16eeb:	48 39 de             	cmp    %rbx,%rsi
   16eee:	73 17                	jae    16f07 <mbedtls_mpi_sub_abs+0x57>
   16ef0:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
   16ef6:	eb 5b                	jmp    16f53 <mbedtls_mpi_sub_abs+0xa3>
   16ef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16eff:	00 
   16f00:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   16f05:	31 db                	xor    %ebx,%ebx
   16f07:	48 89 ef             	mov    %rbp,%rdi
   16f0a:	e8 c1 f4 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   16f0f:	41 89 c6             	mov    %eax,%r14d
   16f12:	85 c0                	test   %eax,%eax
   16f14:	75 3d                	jne    16f53 <mbedtls_mpi_sub_abs+0xa3>
   16f16:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   16f1b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16f1f:	48 39 da             	cmp    %rbx,%rdx
   16f22:	76 09                	jbe    16f2d <mbedtls_mpi_sub_abs+0x7d>
   16f24:	49 39 ec             	cmp    %rbp,%r12
   16f27:	0f 85 83 00 00 00    	jne    16fb0 <mbedtls_mpi_sub_abs+0x100>
   16f2d:	48 8b 45 08          	mov    0x8(%rbp),%rax
   16f31:	48 39 d0             	cmp    %rdx,%rax
   16f34:	77 52                	ja     16f88 <mbedtls_mpi_sub_abs+0xd8>
   16f36:	49 8b 55 10          	mov    0x10(%r13),%rdx
   16f3a:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   16f3f:	48 89 d9             	mov    %rbx,%rcx
   16f42:	e8 a9 4d 00 00       	callq  1bcf0 <mbedtls_mpi_core_sub>
   16f47:	48 85 c0             	test   %rax,%rax
   16f4a:	75 14                	jne    16f60 <mbedtls_mpi_sub_abs+0xb0>
   16f4c:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
   16f53:	5b                   	pop    %rbx
   16f54:	44 89 f0             	mov    %r14d,%eax
   16f57:	5d                   	pop    %rbp
   16f58:	41 5c                	pop    %r12
   16f5a:	41 5d                	pop    %r13
   16f5c:	41 5e                	pop    %r14
   16f5e:	c3                   	retq   
   16f5f:	90                   	nop
   16f60:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16f64:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
   16f68:	48 8d 3c da          	lea    (%rdx,%rbx,8),%rdi
   16f6c:	48 29 d9             	sub    %rbx,%rcx
   16f6f:	48 89 c2             	mov    %rax,%rdx
   16f72:	48 89 fe             	mov    %rdi,%rsi
   16f75:	e8 26 57 00 00       	callq  1c6a0 <mbedtls_mpi_core_sub_int>
   16f7a:	48 85 c0             	test   %rax,%rax
   16f7d:	74 cd                	je     16f4c <mbedtls_mpi_sub_abs+0x9c>
   16f7f:	e9 6c ff ff ff       	jmpq   16ef0 <mbedtls_mpi_sub_abs+0x40>
   16f84:	0f 1f 40 00          	nopl   0x0(%rax)
   16f88:	48 29 d0             	sub    %rdx,%rax
   16f8b:	48 8d 3c d7          	lea    (%rdi,%rdx,8),%rdi
   16f8f:	31 f6                	xor    %esi,%esi
   16f91:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
   16f98:	00 
   16f99:	4c 89 c2             	mov    %r8,%rdx
   16f9c:	e8 ff d2 fe ff       	callq  42a0 <memset@plt>
   16fa1:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16fa5:	eb 8f                	jmp    16f36 <mbedtls_mpi_sub_abs+0x86>
   16fa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16fae:	00 00 
   16fb0:	48 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%rsi
   16fb7:	00 
   16fb8:	48 29 da             	sub    %rbx,%rdx
   16fbb:	48 01 f7             	add    %rsi,%rdi
   16fbe:	48 c1 e2 03          	shl    $0x3,%rdx
   16fc2:	49 03 74 24 10       	add    0x10(%r12),%rsi
   16fc7:	e8 54 d3 fe ff       	callq  4320 <memcpy@plt>
   16fcc:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   16fd1:	48 8b 45 08          	mov    0x8(%rbp),%rax
   16fd5:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16fd9:	48 39 d0             	cmp    %rdx,%rax
   16fdc:	0f 86 54 ff ff ff    	jbe    16f36 <mbedtls_mpi_sub_abs+0x86>
   16fe2:	eb a4                	jmp    16f88 <mbedtls_mpi_sub_abs+0xd8>
   16fe4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16feb:	00 00 00 00 
   16fef:	90                   	nop

0000000000016ff0 <add_sub_mpi>:
   16ff0:	41 54                	push   %r12
   16ff2:	41 89 c8             	mov    %ecx,%r8d
   16ff5:	49 89 f1             	mov    %rsi,%r9
   16ff8:	49 89 d2             	mov    %rdx,%r10
   16ffb:	55                   	push   %rbp
   16ffc:	48 89 fd             	mov    %rdi,%rbp
   16fff:	53                   	push   %rbx
   17000:	8b 1e                	mov    (%rsi),%ebx
   17002:	8b 0a                	mov    (%rdx),%ecx
   17004:	0f af cb             	imul   %ebx,%ecx
   17007:	41 0f af c8          	imul   %r8d,%ecx
   1700b:	85 c9                	test   %ecx,%ecx
   1700d:	79 61                	jns    17070 <add_sub_mpi+0x80>
   1700f:	48 89 d6             	mov    %rdx,%rsi
   17012:	4c 89 cf             	mov    %r9,%rdi
   17015:	e8 76 fb ff ff       	callq  16b90 <mbedtls_mpi_cmp_abs>
   1701a:	41 89 c4             	mov    %eax,%r12d
   1701d:	85 c0                	test   %eax,%eax
   1701f:	78 2f                	js     17050 <add_sub_mpi+0x60>
   17021:	4c 89 d2             	mov    %r10,%rdx
   17024:	4c 89 ce             	mov    %r9,%rsi
   17027:	48 89 ef             	mov    %rbp,%rdi
   1702a:	e8 81 fe ff ff       	callq  16eb0 <mbedtls_mpi_sub_abs>
   1702f:	85 c0                	test   %eax,%eax
   17031:	75 0e                	jne    17041 <add_sub_mpi+0x51>
   17033:	45 85 e4             	test   %r12d,%r12d
   17036:	ba 01 00 00 00       	mov    $0x1,%edx
   1703b:	0f 44 da             	cmove  %edx,%ebx
   1703e:	89 5d 00             	mov    %ebx,0x0(%rbp)
   17041:	5b                   	pop    %rbx
   17042:	5d                   	pop    %rbp
   17043:	41 5c                	pop    %r12
   17045:	c3                   	retq   
   17046:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1704d:	00 00 00 
   17050:	4c 89 ca             	mov    %r9,%rdx
   17053:	4c 89 d6             	mov    %r10,%rsi
   17056:	48 89 ef             	mov    %rbp,%rdi
   17059:	e8 52 fe ff ff       	callq  16eb0 <mbedtls_mpi_sub_abs>
   1705e:	85 c0                	test   %eax,%eax
   17060:	75 df                	jne    17041 <add_sub_mpi+0x51>
   17062:	f7 db                	neg    %ebx
   17064:	89 5d 00             	mov    %ebx,0x0(%rbp)
   17067:	5b                   	pop    %rbx
   17068:	5d                   	pop    %rbp
   17069:	41 5c                	pop    %r12
   1706b:	c3                   	retq   
   1706c:	0f 1f 40 00          	nopl   0x0(%rax)
   17070:	e8 3b fd ff ff       	callq  16db0 <mbedtls_mpi_add_abs>
   17075:	85 c0                	test   %eax,%eax
   17077:	75 c8                	jne    17041 <add_sub_mpi+0x51>
   17079:	f3 0f 1e fa          	endbr64 
   1707d:	89 5d 00             	mov    %ebx,0x0(%rbp)
   17080:	5b                   	pop    %rbx
   17081:	5d                   	pop    %rbp
   17082:	41 5c                	pop    %r12
   17084:	c3                   	retq   
   17085:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1708c:	00 00 00 00 

0000000000017090 <mbedtls_mpi_add_mpi>:
   17090:	f3 0f 1e fa          	endbr64 
   17094:	b9 01 00 00 00       	mov    $0x1,%ecx
   17099:	e9 52 ff ff ff       	jmpq   16ff0 <add_sub_mpi>
   1709e:	66 90                	xchg   %ax,%ax

00000000000170a0 <mbedtls_mpi_sub_mpi>:
   170a0:	f3 0f 1e fa          	endbr64 
   170a4:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   170a9:	e9 42 ff ff ff       	jmpq   16ff0 <add_sub_mpi>
   170ae:	66 90                	xchg   %ax,%ax

00000000000170b0 <mbedtls_mpi_add_int>:
   170b0:	f3 0f 1e fa          	endbr64 
   170b4:	48 83 ec 38          	sub    $0x38,%rsp
   170b8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   170bf:	00 00 
   170c1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   170c6:	31 c0                	xor    %eax,%eax
   170c8:	b8 01 00 00 00       	mov    $0x1,%eax
   170cd:	48 85 d2             	test   %rdx,%rdx
   170d0:	79 08                	jns    170da <mbedtls_mpi_add_int+0x2a>
   170d2:	48 f7 da             	neg    %rdx
   170d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   170da:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   170df:	b9 01 00 00 00       	mov    $0x1,%ecx
   170e4:	48 89 e2             	mov    %rsp,%rdx
   170e7:	89 04 24             	mov    %eax,(%rsp)
   170ea:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   170ef:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   170f6:	00 00 
   170f8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   170fd:	e8 ee fe ff ff       	callq  16ff0 <add_sub_mpi>
   17102:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   17107:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1710e:	00 00 
   17110:	75 05                	jne    17117 <mbedtls_mpi_add_int+0x67>
   17112:	48 83 c4 38          	add    $0x38,%rsp
   17116:	c3                   	retq   
   17117:	e8 54 d1 fe ff       	callq  4270 <__stack_chk_fail@plt>
   1711c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017120 <mbedtls_mpi_sub_int>:
   17120:	f3 0f 1e fa          	endbr64 
   17124:	48 83 ec 38          	sub    $0x38,%rsp
   17128:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1712f:	00 00 
   17131:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17136:	31 c0                	xor    %eax,%eax
   17138:	b8 01 00 00 00       	mov    $0x1,%eax
   1713d:	48 85 d2             	test   %rdx,%rdx
   17140:	79 08                	jns    1714a <mbedtls_mpi_sub_int+0x2a>
   17142:	48 f7 da             	neg    %rdx
   17145:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1714a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1714f:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17154:	48 89 e2             	mov    %rsp,%rdx
   17157:	89 04 24             	mov    %eax,(%rsp)
   1715a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1715f:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   17166:	00 00 
   17168:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1716d:	e8 7e fe ff ff       	callq  16ff0 <add_sub_mpi>
   17172:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   17177:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1717e:	00 00 
   17180:	75 05                	jne    17187 <mbedtls_mpi_sub_int+0x67>
   17182:	48 83 c4 38          	add    $0x38,%rsp
   17186:	c3                   	retq   
   17187:	e8 e4 d0 fe ff       	callq  4270 <__stack_chk_fail@plt>
   1718c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017190 <mbedtls_mpi_mul_mpi>:
   17190:	f3 0f 1e fa          	endbr64 
   17194:	41 57                	push   %r15
   17196:	49 89 ff             	mov    %rdi,%r15
   17199:	41 56                	push   %r14
   1719b:	49 89 d6             	mov    %rdx,%r14
   1719e:	41 55                	push   %r13
   171a0:	49 89 f5             	mov    %rsi,%r13
   171a3:	41 54                	push   %r12
   171a5:	55                   	push   %rbp
   171a6:	53                   	push   %rbx
   171a7:	48 83 ec 58          	sub    $0x58,%rsp
   171ab:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   171b2:	00 00 
   171b4:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   171b9:	31 c0                	xor    %eax,%eax
   171bb:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   171c0:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   171c7:	00 
   171c8:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   171cf:	00 00 
   171d1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   171d8:	00 00 
   171da:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   171e1:	00 
   171e2:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   171e9:	00 00 
   171eb:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   171f2:	00 00 
   171f4:	48 89 04 24          	mov    %rax,(%rsp)
   171f8:	48 39 f7             	cmp    %rsi,%rdi
   171fb:	0f 84 2f 01 00 00    	je     17330 <mbedtls_mpi_mul_mpi+0x1a0>
   17201:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   17206:	4d 39 f7             	cmp    %r14,%r15
   17209:	0f 84 51 01 00 00    	je     17360 <mbedtls_mpi_mul_mpi+0x1d0>
   1720f:	4d 8b 65 08          	mov    0x8(%r13),%r12
   17213:	4d 85 e4             	test   %r12,%r12
   17216:	0f 84 f4 00 00 00    	je     17310 <mbedtls_mpi_mul_mpi+0x180>
   1721c:	49 8b 45 10          	mov    0x10(%r13),%rax
   17220:	eb 10                	jmp    17232 <mbedtls_mpi_mul_mpi+0xa2>
   17222:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17228:	49 83 ec 01          	sub    $0x1,%r12
   1722c:	0f 84 de 00 00 00    	je     17310 <mbedtls_mpi_mul_mpi+0x180>
   17232:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
   17238:	74 ee                	je     17228 <mbedtls_mpi_mul_mpi+0x98>
   1723a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   17241:	00 
   17242:	49 8b 5e 08          	mov    0x8(%r14),%rbx
   17246:	48 85 db             	test   %rbx,%rbx
   17249:	0f 84 b1 00 00 00    	je     17300 <mbedtls_mpi_mul_mpi+0x170>
   1724f:	49 8b 46 10          	mov    0x10(%r14),%rax
   17253:	eb 0d                	jmp    17262 <mbedtls_mpi_mul_mpi+0xd2>
   17255:	0f 1f 00             	nopl   (%rax)
   17258:	48 83 eb 01          	sub    $0x1,%rbx
   1725c:	0f 84 9e 00 00 00    	je     17300 <mbedtls_mpi_mul_mpi+0x170>
   17262:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   17268:	74 ee                	je     17258 <mbedtls_mpi_mul_mpi+0xc8>
   1726a:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
   1726e:	4c 89 ff             	mov    %r15,%rdi
   17271:	e8 5a f1 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   17276:	85 c0                	test   %eax,%eax
   17278:	75 46                	jne    172c0 <mbedtls_mpi_mul_mpi+0x130>
   1727a:	31 f6                	xor    %esi,%esi
   1727c:	4c 89 ff             	mov    %r15,%rdi
   1727f:	e8 ec f4 ff ff       	callq  16770 <mbedtls_mpi_lset>
   17284:	85 c0                	test   %eax,%eax
   17286:	75 38                	jne    172c0 <mbedtls_mpi_mul_mpi+0x130>
   17288:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   1728c:	49 8b 75 10          	mov    0x10(%r13),%rsi
   17290:	49 89 d8             	mov    %rbx,%r8
   17293:	4c 89 e2             	mov    %r12,%rdx
   17296:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1729a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1729e:	e8 4d 4c 00 00       	callq  1bef0 <mbedtls_mpi_core_mul>
   172a3:	8b 44 24 08          	mov    0x8(%rsp),%eax
   172a7:	85 c0                	test   %eax,%eax
   172a9:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   172ad:	74 71                	je     17320 <mbedtls_mpi_mul_mpi+0x190>
   172af:	41 c7 07 01 00 00 00 	movl   $0x1,(%r15)
   172b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   172bd:	00 00 00 
   172c0:	48 89 ef             	mov    %rbp,%rdi
   172c3:	89 44 24 08          	mov    %eax,0x8(%rsp)
   172c7:	e8 a4 f0 ff ff       	callq  16370 <mbedtls_mpi_free>
   172cc:	48 8b 3c 24          	mov    (%rsp),%rdi
   172d0:	e8 9b f0 ff ff       	callq  16370 <mbedtls_mpi_free>
   172d5:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   172da:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   172e1:	00 00 
   172e3:	8b 44 24 08          	mov    0x8(%rsp),%eax
   172e7:	0f 85 8e 00 00 00    	jne    1737b <mbedtls_mpi_mul_mpi+0x1eb>
   172ed:	48 83 c4 58          	add    $0x58,%rsp
   172f1:	5b                   	pop    %rbx
   172f2:	5d                   	pop    %rbp
   172f3:	41 5c                	pop    %r12
   172f5:	41 5d                	pop    %r13
   172f7:	41 5e                	pop    %r14
   172f9:	41 5f                	pop    %r15
   172fb:	c3                   	retq   
   172fc:	0f 1f 40 00          	nopl   0x0(%rax)
   17300:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
   17307:	00 
   17308:	4c 89 e6             	mov    %r12,%rsi
   1730b:	e9 5e ff ff ff       	jmpq   1726e <mbedtls_mpi_mul_mpi+0xde>
   17310:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
   17317:	00 
   17318:	e9 25 ff ff ff       	jmpq   17242 <mbedtls_mpi_mul_mpi+0xb2>
   1731d:	0f 1f 00             	nopl   (%rax)
   17320:	41 8b 55 00          	mov    0x0(%r13),%edx
   17324:	41 0f af 16          	imul   (%r14),%edx
   17328:	41 89 17             	mov    %edx,(%r15)
   1732b:	eb 93                	jmp    172c0 <mbedtls_mpi_mul_mpi+0x130>
   1732d:	0f 1f 00             	nopl   (%rax)
   17330:	48 89 fe             	mov    %rdi,%rsi
   17333:	48 89 c7             	mov    %rax,%rdi
   17336:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   1733b:	49 89 c5             	mov    %rax,%r13
   1733e:	e8 bd f2 ff ff       	callq  16600 <mbedtls_mpi_copy>
   17343:	85 c0                	test   %eax,%eax
   17345:	0f 85 75 ff ff ff    	jne    172c0 <mbedtls_mpi_mul_mpi+0x130>
   1734b:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   17350:	4d 39 f7             	cmp    %r14,%r15
   17353:	0f 85 b6 fe ff ff    	jne    1720f <mbedtls_mpi_mul_mpi+0x7f>
   17359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17360:	4c 89 fe             	mov    %r15,%rsi
   17363:	48 89 ef             	mov    %rbp,%rdi
   17366:	e8 95 f2 ff ff       	callq  16600 <mbedtls_mpi_copy>
   1736b:	85 c0                	test   %eax,%eax
   1736d:	0f 85 4d ff ff ff    	jne    172c0 <mbedtls_mpi_mul_mpi+0x130>
   17373:	49 89 ee             	mov    %rbp,%r14
   17376:	e9 94 fe ff ff       	jmpq   1720f <mbedtls_mpi_mul_mpi+0x7f>
   1737b:	e8 f0 ce fe ff       	callq  4270 <__stack_chk_fail@plt>

0000000000017380 <mbedtls_mpi_mul_int>:
   17380:	f3 0f 1e fa          	endbr64 
   17384:	41 56                	push   %r14
   17386:	41 55                	push   %r13
   17388:	41 54                	push   %r12
   1738a:	55                   	push   %rbp
   1738b:	48 89 fd             	mov    %rdi,%rbp
   1738e:	53                   	push   %rbx
   1738f:	4c 8b 66 08          	mov    0x8(%rsi),%r12
   17393:	4d 85 e4             	test   %r12,%r12
   17396:	0f 84 84 00 00 00    	je     17420 <mbedtls_mpi_mul_int+0xa0>
   1739c:	48 8b 46 10          	mov    0x10(%rsi),%rax
   173a0:	48 89 f3             	mov    %rsi,%rbx
   173a3:	49 89 d6             	mov    %rdx,%r14
   173a6:	eb 0e                	jmp    173b6 <mbedtls_mpi_mul_int+0x36>
   173a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   173af:	00 
   173b0:	49 83 ec 01          	sub    $0x1,%r12
   173b4:	74 6a                	je     17420 <mbedtls_mpi_mul_int+0xa0>
   173b6:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
   173bc:	74 f2                	je     173b0 <mbedtls_mpi_mul_int+0x30>
   173be:	4d 85 f6             	test   %r14,%r14
   173c1:	74 5d                	je     17420 <mbedtls_mpi_mul_int+0xa0>
   173c3:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
   173c8:	48 89 ef             	mov    %rbp,%rdi
   173cb:	e8 00 f0 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   173d0:	41 89 c5             	mov    %eax,%r13d
   173d3:	85 c0                	test   %eax,%eax
   173d5:	74 11                	je     173e8 <mbedtls_mpi_mul_int+0x68>
   173d7:	5b                   	pop    %rbx
   173d8:	44 89 e8             	mov    %r13d,%eax
   173db:	5d                   	pop    %rbp
   173dc:	41 5c                	pop    %r12
   173de:	41 5d                	pop    %r13
   173e0:	41 5e                	pop    %r14
   173e2:	c3                   	retq   
   173e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   173e8:	48 89 de             	mov    %rbx,%rsi
   173eb:	48 89 ef             	mov    %rbp,%rdi
   173ee:	e8 0d f2 ff ff       	callq  16600 <mbedtls_mpi_copy>
   173f3:	41 89 c5             	mov    %eax,%r13d
   173f6:	85 c0                	test   %eax,%eax
   173f8:	75 dd                	jne    173d7 <mbedtls_mpi_mul_int+0x57>
   173fa:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   173fe:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   17402:	4d 8d 46 ff          	lea    -0x1(%r14),%r8
   17406:	4c 89 e1             	mov    %r12,%rcx
   17409:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1740d:	e8 2e 49 00 00       	callq  1bd40 <mbedtls_mpi_core_mla>
   17412:	5b                   	pop    %rbx
   17413:	44 89 e8             	mov    %r13d,%eax
   17416:	5d                   	pop    %rbp
   17417:	41 5c                	pop    %r12
   17419:	41 5d                	pop    %r13
   1741b:	41 5e                	pop    %r14
   1741d:	c3                   	retq   
   1741e:	66 90                	xchg   %ax,%ax
   17420:	5b                   	pop    %rbx
   17421:	48 89 ef             	mov    %rbp,%rdi
   17424:	31 f6                	xor    %esi,%esi
   17426:	5d                   	pop    %rbp
   17427:	41 5c                	pop    %r12
   17429:	41 5d                	pop    %r13
   1742b:	41 5e                	pop    %r14
   1742d:	e9 3e f3 ff ff       	jmpq   16770 <mbedtls_mpi_lset>
   17432:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17439:	00 00 00 00 
   1743d:	0f 1f 00             	nopl   (%rax)

0000000000017440 <mbedtls_mpi_read_string>:
   17440:	f3 0f 1e fa          	endbr64 
   17444:	41 57                	push   %r15
   17446:	41 56                	push   %r14
   17448:	41 55                	push   %r13
   1744a:	41 54                	push   %r12
   1744c:	55                   	push   %rbp
   1744d:	48 63 ee             	movslq %esi,%rbp
   17450:	53                   	push   %rbx
   17451:	48 83 ec 38          	sub    $0x38,%rsp
   17455:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1745c:	00 00 
   1745e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17463:	31 c0                	xor    %eax,%eax
   17465:	8d 45 fe             	lea    -0x2(%rbp),%eax
   17468:	83 f8 0e             	cmp    $0xe,%eax
   1746b:	0f 87 4f 02 00 00    	ja     176c0 <mbedtls_mpi_read_string+0x280>
   17471:	0f b6 02             	movzbl (%rdx),%eax
   17474:	49 89 ff             	mov    %rdi,%r15
   17477:	48 89 d3             	mov    %rdx,%rbx
   1747a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   17481:	00 
   17482:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   17489:	00 00 
   1748b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17492:	00 00 
   17494:	84 c0                	test   %al,%al
   17496:	0f 84 9c 01 00 00    	je     17638 <mbedtls_mpi_read_string+0x1f8>
   1749c:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   174a3:	00 
   174a4:	3c 2d                	cmp    $0x2d,%al
   174a6:	75 0c                	jne    174b4 <mbedtls_mpi_read_string+0x74>
   174a8:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%rsp)
   174af:	ff 
   174b0:	48 83 c3 01          	add    $0x1,%rbx
   174b4:	48 89 df             	mov    %rbx,%rdi
   174b7:	e8 a4 cd fe ff       	callq  4260 <strlen@plt>
   174bc:	49 89 c6             	mov    %rax,%r14
   174bf:	49 89 c5             	mov    %rax,%r13
   174c2:	83 fd 10             	cmp    $0x10,%ebp
   174c5:	75 79                	jne    17540 <mbedtls_mpi_read_string+0x100>
   174c7:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   174ce:	ff ff 3f 
   174d1:	49 39 c6             	cmp    %rax,%r14
   174d4:	0f 87 e6 01 00 00    	ja     176c0 <mbedtls_mpi_read_string+0x280>
   174da:	4a 8d 34 b5 00 00 00 	lea    0x0(,%r14,4),%rsi
   174e1:	00 
   174e2:	31 c0                	xor    %eax,%eax
   174e4:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   174e9:	4c 89 ff             	mov    %r15,%rdi
   174ec:	40 f6 c6 3c          	test   $0x3c,%sil
   174f0:	0f 95 c0             	setne  %al
   174f3:	48 c1 ee 06          	shr    $0x6,%rsi
   174f7:	48 01 c6             	add    %rax,%rsi
   174fa:	e8 d1 ee ff ff       	callq  163d0 <mbedtls_mpi_grow>
   174ff:	85 c0                	test   %eax,%eax
   17501:	0f 84 d9 00 00 00    	je     175e0 <mbedtls_mpi_read_string+0x1a0>
   17507:	4c 89 e7             	mov    %r12,%rdi
   1750a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1750e:	e8 5d ee ff ff       	callq  16370 <mbedtls_mpi_free>
   17513:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   17517:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1751c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   17523:	00 00 
   17525:	0f 85 9f 01 00 00    	jne    176ca <mbedtls_mpi_read_string+0x28a>
   1752b:	48 83 c4 38          	add    $0x38,%rsp
   1752f:	5b                   	pop    %rbx
   17530:	5d                   	pop    %rbp
   17531:	41 5c                	pop    %r12
   17533:	41 5d                	pop    %r13
   17535:	41 5e                	pop    %r14
   17537:	41 5f                	pop    %r15
   17539:	c3                   	retq   
   1753a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17540:	31 f6                	xor    %esi,%esi
   17542:	4c 89 ff             	mov    %r15,%rdi
   17545:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   1754a:	e8 21 f2 ff ff       	callq  16770 <mbedtls_mpi_lset>
   1754f:	85 c0                	test   %eax,%eax
   17551:	75 b4                	jne    17507 <mbedtls_mpi_read_string+0xc7>
   17553:	4d 85 f6             	test   %r14,%r14
   17556:	0f 84 1b 01 00 00    	je     17677 <mbedtls_mpi_read_string+0x237>
   1755c:	4e 8d 2c 33          	lea    (%rbx,%r14,1),%r13
   17560:	eb 4f                	jmp    175b1 <mbedtls_mpi_read_string+0x171>
   17562:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17568:	41 83 e8 30          	sub    $0x30,%r8d
   1756c:	4d 63 f0             	movslq %r8d,%r14
   1756f:	49 39 ee             	cmp    %rbp,%r14
   17572:	0f 83 b0 00 00 00    	jae    17628 <mbedtls_mpi_read_string+0x1e8>
   17578:	48 89 ea             	mov    %rbp,%rdx
   1757b:	4c 89 fe             	mov    %r15,%rsi
   1757e:	4c 89 e7             	mov    %r12,%rdi
   17581:	e8 fa fd ff ff       	callq  17380 <mbedtls_mpi_mul_int>
   17586:	85 c0                	test   %eax,%eax
   17588:	0f 85 79 ff ff ff    	jne    17507 <mbedtls_mpi_read_string+0xc7>
   1758e:	4c 89 f2             	mov    %r14,%rdx
   17591:	4c 89 e6             	mov    %r12,%rsi
   17594:	4c 89 ff             	mov    %r15,%rdi
   17597:	e8 14 fb ff ff       	callq  170b0 <mbedtls_mpi_add_int>
   1759c:	85 c0                	test   %eax,%eax
   1759e:	0f 85 63 ff ff ff    	jne    17507 <mbedtls_mpi_read_string+0xc7>
   175a4:	48 83 c3 01          	add    $0x1,%rbx
   175a8:	49 39 dd             	cmp    %rbx,%r13
   175ab:	0f 84 c6 00 00 00    	je     17677 <mbedtls_mpi_read_string+0x237>
   175b1:	44 0f be 03          	movsbl (%rbx),%r8d
   175b5:	41 8d 50 d0          	lea    -0x30(%r8),%edx
   175b9:	44 89 c0             	mov    %r8d,%eax
   175bc:	80 fa 09             	cmp    $0x9,%dl
   175bf:	76 a7                	jbe    17568 <mbedtls_mpi_read_string+0x128>
   175c1:	41 8d 50 bf          	lea    -0x41(%r8),%edx
   175c5:	80 fa 05             	cmp    $0x5,%dl
   175c8:	0f 87 01 01 00 00    	ja     176cf <mbedtls_mpi_read_string+0x28f>
   175ce:	41 83 e8 37          	sub    $0x37,%r8d
   175d2:	4d 63 f0             	movslq %r8d,%r14
   175d5:	eb 98                	jmp    1756f <mbedtls_mpi_read_string+0x12f>
   175d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   175de:	00 00 
   175e0:	31 f6                	xor    %esi,%esi
   175e2:	4c 89 ff             	mov    %r15,%rdi
   175e5:	e8 86 f1 ff ff       	callq  16770 <mbedtls_mpi_lset>
   175ea:	85 c0                	test   %eax,%eax
   175ec:	0f 85 15 ff ff ff    	jne    17507 <mbedtls_mpi_read_string+0xc7>
   175f2:	31 f6                	xor    %esi,%esi
   175f4:	4d 85 f6             	test   %r14,%r14
   175f7:	74 7e                	je     17677 <mbedtls_mpi_read_string+0x237>
   175f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17600:	49 83 ed 01          	sub    $0x1,%r13
   17604:	42 0f be 04 2b       	movsbl (%rbx,%r13,1),%eax
   17609:	8d 48 d0             	lea    -0x30(%rax),%ecx
   1760c:	89 c2                	mov    %eax,%edx
   1760e:	80 f9 09             	cmp    $0x9,%cl
   17611:	76 35                	jbe    17648 <mbedtls_mpi_read_string+0x208>
   17613:	8d 48 bf             	lea    -0x41(%rax),%ecx
   17616:	80 f9 05             	cmp    $0x5,%cl
   17619:	76 75                	jbe    17690 <mbedtls_mpi_read_string+0x250>
   1761b:	83 ea 61             	sub    $0x61,%edx
   1761e:	80 fa 05             	cmp    $0x5,%dl
   17621:	76 65                	jbe    17688 <mbedtls_mpi_read_string+0x248>
   17623:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   17628:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1762d:	e9 d5 fe ff ff       	jmpq   17507 <mbedtls_mpi_read_string+0xc7>
   17632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17638:	e8 33 ed ff ff       	callq  16370 <mbedtls_mpi_free>
   1763d:	31 c0                	xor    %eax,%eax
   1763f:	e9 d3 fe ff ff       	jmpq   17517 <mbedtls_mpi_read_string+0xd7>
   17644:	0f 1f 40 00          	nopl   0x0(%rax)
   17648:	83 e8 30             	sub    $0x30,%eax
   1764b:	48 98                	cltq   
   1764d:	48 89 f7             	mov    %rsi,%rdi
   17650:	8d 0c b5 00 00 00 00 	lea    0x0(,%rsi,4),%ecx
   17657:	49 8b 57 10          	mov    0x10(%r15),%rdx
   1765b:	48 83 c6 01          	add    $0x1,%rsi
   1765f:	48 c1 ef 04          	shr    $0x4,%rdi
   17663:	83 e1 3c             	and    $0x3c,%ecx
   17666:	48 d3 e0             	shl    %cl,%rax
   17669:	48 09 04 fa          	or     %rax,(%rdx,%rdi,8)
   1766d:	4d 85 ed             	test   %r13,%r13
   17670:	75 8e                	jne    17600 <mbedtls_mpi_read_string+0x1c0>
   17672:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   17677:	83 7c 24 0c ff       	cmpl   $0xffffffff,0xc(%rsp)
   1767c:	74 22                	je     176a0 <mbedtls_mpi_read_string+0x260>
   1767e:	31 c0                	xor    %eax,%eax
   17680:	e9 82 fe ff ff       	jmpq   17507 <mbedtls_mpi_read_string+0xc7>
   17685:	0f 1f 00             	nopl   (%rax)
   17688:	83 e8 57             	sub    $0x57,%eax
   1768b:	48 98                	cltq   
   1768d:	eb be                	jmp    1764d <mbedtls_mpi_read_string+0x20d>
   1768f:	90                   	nop
   17690:	83 e8 37             	sub    $0x37,%eax
   17693:	48 98                	cltq   
   17695:	eb b6                	jmp    1764d <mbedtls_mpi_read_string+0x20d>
   17697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1769e:	00 00 
   176a0:	49 8b 77 08          	mov    0x8(%r15),%rsi
   176a4:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   176a8:	e8 73 40 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   176ad:	48 85 c0             	test   %rax,%rax
   176b0:	74 cc                	je     1767e <mbedtls_mpi_read_string+0x23e>
   176b2:	41 c7 07 ff ff ff ff 	movl   $0xffffffff,(%r15)
   176b9:	31 c0                	xor    %eax,%eax
   176bb:	e9 47 fe ff ff       	jmpq   17507 <mbedtls_mpi_read_string+0xc7>
   176c0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   176c5:	e9 4d fe ff ff       	jmpq   17517 <mbedtls_mpi_read_string+0xd7>
   176ca:	e8 a1 cb fe ff       	callq  4270 <__stack_chk_fail@plt>
   176cf:	83 e8 61             	sub    $0x61,%eax
   176d2:	3c 05                	cmp    $0x5,%al
   176d4:	0f 87 4e ff ff ff    	ja     17628 <mbedtls_mpi_read_string+0x1e8>
   176da:	41 83 e8 57          	sub    $0x57,%r8d
   176de:	4d 63 f0             	movslq %r8d,%r14
   176e1:	e9 89 fe ff ff       	jmpq   1756f <mbedtls_mpi_read_string+0x12f>
   176e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   176ed:	00 00 00 

00000000000176f0 <mbedtls_mpi_read_file>:
   176f0:	f3 0f 1e fa          	endbr64 
   176f4:	41 55                	push   %r13
   176f6:	41 54                	push   %r12
   176f8:	55                   	push   %rbp
   176f9:	48 81 ec c0 09 00 00 	sub    $0x9c0,%rsp
   17700:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17707:	00 00 
   17709:	48 89 84 24 b8 09 00 	mov    %rax,0x9b8(%rsp)
   17710:	00 
   17711:	31 c0                	xor    %eax,%eax
   17713:	8d 46 fe             	lea    -0x2(%rsi),%eax
   17716:	83 f8 0e             	cmp    $0xe,%eax
   17719:	0f 87 4f 01 00 00    	ja     1786e <mbedtls_mpi_read_file+0x17e>
   1771f:	48 89 e5             	mov    %rsp,%rbp
   17722:	31 c0                	xor    %eax,%eax
   17724:	49 89 fd             	mov    %rdi,%r13
   17727:	b9 36 01 00 00       	mov    $0x136,%ecx
   1772c:	48 89 ef             	mov    %rbp,%rdi
   1772f:	41 89 f4             	mov    %esi,%r12d
   17732:	be b3 09 00 00       	mov    $0x9b3,%esi
   17737:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1773a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   17740:	48 89 ef             	mov    %rbp,%rdi
   17743:	e8 78 cb fe ff       	callq  42c0 <fgets@plt>
   17748:	48 85 c0             	test   %rax,%rax
   1774b:	0f 84 2b 01 00 00    	je     1787c <mbedtls_mpi_read_file+0x18c>
   17751:	48 89 ea             	mov    %rbp,%rdx
   17754:	8b 0a                	mov    (%rdx),%ecx
   17756:	48 83 c2 04          	add    $0x4,%rdx
   1775a:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
   17760:	f7 d1                	not    %ecx
   17762:	21 c8                	and    %ecx,%eax
   17764:	25 80 80 80 80       	and    $0x80808080,%eax
   17769:	74 e9                	je     17754 <mbedtls_mpi_read_file+0x64>
   1776b:	89 c1                	mov    %eax,%ecx
   1776d:	c1 e9 10             	shr    $0x10,%ecx
   17770:	a9 80 80 00 00       	test   $0x8080,%eax
   17775:	0f 44 c1             	cmove  %ecx,%eax
   17778:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
   1777c:	48 0f 44 d1          	cmove  %rcx,%rdx
   17780:	89 c7                	mov    %eax,%edi
   17782:	40 00 c7             	add    %al,%dil
   17785:	48 83 da 03          	sbb    $0x3,%rdx
   17789:	48 29 ea             	sub    %rbp,%rdx
   1778c:	48 81 fa b2 09 00 00 	cmp    $0x9b2,%rdx
   17793:	0f 84 dc 00 00 00    	je     17875 <mbedtls_mpi_read_file+0x185>
   17799:	48 85 d2             	test   %rdx,%rdx
   1779c:	0f 85 7e 00 00 00    	jne    17820 <mbedtls_mpi_read_file+0x130>
   177a2:	48 89 ea             	mov    %rbp,%rdx
   177a5:	49 63 fc             	movslq %r12d,%rdi
   177a8:	eb 14                	jmp    177be <mbedtls_mpi_read_file+0xce>
   177aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   177b0:	83 e8 30             	sub    $0x30,%eax
   177b3:	48 98                	cltq   
   177b5:	48 83 ea 01          	sub    $0x1,%rdx
   177b9:	48 39 c7             	cmp    %rax,%rdi
   177bc:	76 32                	jbe    177f0 <mbedtls_mpi_read_file+0x100>
   177be:	49 89 d0             	mov    %rdx,%r8
   177c1:	48 39 ea             	cmp    %rbp,%rdx
   177c4:	76 2a                	jbe    177f0 <mbedtls_mpi_read_file+0x100>
   177c6:	0f be 42 ff          	movsbl -0x1(%rdx),%eax
   177ca:	8d 70 d0             	lea    -0x30(%rax),%esi
   177cd:	89 c1                	mov    %eax,%ecx
   177cf:	40 80 fe 09          	cmp    $0x9,%sil
   177d3:	76 db                	jbe    177b0 <mbedtls_mpi_read_file+0xc0>
   177d5:	8d 70 bf             	lea    -0x41(%rax),%esi
   177d8:	40 80 fe 05          	cmp    $0x5,%sil
   177dc:	0f 87 a9 00 00 00    	ja     1788b <mbedtls_mpi_read_file+0x19b>
   177e2:	83 e8 37             	sub    $0x37,%eax
   177e5:	48 83 ea 01          	sub    $0x1,%rdx
   177e9:	48 98                	cltq   
   177eb:	48 39 c7             	cmp    %rax,%rdi
   177ee:	77 ce                	ja     177be <mbedtls_mpi_read_file+0xce>
   177f0:	4c 89 c2             	mov    %r8,%rdx
   177f3:	44 89 e6             	mov    %r12d,%esi
   177f6:	4c 89 ef             	mov    %r13,%rdi
   177f9:	e8 42 fc ff ff       	callq  17440 <mbedtls_mpi_read_string>
   177fe:	48 8b bc 24 b8 09 00 	mov    0x9b8(%rsp),%rdi
   17805:	00 
   17806:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1780d:	00 00 
   1780f:	75 75                	jne    17886 <mbedtls_mpi_read_file+0x196>
   17811:	48 81 c4 c0 09 00 00 	add    $0x9c0,%rsp
   17818:	5d                   	pop    %rbp
   17819:	41 5c                	pop    %r12
   1781b:	41 5d                	pop    %r13
   1781d:	c3                   	retq   
   1781e:	66 90                	xchg   %ax,%ax
   17820:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   17824:	0f b6 0c 04          	movzbl (%rsp,%rax,1),%ecx
   17828:	80 f9 0a             	cmp    $0xa,%cl
   1782b:	74 23                	je     17850 <mbedtls_mpi_read_file+0x160>
   1782d:	48 01 ea             	add    %rbp,%rdx
   17830:	80 f9 0d             	cmp    $0xd,%cl
   17833:	0f 85 6c ff ff ff    	jne    177a5 <mbedtls_mpi_read_file+0xb5>
   17839:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
   1783d:	48 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%rdx
   17842:	e9 5e ff ff ff       	jmpq   177a5 <mbedtls_mpi_read_file+0xb5>
   17847:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1784e:	00 00 
   17850:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
   17854:	48 85 c0             	test   %rax,%rax
   17857:	0f 84 45 ff ff ff    	je     177a2 <mbedtls_mpi_read_file+0xb2>
   1785d:	48 8d 72 fe          	lea    -0x2(%rdx),%rsi
   17861:	0f b6 4c 14 fe       	movzbl -0x2(%rsp,%rdx,1),%ecx
   17866:	48 89 c2             	mov    %rax,%rdx
   17869:	48 89 f0             	mov    %rsi,%rax
   1786c:	eb bf                	jmp    1782d <mbedtls_mpi_read_file+0x13d>
   1786e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17873:	eb 89                	jmp    177fe <mbedtls_mpi_read_file+0x10e>
   17875:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1787a:	eb 82                	jmp    177fe <mbedtls_mpi_read_file+0x10e>
   1787c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   17881:	e9 78 ff ff ff       	jmpq   177fe <mbedtls_mpi_read_file+0x10e>
   17886:	e8 e5 c9 fe ff       	callq  4270 <__stack_chk_fail@plt>
   1788b:	83 e9 61             	sub    $0x61,%ecx
   1788e:	80 f9 05             	cmp    $0x5,%cl
   17891:	0f 87 59 ff ff ff    	ja     177f0 <mbedtls_mpi_read_file+0x100>
   17897:	83 e8 57             	sub    $0x57,%eax
   1789a:	48 98                	cltq   
   1789c:	e9 14 ff ff ff       	jmpq   177b5 <mbedtls_mpi_read_file+0xc5>
   178a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   178a8:	00 00 00 00 
   178ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000178b0 <mbedtls_mpi_div_mpi>:
   178b0:	f3 0f 1e fa          	endbr64 
   178b4:	41 57                	push   %r15
   178b6:	49 89 fb             	mov    %rdi,%r11
   178b9:	41 56                	push   %r14
   178bb:	41 55                	push   %r13
   178bd:	41 54                	push   %r12
   178bf:	55                   	push   %rbp
   178c0:	48 89 d5             	mov    %rdx,%rbp
   178c3:	53                   	push   %rbx
   178c4:	48 89 cb             	mov    %rcx,%rbx
   178c7:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
   178ce:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   178d3:	4c 8d bc 24 30 01 00 	lea    0x130(%rsp),%r15
   178da:	00 
   178db:	48 89 cf             	mov    %rcx,%rdi
   178de:	4c 8d ac 24 50 01 00 	lea    0x150(%rsp),%r13
   178e5:	00 
   178e6:	48 89 34 24          	mov    %rsi,(%rsp)
   178ea:	4c 89 fe             	mov    %r15,%rsi
   178ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   178f4:	00 00 
   178f6:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   178fd:	00 
   178fe:	31 c0                	xor    %eax,%eax
   17900:	4c 89 ac 24 40 01 00 	mov    %r13,0x140(%rsp)
   17907:	00 
   17908:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
   1790f:	00 00 00 00 00 
   17914:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   1791b:	01 00 00 00 
   1791f:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   17926:	00 01 00 00 00 
   1792b:	e8 20 f3 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   17930:	85 c0                	test   %eax,%eax
   17932:	0f 84 68 05 00 00    	je     17ea0 <mbedtls_mpi_div_mpi+0x5f0>
   17938:	48 89 de             	mov    %rbx,%rsi
   1793b:	48 89 ef             	mov    %rbp,%rdi
   1793e:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   17945:	01 00 00 00 
   17949:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   17950:	00 00 00 00 00 
   17955:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   1795c:	00 00 00 00 00 
   17961:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   17968:	01 00 00 00 
   1796c:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   17973:	00 00 00 00 00 
   17978:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   1797f:	00 00 00 00 00 
   17984:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   1798b:	01 00 00 00 
   1798f:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   17996:	00 00 00 00 00 
   1799b:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   179a2:	00 00 00 00 00 
   179a7:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   179ae:	01 00 00 00 
   179b2:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   179b9:	00 00 00 00 00 
   179be:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   179c5:	00 00 00 00 00 
   179ca:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   179d1:	01 00 00 00 
   179d5:	48 c7 84 24 18 01 00 	movq   $0x3,0x118(%rsp)
   179dc:	00 03 00 00 00 
   179e1:	4c 89 ac 24 20 01 00 	mov    %r13,0x120(%rsp)
   179e8:	00 
   179e9:	e8 a2 f1 ff ff       	callq  16b90 <mbedtls_mpi_cmp_abs>
   179ee:	85 c0                	test   %eax,%eax
   179f0:	0f 89 ca 00 00 00    	jns    17ac0 <mbedtls_mpi_div_mpi+0x210>
   179f6:	4d 85 db             	test   %r11,%r11
   179f9:	74 13                	je     17a0e <mbedtls_mpi_div_mpi+0x15e>
   179fb:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   17a00:	31 f6                	xor    %esi,%esi
   17a02:	e8 69 ed ff ff       	callq  16770 <mbedtls_mpi_lset>
   17a07:	41 89 c4             	mov    %eax,%r12d
   17a0a:	85 c0                	test   %eax,%eax
   17a0c:	75 1a                	jne    17a28 <mbedtls_mpi_div_mpi+0x178>
   17a0e:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   17a13:	74 73                	je     17a88 <mbedtls_mpi_div_mpi+0x1d8>
   17a15:	48 8b 3c 24          	mov    (%rsp),%rdi
   17a19:	48 89 ee             	mov    %rbp,%rsi
   17a1c:	e8 df eb ff ff       	callq  16600 <mbedtls_mpi_copy>
   17a21:	41 89 c4             	mov    %eax,%r12d
   17a24:	85 c0                	test   %eax,%eax
   17a26:	74 60                	je     17a88 <mbedtls_mpi_div_mpi+0x1d8>
   17a28:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   17a2f:	00 
   17a30:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   17a37:	00 
   17a38:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
   17a3f:	00 
   17a40:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17a45:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   17a4c:	00 
   17a4d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17a52:	4c 89 c7             	mov    %r8,%rdi
   17a55:	e8 16 e9 ff ff       	callq  16370 <mbedtls_mpi_free>
   17a5a:	4c 89 f7             	mov    %r14,%rdi
   17a5d:	e8 0e e9 ff ff       	callq  16370 <mbedtls_mpi_free>
   17a62:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17a67:	e8 04 e9 ff ff       	callq  16370 <mbedtls_mpi_free>
   17a6c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   17a71:	e8 fa e8 ff ff       	callq  16370 <mbedtls_mpi_free>
   17a76:	be 18 00 00 00       	mov    $0x18,%esi
   17a7b:	4c 89 ef             	mov    %r13,%rdi
   17a7e:	e8 2d 76 ff ff       	callq  f0b0 <mbedtls_platform_zeroize>
   17a83:	eb 06                	jmp    17a8b <mbedtls_mpi_div_mpi+0x1db>
   17a85:	0f 1f 00             	nopl   (%rax)
   17a88:	45 31 e4             	xor    %r12d,%r12d
   17a8b:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
   17a92:	00 
   17a93:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   17a9a:	00 00 
   17a9c:	0f 85 5d 06 00 00    	jne    180ff <mbedtls_mpi_div_mpi+0x84f>
   17aa2:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
   17aa9:	44 89 e0             	mov    %r12d,%eax
   17aac:	5b                   	pop    %rbx
   17aad:	5d                   	pop    %rbp
   17aae:	41 5c                	pop    %r12
   17ab0:	41 5d                	pop    %r13
   17ab2:	41 5e                	pop    %r14
   17ab4:	41 5f                	pop    %r15
   17ab6:	c3                   	retq   
   17ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17abe:	00 00 
   17ac0:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   17ac7:	00 
   17ac8:	48 89 ee             	mov    %rbp,%rsi
   17acb:	4c 89 c7             	mov    %r8,%rdi
   17ace:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   17ad3:	e8 28 eb ff ff       	callq  16600 <mbedtls_mpi_copy>
   17ad8:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   17add:	85 c0                	test   %eax,%eax
   17adf:	41 89 c4             	mov    %eax,%r12d
   17ae2:	0f 85 48 ff ff ff    	jne    17a30 <mbedtls_mpi_div_mpi+0x180>
   17ae8:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
   17aef:	00 
   17af0:	48 89 de             	mov    %rbx,%rsi
   17af3:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   17af8:	4c 89 f7             	mov    %r14,%rdi
   17afb:	e8 00 eb ff ff       	callq  16600 <mbedtls_mpi_copy>
   17b00:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   17b05:	85 c0                	test   %eax,%eax
   17b07:	41 89 c4             	mov    %eax,%r12d
   17b0a:	74 24                	je     17b30 <mbedtls_mpi_div_mpi+0x280>
   17b0c:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   17b13:	00 
   17b14:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17b19:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   17b20:	00 
   17b21:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17b26:	e9 27 ff ff ff       	jmpq   17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17b30:	48 8b 45 08          	mov    0x8(%rbp),%rax
   17b34:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   17b39:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   17b40:	01 00 00 00 
   17b44:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   17b4b:	01 00 00 00 
   17b4f:	48 8d 70 02          	lea    0x2(%rax),%rsi
   17b53:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   17b5a:	00 
   17b5b:	48 89 c7             	mov    %rax,%rdi
   17b5e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17b63:	e8 68 e8 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   17b68:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   17b6f:	00 
   17b70:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17b75:	85 c0                	test   %eax,%eax
   17b77:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   17b7c:	41 89 c4             	mov    %eax,%r12d
   17b7f:	0f 85 cd fe ff ff    	jne    17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17b85:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17b8a:	31 f6                	xor    %esi,%esi
   17b8c:	e8 df eb ff ff       	callq  16770 <mbedtls_mpi_lset>
   17b91:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17b96:	85 c0                	test   %eax,%eax
   17b98:	41 89 c4             	mov    %eax,%r12d
   17b9b:	0f 85 b1 fe ff ff    	jne    17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17ba1:	48 8b 45 08          	mov    0x8(%rbp),%rax
   17ba5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   17baa:	48 8d 70 02          	lea    0x2(%rax),%rsi
   17bae:	e8 1d e8 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   17bb3:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17bb8:	85 c0                	test   %eax,%eax
   17bba:	41 89 c4             	mov    %eax,%r12d
   17bbd:	0f 85 8f fe ff ff    	jne    17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17bc3:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   17bca:	00 
   17bcb:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   17bd2:	00 
   17bd3:	e8 48 3b 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   17bd8:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17bdd:	83 e0 3f             	and    $0x3f,%eax
   17be0:	48 83 f8 3f          	cmp    $0x3f,%rax
   17be4:	0f 84 c1 02 00 00    	je     17eab <mbedtls_mpi_div_mpi+0x5fb>
   17bea:	ba 3f 00 00 00       	mov    $0x3f,%edx
   17bef:	4c 89 c7             	mov    %r8,%rdi
   17bf2:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   17bf7:	48 29 c2             	sub    %rax,%rdx
   17bfa:	48 89 d6             	mov    %rdx,%rsi
   17bfd:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   17c02:	e8 29 ee ff ff       	callq  16a30 <mbedtls_mpi_shift_l>
   17c07:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17c0c:	85 c0                	test   %eax,%eax
   17c0e:	41 89 c4             	mov    %eax,%r12d
   17c11:	0f 85 3b fe ff ff    	jne    17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17c17:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   17c1c:	4c 89 f7             	mov    %r14,%rdi
   17c1f:	e8 0c ee ff ff       	callq  16a30 <mbedtls_mpi_shift_l>
   17c24:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17c29:	85 c0                	test   %eax,%eax
   17c2b:	41 89 c4             	mov    %eax,%r12d
   17c2e:	0f 85 1e fe ff ff    	jne    17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17c34:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   17c3b:	00 
   17c3c:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   17c43:	00 
   17c44:	4c 89 f7             	mov    %r14,%rdi
   17c47:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   17c4c:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   17c51:	48 29 c2             	sub    %rax,%rdx
   17c54:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17c59:	48 89 d0             	mov    %rdx,%rax
   17c5c:	48 c1 e0 06          	shl    $0x6,%rax
   17c60:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   17c65:	48 89 c6             	mov    %rax,%rsi
   17c68:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   17c6d:	e8 be ed ff ff       	callq  16a30 <mbedtls_mpi_shift_l>
   17c72:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17c77:	85 c0                	test   %eax,%eax
   17c79:	41 89 c4             	mov    %eax,%r12d
   17c7c:	0f 85 d0 fd ff ff    	jne    17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17c82:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   17c87:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   17c8c:	4c 89 c3             	mov    %r8,%rbx
   17c8f:	44 89 64 24 30       	mov    %r12d,0x30(%rsp)
   17c94:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   17c9b:	00 
   17c9c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17ca1:	49 89 c4             	mov    %rax,%r12
   17ca4:	eb 34                	jmp    17cda <mbedtls_mpi_div_mpi+0x42a>
   17ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17cad:	00 00 00 
   17cb0:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17cb5:	4c 89 f2             	mov    %r14,%rdx
   17cb8:	48 89 de             	mov    %rbx,%rsi
   17cbb:	48 89 df             	mov    %rbx,%rdi
   17cbe:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   17cc5:	00 
   17cc6:	4c 01 e0             	add    %r12,%rax
   17cc9:	48 83 00 01          	addq   $0x1,(%rax)
   17ccd:	e8 1e f3 ff ff       	callq  16ff0 <add_sub_mpi>
   17cd2:	85 c0                	test   %eax,%eax
   17cd4:	0f 85 df 01 00 00    	jne    17eb9 <mbedtls_mpi_div_mpi+0x609>
   17cda:	4c 89 f6             	mov    %r14,%rsi
   17cdd:	48 89 df             	mov    %rbx,%rdi
   17ce0:	e8 6b ef ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   17ce5:	85 c0                	test   %eax,%eax
   17ce7:	79 c7                	jns    17cb0 <mbedtls_mpi_div_mpi+0x400>
   17ce9:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   17cf0:	00 
   17cf1:	49 89 d8             	mov    %rbx,%r8
   17cf4:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   17cf9:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
   17cfe:	48 85 f6             	test   %rsi,%rsi
   17d01:	0f 85 d7 03 00 00    	jne    180de <mbedtls_mpi_div_mpi+0x82e>
   17d07:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   17d0c:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   17d11:	48 83 e8 01          	sub    $0x1,%rax
   17d15:	48 83 e9 01          	sub    $0x1,%rcx
   17d19:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   17d1e:	48 39 c8             	cmp    %rcx,%rax
   17d21:	0f 86 de 02 00 00    	jbe    18005 <mbedtls_mpi_div_mpi+0x755>
   17d27:	48 89 c8             	mov    %rcx,%rax
   17d2a:	48 8d 14 cd 00 00 00 	lea    0x0(,%rcx,8),%rdx
   17d31:	00 
   17d32:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   17d37:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   17d3e:	00 
   17d3f:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   17d44:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   17d49:	48 83 e9 08          	sub    $0x8,%rcx
   17d4d:	44 89 64 24 5c       	mov    %r12d,0x5c(%rsp)
   17d52:	49 89 c4             	mov    %rax,%r12
   17d55:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
   17d5a:	48 89 d5             	mov    %rdx,%rbp
   17d5d:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)
   17d62:	48 89 cb             	mov    %rcx,%rbx
   17d65:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
   17d6a:	4d 89 c7             	mov    %r8,%r15
   17d6d:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
   17d72:	49 89 f5             	mov    %rsi,%r13
   17d75:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   17d7c:	00 
   17d7d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   17d82:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
   17d89:	00 
   17d8a:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
   17d91:	00 
   17d92:	49 89 cb             	mov    %rcx,%r11
   17d95:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   17d9c:	00 
   17d9d:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   17da2:	49 01 fb             	add    %rdi,%r11
   17da5:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   17daa:	4c 8d 44 39 f8       	lea    -0x8(%rcx,%rdi,1),%r8
   17daf:	4d 8d 14 19          	lea    (%r9,%rbx,1),%r10
   17db3:	49 8b 33             	mov    (%r11),%rsi
   17db6:	48 8b 14 28          	mov    (%rax,%rbp,1),%rdx
   17dba:	48 39 d6             	cmp    %rdx,%rsi
   17dbd:	0f 82 01 01 00 00    	jb     17ec4 <mbedtls_mpi_div_mpi+0x614>
   17dc3:	49 c7 02 ff ff ff ff 	movq   $0xffffffffffffffff,(%r10)
   17dca:	31 c0                	xor    %eax,%eax
   17dcc:	48 83 7c 24 30 01    	cmpq   $0x1,0x30(%rsp)
   17dd2:	74 0f                	je     17de3 <mbedtls_mpi_div_mpi+0x533>
   17dd4:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   17dd9:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   17dde:	48 8b 44 08 f0       	mov    -0x10(%rax,%rcx,1),%rax
   17de3:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   17dea:	00 
   17deb:	49 8b 00             	mov    (%r8),%rax
   17dee:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   17df5:	00 
   17df6:	49 8b 03             	mov    (%r11),%rax
   17df9:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   17e00:	00 
   17e01:	49 8b 02             	mov    (%r10),%rax
   17e04:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17e08:	49 89 12             	mov    %rdx,(%r10)
   17e0b:	eb 64                	jmp    17e71 <mbedtls_mpi_div_mpi+0x5c1>
   17e0d:	0f 1f 00             	nopl   (%rax)
   17e10:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
   17e17:	00 
   17e18:	31 c9                	xor    %ecx,%ecx
   17e1a:	4d 85 e4             	test   %r12,%r12
   17e1d:	74 05                	je     17e24 <mbedtls_mpi_div_mpi+0x574>
   17e1f:	48 8b 4c 2a f8       	mov    -0x8(%rdx,%rbp,1),%rcx
   17e24:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   17e2b:	00 
   17e2c:	4c 89 f6             	mov    %r14,%rsi
   17e2f:	4c 89 f7             	mov    %r14,%rdi
   17e32:	48 89 08             	mov    %rcx,(%rax)
   17e35:	48 8b 14 2a          	mov    (%rdx,%rbp,1),%rdx
   17e39:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17e3d:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   17e44:	00 
   17e45:	48 8b 14 18          	mov    (%rax,%rbx,1),%rdx
   17e49:	e8 32 f5 ff ff       	callq  17380 <mbedtls_mpi_mul_int>
   17e4e:	85 c0                	test   %eax,%eax
   17e50:	75 35                	jne    17e87 <mbedtls_mpi_div_mpi+0x5d7>
   17e52:	4c 89 ee             	mov    %r13,%rsi
   17e55:	4c 89 f7             	mov    %r14,%rdi
   17e58:	e8 f3 ed ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   17e5d:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
   17e64:	00 
   17e65:	49 8b 14 19          	mov    (%r9,%rbx,1),%rdx
   17e69:	85 c0                	test   %eax,%eax
   17e6b:	0f 8e c8 00 00 00    	jle    17f39 <mbedtls_mpi_div_mpi+0x689>
   17e71:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   17e75:	31 f6                	xor    %esi,%esi
   17e77:	4c 89 f7             	mov    %r14,%rdi
   17e7a:	49 89 04 19          	mov    %rax,(%r9,%rbx,1)
   17e7e:	e8 ed e8 ff ff       	callq  16770 <mbedtls_mpi_lset>
   17e83:	85 c0                	test   %eax,%eax
   17e85:	74 89                	je     17e10 <mbedtls_mpi_div_mpi+0x560>
   17e87:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
   17e8c:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   17e91:	4d 89 f8             	mov    %r15,%r8
   17e94:	41 89 c4             	mov    %eax,%r12d
   17e97:	e9 b6 fb ff ff       	jmpq   17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17e9c:	0f 1f 40 00          	nopl   0x0(%rax)
   17ea0:	41 bc f4 ff ff ff    	mov    $0xfffffff4,%r12d
   17ea6:	e9 e0 fb ff ff       	jmpq   17a8b <mbedtls_mpi_div_mpi+0x1db>
   17eab:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17eb2:	00 00 
   17eb4:	e9 7b fd ff ff       	jmpq   17c34 <mbedtls_mpi_div_mpi+0x384>
   17eb9:	49 89 d8             	mov    %rbx,%r8
   17ebc:	41 89 c4             	mov    %eax,%r12d
   17ebf:	e9 8e fb ff ff       	jmpq   17a52 <mbedtls_mpi_div_mpi+0x1a2>
   17ec4:	49 8b 38             	mov    (%r8),%rdi
   17ec7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17ece:	48 85 d2             	test   %rdx,%rdx
   17ed1:	74 5e                	je     17f31 <mbedtls_mpi_div_mpi+0x681>
   17ed3:	31 c9                	xor    %ecx,%ecx
   17ed5:	4c 89 8c 24 88 00 00 	mov    %r9,0x88(%rsp)
   17edc:	00 
   17edd:	4c 89 94 24 80 00 00 	mov    %r10,0x80(%rsp)
   17ee4:	00 
   17ee5:	4c 89 5c 24 78       	mov    %r11,0x78(%rsp)
   17eea:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   17eef:	e8 7c 53 00 00       	callq  1d270 <__udivti3>
   17ef4:	b9 00 00 00 00       	mov    $0x0,%ecx
   17ef9:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   17f00:	4c 8b 8c 24 88 00 00 	mov    0x88(%rsp),%r9
   17f07:	00 
   17f08:	48 89 d7             	mov    %rdx,%rdi
   17f0b:	48 39 c6             	cmp    %rax,%rsi
   17f0e:	48 89 c2             	mov    %rax,%rdx
   17f11:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17f18:	48 19 f9             	sbb    %rdi,%rcx
   17f1b:	4c 8b 5c 24 78       	mov    0x78(%rsp),%r11
   17f20:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   17f25:	48 0f 43 c2          	cmovae %rdx,%rax
   17f29:	4c 8b 94 24 80 00 00 	mov    0x80(%rsp),%r10
   17f30:	00 
   17f31:	49 89 02             	mov    %rax,(%r10)
   17f34:	e9 91 fe ff ff       	jmpq   17dca <mbedtls_mpi_div_mpi+0x51a>
   17f39:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   17f3e:	e8 3d f4 ff ff       	callq  17380 <mbedtls_mpi_mul_int>
   17f43:	85 c0                	test   %eax,%eax
   17f45:	0f 85 3c ff ff ff    	jne    17e87 <mbedtls_mpi_div_mpi+0x5d7>
   17f4b:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   17f52:	00 
   17f53:	4c 89 f7             	mov    %r14,%rdi
   17f56:	48 89 c6             	mov    %rax,%rsi
   17f59:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17f5e:	e8 cd ea ff ff       	callq  16a30 <mbedtls_mpi_shift_l>
   17f63:	85 c0                	test   %eax,%eax
   17f65:	0f 85 1c ff ff ff    	jne    17e87 <mbedtls_mpi_div_mpi+0x5d7>
   17f6b:	83 c9 ff             	or     $0xffffffff,%ecx
   17f6e:	4c 89 f2             	mov    %r14,%rdx
   17f71:	4c 89 fe             	mov    %r15,%rsi
   17f74:	4c 89 ff             	mov    %r15,%rdi
   17f77:	e8 74 f0 ff ff       	callq  16ff0 <add_sub_mpi>
   17f7c:	85 c0                	test   %eax,%eax
   17f7e:	0f 85 03 ff ff ff    	jne    17e87 <mbedtls_mpi_div_mpi+0x5d7>
   17f84:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17f89:	4c 89 ff             	mov    %r15,%rdi
   17f8c:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   17f93:	00 
   17f94:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   17f9b:	00 00 00 00 00 
   17fa0:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   17fa7:	01 00 00 00 
   17fab:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   17fb2:	00 01 00 00 00 
   17fb7:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
   17fbe:	00 
   17fbf:	e8 8c ec ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   17fc4:	85 c0                	test   %eax,%eax
   17fc6:	0f 88 38 01 00 00    	js     18104 <mbedtls_mpi_div_mpi+0x854>
   17fcc:	48 83 6c 24 30 01    	subq   $0x1,0x30(%rsp)
   17fd2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   17fd7:	48 83 eb 08          	sub    $0x8,%rbx
   17fdb:	49 39 c4             	cmp    %rax,%r12
   17fde:	0f 82 91 fd ff ff    	jb     17d75 <mbedtls_mpi_div_mpi+0x4c5>
   17fe4:	4d 89 f8             	mov    %r15,%r8
   17fe7:	44 8b 64 24 5c       	mov    0x5c(%rsp),%r12d
   17fec:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
   17ff1:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   17ff6:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   17ffb:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
   18000:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   18005:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   1800b:	74 2e                	je     1803b <mbedtls_mpi_div_mpi+0x78b>
   1800d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   18012:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   18017:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   1801c:	e8 df e5 ff ff       	callq  16600 <mbedtls_mpi_copy>
   18021:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   18026:	85 c0                	test   %eax,%eax
   18028:	0f 85 50 01 00 00    	jne    1817e <mbedtls_mpi_div_mpi+0x8ce>
   1802e:	8b 45 00             	mov    0x0(%rbp),%eax
   18031:	0f af 03             	imul   (%rbx),%eax
   18034:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   18039:	89 01                	mov    %eax,(%rcx)
   1803b:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   18040:	0f 84 0c fa ff ff    	je     17a52 <mbedtls_mpi_div_mpi+0x1a2>
   18046:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   1804d:	00 
   1804e:	48 85 f6             	test   %rsi,%rsi
   18051:	0f 85 06 01 00 00    	jne    1815d <mbedtls_mpi_div_mpi+0x8ad>
   18057:	48 8b 1c 24          	mov    (%rsp),%rbx
   1805b:	8b 45 00             	mov    0x0(%rbp),%eax
   1805e:	4c 89 c6             	mov    %r8,%rsi
   18061:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   18066:	48 89 df             	mov    %rbx,%rdi
   18069:	89 84 24 90 00 00 00 	mov    %eax,0x90(%rsp)
   18070:	e8 8b e5 ff ff       	callq  16600 <mbedtls_mpi_copy>
   18075:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   1807a:	85 c0                	test   %eax,%eax
   1807c:	0f 85 fc 00 00 00    	jne    1817e <mbedtls_mpi_div_mpi+0x8ce>
   18082:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   18089:	00 
   1808a:	4c 89 fe             	mov    %r15,%rsi
   1808d:	48 89 df             	mov    %rbx,%rdi
   18090:	4c 89 04 24          	mov    %r8,(%rsp)
   18094:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   1809b:	00 00 00 00 00 
   180a0:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   180a7:	01 00 00 00 
   180ab:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   180b2:	00 01 00 00 00 
   180b7:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
   180be:	00 
   180bf:	e8 8c eb ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   180c4:	4c 8b 04 24          	mov    (%rsp),%r8
   180c8:	85 c0                	test   %eax,%eax
   180ca:	0f 85 82 f9 ff ff    	jne    17a52 <mbedtls_mpi_div_mpi+0x1a2>
   180d0:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   180d6:	45 31 e4             	xor    %r12d,%r12d
   180d9:	e9 74 f9 ff ff       	jmpq   17a52 <mbedtls_mpi_div_mpi+0x1a2>
   180de:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   180e3:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   180e8:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   180ef:	00 
   180f0:	e8 4b 3a 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   180f5:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   180fa:	e9 08 fc ff ff       	jmpq   17d07 <mbedtls_mpi_div_mpi+0x457>
   180ff:	e8 6c c1 fe ff       	callq  4270 <__stack_chk_fail@plt>
   18104:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   18109:	4c 89 f7             	mov    %r14,%rdi
   1810c:	e8 ef e4 ff ff       	callq  16600 <mbedtls_mpi_copy>
   18111:	85 c0                	test   %eax,%eax
   18113:	0f 85 6e fd ff ff    	jne    17e87 <mbedtls_mpi_div_mpi+0x5d7>
   18119:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   1811e:	4c 89 f7             	mov    %r14,%rdi
   18121:	e8 0a e9 ff ff       	callq  16a30 <mbedtls_mpi_shift_l>
   18126:	85 c0                	test   %eax,%eax
   18128:	0f 85 59 fd ff ff    	jne    17e87 <mbedtls_mpi_div_mpi+0x5d7>
   1812e:	b9 01 00 00 00       	mov    $0x1,%ecx
   18133:	4c 89 f2             	mov    %r14,%rdx
   18136:	4c 89 fe             	mov    %r15,%rsi
   18139:	4c 89 ff             	mov    %r15,%rdi
   1813c:	e8 af ee ff ff       	callq  16ff0 <add_sub_mpi>
   18141:	85 c0                	test   %eax,%eax
   18143:	0f 85 3e fd ff ff    	jne    17e87 <mbedtls_mpi_div_mpi+0x5d7>
   18149:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   18150:	00 
   18151:	48 01 d8             	add    %rbx,%rax
   18154:	48 83 28 01          	subq   $0x1,(%rax)
   18158:	e9 6f fe ff ff       	jmpq   17fcc <mbedtls_mpi_div_mpi+0x71c>
   1815d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   18162:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   18169:	00 
   1816a:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   1816f:	e8 cc 39 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   18174:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   18179:	e9 d9 fe ff ff       	jmpq   18057 <mbedtls_mpi_div_mpi+0x7a7>
   1817e:	41 89 c4             	mov    %eax,%r12d
   18181:	e9 cc f8 ff ff       	jmpq   17a52 <mbedtls_mpi_div_mpi+0x1a2>
   18186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1818d:	00 00 00 

0000000000018190 <mbedtls_mpi_div_int>:
   18190:	f3 0f 1e fa          	endbr64 
   18194:	48 83 ec 38          	sub    $0x38,%rsp
   18198:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1819f:	00 00 
   181a1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   181a6:	31 c0                	xor    %eax,%eax
   181a8:	b8 01 00 00 00       	mov    $0x1,%eax
   181ad:	48 85 c9             	test   %rcx,%rcx
   181b0:	79 08                	jns    181ba <mbedtls_mpi_div_int+0x2a>
   181b2:	48 f7 d9             	neg    %rcx
   181b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   181ba:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   181bf:	48 89 e1             	mov    %rsp,%rcx
   181c2:	89 04 24             	mov    %eax,(%rsp)
   181c5:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   181ca:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   181d1:	00 00 
   181d3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   181d8:	e8 d3 f6 ff ff       	callq  178b0 <mbedtls_mpi_div_mpi>
   181dd:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   181e2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   181e9:	00 00 
   181eb:	75 05                	jne    181f2 <mbedtls_mpi_div_int+0x62>
   181ed:	48 83 c4 38          	add    $0x38,%rsp
   181f1:	c3                   	retq   
   181f2:	e8 79 c0 fe ff       	callq  4270 <__stack_chk_fail@plt>
   181f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   181fe:	00 00 

0000000000018200 <mbedtls_mpi_mod_mpi>:
   18200:	f3 0f 1e fa          	endbr64 
   18204:	41 56                	push   %r14
   18206:	49 89 f1             	mov    %rsi,%r9
   18209:	41 55                	push   %r13
   1820b:	41 54                	push   %r12
   1820d:	55                   	push   %rbp
   1820e:	48 89 d5             	mov    %rdx,%rbp
   18211:	53                   	push   %rbx
   18212:	48 89 fb             	mov    %rdi,%rbx
   18215:	48 89 d7             	mov    %rdx,%rdi
   18218:	48 83 ec 30          	sub    $0x30,%rsp
   1821c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18223:	00 00 
   18225:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1822a:	31 c0                	xor    %eax,%eax
   1822c:	49 89 e4             	mov    %rsp,%r12
   1822f:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   18234:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1823b:	00 00 
   1823d:	4c 89 e6             	mov    %r12,%rsi
   18240:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   18247:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1824e:	00 00 
   18250:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   18255:	e8 f6 e9 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1825a:	85 c0                	test   %eax,%eax
   1825c:	0f 88 c3 00 00 00    	js     18325 <mbedtls_mpi_mod_mpi+0x125>
   18262:	48 89 e9             	mov    %rbp,%rcx
   18265:	4c 89 ca             	mov    %r9,%rdx
   18268:	48 89 de             	mov    %rbx,%rsi
   1826b:	31 ff                	xor    %edi,%edi
   1826d:	e8 3e f6 ff ff       	callq  178b0 <mbedtls_mpi_div_mpi>
   18272:	41 89 c6             	mov    %eax,%r14d
   18275:	85 c0                	test   %eax,%eax
   18277:	74 22                	je     1829b <mbedtls_mpi_mod_mpi+0x9b>
   18279:	e9 82 00 00 00       	jmpq   18300 <mbedtls_mpi_mod_mpi+0x100>
   1827e:	66 90                	xchg   %ax,%ax
   18280:	b9 01 00 00 00       	mov    $0x1,%ecx
   18285:	48 89 ea             	mov    %rbp,%rdx
   18288:	48 89 de             	mov    %rbx,%rsi
   1828b:	48 89 df             	mov    %rbx,%rdi
   1828e:	e8 5d ed ff ff       	callq  16ff0 <add_sub_mpi>
   18293:	85 c0                	test   %eax,%eax
   18295:	0f 85 85 00 00 00    	jne    18320 <mbedtls_mpi_mod_mpi+0x120>
   1829b:	4c 89 e6             	mov    %r12,%rsi
   1829e:	48 89 df             	mov    %rbx,%rdi
   182a1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   182a8:	00 00 
   182aa:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   182b1:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   182b8:	00 00 
   182ba:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   182bf:	e8 8c e9 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   182c4:	85 c0                	test   %eax,%eax
   182c6:	78 b8                	js     18280 <mbedtls_mpi_mod_mpi+0x80>
   182c8:	eb 1d                	jmp    182e7 <mbedtls_mpi_mod_mpi+0xe7>
   182ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   182d0:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   182d5:	48 89 ea             	mov    %rbp,%rdx
   182d8:	48 89 de             	mov    %rbx,%rsi
   182db:	48 89 df             	mov    %rbx,%rdi
   182de:	e8 0d ed ff ff       	callq  16ff0 <add_sub_mpi>
   182e3:	85 c0                	test   %eax,%eax
   182e5:	75 39                	jne    18320 <mbedtls_mpi_mod_mpi+0x120>
   182e7:	48 89 ee             	mov    %rbp,%rsi
   182ea:	48 89 df             	mov    %rbx,%rdi
   182ed:	e8 5e e9 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   182f2:	85 c0                	test   %eax,%eax
   182f4:	79 da                	jns    182d0 <mbedtls_mpi_mod_mpi+0xd0>
   182f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   182fd:	00 00 00 
   18300:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   18305:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1830c:	00 00 
   1830e:	75 1d                	jne    1832d <mbedtls_mpi_mod_mpi+0x12d>
   18310:	48 83 c4 30          	add    $0x30,%rsp
   18314:	44 89 f0             	mov    %r14d,%eax
   18317:	5b                   	pop    %rbx
   18318:	5d                   	pop    %rbp
   18319:	41 5c                	pop    %r12
   1831b:	41 5d                	pop    %r13
   1831d:	41 5e                	pop    %r14
   1831f:	c3                   	retq   
   18320:	41 89 c6             	mov    %eax,%r14d
   18323:	eb db                	jmp    18300 <mbedtls_mpi_mod_mpi+0x100>
   18325:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
   1832b:	eb d3                	jmp    18300 <mbedtls_mpi_mod_mpi+0x100>
   1832d:	e8 3e bf fe ff       	callq  4270 <__stack_chk_fail@plt>
   18332:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   18339:	00 00 00 00 
   1833d:	0f 1f 00             	nopl   (%rax)

0000000000018340 <mbedtls_mpi_mod_int>:
   18340:	f3 0f 1e fa          	endbr64 
   18344:	49 89 d0             	mov    %rdx,%r8
   18347:	48 85 d2             	test   %rdx,%rdx
   1834a:	0f 84 8c 00 00 00    	je     183dc <mbedtls_mpi_mod_int+0x9c>
   18350:	0f 88 8c 00 00 00    	js     183e2 <mbedtls_mpi_mod_int+0xa2>
   18356:	48 83 fa 01          	cmp    $0x1,%rdx
   1835a:	74 64                	je     183c0 <mbedtls_mpi_mod_int+0x80>
   1835c:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   18360:	4d 85 c9             	test   %r9,%r9
   18363:	74 5b                	je     183c0 <mbedtls_mpi_mod_int+0x80>
   18365:	4c 8b 56 10          	mov    0x10(%rsi),%r10
   18369:	31 d2                	xor    %edx,%edx
   1836b:	49 83 f8 02          	cmp    $0x2,%r8
   1836f:	74 5f                	je     183d0 <mbedtls_mpi_mod_int+0x90>
   18371:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18378:	4b 8b 4c ca f8       	mov    -0x8(%r10,%r9,8),%rcx
   1837d:	48 c1 e2 20          	shl    $0x20,%rdx
   18381:	48 89 c8             	mov    %rcx,%rax
   18384:	48 c1 e8 20          	shr    $0x20,%rax
   18388:	48 09 d0             	or     %rdx,%rax
   1838b:	31 d2                	xor    %edx,%edx
   1838d:	49 f7 f0             	div    %r8
   18390:	89 c8                	mov    %ecx,%eax
   18392:	48 c1 e2 20          	shl    $0x20,%rdx
   18396:	48 09 d0             	or     %rdx,%rax
   18399:	31 d2                	xor    %edx,%edx
   1839b:	49 f7 f0             	div    %r8
   1839e:	49 83 e9 01          	sub    $0x1,%r9
   183a2:	75 d4                	jne    18378 <mbedtls_mpi_mod_int+0x38>
   183a4:	8b 06                	mov    (%rsi),%eax
   183a6:	85 c0                	test   %eax,%eax
   183a8:	79 0a                	jns    183b4 <mbedtls_mpi_mod_int+0x74>
   183aa:	49 29 d0             	sub    %rdx,%r8
   183ad:	48 85 d2             	test   %rdx,%rdx
   183b0:	49 0f 45 d0          	cmovne %r8,%rdx
   183b4:	48 89 17             	mov    %rdx,(%rdi)
   183b7:	31 c0                	xor    %eax,%eax
   183b9:	c3                   	retq   
   183ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   183c0:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   183c7:	31 c0                	xor    %eax,%eax
   183c9:	c3                   	retq   
   183ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   183d0:	49 8b 02             	mov    (%r10),%rax
   183d3:	83 e0 01             	and    $0x1,%eax
   183d6:	48 89 07             	mov    %rax,(%rdi)
   183d9:	31 c0                	xor    %eax,%eax
   183db:	c3                   	retq   
   183dc:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
   183e1:	c3                   	retq   
   183e2:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   183e7:	c3                   	retq   
   183e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   183ef:	00 

00000000000183f0 <mbedtls_mpi_write_string>:
   183f0:	f3 0f 1e fa          	endbr64 
   183f4:	41 57                	push   %r15
   183f6:	41 56                	push   %r14
   183f8:	41 55                	push   %r13
   183fa:	4c 63 ee             	movslq %esi,%r13
   183fd:	41 54                	push   %r12
   183ff:	55                   	push   %rbp
   18400:	53                   	push   %rbx
   18401:	48 83 ec 78          	sub    $0x78,%rsp
   18405:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1840a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18411:	00 00 
   18413:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   18418:	31 c0                	xor    %eax,%eax
   1841a:	41 8d 45 fe          	lea    -0x2(%r13),%eax
   1841e:	83 f8 0e             	cmp    $0xe,%eax
   18421:	0f 87 48 02 00 00    	ja     1866f <mbedtls_mpi_write_string+0x27f>
   18427:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1842b:	48 89 fd             	mov    %rdi,%rbp
   1842e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   18432:	48 89 d3             	mov    %rdx,%rbx
   18435:	49 89 ce             	mov    %rcx,%r14
   18438:	e8 e3 32 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   1843d:	48 89 c2             	mov    %rax,%rdx
   18440:	48 d1 ea             	shr    %rdx
   18443:	41 83 fd 03          	cmp    $0x3,%r13d
   18447:	48 0f 4f c2          	cmovg  %rdx,%rax
   1844b:	48 89 c2             	mov    %rax,%rdx
   1844e:	48 d1 ea             	shr    %rdx
   18451:	41 83 fd 10          	cmp    $0x10,%r13d
   18455:	48 0f 44 c2          	cmove  %rdx,%rax
   18459:	48 83 c0 04          	add    $0x4,%rax
   1845d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   18461:	4c 39 f0             	cmp    %r14,%rax
   18464:	0f 87 0f 02 00 00    	ja     18679 <mbedtls_mpi_write_string+0x289>
   1846a:	83 7d 00 ff          	cmpl   $0xffffffff,0x0(%rbp)
   1846e:	49 89 df             	mov    %rbx,%r15
   18471:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   18478:	00 
   18479:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   18480:	00 00 
   18482:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   18489:	00 00 
   1848b:	75 0b                	jne    18498 <mbedtls_mpi_write_string+0xa8>
   1848d:	c6 03 2d             	movb   $0x2d,(%rbx)
   18490:	4c 8d 7b 01          	lea    0x1(%rbx),%r15
   18494:	49 83 ee 01          	sub    $0x1,%r14
   18498:	41 83 fd 10          	cmp    $0x10,%r13d
   1849c:	0f 85 ee 00 00 00    	jne    18590 <mbedtls_mpi_write_string+0x1a0>
   184a2:	4c 8b 5d 08          	mov    0x8(%rbp),%r11
   184a6:	4d 85 db             	test   %r11,%r11
   184a9:	0f 84 8b 00 00 00    	je     1853a <mbedtls_mpi_write_string+0x14a>
   184af:	4e 8d 0c dd f8 ff ff 	lea    -0x8(,%r11,8),%r9
   184b6:	ff 
   184b7:	45 31 ed             	xor    %r13d,%r13d
   184ba:	48 8d 3d 9f e3 00 00 	lea    0xe39f(%rip),%rdi        # 26860 <K+0x280>
   184c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   184c8:	be 07 00 00 00       	mov    $0x7,%esi
   184cd:	4d 8d 53 01          	lea    0x1(%r11),%r10
   184d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   184d8:	48 8b 45 10          	mov    0x10(%rbp),%rax
   184dc:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
   184e3:	4a 8b 04 08          	mov    (%rax,%r9,1),%rax
   184e7:	48 d3 e8             	shr    %cl,%rax
   184ea:	89 c2                	mov    %eax,%edx
   184ec:	81 e2 ff 00 00 00    	and    $0xff,%edx
   184f2:	75 0f                	jne    18503 <mbedtls_mpi_write_string+0x113>
   184f4:	4d 85 ed             	test   %r13,%r13
   184f7:	75 0a                	jne    18503 <mbedtls_mpi_write_string+0x113>
   184f9:	49 8d 0c 32          	lea    (%r10,%rsi,1),%rcx
   184fd:	48 83 f9 02          	cmp    $0x2,%rcx
   18501:	75 23                	jne    18526 <mbedtls_mpi_write_string+0x136>
   18503:	c1 fa 04             	sar    $0x4,%edx
   18506:	83 e0 0f             	and    $0xf,%eax
   18509:	49 83 c7 02          	add    $0x2,%r15
   1850d:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   18513:	48 63 d2             	movslq %edx,%rdx
   18516:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   1851a:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
   1851e:	41 88 47 ff          	mov    %al,-0x1(%r15)
   18522:	41 88 57 fe          	mov    %dl,-0x2(%r15)
   18526:	48 83 ee 01          	sub    $0x1,%rsi
   1852a:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
   1852e:	75 a8                	jne    184d8 <mbedtls_mpi_write_string+0xe8>
   18530:	49 83 e9 08          	sub    $0x8,%r9
   18534:	49 83 eb 01          	sub    $0x1,%r11
   18538:	75 8e                	jne    184c8 <mbedtls_mpi_write_string+0xd8>
   1853a:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   1853f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18544:	4d 8d 47 01          	lea    0x1(%r15),%r8
   18548:	41 c6 07 00          	movb   $0x0,(%r15)
   1854c:	49 29 d8             	sub    %rbx,%r8
   1854f:	4c 89 00             	mov    %r8,(%rax)
   18552:	31 c0                	xor    %eax,%eax
   18554:	4c 89 e7             	mov    %r12,%rdi
   18557:	89 44 24 08          	mov    %eax,0x8(%rsp)
   1855b:	e8 10 de ff ff       	callq  16370 <mbedtls_mpi_free>
   18560:	8b 44 24 08          	mov    0x8(%rsp),%eax
   18564:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   18569:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   18570:	00 00 
   18572:	0f 85 13 01 00 00    	jne    1868b <mbedtls_mpi_write_string+0x29b>
   18578:	48 83 c4 78          	add    $0x78,%rsp
   1857c:	5b                   	pop    %rbx
   1857d:	5d                   	pop    %rbp
   1857e:	41 5c                	pop    %r12
   18580:	41 5d                	pop    %r13
   18582:	41 5e                	pop    %r14
   18584:	41 5f                	pop    %r15
   18586:	c3                   	retq   
   18587:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1858e:	00 00 
   18590:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   18595:	48 89 ee             	mov    %rbp,%rsi
   18598:	4c 89 e7             	mov    %r12,%rdi
   1859b:	e8 60 e0 ff ff       	callq  16600 <mbedtls_mpi_copy>
   185a0:	85 c0                	test   %eax,%eax
   185a2:	75 b0                	jne    18554 <mbedtls_mpi_write_string+0x164>
   185a4:	83 7c 24 20 ff       	cmpl   $0xffffffff,0x20(%rsp)
   185a9:	75 08                	jne    185b3 <mbedtls_mpi_write_string+0x1c3>
   185ab:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   185b2:	00 
   185b3:	4d 01 fe             	add    %r15,%r14
   185b6:	4c 89 f5             	mov    %r14,%rbp
   185b9:	e9 85 00 00 00       	jmpq   18643 <mbedtls_mpi_write_string+0x253>
   185be:	66 90                	xchg   %ax,%ax
   185c0:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   185c5:	4c 89 ea             	mov    %r13,%rdx
   185c8:	4c 89 e6             	mov    %r12,%rsi
   185cb:	e8 70 fd ff ff       	callq  18340 <mbedtls_mpi_mod_int>
   185d0:	85 c0                	test   %eax,%eax
   185d2:	75 80                	jne    18554 <mbedtls_mpi_write_string+0x164>
   185d4:	31 f6                	xor    %esi,%esi
   185d6:	4c 89 e9             	mov    %r13,%rcx
   185d9:	4c 89 e2             	mov    %r12,%rdx
   185dc:	4c 89 e7             	mov    %r12,%rdi
   185df:	e8 ac fb ff ff       	callq  18190 <mbedtls_mpi_div_int>
   185e4:	85 c0                	test   %eax,%eax
   185e6:	0f 85 68 ff ff ff    	jne    18554 <mbedtls_mpi_write_string+0x164>
   185ec:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   185f1:	48 83 ed 01          	sub    $0x1,%rbp
   185f5:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   185fa:	4c 89 e7             	mov    %r12,%rdi
   185fd:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   18604:	00 00 
   18606:	48 83 fa 09          	cmp    $0x9,%rdx
   1860a:	8d 4a 30             	lea    0x30(%rdx),%ecx
   1860d:	8d 42 37             	lea    0x37(%rdx),%eax
   18610:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   18617:	00 
   18618:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   1861f:	00 00 
   18621:	0f 46 c1             	cmovbe %ecx,%eax
   18624:	88 45 00             	mov    %al,0x0(%rbp)
   18627:	4c 89 f0             	mov    %r14,%rax
   1862a:	48 29 e8             	sub    %rbp,%rax
   1862d:	49 89 c3             	mov    %rax,%r11
   18630:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   18635:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1863a:	e8 11 e6 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1863f:	85 c0                	test   %eax,%eax
   18641:	74 13                	je     18656 <mbedtls_mpi_write_string+0x266>
   18643:	4c 39 fd             	cmp    %r15,%rbp
   18646:	0f 85 74 ff ff ff    	jne    185c0 <mbedtls_mpi_write_string+0x1d0>
   1864c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   18651:	e9 fe fe ff ff       	jmpq   18554 <mbedtls_mpi_write_string+0x164>
   18656:	4d 89 de             	mov    %r11,%r14
   18659:	4c 89 ff             	mov    %r15,%rdi
   1865c:	4c 89 da             	mov    %r11,%rdx
   1865f:	48 89 ee             	mov    %rbp,%rsi
   18662:	e8 f9 bc fe ff       	callq  4360 <memmove@plt>
   18667:	4d 01 f7             	add    %r14,%r15
   1866a:	e9 d0 fe ff ff       	jmpq   1853f <mbedtls_mpi_write_string+0x14f>
   1866f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18674:	e9 eb fe ff ff       	jmpq   18564 <mbedtls_mpi_write_string+0x174>
   18679:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1867e:	48 89 03             	mov    %rax,(%rbx)
   18681:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   18686:	e9 d9 fe ff ff       	jmpq   18564 <mbedtls_mpi_write_string+0x174>
   1868b:	e8 e0 bb fe ff       	callq  4270 <__stack_chk_fail@plt>

0000000000018690 <mbedtls_mpi_write_file>:
   18690:	f3 0f 1e fa          	endbr64 
   18694:	41 57                	push   %r15
   18696:	41 56                	push   %r14
   18698:	41 55                	push   %r13
   1869a:	41 54                	push   %r12
   1869c:	55                   	push   %rbp
   1869d:	53                   	push   %rbx
   1869e:	48 81 ec d8 09 00 00 	sub    $0x9d8,%rsp
   186a5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   186ac:	00 00 
   186ae:	48 89 84 24 c8 09 00 	mov    %rax,0x9c8(%rsp)
   186b5:	00 
   186b6:	31 c0                	xor    %eax,%eax
   186b8:	8d 42 fe             	lea    -0x2(%rdx),%eax
   186bb:	83 f8 0e             	cmp    $0xe,%eax
   186be:	0f 87 3c 01 00 00    	ja     18800 <mbedtls_mpi_write_file+0x170>
   186c4:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   186c9:	31 c0                	xor    %eax,%eax
   186cb:	49 89 fe             	mov    %rdi,%r14
   186ce:	49 89 cc             	mov    %rcx,%r12
   186d1:	48 89 ef             	mov    %rbp,%rdi
   186d4:	b9 36 01 00 00       	mov    $0x136,%ecx
   186d9:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   186de:	49 89 f1             	mov    %rsi,%r9
   186e1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   186e4:	89 d6                	mov    %edx,%esi
   186e6:	b9 b2 09 00 00       	mov    $0x9b2,%ecx
   186eb:	48 89 ea             	mov    %rbp,%rdx
   186ee:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   186f4:	4c 89 cf             	mov    %r9,%rdi
   186f7:	e8 f4 fc ff ff       	callq  183f0 <mbedtls_mpi_write_string>
   186fc:	41 89 c5             	mov    %eax,%r13d
   186ff:	85 c0                	test   %eax,%eax
   18701:	0f 85 91 00 00 00    	jne    18798 <mbedtls_mpi_write_file+0x108>
   18707:	4d 85 f6             	test   %r14,%r14
   1870a:	0f 84 b0 00 00 00    	je     187c0 <mbedtls_mpi_write_file+0x130>
   18710:	4c 89 f7             	mov    %r14,%rdi
   18713:	e8 48 bb fe ff       	callq  4260 <strlen@plt>
   18718:	49 89 c7             	mov    %rax,%r15
   1871b:	48 89 eb             	mov    %rbp,%rbx
   1871e:	8b 13                	mov    (%rbx),%edx
   18720:	48 83 c3 04          	add    $0x4,%rbx
   18724:	8d 82 ff fe fe fe    	lea    -0x1010101(%rdx),%eax
   1872a:	f7 d2                	not    %edx
   1872c:	21 d0                	and    %edx,%eax
   1872e:	25 80 80 80 80       	and    $0x80808080,%eax
   18733:	74 e9                	je     1871e <mbedtls_mpi_write_file+0x8e>
   18735:	89 c2                	mov    %eax,%edx
   18737:	c1 ea 10             	shr    $0x10,%edx
   1873a:	a9 80 80 00 00       	test   $0x8080,%eax
   1873f:	0f 44 c2             	cmove  %edx,%eax
   18742:	48 8d 53 02          	lea    0x2(%rbx),%rdx
   18746:	48 0f 44 da          	cmove  %rdx,%rbx
   1874a:	89 c1                	mov    %eax,%ecx
   1874c:	00 c1                	add    %al,%cl
   1874e:	48 83 db 03          	sbb    $0x3,%rbx
   18752:	48 29 eb             	sub    %rbp,%rbx
   18755:	c6 44 1c 10 0d       	movb   $0xd,0x10(%rsp,%rbx,1)
   1875a:	c6 44 1c 11 0a       	movb   $0xa,0x11(%rsp,%rbx,1)
   1875f:	4d 85 e4             	test   %r12,%r12
   18762:	74 6c                	je     187d0 <mbedtls_mpi_write_file+0x140>
   18764:	4c 89 e1             	mov    %r12,%rcx
   18767:	4c 89 fa             	mov    %r15,%rdx
   1876a:	be 01 00 00 00       	mov    $0x1,%esi
   1876f:	4c 89 f7             	mov    %r14,%rdi
   18772:	e8 19 bc fe ff       	callq  4390 <fwrite@plt>
   18777:	4c 39 f8             	cmp    %r15,%rax
   1877a:	75 74                	jne    187f0 <mbedtls_mpi_write_file+0x160>
   1877c:	48 83 c3 02          	add    $0x2,%rbx
   18780:	4c 89 e1             	mov    %r12,%rcx
   18783:	be 01 00 00 00       	mov    $0x1,%esi
   18788:	48 89 ef             	mov    %rbp,%rdi
   1878b:	48 89 da             	mov    %rbx,%rdx
   1878e:	e8 fd bb fe ff       	callq  4390 <fwrite@plt>
   18793:	48 39 d8             	cmp    %rbx,%rax
   18796:	75 58                	jne    187f0 <mbedtls_mpi_write_file+0x160>
   18798:	48 8b 84 24 c8 09 00 	mov    0x9c8(%rsp),%rax
   1879f:	00 
   187a0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   187a7:	00 00 
   187a9:	75 5d                	jne    18808 <mbedtls_mpi_write_file+0x178>
   187ab:	48 81 c4 d8 09 00 00 	add    $0x9d8,%rsp
   187b2:	44 89 e8             	mov    %r13d,%eax
   187b5:	5b                   	pop    %rbx
   187b6:	5d                   	pop    %rbp
   187b7:	41 5c                	pop    %r12
   187b9:	41 5d                	pop    %r13
   187bb:	41 5e                	pop    %r14
   187bd:	41 5f                	pop    %r15
   187bf:	c3                   	retq   
   187c0:	45 31 ff             	xor    %r15d,%r15d
   187c3:	4c 8d 35 fc 58 00 00 	lea    0x58fc(%rip),%r14        # 1e0c6 <_IO_stdin_used+0xc6>
   187ca:	e9 4c ff ff ff       	jmpq   1871b <mbedtls_mpi_write_file+0x8b>
   187cf:	90                   	nop
   187d0:	48 89 e9             	mov    %rbp,%rcx
   187d3:	4c 89 f2             	mov    %r14,%rdx
   187d6:	48 8d 35 94 e0 00 00 	lea    0xe094(%rip),%rsi        # 26871 <K+0x291>
   187dd:	31 c0                	xor    %eax,%eax
   187df:	bf 01 00 00 00       	mov    $0x1,%edi
   187e4:	e8 67 bb fe ff       	callq  4350 <__printf_chk@plt>
   187e9:	eb ad                	jmp    18798 <mbedtls_mpi_write_file+0x108>
   187eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   187f0:	41 bd fe ff ff ff    	mov    $0xfffffffe,%r13d
   187f6:	eb a0                	jmp    18798 <mbedtls_mpi_write_file+0x108>
   187f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   187ff:	00 
   18800:	41 bd fc ff ff ff    	mov    $0xfffffffc,%r13d
   18806:	eb 90                	jmp    18798 <mbedtls_mpi_write_file+0x108>
   18808:	e8 63 ba fe ff       	callq  4270 <__stack_chk_fail@plt>
   1880d:	0f 1f 00             	nopl   (%rax)

0000000000018810 <mpi_check_small_factors.part.0>:
   18810:	41 55                	push   %r13
   18812:	41 54                	push   %r12
   18814:	41 bc 03 00 00 00    	mov    $0x3,%r12d
   1881a:	55                   	push   %rbp
   1881b:	48 89 fd             	mov    %rdi,%rbp
   1881e:	53                   	push   %rbx
   1881f:	48 8d 1d de e4 00 00 	lea    0xe4de(%rip),%rbx        # 26d04 <small_prime+0x4>
   18826:	48 83 ec 18          	sub    $0x18,%rsp
   1882a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18831:	00 00 
   18833:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18838:	31 c0                	xor    %eax,%eax
   1883a:	49 89 e5             	mov    %rsp,%r13
   1883d:	eb 26                	jmp    18865 <mpi_check_small_factors.part.0+0x55>
   1883f:	90                   	nop
   18840:	4c 89 e2             	mov    %r12,%rdx
   18843:	48 89 ee             	mov    %rbp,%rsi
   18846:	4c 89 ef             	mov    %r13,%rdi
   18849:	e8 f2 fa ff ff       	callq  18340 <mbedtls_mpi_mod_int>
   1884e:	85 c0                	test   %eax,%eax
   18850:	75 27                	jne    18879 <mpi_check_small_factors.part.0+0x69>
   18852:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   18857:	74 3f                	je     18898 <mpi_check_small_factors.part.0+0x88>
   18859:	4c 63 23             	movslq (%rbx),%r12
   1885c:	48 83 c3 04          	add    $0x4,%rbx
   18860:	45 85 e4             	test   %r12d,%r12d
   18863:	7e 14                	jle    18879 <mpi_check_small_factors.part.0+0x69>
   18865:	4c 89 e6             	mov    %r12,%rsi
   18868:	48 89 ef             	mov    %rbp,%rdi
   1886b:	e8 d0 e4 ff ff       	callq  16d40 <mbedtls_mpi_cmp_int>
   18870:	85 c0                	test   %eax,%eax
   18872:	7f cc                	jg     18840 <mpi_check_small_factors.part.0+0x30>
   18874:	b8 01 00 00 00       	mov    $0x1,%eax
   18879:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1887e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   18885:	00 00 
   18887:	75 16                	jne    1889f <mpi_check_small_factors.part.0+0x8f>
   18889:	48 83 c4 18          	add    $0x18,%rsp
   1888d:	5b                   	pop    %rbx
   1888e:	5d                   	pop    %rbp
   1888f:	41 5c                	pop    %r12
   18891:	41 5d                	pop    %r13
   18893:	c3                   	retq   
   18894:	0f 1f 40 00          	nopl   0x0(%rax)
   18898:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1889d:	eb da                	jmp    18879 <mpi_check_small_factors.part.0+0x69>
   1889f:	e8 cc b9 fe ff       	callq  4270 <__stack_chk_fail@plt>
   188a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   188ab:	00 00 00 00 
   188af:	90                   	nop

00000000000188b0 <mbedtls_mpi_exp_mod>:
   188b0:	f3 0f 1e fa          	endbr64 
   188b4:	41 57                	push   %r15
   188b6:	41 56                	push   %r14
   188b8:	41 55                	push   %r13
   188ba:	49 89 d5             	mov    %rdx,%r13
   188bd:	41 54                	push   %r12
   188bf:	55                   	push   %rbp
   188c0:	48 89 cd             	mov    %rcx,%rbp
   188c3:	53                   	push   %rbx
   188c4:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
   188cb:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   188d0:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
   188d7:	00 
   188d8:	48 89 cf             	mov    %rcx,%rdi
   188db:	4c 8d b4 24 30 01 00 	lea    0x130(%rsp),%r14
   188e2:	00 
   188e3:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   188e8:	4c 89 fe             	mov    %r15,%rsi
   188eb:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   188f0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   188f7:	00 00 
   188f9:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
   18900:	00 
   18901:	31 c0                	xor    %eax,%eax
   18903:	4c 89 b4 24 20 01 00 	mov    %r14,0x120(%rsp)
   1890a:	00 
   1890b:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   18912:	00 00 00 00 00 
   18917:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   1891e:	01 00 00 00 
   18922:	48 c7 84 24 18 01 00 	movq   $0x1,0x118(%rsp)
   18929:	00 01 00 00 00 
   1892e:	e8 1d e3 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   18933:	85 c0                	test   %eax,%eax
   18935:	0f 8e b5 05 00 00    	jle    18ef0 <mbedtls_mpi_exp_mod+0x640>
   1893b:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1893f:	48 8b 00             	mov    (%rax),%rax
   18942:	83 e0 01             	and    $0x1,%eax
   18945:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1894a:	49 89 c4             	mov    %rax,%r12
   1894d:	0f 84 9d 05 00 00    	je     18ef0 <mbedtls_mpi_exp_mod+0x640>
   18953:	4c 89 fe             	mov    %r15,%rsi
   18956:	4c 89 ef             	mov    %r13,%rdi
   18959:	e8 f2 e2 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1895e:	85 c0                	test   %eax,%eax
   18960:	0f 88 8a 05 00 00    	js     18ef0 <mbedtls_mpi_exp_mod+0x640>
   18966:	49 8b 75 08          	mov    0x8(%r13),%rsi
   1896a:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   1896e:	e8 ad 2d 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   18973:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
   18979:	0f 87 71 05 00 00    	ja     18ef0 <mbedtls_mpi_exp_mod+0x640>
   1897f:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   18983:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   18987:	e8 94 2d 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   1898c:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
   18992:	0f 87 58 05 00 00    	ja     18ef0 <mbedtls_mpi_exp_mod+0x640>
   18998:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1899c:	bb 02 00 00 00       	mov    $0x2,%ebx
   189a1:	e8 ba 35 00 00       	callq  1bf60 <mbedtls_mpi_core_montmul_init>
   189a6:	b9 0c 00 00 00       	mov    $0xc,%ecx
   189ab:	4c 89 f7             	mov    %r14,%rdi
   189ae:	49 8b 75 08          	mov    0x8(%r13),%rsi
   189b2:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   189b7:	31 c0                	xor    %eax,%eax
   189b9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   189bc:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   189c0:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   189c7:	01 00 00 00 
   189cb:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   189d2:	00 00 00 00 00 
   189d7:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   189de:	00 00 00 00 00 
   189e3:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   189ea:	01 00 00 00 
   189ee:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   189f5:	00 00 00 00 00 
   189fa:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   18a01:	00 00 00 00 00 
   18a06:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   18a0d:	01 00 00 00 
   18a11:	48 c7 84 24 18 01 00 	movq   $0x0,0x118(%rsp)
   18a18:	00 00 00 00 00 
   18a1d:	48 c7 84 24 20 01 00 	movq   $0x0,0x120(%rsp)
   18a24:	00 00 00 00 00 
   18a29:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   18a30:	01 00 00 00 
   18a34:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   18a3b:	00 00 00 00 00 
   18a40:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   18a47:	00 00 00 00 00 
   18a4c:	e8 cf 2c 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   18a51:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   18a56:	4c 89 f7             	mov    %r14,%rdi
   18a59:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   18a60:	01 00 00 00 
   18a64:	48 c7 84 24 38 01 00 	movq   $0x0,0x138(%rsp)
   18a6b:	00 00 00 00 00 
   18a70:	48 83 f8 17          	cmp    $0x17,%rax
   18a74:	48 c7 84 24 40 01 00 	movq   $0x0,0x140(%rsp)
   18a7b:	00 00 00 00 00 
   18a80:	49 0f 46 dc          	cmovbe %r12,%rbx
   18a84:	48 83 f8 18          	cmp    $0x18,%rax
   18a88:	19 d2                	sbb    %edx,%edx
   18a8a:	83 c2 02             	add    $0x2,%edx
   18a8d:	48 83 f8 18          	cmp    $0x18,%rax
   18a91:	4d 19 e4             	sbb    %r12,%r12
   18a94:	89 54 24 58          	mov    %edx,0x58(%rsp)
   18a98:	e8 63 db ff ff       	callq  16600 <mbedtls_mpi_copy>
   18a9d:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18aa1:	4c 89 f7             	mov    %r14,%rdi
   18aa4:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
   18aa8:	49 83 c4 04          	add    $0x4,%r12
   18aac:	48 8d 70 01          	lea    0x1(%rax),%rsi
   18ab0:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   18ab5:	e8 16 d9 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   18aba:	89 04 24             	mov    %eax,(%rsp)
   18abd:	85 c0                	test   %eax,%eax
   18abf:	0f 84 bb 00 00 00    	je     18b80 <mbedtls_mpi_exp_mod+0x2d0>
   18ac5:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   18acc:	00 
   18acd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18ad2:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   18ad9:	00 
   18ada:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18adf:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18ae6:	00 
   18ae7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18aec:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
   18af0:	49 8d 2c c6          	lea    (%r14,%rax,8),%rbp
   18af4:	48 89 ef             	mov    %rbp,%rdi
   18af7:	48 83 c3 01          	add    $0x1,%rbx
   18afb:	48 83 c5 18          	add    $0x18,%rbp
   18aff:	e8 6c d8 ff ff       	callq  16370 <mbedtls_mpi_free>
   18b04:	4c 39 e3             	cmp    %r12,%rbx
   18b07:	72 eb                	jb     18af4 <mbedtls_mpi_exp_mod+0x244>
   18b09:	4c 89 f7             	mov    %r14,%rdi
   18b0c:	e8 5f d8 ff ff       	callq  16370 <mbedtls_mpi_free>
   18b11:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18b16:	e8 55 d8 ff ff       	callq  16370 <mbedtls_mpi_free>
   18b1b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   18b20:	e8 4b d8 ff ff       	callq  16370 <mbedtls_mpi_free>
   18b25:	4c 89 ff             	mov    %r15,%rdi
   18b28:	e8 43 d8 ff ff       	callq  16370 <mbedtls_mpi_free>
   18b2d:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18b32:	e8 39 d8 ff ff       	callq  16370 <mbedtls_mpi_free>
   18b37:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18b3c:	48 85 c0             	test   %rax,%rax
   18b3f:	0f 84 8b 00 00 00    	je     18bd0 <mbedtls_mpi_exp_mod+0x320>
   18b45:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   18b4a:	0f 84 80 00 00 00    	je     18bd0 <mbedtls_mpi_exp_mod+0x320>
   18b50:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
   18b57:	00 
   18b58:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   18b5f:	00 00 
   18b61:	0f 85 de 07 00 00    	jne    19345 <mbedtls_mpi_exp_mod+0xa95>
   18b67:	8b 04 24             	mov    (%rsp),%eax
   18b6a:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
   18b71:	5b                   	pop    %rbx
   18b72:	5d                   	pop    %rbp
   18b73:	41 5c                	pop    %r12
   18b75:	41 5d                	pop    %r13
   18b77:	41 5e                	pop    %r14
   18b79:	41 5f                	pop    %r15
   18b7b:	c3                   	retq   
   18b7c:	0f 1f 40 00          	nopl   0x0(%rax)
   18b80:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   18b85:	48 8d bc 24 48 01 00 	lea    0x148(%rsp),%rdi
   18b8c:	00 
   18b8d:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   18b92:	e8 39 d8 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   18b97:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   18b9c:	85 c0                	test   %eax,%eax
   18b9e:	89 04 24             	mov    %eax,(%rsp)
   18ba1:	74 45                	je     18be8 <mbedtls_mpi_exp_mod+0x338>
   18ba3:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   18baa:	00 
   18bab:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18bb0:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18bb7:	00 
   18bb8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18bbd:	4c 39 e3             	cmp    %r12,%rbx
   18bc0:	0f 83 43 ff ff ff    	jae    18b09 <mbedtls_mpi_exp_mod+0x259>
   18bc6:	e9 21 ff ff ff       	jmpq   18aec <mbedtls_mpi_exp_mod+0x23c>
   18bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18bd0:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
   18bd7:	00 
   18bd8:	e8 93 d7 ff ff       	callq  16370 <mbedtls_mpi_free>
   18bdd:	e9 6e ff ff ff       	jmpq   18b50 <mbedtls_mpi_exp_mod+0x2a0>
   18be2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18be8:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   18bef:	00 
   18bf0:	48 01 f6             	add    %rsi,%rsi
   18bf3:	48 89 c7             	mov    %rax,%rdi
   18bf6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18bfb:	e8 d0 d7 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   18c00:	89 04 24             	mov    %eax,(%rsp)
   18c03:	85 c0                	test   %eax,%eax
   18c05:	0f 85 2d 02 00 00    	jne    18e38 <mbedtls_mpi_exp_mod+0x588>
   18c0b:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   18c10:	8b 00                	mov    (%rax),%eax
   18c12:	89 44 24 64          	mov    %eax,0x64(%rsp)
   18c16:	83 f8 ff             	cmp    $0xffffffff,%eax
   18c19:	0f 84 fe 02 00 00    	je     18f1d <mbedtls_mpi_exp_mod+0x66d>
   18c1f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18c24:	48 85 c0             	test   %rax,%rax
   18c27:	0f 84 23 02 00 00    	je     18e50 <mbedtls_mpi_exp_mod+0x5a0>
   18c2d:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   18c32:	0f 84 18 02 00 00    	je     18e50 <mbedtls_mpi_exp_mod+0x5a0>
   18c38:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18c3d:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   18c41:	48 8b 40 10          	mov    0x10(%rax),%rax
   18c45:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   18c4c:	00 
   18c4d:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18c51:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   18c58:	00 
   18c59:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   18c5e:	48 89 ee             	mov    %rbp,%rsi
   18c61:	e8 ea df ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   18c66:	85 c0                	test   %eax,%eax
   18c68:	0f 88 aa 01 00 00    	js     18e18 <mbedtls_mpi_exp_mod+0x568>
   18c6e:	48 89 fe             	mov    %rdi,%rsi
   18c71:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18c76:	48 89 ea             	mov    %rbp,%rdx
   18c79:	e8 82 f5 ff ff       	callq  18200 <mbedtls_mpi_mod_mpi>
   18c7e:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18c85:	00 
   18c86:	89 04 24             	mov    %eax,(%rsp)
   18c89:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18c8e:	85 c0                	test   %eax,%eax
   18c90:	0f 85 27 ff ff ff    	jne    18bbd <mbedtls_mpi_exp_mod+0x30d>
   18c96:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18c9a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18c9f:	48 8d 70 01          	lea    0x1(%rax),%rsi
   18ca3:	e8 28 d7 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   18ca8:	89 04 24             	mov    %eax,(%rsp)
   18cab:	85 c0                	test   %eax,%eax
   18cad:	0f 85 0a ff ff ff    	jne    18bbd <mbedtls_mpi_exp_mod+0x30d>
   18cb3:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
   18cba:	00 
   18cbb:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18cc2:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18cc6:	ff 74 24 58          	pushq  0x58(%rsp)
   18cca:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   18cd1:	00 
   18cd2:	48 89 fe             	mov    %rdi,%rsi
   18cd5:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   18cdc:	00 
   18cdd:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18ce1:	e8 ba 32 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   18ce6:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
   18ced:	00 
   18cee:	4c 89 f7             	mov    %r14,%rdi
   18cf1:	e8 0a d9 ff ff       	callq  16600 <mbedtls_mpi_copy>
   18cf6:	89 44 24 10          	mov    %eax,0x10(%rsp)
   18cfa:	41 5b                	pop    %r11
   18cfc:	5a                   	pop    %rdx
   18cfd:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18d04:	00 
   18d05:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18d0a:	85 c0                	test   %eax,%eax
   18d0c:	0f 85 ab fe ff ff    	jne    18bbd <mbedtls_mpi_exp_mod+0x30d>
   18d12:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
   18d19:	00 
   18d1a:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18d21:	00 
   18d22:	b9 01 00 00 00       	mov    $0x1,%ecx
   18d27:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
   18d2e:	00 01 00 00 00 
   18d33:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   18d3a:	00 
   18d3b:	48 89 c2             	mov    %rax,%rdx
   18d3e:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18d45:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18d49:	48 89 fe             	mov    %rdi,%rsi
   18d4c:	ff 74 24 58          	pushq  0x58(%rsp)
   18d50:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18d54:	e8 47 32 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   18d59:	41 59                	pop    %r9
   18d5b:	41 5a                	pop    %r10
   18d5d:	48 83 fb 02          	cmp    $0x2,%rbx
   18d61:	0f 84 4f 03 00 00    	je     190b6 <mbedtls_mpi_exp_mod+0x806>
   18d67:	49 8b 45 08          	mov    0x8(%r13),%rax
   18d6b:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   18d72:	00 
   18d73:	31 c9                	xor    %ecx,%ecx
   18d75:	31 d2                	xor    %edx,%edx
   18d77:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   18d7e:	00 00 
   18d80:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   18d85:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18d8c:	00 
   18d8d:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   18d94:	00 00 
   18d96:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18d9b:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   18da0:	48 89 cb             	mov    %rcx,%rbx
   18da3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18da8:	48 85 db             	test   %rbx,%rbx
   18dab:	0f 84 4b 01 00 00    	je     18efc <mbedtls_mpi_exp_mod+0x64c>
   18db1:	48 83 eb 01          	sub    $0x1,%rbx
   18db5:	89 d9                	mov    %ebx,%ecx
   18db7:	49 8b 45 10          	mov    0x10(%r13),%rax
   18dbb:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   18dc0:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   18dc4:	48 d3 e8             	shr    %cl,%rax
   18dc7:	48 89 d1             	mov    %rdx,%rcx
   18dca:	83 e0 01             	and    $0x1,%eax
   18dcd:	48 09 c1             	or     %rax,%rcx
   18dd0:	0f 84 98 02 00 00    	je     1906e <mbedtls_mpi_exp_mod+0x7be>
   18dd6:	48 85 c0             	test   %rax,%rax
   18dd9:	0f 85 6b 01 00 00    	jne    18f4a <mbedtls_mpi_exp_mod+0x69a>
   18ddf:	48 83 fa 01          	cmp    $0x1,%rdx
   18de3:	0f 85 61 01 00 00    	jne    18f4a <mbedtls_mpi_exp_mod+0x69a>
   18de9:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18dee:	31 c9                	xor    %ecx,%ecx
   18df0:	4c 89 e2             	mov    %r12,%rdx
   18df3:	4c 89 f6             	mov    %r14,%rsi
   18df6:	e8 f5 d4 ff ff       	callq  162f0 <mpi_select>
   18dfb:	85 c0                	test   %eax,%eax
   18dfd:	0f 84 72 02 00 00    	je     19075 <mbedtls_mpi_exp_mod+0x7c5>
   18e03:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   18e08:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   18e0f:	00 
   18e10:	89 04 24             	mov    %eax,(%rsp)
   18e13:	e9 a5 fd ff ff       	jmpq   18bbd <mbedtls_mpi_exp_mod+0x30d>
   18e18:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18e1d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18e22:	e8 d9 d7 ff ff       	callq  16600 <mbedtls_mpi_copy>
   18e27:	89 04 24             	mov    %eax,(%rsp)
   18e2a:	85 c0                	test   %eax,%eax
   18e2c:	0f 84 81 fe ff ff    	je     18cb3 <mbedtls_mpi_exp_mod+0x403>
   18e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18e38:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18e3f:	00 
   18e40:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18e45:	e9 73 fd ff ff       	jmpq   18bbd <mbedtls_mpi_exp_mod+0x30d>
   18e4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18e50:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
   18e57:	00 
   18e58:	be 01 00 00 00       	mov    $0x1,%esi
   18e5d:	48 89 cf             	mov    %rcx,%rdi
   18e60:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   18e65:	e8 06 d9 ff ff       	callq  16770 <mbedtls_mpi_lset>
   18e6a:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18e71:	00 
   18e72:	89 04 24             	mov    %eax,(%rsp)
   18e75:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18e7a:	85 c0                	test   %eax,%eax
   18e7c:	0f 85 3b fd ff ff    	jne    18bbd <mbedtls_mpi_exp_mod+0x30d>
   18e82:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   18e86:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18e8b:	48 c1 e6 07          	shl    $0x7,%rsi
   18e8f:	48 89 cf             	mov    %rcx,%rdi
   18e92:	e8 99 db ff ff       	callq  16a30 <mbedtls_mpi_shift_l>
   18e97:	89 04 24             	mov    %eax,(%rsp)
   18e9a:	85 c0                	test   %eax,%eax
   18e9c:	0f 85 1b fd ff ff    	jne    18bbd <mbedtls_mpi_exp_mod+0x30d>
   18ea2:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18ea7:	48 89 ea             	mov    %rbp,%rdx
   18eaa:	48 89 ce             	mov    %rcx,%rsi
   18ead:	48 89 cf             	mov    %rcx,%rdi
   18eb0:	e8 4b f3 ff ff       	callq  18200 <mbedtls_mpi_mod_mpi>
   18eb5:	89 04 24             	mov    %eax,(%rsp)
   18eb8:	85 c0                	test   %eax,%eax
   18eba:	0f 85 fd fc ff ff    	jne    18bbd <mbedtls_mpi_exp_mod+0x30d>
   18ec0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   18ec5:	48 85 d2             	test   %rdx,%rdx
   18ec8:	0f 84 8b fd ff ff    	je     18c59 <mbedtls_mpi_exp_mod+0x3a9>
   18ece:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18ed3:	66 0f 6f 11          	movdqa (%rcx),%xmm2
   18ed7:	48 8b 41 10          	mov    0x10(%rcx),%rax
   18edb:	0f 11 12             	movups %xmm2,(%rdx)
   18ede:	48 89 42 10          	mov    %rax,0x10(%rdx)
   18ee2:	e9 72 fd ff ff       	jmpq   18c59 <mbedtls_mpi_exp_mod+0x3a9>
   18ee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18eee:	00 00 
   18ef0:	c7 04 24 fc ff ff ff 	movl   $0xfffffffc,(%rsp)
   18ef7:	e9 54 fc ff ff       	jmpq   18b50 <mbedtls_mpi_exp_mod+0x2a0>
   18efc:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
   18f02:	0f 84 eb 01 00 00    	je     190f3 <mbedtls_mpi_exp_mod+0x843>
   18f08:	48 83 6c 24 68 01    	subq   $0x1,0x68(%rsp)
   18f0e:	bb 3f 00 00 00       	mov    $0x3f,%ebx
   18f13:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   18f18:	e9 9a fe ff ff       	jmpq   18db7 <mbedtls_mpi_exp_mod+0x507>
   18f1d:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18f22:	4c 89 ff             	mov    %r15,%rdi
   18f25:	e8 d6 d6 ff ff       	callq  16600 <mbedtls_mpi_copy>
   18f2a:	89 04 24             	mov    %eax,(%rsp)
   18f2d:	85 c0                	test   %eax,%eax
   18f2f:	0f 85 03 ff ff ff    	jne    18e38 <mbedtls_mpi_exp_mod+0x588>
   18f35:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   18f3c:	01 00 00 00 
   18f40:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
   18f45:	e9 d5 fc ff ff       	jmpq   18c1f <mbedtls_mpi_exp_mod+0x36f>
   18f4a:	48 83 44 24 40 01    	addq   $0x1,0x40(%rsp)
   18f50:	8b 4c 24 58          	mov    0x58(%rsp),%ecx
   18f54:	ba 02 00 00 00       	mov    $0x2,%edx
   18f59:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18f5e:	29 f1                	sub    %esi,%ecx
   18f60:	48 d3 e0             	shl    %cl,%rax
   18f63:	48 09 44 24 78       	or     %rax,0x78(%rsp)
   18f68:	48 39 74 24 70       	cmp    %rsi,0x70(%rsp)
   18f6d:	0f 85 35 fe ff ff    	jne    18da8 <mbedtls_mpi_exp_mod+0x4f8>
   18f73:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
   18f7a:	00 
   18f7b:	45 31 ff             	xor    %r15d,%r15d
   18f7e:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   18f83:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
   18f8a:	00 
   18f8b:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   18f90:	eb 05                	jmp    18f97 <mbedtls_mpi_exp_mod+0x6e7>
   18f92:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   18f97:	31 c9                	xor    %ecx,%ecx
   18f99:	4c 89 e2             	mov    %r12,%rdx
   18f9c:	4c 89 f6             	mov    %r14,%rsi
   18f9f:	48 89 df             	mov    %rbx,%rdi
   18fa2:	e8 49 d3 ff ff       	callq  162f0 <mpi_select>
   18fa7:	85 c0                	test   %eax,%eax
   18fa9:	0f 85 54 fe ff ff    	jne    18e03 <mbedtls_mpi_exp_mod+0x553>
   18faf:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18fb6:	00 
   18fb7:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18fbe:	49 83 c7 01          	add    $0x1,%r15
   18fc2:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18fc6:	41 55                	push   %r13
   18fc8:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18fcf:	00 
   18fd0:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18fd7:	00 
   18fd8:	48 89 fe             	mov    %rdi,%rsi
   18fdb:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18fdf:	e8 bc 2f 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   18fe4:	41 59                	pop    %r9
   18fe6:	41 5a                	pop    %r10
   18fe8:	4c 39 7c 24 40       	cmp    %r15,0x40(%rsp)
   18fed:	77 a3                	ja     18f92 <mbedtls_mpi_exp_mod+0x6e2>
   18fef:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   18ff4:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18ff9:	4c 89 e2             	mov    %r12,%rdx
   18ffc:	4c 89 f6             	mov    %r14,%rsi
   18fff:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
   19006:	00 
   19007:	4c 8b ac 24 98 00 00 	mov    0x98(%rsp),%r13
   1900e:	00 
   1900f:	e8 dc d2 ff ff       	callq  162f0 <mpi_select>
   19014:	85 c0                	test   %eax,%eax
   19016:	0f 85 e7 fd ff ff    	jne    18e03 <mbedtls_mpi_exp_mod+0x553>
   1901c:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   19023:	00 
   19024:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1902b:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   1902f:	ff 74 24 58          	pushq  0x58(%rsp)
   19033:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   1903a:	00 
   1903b:	48 89 fe             	mov    %rdi,%rsi
   1903e:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   19045:	00 
   19046:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   1904a:	e8 51 2f 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1904f:	5f                   	pop    %rdi
   19050:	41 58                	pop    %r8
   19052:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   19059:	00 00 
   1905b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   19060:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   19067:	00 00 
   19069:	e9 3a fd ff ff       	jmpq   18da8 <mbedtls_mpi_exp_mod+0x4f8>
   1906e:	31 d2                	xor    %edx,%edx
   19070:	e9 33 fd ff ff       	jmpq   18da8 <mbedtls_mpi_exp_mod+0x4f8>
   19075:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   1907c:	00 
   1907d:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   19084:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   19088:	ff 74 24 58          	pushq  0x58(%rsp)
   1908c:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   19093:	00 
   19094:	48 89 fe             	mov    %rdi,%rsi
   19097:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   1909e:	00 
   1909f:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   190a3:	e8 f8 2e 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   190a8:	41 5b                	pop    %r11
   190aa:	41 5f                	pop    %r15
   190ac:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   190b1:	e9 f2 fc ff ff       	jmpq   18da8 <mbedtls_mpi_exp_mod+0x4f8>
   190b6:	48 8b 45 08          	mov    0x8(%rbp),%rax
   190ba:	48 8d bc 24 60 01 00 	lea    0x160(%rsp),%rdi
   190c1:	00 
   190c2:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   190c7:	48 8d 70 01          	lea    0x1(%rax),%rsi
   190cb:	e8 00 d3 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   190d0:	85 c0                	test   %eax,%eax
   190d2:	75 17                	jne    190eb <mbedtls_mpi_exp_mod+0x83b>
   190d4:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   190d9:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   190de:	e8 1d d5 ff ff       	callq  16600 <mbedtls_mpi_copy>
   190e3:	85 c0                	test   %eax,%eax
   190e5:	0f 84 83 01 00 00    	je     1926e <mbedtls_mpi_exp_mod+0x9be>
   190eb:	89 04 24             	mov    %eax,(%rsp)
   190ee:	e9 ca fa ff ff       	jmpq   18bbd <mbedtls_mpi_exp_mod+0x30d>
   190f3:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   190f9:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   190fe:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   19105:	00 
   19106:	0f 84 f7 00 00 00    	je     19203 <mbedtls_mpi_exp_mod+0x953>
   1910c:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   19111:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   19116:	4c 89 7c 24 58       	mov    %r15,0x58(%rsp)
   1911b:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   19120:	4c 89 6c 24 68       	mov    %r13,0x68(%rsp)
   19125:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   1912a:	eb 13                	jmp    1913f <mbedtls_mpi_exp_mod+0x88f>
   1912c:	0f 1f 40 00          	nopl   0x0(%rax)
   19130:	48 83 c3 01          	add    $0x1,%rbx
   19134:	48 39 5c 24 40       	cmp    %rbx,0x40(%rsp)
   19139:	0f 84 b5 00 00 00    	je     191f4 <mbedtls_mpi_exp_mod+0x944>
   1913f:	31 c9                	xor    %ecx,%ecx
   19141:	4c 89 e2             	mov    %r12,%rdx
   19144:	4c 89 f6             	mov    %r14,%rsi
   19147:	4c 89 ff             	mov    %r15,%rdi
   1914a:	e8 a1 d1 ff ff       	callq  162f0 <mpi_select>
   1914f:	85 c0                	test   %eax,%eax
   19151:	0f 85 8e 00 00 00    	jne    191e5 <mbedtls_mpi_exp_mod+0x935>
   19157:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   1915e:	00 
   1915f:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   19166:	4d 01 ed             	add    %r13,%r13
   19169:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   1916d:	ff 74 24 58          	pushq  0x58(%rsp)
   19171:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   19178:	00 
   19179:	48 89 fe             	mov    %rdi,%rsi
   1917c:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   19183:	00 
   19184:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   19188:	e8 13 2e 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1918d:	59                   	pop    %rcx
   1918e:	5e                   	pop    %rsi
   1918f:	4d 85 e5             	test   %r12,%r13
   19192:	74 9c                	je     19130 <mbedtls_mpi_exp_mod+0x880>
   19194:	b9 01 00 00 00       	mov    $0x1,%ecx
   19199:	4c 89 e2             	mov    %r12,%rdx
   1919c:	4c 89 f6             	mov    %r14,%rsi
   1919f:	4c 89 ff             	mov    %r15,%rdi
   191a2:	e8 49 d1 ff ff       	callq  162f0 <mpi_select>
   191a7:	85 c0                	test   %eax,%eax
   191a9:	75 3a                	jne    191e5 <mbedtls_mpi_exp_mod+0x935>
   191ab:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   191b2:	00 
   191b3:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   191ba:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   191be:	ff 74 24 58          	pushq  0x58(%rsp)
   191c2:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   191c9:	00 
   191ca:	48 89 fe             	mov    %rdi,%rsi
   191cd:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   191d4:	00 
   191d5:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   191d9:	e8 c2 2d 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   191de:	58                   	pop    %rax
   191df:	5a                   	pop    %rdx
   191e0:	e9 4b ff ff ff       	jmpq   19130 <mbedtls_mpi_exp_mod+0x880>
   191e5:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   191ea:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   191ef:	e9 f7 fe ff ff       	jmpq   190eb <mbedtls_mpi_exp_mod+0x83b>
   191f4:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   191f9:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
   191fe:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   19203:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   1920a:	00 
   1920b:	b9 01 00 00 00       	mov    $0x1,%ecx
   19210:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
   19217:	00 01 00 00 00 
   1921c:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   19223:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   19227:	ff 74 24 58          	pushq  0x58(%rsp)
   1922b:	48 89 fe             	mov    %rdi,%rsi
   1922e:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   19235:	00 
   19236:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   1923a:	e8 61 2d 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1923f:	58                   	pop    %rax
   19240:	5a                   	pop    %rdx
   19241:	83 7c 24 64 ff       	cmpl   $0xffffffff,0x64(%rsp)
   19246:	75 14                	jne    1925c <mbedtls_mpi_exp_mod+0x9ac>
   19248:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   1924d:	74 0d                	je     1925c <mbedtls_mpi_exp_mod+0x9ac>
   1924f:	49 8b 45 10          	mov    0x10(%r13),%rax
   19253:	f6 00 01             	testb  $0x1,(%rax)
   19256:	0f 85 fb 00 00 00    	jne    19357 <mbedtls_mpi_exp_mod+0xaa7>
   1925c:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   19261:	4c 89 f6             	mov    %r14,%rsi
   19264:	e8 97 d3 ff ff       	callq  16600 <mbedtls_mpi_copy>
   19269:	e9 4f f9 ff ff       	jmpq   18bbd <mbedtls_mpi_exp_mod+0x30d>
   1926e:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
   19275:	00 
   19276:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1927d:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   19281:	ff 74 24 58          	pushq  0x58(%rsp)
   19285:	48 8b 8c 24 78 01 00 	mov    0x178(%rsp),%rcx
   1928c:	00 
   1928d:	48 89 fa             	mov    %rdi,%rdx
   19290:	48 89 fe             	mov    %rdi,%rsi
   19293:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   19297:	e8 04 2d 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1929c:	5f                   	pop    %rdi
   1929d:	41 58                	pop    %r8
   1929f:	49 83 fc 04          	cmp    $0x4,%r12
   192a3:	0f 85 be fa ff ff    	jne    18d67 <mbedtls_mpi_exp_mod+0x4b7>
   192a9:	4c 8d 94 24 78 01 00 	lea    0x178(%rsp),%r10
   192b0:	00 
   192b1:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
   192b8:	00 
   192b9:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   192be:	48 89 eb             	mov    %rbp,%rbx
   192c1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   192c6:	4c 89 d5             	mov    %r10,%rbp
   192c9:	eb 4c                	jmp    19317 <mbedtls_mpi_exp_mod+0xa67>
   192cb:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
   192cf:	48 89 ef             	mov    %rbp,%rdi
   192d2:	e8 29 d3 ff ff       	callq  16600 <mbedtls_mpi_copy>
   192d7:	85 c0                	test   %eax,%eax
   192d9:	75 50                	jne    1932b <mbedtls_mpi_exp_mod+0xa7b>
   192db:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   192df:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   192e6:	48 83 c5 18          	add    $0x18,%rbp
   192ea:	4c 8b 43 10          	mov    0x10(%rbx),%r8
   192ee:	ff 74 24 58          	pushq  0x58(%rsp)
   192f2:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
   192f9:	00 
   192fa:	48 89 fe             	mov    %rdi,%rsi
   192fd:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
   19304:	00 
   19305:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
   19309:	e8 92 2c 00 00       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1930e:	59                   	pop    %rcx
   1930f:	5e                   	pop    %rsi
   19310:	48 39 6c 24 40       	cmp    %rbp,0x40(%rsp)
   19315:	74 33                	je     1934a <mbedtls_mpi_exp_mod+0xa9a>
   19317:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1931b:	48 89 ef             	mov    %rbp,%rdi
   1931e:	48 8d 70 01          	lea    0x1(%rax),%rsi
   19322:	e8 a9 d0 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   19327:	85 c0                	test   %eax,%eax
   19329:	74 a0                	je     192cb <mbedtls_mpi_exp_mod+0xa1b>
   1932b:	89 04 24             	mov    %eax,(%rsp)
   1932e:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   19335:	00 
   19336:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   1933b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19340:	e9 a7 f7 ff ff       	jmpq   18aec <mbedtls_mpi_exp_mod+0x23c>
   19345:	e8 26 af fe ff       	callq  4270 <__stack_chk_fail@plt>
   1934a:	48 89 dd             	mov    %rbx,%rbp
   1934d:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   19352:	e9 10 fa ff ff       	jmpq   18d67 <mbedtls_mpi_exp_mod+0x4b7>
   19357:	b9 01 00 00 00       	mov    $0x1,%ecx
   1935c:	4c 89 f2             	mov    %r14,%rdx
   1935f:	48 89 ee             	mov    %rbp,%rsi
   19362:	4c 89 f7             	mov    %r14,%rdi
   19365:	c7 84 24 30 01 00 00 	movl   $0xffffffff,0x130(%rsp)
   1936c:	ff ff ff ff 
   19370:	e8 7b dc ff ff       	callq  16ff0 <add_sub_mpi>
   19375:	85 c0                	test   %eax,%eax
   19377:	0f 84 df fe ff ff    	je     1925c <mbedtls_mpi_exp_mod+0x9ac>
   1937d:	e9 69 fd ff ff       	jmpq   190eb <mbedtls_mpi_exp_mod+0x83b>
   19382:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19389:	00 00 00 00 
   1938d:	0f 1f 00             	nopl   (%rax)

0000000000019390 <mbedtls_mpi_gcd>:
   19390:	f3 0f 1e fa          	endbr64 
   19394:	41 57                	push   %r15
   19396:	49 89 ff             	mov    %rdi,%r15
   19399:	41 56                	push   %r14
   1939b:	49 89 f6             	mov    %rsi,%r14
   1939e:	41 55                	push   %r13
   193a0:	41 54                	push   %r12
   193a2:	49 89 d4             	mov    %rdx,%r12
   193a5:	55                   	push   %rbp
   193a6:	53                   	push   %rbx
   193a7:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   193ae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   193b5:	00 00 
   193b7:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   193bc:	31 c0                	xor    %eax,%eax
   193be:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   193c3:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   193ca:	00 
   193cb:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   193d0:	48 89 ef             	mov    %rbp,%rdi
   193d3:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   193da:	00 
   193db:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   193e2:	00 00 
   193e4:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   193eb:	00 00 
   193ed:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   193f4:	00 00 
   193f6:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   193fd:	00 00 
   193ff:	e8 fc d1 ff ff       	callq  16600 <mbedtls_mpi_copy>
   19404:	85 c0                	test   %eax,%eax
   19406:	74 3e                	je     19446 <mbedtls_mpi_gcd+0xb6>
   19408:	48 89 ef             	mov    %rbp,%rdi
   1940b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1940f:	e8 5c cf ff ff       	callq  16370 <mbedtls_mpi_free>
   19414:	4c 89 ef             	mov    %r13,%rdi
   19417:	e8 54 cf ff ff       	callq  16370 <mbedtls_mpi_free>
   1941c:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   19421:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19428:	00 00 
   1942a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1942e:	0f 85 90 02 00 00    	jne    196c4 <mbedtls_mpi_gcd+0x334>
   19434:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1943b:	5b                   	pop    %rbx
   1943c:	5d                   	pop    %rbp
   1943d:	41 5c                	pop    %r12
   1943f:	41 5d                	pop    %r13
   19441:	41 5e                	pop    %r14
   19443:	41 5f                	pop    %r15
   19445:	c3                   	retq   
   19446:	4c 89 e6             	mov    %r12,%rsi
   19449:	4c 89 ef             	mov    %r13,%rdi
   1944c:	e8 af d1 ff ff       	callq  16600 <mbedtls_mpi_copy>
   19451:	85 c0                	test   %eax,%eax
   19453:	75 b3                	jne    19408 <mbedtls_mpi_gcd+0x78>
   19455:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1945a:	48 85 f6             	test   %rsi,%rsi
   1945d:	0f 84 59 02 00 00    	je     196bc <mbedtls_mpi_gcd+0x32c>
   19463:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   19468:	45 31 e4             	xor    %r12d,%r12d
   1946b:	31 c9                	xor    %ecx,%ecx
   1946d:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   19471:	31 c0                	xor    %eax,%eax
   19473:	eb 15                	jmp    1948a <mbedtls_mpi_gcd+0xfa>
   19475:	0f 1f 00             	nopl   (%rax)
   19478:	48 83 c0 01          	add    $0x1,%rax
   1947c:	49 83 c4 01          	add    $0x1,%r12
   19480:	48 83 f8 40          	cmp    $0x40,%rax
   19484:	0f 84 25 02 00 00    	je     196af <mbedtls_mpi_gcd+0x31f>
   1948a:	48 0f a3 c2          	bt     %rax,%rdx
   1948e:	73 e8                	jae    19478 <mbedtls_mpi_gcd+0xe8>
   19490:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   19495:	48 85 f6             	test   %rsi,%rsi
   19498:	0f 84 6e 01 00 00    	je     1960c <mbedtls_mpi_gcd+0x27c>
   1949e:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   194a3:	31 d2                	xor    %edx,%edx
   194a5:	31 ff                	xor    %edi,%edi
   194a7:	49 8b 0c f8          	mov    (%r8,%rdi,8),%rcx
   194ab:	31 c0                	xor    %eax,%eax
   194ad:	eb 13                	jmp    194c2 <mbedtls_mpi_gcd+0x132>
   194af:	90                   	nop
   194b0:	48 83 c0 01          	add    $0x1,%rax
   194b4:	48 83 c2 01          	add    $0x1,%rdx
   194b8:	48 83 f8 40          	cmp    $0x40,%rax
   194bc:	0f 84 2a 01 00 00    	je     195ec <mbedtls_mpi_gcd+0x25c>
   194c2:	48 0f a3 c1          	bt     %rax,%rcx
   194c6:	73 e8                	jae    194b0 <mbedtls_mpi_gcd+0x120>
   194c8:	48 85 d2             	test   %rdx,%rdx
   194cb:	0f 84 28 01 00 00    	je     195f9 <mbedtls_mpi_gcd+0x269>
   194d1:	49 39 d4             	cmp    %rdx,%r12
   194d4:	4c 0f 47 e2          	cmova  %rdx,%r12
   194d8:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   194df:	00 
   194e0:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   194e5:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   194ea:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   194f1:	00 
   194f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   194f8:	48 89 de             	mov    %rbx,%rsi
   194fb:	48 89 ef             	mov    %rbp,%rdi
   194fe:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   19505:	00 00 
   19507:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1950e:	00 
   1950f:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   19516:	00 00 
   19518:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   1951d:	e8 2e d7 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19522:	85 c0                	test   %eax,%eax
   19524:	0f 84 62 01 00 00    	je     1968c <mbedtls_mpi_gcd+0x2fc>
   1952a:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   1952f:	4d 85 c0             	test   %r8,%r8
   19532:	74 34                	je     19568 <mbedtls_mpi_gcd+0x1d8>
   19534:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   19539:	31 d2                	xor    %edx,%edx
   1953b:	31 f6                	xor    %esi,%esi
   1953d:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
   19541:	31 c0                	xor    %eax,%eax
   19543:	eb 15                	jmp    1955a <mbedtls_mpi_gcd+0x1ca>
   19545:	0f 1f 00             	nopl   (%rax)
   19548:	48 83 c0 01          	add    $0x1,%rax
   1954c:	48 83 c2 01          	add    $0x1,%rdx
   19550:	48 83 f8 40          	cmp    $0x40,%rax
   19554:	0f 84 06 01 00 00    	je     19660 <mbedtls_mpi_gcd+0x2d0>
   1955a:	48 0f a3 c1          	bt     %rax,%rcx
   1955e:	73 e8                	jae    19548 <mbedtls_mpi_gcd+0x1b8>
   19560:	4c 89 c6             	mov    %r8,%rsi
   19563:	e8 d8 25 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   19568:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   1956d:	4d 85 c0             	test   %r8,%r8
   19570:	74 36                	je     195a8 <mbedtls_mpi_gcd+0x218>
   19572:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   19577:	31 d2                	xor    %edx,%edx
   19579:	31 f6                	xor    %esi,%esi
   1957b:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
   1957f:	31 c0                	xor    %eax,%eax
   19581:	eb 17                	jmp    1959a <mbedtls_mpi_gcd+0x20a>
   19583:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19588:	48 83 c0 01          	add    $0x1,%rax
   1958c:	48 83 c2 01          	add    $0x1,%rdx
   19590:	48 83 f8 40          	cmp    $0x40,%rax
   19594:	0f 84 de 00 00 00    	je     19678 <mbedtls_mpi_gcd+0x2e8>
   1959a:	48 0f a3 c1          	bt     %rax,%rcx
   1959e:	73 e8                	jae    19588 <mbedtls_mpi_gcd+0x1f8>
   195a0:	4c 89 c6             	mov    %r8,%rsi
   195a3:	e8 98 25 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   195a8:	4c 89 ee             	mov    %r13,%rsi
   195ab:	48 89 ef             	mov    %rbp,%rdi
   195ae:	e8 9d d6 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   195b3:	85 c0                	test   %eax,%eax
   195b5:	78 69                	js     19620 <mbedtls_mpi_gcd+0x290>
   195b7:	4c 89 ea             	mov    %r13,%rdx
   195ba:	48 89 ee             	mov    %rbp,%rsi
   195bd:	e8 ee d8 ff ff       	callq  16eb0 <mbedtls_mpi_sub_abs>
   195c2:	85 c0                	test   %eax,%eax
   195c4:	0f 85 3e fe ff ff    	jne    19408 <mbedtls_mpi_gcd+0x78>
   195ca:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   195cf:	48 85 f6             	test   %rsi,%rsi
   195d2:	0f 84 20 ff ff ff    	je     194f8 <mbedtls_mpi_gcd+0x168>
   195d8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   195dd:	ba 01 00 00 00       	mov    $0x1,%edx
   195e2:	e8 59 25 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   195e7:	e9 0c ff ff ff       	jmpq   194f8 <mbedtls_mpi_gcd+0x168>
   195ec:	48 83 c7 01          	add    $0x1,%rdi
   195f0:	48 39 f7             	cmp    %rsi,%rdi
   195f3:	0f 85 ae fe ff ff    	jne    194a7 <mbedtls_mpi_gcd+0x117>
   195f9:	48 c1 e6 06          	shl    $0x6,%rsi
   195fd:	74 0d                	je     1960c <mbedtls_mpi_gcd+0x27c>
   195ff:	45 31 e4             	xor    %r12d,%r12d
   19602:	41 f6 00 01          	testb  $0x1,(%r8)
   19606:	0f 85 cc fe ff ff    	jne    194d8 <mbedtls_mpi_gcd+0x148>
   1960c:	4c 89 f6             	mov    %r14,%rsi
   1960f:	4c 89 ff             	mov    %r15,%rdi
   19612:	e8 e9 cf ff ff       	callq  16600 <mbedtls_mpi_copy>
   19617:	e9 ec fd ff ff       	jmpq   19408 <mbedtls_mpi_gcd+0x78>
   1961c:	0f 1f 40 00          	nopl   0x0(%rax)
   19620:	48 89 ea             	mov    %rbp,%rdx
   19623:	4c 89 ee             	mov    %r13,%rsi
   19626:	4c 89 ef             	mov    %r13,%rdi
   19629:	e8 82 d8 ff ff       	callq  16eb0 <mbedtls_mpi_sub_abs>
   1962e:	85 c0                	test   %eax,%eax
   19630:	0f 85 d2 fd ff ff    	jne    19408 <mbedtls_mpi_gcd+0x78>
   19636:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1963b:	48 85 f6             	test   %rsi,%rsi
   1963e:	0f 84 b4 fe ff ff    	je     194f8 <mbedtls_mpi_gcd+0x168>
   19644:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   19649:	ba 01 00 00 00       	mov    $0x1,%edx
   1964e:	e8 ed 24 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   19653:	e9 a0 fe ff ff       	jmpq   194f8 <mbedtls_mpi_gcd+0x168>
   19658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1965f:	00 
   19660:	48 83 c6 01          	add    $0x1,%rsi
   19664:	4c 39 c6             	cmp    %r8,%rsi
   19667:	0f 85 d0 fe ff ff    	jne    1953d <mbedtls_mpi_gcd+0x1ad>
   1966d:	31 d2                	xor    %edx,%edx
   1966f:	e9 ec fe ff ff       	jmpq   19560 <mbedtls_mpi_gcd+0x1d0>
   19674:	0f 1f 40 00          	nopl   0x0(%rax)
   19678:	48 83 c6 01          	add    $0x1,%rsi
   1967c:	4c 39 c6             	cmp    %r8,%rsi
   1967f:	0f 85 f6 fe ff ff    	jne    1957b <mbedtls_mpi_gcd+0x1eb>
   19685:	31 d2                	xor    %edx,%edx
   19687:	e9 14 ff ff ff       	jmpq   195a0 <mbedtls_mpi_gcd+0x210>
   1968c:	4c 89 e6             	mov    %r12,%rsi
   1968f:	4c 89 ef             	mov    %r13,%rdi
   19692:	e8 99 d3 ff ff       	callq  16a30 <mbedtls_mpi_shift_l>
   19697:	85 c0                	test   %eax,%eax
   19699:	0f 85 69 fd ff ff    	jne    19408 <mbedtls_mpi_gcd+0x78>
   1969f:	4c 89 ee             	mov    %r13,%rsi
   196a2:	4c 89 ff             	mov    %r15,%rdi
   196a5:	e8 56 cf ff ff       	callq  16600 <mbedtls_mpi_copy>
   196aa:	e9 59 fd ff ff       	jmpq   19408 <mbedtls_mpi_gcd+0x78>
   196af:	48 83 c1 01          	add    $0x1,%rcx
   196b3:	48 39 f1             	cmp    %rsi,%rcx
   196b6:	0f 85 b1 fd ff ff    	jne    1946d <mbedtls_mpi_gcd+0xdd>
   196bc:	45 31 e4             	xor    %r12d,%r12d
   196bf:	e9 cc fd ff ff       	jmpq   19490 <mbedtls_mpi_gcd+0x100>
   196c4:	e8 a7 ab fe ff       	callq  4270 <__stack_chk_fail@plt>
   196c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000196d0 <mbedtls_mpi_fill_random>:
   196d0:	f3 0f 1e fa          	endbr64 
   196d4:	41 55                	push   %r13
   196d6:	49 89 d5             	mov    %rdx,%r13
   196d9:	41 54                	push   %r12
   196db:	49 89 f4             	mov    %rsi,%r12
   196de:	55                   	push   %rbp
   196df:	4c 89 e0             	mov    %r12,%rax
   196e2:	48 89 cd             	mov    %rcx,%rbp
   196e5:	53                   	push   %rbx
   196e6:	48 89 fb             	mov    %rdi,%rbx
   196e9:	48 83 ec 08          	sub    $0x8,%rsp
   196ed:	83 e6 07             	and    $0x7,%esi
   196f0:	40 0f 95 c6          	setne  %sil
   196f4:	48 c1 e8 03          	shr    $0x3,%rax
   196f8:	40 0f b6 f6          	movzbl %sil,%esi
   196fc:	48 01 c6             	add    %rax,%rsi
   196ff:	e8 6c cd ff ff       	callq  16470 <mbedtls_mpi_resize_clear>
   19704:	85 c0                	test   %eax,%eax
   19706:	75 05                	jne    1970d <mbedtls_mpi_fill_random+0x3d>
   19708:	4d 85 e4             	test   %r12,%r12
   1970b:	75 13                	jne    19720 <mbedtls_mpi_fill_random+0x50>
   1970d:	48 83 c4 08          	add    $0x8,%rsp
   19711:	5b                   	pop    %rbx
   19712:	5d                   	pop    %rbp
   19713:	41 5c                	pop    %r12
   19715:	41 5d                	pop    %r13
   19717:	c3                   	retq   
   19718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1971f:	00 
   19720:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   19724:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   19728:	48 83 c4 08          	add    $0x8,%rsp
   1972c:	49 89 e8             	mov    %rbp,%r8
   1972f:	5b                   	pop    %rbx
   19730:	4c 89 e9             	mov    %r13,%rcx
   19733:	5d                   	pop    %rbp
   19734:	4c 89 e2             	mov    %r12,%rdx
   19737:	41 5c                	pop    %r12
   19739:	41 5d                	pop    %r13
   1973b:	e9 10 2a 00 00       	jmpq   1c150 <mbedtls_mpi_core_fill_random>

0000000000019740 <mpi_miller_rabin>:
   19740:	41 57                	push   %r15
   19742:	41 56                	push   %r14
   19744:	49 89 fe             	mov    %rdi,%r14
   19747:	41 55                	push   %r13
   19749:	41 54                	push   %r12
   1974b:	49 89 d4             	mov    %rdx,%r12
   1974e:	55                   	push   %rbp
   1974f:	53                   	push   %rbx
   19750:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   19757:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1975c:	4c 8d 7c 24 60       	lea    0x60(%rsp),%r15
   19761:	48 89 fe             	mov    %rdi,%rsi
   19764:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   19769:	4c 89 ff             	mov    %r15,%rdi
   1976c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   19771:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19778:	00 00 
   1977a:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   19781:	00 
   19782:	31 c0                	xor    %eax,%eax
   19784:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
   1978b:	00 
   1978c:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   19793:	00 
   19794:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19799:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   197a0:	00 
   197a1:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   197a8:	00 
   197a9:	48 89 c2             	mov    %rax,%rdx
   197ac:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   197b1:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   197b8:	00 00 
   197ba:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   197c1:	00 00 
   197c3:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
   197ca:	01 00 00 00 
   197ce:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
   197d5:	00 00 00 00 00 
   197da:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   197e1:	00 00 00 00 00 
   197e6:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   197ed:	01 00 00 00 
   197f1:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
   197f8:	00 00 00 00 00 
   197fd:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
   19804:	00 00 00 00 00 
   19809:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
   19810:	01 00 00 00 
   19814:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   1981b:	00 00 00 00 00 
   19820:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   19827:	00 00 00 00 00 
   1982c:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
   19833:	01 00 00 00 
   19837:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1983e:	00 00 00 00 00 
   19843:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
   1984a:	00 00 00 00 00 
   1984f:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19856:	00 01 00 00 00 
   1985b:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19862:	01 00 00 00 
   19866:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   1986d:	00 01 00 00 00 
   19872:	e8 79 d7 ff ff       	callq  16ff0 <add_sub_mpi>
   19877:	89 44 24 24          	mov    %eax,0x24(%rsp)
   1987b:	85 c0                	test   %eax,%eax
   1987d:	0f 85 25 02 00 00    	jne    19aa8 <mpi_miller_rabin+0x368>
   19883:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   19888:	48 85 f6             	test   %rsi,%rsi
   1988b:	0f 84 ec 02 00 00    	je     19b7d <mpi_miller_rabin+0x43d>
   19891:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   19896:	31 ed                	xor    %ebp,%ebp
   19898:	31 c9                	xor    %ecx,%ecx
   1989a:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   1989e:	31 c0                	xor    %eax,%eax
   198a0:	eb 18                	jmp    198ba <mpi_miller_rabin+0x17a>
   198a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   198a8:	48 83 c0 01          	add    $0x1,%rax
   198ac:	48 83 c5 01          	add    $0x1,%rbp
   198b0:	48 83 f8 40          	cmp    $0x40,%rax
   198b4:	0f 84 b6 02 00 00    	je     19b70 <mpi_miller_rabin+0x430>
   198ba:	48 0f a3 c2          	bt     %rax,%rdx
   198be:	73 e8                	jae    198a8 <mpi_miller_rabin+0x168>
   198c0:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   198c7:	00 
   198c8:	4c 89 fe             	mov    %r15,%rsi
   198cb:	48 89 c7             	mov    %rax,%rdi
   198ce:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   198d3:	e8 28 cd ff ff       	callq  16600 <mbedtls_mpi_copy>
   198d8:	89 44 24 24          	mov    %eax,0x24(%rsp)
   198dc:	85 c0                	test   %eax,%eax
   198de:	0f 85 d1 01 00 00    	jne    19ab5 <mpi_miller_rabin+0x375>
   198e4:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   198eb:	00 
   198ec:	48 85 f6             	test   %rsi,%rsi
   198ef:	0f 85 93 02 00 00    	jne    19b88 <mpi_miller_rabin+0x448>
   198f5:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   198fb:	0f 84 b4 01 00 00    	je     19ab5 <mpi_miller_rabin+0x375>
   19901:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   19908:	00 
   19909:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
   1990e:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   19915:	00 
   19916:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1991b:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   19922:	00 
   19923:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   1992a:	00 00 
   1992c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19931:	bd 20 00 00 00       	mov    $0x20,%ebp
   19936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1993d:	00 00 00 
   19940:	49 8b 46 08          	mov    0x8(%r14),%rax
   19944:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19949:	4c 89 e2             	mov    %r12,%rdx
   1994c:	4c 89 ef             	mov    %r13,%rdi
   1994f:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   19956:	00 
   19957:	e8 74 fd ff ff       	callq  196d0 <mbedtls_mpi_fill_random>
   1995c:	85 c0                	test   %eax,%eax
   1995e:	0f 85 d4 01 00 00    	jne    19b38 <mpi_miller_rabin+0x3f8>
   19964:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   1996b:	00 
   1996c:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   19973:	00 
   19974:	e8 a7 1d 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   19979:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1997e:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   19983:	48 89 c3             	mov    %rax,%rbx
   19986:	e8 95 1d 00 00       	callq  1b720 <mbedtls_mpi_core_bitlen>
   1998b:	48 39 d8             	cmp    %rbx,%rax
   1998e:	73 2d                	jae    199bd <mpi_miller_rabin+0x27d>
   19990:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   19997:	00 
   19998:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
   1999f:	00 
   199a0:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   199a4:	c1 e1 06             	shl    $0x6,%ecx
   199a7:	f7 d1                	not    %ecx
   199a9:	01 c1                	add    %eax,%ecx
   199ab:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   199b2:	48 d3 e0             	shl    %cl,%rax
   199b5:	48 f7 d0             	not    %rax
   199b8:	48 21 44 d6 f8       	and    %rax,-0x8(%rsi,%rdx,8)
   199bd:	83 ed 01             	sub    $0x1,%ebp
   199c0:	0f 84 9a 01 00 00    	je     19b60 <mpi_miller_rabin+0x420>
   199c6:	4c 89 fe             	mov    %r15,%rsi
   199c9:	4c 89 ef             	mov    %r13,%rdi
   199cc:	e8 7f d2 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   199d1:	85 c0                	test   %eax,%eax
   199d3:	0f 89 67 ff ff ff    	jns    19940 <mpi_miller_rabin+0x200>
   199d9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   199de:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   199e3:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   199ea:	00 01 00 00 00 
   199ef:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   199f6:	01 00 00 00 
   199fa:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   19a01:	00 01 00 00 00 
   19a06:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19a0d:	00 
   19a0e:	e8 3d d2 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19a13:	85 c0                	test   %eax,%eax
   19a15:	0f 8e 25 ff ff ff    	jle    19940 <mpi_miller_rabin+0x200>
   19a1b:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   19a20:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   19a25:	4c 89 f1             	mov    %r14,%rcx
   19a28:	4c 89 ee             	mov    %r13,%rsi
   19a2b:	e8 80 ee ff ff       	callq  188b0 <mbedtls_mpi_exp_mod>
   19a30:	85 c0                	test   %eax,%eax
   19a32:	0f 85 00 01 00 00    	jne    19b38 <mpi_miller_rabin+0x3f8>
   19a38:	4c 89 fe             	mov    %r15,%rsi
   19a3b:	4c 89 ef             	mov    %r13,%rdi
   19a3e:	e8 0d d2 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19a43:	85 c0                	test   %eax,%eax
   19a45:	74 42                	je     19a89 <mpi_miller_rabin+0x349>
   19a47:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19a4c:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19a51:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19a58:	00 01 00 00 00 
   19a5d:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19a64:	01 00 00 00 
   19a68:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   19a6f:	00 01 00 00 00 
   19a74:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19a7b:	00 
   19a7c:	e8 cf d1 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19a81:	85 c0                	test   %eax,%eax
   19a83:	0f 85 14 01 00 00    	jne    19b9d <mpi_miller_rabin+0x45d>
   19a89:	48 83 44 24 50 01    	addq   $0x1,0x50(%rsp)
   19a8f:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   19a94:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
   19a99:	0f 85 92 fe ff ff    	jne    19931 <mpi_miller_rabin+0x1f1>
   19a9f:	eb 36                	jmp    19ad7 <mpi_miller_rabin+0x397>
   19aa1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19aa8:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   19aaf:	00 
   19ab0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19ab5:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   19abc:	00 
   19abd:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   19ac4:	00 
   19ac5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19aca:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   19ad1:	00 
   19ad2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19ad7:	4c 89 ff             	mov    %r15,%rdi
   19ada:	e8 91 c8 ff ff       	callq  16370 <mbedtls_mpi_free>
   19adf:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   19ae4:	e8 87 c8 ff ff       	callq  16370 <mbedtls_mpi_free>
   19ae9:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   19aee:	e8 7d c8 ff ff       	callq  16370 <mbedtls_mpi_free>
   19af3:	4c 89 ef             	mov    %r13,%rdi
   19af6:	e8 75 c8 ff ff       	callq  16370 <mbedtls_mpi_free>
   19afb:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   19b00:	e8 6b c8 ff ff       	callq  16370 <mbedtls_mpi_free>
   19b05:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   19b0c:	00 
   19b0d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19b14:	00 00 
   19b16:	0f 85 84 01 00 00    	jne    19ca0 <mpi_miller_rabin+0x560>
   19b1c:	8b 44 24 24          	mov    0x24(%rsp),%eax
   19b20:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
   19b27:	5b                   	pop    %rbx
   19b28:	5d                   	pop    %rbp
   19b29:	41 5c                	pop    %r12
   19b2b:	41 5d                	pop    %r13
   19b2d:	41 5e                	pop    %r14
   19b2f:	41 5f                	pop    %r15
   19b31:	c3                   	retq   
   19b32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19b38:	89 44 24 24          	mov    %eax,0x24(%rsp)
   19b3c:	eb 99                	jmp    19ad7 <mpi_miller_rabin+0x397>
   19b3e:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   19b43:	4c 89 fe             	mov    %r15,%rsi
   19b46:	4c 89 ef             	mov    %r13,%rdi
   19b49:	e8 02 d1 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19b4e:	85 c0                	test   %eax,%eax
   19b50:	0f 84 00 01 00 00    	je     19c56 <mpi_miller_rabin+0x516>
   19b56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19b5d:	00 00 00 
   19b60:	c7 44 24 24 f2 ff ff 	movl   $0xfffffff2,0x24(%rsp)
   19b67:	ff 
   19b68:	e9 6a ff ff ff       	jmpq   19ad7 <mpi_miller_rabin+0x397>
   19b6d:	0f 1f 00             	nopl   (%rax)
   19b70:	48 83 c1 01          	add    $0x1,%rcx
   19b74:	48 39 ce             	cmp    %rcx,%rsi
   19b77:	0f 85 1d fd ff ff    	jne    1989a <mpi_miller_rabin+0x15a>
   19b7d:	31 ed                	xor    %ebp,%ebp
   19b7f:	e9 3c fd ff ff       	jmpq   198c0 <mpi_miller_rabin+0x180>
   19b84:	0f 1f 40 00          	nopl   0x0(%rax)
   19b88:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   19b8f:	00 
   19b90:	48 89 ea             	mov    %rbp,%rdx
   19b93:	e8 a8 1f 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   19b98:	e9 58 fd ff ff       	jmpq   198f5 <mpi_miller_rabin+0x1b5>
   19b9d:	48 83 7c 24 48 01    	cmpq   $0x1,0x48(%rsp)
   19ba3:	bb 01 00 00 00       	mov    $0x1,%ebx
   19ba8:	76 99                	jbe    19b43 <mpi_miller_rabin+0x403>
   19baa:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
   19baf:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   19bb4:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   19bb9:	e9 80 00 00 00       	jmpq   19c3e <mpi_miller_rabin+0x4fe>
   19bbe:	66 90                	xchg   %ax,%ax
   19bc0:	4c 89 ea             	mov    %r13,%rdx
   19bc3:	4c 89 ee             	mov    %r13,%rsi
   19bc6:	48 89 ef             	mov    %rbp,%rdi
   19bc9:	e8 c2 d5 ff ff       	callq  17190 <mbedtls_mpi_mul_mpi>
   19bce:	85 c0                	test   %eax,%eax
   19bd0:	0f 85 62 ff ff ff    	jne    19b38 <mpi_miller_rabin+0x3f8>
   19bd6:	4c 89 f2             	mov    %r14,%rdx
   19bd9:	48 89 ee             	mov    %rbp,%rsi
   19bdc:	4c 89 ef             	mov    %r13,%rdi
   19bdf:	e8 1c e6 ff ff       	callq  18200 <mbedtls_mpi_mod_mpi>
   19be4:	85 c0                	test   %eax,%eax
   19be6:	0f 85 4c ff ff ff    	jne    19b38 <mpi_miller_rabin+0x3f8>
   19bec:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19bf1:	4c 89 e6             	mov    %r12,%rsi
   19bf4:	4c 89 ef             	mov    %r13,%rdi
   19bf7:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19bfe:	00 01 00 00 00 
   19c03:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19c0a:	01 00 00 00 
   19c0e:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   19c15:	00 01 00 00 00 
   19c1a:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19c21:	00 
   19c22:	e8 29 d0 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19c27:	85 c0                	test   %eax,%eax
   19c29:	0f 84 0f ff ff ff    	je     19b3e <mpi_miller_rabin+0x3fe>
   19c2f:	48 83 c3 01          	add    $0x1,%rbx
   19c33:	48 3b 5c 24 48       	cmp    0x48(%rsp),%rbx
   19c38:	0f 84 00 ff ff ff    	je     19b3e <mpi_miller_rabin+0x3fe>
   19c3e:	4c 89 fe             	mov    %r15,%rsi
   19c41:	4c 89 ef             	mov    %r13,%rdi
   19c44:	e8 07 d0 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19c49:	85 c0                	test   %eax,%eax
   19c4b:	0f 85 6f ff ff ff    	jne    19bc0 <mpi_miller_rabin+0x480>
   19c51:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   19c56:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19c5b:	4c 89 ef             	mov    %r13,%rdi
   19c5e:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19c63:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19c6a:	00 01 00 00 00 
   19c6f:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19c76:	01 00 00 00 
   19c7a:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   19c81:	00 01 00 00 00 
   19c86:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19c8d:	00 
   19c8e:	e8 bd cf ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19c93:	85 c0                	test   %eax,%eax
   19c95:	0f 85 ee fd ff ff    	jne    19a89 <mpi_miller_rabin+0x349>
   19c9b:	e9 c0 fe ff ff       	jmpq   19b60 <mpi_miller_rabin+0x420>
   19ca0:	e8 cb a5 fe ff       	callq  4270 <__stack_chk_fail@plt>
   19ca5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19cac:	00 00 00 00 

0000000000019cb0 <mbedtls_mpi_random>:
   19cb0:	f3 0f 1e fa          	endbr64 
   19cb4:	48 85 f6             	test   %rsi,%rsi
   19cb7:	78 6e                	js     19d27 <mbedtls_mpi_random+0x77>
   19cb9:	41 56                	push   %r14
   19cbb:	4d 89 c6             	mov    %r8,%r14
   19cbe:	41 55                	push   %r13
   19cc0:	49 89 cd             	mov    %rcx,%r13
   19cc3:	41 54                	push   %r12
   19cc5:	49 89 fc             	mov    %rdi,%r12
   19cc8:	48 89 d7             	mov    %rdx,%rdi
   19ccb:	55                   	push   %rbp
   19ccc:	48 89 f5             	mov    %rsi,%rbp
   19ccf:	53                   	push   %rbx
   19cd0:	48 89 d3             	mov    %rdx,%rbx
   19cd3:	e8 68 d0 ff ff       	callq  16d40 <mbedtls_mpi_cmp_int>
   19cd8:	85 c0                	test   %eax,%eax
   19cda:	7e 44                	jle    19d20 <mbedtls_mpi_random+0x70>
   19cdc:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   19ce0:	4c 89 e7             	mov    %r12,%rdi
   19ce3:	e8 88 c7 ff ff       	callq  16470 <mbedtls_mpi_resize_clear>
   19ce8:	85 c0                	test   %eax,%eax
   19cea:	74 0c                	je     19cf8 <mbedtls_mpi_random+0x48>
   19cec:	5b                   	pop    %rbx
   19ced:	5d                   	pop    %rbp
   19cee:	41 5c                	pop    %r12
   19cf0:	41 5d                	pop    %r13
   19cf2:	41 5e                	pop    %r14
   19cf4:	c3                   	retq   
   19cf5:	0f 1f 00             	nopl   (%rax)
   19cf8:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
   19cfd:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   19d01:	4d 89 f1             	mov    %r14,%r9
   19d04:	4d 89 e8             	mov    %r13,%r8
   19d07:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   19d0c:	5b                   	pop    %rbx
   19d0d:	48 89 ee             	mov    %rbp,%rsi
   19d10:	5d                   	pop    %rbp
   19d11:	41 5c                	pop    %r12
   19d13:	41 5d                	pop    %r13
   19d15:	41 5e                	pop    %r14
   19d17:	e9 f4 24 00 00       	jmpq   1c210 <mbedtls_mpi_core_random>
   19d1c:	0f 1f 40 00          	nopl   0x0(%rax)
   19d20:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   19d25:	eb c5                	jmp    19cec <mbedtls_mpi_random+0x3c>
   19d27:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   19d2c:	c3                   	retq   
   19d2d:	0f 1f 00             	nopl   (%rax)

0000000000019d30 <mbedtls_mpi_inv_mod>:
   19d30:	f3 0f 1e fa          	endbr64 
   19d34:	41 57                	push   %r15
   19d36:	41 56                	push   %r14
   19d38:	49 89 f6             	mov    %rsi,%r14
   19d3b:	41 55                	push   %r13
   19d3d:	41 54                	push   %r12
   19d3f:	55                   	push   %rbp
   19d40:	53                   	push   %rbx
   19d41:	48 89 d3             	mov    %rdx,%rbx
   19d44:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   19d4b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   19d50:	4c 8d a4 24 60 01 00 	lea    0x160(%rsp),%r12
   19d57:	00 
   19d58:	48 89 d7             	mov    %rdx,%rdi
   19d5b:	4c 89 e6             	mov    %r12,%rsi
   19d5e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19d65:	00 00 
   19d67:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   19d6e:	00 
   19d6f:	31 c0                	xor    %eax,%eax
   19d71:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   19d78:	00 
   19d79:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
   19d80:	00 01 00 00 00 
   19d85:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   19d8c:	01 00 00 00 
   19d90:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   19d97:	00 01 00 00 00 
   19d9c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19da1:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   19da8:	00 
   19da9:	e8 a2 ce ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19dae:	85 c0                	test   %eax,%eax
   19db0:	0f 8e 2a 05 00 00    	jle    1a2e0 <mbedtls_mpi_inv_mod+0x5b0>
   19db6:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   19dbb:	48 89 da             	mov    %rbx,%rdx
   19dbe:	4c 89 f6             	mov    %r14,%rsi
   19dc1:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   19dc8:	00 
   19dc9:	48 89 ef             	mov    %rbp,%rdi
   19dcc:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   19dd3:	00 00 
   19dd5:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   19ddc:	00 00 
   19dde:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
   19de5:	01 00 00 00 
   19de9:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
   19df0:	00 00 00 00 00 
   19df5:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   19dfc:	00 00 00 00 00 
   19e01:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   19e08:	01 00 00 00 
   19e0c:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
   19e13:	00 00 00 00 00 
   19e18:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
   19e1f:	00 00 00 00 00 
   19e24:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
   19e2b:	01 00 00 00 
   19e2f:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   19e36:	00 00 00 00 00 
   19e3b:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   19e42:	00 00 00 00 00 
   19e47:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   19e4e:	00 
   19e4f:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19e56:	00 00 
   19e58:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   19e5f:	00 00 
   19e61:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
   19e68:	01 00 00 00 
   19e6c:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   19e73:	00 00 00 00 00 
   19e78:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
   19e7f:	00 00 00 00 00 
   19e84:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19e8b:	01 00 00 00 
   19e8f:	48 c7 84 24 08 01 00 	movq   $0x0,0x108(%rsp)
   19e96:	00 00 00 00 00 
   19e9b:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
   19ea2:	00 00 00 00 00 
   19ea7:	c7 84 24 20 01 00 00 	movl   $0x1,0x120(%rsp)
   19eae:	01 00 00 00 
   19eb2:	48 c7 84 24 28 01 00 	movq   $0x0,0x128(%rsp)
   19eb9:	00 00 00 00 00 
   19ebe:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   19ec5:	00 00 00 00 00 
   19eca:	c7 84 24 40 01 00 00 	movl   $0x1,0x140(%rsp)
   19ed1:	01 00 00 00 
   19ed5:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   19edc:	00 00 00 00 00 
   19ee1:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
   19ee8:	00 00 00 00 00 
   19eed:	e8 9e f4 ff ff       	callq  19390 <mbedtls_mpi_gcd>
   19ef2:	85 c0                	test   %eax,%eax
   19ef4:	75 48                	jne    19f3e <mbedtls_mpi_inv_mod+0x20e>
   19ef6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19efb:	4c 89 e6             	mov    %r12,%rsi
   19efe:	48 89 ef             	mov    %rbp,%rdi
   19f01:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
   19f08:	00 01 00 00 00 
   19f0d:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   19f14:	01 00 00 00 
   19f18:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   19f1f:	00 01 00 00 00 
   19f24:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   19f2b:	00 
   19f2c:	e8 1f cd ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   19f31:	85 c0                	test   %eax,%eax
   19f33:	0f 84 ef 00 00 00    	je     1a028 <mbedtls_mpi_inv_mod+0x2f8>
   19f39:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   19f3e:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   19f43:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   19f4a:	00 
   19f4b:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   19f52:	00 
   19f53:	48 8d 8c 24 00 01 00 	lea    0x100(%rsp),%rcx
   19f5a:	00 
   19f5b:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
   19f62:	00 
   19f63:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   19f68:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
   19f6f:	00 
   19f70:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
   19f77:	00 
   19f78:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
   19f7f:	00 
   19f80:	4c 89 ef             	mov    %r13,%rdi
   19f83:	89 44 24 10          	mov    %eax,0x10(%rsp)
   19f87:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
   19f8c:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   19f91:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   19f96:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   19f9b:	e8 d0 c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19fa0:	4c 89 f7             	mov    %r14,%rdi
   19fa3:	e8 c8 c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19fa8:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   19fad:	4c 89 df             	mov    %r11,%rdi
   19fb0:	e8 bb c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19fb5:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   19fba:	4c 89 d7             	mov    %r10,%rdi
   19fbd:	e8 ae c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19fc2:	48 89 ef             	mov    %rbp,%rdi
   19fc5:	e8 a6 c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19fca:	4c 89 ff             	mov    %r15,%rdi
   19fcd:	e8 9e c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19fd2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19fd7:	e8 94 c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19fdc:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   19fe1:	4c 89 c7             	mov    %r8,%rdi
   19fe4:	e8 87 c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19fe9:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   19fee:	4c 89 cf             	mov    %r9,%rdi
   19ff1:	e8 7a c3 ff ff       	callq  16370 <mbedtls_mpi_free>
   19ff6:	8b 44 24 10          	mov    0x10(%rsp),%eax
   19ffa:	48 8b 8c 24 88 01 00 	mov    0x188(%rsp),%rcx
   1a001:	00 
   1a002:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1a009:	00 00 
   1a00b:	0f 85 3e 05 00 00    	jne    1a54f <mbedtls_mpi_inv_mod+0x81f>
   1a011:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   1a018:	5b                   	pop    %rbx
   1a019:	5d                   	pop    %rbp
   1a01a:	41 5c                	pop    %r12
   1a01c:	41 5d                	pop    %r13
   1a01e:	41 5e                	pop    %r14
   1a020:	41 5f                	pop    %r15
   1a022:	c3                   	retq   
   1a023:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a028:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   1a02d:	4c 89 f6             	mov    %r14,%rsi
   1a030:	48 89 da             	mov    %rbx,%rdx
   1a033:	4c 89 ef             	mov    %r13,%rdi
   1a036:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   1a03d:	00 
   1a03e:	e8 bd e1 ff ff       	callq  18200 <mbedtls_mpi_mod_mpi>
   1a043:	85 c0                	test   %eax,%eax
   1a045:	0f 85 00 ff ff ff    	jne    19f4b <mbedtls_mpi_inv_mod+0x21b>
   1a04b:	4c 89 ee             	mov    %r13,%rsi
   1a04e:	4c 89 f7             	mov    %r14,%rdi
   1a051:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   1a058:	00 
   1a059:	e8 a2 c5 ff ff       	callq  16600 <mbedtls_mpi_copy>
   1a05e:	85 c0                	test   %eax,%eax
   1a060:	0f 85 ed fe ff ff    	jne    19f53 <mbedtls_mpi_inv_mod+0x223>
   1a066:	48 89 de             	mov    %rbx,%rsi
   1a069:	4c 89 ff             	mov    %r15,%rdi
   1a06c:	e8 8f c5 ff ff       	callq  16600 <mbedtls_mpi_copy>
   1a071:	85 c0                	test   %eax,%eax
   1a073:	0f 85 da fe ff ff    	jne    19f53 <mbedtls_mpi_inv_mod+0x223>
   1a079:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   1a080:	00 
   1a081:	48 89 de             	mov    %rbx,%rsi
   1a084:	48 89 c7             	mov    %rax,%rdi
   1a087:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a08c:	e8 6f c5 ff ff       	callq  16600 <mbedtls_mpi_copy>
   1a091:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
   1a098:	00 
   1a099:	85 c0                	test   %eax,%eax
   1a09b:	0f 85 c7 fe ff ff    	jne    19f68 <mbedtls_mpi_inv_mod+0x238>
   1a0a1:	4c 89 df             	mov    %r11,%rdi
   1a0a4:	be 01 00 00 00       	mov    $0x1,%esi
   1a0a9:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   1a0ae:	e8 bd c6 ff ff       	callq  16770 <mbedtls_mpi_lset>
   1a0b3:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1a0b8:	85 c0                	test   %eax,%eax
   1a0ba:	0f 85 a8 fe ff ff    	jne    19f68 <mbedtls_mpi_inv_mod+0x238>
   1a0c0:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
   1a0c7:	00 
   1a0c8:	31 f6                	xor    %esi,%esi
   1a0ca:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   1a0cf:	4c 89 d7             	mov    %r10,%rdi
   1a0d2:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1a0d7:	e8 94 c6 ff ff       	callq  16770 <mbedtls_mpi_lset>
   1a0dc:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1a0e1:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1a0e6:	85 c0                	test   %eax,%eax
   1a0e8:	0f 85 82 fe ff ff    	jne    19f70 <mbedtls_mpi_inv_mod+0x240>
   1a0ee:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
   1a0f5:	00 
   1a0f6:	31 f6                	xor    %esi,%esi
   1a0f8:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   1a0fd:	4c 89 c7             	mov    %r8,%rdi
   1a100:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   1a105:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   1a10a:	e8 61 c6 ff ff       	callq  16770 <mbedtls_mpi_lset>
   1a10f:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   1a114:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   1a119:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
   1a120:	00 
   1a121:	85 c0                	test   %eax,%eax
   1a123:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a128:	0f 85 52 fe ff ff    	jne    19f80 <mbedtls_mpi_inv_mod+0x250>
   1a12e:	4c 89 cf             	mov    %r9,%rdi
   1a131:	be 01 00 00 00       	mov    $0x1,%esi
   1a136:	4c 89 5c 24 38       	mov    %r11,0x38(%rsp)
   1a13b:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   1a140:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   1a145:	e8 26 c6 ff ff       	callq  16770 <mbedtls_mpi_lset>
   1a14a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1a14f:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   1a154:	85 c0                	test   %eax,%eax
   1a156:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   1a15b:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
   1a160:	0f 85 1a fe ff ff    	jne    19f80 <mbedtls_mpi_inv_mod+0x250>
   1a166:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   1a16b:	4c 89 c3             	mov    %r8,%rbx
   1a16e:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   1a173:	4c 89 cd             	mov    %r9,%rbp
   1a176:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1a17b:	4d 89 d4             	mov    %r10,%r12
   1a17e:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   1a183:	4d 89 de             	mov    %r11,%r14
   1a186:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   1a18d:	00 
   1a18e:	f6 07 01             	testb  $0x1,(%rdi)
   1a191:	0f 85 b3 00 00 00    	jne    1a24a <mbedtls_mpi_inv_mod+0x51a>
   1a197:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   1a19e:	00 
   1a19f:	48 85 f6             	test   %rsi,%rsi
   1a1a2:	0f 85 6c 01 00 00    	jne    1a314 <mbedtls_mpi_inv_mod+0x5e4>
   1a1a8:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   1a1af:	00 
   1a1b0:	f6 00 01             	testb  $0x1,(%rax)
   1a1b3:	75 0d                	jne    1a1c2 <mbedtls_mpi_inv_mod+0x492>
   1a1b5:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   1a1bc:	00 
   1a1bd:	f6 00 01             	testb  $0x1,(%rax)
   1a1c0:	74 36                	je     1a1f8 <mbedtls_mpi_inv_mod+0x4c8>
   1a1c2:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a1c7:	4c 89 fa             	mov    %r15,%rdx
   1a1ca:	4c 89 f6             	mov    %r14,%rsi
   1a1cd:	4c 89 f7             	mov    %r14,%rdi
   1a1d0:	e8 1b ce ff ff       	callq  16ff0 <add_sub_mpi>
   1a1d5:	85 c0                	test   %eax,%eax
   1a1d7:	0f 85 9d 01 00 00    	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a1dd:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1a1e2:	4c 89 ea             	mov    %r13,%rdx
   1a1e5:	4c 89 e6             	mov    %r12,%rsi
   1a1e8:	4c 89 e7             	mov    %r12,%rdi
   1a1eb:	e8 00 ce ff ff       	callq  16ff0 <add_sub_mpi>
   1a1f0:	85 c0                	test   %eax,%eax
   1a1f2:	0f 85 82 01 00 00    	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a1f8:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1a1ff:	00 
   1a200:	48 85 f6             	test   %rsi,%rsi
   1a203:	0f 85 1a 01 00 00    	jne    1a323 <mbedtls_mpi_inv_mod+0x5f3>
   1a209:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   1a210:	00 
   1a211:	48 85 f6             	test   %rsi,%rsi
   1a214:	0f 84 6c ff ff ff    	je     1a186 <mbedtls_mpi_inv_mod+0x456>
   1a21a:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   1a221:	00 
   1a222:	ba 01 00 00 00       	mov    $0x1,%edx
   1a227:	e8 14 19 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1a22c:	e9 55 ff ff ff       	jmpq   1a186 <mbedtls_mpi_inv_mod+0x456>
   1a231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a238:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
   1a23f:	00 
   1a240:	ba 01 00 00 00       	mov    $0x1,%edx
   1a245:	e8 f6 18 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1a24a:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
   1a251:	00 
   1a252:	f6 07 01             	testb  $0x1,(%rdi)
   1a255:	0f 85 3a 01 00 00    	jne    1a395 <mbedtls_mpi_inv_mod+0x665>
   1a25b:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
   1a262:	00 
   1a263:	48 85 f6             	test   %rsi,%rsi
   1a266:	0f 85 84 00 00 00    	jne    1a2f0 <mbedtls_mpi_inv_mod+0x5c0>
   1a26c:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   1a273:	00 
   1a274:	f6 00 01             	testb  $0x1,(%rax)
   1a277:	75 0d                	jne    1a286 <mbedtls_mpi_inv_mod+0x556>
   1a279:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
   1a280:	00 
   1a281:	f6 00 01             	testb  $0x1,(%rax)
   1a284:	74 36                	je     1a2bc <mbedtls_mpi_inv_mod+0x58c>
   1a286:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a28b:	4c 89 fa             	mov    %r15,%rdx
   1a28e:	48 89 de             	mov    %rbx,%rsi
   1a291:	48 89 df             	mov    %rbx,%rdi
   1a294:	e8 57 cd ff ff       	callq  16ff0 <add_sub_mpi>
   1a299:	85 c0                	test   %eax,%eax
   1a29b:	0f 85 d9 00 00 00    	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a2a1:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1a2a6:	4c 89 ea             	mov    %r13,%rdx
   1a2a9:	48 89 ee             	mov    %rbp,%rsi
   1a2ac:	48 89 ef             	mov    %rbp,%rdi
   1a2af:	e8 3c cd ff ff       	callq  16ff0 <add_sub_mpi>
   1a2b4:	85 c0                	test   %eax,%eax
   1a2b6:	0f 85 be 00 00 00    	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a2bc:	48 8b b4 24 28 01 00 	mov    0x128(%rsp),%rsi
   1a2c3:	00 
   1a2c4:	48 85 f6             	test   %rsi,%rsi
   1a2c7:	75 37                	jne    1a300 <mbedtls_mpi_inv_mod+0x5d0>
   1a2c9:	48 8b b4 24 48 01 00 	mov    0x148(%rsp),%rsi
   1a2d0:	00 
   1a2d1:	48 85 f6             	test   %rsi,%rsi
   1a2d4:	0f 84 70 ff ff ff    	je     1a24a <mbedtls_mpi_inv_mod+0x51a>
   1a2da:	e9 59 ff ff ff       	jmpq   1a238 <mbedtls_mpi_inv_mod+0x508>
   1a2df:	90                   	nop
   1a2e0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1a2e5:	e9 10 fd ff ff       	jmpq   19ffa <mbedtls_mpi_inv_mod+0x2ca>
   1a2ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a2f0:	ba 01 00 00 00       	mov    $0x1,%edx
   1a2f5:	e8 46 18 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1a2fa:	e9 6d ff ff ff       	jmpq   1a26c <mbedtls_mpi_inv_mod+0x53c>
   1a2ff:	90                   	nop
   1a300:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
   1a307:	00 
   1a308:	ba 01 00 00 00       	mov    $0x1,%edx
   1a30d:	e8 2e 18 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1a312:	eb b5                	jmp    1a2c9 <mbedtls_mpi_inv_mod+0x599>
   1a314:	ba 01 00 00 00       	mov    $0x1,%edx
   1a319:	e8 22 18 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1a31e:	e9 85 fe ff ff       	jmpq   1a1a8 <mbedtls_mpi_inv_mod+0x478>
   1a323:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
   1a32a:	00 
   1a32b:	ba 01 00 00 00       	mov    $0x1,%edx
   1a330:	e8 0b 18 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1a335:	e9 cf fe ff ff       	jmpq   1a209 <mbedtls_mpi_inv_mod+0x4d9>
   1a33a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1a33f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1a344:	48 89 f7             	mov    %rsi,%rdi
   1a347:	e8 a4 cc ff ff       	callq  16ff0 <add_sub_mpi>
   1a34c:	85 c0                	test   %eax,%eax
   1a34e:	75 2a                	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a350:	83 c9 ff             	or     $0xffffffff,%ecx
   1a353:	4c 89 f2             	mov    %r14,%rdx
   1a356:	48 89 de             	mov    %rbx,%rsi
   1a359:	48 89 df             	mov    %rbx,%rdi
   1a35c:	e8 8f cc ff ff       	callq  16ff0 <add_sub_mpi>
   1a361:	85 c0                	test   %eax,%eax
   1a363:	75 15                	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a365:	83 c9 ff             	or     $0xffffffff,%ecx
   1a368:	4c 89 e2             	mov    %r12,%rdx
   1a36b:	48 89 ee             	mov    %rbp,%rsi
   1a36e:	48 89 ef             	mov    %rbp,%rdi
   1a371:	e8 7a cc ff ff       	callq  16ff0 <add_sub_mpi>
   1a376:	85 c0                	test   %eax,%eax
   1a378:	74 6d                	je     1a3e7 <mbedtls_mpi_inv_mod+0x6b7>
   1a37a:	4d 89 f3             	mov    %r14,%r11
   1a37d:	49 89 e9             	mov    %rbp,%r9
   1a380:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   1a385:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a38a:	4d 89 e2             	mov    %r12,%r10
   1a38d:	49 89 d8             	mov    %rbx,%r8
   1a390:	e9 eb fb ff ff       	jmpq   19f80 <mbedtls_mpi_inv_mod+0x250>
   1a395:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1a39a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1a39f:	4c 89 ce             	mov    %r9,%rsi
   1a3a2:	e8 a9 c8 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1a3a7:	83 c9 ff             	or     $0xffffffff,%ecx
   1a3aa:	85 c0                	test   %eax,%eax
   1a3ac:	78 8c                	js     1a33a <mbedtls_mpi_inv_mod+0x60a>
   1a3ae:	4c 89 ca             	mov    %r9,%rdx
   1a3b1:	48 89 fe             	mov    %rdi,%rsi
   1a3b4:	e8 37 cc ff ff       	callq  16ff0 <add_sub_mpi>
   1a3b9:	85 c0                	test   %eax,%eax
   1a3bb:	75 bd                	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a3bd:	83 c9 ff             	or     $0xffffffff,%ecx
   1a3c0:	48 89 da             	mov    %rbx,%rdx
   1a3c3:	4c 89 f6             	mov    %r14,%rsi
   1a3c6:	4c 89 f7             	mov    %r14,%rdi
   1a3c9:	e8 22 cc ff ff       	callq  16ff0 <add_sub_mpi>
   1a3ce:	85 c0                	test   %eax,%eax
   1a3d0:	75 a8                	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a3d2:	83 c9 ff             	or     $0xffffffff,%ecx
   1a3d5:	48 89 ea             	mov    %rbp,%rdx
   1a3d8:	4c 89 e6             	mov    %r12,%rsi
   1a3db:	4c 89 e7             	mov    %r12,%rdi
   1a3de:	e8 0d cc ff ff       	callq  16ff0 <add_sub_mpi>
   1a3e3:	85 c0                	test   %eax,%eax
   1a3e5:	75 93                	jne    1a37a <mbedtls_mpi_inv_mod+0x64a>
   1a3e7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a3ec:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1a3f1:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1a3f8:	00 00 00 00 00 
   1a3fd:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   1a404:	01 00 00 00 
   1a408:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1a40d:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   1a414:	00 01 00 00 00 
   1a419:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1a420:	00 
   1a421:	e8 2a c8 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1a426:	85 c0                	test   %eax,%eax
   1a428:	0f 85 58 fd ff ff    	jne    1a186 <mbedtls_mpi_inv_mod+0x456>
   1a42e:	4d 89 e2             	mov    %r12,%r10
   1a431:	49 89 d8             	mov    %rbx,%r8
   1a434:	4d 89 f3             	mov    %r14,%r11
   1a437:	49 89 e9             	mov    %rbp,%r9
   1a43a:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1a43f:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   1a444:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   1a449:	4c 89 c5             	mov    %r8,%rbp
   1a44c:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   1a451:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   1a456:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1a45b:	eb 1b                	jmp    1a478 <mbedtls_mpi_inv_mod+0x748>
   1a45d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a462:	48 89 da             	mov    %rbx,%rdx
   1a465:	48 89 ee             	mov    %rbp,%rsi
   1a468:	48 89 ef             	mov    %rbp,%rdi
   1a46b:	e8 80 cb ff ff       	callq  16ff0 <add_sub_mpi>
   1a470:	85 c0                	test   %eax,%eax
   1a472:	0f 85 dc 00 00 00    	jne    1a554 <mbedtls_mpi_inv_mod+0x824>
   1a478:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a47d:	4c 89 e6             	mov    %r12,%rsi
   1a480:	48 89 ef             	mov    %rbp,%rdi
   1a483:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1a48a:	00 00 00 00 00 
   1a48f:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   1a496:	01 00 00 00 
   1a49a:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   1a4a1:	00 01 00 00 00 
   1a4a6:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1a4ad:	00 
   1a4ae:	e8 9d c7 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1a4b3:	85 c0                	test   %eax,%eax
   1a4b5:	78 a6                	js     1a45d <mbedtls_mpi_inv_mod+0x72d>
   1a4b7:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a4bc:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1a4c1:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a4c6:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1a4cb:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1a4d0:	48 89 fd             	mov    %rdi,%rbp
   1a4d3:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1a4d8:	4d 89 dc             	mov    %r11,%r12
   1a4db:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   1a4e0:	eb 15                	jmp    1a4f7 <mbedtls_mpi_inv_mod+0x7c7>
   1a4e2:	83 c9 ff             	or     $0xffffffff,%ecx
   1a4e5:	48 89 da             	mov    %rbx,%rdx
   1a4e8:	48 89 ee             	mov    %rbp,%rsi
   1a4eb:	48 89 ef             	mov    %rbp,%rdi
   1a4ee:	e8 fd ca ff ff       	callq  16ff0 <add_sub_mpi>
   1a4f3:	85 c0                	test   %eax,%eax
   1a4f5:	75 79                	jne    1a570 <mbedtls_mpi_inv_mod+0x840>
   1a4f7:	48 89 de             	mov    %rbx,%rsi
   1a4fa:	48 89 ef             	mov    %rbp,%rdi
   1a4fd:	e8 4e c7 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1a502:	85 c0                	test   %eax,%eax
   1a504:	79 dc                	jns    1a4e2 <mbedtls_mpi_inv_mod+0x7b2>
   1a506:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1a50b:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1a510:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1a515:	48 89 fe             	mov    %rdi,%rsi
   1a518:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1a51d:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   1a522:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1a527:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   1a52c:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   1a531:	e8 ca c0 ff ff       	callq  16600 <mbedtls_mpi_copy>
   1a536:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1a53b:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1a540:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a545:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   1a54a:	e9 31 fa ff ff       	jmpq   19f80 <mbedtls_mpi_inv_mod+0x250>
   1a54f:	e8 1c 9d fe ff       	callq  4270 <__stack_chk_fail@plt>
   1a554:	49 89 e8             	mov    %rbp,%r8
   1a557:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1a55c:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a561:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a566:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1a56b:	e9 10 fa ff ff       	jmpq   19f80 <mbedtls_mpi_inv_mod+0x250>
   1a570:	49 89 e8             	mov    %rbp,%r8
   1a573:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1a578:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   1a57d:	4d 89 e3             	mov    %r12,%r11
   1a580:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1a585:	e9 f6 f9 ff ff       	jmpq   19f80 <mbedtls_mpi_inv_mod+0x250>
   1a58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001a590 <mbedtls_mpi_is_prime_ext>:
   1a590:	f3 0f 1e fa          	endbr64 
   1a594:	41 55                	push   %r13
   1a596:	49 89 cd             	mov    %rcx,%r13
   1a599:	41 54                	push   %r12
   1a59b:	49 89 d4             	mov    %rdx,%r12
   1a59e:	55                   	push   %rbp
   1a59f:	53                   	push   %rbx
   1a5a0:	89 f3                	mov    %esi,%ebx
   1a5a2:	48 83 ec 58          	sub    $0x58,%rsp
   1a5a6:	4c 8b 57 10          	mov    0x10(%rdi),%r10
   1a5aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a5b1:	00 00 
   1a5b3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a5b8:	31 c0                	xor    %eax,%eax
   1a5ba:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1a5be:	4c 8d 4c 24 20       	lea    0x20(%rsp),%r9
   1a5c3:	48 89 e5             	mov    %rsp,%rbp
   1a5c6:	4c 89 ce             	mov    %r9,%rsi
   1a5c9:	48 89 ef             	mov    %rbp,%rdi
   1a5cc:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   1a5d3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a5d8:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   1a5dd:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1a5e2:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a5e9:	00 00 
   1a5eb:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   1a5f2:	00 
   1a5f3:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1a5fa:	00 00 
   1a5fc:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a601:	e8 4a c6 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1a606:	85 c0                	test   %eax,%eax
   1a608:	74 7e                	je     1a688 <mbedtls_mpi_is_prime_ext+0xf8>
   1a60a:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   1a611:	00 00 
   1a613:	4c 89 ce             	mov    %r9,%rsi
   1a616:	e8 35 c6 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1a61b:	85 c0                	test   %eax,%eax
   1a61d:	74 69                	je     1a688 <mbedtls_mpi_is_prime_ext+0xf8>
   1a61f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   1a626:	00 00 
   1a628:	4c 89 ce             	mov    %r9,%rsi
   1a62b:	e8 20 c6 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1a630:	85 c0                	test   %eax,%eax
   1a632:	74 4c                	je     1a680 <mbedtls_mpi_is_prime_ext+0xf0>
   1a634:	41 f6 02 01          	testb  $0x1,(%r10)
   1a638:	74 4e                	je     1a688 <mbedtls_mpi_is_prime_ext+0xf8>
   1a63a:	e8 d1 e1 ff ff       	callq  18810 <mpi_check_small_factors.part.0>
   1a63f:	85 c0                	test   %eax,%eax
   1a641:	74 25                	je     1a668 <mbedtls_mpi_is_prime_ext+0xd8>
   1a643:	83 f8 01             	cmp    $0x1,%eax
   1a646:	74 38                	je     1a680 <mbedtls_mpi_is_prime_ext+0xf0>
   1a648:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   1a64d:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1a654:	00 00 
   1a656:	75 37                	jne    1a68f <mbedtls_mpi_is_prime_ext+0xff>
   1a658:	48 83 c4 58          	add    $0x58,%rsp
   1a65c:	5b                   	pop    %rbx
   1a65d:	5d                   	pop    %rbp
   1a65e:	41 5c                	pop    %r12
   1a660:	41 5d                	pop    %r13
   1a662:	c3                   	retq   
   1a663:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a668:	48 63 f3             	movslq %ebx,%rsi
   1a66b:	4c 89 e9             	mov    %r13,%rcx
   1a66e:	4c 89 e2             	mov    %r12,%rdx
   1a671:	48 89 ef             	mov    %rbp,%rdi
   1a674:	e8 c7 f0 ff ff       	callq  19740 <mpi_miller_rabin>
   1a679:	eb cd                	jmp    1a648 <mbedtls_mpi_is_prime_ext+0xb8>
   1a67b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a680:	31 c0                	xor    %eax,%eax
   1a682:	eb c4                	jmp    1a648 <mbedtls_mpi_is_prime_ext+0xb8>
   1a684:	0f 1f 40 00          	nopl   0x0(%rax)
   1a688:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1a68d:	eb b9                	jmp    1a648 <mbedtls_mpi_is_prime_ext+0xb8>
   1a68f:	e8 dc 9b fe ff       	callq  4270 <__stack_chk_fail@plt>
   1a694:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a69b:	00 00 00 00 
   1a69f:	90                   	nop

000000000001a6a0 <mbedtls_mpi_gen_prime>:
   1a6a0:	f3 0f 1e fa          	endbr64 
   1a6a4:	41 57                	push   %r15
   1a6a6:	41 56                	push   %r14
   1a6a8:	41 55                	push   %r13
   1a6aa:	41 54                	push   %r12
   1a6ac:	55                   	push   %rbp
   1a6ad:	53                   	push   %rbx
   1a6ae:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1a6b5:	48 89 34 24          	mov    %rsi,(%rsp)
   1a6b9:	89 54 24 14          	mov    %edx,0x14(%rsp)
   1a6bd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a6c4:	00 00 
   1a6c6:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1a6cb:	31 c0                	xor    %eax,%eax
   1a6cd:	48 8d 46 fd          	lea    -0x3(%rsi),%rax
   1a6d1:	48 3d fd 1f 00 00    	cmp    $0x1ffd,%rax
   1a6d7:	0f 87 3f 04 00 00    	ja     1ab1c <mbedtls_mpi_gen_prime+0x47c>
   1a6dd:	31 c0                	xor    %eax,%eax
   1a6df:	40 f6 c6 3f          	test   $0x3f,%sil
   1a6e3:	49 89 ff             	mov    %rdi,%r15
   1a6e6:	48 89 cb             	mov    %rcx,%rbx
   1a6e9:	0f 95 c0             	setne  %al
   1a6ec:	89 d7                	mov    %edx,%edi
   1a6ee:	48 89 f1             	mov    %rsi,%rcx
   1a6f1:	48 c1 ee 06          	shr    $0x6,%rsi
   1a6f5:	48 01 f0             	add    %rsi,%rax
   1a6f8:	83 e7 02             	and    $0x2,%edi
   1a6fb:	4c 89 c5             	mov    %r8,%rbp
   1a6fe:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   1a705:	00 
   1a706:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1a70d:	00 00 
   1a70f:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a716:	00 00 
   1a718:	0f 85 02 01 00 00    	jne    1a820 <mbedtls_mpi_gen_prime+0x180>
   1a71e:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%rsp)
   1a725:	00 
   1a726:	48 81 f9 13 05 00 00 	cmp    $0x513,%rcx
   1a72d:	77 19                	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a72f:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%rsp)
   1a736:	00 
   1a737:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
   1a73e:	0f 86 1c 03 00 00    	jbe    1aa60 <mbedtls_mpi_gen_prime+0x3c0>
   1a744:	0f 1f 40 00          	nopl   0x0(%rax)
   1a748:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
   1a74f:	00 
   1a750:	48 c1 e0 06          	shl    $0x6,%rax
   1a754:	49 bd 84 64 de f9 33 	movabs $0xb504f333f9de6484,%r13
   1a75b:	f3 04 b5 
   1a75e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a763:	48 2b 04 24          	sub    (%rsp),%rax
   1a767:	4d 8d 74 24 f8       	lea    -0x8(%r12),%r14
   1a76c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a771:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a778:	48 89 e9             	mov    %rbp,%rcx
   1a77b:	48 89 da             	mov    %rbx,%rdx
   1a77e:	4c 89 e6             	mov    %r12,%rsi
   1a781:	4c 89 ff             	mov    %r15,%rdi
   1a784:	e8 47 ef ff ff       	callq  196d0 <mbedtls_mpi_fill_random>
   1a789:	85 c0                	test   %eax,%eax
   1a78b:	75 51                	jne    1a7de <mbedtls_mpi_gen_prime+0x13e>
   1a78d:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1a791:	4e 39 2c 37          	cmp    %r13,(%rdi,%r14,1)
   1a795:	76 e1                	jbe    1a778 <mbedtls_mpi_gen_prime+0xd8>
   1a797:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1a79c:	48 39 0c 24          	cmp    %rcx,(%rsp)
   1a7a0:	73 0d                	jae    1a7af <mbedtls_mpi_gen_prime+0x10f>
   1a7a2:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1a7a6:	48 85 f6             	test   %rsi,%rsi
   1a7a9:	0f 85 21 01 00 00    	jne    1a8d0 <mbedtls_mpi_gen_prime+0x230>
   1a7af:	48 8b 07             	mov    (%rdi),%rax
   1a7b2:	48 89 c2             	mov    %rax,%rdx
   1a7b5:	48 83 ca 01          	or     $0x1,%rdx
   1a7b9:	48 89 17             	mov    %rdx,(%rdi)
   1a7bc:	f6 44 24 14 01       	testb  $0x1,0x14(%rsp)
   1a7c1:	0f 85 21 01 00 00    	jne    1a8e8 <mbedtls_mpi_gen_prime+0x248>
   1a7c7:	8b 74 24 10          	mov    0x10(%rsp),%esi
   1a7cb:	48 89 e9             	mov    %rbp,%rcx
   1a7ce:	48 89 da             	mov    %rbx,%rdx
   1a7d1:	4c 89 ff             	mov    %r15,%rdi
   1a7d4:	e8 b7 fd ff ff       	callq  1a590 <mbedtls_mpi_is_prime_ext>
   1a7d9:	83 f8 f2             	cmp    $0xfffffff2,%eax
   1a7dc:	74 9a                	je     1a778 <mbedtls_mpi_gen_prime+0xd8>
   1a7de:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a7e3:	4c 89 e7             	mov    %r12,%rdi
   1a7e6:	89 04 24             	mov    %eax,(%rsp)
   1a7e9:	e8 82 bb ff ff       	callq  16370 <mbedtls_mpi_free>
   1a7ee:	8b 04 24             	mov    (%rsp),%eax
   1a7f1:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
   1a7f6:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1a7fd:	00 00 
   1a7ff:	0f 85 21 03 00 00    	jne    1ab26 <mbedtls_mpi_gen_prime+0x486>
   1a805:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1a80c:	5b                   	pop    %rbx
   1a80d:	5d                   	pop    %rbp
   1a80e:	41 5c                	pop    %r12
   1a810:	41 5d                	pop    %r13
   1a812:	41 5e                	pop    %r14
   1a814:	41 5f                	pop    %r15
   1a816:	c3                   	retq   
   1a817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a81e:	00 00 
   1a820:	48 8b 0c 24          	mov    (%rsp),%rcx
   1a824:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   1a82b:	00 
   1a82c:	48 81 f9 a9 05 00 00 	cmp    $0x5a9,%rcx
   1a833:	0f 87 0f ff ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a839:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%rsp)
   1a840:	00 
   1a841:	48 81 f9 7d 04 00 00 	cmp    $0x47d,%rcx
   1a848:	0f 87 fa fe ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a84e:	c7 44 24 10 06 00 00 	movl   $0x6,0x10(%rsp)
   1a855:	00 
   1a856:	48 81 f9 e7 03 00 00 	cmp    $0x3e7,%rcx
   1a85d:	0f 87 e5 fe ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a863:	c7 44 24 10 07 00 00 	movl   $0x7,0x10(%rsp)
   1a86a:	00 
   1a86b:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
   1a872:	0f 87 d0 fe ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a878:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
   1a87f:	00 
   1a880:	48 81 f9 ed 02 00 00 	cmp    $0x2ed,%rcx
   1a887:	0f 87 bb fe ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a88d:	c7 44 24 10 0d 00 00 	movl   $0xd,0x10(%rsp)
   1a894:	00 
   1a895:	48 81 f9 f3 01 00 00 	cmp    $0x1f3,%rcx
   1a89c:	0f 87 a6 fe ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a8a2:	c7 44 24 10 1c 00 00 	movl   $0x1c,0x10(%rsp)
   1a8a9:	00 
   1a8aa:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
   1a8b1:	0f 87 91 fe ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a8b7:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
   1a8be:	19 c9                	sbb    %ecx,%ecx
   1a8c0:	83 e1 0b             	and    $0xb,%ecx
   1a8c3:	83 c1 28             	add    $0x28,%ecx
   1a8c6:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   1a8ca:	e9 79 fe ff ff       	jmpq   1a748 <mbedtls_mpi_gen_prime+0xa8>
   1a8cf:	90                   	nop
   1a8d0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1a8d5:	e8 66 12 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1a8da:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1a8de:	e9 cc fe ff ff       	jmpq   1a7af <mbedtls_mpi_gen_prime+0x10f>
   1a8e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a8e8:	48 83 c8 03          	or     $0x3,%rax
   1a8ec:	ba 03 00 00 00       	mov    $0x3,%edx
   1a8f1:	4c 89 fe             	mov    %r15,%rsi
   1a8f4:	48 89 07             	mov    %rax,(%rdi)
   1a8f7:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1a8fc:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a901:	e8 3a da ff ff       	callq  18340 <mbedtls_mpi_mod_int>
   1a906:	85 c0                	test   %eax,%eax
   1a908:	0f 85 d5 fe ff ff    	jne    1a7e3 <mbedtls_mpi_gen_prime+0x143>
   1a90e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1a913:	48 85 c0             	test   %rax,%rax
   1a916:	0f 84 9b 01 00 00    	je     1aab7 <mbedtls_mpi_gen_prime+0x417>
   1a91c:	48 83 f8 01          	cmp    $0x1,%rax
   1a920:	0f 84 eb 01 00 00    	je     1ab11 <mbedtls_mpi_gen_prime+0x471>
   1a926:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a92b:	4c 89 fe             	mov    %r15,%rsi
   1a92e:	4c 89 e7             	mov    %r12,%rdi
   1a931:	e8 ca bc ff ff       	callq  16600 <mbedtls_mpi_copy>
   1a936:	85 c0                	test   %eax,%eax
   1a938:	0f 85 a5 fe ff ff    	jne    1a7e3 <mbedtls_mpi_gen_prime+0x143>
   1a93e:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1a943:	48 85 f6             	test   %rsi,%rsi
   1a946:	0f 85 b1 01 00 00    	jne    1aafd <mbedtls_mpi_gen_prime+0x45d>
   1a94c:	48 63 44 24 10       	movslq 0x10(%rsp),%rax
   1a951:	48 89 04 24          	mov    %rax,(%rsp)
   1a955:	e9 8d 00 00 00       	jmpq   1a9e7 <mbedtls_mpi_gen_prime+0x347>
   1a95a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a960:	83 f8 f2             	cmp    $0xfffffff2,%eax
   1a963:	0f 85 7a fe ff ff    	jne    1a7e3 <mbedtls_mpi_gen_prime+0x143>
   1a969:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
   1a96e:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   1a973:	4c 89 fe             	mov    %r15,%rsi
   1a976:	4c 89 ff             	mov    %r15,%rdi
   1a979:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a97e:	4c 89 ea             	mov    %r13,%rdx
   1a981:	48 c7 44 24 70 0c 00 	movq   $0xc,0x70(%rsp)
   1a988:	00 00 
   1a98a:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a991:	00 
   1a992:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1a999:	00 00 
   1a99b:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   1a9a0:	e8 4b c6 ff ff       	callq  16ff0 <add_sub_mpi>
   1a9a5:	85 c0                	test   %eax,%eax
   1a9a7:	0f 85 36 fe ff ff    	jne    1a7e3 <mbedtls_mpi_gen_prime+0x143>
   1a9ad:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a9b2:	4c 89 ea             	mov    %r13,%rdx
   1a9b5:	4c 89 e6             	mov    %r12,%rsi
   1a9b8:	4c 89 e7             	mov    %r12,%rdi
   1a9bb:	48 c7 44 24 70 06 00 	movq   $0x6,0x70(%rsp)
   1a9c2:	00 00 
   1a9c4:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a9cb:	00 
   1a9cc:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1a9d3:	00 00 
   1a9d5:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   1a9da:	e8 11 c6 ff ff       	callq  16ff0 <add_sub_mpi>
   1a9df:	85 c0                	test   %eax,%eax
   1a9e1:	0f 85 fc fd ff ff    	jne    1a7e3 <mbedtls_mpi_gen_prime+0x143>
   1a9e7:	49 8b 47 10          	mov    0x10(%r15),%rax
   1a9eb:	f6 00 01             	testb  $0x1,(%rax)
   1a9ee:	0f 84 75 ff ff ff    	je     1a969 <mbedtls_mpi_gen_prime+0x2c9>
   1a9f4:	4c 89 ff             	mov    %r15,%rdi
   1a9f7:	e8 14 de ff ff       	callq  18810 <mpi_check_small_factors.part.0>
   1a9fc:	85 c0                	test   %eax,%eax
   1a9fe:	0f 85 5c ff ff ff    	jne    1a960 <mbedtls_mpi_gen_prime+0x2c0>
   1aa04:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1aa09:	f6 00 01             	testb  $0x1,(%rax)
   1aa0c:	0f 84 57 ff ff ff    	je     1a969 <mbedtls_mpi_gen_prime+0x2c9>
   1aa12:	4c 89 e7             	mov    %r12,%rdi
   1aa15:	e8 f6 dd ff ff       	callq  18810 <mpi_check_small_factors.part.0>
   1aa1a:	85 c0                	test   %eax,%eax
   1aa1c:	0f 85 3e ff ff ff    	jne    1a960 <mbedtls_mpi_gen_prime+0x2c0>
   1aa22:	48 8b 34 24          	mov    (%rsp),%rsi
   1aa26:	48 89 e9             	mov    %rbp,%rcx
   1aa29:	48 89 da             	mov    %rbx,%rdx
   1aa2c:	4c 89 ff             	mov    %r15,%rdi
   1aa2f:	e8 0c ed ff ff       	callq  19740 <mpi_miller_rabin>
   1aa34:	85 c0                	test   %eax,%eax
   1aa36:	0f 85 24 ff ff ff    	jne    1a960 <mbedtls_mpi_gen_prime+0x2c0>
   1aa3c:	48 8b 34 24          	mov    (%rsp),%rsi
   1aa40:	48 89 e9             	mov    %rbp,%rcx
   1aa43:	48 89 da             	mov    %rbx,%rdx
   1aa46:	4c 89 e7             	mov    %r12,%rdi
   1aa49:	e8 f2 ec ff ff       	callq  19740 <mpi_miller_rabin>
   1aa4e:	85 c0                	test   %eax,%eax
   1aa50:	0f 85 0a ff ff ff    	jne    1a960 <mbedtls_mpi_gen_prime+0x2c0>
   1aa56:	e9 88 fd ff ff       	jmpq   1a7e3 <mbedtls_mpi_gen_prime+0x143>
   1aa5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1aa60:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   1aa67:	00 
   1aa68:	48 81 f9 89 02 00 00 	cmp    $0x289,%rcx
   1aa6f:	0f 87 d3 fc ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1aa75:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
   1aa7c:	00 
   1aa7d:	48 81 f9 5d 01 00 00 	cmp    $0x15d,%rcx
   1aa84:	0f 87 be fc ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1aa8a:	c7 44 24 10 0c 00 00 	movl   $0xc,0x10(%rsp)
   1aa91:	00 
   1aa92:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
   1aa99:	0f 87 a9 fc ff ff    	ja     1a748 <mbedtls_mpi_gen_prime+0xa8>
   1aa9f:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
   1aaa6:	19 c9                	sbb    %ecx,%ecx
   1aaa8:	83 e1 09             	and    $0x9,%ecx
   1aaab:	83 c1 12             	add    $0x12,%ecx
   1aaae:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   1aab2:	e9 91 fc ff ff       	jmpq   1a748 <mbedtls_mpi_gen_prime+0xa8>
   1aab7:	48 c7 44 24 70 08 00 	movq   $0x8,0x70(%rsp)
   1aabe:	00 00 
   1aac0:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
   1aac5:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1aaca:	4c 89 fe             	mov    %r15,%rsi
   1aacd:	4c 89 ff             	mov    %r15,%rdi
   1aad0:	b9 01 00 00 00       	mov    $0x1,%ecx
   1aad5:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1aadc:	00 
   1aadd:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1aae4:	00 00 
   1aae6:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1aaeb:	e8 00 c5 ff ff       	callq  16ff0 <add_sub_mpi>
   1aaf0:	85 c0                	test   %eax,%eax
   1aaf2:	0f 84 2e fe ff ff    	je     1a926 <mbedtls_mpi_gen_prime+0x286>
   1aaf8:	e9 e6 fc ff ff       	jmpq   1a7e3 <mbedtls_mpi_gen_prime+0x143>
   1aafd:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1ab02:	ba 01 00 00 00       	mov    $0x1,%edx
   1ab07:	e8 34 10 00 00       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1ab0c:	e9 3b fe ff ff       	jmpq   1a94c <mbedtls_mpi_gen_prime+0x2ac>
   1ab11:	48 c7 44 24 70 04 00 	movq   $0x4,0x70(%rsp)
   1ab18:	00 00 
   1ab1a:	eb a4                	jmp    1aac0 <mbedtls_mpi_gen_prime+0x420>
   1ab1c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1ab21:	e9 cb fc ff ff       	jmpq   1a7f1 <mbedtls_mpi_gen_prime+0x151>
   1ab26:	e8 45 97 fe ff       	callq  4270 <__stack_chk_fail@plt>
   1ab2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ab30 <mbedtls_mpi_self_test>:
   1ab30:	f3 0f 1e fa          	endbr64 
   1ab34:	41 57                	push   %r15
   1ab36:	48 8d 15 d3 bd 00 00 	lea    0xbdd3(%rip),%rdx        # 26910 <K+0x330>
   1ab3d:	be 10 00 00 00       	mov    $0x10,%esi
   1ab42:	41 56                	push   %r14
   1ab44:	41 55                	push   %r13
   1ab46:	41 54                	push   %r12
   1ab48:	55                   	push   %rbp
   1ab49:	53                   	push   %rbx
   1ab4a:	89 fb                	mov    %edi,%ebx
   1ab4c:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1ab53:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ab5a:	00 00 
   1ab5c:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   1ab63:	00 
   1ab64:	31 c0                	xor    %eax,%eax
   1ab66:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   1ab6b:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   1ab72:	00 
   1ab73:	48 89 ef             	mov    %rbp,%rdi
   1ab76:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1ab7d:	00 
   1ab7e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1ab85:	00 00 
   1ab87:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1ab8e:	00 00 
   1ab90:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   1ab97:	00 00 
   1ab99:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   1aba0:	00 00 
   1aba2:	c7 44 24 70 01 00 00 	movl   $0x1,0x70(%rsp)
   1aba9:	00 
   1abaa:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   1abb1:	00 00 
   1abb3:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   1abba:	00 00 00 00 00 
   1abbf:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   1abc6:	01 00 00 00 
   1abca:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   1abd1:	00 00 00 00 00 
   1abd6:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   1abdd:	00 00 00 00 00 
   1abe2:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   1abe9:	01 00 00 00 
   1abed:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   1abf4:	00 00 00 00 00 
   1abf9:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   1ac00:	00 00 00 00 00 
   1ac05:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   1ac0c:	01 00 00 00 
   1ac10:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1ac17:	00 00 00 00 00 
   1ac1c:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1ac23:	00 00 00 00 00 
   1ac28:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   1ac2f:	01 00 00 00 
   1ac33:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1ac3a:	00 00 00 00 00 
   1ac3f:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   1ac46:	00 00 00 00 00 
   1ac4b:	e8 f0 c7 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1ac50:	85 c0                	test   %eax,%eax
   1ac52:	0f 84 b8 00 00 00    	je     1ad10 <mbedtls_mpi_self_test+0x1e0>
   1ac58:	41 89 c7             	mov    %eax,%r15d
   1ac5b:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1ac60:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
   1ac65:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1ac6c:	00 
   1ac6d:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1ac74:	00 
   1ac75:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1ac7c:	00 
   1ac7d:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ac84:	00 
   1ac85:	85 db                	test   %ebx,%ebx
   1ac87:	0f 85 d4 00 00 00    	jne    1ad61 <mbedtls_mpi_self_test+0x231>
   1ac8d:	48 89 ef             	mov    %rbp,%rdi
   1ac90:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ac95:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ac9a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ac9f:	e8 cc b6 ff ff       	callq  16370 <mbedtls_mpi_free>
   1aca4:	4c 89 e7             	mov    %r12,%rdi
   1aca7:	e8 c4 b6 ff ff       	callq  16370 <mbedtls_mpi_free>
   1acac:	4c 89 ef             	mov    %r13,%rdi
   1acaf:	e8 bc b6 ff ff       	callq  16370 <mbedtls_mpi_free>
   1acb4:	4c 89 f7             	mov    %r14,%rdi
   1acb7:	e8 b4 b6 ff ff       	callq  16370 <mbedtls_mpi_free>
   1acbc:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1acc1:	4c 89 d7             	mov    %r10,%rdi
   1acc4:	e8 a7 b6 ff ff       	callq  16370 <mbedtls_mpi_free>
   1acc9:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1acce:	4c 89 cf             	mov    %r9,%rdi
   1acd1:	e8 9a b6 ff ff       	callq  16370 <mbedtls_mpi_free>
   1acd6:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1acdb:	4c 89 df             	mov    %r11,%rdi
   1acde:	e8 8d b6 ff ff       	callq  16370 <mbedtls_mpi_free>
   1ace3:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   1acea:	00 
   1aceb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1acf2:	00 00 
   1acf4:	0f 85 f1 08 00 00    	jne    1b5eb <mbedtls_mpi_self_test+0xabb>
   1acfa:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   1ad01:	44 89 f8             	mov    %r15d,%eax
   1ad04:	5b                   	pop    %rbx
   1ad05:	5d                   	pop    %rbp
   1ad06:	41 5c                	pop    %r12
   1ad08:	41 5d                	pop    %r13
   1ad0a:	41 5e                	pop    %r14
   1ad0c:	41 5f                	pop    %r15
   1ad0e:	c3                   	retq   
   1ad0f:	90                   	nop
   1ad10:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1ad15:	be 10 00 00 00       	mov    $0x10,%esi
   1ad1a:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
   1ad1f:	48 8d 15 72 bc 00 00 	lea    0xbc72(%rip),%rdx        # 26998 <K+0x3b8>
   1ad26:	4c 89 e7             	mov    %r12,%rdi
   1ad29:	e8 12 c7 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1ad2e:	41 89 c7             	mov    %eax,%r15d
   1ad31:	85 c0                	test   %eax,%eax
   1ad33:	0f 84 a7 00 00 00    	je     1ade0 <mbedtls_mpi_self_test+0x2b0>
   1ad39:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1ad40:	00 
   1ad41:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1ad48:	00 
   1ad49:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1ad50:	00 
   1ad51:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ad58:	00 
   1ad59:	85 db                	test   %ebx,%ebx
   1ad5b:	0f 84 2c ff ff ff    	je     1ac8d <mbedtls_mpi_self_test+0x15d>
   1ad61:	44 89 fa             	mov    %r15d,%edx
   1ad64:	48 8d 35 55 37 00 00 	lea    0x3755(%rip),%rsi        # 1e4c0 <_IO_stdin_used+0x4c0>
   1ad6b:	bf 01 00 00 00       	mov    $0x1,%edi
   1ad70:	31 c0                	xor    %eax,%eax
   1ad72:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ad77:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ad7c:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ad81:	e8 ca 95 fe ff       	callq  4350 <__printf_chk@plt>
   1ad86:	48 89 ef             	mov    %rbp,%rdi
   1ad89:	e8 e2 b5 ff ff       	callq  16370 <mbedtls_mpi_free>
   1ad8e:	4c 89 e7             	mov    %r12,%rdi
   1ad91:	e8 da b5 ff ff       	callq  16370 <mbedtls_mpi_free>
   1ad96:	4c 89 ef             	mov    %r13,%rdi
   1ad99:	e8 d2 b5 ff ff       	callq  16370 <mbedtls_mpi_free>
   1ad9e:	4c 89 f7             	mov    %r14,%rdi
   1ada1:	e8 ca b5 ff ff       	callq  16370 <mbedtls_mpi_free>
   1ada6:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1adab:	4c 89 d7             	mov    %r10,%rdi
   1adae:	e8 bd b5 ff ff       	callq  16370 <mbedtls_mpi_free>
   1adb3:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1adb8:	4c 89 cf             	mov    %r9,%rdi
   1adbb:	e8 b0 b5 ff ff       	callq  16370 <mbedtls_mpi_free>
   1adc0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1adc5:	4c 89 df             	mov    %r11,%rdi
   1adc8:	e8 a3 b5 ff ff       	callq  16370 <mbedtls_mpi_free>
   1adcd:	bf 0a 00 00 00       	mov    $0xa,%edi
   1add2:	e8 29 94 fe ff       	callq  4200 <putchar@plt>
   1add7:	e9 07 ff ff ff       	jmpq   1ace3 <mbedtls_mpi_self_test+0x1b3>
   1addc:	0f 1f 40 00          	nopl   0x0(%rax)
   1ade0:	48 8d 15 39 bc 00 00 	lea    0xbc39(%rip),%rdx        # 26a20 <K+0x440>
   1ade7:	be 10 00 00 00       	mov    $0x10,%esi
   1adec:	4c 89 ef             	mov    %r13,%rdi
   1adef:	e8 4c c6 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1adf4:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1adfb:	00 
   1adfc:	41 89 c7             	mov    %eax,%r15d
   1adff:	85 c0                	test   %eax,%eax
   1ae01:	74 1d                	je     1ae20 <mbedtls_mpi_self_test+0x2f0>
   1ae03:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1ae0a:	00 
   1ae0b:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1ae12:	00 
   1ae13:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ae1a:	00 
   1ae1b:	e9 65 fe ff ff       	jmpq   1ac85 <mbedtls_mpi_self_test+0x155>
   1ae20:	4c 89 ea             	mov    %r13,%rdx
   1ae23:	48 89 ee             	mov    %rbp,%rsi
   1ae26:	4c 89 f7             	mov    %r14,%rdi
   1ae29:	e8 62 c3 ff ff       	callq  17190 <mbedtls_mpi_mul_mpi>
   1ae2e:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1ae35:	00 
   1ae36:	41 89 c7             	mov    %eax,%r15d
   1ae39:	85 c0                	test   %eax,%eax
   1ae3b:	0f 85 cf 03 00 00    	jne    1b210 <mbedtls_mpi_self_test+0x6e0>
   1ae41:	4c 89 cf             	mov    %r9,%rdi
   1ae44:	be 10 00 00 00       	mov    $0x10,%esi
   1ae49:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ae4e:	48 8d 15 33 bc 00 00 	lea    0xbc33(%rip),%rdx        # 26a88 <K+0x4a8>
   1ae55:	e8 e6 c5 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1ae5a:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ae5f:	85 c0                	test   %eax,%eax
   1ae61:	41 89 c7             	mov    %eax,%r15d
   1ae64:	0f 85 a6 03 00 00    	jne    1b210 <mbedtls_mpi_self_test+0x6e0>
   1ae6a:	85 db                	test   %ebx,%ebx
   1ae6c:	0f 85 c6 03 00 00    	jne    1b238 <mbedtls_mpi_self_test+0x708>
   1ae72:	4c 89 ce             	mov    %r9,%rsi
   1ae75:	4c 89 f7             	mov    %r14,%rdi
   1ae78:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ae7d:	e8 ce bd ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1ae82:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ae87:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1ae8e:	00 
   1ae8f:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ae96:	00 
   1ae97:	85 c0                	test   %eax,%eax
   1ae99:	0f 85 21 04 00 00    	jne    1b2c0 <mbedtls_mpi_self_test+0x790>
   1ae9f:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1aea6:	00 
   1aea7:	4c 89 e9             	mov    %r13,%rcx
   1aeaa:	48 89 ea             	mov    %rbp,%rdx
   1aead:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1aeb2:	4c 89 d6             	mov    %r10,%rsi
   1aeb5:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1aeba:	e8 f1 c9 ff ff       	callq  178b0 <mbedtls_mpi_div_mpi>
   1aebf:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1aec4:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1aec9:	85 c0                	test   %eax,%eax
   1aecb:	41 89 c7             	mov    %eax,%r15d
   1aece:	0f 85 54 03 00 00    	jne    1b228 <mbedtls_mpi_self_test+0x6f8>
   1aed4:	4c 89 cf             	mov    %r9,%rdi
   1aed7:	be 10 00 00 00       	mov    $0x10,%esi
   1aedc:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1aee1:	48 8d 15 48 bd 00 00 	lea    0xbd48(%rip),%rdx        # 26c30 <K+0x650>
   1aee8:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1aeed:	e8 4e c5 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1aef2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1aef7:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1aefc:	85 c0                	test   %eax,%eax
   1aefe:	41 89 c7             	mov    %eax,%r15d
   1af01:	0f 85 21 03 00 00    	jne    1b228 <mbedtls_mpi_self_test+0x6f8>
   1af07:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1af0e:	00 
   1af0f:	be 10 00 00 00       	mov    $0x10,%esi
   1af14:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1af19:	48 8d 15 38 bd 00 00 	lea    0xbd38(%rip),%rdx        # 26c58 <K+0x678>
   1af20:	4c 89 df             	mov    %r11,%rdi
   1af23:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1af28:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1af2d:	e8 0e c5 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1af32:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1af37:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1af3c:	85 c0                	test   %eax,%eax
   1af3e:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1af43:	0f 85 08 04 00 00    	jne    1b351 <mbedtls_mpi_self_test+0x821>
   1af49:	4c 89 ce             	mov    %r9,%rsi
   1af4c:	4c 89 f7             	mov    %r14,%rdi
   1af4f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1af54:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1af59:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1af5e:	e8 ed bc ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1af63:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1af68:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1af6d:	85 c0                	test   %eax,%eax
   1af6f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1af74:	0f 85 46 03 00 00    	jne    1b2c0 <mbedtls_mpi_self_test+0x790>
   1af7a:	4c 89 de             	mov    %r11,%rsi
   1af7d:	4c 89 d7             	mov    %r10,%rdi
   1af80:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1af85:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1af8a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1af8f:	e8 bc bc ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1af94:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1af99:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1af9e:	85 c0                	test   %eax,%eax
   1afa0:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1afa5:	0f 85 15 03 00 00    	jne    1b2c0 <mbedtls_mpi_self_test+0x790>
   1afab:	45 31 c0             	xor    %r8d,%r8d
   1afae:	4c 89 e9             	mov    %r13,%rcx
   1afb1:	4c 89 e2             	mov    %r12,%rdx
   1afb4:	48 89 ee             	mov    %rbp,%rsi
   1afb7:	4c 89 f7             	mov    %r14,%rdi
   1afba:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1afbf:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1afc4:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1afc9:	e8 e2 d8 ff ff       	callq  188b0 <mbedtls_mpi_exp_mod>
   1afce:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1afd3:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1afd8:	85 c0                	test   %eax,%eax
   1afda:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1afdf:	41 89 c7             	mov    %eax,%r15d
   1afe2:	0f 85 a5 fc ff ff    	jne    1ac8d <mbedtls_mpi_self_test+0x15d>
   1afe8:	4c 89 cf             	mov    %r9,%rdi
   1afeb:	be 10 00 00 00       	mov    $0x10,%esi
   1aff0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1aff5:	48 8d 15 d4 bb 00 00 	lea    0xbbd4(%rip),%rdx        # 26bd0 <K+0x5f0>
   1affc:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b001:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b006:	e8 35 c4 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1b00b:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b010:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b015:	85 c0                	test   %eax,%eax
   1b017:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b01c:	41 89 c7             	mov    %eax,%r15d
   1b01f:	0f 85 68 fc ff ff    	jne    1ac8d <mbedtls_mpi_self_test+0x15d>
   1b025:	4c 89 ce             	mov    %r9,%rsi
   1b028:	4c 89 f7             	mov    %r14,%rdi
   1b02b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b030:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b035:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b03a:	e8 11 bc ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1b03f:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b044:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b049:	85 c0                	test   %eax,%eax
   1b04b:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b050:	0f 85 6a 02 00 00    	jne    1b2c0 <mbedtls_mpi_self_test+0x790>
   1b056:	4c 89 ea             	mov    %r13,%rdx
   1b059:	48 89 ee             	mov    %rbp,%rsi
   1b05c:	4c 89 f7             	mov    %r14,%rdi
   1b05f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b064:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b069:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b06e:	e8 bd ec ff ff       	callq  19d30 <mbedtls_mpi_inv_mod>
   1b073:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b078:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b07d:	85 c0                	test   %eax,%eax
   1b07f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b084:	41 89 c7             	mov    %eax,%r15d
   1b087:	0f 85 00 fc ff ff    	jne    1ac8d <mbedtls_mpi_self_test+0x15d>
   1b08d:	4c 89 cf             	mov    %r9,%rdi
   1b090:	be 10 00 00 00       	mov    $0x10,%esi
   1b095:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b09a:	48 8d 15 c7 ba 00 00 	lea    0xbac7(%rip),%rdx        # 26b68 <K+0x588>
   1b0a1:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b0a6:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b0ab:	e8 90 c3 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1b0b0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b0b5:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b0ba:	85 c0                	test   %eax,%eax
   1b0bc:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b0c1:	41 89 c0             	mov    %eax,%r8d
   1b0c4:	0f 85 39 05 00 00    	jne    1b603 <mbedtls_mpi_self_test+0xad3>
   1b0ca:	4c 89 ce             	mov    %r9,%rsi
   1b0cd:	4c 89 f7             	mov    %r14,%rdi
   1b0d0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b0d5:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b0da:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b0df:	e8 6c bb ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1b0e4:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b0e9:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b0ee:	85 c0                	test   %eax,%eax
   1b0f0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b0f5:	0f 85 c5 01 00 00    	jne    1b2c0 <mbedtls_mpi_self_test+0x790>
   1b0fb:	48 8d 05 be bb 00 00 	lea    0xbbbe(%rip),%rax        # 26cc0 <gcd_pairs>
   1b102:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   1b109:	00 
   1b10a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b10f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1b114:	4c 89 f7             	mov    %r14,%rdi
   1b117:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   1b11c:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   1b121:	48 63 30             	movslq (%rax),%rsi
   1b124:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1b129:	e8 42 b6 ff ff       	callq  16770 <mbedtls_mpi_lset>
   1b12e:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1b133:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1b138:	85 c0                	test   %eax,%eax
   1b13a:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1b13f:	41 89 c7             	mov    %eax,%r15d
   1b142:	0f 85 3d fb ff ff    	jne    1ac85 <mbedtls_mpi_self_test+0x155>
   1b148:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1b14d:	4c 89 d7             	mov    %r10,%rdi
   1b150:	48 63 70 04          	movslq 0x4(%rax),%rsi
   1b154:	e8 17 b6 ff ff       	callq  16770 <mbedtls_mpi_lset>
   1b159:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1b15e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1b163:	85 c0                	test   %eax,%eax
   1b165:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1b16a:	41 89 c7             	mov    %eax,%r15d
   1b16d:	0f 85 12 fb ff ff    	jne    1ac85 <mbedtls_mpi_self_test+0x155>
   1b173:	4c 89 d2             	mov    %r10,%rdx
   1b176:	4c 89 f6             	mov    %r14,%rsi
   1b179:	48 89 ef             	mov    %rbp,%rdi
   1b17c:	e8 0f e2 ff ff       	callq  19390 <mbedtls_mpi_gcd>
   1b181:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1b186:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1b18b:	85 c0                	test   %eax,%eax
   1b18d:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1b192:	41 89 c7             	mov    %eax,%r15d
   1b195:	0f 85 ea fa ff ff    	jne    1ac85 <mbedtls_mpi_self_test+0x155>
   1b19b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1b1a0:	48 89 ef             	mov    %rbp,%rdi
   1b1a3:	48 63 70 08          	movslq 0x8(%rax),%rsi
   1b1a7:	e8 94 bb ff ff       	callq  16d40 <mbedtls_mpi_cmp_int>
   1b1ac:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1b1b1:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1b1b6:	85 c0                	test   %eax,%eax
   1b1b8:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1b1bd:	41 89 c7             	mov    %eax,%r15d
   1b1c0:	0f 85 45 04 00 00    	jne    1b60b <mbedtls_mpi_self_test+0xadb>
   1b1c6:	83 44 24 08 01       	addl   $0x1,0x8(%rsp)
   1b1cb:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1b1cf:	48 83 44 24 10 0c    	addq   $0xc,0x10(%rsp)
   1b1d5:	83 f8 03             	cmp    $0x3,%eax
   1b1d8:	0f 85 31 ff ff ff    	jne    1b10f <mbedtls_mpi_self_test+0x5df>
   1b1de:	85 db                	test   %ebx,%ebx
   1b1e0:	0f 84 a7 fa ff ff    	je     1ac8d <mbedtls_mpi_self_test+0x15d>
   1b1e6:	48 8d 3d da 2e 00 00 	lea    0x2eda(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   1b1ed:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b1f2:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b1f7:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b1fc:	e8 0f 90 fe ff       	callq  4210 <puts@plt>
   1b201:	e9 80 fb ff ff       	jmpq   1ad86 <mbedtls_mpi_self_test+0x256>
   1b206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b20d:	00 00 00 
   1b210:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b217:	00 
   1b218:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1b21f:	00 
   1b220:	e9 60 fa ff ff       	jmpq   1ac85 <mbedtls_mpi_self_test+0x155>
   1b225:	0f 1f 00             	nopl   (%rax)
   1b228:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b22f:	00 
   1b230:	e9 58 fa ff ff       	jmpq   1ac8d <mbedtls_mpi_self_test+0x15d>
   1b235:	0f 1f 00             	nopl   (%rax)
   1b238:	48 8d 35 37 b6 00 00 	lea    0xb637(%rip),%rsi        # 26876 <K+0x296>
   1b23f:	bf 01 00 00 00       	mov    $0x1,%edi
   1b244:	31 c0                	xor    %eax,%eax
   1b246:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b24b:	e8 00 91 fe ff       	callq  4350 <__printf_chk@plt>
   1b250:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b255:	4c 89 f7             	mov    %r14,%rdi
   1b258:	4c 89 ce             	mov    %r9,%rsi
   1b25b:	e8 f0 b9 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1b260:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b265:	85 c0                	test   %eax,%eax
   1b267:	75 62                	jne    1b2cb <mbedtls_mpi_self_test+0x79b>
   1b269:	48 8d 3d 57 2e 00 00 	lea    0x2e57(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   1b270:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b275:	e8 96 8f fe ff       	callq  4210 <puts@plt>
   1b27a:	48 89 ea             	mov    %rbp,%rdx
   1b27d:	4c 89 e9             	mov    %r13,%rcx
   1b280:	4c 89 f7             	mov    %r14,%rdi
   1b283:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1b28a:	00 
   1b28b:	4c 89 d6             	mov    %r10,%rsi
   1b28e:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b293:	e8 18 c6 ff ff       	callq  178b0 <mbedtls_mpi_div_mpi>
   1b298:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b29d:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b2a2:	85 c0                	test   %eax,%eax
   1b2a4:	89 c2                	mov    %eax,%edx
   1b2a6:	74 6d                	je     1b315 <mbedtls_mpi_self_test+0x7e5>
   1b2a8:	41 89 c7             	mov    %eax,%r15d
   1b2ab:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b2b2:	00 
   1b2b3:	e9 ac fa ff ff       	jmpq   1ad64 <mbedtls_mpi_self_test+0x234>
   1b2b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b2bf:	00 
   1b2c0:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b2c6:	e9 c2 f9 ff ff       	jmpq   1ac8d <mbedtls_mpi_self_test+0x15d>
   1b2cb:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b2d2:	00 
   1b2d3:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1b2da:	00 
   1b2db:	48 8d 3d 3b ad 00 00 	lea    0xad3b(%rip),%rdi        # 2601d <sha1_test_buf+0xbd>
   1b2e2:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b2e7:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b2ed:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b2f2:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b2f7:	e8 14 8f fe ff       	callq  4210 <puts@plt>
   1b2fc:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b301:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b306:	ba 01 00 00 00       	mov    $0x1,%edx
   1b30b:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b310:	e9 4f fa ff ff       	jmpq   1ad64 <mbedtls_mpi_self_test+0x234>
   1b315:	4c 89 cf             	mov    %r9,%rdi
   1b318:	be 10 00 00 00       	mov    $0x10,%esi
   1b31d:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b322:	48 8d 15 07 b9 00 00 	lea    0xb907(%rip),%rdx        # 26c30 <K+0x650>
   1b329:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b32e:	e8 0d c1 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1b333:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b338:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b33d:	85 c0                	test   %eax,%eax
   1b33f:	74 18                	je     1b359 <mbedtls_mpi_self_test+0x829>
   1b341:	41 89 c7             	mov    %eax,%r15d
   1b344:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b34b:	00 
   1b34c:	e9 10 fa ff ff       	jmpq   1ad61 <mbedtls_mpi_self_test+0x231>
   1b351:	41 89 c7             	mov    %eax,%r15d
   1b354:	e9 2c f9 ff ff       	jmpq   1ac85 <mbedtls_mpi_self_test+0x155>
   1b359:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b360:	00 
   1b361:	be 10 00 00 00       	mov    $0x10,%esi
   1b366:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b36b:	48 8d 15 e6 b8 00 00 	lea    0xb8e6(%rip),%rdx        # 26c58 <K+0x678>
   1b372:	4c 89 df             	mov    %r11,%rdi
   1b375:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b37a:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1b37f:	e8 bc c0 ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1b384:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1b389:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b38e:	85 c0                	test   %eax,%eax
   1b390:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b395:	75 ba                	jne    1b351 <mbedtls_mpi_self_test+0x821>
   1b397:	48 8d 35 f2 b4 00 00 	lea    0xb4f2(%rip),%rsi        # 26890 <K+0x2b0>
   1b39e:	bf 01 00 00 00       	mov    $0x1,%edi
   1b3a3:	31 c0                	xor    %eax,%eax
   1b3a5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b3aa:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b3af:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b3b4:	e8 97 8f fe ff       	callq  4350 <__printf_chk@plt>
   1b3b9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b3be:	4c 89 f7             	mov    %r14,%rdi
   1b3c1:	4c 89 ce             	mov    %r9,%rsi
   1b3c4:	e8 87 b8 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1b3c9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b3ce:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b3d3:	85 c0                	test   %eax,%eax
   1b3d5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b3da:	0f 85 fb fe ff ff    	jne    1b2db <mbedtls_mpi_self_test+0x7ab>
   1b3e0:	4c 89 de             	mov    %r11,%rsi
   1b3e3:	4c 89 d7             	mov    %r10,%rdi
   1b3e6:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b3eb:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1b3f0:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b3f5:	e8 56 b8 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1b3fa:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b3ff:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1b404:	85 c0                	test   %eax,%eax
   1b406:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b40b:	0f 85 ca fe ff ff    	jne    1b2db <mbedtls_mpi_self_test+0x7ab>
   1b411:	48 8d 3d af 2c 00 00 	lea    0x2caf(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   1b418:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b41d:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b422:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b427:	e8 e4 8d fe ff       	callq  4210 <puts@plt>
   1b42c:	45 31 c0             	xor    %r8d,%r8d
   1b42f:	4c 89 e9             	mov    %r13,%rcx
   1b432:	4c 89 e2             	mov    %r12,%rdx
   1b435:	48 89 ee             	mov    %rbp,%rsi
   1b438:	4c 89 f7             	mov    %r14,%rdi
   1b43b:	e8 70 d4 ff ff       	callq  188b0 <mbedtls_mpi_exp_mod>
   1b440:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b445:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b44a:	85 c0                	test   %eax,%eax
   1b44c:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b451:	41 89 c0             	mov    %eax,%r8d
   1b454:	0f 85 96 01 00 00    	jne    1b5f0 <mbedtls_mpi_self_test+0xac0>
   1b45a:	4c 89 cf             	mov    %r9,%rdi
   1b45d:	be 10 00 00 00       	mov    $0x10,%esi
   1b462:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b467:	48 8d 15 62 b7 00 00 	lea    0xb762(%rip),%rdx        # 26bd0 <K+0x5f0>
   1b46e:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b473:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b478:	e8 c3 bf ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1b47d:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b482:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b487:	85 c0                	test   %eax,%eax
   1b489:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b48e:	41 89 c0             	mov    %eax,%r8d
   1b491:	0f 85 64 01 00 00    	jne    1b5fb <mbedtls_mpi_self_test+0xacb>
   1b497:	48 8d 35 51 b4 00 00 	lea    0xb451(%rip),%rsi        # 268ef <K+0x30f>
   1b49e:	bf 01 00 00 00       	mov    $0x1,%edi
   1b4a3:	31 c0                	xor    %eax,%eax
   1b4a5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b4aa:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b4af:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b4b4:	e8 97 8e fe ff       	callq  4350 <__printf_chk@plt>
   1b4b9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b4be:	4c 89 f7             	mov    %r14,%rdi
   1b4c1:	4c 89 ce             	mov    %r9,%rsi
   1b4c4:	e8 87 b7 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1b4c9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b4ce:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b4d3:	85 c0                	test   %eax,%eax
   1b4d5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b4da:	0f 85 fb fd ff ff    	jne    1b2db <mbedtls_mpi_self_test+0x7ab>
   1b4e0:	48 8d 3d e0 2b 00 00 	lea    0x2be0(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   1b4e7:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b4ec:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b4f1:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b4f6:	e8 15 8d fe ff       	callq  4210 <puts@plt>
   1b4fb:	4c 89 ea             	mov    %r13,%rdx
   1b4fe:	48 89 ee             	mov    %rbp,%rsi
   1b501:	4c 89 f7             	mov    %r14,%rdi
   1b504:	e8 27 e8 ff ff       	callq  19d30 <mbedtls_mpi_inv_mod>
   1b509:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b50e:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b513:	85 c0                	test   %eax,%eax
   1b515:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b51a:	41 89 c0             	mov    %eax,%r8d
   1b51d:	0f 85 cd 00 00 00    	jne    1b5f0 <mbedtls_mpi_self_test+0xac0>
   1b523:	4c 89 cf             	mov    %r9,%rdi
   1b526:	be 10 00 00 00       	mov    $0x10,%esi
   1b52b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b530:	48 8d 15 31 b6 00 00 	lea    0xb631(%rip),%rdx        # 26b68 <K+0x588>
   1b537:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b53c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b541:	e8 fa be ff ff       	callq  17440 <mbedtls_mpi_read_string>
   1b546:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b54b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b550:	85 c0                	test   %eax,%eax
   1b552:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b557:	41 89 c0             	mov    %eax,%r8d
   1b55a:	0f 85 9b 00 00 00    	jne    1b5fb <mbedtls_mpi_self_test+0xacb>
   1b560:	48 8d 35 43 b3 00 00 	lea    0xb343(%rip),%rsi        # 268aa <K+0x2ca>
   1b567:	bf 01 00 00 00       	mov    $0x1,%edi
   1b56c:	31 c0                	xor    %eax,%eax
   1b56e:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b573:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b578:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b57d:	e8 ce 8d fe ff       	callq  4350 <__printf_chk@plt>
   1b582:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b587:	4c 89 f7             	mov    %r14,%rdi
   1b58a:	4c 89 ce             	mov    %r9,%rsi
   1b58d:	e8 be b6 ff ff       	callq  16c50 <mbedtls_mpi_cmp_mpi>
   1b592:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b597:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b59c:	85 c0                	test   %eax,%eax
   1b59e:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b5a3:	0f 85 32 fd ff ff    	jne    1b2db <mbedtls_mpi_self_test+0x7ab>
   1b5a9:	48 8d 3d 17 2b 00 00 	lea    0x2b17(%rip),%rdi        # 1e0c7 <_IO_stdin_used+0xc7>
   1b5b0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b5b5:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b5ba:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b5bf:	e8 4c 8c fe ff       	callq  4210 <puts@plt>
   1b5c4:	48 8d 35 07 b3 00 00 	lea    0xb307(%rip),%rsi        # 268d2 <K+0x2f2>
   1b5cb:	bf 01 00 00 00       	mov    $0x1,%edi
   1b5d0:	31 c0                	xor    %eax,%eax
   1b5d2:	e8 79 8d fe ff       	callq  4350 <__printf_chk@plt>
   1b5d7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b5dc:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b5e1:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b5e6:	e9 10 fb ff ff       	jmpq   1b0fb <mbedtls_mpi_self_test+0x5cb>
   1b5eb:	e8 80 8c fe ff       	callq  4270 <__stack_chk_fail@plt>
   1b5f0:	45 89 c7             	mov    %r8d,%r15d
   1b5f3:	44 89 c2             	mov    %r8d,%edx
   1b5f6:	e9 69 f7 ff ff       	jmpq   1ad64 <mbedtls_mpi_self_test+0x234>
   1b5fb:	45 89 c7             	mov    %r8d,%r15d
   1b5fe:	e9 5e f7 ff ff       	jmpq   1ad61 <mbedtls_mpi_self_test+0x231>
   1b603:	45 89 c7             	mov    %r8d,%r15d
   1b606:	e9 82 f6 ff ff       	jmpq   1ac8d <mbedtls_mpi_self_test+0x15d>
   1b60b:	85 db                	test   %ebx,%ebx
   1b60d:	0f 84 ad fc ff ff    	je     1b2c0 <mbedtls_mpi_self_test+0x790>
   1b613:	8b 54 24 08          	mov    0x8(%rsp),%edx
   1b617:	bf 01 00 00 00       	mov    $0x1,%edi
   1b61c:	31 c0                	xor    %eax,%eax
   1b61e:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   1b623:	48 8d 35 9a b2 00 00 	lea    0xb29a(%rip),%rsi        # 268c4 <K+0x2e4>
   1b62a:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b62f:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b635:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b63a:	e8 11 8d fe ff       	callq  4350 <__printf_chk@plt>
   1b63f:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b644:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b649:	ba 01 00 00 00       	mov    $0x1,%edx
   1b64e:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1b653:	e9 0c f7 ff ff       	jmpq   1ad64 <mbedtls_mpi_self_test+0x234>
   1b658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b65f:	00 

000000000001b660 <mbedtls_mpi_core_bitlen.part.0>:
   1b660:	48 83 ee 01          	sub    $0x1,%rsi
   1b664:	74 3a                	je     1b6a0 <mbedtls_mpi_core_bitlen.part.0+0x40>
   1b666:	4c 8b 04 f7          	mov    (%rdi,%rsi,8),%r8
   1b66a:	4d 85 c0             	test   %r8,%r8
   1b66d:	74 f1                	je     1b660 <mbedtls_mpi_core_bitlen.part.0>
   1b66f:	48 8d 46 01          	lea    0x1(%rsi),%rax
   1b673:	48 c1 e0 06          	shl    $0x6,%rax
   1b677:	48 b9 00 00 00 00 00 	movabs $0x8000000000000000,%rcx
   1b67e:	00 00 80 
   1b681:	31 d2                	xor    %edx,%edx
   1b683:	eb 10                	jmp    1b695 <mbedtls_mpi_core_bitlen.part.0+0x35>
   1b685:	0f 1f 00             	nopl   (%rax)
   1b688:	48 83 c2 01          	add    $0x1,%rdx
   1b68c:	48 d1 e9             	shr    %rcx
   1b68f:	48 83 fa 40          	cmp    $0x40,%rdx
   1b693:	74 05                	je     1b69a <mbedtls_mpi_core_bitlen.part.0+0x3a>
   1b695:	4c 85 c1             	test   %r8,%rcx
   1b698:	74 ee                	je     1b688 <mbedtls_mpi_core_bitlen.part.0+0x28>
   1b69a:	48 29 d0             	sub    %rdx,%rax
   1b69d:	c3                   	retq   
   1b69e:	66 90                	xchg   %ax,%ax
   1b6a0:	4c 8b 07             	mov    (%rdi),%r8
   1b6a3:	b8 40 00 00 00       	mov    $0x40,%eax
   1b6a8:	eb cd                	jmp    1b677 <mbedtls_mpi_core_bitlen.part.0+0x17>
   1b6aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b6b0 <mbedtls_mpi_core_bigendian_to_host.part.0>:
   1b6b0:	48 8d 44 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rax
   1b6b5:	48 39 c7             	cmp    %rax,%rdi
   1b6b8:	77 27                	ja     1b6e1 <mbedtls_mpi_core_bigendian_to_host.part.0+0x31>
   1b6ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b6c0:	48 8b 17             	mov    (%rdi),%rdx
   1b6c3:	48 8b 08             	mov    (%rax),%rcx
   1b6c6:	48 83 c7 08          	add    $0x8,%rdi
   1b6ca:	48 83 e8 08          	sub    $0x8,%rax
   1b6ce:	48 0f ca             	bswap  %rdx
   1b6d1:	48 0f c9             	bswap  %rcx
   1b6d4:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
   1b6d8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b6dc:	48 39 c7             	cmp    %rax,%rdi
   1b6df:	76 df                	jbe    1b6c0 <mbedtls_mpi_core_bigendian_to_host.part.0+0x10>
   1b6e1:	c3                   	retq   
   1b6e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b6e9:	00 00 00 00 
   1b6ed:	0f 1f 00             	nopl   (%rax)

000000000001b6f0 <mbedtls_mpi_core_clz>:
   1b6f0:	f3 0f 1e fa          	endbr64 
   1b6f4:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
   1b6fb:	00 00 80 
   1b6fe:	31 c0                	xor    %eax,%eax
   1b700:	eb 13                	jmp    1b715 <mbedtls_mpi_core_clz+0x25>
   1b702:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b708:	48 83 c0 01          	add    $0x1,%rax
   1b70c:	48 d1 ea             	shr    %rdx
   1b70f:	48 83 f8 40          	cmp    $0x40,%rax
   1b713:	74 05                	je     1b71a <mbedtls_mpi_core_clz+0x2a>
   1b715:	48 85 d7             	test   %rdx,%rdi
   1b718:	74 ee                	je     1b708 <mbedtls_mpi_core_clz+0x18>
   1b71a:	c3                   	retq   
   1b71b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b720 <mbedtls_mpi_core_bitlen>:
   1b720:	f3 0f 1e fa          	endbr64 
   1b724:	48 85 f6             	test   %rsi,%rsi
   1b727:	74 07                	je     1b730 <mbedtls_mpi_core_bitlen+0x10>
   1b729:	e9 32 ff ff ff       	jmpq   1b660 <mbedtls_mpi_core_bitlen.part.0>
   1b72e:	66 90                	xchg   %ax,%ax
   1b730:	31 c0                	xor    %eax,%eax
   1b732:	c3                   	retq   
   1b733:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b73a:	00 00 00 00 
   1b73e:	66 90                	xchg   %ax,%ax

000000000001b740 <mbedtls_mpi_core_bigendian_to_host>:
   1b740:	f3 0f 1e fa          	endbr64 
   1b744:	48 85 f6             	test   %rsi,%rsi
   1b747:	74 07                	je     1b750 <mbedtls_mpi_core_bigendian_to_host+0x10>
   1b749:	e9 62 ff ff ff       	jmpq   1b6b0 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1b74e:	66 90                	xchg   %ax,%ax
   1b750:	c3                   	retq   
   1b751:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b758:	00 00 00 00 
   1b75c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b760 <mbedtls_mpi_core_uint_le_mpi>:
   1b760:	f3 0f 1e fa          	endbr64 
   1b764:	41 54                	push   %r12
   1b766:	49 89 d4             	mov    %rdx,%r12
   1b769:	55                   	push   %rbp
   1b76a:	48 89 f5             	mov    %rsi,%rbp
   1b76d:	48 89 fe             	mov    %rdi,%rsi
   1b770:	53                   	push   %rbx
   1b771:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1b775:	e8 f6 10 00 00       	callq  1c870 <mbedtls_ct_mpi_uint_lt>
   1b77a:	83 f0 01             	xor    $0x1,%eax
   1b77d:	89 c3                	mov    %eax,%ebx
   1b77f:	49 83 fc 01          	cmp    $0x1,%r12
   1b783:	76 2b                	jbe    1b7b0 <mbedtls_mpi_core_uint_le_mpi+0x50>
   1b785:	48 8d 45 08          	lea    0x8(%rbp),%rax
   1b789:	4a 8d 54 e5 00       	lea    0x0(%rbp,%r12,8),%rdx
   1b78e:	31 ff                	xor    %edi,%edi
   1b790:	48 0b 38             	or     (%rax),%rdi
   1b793:	48 83 c0 08          	add    $0x8,%rax
   1b797:	48 39 d0             	cmp    %rdx,%rax
   1b79a:	75 f4                	jne    1b790 <mbedtls_mpi_core_uint_le_mpi+0x30>
   1b79c:	e8 6f 10 00 00       	callq  1c810 <mbedtls_ct_mpi_uint_mask>
   1b7a1:	83 e0 01             	and    $0x1,%eax
   1b7a4:	09 d8                	or     %ebx,%eax
   1b7a6:	5b                   	pop    %rbx
   1b7a7:	5d                   	pop    %rbp
   1b7a8:	41 5c                	pop    %r12
   1b7aa:	c3                   	retq   
   1b7ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b7b0:	31 ff                	xor    %edi,%edi
   1b7b2:	e8 59 10 00 00       	callq  1c810 <mbedtls_ct_mpi_uint_mask>
   1b7b7:	83 e0 01             	and    $0x1,%eax
   1b7ba:	09 d8                	or     %ebx,%eax
   1b7bc:	5b                   	pop    %rbx
   1b7bd:	5d                   	pop    %rbp
   1b7be:	41 5c                	pop    %r12
   1b7c0:	c3                   	retq   
   1b7c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b7c8:	00 00 00 00 
   1b7cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b7d0 <mbedtls_mpi_core_cond_assign>:
   1b7d0:	f3 0f 1e fa          	endbr64 
   1b7d4:	49 89 f8             	mov    %rdi,%r8
   1b7d7:	48 89 d7             	mov    %rdx,%rdi
   1b7da:	49 39 f0             	cmp    %rsi,%r8
   1b7dd:	74 11                	je     1b7f0 <mbedtls_mpi_core_cond_assign+0x20>
   1b7df:	48 89 f2             	mov    %rsi,%rdx
   1b7e2:	0f b6 c9             	movzbl %cl,%ecx
   1b7e5:	4c 89 c6             	mov    %r8,%rsi
   1b7e8:	e9 c3 10 00 00       	jmpq   1c8b0 <mbedtls_ct_mpi_uint_cond_assign>
   1b7ed:	0f 1f 00             	nopl   (%rax)
   1b7f0:	c3                   	retq   
   1b7f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b7f8:	00 00 00 00 
   1b7fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b800 <mbedtls_mpi_core_cond_swap>:
   1b800:	f3 0f 1e fa          	endbr64 
   1b804:	48 39 f7             	cmp    %rsi,%rdi
   1b807:	74 57                	je     1b860 <mbedtls_mpi_core_cond_swap+0x60>
   1b809:	41 54                	push   %r12
   1b80b:	49 89 d4             	mov    %rdx,%r12
   1b80e:	55                   	push   %rbp
   1b80f:	48 89 fd             	mov    %rdi,%rbp
   1b812:	0f b6 f9             	movzbl %cl,%edi
   1b815:	53                   	push   %rbx
   1b816:	48 89 f3             	mov    %rsi,%rbx
   1b819:	e8 f2 0f 00 00       	callq  1c810 <mbedtls_ct_mpi_uint_mask>
   1b81e:	4d 85 e4             	test   %r12,%r12
   1b821:	74 36                	je     1b859 <mbedtls_mpi_core_cond_swap+0x59>
   1b823:	31 ff                	xor    %edi,%edi
   1b825:	0f 1f 00             	nopl   (%rax)
   1b828:	48 8b 4c fd 00       	mov    0x0(%rbp,%rdi,8),%rcx
   1b82d:	4c 8b 04 fb          	mov    (%rbx,%rdi,8),%r8
   1b831:	49 31 c8             	xor    %rcx,%r8
   1b834:	49 21 c0             	and    %rax,%r8
   1b837:	49 31 c8             	xor    %rcx,%r8
   1b83a:	4c 89 44 fd 00       	mov    %r8,0x0(%rbp,%rdi,8)
   1b83f:	48 8b 34 fb          	mov    (%rbx,%rdi,8),%rsi
   1b843:	48 31 f1             	xor    %rsi,%rcx
   1b846:	48 21 c1             	and    %rax,%rcx
   1b849:	48 31 f1             	xor    %rsi,%rcx
   1b84c:	48 89 0c fb          	mov    %rcx,(%rbx,%rdi,8)
   1b850:	48 83 c7 01          	add    $0x1,%rdi
   1b854:	49 39 fc             	cmp    %rdi,%r12
   1b857:	75 cf                	jne    1b828 <mbedtls_mpi_core_cond_swap+0x28>
   1b859:	5b                   	pop    %rbx
   1b85a:	5d                   	pop    %rbp
   1b85b:	41 5c                	pop    %r12
   1b85d:	c3                   	retq   
   1b85e:	66 90                	xchg   %ax,%ax
   1b860:	c3                   	retq   
   1b861:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b868:	00 00 00 00 
   1b86c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b870 <mbedtls_mpi_core_read_le>:
   1b870:	f3 0f 1e fa          	endbr64 
   1b874:	55                   	push   %rbp
   1b875:	31 c0                	xor    %eax,%eax
   1b877:	48 89 d5             	mov    %rdx,%rbp
   1b87a:	48 89 ca             	mov    %rcx,%rdx
   1b87d:	53                   	push   %rbx
   1b87e:	48 83 ec 08          	sub    $0x8,%rsp
   1b882:	f6 c1 07             	test   $0x7,%cl
   1b885:	0f 95 c0             	setne  %al
   1b888:	48 c1 ea 03          	shr    $0x3,%rdx
   1b88c:	48 01 d0             	add    %rdx,%rax
   1b88f:	48 39 f0             	cmp    %rsi,%rax
   1b892:	77 54                	ja     1b8e8 <mbedtls_mpi_core_read_le+0x78>
   1b894:	48 85 ff             	test   %rdi,%rdi
   1b897:	74 46                	je     1b8df <mbedtls_mpi_core_read_le+0x6f>
   1b899:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   1b8a0:	00 
   1b8a1:	31 f6                	xor    %esi,%esi
   1b8a3:	48 89 cb             	mov    %rcx,%rbx
   1b8a6:	e8 f5 89 fe ff       	callq  42a0 <memset@plt>
   1b8ab:	48 89 c7             	mov    %rax,%rdi
   1b8ae:	48 85 db             	test   %rbx,%rbx
   1b8b1:	74 2c                	je     1b8df <mbedtls_mpi_core_read_le+0x6f>
   1b8b3:	31 c0                	xor    %eax,%eax
   1b8b5:	0f 1f 00             	nopl   (%rax)
   1b8b8:	0f b6 54 05 00       	movzbl 0x0(%rbp,%rax,1),%edx
   1b8bd:	48 89 c6             	mov    %rax,%rsi
   1b8c0:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1b8c7:	00 
   1b8c8:	48 83 c0 01          	add    $0x1,%rax
   1b8cc:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1b8d0:	83 e1 38             	and    $0x38,%ecx
   1b8d3:	48 d3 e2             	shl    %cl,%rdx
   1b8d6:	48 09 14 37          	or     %rdx,(%rdi,%rsi,1)
   1b8da:	48 39 c3             	cmp    %rax,%rbx
   1b8dd:	75 d9                	jne    1b8b8 <mbedtls_mpi_core_read_le+0x48>
   1b8df:	31 c0                	xor    %eax,%eax
   1b8e1:	48 83 c4 08          	add    $0x8,%rsp
   1b8e5:	5b                   	pop    %rbx
   1b8e6:	5d                   	pop    %rbp
   1b8e7:	c3                   	retq   
   1b8e8:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b8ed:	eb f2                	jmp    1b8e1 <mbedtls_mpi_core_read_le+0x71>
   1b8ef:	90                   	nop

000000000001b8f0 <mbedtls_mpi_core_read_be>:
   1b8f0:	f3 0f 1e fa          	endbr64 
   1b8f4:	41 56                	push   %r14
   1b8f6:	31 c0                	xor    %eax,%eax
   1b8f8:	49 89 d6             	mov    %rdx,%r14
   1b8fb:	f6 c1 07             	test   $0x7,%cl
   1b8fe:	48 89 ca             	mov    %rcx,%rdx
   1b901:	0f 95 c0             	setne  %al
   1b904:	41 55                	push   %r13
   1b906:	48 c1 ea 03          	shr    $0x3,%rdx
   1b90a:	41 54                	push   %r12
   1b90c:	48 01 d0             	add    %rdx,%rax
   1b90f:	55                   	push   %rbp
   1b910:	53                   	push   %rbx
   1b911:	48 39 f0             	cmp    %rsi,%rax
   1b914:	77 6a                	ja     1b980 <mbedtls_mpi_core_read_be+0x90>
   1b916:	48 89 f5             	mov    %rsi,%rbp
   1b919:	31 c0                	xor    %eax,%eax
   1b91b:	48 85 f6             	test   %rsi,%rsi
   1b91e:	75 10                	jne    1b930 <mbedtls_mpi_core_read_be+0x40>
   1b920:	5b                   	pop    %rbx
   1b921:	5d                   	pop    %rbp
   1b922:	41 5c                	pop    %r12
   1b924:	41 5d                	pop    %r13
   1b926:	41 5e                	pop    %r14
   1b928:	c3                   	retq   
   1b929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b930:	48 8d 1c f5 00 00 00 	lea    0x0(,%rsi,8),%rbx
   1b937:	00 
   1b938:	49 89 cc             	mov    %rcx,%r12
   1b93b:	31 f6                	xor    %esi,%esi
   1b93d:	49 89 fd             	mov    %rdi,%r13
   1b940:	48 89 da             	mov    %rbx,%rdx
   1b943:	e8 58 89 fe ff       	callq  42a0 <memset@plt>
   1b948:	4d 85 e4             	test   %r12,%r12
   1b94b:	75 1b                	jne    1b968 <mbedtls_mpi_core_read_be+0x78>
   1b94d:	48 89 ee             	mov    %rbp,%rsi
   1b950:	4c 89 ef             	mov    %r13,%rdi
   1b953:	e8 58 fd ff ff       	callq  1b6b0 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1b958:	5b                   	pop    %rbx
   1b959:	31 c0                	xor    %eax,%eax
   1b95b:	5d                   	pop    %rbp
   1b95c:	41 5c                	pop    %r12
   1b95e:	41 5d                	pop    %r13
   1b960:	41 5e                	pop    %r14
   1b962:	c3                   	retq   
   1b963:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b968:	4c 29 e3             	sub    %r12,%rbx
   1b96b:	4c 89 e2             	mov    %r12,%rdx
   1b96e:	4c 89 f6             	mov    %r14,%rsi
   1b971:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
   1b976:	e8 a5 89 fe ff       	callq  4320 <memcpy@plt>
   1b97b:	eb d0                	jmp    1b94d <mbedtls_mpi_core_read_be+0x5d>
   1b97d:	0f 1f 00             	nopl   (%rax)
   1b980:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b985:	eb 99                	jmp    1b920 <mbedtls_mpi_core_read_be+0x30>
   1b987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b98e:	00 00 

000000000001b990 <mbedtls_mpi_core_write_le>:
   1b990:	f3 0f 1e fa          	endbr64 
   1b994:	48 c1 e6 03          	shl    $0x3,%rsi
   1b998:	49 89 c9             	mov    %rcx,%r9
   1b99b:	48 39 ce             	cmp    %rcx,%rsi
   1b99e:	0f 82 8c 00 00 00    	jb     1ba30 <mbedtls_mpi_core_write_le+0xa0>
   1b9a4:	76 4e                	jbe    1b9f4 <mbedtls_mpi_core_write_le+0x64>
   1b9a6:	48 89 c8             	mov    %rcx,%rax
   1b9a9:	83 e1 07             	and    $0x7,%ecx
   1b9ac:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b9b0:	c1 e1 03             	shl    $0x3,%ecx
   1b9b3:	48 8b 04 07          	mov    (%rdi,%rax,1),%rax
   1b9b7:	48 d3 e8             	shr    %cl,%rax
   1b9ba:	84 c0                	test   %al,%al
   1b9bc:	0f 85 96 00 00 00    	jne    1ba58 <mbedtls_mpi_core_write_le+0xc8>
   1b9c2:	4c 89 c8             	mov    %r9,%rax
   1b9c5:	eb 24                	jmp    1b9eb <mbedtls_mpi_core_write_le+0x5b>
   1b9c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b9ce:	00 00 
   1b9d0:	49 89 c0             	mov    %rax,%r8
   1b9d3:	89 c1                	mov    %eax,%ecx
   1b9d5:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   1b9d9:	83 e1 07             	and    $0x7,%ecx
   1b9dc:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
   1b9e0:	c1 e1 03             	shl    $0x3,%ecx
   1b9e3:	49 d3 e8             	shr    %cl,%r8
   1b9e6:	45 84 c0             	test   %r8b,%r8b
   1b9e9:	75 6d                	jne    1ba58 <mbedtls_mpi_core_write_le+0xc8>
   1b9eb:	48 83 c0 01          	add    $0x1,%rax
   1b9ef:	48 39 c6             	cmp    %rax,%rsi
   1b9f2:	75 dc                	jne    1b9d0 <mbedtls_mpi_core_write_le+0x40>
   1b9f4:	4d 89 ca             	mov    %r9,%r10
   1b9f7:	4d 85 c9             	test   %r9,%r9
   1b9fa:	74 2c                	je     1ba28 <mbedtls_mpi_core_write_le+0x98>
   1b9fc:	31 c0                	xor    %eax,%eax
   1b9fe:	66 90                	xchg   %ax,%ax
   1ba00:	49 89 c0             	mov    %rax,%r8
   1ba03:	89 c1                	mov    %eax,%ecx
   1ba05:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   1ba09:	83 e1 07             	and    $0x7,%ecx
   1ba0c:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
   1ba10:	c1 e1 03             	shl    $0x3,%ecx
   1ba13:	49 d3 e8             	shr    %cl,%r8
   1ba16:	44 88 04 02          	mov    %r8b,(%rdx,%rax,1)
   1ba1a:	48 83 c0 01          	add    $0x1,%rax
   1ba1e:	4c 39 d0             	cmp    %r10,%rax
   1ba21:	72 dd                	jb     1ba00 <mbedtls_mpi_core_write_le+0x70>
   1ba23:	4c 39 ce             	cmp    %r9,%rsi
   1ba26:	72 10                	jb     1ba38 <mbedtls_mpi_core_write_le+0xa8>
   1ba28:	31 c0                	xor    %eax,%eax
   1ba2a:	c3                   	retq   
   1ba2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ba30:	49 89 f2             	mov    %rsi,%r10
   1ba33:	48 85 f6             	test   %rsi,%rsi
   1ba36:	75 c4                	jne    1b9fc <mbedtls_mpi_core_write_le+0x6c>
   1ba38:	49 29 f1             	sub    %rsi,%r9
   1ba3b:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   1ba3f:	48 83 ec 08          	sub    $0x8,%rsp
   1ba43:	31 f6                	xor    %esi,%esi
   1ba45:	4c 89 ca             	mov    %r9,%rdx
   1ba48:	e8 53 88 fe ff       	callq  42a0 <memset@plt>
   1ba4d:	31 c0                	xor    %eax,%eax
   1ba4f:	48 83 c4 08          	add    $0x8,%rsp
   1ba53:	c3                   	retq   
   1ba54:	0f 1f 40 00          	nopl   0x0(%rax)
   1ba58:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1ba5d:	c3                   	retq   
   1ba5e:	66 90                	xchg   %ax,%ax

000000000001ba60 <mbedtls_mpi_core_write_be>:
   1ba60:	f3 0f 1e fa          	endbr64 
   1ba64:	41 54                	push   %r12
   1ba66:	55                   	push   %rbp
   1ba67:	48 8d 2c f5 00 00 00 	lea    0x0(,%rsi,8),%rbp
   1ba6e:	00 
   1ba6f:	53                   	push   %rbx
   1ba70:	48 89 fb             	mov    %rdi,%rbx
   1ba73:	48 89 d7             	mov    %rdx,%rdi
   1ba76:	48 89 ca             	mov    %rcx,%rdx
   1ba79:	48 39 cd             	cmp    %rcx,%rbp
   1ba7c:	0f 82 8e 00 00 00    	jb     1bb10 <mbedtls_mpi_core_write_be+0xb0>
   1ba82:	76 48                	jbe    1bacc <mbedtls_mpi_core_write_be+0x6c>
   1ba84:	48 89 c8             	mov    %rcx,%rax
   1ba87:	83 e1 07             	and    $0x7,%ecx
   1ba8a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1ba8e:	c1 e1 03             	shl    $0x3,%ecx
   1ba91:	48 8b 04 03          	mov    (%rbx,%rax,1),%rax
   1ba95:	48 d3 e8             	shr    %cl,%rax
   1ba98:	84 c0                	test   %al,%al
   1ba9a:	0f 85 90 00 00 00    	jne    1bb30 <mbedtls_mpi_core_write_be+0xd0>
   1baa0:	48 89 d0             	mov    %rdx,%rax
   1baa3:	eb 1e                	jmp    1bac3 <mbedtls_mpi_core_write_be+0x63>
   1baa5:	0f 1f 00             	nopl   (%rax)
   1baa8:	48 89 c6             	mov    %rax,%rsi
   1baab:	89 c1                	mov    %eax,%ecx
   1baad:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1bab1:	83 e1 07             	and    $0x7,%ecx
   1bab4:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
   1bab8:	c1 e1 03             	shl    $0x3,%ecx
   1babb:	48 d3 ee             	shr    %cl,%rsi
   1babe:	40 84 f6             	test   %sil,%sil
   1bac1:	75 6d                	jne    1bb30 <mbedtls_mpi_core_write_be+0xd0>
   1bac3:	48 83 c0 01          	add    $0x1,%rax
   1bac7:	48 39 c5             	cmp    %rax,%rbp
   1baca:	75 dc                	jne    1baa8 <mbedtls_mpi_core_write_be+0x48>
   1bacc:	48 8d 7c 17 ff       	lea    -0x1(%rdi,%rdx,1),%rdi
   1bad1:	31 c0                	xor    %eax,%eax
   1bad3:	48 85 d2             	test   %rdx,%rdx
   1bad6:	74 2f                	je     1bb07 <mbedtls_mpi_core_write_be+0xa7>
   1bad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1badf:	00 
   1bae0:	48 89 c6             	mov    %rax,%rsi
   1bae3:	89 c1                	mov    %eax,%ecx
   1bae5:	48 83 c0 01          	add    $0x1,%rax
   1bae9:	48 83 ef 01          	sub    $0x1,%rdi
   1baed:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1baf1:	83 e1 07             	and    $0x7,%ecx
   1baf4:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
   1baf8:	c1 e1 03             	shl    $0x3,%ecx
   1bafb:	48 d3 ee             	shr    %cl,%rsi
   1bafe:	40 88 77 01          	mov    %sil,0x1(%rdi)
   1bb02:	48 39 c2             	cmp    %rax,%rdx
   1bb05:	75 d9                	jne    1bae0 <mbedtls_mpi_core_write_be+0x80>
   1bb07:	5b                   	pop    %rbx
   1bb08:	31 c0                	xor    %eax,%eax
   1bb0a:	5d                   	pop    %rbp
   1bb0b:	41 5c                	pop    %r12
   1bb0d:	c3                   	retq   
   1bb0e:	66 90                	xchg   %ax,%ax
   1bb10:	48 29 ea             	sub    %rbp,%rdx
   1bb13:	31 f6                	xor    %esi,%esi
   1bb15:	4c 8d 24 17          	lea    (%rdi,%rdx,1),%r12
   1bb19:	e8 82 87 fe ff       	callq  42a0 <memset@plt>
   1bb1e:	4c 89 e7             	mov    %r12,%rdi
   1bb21:	48 89 ea             	mov    %rbp,%rdx
   1bb24:	eb a6                	jmp    1bacc <mbedtls_mpi_core_write_be+0x6c>
   1bb26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bb2d:	00 00 00 
   1bb30:	5b                   	pop    %rbx
   1bb31:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1bb36:	5d                   	pop    %rbp
   1bb37:	41 5c                	pop    %r12
   1bb39:	c3                   	retq   
   1bb3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001bb40 <mbedtls_mpi_core_shift_r>:
   1bb40:	f3 0f 1e fa          	endbr64 
   1bb44:	48 89 d1             	mov    %rdx,%rcx
   1bb47:	49 89 d0             	mov    %rdx,%r8
   1bb4a:	48 c1 e9 06          	shr    $0x6,%rcx
   1bb4e:	41 83 e0 3f          	and    $0x3f,%r8d
   1bb52:	48 39 f1             	cmp    %rsi,%rcx
   1bb55:	77 07                	ja     1bb5e <mbedtls_mpi_core_shift_r+0x1e>
   1bb57:	75 17                	jne    1bb70 <mbedtls_mpi_core_shift_r+0x30>
   1bb59:	4d 85 c0             	test   %r8,%r8
   1bb5c:	74 12                	je     1bb70 <mbedtls_mpi_core_shift_r+0x30>
   1bb5e:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   1bb65:	00 
   1bb66:	31 f6                	xor    %esi,%esi
   1bb68:	e9 33 87 fe ff       	jmpq   42a0 <memset@plt>
   1bb6d:	0f 1f 00             	nopl   (%rax)
   1bb70:	48 83 fa 3f          	cmp    $0x3f,%rdx
   1bb74:	0f 86 a6 00 00 00    	jbe    1bc20 <mbedtls_mpi_core_shift_r+0xe0>
   1bb7a:	49 89 f2             	mov    %rsi,%r10
   1bb7d:	49 29 ca             	sub    %rcx,%r10
   1bb80:	74 27                	je     1bba9 <mbedtls_mpi_core_shift_r+0x69>
   1bb82:	48 8d 04 cf          	lea    (%rdi,%rcx,8),%rax
   1bb86:	48 f7 d9             	neg    %rcx
   1bb89:	4c 8d 0c f7          	lea    (%rdi,%rsi,8),%r9
   1bb8d:	48 c1 e1 03          	shl    $0x3,%rcx
   1bb91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bb98:	48 8b 10             	mov    (%rax),%rdx
   1bb9b:	48 83 c0 08          	add    $0x8,%rax
   1bb9f:	48 89 54 08 f8       	mov    %rdx,-0x8(%rax,%rcx,1)
   1bba4:	4c 39 c8             	cmp    %r9,%rax
   1bba7:	75 ef                	jne    1bb98 <mbedtls_mpi_core_shift_r+0x58>
   1bba9:	4c 39 d6             	cmp    %r10,%rsi
   1bbac:	76 72                	jbe    1bc20 <mbedtls_mpi_core_shift_r+0xe0>
   1bbae:	4a 8d 04 d7          	lea    (%rdi,%r10,8),%rax
   1bbb2:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
   1bbb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bbbd:	00 00 00 
   1bbc0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1bbc7:	48 83 c0 08          	add    $0x8,%rax
   1bbcb:	48 39 c2             	cmp    %rax,%rdx
   1bbce:	75 f0                	jne    1bbc0 <mbedtls_mpi_core_shift_r+0x80>
   1bbd0:	4d 85 c0             	test   %r8,%r8
   1bbd3:	74 55                	je     1bc2a <mbedtls_mpi_core_shift_r+0xea>
   1bbd5:	41 ba 40 00 00 00    	mov    $0x40,%r10d
   1bbdb:	48 8d 54 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rdx
   1bbe0:	45 89 c3             	mov    %r8d,%r11d
   1bbe3:	31 f6                	xor    %esi,%esi
   1bbe5:	45 29 c2             	sub    %r8d,%r10d
   1bbe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bbef:	00 
   1bbf0:	48 8b 02             	mov    (%rdx),%rax
   1bbf3:	49 89 f1             	mov    %rsi,%r9
   1bbf6:	44 89 d1             	mov    %r10d,%ecx
   1bbf9:	49 89 d0             	mov    %rdx,%r8
   1bbfc:	48 83 ea 08          	sub    $0x8,%rdx
   1bc00:	48 89 c6             	mov    %rax,%rsi
   1bc03:	48 d3 e6             	shl    %cl,%rsi
   1bc06:	44 89 d9             	mov    %r11d,%ecx
   1bc09:	48 d3 e8             	shr    %cl,%rax
   1bc0c:	4c 09 c8             	or     %r9,%rax
   1bc0f:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1bc13:	49 39 f8             	cmp    %rdi,%r8
   1bc16:	75 d8                	jne    1bbf0 <mbedtls_mpi_core_shift_r+0xb0>
   1bc18:	c3                   	retq   
   1bc19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bc20:	4d 85 c0             	test   %r8,%r8
   1bc23:	74 05                	je     1bc2a <mbedtls_mpi_core_shift_r+0xea>
   1bc25:	48 85 f6             	test   %rsi,%rsi
   1bc28:	75 ab                	jne    1bbd5 <mbedtls_mpi_core_shift_r+0x95>
   1bc2a:	c3                   	retq   
   1bc2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bc30 <mbedtls_mpi_core_add>:
   1bc30:	f3 0f 1e fa          	endbr64 
   1bc34:	48 85 c9             	test   %rcx,%rcx
   1bc37:	74 37                	je     1bc70 <mbedtls_mpi_core_add+0x40>
   1bc39:	45 31 c0             	xor    %r8d,%r8d
   1bc3c:	31 c0                	xor    %eax,%eax
   1bc3e:	66 90                	xchg   %ax,%ax
   1bc40:	45 31 d2             	xor    %r10d,%r10d
   1bc43:	4a 03 04 c6          	add    (%rsi,%r8,8),%rax
   1bc47:	41 0f 92 c2          	setb   %r10b
   1bc4b:	4a 03 04 c2          	add    (%rdx,%r8,8),%rax
   1bc4f:	49 89 c1             	mov    %rax,%r9
   1bc52:	4c 89 d0             	mov    %r10,%rax
   1bc55:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
   1bc59:	48 83 d0 00          	adc    $0x0,%rax
   1bc5d:	49 83 c0 01          	add    $0x1,%r8
   1bc61:	4c 39 c1             	cmp    %r8,%rcx
   1bc64:	75 da                	jne    1bc40 <mbedtls_mpi_core_add+0x10>
   1bc66:	c3                   	retq   
   1bc67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bc6e:	00 00 
   1bc70:	31 c0                	xor    %eax,%eax
   1bc72:	c3                   	retq   
   1bc73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1bc7a:	00 00 00 00 
   1bc7e:	66 90                	xchg   %ax,%ax

000000000001bc80 <mbedtls_mpi_core_add_if>:
   1bc80:	f3 0f 1e fa          	endbr64 
   1bc84:	41 54                	push   %r12
   1bc86:	49 89 f4             	mov    %rsi,%r12
   1bc89:	55                   	push   %rbp
   1bc8a:	48 89 d5             	mov    %rdx,%rbp
   1bc8d:	53                   	push   %rbx
   1bc8e:	48 89 fb             	mov    %rdi,%rbx
   1bc91:	89 cf                	mov    %ecx,%edi
   1bc93:	e8 78 0b 00 00       	callq  1c810 <mbedtls_ct_mpi_uint_mask>
   1bc98:	48 85 ed             	test   %rbp,%rbp
   1bc9b:	74 43                	je     1bce0 <mbedtls_mpi_core_add_if+0x60>
   1bc9d:	48 89 c2             	mov    %rax,%rdx
   1bca0:	31 c9                	xor    %ecx,%ecx
   1bca2:	31 c0                	xor    %eax,%eax
   1bca4:	0f 1f 40 00          	nopl   0x0(%rax)
   1bca8:	49 8b 3c cc          	mov    (%r12,%rcx,8),%rdi
   1bcac:	45 31 c0             	xor    %r8d,%r8d
   1bcaf:	48 21 d7             	and    %rdx,%rdi
   1bcb2:	48 03 04 cb          	add    (%rbx,%rcx,8),%rax
   1bcb6:	41 0f 92 c0          	setb   %r8b
   1bcba:	48 01 c7             	add    %rax,%rdi
   1bcbd:	4c 89 c0             	mov    %r8,%rax
   1bcc0:	48 89 3c cb          	mov    %rdi,(%rbx,%rcx,8)
   1bcc4:	48 83 d0 00          	adc    $0x0,%rax
   1bcc8:	48 83 c1 01          	add    $0x1,%rcx
   1bccc:	48 39 cd             	cmp    %rcx,%rbp
   1bccf:	75 d7                	jne    1bca8 <mbedtls_mpi_core_add_if+0x28>
   1bcd1:	5b                   	pop    %rbx
   1bcd2:	5d                   	pop    %rbp
   1bcd3:	41 5c                	pop    %r12
   1bcd5:	c3                   	retq   
   1bcd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bcdd:	00 00 00 
   1bce0:	5b                   	pop    %rbx
   1bce1:	31 c0                	xor    %eax,%eax
   1bce3:	5d                   	pop    %rbp
   1bce4:	41 5c                	pop    %r12
   1bce6:	c3                   	retq   
   1bce7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bcee:	00 00 

000000000001bcf0 <mbedtls_mpi_core_sub>:
   1bcf0:	f3 0f 1e fa          	endbr64 
   1bcf4:	48 85 c9             	test   %rcx,%rcx
   1bcf7:	74 3f                	je     1bd38 <mbedtls_mpi_core_sub+0x48>
   1bcf9:	45 31 c9             	xor    %r9d,%r9d
   1bcfc:	31 c0                	xor    %eax,%eax
   1bcfe:	66 90                	xchg   %ax,%ax
   1bd00:	4e 8b 04 ce          	mov    (%rsi,%r9,8),%r8
   1bd04:	4e 8b 14 ca          	mov    (%rdx,%r9,8),%r10
   1bd08:	45 31 db             	xor    %r11d,%r11d
   1bd0b:	49 39 c0             	cmp    %rax,%r8
   1bd0e:	41 0f 92 c3          	setb   %r11b
   1bd12:	49 29 c0             	sub    %rax,%r8
   1bd15:	31 c0                	xor    %eax,%eax
   1bd17:	4d 39 c2             	cmp    %r8,%r10
   1bd1a:	0f 97 c0             	seta   %al
   1bd1d:	4d 29 d0             	sub    %r10,%r8
   1bd20:	4e 89 04 cf          	mov    %r8,(%rdi,%r9,8)
   1bd24:	49 83 c1 01          	add    $0x1,%r9
   1bd28:	4c 01 d8             	add    %r11,%rax
   1bd2b:	4c 39 c9             	cmp    %r9,%rcx
   1bd2e:	75 d0                	jne    1bd00 <mbedtls_mpi_core_sub+0x10>
   1bd30:	c3                   	retq   
   1bd31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bd38:	31 c0                	xor    %eax,%eax
   1bd3a:	c3                   	retq   
   1bd3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bd40 <mbedtls_mpi_core_mla>:
   1bd40:	f3 0f 1e fa          	endbr64 
   1bd44:	49 89 f1             	mov    %rsi,%r9
   1bd47:	49 89 cb             	mov    %rcx,%r11
   1bd4a:	53                   	push   %rbx
   1bd4b:	48 89 d6             	mov    %rdx,%rsi
   1bd4e:	49 39 c9             	cmp    %rcx,%r9
   1bd51:	4c 89 c3             	mov    %r8,%rbx
   1bd54:	4d 0f 46 d9          	cmovbe %r9,%r11
   1bd58:	4c 89 d9             	mov    %r11,%rcx
   1bd5b:	4d 29 d9             	sub    %r11,%r9
   1bd5e:	41 83 e3 07          	and    $0x7,%r11d
   1bd62:	48 c1 e9 03          	shr    $0x3,%rcx
   1bd66:	48 85 c9             	test   %rcx,%rcx
   1bd69:	0f 84 12 01 00 00    	je     1be81 <mbedtls_mpi_core_mla+0x141>
   1bd6f:	4c 8d 51 ff          	lea    -0x1(%rcx),%r10
   1bd73:	31 c9                	xor    %ecx,%ecx
   1bd75:	0f 1f 00             	nopl   (%rax)
   1bd78:	49 83 ea 01          	sub    $0x1,%r10
   1bd7c:	4d 31 c0             	xor    %r8,%r8
   1bd7f:	48 8b 06             	mov    (%rsi),%rax
   1bd82:	48 f7 e3             	mul    %rbx
   1bd85:	48 83 c6 08          	add    $0x8,%rsi
   1bd89:	48 01 c8             	add    %rcx,%rax
   1bd8c:	4c 89 c1             	mov    %r8,%rcx
   1bd8f:	48 83 d2 00          	adc    $0x0,%rdx
   1bd93:	90                   	nop
   1bd94:	48 01 07             	add    %rax,(%rdi)
   1bd97:	48 11 d1             	adc    %rdx,%rcx
   1bd9a:	48 83 c7 08          	add    $0x8,%rdi
   1bd9e:	48 8b 06             	mov    (%rsi),%rax
   1bda1:	48 f7 e3             	mul    %rbx
   1bda4:	48 83 c6 08          	add    $0x8,%rsi
   1bda8:	48 01 c8             	add    %rcx,%rax
   1bdab:	4c 89 c1             	mov    %r8,%rcx
   1bdae:	48 83 d2 00          	adc    $0x0,%rdx
   1bdb2:	90                   	nop
   1bdb3:	48 01 07             	add    %rax,(%rdi)
   1bdb6:	48 11 d1             	adc    %rdx,%rcx
   1bdb9:	48 83 c7 08          	add    $0x8,%rdi
   1bdbd:	48 8b 06             	mov    (%rsi),%rax
   1bdc0:	48 f7 e3             	mul    %rbx
   1bdc3:	48 83 c6 08          	add    $0x8,%rsi
   1bdc7:	48 01 c8             	add    %rcx,%rax
   1bdca:	4c 89 c1             	mov    %r8,%rcx
   1bdcd:	48 83 d2 00          	adc    $0x0,%rdx
   1bdd1:	90                   	nop
   1bdd2:	48 01 07             	add    %rax,(%rdi)
   1bdd5:	48 11 d1             	adc    %rdx,%rcx
   1bdd8:	48 83 c7 08          	add    $0x8,%rdi
   1bddc:	48 8b 06             	mov    (%rsi),%rax
   1bddf:	48 f7 e3             	mul    %rbx
   1bde2:	48 83 c6 08          	add    $0x8,%rsi
   1bde6:	48 01 c8             	add    %rcx,%rax
   1bde9:	4c 89 c1             	mov    %r8,%rcx
   1bdec:	48 83 d2 00          	adc    $0x0,%rdx
   1bdf0:	90                   	nop
   1bdf1:	48 01 07             	add    %rax,(%rdi)
   1bdf4:	48 11 d1             	adc    %rdx,%rcx
   1bdf7:	48 83 c7 08          	add    $0x8,%rdi
   1bdfb:	48 8b 06             	mov    (%rsi),%rax
   1bdfe:	48 f7 e3             	mul    %rbx
   1be01:	48 83 c6 08          	add    $0x8,%rsi
   1be05:	48 01 c8             	add    %rcx,%rax
   1be08:	4c 89 c1             	mov    %r8,%rcx
   1be0b:	48 83 d2 00          	adc    $0x0,%rdx
   1be0f:	90                   	nop
   1be10:	48 01 07             	add    %rax,(%rdi)
   1be13:	48 11 d1             	adc    %rdx,%rcx
   1be16:	48 83 c7 08          	add    $0x8,%rdi
   1be1a:	48 8b 06             	mov    (%rsi),%rax
   1be1d:	48 f7 e3             	mul    %rbx
   1be20:	48 83 c6 08          	add    $0x8,%rsi
   1be24:	48 01 c8             	add    %rcx,%rax
   1be27:	4c 89 c1             	mov    %r8,%rcx
   1be2a:	48 83 d2 00          	adc    $0x0,%rdx
   1be2e:	90                   	nop
   1be2f:	48 01 07             	add    %rax,(%rdi)
   1be32:	48 11 d1             	adc    %rdx,%rcx
   1be35:	48 83 c7 08          	add    $0x8,%rdi
   1be39:	48 8b 06             	mov    (%rsi),%rax
   1be3c:	48 f7 e3             	mul    %rbx
   1be3f:	48 83 c6 08          	add    $0x8,%rsi
   1be43:	48 01 c8             	add    %rcx,%rax
   1be46:	4c 89 c1             	mov    %r8,%rcx
   1be49:	48 83 d2 00          	adc    $0x0,%rdx
   1be4d:	90                   	nop
   1be4e:	48 01 07             	add    %rax,(%rdi)
   1be51:	48 11 d1             	adc    %rdx,%rcx
   1be54:	48 83 c7 08          	add    $0x8,%rdi
   1be58:	48 8b 06             	mov    (%rsi),%rax
   1be5b:	48 f7 e3             	mul    %rbx
   1be5e:	48 83 c6 08          	add    $0x8,%rsi
   1be62:	48 01 c8             	add    %rcx,%rax
   1be65:	4c 89 c1             	mov    %r8,%rcx
   1be68:	48 83 d2 00          	adc    $0x0,%rdx
   1be6c:	90                   	nop
   1be6d:	48 01 07             	add    %rax,(%rdi)
   1be70:	48 11 d1             	adc    %rdx,%rcx
   1be73:	48 83 c7 08          	add    $0x8,%rdi
   1be77:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
   1be7b:	0f 85 f7 fe ff ff    	jne    1bd78 <mbedtls_mpi_core_mla+0x38>
   1be81:	4d 8d 53 ff          	lea    -0x1(%r11),%r10
   1be85:	4d 85 db             	test   %r11,%r11
   1be88:	74 32                	je     1bebc <mbedtls_mpi_core_mla+0x17c>
   1be8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1be90:	49 83 ea 01          	sub    $0x1,%r10
   1be94:	4d 31 c0             	xor    %r8,%r8
   1be97:	48 8b 06             	mov    (%rsi),%rax
   1be9a:	48 f7 e3             	mul    %rbx
   1be9d:	48 83 c6 08          	add    $0x8,%rsi
   1bea1:	48 01 c8             	add    %rcx,%rax
   1bea4:	4c 89 c1             	mov    %r8,%rcx
   1bea7:	48 83 d2 00          	adc    $0x0,%rdx
   1beab:	90                   	nop
   1beac:	48 01 07             	add    %rax,(%rdi)
   1beaf:	48 11 d1             	adc    %rdx,%rcx
   1beb2:	48 83 c7 08          	add    $0x8,%rdi
   1beb6:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
   1beba:	75 d4                	jne    1be90 <mbedtls_mpi_core_mla+0x150>
   1bebc:	49 8d 41 ff          	lea    -0x1(%r9),%rax
   1bec0:	4d 85 c9             	test   %r9,%r9
   1bec3:	74 1d                	je     1bee2 <mbedtls_mpi_core_mla+0x1a2>
   1bec5:	0f 1f 00             	nopl   (%rax)
   1bec8:	48 03 0f             	add    (%rdi),%rcx
   1becb:	48 89 0f             	mov    %rcx,(%rdi)
   1bece:	0f 92 c1             	setb   %cl
   1bed1:	48 83 e8 01          	sub    $0x1,%rax
   1bed5:	48 83 c7 08          	add    $0x8,%rdi
   1bed9:	0f b6 c9             	movzbl %cl,%ecx
   1bedc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bee0:	75 e6                	jne    1bec8 <mbedtls_mpi_core_mla+0x188>
   1bee2:	48 89 c8             	mov    %rcx,%rax
   1bee5:	5b                   	pop    %rbx
   1bee6:	c3                   	retq   
   1bee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1beee:	00 00 

000000000001bef0 <mbedtls_mpi_core_mul>:
   1bef0:	f3 0f 1e fa          	endbr64 
   1bef4:	41 57                	push   %r15
   1bef6:	4d 89 c7             	mov    %r8,%r15
   1bef9:	41 56                	push   %r14
   1befb:	41 55                	push   %r13
   1befd:	49 89 f5             	mov    %rsi,%r13
   1bf00:	31 f6                	xor    %esi,%esi
   1bf02:	41 54                	push   %r12
   1bf04:	49 89 d4             	mov    %rdx,%r12
   1bf07:	4c 01 c2             	add    %r8,%rdx
   1bf0a:	55                   	push   %rbp
   1bf0b:	48 c1 e2 03          	shl    $0x3,%rdx
   1bf0f:	48 89 fd             	mov    %rdi,%rbp
   1bf12:	53                   	push   %rbx
   1bf13:	48 89 cb             	mov    %rcx,%rbx
   1bf16:	48 83 ec 08          	sub    $0x8,%rsp
   1bf1a:	e8 81 83 fe ff       	callq  42a0 <memset@plt>
   1bf1f:	4d 85 ff             	test   %r15,%r15
   1bf22:	74 2d                	je     1bf51 <mbedtls_mpi_core_mul+0x61>
   1bf24:	4d 8d 74 24 01       	lea    0x1(%r12),%r14
   1bf29:	4e 8d 3c fb          	lea    (%rbx,%r15,8),%r15
   1bf2d:	0f 1f 00             	nopl   (%rax)
   1bf30:	4c 8b 03             	mov    (%rbx),%r8
   1bf33:	48 89 ef             	mov    %rbp,%rdi
   1bf36:	4c 89 e1             	mov    %r12,%rcx
   1bf39:	4c 89 ea             	mov    %r13,%rdx
   1bf3c:	4c 89 f6             	mov    %r14,%rsi
   1bf3f:	48 83 c3 08          	add    $0x8,%rbx
   1bf43:	48 83 c5 08          	add    $0x8,%rbp
   1bf47:	e8 f4 fd ff ff       	callq  1bd40 <mbedtls_mpi_core_mla>
   1bf4c:	4c 39 fb             	cmp    %r15,%rbx
   1bf4f:	75 df                	jne    1bf30 <mbedtls_mpi_core_mul+0x40>
   1bf51:	48 83 c4 08          	add    $0x8,%rsp
   1bf55:	5b                   	pop    %rbx
   1bf56:	5d                   	pop    %rbp
   1bf57:	41 5c                	pop    %r12
   1bf59:	41 5d                	pop    %r13
   1bf5b:	41 5e                	pop    %r14
   1bf5d:	41 5f                	pop    %r15
   1bf5f:	c3                   	retq   

000000000001bf60 <mbedtls_mpi_core_montmul_init>:
   1bf60:	f3 0f 1e fa          	endbr64 
   1bf64:	48 8b 37             	mov    (%rdi),%rsi
   1bf67:	ba 04 00 00 00       	mov    $0x4,%edx
   1bf6c:	bf 02 00 00 00       	mov    $0x2,%edi
   1bf71:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
   1bf76:	83 e0 08             	and    $0x8,%eax
   1bf79:	48 01 f0             	add    %rsi,%rax
   1bf7c:	48 89 f1             	mov    %rsi,%rcx
   1bf7f:	49 89 f8             	mov    %rdi,%r8
   1bf82:	48 0f af c8          	imul   %rax,%rcx
   1bf86:	49 29 c8             	sub    %rcx,%r8
   1bf89:	49 0f af c0          	imul   %r8,%rax
   1bf8d:	83 ea 01             	sub    $0x1,%edx
   1bf90:	75 ea                	jne    1bf7c <mbedtls_mpi_core_montmul_init+0x1c>
   1bf92:	48 f7 d8             	neg    %rax
   1bf95:	c3                   	retq   
   1bf96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bf9d:	00 00 00 

000000000001bfa0 <mbedtls_mpi_core_montmul>:
   1bfa0:	f3 0f 1e fa          	endbr64 
   1bfa4:	41 57                	push   %r15
   1bfa6:	41 56                	push   %r14
   1bfa8:	41 55                	push   %r13
   1bfaa:	41 54                	push   %r12
   1bfac:	4d 89 c4             	mov    %r8,%r12
   1bfaf:	55                   	push   %rbp
   1bfb0:	4c 89 cd             	mov    %r9,%rbp
   1bfb3:	53                   	push   %rbx
   1bfb4:	48 89 f3             	mov    %rsi,%rbx
   1bfb7:	31 f6                	xor    %esi,%esi
   1bfb9:	48 83 ec 38          	sub    $0x38,%rsp
   1bfbd:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
   1bfc2:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1bfc7:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1bfcc:	4c 89 ca             	mov    %r9,%rdx
   1bfcf:	48 c1 e2 04          	shl    $0x4,%rdx
   1bfd3:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   1bfd8:	48 83 c2 08          	add    $0x8,%rdx
   1bfdc:	4c 89 ff             	mov    %r15,%rdi
   1bfdf:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1bfe4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1bfe9:	e8 b2 82 fe ff       	callq  42a0 <memset@plt>
   1bfee:	48 85 ed             	test   %rbp,%rbp
   1bff1:	0f 84 e9 00 00 00    	je     1c0e0 <mbedtls_mpi_core_montmul+0x140>
   1bff7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1bffc:	4c 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%r11
   1c003:	00 
   1c004:	49 89 d9             	mov    %rbx,%r9
   1c007:	4c 8d 6d 02          	lea    0x2(%rbp),%r13
   1c00b:	4f 8d 34 1f          	lea    (%r15,%r11,1),%r14
   1c00f:	4c 89 fb             	mov    %r15,%rbx
   1c012:	4d 89 cf             	mov    %r9,%r15
   1c015:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   1c01a:	4d 89 d6             	mov    %r10,%r14
   1c01d:	0f 1f 00             	nopl   (%rax)
   1c020:	4d 8b 07             	mov    (%r15),%r8
   1c023:	4d 8b 1e             	mov    (%r14),%r11
   1c026:	48 89 df             	mov    %rbx,%rdi
   1c029:	4c 89 f2             	mov    %r14,%rdx
   1c02c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1c031:	4c 89 ee             	mov    %r13,%rsi
   1c034:	49 83 c7 08          	add    $0x8,%r15
   1c038:	4d 0f af d8          	imul   %r8,%r11
   1c03c:	4c 03 1b             	add    (%rbx),%r11
   1c03f:	4c 0f af 5c 24 20    	imul   0x20(%rsp),%r11
   1c045:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1c04a:	e8 f1 fc ff ff       	callq  1bd40 <mbedtls_mpi_core_mla>
   1c04f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1c054:	48 89 df             	mov    %rbx,%rdi
   1c057:	48 89 e9             	mov    %rbp,%rcx
   1c05a:	4c 89 e2             	mov    %r12,%rdx
   1c05d:	4c 89 ee             	mov    %r13,%rsi
   1c060:	48 83 c3 08          	add    $0x8,%rbx
   1c064:	4d 89 d8             	mov    %r11,%r8
   1c067:	e8 d4 fc ff ff       	callq  1bd40 <mbedtls_mpi_core_mla>
   1c06c:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
   1c071:	75 ad                	jne    1c020 <mbedtls_mpi_core_montmul+0x80>
   1c073:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   1c078:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1c07d:	31 c9                	xor    %ecx,%ecx
   1c07f:	31 d2                	xor    %edx,%edx
   1c081:	4d 8b 04 ee          	mov    (%r14,%rbp,8),%r8
   1c085:	0f 1f 00             	nopl   (%rax)
   1c088:	49 8b 04 d6          	mov    (%r14,%rdx,8),%rax
   1c08c:	49 8b 34 d4          	mov    (%r12,%rdx,8),%rsi
   1c090:	31 ff                	xor    %edi,%edi
   1c092:	48 39 c8             	cmp    %rcx,%rax
   1c095:	40 0f 92 c7          	setb   %dil
   1c099:	48 29 c8             	sub    %rcx,%rax
   1c09c:	48 39 f0             	cmp    %rsi,%rax
   1c09f:	48 83 d7 00          	adc    $0x0,%rdi
   1c0a3:	48 29 f0             	sub    %rsi,%rax
   1c0a6:	49 89 04 d1          	mov    %rax,(%r9,%rdx,8)
   1c0aa:	48 83 c2 01          	add    $0x1,%rdx
   1c0ae:	48 89 f9             	mov    %rdi,%rcx
   1c0b1:	48 39 d5             	cmp    %rdx,%rbp
   1c0b4:	75 d2                	jne    1c088 <mbedtls_mpi_core_montmul+0xe8>
   1c0b6:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1c0bb:	44 31 c1             	xor    %r8d,%ecx
   1c0be:	48 83 c4 38          	add    $0x38,%rsp
   1c0c2:	4c 89 f2             	mov    %r14,%rdx
   1c0c5:	5b                   	pop    %rbx
   1c0c6:	48 89 ef             	mov    %rbp,%rdi
   1c0c9:	0f b6 c9             	movzbl %cl,%ecx
   1c0cc:	5d                   	pop    %rbp
   1c0cd:	41 5c                	pop    %r12
   1c0cf:	41 5d                	pop    %r13
   1c0d1:	41 5e                	pop    %r14
   1c0d3:	41 5f                	pop    %r15
   1c0d5:	e9 d6 07 00 00       	jmpq   1c8b0 <mbedtls_ct_mpi_uint_cond_assign>
   1c0da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c0e0:	4d 8b 07             	mov    (%r15),%r8
   1c0e3:	4d 89 fe             	mov    %r15,%r14
   1c0e6:	31 c9                	xor    %ecx,%ecx
   1c0e8:	eb cc                	jmp    1c0b6 <mbedtls_mpi_core_montmul+0x116>
   1c0ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001c0f0 <mbedtls_mpi_core_get_mont_r2_unsafe>:
   1c0f0:	f3 0f 1e fa          	endbr64 
   1c0f4:	55                   	push   %rbp
   1c0f5:	48 89 fd             	mov    %rdi,%rbp
   1c0f8:	53                   	push   %rbx
   1c0f9:	48 89 f3             	mov    %rsi,%rbx
   1c0fc:	be 01 00 00 00       	mov    $0x1,%esi
   1c101:	48 83 ec 08          	sub    $0x8,%rsp
   1c105:	e8 66 a6 ff ff       	callq  16770 <mbedtls_mpi_lset>
   1c10a:	85 c0                	test   %eax,%eax
   1c10c:	74 0a                	je     1c118 <mbedtls_mpi_core_get_mont_r2_unsafe+0x28>
   1c10e:	48 83 c4 08          	add    $0x8,%rsp
   1c112:	5b                   	pop    %rbx
   1c113:	5d                   	pop    %rbp
   1c114:	c3                   	retq   
   1c115:	0f 1f 00             	nopl   (%rax)
   1c118:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1c11c:	48 89 ef             	mov    %rbp,%rdi
   1c11f:	48 c1 e6 07          	shl    $0x7,%rsi
   1c123:	e8 08 a9 ff ff       	callq  16a30 <mbedtls_mpi_shift_l>
   1c128:	85 c0                	test   %eax,%eax
   1c12a:	75 e2                	jne    1c10e <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
   1c12c:	48 89 da             	mov    %rbx,%rdx
   1c12f:	48 89 ee             	mov    %rbp,%rsi
   1c132:	48 89 ef             	mov    %rbp,%rdi
   1c135:	e8 c6 c0 ff ff       	callq  18200 <mbedtls_mpi_mod_mpi>
   1c13a:	85 c0                	test   %eax,%eax
   1c13c:	75 d0                	jne    1c10e <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
   1c13e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1c142:	48 83 c4 08          	add    $0x8,%rsp
   1c146:	48 89 ef             	mov    %rbp,%rdi
   1c149:	5b                   	pop    %rbx
   1c14a:	5d                   	pop    %rbp
   1c14b:	e9 90 a3 ff ff       	jmpq   164e0 <mbedtls_mpi_shrink>

000000000001c150 <mbedtls_mpi_core_fill_random>:
   1c150:	f3 0f 1e fa          	endbr64 
   1c154:	41 57                	push   %r15
   1c156:	48 89 d0             	mov    %rdx,%rax
   1c159:	41 56                	push   %r14
   1c15b:	41 55                	push   %r13
   1c15d:	41 54                	push   %r12
   1c15f:	55                   	push   %rbp
   1c160:	31 ed                	xor    %ebp,%ebp
   1c162:	53                   	push   %rbx
   1c163:	48 83 ec 18          	sub    $0x18,%rsp
   1c167:	f6 c2 07             	test   $0x7,%dl
   1c16a:	40 0f 95 c5          	setne  %bpl
   1c16e:	48 c1 e8 03          	shr    $0x3,%rax
   1c172:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1c177:	48 01 c5             	add    %rax,%rbp
   1c17a:	4c 89 04 24          	mov    %r8,(%rsp)
   1c17e:	4c 8d 34 ed 00 00 00 	lea    0x0(,%rbp,8),%r14
   1c185:	00 
   1c186:	4d 89 f7             	mov    %r14,%r15
   1c189:	49 29 d7             	sub    %rdx,%r15
   1c18c:	48 39 f5             	cmp    %rsi,%rbp
   1c18f:	77 6f                	ja     1c200 <mbedtls_mpi_core_fill_random+0xb0>
   1c191:	48 89 f3             	mov    %rsi,%rbx
   1c194:	49 89 fd             	mov    %rdi,%r13
   1c197:	49 89 d4             	mov    %rdx,%r12
   1c19a:	31 f6                	xor    %esi,%esi
   1c19c:	4c 89 fa             	mov    %r15,%rdx
   1c19f:	48 29 eb             	sub    %rbp,%rbx
   1c1a2:	e8 f9 80 fe ff       	callq  42a0 <memset@plt>
   1c1a7:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   1c1ae:	00 
   1c1af:	4b 8d 7c 35 00       	lea    0x0(%r13,%r14,1),%rdi
   1c1b4:	31 f6                	xor    %esi,%esi
   1c1b6:	e8 e5 80 fe ff       	callq  42a0 <memset@plt>
   1c1bb:	4c 8b 04 24          	mov    (%rsp),%r8
   1c1bf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c1c4:	4c 89 e2             	mov    %r12,%rdx
   1c1c7:	4b 8d 74 3d 00       	lea    0x0(%r13,%r15,1),%rsi
   1c1cc:	4c 89 c7             	mov    %r8,%rdi
   1c1cf:	ff d1                	callq  *%rcx
   1c1d1:	41 89 c0             	mov    %eax,%r8d
   1c1d4:	85 c0                	test   %eax,%eax
   1c1d6:	75 10                	jne    1c1e8 <mbedtls_mpi_core_fill_random+0x98>
   1c1d8:	48 85 ed             	test   %rbp,%rbp
   1c1db:	74 0b                	je     1c1e8 <mbedtls_mpi_core_fill_random+0x98>
   1c1dd:	48 89 ee             	mov    %rbp,%rsi
   1c1e0:	4c 89 ef             	mov    %r13,%rdi
   1c1e3:	e8 c8 f4 ff ff       	callq  1b6b0 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1c1e8:	48 83 c4 18          	add    $0x18,%rsp
   1c1ec:	44 89 c0             	mov    %r8d,%eax
   1c1ef:	5b                   	pop    %rbx
   1c1f0:	5d                   	pop    %rbp
   1c1f1:	41 5c                	pop    %r12
   1c1f3:	41 5d                	pop    %r13
   1c1f5:	41 5e                	pop    %r14
   1c1f7:	41 5f                	pop    %r15
   1c1f9:	c3                   	retq   
   1c1fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c200:	41 b8 fc ff ff ff    	mov    $0xfffffffc,%r8d
   1c206:	eb e0                	jmp    1c1e8 <mbedtls_mpi_core_fill_random+0x98>
   1c208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c20f:	00 

000000000001c210 <mbedtls_mpi_core_random>:
   1c210:	f3 0f 1e fa          	endbr64 
   1c214:	41 57                	push   %r15
   1c216:	4d 89 cf             	mov    %r9,%r15
   1c219:	41 56                	push   %r14
   1c21b:	41 55                	push   %r13
   1c21d:	41 54                	push   %r12
   1c21f:	55                   	push   %rbp
   1c220:	48 89 fd             	mov    %rdi,%rbp
   1c223:	53                   	push   %rbx
   1c224:	48 89 cb             	mov    %rcx,%rbx
   1c227:	48 83 ec 38          	sub    $0x38,%rsp
   1c22b:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1c230:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   1c235:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1c23a:	48 85 c9             	test   %rcx,%rcx
   1c23d:	0f 84 bd 00 00 00    	je     1c300 <mbedtls_mpi_core_random+0xf0>
   1c243:	48 89 ce             	mov    %rcx,%rsi
   1c246:	48 89 d7             	mov    %rdx,%rdi
   1c249:	e8 12 f4 ff ff       	callq  1b660 <mbedtls_mpi_core_bitlen.part.0>
   1c24e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c253:	48 83 c0 07          	add    $0x7,%rax
   1c257:	48 89 c1             	mov    %rax,%rcx
   1c25a:	48 c1 e9 03          	shr    $0x3,%rcx
   1c25e:	48 83 f8 28          	cmp    $0x28,%rax
   1c262:	45 19 ed             	sbb    %r13d,%r13d
   1c265:	48 89 0c 24          	mov    %rcx,(%rsp)
   1c269:	41 81 e5 dc 00 00 00 	and    $0xdc,%r13d
   1c270:	41 83 c5 1e          	add    $0x1e,%r13d
   1c274:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1c278:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c27d:	0f 1f 00             	nopl   (%rax)
   1c280:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c285:	48 8b 14 24          	mov    (%rsp),%rdx
   1c289:	4d 89 f8             	mov    %r15,%r8
   1c28c:	48 89 de             	mov    %rbx,%rsi
   1c28f:	48 89 ef             	mov    %rbp,%rdi
   1c292:	e8 b9 fe ff ff       	callq  1c150 <mbedtls_mpi_core_fill_random>
   1c297:	41 89 c4             	mov    %eax,%r12d
   1c29a:	85 c0                	test   %eax,%eax
   1c29c:	75 47                	jne    1c2e5 <mbedtls_mpi_core_random+0xd5>
   1c29e:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1c2a3:	48 89 de             	mov    %rbx,%rsi
   1c2a6:	48 2b 54 24 10       	sub    0x10(%rsp),%rdx
   1c2ab:	48 89 ef             	mov    %rbp,%rdi
   1c2ae:	e8 8d f8 ff ff       	callq  1bb40 <mbedtls_mpi_core_shift_r>
   1c2b3:	41 83 ed 01          	sub    $0x1,%r13d
   1c2b7:	74 6f                	je     1c328 <mbedtls_mpi_core_random+0x118>
   1c2b9:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1c2be:	48 89 da             	mov    %rbx,%rdx
   1c2c1:	48 89 ee             	mov    %rbp,%rsi
   1c2c4:	e8 97 f4 ff ff       	callq  1b760 <mbedtls_mpi_core_uint_le_mpi>
   1c2c9:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1c2ce:	48 89 da             	mov    %rbx,%rdx
   1c2d1:	48 89 ef             	mov    %rbp,%rdi
   1c2d4:	41 89 c6             	mov    %eax,%r14d
   1c2d7:	e8 34 0c 00 00       	callq  1cf10 <mbedtls_mpi_core_lt_ct>
   1c2dc:	45 85 f6             	test   %r14d,%r14d
   1c2df:	74 9f                	je     1c280 <mbedtls_mpi_core_random+0x70>
   1c2e1:	85 c0                	test   %eax,%eax
   1c2e3:	74 9b                	je     1c280 <mbedtls_mpi_core_random+0x70>
   1c2e5:	48 83 c4 38          	add    $0x38,%rsp
   1c2e9:	44 89 e0             	mov    %r12d,%eax
   1c2ec:	5b                   	pop    %rbx
   1c2ed:	5d                   	pop    %rbp
   1c2ee:	41 5c                	pop    %r12
   1c2f0:	41 5d                	pop    %r13
   1c2f2:	41 5e                	pop    %r14
   1c2f4:	41 5f                	pop    %r15
   1c2f6:	c3                   	retq   
   1c2f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c2fe:	00 00 
   1c300:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1c307:	00 00 
   1c309:	b8 07 00 00 00       	mov    $0x7,%eax
   1c30e:	41 bd fa 00 00 00    	mov    $0xfa,%r13d
   1c314:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1c31b:	00 
   1c31c:	e9 53 ff ff ff       	jmpq   1c274 <mbedtls_mpi_core_random+0x64>
   1c321:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c328:	f3 0f 1e fa          	endbr64 
   1c32c:	41 bc f2 ff ff ff    	mov    $0xfffffff2,%r12d
   1c332:	eb b1                	jmp    1c2e5 <mbedtls_mpi_core_random+0xd5>
   1c334:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c33b:	00 00 00 00 
   1c33f:	90                   	nop

000000000001c340 <mbedtls_mpi_core_exp_mod_working_limbs>:
   1c340:	f3 0f 1e fa          	endbr64 
   1c344:	48 c1 e6 06          	shl    $0x6,%rsi
   1c348:	49 89 f8             	mov    %rdi,%r8
   1c34b:	48 83 fe 50          	cmp    $0x50,%rsi
   1c34f:	48 19 ff             	sbb    %rdi,%rdi
   1c352:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   1c356:	48 83 c7 07          	add    $0x7,%rdi
   1c35a:	49 0f af f8          	imul   %r8,%rdi
   1c35e:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1c362:	c3                   	retq   
   1c363:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c36a:	00 00 00 00 
   1c36e:	66 90                	xchg   %ax,%ax

000000000001c370 <mbedtls_mpi_core_exp_mod>:
   1c370:	f3 0f 1e fa          	endbr64 
   1c374:	41 57                	push   %r15
   1c376:	4c 89 c8             	mov    %r9,%rax
   1c379:	49 89 cf             	mov    %rcx,%r15
   1c37c:	41 56                	push   %r14
   1c37e:	48 c1 e0 06          	shl    $0x6,%rax
   1c382:	49 89 d6             	mov    %rdx,%r14
   1c385:	41 55                	push   %r13
   1c387:	4d 89 cd             	mov    %r9,%r13
   1c38a:	41 54                	push   %r12
   1c38c:	49 89 f4             	mov    %rsi,%r12
   1c38f:	55                   	push   %rbp
   1c390:	48 89 fd             	mov    %rdi,%rbp
   1c393:	4a 8d 3c fd 00 00 00 	lea    0x0(,%r15,8),%rdi
   1c39a:	00 
   1c39b:	53                   	push   %rbx
   1c39c:	48 83 ec 68          	sub    $0x68,%rsp
   1c3a0:	48 83 f8 50          	cmp    $0x50,%rax
   1c3a4:	48 19 f6             	sbb    %rsi,%rsi
   1c3a7:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   1c3ac:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
   1c3b0:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   1c3b5:	48 83 c6 04          	add    $0x4,%rsi
   1c3b9:	48 83 f8 50          	cmp    $0x50,%rax
   1c3bd:	19 c9                	sbb    %ecx,%ecx
   1c3bf:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1c3c4:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c3cb:	00 
   1c3cc:	83 c1 02             	add    $0x2,%ecx
   1c3cf:	48 83 f8 50          	cmp    $0x50,%rax
   1c3d3:	48 19 c0             	sbb    %rax,%rax
   1c3d6:	48 83 c0 02          	add    $0x2,%rax
   1c3da:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1c3df:	4c 89 f8             	mov    %r15,%rax
   1c3e2:	48 d3 e0             	shl    %cl,%rax
   1c3e5:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
   1c3e9:	48 8b 32             	mov    (%rdx),%rsi
   1c3ec:	ba 04 00 00 00       	mov    $0x4,%edx
   1c3f1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1c3f6:	48 01 f8             	add    %rdi,%rax
   1c3f9:	bf 02 00 00 00       	mov    $0x2,%edi
   1c3fe:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c403:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
   1c408:	83 e0 08             	and    $0x8,%eax
   1c40b:	48 01 f0             	add    %rsi,%rax
   1c40e:	48 89 f1             	mov    %rsi,%rcx
   1c411:	48 89 fb             	mov    %rdi,%rbx
   1c414:	48 0f af c8          	imul   %rax,%rcx
   1c418:	48 29 cb             	sub    %rcx,%rbx
   1c41b:	48 0f af c3          	imul   %rbx,%rax
   1c41f:	83 ea 01             	sub    $0x1,%edx
   1c422:	75 ea                	jne    1c40e <mbedtls_mpi_core_exp_mod+0x9e>
   1c424:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1c429:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1c430:	00 
   1c431:	48 f7 d8             	neg    %rax
   1c434:	31 f6                	xor    %esi,%esi
   1c436:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1c43b:	48 89 da             	mov    %rbx,%rdx
   1c43e:	e8 5d 7e fe ff       	callq  42a0 <memset@plt>
   1c443:	4d 89 f9             	mov    %r15,%r9
   1c446:	4d 89 f0             	mov    %r14,%r8
   1c449:	4c 89 f9             	mov    %r15,%rcx
   1c44c:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c453:	00 
   1c454:	48 c7 06 01 00 00 00 	movq   $0x1,(%rsi)
   1c45b:	ff 74 24 10          	pushq  0x10(%rsp)
   1c45f:	ff 74 24 30          	pushq  0x30(%rsp)
   1c463:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   1c46a:	00 
   1c46b:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   1c472:	00 
   1c473:	48 89 f7             	mov    %rsi,%rdi
   1c476:	e8 25 fb ff ff       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1c47b:	48 89 da             	mov    %rbx,%rdx
   1c47e:	48 03 9c 24 b8 00 00 	add    0xb8(%rsp),%rbx
   1c485:	00 
   1c486:	4c 89 e6             	mov    %r12,%rsi
   1c489:	48 89 df             	mov    %rbx,%rdi
   1c48c:	49 89 dc             	mov    %rbx,%r12
   1c48f:	e8 8c 7e fe ff       	callq  4320 <memcpy@plt>
   1c494:	41 59                	pop    %r9
   1c496:	41 5a                	pop    %r10
   1c498:	b8 02 00 00 00       	mov    $0x2,%eax
   1c49d:	48 83 7c 24 20 02    	cmpq   $0x2,0x20(%rsp)
   1c4a3:	74 58                	je     1c4fd <mbedtls_mpi_core_exp_mod+0x18d>
   1c4a5:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   1c4aa:	4d 89 e5             	mov    %r12,%r13
   1c4ad:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   1c4b2:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   1c4b7:	48 89 dd             	mov    %rbx,%rbp
   1c4ba:	4c 89 fb             	mov    %r15,%rbx
   1c4bd:	49 89 c7             	mov    %rax,%r15
   1c4c0:	4c 89 ee             	mov    %r13,%rsi
   1c4c3:	4c 03 6c 24 18       	add    0x18(%rsp),%r13
   1c4c8:	ff 74 24 10          	pushq  0x10(%rsp)
   1c4cc:	4d 89 f0             	mov    %r14,%r8
   1c4cf:	41 54                	push   %r12
   1c4d1:	4c 89 ef             	mov    %r13,%rdi
   1c4d4:	49 89 d9             	mov    %rbx,%r9
   1c4d7:	48 89 d9             	mov    %rbx,%rcx
   1c4da:	48 89 ea             	mov    %rbp,%rdx
   1c4dd:	49 83 c7 01          	add    $0x1,%r15
   1c4e1:	e8 ba fa ff ff       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1c4e6:	5f                   	pop    %rdi
   1c4e7:	41 58                	pop    %r8
   1c4e9:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
   1c4ee:	75 d0                	jne    1c4c0 <mbedtls_mpi_core_exp_mod+0x150>
   1c4f0:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   1c4f5:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   1c4fa:	49 89 df             	mov    %rbx,%r15
   1c4fd:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1c502:	48 89 ef             	mov    %rbp,%rdi
   1c505:	49 89 ec             	mov    %rbp,%r12
   1c508:	31 db                	xor    %ebx,%ebx
   1c50a:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c511:	00 
   1c512:	4c 89 fd             	mov    %r15,%rbp
   1c515:	e8 06 7e fe ff       	callq  4320 <memcpy@plt>
   1c51a:	31 c0                	xor    %eax,%eax
   1c51c:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   1c521:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1c528:	00 00 
   1c52a:	49 89 c6             	mov    %rax,%r14
   1c52d:	0f 1f 00             	nopl   (%rax)
   1c530:	ff 74 24 10          	pushq  0x10(%rsp)
   1c534:	48 89 e9             	mov    %rbp,%rcx
   1c537:	4c 89 e6             	mov    %r12,%rsi
   1c53a:	49 89 e9             	mov    %rbp,%r9
   1c53d:	ff 74 24 30          	pushq  0x30(%rsp)
   1c541:	4c 89 e2             	mov    %r12,%rdx
   1c544:	4c 89 e7             	mov    %r12,%rdi
   1c547:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1c54c:	e8 4f fa ff ff       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1c551:	59                   	pop    %rcx
   1c552:	5e                   	pop    %rsi
   1c553:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   1c559:	0f 85 d1 00 00 00    	jne    1c630 <mbedtls_mpi_core_exp_mod+0x2c0>
   1c55f:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1c564:	49 83 ed 01          	sub    $0x1,%r13
   1c568:	48 01 db             	add    %rbx,%rbx
   1c56b:	49 83 c6 01          	add    $0x1,%r14
   1c56f:	4a 8b 04 e8          	mov    (%rax,%r13,8),%rax
   1c573:	48 89 c2             	mov    %rax,%rdx
   1c576:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c57b:	4c 89 e8             	mov    %r13,%rax
   1c57e:	48 c1 ea 3f          	shr    $0x3f,%rdx
   1c582:	48 83 c8 3f          	or     $0x3f,%rax
   1c586:	48 c7 44 24 08 3f 00 	movq   $0x3f,0x8(%rsp)
   1c58d:	00 00 
   1c58f:	48 09 d3             	or     %rdx,%rbx
   1c592:	4c 39 74 24 50       	cmp    %r14,0x50(%rsp)
   1c597:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1c59c:	75 92                	jne    1c530 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c59e:	66 90                	xchg   %ax,%ax
   1c5a0:	4c 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%r15
   1c5a7:	00 
   1c5a8:	45 31 f6             	xor    %r14d,%r14d
   1c5ab:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   1c5b0:	4d 89 fc             	mov    %r15,%r12
   1c5b3:	4d 89 f7             	mov    %r14,%r15
   1c5b6:	49 89 de             	mov    %rbx,%r14
   1c5b9:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
   1c5be:	66 90                	xchg   %ax,%ax
   1c5c0:	4c 89 f6             	mov    %r14,%rsi
   1c5c3:	4c 89 ff             	mov    %r15,%rdi
   1c5c6:	e8 85 02 00 00       	callq  1c850 <mbedtls_ct_size_bool_eq>
   1c5cb:	4c 39 e3             	cmp    %r12,%rbx
   1c5ce:	74 11                	je     1c5e1 <mbedtls_mpi_core_exp_mod+0x271>
   1c5d0:	0f b6 c8             	movzbl %al,%ecx
   1c5d3:	4c 89 e2             	mov    %r12,%rdx
   1c5d6:	48 89 de             	mov    %rbx,%rsi
   1c5d9:	48 89 ef             	mov    %rbp,%rdi
   1c5dc:	e8 cf 02 00 00       	callq  1c8b0 <mbedtls_ct_mpi_uint_cond_assign>
   1c5e1:	49 83 c7 01          	add    $0x1,%r15
   1c5e5:	4c 03 64 24 18       	add    0x18(%rsp),%r12
   1c5ea:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
   1c5ef:	75 cf                	jne    1c5c0 <mbedtls_mpi_core_exp_mod+0x250>
   1c5f1:	4c 8b 64 24 48       	mov    0x48(%rsp),%r12
   1c5f6:	ff 74 24 10          	pushq  0x10(%rsp)
   1c5fa:	49 89 e9             	mov    %rbp,%r9
   1c5fd:	48 89 e9             	mov    %rbp,%rcx
   1c600:	ff 74 24 30          	pushq  0x30(%rsp)
   1c604:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1c609:	4c 89 e6             	mov    %r12,%rsi
   1c60c:	4c 89 e7             	mov    %r12,%rdi
   1c60f:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1c614:	e8 87 f9 ff ff       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1c619:	58                   	pop    %rax
   1c61a:	5a                   	pop    %rdx
   1c61b:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   1c621:	74 6d                	je     1c690 <mbedtls_mpi_core_exp_mod+0x320>
   1c623:	31 db                	xor    %ebx,%ebx
   1c625:	45 31 f6             	xor    %r14d,%r14d
   1c628:	e9 03 ff ff ff       	jmpq   1c530 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c62d:	0f 1f 00             	nopl   (%rax)
   1c630:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1c635:	48 83 6c 24 08 01    	subq   $0x1,0x8(%rsp)
   1c63b:	48 01 db             	add    %rbx,%rbx
   1c63e:	49 83 c6 01          	add    $0x1,%r14
   1c642:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1c647:	4a 8b 3c ef          	mov    (%rdi,%r13,8),%rdi
   1c64b:	89 c1                	mov    %eax,%ecx
   1c64d:	4c 09 e8             	or     %r13,%rax
   1c650:	48 89 fa             	mov    %rdi,%rdx
   1c653:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1c658:	48 d3 ea             	shr    %cl,%rdx
   1c65b:	83 e2 01             	and    $0x1,%edx
   1c65e:	48 09 d3             	or     %rdx,%rbx
   1c661:	4c 3b 74 24 50       	cmp    0x50(%rsp),%r14
   1c666:	0f 84 34 ff ff ff    	je     1c5a0 <mbedtls_mpi_core_exp_mod+0x230>
   1c66c:	48 85 c0             	test   %rax,%rax
   1c66f:	0f 85 bb fe ff ff    	jne    1c530 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c675:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1c67c:	00 00 
   1c67e:	45 31 ed             	xor    %r13d,%r13d
   1c681:	e9 1a ff ff ff       	jmpq   1c5a0 <mbedtls_mpi_core_exp_mod+0x230>
   1c686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c68d:	00 00 00 
   1c690:	48 83 c4 68          	add    $0x68,%rsp
   1c694:	5b                   	pop    %rbx
   1c695:	5d                   	pop    %rbp
   1c696:	41 5c                	pop    %r12
   1c698:	41 5d                	pop    %r13
   1c69a:	41 5e                	pop    %r14
   1c69c:	41 5f                	pop    %r15
   1c69e:	c3                   	retq   
   1c69f:	90                   	nop

000000000001c6a0 <mbedtls_mpi_core_sub_int>:
   1c6a0:	f3 0f 1e fa          	endbr64 
   1c6a4:	48 89 d0             	mov    %rdx,%rax
   1c6a7:	48 85 c9             	test   %rcx,%rcx
   1c6aa:	74 21                	je     1c6cd <mbedtls_mpi_core_sub_int+0x2d>
   1c6ac:	45 31 c0             	xor    %r8d,%r8d
   1c6af:	90                   	nop
   1c6b0:	4a 8b 14 c6          	mov    (%rsi,%r8,8),%rdx
   1c6b4:	49 89 d1             	mov    %rdx,%r9
   1c6b7:	49 29 c1             	sub    %rax,%r9
   1c6ba:	0f 92 c0             	setb   %al
   1c6bd:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
   1c6c1:	49 83 c0 01          	add    $0x1,%r8
   1c6c5:	0f b6 c0             	movzbl %al,%eax
   1c6c8:	4c 39 c1             	cmp    %r8,%rcx
   1c6cb:	75 e3                	jne    1c6b0 <mbedtls_mpi_core_sub_int+0x10>
   1c6cd:	c3                   	retq   
   1c6ce:	66 90                	xchg   %ax,%ax

000000000001c6d0 <mbedtls_mpi_core_check_zero_ct>:
   1c6d0:	f3 0f 1e fa          	endbr64 
   1c6d4:	48 85 f6             	test   %rsi,%rsi
   1c6d7:	74 17                	je     1c6f0 <mbedtls_mpi_core_check_zero_ct+0x20>
   1c6d9:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
   1c6dd:	31 c0                	xor    %eax,%eax
   1c6df:	90                   	nop
   1c6e0:	48 0b 07             	or     (%rdi),%rax
   1c6e3:	48 83 c7 08          	add    $0x8,%rdi
   1c6e7:	48 39 d7             	cmp    %rdx,%rdi
   1c6ea:	75 f4                	jne    1c6e0 <mbedtls_mpi_core_check_zero_ct+0x10>
   1c6ec:	c3                   	retq   
   1c6ed:	0f 1f 00             	nopl   (%rax)
   1c6f0:	31 c0                	xor    %eax,%eax
   1c6f2:	c3                   	retq   
   1c6f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c6fa:	00 00 00 00 
   1c6fe:	66 90                	xchg   %ax,%ax

000000000001c700 <mbedtls_mpi_core_to_mont_rep>:
   1c700:	f3 0f 1e fa          	endbr64 
   1c704:	48 83 ec 08          	sub    $0x8,%rsp
   1c708:	49 89 d2             	mov    %rdx,%r10
   1c70b:	4c 89 ca             	mov    %r9,%rdx
   1c70e:	49 89 c9             	mov    %rcx,%r9
   1c711:	ff 74 24 10          	pushq  0x10(%rsp)
   1c715:	41 50                	push   %r8
   1c717:	4d 89 d0             	mov    %r10,%r8
   1c71a:	e8 81 f8 ff ff       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1c71f:	48 83 c4 18          	add    $0x18,%rsp
   1c723:	c3                   	retq   
   1c724:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c72b:	00 00 00 00 
   1c72f:	90                   	nop

000000000001c730 <mbedtls_mpi_core_from_mont_rep>:
   1c730:	f3 0f 1e fa          	endbr64 
   1c734:	48 83 ec 18          	sub    $0x18,%rsp
   1c738:	49 89 d2             	mov    %rdx,%r10
   1c73b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c742:	00 00 
   1c744:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c749:	31 c0                	xor    %eax,%eax
   1c74b:	48 89 e2             	mov    %rsp,%rdx
   1c74e:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   1c755:	00 
   1c756:	41 51                	push   %r9
   1c758:	49 89 c9             	mov    %rcx,%r9
   1c75b:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c760:	41 50                	push   %r8
   1c762:	4d 89 d0             	mov    %r10,%r8
   1c765:	e8 36 f8 ff ff       	callq  1bfa0 <mbedtls_mpi_core_montmul>
   1c76a:	58                   	pop    %rax
   1c76b:	5a                   	pop    %rdx
   1c76c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1c771:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1c778:	00 00 
   1c77a:	75 05                	jne    1c781 <mbedtls_mpi_core_from_mont_rep+0x51>
   1c77c:	48 83 c4 18          	add    $0x18,%rsp
   1c780:	c3                   	retq   
   1c781:	e8 ea 7a fe ff       	callq  4270 <__stack_chk_fail@plt>
   1c786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c78d:	00 00 00 

000000000001c790 <mbedtls_ct_memcmp>:
   1c790:	f3 0f 1e fa          	endbr64 
   1c794:	48 85 d2             	test   %rdx,%rdx
   1c797:	74 27                	je     1c7c0 <mbedtls_ct_memcmp+0x30>
   1c799:	4c 8d 04 17          	lea    (%rdi,%rdx,1),%r8
   1c79d:	31 c0                	xor    %eax,%eax
   1c79f:	90                   	nop
   1c7a0:	0f b6 17             	movzbl (%rdi),%edx
   1c7a3:	0f b6 0e             	movzbl (%rsi),%ecx
   1c7a6:	48 83 c7 01          	add    $0x1,%rdi
   1c7aa:	48 83 c6 01          	add    $0x1,%rsi
   1c7ae:	31 ca                	xor    %ecx,%edx
   1c7b0:	0f b6 d2             	movzbl %dl,%edx
   1c7b3:	09 d0                	or     %edx,%eax
   1c7b5:	4c 39 c7             	cmp    %r8,%rdi
   1c7b8:	75 e6                	jne    1c7a0 <mbedtls_ct_memcmp+0x10>
   1c7ba:	c3                   	retq   
   1c7bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c7c0:	31 c0                	xor    %eax,%eax
   1c7c2:	c3                   	retq   
   1c7c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c7ca:	00 00 00 00 
   1c7ce:	66 90                	xchg   %ax,%ax

000000000001c7d0 <mbedtls_ct_uint_mask>:
   1c7d0:	f3 0f 1e fa          	endbr64 
   1c7d4:	41 89 f8             	mov    %edi,%r8d
   1c7d7:	f7 df                	neg    %edi
   1c7d9:	44 09 c7             	or     %r8d,%edi
   1c7dc:	89 f8                	mov    %edi,%eax
   1c7de:	c1 f8 1f             	sar    $0x1f,%eax
   1c7e1:	c3                   	retq   
   1c7e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c7e9:	00 00 00 00 
   1c7ed:	0f 1f 00             	nopl   (%rax)

000000000001c7f0 <mbedtls_ct_size_mask>:
   1c7f0:	f3 0f 1e fa          	endbr64 
   1c7f4:	49 89 f8             	mov    %rdi,%r8
   1c7f7:	48 f7 df             	neg    %rdi
   1c7fa:	4c 09 c7             	or     %r8,%rdi
   1c7fd:	48 89 f8             	mov    %rdi,%rax
   1c800:	48 c1 f8 3f          	sar    $0x3f,%rax
   1c804:	c3                   	retq   
   1c805:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c80c:	00 00 00 00 

000000000001c810 <mbedtls_ct_mpi_uint_mask>:
   1c810:	f3 0f 1e fa          	endbr64 
   1c814:	49 89 f8             	mov    %rdi,%r8
   1c817:	48 f7 df             	neg    %rdi
   1c81a:	4c 09 c7             	or     %r8,%rdi
   1c81d:	48 89 f8             	mov    %rdi,%rax
   1c820:	48 c1 f8 3f          	sar    $0x3f,%rax
   1c824:	c3                   	retq   
   1c825:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c82c:	00 00 00 00 

000000000001c830 <mbedtls_ct_size_mask_ge>:
   1c830:	f3 0f 1e fa          	endbr64 
   1c834:	48 89 f8             	mov    %rdi,%rax
   1c837:	48 29 f0             	sub    %rsi,%rax
   1c83a:	48 c1 f8 3f          	sar    $0x3f,%rax
   1c83e:	48 f7 d0             	not    %rax
   1c841:	c3                   	retq   
   1c842:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c849:	00 00 00 00 
   1c84d:	0f 1f 00             	nopl   (%rax)

000000000001c850 <mbedtls_ct_size_bool_eq>:
   1c850:	f3 0f 1e fa          	endbr64 
   1c854:	48 31 fe             	xor    %rdi,%rsi
   1c857:	48 89 f0             	mov    %rsi,%rax
   1c85a:	48 f7 d8             	neg    %rax
   1c85d:	48 09 f0             	or     %rsi,%rax
   1c860:	48 c1 e8 3f          	shr    $0x3f,%rax
   1c864:	83 f0 01             	xor    $0x1,%eax
   1c867:	c3                   	retq   
   1c868:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c86f:	00 

000000000001c870 <mbedtls_ct_mpi_uint_lt>:
   1c870:	f3 0f 1e fa          	endbr64 
   1c874:	48 89 fa             	mov    %rdi,%rdx
   1c877:	48 89 f0             	mov    %rsi,%rax
   1c87a:	48 31 f7             	xor    %rsi,%rdi
   1c87d:	48 29 f2             	sub    %rsi,%rdx
   1c880:	48 31 d0             	xor    %rdx,%rax
   1c883:	48 21 f8             	and    %rdi,%rax
   1c886:	48 31 d0             	xor    %rdx,%rax
   1c889:	48 c1 e8 3f          	shr    $0x3f,%rax
   1c88d:	c3                   	retq   
   1c88e:	66 90                	xchg   %ax,%ax

000000000001c890 <mbedtls_ct_uint_if>:
   1c890:	f3 0f 1e fa          	endbr64 
   1c894:	41 89 f8             	mov    %edi,%r8d
   1c897:	f7 df                	neg    %edi
   1c899:	31 d6                	xor    %edx,%esi
   1c89b:	89 d0                	mov    %edx,%eax
   1c89d:	44 09 c7             	or     %r8d,%edi
   1c8a0:	c1 ff 1f             	sar    $0x1f,%edi
   1c8a3:	21 f7                	and    %esi,%edi
   1c8a5:	31 f8                	xor    %edi,%eax
   1c8a7:	c3                   	retq   
   1c8a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c8af:	00 

000000000001c8b0 <mbedtls_ct_mpi_uint_cond_assign>:
   1c8b0:	f3 0f 1e fa          	endbr64 
   1c8b4:	0f b6 c9             	movzbl %cl,%ecx
   1c8b7:	31 c0                	xor    %eax,%eax
   1c8b9:	41 89 ca             	mov    %ecx,%r10d
   1c8bc:	83 e9 01             	sub    $0x1,%ecx
   1c8bf:	41 f7 da             	neg    %r10d
   1c8c2:	4c 63 c9             	movslq %ecx,%r9
   1c8c5:	4d 63 d2             	movslq %r10d,%r10
   1c8c8:	48 85 ff             	test   %rdi,%rdi
   1c8cb:	74 21                	je     1c8ee <mbedtls_ct_mpi_uint_cond_assign+0x3e>
   1c8cd:	0f 1f 00             	nopl   (%rax)
   1c8d0:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
   1c8d4:	4c 8b 04 c6          	mov    (%rsi,%rax,8),%r8
   1c8d8:	4c 21 d1             	and    %r10,%rcx
   1c8db:	4d 21 c8             	and    %r9,%r8
   1c8de:	4c 09 c1             	or     %r8,%rcx
   1c8e1:	48 89 0c c6          	mov    %rcx,(%rsi,%rax,8)
   1c8e5:	48 83 c0 01          	add    $0x1,%rax
   1c8e9:	48 39 c7             	cmp    %rax,%rdi
   1c8ec:	75 e2                	jne    1c8d0 <mbedtls_ct_mpi_uint_cond_assign+0x20>
   1c8ee:	c3                   	retq   
   1c8ef:	90                   	nop

000000000001c8f0 <mbedtls_ct_base64_enc_char>:
   1c8f0:	f3 0f 1e fa          	endbr64 
   1c8f4:	40 0f b6 ff          	movzbl %dil,%edi
   1c8f8:	ba 3e 00 00 00       	mov    $0x3e,%edx
   1c8fd:	29 fa                	sub    %edi,%edx
   1c8ff:	8d 47 c2             	lea    -0x3e(%rdi),%eax
   1c902:	8d 4f 41             	lea    0x41(%rdi),%ecx
   1c905:	c1 ea 08             	shr    $0x8,%edx
   1c908:	c1 e8 08             	shr    $0x8,%eax
   1c90b:	09 d0                	or     %edx,%eax
   1c90d:	f7 d0                	not    %eax
   1c90f:	83 e0 2b             	and    $0x2b,%eax
   1c912:	89 c2                	mov    %eax,%edx
   1c914:	b8 19 00 00 00       	mov    $0x19,%eax
   1c919:	29 f8                	sub    %edi,%eax
   1c91b:	c1 e8 08             	shr    $0x8,%eax
   1c91e:	f7 d0                	not    %eax
   1c920:	21 c8                	and    %ecx,%eax
   1c922:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1c927:	09 d0                	or     %edx,%eax
   1c929:	29 f9                	sub    %edi,%ecx
   1c92b:	8d 57 c1             	lea    -0x3f(%rdi),%edx
   1c92e:	c1 e9 08             	shr    $0x8,%ecx
   1c931:	c1 ea 08             	shr    $0x8,%edx
   1c934:	09 ca                	or     %ecx,%edx
   1c936:	b9 33 00 00 00       	mov    $0x33,%ecx
   1c93b:	f7 d2                	not    %edx
   1c93d:	29 f9                	sub    %edi,%ecx
   1c93f:	83 e2 2f             	and    $0x2f,%edx
   1c942:	c1 e9 08             	shr    $0x8,%ecx
   1c945:	09 d0                	or     %edx,%eax
   1c947:	8d 57 e6             	lea    -0x1a(%rdi),%edx
   1c94a:	c1 ea 08             	shr    $0x8,%edx
   1c94d:	09 ca                	or     %ecx,%edx
   1c94f:	8d 4f 47             	lea    0x47(%rdi),%ecx
   1c952:	f7 d2                	not    %edx
   1c954:	21 ca                	and    %ecx,%edx
   1c956:	b9 3d 00 00 00       	mov    $0x3d,%ecx
   1c95b:	09 c2                	or     %eax,%edx
   1c95d:	29 f9                	sub    %edi,%ecx
   1c95f:	8d 47 cc             	lea    -0x34(%rdi),%eax
   1c962:	83 ef 04             	sub    $0x4,%edi
   1c965:	c1 e8 08             	shr    $0x8,%eax
   1c968:	c1 e9 08             	shr    $0x8,%ecx
   1c96b:	09 c8                	or     %ecx,%eax
   1c96d:	f7 d0                	not    %eax
   1c96f:	21 c7                	and    %eax,%edi
   1c971:	89 f8                	mov    %edi,%eax
   1c973:	09 d0                	or     %edx,%eax
   1c975:	c3                   	retq   
   1c976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c97d:	00 00 00 

000000000001c980 <mbedtls_ct_base64_dec_value>:
   1c980:	f3 0f 1e fa          	endbr64 
   1c984:	40 0f b6 ff          	movzbl %dil,%edi
   1c988:	ba 5a 00 00 00       	mov    $0x5a,%edx
   1c98d:	b9 7a 00 00 00       	mov    $0x7a,%ecx
   1c992:	29 fa                	sub    %edi,%edx
   1c994:	8d 47 bf             	lea    -0x41(%rdi),%eax
   1c997:	29 f9                	sub    %edi,%ecx
   1c999:	c1 ea 08             	shr    $0x8,%edx
   1c99c:	c1 e8 08             	shr    $0x8,%eax
   1c99f:	09 d0                	or     %edx,%eax
   1c9a1:	8d 57 c0             	lea    -0x40(%rdi),%edx
   1c9a4:	c1 e9 08             	shr    $0x8,%ecx
   1c9a7:	f7 d0                	not    %eax
   1c9a9:	21 c2                	and    %eax,%edx
   1c9ab:	8d 47 9f             	lea    -0x61(%rdi),%eax
   1c9ae:	c1 e8 08             	shr    $0x8,%eax
   1c9b1:	09 c8                	or     %ecx,%eax
   1c9b3:	8d 4f ba             	lea    -0x46(%rdi),%ecx
   1c9b6:	f7 d0                	not    %eax
   1c9b8:	21 c8                	and    %ecx,%eax
   1c9ba:	b9 39 00 00 00       	mov    $0x39,%ecx
   1c9bf:	09 d0                	or     %edx,%eax
   1c9c1:	29 f9                	sub    %edi,%ecx
   1c9c3:	8d 57 d0             	lea    -0x30(%rdi),%edx
   1c9c6:	c1 e9 08             	shr    $0x8,%ecx
   1c9c9:	c1 ea 08             	shr    $0x8,%edx
   1c9cc:	09 ca                	or     %ecx,%edx
   1c9ce:	8d 4f 05             	lea    0x5(%rdi),%ecx
   1c9d1:	f7 d2                	not    %edx
   1c9d3:	21 ca                	and    %ecx,%edx
   1c9d5:	b9 2b 00 00 00       	mov    $0x2b,%ecx
   1c9da:	09 d0                	or     %edx,%eax
   1c9dc:	29 f9                	sub    %edi,%ecx
   1c9de:	8d 57 d5             	lea    -0x2b(%rdi),%edx
   1c9e1:	c1 e9 08             	shr    $0x8,%ecx
   1c9e4:	c1 ea 08             	shr    $0x8,%edx
   1c9e7:	09 ca                	or     %ecx,%edx
   1c9e9:	8d 4f 14             	lea    0x14(%rdi),%ecx
   1c9ec:	f7 d2                	not    %edx
   1c9ee:	21 ca                	and    %ecx,%edx
   1c9f0:	b9 2f 00 00 00       	mov    $0x2f,%ecx
   1c9f5:	09 c2                	or     %eax,%edx
   1c9f7:	29 f9                	sub    %edi,%ecx
   1c9f9:	8d 47 d1             	lea    -0x2f(%rdi),%eax
   1c9fc:	83 c7 11             	add    $0x11,%edi
   1c9ff:	c1 e8 08             	shr    $0x8,%eax
   1ca02:	c1 e9 08             	shr    $0x8,%ecx
   1ca05:	09 c8                	or     %ecx,%eax
   1ca07:	f7 d0                	not    %eax
   1ca09:	21 c7                	and    %eax,%edi
   1ca0b:	09 d7                	or     %edx,%edi
   1ca0d:	8d 47 ff             	lea    -0x1(%rdi),%eax
   1ca10:	c3                   	retq   
   1ca11:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ca18:	00 00 00 00 
   1ca1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001ca20 <mbedtls_ct_memcpy_if_eq>:
   1ca20:	f3 0f 1e fa          	endbr64 
   1ca24:	4c 31 c1             	xor    %r8,%rcx
   1ca27:	48 89 c8             	mov    %rcx,%rax
   1ca2a:	48 f7 d8             	neg    %rax
   1ca2d:	48 09 c8             	or     %rcx,%rax
   1ca30:	48 c1 e8 3f          	shr    $0x3f,%rax
   1ca34:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
   1ca38:	45 89 ca             	mov    %r9d,%r10d
   1ca3b:	45 89 cb             	mov    %r9d,%r11d
   1ca3e:	48 83 fa 03          	cmp    $0x3,%rdx
   1ca42:	76 5c                	jbe    1caa0 <mbedtls_ct_memcpy_if_eq+0x80>
   1ca44:	b8 04 00 00 00       	mov    $0x4,%eax
   1ca49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ca50:	44 8b 44 07 fc       	mov    -0x4(%rdi,%rax,1),%r8d
   1ca55:	8b 4c 06 fc          	mov    -0x4(%rsi,%rax,1),%ecx
   1ca59:	44 31 c1             	xor    %r8d,%ecx
   1ca5c:	44 21 d1             	and    %r10d,%ecx
   1ca5f:	44 31 c1             	xor    %r8d,%ecx
   1ca62:	89 4c 07 fc          	mov    %ecx,-0x4(%rdi,%rax,1)
   1ca66:	48 89 c1             	mov    %rax,%rcx
   1ca69:	48 83 c0 04          	add    $0x4,%rax
   1ca6d:	48 39 c2             	cmp    %rax,%rdx
   1ca70:	73 de                	jae    1ca50 <mbedtls_ct_memcpy_if_eq+0x30>
   1ca72:	44 89 c8             	mov    %r9d,%eax
   1ca75:	f7 d0                	not    %eax
   1ca77:	48 39 ca             	cmp    %rcx,%rdx
   1ca7a:	76 20                	jbe    1ca9c <mbedtls_ct_memcpy_if_eq+0x7c>
   1ca7c:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
   1ca81:	44 0f b6 0c 0f       	movzbl (%rdi,%rcx,1),%r9d
   1ca86:	45 21 d8             	and    %r11d,%r8d
   1ca89:	41 21 c1             	and    %eax,%r9d
   1ca8c:	45 09 c8             	or     %r9d,%r8d
   1ca8f:	44 88 04 0f          	mov    %r8b,(%rdi,%rcx,1)
   1ca93:	48 83 c1 01          	add    $0x1,%rcx
   1ca97:	48 39 ca             	cmp    %rcx,%rdx
   1ca9a:	75 e0                	jne    1ca7c <mbedtls_ct_memcpy_if_eq+0x5c>
   1ca9c:	c3                   	retq   
   1ca9d:	0f 1f 00             	nopl   (%rax)
   1caa0:	31 c9                	xor    %ecx,%ecx
   1caa2:	eb ce                	jmp    1ca72 <mbedtls_ct_memcpy_if_eq+0x52>
   1caa4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1caab:	00 00 00 00 
   1caaf:	90                   	nop

000000000001cab0 <mbedtls_ct_memcpy_offset>:
   1cab0:	f3 0f 1e fa          	endbr64 
   1cab4:	4c 39 c1             	cmp    %r8,%rcx
   1cab7:	77 37                	ja     1caf0 <mbedtls_ct_memcpy_offset+0x40>
   1cab9:	41 55                	push   %r13
   1cabb:	49 89 f5             	mov    %rsi,%r13
   1cabe:	41 54                	push   %r12
   1cac0:	49 89 d4             	mov    %rdx,%r12
   1cac3:	4c 89 ca             	mov    %r9,%rdx
   1cac6:	55                   	push   %rbp
   1cac7:	4c 89 c5             	mov    %r8,%rbp
   1caca:	53                   	push   %rbx
   1cacb:	48 89 cb             	mov    %rcx,%rbx
   1cace:	66 90                	xchg   %ax,%ax
   1cad0:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
   1cad5:	48 89 d9             	mov    %rbx,%rcx
   1cad8:	4d 89 e0             	mov    %r12,%r8
   1cadb:	48 83 c3 01          	add    $0x1,%rbx
   1cadf:	e8 3c ff ff ff       	callq  1ca20 <mbedtls_ct_memcpy_if_eq>
   1cae4:	48 39 dd             	cmp    %rbx,%rbp
   1cae7:	73 e7                	jae    1cad0 <mbedtls_ct_memcpy_offset+0x20>
   1cae9:	5b                   	pop    %rbx
   1caea:	5d                   	pop    %rbp
   1caeb:	41 5c                	pop    %r12
   1caed:	41 5d                	pop    %r13
   1caef:	c3                   	retq   
   1caf0:	c3                   	retq   
   1caf1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1caf8:	00 00 00 00 
   1cafc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001cb00 <mbedtls_ct_hmac>:
   1cb00:	f3 0f 1e fa          	endbr64 
   1cb04:	41 57                	push   %r15
   1cb06:	49 89 d7             	mov    %rdx,%r15
   1cb09:	41 56                	push   %r14
   1cb0b:	41 55                	push   %r13
   1cb0d:	49 89 f5             	mov    %rsi,%r13
   1cb10:	41 54                	push   %r12
   1cb12:	55                   	push   %rbp
   1cb13:	48 89 fd             	mov    %rdi,%rbp
   1cb16:	53                   	push   %rbx
   1cb17:	4c 89 cb             	mov    %r9,%rbx
   1cb1a:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1cb21:	48 8b 3f             	mov    (%rdi),%rdi
   1cb24:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1cb29:	4c 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%r14
   1cb30:	00 
   1cb31:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1cb36:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1cb3b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1cb42:	00 00 
   1cb44:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1cb4b:	00 
   1cb4c:	31 c0                	xor    %eax,%eax
   1cb4e:	e8 1d 0e ff ff       	callq  d970 <mbedtls_md_get_type>
   1cb53:	ba 80 00 00 00       	mov    $0x80,%edx
   1cb58:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1cb5c:	83 f8 05             	cmp    $0x5,%eax
   1cb5f:	b8 40 00 00 00       	mov    $0x40,%eax
   1cb64:	48 0f 44 c2          	cmove  %rdx,%rax
   1cb68:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1cb6d:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1cb71:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1cb76:	e8 d5 0d ff ff       	callq  d950 <mbedtls_md_get_size>
   1cb7b:	4c 89 e7             	mov    %r12,%rdi
   1cb7e:	88 44 24 18          	mov    %al,0x18(%rsp)
   1cb82:	e8 09 08 ff ff       	callq  d390 <mbedtls_md_init>
   1cb87:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   1cb8b:	31 d2                	xor    %edx,%edx
   1cb8d:	4c 89 e7             	mov    %r12,%rdi
   1cb90:	e8 eb 09 ff ff       	callq  d580 <mbedtls_md_setup>
   1cb95:	85 c0                	test   %eax,%eax
   1cb97:	74 3f                	je     1cbd8 <mbedtls_ct_hmac+0xd8>
   1cb99:	4c 89 e7             	mov    %r12,%rdi
   1cb9c:	89 44 24 08          	mov    %eax,0x8(%rsp)
   1cba0:	e8 0b 08 ff ff       	callq  d3b0 <mbedtls_md_free>
   1cba5:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   1cbac:	00 
   1cbad:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1cbb4:	00 00 
   1cbb6:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1cbba:	0f 85 dd 01 00 00    	jne    1cd9d <mbedtls_ct_hmac+0x29d>
   1cbc0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1cbc7:	5b                   	pop    %rbx
   1cbc8:	5d                   	pop    %rbp
   1cbc9:	41 5c                	pop    %r12
   1cbcb:	41 5d                	pop    %r13
   1cbcd:	41 5e                	pop    %r14
   1cbcf:	41 5f                	pop    %r15
   1cbd1:	c3                   	retq   
   1cbd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1cbd8:	4c 89 fa             	mov    %r15,%rdx
   1cbdb:	4c 89 ee             	mov    %r13,%rsi
   1cbde:	48 89 ef             	mov    %rbp,%rdi
   1cbe1:	e8 ca 0b ff ff       	callq  d7b0 <mbedtls_md_update>
   1cbe6:	85 c0                	test   %eax,%eax
   1cbe8:	75 af                	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cbea:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1cbef:	48 89 da             	mov    %rbx,%rdx
   1cbf2:	48 89 ef             	mov    %rbp,%rdi
   1cbf5:	e8 b6 0b ff ff       	callq  d7b0 <mbedtls_md_update>
   1cbfa:	85 c0                	test   %eax,%eax
   1cbfc:	75 9b                	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cbfe:	48 b8 21 21 21 21 21 	movabs $0x2121212121212121,%rax
   1cc05:	21 21 21 
   1cc08:	44 0f b6 7c 24 18    	movzbl 0x18(%rsp),%r15d
   1cc0e:	41 83 ff 08          	cmp    $0x8,%r15d
   1cc12:	0f 83 a8 00 00 00    	jae    1ccc0 <mbedtls_ct_hmac+0x1c0>
   1cc18:	41 f6 c7 04          	test   $0x4,%r15b
   1cc1c:	0f 85 66 01 00 00    	jne    1cd88 <mbedtls_ct_hmac+0x288>
   1cc22:	45 85 ff             	test   %r15d,%r15d
   1cc25:	0f 85 bd 00 00 00    	jne    1cce8 <mbedtls_ct_hmac+0x1e8>
   1cc2b:	48 3b 9c 24 e0 00 00 	cmp    0xe0(%rsp),%rbx
   1cc32:	00 
   1cc33:	0f 87 cd 00 00 00    	ja     1cd06 <mbedtls_ct_hmac+0x206>
   1cc39:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
   1cc3e:	eb 12                	jmp    1cc52 <mbedtls_ct_hmac+0x152>
   1cc40:	48 83 c3 01          	add    $0x1,%rbx
   1cc44:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
   1cc4b:	00 
   1cc4c:	0f 82 be 00 00 00    	jb     1cd10 <mbedtls_ct_hmac+0x210>
   1cc52:	48 89 ee             	mov    %rbp,%rsi
   1cc55:	4c 89 e7             	mov    %r12,%rdi
   1cc58:	e8 33 08 ff ff       	callq  d490 <mbedtls_md_clone>
   1cc5d:	85 c0                	test   %eax,%eax
   1cc5f:	0f 85 34 ff ff ff    	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cc65:	4c 89 ee             	mov    %r13,%rsi
   1cc68:	4c 89 e7             	mov    %r12,%rdi
   1cc6b:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1cc70:	e8 bb 0b ff ff       	callq  d830 <mbedtls_md_finish>
   1cc75:	85 c0                	test   %eax,%eax
   1cc77:	0f 85 1c ff ff ff    	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cc7d:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1cc82:	48 89 d9             	mov    %rbx,%rcx
   1cc85:	4c 89 fa             	mov    %r15,%rdx
   1cc88:	4c 89 ee             	mov    %r13,%rsi
   1cc8b:	4c 89 f7             	mov    %r14,%rdi
   1cc8e:	e8 8d fd ff ff       	callq  1ca20 <mbedtls_ct_memcpy_if_eq>
   1cc93:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
   1cc9a:	00 
   1cc9b:	76 a3                	jbe    1cc40 <mbedtls_ct_hmac+0x140>
   1cc9d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1cca2:	ba 01 00 00 00       	mov    $0x1,%edx
   1cca7:	48 89 ef             	mov    %rbp,%rdi
   1ccaa:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
   1ccae:	e8 fd 0a ff ff       	callq  d7b0 <mbedtls_md_update>
   1ccb3:	85 c0                	test   %eax,%eax
   1ccb5:	74 89                	je     1cc40 <mbedtls_ct_hmac+0x140>
   1ccb7:	e9 dd fe ff ff       	jmpq   1cb99 <mbedtls_ct_hmac+0x99>
   1ccbc:	0f 1f 40 00          	nopl   0x0(%rax)
   1ccc0:	49 8d 7e 08          	lea    0x8(%r14),%rdi
   1ccc4:	4c 89 f1             	mov    %r14,%rcx
   1ccc7:	49 89 06             	mov    %rax,(%r14)
   1ccca:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1ccce:	4b 89 44 3e f8       	mov    %rax,-0x8(%r14,%r15,1)
   1ccd3:	48 29 f9             	sub    %rdi,%rcx
   1ccd6:	44 01 f9             	add    %r15d,%ecx
   1ccd9:	c1 e9 03             	shr    $0x3,%ecx
   1ccdc:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1ccdf:	e9 47 ff ff ff       	jmpq   1cc2b <mbedtls_ct_hmac+0x12b>
   1cce4:	0f 1f 40 00          	nopl   0x0(%rax)
   1cce8:	41 c6 06 21          	movb   $0x21,(%r14)
   1ccec:	41 f6 c7 02          	test   $0x2,%r15b
   1ccf0:	0f 84 35 ff ff ff    	je     1cc2b <mbedtls_ct_hmac+0x12b>
   1ccf6:	b8 21 21 00 00       	mov    $0x2121,%eax
   1ccfb:	66 43 89 44 3e fe    	mov    %ax,-0x2(%r14,%r15,1)
   1cd01:	e9 25 ff ff ff       	jmpq   1cc2b <mbedtls_ct_hmac+0x12b>
   1cd06:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1cd0b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1cd10:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1cd15:	48 89 ef             	mov    %rbp,%rdi
   1cd18:	e8 13 0b ff ff       	callq  d830 <mbedtls_md_finish>
   1cd1d:	85 c0                	test   %eax,%eax
   1cd1f:	0f 85 74 fe ff ff    	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cd25:	48 89 ef             	mov    %rbp,%rdi
   1cd28:	e8 c3 09 ff ff       	callq  d6f0 <mbedtls_md_starts>
   1cd2d:	85 c0                	test   %eax,%eax
   1cd2f:	0f 85 64 fe ff ff    	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cd35:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1cd3a:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1cd3f:	48 89 ef             	mov    %rbp,%rdi
   1cd42:	48 01 d6             	add    %rdx,%rsi
   1cd45:	e8 66 0a ff ff       	callq  d7b0 <mbedtls_md_update>
   1cd4a:	85 c0                	test   %eax,%eax
   1cd4c:	0f 85 47 fe ff ff    	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cd52:	4c 89 fa             	mov    %r15,%rdx
   1cd55:	4c 89 f6             	mov    %r14,%rsi
   1cd58:	48 89 ef             	mov    %rbp,%rdi
   1cd5b:	e8 50 0a ff ff       	callq  d7b0 <mbedtls_md_update>
   1cd60:	85 c0                	test   %eax,%eax
   1cd62:	0f 85 31 fe ff ff    	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cd68:	4c 89 f6             	mov    %r14,%rsi
   1cd6b:	48 89 ef             	mov    %rbp,%rdi
   1cd6e:	e8 bd 0a ff ff       	callq  d830 <mbedtls_md_finish>
   1cd73:	85 c0                	test   %eax,%eax
   1cd75:	0f 85 1e fe ff ff    	jne    1cb99 <mbedtls_ct_hmac+0x99>
   1cd7b:	48 89 ef             	mov    %rbp,%rdi
   1cd7e:	e8 cd 12 ff ff       	callq  e050 <mbedtls_md_hmac_reset>
   1cd83:	e9 11 fe ff ff       	jmpq   1cb99 <mbedtls_ct_hmac+0x99>
   1cd88:	41 c7 06 21 21 21 21 	movl   $0x21212121,(%r14)
   1cd8f:	43 c7 44 3e fc 21 21 	movl   $0x21212121,-0x4(%r14,%r15,1)
   1cd96:	21 21 
   1cd98:	e9 8e fe ff ff       	jmpq   1cc2b <mbedtls_ct_hmac+0x12b>
   1cd9d:	e8 ce 74 fe ff       	callq  4270 <__stack_chk_fail@plt>
   1cda2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1cda9:	00 00 00 00 
   1cdad:	0f 1f 00             	nopl   (%rax)

000000000001cdb0 <mbedtls_mpi_safe_cond_assign>:
   1cdb0:	f3 0f 1e fa          	endbr64 
   1cdb4:	41 56                	push   %r14
   1cdb6:	44 0f b6 f2          	movzbl %dl,%r14d
   1cdba:	41 55                	push   %r13
   1cdbc:	41 54                	push   %r12
   1cdbe:	41 89 d4             	mov    %edx,%r12d
   1cdc1:	55                   	push   %rbp
   1cdc2:	48 89 f5             	mov    %rsi,%rbp
   1cdc5:	53                   	push   %rbx
   1cdc6:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   1cdca:	48 89 fb             	mov    %rdi,%rbx
   1cdcd:	e8 fe 95 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   1cdd2:	41 89 c5             	mov    %eax,%r13d
   1cdd5:	85 c0                	test   %eax,%eax
   1cdd7:	74 0f                	je     1cde8 <mbedtls_mpi_safe_cond_assign+0x38>
   1cdd9:	5b                   	pop    %rbx
   1cdda:	44 89 e8             	mov    %r13d,%eax
   1cddd:	5d                   	pop    %rbp
   1cdde:	41 5c                	pop    %r12
   1cde0:	41 5d                	pop    %r13
   1cde2:	41 5e                	pop    %r14
   1cde4:	c3                   	retq   
   1cde5:	0f 1f 00             	nopl   (%rax)
   1cde8:	8b 03                	mov    (%rbx),%eax
   1cdea:	41 0f b6 cc          	movzbl %r12b,%ecx
   1cdee:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1cdf2:	8d 34 09             	lea    (%rcx,%rcx,1),%esi
   1cdf5:	8d 50 01             	lea    0x1(%rax),%edx
   1cdf8:	8b 45 00             	mov    0x0(%rbp),%eax
   1cdfb:	83 c0 01             	add    $0x1,%eax
   1cdfe:	31 d0                	xor    %edx,%eax
   1ce00:	21 f0                	and    %esi,%eax
   1ce02:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   1ce06:	31 d0                	xor    %edx,%eax
   1ce08:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   1ce0c:	83 e8 01             	sub    $0x1,%eax
   1ce0f:	89 03                	mov    %eax,(%rbx)
   1ce11:	e8 ba e9 ff ff       	callq  1b7d0 <mbedtls_mpi_core_cond_assign>
   1ce16:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   1ce1a:	48 3b 53 08          	cmp    0x8(%rbx),%rdx
   1ce1e:	73 b9                	jae    1cdd9 <mbedtls_mpi_safe_cond_assign+0x29>
   1ce20:	4c 89 f6             	mov    %r14,%rsi
   1ce23:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1ce27:	48 f7 de             	neg    %rsi
   1ce2a:	4c 09 f6             	or     %r14,%rsi
   1ce2d:	48 c1 fe 3f          	sar    $0x3f,%rsi
   1ce31:	48 f7 d6             	not    %rsi
   1ce34:	0f 1f 40 00          	nopl   0x0(%rax)
   1ce38:	48 21 34 d1          	and    %rsi,(%rcx,%rdx,8)
   1ce3c:	48 83 c2 01          	add    $0x1,%rdx
   1ce40:	48 39 53 08          	cmp    %rdx,0x8(%rbx)
   1ce44:	77 f2                	ja     1ce38 <mbedtls_mpi_safe_cond_assign+0x88>
   1ce46:	5b                   	pop    %rbx
   1ce47:	44 89 e8             	mov    %r13d,%eax
   1ce4a:	5d                   	pop    %rbp
   1ce4b:	41 5c                	pop    %r12
   1ce4d:	41 5d                	pop    %r13
   1ce4f:	41 5e                	pop    %r14
   1ce51:	c3                   	retq   
   1ce52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ce59:	00 00 00 00 
   1ce5d:	0f 1f 00             	nopl   (%rax)

000000000001ce60 <mbedtls_mpi_safe_cond_swap>:
   1ce60:	f3 0f 1e fa          	endbr64 
   1ce64:	31 c0                	xor    %eax,%eax
   1ce66:	48 39 f7             	cmp    %rsi,%rdi
   1ce69:	0f 84 99 00 00 00    	je     1cf08 <mbedtls_mpi_safe_cond_swap+0xa8>
   1ce6f:	41 54                	push   %r12
   1ce71:	41 89 d4             	mov    %edx,%r12d
   1ce74:	55                   	push   %rbp
   1ce75:	48 89 f5             	mov    %rsi,%rbp
   1ce78:	53                   	push   %rbx
   1ce79:	48 89 fb             	mov    %rdi,%rbx
   1ce7c:	48 83 ec 10          	sub    $0x10,%rsp
   1ce80:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   1ce84:	e8 47 95 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   1ce89:	85 c0                	test   %eax,%eax
   1ce8b:	74 13                	je     1cea0 <mbedtls_mpi_safe_cond_swap+0x40>
   1ce8d:	48 83 c4 10          	add    $0x10,%rsp
   1ce91:	5b                   	pop    %rbx
   1ce92:	5d                   	pop    %rbp
   1ce93:	41 5c                	pop    %r12
   1ce95:	c3                   	retq   
   1ce96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ce9d:	00 00 00 
   1cea0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1cea4:	48 89 ef             	mov    %rbp,%rdi
   1cea7:	e8 24 95 ff ff       	callq  163d0 <mbedtls_mpi_grow>
   1ceac:	85 c0                	test   %eax,%eax
   1ceae:	75 dd                	jne    1ce8d <mbedtls_mpi_safe_cond_swap+0x2d>
   1ceb0:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1ceb4:	8b 03                	mov    (%rbx),%eax
   1ceb6:	41 0f b6 cc          	movzbl %r12b,%ecx
   1ceba:	8d 3c 09             	lea    (%rcx,%rcx,1),%edi
   1cebd:	8d 50 01             	lea    0x1(%rax),%edx
   1cec0:	8b 45 00             	mov    0x0(%rbp),%eax
   1cec3:	8d 70 01             	lea    0x1(%rax),%esi
   1cec6:	31 d6                	xor    %edx,%esi
   1cec8:	21 fe                	and    %edi,%esi
   1ceca:	31 d6                	xor    %edx,%esi
   1cecc:	83 ee 01             	sub    $0x1,%esi
   1cecf:	89 33                	mov    %esi,(%rbx)
   1ced1:	8b 45 00             	mov    0x0(%rbp),%eax
   1ced4:	8d 70 01             	lea    0x1(%rax),%esi
   1ced7:	31 f2                	xor    %esi,%edx
   1ced9:	21 fa                	and    %edi,%edx
   1cedb:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1cedf:	31 f2                	xor    %esi,%edx
   1cee1:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   1cee5:	83 ea 01             	sub    $0x1,%edx
   1cee8:	89 55 00             	mov    %edx,0x0(%rbp)
   1ceeb:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1ceef:	e8 0c e9 ff ff       	callq  1b800 <mbedtls_mpi_core_cond_swap>
   1cef4:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1cef8:	48 83 c4 10          	add    $0x10,%rsp
   1cefc:	5b                   	pop    %rbx
   1cefd:	5d                   	pop    %rbp
   1cefe:	41 5c                	pop    %r12
   1cf00:	c3                   	retq   
   1cf01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cf08:	c3                   	retq   
   1cf09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001cf10 <mbedtls_mpi_core_lt_ct>:
   1cf10:	f3 0f 1e fa          	endbr64 
   1cf14:	48 85 d2             	test   %rdx,%rdx
   1cf17:	74 6f                	je     1cf88 <mbedtls_mpi_core_lt_ct+0x78>
   1cf19:	55                   	push   %rbp
   1cf1a:	45 31 c9             	xor    %r9d,%r9d
   1cf1d:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   1cf23:	53                   	push   %rbx
   1cf24:	31 db                	xor    %ebx,%ebx
   1cf26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1cf2d:	00 00 00 
   1cf30:	48 8b 44 d6 f8       	mov    -0x8(%rsi,%rdx,8),%rax
   1cf35:	48 8b 4c d7 f8       	mov    -0x8(%rdi,%rdx,8),%rcx
   1cf3a:	48 89 c5             	mov    %rax,%rbp
   1cf3d:	49 89 cb             	mov    %rcx,%r11
   1cf40:	49 89 c8             	mov    %rcx,%r8
   1cf43:	48 29 cd             	sub    %rcx,%rbp
   1cf46:	49 31 c3             	xor    %rax,%r11
   1cf49:	48 29 c1             	sub    %rax,%rcx
   1cf4c:	49 31 e8             	xor    %rbp,%r8
   1cf4f:	48 31 c8             	xor    %rcx,%rax
   1cf52:	4d 21 d8             	and    %r11,%r8
   1cf55:	4c 21 d8             	and    %r11,%rax
   1cf58:	49 31 e8             	xor    %rbp,%r8
   1cf5b:	48 31 c8             	xor    %rcx,%rax
   1cf5e:	44 89 d1             	mov    %r10d,%ecx
   1cf61:	49 c1 e8 3f          	shr    $0x3f,%r8
   1cf65:	48 c1 e8 3f          	shr    $0x3f,%rax
   1cf69:	41 09 d8             	or     %ebx,%r8d
   1cf6c:	44 29 c1             	sub    %r8d,%ecx
   1cf6f:	44 89 c3             	mov    %r8d,%ebx
   1cf72:	21 c1                	and    %eax,%ecx
   1cf74:	09 c3                	or     %eax,%ebx
   1cf76:	41 09 c9             	or     %ecx,%r9d
   1cf79:	48 83 ea 01          	sub    $0x1,%rdx
   1cf7d:	75 b1                	jne    1cf30 <mbedtls_mpi_core_lt_ct+0x20>
   1cf7f:	44 89 c8             	mov    %r9d,%eax
   1cf82:	5b                   	pop    %rbx
   1cf83:	5d                   	pop    %rbp
   1cf84:	c3                   	retq   
   1cf85:	0f 1f 00             	nopl   (%rax)
   1cf88:	45 31 c9             	xor    %r9d,%r9d
   1cf8b:	44 89 c8             	mov    %r9d,%eax
   1cf8e:	c3                   	retq   
   1cf8f:	90                   	nop

000000000001cf90 <mbedtls_mpi_lt_mpi_ct>:
   1cf90:	f3 0f 1e fa          	endbr64 
   1cf94:	4c 8b 47 08          	mov    0x8(%rdi),%r8
   1cf98:	4c 3b 46 08          	cmp    0x8(%rsi),%r8
   1cf9c:	0f 85 d1 00 00 00    	jne    1d073 <mbedtls_mpi_lt_mpi_ct+0xe3>
   1cfa2:	8b 07                	mov    (%rdi),%eax
   1cfa4:	44 8b 0e             	mov    (%rsi),%r9d
   1cfa7:	d1 f8                	sar    %eax
   1cfa9:	41 d1 f9             	sar    %r9d
   1cfac:	41 89 c3             	mov    %eax,%r11d
   1cfaf:	41 31 c1             	xor    %eax,%r9d
   1cfb2:	41 83 e3 01          	and    $0x1,%r11d
   1cfb6:	45 89 ca             	mov    %r9d,%r10d
   1cfb9:	45 21 d9             	and    %r11d,%r9d
   1cfbc:	41 83 e2 01          	and    $0x1,%r10d
   1cfc0:	44 89 0a             	mov    %r9d,(%rdx)
   1cfc3:	4d 85 c0             	test   %r8,%r8
   1cfc6:	0f 84 a4 00 00 00    	je     1d070 <mbedtls_mpi_lt_mpi_ct+0xe0>
   1cfcc:	41 56                	push   %r14
   1cfce:	41 55                	push   %r13
   1cfd0:	41 54                	push   %r12
   1cfd2:	55                   	push   %rbp
   1cfd3:	53                   	push   %rbx
   1cfd4:	bb 01 00 00 00       	mov    $0x1,%ebx
   1cfd9:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
   1cfdd:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   1cfe1:	44 29 db             	sub    %r11d,%ebx
   1cfe4:	bf 01 00 00 00       	mov    $0x1,%edi
   1cfe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cff0:	4a 8b 44 c5 f8       	mov    -0x8(%rbp,%r8,8),%rax
   1cff5:	4f 8b 6c c4 f8       	mov    -0x8(%r12,%r8,8),%r13
   1cffa:	48 89 c6             	mov    %rax,%rsi
   1cffd:	4d 89 ee             	mov    %r13,%r14
   1d000:	4c 89 e9             	mov    %r13,%rcx
   1d003:	4c 29 ee             	sub    %r13,%rsi
   1d006:	49 29 c5             	sub    %rax,%r13
   1d009:	49 31 c6             	xor    %rax,%r14
   1d00c:	48 31 f1             	xor    %rsi,%rcx
   1d00f:	4c 31 e8             	xor    %r13,%rax
   1d012:	4c 21 f1             	and    %r14,%rcx
   1d015:	4c 21 f0             	and    %r14,%rax
   1d018:	41 89 fe             	mov    %edi,%r14d
   1d01b:	45 29 d6             	sub    %r10d,%r14d
   1d01e:	48 31 f1             	xor    %rsi,%rcx
   1d021:	44 89 d6             	mov    %r10d,%esi
   1d024:	4c 31 e8             	xor    %r13,%rax
   1d027:	48 c1 e9 3f          	shr    $0x3f,%rcx
   1d02b:	45 89 f2             	mov    %r14d,%r10d
   1d02e:	48 c1 e8 3f          	shr    $0x3f,%rax
   1d032:	41 89 dd             	mov    %ebx,%r13d
   1d035:	45 21 da             	and    %r11d,%r10d
   1d038:	09 ce                	or     %ecx,%esi
   1d03a:	41 21 c5             	and    %eax,%r13d
   1d03d:	44 21 d1             	and    %r10d,%ecx
   1d040:	41 89 fa             	mov    %edi,%r10d
   1d043:	41 29 f2             	sub    %esi,%r10d
   1d046:	09 c6                	or     %eax,%esi
   1d048:	45 21 ea             	and    %r13d,%r10d
   1d04b:	44 09 d1             	or     %r10d,%ecx
   1d04e:	41 89 f2             	mov    %esi,%r10d
   1d051:	41 09 c9             	or     %ecx,%r9d
   1d054:	49 83 e8 01          	sub    $0x1,%r8
   1d058:	75 96                	jne    1cff0 <mbedtls_mpi_lt_mpi_ct+0x60>
   1d05a:	5b                   	pop    %rbx
   1d05b:	31 c0                	xor    %eax,%eax
   1d05d:	5d                   	pop    %rbp
   1d05e:	44 89 0a             	mov    %r9d,(%rdx)
   1d061:	41 5c                	pop    %r12
   1d063:	41 5d                	pop    %r13
   1d065:	41 5e                	pop    %r14
   1d067:	c3                   	retq   
   1d068:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d06f:	00 
   1d070:	31 c0                	xor    %eax,%eax
   1d072:	c3                   	retq   
   1d073:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1d078:	c3                   	retq   
   1d079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d080 <mbedtls_ct_rsaes_pkcs1_v15_unpadding>:
   1d080:	f3 0f 1e fa          	endbr64 
   1d084:	41 57                	push   %r15
   1d086:	41 56                	push   %r14
   1d088:	41 55                	push   %r13
   1d08a:	4d 89 c5             	mov    %r8,%r13
   1d08d:	4c 8d 46 f5          	lea    -0xb(%rsi),%r8
   1d091:	41 54                	push   %r12
   1d093:	55                   	push   %rbp
   1d094:	53                   	push   %rbx
   1d095:	48 83 ec 18          	sub    $0x18,%rsp
   1d099:	0f b6 5f 01          	movzbl 0x1(%rdi),%ebx
   1d09d:	49 39 c8             	cmp    %rcx,%r8
   1d0a0:	4c 0f 47 c1          	cmova  %rcx,%r8
   1d0a4:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1d0a9:	83 f3 02             	xor    $0x2,%ebx
   1d0ac:	0a 1f                	or     (%rdi),%bl
   1d0ae:	0f b6 db             	movzbl %bl,%ebx
   1d0b1:	48 83 fe 02          	cmp    $0x2,%rsi
   1d0b5:	0f 86 9d 01 00 00    	jbe    1d258 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1d8>
   1d0bb:	4c 8d 4f 02          	lea    0x2(%rdi),%r9
   1d0bf:	4c 8d 1c 37          	lea    (%rdi,%rsi,1),%r11
   1d0c3:	31 d2                	xor    %edx,%edx
   1d0c5:	45 31 d2             	xor    %r10d,%r10d
   1d0c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d0cf:	00 
   1d0d0:	41 0f b6 29          	movzbl (%r9),%ebp
   1d0d4:	49 83 c1 01          	add    $0x1,%r9
   1d0d8:	89 e8                	mov    %ebp,%eax
   1d0da:	f7 d8                	neg    %eax
   1d0dc:	09 e8                	or     %ebp,%eax
   1d0de:	c0 e8 07             	shr    $0x7,%al
   1d0e1:	83 f0 01             	xor    $0x1,%eax
   1d0e4:	09 c2                	or     %eax,%edx
   1d0e6:	89 d0                	mov    %edx,%eax
   1d0e8:	f7 d8                	neg    %eax
   1d0ea:	09 d0                	or     %edx,%eax
   1d0ec:	c0 e8 07             	shr    $0x7,%al
   1d0ef:	83 f0 01             	xor    $0x1,%eax
   1d0f2:	0f b6 c0             	movzbl %al,%eax
   1d0f5:	49 01 c2             	add    %rax,%r10
   1d0f8:	4d 39 cb             	cmp    %r9,%r11
   1d0fb:	75 d3                	jne    1d0d0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x50>
   1d0fd:	0f b6 d2             	movzbl %dl,%edx
   1d100:	44 89 d0             	mov    %r10d,%eax
   1d103:	49 83 ea 08          	sub    $0x8,%r10
   1d107:	f7 da                	neg    %edx
   1d109:	49 c1 ea 3f          	shr    $0x3f,%r10
   1d10d:	c1 ea 1f             	shr    $0x1f,%edx
   1d110:	83 f2 01             	xor    $0x1,%edx
   1d113:	44 09 d2             	or     %r10d,%edx
   1d116:	44 8d 5e fd          	lea    -0x3(%rsi),%r11d
   1d11a:	09 da                	or     %ebx,%edx
   1d11c:	41 29 c3             	sub    %eax,%r11d
   1d11f:	89 d0                	mov    %edx,%eax
   1d121:	44 89 db             	mov    %r11d,%ebx
   1d124:	f7 d8                	neg    %eax
   1d126:	44 31 c3             	xor    %r8d,%ebx
   1d129:	09 d0                	or     %edx,%eax
   1d12b:	c1 f8 1f             	sar    $0x1f,%eax
   1d12e:	21 c3                	and    %eax,%ebx
   1d130:	44 31 db             	xor    %r11d,%ebx
   1d133:	41 89 d9             	mov    %ebx,%r9d
   1d136:	4c 89 c3             	mov    %r8,%rbx
   1d139:	4c 29 cb             	sub    %r9,%rbx
   1d13c:	4d 89 cb             	mov    %r9,%r11
   1d13f:	49 89 d9             	mov    %rbx,%r9
   1d142:	48 c1 eb 3f          	shr    $0x3f,%rbx
   1d146:	49 c1 f9 3f          	sar    $0x3f,%r9
   1d14a:	41 09 d9             	or     %ebx,%r9d
   1d14d:	09 d3                	or     %edx,%ebx
   1d14f:	41 c1 f9 1f          	sar    $0x1f,%r9d
   1d153:	89 da                	mov    %ebx,%edx
   1d155:	45 89 ca             	mov    %r9d,%r10d
   1d158:	f7 da                	neg    %edx
   1d15a:	41 81 e2 00 44 00 00 	and    $0x4400,%r10d
   1d161:	09 da                	or     %ebx,%edx
   1d163:	45 89 d4             	mov    %r10d,%r12d
   1d166:	c1 fa 1f             	sar    $0x1f,%edx
   1d169:	41 81 f4 00 41 00 00 	xor    $0x4100,%r12d
   1d170:	f7 d2                	not    %edx
   1d172:	41 21 c4             	and    %eax,%r12d
   1d175:	48 8d 47 0b          	lea    0xb(%rdi),%rax
   1d179:	45 31 d4             	xor    %r10d,%r12d
   1d17c:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
   1d180:	41 f7 dc             	neg    %r12d
   1d183:	48 83 fe 0b          	cmp    $0xb,%rsi
   1d187:	76 12                	jbe    1d19b <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x11b>
   1d189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d190:	20 10                	and    %dl,(%rax)
   1d192:	48 83 c0 01          	add    $0x1,%rax
   1d196:	49 39 c2             	cmp    %rax,%r10
   1d199:	75 f5                	jne    1d190 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x110>
   1d19b:	44 89 db             	mov    %r11d,%ebx
   1d19e:	4c 29 c6             	sub    %r8,%rsi
   1d1a1:	44 31 c3             	xor    %r8d,%ebx
   1d1a4:	48 8d 2c 37          	lea    (%rdi,%rsi,1),%rbp
   1d1a8:	44 21 cb             	and    %r9d,%ebx
   1d1ab:	44 31 db             	xor    %r11d,%ebx
   1d1ae:	4d 85 c0             	test   %r8,%r8
   1d1b1:	74 6e                	je     1d221 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a1>
   1d1b3:	4d 8d 70 ff          	lea    -0x1(%r8),%r14
   1d1b7:	49 89 d9             	mov    %rbx,%r9
   1d1ba:	4d 89 c7             	mov    %r8,%r15
   1d1bd:	4e 8d 54 35 00       	lea    0x0(%rbp,%r14,1),%r10
   1d1c2:	49 f7 d9             	neg    %r9
   1d1c5:	49 29 df             	sub    %rbx,%r15
   1d1c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d1cf:	00 
   1d1d0:	4c 89 ce             	mov    %r9,%rsi
   1d1d3:	4c 89 c8             	mov    %r9,%rax
   1d1d6:	48 89 ea             	mov    %rbp,%rdx
   1d1d9:	48 c1 fe 3f          	sar    $0x3f,%rsi
   1d1dd:	48 c1 e8 3f          	shr    $0x3f,%rax
   1d1e1:	48 89 f7             	mov    %rsi,%rdi
   1d1e4:	09 c7                	or     %eax,%edi
   1d1e6:	c1 ff 1f             	sar    $0x1f,%edi
   1d1e9:	4d 85 f6             	test   %r14,%r14
   1d1ec:	74 21                	je     1d20f <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x18f>
   1d1ee:	66 90                	xchg   %ax,%ax
   1d1f0:	0f b6 02             	movzbl (%rdx),%eax
   1d1f3:	49 89 d3             	mov    %rdx,%r11
   1d1f6:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
   1d1fa:	48 83 c2 01          	add    $0x1,%rdx
   1d1fe:	31 f0                	xor    %esi,%eax
   1d200:	0f b6 c0             	movzbl %al,%eax
   1d203:	21 f8                	and    %edi,%eax
   1d205:	31 c6                	xor    %eax,%esi
   1d207:	41 88 33             	mov    %sil,(%r11)
   1d20a:	49 39 d2             	cmp    %rdx,%r10
   1d20d:	75 e1                	jne    1d1f0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x170>
   1d20f:	41 0f b6 02          	movzbl (%r10),%eax
   1d213:	49 83 c1 01          	add    $0x1,%r9
   1d217:	21 c7                	and    %eax,%edi
   1d219:	41 88 3a             	mov    %dil,(%r10)
   1d21c:	4d 39 cf             	cmp    %r9,%r15
   1d21f:	75 af                	jne    1d1d0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x150>
   1d221:	48 85 c9             	test   %rcx,%rcx
   1d224:	75 1a                	jne    1d240 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1c0>
   1d226:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   1d22a:	48 83 c4 18          	add    $0x18,%rsp
   1d22e:	44 89 e0             	mov    %r12d,%eax
   1d231:	5b                   	pop    %rbx
   1d232:	5d                   	pop    %rbp
   1d233:	41 5c                	pop    %r12
   1d235:	41 5d                	pop    %r13
   1d237:	41 5e                	pop    %r14
   1d239:	41 5f                	pop    %r15
   1d23b:	c3                   	retq   
   1d23c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d240:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1d245:	4c 89 c2             	mov    %r8,%rdx
   1d248:	48 89 ee             	mov    %rbp,%rsi
   1d24b:	e8 d0 70 fe ff       	callq  4320 <memcpy@plt>
   1d250:	eb d4                	jmp    1d226 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a6>
   1d252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d258:	ba 01 00 00 00       	mov    $0x1,%edx
   1d25d:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   1d263:	31 c0                	xor    %eax,%eax
   1d265:	e9 a9 fe ff ff       	jmpq   1d113 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x93>
   1d26a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001d270 <__udivti3>:
   1d270:	f3 0f 1e fa          	endbr64 
   1d274:	49 89 d0             	mov    %rdx,%r8
   1d277:	48 89 ca             	mov    %rcx,%rdx
   1d27a:	48 85 c9             	test   %rcx,%rcx
   1d27d:	75 11                	jne    1d290 <__udivti3+0x20>
   1d27f:	49 39 f0             	cmp    %rsi,%r8
   1d282:	76 44                	jbe    1d2c8 <__udivti3+0x58>
   1d284:	48 89 f8             	mov    %rdi,%rax
   1d287:	48 89 f2             	mov    %rsi,%rdx
   1d28a:	49 f7 f0             	div    %r8
   1d28d:	31 d2                	xor    %edx,%edx
   1d28f:	c3                   	retq   
   1d290:	48 39 f1             	cmp    %rsi,%rcx
   1d293:	76 0b                	jbe    1d2a0 <__udivti3+0x30>
   1d295:	31 d2                	xor    %edx,%edx
   1d297:	31 c0                	xor    %eax,%eax
   1d299:	c3                   	retq   
   1d29a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d2a0:	48 0f bd c1          	bsr    %rcx,%rax
   1d2a4:	48 83 f0 3f          	xor    $0x3f,%rax
   1d2a8:	41 89 c2             	mov    %eax,%r10d
   1d2ab:	85 c0                	test   %eax,%eax
   1d2ad:	75 49                	jne    1d2f8 <__udivti3+0x88>
   1d2af:	48 39 f1             	cmp    %rsi,%rcx
   1d2b2:	72 09                	jb     1d2bd <__udivti3+0x4d>
   1d2b4:	31 d2                	xor    %edx,%edx
   1d2b6:	31 c0                	xor    %eax,%eax
   1d2b8:	49 39 f8             	cmp    %rdi,%r8
   1d2bb:	77 d2                	ja     1d28f <__udivti3+0x1f>
   1d2bd:	31 d2                	xor    %edx,%edx
   1d2bf:	b8 01 00 00 00       	mov    $0x1,%eax
   1d2c4:	c3                   	retq   
   1d2c5:	0f 1f 00             	nopl   (%rax)
   1d2c8:	4c 89 c1             	mov    %r8,%rcx
   1d2cb:	4d 85 c0             	test   %r8,%r8
   1d2ce:	75 0d                	jne    1d2dd <__udivti3+0x6d>
   1d2d0:	b8 01 00 00 00       	mov    $0x1,%eax
   1d2d5:	31 d2                	xor    %edx,%edx
   1d2d7:	49 f7 f0             	div    %r8
   1d2da:	48 89 c1             	mov    %rax,%rcx
   1d2dd:	31 d2                	xor    %edx,%edx
   1d2df:	48 89 f0             	mov    %rsi,%rax
   1d2e2:	48 f7 f1             	div    %rcx
   1d2e5:	48 89 c6             	mov    %rax,%rsi
   1d2e8:	48 89 f8             	mov    %rdi,%rax
   1d2eb:	48 f7 f1             	div    %rcx
   1d2ee:	48 89 f2             	mov    %rsi,%rdx
   1d2f1:	c3                   	retq   
   1d2f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d2f8:	89 c1                	mov    %eax,%ecx
   1d2fa:	53                   	push   %rbx
   1d2fb:	bb 40 00 00 00       	mov    $0x40,%ebx
   1d300:	4d 89 c3             	mov    %r8,%r11
   1d303:	48 d3 e2             	shl    %cl,%rdx
   1d306:	48 63 c8             	movslq %eax,%rcx
   1d309:	49 89 f1             	mov    %rsi,%r9
   1d30c:	48 29 cb             	sub    %rcx,%rbx
   1d30f:	89 d9                	mov    %ebx,%ecx
   1d311:	49 d3 eb             	shr    %cl,%r11
   1d314:	89 c1                	mov    %eax,%ecx
   1d316:	49 d3 e0             	shl    %cl,%r8
   1d319:	89 d9                	mov    %ebx,%ecx
   1d31b:	49 09 d3             	or     %rdx,%r11
   1d31e:	49 d3 e9             	shr    %cl,%r9
   1d321:	89 c1                	mov    %eax,%ecx
   1d323:	48 89 f8             	mov    %rdi,%rax
   1d326:	48 d3 e6             	shl    %cl,%rsi
   1d329:	89 d9                	mov    %ebx,%ecx
   1d32b:	4c 89 ca             	mov    %r9,%rdx
   1d32e:	48 d3 e8             	shr    %cl,%rax
   1d331:	48 09 f0             	or     %rsi,%rax
   1d334:	49 f7 f3             	div    %r11
   1d337:	49 89 d1             	mov    %rdx,%r9
   1d33a:	48 89 c6             	mov    %rax,%rsi
   1d33d:	49 f7 e0             	mul    %r8
   1d340:	49 39 d1             	cmp    %rdx,%r9
   1d343:	72 1b                	jb     1d360 <__udivti3+0xf0>
   1d345:	44 89 d1             	mov    %r10d,%ecx
   1d348:	48 d3 e7             	shl    %cl,%rdi
   1d34b:	48 39 c7             	cmp    %rax,%rdi
   1d34e:	73 05                	jae    1d355 <__udivti3+0xe5>
   1d350:	49 39 d1             	cmp    %rdx,%r9
   1d353:	74 0b                	je     1d360 <__udivti3+0xf0>
   1d355:	48 89 f0             	mov    %rsi,%rax
   1d358:	31 d2                	xor    %edx,%edx
   1d35a:	5b                   	pop    %rbx
   1d35b:	c3                   	retq   
   1d35c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d360:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   1d364:	31 d2                	xor    %edx,%edx
   1d366:	5b                   	pop    %rbx
   1d367:	c3                   	retq   
   1d368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d36f:	00 

000000000001d370 <__libc_csu_init>:
   1d370:	f3 0f 1e fa          	endbr64 
   1d374:	41 57                	push   %r15
   1d376:	4c 8d 3d 53 04 01 00 	lea    0x10453(%rip),%r15        # 2d7d0 <__frame_dummy_init_array_entry>
   1d37d:	41 56                	push   %r14
   1d37f:	49 89 d6             	mov    %rdx,%r14
   1d382:	41 55                	push   %r13
   1d384:	49 89 f5             	mov    %rsi,%r13
   1d387:	41 54                	push   %r12
   1d389:	41 89 fc             	mov    %edi,%r12d
   1d38c:	55                   	push   %rbp
   1d38d:	48 8d 2d 44 04 01 00 	lea    0x10444(%rip),%rbp        # 2d7d8 <__do_global_dtors_aux_fini_array_entry>
   1d394:	53                   	push   %rbx
   1d395:	4c 29 fd             	sub    %r15,%rbp
   1d398:	48 83 ec 08          	sub    $0x8,%rsp
   1d39c:	e8 5f 6c fe ff       	callq  4000 <_init>
   1d3a1:	48 c1 fd 03          	sar    $0x3,%rbp
   1d3a5:	74 1f                	je     1d3c6 <__libc_csu_init+0x56>
   1d3a7:	31 db                	xor    %ebx,%ebx
   1d3a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d3b0:	4c 89 f2             	mov    %r14,%rdx
   1d3b3:	4c 89 ee             	mov    %r13,%rsi
   1d3b6:	44 89 e7             	mov    %r12d,%edi
   1d3b9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
   1d3bd:	48 83 c3 01          	add    $0x1,%rbx
   1d3c1:	48 39 dd             	cmp    %rbx,%rbp
   1d3c4:	75 ea                	jne    1d3b0 <__libc_csu_init+0x40>
   1d3c6:	48 83 c4 08          	add    $0x8,%rsp
   1d3ca:	5b                   	pop    %rbx
   1d3cb:	5d                   	pop    %rbp
   1d3cc:	41 5c                	pop    %r12
   1d3ce:	41 5d                	pop    %r13
   1d3d0:	41 5e                	pop    %r14
   1d3d2:	41 5f                	pop    %r15
   1d3d4:	c3                   	retq   
   1d3d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1d3dc:	00 00 00 00 

000000000001d3e0 <__libc_csu_fini>:
   1d3e0:	f3 0f 1e fa          	endbr64 
   1d3e4:	c3                   	retq   

Disassembly of section .fini:

000000000001d3e8 <_fini>:
   1d3e8:	f3 0f 1e fa          	endbr64 
   1d3ec:	48 83 ec 08          	sub    $0x8,%rsp
   1d3f0:	48 83 c4 08          	add    $0x8,%rsp
   1d3f4:	c3                   	retq   
