
examples/mbedtls/aes-multiround/app:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	f3 0f 1e fa          	endbr64 
    3004:	48 83 ec 08          	sub    $0x8,%rsp
    3008:	48 8b 05 c9 cf 02 00 	mov    0x2cfc9(%rip),%rax        # 2ffd8 <__gmon_start__>
    300f:	48 85 c0             	test   %rax,%rax
    3012:	74 02                	je     3016 <_init+0x16>
    3014:	ff d0                	callq  *%rax
    3016:	48 83 c4 08          	add    $0x8,%rsp
    301a:	c3                   	retq   

Disassembly of section .plt:

0000000000003020 <.plt>:
    3020:	ff 35 c2 ce 02 00    	pushq  0x2cec2(%rip)        # 2fee8 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	f2 ff 25 c3 ce 02 00 	bnd jmpq *0x2cec3(%rip)        # 2fef0 <_GLOBAL_OFFSET_TABLE_+0x10>
    302d:	0f 1f 00             	nopl   (%rax)
    3030:	f3 0f 1e fa          	endbr64 
    3034:	68 00 00 00 00       	pushq  $0x0
    3039:	f2 e9 e1 ff ff ff    	bnd jmpq 3020 <.plt>
    303f:	90                   	nop
    3040:	f3 0f 1e fa          	endbr64 
    3044:	68 01 00 00 00       	pushq  $0x1
    3049:	f2 e9 d1 ff ff ff    	bnd jmpq 3020 <.plt>
    304f:	90                   	nop
    3050:	f3 0f 1e fa          	endbr64 
    3054:	68 02 00 00 00       	pushq  $0x2
    3059:	f2 e9 c1 ff ff ff    	bnd jmpq 3020 <.plt>
    305f:	90                   	nop
    3060:	f3 0f 1e fa          	endbr64 
    3064:	68 03 00 00 00       	pushq  $0x3
    3069:	f2 e9 b1 ff ff ff    	bnd jmpq 3020 <.plt>
    306f:	90                   	nop
    3070:	f3 0f 1e fa          	endbr64 
    3074:	68 04 00 00 00       	pushq  $0x4
    3079:	f2 e9 a1 ff ff ff    	bnd jmpq 3020 <.plt>
    307f:	90                   	nop
    3080:	f3 0f 1e fa          	endbr64 
    3084:	68 05 00 00 00       	pushq  $0x5
    3089:	f2 e9 91 ff ff ff    	bnd jmpq 3020 <.plt>
    308f:	90                   	nop
    3090:	f3 0f 1e fa          	endbr64 
    3094:	68 06 00 00 00       	pushq  $0x6
    3099:	f2 e9 81 ff ff ff    	bnd jmpq 3020 <.plt>
    309f:	90                   	nop
    30a0:	f3 0f 1e fa          	endbr64 
    30a4:	68 07 00 00 00       	pushq  $0x7
    30a9:	f2 e9 71 ff ff ff    	bnd jmpq 3020 <.plt>
    30af:	90                   	nop
    30b0:	f3 0f 1e fa          	endbr64 
    30b4:	68 08 00 00 00       	pushq  $0x8
    30b9:	f2 e9 61 ff ff ff    	bnd jmpq 3020 <.plt>
    30bf:	90                   	nop
    30c0:	f3 0f 1e fa          	endbr64 
    30c4:	68 09 00 00 00       	pushq  $0x9
    30c9:	f2 e9 51 ff ff ff    	bnd jmpq 3020 <.plt>
    30cf:	90                   	nop
    30d0:	f3 0f 1e fa          	endbr64 
    30d4:	68 0a 00 00 00       	pushq  $0xa
    30d9:	f2 e9 41 ff ff ff    	bnd jmpq 3020 <.plt>
    30df:	90                   	nop
    30e0:	f3 0f 1e fa          	endbr64 
    30e4:	68 0b 00 00 00       	pushq  $0xb
    30e9:	f2 e9 31 ff ff ff    	bnd jmpq 3020 <.plt>
    30ef:	90                   	nop
    30f0:	f3 0f 1e fa          	endbr64 
    30f4:	68 0c 00 00 00       	pushq  $0xc
    30f9:	f2 e9 21 ff ff ff    	bnd jmpq 3020 <.plt>
    30ff:	90                   	nop
    3100:	f3 0f 1e fa          	endbr64 
    3104:	68 0d 00 00 00       	pushq  $0xd
    3109:	f2 e9 11 ff ff ff    	bnd jmpq 3020 <.plt>
    310f:	90                   	nop
    3110:	f3 0f 1e fa          	endbr64 
    3114:	68 0e 00 00 00       	pushq  $0xe
    3119:	f2 e9 01 ff ff ff    	bnd jmpq 3020 <.plt>
    311f:	90                   	nop
    3120:	f3 0f 1e fa          	endbr64 
    3124:	68 0f 00 00 00       	pushq  $0xf
    3129:	f2 e9 f1 fe ff ff    	bnd jmpq 3020 <.plt>
    312f:	90                   	nop
    3130:	f3 0f 1e fa          	endbr64 
    3134:	68 10 00 00 00       	pushq  $0x10
    3139:	f2 e9 e1 fe ff ff    	bnd jmpq 3020 <.plt>
    313f:	90                   	nop
    3140:	f3 0f 1e fa          	endbr64 
    3144:	68 11 00 00 00       	pushq  $0x11
    3149:	f2 e9 d1 fe ff ff    	bnd jmpq 3020 <.plt>
    314f:	90                   	nop
    3150:	f3 0f 1e fa          	endbr64 
    3154:	68 12 00 00 00       	pushq  $0x12
    3159:	f2 e9 c1 fe ff ff    	bnd jmpq 3020 <.plt>
    315f:	90                   	nop
    3160:	f3 0f 1e fa          	endbr64 
    3164:	68 13 00 00 00       	pushq  $0x13
    3169:	f2 e9 b1 fe ff ff    	bnd jmpq 3020 <.plt>
    316f:	90                   	nop
    3170:	f3 0f 1e fa          	endbr64 
    3174:	68 14 00 00 00       	pushq  $0x14
    3179:	f2 e9 a1 fe ff ff    	bnd jmpq 3020 <.plt>
    317f:	90                   	nop
    3180:	f3 0f 1e fa          	endbr64 
    3184:	68 15 00 00 00       	pushq  $0x15
    3189:	f2 e9 91 fe ff ff    	bnd jmpq 3020 <.plt>
    318f:	90                   	nop
    3190:	f3 0f 1e fa          	endbr64 
    3194:	68 16 00 00 00       	pushq  $0x16
    3199:	f2 e9 81 fe ff ff    	bnd jmpq 3020 <.plt>
    319f:	90                   	nop
    31a0:	f3 0f 1e fa          	endbr64 
    31a4:	68 17 00 00 00       	pushq  $0x17
    31a9:	f2 e9 71 fe ff ff    	bnd jmpq 3020 <.plt>
    31af:	90                   	nop
    31b0:	f3 0f 1e fa          	endbr64 
    31b4:	68 18 00 00 00       	pushq  $0x18
    31b9:	f2 e9 61 fe ff ff    	bnd jmpq 3020 <.plt>
    31bf:	90                   	nop
    31c0:	f3 0f 1e fa          	endbr64 
    31c4:	68 19 00 00 00       	pushq  $0x19
    31c9:	f2 e9 51 fe ff ff    	bnd jmpq 3020 <.plt>
    31cf:	90                   	nop

Disassembly of section .plt.got:

00000000000031d0 <__cxa_finalize@plt>:
    31d0:	f3 0f 1e fa          	endbr64 
    31d4:	f2 ff 25 0d ce 02 00 	bnd jmpq *0x2ce0d(%rip)        # 2ffe8 <__cxa_finalize@GLIBC_2.2.5>
    31db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000031e0 <free@plt>:
    31e0:	f3 0f 1e fa          	endbr64 
    31e4:	f2 ff 25 0d cd 02 00 	bnd jmpq *0x2cd0d(%rip)        # 2fef8 <free@GLIBC_2.2.5>
    31eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000031f0 <putchar@plt>:
    31f0:	f3 0f 1e fa          	endbr64 
    31f4:	f2 ff 25 05 cd 02 00 	bnd jmpq *0x2cd05(%rip)        # 2ff00 <putchar@GLIBC_2.2.5>
    31fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003200 <puts@plt>:
    3200:	f3 0f 1e fa          	endbr64 
    3204:	f2 ff 25 fd cc 02 00 	bnd jmpq *0x2ccfd(%rip)        # 2ff08 <puts@GLIBC_2.2.5>
    320b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003210 <ferror@plt>:
    3210:	f3 0f 1e fa          	endbr64 
    3214:	f2 ff 25 f5 cc 02 00 	bnd jmpq *0x2ccf5(%rip)        # 2ff10 <ferror@GLIBC_2.2.5>
    321b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003220 <fread@plt>:
    3220:	f3 0f 1e fa          	endbr64 
    3224:	f2 ff 25 ed cc 02 00 	bnd jmpq *0x2cced(%rip)        # 2ff18 <fread@GLIBC_2.2.5>
    322b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003230 <clock_gettime@plt>:
    3230:	f3 0f 1e fa          	endbr64 
    3234:	f2 ff 25 e5 cc 02 00 	bnd jmpq *0x2cce5(%rip)        # 2ff20 <clock_gettime@GLIBC_2.17>
    323b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003240 <fclose@plt>:
    3240:	f3 0f 1e fa          	endbr64 
    3244:	f2 ff 25 dd cc 02 00 	bnd jmpq *0x2ccdd(%rip)        # 2ff28 <fclose@GLIBC_2.2.5>
    324b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003250 <strlen@plt>:
    3250:	f3 0f 1e fa          	endbr64 
    3254:	f2 ff 25 d5 cc 02 00 	bnd jmpq *0x2ccd5(%rip)        # 2ff30 <strlen@GLIBC_2.2.5>
    325b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003260 <__stack_chk_fail@plt>:
    3260:	f3 0f 1e fa          	endbr64 
    3264:	f2 ff 25 cd cc 02 00 	bnd jmpq *0x2cccd(%rip)        # 2ff38 <__stack_chk_fail@GLIBC_2.4>
    326b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003270 <setbuf@plt>:
    3270:	f3 0f 1e fa          	endbr64 
    3274:	f2 ff 25 c5 cc 02 00 	bnd jmpq *0x2ccc5(%rip)        # 2ff40 <setbuf@GLIBC_2.2.5>
    327b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003280 <gmtime_r@plt>:
    3280:	f3 0f 1e fa          	endbr64 
    3284:	f2 ff 25 bd cc 02 00 	bnd jmpq *0x2ccbd(%rip)        # 2ff48 <gmtime_r@GLIBC_2.2.5>
    328b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003290 <memset@plt>:
    3290:	f3 0f 1e fa          	endbr64 
    3294:	f2 ff 25 b5 cc 02 00 	bnd jmpq *0x2ccb5(%rip)        # 2ff50 <memset@GLIBC_2.2.5>
    329b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032a0 <memcmp@plt>:
    32a0:	f3 0f 1e fa          	endbr64 
    32a4:	f2 ff 25 ad cc 02 00 	bnd jmpq *0x2ccad(%rip)        # 2ff58 <memcmp@GLIBC_2.2.5>
    32ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032b0 <fgets@plt>:
    32b0:	f3 0f 1e fa          	endbr64 
    32b4:	f2 ff 25 a5 cc 02 00 	bnd jmpq *0x2cca5(%rip)        # 2ff60 <fgets@GLIBC_2.2.5>
    32bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032c0 <calloc@plt>:
    32c0:	f3 0f 1e fa          	endbr64 
    32c4:	f2 ff 25 9d cc 02 00 	bnd jmpq *0x2cc9d(%rip)        # 2ff68 <calloc@GLIBC_2.2.5>
    32cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032d0 <strcmp@plt>:
    32d0:	f3 0f 1e fa          	endbr64 
    32d4:	f2 ff 25 95 cc 02 00 	bnd jmpq *0x2cc95(%rip)        # 2ff70 <strcmp@GLIBC_2.2.5>
    32db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032e0 <__memcpy_chk@plt>:
    32e0:	f3 0f 1e fa          	endbr64 
    32e4:	f2 ff 25 8d cc 02 00 	bnd jmpq *0x2cc8d(%rip)        # 2ff78 <__memcpy_chk@GLIBC_2.3.4>
    32eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032f0 <fopen64@plt>:
    32f0:	f3 0f 1e fa          	endbr64 
    32f4:	f2 ff 25 85 cc 02 00 	bnd jmpq *0x2cc85(%rip)        # 2ff80 <fopen64@GLIBC_2.2.5>
    32fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003300 <strtol@plt>:
    3300:	f3 0f 1e fa          	endbr64 
    3304:	f2 ff 25 7d cc 02 00 	bnd jmpq *0x2cc7d(%rip)        # 2ff88 <strtol@GLIBC_2.2.5>
    330b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003310 <memcpy@plt>:
    3310:	f3 0f 1e fa          	endbr64 
    3314:	f2 ff 25 75 cc 02 00 	bnd jmpq *0x2cc75(%rip)        # 2ff90 <memcpy@GLIBC_2.14>
    331b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003320 <time@plt>:
    3320:	f3 0f 1e fa          	endbr64 
    3324:	f2 ff 25 6d cc 02 00 	bnd jmpq *0x2cc6d(%rip)        # 2ff98 <time@GLIBC_2.2.5>
    332b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003330 <malloc@plt>:
    3330:	f3 0f 1e fa          	endbr64 
    3334:	f2 ff 25 65 cc 02 00 	bnd jmpq *0x2cc65(%rip)        # 2ffa0 <malloc@GLIBC_2.2.5>
    333b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003340 <__printf_chk@plt>:
    3340:	f3 0f 1e fa          	endbr64 
    3344:	f2 ff 25 5d cc 02 00 	bnd jmpq *0x2cc5d(%rip)        # 2ffa8 <__printf_chk@GLIBC_2.3.4>
    334b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003350 <memmove@plt>:
    3350:	f3 0f 1e fa          	endbr64 
    3354:	f2 ff 25 55 cc 02 00 	bnd jmpq *0x2cc55(%rip)        # 2ffb0 <memmove@GLIBC_2.2.5>
    335b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003360 <__explicit_bzero_chk@plt>:
    3360:	f3 0f 1e fa          	endbr64 
    3364:	f2 ff 25 4d cc 02 00 	bnd jmpq *0x2cc4d(%rip)        # 2ffb8 <__explicit_bzero_chk@GLIBC_2.25>
    336b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003370 <fwrite@plt>:
    3370:	f3 0f 1e fa          	endbr64 
    3374:	f2 ff 25 45 cc 02 00 	bnd jmpq *0x2cc45(%rip)        # 2ffc0 <fwrite@GLIBC_2.2.5>
    337b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000003380 <mbedtls_cipher_set_padding_mode.cold>:
    3380:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    3385:	c3                   	retq   
    3386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    338d:	00 00 00 

0000000000003390 <main>:
    3390:	f3 0f 1e fa          	endbr64 
    3394:	41 56                	push   %r14
    3396:	41 55                	push   %r13
    3398:	41 54                	push   %r12
    339a:	49 89 f4             	mov    %rsi,%r12
    339d:	53                   	push   %rbx
    339e:	89 fb                	mov    %edi,%ebx
    33a0:	bf 01 00 00 00       	mov    $0x1,%edi
    33a5:	48 83 ec 48          	sub    $0x48,%rsp
    33a9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    33b0:	00 00 
    33b2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    33b7:	31 c0                	xor    %eax,%eax
    33b9:	48 89 e6             	mov    %rsp,%rsi
    33bc:	e8 6f fe ff ff       	callq  3230 <clock_gettime@plt>
    33c1:	31 c0                	xor    %eax,%eax
    33c3:	e8 38 04 00 00       	callq  3800 <foo>
    33c8:	83 fb 01             	cmp    $0x1,%ebx
    33cb:	0f 8f a5 01 00 00    	jg     3576 <main+0x1e6>
    33d1:	48 8d 3d e8 ee 02 00 	lea    0x2eee8(%rip),%rdi        # 322c0 <aes>
    33d8:	45 31 ed             	xor    %r13d,%r13d
    33db:	45 31 e4             	xor    %r12d,%r12d
    33de:	e8 8d 09 00 00       	callq  3d70 <mbedtls_gcm_init>
    33e3:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    33e8:	bf 01 00 00 00       	mov    $0x1,%edi
    33ed:	e8 3e fe ff ff       	callq  3230 <clock_gettime@plt>
    33f2:	41 83 f4 01          	xor    $0x1,%r12d
    33f6:	48 8d 1d 23 cc 02 00 	lea    0x2cc23(%rip),%rbx        # 30020 <__TMC_END__>
    33fd:	0f 1f 00             	nopl   (%rax)
    3400:	45 85 ed             	test   %r13d,%r13d
    3403:	40 0f 94 c7          	sete   %dil
    3407:	44 09 e7             	or     %r12d,%edi
    340a:	40 0f b6 ff          	movzbl %dil,%edi
    340e:	e8 3d 04 00 00       	callq  3850 <cf_run_target>
    3413:	e8 f8 02 00 00       	callq  3710 <drop_taint>
    3418:	48 8d 15 f1 cb 02 00 	lea    0x2cbf1(%rip),%rdx        # 30010 <m>
    341f:	90                   	nop
    3420:	80 02 01             	addb   $0x1,(%rdx)
    3423:	75 09                	jne    342e <main+0x9e>
    3425:	48 83 c2 01          	add    $0x1,%rdx
    3429:	48 39 d3             	cmp    %rdx,%rbx
    342c:	75 f2                	jne    3420 <main+0x90>
    342e:	41 8d 45 ff          	lea    -0x1(%r13),%eax
    3432:	45 85 ed             	test   %r13d,%r13d
    3435:	7e 31                	jle    3468 <main+0xd8>
    3437:	41 89 c5             	mov    %eax,%r13d
    343a:	eb c4                	jmp    3400 <main+0x70>
    343c:	45 31 e4             	xor    %r12d,%r12d
    343f:	48 8d 3d 7a ee 02 00 	lea    0x2ee7a(%rip),%rdi        # 322c0 <aes>
    3446:	45 8d 6e ff          	lea    -0x1(%r14),%r13d
    344a:	e8 21 09 00 00       	callq  3d70 <mbedtls_gcm_init>
    344f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    3454:	bf 01 00 00 00       	mov    $0x1,%edi
    3459:	e8 d2 fd ff ff       	callq  3230 <clock_gettime@plt>
    345e:	45 85 f6             	test   %r14d,%r14d
    3461:	7f 8f                	jg     33f2 <main+0x62>
    3463:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3468:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    346d:	bf 01 00 00 00       	mov    $0x1,%edi
    3472:	e8 b9 fd ff ff       	callq  3230 <clock_gettime@plt>
    3477:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    347c:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    3481:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    3488:	9b c4 20 
    348b:	48 89 f9             	mov    %rdi,%rcx
    348e:	48 2b 4c 24 08       	sub    0x8(%rsp),%rcx
    3493:	4d 89 c5             	mov    %r8,%r13
    3496:	4c 2b 2c 24          	sub    (%rsp),%r13
    349a:	48 89 c8             	mov    %rcx,%rax
    349d:	4d 69 ed 40 42 0f 00 	imul   $0xf4240,%r13,%r13
    34a4:	48 c1 f9 3f          	sar    $0x3f,%rcx
    34a8:	48 f7 ee             	imul   %rsi
    34ab:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    34b0:	48 29 f8             	sub    %rdi,%rax
    34b3:	48 c1 fa 07          	sar    $0x7,%rdx
    34b7:	48 89 c7             	mov    %rax,%rdi
    34ba:	48 29 ca             	sub    %rcx,%rdx
    34bd:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    34c2:	48 c1 ff 3f          	sar    $0x3f,%rdi
    34c6:	49 01 d5             	add    %rdx,%r13
    34c9:	48 f7 ee             	imul   %rsi
    34cc:	4c 29 c1             	sub    %r8,%rcx
    34cf:	48 69 c9 40 42 0f 00 	imul   $0xf4240,%rcx,%rcx
    34d6:	48 89 d6             	mov    %rdx,%rsi
    34d9:	48 c1 fe 07          	sar    $0x7,%rsi
    34dd:	48 29 fe             	sub    %rdi,%rsi
    34e0:	bf 0a 00 00 00       	mov    $0xa,%edi
    34e5:	4c 8d 24 31          	lea    (%rcx,%rsi,1),%r12
    34e9:	e8 02 fd ff ff       	callq  31f0 <putchar@plt>
    34ee:	41 b8 09 00 00 00    	mov    $0x9,%r8d
    34f4:	4c 89 e9             	mov    %r13,%rcx
    34f7:	ba 09 00 00 00       	mov    $0x9,%edx
    34fc:	48 8d 35 3d db 01 00 	lea    0x1db3d(%rip),%rsi        # 21040 <_IO_stdin_used+0x40>
    3503:	bf 01 00 00 00       	mov    $0x1,%edi
    3508:	66 0f ef c0          	pxor   %xmm0,%xmm0
    350c:	b8 01 00 00 00       	mov    $0x1,%eax
    3511:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    3516:	f2 0f 5e 05 9a db 01 	divsd  0x1db9a(%rip),%xmm0        # 210b8 <_IO_stdin_used+0xb8>
    351d:	00 
    351e:	e8 1d fe ff ff       	callq  3340 <__printf_chk@plt>
    3523:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3527:	41 b8 09 00 00 00    	mov    $0x9,%r8d
    352d:	4c 89 e1             	mov    %r12,%rcx
    3530:	ba 09 00 00 00       	mov    $0x9,%edx
    3535:	bf 01 00 00 00       	mov    $0x1,%edi
    353a:	b8 01 00 00 00       	mov    $0x1,%eax
    353f:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
    3544:	48 8d 35 15 db 01 00 	lea    0x1db15(%rip),%rsi        # 21060 <_IO_stdin_used+0x60>
    354b:	f2 0f 5e 05 65 db 01 	divsd  0x1db65(%rip),%xmm0        # 210b8 <_IO_stdin_used+0xb8>
    3552:	00 
    3553:	e8 e8 fd ff ff       	callq  3340 <__printf_chk@plt>
    3558:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    355d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3564:	00 00 
    3566:	75 73                	jne    35db <main+0x24b>
    3568:	48 83 c4 48          	add    $0x48,%rsp
    356c:	31 c0                	xor    %eax,%eax
    356e:	5b                   	pop    %rbx
    356f:	41 5c                	pop    %r12
    3571:	41 5d                	pop    %r13
    3573:	41 5e                	pop    %r14
    3575:	c3                   	retq   
    3576:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    357b:	31 f6                	xor    %esi,%esi
    357d:	ba 0a 00 00 00       	mov    $0xa,%edx
    3582:	e8 79 fd ff ff       	callq  3300 <strtol@plt>
    3587:	48 8d 35 85 da 01 00 	lea    0x1da85(%rip),%rsi        # 21013 <_IO_stdin_used+0x13>
    358e:	bf 01 00 00 00       	mov    $0x1,%edi
    3593:	49 89 c6             	mov    %rax,%r14
    3596:	89 c2                	mov    %eax,%edx
    3598:	31 c0                	xor    %eax,%eax
    359a:	e8 a1 fd ff ff       	callq  3340 <__printf_chk@plt>
    359f:	83 fb 02             	cmp    $0x2,%ebx
    35a2:	0f 84 94 fe ff ff    	je     343c <main+0xac>
    35a8:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    35ad:	48 8d 35 72 da 01 00 	lea    0x1da72(%rip),%rsi        # 21026 <_IO_stdin_used+0x26>
    35b4:	45 31 e4             	xor    %r12d,%r12d
    35b7:	e8 14 fd ff ff       	callq  32d0 <strcmp@plt>
    35bc:	85 c0                	test   %eax,%eax
    35be:	0f 85 7b fe ff ff    	jne    343f <main+0xaf>
    35c4:	48 8d 3d 60 da 01 00 	lea    0x1da60(%rip),%rdi        # 2102b <_IO_stdin_used+0x2b>
    35cb:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    35d1:	e8 2a fc ff ff       	callq  3200 <puts@plt>
    35d6:	e9 64 fe ff ff       	jmpq   343f <main+0xaf>
    35db:	e8 80 fc ff ff       	callq  3260 <__stack_chk_fail@plt>

00000000000035e0 <_start>:
    35e0:	f3 0f 1e fa          	endbr64 
    35e4:	31 ed                	xor    %ebp,%ebp
    35e6:	49 89 d1             	mov    %rdx,%r9
    35e9:	5e                   	pop    %rsi
    35ea:	48 89 e2             	mov    %rsp,%rdx
    35ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    35f1:	50                   	push   %rax
    35f2:	54                   	push   %rsp
    35f3:	4c 8d 05 a6 d2 01 00 	lea    0x1d2a6(%rip),%r8        # 208a0 <__libc_csu_fini>
    35fa:	48 8d 0d 2f d2 01 00 	lea    0x1d22f(%rip),%rcx        # 20830 <__libc_csu_init>
    3601:	48 8d 3d 88 fd ff ff 	lea    -0x278(%rip),%rdi        # 3390 <main>
    3608:	ff 15 c2 c9 02 00    	callq  *0x2c9c2(%rip)        # 2ffd0 <__libc_start_main@GLIBC_2.2.5>
    360e:	f4                   	hlt    
    360f:	90                   	nop

0000000000003610 <deregister_tm_clones>:
    3610:	48 8d 3d 09 ca 02 00 	lea    0x2ca09(%rip),%rdi        # 30020 <__TMC_END__>
    3617:	48 8d 05 02 ca 02 00 	lea    0x2ca02(%rip),%rax        # 30020 <__TMC_END__>
    361e:	48 39 f8             	cmp    %rdi,%rax
    3621:	74 15                	je     3638 <deregister_tm_clones+0x28>
    3623:	48 8b 05 9e c9 02 00 	mov    0x2c99e(%rip),%rax        # 2ffc8 <_ITM_deregisterTMCloneTable>
    362a:	48 85 c0             	test   %rax,%rax
    362d:	74 09                	je     3638 <deregister_tm_clones+0x28>
    362f:	ff e0                	jmpq   *%rax
    3631:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3638:	c3                   	retq   
    3639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003640 <register_tm_clones>:
    3640:	48 8d 3d d9 c9 02 00 	lea    0x2c9d9(%rip),%rdi        # 30020 <__TMC_END__>
    3647:	48 8d 35 d2 c9 02 00 	lea    0x2c9d2(%rip),%rsi        # 30020 <__TMC_END__>
    364e:	48 29 fe             	sub    %rdi,%rsi
    3651:	48 89 f0             	mov    %rsi,%rax
    3654:	48 c1 ee 3f          	shr    $0x3f,%rsi
    3658:	48 c1 f8 03          	sar    $0x3,%rax
    365c:	48 01 c6             	add    %rax,%rsi
    365f:	48 d1 fe             	sar    %rsi
    3662:	74 14                	je     3678 <register_tm_clones+0x38>
    3664:	48 8b 05 75 c9 02 00 	mov    0x2c975(%rip),%rax        # 2ffe0 <_ITM_registerTMCloneTable>
    366b:	48 85 c0             	test   %rax,%rax
    366e:	74 08                	je     3678 <register_tm_clones+0x38>
    3670:	ff e0                	jmpq   *%rax
    3672:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3678:	c3                   	retq   
    3679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003680 <__do_global_dtors_aux>:
    3680:	f3 0f 1e fa          	endbr64 
    3684:	80 3d 95 c9 02 00 00 	cmpb   $0x0,0x2c995(%rip)        # 30020 <__TMC_END__>
    368b:	75 2b                	jne    36b8 <__do_global_dtors_aux+0x38>
    368d:	55                   	push   %rbp
    368e:	48 83 3d 52 c9 02 00 	cmpq   $0x0,0x2c952(%rip)        # 2ffe8 <__cxa_finalize@GLIBC_2.2.5>
    3695:	00 
    3696:	48 89 e5             	mov    %rsp,%rbp
    3699:	74 0c                	je     36a7 <__do_global_dtors_aux+0x27>
    369b:	48 8b 3d 66 c9 02 00 	mov    0x2c966(%rip),%rdi        # 30008 <__dso_handle>
    36a2:	e8 29 fb ff ff       	callq  31d0 <__cxa_finalize@plt>
    36a7:	e8 64 ff ff ff       	callq  3610 <deregister_tm_clones>
    36ac:	c6 05 6d c9 02 00 01 	movb   $0x1,0x2c96d(%rip)        # 30020 <__TMC_END__>
    36b3:	5d                   	pop    %rbp
    36b4:	c3                   	retq   
    36b5:	0f 1f 00             	nopl   (%rax)
    36b8:	c3                   	retq   
    36b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036c0 <frame_dummy>:
    36c0:	f3 0f 1e fa          	endbr64 
    36c4:	e9 77 ff ff ff       	jmpq   3640 <register_tm_clones>
    36c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036d0 <classify>:
    36d0:	f3 0f 1e fa          	endbr64 
    36d4:	55                   	push   %rbp
    36d5:	48 89 e5             	mov    %rsp,%rbp
    36d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36dc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    36df:	90                   	nop
    36e0:	5d                   	pop    %rbp
    36e1:	c3                   	retq   
    36e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    36e9:	00 00 00 00 
    36ed:	0f 1f 00             	nopl   (%rax)

00000000000036f0 <declassify>:
    36f0:	f3 0f 1e fa          	endbr64 
    36f4:	55                   	push   %rbp
    36f5:	48 89 e5             	mov    %rsp,%rbp
    36f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36fc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    36ff:	90                   	nop
    3700:	5d                   	pop    %rbp
    3701:	c3                   	retq   
    3702:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3709:	00 00 00 00 
    370d:	0f 1f 00             	nopl   (%rax)

0000000000003710 <drop_taint>:
    3710:	f3 0f 1e fa          	endbr64 
    3714:	55                   	push   %rbp
    3715:	48 89 e5             	mov    %rsp,%rbp
    3718:	90                   	nop
    3719:	5d                   	pop    %rbp
    371a:	c3                   	retq   
    371b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003720 <dump_secret>:
    3720:	f3 0f 1e fa          	endbr64 
    3724:	41 57                	push   %r15
    3726:	49 89 ff             	mov    %rdi,%r15
    3729:	41 56                	push   %r14
    372b:	49 89 d6             	mov    %rdx,%r14
    372e:	48 63 d6             	movslq %esi,%rdx
    3731:	41 55                	push   %r13
    3733:	48 89 d7             	mov    %rdx,%rdi
    3736:	41 54                	push   %r12
    3738:	53                   	push   %rbx
    3739:	89 f3                	mov    %esi,%ebx
    373b:	48 83 ec 10          	sub    $0x10,%rsp
    373f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3744:	e8 e7 fb ff ff       	callq  3330 <malloc@plt>
    3749:	bf 04 00 00 00       	mov    $0x4,%edi
    374e:	49 89 c5             	mov    %rax,%r13
    3751:	e8 da fb ff ff       	callq  3330 <malloc@plt>
    3756:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    375b:	4c 89 fe             	mov    %r15,%rsi
    375e:	4c 89 ef             	mov    %r13,%rdi
    3761:	49 89 c4             	mov    %rax,%r12
    3764:	e8 a7 fb ff ff       	callq  3310 <memcpy@plt>
    3769:	be 04 00 00 00       	mov    $0x4,%esi
    376e:	4c 89 e7             	mov    %r12,%rdi
    3771:	41 89 1c 24          	mov    %ebx,(%r12)
    3775:	e8 76 ff ff ff       	callq  36f0 <declassify>
    377a:	41 8b 34 24          	mov    (%r12),%esi
    377e:	4c 89 ef             	mov    %r13,%rdi
    3781:	e8 6a ff ff ff       	callq  36f0 <declassify>
    3786:	4d 85 f6             	test   %r14,%r14
    3789:	74 16                	je     37a1 <dump_secret+0x81>
    378b:	4c 89 f2             	mov    %r14,%rdx
    378e:	48 8d 35 73 d8 01 00 	lea    0x1d873(%rip),%rsi        # 21008 <_IO_stdin_used+0x8>
    3795:	bf 01 00 00 00       	mov    $0x1,%edi
    379a:	31 c0                	xor    %eax,%eax
    379c:	e8 9f fb ff ff       	callq  3340 <__printf_chk@plt>
    37a1:	41 8b 04 24          	mov    (%r12),%eax
    37a5:	85 c0                	test   %eax,%eax
    37a7:	7e 2e                	jle    37d7 <dump_secret+0xb7>
    37a9:	31 db                	xor    %ebx,%ebx
    37ab:	4c 8d 35 5b d8 01 00 	lea    0x1d85b(%rip),%r14        # 2100d <_IO_stdin_used+0xd>
    37b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    37b8:	41 0f b6 54 1d 00    	movzbl 0x0(%r13,%rbx,1),%edx
    37be:	4c 89 f6             	mov    %r14,%rsi
    37c1:	bf 01 00 00 00       	mov    $0x1,%edi
    37c6:	31 c0                	xor    %eax,%eax
    37c8:	48 83 c3 01          	add    $0x1,%rbx
    37cc:	e8 6f fb ff ff       	callq  3340 <__printf_chk@plt>
    37d1:	41 39 1c 24          	cmp    %ebx,(%r12)
    37d5:	7f e1                	jg     37b8 <dump_secret+0x98>
    37d7:	bf 0a 00 00 00       	mov    $0xa,%edi
    37dc:	e8 0f fa ff ff       	callq  31f0 <putchar@plt>
    37e1:	4c 89 ef             	mov    %r13,%rdi
    37e4:	e8 f7 f9 ff ff       	callq  31e0 <free@plt>
    37e9:	48 83 c4 10          	add    $0x10,%rsp
    37ed:	5b                   	pop    %rbx
    37ee:	41 5c                	pop    %r12
    37f0:	41 5d                	pop    %r13
    37f2:	41 5e                	pop    %r14
    37f4:	41 5f                	pop    %r15
    37f6:	c3                   	retq   
    37f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    37fe:	00 00 

0000000000003800 <foo>:
    3800:	f3 0f 1e fa          	endbr64 
    3804:	55                   	push   %rbp
    3805:	48 89 e5             	mov    %rsp,%rbp
    3808:	48 83 ec 10          	sub    $0x10,%rsp
    380c:	bf 04 00 00 00       	mov    $0x4,%edi
    3811:	e8 1a fb ff ff       	callq  3330 <malloc@plt>
    3816:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    381a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    381e:	48 89 c7             	mov    %rax,%rdi
    3821:	e8 ba f9 ff ff       	callq  31e0 <free@plt>
    3826:	90                   	nop
    3827:	c9                   	leaveq 
    3828:	c3                   	retq   
    3829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003830 <cf_init_target>:
    3830:	f3 0f 1e fa          	endbr64 
    3834:	48 83 ec 08          	sub    $0x8,%rsp
    3838:	48 8d 3d 81 ea 02 00 	lea    0x2ea81(%rip),%rdi        # 322c0 <aes>
    383f:	e8 2c 05 00 00       	callq  3d70 <mbedtls_gcm_init>
    3844:	48 83 c4 08          	add    $0x8,%rsp
    3848:	c3                   	retq   
    3849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003850 <cf_run_target>:
    3850:	f3 0f 1e fa          	endbr64 
    3854:	41 56                	push   %r14
    3856:	41 55                	push   %r13
    3858:	41 89 fd             	mov    %edi,%r13d
    385b:	bf 80 3e 00 00       	mov    $0x3e80,%edi
    3860:	41 54                	push   %r12
    3862:	53                   	push   %rbx
    3863:	48 83 ec 08          	sub    $0x8,%rsp
    3867:	e8 c4 fa ff ff       	callq  3330 <malloc@plt>
    386c:	66 0f 6f 05 9c c7 02 	movdqa 0x2c79c(%rip),%xmm0        # 30010 <m>
    3873:	00 
    3874:	48 89 c3             	mov    %rax,%rbx
    3877:	48 8d 90 80 3e 00 00 	lea    0x3e80(%rax),%rdx
    387e:	66 90                	xchg   %ax,%ax
    3880:	0f 11 00             	movups %xmm0,(%rax)
    3883:	48 83 c0 10          	add    $0x10,%rax
    3887:	48 39 d0             	cmp    %rdx,%rax
    388a:	75 f4                	jne    3880 <cf_run_target+0x30>
    388c:	be 10 00 00 00       	mov    $0x10,%esi
    3891:	48 8d 3d 98 c7 02 00 	lea    0x2c798(%rip),%rdi        # 30030 <key>
    3898:	e8 33 fe ff ff       	callq  36d0 <classify>
    389d:	be 80 3e 00 00       	mov    $0x3e80,%esi
    38a2:	48 89 df             	mov    %rbx,%rdi
    38a5:	e8 26 fe ff ff       	callq  36d0 <classify>
    38aa:	b9 80 00 00 00       	mov    $0x80,%ecx
    38af:	48 8d 15 7a c7 02 00 	lea    0x2c77a(%rip),%rdx        # 30030 <key>
    38b6:	be 02 00 00 00       	mov    $0x2,%esi
    38bb:	48 8d 3d fe e9 02 00 	lea    0x2e9fe(%rip),%rdi        # 322c0 <aes>
    38c2:	e8 e9 04 00 00       	callq  3db0 <mbedtls_gcm_setkey>
    38c7:	85 c0                	test   %eax,%eax
    38c9:	0f 85 85 00 00 00    	jne    3954 <cf_run_target+0x104>
    38cf:	bf 80 3e 00 00       	mov    $0x3e80,%edi
    38d4:	e8 57 fa ff ff       	callq  3330 <malloc@plt>
    38d9:	bf 10 00 00 00       	mov    $0x10,%edi
    38de:	49 89 c4             	mov    %rax,%r12
    38e1:	e8 4a fa ff ff       	callq  3330 <malloc@plt>
    38e6:	48 83 ec 30          	sub    $0x30,%rsp
    38ea:	45 31 c9             	xor    %r9d,%r9d
    38ed:	41 b8 10 00 00 00    	mov    $0x10,%r8d
    38f3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    38f8:	48 8d 0d 41 c7 02 00 	lea    0x2c741(%rip),%rcx        # 30040 <iv>
    38ff:	49 89 c6             	mov    %rax,%r14
    3902:	ba 80 3e 00 00       	mov    $0x3e80,%edx
    3907:	48 c7 44 24 18 10 00 	movq   $0x10,0x18(%rsp)
    390e:	00 00 
    3910:	be 01 00 00 00       	mov    $0x1,%esi
    3915:	48 8d 3d a4 e9 02 00 	lea    0x2e9a4(%rip),%rdi        # 322c0 <aes>
    391c:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    3921:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    3926:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    392d:	00 
    392e:	e8 3d 0e 00 00       	callq  4770 <mbedtls_gcm_crypt_and_tag>
    3933:	48 83 c4 30          	add    $0x30,%rsp
    3937:	85 c0                	test   %eax,%eax
    3939:	75 54                	jne    398f <cf_run_target+0x13f>
    393b:	45 84 ed             	test   %r13b,%r13b
    393e:	75 25                	jne    3965 <cf_run_target+0x115>
    3940:	4c 89 e7             	mov    %r12,%rdi
    3943:	e8 98 f8 ff ff       	callq  31e0 <free@plt>
    3948:	48 83 c4 08          	add    $0x8,%rsp
    394c:	5b                   	pop    %rbx
    394d:	41 5c                	pop    %r12
    394f:	41 5d                	pop    %r13
    3951:	41 5e                	pop    %r14
    3953:	c3                   	retq   
    3954:	48 8d 3d 25 d7 01 00 	lea    0x1d725(%rip),%rdi        # 21080 <_IO_stdin_used+0x80>
    395b:	e8 a0 f8 ff ff       	callq  3200 <puts@plt>
    3960:	e9 6a ff ff ff       	jmpq   38cf <cf_run_target+0x7f>
    3965:	4c 89 e7             	mov    %r12,%rdi
    3968:	48 8d 15 35 d7 01 00 	lea    0x1d735(%rip),%rdx        # 210a4 <_IO_stdin_used+0xa4>
    396f:	be 10 00 00 00       	mov    $0x10,%esi
    3974:	e8 a7 fd ff ff       	callq  3720 <dump_secret>
    3979:	48 8d 15 2f d7 01 00 	lea    0x1d72f(%rip),%rdx        # 210af <_IO_stdin_used+0xaf>
    3980:	be 10 00 00 00       	mov    $0x10,%esi
    3985:	4c 89 f7             	mov    %r14,%rdi
    3988:	e8 93 fd ff ff       	callq  3720 <dump_secret>
    398d:	eb b1                	jmp    3940 <cf_run_target+0xf0>
    398f:	48 8d 3d fc d6 01 00 	lea    0x1d6fc(%rip),%rdi        # 21092 <_IO_stdin_used+0x92>
    3996:	e8 65 f8 ff ff       	callq  3200 <puts@plt>
    399b:	eb 9e                	jmp    393b <cf_run_target+0xeb>
    399d:	0f 1f 00             	nopl   (%rax)

00000000000039a0 <cf_prepare_next>:
    39a0:	f3 0f 1e fa          	endbr64 
    39a4:	48 8d 15 65 c6 02 00 	lea    0x2c665(%rip),%rdx        # 30010 <m>
    39ab:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    39af:	90                   	nop
    39b0:	80 02 01             	addb   $0x1,(%rdx)
    39b3:	75 09                	jne    39be <cf_prepare_next+0x1e>
    39b5:	48 83 c2 01          	add    $0x1,%rdx
    39b9:	48 39 ca             	cmp    %rcx,%rdx
    39bc:	75 f2                	jne    39b0 <cf_prepare_next+0x10>
    39be:	c3                   	retq   
    39bf:	90                   	nop

00000000000039c0 <gcm_mult>:
    39c0:	41 55                	push   %r13
    39c2:	41 54                	push   %r12
    39c4:	49 89 f4             	mov    %rsi,%r12
    39c7:	55                   	push   %rbp
    39c8:	48 89 d5             	mov    %rdx,%rbp
    39cb:	53                   	push   %rbx
    39cc:	48 89 fb             	mov    %rdi,%rbx
    39cf:	bf 02 00 00 00       	mov    $0x2,%edi
    39d4:	48 83 ec 28          	sub    $0x28,%rsp
    39d8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    39df:	00 00 
    39e1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    39e6:	31 c0                	xor    %eax,%eax
    39e8:	e8 03 19 00 00       	callq  52f0 <mbedtls_aesni_has_support>
    39ed:	85 c0                	test   %eax,%eax
    39ef:	0f 85 1b 01 00 00    	jne    3b10 <gcm_mult+0x150>
    39f5:	41 0f b6 7c 24 0f    	movzbl 0xf(%r12),%edi
    39fb:	4c 8d 15 5e e3 01 00 	lea    0x1e35e(%rip),%r10        # 21d60 <last4>
    3a02:	41 b8 0e 00 00 00    	mov    $0xe,%r8d
    3a08:	48 89 f8             	mov    %rdi,%rax
    3a0b:	40 c0 ef 04          	shr    $0x4,%dil
    3a0f:	83 e0 0f             	and    $0xf,%eax
    3a12:	48 8d 14 c3          	lea    (%rbx,%rax,8),%rdx
    3a16:	48 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%rax
    3a1d:	48 8b 52 60          	mov    0x60(%rdx),%rdx
    3a21:	48 89 d1             	mov    %rdx,%rcx
    3a24:	83 e1 0f             	and    $0xf,%ecx
    3a27:	49 8b 0c ca          	mov    (%r10,%rcx,8),%rcx
    3a2b:	eb 6c                	jmp    3a99 <gcm_mult+0xd9>
    3a2d:	0f 1f 00             	nopl   (%rax)
    3a30:	48 89 d1             	mov    %rdx,%rcx
    3a33:	43 0f b6 3c 04       	movzbl (%r12,%r8,1),%edi
    3a38:	49 89 c1             	mov    %rax,%r9
    3a3b:	48 89 d6             	mov    %rdx,%rsi
    3a3e:	49 c1 e1 3c          	shl    $0x3c,%r9
    3a42:	83 e1 0f             	and    $0xf,%ecx
    3a45:	48 c1 ee 04          	shr    $0x4,%rsi
    3a49:	49 8b 0c ca          	mov    (%r10,%rcx,8),%rcx
    3a4d:	41 89 fb             	mov    %edi,%r11d
    3a50:	4c 09 ce             	or     %r9,%rsi
    3a53:	49 89 c1             	mov    %rax,%r9
    3a56:	40 c0 ef 04          	shr    $0x4,%dil
    3a5a:	41 83 e3 0f          	and    $0xf,%r11d
    3a5e:	49 c1 e9 04          	shr    $0x4,%r9
    3a62:	49 89 cd             	mov    %rcx,%r13
    3a65:	49 c1 e5 30          	shl    $0x30,%r13
    3a69:	41 83 f8 0f          	cmp    $0xf,%r8d
    3a6d:	74 26                	je     3a95 <gcm_mult+0xd5>
    3a6f:	45 0f b6 db          	movzbl %r11b,%r11d
    3a73:	4a 8d 14 db          	lea    (%rbx,%r11,8),%rdx
    3a77:	48 33 72 60          	xor    0x60(%rdx),%rsi
    3a7b:	48 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%rax
    3a82:	48 89 f1             	mov    %rsi,%rcx
    3a85:	48 89 f2             	mov    %rsi,%rdx
    3a88:	83 e1 0f             	and    $0xf,%ecx
    3a8b:	4c 31 c8             	xor    %r9,%rax
    3a8e:	49 8b 0c ca          	mov    (%r10,%rcx,8),%rcx
    3a92:	4c 31 e8             	xor    %r13,%rax
    3a95:	49 83 e8 01          	sub    $0x1,%r8
    3a99:	48 89 d6             	mov    %rdx,%rsi
    3a9c:	48 89 c2             	mov    %rax,%rdx
    3a9f:	40 0f b6 ff          	movzbl %dil,%edi
    3aa3:	48 c1 e8 04          	shr    $0x4,%rax
    3aa7:	48 c1 ee 04          	shr    $0x4,%rsi
    3aab:	48 c1 e2 3c          	shl    $0x3c,%rdx
    3aaf:	48 09 f2             	or     %rsi,%rdx
    3ab2:	48 8d 34 fb          	lea    (%rbx,%rdi,8),%rsi
    3ab6:	48 c1 e1 30          	shl    $0x30,%rcx
    3aba:	48 33 8e e0 00 00 00 	xor    0xe0(%rsi),%rcx
    3ac1:	48 33 56 60          	xor    0x60(%rsi),%rdx
    3ac5:	48 31 c8             	xor    %rcx,%rax
    3ac8:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    3acc:	0f 85 5e ff ff ff    	jne    3a30 <gcm_mult+0x70>
    3ad2:	48 89 c1             	mov    %rax,%rcx
    3ad5:	0f c8                	bswap  %eax
    3ad7:	89 45 04             	mov    %eax,0x4(%rbp)
    3ada:	48 89 d0             	mov    %rdx,%rax
    3add:	48 c1 e9 20          	shr    $0x20,%rcx
    3ae1:	48 c1 e8 20          	shr    $0x20,%rax
    3ae5:	0f ca                	bswap  %edx
    3ae7:	89 55 0c             	mov    %edx,0xc(%rbp)
    3aea:	0f c9                	bswap  %ecx
    3aec:	0f c8                	bswap  %eax
    3aee:	89 4d 00             	mov    %ecx,0x0(%rbp)
    3af1:	89 45 08             	mov    %eax,0x8(%rbp)
    3af4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3af9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3b00:	00 00 
    3b02:	75 4f                	jne    3b53 <gcm_mult+0x193>
    3b04:	48 83 c4 28          	add    $0x28,%rsp
    3b08:	5b                   	pop    %rbx
    3b09:	5d                   	pop    %rbp
    3b0a:	41 5c                	pop    %r12
    3b0c:	41 5d                	pop    %r13
    3b0e:	c3                   	retq   
    3b0f:	90                   	nop
    3b10:	48 8b 83 20 01 00 00 	mov    0x120(%rbx),%rax
    3b17:	4c 89 e6             	mov    %r12,%rsi
    3b1a:	48 89 ef             	mov    %rbp,%rdi
    3b1d:	48 89 c2             	mov    %rax,%rdx
    3b20:	0f c8                	bswap  %eax
    3b22:	89 44 24 04          	mov    %eax,0x4(%rsp)
    3b26:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
    3b2d:	48 c1 ea 20          	shr    $0x20,%rdx
    3b31:	0f ca                	bswap  %edx
    3b33:	89 14 24             	mov    %edx,(%rsp)
    3b36:	48 89 c2             	mov    %rax,%rdx
    3b39:	0f c8                	bswap  %eax
    3b3b:	48 c1 ea 20          	shr    $0x20,%rdx
    3b3f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3b43:	0f ca                	bswap  %edx
    3b45:	89 54 24 08          	mov    %edx,0x8(%rsp)
    3b49:	48 89 e2             	mov    %rsp,%rdx
    3b4c:	e8 5f 18 00 00       	callq  53b0 <mbedtls_aesni_gcm_mult>
    3b51:	eb a1                	jmp    3af4 <gcm_mult+0x134>
    3b53:	e8 08 f7 ff ff       	callq  3260 <__stack_chk_fail@plt>
    3b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3b5f:	00 

0000000000003b60 <mbedtls_gcm_free.part.0>:
    3b60:	55                   	push   %rbp
    3b61:	48 89 fd             	mov    %rdi,%rbp
    3b64:	e8 f7 20 00 00       	callq  5c60 <mbedtls_cipher_free>
    3b69:	48 89 ef             	mov    %rbp,%rdi
    3b6c:	be a8 01 00 00       	mov    $0x1a8,%esi
    3b71:	5d                   	pop    %rbp
    3b72:	e9 b9 16 00 00       	jmpq   5230 <mbedtls_platform_zeroize>
    3b77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3b7e:	00 00 

0000000000003b80 <gcm_mask>:
    3b80:	41 57                	push   %r15
    3b82:	49 89 f7             	mov    %rsi,%r15
    3b85:	48 8d b7 80 01 00 00 	lea    0x180(%rdi),%rsi
    3b8c:	41 56                	push   %r14
    3b8e:	49 89 d6             	mov    %rdx,%r14
    3b91:	ba 10 00 00 00       	mov    $0x10,%edx
    3b96:	41 55                	push   %r13
    3b98:	4d 89 cd             	mov    %r9,%r13
    3b9b:	41 54                	push   %r12
    3b9d:	4d 89 c4             	mov    %r8,%r12
    3ba0:	55                   	push   %rbp
    3ba1:	48 89 fd             	mov    %rdi,%rbp
    3ba4:	53                   	push   %rbx
    3ba5:	48 89 cb             	mov    %rcx,%rbx
    3ba8:	4c 89 f9             	mov    %r15,%rcx
    3bab:	48 83 ec 28          	sub    $0x28,%rsp
    3baf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3bb6:	00 00 
    3bb8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3bbd:	31 c0                	xor    %eax,%eax
    3bbf:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    3bc4:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    3bcb:	00 00 
    3bcd:	e8 8e 24 00 00       	callq  6060 <mbedtls_cipher_update>
    3bd2:	85 c0                	test   %eax,%eax
    3bd4:	0f 85 f6 00 00 00    	jne    3cd0 <gcm_mask+0x150>
    3bda:	8b 95 a0 01 00 00    	mov    0x1a0(%rbp),%edx
    3be0:	4d 01 f7             	add    %r14,%r15
    3be3:	85 d2                	test   %edx,%edx
    3be5:	0f 84 85 00 00 00    	je     3c70 <gcm_mask+0xf0>
    3beb:	48 83 fb 03          	cmp    $0x3,%rbx
    3bef:	0f 86 fb 00 00 00    	jbe    3cf0 <gcm_mask+0x170>
    3bf5:	b9 04 00 00 00       	mov    $0x4,%ecx
    3bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3c00:	41 8b 54 0f fc       	mov    -0x4(%r15,%rcx,1),%edx
    3c05:	41 33 54 0c fc       	xor    -0x4(%r12,%rcx,1),%edx
    3c0a:	41 89 54 0d fc       	mov    %edx,-0x4(%r13,%rcx,1)
    3c0f:	48 89 ca             	mov    %rcx,%rdx
    3c12:	48 83 c1 04          	add    $0x4,%rcx
    3c16:	48 39 cb             	cmp    %rcx,%rbx
    3c19:	73 e5                	jae    3c00 <gcm_mask+0x80>
    3c1b:	48 39 d3             	cmp    %rdx,%rbx
    3c1e:	76 17                	jbe    3c37 <gcm_mask+0xb7>
    3c20:	41 0f b6 0c 17       	movzbl (%r15,%rdx,1),%ecx
    3c25:	41 32 0c 14          	xor    (%r12,%rdx,1),%cl
    3c29:	41 88 4c 15 00       	mov    %cl,0x0(%r13,%rdx,1)
    3c2e:	48 83 c2 01          	add    $0x1,%rdx
    3c32:	48 39 d3             	cmp    %rdx,%rbx
    3c35:	77 e9                	ja     3c20 <gcm_mask+0xa0>
    3c37:	83 bd a0 01 00 00 01 	cmpl   $0x1,0x1a0(%rbp)
    3c3e:	0f 84 bc 00 00 00    	je     3d00 <gcm_mask+0x180>
    3c44:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    3c49:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    3c50:	00 00 
    3c52:	0f 85 08 01 00 00    	jne    3d60 <gcm_mask+0x1e0>
    3c58:	48 83 c4 28          	add    $0x28,%rsp
    3c5c:	5b                   	pop    %rbx
    3c5d:	5d                   	pop    %rbp
    3c5e:	41 5c                	pop    %r12
    3c60:	41 5d                	pop    %r13
    3c62:	41 5e                	pop    %r14
    3c64:	41 5f                	pop    %r15
    3c66:	c3                   	retq   
    3c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3c6e:	00 00 
    3c70:	4a 8d b4 35 90 01 00 	lea    0x190(%rbp,%r14,1),%rsi
    3c77:	00 
    3c78:	48 83 fb 03          	cmp    $0x3,%rbx
    3c7c:	0f 86 ce 00 00 00    	jbe    3d50 <gcm_mask+0x1d0>
    3c82:	b9 04 00 00 00       	mov    $0x4,%ecx
    3c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3c8e:	00 00 
    3c90:	41 8b 54 0c fc       	mov    -0x4(%r12,%rcx,1),%edx
    3c95:	31 54 0e fc          	xor    %edx,-0x4(%rsi,%rcx,1)
    3c99:	48 89 ca             	mov    %rcx,%rdx
    3c9c:	48 8d 49 04          	lea    0x4(%rcx),%rcx
    3ca0:	48 39 cb             	cmp    %rcx,%rbx
    3ca3:	73 eb                	jae    3c90 <gcm_mask+0x110>
    3ca5:	48 39 d3             	cmp    %rdx,%rbx
    3ca8:	0f 86 47 ff ff ff    	jbe    3bf5 <gcm_mask+0x75>
    3cae:	41 0f b6 0c 14       	movzbl (%r12,%rdx,1),%ecx
    3cb3:	30 0c 16             	xor    %cl,(%rsi,%rdx,1)
    3cb6:	48 83 c2 01          	add    $0x1,%rdx
    3cba:	48 39 d3             	cmp    %rdx,%rbx
    3cbd:	77 ef                	ja     3cae <gcm_mask+0x12e>
    3cbf:	31 d2                	xor    %edx,%edx
    3cc1:	48 83 fb 03          	cmp    $0x3,%rbx
    3cc5:	0f 87 2a ff ff ff    	ja     3bf5 <gcm_mask+0x75>
    3ccb:	e9 50 ff ff ff       	jmpq   3c20 <gcm_mask+0xa0>
    3cd0:	be 10 00 00 00       	mov    $0x10,%esi
    3cd5:	4c 89 ff             	mov    %r15,%rdi
    3cd8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3cdc:	e8 4f 15 00 00       	callq  5230 <mbedtls_platform_zeroize>
    3ce1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3ce5:	e9 5a ff ff ff       	jmpq   3c44 <gcm_mask+0xc4>
    3cea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3cf0:	31 d2                	xor    %edx,%edx
    3cf2:	e9 24 ff ff ff       	jmpq   3c1b <gcm_mask+0x9b>
    3cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3cfe:	00 00 
    3d00:	4a 8d b4 35 90 01 00 	lea    0x190(%rbp,%r14,1),%rsi
    3d07:	00 
    3d08:	ba 04 00 00 00       	mov    $0x4,%edx
    3d0d:	31 c9                	xor    %ecx,%ecx
    3d0f:	48 83 fb 03          	cmp    $0x3,%rbx
    3d13:	76 18                	jbe    3d2d <gcm_mask+0x1ad>
    3d15:	0f 1f 00             	nopl   (%rax)
    3d18:	41 8b 4c 15 fc       	mov    -0x4(%r13,%rdx,1),%ecx
    3d1d:	31 4c 16 fc          	xor    %ecx,-0x4(%rsi,%rdx,1)
    3d21:	48 89 d1             	mov    %rdx,%rcx
    3d24:	48 83 c2 04          	add    $0x4,%rdx
    3d28:	48 39 d3             	cmp    %rdx,%rbx
    3d2b:	73 eb                	jae    3d18 <gcm_mask+0x198>
    3d2d:	48 39 cb             	cmp    %rcx,%rbx
    3d30:	0f 86 0e ff ff ff    	jbe    3c44 <gcm_mask+0xc4>
    3d36:	41 0f b6 54 0d 00    	movzbl 0x0(%r13,%rcx,1),%edx
    3d3c:	30 14 0e             	xor    %dl,(%rsi,%rcx,1)
    3d3f:	48 83 c1 01          	add    $0x1,%rcx
    3d43:	48 39 cb             	cmp    %rcx,%rbx
    3d46:	75 ee                	jne    3d36 <gcm_mask+0x1b6>
    3d48:	e9 f7 fe ff ff       	jmpq   3c44 <gcm_mask+0xc4>
    3d4d:	0f 1f 00             	nopl   (%rax)
    3d50:	31 d2                	xor    %edx,%edx
    3d52:	48 85 db             	test   %rbx,%rbx
    3d55:	0f 85 53 ff ff ff    	jne    3cae <gcm_mask+0x12e>
    3d5b:	e9 e4 fe ff ff       	jmpq   3c44 <gcm_mask+0xc4>
    3d60:	e8 fb f4 ff ff       	callq  3260 <__stack_chk_fail@plt>
    3d65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3d6c:	00 00 00 00 

0000000000003d70 <mbedtls_gcm_init>:
    3d70:	f3 0f 1e fa          	endbr64 
    3d74:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    3d7b:	48 89 f9             	mov    %rdi,%rcx
    3d7e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    3d82:	31 c0                	xor    %eax,%eax
    3d84:	48 c7 87 98 01 00 00 	movq   $0x0,0x198(%rdi)
    3d8b:	00 00 00 00 
    3d8f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    3d93:	48 29 f9             	sub    %rdi,%rcx
    3d96:	81 c1 a8 01 00 00    	add    $0x1a8,%ecx
    3d9c:	c1 e9 03             	shr    $0x3,%ecx
    3d9f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    3da2:	c3                   	retq   
    3da3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3daa:	00 00 00 00 
    3dae:	66 90                	xchg   %ax,%ax

0000000000003db0 <mbedtls_gcm_setkey>:
    3db0:	f3 0f 1e fa          	endbr64 
    3db4:	41 55                	push   %r13
    3db6:	41 89 cd             	mov    %ecx,%r13d
    3db9:	41 54                	push   %r12
    3dbb:	55                   	push   %rbp
    3dbc:	48 89 d5             	mov    %rdx,%rbp
    3dbf:	53                   	push   %rbx
    3dc0:	48 89 fb             	mov    %rdi,%rbx
    3dc3:	89 f7                	mov    %esi,%edi
    3dc5:	48 83 ec 38          	sub    $0x38,%rsp
    3dc9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3dd0:	00 00 
    3dd2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3dd7:	31 c0                	xor    %eax,%eax
    3dd9:	89 c8                	mov    %ecx,%eax
    3ddb:	83 e0 bf             	and    $0xffffffbf,%eax
    3dde:	3d 80 00 00 00       	cmp    $0x80,%eax
    3de3:	74 0c                	je     3df1 <mbedtls_gcm_setkey+0x41>
    3de5:	81 f9 00 01 00 00    	cmp    $0x100,%ecx
    3deb:	0f 85 bf 01 00 00    	jne    3fb0 <mbedtls_gcm_setkey+0x200>
    3df1:	ba 01 00 00 00       	mov    $0x1,%edx
    3df6:	44 89 ee             	mov    %r13d,%esi
    3df9:	e8 e2 1d 00 00       	callq  5be0 <mbedtls_cipher_info_from_values>
    3dfe:	49 89 c4             	mov    %rax,%r12
    3e01:	48 85 c0             	test   %rax,%rax
    3e04:	0f 84 a6 01 00 00    	je     3fb0 <mbedtls_gcm_setkey+0x200>
    3e0a:	83 78 20 10          	cmpl   $0x10,0x20(%rax)
    3e0e:	0f 85 9c 01 00 00    	jne    3fb0 <mbedtls_gcm_setkey+0x200>
    3e14:	48 89 df             	mov    %rbx,%rdi
    3e17:	e8 44 1e 00 00       	callq  5c60 <mbedtls_cipher_free>
    3e1c:	4c 89 e6             	mov    %r12,%rsi
    3e1f:	48 89 df             	mov    %rbx,%rdi
    3e22:	e8 99 1e 00 00       	callq  5cc0 <mbedtls_cipher_setup>
    3e27:	41 89 c4             	mov    %eax,%r12d
    3e2a:	85 c0                	test   %eax,%eax
    3e2c:	74 22                	je     3e50 <mbedtls_gcm_setkey+0xa0>
    3e2e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3e33:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3e3a:	00 00 
    3e3c:	0f 85 79 01 00 00    	jne    3fbb <mbedtls_gcm_setkey+0x20b>
    3e42:	48 83 c4 38          	add    $0x38,%rsp
    3e46:	44 89 e0             	mov    %r12d,%eax
    3e49:	5b                   	pop    %rbx
    3e4a:	5d                   	pop    %rbp
    3e4b:	41 5c                	pop    %r12
    3e4d:	41 5d                	pop    %r13
    3e4f:	c3                   	retq   
    3e50:	b9 01 00 00 00       	mov    $0x1,%ecx
    3e55:	44 89 ea             	mov    %r13d,%edx
    3e58:	48 89 ee             	mov    %rbp,%rsi
    3e5b:	48 89 df             	mov    %rbx,%rdi
    3e5e:	e8 fd 1e 00 00       	callq  5d60 <mbedtls_cipher_setkey>
    3e63:	41 89 c4             	mov    %eax,%r12d
    3e66:	85 c0                	test   %eax,%eax
    3e68:	75 c4                	jne    3e2e <mbedtls_gcm_setkey+0x7e>
    3e6a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    3e6f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3e73:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
    3e78:	48 89 df             	mov    %rbx,%rdi
    3e7b:	48 89 f1             	mov    %rsi,%rcx
    3e7e:	ba 10 00 00 00       	mov    $0x10,%edx
    3e83:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    3e88:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    3e8f:	00 00 
    3e91:	e8 ca 21 00 00       	callq  6060 <mbedtls_cipher_update>
    3e96:	41 89 c4             	mov    %eax,%r12d
    3e99:	85 c0                	test   %eax,%eax
    3e9b:	75 91                	jne    3e2e <mbedtls_gcm_setkey+0x7e>
    3e9d:	8b 44 24 10          	mov    0x10(%rsp),%eax
    3ea1:	8b 54 24 14          	mov    0x14(%rsp),%edx
    3ea5:	bf 02 00 00 00       	mov    $0x2,%edi
    3eaa:	8b 6c 24 18          	mov    0x18(%rsp),%ebp
    3eae:	0f c8                	bswap  %eax
    3eb0:	0f ca                	bswap  %edx
    3eb2:	48 c1 e0 20          	shl    $0x20,%rax
    3eb6:	89 d2                	mov    %edx,%edx
    3eb8:	48 09 d0             	or     %rdx,%rax
    3ebb:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    3ebf:	0f cd                	bswap  %ebp
    3ec1:	48 c1 e5 20          	shl    $0x20,%rbp
    3ec5:	48 89 83 20 01 00 00 	mov    %rax,0x120(%rbx)
    3ecc:	49 89 c5             	mov    %rax,%r13
    3ecf:	0f ca                	bswap  %edx
    3ed1:	89 d2                	mov    %edx,%edx
    3ed3:	48 09 d5             	or     %rdx,%rbp
    3ed6:	48 89 ab a0 00 00 00 	mov    %rbp,0xa0(%rbx)
    3edd:	e8 0e 14 00 00       	callq  52f0 <mbedtls_aesni_has_support>
    3ee2:	85 c0                	test   %eax,%eax
    3ee4:	0f 85 44 ff ff ff    	jne    3e2e <mbedtls_gcm_setkey+0x7e>
    3eea:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
    3ef1:	00 00 00 00 
    3ef5:	b9 03 00 00 00       	mov    $0x3,%ecx
    3efa:	ba 04 00 00 00       	mov    $0x4,%edx
    3eff:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
    3f06:	00 
    3f07:	89 e8                	mov    %ebp,%eax
    3f09:	48 d1 ed             	shr    %rbp
    3f0c:	83 e0 01             	and    $0x1,%eax
    3f0f:	89 c6                	mov    %eax,%esi
    3f11:	c1 e6 05             	shl    $0x5,%esi
    3f14:	29 f0                	sub    %esi,%eax
    3f16:	4c 89 ee             	mov    %r13,%rsi
    3f19:	49 d1 ed             	shr    %r13
    3f1c:	c1 e0 18             	shl    $0x18,%eax
    3f1f:	48 c1 e6 3f          	shl    $0x3f,%rsi
    3f23:	48 c1 e0 20          	shl    $0x20,%rax
    3f27:	48 09 f5             	or     %rsi,%rbp
    3f2a:	49 31 c5             	xor    %rax,%r13
    3f2d:	48 63 c2             	movslq %edx,%rax
    3f30:	d1 fa                	sar    %edx
    3f32:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    3f36:	48 89 68 60          	mov    %rbp,0x60(%rax)
    3f3a:	4c 89 a8 e0 00 00 00 	mov    %r13,0xe0(%rax)
    3f41:	83 e9 01             	sub    $0x1,%ecx
    3f44:	75 c1                	jne    3f07 <mbedtls_gcm_setkey+0x157>
    3f46:	48 8d 6b 60          	lea    0x60(%rbx),%rbp
    3f4a:	41 ba 03 00 00 00    	mov    $0x3,%r10d
    3f50:	be 02 00 00 00       	mov    $0x2,%esi
    3f55:	4c 8d 9b e0 00 00 00 	lea    0xe0(%rbx),%r11
    3f5c:	48 63 d6             	movslq %esi,%rdx
    3f5f:	b8 01 00 00 00       	mov    $0x1,%eax
    3f64:	48 c1 e2 03          	shl    $0x3,%rdx
    3f68:	48 8d 7c 15 00       	lea    0x0(%rbp,%rdx,1),%rdi
    3f6d:	4c 01 da             	add    %r11,%rdx
    3f70:	4c 8b 0a             	mov    (%rdx),%r9
    3f73:	4c 8b 07             	mov    (%rdi),%r8
    3f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3f7d:	00 00 00 
    3f80:	48 8b 8c c3 e0 00 00 	mov    0xe0(%rbx,%rax,8),%rcx
    3f87:	00 
    3f88:	4c 31 c9             	xor    %r9,%rcx
    3f8b:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    3f8f:	48 8b 4c c3 60       	mov    0x60(%rbx,%rax,8),%rcx
    3f94:	4c 31 c1             	xor    %r8,%rcx
    3f97:	48 89 0c c7          	mov    %rcx,(%rdi,%rax,8)
    3f9b:	48 83 c0 01          	add    $0x1,%rax
    3f9f:	39 c6                	cmp    %eax,%esi
    3fa1:	7f dd                	jg     3f80 <mbedtls_gcm_setkey+0x1d0>
    3fa3:	01 f6                	add    %esi,%esi
    3fa5:	41 83 ea 01          	sub    $0x1,%r10d
    3fa9:	75 b1                	jne    3f5c <mbedtls_gcm_setkey+0x1ac>
    3fab:	e9 7e fe ff ff       	jmpq   3e2e <mbedtls_gcm_setkey+0x7e>
    3fb0:	41 bc ec ff ff ff    	mov    $0xffffffec,%r12d
    3fb6:	e9 73 fe ff ff       	jmpq   3e2e <mbedtls_gcm_setkey+0x7e>
    3fbb:	e8 a0 f2 ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000003fc0 <mbedtls_gcm_starts>:
    3fc0:	f3 0f 1e fa          	endbr64 
    3fc4:	41 57                	push   %r15
    3fc6:	41 56                	push   %r14
    3fc8:	41 55                	push   %r13
    3fca:	41 54                	push   %r12
    3fcc:	55                   	push   %rbp
    3fcd:	53                   	push   %rbx
    3fce:	48 83 ec 38          	sub    $0x38,%rsp
    3fd2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3fd9:	00 00 
    3fdb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3fe0:	31 c0                	xor    %eax,%eax
    3fe2:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    3fe9:	00 00 
    3feb:	48 85 c9             	test   %rcx,%rcx
    3fee:	0f 84 76 01 00 00    	je     416a <mbedtls_gcm_starts+0x1aa>
    3ff4:	48 89 c8             	mov    %rcx,%rax
    3ff7:	48 89 cb             	mov    %rcx,%rbx
    3ffa:	48 c1 e8 3d          	shr    $0x3d,%rax
    3ffe:	0f 85 66 01 00 00    	jne    416a <mbedtls_gcm_starts+0x1aa>
    4004:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4008:	89 b7 a0 01 00 00    	mov    %esi,0x1a0(%rdi)
    400e:	48 89 fd             	mov    %rdi,%rbp
    4011:	49 89 d6             	mov    %rdx,%r14
    4014:	4c 8d bf 80 01 00 00 	lea    0x180(%rdi),%r15
    401b:	0f 11 87 80 01 00 00 	movups %xmm0,0x180(%rdi)
    4022:	48 c7 87 60 01 00 00 	movq   $0x0,0x160(%rdi)
    4029:	00 00 00 00 
    402d:	48 c7 87 68 01 00 00 	movq   $0x0,0x168(%rdi)
    4034:	00 00 00 00 
    4038:	0f 11 87 90 01 00 00 	movups %xmm0,0x190(%rdi)
    403f:	48 83 f9 0c          	cmp    $0xc,%rcx
    4043:	0f 84 07 01 00 00    	je     4150 <mbedtls_gcm_starts+0x190>
    4049:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    4050:	00 
    4051:	41 bd 10 00 00 00    	mov    $0x10,%r13d
    4057:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    405e:	00 00 
    4060:	48 0f c8             	bswap  %rax
    4063:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4068:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    406f:	00 
    4070:	48 83 fb 10          	cmp    $0x10,%rbx
    4074:	4d 89 ec             	mov    %r13,%r12
    4077:	4c 0f 46 e3          	cmovbe %rbx,%r12
    407b:	48 83 fb 03          	cmp    $0x3,%rbx
    407f:	0f 86 bb 00 00 00    	jbe    4140 <mbedtls_gcm_starts+0x180>
    4085:	ba 04 00 00 00       	mov    $0x4,%edx
    408a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4090:	41 8b 44 16 fc       	mov    -0x4(%r14,%rdx,1),%eax
    4095:	31 84 15 7c 01 00 00 	xor    %eax,0x17c(%rbp,%rdx,1)
    409c:	48 89 d0             	mov    %rdx,%rax
    409f:	48 8d 52 04          	lea    0x4(%rdx),%rdx
    40a3:	49 39 d4             	cmp    %rdx,%r12
    40a6:	73 e8                	jae    4090 <mbedtls_gcm_starts+0xd0>
    40a8:	49 39 c4             	cmp    %rax,%r12
    40ab:	76 15                	jbe    40c2 <mbedtls_gcm_starts+0x102>
    40ad:	41 0f b6 14 06       	movzbl (%r14,%rax,1),%edx
    40b2:	30 94 05 80 01 00 00 	xor    %dl,0x180(%rbp,%rax,1)
    40b9:	48 83 c0 01          	add    $0x1,%rax
    40bd:	49 39 c4             	cmp    %rax,%r12
    40c0:	77 eb                	ja     40ad <mbedtls_gcm_starts+0xed>
    40c2:	4c 89 fa             	mov    %r15,%rdx
    40c5:	4c 89 fe             	mov    %r15,%rsi
    40c8:	48 89 ef             	mov    %rbp,%rdi
    40cb:	4d 01 e6             	add    %r12,%r14
    40ce:	e8 ed f8 ff ff       	callq  39c0 <gcm_mult>
    40d3:	4c 29 e3             	sub    %r12,%rbx
    40d6:	75 98                	jne    4070 <mbedtls_gcm_starts+0xb0>
    40d8:	31 c0                	xor    %eax,%eax
    40da:	eb 08                	jmp    40e4 <mbedtls_gcm_starts+0x124>
    40dc:	0f 1f 40 00          	nopl   0x0(%rax)
    40e0:	8b 44 1c 10          	mov    0x10(%rsp,%rbx,1),%eax
    40e4:	31 84 1d 80 01 00 00 	xor    %eax,0x180(%rbp,%rbx,1)
    40eb:	48 83 c3 04          	add    $0x4,%rbx
    40ef:	48 83 fb 10          	cmp    $0x10,%rbx
    40f3:	75 eb                	jne    40e0 <mbedtls_gcm_starts+0x120>
    40f5:	4c 89 fa             	mov    %r15,%rdx
    40f8:	4c 89 fe             	mov    %r15,%rsi
    40fb:	48 89 ef             	mov    %rbp,%rdi
    40fe:	e8 bd f8 ff ff       	callq  39c0 <gcm_mult>
    4103:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
    4108:	ba 10 00 00 00       	mov    $0x10,%edx
    410d:	4c 89 fe             	mov    %r15,%rsi
    4110:	48 89 ef             	mov    %rbp,%rdi
    4113:	48 8d 8d 70 01 00 00 	lea    0x170(%rbp),%rcx
    411a:	e8 41 1f 00 00       	callq  6060 <mbedtls_cipher_update>
    411f:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    4124:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    412b:	00 00 
    412d:	75 42                	jne    4171 <mbedtls_gcm_starts+0x1b1>
    412f:	48 83 c4 38          	add    $0x38,%rsp
    4133:	5b                   	pop    %rbx
    4134:	5d                   	pop    %rbp
    4135:	41 5c                	pop    %r12
    4137:	41 5d                	pop    %r13
    4139:	41 5e                	pop    %r14
    413b:	41 5f                	pop    %r15
    413d:	c3                   	retq   
    413e:	66 90                	xchg   %ax,%ax
    4140:	31 c0                	xor    %eax,%eax
    4142:	e9 66 ff ff ff       	jmpq   40ad <mbedtls_gcm_starts+0xed>
    4147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    414e:	00 00 
    4150:	48 8b 02             	mov    (%rdx),%rax
    4153:	48 89 87 80 01 00 00 	mov    %rax,0x180(%rdi)
    415a:	8b 42 08             	mov    0x8(%rdx),%eax
    415d:	41 89 47 08          	mov    %eax,0x8(%r15)
    4161:	c6 87 8f 01 00 00 01 	movb   $0x1,0x18f(%rdi)
    4168:	eb 99                	jmp    4103 <mbedtls_gcm_starts+0x143>
    416a:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
    416f:	eb ae                	jmp    411f <mbedtls_gcm_starts+0x15f>
    4171:	e8 ea f0 ff ff       	callq  3260 <__stack_chk_fail@plt>
    4176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    417d:	00 00 00 

0000000000004180 <mbedtls_gcm_update_ad>:
    4180:	f3 0f 1e fa          	endbr64 
    4184:	41 57                	push   %r15
    4186:	41 56                	push   %r14
    4188:	41 55                	push   %r13
    418a:	49 89 d5             	mov    %rdx,%r13
    418d:	41 54                	push   %r12
    418f:	55                   	push   %rbp
    4190:	53                   	push   %rbx
    4191:	48 83 ec 08          	sub    $0x8,%rsp
    4195:	49 c1 ed 3d          	shr    $0x3d,%r13
    4199:	0f 85 83 01 00 00    	jne    4322 <mbedtls_gcm_update_ad+0x1a2>
    419f:	48 8b 87 68 01 00 00 	mov    0x168(%rdi),%rax
    41a6:	48 89 f3             	mov    %rsi,%rbx
    41a9:	48 89 fd             	mov    %rdi,%rbp
    41ac:	49 89 d4             	mov    %rdx,%r12
    41af:	48 89 c6             	mov    %rax,%rsi
    41b2:	83 e6 0f             	and    $0xf,%esi
    41b5:	0f 85 c5 00 00 00    	jne    4280 <mbedtls_gcm_update_ad+0x100>
    41bb:	4c 01 e0             	add    %r12,%rax
    41be:	48 89 85 68 01 00 00 	mov    %rax,0x168(%rbp)
    41c5:	49 83 fc 0f          	cmp    $0xf,%r12
    41c9:	0f 86 37 01 00 00    	jbe    4306 <mbedtls_gcm_update_ad+0x186>
    41cf:	49 8d 44 24 f0       	lea    -0x10(%r12),%rax
    41d4:	4c 8d bd 90 01 00 00 	lea    0x190(%rbp),%r15
    41db:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    41df:	4c 8d 74 03 10       	lea    0x10(%rbx,%rax,1),%r14
    41e4:	0f 1f 40 00          	nopl   0x0(%rax)
    41e8:	31 c0                	xor    %eax,%eax
    41ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    41f0:	8b 14 03             	mov    (%rbx,%rax,1),%edx
    41f3:	31 94 05 90 01 00 00 	xor    %edx,0x190(%rbp,%rax,1)
    41fa:	48 83 c0 04          	add    $0x4,%rax
    41fe:	48 83 f8 10          	cmp    $0x10,%rax
    4202:	75 ec                	jne    41f0 <mbedtls_gcm_update_ad+0x70>
    4204:	4c 89 fa             	mov    %r15,%rdx
    4207:	4c 89 fe             	mov    %r15,%rsi
    420a:	48 89 ef             	mov    %rbp,%rdi
    420d:	48 83 c3 10          	add    $0x10,%rbx
    4211:	e8 aa f7 ff ff       	callq  39c0 <gcm_mult>
    4216:	4c 39 f3             	cmp    %r14,%rbx
    4219:	75 cd                	jne    41e8 <mbedtls_gcm_update_ad+0x68>
    421b:	41 83 e4 0f          	and    $0xf,%r12d
    421f:	4d 85 e4             	test   %r12,%r12
    4222:	75 14                	jne    4238 <mbedtls_gcm_update_ad+0xb8>
    4224:	31 c0                	xor    %eax,%eax
    4226:	48 83 c4 08          	add    $0x8,%rsp
    422a:	5b                   	pop    %rbx
    422b:	5d                   	pop    %rbp
    422c:	41 5c                	pop    %r12
    422e:	41 5d                	pop    %r13
    4230:	41 5e                	pop    %r14
    4232:	41 5f                	pop    %r15
    4234:	c3                   	retq   
    4235:	0f 1f 00             	nopl   (%rax)
    4238:	49 83 fc 03          	cmp    $0x3,%r12
    423c:	76 27                	jbe    4265 <mbedtls_gcm_update_ad+0xe5>
    423e:	b8 04 00 00 00       	mov    $0x4,%eax
    4243:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4248:	41 8b 54 06 fc       	mov    -0x4(%r14,%rax,1),%edx
    424d:	49 89 c5             	mov    %rax,%r13
    4250:	31 94 05 8c 01 00 00 	xor    %edx,0x18c(%rbp,%rax,1)
    4257:	48 8d 40 04          	lea    0x4(%rax),%rax
    425b:	49 39 c4             	cmp    %rax,%r12
    425e:	73 e8                	jae    4248 <mbedtls_gcm_update_ad+0xc8>
    4260:	4d 39 ec             	cmp    %r13,%r12
    4263:	76 bf                	jbe    4224 <mbedtls_gcm_update_ad+0xa4>
    4265:	43 0f b6 04 2e       	movzbl (%r14,%r13,1),%eax
    426a:	42 30 84 2d 90 01 00 	xor    %al,0x190(%rbp,%r13,1)
    4271:	00 
    4272:	49 83 c5 01          	add    $0x1,%r13
    4276:	4d 39 e5             	cmp    %r12,%r13
    4279:	75 ea                	jne    4265 <mbedtls_gcm_update_ad+0xe5>
    427b:	eb a7                	jmp    4224 <mbedtls_gcm_update_ad+0xa4>
    427d:	0f 1f 00             	nopl   (%rax)
    4280:	41 be 10 00 00 00    	mov    $0x10,%r14d
    4286:	4c 8d 87 90 01 00 00 	lea    0x190(%rdi),%r8
    428d:	49 29 f6             	sub    %rsi,%r14
    4290:	49 8d 0c 30          	lea    (%r8,%rsi,1),%rcx
    4294:	4c 39 f2             	cmp    %r14,%rdx
    4297:	4c 0f 46 f2          	cmovbe %rdx,%r14
    429b:	49 83 fe 03          	cmp    $0x3,%r14
    429f:	76 7d                	jbe    431e <mbedtls_gcm_update_ad+0x19e>
    42a1:	b8 04 00 00 00       	mov    $0x4,%eax
    42a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    42ad:	00 00 00 
    42b0:	8b 54 03 fc          	mov    -0x4(%rbx,%rax,1),%edx
    42b4:	31 54 01 fc          	xor    %edx,-0x4(%rcx,%rax,1)
    42b8:	48 89 c2             	mov    %rax,%rdx
    42bb:	48 83 c0 04          	add    $0x4,%rax
    42bf:	49 39 c6             	cmp    %rax,%r14
    42c2:	73 ec                	jae    42b0 <mbedtls_gcm_update_ad+0x130>
    42c4:	49 39 d6             	cmp    %rdx,%r14
    42c7:	76 10                	jbe    42d9 <mbedtls_gcm_update_ad+0x159>
    42c9:	0f b6 04 13          	movzbl (%rbx,%rdx,1),%eax
    42cd:	30 04 11             	xor    %al,(%rcx,%rdx,1)
    42d0:	48 83 c2 01          	add    $0x1,%rdx
    42d4:	49 39 d6             	cmp    %rdx,%r14
    42d7:	75 f0                	jne    42c9 <mbedtls_gcm_update_ad+0x149>
    42d9:	4c 01 f6             	add    %r14,%rsi
    42dc:	48 83 fe 10          	cmp    $0x10,%rsi
    42e0:	74 2c                	je     430e <mbedtls_gcm_update_ad+0x18e>
    42e2:	48 8b 85 68 01 00 00 	mov    0x168(%rbp),%rax
    42e9:	4d 29 f4             	sub    %r14,%r12
    42ec:	4c 01 f3             	add    %r14,%rbx
    42ef:	4c 01 f0             	add    %r14,%rax
    42f2:	4c 01 e0             	add    %r12,%rax
    42f5:	48 89 85 68 01 00 00 	mov    %rax,0x168(%rbp)
    42fc:	49 83 fc 0f          	cmp    $0xf,%r12
    4300:	0f 87 c9 fe ff ff    	ja     41cf <mbedtls_gcm_update_ad+0x4f>
    4306:	49 89 de             	mov    %rbx,%r14
    4309:	e9 11 ff ff ff       	jmpq   421f <mbedtls_gcm_update_ad+0x9f>
    430e:	4c 89 c2             	mov    %r8,%rdx
    4311:	4c 89 c6             	mov    %r8,%rsi
    4314:	48 89 ef             	mov    %rbp,%rdi
    4317:	e8 a4 f6 ff ff       	callq  39c0 <gcm_mult>
    431c:	eb c4                	jmp    42e2 <mbedtls_gcm_update_ad+0x162>
    431e:	31 d2                	xor    %edx,%edx
    4320:	eb a2                	jmp    42c4 <mbedtls_gcm_update_ad+0x144>
    4322:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
    4327:	e9 fa fe ff ff       	jmpq   4226 <mbedtls_gcm_update_ad+0xa6>
    432c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004330 <mbedtls_gcm_update>:
    4330:	f3 0f 1e fa          	endbr64 
    4334:	41 57                	push   %r15
    4336:	66 0f ef c0          	pxor   %xmm0,%xmm0
    433a:	41 56                	push   %r14
    433c:	41 55                	push   %r13
    433e:	41 54                	push   %r12
    4340:	55                   	push   %rbp
    4341:	53                   	push   %rbx
    4342:	48 83 ec 38          	sub    $0x38,%rsp
    4346:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    434d:	00 00 
    434f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4354:	31 c0                	xor    %eax,%eax
    4356:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    435b:	49 39 d0             	cmp    %rdx,%r8
    435e:	0f 82 34 02 00 00    	jb     4598 <mbedtls_gcm_update+0x268>
    4364:	49 89 11             	mov    %rdx,(%r9)
    4367:	49 89 d4             	mov    %rdx,%r12
    436a:	48 85 d2             	test   %rdx,%rdx
    436d:	0f 84 20 01 00 00    	je     4493 <mbedtls_gcm_update+0x163>
    4373:	49 89 ff             	mov    %rdi,%r15
    4376:	48 89 f3             	mov    %rsi,%rbx
    4379:	48 89 cd             	mov    %rcx,%rbp
    437c:	48 39 ce             	cmp    %rcx,%rsi
    437f:	0f 82 3b 01 00 00    	jb     44c0 <mbedtls_gcm_update+0x190>
    4385:	49 8b 87 60 01 00 00 	mov    0x160(%r15),%rax
    438c:	31 d2                	xor    %edx,%edx
    438e:	48 b9 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rcx
    4395:	00 00 00 
    4398:	48 89 c6             	mov    %rax,%rsi
    439b:	4c 01 e6             	add    %r12,%rsi
    439e:	0f 92 c2             	setb   %dl
    43a1:	48 39 ce             	cmp    %rcx,%rsi
    43a4:	0f 87 25 01 00 00    	ja     44cf <mbedtls_gcm_update+0x19f>
    43aa:	48 85 d2             	test   %rdx,%rdx
    43ad:	0f 85 1c 01 00 00    	jne    44cf <mbedtls_gcm_update+0x19f>
    43b3:	48 85 c0             	test   %rax,%rax
    43b6:	0f 84 24 01 00 00    	je     44e0 <mbedtls_gcm_update+0x1b0>
    43bc:	49 89 c5             	mov    %rax,%r13
    43bf:	41 83 e5 0f          	and    $0xf,%r13d
    43c3:	0f 85 4e 01 00 00    	jne    4517 <mbedtls_gcm_update+0x1e7>
    43c9:	4c 01 e0             	add    %r12,%rax
    43cc:	49 89 87 60 01 00 00 	mov    %rax,0x160(%r15)
    43d3:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    43d8:	49 83 fc 0f          	cmp    $0xf,%r12
    43dc:	76 65                	jbe    4443 <mbedtls_gcm_update+0x113>
    43de:	4d 8d af 90 01 00 00 	lea    0x190(%r15),%r13
    43e5:	0f 1f 00             	nopl   (%rax)
    43e8:	b8 10 00 00 00       	mov    $0x10,%eax
    43ed:	48 83 e8 01          	sub    $0x1,%rax
    43f1:	41 80 84 07 80 01 00 	addb   $0x1,0x180(%r15,%rax,1)
    43f8:	00 01 
    43fa:	75 06                	jne    4402 <mbedtls_gcm_update+0xd2>
    43fc:	48 83 f8 0c          	cmp    $0xc,%rax
    4400:	77 eb                	ja     43ed <mbedtls_gcm_update+0xbd>
    4402:	31 d2                	xor    %edx,%edx
    4404:	49 89 e9             	mov    %rbp,%r9
    4407:	49 89 d8             	mov    %rbx,%r8
    440a:	b9 10 00 00 00       	mov    $0x10,%ecx
    440f:	4c 89 f6             	mov    %r14,%rsi
    4412:	4c 89 ff             	mov    %r15,%rdi
    4415:	e8 66 f7 ff ff       	callq  3b80 <gcm_mask>
    441a:	85 c0                	test   %eax,%eax
    441c:	75 75                	jne    4493 <mbedtls_gcm_update+0x163>
    441e:	4c 89 ea             	mov    %r13,%rdx
    4421:	4c 89 ee             	mov    %r13,%rsi
    4424:	4c 89 ff             	mov    %r15,%rdi
    4427:	49 83 ec 10          	sub    $0x10,%r12
    442b:	e8 90 f5 ff ff       	callq  39c0 <gcm_mult>
    4430:	48 83 c3 10          	add    $0x10,%rbx
    4434:	48 83 c5 10          	add    $0x10,%rbp
    4438:	49 83 fc 0f          	cmp    $0xf,%r12
    443c:	77 aa                	ja     43e8 <mbedtls_gcm_update+0xb8>
    443e:	4d 85 e4             	test   %r12,%r12
    4441:	74 41                	je     4484 <mbedtls_gcm_update+0x154>
    4443:	b8 10 00 00 00       	mov    $0x10,%eax
    4448:	48 83 e8 01          	sub    $0x1,%rax
    444c:	41 0f b6 bc 07 80 01 	movzbl 0x180(%r15,%rax,1),%edi
    4453:	00 00 
    4455:	8d 57 01             	lea    0x1(%rdi),%edx
    4458:	41 88 94 07 80 01 00 	mov    %dl,0x180(%r15,%rax,1)
    445f:	00 
    4460:	48 83 f8 0c          	cmp    $0xc,%rax
    4464:	76 04                	jbe    446a <mbedtls_gcm_update+0x13a>
    4466:	84 d2                	test   %dl,%dl
    4468:	74 de                	je     4448 <mbedtls_gcm_update+0x118>
    446a:	31 d2                	xor    %edx,%edx
    446c:	49 89 e9             	mov    %rbp,%r9
    446f:	49 89 d8             	mov    %rbx,%r8
    4472:	4c 89 e1             	mov    %r12,%rcx
    4475:	4c 89 f6             	mov    %r14,%rsi
    4478:	4c 89 ff             	mov    %r15,%rdi
    447b:	e8 00 f7 ff ff       	callq  3b80 <gcm_mask>
    4480:	85 c0                	test   %eax,%eax
    4482:	75 0f                	jne    4493 <mbedtls_gcm_update+0x163>
    4484:	be 10 00 00 00       	mov    $0x10,%esi
    4489:	4c 89 f7             	mov    %r14,%rdi
    448c:	e8 9f 0d 00 00       	callq  5230 <mbedtls_platform_zeroize>
    4491:	31 c0                	xor    %eax,%eax
    4493:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    4498:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    449f:	00 00 
    44a1:	0f 85 fb 00 00 00    	jne    45a2 <mbedtls_gcm_update+0x272>
    44a7:	48 83 c4 38          	add    $0x38,%rsp
    44ab:	5b                   	pop    %rbx
    44ac:	5d                   	pop    %rbp
    44ad:	41 5c                	pop    %r12
    44af:	41 5d                	pop    %r13
    44b1:	41 5e                	pop    %r14
    44b3:	41 5f                	pop    %r15
    44b5:	c3                   	retq   
    44b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    44bd:	00 00 00 
    44c0:	48 89 c8             	mov    %rcx,%rax
    44c3:	48 29 f0             	sub    %rsi,%rax
    44c6:	48 39 d0             	cmp    %rdx,%rax
    44c9:	0f 83 b6 fe ff ff    	jae    4385 <mbedtls_gcm_update+0x55>
    44cf:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
    44d4:	eb bd                	jmp    4493 <mbedtls_gcm_update+0x163>
    44d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    44dd:	00 00 00 
    44e0:	4c 89 e0             	mov    %r12,%rax
    44e3:	41 f6 87 68 01 00 00 	testb  $0xf,0x168(%r15)
    44ea:	0f 
    44eb:	0f 84 db fe ff ff    	je     43cc <mbedtls_gcm_update+0x9c>
    44f1:	49 8d b7 90 01 00 00 	lea    0x190(%r15),%rsi
    44f8:	4c 89 ff             	mov    %r15,%rdi
    44fb:	48 89 f2             	mov    %rsi,%rdx
    44fe:	e8 bd f4 ff ff       	callq  39c0 <gcm_mult>
    4503:	49 8b 87 60 01 00 00 	mov    0x160(%r15),%rax
    450a:	49 89 c5             	mov    %rax,%r13
    450d:	41 83 e5 0f          	and    $0xf,%r13d
    4511:	0f 84 b2 fe ff ff    	je     43c9 <mbedtls_gcm_update+0x99>
    4517:	b9 10 00 00 00       	mov    $0x10,%ecx
    451c:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    4521:	49 89 e9             	mov    %rbp,%r9
    4524:	49 89 d8             	mov    %rbx,%r8
    4527:	4c 29 e9             	sub    %r13,%rcx
    452a:	4c 89 ea             	mov    %r13,%rdx
    452d:	4c 89 f6             	mov    %r14,%rsi
    4530:	4c 89 ff             	mov    %r15,%rdi
    4533:	49 39 cc             	cmp    %rcx,%r12
    4536:	49 0f 46 cc          	cmovbe %r12,%rcx
    453a:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    453f:	e8 3c f6 ff ff       	callq  3b80 <gcm_mask>
    4544:	85 c0                	test   %eax,%eax
    4546:	0f 85 47 ff ff ff    	jne    4493 <mbedtls_gcm_update+0x163>
    454c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4551:	49 01 cd             	add    %rcx,%r13
    4554:	49 83 fd 10          	cmp    $0x10,%r13
    4558:	74 25                	je     457f <mbedtls_gcm_update+0x24f>
    455a:	4c 89 e0             	mov    %r12,%rax
    455d:	4d 01 a7 60 01 00 00 	add    %r12,0x160(%r15)
    4564:	48 01 cb             	add    %rcx,%rbx
    4567:	48 01 cd             	add    %rcx,%rbp
    456a:	48 29 c8             	sub    %rcx,%rax
    456d:	49 89 c4             	mov    %rax,%r12
    4570:	48 83 f8 0f          	cmp    $0xf,%rax
    4574:	0f 87 64 fe ff ff    	ja     43de <mbedtls_gcm_update+0xae>
    457a:	e9 bf fe ff ff       	jmpq   443e <mbedtls_gcm_update+0x10e>
    457f:	49 8d b7 90 01 00 00 	lea    0x190(%r15),%rsi
    4586:	4c 89 ff             	mov    %r15,%rdi
    4589:	48 89 f2             	mov    %rsi,%rdx
    458c:	e8 2f f4 ff ff       	callq  39c0 <gcm_mult>
    4591:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4596:	eb c2                	jmp    455a <mbedtls_gcm_update+0x22a>
    4598:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    459d:	e9 f1 fe ff ff       	jmpq   4493 <mbedtls_gcm_update+0x163>
    45a2:	e8 b9 ec ff ff       	callq  3260 <__stack_chk_fail@plt>
    45a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    45ae:	00 00 

00000000000045b0 <mbedtls_gcm_finish>:
    45b0:	f3 0f 1e fa          	endbr64 
    45b4:	41 57                	push   %r15
    45b6:	41 56                	push   %r14
    45b8:	41 55                	push   %r13
    45ba:	4d 89 cd             	mov    %r9,%r13
    45bd:	41 54                	push   %r12
    45bf:	4d 8d 61 fc          	lea    -0x4(%r9),%r12
    45c3:	55                   	push   %rbp
    45c4:	4c 89 c5             	mov    %r8,%rbp
    45c7:	53                   	push   %rbx
    45c8:	48 89 fb             	mov    %rdi,%rbx
    45cb:	48 83 ec 28          	sub    $0x28,%rsp
    45cf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    45d6:	00 00 
    45d8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    45dd:	31 c0                	xor    %eax,%eax
    45df:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    45e6:	48 8b 87 60 01 00 00 	mov    0x160(%rdi),%rax
    45ed:	48 8b 97 68 01 00 00 	mov    0x168(%rdi),%rdx
    45f4:	4c 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%r14
    45fb:	00 
    45fc:	4c 8d 3c d5 00 00 00 	lea    0x0(,%rdx,8),%r15
    4603:	00 
    4604:	48 85 c0             	test   %rax,%rax
    4607:	75 66                	jne    466f <mbedtls_gcm_finish+0xbf>
    4609:	83 e2 0f             	and    $0xf,%edx
    460c:	75 52                	jne    4660 <mbedtls_gcm_finish+0xb0>
    460e:	49 83 fc 0c          	cmp    $0xc,%r12
    4612:	0f 87 48 01 00 00    	ja     4760 <mbedtls_gcm_finish+0x1b0>
    4618:	48 8d b3 70 01 00 00 	lea    0x170(%rbx),%rsi
    461f:	4c 89 ea             	mov    %r13,%rdx
    4622:	48 89 ef             	mov    %rbp,%rdi
    4625:	e8 e6 ec ff ff       	callq  3310 <memcpy@plt>
    462a:	4c 89 f0             	mov    %r14,%rax
    462d:	4c 09 f8             	or     %r15,%rax
    4630:	75 6e                	jne    46a0 <mbedtls_gcm_finish+0xf0>
    4632:	31 c0                	xor    %eax,%eax
    4634:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    4639:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    4640:	00 00 
    4642:	0f 85 22 01 00 00    	jne    476a <mbedtls_gcm_finish+0x1ba>
    4648:	48 83 c4 28          	add    $0x28,%rsp
    464c:	5b                   	pop    %rbx
    464d:	5d                   	pop    %rbp
    464e:	41 5c                	pop    %r12
    4650:	41 5d                	pop    %r13
    4652:	41 5e                	pop    %r14
    4654:	41 5f                	pop    %r15
    4656:	c3                   	retq   
    4657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    465e:	00 00 
    4660:	48 8d b7 90 01 00 00 	lea    0x190(%rdi),%rsi
    4667:	48 89 f2             	mov    %rsi,%rdx
    466a:	e8 51 f3 ff ff       	callq  39c0 <gcm_mult>
    466f:	49 83 fc 0c          	cmp    $0xc,%r12
    4673:	0f 87 e7 00 00 00    	ja     4760 <mbedtls_gcm_finish+0x1b0>
    4679:	f6 83 60 01 00 00 0f 	testb  $0xf,0x160(%rbx)
    4680:	74 96                	je     4618 <mbedtls_gcm_finish+0x68>
    4682:	48 8d b3 90 01 00 00 	lea    0x190(%rbx),%rsi
    4689:	48 89 df             	mov    %rbx,%rdi
    468c:	48 89 f2             	mov    %rsi,%rdx
    468f:	e8 2c f3 ff ff       	callq  39c0 <gcm_mult>
    4694:	eb 82                	jmp    4618 <mbedtls_gcm_finish+0x68>
    4696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    469d:	00 00 00 
    46a0:	4c 89 fa             	mov    %r15,%rdx
    46a3:	4c 89 f0             	mov    %r14,%rax
    46a6:	41 0f cf             	bswap  %r15d
    46a9:	41 0f ce             	bswap  %r14d
    46ac:	48 c1 ea 20          	shr    $0x20,%rdx
    46b0:	48 c1 e8 20          	shr    $0x20,%rax
    46b4:	44 89 7c 24 04       	mov    %r15d,0x4(%rsp)
    46b9:	48 8d b3 90 01 00 00 	lea    0x190(%rbx),%rsi
    46c0:	0f c8                	bswap  %eax
    46c2:	0f ca                	bswap  %edx
    46c4:	89 44 24 08          	mov    %eax,0x8(%rsp)
    46c8:	b8 04 00 00 00       	mov    $0x4,%eax
    46cd:	89 14 24             	mov    %edx,(%rsp)
    46d0:	44 89 74 24 0c       	mov    %r14d,0xc(%rsp)
    46d5:	eb 10                	jmp    46e7 <mbedtls_gcm_finish+0x137>
    46d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    46de:	00 00 
    46e0:	8b 14 04             	mov    (%rsp,%rax,1),%edx
    46e3:	48 83 c0 04          	add    $0x4,%rax
    46e7:	31 94 03 8c 01 00 00 	xor    %edx,0x18c(%rbx,%rax,1)
    46ee:	48 83 f8 10          	cmp    $0x10,%rax
    46f2:	75 ec                	jne    46e0 <mbedtls_gcm_finish+0x130>
    46f4:	48 89 f2             	mov    %rsi,%rdx
    46f7:	48 89 df             	mov    %rbx,%rdi
    46fa:	e8 c1 f2 ff ff       	callq  39c0 <gcm_mult>
    46ff:	b8 04 00 00 00       	mov    $0x4,%eax
    4704:	0f 1f 40 00          	nopl   0x0(%rax)
    4708:	8b 94 03 8c 01 00 00 	mov    0x18c(%rbx,%rax,1),%edx
    470f:	31 54 05 fc          	xor    %edx,-0x4(%rbp,%rax,1)
    4713:	48 83 c0 04          	add    $0x4,%rax
    4717:	49 39 c5             	cmp    %rax,%r13
    471a:	73 ec                	jae    4708 <mbedtls_gcm_finish+0x158>
    471c:	49 83 e4 fc          	and    $0xfffffffffffffffc,%r12
    4720:	49 8d 55 01          	lea    0x1(%r13),%rdx
    4724:	48 83 fa 04          	cmp    $0x4,%rdx
    4728:	49 8d 44 24 04       	lea    0x4(%r12),%rax
    472d:	ba 04 00 00 00       	mov    $0x4,%edx
    4732:	48 0f 46 c2          	cmovbe %rdx,%rax
    4736:	49 39 c5             	cmp    %rax,%r13
    4739:	0f 86 f3 fe ff ff    	jbe    4632 <mbedtls_gcm_finish+0x82>
    473f:	0f b6 94 03 90 01 00 	movzbl 0x190(%rbx,%rax,1),%edx
    4746:	00 
    4747:	30 54 05 00          	xor    %dl,0x0(%rbp,%rax,1)
    474b:	48 83 c0 01          	add    $0x1,%rax
    474f:	49 39 c5             	cmp    %rax,%r13
    4752:	75 eb                	jne    473f <mbedtls_gcm_finish+0x18f>
    4754:	e9 d9 fe ff ff       	jmpq   4632 <mbedtls_gcm_finish+0x82>
    4759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4760:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
    4765:	e9 ca fe ff ff       	jmpq   4634 <mbedtls_gcm_finish+0x84>
    476a:	e8 f1 ea ff ff       	callq  3260 <__stack_chk_fail@plt>
    476f:	90                   	nop

0000000000004770 <mbedtls_gcm_crypt_and_tag>:
    4770:	f3 0f 1e fa          	endbr64 
    4774:	41 57                	push   %r15
    4776:	49 89 ff             	mov    %rdi,%r15
    4779:	41 56                	push   %r14
    477b:	41 55                	push   %r13
    477d:	41 54                	push   %r12
    477f:	49 89 d4             	mov    %rdx,%r12
    4782:	48 89 ca             	mov    %rcx,%rdx
    4785:	4c 89 c1             	mov    %r8,%rcx
    4788:	55                   	push   %rbp
    4789:	4c 89 cd             	mov    %r9,%rbp
    478c:	53                   	push   %rbx
    478d:	48 83 ec 18          	sub    $0x18,%rsp
    4791:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4798:	00 00 
    479a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    479f:	31 c0                	xor    %eax,%eax
    47a1:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
    47a6:	4c 8b 74 24 60       	mov    0x60(%rsp),%r14
    47ab:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    47b0:	e8 0b f8 ff ff       	callq  3fc0 <mbedtls_gcm_starts>
    47b5:	85 c0                	test   %eax,%eax
    47b7:	74 27                	je     47e0 <mbedtls_gcm_crypt_and_tag+0x70>
    47b9:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    47be:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    47c5:	00 00 
    47c7:	75 62                	jne    482b <mbedtls_gcm_crypt_and_tag+0xbb>
    47c9:	48 83 c4 18          	add    $0x18,%rsp
    47cd:	5b                   	pop    %rbx
    47ce:	5d                   	pop    %rbp
    47cf:	41 5c                	pop    %r12
    47d1:	41 5d                	pop    %r13
    47d3:	41 5e                	pop    %r14
    47d5:	41 5f                	pop    %r15
    47d7:	c3                   	retq   
    47d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    47df:	00 
    47e0:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    47e5:	48 89 ee             	mov    %rbp,%rsi
    47e8:	4c 89 ff             	mov    %r15,%rdi
    47eb:	e8 90 f9 ff ff       	callq  4180 <mbedtls_gcm_update_ad>
    47f0:	85 c0                	test   %eax,%eax
    47f2:	75 c5                	jne    47b9 <mbedtls_gcm_crypt_and_tag+0x49>
    47f4:	48 89 e5             	mov    %rsp,%rbp
    47f7:	4d 89 e0             	mov    %r12,%r8
    47fa:	4c 89 f1             	mov    %r14,%rcx
    47fd:	4c 89 e2             	mov    %r12,%rdx
    4800:	49 89 e9             	mov    %rbp,%r9
    4803:	4c 89 ee             	mov    %r13,%rsi
    4806:	4c 89 ff             	mov    %r15,%rdi
    4809:	e8 22 fb ff ff       	callq  4330 <mbedtls_gcm_update>
    480e:	85 c0                	test   %eax,%eax
    4810:	75 a7                	jne    47b9 <mbedtls_gcm_crypt_and_tag+0x49>
    4812:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
    4817:	49 89 d8             	mov    %rbx,%r8
    481a:	48 89 e9             	mov    %rbp,%rcx
    481d:	31 d2                	xor    %edx,%edx
    481f:	31 f6                	xor    %esi,%esi
    4821:	4c 89 ff             	mov    %r15,%rdi
    4824:	e8 87 fd ff ff       	callq  45b0 <mbedtls_gcm_finish>
    4829:	eb 8e                	jmp    47b9 <mbedtls_gcm_crypt_and_tag+0x49>
    482b:	e8 30 ea ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000004830 <mbedtls_gcm_auth_decrypt>:
    4830:	f3 0f 1e fa          	endbr64 
    4834:	41 56                	push   %r14
    4836:	41 55                	push   %r13
    4838:	49 89 f5             	mov    %rsi,%r13
    483b:	41 54                	push   %r12
    483d:	55                   	push   %rbp
    483e:	53                   	push   %rbx
    483f:	48 83 ec 28          	sub    $0x28,%rsp
    4843:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
    4848:	4c 8b 74 24 70       	mov    0x70(%rsp),%r14
    484d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    4852:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4859:	00 00 
    485b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4860:	31 c0                	xor    %eax,%eax
    4862:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
    4867:	55                   	push   %rbp
    4868:	53                   	push   %rbx
    4869:	41 56                	push   %r14
    486b:	ff b4 24 80 00 00 00 	pushq  0x80(%rsp)
    4872:	41 51                	push   %r9
    4874:	4d 89 c1             	mov    %r8,%r9
    4877:	49 89 c8             	mov    %rcx,%r8
    487a:	48 89 d1             	mov    %rdx,%rcx
    487d:	48 89 f2             	mov    %rsi,%rdx
    4880:	31 f6                	xor    %esi,%esi
    4882:	e8 e9 fe ff ff       	callq  4770 <mbedtls_gcm_crypt_and_tag>
    4887:	48 83 c4 30          	add    $0x30,%rsp
    488b:	85 c0                	test   %eax,%eax
    488d:	75 2c                	jne    48bb <mbedtls_gcm_auth_decrypt+0x8b>
    488f:	48 85 db             	test   %rbx,%rbx
    4892:	74 27                	je     48bb <mbedtls_gcm_auth_decrypt+0x8b>
    4894:	31 c9                	xor    %ecx,%ecx
    4896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    489d:	00 00 00 
    48a0:	41 0f b6 14 0c       	movzbl (%r12,%rcx,1),%edx
    48a5:	32 54 0d 00          	xor    0x0(%rbp,%rcx,1),%dl
    48a9:	48 83 c1 01          	add    $0x1,%rcx
    48ad:	0f b6 d2             	movzbl %dl,%edx
    48b0:	09 d0                	or     %edx,%eax
    48b2:	48 39 cb             	cmp    %rcx,%rbx
    48b5:	75 e9                	jne    48a0 <mbedtls_gcm_auth_decrypt+0x70>
    48b7:	85 c0                	test   %eax,%eax
    48b9:	75 1d                	jne    48d8 <mbedtls_gcm_auth_decrypt+0xa8>
    48bb:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    48c0:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    48c7:	00 00 
    48c9:	75 1f                	jne    48ea <mbedtls_gcm_auth_decrypt+0xba>
    48cb:	48 83 c4 20          	add    $0x20,%rsp
    48cf:	5b                   	pop    %rbx
    48d0:	5d                   	pop    %rbp
    48d1:	41 5c                	pop    %r12
    48d3:	41 5d                	pop    %r13
    48d5:	41 5e                	pop    %r14
    48d7:	c3                   	retq   
    48d8:	4c 89 ee             	mov    %r13,%rsi
    48db:	4c 89 f7             	mov    %r14,%rdi
    48de:	e8 4d 09 00 00       	callq  5230 <mbedtls_platform_zeroize>
    48e3:	b8 ee ff ff ff       	mov    $0xffffffee,%eax
    48e8:	eb d1                	jmp    48bb <mbedtls_gcm_auth_decrypt+0x8b>
    48ea:	e8 71 e9 ff ff       	callq  3260 <__stack_chk_fail@plt>
    48ef:	90                   	nop

00000000000048f0 <mbedtls_gcm_free>:
    48f0:	f3 0f 1e fa          	endbr64 
    48f4:	48 85 ff             	test   %rdi,%rdi
    48f7:	74 07                	je     4900 <mbedtls_gcm_free+0x10>
    48f9:	e9 62 f2 ff ff       	jmpq   3b60 <mbedtls_gcm_free.part.0>
    48fe:	66 90                	xchg   %ax,%ax
    4900:	c3                   	retq   
    4901:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4908:	00 00 00 00 
    490c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004910 <mbedtls_gcm_self_test>:
    4910:	f3 0f 1e fa          	endbr64 
    4914:	41 57                	push   %r15
    4916:	89 f8                	mov    %edi,%eax
    4918:	41 56                	push   %r14
    491a:	41 55                	push   %r13
    491c:	41 54                	push   %r12
    491e:	55                   	push   %rbp
    491f:	53                   	push   %rbx
    4920:	48 81 ec 98 02 00 00 	sub    $0x298,%rsp
    4927:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    492b:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
    4932:	00 00 
    4934:	48 89 bc 24 88 02 00 	mov    %rdi,0x288(%rsp)
    493b:	00 
    493c:	31 ff                	xor    %edi,%edi
    493e:	85 c0                	test   %eax,%eax
    4940:	0f 85 32 07 00 00    	jne    5078 <mbedtls_gcm_self_test+0x768>
    4946:	48 8d 05 13 c8 01 00 	lea    0x1c813(%rip),%rax        # 21160 <tag_test_data>
    494d:	c7 44 24 20 80 00 00 	movl   $0x80,0x20(%rsp)
    4954:	00 
    4955:	4c 8d ac 24 80 00 00 	lea    0x80(%rsp),%r13
    495c:	00 
    495d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    4962:	48 8d 05 17 c9 01 00 	lea    0x1c917(%rip),%rax        # 21280 <ct_test_data>
    4969:	4d 89 ef             	mov    %r13,%r15
    496c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    4971:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    4976:	81 7c 24 20 c0 00 00 	cmpl   $0xc0,0x20(%rsp)
    497d:	00 
    497e:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    4985:	00 00 
    4987:	0f 94 44 24 6f       	sete   0x6f(%rsp)
    498c:	45 31 e4             	xor    %r12d,%r12d
    498f:	48 89 04 24          	mov    %rax,(%rsp)
    4993:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    4998:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    499d:	8b 44 24 08          	mov    0x8(%rsp),%eax
    49a1:	44 8b 4c 24 24       	mov    0x24(%rsp),%r9d
    49a6:	b9 35 00 00 00       	mov    $0x35,%ecx
    49ab:	4c 89 ff             	mov    %r15,%rdi
    49ae:	89 44 24 68          	mov    %eax,0x68(%rsp)
    49b2:	31 c0                	xor    %eax,%eax
    49b4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    49b7:	45 85 c9             	test   %r9d,%r9d
    49ba:	0f 85 80 05 00 00    	jne    4f40 <mbedtls_gcm_self_test+0x630>
    49c0:	49 c1 e4 05          	shl    $0x5,%r12
    49c4:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    49c8:	be 02 00 00 00       	mov    $0x2,%esi
    49cd:	4c 89 ff             	mov    %r15,%rdi
    49d0:	48 8d 05 a9 d2 01 00 	lea    0x1d2a9(%rip),%rax        # 21c80 <key_test_data>
    49d7:	4c 01 e0             	add    %r12,%rax
    49da:	48 89 c2             	mov    %rax,%rdx
    49dd:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    49e2:	e8 c9 f3 ff ff       	callq  3db0 <mbedtls_gcm_setkey>
    49e7:	41 89 c6             	mov    %eax,%r14d
    49ea:	83 f8 8e             	cmp    $0xffffff8e,%eax
    49ed:	75 0b                	jne    49fa <mbedtls_gcm_self_test+0xea>
    49ef:	80 7c 24 6f 00       	cmpb   $0x0,0x6f(%rsp)
    49f4:	0f 85 3e 07 00 00    	jne    5138 <mbedtls_gcm_self_test+0x828>
    49fa:	45 85 f6             	test   %r14d,%r14d
    49fd:	0f 85 e5 06 00 00    	jne    50e8 <mbedtls_gcm_self_test+0x7d8>
    4a03:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    4a08:	48 8d 05 31 d3 01 00 	lea    0x1d331(%rip),%rax        # 21d40 <key_index_test_data>
    4a0f:	48 83 ec 08          	sub    $0x8,%rsp
    4a13:	48 8d 35 e6 cc 01 00 	lea    0x1cce6(%rip),%rsi        # 21700 <pt_test_data>
    4a1a:	48 8d 15 9f ce 01 00 	lea    0x1ce9f(%rip),%rdx        # 218c0 <additional_test_data>
    4a21:	48 63 04 98          	movslq (%rax,%rbx,4),%rax
    4a25:	48 c1 e0 06          	shl    $0x6,%rax
    4a29:	48 01 c6             	add    %rax,%rsi
    4a2c:	48 8d 05 2d d0 01 00 	lea    0x1d02d(%rip),%rax        # 21a60 <add_len_test_data>
    4a33:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    4a37:	48 8d 05 02 d0 01 00 	lea    0x1d002(%rip),%rax        # 21a40 <add_index_test_data>
    4a3e:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    4a43:	48 63 04 98          	movslq (%rax,%rbx,4),%rax
    4a47:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
    4a4c:	48 c1 e0 06          	shl    $0x6,%rax
    4a50:	4c 8d 0c 10          	lea    (%rax,%rdx,1),%r9
    4a54:	48 8d 05 e5 d1 01 00 	lea    0x1d1e5(%rip),%rax        # 21c40 <iv_len_test_data>
    4a5b:	4c 8b 04 d8          	mov    (%rax,%rbx,8),%r8
    4a5f:	48 8d 05 ba d1 01 00 	lea    0x1d1ba(%rip),%rax        # 21c20 <iv_index_test_data>
    4a66:	48 8d 15 33 d0 01 00 	lea    0x1d033(%rip),%rdx        # 21aa0 <iv_test_data>
    4a6d:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
    4a72:	48 63 04 98          	movslq (%rax,%rbx,4),%rax
    4a76:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    4a7b:	48 c1 e0 06          	shl    $0x6,%rax
    4a7f:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    4a83:	48 8d 05 f6 cd 01 00 	lea    0x1cdf6(%rip),%rax        # 21880 <pt_len_test_data>
    4a8a:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    4a8f:	4c 8b 24 d8          	mov    (%rax,%rbx,8),%r12
    4a93:	48 8d 9c 24 38 02 00 	lea    0x238(%rsp),%rbx
    4a9a:	00 
    4a9b:	53                   	push   %rbx
    4a9c:	6a 10                	pushq  $0x10
    4a9e:	4c 89 e2             	mov    %r12,%rdx
    4aa1:	4c 8d ac 24 58 02 00 	lea    0x258(%rsp),%r13
    4aa8:	00 
    4aa9:	41 55                	push   %r13
    4aab:	56                   	push   %rsi
    4aac:	be 01 00 00 00       	mov    $0x1,%esi
    4ab1:	57                   	push   %rdi
    4ab2:	4c 89 ff             	mov    %r15,%rdi
    4ab5:	e8 b6 fc ff ff       	callq  4770 <mbedtls_gcm_crypt_and_tag>
    4aba:	48 83 c4 30          	add    $0x30,%rsp
    4abe:	41 89 c6             	mov    %eax,%r14d
    4ac1:	85 c0                	test   %eax,%eax
    4ac3:	0f 85 1f 06 00 00    	jne    50e8 <mbedtls_gcm_self_test+0x7d8>
    4ac9:	48 8b 34 24          	mov    (%rsp),%rsi
    4acd:	4c 89 e2             	mov    %r12,%rdx
    4ad0:	4c 89 ef             	mov    %r13,%rdi
    4ad3:	e8 c8 e7 ff ff       	callq  32a0 <memcmp@plt>
    4ad8:	85 c0                	test   %eax,%eax
    4ada:	75 18                	jne    4af4 <mbedtls_gcm_self_test+0x1e4>
    4adc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    4ae1:	48 8b 03             	mov    (%rbx),%rax
    4ae4:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    4ae8:	48 33 06             	xor    (%rsi),%rax
    4aeb:	48 33 6e 08          	xor    0x8(%rsi),%rbp
    4aef:	48 09 c5             	or     %rax,%rbp
    4af2:	74 4c                	je     4b40 <mbedtls_gcm_self_test+0x230>
    4af4:	4d 89 fd             	mov    %r15,%r13
    4af7:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    4afd:	8b 44 24 24          	mov    0x24(%rsp),%eax
    4b01:	85 c0                	test   %eax,%eax
    4b03:	0f 85 f1 05 00 00    	jne    50fa <mbedtls_gcm_self_test+0x7ea>
    4b09:	4c 89 ef             	mov    %r13,%rdi
    4b0c:	e8 4f f0 ff ff       	callq  3b60 <mbedtls_gcm_free.part.0>
    4b11:	48 8b 84 24 88 02 00 	mov    0x288(%rsp),%rax
    4b18:	00 
    4b19:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4b20:	00 00 
    4b22:	0f 85 35 06 00 00    	jne    515d <mbedtls_gcm_self_test+0x84d>
    4b28:	48 81 c4 98 02 00 00 	add    $0x298,%rsp
    4b2f:	44 89 f8             	mov    %r15d,%eax
    4b32:	5b                   	pop    %rbx
    4b33:	5d                   	pop    %rbp
    4b34:	41 5c                	pop    %r12
    4b36:	41 5d                	pop    %r13
    4b38:	41 5e                	pop    %r14
    4b3a:	41 5f                	pop    %r15
    4b3c:	c3                   	retq   
    4b3d:	0f 1f 00             	nopl   (%rax)
    4b40:	4c 89 ff             	mov    %r15,%rdi
    4b43:	e8 18 f0 ff ff       	callq  3b60 <mbedtls_gcm_free.part.0>
    4b48:	44 8b 44 24 24       	mov    0x24(%rsp),%r8d
    4b4d:	45 85 c0             	test   %r8d,%r8d
    4b50:	0f 85 4a 04 00 00    	jne    4fa0 <mbedtls_gcm_self_test+0x690>
    4b56:	b9 35 00 00 00       	mov    $0x35,%ecx
    4b5b:	4c 89 ff             	mov    %r15,%rdi
    4b5e:	48 89 e8             	mov    %rbp,%rax
    4b61:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4b64:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    4b68:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4b6d:	be 02 00 00 00       	mov    $0x2,%esi
    4b72:	4c 89 ff             	mov    %r15,%rdi
    4b75:	e8 36 f2 ff ff       	callq  3db0 <mbedtls_gcm_setkey>
    4b7a:	41 89 c6             	mov    %eax,%r14d
    4b7d:	85 c0                	test   %eax,%eax
    4b7f:	0f 85 63 05 00 00    	jne    50e8 <mbedtls_gcm_self_test+0x7d8>
    4b85:	48 83 ec 08          	sub    $0x8,%rsp
    4b89:	4c 89 e2             	mov    %r12,%rdx
    4b8c:	31 f6                	xor    %esi,%esi
    4b8e:	4c 89 ff             	mov    %r15,%rdi
    4b91:	53                   	push   %rbx
    4b92:	6a 10                	pushq  $0x10
    4b94:	41 55                	push   %r13
    4b96:	ff 74 24 20          	pushq  0x20(%rsp)
    4b9a:	ff 74 24 70          	pushq  0x70(%rsp)
    4b9e:	4c 8b 8c 24 80 00 00 	mov    0x80(%rsp),%r9
    4ba5:	00 
    4ba6:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
    4bab:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    4bb0:	e8 bb fb ff ff       	callq  4770 <mbedtls_gcm_crypt_and_tag>
    4bb5:	48 83 c4 30          	add    $0x30,%rsp
    4bb9:	41 89 c6             	mov    %eax,%r14d
    4bbc:	85 c0                	test   %eax,%eax
    4bbe:	0f 85 24 05 00 00    	jne    50e8 <mbedtls_gcm_self_test+0x7d8>
    4bc4:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4bc9:	4c 89 e2             	mov    %r12,%rdx
    4bcc:	4c 89 ef             	mov    %r13,%rdi
    4bcf:	e8 cc e6 ff ff       	callq  32a0 <memcmp@plt>
    4bd4:	85 c0                	test   %eax,%eax
    4bd6:	0f 85 18 ff ff ff    	jne    4af4 <mbedtls_gcm_self_test+0x1e4>
    4bdc:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    4be1:	48 8b 03             	mov    (%rbx),%rax
    4be4:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    4be8:	48 33 01             	xor    (%rcx),%rax
    4beb:	48 33 69 08          	xor    0x8(%rcx),%rbp
    4bef:	48 09 c5             	or     %rax,%rbp
    4bf2:	0f 85 fc fe ff ff    	jne    4af4 <mbedtls_gcm_self_test+0x1e4>
    4bf8:	4c 89 ff             	mov    %r15,%rdi
    4bfb:	e8 60 ef ff ff       	callq  3b60 <mbedtls_gcm_free.part.0>
    4c00:	8b 7c 24 24          	mov    0x24(%rsp),%edi
    4c04:	85 ff                	test   %edi,%edi
    4c06:	0f 85 dc 03 00 00    	jne    4fe8 <mbedtls_gcm_self_test+0x6d8>
    4c0c:	b9 35 00 00 00       	mov    $0x35,%ecx
    4c11:	4c 89 ff             	mov    %r15,%rdi
    4c14:	48 89 e8             	mov    %rbp,%rax
    4c17:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4c1a:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    4c1e:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4c23:	be 02 00 00 00       	mov    $0x2,%esi
    4c28:	4c 89 ff             	mov    %r15,%rdi
    4c2b:	e8 80 f1 ff ff       	callq  3db0 <mbedtls_gcm_setkey>
    4c30:	41 89 c6             	mov    %eax,%r14d
    4c33:	85 c0                	test   %eax,%eax
    4c35:	0f 85 ad 04 00 00    	jne    50e8 <mbedtls_gcm_self_test+0x7d8>
    4c3b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    4c40:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    4c45:	be 01 00 00 00       	mov    $0x1,%esi
    4c4a:	4c 89 ff             	mov    %r15,%rdi
    4c4d:	e8 6e f3 ff ff       	callq  3fc0 <mbedtls_gcm_starts>
    4c52:	41 89 c6             	mov    %eax,%r14d
    4c55:	85 c0                	test   %eax,%eax
    4c57:	0f 85 8b 04 00 00    	jne    50e8 <mbedtls_gcm_self_test+0x7d8>
    4c5d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    4c62:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    4c67:	4c 89 ff             	mov    %r15,%rdi
    4c6a:	e8 11 f5 ff ff       	callq  4180 <mbedtls_gcm_update_ad>
    4c6f:	41 89 c6             	mov    %eax,%r14d
    4c72:	85 c0                	test   %eax,%eax
    4c74:	0f 85 6e 04 00 00    	jne    50e8 <mbedtls_gcm_self_test+0x7d8>
    4c7a:	49 83 fc 20          	cmp    $0x20,%r12
    4c7e:	0f 86 6c 02 00 00    	jbe    4ef0 <mbedtls_gcm_self_test+0x5e0>
    4c84:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
    4c89:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4c8e:	4c 89 e9             	mov    %r13,%rcx
    4c91:	4c 89 ff             	mov    %r15,%rdi
    4c94:	49 89 c1             	mov    %rax,%r9
    4c97:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    4c9d:	ba 20 00 00 00       	mov    $0x20,%edx
    4ca2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4ca7:	49 8d 6c 24 e0       	lea    -0x20(%r12),%rbp
    4cac:	e8 7f f6 ff ff       	callq  4330 <mbedtls_gcm_update>
    4cb1:	85 c0                	test   %eax,%eax
    4cb3:	0f 85 6f 04 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4cb9:	48 83 7c 24 78 20    	cmpq   $0x20,0x78(%rsp)
    4cbf:	0f 85 6b 02 00 00    	jne    4f30 <mbedtls_gcm_self_test+0x620>
    4cc5:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4cca:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4ccf:	48 89 ea             	mov    %rbp,%rdx
    4cd2:	4c 89 ff             	mov    %r15,%rdi
    4cd5:	48 8d 8c 24 60 02 00 	lea    0x260(%rsp),%rcx
    4cdc:	00 
    4cdd:	41 b8 20 00 00 00    	mov    $0x20,%r8d
    4ce3:	48 83 c6 20          	add    $0x20,%rsi
    4ce7:	e8 44 f6 ff ff       	callq  4330 <mbedtls_gcm_update>
    4cec:	85 c0                	test   %eax,%eax
    4cee:	0f 85 34 04 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4cf4:	48 39 6c 24 78       	cmp    %rbp,0x78(%rsp)
    4cf9:	0f 85 31 02 00 00    	jne    4f30 <mbedtls_gcm_self_test+0x620>
    4cff:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    4d04:	31 d2                	xor    %edx,%edx
    4d06:	31 f6                	xor    %esi,%esi
    4d08:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    4d0e:	49 89 d8             	mov    %rbx,%r8
    4d11:	4c 89 ff             	mov    %r15,%rdi
    4d14:	e8 97 f8 ff ff       	callq  45b0 <mbedtls_gcm_finish>
    4d19:	85 c0                	test   %eax,%eax
    4d1b:	0f 85 07 04 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4d21:	48 8b 34 24          	mov    (%rsp),%rsi
    4d25:	4c 89 e2             	mov    %r12,%rdx
    4d28:	4c 89 ef             	mov    %r13,%rdi
    4d2b:	e8 70 e5 ff ff       	callq  32a0 <memcmp@plt>
    4d30:	85 c0                	test   %eax,%eax
    4d32:	0f 85 bc fd ff ff    	jne    4af4 <mbedtls_gcm_self_test+0x1e4>
    4d38:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    4d3d:	48 8b 03             	mov    (%rbx),%rax
    4d40:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    4d44:	48 33 02             	xor    (%rdx),%rax
    4d47:	48 33 6a 08          	xor    0x8(%rdx),%rbp
    4d4b:	48 09 c5             	or     %rax,%rbp
    4d4e:	0f 85 a0 fd ff ff    	jne    4af4 <mbedtls_gcm_self_test+0x1e4>
    4d54:	4c 89 ff             	mov    %r15,%rdi
    4d57:	e8 04 ee ff ff       	callq  3b60 <mbedtls_gcm_free.part.0>
    4d5c:	8b 74 24 24          	mov    0x24(%rsp),%esi
    4d60:	85 f6                	test   %esi,%esi
    4d62:	0f 85 c8 02 00 00    	jne    5030 <mbedtls_gcm_self_test+0x720>
    4d68:	b9 35 00 00 00       	mov    $0x35,%ecx
    4d6d:	4c 89 ff             	mov    %r15,%rdi
    4d70:	48 89 e8             	mov    %rbp,%rax
    4d73:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4d76:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    4d7a:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4d7f:	be 02 00 00 00       	mov    $0x2,%esi
    4d84:	4c 89 ff             	mov    %r15,%rdi
    4d87:	e8 24 f0 ff ff       	callq  3db0 <mbedtls_gcm_setkey>
    4d8c:	85 c0                	test   %eax,%eax
    4d8e:	0f 85 94 03 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4d94:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    4d99:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    4d9e:	31 f6                	xor    %esi,%esi
    4da0:	4c 89 ff             	mov    %r15,%rdi
    4da3:	e8 18 f2 ff ff       	callq  3fc0 <mbedtls_gcm_starts>
    4da8:	85 c0                	test   %eax,%eax
    4daa:	0f 85 78 03 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4db0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    4db5:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    4dba:	4c 89 ff             	mov    %r15,%rdi
    4dbd:	e8 be f3 ff ff       	callq  4180 <mbedtls_gcm_update_ad>
    4dc2:	85 c0                	test   %eax,%eax
    4dc4:	0f 85 5e 03 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4dca:	49 83 fc 20          	cmp    $0x20,%r12
    4dce:	0f 86 94 01 00 00    	jbe    4f68 <mbedtls_gcm_self_test+0x658>
    4dd4:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4dd9:	48 8b 34 24          	mov    (%rsp),%rsi
    4ddd:	4c 89 e9             	mov    %r13,%rcx
    4de0:	4c 89 ff             	mov    %r15,%rdi
    4de3:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    4de9:	ba 20 00 00 00       	mov    $0x20,%edx
    4dee:	49 8d 6c 24 e0       	lea    -0x20(%r12),%rbp
    4df3:	e8 38 f5 ff ff       	callq  4330 <mbedtls_gcm_update>
    4df8:	85 c0                	test   %eax,%eax
    4dfa:	0f 85 28 03 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4e00:	48 83 7c 24 78 20    	cmpq   $0x20,0x78(%rsp)
    4e06:	0f 85 24 01 00 00    	jne    4f30 <mbedtls_gcm_self_test+0x620>
    4e0c:	48 8b 04 24          	mov    (%rsp),%rax
    4e10:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4e15:	48 89 ea             	mov    %rbp,%rdx
    4e18:	4c 89 ff             	mov    %r15,%rdi
    4e1b:	48 8d 8c 24 60 02 00 	lea    0x260(%rsp),%rcx
    4e22:	00 
    4e23:	41 b8 20 00 00 00    	mov    $0x20,%r8d
    4e29:	48 8d 70 20          	lea    0x20(%rax),%rsi
    4e2d:	e8 fe f4 ff ff       	callq  4330 <mbedtls_gcm_update>
    4e32:	85 c0                	test   %eax,%eax
    4e34:	0f 85 ee 02 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4e3a:	48 39 6c 24 78       	cmp    %rbp,0x78(%rsp)
    4e3f:	0f 85 eb 00 00 00    	jne    4f30 <mbedtls_gcm_self_test+0x620>
    4e45:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    4e4a:	31 d2                	xor    %edx,%edx
    4e4c:	31 f6                	xor    %esi,%esi
    4e4e:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    4e54:	49 89 d8             	mov    %rbx,%r8
    4e57:	4c 89 ff             	mov    %r15,%rdi
    4e5a:	e8 51 f7 ff ff       	callq  45b0 <mbedtls_gcm_finish>
    4e5f:	85 c0                	test   %eax,%eax
    4e61:	0f 85 c1 02 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4e67:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4e6c:	4c 89 e2             	mov    %r12,%rdx
    4e6f:	4c 89 ef             	mov    %r13,%rdi
    4e72:	e8 29 e4 ff ff       	callq  32a0 <memcmp@plt>
    4e77:	85 c0                	test   %eax,%eax
    4e79:	0f 85 75 fc ff ff    	jne    4af4 <mbedtls_gcm_self_test+0x1e4>
    4e7f:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    4e84:	48 8b 03             	mov    (%rbx),%rax
    4e87:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    4e8b:	48 33 01             	xor    (%rcx),%rax
    4e8e:	48 33 51 08          	xor    0x8(%rcx),%rdx
    4e92:	48 09 c2             	or     %rax,%rdx
    4e95:	0f 85 59 fc ff ff    	jne    4af4 <mbedtls_gcm_self_test+0x1e4>
    4e9b:	4c 89 ff             	mov    %r15,%rdi
    4e9e:	e8 bd ec ff ff       	callq  3b60 <mbedtls_gcm_free.part.0>
    4ea3:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
    4ea7:	85 c9                	test   %ecx,%ecx
    4ea9:	74 0c                	je     4eb7 <mbedtls_gcm_self_test+0x5a7>
    4eab:	48 8d 3d 30 e3 01 00 	lea    0x1e330(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    4eb2:	e8 49 e3 ff ff       	callq  3200 <puts@plt>
    4eb7:	48 83 44 24 08 01    	addq   $0x1,0x8(%rsp)
    4ebd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4ec2:	48 83 44 24 10 10    	addq   $0x10,0x10(%rsp)
    4ec8:	48 83 04 24 40       	addq   $0x40,(%rsp)
    4ecd:	48 89 c2             	mov    %rax,%rdx
    4ed0:	48 83 f8 06          	cmp    $0x6,%rax
    4ed4:	0f 84 c6 01 00 00    	je     50a0 <mbedtls_gcm_self_test+0x790>
    4eda:	48 8d 05 5f ce 01 00 	lea    0x1ce5f(%rip),%rax        # 21d40 <key_index_test_data>
    4ee1:	4c 63 24 90          	movslq (%rax,%rdx,4),%r12
    4ee5:	e9 b3 fa ff ff       	jmpq   499d <mbedtls_gcm_self_test+0x8d>
    4eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4ef0:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
    4ef5:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4efa:	4c 89 e9             	mov    %r13,%rcx
    4efd:	4c 89 e2             	mov    %r12,%rdx
    4f00:	49 89 c1             	mov    %rax,%r9
    4f03:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    4f09:	4c 89 ff             	mov    %r15,%rdi
    4f0c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4f11:	e8 1a f4 ff ff       	callq  4330 <mbedtls_gcm_update>
    4f16:	85 c0                	test   %eax,%eax
    4f18:	0f 85 0a 02 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4f1e:	4c 3b 64 24 78       	cmp    0x78(%rsp),%r12
    4f23:	0f 84 d6 fd ff ff    	je     4cff <mbedtls_gcm_self_test+0x3ef>
    4f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4f30:	45 89 f7             	mov    %r14d,%r15d
    4f33:	e9 d9 fb ff ff       	jmpq   4b11 <mbedtls_gcm_self_test+0x201>
    4f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4f3f:	00 
    4f40:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    4f44:	8b 54 24 20          	mov    0x20(%rsp),%edx
    4f48:	4c 8d 05 8a c1 01 00 	lea    0x1c18a(%rip),%r8        # 210d9 <_IO_stdin_used+0xd9>
    4f4f:	48 8d 35 87 c1 01 00 	lea    0x1c187(%rip),%rsi        # 210dd <_IO_stdin_used+0xdd>
    4f56:	bf 01 00 00 00       	mov    $0x1,%edi
    4f5b:	e8 e0 e3 ff ff       	callq  3340 <__printf_chk@plt>
    4f60:	e9 5b fa ff ff       	jmpq   49c0 <mbedtls_gcm_self_test+0xb0>
    4f65:	0f 1f 00             	nopl   (%rax)
    4f68:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4f6d:	48 8b 34 24          	mov    (%rsp),%rsi
    4f71:	4c 89 e9             	mov    %r13,%rcx
    4f74:	4c 89 e2             	mov    %r12,%rdx
    4f77:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    4f7d:	4c 89 ff             	mov    %r15,%rdi
    4f80:	e8 ab f3 ff ff       	callq  4330 <mbedtls_gcm_update>
    4f85:	85 c0                	test   %eax,%eax
    4f87:	0f 85 9b 01 00 00    	jne    5128 <mbedtls_gcm_self_test+0x818>
    4f8d:	4c 3b 64 24 78       	cmp    0x78(%rsp),%r12
    4f92:	0f 84 ad fe ff ff    	je     4e45 <mbedtls_gcm_self_test+0x535>
    4f98:	eb 96                	jmp    4f30 <mbedtls_gcm_self_test+0x620>
    4f9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4fa0:	48 8d 3d 3b e2 01 00 	lea    0x1e23b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    4fa7:	e8 54 e2 ff ff       	callq  3200 <puts@plt>
    4fac:	48 89 e8             	mov    %rbp,%rax
    4faf:	4c 89 ff             	mov    %r15,%rdi
    4fb2:	b9 35 00 00 00       	mov    $0x35,%ecx
    4fb7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4fba:	8b 54 24 20          	mov    0x20(%rsp),%edx
    4fbe:	31 c0                	xor    %eax,%eax
    4fc0:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
    4fc4:	4c 8d 05 33 c1 01 00 	lea    0x1c133(%rip),%r8        # 210fe <_IO_stdin_used+0xfe>
    4fcb:	48 8d 35 0b c1 01 00 	lea    0x1c10b(%rip),%rsi        # 210dd <_IO_stdin_used+0xdd>
    4fd2:	bf 01 00 00 00       	mov    $0x1,%edi
    4fd7:	e8 64 e3 ff ff       	callq  3340 <__printf_chk@plt>
    4fdc:	e9 83 fb ff ff       	jmpq   4b64 <mbedtls_gcm_self_test+0x254>
    4fe1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4fe8:	48 8d 3d f3 e1 01 00 	lea    0x1e1f3(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    4fef:	e8 0c e2 ff ff       	callq  3200 <puts@plt>
    4ff4:	48 89 e8             	mov    %rbp,%rax
    4ff7:	4c 89 ff             	mov    %r15,%rdi
    4ffa:	b9 35 00 00 00       	mov    $0x35,%ecx
    4fff:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5002:	8b 54 24 20          	mov    0x20(%rsp),%edx
    5006:	31 c0                	xor    %eax,%eax
    5008:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
    500c:	4c 8d 05 c6 c0 01 00 	lea    0x1c0c6(%rip),%r8        # 210d9 <_IO_stdin_used+0xd9>
    5013:	48 8d 35 16 c1 01 00 	lea    0x1c116(%rip),%rsi        # 21130 <_IO_stdin_used+0x130>
    501a:	bf 01 00 00 00       	mov    $0x1,%edi
    501f:	e8 1c e3 ff ff       	callq  3340 <__printf_chk@plt>
    5024:	e9 f1 fb ff ff       	jmpq   4c1a <mbedtls_gcm_self_test+0x30a>
    5029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5030:	48 8d 3d ab e1 01 00 	lea    0x1e1ab(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    5037:	e8 c4 e1 ff ff       	callq  3200 <puts@plt>
    503c:	48 89 e8             	mov    %rbp,%rax
    503f:	4c 89 ff             	mov    %r15,%rdi
    5042:	b9 35 00 00 00       	mov    $0x35,%ecx
    5047:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    504a:	8b 54 24 20          	mov    0x20(%rsp),%edx
    504e:	31 c0                	xor    %eax,%eax
    5050:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
    5054:	4c 8d 05 a3 c0 01 00 	lea    0x1c0a3(%rip),%r8        # 210fe <_IO_stdin_used+0xfe>
    505b:	48 8d 35 ce c0 01 00 	lea    0x1c0ce(%rip),%rsi        # 21130 <_IO_stdin_used+0x130>
    5062:	bf 01 00 00 00       	mov    $0x1,%edi
    5067:	e8 d4 e2 ff ff       	callq  3340 <__printf_chk@plt>
    506c:	e9 05 fd ff ff       	jmpq   4d76 <mbedtls_gcm_self_test+0x466>
    5071:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5078:	bf 02 00 00 00       	mov    $0x2,%edi
    507d:	e8 6e 02 00 00       	callq  52f0 <mbedtls_aesni_has_support>
    5082:	85 c0                	test   %eax,%eax
    5084:	0f 84 86 00 00 00    	je     5110 <mbedtls_gcm_self_test+0x800>
    508a:	48 8d 3d 2f c0 01 00 	lea    0x1c02f(%rip),%rdi        # 210c0 <_IO_stdin_used+0xc0>
    5091:	e8 6a e1 ff ff       	callq  3200 <puts@plt>
    5096:	e9 ab f8 ff ff       	jmpq   4946 <mbedtls_gcm_self_test+0x36>
    509b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    50a0:	83 44 24 20 40       	addl   $0x40,0x20(%rsp)
    50a5:	8b 44 24 20          	mov    0x20(%rsp),%eax
    50a9:	48 83 44 24 58 60    	addq   $0x60,0x58(%rsp)
    50af:	48 81 44 24 60 80 01 	addq   $0x180,0x60(%rsp)
    50b6:	00 00 
    50b8:	3d 40 01 00 00       	cmp    $0x140,%eax
    50bd:	0f 85 ae f8 ff ff    	jne    4971 <mbedtls_gcm_self_test+0x61>
    50c3:	8b 54 24 24          	mov    0x24(%rsp),%edx
    50c7:	45 89 f7             	mov    %r14d,%r15d
    50ca:	85 d2                	test   %edx,%edx
    50cc:	0f 84 3f fa ff ff    	je     4b11 <mbedtls_gcm_self_test+0x201>
    50d2:	bf 0a 00 00 00       	mov    $0xa,%edi
    50d7:	45 31 ff             	xor    %r15d,%r15d
    50da:	e8 11 e1 ff ff       	callq  31f0 <putchar@plt>
    50df:	e9 2d fa ff ff       	jmpq   4b11 <mbedtls_gcm_self_test+0x201>
    50e4:	0f 1f 40 00          	nopl   0x0(%rax)
    50e8:	8b 44 24 24          	mov    0x24(%rsp),%eax
    50ec:	4d 89 fd             	mov    %r15,%r13
    50ef:	45 89 f7             	mov    %r14d,%r15d
    50f2:	85 c0                	test   %eax,%eax
    50f4:	0f 84 0f fa ff ff    	je     4b09 <mbedtls_gcm_self_test+0x1f9>
    50fa:	48 8d 3d bc e9 01 00 	lea    0x1e9bc(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    5101:	e8 fa e0 ff ff       	callq  3200 <puts@plt>
    5106:	e9 fe f9 ff ff       	jmpq   4b09 <mbedtls_gcm_self_test+0x1f9>
    510b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5110:	48 8d 3d f1 bf 01 00 	lea    0x1bff1(%rip),%rdi        # 21108 <_IO_stdin_used+0x108>
    5117:	e8 e4 e0 ff ff       	callq  3200 <puts@plt>
    511c:	e9 25 f8 ff ff       	jmpq   4946 <mbedtls_gcm_self_test+0x36>
    5121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5128:	4d 89 fd             	mov    %r15,%r13
    512b:	41 89 c7             	mov    %eax,%r15d
    512e:	e9 ca f9 ff ff       	jmpq   4afd <mbedtls_gcm_self_test+0x1ed>
    5133:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5138:	48 8d 3d b7 bf 01 00 	lea    0x1bfb7(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
    513f:	e8 bc e0 ff ff       	callq  3200 <puts@plt>
    5144:	83 44 24 20 40       	addl   $0x40,0x20(%rsp)
    5149:	48 83 44 24 58 60    	addq   $0x60,0x58(%rsp)
    514f:	48 81 44 24 60 80 01 	addq   $0x180,0x60(%rsp)
    5156:	00 00 
    5158:	e9 14 f8 ff ff       	jmpq   4971 <mbedtls_gcm_self_test+0x61>
    515d:	e8 fe e0 ff ff       	callq  3260 <__stack_chk_fail@plt>
    5162:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5169:	00 00 00 
    516c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005170 <mbedtls_get_unaligned_uint16>:
    5170:	f3 0f 1e fa          	endbr64 
    5174:	0f b7 07             	movzwl (%rdi),%eax
    5177:	c3                   	retq   
    5178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    517f:	00 

0000000000005180 <mbedtls_put_unaligned_uint16>:
    5180:	f3 0f 1e fa          	endbr64 
    5184:	66 89 37             	mov    %si,(%rdi)
    5187:	c3                   	retq   
    5188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    518f:	00 

0000000000005190 <mbedtls_get_unaligned_uint32>:
    5190:	f3 0f 1e fa          	endbr64 
    5194:	8b 07                	mov    (%rdi),%eax
    5196:	c3                   	retq   
    5197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    519e:	00 00 

00000000000051a0 <mbedtls_put_unaligned_uint32>:
    51a0:	f3 0f 1e fa          	endbr64 
    51a4:	89 37                	mov    %esi,(%rdi)
    51a6:	c3                   	retq   
    51a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    51ae:	00 00 

00000000000051b0 <mbedtls_get_unaligned_uint64>:
    51b0:	f3 0f 1e fa          	endbr64 
    51b4:	48 8b 07             	mov    (%rdi),%rax
    51b7:	c3                   	retq   
    51b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    51bf:	00 

00000000000051c0 <mbedtls_put_unaligned_uint64>:
    51c0:	f3 0f 1e fa          	endbr64 
    51c4:	48 89 37             	mov    %rsi,(%rdi)
    51c7:	c3                   	retq   
    51c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    51cf:	00 

00000000000051d0 <mbedtls_xor>:
    51d0:	f3 0f 1e fa          	endbr64 
    51d4:	48 83 f9 03          	cmp    $0x3,%rcx
    51d8:	76 46                	jbe    5220 <mbedtls_xor+0x50>
    51da:	b8 04 00 00 00       	mov    $0x4,%eax
    51df:	90                   	nop
    51e0:	44 8b 44 02 fc       	mov    -0x4(%rdx,%rax,1),%r8d
    51e5:	44 33 44 06 fc       	xor    -0x4(%rsi,%rax,1),%r8d
    51ea:	44 89 44 07 fc       	mov    %r8d,-0x4(%rdi,%rax,1)
    51ef:	49 89 c0             	mov    %rax,%r8
    51f2:	48 83 c0 04          	add    $0x4,%rax
    51f6:	48 39 c1             	cmp    %rax,%rcx
    51f9:	73 e5                	jae    51e0 <mbedtls_xor+0x10>
    51fb:	4c 39 c1             	cmp    %r8,%rcx
    51fe:	76 16                	jbe    5216 <mbedtls_xor+0x46>
    5200:	42 0f b6 04 06       	movzbl (%rsi,%r8,1),%eax
    5205:	42 32 04 02          	xor    (%rdx,%r8,1),%al
    5209:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
    520d:	49 83 c0 01          	add    $0x1,%r8
    5211:	4c 39 c1             	cmp    %r8,%rcx
    5214:	75 ea                	jne    5200 <mbedtls_xor+0x30>
    5216:	c3                   	retq   
    5217:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    521e:	00 00 
    5220:	45 31 c0             	xor    %r8d,%r8d
    5223:	eb d6                	jmp    51fb <mbedtls_xor+0x2b>
    5225:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    522c:	00 00 00 00 

0000000000005230 <mbedtls_platform_zeroize>:
    5230:	f3 0f 1e fa          	endbr64 
    5234:	48 85 f6             	test   %rsi,%rsi
    5237:	75 07                	jne    5240 <mbedtls_platform_zeroize+0x10>
    5239:	c3                   	retq   
    523a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5240:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    5247:	e9 14 e1 ff ff       	jmpq   3360 <__explicit_bzero_chk@plt>
    524c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005250 <mbedtls_platform_gmtime_r>:
    5250:	f3 0f 1e fa          	endbr64 
    5254:	e9 27 e0 ff ff       	jmpq   3280 <gmtime_r@plt>
    5259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005260 <mbedtls_ms_time>:
    5260:	f3 0f 1e fa          	endbr64 
    5264:	48 83 ec 28          	sub    $0x28,%rsp
    5268:	bf 01 00 00 00       	mov    $0x1,%edi
    526d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5274:	00 00 
    5276:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    527b:	31 c0                	xor    %eax,%eax
    527d:	48 89 e6             	mov    %rsp,%rsi
    5280:	e8 ab df ff ff       	callq  3230 <clock_gettime@plt>
    5285:	85 c0                	test   %eax,%eax
    5287:	75 47                	jne    52d0 <mbedtls_ms_time+0x70>
    5289:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    528e:	48 69 0c 24 e8 03 00 	imul   $0x3e8,(%rsp),%rcx
    5295:	00 
    5296:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    529d:	de 1b 43 
    52a0:	48 89 f0             	mov    %rsi,%rax
    52a3:	48 c1 fe 3f          	sar    $0x3f,%rsi
    52a7:	48 f7 ea             	imul   %rdx
    52aa:	48 c1 fa 12          	sar    $0x12,%rdx
    52ae:	48 29 f2             	sub    %rsi,%rdx
    52b1:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    52b5:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    52ba:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    52c1:	00 00 
    52c3:	75 1b                	jne    52e0 <mbedtls_ms_time+0x80>
    52c5:	48 83 c4 28          	add    $0x28,%rsp
    52c9:	c3                   	retq   
    52ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    52d0:	31 ff                	xor    %edi,%edi
    52d2:	e8 49 e0 ff ff       	callq  3320 <time@plt>
    52d7:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
    52de:	eb d5                	jmp    52b5 <mbedtls_ms_time+0x55>
    52e0:	e8 7b df ff ff       	callq  3260 <__stack_chk_fail@plt>
    52e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    52ec:	00 00 00 
    52ef:	90                   	nop

00000000000052f0 <mbedtls_aesni_has_support>:
    52f0:	f3 0f 1e fa          	endbr64 
    52f4:	8b 05 5a ad 02 00    	mov    0x2ad5a(%rip),%eax        # 30054 <done.3241>
    52fa:	85 c0                	test   %eax,%eax
    52fc:	75 2a                	jne    5328 <mbedtls_aesni_has_support+0x38>
    52fe:	53                   	push   %rbx
    52ff:	b8 01 00 00 00       	mov    $0x1,%eax
    5304:	0f a2                	cpuid  
    5306:	31 c0                	xor    %eax,%eax
    5308:	89 0d 42 ad 02 00    	mov    %ecx,0x2ad42(%rip)        # 30050 <c.3242>
    530e:	85 3d 3c ad 02 00    	test   %edi,0x2ad3c(%rip)        # 30050 <c.3242>
    5314:	c7 05 36 ad 02 00 01 	movl   $0x1,0x2ad36(%rip)        # 30054 <done.3241>
    531b:	00 00 00 
    531e:	0f 95 c0             	setne  %al
    5321:	5b                   	pop    %rbx
    5322:	c3                   	retq   
    5323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5328:	31 c0                	xor    %eax,%eax
    532a:	85 3d 20 ad 02 00    	test   %edi,0x2ad20(%rip)        # 30050 <c.3242>
    5330:	0f 95 c0             	setne  %al
    5333:	c3                   	retq   
    5334:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    533b:	00 00 00 00 
    533f:	90                   	nop

0000000000005340 <mbedtls_aesni_crypt_ecb>:
    5340:	f3 0f 1e fa          	endbr64 
    5344:	49 89 d0             	mov    %rdx,%r8
    5347:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    534b:	8b 07                	mov    (%rdi),%eax
    534d:	48 8d 54 97 10       	lea    0x10(%rdi,%rdx,4),%rdx
    5352:	f3 41 0f 6f 00       	movdqu (%r8),%xmm0
    5357:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    535b:	66 0f ef c1          	pxor   %xmm1,%xmm0
    535f:	48 83 c2 10          	add    $0x10,%rdx
    5363:	83 e8 01             	sub    $0x1,%eax
    5366:	85 f6                	test   %esi,%esi
    5368:	74 1d                	je     5387 <mbedtls_aesni_crypt_ecb+0x47>
    536a:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    536e:	66 0f 38 dc c1       	aesenc %xmm1,%xmm0
    5373:	48 83 c2 10          	add    $0x10,%rdx
    5377:	83 e8 01             	sub    $0x1,%eax
    537a:	75 ee                	jne    536a <mbedtls_aesni_crypt_ecb+0x2a>
    537c:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    5380:	66 0f 38 dd c1       	aesenclast %xmm1,%xmm0
    5385:	eb 1b                	jmp    53a2 <mbedtls_aesni_crypt_ecb+0x62>
    5387:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    538b:	66 0f 38 de c1       	aesdec %xmm1,%xmm0
    5390:	48 83 c2 10          	add    $0x10,%rdx
    5394:	83 e8 01             	sub    $0x1,%eax
    5397:	75 ee                	jne    5387 <mbedtls_aesni_crypt_ecb+0x47>
    5399:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    539d:	66 0f 38 df c1       	aesdeclast %xmm1,%xmm0
    53a2:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
    53a6:	31 c0                	xor    %eax,%eax
    53a8:	c3                   	retq   
    53a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000053b0 <mbedtls_aesni_gcm_mult>:
    53b0:	f3 0f 1e fa          	endbr64 
    53b4:	48 83 ec 48          	sub    $0x48,%rsp
    53b8:	31 c9                	xor    %ecx,%ecx
    53ba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    53c1:	00 00 
    53c3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    53c8:	31 c0                	xor    %eax,%eax
    53ca:	49 89 e1             	mov    %rsp,%r9
    53cd:	b8 10 00 00 00       	mov    $0x10,%eax
    53d2:	4c 8d 54 24 10       	lea    0x10(%rsp),%r10
    53d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    53de:	00 00 
    53e0:	44 0f b6 44 06 ff    	movzbl -0x1(%rsi,%rax,1),%r8d
    53e6:	45 88 04 09          	mov    %r8b,(%r9,%rcx,1)
    53ea:	44 0f b6 44 02 ff    	movzbl -0x1(%rdx,%rax,1),%r8d
    53f0:	45 88 04 0a          	mov    %r8b,(%r10,%rcx,1)
    53f4:	48 83 c1 01          	add    $0x1,%rcx
    53f8:	48 83 e8 01          	sub    $0x1,%rax
    53fc:	75 e2                	jne    53e0 <mbedtls_aesni_gcm_mult+0x30>
    53fe:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    5403:	f3 41 0f 6f 01       	movdqu (%r9),%xmm0
    5408:	f3 41 0f 6f 0a       	movdqu (%r10),%xmm1
    540d:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    5411:	66 0f 6f d9          	movdqa %xmm1,%xmm3
    5415:	66 0f 6f e1          	movdqa %xmm1,%xmm4
    5419:	66 0f 3a 44 c8 00    	pclmullqlqdq %xmm0,%xmm1
    541f:	66 0f 3a 44 d0 11    	pclmulhqhqdq %xmm0,%xmm2
    5425:	66 0f 3a 44 d8 10    	pclmullqhqdq %xmm0,%xmm3
    542b:	66 0f 3a 44 e0 01    	pclmulhqlqdq %xmm0,%xmm4
    5431:	66 0f ef e3          	pxor   %xmm3,%xmm4
    5435:	66 0f 6f dc          	movdqa %xmm4,%xmm3
    5439:	66 0f 73 dc 08       	psrldq $0x8,%xmm4
    543e:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
    5443:	66 0f ef d4          	pxor   %xmm4,%xmm2
    5447:	66 0f ef cb          	pxor   %xmm3,%xmm1
    544b:	66 0f 6f d9          	movdqa %xmm1,%xmm3
    544f:	66 0f 6f e2          	movdqa %xmm2,%xmm4
    5453:	66 0f 73 f1 01       	psllq  $0x1,%xmm1
    5458:	66 0f 73 f2 01       	psllq  $0x1,%xmm2
    545d:	66 0f 73 d3 3f       	psrlq  $0x3f,%xmm3
    5462:	66 0f 73 d4 3f       	psrlq  $0x3f,%xmm4
    5467:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    546b:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
    5470:	66 0f 73 fc 08       	pslldq $0x8,%xmm4
    5475:	66 0f 73 dd 08       	psrldq $0x8,%xmm5
    547a:	66 0f eb cb          	por    %xmm3,%xmm1
    547e:	66 0f eb d4          	por    %xmm4,%xmm2
    5482:	66 0f eb d5          	por    %xmm5,%xmm2
    5486:	66 0f 6f d9          	movdqa %xmm1,%xmm3
    548a:	66 0f 6f e1          	movdqa %xmm1,%xmm4
    548e:	66 0f 6f e9          	movdqa %xmm1,%xmm5
    5492:	66 0f 73 f3 3f       	psllq  $0x3f,%xmm3
    5497:	66 0f 73 f4 3e       	psllq  $0x3e,%xmm4
    549c:	66 0f 73 f5 39       	psllq  $0x39,%xmm5
    54a1:	66 0f ef dc          	pxor   %xmm4,%xmm3
    54a5:	66 0f ef dd          	pxor   %xmm5,%xmm3
    54a9:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
    54ae:	66 0f ef cb          	pxor   %xmm3,%xmm1
    54b2:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    54b6:	66 0f 6f e1          	movdqa %xmm1,%xmm4
    54ba:	66 0f 6f e9          	movdqa %xmm1,%xmm5
    54be:	66 0f 73 d0 01       	psrlq  $0x1,%xmm0
    54c3:	66 0f 73 d4 02       	psrlq  $0x2,%xmm4
    54c8:	66 0f 73 d5 07       	psrlq  $0x7,%xmm5
    54cd:	66 0f ef c4          	pxor   %xmm4,%xmm0
    54d1:	66 0f ef c5          	pxor   %xmm5,%xmm0
    54d5:	66 0f 6f d9          	movdqa %xmm1,%xmm3
    54d9:	66 0f 6f e1          	movdqa %xmm1,%xmm4
    54dd:	66 0f 6f e9          	movdqa %xmm1,%xmm5
    54e1:	66 0f 73 f3 3f       	psllq  $0x3f,%xmm3
    54e6:	66 0f 73 f4 3e       	psllq  $0x3e,%xmm4
    54eb:	66 0f 73 f5 39       	psllq  $0x39,%xmm5
    54f0:	66 0f ef dc          	pxor   %xmm4,%xmm3
    54f4:	66 0f ef dd          	pxor   %xmm5,%xmm3
    54f8:	66 0f 73 db 08       	psrldq $0x8,%xmm3
    54fd:	66 0f ef c3          	pxor   %xmm3,%xmm0
    5501:	66 0f ef c1          	pxor   %xmm1,%xmm0
    5505:	66 0f ef c2          	pxor   %xmm2,%xmm0
    5509:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
    550d:	48 8d 44 24 2f       	lea    0x2f(%rsp),%rax
    5512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5518:	0f b6 10             	movzbl (%rax),%edx
    551b:	48 83 c7 01          	add    $0x1,%rdi
    551f:	88 57 ff             	mov    %dl,-0x1(%rdi)
    5522:	48 89 c2             	mov    %rax,%rdx
    5525:	48 83 e8 01          	sub    $0x1,%rax
    5529:	48 39 ca             	cmp    %rcx,%rdx
    552c:	75 ea                	jne    5518 <mbedtls_aesni_gcm_mult+0x168>
    552e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    5533:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    553a:	00 00 
    553c:	75 05                	jne    5543 <mbedtls_aesni_gcm_mult+0x193>
    553e:	48 83 c4 48          	add    $0x48,%rsp
    5542:	c3                   	retq   
    5543:	e8 18 dd ff ff       	callq  3260 <__stack_chk_fail@plt>
    5548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    554f:	00 

0000000000005550 <mbedtls_aesni_inverse_key>:
    5550:	f3 0f 1e fa          	endbr64 
    5554:	89 d1                	mov    %edx,%ecx
    5556:	48 83 c7 10          	add    $0x10,%rdi
    555a:	c1 e1 04             	shl    $0x4,%ecx
    555d:	48 63 c9             	movslq %ecx,%rcx
    5560:	48 01 f1             	add    %rsi,%rcx
    5563:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
    5567:	4c 8d 41 f0          	lea    -0x10(%rcx),%r8
    556b:	0f 11 47 f0          	movups %xmm0,-0x10(%rdi)
    556f:	4c 39 c6             	cmp    %r8,%rsi
    5572:	73 49                	jae    55bd <mbedtls_aesni_inverse_key+0x6d>
    5574:	4c 89 c0             	mov    %r8,%rax
    5577:	48 89 fa             	mov    %rdi,%rdx
    557a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5580:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    5584:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
    5589:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
    558d:	48 83 e8 10          	sub    $0x10,%rax
    5591:	48 83 c2 10          	add    $0x10,%rdx
    5595:	48 39 c6             	cmp    %rax,%rsi
    5598:	72 e6                	jb     5580 <mbedtls_aesni_inverse_key+0x30>
    559a:	48 29 f1             	sub    %rsi,%rcx
    559d:	48 8d 41 ef          	lea    -0x11(%rcx),%rax
    55a1:	48 c1 e8 04          	shr    $0x4,%rax
    55a5:	48 8d 50 01          	lea    0x1(%rax),%rdx
    55a9:	48 f7 d0             	not    %rax
    55ac:	48 c1 e0 04          	shl    $0x4,%rax
    55b0:	49 01 c0             	add    %rax,%r8
    55b3:	48 89 d0             	mov    %rdx,%rax
    55b6:	48 c1 e0 04          	shl    $0x4,%rax
    55ba:	48 01 c7             	add    %rax,%rdi
    55bd:	f3 41 0f 6f 08       	movdqu (%r8),%xmm1
    55c2:	0f 11 0f             	movups %xmm1,(%rdi)
    55c5:	c3                   	retq   
    55c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    55cd:	00 00 00 

00000000000055d0 <mbedtls_aesni_setkey_enc>:
    55d0:	f3 0f 1e fa          	endbr64 
    55d4:	48 81 fa c0 00 00 00 	cmp    $0xc0,%rdx
    55db:	0f 84 9f 01 00 00    	je     5780 <mbedtls_aesni_setkey_enc+0x1b0>
    55e1:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
    55e8:	0f 84 c2 00 00 00    	je     56b0 <mbedtls_aesni_setkey_enc+0xe0>
    55ee:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    55f3:	48 81 fa 80 00 00 00 	cmp    $0x80,%rdx
    55fa:	74 04                	je     5600 <mbedtls_aesni_setkey_enc+0x30>
    55fc:	c3                   	retq   
    55fd:	0f 1f 00             	nopl   (%rax)
    5600:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    5604:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    5608:	eb 2d                	jmp    5637 <mbedtls_aesni_setkey_enc+0x67>
    560a:	66 0f 70 c9 ff       	pshufd $0xff,%xmm1,%xmm1
    560f:	66 0f ef c8          	pxor   %xmm0,%xmm1
    5613:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    5618:	66 0f ef c8          	pxor   %xmm0,%xmm1
    561c:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    5621:	66 0f ef c8          	pxor   %xmm0,%xmm1
    5625:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    562a:	66 0f ef c1          	pxor   %xmm1,%xmm0
    562e:	48 83 c7 10          	add    $0x10,%rdi
    5632:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    5636:	c3                   	retq   
    5637:	66 0f 3a df c8 01    	aeskeygenassist $0x1,%xmm0,%xmm1
    563d:	e8 c8 ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    5642:	66 0f 3a df c8 02    	aeskeygenassist $0x2,%xmm0,%xmm1
    5648:	e8 bd ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    564d:	66 0f 3a df c8 04    	aeskeygenassist $0x4,%xmm0,%xmm1
    5653:	e8 b2 ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    5658:	66 0f 3a df c8 08    	aeskeygenassist $0x8,%xmm0,%xmm1
    565e:	e8 a7 ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    5663:	66 0f 3a df c8 10    	aeskeygenassist $0x10,%xmm0,%xmm1
    5669:	e8 9c ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    566e:	66 0f 3a df c8 20    	aeskeygenassist $0x20,%xmm0,%xmm1
    5674:	e8 91 ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    5679:	66 0f 3a df c8 40    	aeskeygenassist $0x40,%xmm0,%xmm1
    567f:	e8 86 ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    5684:	66 0f 3a df c8 80    	aeskeygenassist $0x80,%xmm0,%xmm1
    568a:	e8 7b ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    568f:	66 0f 3a df c8 1b    	aeskeygenassist $0x1b,%xmm0,%xmm1
    5695:	e8 70 ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    569a:	66 0f 3a df c8 36    	aeskeygenassist $0x36,%xmm0,%xmm1
    56a0:	e8 65 ff ff ff       	callq  560a <mbedtls_aesni_setkey_enc+0x3a>
    56a5:	31 c0                	xor    %eax,%eax
    56a7:	c3                   	retq   
    56a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    56af:	00 
    56b0:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    56b4:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    56b8:	48 83 c7 10          	add    $0x10,%rdi
    56bc:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    56c1:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
    56c5:	eb 5f                	jmp    5726 <mbedtls_aesni_setkey_enc+0x156>
    56c7:	66 0f 70 d2 ff       	pshufd $0xff,%xmm2,%xmm2
    56cc:	66 0f ef d0          	pxor   %xmm0,%xmm2
    56d0:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    56d5:	66 0f ef d0          	pxor   %xmm0,%xmm2
    56d9:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    56de:	66 0f ef d0          	pxor   %xmm0,%xmm2
    56e2:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    56e7:	66 0f ef c2          	pxor   %xmm2,%xmm0
    56eb:	48 83 c7 10          	add    $0x10,%rdi
    56ef:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    56f3:	66 0f 3a df d0 00    	aeskeygenassist $0x0,%xmm0,%xmm2
    56f9:	66 0f 70 d2 aa       	pshufd $0xaa,%xmm2,%xmm2
    56fe:	66 0f ef d1          	pxor   %xmm1,%xmm2
    5702:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
    5707:	66 0f ef d1          	pxor   %xmm1,%xmm2
    570b:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
    5710:	66 0f ef d1          	pxor   %xmm1,%xmm2
    5714:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
    5719:	66 0f ef ca          	pxor   %xmm2,%xmm1
    571d:	48 83 c7 10          	add    $0x10,%rdi
    5721:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
    5725:	c3                   	retq   
    5726:	66 0f 3a df d1 01    	aeskeygenassist $0x1,%xmm1,%xmm2
    572c:	e8 96 ff ff ff       	callq  56c7 <mbedtls_aesni_setkey_enc+0xf7>
    5731:	66 0f 3a df d1 02    	aeskeygenassist $0x2,%xmm1,%xmm2
    5737:	e8 8b ff ff ff       	callq  56c7 <mbedtls_aesni_setkey_enc+0xf7>
    573c:	66 0f 3a df d1 04    	aeskeygenassist $0x4,%xmm1,%xmm2
    5742:	e8 80 ff ff ff       	callq  56c7 <mbedtls_aesni_setkey_enc+0xf7>
    5747:	66 0f 3a df d1 08    	aeskeygenassist $0x8,%xmm1,%xmm2
    574d:	e8 75 ff ff ff       	callq  56c7 <mbedtls_aesni_setkey_enc+0xf7>
    5752:	66 0f 3a df d1 10    	aeskeygenassist $0x10,%xmm1,%xmm2
    5758:	e8 6a ff ff ff       	callq  56c7 <mbedtls_aesni_setkey_enc+0xf7>
    575d:	66 0f 3a df d1 20    	aeskeygenassist $0x20,%xmm1,%xmm2
    5763:	e8 5f ff ff ff       	callq  56c7 <mbedtls_aesni_setkey_enc+0xf7>
    5768:	66 0f 3a df d1 40    	aeskeygenassist $0x40,%xmm1,%xmm2
    576e:	e8 54 ff ff ff       	callq  56c7 <mbedtls_aesni_setkey_enc+0xf7>
    5773:	31 c0                	xor    %eax,%eax
    5775:	c3                   	retq   
    5776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    577d:	00 00 00 
    5780:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    5784:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    5788:	48 83 c7 10          	add    $0x10,%rdi
    578c:	f3 0f 7e 4e 10       	movq   0x10(%rsi),%xmm1
    5791:	66 0f d6 0f          	movq   %xmm1,(%rdi)
    5795:	48 83 c7 08          	add    $0x8,%rdi
    5799:	eb 47                	jmp    57e2 <mbedtls_aesni_setkey_enc+0x212>
    579b:	66 0f 70 d2 55       	pshufd $0x55,%xmm2,%xmm2
    57a0:	66 0f ef d0          	pxor   %xmm0,%xmm2
    57a4:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    57a9:	66 0f ef d0          	pxor   %xmm0,%xmm2
    57ad:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    57b2:	66 0f ef d0          	pxor   %xmm0,%xmm2
    57b6:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    57bb:	66 0f ef c2          	pxor   %xmm2,%xmm0
    57bf:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    57c3:	48 83 c7 10          	add    $0x10,%rdi
    57c7:	66 0f 70 d0 ff       	pshufd $0xff,%xmm0,%xmm2
    57cc:	66 0f ef d1          	pxor   %xmm1,%xmm2
    57d0:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
    57d5:	66 0f ef ca          	pxor   %xmm2,%xmm1
    57d9:	66 0f d6 0f          	movq   %xmm1,(%rdi)
    57dd:	48 83 c7 08          	add    $0x8,%rdi
    57e1:	c3                   	retq   
    57e2:	66 0f 3a df d1 01    	aeskeygenassist $0x1,%xmm1,%xmm2
    57e8:	e8 ae ff ff ff       	callq  579b <mbedtls_aesni_setkey_enc+0x1cb>
    57ed:	66 0f 3a df d1 02    	aeskeygenassist $0x2,%xmm1,%xmm2
    57f3:	e8 a3 ff ff ff       	callq  579b <mbedtls_aesni_setkey_enc+0x1cb>
    57f8:	66 0f 3a df d1 04    	aeskeygenassist $0x4,%xmm1,%xmm2
    57fe:	e8 98 ff ff ff       	callq  579b <mbedtls_aesni_setkey_enc+0x1cb>
    5803:	66 0f 3a df d1 08    	aeskeygenassist $0x8,%xmm1,%xmm2
    5809:	e8 8d ff ff ff       	callq  579b <mbedtls_aesni_setkey_enc+0x1cb>
    580e:	66 0f 3a df d1 10    	aeskeygenassist $0x10,%xmm1,%xmm2
    5814:	e8 82 ff ff ff       	callq  579b <mbedtls_aesni_setkey_enc+0x1cb>
    5819:	66 0f 3a df d1 20    	aeskeygenassist $0x20,%xmm1,%xmm2
    581f:	e8 77 ff ff ff       	callq  579b <mbedtls_aesni_setkey_enc+0x1cb>
    5824:	66 0f 3a df d1 40    	aeskeygenassist $0x40,%xmm1,%xmm2
    582a:	e8 6c ff ff ff       	callq  579b <mbedtls_aesni_setkey_enc+0x1cb>
    582f:	66 0f 3a df d1 80    	aeskeygenassist $0x80,%xmm1,%xmm2
    5835:	e8 61 ff ff ff       	callq  579b <mbedtls_aesni_setkey_enc+0x1cb>
    583a:	31 c0                	xor    %eax,%eax
    583c:	c3                   	retq   
    583d:	0f 1f 00             	nopl   (%rax)

0000000000005840 <add_pkcs_padding>:
    5840:	f3 0f 1e fa          	endbr64 
    5844:	48 29 d6             	sub    %rdx,%rsi
    5847:	b9 00 00 00 00       	mov    $0x0,%ecx
    584c:	b8 00 00 00 00       	mov    $0x0,%eax
    5851:	41 89 f0             	mov    %esi,%r8d
    5854:	74 1c                	je     5872 <add_pkcs_padding+0x32>
    5856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    585d:	00 00 00 
    5860:	48 01 f8             	add    %rdi,%rax
    5863:	83 c1 01             	add    $0x1,%ecx
    5866:	44 88 04 10          	mov    %r8b,(%rax,%rdx,1)
    586a:	0f b6 c1             	movzbl %cl,%eax
    586d:	48 39 f0             	cmp    %rsi,%rax
    5870:	72 ee                	jb     5860 <add_pkcs_padding+0x20>
    5872:	c3                   	retq   
    5873:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    587a:	00 00 00 00 
    587e:	66 90                	xchg   %ax,%ax

0000000000005880 <get_pkcs_padding>:
    5880:	f3 0f 1e fa          	endbr64 
    5884:	48 85 ff             	test   %rdi,%rdi
    5887:	74 59                	je     58e2 <get_pkcs_padding+0x62>
    5889:	48 85 d2             	test   %rdx,%rdx
    588c:	74 54                	je     58e2 <get_pkcs_padding+0x62>
    588e:	0f b6 44 37 ff       	movzbl -0x1(%rdi,%rsi,1),%eax
    5893:	49 89 f2             	mov    %rsi,%r10
    5896:	49 29 c2             	sub    %rax,%r10
    5899:	48 39 f0             	cmp    %rsi,%rax
    589c:	49 89 c1             	mov    %rax,%r9
    589f:	0f 97 c1             	seta   %cl
    58a2:	84 c0                	test   %al,%al
    58a4:	4c 89 12             	mov    %r10,(%rdx)
    58a7:	0f 94 c0             	sete   %al
    58aa:	09 c1                	or     %eax,%ecx
    58ac:	48 85 f6             	test   %rsi,%rsi
    58af:	74 24                	je     58d5 <get_pkcs_padding+0x55>
    58b1:	31 d2                	xor    %edx,%edx
    58b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    58b8:	0f b6 04 17          	movzbl (%rdi,%rdx,1),%eax
    58bc:	44 31 c8             	xor    %r9d,%eax
    58bf:	49 39 d2             	cmp    %rdx,%r10
    58c2:	41 0f 96 c0          	setbe  %r8b
    58c6:	48 83 c2 01          	add    $0x1,%rdx
    58ca:	41 0f af c0          	imul   %r8d,%eax
    58ce:	09 c1                	or     %eax,%ecx
    58d0:	48 39 d6             	cmp    %rdx,%rsi
    58d3:	75 e3                	jne    58b8 <get_pkcs_padding+0x38>
    58d5:	80 f9 01             	cmp    $0x1,%cl
    58d8:	19 c0                	sbb    %eax,%eax
    58da:	f7 d0                	not    %eax
    58dc:	25 00 9e ff ff       	and    $0xffff9e00,%eax
    58e1:	c3                   	retq   
    58e2:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    58e7:	c3                   	retq   
    58e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    58ef:	00 

00000000000058f0 <add_one_and_zeros_padding>:
    58f0:	f3 0f 1e fa          	endbr64 
    58f4:	48 29 d6             	sub    %rdx,%rsi
    58f7:	c6 04 17 80          	movb   $0x80,(%rdi,%rdx,1)
    58fb:	48 83 fe 01          	cmp    $0x1,%rsi
    58ff:	76 21                	jbe    5922 <add_one_and_zeros_padding+0x32>
    5901:	b9 01 00 00 00       	mov    $0x1,%ecx
    5906:	b8 01 00 00 00       	mov    $0x1,%eax
    590b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5910:	48 01 f8             	add    %rdi,%rax
    5913:	83 c1 01             	add    $0x1,%ecx
    5916:	c6 04 10 00          	movb   $0x0,(%rax,%rdx,1)
    591a:	0f b6 c1             	movzbl %cl,%eax
    591d:	48 39 f0             	cmp    %rsi,%rax
    5920:	72 ee                	jb     5910 <add_one_and_zeros_padding+0x20>
    5922:	c3                   	retq   
    5923:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    592a:	00 00 00 00 
    592e:	66 90                	xchg   %ax,%ax

0000000000005930 <add_zeros_and_len_padding>:
    5930:	f3 0f 1e fa          	endbr64 
    5934:	49 89 f0             	mov    %rsi,%r8
    5937:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    593b:	b8 01 00 00 00       	mov    $0x1,%eax
    5940:	49 29 d0             	sub    %rdx,%r8
    5943:	ba 01 00 00 00       	mov    $0x1,%edx
    5948:	49 83 f8 01          	cmp    $0x1,%r8
    594c:	76 14                	jbe    5962 <add_zeros_and_len_padding+0x32>
    594e:	66 90                	xchg   %ax,%ax
    5950:	48 01 f8             	add    %rdi,%rax
    5953:	83 c2 01             	add    $0x1,%edx
    5956:	c6 04 08 00          	movb   $0x0,(%rax,%rcx,1)
    595a:	0f b6 c2             	movzbl %dl,%eax
    595d:	4c 39 c0             	cmp    %r8,%rax
    5960:	72 ee                	jb     5950 <add_zeros_and_len_padding+0x20>
    5962:	44 88 44 37 ff       	mov    %r8b,-0x1(%rdi,%rsi,1)
    5967:	c3                   	retq   
    5968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    596f:	00 

0000000000005970 <get_zeros_and_len_padding>:
    5970:	f3 0f 1e fa          	endbr64 
    5974:	48 85 ff             	test   %rdi,%rdi
    5977:	74 50                	je     59c9 <get_zeros_and_len_padding+0x59>
    5979:	48 85 d2             	test   %rdx,%rdx
    597c:	74 4b                	je     59c9 <get_zeros_and_len_padding+0x59>
    597e:	0f b6 4c 37 ff       	movzbl -0x1(%rdi,%rsi,1),%ecx
    5983:	49 89 f0             	mov    %rsi,%r8
    5986:	48 89 c8             	mov    %rcx,%rax
    5989:	49 29 c8             	sub    %rcx,%r8
    598c:	48 39 f1             	cmp    %rsi,%rcx
    598f:	0f 97 c1             	seta   %cl
    5992:	84 c0                	test   %al,%al
    5994:	4c 89 02             	mov    %r8,(%rdx)
    5997:	0f 94 c0             	sete   %al
    599a:	09 c1                	or     %eax,%ecx
    599c:	48 83 ee 01          	sub    $0x1,%rsi
    59a0:	74 1a                	je     59bc <get_zeros_and_len_padding+0x4c>
    59a2:	31 d2                	xor    %edx,%edx
    59a4:	0f 1f 40 00          	nopl   0x0(%rax)
    59a8:	49 39 d0             	cmp    %rdx,%r8
    59ab:	0f 96 c0             	setbe  %al
    59ae:	f6 24 17             	mulb   (%rdi,%rdx,1)
    59b1:	48 83 c2 01          	add    $0x1,%rdx
    59b5:	09 c1                	or     %eax,%ecx
    59b7:	48 39 d6             	cmp    %rdx,%rsi
    59ba:	75 ec                	jne    59a8 <get_zeros_and_len_padding+0x38>
    59bc:	80 f9 01             	cmp    $0x1,%cl
    59bf:	19 c0                	sbb    %eax,%eax
    59c1:	f7 d0                	not    %eax
    59c3:	25 00 9e ff ff       	and    $0xffff9e00,%eax
    59c8:	c3                   	retq   
    59c9:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    59ce:	c3                   	retq   
    59cf:	90                   	nop

00000000000059d0 <add_zeros_padding>:
    59d0:	f3 0f 1e fa          	endbr64 
    59d4:	48 39 f2             	cmp    %rsi,%rdx
    59d7:	73 13                	jae    59ec <add_zeros_padding+0x1c>
    59d9:	48 01 fa             	add    %rdi,%rdx
    59dc:	48 01 fe             	add    %rdi,%rsi
    59df:	90                   	nop
    59e0:	c6 02 00             	movb   $0x0,(%rdx)
    59e3:	48 83 c2 01          	add    $0x1,%rdx
    59e7:	48 39 f2             	cmp    %rsi,%rdx
    59ea:	75 f4                	jne    59e0 <add_zeros_padding+0x10>
    59ec:	c3                   	retq   
    59ed:	0f 1f 00             	nopl   (%rax)

00000000000059f0 <get_no_padding>:
    59f0:	f3 0f 1e fa          	endbr64 
    59f4:	48 85 ff             	test   %rdi,%rdi
    59f7:	74 0f                	je     5a08 <get_no_padding+0x18>
    59f9:	48 85 d2             	test   %rdx,%rdx
    59fc:	74 0a                	je     5a08 <get_no_padding+0x18>
    59fe:	48 89 32             	mov    %rsi,(%rdx)
    5a01:	31 c0                	xor    %eax,%eax
    5a03:	c3                   	retq   
    5a04:	0f 1f 40 00          	nopl   0x0(%rax)
    5a08:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5a0d:	c3                   	retq   
    5a0e:	66 90                	xchg   %ax,%ax

0000000000005a10 <get_one_and_zeros_padding>:
    5a10:	f3 0f 1e fa          	endbr64 
    5a14:	48 85 ff             	test   %rdi,%rdi
    5a17:	74 5d                	je     5a76 <get_one_and_zeros_padding+0x66>
    5a19:	48 85 d2             	test   %rdx,%rdx
    5a1c:	74 58                	je     5a76 <get_one_and_zeros_padding+0x66>
    5a1e:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    5a25:	48 85 f6             	test   %rsi,%rsi
    5a28:	74 46                	je     5a70 <get_one_and_zeros_padding+0x60>
    5a2a:	45 31 c9             	xor    %r9d,%r9d
    5a2d:	41 ba 80 ff ff ff    	mov    $0xffffff80,%r10d
    5a33:	31 c9                	xor    %ecx,%ecx
    5a35:	0f 1f 00             	nopl   (%rax)
    5a38:	48 83 ee 01          	sub    $0x1,%rsi
    5a3c:	89 c8                	mov    %ecx,%eax
    5a3e:	80 3c 37 00          	cmpb   $0x0,(%rdi,%rsi,1)
    5a42:	41 0f 95 c0          	setne  %r8b
    5a46:	44 09 c1             	or     %r8d,%ecx
    5a49:	31 c8                	xor    %ecx,%eax
    5a4b:	44 0f b6 c0          	movzbl %al,%r8d
    5a4f:	4c 0f af c6          	imul   %rsi,%r8
    5a53:	4d 09 c1             	or     %r8,%r9
    5a56:	4c 89 0a             	mov    %r9,(%rdx)
    5a59:	f6 24 37             	mulb   (%rdi,%rsi,1)
    5a5c:	41 31 c2             	xor    %eax,%r10d
    5a5f:	48 85 f6             	test   %rsi,%rsi
    5a62:	75 d4                	jne    5a38 <get_one_and_zeros_padding+0x28>
    5a64:	45 84 d2             	test   %r10b,%r10b
    5a67:	75 07                	jne    5a70 <get_one_and_zeros_padding+0x60>
    5a69:	31 c0                	xor    %eax,%eax
    5a6b:	c3                   	retq   
    5a6c:	0f 1f 40 00          	nopl   0x0(%rax)
    5a70:	b8 00 9e ff ff       	mov    $0xffff9e00,%eax
    5a75:	c3                   	retq   
    5a76:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5a7b:	c3                   	retq   
    5a7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005a80 <get_zeros_padding>:
    5a80:	f3 0f 1e fa          	endbr64 
    5a84:	48 85 ff             	test   %rdi,%rdi
    5a87:	74 42                	je     5acb <get_zeros_padding+0x4b>
    5a89:	48 85 d2             	test   %rdx,%rdx
    5a8c:	74 3d                	je     5acb <get_zeros_padding+0x4b>
    5a8e:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    5a95:	45 31 c0             	xor    %r8d,%r8d
    5a98:	31 c9                	xor    %ecx,%ecx
    5a9a:	48 85 f6             	test   %rsi,%rsi
    5a9d:	74 29                	je     5ac8 <get_zeros_padding+0x48>
    5a9f:	90                   	nop
    5aa0:	49 89 f1             	mov    %rsi,%r9
    5aa3:	48 83 ee 01          	sub    $0x1,%rsi
    5aa7:	89 c8                	mov    %ecx,%eax
    5aa9:	80 3c 37 00          	cmpb   $0x0,(%rdi,%rsi,1)
    5aad:	41 0f 95 c2          	setne  %r10b
    5ab1:	44 09 d1             	or     %r10d,%ecx
    5ab4:	31 c8                	xor    %ecx,%eax
    5ab6:	0f b6 c0             	movzbl %al,%eax
    5ab9:	49 0f af c1          	imul   %r9,%rax
    5abd:	49 09 c0             	or     %rax,%r8
    5ac0:	4c 89 02             	mov    %r8,(%rdx)
    5ac3:	48 85 f6             	test   %rsi,%rsi
    5ac6:	75 d8                	jne    5aa0 <get_zeros_padding+0x20>
    5ac8:	31 c0                	xor    %eax,%eax
    5aca:	c3                   	retq   
    5acb:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5ad0:	c3                   	retq   
    5ad1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5ad8:	00 00 00 00 
    5adc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005ae0 <mbedtls_cipher_list>:
    5ae0:	f3 0f 1e fa          	endbr64 
    5ae4:	8b 05 6e a5 02 00    	mov    0x2a56e(%rip),%eax        # 30058 <supported_init>
    5aea:	85 c0                	test   %eax,%eax
    5aec:	75 42                	jne    5b30 <mbedtls_cipher_list+0x50>
    5aee:	8b 15 cc 81 02 00    	mov    0x281cc(%rip),%edx        # 2dcc0 <mbedtls_cipher_definitions>
    5af4:	48 8d 05 85 c9 02 00 	lea    0x2c985(%rip),%rax        # 32480 <mbedtls_cipher_supported>
    5afb:	85 d2                	test   %edx,%edx
    5afd:	74 21                	je     5b20 <mbedtls_cipher_list+0x40>
    5aff:	48 8d 0d ba 81 02 00 	lea    0x281ba(%rip),%rcx        # 2dcc0 <mbedtls_cipher_definitions>
    5b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5b0d:	00 00 00 
    5b10:	48 83 c1 10          	add    $0x10,%rcx
    5b14:	89 10                	mov    %edx,(%rax)
    5b16:	48 83 c0 04          	add    $0x4,%rax
    5b1a:	8b 11                	mov    (%rcx),%edx
    5b1c:	85 d2                	test   %edx,%edx
    5b1e:	75 f0                	jne    5b10 <mbedtls_cipher_list+0x30>
    5b20:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    5b26:	c7 05 28 a5 02 00 01 	movl   $0x1,0x2a528(%rip)        # 30058 <supported_init>
    5b2d:	00 00 00 
    5b30:	48 8d 05 49 c9 02 00 	lea    0x2c949(%rip),%rax        # 32480 <mbedtls_cipher_supported>
    5b37:	c3                   	retq   
    5b38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5b3f:	00 

0000000000005b40 <mbedtls_cipher_info_from_type>:
    5b40:	f3 0f 1e fa          	endbr64 
    5b44:	4c 8b 05 7d 81 02 00 	mov    0x2817d(%rip),%r8        # 2dcc8 <mbedtls_cipher_definitions+0x8>
    5b4b:	4d 85 c0             	test   %r8,%r8
    5b4e:	74 21                	je     5b71 <mbedtls_cipher_info_from_type+0x31>
    5b50:	48 8d 05 69 81 02 00 	lea    0x28169(%rip),%rax        # 2dcc0 <mbedtls_cipher_definitions>
    5b57:	eb 14                	jmp    5b6d <mbedtls_cipher_info_from_type+0x2d>
    5b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5b60:	4c 8b 40 18          	mov    0x18(%rax),%r8
    5b64:	48 83 c0 10          	add    $0x10,%rax
    5b68:	4d 85 c0             	test   %r8,%r8
    5b6b:	74 04                	je     5b71 <mbedtls_cipher_info_from_type+0x31>
    5b6d:	39 38                	cmp    %edi,(%rax)
    5b6f:	75 ef                	jne    5b60 <mbedtls_cipher_info_from_type+0x20>
    5b71:	4c 89 c0             	mov    %r8,%rax
    5b74:	c3                   	retq   
    5b75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5b7c:	00 00 00 00 

0000000000005b80 <mbedtls_cipher_info_from_string>:
    5b80:	f3 0f 1e fa          	endbr64 
    5b84:	41 54                	push   %r12
    5b86:	55                   	push   %rbp
    5b87:	53                   	push   %rbx
    5b88:	48 85 ff             	test   %rdi,%rdi
    5b8b:	74 41                	je     5bce <mbedtls_cipher_info_from_string+0x4e>
    5b8d:	4c 8b 25 34 81 02 00 	mov    0x28134(%rip),%r12        # 2dcc8 <mbedtls_cipher_definitions+0x8>
    5b94:	4d 85 e4             	test   %r12,%r12
    5b97:	74 2d                	je     5bc6 <mbedtls_cipher_info_from_string+0x46>
    5b99:	48 89 fd             	mov    %rdi,%rbp
    5b9c:	48 8d 1d 1d 81 02 00 	lea    0x2811d(%rip),%rbx        # 2dcc0 <mbedtls_cipher_definitions>
    5ba3:	eb 10                	jmp    5bb5 <mbedtls_cipher_info_from_string+0x35>
    5ba5:	0f 1f 00             	nopl   (%rax)
    5ba8:	4c 8b 63 18          	mov    0x18(%rbx),%r12
    5bac:	48 83 c3 10          	add    $0x10,%rbx
    5bb0:	4d 85 e4             	test   %r12,%r12
    5bb3:	74 11                	je     5bc6 <mbedtls_cipher_info_from_string+0x46>
    5bb5:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    5bba:	48 89 ee             	mov    %rbp,%rsi
    5bbd:	e8 0e d7 ff ff       	callq  32d0 <strcmp@plt>
    5bc2:	85 c0                	test   %eax,%eax
    5bc4:	75 e2                	jne    5ba8 <mbedtls_cipher_info_from_string+0x28>
    5bc6:	4c 89 e0             	mov    %r12,%rax
    5bc9:	5b                   	pop    %rbx
    5bca:	5d                   	pop    %rbp
    5bcb:	41 5c                	pop    %r12
    5bcd:	c3                   	retq   
    5bce:	45 31 e4             	xor    %r12d,%r12d
    5bd1:	eb f3                	jmp    5bc6 <mbedtls_cipher_info_from_string+0x46>
    5bd3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5bda:	00 00 00 00 
    5bde:	66 90                	xchg   %ax,%ax

0000000000005be0 <mbedtls_cipher_info_from_values>:
    5be0:	f3 0f 1e fa          	endbr64 
    5be4:	48 8b 05 dd 80 02 00 	mov    0x280dd(%rip),%rax        # 2dcc8 <mbedtls_cipher_definitions+0x8>
    5beb:	48 85 c0             	test   %rax,%rax
    5bee:	74 30                	je     5c20 <mbedtls_cipher_info_from_values+0x40>
    5bf0:	48 8d 0d c9 80 02 00 	lea    0x280c9(%rip),%rcx        # 2dcc0 <mbedtls_cipher_definitions>
    5bf7:	eb 14                	jmp    5c0d <mbedtls_cipher_info_from_values+0x2d>
    5bf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5c00:	48 8b 41 18          	mov    0x18(%rcx),%rax
    5c04:	48 83 c1 10          	add    $0x10,%rcx
    5c08:	48 85 c0             	test   %rax,%rax
    5c0b:	74 13                	je     5c20 <mbedtls_cipher_info_from_values+0x40>
    5c0d:	4c 8b 40 28          	mov    0x28(%rax),%r8
    5c11:	41 39 38             	cmp    %edi,(%r8)
    5c14:	75 ea                	jne    5c00 <mbedtls_cipher_info_from_values+0x20>
    5c16:	39 70 08             	cmp    %esi,0x8(%rax)
    5c19:	75 e5                	jne    5c00 <mbedtls_cipher_info_from_values+0x20>
    5c1b:	39 50 04             	cmp    %edx,0x4(%rax)
    5c1e:	75 e0                	jne    5c00 <mbedtls_cipher_info_from_values+0x20>
    5c20:	c3                   	retq   
    5c21:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5c28:	00 00 00 00 
    5c2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005c30 <mbedtls_cipher_init>:
    5c30:	f3 0f 1e fa          	endbr64 
    5c34:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    5c3b:	48 89 f9             	mov    %rdi,%rcx
    5c3e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    5c42:	31 c0                	xor    %eax,%eax
    5c44:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
    5c4b:	00 
    5c4c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5c50:	48 29 f9             	sub    %rdi,%rcx
    5c53:	83 c1 60             	add    $0x60,%ecx
    5c56:	c1 e9 03             	shr    $0x3,%ecx
    5c59:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5c5c:	c3                   	retq   
    5c5d:	0f 1f 00             	nopl   (%rax)

0000000000005c60 <mbedtls_cipher_free>:
    5c60:	f3 0f 1e fa          	endbr64 
    5c64:	48 85 ff             	test   %rdi,%rdi
    5c67:	74 47                	je     5cb0 <mbedtls_cipher_free+0x50>
    5c69:	55                   	push   %rbp
    5c6a:	48 89 fd             	mov    %rdi,%rbp
    5c6d:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
    5c71:	48 85 ff             	test   %rdi,%rdi
    5c74:	74 13                	je     5c89 <mbedtls_cipher_free+0x29>
    5c76:	be 28 00 00 00       	mov    $0x28,%esi
    5c7b:	e8 b0 f5 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    5c80:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    5c84:	e8 57 d5 ff ff       	callq  31e0 <free@plt>
    5c89:	48 8b 7d 50          	mov    0x50(%rbp),%rdi
    5c8d:	48 85 ff             	test   %rdi,%rdi
    5c90:	74 0b                	je     5c9d <mbedtls_cipher_free+0x3d>
    5c92:	48 8b 45 00          	mov    0x0(%rbp),%rax
    5c96:	48 8b 40 28          	mov    0x28(%rax),%rax
    5c9a:	ff 50 58             	callq  *0x58(%rax)
    5c9d:	48 89 ef             	mov    %rbp,%rdi
    5ca0:	be 60 00 00 00       	mov    $0x60,%esi
    5ca5:	5d                   	pop    %rbp
    5ca6:	e9 85 f5 ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    5cab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5cb0:	c3                   	retq   
    5cb1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5cb8:	00 00 00 00 
    5cbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005cc0 <mbedtls_cipher_setup>:
    5cc0:	f3 0f 1e fa          	endbr64 
    5cc4:	48 85 f6             	test   %rsi,%rsi
    5cc7:	74 7b                	je     5d44 <mbedtls_cipher_setup+0x84>
    5cc9:	55                   	push   %rbp
    5cca:	31 c0                	xor    %eax,%eax
    5ccc:	48 89 f5             	mov    %rsi,%rbp
    5ccf:	53                   	push   %rbx
    5cd0:	48 89 fb             	mov    %rdi,%rbx
    5cd3:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    5cd7:	48 89 d9             	mov    %rbx,%rcx
    5cda:	48 83 ec 08          	sub    $0x8,%rsp
    5cde:	48 c7 47 f8 00 00 00 	movq   $0x0,-0x8(%rdi)
    5ce5:	00 
    5ce6:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
    5ced:	00 
    5cee:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5cf2:	48 29 f9             	sub    %rdi,%rcx
    5cf5:	83 c1 60             	add    $0x60,%ecx
    5cf8:	c1 e9 03             	shr    $0x3,%ecx
    5cfb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5cfe:	48 8b 46 28          	mov    0x28(%rsi),%rax
    5d02:	ff 50 50             	callq  *0x50(%rax)
    5d05:	48 89 43 50          	mov    %rax,0x50(%rbx)
    5d09:	48 85 c0             	test   %rax,%rax
    5d0c:	74 3c                	je     5d4a <mbedtls_cipher_setup+0x8a>
    5d0e:	83 7d 04 02          	cmpl   $0x2,0x4(%rbp)
    5d12:	48 89 2b             	mov    %rbp,(%rbx)
    5d15:	75 29                	jne    5d40 <mbedtls_cipher_setup+0x80>
    5d17:	48 8d 05 22 fb ff ff 	lea    -0x4de(%rip),%rax        # 5840 <add_pkcs_padding>
    5d1e:	48 89 43 10          	mov    %rax,0x10(%rbx)
    5d22:	48 8d 05 57 fb ff ff 	lea    -0x4a9(%rip),%rax        # 5880 <get_pkcs_padding>
    5d29:	48 89 43 18          	mov    %rax,0x18(%rbx)
    5d2d:	31 c0                	xor    %eax,%eax
    5d2f:	48 83 c4 08          	add    $0x8,%rsp
    5d33:	5b                   	pop    %rbx
    5d34:	5d                   	pop    %rbp
    5d35:	c3                   	retq   
    5d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5d3d:	00 00 00 
    5d40:	31 c0                	xor    %eax,%eax
    5d42:	eb eb                	jmp    5d2f <mbedtls_cipher_setup+0x6f>
    5d44:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5d49:	c3                   	retq   
    5d4a:	b8 80 9e ff ff       	mov    $0xffff9e80,%eax
    5d4f:	eb de                	jmp    5d2f <mbedtls_cipher_setup+0x6f>
    5d51:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5d58:	00 00 00 00 
    5d5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005d60 <mbedtls_cipher_setkey>:
    5d60:	f3 0f 1e fa          	endbr64 
    5d64:	83 f9 01             	cmp    $0x1,%ecx
    5d67:	77 3c                	ja     5da5 <mbedtls_cipher_setkey+0x45>
    5d69:	48 8b 07             	mov    (%rdi),%rax
    5d6c:	48 85 c0             	test   %rax,%rax
    5d6f:	74 34                	je     5da5 <mbedtls_cipher_setkey+0x45>
    5d71:	f6 40 1c 02          	testb  $0x2,0x1c(%rax)
    5d75:	74 29                	je     5da0 <mbedtls_cipher_setkey+0x40>
    5d77:	89 57 08             	mov    %edx,0x8(%rdi)
    5d7a:	4c 8b 40 28          	mov    0x28(%rax),%r8
    5d7e:	89 4f 0c             	mov    %ecx,0xc(%rdi)
    5d81:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    5d85:	83 f9 01             	cmp    $0x1,%ecx
    5d88:	74 0b                	je     5d95 <mbedtls_cipher_setkey+0x35>
    5d8a:	8b 40 04             	mov    0x4(%rax),%eax
    5d8d:	83 e8 03             	sub    $0x3,%eax
    5d90:	83 f8 02             	cmp    $0x2,%eax
    5d93:	77 1b                	ja     5db0 <mbedtls_cipher_setkey+0x50>
    5d95:	41 ff 60 40          	jmpq   *0x40(%r8)
    5d99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5da0:	39 50 08             	cmp    %edx,0x8(%rax)
    5da3:	74 d2                	je     5d77 <mbedtls_cipher_setkey+0x17>
    5da5:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5daa:	c3                   	retq   
    5dab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5db0:	41 ff 60 48          	jmpq   *0x48(%r8)
    5db4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5dbb:	00 00 00 00 
    5dbf:	90                   	nop

0000000000005dc0 <mbedtls_cipher_set_iv>:
    5dc0:	f3 0f 1e fa          	endbr64 
    5dc4:	48 8b 07             	mov    (%rdi),%rax
    5dc7:	48 85 c0             	test   %rax,%rax
    5dca:	0f 84 ea 01 00 00    	je     5fba <mbedtls_cipher_set_iv+0x1fa>
    5dd0:	41 55                	push   %r13
    5dd2:	41 54                	push   %r12
    5dd4:	49 89 d4             	mov    %rdx,%r12
    5dd7:	55                   	push   %rbp
    5dd8:	53                   	push   %rbx
    5dd9:	48 83 ec 08          	sub    $0x8,%rsp
    5ddd:	48 83 fa 10          	cmp    $0x10,%rdx
    5de1:	0f 87 c9 01 00 00    	ja     5fb0 <mbedtls_cipher_set_iv+0x1f0>
    5de7:	48 89 fb             	mov    %rdi,%rbx
    5dea:	49 89 f5             	mov    %rsi,%r13
    5ded:	f6 40 1c 01          	testb  $0x1,0x1c(%rax)
    5df1:	75 4d                	jne    5e40 <mbedtls_cipher_set_iv+0x80>
    5df3:	8b 68 18             	mov    0x18(%rax),%ebp
    5df6:	48 39 ea             	cmp    %rbp,%rdx
    5df9:	0f 82 79 01 00 00    	jb     5f78 <mbedtls_cipher_set_iv+0x1b8>
    5dff:	8b 10                	mov    (%rax),%edx
    5e01:	83 fa 4c             	cmp    $0x4c,%edx
    5e04:	74 44                	je     5e4a <mbedtls_cipher_set_iv+0x8a>
    5e06:	49 83 fc 0c          	cmp    $0xc,%r12
    5e0a:	74 09                	je     5e15 <mbedtls_cipher_set_iv+0x55>
    5e0c:	83 fa 4d             	cmp    $0x4d,%edx
    5e0f:	0f 84 63 01 00 00    	je     5f78 <mbedtls_cipher_set_iv+0x1b8>
    5e15:	8b 40 04             	mov    0x4(%rax),%eax
    5e18:	83 f8 06             	cmp    $0x6,%eax
    5e1b:	74 58                	je     5e75 <mbedtls_cipher_set_iv+0xb5>
    5e1d:	83 f8 09             	cmp    $0x9,%eax
    5e20:	0f 84 0a 01 00 00    	je     5f30 <mbedtls_cipher_set_iv+0x170>
    5e26:	31 c0                	xor    %eax,%eax
    5e28:	48 85 ed             	test   %rbp,%rbp
    5e2b:	75 6b                	jne    5e98 <mbedtls_cipher_set_iv+0xd8>
    5e2d:	48 83 c4 08          	add    $0x8,%rsp
    5e31:	5b                   	pop    %rbx
    5e32:	5d                   	pop    %rbp
    5e33:	41 5c                	pop    %r12
    5e35:	41 5d                	pop    %r13
    5e37:	c3                   	retq   
    5e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5e3f:	00 
    5e40:	48 89 d5             	mov    %rdx,%rbp
    5e43:	8b 10                	mov    (%rax),%edx
    5e45:	83 fa 4c             	cmp    $0x4c,%edx
    5e48:	75 bc                	jne    5e06 <mbedtls_cipher_set_iv+0x46>
    5e4a:	49 83 fc 0c          	cmp    $0xc,%r12
    5e4e:	0f 85 24 01 00 00    	jne    5f78 <mbedtls_cipher_set_iv+0x1b8>
    5e54:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5e58:	31 d2                	xor    %edx,%edx
    5e5a:	4c 89 ee             	mov    %r13,%rsi
    5e5d:	e8 de 91 01 00       	callq  1f040 <mbedtls_chacha20_starts>
    5e62:	85 c0                	test   %eax,%eax
    5e64:	0f 85 0e 01 00 00    	jne    5f78 <mbedtls_cipher_set_iv+0x1b8>
    5e6a:	48 8b 03             	mov    (%rbx),%rax
    5e6d:	8b 40 04             	mov    0x4(%rax),%eax
    5e70:	83 f8 06             	cmp    $0x6,%eax
    5e73:	75 a8                	jne    5e1d <mbedtls_cipher_set_iv+0x5d>
    5e75:	8b 73 0c             	mov    0xc(%rbx),%esi
    5e78:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5e7c:	48 83 c4 08          	add    $0x8,%rsp
    5e80:	4c 89 e1             	mov    %r12,%rcx
    5e83:	5b                   	pop    %rbx
    5e84:	4c 89 ea             	mov    %r13,%rdx
    5e87:	5d                   	pop    %rbp
    5e88:	41 5c                	pop    %r12
    5e8a:	41 5d                	pop    %r13
    5e8c:	e9 2f e1 ff ff       	jmpq   3fc0 <mbedtls_gcm_starts>
    5e91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5e98:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    5e9c:	89 e8                	mov    %ebp,%eax
    5e9e:	83 fd 08             	cmp    $0x8,%ebp
    5ea1:	72 5d                	jb     5f00 <mbedtls_cipher_set_iv+0x140>
    5ea3:	49 8b 45 00          	mov    0x0(%r13),%rax
    5ea7:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    5eab:	4c 89 ee             	mov    %r13,%rsi
    5eae:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5eb2:	48 89 43 38          	mov    %rax,0x38(%rbx)
    5eb6:	89 e8                	mov    %ebp,%eax
    5eb8:	49 8b 54 05 f8       	mov    -0x8(%r13,%rax,1),%rdx
    5ebd:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    5ec2:	48 29 f9             	sub    %rdi,%rcx
    5ec5:	8d 44 0d 00          	lea    0x0(%rbp,%rcx,1),%eax
    5ec9:	48 29 ce             	sub    %rcx,%rsi
    5ecc:	83 e0 f8             	and    $0xfffffff8,%eax
    5ecf:	83 f8 08             	cmp    $0x8,%eax
    5ed2:	72 16                	jb     5eea <mbedtls_cipher_set_iv+0x12a>
    5ed4:	83 e0 f8             	and    $0xfffffff8,%eax
    5ed7:	31 d2                	xor    %edx,%edx
    5ed9:	89 d1                	mov    %edx,%ecx
    5edb:	83 c2 08             	add    $0x8,%edx
    5ede:	4c 8b 04 0e          	mov    (%rsi,%rcx,1),%r8
    5ee2:	4c 89 04 0f          	mov    %r8,(%rdi,%rcx,1)
    5ee6:	39 c2                	cmp    %eax,%edx
    5ee8:	72 ef                	jb     5ed9 <mbedtls_cipher_set_iv+0x119>
    5eea:	48 89 6b 48          	mov    %rbp,0x48(%rbx)
    5eee:	48 83 c4 08          	add    $0x8,%rsp
    5ef2:	31 c0                	xor    %eax,%eax
    5ef4:	5b                   	pop    %rbx
    5ef5:	5d                   	pop    %rbp
    5ef6:	41 5c                	pop    %r12
    5ef8:	41 5d                	pop    %r13
    5efa:	c3                   	retq   
    5efb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5f00:	40 f6 c5 04          	test   $0x4,%bpl
    5f04:	0f 85 86 00 00 00    	jne    5f90 <mbedtls_cipher_set_iv+0x1d0>
    5f0a:	85 ed                	test   %ebp,%ebp
    5f0c:	74 dc                	je     5eea <mbedtls_cipher_set_iv+0x12a>
    5f0e:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
    5f13:	88 53 38             	mov    %dl,0x38(%rbx)
    5f16:	a8 02                	test   $0x2,%al
    5f18:	74 d0                	je     5eea <mbedtls_cipher_set_iv+0x12a>
    5f1a:	89 ea                	mov    %ebp,%edx
    5f1c:	41 0f b7 44 15 fe    	movzwl -0x2(%r13,%rdx,1),%eax
    5f22:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    5f27:	eb c1                	jmp    5eea <mbedtls_cipher_set_iv+0x12a>
    5f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5f30:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5f34:	31 c9                	xor    %ecx,%ecx
    5f36:	31 d2                	xor    %edx,%edx
    5f38:	31 f6                	xor    %esi,%esi
    5f3a:	e8 81 80 01 00       	callq  1dfc0 <mbedtls_ccm_set_lengths>
    5f3f:	85 c0                	test   %eax,%eax
    5f41:	0f 85 e6 fe ff ff    	jne    5e2d <mbedtls_cipher_set_iv+0x6d>
    5f47:	8b 43 0c             	mov    0xc(%rbx),%eax
    5f4a:	85 c0                	test   %eax,%eax
    5f4c:	74 3a                	je     5f88 <mbedtls_cipher_set_iv+0x1c8>
    5f4e:	83 f8 01             	cmp    $0x1,%eax
    5f51:	75 25                	jne    5f78 <mbedtls_cipher_set_iv+0x1b8>
    5f53:	be 03 00 00 00       	mov    $0x3,%esi
    5f58:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5f5c:	48 83 c4 08          	add    $0x8,%rsp
    5f60:	4c 89 e1             	mov    %r12,%rcx
    5f63:	4c 89 ea             	mov    %r13,%rdx
    5f66:	5b                   	pop    %rbx
    5f67:	5d                   	pop    %rbp
    5f68:	41 5c                	pop    %r12
    5f6a:	41 5d                	pop    %r13
    5f6c:	e9 3f 7f 01 00       	jmpq   1deb0 <mbedtls_ccm_starts>
    5f71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5f78:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5f7d:	e9 ab fe ff ff       	jmpq   5e2d <mbedtls_cipher_set_iv+0x6d>
    5f82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5f88:	be 02 00 00 00       	mov    $0x2,%esi
    5f8d:	eb c9                	jmp    5f58 <mbedtls_cipher_set_iv+0x198>
    5f8f:	90                   	nop
    5f90:	41 8b 55 00          	mov    0x0(%r13),%edx
    5f94:	89 53 38             	mov    %edx,0x38(%rbx)
    5f97:	89 ea                	mov    %ebp,%edx
    5f99:	41 8b 44 15 fc       	mov    -0x4(%r13,%rdx,1),%eax
    5f9e:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    5fa2:	e9 43 ff ff ff       	jmpq   5eea <mbedtls_cipher_set_iv+0x12a>
    5fa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5fae:	00 00 
    5fb0:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    5fb5:	e9 73 fe ff ff       	jmpq   5e2d <mbedtls_cipher_set_iv+0x6d>
    5fba:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5fbf:	c3                   	retq   

0000000000005fc0 <mbedtls_cipher_reset>:
    5fc0:	f3 0f 1e fa          	endbr64 
    5fc4:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    5fc8:	74 0b                	je     5fd5 <mbedtls_cipher_reset+0x15>
    5fca:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
    5fd1:	00 
    5fd2:	31 c0                	xor    %eax,%eax
    5fd4:	c3                   	retq   
    5fd5:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5fda:	c3                   	retq   
    5fdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005fe0 <mbedtls_cipher_update_ad>:
    5fe0:	f3 0f 1e fa          	endbr64 
    5fe4:	48 8b 07             	mov    (%rdi),%rax
    5fe7:	48 85 c0             	test   %rax,%rax
    5fea:	74 6b                	je     6057 <mbedtls_cipher_update_ad+0x77>
    5fec:	41 54                	push   %r12
    5fee:	49 89 d4             	mov    %rdx,%r12
    5ff1:	55                   	push   %rbp
    5ff2:	48 89 f5             	mov    %rsi,%rbp
    5ff5:	53                   	push   %rbx
    5ff6:	83 78 04 06          	cmpl   $0x6,0x4(%rax)
    5ffa:	48 89 fb             	mov    %rdi,%rbx
    5ffd:	74 41                	je     6040 <mbedtls_cipher_update_ad+0x60>
    5fff:	83 38 4d             	cmpl   $0x4d,(%rax)
    6002:	75 4c                	jne    6050 <mbedtls_cipher_update_ad+0x70>
    6004:	31 d2                	xor    %edx,%edx
    6006:	48 8d 77 38          	lea    0x38(%rdi),%rsi
    600a:	83 7f 0c 01          	cmpl   $0x1,0xc(%rdi)
    600e:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6012:	0f 95 c2             	setne  %dl
    6015:	e8 e6 96 01 00       	callq  1f700 <mbedtls_chachapoly_starts>
    601a:	85 c0                	test   %eax,%eax
    601c:	74 0a                	je     6028 <mbedtls_cipher_update_ad+0x48>
    601e:	5b                   	pop    %rbx
    601f:	5d                   	pop    %rbp
    6020:	41 5c                	pop    %r12
    6022:	c3                   	retq   
    6023:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6028:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    602c:	4c 89 e2             	mov    %r12,%rdx
    602f:	5b                   	pop    %rbx
    6030:	48 89 ee             	mov    %rbp,%rsi
    6033:	5d                   	pop    %rbp
    6034:	41 5c                	pop    %r12
    6036:	e9 a5 97 01 00       	jmpq   1f7e0 <mbedtls_chachapoly_update_aad>
    603b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6040:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6044:	5b                   	pop    %rbx
    6045:	5d                   	pop    %rbp
    6046:	41 5c                	pop    %r12
    6048:	e9 33 e1 ff ff       	jmpq   4180 <mbedtls_gcm_update_ad>
    604d:	0f 1f 00             	nopl   (%rax)
    6050:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6055:	eb c7                	jmp    601e <mbedtls_cipher_update_ad+0x3e>
    6057:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    605c:	c3                   	retq   
    605d:	0f 1f 00             	nopl   (%rax)

0000000000006060 <mbedtls_cipher_update>:
    6060:	f3 0f 1e fa          	endbr64 
    6064:	41 57                	push   %r15
    6066:	41 56                	push   %r14
    6068:	49 89 ce             	mov    %rcx,%r14
    606b:	41 55                	push   %r13
    606d:	41 54                	push   %r12
    606f:	55                   	push   %rbp
    6070:	53                   	push   %rbx
    6071:	48 83 ec 18          	sub    $0x18,%rsp
    6075:	48 8b 0f             	mov    (%rdi),%rcx
    6078:	48 85 c9             	test   %rcx,%rcx
    607b:	0f 84 37 02 00 00    	je     62b8 <mbedtls_cipher_update+0x258>
    6081:	44 8b 79 20          	mov    0x20(%rcx),%r15d
    6085:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    608c:	4c 89 c5             	mov    %r8,%rbp
    608f:	4d 85 ff             	test   %r15,%r15
    6092:	0f 84 a8 03 00 00    	je     6440 <mbedtls_cipher_update+0x3e0>
    6098:	49 89 f5             	mov    %rsi,%r13
    609b:	8b 71 04             	mov    0x4(%rcx),%esi
    609e:	48 89 fb             	mov    %rdi,%rbx
    60a1:	49 89 d4             	mov    %rdx,%r12
    60a4:	83 fe 01             	cmp    $0x1,%esi
    60a7:	74 77                	je     6120 <mbedtls_cipher_update+0xc0>
    60a9:	83 fe 06             	cmp    $0x6,%esi
    60ac:	0f 84 16 02 00 00    	je     62c8 <mbedtls_cipher_update+0x268>
    60b2:	83 fe 09             	cmp    $0x9,%esi
    60b5:	0f 84 35 02 00 00    	je     62f0 <mbedtls_cipher_update+0x290>
    60bb:	83 39 4d             	cmpl   $0x4d,(%rcx)
    60be:	0f 84 dc 00 00 00    	je     61a0 <mbedtls_cipher_update+0x140>
    60c4:	4d 39 f5             	cmp    %r14,%r13
    60c7:	0f 84 d3 01 00 00    	je     62a0 <mbedtls_cipher_update+0x240>
    60cd:	83 fe 02             	cmp    $0x2,%esi
    60d0:	0f 84 f2 00 00 00    	je     61c8 <mbedtls_cipher_update+0x168>
    60d6:	83 fe 03             	cmp    $0x3,%esi
    60d9:	74 7d                	je     6158 <mbedtls_cipher_update+0xf8>
    60db:	83 fe 04             	cmp    $0x4,%esi
    60de:	0f 84 34 02 00 00    	je     6318 <mbedtls_cipher_update+0x2b8>
    60e4:	83 fe 05             	cmp    $0x5,%esi
    60e7:	0f 84 63 02 00 00    	je     6350 <mbedtls_cipher_update+0x2f0>
    60ed:	83 fe 0a             	cmp    $0xa,%esi
    60f0:	0f 84 02 03 00 00    	je     63f8 <mbedtls_cipher_update+0x398>
    60f6:	83 fe 07             	cmp    $0x7,%esi
    60f9:	0f 85 55 03 00 00    	jne    6454 <mbedtls_cipher_update+0x3f4>
    60ff:	48 8b 41 28          	mov    0x28(%rcx),%rax
    6103:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6107:	4c 89 f1             	mov    %r14,%rcx
    610a:	4c 89 ea             	mov    %r13,%rdx
    610d:	4c 89 e6             	mov    %r12,%rsi
    6110:	ff 50 38             	callq  *0x38(%rax)
    6113:	85 c0                	test   %eax,%eax
    6115:	75 70                	jne    6187 <mbedtls_cipher_update+0x127>
    6117:	eb 6a                	jmp    6183 <mbedtls_cipher_update+0x123>
    6119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6120:	49 39 d7             	cmp    %rdx,%r15
    6123:	0f 85 21 03 00 00    	jne    644a <mbedtls_cipher_update+0x3ea>
    6129:	48 8b 41 28          	mov    0x28(%rcx),%rax
    612d:	4d 89 38             	mov    %r15,(%r8)
    6130:	4c 89 f1             	mov    %r14,%rcx
    6133:	4c 89 ea             	mov    %r13,%rdx
    6136:	8b 77 0c             	mov    0xc(%rdi),%esi
    6139:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    613d:	48 8b 40 08          	mov    0x8(%rax),%rax
    6141:	48 83 c4 18          	add    $0x18,%rsp
    6145:	5b                   	pop    %rbx
    6146:	5d                   	pop    %rbp
    6147:	41 5c                	pop    %r12
    6149:	41 5d                	pop    %r13
    614b:	41 5e                	pop    %r14
    614d:	41 5f                	pop    %r15
    614f:	ff e0                	jmpq   *%rax
    6151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6158:	48 8b 41 28          	mov    0x28(%rcx),%rax
    615c:	48 83 ec 08          	sub    $0x8,%rsp
    6160:	4c 8d 53 30          	lea    0x30(%rbx),%r10
    6164:	8b 73 0c             	mov    0xc(%rbx),%esi
    6167:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    616b:	4d 89 e9             	mov    %r13,%r9
    616e:	41 56                	push   %r14
    6170:	4c 8d 43 38          	lea    0x38(%rbx),%r8
    6174:	4c 89 d1             	mov    %r10,%rcx
    6177:	4c 89 e2             	mov    %r12,%rdx
    617a:	ff 50 18             	callq  *0x18(%rax)
    617d:	5e                   	pop    %rsi
    617e:	5f                   	pop    %rdi
    617f:	85 c0                	test   %eax,%eax
    6181:	75 04                	jne    6187 <mbedtls_cipher_update+0x127>
    6183:	4c 89 65 00          	mov    %r12,0x0(%rbp)
    6187:	48 83 c4 18          	add    $0x18,%rsp
    618b:	5b                   	pop    %rbx
    618c:	5d                   	pop    %rbp
    618d:	41 5c                	pop    %r12
    618f:	41 5d                	pop    %r13
    6191:	41 5e                	pop    %r14
    6193:	41 5f                	pop    %r15
    6195:	c3                   	retq   
    6196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    619d:	00 00 00 
    61a0:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    61a4:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    61a8:	48 83 c4 18          	add    $0x18,%rsp
    61ac:	4c 89 f1             	mov    %r14,%rcx
    61af:	5b                   	pop    %rbx
    61b0:	4c 89 ea             	mov    %r13,%rdx
    61b3:	5d                   	pop    %rbp
    61b4:	4c 89 e6             	mov    %r12,%rsi
    61b7:	41 5c                	pop    %r12
    61b9:	41 5d                	pop    %r13
    61bb:	41 5e                	pop    %r14
    61bd:	41 5f                	pop    %r15
    61bf:	e9 4c 96 01 00       	jmpq   1f810 <mbedtls_chachapoly_update>
    61c4:	0f 1f 40 00          	nopl   0x0(%rax)
    61c8:	8b 43 0c             	mov    0xc(%rbx),%eax
    61cb:	4c 8b 53 30          	mov    0x30(%rbx),%r10
    61cf:	85 c0                	test   %eax,%eax
    61d1:	74 2d                	je     6200 <mbedtls_cipher_update+0x1a0>
    61d3:	83 f8 01             	cmp    $0x1,%eax
    61d6:	75 3e                	jne    6216 <mbedtls_cipher_update+0x1b6>
    61d8:	4c 89 f8             	mov    %r15,%rax
    61db:	4c 29 d0             	sub    %r10,%rax
    61de:	4c 39 e0             	cmp    %r12,%rax
    61e1:	76 33                	jbe    6216 <mbedtls_cipher_update+0x1b6>
    61e3:	4a 8d 7c 13 20       	lea    0x20(%rbx,%r10,1),%rdi
    61e8:	4c 89 e2             	mov    %r12,%rdx
    61eb:	4c 89 ee             	mov    %r13,%rsi
    61ee:	e8 1d d1 ff ff       	callq  3310 <memcpy@plt>
    61f3:	4c 01 63 30          	add    %r12,0x30(%rbx)
    61f7:	31 c0                	xor    %eax,%eax
    61f9:	eb 8c                	jmp    6187 <mbedtls_cipher_update+0x127>
    61fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6200:	4c 89 f8             	mov    %r15,%rax
    6203:	4c 29 d0             	sub    %r10,%rax
    6206:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    620b:	0f 84 1f 02 00 00    	je     6430 <mbedtls_cipher_update+0x3d0>
    6211:	49 39 c4             	cmp    %rax,%r12
    6214:	76 cd                	jbe    61e3 <mbedtls_cipher_update+0x183>
    6216:	4d 85 d2             	test   %r10,%r10
    6219:	0f 85 69 01 00 00    	jne    6388 <mbedtls_cipher_update+0x328>
    621f:	4d 85 e4             	test   %r12,%r12
    6222:	0f 84 20 01 00 00    	je     6348 <mbedtls_cipher_update+0x2e8>
    6228:	4c 89 e0             	mov    %r12,%rax
    622b:	31 d2                	xor    %edx,%edx
    622d:	49 f7 f7             	div    %r15
    6230:	48 85 d2             	test   %rdx,%rdx
    6233:	75 11                	jne    6246 <mbedtls_cipher_update+0x1e6>
    6235:	8b 73 0c             	mov    0xc(%rbx),%esi
    6238:	85 f6                	test   %esi,%esi
    623a:	75 33                	jne    626f <mbedtls_cipher_update+0x20f>
    623c:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    6241:	74 2c                	je     626f <mbedtls_cipher_update+0x20f>
    6243:	4c 89 fa             	mov    %r15,%rdx
    6246:	49 29 d4             	sub    %rdx,%r12
    6249:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    624d:	48 89 14 24          	mov    %rdx,(%rsp)
    6251:	4b 8d 74 25 00       	lea    0x0(%r13,%r12,1),%rsi
    6256:	e8 b5 d0 ff ff       	callq  3310 <memcpy@plt>
    625b:	48 8b 14 24          	mov    (%rsp),%rdx
    625f:	48 01 53 30          	add    %rdx,0x30(%rbx)
    6263:	4d 85 e4             	test   %r12,%r12
    6266:	0f 84 dc 00 00 00    	je     6348 <mbedtls_cipher_update+0x2e8>
    626c:	8b 73 0c             	mov    0xc(%rbx),%esi
    626f:	48 8b 03             	mov    (%rbx),%rax
    6272:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6276:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    627a:	4d 89 f1             	mov    %r14,%r9
    627d:	4d 89 e8             	mov    %r13,%r8
    6280:	4c 89 e2             	mov    %r12,%rdx
    6283:	48 8b 40 28          	mov    0x28(%rax),%rax
    6287:	ff 50 10             	callq  *0x10(%rax)
    628a:	85 c0                	test   %eax,%eax
    628c:	0f 85 f5 fe ff ff    	jne    6187 <mbedtls_cipher_update+0x127>
    6292:	4c 01 65 00          	add    %r12,0x0(%rbp)
    6296:	e9 ec fe ff ff       	jmpq   6187 <mbedtls_cipher_update+0x127>
    629b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    62a0:	48 83 7f 30 00       	cmpq   $0x0,0x30(%rdi)
    62a5:	75 11                	jne    62b8 <mbedtls_cipher_update+0x258>
    62a7:	48 89 d0             	mov    %rdx,%rax
    62aa:	31 d2                	xor    %edx,%edx
    62ac:	49 f7 f7             	div    %r15
    62af:	48 85 d2             	test   %rdx,%rdx
    62b2:	0f 84 15 fe ff ff    	je     60cd <mbedtls_cipher_update+0x6d>
    62b8:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    62bd:	e9 c5 fe ff ff       	jmpq   6187 <mbedtls_cipher_update+0x127>
    62c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    62c8:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    62cc:	48 83 c4 18          	add    $0x18,%rsp
    62d0:	4d 89 c1             	mov    %r8,%r9
    62d3:	4c 89 f1             	mov    %r14,%rcx
    62d6:	5b                   	pop    %rbx
    62d7:	4c 89 ee             	mov    %r13,%rsi
    62da:	5d                   	pop    %rbp
    62db:	49 89 d0             	mov    %rdx,%r8
    62de:	41 5c                	pop    %r12
    62e0:	41 5d                	pop    %r13
    62e2:	41 5e                	pop    %r14
    62e4:	41 5f                	pop    %r15
    62e6:	e9 45 e0 ff ff       	jmpq   4330 <mbedtls_gcm_update>
    62eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    62f0:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    62f4:	48 83 c4 18          	add    $0x18,%rsp
    62f8:	4d 89 c1             	mov    %r8,%r9
    62fb:	4c 89 f1             	mov    %r14,%rcx
    62fe:	5b                   	pop    %rbx
    62ff:	4c 89 ee             	mov    %r13,%rsi
    6302:	5d                   	pop    %rbp
    6303:	49 89 d0             	mov    %rdx,%r8
    6306:	41 5c                	pop    %r12
    6308:	41 5d                	pop    %r13
    630a:	41 5e                	pop    %r14
    630c:	41 5f                	pop    %r15
    630e:	e9 ed 7e 01 00       	jmpq   1e200 <mbedtls_ccm_update>
    6313:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6318:	48 8b 41 28          	mov    0x28(%rcx),%rax
    631c:	4c 8d 53 38          	lea    0x38(%rbx),%r10
    6320:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6324:	48 8d 53 30          	lea    0x30(%rbx),%rdx
    6328:	4d 89 f1             	mov    %r14,%r9
    632b:	4d 89 e8             	mov    %r13,%r8
    632e:	4c 89 d1             	mov    %r10,%rcx
    6331:	4c 89 e6             	mov    %r12,%rsi
    6334:	ff 50 20             	callq  *0x20(%rax)
    6337:	85 c0                	test   %eax,%eax
    6339:	0f 85 48 fe ff ff    	jne    6187 <mbedtls_cipher_update+0x127>
    633f:	e9 3f fe ff ff       	jmpq   6183 <mbedtls_cipher_update+0x123>
    6344:	0f 1f 40 00          	nopl   0x0(%rax)
    6348:	31 c0                	xor    %eax,%eax
    634a:	e9 38 fe ff ff       	jmpq   6187 <mbedtls_cipher_update+0x127>
    634f:	90                   	nop
    6350:	48 8b 41 28          	mov    0x28(%rcx),%rax
    6354:	48 83 ec 08          	sub    $0x8,%rsp
    6358:	4c 8d 53 38          	lea    0x38(%rbx),%r10
    635c:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6360:	48 8d 53 30          	lea    0x30(%rbx),%rdx
    6364:	41 56                	push   %r14
    6366:	4c 89 d1             	mov    %r10,%rcx
    6369:	4d 89 e9             	mov    %r13,%r9
    636c:	4c 8d 43 20          	lea    0x20(%rbx),%r8
    6370:	4c 89 e6             	mov    %r12,%rsi
    6373:	ff 50 28             	callq  *0x28(%rax)
    6376:	5a                   	pop    %rdx
    6377:	59                   	pop    %rcx
    6378:	85 c0                	test   %eax,%eax
    637a:	0f 85 07 fe ff ff    	jne    6187 <mbedtls_cipher_update+0x127>
    6380:	e9 fe fd ff ff       	jmpq   6183 <mbedtls_cipher_update+0x123>
    6385:	0f 1f 00             	nopl   (%rax)
    6388:	4d 89 fb             	mov    %r15,%r11
    638b:	4a 8d 7c 13 20       	lea    0x20(%rbx,%r10,1),%rdi
    6390:	4c 89 ee             	mov    %r13,%rsi
    6393:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    6398:	4d 29 d3             	sub    %r10,%r11
    639b:	4c 89 da             	mov    %r11,%rdx
    639e:	4c 89 1c 24          	mov    %r11,(%rsp)
    63a2:	e8 69 cf ff ff       	callq  3310 <memcpy@plt>
    63a7:	48 8b 03             	mov    (%rbx),%rax
    63aa:	8b 73 0c             	mov    0xc(%rbx),%esi
    63ad:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    63b1:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    63b5:	4d 89 f1             	mov    %r14,%r9
    63b8:	4c 8d 43 20          	lea    0x20(%rbx),%r8
    63bc:	4c 89 fa             	mov    %r15,%rdx
    63bf:	48 8b 40 28          	mov    0x28(%rax),%rax
    63c3:	ff 50 10             	callq  *0x10(%rax)
    63c6:	85 c0                	test   %eax,%eax
    63c8:	0f 85 b9 fd ff ff    	jne    6187 <mbedtls_cipher_update+0x127>
    63ce:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    63d3:	4c 8b 1c 24          	mov    (%rsp),%r11
    63d7:	4d 01 fe             	add    %r15,%r14
    63da:	4c 01 7d 00          	add    %r15,0x0(%rbp)
    63de:	4d 01 d4             	add    %r10,%r12
    63e1:	48 c7 43 30 00 00 00 	movq   $0x0,0x30(%rbx)
    63e8:	00 
    63e9:	4d 01 dd             	add    %r11,%r13
    63ec:	4d 29 fc             	sub    %r15,%r12
    63ef:	e9 2b fe ff ff       	jmpq   621f <mbedtls_cipher_update+0x1bf>
    63f4:	0f 1f 40 00          	nopl   0x0(%rax)
    63f8:	48 83 7b 30 00       	cmpq   $0x0,0x30(%rbx)
    63fd:	75 55                	jne    6454 <mbedtls_cipher_update+0x3f4>
    63ff:	48 8b 41 28          	mov    0x28(%rcx),%rax
    6403:	4c 8d 53 38          	lea    0x38(%rbx),%r10
    6407:	8b 73 0c             	mov    0xc(%rbx),%esi
    640a:	4d 89 f1             	mov    %r14,%r9
    640d:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6411:	4d 89 e8             	mov    %r13,%r8
    6414:	4c 89 d1             	mov    %r10,%rcx
    6417:	4c 89 e2             	mov    %r12,%rdx
    641a:	ff 50 30             	callq  *0x30(%rax)
    641d:	85 c0                	test   %eax,%eax
    641f:	0f 85 62 fd ff ff    	jne    6187 <mbedtls_cipher_update+0x127>
    6425:	e9 59 fd ff ff       	jmpq   6183 <mbedtls_cipher_update+0x123>
    642a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6430:	49 39 c4             	cmp    %rax,%r12
    6433:	0f 83 dd fd ff ff    	jae    6216 <mbedtls_cipher_update+0x1b6>
    6439:	e9 a5 fd ff ff       	jmpq   61e3 <mbedtls_cipher_update+0x183>
    643e:	66 90                	xchg   %ax,%ax
    6440:	b8 80 9c ff ff       	mov    $0xffff9c80,%eax
    6445:	e9 3d fd ff ff       	jmpq   6187 <mbedtls_cipher_update+0x127>
    644a:	b8 80 9d ff ff       	mov    $0xffff9d80,%eax
    644f:	e9 33 fd ff ff       	jmpq   6187 <mbedtls_cipher_update+0x127>
    6454:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6459:	e9 29 fd ff ff       	jmpq   6187 <mbedtls_cipher_update+0x127>
    645e:	66 90                	xchg   %ax,%ax

0000000000006460 <mbedtls_cipher_finish>:
    6460:	f3 0f 1e fa          	endbr64 
    6464:	48 8b 07             	mov    (%rdi),%rax
    6467:	48 85 c0             	test   %rax,%rax
    646a:	0f 84 53 01 00 00    	je     65c3 <mbedtls_cipher_finish+0x163>
    6470:	41 55                	push   %r13
    6472:	41 54                	push   %r12
    6474:	49 89 d4             	mov    %rdx,%r12
    6477:	55                   	push   %rbp
    6478:	53                   	push   %rbx
    6479:	48 83 ec 08          	sub    $0x8,%rsp
    647d:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    6484:	8b 50 04             	mov    0x4(%rax),%edx
    6487:	8d 4a f7             	lea    -0x9(%rdx),%ecx
    648a:	83 f9 01             	cmp    $0x1,%ecx
    648d:	76 61                	jbe    64f0 <mbedtls_cipher_finish+0x90>
    648f:	8d 4a fd             	lea    -0x3(%rdx),%ecx
    6492:	83 f9 04             	cmp    $0x4,%ecx
    6495:	76 59                	jbe    64f0 <mbedtls_cipher_finish+0x90>
    6497:	48 89 fb             	mov    %rdi,%rbx
    649a:	8b 38                	mov    (%rax),%edi
    649c:	8d 4f b4             	lea    -0x4c(%rdi),%ecx
    649f:	83 f9 01             	cmp    $0x1,%ecx
    64a2:	76 4c                	jbe    64f0 <mbedtls_cipher_finish+0x90>
    64a4:	83 fa 01             	cmp    $0x1,%edx
    64a7:	74 57                	je     6500 <mbedtls_cipher_finish+0xa0>
    64a9:	83 fa 02             	cmp    $0x2,%edx
    64ac:	0f 85 ff 00 00 00    	jne    65b1 <mbedtls_cipher_finish+0x151>
    64b2:	48 89 f5             	mov    %rsi,%rbp
    64b5:	8b 73 0c             	mov    0xc(%rbx),%esi
    64b8:	48 8b 53 30          	mov    0x30(%rbx),%rdx
    64bc:	83 fe 01             	cmp    $0x1,%esi
    64bf:	74 5f                	je     6520 <mbedtls_cipher_finish+0xc0>
    64c1:	8b 48 20             	mov    0x20(%rax),%ecx
    64c4:	48 39 d1             	cmp    %rdx,%rcx
    64c7:	0f 84 c3 00 00 00    	je     6590 <mbedtls_cipher_finish+0x130>
    64cd:	48 0b 53 10          	or     0x10(%rbx),%rdx
    64d1:	48 83 fa 01          	cmp    $0x1,%rdx
    64d5:	19 c0                	sbb    %eax,%eax
    64d7:	48 83 c4 08          	add    $0x8,%rsp
    64db:	f7 d0                	not    %eax
    64dd:	5b                   	pop    %rbx
    64de:	5d                   	pop    %rbp
    64df:	25 80 9d ff ff       	and    $0xffff9d80,%eax
    64e4:	41 5c                	pop    %r12
    64e6:	41 5d                	pop    %r13
    64e8:	c3                   	retq   
    64e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    64f0:	31 c0                	xor    %eax,%eax
    64f2:	48 83 c4 08          	add    $0x8,%rsp
    64f6:	5b                   	pop    %rbx
    64f7:	5d                   	pop    %rbp
    64f8:	41 5c                	pop    %r12
    64fa:	41 5d                	pop    %r13
    64fc:	c3                   	retq   
    64fd:	0f 1f 00             	nopl   (%rax)
    6500:	48 83 7b 30 01       	cmpq   $0x1,0x30(%rbx)
    6505:	19 c0                	sbb    %eax,%eax
    6507:	48 83 c4 08          	add    $0x8,%rsp
    650b:	f7 d0                	not    %eax
    650d:	5b                   	pop    %rbx
    650e:	5d                   	pop    %rbp
    650f:	25 80 9d ff ff       	and    $0xffff9d80,%eax
    6514:	41 5c                	pop    %r12
    6516:	41 5d                	pop    %r13
    6518:	c3                   	retq   
    6519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6520:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    6524:	48 85 c9             	test   %rcx,%rcx
    6527:	74 a8                	je     64d1 <mbedtls_cipher_finish+0x71>
    6529:	48 8b 73 48          	mov    0x48(%rbx),%rsi
    652d:	48 85 f6             	test   %rsi,%rsi
    6530:	75 03                	jne    6535 <mbedtls_cipher_finish+0xd5>
    6532:	8b 70 18             	mov    0x18(%rax),%esi
    6535:	4c 8d 6b 20          	lea    0x20(%rbx),%r13
    6539:	48 63 f6             	movslq %esi,%rsi
    653c:	4c 89 ef             	mov    %r13,%rdi
    653f:	ff d1                	callq  *%rcx
    6541:	48 8b 03             	mov    (%rbx),%rax
    6544:	8b 73 0c             	mov    0xc(%rbx),%esi
    6547:	8b 50 20             	mov    0x20(%rax),%edx
    654a:	48 8b 40 28          	mov    0x28(%rax),%rax
    654e:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6552:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    6556:	49 89 e9             	mov    %rbp,%r9
    6559:	4d 89 e8             	mov    %r13,%r8
    655c:	ff 50 10             	callq  *0x10(%rax)
    655f:	85 c0                	test   %eax,%eax
    6561:	75 8f                	jne    64f2 <mbedtls_cipher_finish+0x92>
    6563:	8b 4b 0c             	mov    0xc(%rbx),%ecx
    6566:	48 8b 13             	mov    (%rbx),%rdx
    6569:	85 c9                	test   %ecx,%ecx
    656b:	75 33                	jne    65a0 <mbedtls_cipher_finish+0x140>
    656d:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6571:	48 85 d2             	test   %rdx,%rdx
    6574:	74 45                	je     65bb <mbedtls_cipher_finish+0x15b>
    6576:	8b 72 20             	mov    0x20(%rdx),%esi
    6579:	48 83 c4 08          	add    $0x8,%rsp
    657d:	4c 89 e2             	mov    %r12,%rdx
    6580:	48 89 ef             	mov    %rbp,%rdi
    6583:	5b                   	pop    %rbx
    6584:	5d                   	pop    %rbp
    6585:	41 5c                	pop    %r12
    6587:	41 5d                	pop    %r13
    6589:	ff e0                	jmpq   *%rax
    658b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6590:	4c 8d 6b 20          	lea    0x20(%rbx),%r13
    6594:	eb b4                	jmp    654a <mbedtls_cipher_finish+0xea>
    6596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    659d:	00 00 00 
    65a0:	48 85 d2             	test   %rdx,%rdx
    65a3:	74 1a                	je     65bf <mbedtls_cipher_finish+0x15f>
    65a5:	8b 52 20             	mov    0x20(%rdx),%edx
    65a8:	49 89 14 24          	mov    %rdx,(%r12)
    65ac:	e9 41 ff ff ff       	jmpq   64f2 <mbedtls_cipher_finish+0x92>
    65b1:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    65b6:	e9 37 ff ff ff       	jmpq   64f2 <mbedtls_cipher_finish+0x92>
    65bb:	31 f6                	xor    %esi,%esi
    65bd:	eb ba                	jmp    6579 <mbedtls_cipher_finish+0x119>
    65bf:	31 d2                	xor    %edx,%edx
    65c1:	eb e5                	jmp    65a8 <mbedtls_cipher_finish+0x148>
    65c3:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    65c8:	c3                   	retq   
    65c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000065d0 <mbedtls_cipher_set_padding_mode>:
    65d0:	f3 0f 1e fa          	endbr64 
    65d4:	48 8b 07             	mov    (%rdi),%rax
    65d7:	48 85 c0             	test   %rax,%rax
    65da:	0f 84 a6 00 00 00    	je     6686 <mbedtls_cipher_set_padding_mode+0xb6>
    65e0:	83 78 04 02          	cmpl   $0x2,0x4(%rax)
    65e4:	0f 85 96 00 00 00    	jne    6680 <mbedtls_cipher_set_padding_mode+0xb0>
    65ea:	83 fe 04             	cmp    $0x4,%esi
    65ed:	0f 87 8d cd ff ff    	ja     3380 <mbedtls_cipher_set_padding_mode.cold>
    65f3:	48 8d 15 e6 b7 01 00 	lea    0x1b7e6(%rip),%rdx        # 21de0 <last4+0x80>
    65fa:	89 f6                	mov    %esi,%esi
    65fc:	48 63 04 b2          	movslq (%rdx,%rsi,4),%rax
    6600:	48 01 d0             	add    %rdx,%rax
    6603:	3e ff e0             	notrack jmpq *%rax
    6606:	48 8d 05 c3 f3 ff ff 	lea    -0xc3d(%rip),%rax        # 59d0 <add_zeros_padding>
    660d:	48 89 47 10          	mov    %rax,0x10(%rdi)
    6611:	48 8d 05 68 f4 ff ff 	lea    -0xb98(%rip),%rax        # 5a80 <get_zeros_padding>
    6618:	48 89 47 18          	mov    %rax,0x18(%rdi)
    661c:	31 c0                	xor    %eax,%eax
    661e:	c3                   	retq   
    661f:	48 8d 05 ca f3 ff ff 	lea    -0xc36(%rip),%rax        # 59f0 <get_no_padding>
    6626:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    662d:	00 
    662e:	48 89 47 18          	mov    %rax,0x18(%rdi)
    6632:	31 c0                	xor    %eax,%eax
    6634:	c3                   	retq   
    6635:	48 8d 05 04 f2 ff ff 	lea    -0xdfc(%rip),%rax        # 5840 <add_pkcs_padding>
    663c:	48 89 47 10          	mov    %rax,0x10(%rdi)
    6640:	48 8d 05 39 f2 ff ff 	lea    -0xdc7(%rip),%rax        # 5880 <get_pkcs_padding>
    6647:	48 89 47 18          	mov    %rax,0x18(%rdi)
    664b:	31 c0                	xor    %eax,%eax
    664d:	c3                   	retq   
    664e:	48 8d 05 9b f2 ff ff 	lea    -0xd65(%rip),%rax        # 58f0 <add_one_and_zeros_padding>
    6655:	48 89 47 10          	mov    %rax,0x10(%rdi)
    6659:	48 8d 05 b0 f3 ff ff 	lea    -0xc50(%rip),%rax        # 5a10 <get_one_and_zeros_padding>
    6660:	48 89 47 18          	mov    %rax,0x18(%rdi)
    6664:	31 c0                	xor    %eax,%eax
    6666:	c3                   	retq   
    6667:	48 8d 05 c2 f2 ff ff 	lea    -0xd3e(%rip),%rax        # 5930 <add_zeros_and_len_padding>
    666e:	48 89 47 10          	mov    %rax,0x10(%rdi)
    6672:	48 8d 05 f7 f2 ff ff 	lea    -0xd09(%rip),%rax        # 5970 <get_zeros_and_len_padding>
    6679:	48 89 47 18          	mov    %rax,0x18(%rdi)
    667d:	31 c0                	xor    %eax,%eax
    667f:	c3                   	retq   
    6680:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6685:	c3                   	retq   
    6686:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    668b:	c3                   	retq   
    668c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006690 <mbedtls_cipher_write_tag>:
    6690:	f3 0f 1e fa          	endbr64 
    6694:	48 83 ec 18          	sub    $0x18,%rsp
    6698:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    669f:	00 00 
    66a1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    66a6:	31 c0                	xor    %eax,%eax
    66a8:	48 8b 07             	mov    (%rdi),%rax
    66ab:	48 85 c0             	test   %rax,%rax
    66ae:	74 50                	je     6700 <mbedtls_cipher_write_tag+0x70>
    66b0:	83 7f 0c 01          	cmpl   $0x1,0xc(%rdi)
    66b4:	75 4a                	jne    6700 <mbedtls_cipher_write_tag+0x70>
    66b6:	83 78 04 06          	cmpl   $0x6,0x4(%rax)
    66ba:	74 2c                	je     66e8 <mbedtls_cipher_write_tag+0x58>
    66bc:	83 38 4d             	cmpl   $0x4d,(%rax)
    66bf:	75 4f                	jne    6710 <mbedtls_cipher_write_tag+0x80>
    66c1:	48 83 fa 10          	cmp    $0x10,%rdx
    66c5:	75 39                	jne    6700 <mbedtls_cipher_write_tag+0x70>
    66c7:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    66cb:	e8 30 92 01 00       	callq  1f900 <mbedtls_chachapoly_finish>
    66d0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    66d5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    66dc:	00 00 
    66de:	75 37                	jne    6717 <mbedtls_cipher_write_tag+0x87>
    66e0:	48 83 c4 18          	add    $0x18,%rsp
    66e4:	c3                   	retq   
    66e5:	0f 1f 00             	nopl   (%rax)
    66e8:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    66ec:	49 89 d1             	mov    %rdx,%r9
    66ef:	49 89 f0             	mov    %rsi,%r8
    66f2:	48 89 e1             	mov    %rsp,%rcx
    66f5:	31 d2                	xor    %edx,%edx
    66f7:	31 f6                	xor    %esi,%esi
    66f9:	e8 b2 de ff ff       	callq  45b0 <mbedtls_gcm_finish>
    66fe:	eb d0                	jmp    66d0 <mbedtls_cipher_write_tag+0x40>
    6700:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6705:	eb c9                	jmp    66d0 <mbedtls_cipher_write_tag+0x40>
    6707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    670e:	00 00 
    6710:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6715:	eb b9                	jmp    66d0 <mbedtls_cipher_write_tag+0x40>
    6717:	e8 44 cb ff ff       	callq  3260 <__stack_chk_fail@plt>
    671c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006720 <mbedtls_cipher_check_tag>:
    6720:	f3 0f 1e fa          	endbr64 
    6724:	41 56                	push   %r14
    6726:	41 55                	push   %r13
    6728:	41 54                	push   %r12
    672a:	55                   	push   %rbp
    672b:	53                   	push   %rbx
    672c:	48 83 ec 30          	sub    $0x30,%rsp
    6730:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6737:	00 00 
    6739:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    673e:	31 c0                	xor    %eax,%eax
    6740:	48 8b 07             	mov    (%rdi),%rax
    6743:	48 85 c0             	test   %rax,%rax
    6746:	0f 84 04 01 00 00    	je     6850 <mbedtls_cipher_check_tag+0x130>
    674c:	8b 4f 0c             	mov    0xc(%rdi),%ecx
    674f:	48 89 fb             	mov    %rdi,%rbx
    6752:	85 c9                	test   %ecx,%ecx
    6754:	0f 85 f6 00 00 00    	jne    6850 <mbedtls_cipher_check_tag+0x130>
    675a:	83 78 04 06          	cmpl   $0x6,0x4(%rax)
    675e:	49 89 f5             	mov    %rsi,%r13
    6761:	48 89 d5             	mov    %rdx,%rbp
    6764:	41 bc 80 9f ff ff    	mov    $0xffff9f80,%r12d
    676a:	74 7c                	je     67e8 <mbedtls_cipher_check_tag+0xc8>
    676c:	83 38 4d             	cmpl   $0x4d,(%rax)
    676f:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    6774:	74 32                	je     67a8 <mbedtls_cipher_check_tag+0x88>
    6776:	48 89 ee             	mov    %rbp,%rsi
    6779:	4c 89 f7             	mov    %r14,%rdi
    677c:	e8 af ea ff ff       	callq  5230 <mbedtls_platform_zeroize>
    6781:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6786:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    678d:	00 00 
    678f:	0f 85 c6 00 00 00    	jne    685b <mbedtls_cipher_check_tag+0x13b>
    6795:	48 83 c4 30          	add    $0x30,%rsp
    6799:	44 89 e0             	mov    %r12d,%eax
    679c:	5b                   	pop    %rbx
    679d:	5d                   	pop    %rbp
    679e:	41 5c                	pop    %r12
    67a0:	41 5d                	pop    %r13
    67a2:	41 5e                	pop    %r14
    67a4:	c3                   	retq   
    67a5:	0f 1f 00             	nopl   (%rax)
    67a8:	48 83 fd 10          	cmp    $0x10,%rbp
    67ac:	0f 85 9e 00 00 00    	jne    6850 <mbedtls_cipher_check_tag+0x130>
    67b2:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    67b6:	4c 89 f6             	mov    %r14,%rsi
    67b9:	e8 42 91 01 00       	callq  1f900 <mbedtls_chachapoly_finish>
    67be:	41 89 c4             	mov    %eax,%r12d
    67c1:	85 c0                	test   %eax,%eax
    67c3:	75 bc                	jne    6781 <mbedtls_cipher_check_tag+0x61>
    67c5:	ba 10 00 00 00       	mov    $0x10,%edx
    67ca:	4c 89 f6             	mov    %r14,%rsi
    67cd:	4c 89 ef             	mov    %r13,%rdi
    67d0:	e8 5b 0b 00 00       	callq  7330 <mbedtls_ct_memcmp>
    67d5:	41 89 c4             	mov    %eax,%r12d
    67d8:	85 c0                	test   %eax,%eax
    67da:	b8 00 9d ff ff       	mov    $0xffff9d00,%eax
    67df:	44 0f 45 e0          	cmovne %eax,%r12d
    67e3:	eb 91                	jmp    6776 <mbedtls_cipher_check_tag+0x56>
    67e5:	0f 1f 00             	nopl   (%rax)
    67e8:	41 bc 00 9f ff ff    	mov    $0xffff9f00,%r12d
    67ee:	48 83 fa 10          	cmp    $0x10,%rdx
    67f2:	77 8d                	ja     6781 <mbedtls_cipher_check_tag+0x61>
    67f4:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    67f8:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    67fd:	49 89 d1             	mov    %rdx,%r9
    6800:	31 f6                	xor    %esi,%esi
    6802:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    6807:	4d 89 f0             	mov    %r14,%r8
    680a:	31 d2                	xor    %edx,%edx
    680c:	e8 9f dd ff ff       	callq  45b0 <mbedtls_gcm_finish>
    6811:	41 89 c4             	mov    %eax,%r12d
    6814:	85 c0                	test   %eax,%eax
    6816:	0f 85 65 ff ff ff    	jne    6781 <mbedtls_cipher_check_tag+0x61>
    681c:	48 89 ea             	mov    %rbp,%rdx
    681f:	4c 89 f6             	mov    %r14,%rsi
    6822:	4c 89 ef             	mov    %r13,%rdi
    6825:	e8 06 0b 00 00       	callq  7330 <mbedtls_ct_memcmp>
    682a:	41 89 c4             	mov    %eax,%r12d
    682d:	85 c0                	test   %eax,%eax
    682f:	75 0f                	jne    6840 <mbedtls_cipher_check_tag+0x120>
    6831:	48 8b 03             	mov    (%rbx),%rax
    6834:	e9 33 ff ff ff       	jmpq   676c <mbedtls_cipher_check_tag+0x4c>
    6839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6840:	41 bc 00 9d ff ff    	mov    $0xffff9d00,%r12d
    6846:	e9 2b ff ff ff       	jmpq   6776 <mbedtls_cipher_check_tag+0x56>
    684b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6850:	41 bc 00 9f ff ff    	mov    $0xffff9f00,%r12d
    6856:	e9 26 ff ff ff       	jmpq   6781 <mbedtls_cipher_check_tag+0x61>
    685b:	e8 00 ca ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000006860 <mbedtls_cipher_crypt>:
    6860:	f3 0f 1e fa          	endbr64 
    6864:	41 56                	push   %r14
    6866:	4d 89 c6             	mov    %r8,%r14
    6869:	41 55                	push   %r13
    686b:	49 89 cd             	mov    %rcx,%r13
    686e:	41 54                	push   %r12
    6870:	4d 89 cc             	mov    %r9,%r12
    6873:	55                   	push   %rbp
    6874:	48 89 fd             	mov    %rdi,%rbp
    6877:	53                   	push   %rbx
    6878:	48 83 ec 10          	sub    $0x10,%rsp
    687c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6883:	00 00 
    6885:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    688a:	31 c0                	xor    %eax,%eax
    688c:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    6891:	e8 2a f5 ff ff       	callq  5dc0 <mbedtls_cipher_set_iv>
    6896:	85 c0                	test   %eax,%eax
    6898:	75 27                	jne    68c1 <mbedtls_cipher_crypt+0x61>
    689a:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
    689f:	74 5d                	je     68fe <mbedtls_cipher_crypt+0x9e>
    68a1:	49 89 d8             	mov    %rbx,%r8
    68a4:	4c 89 e1             	mov    %r12,%rcx
    68a7:	4c 89 f2             	mov    %r14,%rdx
    68aa:	4c 89 ee             	mov    %r13,%rsi
    68ad:	48 c7 45 30 00 00 00 	movq   $0x0,0x30(%rbp)
    68b4:	00 
    68b5:	48 89 ef             	mov    %rbp,%rdi
    68b8:	e8 a3 f7 ff ff       	callq  6060 <mbedtls_cipher_update>
    68bd:	85 c0                	test   %eax,%eax
    68bf:	74 1f                	je     68e0 <mbedtls_cipher_crypt+0x80>
    68c1:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    68c6:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    68cd:	00 00 
    68cf:	75 34                	jne    6905 <mbedtls_cipher_crypt+0xa5>
    68d1:	48 83 c4 10          	add    $0x10,%rsp
    68d5:	5b                   	pop    %rbx
    68d6:	5d                   	pop    %rbp
    68d7:	41 5c                	pop    %r12
    68d9:	41 5d                	pop    %r13
    68db:	41 5e                	pop    %r14
    68dd:	c3                   	retq   
    68de:	66 90                	xchg   %ax,%ax
    68e0:	48 8b 33             	mov    (%rbx),%rsi
    68e3:	48 89 e2             	mov    %rsp,%rdx
    68e6:	48 89 ef             	mov    %rbp,%rdi
    68e9:	4c 01 e6             	add    %r12,%rsi
    68ec:	e8 6f fb ff ff       	callq  6460 <mbedtls_cipher_finish>
    68f1:	85 c0                	test   %eax,%eax
    68f3:	75 cc                	jne    68c1 <mbedtls_cipher_crypt+0x61>
    68f5:	48 8b 14 24          	mov    (%rsp),%rdx
    68f9:	48 01 13             	add    %rdx,(%rbx)
    68fc:	eb c3                	jmp    68c1 <mbedtls_cipher_crypt+0x61>
    68fe:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6903:	eb bc                	jmp    68c1 <mbedtls_cipher_crypt+0x61>
    6905:	e8 56 c9 ff ff       	callq  3260 <__stack_chk_fail@plt>
    690a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006910 <mbedtls_cipher_auth_encrypt_ext>:
    6910:	f3 0f 1e fa          	endbr64 
    6914:	41 56                	push   %r14
    6916:	49 89 f6             	mov    %rsi,%r14
    6919:	41 55                	push   %r13
    691b:	49 89 d5             	mov    %rdx,%r13
    691e:	4c 89 ca             	mov    %r9,%rdx
    6921:	41 54                	push   %r12
    6923:	55                   	push   %rbp
    6924:	53                   	push   %rbx
    6925:	4c 8b 17             	mov    (%rdi),%r10
    6928:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    692d:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
    6932:	41 8b 42 04          	mov    0x4(%r10),%eax
    6936:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
    693b:	48 8b 6c 24 48       	mov    0x48(%rsp),%rbp
    6940:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    6945:	44 8d 60 f4          	lea    -0xc(%rax),%r12d
    6949:	41 83 fc 01          	cmp    $0x1,%r12d
    694d:	76 71                	jbe    69c0 <mbedtls_cipher_auth_encrypt_ext+0xb0>
    694f:	4c 8d 24 1e          	lea    (%rsi,%rbx,1),%r12
    6953:	4d 39 cc             	cmp    %r9,%r12
    6956:	0f 87 14 01 00 00    	ja     6a70 <mbedtls_cipher_auth_encrypt_ext+0x160>
    695c:	4d 8d 0c 33          	lea    (%r11,%rsi,1),%r9
    6960:	83 f8 06             	cmp    $0x6,%eax
    6963:	0f 84 bf 00 00 00    	je     6a28 <mbedtls_cipher_auth_encrypt_ext+0x118>
    6969:	83 f8 08             	cmp    $0x8,%eax
    696c:	0f 84 8e 00 00 00    	je     6a00 <mbedtls_cipher_auth_encrypt_ext+0xf0>
    6972:	41 83 3a 4d          	cmpl   $0x4d,(%r10)
    6976:	0f 85 04 01 00 00    	jne    6a80 <mbedtls_cipher_auth_encrypt_ext+0x170>
    697c:	41 8b 42 18          	mov    0x18(%r10),%eax
    6980:	4c 39 e8             	cmp    %r13,%rax
    6983:	0f 85 d7 00 00 00    	jne    6a60 <mbedtls_cipher_auth_encrypt_ext+0x150>
    6989:	48 83 fb 10          	cmp    $0x10,%rbx
    698d:	0f 85 cd 00 00 00    	jne    6a60 <mbedtls_cipher_auth_encrypt_ext+0x150>
    6993:	48 89 75 00          	mov    %rsi,0x0(%rbp)
    6997:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    699b:	41 51                	push   %r9
    699d:	49 89 d1             	mov    %rdx,%r9
    69a0:	4c 89 f2             	mov    %r14,%rdx
    69a3:	41 53                	push   %r11
    69a5:	e8 56 91 01 00       	callq  1fb00 <mbedtls_chachapoly_encrypt_and_tag>
    69aa:	5a                   	pop    %rdx
    69ab:	59                   	pop    %rcx
    69ac:	48 01 5d 00          	add    %rbx,0x0(%rbp)
    69b0:	5b                   	pop    %rbx
    69b1:	5d                   	pop    %rbp
    69b2:	41 5c                	pop    %r12
    69b4:	41 5d                	pop    %r13
    69b6:	41 5e                	pop    %r14
    69b8:	c3                   	retq   
    69b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    69c0:	45 31 d2             	xor    %r10d,%r10d
    69c3:	83 f8 0c             	cmp    $0xc,%eax
    69c6:	41 0f 95 c2          	setne  %r10b
    69ca:	4d 09 e8             	or     %r13,%r8
    69cd:	49 09 d8             	or     %rbx,%r8
    69d0:	0f 85 9a 00 00 00    	jne    6a70 <mbedtls_cipher_auth_encrypt_ext+0x160>
    69d6:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    69da:	48 89 f1             	mov    %rsi,%rcx
    69dd:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    69e2:	4d 89 d8             	mov    %r11,%r8
    69e5:	5b                   	pop    %rbx
    69e6:	49 89 e9             	mov    %rbp,%r9
    69e9:	44 89 d6             	mov    %r10d,%esi
    69ec:	5d                   	pop    %rbp
    69ed:	41 5c                	pop    %r12
    69ef:	41 5d                	pop    %r13
    69f1:	41 5e                	pop    %r14
    69f3:	e9 78 4b 00 00       	jmpq   b570 <mbedtls_nist_kw_wrap>
    69f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    69ff:	00 
    6a00:	48 89 75 00          	mov    %rsi,0x0(%rbp)
    6a04:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6a08:	53                   	push   %rbx
    6a09:	41 51                	push   %r9
    6a0b:	4d 89 c1             	mov    %r8,%r9
    6a0e:	49 89 c8             	mov    %rcx,%r8
    6a11:	4c 89 e9             	mov    %r13,%rcx
    6a14:	41 53                	push   %r11
    6a16:	52                   	push   %rdx
    6a17:	4c 89 f2             	mov    %r14,%rdx
    6a1a:	e8 d1 7e 01 00       	callq  1e8f0 <mbedtls_ccm_encrypt_and_tag>
    6a1f:	48 83 c4 20          	add    $0x20,%rsp
    6a23:	eb 87                	jmp    69ac <mbedtls_cipher_auth_encrypt_ext+0x9c>
    6a25:	0f 1f 00             	nopl   (%rax)
    6a28:	48 83 ec 08          	sub    $0x8,%rsp
    6a2c:	48 89 75 00          	mov    %rsi,0x0(%rbp)
    6a30:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6a34:	41 51                	push   %r9
    6a36:	49 89 c9             	mov    %rcx,%r9
    6a39:	4c 89 f1             	mov    %r14,%rcx
    6a3c:	53                   	push   %rbx
    6a3d:	41 53                	push   %r11
    6a3f:	52                   	push   %rdx
    6a40:	48 89 f2             	mov    %rsi,%rdx
    6a43:	be 01 00 00 00       	mov    $0x1,%esi
    6a48:	41 50                	push   %r8
    6a4a:	4d 89 e8             	mov    %r13,%r8
    6a4d:	e8 1e dd ff ff       	callq  4770 <mbedtls_gcm_crypt_and_tag>
    6a52:	48 83 c4 30          	add    $0x30,%rsp
    6a56:	e9 51 ff ff ff       	jmpq   69ac <mbedtls_cipher_auth_encrypt_ext+0x9c>
    6a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a60:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6a65:	e9 42 ff ff ff       	jmpq   69ac <mbedtls_cipher_auth_encrypt_ext+0x9c>
    6a6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6a70:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6a75:	e9 36 ff ff ff       	jmpq   69b0 <mbedtls_cipher_auth_encrypt_ext+0xa0>
    6a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6a80:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6a85:	e9 22 ff ff ff       	jmpq   69ac <mbedtls_cipher_auth_encrypt_ext+0x9c>
    6a8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006a90 <mbedtls_cipher_auth_decrypt_ext>:
    6a90:	f3 0f 1e fa          	endbr64 
    6a94:	41 57                	push   %r15
    6a96:	41 56                	push   %r14
    6a98:	49 89 ce             	mov    %rcx,%r14
    6a9b:	41 55                	push   %r13
    6a9d:	49 89 d5             	mov    %rdx,%r13
    6aa0:	4c 89 ca             	mov    %r9,%rdx
    6aa3:	41 54                	push   %r12
    6aa5:	55                   	push   %rbp
    6aa6:	53                   	push   %rbx
    6aa7:	48 83 ec 08          	sub    $0x8,%rsp
    6aab:	4c 8b 1f             	mov    (%rdi),%r11
    6aae:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    6ab3:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    6ab8:	41 8b 43 04          	mov    0x4(%r11),%eax
    6abc:	48 8b 6c 24 50       	mov    0x50(%rsp),%rbp
    6ac1:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
    6ac6:	4c 8b 54 24 60       	mov    0x60(%rsp),%r10
    6acb:	8d 58 f4             	lea    -0xc(%rax),%ebx
    6ace:	83 fb 01             	cmp    $0x1,%ebx
    6ad1:	0f 86 89 00 00 00    	jbe    6b60 <mbedtls_cipher_auth_decrypt_ext+0xd0>
    6ad7:	4c 39 d1             	cmp    %r10,%rcx
    6ada:	0f 82 f0 00 00 00    	jb     6bd0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6ae0:	49 89 f4             	mov    %rsi,%r12
    6ae3:	48 89 ce             	mov    %rcx,%rsi
    6ae6:	4c 29 d6             	sub    %r10,%rsi
    6ae9:	48 39 ee             	cmp    %rbp,%rsi
    6aec:	0f 87 de 00 00 00    	ja     6bd0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6af2:	48 8d 0c 32          	lea    (%rdx,%rsi,1),%rcx
    6af6:	83 f8 06             	cmp    $0x6,%eax
    6af9:	0f 84 e1 00 00 00    	je     6be0 <mbedtls_cipher_auth_decrypt_ext+0x150>
    6aff:	83 f8 08             	cmp    $0x8,%eax
    6b02:	0f 84 88 00 00 00    	je     6b90 <mbedtls_cipher_auth_decrypt_ext+0x100>
    6b08:	41 83 3b 4d          	cmpl   $0x4d,(%r11)
    6b0c:	0f 85 fe 00 00 00    	jne    6c10 <mbedtls_cipher_auth_decrypt_ext+0x180>
    6b12:	41 8b 43 18          	mov    0x18(%r11),%eax
    6b16:	4c 39 e8             	cmp    %r13,%rax
    6b19:	0f 85 b1 00 00 00    	jne    6bd0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6b1f:	49 83 fa 10          	cmp    $0x10,%r10
    6b23:	0f 85 a7 00 00 00    	jne    6bd0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6b29:	49 89 31             	mov    %rsi,(%r9)
    6b2c:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6b30:	49 89 c9             	mov    %rcx,%r9
    6b33:	4c 89 f1             	mov    %r14,%rcx
    6b36:	41 57                	push   %r15
    6b38:	52                   	push   %rdx
    6b39:	4c 89 e2             	mov    %r12,%rdx
    6b3c:	e8 ef 8f 01 00       	callq  1fb30 <mbedtls_chachapoly_auth_decrypt>
    6b41:	5a                   	pop    %rdx
    6b42:	59                   	pop    %rcx
    6b43:	83 f8 aa             	cmp    $0xffffffaa,%eax
    6b46:	74 6f                	je     6bb7 <mbedtls_cipher_auth_decrypt_ext+0x127>
    6b48:	48 83 c4 08          	add    $0x8,%rsp
    6b4c:	5b                   	pop    %rbx
    6b4d:	5d                   	pop    %rbp
    6b4e:	41 5c                	pop    %r12
    6b50:	41 5d                	pop    %r13
    6b52:	41 5e                	pop    %r14
    6b54:	41 5f                	pop    %r15
    6b56:	c3                   	retq   
    6b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b5e:	00 00 
    6b60:	31 f6                	xor    %esi,%esi
    6b62:	83 f8 0c             	cmp    $0xc,%eax
    6b65:	40 0f 95 c6          	setne  %sil
    6b69:	4d 09 e8             	or     %r13,%r8
    6b6c:	4d 09 d0             	or     %r10,%r8
    6b6f:	75 5f                	jne    6bd0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6b71:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6b75:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
    6b7a:	48 83 c4 08          	add    $0x8,%rsp
    6b7e:	4d 89 f8             	mov    %r15,%r8
    6b81:	5b                   	pop    %rbx
    6b82:	5d                   	pop    %rbp
    6b83:	41 5c                	pop    %r12
    6b85:	41 5d                	pop    %r13
    6b87:	41 5e                	pop    %r14
    6b89:	41 5f                	pop    %r15
    6b8b:	e9 e0 4c 00 00       	jmpq   b870 <mbedtls_nist_kw_unwrap>
    6b90:	49 89 31             	mov    %rsi,(%r9)
    6b93:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6b97:	4d 89 c1             	mov    %r8,%r9
    6b9a:	4d 89 f0             	mov    %r14,%r8
    6b9d:	41 52                	push   %r10
    6b9f:	51                   	push   %rcx
    6ba0:	4c 89 e9             	mov    %r13,%rcx
    6ba3:	41 57                	push   %r15
    6ba5:	52                   	push   %rdx
    6ba6:	4c 89 e2             	mov    %r12,%rdx
    6ba9:	e8 c2 7d 01 00       	callq  1e970 <mbedtls_ccm_auth_decrypt>
    6bae:	48 83 c4 20          	add    $0x20,%rsp
    6bb2:	83 f8 f1             	cmp    $0xfffffff1,%eax
    6bb5:	75 91                	jne    6b48 <mbedtls_cipher_auth_decrypt_ext+0xb8>
    6bb7:	48 83 c4 08          	add    $0x8,%rsp
    6bbb:	b8 00 9d ff ff       	mov    $0xffff9d00,%eax
    6bc0:	5b                   	pop    %rbx
    6bc1:	5d                   	pop    %rbp
    6bc2:	41 5c                	pop    %r12
    6bc4:	41 5d                	pop    %r13
    6bc6:	41 5e                	pop    %r14
    6bc8:	41 5f                	pop    %r15
    6bca:	c3                   	retq   
    6bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6bd0:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6bd5:	e9 6e ff ff ff       	jmpq   6b48 <mbedtls_cipher_auth_decrypt_ext+0xb8>
    6bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6be0:	49 89 31             	mov    %rsi,(%r9)
    6be3:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6be7:	4d 89 c1             	mov    %r8,%r9
    6bea:	4d 89 f0             	mov    %r14,%r8
    6bed:	41 57                	push   %r15
    6bef:	52                   	push   %rdx
    6bf0:	4c 89 e2             	mov    %r12,%rdx
    6bf3:	41 52                	push   %r10
    6bf5:	51                   	push   %rcx
    6bf6:	4c 89 e9             	mov    %r13,%rcx
    6bf9:	e8 32 dc ff ff       	callq  4830 <mbedtls_gcm_auth_decrypt>
    6bfe:	48 83 c4 20          	add    $0x20,%rsp
    6c02:	83 f8 ee             	cmp    $0xffffffee,%eax
    6c05:	0f 85 3d ff ff ff    	jne    6b48 <mbedtls_cipher_auth_decrypt_ext+0xb8>
    6c0b:	eb aa                	jmp    6bb7 <mbedtls_cipher_auth_decrypt_ext+0x127>
    6c0d:	0f 1f 00             	nopl   (%rax)
    6c10:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6c15:	e9 2e ff ff ff       	jmpq   6b48 <mbedtls_cipher_auth_decrypt_ext+0xb8>
    6c1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006c20 <kw_ctx_free>:
    6c20:	f3 0f 1e fa          	endbr64 
    6c24:	55                   	push   %rbp
    6c25:	48 89 fd             	mov    %rdi,%rbp
    6c28:	e8 23 49 00 00       	callq  b550 <mbedtls_nist_kw_free>
    6c2d:	48 89 ef             	mov    %rbp,%rdi
    6c30:	5d                   	pop    %rbp
    6c31:	e9 aa c5 ff ff       	jmpq   31e0 <free@plt>
    6c36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6c3d:	00 00 00 

0000000000006c40 <kw_ctx_alloc>:
    6c40:	f3 0f 1e fa          	endbr64 
    6c44:	41 54                	push   %r12
    6c46:	be 60 00 00 00       	mov    $0x60,%esi
    6c4b:	bf 01 00 00 00       	mov    $0x1,%edi
    6c50:	e8 6b c6 ff ff       	callq  32c0 <calloc@plt>
    6c55:	49 89 c4             	mov    %rax,%r12
    6c58:	48 85 c0             	test   %rax,%rax
    6c5b:	74 08                	je     6c65 <kw_ctx_alloc+0x25>
    6c5d:	48 89 c7             	mov    %rax,%rdi
    6c60:	e8 0b 48 00 00       	callq  b470 <mbedtls_nist_kw_init>
    6c65:	4c 89 e0             	mov    %r12,%rax
    6c68:	41 5c                	pop    %r12
    6c6a:	c3                   	retq   
    6c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006c70 <kw_aes_setkey_unwrap>:
    6c70:	f3 0f 1e fa          	endbr64 
    6c74:	89 d1                	mov    %edx,%ecx
    6c76:	45 31 c0             	xor    %r8d,%r8d
    6c79:	48 89 f2             	mov    %rsi,%rdx
    6c7c:	be 02 00 00 00       	mov    $0x2,%esi
    6c81:	e9 1a 48 00 00       	jmpq   b4a0 <mbedtls_nist_kw_setkey>
    6c86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6c8d:	00 00 00 

0000000000006c90 <kw_aes_setkey_wrap>:
    6c90:	f3 0f 1e fa          	endbr64 
    6c94:	89 d1                	mov    %edx,%ecx
    6c96:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    6c9c:	48 89 f2             	mov    %rsi,%rdx
    6c9f:	be 02 00 00 00       	mov    $0x2,%esi
    6ca4:	e9 f7 47 00 00       	jmpq   b4a0 <mbedtls_nist_kw_setkey>
    6ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006cb0 <chachapoly_ctx_free>:
    6cb0:	f3 0f 1e fa          	endbr64 
    6cb4:	55                   	push   %rbp
    6cb5:	48 89 fd             	mov    %rdi,%rbp
    6cb8:	e8 e3 89 01 00       	callq  1f6a0 <mbedtls_chachapoly_free>
    6cbd:	48 89 ef             	mov    %rbp,%rdi
    6cc0:	5d                   	pop    %rbp
    6cc1:	e9 1a c5 ff ff       	jmpq   31e0 <free@plt>
    6cc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6ccd:	00 00 00 

0000000000006cd0 <chachapoly_ctx_alloc>:
    6cd0:	f3 0f 1e fa          	endbr64 
    6cd4:	41 54                	push   %r12
    6cd6:	be f0 00 00 00       	mov    $0xf0,%esi
    6cdb:	bf 01 00 00 00       	mov    $0x1,%edi
    6ce0:	e8 db c5 ff ff       	callq  32c0 <calloc@plt>
    6ce5:	49 89 c4             	mov    %rax,%r12
    6ce8:	48 85 c0             	test   %rax,%rax
    6ceb:	74 08                	je     6cf5 <chachapoly_ctx_alloc+0x25>
    6ced:	48 89 c7             	mov    %rax,%rdi
    6cf0:	e8 6b 89 01 00       	callq  1f660 <mbedtls_chachapoly_init>
    6cf5:	4c 89 e0             	mov    %r12,%rax
    6cf8:	41 5c                	pop    %r12
    6cfa:	c3                   	retq   
    6cfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006d00 <chachapoly_setkey_wrap>:
    6d00:	f3 0f 1e fa          	endbr64 
    6d04:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    6d0a:	75 1c                	jne    6d28 <chachapoly_setkey_wrap+0x28>
    6d0c:	48 83 ec 08          	sub    $0x8,%rsp
    6d10:	e8 db 89 01 00       	callq  1f6f0 <mbedtls_chachapoly_setkey>
    6d15:	85 c0                	test   %eax,%eax
    6d17:	75 05                	jne    6d1e <chachapoly_setkey_wrap+0x1e>
    6d19:	48 83 c4 08          	add    $0x8,%rsp
    6d1d:	c3                   	retq   
    6d1e:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6d23:	eb f4                	jmp    6d19 <chachapoly_setkey_wrap+0x19>
    6d25:	0f 1f 00             	nopl   (%rax)
    6d28:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6d2d:	c3                   	retq   
    6d2e:	66 90                	xchg   %ax,%ax

0000000000006d30 <chacha20_ctx_free>:
    6d30:	f3 0f 1e fa          	endbr64 
    6d34:	55                   	push   %rbp
    6d35:	48 89 fd             	mov    %rdi,%rbp
    6d38:	e8 83 82 01 00       	callq  1efc0 <mbedtls_chacha20_free>
    6d3d:	48 89 ef             	mov    %rbp,%rdi
    6d40:	5d                   	pop    %rbp
    6d41:	e9 9a c4 ff ff       	jmpq   31e0 <free@plt>
    6d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6d4d:	00 00 00 

0000000000006d50 <chacha20_ctx_alloc>:
    6d50:	f3 0f 1e fa          	endbr64 
    6d54:	41 54                	push   %r12
    6d56:	be 88 00 00 00       	mov    $0x88,%esi
    6d5b:	bf 01 00 00 00       	mov    $0x1,%edi
    6d60:	e8 5b c5 ff ff       	callq  32c0 <calloc@plt>
    6d65:	49 89 c4             	mov    %rax,%r12
    6d68:	48 85 c0             	test   %rax,%rax
    6d6b:	74 08                	je     6d75 <chacha20_ctx_alloc+0x25>
    6d6d:	48 89 c7             	mov    %rax,%rdi
    6d70:	e8 1b 82 01 00       	callq  1ef90 <mbedtls_chacha20_init>
    6d75:	4c 89 e0             	mov    %r12,%rax
    6d78:	41 5c                	pop    %r12
    6d7a:	c3                   	retq   
    6d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006d80 <chacha20_setkey_wrap>:
    6d80:	f3 0f 1e fa          	endbr64 
    6d84:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    6d8a:	75 1c                	jne    6da8 <chacha20_setkey_wrap+0x28>
    6d8c:	48 83 ec 08          	sub    $0x8,%rsp
    6d90:	e8 4b 82 01 00       	callq  1efe0 <mbedtls_chacha20_setkey>
    6d95:	85 c0                	test   %eax,%eax
    6d97:	75 05                	jne    6d9e <chacha20_setkey_wrap+0x1e>
    6d99:	48 83 c4 08          	add    $0x8,%rsp
    6d9d:	c3                   	retq   
    6d9e:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6da3:	eb f4                	jmp    6d99 <chacha20_setkey_wrap+0x19>
    6da5:	0f 1f 00             	nopl   (%rax)
    6da8:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6dad:	c3                   	retq   
    6dae:	66 90                	xchg   %ax,%ax

0000000000006db0 <chacha20_stream_wrap>:
    6db0:	f3 0f 1e fa          	endbr64 
    6db4:	48 83 ec 08          	sub    $0x8,%rsp
    6db8:	e8 c3 82 01 00       	callq  1f080 <mbedtls_chacha20_update>
    6dbd:	83 f8 af             	cmp    $0xffffffaf,%eax
    6dc0:	74 05                	je     6dc7 <chacha20_stream_wrap+0x17>
    6dc2:	48 83 c4 08          	add    $0x8,%rsp
    6dc6:	c3                   	retq   
    6dc7:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6dcc:	eb f4                	jmp    6dc2 <chacha20_stream_wrap+0x12>
    6dce:	66 90                	xchg   %ax,%ax

0000000000006dd0 <des3_ctx_free>:
    6dd0:	f3 0f 1e fa          	endbr64 
    6dd4:	55                   	push   %rbp
    6dd5:	48 89 fd             	mov    %rdi,%rbp
    6dd8:	e8 c3 10 00 00       	callq  7ea0 <mbedtls_des3_free>
    6ddd:	48 89 ef             	mov    %rbp,%rdi
    6de0:	5d                   	pop    %rbp
    6de1:	e9 fa c3 ff ff       	jmpq   31e0 <free@plt>
    6de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6ded:	00 00 00 

0000000000006df0 <des3_ctx_alloc>:
    6df0:	f3 0f 1e fa          	endbr64 
    6df4:	41 54                	push   %r12
    6df6:	be 80 01 00 00       	mov    $0x180,%esi
    6dfb:	bf 01 00 00 00       	mov    $0x1,%edi
    6e00:	e8 bb c4 ff ff       	callq  32c0 <calloc@plt>
    6e05:	49 89 c4             	mov    %rax,%r12
    6e08:	48 85 c0             	test   %rax,%rax
    6e0b:	74 08                	je     6e15 <des3_ctx_alloc+0x25>
    6e0d:	48 89 c7             	mov    %rax,%rdi
    6e10:	e8 4b 10 00 00       	callq  7e60 <mbedtls_des3_init>
    6e15:	4c 89 e0             	mov    %r12,%rax
    6e18:	41 5c                	pop    %r12
    6e1a:	c3                   	retq   
    6e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006e20 <des3_set3key_dec_wrap>:
    6e20:	f3 0f 1e fa          	endbr64 
    6e24:	e9 67 18 00 00       	jmpq   8690 <mbedtls_des3_set3key_dec>
    6e29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e30 <des3_set3key_enc_wrap>:
    6e30:	f3 0f 1e fa          	endbr64 
    6e34:	e9 f7 17 00 00       	jmpq   8630 <mbedtls_des3_set3key_enc>
    6e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e40 <des3_crypt_cbc_wrap>:
    6e40:	f3 0f 1e fa          	endbr64 
    6e44:	e9 e7 20 00 00       	jmpq   8f30 <mbedtls_des3_crypt_cbc>
    6e49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e50 <des3_crypt_ecb_wrap>:
    6e50:	f3 0f 1e fa          	endbr64 
    6e54:	48 89 d6             	mov    %rdx,%rsi
    6e57:	48 89 ca             	mov    %rcx,%rdx
    6e5a:	e9 01 1c 00 00       	jmpq   8a60 <mbedtls_des3_crypt_ecb>
    6e5f:	90                   	nop

0000000000006e60 <des3_set2key_dec_wrap>:
    6e60:	f3 0f 1e fa          	endbr64 
    6e64:	e9 67 17 00 00       	jmpq   85d0 <mbedtls_des3_set2key_dec>
    6e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e70 <des3_set2key_enc_wrap>:
    6e70:	f3 0f 1e fa          	endbr64 
    6e74:	e9 f7 16 00 00       	jmpq   8570 <mbedtls_des3_set2key_enc>
    6e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e80 <des_ctx_free>:
    6e80:	f3 0f 1e fa          	endbr64 
    6e84:	55                   	push   %rbp
    6e85:	48 89 fd             	mov    %rdi,%rbp
    6e88:	e8 b3 0f 00 00       	callq  7e40 <mbedtls_des_free>
    6e8d:	48 89 ef             	mov    %rbp,%rdi
    6e90:	5d                   	pop    %rbp
    6e91:	e9 4a c3 ff ff       	jmpq   31e0 <free@plt>
    6e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6e9d:	00 00 00 

0000000000006ea0 <des_ctx_alloc>:
    6ea0:	f3 0f 1e fa          	endbr64 
    6ea4:	41 54                	push   %r12
    6ea6:	be 80 00 00 00       	mov    $0x80,%esi
    6eab:	bf 01 00 00 00       	mov    $0x1,%edi
    6eb0:	e8 0b c4 ff ff       	callq  32c0 <calloc@plt>
    6eb5:	49 89 c4             	mov    %rax,%r12
    6eb8:	48 85 c0             	test   %rax,%rax
    6ebb:	74 08                	je     6ec5 <des_ctx_alloc+0x25>
    6ebd:	48 89 c7             	mov    %rax,%rdi
    6ec0:	e8 4b 0f 00 00       	callq  7e10 <mbedtls_des_init>
    6ec5:	4c 89 e0             	mov    %r12,%rax
    6ec8:	41 5c                	pop    %r12
    6eca:	c3                   	retq   
    6ecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006ed0 <des_setkey_dec_wrap>:
    6ed0:	f3 0f 1e fa          	endbr64 
    6ed4:	e9 57 16 00 00       	jmpq   8530 <mbedtls_des_setkey_dec>
    6ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006ee0 <des_setkey_enc_wrap>:
    6ee0:	f3 0f 1e fa          	endbr64 
    6ee4:	e9 37 16 00 00       	jmpq   8520 <mbedtls_des_setkey_enc>
    6ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006ef0 <des_crypt_cbc_wrap>:
    6ef0:	f3 0f 1e fa          	endbr64 
    6ef4:	e9 b7 1a 00 00       	jmpq   89b0 <mbedtls_des_crypt_cbc>
    6ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006f00 <des_crypt_ecb_wrap>:
    6f00:	f3 0f 1e fa          	endbr64 
    6f04:	48 89 d6             	mov    %rdx,%rsi
    6f07:	48 89 ca             	mov    %rcx,%rdx
    6f0a:	e9 e1 17 00 00       	jmpq   86f0 <mbedtls_des_crypt_ecb>
    6f0f:	90                   	nop

0000000000006f10 <ccm_ctx_free>:
    6f10:	f3 0f 1e fa          	endbr64 
    6f14:	55                   	push   %rbp
    6f15:	48 89 fd             	mov    %rdi,%rbp
    6f18:	e8 63 6f 01 00       	callq  1de80 <mbedtls_ccm_free>
    6f1d:	48 89 ef             	mov    %rbp,%rdi
    6f20:	5d                   	pop    %rbp
    6f21:	e9 ba c2 ff ff       	jmpq   31e0 <free@plt>
    6f26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6f2d:	00 00 00 

0000000000006f30 <ccm_ctx_alloc>:
    6f30:	f3 0f 1e fa          	endbr64 
    6f34:	41 54                	push   %r12
    6f36:	be a8 00 00 00       	mov    $0xa8,%esi
    6f3b:	bf 01 00 00 00       	mov    $0x1,%edi
    6f40:	e8 7b c3 ff ff       	callq  32c0 <calloc@plt>
    6f45:	49 89 c4             	mov    %rax,%r12
    6f48:	48 85 c0             	test   %rax,%rax
    6f4b:	74 08                	je     6f55 <ccm_ctx_alloc+0x25>
    6f4d:	48 89 c7             	mov    %rax,%rdi
    6f50:	e8 5b 6e 01 00       	callq  1ddb0 <mbedtls_ccm_init>
    6f55:	4c 89 e0             	mov    %r12,%rax
    6f58:	41 5c                	pop    %r12
    6f5a:	c3                   	retq   
    6f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006f60 <ccm_aria_setkey_wrap>:
    6f60:	f3 0f 1e fa          	endbr64 
    6f64:	89 d1                	mov    %edx,%ecx
    6f66:	48 89 f2             	mov    %rsi,%rdx
    6f69:	be 06 00 00 00       	mov    $0x6,%esi
    6f6e:	e9 7d 6e 01 00       	jmpq   1ddf0 <mbedtls_ccm_setkey>
    6f73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6f7a:	00 00 00 00 
    6f7e:	66 90                	xchg   %ax,%ax

0000000000006f80 <ccm_camellia_setkey_wrap>:
    6f80:	f3 0f 1e fa          	endbr64 
    6f84:	89 d1                	mov    %edx,%ecx
    6f86:	48 89 f2             	mov    %rsi,%rdx
    6f89:	be 05 00 00 00       	mov    $0x5,%esi
    6f8e:	e9 5d 6e 01 00       	jmpq   1ddf0 <mbedtls_ccm_setkey>
    6f93:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6f9a:	00 00 00 00 
    6f9e:	66 90                	xchg   %ax,%ax

0000000000006fa0 <ccm_aes_setkey_wrap>:
    6fa0:	f3 0f 1e fa          	endbr64 
    6fa4:	89 d1                	mov    %edx,%ecx
    6fa6:	48 89 f2             	mov    %rsi,%rdx
    6fa9:	be 02 00 00 00       	mov    $0x2,%esi
    6fae:	e9 3d 6e 01 00       	jmpq   1ddf0 <mbedtls_ccm_setkey>
    6fb3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6fba:	00 00 00 00 
    6fbe:	66 90                	xchg   %ax,%ax

0000000000006fc0 <gcm_ctx_free>:
    6fc0:	f3 0f 1e fa          	endbr64 
    6fc4:	55                   	push   %rbp
    6fc5:	48 89 fd             	mov    %rdi,%rbp
    6fc8:	e8 23 d9 ff ff       	callq  48f0 <mbedtls_gcm_free>
    6fcd:	48 89 ef             	mov    %rbp,%rdi
    6fd0:	5d                   	pop    %rbp
    6fd1:	e9 0a c2 ff ff       	jmpq   31e0 <free@plt>
    6fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6fdd:	00 00 00 

0000000000006fe0 <gcm_ctx_alloc>:
    6fe0:	f3 0f 1e fa          	endbr64 
    6fe4:	41 54                	push   %r12
    6fe6:	be a8 01 00 00       	mov    $0x1a8,%esi
    6feb:	bf 01 00 00 00       	mov    $0x1,%edi
    6ff0:	e8 cb c2 ff ff       	callq  32c0 <calloc@plt>
    6ff5:	49 89 c4             	mov    %rax,%r12
    6ff8:	48 85 c0             	test   %rax,%rax
    6ffb:	74 08                	je     7005 <gcm_ctx_alloc+0x25>
    6ffd:	48 89 c7             	mov    %rax,%rdi
    7000:	e8 6b cd ff ff       	callq  3d70 <mbedtls_gcm_init>
    7005:	4c 89 e0             	mov    %r12,%rax
    7008:	41 5c                	pop    %r12
    700a:	c3                   	retq   
    700b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007010 <gcm_aria_setkey_wrap>:
    7010:	f3 0f 1e fa          	endbr64 
    7014:	89 d1                	mov    %edx,%ecx
    7016:	48 89 f2             	mov    %rsi,%rdx
    7019:	be 06 00 00 00       	mov    $0x6,%esi
    701e:	e9 8d cd ff ff       	jmpq   3db0 <mbedtls_gcm_setkey>
    7023:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    702a:	00 00 00 00 
    702e:	66 90                	xchg   %ax,%ax

0000000000007030 <gcm_camellia_setkey_wrap>:
    7030:	f3 0f 1e fa          	endbr64 
    7034:	89 d1                	mov    %edx,%ecx
    7036:	48 89 f2             	mov    %rsi,%rdx
    7039:	be 05 00 00 00       	mov    $0x5,%esi
    703e:	e9 6d cd ff ff       	jmpq   3db0 <mbedtls_gcm_setkey>
    7043:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    704a:	00 00 00 00 
    704e:	66 90                	xchg   %ax,%ax

0000000000007050 <gcm_aes_setkey_wrap>:
    7050:	f3 0f 1e fa          	endbr64 
    7054:	89 d1                	mov    %edx,%ecx
    7056:	48 89 f2             	mov    %rsi,%rdx
    7059:	be 02 00 00 00       	mov    $0x2,%esi
    705e:	e9 4d cd ff ff       	jmpq   3db0 <mbedtls_gcm_setkey>
    7063:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    706a:	00 00 00 00 
    706e:	66 90                	xchg   %ax,%ax

0000000000007070 <aria_ctx_free>:
    7070:	f3 0f 1e fa          	endbr64 
    7074:	55                   	push   %rbp
    7075:	48 89 fd             	mov    %rdi,%rbp
    7078:	e8 b3 e1 00 00       	callq  15230 <mbedtls_aria_free>
    707d:	48 89 ef             	mov    %rbp,%rdi
    7080:	5d                   	pop    %rbp
    7081:	e9 5a c1 ff ff       	jmpq   31e0 <free@plt>
    7086:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    708d:	00 00 00 

0000000000007090 <aria_ctx_alloc>:
    7090:	f3 0f 1e fa          	endbr64 
    7094:	41 54                	push   %r12
    7096:	be 14 01 00 00       	mov    $0x114,%esi
    709b:	bf 01 00 00 00       	mov    $0x1,%edi
    70a0:	e8 1b c2 ff ff       	callq  32c0 <calloc@plt>
    70a5:	49 89 c4             	mov    %rax,%r12
    70a8:	48 85 c0             	test   %rax,%rax
    70ab:	74 08                	je     70b5 <aria_ctx_alloc+0x25>
    70ad:	48 89 c7             	mov    %rax,%rdi
    70b0:	e8 3b e1 00 00       	callq  151f0 <mbedtls_aria_init>
    70b5:	4c 89 e0             	mov    %r12,%rax
    70b8:	41 5c                	pop    %r12
    70ba:	c3                   	retq   
    70bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000070c0 <aria_setkey_dec_wrap>:
    70c0:	f3 0f 1e fa          	endbr64 
    70c4:	e9 b7 db 00 00       	jmpq   14c80 <mbedtls_aria_setkey_dec>
    70c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000070d0 <aria_setkey_enc_wrap>:
    70d0:	f3 0f 1e fa          	endbr64 
    70d4:	e9 77 d7 00 00       	jmpq   14850 <mbedtls_aria_setkey_enc>
    70d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000070e0 <aria_crypt_ctr_wrap>:
    70e0:	f3 0f 1e fa          	endbr64 
    70e4:	e9 27 e3 00 00       	jmpq   15410 <mbedtls_aria_crypt_ctr>
    70e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000070f0 <aria_crypt_cfb128_wrap>:
    70f0:	f3 0f 1e fa          	endbr64 
    70f4:	e9 07 e2 00 00       	jmpq   15300 <mbedtls_aria_crypt_cfb128>
    70f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007100 <aria_crypt_cbc_wrap>:
    7100:	f3 0f 1e fa          	endbr64 
    7104:	e9 47 e1 00 00       	jmpq   15250 <mbedtls_aria_crypt_cbc>
    7109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007110 <aria_crypt_ecb_wrap>:
    7110:	f3 0f 1e fa          	endbr64 
    7114:	48 89 d6             	mov    %rdx,%rsi
    7117:	48 89 ca             	mov    %rcx,%rdx
    711a:	e9 a1 dc 00 00       	jmpq   14dc0 <mbedtls_aria_crypt_ecb>
    711f:	90                   	nop

0000000000007120 <camellia_ctx_free>:
    7120:	f3 0f 1e fa          	endbr64 
    7124:	55                   	push   %rbp
    7125:	48 89 fd             	mov    %rdi,%rbp
    7128:	e8 43 55 01 00       	callq  1c670 <mbedtls_camellia_free>
    712d:	48 89 ef             	mov    %rbp,%rdi
    7130:	5d                   	pop    %rbp
    7131:	e9 aa c0 ff ff       	jmpq   31e0 <free@plt>
    7136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    713d:	00 00 00 

0000000000007140 <camellia_ctx_alloc>:
    7140:	f3 0f 1e fa          	endbr64 
    7144:	41 54                	push   %r12
    7146:	be 14 01 00 00       	mov    $0x114,%esi
    714b:	bf 01 00 00 00       	mov    $0x1,%edi
    7150:	e8 6b c1 ff ff       	callq  32c0 <calloc@plt>
    7155:	49 89 c4             	mov    %rax,%r12
    7158:	48 85 c0             	test   %rax,%rax
    715b:	74 08                	je     7165 <camellia_ctx_alloc+0x25>
    715d:	48 89 c7             	mov    %rax,%rdi
    7160:	e8 cb 54 01 00       	callq  1c630 <mbedtls_camellia_init>
    7165:	4c 89 e0             	mov    %r12,%rax
    7168:	41 5c                	pop    %r12
    716a:	c3                   	retq   
    716b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007170 <camellia_setkey_dec_wrap>:
    7170:	f3 0f 1e fa          	endbr64 
    7174:	e9 27 5d 01 00       	jmpq   1cea0 <mbedtls_camellia_setkey_dec>
    7179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007180 <camellia_setkey_enc_wrap>:
    7180:	f3 0f 1e fa          	endbr64 
    7184:	e9 07 55 01 00       	jmpq   1c690 <mbedtls_camellia_setkey_enc>
    7189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007190 <camellia_crypt_ctr_wrap>:
    7190:	f3 0f 1e fa          	endbr64 
    7194:	e9 17 62 01 00       	jmpq   1d3b0 <mbedtls_camellia_crypt_ctr>
    7199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000071a0 <camellia_crypt_cfb128_wrap>:
    71a0:	f3 0f 1e fa          	endbr64 
    71a4:	e9 e7 60 01 00       	jmpq   1d290 <mbedtls_camellia_crypt_cfb128>
    71a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000071b0 <camellia_crypt_cbc_wrap>:
    71b0:	f3 0f 1e fa          	endbr64 
    71b4:	e9 c7 5f 01 00       	jmpq   1d180 <mbedtls_camellia_crypt_cbc>
    71b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000071c0 <camellia_crypt_ecb_wrap>:
    71c0:	f3 0f 1e fa          	endbr64 
    71c4:	e9 f7 5d 01 00       	jmpq   1cfc0 <mbedtls_camellia_crypt_ecb>
    71c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000071d0 <xts_aes_ctx_alloc>:
    71d0:	f3 0f 1e fa          	endbr64 
    71d4:	41 54                	push   %r12
    71d6:	be 40 02 00 00       	mov    $0x240,%esi
    71db:	bf 01 00 00 00       	mov    $0x1,%edi
    71e0:	e8 db c0 ff ff       	callq  32c0 <calloc@plt>
    71e5:	49 89 c4             	mov    %rax,%r12
    71e8:	48 85 c0             	test   %rax,%rax
    71eb:	74 08                	je     71f5 <xts_aes_ctx_alloc+0x25>
    71ed:	48 89 c7             	mov    %rax,%rdi
    71f0:	e8 bb af 00 00       	callq  121b0 <mbedtls_aes_xts_init>
    71f5:	4c 89 e0             	mov    %r12,%rax
    71f8:	41 5c                	pop    %r12
    71fa:	c3                   	retq   
    71fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007200 <xts_aes_setkey_dec_wrap>:
    7200:	f3 0f 1e fa          	endbr64 
    7204:	e9 c7 b5 00 00       	jmpq   127d0 <mbedtls_aes_xts_setkey_dec>
    7209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007210 <xts_aes_setkey_enc_wrap>:
    7210:	f3 0f 1e fa          	endbr64 
    7214:	e9 57 b5 00 00       	jmpq   12770 <mbedtls_aes_xts_setkey_enc>
    7219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007220 <aes_crypt_xts_wrap>:
    7220:	f3 0f 1e fa          	endbr64 
    7224:	85 f6                	test   %esi,%esi
    7226:	74 10                	je     7238 <aes_crypt_xts_wrap+0x18>
    7228:	83 fe 01             	cmp    $0x1,%esi
    722b:	74 0b                	je     7238 <aes_crypt_xts_wrap+0x18>
    722d:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    7232:	c3                   	retq   
    7233:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7238:	e9 23 c0 00 00       	jmpq   13260 <mbedtls_aes_crypt_xts>
    723d:	0f 1f 00             	nopl   (%rax)

0000000000007240 <aes_ctx_free>:
    7240:	f3 0f 1e fa          	endbr64 
    7244:	55                   	push   %rbp
    7245:	48 89 fd             	mov    %rdi,%rbp
    7248:	e8 43 af 00 00       	callq  12190 <mbedtls_aes_free>
    724d:	48 89 ef             	mov    %rbp,%rdi
    7250:	5d                   	pop    %rbp
    7251:	e9 8a bf ff ff       	jmpq   31e0 <free@plt>
    7256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    725d:	00 00 00 

0000000000007260 <aes_ctx_alloc>:
    7260:	f3 0f 1e fa          	endbr64 
    7264:	41 54                	push   %r12
    7266:	be 20 01 00 00       	mov    $0x120,%esi
    726b:	bf 01 00 00 00       	mov    $0x1,%edi
    7270:	e8 4b c0 ff ff       	callq  32c0 <calloc@plt>
    7275:	49 89 c4             	mov    %rax,%r12
    7278:	48 85 c0             	test   %rax,%rax
    727b:	74 08                	je     7285 <aes_ctx_alloc+0x25>
    727d:	48 89 c7             	mov    %rax,%rdi
    7280:	e8 cb ae 00 00       	callq  12150 <mbedtls_aes_init>
    7285:	4c 89 e0             	mov    %r12,%rax
    7288:	41 5c                	pop    %r12
    728a:	c3                   	retq   
    728b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007290 <aes_setkey_dec_wrap>:
    7290:	f3 0f 1e fa          	endbr64 
    7294:	e9 f7 b2 00 00       	jmpq   12590 <mbedtls_aes_setkey_dec>
    7299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072a0 <aes_setkey_enc_wrap>:
    72a0:	f3 0f 1e fa          	endbr64 
    72a4:	e9 b7 af 00 00       	jmpq   12260 <mbedtls_aes_setkey_enc>
    72a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072b0 <aes_crypt_ctr_wrap>:
    72b0:	f3 0f 1e fa          	endbr64 
    72b4:	e9 37 c5 00 00       	jmpq   137f0 <mbedtls_aes_crypt_ctr>
    72b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072c0 <aes_crypt_ofb_wrap>:
    72c0:	f3 0f 1e fa          	endbr64 
    72c4:	e9 77 c4 00 00       	jmpq   13740 <mbedtls_aes_crypt_ofb>
    72c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072d0 <aes_crypt_cfb128_wrap>:
    72d0:	f3 0f 1e fa          	endbr64 
    72d4:	e9 57 c2 00 00       	jmpq   13530 <mbedtls_aes_crypt_cfb128>
    72d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072e0 <aes_crypt_cbc_wrap>:
    72e0:	f3 0f 1e fa          	endbr64 
    72e4:	e9 67 be 00 00       	jmpq   13150 <mbedtls_aes_crypt_cbc>
    72e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072f0 <aes_crypt_ecb_wrap>:
    72f0:	f3 0f 1e fa          	endbr64 
    72f4:	e9 c7 bd 00 00       	jmpq   130c0 <mbedtls_aes_crypt_ecb>
    72f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007300 <xts_aes_ctx_free>:
    7300:	f3 0f 1e fa          	endbr64 
    7304:	48 85 ff             	test   %rdi,%rdi
    7307:	74 17                	je     7320 <xts_aes_ctx_free+0x20>
    7309:	55                   	push   %rbp
    730a:	48 89 fd             	mov    %rdi,%rbp
    730d:	e8 0e af 00 00       	callq  12220 <mbedtls_aes_xts_free>
    7312:	48 89 ef             	mov    %rbp,%rdi
    7315:	5d                   	pop    %rbp
    7316:	e9 c5 be ff ff       	jmpq   31e0 <free@plt>
    731b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7320:	c3                   	retq   
    7321:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7328:	00 00 00 
    732b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007330 <mbedtls_ct_memcmp>:
    7330:	f3 0f 1e fa          	endbr64 
    7334:	48 85 d2             	test   %rdx,%rdx
    7337:	74 27                	je     7360 <mbedtls_ct_memcmp+0x30>
    7339:	4c 8d 04 17          	lea    (%rdi,%rdx,1),%r8
    733d:	31 c0                	xor    %eax,%eax
    733f:	90                   	nop
    7340:	0f b6 17             	movzbl (%rdi),%edx
    7343:	0f b6 0e             	movzbl (%rsi),%ecx
    7346:	48 83 c7 01          	add    $0x1,%rdi
    734a:	48 83 c6 01          	add    $0x1,%rsi
    734e:	31 ca                	xor    %ecx,%edx
    7350:	0f b6 d2             	movzbl %dl,%edx
    7353:	09 d0                	or     %edx,%eax
    7355:	4c 39 c7             	cmp    %r8,%rdi
    7358:	75 e6                	jne    7340 <mbedtls_ct_memcmp+0x10>
    735a:	c3                   	retq   
    735b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7360:	31 c0                	xor    %eax,%eax
    7362:	c3                   	retq   
    7363:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    736a:	00 00 00 00 
    736e:	66 90                	xchg   %ax,%ax

0000000000007370 <mbedtls_ct_uint_mask>:
    7370:	f3 0f 1e fa          	endbr64 
    7374:	41 89 f8             	mov    %edi,%r8d
    7377:	f7 df                	neg    %edi
    7379:	44 09 c7             	or     %r8d,%edi
    737c:	89 f8                	mov    %edi,%eax
    737e:	c1 f8 1f             	sar    $0x1f,%eax
    7381:	c3                   	retq   
    7382:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7389:	00 00 00 00 
    738d:	0f 1f 00             	nopl   (%rax)

0000000000007390 <mbedtls_ct_size_mask>:
    7390:	f3 0f 1e fa          	endbr64 
    7394:	49 89 f8             	mov    %rdi,%r8
    7397:	48 f7 df             	neg    %rdi
    739a:	4c 09 c7             	or     %r8,%rdi
    739d:	48 89 f8             	mov    %rdi,%rax
    73a0:	48 c1 f8 3f          	sar    $0x3f,%rax
    73a4:	c3                   	retq   
    73a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    73ac:	00 00 00 00 

00000000000073b0 <mbedtls_ct_mpi_uint_mask>:
    73b0:	f3 0f 1e fa          	endbr64 
    73b4:	49 89 f8             	mov    %rdi,%r8
    73b7:	48 f7 df             	neg    %rdi
    73ba:	4c 09 c7             	or     %r8,%rdi
    73bd:	48 89 f8             	mov    %rdi,%rax
    73c0:	48 c1 f8 3f          	sar    $0x3f,%rax
    73c4:	c3                   	retq   
    73c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    73cc:	00 00 00 00 

00000000000073d0 <mbedtls_ct_size_mask_ge>:
    73d0:	f3 0f 1e fa          	endbr64 
    73d4:	48 89 f8             	mov    %rdi,%rax
    73d7:	48 29 f0             	sub    %rsi,%rax
    73da:	48 c1 f8 3f          	sar    $0x3f,%rax
    73de:	48 f7 d0             	not    %rax
    73e1:	c3                   	retq   
    73e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    73e9:	00 00 00 00 
    73ed:	0f 1f 00             	nopl   (%rax)

00000000000073f0 <mbedtls_ct_size_bool_eq>:
    73f0:	f3 0f 1e fa          	endbr64 
    73f4:	48 31 fe             	xor    %rdi,%rsi
    73f7:	48 89 f0             	mov    %rsi,%rax
    73fa:	48 f7 d8             	neg    %rax
    73fd:	48 09 f0             	or     %rsi,%rax
    7400:	48 c1 e8 3f          	shr    $0x3f,%rax
    7404:	83 f0 01             	xor    $0x1,%eax
    7407:	c3                   	retq   
    7408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    740f:	00 

0000000000007410 <mbedtls_ct_mpi_uint_lt>:
    7410:	f3 0f 1e fa          	endbr64 
    7414:	48 89 fa             	mov    %rdi,%rdx
    7417:	48 89 f0             	mov    %rsi,%rax
    741a:	48 31 f7             	xor    %rsi,%rdi
    741d:	48 29 f2             	sub    %rsi,%rdx
    7420:	48 31 d0             	xor    %rdx,%rax
    7423:	48 21 f8             	and    %rdi,%rax
    7426:	48 31 d0             	xor    %rdx,%rax
    7429:	48 c1 e8 3f          	shr    $0x3f,%rax
    742d:	c3                   	retq   
    742e:	66 90                	xchg   %ax,%ax

0000000000007430 <mbedtls_ct_uint_if>:
    7430:	f3 0f 1e fa          	endbr64 
    7434:	41 89 f8             	mov    %edi,%r8d
    7437:	f7 df                	neg    %edi
    7439:	31 d6                	xor    %edx,%esi
    743b:	89 d0                	mov    %edx,%eax
    743d:	44 09 c7             	or     %r8d,%edi
    7440:	c1 ff 1f             	sar    $0x1f,%edi
    7443:	21 f7                	and    %esi,%edi
    7445:	31 f8                	xor    %edi,%eax
    7447:	c3                   	retq   
    7448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    744f:	00 

0000000000007450 <mbedtls_ct_mpi_uint_cond_assign>:
    7450:	f3 0f 1e fa          	endbr64 
    7454:	0f b6 c9             	movzbl %cl,%ecx
    7457:	31 c0                	xor    %eax,%eax
    7459:	41 89 ca             	mov    %ecx,%r10d
    745c:	83 e9 01             	sub    $0x1,%ecx
    745f:	41 f7 da             	neg    %r10d
    7462:	4c 63 c9             	movslq %ecx,%r9
    7465:	4d 63 d2             	movslq %r10d,%r10
    7468:	48 85 ff             	test   %rdi,%rdi
    746b:	74 21                	je     748e <mbedtls_ct_mpi_uint_cond_assign+0x3e>
    746d:	0f 1f 00             	nopl   (%rax)
    7470:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    7474:	4c 8b 04 c6          	mov    (%rsi,%rax,8),%r8
    7478:	4c 21 d1             	and    %r10,%rcx
    747b:	4d 21 c8             	and    %r9,%r8
    747e:	4c 09 c1             	or     %r8,%rcx
    7481:	48 89 0c c6          	mov    %rcx,(%rsi,%rax,8)
    7485:	48 83 c0 01          	add    $0x1,%rax
    7489:	48 39 c7             	cmp    %rax,%rdi
    748c:	75 e2                	jne    7470 <mbedtls_ct_mpi_uint_cond_assign+0x20>
    748e:	c3                   	retq   
    748f:	90                   	nop

0000000000007490 <mbedtls_ct_base64_enc_char>:
    7490:	f3 0f 1e fa          	endbr64 
    7494:	40 0f b6 ff          	movzbl %dil,%edi
    7498:	ba 3e 00 00 00       	mov    $0x3e,%edx
    749d:	29 fa                	sub    %edi,%edx
    749f:	8d 47 c2             	lea    -0x3e(%rdi),%eax
    74a2:	8d 4f 41             	lea    0x41(%rdi),%ecx
    74a5:	c1 ea 08             	shr    $0x8,%edx
    74a8:	c1 e8 08             	shr    $0x8,%eax
    74ab:	09 d0                	or     %edx,%eax
    74ad:	f7 d0                	not    %eax
    74af:	83 e0 2b             	and    $0x2b,%eax
    74b2:	89 c2                	mov    %eax,%edx
    74b4:	b8 19 00 00 00       	mov    $0x19,%eax
    74b9:	29 f8                	sub    %edi,%eax
    74bb:	c1 e8 08             	shr    $0x8,%eax
    74be:	f7 d0                	not    %eax
    74c0:	21 c8                	and    %ecx,%eax
    74c2:	b9 3f 00 00 00       	mov    $0x3f,%ecx
    74c7:	09 d0                	or     %edx,%eax
    74c9:	29 f9                	sub    %edi,%ecx
    74cb:	8d 57 c1             	lea    -0x3f(%rdi),%edx
    74ce:	c1 e9 08             	shr    $0x8,%ecx
    74d1:	c1 ea 08             	shr    $0x8,%edx
    74d4:	09 ca                	or     %ecx,%edx
    74d6:	b9 33 00 00 00       	mov    $0x33,%ecx
    74db:	f7 d2                	not    %edx
    74dd:	29 f9                	sub    %edi,%ecx
    74df:	83 e2 2f             	and    $0x2f,%edx
    74e2:	c1 e9 08             	shr    $0x8,%ecx
    74e5:	09 d0                	or     %edx,%eax
    74e7:	8d 57 e6             	lea    -0x1a(%rdi),%edx
    74ea:	c1 ea 08             	shr    $0x8,%edx
    74ed:	09 ca                	or     %ecx,%edx
    74ef:	8d 4f 47             	lea    0x47(%rdi),%ecx
    74f2:	f7 d2                	not    %edx
    74f4:	21 ca                	and    %ecx,%edx
    74f6:	b9 3d 00 00 00       	mov    $0x3d,%ecx
    74fb:	09 c2                	or     %eax,%edx
    74fd:	29 f9                	sub    %edi,%ecx
    74ff:	8d 47 cc             	lea    -0x34(%rdi),%eax
    7502:	83 ef 04             	sub    $0x4,%edi
    7505:	c1 e8 08             	shr    $0x8,%eax
    7508:	c1 e9 08             	shr    $0x8,%ecx
    750b:	09 c8                	or     %ecx,%eax
    750d:	f7 d0                	not    %eax
    750f:	21 c7                	and    %eax,%edi
    7511:	89 f8                	mov    %edi,%eax
    7513:	09 d0                	or     %edx,%eax
    7515:	c3                   	retq   
    7516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    751d:	00 00 00 

0000000000007520 <mbedtls_ct_base64_dec_value>:
    7520:	f3 0f 1e fa          	endbr64 
    7524:	40 0f b6 ff          	movzbl %dil,%edi
    7528:	ba 5a 00 00 00       	mov    $0x5a,%edx
    752d:	b9 7a 00 00 00       	mov    $0x7a,%ecx
    7532:	29 fa                	sub    %edi,%edx
    7534:	8d 47 bf             	lea    -0x41(%rdi),%eax
    7537:	29 f9                	sub    %edi,%ecx
    7539:	c1 ea 08             	shr    $0x8,%edx
    753c:	c1 e8 08             	shr    $0x8,%eax
    753f:	09 d0                	or     %edx,%eax
    7541:	8d 57 c0             	lea    -0x40(%rdi),%edx
    7544:	c1 e9 08             	shr    $0x8,%ecx
    7547:	f7 d0                	not    %eax
    7549:	21 c2                	and    %eax,%edx
    754b:	8d 47 9f             	lea    -0x61(%rdi),%eax
    754e:	c1 e8 08             	shr    $0x8,%eax
    7551:	09 c8                	or     %ecx,%eax
    7553:	8d 4f ba             	lea    -0x46(%rdi),%ecx
    7556:	f7 d0                	not    %eax
    7558:	21 c8                	and    %ecx,%eax
    755a:	b9 39 00 00 00       	mov    $0x39,%ecx
    755f:	09 d0                	or     %edx,%eax
    7561:	29 f9                	sub    %edi,%ecx
    7563:	8d 57 d0             	lea    -0x30(%rdi),%edx
    7566:	c1 e9 08             	shr    $0x8,%ecx
    7569:	c1 ea 08             	shr    $0x8,%edx
    756c:	09 ca                	or     %ecx,%edx
    756e:	8d 4f 05             	lea    0x5(%rdi),%ecx
    7571:	f7 d2                	not    %edx
    7573:	21 ca                	and    %ecx,%edx
    7575:	b9 2b 00 00 00       	mov    $0x2b,%ecx
    757a:	09 d0                	or     %edx,%eax
    757c:	29 f9                	sub    %edi,%ecx
    757e:	8d 57 d5             	lea    -0x2b(%rdi),%edx
    7581:	c1 e9 08             	shr    $0x8,%ecx
    7584:	c1 ea 08             	shr    $0x8,%edx
    7587:	09 ca                	or     %ecx,%edx
    7589:	8d 4f 14             	lea    0x14(%rdi),%ecx
    758c:	f7 d2                	not    %edx
    758e:	21 ca                	and    %ecx,%edx
    7590:	b9 2f 00 00 00       	mov    $0x2f,%ecx
    7595:	09 c2                	or     %eax,%edx
    7597:	29 f9                	sub    %edi,%ecx
    7599:	8d 47 d1             	lea    -0x2f(%rdi),%eax
    759c:	83 c7 11             	add    $0x11,%edi
    759f:	c1 e8 08             	shr    $0x8,%eax
    75a2:	c1 e9 08             	shr    $0x8,%ecx
    75a5:	09 c8                	or     %ecx,%eax
    75a7:	f7 d0                	not    %eax
    75a9:	21 c7                	and    %eax,%edi
    75ab:	09 d7                	or     %edx,%edi
    75ad:	8d 47 ff             	lea    -0x1(%rdi),%eax
    75b0:	c3                   	retq   
    75b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    75b8:	00 00 00 00 
    75bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000075c0 <mbedtls_ct_memcpy_if_eq>:
    75c0:	f3 0f 1e fa          	endbr64 
    75c4:	4c 31 c1             	xor    %r8,%rcx
    75c7:	48 89 c8             	mov    %rcx,%rax
    75ca:	48 f7 d8             	neg    %rax
    75cd:	48 09 c8             	or     %rcx,%rax
    75d0:	48 c1 e8 3f          	shr    $0x3f,%rax
    75d4:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
    75d8:	45 89 ca             	mov    %r9d,%r10d
    75db:	45 89 cb             	mov    %r9d,%r11d
    75de:	48 83 fa 03          	cmp    $0x3,%rdx
    75e2:	76 5c                	jbe    7640 <mbedtls_ct_memcpy_if_eq+0x80>
    75e4:	b8 04 00 00 00       	mov    $0x4,%eax
    75e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    75f0:	44 8b 44 07 fc       	mov    -0x4(%rdi,%rax,1),%r8d
    75f5:	8b 4c 06 fc          	mov    -0x4(%rsi,%rax,1),%ecx
    75f9:	44 31 c1             	xor    %r8d,%ecx
    75fc:	44 21 d1             	and    %r10d,%ecx
    75ff:	44 31 c1             	xor    %r8d,%ecx
    7602:	89 4c 07 fc          	mov    %ecx,-0x4(%rdi,%rax,1)
    7606:	48 89 c1             	mov    %rax,%rcx
    7609:	48 83 c0 04          	add    $0x4,%rax
    760d:	48 39 c2             	cmp    %rax,%rdx
    7610:	73 de                	jae    75f0 <mbedtls_ct_memcpy_if_eq+0x30>
    7612:	44 89 c8             	mov    %r9d,%eax
    7615:	f7 d0                	not    %eax
    7617:	48 39 ca             	cmp    %rcx,%rdx
    761a:	76 20                	jbe    763c <mbedtls_ct_memcpy_if_eq+0x7c>
    761c:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
    7621:	44 0f b6 0c 0f       	movzbl (%rdi,%rcx,1),%r9d
    7626:	45 21 d8             	and    %r11d,%r8d
    7629:	41 21 c1             	and    %eax,%r9d
    762c:	45 09 c8             	or     %r9d,%r8d
    762f:	44 88 04 0f          	mov    %r8b,(%rdi,%rcx,1)
    7633:	48 83 c1 01          	add    $0x1,%rcx
    7637:	48 39 ca             	cmp    %rcx,%rdx
    763a:	75 e0                	jne    761c <mbedtls_ct_memcpy_if_eq+0x5c>
    763c:	c3                   	retq   
    763d:	0f 1f 00             	nopl   (%rax)
    7640:	31 c9                	xor    %ecx,%ecx
    7642:	eb ce                	jmp    7612 <mbedtls_ct_memcpy_if_eq+0x52>
    7644:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    764b:	00 00 00 00 
    764f:	90                   	nop

0000000000007650 <mbedtls_ct_memcpy_offset>:
    7650:	f3 0f 1e fa          	endbr64 
    7654:	4c 39 c1             	cmp    %r8,%rcx
    7657:	77 37                	ja     7690 <mbedtls_ct_memcpy_offset+0x40>
    7659:	41 55                	push   %r13
    765b:	49 89 f5             	mov    %rsi,%r13
    765e:	41 54                	push   %r12
    7660:	49 89 d4             	mov    %rdx,%r12
    7663:	4c 89 ca             	mov    %r9,%rdx
    7666:	55                   	push   %rbp
    7667:	4c 89 c5             	mov    %r8,%rbp
    766a:	53                   	push   %rbx
    766b:	48 89 cb             	mov    %rcx,%rbx
    766e:	66 90                	xchg   %ax,%ax
    7670:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    7675:	48 89 d9             	mov    %rbx,%rcx
    7678:	4d 89 e0             	mov    %r12,%r8
    767b:	48 83 c3 01          	add    $0x1,%rbx
    767f:	e8 3c ff ff ff       	callq  75c0 <mbedtls_ct_memcpy_if_eq>
    7684:	48 39 dd             	cmp    %rbx,%rbp
    7687:	73 e7                	jae    7670 <mbedtls_ct_memcpy_offset+0x20>
    7689:	5b                   	pop    %rbx
    768a:	5d                   	pop    %rbp
    768b:	41 5c                	pop    %r12
    768d:	41 5d                	pop    %r13
    768f:	c3                   	retq   
    7690:	c3                   	retq   
    7691:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7698:	00 00 00 00 
    769c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000076a0 <mbedtls_ct_hmac>:
    76a0:	f3 0f 1e fa          	endbr64 
    76a4:	41 57                	push   %r15
    76a6:	49 89 d7             	mov    %rdx,%r15
    76a9:	41 56                	push   %r14
    76ab:	41 55                	push   %r13
    76ad:	49 89 f5             	mov    %rsi,%r13
    76b0:	41 54                	push   %r12
    76b2:	55                   	push   %rbp
    76b3:	48 89 fd             	mov    %rdi,%rbp
    76b6:	53                   	push   %rbx
    76b7:	4c 89 cb             	mov    %r9,%rbx
    76ba:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    76c1:	48 8b 3f             	mov    (%rdi),%rdi
    76c4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    76c9:	4c 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%r14
    76d0:	00 
    76d1:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    76d6:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    76db:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    76e2:	00 00 
    76e4:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    76eb:	00 
    76ec:	31 c0                	xor    %eax,%eax
    76ee:	e8 6d 25 00 00       	callq  9c60 <mbedtls_md_get_type>
    76f3:	ba 80 00 00 00       	mov    $0x80,%edx
    76f8:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    76fc:	83 f8 05             	cmp    $0x5,%eax
    76ff:	b8 40 00 00 00       	mov    $0x40,%eax
    7704:	48 0f 44 c2          	cmove  %rdx,%rax
    7708:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    770d:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7711:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7716:	e8 25 25 00 00       	callq  9c40 <mbedtls_md_get_size>
    771b:	4c 89 e7             	mov    %r12,%rdi
    771e:	88 44 24 18          	mov    %al,0x18(%rsp)
    7722:	e8 59 1f 00 00       	callq  9680 <mbedtls_md_init>
    7727:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    772b:	31 d2                	xor    %edx,%edx
    772d:	4c 89 e7             	mov    %r12,%rdi
    7730:	e8 3b 21 00 00       	callq  9870 <mbedtls_md_setup>
    7735:	85 c0                	test   %eax,%eax
    7737:	74 3f                	je     7778 <mbedtls_ct_hmac+0xd8>
    7739:	4c 89 e7             	mov    %r12,%rdi
    773c:	89 44 24 08          	mov    %eax,0x8(%rsp)
    7740:	e8 5b 1f 00 00       	callq  96a0 <mbedtls_md_free>
    7745:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    774c:	00 
    774d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7754:	00 00 
    7756:	8b 44 24 08          	mov    0x8(%rsp),%eax
    775a:	0f 85 dd 01 00 00    	jne    793d <mbedtls_ct_hmac+0x29d>
    7760:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    7767:	5b                   	pop    %rbx
    7768:	5d                   	pop    %rbp
    7769:	41 5c                	pop    %r12
    776b:	41 5d                	pop    %r13
    776d:	41 5e                	pop    %r14
    776f:	41 5f                	pop    %r15
    7771:	c3                   	retq   
    7772:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7778:	4c 89 fa             	mov    %r15,%rdx
    777b:	4c 89 ee             	mov    %r13,%rsi
    777e:	48 89 ef             	mov    %rbp,%rdi
    7781:	e8 1a 23 00 00       	callq  9aa0 <mbedtls_md_update>
    7786:	85 c0                	test   %eax,%eax
    7788:	75 af                	jne    7739 <mbedtls_ct_hmac+0x99>
    778a:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    778f:	48 89 da             	mov    %rbx,%rdx
    7792:	48 89 ef             	mov    %rbp,%rdi
    7795:	e8 06 23 00 00       	callq  9aa0 <mbedtls_md_update>
    779a:	85 c0                	test   %eax,%eax
    779c:	75 9b                	jne    7739 <mbedtls_ct_hmac+0x99>
    779e:	48 b8 21 21 21 21 21 	movabs $0x2121212121212121,%rax
    77a5:	21 21 21 
    77a8:	44 0f b6 7c 24 18    	movzbl 0x18(%rsp),%r15d
    77ae:	41 83 ff 08          	cmp    $0x8,%r15d
    77b2:	0f 83 a8 00 00 00    	jae    7860 <mbedtls_ct_hmac+0x1c0>
    77b8:	41 f6 c7 04          	test   $0x4,%r15b
    77bc:	0f 85 66 01 00 00    	jne    7928 <mbedtls_ct_hmac+0x288>
    77c2:	45 85 ff             	test   %r15d,%r15d
    77c5:	0f 85 bd 00 00 00    	jne    7888 <mbedtls_ct_hmac+0x1e8>
    77cb:	48 3b 9c 24 e0 00 00 	cmp    0xe0(%rsp),%rbx
    77d2:	00 
    77d3:	0f 87 cd 00 00 00    	ja     78a6 <mbedtls_ct_hmac+0x206>
    77d9:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
    77de:	eb 12                	jmp    77f2 <mbedtls_ct_hmac+0x152>
    77e0:	48 83 c3 01          	add    $0x1,%rbx
    77e4:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
    77eb:	00 
    77ec:	0f 82 be 00 00 00    	jb     78b0 <mbedtls_ct_hmac+0x210>
    77f2:	48 89 ee             	mov    %rbp,%rsi
    77f5:	4c 89 e7             	mov    %r12,%rdi
    77f8:	e8 83 1f 00 00       	callq  9780 <mbedtls_md_clone>
    77fd:	85 c0                	test   %eax,%eax
    77ff:	0f 85 34 ff ff ff    	jne    7739 <mbedtls_ct_hmac+0x99>
    7805:	4c 89 ee             	mov    %r13,%rsi
    7808:	4c 89 e7             	mov    %r12,%rdi
    780b:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    7810:	e8 0b 23 00 00       	callq  9b20 <mbedtls_md_finish>
    7815:	85 c0                	test   %eax,%eax
    7817:	0f 85 1c ff ff ff    	jne    7739 <mbedtls_ct_hmac+0x99>
    781d:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    7822:	48 89 d9             	mov    %rbx,%rcx
    7825:	4c 89 fa             	mov    %r15,%rdx
    7828:	4c 89 ee             	mov    %r13,%rsi
    782b:	4c 89 f7             	mov    %r14,%rdi
    782e:	e8 8d fd ff ff       	callq  75c0 <mbedtls_ct_memcpy_if_eq>
    7833:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
    783a:	00 
    783b:	76 a3                	jbe    77e0 <mbedtls_ct_hmac+0x140>
    783d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    7842:	ba 01 00 00 00       	mov    $0x1,%edx
    7847:	48 89 ef             	mov    %rbp,%rdi
    784a:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
    784e:	e8 4d 22 00 00       	callq  9aa0 <mbedtls_md_update>
    7853:	85 c0                	test   %eax,%eax
    7855:	74 89                	je     77e0 <mbedtls_ct_hmac+0x140>
    7857:	e9 dd fe ff ff       	jmpq   7739 <mbedtls_ct_hmac+0x99>
    785c:	0f 1f 40 00          	nopl   0x0(%rax)
    7860:	49 8d 7e 08          	lea    0x8(%r14),%rdi
    7864:	4c 89 f1             	mov    %r14,%rcx
    7867:	49 89 06             	mov    %rax,(%r14)
    786a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    786e:	4b 89 44 3e f8       	mov    %rax,-0x8(%r14,%r15,1)
    7873:	48 29 f9             	sub    %rdi,%rcx
    7876:	44 01 f9             	add    %r15d,%ecx
    7879:	c1 e9 03             	shr    $0x3,%ecx
    787c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    787f:	e9 47 ff ff ff       	jmpq   77cb <mbedtls_ct_hmac+0x12b>
    7884:	0f 1f 40 00          	nopl   0x0(%rax)
    7888:	41 c6 06 21          	movb   $0x21,(%r14)
    788c:	41 f6 c7 02          	test   $0x2,%r15b
    7890:	0f 84 35 ff ff ff    	je     77cb <mbedtls_ct_hmac+0x12b>
    7896:	b8 21 21 00 00       	mov    $0x2121,%eax
    789b:	66 43 89 44 3e fe    	mov    %ax,-0x2(%r14,%r15,1)
    78a1:	e9 25 ff ff ff       	jmpq   77cb <mbedtls_ct_hmac+0x12b>
    78a6:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    78ab:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    78b0:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    78b5:	48 89 ef             	mov    %rbp,%rdi
    78b8:	e8 63 22 00 00       	callq  9b20 <mbedtls_md_finish>
    78bd:	85 c0                	test   %eax,%eax
    78bf:	0f 85 74 fe ff ff    	jne    7739 <mbedtls_ct_hmac+0x99>
    78c5:	48 89 ef             	mov    %rbp,%rdi
    78c8:	e8 13 21 00 00       	callq  99e0 <mbedtls_md_starts>
    78cd:	85 c0                	test   %eax,%eax
    78cf:	0f 85 64 fe ff ff    	jne    7739 <mbedtls_ct_hmac+0x99>
    78d5:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    78da:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    78df:	48 89 ef             	mov    %rbp,%rdi
    78e2:	48 01 d6             	add    %rdx,%rsi
    78e5:	e8 b6 21 00 00       	callq  9aa0 <mbedtls_md_update>
    78ea:	85 c0                	test   %eax,%eax
    78ec:	0f 85 47 fe ff ff    	jne    7739 <mbedtls_ct_hmac+0x99>
    78f2:	4c 89 fa             	mov    %r15,%rdx
    78f5:	4c 89 f6             	mov    %r14,%rsi
    78f8:	48 89 ef             	mov    %rbp,%rdi
    78fb:	e8 a0 21 00 00       	callq  9aa0 <mbedtls_md_update>
    7900:	85 c0                	test   %eax,%eax
    7902:	0f 85 31 fe ff ff    	jne    7739 <mbedtls_ct_hmac+0x99>
    7908:	4c 89 f6             	mov    %r14,%rsi
    790b:	48 89 ef             	mov    %rbp,%rdi
    790e:	e8 0d 22 00 00       	callq  9b20 <mbedtls_md_finish>
    7913:	85 c0                	test   %eax,%eax
    7915:	0f 85 1e fe ff ff    	jne    7739 <mbedtls_ct_hmac+0x99>
    791b:	48 89 ef             	mov    %rbp,%rdi
    791e:	e8 1d 2a 00 00       	callq  a340 <mbedtls_md_hmac_reset>
    7923:	e9 11 fe ff ff       	jmpq   7739 <mbedtls_ct_hmac+0x99>
    7928:	41 c7 06 21 21 21 21 	movl   $0x21212121,(%r14)
    792f:	43 c7 44 3e fc 21 21 	movl   $0x21212121,-0x4(%r14,%r15,1)
    7936:	21 21 
    7938:	e9 8e fe ff ff       	jmpq   77cb <mbedtls_ct_hmac+0x12b>
    793d:	e8 1e b9 ff ff       	callq  3260 <__stack_chk_fail@plt>
    7942:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7949:	00 00 00 00 
    794d:	0f 1f 00             	nopl   (%rax)

0000000000007950 <mbedtls_mpi_safe_cond_assign>:
    7950:	f3 0f 1e fa          	endbr64 
    7954:	41 56                	push   %r14
    7956:	44 0f b6 f2          	movzbl %dl,%r14d
    795a:	41 55                	push   %r13
    795c:	41 54                	push   %r12
    795e:	41 89 d4             	mov    %edx,%r12d
    7961:	55                   	push   %rbp
    7962:	48 89 f5             	mov    %rsi,%rbp
    7965:	53                   	push   %rbx
    7966:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    796a:	48 89 fb             	mov    %rdi,%rbx
    796d:	e8 3e e8 00 00       	callq  161b0 <mbedtls_mpi_grow>
    7972:	41 89 c5             	mov    %eax,%r13d
    7975:	85 c0                	test   %eax,%eax
    7977:	74 0f                	je     7988 <mbedtls_mpi_safe_cond_assign+0x38>
    7979:	5b                   	pop    %rbx
    797a:	44 89 e8             	mov    %r13d,%eax
    797d:	5d                   	pop    %rbp
    797e:	41 5c                	pop    %r12
    7980:	41 5d                	pop    %r13
    7982:	41 5e                	pop    %r14
    7984:	c3                   	retq   
    7985:	0f 1f 00             	nopl   (%rax)
    7988:	8b 03                	mov    (%rbx),%eax
    798a:	41 0f b6 cc          	movzbl %r12b,%ecx
    798e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    7992:	8d 34 09             	lea    (%rcx,%rcx,1),%esi
    7995:	8d 50 01             	lea    0x1(%rax),%edx
    7998:	8b 45 00             	mov    0x0(%rbp),%eax
    799b:	83 c0 01             	add    $0x1,%eax
    799e:	31 d0                	xor    %edx,%eax
    79a0:	21 f0                	and    %esi,%eax
    79a2:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    79a6:	31 d0                	xor    %edx,%eax
    79a8:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    79ac:	83 e8 01             	sub    $0x1,%eax
    79af:	89 03                	mov    %eax,(%rbx)
    79b1:	e8 fa 3b 01 00       	callq  1b5b0 <mbedtls_mpi_core_cond_assign>
    79b6:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    79ba:	48 3b 53 08          	cmp    0x8(%rbx),%rdx
    79be:	73 b9                	jae    7979 <mbedtls_mpi_safe_cond_assign+0x29>
    79c0:	4c 89 f6             	mov    %r14,%rsi
    79c3:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    79c7:	48 f7 de             	neg    %rsi
    79ca:	4c 09 f6             	or     %r14,%rsi
    79cd:	48 c1 fe 3f          	sar    $0x3f,%rsi
    79d1:	48 f7 d6             	not    %rsi
    79d4:	0f 1f 40 00          	nopl   0x0(%rax)
    79d8:	48 21 34 d1          	and    %rsi,(%rcx,%rdx,8)
    79dc:	48 83 c2 01          	add    $0x1,%rdx
    79e0:	48 39 53 08          	cmp    %rdx,0x8(%rbx)
    79e4:	77 f2                	ja     79d8 <mbedtls_mpi_safe_cond_assign+0x88>
    79e6:	5b                   	pop    %rbx
    79e7:	44 89 e8             	mov    %r13d,%eax
    79ea:	5d                   	pop    %rbp
    79eb:	41 5c                	pop    %r12
    79ed:	41 5d                	pop    %r13
    79ef:	41 5e                	pop    %r14
    79f1:	c3                   	retq   
    79f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    79f9:	00 00 00 00 
    79fd:	0f 1f 00             	nopl   (%rax)

0000000000007a00 <mbedtls_mpi_safe_cond_swap>:
    7a00:	f3 0f 1e fa          	endbr64 
    7a04:	31 c0                	xor    %eax,%eax
    7a06:	48 39 f7             	cmp    %rsi,%rdi
    7a09:	0f 84 99 00 00 00    	je     7aa8 <mbedtls_mpi_safe_cond_swap+0xa8>
    7a0f:	41 54                	push   %r12
    7a11:	41 89 d4             	mov    %edx,%r12d
    7a14:	55                   	push   %rbp
    7a15:	48 89 f5             	mov    %rsi,%rbp
    7a18:	53                   	push   %rbx
    7a19:	48 89 fb             	mov    %rdi,%rbx
    7a1c:	48 83 ec 10          	sub    $0x10,%rsp
    7a20:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    7a24:	e8 87 e7 00 00       	callq  161b0 <mbedtls_mpi_grow>
    7a29:	85 c0                	test   %eax,%eax
    7a2b:	74 13                	je     7a40 <mbedtls_mpi_safe_cond_swap+0x40>
    7a2d:	48 83 c4 10          	add    $0x10,%rsp
    7a31:	5b                   	pop    %rbx
    7a32:	5d                   	pop    %rbp
    7a33:	41 5c                	pop    %r12
    7a35:	c3                   	retq   
    7a36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7a3d:	00 00 00 
    7a40:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    7a44:	48 89 ef             	mov    %rbp,%rdi
    7a47:	e8 64 e7 00 00       	callq  161b0 <mbedtls_mpi_grow>
    7a4c:	85 c0                	test   %eax,%eax
    7a4e:	75 dd                	jne    7a2d <mbedtls_mpi_safe_cond_swap+0x2d>
    7a50:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    7a54:	8b 03                	mov    (%rbx),%eax
    7a56:	41 0f b6 cc          	movzbl %r12b,%ecx
    7a5a:	8d 3c 09             	lea    (%rcx,%rcx,1),%edi
    7a5d:	8d 50 01             	lea    0x1(%rax),%edx
    7a60:	8b 45 00             	mov    0x0(%rbp),%eax
    7a63:	8d 70 01             	lea    0x1(%rax),%esi
    7a66:	31 d6                	xor    %edx,%esi
    7a68:	21 fe                	and    %edi,%esi
    7a6a:	31 d6                	xor    %edx,%esi
    7a6c:	83 ee 01             	sub    $0x1,%esi
    7a6f:	89 33                	mov    %esi,(%rbx)
    7a71:	8b 45 00             	mov    0x0(%rbp),%eax
    7a74:	8d 70 01             	lea    0x1(%rax),%esi
    7a77:	31 f2                	xor    %esi,%edx
    7a79:	21 fa                	and    %edi,%edx
    7a7b:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    7a7f:	31 f2                	xor    %esi,%edx
    7a81:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    7a85:	83 ea 01             	sub    $0x1,%edx
    7a88:	89 55 00             	mov    %edx,0x0(%rbp)
    7a8b:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    7a8f:	e8 4c 3b 01 00       	callq  1b5e0 <mbedtls_mpi_core_cond_swap>
    7a94:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    7a98:	48 83 c4 10          	add    $0x10,%rsp
    7a9c:	5b                   	pop    %rbx
    7a9d:	5d                   	pop    %rbp
    7a9e:	41 5c                	pop    %r12
    7aa0:	c3                   	retq   
    7aa1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7aa8:	c3                   	retq   
    7aa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007ab0 <mbedtls_mpi_core_lt_ct>:
    7ab0:	f3 0f 1e fa          	endbr64 
    7ab4:	48 85 d2             	test   %rdx,%rdx
    7ab7:	74 6f                	je     7b28 <mbedtls_mpi_core_lt_ct+0x78>
    7ab9:	55                   	push   %rbp
    7aba:	45 31 c9             	xor    %r9d,%r9d
    7abd:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    7ac3:	53                   	push   %rbx
    7ac4:	31 db                	xor    %ebx,%ebx
    7ac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7acd:	00 00 00 
    7ad0:	48 8b 44 d6 f8       	mov    -0x8(%rsi,%rdx,8),%rax
    7ad5:	48 8b 4c d7 f8       	mov    -0x8(%rdi,%rdx,8),%rcx
    7ada:	48 89 c5             	mov    %rax,%rbp
    7add:	49 89 cb             	mov    %rcx,%r11
    7ae0:	49 89 c8             	mov    %rcx,%r8
    7ae3:	48 29 cd             	sub    %rcx,%rbp
    7ae6:	49 31 c3             	xor    %rax,%r11
    7ae9:	48 29 c1             	sub    %rax,%rcx
    7aec:	49 31 e8             	xor    %rbp,%r8
    7aef:	48 31 c8             	xor    %rcx,%rax
    7af2:	4d 21 d8             	and    %r11,%r8
    7af5:	4c 21 d8             	and    %r11,%rax
    7af8:	49 31 e8             	xor    %rbp,%r8
    7afb:	48 31 c8             	xor    %rcx,%rax
    7afe:	44 89 d1             	mov    %r10d,%ecx
    7b01:	49 c1 e8 3f          	shr    $0x3f,%r8
    7b05:	48 c1 e8 3f          	shr    $0x3f,%rax
    7b09:	41 09 d8             	or     %ebx,%r8d
    7b0c:	44 29 c1             	sub    %r8d,%ecx
    7b0f:	44 89 c3             	mov    %r8d,%ebx
    7b12:	21 c1                	and    %eax,%ecx
    7b14:	09 c3                	or     %eax,%ebx
    7b16:	41 09 c9             	or     %ecx,%r9d
    7b19:	48 83 ea 01          	sub    $0x1,%rdx
    7b1d:	75 b1                	jne    7ad0 <mbedtls_mpi_core_lt_ct+0x20>
    7b1f:	44 89 c8             	mov    %r9d,%eax
    7b22:	5b                   	pop    %rbx
    7b23:	5d                   	pop    %rbp
    7b24:	c3                   	retq   
    7b25:	0f 1f 00             	nopl   (%rax)
    7b28:	45 31 c9             	xor    %r9d,%r9d
    7b2b:	44 89 c8             	mov    %r9d,%eax
    7b2e:	c3                   	retq   
    7b2f:	90                   	nop

0000000000007b30 <mbedtls_mpi_lt_mpi_ct>:
    7b30:	f3 0f 1e fa          	endbr64 
    7b34:	4c 8b 47 08          	mov    0x8(%rdi),%r8
    7b38:	4c 3b 46 08          	cmp    0x8(%rsi),%r8
    7b3c:	0f 85 d1 00 00 00    	jne    7c13 <mbedtls_mpi_lt_mpi_ct+0xe3>
    7b42:	8b 07                	mov    (%rdi),%eax
    7b44:	44 8b 0e             	mov    (%rsi),%r9d
    7b47:	d1 f8                	sar    %eax
    7b49:	41 d1 f9             	sar    %r9d
    7b4c:	41 89 c3             	mov    %eax,%r11d
    7b4f:	41 31 c1             	xor    %eax,%r9d
    7b52:	41 83 e3 01          	and    $0x1,%r11d
    7b56:	45 89 ca             	mov    %r9d,%r10d
    7b59:	45 21 d9             	and    %r11d,%r9d
    7b5c:	41 83 e2 01          	and    $0x1,%r10d
    7b60:	44 89 0a             	mov    %r9d,(%rdx)
    7b63:	4d 85 c0             	test   %r8,%r8
    7b66:	0f 84 a4 00 00 00    	je     7c10 <mbedtls_mpi_lt_mpi_ct+0xe0>
    7b6c:	41 56                	push   %r14
    7b6e:	41 55                	push   %r13
    7b70:	41 54                	push   %r12
    7b72:	55                   	push   %rbp
    7b73:	53                   	push   %rbx
    7b74:	bb 01 00 00 00       	mov    $0x1,%ebx
    7b79:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
    7b7d:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    7b81:	44 29 db             	sub    %r11d,%ebx
    7b84:	bf 01 00 00 00       	mov    $0x1,%edi
    7b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7b90:	4a 8b 44 c5 f8       	mov    -0x8(%rbp,%r8,8),%rax
    7b95:	4f 8b 6c c4 f8       	mov    -0x8(%r12,%r8,8),%r13
    7b9a:	48 89 c6             	mov    %rax,%rsi
    7b9d:	4d 89 ee             	mov    %r13,%r14
    7ba0:	4c 89 e9             	mov    %r13,%rcx
    7ba3:	4c 29 ee             	sub    %r13,%rsi
    7ba6:	49 29 c5             	sub    %rax,%r13
    7ba9:	49 31 c6             	xor    %rax,%r14
    7bac:	48 31 f1             	xor    %rsi,%rcx
    7baf:	4c 31 e8             	xor    %r13,%rax
    7bb2:	4c 21 f1             	and    %r14,%rcx
    7bb5:	4c 21 f0             	and    %r14,%rax
    7bb8:	41 89 fe             	mov    %edi,%r14d
    7bbb:	45 29 d6             	sub    %r10d,%r14d
    7bbe:	48 31 f1             	xor    %rsi,%rcx
    7bc1:	44 89 d6             	mov    %r10d,%esi
    7bc4:	4c 31 e8             	xor    %r13,%rax
    7bc7:	48 c1 e9 3f          	shr    $0x3f,%rcx
    7bcb:	45 89 f2             	mov    %r14d,%r10d
    7bce:	48 c1 e8 3f          	shr    $0x3f,%rax
    7bd2:	41 89 dd             	mov    %ebx,%r13d
    7bd5:	45 21 da             	and    %r11d,%r10d
    7bd8:	09 ce                	or     %ecx,%esi
    7bda:	41 21 c5             	and    %eax,%r13d
    7bdd:	44 21 d1             	and    %r10d,%ecx
    7be0:	41 89 fa             	mov    %edi,%r10d
    7be3:	41 29 f2             	sub    %esi,%r10d
    7be6:	09 c6                	or     %eax,%esi
    7be8:	45 21 ea             	and    %r13d,%r10d
    7beb:	44 09 d1             	or     %r10d,%ecx
    7bee:	41 89 f2             	mov    %esi,%r10d
    7bf1:	41 09 c9             	or     %ecx,%r9d
    7bf4:	49 83 e8 01          	sub    $0x1,%r8
    7bf8:	75 96                	jne    7b90 <mbedtls_mpi_lt_mpi_ct+0x60>
    7bfa:	5b                   	pop    %rbx
    7bfb:	31 c0                	xor    %eax,%eax
    7bfd:	5d                   	pop    %rbp
    7bfe:	44 89 0a             	mov    %r9d,(%rdx)
    7c01:	41 5c                	pop    %r12
    7c03:	41 5d                	pop    %r13
    7c05:	41 5e                	pop    %r14
    7c07:	c3                   	retq   
    7c08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7c0f:	00 
    7c10:	31 c0                	xor    %eax,%eax
    7c12:	c3                   	retq   
    7c13:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    7c18:	c3                   	retq   
    7c19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007c20 <mbedtls_ct_rsaes_pkcs1_v15_unpadding>:
    7c20:	f3 0f 1e fa          	endbr64 
    7c24:	41 57                	push   %r15
    7c26:	41 56                	push   %r14
    7c28:	41 55                	push   %r13
    7c2a:	4d 89 c5             	mov    %r8,%r13
    7c2d:	4c 8d 46 f5          	lea    -0xb(%rsi),%r8
    7c31:	41 54                	push   %r12
    7c33:	55                   	push   %rbp
    7c34:	53                   	push   %rbx
    7c35:	48 83 ec 18          	sub    $0x18,%rsp
    7c39:	0f b6 5f 01          	movzbl 0x1(%rdi),%ebx
    7c3d:	49 39 c8             	cmp    %rcx,%r8
    7c40:	4c 0f 47 c1          	cmova  %rcx,%r8
    7c44:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    7c49:	83 f3 02             	xor    $0x2,%ebx
    7c4c:	0a 1f                	or     (%rdi),%bl
    7c4e:	0f b6 db             	movzbl %bl,%ebx
    7c51:	48 83 fe 02          	cmp    $0x2,%rsi
    7c55:	0f 86 9d 01 00 00    	jbe    7df8 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1d8>
    7c5b:	4c 8d 4f 02          	lea    0x2(%rdi),%r9
    7c5f:	4c 8d 1c 37          	lea    (%rdi,%rsi,1),%r11
    7c63:	31 d2                	xor    %edx,%edx
    7c65:	45 31 d2             	xor    %r10d,%r10d
    7c68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7c6f:	00 
    7c70:	41 0f b6 29          	movzbl (%r9),%ebp
    7c74:	49 83 c1 01          	add    $0x1,%r9
    7c78:	89 e8                	mov    %ebp,%eax
    7c7a:	f7 d8                	neg    %eax
    7c7c:	09 e8                	or     %ebp,%eax
    7c7e:	c0 e8 07             	shr    $0x7,%al
    7c81:	83 f0 01             	xor    $0x1,%eax
    7c84:	09 c2                	or     %eax,%edx
    7c86:	89 d0                	mov    %edx,%eax
    7c88:	f7 d8                	neg    %eax
    7c8a:	09 d0                	or     %edx,%eax
    7c8c:	c0 e8 07             	shr    $0x7,%al
    7c8f:	83 f0 01             	xor    $0x1,%eax
    7c92:	0f b6 c0             	movzbl %al,%eax
    7c95:	49 01 c2             	add    %rax,%r10
    7c98:	4d 39 cb             	cmp    %r9,%r11
    7c9b:	75 d3                	jne    7c70 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x50>
    7c9d:	0f b6 d2             	movzbl %dl,%edx
    7ca0:	44 89 d0             	mov    %r10d,%eax
    7ca3:	49 83 ea 08          	sub    $0x8,%r10
    7ca7:	f7 da                	neg    %edx
    7ca9:	49 c1 ea 3f          	shr    $0x3f,%r10
    7cad:	c1 ea 1f             	shr    $0x1f,%edx
    7cb0:	83 f2 01             	xor    $0x1,%edx
    7cb3:	44 09 d2             	or     %r10d,%edx
    7cb6:	44 8d 5e fd          	lea    -0x3(%rsi),%r11d
    7cba:	09 da                	or     %ebx,%edx
    7cbc:	41 29 c3             	sub    %eax,%r11d
    7cbf:	89 d0                	mov    %edx,%eax
    7cc1:	44 89 db             	mov    %r11d,%ebx
    7cc4:	f7 d8                	neg    %eax
    7cc6:	44 31 c3             	xor    %r8d,%ebx
    7cc9:	09 d0                	or     %edx,%eax
    7ccb:	c1 f8 1f             	sar    $0x1f,%eax
    7cce:	21 c3                	and    %eax,%ebx
    7cd0:	44 31 db             	xor    %r11d,%ebx
    7cd3:	41 89 d9             	mov    %ebx,%r9d
    7cd6:	4c 89 c3             	mov    %r8,%rbx
    7cd9:	4c 29 cb             	sub    %r9,%rbx
    7cdc:	4d 89 cb             	mov    %r9,%r11
    7cdf:	49 89 d9             	mov    %rbx,%r9
    7ce2:	48 c1 eb 3f          	shr    $0x3f,%rbx
    7ce6:	49 c1 f9 3f          	sar    $0x3f,%r9
    7cea:	41 09 d9             	or     %ebx,%r9d
    7ced:	09 d3                	or     %edx,%ebx
    7cef:	41 c1 f9 1f          	sar    $0x1f,%r9d
    7cf3:	89 da                	mov    %ebx,%edx
    7cf5:	45 89 ca             	mov    %r9d,%r10d
    7cf8:	f7 da                	neg    %edx
    7cfa:	41 81 e2 00 44 00 00 	and    $0x4400,%r10d
    7d01:	09 da                	or     %ebx,%edx
    7d03:	45 89 d4             	mov    %r10d,%r12d
    7d06:	c1 fa 1f             	sar    $0x1f,%edx
    7d09:	41 81 f4 00 41 00 00 	xor    $0x4100,%r12d
    7d10:	f7 d2                	not    %edx
    7d12:	41 21 c4             	and    %eax,%r12d
    7d15:	48 8d 47 0b          	lea    0xb(%rdi),%rax
    7d19:	45 31 d4             	xor    %r10d,%r12d
    7d1c:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
    7d20:	41 f7 dc             	neg    %r12d
    7d23:	48 83 fe 0b          	cmp    $0xb,%rsi
    7d27:	76 12                	jbe    7d3b <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x11b>
    7d29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7d30:	20 10                	and    %dl,(%rax)
    7d32:	48 83 c0 01          	add    $0x1,%rax
    7d36:	49 39 c2             	cmp    %rax,%r10
    7d39:	75 f5                	jne    7d30 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x110>
    7d3b:	44 89 db             	mov    %r11d,%ebx
    7d3e:	4c 29 c6             	sub    %r8,%rsi
    7d41:	44 31 c3             	xor    %r8d,%ebx
    7d44:	48 8d 2c 37          	lea    (%rdi,%rsi,1),%rbp
    7d48:	44 21 cb             	and    %r9d,%ebx
    7d4b:	44 31 db             	xor    %r11d,%ebx
    7d4e:	4d 85 c0             	test   %r8,%r8
    7d51:	74 6e                	je     7dc1 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a1>
    7d53:	4d 8d 70 ff          	lea    -0x1(%r8),%r14
    7d57:	49 89 d9             	mov    %rbx,%r9
    7d5a:	4d 89 c7             	mov    %r8,%r15
    7d5d:	4e 8d 54 35 00       	lea    0x0(%rbp,%r14,1),%r10
    7d62:	49 f7 d9             	neg    %r9
    7d65:	49 29 df             	sub    %rbx,%r15
    7d68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7d6f:	00 
    7d70:	4c 89 ce             	mov    %r9,%rsi
    7d73:	4c 89 c8             	mov    %r9,%rax
    7d76:	48 89 ea             	mov    %rbp,%rdx
    7d79:	48 c1 fe 3f          	sar    $0x3f,%rsi
    7d7d:	48 c1 e8 3f          	shr    $0x3f,%rax
    7d81:	48 89 f7             	mov    %rsi,%rdi
    7d84:	09 c7                	or     %eax,%edi
    7d86:	c1 ff 1f             	sar    $0x1f,%edi
    7d89:	4d 85 f6             	test   %r14,%r14
    7d8c:	74 21                	je     7daf <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x18f>
    7d8e:	66 90                	xchg   %ax,%ax
    7d90:	0f b6 02             	movzbl (%rdx),%eax
    7d93:	49 89 d3             	mov    %rdx,%r11
    7d96:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
    7d9a:	48 83 c2 01          	add    $0x1,%rdx
    7d9e:	31 f0                	xor    %esi,%eax
    7da0:	0f b6 c0             	movzbl %al,%eax
    7da3:	21 f8                	and    %edi,%eax
    7da5:	31 c6                	xor    %eax,%esi
    7da7:	41 88 33             	mov    %sil,(%r11)
    7daa:	49 39 d2             	cmp    %rdx,%r10
    7dad:	75 e1                	jne    7d90 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x170>
    7daf:	41 0f b6 02          	movzbl (%r10),%eax
    7db3:	49 83 c1 01          	add    $0x1,%r9
    7db7:	21 c7                	and    %eax,%edi
    7db9:	41 88 3a             	mov    %dil,(%r10)
    7dbc:	4d 39 cf             	cmp    %r9,%r15
    7dbf:	75 af                	jne    7d70 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x150>
    7dc1:	48 85 c9             	test   %rcx,%rcx
    7dc4:	75 1a                	jne    7de0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1c0>
    7dc6:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    7dca:	48 83 c4 18          	add    $0x18,%rsp
    7dce:	44 89 e0             	mov    %r12d,%eax
    7dd1:	5b                   	pop    %rbx
    7dd2:	5d                   	pop    %rbp
    7dd3:	41 5c                	pop    %r12
    7dd5:	41 5d                	pop    %r13
    7dd7:	41 5e                	pop    %r14
    7dd9:	41 5f                	pop    %r15
    7ddb:	c3                   	retq   
    7ddc:	0f 1f 40 00          	nopl   0x0(%rax)
    7de0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7de5:	4c 89 c2             	mov    %r8,%rdx
    7de8:	48 89 ee             	mov    %rbp,%rsi
    7deb:	e8 20 b5 ff ff       	callq  3310 <memcpy@plt>
    7df0:	eb d4                	jmp    7dc6 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a6>
    7df2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7df8:	ba 01 00 00 00       	mov    $0x1,%edx
    7dfd:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    7e03:	31 c0                	xor    %eax,%eax
    7e05:	e9 a9 fe ff ff       	jmpq   7cb3 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x93>
    7e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007e10 <mbedtls_des_init>:
    7e10:	f3 0f 1e fa          	endbr64 
    7e14:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    7e1b:	48 89 f9             	mov    %rdi,%rcx
    7e1e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    7e22:	31 c0                	xor    %eax,%eax
    7e24:	48 c7 47 70 00 00 00 	movq   $0x0,0x70(%rdi)
    7e2b:	00 
    7e2c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    7e30:	48 29 f9             	sub    %rdi,%rcx
    7e33:	83 e9 80             	sub    $0xffffff80,%ecx
    7e36:	c1 e9 03             	shr    $0x3,%ecx
    7e39:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7e3c:	c3                   	retq   
    7e3d:	0f 1f 00             	nopl   (%rax)

0000000000007e40 <mbedtls_des_free>:
    7e40:	f3 0f 1e fa          	endbr64 
    7e44:	48 85 ff             	test   %rdi,%rdi
    7e47:	74 0f                	je     7e58 <mbedtls_des_free+0x18>
    7e49:	be 80 00 00 00       	mov    $0x80,%esi
    7e4e:	e9 dd d3 ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    7e53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7e58:	c3                   	retq   
    7e59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007e60 <mbedtls_des3_init>:
    7e60:	f3 0f 1e fa          	endbr64 
    7e64:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    7e6b:	48 89 f9             	mov    %rdi,%rcx
    7e6e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    7e72:	31 c0                	xor    %eax,%eax
    7e74:	48 c7 87 70 01 00 00 	movq   $0x0,0x170(%rdi)
    7e7b:	00 00 00 00 
    7e7f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    7e83:	48 29 f9             	sub    %rdi,%rcx
    7e86:	81 c1 80 01 00 00    	add    $0x180,%ecx
    7e8c:	c1 e9 03             	shr    $0x3,%ecx
    7e8f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7e92:	c3                   	retq   
    7e93:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7e9a:	00 00 00 00 
    7e9e:	66 90                	xchg   %ax,%ax

0000000000007ea0 <mbedtls_des3_free>:
    7ea0:	f3 0f 1e fa          	endbr64 
    7ea4:	48 85 ff             	test   %rdi,%rdi
    7ea7:	74 0f                	je     7eb8 <mbedtls_des3_free+0x18>
    7ea9:	be 80 01 00 00       	mov    $0x180,%esi
    7eae:	e9 7d d3 ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    7eb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7eb8:	c3                   	retq   
    7eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007ec0 <mbedtls_des_key_set_parity>:
    7ec0:	f3 0f 1e fa          	endbr64 
    7ec4:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
    7ec8:	48 8d 15 71 a5 01 00 	lea    0x1a571(%rip),%rdx        # 22440 <odd_parity_table>
    7ecf:	90                   	nop
    7ed0:	0f b6 07             	movzbl (%rdi),%eax
    7ed3:	48 83 c7 01          	add    $0x1,%rdi
    7ed7:	d0 e8                	shr    %al
    7ed9:	83 e0 7f             	and    $0x7f,%eax
    7edc:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
    7ee0:	88 47 ff             	mov    %al,-0x1(%rdi)
    7ee3:	48 39 cf             	cmp    %rcx,%rdi
    7ee6:	75 e8                	jne    7ed0 <mbedtls_des_key_set_parity+0x10>
    7ee8:	c3                   	retq   
    7ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007ef0 <mbedtls_des_key_check_key_parity>:
    7ef0:	f3 0f 1e fa          	endbr64 
    7ef4:	48 8d 77 08          	lea    0x8(%rdi),%rsi
    7ef8:	48 8d 0d 41 a5 01 00 	lea    0x1a541(%rip),%rcx        # 22440 <odd_parity_table>
    7eff:	90                   	nop
    7f00:	0f b6 17             	movzbl (%rdi),%edx
    7f03:	89 d0                	mov    %edx,%eax
    7f05:	d0 e8                	shr    %al
    7f07:	83 e0 7f             	and    $0x7f,%eax
    7f0a:	3a 14 01             	cmp    (%rcx,%rax,1),%dl
    7f0d:	75 11                	jne    7f20 <mbedtls_des_key_check_key_parity+0x30>
    7f0f:	48 83 c7 01          	add    $0x1,%rdi
    7f13:	48 39 fe             	cmp    %rdi,%rsi
    7f16:	75 e8                	jne    7f00 <mbedtls_des_key_check_key_parity+0x10>
    7f18:	31 c0                	xor    %eax,%eax
    7f1a:	c3                   	retq   
    7f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7f20:	b8 01 00 00 00       	mov    $0x1,%eax
    7f25:	c3                   	retq   
    7f26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f2d:	00 00 00 

0000000000007f30 <mbedtls_des_key_check_weak>:
    7f30:	f3 0f 1e fa          	endbr64 
    7f34:	48 8d 05 85 a4 01 00 	lea    0x1a485(%rip),%rax        # 223c0 <weak_key_table>
    7f3b:	48 8d 90 80 00 00 00 	lea    0x80(%rax),%rdx
    7f42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7f48:	48 8b 0f             	mov    (%rdi),%rcx
    7f4b:	48 39 08             	cmp    %rcx,(%rax)
    7f4e:	74 10                	je     7f60 <mbedtls_des_key_check_weak+0x30>
    7f50:	48 83 c0 08          	add    $0x8,%rax
    7f54:	48 39 d0             	cmp    %rdx,%rax
    7f57:	75 ef                	jne    7f48 <mbedtls_des_key_check_weak+0x18>
    7f59:	31 c0                	xor    %eax,%eax
    7f5b:	c3                   	retq   
    7f5c:	0f 1f 40 00          	nopl   0x0(%rax)
    7f60:	b8 01 00 00 00       	mov    $0x1,%eax
    7f65:	c3                   	retq   
    7f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f6d:	00 00 00 

0000000000007f70 <mbedtls_des_setkey>:
    7f70:	f3 0f 1e fa          	endbr64 
    7f74:	53                   	push   %rbx
    7f75:	8b 46 04             	mov    0x4(%rsi),%eax
    7f78:	4c 8d 05 81 a5 01 00 	lea    0x1a581(%rip),%r8        # 22500 <LHs>
    7f7f:	8b 16                	mov    (%rsi),%edx
    7f81:	0f c8                	bswap  %eax
    7f83:	89 c1                	mov    %eax,%ecx
    7f85:	c1 e8 04             	shr    $0x4,%eax
    7f88:	0f ca                	bswap  %edx
    7f8a:	31 d0                	xor    %edx,%eax
    7f8c:	25 0f 0f 0f 0f       	and    $0xf0f0f0f,%eax
    7f91:	31 c2                	xor    %eax,%edx
    7f93:	c1 e0 04             	shl    $0x4,%eax
    7f96:	31 c8                	xor    %ecx,%eax
    7f98:	89 d1                	mov    %edx,%ecx
    7f9a:	31 c1                	xor    %eax,%ecx
    7f9c:	81 e1 10 10 10 10    	and    $0x10101010,%ecx
    7fa2:	31 ca                	xor    %ecx,%edx
    7fa4:	31 c8                	xor    %ecx,%eax
    7fa6:	89 d6                	mov    %edx,%esi
    7fa8:	41 89 d1             	mov    %edx,%r9d
    7fab:	89 d1                	mov    %edx,%ecx
    7fad:	41 c1 e9 18          	shr    $0x18,%r9d
    7fb1:	83 e6 0f             	and    $0xf,%esi
    7fb4:	c1 e9 15             	shr    $0x15,%ecx
    7fb7:	41 8b 34 b0          	mov    (%r8,%rsi,4),%esi
    7fbb:	41 83 e1 0f          	and    $0xf,%r9d
    7fbf:	83 e1 0f             	and    $0xf,%ecx
    7fc2:	41 8b 0c 88          	mov    (%r8,%rcx,4),%ecx
    7fc6:	c1 e6 03             	shl    $0x3,%esi
    7fc9:	43 0b 34 88          	or     (%r8,%r9,4),%esi
    7fcd:	41 89 d1             	mov    %edx,%r9d
    7fd0:	41 c1 e9 1d          	shr    $0x1d,%r9d
    7fd4:	c1 e1 05             	shl    $0x5,%ecx
    7fd7:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    7fdb:	41 c1 e1 04          	shl    $0x4,%r9d
    7fdf:	44 09 ce             	or     %r9d,%esi
    7fe2:	41 89 d1             	mov    %edx,%r9d
    7fe5:	41 c1 e9 08          	shr    $0x8,%r9d
    7fe9:	41 83 e1 0f          	and    $0xf,%r9d
    7fed:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    7ff1:	41 c1 e1 02          	shl    $0x2,%r9d
    7ff5:	44 09 ce             	or     %r9d,%esi
    7ff8:	41 89 d1             	mov    %edx,%r9d
    7ffb:	41 c1 e9 10          	shr    $0x10,%r9d
    7fff:	41 83 e1 0f          	and    $0xf,%r9d
    8003:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    8007:	45 01 c9             	add    %r9d,%r9d
    800a:	44 09 ce             	or     %r9d,%esi
    800d:	41 89 d1             	mov    %edx,%r9d
    8010:	41 c1 e9 05          	shr    $0x5,%r9d
    8014:	41 83 e1 0f          	and    $0xf,%r9d
    8018:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    801c:	41 c1 e1 07          	shl    $0x7,%r9d
    8020:	44 09 ce             	or     %r9d,%esi
    8023:	c1 ea 0d             	shr    $0xd,%edx
    8026:	41 89 c1             	mov    %eax,%r9d
    8029:	83 e2 0f             	and    $0xf,%edx
    802c:	41 c1 e9 19          	shr    $0x19,%r9d
    8030:	41 8b 14 90          	mov    (%r8,%rdx,4),%edx
    8034:	4c 8d 05 85 a4 01 00 	lea    0x1a485(%rip),%r8        # 224c0 <RHs>
    803b:	41 83 e1 0f          	and    $0xf,%r9d
    803f:	c1 e2 06             	shl    $0x6,%edx
    8042:	09 f2                	or     %esi,%edx
    8044:	89 c6                	mov    %eax,%esi
    8046:	c1 ee 1c             	shr    $0x1c,%esi
    8049:	09 d1                	or     %edx,%ecx
    804b:	89 c2                	mov    %eax,%edx
    804d:	41 8b 34 b0          	mov    (%r8,%rsi,4),%esi
    8051:	c1 ea 14             	shr    $0x14,%edx
    8054:	83 e2 0f             	and    $0xf,%edx
    8057:	c1 e6 04             	shl    $0x4,%esi
    805a:	43 0b 34 88          	or     (%r8,%r9,4),%esi
    805e:	41 89 c1             	mov    %eax,%r9d
    8061:	41 8b 14 90          	mov    (%r8,%rdx,4),%edx
    8065:	41 d1 e9             	shr    %r9d
    8068:	41 83 e1 0f          	and    $0xf,%r9d
    806c:	c1 e2 05             	shl    $0x5,%edx
    806f:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    8073:	41 c1 e1 03          	shl    $0x3,%r9d
    8077:	44 09 ce             	or     %r9d,%esi
    807a:	41 89 c1             	mov    %eax,%r9d
    807d:	41 c1 e9 09          	shr    $0x9,%r9d
    8081:	41 83 e1 0f          	and    $0xf,%r9d
    8085:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    8089:	41 c1 e1 02          	shl    $0x2,%r9d
    808d:	44 09 ce             	or     %r9d,%esi
    8090:	41 89 c1             	mov    %eax,%r9d
    8093:	41 c1 e9 11          	shr    $0x11,%r9d
    8097:	41 83 e1 0f          	and    $0xf,%r9d
    809b:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    809f:	45 01 c9             	add    %r9d,%r9d
    80a2:	44 09 ce             	or     %r9d,%esi
    80a5:	41 89 c1             	mov    %eax,%r9d
    80a8:	c1 e8 0c             	shr    $0xc,%eax
    80ab:	41 c1 e9 04          	shr    $0x4,%r9d
    80af:	83 e0 0f             	and    $0xf,%eax
    80b2:	41 83 e1 0f          	and    $0xf,%r9d
    80b6:	41 8b 04 80          	mov    (%r8,%rax,4),%eax
    80ba:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    80be:	41 c1 e1 07          	shl    $0x7,%r9d
    80c2:	44 09 ce             	or     %r9d,%esi
    80c5:	c1 e0 06             	shl    $0x6,%eax
    80c8:	81 e1 ff ff ff 0f    	and    $0xfffffff,%ecx
    80ce:	09 f0                	or     %esi,%eax
    80d0:	31 f6                	xor    %esi,%esi
    80d2:	09 d0                	or     %edx,%eax
    80d4:	25 ff ff ff 0f       	and    $0xfffffff,%eax
    80d9:	89 c2                	mov    %eax,%edx
    80db:	e9 c6 02 00 00       	jmpq   83a6 <mbedtls_des_setkey+0x436>
    80e0:	83 fe 0f             	cmp    $0xf,%esi
    80e3:	0f 84 d3 02 00 00    	je     83bc <mbedtls_des_setkey+0x44c>
    80e9:	8d 04 8d 00 00 00 00 	lea    0x0(,%rcx,4),%eax
    80f0:	c1 e9 1a             	shr    $0x1a,%ecx
    80f3:	09 c1                	or     %eax,%ecx
    80f5:	8d 04 95 00 00 00 00 	lea    0x0(,%rdx,4),%eax
    80fc:	c1 ea 1a             	shr    $0x1a,%edx
    80ff:	09 c2                	or     %eax,%edx
    8101:	81 e1 ff ff ff 0f    	and    $0xfffffff,%ecx
    8107:	81 e2 ff ff ff 0f    	and    $0xfffffff,%edx
    810d:	89 c8                	mov    %ecx,%eax
    810f:	41 89 c8             	mov    %ecx,%r8d
    8112:	89 cb                	mov    %ecx,%ebx
    8114:	41 89 d2             	mov    %edx,%r10d
    8117:	c1 e0 04             	shl    $0x4,%eax
    811a:	41 c1 e0 1c          	shl    $0x1c,%r8d
    811e:	41 89 d1             	mov    %edx,%r9d
    8121:	41 89 cb             	mov    %ecx,%r11d
    8124:	41 81 e0 00 00 00 10 	and    $0x10000000,%r8d
    812b:	25 00 00 00 24       	and    $0x24000000,%eax
    8130:	c1 e3 0a             	shl    $0xa,%ebx
    8133:	41 c1 ea 0e          	shr    $0xe,%r10d
    8137:	44 09 c0             	or     %r8d,%eax
    813a:	41 89 d0             	mov    %edx,%r8d
    813d:	41 c1 e9 03          	shr    $0x3,%r9d
    8141:	41 81 e0 00 01 00 00 	and    $0x100,%r8d
    8148:	44 09 c0             	or     %r8d,%eax
    814b:	41 89 c8             	mov    %ecx,%r8d
    814e:	41 c1 e0 0e          	shl    $0xe,%r8d
    8152:	41 81 e0 00 00 00 08 	and    $0x8000000,%r8d
    8159:	44 09 c0             	or     %r8d,%eax
    815c:	41 89 c8             	mov    %ecx,%r8d
    815f:	41 c1 e0 12          	shl    $0x12,%r8d
    8163:	41 81 e0 00 00 08 02 	and    $0x2080000,%r8d
    816a:	44 09 c0             	or     %r8d,%eax
    816d:	41 89 c8             	mov    %ecx,%r8d
    8170:	41 c1 e0 06          	shl    $0x6,%r8d
    8174:	41 81 e0 00 00 00 01 	and    $0x1000000,%r8d
    817b:	44 09 c0             	or     %r8d,%eax
    817e:	41 89 c8             	mov    %ecx,%r8d
    8181:	41 c1 e0 09          	shl    $0x9,%r8d
    8185:	41 81 e0 00 00 20 00 	and    $0x200000,%r8d
    818c:	44 09 c0             	or     %r8d,%eax
    818f:	41 89 c8             	mov    %ecx,%r8d
    8192:	41 d1 e8             	shr    %r8d
    8195:	41 81 e0 00 00 10 00 	and    $0x100000,%r8d
    819c:	44 09 c0             	or     %r8d,%eax
    819f:	41 89 d8             	mov    %ebx,%r8d
    81a2:	41 81 e0 00 00 04 00 	and    $0x40000,%r8d
    81a9:	44 09 c0             	or     %r8d,%eax
    81ac:	44 8d 04 8d 00 00 00 	lea    0x0(,%rcx,4),%r8d
    81b3:	00 
    81b4:	41 81 e0 00 00 02 00 	and    $0x20000,%r8d
    81bb:	44 09 c0             	or     %r8d,%eax
    81be:	41 89 c8             	mov    %ecx,%r8d
    81c1:	41 c1 e8 0a          	shr    $0xa,%r8d
    81c5:	41 81 e0 00 00 01 00 	and    $0x10000,%r8d
    81cc:	44 09 c0             	or     %r8d,%eax
    81cf:	41 89 d0             	mov    %edx,%r8d
    81d2:	41 c1 e8 0d          	shr    $0xd,%r8d
    81d6:	41 c1 e3 0f          	shl    $0xf,%r11d
    81da:	41 81 e0 00 20 00 00 	and    $0x2000,%r8d
    81e1:	44 09 c0             	or     %r8d,%eax
    81e4:	41 89 d0             	mov    %edx,%r8d
    81e7:	41 c1 e8 04          	shr    $0x4,%r8d
    81eb:	41 81 e0 00 10 00 00 	and    $0x1000,%r8d
    81f2:	44 09 c0             	or     %r8d,%eax
    81f5:	41 89 d0             	mov    %edx,%r8d
    81f8:	41 c1 e0 06          	shl    $0x6,%r8d
    81fc:	41 81 e0 00 08 00 00 	and    $0x800,%r8d
    8203:	44 09 c0             	or     %r8d,%eax
    8206:	41 89 d0             	mov    %edx,%r8d
    8209:	41 d1 e8             	shr    %r8d
    820c:	41 81 e0 00 04 00 00 	and    $0x400,%r8d
    8213:	44 09 c0             	or     %r8d,%eax
    8216:	45 89 d0             	mov    %r10d,%r8d
    8219:	41 81 e0 00 02 00 00 	and    $0x200,%r8d
    8220:	44 09 c0             	or     %r8d,%eax
    8223:	41 89 d0             	mov    %edx,%r8d
    8226:	41 c1 e8 05          	shr    $0x5,%r8d
    822a:	41 83 e0 20          	and    $0x20,%r8d
    822e:	44 09 c0             	or     %r8d,%eax
    8231:	41 89 d0             	mov    %edx,%r8d
    8234:	41 c1 e8 0a          	shr    $0xa,%r8d
    8238:	41 83 e0 10          	and    $0x10,%r8d
    823c:	44 09 c0             	or     %r8d,%eax
    823f:	45 89 c8             	mov    %r9d,%r8d
    8242:	41 83 e0 08          	and    $0x8,%r8d
    8246:	44 09 c0             	or     %r8d,%eax
    8249:	41 89 d0             	mov    %edx,%r8d
    824c:	41 c1 e8 12          	shr    $0x12,%r8d
    8250:	41 83 e0 04          	and    $0x4,%r8d
    8254:	44 09 c0             	or     %r8d,%eax
    8257:	41 89 d0             	mov    %edx,%r8d
    825a:	41 c1 e8 1a          	shr    $0x1a,%r8d
    825e:	41 83 e0 02          	and    $0x2,%r8d
    8262:	44 09 c0             	or     %r8d,%eax
    8265:	41 89 d0             	mov    %edx,%r8d
    8268:	41 c1 e8 18          	shr    $0x18,%r8d
    826c:	41 83 e0 01          	and    $0x1,%r8d
    8270:	44 09 c0             	or     %r8d,%eax
    8273:	41 89 c8             	mov    %ecx,%r8d
    8276:	41 c1 e0 11          	shl    $0x11,%r8d
    827a:	89 04 f7             	mov    %eax,(%rdi,%rsi,8)
    827d:	44 89 d8             	mov    %r11d,%eax
    8280:	81 e3 00 00 00 08    	and    $0x8000000,%ebx
    8286:	25 00 00 00 20       	and    $0x20000000,%eax
    828b:	41 81 e0 00 00 00 10 	and    $0x10000000,%r8d
    8292:	41 81 e3 00 00 02 00 	and    $0x20000,%r11d
    8299:	41 09 c0             	or     %eax,%r8d
    829c:	89 d0                	mov    %edx,%eax
    829e:	25 00 02 00 00       	and    $0x200,%eax
    82a3:	41 09 c0             	or     %eax,%r8d
    82a6:	89 c8                	mov    %ecx,%eax
    82a8:	c1 e0 16             	shl    $0x16,%eax
    82ab:	41 09 d8             	or     %ebx,%r8d
    82ae:	25 00 00 00 04       	and    $0x4000000,%eax
    82b3:	41 09 c0             	or     %eax,%r8d
    82b6:	89 c8                	mov    %ecx,%eax
    82b8:	c1 e8 02             	shr    $0x2,%eax
    82bb:	25 00 00 00 02       	and    $0x2000000,%eax
    82c0:	41 09 c0             	or     %eax,%r8d
    82c3:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    82c6:	25 00 00 00 01       	and    $0x1000000,%eax
    82cb:	41 09 c0             	or     %eax,%r8d
    82ce:	89 c8                	mov    %ecx,%eax
    82d0:	c1 e0 10             	shl    $0x10,%eax
    82d3:	25 00 00 20 00       	and    $0x200000,%eax
    82d8:	41 09 c0             	or     %eax,%r8d
    82db:	89 c8                	mov    %ecx,%eax
    82dd:	c1 e0 0b             	shl    $0xb,%eax
    82e0:	25 00 00 10 00       	and    $0x100000,%eax
    82e5:	41 09 c0             	or     %eax,%r8d
    82e8:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    82ef:	25 00 00 08 00       	and    $0x80000,%eax
    82f4:	41 09 c0             	or     %eax,%r8d
    82f7:	89 c8                	mov    %ecx,%eax
    82f9:	c1 e8 06             	shr    $0x6,%eax
    82fc:	25 00 00 04 00       	and    $0x40000,%eax
    8301:	44 09 c0             	or     %r8d,%eax
    8304:	41 89 c8             	mov    %ecx,%r8d
    8307:	41 c1 e8 04          	shr    $0x4,%r8d
    830b:	44 09 d8             	or     %r11d,%eax
    830e:	41 81 e0 00 00 01 00 	and    $0x10000,%r8d
    8315:	44 09 c0             	or     %r8d,%eax
    8318:	41 89 d0             	mov    %edx,%r8d
    831b:	41 c1 e8 02          	shr    $0x2,%r8d
    831f:	41 81 e2 08 08 00 00 	and    $0x808,%r10d
    8326:	41 83 e1 11          	and    $0x11,%r9d
    832a:	41 81 e0 00 20 00 00 	and    $0x2000,%r8d
    8331:	44 09 c0             	or     %r8d,%eax
    8334:	41 89 d0             	mov    %edx,%r8d
    8337:	41 c1 e0 08          	shl    $0x8,%r8d
    833b:	41 81 e0 00 10 00 00 	and    $0x1000,%r8d
    8342:	44 09 c0             	or     %r8d,%eax
    8345:	41 89 d0             	mov    %edx,%r8d
    8348:	41 c1 e8 09          	shr    $0x9,%r8d
    834c:	44 09 d0             	or     %r10d,%eax
    834f:	41 81 e0 00 04 00 00 	and    $0x400,%r8d
    8356:	44 09 c0             	or     %r8d,%eax
    8359:	41 89 d0             	mov    %edx,%r8d
    835c:	41 c1 e0 07          	shl    $0x7,%r8d
    8360:	41 81 e0 00 01 00 00 	and    $0x100,%r8d
    8367:	44 09 c0             	or     %r8d,%eax
    836a:	41 89 d0             	mov    %edx,%r8d
    836d:	41 c1 e8 07          	shr    $0x7,%r8d
    8371:	41 83 e0 20          	and    $0x20,%r8d
    8375:	44 09 c0             	or     %r8d,%eax
    8378:	44 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%r8d
    837f:	00 
    8380:	41 83 e0 04          	and    $0x4,%r8d
    8384:	44 09 c8             	or     %r9d,%eax
    8387:	44 09 c0             	or     %r8d,%eax
    838a:	41 89 d0             	mov    %edx,%r8d
    838d:	41 c1 e8 15          	shr    $0x15,%r8d
    8391:	41 83 e0 02          	and    $0x2,%r8d
    8395:	44 09 c0             	or     %r8d,%eax
    8398:	89 44 f7 04          	mov    %eax,0x4(%rdi,%rsi,8)
    839c:	48 83 c6 01          	add    $0x1,%rsi
    83a0:	48 83 fe 10          	cmp    $0x10,%rsi
    83a4:	74 3a                	je     83e0 <mbedtls_des_setkey+0x470>
    83a6:	83 fe 01             	cmp    $0x1,%esi
    83a9:	41 0f 9e c0          	setle  %r8b
    83ad:	83 fe 08             	cmp    $0x8,%esi
    83b0:	0f 94 c0             	sete   %al
    83b3:	41 08 c0             	or     %al,%r8b
    83b6:	0f 84 24 fd ff ff    	je     80e0 <mbedtls_des_setkey+0x170>
    83bc:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    83bf:	c1 e9 1b             	shr    $0x1b,%ecx
    83c2:	09 c1                	or     %eax,%ecx
    83c4:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
    83c7:	c1 ea 1b             	shr    $0x1b,%edx
    83ca:	09 c2                	or     %eax,%edx
    83cc:	81 e1 ff ff ff 0f    	and    $0xfffffff,%ecx
    83d2:	81 e2 ff ff ff 0f    	and    $0xfffffff,%edx
    83d8:	e9 30 fd ff ff       	jmpq   810d <mbedtls_des_setkey+0x19d>
    83dd:	0f 1f 00             	nopl   (%rax)
    83e0:	5b                   	pop    %rbx
    83e1:	c3                   	retq   
    83e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    83e9:	00 00 00 00 
    83ed:	0f 1f 00             	nopl   (%rax)

00000000000083f0 <des3_set2key>:
    83f0:	41 54                	push   %r12
    83f2:	49 89 d4             	mov    %rdx,%r12
    83f5:	55                   	push   %rbp
    83f6:	48 89 f5             	mov    %rsi,%rbp
    83f9:	48 89 d6             	mov    %rdx,%rsi
    83fc:	53                   	push   %rbx
    83fd:	48 89 fb             	mov    %rdi,%rbx
    8400:	e8 6b fb ff ff       	callq  7f70 <mbedtls_des_setkey>
    8405:	49 8d 74 24 08       	lea    0x8(%r12),%rsi
    840a:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
    8411:	e8 5a fb ff ff       	callq  7f70 <mbedtls_des_setkey>
    8416:	48 89 ea             	mov    %rbp,%rdx
    8419:	48 89 d8             	mov    %rbx,%rax
    841c:	31 c9                	xor    %ecx,%ecx
    841e:	66 90                	xchg   %ax,%ax
    8420:	8b 74 0b 78          	mov    0x78(%rbx,%rcx,1),%esi
    8424:	48 83 c2 08          	add    $0x8,%rdx
    8428:	48 83 c0 08          	add    $0x8,%rax
    842c:	89 72 f8             	mov    %esi,-0x8(%rdx)
    842f:	8b 74 0b 7c          	mov    0x7c(%rbx,%rcx,1),%esi
    8433:	89 72 fc             	mov    %esi,-0x4(%rdx)
    8436:	8b b4 0d f8 00 00 00 	mov    0xf8(%rbp,%rcx,1),%esi
    843d:	89 70 78             	mov    %esi,0x78(%rax)
    8440:	8b b4 0d fc 00 00 00 	mov    0xfc(%rbp,%rcx,1),%esi
    8447:	48 83 e9 08          	sub    $0x8,%rcx
    844b:	89 70 7c             	mov    %esi,0x7c(%rax)
    844e:	8b 70 f8             	mov    -0x8(%rax),%esi
    8451:	89 b0 f8 00 00 00    	mov    %esi,0xf8(%rax)
    8457:	8b 70 fc             	mov    -0x4(%rax),%esi
    845a:	89 b0 fc 00 00 00    	mov    %esi,0xfc(%rax)
    8460:	8b 72 f8             	mov    -0x8(%rdx),%esi
    8463:	89 b2 f8 00 00 00    	mov    %esi,0xf8(%rdx)
    8469:	8b 72 fc             	mov    -0x4(%rdx),%esi
    846c:	89 b2 fc 00 00 00    	mov    %esi,0xfc(%rdx)
    8472:	48 83 f9 80          	cmp    $0xffffffffffffff80,%rcx
    8476:	75 a8                	jne    8420 <des3_set2key+0x30>
    8478:	5b                   	pop    %rbx
    8479:	5d                   	pop    %rbp
    847a:	41 5c                	pop    %r12
    847c:	c3                   	retq   
    847d:	0f 1f 00             	nopl   (%rax)

0000000000008480 <des3_set3key>:
    8480:	41 54                	push   %r12
    8482:	49 89 d4             	mov    %rdx,%r12
    8485:	55                   	push   %rbp
    8486:	48 89 f5             	mov    %rsi,%rbp
    8489:	48 89 d6             	mov    %rdx,%rsi
    848c:	53                   	push   %rbx
    848d:	48 89 fb             	mov    %rdi,%rbx
    8490:	e8 db fa ff ff       	callq  7f70 <mbedtls_des_setkey>
    8495:	49 8d 74 24 08       	lea    0x8(%r12),%rsi
    849a:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
    84a1:	e8 ca fa ff ff       	callq  7f70 <mbedtls_des_setkey>
    84a6:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
    84ab:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
    84b2:	e8 b9 fa ff ff       	callq  7f70 <mbedtls_des_setkey>
    84b7:	31 d2                	xor    %edx,%edx
    84b9:	31 c0                	xor    %eax,%eax
    84bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    84c0:	8b 8c 03 78 01 00 00 	mov    0x178(%rbx,%rax,1),%ecx
    84c7:	89 4c 15 00          	mov    %ecx,0x0(%rbp,%rdx,1)
    84cb:	8b 8c 03 7c 01 00 00 	mov    0x17c(%rbx,%rax,1),%ecx
    84d2:	89 4c 15 04          	mov    %ecx,0x4(%rbp,%rdx,1)
    84d6:	8b 8c 05 f8 00 00 00 	mov    0xf8(%rbp,%rax,1),%ecx
    84dd:	89 8c 13 80 00 00 00 	mov    %ecx,0x80(%rbx,%rdx,1)
    84e4:	8b 8c 05 fc 00 00 00 	mov    0xfc(%rbp,%rax,1),%ecx
    84eb:	89 8c 13 84 00 00 00 	mov    %ecx,0x84(%rbx,%rdx,1)
    84f2:	8b 4c 03 78          	mov    0x78(%rbx,%rax,1),%ecx
    84f6:	89 8c 15 00 01 00 00 	mov    %ecx,0x100(%rbp,%rdx,1)
    84fd:	8b 4c 03 7c          	mov    0x7c(%rbx,%rax,1),%ecx
    8501:	48 83 e8 08          	sub    $0x8,%rax
    8505:	89 8c 15 04 01 00 00 	mov    %ecx,0x104(%rbp,%rdx,1)
    850c:	48 83 c2 08          	add    $0x8,%rdx
    8510:	48 83 f8 80          	cmp    $0xffffffffffffff80,%rax
    8514:	75 aa                	jne    84c0 <des3_set3key+0x40>
    8516:	5b                   	pop    %rbx
    8517:	5d                   	pop    %rbp
    8518:	41 5c                	pop    %r12
    851a:	c3                   	retq   
    851b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008520 <mbedtls_des_setkey_enc>:
    8520:	f3 0f 1e fa          	endbr64 
    8524:	e8 47 fa ff ff       	callq  7f70 <mbedtls_des_setkey>
    8529:	31 c0                	xor    %eax,%eax
    852b:	c3                   	retq   
    852c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008530 <mbedtls_des_setkey_dec>:
    8530:	f3 0f 1e fa          	endbr64 
    8534:	e8 37 fa ff ff       	callq  7f70 <mbedtls_des_setkey>
    8539:	48 8d 47 78          	lea    0x78(%rdi),%rax
    853d:	48 8d 77 38          	lea    0x38(%rdi),%rsi
    8541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8548:	8b 17                	mov    (%rdi),%edx
    854a:	8b 08                	mov    (%rax),%ecx
    854c:	48 83 e8 08          	sub    $0x8,%rax
    8550:	48 83 c7 08          	add    $0x8,%rdi
    8554:	89 4f f8             	mov    %ecx,-0x8(%rdi)
    8557:	8b 48 0c             	mov    0xc(%rax),%ecx
    855a:	89 50 08             	mov    %edx,0x8(%rax)
    855d:	8b 57 fc             	mov    -0x4(%rdi),%edx
    8560:	89 4f fc             	mov    %ecx,-0x4(%rdi)
    8563:	89 50 0c             	mov    %edx,0xc(%rax)
    8566:	48 39 f0             	cmp    %rsi,%rax
    8569:	75 dd                	jne    8548 <mbedtls_des_setkey_dec+0x18>
    856b:	31 c0                	xor    %eax,%eax
    856d:	c3                   	retq   
    856e:	66 90                	xchg   %ax,%ax

0000000000008570 <mbedtls_des3_set2key_enc>:
    8570:	f3 0f 1e fa          	endbr64 
    8574:	55                   	push   %rbp
    8575:	48 89 f2             	mov    %rsi,%rdx
    8578:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    857f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8586:	00 00 
    8588:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    858f:	00 
    8590:	31 c0                	xor    %eax,%eax
    8592:	48 89 e5             	mov    %rsp,%rbp
    8595:	48 89 ee             	mov    %rbp,%rsi
    8598:	e8 53 fe ff ff       	callq  83f0 <des3_set2key>
    859d:	be 80 01 00 00       	mov    $0x180,%esi
    85a2:	48 89 ef             	mov    %rbp,%rdi
    85a5:	e8 86 cc ff ff       	callq  5230 <mbedtls_platform_zeroize>
    85aa:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    85b1:	00 
    85b2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    85b9:	00 00 
    85bb:	75 0b                	jne    85c8 <mbedtls_des3_set2key_enc+0x58>
    85bd:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
    85c4:	31 c0                	xor    %eax,%eax
    85c6:	5d                   	pop    %rbp
    85c7:	c3                   	retq   
    85c8:	e8 93 ac ff ff       	callq  3260 <__stack_chk_fail@plt>
    85cd:	0f 1f 00             	nopl   (%rax)

00000000000085d0 <mbedtls_des3_set2key_dec>:
    85d0:	f3 0f 1e fa          	endbr64 
    85d4:	55                   	push   %rbp
    85d5:	48 89 f2             	mov    %rsi,%rdx
    85d8:	48 89 fe             	mov    %rdi,%rsi
    85db:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    85e2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    85e9:	00 00 
    85eb:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    85f2:	00 
    85f3:	31 c0                	xor    %eax,%eax
    85f5:	48 89 e5             	mov    %rsp,%rbp
    85f8:	48 89 ef             	mov    %rbp,%rdi
    85fb:	e8 f0 fd ff ff       	callq  83f0 <des3_set2key>
    8600:	be 80 01 00 00       	mov    $0x180,%esi
    8605:	48 89 ef             	mov    %rbp,%rdi
    8608:	e8 23 cc ff ff       	callq  5230 <mbedtls_platform_zeroize>
    860d:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    8614:	00 
    8615:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    861c:	00 00 
    861e:	75 0b                	jne    862b <mbedtls_des3_set2key_dec+0x5b>
    8620:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
    8627:	31 c0                	xor    %eax,%eax
    8629:	5d                   	pop    %rbp
    862a:	c3                   	retq   
    862b:	e8 30 ac ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000008630 <mbedtls_des3_set3key_enc>:
    8630:	f3 0f 1e fa          	endbr64 
    8634:	55                   	push   %rbp
    8635:	48 89 f2             	mov    %rsi,%rdx
    8638:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    863f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8646:	00 00 
    8648:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    864f:	00 
    8650:	31 c0                	xor    %eax,%eax
    8652:	48 89 e5             	mov    %rsp,%rbp
    8655:	48 89 ee             	mov    %rbp,%rsi
    8658:	e8 23 fe ff ff       	callq  8480 <des3_set3key>
    865d:	be 80 01 00 00       	mov    $0x180,%esi
    8662:	48 89 ef             	mov    %rbp,%rdi
    8665:	e8 c6 cb ff ff       	callq  5230 <mbedtls_platform_zeroize>
    866a:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    8671:	00 
    8672:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8679:	00 00 
    867b:	75 0b                	jne    8688 <mbedtls_des3_set3key_enc+0x58>
    867d:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
    8684:	31 c0                	xor    %eax,%eax
    8686:	5d                   	pop    %rbp
    8687:	c3                   	retq   
    8688:	e8 d3 ab ff ff       	callq  3260 <__stack_chk_fail@plt>
    868d:	0f 1f 00             	nopl   (%rax)

0000000000008690 <mbedtls_des3_set3key_dec>:
    8690:	f3 0f 1e fa          	endbr64 
    8694:	55                   	push   %rbp
    8695:	48 89 f2             	mov    %rsi,%rdx
    8698:	48 89 fe             	mov    %rdi,%rsi
    869b:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    86a2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    86a9:	00 00 
    86ab:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    86b2:	00 
    86b3:	31 c0                	xor    %eax,%eax
    86b5:	48 89 e5             	mov    %rsp,%rbp
    86b8:	48 89 ef             	mov    %rbp,%rdi
    86bb:	e8 c0 fd ff ff       	callq  8480 <des3_set3key>
    86c0:	be 80 01 00 00       	mov    $0x180,%esi
    86c5:	48 89 ef             	mov    %rbp,%rdi
    86c8:	e8 63 cb ff ff       	callq  5230 <mbedtls_platform_zeroize>
    86cd:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    86d4:	00 
    86d5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    86dc:	00 00 
    86de:	75 0b                	jne    86eb <mbedtls_des3_set3key_dec+0x5b>
    86e0:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
    86e7:	31 c0                	xor    %eax,%eax
    86e9:	5d                   	pop    %rbp
    86ea:	c3                   	retq   
    86eb:	e8 70 ab ff ff       	callq  3260 <__stack_chk_fail@plt>

00000000000086f0 <mbedtls_des_crypt_ecb>:
    86f0:	f3 0f 1e fa          	endbr64 
    86f4:	41 57                	push   %r15
    86f6:	4c 8d 1d 43 a4 01 00 	lea    0x1a443(%rip),%r11        # 22b40 <SB2>
    86fd:	4c 8d 15 3c a1 01 00 	lea    0x1a13c(%rip),%r10        # 22840 <SB5>
    8704:	41 56                	push   %r14
    8706:	4c 8d 0d 33 a3 01 00 	lea    0x1a333(%rip),%r9        # 22a40 <SB3>
    870d:	41 55                	push   %r13
    870f:	4c 8d 2d 2a 9e 01 00 	lea    0x19e2a(%rip),%r13        # 22540 <SB8>
    8716:	41 54                	push   %r12
    8718:	4c 8d 25 21 9f 01 00 	lea    0x19f21(%rip),%r12        # 22640 <SB7>
    871f:	55                   	push   %rbp
    8720:	48 8d 2d 19 a0 01 00 	lea    0x1a019(%rip),%rbp        # 22740 <SB6>
    8727:	53                   	push   %rbx
    8728:	44 8b 06             	mov    (%rsi),%r8d
    872b:	48 8d 9f 80 00 00 00 	lea    0x80(%rdi),%rbx
    8732:	8b 4e 04             	mov    0x4(%rsi),%ecx
    8735:	41 0f c8             	bswap  %r8d
    8738:	44 89 c6             	mov    %r8d,%esi
    873b:	c1 ee 04             	shr    $0x4,%esi
    873e:	0f c9                	bswap  %ecx
    8740:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
    8745:	31 ce                	xor    %ecx,%esi
    8747:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
    874c:	48 8d 1d ed a1 01 00 	lea    0x1a1ed(%rip),%rbx        # 22940 <SB4>
    8753:	81 e6 0f 0f 0f 0f    	and    $0xf0f0f0f,%esi
    8759:	31 f1                	xor    %esi,%ecx
    875b:	c1 e6 04             	shl    $0x4,%esi
    875e:	41 31 f0             	xor    %esi,%r8d
    8761:	44 89 c0             	mov    %r8d,%eax
    8764:	c1 e8 10             	shr    $0x10,%eax
    8767:	31 c8                	xor    %ecx,%eax
    8769:	0f b7 f0             	movzwl %ax,%esi
    876c:	31 f1                	xor    %esi,%ecx
    876e:	c1 e6 10             	shl    $0x10,%esi
    8771:	44 31 c6             	xor    %r8d,%esi
    8774:	41 89 c8             	mov    %ecx,%r8d
    8777:	41 c1 e8 02          	shr    $0x2,%r8d
    877b:	41 31 f0             	xor    %esi,%r8d
    877e:	41 81 e0 33 33 33 33 	and    $0x33333333,%r8d
    8785:	42 8d 04 85 00 00 00 	lea    0x0(,%r8,4),%eax
    878c:	00 
    878d:	44 31 c6             	xor    %r8d,%esi
    8790:	4c 8d 05 a9 a4 01 00 	lea    0x1a4a9(%rip),%r8        # 22c40 <SB1>
    8797:	31 c1                	xor    %eax,%ecx
    8799:	89 ca                	mov    %ecx,%edx
    879b:	c1 ea 08             	shr    $0x8,%edx
    879e:	31 f2                	xor    %esi,%edx
    87a0:	81 e2 ff 00 ff 00    	and    $0xff00ff,%edx
    87a6:	89 d0                	mov    %edx,%eax
    87a8:	31 d6                	xor    %edx,%esi
    87aa:	c1 e0 08             	shl    $0x8,%eax
    87ad:	89 f2                	mov    %esi,%edx
    87af:	31 c8                	xor    %ecx,%eax
    87b1:	d1 c0                	rol    %eax
    87b3:	31 c2                	xor    %eax,%edx
    87b5:	81 e2 aa aa aa aa    	and    $0xaaaaaaaa,%edx
    87bb:	31 d6                	xor    %edx,%esi
    87bd:	31 d0                	xor    %edx,%eax
    87bf:	d1 c6                	rol    %esi
    87c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    87c8:	8b 17                	mov    (%rdi),%edx
    87ca:	41 89 c6             	mov    %eax,%r14d
    87cd:	48 83 c7 10          	add    $0x10,%rdi
    87d1:	41 c1 ce 04          	ror    $0x4,%r14d
    87d5:	44 33 77 f4          	xor    -0xc(%rdi),%r14d
    87d9:	31 c2                	xor    %eax,%edx
    87db:	45 89 f7             	mov    %r14d,%r15d
    87de:	89 d1                	mov    %edx,%ecx
    87e0:	41 83 e7 3f          	and    $0x3f,%r15d
    87e4:	83 e1 3f             	and    $0x3f,%ecx
    87e7:	41 8b 4c 8d 00       	mov    0x0(%r13,%rcx,4),%ecx
    87ec:	43 33 0c bc          	xor    (%r12,%r15,4),%ecx
    87f0:	41 89 d7             	mov    %edx,%r15d
    87f3:	41 c1 ef 08          	shr    $0x8,%r15d
    87f7:	41 83 e7 3f          	and    $0x3f,%r15d
    87fb:	42 33 4c bd 00       	xor    0x0(%rbp,%r15,4),%ecx
    8800:	41 89 d7             	mov    %edx,%r15d
    8803:	c1 ea 18             	shr    $0x18,%edx
    8806:	41 c1 ef 10          	shr    $0x10,%r15d
    880a:	83 e2 3f             	and    $0x3f,%edx
    880d:	41 83 e7 3f          	and    $0x3f,%r15d
    8811:	42 33 0c bb          	xor    (%rbx,%r15,4),%ecx
    8815:	41 33 0c 93          	xor    (%r11,%rdx,4),%ecx
    8819:	44 89 f2             	mov    %r14d,%edx
    881c:	c1 ea 08             	shr    $0x8,%edx
    881f:	83 e2 3f             	and    $0x3f,%edx
    8822:	41 33 0c 92          	xor    (%r10,%rdx,4),%ecx
    8826:	44 89 f2             	mov    %r14d,%edx
    8829:	41 c1 ee 18          	shr    $0x18,%r14d
    882d:	c1 ea 10             	shr    $0x10,%edx
    8830:	41 83 e6 3f          	and    $0x3f,%r14d
    8834:	83 e2 3f             	and    $0x3f,%edx
    8837:	41 33 0c 91          	xor    (%r9,%rdx,4),%ecx
    883b:	43 33 0c b0          	xor    (%r8,%r14,4),%ecx
    883f:	44 8b 77 f8          	mov    -0x8(%rdi),%r14d
    8843:	31 ce                	xor    %ecx,%esi
    8845:	89 f1                	mov    %esi,%ecx
    8847:	41 31 f6             	xor    %esi,%r14d
    884a:	c1 c9 04             	ror    $0x4,%ecx
    884d:	33 4f fc             	xor    -0x4(%rdi),%ecx
    8850:	44 89 f2             	mov    %r14d,%edx
    8853:	45 89 f7             	mov    %r14d,%r15d
    8856:	c1 ea 08             	shr    $0x8,%edx
    8859:	41 83 e7 3f          	and    $0x3f,%r15d
    885d:	83 e2 3f             	and    $0x3f,%edx
    8860:	8b 54 95 00          	mov    0x0(%rbp,%rdx,4),%edx
    8864:	43 33 54 bd 00       	xor    0x0(%r13,%r15,4),%edx
    8869:	31 d0                	xor    %edx,%eax
    886b:	44 89 f2             	mov    %r14d,%edx
    886e:	41 c1 ee 18          	shr    $0x18,%r14d
    8872:	c1 ea 10             	shr    $0x10,%edx
    8875:	41 83 e6 3f          	and    $0x3f,%r14d
    8879:	83 e2 3f             	and    $0x3f,%edx
    887c:	33 04 93             	xor    (%rbx,%rdx,4),%eax
    887f:	89 ca                	mov    %ecx,%edx
    8881:	43 33 04 b3          	xor    (%r11,%r14,4),%eax
    8885:	83 e2 3f             	and    $0x3f,%edx
    8888:	41 33 04 94          	xor    (%r12,%rdx,4),%eax
    888c:	89 ca                	mov    %ecx,%edx
    888e:	c1 ea 08             	shr    $0x8,%edx
    8891:	83 e2 3f             	and    $0x3f,%edx
    8894:	41 33 04 92          	xor    (%r10,%rdx,4),%eax
    8898:	89 ca                	mov    %ecx,%edx
    889a:	c1 e9 18             	shr    $0x18,%ecx
    889d:	c1 ea 10             	shr    $0x10,%edx
    88a0:	83 e1 3f             	and    $0x3f,%ecx
    88a3:	83 e2 3f             	and    $0x3f,%edx
    88a6:	41 33 04 91          	xor    (%r9,%rdx,4),%eax
    88aa:	41 33 04 88          	xor    (%r8,%rcx,4),%eax
    88ae:	48 3b 7c 24 f0       	cmp    -0x10(%rsp),%rdi
    88b3:	0f 85 0f ff ff ff    	jne    87c8 <mbedtls_des_crypt_ecb+0xd8>
    88b9:	d1 c8                	ror    %eax
    88bb:	48 8b 5c 24 f8       	mov    -0x8(%rsp),%rbx
    88c0:	89 c2                	mov    %eax,%edx
    88c2:	31 f2                	xor    %esi,%edx
    88c4:	81 e2 aa aa aa aa    	and    $0xaaaaaaaa,%edx
    88ca:	31 d6                	xor    %edx,%esi
    88cc:	31 d0                	xor    %edx,%eax
    88ce:	d1 ce                	ror    %esi
    88d0:	89 f2                	mov    %esi,%edx
    88d2:	c1 ea 08             	shr    $0x8,%edx
    88d5:	31 c2                	xor    %eax,%edx
    88d7:	81 e2 ff 00 ff 00    	and    $0xff00ff,%edx
    88dd:	31 d0                	xor    %edx,%eax
    88df:	c1 e2 08             	shl    $0x8,%edx
    88e2:	31 d6                	xor    %edx,%esi
    88e4:	89 f1                	mov    %esi,%ecx
    88e6:	c1 e9 02             	shr    $0x2,%ecx
    88e9:	31 c1                	xor    %eax,%ecx
    88eb:	81 e1 33 33 33 33    	and    $0x33333333,%ecx
    88f1:	31 c8                	xor    %ecx,%eax
    88f3:	8d 14 8d 00 00 00 00 	lea    0x0(,%rcx,4),%edx
    88fa:	89 c1                	mov    %eax,%ecx
    88fc:	31 f2                	xor    %esi,%edx
    88fe:	c1 e9 10             	shr    $0x10,%ecx
    8901:	31 d1                	xor    %edx,%ecx
    8903:	0f b7 c9             	movzwl %cx,%ecx
    8906:	31 ca                	xor    %ecx,%edx
    8908:	c1 e1 10             	shl    $0x10,%ecx
    890b:	31 c8                	xor    %ecx,%eax
    890d:	89 c1                	mov    %eax,%ecx
    890f:	c1 e9 04             	shr    $0x4,%ecx
    8912:	31 d1                	xor    %edx,%ecx
    8914:	81 e1 0f 0f 0f 0f    	and    $0xf0f0f0f,%ecx
    891a:	89 ce                	mov    %ecx,%esi
    891c:	31 ca                	xor    %ecx,%edx
    891e:	c1 e6 04             	shl    $0x4,%esi
    8921:	0f ca                	bswap  %edx
    8923:	89 53 04             	mov    %edx,0x4(%rbx)
    8926:	31 f0                	xor    %esi,%eax
    8928:	0f c8                	bswap  %eax
    892a:	89 03                	mov    %eax,(%rbx)
    892c:	31 c0                	xor    %eax,%eax
    892e:	5b                   	pop    %rbx
    892f:	5d                   	pop    %rbp
    8930:	41 5c                	pop    %r12
    8932:	41 5d                	pop    %r13
    8934:	41 5e                	pop    %r14
    8936:	41 5f                	pop    %r15
    8938:	c3                   	retq   
    8939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000008940 <mbedtls_des_crypt_cbc.part.0>:
    8940:	41 56                	push   %r14
    8942:	41 55                	push   %r13
    8944:	4d 8d 2c 30          	lea    (%r8,%rsi,1),%r13
    8948:	41 54                	push   %r12
    894a:	55                   	push   %rbp
    894b:	53                   	push   %rbx
    894c:	48 85 f6             	test   %rsi,%rsi
    894f:	74 4f                	je     89a0 <mbedtls_des_crypt_cbc.part.0+0x60>
    8951:	49 89 fc             	mov    %rdi,%r12
    8954:	49 89 d6             	mov    %rdx,%r14
    8957:	48 89 cd             	mov    %rcx,%rbp
    895a:	4c 89 c3             	mov    %r8,%rbx
    895d:	eb 14                	jmp    8973 <mbedtls_des_crypt_cbc.part.0+0x33>
    895f:	90                   	nop
    8960:	48 8b 03             	mov    (%rbx),%rax
    8963:	48 83 c3 08          	add    $0x8,%rbx
    8967:	48 83 c5 08          	add    $0x8,%rbp
    896b:	49 89 06             	mov    %rax,(%r14)
    896e:	4c 39 eb             	cmp    %r13,%rbx
    8971:	74 2d                	je     89a0 <mbedtls_des_crypt_cbc.part.0+0x60>
    8973:	8b 45 00             	mov    0x0(%rbp),%eax
    8976:	41 33 06             	xor    (%r14),%eax
    8979:	48 89 da             	mov    %rbx,%rdx
    897c:	48 89 de             	mov    %rbx,%rsi
    897f:	89 03                	mov    %eax,(%rbx)
    8981:	8b 45 04             	mov    0x4(%rbp),%eax
    8984:	4c 89 e7             	mov    %r12,%rdi
    8987:	41 33 46 04          	xor    0x4(%r14),%eax
    898b:	89 43 04             	mov    %eax,0x4(%rbx)
    898e:	e8 5d fd ff ff       	callq  86f0 <mbedtls_des_crypt_ecb>
    8993:	85 c0                	test   %eax,%eax
    8995:	74 c9                	je     8960 <mbedtls_des_crypt_cbc.part.0+0x20>
    8997:	5b                   	pop    %rbx
    8998:	5d                   	pop    %rbp
    8999:	41 5c                	pop    %r12
    899b:	41 5d                	pop    %r13
    899d:	41 5e                	pop    %r14
    899f:	c3                   	retq   
    89a0:	5b                   	pop    %rbx
    89a1:	31 c0                	xor    %eax,%eax
    89a3:	5d                   	pop    %rbp
    89a4:	41 5c                	pop    %r12
    89a6:	41 5d                	pop    %r13
    89a8:	41 5e                	pop    %r14
    89aa:	c3                   	retq   
    89ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000089b0 <mbedtls_des_crypt_cbc>:
    89b0:	f3 0f 1e fa          	endbr64 
    89b4:	f6 c2 07             	test   $0x7,%dl
    89b7:	0f 85 98 00 00 00    	jne    8a55 <mbedtls_des_crypt_cbc+0xa5>
    89bd:	89 f0                	mov    %esi,%eax
    89bf:	41 57                	push   %r15
    89c1:	48 89 d6             	mov    %rdx,%rsi
    89c4:	49 89 ff             	mov    %rdi,%r15
    89c7:	41 56                	push   %r14
    89c9:	41 55                	push   %r13
    89cb:	41 54                	push   %r12
    89cd:	49 89 cc             	mov    %rcx,%r12
    89d0:	4c 89 c1             	mov    %r8,%rcx
    89d3:	55                   	push   %rbp
    89d4:	53                   	push   %rbx
    89d5:	4c 89 cb             	mov    %r9,%rbx
    89d8:	83 f8 01             	cmp    $0x1,%eax
    89db:	74 53                	je     8a30 <mbedtls_des_crypt_cbc+0x80>
    89dd:	4c 89 c5             	mov    %r8,%rbp
    89e0:	4d 8d 34 10          	lea    (%r8,%rdx,1),%r14
    89e4:	48 85 d2             	test   %rdx,%rdx
    89e7:	75 26                	jne    8a0f <mbedtls_des_crypt_cbc+0x5f>
    89e9:	eb 5d                	jmp    8a48 <mbedtls_des_crypt_cbc+0x98>
    89eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    89f0:	48 83 c5 08          	add    $0x8,%rbp
    89f4:	41 8b 04 24          	mov    (%r12),%eax
    89f8:	31 03                	xor    %eax,(%rbx)
    89fa:	41 8b 44 24 04       	mov    0x4(%r12),%eax
    89ff:	31 43 04             	xor    %eax,0x4(%rbx)
    8a02:	48 83 c3 08          	add    $0x8,%rbx
    8a06:	4d 89 2c 24          	mov    %r13,(%r12)
    8a0a:	4c 39 f5             	cmp    %r14,%rbp
    8a0d:	74 39                	je     8a48 <mbedtls_des_crypt_cbc+0x98>
    8a0f:	48 89 da             	mov    %rbx,%rdx
    8a12:	48 89 ee             	mov    %rbp,%rsi
    8a15:	4c 89 ff             	mov    %r15,%rdi
    8a18:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
    8a1c:	e8 cf fc ff ff       	callq  86f0 <mbedtls_des_crypt_ecb>
    8a21:	85 c0                	test   %eax,%eax
    8a23:	74 cb                	je     89f0 <mbedtls_des_crypt_cbc+0x40>
    8a25:	5b                   	pop    %rbx
    8a26:	5d                   	pop    %rbp
    8a27:	41 5c                	pop    %r12
    8a29:	41 5d                	pop    %r13
    8a2b:	41 5e                	pop    %r14
    8a2d:	41 5f                	pop    %r15
    8a2f:	c3                   	retq   
    8a30:	5b                   	pop    %rbx
    8a31:	4c 89 e2             	mov    %r12,%rdx
    8a34:	5d                   	pop    %rbp
    8a35:	4d 89 c8             	mov    %r9,%r8
    8a38:	41 5c                	pop    %r12
    8a3a:	41 5d                	pop    %r13
    8a3c:	41 5e                	pop    %r14
    8a3e:	41 5f                	pop    %r15
    8a40:	e9 fb fe ff ff       	jmpq   8940 <mbedtls_des_crypt_cbc.part.0>
    8a45:	0f 1f 00             	nopl   (%rax)
    8a48:	5b                   	pop    %rbx
    8a49:	31 c0                	xor    %eax,%eax
    8a4b:	5d                   	pop    %rbp
    8a4c:	41 5c                	pop    %r12
    8a4e:	41 5d                	pop    %r13
    8a50:	41 5e                	pop    %r14
    8a52:	41 5f                	pop    %r15
    8a54:	c3                   	retq   
    8a55:	b8 ce ff ff ff       	mov    $0xffffffce,%eax
    8a5a:	c3                   	retq   
    8a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008a60 <mbedtls_des3_crypt_ecb>:
    8a60:	f3 0f 1e fa          	endbr64 
    8a64:	41 57                	push   %r15
    8a66:	48 89 f0             	mov    %rsi,%rax
    8a69:	48 89 fe             	mov    %rdi,%rsi
    8a6c:	4c 8d 1d cd 9e 01 00 	lea    0x19ecd(%rip),%r11        # 22940 <SB4>
    8a73:	41 56                	push   %r14
    8a75:	4c 8d 0d c4 a0 01 00 	lea    0x1a0c4(%rip),%r9        # 22b40 <SB2>
    8a7c:	4c 8d 15 bd 9f 01 00 	lea    0x19fbd(%rip),%r10        # 22a40 <SB3>
    8a83:	41 55                	push   %r13
    8a85:	4c 8d 2d b4 9a 01 00 	lea    0x19ab4(%rip),%r13        # 22540 <SB8>
    8a8c:	41 54                	push   %r12
    8a8e:	4c 8d 25 ab 9b 01 00 	lea    0x19bab(%rip),%r12        # 22640 <SB7>
    8a95:	55                   	push   %rbp
    8a96:	48 8d 2d a3 9c 01 00 	lea    0x19ca3(%rip),%rbp        # 22740 <SB6>
    8a9d:	53                   	push   %rbx
    8a9e:	44 8b 00             	mov    (%rax),%r8d
    8aa1:	48 89 fb             	mov    %rdi,%rbx
    8aa4:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
    8aa8:	41 0f c8             	bswap  %r8d
    8aab:	48 89 7c 24 f0       	mov    %rdi,-0x10(%rsp)
    8ab0:	8b 78 04             	mov    0x4(%rax),%edi
    8ab3:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
    8ab8:	44 89 c2             	mov    %r8d,%edx
    8abb:	c1 ea 04             	shr    $0x4,%edx
    8abe:	0f cf                	bswap  %edi
    8ac0:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
    8ac5:	48 8d 1d 74 9d 01 00 	lea    0x19d74(%rip),%rbx        # 22840 <SB5>
    8acc:	31 fa                	xor    %edi,%edx
    8ace:	81 e2 0f 0f 0f 0f    	and    $0xf0f0f0f,%edx
    8ad4:	31 d7                	xor    %edx,%edi
    8ad6:	c1 e2 04             	shl    $0x4,%edx
    8ad9:	41 31 d0             	xor    %edx,%r8d
    8adc:	44 89 c0             	mov    %r8d,%eax
    8adf:	c1 e8 10             	shr    $0x10,%eax
    8ae2:	31 f8                	xor    %edi,%eax
    8ae4:	0f b7 d0             	movzwl %ax,%edx
    8ae7:	31 d7                	xor    %edx,%edi
    8ae9:	c1 e2 10             	shl    $0x10,%edx
    8aec:	44 31 c2             	xor    %r8d,%edx
    8aef:	41 89 f8             	mov    %edi,%r8d
    8af2:	41 c1 e8 02          	shr    $0x2,%r8d
    8af6:	41 31 d0             	xor    %edx,%r8d
    8af9:	41 81 e0 33 33 33 33 	and    $0x33333333,%r8d
    8b00:	42 8d 04 85 00 00 00 	lea    0x0(,%r8,4),%eax
    8b07:	00 
    8b08:	44 31 c2             	xor    %r8d,%edx
    8b0b:	4c 8d 05 2e a1 01 00 	lea    0x1a12e(%rip),%r8        # 22c40 <SB1>
    8b12:	31 c7                	xor    %eax,%edi
    8b14:	89 f9                	mov    %edi,%ecx
    8b16:	c1 e9 08             	shr    $0x8,%ecx
    8b19:	31 d1                	xor    %edx,%ecx
    8b1b:	81 e1 ff 00 ff 00    	and    $0xff00ff,%ecx
    8b21:	89 c8                	mov    %ecx,%eax
    8b23:	31 ca                	xor    %ecx,%edx
    8b25:	c1 e0 08             	shl    $0x8,%eax
    8b28:	89 d1                	mov    %edx,%ecx
    8b2a:	31 f8                	xor    %edi,%eax
    8b2c:	d1 c0                	rol    %eax
    8b2e:	31 c1                	xor    %eax,%ecx
    8b30:	81 e1 aa aa aa aa    	and    $0xaaaaaaaa,%ecx
    8b36:	31 ca                	xor    %ecx,%edx
    8b38:	31 c8                	xor    %ecx,%eax
    8b3a:	d1 c2                	rol    %edx
    8b3c:	0f 1f 40 00          	nopl   0x0(%rax)
    8b40:	8b 0e                	mov    (%rsi),%ecx
    8b42:	41 89 c6             	mov    %eax,%r14d
    8b45:	48 83 c6 10          	add    $0x10,%rsi
    8b49:	41 c1 ce 04          	ror    $0x4,%r14d
    8b4d:	44 33 76 f4          	xor    -0xc(%rsi),%r14d
    8b51:	31 c1                	xor    %eax,%ecx
    8b53:	45 89 f7             	mov    %r14d,%r15d
    8b56:	89 cf                	mov    %ecx,%edi
    8b58:	41 83 e7 3f          	and    $0x3f,%r15d
    8b5c:	83 e7 3f             	and    $0x3f,%edi
    8b5f:	41 8b 7c bd 00       	mov    0x0(%r13,%rdi,4),%edi
    8b64:	43 33 3c bc          	xor    (%r12,%r15,4),%edi
    8b68:	41 89 cf             	mov    %ecx,%r15d
    8b6b:	41 c1 ef 08          	shr    $0x8,%r15d
    8b6f:	41 83 e7 3f          	and    $0x3f,%r15d
    8b73:	42 33 7c bd 00       	xor    0x0(%rbp,%r15,4),%edi
    8b78:	41 89 cf             	mov    %ecx,%r15d
    8b7b:	c1 e9 18             	shr    $0x18,%ecx
    8b7e:	41 c1 ef 10          	shr    $0x10,%r15d
    8b82:	83 e1 3f             	and    $0x3f,%ecx
    8b85:	41 83 e7 3f          	and    $0x3f,%r15d
    8b89:	43 33 3c bb          	xor    (%r11,%r15,4),%edi
    8b8d:	41 33 3c 89          	xor    (%r9,%rcx,4),%edi
    8b91:	44 89 f1             	mov    %r14d,%ecx
    8b94:	c1 e9 08             	shr    $0x8,%ecx
    8b97:	83 e1 3f             	and    $0x3f,%ecx
    8b9a:	33 3c 8b             	xor    (%rbx,%rcx,4),%edi
    8b9d:	44 89 f1             	mov    %r14d,%ecx
    8ba0:	41 c1 ee 18          	shr    $0x18,%r14d
    8ba4:	c1 e9 10             	shr    $0x10,%ecx
    8ba7:	41 83 e6 3f          	and    $0x3f,%r14d
    8bab:	83 e1 3f             	and    $0x3f,%ecx
    8bae:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
    8bb2:	43 33 3c b0          	xor    (%r8,%r14,4),%edi
    8bb6:	44 8b 76 f8          	mov    -0x8(%rsi),%r14d
    8bba:	31 fa                	xor    %edi,%edx
    8bbc:	89 d7                	mov    %edx,%edi
    8bbe:	41 31 d6             	xor    %edx,%r14d
    8bc1:	c1 cf 04             	ror    $0x4,%edi
    8bc4:	33 7e fc             	xor    -0x4(%rsi),%edi
    8bc7:	44 89 f1             	mov    %r14d,%ecx
    8bca:	45 89 f7             	mov    %r14d,%r15d
    8bcd:	c1 e9 08             	shr    $0x8,%ecx
    8bd0:	41 83 e7 3f          	and    $0x3f,%r15d
    8bd4:	83 e1 3f             	and    $0x3f,%ecx
    8bd7:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    8bdb:	43 33 4c bd 00       	xor    0x0(%r13,%r15,4),%ecx
    8be0:	31 c8                	xor    %ecx,%eax
    8be2:	44 89 f1             	mov    %r14d,%ecx
    8be5:	41 c1 ee 18          	shr    $0x18,%r14d
    8be9:	c1 e9 10             	shr    $0x10,%ecx
    8bec:	41 83 e6 3f          	and    $0x3f,%r14d
    8bf0:	83 e1 3f             	and    $0x3f,%ecx
    8bf3:	41 33 04 8b          	xor    (%r11,%rcx,4),%eax
    8bf7:	89 f9                	mov    %edi,%ecx
    8bf9:	43 33 04 b1          	xor    (%r9,%r14,4),%eax
    8bfd:	83 e1 3f             	and    $0x3f,%ecx
    8c00:	41 33 04 8c          	xor    (%r12,%rcx,4),%eax
    8c04:	89 f9                	mov    %edi,%ecx
    8c06:	c1 e9 08             	shr    $0x8,%ecx
    8c09:	83 e1 3f             	and    $0x3f,%ecx
    8c0c:	33 04 8b             	xor    (%rbx,%rcx,4),%eax
    8c0f:	89 f9                	mov    %edi,%ecx
    8c11:	c1 ef 18             	shr    $0x18,%edi
    8c14:	c1 e9 10             	shr    $0x10,%ecx
    8c17:	83 e7 3f             	and    $0x3f,%edi
    8c1a:	83 e1 3f             	and    $0x3f,%ecx
    8c1d:	41 33 04 8a          	xor    (%r10,%rcx,4),%eax
    8c21:	41 33 04 b8          	xor    (%r8,%rdi,4),%eax
    8c25:	48 3b 74 24 e8       	cmp    -0x18(%rsp),%rsi
    8c2a:	0f 85 10 ff ff ff    	jne    8b40 <mbedtls_des3_crypt_ecb+0xe0>
    8c30:	48 8b 7c 24 f0       	mov    -0x10(%rsp),%rdi
    8c35:	48 81 c7 00 01 00 00 	add    $0x100,%rdi
    8c3c:	48 89 7c 24 e8       	mov    %rdi,-0x18(%rsp)
    8c41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8c48:	8b 0e                	mov    (%rsi),%ecx
    8c4a:	41 89 d6             	mov    %edx,%r14d
    8c4d:	48 83 c6 10          	add    $0x10,%rsi
    8c51:	41 c1 ce 04          	ror    $0x4,%r14d
    8c55:	44 33 76 f4          	xor    -0xc(%rsi),%r14d
    8c59:	31 d1                	xor    %edx,%ecx
    8c5b:	45 89 f7             	mov    %r14d,%r15d
    8c5e:	89 cf                	mov    %ecx,%edi
    8c60:	41 83 e7 3f          	and    $0x3f,%r15d
    8c64:	83 e7 3f             	and    $0x3f,%edi
    8c67:	41 8b 7c bd 00       	mov    0x0(%r13,%rdi,4),%edi
    8c6c:	43 33 3c bc          	xor    (%r12,%r15,4),%edi
    8c70:	41 89 cf             	mov    %ecx,%r15d
    8c73:	41 c1 ef 08          	shr    $0x8,%r15d
    8c77:	41 83 e7 3f          	and    $0x3f,%r15d
    8c7b:	42 33 7c bd 00       	xor    0x0(%rbp,%r15,4),%edi
    8c80:	41 89 cf             	mov    %ecx,%r15d
    8c83:	c1 e9 18             	shr    $0x18,%ecx
    8c86:	41 c1 ef 10          	shr    $0x10,%r15d
    8c8a:	83 e1 3f             	and    $0x3f,%ecx
    8c8d:	41 83 e7 3f          	and    $0x3f,%r15d
    8c91:	43 33 3c bb          	xor    (%r11,%r15,4),%edi
    8c95:	41 33 3c 89          	xor    (%r9,%rcx,4),%edi
    8c99:	44 89 f1             	mov    %r14d,%ecx
    8c9c:	c1 e9 08             	shr    $0x8,%ecx
    8c9f:	83 e1 3f             	and    $0x3f,%ecx
    8ca2:	33 3c 8b             	xor    (%rbx,%rcx,4),%edi
    8ca5:	44 89 f1             	mov    %r14d,%ecx
    8ca8:	41 c1 ee 18          	shr    $0x18,%r14d
    8cac:	c1 e9 10             	shr    $0x10,%ecx
    8caf:	41 83 e6 3f          	and    $0x3f,%r14d
    8cb3:	83 e1 3f             	and    $0x3f,%ecx
    8cb6:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
    8cba:	43 33 3c b0          	xor    (%r8,%r14,4),%edi
    8cbe:	44 8b 76 f8          	mov    -0x8(%rsi),%r14d
    8cc2:	31 f8                	xor    %edi,%eax
    8cc4:	89 c7                	mov    %eax,%edi
    8cc6:	41 31 c6             	xor    %eax,%r14d
    8cc9:	c1 cf 04             	ror    $0x4,%edi
    8ccc:	33 7e fc             	xor    -0x4(%rsi),%edi
    8ccf:	44 89 f1             	mov    %r14d,%ecx
    8cd2:	45 89 f7             	mov    %r14d,%r15d
    8cd5:	c1 e9 08             	shr    $0x8,%ecx
    8cd8:	41 83 e7 3f          	and    $0x3f,%r15d
    8cdc:	83 e1 3f             	and    $0x3f,%ecx
    8cdf:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    8ce3:	43 33 4c bd 00       	xor    0x0(%r13,%r15,4),%ecx
    8ce8:	31 ca                	xor    %ecx,%edx
    8cea:	44 89 f1             	mov    %r14d,%ecx
    8ced:	41 c1 ee 18          	shr    $0x18,%r14d
    8cf1:	c1 e9 10             	shr    $0x10,%ecx
    8cf4:	41 83 e6 3f          	and    $0x3f,%r14d
    8cf8:	83 e1 3f             	and    $0x3f,%ecx
    8cfb:	41 33 14 8b          	xor    (%r11,%rcx,4),%edx
    8cff:	89 f9                	mov    %edi,%ecx
    8d01:	43 33 14 b1          	xor    (%r9,%r14,4),%edx
    8d05:	83 e1 3f             	and    $0x3f,%ecx
    8d08:	41 33 14 8c          	xor    (%r12,%rcx,4),%edx
    8d0c:	89 f9                	mov    %edi,%ecx
    8d0e:	c1 e9 08             	shr    $0x8,%ecx
    8d11:	83 e1 3f             	and    $0x3f,%ecx
    8d14:	33 14 8b             	xor    (%rbx,%rcx,4),%edx
    8d17:	89 f9                	mov    %edi,%ecx
    8d19:	c1 ef 18             	shr    $0x18,%edi
    8d1c:	c1 e9 10             	shr    $0x10,%ecx
    8d1f:	83 e7 3f             	and    $0x3f,%edi
    8d22:	83 e1 3f             	and    $0x3f,%ecx
    8d25:	41 33 14 8a          	xor    (%r10,%rcx,4),%edx
    8d29:	41 33 14 b8          	xor    (%r8,%rdi,4),%edx
    8d2d:	48 3b 74 24 e8       	cmp    -0x18(%rsp),%rsi
    8d32:	0f 85 10 ff ff ff    	jne    8c48 <mbedtls_des3_crypt_ecb+0x1e8>
    8d38:	48 8b 7c 24 f0       	mov    -0x10(%rsp),%rdi
    8d3d:	48 81 c7 80 01 00 00 	add    $0x180,%rdi
    8d44:	48 89 7c 24 e8       	mov    %rdi,-0x18(%rsp)
    8d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d50:	8b 0e                	mov    (%rsi),%ecx
    8d52:	41 89 c6             	mov    %eax,%r14d
    8d55:	48 83 c6 10          	add    $0x10,%rsi
    8d59:	41 c1 ce 04          	ror    $0x4,%r14d
    8d5d:	44 33 76 f4          	xor    -0xc(%rsi),%r14d
    8d61:	31 c1                	xor    %eax,%ecx
    8d63:	45 89 f7             	mov    %r14d,%r15d
    8d66:	89 cf                	mov    %ecx,%edi
    8d68:	41 83 e7 3f          	and    $0x3f,%r15d
    8d6c:	83 e7 3f             	and    $0x3f,%edi
    8d6f:	41 8b 7c bd 00       	mov    0x0(%r13,%rdi,4),%edi
    8d74:	43 33 3c bc          	xor    (%r12,%r15,4),%edi
    8d78:	41 89 cf             	mov    %ecx,%r15d
    8d7b:	41 c1 ef 08          	shr    $0x8,%r15d
    8d7f:	41 83 e7 3f          	and    $0x3f,%r15d
    8d83:	42 33 7c bd 00       	xor    0x0(%rbp,%r15,4),%edi
    8d88:	41 89 cf             	mov    %ecx,%r15d
    8d8b:	c1 e9 18             	shr    $0x18,%ecx
    8d8e:	41 c1 ef 10          	shr    $0x10,%r15d
    8d92:	83 e1 3f             	and    $0x3f,%ecx
    8d95:	41 83 e7 3f          	and    $0x3f,%r15d
    8d99:	43 33 3c bb          	xor    (%r11,%r15,4),%edi
    8d9d:	41 33 3c 89          	xor    (%r9,%rcx,4),%edi
    8da1:	44 89 f1             	mov    %r14d,%ecx
    8da4:	c1 e9 08             	shr    $0x8,%ecx
    8da7:	83 e1 3f             	and    $0x3f,%ecx
    8daa:	33 3c 8b             	xor    (%rbx,%rcx,4),%edi
    8dad:	44 89 f1             	mov    %r14d,%ecx
    8db0:	41 c1 ee 18          	shr    $0x18,%r14d
    8db4:	c1 e9 10             	shr    $0x10,%ecx
    8db7:	41 83 e6 3f          	and    $0x3f,%r14d
    8dbb:	83 e1 3f             	and    $0x3f,%ecx
    8dbe:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
    8dc2:	43 33 3c b0          	xor    (%r8,%r14,4),%edi
    8dc6:	44 8b 76 f8          	mov    -0x8(%rsi),%r14d
    8dca:	31 fa                	xor    %edi,%edx
    8dcc:	89 d7                	mov    %edx,%edi
    8dce:	41 31 d6             	xor    %edx,%r14d
    8dd1:	c1 cf 04             	ror    $0x4,%edi
    8dd4:	33 7e fc             	xor    -0x4(%rsi),%edi
    8dd7:	44 89 f1             	mov    %r14d,%ecx
    8dda:	45 89 f7             	mov    %r14d,%r15d
    8ddd:	c1 e9 08             	shr    $0x8,%ecx
    8de0:	41 83 e7 3f          	and    $0x3f,%r15d
    8de4:	83 e1 3f             	and    $0x3f,%ecx
    8de7:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    8deb:	43 33 4c bd 00       	xor    0x0(%r13,%r15,4),%ecx
    8df0:	31 c8                	xor    %ecx,%eax
    8df2:	44 89 f1             	mov    %r14d,%ecx
    8df5:	41 c1 ee 18          	shr    $0x18,%r14d
    8df9:	c1 e9 10             	shr    $0x10,%ecx
    8dfc:	41 83 e6 3f          	and    $0x3f,%r14d
    8e00:	83 e1 3f             	and    $0x3f,%ecx
    8e03:	41 33 04 8b          	xor    (%r11,%rcx,4),%eax
    8e07:	89 f9                	mov    %edi,%ecx
    8e09:	43 33 04 b1          	xor    (%r9,%r14,4),%eax
    8e0d:	83 e1 3f             	and    $0x3f,%ecx
    8e10:	41 33 04 8c          	xor    (%r12,%rcx,4),%eax
    8e14:	89 f9                	mov    %edi,%ecx
    8e16:	c1 e9 08             	shr    $0x8,%ecx
    8e19:	83 e1 3f             	and    $0x3f,%ecx
    8e1c:	33 04 8b             	xor    (%rbx,%rcx,4),%eax
    8e1f:	89 f9                	mov    %edi,%ecx
    8e21:	c1 ef 18             	shr    $0x18,%edi
    8e24:	c1 e9 10             	shr    $0x10,%ecx
    8e27:	83 e7 3f             	and    $0x3f,%edi
    8e2a:	83 e1 3f             	and    $0x3f,%ecx
    8e2d:	41 33 04 8a          	xor    (%r10,%rcx,4),%eax
    8e31:	41 33 04 b8          	xor    (%r8,%rdi,4),%eax
    8e35:	48 3b 74 24 e8       	cmp    -0x18(%rsp),%rsi
    8e3a:	0f 85 10 ff ff ff    	jne    8d50 <mbedtls_des3_crypt_ecb+0x2f0>
    8e40:	d1 c8                	ror    %eax
    8e42:	48 8b 5c 24 f8       	mov    -0x8(%rsp),%rbx
    8e47:	89 c6                	mov    %eax,%esi
    8e49:	31 d6                	xor    %edx,%esi
    8e4b:	81 e6 aa aa aa aa    	and    $0xaaaaaaaa,%esi
    8e51:	31 f2                	xor    %esi,%edx
    8e53:	31 f0                	xor    %esi,%eax
    8e55:	d1 ca                	ror    %edx
    8e57:	89 d6                	mov    %edx,%esi
    8e59:	c1 ee 08             	shr    $0x8,%esi
    8e5c:	31 c6                	xor    %eax,%esi
    8e5e:	81 e6 ff 00 ff 00    	and    $0xff00ff,%esi
    8e64:	31 f0                	xor    %esi,%eax
    8e66:	c1 e6 08             	shl    $0x8,%esi
    8e69:	31 d6                	xor    %edx,%esi
    8e6b:	89 f1                	mov    %esi,%ecx
    8e6d:	c1 e9 02             	shr    $0x2,%ecx
    8e70:	31 c1                	xor    %eax,%ecx
    8e72:	81 e1 33 33 33 33    	and    $0x33333333,%ecx
    8e78:	31 c8                	xor    %ecx,%eax
    8e7a:	8d 14 8d 00 00 00 00 	lea    0x0(,%rcx,4),%edx
    8e81:	89 c1                	mov    %eax,%ecx
    8e83:	31 f2                	xor    %esi,%edx
    8e85:	c1 e9 10             	shr    $0x10,%ecx
    8e88:	31 d1                	xor    %edx,%ecx
    8e8a:	0f b7 c9             	movzwl %cx,%ecx
    8e8d:	31 ca                	xor    %ecx,%edx
    8e8f:	c1 e1 10             	shl    $0x10,%ecx
    8e92:	31 c8                	xor    %ecx,%eax
    8e94:	89 c1                	mov    %eax,%ecx
    8e96:	c1 e9 04             	shr    $0x4,%ecx
    8e99:	31 d1                	xor    %edx,%ecx
    8e9b:	81 e1 0f 0f 0f 0f    	and    $0xf0f0f0f,%ecx
    8ea1:	89 ce                	mov    %ecx,%esi
    8ea3:	31 ca                	xor    %ecx,%edx
    8ea5:	c1 e6 04             	shl    $0x4,%esi
    8ea8:	0f ca                	bswap  %edx
    8eaa:	89 53 04             	mov    %edx,0x4(%rbx)
    8ead:	31 f0                	xor    %esi,%eax
    8eaf:	0f c8                	bswap  %eax
    8eb1:	89 03                	mov    %eax,(%rbx)
    8eb3:	31 c0                	xor    %eax,%eax
    8eb5:	5b                   	pop    %rbx
    8eb6:	5d                   	pop    %rbp
    8eb7:	41 5c                	pop    %r12
    8eb9:	41 5d                	pop    %r13
    8ebb:	41 5e                	pop    %r14
    8ebd:	41 5f                	pop    %r15
    8ebf:	c3                   	retq   

0000000000008ec0 <mbedtls_des3_crypt_cbc.part.0>:
    8ec0:	41 56                	push   %r14
    8ec2:	41 55                	push   %r13
    8ec4:	4d 8d 2c 30          	lea    (%r8,%rsi,1),%r13
    8ec8:	41 54                	push   %r12
    8eca:	55                   	push   %rbp
    8ecb:	53                   	push   %rbx
    8ecc:	48 85 f6             	test   %rsi,%rsi
    8ecf:	74 4f                	je     8f20 <mbedtls_des3_crypt_cbc.part.0+0x60>
    8ed1:	49 89 fc             	mov    %rdi,%r12
    8ed4:	49 89 d6             	mov    %rdx,%r14
    8ed7:	48 89 cd             	mov    %rcx,%rbp
    8eda:	4c 89 c3             	mov    %r8,%rbx
    8edd:	eb 14                	jmp    8ef3 <mbedtls_des3_crypt_cbc.part.0+0x33>
    8edf:	90                   	nop
    8ee0:	48 8b 03             	mov    (%rbx),%rax
    8ee3:	48 83 c3 08          	add    $0x8,%rbx
    8ee7:	48 83 c5 08          	add    $0x8,%rbp
    8eeb:	49 89 06             	mov    %rax,(%r14)
    8eee:	4c 39 eb             	cmp    %r13,%rbx
    8ef1:	74 2d                	je     8f20 <mbedtls_des3_crypt_cbc.part.0+0x60>
    8ef3:	8b 45 00             	mov    0x0(%rbp),%eax
    8ef6:	41 33 06             	xor    (%r14),%eax
    8ef9:	48 89 da             	mov    %rbx,%rdx
    8efc:	48 89 de             	mov    %rbx,%rsi
    8eff:	89 03                	mov    %eax,(%rbx)
    8f01:	8b 45 04             	mov    0x4(%rbp),%eax
    8f04:	4c 89 e7             	mov    %r12,%rdi
    8f07:	41 33 46 04          	xor    0x4(%r14),%eax
    8f0b:	89 43 04             	mov    %eax,0x4(%rbx)
    8f0e:	e8 4d fb ff ff       	callq  8a60 <mbedtls_des3_crypt_ecb>
    8f13:	85 c0                	test   %eax,%eax
    8f15:	74 c9                	je     8ee0 <mbedtls_des3_crypt_cbc.part.0+0x20>
    8f17:	5b                   	pop    %rbx
    8f18:	5d                   	pop    %rbp
    8f19:	41 5c                	pop    %r12
    8f1b:	41 5d                	pop    %r13
    8f1d:	41 5e                	pop    %r14
    8f1f:	c3                   	retq   
    8f20:	5b                   	pop    %rbx
    8f21:	31 c0                	xor    %eax,%eax
    8f23:	5d                   	pop    %rbp
    8f24:	41 5c                	pop    %r12
    8f26:	41 5d                	pop    %r13
    8f28:	41 5e                	pop    %r14
    8f2a:	c3                   	retq   
    8f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008f30 <mbedtls_des3_crypt_cbc>:
    8f30:	f3 0f 1e fa          	endbr64 
    8f34:	f6 c2 07             	test   $0x7,%dl
    8f37:	0f 85 98 00 00 00    	jne    8fd5 <mbedtls_des3_crypt_cbc+0xa5>
    8f3d:	89 f0                	mov    %esi,%eax
    8f3f:	41 57                	push   %r15
    8f41:	48 89 d6             	mov    %rdx,%rsi
    8f44:	49 89 ff             	mov    %rdi,%r15
    8f47:	41 56                	push   %r14
    8f49:	41 55                	push   %r13
    8f4b:	41 54                	push   %r12
    8f4d:	49 89 cc             	mov    %rcx,%r12
    8f50:	4c 89 c1             	mov    %r8,%rcx
    8f53:	55                   	push   %rbp
    8f54:	53                   	push   %rbx
    8f55:	4c 89 cb             	mov    %r9,%rbx
    8f58:	83 f8 01             	cmp    $0x1,%eax
    8f5b:	74 53                	je     8fb0 <mbedtls_des3_crypt_cbc+0x80>
    8f5d:	4c 89 c5             	mov    %r8,%rbp
    8f60:	4d 8d 34 10          	lea    (%r8,%rdx,1),%r14
    8f64:	48 85 d2             	test   %rdx,%rdx
    8f67:	75 26                	jne    8f8f <mbedtls_des3_crypt_cbc+0x5f>
    8f69:	eb 5d                	jmp    8fc8 <mbedtls_des3_crypt_cbc+0x98>
    8f6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8f70:	48 83 c5 08          	add    $0x8,%rbp
    8f74:	41 8b 04 24          	mov    (%r12),%eax
    8f78:	31 03                	xor    %eax,(%rbx)
    8f7a:	41 8b 44 24 04       	mov    0x4(%r12),%eax
    8f7f:	31 43 04             	xor    %eax,0x4(%rbx)
    8f82:	48 83 c3 08          	add    $0x8,%rbx
    8f86:	4d 89 2c 24          	mov    %r13,(%r12)
    8f8a:	4c 39 f5             	cmp    %r14,%rbp
    8f8d:	74 39                	je     8fc8 <mbedtls_des3_crypt_cbc+0x98>
    8f8f:	48 89 da             	mov    %rbx,%rdx
    8f92:	48 89 ee             	mov    %rbp,%rsi
    8f95:	4c 89 ff             	mov    %r15,%rdi
    8f98:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
    8f9c:	e8 bf fa ff ff       	callq  8a60 <mbedtls_des3_crypt_ecb>
    8fa1:	85 c0                	test   %eax,%eax
    8fa3:	74 cb                	je     8f70 <mbedtls_des3_crypt_cbc+0x40>
    8fa5:	5b                   	pop    %rbx
    8fa6:	5d                   	pop    %rbp
    8fa7:	41 5c                	pop    %r12
    8fa9:	41 5d                	pop    %r13
    8fab:	41 5e                	pop    %r14
    8fad:	41 5f                	pop    %r15
    8faf:	c3                   	retq   
    8fb0:	5b                   	pop    %rbx
    8fb1:	4c 89 e2             	mov    %r12,%rdx
    8fb4:	5d                   	pop    %rbp
    8fb5:	4d 89 c8             	mov    %r9,%r8
    8fb8:	41 5c                	pop    %r12
    8fba:	41 5d                	pop    %r13
    8fbc:	41 5e                	pop    %r14
    8fbe:	41 5f                	pop    %r15
    8fc0:	e9 fb fe ff ff       	jmpq   8ec0 <mbedtls_des3_crypt_cbc.part.0>
    8fc5:	0f 1f 00             	nopl   (%rax)
    8fc8:	5b                   	pop    %rbx
    8fc9:	31 c0                	xor    %eax,%eax
    8fcb:	5d                   	pop    %rbp
    8fcc:	41 5c                	pop    %r12
    8fce:	41 5d                	pop    %r13
    8fd0:	41 5e                	pop    %r14
    8fd2:	41 5f                	pop    %r15
    8fd4:	c3                   	retq   
    8fd5:	b8 ce ff ff ff       	mov    $0xffffffce,%eax
    8fda:	c3                   	retq   
    8fdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008fe0 <mbedtls_des_self_test>:
    8fe0:	f3 0f 1e fa          	endbr64 
    8fe4:	41 57                	push   %r15
    8fe6:	b9 10 00 00 00       	mov    $0x10,%ecx
    8feb:	41 56                	push   %r14
    8fed:	41 55                	push   %r13
    8fef:	41 54                	push   %r12
    8ff1:	45 31 e4             	xor    %r12d,%r12d
    8ff4:	55                   	push   %rbp
    8ff5:	53                   	push   %rbx
    8ff6:	48 81 ec c8 03 00 00 	sub    $0x3c8,%rsp
    8ffd:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    9001:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    9006:	4c 8d b4 24 a0 00 00 	lea    0xa0(%rsp),%r14
    900d:	00 
    900e:	4c 89 ef             	mov    %r13,%rdi
    9011:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9018:	00 00 
    901a:	48 89 84 24 b8 03 00 	mov    %rax,0x3b8(%rsp)
    9021:	00 
    9022:	31 c0                	xor    %eax,%eax
    9024:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    9027:	b9 30 00 00 00       	mov    $0x30,%ecx
    902c:	4c 89 f7             	mov    %r14,%rdi
    902f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    9032:	44 89 e0             	mov    %r12d,%eax
    9035:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
    903a:	44 89 e5             	mov    %r12d,%ebp
    903d:	83 e0 01             	and    $0x1,%eax
    9040:	d1 fd                	sar    %ebp
    9042:	89 44 24 10          	mov    %eax,0x10(%rsp)
    9046:	45 85 d2             	test   %r10d,%r10d
    9049:	75 35                	jne    9080 <mbedtls_des_self_test+0xa0>
    904b:	48 b8 4e 6f 77 20 69 	movabs $0x7420736920776f4e,%rax
    9052:	73 20 74 
    9055:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
    905c:	00 
    905d:	41 83 fc 05          	cmp    $0x5,%r12d
    9061:	0f 87 bd 01 00 00    	ja     9224 <mbedtls_des_self_test+0x244>
    9067:	48 8d 0d 72 92 01 00 	lea    0x19272(%rip),%rcx        # 222e0 <last4+0x580>
    906e:	44 89 e0             	mov    %r12d,%eax
    9071:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    9075:	48 01 c8             	add    %rcx,%rax
    9078:	3e ff e0             	notrack jmpq *%rax
    907b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9080:	85 c0                	test   %eax,%eax
    9082:	8d 4d 01             	lea    0x1(%rbp),%ecx
    9085:	48 8d 05 72 80 01 00 	lea    0x18072(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
    908c:	bf 01 00 00 00       	mov    $0x1,%edi
    9091:	4c 8d 05 41 80 01 00 	lea    0x18041(%rip),%r8        # 210d9 <_IO_stdin_used+0xd9>
    9098:	48 8d 35 08 92 01 00 	lea    0x19208(%rip),%rsi        # 222a7 <last4+0x547>
    909f:	4c 0f 44 c0          	cmove  %rax,%r8
    90a3:	6b c9 38             	imul   $0x38,%ecx,%ecx
    90a6:	83 fd 01             	cmp    $0x1,%ebp
    90a9:	19 d2                	sbb    %edx,%edx
    90ab:	31 c0                	xor    %eax,%eax
    90ad:	83 e2 ed             	and    $0xffffffed,%edx
    90b0:	83 c2 33             	add    $0x33,%edx
    90b3:	e8 88 a2 ff ff       	callq  3340 <__printf_chk@plt>
    90b8:	eb 91                	jmp    904b <mbedtls_des_self_test+0x6b>
    90ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    90c0:	4c 8d bc 24 20 02 00 	lea    0x220(%rsp),%r15
    90c7:	00 
    90c8:	4c 89 f7             	mov    %r14,%rdi
    90cb:	48 8d 15 be 92 01 00 	lea    0x192be(%rip),%rdx        # 22390 <des3_test_keys>
    90d2:	4c 89 fe             	mov    %r15,%rsi
    90d5:	e8 a6 f3 ff ff       	callq  8480 <des3_set3key>
    90da:	be 80 01 00 00       	mov    $0x180,%esi
    90df:	4c 89 ff             	mov    %r15,%rdi
    90e2:	e8 49 c1 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    90e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    90ee:	00 00 
    90f0:	bb 64 00 00 00       	mov    $0x64,%ebx
    90f5:	4c 8d bc 24 a8 03 00 	lea    0x3a8(%rsp),%r15
    90fc:	00 
    90fd:	eb 16                	jmp    9115 <mbedtls_des_self_test+0x135>
    90ff:	90                   	nop
    9100:	4c 89 ef             	mov    %r13,%rdi
    9103:	e8 e8 f5 ff ff       	callq  86f0 <mbedtls_des_crypt_ecb>
    9108:	85 c0                	test   %eax,%eax
    910a:	75 1f                	jne    912b <mbedtls_des_self_test+0x14b>
    910c:	83 eb 01             	sub    $0x1,%ebx
    910f:	0f 84 2b 01 00 00    	je     9240 <mbedtls_des_self_test+0x260>
    9115:	4c 89 fa             	mov    %r15,%rdx
    9118:	4c 89 fe             	mov    %r15,%rsi
    911b:	85 ed                	test   %ebp,%ebp
    911d:	74 e1                	je     9100 <mbedtls_des_self_test+0x120>
    911f:	4c 89 f7             	mov    %r14,%rdi
    9122:	e8 39 f9 ff ff       	callq  8a60 <mbedtls_des3_crypt_ecb>
    9127:	85 c0                	test   %eax,%eax
    9129:	74 e1                	je     910c <mbedtls_des_self_test+0x12c>
    912b:	be 80 00 00 00       	mov    $0x80,%esi
    9130:	4c 89 ef             	mov    %r13,%rdi
    9133:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    9139:	e8 f2 c0 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    913e:	be 80 01 00 00       	mov    $0x180,%esi
    9143:	4c 89 f7             	mov    %r14,%rdi
    9146:	e8 e5 c0 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    914b:	48 8b 84 24 b8 03 00 	mov    0x3b8(%rsp),%rax
    9152:	00 
    9153:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    915a:	00 00 
    915c:	0f 85 7b 04 00 00    	jne    95dd <mbedtls_des_self_test+0x5fd>
    9162:	48 81 c4 c8 03 00 00 	add    $0x3c8,%rsp
    9169:	44 89 f8             	mov    %r15d,%eax
    916c:	5b                   	pop    %rbx
    916d:	5d                   	pop    %rbp
    916e:	41 5c                	pop    %r12
    9170:	41 5d                	pop    %r13
    9172:	41 5e                	pop    %r14
    9174:	41 5f                	pop    %r15
    9176:	c3                   	retq   
    9177:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    917e:	00 00 
    9180:	48 8d 35 09 92 01 00 	lea    0x19209(%rip),%rsi        # 22390 <des3_test_keys>
    9187:	4c 89 ef             	mov    %r13,%rdi
    918a:	e8 e1 ed ff ff       	callq  7f70 <mbedtls_des_setkey>
    918f:	e9 5c ff ff ff       	jmpq   90f0 <mbedtls_des_self_test+0x110>
    9194:	0f 1f 40 00          	nopl   0x0(%rax)
    9198:	4c 8d bc 24 20 02 00 	lea    0x220(%rsp),%r15
    919f:	00 
    91a0:	4c 89 f6             	mov    %r14,%rsi
    91a3:	48 8d 15 e6 91 01 00 	lea    0x191e6(%rip),%rdx        # 22390 <des3_test_keys>
    91aa:	4c 89 ff             	mov    %r15,%rdi
    91ad:	e8 3e f2 ff ff       	callq  83f0 <des3_set2key>
    91b2:	be 80 01 00 00       	mov    $0x180,%esi
    91b7:	4c 89 ff             	mov    %r15,%rdi
    91ba:	e8 71 c0 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    91bf:	e9 2c ff ff ff       	jmpq   90f0 <mbedtls_des_self_test+0x110>
    91c4:	0f 1f 40 00          	nopl   0x0(%rax)
    91c8:	4c 8d bc 24 20 02 00 	lea    0x220(%rsp),%r15
    91cf:	00 
    91d0:	4c 89 f7             	mov    %r14,%rdi
    91d3:	48 8d 15 b6 91 01 00 	lea    0x191b6(%rip),%rdx        # 22390 <des3_test_keys>
    91da:	4c 89 fe             	mov    %r15,%rsi
    91dd:	e8 0e f2 ff ff       	callq  83f0 <des3_set2key>
    91e2:	be 80 01 00 00       	mov    $0x180,%esi
    91e7:	4c 89 ff             	mov    %r15,%rdi
    91ea:	e8 41 c0 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    91ef:	e9 fc fe ff ff       	jmpq   90f0 <mbedtls_des_self_test+0x110>
    91f4:	0f 1f 40 00          	nopl   0x0(%rax)
    91f8:	4c 8d bc 24 20 02 00 	lea    0x220(%rsp),%r15
    91ff:	00 
    9200:	4c 89 f6             	mov    %r14,%rsi
    9203:	48 8d 15 86 91 01 00 	lea    0x19186(%rip),%rdx        # 22390 <des3_test_keys>
    920a:	4c 89 ff             	mov    %r15,%rdi
    920d:	e8 6e f2 ff ff       	callq  8480 <des3_set3key>
    9212:	be 80 01 00 00       	mov    $0x180,%esi
    9217:	4c 89 ff             	mov    %r15,%rdi
    921a:	e8 11 c0 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    921f:	e9 cc fe ff ff       	jmpq   90f0 <mbedtls_des_self_test+0x110>
    9224:	48 8d 35 65 91 01 00 	lea    0x19165(%rip),%rsi        # 22390 <des3_test_keys>
    922b:	4c 89 ef             	mov    %r13,%rdi
    922e:	e8 fd f2 ff ff       	callq  8530 <mbedtls_des_setkey_dec>
    9233:	85 c0                	test   %eax,%eax
    9235:	0f 84 b5 fe ff ff    	je     90f0 <mbedtls_des_self_test+0x110>
    923b:	e9 eb fe ff ff       	jmpq   912b <mbedtls_des_self_test+0x14b>
    9240:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
    9245:	89 c2                	mov    %eax,%edx
    9247:	48 63 ed             	movslq %ebp,%rbp
    924a:	45 85 c9             	test   %r9d,%r9d
    924d:	0f 85 e4 00 00 00    	jne    9337 <mbedtls_des_self_test+0x357>
    9253:	48 8d 05 16 91 01 00 	lea    0x19116(%rip),%rax        # 22370 <des3_test_ecb_dec>
    925a:	48 8b 8c 24 a8 03 00 	mov    0x3a8(%rsp),%rcx
    9261:	00 
    9262:	48 39 0c e8          	cmp    %rcx,(%rax,%rbp,8)
    9266:	0f 85 e4 00 00 00    	jne    9350 <mbedtls_des_self_test+0x370>
    926c:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    9270:	85 ff                	test   %edi,%edi
    9272:	0f 85 a0 02 00 00    	jne    9518 <mbedtls_des_self_test+0x538>
    9278:	41 83 c4 01          	add    $0x1,%r12d
    927c:	41 83 fc 06          	cmp    $0x6,%r12d
    9280:	0f 85 ac fd ff ff    	jne    9032 <mbedtls_des_self_test+0x52>
    9286:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    928a:	4d 89 fc             	mov    %r15,%r12
    928d:	41 89 d7             	mov    %edx,%r15d
    9290:	85 f6                	test   %esi,%esi
    9292:	0f 85 d8 00 00 00    	jne    9370 <mbedtls_des_self_test+0x390>
    9298:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
    929f:	00 
    92a0:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
    92a5:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    92aa:	4d 89 e5             	mov    %r12,%r13
    92ad:	8b 44 24 18          	mov    0x18(%rsp),%eax
    92b1:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    92b5:	89 c5                	mov    %eax,%ebp
    92b7:	d1 fd                	sar    %ebp
    92b9:	85 c9                	test   %ecx,%ecx
    92bb:	74 38                	je     92f5 <mbedtls_des_self_test+0x315>
    92bd:	a8 01                	test   $0x1,%al
    92bf:	8d 4d 01             	lea    0x1(%rbp),%ecx
    92c2:	48 8d 05 35 7e 01 00 	lea    0x17e35(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
    92c9:	bf 01 00 00 00       	mov    $0x1,%edi
    92ce:	4c 8d 05 04 7e 01 00 	lea    0x17e04(%rip),%r8        # 210d9 <_IO_stdin_used+0xd9>
    92d5:	48 8d 35 e2 8f 01 00 	lea    0x18fe2(%rip),%rsi        # 222be <last4+0x55e>
    92dc:	4c 0f 44 c0          	cmove  %rax,%r8
    92e0:	6b c9 38             	imul   $0x38,%ecx,%ecx
    92e3:	83 fd 01             	cmp    $0x1,%ebp
    92e6:	19 d2                	sbb    %edx,%edx
    92e8:	31 c0                	xor    %eax,%eax
    92ea:	83 e2 ed             	and    $0xffffffed,%edx
    92ed:	83 c2 33             	add    $0x33,%edx
    92f0:	e8 4b a0 ff ff       	callq  3340 <__printf_chk@plt>
    92f5:	48 b8 12 34 56 78 90 	movabs $0xefcdab9078563412,%rax
    92fc:	ab cd ef 
    92ff:	48 89 84 24 b0 03 00 	mov    %rax,0x3b0(%rsp)
    9306:	00 
    9307:	48 b8 4e 6f 77 20 69 	movabs $0x7420736920776f4e,%rax
    930e:	73 20 74 
    9311:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
    9318:	00 
    9319:	8b 44 24 18          	mov    0x18(%rsp),%eax
    931d:	83 f8 05             	cmp    $0x5,%eax
    9320:	0f 87 cf 01 00 00    	ja     94f5 <mbedtls_des_self_test+0x515>
    9326:	48 8d 15 cb 8f 01 00 	lea    0x18fcb(%rip),%rdx        # 222f8 <last4+0x598>
    932d:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    9331:	48 01 d0             	add    %rdx,%rax
    9334:	3e ff e0             	notrack jmpq *%rax
    9337:	48 8d 05 12 90 01 00 	lea    0x19012(%rip),%rax        # 22350 <des3_test_ecb_enc>
    933e:	48 8b 04 e8          	mov    (%rax,%rbp,8),%rax
    9342:	48 39 84 24 a8 03 00 	cmp    %rax,0x3a8(%rsp)
    9349:	00 
    934a:	0f 84 1c ff ff ff    	je     926c <mbedtls_des_self_test+0x28c>
    9350:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    9355:	45 85 c0             	test   %r8d,%r8d
    9358:	0f 84 cd fd ff ff    	je     912b <mbedtls_des_self_test+0x14b>
    935e:	48 8d 3d 58 a7 01 00 	lea    0x1a758(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    9365:	e8 96 9e ff ff       	callq  3200 <puts@plt>
    936a:	e9 bc fd ff ff       	jmpq   912b <mbedtls_des_self_test+0x14b>
    936f:	90                   	nop
    9370:	bf 0a 00 00 00       	mov    $0xa,%edi
    9375:	e8 76 9e ff ff       	callq  31f0 <putchar@plt>
    937a:	e9 19 ff ff ff       	jmpq   9298 <mbedtls_des_self_test+0x2b8>
    937f:	4c 8d a4 24 20 02 00 	lea    0x220(%rsp),%r12
    9386:	00 
    9387:	4c 89 f7             	mov    %r14,%rdi
    938a:	48 8d 15 ff 8f 01 00 	lea    0x18fff(%rip),%rdx        # 22390 <des3_test_keys>
    9391:	4c 89 e6             	mov    %r12,%rsi
    9394:	e8 e7 f0 ff ff       	callq  8480 <des3_set3key>
    9399:	be 80 01 00 00       	mov    $0x180,%esi
    939e:	4c 89 e7             	mov    %r12,%rdi
    93a1:	e8 8a be ff ff       	callq  5230 <mbedtls_platform_zeroize>
    93a6:	bb 64 00 00 00       	mov    $0x64,%ebx
    93ab:	4c 8d bc 24 b0 03 00 	lea    0x3b0(%rsp),%r15
    93b2:	00 
    93b3:	49 bc 12 34 56 78 90 	movabs $0xefcdab9078563412,%r12
    93ba:	ab cd ef 
    93bd:	eb 2f                	jmp    93ee <mbedtls_des_self_test+0x40e>
    93bf:	90                   	nop
    93c0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    93c5:	e8 76 f5 ff ff       	callq  8940 <mbedtls_des_crypt_cbc.part.0>
    93ca:	85 c0                	test   %eax,%eax
    93cc:	0f 85 3c 01 00 00    	jne    950e <mbedtls_des_self_test+0x52e>
    93d2:	48 8b 84 24 a8 03 00 	mov    0x3a8(%rsp),%rax
    93d9:	00 
    93da:	4c 89 a4 24 a8 03 00 	mov    %r12,0x3a8(%rsp)
    93e1:	00 
    93e2:	83 eb 01             	sub    $0x1,%ebx
    93e5:	0f 84 46 01 00 00    	je     9531 <mbedtls_des_self_test+0x551>
    93eb:	49 89 c4             	mov    %rax,%r12
    93ee:	4d 89 e8             	mov    %r13,%r8
    93f1:	4c 89 e9             	mov    %r13,%rcx
    93f4:	4c 89 fa             	mov    %r15,%rdx
    93f7:	be 08 00 00 00       	mov    $0x8,%esi
    93fc:	85 ed                	test   %ebp,%ebp
    93fe:	74 c0                	je     93c0 <mbedtls_des_self_test+0x3e0>
    9400:	4c 89 f7             	mov    %r14,%rdi
    9403:	e8 b8 fa ff ff       	callq  8ec0 <mbedtls_des3_crypt_cbc.part.0>
    9408:	eb c0                	jmp    93ca <mbedtls_des_self_test+0x3ea>
    940a:	4c 8d a4 24 20 02 00 	lea    0x220(%rsp),%r12
    9411:	00 
    9412:	4c 89 f6             	mov    %r14,%rsi
    9415:	48 8d 15 74 8f 01 00 	lea    0x18f74(%rip),%rdx        # 22390 <des3_test_keys>
    941c:	4c 89 e7             	mov    %r12,%rdi
    941f:	e8 5c f0 ff ff       	callq  8480 <des3_set3key>
    9424:	be 80 01 00 00       	mov    $0x180,%esi
    9429:	4c 89 e7             	mov    %r12,%rdi
    942c:	e8 ff bd ff ff       	callq  5230 <mbedtls_platform_zeroize>
    9431:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    9436:	bb 64 00 00 00       	mov    $0x64,%ebx
    943b:	4c 8d bc 24 b0 03 00 	lea    0x3b0(%rsp),%r15
    9442:	00 
    9443:	eb 1c                	jmp    9461 <mbedtls_des_self_test+0x481>
    9445:	0f 1f 00             	nopl   (%rax)
    9448:	4c 89 e7             	mov    %r12,%rdi
    944b:	e8 60 f5 ff ff       	callq  89b0 <mbedtls_des_crypt_cbc>
    9450:	85 c0                	test   %eax,%eax
    9452:	0f 85 95 00 00 00    	jne    94ed <mbedtls_des_self_test+0x50d>
    9458:	83 eb 01             	sub    $0x1,%ebx
    945b:	0f 84 33 01 00 00    	je     9594 <mbedtls_des_self_test+0x5b4>
    9461:	4d 89 e9             	mov    %r13,%r9
    9464:	4d 89 e8             	mov    %r13,%r8
    9467:	4c 89 f9             	mov    %r15,%rcx
    946a:	ba 08 00 00 00       	mov    $0x8,%edx
    946f:	31 f6                	xor    %esi,%esi
    9471:	85 ed                	test   %ebp,%ebp
    9473:	74 d3                	je     9448 <mbedtls_des_self_test+0x468>
    9475:	4c 89 f7             	mov    %r14,%rdi
    9478:	e8 b3 fa ff ff       	callq  8f30 <mbedtls_des3_crypt_cbc>
    947d:	eb d1                	jmp    9450 <mbedtls_des_self_test+0x470>
    947f:	4c 8d a4 24 20 02 00 	lea    0x220(%rsp),%r12
    9486:	00 
    9487:	4c 89 f7             	mov    %r14,%rdi
    948a:	48 8d 15 ff 8e 01 00 	lea    0x18eff(%rip),%rdx        # 22390 <des3_test_keys>
    9491:	4c 89 e6             	mov    %r12,%rsi
    9494:	e8 57 ef ff ff       	callq  83f0 <des3_set2key>
    9499:	be 80 01 00 00       	mov    $0x180,%esi
    949e:	4c 89 e7             	mov    %r12,%rdi
    94a1:	e8 8a bd ff ff       	callq  5230 <mbedtls_platform_zeroize>
    94a6:	e9 fb fe ff ff       	jmpq   93a6 <mbedtls_des_self_test+0x3c6>
    94ab:	4c 8d a4 24 20 02 00 	lea    0x220(%rsp),%r12
    94b2:	00 
    94b3:	4c 89 f6             	mov    %r14,%rsi
    94b6:	48 8d 15 d3 8e 01 00 	lea    0x18ed3(%rip),%rdx        # 22390 <des3_test_keys>
    94bd:	4c 89 e7             	mov    %r12,%rdi
    94c0:	e8 2b ef ff ff       	callq  83f0 <des3_set2key>
    94c5:	be 80 01 00 00       	mov    $0x180,%esi
    94ca:	4c 89 e7             	mov    %r12,%rdi
    94cd:	e8 5e bd ff ff       	callq  5230 <mbedtls_platform_zeroize>
    94d2:	e9 5a ff ff ff       	jmpq   9431 <mbedtls_des_self_test+0x451>
    94d7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    94dc:	48 8d 35 ad 8e 01 00 	lea    0x18ead(%rip),%rsi        # 22390 <des3_test_keys>
    94e3:	e8 88 ea ff ff       	callq  7f70 <mbedtls_des_setkey>
    94e8:	e9 b9 fe ff ff       	jmpq   93a6 <mbedtls_des_self_test+0x3c6>
    94ed:	4d 89 e5             	mov    %r12,%r13
    94f0:	e9 36 fc ff ff       	jmpq   912b <mbedtls_des_self_test+0x14b>
    94f5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    94fa:	48 8d 35 8f 8e 01 00 	lea    0x18e8f(%rip),%rsi        # 22390 <des3_test_keys>
    9501:	e8 2a f0 ff ff       	callq  8530 <mbedtls_des_setkey_dec>
    9506:	85 c0                	test   %eax,%eax
    9508:	0f 84 23 ff ff ff    	je     9431 <mbedtls_des_self_test+0x451>
    950e:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    9513:	e9 13 fc ff ff       	jmpq   912b <mbedtls_des_self_test+0x14b>
    9518:	48 8d 3d c3 9c 01 00 	lea    0x19cc3(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    951f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9523:	e8 d8 9c ff ff       	callq  3200 <puts@plt>
    9528:	8b 54 24 10          	mov    0x10(%rsp),%edx
    952c:	e9 47 fd ff ff       	jmpq   9278 <mbedtls_des_self_test+0x298>
    9531:	48 63 ed             	movslq %ebp,%rbp
    9534:	48 8d 15 d5 8d 01 00 	lea    0x18dd5(%rip),%rdx        # 22310 <des3_test_cbc_enc>
    953b:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
    9542:	00 
    9543:	48 3b 04 ea          	cmp    (%rdx,%rbp,8),%rax
    9547:	75 63                	jne    95ac <mbedtls_des_self_test+0x5cc>
    9549:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    954d:	85 d2                	test   %edx,%edx
    954f:	75 7b                	jne    95cc <mbedtls_des_self_test+0x5ec>
    9551:	83 44 24 18 01       	addl   $0x1,0x18(%rsp)
    9556:	8b 44 24 18          	mov    0x18(%rsp),%eax
    955a:	83 f8 06             	cmp    $0x6,%eax
    955d:	0f 85 4a fd ff ff    	jne    92ad <mbedtls_des_self_test+0x2cd>
    9563:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9567:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    956c:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    9571:	85 c0                	test   %eax,%eax
    9573:	75 4b                	jne    95c0 <mbedtls_des_self_test+0x5e0>
    9575:	4c 89 ef             	mov    %r13,%rdi
    9578:	be 80 00 00 00       	mov    $0x80,%esi
    957d:	e8 ae bc ff ff       	callq  5230 <mbedtls_platform_zeroize>
    9582:	be 80 01 00 00       	mov    $0x180,%esi
    9587:	4c 89 f7             	mov    %r14,%rdi
    958a:	e8 a1 bc ff ff       	callq  5230 <mbedtls_platform_zeroize>
    958f:	e9 b7 fb ff ff       	jmpq   914b <mbedtls_des_self_test+0x16b>
    9594:	48 63 ed             	movslq %ebp,%rbp
    9597:	48 8d 05 92 8d 01 00 	lea    0x18d92(%rip),%rax        # 22330 <des3_test_cbc_dec>
    959e:	48 8b 04 e8          	mov    (%rax,%rbp,8),%rax
    95a2:	48 39 84 24 a8 03 00 	cmp    %rax,0x3a8(%rsp)
    95a9:	00 
    95aa:	74 9d                	je     9549 <mbedtls_des_self_test+0x569>
    95ac:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    95b1:	e9 9a fd ff ff       	jmpq   9350 <mbedtls_des_self_test+0x370>
    95b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    95bd:	00 00 00 
    95c0:	bf 0a 00 00 00       	mov    $0xa,%edi
    95c5:	e8 26 9c ff ff       	callq  31f0 <putchar@plt>
    95ca:	eb a9                	jmp    9575 <mbedtls_des_self_test+0x595>
    95cc:	48 8d 3d 0f 9c 01 00 	lea    0x19c0f(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    95d3:	e8 28 9c ff ff       	callq  3200 <puts@plt>
    95d8:	e9 74 ff ff ff       	jmpq   9551 <mbedtls_des_self_test+0x571>
    95dd:	e8 7e 9c ff ff       	callq  3260 <__stack_chk_fail@plt>
    95e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    95e9:	00 00 00 
    95ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000095f0 <mbedtls_md_info_from_type>:
    95f0:	f3 0f 1e fa          	endbr64 
    95f4:	83 ff 07             	cmp    $0x7,%edi
    95f7:	77 7f                	ja     9678 <mbedtls_md_info_from_type+0x88>
    95f9:	48 8d 15 40 97 01 00 	lea    0x19740(%rip),%rdx        # 22d40 <SB1+0x100>
    9600:	89 ff                	mov    %edi,%edi
    9602:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
    9606:	48 01 d0             	add    %rdx,%rax
    9609:	3e ff e0             	notrack jmpq *%rax
    960c:	0f 1f 40 00          	nopl   0x0(%rax)
    9610:	48 8d 05 b9 66 02 00 	lea    0x266b9(%rip),%rax        # 2fcd0 <mbedtls_ripemd160_info>
    9617:	c3                   	retq   
    9618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    961f:	00 
    9620:	48 8d 05 b9 66 02 00 	lea    0x266b9(%rip),%rax        # 2fce0 <mbedtls_md5_info>
    9627:	c3                   	retq   
    9628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    962f:	00 
    9630:	48 8d 05 89 66 02 00 	lea    0x26689(%rip),%rax        # 2fcc0 <mbedtls_sha1_info>
    9637:	c3                   	retq   
    9638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    963f:	00 
    9640:	48 8d 05 69 66 02 00 	lea    0x26669(%rip),%rax        # 2fcb0 <mbedtls_sha224_info>
    9647:	c3                   	retq   
    9648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    964f:	00 
    9650:	48 8d 05 39 66 02 00 	lea    0x26639(%rip),%rax        # 2fc90 <mbedtls_sha384_info>
    9657:	c3                   	retq   
    9658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    965f:	00 
    9660:	48 8d 05 19 66 02 00 	lea    0x26619(%rip),%rax        # 2fc80 <mbedtls_sha512_info>
    9667:	c3                   	retq   
    9668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    966f:	00 
    9670:	48 8d 05 29 66 02 00 	lea    0x26629(%rip),%rax        # 2fca0 <mbedtls_sha256_info>
    9677:	c3                   	retq   
    9678:	31 c0                	xor    %eax,%eax
    967a:	c3                   	retq   
    967b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009680 <mbedtls_md_init>:
    9680:	f3 0f 1e fa          	endbr64 
    9684:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9688:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    968f:	00 
    9690:	0f 11 07             	movups %xmm0,(%rdi)
    9693:	c3                   	retq   
    9694:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    969b:	00 00 00 00 
    969f:	90                   	nop

00000000000096a0 <mbedtls_md_free>:
    96a0:	f3 0f 1e fa          	endbr64 
    96a4:	48 85 ff             	test   %rdi,%rdi
    96a7:	0f 84 c3 00 00 00    	je     9770 <mbedtls_md_free+0xd0>
    96ad:	55                   	push   %rbp
    96ae:	48 8b 07             	mov    (%rdi),%rax
    96b1:	48 89 fd             	mov    %rdi,%rbp
    96b4:	48 85 c0             	test   %rax,%rax
    96b7:	74 67                	je     9720 <mbedtls_md_free+0x80>
    96b9:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    96bd:	48 85 ff             	test   %rdi,%rdi
    96c0:	74 2c                	je     96ee <mbedtls_md_free+0x4e>
    96c2:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    96c6:	77 21                	ja     96e9 <mbedtls_md_free+0x49>
    96c8:	8b 40 08             	mov    0x8(%rax),%eax
    96cb:	48 8d 15 8e 96 01 00 	lea    0x1968e(%rip),%rdx        # 22d60 <SB1+0x120>
    96d2:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    96d6:	48 01 d0             	add    %rdx,%rax
    96d9:	3e ff e0             	notrack jmpq *%rax
    96dc:	0f 1f 40 00          	nopl   0x0(%rax)
    96e0:	e8 1b 0e 00 00       	callq  a500 <mbedtls_md5_free>
    96e5:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    96e9:	e8 f2 9a ff ff       	callq  31e0 <free@plt>
    96ee:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    96f2:	48 85 ff             	test   %rdi,%rdi
    96f5:	74 1b                	je     9712 <mbedtls_md_free+0x72>
    96f7:	48 8b 45 00          	mov    0x0(%rbp),%rax
    96fb:	0f b6 70 0d          	movzbl 0xd(%rax),%esi
    96ff:	01 f6                	add    %esi,%esi
    9701:	48 63 f6             	movslq %esi,%rsi
    9704:	e8 27 bb ff ff       	callq  5230 <mbedtls_platform_zeroize>
    9709:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    970d:	e8 ce 9a ff ff       	callq  31e0 <free@plt>
    9712:	48 89 ef             	mov    %rbp,%rdi
    9715:	be 18 00 00 00       	mov    $0x18,%esi
    971a:	5d                   	pop    %rbp
    971b:	e9 10 bb ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    9720:	5d                   	pop    %rbp
    9721:	c3                   	retq   
    9722:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9728:	e8 d3 74 00 00       	callq  10c00 <mbedtls_sha512_free>
    972d:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9731:	e8 aa 9a ff ff       	callq  31e0 <free@plt>
    9736:	eb b6                	jmp    96ee <mbedtls_md_free+0x4e>
    9738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    973f:	00 
    9740:	e8 db 5f 00 00       	callq  f720 <mbedtls_sha256_free>
    9745:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9749:	e8 92 9a ff ff       	callq  31e0 <free@plt>
    974e:	eb 9e                	jmp    96ee <mbedtls_md_free+0x4e>
    9750:	e8 9b 29 00 00       	callq  c0f0 <mbedtls_ripemd160_free>
    9755:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9759:	eb 8e                	jmp    96e9 <mbedtls_md_free+0x49>
    975b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9760:	e8 1b 46 00 00       	callq  dd80 <mbedtls_sha1_free>
    9765:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9769:	e9 7b ff ff ff       	jmpq   96e9 <mbedtls_md_free+0x49>
    976e:	66 90                	xchg   %ax,%ax
    9770:	c3                   	retq   
    9771:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9778:	00 00 00 00 
    977c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009780 <mbedtls_md_clone>:
    9780:	f3 0f 1e fa          	endbr64 
    9784:	48 85 ff             	test   %rdi,%rdi
    9787:	0f 84 cb 00 00 00    	je     9858 <mbedtls_md_clone+0xd8>
    978d:	48 8b 17             	mov    (%rdi),%rdx
    9790:	48 85 d2             	test   %rdx,%rdx
    9793:	0f 84 bf 00 00 00    	je     9858 <mbedtls_md_clone+0xd8>
    9799:	48 85 f6             	test   %rsi,%rsi
    979c:	0f 84 b6 00 00 00    	je     9858 <mbedtls_md_clone+0xd8>
    97a2:	48 8b 06             	mov    (%rsi),%rax
    97a5:	48 39 c2             	cmp    %rax,%rdx
    97a8:	0f 85 aa 00 00 00    	jne    9858 <mbedtls_md_clone+0xd8>
    97ae:	48 85 c0             	test   %rax,%rax
    97b1:	0f 84 a1 00 00 00    	je     9858 <mbedtls_md_clone+0xd8>
    97b7:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    97bb:	0f 87 97 00 00 00    	ja     9858 <mbedtls_md_clone+0xd8>
    97c1:	48 83 ec 08          	sub    $0x8,%rsp
    97c5:	8b 40 08             	mov    0x8(%rax),%eax
    97c8:	48 8d 15 b1 95 01 00 	lea    0x195b1(%rip),%rdx        # 22d80 <SB1+0x140>
    97cf:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    97d3:	48 01 d0             	add    %rdx,%rax
    97d6:	3e ff e0             	notrack jmpq *%rax
    97d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    97e0:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    97e4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    97e8:	e8 33 74 00 00       	callq  10c20 <mbedtls_sha512_clone>
    97ed:	31 c0                	xor    %eax,%eax
    97ef:	48 83 c4 08          	add    $0x8,%rsp
    97f3:	c3                   	retq   
    97f4:	0f 1f 40 00          	nopl   0x0(%rax)
    97f8:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    97fc:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9800:	e8 3b 5f 00 00       	callq  f740 <mbedtls_sha256_clone>
    9805:	31 c0                	xor    %eax,%eax
    9807:	48 83 c4 08          	add    $0x8,%rsp
    980b:	c3                   	retq   
    980c:	0f 1f 40 00          	nopl   0x0(%rax)
    9810:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    9814:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9818:	e8 83 45 00 00       	callq  dda0 <mbedtls_sha1_clone>
    981d:	31 c0                	xor    %eax,%eax
    981f:	48 83 c4 08          	add    $0x8,%rsp
    9823:	c3                   	retq   
    9824:	0f 1f 40 00          	nopl   0x0(%rax)
    9828:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    982c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9830:	e8 db 28 00 00       	callq  c110 <mbedtls_ripemd160_clone>
    9835:	31 c0                	xor    %eax,%eax
    9837:	48 83 c4 08          	add    $0x8,%rsp
    983b:	c3                   	retq   
    983c:	0f 1f 40 00          	nopl   0x0(%rax)
    9840:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    9844:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9848:	e8 d3 0c 00 00       	callq  a520 <mbedtls_md5_clone>
    984d:	31 c0                	xor    %eax,%eax
    984f:	48 83 c4 08          	add    $0x8,%rsp
    9853:	c3                   	retq   
    9854:	0f 1f 40 00          	nopl   0x0(%rax)
    9858:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    985d:	c3                   	retq   
    985e:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9863:	eb 8a                	jmp    97ef <mbedtls_md_clone+0x6f>
    9865:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    986c:	00 00 00 00 

0000000000009870 <mbedtls_md_setup>:
    9870:	f3 0f 1e fa          	endbr64 
    9874:	48 85 f6             	test   %rsi,%rsi
    9877:	0f 84 4e 01 00 00    	je     99cb <mbedtls_md_setup+0x15b>
    987d:	41 54                	push   %r12
    987f:	55                   	push   %rbp
    9880:	48 89 fd             	mov    %rdi,%rbp
    9883:	53                   	push   %rbx
    9884:	48 85 ff             	test   %rdi,%rdi
    9887:	0f 84 34 01 00 00    	je     99c1 <mbedtls_md_setup+0x151>
    988d:	83 7e 08 07          	cmpl   $0x7,0x8(%rsi)
    9891:	48 89 37             	mov    %rsi,(%rdi)
    9894:	48 89 f3             	mov    %rsi,%rbx
    9897:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    989e:	00 
    989f:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    98a6:	00 
    98a7:	0f 87 14 01 00 00    	ja     99c1 <mbedtls_md_setup+0x151>
    98ad:	8b 46 08             	mov    0x8(%rsi),%eax
    98b0:	41 89 d4             	mov    %edx,%r12d
    98b3:	48 8d 15 e6 94 01 00 	lea    0x194e6(%rip),%rdx        # 22da0 <SB1+0x160>
    98ba:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    98be:	48 01 d0             	add    %rdx,%rax
    98c1:	3e ff e0             	notrack jmpq *%rax
    98c4:	0f 1f 40 00          	nopl   0x0(%rax)
    98c8:	bf 01 00 00 00       	mov    $0x1,%edi
    98cd:	be d8 00 00 00       	mov    $0xd8,%esi
    98d2:	e8 e9 99 ff ff       	callq  32c0 <calloc@plt>
    98d7:	48 89 45 08          	mov    %rax,0x8(%rbp)
    98db:	48 89 c7             	mov    %rax,%rdi
    98de:	48 85 c0             	test   %rax,%rax
    98e1:	74 34                	je     9917 <mbedtls_md_setup+0xa7>
    98e3:	e8 d8 72 00 00       	callq  10bc0 <mbedtls_sha512_init>
    98e8:	45 85 e4             	test   %r12d,%r12d
    98eb:	75 0b                	jne    98f8 <mbedtls_md_setup+0x88>
    98ed:	31 c0                	xor    %eax,%eax
    98ef:	5b                   	pop    %rbx
    98f0:	5d                   	pop    %rbp
    98f1:	41 5c                	pop    %r12
    98f3:	c3                   	retq   
    98f4:	0f 1f 40 00          	nopl   0x0(%rax)
    98f8:	0f b6 73 0d          	movzbl 0xd(%rbx),%esi
    98fc:	bf 02 00 00 00       	mov    $0x2,%edi
    9901:	e8 ba 99 ff ff       	callq  32c0 <calloc@plt>
    9906:	48 89 45 10          	mov    %rax,0x10(%rbp)
    990a:	48 85 c0             	test   %rax,%rax
    990d:	75 de                	jne    98ed <mbedtls_md_setup+0x7d>
    990f:	48 89 ef             	mov    %rbp,%rdi
    9912:	e8 89 fd ff ff       	callq  96a0 <mbedtls_md_free>
    9917:	b8 80 ae ff ff       	mov    $0xffffae80,%eax
    991c:	eb d1                	jmp    98ef <mbedtls_md_setup+0x7f>
    991e:	66 90                	xchg   %ax,%ax
    9920:	bf 01 00 00 00       	mov    $0x1,%edi
    9925:	be 6c 00 00 00       	mov    $0x6c,%esi
    992a:	e8 91 99 ff ff       	callq  32c0 <calloc@plt>
    992f:	48 89 45 08          	mov    %rax,0x8(%rbp)
    9933:	48 89 c7             	mov    %rax,%rdi
    9936:	48 85 c0             	test   %rax,%rax
    9939:	74 dc                	je     9917 <mbedtls_md_setup+0xa7>
    993b:	e8 b0 5d 00 00       	callq  f6f0 <mbedtls_sha256_init>
    9940:	eb a6                	jmp    98e8 <mbedtls_md_setup+0x78>
    9942:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9948:	bf 01 00 00 00       	mov    $0x1,%edi
    994d:	be 5c 00 00 00       	mov    $0x5c,%esi
    9952:	e8 69 99 ff ff       	callq  32c0 <calloc@plt>
    9957:	48 89 45 08          	mov    %rax,0x8(%rbp)
    995b:	48 89 c7             	mov    %rax,%rdi
    995e:	48 85 c0             	test   %rax,%rax
    9961:	74 b4                	je     9917 <mbedtls_md_setup+0xa7>
    9963:	e8 58 27 00 00       	callq  c0c0 <mbedtls_ripemd160_init>
    9968:	e9 7b ff ff ff       	jmpq   98e8 <mbedtls_md_setup+0x78>
    996d:	0f 1f 00             	nopl   (%rax)
    9970:	bf 01 00 00 00       	mov    $0x1,%edi
    9975:	be 58 00 00 00       	mov    $0x58,%esi
    997a:	e8 41 99 ff ff       	callq  32c0 <calloc@plt>
    997f:	48 89 45 08          	mov    %rax,0x8(%rbp)
    9983:	48 89 c7             	mov    %rax,%rdi
    9986:	48 85 c0             	test   %rax,%rax
    9989:	74 8c                	je     9917 <mbedtls_md_setup+0xa7>
    998b:	e8 40 0b 00 00       	callq  a4d0 <mbedtls_md5_init>
    9990:	e9 53 ff ff ff       	jmpq   98e8 <mbedtls_md_setup+0x78>
    9995:	0f 1f 00             	nopl   (%rax)
    9998:	bf 01 00 00 00       	mov    $0x1,%edi
    999d:	be 5c 00 00 00       	mov    $0x5c,%esi
    99a2:	e8 19 99 ff ff       	callq  32c0 <calloc@plt>
    99a7:	48 89 45 08          	mov    %rax,0x8(%rbp)
    99ab:	48 89 c7             	mov    %rax,%rdi
    99ae:	48 85 c0             	test   %rax,%rax
    99b1:	0f 84 60 ff ff ff    	je     9917 <mbedtls_md_setup+0xa7>
    99b7:	e8 94 43 00 00       	callq  dd50 <mbedtls_sha1_init>
    99bc:	e9 27 ff ff ff       	jmpq   98e8 <mbedtls_md_setup+0x78>
    99c1:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    99c6:	e9 24 ff ff ff       	jmpq   98ef <mbedtls_md_setup+0x7f>
    99cb:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    99d0:	c3                   	retq   
    99d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    99d8:	00 00 00 00 
    99dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000099e0 <mbedtls_md_starts>:
    99e0:	f3 0f 1e fa          	endbr64 
    99e4:	48 85 ff             	test   %rdi,%rdi
    99e7:	0f 84 9e 00 00 00    	je     9a8b <mbedtls_md_starts+0xab>
    99ed:	48 8b 07             	mov    (%rdi),%rax
    99f0:	48 85 c0             	test   %rax,%rax
    99f3:	0f 84 92 00 00 00    	je     9a8b <mbedtls_md_starts+0xab>
    99f9:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    99fd:	0f 87 88 00 00 00    	ja     9a8b <mbedtls_md_starts+0xab>
    9a03:	8b 40 08             	mov    0x8(%rax),%eax
    9a06:	48 8d 15 b3 93 01 00 	lea    0x193b3(%rip),%rdx        # 22dc0 <SB1+0x180>
    9a0d:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    9a11:	48 01 d0             	add    %rdx,%rax
    9a14:	3e ff e0             	notrack jmpq *%rax
    9a17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9a1e:	00 00 
    9a20:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a24:	e9 27 27 00 00       	jmpq   c150 <mbedtls_ripemd160_starts>
    9a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a30:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a34:	e9 27 0b 00 00       	jmpq   a560 <mbedtls_md5_starts>
    9a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a40:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a44:	e9 97 43 00 00       	jmpq   dde0 <mbedtls_sha1_starts>
    9a49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a50:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a54:	be 01 00 00 00       	mov    $0x1,%esi
    9a59:	e9 32 5d 00 00       	jmpq   f790 <mbedtls_sha256_starts>
    9a5e:	66 90                	xchg   %ax,%ax
    9a60:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a64:	31 f6                	xor    %esi,%esi
    9a66:	e9 25 5d 00 00       	jmpq   f790 <mbedtls_sha256_starts>
    9a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9a70:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a74:	be 01 00 00 00       	mov    $0x1,%esi
    9a79:	e9 52 72 00 00       	jmpq   10cd0 <mbedtls_sha512_starts>
    9a7e:	66 90                	xchg   %ax,%ax
    9a80:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a84:	31 f6                	xor    %esi,%esi
    9a86:	e9 45 72 00 00       	jmpq   10cd0 <mbedtls_sha512_starts>
    9a8b:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9a90:	c3                   	retq   
    9a91:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9a98:	00 00 00 00 
    9a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009aa0 <mbedtls_md_update>:
    9aa0:	f3 0f 1e fa          	endbr64 
    9aa4:	48 85 ff             	test   %rdi,%rdi
    9aa7:	74 70                	je     9b19 <mbedtls_md_update+0x79>
    9aa9:	48 8b 07             	mov    (%rdi),%rax
    9aac:	48 85 c0             	test   %rax,%rax
    9aaf:	74 68                	je     9b19 <mbedtls_md_update+0x79>
    9ab1:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    9ab5:	77 62                	ja     9b19 <mbedtls_md_update+0x79>
    9ab7:	8b 40 08             	mov    0x8(%rax),%eax
    9aba:	48 8d 0d 1f 93 01 00 	lea    0x1931f(%rip),%rcx        # 22de0 <SB1+0x1a0>
    9ac1:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    9ac5:	48 01 c8             	add    %rcx,%rax
    9ac8:	3e ff e0             	notrack jmpq *%rax
    9acb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9ad0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9ad4:	e9 e7 7a 00 00       	jmpq   115c0 <mbedtls_sha512_update>
    9ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ae0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9ae4:	e9 87 6a 00 00       	jmpq   10570 <mbedtls_sha256_update>
    9ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9af0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9af4:	e9 87 57 00 00       	jmpq   f280 <mbedtls_sha1_update>
    9af9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b00:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b04:	e9 27 3f 00 00       	jmpq   da30 <mbedtls_ripemd160_update>
    9b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b10:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b14:	e9 67 14 00 00       	jmpq   af80 <mbedtls_md5_update>
    9b19:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9b1e:	c3                   	retq   
    9b1f:	90                   	nop

0000000000009b20 <mbedtls_md_finish>:
    9b20:	f3 0f 1e fa          	endbr64 
    9b24:	48 85 ff             	test   %rdi,%rdi
    9b27:	74 70                	je     9b99 <mbedtls_md_finish+0x79>
    9b29:	48 8b 07             	mov    (%rdi),%rax
    9b2c:	48 85 c0             	test   %rax,%rax
    9b2f:	74 68                	je     9b99 <mbedtls_md_finish+0x79>
    9b31:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    9b35:	77 62                	ja     9b99 <mbedtls_md_finish+0x79>
    9b37:	8b 40 08             	mov    0x8(%rax),%eax
    9b3a:	48 8d 15 bf 92 01 00 	lea    0x192bf(%rip),%rdx        # 22e00 <SB1+0x1c0>
    9b41:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    9b45:	48 01 d0             	add    %rdx,%rax
    9b48:	3e ff e0             	notrack jmpq *%rax
    9b4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9b50:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b54:	e9 87 7a 00 00       	jmpq   115e0 <mbedtls_sha512_finish>
    9b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b60:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b64:	e9 27 6a 00 00       	jmpq   10590 <mbedtls_sha256_finish>
    9b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b70:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b74:	e9 27 57 00 00       	jmpq   f2a0 <mbedtls_sha1_finish>
    9b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b80:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b84:	e9 c7 3e 00 00       	jmpq   da50 <mbedtls_ripemd160_finish>
    9b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b90:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b94:	e9 07 14 00 00       	jmpq   afa0 <mbedtls_md5_finish>
    9b99:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9b9e:	c3                   	retq   
    9b9f:	90                   	nop

0000000000009ba0 <mbedtls_md>:
    9ba0:	f3 0f 1e fa          	endbr64 
    9ba4:	49 89 f0             	mov    %rsi,%r8
    9ba7:	48 89 d6             	mov    %rdx,%rsi
    9baa:	48 89 ca             	mov    %rcx,%rdx
    9bad:	48 85 ff             	test   %rdi,%rdi
    9bb0:	0f 84 84 00 00 00    	je     9c3a <mbedtls_md+0x9a>
    9bb6:	83 7f 08 07          	cmpl   $0x7,0x8(%rdi)
    9bba:	77 7e                	ja     9c3a <mbedtls_md+0x9a>
    9bbc:	8b 47 08             	mov    0x8(%rdi),%eax
    9bbf:	48 8d 0d 5a 92 01 00 	lea    0x1925a(%rip),%rcx        # 22e20 <SB1+0x1e0>
    9bc6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    9bca:	48 01 c8             	add    %rcx,%rax
    9bcd:	3e ff e0             	notrack jmpq *%rax
    9bd0:	4c 89 c7             	mov    %r8,%rdi
    9bd3:	e9 48 3f 00 00       	jmpq   db20 <mbedtls_ripemd160>
    9bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9bdf:	00 
    9be0:	4c 89 c7             	mov    %r8,%rdi
    9be3:	e9 08 15 00 00       	jmpq   b0f0 <mbedtls_md5>
    9be8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9bef:	00 
    9bf0:	4c 89 c7             	mov    %r8,%rdi
    9bf3:	e9 08 58 00 00       	jmpq   f400 <mbedtls_sha1>
    9bf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9bff:	00 
    9c00:	b9 01 00 00 00       	mov    $0x1,%ecx
    9c05:	4c 89 c7             	mov    %r8,%rdi
    9c08:	e9 43 6e 00 00       	jmpq   10a50 <mbedtls_sha256>
    9c0d:	0f 1f 00             	nopl   (%rax)
    9c10:	31 c9                	xor    %ecx,%ecx
    9c12:	4c 89 c7             	mov    %r8,%rdi
    9c15:	e9 36 6e 00 00       	jmpq   10a50 <mbedtls_sha256>
    9c1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9c20:	b9 01 00 00 00       	mov    $0x1,%ecx
    9c25:	4c 89 c7             	mov    %r8,%rdi
    9c28:	e9 83 7f 00 00       	jmpq   11bb0 <mbedtls_sha512>
    9c2d:	0f 1f 00             	nopl   (%rax)
    9c30:	31 c9                	xor    %ecx,%ecx
    9c32:	4c 89 c7             	mov    %r8,%rdi
    9c35:	e9 76 7f 00 00       	jmpq   11bb0 <mbedtls_sha512>
    9c3a:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9c3f:	c3                   	retq   

0000000000009c40 <mbedtls_md_get_size>:
    9c40:	f3 0f 1e fa          	endbr64 
    9c44:	48 85 ff             	test   %rdi,%rdi
    9c47:	74 07                	je     9c50 <mbedtls_md_get_size+0x10>
    9c49:	0f b6 47 0c          	movzbl 0xc(%rdi),%eax
    9c4d:	c3                   	retq   
    9c4e:	66 90                	xchg   %ax,%ax
    9c50:	31 c0                	xor    %eax,%eax
    9c52:	c3                   	retq   
    9c53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9c5a:	00 00 00 00 
    9c5e:	66 90                	xchg   %ax,%ax

0000000000009c60 <mbedtls_md_get_type>:
    9c60:	f3 0f 1e fa          	endbr64 
    9c64:	48 85 ff             	test   %rdi,%rdi
    9c67:	74 07                	je     9c70 <mbedtls_md_get_type+0x10>
    9c69:	8b 47 08             	mov    0x8(%rdi),%eax
    9c6c:	c3                   	retq   
    9c6d:	0f 1f 00             	nopl   (%rax)
    9c70:	31 c0                	xor    %eax,%eax
    9c72:	c3                   	retq   
    9c73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9c7a:	00 00 00 00 
    9c7e:	66 90                	xchg   %ax,%ax

0000000000009c80 <mbedtls_md_list>:
    9c80:	f3 0f 1e fa          	endbr64 
    9c84:	48 8d 05 b5 91 01 00 	lea    0x191b5(%rip),%rax        # 22e40 <supported_digests>
    9c8b:	c3                   	retq   
    9c8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009c90 <mbedtls_md_info_from_string>:
    9c90:	f3 0f 1e fa          	endbr64 
    9c94:	48 89 f8             	mov    %rdi,%rax
    9c97:	48 85 ff             	test   %rdi,%rdi
    9c9a:	0f 84 20 01 00 00    	je     9dc0 <mbedtls_md_info_from_string+0x130>
    9ca0:	b9 04 00 00 00       	mov    $0x4,%ecx
    9ca5:	48 8d 35 b4 91 01 00 	lea    0x191b4(%rip),%rsi        # 22e60 <supported_digests+0x20>
    9cac:	4c 8d 05 2d 60 02 00 	lea    0x2602d(%rip),%r8        # 2fce0 <mbedtls_md5_info>
    9cb3:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9cb5:	0f 97 c2             	seta   %dl
    9cb8:	80 da 00             	sbb    $0x0,%dl
    9cbb:	84 d2                	test   %dl,%dl
    9cbd:	0f 84 f9 00 00 00    	je     9dbc <mbedtls_md_info_from_string+0x12c>
    9cc3:	b9 0a 00 00 00       	mov    $0xa,%ecx
    9cc8:	48 8d 35 95 91 01 00 	lea    0x19195(%rip),%rsi        # 22e64 <supported_digests+0x24>
    9ccf:	48 89 c7             	mov    %rax,%rdi
    9cd2:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9cd4:	4c 8d 05 f5 5f 02 00 	lea    0x25ff5(%rip),%r8        # 2fcd0 <mbedtls_ripemd160_info>
    9cdb:	0f 97 c2             	seta   %dl
    9cde:	80 da 00             	sbb    $0x0,%dl
    9ce1:	84 d2                	test   %dl,%dl
    9ce3:	0f 84 d3 00 00 00    	je     9dbc <mbedtls_md_info_from_string+0x12c>
    9ce9:	b9 05 00 00 00       	mov    $0x5,%ecx
    9cee:	48 8d 35 79 91 01 00 	lea    0x19179(%rip),%rsi        # 22e6e <supported_digests+0x2e>
    9cf5:	48 89 c7             	mov    %rax,%rdi
    9cf8:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9cfa:	4c 8d 05 bf 5f 02 00 	lea    0x25fbf(%rip),%r8        # 2fcc0 <mbedtls_sha1_info>
    9d01:	0f 97 c2             	seta   %dl
    9d04:	80 da 00             	sbb    $0x0,%dl
    9d07:	84 d2                	test   %dl,%dl
    9d09:	0f 84 ad 00 00 00    	je     9dbc <mbedtls_md_info_from_string+0x12c>
    9d0f:	b9 04 00 00 00       	mov    $0x4,%ecx
    9d14:	48 8d 35 58 91 01 00 	lea    0x19158(%rip),%rsi        # 22e73 <supported_digests+0x33>
    9d1b:	48 89 c7             	mov    %rax,%rdi
    9d1e:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d20:	0f 97 c2             	seta   %dl
    9d23:	80 da 00             	sbb    $0x0,%dl
    9d26:	84 d2                	test   %dl,%dl
    9d28:	0f 84 8e 00 00 00    	je     9dbc <mbedtls_md_info_from_string+0x12c>
    9d2e:	b9 07 00 00 00       	mov    $0x7,%ecx
    9d33:	48 8d 35 3d 91 01 00 	lea    0x1913d(%rip),%rsi        # 22e77 <supported_digests+0x37>
    9d3a:	48 89 c7             	mov    %rax,%rdi
    9d3d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d3f:	4c 8d 05 6a 5f 02 00 	lea    0x25f6a(%rip),%r8        # 2fcb0 <mbedtls_sha224_info>
    9d46:	0f 97 c2             	seta   %dl
    9d49:	80 da 00             	sbb    $0x0,%dl
    9d4c:	84 d2                	test   %dl,%dl
    9d4e:	74 6c                	je     9dbc <mbedtls_md_info_from_string+0x12c>
    9d50:	b9 07 00 00 00       	mov    $0x7,%ecx
    9d55:	48 8d 35 22 91 01 00 	lea    0x19122(%rip),%rsi        # 22e7e <supported_digests+0x3e>
    9d5c:	48 89 c7             	mov    %rax,%rdi
    9d5f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d61:	4c 8d 05 38 5f 02 00 	lea    0x25f38(%rip),%r8        # 2fca0 <mbedtls_sha256_info>
    9d68:	0f 97 c2             	seta   %dl
    9d6b:	80 da 00             	sbb    $0x0,%dl
    9d6e:	84 d2                	test   %dl,%dl
    9d70:	74 4a                	je     9dbc <mbedtls_md_info_from_string+0x12c>
    9d72:	b9 07 00 00 00       	mov    $0x7,%ecx
    9d77:	48 8d 35 07 91 01 00 	lea    0x19107(%rip),%rsi        # 22e85 <supported_digests+0x45>
    9d7e:	48 89 c7             	mov    %rax,%rdi
    9d81:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d83:	4c 8d 05 06 5f 02 00 	lea    0x25f06(%rip),%r8        # 2fc90 <mbedtls_sha384_info>
    9d8a:	0f 97 c2             	seta   %dl
    9d8d:	80 da 00             	sbb    $0x0,%dl
    9d90:	84 d2                	test   %dl,%dl
    9d92:	74 28                	je     9dbc <mbedtls_md_info_from_string+0x12c>
    9d94:	48 89 c7             	mov    %rax,%rdi
    9d97:	b9 07 00 00 00       	mov    $0x7,%ecx
    9d9c:	48 8d 35 e9 90 01 00 	lea    0x190e9(%rip),%rsi        # 22e8c <supported_digests+0x4c>
    9da3:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9da5:	4c 8d 05 d4 5e 02 00 	lea    0x25ed4(%rip),%r8        # 2fc80 <mbedtls_sha512_info>
    9dac:	0f 97 c0             	seta   %al
    9daf:	1c 00                	sbb    $0x0,%al
    9db1:	84 c0                	test   %al,%al
    9db3:	b8 00 00 00 00       	mov    $0x0,%eax
    9db8:	4c 0f 45 c0          	cmovne %rax,%r8
    9dbc:	4c 89 c0             	mov    %r8,%rax
    9dbf:	c3                   	retq   
    9dc0:	45 31 c0             	xor    %r8d,%r8d
    9dc3:	eb f7                	jmp    9dbc <mbedtls_md_info_from_string+0x12c>
    9dc5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9dcc:	00 00 00 00 

0000000000009dd0 <mbedtls_md_info_from_ctx>:
    9dd0:	f3 0f 1e fa          	endbr64 
    9dd4:	48 85 ff             	test   %rdi,%rdi
    9dd7:	74 07                	je     9de0 <mbedtls_md_info_from_ctx+0x10>
    9dd9:	48 8b 07             	mov    (%rdi),%rax
    9ddc:	c3                   	retq   
    9ddd:	0f 1f 00             	nopl   (%rax)
    9de0:	31 c0                	xor    %eax,%eax
    9de2:	c3                   	retq   
    9de3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9dea:	00 00 00 00 
    9dee:	66 90                	xchg   %ax,%ax

0000000000009df0 <mbedtls_md_file>:
    9df0:	f3 0f 1e fa          	endbr64 
    9df4:	41 57                	push   %r15
    9df6:	41 56                	push   %r14
    9df8:	41 55                	push   %r13
    9dfa:	41 54                	push   %r12
    9dfc:	49 89 fc             	mov    %rdi,%r12
    9dff:	55                   	push   %rbp
    9e00:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
    9e07:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9e0e:	00 00 
    9e10:	48 89 84 24 28 04 00 	mov    %rax,0x428(%rsp)
    9e17:	00 
    9e18:	31 c0                	xor    %eax,%eax
    9e1a:	48 85 ff             	test   %rdi,%rdi
    9e1d:	0f 84 0d 01 00 00    	je     9f30 <mbedtls_md_file+0x140>
    9e23:	48 89 f7             	mov    %rsi,%rdi
    9e26:	48 8d 35 66 90 01 00 	lea    0x19066(%rip),%rsi        # 22e93 <supported_digests+0x53>
    9e2d:	49 89 d6             	mov    %rdx,%r14
    9e30:	e8 bb 94 ff ff       	callq  32f0 <fopen64@plt>
    9e35:	48 89 c5             	mov    %rax,%rbp
    9e38:	48 85 c0             	test   %rax,%rax
    9e3b:	0f 84 fa 00 00 00    	je     9f3b <mbedtls_md_file+0x14b>
    9e41:	48 89 c7             	mov    %rax,%rdi
    9e44:	31 f6                	xor    %esi,%esi
    9e46:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
    9e4b:	49 89 e5             	mov    %rsp,%r13
    9e4e:	e8 1d 94 ff ff       	callq  3270 <setbuf@plt>
    9e53:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9e57:	4c 89 e6             	mov    %r12,%rsi
    9e5a:	31 d2                	xor    %edx,%edx
    9e5c:	4c 89 ef             	mov    %r13,%rdi
    9e5f:	0f 29 04 24          	movaps %xmm0,(%rsp)
    9e63:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    9e6a:	00 00 
    9e6c:	e8 ff f9 ff ff       	callq  9870 <mbedtls_md_setup>
    9e71:	41 89 c4             	mov    %eax,%r12d
    9e74:	85 c0                	test   %eax,%eax
    9e76:	74 48                	je     9ec0 <mbedtls_md_file+0xd0>
    9e78:	be 00 04 00 00       	mov    $0x400,%esi
    9e7d:	4c 89 ff             	mov    %r15,%rdi
    9e80:	e8 ab b3 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    9e85:	48 89 ef             	mov    %rbp,%rdi
    9e88:	e8 b3 93 ff ff       	callq  3240 <fclose@plt>
    9e8d:	4c 89 ef             	mov    %r13,%rdi
    9e90:	e8 0b f8 ff ff       	callq  96a0 <mbedtls_md_free>
    9e95:	48 8b 84 24 28 04 00 	mov    0x428(%rsp),%rax
    9e9c:	00 
    9e9d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9ea4:	00 00 
    9ea6:	0f 85 9a 00 00 00    	jne    9f46 <mbedtls_md_file+0x156>
    9eac:	48 81 c4 30 04 00 00 	add    $0x430,%rsp
    9eb3:	44 89 e0             	mov    %r12d,%eax
    9eb6:	5d                   	pop    %rbp
    9eb7:	41 5c                	pop    %r12
    9eb9:	41 5d                	pop    %r13
    9ebb:	41 5e                	pop    %r14
    9ebd:	41 5f                	pop    %r15
    9ebf:	c3                   	retq   
    9ec0:	4c 89 ef             	mov    %r13,%rdi
    9ec3:	e8 18 fb ff ff       	callq  99e0 <mbedtls_md_starts>
    9ec8:	41 89 c4             	mov    %eax,%r12d
    9ecb:	85 c0                	test   %eax,%eax
    9ecd:	74 1b                	je     9eea <mbedtls_md_file+0xfa>
    9ecf:	eb a7                	jmp    9e78 <mbedtls_md_file+0x88>
    9ed1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ed8:	4c 89 fe             	mov    %r15,%rsi
    9edb:	4c 89 ef             	mov    %r13,%rdi
    9ede:	e8 bd fb ff ff       	callq  9aa0 <mbedtls_md_update>
    9ee3:	41 89 c4             	mov    %eax,%r12d
    9ee6:	85 c0                	test   %eax,%eax
    9ee8:	75 8e                	jne    9e78 <mbedtls_md_file+0x88>
    9eea:	ba 00 04 00 00       	mov    $0x400,%edx
    9eef:	48 89 e9             	mov    %rbp,%rcx
    9ef2:	be 01 00 00 00       	mov    $0x1,%esi
    9ef7:	4c 89 ff             	mov    %r15,%rdi
    9efa:	e8 21 93 ff ff       	callq  3220 <fread@plt>
    9eff:	48 89 c2             	mov    %rax,%rdx
    9f02:	48 85 c0             	test   %rax,%rax
    9f05:	75 d1                	jne    9ed8 <mbedtls_md_file+0xe8>
    9f07:	48 89 ef             	mov    %rbp,%rdi
    9f0a:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
    9f10:	e8 fb 92 ff ff       	callq  3210 <ferror@plt>
    9f15:	85 c0                	test   %eax,%eax
    9f17:	0f 85 5b ff ff ff    	jne    9e78 <mbedtls_md_file+0x88>
    9f1d:	4c 89 f6             	mov    %r14,%rsi
    9f20:	4c 89 ef             	mov    %r13,%rdi
    9f23:	e8 f8 fb ff ff       	callq  9b20 <mbedtls_md_finish>
    9f28:	41 89 c4             	mov    %eax,%r12d
    9f2b:	e9 48 ff ff ff       	jmpq   9e78 <mbedtls_md_file+0x88>
    9f30:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    9f36:	e9 5a ff ff ff       	jmpq   9e95 <mbedtls_md_file+0xa5>
    9f3b:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
    9f41:	e9 4f ff ff ff       	jmpq   9e95 <mbedtls_md_file+0xa5>
    9f46:	e8 15 93 ff ff       	callq  3260 <__stack_chk_fail@plt>
    9f4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009f50 <mbedtls_md_hmac_starts>:
    9f50:	f3 0f 1e fa          	endbr64 
    9f54:	41 57                	push   %r15
    9f56:	41 56                	push   %r14
    9f58:	41 55                	push   %r13
    9f5a:	41 54                	push   %r12
    9f5c:	55                   	push   %rbp
    9f5d:	53                   	push   %rbx
    9f5e:	48 83 ec 58          	sub    $0x58,%rsp
    9f62:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9f69:	00 00 
    9f6b:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    9f70:	31 c0                	xor    %eax,%eax
    9f72:	48 85 ff             	test   %rdi,%rdi
    9f75:	0f 84 9d 02 00 00    	je     a218 <mbedtls_md_hmac_starts+0x2c8>
    9f7b:	48 89 fd             	mov    %rdi,%rbp
    9f7e:	48 8b 3f             	mov    (%rdi),%rdi
    9f81:	48 85 ff             	test   %rdi,%rdi
    9f84:	0f 84 8e 02 00 00    	je     a218 <mbedtls_md_hmac_starts+0x2c8>
    9f8a:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
    9f8e:	4d 85 ed             	test   %r13,%r13
    9f91:	0f 84 81 02 00 00    	je     a218 <mbedtls_md_hmac_starts+0x2c8>
    9f97:	49 89 d4             	mov    %rdx,%r12
    9f9a:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
    9f9e:	48 89 f3             	mov    %rsi,%rbx
    9fa1:	49 89 e7             	mov    %rsp,%r15
    9fa4:	4c 39 e2             	cmp    %r12,%rdx
    9fa7:	73 5f                	jae    a008 <mbedtls_md_hmac_starts+0xb8>
    9fa9:	48 89 ef             	mov    %rbp,%rdi
    9fac:	49 89 e7             	mov    %rsp,%r15
    9faf:	e8 2c fa ff ff       	callq  99e0 <mbedtls_md_starts>
    9fb4:	41 89 c6             	mov    %eax,%r14d
    9fb7:	85 c0                	test   %eax,%eax
    9fb9:	0f 85 4f 01 00 00    	jne    a10e <mbedtls_md_hmac_starts+0x1be>
    9fbf:	4c 89 e2             	mov    %r12,%rdx
    9fc2:	48 89 de             	mov    %rbx,%rsi
    9fc5:	48 89 ef             	mov    %rbp,%rdi
    9fc8:	e8 d3 fa ff ff       	callq  9aa0 <mbedtls_md_update>
    9fcd:	41 89 c6             	mov    %eax,%r14d
    9fd0:	85 c0                	test   %eax,%eax
    9fd2:	0f 85 36 01 00 00    	jne    a10e <mbedtls_md_hmac_starts+0x1be>
    9fd8:	4c 89 fe             	mov    %r15,%rsi
    9fdb:	48 89 ef             	mov    %rbp,%rdi
    9fde:	e8 3d fb ff ff       	callq  9b20 <mbedtls_md_finish>
    9fe3:	41 89 c6             	mov    %eax,%r14d
    9fe6:	85 c0                	test   %eax,%eax
    9fe8:	0f 85 20 01 00 00    	jne    a10e <mbedtls_md_hmac_starts+0x1be>
    9fee:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    9ff2:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
    9ff6:	4c 89 fb             	mov    %r15,%rbx
    9ff9:	44 0f b6 67 0c       	movzbl 0xc(%rdi),%r12d
    9ffe:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
    a002:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a008:	49 8d 74 15 00       	lea    0x0(%r13,%rdx,1),%rsi
    a00d:	89 d1                	mov    %edx,%ecx
    a00f:	48 b8 36 36 36 36 36 	movabs $0x3636363636363636,%rax
    a016:	36 36 36 
    a019:	83 fa 08             	cmp    $0x8,%edx
    a01c:	0f 82 26 01 00 00    	jb     a148 <mbedtls_md_hmac_starts+0x1f8>
    a022:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    a026:	4c 89 e9             	mov    %r13,%rcx
    a029:	49 89 45 00          	mov    %rax,0x0(%r13)
    a02d:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a031:	49 89 44 15 f8       	mov    %rax,-0x8(%r13,%rdx,1)
    a036:	48 29 f9             	sub    %rdi,%rcx
    a039:	01 d1                	add    %edx,%ecx
    a03b:	c1 e9 03             	shr    $0x3,%ecx
    a03e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    a041:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    a045:	48 b8 5c 5c 5c 5c 5c 	movabs $0x5c5c5c5c5c5c5c5c,%rax
    a04c:	5c 5c 5c 
    a04f:	0f b6 4f 0d          	movzbl 0xd(%rdi),%ecx
    a053:	83 f9 08             	cmp    $0x8,%ecx
    a056:	0f 83 24 01 00 00    	jae    a180 <mbedtls_md_hmac_starts+0x230>
    a05c:	f6 c1 04             	test   $0x4,%cl
    a05f:	0f 85 9b 01 00 00    	jne    a200 <mbedtls_md_hmac_starts+0x2b0>
    a065:	85 c9                	test   %ecx,%ecx
    a067:	0f 85 3b 01 00 00    	jne    a1a8 <mbedtls_md_hmac_starts+0x258>
    a06d:	49 83 fc 03          	cmp    $0x3,%r12
    a071:	0f 86 51 01 00 00    	jbe    a1c8 <mbedtls_md_hmac_starts+0x278>
    a077:	ba 04 00 00 00       	mov    $0x4,%edx
    a07c:	0f 1f 40 00          	nopl   0x0(%rax)
    a080:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
    a084:	41 31 44 15 fc       	xor    %eax,-0x4(%r13,%rdx,1)
    a089:	48 89 d0             	mov    %rdx,%rax
    a08c:	48 8d 52 04          	lea    0x4(%rdx),%rdx
    a090:	49 39 d4             	cmp    %rdx,%r12
    a093:	73 eb                	jae    a080 <mbedtls_md_hmac_starts+0x130>
    a095:	49 39 c4             	cmp    %rax,%r12
    a098:	76 1a                	jbe    a0b4 <mbedtls_md_hmac_starts+0x164>
    a09a:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
    a09e:	41 30 54 05 00       	xor    %dl,0x0(%r13,%rax,1)
    a0a3:	48 83 c0 01          	add    $0x1,%rax
    a0a7:	49 39 c4             	cmp    %rax,%r12
    a0aa:	77 ee                	ja     a09a <mbedtls_md_hmac_starts+0x14a>
    a0ac:	31 c0                	xor    %eax,%eax
    a0ae:	49 83 fc 03          	cmp    $0x3,%r12
    a0b2:	76 25                	jbe    a0d9 <mbedtls_md_hmac_starts+0x189>
    a0b4:	ba 04 00 00 00       	mov    $0x4,%edx
    a0b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a0c0:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
    a0c4:	31 44 16 fc          	xor    %eax,-0x4(%rsi,%rdx,1)
    a0c8:	48 89 d0             	mov    %rdx,%rax
    a0cb:	48 8d 52 04          	lea    0x4(%rdx),%rdx
    a0cf:	49 39 d4             	cmp    %rdx,%r12
    a0d2:	73 ec                	jae    a0c0 <mbedtls_md_hmac_starts+0x170>
    a0d4:	49 39 c4             	cmp    %rax,%r12
    a0d7:	76 10                	jbe    a0e9 <mbedtls_md_hmac_starts+0x199>
    a0d9:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
    a0dd:	30 14 06             	xor    %dl,(%rsi,%rax,1)
    a0e0:	48 83 c0 01          	add    $0x1,%rax
    a0e4:	49 39 c4             	cmp    %rax,%r12
    a0e7:	77 f0                	ja     a0d9 <mbedtls_md_hmac_starts+0x189>
    a0e9:	48 89 ef             	mov    %rbp,%rdi
    a0ec:	e8 ef f8 ff ff       	callq  99e0 <mbedtls_md_starts>
    a0f1:	41 89 c6             	mov    %eax,%r14d
    a0f4:	85 c0                	test   %eax,%eax
    a0f6:	75 16                	jne    a10e <mbedtls_md_hmac_starts+0x1be>
    a0f8:	48 8b 45 00          	mov    0x0(%rbp),%rax
    a0fc:	4c 89 ee             	mov    %r13,%rsi
    a0ff:	48 89 ef             	mov    %rbp,%rdi
    a102:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    a106:	e8 95 f9 ff ff       	callq  9aa0 <mbedtls_md_update>
    a10b:	41 89 c6             	mov    %eax,%r14d
    a10e:	be 40 00 00 00       	mov    $0x40,%esi
    a113:	4c 89 ff             	mov    %r15,%rdi
    a116:	e8 15 b1 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    a11b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    a120:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a127:	00 00 
    a129:	0f 85 f4 00 00 00    	jne    a223 <mbedtls_md_hmac_starts+0x2d3>
    a12f:	48 83 c4 58          	add    $0x58,%rsp
    a133:	44 89 f0             	mov    %r14d,%eax
    a136:	5b                   	pop    %rbx
    a137:	5d                   	pop    %rbp
    a138:	41 5c                	pop    %r12
    a13a:	41 5d                	pop    %r13
    a13c:	41 5e                	pop    %r14
    a13e:	41 5f                	pop    %r15
    a140:	c3                   	retq   
    a141:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a148:	83 e2 04             	and    $0x4,%edx
    a14b:	0f 85 8f 00 00 00    	jne    a1e0 <mbedtls_md_hmac_starts+0x290>
    a151:	85 c9                	test   %ecx,%ecx
    a153:	0f 84 ec fe ff ff    	je     a045 <mbedtls_md_hmac_starts+0xf5>
    a159:	41 c6 45 00 36       	movb   $0x36,0x0(%r13)
    a15e:	f6 c1 02             	test   $0x2,%cl
    a161:	0f 84 da fe ff ff    	je     a041 <mbedtls_md_hmac_starts+0xf1>
    a167:	ba 36 36 00 00       	mov    $0x3636,%edx
    a16c:	66 41 89 54 0d fe    	mov    %dx,-0x2(%r13,%rcx,1)
    a172:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    a176:	e9 ca fe ff ff       	jmpq   a045 <mbedtls_md_hmac_starts+0xf5>
    a17b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a180:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    a184:	48 89 f2             	mov    %rsi,%rdx
    a187:	48 89 06             	mov    %rax,(%rsi)
    a18a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a18e:	48 89 44 0e f8       	mov    %rax,-0x8(%rsi,%rcx,1)
    a193:	48 29 fa             	sub    %rdi,%rdx
    a196:	01 d1                	add    %edx,%ecx
    a198:	c1 e9 03             	shr    $0x3,%ecx
    a19b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    a19e:	e9 ca fe ff ff       	jmpq   a06d <mbedtls_md_hmac_starts+0x11d>
    a1a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a1a8:	c6 06 5c             	movb   $0x5c,(%rsi)
    a1ab:	f6 c1 02             	test   $0x2,%cl
    a1ae:	0f 84 b9 fe ff ff    	je     a06d <mbedtls_md_hmac_starts+0x11d>
    a1b4:	b8 5c 5c 00 00       	mov    $0x5c5c,%eax
    a1b9:	66 89 44 0e fe       	mov    %ax,-0x2(%rsi,%rcx,1)
    a1be:	e9 aa fe ff ff       	jmpq   a06d <mbedtls_md_hmac_starts+0x11d>
    a1c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a1c8:	31 c0                	xor    %eax,%eax
    a1ca:	4d 85 e4             	test   %r12,%r12
    a1cd:	0f 85 c7 fe ff ff    	jne    a09a <mbedtls_md_hmac_starts+0x14a>
    a1d3:	e9 11 ff ff ff       	jmpq   a0e9 <mbedtls_md_hmac_starts+0x199>
    a1d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a1df:	00 
    a1e0:	41 c7 45 00 36 36 36 	movl   $0x36363636,0x0(%r13)
    a1e7:	36 
    a1e8:	41 c7 44 0d fc 36 36 	movl   $0x36363636,-0x4(%r13,%rcx,1)
    a1ef:	36 36 
    a1f1:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    a1f5:	e9 4b fe ff ff       	jmpq   a045 <mbedtls_md_hmac_starts+0xf5>
    a1fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a200:	c7 06 5c 5c 5c 5c    	movl   $0x5c5c5c5c,(%rsi)
    a206:	c7 44 0e fc 5c 5c 5c 	movl   $0x5c5c5c5c,-0x4(%rsi,%rcx,1)
    a20d:	5c 
    a20e:	e9 5a fe ff ff       	jmpq   a06d <mbedtls_md_hmac_starts+0x11d>
    a213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a218:	41 be 00 af ff ff    	mov    $0xffffaf00,%r14d
    a21e:	e9 f8 fe ff ff       	jmpq   a11b <mbedtls_md_hmac_starts+0x1cb>
    a223:	e8 38 90 ff ff       	callq  3260 <__stack_chk_fail@plt>
    a228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a22f:	00 

000000000000a230 <mbedtls_md_hmac_update>:
    a230:	f3 0f 1e fa          	endbr64 
    a234:	48 85 ff             	test   %rdi,%rdi
    a237:	74 17                	je     a250 <mbedtls_md_hmac_update+0x20>
    a239:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    a23d:	74 11                	je     a250 <mbedtls_md_hmac_update+0x20>
    a23f:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
    a244:	74 0a                	je     a250 <mbedtls_md_hmac_update+0x20>
    a246:	e9 55 f8 ff ff       	jmpq   9aa0 <mbedtls_md_update>
    a24b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a250:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    a255:	c3                   	retq   
    a256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a25d:	00 00 00 

000000000000a260 <mbedtls_md_hmac_finish>:
    a260:	f3 0f 1e fa          	endbr64 
    a264:	41 56                	push   %r14
    a266:	41 55                	push   %r13
    a268:	41 54                	push   %r12
    a26a:	55                   	push   %rbp
    a26b:	53                   	push   %rbx
    a26c:	48 83 ec 50          	sub    $0x50,%rsp
    a270:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a277:	00 00 
    a279:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    a27e:	31 c0                	xor    %eax,%eax
    a280:	48 85 ff             	test   %rdi,%rdi
    a283:	0f 84 a7 00 00 00    	je     a330 <mbedtls_md_hmac_finish+0xd0>
    a289:	48 8b 07             	mov    (%rdi),%rax
    a28c:	49 89 fe             	mov    %rdi,%r14
    a28f:	48 85 c0             	test   %rax,%rax
    a292:	0f 84 98 00 00 00    	je     a330 <mbedtls_md_hmac_finish+0xd0>
    a298:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    a29c:	48 85 db             	test   %rbx,%rbx
    a29f:	0f 84 8b 00 00 00    	je     a330 <mbedtls_md_hmac_finish+0xd0>
    a2a5:	49 89 e4             	mov    %rsp,%r12
    a2a8:	48 89 f5             	mov    %rsi,%rbp
    a2ab:	44 0f b6 68 0d       	movzbl 0xd(%rax),%r13d
    a2b0:	4c 89 e6             	mov    %r12,%rsi
    a2b3:	e8 68 f8 ff ff       	callq  9b20 <mbedtls_md_finish>
    a2b8:	85 c0                	test   %eax,%eax
    a2ba:	74 24                	je     a2e0 <mbedtls_md_hmac_finish+0x80>
    a2bc:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    a2c1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a2c8:	00 00 
    a2ca:	75 6b                	jne    a337 <mbedtls_md_hmac_finish+0xd7>
    a2cc:	48 83 c4 50          	add    $0x50,%rsp
    a2d0:	5b                   	pop    %rbx
    a2d1:	5d                   	pop    %rbp
    a2d2:	41 5c                	pop    %r12
    a2d4:	41 5d                	pop    %r13
    a2d6:	41 5e                	pop    %r14
    a2d8:	c3                   	retq   
    a2d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a2e0:	4c 89 f7             	mov    %r14,%rdi
    a2e3:	e8 f8 f6 ff ff       	callq  99e0 <mbedtls_md_starts>
    a2e8:	85 c0                	test   %eax,%eax
    a2ea:	75 d0                	jne    a2bc <mbedtls_md_hmac_finish+0x5c>
    a2ec:	49 8b 06             	mov    (%r14),%rax
    a2ef:	41 0f b6 f5          	movzbl %r13b,%esi
    a2f3:	4c 89 f7             	mov    %r14,%rdi
    a2f6:	48 01 de             	add    %rbx,%rsi
    a2f9:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    a2fd:	e8 9e f7 ff ff       	callq  9aa0 <mbedtls_md_update>
    a302:	85 c0                	test   %eax,%eax
    a304:	75 b6                	jne    a2bc <mbedtls_md_hmac_finish+0x5c>
    a306:	49 8b 06             	mov    (%r14),%rax
    a309:	4c 89 e6             	mov    %r12,%rsi
    a30c:	4c 89 f7             	mov    %r14,%rdi
    a30f:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
    a313:	e8 88 f7 ff ff       	callq  9aa0 <mbedtls_md_update>
    a318:	85 c0                	test   %eax,%eax
    a31a:	75 a0                	jne    a2bc <mbedtls_md_hmac_finish+0x5c>
    a31c:	48 89 ee             	mov    %rbp,%rsi
    a31f:	4c 89 f7             	mov    %r14,%rdi
    a322:	e8 f9 f7 ff ff       	callq  9b20 <mbedtls_md_finish>
    a327:	eb 93                	jmp    a2bc <mbedtls_md_hmac_finish+0x5c>
    a329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a330:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    a335:	eb 85                	jmp    a2bc <mbedtls_md_hmac_finish+0x5c>
    a337:	e8 24 8f ff ff       	callq  3260 <__stack_chk_fail@plt>
    a33c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a340 <mbedtls_md_hmac_reset>:
    a340:	f3 0f 1e fa          	endbr64 
    a344:	48 85 ff             	test   %rdi,%rdi
    a347:	74 56                	je     a39f <mbedtls_md_hmac_reset+0x5f>
    a349:	41 54                	push   %r12
    a34b:	55                   	push   %rbp
    a34c:	48 89 fd             	mov    %rdi,%rbp
    a34f:	48 83 ec 08          	sub    $0x8,%rsp
    a353:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    a357:	74 3f                	je     a398 <mbedtls_md_hmac_reset+0x58>
    a359:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    a35d:	4d 85 e4             	test   %r12,%r12
    a360:	74 36                	je     a398 <mbedtls_md_hmac_reset+0x58>
    a362:	e8 79 f6 ff ff       	callq  99e0 <mbedtls_md_starts>
    a367:	85 c0                	test   %eax,%eax
    a369:	74 0d                	je     a378 <mbedtls_md_hmac_reset+0x38>
    a36b:	48 83 c4 08          	add    $0x8,%rsp
    a36f:	5d                   	pop    %rbp
    a370:	41 5c                	pop    %r12
    a372:	c3                   	retq   
    a373:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a378:	48 8b 45 00          	mov    0x0(%rbp),%rax
    a37c:	4c 89 e6             	mov    %r12,%rsi
    a37f:	48 89 ef             	mov    %rbp,%rdi
    a382:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    a386:	48 83 c4 08          	add    $0x8,%rsp
    a38a:	5d                   	pop    %rbp
    a38b:	41 5c                	pop    %r12
    a38d:	e9 0e f7 ff ff       	jmpq   9aa0 <mbedtls_md_update>
    a392:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a398:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    a39d:	eb cc                	jmp    a36b <mbedtls_md_hmac_reset+0x2b>
    a39f:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    a3a4:	c3                   	retq   
    a3a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a3ac:	00 00 00 00 

000000000000a3b0 <mbedtls_md_hmac>:
    a3b0:	f3 0f 1e fa          	endbr64 
    a3b4:	41 57                	push   %r15
    a3b6:	41 56                	push   %r14
    a3b8:	41 55                	push   %r13
    a3ba:	41 54                	push   %r12
    a3bc:	55                   	push   %rbp
    a3bd:	53                   	push   %rbx
    a3be:	48 83 ec 38          	sub    $0x38,%rsp
    a3c2:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    a3c7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a3ce:	00 00 
    a3d0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    a3d5:	31 c0                	xor    %eax,%eax
    a3d7:	48 85 ff             	test   %rdi,%rdi
    a3da:	0f 84 b4 00 00 00    	je     a494 <mbedtls_md_hmac+0xe4>
    a3e0:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    a3e5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a3e9:	48 89 f5             	mov    %rsi,%rbp
    a3ec:	49 89 d5             	mov    %rdx,%r13
    a3ef:	48 89 fe             	mov    %rdi,%rsi
    a3f2:	ba 01 00 00 00       	mov    $0x1,%edx
    a3f7:	4c 89 f7             	mov    %r14,%rdi
    a3fa:	48 89 cb             	mov    %rcx,%rbx
    a3fd:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a404:	00 00 
    a406:	4d 89 c7             	mov    %r8,%r15
    a409:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    a40e:	e8 5d f4 ff ff       	callq  9870 <mbedtls_md_setup>
    a413:	41 89 c4             	mov    %eax,%r12d
    a416:	85 c0                	test   %eax,%eax
    a418:	74 2e                	je     a448 <mbedtls_md_hmac+0x98>
    a41a:	4c 89 f7             	mov    %r14,%rdi
    a41d:	e8 7e f2 ff ff       	callq  96a0 <mbedtls_md_free>
    a422:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    a427:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a42e:	00 00 
    a430:	75 75                	jne    a4a7 <mbedtls_md_hmac+0xf7>
    a432:	48 83 c4 38          	add    $0x38,%rsp
    a436:	44 89 e0             	mov    %r12d,%eax
    a439:	5b                   	pop    %rbx
    a43a:	5d                   	pop    %rbp
    a43b:	41 5c                	pop    %r12
    a43d:	41 5d                	pop    %r13
    a43f:	41 5e                	pop    %r14
    a441:	41 5f                	pop    %r15
    a443:	c3                   	retq   
    a444:	0f 1f 40 00          	nopl   0x0(%rax)
    a448:	4c 89 ea             	mov    %r13,%rdx
    a44b:	48 89 ee             	mov    %rbp,%rsi
    a44e:	4c 89 f7             	mov    %r14,%rdi
    a451:	e8 fa fa ff ff       	callq  9f50 <mbedtls_md_hmac_starts>
    a456:	41 89 c4             	mov    %eax,%r12d
    a459:	85 c0                	test   %eax,%eax
    a45b:	75 bd                	jne    a41a <mbedtls_md_hmac+0x6a>
    a45d:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    a463:	74 37                	je     a49c <mbedtls_md_hmac+0xec>
    a465:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    a46b:	74 2f                	je     a49c <mbedtls_md_hmac+0xec>
    a46d:	4c 89 fa             	mov    %r15,%rdx
    a470:	48 89 de             	mov    %rbx,%rsi
    a473:	4c 89 f7             	mov    %r14,%rdi
    a476:	e8 25 f6 ff ff       	callq  9aa0 <mbedtls_md_update>
    a47b:	41 89 c4             	mov    %eax,%r12d
    a47e:	85 c0                	test   %eax,%eax
    a480:	75 98                	jne    a41a <mbedtls_md_hmac+0x6a>
    a482:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a487:	4c 89 f7             	mov    %r14,%rdi
    a48a:	e8 d1 fd ff ff       	callq  a260 <mbedtls_md_hmac_finish>
    a48f:	41 89 c4             	mov    %eax,%r12d
    a492:	eb 86                	jmp    a41a <mbedtls_md_hmac+0x6a>
    a494:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    a49a:	eb 86                	jmp    a422 <mbedtls_md_hmac+0x72>
    a49c:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    a4a2:	e9 73 ff ff ff       	jmpq   a41a <mbedtls_md_hmac+0x6a>
    a4a7:	e8 b4 8d ff ff       	callq  3260 <__stack_chk_fail@plt>
    a4ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a4b0 <mbedtls_md_get_name>:
    a4b0:	f3 0f 1e fa          	endbr64 
    a4b4:	48 85 ff             	test   %rdi,%rdi
    a4b7:	74 07                	je     a4c0 <mbedtls_md_get_name+0x10>
    a4b9:	48 8b 07             	mov    (%rdi),%rax
    a4bc:	c3                   	retq   
    a4bd:	0f 1f 00             	nopl   (%rax)
    a4c0:	31 c0                	xor    %eax,%eax
    a4c2:	c3                   	retq   
    a4c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a4ca:	00 00 00 
    a4cd:	0f 1f 00             	nopl   (%rax)

000000000000a4d0 <mbedtls_md5_init>:
    a4d0:	f3 0f 1e fa          	endbr64 
    a4d4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    a4db:	48 89 f9             	mov    %rdi,%rcx
    a4de:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    a4e2:	31 c0                	xor    %eax,%eax
    a4e4:	48 c7 47 48 00 00 00 	movq   $0x0,0x48(%rdi)
    a4eb:	00 
    a4ec:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a4f0:	48 29 f9             	sub    %rdi,%rcx
    a4f3:	83 c1 58             	add    $0x58,%ecx
    a4f6:	c1 e9 03             	shr    $0x3,%ecx
    a4f9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    a4fc:	c3                   	retq   
    a4fd:	0f 1f 00             	nopl   (%rax)

000000000000a500 <mbedtls_md5_free>:
    a500:	f3 0f 1e fa          	endbr64 
    a504:	48 85 ff             	test   %rdi,%rdi
    a507:	74 0f                	je     a518 <mbedtls_md5_free+0x18>
    a509:	be 58 00 00 00       	mov    $0x58,%esi
    a50e:	e9 1d ad ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    a513:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a518:	c3                   	retq   
    a519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a520 <mbedtls_md5_clone>:
    a520:	f3 0f 1e fa          	endbr64 
    a524:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    a528:	0f 11 07             	movups %xmm0,(%rdi)
    a52b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    a530:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    a534:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    a539:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    a53d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    a542:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    a546:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    a54b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    a54f:	48 8b 46 50          	mov    0x50(%rsi),%rax
    a553:	48 89 47 50          	mov    %rax,0x50(%rdi)
    a557:	c3                   	retq   
    a558:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a55f:	00 

000000000000a560 <mbedtls_md5_starts>:
    a560:	f3 0f 1e fa          	endbr64 
    a564:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    a56b:	ab cd ef 
    a56e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    a575:	48 89 47 08          	mov    %rax,0x8(%rdi)
    a579:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    a580:	54 32 10 
    a583:	48 89 47 10          	mov    %rax,0x10(%rdi)
    a587:	31 c0                	xor    %eax,%eax
    a589:	c3                   	retq   
    a58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a590 <mbedtls_internal_md5_process>:
    a590:	f3 0f 1e fa          	endbr64 
    a594:	41 57                	push   %r15
    a596:	41 56                	push   %r14
    a598:	41 55                	push   %r13
    a59a:	41 54                	push   %r12
    a59c:	55                   	push   %rbp
    a59d:	53                   	push   %rbx
    a59e:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    a5a5:	44 8b 36             	mov    (%rsi),%r14d
    a5a8:	44 8b 4e 04          	mov    0x4(%rsi),%r9d
    a5ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a5b3:	00 00 
    a5b5:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a5ba:	31 c0                	xor    %eax,%eax
    a5bc:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
    a5c0:	8b 6e 14             	mov    0x14(%rsi),%ebp
    a5c3:	44 8b 6e 1c          	mov    0x1c(%rsi),%r13d
    a5c7:	44 8b 7e 08          	mov    0x8(%rsi),%r15d
    a5cb:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
    a5d0:	8b 46 10             	mov    0x10(%rsi),%eax
    a5d3:	8b 5e 18             	mov    0x18(%rsi),%ebx
    a5d6:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
    a5db:	8b 4e 20             	mov    0x20(%rsi),%ecx
    a5de:	8b 56 24             	mov    0x24(%rsi),%edx
    a5e1:	44 89 7c 24 28       	mov    %r15d,0x28(%rsp)
    a5e6:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
    a5eb:	89 04 24             	mov    %eax,(%rsp)
    a5ee:	89 44 24 30          	mov    %eax,0x30(%rsp)
    a5f2:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
    a5f6:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
    a5fa:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
    a5fe:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    a602:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
    a606:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    a60a:	44 89 6c 24 3c       	mov    %r13d,0x3c(%rsp)
    a60f:	89 54 24 44          	mov    %edx,0x44(%rsp)
    a613:	44 8b 66 34          	mov    0x34(%rsi),%r12d
    a617:	44 8b 56 28          	mov    0x28(%rsi),%r10d
    a61b:	8b 5e 30             	mov    0x30(%rsi),%ebx
    a61e:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
    a623:	44 8b 46 2c          	mov    0x2c(%rsi),%r8d
    a627:	8b 47 08             	mov    0x8(%rdi),%eax
    a62a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
    a62f:	8b 57 0c             	mov    0xc(%rdi),%edx
    a632:	33 57 10             	xor    0x10(%rdi),%edx
    a635:	44 89 64 24 54       	mov    %r12d,0x54(%rsp)
    a63a:	44 8b 66 38          	mov    0x38(%rsi),%r12d
    a63e:	8b 76 3c             	mov    0x3c(%rsi),%esi
    a641:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    a646:	42 8d 84 30 78 a4 6a 	lea    -0x28955b88(%rax,%r14,1),%eax
    a64d:	d7 
    a64e:	8b 4f 10             	mov    0x10(%rdi),%ecx
    a651:	44 89 44 24 4c       	mov    %r8d,0x4c(%rsp)
    a656:	89 74 24 18          	mov    %esi,0x18(%rsp)
    a65a:	89 74 24 5c          	mov    %esi,0x5c(%rsp)
    a65e:	8b 77 10             	mov    0x10(%rdi),%esi
    a661:	42 8d 8c 39 db 70 20 	lea    0x242070db(%rcx,%r15,1),%ecx
    a668:	24 
    a669:	33 77 14             	xor    0x14(%rdi),%esi
    a66c:	23 77 0c             	and    0xc(%rdi),%esi
    a66f:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    a674:	33 77 14             	xor    0x14(%rdi),%esi
    a677:	44 8b 3c 24          	mov    (%rsp),%r15d
    a67b:	89 5c 24 50          	mov    %ebx,0x50(%rsp)
    a67f:	01 c6                	add    %eax,%esi
    a681:	8b 47 14             	mov    0x14(%rdi),%eax
    a684:	44 89 64 24 58       	mov    %r12d,0x58(%rsp)
    a689:	c1 c6 07             	rol    $0x7,%esi
    a68c:	03 77 0c             	add    0xc(%rdi),%esi
    a68f:	21 f2                	and    %esi,%edx
    a691:	42 8d 84 08 56 b7 c7 	lea    -0x173848aa(%rax,%r9,1),%eax
    a698:	e8 
    a699:	33 57 10             	xor    0x10(%rdi),%edx
    a69c:	01 c2                	add    %eax,%edx
    a69e:	8b 47 0c             	mov    0xc(%rdi),%eax
    a6a1:	c1 c2 0c             	rol    $0xc,%edx
    a6a4:	01 f2                	add    %esi,%edx
    a6a6:	31 f0                	xor    %esi,%eax
    a6a8:	21 d0                	and    %edx,%eax
    a6aa:	33 47 0c             	xor    0xc(%rdi),%eax
    a6ad:	01 c8                	add    %ecx,%eax
    a6af:	89 f1                	mov    %esi,%ecx
    a6b1:	31 d1                	xor    %edx,%ecx
    a6b3:	c1 c8 0f             	ror    $0xf,%eax
    a6b6:	01 d0                	add    %edx,%eax
    a6b8:	41 89 c8             	mov    %ecx,%r8d
    a6bb:	8b 4f 0c             	mov    0xc(%rdi),%ecx
    a6be:	41 21 c0             	and    %eax,%r8d
    a6c1:	41 31 f0             	xor    %esi,%r8d
    a6c4:	42 8d 8c 19 ee ce bd 	lea    -0x3e423112(%rcx,%r11,1),%ecx
    a6cb:	c1 
    a6cc:	42 8d b4 3e af 0f 7c 	lea    -0xa83f051(%rsi,%r15,1),%esi
    a6d3:	f5 
    a6d4:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    a6d9:	41 01 c8             	add    %ecx,%r8d
    a6dc:	89 d1                	mov    %edx,%ecx
    a6de:	41 c1 c8 0a          	ror    $0xa,%r8d
    a6e2:	31 c1                	xor    %eax,%ecx
    a6e4:	41 01 c0             	add    %eax,%r8d
    a6e7:	44 21 c1             	and    %r8d,%ecx
    a6ea:	31 d1                	xor    %edx,%ecx
    a6ec:	8d 94 2a 2a c6 87 47 	lea    0x4787c62a(%rdx,%rbp,1),%edx
    a6f3:	01 f1                	add    %esi,%ecx
    a6f5:	89 c6                	mov    %eax,%esi
    a6f7:	c1 c1 07             	rol    $0x7,%ecx
    a6fa:	44 01 c1             	add    %r8d,%ecx
    a6fd:	44 31 c6             	xor    %r8d,%esi
    a700:	21 ce                	and    %ecx,%esi
    a702:	31 c6                	xor    %eax,%esi
    a704:	42 8d 84 38 13 46 30 	lea    -0x57cfb9ed(%rax,%r15,1),%eax
    a70b:	a8 
    a70c:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
    a711:	01 d6                	add    %edx,%esi
    a713:	44 89 c2             	mov    %r8d,%edx
    a716:	c1 c6 0c             	rol    $0xc,%esi
    a719:	31 ca                	xor    %ecx,%edx
    a71b:	01 ce                	add    %ecx,%esi
    a71d:	21 f2                	and    %esi,%edx
    a71f:	44 31 c2             	xor    %r8d,%edx
    a722:	47 8d 84 28 01 95 46 	lea    -0x2b96aff(%r8,%r13,1),%r8d
    a729:	fd 
    a72a:	01 c2                	add    %eax,%edx
    a72c:	89 c8                	mov    %ecx,%eax
    a72e:	c1 ca 0f             	ror    $0xf,%edx
    a731:	31 f0                	xor    %esi,%eax
    a733:	01 f2                	add    %esi,%edx
    a735:	21 d0                	and    %edx,%eax
    a737:	31 c8                	xor    %ecx,%eax
    a739:	42 8d 8c 39 d8 98 80 	lea    0x698098d8(%rcx,%r15,1),%ecx
    a740:	69 
    a741:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    a746:	44 01 c0             	add    %r8d,%eax
    a749:	41 89 f0             	mov    %esi,%r8d
    a74c:	c1 c8 0a             	ror    $0xa,%eax
    a74f:	41 31 d0             	xor    %edx,%r8d
    a752:	01 d0                	add    %edx,%eax
    a754:	41 21 c0             	and    %eax,%r8d
    a757:	41 31 f0             	xor    %esi,%r8d
    a75a:	42 8d b4 3e af f7 44 	lea    -0x74bb0851(%rsi,%r15,1),%esi
    a761:	8b 
    a762:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
    a767:	41 01 c8             	add    %ecx,%r8d
    a76a:	89 d1                	mov    %edx,%ecx
    a76c:	41 c1 c0 07          	rol    $0x7,%r8d
    a770:	31 c1                	xor    %eax,%ecx
    a772:	41 01 c0             	add    %eax,%r8d
    a775:	44 21 c1             	and    %r8d,%ecx
    a778:	31 d1                	xor    %edx,%ecx
    a77a:	42 8d 94 12 b1 5b ff 	lea    -0xa44f(%rdx,%r10,1),%edx
    a781:	ff 
    a782:	01 f1                	add    %esi,%ecx
    a784:	89 c6                	mov    %eax,%esi
    a786:	c1 c1 0c             	rol    $0xc,%ecx
    a789:	44 31 c6             	xor    %r8d,%esi
    a78c:	44 01 c1             	add    %r8d,%ecx
    a78f:	21 ce                	and    %ecx,%esi
    a791:	31 c6                	xor    %eax,%esi
    a793:	42 8d 84 38 be d7 5c 	lea    -0x76a32842(%rax,%r15,1),%eax
    a79a:	89 
    a79b:	01 d6                	add    %edx,%esi
    a79d:	44 89 c2             	mov    %r8d,%edx
    a7a0:	c1 ce 0f             	ror    $0xf,%esi
    a7a3:	31 ca                	xor    %ecx,%edx
    a7a5:	01 ce                	add    %ecx,%esi
    a7a7:	21 f2                	and    %esi,%edx
    a7a9:	44 31 c2             	xor    %r8d,%edx
    a7ac:	45 8d 84 18 22 11 90 	lea    0x6b901122(%r8,%rbx,1),%r8d
    a7b3:	6b 
    a7b4:	01 c2                	add    %eax,%edx
    a7b6:	89 c8                	mov    %ecx,%eax
    a7b8:	c1 ca 0a             	ror    $0xa,%edx
    a7bb:	31 f0                	xor    %esi,%eax
    a7bd:	01 f2                	add    %esi,%edx
    a7bf:	21 d0                	and    %edx,%eax
    a7c1:	31 c8                	xor    %ecx,%eax
    a7c3:	44 01 c0             	add    %r8d,%eax
    a7c6:	41 89 f0             	mov    %esi,%r8d
    a7c9:	41 31 d0             	xor    %edx,%r8d
    a7cc:	c1 c0 07             	rol    $0x7,%eax
    a7cf:	01 d0                	add    %edx,%eax
    a7d1:	45 89 c7             	mov    %r8d,%r15d
    a7d4:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    a7d9:	41 21 c7             	and    %eax,%r15d
    a7dc:	41 31 f7             	xor    %esi,%r15d
    a7df:	42 8d 8c 01 93 71 98 	lea    -0x2678e6d(%rcx,%r8,1),%ecx
    a7e6:	fd 
    a7e7:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
    a7ec:	42 8d b4 26 8e 43 79 	lea    -0x5986bc72(%rsi,%r12,1),%esi
    a7f3:	a6 
    a7f4:	41 01 cf             	add    %ecx,%r15d
    a7f7:	89 d1                	mov    %edx,%ecx
    a7f9:	41 c1 c7 0c          	rol    $0xc,%r15d
    a7fd:	31 c1                	xor    %eax,%ecx
    a7ff:	41 01 c7             	add    %eax,%r15d
    a802:	44 21 f9             	and    %r15d,%ecx
    a805:	31 d1                	xor    %edx,%ecx
    a807:	42 8d 94 02 21 08 b4 	lea    0x49b40821(%rdx,%r8,1),%edx
    a80e:	49 
    a80f:	01 f1                	add    %esi,%ecx
    a811:	89 c6                	mov    %eax,%esi
    a813:	c1 c9 0f             	ror    $0xf,%ecx
    a816:	44 31 fe             	xor    %r15d,%esi
    a819:	44 01 f9             	add    %r15d,%ecx
    a81c:	21 ce                	and    %ecx,%esi
    a81e:	31 c6                	xor    %eax,%esi
    a820:	42 8d 84 08 62 25 1e 	lea    -0x9e1da9e(%rax,%r9,1),%eax
    a827:	f6 
    a828:	01 d6                	add    %edx,%esi
    a82a:	89 ca                	mov    %ecx,%edx
    a82c:	c1 ce 0a             	ror    $0xa,%esi
    a82f:	01 ce                	add    %ecx,%esi
    a831:	31 f2                	xor    %esi,%edx
    a833:	41 89 d0             	mov    %edx,%r8d
    a836:	89 f2                	mov    %esi,%edx
    a838:	45 21 f8             	and    %r15d,%r8d
    a83b:	41 31 c8             	xor    %ecx,%r8d
    a83e:	41 01 c0             	add    %eax,%r8d
    a841:	8b 44 24 04          	mov    0x4(%rsp),%eax
    a845:	41 c1 c0 05          	rol    $0x5,%r8d
    a849:	41 01 f0             	add    %esi,%r8d
    a84c:	41 8d 84 07 40 b3 40 	lea    -0x3fbf4cc0(%r15,%rax,1),%eax
    a853:	c0 
    a854:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
    a859:	44 31 c2             	xor    %r8d,%edx
    a85c:	21 ca                	and    %ecx,%edx
    a85e:	42 8d 8c 39 51 5a 5e 	lea    0x265e5a51(%rcx,%r15,1),%ecx
    a865:	26 
    a866:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
    a86b:	31 f2                	xor    %esi,%edx
    a86d:	01 c2                	add    %eax,%edx
    a86f:	44 89 c0             	mov    %r8d,%eax
    a872:	c1 c2 09             	rol    $0x9,%edx
    a875:	44 01 c2             	add    %r8d,%edx
    a878:	31 d0                	xor    %edx,%eax
    a87a:	21 f0                	and    %esi,%eax
    a87c:	42 8d b4 36 aa c7 b6 	lea    -0x16493856(%rsi,%r14,1),%esi
    a883:	e9 
    a884:	44 31 c0             	xor    %r8d,%eax
    a887:	01 c8                	add    %ecx,%eax
    a889:	89 d1                	mov    %edx,%ecx
    a88b:	c1 c0 0e             	rol    $0xe,%eax
    a88e:	01 d0                	add    %edx,%eax
    a890:	31 c1                	xor    %eax,%ecx
    a892:	44 21 c1             	and    %r8d,%ecx
    a895:	45 8d 84 28 5d 10 2f 	lea    -0x29d0efa3(%r8,%rbp,1),%r8d
    a89c:	d6 
    a89d:	31 d1                	xor    %edx,%ecx
    a89f:	01 f1                	add    %esi,%ecx
    a8a1:	89 c6                	mov    %eax,%esi
    a8a3:	c1 c9 0c             	ror    $0xc,%ecx
    a8a6:	01 c1                	add    %eax,%ecx
    a8a8:	31 ce                	xor    %ecx,%esi
    a8aa:	21 d6                	and    %edx,%esi
    a8ac:	42 8d 94 12 53 14 44 	lea    0x2441453(%rdx,%r10,1),%edx
    a8b3:	02 
    a8b4:	31 c6                	xor    %eax,%esi
    a8b6:	44 01 c6             	add    %r8d,%esi
    a8b9:	41 89 c8             	mov    %ecx,%r8d
    a8bc:	c1 c6 05             	rol    $0x5,%esi
    a8bf:	01 ce                	add    %ecx,%esi
    a8c1:	41 31 f0             	xor    %esi,%r8d
    a8c4:	41 21 c0             	and    %eax,%r8d
    a8c7:	42 8d 84 38 81 e6 a1 	lea    -0x275e197f(%rax,%r15,1),%eax
    a8ce:	d8 
    a8cf:	44 8b 3c 24          	mov    (%rsp),%r15d
    a8d3:	41 31 c8             	xor    %ecx,%r8d
    a8d6:	41 01 d0             	add    %edx,%r8d
    a8d9:	89 f2                	mov    %esi,%edx
    a8db:	41 c1 c0 09          	rol    $0x9,%r8d
    a8df:	41 01 f0             	add    %esi,%r8d
    a8e2:	44 31 c2             	xor    %r8d,%edx
    a8e5:	21 ca                	and    %ecx,%edx
    a8e7:	42 8d 8c 39 c8 fb d3 	lea    -0x182c0438(%rcx,%r15,1),%ecx
    a8ee:	e7 
    a8ef:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    a8f4:	31 f2                	xor    %esi,%edx
    a8f6:	01 c2                	add    %eax,%edx
    a8f8:	44 89 c0             	mov    %r8d,%eax
    a8fb:	c1 c2 0e             	rol    $0xe,%edx
    a8fe:	44 01 c2             	add    %r8d,%edx
    a901:	31 d0                	xor    %edx,%eax
    a903:	21 f0                	and    %esi,%eax
    a905:	42 8d b4 3e e6 cd e1 	lea    0x21e1cde6(%rsi,%r15,1),%esi
    a90c:	21 
    a90d:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
    a912:	44 31 c0             	xor    %r8d,%eax
    a915:	01 c8                	add    %ecx,%eax
    a917:	89 d1                	mov    %edx,%ecx
    a919:	c1 c8 0c             	ror    $0xc,%eax
    a91c:	01 d0                	add    %edx,%eax
    a91e:	31 c1                	xor    %eax,%ecx
    a920:	44 21 c1             	and    %r8d,%ecx
    a923:	47 8d 84 20 d6 07 37 	lea    -0x3cc8f82a(%r8,%r12,1),%r8d
    a92a:	c3 
    a92b:	31 d1                	xor    %edx,%ecx
    a92d:	01 f1                	add    %esi,%ecx
    a92f:	89 c6                	mov    %eax,%esi
    a931:	c1 c1 05             	rol    $0x5,%ecx
    a934:	01 c1                	add    %eax,%ecx
    a936:	31 ce                	xor    %ecx,%esi
    a938:	21 d6                	and    %edx,%esi
    a93a:	42 8d 94 1a 87 0d d5 	lea    -0xb2af279(%rdx,%r11,1),%edx
    a941:	f4 
    a942:	31 c6                	xor    %eax,%esi
    a944:	44 01 c6             	add    %r8d,%esi
    a947:	41 89 c8             	mov    %ecx,%r8d
    a94a:	c1 c6 09             	rol    $0x9,%esi
    a94d:	01 ce                	add    %ecx,%esi
    a94f:	41 31 f0             	xor    %esi,%r8d
    a952:	41 21 c0             	and    %eax,%r8d
    a955:	42 8d 84 38 ed 14 5a 	lea    0x455a14ed(%rax,%r15,1),%eax
    a95c:	45 
    a95d:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
    a962:	41 31 c8             	xor    %ecx,%r8d
    a965:	41 01 d0             	add    %edx,%r8d
    a968:	89 f2                	mov    %esi,%edx
    a96a:	41 c1 c0 0e          	rol    $0xe,%r8d
    a96e:	41 01 f0             	add    %esi,%r8d
    a971:	44 31 c2             	xor    %r8d,%edx
    a974:	21 ca                	and    %ecx,%edx
    a976:	42 8d 8c 39 05 e9 e3 	lea    -0x561c16fb(%rcx,%r15,1),%ecx
    a97d:	a9 
    a97e:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    a983:	31 f2                	xor    %esi,%edx
    a985:	01 c2                	add    %eax,%edx
    a987:	44 89 c0             	mov    %r8d,%eax
    a98a:	c1 ca 0c             	ror    $0xc,%edx
    a98d:	44 01 c2             	add    %r8d,%edx
    a990:	31 d0                	xor    %edx,%eax
    a992:	21 f0                	and    %esi,%eax
    a994:	42 8d b4 3e f8 a3 ef 	lea    -0x3105c08(%rsi,%r15,1),%esi
    a99b:	fc 
    a99c:	44 31 c0             	xor    %r8d,%eax
    a99f:	01 c8                	add    %ecx,%eax
    a9a1:	89 d1                	mov    %edx,%ecx
    a9a3:	c1 c0 05             	rol    $0x5,%eax
    a9a6:	01 d0                	add    %edx,%eax
    a9a8:	31 c1                	xor    %eax,%ecx
    a9aa:	44 21 c1             	and    %r8d,%ecx
    a9ad:	47 8d 84 28 d9 02 6f 	lea    0x676f02d9(%r8,%r13,1),%r8d
    a9b4:	67 
    a9b5:	31 d1                	xor    %edx,%ecx
    a9b7:	01 f1                	add    %esi,%ecx
    a9b9:	89 c6                	mov    %eax,%esi
    a9bb:	c1 c1 09             	rol    $0x9,%ecx
    a9be:	01 c1                	add    %eax,%ecx
    a9c0:	31 ce                	xor    %ecx,%esi
    a9c2:	21 d6                	and    %edx,%esi
    a9c4:	8d 94 1a 8a 4c 2a 8d 	lea    -0x72d5b376(%rdx,%rbx,1),%edx
    a9cb:	31 c6                	xor    %eax,%esi
    a9cd:	44 01 c6             	add    %r8d,%esi
    a9d0:	41 89 c8             	mov    %ecx,%r8d
    a9d3:	c1 c6 0e             	rol    $0xe,%esi
    a9d6:	01 ce                	add    %ecx,%esi
    a9d8:	41 31 f0             	xor    %esi,%r8d
    a9db:	45 89 c7             	mov    %r8d,%r15d
    a9de:	41 89 c0             	mov    %eax,%r8d
    a9e1:	8d 84 28 42 39 fa ff 	lea    -0x5c6be(%rax,%rbp,1),%eax
    a9e8:	45 21 f8             	and    %r15d,%r8d
    a9eb:	41 31 c8             	xor    %ecx,%r8d
    a9ee:	41 01 d0             	add    %edx,%r8d
    a9f1:	89 f2                	mov    %esi,%edx
    a9f3:	41 c1 c8 0c          	ror    $0xc,%r8d
    a9f7:	41 01 f0             	add    %esi,%r8d
    a9fa:	45 31 c7             	xor    %r8d,%r15d
    a9fd:	44 31 c2             	xor    %r8d,%edx
    aa00:	41 01 c7             	add    %eax,%r15d
    aa03:	8b 44 24 08          	mov    0x8(%rsp),%eax
    aa07:	41 c1 c7 04          	rol    $0x4,%r15d
    aa0b:	45 01 c7             	add    %r8d,%r15d
    aa0e:	8d 84 01 81 f6 71 87 	lea    -0x788e097f(%rcx,%rax,1),%eax
    aa15:	44 89 c1             	mov    %r8d,%ecx
    aa18:	44 31 fa             	xor    %r15d,%edx
    aa1b:	44 31 f9             	xor    %r15d,%ecx
    aa1e:	01 c2                	add    %eax,%edx
    aa20:	8b 44 24 10          	mov    0x10(%rsp),%eax
    aa24:	c1 c2 0b             	rol    $0xb,%edx
    aa27:	44 01 fa             	add    %r15d,%edx
    aa2a:	8d 84 06 22 61 9d 6d 	lea    0x6d9d6122(%rsi,%rax,1),%eax
    aa31:	44 89 fe             	mov    %r15d,%esi
    aa34:	31 d1                	xor    %edx,%ecx
    aa36:	31 d6                	xor    %edx,%esi
    aa38:	01 c1                	add    %eax,%ecx
    aa3a:	89 f0                	mov    %esi,%eax
    aa3c:	43 8d b4 20 0c 38 e5 	lea    -0x21ac7f4(%r8,%r12,1),%esi
    aa43:	fd 
    aa44:	c1 c1 10             	rol    $0x10,%ecx
    aa47:	47 8d 84 0f 44 ea be 	lea    -0x5b4115bc(%r15,%r9,1),%r8d
    aa4e:	a4 
    aa4f:	44 8b 3c 24          	mov    (%rsp),%r15d
    aa53:	01 d1                	add    %edx,%ecx
    aa55:	31 c8                	xor    %ecx,%eax
    aa57:	01 f0                	add    %esi,%eax
    aa59:	89 d6                	mov    %edx,%esi
    aa5b:	42 8d 94 3a a9 cf de 	lea    0x4bdecfa9(%rdx,%r15,1),%edx
    aa62:	4b 
    aa63:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
    aa68:	c1 c8 09             	ror    $0x9,%eax
    aa6b:	31 ce                	xor    %ecx,%esi
    aa6d:	01 c8                	add    %ecx,%eax
    aa6f:	31 c6                	xor    %eax,%esi
    aa71:	44 01 c6             	add    %r8d,%esi
    aa74:	41 89 c8             	mov    %ecx,%r8d
    aa77:	42 8d 8c 29 60 4b bb 	lea    -0x944b4a0(%rcx,%r13,1),%ecx
    aa7e:	f6 
    aa7f:	c1 c6 04             	rol    $0x4,%esi
    aa82:	41 31 c0             	xor    %eax,%r8d
    aa85:	01 c6                	add    %eax,%esi
    aa87:	41 31 f0             	xor    %esi,%r8d
    aa8a:	41 01 d0             	add    %edx,%r8d
    aa8d:	89 c2                	mov    %eax,%edx
    aa8f:	42 8d 84 10 70 bc bf 	lea    -0x41404390(%rax,%r10,1),%eax
    aa96:	be 
    aa97:	41 c1 c0 0b          	rol    $0xb,%r8d
    aa9b:	31 f2                	xor    %esi,%edx
    aa9d:	41 01 f0             	add    %esi,%r8d
    aaa0:	44 31 c2             	xor    %r8d,%edx
    aaa3:	01 ca                	add    %ecx,%edx
    aaa5:	89 f1                	mov    %esi,%ecx
    aaa7:	42 8d b4 3e c6 7e 9b 	lea    0x289b7ec6(%rsi,%r15,1),%esi
    aaae:	28 
    aaaf:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    aab4:	c1 c2 10             	rol    $0x10,%edx
    aab7:	44 31 c1             	xor    %r8d,%ecx
    aaba:	44 01 c2             	add    %r8d,%edx
    aabd:	31 d1                	xor    %edx,%ecx
    aabf:	01 c1                	add    %eax,%ecx
    aac1:	44 89 c0             	mov    %r8d,%eax
    aac4:	47 8d 84 30 fa 27 a1 	lea    -0x155ed806(%r8,%r14,1),%r8d
    aacb:	ea 
    aacc:	c1 c9 09             	ror    $0x9,%ecx
    aacf:	31 d0                	xor    %edx,%eax
    aad1:	01 d1                	add    %edx,%ecx
    aad3:	31 c8                	xor    %ecx,%eax
    aad5:	01 c6                	add    %eax,%esi
    aad7:	89 d0                	mov    %edx,%eax
    aad9:	42 8d 94 1a 85 30 ef 	lea    -0x2b10cf7b(%rdx,%r11,1),%edx
    aae0:	d4 
    aae1:	c1 c6 04             	rol    $0x4,%esi
    aae4:	31 c8                	xor    %ecx,%eax
    aae6:	01 ce                	add    %ecx,%esi
    aae8:	31 f0                	xor    %esi,%eax
    aaea:	44 01 c0             	add    %r8d,%eax
    aaed:	41 89 c8             	mov    %ecx,%r8d
    aaf0:	42 8d 8c 39 05 1d 88 	lea    0x4881d05(%rcx,%r15,1),%ecx
    aaf7:	04 
    aaf8:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    aafd:	c1 c0 0b             	rol    $0xb,%eax
    ab00:	41 31 f0             	xor    %esi,%r8d
    ab03:	01 f0                	add    %esi,%eax
    ab05:	41 31 c0             	xor    %eax,%r8d
    ab08:	41 01 d0             	add    %edx,%r8d
    ab0b:	89 f2                	mov    %esi,%edx
    ab0d:	42 8d b4 3e 39 d0 d4 	lea    -0x262b2fc7(%rsi,%r15,1),%esi
    ab14:	d9 
    ab15:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
    ab1a:	41 c1 c0 10          	rol    $0x10,%r8d
    ab1e:	31 c2                	xor    %eax,%edx
    ab20:	41 01 c0             	add    %eax,%r8d
    ab23:	44 31 c2             	xor    %r8d,%edx
    ab26:	01 d1                	add    %edx,%ecx
    ab28:	89 c2                	mov    %eax,%edx
    ab2a:	8d 84 18 e5 99 db e6 	lea    -0x1924661b(%rax,%rbx,1),%eax
    ab31:	c1 c9 09             	ror    $0x9,%ecx
    ab34:	44 31 c2             	xor    %r8d,%edx
    ab37:	44 01 c1             	add    %r8d,%ecx
    ab3a:	31 ca                	xor    %ecx,%edx
    ab3c:	01 f2                	add    %esi,%edx
    ab3e:	44 89 c6             	mov    %r8d,%esi
    ab41:	47 8d 84 38 f8 7c a2 	lea    0x1fa27cf8(%r8,%r15,1),%r8d
    ab48:	1f 
    ab49:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    ab4e:	c1 c2 04             	rol    $0x4,%edx
    ab51:	31 ce                	xor    %ecx,%esi
    ab53:	01 ca                	add    %ecx,%edx
    ab55:	31 d6                	xor    %edx,%esi
    ab57:	01 c6                	add    %eax,%esi
    ab59:	89 c8                	mov    %ecx,%eax
    ab5b:	42 8d 8c 39 65 56 ac 	lea    -0x3b53a99b(%rcx,%r15,1),%ecx
    ab62:	c4 
    ab63:	c1 c6 0b             	rol    $0xb,%esi
    ab66:	31 d0                	xor    %edx,%eax
    ab68:	01 d6                	add    %edx,%esi
    ab6a:	31 f0                	xor    %esi,%eax
    ab6c:	41 01 c0             	add    %eax,%r8d
    ab6f:	89 d0                	mov    %edx,%eax
    ab71:	42 8d 94 32 44 22 29 	lea    -0xbd6ddbc(%rdx,%r14,1),%edx
    ab78:	f4 
    ab79:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    ab7e:	41 c1 c0 10          	rol    $0x10,%r8d
    ab82:	31 f0                	xor    %esi,%eax
    ab84:	41 01 f0             	add    %esi,%r8d
    ab87:	44 31 c0             	xor    %r8d,%eax
    ab8a:	01 c1                	add    %eax,%ecx
    ab8c:	89 f0                	mov    %esi,%eax
    ab8e:	42 8d b4 2e 97 ff 2a 	lea    0x432aff97(%rsi,%r13,1),%esi
    ab95:	43 
    ab96:	c1 c9 09             	ror    $0x9,%ecx
    ab99:	f7 d0                	not    %eax
    ab9b:	44 01 c1             	add    %r8d,%ecx
    ab9e:	09 c8                	or     %ecx,%eax
    aba0:	44 31 c0             	xor    %r8d,%eax
    aba3:	01 d0                	add    %edx,%eax
    aba5:	44 89 c2             	mov    %r8d,%edx
    aba8:	47 8d 84 20 a7 23 94 	lea    -0x546bdc59(%r8,%r12,1),%r8d
    abaf:	ab 
    abb0:	c1 c0 06             	rol    $0x6,%eax
    abb3:	f7 d2                	not    %edx
    abb5:	01 c8                	add    %ecx,%eax
    abb7:	09 c2                	or     %eax,%edx
    abb9:	31 ca                	xor    %ecx,%edx
    abbb:	01 f2                	add    %esi,%edx
    abbd:	89 ce                	mov    %ecx,%esi
    abbf:	8d 8c 29 39 a0 93 fc 	lea    -0x36c5fc7(%rcx,%rbp,1),%ecx
    abc6:	c1 c2 0a             	rol    $0xa,%edx
    abc9:	f7 d6                	not    %esi
    abcb:	01 c2                	add    %eax,%edx
    abcd:	09 d6                	or     %edx,%esi
    abcf:	31 c6                	xor    %eax,%esi
    abd1:	44 01 c6             	add    %r8d,%esi
    abd4:	41 89 c0             	mov    %eax,%r8d
    abd7:	8d 84 18 c3 59 5b 65 	lea    0x655b59c3(%rax,%rbx,1),%eax
    abde:	8b 1c 24             	mov    (%rsp),%ebx
    abe1:	c1 c6 0f             	rol    $0xf,%esi
    abe4:	41 f7 d0             	not    %r8d
    abe7:	01 d6                	add    %edx,%esi
    abe9:	41 09 f0             	or     %esi,%r8d
    abec:	89 f5                	mov    %esi,%ebp
    abee:	41 31 d0             	xor    %edx,%r8d
    abf1:	f7 d5                	not    %ebp
    abf3:	41 01 c8             	add    %ecx,%r8d
    abf6:	89 d1                	mov    %edx,%ecx
    abf8:	42 8d 94 1a 92 cc 0c 	lea    -0x70f3336e(%rdx,%r11,1),%edx
    abff:	8f 
    ac00:	44 8b 5c 24 14       	mov    0x14(%rsp),%r11d
    ac05:	41 c1 c8 0b          	ror    $0xb,%r8d
    ac09:	f7 d1                	not    %ecx
    ac0b:	41 01 f0             	add    %esi,%r8d
    ac0e:	44 09 c1             	or     %r8d,%ecx
    ac11:	31 f1                	xor    %esi,%ecx
    ac13:	42 8d b4 16 7d f4 ef 	lea    -0x100b83(%rsi,%r10,1),%esi
    ac1a:	ff 
    ac1b:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
    ac20:	01 c1                	add    %eax,%ecx
    ac22:	89 e8                	mov    %ebp,%eax
    ac24:	c1 c1 06             	rol    $0x6,%ecx
    ac27:	44 01 c1             	add    %r8d,%ecx
    ac2a:	09 c8                	or     %ecx,%eax
    ac2c:	44 31 c0             	xor    %r8d,%eax
    ac2f:	01 d0                	add    %edx,%eax
    ac31:	44 89 c2             	mov    %r8d,%edx
    ac34:	47 8d 84 08 d1 5d 84 	lea    -0x7a7ba22f(%r8,%r9,1),%r8d
    ac3b:	85 
    ac3c:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
    ac41:	c1 c0 0a             	rol    $0xa,%eax
    ac44:	f7 d2                	not    %edx
    ac46:	01 c8                	add    %ecx,%eax
    ac48:	09 c2                	or     %eax,%edx
    ac4a:	31 ca                	xor    %ecx,%edx
    ac4c:	01 f2                	add    %esi,%edx
    ac4e:	89 ce                	mov    %ecx,%esi
    ac50:	42 8d 8c 11 4f 7e a8 	lea    0x6fa87e4f(%rcx,%r10,1),%ecx
    ac57:	6f 
    ac58:	c1 c2 0f             	rol    $0xf,%edx
    ac5b:	f7 d6                	not    %esi
    ac5d:	01 c2                	add    %eax,%edx
    ac5f:	09 d6                	or     %edx,%esi
    ac61:	31 c6                	xor    %eax,%esi
    ac63:	44 01 c6             	add    %r8d,%esi
    ac66:	41 89 c0             	mov    %eax,%r8d
    ac69:	42 8d 84 30 e0 e6 2c 	lea    -0x1d31920(%rax,%r14,1),%eax
    ac70:	fe 
    ac71:	c1 ce 0b             	ror    $0xb,%esi
    ac74:	41 f7 d0             	not    %r8d
    ac77:	01 d6                	add    %edx,%esi
    ac79:	41 09 f0             	or     %esi,%r8d
    ac7c:	41 31 d0             	xor    %edx,%r8d
    ac7f:	41 01 c8             	add    %ecx,%r8d
    ac82:	89 d1                	mov    %edx,%ecx
    ac84:	42 8d 94 0a 14 43 01 	lea    -0x5cfebcec(%rdx,%r9,1),%edx
    ac8b:	a3 
    ac8c:	41 c1 c0 06          	rol    $0x6,%r8d
    ac90:	f7 d1                	not    %ecx
    ac92:	41 01 f0             	add    %esi,%r8d
    ac95:	44 09 c1             	or     %r8d,%ecx
    ac98:	31 f1                	xor    %esi,%ecx
    ac9a:	01 c1                	add    %eax,%ecx
    ac9c:	89 f0                	mov    %esi,%eax
    ac9e:	42 8d b4 1e a1 11 08 	lea    0x4e0811a1(%rsi,%r11,1),%esi
    aca5:	4e 
    aca6:	c1 c1 0a             	rol    $0xa,%ecx
    aca9:	f7 d0                	not    %eax
    acab:	44 01 c1             	add    %r8d,%ecx
    acae:	09 c8                	or     %ecx,%eax
    acb0:	44 31 c0             	xor    %r8d,%eax
    acb3:	01 d0                	add    %edx,%eax
    acb5:	44 89 c2             	mov    %r8d,%edx
    acb8:	45 8d 84 18 82 7e 53 	lea    -0x8ac817e(%r8,%rbx,1),%r8d
    acbf:	f7 
    acc0:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    acc4:	c1 c0 0f             	rol    $0xf,%eax
    acc7:	f7 d2                	not    %edx
    acc9:	01 c8                	add    %ecx,%eax
    accb:	09 c2                	or     %eax,%edx
    accd:	31 ca                	xor    %ecx,%edx
    accf:	01 d6                	add    %edx,%esi
    acd1:	89 ca                	mov    %ecx,%edx
    acd3:	8d 8c 19 35 f2 3a bd 	lea    -0x42c50dcb(%rcx,%rbx,1),%ecx
    acda:	c1 ce 0b             	ror    $0xb,%esi
    acdd:	f7 d2                	not    %edx
    acdf:	01 c6                	add    %eax,%esi
    ace1:	09 f2                	or     %esi,%edx
    ace3:	31 c2                	xor    %eax,%edx
    ace5:	44 01 c2             	add    %r8d,%edx
    ace8:	41 89 c0             	mov    %eax,%r8d
    aceb:	42 8d 84 38 bb d2 d7 	lea    0x2ad7d2bb(%rax,%r15,1),%eax
    acf2:	2a 
    acf3:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    acf8:	c1 c2 06             	rol    $0x6,%edx
    acfb:	41 f7 d0             	not    %r8d
    acfe:	01 f2                	add    %esi,%edx
    ad00:	41 09 d0             	or     %edx,%r8d
    ad03:	89 54 24 60          	mov    %edx,0x60(%rsp)
    ad07:	41 31 f0             	xor    %esi,%r8d
    ad0a:	44 01 c1             	add    %r8d,%ecx
    ad0d:	41 89 f0             	mov    %esi,%r8d
    ad10:	42 8d b4 3e 91 d3 86 	lea    -0x14792c6f(%rsi,%r15,1),%esi
    ad17:	eb 
    ad18:	c1 c1 0a             	rol    $0xa,%ecx
    ad1b:	41 f7 d0             	not    %r8d
    ad1e:	01 d1                	add    %edx,%ecx
    ad20:	41 09 c8             	or     %ecx,%r8d
    ad23:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
    ad27:	41 31 d0             	xor    %edx,%r8d
    ad2a:	44 01 c0             	add    %r8d,%eax
    ad2d:	41 89 d0             	mov    %edx,%r8d
    ad30:	c1 c0 0f             	rol    $0xf,%eax
    ad33:	41 f7 d0             	not    %r8d
    ad36:	01 c8                	add    %ecx,%eax
    ad38:	41 09 c0             	or     %eax,%r8d
    ad3b:	89 44 24 68          	mov    %eax,0x68(%rsp)
    ad3f:	41 31 c8             	xor    %ecx,%r8d
    ad42:	44 01 c6             	add    %r8d,%esi
    ad45:	c1 ce 0b             	ror    $0xb,%esi
    ad48:	01 c6                	add    %eax,%esi
    ad4a:	89 74 24 64          	mov    %esi,0x64(%rsp)
    ad4e:	03 57 08             	add    0x8(%rdi),%edx
    ad51:	03 77 0c             	add    0xc(%rdi),%esi
    ad54:	03 47 10             	add    0x10(%rdi),%eax
    ad57:	89 57 08             	mov    %edx,0x8(%rdi)
    ad5a:	03 4f 14             	add    0x14(%rdi),%ecx
    ad5d:	89 77 0c             	mov    %esi,0xc(%rdi)
    ad60:	be 50 00 00 00       	mov    $0x50,%esi
    ad65:	89 47 10             	mov    %eax,0x10(%rdi)
    ad68:	89 4f 14             	mov    %ecx,0x14(%rdi)
    ad6b:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    ad70:	e8 bb a4 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    ad75:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    ad7a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ad81:	00 00 
    ad83:	75 14                	jne    ad99 <mbedtls_internal_md5_process+0x809>
    ad85:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    ad8c:	31 c0                	xor    %eax,%eax
    ad8e:	5b                   	pop    %rbx
    ad8f:	5d                   	pop    %rbp
    ad90:	41 5c                	pop    %r12
    ad92:	41 5d                	pop    %r13
    ad94:	41 5e                	pop    %r14
    ad96:	41 5f                	pop    %r15
    ad98:	c3                   	retq   
    ad99:	e8 c2 84 ff ff       	callq  3260 <__stack_chk_fail@plt>
    ad9e:	66 90                	xchg   %ax,%ax

000000000000ada0 <mbedtls_md5_update.part.0>:
    ada0:	41 56                	push   %r14
    ada2:	41 55                	push   %r13
    ada4:	41 54                	push   %r12
    ada6:	49 89 fc             	mov    %rdi,%r12
    ada9:	55                   	push   %rbp
    adaa:	48 89 f5             	mov    %rsi,%rbp
    adad:	53                   	push   %rbx
    adae:	8b 07                	mov    (%rdi),%eax
    adb0:	48 89 d3             	mov    %rdx,%rbx
    adb3:	ba 40 00 00 00       	mov    $0x40,%edx
    adb8:	41 89 c5             	mov    %eax,%r13d
    adbb:	41 83 e5 3f          	and    $0x3f,%r13d
    adbf:	44 29 ea             	sub    %r13d,%edx
    adc2:	01 d8                	add    %ebx,%eax
    adc4:	89 07                	mov    %eax,(%rdi)
    adc6:	41 89 d6             	mov    %edx,%r14d
    adc9:	73 04                	jae    adcf <mbedtls_md5_update.part.0+0x2f>
    adcb:	83 47 04 01          	addl   $0x1,0x4(%rdi)
    adcf:	45 85 ed             	test   %r13d,%r13d
    add2:	74 05                	je     add9 <mbedtls_md5_update.part.0+0x39>
    add4:	49 39 de             	cmp    %rbx,%r14
    add7:	76 37                	jbe    ae10 <mbedtls_md5_update.part.0+0x70>
    add9:	48 83 fb 3f          	cmp    $0x3f,%rbx
    addd:	77 17                	ja     adf6 <mbedtls_md5_update.part.0+0x56>
    addf:	eb 7f                	jmp    ae60 <mbedtls_md5_update.part.0+0xc0>
    ade1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ade8:	48 83 eb 40          	sub    $0x40,%rbx
    adec:	48 83 c5 40          	add    $0x40,%rbp
    adf0:	48 83 fb 3f          	cmp    $0x3f,%rbx
    adf4:	76 6a                	jbe    ae60 <mbedtls_md5_update.part.0+0xc0>
    adf6:	48 89 ee             	mov    %rbp,%rsi
    adf9:	4c 89 e7             	mov    %r12,%rdi
    adfc:	e8 8f f7 ff ff       	callq  a590 <mbedtls_internal_md5_process>
    ae01:	85 c0                	test   %eax,%eax
    ae03:	74 e3                	je     ade8 <mbedtls_md5_update.part.0+0x48>
    ae05:	5b                   	pop    %rbx
    ae06:	5d                   	pop    %rbp
    ae07:	41 5c                	pop    %r12
    ae09:	41 5d                	pop    %r13
    ae0b:	41 5e                	pop    %r14
    ae0d:	c3                   	retq   
    ae0e:	66 90                	xchg   %ax,%ax
    ae10:	4d 8d 44 24 18       	lea    0x18(%r12),%r8
    ae15:	4d 01 c5             	add    %r8,%r13
    ae18:	83 fa 08             	cmp    $0x8,%edx
    ae1b:	0f 83 87 00 00 00    	jae    aea8 <mbedtls_md5_update.part.0+0x108>
    ae21:	f6 c2 04             	test   $0x4,%dl
    ae24:	0f 85 19 01 00 00    	jne    af43 <mbedtls_md5_update.part.0+0x1a3>
    ae2a:	85 d2                	test   %edx,%edx
    ae2c:	74 11                	je     ae3f <mbedtls_md5_update.part.0+0x9f>
    ae2e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    ae32:	83 e2 02             	and    $0x2,%edx
    ae35:	41 88 45 00          	mov    %al,0x0(%r13)
    ae39:	0f 85 30 01 00 00    	jne    af6f <mbedtls_md5_update.part.0+0x1cf>
    ae3f:	4c 89 c6             	mov    %r8,%rsi
    ae42:	4c 89 e7             	mov    %r12,%rdi
    ae45:	e8 46 f7 ff ff       	callq  a590 <mbedtls_internal_md5_process>
    ae4a:	85 c0                	test   %eax,%eax
    ae4c:	75 b7                	jne    ae05 <mbedtls_md5_update.part.0+0x65>
    ae4e:	4c 01 f5             	add    %r14,%rbp
    ae51:	4c 29 f3             	sub    %r14,%rbx
    ae54:	45 31 ed             	xor    %r13d,%r13d
    ae57:	eb 80                	jmp    add9 <mbedtls_md5_update.part.0+0x39>
    ae59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ae60:	31 c0                	xor    %eax,%eax
    ae62:	48 85 db             	test   %rbx,%rbx
    ae65:	74 9e                	je     ae05 <mbedtls_md5_update.part.0+0x65>
    ae67:	4b 8d 4c 2c 18       	lea    0x18(%r12,%r13,1),%rcx
    ae6c:	89 d8                	mov    %ebx,%eax
    ae6e:	83 fb 08             	cmp    $0x8,%ebx
    ae71:	0f 83 7e 00 00 00    	jae    aef5 <mbedtls_md5_update.part.0+0x155>
    ae77:	83 e3 04             	and    $0x4,%ebx
    ae7a:	0f 85 d9 00 00 00    	jne    af59 <mbedtls_md5_update.part.0+0x1b9>
    ae80:	85 c0                	test   %eax,%eax
    ae82:	74 16                	je     ae9a <mbedtls_md5_update.part.0+0xfa>
    ae84:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
    ae88:	88 11                	mov    %dl,(%rcx)
    ae8a:	a8 02                	test   $0x2,%al
    ae8c:	74 0c                	je     ae9a <mbedtls_md5_update.part.0+0xfa>
    ae8e:	89 c2                	mov    %eax,%edx
    ae90:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
    ae95:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    ae9a:	31 c0                	xor    %eax,%eax
    ae9c:	5b                   	pop    %rbx
    ae9d:	5d                   	pop    %rbp
    ae9e:	41 5c                	pop    %r12
    aea0:	41 5d                	pop    %r13
    aea2:	41 5e                	pop    %r14
    aea4:	c3                   	retq   
    aea5:	0f 1f 00             	nopl   (%rax)
    aea8:	48 8b 45 00          	mov    0x0(%rbp),%rax
    aeac:	49 8d 75 08          	lea    0x8(%r13),%rsi
    aeb0:	49 89 e9             	mov    %rbp,%r9
    aeb3:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    aeb7:	49 89 45 00          	mov    %rax,0x0(%r13)
    aebb:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
    aec0:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
    aec5:	49 29 f5             	sub    %rsi,%r13
    aec8:	44 01 ea             	add    %r13d,%edx
    aecb:	4d 29 e9             	sub    %r13,%r9
    aece:	83 e2 f8             	and    $0xfffffff8,%edx
    aed1:	83 fa 08             	cmp    $0x8,%edx
    aed4:	0f 82 65 ff ff ff    	jb     ae3f <mbedtls_md5_update.part.0+0x9f>
    aeda:	83 e2 f8             	and    $0xfffffff8,%edx
    aedd:	31 c0                	xor    %eax,%eax
    aedf:	89 c1                	mov    %eax,%ecx
    aee1:	83 c0 08             	add    $0x8,%eax
    aee4:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
    aee8:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    aeec:	39 d0                	cmp    %edx,%eax
    aeee:	72 ef                	jb     aedf <mbedtls_md5_update.part.0+0x13f>
    aef0:	e9 4a ff ff ff       	jmpq   ae3f <mbedtls_md5_update.part.0+0x9f>
    aef5:	48 8b 45 00          	mov    0x0(%rbp),%rax
    aef9:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    aefd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    af01:	48 89 01             	mov    %rax,(%rcx)
    af04:	89 d8                	mov    %ebx,%eax
    af06:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
    af0b:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    af10:	48 29 f1             	sub    %rsi,%rcx
    af13:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
    af16:	48 29 cd             	sub    %rcx,%rbp
    af19:	83 e0 f8             	and    $0xfffffff8,%eax
    af1c:	83 f8 08             	cmp    $0x8,%eax
    af1f:	0f 82 75 ff ff ff    	jb     ae9a <mbedtls_md5_update.part.0+0xfa>
    af25:	83 e0 f8             	and    $0xfffffff8,%eax
    af28:	31 d2                	xor    %edx,%edx
    af2a:	89 d1                	mov    %edx,%ecx
    af2c:	83 c2 08             	add    $0x8,%edx
    af2f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
    af34:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    af38:	39 c2                	cmp    %eax,%edx
    af3a:	72 ee                	jb     af2a <mbedtls_md5_update.part.0+0x18a>
    af3c:	31 c0                	xor    %eax,%eax
    af3e:	e9 59 ff ff ff       	jmpq   ae9c <mbedtls_md5_update.part.0+0xfc>
    af43:	8b 45 00             	mov    0x0(%rbp),%eax
    af46:	41 89 45 00          	mov    %eax,0x0(%r13)
    af4a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
    af4f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
    af54:	e9 e6 fe ff ff       	jmpq   ae3f <mbedtls_md5_update.part.0+0x9f>
    af59:	8b 55 00             	mov    0x0(%rbp),%edx
    af5c:	89 11                	mov    %edx,(%rcx)
    af5e:	89 c2                	mov    %eax,%edx
    af60:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
    af64:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    af68:	31 c0                	xor    %eax,%eax
    af6a:	e9 2d ff ff ff       	jmpq   ae9c <mbedtls_md5_update.part.0+0xfc>
    af6f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
    af75:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
    af7b:	e9 bf fe ff ff       	jmpq   ae3f <mbedtls_md5_update.part.0+0x9f>

000000000000af80 <mbedtls_md5_update>:
    af80:	f3 0f 1e fa          	endbr64 
    af84:	48 85 d2             	test   %rdx,%rdx
    af87:	74 07                	je     af90 <mbedtls_md5_update+0x10>
    af89:	e9 12 fe ff ff       	jmpq   ada0 <mbedtls_md5_update.part.0>
    af8e:	66 90                	xchg   %ax,%ax
    af90:	31 c0                	xor    %eax,%eax
    af92:	c3                   	retq   
    af93:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    af9a:	00 00 00 00 
    af9e:	66 90                	xchg   %ax,%ax

000000000000afa0 <mbedtls_md5_finish>:
    afa0:	f3 0f 1e fa          	endbr64 
    afa4:	41 54                	push   %r12
    afa6:	4c 8d 67 18          	lea    0x18(%rdi),%r12
    afaa:	55                   	push   %rbp
    afab:	48 89 f5             	mov    %rsi,%rbp
    afae:	53                   	push   %rbx
    afaf:	8b 07                	mov    (%rdi),%eax
    afb1:	48 89 fb             	mov    %rdi,%rbx
    afb4:	83 e0 3f             	and    $0x3f,%eax
    afb7:	8d 48 01             	lea    0x1(%rax),%ecx
    afba:	c6 44 07 18 80       	movb   $0x80,0x18(%rdi,%rax,1)
    afbf:	89 c8                	mov    %ecx,%eax
    afc1:	4c 01 e0             	add    %r12,%rax
    afc4:	83 f9 38             	cmp    $0x38,%ecx
    afc7:	77 57                	ja     b020 <mbedtls_md5_finish+0x80>
    afc9:	ba 38 00 00 00       	mov    $0x38,%edx
    afce:	31 ff                	xor    %edi,%edi
    afd0:	29 ca                	sub    %ecx,%edx
    afd2:	83 fa 08             	cmp    $0x8,%edx
    afd5:	72 79                	jb     b050 <mbedtls_md5_finish+0xb0>
    afd7:	89 d1                	mov    %edx,%ecx
    afd9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    afe0:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
    afe7:	00 00 
    afe9:	48 8d 48 08          	lea    0x8(%rax),%rcx
    afed:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    aff1:	48 29 c8             	sub    %rcx,%rax
    aff4:	01 c2                	add    %eax,%edx
    aff6:	83 e2 f8             	and    $0xfffffff8,%edx
    aff9:	83 fa 08             	cmp    $0x8,%edx
    affc:	0f 82 8b 00 00 00    	jb     b08d <mbedtls_md5_finish+0xed>
    b002:	83 e2 f8             	and    $0xfffffff8,%edx
    b005:	31 c0                	xor    %eax,%eax
    b007:	89 c6                	mov    %eax,%esi
    b009:	83 c0 08             	add    $0x8,%eax
    b00c:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
    b010:	39 d0                	cmp    %edx,%eax
    b012:	72 f3                	jb     b007 <mbedtls_md5_finish+0x67>
    b014:	eb 77                	jmp    b08d <mbedtls_md5_finish+0xed>
    b016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b01d:	00 00 00 
    b020:	ba 40 00 00 00       	mov    $0x40,%edx
    b025:	29 ca                	sub    %ecx,%edx
    b027:	89 d1                	mov    %edx,%ecx
    b029:	74 0f                	je     b03a <mbedtls_md5_finish+0x9a>
    b02b:	31 d2                	xor    %edx,%edx
    b02d:	89 d6                	mov    %edx,%esi
    b02f:	83 c2 01             	add    $0x1,%edx
    b032:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
    b036:	39 ca                	cmp    %ecx,%edx
    b038:	72 f3                	jb     b02d <mbedtls_md5_finish+0x8d>
    b03a:	4c 89 e6             	mov    %r12,%rsi
    b03d:	48 89 df             	mov    %rbx,%rdi
    b040:	e8 4b f5 ff ff       	callq  a590 <mbedtls_internal_md5_process>
    b045:	85 c0                	test   %eax,%eax
    b047:	74 27                	je     b070 <mbedtls_md5_finish+0xd0>
    b049:	5b                   	pop    %rbx
    b04a:	5d                   	pop    %rbp
    b04b:	41 5c                	pop    %r12
    b04d:	c3                   	retq   
    b04e:	66 90                	xchg   %ax,%ax
    b050:	f6 c2 04             	test   $0x4,%dl
    b053:	0f 85 7f 00 00 00    	jne    b0d8 <mbedtls_md5_finish+0x138>
    b059:	85 d2                	test   %edx,%edx
    b05b:	74 30                	je     b08d <mbedtls_md5_finish+0xed>
    b05d:	c6 00 00             	movb   $0x0,(%rax)
    b060:	f6 c2 02             	test   $0x2,%dl
    b063:	74 28                	je     b08d <mbedtls_md5_finish+0xed>
    b065:	31 c9                	xor    %ecx,%ecx
    b067:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
    b06c:	eb 1f                	jmp    b08d <mbedtls_md5_finish+0xed>
    b06e:	66 90                	xchg   %ax,%ax
    b070:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b074:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
    b078:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
    b07f:	00 00 
    b081:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
    b087:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
    b08d:	8b 13                	mov    (%rbx),%edx
    b08f:	8b 43 04             	mov    0x4(%rbx),%eax
    b092:	4c 89 e6             	mov    %r12,%rsi
    b095:	48 89 df             	mov    %rbx,%rdi
    b098:	89 d1                	mov    %edx,%ecx
    b09a:	c1 e0 03             	shl    $0x3,%eax
    b09d:	c1 e9 1d             	shr    $0x1d,%ecx
    b0a0:	c1 e2 03             	shl    $0x3,%edx
    b0a3:	09 c8                	or     %ecx,%eax
    b0a5:	89 53 50             	mov    %edx,0x50(%rbx)
    b0a8:	89 43 54             	mov    %eax,0x54(%rbx)
    b0ab:	e8 e0 f4 ff ff       	callq  a590 <mbedtls_internal_md5_process>
    b0b0:	85 c0                	test   %eax,%eax
    b0b2:	75 95                	jne    b049 <mbedtls_md5_finish+0xa9>
    b0b4:	8b 53 08             	mov    0x8(%rbx),%edx
    b0b7:	89 55 00             	mov    %edx,0x0(%rbp)
    b0ba:	8b 53 0c             	mov    0xc(%rbx),%edx
    b0bd:	89 55 04             	mov    %edx,0x4(%rbp)
    b0c0:	8b 53 10             	mov    0x10(%rbx),%edx
    b0c3:	89 55 08             	mov    %edx,0x8(%rbp)
    b0c6:	8b 53 14             	mov    0x14(%rbx),%edx
    b0c9:	5b                   	pop    %rbx
    b0ca:	89 55 0c             	mov    %edx,0xc(%rbp)
    b0cd:	5d                   	pop    %rbp
    b0ce:	41 5c                	pop    %r12
    b0d0:	c3                   	retq   
    b0d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b0d8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    b0de:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
    b0e5:	00 
    b0e6:	eb a5                	jmp    b08d <mbedtls_md5_finish+0xed>
    b0e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b0ef:	00 

000000000000b0f0 <mbedtls_md5>:
    b0f0:	f3 0f 1e fa          	endbr64 
    b0f4:	41 55                	push   %r13
    b0f6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b0fa:	41 54                	push   %r12
    b0fc:	55                   	push   %rbp
    b0fd:	48 89 d5             	mov    %rdx,%rbp
    b100:	48 83 ec 60          	sub    $0x60,%rsp
    b104:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b10b:	00 00 
    b10d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    b112:	31 c0                	xor    %eax,%eax
    b114:	49 89 e5             	mov    %rsp,%r13
    b117:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b11e:	00 
    b11f:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    b126:	ab cd ef 
    b129:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b12e:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    b135:	54 32 10 
    b138:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    b13d:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    b142:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    b147:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
    b14c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    b151:	48 85 f6             	test   %rsi,%rsi
    b154:	74 15                	je     b16b <mbedtls_md5+0x7b>
    b156:	48 89 f2             	mov    %rsi,%rdx
    b159:	48 89 fe             	mov    %rdi,%rsi
    b15c:	4c 89 ef             	mov    %r13,%rdi
    b15f:	e8 3c fc ff ff       	callq  ada0 <mbedtls_md5_update.part.0>
    b164:	41 89 c4             	mov    %eax,%r12d
    b167:	85 c0                	test   %eax,%eax
    b169:	75 0e                	jne    b179 <mbedtls_md5+0x89>
    b16b:	48 89 ee             	mov    %rbp,%rsi
    b16e:	4c 89 ef             	mov    %r13,%rdi
    b171:	e8 2a fe ff ff       	callq  afa0 <mbedtls_md5_finish>
    b176:	41 89 c4             	mov    %eax,%r12d
    b179:	be 58 00 00 00       	mov    $0x58,%esi
    b17e:	4c 89 ef             	mov    %r13,%rdi
    b181:	e8 aa a0 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    b186:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    b18b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b192:	00 00 
    b194:	75 0d                	jne    b1a3 <mbedtls_md5+0xb3>
    b196:	48 83 c4 60          	add    $0x60,%rsp
    b19a:	44 89 e0             	mov    %r12d,%eax
    b19d:	5d                   	pop    %rbp
    b19e:	41 5c                	pop    %r12
    b1a0:	41 5d                	pop    %r13
    b1a2:	c3                   	retq   
    b1a3:	e8 b8 80 ff ff       	callq  3260 <__stack_chk_fail@plt>
    b1a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b1af:	00 

000000000000b1b0 <mbedtls_md5_self_test>:
    b1b0:	f3 0f 1e fa          	endbr64 
    b1b4:	41 57                	push   %r15
    b1b6:	41 56                	push   %r14
    b1b8:	45 31 f6             	xor    %r14d,%r14d
    b1bb:	41 55                	push   %r13
    b1bd:	4c 8d 2d bc 7d 01 00 	lea    0x17dbc(%rip),%r13        # 22f80 <md5_test_buf>
    b1c4:	41 54                	push   %r12
    b1c6:	4c 8d 25 f3 7c 01 00 	lea    0x17cf3(%rip),%r12        # 22ec0 <md5_test_sum>
    b1cd:	55                   	push   %rbp
    b1ce:	89 fd                	mov    %edi,%ebp
    b1d0:	53                   	push   %rbx
    b1d1:	31 db                	xor    %ebx,%ebx
    b1d3:	48 83 ec 28          	sub    $0x28,%rsp
    b1d7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b1de:	00 00 
    b1e0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b1e5:	31 c0                	xor    %eax,%eax
    b1e7:	49 89 e7             	mov    %rsp,%r15
    b1ea:	85 ed                	test   %ebp,%ebp
    b1ec:	75 61                	jne    b24f <mbedtls_md5_self_test+0x9f>
    b1ee:	66 90                	xchg   %ax,%ax
    b1f0:	4c 89 f6             	mov    %r14,%rsi
    b1f3:	4c 89 fa             	mov    %r15,%rdx
    b1f6:	4c 89 ef             	mov    %r13,%rdi
    b1f9:	e8 f2 fe ff ff       	callq  b0f0 <mbedtls_md5>
    b1fe:	41 89 c6             	mov    %eax,%r14d
    b201:	85 c0                	test   %eax,%eax
    b203:	75 71                	jne    b276 <mbedtls_md5_self_test+0xc6>
    b205:	48 89 d8             	mov    %rbx,%rax
    b208:	49 8b 17             	mov    (%r15),%rdx
    b20b:	49 8b 77 08          	mov    0x8(%r15),%rsi
    b20f:	48 c1 e0 04          	shl    $0x4,%rax
    b213:	4c 01 e0             	add    %r12,%rax
    b216:	48 33 70 08          	xor    0x8(%rax),%rsi
    b21a:	48 33 10             	xor    (%rax),%rdx
    b21d:	48 09 d6             	or     %rdx,%rsi
    b220:	75 4e                	jne    b270 <mbedtls_md5_self_test+0xc0>
    b222:	85 ed                	test   %ebp,%ebp
    b224:	74 0c                	je     b232 <mbedtls_md5_self_test+0x82>
    b226:	48 8d 3d b5 7f 01 00 	lea    0x17fb5(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    b22d:	e8 ce 7f ff ff       	callq  3200 <puts@plt>
    b232:	48 83 c3 01          	add    $0x1,%rbx
    b236:	49 83 c5 51          	add    $0x51,%r13
    b23a:	48 83 fb 07          	cmp    $0x7,%rbx
    b23e:	74 60                	je     b2a0 <mbedtls_md5_self_test+0xf0>
    b240:	48 8d 05 f9 7c 01 00 	lea    0x17cf9(%rip),%rax        # 22f40 <md5_test_buflen>
    b247:	4c 8b 34 d8          	mov    (%rax,%rbx,8),%r14
    b24b:	85 ed                	test   %ebp,%ebp
    b24d:	74 a1                	je     b1f0 <mbedtls_md5_self_test+0x40>
    b24f:	8d 53 01             	lea    0x1(%rbx),%edx
    b252:	48 8d 35 3d 7c 01 00 	lea    0x17c3d(%rip),%rsi        # 22e96 <supported_digests+0x56>
    b259:	bf 01 00 00 00       	mov    $0x1,%edi
    b25e:	31 c0                	xor    %eax,%eax
    b260:	e8 db 80 ff ff       	callq  3340 <__printf_chk@plt>
    b265:	eb 89                	jmp    b1f0 <mbedtls_md5_self_test+0x40>
    b267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b26e:	00 00 
    b270:	41 be 01 00 00 00    	mov    $0x1,%r14d
    b276:	85 ed                	test   %ebp,%ebp
    b278:	75 46                	jne    b2c0 <mbedtls_md5_self_test+0x110>
    b27a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b27f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b286:	00 00 
    b288:	75 44                	jne    b2ce <mbedtls_md5_self_test+0x11e>
    b28a:	48 83 c4 28          	add    $0x28,%rsp
    b28e:	44 89 f0             	mov    %r14d,%eax
    b291:	5b                   	pop    %rbx
    b292:	5d                   	pop    %rbp
    b293:	41 5c                	pop    %r12
    b295:	41 5d                	pop    %r13
    b297:	41 5e                	pop    %r14
    b299:	41 5f                	pop    %r15
    b29b:	c3                   	retq   
    b29c:	0f 1f 40 00          	nopl   0x0(%rax)
    b2a0:	85 ed                	test   %ebp,%ebp
    b2a2:	75 0c                	jne    b2b0 <mbedtls_md5_self_test+0x100>
    b2a4:	45 31 f6             	xor    %r14d,%r14d
    b2a7:	eb d1                	jmp    b27a <mbedtls_md5_self_test+0xca>
    b2a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b2b0:	bf 0a 00 00 00       	mov    $0xa,%edi
    b2b5:	e8 36 7f ff ff       	callq  31f0 <putchar@plt>
    b2ba:	eb be                	jmp    b27a <mbedtls_md5_self_test+0xca>
    b2bc:	0f 1f 40 00          	nopl   0x0(%rax)
    b2c0:	48 8d 3d f6 87 01 00 	lea    0x187f6(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    b2c7:	e8 34 7f ff ff       	callq  3200 <puts@plt>
    b2cc:	eb ac                	jmp    b27a <mbedtls_md5_self_test+0xca>
    b2ce:	e8 8d 7f ff ff       	callq  3260 <__stack_chk_fail@plt>
    b2d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b2da:	00 00 00 
    b2dd:	0f 1f 00             	nopl   (%rax)

000000000000b2e0 <unwrap>:
    b2e0:	41 57                	push   %r15
    b2e2:	41 56                	push   %r14
    b2e4:	41 55                	push   %r13
    b2e6:	41 54                	push   %r12
    b2e8:	55                   	push   %rbp
    b2e9:	53                   	push   %rbx
    b2ea:	48 83 ec 78          	sub    $0x78,%rsp
    b2ee:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    b2f3:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    b2f8:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    b2fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b304:	00 00 
    b306:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    b30b:	31 c0                	xor    %eax,%eax
    b30d:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    b314:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    b318:	48 83 fa 02          	cmp    $0x2,%rdx
    b31c:	0f 84 35 01 00 00    	je     b457 <unwrap+0x177>
    b322:	48 8d 5c 00 fa       	lea    -0x6(%rax,%rax,1),%rbx
    b327:	48 8b 06             	mov    (%rsi),%rax
    b32a:	4d 89 c6             	mov    %r8,%r14
    b32d:	48 83 c6 08          	add    $0x8,%rsi
    b331:	4c 8d 3c d5 f8 ff ff 	lea    -0x8(,%rdx,8),%r15
    b338:	ff 
    b339:	4c 89 c7             	mov    %r8,%rdi
    b33c:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    b341:	49 89 cc             	mov    %rcx,%r12
    b344:	48 89 01             	mov    %rax,(%rcx)
    b347:	4c 89 fa             	mov    %r15,%rdx
    b34a:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    b34f:	e8 fc 7f ff ff       	callq  3350 <memmove@plt>
    b354:	4b 8d 44 3e f8       	lea    -0x8(%r14,%r15,1),%rax
    b359:	4c 8d 74 24 38       	lea    0x38(%rsp),%r14
    b35e:	48 89 c5             	mov    %rax,%rbp
    b361:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b366:	4c 89 f0             	mov    %r14,%rax
    b369:	4c 8d 7c 24 50       	lea    0x50(%rsp),%r15
    b36e:	49 89 ee             	mov    %rbp,%r14
    b371:	48 89 c5             	mov    %rax,%rbp
    b374:	0f 1f 40 00          	nopl   0x0(%rax)
    b378:	4c 89 e0             	mov    %r12,%rax
    b37b:	b9 38 00 00 00       	mov    $0x38,%ecx
    b380:	48 89 da             	mov    %rbx,%rdx
    b383:	48 d3 ea             	shr    %cl,%rdx
    b386:	83 e9 08             	sub    $0x8,%ecx
    b389:	30 10                	xor    %dl,(%rax)
    b38b:	48 83 c0 01          	add    $0x1,%rax
    b38f:	83 f9 f8             	cmp    $0xfffffff8,%ecx
    b392:	75 ec                	jne    b380 <unwrap+0xa0>
    b394:	49 8b 04 24          	mov    (%r12),%rax
    b398:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    b39d:	49 89 e8             	mov    %rbp,%r8
    b3a0:	4c 89 e9             	mov    %r13,%rcx
    b3a3:	ba 10 00 00 00       	mov    $0x10,%edx
    b3a8:	4c 89 fe             	mov    %r15,%rsi
    b3ab:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    b3b0:	49 8b 06             	mov    (%r14),%rax
    b3b3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    b3b8:	e8 a3 ac ff ff       	callq  6060 <mbedtls_cipher_update>
    b3bd:	85 c0                	test   %eax,%eax
    b3bf:	75 7b                	jne    b43c <unwrap+0x15c>
    b3c1:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    b3c6:	4c 39 74 24 10       	cmp    %r14,0x10(%rsp)
    b3cb:	49 89 14 24          	mov    %rdx,(%r12)
    b3cf:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    b3d4:	49 89 16             	mov    %rdx,(%r14)
    b3d7:	49 8d 56 f8          	lea    -0x8(%r14),%rdx
    b3db:	48 0f 44 54 24 18    	cmove  0x18(%rsp),%rdx
    b3e1:	49 89 d6             	mov    %rdx,%r14
    b3e4:	48 83 eb 01          	sub    $0x1,%rbx
    b3e8:	75 8e                	jne    b378 <unwrap+0x98>
    b3ea:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    b3ef:	89 c1                	mov    %eax,%ecx
    b3f1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b3f6:	48 89 38             	mov    %rdi,(%rax)
    b3f9:	be 10 00 00 00       	mov    $0x10,%esi
    b3fe:	4c 89 ff             	mov    %r15,%rdi
    b401:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    b405:	e8 26 9e ff ff       	callq  5230 <mbedtls_platform_zeroize>
    b40a:	be 10 00 00 00       	mov    $0x10,%esi
    b40f:	4c 89 ef             	mov    %r13,%rdi
    b412:	e8 19 9e ff ff       	callq  5230 <mbedtls_platform_zeroize>
    b417:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    b41b:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    b420:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b427:	00 00 
    b429:	75 33                	jne    b45e <unwrap+0x17e>
    b42b:	48 83 c4 78          	add    $0x78,%rsp
    b42f:	89 c8                	mov    %ecx,%eax
    b431:	5b                   	pop    %rbx
    b432:	5d                   	pop    %rbp
    b433:	41 5c                	pop    %r12
    b435:	41 5d                	pop    %r13
    b437:	41 5e                	pop    %r14
    b439:	41 5f                	pop    %r15
    b43b:	c3                   	retq   
    b43c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b441:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    b446:	31 f6                	xor    %esi,%esi
    b448:	89 44 24 08          	mov    %eax,0x8(%rsp)
    b44c:	e8 3f 7e ff ff       	callq  3290 <memset@plt>
    b451:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    b455:	eb a2                	jmp    b3f9 <unwrap+0x119>
    b457:	b9 00 9f ff ff       	mov    $0xffff9f00,%ecx
    b45c:	eb bd                	jmp    b41b <unwrap+0x13b>
    b45e:	e8 fd 7d ff ff       	callq  3260 <__stack_chk_fail@plt>
    b463:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b46a:	00 00 00 00 
    b46e:	66 90                	xchg   %ax,%ax

000000000000b470 <mbedtls_nist_kw_init>:
    b470:	f3 0f 1e fa          	endbr64 
    b474:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    b47b:	48 89 f9             	mov    %rdi,%rcx
    b47e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    b482:	31 c0                	xor    %eax,%eax
    b484:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
    b48b:	00 
    b48c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    b490:	48 29 f9             	sub    %rdi,%rcx
    b493:	83 c1 60             	add    $0x60,%ecx
    b496:	c1 e9 03             	shr    $0x3,%ecx
    b499:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    b49c:	c3                   	retq   
    b49d:	0f 1f 00             	nopl   (%rax)

000000000000b4a0 <mbedtls_nist_kw_setkey>:
    b4a0:	f3 0f 1e fa          	endbr64 
    b4a4:	41 57                	push   %r15
    b4a6:	41 89 f7             	mov    %esi,%r15d
    b4a9:	89 ce                	mov    %ecx,%esi
    b4ab:	41 56                	push   %r14
    b4ad:	49 89 d6             	mov    %rdx,%r14
    b4b0:	ba 01 00 00 00       	mov    $0x1,%edx
    b4b5:	41 55                	push   %r13
    b4b7:	41 89 cd             	mov    %ecx,%r13d
    b4ba:	41 54                	push   %r12
    b4bc:	49 89 fc             	mov    %rdi,%r12
    b4bf:	44 89 ff             	mov    %r15d,%edi
    b4c2:	55                   	push   %rbp
    b4c3:	53                   	push   %rbx
    b4c4:	44 89 c3             	mov    %r8d,%ebx
    b4c7:	48 83 ec 08          	sub    $0x8,%rsp
    b4cb:	e8 10 a7 ff ff       	callq  5be0 <mbedtls_cipher_info_from_values>
    b4d0:	48 85 c0             	test   %rax,%rax
    b4d3:	74 6b                	je     b540 <mbedtls_nist_kw_setkey+0xa0>
    b4d5:	83 78 20 10          	cmpl   $0x10,0x20(%rax)
    b4d9:	48 89 c5             	mov    %rax,%rbp
    b4dc:	75 62                	jne    b540 <mbedtls_nist_kw_setkey+0xa0>
    b4de:	41 83 ff 02          	cmp    $0x2,%r15d
    b4e2:	75 54                	jne    b538 <mbedtls_nist_kw_setkey+0x98>
    b4e4:	4c 89 e7             	mov    %r12,%rdi
    b4e7:	e8 74 a7 ff ff       	callq  5c60 <mbedtls_cipher_free>
    b4ec:	48 89 ee             	mov    %rbp,%rsi
    b4ef:	4c 89 e7             	mov    %r12,%rdi
    b4f2:	e8 c9 a7 ff ff       	callq  5cc0 <mbedtls_cipher_setup>
    b4f7:	85 c0                	test   %eax,%eax
    b4f9:	74 15                	je     b510 <mbedtls_nist_kw_setkey+0x70>
    b4fb:	48 83 c4 08          	add    $0x8,%rsp
    b4ff:	5b                   	pop    %rbx
    b500:	5d                   	pop    %rbp
    b501:	41 5c                	pop    %r12
    b503:	41 5d                	pop    %r13
    b505:	41 5e                	pop    %r14
    b507:	41 5f                	pop    %r15
    b509:	c3                   	retq   
    b50a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b510:	31 c9                	xor    %ecx,%ecx
    b512:	85 db                	test   %ebx,%ebx
    b514:	44 89 ea             	mov    %r13d,%edx
    b517:	4c 89 f6             	mov    %r14,%rsi
    b51a:	0f 95 c1             	setne  %cl
    b51d:	48 83 c4 08          	add    $0x8,%rsp
    b521:	4c 89 e7             	mov    %r12,%rdi
    b524:	5b                   	pop    %rbx
    b525:	5d                   	pop    %rbp
    b526:	41 5c                	pop    %r12
    b528:	41 5d                	pop    %r13
    b52a:	41 5e                	pop    %r14
    b52c:	41 5f                	pop    %r15
    b52e:	e9 2d a8 ff ff       	jmpq   5d60 <mbedtls_cipher_setkey>
    b533:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b538:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    b53d:	eb bc                	jmp    b4fb <mbedtls_nist_kw_setkey+0x5b>
    b53f:	90                   	nop
    b540:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    b545:	eb b4                	jmp    b4fb <mbedtls_nist_kw_setkey+0x5b>
    b547:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b54e:	00 00 

000000000000b550 <mbedtls_nist_kw_free>:
    b550:	f3 0f 1e fa          	endbr64 
    b554:	55                   	push   %rbp
    b555:	48 89 fd             	mov    %rdi,%rbp
    b558:	e8 03 a7 ff ff       	callq  5c60 <mbedtls_cipher_free>
    b55d:	48 89 ef             	mov    %rbp,%rdi
    b560:	be 60 00 00 00       	mov    $0x60,%esi
    b565:	5d                   	pop    %rbp
    b566:	e9 c5 9c ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    b56b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b570 <mbedtls_nist_kw_wrap>:
    b570:	f3 0f 1e fa          	endbr64 
    b574:	41 57                	push   %r15
    b576:	41 56                	push   %r14
    b578:	41 55                	push   %r13
    b57a:	41 89 f5             	mov    %esi,%r13d
    b57d:	48 89 d6             	mov    %rdx,%rsi
    b580:	41 54                	push   %r12
    b582:	4d 89 c4             	mov    %r8,%r12
    b585:	55                   	push   %rbp
    b586:	48 89 fd             	mov    %rdi,%rbp
    b589:	53                   	push   %rbx
    b58a:	48 89 cb             	mov    %rcx,%rbx
    b58d:	48 83 ec 78          	sub    $0x78,%rsp
    b591:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    b596:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
    b59d:	00 00 
    b59f:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
    b5a4:	31 ff                	xor    %edi,%edi
    b5a6:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    b5ad:	45 85 ed             	test   %r13d,%r13d
    b5b0:	0f 85 32 01 00 00    	jne    b6e8 <mbedtls_nist_kw_wrap+0x178>
    b5b6:	48 8d 41 08          	lea    0x8(%rcx),%rax
    b5ba:	48 3b 84 24 b0 00 00 	cmp    0xb0(%rsp),%rax
    b5c1:	00 
    b5c2:	0f 87 88 02 00 00    	ja     b850 <mbedtls_nist_kw_wrap+0x2e0>
    b5c8:	48 b8 e8 ff ff ff ff 	movabs $0x1ffffffffffffe8,%rax
    b5cf:	ff ff 01 
    b5d2:	48 8d 51 f0          	lea    -0x10(%rcx),%rdx
    b5d6:	48 39 c2             	cmp    %rax,%rdx
    b5d9:	0f 87 71 02 00 00    	ja     b850 <mbedtls_nist_kw_wrap+0x2e0>
    b5df:	f6 c1 07             	test   $0x7,%cl
    b5e2:	0f 85 68 02 00 00    	jne    b850 <mbedtls_nist_kw_wrap+0x2e0>
    b5e8:	48 b8 a6 a6 a6 a6 a6 	movabs $0xa6a6a6a6a6a6a6a6,%rax
    b5ef:	a6 a6 a6 
    b5f2:	48 89 ca             	mov    %rcx,%rdx
    b5f5:	48 c1 eb 03          	shr    $0x3,%rbx
    b5f9:	49 89 00             	mov    %rax,(%r8)
    b5fc:	49 8d 40 08          	lea    0x8(%r8),%rax
    b600:	48 89 c7             	mov    %rax,%rdi
    b603:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b608:	e8 43 7d ff ff       	callq  3350 <memmove@plt>
    b60d:	48 8d 43 01          	lea    0x1(%rbx),%rax
    b611:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
    b615:	48 8d 74 12 fa       	lea    -0x6(%rdx,%rdx,1),%rsi
    b61a:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    b61f:	48 c1 e0 03          	shl    $0x3,%rax
    b623:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    b628:	bb 01 00 00 00       	mov    $0x1,%ebx
    b62d:	4d 89 e7             	mov    %r12,%r15
    b630:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b635:	4c 01 e0             	add    %r12,%rax
    b638:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
    b63d:	49 89 dc             	mov    %rbx,%r12
    b640:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b645:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
    b64a:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    b64f:	4c 89 cb             	mov    %r9,%rbx
    b652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b658:	49 8b 07             	mov    (%r15),%rax
    b65b:	4c 89 e9             	mov    %r13,%rcx
    b65e:	ba 10 00 00 00       	mov    $0x10,%edx
    b663:	4c 89 f6             	mov    %r14,%rsi
    b666:	48 89 ef             	mov    %rbp,%rdi
    b669:	4c 89 04 24          	mov    %r8,(%rsp)
    b66d:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    b672:	48 8b 03             	mov    (%rbx),%rax
    b675:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    b67a:	e8 e1 a9 ff ff       	callq  6060 <mbedtls_cipher_update>
    b67f:	85 c0                	test   %eax,%eax
    b681:	0f 85 b2 01 00 00    	jne    b839 <mbedtls_nist_kw_wrap+0x2c9>
    b687:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    b68c:	4c 8b 04 24          	mov    (%rsp),%r8
    b690:	b9 38 00 00 00       	mov    $0x38,%ecx
    b695:	49 89 07             	mov    %rax,(%r15)
    b698:	4c 89 f8             	mov    %r15,%rax
    b69b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b6a0:	4c 89 e2             	mov    %r12,%rdx
    b6a3:	48 d3 ea             	shr    %cl,%rdx
    b6a6:	83 e9 08             	sub    $0x8,%ecx
    b6a9:	30 10                	xor    %dl,(%rax)
    b6ab:	48 83 c0 01          	add    $0x1,%rax
    b6af:	83 f9 f8             	cmp    $0xfffffff8,%ecx
    b6b2:	75 ec                	jne    b6a0 <mbedtls_nist_kw_wrap+0x130>
    b6b4:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    b6b9:	48 83 c3 08          	add    $0x8,%rbx
    b6bd:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    b6c1:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
    b6c6:	49 8d 44 24 01       	lea    0x1(%r12),%rax
    b6cb:	48 0f 46 5c 24 08    	cmovbe 0x8(%rsp),%rbx
    b6d1:	4c 39 64 24 10       	cmp    %r12,0x10(%rsp)
    b6d6:	0f 84 ea 00 00 00    	je     b7c6 <mbedtls_nist_kw_wrap+0x256>
    b6dc:	49 89 c4             	mov    %rax,%r12
    b6df:	e9 74 ff ff ff       	jmpq   b658 <mbedtls_nist_kw_wrap+0xe8>
    b6e4:	0f 1f 40 00          	nopl   0x0(%rax)
    b6e8:	49 89 cf             	mov    %rcx,%r15
    b6eb:	49 89 ce             	mov    %rcx,%r14
    b6ee:	41 83 e7 07          	and    $0x7,%r15d
    b6f2:	74 0f                	je     b703 <mbedtls_nist_kw_wrap+0x193>
    b6f4:	b8 08 00 00 00       	mov    $0x8,%eax
    b6f9:	4c 29 f8             	sub    %r15,%rax
    b6fc:	49 89 c7             	mov    %rax,%r15
    b6ff:	4c 8d 34 01          	lea    (%rcx,%rax,1),%r14
    b703:	49 8d 46 08          	lea    0x8(%r14),%rax
    b707:	48 3b 84 24 b0 00 00 	cmp    0xb0(%rsp),%rax
    b70e:	00 
    b70f:	0f 87 3b 01 00 00    	ja     b850 <mbedtls_nist_kw_wrap+0x2e0>
    b715:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
    b719:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b71e:	48 39 c2             	cmp    %rax,%rdx
    b721:	0f 87 29 01 00 00    	ja     b850 <mbedtls_nist_kw_wrap+0x2e0>
    b727:	89 d8                	mov    %ebx,%eax
    b729:	41 c7 04 24 a6 59 59 	movl   $0xa65959a6,(%r12)
    b730:	a6 
    b731:	48 89 da             	mov    %rbx,%rdx
    b734:	0f c8                	bswap  %eax
    b736:	41 89 44 24 04       	mov    %eax,0x4(%r12)
    b73b:	49 8d 44 24 08       	lea    0x8(%r12),%rax
    b740:	48 89 c7             	mov    %rax,%rdi
    b743:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b748:	e8 c3 7b ff ff       	callq  3310 <memcpy@plt>
    b74d:	49 8d 4c 1c 08       	lea    0x8(%r12,%rbx,1),%rcx
    b752:	44 89 fe             	mov    %r15d,%esi
    b755:	45 85 ff             	test   %r15d,%r15d
    b758:	74 0f                	je     b769 <mbedtls_nist_kw_wrap+0x1f9>
    b75a:	31 c0                	xor    %eax,%eax
    b75c:	89 c2                	mov    %eax,%edx
    b75e:	83 c0 01             	add    $0x1,%eax
    b761:	c6 04 11 00          	movb   $0x0,(%rcx,%rdx,1)
    b765:	39 f0                	cmp    %esi,%eax
    b767:	72 f3                	jb     b75c <mbedtls_nist_kw_wrap+0x1ec>
    b769:	49 c1 ee 03          	shr    $0x3,%r14
    b76d:	49 8d 46 01          	lea    0x1(%r14),%rax
    b771:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    b778:	00 
    b779:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    b77e:	41 83 fd 01          	cmp    $0x1,%r13d
    b782:	0f 85 8a 00 00 00    	jne    b812 <mbedtls_nist_kw_wrap+0x2a2>
    b788:	48 83 fb 08          	cmp    $0x8,%rbx
    b78c:	0f 87 80 00 00 00    	ja     b812 <mbedtls_nist_kw_wrap+0x2a2>
    b792:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
    b797:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
    b79c:	4c 89 e1             	mov    %r12,%rcx
    b79f:	48 89 ef             	mov    %rbp,%rdi
    b7a2:	f3 41 0f 6f 04 24    	movdqu (%r12),%xmm0
    b7a8:	ba 10 00 00 00       	mov    $0x10,%edx
    b7ad:	4c 89 f6             	mov    %r14,%rsi
    b7b0:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    b7b5:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    b7ba:	e8 a1 a8 ff ff       	callq  6060 <mbedtls_cipher_update>
    b7bf:	41 89 c7             	mov    %eax,%r15d
    b7c2:	85 c0                	test   %eax,%eax
    b7c4:	75 62                	jne    b828 <mbedtls_nist_kw_wrap+0x2b8>
    b7c6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b7cb:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    b7d0:	45 31 ff             	xor    %r15d,%r15d
    b7d3:	48 89 30             	mov    %rsi,(%rax)
    b7d6:	be 10 00 00 00       	mov    $0x10,%esi
    b7db:	4c 89 f7             	mov    %r14,%rdi
    b7de:	e8 4d 9a ff ff       	callq  5230 <mbedtls_platform_zeroize>
    b7e3:	be 10 00 00 00       	mov    $0x10,%esi
    b7e8:	4c 89 ef             	mov    %r13,%rdi
    b7eb:	e8 40 9a ff ff       	callq  5230 <mbedtls_platform_zeroize>
    b7f0:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    b7f5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b7fc:	00 00 
    b7fe:	75 6a                	jne    b86a <mbedtls_nist_kw_wrap+0x2fa>
    b800:	48 83 c4 78          	add    $0x78,%rsp
    b804:	44 89 f8             	mov    %r15d,%eax
    b807:	5b                   	pop    %rbx
    b808:	5d                   	pop    %rbp
    b809:	41 5c                	pop    %r12
    b80b:	41 5d                	pop    %r13
    b80d:	41 5e                	pop    %r14
    b80f:	41 5f                	pop    %r15
    b811:	c3                   	retq   
    b812:	48 83 f8 02          	cmp    $0x2,%rax
    b816:	77 40                	ja     b858 <mbedtls_nist_kw_wrap+0x2e8>
    b818:	41 bf 00 9f ff ff    	mov    $0xffff9f00,%r15d
    b81e:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
    b823:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    b828:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b82d:	31 f6                	xor    %esi,%esi
    b82f:	4c 89 e7             	mov    %r12,%rdi
    b832:	e8 59 7a ff ff       	callq  3290 <memset@plt>
    b837:	eb 9d                	jmp    b7d6 <mbedtls_nist_kw_wrap+0x266>
    b839:	4d 89 fc             	mov    %r15,%r12
    b83c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b841:	31 f6                	xor    %esi,%esi
    b843:	41 89 c7             	mov    %eax,%r15d
    b846:	4c 89 e7             	mov    %r12,%rdi
    b849:	e8 42 7a ff ff       	callq  3290 <memset@plt>
    b84e:	eb 86                	jmp    b7d6 <mbedtls_nist_kw_wrap+0x266>
    b850:	41 bf 00 9f ff ff    	mov    $0xffff9f00,%r15d
    b856:	eb 98                	jmp    b7f0 <mbedtls_nist_kw_wrap+0x280>
    b858:	4c 6b f0 06          	imul   $0x6,%rax,%r14
    b85c:	49 8d 76 fa          	lea    -0x6(%r14),%rsi
    b860:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    b865:	e9 b5 fd ff ff       	jmpq   b61f <mbedtls_nist_kw_wrap+0xaf>
    b86a:	e8 f1 79 ff ff       	callq  3260 <__stack_chk_fail@plt>
    b86f:	90                   	nop

000000000000b870 <mbedtls_nist_kw_unwrap>:
    b870:	f3 0f 1e fa          	endbr64 
    b874:	41 57                	push   %r15
    b876:	41 56                	push   %r14
    b878:	4c 8d 71 f8          	lea    -0x8(%rcx),%r14
    b87c:	41 55                	push   %r13
    b87e:	41 54                	push   %r12
    b880:	55                   	push   %rbp
    b881:	53                   	push   %rbx
    b882:	48 83 ec 48          	sub    $0x48,%rsp
    b886:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b88d:	00 00 
    b88f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    b894:	31 c0                	xor    %eax,%eax
    b896:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
    b89b:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    b8a2:	4c 3b b4 24 80 00 00 	cmp    0x80(%rsp),%r14
    b8a9:	00 
    b8aa:	0f 87 d8 02 00 00    	ja     bb88 <mbedtls_nist_kw_unwrap+0x318>
    b8b0:	49 89 d2             	mov    %rdx,%r10
    b8b3:	4d 89 c4             	mov    %r8,%r12
    b8b6:	4c 89 cd             	mov    %r9,%rbp
    b8b9:	85 f6                	test   %esi,%esi
    b8bb:	0f 85 bf 00 00 00    	jne    b980 <mbedtls_nist_kw_unwrap+0x110>
    b8c1:	48 b8 e8 ff ff ff ff 	movabs $0x1ffffffffffffe8,%rax
    b8c8:	ff ff 01 
    b8cb:	48 8d 51 e8          	lea    -0x18(%rcx),%rdx
    b8cf:	48 39 c2             	cmp    %rax,%rdx
    b8d2:	0f 87 b0 02 00 00    	ja     bb88 <mbedtls_nist_kw_unwrap+0x318>
    b8d8:	f6 c1 07             	test   $0x7,%cl
    b8db:	0f 85 a7 02 00 00    	jne    bb88 <mbedtls_nist_kw_unwrap+0x318>
    b8e1:	48 c1 e9 03          	shr    $0x3,%rcx
    b8e5:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    b8ea:	4c 89 d6             	mov    %r10,%rsi
    b8ed:	48 89 ca             	mov    %rcx,%rdx
    b8f0:	4c 89 e9             	mov    %r13,%rcx
    b8f3:	e8 e8 f9 ff ff       	callq  b2e0 <unwrap>
    b8f8:	41 89 c7             	mov    %eax,%r15d
    b8fb:	85 c0                	test   %eax,%eax
    b8fd:	0f 85 95 01 00 00    	jne    ba98 <mbedtls_nist_kw_unwrap+0x228>
    b903:	ba 08 00 00 00       	mov    $0x8,%edx
    b908:	4c 89 ee             	mov    %r13,%rsi
    b90b:	48 8d 3d 7e 7c 01 00 	lea    0x17c7e(%rip),%rdi        # 23590 <NIST_KW_ICV1>
    b912:	e8 19 ba ff ff       	callq  7330 <mbedtls_ct_memcmp>
    b917:	88 44 24 0e          	mov    %al,0xe(%rsp)
    b91b:	84 c0                	test   %al,%al
    b91d:	0f 85 dd 01 00 00    	jne    bb00 <mbedtls_nist_kw_unwrap+0x290>
    b923:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b928:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
    b92d:	be 01 00 00 00       	mov    $0x1,%esi
    b932:	e8 f9 98 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    b937:	48 8d 7c 24 0e       	lea    0xe(%rsp),%rdi
    b93c:	be 01 00 00 00       	mov    $0x1,%esi
    b941:	e8 ea 98 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    b946:	be 08 00 00 00       	mov    $0x8,%esi
    b94b:	4c 89 ef             	mov    %r13,%rdi
    b94e:	e8 dd 98 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    b953:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    b958:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b95f:	00 00 
    b961:	0f 85 2c 02 00 00    	jne    bb93 <mbedtls_nist_kw_unwrap+0x323>
    b967:	48 83 c4 48          	add    $0x48,%rsp
    b96b:	44 89 f8             	mov    %r15d,%eax
    b96e:	5b                   	pop    %rbx
    b96f:	5d                   	pop    %rbp
    b970:	41 5c                	pop    %r12
    b972:	41 5d                	pop    %r13
    b974:	41 5e                	pop    %r14
    b976:	41 5f                	pop    %r15
    b978:	c3                   	retq   
    b979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b980:	83 fe 01             	cmp    $0x1,%esi
    b983:	0f 85 37 01 00 00    	jne    bac0 <mbedtls_nist_kw_unwrap+0x250>
    b989:	48 8d 51 f0          	lea    -0x10(%rcx),%rdx
    b98d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    b992:	48 39 c2             	cmp    %rax,%rdx
    b995:	0f 87 ed 01 00 00    	ja     bb88 <mbedtls_nist_kw_unwrap+0x318>
    b99b:	48 89 cb             	mov    %rcx,%rbx
    b99e:	83 e3 07             	and    $0x7,%ebx
    b9a1:	0f 85 e1 01 00 00    	jne    bb88 <mbedtls_nist_kw_unwrap+0x318>
    b9a7:	48 83 f9 10          	cmp    $0x10,%rcx
    b9ab:	0f 84 1f 01 00 00    	je     bad0 <mbedtls_nist_kw_unwrap+0x260>
    b9b1:	48 89 ca             	mov    %rcx,%rdx
    b9b4:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    b9b9:	4c 89 d6             	mov    %r10,%rsi
    b9bc:	48 c1 ea 03          	shr    $0x3,%rdx
    b9c0:	4c 89 e9             	mov    %r13,%rcx
    b9c3:	e8 18 f9 ff ff       	callq  b2e0 <unwrap>
    b9c8:	41 89 c7             	mov    %eax,%r15d
    b9cb:	85 c0                	test   %eax,%eax
    b9cd:	0f 85 c5 00 00 00    	jne    ba98 <mbedtls_nist_kw_unwrap+0x228>
    b9d3:	ba 04 00 00 00       	mov    $0x4,%edx
    b9d8:	4c 89 ee             	mov    %r13,%rsi
    b9db:	48 8d 3d aa 7b 01 00 	lea    0x17baa(%rip),%rdi        # 2358c <NIST_KW_ICV2>
    b9e2:	e8 49 b9 ff ff       	callq  7330 <mbedtls_ct_memcmp>
    b9e7:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
    b9ec:	3c 01                	cmp    $0x1,%al
    b9ee:	45 19 ff             	sbb    %r15d,%r15d
    b9f1:	41 0f c9             	bswap  %r9d
    b9f4:	45 89 c9             	mov    %r9d,%r9d
    b9f7:	41 f7 d7             	not    %r15d
    b9fa:	4d 29 ce             	sub    %r9,%r14
    b9fd:	41 81 e7 00 9d ff ff 	and    $0xffff9d00,%r15d
    ba04:	49 83 fe 07          	cmp    $0x7,%r14
    ba08:	76 0a                	jbe    ba14 <mbedtls_nist_kw_unwrap+0x1a4>
    ba0a:	41 83 e6 07          	and    $0x7,%r14d
    ba0e:	41 bf 00 9d ff ff    	mov    $0xffff9d00,%r15d
    ba14:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    ba18:	b8 08 00 00 00       	mov    $0x8,%eax
    ba1d:	c6 44 24 0e 00       	movb   $0x0,0xe(%rsp)
    ba22:	31 c9                	xor    %ecx,%ecx
    ba24:	0f b6 7c 24 0f       	movzbl 0xf(%rsp),%edi
    ba29:	4c 29 f0             	sub    %r14,%rax
    ba2c:	45 31 d2             	xor    %r10d,%r10d
    ba2f:	45 31 db             	xor    %r11d,%r11d
    ba32:	4b 8d 34 04          	lea    (%r12,%r8,1),%rsi
    ba36:	eb 1a                	jmp    ba52 <mbedtls_nist_kw_unwrap+0x1e2>
    ba38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ba3f:	00 
    ba40:	48 83 c3 01          	add    $0x1,%rbx
    ba44:	09 d1                	or     %edx,%ecx
    ba46:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    ba4c:	48 83 fb 08          	cmp    $0x8,%rbx
    ba50:	74 1c                	je     ba6e <mbedtls_nist_kw_unwrap+0x1fe>
    ba52:	0f b6 54 1e f8       	movzbl -0x8(%rsi,%rbx,1),%edx
    ba57:	48 39 d8             	cmp    %rbx,%rax
    ba5a:	76 e4                	jbe    ba40 <mbedtls_nist_kw_unwrap+0x1d0>
    ba5c:	48 83 c3 01          	add    $0x1,%rbx
    ba60:	09 d7                	or     %edx,%edi
    ba62:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    ba68:	48 83 fb 08          	cmp    $0x8,%rbx
    ba6c:	75 e4                	jne    ba52 <mbedtls_nist_kw_unwrap+0x1e2>
    ba6e:	45 84 db             	test   %r11b,%r11b
    ba71:	0f 84 99 00 00 00    	je     bb10 <mbedtls_nist_kw_unwrap+0x2a0>
    ba77:	88 4c 24 0e          	mov    %cl,0xe(%rsp)
    ba7b:	45 84 d2             	test   %r10b,%r10b
    ba7e:	74 05                	je     ba85 <mbedtls_nist_kw_unwrap+0x215>
    ba80:	40 88 7c 24 0f       	mov    %dil,0xf(%rsp)
    ba85:	84 c9                	test   %cl,%cl
    ba87:	0f 84 8d 00 00 00    	je     bb1a <mbedtls_nist_kw_unwrap+0x2aa>
    ba8d:	41 bf 00 9d ff ff    	mov    $0xffff9d00,%r15d
    ba93:	eb 07                	jmp    ba9c <mbedtls_nist_kw_unwrap+0x22c>
    ba95:	0f 1f 00             	nopl   (%rax)
    ba98:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    ba9c:	4c 89 c2             	mov    %r8,%rdx
    ba9f:	31 f6                	xor    %esi,%esi
    baa1:	4c 89 e7             	mov    %r12,%rdi
    baa4:	e8 e7 77 ff ff       	callq  3290 <memset@plt>
    baa9:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    bab0:	00 
    bab1:	e9 72 fe ff ff       	jmpq   b928 <mbedtls_nist_kw_unwrap+0xb8>
    bab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    babd:	00 00 00 
    bac0:	45 31 c0             	xor    %r8d,%r8d
    bac3:	41 bf 80 9f ff ff    	mov    $0xffff9f80,%r15d
    bac9:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    bace:	eb cc                	jmp    ba9c <mbedtls_nist_kw_unwrap+0x22c>
    bad0:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    bad5:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bada:	ba 10 00 00 00       	mov    $0x10,%edx
    badf:	4c 89 d6             	mov    %r10,%rsi
    bae2:	4c 89 e9             	mov    %r13,%rcx
    bae5:	e8 76 a5 ff ff       	callq  6060 <mbedtls_cipher_update>
    baea:	41 89 c7             	mov    %eax,%r15d
    baed:	85 c0                	test   %eax,%eax
    baef:	74 5f                	je     bb50 <mbedtls_nist_kw_unwrap+0x2e0>
    baf1:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    baf5:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    bafa:	eb a0                	jmp    ba9c <mbedtls_nist_kw_unwrap+0x22c>
    bafc:	0f 1f 40 00          	nopl   0x0(%rax)
    bb00:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    bb04:	41 bf 00 9d ff ff    	mov    $0xffff9d00,%r15d
    bb0a:	eb 90                	jmp    ba9c <mbedtls_nist_kw_unwrap+0x22c>
    bb0c:	0f 1f 40 00          	nopl   0x0(%rax)
    bb10:	45 84 d2             	test   %r10b,%r10b
    bb13:	74 05                	je     bb1a <mbedtls_nist_kw_unwrap+0x2aa>
    bb15:	40 88 7c 24 0f       	mov    %dil,0xf(%rsp)
    bb1a:	45 85 ff             	test   %r15d,%r15d
    bb1d:	0f 85 79 ff ff ff    	jne    ba9c <mbedtls_nist_kw_unwrap+0x22c>
    bb23:	4d 01 cc             	add    %r9,%r12
    bb26:	44 89 f1             	mov    %r14d,%ecx
    bb29:	45 85 f6             	test   %r14d,%r14d
    bb2c:	74 10                	je     bb3e <mbedtls_nist_kw_unwrap+0x2ce>
    bb2e:	31 c0                	xor    %eax,%eax
    bb30:	89 c2                	mov    %eax,%edx
    bb32:	83 c0 01             	add    $0x1,%eax
    bb35:	41 c6 04 14 00       	movb   $0x0,(%r12,%rdx,1)
    bb3a:	39 c8                	cmp    %ecx,%eax
    bb3c:	72 f2                	jb     bb30 <mbedtls_nist_kw_unwrap+0x2c0>
    bb3e:	4c 89 4d 00          	mov    %r9,0x0(%rbp)
    bb42:	e9 e1 fd ff ff       	jmpq   b928 <mbedtls_nist_kw_unwrap+0xb8>
    bb47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bb4e:	00 00 
    bb50:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    bb55:	4c 89 ef             	mov    %r13,%rdi
    bb58:	be 10 00 00 00       	mov    $0x10,%esi
    bb5d:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    bb62:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bb67:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    bb6c:	49 89 04 24          	mov    %rax,(%r12)
    bb70:	e8 bb 96 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    bb75:	48 c7 45 00 08 00 00 	movq   $0x8,0x0(%rbp)
    bb7c:	00 
    bb7d:	e9 51 fe ff ff       	jmpq   b9d3 <mbedtls_nist_kw_unwrap+0x163>
    bb82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bb88:	41 bf 00 9f ff ff    	mov    $0xffff9f00,%r15d
    bb8e:	e9 c0 fd ff ff       	jmpq   b953 <mbedtls_nist_kw_unwrap+0xe3>
    bb93:	e8 c8 76 ff ff       	callq  3260 <__stack_chk_fail@plt>
    bb98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bb9f:	00 

000000000000bba0 <mbedtls_nist_kw_self_test>:
    bba0:	f3 0f 1e fa          	endbr64 
    bba4:	41 57                	push   %r15
    bba6:	b9 0c 00 00 00       	mov    $0xc,%ecx
    bbab:	41 56                	push   %r14
    bbad:	41 55                	push   %r13
    bbaf:	41 54                	push   %r12
    bbb1:	41 bc 10 00 00 00    	mov    $0x10,%r12d
    bbb7:	55                   	push   %rbp
    bbb8:	41 c1 e4 03          	shl    $0x3,%r12d
    bbbc:	53                   	push   %rbx
    bbbd:	31 db                	xor    %ebx,%ebx
    bbbf:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    bbc6:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    bbca:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    bbcf:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    bbd3:	48 89 ef             	mov    %rbp,%rdi
    bbd6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bbdd:	00 00 
    bbdf:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    bbe6:	00 
    bbe7:	31 c0                	xor    %eax,%eax
    bbe9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    bbec:	85 f6                	test   %esi,%esi
    bbee:	0f 85 55 01 00 00    	jne    bd49 <mbedtls_nist_kw_self_test+0x1a9>
    bbf4:	48 8d 05 25 79 01 00 	lea    0x17925(%rip),%rax        # 23520 <kw_key>
    bbfb:	44 89 e1             	mov    %r12d,%ecx
    bbfe:	be 02 00 00 00       	mov    $0x2,%esi
    bc03:	48 89 ef             	mov    %rbp,%rdi
    bc06:	4c 8d 34 d8          	lea    (%rax,%rbx,8),%r14
    bc0a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bc10:	4c 89 f2             	mov    %r14,%rdx
    bc13:	e8 88 f8 ff ff       	callq  b4a0 <mbedtls_nist_kw_setkey>
    bc18:	85 c0                	test   %eax,%eax
    bc1a:	0f 85 20 04 00 00    	jne    c040 <mbedtls_nist_kw_self_test+0x4a0>
    bc20:	48 8d 05 49 78 01 00 	lea    0x17849(%rip),%rax        # 23470 <kw_msg_len>
    bc27:	48 8d 0d 72 78 01 00 	lea    0x17872(%rip),%rcx        # 234a0 <kw_msg>
    bc2e:	31 f6                	xor    %esi,%esi
    bc30:	48 89 ef             	mov    %rbp,%rdi
    bc33:	4c 8b 2c 58          	mov    (%rax,%rbx,2),%r13
    bc37:	48 8d 04 9b          	lea    (%rbx,%rbx,4),%rax
    bc3b:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
    bc42:	00 
    bc43:	48 8d 14 41          	lea    (%rcx,%rax,2),%rdx
    bc47:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
    bc4c:	48 83 ec 08          	sub    $0x8,%rsp
    bc50:	4d 89 f8             	mov    %r15,%r8
    bc53:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    bc58:	4c 89 e9             	mov    %r13,%rcx
    bc5b:	49 89 c1             	mov    %rax,%r9
    bc5e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bc63:	6a 30                	pushq  $0x30
    bc65:	e8 06 f9 ff ff       	callq  b570 <mbedtls_nist_kw_wrap>
    bc6a:	5a                   	pop    %rdx
    bc6b:	59                   	pop    %rcx
    bc6c:	85 c0                	test   %eax,%eax
    bc6e:	0f 85 34 03 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    bc74:	48 8d 05 d5 77 01 00 	lea    0x177d5(%rip),%rax        # 23450 <kw_out_len>
    bc7b:	48 8b 14 58          	mov    (%rax,%rbx,2),%rdx
    bc7f:	48 3b 54 24 28       	cmp    0x28(%rsp),%rdx
    bc84:	0f 85 1e 03 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    bc8a:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
    bc8e:	48 8d 0d 2b 77 01 00 	lea    0x1772b(%rip),%rcx        # 233c0 <kw_res>
    bc95:	4c 89 ff             	mov    %r15,%rdi
    bc98:	48 8d 34 81          	lea    (%rcx,%rax,4),%rsi
    bc9c:	e8 ff 75 ff ff       	callq  32a0 <memcmp@plt>
    bca1:	85 c0                	test   %eax,%eax
    bca3:	0f 85 ff 02 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    bca9:	45 31 c0             	xor    %r8d,%r8d
    bcac:	44 89 e1             	mov    %r12d,%ecx
    bcaf:	4c 89 f2             	mov    %r14,%rdx
    bcb2:	be 02 00 00 00       	mov    $0x2,%esi
    bcb7:	48 89 ef             	mov    %rbp,%rdi
    bcba:	e8 e1 f7 ff ff       	callq  b4a0 <mbedtls_nist_kw_setkey>
    bcbf:	85 c0                	test   %eax,%eax
    bcc1:	0f 85 79 03 00 00    	jne    c040 <mbedtls_nist_kw_self_test+0x4a0>
    bcc7:	48 83 ec 08          	sub    $0x8,%rsp
    bccb:	4d 89 f8             	mov    %r15,%r8
    bcce:	4c 89 fa             	mov    %r15,%rdx
    bcd1:	31 f6                	xor    %esi,%esi
    bcd3:	6a 30                	pushq  $0x30
    bcd5:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    bcda:	48 89 ef             	mov    %rbp,%rdi
    bcdd:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    bce2:	e8 89 fb ff ff       	callq  b870 <mbedtls_nist_kw_unwrap>
    bce7:	41 5c                	pop    %r12
    bce9:	41 5e                	pop    %r14
    bceb:	85 c0                	test   %eax,%eax
    bced:	0f 85 15 03 00 00    	jne    c008 <mbedtls_nist_kw_self_test+0x468>
    bcf3:	4c 3b 6c 24 28       	cmp    0x28(%rsp),%r13
    bcf8:	0f 85 0a 03 00 00    	jne    c008 <mbedtls_nist_kw_self_test+0x468>
    bcfe:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    bd03:	4c 89 ea             	mov    %r13,%rdx
    bd06:	4c 89 ff             	mov    %r15,%rdi
    bd09:	e8 92 75 ff ff       	callq  32a0 <memcmp@plt>
    bd0e:	85 c0                	test   %eax,%eax
    bd10:	0f 85 f2 02 00 00    	jne    c008 <mbedtls_nist_kw_self_test+0x468>
    bd16:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
    bd1b:	45 85 db             	test   %r11d,%r11d
    bd1e:	0f 85 cc 01 00 00    	jne    bef0 <mbedtls_nist_kw_self_test+0x350>
    bd24:	48 83 c3 04          	add    $0x4,%rbx
    bd28:	48 83 fb 0c          	cmp    $0xc,%rbx
    bd2c:	74 3a                	je     bd68 <mbedtls_nist_kw_self_test+0x1c8>
    bd2e:	48 8d 05 4b 78 01 00 	lea    0x1784b(%rip),%rax        # 23580 <key_len>
    bd35:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    bd39:	44 8b 24 18          	mov    (%rax,%rbx,1),%r12d
    bd3d:	41 c1 e4 03          	shl    $0x3,%r12d
    bd41:	85 f6                	test   %esi,%esi
    bd43:	0f 84 ab fe ff ff    	je     bbf4 <mbedtls_nist_kw_self_test+0x54>
    bd49:	44 89 e2             	mov    %r12d,%edx
    bd4c:	48 8d 35 64 74 01 00 	lea    0x17464(%rip),%rsi        # 231b7 <md5_test_buf+0x237>
    bd53:	bf 01 00 00 00       	mov    $0x1,%edi
    bd58:	31 c0                	xor    %eax,%eax
    bd5a:	e8 e1 75 ff ff       	callq  3340 <__printf_chk@plt>
    bd5f:	e9 90 fe ff ff       	jmpq   bbf4 <mbedtls_nist_kw_self_test+0x54>
    bd64:	0f 1f 40 00          	nopl   0x0(%rax)
    bd68:	31 db                	xor    %ebx,%ebx
    bd6a:	41 bd 10 00 00 00    	mov    $0x10,%r13d
    bd70:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
    bd75:	41 c1 e5 03          	shl    $0x3,%r13d
    bd79:	48 c7 44 24 28 30 00 	movq   $0x30,0x28(%rsp)
    bd80:	00 00 
    bd82:	45 85 d2             	test   %r10d,%r10d
    bd85:	0f 85 dd 01 00 00    	jne    bf68 <mbedtls_nist_kw_self_test+0x3c8>
    bd8b:	49 89 d9             	mov    %rbx,%r9
    bd8e:	48 8d 05 cb 75 01 00 	lea    0x175cb(%rip),%rax        # 23360 <kwp_key>
    bd95:	44 89 e9             	mov    %r13d,%ecx
    bd98:	48 89 ef             	mov    %rbp,%rdi
    bd9b:	49 c1 e1 05          	shl    $0x5,%r9
    bd9f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bda5:	be 02 00 00 00       	mov    $0x2,%esi
    bdaa:	4e 8d 34 08          	lea    (%rax,%r9,1),%r14
    bdae:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    bdb3:	4c 89 f2             	mov    %r14,%rdx
    bdb6:	e8 e5 f6 ff ff       	callq  b4a0 <mbedtls_nist_kw_setkey>
    bdbb:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    bdc0:	85 c0                	test   %eax,%eax
    bdc2:	41 89 c0             	mov    %eax,%r8d
    bdc5:	0f 85 a5 02 00 00    	jne    c070 <mbedtls_nist_kw_self_test+0x4d0>
    bdcb:	48 8d 05 fe 74 01 00 	lea    0x174fe(%rip),%rax        # 232d0 <kwp_msg_len>
    bdd2:	49 29 d9             	sub    %rbx,%r9
    bdd5:	4d 89 f8             	mov    %r15,%r8
    bdd8:	48 89 ef             	mov    %rbp,%rdi
    bddb:	4c 8b 24 d8          	mov    (%rax,%rbx,8),%r12
    bddf:	48 8d 05 1a 75 01 00 	lea    0x1751a(%rip),%rax        # 23300 <kwp_msg>
    bde6:	48 83 ec 08          	sub    $0x8,%rsp
    bdea:	be 01 00 00 00       	mov    $0x1,%esi
    bdef:	4c 01 c8             	add    %r9,%rax
    bdf2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    bdf7:	4c 89 e1             	mov    %r12,%rcx
    bdfa:	48 89 c2             	mov    %rax,%rdx
    bdfd:	6a 30                	pushq  $0x30
    bdff:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    be04:	e8 67 f7 ff ff       	callq  b570 <mbedtls_nist_kw_wrap>
    be09:	41 58                	pop    %r8
    be0b:	41 59                	pop    %r9
    be0d:	85 c0                	test   %eax,%eax
    be0f:	0f 85 93 01 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    be15:	48 8d 05 04 74 01 00 	lea    0x17404(%rip),%rax        # 23220 <kwp_out_len>
    be1c:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    be20:	48 3b 54 24 28       	cmp    0x28(%rsp),%rdx
    be25:	0f 85 7d 01 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    be2b:	48 8d 34 5b          	lea    (%rbx,%rbx,2),%rsi
    be2f:	48 8d 05 0a 74 01 00 	lea    0x1740a(%rip),%rax        # 23240 <kwp_res>
    be36:	4c 89 ff             	mov    %r15,%rdi
    be39:	48 c1 e6 04          	shl    $0x4,%rsi
    be3d:	48 01 c6             	add    %rax,%rsi
    be40:	e8 5b 74 ff ff       	callq  32a0 <memcmp@plt>
    be45:	85 c0                	test   %eax,%eax
    be47:	0f 85 5b 01 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    be4d:	45 31 c0             	xor    %r8d,%r8d
    be50:	44 89 e9             	mov    %r13d,%ecx
    be53:	4c 89 f2             	mov    %r14,%rdx
    be56:	be 02 00 00 00       	mov    $0x2,%esi
    be5b:	48 89 ef             	mov    %rbp,%rdi
    be5e:	e8 3d f6 ff ff       	callq  b4a0 <mbedtls_nist_kw_setkey>
    be63:	41 89 c0             	mov    %eax,%r8d
    be66:	85 c0                	test   %eax,%eax
    be68:	0f 85 02 02 00 00    	jne    c070 <mbedtls_nist_kw_self_test+0x4d0>
    be6e:	48 83 ec 08          	sub    $0x8,%rsp
    be72:	be 01 00 00 00       	mov    $0x1,%esi
    be77:	4d 89 f8             	mov    %r15,%r8
    be7a:	4c 89 fa             	mov    %r15,%rdx
    be7d:	6a 30                	pushq  $0x30
    be7f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    be84:	48 89 ef             	mov    %rbp,%rdi
    be87:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    be8c:	e8 df f9 ff ff       	callq  b870 <mbedtls_nist_kw_unwrap>
    be91:	59                   	pop    %rcx
    be92:	5e                   	pop    %rsi
    be93:	85 c0                	test   %eax,%eax
    be95:	0f 85 0d 01 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    be9b:	4c 3b 64 24 28       	cmp    0x28(%rsp),%r12
    bea0:	0f 85 02 01 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    bea6:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    beab:	4c 89 e2             	mov    %r12,%rdx
    beae:	4c 89 ff             	mov    %r15,%rdi
    beb1:	e8 ea 73 ff ff       	callq  32a0 <memcmp@plt>
    beb6:	41 89 c0             	mov    %eax,%r8d
    beb9:	85 c0                	test   %eax,%eax
    bebb:	0f 85 e7 00 00 00    	jne    bfa8 <mbedtls_nist_kw_self_test+0x408>
    bec1:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    bec5:	85 d2                	test   %edx,%edx
    bec7:	0f 85 bb 00 00 00    	jne    bf88 <mbedtls_nist_kw_self_test+0x3e8>
    becd:	48 83 c3 01          	add    $0x1,%rbx
    bed1:	48 83 fb 03          	cmp    $0x3,%rbx
    bed5:	74 31                	je     bf08 <mbedtls_nist_kw_self_test+0x368>
    bed7:	48 8d 05 a2 76 01 00 	lea    0x176a2(%rip),%rax        # 23580 <key_len>
    bede:	44 8b 2c 98          	mov    (%rax,%rbx,4),%r13d
    bee2:	e9 89 fe ff ff       	jmpq   bd70 <mbedtls_nist_kw_self_test+0x1d0>
    bee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    beee:	00 00 
    bef0:	48 8d 3d ea 72 01 00 	lea    0x172ea(%rip),%rdi        # 231e1 <md5_test_buf+0x261>
    bef7:	e8 04 73 ff ff       	callq  3200 <puts@plt>
    befc:	e9 23 fe ff ff       	jmpq   bd24 <mbedtls_nist_kw_self_test+0x184>
    bf01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bf08:	48 89 ef             	mov    %rbp,%rdi
    bf0b:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    bf10:	e8 4b 9d ff ff       	callq  5c60 <mbedtls_cipher_free>
    bf15:	be 60 00 00 00       	mov    $0x60,%esi
    bf1a:	48 89 ef             	mov    %rbp,%rdi
    bf1d:	e8 0e 93 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    bf22:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    bf26:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
    bf2b:	85 c0                	test   %eax,%eax
    bf2d:	0f 85 b5 00 00 00    	jne    bfe8 <mbedtls_nist_kw_self_test+0x448>
    bf33:	45 31 c0             	xor    %r8d,%r8d
    bf36:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    bf3d:	00 
    bf3e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    bf45:	00 00 
    bf47:	0f 85 6a 01 00 00    	jne    c0b7 <mbedtls_nist_kw_self_test+0x517>
    bf4d:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    bf54:	44 89 c0             	mov    %r8d,%eax
    bf57:	5b                   	pop    %rbx
    bf58:	5d                   	pop    %rbp
    bf59:	41 5c                	pop    %r12
    bf5b:	41 5d                	pop    %r13
    bf5d:	41 5e                	pop    %r14
    bf5f:	41 5f                	pop    %r15
    bf61:	c3                   	retq   
    bf62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bf68:	44 89 ea             	mov    %r13d,%edx
    bf6b:	48 8d 35 77 72 01 00 	lea    0x17277(%rip),%rsi        # 231e9 <md5_test_buf+0x269>
    bf72:	bf 01 00 00 00       	mov    $0x1,%edi
    bf77:	31 c0                	xor    %eax,%eax
    bf79:	e8 c2 73 ff ff       	callq  3340 <__printf_chk@plt>
    bf7e:	e9 08 fe ff ff       	jmpq   bd8b <mbedtls_nist_kw_self_test+0x1eb>
    bf83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bf88:	48 8d 3d 52 72 01 00 	lea    0x17252(%rip),%rdi        # 231e1 <md5_test_buf+0x261>
    bf8f:	89 44 24 18          	mov    %eax,0x18(%rsp)
    bf93:	e8 68 72 ff ff       	callq  3200 <puts@plt>
    bf98:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
    bf9d:	e9 2b ff ff ff       	jmpq   becd <mbedtls_nist_kw_self_test+0x32d>
    bfa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bfa8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    bfac:	85 c0                	test   %eax,%eax
    bfae:	74 64                	je     c014 <mbedtls_nist_kw_self_test+0x474>
    bfb0:	48 8d 35 21 72 01 00 	lea    0x17221(%rip),%rsi        # 231d8 <md5_test_buf+0x258>
    bfb7:	bf 01 00 00 00       	mov    $0x1,%edi
    bfbc:	31 c0                	xor    %eax,%eax
    bfbe:	e8 7d 73 ff ff       	callq  3340 <__printf_chk@plt>
    bfc3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bfc9:	48 89 ef             	mov    %rbp,%rdi
    bfcc:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    bfd1:	e8 8a 9c ff ff       	callq  5c60 <mbedtls_cipher_free>
    bfd6:	be 60 00 00 00       	mov    $0x60,%esi
    bfdb:	48 89 ef             	mov    %rbp,%rdi
    bfde:	e8 4d 92 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    bfe3:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    bfe8:	bf 0a 00 00 00       	mov    $0xa,%edi
    bfed:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    bff2:	e8 f9 71 ff ff       	callq  31f0 <putchar@plt>
    bff7:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    bffc:	e9 35 ff ff ff       	jmpq   bf36 <mbedtls_nist_kw_self_test+0x396>
    c001:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c008:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
    c00c:	85 db                	test   %ebx,%ebx
    c00e:	0f 85 8c 00 00 00    	jne    c0a0 <mbedtls_nist_kw_self_test+0x500>
    c014:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c01a:	48 89 ef             	mov    %rbp,%rdi
    c01d:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    c022:	e8 39 9c ff ff       	callq  5c60 <mbedtls_cipher_free>
    c027:	be 60 00 00 00       	mov    $0x60,%esi
    c02c:	48 89 ef             	mov    %rbp,%rdi
    c02f:	e8 fc 91 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    c034:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    c039:	e9 f8 fe ff ff       	jmpq   bf36 <mbedtls_nist_kw_self_test+0x396>
    c03e:	66 90                	xchg   %ax,%ax
    c040:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    c045:	41 89 c0             	mov    %eax,%r8d
    c048:	45 85 ff             	test   %r15d,%r15d
    c04b:	74 cd                	je     c01a <mbedtls_nist_kw_self_test+0x47a>
    c04d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    c051:	48 8d 35 6c 71 01 00 	lea    0x1716c(%rip),%rsi        # 231c4 <md5_test_buf+0x244>
    c058:	bf 01 00 00 00       	mov    $0x1,%edi
    c05d:	31 c0                	xor    %eax,%eax
    c05f:	e8 dc 72 ff ff       	callq  3340 <__printf_chk@plt>
    c064:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    c069:	e9 5b ff ff ff       	jmpq   bfc9 <mbedtls_nist_kw_self_test+0x429>
    c06e:	66 90                	xchg   %ax,%ax
    c070:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    c074:	85 ff                	test   %edi,%edi
    c076:	74 a2                	je     c01a <mbedtls_nist_kw_self_test+0x47a>
    c078:	48 8d 35 78 71 01 00 	lea    0x17178(%rip),%rsi        # 231f7 <md5_test_buf+0x277>
    c07f:	bf 01 00 00 00       	mov    $0x1,%edi
    c084:	31 c0                	xor    %eax,%eax
    c086:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    c08b:	e8 b0 72 ff ff       	callq  3340 <__printf_chk@plt>
    c090:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    c095:	e9 2f ff ff ff       	jmpq   bfc9 <mbedtls_nist_kw_self_test+0x429>
    c09a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c0a0:	48 8d 3d 16 7a 01 00 	lea    0x17a16(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    c0a7:	e8 54 71 ff ff       	callq  3200 <puts@plt>
    c0ac:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c0b2:	e9 12 ff ff ff       	jmpq   bfc9 <mbedtls_nist_kw_self_test+0x429>
    c0b7:	e8 a4 71 ff ff       	callq  3260 <__stack_chk_fail@plt>
    c0bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c0c0 <mbedtls_ripemd160_init>:
    c0c0:	f3 0f 1e fa          	endbr64 
    c0c4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    c0cb:	48 89 f9             	mov    %rdi,%rcx
    c0ce:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    c0d2:	31 c0                	xor    %eax,%eax
    c0d4:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
    c0db:	00 
    c0dc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c0e0:	48 29 f9             	sub    %rdi,%rcx
    c0e3:	83 c1 5c             	add    $0x5c,%ecx
    c0e6:	c1 e9 03             	shr    $0x3,%ecx
    c0e9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    c0ec:	c3                   	retq   
    c0ed:	0f 1f 00             	nopl   (%rax)

000000000000c0f0 <mbedtls_ripemd160_free>:
    c0f0:	f3 0f 1e fa          	endbr64 
    c0f4:	48 85 ff             	test   %rdi,%rdi
    c0f7:	74 0f                	je     c108 <mbedtls_ripemd160_free+0x18>
    c0f9:	be 5c 00 00 00       	mov    $0x5c,%esi
    c0fe:	e9 2d 91 ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    c103:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c108:	c3                   	retq   
    c109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c110 <mbedtls_ripemd160_clone>:
    c110:	f3 0f 1e fa          	endbr64 
    c114:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    c118:	0f 11 07             	movups %xmm0,(%rdi)
    c11b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    c120:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    c124:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    c129:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    c12d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    c132:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    c136:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    c13b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    c13f:	48 8b 46 50          	mov    0x50(%rsi),%rax
    c143:	48 89 47 50          	mov    %rax,0x50(%rdi)
    c147:	8b 46 58             	mov    0x58(%rsi),%eax
    c14a:	89 47 58             	mov    %eax,0x58(%rdi)
    c14d:	c3                   	retq   
    c14e:	66 90                	xchg   %ax,%ax

000000000000c150 <mbedtls_ripemd160_starts>:
    c150:	f3 0f 1e fa          	endbr64 
    c154:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    c15b:	ab cd ef 
    c15e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    c165:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c169:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    c170:	54 32 10 
    c173:	48 89 47 10          	mov    %rax,0x10(%rdi)
    c177:	31 c0                	xor    %eax,%eax
    c179:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
    c180:	c3                   	retq   
    c181:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    c188:	00 00 00 00 
    c18c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c190 <mbedtls_internal_ripemd160_process>:
    c190:	f3 0f 1e fa          	endbr64 
    c194:	41 57                	push   %r15
    c196:	41 56                	push   %r14
    c198:	41 55                	push   %r13
    c19a:	41 54                	push   %r12
    c19c:	55                   	push   %rbp
    c19d:	53                   	push   %rbx
    c19e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    c1a5:	44 8b 66 08          	mov    0x8(%rsi),%r12d
    c1a9:	8b 56 10             	mov    0x10(%rsi),%edx
    c1ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c1b3:	00 00 
    c1b5:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    c1bc:	00 
    c1bd:	31 c0                	xor    %eax,%eax
    c1bf:	8b 46 0c             	mov    0xc(%rsi),%eax
    c1c2:	44 8b 1e             	mov    (%rsi),%r11d
    c1c5:	44 8b 6e 04          	mov    0x4(%rsi),%r13d
    c1c9:	8b 5e 1c             	mov    0x1c(%rsi),%ebx
    c1cc:	44 89 24 24          	mov    %r12d,(%rsp)
    c1d0:	44 89 64 24 70       	mov    %r12d,0x70(%rsp)
    c1d5:	44 8b 66 18          	mov    0x18(%rsi),%r12d
    c1d9:	89 44 24 24          	mov    %eax,0x24(%rsp)
    c1dd:	89 44 24 74          	mov    %eax,0x74(%rsp)
    c1e1:	8b 46 14             	mov    0x14(%rsi),%eax
    c1e4:	89 54 24 04          	mov    %edx,0x4(%rsp)
    c1e8:	89 54 24 78          	mov    %edx,0x78(%rsp)
    c1ec:	8b 56 20             	mov    0x20(%rsi),%edx
    c1ef:	44 89 5c 24 68       	mov    %r11d,0x68(%rsp)
    c1f4:	44 89 6c 24 6c       	mov    %r13d,0x6c(%rsp)
    c1f9:	89 44 24 08          	mov    %eax,0x8(%rsp)
    c1fd:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
    c201:	44 89 a4 24 80 00 00 	mov    %r12d,0x80(%rsp)
    c208:	00 
    c209:	89 9c 24 84 00 00 00 	mov    %ebx,0x84(%rsp)
    c210:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    c214:	89 94 24 88 00 00 00 	mov    %edx,0x88(%rsp)
    c21b:	44 8b 76 24          	mov    0x24(%rsi),%r14d
    c21f:	44 8b 7e 2c          	mov    0x2c(%rsi),%r15d
    c223:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    c227:	44 33 57 10          	xor    0x10(%rdi),%r10d
    c22b:	8b 4e 28             	mov    0x28(%rsi),%ecx
    c22e:	44 89 b4 24 8c 00 00 	mov    %r14d,0x8c(%rsp)
    c235:	00 
    c236:	8b 47 08             	mov    0x8(%rdi),%eax
    c239:	8b 6e 38             	mov    0x38(%rsi),%ebp
    c23c:	44 89 7c 24 14       	mov    %r15d,0x14(%rsp)
    c241:	44 8b 46 30          	mov    0x30(%rsi),%r8d
    c245:	44 8b 4e 34          	mov    0x34(%rsi),%r9d
    c249:	44 89 bc 24 94 00 00 	mov    %r15d,0x94(%rsp)
    c250:	00 
    c251:	44 8b 7f 14          	mov    0x14(%rdi),%r15d
    c255:	44 01 d8             	add    %r11d,%eax
    c258:	8b 76 3c             	mov    0x3c(%rsi),%esi
    c25b:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    c25f:	89 8c 24 90 00 00 00 	mov    %ecx,0x90(%rsp)
    c266:	8b 4f 10             	mov    0x10(%rdi),%ecx
    c269:	45 31 d7             	xor    %r10d,%r15d
    c26c:	44 8b 57 10          	mov    0x10(%rdi),%r10d
    c270:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
    c275:	41 01 c7             	add    %eax,%r15d
    c278:	8b 44 24 08          	mov    0x8(%rsp),%eax
    c27c:	44 89 84 24 98 00 00 	mov    %r8d,0x98(%rsp)
    c283:	00 
    c284:	41 c1 c2 0a          	rol    $0xa,%r10d
    c288:	44 89 4c 24 1c       	mov    %r9d,0x1c(%rsp)
    c28d:	41 c1 c7 0b          	rol    $0xb,%r15d
    c291:	44 03 7f 18          	add    0x18(%rdi),%r15d
    c295:	44 89 d2             	mov    %r10d,%edx
    c298:	44 8b 57 14          	mov    0x14(%rdi),%r10d
    c29c:	44 89 8c 24 9c 00 00 	mov    %r9d,0x9c(%rsp)
    c2a3:	00 
    c2a4:	89 ac 24 a0 00 00 00 	mov    %ebp,0xa0(%rsp)
    c2ab:	41 f7 d2             	not    %r10d
    c2ae:	89 74 24 20          	mov    %esi,0x20(%rsp)
    c2b2:	44 09 d1             	or     %r10d,%ecx
    c2b5:	44 8b 57 08          	mov    0x8(%rdi),%r10d
    c2b9:	33 4f 0c             	xor    0xc(%rdi),%ecx
    c2bc:	89 b4 24 a4 00 00 00 	mov    %esi,0xa4(%rsp)
    c2c3:	41 8d 84 02 e6 8b a2 	lea    0x50a28be6(%r10,%rax,1),%eax
    c2ca:	50 
    c2cb:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    c2cf:	01 c1                	add    %eax,%ecx
    c2d1:	41 31 d2             	xor    %edx,%r10d
    c2d4:	c1 c1 08             	rol    $0x8,%ecx
    c2d7:	03 4f 18             	add    0x18(%rdi),%ecx
    c2da:	44 89 6c 24 34       	mov    %r13d,0x34(%rsp)
    c2df:	45 89 d0             	mov    %r10d,%r8d
    c2e2:	8b 47 18             	mov    0x18(%rdi),%eax
    c2e5:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    c2e9:	89 6c 24 28          	mov    %ebp,0x28(%rsp)
    c2ed:	45 31 f8             	xor    %r15d,%r8d
    c2f0:	89 5c 24 30          	mov    %ebx,0x30(%rsp)
    c2f4:	44 01 e8             	add    %r13d,%eax
    c2f7:	41 c1 c2 0a          	rol    $0xa,%r10d
    c2fb:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
    c300:	44 8b 2c 24          	mov    (%rsp),%r13d
    c304:	45 89 d1             	mov    %r10d,%r9d
    c307:	41 01 c0             	add    %eax,%r8d
    c30a:	41 89 d2             	mov    %edx,%r10d
    c30d:	8b 47 0c             	mov    0xc(%rdi),%eax
    c310:	41 f7 d2             	not    %r10d
    c313:	41 c1 c0 0e          	rol    $0xe,%r8d
    c317:	44 03 47 14          	add    0x14(%rdi),%r8d
    c31b:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
    c320:	44 09 d0             	or     %r10d,%eax
    c323:	44 8b 57 18          	mov    0x18(%rdi),%r10d
    c327:	31 c8                	xor    %ecx,%eax
    c329:	41 8d b4 2a e6 8b a2 	lea    0x50a28be6(%r10,%rbp,1),%esi
    c330:	50 
    c331:	45 89 fa             	mov    %r15d,%r10d
    c334:	45 31 ca             	xor    %r9d,%r10d
    c337:	01 f0                	add    %esi,%eax
    c339:	44 89 d5             	mov    %r10d,%ebp
    c33c:	44 8b 14 24          	mov    (%rsp),%r10d
    c340:	44 03 57 14          	add    0x14(%rdi),%r10d
    c344:	c1 c0 09             	rol    $0x9,%eax
    c347:	44 31 c5             	xor    %r8d,%ebp
    c34a:	03 47 14             	add    0x14(%rdi),%eax
    c34d:	44 01 d5             	add    %r10d,%ebp
    c350:	45 89 ca             	mov    %r9d,%r10d
    c353:	41 f7 d2             	not    %r10d
    c356:	c1 c5 0f             	rol    $0xf,%ebp
    c359:	44 89 d6             	mov    %r10d,%esi
    c35c:	44 8b 57 14          	mov    0x14(%rdi),%r10d
    c360:	01 d5                	add    %edx,%ebp
    c362:	41 c1 c7 0a          	rol    $0xa,%r15d
    c366:	09 ce                	or     %ecx,%esi
    c368:	c1 c1 0a             	rol    $0xa,%ecx
    c36b:	31 c6                	xor    %eax,%esi
    c36d:	45 8d 94 1a e6 8b a2 	lea    0x50a28be6(%r10,%rbx,1),%r10d
    c374:	50 
    c375:	44 01 d6             	add    %r10d,%esi
    c378:	45 89 c2             	mov    %r8d,%r10d
    c37b:	41 c1 c0 0a          	rol    $0xa,%r8d
    c37f:	45 31 fa             	xor    %r15d,%r10d
    c382:	c1 c6 09             	rol    $0x9,%esi
    c385:	44 89 d3             	mov    %r10d,%ebx
    c388:	44 8b 54 24 24       	mov    0x24(%rsp),%r10d
    c38d:	01 d6                	add    %edx,%esi
    c38f:	31 eb                	xor    %ebp,%ebx
    c391:	41 01 d2             	add    %edx,%r10d
    c394:	42 8d 94 1a e6 8b a2 	lea    0x50a28be6(%rdx,%r11,1),%edx
    c39b:	50 
    c39c:	41 89 eb             	mov    %ebp,%r11d
    c39f:	c1 c5 0a             	rol    $0xa,%ebp
    c3a2:	44 01 d3             	add    %r10d,%ebx
    c3a5:	41 89 ca             	mov    %ecx,%r10d
    c3a8:	45 31 c3             	xor    %r8d,%r11d
    c3ab:	41 f7 d2             	not    %r10d
    c3ae:	c1 c3 0c             	rol    $0xc,%ebx
    c3b1:	41 09 c2             	or     %eax,%r10d
    c3b4:	44 01 cb             	add    %r9d,%ebx
    c3b7:	c1 c0 0a             	rol    $0xa,%eax
    c3ba:	41 31 f2             	xor    %esi,%r10d
    c3bd:	41 31 db             	xor    %ebx,%r11d
    c3c0:	41 01 d2             	add    %edx,%r10d
    c3c3:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c3c7:	41 c1 c2 0b          	rol    $0xb,%r10d
    c3cb:	44 01 ca             	add    %r9d,%edx
    c3ce:	45 01 ca             	add    %r9d,%r10d
    c3d1:	47 8d 8c 31 e6 8b a2 	lea    0x50a28be6(%r9,%r14,1),%r9d
    c3d8:	50 
    c3d9:	41 01 d3             	add    %edx,%r11d
    c3dc:	89 c2                	mov    %eax,%edx
    c3de:	f7 d2                	not    %edx
    c3e0:	41 c1 c3 05          	rol    $0x5,%r11d
    c3e4:	09 f2                	or     %esi,%edx
    c3e6:	45 01 fb             	add    %r15d,%r11d
    c3e9:	44 31 d2             	xor    %r10d,%edx
    c3ec:	44 01 ca             	add    %r9d,%edx
    c3ef:	41 89 d9             	mov    %ebx,%r9d
    c3f2:	c1 c2 0d             	rol    $0xd,%edx
    c3f5:	01 ca                	add    %ecx,%edx
    c3f7:	c1 c6 0a             	rol    $0xa,%esi
    c3fa:	41 31 e9             	xor    %ebp,%r9d
    c3fd:	44 03 7c 24 08       	add    0x8(%rsp),%r15d
    c402:	45 31 d9             	xor    %r11d,%r9d
    c405:	42 8d 8c 29 e6 8b a2 	lea    0x50a28be6(%rcx,%r13,1),%ecx
    c40c:	50 
    c40d:	c1 c3 0a             	rol    $0xa,%ebx
    c410:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
    c415:	45 01 f9             	add    %r15d,%r9d
    c418:	41 89 f7             	mov    %esi,%r15d
    c41b:	41 f7 d7             	not    %r15d
    c41e:	41 c1 c1 08          	rol    $0x8,%r9d
    c422:	45 09 d7             	or     %r10d,%r15d
    c425:	45 01 c1             	add    %r8d,%r9d
    c428:	41 c1 c2 0a          	rol    $0xa,%r10d
    c42c:	45 01 e0             	add    %r12d,%r8d
    c42f:	41 31 d7             	xor    %edx,%r15d
    c432:	41 01 cf             	add    %ecx,%r15d
    c435:	44 89 d9             	mov    %r11d,%ecx
    c438:	41 c1 c3 0a          	rol    $0xa,%r11d
    c43c:	31 d9                	xor    %ebx,%ecx
    c43e:	41 c1 c7 0f          	rol    $0xf,%r15d
    c442:	44 31 c9             	xor    %r9d,%ecx
    c445:	41 01 c7             	add    %eax,%r15d
    c448:	42 8d 84 28 e6 8b a2 	lea    0x50a28be6(%rax,%r13,1),%eax
    c44f:	50 
    c450:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
    c455:	44 01 c1             	add    %r8d,%ecx
    c458:	45 89 d0             	mov    %r10d,%r8d
    c45b:	41 f7 d0             	not    %r8d
    c45e:	c1 c1 07             	rol    $0x7,%ecx
    c461:	41 09 d0             	or     %edx,%r8d
    c464:	01 e9                	add    %ebp,%ecx
    c466:	c1 c2 0a             	rol    $0xa,%edx
    c469:	03 6c 24 30          	add    0x30(%rsp),%ebp
    c46d:	45 31 f8             	xor    %r15d,%r8d
    c470:	41 01 c0             	add    %eax,%r8d
    c473:	44 89 c8             	mov    %r9d,%eax
    c476:	44 31 d8             	xor    %r11d,%eax
    c479:	41 c1 c0 0f          	rol    $0xf,%r8d
    c47d:	31 c8                	xor    %ecx,%eax
    c47f:	41 01 f0             	add    %esi,%r8d
    c482:	42 8d b4 2e e6 8b a2 	lea    0x50a28be6(%rsi,%r13,1),%esi
    c489:	50 
    c48a:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    c48f:	01 e8                	add    %ebp,%eax
    c491:	89 d5                	mov    %edx,%ebp
    c493:	c1 c0 09             	rol    $0x9,%eax
    c496:	f7 d5                	not    %ebp
    c498:	01 d8                	add    %ebx,%eax
    c49a:	44 09 fd             	or     %r15d,%ebp
    c49d:	41 c1 c1 0a          	rol    $0xa,%r9d
    c4a1:	03 5c 24 0c          	add    0xc(%rsp),%ebx
    c4a5:	44 31 c5             	xor    %r8d,%ebp
    c4a8:	41 c1 c7 0a          	rol    $0xa,%r15d
    c4ac:	01 f5                	add    %esi,%ebp
    c4ae:	89 ce                	mov    %ecx,%esi
    c4b0:	c1 c1 0a             	rol    $0xa,%ecx
    c4b3:	44 31 ce             	xor    %r9d,%esi
    c4b6:	c1 c5 05             	rol    $0x5,%ebp
    c4b9:	31 c6                	xor    %eax,%esi
    c4bb:	44 01 d5             	add    %r10d,%ebp
    c4be:	47 8d 94 2a e6 8b a2 	lea    0x50a28be6(%r10,%r13,1),%r10d
    c4c5:	50 
    c4c6:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    c4cb:	01 de                	add    %ebx,%esi
    c4cd:	44 89 fb             	mov    %r15d,%ebx
    c4d0:	f7 d3                	not    %ebx
    c4d2:	c1 c6 0b             	rol    $0xb,%esi
    c4d5:	44 09 c3             	or     %r8d,%ebx
    c4d8:	44 01 de             	add    %r11d,%esi
    c4db:	41 c1 c0 0a          	rol    $0xa,%r8d
    c4df:	45 01 f3             	add    %r14d,%r11d
    c4e2:	31 eb                	xor    %ebp,%ebx
    c4e4:	44 01 d3             	add    %r10d,%ebx
    c4e7:	41 89 c2             	mov    %eax,%r10d
    c4ea:	c1 c0 0a             	rol    $0xa,%eax
    c4ed:	41 31 ca             	xor    %ecx,%r10d
    c4f0:	c1 c3 07             	rol    $0x7,%ebx
    c4f3:	41 31 f2             	xor    %esi,%r10d
    c4f6:	01 d3                	add    %edx,%ebx
    c4f8:	42 8d 94 22 e6 8b a2 	lea    0x50a28be6(%rdx,%r12,1),%edx
    c4ff:	50 
    c500:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    c505:	45 01 da             	add    %r11d,%r10d
    c508:	45 89 c3             	mov    %r8d,%r11d
    c50b:	41 f7 d3             	not    %r11d
    c50e:	41 c1 c2 0d          	rol    $0xd,%r10d
    c512:	41 09 eb             	or     %ebp,%r11d
    c515:	45 01 ca             	add    %r9d,%r10d
    c518:	41 31 db             	xor    %ebx,%r11d
    c51b:	41 01 d3             	add    %edx,%r11d
    c51e:	89 f2                	mov    %esi,%edx
    c520:	41 c1 c3 07          	rol    $0x7,%r11d
    c524:	45 01 fb             	add    %r15d,%r11d
    c527:	31 c2                	xor    %eax,%edx
    c529:	c1 c5 0a             	rol    $0xa,%ebp
    c52c:	44 03 4c 24 10       	add    0x10(%rsp),%r9d
    c531:	44 31 d2             	xor    %r10d,%edx
    c534:	47 8d bc 2f e6 8b a2 	lea    0x50a28be6(%r15,%r13,1),%r15d
    c53b:	50 
    c53c:	c1 c6 0a             	rol    $0xa,%esi
    c53f:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    c544:	44 01 ca             	add    %r9d,%edx
    c547:	41 89 e9             	mov    %ebp,%r9d
    c54a:	41 f7 d1             	not    %r9d
    c54d:	c1 c2 0e             	rol    $0xe,%edx
    c550:	41 09 d9             	or     %ebx,%r9d
    c553:	01 ca                	add    %ecx,%edx
    c555:	c1 c3 0a             	rol    $0xa,%ebx
    c558:	03 4c 24 14          	add    0x14(%rsp),%ecx
    c55c:	45 31 d9             	xor    %r11d,%r9d
    c55f:	45 01 f9             	add    %r15d,%r9d
    c562:	45 89 d7             	mov    %r10d,%r15d
    c565:	41 c1 c2 0a          	rol    $0xa,%r10d
    c569:	41 31 f7             	xor    %esi,%r15d
    c56c:	41 c1 c1 08          	rol    $0x8,%r9d
    c570:	41 31 d7             	xor    %edx,%r15d
    c573:	45 01 c1             	add    %r8d,%r9d
    c576:	47 8d 84 20 e6 8b a2 	lea    0x50a28be6(%r8,%r12,1),%r8d
    c57d:	50 
    c57e:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    c583:	41 01 cf             	add    %ecx,%r15d
    c586:	89 d9                	mov    %ebx,%ecx
    c588:	f7 d1                	not    %ecx
    c58a:	41 c1 c7 0f          	rol    $0xf,%r15d
    c58e:	44 09 d9             	or     %r11d,%ecx
    c591:	41 01 c7             	add    %eax,%r15d
    c594:	41 c1 c3 0a          	rol    $0xa,%r11d
    c598:	03 44 24 18          	add    0x18(%rsp),%eax
    c59c:	44 31 c9             	xor    %r9d,%ecx
    c59f:	44 01 c1             	add    %r8d,%ecx
    c5a2:	41 89 d0             	mov    %edx,%r8d
    c5a5:	45 31 d0             	xor    %r10d,%r8d
    c5a8:	c1 c1 0b             	rol    $0xb,%ecx
    c5ab:	45 31 f8             	xor    %r15d,%r8d
    c5ae:	01 e9                	add    %ebp,%ecx
    c5b0:	42 8d ac 2d e6 8b a2 	lea    0x50a28be6(%rbp,%r13,1),%ebp
    c5b7:	50 
    c5b8:	41 01 c0             	add    %eax,%r8d
    c5bb:	44 89 d8             	mov    %r11d,%eax
    c5be:	f7 d0                	not    %eax
    c5c0:	41 c1 c0 06          	rol    $0x6,%r8d
    c5c4:	44 09 c8             	or     %r9d,%eax
    c5c7:	c1 c2 0a             	rol    $0xa,%edx
    c5ca:	41 01 f0             	add    %esi,%r8d
    c5cd:	03 74 24 1c          	add    0x1c(%rsp),%esi
    c5d1:	31 c8                	xor    %ecx,%eax
    c5d3:	41 c1 c1 0a          	rol    $0xa,%r9d
    c5d7:	01 e8                	add    %ebp,%eax
    c5d9:	44 89 fd             	mov    %r15d,%ebp
    c5dc:	41 c1 c7 0a          	rol    $0xa,%r15d
    c5e0:	31 d5                	xor    %edx,%ebp
    c5e2:	c1 c0 0e             	rol    $0xe,%eax
    c5e5:	44 31 c5             	xor    %r8d,%ebp
    c5e8:	01 d8                	add    %ebx,%eax
    c5ea:	42 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%rbx,%r12,1),%ebx
    c5f1:	50 
    c5f2:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    c5f7:	01 f5                	add    %esi,%ebp
    c5f9:	44 89 ce             	mov    %r9d,%esi
    c5fc:	f7 d6                	not    %esi
    c5fe:	c1 c5 07             	rol    $0x7,%ebp
    c601:	09 ce                	or     %ecx,%esi
    c603:	44 01 d5             	add    %r10d,%ebp
    c606:	c1 c1 0a             	rol    $0xa,%ecx
    c609:	44 03 54 24 28       	add    0x28(%rsp),%r10d
    c60e:	31 c6                	xor    %eax,%esi
    c610:	01 de                	add    %ebx,%esi
    c612:	44 89 c3             	mov    %r8d,%ebx
    c615:	41 c1 c0 0a          	rol    $0xa,%r8d
    c619:	44 31 fb             	xor    %r15d,%ebx
    c61c:	c1 c6 0e             	rol    $0xe,%esi
    c61f:	31 eb                	xor    %ebp,%ebx
    c621:	44 01 de             	add    %r11d,%esi
    c624:	47 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%r11,%r12,1),%r11d
    c62b:	50 
    c62c:	44 01 d3             	add    %r10d,%ebx
    c62f:	41 89 ca             	mov    %ecx,%r10d
    c632:	41 f7 d2             	not    %r10d
    c635:	c1 c3 09             	rol    $0x9,%ebx
    c638:	41 09 c2             	or     %eax,%r10d
    c63b:	01 d3                	add    %edx,%ebx
    c63d:	41 31 f2             	xor    %esi,%r10d
    c640:	45 01 da             	add    %r11d,%r10d
    c643:	41 89 eb             	mov    %ebp,%r11d
    c646:	41 c1 c2 0c          	rol    $0xc,%r10d
    c64a:	45 31 c3             	xor    %r8d,%r11d
    c64d:	03 54 24 20          	add    0x20(%rsp),%edx
    c651:	c1 c0 0a             	rol    $0xa,%eax
    c654:	41 31 db             	xor    %ebx,%r11d
    c657:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
    c65c:	45 01 ca             	add    %r9d,%r10d
    c65f:	c1 c5 0a             	rol    $0xa,%ebp
    c662:	41 01 d3             	add    %edx,%r11d
    c665:	89 c2                	mov    %eax,%edx
    c667:	f7 d2                	not    %edx
    c669:	47 8d 8c 21 e6 8b a2 	lea    0x50a28be6(%r9,%r12,1),%r9d
    c670:	50 
    c671:	41 c1 c3 08          	rol    $0x8,%r11d
    c675:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    c67a:	09 f2                	or     %esi,%edx
    c67c:	45 01 fb             	add    %r15d,%r11d
    c67f:	c1 c6 0a             	rol    $0xa,%esi
    c682:	44 31 d2             	xor    %r10d,%edx
    c685:	47 8d bc 27 99 79 82 	lea    0x5a827999(%r15,%r12,1),%r15d
    c68c:	5a 
    c68d:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    c692:	44 01 ca             	add    %r9d,%edx
    c695:	41 89 d9             	mov    %ebx,%r9d
    c698:	c1 c3 0a             	rol    $0xa,%ebx
    c69b:	41 31 e9             	xor    %ebp,%r9d
    c69e:	c1 c2 06             	rol    $0x6,%edx
    c6a1:	45 21 d9             	and    %r11d,%r9d
    c6a4:	01 ca                	add    %ecx,%edx
    c6a6:	42 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%rcx,%r12,1),%ecx
    c6ad:	5c 
    c6ae:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    c6b3:	41 31 e9             	xor    %ebp,%r9d
    c6b6:	45 01 f9             	add    %r15d,%r9d
    c6b9:	45 89 d7             	mov    %r10d,%r15d
    c6bc:	41 31 d7             	xor    %edx,%r15d
    c6bf:	41 c1 c1 07          	rol    $0x7,%r9d
    c6c3:	41 21 f7             	and    %esi,%r15d
    c6c6:	45 01 c1             	add    %r8d,%r9d
    c6c9:	47 8d 84 20 99 79 82 	lea    0x5a827999(%r8,%r12,1),%r8d
    c6d0:	5a 
    c6d1:	44 8b 64 24 14       	mov    0x14(%rsp),%r12d
    c6d6:	45 31 d7             	xor    %r10d,%r15d
    c6d9:	41 c1 c2 0a          	rol    $0xa,%r10d
    c6dd:	41 01 cf             	add    %ecx,%r15d
    c6e0:	44 89 d9             	mov    %r11d,%ecx
    c6e3:	31 d9                	xor    %ebx,%ecx
    c6e5:	41 c1 c7 09          	rol    $0x9,%r15d
    c6e9:	44 21 c9             	and    %r9d,%ecx
    c6ec:	41 01 c7             	add    %eax,%r15d
    c6ef:	42 8d 84 20 24 d1 4d 	lea    0x5c4dd124(%rax,%r12,1),%eax
    c6f6:	5c 
    c6f7:	44 8b 64 24 1c       	mov    0x1c(%rsp),%r12d
    c6fc:	31 d9                	xor    %ebx,%ecx
    c6fe:	41 c1 c3 0a          	rol    $0xa,%r11d
    c702:	44 01 c1             	add    %r8d,%ecx
    c705:	41 89 d0             	mov    %edx,%r8d
    c708:	45 31 f8             	xor    %r15d,%r8d
    c70b:	c1 c1 06             	rol    $0x6,%ecx
    c70e:	45 21 d0             	and    %r10d,%r8d
    c711:	01 e9                	add    %ebp,%ecx
    c713:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
    c71a:	5a 
    c71b:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    c720:	41 31 d0             	xor    %edx,%r8d
    c723:	c1 c2 0a             	rol    $0xa,%edx
    c726:	41 01 c0             	add    %eax,%r8d
    c729:	44 89 c8             	mov    %r9d,%eax
    c72c:	41 c1 c1 0a          	rol    $0xa,%r9d
    c730:	44 31 d8             	xor    %r11d,%eax
    c733:	41 c1 c0 0d          	rol    $0xd,%r8d
    c737:	21 c8                	and    %ecx,%eax
    c739:	41 01 f0             	add    %esi,%r8d
    c73c:	42 8d b4 26 24 d1 4d 	lea    0x5c4dd124(%rsi,%r12,1),%esi
    c743:	5c 
    c744:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    c749:	44 31 d8             	xor    %r11d,%eax
    c74c:	01 c5                	add    %eax,%ebp
    c74e:	44 89 f8             	mov    %r15d,%eax
    c751:	44 31 c0             	xor    %r8d,%eax
    c754:	c1 c5 08             	rol    $0x8,%ebp
    c757:	21 d0                	and    %edx,%eax
    c759:	01 dd                	add    %ebx,%ebp
    c75b:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
    c762:	5a 
    c763:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
    c768:	44 31 f8             	xor    %r15d,%eax
    c76b:	41 c1 c7 0a          	rol    $0xa,%r15d
    c76f:	01 f0                	add    %esi,%eax
    c771:	89 ce                	mov    %ecx,%esi
    c773:	44 31 ce             	xor    %r9d,%esi
    c776:	c1 c0 0f             	rol    $0xf,%eax
    c779:	21 ee                	and    %ebp,%esi
    c77b:	44 01 d0             	add    %r10d,%eax
    c77e:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
    c785:	5c 
    c786:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
    c78b:	44 31 ce             	xor    %r9d,%esi
    c78e:	01 de                	add    %ebx,%esi
    c790:	44 89 c3             	mov    %r8d,%ebx
    c793:	c1 c6 0d             	rol    $0xd,%esi
    c796:	44 01 de             	add    %r11d,%esi
    c799:	c1 c1 0a             	rol    $0xa,%ecx
    c79c:	31 c3                	xor    %eax,%ebx
    c79e:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
    c7a5:	5a 
    c7a6:	44 21 fb             	and    %r15d,%ebx
    c7a9:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    c7ae:	44 31 c3             	xor    %r8d,%ebx
    c7b1:	41 c1 c0 0a          	rol    $0xa,%r8d
    c7b5:	44 01 d3             	add    %r10d,%ebx
    c7b8:	41 89 ea             	mov    %ebp,%r10d
    c7bb:	c1 c5 0a             	rol    $0xa,%ebp
    c7be:	41 31 ca             	xor    %ecx,%r10d
    c7c1:	c1 c3 07             	rol    $0x7,%ebx
    c7c4:	41 21 f2             	and    %esi,%r10d
    c7c7:	01 d3                	add    %edx,%ebx
    c7c9:	42 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%rdx,%r13,1),%edx
    c7d0:	5c 
    c7d1:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    c7d6:	41 31 ca             	xor    %ecx,%r10d
    c7d9:	45 01 d3             	add    %r10d,%r11d
    c7dc:	41 89 c2             	mov    %eax,%r10d
    c7df:	41 31 da             	xor    %ebx,%r10d
    c7e2:	41 c1 c3 0b          	rol    $0xb,%r11d
    c7e6:	45 21 c2             	and    %r8d,%r10d
    c7e9:	45 01 cb             	add    %r9d,%r11d
    c7ec:	47 8d 8c 21 99 79 82 	lea    0x5a827999(%r9,%r12,1),%r9d
    c7f3:	5a 
    c7f4:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    c7f9:	41 31 c2             	xor    %eax,%r10d
    c7fc:	c1 c0 0a             	rol    $0xa,%eax
    c7ff:	41 01 d2             	add    %edx,%r10d
    c802:	89 f2                	mov    %esi,%edx
    c804:	c1 c6 0a             	rol    $0xa,%esi
    c807:	31 ea                	xor    %ebp,%edx
    c809:	41 c1 c2 0c          	rol    $0xc,%r10d
    c80d:	44 21 da             	and    %r11d,%edx
    c810:	45 01 fa             	add    %r15d,%r10d
    c813:	47 8d bc 2f 24 d1 4d 	lea    0x5c4dd124(%r15,%r13,1),%r15d
    c81a:	5c 
    c81b:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    c820:	31 ea                	xor    %ebp,%edx
    c822:	44 01 ca             	add    %r9d,%edx
    c825:	41 89 d9             	mov    %ebx,%r9d
    c828:	45 31 d1             	xor    %r10d,%r9d
    c82b:	c1 c2 09             	rol    $0x9,%edx
    c82e:	41 21 c1             	and    %eax,%r9d
    c831:	01 ca                	add    %ecx,%edx
    c833:	42 8d 8c 29 99 79 82 	lea    0x5a827999(%rcx,%r13,1),%ecx
    c83a:	5a 
    c83b:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    c840:	41 31 d9             	xor    %ebx,%r9d
    c843:	45 01 f9             	add    %r15d,%r9d
    c846:	45 89 df             	mov    %r11d,%r15d
    c849:	c1 c3 0a             	rol    $0xa,%ebx
    c84c:	41 c1 c1 08          	rol    $0x8,%r9d
    c850:	41 31 f7             	xor    %esi,%r15d
    c853:	41 c1 c3 0a          	rol    $0xa,%r11d
    c857:	41 21 d7             	and    %edx,%r15d
    c85a:	45 01 c1             	add    %r8d,%r9d
    c85d:	47 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%r8,%r13,1),%r8d
    c864:	5c 
    c865:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
    c86a:	41 31 f7             	xor    %esi,%r15d
    c86d:	41 01 cf             	add    %ecx,%r15d
    c870:	44 89 d1             	mov    %r10d,%ecx
    c873:	44 31 c9             	xor    %r9d,%ecx
    c876:	41 c1 c7 07          	rol    $0x7,%r15d
    c87a:	21 d9                	and    %ebx,%ecx
    c87c:	41 01 ef             	add    %ebp,%r15d
    c87f:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
    c886:	5a 
    c887:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    c88c:	44 31 d1             	xor    %r10d,%ecx
    c88f:	41 c1 c2 0a          	rol    $0xa,%r10d
    c893:	44 01 c1             	add    %r8d,%ecx
    c896:	41 89 d0             	mov    %edx,%r8d
    c899:	c1 c2 0a             	rol    $0xa,%edx
    c89c:	45 31 d8             	xor    %r11d,%r8d
    c89f:	c1 c1 09             	rol    $0x9,%ecx
    c8a2:	45 21 f8             	and    %r15d,%r8d
    c8a5:	01 c1                	add    %eax,%ecx
    c8a7:	42 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%rax,%r13,1),%eax
    c8ae:	5c 
    c8af:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    c8b4:	45 31 d8             	xor    %r11d,%r8d
    c8b7:	41 01 e8             	add    %ebp,%r8d
    c8ba:	44 89 cd             	mov    %r9d,%ebp
    c8bd:	31 cd                	xor    %ecx,%ebp
    c8bf:	41 c1 c0 0f          	rol    $0xf,%r8d
    c8c3:	44 21 d5             	and    %r10d,%ebp
    c8c6:	41 01 f0             	add    %esi,%r8d
    c8c9:	42 8d b4 2e 99 79 82 	lea    0x5a827999(%rsi,%r13,1),%esi
    c8d0:	5a 
    c8d1:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    c8d6:	44 31 cd             	xor    %r9d,%ebp
    c8d9:	41 c1 c1 0a          	rol    $0xa,%r9d
    c8dd:	01 c5                	add    %eax,%ebp
    c8df:	44 89 f8             	mov    %r15d,%eax
    c8e2:	c1 c5 0b             	rol    $0xb,%ebp
    c8e5:	01 dd                	add    %ebx,%ebp
    c8e7:	31 d0                	xor    %edx,%eax
    c8e9:	42 8d 9c 23 24 d1 4d 	lea    0x5c4dd124(%rbx,%r12,1),%ebx
    c8f0:	5c 
    c8f1:	41 c1 c7 0a          	rol    $0xa,%r15d
    c8f5:	44 21 c0             	and    %r8d,%eax
    c8f8:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    c8fd:	31 d0                	xor    %edx,%eax
    c8ff:	01 f0                	add    %esi,%eax
    c901:	89 ce                	mov    %ecx,%esi
    c903:	31 ee                	xor    %ebp,%esi
    c905:	c1 c0 07             	rol    $0x7,%eax
    c908:	44 21 ce             	and    %r9d,%esi
    c90b:	44 01 d8             	add    %r11d,%eax
    c90e:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
    c915:	5a 
    c916:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    c91b:	31 ce                	xor    %ecx,%esi
    c91d:	c1 c1 0a             	rol    $0xa,%ecx
    c920:	01 de                	add    %ebx,%esi
    c922:	44 89 c3             	mov    %r8d,%ebx
    c925:	41 c1 c0 0a          	rol    $0xa,%r8d
    c929:	44 31 fb             	xor    %r15d,%ebx
    c92c:	c1 c6 07             	rol    $0x7,%esi
    c92f:	21 c3                	and    %eax,%ebx
    c931:	44 01 d6             	add    %r10d,%esi
    c934:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
    c93b:	5c 
    c93c:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    c941:	44 31 fb             	xor    %r15d,%ebx
    c944:	44 01 db             	add    %r11d,%ebx
    c947:	41 89 eb             	mov    %ebp,%r11d
    c94a:	41 31 f3             	xor    %esi,%r11d
    c94d:	c1 c3 0c             	rol    $0xc,%ebx
    c950:	41 21 cb             	and    %ecx,%r11d
    c953:	01 d3                	add    %edx,%ebx
    c955:	42 8d 94 32 99 79 82 	lea    0x5a827999(%rdx,%r14,1),%edx
    c95c:	5a 
    c95d:	41 31 eb             	xor    %ebp,%r11d
    c960:	c1 c5 0a             	rol    $0xa,%ebp
    c963:	45 01 d3             	add    %r10d,%r11d
    c966:	41 89 c2             	mov    %eax,%r10d
    c969:	45 31 c2             	xor    %r8d,%r10d
    c96c:	41 c1 c3 07          	rol    $0x7,%r11d
    c970:	41 21 da             	and    %ebx,%r10d
    c973:	45 01 cb             	add    %r9d,%r11d
    c976:	47 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%r9,%r12,1),%r9d
    c97d:	5c 
    c97e:	45 31 c2             	xor    %r8d,%r10d
    c981:	41 01 d2             	add    %edx,%r10d
    c984:	89 f2                	mov    %esi,%edx
    c986:	41 c1 c2 0f          	rol    $0xf,%r10d
    c98a:	44 31 da             	xor    %r11d,%edx
    c98d:	c1 c0 0a             	rol    $0xa,%eax
    c990:	21 ea                	and    %ebp,%edx
    c992:	45 01 fa             	add    %r15d,%r10d
    c995:	47 8d bc 2f 99 79 82 	lea    0x5a827999(%r15,%r13,1),%r15d
    c99c:	5a 
    c99d:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    c9a2:	31 f2                	xor    %esi,%edx
    c9a4:	c1 c6 0a             	rol    $0xa,%esi
    c9a7:	44 01 ca             	add    %r9d,%edx
    c9aa:	41 89 d9             	mov    %ebx,%r9d
    c9ad:	c1 c3 0a             	rol    $0xa,%ebx
    c9b0:	41 31 c1             	xor    %eax,%r9d
    c9b3:	c1 c2 0c             	rol    $0xc,%edx
    c9b6:	45 21 d1             	and    %r10d,%r9d
    c9b9:	01 ca                	add    %ecx,%edx
    c9bb:	42 8d 8c 29 24 d1 4d 	lea    0x5c4dd124(%rcx,%r13,1),%ecx
    c9c2:	5c 
    c9c3:	44 8b 2c 24          	mov    (%rsp),%r13d
    c9c7:	41 31 c1             	xor    %eax,%r9d
    c9ca:	45 01 f9             	add    %r15d,%r9d
    c9cd:	45 89 df             	mov    %r11d,%r15d
    c9d0:	41 31 d7             	xor    %edx,%r15d
    c9d3:	41 c1 c1 09          	rol    $0x9,%r9d
    c9d7:	41 21 f7             	and    %esi,%r15d
    c9da:	45 01 c1             	add    %r8d,%r9d
    c9dd:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
    c9e4:	5a 
    c9e5:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
    c9ea:	45 31 df             	xor    %r11d,%r15d
    c9ed:	41 c1 c3 0a          	rol    $0xa,%r11d
    c9f1:	41 01 cf             	add    %ecx,%r15d
    c9f4:	44 89 d1             	mov    %r10d,%ecx
    c9f7:	41 c1 c2 0a          	rol    $0xa,%r10d
    c9fb:	31 d9                	xor    %ebx,%ecx
    c9fd:	41 c1 c7 07          	rol    $0x7,%r15d
    ca01:	44 21 c9             	and    %r9d,%ecx
    ca04:	41 01 ef             	add    %ebp,%r15d
    ca07:	42 8d ac 2d 24 d1 4d 	lea    0x5c4dd124(%rbp,%r13,1),%ebp
    ca0e:	5c 
    ca0f:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
    ca14:	31 d9                	xor    %ebx,%ecx
    ca16:	44 01 c1             	add    %r8d,%ecx
    ca19:	41 89 d0             	mov    %edx,%r8d
    ca1c:	c1 c1 0b             	rol    $0xb,%ecx
    ca1f:	45 31 f8             	xor    %r15d,%r8d
    ca22:	01 c1                	add    %eax,%ecx
    ca24:	45 21 d8             	and    %r11d,%r8d
    ca27:	42 8d 84 28 99 79 82 	lea    0x5a827999(%rax,%r13,1),%eax
    ca2e:	5a 
    ca2f:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
    ca34:	41 31 d0             	xor    %edx,%r8d
    ca37:	c1 c2 0a             	rol    $0xa,%edx
    ca3a:	41 01 e8             	add    %ebp,%r8d
    ca3d:	44 89 cd             	mov    %r9d,%ebp
    ca40:	41 c1 c1 0a          	rol    $0xa,%r9d
    ca44:	44 31 d5             	xor    %r10d,%ebp
    ca47:	41 c1 c0 06          	rol    $0x6,%r8d
    ca4b:	21 cd                	and    %ecx,%ebp
    ca4d:	41 01 f0             	add    %esi,%r8d
    ca50:	42 8d b4 36 24 d1 4d 	lea    0x5c4dd124(%rsi,%r14,1),%esi
    ca57:	5c 
    ca58:	44 31 d5             	xor    %r10d,%ebp
    ca5b:	01 c5                	add    %eax,%ebp
    ca5d:	44 89 f8             	mov    %r15d,%eax
    ca60:	44 31 c0             	xor    %r8d,%eax
    ca63:	c1 c5 07             	rol    $0x7,%ebp
    ca66:	21 d0                	and    %edx,%eax
    ca68:	01 dd                	add    %ebx,%ebp
    ca6a:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
    ca71:	5a 
    ca72:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    ca77:	44 31 f8             	xor    %r15d,%eax
    ca7a:	41 c1 c7 0a          	rol    $0xa,%r15d
    ca7e:	01 f0                	add    %esi,%eax
    ca80:	89 ce                	mov    %ecx,%esi
    ca82:	c1 c1 0a             	rol    $0xa,%ecx
    ca85:	44 31 ce             	xor    %r9d,%esi
    ca88:	c1 c0 0f             	rol    $0xf,%eax
    ca8b:	21 ee                	and    %ebp,%esi
    ca8d:	44 01 d8             	add    %r11d,%eax
    ca90:	47 8d 9c 2b 24 d1 4d 	lea    0x5c4dd124(%r11,%r13,1),%r11d
    ca97:	5c 
    ca98:	44 31 ce             	xor    %r9d,%esi
    ca9b:	01 de                	add    %ebx,%esi
    ca9d:	44 89 c3             	mov    %r8d,%ebx
    caa0:	31 c3                	xor    %eax,%ebx
    caa2:	c1 c6 0d             	rol    $0xd,%esi
    caa5:	44 21 fb             	and    %r15d,%ebx
    caa8:	44 01 d6             	add    %r10d,%esi
    caab:	47 8d 94 22 99 79 82 	lea    0x5a827999(%r10,%r12,1),%r10d
    cab2:	5a 
    cab3:	44 8b 24 24          	mov    (%rsp),%r12d
    cab7:	44 31 c3             	xor    %r8d,%ebx
    caba:	44 01 db             	add    %r11d,%ebx
    cabd:	41 89 eb             	mov    %ebp,%r11d
    cac0:	c1 c3 0d             	rol    $0xd,%ebx
    cac3:	01 d3                	add    %edx,%ebx
    cac5:	41 31 cb             	xor    %ecx,%r11d
    cac8:	42 8d 94 22 24 d1 4d 	lea    0x5c4dd124(%rdx,%r12,1),%edx
    cacf:	5c 
    cad0:	c1 c5 0a             	rol    $0xa,%ebp
    cad3:	41 21 f3             	and    %esi,%r11d
    cad6:	41 c1 c0 0a          	rol    $0xa,%r8d
    cada:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    cadf:	41 31 cb             	xor    %ecx,%r11d
    cae2:	45 01 d3             	add    %r10d,%r11d
    cae5:	41 89 c2             	mov    %eax,%r10d
    cae8:	41 31 da             	xor    %ebx,%r10d
    caeb:	41 c1 c3 0c          	rol    $0xc,%r11d
    caef:	45 21 c2             	and    %r8d,%r10d
    caf2:	45 01 cb             	add    %r9d,%r11d
    caf5:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
    cafc:	6e 
    cafd:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
    cb02:	41 31 c2             	xor    %eax,%r10d
    cb05:	c1 c0 0a             	rol    $0xa,%eax
    cb08:	41 01 d2             	add    %edx,%r10d
    cb0b:	89 f2                	mov    %esi,%edx
    cb0d:	c1 c6 0a             	rol    $0xa,%esi
    cb10:	f7 d2                	not    %edx
    cb12:	41 c1 c2 0b          	rol    $0xb,%r10d
    cb16:	44 09 da             	or     %r11d,%edx
    cb19:	45 01 fa             	add    %r15d,%r10d
    cb1c:	47 8d bc 27 f3 3e 70 	lea    0x6d703ef3(%r15,%r12,1),%r15d
    cb23:	6d 
    cb24:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    cb29:	31 ea                	xor    %ebp,%edx
    cb2b:	44 89 74 24 3c       	mov    %r14d,0x3c(%rsp)
    cb30:	44 01 ca             	add    %r9d,%edx
    cb33:	41 89 d9             	mov    %ebx,%r9d
    cb36:	c1 c3 0a             	rol    $0xa,%ebx
    cb39:	41 f7 d1             	not    %r9d
    cb3c:	c1 c2 0b             	rol    $0xb,%edx
    cb3f:	45 09 d1             	or     %r10d,%r9d
    cb42:	01 ca                	add    %ecx,%edx
    cb44:	42 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r12,1),%ecx
    cb4b:	6e 
    cb4c:	44 8b 64 24 08       	mov    0x8(%rsp),%r12d
    cb51:	41 31 c1             	xor    %eax,%r9d
    cb54:	45 01 f9             	add    %r15d,%r9d
    cb57:	45 89 df             	mov    %r11d,%r15d
    cb5a:	41 f7 d7             	not    %r15d
    cb5d:	41 c1 c1 09          	rol    $0x9,%r9d
    cb61:	41 09 d7             	or     %edx,%r15d
    cb64:	45 01 c1             	add    %r8d,%r9d
    cb67:	47 8d 84 20 f3 3e 70 	lea    0x6d703ef3(%r8,%r12,1),%r8d
    cb6e:	6d 
    cb6f:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    cb74:	41 31 f7             	xor    %esi,%r15d
    cb77:	41 01 cf             	add    %ecx,%r15d
    cb7a:	44 89 d1             	mov    %r10d,%ecx
    cb7d:	41 c1 c7 0d          	rol    $0xd,%r15d
    cb81:	f7 d1                	not    %ecx
    cb83:	41 01 ef             	add    %ebp,%r15d
    cb86:	44 09 c9             	or     %r9d,%ecx
    cb89:	41 c1 c3 0a          	rol    $0xa,%r11d
    cb8d:	42 8d ac 25 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r12,1),%ebp
    cb94:	6e 
    cb95:	31 d9                	xor    %ebx,%ecx
    cb97:	41 c1 c2 0a          	rol    $0xa,%r10d
    cb9b:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    cba0:	44 01 c1             	add    %r8d,%ecx
    cba3:	41 89 d0             	mov    %edx,%r8d
    cba6:	c1 c2 0a             	rol    $0xa,%edx
    cba9:	41 f7 d0             	not    %r8d
    cbac:	c1 c1 07             	rol    $0x7,%ecx
    cbaf:	45 09 f8             	or     %r15d,%r8d
    cbb2:	01 c1                	add    %eax,%ecx
    cbb4:	42 8d 84 28 f3 3e 70 	lea    0x6d703ef3(%rax,%r13,1),%eax
    cbbb:	6d 
    cbbc:	45 31 d8             	xor    %r11d,%r8d
    cbbf:	41 01 e8             	add    %ebp,%r8d
    cbc2:	44 89 cd             	mov    %r9d,%ebp
    cbc5:	41 c1 c1 0a          	rol    $0xa,%r9d
    cbc9:	f7 d5                	not    %ebp
    cbcb:	41 c1 c0 06          	rol    $0x6,%r8d
    cbcf:	09 cd                	or     %ecx,%ebp
    cbd1:	41 01 f0             	add    %esi,%r8d
    cbd4:	42 8d b4 26 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r12,1),%esi
    cbdb:	6e 
    cbdc:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    cbe1:	44 31 d5             	xor    %r10d,%ebp
    cbe4:	01 c5                	add    %eax,%ebp
    cbe6:	44 89 f8             	mov    %r15d,%eax
    cbe9:	f7 d0                	not    %eax
    cbeb:	c1 c5 0f             	rol    $0xf,%ebp
    cbee:	44 09 c0             	or     %r8d,%eax
    cbf1:	01 dd                	add    %ebx,%ebp
    cbf3:	42 8d 9c 23 f3 3e 70 	lea    0x6d703ef3(%rbx,%r12,1),%ebx
    cbfa:	6d 
    cbfb:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    cc00:	31 d0                	xor    %edx,%eax
    cc02:	01 c6                	add    %eax,%esi
    cc04:	44 89 f8             	mov    %r15d,%eax
    cc07:	41 89 cf             	mov    %ecx,%r15d
    cc0a:	c1 c1 0a             	rol    $0xa,%ecx
    cc0d:	c1 c6 07             	rol    $0x7,%esi
    cc10:	41 f7 d7             	not    %r15d
    cc13:	c1 c0 0a             	rol    $0xa,%eax
    cc16:	41 09 ef             	or     %ebp,%r15d
    cc19:	44 01 de             	add    %r11d,%esi
    cc1c:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
    cc23:	6e 
    cc24:	45 31 cf             	xor    %r9d,%r15d
    cc27:	41 01 df             	add    %ebx,%r15d
    cc2a:	44 89 c3             	mov    %r8d,%ebx
    cc2d:	41 c1 c7 0b          	rol    $0xb,%r15d
    cc31:	f7 d3                	not    %ebx
    cc33:	45 01 d7             	add    %r10d,%r15d
    cc36:	09 f3                	or     %esi,%ebx
    cc38:	47 8d 94 22 f3 3e 70 	lea    0x6d703ef3(%r10,%r12,1),%r10d
    cc3f:	6d 
    cc40:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
    cc45:	31 c3                	xor    %eax,%ebx
    cc47:	41 c1 c0 0a          	rol    $0xa,%r8d
    cc4b:	44 01 db             	add    %r11d,%ebx
    cc4e:	41 89 eb             	mov    %ebp,%r11d
    cc51:	c1 c5 0a             	rol    $0xa,%ebp
    cc54:	41 f7 d3             	not    %r11d
    cc57:	c1 c3 0e             	rol    $0xe,%ebx
    cc5a:	45 09 fb             	or     %r15d,%r11d
    cc5d:	01 d3                	add    %edx,%ebx
    cc5f:	42 8d 94 22 a1 eb d9 	lea    0x6ed9eba1(%rdx,%r12,1),%edx
    cc66:	6e 
    cc67:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    cc6c:	41 31 cb             	xor    %ecx,%r11d
    cc6f:	45 01 d3             	add    %r10d,%r11d
    cc72:	41 89 f2             	mov    %esi,%r10d
    cc75:	c1 c6 0a             	rol    $0xa,%esi
    cc78:	41 f7 d2             	not    %r10d
    cc7b:	41 c1 c3 08          	rol    $0x8,%r11d
    cc7f:	41 09 da             	or     %ebx,%r10d
    cc82:	45 01 cb             	add    %r9d,%r11d
    cc85:	47 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%r9,%r12,1),%r9d
    cc8c:	6d 
    cc8d:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    cc92:	45 31 c2             	xor    %r8d,%r10d
    cc95:	41 01 d2             	add    %edx,%r10d
    cc98:	44 89 fa             	mov    %r15d,%edx
    cc9b:	41 c1 c7 0a          	rol    $0xa,%r15d
    cc9f:	f7 d2                	not    %edx
    cca1:	41 c1 c2 09          	rol    $0x9,%r10d
    cca5:	44 09 da             	or     %r11d,%edx
    cca8:	41 01 c2             	add    %eax,%r10d
    ccab:	42 8d 84 20 a1 eb d9 	lea    0x6ed9eba1(%rax,%r12,1),%eax
    ccb2:	6e 
    ccb3:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    ccb8:	31 ea                	xor    %ebp,%edx
    ccba:	44 01 ca             	add    %r9d,%edx
    ccbd:	41 89 d9             	mov    %ebx,%r9d
    ccc0:	c1 c3 0a             	rol    $0xa,%ebx
    ccc3:	41 f7 d1             	not    %r9d
    ccc6:	c1 c2 06             	rol    $0x6,%edx
    ccc9:	45 09 d1             	or     %r10d,%r9d
    cccc:	01 ca                	add    %ecx,%edx
    ccce:	42 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%rcx,%r12,1),%ecx
    ccd5:	6d 
    ccd6:	41 31 f1             	xor    %esi,%r9d
    ccd9:	41 01 c1             	add    %eax,%r9d
    ccdc:	44 89 d8             	mov    %r11d,%eax
    ccdf:	f7 d0                	not    %eax
    cce1:	41 c1 c1 0d          	rol    $0xd,%r9d
    cce5:	09 d0                	or     %edx,%eax
    cce7:	45 01 c1             	add    %r8d,%r9d
    ccea:	47 8d 84 28 a1 eb d9 	lea    0x6ed9eba1(%r8,%r13,1),%r8d
    ccf1:	6e 
    ccf2:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
    ccf7:	44 31 f8             	xor    %r15d,%eax
    ccfa:	01 c8                	add    %ecx,%eax
    ccfc:	44 89 d1             	mov    %r10d,%ecx
    ccff:	41 c1 c3 0a          	rol    $0xa,%r11d
    cd03:	c1 c0 06             	rol    $0x6,%eax
    cd06:	f7 d1                	not    %ecx
    cd08:	41 c1 c2 0a          	rol    $0xa,%r10d
    cd0c:	44 09 c9             	or     %r9d,%ecx
    cd0f:	01 e8                	add    %ebp,%eax
    cd11:	42 8d ac 35 f3 3e 70 	lea    0x6d703ef3(%rbp,%r14,1),%ebp
    cd18:	6d 
    cd19:	44 8b 34 24          	mov    (%rsp),%r14d
    cd1d:	31 d9                	xor    %ebx,%ecx
    cd1f:	44 01 c1             	add    %r8d,%ecx
    cd22:	41 89 d0             	mov    %edx,%r8d
    cd25:	c1 c2 0a             	rol    $0xa,%edx
    cd28:	41 f7 d0             	not    %r8d
    cd2b:	c1 c1 0f             	rol    $0xf,%ecx
    cd2e:	41 09 c0             	or     %eax,%r8d
    cd31:	01 f1                	add    %esi,%ecx
    cd33:	42 8d b4 36 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r14,1),%esi
    cd3a:	6e 
    cd3b:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    cd40:	45 31 d8             	xor    %r11d,%r8d
    cd43:	41 01 e8             	add    %ebp,%r8d
    cd46:	44 89 cd             	mov    %r9d,%ebp
    cd49:	41 c1 c1 0a          	rol    $0xa,%r9d
    cd4d:	f7 d5                	not    %ebp
    cd4f:	41 c1 c0 0e          	rol    $0xe,%r8d
    cd53:	09 cd                	or     %ecx,%ebp
    cd55:	45 01 f8             	add    %r15d,%r8d
    cd58:	47 8d bc 37 f3 3e 70 	lea    0x6d703ef3(%r15,%r14,1),%r15d
    cd5f:	6d 
    cd60:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    cd65:	44 31 d5             	xor    %r10d,%ebp
    cd68:	01 f5                	add    %esi,%ebp
    cd6a:	89 c6                	mov    %eax,%esi
    cd6c:	c1 c0 0a             	rol    $0xa,%eax
    cd6f:	f7 d6                	not    %esi
    cd71:	c1 c5 0e             	rol    $0xe,%ebp
    cd74:	44 09 c6             	or     %r8d,%esi
    cd77:	01 dd                	add    %ebx,%ebp
    cd79:	42 8d 9c 2b a1 eb d9 	lea    0x6ed9eba1(%rbx,%r13,1),%ebx
    cd80:	6e 
    cd81:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    cd86:	31 d6                	xor    %edx,%esi
    cd88:	44 01 fe             	add    %r15d,%esi
    cd8b:	41 89 cf             	mov    %ecx,%r15d
    cd8e:	41 f7 d7             	not    %r15d
    cd91:	c1 c6 0c             	rol    $0xc,%esi
    cd94:	41 09 ef             	or     %ebp,%r15d
    cd97:	44 01 de             	add    %r11d,%esi
    cd9a:	47 8d 9c 2b f3 3e 70 	lea    0x6d703ef3(%r11,%r13,1),%r11d
    cda1:	6d 
    cda2:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    cda7:	45 31 cf             	xor    %r9d,%r15d
    cdaa:	41 01 df             	add    %ebx,%r15d
    cdad:	44 89 c3             	mov    %r8d,%ebx
    cdb0:	41 c1 c7 08          	rol    $0x8,%r15d
    cdb4:	f7 d3                	not    %ebx
    cdb6:	45 01 d7             	add    %r10d,%r15d
    cdb9:	09 f3                	or     %esi,%ebx
    cdbb:	c1 c1 0a             	rol    $0xa,%ecx
    cdbe:	47 8d 94 2a a1 eb d9 	lea    0x6ed9eba1(%r10,%r13,1),%r10d
    cdc5:	6e 
    cdc6:	31 c3                	xor    %eax,%ebx
    cdc8:	41 c1 c0 0a          	rol    $0xa,%r8d
    cdcc:	44 01 db             	add    %r11d,%ebx
    cdcf:	41 89 eb             	mov    %ebp,%r11d
    cdd2:	c1 c5 0a             	rol    $0xa,%ebp
    cdd5:	41 f7 d3             	not    %r11d
    cdd8:	c1 c3 0d             	rol    $0xd,%ebx
    cddb:	45 09 fb             	or     %r15d,%r11d
    cdde:	01 d3                	add    %edx,%ebx
    cde0:	42 8d 94 32 f3 3e 70 	lea    0x6d703ef3(%rdx,%r14,1),%edx
    cde7:	6d 
    cde8:	44 8b 34 24          	mov    (%rsp),%r14d
    cdec:	41 31 cb             	xor    %ecx,%r11d
    cdef:	45 01 d3             	add    %r10d,%r11d
    cdf2:	41 89 f2             	mov    %esi,%r10d
    cdf5:	c1 c6 0a             	rol    $0xa,%esi
    cdf8:	41 f7 d2             	not    %r10d
    cdfb:	41 c1 c3 0d          	rol    $0xd,%r11d
    cdff:	41 09 da             	or     %ebx,%r10d
    ce02:	45 01 cb             	add    %r9d,%r11d
    ce05:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
    ce0c:	6e 
    ce0d:	45 31 c2             	xor    %r8d,%r10d
    ce10:	41 01 d2             	add    %edx,%r10d
    ce13:	44 89 fa             	mov    %r15d,%edx
    ce16:	41 c1 c7 0a          	rol    $0xa,%r15d
    ce1a:	f7 d2                	not    %edx
    ce1c:	41 c1 c2 05          	rol    $0x5,%r10d
    ce20:	44 09 da             	or     %r11d,%edx
    ce23:	41 01 c2             	add    %eax,%r10d
    ce26:	42 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%rax,%r14,1),%eax
    ce2d:	6d 
    ce2e:	44 8b 74 24 1c       	mov    0x1c(%rsp),%r14d
    ce33:	31 ea                	xor    %ebp,%edx
    ce35:	44 01 ca             	add    %r9d,%edx
    ce38:	41 89 d9             	mov    %ebx,%r9d
    ce3b:	c1 c3 0a             	rol    $0xa,%ebx
    ce3e:	41 f7 d1             	not    %r9d
    ce41:	c1 c2 06             	rol    $0x6,%edx
    ce44:	45 09 d1             	or     %r10d,%r9d
    ce47:	01 ca                	add    %ecx,%edx
    ce49:	42 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r14,1),%ecx
    ce50:	6e 
    ce51:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
    ce56:	41 31 f1             	xor    %esi,%r9d
    ce59:	41 01 c1             	add    %eax,%r9d
    ce5c:	44 89 d8             	mov    %r11d,%eax
    ce5f:	41 c1 c1 0e          	rol    $0xe,%r9d
    ce63:	f7 d0                	not    %eax
    ce65:	45 01 c1             	add    %r8d,%r9d
    ce68:	09 d0                	or     %edx,%eax
    ce6a:	47 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%r8,%r14,1),%r8d
    ce71:	6d 
    ce72:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    ce77:	44 31 f8             	xor    %r15d,%eax
    ce7a:	41 c1 c3 0a          	rol    $0xa,%r11d
    ce7e:	01 c8                	add    %ecx,%eax
    ce80:	44 89 d1             	mov    %r10d,%ecx
    ce83:	41 c1 c2 0a          	rol    $0xa,%r10d
    ce87:	f7 d1                	not    %ecx
    ce89:	c1 c0 05             	rol    $0x5,%eax
    ce8c:	44 09 c9             	or     %r9d,%ecx
    ce8f:	01 e8                	add    %ebp,%eax
    ce91:	42 8d ac 35 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r14,1),%ebp
    ce98:	6e 
    ce99:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
    ce9e:	31 d9                	xor    %ebx,%ecx
    cea0:	44 01 c1             	add    %r8d,%ecx
    cea3:	41 89 d0             	mov    %edx,%r8d
    cea6:	c1 c2 0a             	rol    $0xa,%edx
    cea9:	41 f7 d0             	not    %r8d
    ceac:	c1 c1 0d             	rol    $0xd,%ecx
    ceaf:	41 09 c0             	or     %eax,%r8d
    ceb2:	01 f1                	add    %esi,%ecx
    ceb4:	42 8d b4 2e f3 3e 70 	lea    0x6d703ef3(%rsi,%r13,1),%esi
    cebb:	6d 
    cebc:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    cec1:	45 31 d8             	xor    %r11d,%r8d
    cec4:	41 01 e8             	add    %ebp,%r8d
    cec7:	44 89 cd             	mov    %r9d,%ebp
    ceca:	41 c1 c1 0a          	rol    $0xa,%r9d
    cece:	f7 d5                	not    %ebp
    ced0:	41 c1 c0 0c          	rol    $0xc,%r8d
    ced4:	09 cd                	or     %ecx,%ebp
    ced6:	45 01 f8             	add    %r15d,%r8d
    ced9:	47 8d bc 2f a1 eb d9 	lea    0x6ed9eba1(%r15,%r13,1),%r15d
    cee0:	6e 
    cee1:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    cee6:	44 31 d5             	xor    %r10d,%ebp
    cee9:	01 f5                	add    %esi,%ebp
    ceeb:	89 c6                	mov    %eax,%esi
    ceed:	c1 c0 0a             	rol    $0xa,%eax
    cef0:	f7 d6                	not    %esi
    cef2:	c1 c5 0d             	rol    $0xd,%ebp
    cef5:	44 09 c6             	or     %r8d,%esi
    cef8:	01 dd                	add    %ebx,%ebp
    cefa:	42 8d 9c 33 f3 3e 70 	lea    0x6d703ef3(%rbx,%r14,1),%ebx
    cf01:	6d 
    cf02:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    cf07:	31 d6                	xor    %edx,%esi
    cf09:	44 01 fe             	add    %r15d,%esi
    cf0c:	41 89 cf             	mov    %ecx,%r15d
    cf0f:	41 f7 d7             	not    %r15d
    cf12:	c1 c6 07             	rol    $0x7,%esi
    cf15:	41 09 ef             	or     %ebp,%r15d
    cf18:	44 01 de             	add    %r11d,%esi
    cf1b:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
    cf22:	6e 
    cf23:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
    cf28:	45 31 cf             	xor    %r9d,%r15d
    cf2b:	41 01 df             	add    %ebx,%r15d
    cf2e:	44 89 c3             	mov    %r8d,%ebx
    cf31:	c1 c1 0a             	rol    $0xa,%ecx
    cf34:	41 c1 c7 07          	rol    $0x7,%r15d
    cf38:	f7 d3                	not    %ebx
    cf3a:	41 c1 c0 0a          	rol    $0xa,%r8d
    cf3e:	09 f3                	or     %esi,%ebx
    cf40:	45 01 d7             	add    %r10d,%r15d
    cf43:	47 8d 94 2a f3 3e 70 	lea    0x6d703ef3(%r10,%r13,1),%r10d
    cf4a:	6d 
    cf4b:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    cf50:	31 c3                	xor    %eax,%ebx
    cf52:	44 01 db             	add    %r11d,%ebx
    cf55:	41 89 eb             	mov    %ebp,%r11d
    cf58:	c1 c5 0a             	rol    $0xa,%ebp
    cf5b:	41 f7 d3             	not    %r11d
    cf5e:	c1 c3 05             	rol    $0x5,%ebx
    cf61:	45 09 fb             	or     %r15d,%r11d
    cf64:	01 d3                	add    %edx,%ebx
    cf66:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
    cf6d:	8f 
    cf6e:	41 31 cb             	xor    %ecx,%r11d
    cf71:	45 01 d3             	add    %r10d,%r11d
    cf74:	41 89 f2             	mov    %esi,%r10d
    cf77:	41 31 da             	xor    %ebx,%r10d
    cf7a:	41 c1 c3 05          	rol    $0x5,%r11d
    cf7e:	45 21 c2             	and    %r8d,%r10d
    cf81:	45 01 cb             	add    %r9d,%r11d
    cf84:	47 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%r9,%r14,1),%r9d
    cf8b:	7a 
    cf8c:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
    cf91:	41 31 f2             	xor    %esi,%r10d
    cf94:	c1 c6 0a             	rol    $0xa,%esi
    cf97:	41 01 d2             	add    %edx,%r10d
    cf9a:	44 89 fa             	mov    %r15d,%edx
    cf9d:	41 c1 c7 0a          	rol    $0xa,%r15d
    cfa1:	31 ea                	xor    %ebp,%edx
    cfa3:	41 c1 c2 0b          	rol    $0xb,%r10d
    cfa7:	44 21 da             	and    %r11d,%edx
    cfaa:	41 01 c2             	add    %eax,%r10d
    cfad:	42 8d 84 30 dc bc 1b 	lea    -0x70e44324(%rax,%r14,1),%eax
    cfb4:	8f 
    cfb5:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    cfba:	31 ea                	xor    %ebp,%edx
    cfbc:	44 01 ca             	add    %r9d,%edx
    cfbf:	41 89 d9             	mov    %ebx,%r9d
    cfc2:	45 31 d1             	xor    %r10d,%r9d
    cfc5:	c1 c2 0f             	rol    $0xf,%edx
    cfc8:	41 21 f1             	and    %esi,%r9d
    cfcb:	01 ca                	add    %ecx,%edx
    cfcd:	42 8d 8c 21 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r12,1),%ecx
    cfd4:	7a 
    cfd5:	41 31 d9             	xor    %ebx,%r9d
    cfd8:	c1 c3 0a             	rol    $0xa,%ebx
    cfdb:	41 01 c1             	add    %eax,%r9d
    cfde:	44 89 d8             	mov    %r11d,%eax
    cfe1:	41 c1 c3 0a          	rol    $0xa,%r11d
    cfe5:	44 31 f8             	xor    %r15d,%eax
    cfe8:	41 c1 c1 0c          	rol    $0xc,%r9d
    cfec:	21 d0                	and    %edx,%eax
    cfee:	45 01 c1             	add    %r8d,%r9d
    cff1:	47 8d 84 30 dc bc 1b 	lea    -0x70e44324(%r8,%r14,1),%r8d
    cff8:	8f 
    cff9:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
    cffe:	44 31 f8             	xor    %r15d,%eax
    d001:	01 c8                	add    %ecx,%eax
    d003:	44 89 d1             	mov    %r10d,%ecx
    d006:	44 31 c9             	xor    %r9d,%ecx
    d009:	c1 c0 05             	rol    $0x5,%eax
    d00c:	21 d9                	and    %ebx,%ecx
    d00e:	01 e8                	add    %ebp,%eax
    d010:	42 8d ac 35 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r14,1),%ebp
    d017:	7a 
    d018:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
    d01d:	44 31 d1             	xor    %r10d,%ecx
    d020:	41 c1 c2 0a          	rol    $0xa,%r10d
    d024:	44 01 c1             	add    %r8d,%ecx
    d027:	41 89 d0             	mov    %edx,%r8d
    d02a:	c1 c2 0a             	rol    $0xa,%edx
    d02d:	45 31 d8             	xor    %r11d,%r8d
    d030:	c1 c1 0e             	rol    $0xe,%ecx
    d033:	41 21 c0             	and    %eax,%r8d
    d036:	01 f1                	add    %esi,%ecx
    d038:	42 8d b4 36 dc bc 1b 	lea    -0x70e44324(%rsi,%r14,1),%esi
    d03f:	8f 
    d040:	45 31 d8             	xor    %r11d,%r8d
    d043:	41 01 e8             	add    %ebp,%r8d
    d046:	44 89 cd             	mov    %r9d,%ebp
    d049:	31 cd                	xor    %ecx,%ebp
    d04b:	41 c1 c0 08          	rol    $0x8,%r8d
    d04f:	44 21 d5             	and    %r10d,%ebp
    d052:	45 01 f8             	add    %r15d,%r8d
    d055:	47 8d bc 2f e9 76 6d 	lea    0x7a6d76e9(%r15,%r13,1),%r15d
    d05c:	7a 
    d05d:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    d062:	44 31 cd             	xor    %r9d,%ebp
    d065:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    d06a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
    d06f:	01 f5                	add    %esi,%ebp
    d071:	89 c6                	mov    %eax,%esi
    d073:	c1 c5 0f             	rol    $0xf,%ebp
    d076:	01 dd                	add    %ebx,%ebp
    d078:	41 c1 c1 0a          	rol    $0xa,%r9d
    d07c:	31 d6                	xor    %edx,%esi
    d07e:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
    d085:	8f 
    d086:	44 21 c6             	and    %r8d,%esi
    d089:	c1 c0 0a             	rol    $0xa,%eax
    d08c:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    d091:	31 d6                	xor    %edx,%esi
    d093:	44 01 fe             	add    %r15d,%esi
    d096:	41 89 cf             	mov    %ecx,%r15d
    d099:	41 31 ef             	xor    %ebp,%r15d
    d09c:	c1 c6 0b             	rol    $0xb,%esi
    d09f:	45 21 cf             	and    %r9d,%r15d
    d0a2:	44 01 de             	add    %r11d,%esi
    d0a5:	47 8d 9c 23 e9 76 6d 	lea    0x7a6d76e9(%r11,%r12,1),%r11d
    d0ac:	7a 
    d0ad:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
    d0b2:	41 31 cf             	xor    %ecx,%r15d
    d0b5:	c1 c1 0a             	rol    $0xa,%ecx
    d0b8:	41 01 df             	add    %ebx,%r15d
    d0bb:	44 89 c3             	mov    %r8d,%ebx
    d0be:	41 c1 c0 0a          	rol    $0xa,%r8d
    d0c2:	31 c3                	xor    %eax,%ebx
    d0c4:	41 c1 c7 0e          	rol    $0xe,%r15d
    d0c8:	21 f3                	and    %esi,%ebx
    d0ca:	45 01 d7             	add    %r10d,%r15d
    d0cd:	47 8d 94 32 dc bc 1b 	lea    -0x70e44324(%r10,%r14,1),%r10d
    d0d4:	8f 
    d0d5:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    d0da:	31 c3                	xor    %eax,%ebx
    d0dc:	44 01 db             	add    %r11d,%ebx
    d0df:	41 89 eb             	mov    %ebp,%r11d
    d0e2:	45 31 fb             	xor    %r15d,%r11d
    d0e5:	c1 c3 0e             	rol    $0xe,%ebx
    d0e8:	41 21 cb             	and    %ecx,%r11d
    d0eb:	01 d3                	add    %edx,%ebx
    d0ed:	42 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%rdx,%r14,1),%edx
    d0f4:	7a 
    d0f5:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    d0fa:	41 31 eb             	xor    %ebp,%r11d
    d0fd:	c1 c5 0a             	rol    $0xa,%ebp
    d100:	45 01 d3             	add    %r10d,%r11d
    d103:	41 89 f2             	mov    %esi,%r10d
    d106:	45 31 c2             	xor    %r8d,%r10d
    d109:	41 c1 c3 0f          	rol    $0xf,%r11d
    d10d:	41 21 da             	and    %ebx,%r10d
    d110:	45 01 cb             	add    %r9d,%r11d
    d113:	47 8d 8c 31 dc bc 1b 	lea    -0x70e44324(%r9,%r14,1),%r9d
    d11a:	8f 
    d11b:	45 31 c2             	xor    %r8d,%r10d
    d11e:	41 01 d2             	add    %edx,%r10d
    d121:	44 89 fa             	mov    %r15d,%edx
    d124:	c1 c6 0a             	rol    $0xa,%esi
    d127:	44 31 da             	xor    %r11d,%edx
    d12a:	41 c1 c2 0e          	rol    $0xe,%r10d
    d12e:	21 ea                	and    %ebp,%edx
    d130:	41 01 c2             	add    %eax,%r10d
    d133:	42 8d 84 20 e9 76 6d 	lea    0x7a6d76e9(%rax,%r12,1),%eax
    d13a:	7a 
    d13b:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    d140:	44 31 fa             	xor    %r15d,%edx
    d143:	41 c1 c7 0a          	rol    $0xa,%r15d
    d147:	44 01 ca             	add    %r9d,%edx
    d14a:	41 89 d9             	mov    %ebx,%r9d
    d14d:	c1 c3 0a             	rol    $0xa,%ebx
    d150:	41 31 f1             	xor    %esi,%r9d
    d153:	c1 c2 09             	rol    $0x9,%edx
    d156:	45 21 d1             	and    %r10d,%r9d
    d159:	01 ca                	add    %ecx,%edx
    d15b:	42 8d 8c 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%ecx
    d162:	8f 
    d163:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    d168:	41 31 f1             	xor    %esi,%r9d
    d16b:	41 01 c1             	add    %eax,%r9d
    d16e:	44 89 d8             	mov    %r11d,%eax
    d171:	31 d0                	xor    %edx,%eax
    d173:	41 c1 c1 06          	rol    $0x6,%r9d
    d177:	44 21 f8             	and    %r15d,%eax
    d17a:	45 01 c1             	add    %r8d,%r9d
    d17d:	47 8d 84 28 e9 76 6d 	lea    0x7a6d76e9(%r8,%r13,1),%r8d
    d184:	7a 
    d185:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    d18a:	44 31 d8             	xor    %r11d,%eax
    d18d:	41 c1 c3 0a          	rol    $0xa,%r11d
    d191:	01 c8                	add    %ecx,%eax
    d193:	44 89 d1             	mov    %r10d,%ecx
    d196:	41 c1 c2 0a          	rol    $0xa,%r10d
    d19a:	31 d9                	xor    %ebx,%ecx
    d19c:	c1 c0 08             	rol    $0x8,%eax
    d19f:	44 21 c9             	and    %r9d,%ecx
    d1a2:	01 e8                	add    %ebp,%eax
    d1a4:	42 8d ac 2d dc bc 1b 	lea    -0x70e44324(%rbp,%r13,1),%ebp
    d1ab:	8f 
    d1ac:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    d1b1:	31 d9                	xor    %ebx,%ecx
    d1b3:	44 01 c1             	add    %r8d,%ecx
    d1b6:	41 89 d0             	mov    %edx,%r8d
    d1b9:	c1 c1 0e             	rol    $0xe,%ecx
    d1bc:	01 f1                	add    %esi,%ecx
    d1be:	41 31 c0             	xor    %eax,%r8d
    d1c1:	42 8d b4 2e e9 76 6d 	lea    0x7a6d76e9(%rsi,%r13,1),%esi
    d1c8:	7a 
    d1c9:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    d1ce:	45 21 d8             	and    %r11d,%r8d
    d1d1:	41 31 d0             	xor    %edx,%r8d
    d1d4:	c1 c2 0a             	rol    $0xa,%edx
    d1d7:	41 01 e8             	add    %ebp,%r8d
    d1da:	44 89 cd             	mov    %r9d,%ebp
    d1dd:	41 c1 c1 0a          	rol    $0xa,%r9d
    d1e1:	44 31 d5             	xor    %r10d,%ebp
    d1e4:	41 c1 c0 09          	rol    $0x9,%r8d
    d1e8:	21 cd                	and    %ecx,%ebp
    d1ea:	45 01 f8             	add    %r15d,%r8d
    d1ed:	47 8d bc 27 dc bc 1b 	lea    -0x70e44324(%r15,%r12,1),%r15d
    d1f4:	8f 
    d1f5:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    d1fa:	44 31 d5             	xor    %r10d,%ebp
    d1fd:	01 f5                	add    %esi,%ebp
    d1ff:	89 c6                	mov    %eax,%esi
    d201:	44 31 c6             	xor    %r8d,%esi
    d204:	c1 c5 06             	rol    $0x6,%ebp
    d207:	21 d6                	and    %edx,%esi
    d209:	01 dd                	add    %ebx,%ebp
    d20b:	42 8d 9c 33 e9 76 6d 	lea    0x7a6d76e9(%rbx,%r14,1),%ebx
    d212:	7a 
    d213:	44 8b 34 24          	mov    (%rsp),%r14d
    d217:	31 c6                	xor    %eax,%esi
    d219:	c1 c0 0a             	rol    $0xa,%eax
    d21c:	44 01 fe             	add    %r15d,%esi
    d21f:	41 89 cf             	mov    %ecx,%r15d
    d222:	c1 c1 0a             	rol    $0xa,%ecx
    d225:	45 31 cf             	xor    %r9d,%r15d
    d228:	c1 c6 0e             	rol    $0xe,%esi
    d22b:	41 21 ef             	and    %ebp,%r15d
    d22e:	44 01 de             	add    %r11d,%esi
    d231:	47 8d 9c 23 dc bc 1b 	lea    -0x70e44324(%r11,%r12,1),%r11d
    d238:	8f 
    d239:	45 31 cf             	xor    %r9d,%r15d
    d23c:	41 01 df             	add    %ebx,%r15d
    d23f:	44 89 c3             	mov    %r8d,%ebx
    d242:	31 f3                	xor    %esi,%ebx
    d244:	41 c1 c7 09          	rol    $0x9,%r15d
    d248:	21 c3                	and    %eax,%ebx
    d24a:	45 01 d7             	add    %r10d,%r15d
    d24d:	47 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%r10,%r14,1),%r10d
    d254:	7a 
    d255:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
    d25a:	44 31 c3             	xor    %r8d,%ebx
    d25d:	44 01 db             	add    %r11d,%ebx
    d260:	41 89 eb             	mov    %ebp,%r11d
    d263:	c1 c3 05             	rol    $0x5,%ebx
    d266:	41 31 cb             	xor    %ecx,%r11d
    d269:	41 c1 c0 0a          	rol    $0xa,%r8d
    d26d:	45 21 fb             	and    %r15d,%r11d
    d270:	01 d3                	add    %edx,%ebx
    d272:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
    d279:	8f 
    d27a:	c1 c5 0a             	rol    $0xa,%ebp
    d27d:	41 31 cb             	xor    %ecx,%r11d
    d280:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    d285:	45 01 d3             	add    %r10d,%r11d
    d288:	41 89 f2             	mov    %esi,%r10d
    d28b:	41 31 da             	xor    %ebx,%r10d
    d28e:	41 c1 c3 0c          	rol    $0xc,%r11d
    d292:	45 21 c2             	and    %r8d,%r10d
    d295:	45 01 cb             	add    %r9d,%r11d
    d298:	47 8d 8c 29 e9 76 6d 	lea    0x7a6d76e9(%r9,%r13,1),%r9d
    d29f:	7a 
    d2a0:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
    d2a5:	41 31 f2             	xor    %esi,%r10d
    d2a8:	c1 c6 0a             	rol    $0xa,%esi
    d2ab:	41 01 d2             	add    %edx,%r10d
    d2ae:	44 89 fa             	mov    %r15d,%edx
    d2b1:	41 c1 c7 0a          	rol    $0xa,%r15d
    d2b5:	31 ea                	xor    %ebp,%edx
    d2b7:	41 c1 c2 06          	rol    $0x6,%r10d
    d2bb:	44 21 da             	and    %r11d,%edx
    d2be:	41 01 c2             	add    %eax,%r10d
    d2c1:	42 8d 84 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%eax
    d2c8:	8f 
    d2c9:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    d2ce:	31 ea                	xor    %ebp,%edx
    d2d0:	44 01 ca             	add    %r9d,%edx
    d2d3:	41 89 d9             	mov    %ebx,%r9d
    d2d6:	45 31 d1             	xor    %r10d,%r9d
    d2d9:	c1 c2 09             	rol    $0x9,%edx
    d2dc:	41 21 f1             	and    %esi,%r9d
    d2df:	01 ca                	add    %ecx,%edx
    d2e1:	42 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r14,1),%ecx
    d2e8:	7a 
    d2e9:	41 31 d9             	xor    %ebx,%r9d
    d2ec:	c1 c3 0a             	rol    $0xa,%ebx
    d2ef:	41 01 c1             	add    %eax,%r9d
    d2f2:	44 89 d8             	mov    %r11d,%eax
    d2f5:	41 c1 c1 08          	rol    $0x8,%r9d
    d2f9:	44 31 f8             	xor    %r15d,%eax
    d2fc:	45 01 c1             	add    %r8d,%r9d
    d2ff:	21 d0                	and    %edx,%eax
    d301:	47 8d 84 28 dc bc 1b 	lea    -0x70e44324(%r8,%r13,1),%r8d
    d308:	8f 
    d309:	41 c1 c3 0a          	rol    $0xa,%r11d
    d30d:	44 31 f8             	xor    %r15d,%eax
    d310:	44 8b 2c 24          	mov    (%rsp),%r13d
    d314:	01 c8                	add    %ecx,%eax
    d316:	44 89 d1             	mov    %r10d,%ecx
    d319:	44 31 c9             	xor    %r9d,%ecx
    d31c:	c1 c0 0c             	rol    $0xc,%eax
    d31f:	21 d9                	and    %ebx,%ecx
    d321:	01 e8                	add    %ebp,%eax
    d323:	42 8d ac 25 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r12,1),%ebp
    d32a:	7a 
    d32b:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    d330:	44 31 d1             	xor    %r10d,%ecx
    d333:	41 c1 c2 0a          	rol    $0xa,%r10d
    d337:	44 01 c1             	add    %r8d,%ecx
    d33a:	41 89 d0             	mov    %edx,%r8d
    d33d:	c1 c2 0a             	rol    $0xa,%edx
    d340:	45 31 d8             	xor    %r11d,%r8d
    d343:	c1 c1 06             	rol    $0x6,%ecx
    d346:	41 21 c0             	and    %eax,%r8d
    d349:	01 f1                	add    %esi,%ecx
    d34b:	42 8d b4 26 dc bc 1b 	lea    -0x70e44324(%rsi,%r12,1),%esi
    d352:	8f 
    d353:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    d358:	45 31 d8             	xor    %r11d,%r8d
    d35b:	41 01 e8             	add    %ebp,%r8d
    d35e:	44 89 cd             	mov    %r9d,%ebp
    d361:	31 cd                	xor    %ecx,%ebp
    d363:	41 c1 c0 05          	rol    $0x5,%r8d
    d367:	44 21 d5             	and    %r10d,%ebp
    d36a:	45 01 f8             	add    %r15d,%r8d
    d36d:	47 8d bc 27 e9 76 6d 	lea    0x7a6d76e9(%r15,%r12,1),%r15d
    d374:	7a 
    d375:	44 31 cd             	xor    %r9d,%ebp
    d378:	41 c1 c1 0a          	rol    $0xa,%r9d
    d37c:	01 f5                	add    %esi,%ebp
    d37e:	89 c6                	mov    %eax,%esi
    d380:	31 d6                	xor    %edx,%esi
    d382:	c1 c5 05             	rol    $0x5,%ebp
    d385:	44 21 c6             	and    %r8d,%esi
    d388:	01 dd                	add    %ebx,%ebp
    d38a:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
    d391:	8f 
    d392:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
    d397:	31 d6                	xor    %edx,%esi
    d399:	44 01 fe             	add    %r15d,%esi
    d39c:	41 89 cf             	mov    %ecx,%r15d
    d39f:	c1 c6 0f             	rol    $0xf,%esi
    d3a2:	44 01 de             	add    %r11d,%esi
    d3a5:	41 31 ef             	xor    %ebp,%r15d
    d3a8:	c1 c0 0a             	rol    $0xa,%eax
    d3ab:	47 8d 9c 2b e9 76 6d 	lea    0x7a6d76e9(%r11,%r13,1),%r11d
    d3b2:	7a 
    d3b3:	45 21 cf             	and    %r9d,%r15d
    d3b6:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
    d3bb:	41 31 cf             	xor    %ecx,%r15d
    d3be:	c1 c1 0a             	rol    $0xa,%ecx
    d3c1:	44 01 fb             	add    %r15d,%ebx
    d3c4:	41 89 cf             	mov    %ecx,%r15d
    d3c7:	44 89 c1             	mov    %r8d,%ecx
    d3ca:	41 c1 c0 0a          	rol    $0xa,%r8d
    d3ce:	31 c1                	xor    %eax,%ecx
    d3d0:	c1 c3 0c             	rol    $0xc,%ebx
    d3d3:	21 f1                	and    %esi,%ecx
    d3d5:	44 01 d3             	add    %r10d,%ebx
    d3d8:	47 8d 94 2a 4e fd 53 	lea    -0x56ac02b2(%r10,%r13,1),%r10d
    d3df:	a9 
    d3e0:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    d3e5:	31 c1                	xor    %eax,%ecx
    d3e7:	44 01 d9             	add    %r11d,%ecx
    d3ea:	45 89 fb             	mov    %r15d,%r11d
    d3ed:	41 f7 d3             	not    %r11d
    d3f0:	c1 c1 08             	rol    $0x8,%ecx
    d3f3:	41 09 eb             	or     %ebp,%r11d
    d3f6:	01 d1                	add    %edx,%ecx
    d3f8:	c1 c5 0a             	rol    $0xa,%ebp
    d3fb:	03 54 24 18          	add    0x18(%rsp),%edx
    d3ff:	41 31 db             	xor    %ebx,%r11d
    d402:	45 01 da             	add    %r11d,%r10d
    d405:	41 89 f3             	mov    %esi,%r11d
    d408:	c1 c6 0a             	rol    $0xa,%esi
    d40b:	45 31 c3             	xor    %r8d,%r11d
    d40e:	41 c1 c2 09          	rol    $0x9,%r10d
    d412:	41 31 cb             	xor    %ecx,%r11d
    d415:	45 01 ca             	add    %r9d,%r10d
    d418:	47 8d 8c 29 4e fd 53 	lea    -0x56ac02b2(%r9,%r13,1),%r9d
    d41f:	a9 
    d420:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    d425:	44 01 da             	add    %r11d,%edx
    d428:	41 89 eb             	mov    %ebp,%r11d
    d42b:	41 f7 d3             	not    %r11d
    d42e:	c1 c2 08             	rol    $0x8,%edx
    d431:	41 09 db             	or     %ebx,%r11d
    d434:	01 c2                	add    %eax,%edx
    d436:	45 31 d3             	xor    %r10d,%r11d
    d439:	45 01 d9             	add    %r11d,%r9d
    d43c:	41 89 cb             	mov    %ecx,%r11d
    d43f:	41 c1 c1 0f          	rol    $0xf,%r9d
    d443:	41 31 f3             	xor    %esi,%r11d
    d446:	c1 c3 0a             	rol    $0xa,%ebx
    d449:	03 44 24 20          	add    0x20(%rsp),%eax
    d44d:	41 31 d3             	xor    %edx,%r11d
    d450:	45 01 f9             	add    %r15d,%r9d
    d453:	47 8d bc 2f 4e fd 53 	lea    -0x56ac02b2(%r15,%r13,1),%r15d
    d45a:	a9 
    d45b:	c1 c1 0a             	rol    $0xa,%ecx
    d45e:	41 01 c3             	add    %eax,%r11d
    d461:	89 d8                	mov    %ebx,%eax
    d463:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    d468:	f7 d0                	not    %eax
    d46a:	41 c1 c3 05          	rol    $0x5,%r11d
    d46e:	44 09 d0             	or     %r10d,%eax
    d471:	45 01 c3             	add    %r8d,%r11d
    d474:	41 c1 c2 0a          	rol    $0xa,%r10d
    d478:	45 01 e0             	add    %r12d,%r8d
    d47b:	44 31 c8             	xor    %r9d,%eax
    d47e:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    d483:	41 01 c7             	add    %eax,%r15d
    d486:	89 d0                	mov    %edx,%eax
    d488:	c1 c2 0a             	rol    $0xa,%edx
    d48b:	31 c8                	xor    %ecx,%eax
    d48d:	41 c1 c7 05          	rol    $0x5,%r15d
    d491:	44 31 d8             	xor    %r11d,%eax
    d494:	41 01 ef             	add    %ebp,%r15d
    d497:	42 8d ac 35 4e fd 53 	lea    -0x56ac02b2(%rbp,%r14,1),%ebp
    d49e:	a9 
    d49f:	41 01 c0             	add    %eax,%r8d
    d4a2:	44 89 d0             	mov    %r10d,%eax
    d4a5:	f7 d0                	not    %eax
    d4a7:	41 c1 c0 0c          	rol    $0xc,%r8d
    d4ab:	44 09 c8             	or     %r9d,%eax
    d4ae:	41 01 f0             	add    %esi,%r8d
    d4b1:	41 c1 c1 0a          	rol    $0xa,%r9d
    d4b5:	03 74 24 04          	add    0x4(%rsp),%esi
    d4b9:	44 31 f8             	xor    %r15d,%eax
    d4bc:	01 c5                	add    %eax,%ebp
    d4be:	44 89 d8             	mov    %r11d,%eax
    d4c1:	31 d0                	xor    %edx,%eax
    d4c3:	c1 c5 0b             	rol    $0xb,%ebp
    d4c6:	44 31 c0             	xor    %r8d,%eax
    d4c9:	01 dd                	add    %ebx,%ebp
    d4cb:	01 c6                	add    %eax,%esi
    d4cd:	44 89 c8             	mov    %r9d,%eax
    d4d0:	41 c1 c3 0a          	rol    $0xa,%r11d
    d4d4:	f7 d0                	not    %eax
    d4d6:	c1 c6 09             	rol    $0x9,%esi
    d4d9:	41 89 c6             	mov    %eax,%r14d
    d4dc:	42 8d 84 23 4e fd 53 	lea    -0x56ac02b2(%rbx,%r12,1),%eax
    d4e3:	a9 
    d4e4:	44 89 c3             	mov    %r8d,%ebx
    d4e7:	01 ce                	add    %ecx,%esi
    d4e9:	45 09 fe             	or     %r15d,%r14d
    d4ec:	44 31 db             	xor    %r11d,%ebx
    d4ef:	41 c1 c7 0a          	rol    $0xa,%r15d
    d4f3:	44 01 e9             	add    %r13d,%ecx
    d4f6:	41 31 ee             	xor    %ebp,%r14d
    d4f9:	41 c1 c0 0a          	rol    $0xa,%r8d
    d4fd:	41 01 c6             	add    %eax,%r14d
    d500:	89 d8                	mov    %ebx,%eax
    d502:	44 89 fb             	mov    %r15d,%ebx
    d505:	31 f0                	xor    %esi,%eax
    d507:	41 c1 c6 06          	rol    $0x6,%r14d
    d50b:	f7 d3                	not    %ebx
    d50d:	01 c1                	add    %eax,%ecx
    d50f:	8b 44 24 18          	mov    0x18(%rsp),%eax
    d513:	45 01 d6             	add    %r10d,%r14d
    d516:	09 eb                	or     %ebp,%ebx
    d518:	c1 c1 0c             	rol    $0xc,%ecx
    d51b:	44 31 f3             	xor    %r14d,%ebx
    d51e:	c1 c5 0a             	rol    $0xa,%ebp
    d521:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
    d528:	a9 
    d529:	41 89 f2             	mov    %esi,%r10d
    d52c:	01 d1                	add    %edx,%ecx
    d52e:	c1 c6 0a             	rol    $0xa,%esi
    d531:	45 31 c2             	xor    %r8d,%r10d
    d534:	01 c3                	add    %eax,%ebx
    d536:	03 54 24 08          	add    0x8(%rsp),%edx
    d53a:	44 89 d0             	mov    %r10d,%eax
    d53d:	41 89 ea             	mov    %ebp,%r10d
    d540:	c1 c3 08             	rol    $0x8,%ebx
    d543:	31 c8                	xor    %ecx,%eax
    d545:	41 f7 d2             	not    %r10d
    d548:	44 01 cb             	add    %r9d,%ebx
    d54b:	01 c2                	add    %eax,%edx
    d54d:	8b 04 24             	mov    (%rsp),%eax
    d550:	45 09 f2             	or     %r14d,%r10d
    d553:	c1 c2 05             	rol    $0x5,%edx
    d556:	41 31 da             	xor    %ebx,%r10d
    d559:	41 8d 84 01 4e fd 53 	lea    -0x56ac02b2(%r9,%rax,1),%eax
    d560:	a9 
    d561:	41 89 c9             	mov    %ecx,%r9d
    d564:	44 01 da             	add    %r11d,%edx
    d567:	41 01 c2             	add    %eax,%r10d
    d56a:	41 31 f1             	xor    %esi,%r9d
    d56d:	41 c1 c6 0a          	rol    $0xa,%r14d
    d571:	44 03 5c 24 0c       	add    0xc(%rsp),%r11d
    d576:	41 c1 c2 0d          	rol    $0xd,%r10d
    d57a:	44 89 c8             	mov    %r9d,%eax
    d57d:	45 89 f1             	mov    %r14d,%r9d
    d580:	c1 c1 0a             	rol    $0xa,%ecx
    d583:	31 d0                	xor    %edx,%eax
    d585:	41 f7 d1             	not    %r9d
    d588:	45 01 fa             	add    %r15d,%r10d
    d58b:	41 01 c3             	add    %eax,%r11d
    d58e:	8b 44 24 10          	mov    0x10(%rsp),%eax
    d592:	41 09 d9             	or     %ebx,%r9d
    d595:	c1 c3 0a             	rol    $0xa,%ebx
    d598:	45 31 d1             	xor    %r10d,%r9d
    d59b:	41 c1 c3 0e          	rol    $0xe,%r11d
    d59f:	41 8d 84 07 4e fd 53 	lea    -0x56ac02b2(%r15,%rax,1),%eax
    d5a6:	a9 
    d5a7:	41 89 df             	mov    %ebx,%r15d
    d5aa:	45 01 c3             	add    %r8d,%r11d
    d5ad:	45 01 e0             	add    %r12d,%r8d
    d5b0:	41 01 c1             	add    %eax,%r9d
    d5b3:	41 f7 d7             	not    %r15d
    d5b6:	89 d0                	mov    %edx,%eax
    d5b8:	c1 c2 0a             	rol    $0xa,%edx
    d5bb:	31 c8                	xor    %ecx,%eax
    d5bd:	41 c1 c1 0c          	rol    $0xc,%r9d
    d5c1:	45 89 fc             	mov    %r15d,%r12d
    d5c4:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
    d5c9:	41 01 e9             	add    %ebp,%r9d
    d5cc:	44 31 d8             	xor    %r11d,%eax
    d5cf:	45 09 d4             	or     %r10d,%r12d
    d5d2:	41 c1 c2 0a          	rol    $0xa,%r10d
    d5d6:	41 01 c0             	add    %eax,%r8d
    d5d9:	45 31 cc             	xor    %r9d,%r12d
    d5dc:	42 8d 84 3d 4e fd 53 	lea    -0x56ac02b2(%rbp,%r15,1),%eax
    d5e3:	a9 
    d5e4:	44 89 dd             	mov    %r11d,%ebp
    d5e7:	41 01 c4             	add    %eax,%r12d
    d5ea:	41 c1 c0 06          	rol    $0x6,%r8d
    d5ee:	31 d5                	xor    %edx,%ebp
    d5f0:	44 8b 7c 24 38       	mov    0x38(%rsp),%r15d
    d5f5:	41 01 f0             	add    %esi,%r8d
    d5f8:	41 c1 c4 05          	rol    $0x5,%r12d
    d5fc:	43 8d 84 2e 4e fd 53 	lea    -0x56ac02b2(%r14,%r13,1),%eax
    d603:	a9 
    d604:	45 01 f4             	add    %r14d,%r12d
    d607:	44 31 c5             	xor    %r8d,%ebp
    d60a:	03 74 24 38          	add    0x38(%rsp),%esi
    d60e:	41 c1 c3 0a          	rol    $0xa,%r11d
    d612:	01 ee                	add    %ebp,%esi
    d614:	44 89 d5             	mov    %r10d,%ebp
    d617:	44 8b 74 24 24       	mov    0x24(%rsp),%r14d
    d61c:	f7 d5                	not    %ebp
    d61e:	c1 c6 08             	rol    $0x8,%esi
    d621:	44 09 cd             	or     %r9d,%ebp
    d624:	01 ce                	add    %ecx,%esi
    d626:	41 c1 c1 0a          	rol    $0xa,%r9d
    d62a:	03 0c 24             	add    (%rsp),%ecx
    d62d:	44 31 e5             	xor    %r12d,%ebp
    d630:	01 c5                	add    %eax,%ebp
    d632:	44 89 c0             	mov    %r8d,%eax
    d635:	41 c1 c0 0a          	rol    $0xa,%r8d
    d639:	44 31 d8             	xor    %r11d,%eax
    d63c:	c1 c5 0c             	rol    $0xc,%ebp
    d63f:	31 f0                	xor    %esi,%eax
    d641:	01 dd                	add    %ebx,%ebp
    d643:	01 c1                	add    %eax,%ecx
    d645:	44 89 c8             	mov    %r9d,%eax
    d648:	f7 d0                	not    %eax
    d64a:	c1 c1 0d             	rol    $0xd,%ecx
    d64d:	41 89 c5             	mov    %eax,%r13d
    d650:	42 8d 84 33 4e fd 53 	lea    -0x56ac02b2(%rbx,%r14,1),%eax
    d657:	a9 
    d658:	89 f3                	mov    %esi,%ebx
    d65a:	01 d1                	add    %edx,%ecx
    d65c:	45 09 e5             	or     %r12d,%r13d
    d65f:	44 31 c3             	xor    %r8d,%ebx
    d662:	41 c1 c4 0a          	rol    $0xa,%r12d
    d666:	03 54 24 1c          	add    0x1c(%rsp),%edx
    d66a:	31 cb                	xor    %ecx,%ebx
    d66c:	41 31 ed             	xor    %ebp,%r13d
    d66f:	c1 c6 0a             	rol    $0xa,%esi
    d672:	41 01 c5             	add    %eax,%r13d
    d675:	01 da                	add    %ebx,%edx
    d677:	44 89 e3             	mov    %r12d,%ebx
    d67a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    d67e:	41 c1 c5 0d          	rol    $0xd,%r13d
    d682:	f7 d3                	not    %ebx
    d684:	c1 c2 06             	rol    $0x6,%edx
    d687:	45 01 d5             	add    %r10d,%r13d
    d68a:	09 eb                	or     %ebp,%ebx
    d68c:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
    d693:	a9 
    d694:	44 01 da             	add    %r11d,%edx
    d697:	44 31 eb             	xor    %r13d,%ebx
    d69a:	c1 c5 0a             	rol    $0xa,%ebp
    d69d:	44 03 5c 24 28       	add    0x28(%rsp),%r11d
    d6a2:	01 c3                	add    %eax,%ebx
    d6a4:	89 c8                	mov    %ecx,%eax
    d6a6:	41 89 ea             	mov    %ebp,%r10d
    d6a9:	c1 c1 0a             	rol    $0xa,%ecx
    d6ac:	31 f0                	xor    %esi,%eax
    d6ae:	41 f7 d2             	not    %r10d
    d6b1:	c1 c3 0e             	rol    $0xe,%ebx
    d6b4:	31 d0                	xor    %edx,%eax
    d6b6:	44 01 cb             	add    %r9d,%ebx
    d6b9:	41 01 c3             	add    %eax,%r11d
    d6bc:	44 89 d0             	mov    %r10d,%eax
    d6bf:	44 8b 54 24 14       	mov    0x14(%rsp),%r10d
    d6c4:	44 09 e8             	or     %r13d,%eax
    d6c7:	41 c1 c5 0a          	rol    $0xa,%r13d
    d6cb:	31 d8                	xor    %ebx,%eax
    d6cd:	47 8d 8c 11 4e fd 53 	lea    -0x56ac02b2(%r9,%r10,1),%r9d
    d6d4:	a9 
    d6d5:	41 c1 c3 05          	rol    $0x5,%r11d
    d6d9:	41 89 d2             	mov    %edx,%r10d
    d6dc:	41 01 c1             	add    %eax,%r9d
    d6df:	44 89 e8             	mov    %r13d,%eax
    d6e2:	45 01 c3             	add    %r8d,%r11d
    d6e5:	41 31 ca             	xor    %ecx,%r10d
    d6e8:	41 c1 c1 0b          	rol    $0xb,%r9d
    d6ec:	f7 d0                	not    %eax
    d6ee:	44 03 44 24 2c       	add    0x2c(%rsp),%r8d
    d6f3:	45 31 da             	xor    %r11d,%r10d
    d6f6:	45 01 e1             	add    %r12d,%r9d
    d6f9:	09 d8                	or     %ebx,%eax
    d6fb:	45 01 c2             	add    %r8d,%r10d
    d6fe:	c1 c2 0a             	rol    $0xa,%edx
    d701:	41 c1 c2 0f          	rol    $0xf,%r10d
    d705:	44 31 c8             	xor    %r9d,%eax
    d708:	45 89 d8             	mov    %r11d,%r8d
    d70b:	c1 c3 0a             	rol    $0xa,%ebx
    d70e:	47 8d a4 3c 4e fd 53 	lea    -0x56ac02b2(%r12,%r15,1),%r12d
    d715:	a9 
    d716:	41 01 f2             	add    %esi,%r10d
    d719:	41 31 d0             	xor    %edx,%r8d
    d71c:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    d721:	41 01 c4             	add    %eax,%r12d
    d724:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
    d728:	41 c1 c4 08          	rol    $0x8,%r12d
    d72c:	41 01 ec             	add    %ebp,%r12d
    d72f:	45 31 d0             	xor    %r10d,%r8d
    d732:	44 01 f6             	add    %r14d,%esi
    d735:	41 c1 c3 0a          	rol    $0xa,%r11d
    d739:	44 01 c6             	add    %r8d,%esi
    d73c:	41 89 d8             	mov    %ebx,%r8d
    d73f:	44 89 5c 24 54       	mov    %r11d,0x54(%rsp)
    d744:	41 f7 d0             	not    %r8d
    d747:	c1 c6 0d             	rol    $0xd,%esi
    d74a:	45 89 c6             	mov    %r8d,%r14d
    d74d:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    d752:	01 ce                	add    %ecx,%esi
    d754:	03 4c 24 3c          	add    0x3c(%rsp),%ecx
    d758:	45 09 ce             	or     %r9d,%r14d
    d75b:	41 c1 c1 0a          	rol    $0xa,%r9d
    d75f:	42 8d 84 05 4e fd 53 	lea    -0x56ac02b2(%rbp,%r8,1),%eax
    d766:	a9 
    d767:	45 89 d0             	mov    %r10d,%r8d
    d76a:	45 31 e6             	xor    %r12d,%r14d
    d76d:	41 c1 c2 0a          	rol    $0xa,%r10d
    d771:	45 31 d8             	xor    %r11d,%r8d
    d774:	41 01 c6             	add    %eax,%r14d
    d777:	44 89 c8             	mov    %r9d,%eax
    d77a:	44 89 54 24 64       	mov    %r10d,0x64(%rsp)
    d77f:	41 31 f0             	xor    %esi,%r8d
    d782:	41 c1 c6 05          	rol    $0x5,%r14d
    d786:	f7 d0                	not    %eax
    d788:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
    d78d:	44 01 c1             	add    %r8d,%ecx
    d790:	41 89 f0             	mov    %esi,%r8d
    d793:	45 01 ee             	add    %r13d,%r14d
    d796:	44 09 e0             	or     %r12d,%eax
    d799:	c1 c1 0b             	rol    $0xb,%ecx
    d79c:	45 31 d0             	xor    %r10d,%r8d
    d79f:	44 31 f0             	xor    %r14d,%eax
    d7a2:	c1 c6 0a             	rol    $0xa,%esi
    d7a5:	01 d1                	add    %edx,%ecx
    d7a7:	03 54 24 14          	add    0x14(%rsp),%edx
    d7ab:	41 c1 c4 0a          	rol    $0xa,%r12d
    d7af:	89 74 24 60          	mov    %esi,0x60(%rsp)
    d7b3:	41 31 c8             	xor    %ecx,%r8d
    d7b6:	43 8d ac 3d 4e fd 53 	lea    -0x56ac02b2(%r13,%r15,1),%ebp
    d7bd:	a9 
    d7be:	44 89 64 24 4c       	mov    %r12d,0x4c(%rsp)
    d7c3:	01 c5                	add    %eax,%ebp
    d7c5:	44 01 c2             	add    %r8d,%edx
    d7c8:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    d7cc:	c1 c5 06             	rol    $0x6,%ebp
    d7cf:	c1 c2 0b             	rol    $0xb,%edx
    d7d2:	01 dd                	add    %ebx,%ebp
    d7d4:	44 01 da             	add    %r11d,%edx
    d7d7:	03 77 0c             	add    0xc(%rdi),%esi
    d7da:	44 03 57 10          	add    0x10(%rdi),%r10d
    d7de:	44 03 5f 14          	add    0x14(%rdi),%r11d
    d7e2:	03 5f 18             	add    0x18(%rdi),%ebx
    d7e5:	41 01 f6             	add    %esi,%r14d
    d7e8:	45 01 d4             	add    %r10d,%r12d
    d7eb:	45 01 d9             	add    %r11d,%r9d
    d7ee:	89 54 24 58          	mov    %edx,0x58(%rsp)
    d7f2:	01 da                	add    %ebx,%edx
    d7f4:	be 68 00 00 00       	mov    $0x68,%esi
    d7f9:	44 89 4f 10          	mov    %r9d,0x10(%rdi)
    d7fd:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
    d801:	44 89 67 0c          	mov    %r12d,0xc(%rdi)
    d805:	44 89 74 24 48       	mov    %r14d,0x48(%rsp)
    d80a:	89 57 14             	mov    %edx,0x14(%rdi)
    d80d:	03 4f 08             	add    0x8(%rdi),%ecx
    d810:	01 cd                	add    %ecx,%ebp
    d812:	44 89 77 08          	mov    %r14d,0x8(%rdi)
    d816:	89 6f 18             	mov    %ebp,0x18(%rdi)
    d819:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    d81e:	e8 0d 7a ff ff       	callq  5230 <mbedtls_platform_zeroize>
    d823:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    d82a:	00 
    d82b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    d832:	00 00 
    d834:	75 14                	jne    d84a <mbedtls_internal_ripemd160_process+0x16ba>
    d836:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    d83d:	31 c0                	xor    %eax,%eax
    d83f:	5b                   	pop    %rbx
    d840:	5d                   	pop    %rbp
    d841:	41 5c                	pop    %r12
    d843:	41 5d                	pop    %r13
    d845:	41 5e                	pop    %r14
    d847:	41 5f                	pop    %r15
    d849:	c3                   	retq   
    d84a:	e8 11 5a ff ff       	callq  3260 <__stack_chk_fail@plt>
    d84f:	90                   	nop

000000000000d850 <mbedtls_ripemd160_update.part.0>:
    d850:	41 56                	push   %r14
    d852:	41 55                	push   %r13
    d854:	41 54                	push   %r12
    d856:	49 89 fc             	mov    %rdi,%r12
    d859:	55                   	push   %rbp
    d85a:	48 89 f5             	mov    %rsi,%rbp
    d85d:	53                   	push   %rbx
    d85e:	8b 07                	mov    (%rdi),%eax
    d860:	48 89 d3             	mov    %rdx,%rbx
    d863:	ba 40 00 00 00       	mov    $0x40,%edx
    d868:	41 89 c5             	mov    %eax,%r13d
    d86b:	41 83 e5 3f          	and    $0x3f,%r13d
    d86f:	44 29 ea             	sub    %r13d,%edx
    d872:	01 d8                	add    %ebx,%eax
    d874:	89 07                	mov    %eax,(%rdi)
    d876:	41 89 d6             	mov    %edx,%r14d
    d879:	73 04                	jae    d87f <mbedtls_ripemd160_update.part.0+0x2f>
    d87b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
    d87f:	45 85 ed             	test   %r13d,%r13d
    d882:	74 05                	je     d889 <mbedtls_ripemd160_update.part.0+0x39>
    d884:	49 39 de             	cmp    %rbx,%r14
    d887:	76 37                	jbe    d8c0 <mbedtls_ripemd160_update.part.0+0x70>
    d889:	48 83 fb 3f          	cmp    $0x3f,%rbx
    d88d:	77 17                	ja     d8a6 <mbedtls_ripemd160_update.part.0+0x56>
    d88f:	eb 7f                	jmp    d910 <mbedtls_ripemd160_update.part.0+0xc0>
    d891:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d898:	48 83 eb 40          	sub    $0x40,%rbx
    d89c:	48 83 c5 40          	add    $0x40,%rbp
    d8a0:	48 83 fb 3f          	cmp    $0x3f,%rbx
    d8a4:	76 6a                	jbe    d910 <mbedtls_ripemd160_update.part.0+0xc0>
    d8a6:	48 89 ee             	mov    %rbp,%rsi
    d8a9:	4c 89 e7             	mov    %r12,%rdi
    d8ac:	e8 df e8 ff ff       	callq  c190 <mbedtls_internal_ripemd160_process>
    d8b1:	85 c0                	test   %eax,%eax
    d8b3:	74 e3                	je     d898 <mbedtls_ripemd160_update.part.0+0x48>
    d8b5:	5b                   	pop    %rbx
    d8b6:	5d                   	pop    %rbp
    d8b7:	41 5c                	pop    %r12
    d8b9:	41 5d                	pop    %r13
    d8bb:	41 5e                	pop    %r14
    d8bd:	c3                   	retq   
    d8be:	66 90                	xchg   %ax,%ax
    d8c0:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
    d8c5:	4d 01 c5             	add    %r8,%r13
    d8c8:	83 fa 08             	cmp    $0x8,%edx
    d8cb:	0f 83 87 00 00 00    	jae    d958 <mbedtls_ripemd160_update.part.0+0x108>
    d8d1:	f6 c2 04             	test   $0x4,%dl
    d8d4:	0f 85 19 01 00 00    	jne    d9f3 <mbedtls_ripemd160_update.part.0+0x1a3>
    d8da:	85 d2                	test   %edx,%edx
    d8dc:	74 11                	je     d8ef <mbedtls_ripemd160_update.part.0+0x9f>
    d8de:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    d8e2:	83 e2 02             	and    $0x2,%edx
    d8e5:	41 88 45 00          	mov    %al,0x0(%r13)
    d8e9:	0f 85 30 01 00 00    	jne    da1f <mbedtls_ripemd160_update.part.0+0x1cf>
    d8ef:	4c 89 c6             	mov    %r8,%rsi
    d8f2:	4c 89 e7             	mov    %r12,%rdi
    d8f5:	e8 96 e8 ff ff       	callq  c190 <mbedtls_internal_ripemd160_process>
    d8fa:	85 c0                	test   %eax,%eax
    d8fc:	75 b7                	jne    d8b5 <mbedtls_ripemd160_update.part.0+0x65>
    d8fe:	4c 01 f5             	add    %r14,%rbp
    d901:	4c 29 f3             	sub    %r14,%rbx
    d904:	45 31 ed             	xor    %r13d,%r13d
    d907:	eb 80                	jmp    d889 <mbedtls_ripemd160_update.part.0+0x39>
    d909:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d910:	31 c0                	xor    %eax,%eax
    d912:	48 85 db             	test   %rbx,%rbx
    d915:	74 9e                	je     d8b5 <mbedtls_ripemd160_update.part.0+0x65>
    d917:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
    d91c:	89 d8                	mov    %ebx,%eax
    d91e:	83 fb 08             	cmp    $0x8,%ebx
    d921:	0f 83 7e 00 00 00    	jae    d9a5 <mbedtls_ripemd160_update.part.0+0x155>
    d927:	83 e3 04             	and    $0x4,%ebx
    d92a:	0f 85 d9 00 00 00    	jne    da09 <mbedtls_ripemd160_update.part.0+0x1b9>
    d930:	85 c0                	test   %eax,%eax
    d932:	74 16                	je     d94a <mbedtls_ripemd160_update.part.0+0xfa>
    d934:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
    d938:	88 11                	mov    %dl,(%rcx)
    d93a:	a8 02                	test   $0x2,%al
    d93c:	74 0c                	je     d94a <mbedtls_ripemd160_update.part.0+0xfa>
    d93e:	89 c2                	mov    %eax,%edx
    d940:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
    d945:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    d94a:	31 c0                	xor    %eax,%eax
    d94c:	5b                   	pop    %rbx
    d94d:	5d                   	pop    %rbp
    d94e:	41 5c                	pop    %r12
    d950:	41 5d                	pop    %r13
    d952:	41 5e                	pop    %r14
    d954:	c3                   	retq   
    d955:	0f 1f 00             	nopl   (%rax)
    d958:	48 8b 45 00          	mov    0x0(%rbp),%rax
    d95c:	49 8d 75 08          	lea    0x8(%r13),%rsi
    d960:	49 89 e9             	mov    %rbp,%r9
    d963:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    d967:	49 89 45 00          	mov    %rax,0x0(%r13)
    d96b:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
    d970:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
    d975:	49 29 f5             	sub    %rsi,%r13
    d978:	44 01 ea             	add    %r13d,%edx
    d97b:	4d 29 e9             	sub    %r13,%r9
    d97e:	83 e2 f8             	and    $0xfffffff8,%edx
    d981:	83 fa 08             	cmp    $0x8,%edx
    d984:	0f 82 65 ff ff ff    	jb     d8ef <mbedtls_ripemd160_update.part.0+0x9f>
    d98a:	83 e2 f8             	and    $0xfffffff8,%edx
    d98d:	31 c0                	xor    %eax,%eax
    d98f:	89 c1                	mov    %eax,%ecx
    d991:	83 c0 08             	add    $0x8,%eax
    d994:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
    d998:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    d99c:	39 d0                	cmp    %edx,%eax
    d99e:	72 ef                	jb     d98f <mbedtls_ripemd160_update.part.0+0x13f>
    d9a0:	e9 4a ff ff ff       	jmpq   d8ef <mbedtls_ripemd160_update.part.0+0x9f>
    d9a5:	48 8b 45 00          	mov    0x0(%rbp),%rax
    d9a9:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    d9ad:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    d9b1:	48 89 01             	mov    %rax,(%rcx)
    d9b4:	89 d8                	mov    %ebx,%eax
    d9b6:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
    d9bb:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    d9c0:	48 29 f1             	sub    %rsi,%rcx
    d9c3:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
    d9c6:	48 29 cd             	sub    %rcx,%rbp
    d9c9:	83 e0 f8             	and    $0xfffffff8,%eax
    d9cc:	83 f8 08             	cmp    $0x8,%eax
    d9cf:	0f 82 75 ff ff ff    	jb     d94a <mbedtls_ripemd160_update.part.0+0xfa>
    d9d5:	83 e0 f8             	and    $0xfffffff8,%eax
    d9d8:	31 d2                	xor    %edx,%edx
    d9da:	89 d1                	mov    %edx,%ecx
    d9dc:	83 c2 08             	add    $0x8,%edx
    d9df:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
    d9e4:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    d9e8:	39 c2                	cmp    %eax,%edx
    d9ea:	72 ee                	jb     d9da <mbedtls_ripemd160_update.part.0+0x18a>
    d9ec:	31 c0                	xor    %eax,%eax
    d9ee:	e9 59 ff ff ff       	jmpq   d94c <mbedtls_ripemd160_update.part.0+0xfc>
    d9f3:	8b 45 00             	mov    0x0(%rbp),%eax
    d9f6:	41 89 45 00          	mov    %eax,0x0(%r13)
    d9fa:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
    d9ff:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
    da04:	e9 e6 fe ff ff       	jmpq   d8ef <mbedtls_ripemd160_update.part.0+0x9f>
    da09:	8b 55 00             	mov    0x0(%rbp),%edx
    da0c:	89 11                	mov    %edx,(%rcx)
    da0e:	89 c2                	mov    %eax,%edx
    da10:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
    da14:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    da18:	31 c0                	xor    %eax,%eax
    da1a:	e9 2d ff ff ff       	jmpq   d94c <mbedtls_ripemd160_update.part.0+0xfc>
    da1f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
    da25:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
    da2b:	e9 bf fe ff ff       	jmpq   d8ef <mbedtls_ripemd160_update.part.0+0x9f>

000000000000da30 <mbedtls_ripemd160_update>:
    da30:	f3 0f 1e fa          	endbr64 
    da34:	48 85 d2             	test   %rdx,%rdx
    da37:	74 07                	je     da40 <mbedtls_ripemd160_update+0x10>
    da39:	e9 12 fe ff ff       	jmpq   d850 <mbedtls_ripemd160_update.part.0>
    da3e:	66 90                	xchg   %ax,%ax
    da40:	31 c0                	xor    %eax,%eax
    da42:	c3                   	retq   
    da43:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    da4a:	00 00 00 00 
    da4e:	66 90                	xchg   %ax,%ax

000000000000da50 <mbedtls_ripemd160_finish>:
    da50:	f3 0f 1e fa          	endbr64 
    da54:	55                   	push   %rbp
    da55:	48 89 f5             	mov    %rsi,%rbp
    da58:	53                   	push   %rbx
    da59:	48 89 fb             	mov    %rdi,%rbx
    da5c:	48 83 ec 18          	sub    $0x18,%rsp
    da60:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    da67:	00 00 
    da69:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    da6e:	31 c0                	xor    %eax,%eax
    da70:	8b 07                	mov    (%rdi),%eax
    da72:	8b 7f 04             	mov    0x4(%rdi),%edi
    da75:	89 c1                	mov    %eax,%ecx
    da77:	8d 14 fd 00 00 00 00 	lea    0x0(,%rdi,8),%edx
    da7e:	c1 e9 1d             	shr    $0x1d,%ecx
    da81:	09 ca                	or     %ecx,%edx
    da83:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    da8a:	83 e0 3f             	and    $0x3f,%eax
    da8d:	89 0c 24             	mov    %ecx,(%rsp)
    da90:	89 54 24 04          	mov    %edx,0x4(%rsp)
    da94:	83 f8 37             	cmp    $0x37,%eax
    da97:	77 37                	ja     dad0 <mbedtls_ripemd160_finish+0x80>
    da99:	ba 38 00 00 00       	mov    $0x38,%edx
    da9e:	29 c2                	sub    %eax,%edx
    daa0:	48 8d 35 99 5e 01 00 	lea    0x15e99(%rip),%rsi        # 23940 <ripemd160_padding>
    daa7:	48 89 df             	mov    %rbx,%rdi
    daaa:	e8 a1 fd ff ff       	callq  d850 <mbedtls_ripemd160_update.part.0>
    daaf:	85 c0                	test   %eax,%eax
    dab1:	74 2d                	je     dae0 <mbedtls_ripemd160_finish+0x90>
    dab3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    dab8:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    dabf:	00 00 
    dac1:	75 51                	jne    db14 <mbedtls_ripemd160_finish+0xc4>
    dac3:	48 83 c4 18          	add    $0x18,%rsp
    dac7:	5b                   	pop    %rbx
    dac8:	5d                   	pop    %rbp
    dac9:	c3                   	retq   
    daca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dad0:	ba 78 00 00 00       	mov    $0x78,%edx
    dad5:	29 c2                	sub    %eax,%edx
    dad7:	eb c7                	jmp    daa0 <mbedtls_ripemd160_finish+0x50>
    dad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dae0:	48 89 e6             	mov    %rsp,%rsi
    dae3:	ba 08 00 00 00       	mov    $0x8,%edx
    dae8:	48 89 df             	mov    %rbx,%rdi
    daeb:	e8 60 fd ff ff       	callq  d850 <mbedtls_ripemd160_update.part.0>
    daf0:	85 c0                	test   %eax,%eax
    daf2:	75 bf                	jne    dab3 <mbedtls_ripemd160_finish+0x63>
    daf4:	8b 53 08             	mov    0x8(%rbx),%edx
    daf7:	89 55 00             	mov    %edx,0x0(%rbp)
    dafa:	8b 53 0c             	mov    0xc(%rbx),%edx
    dafd:	89 55 04             	mov    %edx,0x4(%rbp)
    db00:	8b 53 10             	mov    0x10(%rbx),%edx
    db03:	89 55 08             	mov    %edx,0x8(%rbp)
    db06:	8b 53 14             	mov    0x14(%rbx),%edx
    db09:	89 55 0c             	mov    %edx,0xc(%rbp)
    db0c:	8b 53 18             	mov    0x18(%rbx),%edx
    db0f:	89 55 10             	mov    %edx,0x10(%rbp)
    db12:	eb 9f                	jmp    dab3 <mbedtls_ripemd160_finish+0x63>
    db14:	e8 47 57 ff ff       	callq  3260 <__stack_chk_fail@plt>
    db19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000db20 <mbedtls_ripemd160>:
    db20:	f3 0f 1e fa          	endbr64 
    db24:	41 55                	push   %r13
    db26:	66 0f ef c0          	pxor   %xmm0,%xmm0
    db2a:	41 54                	push   %r12
    db2c:	55                   	push   %rbp
    db2d:	48 89 d5             	mov    %rdx,%rbp
    db30:	48 83 ec 70          	sub    $0x70,%rsp
    db34:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    db3b:	00 00 
    db3d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    db42:	31 c0                	xor    %eax,%eax
    db44:	49 89 e5             	mov    %rsp,%r13
    db47:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    db4c:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    db53:	ab cd ef 
    db56:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    db5b:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    db62:	54 32 10 
    db65:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
    db6c:	00 
    db6d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    db74:	00 
    db75:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    db7a:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
    db81:	c3 
    db82:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    db87:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
    db8c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    db91:	48 85 f6             	test   %rsi,%rsi
    db94:	74 15                	je     dbab <mbedtls_ripemd160+0x8b>
    db96:	48 89 f2             	mov    %rsi,%rdx
    db99:	48 89 fe             	mov    %rdi,%rsi
    db9c:	4c 89 ef             	mov    %r13,%rdi
    db9f:	e8 ac fc ff ff       	callq  d850 <mbedtls_ripemd160_update.part.0>
    dba4:	41 89 c4             	mov    %eax,%r12d
    dba7:	85 c0                	test   %eax,%eax
    dba9:	75 0e                	jne    dbb9 <mbedtls_ripemd160+0x99>
    dbab:	48 89 ee             	mov    %rbp,%rsi
    dbae:	4c 89 ef             	mov    %r13,%rdi
    dbb1:	e8 9a fe ff ff       	callq  da50 <mbedtls_ripemd160_finish>
    dbb6:	41 89 c4             	mov    %eax,%r12d
    dbb9:	be 5c 00 00 00       	mov    $0x5c,%esi
    dbbe:	4c 89 ef             	mov    %r13,%rdi
    dbc1:	e8 6a 76 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    dbc6:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    dbcb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    dbd2:	00 00 
    dbd4:	75 0d                	jne    dbe3 <mbedtls_ripemd160+0xc3>
    dbd6:	48 83 c4 70          	add    $0x70,%rsp
    dbda:	44 89 e0             	mov    %r12d,%eax
    dbdd:	5d                   	pop    %rbp
    dbde:	41 5c                	pop    %r12
    dbe0:	41 5d                	pop    %r13
    dbe2:	c3                   	retq   
    dbe3:	e8 78 56 ff ff       	callq  3260 <__stack_chk_fail@plt>
    dbe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dbef:	00 

000000000000dbf0 <mbedtls_ripemd160_self_test>:
    dbf0:	f3 0f 1e fa          	endbr64 
    dbf4:	41 57                	push   %r15
    dbf6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dbfa:	41 56                	push   %r14
    dbfc:	4c 8d 35 9d 5a 01 00 	lea    0x15a9d(%rip),%r14        # 236a0 <ripemd160_test_str>
    dc03:	41 55                	push   %r13
    dc05:	41 89 fd             	mov    %edi,%r13d
    dc08:	41 54                	push   %r12
    dc0a:	45 31 e4             	xor    %r12d,%r12d
    dc0d:	55                   	push   %rbp
    dc0e:	bd 01 00 00 00       	mov    $0x1,%ebp
    dc13:	53                   	push   %rbx
    dc14:	48 8d 1d a5 59 01 00 	lea    0x159a5(%rip),%rbx        # 235c0 <ripemd160_test_md>
    dc1b:	48 83 ec 28          	sub    $0x28,%rsp
    dc1f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dc26:	00 00 
    dc28:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    dc2d:	31 c0                	xor    %eax,%eax
    dc2f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
    dc36:	00 
    dc37:	49 89 e7             	mov    %rsp,%r15
    dc3a:	0f 29 04 24          	movaps %xmm0,(%rsp)
    dc3e:	66 90                	xchg   %ax,%ax
    dc40:	45 85 ed             	test   %r13d,%r13d
    dc43:	75 6b                	jne    dcb0 <mbedtls_ripemd160_self_test+0xc0>
    dc45:	4c 89 e6             	mov    %r12,%rsi
    dc48:	4c 89 fa             	mov    %r15,%rdx
    dc4b:	4c 89 f7             	mov    %r14,%rdi
    dc4e:	e8 cd fe ff ff       	callq  db20 <mbedtls_ripemd160>
    dc53:	41 89 c4             	mov    %eax,%r12d
    dc56:	85 c0                	test   %eax,%eax
    dc58:	75 22                	jne    dc7c <mbedtls_ripemd160_self_test+0x8c>
    dc5a:	49 8b 07             	mov    (%r15),%rax
    dc5d:	49 8b 57 08          	mov    0x8(%r15),%rdx
    dc61:	48 33 03             	xor    (%rbx),%rax
    dc64:	48 33 53 08          	xor    0x8(%rbx),%rdx
    dc68:	48 09 c2             	or     %rax,%rdx
    dc6b:	75 09                	jne    dc76 <mbedtls_ripemd160_self_test+0x86>
    dc6d:	8b 43 10             	mov    0x10(%rbx),%eax
    dc70:	41 39 47 10          	cmp    %eax,0x10(%r15)
    dc74:	74 5a                	je     dcd0 <mbedtls_ripemd160_self_test+0xe0>
    dc76:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    dc7c:	45 85 ed             	test   %r13d,%r13d
    dc7f:	0f 85 ab 00 00 00    	jne    dd30 <mbedtls_ripemd160_self_test+0x140>
    dc85:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    dc8a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    dc91:	00 00 
    dc93:	0f 85 a8 00 00 00    	jne    dd41 <mbedtls_ripemd160_self_test+0x151>
    dc99:	48 83 c4 28          	add    $0x28,%rsp
    dc9d:	44 89 e0             	mov    %r12d,%eax
    dca0:	5b                   	pop    %rbx
    dca1:	5d                   	pop    %rbp
    dca2:	41 5c                	pop    %r12
    dca4:	41 5d                	pop    %r13
    dca6:	41 5e                	pop    %r14
    dca8:	41 5f                	pop    %r15
    dcaa:	c3                   	retq   
    dcab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dcb0:	89 ea                	mov    %ebp,%edx
    dcb2:	48 8d 35 df 58 01 00 	lea    0x158df(%rip),%rsi        # 23598 <NIST_KW_ICV1+0x8>
    dcb9:	bf 01 00 00 00       	mov    $0x1,%edi
    dcbe:	31 c0                	xor    %eax,%eax
    dcc0:	e8 7b 56 ff ff       	callq  3340 <__printf_chk@plt>
    dcc5:	e9 7b ff ff ff       	jmpq   dc45 <mbedtls_ripemd160_self_test+0x55>
    dcca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dcd0:	45 85 ed             	test   %r13d,%r13d
    dcd3:	74 0c                	je     dce1 <mbedtls_ripemd160_self_test+0xf1>
    dcd5:	48 8d 3d 06 55 01 00 	lea    0x15506(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    dcdc:	e8 1f 55 ff ff       	callq  3200 <puts@plt>
    dce1:	48 83 c3 14          	add    $0x14,%rbx
    dce5:	49 83 c6 51          	add    $0x51,%r14
    dce9:	48 83 fd 08          	cmp    $0x8,%rbp
    dced:	74 19                	je     dd08 <mbedtls_ripemd160_self_test+0x118>
    dcef:	48 8d 05 6a 59 01 00 	lea    0x1596a(%rip),%rax        # 23660 <ripemd160_test_strlen>
    dcf6:	4c 8b 24 e8          	mov    (%rax,%rbp,8),%r12
    dcfa:	48 83 c5 01          	add    $0x1,%rbp
    dcfe:	e9 3d ff ff ff       	jmpq   dc40 <mbedtls_ripemd160_self_test+0x50>
    dd03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dd08:	45 85 ed             	test   %r13d,%r13d
    dd0b:	75 0b                	jne    dd18 <mbedtls_ripemd160_self_test+0x128>
    dd0d:	45 31 e4             	xor    %r12d,%r12d
    dd10:	e9 70 ff ff ff       	jmpq   dc85 <mbedtls_ripemd160_self_test+0x95>
    dd15:	0f 1f 00             	nopl   (%rax)
    dd18:	bf 0a 00 00 00       	mov    $0xa,%edi
    dd1d:	e8 ce 54 ff ff       	callq  31f0 <putchar@plt>
    dd22:	e9 5e ff ff ff       	jmpq   dc85 <mbedtls_ripemd160_self_test+0x95>
    dd27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dd2e:	00 00 
    dd30:	48 8d 3d 86 5d 01 00 	lea    0x15d86(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    dd37:	e8 c4 54 ff ff       	callq  3200 <puts@plt>
    dd3c:	e9 44 ff ff ff       	jmpq   dc85 <mbedtls_ripemd160_self_test+0x95>
    dd41:	e8 1a 55 ff ff       	callq  3260 <__stack_chk_fail@plt>
    dd46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dd4d:	00 00 00 

000000000000dd50 <mbedtls_sha1_init>:
    dd50:	f3 0f 1e fa          	endbr64 
    dd54:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    dd5b:	48 89 f9             	mov    %rdi,%rcx
    dd5e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    dd62:	31 c0                	xor    %eax,%eax
    dd64:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
    dd6b:	00 
    dd6c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    dd70:	48 29 f9             	sub    %rdi,%rcx
    dd73:	83 c1 5c             	add    $0x5c,%ecx
    dd76:	c1 e9 03             	shr    $0x3,%ecx
    dd79:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    dd7c:	c3                   	retq   
    dd7d:	0f 1f 00             	nopl   (%rax)

000000000000dd80 <mbedtls_sha1_free>:
    dd80:	f3 0f 1e fa          	endbr64 
    dd84:	48 85 ff             	test   %rdi,%rdi
    dd87:	74 0f                	je     dd98 <mbedtls_sha1_free+0x18>
    dd89:	be 5c 00 00 00       	mov    $0x5c,%esi
    dd8e:	e9 9d 74 ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    dd93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dd98:	c3                   	retq   
    dd99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000dda0 <mbedtls_sha1_clone>:
    dda0:	f3 0f 1e fa          	endbr64 
    dda4:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    dda8:	0f 11 07             	movups %xmm0,(%rdi)
    ddab:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    ddb0:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    ddb4:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    ddb9:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    ddbd:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    ddc2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    ddc6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    ddcb:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    ddcf:	48 8b 46 50          	mov    0x50(%rsi),%rax
    ddd3:	48 89 47 50          	mov    %rax,0x50(%rdi)
    ddd7:	8b 46 58             	mov    0x58(%rsi),%eax
    ddda:	89 47 58             	mov    %eax,0x58(%rdi)
    dddd:	c3                   	retq   
    ddde:	66 90                	xchg   %ax,%ax

000000000000dde0 <mbedtls_sha1_starts>:
    dde0:	f3 0f 1e fa          	endbr64 
    dde4:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    ddeb:	ab cd ef 
    ddee:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    ddf5:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ddf9:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    de00:	54 32 10 
    de03:	48 89 47 10          	mov    %rax,0x10(%rdi)
    de07:	31 c0                	xor    %eax,%eax
    de09:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
    de10:	c3                   	retq   
    de11:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    de18:	00 00 00 00 
    de1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000de20 <mbedtls_internal_sha1_process>:
    de20:	f3 0f 1e fa          	endbr64 
    de24:	41 57                	push   %r15
    de26:	41 56                	push   %r14
    de28:	41 55                	push   %r13
    de2a:	41 54                	push   %r12
    de2c:	49 89 f4             	mov    %rsi,%r12
    de2f:	55                   	push   %rbp
    de30:	53                   	push   %rbx
    de31:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    de38:	45 8b 44 24 24       	mov    0x24(%r12),%r8d
    de3d:	44 8b 56 04          	mov    0x4(%rsi),%r10d
    de41:	41 8b 5c 24 38       	mov    0x38(%r12),%ebx
    de46:	45 8b 5c 24 18       	mov    0x18(%r12),%r11d
    de4b:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
    de50:	45 89 c7             	mov    %r8d,%r15d
    de53:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
    de58:	45 8b 6c 24 2c       	mov    0x2c(%r12),%r13d
    de5d:	45 89 d6             	mov    %r10d,%r14d
    de60:	41 0f cb             	bswap  %r11d
    de63:	44 8b 0e             	mov    (%rsi),%r9d
    de66:	8b 7e 08             	mov    0x8(%rsi),%edi
    de69:	41 0f ce             	bswap  %r14d
    de6c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    de73:	00 00 
    de75:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    de7c:	00 
    de7d:	31 c0                	xor    %eax,%eax
    de7f:	41 8b 44 24 20       	mov    0x20(%r12),%eax
    de84:	45 8b 54 24 1c       	mov    0x1c(%r12),%r10d
    de89:	44 89 5c 24 14       	mov    %r11d,0x14(%rsp)
    de8e:	41 8b 6c 24 34       	mov    0x34(%r12),%ebp
    de93:	41 89 db             	mov    %ebx,%r11d
    de96:	8b 76 0c             	mov    0xc(%rsi),%esi
    de99:	41 0f cd             	bswap  %r13d
    de9c:	0f c8                	bswap  %eax
    de9e:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    dea2:	44 89 c0             	mov    %r8d,%eax
    dea5:	41 0f ca             	bswap  %r10d
    dea8:	45 8b 44 24 30       	mov    0x30(%r12),%r8d
    dead:	41 8b 4c 24 10       	mov    0x10(%r12),%ecx
    deb2:	0f cd                	bswap  %ebp
    deb4:	41 0f cb             	bswap  %r11d
    deb7:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
    debb:	41 0f c9             	bswap  %r9d
    debe:	0f cf                	bswap  %edi
    dec0:	0f ce                	bswap  %esi
    dec2:	41 8b 54 24 14       	mov    0x14(%r12),%edx
    dec7:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
    decc:	41 0f c8             	bswap  %r8d
    decf:	0f c9                	bswap  %ecx
    ded1:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
    ded6:	41 0f cf             	bswap  %r15d
    ded9:	0f c8                	bswap  %eax
    dedb:	44 89 1c 24          	mov    %r11d,(%rsp)
    dedf:	0f ca                	bswap  %edx
    dee1:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    dee6:	45 8b 44 24 3c       	mov    0x3c(%r12),%r8d
    deeb:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    def0:	89 44 24 28          	mov    %eax,0x28(%rsp)
    def4:	41 0f c8             	bswap  %r8d
    def7:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    defc:	44 8b 53 14          	mov    0x14(%rbx),%r10d
    df00:	44 8b 63 10          	mov    0x10(%rbx),%r12d
    df04:	44 8b 5b 08          	mov    0x8(%rbx),%r11d
    df08:	8b 6b 0c             	mov    0xc(%rbx),%ebp
    df0b:	45 89 d5             	mov    %r10d,%r13d
    df0e:	44 8b 53 18          	mov    0x18(%rbx),%r10d
    df12:	44 89 6c 24 4c       	mov    %r13d,0x4c(%rsp)
    df17:	44 89 54 24 38       	mov    %r10d,0x38(%rsp)
    df1c:	45 89 e2             	mov    %r12d,%r10d
    df1f:	8b 5c 24 38          	mov    0x38(%rsp),%ebx
    df23:	45 31 ea             	xor    %r13d,%r10d
    df26:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
    df2a:	45 89 d0             	mov    %r10d,%r8d
    df2d:	45 89 da             	mov    %r11d,%r10d
    df30:	41 21 e8             	and    %ebp,%r8d
    df33:	41 c1 c2 05          	rol    $0x5,%r10d
    df37:	45 31 e8             	xor    %r13d,%r8d
    df3a:	46 8d 94 13 99 79 82 	lea    0x5a827999(%rbx,%r10,1),%r10d
    df41:	5a 
    df42:	89 eb                	mov    %ebp,%ebx
    df44:	44 89 dd             	mov    %r11d,%ebp
    df47:	c1 cb 02             	ror    $0x2,%ebx
    df4a:	45 01 d0             	add    %r10d,%r8d
    df4d:	45 89 e2             	mov    %r12d,%r10d
    df50:	89 6c 24 40          	mov    %ebp,0x40(%rsp)
    df54:	41 31 da             	xor    %ebx,%r10d
    df57:	45 01 c8             	add    %r9d,%r8d
    df5a:	45 21 da             	and    %r11d,%r10d
    df5d:	45 89 e3             	mov    %r12d,%r11d
    df60:	45 31 e2             	xor    %r12d,%r10d
    df63:	41 89 dc             	mov    %ebx,%r12d
    df66:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
    df6b:	46 8d 9c 1f 99 79 82 	lea    0x5a827999(%rdi,%r11,1),%r11d
    df72:	5a 
    df73:	47 8d ac 15 99 79 82 	lea    0x5a827999(%r13,%r10,1),%r13d
    df7a:	5a 
    df7b:	45 89 c2             	mov    %r8d,%r10d
    df7e:	45 01 f5             	add    %r14d,%r13d
    df81:	41 c1 c2 05          	rol    $0x5,%r10d
    df85:	45 01 d5             	add    %r10d,%r13d
    df88:	41 89 ea             	mov    %ebp,%r10d
    df8b:	41 c1 ca 02          	ror    $0x2,%r10d
    df8f:	45 31 d4             	xor    %r10d,%r12d
    df92:	45 21 c4             	and    %r8d,%r12d
    df95:	41 c1 c8 02          	ror    $0x2,%r8d
    df99:	41 31 dc             	xor    %ebx,%r12d
    df9c:	44 89 c5             	mov    %r8d,%ebp
    df9f:	8d 9c 1e 99 79 82 5a 	lea    0x5a827999(%rsi,%rbx,1),%ebx
    dfa6:	45 01 dc             	add    %r11d,%r12d
    dfa9:	45 89 eb             	mov    %r13d,%r11d
    dfac:	41 c1 c3 05          	rol    $0x5,%r11d
    dfb0:	45 01 dc             	add    %r11d,%r12d
    dfb3:	45 89 d3             	mov    %r10d,%r11d
    dfb6:	45 31 c3             	xor    %r8d,%r11d
    dfb9:	45 21 eb             	and    %r13d,%r11d
    dfbc:	41 c1 cd 02          	ror    $0x2,%r13d
    dfc0:	45 31 d3             	xor    %r10d,%r11d
    dfc3:	44 31 ed             	xor    %r13d,%ebp
    dfc6:	46 8d 94 11 99 79 82 	lea    0x5a827999(%rcx,%r10,1),%r10d
    dfcd:	5a 
    dfce:	41 01 db             	add    %ebx,%r11d
    dfd1:	44 89 e3             	mov    %r12d,%ebx
    dfd4:	44 21 e5             	and    %r12d,%ebp
    dfd7:	c1 c3 05             	rol    $0x5,%ebx
    dfda:	41 01 db             	add    %ebx,%r11d
    dfdd:	44 31 c5             	xor    %r8d,%ebp
    dfe0:	41 c1 cc 02          	ror    $0x2,%r12d
    dfe4:	46 8d 84 02 99 79 82 	lea    0x5a827999(%rdx,%r8,1),%r8d
    dfeb:	5a 
    dfec:	44 01 d5             	add    %r10d,%ebp
    dfef:	45 89 da             	mov    %r11d,%r10d
    dff2:	41 c1 c2 05          	rol    $0x5,%r10d
    dff6:	44 01 d5             	add    %r10d,%ebp
    dff9:	45 89 ea             	mov    %r13d,%r10d
    dffc:	45 31 e2             	xor    %r12d,%r10d
    dfff:	45 21 da             	and    %r11d,%r10d
    e002:	41 c1 cb 02          	ror    $0x2,%r11d
    e006:	45 31 ea             	xor    %r13d,%r10d
    e009:	45 01 c2             	add    %r8d,%r10d
    e00c:	41 89 e8             	mov    %ebp,%r8d
    e00f:	41 c1 c0 05          	rol    $0x5,%r8d
    e013:	45 01 c2             	add    %r8d,%r10d
    e016:	45 89 e0             	mov    %r12d,%r8d
    e019:	45 31 d8             	xor    %r11d,%r8d
    e01c:	44 89 c3             	mov    %r8d,%ebx
    e01f:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    e024:	21 eb                	and    %ebp,%ebx
    e026:	c1 cd 02             	ror    $0x2,%ebp
    e029:	44 31 e3             	xor    %r12d,%ebx
    e02c:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
    e033:	5a 
    e034:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    e039:	44 01 c3             	add    %r8d,%ebx
    e03c:	45 89 d0             	mov    %r10d,%r8d
    e03f:	41 c1 c0 05          	rol    $0x5,%r8d
    e043:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
    e04a:	5a 
    e04b:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    e050:	44 01 c3             	add    %r8d,%ebx
    e053:	45 89 d8             	mov    %r11d,%r8d
    e056:	41 31 e8             	xor    %ebp,%r8d
    e059:	45 21 d0             	and    %r10d,%r8d
    e05c:	41 c1 ca 02          	ror    $0x2,%r10d
    e060:	45 31 d8             	xor    %r11d,%r8d
    e063:	47 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%r11,1),%r11d
    e06a:	5a 
    e06b:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    e070:	45 01 e0             	add    %r12d,%r8d
    e073:	41 89 dc             	mov    %ebx,%r12d
    e076:	41 c1 c4 05          	rol    $0x5,%r12d
    e07a:	45 01 e0             	add    %r12d,%r8d
    e07d:	41 89 ec             	mov    %ebp,%r12d
    e080:	45 31 d4             	xor    %r10d,%r12d
    e083:	41 21 dc             	and    %ebx,%r12d
    e086:	41 31 ec             	xor    %ebp,%r12d
    e089:	41 8d ac 2f 99 79 82 	lea    0x5a827999(%r15,%rbp,1),%ebp
    e090:	5a 
    e091:	45 01 dc             	add    %r11d,%r12d
    e094:	45 89 c3             	mov    %r8d,%r11d
    e097:	41 c1 c3 05          	rol    $0x5,%r11d
    e09b:	45 01 dc             	add    %r11d,%r12d
    e09e:	c1 cb 02             	ror    $0x2,%ebx
    e0a1:	45 89 d3             	mov    %r10d,%r11d
    e0a4:	41 31 db             	xor    %ebx,%r11d
    e0a7:	45 21 c3             	and    %r8d,%r11d
    e0aa:	41 c1 c8 02          	ror    $0x2,%r8d
    e0ae:	45 31 d3             	xor    %r10d,%r11d
    e0b1:	46 8d 94 10 99 79 82 	lea    0x5a827999(%rax,%r10,1),%r10d
    e0b8:	5a 
    e0b9:	41 01 eb             	add    %ebp,%r11d
    e0bc:	44 89 e5             	mov    %r12d,%ebp
    e0bf:	c1 c5 05             	rol    $0x5,%ebp
    e0c2:	41 01 eb             	add    %ebp,%r11d
    e0c5:	89 dd                	mov    %ebx,%ebp
    e0c7:	44 31 c5             	xor    %r8d,%ebp
    e0ca:	44 21 e5             	and    %r12d,%ebp
    e0cd:	41 c1 cc 02          	ror    $0x2,%r12d
    e0d1:	31 dd                	xor    %ebx,%ebp
    e0d3:	41 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%rbx,1),%ebx
    e0da:	5a 
    e0db:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    e0e0:	44 01 d5             	add    %r10d,%ebp
    e0e3:	45 89 da             	mov    %r11d,%r10d
    e0e6:	41 c1 c2 05          	rol    $0x5,%r10d
    e0ea:	44 01 d5             	add    %r10d,%ebp
    e0ed:	45 89 c2             	mov    %r8d,%r10d
    e0f0:	45 31 e2             	xor    %r12d,%r10d
    e0f3:	89 e8                	mov    %ebp,%eax
    e0f5:	45 21 da             	and    %r11d,%r10d
    e0f8:	c1 c0 05             	rol    $0x5,%eax
    e0fb:	45 31 c2             	xor    %r8d,%r10d
    e0fe:	41 c1 cb 02          	ror    $0x2,%r11d
    e102:	47 8d 84 05 99 79 82 	lea    0x5a827999(%r13,%r8,1),%r8d
    e109:	5a 
    e10a:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
    e10f:	41 01 da             	add    %ebx,%r10d
    e112:	41 01 c2             	add    %eax,%r10d
    e115:	44 89 e0             	mov    %r12d,%eax
    e118:	44 31 d8             	xor    %r11d,%eax
    e11b:	89 c3                	mov    %eax,%ebx
    e11d:	8b 04 24             	mov    (%rsp),%eax
    e120:	21 eb                	and    %ebp,%ebx
    e122:	c1 cd 02             	ror    $0x2,%ebp
    e125:	44 31 e3             	xor    %r12d,%ebx
    e128:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
    e12f:	5a 
    e130:	44 01 c3             	add    %r8d,%ebx
    e133:	45 89 d0             	mov    %r10d,%r8d
    e136:	41 c1 c0 05          	rol    $0x5,%r8d
    e13a:	44 01 c3             	add    %r8d,%ebx
    e13d:	45 89 d8             	mov    %r11d,%r8d
    e140:	41 31 e8             	xor    %ebp,%r8d
    e143:	45 21 d0             	and    %r10d,%r8d
    e146:	45 31 d8             	xor    %r11d,%r8d
    e149:	46 8d 9c 18 99 79 82 	lea    0x5a827999(%rax,%r11,1),%r11d
    e150:	5a 
    e151:	8b 44 24 04          	mov    0x4(%rsp),%eax
    e155:	45 01 e0             	add    %r12d,%r8d
    e158:	41 89 dc             	mov    %ebx,%r12d
    e15b:	41 c1 ca 02          	ror    $0x2,%r10d
    e15f:	41 31 f9             	xor    %edi,%r9d
    e162:	41 c1 c4 05          	rol    $0x5,%r12d
    e166:	44 33 4c 24 1c       	xor    0x1c(%rsp),%r9d
    e16b:	41 31 f6             	xor    %esi,%r14d
    e16e:	45 01 e0             	add    %r12d,%r8d
    e171:	41 89 ec             	mov    %ebp,%r12d
    e174:	45 31 e9             	xor    %r13d,%r9d
    e177:	45 31 d4             	xor    %r10d,%r12d
    e17a:	41 d1 c1             	rol    %r9d
    e17d:	41 21 dc             	and    %ebx,%r12d
    e180:	c1 cb 02             	ror    $0x2,%ebx
    e183:	41 31 ec             	xor    %ebp,%r12d
    e186:	8d ac 28 99 79 82 5a 	lea    0x5a827999(%rax,%rbp,1),%ebp
    e18d:	45 01 dc             	add    %r11d,%r12d
    e190:	45 89 c3             	mov    %r8d,%r11d
    e193:	41 c1 c3 05          	rol    $0x5,%r11d
    e197:	45 01 dc             	add    %r11d,%r12d
    e19a:	45 89 d3             	mov    %r10d,%r11d
    e19d:	41 31 db             	xor    %ebx,%r11d
    e1a0:	45 21 c3             	and    %r8d,%r11d
    e1a3:	41 c1 c8 02          	ror    $0x2,%r8d
    e1a7:	45 31 d3             	xor    %r10d,%r11d
    e1aa:	47 8d 94 0a 99 79 82 	lea    0x5a827999(%r10,%r9,1),%r10d
    e1b1:	5a 
    e1b2:	41 01 eb             	add    %ebp,%r11d
    e1b5:	44 89 e5             	mov    %r12d,%ebp
    e1b8:	c1 c5 05             	rol    $0x5,%ebp
    e1bb:	41 01 eb             	add    %ebp,%r11d
    e1be:	89 dd                	mov    %ebx,%ebp
    e1c0:	44 31 c5             	xor    %r8d,%ebp
    e1c3:	44 21 e5             	and    %r12d,%ebp
    e1c6:	41 c1 cc 02          	ror    $0x2,%r12d
    e1ca:	31 dd                	xor    %ebx,%ebp
    e1cc:	44 01 d5             	add    %r10d,%ebp
    e1cf:	45 89 da             	mov    %r11d,%r10d
    e1d2:	41 c1 c2 05          	rol    $0x5,%r10d
    e1d6:	44 01 d5             	add    %r10d,%ebp
    e1d9:	45 89 f2             	mov    %r14d,%r10d
    e1dc:	45 31 fa             	xor    %r15d,%r10d
    e1df:	44 33 14 24          	xor    (%rsp),%r10d
    e1e3:	45 89 d6             	mov    %r10d,%r14d
    e1e6:	45 89 c2             	mov    %r8d,%r10d
    e1e9:	41 d1 c6             	rol    %r14d
    e1ec:	45 31 e2             	xor    %r12d,%r10d
    e1ef:	31 cf                	xor    %ecx,%edi
    e1f1:	33 7c 24 28          	xor    0x28(%rsp),%edi
    e1f5:	45 21 da             	and    %r11d,%r10d
    e1f8:	44 89 f0             	mov    %r14d,%eax
    e1fb:	42 8d 9c 33 99 79 82 	lea    0x5a827999(%rbx,%r14,1),%ebx
    e202:	5a 
    e203:	31 d6                	xor    %edx,%esi
    e205:	45 31 c2             	xor    %r8d,%r10d
    e208:	41 89 ee             	mov    %ebp,%r14d
    e20b:	41 c1 cb 02          	ror    $0x2,%r11d
    e20f:	33 7c 24 04          	xor    0x4(%rsp),%edi
    e213:	41 01 da             	add    %ebx,%r10d
    e216:	41 c1 c6 05          	rol    $0x5,%r14d
    e21a:	33 74 24 08          	xor    0x8(%rsp),%esi
    e21e:	33 4c 24 14          	xor    0x14(%rsp),%ecx
    e222:	45 01 f2             	add    %r14d,%r10d
    e225:	45 89 e6             	mov    %r12d,%r14d
    e228:	d1 c7                	rol    %edi
    e22a:	44 31 ce             	xor    %r9d,%esi
    e22d:	45 31 de             	xor    %r11d,%r14d
    e230:	d1 c6                	rol    %esi
    e232:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
    e236:	89 44 24 20          	mov    %eax,0x20(%rsp)
    e23a:	44 89 f3             	mov    %r14d,%ebx
    e23d:	45 8d 84 38 99 79 82 	lea    0x5a827999(%r8,%rdi,1),%r8d
    e244:	5a 
    e245:	45 89 d6             	mov    %r10d,%r14d
    e248:	21 eb                	and    %ebp,%ebx
    e24a:	41 c1 c6 05          	rol    $0x5,%r14d
    e24e:	44 31 e3             	xor    %r12d,%ebx
    e251:	c1 cd 02             	ror    $0x2,%ebp
    e254:	45 8d a4 34 99 79 82 	lea    0x5a827999(%r12,%rsi,1),%r12d
    e25b:	5a 
    e25c:	44 01 c3             	add    %r8d,%ebx
    e25f:	44 01 f3             	add    %r14d,%ebx
    e262:	45 89 de             	mov    %r11d,%r14d
    e265:	41 31 ee             	xor    %ebp,%r14d
    e268:	45 89 f0             	mov    %r14d,%r8d
    e26b:	41 89 ee             	mov    %ebp,%r14d
    e26e:	45 21 d0             	and    %r10d,%r8d
    e271:	41 c1 ca 02          	ror    $0x2,%r10d
    e275:	45 31 d8             	xor    %r11d,%r8d
    e278:	45 01 e0             	add    %r12d,%r8d
    e27b:	41 89 dc             	mov    %ebx,%r12d
    e27e:	41 c1 c4 05          	rol    $0x5,%r12d
    e282:	45 01 e0             	add    %r12d,%r8d
    e285:	31 c1                	xor    %eax,%ecx
    e287:	33 54 24 18          	xor    0x18(%rsp),%edx
    e28b:	45 31 d6             	xor    %r10d,%r14d
    e28e:	44 31 ea             	xor    %r13d,%edx
    e291:	d1 c1                	rol    %ecx
    e293:	41 31 de             	xor    %ebx,%r14d
    e296:	31 fa                	xor    %edi,%edx
    e298:	45 8d 9c 0b a1 eb d9 	lea    0x6ed9eba1(%r11,%rcx,1),%r11d
    e29f:	6e 
    e2a0:	c1 cb 02             	ror    $0x2,%ebx
    e2a3:	d1 c2                	rol    %edx
    e2a5:	45 01 de             	add    %r11d,%r14d
    e2a8:	45 89 c3             	mov    %r8d,%r11d
    e2ab:	89 d0                	mov    %edx,%eax
    e2ad:	44 89 d2             	mov    %r10d,%edx
    e2b0:	41 c1 c3 05          	rol    $0x5,%r11d
    e2b4:	31 da                	xor    %ebx,%edx
    e2b6:	45 01 de             	add    %r11d,%r14d
    e2b9:	44 8d 9c 05 a1 eb d9 	lea    0x6ed9eba1(%rbp,%rax,1),%r11d
    e2c0:	6e 
    e2c1:	89 44 24 24          	mov    %eax,0x24(%rsp)
    e2c5:	41 89 d5             	mov    %edx,%r13d
    e2c8:	44 89 f2             	mov    %r14d,%edx
    e2cb:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    e2cf:	45 31 c5             	xor    %r8d,%r13d
    e2d2:	c1 c2 05             	rol    $0x5,%edx
    e2d5:	45 01 dd             	add    %r11d,%r13d
    e2d8:	44 8b 1c 24          	mov    (%rsp),%r11d
    e2dc:	41 c1 c8 02          	ror    $0x2,%r8d
    e2e0:	41 01 d5             	add    %edx,%r13d
    e2e3:	8b 54 24 14          	mov    0x14(%rsp),%edx
    e2e7:	31 c2                	xor    %eax,%edx
    e2e9:	41 31 d3             	xor    %edx,%r11d
    e2ec:	89 da                	mov    %ebx,%edx
    e2ee:	44 31 c2             	xor    %r8d,%edx
    e2f1:	41 31 f3             	xor    %esi,%r11d
    e2f4:	41 d1 c3             	rol    %r11d
    e2f7:	41 89 d4             	mov    %edx,%r12d
    e2fa:	44 89 ea             	mov    %r13d,%edx
    e2fd:	45 31 f4             	xor    %r14d,%r12d
    e300:	47 8d 94 1a a1 eb d9 	lea    0x6ed9eba1(%r10,%r11,1),%r10d
    e307:	6e 
    e308:	c1 c2 05             	rol    $0x5,%edx
    e30b:	45 01 d4             	add    %r10d,%r12d
    e30e:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
    e313:	41 c1 ce 02          	ror    $0x2,%r14d
    e317:	41 01 d4             	add    %edx,%r12d
    e31a:	44 89 c2             	mov    %r8d,%edx
    e31d:	45 31 fa             	xor    %r15d,%r10d
    e320:	44 33 54 24 04       	xor    0x4(%rsp),%r10d
    e325:	41 31 ca             	xor    %ecx,%r10d
    e328:	41 d1 c2             	rol    %r10d
    e32b:	44 31 f2             	xor    %r14d,%edx
    e32e:	44 33 7c 24 08       	xor    0x8(%rsp),%r15d
    e333:	89 d5                	mov    %edx,%ebp
    e335:	42 8d 9c 13 a1 eb d9 	lea    0x6ed9eba1(%rbx,%r10,1),%ebx
    e33c:	6e 
    e33d:	44 89 e2             	mov    %r12d,%edx
    e340:	44 31 ed             	xor    %r13d,%ebp
    e343:	c1 c2 05             	rol    $0x5,%edx
    e346:	01 dd                	add    %ebx,%ebp
    e348:	41 c1 cd 02          	ror    $0x2,%r13d
    e34c:	44 89 f3             	mov    %r14d,%ebx
    e34f:	01 d5                	add    %edx,%ebp
    e351:	8b 54 24 28          	mov    0x28(%rsp),%edx
    e355:	44 31 eb             	xor    %r13d,%ebx
    e358:	44 31 e3             	xor    %r12d,%ebx
    e35b:	41 c1 cc 02          	ror    $0x2,%r12d
    e35f:	31 d0                	xor    %edx,%eax
    e361:	33 54 24 0c          	xor    0xc(%rsp),%edx
    e365:	44 31 c8             	xor    %r9d,%eax
    e368:	33 44 24 24          	xor    0x24(%rsp),%eax
    e36c:	d1 c0                	rol    %eax
    e36e:	45 8d 84 00 a1 eb d9 	lea    0x6ed9eba1(%r8,%rax,1),%r8d
    e375:	6e 
    e376:	44 01 c3             	add    %r8d,%ebx
    e379:	41 89 e8             	mov    %ebp,%r8d
    e37c:	41 c1 c0 05          	rol    $0x5,%r8d
    e380:	44 01 c3             	add    %r8d,%ebx
    e383:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    e388:	45 31 f8             	xor    %r15d,%r8d
    e38b:	45 89 ef             	mov    %r13d,%r15d
    e38e:	45 31 d8             	xor    %r11d,%r8d
    e391:	45 31 e7             	xor    %r12d,%r15d
    e394:	41 d1 c0             	rol    %r8d
    e397:	41 31 ef             	xor    %ebp,%r15d
    e39a:	c1 cd 02             	ror    $0x2,%ebp
    e39d:	47 8d b4 06 a1 eb d9 	lea    0x6ed9eba1(%r14,%r8,1),%r14d
    e3a4:	6e 
    e3a5:	45 01 f7             	add    %r14d,%r15d
    e3a8:	41 89 de             	mov    %ebx,%r14d
    e3ab:	41 c1 c6 05          	rol    $0x5,%r14d
    e3af:	45 01 f7             	add    %r14d,%r15d
    e3b2:	41 89 d6             	mov    %edx,%r14d
    e3b5:	41 31 fe             	xor    %edi,%r14d
    e3b8:	45 31 d6             	xor    %r10d,%r14d
    e3bb:	41 d1 c6             	rol    %r14d
    e3be:	44 89 f2             	mov    %r14d,%edx
    e3c1:	45 89 e6             	mov    %r12d,%r14d
    e3c4:	41 31 ee             	xor    %ebp,%r14d
    e3c7:	45 8d ac 15 a1 eb d9 	lea    0x6ed9eba1(%r13,%rdx,1),%r13d
    e3ce:	6e 
    e3cf:	89 54 24 14          	mov    %edx,0x14(%rsp)
    e3d3:	8b 54 24 08          	mov    0x8(%rsp),%edx
    e3d7:	41 31 de             	xor    %ebx,%r14d
    e3da:	45 01 ee             	add    %r13d,%r14d
    e3dd:	45 89 fd             	mov    %r15d,%r13d
    e3e0:	33 54 24 10          	xor    0x10(%rsp),%edx
    e3e4:	c1 cb 02             	ror    $0x2,%ebx
    e3e7:	41 c1 c5 05          	rol    $0x5,%r13d
    e3eb:	45 01 ee             	add    %r13d,%r14d
    e3ee:	41 89 d5             	mov    %edx,%r13d
    e3f1:	41 31 f5             	xor    %esi,%r13d
    e3f4:	41 31 c5             	xor    %eax,%r13d
    e3f7:	44 89 ea             	mov    %r13d,%edx
    e3fa:	41 89 ed             	mov    %ebp,%r13d
    e3fd:	d1 c2                	rol    %edx
    e3ff:	41 31 dd             	xor    %ebx,%r13d
    e402:	45 31 fd             	xor    %r15d,%r13d
    e405:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
    e40c:	6e 
    e40d:	89 54 24 08          	mov    %edx,0x8(%rsp)
    e411:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    e415:	45 01 e5             	add    %r12d,%r13d
    e418:	45 89 f4             	mov    %r14d,%r12d
    e41b:	33 14 24             	xor    (%rsp),%edx
    e41e:	41 c1 cf 02          	ror    $0x2,%r15d
    e422:	41 c1 c4 05          	rol    $0x5,%r12d
    e426:	45 01 e5             	add    %r12d,%r13d
    e429:	41 89 d4             	mov    %edx,%r12d
    e42c:	41 31 cc             	xor    %ecx,%r12d
    e42f:	45 31 c4             	xor    %r8d,%r12d
    e432:	41 d1 c4             	rol    %r12d
    e435:	44 89 e2             	mov    %r12d,%edx
    e438:	41 89 dc             	mov    %ebx,%r12d
    e43b:	45 31 fc             	xor    %r15d,%r12d
    e43e:	8d ac 15 a1 eb d9 6e 	lea    0x6ed9eba1(%rbp,%rdx,1),%ebp
    e445:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    e449:	45 31 f4             	xor    %r14d,%r12d
    e44c:	41 c1 ce 02          	ror    $0x2,%r14d
    e450:	41 01 ec             	add    %ebp,%r12d
    e453:	44 89 ed             	mov    %r13d,%ebp
    e456:	c1 c5 05             	rol    $0x5,%ebp
    e459:	41 01 ec             	add    %ebp,%r12d
    e45c:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
    e460:	33 6c 24 04          	xor    0x4(%rsp),%ebp
    e464:	33 6c 24 24          	xor    0x24(%rsp),%ebp
    e468:	33 6c 24 14          	xor    0x14(%rsp),%ebp
    e46c:	d1 c5                	rol    %ebp
    e46e:	89 ea                	mov    %ebp,%edx
    e470:	44 89 fd             	mov    %r15d,%ebp
    e473:	44 31 f5             	xor    %r14d,%ebp
    e476:	8d 9c 13 a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rdx,1),%ebx
    e47d:	89 54 24 28          	mov    %edx,0x28(%rsp)
    e481:	44 31 ed             	xor    %r13d,%ebp
    e484:	01 dd                	add    %ebx,%ebp
    e486:	44 89 e3             	mov    %r12d,%ebx
    e489:	c1 c3 05             	rol    $0x5,%ebx
    e48c:	01 dd                	add    %ebx,%ebp
    e48e:	8b 1c 24             	mov    (%rsp),%ebx
    e491:	41 c1 cd 02          	ror    $0x2,%r13d
    e495:	44 31 cb             	xor    %r9d,%ebx
    e498:	41 31 f9             	xor    %edi,%r9d
    e49b:	44 31 db             	xor    %r11d,%ebx
    e49e:	33 5c 24 08          	xor    0x8(%rsp),%ebx
    e4a2:	41 31 c1             	xor    %eax,%r9d
    e4a5:	44 33 4c 24 28       	xor    0x28(%rsp),%r9d
    e4aa:	d1 c3                	rol    %ebx
    e4ac:	89 da                	mov    %ebx,%edx
    e4ae:	44 89 f3             	mov    %r14d,%ebx
    e4b1:	44 31 eb             	xor    %r13d,%ebx
    e4b4:	45 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%r15,%rdx,1),%r15d
    e4bb:	6e 
    e4bc:	89 14 24             	mov    %edx,(%rsp)
    e4bf:	44 31 e3             	xor    %r12d,%ebx
    e4c2:	41 c1 cc 02          	ror    $0x2,%r12d
    e4c6:	44 01 fb             	add    %r15d,%ebx
    e4c9:	41 89 ef             	mov    %ebp,%r15d
    e4cc:	41 c1 c7 05          	rol    $0x5,%r15d
    e4d0:	44 01 fb             	add    %r15d,%ebx
    e4d3:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    e4d8:	44 33 7c 24 20       	xor    0x20(%rsp),%r15d
    e4dd:	45 31 d7             	xor    %r10d,%r15d
    e4e0:	44 33 7c 24 0c       	xor    0xc(%rsp),%r15d
    e4e5:	41 d1 c7             	rol    %r15d
    e4e8:	44 89 fa             	mov    %r15d,%edx
    e4eb:	45 89 ef             	mov    %r13d,%r15d
    e4ee:	45 31 e7             	xor    %r12d,%r15d
    e4f1:	45 8d b4 16 a1 eb d9 	lea    0x6ed9eba1(%r14,%rdx,1),%r14d
    e4f8:	6e 
    e4f9:	89 54 24 10          	mov    %edx,0x10(%rsp)
    e4fd:	41 31 ef             	xor    %ebp,%r15d
    e500:	c1 cd 02             	ror    $0x2,%ebp
    e503:	45 01 f7             	add    %r14d,%r15d
    e506:	41 89 de             	mov    %ebx,%r14d
    e509:	41 c1 c6 05          	rol    $0x5,%r14d
    e50d:	45 01 fe             	add    %r15d,%r14d
    e510:	45 89 cf             	mov    %r9d,%r15d
    e513:	45 89 e1             	mov    %r12d,%r9d
    e516:	41 d1 c7             	rol    %r15d
    e519:	41 31 e9             	xor    %ebp,%r9d
    e51c:	41 31 d9             	xor    %ebx,%r9d
    e51f:	47 8d ac 3d a1 eb d9 	lea    0x6ed9eba1(%r13,%r15,1),%r13d
    e526:	6e 
    e527:	c1 cb 02             	ror    $0x2,%ebx
    e52a:	45 01 cd             	add    %r9d,%r13d
    e52d:	45 89 f1             	mov    %r14d,%r9d
    e530:	41 c1 c1 05          	rol    $0x5,%r9d
    e534:	45 01 e9             	add    %r13d,%r9d
    e537:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    e53c:	41 31 f5             	xor    %esi,%r13d
    e53f:	31 cf                	xor    %ecx,%edi
    e541:	44 31 d9             	xor    %r11d,%ecx
    e544:	45 31 c5             	xor    %r8d,%r13d
    e547:	44 33 2c 24          	xor    (%rsp),%r13d
    e54b:	41 d1 c5             	rol    %r13d
    e54e:	44 89 ea             	mov    %r13d,%edx
    e551:	41 89 ed             	mov    %ebp,%r13d
    e554:	41 31 dd             	xor    %ebx,%r13d
    e557:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
    e55e:	6e 
    e55f:	89 54 24 18          	mov    %edx,0x18(%rsp)
    e563:	33 7c 24 14          	xor    0x14(%rsp),%edi
    e567:	45 31 f5             	xor    %r14d,%r13d
    e56a:	33 7c 24 10          	xor    0x10(%rsp),%edi
    e56e:	41 c1 ce 02          	ror    $0x2,%r14d
    e572:	8b 54 24 24          	mov    0x24(%rsp),%edx
    e576:	45 01 e5             	add    %r12d,%r13d
    e579:	45 89 cc             	mov    %r9d,%r12d
    e57c:	d1 c7                	rol    %edi
    e57e:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
    e582:	41 c1 c4 05          	rol    $0x5,%r12d
    e586:	31 d6                	xor    %edx,%esi
    e588:	33 74 24 08          	xor    0x8(%rsp),%esi
    e58c:	45 01 ec             	add    %r13d,%r12d
    e58f:	41 89 fd             	mov    %edi,%r13d
    e592:	89 df                	mov    %ebx,%edi
    e594:	44 31 fe             	xor    %r15d,%esi
    e597:	44 31 f7             	xor    %r14d,%edi
    e59a:	42 8d ac 2d a1 eb d9 	lea    0x6ed9eba1(%rbp,%r13,1),%ebp
    e5a1:	6e 
    e5a2:	d1 c6                	rol    %esi
    e5a4:	44 31 cf             	xor    %r9d,%edi
    e5a7:	41 c1 c9 02          	ror    $0x2,%r9d
    e5ab:	01 fd                	add    %edi,%ebp
    e5ad:	44 89 e7             	mov    %r12d,%edi
    e5b0:	c1 c7 05             	rol    $0x5,%edi
    e5b3:	01 ef                	add    %ebp,%edi
    e5b5:	89 f5                	mov    %esi,%ebp
    e5b7:	44 89 f6             	mov    %r14d,%esi
    e5ba:	44 31 ce             	xor    %r9d,%esi
    e5bd:	8d 9c 2b a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rbp,1),%ebx
    e5c4:	44 31 e6             	xor    %r12d,%esi
    e5c7:	41 c1 cc 02          	ror    $0x2,%r12d
    e5cb:	01 f3                	add    %esi,%ebx
    e5cd:	89 fe                	mov    %edi,%esi
    e5cf:	c1 c6 05             	rol    $0x5,%esi
    e5d2:	01 de                	add    %ebx,%esi
    e5d4:	33 4c 24 18          	xor    0x18(%rsp),%ecx
    e5d8:	44 89 cb             	mov    %r9d,%ebx
    e5db:	44 31 d2             	xor    %r10d,%edx
    e5de:	d1 c1                	rol    %ecx
    e5e0:	44 31 e3             	xor    %r12d,%ebx
    e5e3:	41 31 c3             	xor    %eax,%r11d
    e5e6:	44 33 1c 24          	xor    (%rsp),%r11d
    e5ea:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    e5ee:	31 fb                	xor    %edi,%ebx
    e5f0:	c1 cf 02             	ror    $0x2,%edi
    e5f3:	41 31 eb             	xor    %ebp,%r11d
    e5f6:	41 8d 8c 0e a1 eb d9 	lea    0x6ed9eba1(%r14,%rcx,1),%ecx
    e5fd:	6e 
    e5fe:	41 89 f6             	mov    %esi,%r14d
    e601:	45 31 c2             	xor    %r8d,%r10d
    e604:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
    e609:	41 c1 c6 05          	rol    $0x5,%r14d
    e60d:	01 cb                	add    %ecx,%ebx
    e60f:	44 33 54 24 1c       	xor    0x1c(%rsp),%r10d
    e614:	44 89 f1             	mov    %r14d,%ecx
    e617:	41 d1 c2             	rol    %r10d
    e61a:	01 d9                	add    %ebx,%ecx
    e61c:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
    e620:	44 89 54 24 2c       	mov    %r10d,0x2c(%rsp)
    e625:	31 da                	xor    %ebx,%edx
    e627:	44 31 ea             	xor    %r13d,%edx
    e62a:	41 89 d6             	mov    %edx,%r14d
    e62d:	44 89 e2             	mov    %r12d,%edx
    e630:	41 d1 c6             	rol    %r14d
    e633:	31 fa                	xor    %edi,%edx
    e635:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
    e63a:	47 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%r9,%r14,1),%r9d
    e641:	6e 
    e642:	41 89 ce             	mov    %ecx,%r14d
    e645:	31 f2                	xor    %esi,%edx
    e647:	41 c1 c6 05          	rol    $0x5,%r14d
    e64b:	41 01 d1             	add    %edx,%r9d
    e64e:	c1 ce 02             	ror    $0x2,%esi
    e651:	44 89 f2             	mov    %r14d,%edx
    e654:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    e659:	44 01 ca             	add    %r9d,%edx
    e65c:	45 89 d9             	mov    %r11d,%r9d
    e65f:	41 89 fb             	mov    %edi,%r11d
    e662:	41 d1 c1             	rol    %r9d
    e665:	41 31 f3             	xor    %esi,%r11d
    e668:	42 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%rdi,%r10,1),%edi
    e66f:	6e 
    e670:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    e675:	41 31 cb             	xor    %ecx,%r11d
    e678:	47 8d 8c 0c a1 eb d9 	lea    0x6ed9eba1(%r12,%r9,1),%r9d
    e67f:	6e 
    e680:	41 89 d4             	mov    %edx,%r12d
    e683:	41 c1 c4 05          	rol    $0x5,%r12d
    e687:	45 01 cb             	add    %r9d,%r11d
    e68a:	c1 c9 02             	ror    $0x2,%ecx
    e68d:	45 01 e3             	add    %r12d,%r11d
    e690:	41 89 f4             	mov    %esi,%r12d
    e693:	41 31 cc             	xor    %ecx,%r12d
    e696:	44 31 f0             	xor    %r14d,%eax
    e699:	45 89 e1             	mov    %r12d,%r9d
    e69c:	45 89 dc             	mov    %r11d,%r12d
    e69f:	44 31 f8             	xor    %r15d,%eax
    e6a2:	33 44 24 20          	xor    0x20(%rsp),%eax
    e6a6:	41 c1 c4 05          	rol    $0x5,%r12d
    e6aa:	41 31 d1             	xor    %edx,%r9d
    e6ad:	d1 c0                	rol    %eax
    e6af:	44 01 cf             	add    %r9d,%edi
    e6b2:	89 44 24 14          	mov    %eax,0x14(%rsp)
    e6b6:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
    e6bb:	c1 ca 02             	ror    $0x2,%edx
    e6be:	44 01 e7             	add    %r12d,%edi
    e6c1:	8d b4 06 dc bc 1b 8f 	lea    -0x70e44324(%rsi,%rax,1),%esi
    e6c8:	45 89 dc             	mov    %r11d,%r12d
    e6cb:	89 f8                	mov    %edi,%eax
    e6cd:	45 31 c8             	xor    %r9d,%r8d
    e6d0:	44 33 44 24 18       	xor    0x18(%rsp),%r8d
    e6d5:	44 33 44 24 04       	xor    0x4(%rsp),%r8d
    e6da:	c1 c0 05             	rol    $0x5,%eax
    e6dd:	41 21 d4             	and    %edx,%r12d
    e6e0:	41 d1 c0             	rol    %r8d
    e6e3:	01 c6                	add    %eax,%esi
    e6e5:	44 89 d8             	mov    %r11d,%eax
    e6e8:	41 c1 cb 02          	ror    $0x2,%r11d
    e6ec:	09 d0                	or     %edx,%eax
    e6ee:	21 c8                	and    %ecx,%eax
    e6f0:	44 09 e0             	or     %r12d,%eax
    e6f3:	45 89 c4             	mov    %r8d,%r12d
    e6f6:	41 89 f8             	mov    %edi,%r8d
    e6f9:	01 c6                	add    %eax,%esi
    e6fb:	45 09 d8             	or     %r11d,%r8d
    e6fe:	89 f8                	mov    %edi,%eax
    e700:	44 89 64 24 08       	mov    %r12d,0x8(%rsp)
    e705:	41 21 d0             	and    %edx,%r8d
    e708:	44 21 d8             	and    %r11d,%eax
    e70b:	c1 cf 02             	ror    $0x2,%edi
    e70e:	44 09 c0             	or     %r8d,%eax
    e711:	46 8d 84 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%r8d
    e718:	8f 
    e719:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    e71e:	89 f1                	mov    %esi,%ecx
    e720:	41 01 c0             	add    %eax,%r8d
    e723:	c1 c1 05             	rol    $0x5,%ecx
    e726:	45 31 e6             	xor    %r12d,%r14d
    e729:	41 01 c8             	add    %ecx,%r8d
    e72c:	45 31 ee             	xor    %r13d,%r14d
    e72f:	44 89 c1             	mov    %r8d,%ecx
    e732:	45 31 d6             	xor    %r10d,%r14d
    e735:	c1 c1 05             	rol    $0x5,%ecx
    e738:	41 31 d9             	xor    %ebx,%r9d
    e73b:	44 33 24 24          	xor    (%rsp),%r12d
    e73f:	41 d1 c6             	rol    %r14d
    e742:	89 c8                	mov    %ecx,%eax
    e744:	89 f1                	mov    %esi,%ecx
    e746:	45 89 ca             	mov    %r9d,%r10d
    e749:	42 8d 94 32 dc bc 1b 	lea    -0x70e44324(%rdx,%r14,1),%edx
    e750:	8f 
    e751:	21 f9                	and    %edi,%ecx
    e753:	41 31 ea             	xor    %ebp,%r10d
    e756:	41 89 d9             	mov    %ebx,%r9d
    e759:	01 d0                	add    %edx,%eax
    e75b:	89 f2                	mov    %esi,%edx
    e75d:	c1 ce 02             	ror    $0x2,%esi
    e760:	44 33 54 24 14       	xor    0x14(%rsp),%r10d
    e765:	09 fa                	or     %edi,%edx
    e767:	41 d1 c2             	rol    %r10d
    e76a:	44 33 64 24 1c       	xor    0x1c(%rsp),%r12d
    e76f:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
    e774:	44 21 da             	and    %r11d,%edx
    e777:	44 89 54 24 0c       	mov    %r10d,0xc(%rsp)
    e77c:	41 d1 c4             	rol    %r12d
    e77f:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    e783:	09 ca                	or     %ecx,%edx
    e785:	44 89 c1             	mov    %r8d,%ecx
    e788:	47 8d 94 13 dc bc 1b 	lea    -0x70e44324(%r11,%r10,1),%r10d
    e78f:	8f 
    e790:	01 c2                	add    %eax,%edx
    e792:	09 f1                	or     %esi,%ecx
    e794:	46 8d 9c 27 dc bc 1b 	lea    -0x70e44324(%rdi,%r12,1),%r11d
    e79b:	8f 
    e79c:	44 89 c0             	mov    %r8d,%eax
    e79f:	21 f9                	and    %edi,%ecx
    e7a1:	21 f0                	and    %esi,%eax
    e7a3:	41 c1 c8 02          	ror    $0x2,%r8d
    e7a7:	09 c8                	or     %ecx,%eax
    e7a9:	8b 0c 24             	mov    (%rsp),%ecx
    e7ac:	41 01 c2             	add    %eax,%r10d
    e7af:	89 d0                	mov    %edx,%eax
    e7b1:	c1 c0 05             	rol    $0x5,%eax
    e7b4:	41 01 c2             	add    %eax,%r10d
    e7b7:	44 89 d7             	mov    %r10d,%edi
    e7ba:	c1 c7 05             	rol    $0x5,%edi
    e7bd:	89 f8                	mov    %edi,%eax
    e7bf:	89 d7                	mov    %edx,%edi
    e7c1:	44 09 c7             	or     %r8d,%edi
    e7c4:	44 01 d8             	add    %r11d,%eax
    e7c7:	41 89 fb             	mov    %edi,%r11d
    e7ca:	89 d7                	mov    %edx,%edi
    e7cc:	44 21 c7             	and    %r8d,%edi
    e7cf:	41 21 f3             	and    %esi,%r11d
    e7d2:	41 09 fb             	or     %edi,%r11d
    e7d5:	41 01 c3             	add    %eax,%r11d
    e7d8:	41 31 d9             	xor    %ebx,%r9d
    e7db:	44 33 4c 24 20       	xor    0x20(%rsp),%r9d
    e7e0:	c1 ca 02             	ror    $0x2,%edx
    e7e3:	45 31 f1             	xor    %r14d,%r9d
    e7e6:	44 31 f9             	xor    %r15d,%ecx
    e7e9:	33 4c 24 04          	xor    0x4(%rsp),%ecx
    e7ed:	44 89 cf             	mov    %r9d,%edi
    e7f0:	d1 c7                	rol    %edi
    e7f2:	41 89 f9             	mov    %edi,%r9d
    e7f5:	44 89 d7             	mov    %r10d,%edi
    e7f8:	09 d7                	or     %edx,%edi
    e7fa:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
    e7ff:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
    e803:	89 f8                	mov    %edi,%eax
    e805:	44 89 d7             	mov    %r10d,%edi
    e808:	41 c1 ca 02          	ror    $0x2,%r10d
    e80c:	44 21 c0             	and    %r8d,%eax
    e80f:	21 d7                	and    %edx,%edi
    e811:	09 c7                	or     %eax,%edi
    e813:	42 8d 84 0e dc bc 1b 	lea    -0x70e44324(%rsi,%r9,1),%eax
    e81a:	8f 
    e81b:	44 89 de             	mov    %r11d,%esi
    e81e:	44 8b 4c 24 18       	mov    0x18(%rsp),%r9d
    e823:	01 c7                	add    %eax,%edi
    e825:	c1 c6 05             	rol    $0x5,%esi
    e828:	01 f7                	add    %esi,%edi
    e82a:	89 ce                	mov    %ecx,%esi
    e82c:	d1 c6                	rol    %esi
    e82e:	89 74 24 24          	mov    %esi,0x24(%rsp)
    e832:	41 8d b4 30 dc bc 1b 	lea    -0x70e44324(%r8,%rsi,1),%esi
    e839:	8f 
    e83a:	41 89 f8             	mov    %edi,%r8d
    e83d:	41 c1 c0 05          	rol    $0x5,%r8d
    e841:	44 89 c0             	mov    %r8d,%eax
    e844:	45 89 d8             	mov    %r11d,%r8d
    e847:	45 09 d0             	or     %r10d,%r8d
    e84a:	01 f0                	add    %esi,%eax
    e84c:	44 89 c1             	mov    %r8d,%ecx
    e84f:	45 89 d8             	mov    %r11d,%r8d
    e852:	41 c1 cb 02          	ror    $0x2,%r11d
    e856:	45 21 d0             	and    %r10d,%r8d
    e859:	21 d1                	and    %edx,%ecx
    e85b:	44 89 c6             	mov    %r8d,%esi
    e85e:	09 ce                	or     %ecx,%esi
    e860:	89 f9                	mov    %edi,%ecx
    e862:	01 c6                	add    %eax,%esi
    e864:	89 d8                	mov    %ebx,%eax
    e866:	44 09 d9             	or     %r11d,%ecx
    e869:	44 31 c8             	xor    %r9d,%eax
    e86c:	33 44 24 2c          	xor    0x2c(%rsp),%eax
    e870:	44 21 d1             	and    %r10d,%ecx
    e873:	44 31 e0             	xor    %r12d,%eax
    e876:	41 89 c0             	mov    %eax,%r8d
    e879:	89 f8                	mov    %edi,%eax
    e87b:	41 d1 c0             	rol    %r8d
    e87e:	44 21 d8             	and    %r11d,%eax
    e881:	45 31 ef             	xor    %r13d,%r15d
    e884:	c1 cf 02             	ror    $0x2,%edi
    e887:	09 c8                	or     %ecx,%eax
    e889:	42 8d 94 02 dc bc 1b 	lea    -0x70e44324(%rdx,%r8,1),%edx
    e890:	8f 
    e891:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
    e895:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
    e89a:	01 c2                	add    %eax,%edx
    e89c:	89 f0                	mov    %esi,%eax
    e89e:	41 89 f8             	mov    %edi,%r8d
    e8a1:	89 f7                	mov    %esi,%edi
    e8a3:	c1 c0 05             	rol    $0x5,%eax
    e8a6:	44 31 f9             	xor    %r15d,%ecx
    e8a9:	33 4c 24 10          	xor    0x10(%rsp),%ecx
    e8ad:	44 09 c7             	or     %r8d,%edi
    e8b0:	01 c2                	add    %eax,%edx
    e8b2:	d1 c1                	rol    %ecx
    e8b4:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    e8b9:	89 d0                	mov    %edx,%eax
    e8bb:	41 8d 9c 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%ebx
    e8c2:	8f 
    e8c3:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    e8c7:	89 f1                	mov    %esi,%ecx
    e8c9:	c1 c0 05             	rol    $0x5,%eax
    e8cc:	44 21 c1             	and    %r8d,%ecx
    e8cf:	01 d8                	add    %ebx,%eax
    e8d1:	89 fb                	mov    %edi,%ebx
    e8d3:	89 d7                	mov    %edx,%edi
    e8d5:	44 21 db             	and    %r11d,%ebx
    e8d8:	09 cb                	or     %ecx,%ebx
    e8da:	89 f1                	mov    %esi,%ecx
    e8dc:	01 c3                	add    %eax,%ebx
    e8de:	44 89 c8             	mov    %r9d,%eax
    e8e1:	c1 c9 02             	ror    $0x2,%ecx
    e8e4:	31 e8                	xor    %ebp,%eax
    e8e6:	33 44 24 08          	xor    0x8(%rsp),%eax
    e8ea:	33 44 24 24          	xor    0x24(%rsp),%eax
    e8ee:	21 cf                	and    %ecx,%edi
    e8f0:	41 89 c1             	mov    %eax,%r9d
    e8f3:	89 d0                	mov    %edx,%eax
    e8f5:	41 89 fa             	mov    %edi,%r10d
    e8f8:	c1 ca 02             	ror    $0x2,%edx
    e8fb:	09 c8                	or     %ecx,%eax
    e8fd:	41 d1 c1             	rol    %r9d
    e900:	44 21 c0             	and    %r8d,%eax
    e903:	44 89 0c 24          	mov    %r9d,(%rsp)
    e907:	41 09 c2             	or     %eax,%r10d
    e90a:	43 8d 84 0b dc bc 1b 	lea    -0x70e44324(%r11,%r9,1),%eax
    e911:	8f 
    e912:	41 01 c2             	add    %eax,%r10d
    e915:	89 d8                	mov    %ebx,%eax
    e917:	c1 c0 05             	rol    $0x5,%eax
    e91a:	41 01 c2             	add    %eax,%r10d
    e91d:	44 89 e8             	mov    %r13d,%eax
    e920:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    e925:	44 31 f8             	xor    %r15d,%eax
    e928:	41 89 c1             	mov    %eax,%r9d
    e92b:	45 31 f1             	xor    %r14d,%r9d
    e92e:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
    e933:	44 31 ed             	xor    %r13d,%ebp
    e936:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
    e93a:	45 89 cb             	mov    %r9d,%r11d
    e93d:	44 33 7c 24 04       	xor    0x4(%rsp),%r15d
    e942:	41 d1 c3             	rol    %r11d
    e945:	44 89 ff             	mov    %r15d,%edi
    e948:	43 8d b4 18 dc bc 1b 	lea    -0x70e44324(%r8,%r11,1),%esi
    e94f:	8f 
    e950:	45 89 d0             	mov    %r10d,%r8d
    e953:	44 31 e7             	xor    %r12d,%edi
    e956:	33 3c 24             	xor    (%rsp),%edi
    e959:	41 c1 c0 05          	rol    $0x5,%r8d
    e95d:	41 89 ff             	mov    %edi,%r15d
    e960:	44 01 c6             	add    %r8d,%esi
    e963:	41 89 d8             	mov    %ebx,%r8d
    e966:	41 d1 c7             	rol    %r15d
    e969:	41 09 d0             	or     %edx,%r8d
    e96c:	46 8d 8c 3a dc bc 1b 	lea    -0x70e44324(%rdx,%r15,1),%r9d
    e973:	8f 
    e974:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
    e979:	44 89 c0             	mov    %r8d,%eax
    e97c:	41 89 d8             	mov    %ebx,%r8d
    e97f:	c1 cb 02             	ror    $0x2,%ebx
    e982:	41 21 d0             	and    %edx,%r8d
    e985:	21 c8                	and    %ecx,%eax
    e987:	44 09 c0             	or     %r8d,%eax
    e98a:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
    e98f:	01 f0                	add    %esi,%eax
    e991:	44 89 d6             	mov    %r10d,%esi
    e994:	41 31 e8             	xor    %ebp,%r8d
    e997:	09 de                	or     %ebx,%esi
    e999:	41 d1 c0             	rol    %r8d
    e99c:	21 d6                	and    %edx,%esi
    e99e:	44 89 c5             	mov    %r8d,%ebp
    e9a1:	45 89 d0             	mov    %r10d,%r8d
    e9a4:	41 c1 ca 02          	ror    $0x2,%r10d
    e9a8:	41 21 d8             	and    %ebx,%r8d
    e9ab:	41 09 f0             	or     %esi,%r8d
    e9ae:	8d b4 29 dc bc 1b 8f 	lea    -0x70e44324(%rcx,%rbp,1),%esi
    e9b5:	89 c1                	mov    %eax,%ecx
    e9b7:	41 01 f0             	add    %esi,%r8d
    e9ba:	c1 c1 05             	rol    $0x5,%ecx
    e9bd:	44 89 ee             	mov    %r13d,%esi
    e9c0:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    e9c5:	41 01 c8             	add    %ecx,%r8d
    e9c8:	89 c1                	mov    %eax,%ecx
    e9ca:	44 89 c2             	mov    %r8d,%edx
    e9cd:	44 21 d1             	and    %r10d,%ecx
    e9d0:	44 89 c7             	mov    %r8d,%edi
    e9d3:	c1 c2 05             	rol    $0x5,%edx
    e9d6:	44 01 ca             	add    %r9d,%edx
    e9d9:	41 89 c1             	mov    %eax,%r9d
    e9dc:	45 09 d1             	or     %r10d,%r9d
    e9df:	41 21 d9             	and    %ebx,%r9d
    e9e2:	41 09 c9             	or     %ecx,%r9d
    e9e5:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    e9e9:	41 01 d1             	add    %edx,%r9d
    e9ec:	44 31 ee             	xor    %r13d,%esi
    e9ef:	33 74 24 10          	xor    0x10(%rsp),%esi
    e9f3:	c1 c8 02             	ror    $0x2,%eax
    e9f6:	44 31 de             	xor    %r11d,%esi
    e9f9:	21 c7                	and    %eax,%edi
    e9fb:	89 f2                	mov    %esi,%edx
    e9fd:	d1 c2                	rol    %edx
    e9ff:	41 89 d7             	mov    %edx,%r15d
    ea02:	44 89 c2             	mov    %r8d,%edx
    ea05:	41 c1 c8 02          	ror    $0x2,%r8d
    ea09:	09 c2                	or     %eax,%edx
    ea0b:	44 21 d2             	and    %r10d,%edx
    ea0e:	09 d7                	or     %edx,%edi
    ea10:	42 8d 94 3b dc bc 1b 	lea    -0x70e44324(%rbx,%r15,1),%edx
    ea17:	8f 
    ea18:	8b 5c 24 14          	mov    0x14(%rsp),%ebx
    ea1c:	01 d7                	add    %edx,%edi
    ea1e:	44 89 ca             	mov    %r9d,%edx
    ea21:	c1 c2 05             	rol    $0x5,%edx
    ea24:	31 d9                	xor    %ebx,%ecx
    ea26:	33 4c 24 24          	xor    0x24(%rsp),%ecx
    ea2a:	01 d7                	add    %edx,%edi
    ea2c:	31 e9                	xor    %ebp,%ecx
    ea2e:	d1 c1                	rol    %ecx
    ea30:	89 fa                	mov    %edi,%edx
    ea32:	41 8d b4 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%esi
    ea39:	8f 
    ea3a:	c1 c2 05             	rol    $0x5,%edx
    ea3d:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    ea41:	44 89 c9             	mov    %r9d,%ecx
    ea44:	01 f2                	add    %esi,%edx
    ea46:	44 89 ce             	mov    %r9d,%esi
    ea49:	44 21 c1             	and    %r8d,%ecx
    ea4c:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
    ea51:	44 09 c6             	or     %r8d,%esi
    ea54:	41 c1 c9 02          	ror    $0x2,%r9d
    ea58:	21 c6                	and    %eax,%esi
    ea5a:	09 ce                	or     %ecx,%esi
    ea5c:	89 f9                	mov    %edi,%ecx
    ea5e:	01 d6                	add    %edx,%esi
    ea60:	44 89 ea             	mov    %r13d,%edx
    ea63:	44 31 d2             	xor    %r10d,%edx
    ea66:	33 54 24 18          	xor    0x18(%rsp),%edx
    ea6a:	33 54 24 1c          	xor    0x1c(%rsp),%edx
    ea6e:	d1 c2                	rol    %edx
    ea70:	41 89 d5             	mov    %edx,%r13d
    ea73:	89 fa                	mov    %edi,%edx
    ea75:	44 09 ca             	or     %r9d,%edx
    ea78:	44 89 6c 24 2c       	mov    %r13d,0x2c(%rsp)
    ea7d:	44 21 c2             	and    %r8d,%edx
    ea80:	44 21 c9             	and    %r9d,%ecx
    ea83:	c1 cf 02             	ror    $0x2,%edi
    ea86:	09 d1                	or     %edx,%ecx
    ea88:	42 8d 94 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%edx
    ea8f:	8f 
    ea90:	89 f0                	mov    %esi,%eax
    ea92:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    ea97:	01 d1                	add    %edx,%ecx
    ea99:	c1 c0 05             	rol    $0x5,%eax
    ea9c:	01 c1                	add    %eax,%ecx
    ea9e:	89 d8                	mov    %ebx,%eax
    eaa0:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
    eaa4:	44 31 f0             	xor    %r14d,%eax
    eaa7:	31 c3                	xor    %eax,%ebx
    eaa9:	44 31 fb             	xor    %r15d,%ebx
    eaac:	89 d8                	mov    %ebx,%eax
    eaae:	d1 c0                	rol    %eax
    eab0:	41 8d 94 00 dc bc 1b 	lea    -0x70e44324(%r8,%rax,1),%edx
    eab7:	8f 
    eab8:	41 89 c8             	mov    %ecx,%r8d
    eabb:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    eabf:	8b 1c 24             	mov    (%rsp),%ebx
    eac2:	41 c1 c0 05          	rol    $0x5,%r8d
    eac6:	44 89 c0             	mov    %r8d,%eax
    eac9:	41 89 f0             	mov    %esi,%r8d
    eacc:	01 d0                	add    %edx,%eax
    eace:	89 f2                	mov    %esi,%edx
    ead0:	41 21 f8             	and    %edi,%r8d
    ead3:	c1 ce 02             	ror    $0x2,%esi
    ead6:	09 fa                	or     %edi,%edx
    ead8:	44 21 ca             	and    %r9d,%edx
    eadb:	44 09 c2             	or     %r8d,%edx
    eade:	45 89 d0             	mov    %r10d,%r8d
    eae1:	45 31 e8             	xor    %r13d,%r8d
    eae4:	01 c2                	add    %eax,%edx
    eae6:	89 c8                	mov    %ecx,%eax
    eae8:	41 31 d8             	xor    %ebx,%r8d
    eaeb:	44 33 44 24 20       	xor    0x20(%rsp),%r8d
    eaf0:	21 f0                	and    %esi,%eax
    eaf2:	41 d1 c0             	rol    %r8d
    eaf5:	45 89 c2             	mov    %r8d,%r10d
    eaf8:	41 89 c8             	mov    %ecx,%r8d
    eafb:	c1 c9 02             	ror    $0x2,%ecx
    eafe:	41 09 f0             	or     %esi,%r8d
    eb01:	44 89 14 24          	mov    %r10d,(%rsp)
    eb05:	41 21 f8             	and    %edi,%r8d
    eb08:	44 09 c0             	or     %r8d,%eax
    eb0b:	47 8d 84 11 dc bc 1b 	lea    -0x70e44324(%r9,%r10,1),%r8d
    eb12:	8f 
    eb13:	41 89 d1             	mov    %edx,%r9d
    eb16:	44 01 c0             	add    %r8d,%eax
    eb19:	41 c1 c1 05          	rol    $0x5,%r9d
    eb1d:	41 89 d0             	mov    %edx,%r8d
    eb20:	44 01 c8             	add    %r9d,%eax
    eb23:	45 89 f1             	mov    %r14d,%r9d
    eb26:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
    eb2b:	45 31 e1             	xor    %r12d,%r9d
    eb2e:	45 31 d9             	xor    %r11d,%r9d
    eb31:	44 33 4c 24 2c       	xor    0x2c(%rsp),%r9d
    eb36:	41 21 c8             	and    %ecx,%r8d
    eb39:	41 d1 c1             	rol    %r9d
    eb3c:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    eb41:	46 8d 94 0f dc bc 1b 	lea    -0x70e44324(%rdi,%r9,1),%r10d
    eb48:	8f 
    eb49:	89 c7                	mov    %eax,%edi
    eb4b:	41 89 d1             	mov    %edx,%r9d
    eb4e:	c1 c7 05             	rol    $0x5,%edi
    eb51:	41 09 c9             	or     %ecx,%r9d
    eb54:	c1 ca 02             	ror    $0x2,%edx
    eb57:	44 01 d7             	add    %r10d,%edi
    eb5a:	45 89 ca             	mov    %r9d,%r10d
    eb5d:	41 21 f2             	and    %esi,%r10d
    eb60:	45 09 c2             	or     %r8d,%r10d
    eb63:	45 89 e8             	mov    %r13d,%r8d
    eb66:	45 31 f0             	xor    %r14d,%r8d
    eb69:	41 01 fa             	add    %edi,%r10d
    eb6c:	41 31 e8             	xor    %ebp,%r8d
    eb6f:	44 33 44 24 3c       	xor    0x3c(%rsp),%r8d
    eb74:	44 89 c7             	mov    %r8d,%edi
    eb77:	d1 c7                	rol    %edi
    eb79:	41 89 fd             	mov    %edi,%r13d
    eb7c:	89 c7                	mov    %eax,%edi
    eb7e:	09 d7                	or     %edx,%edi
    eb80:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
    eb85:	41 89 f8             	mov    %edi,%r8d
    eb88:	89 c7                	mov    %eax,%edi
    eb8a:	c1 c8 02             	ror    $0x2,%eax
    eb8d:	41 21 c8             	and    %ecx,%r8d
    eb90:	21 d7                	and    %edx,%edi
    eb92:	44 09 c7             	or     %r8d,%edi
    eb95:	46 8d 84 2e dc bc 1b 	lea    -0x70e44324(%rsi,%r13,1),%r8d
    eb9c:	8f 
    eb9d:	44 89 d6             	mov    %r10d,%esi
    eba0:	44 8b 6c 24 24       	mov    0x24(%rsp),%r13d
    eba5:	44 01 c7             	add    %r8d,%edi
    eba8:	c1 c6 05             	rol    $0x5,%esi
    ebab:	41 89 c0             	mov    %eax,%r8d
    ebae:	01 f7                	add    %esi,%edi
    ebb0:	44 89 e6             	mov    %r12d,%esi
    ebb3:	44 31 ee             	xor    %r13d,%esi
    ebb6:	33 74 24 1c          	xor    0x1c(%rsp),%esi
    ebba:	33 34 24             	xor    (%rsp),%esi
    ebbd:	d1 c6                	rol    %esi
    ebbf:	41 89 f4             	mov    %esi,%r12d
    ebc2:	89 d6                	mov    %edx,%esi
    ebc4:	31 c6                	xor    %eax,%esi
    ebc6:	42 8d 8c 21 d6 c1 62 	lea    -0x359d3e2a(%rcx,%r12,1),%ecx
    ebcd:	ca 
    ebce:	44 89 64 24 0c       	mov    %r12d,0xc(%rsp)
    ebd3:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
    ebd8:	44 31 d6             	xor    %r10d,%esi
    ebdb:	41 c1 ca 02          	ror    $0x2,%r10d
    ebdf:	01 ce                	add    %ecx,%esi
    ebe1:	89 f9                	mov    %edi,%ecx
    ebe3:	c1 c1 05             	rol    $0x5,%ecx
    ebe6:	01 ce                	add    %ecx,%esi
    ebe8:	45 31 e6             	xor    %r12d,%r14d
    ebeb:	45 31 d0             	xor    %r10d,%r8d
    ebee:	44 89 e9             	mov    %r13d,%ecx
    ebf1:	45 89 f1             	mov    %r14d,%r9d
    ebf4:	41 31 f8             	xor    %edi,%r8d
    ebf7:	c1 cf 02             	ror    $0x2,%edi
    ebfa:	45 31 f9             	xor    %r15d,%r9d
    ebfd:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
    ec02:	45 89 ce             	mov    %r9d,%r14d
    ec05:	41 89 d9             	mov    %ebx,%r9d
    ec08:	41 d1 c6             	rol    %r14d
    ec0b:	44 89 74 24 10       	mov    %r14d,0x10(%rsp)
    ec10:	42 8d 94 32 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r14,1),%edx
    ec17:	ca 
    ec18:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
    ec1d:	41 01 d0             	add    %edx,%r8d
    ec20:	89 f2                	mov    %esi,%edx
    ec22:	c1 c2 05             	rol    $0x5,%edx
    ec25:	44 31 f1             	xor    %r14d,%ecx
    ec28:	33 4c 24 20          	xor    0x20(%rsp),%ecx
    ec2c:	33 4c 24 08          	xor    0x8(%rsp),%ecx
    ec30:	41 01 d0             	add    %edx,%r8d
    ec33:	41 89 cd             	mov    %ecx,%r13d
    ec36:	44 89 d2             	mov    %r10d,%edx
    ec39:	89 f9                	mov    %edi,%ecx
    ec3b:	41 d1 c5             	rol    %r13d
    ec3e:	31 fa                	xor    %edi,%edx
    ec40:	31 f2                	xor    %esi,%edx
    ec42:	42 8d 84 28 d6 c1 62 	lea    -0x359d3e2a(%rax,%r13,1),%eax
    ec49:	ca 
    ec4a:	c1 ce 02             	ror    $0x2,%esi
    ec4d:	44 89 6c 24 14       	mov    %r13d,0x14(%rsp)
    ec52:	01 c2                	add    %eax,%edx
    ec54:	44 89 c0             	mov    %r8d,%eax
    ec57:	31 f1                	xor    %esi,%ecx
    ec59:	c1 c0 05             	rol    $0x5,%eax
    ec5c:	41 89 cd             	mov    %ecx,%r13d
    ec5f:	44 89 f1             	mov    %r14d,%ecx
    ec62:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
    ec67:	01 c2                	add    %eax,%edx
    ec69:	44 89 e0             	mov    %r12d,%eax
    ec6c:	45 31 c5             	xor    %r8d,%r13d
    ec6f:	44 31 d9             	xor    %r11d,%ecx
    ec72:	31 d8                	xor    %ebx,%eax
    ec74:	33 44 24 2c          	xor    0x2c(%rsp),%eax
    ec78:	33 44 24 0c          	xor    0xc(%rsp),%eax
    ec7c:	41 c1 c8 02          	ror    $0x2,%r8d
    ec80:	d1 c0                	rol    %eax
    ec82:	44 31 f1             	xor    %r14d,%ecx
    ec85:	41 89 f4             	mov    %esi,%r12d
    ec88:	89 44 24 18          	mov    %eax,0x18(%rsp)
    ec8c:	41 8d 84 02 d6 c1 62 	lea    -0x359d3e2a(%r10,%rax,1),%eax
    ec93:	ca 
    ec94:	41 01 c5             	add    %eax,%r13d
    ec97:	89 d0                	mov    %edx,%eax
    ec99:	c1 c0 05             	rol    $0x5,%eax
    ec9c:	41 01 c5             	add    %eax,%r13d
    ec9f:	33 4c 24 10          	xor    0x10(%rsp),%ecx
    eca3:	45 31 c4             	xor    %r8d,%r12d
    eca6:	89 cb                	mov    %ecx,%ebx
    eca8:	41 31 d4             	xor    %edx,%r12d
    ecab:	c1 ca 02             	ror    $0x2,%edx
    ecae:	d1 c3                	rol    %ebx
    ecb0:	41 89 d2             	mov    %edx,%r10d
    ecb3:	8d 84 1f d6 c1 62 ca 	lea    -0x359d3e2a(%rdi,%rbx,1),%eax
    ecba:	44 89 ef             	mov    %r13d,%edi
    ecbd:	89 5c 24 54          	mov    %ebx,0x54(%rsp)
    ecc1:	41 01 c4             	add    %eax,%r12d
    ecc4:	c1 c7 05             	rol    $0x5,%edi
    ecc7:	44 89 c8             	mov    %r9d,%eax
    ecca:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
    ecce:	41 01 fc             	add    %edi,%r12d
    ecd1:	44 89 c7             	mov    %r8d,%edi
    ecd4:	31 e8                	xor    %ebp,%eax
    ecd6:	33 04 24             	xor    (%rsp),%eax
    ecd9:	31 d7                	xor    %edx,%edi
    ecdb:	33 44 24 14          	xor    0x14(%rsp),%eax
    ecdf:	45 89 d9             	mov    %r11d,%r9d
    ece2:	d1 c0                	rol    %eax
    ece4:	89 fb                	mov    %edi,%ebx
    ece6:	8d 8c 06 d6 c1 62 ca 	lea    -0x359d3e2a(%rsi,%rax,1),%ecx
    eced:	44 31 eb             	xor    %r13d,%ebx
    ecf0:	44 89 e6             	mov    %r12d,%esi
    ecf3:	41 c1 cd 02          	ror    $0x2,%r13d
    ecf7:	01 cb                	add    %ecx,%ebx
    ecf9:	c1 c6 05             	rol    $0x5,%esi
    ecfc:	45 31 ea             	xor    %r13d,%r10d
    ecff:	89 44 24 58          	mov    %eax,0x58(%rsp)
    ed03:	01 f3                	add    %esi,%ebx
    ed05:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    ed09:	45 31 e2             	xor    %r12d,%r10d
    ed0c:	45 89 eb             	mov    %r13d,%r11d
    ed0f:	41 c1 cc 02          	ror    $0x2,%r12d
    ed13:	41 31 f1             	xor    %esi,%r9d
    ed16:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
    ed1b:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
    ed20:	41 d1 c1             	rol    %r9d
    ed23:	43 8d 8c 08 d6 c1 62 	lea    -0x359d3e2a(%r8,%r9,1),%ecx
    ed2a:	ca 
    ed2b:	41 89 d8             	mov    %ebx,%r8d
    ed2e:	44 89 4c 24 5c       	mov    %r9d,0x5c(%rsp)
    ed33:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    ed37:	41 01 ca             	add    %ecx,%r10d
    ed3a:	41 c1 c0 05          	rol    $0x5,%r8d
    ed3e:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    ed42:	45 01 c2             	add    %r8d,%r10d
    ed45:	41 89 e8             	mov    %ebp,%r8d
    ed48:	45 31 f8             	xor    %r15d,%r8d
    ed4b:	44 33 44 24 08       	xor    0x8(%rsp),%r8d
    ed50:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
    ed55:	41 d1 c0             	rol    %r8d
    ed58:	45 31 e3             	xor    %r12d,%r11d
    ed5b:	31 ce                	xor    %ecx,%esi
    ed5d:	44 31 f1             	xor    %r14d,%ecx
    ed60:	41 31 db             	xor    %ebx,%r11d
    ed63:	42 8d 94 02 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r8,1),%edx
    ed6a:	ca 
    ed6b:	31 f7                	xor    %esi,%edi
    ed6d:	c1 cb 02             	ror    $0x2,%ebx
    ed70:	41 01 d3             	add    %edx,%r11d
    ed73:	44 89 d2             	mov    %r10d,%edx
    ed76:	31 c7                	xor    %eax,%edi
    ed78:	8b 74 24 10          	mov    0x10(%rsp),%esi
    ed7c:	c1 c2 05             	rol    $0x5,%edx
    ed7f:	d1 c7                	rol    %edi
    ed81:	33 4c 24 14          	xor    0x14(%rsp),%ecx
    ed85:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
    ed8a:	41 01 d3             	add    %edx,%r11d
    ed8d:	44 89 e2             	mov    %r12d,%edx
    ed90:	44 31 c1             	xor    %r8d,%ecx
    ed93:	89 7c 24 64          	mov    %edi,0x64(%rsp)
    ed97:	31 da                	xor    %ebx,%edx
    ed99:	d1 c1                	rol    %ecx
    ed9b:	89 d5                	mov    %edx,%ebp
    ed9d:	41 8d 94 3d d6 c1 62 	lea    -0x359d3e2a(%r13,%rdi,1),%edx
    eda4:	ca 
    eda5:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    edaa:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
    edae:	44 31 d5             	xor    %r10d,%ebp
    edb1:	41 c1 ca 02          	ror    $0x2,%r10d
    edb5:	45 31 ef             	xor    %r13d,%r15d
    edb8:	01 d5                	add    %edx,%ebp
    edba:	44 89 da             	mov    %r11d,%edx
    edbd:	44 31 fe             	xor    %r15d,%esi
    edc0:	41 89 df             	mov    %ebx,%r15d
    edc3:	c1 c2 05             	rol    $0x5,%edx
    edc6:	44 31 ce             	xor    %r9d,%esi
    edc9:	45 31 d7             	xor    %r10d,%r15d
    edcc:	01 d5                	add    %edx,%ebp
    edce:	d1 c6                	rol    %esi
    edd0:	45 31 df             	xor    %r11d,%r15d
    edd3:	41 c1 cb 02          	ror    $0x2,%r11d
    edd7:	41 8d 94 34 d6 c1 62 	lea    -0x359d3e2a(%r12,%rsi,1),%edx
    edde:	ca 
    eddf:	45 89 f4             	mov    %r14d,%r12d
    ede2:	45 89 d6             	mov    %r10d,%r14d
    ede5:	89 74 24 68          	mov    %esi,0x68(%rsp)
    ede9:	41 01 d7             	add    %edx,%r15d
    edec:	89 ea                	mov    %ebp,%edx
    edee:	45 31 de             	xor    %r11d,%r14d
    edf1:	c1 c2 05             	rol    $0x5,%edx
    edf4:	41 31 ee             	xor    %ebp,%r14d
    edf7:	41 01 d7             	add    %edx,%r15d
    edfa:	8d 94 0b d6 c1 62 ca 	lea    -0x359d3e2a(%rbx,%rcx,1),%edx
    ee01:	8b 5c 24 24          	mov    0x24(%rsp),%ebx
    ee05:	41 01 d6             	add    %edx,%r14d
    ee08:	44 89 fa             	mov    %r15d,%edx
    ee0b:	c1 cd 02             	ror    $0x2,%ebp
    ee0e:	44 33 64 24 04       	xor    0x4(%rsp),%r12d
    ee13:	c1 c2 05             	rol    $0x5,%edx
    ee16:	44 31 e3             	xor    %r12d,%ebx
    ee19:	44 8b 24 24          	mov    (%rsp),%r12d
    ee1d:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
    ee22:	41 01 d6             	add    %edx,%r14d
    ee25:	8b 14 24             	mov    (%rsp),%edx
    ee28:	31 f3                	xor    %esi,%ebx
    ee2a:	d1 c3                	rol    %ebx
    ee2c:	44 31 ea             	xor    %r13d,%edx
    ee2f:	33 54 24 18          	xor    0x18(%rsp),%edx
    ee33:	45 89 dd             	mov    %r11d,%r13d
    ee36:	89 5c 24 74          	mov    %ebx,0x74(%rsp)
    ee3a:	31 fa                	xor    %edi,%edx
    ee3c:	41 31 ed             	xor    %ebp,%r13d
    ee3f:	45 8d 9c 1b d6 c1 62 	lea    -0x359d3e2a(%r11,%rbx,1),%r11d
    ee46:	ca 
    ee47:	d1 c2                	rol    %edx
    ee49:	45 31 fd             	xor    %r15d,%r13d
    ee4c:	41 c1 cf 02          	ror    $0x2,%r15d
    ee50:	45 8d 94 12 d6 c1 62 	lea    -0x359d3e2a(%r10,%rdx,1),%r10d
    ee57:	ca 
    ee58:	89 54 24 70          	mov    %edx,0x70(%rsp)
    ee5c:	45 01 d5             	add    %r10d,%r13d
    ee5f:	45 89 f2             	mov    %r14d,%r10d
    ee62:	41 c1 c2 05          	rol    $0x5,%r10d
    ee66:	45 01 d5             	add    %r10d,%r13d
    ee69:	41 89 ea             	mov    %ebp,%r10d
    ee6c:	45 31 fa             	xor    %r15d,%r10d
    ee6f:	45 31 f2             	xor    %r14d,%r10d
    ee72:	41 c1 ce 02          	ror    $0x2,%r14d
    ee76:	45 01 da             	add    %r11d,%r10d
    ee79:	45 89 eb             	mov    %r13d,%r11d
    ee7c:	41 c1 c3 05          	rol    $0x5,%r11d
    ee80:	45 01 da             	add    %r11d,%r10d
    ee83:	45 89 e3             	mov    %r12d,%r11d
    ee86:	45 89 fc             	mov    %r15d,%r12d
    ee89:	41 31 c3             	xor    %eax,%r11d
    ee8c:	45 31 f4             	xor    %r14d,%r12d
    ee8f:	41 31 cb             	xor    %ecx,%r11d
    ee92:	45 31 ec             	xor    %r13d,%r12d
    ee95:	41 d1 c3             	rol    %r11d
    ee98:	42 8d ac 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%ebp
    ee9f:	ca 
    eea0:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
    eea5:	41 01 ec             	add    %ebp,%r12d
    eea8:	44 89 d5             	mov    %r10d,%ebp
    eeab:	c1 c5 05             	rol    $0x5,%ebp
    eeae:	41 01 ec             	add    %ebp,%r12d
    eeb1:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
    eeb5:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
    eeb9:	41 c1 cd 02          	ror    $0x2,%r13d
    eebd:	41 31 e9             	xor    %ebp,%r9d
    eec0:	44 89 f5             	mov    %r14d,%ebp
    eec3:	41 31 d1             	xor    %edx,%r9d
    eec6:	44 31 ed             	xor    %r13d,%ebp
    eec9:	41 d1 c1             	rol    %r9d
    eecc:	44 31 d5             	xor    %r10d,%ebp
    eecf:	47 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%r15d
    eed6:	ca 
    eed7:	44 89 4c 24 7c       	mov    %r9d,0x7c(%rsp)
    eedc:	44 01 fd             	add    %r15d,%ebp
    eedf:	45 89 e7             	mov    %r12d,%r15d
    eee2:	41 c1 c7 05          	rol    $0x5,%r15d
    eee6:	44 01 fd             	add    %r15d,%ebp
    eee9:	45 89 d7             	mov    %r10d,%r15d
    eeec:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
    eef1:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
    eef6:	45 31 d0             	xor    %r10d,%r8d
    eef9:	41 c1 cf 02          	ror    $0x2,%r15d
    eefd:	44 31 c3             	xor    %r8d,%ebx
    ef00:	45 89 e8             	mov    %r13d,%r8d
    ef03:	d1 c3                	rol    %ebx
    ef05:	45 31 f8             	xor    %r15d,%r8d
    ef08:	45 31 e0             	xor    %r12d,%r8d
    ef0b:	45 8d b4 1e d6 c1 62 	lea    -0x359d3e2a(%r14,%rbx,1),%r14d
    ef12:	ca 
    ef13:	41 c1 cc 02          	ror    $0x2,%r12d
    ef17:	89 9c 24 80 00 00 00 	mov    %ebx,0x80(%rsp)
    ef1e:	45 01 f0             	add    %r14d,%r8d
    ef21:	41 89 ee             	mov    %ebp,%r14d
    ef24:	41 c1 c6 05          	rol    $0x5,%r14d
    ef28:	45 01 c6             	add    %r8d,%r14d
    ef2b:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    ef30:	44 33 44 24 14       	xor    0x14(%rsp),%r8d
    ef35:	44 31 c7             	xor    %r8d,%edi
    ef38:	45 89 f0             	mov    %r14d,%r8d
    ef3b:	41 31 fb             	xor    %edi,%r11d
    ef3e:	44 89 ff             	mov    %r15d,%edi
    ef41:	41 c1 c0 05          	rol    $0x5,%r8d
    ef45:	41 d1 c3             	rol    %r11d
    ef48:	44 31 e7             	xor    %r12d,%edi
    ef4b:	47 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%r13,%r11,1),%r10d
    ef52:	ca 
    ef53:	31 ef                	xor    %ebp,%edi
    ef55:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    ef5a:	c1 cd 02             	ror    $0x2,%ebp
    ef5d:	44 01 d7             	add    %r10d,%edi
    ef60:	45 89 c2             	mov    %r8d,%r10d
    ef63:	44 89 9c 24 84 00 00 	mov    %r11d,0x84(%rsp)
    ef6a:	00 
    ef6b:	41 01 fa             	add    %edi,%r10d
    ef6e:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    ef72:	44 31 ef             	xor    %r13d,%edi
    ef75:	44 31 e8             	xor    %r13d,%eax
    ef78:	31 fe                	xor    %edi,%esi
    ef7a:	31 c2                	xor    %eax,%edx
    ef7c:	41 31 f1             	xor    %esi,%r9d
    ef7f:	44 89 e6             	mov    %r12d,%esi
    ef82:	41 31 d3             	xor    %edx,%r11d
    ef85:	31 ee                	xor    %ebp,%esi
    ef87:	41 d1 c1             	rol    %r9d
    ef8a:	44 31 f6             	xor    %r14d,%esi
    ef8d:	41 c1 ce 02          	ror    $0x2,%r14d
    ef91:	44 89 8c 24 88 00 00 	mov    %r9d,0x88(%rsp)
    ef98:	00 
    ef99:	43 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%edi
    efa0:	ca 
    efa1:	44 89 b4 24 a4 00 00 	mov    %r14d,0xa4(%rsp)
    efa8:	00 
    efa9:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    efae:	01 fe                	add    %edi,%esi
    efb0:	44 89 d7             	mov    %r10d,%edi
    efb3:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
    efb8:	c1 c7 05             	rol    $0x5,%edi
    efbb:	44 89 f0             	mov    %r14d,%eax
    efbe:	44 89 5c 24 50       	mov    %r11d,0x50(%rsp)
    efc3:	44 31 c1             	xor    %r8d,%ecx
    efc6:	01 fe                	add    %edi,%esi
    efc8:	41 d1 c3             	rol    %r11d
    efcb:	31 cb                	xor    %ecx,%ebx
    efcd:	89 e9                	mov    %ebp,%ecx
    efcf:	42 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%edx
    efd6:	ca 
    efd7:	44 89 9c 24 90 00 00 	mov    %r11d,0x90(%rsp)
    efde:	00 
    efdf:	d1 c3                	rol    %ebx
    efe1:	44 31 f1             	xor    %r14d,%ecx
    efe4:	44 31 d1             	xor    %r10d,%ecx
    efe7:	41 8d bc 1c d6 c1 62 	lea    -0x359d3e2a(%r12,%rbx,1),%edi
    efee:	ca 
    efef:	41 c1 ca 02          	ror    $0x2,%r10d
    eff3:	89 9c 24 8c 00 00 00 	mov    %ebx,0x8c(%rsp)
    effa:	01 f9                	add    %edi,%ecx
    effc:	89 f7                	mov    %esi,%edi
    effe:	44 31 d0             	xor    %r10d,%eax
    f001:	44 89 94 24 a0 00 00 	mov    %r10d,0xa0(%rsp)
    f008:	00 
    f009:	c1 c7 05             	rol    $0x5,%edi
    f00c:	31 f0                	xor    %esi,%eax
    f00e:	c1 ce 02             	ror    $0x2,%esi
    f011:	01 f9                	add    %edi,%ecx
    f013:	01 d0                	add    %edx,%eax
    f015:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    f01a:	89 b4 24 9c 00 00 00 	mov    %esi,0x9c(%rsp)
    f021:	89 ca                	mov    %ecx,%edx
    f023:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%rsp)
    f02a:	03 4c 24 44          	add    0x44(%rsp),%ecx
    f02e:	c1 c2 05             	rol    $0x5,%edx
    f031:	89 4f 0c             	mov    %ecx,0xc(%rdi)
    f034:	01 d0                	add    %edx,%eax
    f036:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
    f03d:	03 44 24 40          	add    0x40(%rsp),%eax
    f041:	03 74 24 48          	add    0x48(%rsp),%esi
    f045:	44 03 54 24 4c       	add    0x4c(%rsp),%r10d
    f04a:	89 47 08             	mov    %eax,0x8(%rdi)
    f04d:	44 03 74 24 38       	add    0x38(%rsp),%r14d
    f052:	89 77 10             	mov    %esi,0x10(%rdi)
    f055:	be 58 00 00 00       	mov    $0x58,%esi
    f05a:	44 89 57 14          	mov    %r10d,0x14(%rdi)
    f05e:	44 89 77 18          	mov    %r14d,0x18(%rdi)
    f062:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    f067:	e8 c4 61 ff ff       	callq  5230 <mbedtls_platform_zeroize>
    f06c:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    f073:	00 
    f074:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f07b:	00 00 
    f07d:	75 14                	jne    f093 <mbedtls_internal_sha1_process+0x1273>
    f07f:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    f086:	31 c0                	xor    %eax,%eax
    f088:	5b                   	pop    %rbx
    f089:	5d                   	pop    %rbp
    f08a:	41 5c                	pop    %r12
    f08c:	41 5d                	pop    %r13
    f08e:	41 5e                	pop    %r14
    f090:	41 5f                	pop    %r15
    f092:	c3                   	retq   
    f093:	e8 c8 41 ff ff       	callq  3260 <__stack_chk_fail@plt>
    f098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f09f:	00 

000000000000f0a0 <mbedtls_sha1_update.part.0>:
    f0a0:	41 56                	push   %r14
    f0a2:	41 55                	push   %r13
    f0a4:	41 54                	push   %r12
    f0a6:	49 89 fc             	mov    %rdi,%r12
    f0a9:	55                   	push   %rbp
    f0aa:	48 89 f5             	mov    %rsi,%rbp
    f0ad:	53                   	push   %rbx
    f0ae:	8b 07                	mov    (%rdi),%eax
    f0b0:	48 89 d3             	mov    %rdx,%rbx
    f0b3:	ba 40 00 00 00       	mov    $0x40,%edx
    f0b8:	41 89 c5             	mov    %eax,%r13d
    f0bb:	41 83 e5 3f          	and    $0x3f,%r13d
    f0bf:	44 29 ea             	sub    %r13d,%edx
    f0c2:	01 d8                	add    %ebx,%eax
    f0c4:	89 07                	mov    %eax,(%rdi)
    f0c6:	41 89 d6             	mov    %edx,%r14d
    f0c9:	73 04                	jae    f0cf <mbedtls_sha1_update.part.0+0x2f>
    f0cb:	83 47 04 01          	addl   $0x1,0x4(%rdi)
    f0cf:	45 85 ed             	test   %r13d,%r13d
    f0d2:	74 05                	je     f0d9 <mbedtls_sha1_update.part.0+0x39>
    f0d4:	49 39 de             	cmp    %rbx,%r14
    f0d7:	76 37                	jbe    f110 <mbedtls_sha1_update.part.0+0x70>
    f0d9:	48 83 fb 3f          	cmp    $0x3f,%rbx
    f0dd:	77 17                	ja     f0f6 <mbedtls_sha1_update.part.0+0x56>
    f0df:	eb 7f                	jmp    f160 <mbedtls_sha1_update.part.0+0xc0>
    f0e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f0e8:	48 83 eb 40          	sub    $0x40,%rbx
    f0ec:	48 83 c5 40          	add    $0x40,%rbp
    f0f0:	48 83 fb 3f          	cmp    $0x3f,%rbx
    f0f4:	76 6a                	jbe    f160 <mbedtls_sha1_update.part.0+0xc0>
    f0f6:	48 89 ee             	mov    %rbp,%rsi
    f0f9:	4c 89 e7             	mov    %r12,%rdi
    f0fc:	e8 1f ed ff ff       	callq  de20 <mbedtls_internal_sha1_process>
    f101:	85 c0                	test   %eax,%eax
    f103:	74 e3                	je     f0e8 <mbedtls_sha1_update.part.0+0x48>
    f105:	5b                   	pop    %rbx
    f106:	5d                   	pop    %rbp
    f107:	41 5c                	pop    %r12
    f109:	41 5d                	pop    %r13
    f10b:	41 5e                	pop    %r14
    f10d:	c3                   	retq   
    f10e:	66 90                	xchg   %ax,%ax
    f110:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
    f115:	4d 01 c5             	add    %r8,%r13
    f118:	83 fa 08             	cmp    $0x8,%edx
    f11b:	0f 83 87 00 00 00    	jae    f1a8 <mbedtls_sha1_update.part.0+0x108>
    f121:	f6 c2 04             	test   $0x4,%dl
    f124:	0f 85 19 01 00 00    	jne    f243 <mbedtls_sha1_update.part.0+0x1a3>
    f12a:	85 d2                	test   %edx,%edx
    f12c:	74 11                	je     f13f <mbedtls_sha1_update.part.0+0x9f>
    f12e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    f132:	83 e2 02             	and    $0x2,%edx
    f135:	41 88 45 00          	mov    %al,0x0(%r13)
    f139:	0f 85 30 01 00 00    	jne    f26f <mbedtls_sha1_update.part.0+0x1cf>
    f13f:	4c 89 c6             	mov    %r8,%rsi
    f142:	4c 89 e7             	mov    %r12,%rdi
    f145:	e8 d6 ec ff ff       	callq  de20 <mbedtls_internal_sha1_process>
    f14a:	85 c0                	test   %eax,%eax
    f14c:	75 b7                	jne    f105 <mbedtls_sha1_update.part.0+0x65>
    f14e:	4c 01 f5             	add    %r14,%rbp
    f151:	4c 29 f3             	sub    %r14,%rbx
    f154:	45 31 ed             	xor    %r13d,%r13d
    f157:	eb 80                	jmp    f0d9 <mbedtls_sha1_update.part.0+0x39>
    f159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f160:	31 c0                	xor    %eax,%eax
    f162:	48 85 db             	test   %rbx,%rbx
    f165:	74 9e                	je     f105 <mbedtls_sha1_update.part.0+0x65>
    f167:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
    f16c:	89 d8                	mov    %ebx,%eax
    f16e:	83 fb 08             	cmp    $0x8,%ebx
    f171:	0f 83 7e 00 00 00    	jae    f1f5 <mbedtls_sha1_update.part.0+0x155>
    f177:	83 e3 04             	and    $0x4,%ebx
    f17a:	0f 85 d9 00 00 00    	jne    f259 <mbedtls_sha1_update.part.0+0x1b9>
    f180:	85 c0                	test   %eax,%eax
    f182:	74 16                	je     f19a <mbedtls_sha1_update.part.0+0xfa>
    f184:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
    f188:	88 11                	mov    %dl,(%rcx)
    f18a:	a8 02                	test   $0x2,%al
    f18c:	74 0c                	je     f19a <mbedtls_sha1_update.part.0+0xfa>
    f18e:	89 c2                	mov    %eax,%edx
    f190:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
    f195:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    f19a:	31 c0                	xor    %eax,%eax
    f19c:	5b                   	pop    %rbx
    f19d:	5d                   	pop    %rbp
    f19e:	41 5c                	pop    %r12
    f1a0:	41 5d                	pop    %r13
    f1a2:	41 5e                	pop    %r14
    f1a4:	c3                   	retq   
    f1a5:	0f 1f 00             	nopl   (%rax)
    f1a8:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f1ac:	49 8d 75 08          	lea    0x8(%r13),%rsi
    f1b0:	49 89 e9             	mov    %rbp,%r9
    f1b3:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    f1b7:	49 89 45 00          	mov    %rax,0x0(%r13)
    f1bb:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
    f1c0:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
    f1c5:	49 29 f5             	sub    %rsi,%r13
    f1c8:	44 01 ea             	add    %r13d,%edx
    f1cb:	4d 29 e9             	sub    %r13,%r9
    f1ce:	83 e2 f8             	and    $0xfffffff8,%edx
    f1d1:	83 fa 08             	cmp    $0x8,%edx
    f1d4:	0f 82 65 ff ff ff    	jb     f13f <mbedtls_sha1_update.part.0+0x9f>
    f1da:	83 e2 f8             	and    $0xfffffff8,%edx
    f1dd:	31 c0                	xor    %eax,%eax
    f1df:	89 c1                	mov    %eax,%ecx
    f1e1:	83 c0 08             	add    $0x8,%eax
    f1e4:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
    f1e8:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    f1ec:	39 d0                	cmp    %edx,%eax
    f1ee:	72 ef                	jb     f1df <mbedtls_sha1_update.part.0+0x13f>
    f1f0:	e9 4a ff ff ff       	jmpq   f13f <mbedtls_sha1_update.part.0+0x9f>
    f1f5:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f1f9:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    f1fd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    f201:	48 89 01             	mov    %rax,(%rcx)
    f204:	89 d8                	mov    %ebx,%eax
    f206:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
    f20b:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    f210:	48 29 f1             	sub    %rsi,%rcx
    f213:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
    f216:	48 29 cd             	sub    %rcx,%rbp
    f219:	83 e0 f8             	and    $0xfffffff8,%eax
    f21c:	83 f8 08             	cmp    $0x8,%eax
    f21f:	0f 82 75 ff ff ff    	jb     f19a <mbedtls_sha1_update.part.0+0xfa>
    f225:	83 e0 f8             	and    $0xfffffff8,%eax
    f228:	31 d2                	xor    %edx,%edx
    f22a:	89 d1                	mov    %edx,%ecx
    f22c:	83 c2 08             	add    $0x8,%edx
    f22f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
    f234:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    f238:	39 c2                	cmp    %eax,%edx
    f23a:	72 ee                	jb     f22a <mbedtls_sha1_update.part.0+0x18a>
    f23c:	31 c0                	xor    %eax,%eax
    f23e:	e9 59 ff ff ff       	jmpq   f19c <mbedtls_sha1_update.part.0+0xfc>
    f243:	8b 45 00             	mov    0x0(%rbp),%eax
    f246:	41 89 45 00          	mov    %eax,0x0(%r13)
    f24a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
    f24f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
    f254:	e9 e6 fe ff ff       	jmpq   f13f <mbedtls_sha1_update.part.0+0x9f>
    f259:	8b 55 00             	mov    0x0(%rbp),%edx
    f25c:	89 11                	mov    %edx,(%rcx)
    f25e:	89 c2                	mov    %eax,%edx
    f260:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
    f264:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    f268:	31 c0                	xor    %eax,%eax
    f26a:	e9 2d ff ff ff       	jmpq   f19c <mbedtls_sha1_update.part.0+0xfc>
    f26f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
    f275:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
    f27b:	e9 bf fe ff ff       	jmpq   f13f <mbedtls_sha1_update.part.0+0x9f>

000000000000f280 <mbedtls_sha1_update>:
    f280:	f3 0f 1e fa          	endbr64 
    f284:	48 85 d2             	test   %rdx,%rdx
    f287:	74 07                	je     f290 <mbedtls_sha1_update+0x10>
    f289:	e9 12 fe ff ff       	jmpq   f0a0 <mbedtls_sha1_update.part.0>
    f28e:	66 90                	xchg   %ax,%ax
    f290:	31 c0                	xor    %eax,%eax
    f292:	c3                   	retq   
    f293:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f29a:	00 00 00 00 
    f29e:	66 90                	xchg   %ax,%ax

000000000000f2a0 <mbedtls_sha1_finish>:
    f2a0:	f3 0f 1e fa          	endbr64 
    f2a4:	41 54                	push   %r12
    f2a6:	4c 8d 67 1c          	lea    0x1c(%rdi),%r12
    f2aa:	55                   	push   %rbp
    f2ab:	48 89 f5             	mov    %rsi,%rbp
    f2ae:	53                   	push   %rbx
    f2af:	8b 07                	mov    (%rdi),%eax
    f2b1:	48 89 fb             	mov    %rdi,%rbx
    f2b4:	83 e0 3f             	and    $0x3f,%eax
    f2b7:	8d 48 01             	lea    0x1(%rax),%ecx
    f2ba:	c6 44 07 1c 80       	movb   $0x80,0x1c(%rdi,%rax,1)
    f2bf:	89 c8                	mov    %ecx,%eax
    f2c1:	4c 01 e0             	add    %r12,%rax
    f2c4:	83 f9 38             	cmp    $0x38,%ecx
    f2c7:	77 57                	ja     f320 <mbedtls_sha1_finish+0x80>
    f2c9:	ba 38 00 00 00       	mov    $0x38,%edx
    f2ce:	31 ff                	xor    %edi,%edi
    f2d0:	29 ca                	sub    %ecx,%edx
    f2d2:	83 fa 08             	cmp    $0x8,%edx
    f2d5:	72 79                	jb     f350 <mbedtls_sha1_finish+0xb0>
    f2d7:	89 d1                	mov    %edx,%ecx
    f2d9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f2e0:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
    f2e7:	00 00 
    f2e9:	48 8d 48 08          	lea    0x8(%rax),%rcx
    f2ed:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    f2f1:	48 29 c8             	sub    %rcx,%rax
    f2f4:	01 c2                	add    %eax,%edx
    f2f6:	83 e2 f8             	and    $0xfffffff8,%edx
    f2f9:	83 fa 08             	cmp    $0x8,%edx
    f2fc:	0f 82 8b 00 00 00    	jb     f38d <mbedtls_sha1_finish+0xed>
    f302:	83 e2 f8             	and    $0xfffffff8,%edx
    f305:	31 c0                	xor    %eax,%eax
    f307:	89 c6                	mov    %eax,%esi
    f309:	83 c0 08             	add    $0x8,%eax
    f30c:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
    f310:	39 d0                	cmp    %edx,%eax
    f312:	72 f3                	jb     f307 <mbedtls_sha1_finish+0x67>
    f314:	eb 77                	jmp    f38d <mbedtls_sha1_finish+0xed>
    f316:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f31d:	00 00 00 
    f320:	ba 40 00 00 00       	mov    $0x40,%edx
    f325:	29 ca                	sub    %ecx,%edx
    f327:	89 d1                	mov    %edx,%ecx
    f329:	74 0f                	je     f33a <mbedtls_sha1_finish+0x9a>
    f32b:	31 d2                	xor    %edx,%edx
    f32d:	89 d6                	mov    %edx,%esi
    f32f:	83 c2 01             	add    $0x1,%edx
    f332:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
    f336:	39 ca                	cmp    %ecx,%edx
    f338:	72 f3                	jb     f32d <mbedtls_sha1_finish+0x8d>
    f33a:	4c 89 e6             	mov    %r12,%rsi
    f33d:	48 89 df             	mov    %rbx,%rdi
    f340:	e8 db ea ff ff       	callq  de20 <mbedtls_internal_sha1_process>
    f345:	85 c0                	test   %eax,%eax
    f347:	74 27                	je     f370 <mbedtls_sha1_finish+0xd0>
    f349:	5b                   	pop    %rbx
    f34a:	5d                   	pop    %rbp
    f34b:	41 5c                	pop    %r12
    f34d:	c3                   	retq   
    f34e:	66 90                	xchg   %ax,%ax
    f350:	f6 c2 04             	test   $0x4,%dl
    f353:	0f 85 8f 00 00 00    	jne    f3e8 <mbedtls_sha1_finish+0x148>
    f359:	85 d2                	test   %edx,%edx
    f35b:	74 30                	je     f38d <mbedtls_sha1_finish+0xed>
    f35d:	c6 00 00             	movb   $0x0,(%rax)
    f360:	f6 c2 02             	test   $0x2,%dl
    f363:	74 28                	je     f38d <mbedtls_sha1_finish+0xed>
    f365:	31 c9                	xor    %ecx,%ecx
    f367:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
    f36c:	eb 1f                	jmp    f38d <mbedtls_sha1_finish+0xed>
    f36e:	66 90                	xchg   %ax,%ax
    f370:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f374:	0f 11 43 1c          	movups %xmm0,0x1c(%rbx)
    f378:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
    f37f:	00 00 
    f381:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
    f387:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
    f38d:	8b 13                	mov    (%rbx),%edx
    f38f:	8b 43 04             	mov    0x4(%rbx),%eax
    f392:	4c 89 e6             	mov    %r12,%rsi
    f395:	48 89 df             	mov    %rbx,%rdi
    f398:	89 d1                	mov    %edx,%ecx
    f39a:	c1 e0 03             	shl    $0x3,%eax
    f39d:	c1 e9 1d             	shr    $0x1d,%ecx
    f3a0:	c1 e2 03             	shl    $0x3,%edx
    f3a3:	09 c8                	or     %ecx,%eax
    f3a5:	0f ca                	bswap  %edx
    f3a7:	89 53 58             	mov    %edx,0x58(%rbx)
    f3aa:	0f c8                	bswap  %eax
    f3ac:	89 43 54             	mov    %eax,0x54(%rbx)
    f3af:	e8 6c ea ff ff       	callq  de20 <mbedtls_internal_sha1_process>
    f3b4:	85 c0                	test   %eax,%eax
    f3b6:	75 91                	jne    f349 <mbedtls_sha1_finish+0xa9>
    f3b8:	8b 53 08             	mov    0x8(%rbx),%edx
    f3bb:	0f ca                	bswap  %edx
    f3bd:	89 55 00             	mov    %edx,0x0(%rbp)
    f3c0:	8b 53 0c             	mov    0xc(%rbx),%edx
    f3c3:	0f ca                	bswap  %edx
    f3c5:	89 55 04             	mov    %edx,0x4(%rbp)
    f3c8:	8b 53 10             	mov    0x10(%rbx),%edx
    f3cb:	0f ca                	bswap  %edx
    f3cd:	89 55 08             	mov    %edx,0x8(%rbp)
    f3d0:	8b 53 14             	mov    0x14(%rbx),%edx
    f3d3:	0f ca                	bswap  %edx
    f3d5:	89 55 0c             	mov    %edx,0xc(%rbp)
    f3d8:	8b 53 18             	mov    0x18(%rbx),%edx
    f3db:	5b                   	pop    %rbx
    f3dc:	0f ca                	bswap  %edx
    f3de:	89 55 10             	mov    %edx,0x10(%rbp)
    f3e1:	5d                   	pop    %rbp
    f3e2:	41 5c                	pop    %r12
    f3e4:	c3                   	retq   
    f3e5:	0f 1f 00             	nopl   (%rax)
    f3e8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    f3ee:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
    f3f5:	00 
    f3f6:	eb 95                	jmp    f38d <mbedtls_sha1_finish+0xed>
    f3f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f3ff:	00 

000000000000f400 <mbedtls_sha1>:
    f400:	f3 0f 1e fa          	endbr64 
    f404:	41 55                	push   %r13
    f406:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f40a:	41 54                	push   %r12
    f40c:	55                   	push   %rbp
    f40d:	48 89 d5             	mov    %rdx,%rbp
    f410:	48 83 ec 70          	sub    $0x70,%rsp
    f414:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f41b:	00 00 
    f41d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    f422:	31 c0                	xor    %eax,%eax
    f424:	49 89 e5             	mov    %rsp,%r13
    f427:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    f42c:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    f433:	ab cd ef 
    f436:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f43b:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    f442:	54 32 10 
    f445:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
    f44c:	00 
    f44d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    f454:	00 
    f455:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    f45a:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
    f461:	c3 
    f462:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    f467:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
    f46c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    f471:	48 85 f6             	test   %rsi,%rsi
    f474:	74 15                	je     f48b <mbedtls_sha1+0x8b>
    f476:	48 89 f2             	mov    %rsi,%rdx
    f479:	48 89 fe             	mov    %rdi,%rsi
    f47c:	4c 89 ef             	mov    %r13,%rdi
    f47f:	e8 1c fc ff ff       	callq  f0a0 <mbedtls_sha1_update.part.0>
    f484:	41 89 c4             	mov    %eax,%r12d
    f487:	85 c0                	test   %eax,%eax
    f489:	75 0e                	jne    f499 <mbedtls_sha1+0x99>
    f48b:	48 89 ee             	mov    %rbp,%rsi
    f48e:	4c 89 ef             	mov    %r13,%rdi
    f491:	e8 0a fe ff ff       	callq  f2a0 <mbedtls_sha1_finish>
    f496:	41 89 c4             	mov    %eax,%r12d
    f499:	be 5c 00 00 00       	mov    $0x5c,%esi
    f49e:	4c 89 ef             	mov    %r13,%rdi
    f4a1:	e8 8a 5d ff ff       	callq  5230 <mbedtls_platform_zeroize>
    f4a6:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    f4ab:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f4b2:	00 00 
    f4b4:	75 0d                	jne    f4c3 <mbedtls_sha1+0xc3>
    f4b6:	48 83 c4 70          	add    $0x70,%rsp
    f4ba:	44 89 e0             	mov    %r12d,%eax
    f4bd:	5d                   	pop    %rbp
    f4be:	41 5c                	pop    %r12
    f4c0:	41 5d                	pop    %r13
    f4c2:	c3                   	retq   
    f4c3:	e8 98 3d ff ff       	callq  3260 <__stack_chk_fail@plt>
    f4c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f4cf:	00 

000000000000f4d0 <mbedtls_sha1_self_test>:
    f4d0:	f3 0f 1e fa          	endbr64 
    f4d4:	41 57                	push   %r15
    f4d6:	b9 0b 00 00 00       	mov    $0xb,%ecx
    f4db:	41 56                	push   %r14
    f4dd:	4c 8d 35 1c 45 01 00 	lea    0x1451c(%rip),%r14        # 23a00 <sha1_test_buf>
    f4e4:	41 55                	push   %r13
    f4e6:	41 89 fd             	mov    %edi,%r13d
    f4e9:	41 54                	push   %r12
    f4eb:	55                   	push   %rbp
    f4ec:	48 8d 2d ad 44 01 00 	lea    0x144ad(%rip),%rbp        # 239a0 <sha1_test_sum>
    f4f3:	53                   	push   %rbx
    f4f4:	31 db                	xor    %ebx,%ebx
    f4f6:	48 81 ec a8 04 00 00 	sub    $0x4a8,%rsp
    f4fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f504:	00 00 
    f506:	48 89 84 24 98 04 00 	mov    %rax,0x498(%rsp)
    f50d:	00 
    f50e:	31 c0                	xor    %eax,%eax
    f510:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    f515:	4c 89 e7             	mov    %r12,%rdi
    f518:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    f51b:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    f521:	45 85 ed             	test   %r13d,%r13d
    f524:	0f 85 a6 00 00 00    	jne    f5d0 <mbedtls_sha1_self_test+0x100>
    f52a:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    f531:	ab cd ef 
    f534:	c7 44 24 28 f0 e1 d2 	movl   $0xc3d2e1f0,0x28(%rsp)
    f53b:	c3 
    f53c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f541:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    f548:	54 32 10 
    f54b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    f552:	00 00 
    f554:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    f559:	48 83 fb 02          	cmp    $0x2,%rbx
    f55d:	0f 84 2d 01 00 00    	je     f690 <mbedtls_sha1_self_test+0x1c0>
    f563:	48 8d 05 76 44 01 00 	lea    0x14476(%rip),%rax        # 239e0 <sha1_test_buflen>
    f56a:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    f56e:	48 85 d2             	test   %rdx,%rdx
    f571:	74 11                	je     f584 <mbedtls_sha1_self_test+0xb4>
    f573:	4c 89 f6             	mov    %r14,%rsi
    f576:	4c 89 e7             	mov    %r12,%rdi
    f579:	e8 22 fb ff ff       	callq  f0a0 <mbedtls_sha1_update.part.0>
    f57e:	89 c2                	mov    %eax,%edx
    f580:	85 c0                	test   %eax,%eax
    f582:	75 3b                	jne    f5bf <mbedtls_sha1_self_test+0xef>
    f584:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
    f589:	4c 89 e7             	mov    %r12,%rdi
    f58c:	4c 89 fe             	mov    %r15,%rsi
    f58f:	e8 0c fd ff ff       	callq  f2a0 <mbedtls_sha1_finish>
    f594:	89 c2                	mov    %eax,%edx
    f596:	85 c0                	test   %eax,%eax
    f598:	75 25                	jne    f5bf <mbedtls_sha1_self_test+0xef>
    f59a:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    f59f:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    f5a4:	48 33 55 08          	xor    0x8(%rbp),%rdx
    f5a8:	48 33 45 00          	xor    0x0(%rbp),%rax
    f5ac:	48 09 c2             	or     %rax,%rdx
    f5af:	75 09                	jne    f5ba <mbedtls_sha1_self_test+0xea>
    f5b1:	8b 45 10             	mov    0x10(%rbp),%eax
    f5b4:	41 39 47 10          	cmp    %eax,0x10(%r15)
    f5b8:	74 36                	je     f5f0 <mbedtls_sha1_self_test+0x120>
    f5ba:	ba 01 00 00 00       	mov    $0x1,%edx
    f5bf:	45 85 ed             	test   %r13d,%r13d
    f5c2:	0f 85 a8 00 00 00    	jne    f670 <mbedtls_sha1_self_test+0x1a0>
    f5c8:	41 89 d5             	mov    %edx,%r13d
    f5cb:	eb 4f                	jmp    f61c <mbedtls_sha1_self_test+0x14c>
    f5cd:	0f 1f 00             	nopl   (%rax)
    f5d0:	8d 53 01             	lea    0x1(%rbx),%edx
    f5d3:	48 8d 35 a6 43 01 00 	lea    0x143a6(%rip),%rsi        # 23980 <ripemd160_padding+0x40>
    f5da:	bf 01 00 00 00       	mov    $0x1,%edi
    f5df:	31 c0                	xor    %eax,%eax
    f5e1:	e8 5a 3d ff ff       	callq  3340 <__printf_chk@plt>
    f5e6:	e9 3f ff ff ff       	jmpq   f52a <mbedtls_sha1_self_test+0x5a>
    f5eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f5f0:	45 85 ed             	test   %r13d,%r13d
    f5f3:	74 0c                	je     f601 <mbedtls_sha1_self_test+0x131>
    f5f5:	48 8d 3d e6 3b 01 00 	lea    0x13be6(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    f5fc:	e8 ff 3b ff ff       	callq  3200 <puts@plt>
    f601:	48 83 c3 01          	add    $0x1,%rbx
    f605:	48 83 c5 14          	add    $0x14,%rbp
    f609:	49 83 c6 39          	add    $0x39,%r14
    f60d:	48 83 fb 03          	cmp    $0x3,%rbx
    f611:	0f 85 0a ff ff ff    	jne    f521 <mbedtls_sha1_self_test+0x51>
    f617:	45 85 ed             	test   %r13d,%r13d
    f61a:	75 3c                	jne    f658 <mbedtls_sha1_self_test+0x188>
    f61c:	be 5c 00 00 00       	mov    $0x5c,%esi
    f621:	4c 89 e7             	mov    %r12,%rdi
    f624:	e8 07 5c ff ff       	callq  5230 <mbedtls_platform_zeroize>
    f629:	48 8b 84 24 98 04 00 	mov    0x498(%rsp),%rax
    f630:	00 
    f631:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f638:	00 00 
    f63a:	0f 85 a6 00 00 00    	jne    f6e6 <mbedtls_sha1_self_test+0x216>
    f640:	48 81 c4 a8 04 00 00 	add    $0x4a8,%rsp
    f647:	44 89 e8             	mov    %r13d,%eax
    f64a:	5b                   	pop    %rbx
    f64b:	5d                   	pop    %rbp
    f64c:	41 5c                	pop    %r12
    f64e:	41 5d                	pop    %r13
    f650:	41 5e                	pop    %r14
    f652:	41 5f                	pop    %r15
    f654:	c3                   	retq   
    f655:	0f 1f 00             	nopl   (%rax)
    f658:	bf 0a 00 00 00       	mov    $0xa,%edi
    f65d:	45 31 ed             	xor    %r13d,%r13d
    f660:	e8 8b 3b ff ff       	callq  31f0 <putchar@plt>
    f665:	eb b5                	jmp    f61c <mbedtls_sha1_self_test+0x14c>
    f667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f66e:	00 00 
    f670:	48 8d 3d 46 44 01 00 	lea    0x14446(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    f677:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    f67b:	e8 80 3b ff ff       	callq  3200 <puts@plt>
    f680:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    f684:	41 89 d5             	mov    %edx,%r13d
    f687:	eb 93                	jmp    f61c <mbedtls_sha1_self_test+0x14c>
    f689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f690:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
    f697:	00 
    f698:	b9 7d 00 00 00       	mov    $0x7d,%ecx
    f69d:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
    f6a4:	61 61 61 
    f6a7:	c7 44 24 0c e8 03 00 	movl   $0x3e8,0xc(%rsp)
    f6ae:	00 
    f6af:	4c 89 ff             	mov    %r15,%rdi
    f6b2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    f6b5:	eb 14                	jmp    f6cb <mbedtls_sha1_self_test+0x1fb>
    f6b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f6be:	00 00 
    f6c0:	83 6c 24 0c 01       	subl   $0x1,0xc(%rsp)
    f6c5:	0f 84 b9 fe ff ff    	je     f584 <mbedtls_sha1_self_test+0xb4>
    f6cb:	ba e8 03 00 00       	mov    $0x3e8,%edx
    f6d0:	4c 89 fe             	mov    %r15,%rsi
    f6d3:	4c 89 e7             	mov    %r12,%rdi
    f6d6:	e8 c5 f9 ff ff       	callq  f0a0 <mbedtls_sha1_update.part.0>
    f6db:	89 c2                	mov    %eax,%edx
    f6dd:	85 c0                	test   %eax,%eax
    f6df:	74 df                	je     f6c0 <mbedtls_sha1_self_test+0x1f0>
    f6e1:	e9 d9 fe ff ff       	jmpq   f5bf <mbedtls_sha1_self_test+0xef>
    f6e6:	e8 75 3b ff ff       	callq  3260 <__stack_chk_fail@plt>
    f6eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000f6f0 <mbedtls_sha256_init>:
    f6f0:	f3 0f 1e fa          	endbr64 
    f6f4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    f6fb:	48 89 f9             	mov    %rdi,%rcx
    f6fe:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    f702:	31 c0                	xor    %eax,%eax
    f704:	48 c7 47 5c 00 00 00 	movq   $0x0,0x5c(%rdi)
    f70b:	00 
    f70c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    f710:	48 29 f9             	sub    %rdi,%rcx
    f713:	83 c1 6c             	add    $0x6c,%ecx
    f716:	c1 e9 03             	shr    $0x3,%ecx
    f719:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    f71c:	c3                   	retq   
    f71d:	0f 1f 00             	nopl   (%rax)

000000000000f720 <mbedtls_sha256_free>:
    f720:	f3 0f 1e fa          	endbr64 
    f724:	48 85 ff             	test   %rdi,%rdi
    f727:	74 0f                	je     f738 <mbedtls_sha256_free+0x18>
    f729:	be 6c 00 00 00       	mov    $0x6c,%esi
    f72e:	e9 fd 5a ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
    f733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f738:	c3                   	retq   
    f739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f740 <mbedtls_sha256_clone>:
    f740:	f3 0f 1e fa          	endbr64 
    f744:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    f748:	0f 11 07             	movups %xmm0,(%rdi)
    f74b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    f750:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    f754:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    f759:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    f75d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    f762:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    f766:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    f76b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    f76f:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
    f774:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
    f778:	48 8b 46 60          	mov    0x60(%rsi),%rax
    f77c:	48 89 47 60          	mov    %rax,0x60(%rdi)
    f780:	8b 46 68             	mov    0x68(%rsi),%eax
    f783:	89 47 68             	mov    %eax,0x68(%rdi)
    f786:	c3                   	retq   
    f787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f78e:	00 00 

000000000000f790 <mbedtls_sha256_starts>:
    f790:	f3 0f 1e fa          	endbr64 
    f794:	83 fe 01             	cmp    $0x1,%esi
    f797:	0f 87 93 00 00 00    	ja     f830 <mbedtls_sha256_starts+0xa0>
    f79d:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    f7a4:	85 f6                	test   %esi,%esi
    f7a6:	74 48                	je     f7f0 <mbedtls_sha256_starts+0x60>
    f7a8:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
    f7af:	d5 7c 36 
    f7b2:	89 77 68             	mov    %esi,0x68(%rdi)
    f7b5:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f7b9:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
    f7c0:	59 0e f7 
    f7c3:	48 89 47 10          	mov    %rax,0x10(%rdi)
    f7c7:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
    f7ce:	15 58 68 
    f7d1:	48 89 47 18          	mov    %rax,0x18(%rdi)
    f7d5:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
    f7dc:	4f fa be 
    f7df:	48 89 47 20          	mov    %rax,0x20(%rdi)
    f7e3:	31 c0                	xor    %eax,%eax
    f7e5:	c3                   	retq   
    f7e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f7ed:	00 00 00 
    f7f0:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
    f7f7:	ae 67 bb 
    f7fa:	89 77 68             	mov    %esi,0x68(%rdi)
    f7fd:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f801:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
    f808:	f5 4f a5 
    f80b:	48 89 47 10          	mov    %rax,0x10(%rdi)
    f80f:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
    f816:	68 05 9b 
    f819:	48 89 47 18          	mov    %rax,0x18(%rdi)
    f81d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
    f824:	cd e0 5b 
    f827:	48 89 47 20          	mov    %rax,0x20(%rdi)
    f82b:	31 c0                	xor    %eax,%eax
    f82d:	c3                   	retq   
    f82e:	66 90                	xchg   %ax,%ax
    f830:	b8 8c ff ff ff       	mov    $0xffffff8c,%eax
    f835:	c3                   	retq   
    f836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f83d:	00 00 00 

000000000000f840 <mbedtls_internal_sha256_process>:
    f840:	f3 0f 1e fa          	endbr64 
    f844:	41 57                	push   %r15
    f846:	48 89 f9             	mov    %rdi,%rcx
    f849:	41 56                	push   %r14
    f84b:	41 55                	push   %r13
    f84d:	41 54                	push   %r12
    f84f:	55                   	push   %rbp
    f850:	53                   	push   %rbx
    f851:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
    f858:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
    f85d:	48 8d 9c 24 58 01 00 	lea    0x158(%rsp),%rbx
    f864:	00 
    f865:	48 89 df             	mov    %rbx,%rdi
    f868:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f86f:	00 00 
    f871:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
    f878:	00 
    f879:	31 c0                	xor    %eax,%eax
    f87b:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    f880:	8b 54 01 08          	mov    0x8(%rcx,%rax,1),%edx
    f884:	89 14 07             	mov    %edx,(%rdi,%rax,1)
    f887:	48 83 c0 04          	add    $0x4,%rax
    f88b:	48 83 f8 20          	cmp    $0x20,%rax
    f88f:	75 ef                	jne    f880 <mbedtls_internal_sha256_process+0x40>
    f891:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
    f896:	31 c0                	xor    %eax,%eax
    f898:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
    f89d:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    f8a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f8a8:	8b 14 06             	mov    (%rsi,%rax,1),%edx
    f8ab:	0f ca                	bswap  %edx
    f8ad:	89 14 01             	mov    %edx,(%rcx,%rax,1)
    f8b0:	48 83 c0 04          	add    $0x4,%rax
    f8b4:	48 83 f8 40          	cmp    $0x40,%rax
    f8b8:	75 ee                	jne    f8a8 <mbedtls_internal_sha256_process+0x68>
    f8ba:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    f8bf:	48 8d 05 ba 43 01 00 	lea    0x143ba(%rip),%rax        # 23c80 <K>
    f8c6:	c7 44 24 1c d5 5e 1c 	movl   $0xab1c5ed5,0x1c(%rsp)
    f8cd:	ab 
    f8ce:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
    f8d5:	00 
    f8d6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f8db:	8b ac 24 74 01 00 00 	mov    0x174(%rsp),%ebp
    f8e2:	41 ba a5 db b5 e9    	mov    $0xe9b5dba5,%r10d
    f8e8:	41 b9 cf fb c0 b5    	mov    $0xb5c0fbcf,%r9d
    f8ee:	48 89 04 24          	mov    %rax,(%rsp)
    f8f2:	8b b4 24 68 01 00 00 	mov    0x168(%rsp),%esi
    f8f9:	41 b8 98 2f 8a 42    	mov    $0x428a2f98,%r8d
    f8ff:	c7 44 24 18 a4 82 3f 	movl   $0x923f82a4,0x18(%rsp)
    f906:	92 
    f907:	44 8b bc 24 70 01 00 	mov    0x170(%rsp),%r15d
    f90e:	00 
    f90f:	c7 44 24 14 f1 11 f1 	movl   $0x59f111f1,0x14(%rsp)
    f916:	59 
    f917:	44 8b b4 24 6c 01 00 	mov    0x16c(%rsp),%r14d
    f91e:	00 
    f91f:	c7 44 24 10 5b c2 56 	movl   $0x3956c25b,0x10(%rsp)
    f926:	39 
    f927:	44 8b ac 24 58 01 00 	mov    0x158(%rsp),%r13d
    f92e:	00 
    f92f:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    f934:	44 8b 9c 24 5c 01 00 	mov    0x15c(%rsp),%r11d
    f93b:	00 
    f93c:	8b 9c 24 60 01 00 00 	mov    0x160(%rsp),%ebx
    f943:	8b 8c 24 64 01 00 00 	mov    0x164(%rsp),%ecx
    f94a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    f94f:	ba 91 44 37 71       	mov    $0x71374491,%edx
    f954:	41 89 f4             	mov    %esi,%r12d
    f957:	89 f0                	mov    %esi,%eax
    f959:	41 c1 cc 06          	ror    $0x6,%r12d
    f95d:	c1 c8 0b             	ror    $0xb,%eax
    f960:	44 31 e0             	xor    %r12d,%eax
    f963:	41 89 f4             	mov    %esi,%r12d
    f966:	41 c1 c4 07          	rol    $0x7,%r12d
    f96a:	44 31 e0             	xor    %r12d,%eax
    f96d:	45 89 fc             	mov    %r15d,%r12d
    f970:	45 31 f4             	xor    %r14d,%r12d
    f973:	41 21 f4             	and    %esi,%r12d
    f976:	45 31 fc             	xor    %r15d,%r12d
    f979:	44 03 7f 0c          	add    0xc(%rdi),%r15d
    f97d:	44 01 e0             	add    %r12d,%eax
    f980:	03 47 08             	add    0x8(%rdi),%eax
    f983:	45 89 ec             	mov    %r13d,%r12d
    f986:	01 c5                	add    %eax,%ebp
    f988:	44 89 e8             	mov    %r13d,%eax
    f98b:	45 21 dc             	and    %r11d,%r12d
    f98e:	44 01 c5             	add    %r8d,%ebp
    f991:	45 89 e8             	mov    %r13d,%r8d
    f994:	c1 c8 0d             	ror    $0xd,%eax
    f997:	41 c1 c8 02          	ror    $0x2,%r8d
    f99b:	01 e9                	add    %ebp,%ecx
    f99d:	44 31 c0             	xor    %r8d,%eax
    f9a0:	45 89 e8             	mov    %r13d,%r8d
    f9a3:	41 c1 c0 0a          	rol    $0xa,%r8d
    f9a7:	44 31 c0             	xor    %r8d,%eax
    f9aa:	45 89 e8             	mov    %r13d,%r8d
    f9ad:	45 09 d8             	or     %r11d,%r8d
    f9b0:	41 21 d8             	and    %ebx,%r8d
    f9b3:	45 09 e0             	or     %r12d,%r8d
    f9b6:	41 01 c0             	add    %eax,%r8d
    f9b9:	89 c8                	mov    %ecx,%eax
    f9bb:	41 01 e8             	add    %ebp,%r8d
    f9be:	89 f5                	mov    %esi,%ebp
    f9c0:	c1 c8 0b             	ror    $0xb,%eax
    f9c3:	44 31 f5             	xor    %r14d,%ebp
    f9c6:	45 89 c4             	mov    %r8d,%r12d
    f9c9:	21 cd                	and    %ecx,%ebp
    f9cb:	44 31 f5             	xor    %r14d,%ebp
    f9ce:	41 01 ef             	add    %ebp,%r15d
    f9d1:	89 cd                	mov    %ecx,%ebp
    f9d3:	c1 cd 06             	ror    $0x6,%ebp
    f9d6:	31 e8                	xor    %ebp,%eax
    f9d8:	89 cd                	mov    %ecx,%ebp
    f9da:	c1 c5 07             	rol    $0x7,%ebp
    f9dd:	45 21 ec             	and    %r13d,%r12d
    f9e0:	44 03 77 10          	add    0x10(%rdi),%r14d
    f9e4:	31 e8                	xor    %ebp,%eax
    f9e6:	44 89 c5             	mov    %r8d,%ebp
    f9e9:	44 01 f8             	add    %r15d,%eax
    f9ec:	c1 cd 0d             	ror    $0xd,%ebp
    f9ef:	01 c2                	add    %eax,%edx
    f9f1:	44 89 c0             	mov    %r8d,%eax
    f9f4:	c1 c8 02             	ror    $0x2,%eax
    f9f7:	01 d3                	add    %edx,%ebx
    f9f9:	31 c5                	xor    %eax,%ebp
    f9fb:	44 89 c0             	mov    %r8d,%eax
    f9fe:	c1 c0 0a             	rol    $0xa,%eax
    fa01:	31 c5                	xor    %eax,%ebp
    fa03:	44 89 c0             	mov    %r8d,%eax
    fa06:	44 09 e8             	or     %r13d,%eax
    fa09:	44 21 d8             	and    %r11d,%eax
    fa0c:	44 09 e0             	or     %r12d,%eax
    fa0f:	45 89 c4             	mov    %r8d,%r12d
    fa12:	01 e8                	add    %ebp,%eax
    fa14:	89 cd                	mov    %ecx,%ebp
    fa16:	31 f5                	xor    %esi,%ebp
    fa18:	01 d0                	add    %edx,%eax
    fa1a:	89 da                	mov    %ebx,%edx
    fa1c:	21 dd                	and    %ebx,%ebp
    fa1e:	c1 ca 0b             	ror    $0xb,%edx
    fa21:	31 f5                	xor    %esi,%ebp
    fa23:	41 01 ee             	add    %ebp,%r14d
    fa26:	89 dd                	mov    %ebx,%ebp
    fa28:	c1 cd 06             	ror    $0x6,%ebp
    fa2b:	31 ea                	xor    %ebp,%edx
    fa2d:	89 dd                	mov    %ebx,%ebp
    fa2f:	c1 c5 07             	rol    $0x7,%ebp
    fa32:	31 ea                	xor    %ebp,%edx
    fa34:	89 c5                	mov    %eax,%ebp
    fa36:	44 01 f2             	add    %r14d,%edx
    fa39:	c1 cd 0d             	ror    $0xd,%ebp
    fa3c:	41 01 d1             	add    %edx,%r9d
    fa3f:	89 c2                	mov    %eax,%edx
    fa41:	c1 ca 02             	ror    $0x2,%edx
    fa44:	45 01 cb             	add    %r9d,%r11d
    fa47:	31 d5                	xor    %edx,%ebp
    fa49:	89 c2                	mov    %eax,%edx
    fa4b:	c1 c2 0a             	rol    $0xa,%edx
    fa4e:	41 21 c4             	and    %eax,%r12d
    fa51:	03 77 14             	add    0x14(%rdi),%esi
    fa54:	31 d5                	xor    %edx,%ebp
    fa56:	44 89 c2             	mov    %r8d,%edx
    fa59:	09 c2                	or     %eax,%edx
    fa5b:	44 21 ea             	and    %r13d,%edx
    fa5e:	44 09 e2             	or     %r12d,%edx
    fa61:	01 ea                	add    %ebp,%edx
    fa63:	44 89 dd             	mov    %r11d,%ebp
    fa66:	44 01 ca             	add    %r9d,%edx
    fa69:	41 89 c9             	mov    %ecx,%r9d
    fa6c:	c1 cd 06             	ror    $0x6,%ebp
    fa6f:	41 31 d9             	xor    %ebx,%r9d
    fa72:	45 21 d9             	and    %r11d,%r9d
    fa75:	41 31 c9             	xor    %ecx,%r9d
    fa78:	44 01 ce             	add    %r9d,%esi
    fa7b:	45 89 d9             	mov    %r11d,%r9d
    fa7e:	41 c1 c9 0b          	ror    $0xb,%r9d
    fa82:	41 31 e9             	xor    %ebp,%r9d
    fa85:	44 89 dd             	mov    %r11d,%ebp
    fa88:	c1 c5 07             	rol    $0x7,%ebp
    fa8b:	41 31 e9             	xor    %ebp,%r9d
    fa8e:	89 c5                	mov    %eax,%ebp
    fa90:	44 01 ce             	add    %r9d,%esi
    fa93:	41 89 d1             	mov    %edx,%r9d
    fa96:	21 d5                	and    %edx,%ebp
    fa98:	41 01 f2             	add    %esi,%r10d
    fa9b:	89 d6                	mov    %edx,%esi
    fa9d:	41 c1 c9 0d          	ror    $0xd,%r9d
    faa1:	c1 ce 02             	ror    $0x2,%esi
    faa4:	45 01 d5             	add    %r10d,%r13d
    faa7:	41 31 f1             	xor    %esi,%r9d
    faaa:	89 d6                	mov    %edx,%esi
    faac:	c1 c6 0a             	rol    $0xa,%esi
    faaf:	41 31 f1             	xor    %esi,%r9d
    fab2:	89 c6                	mov    %eax,%esi
    fab4:	09 d6                	or     %edx,%esi
    fab6:	44 21 c6             	and    %r8d,%esi
    fab9:	09 ee                	or     %ebp,%esi
    fabb:	44 01 ce             	add    %r9d,%esi
    fabe:	45 89 e9             	mov    %r13d,%r9d
    fac1:	44 01 d6             	add    %r10d,%esi
    fac4:	41 89 da             	mov    %ebx,%r10d
    fac7:	45 31 da             	xor    %r11d,%r10d
    faca:	03 4f 18             	add    0x18(%rdi),%ecx
    facd:	41 c1 c9 06          	ror    $0x6,%r9d
    fad1:	45 21 ea             	and    %r13d,%r10d
    fad4:	41 31 da             	xor    %ebx,%r10d
    fad7:	03 5f 1c             	add    0x1c(%rdi),%ebx
    fada:	41 01 ca             	add    %ecx,%r10d
    fadd:	44 89 e9             	mov    %r13d,%ecx
    fae0:	c1 c9 0b             	ror    $0xb,%ecx
    fae3:	44 31 c9             	xor    %r9d,%ecx
    fae6:	45 89 e9             	mov    %r13d,%r9d
    fae9:	41 c1 c1 07          	rol    $0x7,%r9d
    faed:	44 31 c9             	xor    %r9d,%ecx
    faf0:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
    faf5:	44 01 d1             	add    %r10d,%ecx
    faf8:	41 89 d2             	mov    %edx,%r10d
    fafb:	41 01 c9             	add    %ecx,%r9d
    fafe:	89 f1                	mov    %esi,%ecx
    fb00:	41 21 f2             	and    %esi,%r10d
    fb03:	43 8d 2c 08          	lea    (%r8,%r9,1),%ebp
    fb07:	41 89 f0             	mov    %esi,%r8d
    fb0a:	c1 c9 02             	ror    $0x2,%ecx
    fb0d:	41 c1 c8 0d          	ror    $0xd,%r8d
    fb11:	41 31 c8             	xor    %ecx,%r8d
    fb14:	89 f1                	mov    %esi,%ecx
    fb16:	c1 c1 0a             	rol    $0xa,%ecx
    fb19:	41 31 c8             	xor    %ecx,%r8d
    fb1c:	89 d1                	mov    %edx,%ecx
    fb1e:	09 f1                	or     %esi,%ecx
    fb20:	21 c1                	and    %eax,%ecx
    fb22:	44 09 d1             	or     %r10d,%ecx
    fb25:	44 01 c1             	add    %r8d,%ecx
    fb28:	41 89 e8             	mov    %ebp,%r8d
    fb2b:	44 01 c9             	add    %r9d,%ecx
    fb2e:	45 89 d9             	mov    %r11d,%r9d
    fb31:	41 c1 c8 0b          	ror    $0xb,%r8d
    fb35:	45 31 e9             	xor    %r13d,%r9d
    fb38:	41 21 e9             	and    %ebp,%r9d
    fb3b:	45 31 d9             	xor    %r11d,%r9d
    fb3e:	41 01 d9             	add    %ebx,%r9d
    fb41:	89 eb                	mov    %ebp,%ebx
    fb43:	c1 cb 06             	ror    $0x6,%ebx
    fb46:	41 31 d8             	xor    %ebx,%r8d
    fb49:	89 eb                	mov    %ebp,%ebx
    fb4b:	c1 c3 07             	rol    $0x7,%ebx
    fb4e:	41 31 d8             	xor    %ebx,%r8d
    fb51:	89 cb                	mov    %ecx,%ebx
    fb53:	44 03 5f 20          	add    0x20(%rdi),%r11d
    fb57:	45 01 c8             	add    %r9d,%r8d
    fb5a:	44 03 44 24 14       	add    0x14(%rsp),%r8d
    fb5f:	c1 cb 02             	ror    $0x2,%ebx
    fb62:	41 89 f1             	mov    %esi,%r9d
    fb65:	46 8d 3c 00          	lea    (%rax,%r8,1),%r15d
    fb69:	89 c8                	mov    %ecx,%eax
    fb6b:	41 21 c9             	and    %ecx,%r9d
    fb6e:	c1 c8 0d             	ror    $0xd,%eax
    fb71:	31 d8                	xor    %ebx,%eax
    fb73:	89 cb                	mov    %ecx,%ebx
    fb75:	c1 c3 0a             	rol    $0xa,%ebx
    fb78:	31 d8                	xor    %ebx,%eax
    fb7a:	89 f3                	mov    %esi,%ebx
    fb7c:	09 cb                	or     %ecx,%ebx
    fb7e:	21 d3                	and    %edx,%ebx
    fb80:	44 09 cb             	or     %r9d,%ebx
    fb83:	01 c3                	add    %eax,%ebx
    fb85:	44 89 f8             	mov    %r15d,%eax
    fb88:	44 01 c3             	add    %r8d,%ebx
    fb8b:	45 89 e8             	mov    %r13d,%r8d
    fb8e:	c1 c8 0b             	ror    $0xb,%eax
    fb91:	41 31 e8             	xor    %ebp,%r8d
    fb94:	41 89 d9             	mov    %ebx,%r9d
    fb97:	45 21 f8             	and    %r15d,%r8d
    fb9a:	45 31 e8             	xor    %r13d,%r8d
    fb9d:	45 01 d8             	add    %r11d,%r8d
    fba0:	45 89 fb             	mov    %r15d,%r11d
    fba3:	41 c1 cb 06          	ror    $0x6,%r11d
    fba7:	44 31 d8             	xor    %r11d,%eax
    fbaa:	45 89 fb             	mov    %r15d,%r11d
    fbad:	41 c1 c3 07          	rol    $0x7,%r11d
    fbb1:	44 31 d8             	xor    %r11d,%eax
    fbb4:	45 8d 1c 00          	lea    (%r8,%rax,1),%r11d
    fbb8:	8b 44 24 18          	mov    0x18(%rsp),%eax
    fbbc:	41 89 c8             	mov    %ecx,%r8d
    fbbf:	44 01 d8             	add    %r11d,%eax
    fbc2:	41 89 db             	mov    %ebx,%r11d
    fbc5:	44 8d 34 02          	lea    (%rdx,%rax,1),%r14d
    fbc9:	89 da                	mov    %ebx,%edx
    fbcb:	41 c1 cb 0d          	ror    $0xd,%r11d
    fbcf:	c1 ca 02             	ror    $0x2,%edx
    fbd2:	44 31 da             	xor    %r11d,%edx
    fbd5:	41 89 db             	mov    %ebx,%r11d
    fbd8:	41 c1 c3 0a          	rol    $0xa,%r11d
    fbdc:	44 31 da             	xor    %r11d,%edx
    fbdf:	41 89 cb             	mov    %ecx,%r11d
    fbe2:	41 09 db             	or     %ebx,%r11d
    fbe5:	41 21 f3             	and    %esi,%r11d
    fbe8:	41 21 d8             	and    %ebx,%r8d
    fbeb:	44 03 6f 24          	add    0x24(%rdi),%r13d
    fbef:	48 83 04 24 20       	addq   $0x20,(%rsp)
    fbf4:	45 09 c3             	or     %r8d,%r11d
    fbf7:	48 83 c7 20          	add    $0x20,%rdi
    fbfb:	41 01 d3             	add    %edx,%r11d
    fbfe:	44 89 f2             	mov    %r14d,%edx
    fc01:	41 01 c3             	add    %eax,%r11d
    fc04:	89 e8                	mov    %ebp,%eax
    fc06:	c1 ca 0b             	ror    $0xb,%edx
    fc09:	44 31 f8             	xor    %r15d,%eax
    fc0c:	45 89 d8             	mov    %r11d,%r8d
    fc0f:	45 21 d9             	and    %r11d,%r9d
    fc12:	44 21 f0             	and    %r14d,%eax
    fc15:	41 c1 c8 0d          	ror    $0xd,%r8d
    fc19:	31 e8                	xor    %ebp,%eax
    fc1b:	41 01 c5             	add    %eax,%r13d
    fc1e:	44 89 f0             	mov    %r14d,%eax
    fc21:	c1 c8 06             	ror    $0x6,%eax
    fc24:	31 d0                	xor    %edx,%eax
    fc26:	44 89 f2             	mov    %r14d,%edx
    fc29:	c1 c2 07             	rol    $0x7,%edx
    fc2c:	31 d0                	xor    %edx,%eax
    fc2e:	44 89 da             	mov    %r11d,%edx
    fc31:	c1 ca 02             	ror    $0x2,%edx
    fc34:	41 01 c5             	add    %eax,%r13d
    fc37:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    fc3b:	44 31 c2             	xor    %r8d,%edx
    fc3e:	45 89 d8             	mov    %r11d,%r8d
    fc41:	41 c1 c0 0a          	rol    $0xa,%r8d
    fc45:	44 01 e8             	add    %r13d,%eax
    fc48:	44 31 c2             	xor    %r8d,%edx
    fc4b:	41 89 d8             	mov    %ebx,%r8d
    fc4e:	01 c6                	add    %eax,%esi
    fc50:	45 09 d8             	or     %r11d,%r8d
    fc53:	41 21 c8             	and    %ecx,%r8d
    fc56:	45 09 c8             	or     %r9d,%r8d
    fc59:	4c 8b 0c 24          	mov    (%rsp),%r9
    fc5d:	44 01 c2             	add    %r8d,%edx
    fc60:	44 8d 2c 10          	lea    (%rax,%rdx,1),%r13d
    fc64:	48 39 7c 24 20       	cmp    %rdi,0x20(%rsp)
    fc69:	74 3d                	je     fca8 <mbedtls_internal_sha256_process+0x468>
    fc6b:	4c 89 c8             	mov    %r9,%rax
    fc6e:	45 8b 01             	mov    (%r9),%r8d
    fc71:	41 8b 51 04          	mov    0x4(%r9),%edx
    fc75:	44 8b 60 10          	mov    0x10(%rax),%r12d
    fc79:	44 8b 50 0c          	mov    0xc(%rax),%r10d
    fc7d:	45 8b 49 08          	mov    0x8(%r9),%r9d
    fc81:	44 89 64 24 10       	mov    %r12d,0x10(%rsp)
    fc86:	44 8b 60 14          	mov    0x14(%rax),%r12d
    fc8a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
    fc8f:	44 8b 60 18          	mov    0x18(%rax),%r12d
    fc93:	8b 40 1c             	mov    0x1c(%rax),%eax
    fc96:	44 89 64 24 18       	mov    %r12d,0x18(%rsp)
    fc9b:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    fc9f:	e9 b0 fc ff ff       	jmpq   f954 <mbedtls_internal_sha256_process+0x114>
    fca4:	0f 1f 40 00          	nopl   0x0(%rax)
    fca8:	89 44 24 50          	mov    %eax,0x50(%rsp)
    fcac:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    fcb1:	41 b9 86 47 be ef    	mov    $0xefbe4786,%r9d
    fcb7:	41 b8 c1 69 9b e4    	mov    $0xe49b69c1,%r8d
    fcbd:	89 b4 24 68 01 00 00 	mov    %esi,0x168(%rsp)
    fcc4:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    fcc9:	48 05 c0 00 00 00    	add    $0xc0,%rax
    fccf:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
    fcd6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    fcdb:	89 f0                	mov    %esi,%eax
    fcdd:	89 ce                	mov    %ecx,%esi
    fcdf:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
    fce6:	00 
    fce7:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
    fcee:	00 
    fcef:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
    fcf6:	00 
    fcf7:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
    fcfe:	00 
    fcff:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
    fd06:	89 8c 24 64 01 00 00 	mov    %ecx,0x164(%rsp)
    fd0d:	89 54 24 54          	mov    %edx,0x54(%rsp)
    fd11:	c7 44 24 28 da 88 f9 	movl   $0x76f988da,0x28(%rsp)
    fd18:	76 
    fd19:	c7 44 24 20 dc a9 b0 	movl   $0x5cb0a9dc,0x20(%rsp)
    fd20:	5c 
    fd21:	c7 44 24 1c aa 84 74 	movl   $0x4a7484aa,0x1c(%rsp)
    fd28:	4a 
    fd29:	c7 44 24 18 6f 2c e9 	movl   $0x2de92c6f,0x18(%rsp)
    fd30:	2d 
    fd31:	c7 44 24 14 cc a1 0c 	movl   $0x240ca1cc,0x14(%rsp)
    fd38:	24 
    fd39:	c7 44 24 10 c6 9d c1 	movl   $0xfc19dc6,0x10(%rsp)
    fd40:	0f 
    fd41:	eb 37                	jmp    fd7a <mbedtls_internal_sha256_process+0x53a>
    fd43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fd48:	8b 57 48             	mov    0x48(%rdi),%edx
    fd4b:	44 8b 47 40          	mov    0x40(%rdi),%r8d
    fd4f:	44 8b 4f 44          	mov    0x44(%rdi),%r9d
    fd53:	89 54 24 10          	mov    %edx,0x10(%rsp)
    fd57:	8b 57 4c             	mov    0x4c(%rdi),%edx
    fd5a:	89 54 24 14          	mov    %edx,0x14(%rsp)
    fd5e:	8b 57 50             	mov    0x50(%rdi),%edx
    fd61:	89 54 24 18          	mov    %edx,0x18(%rsp)
    fd65:	8b 57 54             	mov    0x54(%rdi),%edx
    fd68:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    fd6c:	8b 57 58             	mov    0x58(%rdi),%edx
    fd6f:	8b 7f 5c             	mov    0x5c(%rdi),%edi
    fd72:	89 54 24 20          	mov    %edx,0x20(%rsp)
    fd76:	89 7c 24 28          	mov    %edi,0x28(%rsp)
    fd7a:	41 8b 54 24 40       	mov    0x40(%r12),%edx
    fd7f:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
    fd84:	41 8b 7c 24 0c       	mov    0xc(%r12),%edi
    fd89:	45 8b 54 24 08       	mov    0x8(%r12),%r10d
    fd8e:	c1 c1 0d             	rol    $0xd,%ecx
    fd91:	c1 c2 0f             	rol    $0xf,%edx
    fd94:	45 03 54 24 2c       	add    0x2c(%r12),%r10d
    fd99:	31 ca                	xor    %ecx,%edx
    fd9b:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
    fda0:	c1 e9 0a             	shr    $0xa,%ecx
    fda3:	31 d1                	xor    %edx,%ecx
    fda5:	89 fa                	mov    %edi,%edx
    fda7:	44 01 d1             	add    %r10d,%ecx
    fdaa:	41 89 fa             	mov    %edi,%r10d
    fdad:	c1 c2 0e             	rol    $0xe,%edx
    fdb0:	41 c1 ca 07          	ror    $0x7,%r10d
    fdb4:	44 31 d2             	xor    %r10d,%edx
    fdb7:	41 89 fa             	mov    %edi,%r10d
    fdba:	41 c1 ea 03          	shr    $0x3,%r10d
    fdbe:	44 31 d2             	xor    %r10d,%edx
    fdc1:	44 8d 14 11          	lea    (%rcx,%rdx,1),%r10d
    fdc5:	89 c1                	mov    %eax,%ecx
    fdc7:	89 c2                	mov    %eax,%edx
    fdc9:	c1 c9 06             	ror    $0x6,%ecx
    fdcc:	c1 ca 0b             	ror    $0xb,%edx
    fdcf:	45 89 54 24 48       	mov    %r10d,0x48(%r12)
    fdd4:	31 ca                	xor    %ecx,%edx
    fdd6:	89 c1                	mov    %eax,%ecx
    fdd8:	44 89 14 24          	mov    %r10d,(%rsp)
    fddc:	c1 c1 07             	rol    $0x7,%ecx
    fddf:	31 ca                	xor    %ecx,%edx
    fde1:	44 89 f9             	mov    %r15d,%ecx
    fde4:	44 31 f1             	xor    %r14d,%ecx
    fde7:	21 c1                	and    %eax,%ecx
    fde9:	44 31 f9             	xor    %r15d,%ecx
    fdec:	01 ca                	add    %ecx,%edx
    fdee:	44 89 e9             	mov    %r13d,%ecx
    fdf1:	44 01 d2             	add    %r10d,%edx
    fdf4:	44 21 d9             	and    %r11d,%ecx
    fdf7:	01 d5                	add    %edx,%ebp
    fdf9:	44 89 ea             	mov    %r13d,%edx
    fdfc:	41 01 e8             	add    %ebp,%r8d
    fdff:	44 89 ed             	mov    %r13d,%ebp
    fe02:	c1 ca 0d             	ror    $0xd,%edx
    fe05:	c1 cd 02             	ror    $0x2,%ebp
    fe08:	46 8d 14 06          	lea    (%rsi,%r8,1),%r10d
    fe0c:	89 c6                	mov    %eax,%esi
    fe0e:	31 ea                	xor    %ebp,%edx
    fe10:	44 89 ed             	mov    %r13d,%ebp
    fe13:	c1 c5 0a             	rol    $0xa,%ebp
    fe16:	31 ea                	xor    %ebp,%edx
    fe18:	44 89 ed             	mov    %r13d,%ebp
    fe1b:	44 09 dd             	or     %r11d,%ebp
    fe1e:	21 dd                	and    %ebx,%ebp
    fe20:	09 cd                	or     %ecx,%ebp
    fe22:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
    fe27:	41 03 7c 24 30       	add    0x30(%r12),%edi
    fe2c:	44 31 f6             	xor    %r14d,%esi
    fe2f:	01 d5                	add    %edx,%ebp
    fe31:	41 8b 54 24 44       	mov    0x44(%r12),%edx
    fe36:	44 21 d6             	and    %r10d,%esi
    fe39:	c1 c1 0f             	rol    $0xf,%ecx
    fe3c:	44 01 c5             	add    %r8d,%ebp
    fe3f:	45 8b 44 24 10       	mov    0x10(%r12),%r8d
    fe44:	44 31 f6             	xor    %r14d,%esi
    fe47:	c1 c2 0d             	rol    $0xd,%edx
    fe4a:	31 ca                	xor    %ecx,%edx
    fe4c:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
    fe51:	c1 e9 0a             	shr    $0xa,%ecx
    fe54:	31 d1                	xor    %edx,%ecx
    fe56:	44 89 c2             	mov    %r8d,%edx
    fe59:	01 cf                	add    %ecx,%edi
    fe5b:	44 89 c1             	mov    %r8d,%ecx
    fe5e:	c1 ca 07             	ror    $0x7,%edx
    fe61:	c1 c1 0e             	rol    $0xe,%ecx
    fe64:	31 d1                	xor    %edx,%ecx
    fe66:	44 89 c2             	mov    %r8d,%edx
    fe69:	c1 ea 03             	shr    $0x3,%edx
    fe6c:	31 d1                	xor    %edx,%ecx
    fe6e:	44 89 d2             	mov    %r10d,%edx
    fe71:	01 f9                	add    %edi,%ecx
    fe73:	c1 ca 0b             	ror    $0xb,%edx
    fe76:	44 89 ef             	mov    %r13d,%edi
    fe79:	41 01 cf             	add    %ecx,%r15d
    fe7c:	41 89 4c 24 4c       	mov    %ecx,0x4c(%r12)
    fe81:	41 01 f7             	add    %esi,%r15d
    fe84:	44 89 d6             	mov    %r10d,%esi
    fe87:	c1 ce 06             	ror    $0x6,%esi
    fe8a:	31 f2                	xor    %esi,%edx
    fe8c:	44 89 d6             	mov    %r10d,%esi
    fe8f:	c1 c6 07             	rol    $0x7,%esi
    fe92:	31 f2                	xor    %esi,%edx
    fe94:	89 ee                	mov    %ebp,%esi
    fe96:	44 01 fa             	add    %r15d,%edx
    fe99:	c1 ce 0d             	ror    $0xd,%esi
    fe9c:	44 8b 3c 24          	mov    (%rsp),%r15d
    fea0:	41 01 d1             	add    %edx,%r9d
    fea3:	89 ea                	mov    %ebp,%edx
    fea5:	c1 ca 02             	ror    $0x2,%edx
    fea8:	44 01 cb             	add    %r9d,%ebx
    feab:	31 d6                	xor    %edx,%esi
    fead:	89 ea                	mov    %ebp,%edx
    feaf:	c1 c2 0a             	rol    $0xa,%edx
    feb2:	21 ef                	and    %ebp,%edi
    feb4:	45 03 44 24 34       	add    0x34(%r12),%r8d
    feb9:	31 d6                	xor    %edx,%esi
    febb:	44 89 ea             	mov    %r13d,%edx
    febe:	09 ea                	or     %ebp,%edx
    fec0:	44 21 da             	and    %r11d,%edx
    fec3:	09 fa                	or     %edi,%edx
    fec5:	44 89 ff             	mov    %r15d,%edi
    fec8:	01 f2                	add    %esi,%edx
    feca:	44 89 fe             	mov    %r15d,%esi
    fecd:	c1 c7 0d             	rol    $0xd,%edi
    fed0:	c1 c6 0f             	rol    $0xf,%esi
    fed3:	44 01 ca             	add    %r9d,%edx
    fed6:	45 8b 4c 24 14       	mov    0x14(%r12),%r9d
    fedb:	31 f7                	xor    %esi,%edi
    fedd:	44 89 fe             	mov    %r15d,%esi
    fee0:	41 89 ef             	mov    %ebp,%r15d
    fee3:	c1 ee 0a             	shr    $0xa,%esi
    fee6:	31 fe                	xor    %edi,%esi
    fee8:	44 89 cf             	mov    %r9d,%edi
    feeb:	41 01 f0             	add    %esi,%r8d
    feee:	44 89 ce             	mov    %r9d,%esi
    fef1:	c1 cf 07             	ror    $0x7,%edi
    fef4:	c1 c6 0e             	rol    $0xe,%esi
    fef7:	31 fe                	xor    %edi,%esi
    fef9:	44 89 cf             	mov    %r9d,%edi
    fefc:	c1 ef 03             	shr    $0x3,%edi
    feff:	31 fe                	xor    %edi,%esi
    ff01:	44 01 c6             	add    %r8d,%esi
    ff04:	41 89 c0             	mov    %eax,%r8d
    ff07:	45 31 d0             	xor    %r10d,%r8d
    ff0a:	41 89 74 24 50       	mov    %esi,0x50(%r12)
    ff0f:	41 21 d8             	and    %ebx,%r8d
    ff12:	44 89 c7             	mov    %r8d,%edi
    ff15:	45 8d 04 36          	lea    (%r14,%rsi,1),%r8d
    ff19:	41 89 de             	mov    %ebx,%r14d
    ff1c:	31 c7                	xor    %eax,%edi
    ff1e:	41 c1 ce 0b          	ror    $0xb,%r14d
    ff22:	41 01 f8             	add    %edi,%r8d
    ff25:	89 df                	mov    %ebx,%edi
    ff27:	c1 cf 06             	ror    $0x6,%edi
    ff2a:	41 31 fe             	xor    %edi,%r14d
    ff2d:	89 df                	mov    %ebx,%edi
    ff2f:	c1 c7 07             	rol    $0x7,%edi
    ff32:	41 31 fe             	xor    %edi,%r14d
    ff35:	89 d7                	mov    %edx,%edi
    ff37:	45 01 c6             	add    %r8d,%r14d
    ff3a:	41 89 d0             	mov    %edx,%r8d
    ff3d:	44 03 74 24 10       	add    0x10(%rsp),%r14d
    ff42:	45 01 f3             	add    %r14d,%r11d
    ff45:	41 c1 c8 02          	ror    $0x2,%r8d
    ff49:	41 21 d7             	and    %edx,%r15d
    ff4c:	c1 cf 0d             	ror    $0xd,%edi
    ff4f:	44 31 c7             	xor    %r8d,%edi
    ff52:	41 89 d0             	mov    %edx,%r8d
    ff55:	41 c1 c0 0a          	rol    $0xa,%r8d
    ff59:	44 31 c7             	xor    %r8d,%edi
    ff5c:	41 89 e8             	mov    %ebp,%r8d
    ff5f:	41 09 d0             	or     %edx,%r8d
    ff62:	45 21 e8             	and    %r13d,%r8d
    ff65:	45 09 f8             	or     %r15d,%r8d
    ff68:	41 01 f8             	add    %edi,%r8d
    ff6b:	89 cf                	mov    %ecx,%edi
    ff6d:	c1 c7 0f             	rol    $0xf,%edi
    ff70:	45 01 f0             	add    %r14d,%r8d
    ff73:	45 8b 74 24 18       	mov    0x18(%r12),%r14d
    ff78:	41 89 ff             	mov    %edi,%r15d
    ff7b:	89 cf                	mov    %ecx,%edi
    ff7d:	c1 e9 0a             	shr    $0xa,%ecx
    ff80:	c1 c7 0d             	rol    $0xd,%edi
    ff83:	44 31 ff             	xor    %r15d,%edi
    ff86:	41 89 d7             	mov    %edx,%r15d
    ff89:	31 cf                	xor    %ecx,%edi
    ff8b:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
    ff90:	44 01 c9             	add    %r9d,%ecx
    ff93:	45 89 f1             	mov    %r14d,%r9d
    ff96:	01 f9                	add    %edi,%ecx
    ff98:	44 89 f7             	mov    %r14d,%edi
    ff9b:	41 c1 c9 07          	ror    $0x7,%r9d
    ff9f:	c1 c7 0e             	rol    $0xe,%edi
    ffa2:	44 31 cf             	xor    %r9d,%edi
    ffa5:	45 89 f1             	mov    %r14d,%r9d
    ffa8:	41 c1 e9 03          	shr    $0x3,%r9d
    ffac:	44 31 cf             	xor    %r9d,%edi
    ffaf:	45 89 d9             	mov    %r11d,%r9d
    ffb2:	01 cf                	add    %ecx,%edi
    ffb4:	44 89 d1             	mov    %r10d,%ecx
    ffb7:	41 c1 c9 06          	ror    $0x6,%r9d
    ffbb:	31 d9                	xor    %ebx,%ecx
    ffbd:	01 f8                	add    %edi,%eax
    ffbf:	41 89 7c 24 54       	mov    %edi,0x54(%r12)
    ffc4:	44 21 d9             	and    %r11d,%ecx
    ffc7:	44 31 d1             	xor    %r10d,%ecx
    ffca:	01 c8                	add    %ecx,%eax
    ffcc:	44 89 d9             	mov    %r11d,%ecx
    ffcf:	c1 c9 0b             	ror    $0xb,%ecx
    ffd2:	44 31 c9             	xor    %r9d,%ecx
    ffd5:	45 89 d9             	mov    %r11d,%r9d
    ffd8:	45 21 c7             	and    %r8d,%r15d
    ffdb:	45 03 74 24 3c       	add    0x3c(%r12),%r14d
    ffe0:	41 c1 c1 07          	rol    $0x7,%r9d
    ffe4:	44 31 c9             	xor    %r9d,%ecx
    ffe7:	01 c1                	add    %eax,%ecx
    ffe9:	03 4c 24 14          	add    0x14(%rsp),%ecx
    ffed:	44 89 c0             	mov    %r8d,%eax
    fff0:	45 8d 4c 0d 00       	lea    0x0(%r13,%rcx,1),%r9d
    fff5:	45 89 c5             	mov    %r8d,%r13d
    fff8:	c1 c8 02             	ror    $0x2,%eax
    fffb:	41 c1 cd 0d          	ror    $0xd,%r13d
    ffff:	41 31 c5             	xor    %eax,%r13d
   10002:	44 89 c0             	mov    %r8d,%eax
   10005:	c1 c0 0a             	rol    $0xa,%eax
   10008:	41 31 c5             	xor    %eax,%r13d
   1000b:	89 d0                	mov    %edx,%eax
   1000d:	44 09 c0             	or     %r8d,%eax
   10010:	21 e8                	and    %ebp,%eax
   10012:	44 09 f8             	or     %r15d,%eax
   10015:	44 01 e8             	add    %r13d,%eax
   10018:	45 8b 6c 24 1c       	mov    0x1c(%r12),%r13d
   1001d:	01 c8                	add    %ecx,%eax
   1001f:	89 f1                	mov    %esi,%ecx
   10021:	c1 c1 0f             	rol    $0xf,%ecx
   10024:	41 89 cf             	mov    %ecx,%r15d
   10027:	89 f1                	mov    %esi,%ecx
   10029:	c1 ee 0a             	shr    $0xa,%esi
   1002c:	c1 c1 0d             	rol    $0xd,%ecx
   1002f:	44 31 f9             	xor    %r15d,%ecx
   10032:	45 89 c7             	mov    %r8d,%r15d
   10035:	31 f1                	xor    %esi,%ecx
   10037:	44 89 f6             	mov    %r14d,%esi
   1003a:	45 89 ee             	mov    %r13d,%r14d
   1003d:	01 ce                	add    %ecx,%esi
   1003f:	44 89 e9             	mov    %r13d,%ecx
   10042:	41 c1 ce 07          	ror    $0x7,%r14d
   10046:	c1 c1 0e             	rol    $0xe,%ecx
   10049:	44 31 f1             	xor    %r14d,%ecx
   1004c:	45 89 ee             	mov    %r13d,%r14d
   1004f:	41 c1 ee 03          	shr    $0x3,%r14d
   10053:	44 31 f1             	xor    %r14d,%ecx
   10056:	01 f1                	add    %esi,%ecx
   10058:	89 de                	mov    %ebx,%esi
   1005a:	44 31 de             	xor    %r11d,%esi
   1005d:	41 89 4c 24 58       	mov    %ecx,0x58(%r12)
   10062:	44 21 ce             	and    %r9d,%esi
   10065:	41 89 f6             	mov    %esi,%r14d
   10068:	41 8d 34 0a          	lea    (%r10,%rcx,1),%esi
   1006c:	45 89 ca             	mov    %r9d,%r10d
   1006f:	41 31 de             	xor    %ebx,%r14d
   10072:	44 01 f6             	add    %r14d,%esi
   10075:	45 89 ce             	mov    %r9d,%r14d
   10078:	41 c1 ca 0b          	ror    $0xb,%r10d
   1007c:	41 21 c7             	and    %eax,%r15d
   1007f:	41 c1 ce 06          	ror    $0x6,%r14d
   10083:	45 31 f2             	xor    %r14d,%r10d
   10086:	45 89 ce             	mov    %r9d,%r14d
   10089:	41 c1 c6 07          	rol    $0x7,%r14d
   1008d:	45 31 f2             	xor    %r14d,%r10d
   10090:	41 89 c6             	mov    %eax,%r14d
   10093:	41 01 f2             	add    %esi,%r10d
   10096:	89 c6                	mov    %eax,%esi
   10098:	41 c1 ce 0d          	ror    $0xd,%r14d
   1009c:	44 03 54 24 18       	add    0x18(%rsp),%r10d
   100a1:	c1 ce 02             	ror    $0x2,%esi
   100a4:	44 01 d5             	add    %r10d,%ebp
   100a7:	41 31 f6             	xor    %esi,%r14d
   100aa:	89 c6                	mov    %eax,%esi
   100ac:	c1 c6 0a             	rol    $0xa,%esi
   100af:	41 31 f6             	xor    %esi,%r14d
   100b2:	44 89 c6             	mov    %r8d,%esi
   100b5:	09 c6                	or     %eax,%esi
   100b7:	21 d6                	and    %edx,%esi
   100b9:	44 09 fe             	or     %r15d,%esi
   100bc:	41 89 ff             	mov    %edi,%r15d
   100bf:	44 01 f6             	add    %r14d,%esi
   100c2:	41 89 fe             	mov    %edi,%r14d
   100c5:	41 c1 c7 0f          	rol    $0xf,%r15d
   100c9:	41 c1 c6 0d          	rol    $0xd,%r14d
   100cd:	c1 ef 0a             	shr    $0xa,%edi
   100d0:	44 01 d6             	add    %r10d,%esi
   100d3:	45 8b 54 24 20       	mov    0x20(%r12),%r10d
   100d8:	45 31 fe             	xor    %r15d,%r14d
   100db:	41 31 fe             	xor    %edi,%r14d
   100de:	41 8b 7c 24 40       	mov    0x40(%r12),%edi
   100e3:	44 01 ef             	add    %r13d,%edi
   100e6:	45 89 d5             	mov    %r10d,%r13d
   100e9:	41 01 fe             	add    %edi,%r14d
   100ec:	44 89 d7             	mov    %r10d,%edi
   100ef:	41 c1 cd 07          	ror    $0x7,%r13d
   100f3:	c1 c7 0e             	rol    $0xe,%edi
   100f6:	44 31 ef             	xor    %r13d,%edi
   100f9:	45 89 d5             	mov    %r10d,%r13d
   100fc:	41 c1 ed 03          	shr    $0x3,%r13d
   10100:	44 31 ef             	xor    %r13d,%edi
   10103:	41 89 ed             	mov    %ebp,%r13d
   10106:	44 01 f7             	add    %r14d,%edi
   10109:	41 89 ee             	mov    %ebp,%r14d
   1010c:	41 c1 cd 0b          	ror    $0xb,%r13d
   10110:	41 c1 ce 06          	ror    $0x6,%r14d
   10114:	01 fb                	add    %edi,%ebx
   10116:	41 89 7c 24 5c       	mov    %edi,0x5c(%r12)
   1011b:	45 31 f5             	xor    %r14d,%r13d
   1011e:	41 89 ee             	mov    %ebp,%r14d
   10121:	41 c1 c6 07          	rol    $0x7,%r14d
   10125:	45 31 f5             	xor    %r14d,%r13d
   10128:	45 89 de             	mov    %r11d,%r14d
   1012b:	45 31 ce             	xor    %r9d,%r14d
   1012e:	41 21 ee             	and    %ebp,%r14d
   10131:	45 31 de             	xor    %r11d,%r14d
   10134:	44 01 f3             	add    %r14d,%ebx
   10137:	41 89 c6             	mov    %eax,%r14d
   1013a:	44 01 eb             	add    %r13d,%ebx
   1013d:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   10142:	41 21 f6             	and    %esi,%r14d
   10145:	41 01 dd             	add    %ebx,%r13d
   10148:	89 f3                	mov    %esi,%ebx
   1014a:	46 8d 3c 2a          	lea    (%rdx,%r13,1),%r15d
   1014e:	89 f2                	mov    %esi,%edx
   10150:	c1 cb 02             	ror    $0x2,%ebx
   10153:	c1 ca 0d             	ror    $0xd,%edx
   10156:	31 da                	xor    %ebx,%edx
   10158:	89 f3                	mov    %esi,%ebx
   1015a:	c1 c3 0a             	rol    $0xa,%ebx
   1015d:	31 da                	xor    %ebx,%edx
   1015f:	89 c3                	mov    %eax,%ebx
   10161:	09 f3                	or     %esi,%ebx
   10163:	44 21 c3             	and    %r8d,%ebx
   10166:	44 09 f3             	or     %r14d,%ebx
   10169:	41 89 ce             	mov    %ecx,%r14d
   1016c:	01 d3                	add    %edx,%ebx
   1016e:	41 c1 c6 0f          	rol    $0xf,%r14d
   10172:	41 8b 54 24 24       	mov    0x24(%r12),%edx
   10177:	45 03 54 24 44       	add    0x44(%r12),%r10d
   1017c:	44 01 eb             	add    %r13d,%ebx
   1017f:	41 89 cd             	mov    %ecx,%r13d
   10182:	c1 e9 0a             	shr    $0xa,%ecx
   10185:	41 c1 c5 0d          	rol    $0xd,%r13d
   10189:	45 31 f5             	xor    %r14d,%r13d
   1018c:	41 31 cd             	xor    %ecx,%r13d
   1018f:	89 d1                	mov    %edx,%ecx
   10191:	45 01 d5             	add    %r10d,%r13d
   10194:	41 89 d2             	mov    %edx,%r10d
   10197:	c1 c9 07             	ror    $0x7,%ecx
   1019a:	41 c1 c2 0e          	rol    $0xe,%r10d
   1019e:	41 31 ca             	xor    %ecx,%r10d
   101a1:	89 d1                	mov    %edx,%ecx
   101a3:	c1 e9 03             	shr    $0x3,%ecx
   101a6:	41 31 ca             	xor    %ecx,%r10d
   101a9:	44 89 f9             	mov    %r15d,%ecx
   101ac:	45 01 ea             	add    %r13d,%r10d
   101af:	45 89 fd             	mov    %r15d,%r13d
   101b2:	c1 c9 0b             	ror    $0xb,%ecx
   101b5:	41 c1 cd 06          	ror    $0x6,%r13d
   101b9:	45 01 d3             	add    %r10d,%r11d
   101bc:	45 89 54 24 60       	mov    %r10d,0x60(%r12)
   101c1:	41 89 f2             	mov    %esi,%r10d
   101c4:	44 31 e9             	xor    %r13d,%ecx
   101c7:	45 89 fd             	mov    %r15d,%r13d
   101ca:	41 21 da             	and    %ebx,%r10d
   101cd:	41 c1 c5 07          	rol    $0x7,%r13d
   101d1:	44 31 e9             	xor    %r13d,%ecx
   101d4:	45 89 cd             	mov    %r9d,%r13d
   101d7:	41 31 ed             	xor    %ebp,%r13d
   101da:	45 21 fd             	and    %r15d,%r13d
   101dd:	45 31 cd             	xor    %r9d,%r13d
   101e0:	45 01 eb             	add    %r13d,%r11d
   101e3:	41 01 cb             	add    %ecx,%r11d
   101e6:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   101ea:	44 01 d9             	add    %r11d,%ecx
   101ed:	41 89 db             	mov    %ebx,%r11d
   101f0:	45 8d 34 08          	lea    (%r8,%rcx,1),%r14d
   101f4:	41 89 d8             	mov    %ebx,%r8d
   101f7:	41 c1 cb 02          	ror    $0x2,%r11d
   101fb:	41 c1 c8 0d          	ror    $0xd,%r8d
   101ff:	45 89 f5             	mov    %r14d,%r13d
   10202:	45 31 d8             	xor    %r11d,%r8d
   10205:	41 89 db             	mov    %ebx,%r11d
   10208:	41 c1 c3 0a          	rol    $0xa,%r11d
   1020c:	45 31 d8             	xor    %r11d,%r8d
   1020f:	41 89 f3             	mov    %esi,%r11d
   10212:	41 09 db             	or     %ebx,%r11d
   10215:	41 21 c3             	and    %eax,%r11d
   10218:	45 09 d3             	or     %r10d,%r11d
   1021b:	41 89 fa             	mov    %edi,%r10d
   1021e:	45 01 c3             	add    %r8d,%r11d
   10221:	41 c1 c2 0f          	rol    $0xf,%r10d
   10225:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
   1022a:	41 01 cb             	add    %ecx,%r11d
   1022d:	89 f9                	mov    %edi,%ecx
   1022f:	c1 ef 0a             	shr    $0xa,%edi
   10232:	c1 c1 0d             	rol    $0xd,%ecx
   10235:	44 31 d1             	xor    %r10d,%ecx
   10238:	41 89 ea             	mov    %ebp,%r10d
   1023b:	31 f9                	xor    %edi,%ecx
   1023d:	03 14 24             	add    (%rsp),%edx
   10240:	44 89 c7             	mov    %r8d,%edi
   10243:	41 c1 cd 06          	ror    $0x6,%r13d
   10247:	01 d1                	add    %edx,%ecx
   10249:	44 89 c2             	mov    %r8d,%edx
   1024c:	c1 c7 0e             	rol    $0xe,%edi
   1024f:	45 31 fa             	xor    %r15d,%r10d
   10252:	c1 ca 07             	ror    $0x7,%edx
   10255:	41 c1 e8 03          	shr    $0x3,%r8d
   10259:	45 21 f2             	and    %r14d,%r10d
   1025c:	31 d7                	xor    %edx,%edi
   1025e:	44 89 f2             	mov    %r14d,%edx
   10261:	41 31 ea             	xor    %ebp,%r10d
   10264:	c1 ca 0b             	ror    $0xb,%edx
   10267:	44 31 c7             	xor    %r8d,%edi
   1026a:	41 31 d5             	xor    %edx,%r13d
   1026d:	44 89 f2             	mov    %r14d,%edx
   10270:	01 f9                	add    %edi,%ecx
   10272:	89 df                	mov    %ebx,%edi
   10274:	c1 c2 07             	rol    $0x7,%edx
   10277:	41 89 4c 24 64       	mov    %ecx,0x64(%r12)
   1027c:	41 01 c9             	add    %ecx,%r9d
   1027f:	44 89 d9             	mov    %r11d,%ecx
   10282:	41 31 d5             	xor    %edx,%r13d
   10285:	44 89 da             	mov    %r11d,%edx
   10288:	c1 c9 0d             	ror    $0xd,%ecx
   1028b:	44 21 df             	and    %r11d,%edi
   1028e:	c1 ca 02             	ror    $0x2,%edx
   10291:	45 01 d1             	add    %r10d,%r9d
   10294:	31 ca                	xor    %ecx,%edx
   10296:	44 89 d9             	mov    %r11d,%ecx
   10299:	45 01 e9             	add    %r13d,%r9d
   1029c:	44 03 4c 24 28       	add    0x28(%rsp),%r9d
   102a1:	c1 c1 0a             	rol    $0xa,%ecx
   102a4:	44 01 c8             	add    %r9d,%eax
   102a7:	31 d1                	xor    %edx,%ecx
   102a9:	89 da                	mov    %ebx,%edx
   102ab:	44 09 da             	or     %r11d,%edx
   102ae:	21 f2                	and    %esi,%edx
   102b0:	09 fa                	or     %edi,%edx
   102b2:	01 ca                	add    %ecx,%edx
   102b4:	49 83 c4 20          	add    $0x20,%r12
   102b8:	48 83 44 24 08 20    	addq   $0x20,0x8(%rsp)
   102be:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   102c3:	45 8d 2c 11          	lea    (%r9,%rdx,1),%r13d
   102c7:	4c 39 64 24 30       	cmp    %r12,0x30(%rsp)
   102cc:	0f 85 76 fa ff ff    	jne    fd48 <mbedtls_internal_sha256_process+0x508>
   102d2:	89 84 24 68 01 00 00 	mov    %eax,0x168(%rsp)
   102d9:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   102de:	31 c0                	xor    %eax,%eax
   102e0:	89 54 24 54          	mov    %edx,0x54(%rsp)
   102e4:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   102e9:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
   102f0:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
   102f7:	00 
   102f8:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
   102ff:	00 
   10300:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
   10307:	00 
   10308:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
   1030f:	00 
   10310:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
   10317:	89 b4 24 64 01 00 00 	mov    %esi,0x164(%rsp)
   1031e:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
   10323:	eb 07                	jmp    1032c <mbedtls_internal_sha256_process+0xaec>
   10325:	0f 1f 00             	nopl   (%rax)
   10328:	44 8b 2c 01          	mov    (%rcx,%rax,1),%r13d
   1032c:	44 01 6c 02 08       	add    %r13d,0x8(%rdx,%rax,1)
   10331:	48 83 c0 04          	add    $0x4,%rax
   10335:	48 83 f8 20          	cmp    $0x20,%rax
   10339:	75 ed                	jne    10328 <mbedtls_internal_sha256_process+0xae8>
   1033b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   10340:	be 28 01 00 00       	mov    $0x128,%esi
   10345:	e8 e6 4e ff ff       	callq  5230 <mbedtls_platform_zeroize>
   1034a:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   10351:	00 
   10352:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10359:	00 00 
   1035b:	75 14                	jne    10371 <mbedtls_internal_sha256_process+0xb31>
   1035d:	48 81 c4 88 01 00 00 	add    $0x188,%rsp
   10364:	31 c0                	xor    %eax,%eax
   10366:	5b                   	pop    %rbx
   10367:	5d                   	pop    %rbp
   10368:	41 5c                	pop    %r12
   1036a:	41 5d                	pop    %r13
   1036c:	41 5e                	pop    %r14
   1036e:	41 5f                	pop    %r15
   10370:	c3                   	retq   
   10371:	e8 ea 2e ff ff       	callq  3260 <__stack_chk_fail@plt>
   10376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1037d:	00 00 00 

0000000000010380 <mbedtls_sha256_update.part.0>:
   10380:	41 56                	push   %r14
   10382:	41 55                	push   %r13
   10384:	49 89 d5             	mov    %rdx,%r13
   10387:	ba 40 00 00 00       	mov    $0x40,%edx
   1038c:	41 54                	push   %r12
   1038e:	49 89 fc             	mov    %rdi,%r12
   10391:	55                   	push   %rbp
   10392:	48 89 f5             	mov    %rsi,%rbp
   10395:	53                   	push   %rbx
   10396:	8b 07                	mov    (%rdi),%eax
   10398:	41 89 c6             	mov    %eax,%r14d
   1039b:	41 83 e6 3f          	and    $0x3f,%r14d
   1039f:	44 29 f2             	sub    %r14d,%edx
   103a2:	44 01 e8             	add    %r13d,%eax
   103a5:	89 07                	mov    %eax,(%rdi)
   103a7:	89 d3                	mov    %edx,%ebx
   103a9:	73 04                	jae    103af <mbedtls_sha256_update.part.0+0x2f>
   103ab:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   103af:	45 85 f6             	test   %r14d,%r14d
   103b2:	74 05                	je     103b9 <mbedtls_sha256_update.part.0+0x39>
   103b4:	4c 39 eb             	cmp    %r13,%rbx
   103b7:	76 69                	jbe    10422 <mbedtls_sha256_update.part.0+0xa2>
   103b9:	31 db                	xor    %ebx,%ebx
   103bb:	49 83 fd 3f          	cmp    $0x3f,%r13
   103bf:	0f 86 69 01 00 00    	jbe    1052e <mbedtls_sha256_update.part.0+0x1ae>
   103c5:	0f 1f 00             	nopl   (%rax)
   103c8:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   103cd:	4c 89 e7             	mov    %r12,%rdi
   103d0:	e8 6b f4 ff ff       	callq  f840 <mbedtls_internal_sha256_process>
   103d5:	85 c0                	test   %eax,%eax
   103d7:	75 37                	jne    10410 <mbedtls_sha256_update.part.0+0x90>
   103d9:	48 83 c3 40          	add    $0x40,%rbx
   103dd:	4c 89 e8             	mov    %r13,%rax
   103e0:	48 29 d8             	sub    %rbx,%rax
   103e3:	48 83 f8 3f          	cmp    $0x3f,%rax
   103e7:	77 df                	ja     103c8 <mbedtls_sha256_update.part.0+0x48>
   103e9:	48 83 fb 3f          	cmp    $0x3f,%rbx
   103ed:	76 21                	jbe    10410 <mbedtls_sha256_update.part.0+0x90>
   103ef:	48 01 dd             	add    %rbx,%rbp
   103f2:	45 31 c0             	xor    %r8d,%r8d
   103f5:	48 85 c0             	test   %rax,%rax
   103f8:	0f 85 b4 00 00 00    	jne    104b2 <mbedtls_sha256_update.part.0+0x132>
   103fe:	5b                   	pop    %rbx
   103ff:	44 89 c0             	mov    %r8d,%eax
   10402:	5d                   	pop    %rbp
   10403:	41 5c                	pop    %r12
   10405:	41 5d                	pop    %r13
   10407:	41 5e                	pop    %r14
   10409:	c3                   	retq   
   1040a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10410:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   10416:	5b                   	pop    %rbx
   10417:	5d                   	pop    %rbp
   10418:	44 89 c0             	mov    %r8d,%eax
   1041b:	41 5c                	pop    %r12
   1041d:	41 5d                	pop    %r13
   1041f:	41 5e                	pop    %r14
   10421:	c3                   	retq   
   10422:	4d 8d 44 24 28       	lea    0x28(%r12),%r8
   10427:	44 89 f0             	mov    %r14d,%eax
   1042a:	4c 01 c0             	add    %r8,%rax
   1042d:	83 fa 08             	cmp    $0x8,%edx
   10430:	73 3c                	jae    1046e <mbedtls_sha256_update.part.0+0xee>
   10432:	f6 c2 04             	test   $0x4,%dl
   10435:	0f 85 fb 00 00 00    	jne    10536 <mbedtls_sha256_update.part.0+0x1b6>
   1043b:	85 d2                	test   %edx,%edx
   1043d:	74 0f                	je     1044e <mbedtls_sha256_update.part.0+0xce>
   1043f:	0f b6 4d 00          	movzbl 0x0(%rbp),%ecx
   10443:	83 e2 02             	and    $0x2,%edx
   10446:	88 08                	mov    %cl,(%rax)
   10448:	0f 85 09 01 00 00    	jne    10557 <mbedtls_sha256_update.part.0+0x1d7>
   1044e:	4c 89 c6             	mov    %r8,%rsi
   10451:	4c 89 e7             	mov    %r12,%rdi
   10454:	e8 e7 f3 ff ff       	callq  f840 <mbedtls_internal_sha256_process>
   10459:	41 89 c0             	mov    %eax,%r8d
   1045c:	85 c0                	test   %eax,%eax
   1045e:	75 9e                	jne    103fe <mbedtls_sha256_update.part.0+0x7e>
   10460:	48 01 dd             	add    %rbx,%rbp
   10463:	49 29 dd             	sub    %rbx,%r13
   10466:	45 31 f6             	xor    %r14d,%r14d
   10469:	e9 4b ff ff ff       	jmpq   103b9 <mbedtls_sha256_update.part.0+0x39>
   1046e:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   10472:	48 8d 70 08          	lea    0x8(%rax),%rsi
   10476:	49 89 e9             	mov    %rbp,%r9
   10479:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1047d:	48 89 08             	mov    %rcx,(%rax)
   10480:	48 8b 4c 1d f8       	mov    -0x8(%rbp,%rbx,1),%rcx
   10485:	48 89 4c 18 f8       	mov    %rcx,-0x8(%rax,%rbx,1)
   1048a:	48 29 f0             	sub    %rsi,%rax
   1048d:	01 c2                	add    %eax,%edx
   1048f:	49 29 c1             	sub    %rax,%r9
   10492:	83 e2 f8             	and    $0xfffffff8,%edx
   10495:	83 fa 08             	cmp    $0x8,%edx
   10498:	72 b4                	jb     1044e <mbedtls_sha256_update.part.0+0xce>
   1049a:	83 e2 f8             	and    $0xfffffff8,%edx
   1049d:	31 c0                	xor    %eax,%eax
   1049f:	89 c1                	mov    %eax,%ecx
   104a1:	83 c0 08             	add    $0x8,%eax
   104a4:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   104a8:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   104ac:	39 d0                	cmp    %edx,%eax
   104ae:	72 ef                	jb     1049f <mbedtls_sha256_update.part.0+0x11f>
   104b0:	eb 9c                	jmp    1044e <mbedtls_sha256_update.part.0+0xce>
   104b2:	4b 8d 4c 34 28       	lea    0x28(%r12,%r14,1),%rcx
   104b7:	89 c2                	mov    %eax,%edx
   104b9:	83 f8 08             	cmp    $0x8,%eax
   104bc:	73 29                	jae    104e7 <mbedtls_sha256_update.part.0+0x167>
   104be:	a8 04                	test   $0x4,%al
   104c0:	0f 85 82 00 00 00    	jne    10548 <mbedtls_sha256_update.part.0+0x1c8>
   104c6:	85 d2                	test   %edx,%edx
   104c8:	74 15                	je     104df <mbedtls_sha256_update.part.0+0x15f>
   104ca:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   104ce:	88 01                	mov    %al,(%rcx)
   104d0:	f6 c2 02             	test   $0x2,%dl
   104d3:	74 0a                	je     104df <mbedtls_sha256_update.part.0+0x15f>
   104d5:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   104da:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   104df:	45 31 c0             	xor    %r8d,%r8d
   104e2:	e9 17 ff ff ff       	jmpq   103fe <mbedtls_sha256_update.part.0+0x7e>
   104e7:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   104eb:	48 89 11             	mov    %rdx,(%rcx)
   104ee:	89 c2                	mov    %eax,%edx
   104f0:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   104f5:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   104fa:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   104fe:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   10502:	48 29 f1             	sub    %rsi,%rcx
   10505:	48 89 ca             	mov    %rcx,%rdx
   10508:	48 29 cd             	sub    %rcx,%rbp
   1050b:	01 c2                	add    %eax,%edx
   1050d:	83 e2 f8             	and    $0xfffffff8,%edx
   10510:	83 fa 08             	cmp    $0x8,%edx
   10513:	72 ca                	jb     104df <mbedtls_sha256_update.part.0+0x15f>
   10515:	83 e2 f8             	and    $0xfffffff8,%edx
   10518:	31 c0                	xor    %eax,%eax
   1051a:	89 c1                	mov    %eax,%ecx
   1051c:	83 c0 08             	add    $0x8,%eax
   1051f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   10524:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   10528:	39 d0                	cmp    %edx,%eax
   1052a:	72 ee                	jb     1051a <mbedtls_sha256_update.part.0+0x19a>
   1052c:	eb b1                	jmp    104df <mbedtls_sha256_update.part.0+0x15f>
   1052e:	4c 89 e8             	mov    %r13,%rax
   10531:	e9 bc fe ff ff       	jmpq   103f2 <mbedtls_sha256_update.part.0+0x72>
   10536:	8b 55 00             	mov    0x0(%rbp),%edx
   10539:	89 10                	mov    %edx,(%rax)
   1053b:	8b 54 1d fc          	mov    -0x4(%rbp,%rbx,1),%edx
   1053f:	89 54 18 fc          	mov    %edx,-0x4(%rax,%rbx,1)
   10543:	e9 06 ff ff ff       	jmpq   1044e <mbedtls_sha256_update.part.0+0xce>
   10548:	8b 45 00             	mov    0x0(%rbp),%eax
   1054b:	89 01                	mov    %eax,(%rcx)
   1054d:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   10551:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   10555:	eb 88                	jmp    104df <mbedtls_sha256_update.part.0+0x15f>
   10557:	0f b7 54 1d fe       	movzwl -0x2(%rbp,%rbx,1),%edx
   1055c:	66 89 54 18 fe       	mov    %dx,-0x2(%rax,%rbx,1)
   10561:	e9 e8 fe ff ff       	jmpq   1044e <mbedtls_sha256_update.part.0+0xce>
   10566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1056d:	00 00 00 

0000000000010570 <mbedtls_sha256_update>:
   10570:	f3 0f 1e fa          	endbr64 
   10574:	48 85 d2             	test   %rdx,%rdx
   10577:	74 07                	je     10580 <mbedtls_sha256_update+0x10>
   10579:	e9 02 fe ff ff       	jmpq   10380 <mbedtls_sha256_update.part.0>
   1057e:	66 90                	xchg   %ax,%ax
   10580:	31 c0                	xor    %eax,%eax
   10582:	c3                   	retq   
   10583:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1058a:	00 00 00 00 
   1058e:	66 90                	xchg   %ax,%ax

0000000000010590 <mbedtls_sha256_finish>:
   10590:	f3 0f 1e fa          	endbr64 
   10594:	41 54                	push   %r12
   10596:	4c 8d 67 28          	lea    0x28(%rdi),%r12
   1059a:	55                   	push   %rbp
   1059b:	48 89 f5             	mov    %rsi,%rbp
   1059e:	53                   	push   %rbx
   1059f:	8b 07                	mov    (%rdi),%eax
   105a1:	48 89 fb             	mov    %rdi,%rbx
   105a4:	83 e0 3f             	and    $0x3f,%eax
   105a7:	8d 48 01             	lea    0x1(%rax),%ecx
   105aa:	c6 44 07 28 80       	movb   $0x80,0x28(%rdi,%rax,1)
   105af:	89 c8                	mov    %ecx,%eax
   105b1:	4c 01 e0             	add    %r12,%rax
   105b4:	83 f9 38             	cmp    $0x38,%ecx
   105b7:	77 57                	ja     10610 <mbedtls_sha256_finish+0x80>
   105b9:	ba 38 00 00 00       	mov    $0x38,%edx
   105be:	31 ff                	xor    %edi,%edi
   105c0:	29 ca                	sub    %ecx,%edx
   105c2:	83 fa 08             	cmp    $0x8,%edx
   105c5:	72 79                	jb     10640 <mbedtls_sha256_finish+0xb0>
   105c7:	89 d1                	mov    %edx,%ecx
   105c9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   105d0:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   105d7:	00 00 
   105d9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   105dd:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   105e1:	48 29 c8             	sub    %rcx,%rax
   105e4:	01 c2                	add    %eax,%edx
   105e6:	83 e2 f8             	and    $0xfffffff8,%edx
   105e9:	83 fa 08             	cmp    $0x8,%edx
   105ec:	0f 82 8b 00 00 00    	jb     1067d <mbedtls_sha256_finish+0xed>
   105f2:	83 e2 f8             	and    $0xfffffff8,%edx
   105f5:	31 c0                	xor    %eax,%eax
   105f7:	89 c6                	mov    %eax,%esi
   105f9:	83 c0 08             	add    $0x8,%eax
   105fc:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   10600:	39 d0                	cmp    %edx,%eax
   10602:	72 f3                	jb     105f7 <mbedtls_sha256_finish+0x67>
   10604:	eb 77                	jmp    1067d <mbedtls_sha256_finish+0xed>
   10606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1060d:	00 00 00 
   10610:	ba 40 00 00 00       	mov    $0x40,%edx
   10615:	29 ca                	sub    %ecx,%edx
   10617:	89 d1                	mov    %edx,%ecx
   10619:	74 0f                	je     1062a <mbedtls_sha256_finish+0x9a>
   1061b:	31 d2                	xor    %edx,%edx
   1061d:	89 d6                	mov    %edx,%esi
   1061f:	83 c2 01             	add    $0x1,%edx
   10622:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   10626:	39 ca                	cmp    %ecx,%edx
   10628:	72 f3                	jb     1061d <mbedtls_sha256_finish+0x8d>
   1062a:	4c 89 e6             	mov    %r12,%rsi
   1062d:	48 89 df             	mov    %rbx,%rdi
   10630:	e8 0b f2 ff ff       	callq  f840 <mbedtls_internal_sha256_process>
   10635:	85 c0                	test   %eax,%eax
   10637:	74 27                	je     10660 <mbedtls_sha256_finish+0xd0>
   10639:	5b                   	pop    %rbx
   1063a:	5d                   	pop    %rbp
   1063b:	41 5c                	pop    %r12
   1063d:	c3                   	retq   
   1063e:	66 90                	xchg   %ax,%ax
   10640:	f6 c2 04             	test   $0x4,%dl
   10643:	0f 85 b7 00 00 00    	jne    10700 <mbedtls_sha256_finish+0x170>
   10649:	85 d2                	test   %edx,%edx
   1064b:	74 30                	je     1067d <mbedtls_sha256_finish+0xed>
   1064d:	c6 00 00             	movb   $0x0,(%rax)
   10650:	f6 c2 02             	test   $0x2,%dl
   10653:	74 28                	je     1067d <mbedtls_sha256_finish+0xed>
   10655:	31 c9                	xor    %ecx,%ecx
   10657:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   1065c:	eb 1f                	jmp    1067d <mbedtls_sha256_finish+0xed>
   1065e:	66 90                	xchg   %ax,%ax
   10660:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10664:	0f 11 43 28          	movups %xmm0,0x28(%rbx)
   10668:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   1066f:	00 00 
   10671:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   10677:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   1067d:	8b 13                	mov    (%rbx),%edx
   1067f:	8b 43 04             	mov    0x4(%rbx),%eax
   10682:	4c 89 e6             	mov    %r12,%rsi
   10685:	48 89 df             	mov    %rbx,%rdi
   10688:	89 d1                	mov    %edx,%ecx
   1068a:	c1 e0 03             	shl    $0x3,%eax
   1068d:	c1 e9 1d             	shr    $0x1d,%ecx
   10690:	c1 e2 03             	shl    $0x3,%edx
   10693:	09 c8                	or     %ecx,%eax
   10695:	0f ca                	bswap  %edx
   10697:	89 53 64             	mov    %edx,0x64(%rbx)
   1069a:	0f c8                	bswap  %eax
   1069c:	89 43 60             	mov    %eax,0x60(%rbx)
   1069f:	e8 9c f1 ff ff       	callq  f840 <mbedtls_internal_sha256_process>
   106a4:	85 c0                	test   %eax,%eax
   106a6:	75 91                	jne    10639 <mbedtls_sha256_finish+0xa9>
   106a8:	8b 53 08             	mov    0x8(%rbx),%edx
   106ab:	0f ca                	bswap  %edx
   106ad:	89 55 00             	mov    %edx,0x0(%rbp)
   106b0:	8b 53 0c             	mov    0xc(%rbx),%edx
   106b3:	0f ca                	bswap  %edx
   106b5:	89 55 04             	mov    %edx,0x4(%rbp)
   106b8:	8b 53 10             	mov    0x10(%rbx),%edx
   106bb:	0f ca                	bswap  %edx
   106bd:	89 55 08             	mov    %edx,0x8(%rbp)
   106c0:	8b 53 14             	mov    0x14(%rbx),%edx
   106c3:	0f ca                	bswap  %edx
   106c5:	89 55 0c             	mov    %edx,0xc(%rbp)
   106c8:	8b 53 18             	mov    0x18(%rbx),%edx
   106cb:	0f ca                	bswap  %edx
   106cd:	89 55 10             	mov    %edx,0x10(%rbp)
   106d0:	8b 53 1c             	mov    0x1c(%rbx),%edx
   106d3:	0f ca                	bswap  %edx
   106d5:	89 55 14             	mov    %edx,0x14(%rbp)
   106d8:	8b 53 20             	mov    0x20(%rbx),%edx
   106db:	0f ca                	bswap  %edx
   106dd:	89 55 18             	mov    %edx,0x18(%rbp)
   106e0:	8b 53 68             	mov    0x68(%rbx),%edx
   106e3:	85 d2                	test   %edx,%edx
   106e5:	0f 85 4e ff ff ff    	jne    10639 <mbedtls_sha256_finish+0xa9>
   106eb:	8b 53 24             	mov    0x24(%rbx),%edx
   106ee:	5b                   	pop    %rbx
   106ef:	0f ca                	bswap  %edx
   106f1:	89 55 1c             	mov    %edx,0x1c(%rbp)
   106f4:	5d                   	pop    %rbp
   106f5:	41 5c                	pop    %r12
   106f7:	c3                   	retq   
   106f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   106ff:	00 
   10700:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   10706:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   1070d:	00 
   1070e:	e9 6a ff ff ff       	jmpq   1067d <mbedtls_sha256_finish+0xed>
   10713:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1071a:	00 00 00 00 
   1071e:	66 90                	xchg   %ax,%ax

0000000000010720 <mbedtls_sha256_common_self_test>:
   10720:	41 57                	push   %r15
   10722:	41 56                	push   %r14
   10724:	41 55                	push   %r13
   10726:	41 89 f5             	mov    %esi,%r13d
   10729:	41 54                	push   %r12
   1072b:	41 89 fc             	mov    %edi,%r12d
   1072e:	bf 00 04 00 00       	mov    $0x400,%edi
   10733:	55                   	push   %rbp
   10734:	48 8d 2d 05 34 01 00 	lea    0x13405(%rip),%rbp        # 23b40 <sha224_test_sum>
   1073b:	53                   	push   %rbx
   1073c:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   10743:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1074a:	00 00 
   1074c:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   10753:	00 
   10754:	31 c0                	xor    %eax,%eax
   10756:	85 f6                	test   %esi,%esi
   10758:	48 8d 05 81 33 01 00 	lea    0x13381(%rip),%rax        # 23ae0 <sha256_test_sum>
   1075f:	be 01 00 00 00       	mov    $0x1,%esi
   10764:	48 0f 44 e8          	cmove  %rax,%rbp
   10768:	e8 53 2b ff ff       	callq  32c0 <calloc@plt>
   1076d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10772:	48 85 c0             	test   %rax,%rax
   10775:	0f 84 a9 02 00 00    	je     10a24 <mbedtls_sha256_common_self_test+0x304>
   1077b:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   10780:	31 c0                	xor    %eax,%eax
   10782:	b9 0d 00 00 00       	mov    $0xd,%ecx
   10787:	31 db                	xor    %ebx,%ebx
   10789:	4c 89 f7             	mov    %r14,%rdi
   1078c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1078f:	b8 08 00 00 00       	mov    $0x8,%eax
   10794:	44 29 e8             	sub    %r13d,%eax
   10797:	89 c1                	mov    %eax,%ecx
   10799:	c1 e0 02             	shl    $0x2,%eax
   1079c:	c1 e1 05             	shl    $0x5,%ecx
   1079f:	48 89 04 24          	mov    %rax,(%rsp)
   107a3:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   107a7:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   107ad:	45 85 e4             	test   %r12d,%r12d
   107b0:	0f 85 ea 01 00 00    	jne    109a0 <mbedtls_sha256_common_self_test+0x280>
   107b6:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   107bd:	00 00 
   107bf:	45 85 ed             	test   %r13d,%r13d
   107c2:	0f 85 28 01 00 00    	jne    108f0 <mbedtls_sha256_common_self_test+0x1d0>
   107c8:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   107cf:	ae 67 bb 
   107d2:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
   107d9:	00 
   107da:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   107df:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   107e6:	f5 4f a5 
   107e9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   107ee:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   107f5:	68 05 9b 
   107f8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   107fd:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   10804:	cd e0 5b 
   10807:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1080c:	48 83 fb 02          	cmp    $0x2,%rbx
   10810:	0f 84 28 01 00 00    	je     1093e <mbedtls_sha256_common_self_test+0x21e>
   10816:	48 8d 05 83 33 01 00 	lea    0x13383(%rip),%rax        # 23ba0 <sha_test_buflen>
   1081d:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   10821:	48 85 d2             	test   %rdx,%rdx
   10824:	74 29                	je     1084f <mbedtls_sha256_common_self_test+0x12f>
   10826:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   1082d:	00 
   1082e:	4c 89 f7             	mov    %r14,%rdi
   10831:	48 29 d8             	sub    %rbx,%rax
   10834:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
   10838:	48 8d 05 81 33 01 00 	lea    0x13381(%rip),%rax        # 23bc0 <sha_test_buf>
   1083f:	48 01 c6             	add    %rax,%rsi
   10842:	e8 39 fb ff ff       	callq  10380 <mbedtls_sha256_update.part.0>
   10847:	85 c0                	test   %eax,%eax
   10849:	0f 85 3f 01 00 00    	jne    1098e <mbedtls_sha256_common_self_test+0x26e>
   1084f:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   10856:	00 
   10857:	4c 89 f7             	mov    %r14,%rdi
   1085a:	4c 89 fe             	mov    %r15,%rsi
   1085d:	e8 2e fd ff ff       	callq  10590 <mbedtls_sha256_finish>
   10862:	85 c0                	test   %eax,%eax
   10864:	0f 85 24 01 00 00    	jne    1098e <mbedtls_sha256_common_self_test+0x26e>
   1086a:	48 8b 14 24          	mov    (%rsp),%rdx
   1086e:	48 89 ee             	mov    %rbp,%rsi
   10871:	4c 89 ff             	mov    %r15,%rdi
   10874:	e8 27 2a ff ff       	callq  32a0 <memcmp@plt>
   10879:	85 c0                	test   %eax,%eax
   1087b:	0f 85 8f 01 00 00    	jne    10a10 <mbedtls_sha256_common_self_test+0x2f0>
   10881:	45 85 e4             	test   %r12d,%r12d
   10884:	0f 85 36 01 00 00    	jne    109c0 <mbedtls_sha256_common_self_test+0x2a0>
   1088a:	48 83 c3 01          	add    $0x1,%rbx
   1088e:	48 83 c5 20          	add    $0x20,%rbp
   10892:	48 83 fb 03          	cmp    $0x3,%rbx
   10896:	0f 85 11 ff ff ff    	jne    107ad <mbedtls_sha256_common_self_test+0x8d>
   1089c:	45 85 e4             	test   %r12d,%r12d
   1089f:	0f 85 33 01 00 00    	jne    109d8 <mbedtls_sha256_common_self_test+0x2b8>
   108a5:	be 6c 00 00 00       	mov    $0x6c,%esi
   108aa:	4c 89 f7             	mov    %r14,%rdi
   108ad:	45 89 e5             	mov    %r12d,%r13d
   108b0:	e8 7b 49 ff ff       	callq  5230 <mbedtls_platform_zeroize>
   108b5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   108ba:	e8 21 29 ff ff       	callq  31e0 <free@plt>
   108bf:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   108c6:	00 
   108c7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   108ce:	00 00 
   108d0:	0f 85 6e 01 00 00    	jne    10a44 <mbedtls_sha256_common_self_test+0x324>
   108d6:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   108dd:	44 89 e8             	mov    %r13d,%eax
   108e0:	5b                   	pop    %rbx
   108e1:	5d                   	pop    %rbp
   108e2:	41 5c                	pop    %r12
   108e4:	41 5d                	pop    %r13
   108e6:	41 5e                	pop    %r14
   108e8:	41 5f                	pop    %r15
   108ea:	c3                   	retq   
   108eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   108f0:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   108f7:	d5 7c 36 
   108fa:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
   10901:	00 
   10902:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10907:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   1090e:	59 0e f7 
   10911:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10916:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   1091d:	15 58 68 
   10920:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10925:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   1092c:	4f fa be 
   1092f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   10934:	48 83 fb 02          	cmp    $0x2,%rbx
   10938:	0f 85 d8 fe ff ff    	jne    10816 <mbedtls_sha256_common_self_test+0xf6>
   1093e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   10943:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   10948:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1094d:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   10954:	61 61 61 
   10957:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1095c:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   10962:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10965:	eb 13                	jmp    1097a <mbedtls_sha256_common_self_test+0x25a>
   10967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1096e:	00 00 
   10970:	41 83 ef 01          	sub    $0x1,%r15d
   10974:	0f 84 a0 00 00 00    	je     10a1a <mbedtls_sha256_common_self_test+0x2fa>
   1097a:	ba e8 03 00 00       	mov    $0x3e8,%edx
   1097f:	48 89 de             	mov    %rbx,%rsi
   10982:	4c 89 f7             	mov    %r14,%rdi
   10985:	e8 f6 f9 ff ff       	callq  10380 <mbedtls_sha256_update.part.0>
   1098a:	85 c0                	test   %eax,%eax
   1098c:	74 e2                	je     10970 <mbedtls_sha256_common_self_test+0x250>
   1098e:	89 c2                	mov    %eax,%edx
   10990:	45 85 e4             	test   %r12d,%r12d
   10993:	75 5b                	jne    109f0 <mbedtls_sha256_common_self_test+0x2d0>
   10995:	41 89 d4             	mov    %edx,%r12d
   10998:	e9 08 ff ff ff       	jmpq   108a5 <mbedtls_sha256_common_self_test+0x185>
   1099d:	0f 1f 00             	nopl   (%rax)
   109a0:	8b 54 24 14          	mov    0x14(%rsp),%edx
   109a4:	8d 4b 01             	lea    0x1(%rbx),%ecx
   109a7:	48 8d 35 16 31 01 00 	lea    0x13116(%rip),%rsi        # 23ac4 <sha1_test_buf+0xc4>
   109ae:	31 c0                	xor    %eax,%eax
   109b0:	bf 01 00 00 00       	mov    $0x1,%edi
   109b5:	e8 86 29 ff ff       	callq  3340 <__printf_chk@plt>
   109ba:	e9 f7 fd ff ff       	jmpq   107b6 <mbedtls_sha256_common_self_test+0x96>
   109bf:	90                   	nop
   109c0:	48 8d 3d 1b 28 01 00 	lea    0x1281b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   109c7:	e8 34 28 ff ff       	callq  3200 <puts@plt>
   109cc:	e9 b9 fe ff ff       	jmpq   1088a <mbedtls_sha256_common_self_test+0x16a>
   109d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   109d8:	bf 0a 00 00 00       	mov    $0xa,%edi
   109dd:	45 31 e4             	xor    %r12d,%r12d
   109e0:	e8 0b 28 ff ff       	callq  31f0 <putchar@plt>
   109e5:	e9 bb fe ff ff       	jmpq   108a5 <mbedtls_sha256_common_self_test+0x185>
   109ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   109f0:	48 8d 3d c6 30 01 00 	lea    0x130c6(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   109f7:	89 14 24             	mov    %edx,(%rsp)
   109fa:	e8 01 28 ff ff       	callq  3200 <puts@plt>
   109ff:	8b 14 24             	mov    (%rsp),%edx
   10a02:	41 89 d4             	mov    %edx,%r12d
   10a05:	e9 9b fe ff ff       	jmpq   108a5 <mbedtls_sha256_common_self_test+0x185>
   10a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10a10:	ba 01 00 00 00       	mov    $0x1,%edx
   10a15:	e9 76 ff ff ff       	jmpq   10990 <mbedtls_sha256_common_self_test+0x270>
   10a1a:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   10a1f:	e9 2b fe ff ff       	jmpq   1084f <mbedtls_sha256_common_self_test+0x12f>
   10a24:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   10a2a:	45 85 e4             	test   %r12d,%r12d
   10a2d:	0f 84 8c fe ff ff    	je     108bf <mbedtls_sha256_common_self_test+0x19f>
   10a33:	48 8d 3d 71 30 01 00 	lea    0x13071(%rip),%rdi        # 23aab <sha1_test_buf+0xab>
   10a3a:	e8 c1 27 ff ff       	callq  3200 <puts@plt>
   10a3f:	e9 7b fe ff ff       	jmpq   108bf <mbedtls_sha256_common_self_test+0x19f>
   10a44:	e8 17 28 ff ff       	callq  3260 <__stack_chk_fail@plt>
   10a49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010a50 <mbedtls_sha256>:
   10a50:	f3 0f 1e fa          	endbr64 
   10a54:	41 55                	push   %r13
   10a56:	41 54                	push   %r12
   10a58:	55                   	push   %rbp
   10a59:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   10a5d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10a64:	00 00 
   10a66:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   10a6b:	31 c0                	xor    %eax,%eax
   10a6d:	83 f9 01             	cmp    $0x1,%ecx
   10a70:	0f 87 12 01 00 00    	ja     10b88 <mbedtls_sha256+0x138>
   10a76:	49 89 f0             	mov    %rsi,%r8
   10a79:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   10a7e:	49 89 f9             	mov    %rdi,%r9
   10a81:	49 89 d5             	mov    %rdx,%r13
   10a84:	48 89 f7             	mov    %rsi,%rdi
   10a87:	89 ca                	mov    %ecx,%edx
   10a89:	b9 0c 00 00 00       	mov    $0xc,%ecx
   10a8e:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   10a95:	00 
   10a96:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10a99:	85 d2                	test   %edx,%edx
   10a9b:	0f 84 9f 00 00 00    	je     10b40 <mbedtls_sha256+0xf0>
   10aa1:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   10aa8:	d5 7c 36 
   10aab:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10ab0:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   10ab7:	59 0e f7 
   10aba:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10abf:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   10ac6:	15 58 68 
   10ac9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10ace:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   10ad5:	4f fa be 
   10ad8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   10add:	89 54 24 68          	mov    %edx,0x68(%rsp)
   10ae1:	48 89 e5             	mov    %rsp,%rbp
   10ae4:	4d 85 c0             	test   %r8,%r8
   10ae7:	74 15                	je     10afe <mbedtls_sha256+0xae>
   10ae9:	4c 89 c2             	mov    %r8,%rdx
   10aec:	4c 89 ce             	mov    %r9,%rsi
   10aef:	48 89 ef             	mov    %rbp,%rdi
   10af2:	e8 89 f8 ff ff       	callq  10380 <mbedtls_sha256_update.part.0>
   10af7:	41 89 c4             	mov    %eax,%r12d
   10afa:	85 c0                	test   %eax,%eax
   10afc:	75 0e                	jne    10b0c <mbedtls_sha256+0xbc>
   10afe:	4c 89 ee             	mov    %r13,%rsi
   10b01:	48 89 ef             	mov    %rbp,%rdi
   10b04:	e8 87 fa ff ff       	callq  10590 <mbedtls_sha256_finish>
   10b09:	41 89 c4             	mov    %eax,%r12d
   10b0c:	be 6c 00 00 00       	mov    $0x6c,%esi
   10b11:	48 89 ef             	mov    %rbp,%rdi
   10b14:	e8 17 47 ff ff       	callq  5230 <mbedtls_platform_zeroize>
   10b19:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   10b1e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10b25:	00 00 
   10b27:	75 67                	jne    10b90 <mbedtls_sha256+0x140>
   10b29:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   10b2d:	44 89 e0             	mov    %r12d,%eax
   10b30:	5d                   	pop    %rbp
   10b31:	41 5c                	pop    %r12
   10b33:	41 5d                	pop    %r13
   10b35:	c3                   	retq   
   10b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10b3d:	00 00 00 
   10b40:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   10b47:	ae 67 bb 
   10b4a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10b4f:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   10b56:	f5 4f a5 
   10b59:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10b5e:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   10b65:	68 05 9b 
   10b68:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10b6d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   10b74:	cd e0 5b 
   10b77:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   10b7c:	e9 5c ff ff ff       	jmpq   10add <mbedtls_sha256+0x8d>
   10b81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b88:	41 bc 8c ff ff ff    	mov    $0xffffff8c,%r12d
   10b8e:	eb 89                	jmp    10b19 <mbedtls_sha256+0xc9>
   10b90:	e8 cb 26 ff ff       	callq  3260 <__stack_chk_fail@plt>
   10b95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10b9c:	00 00 00 00 

0000000000010ba0 <mbedtls_sha256_self_test>:
   10ba0:	f3 0f 1e fa          	endbr64 
   10ba4:	31 f6                	xor    %esi,%esi
   10ba6:	e9 75 fb ff ff       	jmpq   10720 <mbedtls_sha256_common_self_test>
   10bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010bb0 <mbedtls_sha224_self_test>:
   10bb0:	f3 0f 1e fa          	endbr64 
   10bb4:	be 01 00 00 00       	mov    $0x1,%esi
   10bb9:	e9 62 fb ff ff       	jmpq   10720 <mbedtls_sha256_common_self_test>
   10bbe:	66 90                	xchg   %ax,%ax

0000000000010bc0 <mbedtls_sha512_init>:
   10bc0:	f3 0f 1e fa          	endbr64 
   10bc4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   10bcb:	48 89 f9             	mov    %rdi,%rcx
   10bce:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   10bd2:	31 c0                	xor    %eax,%eax
   10bd4:	48 c7 87 c8 00 00 00 	movq   $0x0,0xc8(%rdi)
   10bdb:	00 00 00 00 
   10bdf:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   10be3:	48 29 f9             	sub    %rdi,%rcx
   10be6:	81 c1 d8 00 00 00    	add    $0xd8,%ecx
   10bec:	c1 e9 03             	shr    $0x3,%ecx
   10bef:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10bf2:	c3                   	retq   
   10bf3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10bfa:	00 00 00 00 
   10bfe:	66 90                	xchg   %ax,%ax

0000000000010c00 <mbedtls_sha512_free>:
   10c00:	f3 0f 1e fa          	endbr64 
   10c04:	48 85 ff             	test   %rdi,%rdi
   10c07:	74 0f                	je     10c18 <mbedtls_sha512_free+0x18>
   10c09:	be d8 00 00 00       	mov    $0xd8,%esi
   10c0e:	e9 1d 46 ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
   10c13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c18:	c3                   	retq   
   10c19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010c20 <mbedtls_sha512_clone>:
   10c20:	f3 0f 1e fa          	endbr64 
   10c24:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   10c28:	0f 11 07             	movups %xmm0,(%rdi)
   10c2b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   10c30:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   10c34:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   10c39:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   10c3d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   10c42:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   10c46:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   10c4b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   10c4f:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   10c54:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
   10c58:	f3 0f 6f 76 60       	movdqu 0x60(%rsi),%xmm6
   10c5d:	0f 11 77 60          	movups %xmm6,0x60(%rdi)
   10c61:	f3 0f 6f 7e 70       	movdqu 0x70(%rsi),%xmm7
   10c66:	0f 11 7f 70          	movups %xmm7,0x70(%rdi)
   10c6a:	f3 0f 6f 86 80 00 00 	movdqu 0x80(%rsi),%xmm0
   10c71:	00 
   10c72:	0f 11 87 80 00 00 00 	movups %xmm0,0x80(%rdi)
   10c79:	f3 0f 6f 8e 90 00 00 	movdqu 0x90(%rsi),%xmm1
   10c80:	00 
   10c81:	0f 11 8f 90 00 00 00 	movups %xmm1,0x90(%rdi)
   10c88:	f3 0f 6f 96 a0 00 00 	movdqu 0xa0(%rsi),%xmm2
   10c8f:	00 
   10c90:	0f 11 97 a0 00 00 00 	movups %xmm2,0xa0(%rdi)
   10c97:	f3 0f 6f 9e b0 00 00 	movdqu 0xb0(%rsi),%xmm3
   10c9e:	00 
   10c9f:	0f 11 9f b0 00 00 00 	movups %xmm3,0xb0(%rdi)
   10ca6:	f3 0f 6f a6 c0 00 00 	movdqu 0xc0(%rsi),%xmm4
   10cad:	00 
   10cae:	0f 11 a7 c0 00 00 00 	movups %xmm4,0xc0(%rdi)
   10cb5:	48 8b 86 d0 00 00 00 	mov    0xd0(%rsi),%rax
   10cbc:	48 89 87 d0 00 00 00 	mov    %rax,0xd0(%rdi)
   10cc3:	c3                   	retq   
   10cc4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10ccb:	00 00 00 00 
   10ccf:	90                   	nop

0000000000010cd0 <mbedtls_sha512_starts>:
   10cd0:	f3 0f 1e fa          	endbr64 
   10cd4:	83 fe 01             	cmp    $0x1,%esi
   10cd7:	0f 87 13 01 00 00    	ja     10df0 <mbedtls_sha512_starts+0x120>
   10cdd:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   10ce4:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   10ceb:	00 
   10cec:	85 f6                	test   %esi,%esi
   10cee:	0f 84 7c 00 00 00    	je     10d70 <mbedtls_sha512_starts+0xa0>
   10cf4:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   10cfb:	9d bb cb 
   10cfe:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   10d04:	48 89 47 10          	mov    %rax,0x10(%rdi)
   10d08:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   10d0f:	29 9a 62 
   10d12:	48 89 47 18          	mov    %rax,0x18(%rdi)
   10d16:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   10d1d:	01 59 91 
   10d20:	48 89 47 20          	mov    %rax,0x20(%rdi)
   10d24:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   10d2b:	ec 2f 15 
   10d2e:	48 89 47 28          	mov    %rax,0x28(%rdi)
   10d32:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   10d39:	26 33 67 
   10d3c:	48 89 47 30          	mov    %rax,0x30(%rdi)
   10d40:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   10d47:	4a b4 8e 
   10d4a:	48 89 47 38          	mov    %rax,0x38(%rdi)
   10d4e:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   10d55:	2e 0c db 
   10d58:	48 89 47 40          	mov    %rax,0x40(%rdi)
   10d5c:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   10d63:	48 b5 47 
   10d66:	48 89 47 48          	mov    %rax,0x48(%rdi)
   10d6a:	31 c0                	xor    %eax,%eax
   10d6c:	c3                   	retq   
   10d6d:	0f 1f 00             	nopl   (%rax)
   10d70:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   10d77:	e6 09 6a 
   10d7a:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   10d80:	48 89 47 10          	mov    %rax,0x10(%rdi)
   10d84:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   10d8b:	ae 67 bb 
   10d8e:	48 89 47 18          	mov    %rax,0x18(%rdi)
   10d92:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   10d99:	f3 6e 3c 
   10d9c:	48 89 47 20          	mov    %rax,0x20(%rdi)
   10da0:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   10da7:	f5 4f a5 
   10daa:	48 89 47 28          	mov    %rax,0x28(%rdi)
   10dae:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   10db5:	52 0e 51 
   10db8:	48 89 47 30          	mov    %rax,0x30(%rdi)
   10dbc:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   10dc3:	68 05 9b 
   10dc6:	48 89 47 38          	mov    %rax,0x38(%rdi)
   10dca:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   10dd1:	d9 83 1f 
   10dd4:	48 89 47 40          	mov    %rax,0x40(%rdi)
   10dd8:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   10ddf:	cd e0 5b 
   10de2:	48 89 47 48          	mov    %rax,0x48(%rdi)
   10de6:	31 c0                	xor    %eax,%eax
   10de8:	c3                   	retq   
   10de9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10df0:	b8 8b ff ff ff       	mov    $0xffffff8b,%eax
   10df5:	c3                   	retq   
   10df6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10dfd:	00 00 00 

0000000000010e00 <mbedtls_internal_sha512_process>:
   10e00:	f3 0f 1e fa          	endbr64 
   10e04:	41 57                	push   %r15
   10e06:	48 89 f9             	mov    %rdi,%rcx
   10e09:	41 56                	push   %r14
   10e0b:	41 55                	push   %r13
   10e0d:	41 54                	push   %r12
   10e0f:	55                   	push   %rbp
   10e10:	53                   	push   %rbx
   10e11:	48 81 ec 28 03 00 00 	sub    $0x328,%rsp
   10e18:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   10e1d:	48 8d 9c 24 d0 02 00 	lea    0x2d0(%rsp),%rbx
   10e24:	00 
   10e25:	48 89 df             	mov    %rbx,%rdi
   10e28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10e2f:	00 00 
   10e31:	48 89 84 24 18 03 00 	mov    %rax,0x318(%rsp)
   10e38:	00 
   10e39:	31 c0                	xor    %eax,%eax
   10e3b:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   10e40:	48 8b 54 01 10       	mov    0x10(%rcx,%rax,1),%rdx
   10e45:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   10e49:	48 83 c0 08          	add    $0x8,%rax
   10e4d:	48 83 f8 40          	cmp    $0x40,%rax
   10e51:	75 ed                	jne    10e40 <mbedtls_internal_sha512_process+0x40>
   10e53:	31 c0                	xor    %eax,%eax
   10e55:	4c 8d 54 24 50       	lea    0x50(%rsp),%r10
   10e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10e60:	48 8b 14 06          	mov    (%rsi,%rax,1),%rdx
   10e64:	48 0f ca             	bswap  %rdx
   10e67:	49 89 14 02          	mov    %rdx,(%r10,%rax,1)
   10e6b:	48 83 c0 08          	add    $0x8,%rax
   10e6f:	48 3d 80 00 00 00    	cmp    $0x80,%rax
   10e75:	75 e9                	jne    10e60 <mbedtls_internal_sha512_process+0x60>
   10e77:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   10e7e:	00 
   10e7f:	4c 89 d1             	mov    %r10,%rcx
   10e82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10e88:	48 8b 41 70          	mov    0x70(%rcx),%rax
   10e8c:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   10e90:	48 83 c1 08          	add    $0x8,%rcx
   10e94:	48 89 c2             	mov    %rax,%rdx
   10e97:	49 89 c0             	mov    %rax,%r8
   10e9a:	48 c1 e8 06          	shr    $0x6,%rax
   10e9e:	49 c1 c0 03          	rol    $0x3,%r8
   10ea2:	48 c1 ca 13          	ror    $0x13,%rdx
   10ea6:	4c 31 c2             	xor    %r8,%rdx
   10ea9:	49 89 f0             	mov    %rsi,%r8
   10eac:	48 31 c2             	xor    %rax,%rdx
   10eaf:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
   10eb3:	48 03 41 40          	add    0x40(%rcx),%rax
   10eb7:	49 c1 c8 08          	ror    $0x8,%r8
   10ebb:	48 01 c2             	add    %rax,%rdx
   10ebe:	48 89 f0             	mov    %rsi,%rax
   10ec1:	48 c1 ee 07          	shr    $0x7,%rsi
   10ec5:	48 d1 c8             	ror    %rax
   10ec8:	4c 31 c0             	xor    %r8,%rax
   10ecb:	48 31 f0             	xor    %rsi,%rax
   10ece:	48 01 d0             	add    %rdx,%rax
   10ed1:	48 89 41 78          	mov    %rax,0x78(%rcx)
   10ed5:	48 39 cf             	cmp    %rcx,%rdi
   10ed8:	75 ae                	jne    10e88 <mbedtls_internal_sha512_process+0x88>
   10eda:	48 8b 8c 24 d8 02 00 	mov    0x2d8(%rsp),%rcx
   10ee1:	00 
   10ee2:	48 8b 94 24 e0 02 00 	mov    0x2e0(%rsp),%rdx
   10ee9:	00 
   10eea:	49 bf 18 81 6d da d5 	movabs $0xab1c5ed5da6d8118,%r15
   10ef1:	5e 1c ab 
   10ef4:	48 8d 1d c5 31 01 00 	lea    0x131c5(%rip),%rbx        # 240c0 <K+0x40>
   10efb:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   10f00:	4c 8b 8c 24 08 03 00 	mov    0x308(%rsp),%r9
   10f07:	00 
   10f08:	49 bf 9b 4f 19 af a4 	movabs $0x923f82a4af194f9b,%r15
   10f0f:	82 3f 92 
   10f12:	48 bd 2f 3b 4d ec cf 	movabs $0xb5c0fbcfec4d3b2f,%rbp
   10f19:	fb c0 b5 
   10f1c:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   10f21:	4c 8b 84 24 f0 02 00 	mov    0x2f0(%rsp),%r8
   10f28:	00 
   10f29:	49 bf 19 d0 05 b6 f1 	movabs $0x59f111f1b605d019,%r15
   10f30:	11 f1 59 
   10f33:	49 bd cd 65 ef 23 91 	movabs $0x7137449123ef65cd,%r13
   10f3a:	44 37 71 
   10f3d:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   10f42:	48 8b bc 24 00 03 00 	mov    0x300(%rsp),%rdi
   10f49:	00 
   10f4a:	49 bf 38 b5 48 f3 5b 	movabs $0x3956c25bf348b538,%r15
   10f51:	c2 56 39 
   10f54:	49 bc 22 ae 28 d7 98 	movabs $0x428a2f98d728ae22,%r12
   10f5b:	2f 8a 42 
   10f5e:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   10f63:	48 8b b4 24 f8 02 00 	mov    0x2f8(%rsp),%rsi
   10f6a:	00 
   10f6b:	49 89 d6             	mov    %rdx,%r14
   10f6e:	49 bf bc db 89 81 a5 	movabs $0xe9b5dba58189dbbc,%r15
   10f75:	db b5 e9 
   10f78:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   10f7d:	4c 8b 9c 24 d0 02 00 	mov    0x2d0(%rsp),%r11
   10f84:	00 
   10f85:	49 89 df             	mov    %rbx,%r15
   10f88:	48 89 cb             	mov    %rcx,%rbx
   10f8b:	48 8b 84 24 e8 02 00 	mov    0x2e8(%rsp),%rax
   10f92:	00 
   10f93:	eb 3f                	jmp    10fd4 <mbedtls_internal_sha512_process+0x1d4>
   10f95:	0f 1f 00             	nopl   (%rax)
   10f98:	49 8b 4f 18          	mov    0x18(%r15),%rcx
   10f9c:	4d 8b 27             	mov    (%r15),%r12
   10f9f:	49 83 c7 40          	add    $0x40,%r15
   10fa3:	4d 8b 6f c8          	mov    -0x38(%r15),%r13
   10fa7:	49 8b 6f d0          	mov    -0x30(%r15),%rbp
   10fab:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   10fb0:	49 8b 4f e0          	mov    -0x20(%r15),%rcx
   10fb4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   10fb9:	49 8b 4f e8          	mov    -0x18(%r15),%rcx
   10fbd:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   10fc2:	49 8b 4f f0          	mov    -0x10(%r15),%rcx
   10fc6:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   10fcb:	49 8b 4f f8          	mov    -0x8(%r15),%rcx
   10fcf:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   10fd4:	4c 89 c1             	mov    %r8,%rcx
   10fd7:	4c 89 c2             	mov    %r8,%rdx
   10fda:	48 c1 c9 0e          	ror    $0xe,%rcx
   10fde:	48 c1 ca 12          	ror    $0x12,%rdx
   10fe2:	48 31 ca             	xor    %rcx,%rdx
   10fe5:	4c 89 c1             	mov    %r8,%rcx
   10fe8:	48 c1 c1 17          	rol    $0x17,%rcx
   10fec:	48 31 ca             	xor    %rcx,%rdx
   10fef:	48 89 f9             	mov    %rdi,%rcx
   10ff2:	48 31 f1             	xor    %rsi,%rcx
   10ff5:	4c 21 c1             	and    %r8,%rcx
   10ff8:	48 31 f9             	xor    %rdi,%rcx
   10ffb:	49 03 7a 08          	add    0x8(%r10),%rdi
   10fff:	48 01 d1             	add    %rdx,%rcx
   11002:	49 03 0a             	add    (%r10),%rcx
   11005:	4c 89 da             	mov    %r11,%rdx
   11008:	49 01 c9             	add    %rcx,%r9
   1100b:	48 c1 c2 1e          	rol    $0x1e,%rdx
   1100f:	4b 8d 0c 21          	lea    (%r9,%r12,1),%rcx
   11013:	4d 89 d9             	mov    %r11,%r9
   11016:	4d 89 dc             	mov    %r11,%r12
   11019:	49 c1 c9 1c          	ror    $0x1c,%r9
   1101d:	49 21 dc             	and    %rbx,%r12
   11020:	48 01 c8             	add    %rcx,%rax
   11023:	4c 31 ca             	xor    %r9,%rdx
   11026:	4d 89 d9             	mov    %r11,%r9
   11029:	49 c1 c1 19          	rol    $0x19,%r9
   1102d:	4c 31 ca             	xor    %r9,%rdx
   11030:	4d 89 d9             	mov    %r11,%r9
   11033:	49 09 d9             	or     %rbx,%r9
   11036:	4d 21 f1             	and    %r14,%r9
   11039:	4d 09 e1             	or     %r12,%r9
   1103c:	49 01 d1             	add    %rdx,%r9
   1103f:	48 89 c2             	mov    %rax,%rdx
   11042:	49 01 c9             	add    %rcx,%r9
   11045:	4c 89 c1             	mov    %r8,%rcx
   11048:	48 c1 ca 12          	ror    $0x12,%rdx
   1104c:	48 31 f1             	xor    %rsi,%rcx
   1104f:	48 21 c1             	and    %rax,%rcx
   11052:	48 31 f1             	xor    %rsi,%rcx
   11055:	48 01 cf             	add    %rcx,%rdi
   11058:	48 89 c1             	mov    %rax,%rcx
   1105b:	48 c1 c9 0e          	ror    $0xe,%rcx
   1105f:	48 31 ca             	xor    %rcx,%rdx
   11062:	48 89 c1             	mov    %rax,%rcx
   11065:	48 c1 c1 17          	rol    $0x17,%rcx
   11069:	48 31 ca             	xor    %rcx,%rdx
   1106c:	4c 89 c9             	mov    %r9,%rcx
   1106f:	49 03 72 10          	add    0x10(%r10),%rsi
   11073:	48 01 fa             	add    %rdi,%rdx
   11076:	48 c1 c1 1e          	rol    $0x1e,%rcx
   1107a:	4c 89 cf             	mov    %r9,%rdi
   1107d:	49 01 d5             	add    %rdx,%r13
   11080:	4c 89 ca             	mov    %r9,%rdx
   11083:	4c 21 df             	and    %r11,%rdi
   11086:	48 c1 ca 1c          	ror    $0x1c,%rdx
   1108a:	4d 01 ee             	add    %r13,%r14
   1108d:	48 31 d1             	xor    %rdx,%rcx
   11090:	4c 89 ca             	mov    %r9,%rdx
   11093:	48 c1 c2 19          	rol    $0x19,%rdx
   11097:	48 31 d1             	xor    %rdx,%rcx
   1109a:	4c 89 ca             	mov    %r9,%rdx
   1109d:	4c 09 da             	or     %r11,%rdx
   110a0:	48 21 da             	and    %rbx,%rdx
   110a3:	48 09 fa             	or     %rdi,%rdx
   110a6:	4c 89 c7             	mov    %r8,%rdi
   110a9:	48 31 c7             	xor    %rax,%rdi
   110ac:	48 01 ca             	add    %rcx,%rdx
   110af:	4c 89 f1             	mov    %r14,%rcx
   110b2:	4c 21 f7             	and    %r14,%rdi
   110b5:	48 c1 c9 12          	ror    $0x12,%rcx
   110b9:	4c 01 ea             	add    %r13,%rdx
   110bc:	4c 31 c7             	xor    %r8,%rdi
   110bf:	48 01 fe             	add    %rdi,%rsi
   110c2:	4c 89 f7             	mov    %r14,%rdi
   110c5:	48 c1 cf 0e          	ror    $0xe,%rdi
   110c9:	48 31 f9             	xor    %rdi,%rcx
   110cc:	4c 89 f7             	mov    %r14,%rdi
   110cf:	48 c1 c7 17          	rol    $0x17,%rdi
   110d3:	48 31 f9             	xor    %rdi,%rcx
   110d6:	4c 89 cf             	mov    %r9,%rdi
   110d9:	48 01 f1             	add    %rsi,%rcx
   110dc:	48 89 d6             	mov    %rdx,%rsi
   110df:	48 01 cd             	add    %rcx,%rbp
   110e2:	48 89 d1             	mov    %rdx,%rcx
   110e5:	48 c1 c6 1e          	rol    $0x1e,%rsi
   110e9:	48 c1 c9 1c          	ror    $0x1c,%rcx
   110ed:	48 01 eb             	add    %rbp,%rbx
   110f0:	48 31 ce             	xor    %rcx,%rsi
   110f3:	48 89 d1             	mov    %rdx,%rcx
   110f6:	48 c1 c1 19          	rol    $0x19,%rcx
   110fa:	48 31 ce             	xor    %rcx,%rsi
   110fd:	4c 89 c9             	mov    %r9,%rcx
   11100:	48 21 d7             	and    %rdx,%rdi
   11103:	4d 03 42 18          	add    0x18(%r10),%r8
   11107:	48 09 d1             	or     %rdx,%rcx
   1110a:	4c 21 d9             	and    %r11,%rcx
   1110d:	48 09 f9             	or     %rdi,%rcx
   11110:	48 89 c7             	mov    %rax,%rdi
   11113:	4c 31 f7             	xor    %r14,%rdi
   11116:	48 01 f1             	add    %rsi,%rcx
   11119:	48 89 de             	mov    %rbx,%rsi
   1111c:	48 21 df             	and    %rbx,%rdi
   1111f:	48 c1 ce 12          	ror    $0x12,%rsi
   11123:	48 01 e9             	add    %rbp,%rcx
   11126:	48 89 d5             	mov    %rdx,%rbp
   11129:	48 31 c7             	xor    %rax,%rdi
   1112c:	48 21 cd             	and    %rcx,%rbp
   1112f:	4c 01 c7             	add    %r8,%rdi
   11132:	49 89 d8             	mov    %rbx,%r8
   11135:	49 c1 c8 0e          	ror    $0xe,%r8
   11139:	4c 31 c6             	xor    %r8,%rsi
   1113c:	49 89 d8             	mov    %rbx,%r8
   1113f:	49 c1 c0 17          	rol    $0x17,%r8
   11143:	4c 31 c6             	xor    %r8,%rsi
   11146:	49 89 c8             	mov    %rcx,%r8
   11149:	48 01 fe             	add    %rdi,%rsi
   1114c:	48 89 cf             	mov    %rcx,%rdi
   1114f:	49 c1 c8 1c          	ror    $0x1c,%r8
   11153:	48 03 74 24 08       	add    0x8(%rsp),%rsi
   11158:	48 c1 c7 1e          	rol    $0x1e,%rdi
   1115c:	49 01 f3             	add    %rsi,%r11
   1115f:	4c 31 c7             	xor    %r8,%rdi
   11162:	49 89 c8             	mov    %rcx,%r8
   11165:	49 c1 c0 19          	rol    $0x19,%r8
   11169:	4c 31 c7             	xor    %r8,%rdi
   1116c:	49 89 d0             	mov    %rdx,%r8
   1116f:	49 09 c8             	or     %rcx,%r8
   11172:	4d 21 c8             	and    %r9,%r8
   11175:	49 09 e8             	or     %rbp,%r8
   11178:	48 89 cd             	mov    %rcx,%rbp
   1117b:	49 01 f8             	add    %rdi,%r8
   1117e:	4c 89 f7             	mov    %r14,%rdi
   11181:	48 31 df             	xor    %rbx,%rdi
   11184:	49 01 f0             	add    %rsi,%r8
   11187:	4c 89 de             	mov    %r11,%rsi
   1118a:	4c 21 df             	and    %r11,%rdi
   1118d:	49 03 42 20          	add    0x20(%r10),%rax
   11191:	48 c1 ce 0e          	ror    $0xe,%rsi
   11195:	4c 21 c5             	and    %r8,%rbp
   11198:	4c 31 f7             	xor    %r14,%rdi
   1119b:	4d 03 72 28          	add    0x28(%r10),%r14
   1119f:	48 01 c7             	add    %rax,%rdi
   111a2:	4c 89 d8             	mov    %r11,%rax
   111a5:	48 c1 c8 12          	ror    $0x12,%rax
   111a9:	48 31 f0             	xor    %rsi,%rax
   111ac:	4c 89 de             	mov    %r11,%rsi
   111af:	48 c1 c6 17          	rol    $0x17,%rsi
   111b3:	48 31 f0             	xor    %rsi,%rax
   111b6:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   111bb:	48 01 f8             	add    %rdi,%rax
   111be:	4c 89 c7             	mov    %r8,%rdi
   111c1:	48 01 c6             	add    %rax,%rsi
   111c4:	4c 89 c0             	mov    %r8,%rax
   111c7:	48 c1 cf 1c          	ror    $0x1c,%rdi
   111cb:	48 c1 c0 1e          	rol    $0x1e,%rax
   111cf:	49 01 f1             	add    %rsi,%r9
   111d2:	48 31 c7             	xor    %rax,%rdi
   111d5:	4c 89 c0             	mov    %r8,%rax
   111d8:	48 c1 c0 19          	rol    $0x19,%rax
   111dc:	48 31 c7             	xor    %rax,%rdi
   111df:	48 89 c8             	mov    %rcx,%rax
   111e2:	4c 09 c0             	or     %r8,%rax
   111e5:	48 21 d0             	and    %rdx,%rax
   111e8:	48 09 e8             	or     %rbp,%rax
   111eb:	4c 89 c5             	mov    %r8,%rbp
   111ee:	48 01 f8             	add    %rdi,%rax
   111f1:	4c 89 cf             	mov    %r9,%rdi
   111f4:	48 01 f0             	add    %rsi,%rax
   111f7:	48 89 de             	mov    %rbx,%rsi
   111fa:	48 c1 cf 12          	ror    $0x12,%rdi
   111fe:	4c 31 de             	xor    %r11,%rsi
   11201:	4c 21 ce             	and    %r9,%rsi
   11204:	48 31 de             	xor    %rbx,%rsi
   11207:	49 01 f6             	add    %rsi,%r14
   1120a:	4c 89 ce             	mov    %r9,%rsi
   1120d:	48 c1 ce 0e          	ror    $0xe,%rsi
   11211:	48 31 fe             	xor    %rdi,%rsi
   11214:	4c 89 cf             	mov    %r9,%rdi
   11217:	48 c1 c7 17          	rol    $0x17,%rdi
   1121b:	48 31 fe             	xor    %rdi,%rsi
   1121e:	48 21 c5             	and    %rax,%rbp
   11221:	49 03 5a 30          	add    0x30(%r10),%rbx
   11225:	49 01 f6             	add    %rsi,%r14
   11228:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1122d:	4c 01 f6             	add    %r14,%rsi
   11230:	49 89 c6             	mov    %rax,%r14
   11233:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   11237:	48 89 c2             	mov    %rax,%rdx
   1123a:	49 c1 c6 1e          	rol    $0x1e,%r14
   1123e:	48 c1 ca 1c          	ror    $0x1c,%rdx
   11242:	4c 31 f2             	xor    %r14,%rdx
   11245:	49 89 c6             	mov    %rax,%r14
   11248:	49 c1 c6 19          	rol    $0x19,%r14
   1124c:	4c 31 f2             	xor    %r14,%rdx
   1124f:	4d 89 c6             	mov    %r8,%r14
   11252:	49 09 c6             	or     %rax,%r14
   11255:	49 21 ce             	and    %rcx,%r14
   11258:	49 09 ee             	or     %rbp,%r14
   1125b:	48 89 c5             	mov    %rax,%rbp
   1125e:	49 01 d6             	add    %rdx,%r14
   11261:	4c 89 da             	mov    %r11,%rdx
   11264:	4c 31 ca             	xor    %r9,%rdx
   11267:	49 01 f6             	add    %rsi,%r14
   1126a:	48 89 fe             	mov    %rdi,%rsi
   1126d:	48 21 fa             	and    %rdi,%rdx
   11270:	48 c1 ce 12          	ror    $0x12,%rsi
   11274:	4c 31 da             	xor    %r11,%rdx
   11277:	48 01 d3             	add    %rdx,%rbx
   1127a:	48 89 fa             	mov    %rdi,%rdx
   1127d:	48 c1 ca 0e          	ror    $0xe,%rdx
   11281:	48 31 f2             	xor    %rsi,%rdx
   11284:	48 89 fe             	mov    %rdi,%rsi
   11287:	48 c1 c6 17          	rol    $0x17,%rsi
   1128b:	48 31 f2             	xor    %rsi,%rdx
   1128e:	48 01 da             	add    %rbx,%rdx
   11291:	48 03 54 24 20       	add    0x20(%rsp),%rdx
   11296:	4c 89 f3             	mov    %r14,%rbx
   11299:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
   1129d:	4c 89 f1             	mov    %r14,%rcx
   112a0:	48 c1 cb 1c          	ror    $0x1c,%rbx
   112a4:	48 c1 c1 1e          	rol    $0x1e,%rcx
   112a8:	48 31 cb             	xor    %rcx,%rbx
   112ab:	4c 89 f1             	mov    %r14,%rcx
   112ae:	48 c1 c1 19          	rol    $0x19,%rcx
   112b2:	48 31 cb             	xor    %rcx,%rbx
   112b5:	48 89 c1             	mov    %rax,%rcx
   112b8:	4c 09 f1             	or     %r14,%rcx
   112bb:	4c 21 c1             	and    %r8,%rcx
   112be:	4c 21 f5             	and    %r14,%rbp
   112c1:	4d 03 5a 38          	add    0x38(%r10),%r11
   112c5:	49 83 c2 40          	add    $0x40,%r10
   112c9:	48 09 e9             	or     %rbp,%rcx
   112cc:	4c 89 cd             	mov    %r9,%rbp
   112cf:	48 31 fd             	xor    %rdi,%rbp
   112d2:	48 01 cb             	add    %rcx,%rbx
   112d5:	4c 89 f1             	mov    %r14,%rcx
   112d8:	48 21 f5             	and    %rsi,%rbp
   112db:	48 01 d3             	add    %rdx,%rbx
   112de:	48 89 f2             	mov    %rsi,%rdx
   112e1:	4c 31 cd             	xor    %r9,%rbp
   112e4:	48 c1 ca 12          	ror    $0x12,%rdx
   112e8:	49 89 dc             	mov    %rbx,%r12
   112eb:	48 21 d9             	and    %rbx,%rcx
   112ee:	49 01 eb             	add    %rbp,%r11
   112f1:	48 89 f5             	mov    %rsi,%rbp
   112f4:	49 c1 cc 1c          	ror    $0x1c,%r12
   112f8:	48 c1 cd 0e          	ror    $0xe,%rbp
   112fc:	48 31 d5             	xor    %rdx,%rbp
   112ff:	48 89 f2             	mov    %rsi,%rdx
   11302:	48 c1 c2 17          	rol    $0x17,%rdx
   11306:	48 31 d5             	xor    %rdx,%rbp
   11309:	48 89 da             	mov    %rbx,%rdx
   1130c:	48 c1 c2 1e          	rol    $0x1e,%rdx
   11310:	4c 01 dd             	add    %r11,%rbp
   11313:	48 03 6c 24 28       	add    0x28(%rsp),%rbp
   11318:	49 31 d4             	xor    %rdx,%r12
   1131b:	48 89 da             	mov    %rbx,%rdx
   1131e:	49 01 e8             	add    %rbp,%r8
   11321:	48 c1 c2 19          	rol    $0x19,%rdx
   11325:	4c 31 e2             	xor    %r12,%rdx
   11328:	4d 89 f4             	mov    %r14,%r12
   1132b:	49 09 dc             	or     %rbx,%r12
   1132e:	49 21 c4             	and    %rax,%r12
   11331:	49 09 cc             	or     %rcx,%r12
   11334:	48 8d 0d c5 2f 01 00 	lea    0x12fc5(%rip),%rcx        # 24300 <K+0x280>
   1133b:	49 01 d4             	add    %rdx,%r12
   1133e:	4e 8d 5c 25 00       	lea    0x0(%rbp,%r12,1),%r11
   11343:	4c 39 f9             	cmp    %r15,%rcx
   11346:	0f 85 4c fc ff ff    	jne    10f98 <mbedtls_internal_sha512_process+0x198>
   1134c:	48 89 84 24 e8 02 00 	mov    %rax,0x2e8(%rsp)
   11353:	00 
   11354:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   11359:	31 c0                	xor    %eax,%eax
   1135b:	4c 89 8c 24 08 03 00 	mov    %r9,0x308(%rsp)
   11362:	00 
   11363:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   11368:	4c 89 84 24 f0 02 00 	mov    %r8,0x2f0(%rsp)
   1136f:	00 
   11370:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
   11377:	00 
   11378:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
   1137f:	00 
   11380:	4c 89 9c 24 d0 02 00 	mov    %r11,0x2d0(%rsp)
   11387:	00 
   11388:	48 89 9c 24 d8 02 00 	mov    %rbx,0x2d8(%rsp)
   1138f:	00 
   11390:	4c 89 b4 24 e0 02 00 	mov    %r14,0x2e0(%rsp)
   11397:	00 
   11398:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1139d:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   113a2:	eb 08                	jmp    113ac <mbedtls_internal_sha512_process+0x5ac>
   113a4:	0f 1f 40 00          	nopl   0x0(%rax)
   113a8:	4c 8b 1c 01          	mov    (%rcx,%rax,1),%r11
   113ac:	4c 01 5c 02 10       	add    %r11,0x10(%rdx,%rax,1)
   113b1:	48 83 c0 08          	add    $0x8,%rax
   113b5:	48 83 f8 40          	cmp    $0x40,%rax
   113b9:	75 ed                	jne    113a8 <mbedtls_internal_sha512_process+0x5a8>
   113bb:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   113c0:	be d0 02 00 00       	mov    $0x2d0,%esi
   113c5:	e8 66 3e ff ff       	callq  5230 <mbedtls_platform_zeroize>
   113ca:	48 8b 84 24 18 03 00 	mov    0x318(%rsp),%rax
   113d1:	00 
   113d2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   113d9:	00 00 
   113db:	75 14                	jne    113f1 <mbedtls_internal_sha512_process+0x5f1>
   113dd:	48 81 c4 28 03 00 00 	add    $0x328,%rsp
   113e4:	31 c0                	xor    %eax,%eax
   113e6:	5b                   	pop    %rbx
   113e7:	5d                   	pop    %rbp
   113e8:	41 5c                	pop    %r12
   113ea:	41 5d                	pop    %r13
   113ec:	41 5e                	pop    %r14
   113ee:	41 5f                	pop    %r15
   113f0:	c3                   	retq   
   113f1:	e8 6a 1e ff ff       	callq  3260 <__stack_chk_fail@plt>
   113f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   113fd:	00 00 00 

0000000000011400 <mbedtls_sha512_update.part.0>:
   11400:	41 56                	push   %r14
   11402:	41 55                	push   %r13
   11404:	49 89 d5             	mov    %rdx,%r13
   11407:	ba 80 00 00 00       	mov    $0x80,%edx
   1140c:	41 54                	push   %r12
   1140e:	49 89 fc             	mov    %rdi,%r12
   11411:	55                   	push   %rbp
   11412:	48 89 f5             	mov    %rsi,%rbp
   11415:	53                   	push   %rbx
   11416:	48 8b 07             	mov    (%rdi),%rax
   11419:	41 89 c6             	mov    %eax,%r14d
   1141c:	41 83 e6 7f          	and    $0x7f,%r14d
   11420:	44 29 f2             	sub    %r14d,%edx
   11423:	4c 01 e8             	add    %r13,%rax
   11426:	48 89 07             	mov    %rax,(%rdi)
   11429:	89 d3                	mov    %edx,%ebx
   1142b:	73 05                	jae    11432 <mbedtls_sha512_update.part.0+0x32>
   1142d:	48 83 47 08 01       	addq   $0x1,0x8(%rdi)
   11432:	45 85 f6             	test   %r14d,%r14d
   11435:	74 05                	je     1143c <mbedtls_sha512_update.part.0+0x3c>
   11437:	4c 39 eb             	cmp    %r13,%rbx
   1143a:	76 6e                	jbe    114aa <mbedtls_sha512_update.part.0+0xaa>
   1143c:	31 db                	xor    %ebx,%ebx
   1143e:	49 83 fd 7f          	cmp    $0x7f,%r13
   11442:	0f 86 3e 01 00 00    	jbe    11586 <mbedtls_sha512_update.part.0+0x186>
   11448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1144f:	00 
   11450:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   11455:	4c 89 e7             	mov    %r12,%rdi
   11458:	e8 a3 f9 ff ff       	callq  10e00 <mbedtls_internal_sha512_process>
   1145d:	85 c0                	test   %eax,%eax
   1145f:	75 37                	jne    11498 <mbedtls_sha512_update.part.0+0x98>
   11461:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
   11465:	4c 89 e8             	mov    %r13,%rax
   11468:	48 29 d8             	sub    %rbx,%rax
   1146b:	48 83 f8 7f          	cmp    $0x7f,%rax
   1146f:	77 df                	ja     11450 <mbedtls_sha512_update.part.0+0x50>
   11471:	48 83 fb 7f          	cmp    $0x7f,%rbx
   11475:	76 21                	jbe    11498 <mbedtls_sha512_update.part.0+0x98>
   11477:	48 01 dd             	add    %rbx,%rbp
   1147a:	45 31 c0             	xor    %r8d,%r8d
   1147d:	48 85 c0             	test   %rax,%rax
   11480:	0f 85 9c 00 00 00    	jne    11522 <mbedtls_sha512_update.part.0+0x122>
   11486:	5b                   	pop    %rbx
   11487:	44 89 c0             	mov    %r8d,%eax
   1148a:	5d                   	pop    %rbp
   1148b:	41 5c                	pop    %r12
   1148d:	41 5d                	pop    %r13
   1148f:	41 5e                	pop    %r14
   11491:	c3                   	retq   
   11492:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11498:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   1149e:	5b                   	pop    %rbx
   1149f:	5d                   	pop    %rbp
   114a0:	44 89 c0             	mov    %r8d,%eax
   114a3:	41 5c                	pop    %r12
   114a5:	41 5d                	pop    %r13
   114a7:	41 5e                	pop    %r14
   114a9:	c3                   	retq   
   114aa:	4d 8d 44 24 50       	lea    0x50(%r12),%r8
   114af:	44 89 f1             	mov    %r14d,%ecx
   114b2:	4c 01 c1             	add    %r8,%rcx
   114b5:	83 fa 08             	cmp    $0x8,%edx
   114b8:	73 3c                	jae    114f6 <mbedtls_sha512_update.part.0+0xf6>
   114ba:	f6 c2 04             	test   $0x4,%dl
   114bd:	0f 85 cb 00 00 00    	jne    1158e <mbedtls_sha512_update.part.0+0x18e>
   114c3:	85 d2                	test   %edx,%edx
   114c5:	74 0f                	je     114d6 <mbedtls_sha512_update.part.0+0xd6>
   114c7:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   114cb:	83 e2 02             	and    $0x2,%edx
   114ce:	88 01                	mov    %al,(%rcx)
   114d0:	0f 85 d9 00 00 00    	jne    115af <mbedtls_sha512_update.part.0+0x1af>
   114d6:	4c 89 c6             	mov    %r8,%rsi
   114d9:	4c 89 e7             	mov    %r12,%rdi
   114dc:	e8 1f f9 ff ff       	callq  10e00 <mbedtls_internal_sha512_process>
   114e1:	41 89 c0             	mov    %eax,%r8d
   114e4:	85 c0                	test   %eax,%eax
   114e6:	75 9e                	jne    11486 <mbedtls_sha512_update.part.0+0x86>
   114e8:	48 01 dd             	add    %rbx,%rbp
   114eb:	49 29 dd             	sub    %rbx,%r13
   114ee:	45 31 f6             	xor    %r14d,%r14d
   114f1:	e9 46 ff ff ff       	jmpq   1143c <mbedtls_sha512_update.part.0+0x3c>
   114f6:	48 8b 45 00          	mov    0x0(%rbp),%rax
   114fa:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   114fe:	48 89 ee             	mov    %rbp,%rsi
   11501:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11505:	48 89 01             	mov    %rax,(%rcx)
   11508:	48 8b 44 1d f8       	mov    -0x8(%rbp,%rbx,1),%rax
   1150d:	48 89 44 19 f8       	mov    %rax,-0x8(%rcx,%rbx,1)
   11512:	48 29 f9             	sub    %rdi,%rcx
   11515:	48 29 ce             	sub    %rcx,%rsi
   11518:	01 d1                	add    %edx,%ecx
   1151a:	c1 e9 03             	shr    $0x3,%ecx
   1151d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11520:	eb b4                	jmp    114d6 <mbedtls_sha512_update.part.0+0xd6>
   11522:	4b 8d 4c 34 50       	lea    0x50(%r12,%r14,1),%rcx
   11527:	89 c2                	mov    %eax,%edx
   11529:	83 f8 08             	cmp    $0x8,%eax
   1152c:	73 25                	jae    11553 <mbedtls_sha512_update.part.0+0x153>
   1152e:	a8 04                	test   $0x4,%al
   11530:	75 6e                	jne    115a0 <mbedtls_sha512_update.part.0+0x1a0>
   11532:	85 d2                	test   %edx,%edx
   11534:	74 15                	je     1154b <mbedtls_sha512_update.part.0+0x14b>
   11536:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1153a:	88 01                	mov    %al,(%rcx)
   1153c:	f6 c2 02             	test   $0x2,%dl
   1153f:	74 0a                	je     1154b <mbedtls_sha512_update.part.0+0x14b>
   11541:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   11546:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   1154b:	45 31 c0             	xor    %r8d,%r8d
   1154e:	e9 33 ff ff ff       	jmpq   11486 <mbedtls_sha512_update.part.0+0x86>
   11553:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   11557:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   1155b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1155f:	48 89 11             	mov    %rdx,(%rcx)
   11562:	89 c2                	mov    %eax,%edx
   11564:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   11569:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   1156e:	48 29 f9             	sub    %rdi,%rcx
   11571:	48 89 ee             	mov    %rbp,%rsi
   11574:	48 89 ca             	mov    %rcx,%rdx
   11577:	48 29 ce             	sub    %rcx,%rsi
   1157a:	01 c2                	add    %eax,%edx
   1157c:	c1 ea 03             	shr    $0x3,%edx
   1157f:	89 d1                	mov    %edx,%ecx
   11581:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11584:	eb c5                	jmp    1154b <mbedtls_sha512_update.part.0+0x14b>
   11586:	4c 89 e8             	mov    %r13,%rax
   11589:	e9 ec fe ff ff       	jmpq   1147a <mbedtls_sha512_update.part.0+0x7a>
   1158e:	8b 45 00             	mov    0x0(%rbp),%eax
   11591:	89 01                	mov    %eax,(%rcx)
   11593:	8b 44 1d fc          	mov    -0x4(%rbp,%rbx,1),%eax
   11597:	89 44 19 fc          	mov    %eax,-0x4(%rcx,%rbx,1)
   1159b:	e9 36 ff ff ff       	jmpq   114d6 <mbedtls_sha512_update.part.0+0xd6>
   115a0:	8b 45 00             	mov    0x0(%rbp),%eax
   115a3:	89 01                	mov    %eax,(%rcx)
   115a5:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   115a9:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   115ad:	eb 9c                	jmp    1154b <mbedtls_sha512_update.part.0+0x14b>
   115af:	0f b7 44 1d fe       	movzwl -0x2(%rbp,%rbx,1),%eax
   115b4:	66 89 44 19 fe       	mov    %ax,-0x2(%rcx,%rbx,1)
   115b9:	e9 18 ff ff ff       	jmpq   114d6 <mbedtls_sha512_update.part.0+0xd6>
   115be:	66 90                	xchg   %ax,%ax

00000000000115c0 <mbedtls_sha512_update>:
   115c0:	f3 0f 1e fa          	endbr64 
   115c4:	48 85 d2             	test   %rdx,%rdx
   115c7:	74 07                	je     115d0 <mbedtls_sha512_update+0x10>
   115c9:	e9 32 fe ff ff       	jmpq   11400 <mbedtls_sha512_update.part.0>
   115ce:	66 90                	xchg   %ax,%ax
   115d0:	31 c0                	xor    %eax,%eax
   115d2:	c3                   	retq   
   115d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   115da:	00 00 00 00 
   115de:	66 90                	xchg   %ax,%ax

00000000000115e0 <mbedtls_sha512_finish>:
   115e0:	f3 0f 1e fa          	endbr64 
   115e4:	41 54                	push   %r12
   115e6:	4c 8d 67 50          	lea    0x50(%rdi),%r12
   115ea:	55                   	push   %rbp
   115eb:	48 89 f5             	mov    %rsi,%rbp
   115ee:	53                   	push   %rbx
   115ef:	8b 07                	mov    (%rdi),%eax
   115f1:	48 89 fb             	mov    %rdi,%rbx
   115f4:	83 e0 7f             	and    $0x7f,%eax
   115f7:	8d 48 01             	lea    0x1(%rax),%ecx
   115fa:	c6 44 07 50 80       	movb   $0x80,0x50(%rdi,%rax,1)
   115ff:	89 c8                	mov    %ecx,%eax
   11601:	4c 01 e0             	add    %r12,%rax
   11604:	83 f9 70             	cmp    $0x70,%ecx
   11607:	0f 87 d3 00 00 00    	ja     116e0 <mbedtls_sha512_finish+0x100>
   1160d:	ba 70 00 00 00       	mov    $0x70,%edx
   11612:	29 ca                	sub    %ecx,%edx
   11614:	83 fa 08             	cmp    $0x8,%edx
   11617:	0f 82 73 01 00 00    	jb     11790 <mbedtls_sha512_finish+0x1b0>
   1161d:	48 8d 78 08          	lea    0x8(%rax),%rdi
   11621:	89 d1                	mov    %edx,%ecx
   11623:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1162a:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   11631:	00 00 
   11633:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11637:	48 29 f8             	sub    %rdi,%rax
   1163a:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
   1163d:	31 c0                	xor    %eax,%eax
   1163f:	c1 e9 03             	shr    $0x3,%ecx
   11642:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11645:	48 8b 13             	mov    (%rbx),%rdx
   11648:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1164c:	4c 89 e6             	mov    %r12,%rsi
   1164f:	48 89 df             	mov    %rbx,%rdi
   11652:	48 89 d1             	mov    %rdx,%rcx
   11655:	48 c1 e0 03          	shl    $0x3,%rax
   11659:	48 c1 e9 3d          	shr    $0x3d,%rcx
   1165d:	48 c1 e2 03          	shl    $0x3,%rdx
   11661:	48 09 c8             	or     %rcx,%rax
   11664:	48 0f ca             	bswap  %rdx
   11667:	48 89 93 c8 00 00 00 	mov    %rdx,0xc8(%rbx)
   1166e:	48 0f c8             	bswap  %rax
   11671:	48 89 83 c0 00 00 00 	mov    %rax,0xc0(%rbx)
   11678:	e8 83 f7 ff ff       	callq  10e00 <mbedtls_internal_sha512_process>
   1167d:	85 c0                	test   %eax,%eax
   1167f:	75 50                	jne    116d1 <mbedtls_sha512_finish+0xf1>
   11681:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   11685:	48 0f ca             	bswap  %rdx
   11688:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   1168c:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   11690:	48 0f ca             	bswap  %rdx
   11693:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   11697:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   1169b:	48 0f ca             	bswap  %rdx
   1169e:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   116a2:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   116a6:	48 0f ca             	bswap  %rdx
   116a9:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   116ad:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   116b1:	48 0f ca             	bswap  %rdx
   116b4:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   116b8:	48 8b 53 38          	mov    0x38(%rbx),%rdx
   116bc:	48 0f ca             	bswap  %rdx
   116bf:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   116c3:	8b 93 d0 00 00 00    	mov    0xd0(%rbx),%edx
   116c9:	85 d2                	test   %edx,%edx
   116cb:	0f 84 e7 00 00 00    	je     117b8 <mbedtls_sha512_finish+0x1d8>
   116d1:	5b                   	pop    %rbx
   116d2:	5d                   	pop    %rbp
   116d3:	41 5c                	pop    %r12
   116d5:	c3                   	retq   
   116d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   116dd:	00 00 00 
   116e0:	ba 80 00 00 00       	mov    $0x80,%edx
   116e5:	31 ff                	xor    %edi,%edi
   116e7:	29 ca                	sub    %ecx,%edx
   116e9:	83 fa 08             	cmp    $0x8,%edx
   116ec:	0f 82 7e 00 00 00    	jb     11770 <mbedtls_sha512_finish+0x190>
   116f2:	89 d1                	mov    %edx,%ecx
   116f4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   116fb:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   11702:	00 00 
   11704:	48 8d 48 08          	lea    0x8(%rax),%rcx
   11708:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   1170c:	48 29 c8             	sub    %rcx,%rax
   1170f:	01 c2                	add    %eax,%edx
   11711:	83 e2 f8             	and    $0xfffffff8,%edx
   11714:	83 fa 08             	cmp    $0x8,%edx
   11717:	72 12                	jb     1172b <mbedtls_sha512_finish+0x14b>
   11719:	83 e2 f8             	and    $0xfffffff8,%edx
   1171c:	31 c0                	xor    %eax,%eax
   1171e:	89 c6                	mov    %eax,%esi
   11720:	83 c0 08             	add    $0x8,%eax
   11723:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   11727:	39 d0                	cmp    %edx,%eax
   11729:	72 f3                	jb     1171e <mbedtls_sha512_finish+0x13e>
   1172b:	4c 89 e6             	mov    %r12,%rsi
   1172e:	48 89 df             	mov    %rbx,%rdi
   11731:	e8 ca f6 ff ff       	callq  10e00 <mbedtls_internal_sha512_process>
   11736:	85 c0                	test   %eax,%eax
   11738:	75 97                	jne    116d1 <mbedtls_sha512_finish+0xf1>
   1173a:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
   1173f:	4c 89 e1             	mov    %r12,%rcx
   11742:	31 c0                	xor    %eax,%eax
   11744:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
   1174b:	00 
   1174c:	49 c7 44 24 68 00 00 	movq   $0x0,0x68(%r12)
   11753:	00 00 
   11755:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11759:	48 29 f9             	sub    %rdi,%rcx
   1175c:	83 c1 70             	add    $0x70,%ecx
   1175f:	c1 e9 03             	shr    $0x3,%ecx
   11762:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11765:	e9 db fe ff ff       	jmpq   11645 <mbedtls_sha512_finish+0x65>
   1176a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11770:	f6 c2 04             	test   $0x4,%dl
   11773:	75 63                	jne    117d8 <mbedtls_sha512_finish+0x1f8>
   11775:	85 d2                	test   %edx,%edx
   11777:	74 b2                	je     1172b <mbedtls_sha512_finish+0x14b>
   11779:	c6 00 00             	movb   $0x0,(%rax)
   1177c:	f6 c2 02             	test   $0x2,%dl
   1177f:	74 aa                	je     1172b <mbedtls_sha512_finish+0x14b>
   11781:	31 c9                	xor    %ecx,%ecx
   11783:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   11788:	eb a1                	jmp    1172b <mbedtls_sha512_finish+0x14b>
   1178a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11790:	f6 c2 04             	test   $0x4,%dl
   11793:	75 5b                	jne    117f0 <mbedtls_sha512_finish+0x210>
   11795:	85 d2                	test   %edx,%edx
   11797:	0f 84 a8 fe ff ff    	je     11645 <mbedtls_sha512_finish+0x65>
   1179d:	c6 00 00             	movb   $0x0,(%rax)
   117a0:	f6 c2 02             	test   $0x2,%dl
   117a3:	0f 84 9c fe ff ff    	je     11645 <mbedtls_sha512_finish+0x65>
   117a9:	31 f6                	xor    %esi,%esi
   117ab:	66 89 74 10 fe       	mov    %si,-0x2(%rax,%rdx,1)
   117b0:	e9 90 fe ff ff       	jmpq   11645 <mbedtls_sha512_finish+0x65>
   117b5:	0f 1f 00             	nopl   (%rax)
   117b8:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   117bc:	48 0f ca             	bswap  %rdx
   117bf:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   117c3:	48 8b 53 48          	mov    0x48(%rbx),%rdx
   117c7:	5b                   	pop    %rbx
   117c8:	48 0f ca             	bswap  %rdx
   117cb:	48 89 55 38          	mov    %rdx,0x38(%rbp)
   117cf:	5d                   	pop    %rbp
   117d0:	41 5c                	pop    %r12
   117d2:	c3                   	retq   
   117d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   117d8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   117de:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   117e5:	00 
   117e6:	e9 40 ff ff ff       	jmpq   1172b <mbedtls_sha512_finish+0x14b>
   117eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   117f0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   117f6:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   117fd:	00 
   117fe:	e9 42 fe ff ff       	jmpq   11645 <mbedtls_sha512_finish+0x65>
   11803:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1180a:	00 00 00 00 
   1180e:	66 90                	xchg   %ax,%ax

0000000000011810 <mbedtls_sha512_common_self_test>:
   11810:	41 57                	push   %r15
   11812:	41 56                	push   %r14
   11814:	41 55                	push   %r13
   11816:	41 89 f5             	mov    %esi,%r13d
   11819:	41 54                	push   %r12
   1181b:	41 89 fc             	mov    %edi,%r12d
   1181e:	bf 00 04 00 00       	mov    $0x400,%edi
   11823:	55                   	push   %rbp
   11824:	48 8d 2d 15 26 01 00 	lea    0x12615(%rip),%rbp        # 23e40 <sha384_test_sum>
   1182b:	53                   	push   %rbx
   1182c:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   11833:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1183a:	00 00 
   1183c:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   11843:	00 
   11844:	31 c0                	xor    %eax,%eax
   11846:	85 f6                	test   %esi,%esi
   11848:	48 8d 05 31 25 01 00 	lea    0x12531(%rip),%rax        # 23d80 <sha512_test_sum>
   1184f:	be 01 00 00 00       	mov    $0x1,%esi
   11854:	48 0f 44 e8          	cmove  %rax,%rbp
   11858:	e8 63 1a ff ff       	callq  32c0 <calloc@plt>
   1185d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11862:	48 85 c0             	test   %rax,%rax
   11865:	0f 84 19 03 00 00    	je     11b84 <mbedtls_sha512_common_self_test+0x374>
   1186b:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   11870:	31 c0                	xor    %eax,%eax
   11872:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   11877:	31 db                	xor    %ebx,%ebx
   11879:	4c 89 f7             	mov    %r14,%rdi
   1187c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1187f:	b8 04 00 00 00       	mov    $0x4,%eax
   11884:	44 29 e8             	sub    %r13d,%eax
   11887:	89 c1                	mov    %eax,%ecx
   11889:	c1 e0 04             	shl    $0x4,%eax
   1188c:	c1 e1 07             	shl    $0x7,%ecx
   1188f:	48 89 04 24          	mov    %rax,(%rsp)
   11893:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   11897:	45 85 e4             	test   %r12d,%r12d
   1189a:	0f 85 58 02 00 00    	jne    11af8 <mbedtls_sha512_common_self_test+0x2e8>
   118a0:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   118a7:	00 00 
   118a9:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   118b0:	00 00 
   118b2:	45 85 ed             	test   %r13d,%r13d
   118b5:	0f 85 55 01 00 00    	jne    11a10 <mbedtls_sha512_common_self_test+0x200>
   118bb:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   118c2:	e6 09 6a 
   118c5:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   118cc:	00 
   118cd:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   118d2:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   118d9:	ae 67 bb 
   118dc:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   118e1:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   118e8:	f3 6e 3c 
   118eb:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   118f0:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   118f7:	f5 4f a5 
   118fa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   118ff:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   11906:	52 0e 51 
   11909:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1190e:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   11915:	68 05 9b 
   11918:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1191d:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   11924:	d9 83 1f 
   11927:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1192c:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   11933:	cd e0 5b 
   11936:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1193b:	48 83 fb 02          	cmp    $0x2,%rbx
   1193f:	0f 84 55 01 00 00    	je     11a9a <mbedtls_sha512_common_self_test+0x28a>
   11945:	48 8d 05 b4 25 01 00 	lea    0x125b4(%rip),%rax        # 23f00 <sha_test_buflen>
   1194c:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   11950:	48 85 d2             	test   %rdx,%rdx
   11953:	74 1e                	je     11973 <mbedtls_sha512_common_self_test+0x163>
   11955:	48 6b f3 71          	imul   $0x71,%rbx,%rsi
   11959:	48 8d 05 c0 25 01 00 	lea    0x125c0(%rip),%rax        # 23f20 <sha_test_buf>
   11960:	4c 89 f7             	mov    %r14,%rdi
   11963:	48 01 c6             	add    %rax,%rsi
   11966:	e8 95 fa ff ff       	callq  11400 <mbedtls_sha512_update.part.0>
   1196b:	85 c0                	test   %eax,%eax
   1196d:	0f 85 73 01 00 00    	jne    11ae6 <mbedtls_sha512_common_self_test+0x2d6>
   11973:	4c 8d bc 24 00 01 00 	lea    0x100(%rsp),%r15
   1197a:	00 
   1197b:	4c 89 f7             	mov    %r14,%rdi
   1197e:	4c 89 fe             	mov    %r15,%rsi
   11981:	e8 5a fc ff ff       	callq  115e0 <mbedtls_sha512_finish>
   11986:	85 c0                	test   %eax,%eax
   11988:	0f 85 58 01 00 00    	jne    11ae6 <mbedtls_sha512_common_self_test+0x2d6>
   1198e:	48 8b 14 24          	mov    (%rsp),%rdx
   11992:	48 89 ee             	mov    %rbp,%rsi
   11995:	4c 89 ff             	mov    %r15,%rdi
   11998:	e8 03 19 ff ff       	callq  32a0 <memcmp@plt>
   1199d:	85 c0                	test   %eax,%eax
   1199f:	0f 85 cb 01 00 00    	jne    11b70 <mbedtls_sha512_common_self_test+0x360>
   119a5:	45 85 e4             	test   %r12d,%r12d
   119a8:	0f 85 72 01 00 00    	jne    11b20 <mbedtls_sha512_common_self_test+0x310>
   119ae:	48 83 c3 01          	add    $0x1,%rbx
   119b2:	48 83 c5 40          	add    $0x40,%rbp
   119b6:	48 83 fb 03          	cmp    $0x3,%rbx
   119ba:	0f 85 d7 fe ff ff    	jne    11897 <mbedtls_sha512_common_self_test+0x87>
   119c0:	45 85 e4             	test   %r12d,%r12d
   119c3:	0f 85 6f 01 00 00    	jne    11b38 <mbedtls_sha512_common_self_test+0x328>
   119c9:	be d8 00 00 00       	mov    $0xd8,%esi
   119ce:	4c 89 f7             	mov    %r14,%rdi
   119d1:	45 89 e5             	mov    %r12d,%r13d
   119d4:	e8 57 38 ff ff       	callq  5230 <mbedtls_platform_zeroize>
   119d9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   119de:	e8 fd 17 ff ff       	callq  31e0 <free@plt>
   119e3:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   119ea:	00 
   119eb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   119f2:	00 00 
   119f4:	0f 85 aa 01 00 00    	jne    11ba4 <mbedtls_sha512_common_self_test+0x394>
   119fa:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   11a01:	44 89 e8             	mov    %r13d,%eax
   11a04:	5b                   	pop    %rbx
   11a05:	5d                   	pop    %rbp
   11a06:	41 5c                	pop    %r12
   11a08:	41 5d                	pop    %r13
   11a0a:	41 5e                	pop    %r14
   11a0c:	41 5f                	pop    %r15
   11a0e:	c3                   	retq   
   11a0f:	90                   	nop
   11a10:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   11a17:	9d bb cb 
   11a1a:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   11a21:	00 
   11a22:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   11a27:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   11a2e:	29 9a 62 
   11a31:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11a36:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   11a3d:	01 59 91 
   11a40:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   11a45:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   11a4c:	ec 2f 15 
   11a4f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   11a54:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   11a5b:	26 33 67 
   11a5e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   11a63:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   11a6a:	4a b4 8e 
   11a6d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   11a72:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   11a79:	2e 0c db 
   11a7c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   11a81:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   11a88:	48 b5 47 
   11a8b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   11a90:	48 83 fb 02          	cmp    $0x2,%rbx
   11a94:	0f 85 ab fe ff ff    	jne    11945 <mbedtls_sha512_common_self_test+0x135>
   11a9a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   11a9f:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   11aa4:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   11aa9:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   11ab0:	61 61 61 
   11ab3:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   11ab8:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   11abe:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11ac1:	eb 0f                	jmp    11ad2 <mbedtls_sha512_common_self_test+0x2c2>
   11ac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11ac8:	41 83 ef 01          	sub    $0x1,%r15d
   11acc:	0f 84 a8 00 00 00    	je     11b7a <mbedtls_sha512_common_self_test+0x36a>
   11ad2:	ba e8 03 00 00       	mov    $0x3e8,%edx
   11ad7:	48 89 de             	mov    %rbx,%rsi
   11ada:	4c 89 f7             	mov    %r14,%rdi
   11add:	e8 1e f9 ff ff       	callq  11400 <mbedtls_sha512_update.part.0>
   11ae2:	85 c0                	test   %eax,%eax
   11ae4:	74 e2                	je     11ac8 <mbedtls_sha512_common_self_test+0x2b8>
   11ae6:	89 c2                	mov    %eax,%edx
   11ae8:	45 85 e4             	test   %r12d,%r12d
   11aeb:	75 63                	jne    11b50 <mbedtls_sha512_common_self_test+0x340>
   11aed:	41 89 d4             	mov    %edx,%r12d
   11af0:	e9 d4 fe ff ff       	jmpq   119c9 <mbedtls_sha512_common_self_test+0x1b9>
   11af5:	0f 1f 00             	nopl   (%rax)
   11af8:	8b 54 24 14          	mov    0x14(%rsp),%edx
   11afc:	8d 4b 01             	lea    0x1(%rbx),%ecx
   11aff:	48 8d 35 be 1f 01 00 	lea    0x11fbe(%rip),%rsi        # 23ac4 <sha1_test_buf+0xc4>
   11b06:	31 c0                	xor    %eax,%eax
   11b08:	bf 01 00 00 00       	mov    $0x1,%edi
   11b0d:	e8 2e 18 ff ff       	callq  3340 <__printf_chk@plt>
   11b12:	e9 89 fd ff ff       	jmpq   118a0 <mbedtls_sha512_common_self_test+0x90>
   11b17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11b1e:	00 00 
   11b20:	48 8d 3d bb 16 01 00 	lea    0x116bb(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   11b27:	e8 d4 16 ff ff       	callq  3200 <puts@plt>
   11b2c:	e9 7d fe ff ff       	jmpq   119ae <mbedtls_sha512_common_self_test+0x19e>
   11b31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b38:	bf 0a 00 00 00       	mov    $0xa,%edi
   11b3d:	45 31 e4             	xor    %r12d,%r12d
   11b40:	e8 ab 16 ff ff       	callq  31f0 <putchar@plt>
   11b45:	e9 7f fe ff ff       	jmpq   119c9 <mbedtls_sha512_common_self_test+0x1b9>
   11b4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11b50:	48 8d 3d 66 1f 01 00 	lea    0x11f66(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   11b57:	89 14 24             	mov    %edx,(%rsp)
   11b5a:	e8 a1 16 ff ff       	callq  3200 <puts@plt>
   11b5f:	8b 14 24             	mov    (%rsp),%edx
   11b62:	41 89 d4             	mov    %edx,%r12d
   11b65:	e9 5f fe ff ff       	jmpq   119c9 <mbedtls_sha512_common_self_test+0x1b9>
   11b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11b70:	ba 01 00 00 00       	mov    $0x1,%edx
   11b75:	e9 6e ff ff ff       	jmpq   11ae8 <mbedtls_sha512_common_self_test+0x2d8>
   11b7a:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   11b7f:	e9 ef fd ff ff       	jmpq   11973 <mbedtls_sha512_common_self_test+0x163>
   11b84:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   11b8a:	45 85 e4             	test   %r12d,%r12d
   11b8d:	0f 84 50 fe ff ff    	je     119e3 <mbedtls_sha512_common_self_test+0x1d3>
   11b93:	48 8d 3d 11 1f 01 00 	lea    0x11f11(%rip),%rdi        # 23aab <sha1_test_buf+0xab>
   11b9a:	e8 61 16 ff ff       	callq  3200 <puts@plt>
   11b9f:	e9 3f fe ff ff       	jmpq   119e3 <mbedtls_sha512_common_self_test+0x1d3>
   11ba4:	e8 b7 16 ff ff       	callq  3260 <__stack_chk_fail@plt>
   11ba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011bb0 <mbedtls_sha512>:
   11bb0:	f3 0f 1e fa          	endbr64 
   11bb4:	41 55                	push   %r13
   11bb6:	41 54                	push   %r12
   11bb8:	55                   	push   %rbp
   11bb9:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   11bc0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11bc7:	00 00 
   11bc9:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   11bd0:	00 
   11bd1:	31 c0                	xor    %eax,%eax
   11bd3:	83 f9 01             	cmp    $0x1,%ecx
   11bd6:	0f 87 94 01 00 00    	ja     11d70 <mbedtls_sha512+0x1c0>
   11bdc:	49 89 f0             	mov    %rsi,%r8
   11bdf:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   11be4:	49 89 f9             	mov    %rdi,%r9
   11be7:	49 89 d5             	mov    %rdx,%r13
   11bea:	48 89 f7             	mov    %rsi,%rdi
   11bed:	89 ca                	mov    %ecx,%edx
   11bef:	b9 19 00 00 00       	mov    $0x19,%ecx
   11bf4:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   11bfb:	00 
   11bfc:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11bff:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11c06:	00 00 
   11c08:	85 d2                	test   %edx,%edx
   11c0a:	0f 84 e0 00 00 00    	je     11cf0 <mbedtls_sha512+0x140>
   11c10:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   11c17:	9d bb cb 
   11c1a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   11c1f:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   11c26:	29 9a 62 
   11c29:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11c2e:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   11c35:	01 59 91 
   11c38:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   11c3d:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   11c44:	ec 2f 15 
   11c47:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   11c4c:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   11c53:	26 33 67 
   11c56:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   11c5b:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   11c62:	4a b4 8e 
   11c65:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11c6a:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   11c71:	2e 0c db 
   11c74:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   11c79:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   11c80:	48 b5 47 
   11c83:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   11c88:	89 94 24 d0 00 00 00 	mov    %edx,0xd0(%rsp)
   11c8f:	48 89 e5             	mov    %rsp,%rbp
   11c92:	4d 85 c0             	test   %r8,%r8
   11c95:	74 15                	je     11cac <mbedtls_sha512+0xfc>
   11c97:	4c 89 c2             	mov    %r8,%rdx
   11c9a:	4c 89 ce             	mov    %r9,%rsi
   11c9d:	48 89 ef             	mov    %rbp,%rdi
   11ca0:	e8 5b f7 ff ff       	callq  11400 <mbedtls_sha512_update.part.0>
   11ca5:	41 89 c4             	mov    %eax,%r12d
   11ca8:	85 c0                	test   %eax,%eax
   11caa:	75 0e                	jne    11cba <mbedtls_sha512+0x10a>
   11cac:	4c 89 ee             	mov    %r13,%rsi
   11caf:	48 89 ef             	mov    %rbp,%rdi
   11cb2:	e8 29 f9 ff ff       	callq  115e0 <mbedtls_sha512_finish>
   11cb7:	41 89 c4             	mov    %eax,%r12d
   11cba:	be d8 00 00 00       	mov    $0xd8,%esi
   11cbf:	48 89 ef             	mov    %rbp,%rdi
   11cc2:	e8 69 35 ff ff       	callq  5230 <mbedtls_platform_zeroize>
   11cc7:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   11cce:	00 
   11ccf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   11cd6:	00 00 
   11cd8:	0f 85 9d 00 00 00    	jne    11d7b <mbedtls_sha512+0x1cb>
   11cde:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   11ce5:	44 89 e0             	mov    %r12d,%eax
   11ce8:	5d                   	pop    %rbp
   11ce9:	41 5c                	pop    %r12
   11ceb:	41 5d                	pop    %r13
   11ced:	c3                   	retq   
   11cee:	66 90                	xchg   %ax,%ax
   11cf0:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   11cf7:	e6 09 6a 
   11cfa:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   11cff:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   11d06:	ae 67 bb 
   11d09:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11d0e:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   11d15:	f3 6e 3c 
   11d18:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   11d1d:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   11d24:	f5 4f a5 
   11d27:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   11d2c:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   11d33:	52 0e 51 
   11d36:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   11d3b:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   11d42:	68 05 9b 
   11d45:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11d4a:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   11d51:	d9 83 1f 
   11d54:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   11d59:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   11d60:	cd e0 5b 
   11d63:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   11d68:	e9 1b ff ff ff       	jmpq   11c88 <mbedtls_sha512+0xd8>
   11d6d:	0f 1f 00             	nopl   (%rax)
   11d70:	41 bc 8b ff ff ff    	mov    $0xffffff8b,%r12d
   11d76:	e9 4c ff ff ff       	jmpq   11cc7 <mbedtls_sha512+0x117>
   11d7b:	e8 e0 14 ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000011d80 <mbedtls_sha512_self_test>:
   11d80:	f3 0f 1e fa          	endbr64 
   11d84:	31 f6                	xor    %esi,%esi
   11d86:	e9 85 fa ff ff       	jmpq   11810 <mbedtls_sha512_common_self_test>
   11d8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011d90 <mbedtls_sha384_self_test>:
   11d90:	f3 0f 1e fa          	endbr64 
   11d94:	be 01 00 00 00       	mov    $0x1,%esi
   11d99:	e9 72 fa ff ff       	jmpq   11810 <mbedtls_sha512_common_self_test>
   11d9e:	66 90                	xchg   %ax,%ax

0000000000011da0 <aes_gen_tables>:
   11da0:	41 57                	push   %r15
   11da2:	31 f6                	xor    %esi,%esi
   11da4:	41 56                	push   %r14
   11da6:	41 55                	push   %r13
   11da8:	41 54                	push   %r12
   11daa:	55                   	push   %rbp
   11dab:	53                   	push   %rbx
   11dac:	48 81 ec 28 08 00 00 	sub    $0x828,%rsp
   11db3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11dba:	00 00 
   11dbc:	48 89 84 24 18 08 00 	mov    %rax,0x818(%rsp)
   11dc3:	00 
   11dc4:	31 c0                	xor    %eax,%eax
   11dc6:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   11dcb:	b8 01 00 00 00       	mov    $0x1,%eax
   11dd0:	48 63 d0             	movslq %eax,%rdx
   11dd3:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
   11dd6:	89 04 b7             	mov    %eax,(%rdi,%rsi,4)
   11dd9:	89 b4 94 10 04 00 00 	mov    %esi,0x410(%rsp,%rdx,4)
   11de0:	89 c2                	mov    %eax,%edx
   11de2:	81 e2 80 00 00 00    	and    $0x80,%edx
   11de8:	83 fa 01             	cmp    $0x1,%edx
   11deb:	19 d2                	sbb    %edx,%edx
   11ded:	31 c8                	xor    %ecx,%eax
   11def:	48 83 c6 01          	add    $0x1,%rsi
   11df3:	f7 d2                	not    %edx
   11df5:	83 e2 1b             	and    $0x1b,%edx
   11df8:	31 d0                	xor    %edx,%eax
   11dfa:	0f b6 c0             	movzbl %al,%eax
   11dfd:	48 81 fe 00 01 00 00 	cmp    $0x100,%rsi
   11e04:	75 ca                	jne    11dd0 <aes_gen_tables+0x30>
   11e06:	48 8d 0d 73 e2 01 00 	lea    0x1e273(%rip),%rcx        # 30080 <RCON>
   11e0d:	b8 01 00 00 00       	mov    $0x1,%eax
   11e12:	48 8d 79 28          	lea    0x28(%rcx),%rdi
   11e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11e1d:	00 00 00 
   11e20:	8d 14 00             	lea    (%rax,%rax,1),%edx
   11e23:	89 01                	mov    %eax,(%rcx)
   11e25:	89 d6                	mov    %edx,%esi
   11e27:	83 f6 1b             	xor    $0x1b,%esi
   11e2a:	a8 80                	test   $0x80,%al
   11e2c:	0f 45 d6             	cmovne %esi,%edx
   11e2f:	48 83 c1 04          	add    $0x4,%rcx
   11e33:	0f b6 c2             	movzbl %dl,%eax
   11e36:	48 39 cf             	cmp    %rcx,%rdi
   11e39:	75 e5                	jne    11e20 <aes_gen_tables+0x80>
   11e3b:	c6 05 7e 03 02 00 63 	movb   $0x63,0x2037e(%rip)        # 321c0 <FSb>
   11e42:	ba 01 00 00 00       	mov    $0x1,%edx
   11e47:	4c 8d 94 24 10 04 00 	lea    0x410(%rsp),%r10
   11e4e:	00 
   11e4f:	4c 8d 0d 6a 03 02 00 	lea    0x2036a(%rip),%r9        # 321c0 <FSb>
   11e56:	c6 05 c6 f2 01 00 00 	movb   $0x0,0x1f2c6(%rip)        # 31123 <RSb+0x63>
   11e5d:	48 8d 35 5c f2 01 00 	lea    0x1f25c(%rip),%rsi        # 310c0 <RSb>
   11e64:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
   11e6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11e70:	44 89 c0             	mov    %r8d,%eax
   11e73:	41 2b 04 92          	sub    (%r10,%rdx,4),%eax
   11e77:	48 98                	cltq   
   11e79:	8b 4c 84 10          	mov    0x10(%rsp,%rax,4),%ecx
   11e7d:	89 cf                	mov    %ecx,%edi
   11e7f:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   11e82:	c1 ff 07             	sar    $0x7,%edi
   11e85:	09 f8                	or     %edi,%eax
   11e87:	89 c7                	mov    %eax,%edi
   11e89:	44 0f b6 d8          	movzbl %al,%r11d
   11e8d:	40 d0 c7             	rol    %dil
   11e90:	41 31 cb             	xor    %ecx,%r11d
   11e93:	40 0f b6 cf          	movzbl %dil,%ecx
   11e97:	89 c7                	mov    %eax,%edi
   11e99:	c0 c0 03             	rol    $0x3,%al
   11e9c:	40 c0 c7 02          	rol    $0x2,%dil
   11ea0:	41 31 cb             	xor    %ecx,%r11d
   11ea3:	83 f0 63             	xor    $0x63,%eax
   11ea6:	40 0f b6 cf          	movzbl %dil,%ecx
   11eaa:	0f b6 c0             	movzbl %al,%eax
   11ead:	44 31 d9             	xor    %r11d,%ecx
   11eb0:	31 c8                	xor    %ecx,%eax
   11eb2:	41 88 04 11          	mov    %al,(%r9,%rdx,1)
   11eb6:	48 98                	cltq   
   11eb8:	88 14 06             	mov    %dl,(%rsi,%rax,1)
   11ebb:	48 83 c2 01          	add    $0x1,%rdx
   11ebf:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
   11ec6:	75 a8                	jne    11e70 <aes_gen_tables+0xd0>
   11ec8:	8b 84 24 48 04 00 00 	mov    0x448(%rsp),%eax
   11ecf:	41 bd 63 00 00 00    	mov    $0x63,%r13d
   11ed5:	41 be c6 ff ff ff    	mov    $0xffffffc6,%r14d
   11edb:	31 d2                	xor    %edx,%edx
   11edd:	b9 63 00 00 00       	mov    $0x63,%ecx
   11ee2:	48 8d 2d d7 fe 01 00 	lea    0x1fed7(%rip),%rbp        # 31dc0 <FT0>
   11ee9:	48 8d 1d d0 fa 01 00 	lea    0x1fad0(%rip),%rbx        # 319c0 <FT1>
   11ef0:	89 04 24             	mov    %eax,(%rsp)
   11ef3:	8b 84 24 34 04 00 00 	mov    0x434(%rsp),%eax
   11efa:	4c 8d 1d bf f6 01 00 	lea    0x1f6bf(%rip),%r11        # 315c0 <FT2>
   11f01:	4c 8d 15 b8 f2 01 00 	lea    0x1f2b8(%rip),%r10        # 311c0 <FT3>
   11f08:	4c 8d 0d b1 ed 01 00 	lea    0x1edb1(%rip),%r9        # 30cc0 <RT0>
   11f0f:	4c 8d 05 aa e5 01 00 	lea    0x1e5aa(%rip),%r8        # 304c0 <RT2>
   11f16:	89 44 24 04          	mov    %eax,0x4(%rsp)
   11f1a:	8b 84 24 44 04 00 00 	mov    0x444(%rsp),%eax
   11f21:	48 8d 3d 98 e1 01 00 	lea    0x1e198(%rip),%rdi        # 300c0 <RT3>
   11f28:	4c 8d 25 92 02 02 00 	lea    0x20292(%rip),%r12        # 321c1 <FSb+0x1>
   11f2f:	89 44 24 08          	mov    %eax,0x8(%rsp)
   11f33:	8b 84 24 3c 04 00 00 	mov    0x43c(%rsp),%eax
   11f3a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   11f3e:	31 c0                	xor    %eax,%eax
   11f40:	e9 48 01 00 00       	jmpq   1208d <aes_gen_tables+0x2ed>
   11f45:	0f 1f 00             	nopl   (%rax)
   11f48:	8b 94 94 10 04 00 00 	mov    0x410(%rsp,%rdx,4),%edx
   11f4f:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   11f53:	44 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13d
   11f57:	49 63 cd             	movslq %r13d,%rcx
   11f5a:	45 89 ee             	mov    %r13d,%r14d
   11f5d:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   11f64:	41 c1 fe 1f          	sar    $0x1f,%r14d
   11f68:	48 c1 e9 20          	shr    $0x20,%rcx
   11f6c:	44 01 e9             	add    %r13d,%ecx
   11f6f:	c1 f9 07             	sar    $0x7,%ecx
   11f72:	44 29 f1             	sub    %r14d,%ecx
   11f75:	41 89 ce             	mov    %ecx,%r14d
   11f78:	41 c1 e6 08          	shl    $0x8,%r14d
   11f7c:	41 29 ce             	sub    %ecx,%r14d
   11f7f:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   11f83:	45 29 f5             	sub    %r14d,%r13d
   11f86:	4d 63 ed             	movslq %r13d,%r13
   11f89:	46 8b 74 ac 10       	mov    0x10(%rsp,%r13,4),%r14d
   11f8e:	44 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13d
   11f92:	49 63 cd             	movslq %r13d,%rcx
   11f95:	45 89 ef             	mov    %r13d,%r15d
   11f98:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   11f9f:	41 c1 ff 1f          	sar    $0x1f,%r15d
   11fa3:	41 c1 e6 08          	shl    $0x8,%r14d
   11fa7:	48 c1 e9 20          	shr    $0x20,%rcx
   11fab:	44 01 e9             	add    %r13d,%ecx
   11fae:	c1 f9 07             	sar    $0x7,%ecx
   11fb1:	44 29 f9             	sub    %r15d,%ecx
   11fb4:	41 89 cf             	mov    %ecx,%r15d
   11fb7:	41 c1 e7 08          	shl    $0x8,%r15d
   11fbb:	41 29 cf             	sub    %ecx,%r15d
   11fbe:	45 29 fd             	sub    %r15d,%r13d
   11fc1:	4d 63 ed             	movslq %r13d,%r13
   11fc4:	42 8b 4c ac 10       	mov    0x10(%rsp,%r13,4),%ecx
   11fc9:	c1 e1 10             	shl    $0x10,%ecx
   11fcc:	41 31 ce             	xor    %ecx,%r14d
   11fcf:	8b 0c 24             	mov    (%rsp),%ecx
   11fd2:	44 8d 2c 11          	lea    (%rcx,%rdx,1),%r13d
   11fd6:	03 54 24 0c          	add    0xc(%rsp),%edx
   11fda:	49 63 cd             	movslq %r13d,%rcx
   11fdd:	45 89 ef             	mov    %r13d,%r15d
   11fe0:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   11fe7:	41 c1 ff 1f          	sar    $0x1f,%r15d
   11feb:	48 c1 e9 20          	shr    $0x20,%rcx
   11fef:	44 01 e9             	add    %r13d,%ecx
   11ff2:	c1 f9 07             	sar    $0x7,%ecx
   11ff5:	44 29 f9             	sub    %r15d,%ecx
   11ff8:	41 89 cf             	mov    %ecx,%r15d
   11ffb:	41 c1 e7 08          	shl    $0x8,%r15d
   11fff:	41 29 cf             	sub    %ecx,%r15d
   12002:	48 63 ca             	movslq %edx,%rcx
   12005:	45 29 fd             	sub    %r15d,%r13d
   12008:	4d 63 ed             	movslq %r13d,%r13
   1200b:	46 33 74 ac 10       	xor    0x10(%rsp,%r13,4),%r14d
   12010:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   12017:	41 89 d5             	mov    %edx,%r13d
   1201a:	41 c1 fd 1f          	sar    $0x1f,%r13d
   1201e:	48 c1 e9 20          	shr    $0x20,%rcx
   12022:	01 d1                	add    %edx,%ecx
   12024:	c1 f9 07             	sar    $0x7,%ecx
   12027:	44 29 e9             	sub    %r13d,%ecx
   1202a:	41 89 cd             	mov    %ecx,%r13d
   1202d:	41 c1 e5 08          	shl    $0x8,%r13d
   12031:	41 29 cd             	sub    %ecx,%r13d
   12034:	44 29 ea             	sub    %r13d,%edx
   12037:	48 63 d2             	movslq %edx,%rdx
   1203a:	8b 54 94 10          	mov    0x10(%rsp,%rdx,4),%edx
   1203e:	c1 e2 18             	shl    $0x18,%edx
   12041:	41 31 d6             	xor    %edx,%r14d
   12044:	45 89 f5             	mov    %r14d,%r13d
   12047:	44 89 f1             	mov    %r14d,%ecx
   1204a:	44 89 f2             	mov    %r14d,%edx
   1204d:	41 c1 c5 08          	rol    $0x8,%r13d
   12051:	c1 c1 10             	rol    $0x10,%ecx
   12054:	c1 ca 08             	ror    $0x8,%edx
   12057:	4c 8d 3d 62 e8 01 00 	lea    0x1e862(%rip),%r15        # 308c0 <RT1>
   1205e:	45 89 34 81          	mov    %r14d,(%r9,%rax,4)
   12062:	45 89 2c 87          	mov    %r13d,(%r15,%rax,4)
   12066:	41 89 0c 80          	mov    %ecx,(%r8,%rax,4)
   1206a:	89 14 87             	mov    %edx,(%rdi,%rax,4)
   1206d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   12073:	74 6e                	je     120e3 <aes_gen_tables+0x343>
   12075:	42 0f b6 0c 20       	movzbl (%rax,%r12,1),%ecx
   1207a:	48 83 c0 01          	add    $0x1,%rax
   1207e:	89 ca                	mov    %ecx,%edx
   12080:	41 89 cd             	mov    %ecx,%r13d
   12083:	44 8d 34 09          	lea    (%rcx,%rcx,1),%r14d
   12087:	c0 fa 07             	sar    $0x7,%dl
   1208a:	83 e2 1b             	and    $0x1b,%edx
   1208d:	44 31 f2             	xor    %r14d,%edx
   12090:	41 89 ce             	mov    %ecx,%r14d
   12093:	c1 e1 10             	shl    $0x10,%ecx
   12096:	41 c1 e6 08          	shl    $0x8,%r14d
   1209a:	44 31 f1             	xor    %r14d,%ecx
   1209d:	44 0f b6 f2          	movzbl %dl,%r14d
   120a1:	44 31 ea             	xor    %r13d,%edx
   120a4:	c1 e2 18             	shl    $0x18,%edx
   120a7:	44 31 f1             	xor    %r14d,%ecx
   120aa:	31 d1                	xor    %edx,%ecx
   120ac:	89 ca                	mov    %ecx,%edx
   120ae:	89 4c 85 00          	mov    %ecx,0x0(%rbp,%rax,4)
   120b2:	c1 c2 08             	rol    $0x8,%edx
   120b5:	89 14 83             	mov    %edx,(%rbx,%rax,4)
   120b8:	89 ca                	mov    %ecx,%edx
   120ba:	c1 c9 08             	ror    $0x8,%ecx
   120bd:	c1 c2 10             	rol    $0x10,%edx
   120c0:	41 89 0c 82          	mov    %ecx,(%r10,%rax,4)
   120c4:	41 89 14 83          	mov    %edx,(%r11,%rax,4)
   120c8:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
   120cc:	85 d2                	test   %edx,%edx
   120ce:	0f 85 74 fe ff ff    	jne    11f48 <aes_gen_tables+0x1a8>
   120d4:	31 d2                	xor    %edx,%edx
   120d6:	31 c9                	xor    %ecx,%ecx
   120d8:	45 31 ed             	xor    %r13d,%r13d
   120db:	45 31 f6             	xor    %r14d,%r14d
   120de:	e9 74 ff ff ff       	jmpq   12057 <aes_gen_tables+0x2b7>
   120e3:	48 8b 84 24 18 08 00 	mov    0x818(%rsp),%rax
   120ea:	00 
   120eb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   120f2:	00 00 
   120f4:	75 12                	jne    12108 <aes_gen_tables+0x368>
   120f6:	48 81 c4 28 08 00 00 	add    $0x828,%rsp
   120fd:	5b                   	pop    %rbx
   120fe:	5d                   	pop    %rbp
   120ff:	41 5c                	pop    %r12
   12101:	41 5d                	pop    %r13
   12103:	41 5e                	pop    %r14
   12105:	41 5f                	pop    %r15
   12107:	c3                   	retq   
   12108:	e8 53 11 ff ff       	callq  3260 <__stack_chk_fail@plt>
   1210d:	0f 1f 00             	nopl   (%rax)

0000000000012110 <mbedtls_gf128mul_x_ble>:
   12110:	48 8b 16             	mov    (%rsi),%rdx
   12113:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   12117:	b9 08 00 00 00       	mov    $0x8,%ecx
   1211c:	48 89 f0             	mov    %rsi,%rax
   1211f:	48 01 f6             	add    %rsi,%rsi
   12122:	48 c1 e8 3f          	shr    $0x3f,%rax
   12126:	c1 e0 03             	shl    $0x3,%eax
   12129:	29 c1                	sub    %eax,%ecx
   1212b:	b8 87 00 00 00       	mov    $0x87,%eax
   12130:	d3 f8                	sar    %cl,%eax
   12132:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
   12136:	48 c1 ea 3f          	shr    $0x3f,%rdx
   1213a:	48 98                	cltq   
   1213c:	48 09 f2             	or     %rsi,%rdx
   1213f:	48 31 c8             	xor    %rcx,%rax
   12142:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   12146:	48 89 07             	mov    %rax,(%rdi)
   12149:	c3                   	retq   
   1214a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000012150 <mbedtls_aes_init>:
   12150:	f3 0f 1e fa          	endbr64 
   12154:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1215b:	48 89 f9             	mov    %rdi,%rcx
   1215e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   12162:	31 c0                	xor    %eax,%eax
   12164:	48 c7 87 10 01 00 00 	movq   $0x0,0x110(%rdi)
   1216b:	00 00 00 00 
   1216f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   12173:	48 29 f9             	sub    %rdi,%rcx
   12176:	81 c1 20 01 00 00    	add    $0x120,%ecx
   1217c:	c1 e9 03             	shr    $0x3,%ecx
   1217f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   12182:	c3                   	retq   
   12183:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1218a:	00 00 00 00 
   1218e:	66 90                	xchg   %ax,%ax

0000000000012190 <mbedtls_aes_free>:
   12190:	f3 0f 1e fa          	endbr64 
   12194:	48 85 ff             	test   %rdi,%rdi
   12197:	74 0f                	je     121a8 <mbedtls_aes_free+0x18>
   12199:	be 20 01 00 00       	mov    $0x120,%esi
   1219e:	e9 8d 30 ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
   121a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   121a8:	c3                   	retq   
   121a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000121b0 <mbedtls_aes_xts_init>:
   121b0:	f3 0f 1e fa          	endbr64 
   121b4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   121bb:	48 89 fa             	mov    %rdi,%rdx
   121be:	48 8d b7 28 01 00 00 	lea    0x128(%rdi),%rsi
   121c5:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   121c9:	48 c7 87 10 01 00 00 	movq   $0x0,0x110(%rdi)
   121d0:	00 00 00 00 
   121d4:	48 89 d1             	mov    %rdx,%rcx
   121d7:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   121db:	31 c0                	xor    %eax,%eax
   121dd:	48 29 f9             	sub    %rdi,%rcx
   121e0:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   121e4:	81 c1 20 01 00 00    	add    $0x120,%ecx
   121ea:	c1 e9 03             	shr    $0x3,%ecx
   121ed:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   121f0:	48 89 f7             	mov    %rsi,%rdi
   121f3:	48 c7 82 20 01 00 00 	movq   $0x0,0x120(%rdx)
   121fa:	00 00 00 00 
   121fe:	48 c7 82 38 02 00 00 	movq   $0x0,0x238(%rdx)
   12205:	00 00 00 00 
   12209:	29 f2                	sub    %esi,%edx
   1220b:	8d 8a 40 02 00 00    	lea    0x240(%rdx),%ecx
   12211:	c1 e9 03             	shr    $0x3,%ecx
   12214:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   12217:	c3                   	retq   
   12218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1221f:	00 

0000000000012220 <mbedtls_aes_xts_free>:
   12220:	f3 0f 1e fa          	endbr64 
   12224:	48 85 ff             	test   %rdi,%rdi
   12227:	74 27                	je     12250 <mbedtls_aes_xts_free+0x30>
   12229:	53                   	push   %rbx
   1222a:	be 20 01 00 00       	mov    $0x120,%esi
   1222f:	48 89 fb             	mov    %rdi,%rbx
   12232:	e8 f9 2f ff ff       	callq  5230 <mbedtls_platform_zeroize>
   12237:	48 8d bb 20 01 00 00 	lea    0x120(%rbx),%rdi
   1223e:	be 20 01 00 00       	mov    $0x120,%esi
   12243:	5b                   	pop    %rbx
   12244:	e9 e7 2f ff ff       	jmpq   5230 <mbedtls_platform_zeroize>
   12249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12250:	c3                   	retq   
   12251:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12258:	00 00 00 00 
   1225c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012260 <mbedtls_aes_setkey_enc>:
   12260:	f3 0f 1e fa          	endbr64 
   12264:	41 55                	push   %r13
   12266:	49 89 f5             	mov    %rsi,%r13
   12269:	41 54                	push   %r12
   1226b:	41 89 d4             	mov    %edx,%r12d
   1226e:	55                   	push   %rbp
   1226f:	53                   	push   %rbx
   12270:	48 89 fb             	mov    %rdi,%rbx
   12273:	48 83 ec 08          	sub    $0x8,%rsp
   12277:	81 fa c0 00 00 00    	cmp    $0xc0,%edx
   1227d:	74 31                	je     122b0 <mbedtls_aes_setkey_enc+0x50>
   1227f:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   12285:	0f 84 55 01 00 00    	je     123e0 <mbedtls_aes_setkey_enc+0x180>
   1228b:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   12290:	81 fa 80 00 00 00    	cmp    $0x80,%edx
   12296:	0f 84 14 01 00 00    	je     123b0 <mbedtls_aes_setkey_enc+0x150>
   1229c:	48 83 c4 08          	add    $0x8,%rsp
   122a0:	5b                   	pop    %rbx
   122a1:	5d                   	pop    %rbp
   122a2:	41 5c                	pop    %r12
   122a4:	41 5d                	pop    %r13
   122a6:	c3                   	retq   
   122a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   122ae:	00 00 
   122b0:	c7 07 0c 00 00 00    	movl   $0xc,(%rdi)
   122b6:	8b 05 a4 dd 01 00    	mov    0x1dda4(%rip),%eax        # 30060 <aes_init_done>
   122bc:	85 c0                	test   %eax,%eax
   122be:	0f 84 00 01 00 00    	je     123c4 <mbedtls_aes_setkey_enc+0x164>
   122c4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   122cb:	00 
   122cc:	bf 00 00 00 02       	mov    $0x2000000,%edi
   122d1:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
   122d5:	e8 16 30 ff ff       	callq  52f0 <mbedtls_aesni_has_support>
   122da:	85 c0                	test   %eax,%eax
   122dc:	0f 85 0e 01 00 00    	jne    123f0 <mbedtls_aes_setkey_enc+0x190>
   122e2:	41 c1 ec 05          	shr    $0x5,%r12d
   122e6:	b9 00 00 00 00       	mov    $0x0,%ecx
   122eb:	41 8d 74 24 ff       	lea    -0x1(%r12),%esi
   122f0:	74 1b                	je     1230d <mbedtls_aes_setkey_enc+0xad>
   122f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   122f8:	41 8b 54 8d 00       	mov    0x0(%r13,%rcx,4),%edx
   122fd:	89 54 8b 10          	mov    %edx,0x10(%rbx,%rcx,4)
   12301:	48 89 ca             	mov    %rcx,%rdx
   12304:	48 83 c1 01          	add    $0x1,%rcx
   12308:	48 39 d6             	cmp    %rdx,%rsi
   1230b:	75 eb                	jne    122f8 <mbedtls_aes_setkey_enc+0x98>
   1230d:	8b 13                	mov    (%rbx),%edx
   1230f:	83 fa 0c             	cmp    $0xc,%edx
   12312:	0f 84 d8 01 00 00    	je     124f0 <mbedtls_aes_setkey_enc+0x290>
   12318:	83 fa 0e             	cmp    $0xe,%edx
   1231b:	0f 84 ef 00 00 00    	je     12410 <mbedtls_aes_setkey_enc+0x1b0>
   12321:	83 fa 0a             	cmp    $0xa,%edx
   12324:	0f 85 72 ff ff ff    	jne    1229c <mbedtls_aes_setkey_enc+0x3c>
   1232a:	48 8d 35 4f dd 01 00 	lea    0x1dd4f(%rip),%rsi        # 30080 <RCON>
   12331:	48 8d 0d 88 fe 01 00 	lea    0x1fe88(%rip),%rcx        # 321c0 <FSb>
   12338:	4c 8d 46 28          	lea    0x28(%rsi),%r8
   1233c:	0f 1f 40 00          	nopl   0x0(%rax)
   12340:	8b 5d 0c             	mov    0xc(%rbp),%ebx
   12343:	8b 7d 00             	mov    0x0(%rbp),%edi
   12346:	48 83 c6 04          	add    $0x4,%rsi
   1234a:	48 83 c5 10          	add    $0x10,%rbp
   1234e:	33 7e fc             	xor    -0x4(%rsi),%edi
   12351:	0f b6 d7             	movzbl %bh,%edx
   12354:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   12358:	31 fa                	xor    %edi,%edx
   1235a:	89 df                	mov    %ebx,%edi
   1235c:	c1 ef 18             	shr    $0x18,%edi
   1235f:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   12363:	c1 e7 10             	shl    $0x10,%edi
   12366:	31 fa                	xor    %edi,%edx
   12368:	0f b6 fb             	movzbl %bl,%edi
   1236b:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   1236f:	c1 e7 18             	shl    $0x18,%edi
   12372:	31 fa                	xor    %edi,%edx
   12374:	89 df                	mov    %ebx,%edi
   12376:	c1 ef 10             	shr    $0x10,%edi
   12379:	40 0f b6 ff          	movzbl %dil,%edi
   1237d:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   12381:	c1 e7 08             	shl    $0x8,%edi
   12384:	31 fa                	xor    %edi,%edx
   12386:	89 55 00             	mov    %edx,0x0(%rbp)
   12389:	33 55 f4             	xor    -0xc(%rbp),%edx
   1238c:	89 55 04             	mov    %edx,0x4(%rbp)
   1238f:	33 55 f8             	xor    -0x8(%rbp),%edx
   12392:	89 55 08             	mov    %edx,0x8(%rbp)
   12395:	31 da                	xor    %ebx,%edx
   12397:	89 55 0c             	mov    %edx,0xc(%rbp)
   1239a:	49 39 f0             	cmp    %rsi,%r8
   1239d:	75 a1                	jne    12340 <mbedtls_aes_setkey_enc+0xe0>
   1239f:	48 83 c4 08          	add    $0x8,%rsp
   123a3:	5b                   	pop    %rbx
   123a4:	5d                   	pop    %rbp
   123a5:	41 5c                	pop    %r12
   123a7:	41 5d                	pop    %r13
   123a9:	c3                   	retq   
   123aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   123b0:	8b 05 aa dc 01 00    	mov    0x1dcaa(%rip),%eax        # 30060 <aes_init_done>
   123b6:	c7 07 0a 00 00 00    	movl   $0xa,(%rdi)
   123bc:	85 c0                	test   %eax,%eax
   123be:	0f 85 00 ff ff ff    	jne    122c4 <mbedtls_aes_setkey_enc+0x64>
   123c4:	e8 d7 f9 ff ff       	callq  11da0 <aes_gen_tables>
   123c9:	c7 05 8d dc 01 00 01 	movl   $0x1,0x1dc8d(%rip)        # 30060 <aes_init_done>
   123d0:	00 00 00 
   123d3:	e9 ec fe ff ff       	jmpq   122c4 <mbedtls_aes_setkey_enc+0x64>
   123d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   123df:	00 
   123e0:	c7 07 0e 00 00 00    	movl   $0xe,(%rdi)
   123e6:	e9 cb fe ff ff       	jmpq   122b6 <mbedtls_aes_setkey_enc+0x56>
   123eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   123f0:	48 83 c4 08          	add    $0x8,%rsp
   123f4:	44 89 e2             	mov    %r12d,%edx
   123f7:	4c 89 ee             	mov    %r13,%rsi
   123fa:	48 89 ef             	mov    %rbp,%rdi
   123fd:	5b                   	pop    %rbx
   123fe:	5d                   	pop    %rbp
   123ff:	41 5c                	pop    %r12
   12401:	41 5d                	pop    %r13
   12403:	e9 c8 31 ff ff       	jmpq   55d0 <mbedtls_aesni_setkey_enc>
   12408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1240f:	00 
   12410:	48 8d 3d 69 dc 01 00 	lea    0x1dc69(%rip),%rdi        # 30080 <RCON>
   12417:	48 8d 0d a2 fd 01 00 	lea    0x1fda2(%rip),%rcx        # 321c0 <FSb>
   1241e:	4c 8d 47 1c          	lea    0x1c(%rdi),%r8
   12422:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12428:	8b 5d 1c             	mov    0x1c(%rbp),%ebx
   1242b:	8b 75 00             	mov    0x0(%rbp),%esi
   1242e:	48 83 c7 04          	add    $0x4,%rdi
   12432:	48 83 c5 20          	add    $0x20,%rbp
   12436:	33 77 fc             	xor    -0x4(%rdi),%esi
   12439:	0f b6 d7             	movzbl %bh,%edx
   1243c:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   12440:	31 f2                	xor    %esi,%edx
   12442:	89 de                	mov    %ebx,%esi
   12444:	c1 ee 18             	shr    $0x18,%esi
   12447:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   1244b:	c1 e6 10             	shl    $0x10,%esi
   1244e:	31 f2                	xor    %esi,%edx
   12450:	0f b6 f3             	movzbl %bl,%esi
   12453:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   12457:	c1 e6 18             	shl    $0x18,%esi
   1245a:	31 f2                	xor    %esi,%edx
   1245c:	89 de                	mov    %ebx,%esi
   1245e:	c1 ee 10             	shr    $0x10,%esi
   12461:	40 0f b6 f6          	movzbl %sil,%esi
   12465:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   12469:	c1 e6 08             	shl    $0x8,%esi
   1246c:	31 f2                	xor    %esi,%edx
   1246e:	89 55 00             	mov    %edx,0x0(%rbp)
   12471:	33 55 e4             	xor    -0x1c(%rbp),%edx
   12474:	89 55 04             	mov    %edx,0x4(%rbp)
   12477:	33 55 e8             	xor    -0x18(%rbp),%edx
   1247a:	89 55 08             	mov    %edx,0x8(%rbp)
   1247d:	33 55 ec             	xor    -0x14(%rbp),%edx
   12480:	41 89 d1             	mov    %edx,%r9d
   12483:	89 55 0c             	mov    %edx,0xc(%rbp)
   12486:	0f b6 f2             	movzbl %dl,%esi
   12489:	41 c1 e9 18          	shr    $0x18,%r9d
   1248d:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   12491:	33 75 f0             	xor    -0x10(%rbp),%esi
   12494:	46 0f b6 0c 09       	movzbl (%rcx,%r9,1),%r9d
   12499:	41 c1 e1 18          	shl    $0x18,%r9d
   1249d:	44 31 ce             	xor    %r9d,%esi
   124a0:	41 89 f2             	mov    %esi,%r10d
   124a3:	0f b6 f6             	movzbl %dh,%esi
   124a6:	c1 ea 10             	shr    $0x10,%edx
   124a9:	44 0f b6 0c 31       	movzbl (%rcx,%rsi,1),%r9d
   124ae:	0f b6 d2             	movzbl %dl,%edx
   124b1:	44 89 d6             	mov    %r10d,%esi
   124b4:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   124b8:	41 c1 e1 08          	shl    $0x8,%r9d
   124bc:	44 31 ce             	xor    %r9d,%esi
   124bf:	c1 e2 10             	shl    $0x10,%edx
   124c2:	31 f2                	xor    %esi,%edx
   124c4:	89 55 10             	mov    %edx,0x10(%rbp)
   124c7:	33 55 f4             	xor    -0xc(%rbp),%edx
   124ca:	89 55 14             	mov    %edx,0x14(%rbp)
   124cd:	33 55 f8             	xor    -0x8(%rbp),%edx
   124d0:	89 55 18             	mov    %edx,0x18(%rbp)
   124d3:	31 da                	xor    %ebx,%edx
   124d5:	89 55 1c             	mov    %edx,0x1c(%rbp)
   124d8:	49 39 f8             	cmp    %rdi,%r8
   124db:	0f 85 47 ff ff ff    	jne    12428 <mbedtls_aes_setkey_enc+0x1c8>
   124e1:	48 83 c4 08          	add    $0x8,%rsp
   124e5:	5b                   	pop    %rbx
   124e6:	5d                   	pop    %rbp
   124e7:	41 5c                	pop    %r12
   124e9:	41 5d                	pop    %r13
   124eb:	c3                   	retq   
   124ec:	0f 1f 40 00          	nopl   0x0(%rax)
   124f0:	48 8d 35 89 db 01 00 	lea    0x1db89(%rip),%rsi        # 30080 <RCON>
   124f7:	48 8d 0d c2 fc 01 00 	lea    0x1fcc2(%rip),%rcx        # 321c0 <FSb>
   124fe:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
   12502:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12508:	8b 5d 14             	mov    0x14(%rbp),%ebx
   1250b:	44 8b 45 00          	mov    0x0(%rbp),%r8d
   1250f:	48 83 c6 04          	add    $0x4,%rsi
   12513:	48 83 c5 18          	add    $0x18,%rbp
   12517:	44 33 46 fc          	xor    -0x4(%rsi),%r8d
   1251b:	0f b6 d7             	movzbl %bh,%edx
   1251e:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   12522:	44 31 c2             	xor    %r8d,%edx
   12525:	41 89 d8             	mov    %ebx,%r8d
   12528:	41 c1 e8 18          	shr    $0x18,%r8d
   1252c:	46 0f b6 04 01       	movzbl (%rcx,%r8,1),%r8d
   12531:	41 c1 e0 10          	shl    $0x10,%r8d
   12535:	44 31 c2             	xor    %r8d,%edx
   12538:	44 0f b6 c3          	movzbl %bl,%r8d
   1253c:	46 0f b6 04 01       	movzbl (%rcx,%r8,1),%r8d
   12541:	41 c1 e0 18          	shl    $0x18,%r8d
   12545:	44 31 c2             	xor    %r8d,%edx
   12548:	41 89 d8             	mov    %ebx,%r8d
   1254b:	41 c1 e8 10          	shr    $0x10,%r8d
   1254f:	45 0f b6 c0          	movzbl %r8b,%r8d
   12553:	46 0f b6 04 01       	movzbl (%rcx,%r8,1),%r8d
   12558:	41 c1 e0 08          	shl    $0x8,%r8d
   1255c:	44 31 c2             	xor    %r8d,%edx
   1255f:	89 55 00             	mov    %edx,0x0(%rbp)
   12562:	33 55 ec             	xor    -0x14(%rbp),%edx
   12565:	89 55 04             	mov    %edx,0x4(%rbp)
   12568:	33 55 f0             	xor    -0x10(%rbp),%edx
   1256b:	89 55 08             	mov    %edx,0x8(%rbp)
   1256e:	33 55 f4             	xor    -0xc(%rbp),%edx
   12571:	89 55 0c             	mov    %edx,0xc(%rbp)
   12574:	33 55 f8             	xor    -0x8(%rbp),%edx
   12577:	89 55 10             	mov    %edx,0x10(%rbp)
   1257a:	31 da                	xor    %ebx,%edx
   1257c:	89 55 14             	mov    %edx,0x14(%rbp)
   1257f:	48 39 f7             	cmp    %rsi,%rdi
   12582:	75 84                	jne    12508 <mbedtls_aes_setkey_enc+0x2a8>
   12584:	48 83 c4 08          	add    $0x8,%rsp
   12588:	5b                   	pop    %rbx
   12589:	5d                   	pop    %rbp
   1258a:	41 5c                	pop    %r12
   1258c:	41 5d                	pop    %r13
   1258e:	c3                   	retq   
   1258f:	90                   	nop

0000000000012590 <mbedtls_aes_setkey_dec>:
   12590:	f3 0f 1e fa          	endbr64 
   12594:	41 57                	push   %r15
   12596:	b9 24 00 00 00       	mov    $0x24,%ecx
   1259b:	41 56                	push   %r14
   1259d:	41 55                	push   %r13
   1259f:	41 54                	push   %r12
   125a1:	55                   	push   %rbp
   125a2:	53                   	push   %rbx
   125a3:	48 89 fb             	mov    %rdi,%rbx
   125a6:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   125ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   125b4:	00 00 
   125b6:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   125bd:	00 
   125be:	31 c0                	xor    %eax,%eax
   125c0:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   125c5:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   125cc:	00 
   125cd:	48 89 ef             	mov    %rbp,%rdi
   125d0:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   125d3:	48 89 ef             	mov    %rbp,%rdi
   125d6:	e8 85 fc ff ff       	callq  12260 <mbedtls_aes_setkey_enc>
   125db:	41 89 c4             	mov    %eax,%r12d
   125de:	85 c0                	test   %eax,%eax
   125e0:	74 3e                	je     12620 <mbedtls_aes_setkey_dec+0x90>
   125e2:	be 20 01 00 00       	mov    $0x120,%esi
   125e7:	48 89 ef             	mov    %rbp,%rdi
   125ea:	e8 41 2c ff ff       	callq  5230 <mbedtls_platform_zeroize>
   125ef:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   125f6:	00 
   125f7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   125fe:	00 00 
   12600:	0f 85 5a 01 00 00    	jne    12760 <mbedtls_aes_setkey_dec+0x1d0>
   12606:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   1260d:	44 89 e0             	mov    %r12d,%eax
   12610:	5b                   	pop    %rbx
   12611:	5d                   	pop    %rbp
   12612:	41 5c                	pop    %r12
   12614:	41 5d                	pop    %r13
   12616:	41 5e                	pop    %r14
   12618:	41 5f                	pop    %r15
   1261a:	c3                   	retq   
   1261b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12620:	8b 44 24 20          	mov    0x20(%rsp),%eax
   12624:	bf 00 00 00 02       	mov    $0x2000000,%edi
   12629:	89 03                	mov    %eax,(%rbx)
   1262b:	e8 c0 2c ff ff       	callq  52f0 <mbedtls_aesni_has_support>
   12630:	85 c0                	test   %eax,%eax
   12632:	0f 85 0e 01 00 00    	jne    12746 <mbedtls_aes_setkey_dec+0x1b6>
   12638:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1263c:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   12640:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   12645:	c1 e0 02             	shl    $0x2,%eax
   12648:	48 98                	cltq   
   1264a:	48 03 44 24 28       	add    0x28(%rsp),%rax
   1264f:	4c 8d 74 84 30       	lea    0x30(%rsp,%rax,4),%r14
   12654:	49 8b 06             	mov    (%r14),%rax
   12657:	49 83 ee 10          	sub    $0x10,%r14
   1265b:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1265f:	49 8b 46 18          	mov    0x18(%r14),%rax
   12663:	48 89 43 18          	mov    %rax,0x18(%rbx)
   12667:	8b 03                	mov    (%rbx),%eax
   12669:	83 f8 01             	cmp    $0x1,%eax
   1266c:	0f 8e bc 00 00 00    	jle    1272e <mbedtls_aes_setkey_dec+0x19e>
   12672:	44 8d 68 fe          	lea    -0x2(%rax),%r13d
   12676:	4d 89 f0             	mov    %r14,%r8
   12679:	48 8d 35 40 fb 01 00 	lea    0x1fb40(%rip),%rsi        # 321c0 <FSb>
   12680:	44 89 6c 24 1c       	mov    %r13d,0x1c(%rsp)
   12685:	49 83 c5 03          	add    $0x3,%r13
   12689:	4c 8d 1d 30 da 01 00 	lea    0x1da30(%rip),%r11        # 300c0 <RT3>
   12690:	4c 8d 15 29 e2 01 00 	lea    0x1e229(%rip),%r10        # 308c0 <RT1>
   12697:	49 c1 e5 04          	shl    $0x4,%r13
   1269b:	4c 8d 0d 1e de 01 00 	lea    0x1de1e(%rip),%r9        # 304c0 <RT2>
   126a2:	49 01 dd             	add    %rbx,%r13
   126a5:	48 8d 1d 14 e6 01 00 	lea    0x1e614(%rip),%rbx        # 30cc0 <RT0>
   126ac:	0f 1f 40 00          	nopl   0x0(%rax)
   126b0:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   126b5:	31 c9                	xor    %ecx,%ecx
   126b7:	41 8b 04 08          	mov    (%r8,%rcx,1),%eax
   126bb:	0f b6 d0             	movzbl %al,%edx
   126be:	0f b6 ec             	movzbl %ah,%ebp
   126c1:	44 0f b6 3c 16       	movzbl (%rsi,%rdx,1),%r15d
   126c6:	89 c2                	mov    %eax,%edx
   126c8:	c1 e8 10             	shr    $0x10,%eax
   126cb:	c1 ea 18             	shr    $0x18,%edx
   126ce:	0f b6 c0             	movzbl %al,%eax
   126d1:	0f b6 14 16          	movzbl (%rsi,%rdx,1),%edx
   126d5:	46 8b 3c bb          	mov    (%rbx,%r15,4),%r15d
   126d9:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   126dd:	45 33 3c 93          	xor    (%r11,%rdx,4),%r15d
   126e1:	44 89 fa             	mov    %r15d,%edx
   126e4:	44 0f b6 3c 2e       	movzbl (%rsi,%rbp,1),%r15d
   126e9:	43 33 14 ba          	xor    (%r10,%r15,4),%edx
   126ed:	41 33 14 81          	xor    (%r9,%rax,4),%edx
   126f1:	89 14 0f             	mov    %edx,(%rdi,%rcx,1)
   126f4:	48 83 c1 04          	add    $0x4,%rcx
   126f8:	48 83 f9 10          	cmp    $0x10,%rcx
   126fc:	75 b9                	jne    126b7 <mbedtls_aes_setkey_dec+0x127>
   126fe:	48 83 c7 10          	add    $0x10,%rdi
   12702:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   12707:	49 83 e8 10          	sub    $0x10,%r8
   1270b:	49 39 fd             	cmp    %rdi,%r13
   1270e:	75 a0                	jne    126b0 <mbedtls_aes_setkey_dec+0x120>
   12710:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   12714:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12718:	48 f7 d0             	not    %rax
   1271b:	48 c1 e0 04          	shl    $0x4,%rax
   1271f:	49 01 c6             	add    %rax,%r14
   12722:	48 89 d0             	mov    %rdx,%rax
   12725:	48 c1 e0 04          	shl    $0x4,%rax
   12729:	48 01 44 24 10       	add    %rax,0x10(%rsp)
   1272e:	49 8b 06             	mov    (%r14),%rax
   12731:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   12736:	48 89 03             	mov    %rax,(%rbx)
   12739:	49 8b 46 08          	mov    0x8(%r14),%rax
   1273d:	48 89 43 08          	mov    %rax,0x8(%rbx)
   12741:	e9 9c fe ff ff       	jmpq   125e2 <mbedtls_aes_setkey_dec+0x52>
   12746:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1274b:	8b 13                	mov    (%rbx),%edx
   1274d:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   12751:	48 8d 74 84 30       	lea    0x30(%rsp,%rax,4),%rsi
   12756:	e8 f5 2d ff ff       	callq  5550 <mbedtls_aesni_inverse_key>
   1275b:	e9 82 fe ff ff       	jmpq   125e2 <mbedtls_aes_setkey_dec+0x52>
   12760:	e8 fb 0a ff ff       	callq  3260 <__stack_chk_fail@plt>
   12765:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1276c:	00 00 00 00 

0000000000012770 <mbedtls_aes_xts_setkey_enc>:
   12770:	f3 0f 1e fa          	endbr64 
   12774:	41 55                	push   %r13
   12776:	41 89 d5             	mov    %edx,%r13d
   12779:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   1277e:	41 54                	push   %r12
   12780:	49 89 f4             	mov    %rsi,%r12
   12783:	89 d6                	mov    %edx,%esi
   12785:	81 ea 00 01 00 00    	sub    $0x100,%edx
   1278b:	41 d1 ed             	shr    %r13d
   1278e:	c1 ee 04             	shr    $0x4,%esi
   12791:	81 e2 ff fe ff ff    	and    $0xfffffeff,%edx
   12797:	55                   	push   %rbp
   12798:	74 06                	je     127a0 <mbedtls_aes_xts_setkey_enc+0x30>
   1279a:	5d                   	pop    %rbp
   1279b:	41 5c                	pop    %r12
   1279d:	41 5d                	pop    %r13
   1279f:	c3                   	retq   
   127a0:	48 89 fd             	mov    %rdi,%rbp
   127a3:	4c 01 e6             	add    %r12,%rsi
   127a6:	48 8d bf 20 01 00 00 	lea    0x120(%rdi),%rdi
   127ad:	44 89 ea             	mov    %r13d,%edx
   127b0:	e8 ab fa ff ff       	callq  12260 <mbedtls_aes_setkey_enc>
   127b5:	85 c0                	test   %eax,%eax
   127b7:	75 e1                	jne    1279a <mbedtls_aes_xts_setkey_enc+0x2a>
   127b9:	44 89 ea             	mov    %r13d,%edx
   127bc:	4c 89 e6             	mov    %r12,%rsi
   127bf:	48 89 ef             	mov    %rbp,%rdi
   127c2:	5d                   	pop    %rbp
   127c3:	41 5c                	pop    %r12
   127c5:	41 5d                	pop    %r13
   127c7:	e9 94 fa ff ff       	jmpq   12260 <mbedtls_aes_setkey_enc>
   127cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000127d0 <mbedtls_aes_xts_setkey_dec>:
   127d0:	f3 0f 1e fa          	endbr64 
   127d4:	41 55                	push   %r13
   127d6:	41 89 d5             	mov    %edx,%r13d
   127d9:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   127de:	41 54                	push   %r12
   127e0:	49 89 f4             	mov    %rsi,%r12
   127e3:	89 d6                	mov    %edx,%esi
   127e5:	81 ea 00 01 00 00    	sub    $0x100,%edx
   127eb:	41 d1 ed             	shr    %r13d
   127ee:	c1 ee 04             	shr    $0x4,%esi
   127f1:	81 e2 ff fe ff ff    	and    $0xfffffeff,%edx
   127f7:	55                   	push   %rbp
   127f8:	74 06                	je     12800 <mbedtls_aes_xts_setkey_dec+0x30>
   127fa:	5d                   	pop    %rbp
   127fb:	41 5c                	pop    %r12
   127fd:	41 5d                	pop    %r13
   127ff:	c3                   	retq   
   12800:	48 89 fd             	mov    %rdi,%rbp
   12803:	4c 01 e6             	add    %r12,%rsi
   12806:	48 8d bf 20 01 00 00 	lea    0x120(%rdi),%rdi
   1280d:	44 89 ea             	mov    %r13d,%edx
   12810:	e8 4b fa ff ff       	callq  12260 <mbedtls_aes_setkey_enc>
   12815:	85 c0                	test   %eax,%eax
   12817:	75 e1                	jne    127fa <mbedtls_aes_xts_setkey_dec+0x2a>
   12819:	44 89 ea             	mov    %r13d,%edx
   1281c:	4c 89 e6             	mov    %r12,%rsi
   1281f:	48 89 ef             	mov    %rbp,%rdi
   12822:	5d                   	pop    %rbp
   12823:	41 5c                	pop    %r12
   12825:	41 5d                	pop    %r13
   12827:	e9 64 fd ff ff       	jmpq   12590 <mbedtls_aes_setkey_dec>
   1282c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012830 <mbedtls_internal_aes_encrypt>:
   12830:	f3 0f 1e fa          	endbr64 
   12834:	41 57                	push   %r15
   12836:	4c 8d 1d 83 f1 01 00 	lea    0x1f183(%rip),%r11        # 319c0 <FT1>
   1283d:	4c 8d 15 7c ed 01 00 	lea    0x1ed7c(%rip),%r10        # 315c0 <FT2>
   12844:	41 56                	push   %r14
   12846:	41 55                	push   %r13
   12848:	41 54                	push   %r12
   1284a:	4c 8d 25 6f f5 01 00 	lea    0x1f56f(%rip),%r12        # 31dc0 <FT0>
   12851:	55                   	push   %rbp
   12852:	48 8d 2d 67 e9 01 00 	lea    0x1e967(%rip),%rbp        # 311c0 <FT3>
   12859:	53                   	push   %rbx
   1285a:	48 83 ec 48          	sub    $0x48,%rsp
   1285e:	48 89 14 24          	mov    %rdx,(%rsp)
   12862:	8b 56 08             	mov    0x8(%rsi),%edx
   12865:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1286c:	00 00 
   1286e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   12873:	31 c0                	xor    %eax,%eax
   12875:	48 8b 47 08          	mov    0x8(%rdi),%rax
   12879:	48 8d 4c 87 10       	lea    0x10(%rdi,%rax,4),%rcx
   1287e:	8b 3f                	mov    (%rdi),%edi
   12880:	8b 46 04             	mov    0x4(%rsi),%eax
   12883:	44 8b 01             	mov    (%rcx),%r8d
   12886:	33 41 04             	xor    0x4(%rcx),%eax
   12889:	4c 8d 69 10          	lea    0x10(%rcx),%r13
   1288d:	41 89 f9             	mov    %edi,%r9d
   12890:	44 33 06             	xor    (%rsi),%r8d
   12893:	33 51 08             	xor    0x8(%rcx),%edx
   12896:	8b 76 0c             	mov    0xc(%rsi),%esi
   12899:	41 d1 f9             	sar    %r9d
   1289c:	33 71 0c             	xor    0xc(%rcx),%esi
   1289f:	83 ff 03             	cmp    $0x3,%edi
   128a2:	0f 8e a9 01 00 00    	jle    12a51 <mbedtls_internal_aes_encrypt+0x221>
   128a8:	41 8d 79 fe          	lea    -0x2(%r9),%edi
   128ac:	4c 8d 25 0d f5 01 00 	lea    0x1f50d(%rip),%r12        # 31dc0 <FT0>
   128b3:	4d 89 e9             	mov    %r13,%r9
   128b6:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
   128ba:	48 c1 e7 05          	shl    $0x5,%rdi
   128be:	48 8d 2d fb e8 01 00 	lea    0x1e8fb(%rip),%rbp        # 311c0 <FT3>
   128c5:	4c 8d 1d f4 f0 01 00 	lea    0x1f0f4(%rip),%r11        # 319c0 <FT1>
   128cc:	4c 8d 74 39 30       	lea    0x30(%rcx,%rdi,1),%r14
   128d1:	4c 8d 15 e8 ec 01 00 	lea    0x1ece8(%rip),%r10        # 315c0 <FT2>
   128d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   128df:	00 
   128e0:	89 f1                	mov    %esi,%ecx
   128e2:	41 0f b6 f8          	movzbl %r8b,%edi
   128e6:	44 89 c3             	mov    %r8d,%ebx
   128e9:	41 89 c7             	mov    %eax,%r15d
   128ec:	c1 e9 18             	shr    $0x18,%ecx
   128ef:	41 8b 3c bc          	mov    (%r12,%rdi,4),%edi
   128f3:	c1 eb 18             	shr    $0x18,%ebx
   128f6:	33 7c 8d 00          	xor    0x0(%rbp,%rcx,4),%edi
   128fa:	0f b6 cc             	movzbl %ah,%ecx
   128fd:	41 33 39             	xor    (%r9),%edi
   12900:	41 c1 ef 18          	shr    $0x18,%r15d
   12904:	41 33 3c 8b          	xor    (%r11,%rcx,4),%edi
   12908:	89 d1                	mov    %edx,%ecx
   1290a:	c1 e9 10             	shr    $0x10,%ecx
   1290d:	0f b6 c9             	movzbl %cl,%ecx
   12910:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
   12914:	0f b6 c8             	movzbl %al,%ecx
   12917:	c1 e8 10             	shr    $0x10,%eax
   1291a:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
   1291e:	33 4c 9d 00          	xor    0x0(%rbp,%rbx,4),%ecx
   12922:	0f b6 de             	movzbl %dh,%ebx
   12925:	0f b6 c0             	movzbl %al,%eax
   12928:	41 33 49 04          	xor    0x4(%r9),%ecx
   1292c:	41 33 0c 9b          	xor    (%r11,%rbx,4),%ecx
   12930:	89 f3                	mov    %esi,%ebx
   12932:	c1 eb 10             	shr    $0x10,%ebx
   12935:	0f b6 db             	movzbl %bl,%ebx
   12938:	41 33 0c 9a          	xor    (%r10,%rbx,4),%ecx
   1293c:	0f b6 da             	movzbl %dl,%ebx
   1293f:	c1 ea 18             	shr    $0x18,%edx
   12942:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   12946:	89 f1                	mov    %esi,%ecx
   12948:	41 8b 1c 9c          	mov    (%r12,%rbx,4),%ebx
   1294c:	40 0f b6 f6          	movzbl %sil,%esi
   12950:	0f b6 cd             	movzbl %ch,%ecx
   12953:	42 33 5c bd 00       	xor    0x0(%rbp,%r15,4),%ebx
   12958:	41 33 59 08          	xor    0x8(%r9),%ebx
   1295c:	45 89 c7             	mov    %r8d,%r15d
   1295f:	41 33 1c 8b          	xor    (%r11,%rcx,4),%ebx
   12963:	44 89 c1             	mov    %r8d,%ecx
   12966:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   1296a:	41 c1 ef 10          	shr    $0x10,%r15d
   1296e:	33 74 95 00          	xor    0x0(%rbp,%rdx,4),%esi
   12972:	0f b6 d5             	movzbl %ch,%edx
   12975:	41 33 71 0c          	xor    0xc(%r9),%esi
   12979:	45 0f b6 ff          	movzbl %r15b,%r15d
   1297d:	41 33 34 93          	xor    (%r11,%rdx,4),%esi
   12981:	41 33 34 82          	xor    (%r10,%rax,4),%esi
   12985:	40 0f b6 d7          	movzbl %dil,%edx
   12989:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   1298d:	89 f0                	mov    %esi,%eax
   1298f:	43 33 1c ba          	xor    (%r10,%r15,4),%ebx
   12993:	c1 e8 18             	shr    $0x18,%eax
   12996:	45 8b 04 94          	mov    (%r12,%rdx,4),%r8d
   1299a:	89 fa                	mov    %edi,%edx
   1299c:	44 33 44 85 00       	xor    0x0(%rbp,%rax,4),%r8d
   129a1:	0f b6 c5             	movzbl %ch,%eax
   129a4:	45 33 41 10          	xor    0x10(%r9),%r8d
   129a8:	c1 ea 18             	shr    $0x18,%edx
   129ab:	45 33 04 83          	xor    (%r11,%rax,4),%r8d
   129af:	89 d8                	mov    %ebx,%eax
   129b1:	c1 e8 10             	shr    $0x10,%eax
   129b4:	0f b6 c0             	movzbl %al,%eax
   129b7:	45 33 04 82          	xor    (%r10,%rax,4),%r8d
   129bb:	0f b6 c1             	movzbl %cl,%eax
   129be:	41 8b 04 84          	mov    (%r12,%rax,4),%eax
   129c2:	33 44 95 00          	xor    0x0(%rbp,%rdx,4),%eax
   129c6:	0f b6 d7             	movzbl %bh,%edx
   129c9:	41 33 41 14          	xor    0x14(%r9),%eax
   129cd:	41 33 04 93          	xor    (%r11,%rdx,4),%eax
   129d1:	89 f2                	mov    %esi,%edx
   129d3:	c1 e9 18             	shr    $0x18,%ecx
   129d6:	c1 ea 10             	shr    $0x10,%edx
   129d9:	4c 63 f9             	movslq %ecx,%r15
   129dc:	89 f1                	mov    %esi,%ecx
   129de:	40 0f b6 f6          	movzbl %sil,%esi
   129e2:	0f b6 d2             	movzbl %dl,%edx
   129e5:	0f b6 cd             	movzbl %ch,%ecx
   129e8:	49 83 c1 20          	add    $0x20,%r9
   129ec:	41 33 04 92          	xor    (%r10,%rdx,4),%eax
   129f0:	0f b6 d3             	movzbl %bl,%edx
   129f3:	c1 eb 18             	shr    $0x18,%ebx
   129f6:	41 8b 14 94          	mov    (%r12,%rdx,4),%edx
   129fa:	42 33 54 bd 00       	xor    0x0(%rbp,%r15,4),%edx
   129ff:	41 89 ff             	mov    %edi,%r15d
   12a02:	41 33 51 f8          	xor    -0x8(%r9),%edx
   12a06:	41 33 14 8b          	xor    (%r11,%rcx,4),%edx
   12a0a:	41 c1 ef 10          	shr    $0x10,%r15d
   12a0e:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   12a12:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12a16:	45 0f b6 ff          	movzbl %r15b,%r15d
   12a1a:	33 74 9d 00          	xor    0x0(%rbp,%rbx,4),%esi
   12a1e:	89 fb                	mov    %edi,%ebx
   12a20:	41 33 71 fc          	xor    -0x4(%r9),%esi
   12a24:	c1 e9 10             	shr    $0x10,%ecx
   12a27:	0f b6 ff             	movzbl %bh,%edi
   12a2a:	43 33 14 ba          	xor    (%r10,%r15,4),%edx
   12a2e:	0f b6 c9             	movzbl %cl,%ecx
   12a31:	41 33 34 bb          	xor    (%r11,%rdi,4),%esi
   12a35:	41 33 34 8a          	xor    (%r10,%rcx,4),%esi
   12a39:	4d 39 f1             	cmp    %r14,%r9
   12a3c:	0f 85 9e fe ff ff    	jne    128e0 <mbedtls_internal_aes_encrypt+0xb0>
   12a42:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   12a46:	48 83 c1 01          	add    $0x1,%rcx
   12a4a:	48 c1 e1 05          	shl    $0x5,%rcx
   12a4e:	49 01 cd             	add    %rcx,%r13
   12a51:	89 f1                	mov    %esi,%ecx
   12a53:	41 0f b6 f8          	movzbl %r8b,%edi
   12a57:	45 89 c1             	mov    %r8d,%r9d
   12a5a:	0f b6 de             	movzbl %dh,%ebx
   12a5d:	c1 e9 18             	shr    $0x18,%ecx
   12a60:	41 8b 3c bc          	mov    (%r12,%rdi,4),%edi
   12a64:	41 c1 e9 18          	shr    $0x18,%r9d
   12a68:	33 7c 8d 00          	xor    0x0(%rbp,%rcx,4),%edi
   12a6c:	0f b6 cc             	movzbl %ah,%ecx
   12a6f:	41 33 7d 00          	xor    0x0(%r13),%edi
   12a73:	41 33 3c 8b          	xor    (%r11,%rcx,4),%edi
   12a77:	89 d1                	mov    %edx,%ecx
   12a79:	c1 e9 10             	shr    $0x10,%ecx
   12a7c:	0f b6 c9             	movzbl %cl,%ecx
   12a7f:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
   12a83:	0f b6 c8             	movzbl %al,%ecx
   12a86:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
   12a8a:	42 33 4c 8d 00       	xor    0x0(%rbp,%r9,4),%ecx
   12a8f:	41 89 f1             	mov    %esi,%r9d
   12a92:	89 7c 24 20          	mov    %edi,0x20(%rsp)
   12a96:	41 c1 e9 10          	shr    $0x10,%r9d
   12a9a:	41 33 4d 04          	xor    0x4(%r13),%ecx
   12a9e:	41 33 0c 9b          	xor    (%r11,%rbx,4),%ecx
   12aa2:	0f b6 da             	movzbl %dl,%ebx
   12aa5:	45 0f b6 c9          	movzbl %r9b,%r9d
   12aa9:	41 8b 1c 9c          	mov    (%r12,%rbx,4),%ebx
   12aad:	c1 ea 18             	shr    $0x18,%edx
   12ab0:	43 33 0c 8a          	xor    (%r10,%r9,4),%ecx
   12ab4:	41 89 c1             	mov    %eax,%r9d
   12ab7:	c1 e8 10             	shr    $0x10,%eax
   12aba:	41 c1 e9 18          	shr    $0x18,%r9d
   12abe:	0f b6 c0             	movzbl %al,%eax
   12ac1:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   12ac5:	42 33 5c 8d 00       	xor    0x0(%rbp,%r9,4),%ebx
   12aca:	41 33 5d 08          	xor    0x8(%r13),%ebx
   12ace:	45 89 c1             	mov    %r8d,%r9d
   12ad1:	41 89 de             	mov    %ebx,%r14d
   12ad4:	89 f3                	mov    %esi,%ebx
   12ad6:	40 0f b6 f6          	movzbl %sil,%esi
   12ada:	41 c1 e9 10          	shr    $0x10,%r9d
   12ade:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12ae2:	33 74 95 00          	xor    0x0(%rbp,%rdx,4),%esi
   12ae6:	44 89 c2             	mov    %r8d,%edx
   12ae9:	0f b6 df             	movzbl %bh,%ebx
   12aec:	0f b6 d6             	movzbl %dh,%edx
   12aef:	41 8b 1c 9b          	mov    (%r11,%rbx,4),%ebx
   12af3:	41 33 75 0c          	xor    0xc(%r13),%esi
   12af7:	45 0f b6 c9          	movzbl %r9b,%r9d
   12afb:	41 33 34 93          	xor    (%r11,%rdx,4),%esi
   12aff:	89 f2                	mov    %esi,%edx
   12b01:	40 0f b6 f7          	movzbl %dil,%esi
   12b05:	41 33 14 82          	xor    (%r10,%rax,4),%edx
   12b09:	44 31 f3             	xor    %r14d,%ebx
   12b0c:	48 8d 05 ad f6 01 00 	lea    0x1f6ad(%rip),%rax        # 321c0 <FSb>
   12b13:	43 33 1c 8a          	xor    (%r10,%r9,4),%ebx
   12b17:	89 54 24 2c          	mov    %edx,0x2c(%rsp)
   12b1b:	41 89 ca             	mov    %ecx,%r10d
   12b1e:	44 0f b6 0c 30       	movzbl (%rax,%rsi,1),%r9d
   12b23:	89 d6                	mov    %edx,%esi
   12b25:	45 33 4d 10          	xor    0x10(%r13),%r9d
   12b29:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
   12b2d:	c1 ee 18             	shr    $0x18,%esi
   12b30:	0f b6 ee             	movzbl %dh,%ebp
   12b33:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b37:	c1 e6 18             	shl    $0x18,%esi
   12b3a:	41 31 f1             	xor    %esi,%r9d
   12b3d:	0f b6 f5             	movzbl %ch,%esi
   12b40:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b44:	c1 e6 08             	shl    $0x8,%esi
   12b47:	41 31 f1             	xor    %esi,%r9d
   12b4a:	89 de                	mov    %ebx,%esi
   12b4c:	c1 ee 10             	shr    $0x10,%esi
   12b4f:	40 0f b6 f6          	movzbl %sil,%esi
   12b53:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b57:	c1 e6 10             	shl    $0x10,%esi
   12b5a:	41 31 f1             	xor    %esi,%r9d
   12b5d:	0f b6 f1             	movzbl %cl,%esi
   12b60:	41 c1 ea 18          	shr    $0x18,%r10d
   12b64:	44 0f b6 04 30       	movzbl (%rax,%rsi,1),%r8d
   12b69:	89 fe                	mov    %edi,%esi
   12b6b:	45 33 45 14          	xor    0x14(%r13),%r8d
   12b6f:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   12b74:	c1 ee 18             	shr    $0x18,%esi
   12b77:	c1 e9 10             	shr    $0x10,%ecx
   12b7a:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b7e:	46 0f b6 14 10       	movzbl (%rax,%r10,1),%r10d
   12b83:	0f b6 c9             	movzbl %cl,%ecx
   12b86:	c1 e6 18             	shl    $0x18,%esi
   12b89:	41 c1 e2 18          	shl    $0x18,%r10d
   12b8d:	41 31 f0             	xor    %esi,%r8d
   12b90:	0f b6 f7             	movzbl %bh,%esi
   12b93:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b97:	c1 e6 08             	shl    $0x8,%esi
   12b9a:	41 31 f0             	xor    %esi,%r8d
   12b9d:	89 d6                	mov    %edx,%esi
   12b9f:	0f b6 d2             	movzbl %dl,%edx
   12ba2:	c1 ee 10             	shr    $0x10,%esi
   12ba5:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
   12ba9:	41 33 55 1c          	xor    0x1c(%r13),%edx
   12bad:	40 0f b6 f6          	movzbl %sil,%esi
   12bb1:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12bb5:	c1 e6 10             	shl    $0x10,%esi
   12bb8:	41 31 f0             	xor    %esi,%r8d
   12bbb:	0f b6 f3             	movzbl %bl,%esi
   12bbe:	c1 eb 18             	shr    $0x18,%ebx
   12bc1:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12bc5:	41 33 75 18          	xor    0x18(%r13),%esi
   12bc9:	44 89 44 24 14       	mov    %r8d,0x14(%rsp)
   12bce:	44 31 d6             	xor    %r10d,%esi
   12bd1:	44 0f b6 14 28       	movzbl (%rax,%rbp,1),%r10d
   12bd6:	41 c1 e2 08          	shl    $0x8,%r10d
   12bda:	44 31 d6             	xor    %r10d,%esi
   12bdd:	41 89 fa             	mov    %edi,%r10d
   12be0:	41 c1 ea 10          	shr    $0x10,%r10d
   12be4:	45 0f b6 d2          	movzbl %r10b,%r10d
   12be8:	46 0f b6 14 10       	movzbl (%rax,%r10,1),%r10d
   12bed:	41 c1 e2 10          	shl    $0x10,%r10d
   12bf1:	44 31 d6             	xor    %r10d,%esi
   12bf4:	44 0f b6 14 18       	movzbl (%rax,%rbx,1),%r10d
   12bf9:	89 fb                	mov    %edi,%ebx
   12bfb:	0f b6 ff             	movzbl %bh,%edi
   12bfe:	89 74 24 18          	mov    %esi,0x18(%rsp)
   12c02:	0f b6 3c 38          	movzbl (%rax,%rdi,1),%edi
   12c06:	41 c1 e2 18          	shl    $0x18,%r10d
   12c0a:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
   12c0e:	44 31 d2             	xor    %r10d,%edx
   12c11:	c1 e7 08             	shl    $0x8,%edi
   12c14:	c1 e0 10             	shl    $0x10,%eax
   12c17:	31 fa                	xor    %edi,%edx
   12c19:	48 8b 3c 24          	mov    (%rsp),%rdi
   12c1d:	31 d0                	xor    %edx,%eax
   12c1f:	89 77 08             	mov    %esi,0x8(%rdi)
   12c22:	be 20 00 00 00       	mov    $0x20,%esi
   12c27:	89 47 0c             	mov    %eax,0xc(%rdi)
   12c2a:	44 89 0f             	mov    %r9d,(%rdi)
   12c2d:	44 89 47 04          	mov    %r8d,0x4(%rdi)
   12c31:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   12c36:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   12c3a:	e8 f1 25 ff ff       	callq  5230 <mbedtls_platform_zeroize>
   12c3f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   12c44:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   12c4b:	00 00 
   12c4d:	75 11                	jne    12c60 <mbedtls_internal_aes_encrypt+0x430>
   12c4f:	48 83 c4 48          	add    $0x48,%rsp
   12c53:	31 c0                	xor    %eax,%eax
   12c55:	5b                   	pop    %rbx
   12c56:	5d                   	pop    %rbp
   12c57:	41 5c                	pop    %r12
   12c59:	41 5d                	pop    %r13
   12c5b:	41 5e                	pop    %r14
   12c5d:	41 5f                	pop    %r15
   12c5f:	c3                   	retq   
   12c60:	e8 fb 05 ff ff       	callq  3260 <__stack_chk_fail@plt>
   12c65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12c6c:	00 00 00 00 

0000000000012c70 <mbedtls_internal_aes_decrypt>:
   12c70:	f3 0f 1e fa          	endbr64 
   12c74:	41 57                	push   %r15
   12c76:	4c 8d 1d 43 dc 01 00 	lea    0x1dc43(%rip),%r11        # 308c0 <RT1>
   12c7d:	4c 8d 15 3c d8 01 00 	lea    0x1d83c(%rip),%r10        # 304c0 <RT2>
   12c84:	41 56                	push   %r14
   12c86:	41 55                	push   %r13
   12c88:	41 54                	push   %r12
   12c8a:	4c 8d 25 2f e0 01 00 	lea    0x1e02f(%rip),%r12        # 30cc0 <RT0>
   12c91:	55                   	push   %rbp
   12c92:	48 8d 2d 27 d4 01 00 	lea    0x1d427(%rip),%rbp        # 300c0 <RT3>
   12c99:	53                   	push   %rbx
   12c9a:	48 83 ec 48          	sub    $0x48,%rsp
   12c9e:	44 8b 46 08          	mov    0x8(%rsi),%r8d
   12ca2:	48 89 14 24          	mov    %rdx,(%rsp)
   12ca6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12cad:	00 00 
   12caf:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   12cb4:	31 c0                	xor    %eax,%eax
   12cb6:	48 8b 47 08          	mov    0x8(%rdi),%rax
   12cba:	48 8d 4c 87 10       	lea    0x10(%rdi,%rax,4),%rcx
   12cbf:	8b 3f                	mov    (%rdi),%edi
   12cc1:	8b 46 04             	mov    0x4(%rsi),%eax
   12cc4:	8b 11                	mov    (%rcx),%edx
   12cc6:	33 41 04             	xor    0x4(%rcx),%eax
   12cc9:	4c 8d 69 10          	lea    0x10(%rcx),%r13
   12ccd:	41 89 f9             	mov    %edi,%r9d
   12cd0:	33 16                	xor    (%rsi),%edx
   12cd2:	44 33 41 08          	xor    0x8(%rcx),%r8d
   12cd6:	8b 76 0c             	mov    0xc(%rsi),%esi
   12cd9:	41 d1 f9             	sar    %r9d
   12cdc:	33 71 0c             	xor    0xc(%rcx),%esi
   12cdf:	83 ff 03             	cmp    $0x3,%edi
   12ce2:	0f 8e b7 01 00 00    	jle    12e9f <mbedtls_internal_aes_decrypt+0x22f>
   12ce8:	41 8d 79 fe          	lea    -0x2(%r9),%edi
   12cec:	4c 8d 25 cd df 01 00 	lea    0x1dfcd(%rip),%r12        # 30cc0 <RT0>
   12cf3:	4d 89 e9             	mov    %r13,%r9
   12cf6:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
   12cfa:	48 c1 e7 05          	shl    $0x5,%rdi
   12cfe:	48 8d 2d bb d3 01 00 	lea    0x1d3bb(%rip),%rbp        # 300c0 <RT3>
   12d05:	4c 8d 1d b4 db 01 00 	lea    0x1dbb4(%rip),%r11        # 308c0 <RT1>
   12d0c:	4c 8d 74 39 30       	lea    0x30(%rcx,%rdi,1),%r14
   12d11:	4c 8d 15 a8 d7 01 00 	lea    0x1d7a8(%rip),%r10        # 304c0 <RT2>
   12d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12d1f:	00 
   12d20:	89 c1                	mov    %eax,%ecx
   12d22:	0f b6 fa             	movzbl %dl,%edi
   12d25:	41 89 f7             	mov    %esi,%r15d
   12d28:	c1 e9 18             	shr    $0x18,%ecx
   12d2b:	41 8b 1c bc          	mov    (%r12,%rdi,4),%ebx
   12d2f:	44 89 c7             	mov    %r8d,%edi
   12d32:	41 c1 ef 18          	shr    $0x18,%r15d
   12d36:	33 5c 8d 00          	xor    0x0(%rbp,%rcx,4),%ebx
   12d3a:	89 f1                	mov    %esi,%ecx
   12d3c:	41 33 19             	xor    (%r9),%ebx
   12d3f:	c1 ef 18             	shr    $0x18,%edi
   12d42:	0f b6 cd             	movzbl %ch,%ecx
   12d45:	41 33 1c 8b          	xor    (%r11,%rcx,4),%ebx
   12d49:	44 89 c1             	mov    %r8d,%ecx
   12d4c:	c1 e9 10             	shr    $0x10,%ecx
   12d4f:	0f b6 c9             	movzbl %cl,%ecx
   12d52:	41 33 1c 8a          	xor    (%r10,%rcx,4),%ebx
   12d56:	0f b6 c8             	movzbl %al,%ecx
   12d59:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
   12d5d:	33 4c bd 00          	xor    0x0(%rbp,%rdi,4),%ecx
   12d61:	0f b6 fe             	movzbl %dh,%edi
   12d64:	41 33 49 04          	xor    0x4(%r9),%ecx
   12d68:	41 33 0c bb          	xor    (%r11,%rdi,4),%ecx
   12d6c:	89 f7                	mov    %esi,%edi
   12d6e:	40 0f b6 f6          	movzbl %sil,%esi
   12d72:	c1 ef 10             	shr    $0x10,%edi
   12d75:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12d79:	40 0f b6 ff          	movzbl %dil,%edi
   12d7d:	41 33 0c ba          	xor    (%r10,%rdi,4),%ecx
   12d81:	41 0f b6 f8          	movzbl %r8b,%edi
   12d85:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   12d89:	41 8b 3c bc          	mov    (%r12,%rdi,4),%edi
   12d8d:	0f b6 cc             	movzbl %ah,%ecx
   12d90:	c1 e8 10             	shr    $0x10,%eax
   12d93:	42 33 7c bd 00       	xor    0x0(%rbp,%r15,4),%edi
   12d98:	41 89 d7             	mov    %edx,%r15d
   12d9b:	c1 ea 18             	shr    $0x18,%edx
   12d9e:	41 33 79 08          	xor    0x8(%r9),%edi
   12da2:	33 74 95 00          	xor    0x0(%rbp,%rdx,4),%esi
   12da6:	41 33 3c 8b          	xor    (%r11,%rcx,4),%edi
   12daa:	44 89 c2             	mov    %r8d,%edx
   12dad:	0f b6 c0             	movzbl %al,%eax
   12db0:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   12db4:	0f b6 d6             	movzbl %dh,%edx
   12db7:	41 33 71 0c          	xor    0xc(%r9),%esi
   12dbb:	41 c1 ef 10          	shr    $0x10,%r15d
   12dbf:	41 33 34 93          	xor    (%r11,%rdx,4),%esi
   12dc3:	41 33 34 82          	xor    (%r10,%rax,4),%esi
   12dc7:	0f b6 d3             	movzbl %bl,%edx
   12dca:	45 0f b6 ff          	movzbl %r15b,%r15d
   12dce:	89 c8                	mov    %ecx,%eax
   12dd0:	41 8b 14 94          	mov    (%r12,%rdx,4),%edx
   12dd4:	43 33 3c ba          	xor    (%r10,%r15,4),%edi
   12dd8:	0f b6 cf             	movzbl %bh,%ecx
   12ddb:	c1 e8 18             	shr    $0x18,%eax
   12dde:	41 89 f8             	mov    %edi,%r8d
   12de1:	41 89 f7             	mov    %esi,%r15d
   12de4:	33 54 85 00          	xor    0x0(%rbp,%rax,4),%edx
   12de8:	89 f0                	mov    %esi,%eax
   12dea:	41 33 51 10          	xor    0x10(%r9),%edx
   12dee:	41 c1 e8 18          	shr    $0x18,%r8d
   12df2:	0f b6 c4             	movzbl %ah,%eax
   12df5:	41 33 14 83          	xor    (%r11,%rax,4),%edx
   12df9:	89 f8                	mov    %edi,%eax
   12dfb:	c1 e8 10             	shr    $0x10,%eax
   12dfe:	0f b6 c0             	movzbl %al,%eax
   12e01:	41 33 14 82          	xor    (%r10,%rax,4),%edx
   12e05:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   12e0a:	41 8b 04 84          	mov    (%r12,%rax,4),%eax
   12e0e:	42 33 44 85 00       	xor    0x0(%rbp,%r8,4),%eax
   12e13:	41 89 f0             	mov    %esi,%r8d
   12e16:	40 0f b6 f6          	movzbl %sil,%esi
   12e1a:	41 33 41 14          	xor    0x14(%r9),%eax
   12e1e:	41 c1 e8 10          	shr    $0x10,%r8d
   12e22:	41 33 04 8b          	xor    (%r11,%rcx,4),%eax
   12e26:	49 83 c1 20          	add    $0x20,%r9
   12e2a:	45 0f b6 c0          	movzbl %r8b,%r8d
   12e2e:	41 c1 ef 18          	shr    $0x18,%r15d
   12e32:	43 33 04 82          	xor    (%r10,%r8,4),%eax
   12e36:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   12e3a:	44 0f b6 c7          	movzbl %dil,%r8d
   12e3e:	47 8b 04 84          	mov    (%r12,%r8,4),%r8d
   12e42:	46 33 44 bd 00       	xor    0x0(%rbp,%r15,4),%r8d
   12e47:	41 89 df             	mov    %ebx,%r15d
   12e4a:	c1 eb 18             	shr    $0x18,%ebx
   12e4d:	0f b6 cd             	movzbl %ch,%ecx
   12e50:	45 33 41 f8          	xor    -0x8(%r9),%r8d
   12e54:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12e58:	41 c1 ef 10          	shr    $0x10,%r15d
   12e5c:	45 33 04 8b          	xor    (%r11,%rcx,4),%r8d
   12e60:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   12e64:	45 0f b6 ff          	movzbl %r15b,%r15d
   12e68:	33 74 9d 00          	xor    0x0(%rbp,%rbx,4),%esi
   12e6c:	89 fb                	mov    %edi,%ebx
   12e6e:	41 33 71 fc          	xor    -0x4(%r9),%esi
   12e72:	c1 e9 10             	shr    $0x10,%ecx
   12e75:	0f b6 ff             	movzbl %bh,%edi
   12e78:	47 33 04 ba          	xor    (%r10,%r15,4),%r8d
   12e7c:	0f b6 c9             	movzbl %cl,%ecx
   12e7f:	41 33 34 bb          	xor    (%r11,%rdi,4),%esi
   12e83:	41 33 34 8a          	xor    (%r10,%rcx,4),%esi
   12e87:	4d 39 f1             	cmp    %r14,%r9
   12e8a:	0f 85 90 fe ff ff    	jne    12d20 <mbedtls_internal_aes_decrypt+0xb0>
   12e90:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   12e94:	48 83 c1 01          	add    $0x1,%rcx
   12e98:	48 c1 e1 05          	shl    $0x5,%rcx
   12e9c:	49 01 cd             	add    %rcx,%r13
   12e9f:	89 c1                	mov    %eax,%ecx
   12ea1:	0f b6 fa             	movzbl %dl,%edi
   12ea4:	41 89 f1             	mov    %esi,%r9d
   12ea7:	c1 e9 18             	shr    $0x18,%ecx
   12eaa:	41 8b 1c bc          	mov    (%r12,%rdi,4),%ebx
   12eae:	44 89 c7             	mov    %r8d,%edi
   12eb1:	41 c1 e9 18          	shr    $0x18,%r9d
   12eb5:	33 5c 8d 00          	xor    0x0(%rbp,%rcx,4),%ebx
   12eb9:	89 f1                	mov    %esi,%ecx
   12ebb:	41 33 5d 00          	xor    0x0(%r13),%ebx
   12ebf:	c1 ef 18             	shr    $0x18,%edi
   12ec2:	0f b6 cd             	movzbl %ch,%ecx
   12ec5:	41 33 1c 8b          	xor    (%r11,%rcx,4),%ebx
   12ec9:	44 89 c1             	mov    %r8d,%ecx
   12ecc:	c1 e9 10             	shr    $0x10,%ecx
   12ecf:	0f b6 c9             	movzbl %cl,%ecx
   12ed2:	41 33 1c 8a          	xor    (%r10,%rcx,4),%ebx
   12ed6:	0f b6 c8             	movzbl %al,%ecx
   12ed9:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
   12edd:	33 4c bd 00          	xor    0x0(%rbp,%rdi,4),%ecx
   12ee1:	0f b6 fe             	movzbl %dh,%edi
   12ee4:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
   12ee8:	41 33 4d 04          	xor    0x4(%r13),%ecx
   12eec:	41 33 0c bb          	xor    (%r11,%rdi,4),%ecx
   12ef0:	89 f7                	mov    %esi,%edi
   12ef2:	40 0f b6 f6          	movzbl %sil,%esi
   12ef6:	c1 ef 10             	shr    $0x10,%edi
   12ef9:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12efd:	40 0f b6 ff          	movzbl %dil,%edi
   12f01:	41 33 0c ba          	xor    (%r10,%rdi,4),%ecx
   12f05:	41 0f b6 f8          	movzbl %r8b,%edi
   12f09:	41 8b 3c bc          	mov    (%r12,%rdi,4),%edi
   12f0d:	42 33 7c 8d 00       	xor    0x0(%rbp,%r9,4),%edi
   12f12:	41 89 d1             	mov    %edx,%r9d
   12f15:	c1 ea 18             	shr    $0x18,%edx
   12f18:	33 74 95 00          	xor    0x0(%rbp,%rdx,4),%esi
   12f1c:	41 8b 55 0c          	mov    0xc(%r13),%edx
   12f20:	41 c1 e9 10          	shr    $0x10,%r9d
   12f24:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   12f28:	41 33 7d 08          	xor    0x8(%r13),%edi
   12f2c:	45 0f b6 c9          	movzbl %r9b,%r9d
   12f30:	0f b6 ed             	movzbl %ch,%ebp
   12f33:	31 f2                	xor    %esi,%edx
   12f35:	41 89 fe             	mov    %edi,%r14d
   12f38:	0f b6 fc             	movzbl %ah,%edi
   12f3b:	c1 e8 10             	shr    $0x10,%eax
   12f3e:	89 d6                	mov    %edx,%esi
   12f40:	44 89 c2             	mov    %r8d,%edx
   12f43:	41 8b 3c bb          	mov    (%r11,%rdi,4),%edi
   12f47:	0f b6 c0             	movzbl %al,%eax
   12f4a:	0f b6 d6             	movzbl %dh,%edx
   12f4d:	41 8b 14 93          	mov    (%r11,%rdx,4),%edx
   12f51:	44 31 f7             	xor    %r14d,%edi
   12f54:	43 33 3c 8a          	xor    (%r10,%r9,4),%edi
   12f58:	89 7c 24 28          	mov    %edi,0x28(%rsp)
   12f5c:	31 f2                	xor    %esi,%edx
   12f5e:	0f b6 f3             	movzbl %bl,%esi
   12f61:	41 33 14 82          	xor    (%r10,%rax,4),%edx
   12f65:	48 8d 05 54 e1 01 00 	lea    0x1e154(%rip),%rax        # 310c0 <RSb>
   12f6c:	89 54 24 2c          	mov    %edx,0x2c(%rsp)
   12f70:	41 89 d2             	mov    %edx,%r10d
   12f73:	44 0f b6 0c 30       	movzbl (%rax,%rsi,1),%r9d
   12f78:	89 ce                	mov    %ecx,%esi
   12f7a:	45 33 4d 10          	xor    0x10(%r13),%r9d
   12f7e:	c1 ee 18             	shr    $0x18,%esi
   12f81:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12f85:	c1 e6 18             	shl    $0x18,%esi
   12f88:	41 31 f1             	xor    %esi,%r9d
   12f8b:	0f b6 f6             	movzbl %dh,%esi
   12f8e:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12f92:	c1 e6 08             	shl    $0x8,%esi
   12f95:	41 31 f1             	xor    %esi,%r9d
   12f98:	89 fe                	mov    %edi,%esi
   12f9a:	c1 ee 10             	shr    $0x10,%esi
   12f9d:	40 0f b6 f6          	movzbl %sil,%esi
   12fa1:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12fa5:	c1 e6 10             	shl    $0x10,%esi
   12fa8:	41 31 f1             	xor    %esi,%r9d
   12fab:	0f b6 f1             	movzbl %cl,%esi
   12fae:	41 c1 ea 18          	shr    $0x18,%r10d
   12fb2:	44 0f b6 04 30       	movzbl (%rax,%rsi,1),%r8d
   12fb7:	89 fe                	mov    %edi,%esi
   12fb9:	45 33 45 14          	xor    0x14(%r13),%r8d
   12fbd:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   12fc2:	c1 ee 18             	shr    $0x18,%esi
   12fc5:	c1 e9 10             	shr    $0x10,%ecx
   12fc8:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12fcc:	46 0f b6 14 10       	movzbl (%rax,%r10,1),%r10d
   12fd1:	0f b6 c9             	movzbl %cl,%ecx
   12fd4:	c1 e6 18             	shl    $0x18,%esi
   12fd7:	41 c1 e2 18          	shl    $0x18,%r10d
   12fdb:	41 31 f0             	xor    %esi,%r8d
   12fde:	0f b6 f7             	movzbl %bh,%esi
   12fe1:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12fe5:	c1 e6 08             	shl    $0x8,%esi
   12fe8:	41 31 f0             	xor    %esi,%r8d
   12feb:	89 d6                	mov    %edx,%esi
   12fed:	0f b6 d2             	movzbl %dl,%edx
   12ff0:	c1 ee 10             	shr    $0x10,%esi
   12ff3:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
   12ff7:	41 33 55 1c          	xor    0x1c(%r13),%edx
   12ffb:	40 0f b6 f6          	movzbl %sil,%esi
   12fff:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   13003:	c1 e6 10             	shl    $0x10,%esi
   13006:	41 31 f0             	xor    %esi,%r8d
   13009:	40 0f b6 f7          	movzbl %dil,%esi
   1300d:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   13011:	41 33 75 18          	xor    0x18(%r13),%esi
   13015:	44 89 44 24 14       	mov    %r8d,0x14(%rsp)
   1301a:	44 31 d6             	xor    %r10d,%esi
   1301d:	44 0f b6 14 28       	movzbl (%rax,%rbp,1),%r10d
   13022:	41 c1 e2 08          	shl    $0x8,%r10d
   13026:	44 31 d6             	xor    %r10d,%esi
   13029:	41 89 da             	mov    %ebx,%r10d
   1302c:	c1 eb 18             	shr    $0x18,%ebx
   1302f:	41 c1 ea 10          	shr    $0x10,%r10d
   13033:	45 0f b6 d2          	movzbl %r10b,%r10d
   13037:	46 0f b6 14 10       	movzbl (%rax,%r10,1),%r10d
   1303c:	41 c1 e2 10          	shl    $0x10,%r10d
   13040:	44 31 d6             	xor    %r10d,%esi
   13043:	44 0f b6 14 18       	movzbl (%rax,%rbx,1),%r10d
   13048:	89 fb                	mov    %edi,%ebx
   1304a:	0f b6 ff             	movzbl %bh,%edi
   1304d:	48 8b 1c 24          	mov    (%rsp),%rbx
   13051:	89 74 24 18          	mov    %esi,0x18(%rsp)
   13055:	0f b6 3c 38          	movzbl (%rax,%rdi,1),%edi
   13059:	41 c1 e2 18          	shl    $0x18,%r10d
   1305d:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
   13061:	44 31 d2             	xor    %r10d,%edx
   13064:	89 73 08             	mov    %esi,0x8(%rbx)
   13067:	be 20 00 00 00       	mov    $0x20,%esi
   1306c:	c1 e7 08             	shl    $0x8,%edi
   1306f:	c1 e0 10             	shl    $0x10,%eax
   13072:	44 89 0b             	mov    %r9d,(%rbx)
   13075:	31 fa                	xor    %edi,%edx
   13077:	44 89 43 04          	mov    %r8d,0x4(%rbx)
   1307b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   13080:	31 d0                	xor    %edx,%eax
   13082:	89 43 0c             	mov    %eax,0xc(%rbx)
   13085:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   13089:	e8 a2 21 ff ff       	callq  5230 <mbedtls_platform_zeroize>
   1308e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13093:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1309a:	00 00 
   1309c:	75 11                	jne    130af <mbedtls_internal_aes_decrypt+0x43f>
   1309e:	48 83 c4 48          	add    $0x48,%rsp
   130a2:	31 c0                	xor    %eax,%eax
   130a4:	5b                   	pop    %rbx
   130a5:	5d                   	pop    %rbp
   130a6:	41 5c                	pop    %r12
   130a8:	41 5d                	pop    %r13
   130aa:	41 5e                	pop    %r14
   130ac:	41 5f                	pop    %r15
   130ae:	c3                   	retq   
   130af:	e8 ac 01 ff ff       	callq  3260 <__stack_chk_fail@plt>
   130b4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   130bb:	00 00 00 00 
   130bf:	90                   	nop

00000000000130c0 <mbedtls_aes_crypt_ecb>:
   130c0:	f3 0f 1e fa          	endbr64 
   130c4:	83 fe 01             	cmp    $0x1,%esi
   130c7:	77 77                	ja     13140 <mbedtls_aes_crypt_ecb+0x80>
   130c9:	41 56                	push   %r14
   130cb:	49 89 ce             	mov    %rcx,%r14
   130ce:	41 55                	push   %r13
   130d0:	49 89 d5             	mov    %rdx,%r13
   130d3:	41 54                	push   %r12
   130d5:	49 89 fc             	mov    %rdi,%r12
   130d8:	bf 00 00 00 02       	mov    $0x2000000,%edi
   130dd:	55                   	push   %rbp
   130de:	89 f5                	mov    %esi,%ebp
   130e0:	48 83 ec 08          	sub    $0x8,%rsp
   130e4:	e8 07 22 ff ff       	callq  52f0 <mbedtls_aesni_has_support>
   130e9:	85 c0                	test   %eax,%eax
   130eb:	75 33                	jne    13120 <mbedtls_aes_crypt_ecb+0x60>
   130ed:	4c 89 f2             	mov    %r14,%rdx
   130f0:	4c 89 ee             	mov    %r13,%rsi
   130f3:	4c 89 e7             	mov    %r12,%rdi
   130f6:	83 fd 01             	cmp    $0x1,%ebp
   130f9:	74 15                	je     13110 <mbedtls_aes_crypt_ecb+0x50>
   130fb:	48 83 c4 08          	add    $0x8,%rsp
   130ff:	5d                   	pop    %rbp
   13100:	41 5c                	pop    %r12
   13102:	41 5d                	pop    %r13
   13104:	41 5e                	pop    %r14
   13106:	e9 65 fb ff ff       	jmpq   12c70 <mbedtls_internal_aes_decrypt>
   1310b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13110:	48 83 c4 08          	add    $0x8,%rsp
   13114:	5d                   	pop    %rbp
   13115:	41 5c                	pop    %r12
   13117:	41 5d                	pop    %r13
   13119:	41 5e                	pop    %r14
   1311b:	e9 10 f7 ff ff       	jmpq   12830 <mbedtls_internal_aes_encrypt>
   13120:	48 83 c4 08          	add    $0x8,%rsp
   13124:	4c 89 f1             	mov    %r14,%rcx
   13127:	4c 89 ea             	mov    %r13,%rdx
   1312a:	89 ee                	mov    %ebp,%esi
   1312c:	4c 89 e7             	mov    %r12,%rdi
   1312f:	5d                   	pop    %rbp
   13130:	41 5c                	pop    %r12
   13132:	41 5d                	pop    %r13
   13134:	41 5e                	pop    %r14
   13136:	e9 05 22 ff ff       	jmpq   5340 <mbedtls_aesni_crypt_ecb>
   1313b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13140:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13145:	c3                   	retq   
   13146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1314d:	00 00 00 

0000000000013150 <mbedtls_aes_crypt_cbc>:
   13150:	f3 0f 1e fa          	endbr64 
   13154:	83 fe 01             	cmp    $0x1,%esi
   13157:	0f 87 f0 00 00 00    	ja     1324d <mbedtls_aes_crypt_cbc+0xfd>
   1315d:	f6 c2 0f             	test   $0xf,%dl
   13160:	0f 85 ed 00 00 00    	jne    13253 <mbedtls_aes_crypt_cbc+0x103>
   13166:	41 57                	push   %r15
   13168:	4d 89 cf             	mov    %r9,%r15
   1316b:	41 56                	push   %r14
   1316d:	41 55                	push   %r13
   1316f:	41 54                	push   %r12
   13171:	49 89 cc             	mov    %rcx,%r12
   13174:	55                   	push   %rbp
   13175:	48 89 fd             	mov    %rdi,%rbp
   13178:	53                   	push   %rbx
   13179:	4c 89 c3             	mov    %r8,%rbx
   1317c:	48 83 ec 18          	sub    $0x18,%rsp
   13180:	85 f6                	test   %esi,%esi
   13182:	75 6c                	jne    131f0 <mbedtls_aes_crypt_cbc+0xa0>
   13184:	48 85 d2             	test   %rdx,%rdx
   13187:	74 50                	je     131d9 <mbedtls_aes_crypt_cbc+0x89>
   13189:	4d 8d 2c 10          	lea    (%r8,%rdx,1),%r13
   1318d:	0f 1f 00             	nopl   (%rax)
   13190:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   13194:	31 f6                	xor    %esi,%esi
   13196:	4c 89 f9             	mov    %r15,%rcx
   13199:	48 89 da             	mov    %rbx,%rdx
   1319c:	48 89 ef             	mov    %rbp,%rdi
   1319f:	0f 29 04 24          	movaps %xmm0,(%rsp)
   131a3:	e8 18 ff ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   131a8:	85 c0                	test   %eax,%eax
   131aa:	75 2f                	jne    131db <mbedtls_aes_crypt_cbc+0x8b>
   131ac:	31 c0                	xor    %eax,%eax
   131ae:	66 90                	xchg   %ax,%ax
   131b0:	41 8b 14 04          	mov    (%r12,%rax,1),%edx
   131b4:	41 31 14 07          	xor    %edx,(%r15,%rax,1)
   131b8:	48 83 c0 04          	add    $0x4,%rax
   131bc:	48 83 f8 10          	cmp    $0x10,%rax
   131c0:	75 ee                	jne    131b0 <mbedtls_aes_crypt_cbc+0x60>
   131c2:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
   131c7:	48 83 c3 10          	add    $0x10,%rbx
   131cb:	49 83 c7 10          	add    $0x10,%r15
   131cf:	41 0f 11 0c 24       	movups %xmm1,(%r12)
   131d4:	4c 39 eb             	cmp    %r13,%rbx
   131d7:	75 b7                	jne    13190 <mbedtls_aes_crypt_cbc+0x40>
   131d9:	31 c0                	xor    %eax,%eax
   131db:	48 83 c4 18          	add    $0x18,%rsp
   131df:	5b                   	pop    %rbx
   131e0:	5d                   	pop    %rbp
   131e1:	41 5c                	pop    %r12
   131e3:	41 5d                	pop    %r13
   131e5:	41 5e                	pop    %r14
   131e7:	41 5f                	pop    %r15
   131e9:	c3                   	retq   
   131ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   131f0:	4d 8d 34 11          	lea    (%r9,%rdx,1),%r14
   131f4:	48 85 d2             	test   %rdx,%rdx
   131f7:	74 e0                	je     131d9 <mbedtls_aes_crypt_cbc+0x89>
   131f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13200:	31 c0                	xor    %eax,%eax
   13202:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13208:	8b 14 03             	mov    (%rbx,%rax,1),%edx
   1320b:	41 33 14 04          	xor    (%r12,%rax,1),%edx
   1320f:	41 89 14 07          	mov    %edx,(%r15,%rax,1)
   13213:	48 83 c0 04          	add    $0x4,%rax
   13217:	48 83 f8 10          	cmp    $0x10,%rax
   1321b:	75 eb                	jne    13208 <mbedtls_aes_crypt_cbc+0xb8>
   1321d:	4c 89 f9             	mov    %r15,%rcx
   13220:	4c 89 fa             	mov    %r15,%rdx
   13223:	be 01 00 00 00       	mov    $0x1,%esi
   13228:	48 89 ef             	mov    %rbp,%rdi
   1322b:	e8 90 fe ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   13230:	85 c0                	test   %eax,%eax
   13232:	75 a7                	jne    131db <mbedtls_aes_crypt_cbc+0x8b>
   13234:	f3 41 0f 6f 17       	movdqu (%r15),%xmm2
   13239:	49 83 c7 10          	add    $0x10,%r15
   1323d:	48 83 c3 10          	add    $0x10,%rbx
   13241:	41 0f 11 14 24       	movups %xmm2,(%r12)
   13246:	4d 39 f7             	cmp    %r14,%r15
   13249:	75 b5                	jne    13200 <mbedtls_aes_crypt_cbc+0xb0>
   1324b:	eb 8c                	jmp    131d9 <mbedtls_aes_crypt_cbc+0x89>
   1324d:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13252:	c3                   	retq   
   13253:	b8 de ff ff ff       	mov    $0xffffffde,%eax
   13258:	c3                   	retq   
   13259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013260 <mbedtls_aes_crypt_xts>:
   13260:	f3 0f 1e fa          	endbr64 
   13264:	41 57                	push   %r15
   13266:	41 56                	push   %r14
   13268:	41 55                	push   %r13
   1326a:	41 54                	push   %r12
   1326c:	55                   	push   %rbp
   1326d:	53                   	push   %rbx
   1326e:	48 83 ec 78          	sub    $0x78,%rsp
   13272:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   13277:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1327b:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   13280:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13287:	00 00 
   13289:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1328e:	31 c0                	xor    %eax,%eax
   13290:	83 fe 01             	cmp    $0x1,%esi
   13293:	0f 87 85 02 00 00    	ja     1351e <mbedtls_aes_crypt_xts+0x2be>
   13299:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
   1329d:	48 89 d3             	mov    %rdx,%rbx
   132a0:	48 3d f0 ff ff 00    	cmp    $0xfffff0,%rax
   132a6:	0f 87 67 02 00 00    	ja     13513 <mbedtls_aes_crypt_xts+0x2b3>
   132ac:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   132b1:	48 89 ca             	mov    %rcx,%rdx
   132b4:	41 89 f6             	mov    %esi,%r14d
   132b7:	be 01 00 00 00       	mov    $0x1,%esi
   132bc:	48 81 c7 20 01 00 00 	add    $0x120,%rdi
   132c3:	4c 89 e9             	mov    %r13,%rcx
   132c6:	4d 89 c4             	mov    %r8,%r12
   132c9:	4c 89 cd             	mov    %r9,%rbp
   132cc:	e8 ef fd ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   132d1:	41 89 c7             	mov    %eax,%r15d
   132d4:	85 c0                	test   %eax,%eax
   132d6:	0f 85 e4 00 00 00    	jne    133c0 <mbedtls_aes_crypt_xts+0x160>
   132dc:	48 89 d8             	mov    %rbx,%rax
   132df:	48 c1 eb 04          	shr    $0x4,%rbx
   132e3:	48 83 eb 01          	sub    $0x1,%rbx
   132e7:	83 e0 0f             	and    $0xf,%eax
   132ea:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   132ef:	44 89 f0             	mov    %r14d,%eax
   132f2:	41 0f 95 c7          	setne  %r15b
   132f6:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
   132fb:	83 f0 01             	xor    $0x1,%eax
   132fe:	41 21 c7             	and    %eax,%r15d
   13301:	44 88 7c 24 18       	mov    %r15b,0x18(%rsp)
   13306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1330d:	00 00 00 
   13310:	48 85 db             	test   %rbx,%rbx
   13313:	75 07                	jne    1331c <mbedtls_aes_crypt_xts+0xbc>
   13315:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   1331a:	75 7c                	jne    13398 <mbedtls_aes_crypt_xts+0x138>
   1331c:	31 c0                	xor    %eax,%eax
   1331e:	66 90                	xchg   %ax,%ax
   13320:	41 8b 14 04          	mov    (%r12,%rax,1),%edx
   13324:	41 33 54 05 00       	xor    0x0(%r13,%rax,1),%edx
   13329:	41 89 14 06          	mov    %edx,(%r14,%rax,1)
   1332d:	48 83 c0 04          	add    $0x4,%rax
   13331:	48 83 f8 10          	cmp    $0x10,%rax
   13335:	75 e9                	jne    13320 <mbedtls_aes_crypt_xts+0xc0>
   13337:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1333b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   13340:	4c 89 f1             	mov    %r14,%rcx
   13343:	4c 89 f2             	mov    %r14,%rdx
   13346:	e8 75 fd ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   1334b:	41 89 c7             	mov    %eax,%r15d
   1334e:	85 c0                	test   %eax,%eax
   13350:	75 6e                	jne    133c0 <mbedtls_aes_crypt_xts+0x160>
   13352:	31 d2                	xor    %edx,%edx
   13354:	0f 1f 40 00          	nopl   0x0(%rax)
   13358:	41 8b 04 16          	mov    (%r14,%rdx,1),%eax
   1335c:	41 33 44 15 00       	xor    0x0(%r13,%rdx,1),%eax
   13361:	89 44 15 00          	mov    %eax,0x0(%rbp,%rdx,1)
   13365:	48 83 c2 04          	add    $0x4,%rdx
   13369:	48 83 fa 10          	cmp    $0x10,%rdx
   1336d:	75 e9                	jne    13358 <mbedtls_aes_crypt_xts+0xf8>
   1336f:	4c 89 ee             	mov    %r13,%rsi
   13372:	4c 89 ef             	mov    %r13,%rdi
   13375:	48 83 eb 01          	sub    $0x1,%rbx
   13379:	49 83 c4 10          	add    $0x10,%r12
   1337d:	e8 8e ed ff ff       	callq  12110 <mbedtls_gf128mul_x_ble>
   13382:	4c 8d 55 10          	lea    0x10(%rbp),%r10
   13386:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   1338a:	74 64                	je     133f0 <mbedtls_aes_crypt_xts+0x190>
   1338c:	4c 89 d5             	mov    %r10,%rbp
   1338f:	e9 7c ff ff ff       	jmpq   13310 <mbedtls_aes_crypt_xts+0xb0>
   13394:	0f 1f 40 00          	nopl   0x0(%rax)
   13398:	66 0f 6f 44 24 30    	movdqa 0x30(%rsp),%xmm0
   1339e:	4c 89 ee             	mov    %r13,%rsi
   133a1:	4c 89 ef             	mov    %r13,%rdi
   133a4:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   133a9:	e8 62 ed ff ff       	callq  12110 <mbedtls_gf128mul_x_ble>
   133ae:	e9 69 ff ff ff       	jmpq   1331c <mbedtls_aes_crypt_xts+0xbc>
   133b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   133b8:	41 89 c7             	mov    %eax,%r15d
   133bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   133c0:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   133c5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   133cc:	00 00 
   133ce:	0f 85 55 01 00 00    	jne    13529 <mbedtls_aes_crypt_xts+0x2c9>
   133d4:	48 83 c4 78          	add    $0x78,%rsp
   133d8:	44 89 f8             	mov    %r15d,%eax
   133db:	5b                   	pop    %rbx
   133dc:	5d                   	pop    %rbp
   133dd:	41 5c                	pop    %r12
   133df:	41 5d                	pop    %r13
   133e1:	41 5e                	pop    %r14
   133e3:	41 5f                	pop    %r15
   133e5:	c3                   	retq   
   133e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   133ed:	00 00 00 
   133f0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   133f5:	48 85 c9             	test   %rcx,%rcx
   133f8:	74 c6                	je     133c0 <mbedtls_aes_crypt_xts+0x160>
   133fa:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   133fe:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
   13403:	4a 8d 34 11          	lea    (%rcx,%r10,1),%rsi
   13407:	85 c0                	test   %eax,%eax
   13409:	4c 89 d0             	mov    %r10,%rax
   1340c:	49 0f 45 dd          	cmovne %r13,%rbx
   13410:	0f b6 50 f0          	movzbl -0x10(%rax),%edx
   13414:	48 83 c0 01          	add    $0x1,%rax
   13418:	88 50 ff             	mov    %dl,-0x1(%rax)
   1341b:	48 39 f0             	cmp    %rsi,%rax
   1341e:	75 f0                	jne    13410 <mbedtls_aes_crypt_xts+0x1b0>
   13420:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   13425:	83 e2 0c             	and    $0xc,%edx
   13428:	74 2f                	je     13459 <mbedtls_aes_crypt_xts+0x1f9>
   1342a:	b8 04 00 00 00       	mov    $0x4,%eax
   1342f:	48 8d 74 24 4c       	lea    0x4c(%rsp),%rsi
   13434:	0f 1f 40 00          	nopl   0x0(%rax)
   13438:	41 8b 54 04 fc       	mov    -0x4(%r12,%rax,1),%edx
   1343d:	33 54 03 fc          	xor    -0x4(%rbx,%rax,1),%edx
   13441:	89 14 06             	mov    %edx,(%rsi,%rax,1)
   13444:	48 89 c2             	mov    %rax,%rdx
   13447:	48 8d 40 04          	lea    0x4(%rax),%rax
   1344b:	48 39 44 24 20       	cmp    %rax,0x20(%rsp)
   13450:	73 e6                	jae    13438 <mbedtls_aes_crypt_xts+0x1d8>
   13452:	48 39 54 24 20       	cmp    %rdx,0x20(%rsp)
   13457:	76 17                	jbe    13470 <mbedtls_aes_crypt_xts+0x210>
   13459:	41 0f b6 04 14       	movzbl (%r12,%rdx,1),%eax
   1345e:	32 04 13             	xor    (%rbx,%rdx,1),%al
   13461:	41 88 04 16          	mov    %al,(%r14,%rdx,1)
   13465:	48 83 c2 01          	add    $0x1,%rdx
   13469:	48 39 54 24 20       	cmp    %rdx,0x20(%rsp)
   1346e:	77 e9                	ja     13459 <mbedtls_aes_crypt_xts+0x1f9>
   13470:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   13475:	be 10 00 00 00       	mov    $0x10,%esi
   1347a:	31 d2                	xor    %edx,%edx
   1347c:	48 29 c6             	sub    %rax,%rsi
   1347f:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
   13483:	4d 8d 1c 06          	lea    (%r14,%rax,1),%r11
   13487:	48 01 c5             	add    %rax,%rbp
   1348a:	b8 04 00 00 00       	mov    $0x4,%eax
   1348f:	48 83 fe 03          	cmp    $0x3,%rsi
   13493:	76 21                	jbe    134b6 <mbedtls_aes_crypt_xts+0x256>
   13495:	0f 1f 00             	nopl   (%rax)
   13498:	8b 54 05 fc          	mov    -0x4(%rbp,%rax,1),%edx
   1349c:	33 54 07 fc          	xor    -0x4(%rdi,%rax,1),%edx
   134a0:	41 89 54 03 fc       	mov    %edx,-0x4(%r11,%rax,1)
   134a5:	48 89 c2             	mov    %rax,%rdx
   134a8:	48 8d 40 04          	lea    0x4(%rax),%rax
   134ac:	48 39 c6             	cmp    %rax,%rsi
   134af:	73 e7                	jae    13498 <mbedtls_aes_crypt_xts+0x238>
   134b1:	48 39 d6             	cmp    %rdx,%rsi
   134b4:	76 15                	jbe    134cb <mbedtls_aes_crypt_xts+0x26b>
   134b6:	0f b6 44 15 00       	movzbl 0x0(%rbp,%rdx,1),%eax
   134bb:	32 04 17             	xor    (%rdi,%rdx,1),%al
   134be:	41 88 04 13          	mov    %al,(%r11,%rdx,1)
   134c2:	48 83 c2 01          	add    $0x1,%rdx
   134c6:	48 39 d6             	cmp    %rdx,%rsi
   134c9:	77 eb                	ja     134b6 <mbedtls_aes_crypt_xts+0x256>
   134cb:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   134cf:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   134d4:	4c 89 f1             	mov    %r14,%rcx
   134d7:	4c 89 f2             	mov    %r14,%rdx
   134da:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   134df:	e8 dc fb ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   134e4:	85 c0                	test   %eax,%eax
   134e6:	0f 85 cc fe ff ff    	jne    133b8 <mbedtls_aes_crypt_xts+0x158>
   134ec:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   134f1:	31 c0                	xor    %eax,%eax
   134f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   134f8:	41 8b 14 06          	mov    (%r14,%rax,1),%edx
   134fc:	33 14 03             	xor    (%rbx,%rax,1),%edx
   134ff:	41 89 54 02 f0       	mov    %edx,-0x10(%r10,%rax,1)
   13504:	48 83 c0 04          	add    $0x4,%rax
   13508:	48 83 f8 10          	cmp    $0x10,%rax
   1350c:	75 ea                	jne    134f8 <mbedtls_aes_crypt_xts+0x298>
   1350e:	e9 ad fe ff ff       	jmpq   133c0 <mbedtls_aes_crypt_xts+0x160>
   13513:	41 bf de ff ff ff    	mov    $0xffffffde,%r15d
   13519:	e9 a2 fe ff ff       	jmpq   133c0 <mbedtls_aes_crypt_xts+0x160>
   1351e:	41 bf df ff ff ff    	mov    $0xffffffdf,%r15d
   13524:	e9 97 fe ff ff       	jmpq   133c0 <mbedtls_aes_crypt_xts+0x160>
   13529:	e8 32 fd fe ff       	callq  3260 <__stack_chk_fail@plt>
   1352e:	66 90                	xchg   %ax,%ax

0000000000013530 <mbedtls_aes_crypt_cfb128>:
   13530:	f3 0f 1e fa          	endbr64 
   13534:	41 57                	push   %r15
   13536:	41 56                	push   %r14
   13538:	41 55                	push   %r13
   1353a:	41 54                	push   %r12
   1353c:	55                   	push   %rbp
   1353d:	53                   	push   %rbx
   1353e:	48 83 ec 18          	sub    $0x18,%rsp
   13542:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   13547:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1354c:	83 fe 01             	cmp    $0x1,%esi
   1354f:	0f 87 fc 00 00 00    	ja     13651 <mbedtls_aes_crypt_cfb128+0x121>
   13555:	48 8b 19             	mov    (%rcx),%rbx
   13558:	48 83 fb 0f          	cmp    $0xf,%rbx
   1355c:	0f 87 ef 00 00 00    	ja     13651 <mbedtls_aes_crypt_cfb128+0x121>
   13562:	49 89 fd             	mov    %rdi,%r13
   13565:	4d 89 c7             	mov    %r8,%r15
   13568:	4c 89 cd             	mov    %r9,%rbp
   1356b:	85 f6                	test   %esi,%esi
   1356d:	75 71                	jne    135e0 <mbedtls_aes_crypt_cfb128+0xb0>
   1356f:	48 85 d2             	test   %rdx,%rdx
   13572:	0f 84 c0 00 00 00    	je     13638 <mbedtls_aes_crypt_cfb128+0x108>
   13578:	4d 8d 34 11          	lea    (%r9,%rdx,1),%r14
   1357c:	eb 2e                	jmp    135ac <mbedtls_aes_crypt_cfb128+0x7c>
   1357e:	66 90                	xchg   %ax,%ax
   13580:	49 8d 04 1f          	lea    (%r15,%rbx,1),%rax
   13584:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   13588:	48 83 c5 01          	add    $0x1,%rbp
   1358c:	49 83 c4 01          	add    $0x1,%r12
   13590:	0f b6 08             	movzbl (%rax),%ecx
   13593:	48 83 c3 01          	add    $0x1,%rbx
   13597:	83 e3 0f             	and    $0xf,%ebx
   1359a:	31 d1                	xor    %edx,%ecx
   1359c:	41 88 4c 24 ff       	mov    %cl,-0x1(%r12)
   135a1:	88 10                	mov    %dl,(%rax)
   135a3:	4c 39 f5             	cmp    %r14,%rbp
   135a6:	0f 84 8c 00 00 00    	je     13638 <mbedtls_aes_crypt_cfb128+0x108>
   135ac:	48 85 db             	test   %rbx,%rbx
   135af:	75 cf                	jne    13580 <mbedtls_aes_crypt_cfb128+0x50>
   135b1:	4c 89 f9             	mov    %r15,%rcx
   135b4:	4c 89 fa             	mov    %r15,%rdx
   135b7:	be 01 00 00 00       	mov    $0x1,%esi
   135bc:	4c 89 ef             	mov    %r13,%rdi
   135bf:	e8 fc fa ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   135c4:	85 c0                	test   %eax,%eax
   135c6:	74 b8                	je     13580 <mbedtls_aes_crypt_cfb128+0x50>
   135c8:	48 83 c4 18          	add    $0x18,%rsp
   135cc:	5b                   	pop    %rbx
   135cd:	5d                   	pop    %rbp
   135ce:	41 5c                	pop    %r12
   135d0:	41 5d                	pop    %r13
   135d2:	41 5e                	pop    %r14
   135d4:	41 5f                	pop    %r15
   135d6:	c3                   	retq   
   135d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   135de:	00 00 
   135e0:	4d 8d 34 11          	lea    (%r9,%rdx,1),%r14
   135e4:	48 85 d2             	test   %rdx,%rdx
   135e7:	75 2c                	jne    13615 <mbedtls_aes_crypt_cfb128+0xe5>
   135e9:	eb 4d                	jmp    13638 <mbedtls_aes_crypt_cfb128+0x108>
   135eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   135f0:	49 8d 14 1f          	lea    (%r15,%rbx,1),%rdx
   135f4:	48 83 c5 01          	add    $0x1,%rbp
   135f8:	49 83 c4 01          	add    $0x1,%r12
   135fc:	48 83 c3 01          	add    $0x1,%rbx
   13600:	0f b6 02             	movzbl (%rdx),%eax
   13603:	32 45 ff             	xor    -0x1(%rbp),%al
   13606:	83 e3 0f             	and    $0xf,%ebx
   13609:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   1360e:	88 02                	mov    %al,(%rdx)
   13610:	4c 39 f5             	cmp    %r14,%rbp
   13613:	74 23                	je     13638 <mbedtls_aes_crypt_cfb128+0x108>
   13615:	48 85 db             	test   %rbx,%rbx
   13618:	75 d6                	jne    135f0 <mbedtls_aes_crypt_cfb128+0xc0>
   1361a:	4c 89 f9             	mov    %r15,%rcx
   1361d:	4c 89 fa             	mov    %r15,%rdx
   13620:	be 01 00 00 00       	mov    $0x1,%esi
   13625:	4c 89 ef             	mov    %r13,%rdi
   13628:	e8 93 fa ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   1362d:	85 c0                	test   %eax,%eax
   1362f:	74 bf                	je     135f0 <mbedtls_aes_crypt_cfb128+0xc0>
   13631:	eb 95                	jmp    135c8 <mbedtls_aes_crypt_cfb128+0x98>
   13633:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13638:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1363d:	48 89 18             	mov    %rbx,(%rax)
   13640:	48 83 c4 18          	add    $0x18,%rsp
   13644:	31 c0                	xor    %eax,%eax
   13646:	5b                   	pop    %rbx
   13647:	5d                   	pop    %rbp
   13648:	41 5c                	pop    %r12
   1364a:	41 5d                	pop    %r13
   1364c:	41 5e                	pop    %r14
   1364e:	41 5f                	pop    %r15
   13650:	c3                   	retq   
   13651:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13656:	e9 6d ff ff ff       	jmpq   135c8 <mbedtls_aes_crypt_cfb128+0x98>
   1365b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000013660 <mbedtls_aes_crypt_cfb8>:
   13660:	f3 0f 1e fa          	endbr64 
   13664:	41 57                	push   %r15
   13666:	41 56                	push   %r14
   13668:	41 55                	push   %r13
   1366a:	41 54                	push   %r12
   1366c:	55                   	push   %rbp
   1366d:	53                   	push   %rbx
   1366e:	48 83 ec 28          	sub    $0x28,%rsp
   13672:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13679:	00 00 
   1367b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   13680:	31 c0                	xor    %eax,%eax
   13682:	83 fe 01             	cmp    $0x1,%esi
   13685:	0f 87 a1 00 00 00    	ja     1372c <mbedtls_aes_crypt_cfb8+0xcc>
   1368b:	48 85 d2             	test   %rdx,%rdx
   1368e:	74 7b                	je     1370b <mbedtls_aes_crypt_cfb8+0xab>
   13690:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
   13694:	49 89 fe             	mov    %rdi,%r14
   13697:	41 89 f5             	mov    %esi,%r13d
   1369a:	48 89 cb             	mov    %rcx,%rbx
   1369d:	4d 89 c7             	mov    %r8,%r15
   136a0:	4c 89 cd             	mov    %r9,%rbp
   136a3:	4d 8d 24 11          	lea    (%r9,%rdx,1),%r12
   136a7:	eb 1c                	jmp    136c5 <mbedtls_aes_crypt_cfb8+0x65>
   136a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   136b0:	88 44 24 10          	mov    %al,0x10(%rsp)
   136b4:	f3 0f 6f 44 24 01    	movdqu 0x1(%rsp),%xmm0
   136ba:	88 55 ff             	mov    %dl,-0x1(%rbp)
   136bd:	0f 11 03             	movups %xmm0,(%rbx)
   136c0:	49 39 ec             	cmp    %rbp,%r12
   136c3:	74 46                	je     1370b <mbedtls_aes_crypt_cfb8+0xab>
   136c5:	48 89 d9             	mov    %rbx,%rcx
   136c8:	48 89 da             	mov    %rbx,%rdx
   136cb:	be 01 00 00 00       	mov    $0x1,%esi
   136d0:	4c 89 f7             	mov    %r14,%rdi
   136d3:	0f 29 04 24          	movaps %xmm0,(%rsp)
   136d7:	e8 e4 f9 ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   136dc:	85 c0                	test   %eax,%eax
   136de:	75 2d                	jne    1370d <mbedtls_aes_crypt_cfb8+0xad>
   136e0:	41 0f b6 07          	movzbl (%r15),%eax
   136e4:	0f b6 13             	movzbl (%rbx),%edx
   136e7:	49 83 c7 01          	add    $0x1,%r15
   136eb:	48 83 c5 01          	add    $0x1,%rbp
   136ef:	31 c2                	xor    %eax,%edx
   136f1:	45 85 ed             	test   %r13d,%r13d
   136f4:	74 ba                	je     136b0 <mbedtls_aes_crypt_cfb8+0x50>
   136f6:	88 54 24 10          	mov    %dl,0x10(%rsp)
   136fa:	f3 0f 6f 44 24 01    	movdqu 0x1(%rsp),%xmm0
   13700:	88 55 ff             	mov    %dl,-0x1(%rbp)
   13703:	0f 11 03             	movups %xmm0,(%rbx)
   13706:	49 39 ec             	cmp    %rbp,%r12
   13709:	75 ba                	jne    136c5 <mbedtls_aes_crypt_cfb8+0x65>
   1370b:	31 c0                	xor    %eax,%eax
   1370d:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   13712:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13719:	00 00 
   1371b:	75 16                	jne    13733 <mbedtls_aes_crypt_cfb8+0xd3>
   1371d:	48 83 c4 28          	add    $0x28,%rsp
   13721:	5b                   	pop    %rbx
   13722:	5d                   	pop    %rbp
   13723:	41 5c                	pop    %r12
   13725:	41 5d                	pop    %r13
   13727:	41 5e                	pop    %r14
   13729:	41 5f                	pop    %r15
   1372b:	c3                   	retq   
   1372c:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13731:	eb da                	jmp    1370d <mbedtls_aes_crypt_cfb8+0xad>
   13733:	e8 28 fb fe ff       	callq  3260 <__stack_chk_fail@plt>
   13738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1373f:	00 

0000000000013740 <mbedtls_aes_crypt_ofb>:
   13740:	f3 0f 1e fa          	endbr64 
   13744:	41 57                	push   %r15
   13746:	41 56                	push   %r14
   13748:	41 55                	push   %r13
   1374a:	41 54                	push   %r12
   1374c:	55                   	push   %rbp
   1374d:	53                   	push   %rbx
   1374e:	48 83 ec 18          	sub    $0x18,%rsp
   13752:	48 8b 1a             	mov    (%rdx),%rbx
   13755:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1375a:	48 83 fb 0f          	cmp    $0xf,%rbx
   1375e:	0f 87 85 00 00 00    	ja     137e9 <mbedtls_aes_crypt_ofb+0xa9>
   13764:	48 85 f6             	test   %rsi,%rsi
   13767:	74 67                	je     137d0 <mbedtls_aes_crypt_ofb+0x90>
   13769:	48 89 fd             	mov    %rdi,%rbp
   1376c:	49 89 cf             	mov    %rcx,%r15
   1376f:	4d 89 c6             	mov    %r8,%r14
   13772:	4d 89 cd             	mov    %r9,%r13
   13775:	4d 8d 24 31          	lea    (%r9,%rsi,1),%r12
   13779:	eb 26                	jmp    137a1 <mbedtls_aes_crypt_ofb+0x61>
   1377b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13780:	49 83 c6 01          	add    $0x1,%r14
   13784:	41 0f b6 04 1f       	movzbl (%r15,%rbx,1),%eax
   13789:	49 83 c5 01          	add    $0x1,%r13
   1378d:	48 83 c3 01          	add    $0x1,%rbx
   13791:	41 32 46 ff          	xor    -0x1(%r14),%al
   13795:	83 e3 0f             	and    $0xf,%ebx
   13798:	41 88 45 ff          	mov    %al,-0x1(%r13)
   1379c:	4d 39 ec             	cmp    %r13,%r12
   1379f:	74 2f                	je     137d0 <mbedtls_aes_crypt_ofb+0x90>
   137a1:	48 85 db             	test   %rbx,%rbx
   137a4:	75 da                	jne    13780 <mbedtls_aes_crypt_ofb+0x40>
   137a6:	4c 89 f9             	mov    %r15,%rcx
   137a9:	4c 89 fa             	mov    %r15,%rdx
   137ac:	be 01 00 00 00       	mov    $0x1,%esi
   137b1:	48 89 ef             	mov    %rbp,%rdi
   137b4:	e8 07 f9 ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   137b9:	85 c0                	test   %eax,%eax
   137bb:	74 c3                	je     13780 <mbedtls_aes_crypt_ofb+0x40>
   137bd:	48 83 c4 18          	add    $0x18,%rsp
   137c1:	5b                   	pop    %rbx
   137c2:	5d                   	pop    %rbp
   137c3:	41 5c                	pop    %r12
   137c5:	41 5d                	pop    %r13
   137c7:	41 5e                	pop    %r14
   137c9:	41 5f                	pop    %r15
   137cb:	c3                   	retq   
   137cc:	0f 1f 40 00          	nopl   0x0(%rax)
   137d0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   137d5:	48 89 18             	mov    %rbx,(%rax)
   137d8:	48 83 c4 18          	add    $0x18,%rsp
   137dc:	31 c0                	xor    %eax,%eax
   137de:	5b                   	pop    %rbx
   137df:	5d                   	pop    %rbp
   137e0:	41 5c                	pop    %r12
   137e2:	41 5d                	pop    %r13
   137e4:	41 5e                	pop    %r14
   137e6:	41 5f                	pop    %r15
   137e8:	c3                   	retq   
   137e9:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   137ee:	eb cd                	jmp    137bd <mbedtls_aes_crypt_ofb+0x7d>

00000000000137f0 <mbedtls_aes_crypt_ctr>:
   137f0:	f3 0f 1e fa          	endbr64 
   137f4:	41 57                	push   %r15
   137f6:	41 56                	push   %r14
   137f8:	41 55                	push   %r13
   137fa:	41 54                	push   %r12
   137fc:	55                   	push   %rbp
   137fd:	53                   	push   %rbx
   137fe:	48 83 ec 28          	sub    $0x28,%rsp
   13802:	48 8b 1a             	mov    (%rdx),%rbx
   13805:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1380a:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
   1380f:	48 83 fb 0f          	cmp    $0xf,%rbx
   13813:	0f 87 8a 00 00 00    	ja     138a3 <mbedtls_aes_crypt_ctr+0xb3>
   13819:	48 85 f6             	test   %rsi,%rsi
   1381c:	0f 84 9e 00 00 00    	je     138c0 <mbedtls_aes_crypt_ctr+0xd0>
   13822:	48 8d 41 0f          	lea    0xf(%rcx),%rax
   13826:	49 89 fd             	mov    %rdi,%r13
   13829:	49 89 cf             	mov    %rcx,%r15
   1382c:	4c 89 cd             	mov    %r9,%rbp
   1382f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13834:	4d 8d 34 31          	lea    (%r9,%rsi,1),%r14
   13838:	eb 27                	jmp    13861 <mbedtls_aes_crypt_ctr+0x71>
   1383a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13840:	48 83 c5 01          	add    $0x1,%rbp
   13844:	41 0f b6 04 18       	movzbl (%r8,%rbx,1),%eax
   13849:	49 83 c4 01          	add    $0x1,%r12
   1384d:	48 83 c3 01          	add    $0x1,%rbx
   13851:	32 45 ff             	xor    -0x1(%rbp),%al
   13854:	83 e3 0f             	and    $0xf,%ebx
   13857:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   1385c:	49 39 ee             	cmp    %rbp,%r14
   1385f:	74 5f                	je     138c0 <mbedtls_aes_crypt_ctr+0xd0>
   13861:	48 85 db             	test   %rbx,%rbx
   13864:	75 da                	jne    13840 <mbedtls_aes_crypt_ctr+0x50>
   13866:	4c 89 c1             	mov    %r8,%rcx
   13869:	4c 89 fa             	mov    %r15,%rdx
   1386c:	be 01 00 00 00       	mov    $0x1,%esi
   13871:	4c 89 ef             	mov    %r13,%rdi
   13874:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   13879:	e8 42 f8 ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   1387e:	85 c0                	test   %eax,%eax
   13880:	75 26                	jne    138a8 <mbedtls_aes_crypt_ctr+0xb8>
   13882:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   13887:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1388c:	eb 05                	jmp    13893 <mbedtls_aes_crypt_ctr+0xa3>
   1388e:	66 90                	xchg   %ax,%ax
   13890:	48 89 c2             	mov    %rax,%rdx
   13893:	80 02 01             	addb   $0x1,(%rdx)
   13896:	75 a8                	jne    13840 <mbedtls_aes_crypt_ctr+0x50>
   13898:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   1389c:	49 39 d7             	cmp    %rdx,%r15
   1389f:	75 ef                	jne    13890 <mbedtls_aes_crypt_ctr+0xa0>
   138a1:	eb 9d                	jmp    13840 <mbedtls_aes_crypt_ctr+0x50>
   138a3:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   138a8:	48 83 c4 28          	add    $0x28,%rsp
   138ac:	5b                   	pop    %rbx
   138ad:	5d                   	pop    %rbp
   138ae:	41 5c                	pop    %r12
   138b0:	41 5d                	pop    %r13
   138b2:	41 5e                	pop    %r14
   138b4:	41 5f                	pop    %r15
   138b6:	c3                   	retq   
   138b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   138be:	00 00 
   138c0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   138c5:	48 89 18             	mov    %rbx,(%rax)
   138c8:	48 83 c4 28          	add    $0x28,%rsp
   138cc:	31 c0                	xor    %eax,%eax
   138ce:	5b                   	pop    %rbx
   138cf:	5d                   	pop    %rbp
   138d0:	41 5c                	pop    %r12
   138d2:	41 5d                	pop    %r13
   138d4:	41 5e                	pop    %r14
   138d6:	41 5f                	pop    %r15
   138d8:	c3                   	retq   
   138d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000138e0 <mbedtls_aes_self_test>:
   138e0:	f3 0f 1e fa          	endbr64 
   138e4:	41 57                	push   %r15
   138e6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   138ea:	89 fe                	mov    %edi,%esi
   138ec:	b9 24 00 00 00       	mov    $0x24,%ecx
   138f1:	41 56                	push   %r14
   138f3:	41 55                	push   %r13
   138f5:	41 54                	push   %r12
   138f7:	55                   	push   %rbp
   138f8:	53                   	push   %rbx
   138f9:	48 81 ec 58 04 00 00 	sub    $0x458,%rsp
   13900:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
   13904:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
   13909:	4c 89 ff             	mov    %r15,%rdi
   1390c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13913:	00 00 
   13915:	48 89 84 24 48 04 00 	mov    %rax,0x448(%rsp)
   1391c:	00 
   1391d:	31 c0                	xor    %eax,%eax
   1391f:	0f 29 84 24 e0 03 00 	movaps %xmm0,0x3e0(%rsp)
   13926:	00 
   13927:	0f 29 84 24 f0 03 00 	movaps %xmm0,0x3f0(%rsp)
   1392e:	00 
   1392f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13932:	85 f6                	test   %esi,%esi
   13934:	0f 85 e6 03 00 00    	jne    13d20 <mbedtls_aes_self_test+0x440>
   1393a:	48 8d 84 24 e0 03 00 	lea    0x3e0(%rsp),%rax
   13941:	00 
   13942:	45 31 ed             	xor    %r13d,%r13d
   13945:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   1394c:	00 
   1394d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   13952:	45 89 ec             	mov    %r13d,%r12d
   13955:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13959:	44 89 ed             	mov    %r13d,%ebp
   1395c:	41 d1 fc             	sar    %r12d
   1395f:	83 e5 01             	and    $0x1,%ebp
   13962:	41 8d 5c 24 02       	lea    0x2(%r12),%ebx
   13967:	c1 e3 06             	shl    $0x6,%ebx
   1396a:	85 c0                	test   %eax,%eax
   1396c:	74 29                	je     13997 <mbedtls_aes_self_test+0xb7>
   1396e:	85 ed                	test   %ebp,%ebp
   13970:	48 8d 05 87 d7 00 00 	lea    0xd787(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   13977:	89 da                	mov    %ebx,%edx
   13979:	bf 01 00 00 00       	mov    $0x1,%edi
   1397e:	48 8d 0d 54 d7 00 00 	lea    0xd754(%rip),%rcx        # 210d9 <_IO_stdin_used+0xd9>
   13985:	48 8d 35 8d 09 01 00 	lea    0x1098d(%rip),%rsi        # 24319 <K+0x299>
   1398c:	48 0f 44 c8          	cmove  %rax,%rcx
   13990:	31 c0                	xor    %eax,%eax
   13992:	e8 a9 f9 fe ff       	callq  3340 <__printf_chk@plt>
   13997:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1399b:	4d 63 e4             	movslq %r12d,%r12
   1399e:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   139a3:	89 da                	mov    %ebx,%edx
   139a5:	41 0f 29 06          	movaps %xmm0,(%r14)
   139a9:	49 c1 e4 04          	shl    $0x4,%r12
   139ad:	4c 89 ff             	mov    %r15,%rdi
   139b0:	85 ed                	test   %ebp,%ebp
   139b2:	0f 85 50 03 00 00    	jne    13d08 <mbedtls_aes_self_test+0x428>
   139b8:	e8 d3 eb ff ff       	callq  12590 <mbedtls_aes_setkey_dec>
   139bd:	41 89 c0             	mov    %eax,%r8d
   139c0:	48 8d 05 d9 10 01 00 	lea    0x110d9(%rip),%rax        # 24aa0 <aes_test_ecb_dec>
   139c7:	49 01 c4             	add    %rax,%r12
   139ca:	41 83 f8 8e          	cmp    $0xffffff8e,%r8d
   139ce:	0f 85 9c 02 00 00    	jne    13c70 <mbedtls_aes_self_test+0x390>
   139d4:	81 fb c0 00 00 00    	cmp    $0xc0,%ebx
   139da:	0f 85 90 02 00 00    	jne    13c70 <mbedtls_aes_self_test+0x390>
   139e0:	48 8d 3d 0f d7 00 00 	lea    0xd70f(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
   139e7:	e8 14 f8 fe ff       	callq  3200 <puts@plt>
   139ec:	41 83 c5 01          	add    $0x1,%r13d
   139f0:	41 83 fd 06          	cmp    $0x6,%r13d
   139f4:	0f 85 58 ff ff ff    	jne    13952 <mbedtls_aes_self_test+0x72>
   139fa:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
   139ff:	45 85 d2             	test   %r10d,%r10d
   13a02:	0f 85 d1 03 00 00    	jne    13dd9 <mbedtls_aes_self_test+0x4f9>
   13a08:	48 8d 84 24 b0 03 00 	lea    0x3b0(%rsp),%rax
   13a0f:	00 
   13a10:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   13a17:	00 
   13a18:	48 8d ac 24 a0 03 00 	lea    0x3a0(%rsp),%rbp
   13a1f:	00 
   13a20:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13a25:	8b 44 24 10          	mov    0x10(%rsp),%eax
   13a29:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
   13a2e:	41 89 c4             	mov    %eax,%r12d
   13a31:	83 e0 01             	and    $0x1,%eax
   13a34:	41 d1 fc             	sar    %r12d
   13a37:	41 89 c5             	mov    %eax,%r13d
   13a3a:	41 8d 5c 24 02       	lea    0x2(%r12),%ebx
   13a3f:	c1 e3 06             	shl    $0x6,%ebx
   13a42:	45 85 c9             	test   %r9d,%r9d
   13a45:	74 29                	je     13a70 <mbedtls_aes_self_test+0x190>
   13a47:	85 c0                	test   %eax,%eax
   13a49:	48 8d 0d 89 d6 00 00 	lea    0xd689(%rip),%rcx        # 210d9 <_IO_stdin_used+0xd9>
   13a50:	89 da                	mov    %ebx,%edx
   13a52:	bf 01 00 00 00       	mov    $0x1,%edi
   13a57:	48 8d 05 a0 d6 00 00 	lea    0xd6a0(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   13a5e:	48 8d 35 c9 08 01 00 	lea    0x108c9(%rip),%rsi        # 2432e <K+0x2ae>
   13a65:	48 0f 44 c8          	cmove  %rax,%rcx
   13a69:	31 c0                	xor    %eax,%eax
   13a6b:	e8 d0 f8 fe ff       	callq  3340 <__printf_chk@plt>
   13a70:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13a75:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13a79:	4d 63 e4             	movslq %r12d,%r12
   13a7c:	89 da                	mov    %ebx,%edx
   13a7e:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   13a83:	0f 29 45 00          	movaps %xmm0,0x0(%rbp)
   13a87:	49 c1 e4 04          	shl    $0x4,%r12
   13a8b:	4c 89 ff             	mov    %r15,%rdi
   13a8e:	0f 29 00             	movaps %xmm0,(%rax)
   13a91:	41 0f 29 06          	movaps %xmm0,(%r14)
   13a95:	45 85 ed             	test   %r13d,%r13d
   13a98:	0f 84 aa 02 00 00    	je     13d48 <mbedtls_aes_self_test+0x468>
   13a9e:	e8 bd e7 ff ff       	callq  12260 <mbedtls_aes_setkey_enc>
   13aa3:	48 8d 0d 36 0f 01 00 	lea    0x10f36(%rip),%rcx        # 249e0 <aes_test_cbc_enc>
   13aaa:	49 01 cc             	add    %rcx,%r12
   13aad:	83 f8 8e             	cmp    $0xffffff8e,%eax
   13ab0:	0f 85 aa 02 00 00    	jne    13d60 <mbedtls_aes_self_test+0x480>
   13ab6:	81 fb c0 00 00 00    	cmp    $0xc0,%ebx
   13abc:	0f 85 9e 02 00 00    	jne    13d60 <mbedtls_aes_self_test+0x480>
   13ac2:	48 8d 3d 2d d6 00 00 	lea    0xd62d(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
   13ac9:	e8 32 f7 fe ff       	callq  3200 <puts@plt>
   13ace:	83 44 24 10 01       	addl   $0x1,0x10(%rsp)
   13ad3:	8b 44 24 10          	mov    0x10(%rsp),%eax
   13ad7:	83 f8 06             	cmp    $0x6,%eax
   13ada:	0f 85 45 ff ff ff    	jne    13a25 <mbedtls_aes_self_test+0x145>
   13ae0:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   13ae4:	85 ff                	test   %edi,%edi
   13ae6:	0f 85 2b 09 00 00    	jne    14417 <mbedtls_aes_self_test+0xb37>
   13aec:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   13af1:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   13af6:	45 31 e4             	xor    %r12d,%r12d
   13af9:	4c 89 f5             	mov    %r14,%rbp
   13afc:	45 89 e0             	mov    %r12d,%r8d
   13aff:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   13b03:	45 89 e6             	mov    %r12d,%r14d
   13b06:	41 d1 f8             	sar    %r8d
   13b09:	41 83 e6 01          	and    $0x1,%r14d
   13b0d:	41 8d 58 02          	lea    0x2(%r8),%ebx
   13b11:	c1 e3 06             	shl    $0x6,%ebx
   13b14:	85 f6                	test   %esi,%esi
   13b16:	74 34                	je     13b4c <mbedtls_aes_self_test+0x26c>
   13b18:	45 85 f6             	test   %r14d,%r14d
   13b1b:	89 da                	mov    %ebx,%edx
   13b1d:	bf 01 00 00 00       	mov    $0x1,%edi
   13b22:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   13b27:	48 8d 05 ab d5 00 00 	lea    0xd5ab(%rip),%rax        # 210d9 <_IO_stdin_used+0xd9>
   13b2e:	48 8d 0d c9 d5 00 00 	lea    0xd5c9(%rip),%rcx        # 210fe <_IO_stdin_used+0xfe>
   13b35:	48 0f 45 c8          	cmovne %rax,%rcx
   13b39:	48 8d 35 03 08 01 00 	lea    0x10803(%rip),%rsi        # 24343 <K+0x2c3>
   13b40:	31 c0                	xor    %eax,%eax
   13b42:	e8 f9 f7 fe ff       	callq  3340 <__printf_chk@plt>
   13b47:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
   13b4c:	4d 63 c0             	movslq %r8d,%r8
   13b4f:	b9 20 00 00 00       	mov    $0x20,%ecx
   13b54:	4c 89 ef             	mov    %r13,%rdi
   13b57:	48 b8 00 01 02 03 04 	movabs $0x706050403020100,%rax
   13b5e:	05 06 07 
   13b61:	4c 89 c6             	mov    %r8,%rsi
   13b64:	48 89 84 24 a0 03 00 	mov    %rax,0x3a0(%rsp)
   13b6b:	00 
   13b6c:	48 ba 08 09 0a 0b 0c 	movabs $0xf0e0d0c0b0a0908,%rdx
   13b73:	0d 0e 0f 
   13b76:	48 8d 05 03 0e 01 00 	lea    0x10e03(%rip),%rax        # 24980 <aes_test_cfb128_key>
   13b7d:	48 89 94 24 a8 03 00 	mov    %rdx,0x3a8(%rsp)
   13b84:	00 
   13b85:	48 c1 e6 05          	shl    $0x5,%rsi
   13b89:	89 da                	mov    %ebx,%edx
   13b8b:	c1 ea 03             	shr    $0x3,%edx
   13b8e:	48 01 c6             	add    %rax,%rsi
   13b91:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   13b96:	e8 45 f7 fe ff       	callq  32e0 <__memcpy_chk@plt>
   13b9b:	89 da                	mov    %ebx,%edx
   13b9d:	4c 89 ee             	mov    %r13,%rsi
   13ba0:	4c 89 ff             	mov    %r15,%rdi
   13ba3:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   13baa:	00 00 
   13bac:	e8 af e6 ff ff       	callq  12260 <mbedtls_aes_setkey_enc>
   13bb1:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   13bb6:	83 f8 8e             	cmp    $0xffffff8e,%eax
   13bb9:	75 0c                	jne    13bc7 <mbedtls_aes_self_test+0x2e7>
   13bbb:	81 fb c0 00 00 00    	cmp    $0xc0,%ebx
   13bc1:	0f 84 51 03 00 00    	je     13f18 <mbedtls_aes_self_test+0x638>
   13bc7:	85 c0                	test   %eax,%eax
   13bc9:	0f 85 ce 00 00 00    	jne    13c9d <mbedtls_aes_self_test+0x3bd>
   13bcf:	45 85 f6             	test   %r14d,%r14d
   13bd2:	0f 85 50 02 00 00    	jne    13e28 <mbedtls_aes_self_test+0x548>
   13bd8:	49 c1 e0 06          	shl    $0x6,%r8
   13bdc:	48 8d 05 9d 0c 01 00 	lea    0x10c9d(%rip),%rax        # 24880 <aes_test_cfb128_ct>
   13be3:	48 8d 1d 56 0d 01 00 	lea    0x10d56(%rip),%rbx        # 24940 <aes_test_cfb128_pt>
   13bea:	4c 01 c0             	add    %r8,%rax
   13bed:	66 0f 6f 28          	movdqa (%rax),%xmm5
   13bf1:	66 0f 6f 70 10       	movdqa 0x10(%rax),%xmm6
   13bf6:	66 0f 6f 78 20       	movdqa 0x20(%rax),%xmm7
   13bfb:	0f 29 ac 24 00 04 00 	movaps %xmm5,0x400(%rsp)
   13c02:	00 
   13c03:	66 0f 6f 68 30       	movdqa 0x30(%rax),%xmm5
   13c08:	0f 29 b4 24 10 04 00 	movaps %xmm6,0x410(%rsp)
   13c0f:	00 
   13c10:	0f 29 bc 24 20 04 00 	movaps %xmm7,0x420(%rsp)
   13c17:	00 
   13c18:	0f 29 ac 24 30 04 00 	movaps %xmm5,0x430(%rsp)
   13c1f:	00 
   13c20:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   13c25:	48 83 ec 08          	sub    $0x8,%rsp
   13c29:	49 89 e9             	mov    %rbp,%r9
   13c2c:	44 89 f6             	mov    %r14d,%esi
   13c2f:	55                   	push   %rbp
   13c30:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   13c35:	ba 40 00 00 00       	mov    $0x40,%edx
   13c3a:	4c 89 ff             	mov    %r15,%rdi
   13c3d:	e8 ee f8 ff ff       	callq  13530 <mbedtls_aes_crypt_cfb128>
   13c42:	5a                   	pop    %rdx
   13c43:	59                   	pop    %rcx
   13c44:	85 c0                	test   %eax,%eax
   13c46:	75 55                	jne    13c9d <mbedtls_aes_self_test+0x3bd>
   13c48:	48 8b 45 00          	mov    0x0(%rbp),%rax
   13c4c:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   13c50:	48 33 03             	xor    (%rbx),%rax
   13c53:	48 33 53 08          	xor    0x8(%rbx),%rdx
   13c57:	48 09 c2             	or     %rax,%rdx
   13c5a:	0f 84 57 02 00 00    	je     13eb7 <mbedtls_aes_self_test+0x5d7>
   13c60:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13c66:	eb 38                	jmp    13ca0 <mbedtls_aes_self_test+0x3c0>
   13c68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13c6f:	00 
   13c70:	45 85 c0             	test   %r8d,%r8d
   13c73:	75 2b                	jne    13ca0 <mbedtls_aes_self_test+0x3c0>
   13c75:	bb 10 27 00 00       	mov    $0x2710,%ebx
   13c7a:	eb 0d                	jmp    13c89 <mbedtls_aes_self_test+0x3a9>
   13c7c:	0f 1f 40 00          	nopl   0x0(%rax)
   13c80:	83 eb 01             	sub    $0x1,%ebx
   13c83:	0f 84 67 01 00 00    	je     13df0 <mbedtls_aes_self_test+0x510>
   13c89:	4c 89 f1             	mov    %r14,%rcx
   13c8c:	4c 89 f2             	mov    %r14,%rdx
   13c8f:	89 ee                	mov    %ebp,%esi
   13c91:	4c 89 ff             	mov    %r15,%rdi
   13c94:	e8 27 f4 ff ff       	callq  130c0 <mbedtls_aes_crypt_ecb>
   13c99:	85 c0                	test   %eax,%eax
   13c9b:	74 e3                	je     13c80 <mbedtls_aes_self_test+0x3a0>
   13c9d:	41 89 c0             	mov    %eax,%r8d
   13ca0:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13ca4:	85 c0                	test   %eax,%eax
   13ca6:	74 16                	je     13cbe <mbedtls_aes_self_test+0x3de>
   13ca8:	48 8d 3d 0e fe 00 00 	lea    0xfe0e(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   13caf:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   13cb4:	e8 47 f5 fe ff       	callq  3200 <puts@plt>
   13cb9:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   13cbe:	be 20 01 00 00       	mov    $0x120,%esi
   13cc3:	4c 89 ff             	mov    %r15,%rdi
   13cc6:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   13ccb:	e8 60 15 ff ff       	callq  5230 <mbedtls_platform_zeroize>
   13cd0:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   13cd5:	48 8b 84 24 48 04 00 	mov    0x448(%rsp),%rax
   13cdc:	00 
   13cdd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13ce4:	00 00 
   13ce6:	0f 85 e0 08 00 00    	jne    145cc <mbedtls_aes_self_test+0xcec>
   13cec:	48 81 c4 58 04 00 00 	add    $0x458,%rsp
   13cf3:	44 89 c0             	mov    %r8d,%eax
   13cf6:	5b                   	pop    %rbx
   13cf7:	5d                   	pop    %rbp
   13cf8:	41 5c                	pop    %r12
   13cfa:	41 5d                	pop    %r13
   13cfc:	41 5e                	pop    %r14
   13cfe:	41 5f                	pop    %r15
   13d00:	c3                   	retq   
   13d01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13d08:	e8 53 e5 ff ff       	callq  12260 <mbedtls_aes_setkey_enc>
   13d0d:	41 89 c0             	mov    %eax,%r8d
   13d10:	48 8d 05 49 0d 01 00 	lea    0x10d49(%rip),%rax        # 24a60 <aes_test_ecb_enc>
   13d17:	49 01 c4             	add    %rax,%r12
   13d1a:	e9 ab fc ff ff       	jmpq   139ca <mbedtls_aes_self_test+0xea>
   13d1f:	90                   	nop
   13d20:	bf 00 00 00 02       	mov    $0x2000000,%edi
   13d25:	e8 c6 15 ff ff       	callq  52f0 <mbedtls_aesni_has_support>
   13d2a:	85 c0                	test   %eax,%eax
   13d2c:	0f 84 96 00 00 00    	je     13dc8 <mbedtls_aes_self_test+0x4e8>
   13d32:	48 8d 3d c7 05 01 00 	lea    0x105c7(%rip),%rdi        # 24300 <K+0x280>
   13d39:	e8 c2 f4 fe ff       	callq  3200 <puts@plt>
   13d3e:	e9 f7 fb ff ff       	jmpq   1393a <mbedtls_aes_self_test+0x5a>
   13d43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13d48:	e8 43 e8 ff ff       	callq  12590 <mbedtls_aes_setkey_dec>
   13d4d:	48 8d 0d cc 0c 01 00 	lea    0x10ccc(%rip),%rcx        # 24a20 <aes_test_cbc_dec>
   13d54:	49 01 cc             	add    %rcx,%r12
   13d57:	83 f8 8e             	cmp    $0xffffff8e,%eax
   13d5a:	0f 84 56 fd ff ff    	je     13ab6 <mbedtls_aes_self_test+0x1d6>
   13d60:	85 c0                	test   %eax,%eax
   13d62:	0f 85 35 ff ff ff    	jne    13c9d <mbedtls_aes_self_test+0x3bd>
   13d68:	bb 10 27 00 00       	mov    $0x2710,%ebx
   13d6d:	eb 0a                	jmp    13d79 <mbedtls_aes_self_test+0x499>
   13d6f:	90                   	nop
   13d70:	83 eb 01             	sub    $0x1,%ebx
   13d73:	0f 84 d7 07 00 00    	je     14550 <mbedtls_aes_self_test+0xc70>
   13d79:	45 85 ed             	test   %r13d,%r13d
   13d7c:	74 22                	je     13da0 <mbedtls_aes_self_test+0x4c0>
   13d7e:	66 0f 6f 84 24 b0 03 	movdqa 0x3b0(%rsp),%xmm0
   13d85:	00 00 
   13d87:	66 0f 6f 8c 24 00 04 	movdqa 0x400(%rsp),%xmm1
   13d8e:	00 00 
   13d90:	0f 29 84 24 00 04 00 	movaps %xmm0,0x400(%rsp)
   13d97:	00 
   13d98:	0f 29 8c 24 b0 03 00 	movaps %xmm1,0x3b0(%rsp)
   13d9f:	00 
   13da0:	4d 89 f1             	mov    %r14,%r9
   13da3:	4d 89 f0             	mov    %r14,%r8
   13da6:	48 89 e9             	mov    %rbp,%rcx
   13da9:	ba 10 00 00 00       	mov    $0x10,%edx
   13dae:	44 89 ee             	mov    %r13d,%esi
   13db1:	4c 89 ff             	mov    %r15,%rdi
   13db4:	e8 97 f3 ff ff       	callq  13150 <mbedtls_aes_crypt_cbc>
   13db9:	85 c0                	test   %eax,%eax
   13dbb:	74 b3                	je     13d70 <mbedtls_aes_self_test+0x490>
   13dbd:	e9 db fe ff ff       	jmpq   13c9d <mbedtls_aes_self_test+0x3bd>
   13dc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13dc8:	48 8d 3d d1 05 01 00 	lea    0x105d1(%rip),%rdi        # 243a0 <K+0x320>
   13dcf:	e8 2c f4 fe ff       	callq  3200 <puts@plt>
   13dd4:	e9 61 fb ff ff       	jmpq   1393a <mbedtls_aes_self_test+0x5a>
   13dd9:	bf 0a 00 00 00       	mov    $0xa,%edi
   13dde:	e8 0d f4 fe ff       	callq  31f0 <putchar@plt>
   13de3:	e9 20 fc ff ff       	jmpq   13a08 <mbedtls_aes_self_test+0x128>
   13de8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13def:	00 
   13df0:	49 8b 06             	mov    (%r14),%rax
   13df3:	49 8b 56 08          	mov    0x8(%r14),%rdx
   13df7:	49 33 04 24          	xor    (%r12),%rax
   13dfb:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   13e00:	48 09 c2             	or     %rax,%rdx
   13e03:	0f 85 57 fe ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   13e09:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
   13e0e:	45 85 db             	test   %r11d,%r11d
   13e11:	0f 84 d5 fb ff ff    	je     139ec <mbedtls_aes_self_test+0x10c>
   13e17:	48 8d 3d c4 f3 00 00 	lea    0xf3c4(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   13e1e:	e8 dd f3 fe ff       	callq  3200 <puts@plt>
   13e23:	e9 c4 fb ff ff       	jmpq   139ec <mbedtls_aes_self_test+0x10c>
   13e28:	48 b8 6b c1 be e2 2e 	movabs $0x969f402ee2bec16b,%rax
   13e2f:	40 9f 96 
   13e32:	66 0f 6f 05 96 0c 01 	movdqa 0x10c96(%rip),%xmm0        # 24ad0 <aes_test_ecb_dec+0x30>
   13e39:	00 
   13e3a:	49 c1 e0 06          	shl    $0x6,%r8
   13e3e:	48 ba e9 3d 7e 11 73 	movabs $0x2a179373117e3de9,%rdx
   13e45:	93 17 2a 
   13e48:	48 89 84 24 00 04 00 	mov    %rax,0x400(%rsp)
   13e4f:	00 
   13e50:	48 8d 1d 29 0a 01 00 	lea    0x10a29(%rip),%rbx        # 24880 <aes_test_cfb128_ct>
   13e57:	48 b8 ae 2d 8a 57 1e 	movabs $0x9cac031e578a2dae,%rax
   13e5e:	03 ac 9c 
   13e61:	48 89 94 24 08 04 00 	mov    %rdx,0x408(%rsp)
   13e68:	00 
   13e69:	4c 01 c3             	add    %r8,%rbx
   13e6c:	48 ba 9e b7 6f ac 45 	movabs $0x518eaf45ac6fb79e,%rdx
   13e73:	af 8e 51 
   13e76:	48 89 84 24 10 04 00 	mov    %rax,0x410(%rsp)
   13e7d:	00 
   13e7e:	48 b8 30 c8 1c 46 a3 	movabs $0x11e45ca3461cc830,%rax
   13e85:	5c e4 11 
   13e88:	48 89 94 24 18 04 00 	mov    %rdx,0x418(%rsp)
   13e8f:	00 
   13e90:	48 ba e5 fb c1 19 1a 	movabs $0xef520a1a19c1fbe5,%rdx
   13e97:	0a 52 ef 
   13e9a:	48 89 84 24 20 04 00 	mov    %rax,0x420(%rsp)
   13ea1:	00 
   13ea2:	48 89 94 24 28 04 00 	mov    %rdx,0x428(%rsp)
   13ea9:	00 
   13eaa:	0f 29 84 24 30 04 00 	movaps %xmm0,0x430(%rsp)
   13eb1:	00 
   13eb2:	e9 69 fd ff ff       	jmpq   13c20 <mbedtls_aes_self_test+0x340>
   13eb7:	48 8b 45 10          	mov    0x10(%rbp),%rax
   13ebb:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   13ebf:	48 33 43 10          	xor    0x10(%rbx),%rax
   13ec3:	48 33 53 18          	xor    0x18(%rbx),%rdx
   13ec7:	48 09 c2             	or     %rax,%rdx
   13eca:	0f 85 90 fd ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   13ed0:	48 8b 45 20          	mov    0x20(%rbp),%rax
   13ed4:	48 8b 55 28          	mov    0x28(%rbp),%rdx
   13ed8:	48 33 43 20          	xor    0x20(%rbx),%rax
   13edc:	48 33 53 28          	xor    0x28(%rbx),%rdx
   13ee0:	48 09 c2             	or     %rax,%rdx
   13ee3:	0f 85 77 fd ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   13ee9:	48 8b 45 30          	mov    0x30(%rbp),%rax
   13eed:	48 8b 55 38          	mov    0x38(%rbp),%rdx
   13ef1:	48 33 43 30          	xor    0x30(%rbx),%rax
   13ef5:	48 33 53 38          	xor    0x38(%rbx),%rdx
   13ef9:	48 09 c2             	or     %rax,%rdx
   13efc:	0f 85 5e fd ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   13f02:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13f06:	85 c0                	test   %eax,%eax
   13f08:	74 1a                	je     13f24 <mbedtls_aes_self_test+0x644>
   13f0a:	48 8d 3d d1 f2 00 00 	lea    0xf2d1(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   13f11:	e8 ea f2 fe ff       	callq  3200 <puts@plt>
   13f16:	eb 0c                	jmp    13f24 <mbedtls_aes_self_test+0x644>
   13f18:	48 8d 3d d7 d1 00 00 	lea    0xd1d7(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
   13f1f:	e8 dc f2 fe ff       	callq  3200 <puts@plt>
   13f24:	41 83 c4 01          	add    $0x1,%r12d
   13f28:	41 83 fc 06          	cmp    $0x6,%r12d
   13f2c:	0f 85 ca fb ff ff    	jne    13afc <mbedtls_aes_self_test+0x21c>
   13f32:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13f36:	49 89 ee             	mov    %rbp,%r14
   13f39:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   13f3e:	85 c0                	test   %eax,%eax
   13f40:	0f 85 42 06 00 00    	jne    14588 <mbedtls_aes_self_test+0xca8>
   13f46:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   13f4b:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   13f50:	45 31 ed             	xor    %r13d,%r13d
   13f53:	45 89 e9             	mov    %r13d,%r9d
   13f56:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13f5a:	45 89 ec             	mov    %r13d,%r12d
   13f5d:	41 d1 f9             	sar    %r9d
   13f60:	41 83 e4 01          	and    $0x1,%r12d
   13f64:	41 8d 59 02          	lea    0x2(%r9),%ebx
   13f68:	c1 e3 06             	shl    $0x6,%ebx
   13f6b:	85 c0                	test   %eax,%eax
   13f6d:	74 34                	je     13fa3 <mbedtls_aes_self_test+0x6c3>
   13f6f:	45 85 e4             	test   %r12d,%r12d
   13f72:	89 da                	mov    %ebx,%edx
   13f74:	bf 01 00 00 00       	mov    $0x1,%edi
   13f79:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   13f7e:	48 8d 05 54 d1 00 00 	lea    0xd154(%rip),%rax        # 210d9 <_IO_stdin_used+0xd9>
   13f85:	48 8d 0d 72 d1 00 00 	lea    0xd172(%rip),%rcx        # 210fe <_IO_stdin_used+0xfe>
   13f8c:	48 0f 45 c8          	cmovne %rax,%rcx
   13f90:	48 8d 35 c4 03 01 00 	lea    0x103c4(%rip),%rsi        # 2435b <K+0x2db>
   13f97:	31 c0                	xor    %eax,%eax
   13f99:	e8 a2 f3 fe ff       	callq  3340 <__printf_chk@plt>
   13f9e:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   13fa3:	4d 63 c9             	movslq %r9d,%r9
   13fa6:	b9 20 00 00 00       	mov    $0x20,%ecx
   13fab:	48 89 ef             	mov    %rbp,%rdi
   13fae:	48 b8 00 01 02 03 04 	movabs $0x706050403020100,%rax
   13fb5:	05 06 07 
   13fb8:	4c 89 ce             	mov    %r9,%rsi
   13fbb:	48 89 84 24 a0 03 00 	mov    %rax,0x3a0(%rsp)
   13fc2:	00 
   13fc3:	48 ba 08 09 0a 0b 0c 	movabs $0xf0e0d0c0b0a0908,%rdx
   13fca:	0d 0e 0f 
   13fcd:	48 8d 05 4c 08 01 00 	lea    0x1084c(%rip),%rax        # 24820 <aes_test_ofb_key>
   13fd4:	48 89 94 24 a8 03 00 	mov    %rdx,0x3a8(%rsp)
   13fdb:	00 
   13fdc:	48 c1 e6 05          	shl    $0x5,%rsi
   13fe0:	89 da                	mov    %ebx,%edx
   13fe2:	c1 ea 03             	shr    $0x3,%edx
   13fe5:	48 01 c6             	add    %rax,%rsi
   13fe8:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   13fed:	e8 ee f2 fe ff       	callq  32e0 <__memcpy_chk@plt>
   13ff2:	89 da                	mov    %ebx,%edx
   13ff4:	48 89 ee             	mov    %rbp,%rsi
   13ff7:	4c 89 ff             	mov    %r15,%rdi
   13ffa:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   14001:	00 00 
   14003:	e8 58 e2 ff ff       	callq  12260 <mbedtls_aes_setkey_enc>
   14008:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1400d:	83 f8 8e             	cmp    $0xffffff8e,%eax
   14010:	75 0c                	jne    1401e <mbedtls_aes_self_test+0x73e>
   14012:	81 fb c0 00 00 00    	cmp    $0xc0,%ebx
   14018:	0f 84 21 05 00 00    	je     1453f <mbedtls_aes_self_test+0xc5f>
   1401e:	85 c0                	test   %eax,%eax
   14020:	0f 85 77 fc ff ff    	jne    13c9d <mbedtls_aes_self_test+0x3bd>
   14026:	45 85 e4             	test   %r12d,%r12d
   14029:	0f 85 06 04 00 00    	jne    14435 <mbedtls_aes_self_test+0xb55>
   1402f:	49 c1 e1 06          	shl    $0x6,%r9
   14033:	48 8d 05 e6 06 01 00 	lea    0x106e6(%rip),%rax        # 24720 <aes_test_ofb_ct>
   1403a:	48 8d 1d 9f 07 01 00 	lea    0x1079f(%rip),%rbx        # 247e0 <aes_test_ofb_pt>
   14041:	4c 01 c8             	add    %r9,%rax
   14044:	66 0f 6f 10          	movdqa (%rax),%xmm2
   14048:	66 0f 6f 58 10       	movdqa 0x10(%rax),%xmm3
   1404d:	66 0f 6f 60 20       	movdqa 0x20(%rax),%xmm4
   14052:	66 0f 6f 70 30       	movdqa 0x30(%rax),%xmm6
   14057:	0f 29 94 24 00 04 00 	movaps %xmm2,0x400(%rsp)
   1405e:	00 
   1405f:	0f 29 9c 24 10 04 00 	movaps %xmm3,0x410(%rsp)
   14066:	00 
   14067:	0f 29 a4 24 20 04 00 	movaps %xmm4,0x420(%rsp)
   1406e:	00 
   1406f:	0f 29 b4 24 30 04 00 	movaps %xmm6,0x430(%rsp)
   14076:	00 
   14077:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1407c:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   14081:	4d 89 f1             	mov    %r14,%r9
   14084:	4d 89 f0             	mov    %r14,%r8
   14087:	be 40 00 00 00       	mov    $0x40,%esi
   1408c:	4c 89 ff             	mov    %r15,%rdi
   1408f:	e8 ac f6 ff ff       	callq  13740 <mbedtls_aes_crypt_ofb>
   14094:	85 c0                	test   %eax,%eax
   14096:	0f 85 01 fc ff ff    	jne    13c9d <mbedtls_aes_self_test+0x3bd>
   1409c:	49 8b 06             	mov    (%r14),%rax
   1409f:	49 8b 56 08          	mov    0x8(%r14),%rdx
   140a3:	48 33 03             	xor    (%rbx),%rax
   140a6:	48 33 53 08          	xor    0x8(%rbx),%rdx
   140aa:	48 09 c2             	or     %rax,%rdx
   140ad:	0f 85 ad fb ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   140b3:	49 8b 46 10          	mov    0x10(%r14),%rax
   140b7:	49 8b 56 18          	mov    0x18(%r14),%rdx
   140bb:	48 33 43 10          	xor    0x10(%rbx),%rax
   140bf:	48 33 53 18          	xor    0x18(%rbx),%rdx
   140c3:	48 09 c2             	or     %rax,%rdx
   140c6:	0f 85 94 fb ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   140cc:	49 8b 46 20          	mov    0x20(%r14),%rax
   140d0:	49 8b 56 28          	mov    0x28(%r14),%rdx
   140d4:	48 33 43 20          	xor    0x20(%rbx),%rax
   140d8:	48 33 53 28          	xor    0x28(%rbx),%rdx
   140dc:	48 09 c2             	or     %rax,%rdx
   140df:	0f 85 7b fb ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   140e5:	49 8b 46 30          	mov    0x30(%r14),%rax
   140e9:	49 8b 56 38          	mov    0x38(%r14),%rdx
   140ed:	48 33 43 30          	xor    0x30(%rbx),%rax
   140f1:	48 33 53 38          	xor    0x38(%rbx),%rdx
   140f5:	48 09 c2             	or     %rax,%rdx
   140f8:	0f 85 62 fb ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   140fe:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   14103:	45 85 e4             	test   %r12d,%r12d
   14106:	74 0c                	je     14114 <mbedtls_aes_self_test+0x834>
   14108:	48 8d 3d d3 f0 00 00 	lea    0xf0d3(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1410f:	e8 ec f0 fe ff       	callq  3200 <puts@plt>
   14114:	41 83 c5 01          	add    $0x1,%r13d
   14118:	41 83 fd 06          	cmp    $0x6,%r13d
   1411c:	0f 85 31 fe ff ff    	jne    13f53 <mbedtls_aes_self_test+0x673>
   14122:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   14126:	85 db                	test   %ebx,%ebx
   14128:	0f 85 f8 02 00 00    	jne    14426 <mbedtls_aes_self_test+0xb46>
   1412e:	31 ed                	xor    %ebp,%ebp
   14130:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
   14135:	41 89 ed             	mov    %ebp,%r13d
   14138:	89 eb                	mov    %ebp,%ebx
   1413a:	41 d1 fd             	sar    %r13d
   1413d:	83 e3 01             	and    $0x1,%ebx
   14140:	45 85 db             	test   %r11d,%r11d
   14143:	74 27                	je     1416c <mbedtls_aes_self_test+0x88c>
   14145:	85 db                	test   %ebx,%ebx
   14147:	48 8d 05 b0 cf 00 00 	lea    0xcfb0(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   1414e:	48 8d 15 84 cf 00 00 	lea    0xcf84(%rip),%rdx        # 210d9 <_IO_stdin_used+0xd9>
   14155:	bf 01 00 00 00       	mov    $0x1,%edi
   1415a:	48 0f 44 d0          	cmove  %rax,%rdx
   1415e:	48 8d 35 0b 02 01 00 	lea    0x1020b(%rip),%rsi        # 24370 <K+0x2f0>
   14165:	31 c0                	xor    %eax,%eax
   14167:	e8 d4 f1 fe ff       	callq  3340 <__printf_chk@plt>
   1416c:	4d 63 ed             	movslq %r13d,%r13
   1416f:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   14174:	ba 80 00 00 00       	mov    $0x80,%edx
   14179:	4c 89 ff             	mov    %r15,%rdi
   1417c:	4c 89 e8             	mov    %r13,%rax
   1417f:	48 8d 0d 1a 05 01 00 	lea    0x1051a(%rip),%rcx        # 246a0 <aes_test_ctr_nonce_counter>
   14186:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1418d:	00 00 
   1418f:	48 c1 e0 04          	shl    $0x4,%rax
   14193:	66 0f 6f 14 01       	movdqa (%rcx,%rax,1),%xmm2
   14198:	48 8d 0d 41 05 01 00 	lea    0x10541(%rip),%rcx        # 246e0 <aes_test_ctr_key>
   1419f:	66 0f 6f 24 01       	movdqa (%rcx,%rax,1),%xmm4
   141a4:	0f 29 54 24 10       	movaps %xmm2,0x10(%rsp)
   141a9:	0f 29 94 24 c0 03 00 	movaps %xmm2,0x3c0(%rsp)
   141b0:	00 
   141b1:	0f 29 a4 24 e0 03 00 	movaps %xmm4,0x3e0(%rsp)
   141b8:	00 
   141b9:	e8 a2 e0 ff ff       	callq  12260 <mbedtls_aes_setkey_enc>
   141be:	85 c0                	test   %eax,%eax
   141c0:	0f 85 d7 fa ff ff    	jne    13c9d <mbedtls_aes_self_test+0x3bd>
   141c6:	48 8d 05 73 03 01 00 	lea    0x10373(%rip),%rax        # 24540 <aes_test_ctr_len>
   141cd:	48 8d 0d 2c 04 01 00 	lea    0x1042c(%rip),%rcx        # 24600 <aes_test_ctr_pt>
   141d4:	4e 63 24 a8          	movslq (%rax,%r13,4),%r12
   141d8:	4b 8d 44 6d 00       	lea    0x0(%r13,%r13,2),%rax
   141dd:	4c 8d 05 7c 03 01 00 	lea    0x1037c(%rip),%r8        # 24560 <aes_test_ctr_ct>
   141e4:	48 c1 e0 04          	shl    $0x4,%rax
   141e8:	4c 8d 2c 08          	lea    (%rax,%rcx,1),%r13
   141ec:	49 01 c0             	add    %rax,%r8
   141ef:	85 db                	test   %ebx,%ebx
   141f1:	0f 85 d7 02 00 00    	jne    144ce <mbedtls_aes_self_test+0xbee>
   141f7:	b9 40 00 00 00       	mov    $0x40,%ecx
   141fc:	4c 89 e2             	mov    %r12,%rdx
   141ff:	4c 89 c6             	mov    %r8,%rsi
   14202:	4c 89 f7             	mov    %r14,%rdi
   14205:	e8 d6 f0 fe ff       	callq  32e0 <__memcpy_chk@plt>
   1420a:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1420f:	4d 89 f1             	mov    %r14,%r9
   14212:	4c 89 e6             	mov    %r12,%rsi
   14215:	4c 89 ff             	mov    %r15,%rdi
   14218:	48 8d 8c 24 c0 03 00 	lea    0x3c0(%rsp),%rcx
   1421f:	00 
   14220:	48 83 ec 08          	sub    $0x8,%rsp
   14224:	41 56                	push   %r14
   14226:	4c 8d 84 24 e0 03 00 	lea    0x3e0(%rsp),%r8
   1422d:	00 
   1422e:	e8 bd f5 ff ff       	callq  137f0 <mbedtls_aes_crypt_ctr>
   14233:	41 59                	pop    %r9
   14235:	41 5a                	pop    %r10
   14237:	85 c0                	test   %eax,%eax
   14239:	0f 85 5e fa ff ff    	jne    13c9d <mbedtls_aes_self_test+0x3bd>
   1423f:	4c 89 e2             	mov    %r12,%rdx
   14242:	4c 89 ee             	mov    %r13,%rsi
   14245:	4c 89 f7             	mov    %r14,%rdi
   14248:	e8 53 f0 fe ff       	callq  32a0 <memcmp@plt>
   1424d:	89 c3                	mov    %eax,%ebx
   1424f:	85 c0                	test   %eax,%eax
   14251:	0f 85 09 fa ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   14257:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   1425c:	45 85 c0             	test   %r8d,%r8d
   1425f:	0f 85 c9 02 00 00    	jne    1452e <mbedtls_aes_self_test+0xc4e>
   14265:	83 c5 01             	add    $0x1,%ebp
   14268:	83 fd 06             	cmp    $0x6,%ebp
   1426b:	0f 85 bf fe ff ff    	jne    14130 <mbedtls_aes_self_test+0x850>
   14271:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   14275:	85 ff                	test   %edi,%edi
   14277:	0f 85 1a 03 00 00    	jne    14597 <mbedtls_aes_self_test+0xcb7>
   1427d:	48 8d ac 24 60 01 00 	lea    0x160(%rsp),%rbp
   14284:	00 
   14285:	4d 89 f5             	mov    %r14,%r13
   14288:	48 89 ef             	mov    %rbp,%rdi
   1428b:	e8 20 df ff ff       	callq  121b0 <mbedtls_aes_xts_init>
   14290:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   14295:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   14299:	41 89 dc             	mov    %ebx,%r12d
   1429c:	41 89 de             	mov    %ebx,%r14d
   1429f:	41 d1 fc             	sar    %r12d
   142a2:	41 83 e6 01          	and    $0x1,%r14d
   142a6:	85 f6                	test   %esi,%esi
   142a8:	74 28                	je     142d2 <mbedtls_aes_self_test+0x9f2>
   142aa:	45 85 f6             	test   %r14d,%r14d
   142ad:	48 8d 05 4a ce 00 00 	lea    0xce4a(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   142b4:	48 8d 15 1e ce 00 00 	lea    0xce1e(%rip),%rdx        # 210d9 <_IO_stdin_used+0xd9>
   142bb:	bf 01 00 00 00       	mov    $0x1,%edi
   142c0:	48 0f 44 d0          	cmove  %rax,%rdx
   142c4:	48 8d 35 ba 00 01 00 	lea    0x100ba(%rip),%rsi        # 24385 <K+0x305>
   142cb:	31 c0                	xor    %eax,%eax
   142cd:	e8 6e f0 fe ff       	callq  3340 <__printf_chk@plt>
   142d2:	4d 63 e4             	movslq %r12d,%r12
   142d5:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   142da:	ba 00 01 00 00       	mov    $0x100,%edx
   142df:	48 89 ef             	mov    %rbp,%rdi
   142e2:	4d 89 e7             	mov    %r12,%r15
   142e5:	48 8d 05 f4 01 01 00 	lea    0x101f4(%rip),%rax        # 244e0 <aes_test_xts_key>
   142ec:	49 c1 e4 04          	shl    $0x4,%r12
   142f0:	49 c1 e7 05          	shl    $0x5,%r15
   142f4:	4c 01 f8             	add    %r15,%rax
   142f7:	66 0f 6f 30          	movdqa (%rax),%xmm6
   142fb:	66 0f 6f 78 10       	movdqa 0x10(%rax),%xmm7
   14300:	48 8d 05 d9 00 01 00 	lea    0x100d9(%rip),%rax        # 243e0 <aes_test_xts_data_unit>
   14307:	49 01 c4             	add    %rax,%r12
   1430a:	0f 29 b4 24 e0 03 00 	movaps %xmm6,0x3e0(%rsp)
   14311:	00 
   14312:	0f 29 bc 24 f0 03 00 	movaps %xmm7,0x3f0(%rsp)
   14319:	00 
   1431a:	45 85 f6             	test   %r14d,%r14d
   1431d:	0f 85 d0 01 00 00    	jne    144f3 <mbedtls_aes_self_test+0xc13>
   14323:	e8 a8 e4 ff ff       	callq  127d0 <mbedtls_aes_xts_setkey_dec>
   14328:	89 c2                	mov    %eax,%edx
   1432a:	85 c0                	test   %eax,%eax
   1432c:	0f 85 8d 02 00 00    	jne    145bf <mbedtls_aes_self_test+0xcdf>
   14332:	48 8d 05 e7 00 01 00 	lea    0x100e7(%rip),%rax        # 24420 <aes_test_xts_ct32>
   14339:	4c 01 f8             	add    %r15,%rax
   1433c:	66 0f 6f 38          	movdqa (%rax),%xmm7
   14340:	66 0f 6f 50 10       	movdqa 0x10(%rax),%xmm2
   14345:	48 8d 05 34 01 01 00 	lea    0x10134(%rip),%rax        # 24480 <aes_test_xts_pt32>
   1434c:	49 01 c7             	add    %rax,%r15
   1434f:	41 0f 29 7d 00       	movaps %xmm7,0x0(%r13)
   14354:	41 0f 29 55 10       	movaps %xmm2,0x10(%r13)
   14359:	ba 20 00 00 00       	mov    $0x20,%edx
   1435e:	4d 89 e9             	mov    %r13,%r9
   14361:	4d 89 e8             	mov    %r13,%r8
   14364:	4c 89 e1             	mov    %r12,%rcx
   14367:	44 89 f6             	mov    %r14d,%esi
   1436a:	48 89 ef             	mov    %rbp,%rdi
   1436d:	e8 ee ee ff ff       	callq  13260 <mbedtls_aes_crypt_xts>
   14372:	89 c2                	mov    %eax,%edx
   14374:	85 c0                	test   %eax,%eax
   14376:	0f 85 43 02 00 00    	jne    145bf <mbedtls_aes_self_test+0xcdf>
   1437c:	49 8b 45 00          	mov    0x0(%r13),%rax
   14380:	49 8b 4d 08          	mov    0x8(%r13),%rcx
   14384:	49 33 07             	xor    (%r15),%rax
   14387:	49 33 4f 08          	xor    0x8(%r15),%rcx
   1438b:	48 09 c1             	or     %rax,%rcx
   1438e:	0f 85 30 01 00 00    	jne    144c4 <mbedtls_aes_self_test+0xbe4>
   14394:	49 8b 45 10          	mov    0x10(%r13),%rax
   14398:	49 8b 4d 18          	mov    0x18(%r13),%rcx
   1439c:	49 33 47 10          	xor    0x10(%r15),%rax
   143a0:	49 33 4f 18          	xor    0x18(%r15),%rcx
   143a4:	48 09 c1             	or     %rax,%rcx
   143a7:	0f 85 17 01 00 00    	jne    144c4 <mbedtls_aes_self_test+0xbe4>
   143ad:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   143b1:	85 c9                	test   %ecx,%ecx
   143b3:	74 14                	je     143c9 <mbedtls_aes_self_test+0xae9>
   143b5:	48 8d 3d 26 ee 00 00 	lea    0xee26(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   143bc:	89 54 24 28          	mov    %edx,0x28(%rsp)
   143c0:	e8 3b ee fe ff       	callq  3200 <puts@plt>
   143c5:	8b 54 24 28          	mov    0x28(%rsp),%edx
   143c9:	83 c3 01             	add    $0x1,%ebx
   143cc:	83 fb 06             	cmp    $0x6,%ebx
   143cf:	0f 85 c0 fe ff ff    	jne    14295 <mbedtls_aes_self_test+0x9b5>
   143d5:	41 89 d0             	mov    %edx,%r8d
   143d8:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   143dc:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   143e1:	85 d2                	test   %edx,%edx
   143e3:	0f 85 bd 01 00 00    	jne    145a6 <mbedtls_aes_self_test+0xcc6>
   143e9:	be 20 01 00 00       	mov    $0x120,%esi
   143ee:	48 89 ef             	mov    %rbp,%rdi
   143f1:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   143f6:	e8 35 0e ff ff       	callq  5230 <mbedtls_platform_zeroize>
   143fb:	48 8d bc 24 80 02 00 	lea    0x280(%rsp),%rdi
   14402:	00 
   14403:	be 20 01 00 00       	mov    $0x120,%esi
   14408:	e8 23 0e ff ff       	callq  5230 <mbedtls_platform_zeroize>
   1440d:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   14412:	e9 a7 f8 ff ff       	jmpq   13cbe <mbedtls_aes_self_test+0x3de>
   14417:	bf 0a 00 00 00       	mov    $0xa,%edi
   1441c:	e8 cf ed fe ff       	callq  31f0 <putchar@plt>
   14421:	e9 c6 f6 ff ff       	jmpq   13aec <mbedtls_aes_self_test+0x20c>
   14426:	bf 0a 00 00 00       	mov    $0xa,%edi
   1442b:	e8 c0 ed fe ff       	callq  31f0 <putchar@plt>
   14430:	e9 f9 fc ff ff       	jmpq   1412e <mbedtls_aes_self_test+0x84e>
   14435:	48 b8 6b c1 be e2 2e 	movabs $0x969f402ee2bec16b,%rax
   1443c:	40 9f 96 
   1443f:	66 0f 6f 05 89 06 01 	movdqa 0x10689(%rip),%xmm0        # 24ad0 <aes_test_ecb_dec+0x30>
   14446:	00 
   14447:	49 c1 e1 06          	shl    $0x6,%r9
   1444b:	48 ba e9 3d 7e 11 73 	movabs $0x2a179373117e3de9,%rdx
   14452:	93 17 2a 
   14455:	48 89 84 24 00 04 00 	mov    %rax,0x400(%rsp)
   1445c:	00 
   1445d:	48 8d 1d bc 02 01 00 	lea    0x102bc(%rip),%rbx        # 24720 <aes_test_ofb_ct>
   14464:	48 b8 ae 2d 8a 57 1e 	movabs $0x9cac031e578a2dae,%rax
   1446b:	03 ac 9c 
   1446e:	48 89 94 24 08 04 00 	mov    %rdx,0x408(%rsp)
   14475:	00 
   14476:	4c 01 cb             	add    %r9,%rbx
   14479:	48 ba 9e b7 6f ac 45 	movabs $0x518eaf45ac6fb79e,%rdx
   14480:	af 8e 51 
   14483:	48 89 84 24 10 04 00 	mov    %rax,0x410(%rsp)
   1448a:	00 
   1448b:	48 b8 30 c8 1c 46 a3 	movabs $0x11e45ca3461cc830,%rax
   14492:	5c e4 11 
   14495:	48 89 94 24 18 04 00 	mov    %rdx,0x418(%rsp)
   1449c:	00 
   1449d:	48 ba e5 fb c1 19 1a 	movabs $0xef520a1a19c1fbe5,%rdx
   144a4:	0a 52 ef 
   144a7:	48 89 84 24 20 04 00 	mov    %rax,0x420(%rsp)
   144ae:	00 
   144af:	48 89 94 24 28 04 00 	mov    %rdx,0x428(%rsp)
   144b6:	00 
   144b7:	0f 29 84 24 30 04 00 	movaps %xmm0,0x430(%rsp)
   144be:	00 
   144bf:	e9 b3 fb ff ff       	jmpq   14077 <mbedtls_aes_self_test+0x797>
   144c4:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   144c9:	e9 92 f7 ff ff       	jmpq   13c60 <mbedtls_aes_self_test+0x380>
   144ce:	4c 89 ee             	mov    %r13,%rsi
   144d1:	b9 40 00 00 00       	mov    $0x40,%ecx
   144d6:	4c 89 e2             	mov    %r12,%rdx
   144d9:	4c 89 f7             	mov    %r14,%rdi
   144dc:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   144e1:	e8 fa ed fe ff       	callq  32e0 <__memcpy_chk@plt>
   144e6:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   144eb:	4d 89 c5             	mov    %r8,%r13
   144ee:	e9 17 fd ff ff       	jmpq   1420a <mbedtls_aes_self_test+0x92a>
   144f3:	e8 78 e2 ff ff       	callq  12770 <mbedtls_aes_xts_setkey_enc>
   144f8:	89 c2                	mov    %eax,%edx
   144fa:	85 c0                	test   %eax,%eax
   144fc:	0f 85 bd 00 00 00    	jne    145bf <mbedtls_aes_self_test+0xcdf>
   14502:	48 8d 05 77 ff 00 00 	lea    0xff77(%rip),%rax        # 24480 <aes_test_xts_pt32>
   14509:	4c 01 f8             	add    %r15,%rax
   1450c:	66 0f 6f 18          	movdqa (%rax),%xmm3
   14510:	66 0f 6f 60 10       	movdqa 0x10(%rax),%xmm4
   14515:	48 8d 05 04 ff 00 00 	lea    0xff04(%rip),%rax        # 24420 <aes_test_xts_ct32>
   1451c:	49 01 c7             	add    %rax,%r15
   1451f:	41 0f 29 5d 00       	movaps %xmm3,0x0(%r13)
   14524:	41 0f 29 65 10       	movaps %xmm4,0x10(%r13)
   14529:	e9 2b fe ff ff       	jmpq   14359 <mbedtls_aes_self_test+0xa79>
   1452e:	48 8d 3d ad ec 00 00 	lea    0xecad(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   14535:	e8 c6 ec fe ff       	callq  3200 <puts@plt>
   1453a:	e9 26 fd ff ff       	jmpq   14265 <mbedtls_aes_self_test+0x985>
   1453f:	48 8d 3d b0 cb 00 00 	lea    0xcbb0(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
   14546:	e8 b5 ec fe ff       	callq  3200 <puts@plt>
   1454b:	e9 c4 fb ff ff       	jmpq   14114 <mbedtls_aes_self_test+0x834>
   14550:	49 8b 06             	mov    (%r14),%rax
   14553:	49 8b 56 08          	mov    0x8(%r14),%rdx
   14557:	49 33 04 24          	xor    (%r12),%rax
   1455b:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   14560:	48 09 c2             	or     %rax,%rdx
   14563:	0f 85 f7 f6 ff ff    	jne    13c60 <mbedtls_aes_self_test+0x380>
   14569:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   1456e:	45 85 c0             	test   %r8d,%r8d
   14571:	0f 84 57 f5 ff ff    	je     13ace <mbedtls_aes_self_test+0x1ee>
   14577:	48 8d 3d 64 ec 00 00 	lea    0xec64(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1457e:	e8 7d ec fe ff       	callq  3200 <puts@plt>
   14583:	e9 46 f5 ff ff       	jmpq   13ace <mbedtls_aes_self_test+0x1ee>
   14588:	bf 0a 00 00 00       	mov    $0xa,%edi
   1458d:	e8 5e ec fe ff       	callq  31f0 <putchar@plt>
   14592:	e9 af f9 ff ff       	jmpq   13f46 <mbedtls_aes_self_test+0x666>
   14597:	bf 0a 00 00 00       	mov    $0xa,%edi
   1459c:	e8 4f ec fe ff       	callq  31f0 <putchar@plt>
   145a1:	e9 d7 fc ff ff       	jmpq   1427d <mbedtls_aes_self_test+0x99d>
   145a6:	bf 0a 00 00 00       	mov    $0xa,%edi
   145ab:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   145b0:	e8 3b ec fe ff       	callq  31f0 <putchar@plt>
   145b5:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   145ba:	e9 2a fe ff ff       	jmpq   143e9 <mbedtls_aes_self_test+0xb09>
   145bf:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   145c4:	41 89 d0             	mov    %edx,%r8d
   145c7:	e9 d4 f6 ff ff       	jmpq   13ca0 <mbedtls_aes_self_test+0x3c0>
   145cc:	e8 8f ec fe ff       	callq  3260 <__stack_chk_fail@plt>
   145d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   145d8:	00 00 00 
   145db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000145e0 <aria_rot128>:
   145e0:	41 89 cb             	mov    %ecx,%r11d
   145e3:	55                   	push   %rbp
   145e4:	89 cd                	mov    %ecx,%ebp
   145e6:	53                   	push   %rbx
   145e7:	41 83 e3 1f          	and    $0x1f,%r11d
   145eb:	74 63                	je     14650 <aria_rot128+0x70>
   145ed:	bb 20 00 00 00       	mov    $0x20,%ebx
   145f2:	44 29 db             	sub    %r11d,%ebx
   145f5:	0f b6 db             	movzbl %bl,%ebx
   145f8:	40 c0 ed 05          	shr    $0x5,%bpl
   145fc:	45 0f b6 db          	movzbl %r11b,%r11d
   14600:	45 31 d2             	xor    %r10d,%r10d
   14603:	40 0f b6 c5          	movzbl %bpl,%eax
   14607:	44 8b 0c 82          	mov    (%rdx,%rax,4),%r9d
   1460b:	41 0f c9             	bswap  %r9d
   1460e:	44 8d 45 01          	lea    0x1(%rbp),%r8d
   14612:	44 89 c8             	mov    %r9d,%eax
   14615:	44 89 d9             	mov    %r11d,%ecx
   14618:	41 83 e0 03          	and    $0x3,%r8d
   1461c:	d3 e0                	shl    %cl,%eax
   1461e:	89 d9                	mov    %ebx,%ecx
   14620:	44 89 c5             	mov    %r8d,%ebp
   14623:	4d 63 c0             	movslq %r8d,%r8
   14626:	46 8b 0c 82          	mov    (%rdx,%r8,4),%r9d
   1462a:	41 89 c0             	mov    %eax,%r8d
   1462d:	41 0f c9             	bswap  %r9d
   14630:	44 89 c8             	mov    %r9d,%eax
   14633:	d3 e8                	shr    %cl,%eax
   14635:	44 09 c0             	or     %r8d,%eax
   14638:	0f c8                	bswap  %eax
   1463a:	42 33 04 16          	xor    (%rsi,%r10,1),%eax
   1463e:	42 89 04 17          	mov    %eax,(%rdi,%r10,1)
   14642:	49 83 c2 04          	add    $0x4,%r10
   14646:	49 83 fa 10          	cmp    $0x10,%r10
   1464a:	75 c2                	jne    1460e <aria_rot128+0x2e>
   1464c:	5b                   	pop    %rbx
   1464d:	5d                   	pop    %rbp
   1464e:	c3                   	retq   
   1464f:	90                   	nop
   14650:	31 db                	xor    %ebx,%ebx
   14652:	eb a4                	jmp    145f8 <aria_rot128+0x18>
   14654:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1465b:	00 00 00 00 
   1465f:	90                   	nop

0000000000014660 <aria_fo_xor>:
   14660:	49 89 d1             	mov    %rdx,%r9
   14663:	41 56                	push   %r14
   14665:	49 89 ce             	mov    %rcx,%r14
   14668:	4c 8d 1d d1 08 01 00 	lea    0x108d1(%rip),%r11        # 24f40 <aria_is1>
   1466f:	41 55                	push   %r13
   14671:	4c 8d 2d c8 07 01 00 	lea    0x107c8(%rip),%r13        # 24e40 <aria_is2>
   14678:	41 54                	push   %r12
   1467a:	4c 8d 25 bf 0a 01 00 	lea    0x10abf(%rip),%r12        # 25140 <aria_sb1>
   14681:	55                   	push   %rbp
   14682:	48 8d 2d b7 09 01 00 	lea    0x109b7(%rip),%rbp        # 25040 <aria_sb2>
   14689:	53                   	push   %rbx
   1468a:	8b 16                	mov    (%rsi),%edx
   1468c:	41 33 11             	xor    (%r9),%edx
   1468f:	44 8b 46 04          	mov    0x4(%rsi),%r8d
   14693:	8b 5e 08             	mov    0x8(%rsi),%ebx
   14696:	8b 46 0c             	mov    0xc(%rsi),%eax
   14699:	89 d6                	mov    %edx,%esi
   1469b:	0f b6 ce             	movzbl %dh,%ecx
   1469e:	c1 ee 18             	shr    $0x18,%esi
   146a1:	45 33 41 04          	xor    0x4(%r9),%r8d
   146a5:	41 33 59 08          	xor    0x8(%r9),%ebx
   146a9:	41 33 41 0c          	xor    0xc(%r9),%eax
   146ad:	41 0f b6 74 35 00    	movzbl 0x0(%r13,%rsi,1),%esi
   146b3:	44 0f b6 ca          	movzbl %dl,%r9d
   146b7:	c1 ea 10             	shr    $0x10,%edx
   146ba:	47 0f b6 0c 0c       	movzbl (%r12,%r9,1),%r9d
   146bf:	0f b6 d2             	movzbl %dl,%edx
   146c2:	c1 e6 18             	shl    $0x18,%esi
   146c5:	41 0f b6 14 13       	movzbl (%r11,%rdx,1),%edx
   146ca:	44 31 ce             	xor    %r9d,%esi
   146cd:	44 0f b6 4c 0d 00    	movzbl 0x0(%rbp,%rcx,1),%r9d
   146d3:	44 89 c1             	mov    %r8d,%ecx
   146d6:	c1 e2 10             	shl    $0x10,%edx
   146d9:	0f b6 cd             	movzbl %ch,%ecx
   146dc:	41 c1 e1 08          	shl    $0x8,%r9d
   146e0:	44 31 ce             	xor    %r9d,%esi
   146e3:	45 0f b6 c8          	movzbl %r8b,%r9d
   146e7:	31 d6                	xor    %edx,%esi
   146e9:	44 89 c2             	mov    %r8d,%edx
   146ec:	47 0f b6 0c 0c       	movzbl (%r12,%r9,1),%r9d
   146f1:	41 c1 e8 10          	shr    $0x10,%r8d
   146f5:	c1 ea 18             	shr    $0x18,%edx
   146f8:	45 0f b6 c0          	movzbl %r8b,%r8d
   146fc:	41 0f b6 54 15 00    	movzbl 0x0(%r13,%rdx,1),%edx
   14702:	47 0f b6 04 03       	movzbl (%r11,%r8,1),%r8d
   14707:	c1 e2 18             	shl    $0x18,%edx
   1470a:	41 c1 e0 10          	shl    $0x10,%r8d
   1470e:	44 31 ca             	xor    %r9d,%edx
   14711:	44 0f b6 4c 0d 00    	movzbl 0x0(%rbp,%rcx,1),%r9d
   14717:	0f b6 cc             	movzbl %ah,%ecx
   1471a:	41 c1 e1 08          	shl    $0x8,%r9d
   1471e:	44 31 ca             	xor    %r9d,%edx
   14721:	44 31 c2             	xor    %r8d,%edx
   14724:	41 89 c0             	mov    %eax,%r8d
   14727:	41 c1 e8 18          	shr    $0x18,%r8d
   1472b:	41 89 d1             	mov    %edx,%r9d
   1472e:	47 0f b6 54 05 00    	movzbl 0x0(%r13,%r8,1),%r10d
   14734:	44 0f b6 c0          	movzbl %al,%r8d
   14738:	c1 e8 10             	shr    $0x10,%eax
   1473b:	47 0f b6 04 04       	movzbl (%r12,%r8,1),%r8d
   14740:	41 c1 c1 10          	rol    $0x10,%r9d
   14744:	41 c1 e2 18          	shl    $0x18,%r10d
   14748:	45 31 c2             	xor    %r8d,%r10d
   1474b:	44 0f b6 44 0d 00    	movzbl 0x0(%rbp,%rcx,1),%r8d
   14751:	0f b6 cf             	movzbl %bh,%ecx
   14754:	41 c1 e0 08          	shl    $0x8,%r8d
   14758:	45 31 c2             	xor    %r8d,%r10d
   1475b:	44 0f b6 c0          	movzbl %al,%r8d
   1475f:	43 0f b6 04 03       	movzbl (%r11,%r8,1),%eax
   14764:	44 0f b6 c3          	movzbl %bl,%r8d
   14768:	47 0f b6 04 04       	movzbl (%r12,%r8,1),%r8d
   1476d:	c1 e0 10             	shl    $0x10,%eax
   14770:	41 31 c2             	xor    %eax,%r10d
   14773:	89 d8                	mov    %ebx,%eax
   14775:	c1 e8 18             	shr    $0x18,%eax
   14778:	41 c1 c2 10          	rol    $0x10,%r10d
   1477c:	41 0f b6 44 05 00    	movzbl 0x0(%r13,%rax,1),%eax
   14782:	c1 e0 18             	shl    $0x18,%eax
   14785:	44 31 c0             	xor    %r8d,%eax
   14788:	44 0f b6 44 0d 00    	movzbl 0x0(%rbp,%rcx,1),%r8d
   1478e:	c1 eb 10             	shr    $0x10,%ebx
   14791:	89 f5                	mov    %esi,%ebp
   14793:	0f b6 db             	movzbl %bl,%ebx
   14796:	c1 c5 10             	rol    $0x10,%ebp
   14799:	41 c1 e0 08          	shl    $0x8,%r8d
   1479d:	44 31 c0             	xor    %r8d,%eax
   147a0:	45 0f b6 04 1b       	movzbl (%r11,%rbx,1),%r8d
   147a5:	45 89 d3             	mov    %r10d,%r11d
   147a8:	41 0f cb             	bswap  %r11d
   147ab:	41 c1 c3 10          	rol    $0x10,%r11d
   147af:	41 c1 e0 10          	shl    $0x10,%r8d
   147b3:	44 31 c0             	xor    %r8d,%eax
   147b6:	0f c8                	bswap  %eax
   147b8:	41 89 c0             	mov    %eax,%r8d
   147bb:	44 31 d0             	xor    %r10d,%eax
   147be:	45 89 ca             	mov    %r9d,%r10d
   147c1:	41 c1 c0 10          	rol    $0x10,%r8d
   147c5:	41 89 c5             	mov    %eax,%r13d
   147c8:	45 33 0e             	xor    (%r14),%r9d
   147cb:	41 0f ca             	bswap  %r10d
   147ce:	41 c1 c5 10          	rol    $0x10,%r13d
   147d2:	44 31 c2             	xor    %r8d,%edx
   147d5:	41 c1 c2 10          	rol    $0x10,%r10d
   147d9:	0f ca                	bswap  %edx
   147db:	c1 c2 10             	rol    $0x10,%edx
   147de:	41 31 ea             	xor    %ebp,%r10d
   147e1:	44 31 da             	xor    %r11d,%edx
   147e4:	89 d3                	mov    %edx,%ebx
   147e6:	44 89 d2             	mov    %r10d,%edx
   147e9:	31 eb                	xor    %ebp,%ebx
   147eb:	c1 c2 10             	rol    $0x10,%edx
   147ee:	41 31 dd             	xor    %ebx,%r13d
   147f1:	41 89 dc             	mov    %ebx,%r12d
   147f4:	0f ca                	bswap  %edx
   147f6:	c1 c2 10             	rol    $0x10,%edx
   147f9:	41 0f cd             	bswap  %r13d
   147fc:	41 c1 c5 10          	rol    $0x10,%r13d
   14800:	41 c1 c4 10          	rol    $0x10,%r12d
   14804:	44 31 da             	xor    %r11d,%edx
   14807:	45 31 cd             	xor    %r9d,%r13d
   1480a:	44 89 e5             	mov    %r12d,%ebp
   1480d:	44 89 2f             	mov    %r13d,(%rdi)
   14810:	41 33 76 04          	xor    0x4(%r14),%esi
   14814:	0f cd                	bswap  %ebp
   14816:	31 f0                	xor    %esi,%eax
   14818:	31 c3                	xor    %eax,%ebx
   1481a:	89 e8                	mov    %ebp,%eax
   1481c:	89 5f 04             	mov    %ebx,0x4(%rdi)
   1481f:	41 33 56 08          	xor    0x8(%r14),%edx
   14823:	c1 c0 10             	rol    $0x10,%eax
   14826:	44 31 e2             	xor    %r12d,%edx
   14829:	44 31 c0             	xor    %r8d,%eax
   1482c:	5b                   	pop    %rbx
   1482d:	5d                   	pop    %rbp
   1482e:	89 57 08             	mov    %edx,0x8(%rdi)
   14831:	41 33 46 0c          	xor    0xc(%r14),%eax
   14835:	44 31 d0             	xor    %r10d,%eax
   14838:	41 5c                	pop    %r12
   1483a:	41 5d                	pop    %r13
   1483c:	89 47 0c             	mov    %eax,0xc(%rdi)
   1483f:	41 5e                	pop    %r14
   14841:	c3                   	retq   
   14842:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   14849:	00 00 00 00 
   1484d:	0f 1f 00             	nopl   (%rax)

0000000000014850 <mbedtls_aria_setkey_enc>:
   14850:	f3 0f 1e fa          	endbr64 
   14854:	41 57                	push   %r15
   14856:	41 56                	push   %r14
   14858:	41 55                	push   %r13
   1485a:	41 54                	push   %r12
   1485c:	55                   	push   %rbp
   1485d:	53                   	push   %rbx
   1485e:	48 89 fb             	mov    %rdi,%rbx
   14861:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   14868:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1486f:	00 00 
   14871:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   14878:	00 
   14879:	31 c0                	xor    %eax,%eax
   1487b:	48 b8 51 7c c1 b7 27 	movabs $0x940a2227b7c17c51,%rax
   14882:	22 0a 94 
   14885:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1488a:	48 b8 fe 13 ab e8 fa 	movabs $0xe06e9afae8ab13fe,%rax
   14891:	9a 6e e0 
   14894:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14899:	48 b8 6d b1 4a cc 9e 	movabs $0x20c8219ecc4ab16d,%rax
   148a0:	21 c8 20 
   148a3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   148a8:	48 b8 ff 28 b1 d5 ef 	movabs $0xb0e25defd5b128ff,%rax
   148af:	5d e2 b0 
   148b2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   148b7:	48 b8 db 92 37 1d 21 	movabs $0x70e926211d3792db,%rax
   148be:	26 e9 70 
   148c1:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   148c6:	48 b8 03 24 97 75 04 	movabs $0xec9e80475972403,%rax
   148cd:	e8 c9 0e 
   148d0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   148d5:	89 d0                	mov    %edx,%eax
   148d7:	83 e0 bf             	and    $0xffffffbf,%eax
   148da:	3d 80 00 00 00       	cmp    $0x80,%eax
   148df:	74 0c                	je     148ed <mbedtls_aria_setkey_enc+0x9d>
   148e1:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   148e7:	0f 85 83 03 00 00    	jne    14c70 <mbedtls_aria_setkey_enc+0x420>
   148ed:	48 8b 06             	mov    (%rsi),%rax
   148f0:	44 8d 72 80          	lea    -0x80(%rdx),%r14d
   148f4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   148f8:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   148fd:	41 c1 ee 06          	shr    $0x6,%r14d
   14901:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   14906:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1490b:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   14910:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   14915:	45 89 f7             	mov    %r14d,%r15d
   14918:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1491c:	49 c1 e7 04          	shl    $0x4,%r15
   14920:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14925:	4f 8d 44 3d 00       	lea    0x0(%r13,%r15,1),%r8
   1492a:	43 8d 44 36 0c       	lea    0xc(%r14,%r14,1),%eax
   1492f:	81 fa bf 00 00 00    	cmp    $0xbf,%edx
   14935:	0f 86 f5 02 00 00    	jbe    14c30 <mbedtls_aria_setkey_enc+0x3e0>
   1493b:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   1493f:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   14944:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   1494a:	0f 85 e0 02 00 00    	jne    14c30 <mbedtls_aria_setkey_enc+0x3e0>
   14950:	48 8b 56 18          	mov    0x18(%rsi),%rdx
   14954:	88 03                	mov    %al,(%rbx)
   14956:	4c 89 e1             	mov    %r12,%rcx
   14959:	48 89 ee             	mov    %rbp,%rsi
   1495c:	4c 89 e7             	mov    %r12,%rdi
   1495f:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
   14964:	4c 89 c2             	mov    %r8,%rdx
   14967:	e8 f4 fc ff ff       	callq  14660 <aria_fo_xor>
   1496c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   14973:	00 
   14974:	4c 89 e9             	mov    %r13,%rcx
   14977:	8b 54 24 50          	mov    0x50(%rsp),%edx
   1497b:	33 11                	xor    (%rcx),%edx
   1497d:	4c 8d 1d bc 06 01 00 	lea    0x106bc(%rip),%r11        # 25040 <aria_sb2>
   14984:	4c 8d 15 b5 05 01 00 	lea    0x105b5(%rip),%r10        # 24f40 <aria_is1>
   1498b:	8b 7c 24 54          	mov    0x54(%rsp),%edi
   1498f:	8b 44 24 58          	mov    0x58(%rsp),%eax
   14993:	44 0f b6 c2          	movzbl %dl,%r8d
   14997:	4c 8d 0d a2 04 01 00 	lea    0x104a2(%rip),%r9        # 24e40 <aria_is2>
   1499e:	33 79 04             	xor    0x4(%rcx),%edi
   149a1:	33 41 08             	xor    0x8(%rcx),%eax
   149a4:	8b 74 24 5c          	mov    0x5c(%rsp),%esi
   149a8:	33 71 0c             	xor    0xc(%rcx),%esi
   149ab:	89 d1                	mov    %edx,%ecx
   149ad:	89 44 24 08          	mov    %eax,0x8(%rsp)
   149b1:	c1 e9 18             	shr    $0x18,%ecx
   149b4:	47 0f b6 04 02       	movzbl (%r10,%r8,1),%r8d
   149b9:	0f b6 c6             	movzbl %dh,%eax
   149bc:	c1 ea 10             	shr    $0x10,%edx
   149bf:	41 0f b6 0c 0b       	movzbl (%r11,%rcx,1),%ecx
   149c4:	0f b6 d2             	movzbl %dl,%edx
   149c7:	44 0f b6 f7          	movzbl %dil,%r14d
   149cb:	47 0f b6 34 32       	movzbl (%r10,%r14,1),%r14d
   149d0:	c1 e1 18             	shl    $0x18,%ecx
   149d3:	44 31 c1             	xor    %r8d,%ecx
   149d6:	45 0f b6 04 01       	movzbl (%r9,%rax,1),%r8d
   149db:	89 f8                	mov    %edi,%eax
   149dd:	0f b6 c4             	movzbl %ah,%eax
   149e0:	41 c1 e0 08          	shl    $0x8,%r8d
   149e4:	44 31 c1             	xor    %r8d,%ecx
   149e7:	4c 8d 05 52 07 01 00 	lea    0x10752(%rip),%r8        # 25140 <aria_sb1>
   149ee:	41 0f b6 14 10       	movzbl (%r8,%rdx,1),%edx
   149f3:	c1 e2 10             	shl    $0x10,%edx
   149f6:	31 d1                	xor    %edx,%ecx
   149f8:	89 fa                	mov    %edi,%edx
   149fa:	c1 ef 10             	shr    $0x10,%edi
   149fd:	c1 ea 18             	shr    $0x18,%edx
   14a00:	40 0f b6 ff          	movzbl %dil,%edi
   14a04:	41 0f b6 14 13       	movzbl (%r11,%rdx,1),%edx
   14a09:	41 0f b6 3c 38       	movzbl (%r8,%rdi,1),%edi
   14a0e:	c1 e2 18             	shl    $0x18,%edx
   14a11:	c1 e7 10             	shl    $0x10,%edi
   14a14:	44 31 f2             	xor    %r14d,%edx
   14a17:	45 0f b6 34 01       	movzbl (%r9,%rax,1),%r14d
   14a1c:	89 f0                	mov    %esi,%eax
   14a1e:	41 c1 e6 08          	shl    $0x8,%r14d
   14a22:	44 31 f2             	xor    %r14d,%edx
   14a25:	31 fa                	xor    %edi,%edx
   14a27:	89 f7                	mov    %esi,%edi
   14a29:	c1 ef 18             	shr    $0x18,%edi
   14a2c:	41 89 d6             	mov    %edx,%r14d
   14a2f:	45 0f b6 3c 3b       	movzbl (%r11,%rdi,1),%r15d
   14a34:	40 0f b6 fe          	movzbl %sil,%edi
   14a38:	c1 ee 10             	shr    $0x10,%esi
   14a3b:	41 0f b6 3c 3a       	movzbl (%r10,%rdi,1),%edi
   14a40:	40 0f b6 f6          	movzbl %sil,%esi
   14a44:	41 c1 c6 10          	rol    $0x10,%r14d
   14a48:	41 c1 e7 18          	shl    $0x18,%r15d
   14a4c:	41 31 ff             	xor    %edi,%r15d
   14a4f:	0f b6 fc             	movzbl %ah,%edi
   14a52:	41 0f b6 3c 39       	movzbl (%r9,%rdi,1),%edi
   14a57:	c1 e7 08             	shl    $0x8,%edi
   14a5a:	44 31 ff             	xor    %r15d,%edi
   14a5d:	45 0f b6 3c 30       	movzbl (%r8,%rsi,1),%r15d
   14a62:	41 c1 e7 10          	shl    $0x10,%r15d
   14a66:	44 31 ff             	xor    %r15d,%edi
   14a69:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
   14a6e:	c1 c7 10             	rol    $0x10,%edi
   14a71:	44 89 f8             	mov    %r15d,%eax
   14a74:	c1 e8 18             	shr    $0x18,%eax
   14a77:	89 c6                	mov    %eax,%esi
   14a79:	44 89 f8             	mov    %r15d,%eax
   14a7c:	41 0f b6 34 33       	movzbl (%r11,%rsi,1),%esi
   14a81:	45 0f b6 df          	movzbl %r15b,%r11d
   14a85:	0f b6 c4             	movzbl %ah,%eax
   14a88:	47 0f b6 14 1a       	movzbl (%r10,%r11,1),%r10d
   14a8d:	45 0f b6 0c 01       	movzbl (%r9,%rax,1),%r9d
   14a92:	44 89 f8             	mov    %r15d,%eax
   14a95:	c1 e6 18             	shl    $0x18,%esi
   14a98:	44 31 d6             	xor    %r10d,%esi
   14a9b:	c1 e8 10             	shr    $0x10,%eax
   14a9e:	41 89 fa             	mov    %edi,%r10d
   14aa1:	0f b6 c0             	movzbl %al,%eax
   14aa4:	41 c1 e1 08          	shl    $0x8,%r9d
   14aa8:	41 0f ca             	bswap  %r10d
   14aab:	45 0f b6 04 00       	movzbl (%r8,%rax,1),%r8d
   14ab0:	44 31 ce             	xor    %r9d,%esi
   14ab3:	89 d0                	mov    %edx,%eax
   14ab5:	45 89 f1             	mov    %r14d,%r9d
   14ab8:	41 c1 c2 10          	rol    $0x10,%r10d
   14abc:	41 0f c9             	bswap  %r9d
   14abf:	41 c1 c1 10          	rol    $0x10,%r9d
   14ac3:	41 c1 e0 10          	shl    $0x10,%r8d
   14ac7:	41 31 f0             	xor    %esi,%r8d
   14aca:	89 ce                	mov    %ecx,%esi
   14acc:	33 4c 24 44          	xor    0x44(%rsp),%ecx
   14ad0:	41 0f c8             	bswap  %r8d
   14ad3:	45 89 c3             	mov    %r8d,%r11d
   14ad6:	c1 c6 10             	rol    $0x10,%esi
   14ad9:	44 31 c7             	xor    %r8d,%edi
   14adc:	41 c1 c3 10          	rol    $0x10,%r11d
   14ae0:	41 31 f1             	xor    %esi,%r9d
   14ae3:	89 fa                	mov    %edi,%edx
   14ae5:	c1 c7 10             	rol    $0x10,%edi
   14ae8:	44 31 d8             	xor    %r11d,%eax
   14aeb:	0f c8                	bswap  %eax
   14aed:	c1 c0 10             	rol    $0x10,%eax
   14af0:	44 31 d0             	xor    %r10d,%eax
   14af3:	31 f0                	xor    %esi,%eax
   14af5:	44 89 ce             	mov    %r9d,%esi
   14af8:	41 89 c7             	mov    %eax,%r15d
   14afb:	c1 c6 10             	rol    $0x10,%esi
   14afe:	31 c7                	xor    %eax,%edi
   14b00:	31 c8                	xor    %ecx,%eax
   14b02:	41 c1 c7 10          	rol    $0x10,%r15d
   14b06:	0f ce                	bswap  %esi
   14b08:	c1 c6 10             	rol    $0x10,%esi
   14b0b:	0f cf                	bswap  %edi
   14b0d:	45 89 f8             	mov    %r15d,%r8d
   14b10:	c1 c7 10             	rol    $0x10,%edi
   14b13:	41 31 f2             	xor    %esi,%r10d
   14b16:	33 7c 24 40          	xor    0x40(%rsp),%edi
   14b1a:	44 33 54 24 48       	xor    0x48(%rsp),%r10d
   14b1f:	31 c2                	xor    %eax,%edx
   14b21:	44 31 f7             	xor    %r14d,%edi
   14b24:	41 0f c8             	bswap  %r8d
   14b27:	45 31 d7             	xor    %r10d,%r15d
   14b2a:	41 c1 c0 10          	rol    $0x10,%r8d
   14b2e:	89 54 24 64          	mov    %edx,0x64(%rsp)
   14b32:	4c 89 ea             	mov    %r13,%rdx
   14b35:	89 7c 24 60          	mov    %edi,0x60(%rsp)
   14b39:	45 31 c3             	xor    %r8d,%r11d
   14b3c:	44 89 7c 24 68       	mov    %r15d,0x68(%rsp)
   14b41:	44 33 5c 24 4c       	xor    0x4c(%rsp),%r11d
   14b46:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   14b4a:	45 31 d9             	xor    %r11d,%r9d
   14b4d:	44 89 4c 24 6c       	mov    %r9d,0x6c(%rsp)
   14b52:	83 f8 02             	cmp    $0x2,%eax
   14b55:	74 0c                	je     14b63 <mbedtls_aria_setkey_enc+0x313>
   14b57:	83 c0 01             	add    $0x1,%eax
   14b5a:	48 98                	cltq   
   14b5c:	48 c1 e0 04          	shl    $0x4,%rax
   14b60:	48 01 c2             	add    %rax,%rdx
   14b63:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   14b68:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   14b6d:	4c 89 e1             	mov    %r12,%rcx
   14b70:	45 31 f6             	xor    %r14d,%r14d
   14b73:	e8 e8 fa ff ff       	callq  14660 <aria_fo_xor>
   14b78:	4c 8d 6b 04          	lea    0x4(%rbx),%r13
   14b7c:	48 89 ee             	mov    %rbp,%rsi
   14b7f:	41 83 c6 01          	add    $0x1,%r14d
   14b83:	4c 89 ef             	mov    %r13,%rdi
   14b86:	b9 6d 00 00 00       	mov    $0x6d,%ecx
   14b8b:	44 89 f2             	mov    %r14d,%edx
   14b8e:	83 e2 03             	and    $0x3,%edx
   14b91:	48 c1 e2 04          	shl    $0x4,%rdx
   14b95:	48 01 ea             	add    %rbp,%rdx
   14b98:	e8 43 fa ff ff       	callq  145e0 <aria_rot128>
   14b9d:	49 8d 7d 40          	lea    0x40(%r13),%rdi
   14ba1:	b9 61 00 00 00       	mov    $0x61,%ecx
   14ba6:	e8 35 fa ff ff       	callq  145e0 <aria_rot128>
   14bab:	49 8d bd 80 00 00 00 	lea    0x80(%r13),%rdi
   14bb2:	b9 3d 00 00 00       	mov    $0x3d,%ecx
   14bb7:	e8 24 fa ff ff       	callq  145e0 <aria_rot128>
   14bbc:	49 8d bd c0 00 00 00 	lea    0xc0(%r13),%rdi
   14bc3:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   14bc8:	49 83 c5 10          	add    $0x10,%r13
   14bcc:	e8 0f fa ff ff       	callq  145e0 <aria_rot128>
   14bd1:	48 83 c6 10          	add    $0x10,%rsi
   14bd5:	41 83 fe 04          	cmp    $0x4,%r14d
   14bd9:	75 a4                	jne    14b7f <mbedtls_aria_setkey_enc+0x32f>
   14bdb:	48 8d bb 04 01 00 00 	lea    0x104(%rbx),%rdi
   14be2:	b9 13 00 00 00       	mov    $0x13,%ecx
   14be7:	4c 89 e2             	mov    %r12,%rdx
   14bea:	48 89 ee             	mov    %rbp,%rsi
   14bed:	e8 ee f9 ff ff       	callq  145e0 <aria_rot128>
   14bf2:	be 40 00 00 00       	mov    $0x40,%esi
   14bf7:	48 89 ef             	mov    %rbp,%rdi
   14bfa:	e8 31 06 ff ff       	callq  5230 <mbedtls_platform_zeroize>
   14bff:	31 c0                	xor    %eax,%eax
   14c01:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
   14c08:	00 
   14c09:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   14c10:	00 00 
   14c12:	75 63                	jne    14c77 <mbedtls_aria_setkey_enc+0x427>
   14c14:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   14c1b:	5b                   	pop    %rbx
   14c1c:	5d                   	pop    %rbp
   14c1d:	41 5c                	pop    %r12
   14c1f:	41 5d                	pop    %r13
   14c21:	41 5e                	pop    %r14
   14c23:	41 5f                	pop    %r15
   14c25:	c3                   	retq   
   14c26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14c2d:	00 00 00 
   14c30:	88 03                	mov    %al,(%rbx)
   14c32:	4c 89 e1             	mov    %r12,%rcx
   14c35:	4c 89 c2             	mov    %r8,%rdx
   14c38:	48 89 ee             	mov    %rbp,%rsi
   14c3b:	4c 89 e7             	mov    %r12,%rdi
   14c3e:	e8 1d fa ff ff       	callq  14660 <aria_fo_xor>
   14c43:	41 83 fe 01          	cmp    $0x1,%r14d
   14c47:	77 17                	ja     14c60 <mbedtls_aria_setkey_enc+0x410>
   14c49:	41 8d 46 01          	lea    0x1(%r14),%eax
   14c4d:	4b 8d 4c 3d 10       	lea    0x10(%r13,%r15,1),%rcx
   14c52:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   14c56:	e9 1c fd ff ff       	jmpq   14977 <mbedtls_aria_setkey_enc+0x127>
   14c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14c60:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   14c67:	00 
   14c68:	4c 89 e9             	mov    %r13,%rcx
   14c6b:	e9 07 fd ff ff       	jmpq   14977 <mbedtls_aria_setkey_enc+0x127>
   14c70:	b8 a4 ff ff ff       	mov    $0xffffffa4,%eax
   14c75:	eb 8a                	jmp    14c01 <mbedtls_aria_setkey_enc+0x3b1>
   14c77:	e8 e4 e5 fe ff       	callq  3260 <__stack_chk_fail@plt>
   14c7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014c80 <mbedtls_aria_setkey_dec>:
   14c80:	f3 0f 1e fa          	endbr64 
   14c84:	41 55                	push   %r13
   14c86:	41 54                	push   %r12
   14c88:	55                   	push   %rbp
   14c89:	53                   	push   %rbx
   14c8a:	48 89 fb             	mov    %rdi,%rbx
   14c8d:	48 83 ec 08          	sub    $0x8,%rsp
   14c91:	e8 ba fb ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   14c96:	85 c0                	test   %eax,%eax
   14c98:	0f 85 12 01 00 00    	jne    14db0 <mbedtls_aria_setkey_dec+0x130>
   14c9e:	0f b6 2b             	movzbl (%rbx),%ebp
   14ca1:	85 ed                	test   %ebp,%ebp
   14ca3:	0f 84 07 01 00 00    	je     14db0 <mbedtls_aria_setkey_dec+0x130>
   14ca9:	48 8d 14 eb          	lea    (%rbx,%rbp,8),%rdx
   14cad:	4c 8d 4b 10          	lea    0x10(%rbx),%r9
   14cb1:	41 89 eb             	mov    %ebp,%r11d
   14cb4:	45 31 d2             	xor    %r10d,%r10d
   14cb7:	48 8d 7c 12 10       	lea    0x10(%rdx,%rdx,1),%rdi
   14cbc:	0f 1f 40 00          	nopl   0x0(%rax)
   14cc0:	48 89 f9             	mov    %rdi,%rcx
   14cc3:	49 8d 51 f0          	lea    -0x10(%r9),%rdx
   14cc7:	4c 29 c9             	sub    %r9,%rcx
   14cca:	44 8b 41 04          	mov    0x4(%rcx),%r8d
   14cce:	8b 72 04             	mov    0x4(%rdx),%esi
   14cd1:	48 83 c2 04          	add    $0x4,%rdx
   14cd5:	48 83 c1 04          	add    $0x4,%rcx
   14cd9:	44 89 02             	mov    %r8d,(%rdx)
   14cdc:	89 31                	mov    %esi,(%rcx)
   14cde:	4c 39 ca             	cmp    %r9,%rdx
   14ce1:	75 e7                	jne    14cca <mbedtls_aria_setkey_dec+0x4a>
   14ce3:	41 83 c2 01          	add    $0x1,%r10d
   14ce7:	41 83 eb 01          	sub    $0x1,%r11d
   14ceb:	4c 8d 4a 10          	lea    0x10(%rdx),%r9
   14cef:	45 39 da             	cmp    %r11d,%r10d
   14cf2:	7c cc                	jl     14cc0 <mbedtls_aria_setkey_dec+0x40>
   14cf4:	83 fd 01             	cmp    $0x1,%ebp
   14cf7:	0f 8e b3 00 00 00    	jle    14db0 <mbedtls_aria_setkey_dec+0x130>
   14cfd:	8d 55 fe             	lea    -0x2(%rbp),%edx
   14d00:	4c 8d 43 14          	lea    0x14(%rbx),%r8
   14d04:	48 c1 e2 04          	shl    $0x4,%rdx
   14d08:	48 8d 7c 13 24       	lea    0x24(%rbx,%rdx,1),%rdi
   14d0d:	0f 1f 00             	nopl   (%rax)
   14d10:	45 8b 68 08          	mov    0x8(%r8),%r13d
   14d14:	45 8b 50 04          	mov    0x4(%r8),%r10d
   14d18:	49 83 c0 10          	add    $0x10,%r8
   14d1c:	41 8b 70 fc          	mov    -0x4(%r8),%esi
   14d20:	41 8b 68 f0          	mov    -0x10(%r8),%ebp
   14d24:	41 0f cd             	bswap  %r13d
   14d27:	45 89 eb             	mov    %r13d,%r11d
   14d2a:	44 89 d2             	mov    %r10d,%edx
   14d2d:	44 89 d3             	mov    %r10d,%ebx
   14d30:	c1 c6 10             	rol    $0x10,%esi
   14d33:	41 c1 c3 10          	rol    $0x10,%r11d
   14d37:	41 89 ec             	mov    %ebp,%r12d
   14d3a:	41 c1 c4 10          	rol    $0x10,%r12d
   14d3e:	89 f1                	mov    %esi,%ecx
   14d40:	44 31 da             	xor    %r11d,%edx
   14d43:	44 31 ee             	xor    %r13d,%esi
   14d46:	0f c9                	bswap  %ecx
   14d48:	0f ca                	bswap  %edx
   14d4a:	c1 c1 10             	rol    $0x10,%ecx
   14d4d:	c1 c2 10             	rol    $0x10,%edx
   14d50:	31 ca                	xor    %ecx,%edx
   14d52:	c1 c3 10             	rol    $0x10,%ebx
   14d55:	41 89 c9             	mov    %ecx,%r9d
   14d58:	44 31 e2             	xor    %r12d,%edx
   14d5b:	89 d9                	mov    %ebx,%ecx
   14d5d:	41 89 d2             	mov    %edx,%r10d
   14d60:	0f c9                	bswap  %ecx
   14d62:	c1 c1 10             	rol    $0x10,%ecx
   14d65:	41 31 f2             	xor    %esi,%r10d
   14d68:	c1 c6 10             	rol    $0x10,%esi
   14d6b:	44 31 e1             	xor    %r12d,%ecx
   14d6e:	31 d6                	xor    %edx,%esi
   14d70:	c1 c2 10             	rol    $0x10,%edx
   14d73:	44 31 d5             	xor    %r10d,%ebp
   14d76:	0f ce                	bswap  %esi
   14d78:	c1 c6 10             	rol    $0x10,%esi
   14d7b:	41 89 68 f4          	mov    %ebp,-0xc(%r8)
   14d7f:	31 de                	xor    %ebx,%esi
   14d81:	41 89 70 f0          	mov    %esi,-0x10(%r8)
   14d85:	89 d6                	mov    %edx,%esi
   14d87:	0f ce                	bswap  %esi
   14d89:	c1 c6 10             	rol    $0x10,%esi
   14d8c:	41 31 f3             	xor    %esi,%r11d
   14d8f:	41 31 cb             	xor    %ecx,%r11d
   14d92:	c1 c1 10             	rol    $0x10,%ecx
   14d95:	0f c9                	bswap  %ecx
   14d97:	c1 c1 10             	rol    $0x10,%ecx
   14d9a:	45 89 58 fc          	mov    %r11d,-0x4(%r8)
   14d9e:	44 31 c9             	xor    %r9d,%ecx
   14da1:	31 ca                	xor    %ecx,%edx
   14da3:	41 89 50 f8          	mov    %edx,-0x8(%r8)
   14da7:	49 39 f8             	cmp    %rdi,%r8
   14daa:	0f 85 60 ff ff ff    	jne    14d10 <mbedtls_aria_setkey_dec+0x90>
   14db0:	48 83 c4 08          	add    $0x8,%rsp
   14db4:	5b                   	pop    %rbx
   14db5:	5d                   	pop    %rbp
   14db6:	41 5c                	pop    %r12
   14db8:	41 5d                	pop    %r13
   14dba:	c3                   	retq   
   14dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000014dc0 <mbedtls_aria_crypt_ecb>:
   14dc0:	f3 0f 1e fa          	endbr64 
   14dc4:	41 57                	push   %r15
   14dc6:	48 89 f0             	mov    %rsi,%rax
   14dc9:	4c 8d 4f 04          	lea    0x4(%rdi),%r9
   14dcd:	4c 8d 1d 6c 03 01 00 	lea    0x1036c(%rip),%r11        # 25140 <aria_sb1>
   14dd4:	41 56                	push   %r14
   14dd6:	4c 8d 15 63 02 01 00 	lea    0x10263(%rip),%r10        # 25040 <aria_sb2>
   14ddd:	41 55                	push   %r13
   14ddf:	41 54                	push   %r12
   14de1:	4c 8d 25 58 01 01 00 	lea    0x10158(%rip),%r12        # 24f40 <aria_is1>
   14de8:	55                   	push   %rbp
   14de9:	53                   	push   %rbx
   14dea:	0f b6 1f             	movzbl (%rdi),%ebx
   14ded:	8b 48 08             	mov    0x8(%rax),%ecx
   14df0:	8b 2e                	mov    (%rsi),%ebp
   14df2:	44 8b 40 0c          	mov    0xc(%rax),%r8d
   14df6:	8b 76 04             	mov    0x4(%rsi),%esi
   14df9:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
   14dfe:	89 ca                	mov    %ecx,%edx
   14e00:	88 5c 24 ef          	mov    %bl,-0x11(%rsp)
   14e04:	89 5c 24 e8          	mov    %ebx,-0x18(%rsp)
   14e08:	48 8d 1d 31 00 01 00 	lea    0x10031(%rip),%rbx        # 24e40 <aria_is2>
   14e0f:	48 89 7c 24 f0       	mov    %rdi,-0x10(%rsp)
   14e14:	c7 44 24 e0 00 00 00 	movl   $0x0,-0x20(%rsp)
   14e1b:	00 
   14e1c:	eb 77                	jmp    14e95 <mbedtls_aria_crypt_ecb+0xd5>
   14e1e:	66 90                	xchg   %ax,%ax
   14e20:	c1 c7 10             	rol    $0x10,%edi
   14e23:	0f cd                	bswap  %ebp
   14e25:	41 89 ee             	mov    %ebp,%r14d
   14e28:	44 89 f9             	mov    %r15d,%ecx
   14e2b:	41 c1 c6 10          	rol    $0x10,%r14d
   14e2f:	89 fa                	mov    %edi,%edx
   14e31:	89 f8                	mov    %edi,%eax
   14e33:	45 89 f8             	mov    %r15d,%r8d
   14e36:	44 31 f1             	xor    %r14d,%ecx
   14e39:	0f ca                	bswap  %edx
   14e3b:	c1 c2 10             	rol    $0x10,%edx
   14e3e:	31 e8                	xor    %ebp,%eax
   14e40:	41 89 d5             	mov    %edx,%r13d
   14e43:	0f c9                	bswap  %ecx
   14e45:	89 f2                	mov    %esi,%edx
   14e47:	c1 c1 10             	rol    $0x10,%ecx
   14e4a:	c1 c2 10             	rol    $0x10,%edx
   14e4d:	31 c6                	xor    %eax,%esi
   14e4f:	44 31 e9             	xor    %r13d,%ecx
   14e52:	c1 c0 10             	rol    $0x10,%eax
   14e55:	31 d1                	xor    %edx,%ecx
   14e57:	89 c5                	mov    %eax,%ebp
   14e59:	41 c1 c0 10          	rol    $0x10,%r8d
   14e5d:	31 cd                	xor    %ecx,%ebp
   14e5f:	31 ce                	xor    %ecx,%esi
   14e61:	c1 c1 10             	rol    $0x10,%ecx
   14e64:	44 89 c7             	mov    %r8d,%edi
   14e67:	0f cd                	bswap  %ebp
   14e69:	c1 c5 10             	rol    $0x10,%ebp
   14e6c:	0f cf                	bswap  %edi
   14e6e:	c1 c7 10             	rol    $0x10,%edi
   14e71:	44 31 c5             	xor    %r8d,%ebp
   14e74:	41 89 c8             	mov    %ecx,%r8d
   14e77:	31 d7                	xor    %edx,%edi
   14e79:	41 0f c8             	bswap  %r8d
   14e7c:	41 c1 c0 10          	rol    $0x10,%r8d
   14e80:	45 31 f0             	xor    %r14d,%r8d
   14e83:	41 31 f8             	xor    %edi,%r8d
   14e86:	c1 c7 10             	rol    $0x10,%edi
   14e89:	89 fa                	mov    %edi,%edx
   14e8b:	0f ca                	bswap  %edx
   14e8d:	c1 c2 10             	rol    $0x10,%edx
   14e90:	44 31 ea             	xor    %r13d,%edx
   14e93:	31 ca                	xor    %ecx,%edx
   14e95:	41 33 29             	xor    (%r9),%ebp
   14e98:	41 33 71 04          	xor    0x4(%r9),%esi
   14e9c:	89 e8                	mov    %ebp,%eax
   14e9e:	40 0f b6 cd          	movzbl %bpl,%ecx
   14ea2:	45 33 41 0c          	xor    0xc(%r9),%r8d
   14ea6:	41 33 51 08          	xor    0x8(%r9),%edx
   14eaa:	c1 e8 18             	shr    $0x18,%eax
   14ead:	41 0f b6 3c 0b       	movzbl (%r11,%rcx,1),%edi
   14eb2:	89 e9                	mov    %ebp,%ecx
   14eb4:	c1 ed 10             	shr    $0x10,%ebp
   14eb7:	0f b6 04 03          	movzbl (%rbx,%rax,1),%eax
   14ebb:	0f b6 cd             	movzbl %ch,%ecx
   14ebe:	40 0f b6 ed          	movzbl %bpl,%ebp
   14ec2:	c1 e0 18             	shl    $0x18,%eax
   14ec5:	31 f8                	xor    %edi,%eax
   14ec7:	41 0f b6 3c 0a       	movzbl (%r10,%rcx,1),%edi
   14ecc:	c1 e7 08             	shl    $0x8,%edi
   14ecf:	31 f8                	xor    %edi,%eax
   14ed1:	41 0f b6 3c 2c       	movzbl (%r12,%rbp,1),%edi
   14ed6:	c1 e7 10             	shl    $0x10,%edi
   14ed9:	31 f8                	xor    %edi,%eax
   14edb:	41 89 c7             	mov    %eax,%r15d
   14ede:	89 f0                	mov    %esi,%eax
   14ee0:	c1 e8 18             	shr    $0x18,%eax
   14ee3:	44 0f b6 34 03       	movzbl (%rbx,%rax,1),%r14d
   14ee8:	40 0f b6 c6          	movzbl %sil,%eax
   14eec:	41 0f b6 04 03       	movzbl (%r11,%rax,1),%eax
   14ef1:	41 c1 e6 18          	shl    $0x18,%r14d
   14ef5:	41 31 c6             	xor    %eax,%r14d
   14ef8:	89 f0                	mov    %esi,%eax
   14efa:	c1 ee 10             	shr    $0x10,%esi
   14efd:	0f b6 c4             	movzbl %ah,%eax
   14f00:	40 0f b6 f6          	movzbl %sil,%esi
   14f04:	41 0f b6 04 02       	movzbl (%r10,%rax,1),%eax
   14f09:	c1 e0 08             	shl    $0x8,%eax
   14f0c:	41 31 c6             	xor    %eax,%r14d
   14f0f:	41 0f b6 04 34       	movzbl (%r12,%rsi,1),%eax
   14f14:	c1 e0 10             	shl    $0x10,%eax
   14f17:	41 31 c6             	xor    %eax,%r14d
   14f1a:	44 89 f0             	mov    %r14d,%eax
   14f1d:	c1 c0 10             	rol    $0x10,%eax
   14f20:	89 44 24 e4          	mov    %eax,-0x1c(%rsp)
   14f24:	44 89 c0             	mov    %r8d,%eax
   14f27:	c1 e8 18             	shr    $0x18,%eax
   14f2a:	0f b6 3c 03          	movzbl (%rbx,%rax,1),%edi
   14f2e:	41 0f b6 c0          	movzbl %r8b,%eax
   14f32:	41 0f b6 34 03       	movzbl (%r11,%rax,1),%esi
   14f37:	44 89 c0             	mov    %r8d,%eax
   14f3a:	41 c1 e8 10          	shr    $0x10,%r8d
   14f3e:	c1 e7 18             	shl    $0x18,%edi
   14f41:	0f b6 c4             	movzbl %ah,%eax
   14f44:	45 0f b6 c0          	movzbl %r8b,%r8d
   14f48:	31 f7                	xor    %esi,%edi
   14f4a:	41 0f b6 34 02       	movzbl (%r10,%rax,1),%esi
   14f4f:	89 d0                	mov    %edx,%eax
   14f51:	c1 e8 18             	shr    $0x18,%eax
   14f54:	c1 e6 08             	shl    $0x8,%esi
   14f57:	31 f7                	xor    %esi,%edi
   14f59:	43 0f b6 34 04       	movzbl (%r12,%r8,1),%esi
   14f5e:	44 8b 44 24 e4       	mov    -0x1c(%rsp),%r8d
   14f63:	c1 e6 10             	shl    $0x10,%esi
   14f66:	41 0f c8             	bswap  %r8d
   14f69:	31 f7                	xor    %esi,%edi
   14f6b:	89 fe                	mov    %edi,%esi
   14f6d:	0f b6 3c 03          	movzbl (%rbx,%rax,1),%edi
   14f71:	0f b6 c2             	movzbl %dl,%eax
   14f74:	41 0f b6 0c 03       	movzbl (%r11,%rax,1),%ecx
   14f79:	0f b6 c6             	movzbl %dh,%eax
   14f7c:	c1 c6 10             	rol    $0x10,%esi
   14f7f:	c1 e7 18             	shl    $0x18,%edi
   14f82:	89 f5                	mov    %esi,%ebp
   14f84:	31 cf                	xor    %ecx,%edi
   14f86:	41 0f b6 0c 02       	movzbl (%r10,%rax,1),%ecx
   14f8b:	c1 ea 10             	shr    $0x10,%edx
   14f8e:	0f cd                	bswap  %ebp
   14f90:	c1 c5 10             	rol    $0x10,%ebp
   14f93:	0f b6 d2             	movzbl %dl,%edx
   14f96:	41 c1 c0 10          	rol    $0x10,%r8d
   14f9a:	c1 e1 08             	shl    $0x8,%ecx
   14f9d:	31 cf                	xor    %ecx,%edi
   14f9f:	41 0f b6 0c 14       	movzbl (%r12,%rdx,1),%ecx
   14fa4:	44 89 fa             	mov    %r15d,%edx
   14fa7:	45 33 79 14          	xor    0x14(%r9),%r15d
   14fab:	c1 c2 10             	rol    $0x10,%edx
   14fae:	c1 e1 10             	shl    $0x10,%ecx
   14fb1:	41 31 d0             	xor    %edx,%r8d
   14fb4:	31 cf                	xor    %ecx,%edi
   14fb6:	0f cf                	bswap  %edi
   14fb8:	41 89 fd             	mov    %edi,%r13d
   14fbb:	31 fe                	xor    %edi,%esi
   14fbd:	41 c1 c5 10          	rol    $0x10,%r13d
   14fc1:	89 f1                	mov    %esi,%ecx
   14fc3:	89 f7                	mov    %esi,%edi
   14fc5:	45 31 ee             	xor    %r13d,%r14d
   14fc8:	c1 c1 10             	rol    $0x10,%ecx
   14fcb:	44 89 f0             	mov    %r14d,%eax
   14fce:	0f c8                	bswap  %eax
   14fd0:	c1 c0 10             	rol    $0x10,%eax
   14fd3:	31 e8                	xor    %ebp,%eax
   14fd5:	31 d0                	xor    %edx,%eax
   14fd7:	44 89 c2             	mov    %r8d,%edx
   14fda:	41 89 c6             	mov    %eax,%r14d
   14fdd:	31 c1                	xor    %eax,%ecx
   14fdf:	c1 c2 10             	rol    $0x10,%edx
   14fe2:	44 31 f8             	xor    %r15d,%eax
   14fe5:	41 c1 c6 10          	rol    $0x10,%r14d
   14fe9:	0f c9                	bswap  %ecx
   14feb:	0f ca                	bswap  %edx
   14fed:	c1 c1 10             	rol    $0x10,%ecx
   14ff0:	c1 c2 10             	rol    $0x10,%edx
   14ff3:	41 33 49 10          	xor    0x10(%r9),%ecx
   14ff7:	44 89 f6             	mov    %r14d,%esi
   14ffa:	33 4c 24 e4          	xor    -0x1c(%rsp),%ecx
   14ffe:	31 d5                	xor    %edx,%ebp
   15000:	0f ce                	bswap  %esi
   15002:	41 33 69 18          	xor    0x18(%r9),%ebp
   15006:	c1 c6 10             	rol    $0x10,%esi
   15009:	89 ca                	mov    %ecx,%edx
   1500b:	31 f8                	xor    %edi,%eax
   1500d:	41 31 ee             	xor    %ebp,%r14d
   15010:	41 31 f5             	xor    %esi,%r13d
   15013:	45 33 69 1c          	xor    0x1c(%r9),%r13d
   15017:	c1 ea 18             	shr    $0x18,%edx
   1501a:	83 44 24 e0 02       	addl   $0x2,-0x20(%rsp)
   1501f:	41 0f b6 34 12       	movzbl (%r10,%rdx,1),%esi
   15024:	0f b6 d1             	movzbl %cl,%edx
   15027:	45 31 e8             	xor    %r13d,%r8d
   1502a:	44 8b 6c 24 e0       	mov    -0x20(%rsp),%r13d
   1502f:	41 0f b6 14 14       	movzbl (%r12,%rdx,1),%edx
   15034:	c1 e6 18             	shl    $0x18,%esi
   15037:	31 d6                	xor    %edx,%esi
   15039:	0f b6 d5             	movzbl %ch,%edx
   1503c:	c1 e9 10             	shr    $0x10,%ecx
   1503f:	0f b6 14 13          	movzbl (%rbx,%rdx,1),%edx
   15043:	0f b6 c9             	movzbl %cl,%ecx
   15046:	c1 e2 08             	shl    $0x8,%edx
   15049:	31 d6                	xor    %edx,%esi
   1504b:	41 0f b6 14 0b       	movzbl (%r11,%rcx,1),%edx
   15050:	c1 e2 10             	shl    $0x10,%edx
   15053:	31 d6                	xor    %edx,%esi
   15055:	89 c2                	mov    %eax,%edx
   15057:	c1 ea 18             	shr    $0x18,%edx
   1505a:	45 0f b6 3c 12       	movzbl (%r10,%rdx,1),%r15d
   1505f:	0f b6 d0             	movzbl %al,%edx
   15062:	41 0f b6 14 14       	movzbl (%r12,%rdx,1),%edx
   15067:	41 c1 e7 18          	shl    $0x18,%r15d
   1506b:	41 31 d7             	xor    %edx,%r15d
   1506e:	0f b6 d4             	movzbl %ah,%edx
   15071:	c1 e8 10             	shr    $0x10,%eax
   15074:	0f b6 0c 13          	movzbl (%rbx,%rdx,1),%ecx
   15078:	0f b6 c0             	movzbl %al,%eax
   1507b:	c1 e1 08             	shl    $0x8,%ecx
   1507e:	41 31 cf             	xor    %ecx,%r15d
   15081:	41 0f b6 0c 03       	movzbl (%r11,%rax,1),%ecx
   15086:	44 89 f0             	mov    %r14d,%eax
   15089:	c1 e8 18             	shr    $0x18,%eax
   1508c:	41 0f b6 2c 02       	movzbl (%r10,%rax,1),%ebp
   15091:	41 0f b6 c6          	movzbl %r14b,%eax
   15095:	c1 e1 10             	shl    $0x10,%ecx
   15098:	41 0f b6 04 04       	movzbl (%r12,%rax,1),%eax
   1509d:	41 31 cf             	xor    %ecx,%r15d
   150a0:	c1 e5 18             	shl    $0x18,%ebp
   150a3:	31 c5                	xor    %eax,%ebp
   150a5:	44 89 f0             	mov    %r14d,%eax
   150a8:	41 c1 ee 10          	shr    $0x10,%r14d
   150ac:	0f b6 c4             	movzbl %ah,%eax
   150af:	45 0f b6 f6          	movzbl %r14b,%r14d
   150b3:	0f b6 04 03          	movzbl (%rbx,%rax,1),%eax
   150b7:	c1 e0 08             	shl    $0x8,%eax
   150ba:	31 c5                	xor    %eax,%ebp
   150bc:	43 0f b6 04 33       	movzbl (%r11,%r14,1),%eax
   150c1:	c1 e0 10             	shl    $0x10,%eax
   150c4:	31 c5                	xor    %eax,%ebp
   150c6:	44 89 c0             	mov    %r8d,%eax
   150c9:	c1 e8 18             	shr    $0x18,%eax
   150cc:	41 0f b6 3c 02       	movzbl (%r10,%rax,1),%edi
   150d1:	41 0f b6 c0          	movzbl %r8b,%eax
   150d5:	41 0f b6 04 04       	movzbl (%r12,%rax,1),%eax
   150da:	c1 e7 18             	shl    $0x18,%edi
   150dd:	31 c7                	xor    %eax,%edi
   150df:	44 89 c0             	mov    %r8d,%eax
   150e2:	0f b6 c4             	movzbl %ah,%eax
   150e5:	0f b6 04 03          	movzbl (%rbx,%rax,1),%eax
   150e9:	c1 e0 08             	shl    $0x8,%eax
   150ec:	31 c7                	xor    %eax,%edi
   150ee:	41 c1 e8 10          	shr    $0x10,%r8d
   150f2:	49 83 c1 20          	add    $0x20,%r9
   150f6:	45 0f b6 c0          	movzbl %r8b,%r8d
   150fa:	43 0f b6 04 03       	movzbl (%r11,%r8,1),%eax
   150ff:	c1 e0 10             	shl    $0x10,%eax
   15102:	31 c7                	xor    %eax,%edi
   15104:	44 39 6c 24 e8       	cmp    %r13d,-0x18(%rsp)
   15109:	0f 8f 11 fd ff ff    	jg     14e20 <mbedtls_aria_crypt_ecb+0x60>
   1510f:	8b 4c 24 e8          	mov    -0x18(%rsp),%ecx
   15113:	89 f8                	mov    %edi,%eax
   15115:	89 ea                	mov    %ebp,%edx
   15117:	83 e9 01             	sub    $0x1,%ecx
   1511a:	d1 e9                	shr    %ecx
   1511c:	80 7c 24 ef 00       	cmpb   $0x0,-0x11(%rsp)
   15121:	8d 7c 09 02          	lea    0x2(%rcx,%rcx,1),%edi
   15125:	b9 02 00 00 00       	mov    $0x2,%ecx
   1512a:	0f 44 f9             	cmove  %ecx,%edi
   1512d:	48 63 ff             	movslq %edi,%rdi
   15130:	48 c1 e7 04          	shl    $0x4,%rdi
   15134:	48 03 7c 24 f0       	add    -0x10(%rsp),%rdi
   15139:	33 47 10             	xor    0x10(%rdi),%eax
   1513c:	44 33 7f 08          	xor    0x8(%rdi),%r15d
   15140:	41 89 c5             	mov    %eax,%r13d
   15143:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   15148:	33 57 0c             	xor    0xc(%rdi),%edx
   1514b:	33 77 04             	xor    0x4(%rdi),%esi
   1514e:	89 30                	mov    %esi,(%rax)
   15150:	44 89 78 04          	mov    %r15d,0x4(%rax)
   15154:	89 50 08             	mov    %edx,0x8(%rax)
   15157:	44 89 68 0c          	mov    %r13d,0xc(%rax)
   1515b:	31 c0                	xor    %eax,%eax
   1515d:	5b                   	pop    %rbx
   1515e:	5d                   	pop    %rbp
   1515f:	41 5c                	pop    %r12
   15161:	41 5d                	pop    %r13
   15163:	41 5e                	pop    %r14
   15165:	41 5f                	pop    %r15
   15167:	c3                   	retq   
   15168:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1516f:	00 

0000000000015170 <mbedtls_aria_crypt_cbc.part.0>:
   15170:	48 85 f6             	test   %rsi,%rsi
   15173:	74 6b                	je     151e0 <mbedtls_aria_crypt_cbc.part.0+0x70>
   15175:	41 56                	push   %r14
   15177:	4d 8d 34 30          	lea    (%r8,%rsi,1),%r14
   1517b:	41 55                	push   %r13
   1517d:	49 89 d5             	mov    %rdx,%r13
   15180:	41 54                	push   %r12
   15182:	49 89 fc             	mov    %rdi,%r12
   15185:	55                   	push   %rbp
   15186:	48 89 cd             	mov    %rcx,%rbp
   15189:	53                   	push   %rbx
   1518a:	4c 89 c3             	mov    %r8,%rbx
   1518d:	0f 1f 00             	nopl   (%rax)
   15190:	48 89 da             	mov    %rbx,%rdx
   15193:	48 89 ee             	mov    %rbp,%rsi
   15196:	4c 89 e7             	mov    %r12,%rdi
   15199:	f3 0f 6f 45 00       	movdqu 0x0(%rbp),%xmm0
   1519e:	e8 1d fc ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   151a3:	31 c0                	xor    %eax,%eax
   151a5:	0f 1f 00             	nopl   (%rax)
   151a8:	41 8b 54 05 00       	mov    0x0(%r13,%rax,1),%edx
   151ad:	31 14 03             	xor    %edx,(%rbx,%rax,1)
   151b0:	48 83 c0 04          	add    $0x4,%rax
   151b4:	48 83 f8 10          	cmp    $0x10,%rax
   151b8:	75 ee                	jne    151a8 <mbedtls_aria_crypt_cbc.part.0+0x38>
   151ba:	48 83 c3 10          	add    $0x10,%rbx
   151be:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
   151c3:	48 83 c5 10          	add    $0x10,%rbp
   151c7:	4c 39 f3             	cmp    %r14,%rbx
   151ca:	75 c4                	jne    15190 <mbedtls_aria_crypt_cbc.part.0+0x20>
   151cc:	5b                   	pop    %rbx
   151cd:	31 c0                	xor    %eax,%eax
   151cf:	5d                   	pop    %rbp
   151d0:	41 5c                	pop    %r12
   151d2:	41 5d                	pop    %r13
   151d4:	41 5e                	pop    %r14
   151d6:	c3                   	retq   
   151d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   151de:	00 00 
   151e0:	31 c0                	xor    %eax,%eax
   151e2:	c3                   	retq   
   151e3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   151ea:	00 00 00 00 
   151ee:	66 90                	xchg   %ax,%ax

00000000000151f0 <mbedtls_aria_init>:
   151f0:	f3 0f 1e fa          	endbr64 
   151f4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   151fb:	48 89 f9             	mov    %rdi,%rcx
   151fe:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   15202:	31 c0                	xor    %eax,%eax
   15204:	48 c7 87 04 01 00 00 	movq   $0x0,0x104(%rdi)
   1520b:	00 00 00 00 
   1520f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   15213:	48 29 f9             	sub    %rdi,%rcx
   15216:	81 c1 14 01 00 00    	add    $0x114,%ecx
   1521c:	c1 e9 03             	shr    $0x3,%ecx
   1521f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   15222:	c3                   	retq   
   15223:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1522a:	00 00 00 00 
   1522e:	66 90                	xchg   %ax,%ax

0000000000015230 <mbedtls_aria_free>:
   15230:	f3 0f 1e fa          	endbr64 
   15234:	48 85 ff             	test   %rdi,%rdi
   15237:	74 0f                	je     15248 <mbedtls_aria_free+0x18>
   15239:	be 14 01 00 00       	mov    $0x114,%esi
   1523e:	e9 ed ff fe ff       	jmpq   5230 <mbedtls_platform_zeroize>
   15243:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15248:	c3                   	retq   
   15249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000015250 <mbedtls_aria_crypt_cbc>:
   15250:	f3 0f 1e fa          	endbr64 
   15254:	f6 c2 0f             	test   $0xf,%dl
   15257:	0f 85 91 00 00 00    	jne    152ee <mbedtls_aria_crypt_cbc+0x9e>
   1525d:	89 f0                	mov    %esi,%eax
   1525f:	41 56                	push   %r14
   15261:	48 89 d6             	mov    %rdx,%rsi
   15264:	49 89 fe             	mov    %rdi,%r14
   15267:	41 55                	push   %r13
   15269:	49 89 cd             	mov    %rcx,%r13
   1526c:	41 54                	push   %r12
   1526e:	4d 89 c4             	mov    %r8,%r12
   15271:	55                   	push   %rbp
   15272:	53                   	push   %rbx
   15273:	85 c0                	test   %eax,%eax
   15275:	75 19                	jne    15290 <mbedtls_aria_crypt_cbc+0x40>
   15277:	5b                   	pop    %rbx
   15278:	4c 89 e1             	mov    %r12,%rcx
   1527b:	5d                   	pop    %rbp
   1527c:	4c 89 ea             	mov    %r13,%rdx
   1527f:	41 5c                	pop    %r12
   15281:	4d 89 c8             	mov    %r9,%r8
   15284:	41 5d                	pop    %r13
   15286:	41 5e                	pop    %r14
   15288:	e9 e3 fe ff ff       	jmpq   15170 <mbedtls_aria_crypt_cbc.part.0>
   1528d:	0f 1f 00             	nopl   (%rax)
   15290:	4c 89 cb             	mov    %r9,%rbx
   15293:	49 8d 2c 11          	lea    (%r9,%rdx,1),%rbp
   15297:	48 85 d2             	test   %rdx,%rdx
   1529a:	74 47                	je     152e3 <mbedtls_aria_crypt_cbc+0x93>
   1529c:	0f 1f 40 00          	nopl   0x0(%rax)
   152a0:	31 c0                	xor    %eax,%eax
   152a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   152a8:	41 8b 14 04          	mov    (%r12,%rax,1),%edx
   152ac:	41 33 54 05 00       	xor    0x0(%r13,%rax,1),%edx
   152b1:	89 14 03             	mov    %edx,(%rbx,%rax,1)
   152b4:	48 83 c0 04          	add    $0x4,%rax
   152b8:	48 83 f8 10          	cmp    $0x10,%rax
   152bc:	75 ea                	jne    152a8 <mbedtls_aria_crypt_cbc+0x58>
   152be:	48 89 da             	mov    %rbx,%rdx
   152c1:	48 89 de             	mov    %rbx,%rsi
   152c4:	4c 89 f7             	mov    %r14,%rdi
   152c7:	48 83 c3 10          	add    $0x10,%rbx
   152cb:	e8 f0 fa ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   152d0:	f3 0f 6f 43 f0       	movdqu -0x10(%rbx),%xmm0
   152d5:	49 83 c4 10          	add    $0x10,%r12
   152d9:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
   152de:	48 39 eb             	cmp    %rbp,%rbx
   152e1:	75 bd                	jne    152a0 <mbedtls_aria_crypt_cbc+0x50>
   152e3:	5b                   	pop    %rbx
   152e4:	31 c0                	xor    %eax,%eax
   152e6:	5d                   	pop    %rbp
   152e7:	41 5c                	pop    %r12
   152e9:	41 5d                	pop    %r13
   152eb:	41 5e                	pop    %r14
   152ed:	c3                   	retq   
   152ee:	b8 a2 ff ff ff       	mov    $0xffffffa2,%eax
   152f3:	c3                   	retq   
   152f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   152fb:	00 00 00 00 
   152ff:	90                   	nop

0000000000015300 <mbedtls_aria_crypt_cfb128>:
   15300:	f3 0f 1e fa          	endbr64 
   15304:	41 57                	push   %r15
   15306:	41 56                	push   %r14
   15308:	41 55                	push   %r13
   1530a:	41 54                	push   %r12
   1530c:	55                   	push   %rbp
   1530d:	53                   	push   %rbx
   1530e:	48 83 ec 08          	sub    $0x8,%rsp
   15312:	48 8b 19             	mov    (%rcx),%rbx
   15315:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
   1531a:	48 83 fb 0f          	cmp    $0xf,%rbx
   1531e:	0f 87 d9 00 00 00    	ja     153fd <mbedtls_aria_crypt_cfb128+0xfd>
   15324:	49 89 ff             	mov    %rdi,%r15
   15327:	49 89 cd             	mov    %rcx,%r13
   1532a:	4d 89 c6             	mov    %r8,%r14
   1532d:	4c 89 cd             	mov    %r9,%rbp
   15330:	85 f6                	test   %esi,%esi
   15332:	75 5c                	jne    15390 <mbedtls_aria_crypt_cfb128+0x90>
   15334:	48 85 d2             	test   %rdx,%rdx
   15337:	0f 84 ab 00 00 00    	je     153e8 <mbedtls_aria_crypt_cfb128+0xe8>
   1533d:	49 8d 0c 11          	lea    (%r9,%rdx,1),%rcx
   15341:	eb 2d                	jmp    15370 <mbedtls_aria_crypt_cfb128+0x70>
   15343:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15348:	49 8d 04 1e          	lea    (%r14,%rbx,1),%rax
   1534c:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   15350:	48 83 c5 01          	add    $0x1,%rbp
   15354:	49 83 c4 01          	add    $0x1,%r12
   15358:	0f b6 30             	movzbl (%rax),%esi
   1535b:	48 83 c3 01          	add    $0x1,%rbx
   1535f:	83 e3 0f             	and    $0xf,%ebx
   15362:	31 d6                	xor    %edx,%esi
   15364:	41 88 74 24 ff       	mov    %sil,-0x1(%r12)
   15369:	88 10                	mov    %dl,(%rax)
   1536b:	48 39 cd             	cmp    %rcx,%rbp
   1536e:	74 78                	je     153e8 <mbedtls_aria_crypt_cfb128+0xe8>
   15370:	48 85 db             	test   %rbx,%rbx
   15373:	75 d3                	jne    15348 <mbedtls_aria_crypt_cfb128+0x48>
   15375:	4c 89 f2             	mov    %r14,%rdx
   15378:	4c 89 f6             	mov    %r14,%rsi
   1537b:	4c 89 ff             	mov    %r15,%rdi
   1537e:	48 89 0c 24          	mov    %rcx,(%rsp)
   15382:	e8 39 fa ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   15387:	48 8b 0c 24          	mov    (%rsp),%rcx
   1538b:	eb bb                	jmp    15348 <mbedtls_aria_crypt_cfb128+0x48>
   1538d:	0f 1f 00             	nopl   (%rax)
   15390:	49 8d 0c 11          	lea    (%r9,%rdx,1),%rcx
   15394:	48 85 d2             	test   %rdx,%rdx
   15397:	75 2c                	jne    153c5 <mbedtls_aria_crypt_cfb128+0xc5>
   15399:	eb 4d                	jmp    153e8 <mbedtls_aria_crypt_cfb128+0xe8>
   1539b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   153a0:	49 8d 14 1e          	lea    (%r14,%rbx,1),%rdx
   153a4:	48 83 c5 01          	add    $0x1,%rbp
   153a8:	49 83 c4 01          	add    $0x1,%r12
   153ac:	48 83 c3 01          	add    $0x1,%rbx
   153b0:	0f b6 02             	movzbl (%rdx),%eax
   153b3:	32 45 ff             	xor    -0x1(%rbp),%al
   153b6:	83 e3 0f             	and    $0xf,%ebx
   153b9:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   153be:	88 02                	mov    %al,(%rdx)
   153c0:	48 39 cd             	cmp    %rcx,%rbp
   153c3:	74 23                	je     153e8 <mbedtls_aria_crypt_cfb128+0xe8>
   153c5:	48 85 db             	test   %rbx,%rbx
   153c8:	75 d6                	jne    153a0 <mbedtls_aria_crypt_cfb128+0xa0>
   153ca:	4c 89 f2             	mov    %r14,%rdx
   153cd:	4c 89 f6             	mov    %r14,%rsi
   153d0:	4c 89 ff             	mov    %r15,%rdi
   153d3:	48 89 0c 24          	mov    %rcx,(%rsp)
   153d7:	e8 e4 f9 ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   153dc:	48 8b 0c 24          	mov    (%rsp),%rcx
   153e0:	eb be                	jmp    153a0 <mbedtls_aria_crypt_cfb128+0xa0>
   153e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   153e8:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   153ec:	31 c0                	xor    %eax,%eax
   153ee:	48 83 c4 08          	add    $0x8,%rsp
   153f2:	5b                   	pop    %rbx
   153f3:	5d                   	pop    %rbp
   153f4:	41 5c                	pop    %r12
   153f6:	41 5d                	pop    %r13
   153f8:	41 5e                	pop    %r14
   153fa:	41 5f                	pop    %r15
   153fc:	c3                   	retq   
   153fd:	b8 a4 ff ff ff       	mov    $0xffffffa4,%eax
   15402:	eb ea                	jmp    153ee <mbedtls_aria_crypt_cfb128+0xee>
   15404:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1540b:	00 00 00 00 
   1540f:	90                   	nop

0000000000015410 <mbedtls_aria_crypt_ctr>:
   15410:	f3 0f 1e fa          	endbr64 
   15414:	41 57                	push   %r15
   15416:	41 56                	push   %r14
   15418:	41 55                	push   %r13
   1541a:	41 54                	push   %r12
   1541c:	55                   	push   %rbp
   1541d:	53                   	push   %rbx
   1541e:	48 83 ec 18          	sub    $0x18,%rsp
   15422:	48 8b 1a             	mov    (%rdx),%rbx
   15425:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1542a:	48 83 fb 0f          	cmp    $0xf,%rbx
   1542e:	0f 87 a0 00 00 00    	ja     154d4 <mbedtls_aria_crypt_ctr+0xc4>
   15434:	49 89 d7             	mov    %rdx,%r15
   15437:	48 85 f6             	test   %rsi,%rsi
   1543a:	0f 84 80 00 00 00    	je     154c0 <mbedtls_aria_crypt_ctr+0xb0>
   15440:	48 8d 41 0f          	lea    0xf(%rcx),%rax
   15444:	49 89 ce             	mov    %rcx,%r14
   15447:	4d 8d 2c 31          	lea    (%r9,%rsi,1),%r13
   1544b:	4c 89 cd             	mov    %r9,%rbp
   1544e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15453:	eb 24                	jmp    15479 <mbedtls_aria_crypt_ctr+0x69>
   15455:	0f 1f 00             	nopl   (%rax)
   15458:	48 83 c5 01          	add    $0x1,%rbp
   1545c:	41 0f b6 04 18       	movzbl (%r8,%rbx,1),%eax
   15461:	49 83 c4 01          	add    $0x1,%r12
   15465:	48 83 c3 01          	add    $0x1,%rbx
   15469:	32 45 ff             	xor    -0x1(%rbp),%al
   1546c:	83 e3 0f             	and    $0xf,%ebx
   1546f:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   15474:	49 39 ed             	cmp    %rbp,%r13
   15477:	74 47                	je     154c0 <mbedtls_aria_crypt_ctr+0xb0>
   15479:	48 85 db             	test   %rbx,%rbx
   1547c:	75 da                	jne    15458 <mbedtls_aria_crypt_ctr+0x48>
   1547e:	4c 89 c2             	mov    %r8,%rdx
   15481:	4c 89 f6             	mov    %r14,%rsi
   15484:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   15489:	48 89 3c 24          	mov    %rdi,(%rsp)
   1548d:	e8 2e f9 ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   15492:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15497:	48 8b 3c 24          	mov    (%rsp),%rdi
   1549b:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   154a0:	eb 09                	jmp    154ab <mbedtls_aria_crypt_ctr+0x9b>
   154a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   154a8:	48 89 c2             	mov    %rax,%rdx
   154ab:	80 02 01             	addb   $0x1,(%rdx)
   154ae:	75 a8                	jne    15458 <mbedtls_aria_crypt_ctr+0x48>
   154b0:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   154b4:	49 39 d6             	cmp    %rdx,%r14
   154b7:	75 ef                	jne    154a8 <mbedtls_aria_crypt_ctr+0x98>
   154b9:	eb 9d                	jmp    15458 <mbedtls_aria_crypt_ctr+0x48>
   154bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   154c0:	49 89 1f             	mov    %rbx,(%r15)
   154c3:	31 c0                	xor    %eax,%eax
   154c5:	48 83 c4 18          	add    $0x18,%rsp
   154c9:	5b                   	pop    %rbx
   154ca:	5d                   	pop    %rbp
   154cb:	41 5c                	pop    %r12
   154cd:	41 5d                	pop    %r13
   154cf:	41 5e                	pop    %r14
   154d1:	41 5f                	pop    %r15
   154d3:	c3                   	retq   
   154d4:	b8 a4 ff ff ff       	mov    $0xffffffa4,%eax
   154d9:	eb ea                	jmp    154c5 <mbedtls_aria_crypt_ctr+0xb5>
   154db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000154e0 <mbedtls_aria_self_test>:
   154e0:	f3 0f 1e fa          	endbr64 
   154e4:	41 57                	push   %r15
   154e6:	b9 22 00 00 00       	mov    $0x22,%ecx
   154eb:	41 89 ff             	mov    %edi,%r15d
   154ee:	41 56                	push   %r14
   154f0:	41 55                	push   %r13
   154f2:	4c 8d 2d 27 f9 00 00 	lea    0xf927(%rip),%r13        # 24e20 <aria_test1_ecb_key>
   154f9:	41 54                	push   %r12
   154fb:	4c 8d 25 de f8 00 00 	lea    0xf8de(%rip),%r12        # 24de0 <aria_test1_ecb_ct>
   15502:	55                   	push   %rbp
   15503:	53                   	push   %rbx
   15504:	bb 80 00 00 00       	mov    $0x80,%ebx
   15509:	48 81 ec b8 01 00 00 	sub    $0x1b8,%rsp
   15510:	89 7c 24 10          	mov    %edi,0x10(%rsp)
   15514:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   15519:	4c 8d b4 24 50 01 00 	lea    0x150(%rsp),%r14
   15520:	00 
   15521:	48 89 ef             	mov    %rbp,%rdi
   15524:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1552b:	00 00 
   1552d:	48 89 84 24 a8 01 00 	mov    %rax,0x1a8(%rsp)
   15534:	00 
   15535:	31 c0                	xor    %eax,%eax
   15537:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1553a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   15540:	89 da                	mov    %ebx,%edx
   15542:	45 85 ff             	test   %r15d,%r15d
   15545:	0f 85 a5 01 00 00    	jne    156f0 <mbedtls_aria_self_test+0x210>
   1554b:	4c 89 ee             	mov    %r13,%rsi
   1554e:	48 89 ef             	mov    %rbp,%rdi
   15551:	e8 fa f2 ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   15556:	4c 89 f2             	mov    %r14,%rdx
   15559:	48 8d 35 b0 f8 00 00 	lea    0xf8b0(%rip),%rsi        # 24e10 <aria_test1_ecb_pt>
   15560:	48 89 ef             	mov    %rbp,%rdi
   15563:	e8 58 f8 ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   15568:	49 8b 06             	mov    (%r14),%rax
   1556b:	49 8b 56 08          	mov    0x8(%r14),%rdx
   1556f:	49 33 04 24          	xor    (%r12),%rax
   15573:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15578:	48 09 c2             	or     %rax,%rdx
   1557b:	74 4b                	je     155c8 <mbedtls_aria_self_test+0xe8>
   1557d:	0f 1f 00             	nopl   (%rax)
   15580:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
   15587:	00 
   15588:	be 14 01 00 00       	mov    $0x114,%esi
   1558d:	48 89 ef             	mov    %rbp,%rdi
   15590:	e8 9b fc fe ff       	callq  5230 <mbedtls_platform_zeroize>
   15595:	48 8b 84 24 a8 01 00 	mov    0x1a8(%rsp),%rax
   1559c:	00 
   1559d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   155a4:	00 00 
   155a6:	0f 85 13 0b 00 00    	jne    160bf <mbedtls_aria_self_test+0xbdf>
   155ac:	8b 44 24 14          	mov    0x14(%rsp),%eax
   155b0:	48 81 c4 b8 01 00 00 	add    $0x1b8,%rsp
   155b7:	5b                   	pop    %rbx
   155b8:	5d                   	pop    %rbp
   155b9:	41 5c                	pop    %r12
   155bb:	41 5d                	pop    %r13
   155bd:	41 5e                	pop    %r14
   155bf:	41 5f                	pop    %r15
   155c1:	c3                   	retq   
   155c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   155c8:	89 da                	mov    %ebx,%edx
   155ca:	4c 89 ee             	mov    %r13,%rsi
   155cd:	48 89 ef             	mov    %rbp,%rdi
   155d0:	e8 ab f6 ff ff       	callq  14c80 <mbedtls_aria_setkey_dec>
   155d5:	4c 89 f2             	mov    %r14,%rdx
   155d8:	4c 89 e6             	mov    %r12,%rsi
   155db:	48 89 ef             	mov    %rbp,%rdi
   155de:	e8 dd f7 ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   155e3:	49 8b 06             	mov    (%r14),%rax
   155e6:	49 8b 56 08          	mov    0x8(%r14),%rdx
   155ea:	48 33 05 1f f8 00 00 	xor    0xf81f(%rip),%rax        # 24e10 <aria_test1_ecb_pt>
   155f1:	48 33 15 20 f8 00 00 	xor    0xf820(%rip),%rdx        # 24e18 <aria_test1_ecb_pt+0x8>
   155f8:	48 09 c2             	or     %rax,%rdx
   155fb:	75 83                	jne    15580 <mbedtls_aria_self_test+0xa0>
   155fd:	83 c3 40             	add    $0x40,%ebx
   15600:	49 83 c4 10          	add    $0x10,%r12
   15604:	81 fb 40 01 00 00    	cmp    $0x140,%ebx
   1560a:	0f 85 30 ff ff ff    	jne    15540 <mbedtls_aria_self_test+0x60>
   15610:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   15614:	85 db                	test   %ebx,%ebx
   15616:	0f 85 64 05 00 00    	jne    15b80 <mbedtls_aria_self_test+0x6a0>
   1561c:	4c 89 f0             	mov    %r14,%rax
   1561f:	4c 8d 2d ba f6 00 00 	lea    0xf6ba(%rip),%r13        # 24ce0 <aria_test2_cbc_ct>
   15626:	49 89 ee             	mov    %rbp,%r14
   15629:	41 bc 80 00 00 00    	mov    $0x80,%r12d
   1562f:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   15636:	00 
   15637:	4c 8d bc 24 60 01 00 	lea    0x160(%rsp),%r15
   1563e:	00 
   1563f:	48 89 c5             	mov    %rax,%rbp
   15642:	44 8b 5c 24 10       	mov    0x10(%rsp),%r11d
   15647:	44 89 e2             	mov    %r12d,%edx
   1564a:	45 85 db             	test   %r11d,%r11d
   1564d:	0f 85 6d 01 00 00    	jne    157c0 <mbedtls_aria_self_test+0x2e0>
   15653:	48 8d 35 66 f7 00 00 	lea    0xf766(%rip),%rsi        # 24dc0 <aria_test2_key>
   1565a:	4c 89 f7             	mov    %r14,%rdi
   1565d:	e8 ee f1 ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   15662:	49 89 d9             	mov    %rbx,%r9
   15665:	4c 89 f9             	mov    %r15,%rcx
   15668:	be 01 00 00 00       	mov    $0x1,%esi
   1566d:	66 0f 6f 05 cb fb 00 	movdqa 0xfbcb(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   15674:	00 
   15675:	4c 8d 05 04 f7 00 00 	lea    0xf704(%rip),%r8        # 24d80 <aria_test2_pt>
   1567c:	4c 89 f7             	mov    %r14,%rdi
   1567f:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   15686:	d2 e1 f0 
   15689:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   15690:	00 
   15691:	ba 30 00 00 00       	mov    $0x30,%edx
   15696:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   1569d:	5a 69 78 
   156a0:	0f 29 03             	movaps %xmm0,(%rbx)
   156a3:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   156a7:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   156ab:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   156b2:	00 
   156b3:	e8 98 fb ff ff       	callq  15250 <mbedtls_aria_crypt_cbc>
   156b8:	48 8b 03             	mov    (%rbx),%rax
   156bb:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   156bf:	49 33 45 00          	xor    0x0(%r13),%rax
   156c3:	49 33 55 08          	xor    0x8(%r13),%rdx
   156c7:	48 09 c2             	or     %rax,%rdx
   156ca:	75 1c                	jne    156e8 <mbedtls_aria_self_test+0x208>
   156cc:	48 8b 43 10          	mov    0x10(%rbx),%rax
   156d0:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   156d4:	49 33 45 10          	xor    0x10(%r13),%rax
   156d8:	49 33 55 18          	xor    0x18(%r13),%rdx
   156dc:	48 09 c2             	or     %rax,%rdx
   156df:	0f 84 8b 01 00 00    	je     15870 <mbedtls_aria_self_test+0x390>
   156e5:	0f 1f 00             	nopl   (%rax)
   156e8:	4c 89 f5             	mov    %r14,%rbp
   156eb:	e9 90 fe ff ff       	jmpq   15580 <mbedtls_aria_self_test+0xa0>
   156f0:	48 8d 35 e9 f3 00 00 	lea    0xf3e9(%rip),%rsi        # 24ae0 <aes_test_ecb_dec+0x40>
   156f7:	bf 01 00 00 00       	mov    $0x1,%edi
   156fc:	31 c0                	xor    %eax,%eax
   156fe:	e8 3d dc fe ff       	callq  3340 <__printf_chk@plt>
   15703:	89 da                	mov    %ebx,%edx
   15705:	4c 89 ee             	mov    %r13,%rsi
   15708:	48 89 ef             	mov    %rbp,%rdi
   1570b:	e8 40 f1 ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   15710:	4c 89 f2             	mov    %r14,%rdx
   15713:	48 8d 35 f6 f6 00 00 	lea    0xf6f6(%rip),%rsi        # 24e10 <aria_test1_ecb_pt>
   1571a:	48 89 ef             	mov    %rbp,%rdi
   1571d:	e8 9e f6 ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   15722:	49 8b 06             	mov    (%r14),%rax
   15725:	49 8b 56 08          	mov    0x8(%r14),%rdx
   15729:	49 33 04 24          	xor    (%r12),%rax
   1572d:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15732:	48 09 c2             	or     %rax,%rdx
   15735:	0f 85 1b 01 00 00    	jne    15856 <mbedtls_aria_self_test+0x376>
   1573b:	48 8d 3d a0 da 00 00 	lea    0xdaa0(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15742:	e8 b9 da fe ff       	callq  3200 <puts@plt>
   15747:	89 da                	mov    %ebx,%edx
   15749:	48 8d 35 a6 f3 00 00 	lea    0xf3a6(%rip),%rsi        # 24af6 <aes_test_ecb_dec+0x56>
   15750:	31 c0                	xor    %eax,%eax
   15752:	bf 01 00 00 00       	mov    $0x1,%edi
   15757:	e8 e4 db fe ff       	callq  3340 <__printf_chk@plt>
   1575c:	89 da                	mov    %ebx,%edx
   1575e:	4c 89 ee             	mov    %r13,%rsi
   15761:	48 89 ef             	mov    %rbp,%rdi
   15764:	e8 17 f5 ff ff       	callq  14c80 <mbedtls_aria_setkey_dec>
   15769:	4c 89 f2             	mov    %r14,%rdx
   1576c:	4c 89 e6             	mov    %r12,%rsi
   1576f:	48 89 ef             	mov    %rbp,%rdi
   15772:	e8 49 f6 ff ff       	callq  14dc0 <mbedtls_aria_crypt_ecb>
   15777:	49 8b 06             	mov    (%r14),%rax
   1577a:	49 8b 56 08          	mov    0x8(%r14),%rdx
   1577e:	48 33 05 8b f6 00 00 	xor    0xf68b(%rip),%rax        # 24e10 <aria_test1_ecb_pt>
   15785:	48 33 15 8c f6 00 00 	xor    0xf68c(%rip),%rdx        # 24e18 <aria_test1_ecb_pt+0x8>
   1578c:	48 09 c2             	or     %rax,%rdx
   1578f:	0f 85 c1 00 00 00    	jne    15856 <mbedtls_aria_self_test+0x376>
   15795:	48 8d 3d 46 da 00 00 	lea    0xda46(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1579c:	83 c3 40             	add    $0x40,%ebx
   1579f:	49 83 c4 10          	add    $0x10,%r12
   157a3:	e8 58 da fe ff       	callq  3200 <puts@plt>
   157a8:	81 fb 40 01 00 00    	cmp    $0x140,%ebx
   157ae:	0f 85 8c fd ff ff    	jne    15540 <mbedtls_aria_self_test+0x60>
   157b4:	e9 57 fe ff ff       	jmpq   15610 <mbedtls_aria_self_test+0x130>
   157b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   157c0:	48 8d 35 45 f3 00 00 	lea    0xf345(%rip),%rsi        # 24b0c <aes_test_ecb_dec+0x6c>
   157c7:	bf 01 00 00 00       	mov    $0x1,%edi
   157cc:	31 c0                	xor    %eax,%eax
   157ce:	e8 6d db fe ff       	callq  3340 <__printf_chk@plt>
   157d3:	44 89 e2             	mov    %r12d,%edx
   157d6:	48 8d 35 e3 f5 00 00 	lea    0xf5e3(%rip),%rsi        # 24dc0 <aria_test2_key>
   157dd:	4c 89 f7             	mov    %r14,%rdi
   157e0:	e8 6b f0 ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   157e5:	49 89 d9             	mov    %rbx,%r9
   157e8:	4c 89 f9             	mov    %r15,%rcx
   157eb:	be 01 00 00 00       	mov    $0x1,%esi
   157f0:	66 0f 6f 05 48 fa 00 	movdqa 0xfa48(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   157f7:	00 
   157f8:	4c 8d 05 81 f5 00 00 	lea    0xf581(%rip),%r8        # 24d80 <aria_test2_pt>
   157ff:	4c 89 f7             	mov    %r14,%rdi
   15802:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   15809:	d2 e1 f0 
   1580c:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   15813:	00 
   15814:	ba 30 00 00 00       	mov    $0x30,%edx
   15819:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   15820:	5a 69 78 
   15823:	0f 29 03             	movaps %xmm0,(%rbx)
   15826:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   1582a:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   1582e:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   15835:	00 
   15836:	e8 15 fa ff ff       	callq  15250 <mbedtls_aria_crypt_cbc>
   1583b:	48 8b 03             	mov    (%rbx),%rax
   1583e:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15842:	49 33 45 00          	xor    0x0(%r13),%rax
   15846:	49 33 55 08          	xor    0x8(%r13),%rdx
   1584a:	48 09 c2             	or     %rax,%rdx
   1584d:	0f 84 fd 01 00 00    	je     15a50 <mbedtls_aria_self_test+0x570>
   15853:	4c 89 f5             	mov    %r14,%rbp
   15856:	48 8d 3d 60 e2 00 00 	lea    0xe260(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   1585d:	e8 9e d9 fe ff       	callq  3200 <puts@plt>
   15862:	e9 19 fd ff ff       	jmpq   15580 <mbedtls_aria_self_test+0xa0>
   15867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1586e:	00 00 
   15870:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15874:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15878:	49 33 45 20          	xor    0x20(%r13),%rax
   1587c:	49 33 55 28          	xor    0x28(%r13),%rdx
   15880:	48 09 c2             	or     %rax,%rdx
   15883:	0f 85 5f fe ff ff    	jne    156e8 <mbedtls_aria_self_test+0x208>
   15889:	44 89 e2             	mov    %r12d,%edx
   1588c:	48 8d 35 2d f5 00 00 	lea    0xf52d(%rip),%rsi        # 24dc0 <aria_test2_key>
   15893:	4c 89 f7             	mov    %r14,%rdi
   15896:	e8 e5 f3 ff ff       	callq  14c80 <mbedtls_aria_setkey_dec>
   1589b:	49 89 d8             	mov    %rbx,%r8
   1589e:	4c 89 e9             	mov    %r13,%rcx
   158a1:	be 30 00 00 00       	mov    $0x30,%esi
   158a6:	66 0f 6f 05 a2 f9 00 	movdqa 0xf9a2(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   158ad:	00 
   158ae:	4c 89 f7             	mov    %r14,%rdi
   158b1:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   158b8:	d2 e1 f0 
   158bb:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   158c2:	5a 69 78 
   158c5:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   158cc:	00 
   158cd:	4c 89 fa             	mov    %r15,%rdx
   158d0:	0f 29 03             	movaps %xmm0,(%rbx)
   158d3:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   158d7:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   158db:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   158e2:	00 
   158e3:	e8 88 f8 ff ff       	callq  15170 <mbedtls_aria_crypt_cbc.part.0>
   158e8:	48 8d 05 91 f4 00 00 	lea    0xf491(%rip),%rax        # 24d80 <aria_test2_pt>
   158ef:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   158f3:	48 33 15 8e f4 00 00 	xor    0xf48e(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   158fa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   158ff:	48 8b 03             	mov    (%rbx),%rax
   15902:	48 33 05 77 f4 00 00 	xor    0xf477(%rip),%rax        # 24d80 <aria_test2_pt>
   15909:	48 09 c2             	or     %rax,%rdx
   1590c:	0f 85 d6 fd ff ff    	jne    156e8 <mbedtls_aria_self_test+0x208>
   15912:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15916:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1591a:	48 33 05 6f f4 00 00 	xor    0xf46f(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   15921:	48 33 15 70 f4 00 00 	xor    0xf470(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   15928:	48 09 c2             	or     %rax,%rdx
   1592b:	0f 85 b7 fd ff ff    	jne    156e8 <mbedtls_aria_self_test+0x208>
   15931:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15935:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15939:	48 33 05 60 f4 00 00 	xor    0xf460(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   15940:	48 33 15 61 f4 00 00 	xor    0xf461(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   15947:	48 09 c2             	or     %rax,%rdx
   1594a:	0f 85 98 fd ff ff    	jne    156e8 <mbedtls_aria_self_test+0x208>
   15950:	41 83 c4 40          	add    $0x40,%r12d
   15954:	49 83 c5 30          	add    $0x30,%r13
   15958:	41 81 fc 40 01 00 00 	cmp    $0x140,%r12d
   1595f:	0f 85 dd fc ff ff    	jne    15642 <mbedtls_aria_self_test+0x162>
   15965:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   1596a:	48 89 e8             	mov    %rbp,%rax
   1596d:	4c 89 f5             	mov    %r14,%rbp
   15970:	49 89 c6             	mov    %rax,%r14
   15973:	45 85 c9             	test   %r9d,%r9d
   15976:	0f 85 14 07 00 00    	jne    16090 <mbedtls_aria_self_test+0xbb0>
   1597c:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   15981:	41 bd 80 00 00 00    	mov    $0x80,%r13d
   15987:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   1598c:	4c 8d 25 ad f2 00 00 	lea    0xf2ad(%rip),%r12        # 24c40 <aria_test2_cfb_ct>
   15993:	48 89 04 24          	mov    %rax,(%rsp)
   15997:	45 89 ee             	mov    %r13d,%r14d
   1599a:	49 89 c5             	mov    %rax,%r13
   1599d:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
   159a2:	45 85 c0             	test   %r8d,%r8d
   159a5:	0f 85 15 05 00 00    	jne    15ec0 <mbedtls_aria_self_test+0x9e0>
   159ab:	44 89 f2             	mov    %r14d,%edx
   159ae:	48 8d 35 0b f4 00 00 	lea    0xf40b(%rip),%rsi        # 24dc0 <aria_test2_key>
   159b5:	48 89 ef             	mov    %rbp,%rdi
   159b8:	e8 93 ee ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   159bd:	48 83 ec 08          	sub    $0x8,%rsp
   159c1:	48 89 ef             	mov    %rbp,%rdi
   159c4:	4d 89 f8             	mov    %r15,%r8
   159c7:	66 0f 6f 05 71 f8 00 	movdqa 0xf871(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   159ce:	00 
   159cf:	be 01 00 00 00       	mov    $0x1,%esi
   159d4:	4c 89 e9             	mov    %r13,%rcx
   159d7:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   159de:	5a 69 78 
   159e1:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   159e8:	00 
   159e9:	4c 8d 0d 90 f3 00 00 	lea    0xf390(%rip),%r9        # 24d80 <aria_test2_pt>
   159f0:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   159f7:	d2 e1 f0 
   159fa:	48 89 94 24 70 01 00 	mov    %rdx,0x170(%rsp)
   15a01:	00 
   15a02:	ba 30 00 00 00       	mov    $0x30,%edx
   15a07:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15a0e:	00 00 
   15a10:	0f 29 03             	movaps %xmm0,(%rbx)
   15a13:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15a17:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15a1b:	53                   	push   %rbx
   15a1c:	e8 df f8 ff ff       	callq  15300 <mbedtls_aria_crypt_cfb128>
   15a21:	48 8b 03             	mov    (%rbx),%rax
   15a24:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15a28:	49 33 04 24          	xor    (%r12),%rax
   15a2c:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15a31:	48 09 c2             	or     %rax,%rdx
   15a34:	5e                   	pop    %rsi
   15a35:	5f                   	pop    %rdi
   15a36:	0f 84 54 01 00 00    	je     15b90 <mbedtls_aria_self_test+0x6b0>
   15a3c:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
   15a41:	45 85 d2             	test   %r10d,%r10d
   15a44:	0f 84 36 fb ff ff    	je     15580 <mbedtls_aria_self_test+0xa0>
   15a4a:	e9 07 fe ff ff       	jmpq   15856 <mbedtls_aria_self_test+0x376>
   15a4f:	90                   	nop
   15a50:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15a54:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15a58:	49 33 45 10          	xor    0x10(%r13),%rax
   15a5c:	49 33 55 18          	xor    0x18(%r13),%rdx
   15a60:	48 09 c2             	or     %rax,%rdx
   15a63:	0f 85 ea fd ff ff    	jne    15853 <mbedtls_aria_self_test+0x373>
   15a69:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15a6d:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15a71:	49 33 45 20          	xor    0x20(%r13),%rax
   15a75:	49 33 55 28          	xor    0x28(%r13),%rdx
   15a79:	48 09 c2             	or     %rax,%rdx
   15a7c:	0f 85 d1 fd ff ff    	jne    15853 <mbedtls_aria_self_test+0x373>
   15a82:	48 8d 3d 59 d7 00 00 	lea    0xd759(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15a89:	e8 72 d7 fe ff       	callq  3200 <puts@plt>
   15a8e:	44 89 e2             	mov    %r12d,%edx
   15a91:	bf 01 00 00 00       	mov    $0x1,%edi
   15a96:	31 c0                	xor    %eax,%eax
   15a98:	48 8d 35 83 f0 00 00 	lea    0xf083(%rip),%rsi        # 24b22 <aes_test_ecb_dec+0x82>
   15a9f:	e8 9c d8 fe ff       	callq  3340 <__printf_chk@plt>
   15aa4:	44 89 e2             	mov    %r12d,%edx
   15aa7:	48 8d 35 12 f3 00 00 	lea    0xf312(%rip),%rsi        # 24dc0 <aria_test2_key>
   15aae:	4c 89 f7             	mov    %r14,%rdi
   15ab1:	e8 ca f1 ff ff       	callq  14c80 <mbedtls_aria_setkey_dec>
   15ab6:	49 89 d8             	mov    %rbx,%r8
   15ab9:	4c 89 e9             	mov    %r13,%rcx
   15abc:	be 30 00 00 00       	mov    $0x30,%esi
   15ac1:	66 0f 6f 05 87 f7 00 	movdqa 0xf787(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   15ac8:	00 
   15ac9:	4c 89 f7             	mov    %r14,%rdi
   15acc:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   15ad3:	d2 e1 f0 
   15ad6:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   15add:	5a 69 78 
   15ae0:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   15ae7:	00 
   15ae8:	4c 89 fa             	mov    %r15,%rdx
   15aeb:	0f 29 03             	movaps %xmm0,(%rbx)
   15aee:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15af2:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15af6:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   15afd:	00 
   15afe:	e8 6d f6 ff ff       	callq  15170 <mbedtls_aria_crypt_cbc.part.0>
   15b03:	48 8d 05 76 f2 00 00 	lea    0xf276(%rip),%rax        # 24d80 <aria_test2_pt>
   15b0a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15b0e:	48 33 15 73 f2 00 00 	xor    0xf273(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   15b15:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   15b1a:	48 8b 03             	mov    (%rbx),%rax
   15b1d:	48 33 05 5c f2 00 00 	xor    0xf25c(%rip),%rax        # 24d80 <aria_test2_pt>
   15b24:	48 09 c2             	or     %rax,%rdx
   15b27:	0f 85 26 fd ff ff    	jne    15853 <mbedtls_aria_self_test+0x373>
   15b2d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15b31:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15b35:	48 33 05 54 f2 00 00 	xor    0xf254(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   15b3c:	48 33 15 55 f2 00 00 	xor    0xf255(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   15b43:	48 09 c2             	or     %rax,%rdx
   15b46:	0f 85 07 fd ff ff    	jne    15853 <mbedtls_aria_self_test+0x373>
   15b4c:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15b50:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15b54:	48 33 05 45 f2 00 00 	xor    0xf245(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   15b5b:	48 33 15 46 f2 00 00 	xor    0xf246(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   15b62:	48 09 c2             	or     %rax,%rdx
   15b65:	0f 85 e8 fc ff ff    	jne    15853 <mbedtls_aria_self_test+0x373>
   15b6b:	48 8d 3d 70 d6 00 00 	lea    0xd670(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15b72:	e8 89 d6 fe ff       	callq  3200 <puts@plt>
   15b77:	e9 d4 fd ff ff       	jmpq   15950 <mbedtls_aria_self_test+0x470>
   15b7c:	0f 1f 40 00          	nopl   0x0(%rax)
   15b80:	bf 0a 00 00 00       	mov    $0xa,%edi
   15b85:	e8 66 d6 fe ff       	callq  31f0 <putchar@plt>
   15b8a:	e9 8d fa ff ff       	jmpq   1561c <mbedtls_aria_self_test+0x13c>
   15b8f:	90                   	nop
   15b90:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15b94:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15b98:	49 33 44 24 10       	xor    0x10(%r12),%rax
   15b9d:	49 33 54 24 18       	xor    0x18(%r12),%rdx
   15ba2:	48 09 c2             	or     %rax,%rdx
   15ba5:	0f 85 91 fe ff ff    	jne    15a3c <mbedtls_aria_self_test+0x55c>
   15bab:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15baf:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15bb3:	49 33 44 24 20       	xor    0x20(%r12),%rax
   15bb8:	49 33 54 24 28       	xor    0x28(%r12),%rdx
   15bbd:	48 09 c2             	or     %rax,%rdx
   15bc0:	0f 85 76 fe ff ff    	jne    15a3c <mbedtls_aria_self_test+0x55c>
   15bc6:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   15bca:	85 c9                	test   %ecx,%ecx
   15bcc:	74 22                	je     15bf0 <mbedtls_aria_self_test+0x710>
   15bce:	48 8d 3d 0d d6 00 00 	lea    0xd60d(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15bd5:	e8 26 d6 fe ff       	callq  3200 <puts@plt>
   15bda:	44 89 f2             	mov    %r14d,%edx
   15bdd:	bf 01 00 00 00       	mov    $0x1,%edi
   15be2:	31 c0                	xor    %eax,%eax
   15be4:	48 8d 35 63 ef 00 00 	lea    0xef63(%rip),%rsi        # 24b4e <aes_test_ecb_dec+0xae>
   15beb:	e8 50 d7 fe ff       	callq  3340 <__printf_chk@plt>
   15bf0:	44 89 f2             	mov    %r14d,%edx
   15bf3:	48 8d 35 c6 f1 00 00 	lea    0xf1c6(%rip),%rsi        # 24dc0 <aria_test2_key>
   15bfa:	48 89 ef             	mov    %rbp,%rdi
   15bfd:	e8 4e ec ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   15c02:	48 83 ec 08          	sub    $0x8,%rsp
   15c06:	4c 89 e9             	mov    %r13,%rcx
   15c09:	31 f6                	xor    %esi,%esi
   15c0b:	66 0f 6f 05 3d f6 00 	movdqa 0xf63d(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   15c12:	00 
   15c13:	4d 89 e1             	mov    %r12,%r9
   15c16:	4d 89 f8             	mov    %r15,%r8
   15c19:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   15c20:	5a 69 78 
   15c23:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   15c2a:	d2 e1 f0 
   15c2d:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   15c34:	00 
   15c35:	48 89 ef             	mov    %rbp,%rdi
   15c38:	48 89 94 24 70 01 00 	mov    %rdx,0x170(%rsp)
   15c3f:	00 
   15c40:	ba 30 00 00 00       	mov    $0x30,%edx
   15c45:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15c4c:	00 00 
   15c4e:	0f 29 03             	movaps %xmm0,(%rbx)
   15c51:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15c55:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15c59:	53                   	push   %rbx
   15c5a:	e8 a1 f6 ff ff       	callq  15300 <mbedtls_aria_crypt_cfb128>
   15c5f:	58                   	pop    %rax
   15c60:	5a                   	pop    %rdx
   15c61:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15c66:	48 8b 03             	mov    (%rbx),%rax
   15c69:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15c6d:	48 33 15 14 f1 00 00 	xor    0xf114(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   15c74:	48 33 01             	xor    (%rcx),%rax
   15c77:	48 09 c2             	or     %rax,%rdx
   15c7a:	0f 85 bc fd ff ff    	jne    15a3c <mbedtls_aria_self_test+0x55c>
   15c80:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15c84:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15c88:	48 33 05 01 f1 00 00 	xor    0xf101(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   15c8f:	48 33 15 02 f1 00 00 	xor    0xf102(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   15c96:	48 09 c2             	or     %rax,%rdx
   15c99:	0f 85 9d fd ff ff    	jne    15a3c <mbedtls_aria_self_test+0x55c>
   15c9f:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15ca3:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15ca7:	48 33 05 f2 f0 00 00 	xor    0xf0f2(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   15cae:	48 33 15 f3 f0 00 00 	xor    0xf0f3(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   15cb5:	48 09 c2             	or     %rax,%rdx
   15cb8:	0f 85 7e fd ff ff    	jne    15a3c <mbedtls_aria_self_test+0x55c>
   15cbe:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15cc2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   15cc9:	00 
   15cca:	85 c0                	test   %eax,%eax
   15ccc:	74 0c                	je     15cda <mbedtls_aria_self_test+0x7fa>
   15cce:	48 8d 3d 0d d5 00 00 	lea    0xd50d(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15cd5:	e8 26 d5 fe ff       	callq  3200 <puts@plt>
   15cda:	41 83 c6 40          	add    $0x40,%r14d
   15cde:	49 83 c4 30          	add    $0x30,%r12
   15ce2:	41 81 fe 40 01 00 00 	cmp    $0x140,%r14d
   15ce9:	0f 85 ae fc ff ff    	jne    1599d <mbedtls_aria_self_test+0x4bd>
   15cef:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15cf3:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15cf8:	85 c0                	test   %eax,%eax
   15cfa:	0f 85 a0 03 00 00    	jne    160a0 <mbedtls_aria_self_test+0xbc0>
   15d00:	41 ba 80 00 00 00    	mov    $0x80,%r10d
   15d06:	49 89 ed             	mov    %rbp,%r13
   15d09:	4c 8d 25 90 ee 00 00 	lea    0xee90(%rip),%r12        # 24ba0 <aria_test2_ctr_ct>
   15d10:	44 89 d5             	mov    %r10d,%ebp
   15d13:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15d17:	89 ea                	mov    %ebp,%edx
   15d19:	85 c0                	test   %eax,%eax
   15d1b:	0f 85 bf 01 00 00    	jne    15ee0 <mbedtls_aria_self_test+0xa00>
   15d21:	48 8d 35 98 f0 00 00 	lea    0xf098(%rip),%rsi        # 24dc0 <aria_test2_key>
   15d28:	4c 89 ef             	mov    %r13,%rdi
   15d2b:	e8 20 eb ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   15d30:	48 83 ec 08          	sub    $0x8,%rsp
   15d34:	66 0f ef c9          	pxor   %xmm1,%xmm1
   15d38:	4c 89 f9             	mov    %r15,%rcx
   15d3b:	41 0f 29 0f          	movaps %xmm1,(%r15)
   15d3f:	be 30 00 00 00       	mov    $0x30,%esi
   15d44:	4c 89 ef             	mov    %r13,%rdi
   15d47:	4d 89 f0             	mov    %r14,%r8
   15d4a:	66 0f 6f 05 ee f4 00 	movdqa 0xf4ee(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   15d51:	00 
   15d52:	4c 8d 0d 27 f0 00 00 	lea    0xf027(%rip),%r9        # 24d80 <aria_test2_pt>
   15d59:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15d60:	00 00 
   15d62:	0f 29 03             	movaps %xmm0,(%rbx)
   15d65:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15d69:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15d6d:	53                   	push   %rbx
   15d6e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15d73:	e8 98 f6 ff ff       	callq  15410 <mbedtls_aria_crypt_ctr>
   15d78:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15d7c:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15d81:	48 8b 03             	mov    (%rbx),%rax
   15d84:	48 89 d1             	mov    %rdx,%rcx
   15d87:	49 33 04 24          	xor    (%r12),%rax
   15d8b:	48 09 c1             	or     %rax,%rcx
   15d8e:	5e                   	pop    %rsi
   15d8f:	5f                   	pop    %rdi
   15d90:	0f 85 1a 01 00 00    	jne    15eb0 <mbedtls_aria_self_test+0x9d0>
   15d96:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15d9a:	49 33 54 24 18       	xor    0x18(%r12),%rdx
   15d9f:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15da3:	48 89 d1             	mov    %rdx,%rcx
   15da6:	49 33 44 24 10       	xor    0x10(%r12),%rax
   15dab:	48 09 c1             	or     %rax,%rcx
   15dae:	0f 85 fc 00 00 00    	jne    15eb0 <mbedtls_aria_self_test+0x9d0>
   15db4:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15db8:	49 33 54 24 28       	xor    0x28(%r12),%rdx
   15dbd:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15dc1:	48 89 d1             	mov    %rdx,%rcx
   15dc4:	49 33 44 24 20       	xor    0x20(%r12),%rax
   15dc9:	48 09 c1             	or     %rax,%rcx
   15dcc:	0f 85 de 00 00 00    	jne    15eb0 <mbedtls_aria_self_test+0x9d0>
   15dd2:	89 ea                	mov    %ebp,%edx
   15dd4:	48 8d 35 e5 ef 00 00 	lea    0xefe5(%rip),%rsi        # 24dc0 <aria_test2_key>
   15ddb:	4c 89 ef             	mov    %r13,%rdi
   15dde:	e8 6d ea ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   15de3:	48 83 ec 08          	sub    $0x8,%rsp
   15de7:	66 0f ef c9          	pxor   %xmm1,%xmm1
   15deb:	4c 89 f9             	mov    %r15,%rcx
   15dee:	41 0f 29 0f          	movaps %xmm1,(%r15)
   15df2:	4d 89 e1             	mov    %r12,%r9
   15df5:	4d 89 f0             	mov    %r14,%r8
   15df8:	be 30 00 00 00       	mov    $0x30,%esi
   15dfd:	66 0f 6f 05 4b f4 00 	movdqa 0xf44b(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   15e04:	00 
   15e05:	4c 89 ef             	mov    %r13,%rdi
   15e08:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15e0f:	00 00 
   15e11:	0f 29 03             	movaps %xmm0,(%rbx)
   15e14:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15e18:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15e1c:	53                   	push   %rbx
   15e1d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15e22:	e8 e9 f5 ff ff       	callq  15410 <mbedtls_aria_crypt_ctr>
   15e27:	5a                   	pop    %rdx
   15e28:	59                   	pop    %rcx
   15e29:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15e2e:	48 8b 03             	mov    (%rbx),%rax
   15e31:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15e35:	48 33 15 4c ef 00 00 	xor    0xef4c(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   15e3c:	48 33 01             	xor    (%rcx),%rax
   15e3f:	48 09 c2             	or     %rax,%rdx
   15e42:	75 6c                	jne    15eb0 <mbedtls_aria_self_test+0x9d0>
   15e44:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15e48:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15e4c:	48 33 05 3d ef 00 00 	xor    0xef3d(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   15e53:	48 33 15 3e ef 00 00 	xor    0xef3e(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   15e5a:	48 09 c2             	or     %rax,%rdx
   15e5d:	75 51                	jne    15eb0 <mbedtls_aria_self_test+0x9d0>
   15e5f:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15e63:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15e67:	48 33 05 32 ef 00 00 	xor    0xef32(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   15e6e:	48 33 15 33 ef 00 00 	xor    0xef33(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   15e75:	48 09 c2             	or     %rax,%rdx
   15e78:	75 36                	jne    15eb0 <mbedtls_aria_self_test+0x9d0>
   15e7a:	83 c5 40             	add    $0x40,%ebp
   15e7d:	49 83 c4 30          	add    $0x30,%r12
   15e81:	81 fd 40 01 00 00    	cmp    $0x140,%ebp
   15e87:	0f 85 86 fe ff ff    	jne    15d13 <mbedtls_aria_self_test+0x833>
   15e8d:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15e91:	4c 89 ed             	mov    %r13,%rbp
   15e94:	85 c0                	test   %eax,%eax
   15e96:	0f 85 14 02 00 00    	jne    160b0 <mbedtls_aria_self_test+0xbd0>
   15e9c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   15ea3:	00 
   15ea4:	e9 df f6 ff ff       	jmpq   15588 <mbedtls_aria_self_test+0xa8>
   15ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15eb0:	4c 89 ed             	mov    %r13,%rbp
   15eb3:	e9 c8 f6 ff ff       	jmpq   15580 <mbedtls_aria_self_test+0xa0>
   15eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15ebf:	00 
   15ec0:	44 89 f2             	mov    %r14d,%edx
   15ec3:	48 8d 35 6e ec 00 00 	lea    0xec6e(%rip),%rsi        # 24b38 <aes_test_ecb_dec+0x98>
   15eca:	bf 01 00 00 00       	mov    $0x1,%edi
   15ecf:	31 c0                	xor    %eax,%eax
   15ed1:	e8 6a d4 fe ff       	callq  3340 <__printf_chk@plt>
   15ed6:	e9 d0 fa ff ff       	jmpq   159ab <mbedtls_aria_self_test+0x4cb>
   15edb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15ee0:	48 8d 35 7d ec 00 00 	lea    0xec7d(%rip),%rsi        # 24b64 <aes_test_ecb_dec+0xc4>
   15ee7:	bf 01 00 00 00       	mov    $0x1,%edi
   15eec:	31 c0                	xor    %eax,%eax
   15eee:	e8 4d d4 fe ff       	callq  3340 <__printf_chk@plt>
   15ef3:	89 ea                	mov    %ebp,%edx
   15ef5:	48 8d 35 c4 ee 00 00 	lea    0xeec4(%rip),%rsi        # 24dc0 <aria_test2_key>
   15efc:	4c 89 ef             	mov    %r13,%rdi
   15eff:	e8 4c e9 ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   15f04:	48 83 ec 08          	sub    $0x8,%rsp
   15f08:	66 0f ef d2          	pxor   %xmm2,%xmm2
   15f0c:	4c 89 f9             	mov    %r15,%rcx
   15f0f:	41 0f 29 17          	movaps %xmm2,(%r15)
   15f13:	4d 89 f0             	mov    %r14,%r8
   15f16:	be 30 00 00 00       	mov    $0x30,%esi
   15f1b:	4c 89 ef             	mov    %r13,%rdi
   15f1e:	66 0f 6f 05 1a f3 00 	movdqa 0xf31a(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   15f25:	00 
   15f26:	4c 8d 0d 53 ee 00 00 	lea    0xee53(%rip),%r9        # 24d80 <aria_test2_pt>
   15f2d:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15f34:	00 00 
   15f36:	0f 29 03             	movaps %xmm0,(%rbx)
   15f39:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15f3d:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15f41:	53                   	push   %rbx
   15f42:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15f47:	e8 c4 f4 ff ff       	callq  15410 <mbedtls_aria_crypt_ctr>
   15f4c:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15f50:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15f55:	48 8b 03             	mov    (%rbx),%rax
   15f58:	48 89 d1             	mov    %rdx,%rcx
   15f5b:	49 33 04 24          	xor    (%r12),%rax
   15f5f:	48 09 c1             	or     %rax,%rcx
   15f62:	41 5a                	pop    %r10
   15f64:	41 5b                	pop    %r11
   15f66:	0f 85 1c 01 00 00    	jne    16088 <mbedtls_aria_self_test+0xba8>
   15f6c:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15f70:	49 33 54 24 18       	xor    0x18(%r12),%rdx
   15f75:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15f79:	48 89 d1             	mov    %rdx,%rcx
   15f7c:	49 33 44 24 10       	xor    0x10(%r12),%rax
   15f81:	48 09 c1             	or     %rax,%rcx
   15f84:	0f 85 fe 00 00 00    	jne    16088 <mbedtls_aria_self_test+0xba8>
   15f8a:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15f8e:	49 33 54 24 28       	xor    0x28(%r12),%rdx
   15f93:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15f97:	48 89 d1             	mov    %rdx,%rcx
   15f9a:	49 33 44 24 20       	xor    0x20(%r12),%rax
   15f9f:	48 09 c1             	or     %rax,%rcx
   15fa2:	0f 85 e0 00 00 00    	jne    16088 <mbedtls_aria_self_test+0xba8>
   15fa8:	48 8d 3d 33 d2 00 00 	lea    0xd233(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15faf:	e8 4c d2 fe ff       	callq  3200 <puts@plt>
   15fb4:	89 ea                	mov    %ebp,%edx
   15fb6:	48 8d 35 bd eb 00 00 	lea    0xebbd(%rip),%rsi        # 24b7a <aes_test_ecb_dec+0xda>
   15fbd:	31 c0                	xor    %eax,%eax
   15fbf:	bf 01 00 00 00       	mov    $0x1,%edi
   15fc4:	e8 77 d3 fe ff       	callq  3340 <__printf_chk@plt>
   15fc9:	89 ea                	mov    %ebp,%edx
   15fcb:	48 8d 35 ee ed 00 00 	lea    0xedee(%rip),%rsi        # 24dc0 <aria_test2_key>
   15fd2:	4c 89 ef             	mov    %r13,%rdi
   15fd5:	e8 76 e8 ff ff       	callq  14850 <mbedtls_aria_setkey_enc>
   15fda:	48 83 ec 08          	sub    $0x8,%rsp
   15fde:	66 0f ef d2          	pxor   %xmm2,%xmm2
   15fe2:	4d 89 e1             	mov    %r12,%r9
   15fe5:	41 0f 29 17          	movaps %xmm2,(%r15)
   15fe9:	4d 89 f0             	mov    %r14,%r8
   15fec:	4c 89 f9             	mov    %r15,%rcx
   15fef:	be 30 00 00 00       	mov    $0x30,%esi
   15ff4:	66 0f 6f 05 54 f2 00 	movdqa 0xf254(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   15ffb:	00 
   15ffc:	4c 89 ef             	mov    %r13,%rdi
   15fff:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   16006:	00 00 
   16008:	0f 29 03             	movaps %xmm0,(%rbx)
   1600b:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   1600f:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   16013:	53                   	push   %rbx
   16014:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   16019:	e8 f2 f3 ff ff       	callq  15410 <mbedtls_aria_crypt_ctr>
   1601e:	41 58                	pop    %r8
   16020:	41 59                	pop    %r9
   16022:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   16027:	48 8b 03             	mov    (%rbx),%rax
   1602a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1602e:	48 33 15 53 ed 00 00 	xor    0xed53(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   16035:	48 33 01             	xor    (%rcx),%rax
   16038:	48 09 c2             	or     %rax,%rdx
   1603b:	75 4b                	jne    16088 <mbedtls_aria_self_test+0xba8>
   1603d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   16041:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   16045:	48 33 05 44 ed 00 00 	xor    0xed44(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   1604c:	48 33 15 45 ed 00 00 	xor    0xed45(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   16053:	48 09 c2             	or     %rax,%rdx
   16056:	75 30                	jne    16088 <mbedtls_aria_self_test+0xba8>
   16058:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1605c:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   16060:	48 33 05 39 ed 00 00 	xor    0xed39(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   16067:	48 33 15 3a ed 00 00 	xor    0xed3a(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   1606e:	48 09 c2             	or     %rax,%rdx
   16071:	75 15                	jne    16088 <mbedtls_aria_self_test+0xba8>
   16073:	48 8d 3d 68 d1 00 00 	lea    0xd168(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1607a:	e8 81 d1 fe ff       	callq  3200 <puts@plt>
   1607f:	e9 f6 fd ff ff       	jmpq   15e7a <mbedtls_aria_self_test+0x99a>
   16084:	0f 1f 40 00          	nopl   0x0(%rax)
   16088:	4c 89 ed             	mov    %r13,%rbp
   1608b:	e9 ac f9 ff ff       	jmpq   15a3c <mbedtls_aria_self_test+0x55c>
   16090:	bf 0a 00 00 00       	mov    $0xa,%edi
   16095:	e8 56 d1 fe ff       	callq  31f0 <putchar@plt>
   1609a:	e9 dd f8 ff ff       	jmpq   1597c <mbedtls_aria_self_test+0x49c>
   1609f:	90                   	nop
   160a0:	bf 0a 00 00 00       	mov    $0xa,%edi
   160a5:	e8 46 d1 fe ff       	callq  31f0 <putchar@plt>
   160aa:	e9 51 fc ff ff       	jmpq   15d00 <mbedtls_aria_self_test+0x820>
   160af:	90                   	nop
   160b0:	bf 0a 00 00 00       	mov    $0xa,%edi
   160b5:	e8 36 d1 fe ff       	callq  31f0 <putchar@plt>
   160ba:	e9 c9 f4 ff ff       	jmpq   15588 <mbedtls_aria_self_test+0xa8>
   160bf:	e8 9c d1 fe ff       	callq  3260 <__stack_chk_fail@plt>
   160c4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   160cb:	00 00 00 
   160ce:	66 90                	xchg   %ax,%ax

00000000000160d0 <mpi_select>:
   160d0:	41 56                	push   %r14
   160d2:	45 31 f6             	xor    %r14d,%r14d
   160d5:	41 55                	push   %r13
   160d7:	49 89 d5             	mov    %rdx,%r13
   160da:	41 54                	push   %r12
   160dc:	49 89 fc             	mov    %rdi,%r12
   160df:	55                   	push   %rbp
   160e0:	48 89 cd             	mov    %rcx,%rbp
   160e3:	53                   	push   %rbx
   160e4:	48 89 f3             	mov    %rsi,%rbx
   160e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   160ee:	00 00 
   160f0:	48 89 ee             	mov    %rbp,%rsi
   160f3:	4c 89 f7             	mov    %r14,%rdi
   160f6:	e8 f5 12 ff ff       	callq  73f0 <mbedtls_ct_size_bool_eq>
   160fb:	48 89 de             	mov    %rbx,%rsi
   160fe:	4c 89 e7             	mov    %r12,%rdi
   16101:	0f b6 d0             	movzbl %al,%edx
   16104:	e8 47 18 ff ff       	callq  7950 <mbedtls_mpi_safe_cond_assign>
   16109:	85 c0                	test   %eax,%eax
   1610b:	75 0d                	jne    1611a <mpi_select+0x4a>
   1610d:	49 83 c6 01          	add    $0x1,%r14
   16111:	48 83 c3 18          	add    $0x18,%rbx
   16115:	4d 39 f5             	cmp    %r14,%r13
   16118:	75 d6                	jne    160f0 <mpi_select+0x20>
   1611a:	5b                   	pop    %rbx
   1611b:	5d                   	pop    %rbp
   1611c:	41 5c                	pop    %r12
   1611e:	41 5d                	pop    %r13
   16120:	41 5e                	pop    %r14
   16122:	c3                   	retq   
   16123:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1612a:	00 00 00 00 
   1612e:	66 90                	xchg   %ax,%ax

0000000000016130 <mbedtls_mpi_init>:
   16130:	f3 0f 1e fa          	endbr64 
   16134:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   1613a:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   16141:	00 
   16142:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   16149:	00 
   1614a:	c3                   	retq   
   1614b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016150 <mbedtls_mpi_free>:
   16150:	f3 0f 1e fa          	endbr64 
   16154:	48 85 ff             	test   %rdi,%rdi
   16157:	74 47                	je     161a0 <mbedtls_mpi_free+0x50>
   16159:	53                   	push   %rbx
   1615a:	48 89 fb             	mov    %rdi,%rbx
   1615d:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16161:	48 85 ff             	test   %rdi,%rdi
   16164:	74 1a                	je     16180 <mbedtls_mpi_free+0x30>
   16166:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1616a:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   16171:	00 
   16172:	e8 b9 f0 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   16177:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1617b:	e8 60 d0 fe ff       	callq  31e0 <free@plt>
   16180:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   16186:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   1618d:	00 
   1618e:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   16195:	00 
   16196:	5b                   	pop    %rbx
   16197:	c3                   	retq   
   16198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1619f:	00 
   161a0:	c3                   	retq   
   161a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   161a8:	00 00 00 00 
   161ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000161b0 <mbedtls_mpi_grow>:
   161b0:	f3 0f 1e fa          	endbr64 
   161b4:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
   161bb:	0f 87 85 00 00 00    	ja     16246 <mbedtls_mpi_grow+0x96>
   161c1:	41 56                	push   %r14
   161c3:	31 c0                	xor    %eax,%eax
   161c5:	41 55                	push   %r13
   161c7:	41 54                	push   %r12
   161c9:	55                   	push   %rbp
   161ca:	48 89 fd             	mov    %rdi,%rbp
   161cd:	53                   	push   %rbx
   161ce:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   161d2:	48 89 f3             	mov    %rsi,%rbx
   161d5:	49 39 f4             	cmp    %rsi,%r12
   161d8:	72 0e                	jb     161e8 <mbedtls_mpi_grow+0x38>
   161da:	5b                   	pop    %rbx
   161db:	5d                   	pop    %rbp
   161dc:	41 5c                	pop    %r12
   161de:	41 5d                	pop    %r13
   161e0:	41 5e                	pop    %r14
   161e2:	c3                   	retq   
   161e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   161e8:	be 08 00 00 00       	mov    $0x8,%esi
   161ed:	48 89 df             	mov    %rbx,%rdi
   161f0:	e8 cb d0 fe ff       	callq  32c0 <calloc@plt>
   161f5:	49 89 c5             	mov    %rax,%r13
   161f8:	48 85 c0             	test   %rax,%rax
   161fb:	74 42                	je     1623f <mbedtls_mpi_grow+0x8f>
   161fd:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   16201:	4d 85 f6             	test   %r14,%r14
   16204:	74 26                	je     1622c <mbedtls_mpi_grow+0x7c>
   16206:	49 c1 e4 03          	shl    $0x3,%r12
   1620a:	4c 89 f6             	mov    %r14,%rsi
   1620d:	48 89 c7             	mov    %rax,%rdi
   16210:	4c 89 e2             	mov    %r12,%rdx
   16213:	e8 f8 d0 fe ff       	callq  3310 <memcpy@plt>
   16218:	4c 89 f7             	mov    %r14,%rdi
   1621b:	4c 89 e6             	mov    %r12,%rsi
   1621e:	e8 0d f0 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   16223:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16227:	e8 b4 cf fe ff       	callq  31e0 <free@plt>
   1622c:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   16230:	31 c0                	xor    %eax,%eax
   16232:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   16236:	5b                   	pop    %rbx
   16237:	5d                   	pop    %rbp
   16238:	41 5c                	pop    %r12
   1623a:	41 5d                	pop    %r13
   1623c:	41 5e                	pop    %r14
   1623e:	c3                   	retq   
   1623f:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   16244:	eb 94                	jmp    161da <mbedtls_mpi_grow+0x2a>
   16246:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   1624b:	c3                   	retq   
   1624c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016250 <mbedtls_mpi_resize_clear>:
   16250:	41 54                	push   %r12
   16252:	49 89 fc             	mov    %rdi,%r12
   16255:	55                   	push   %rbp
   16256:	48 83 ec 08          	sub    $0x8,%rsp
   1625a:	48 85 f6             	test   %rsi,%rsi
   1625d:	74 49                	je     162a8 <mbedtls_mpi_resize_clear+0x58>
   1625f:	48 89 f5             	mov    %rsi,%rbp
   16262:	48 39 77 08          	cmp    %rsi,0x8(%rdi)
   16266:	74 18                	je     16280 <mbedtls_mpi_resize_clear+0x30>
   16268:	e8 e3 fe ff ff       	callq  16150 <mbedtls_mpi_free>
   1626d:	48 83 c4 08          	add    $0x8,%rsp
   16271:	48 89 ee             	mov    %rbp,%rsi
   16274:	4c 89 e7             	mov    %r12,%rdi
   16277:	5d                   	pop    %rbp
   16278:	41 5c                	pop    %r12
   1627a:	e9 31 ff ff ff       	jmpq   161b0 <mbedtls_mpi_grow>
   1627f:	90                   	nop
   16280:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16284:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   1628b:	00 
   1628c:	31 f6                	xor    %esi,%esi
   1628e:	e8 fd cf fe ff       	callq  3290 <memset@plt>
   16293:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1629a:	00 
   1629b:	31 c0                	xor    %eax,%eax
   1629d:	48 83 c4 08          	add    $0x8,%rsp
   162a1:	5d                   	pop    %rbp
   162a2:	41 5c                	pop    %r12
   162a4:	c3                   	retq   
   162a5:	0f 1f 00             	nopl   (%rax)
   162a8:	e8 a3 fe ff ff       	callq  16150 <mbedtls_mpi_free>
   162ad:	48 83 c4 08          	add    $0x8,%rsp
   162b1:	31 c0                	xor    %eax,%eax
   162b3:	5d                   	pop    %rbp
   162b4:	41 5c                	pop    %r12
   162b6:	c3                   	retq   
   162b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   162be:	00 00 

00000000000162c0 <mbedtls_mpi_shrink>:
   162c0:	f3 0f 1e fa          	endbr64 
   162c4:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
   162cb:	0f 87 06 01 00 00    	ja     163d7 <mbedtls_mpi_shrink+0x117>
   162d1:	41 56                	push   %r14
   162d3:	41 55                	push   %r13
   162d5:	41 54                	push   %r12
   162d7:	55                   	push   %rbp
   162d8:	48 89 fd             	mov    %rdi,%rbp
   162db:	53                   	push   %rbx
   162dc:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   162e0:	49 39 f4             	cmp    %rsi,%r12
   162e3:	0f 86 a7 00 00 00    	jbe    16390 <mbedtls_mpi_shrink+0xd0>
   162e9:	4c 89 e0             	mov    %r12,%rax
   162ec:	48 83 e8 01          	sub    $0x1,%rax
   162f0:	0f 84 a7 00 00 00    	je     1639d <mbedtls_mpi_shrink+0xdd>
   162f6:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   162fa:	eb 0a                	jmp    16306 <mbedtls_mpi_shrink+0x46>
   162fc:	0f 1f 40 00          	nopl   0x0(%rax)
   16300:	48 83 e8 01          	sub    $0x1,%rax
   16304:	74 7a                	je     16380 <mbedtls_mpi_shrink+0xc0>
   16306:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
   1630b:	74 f3                	je     16300 <mbedtls_mpi_shrink+0x40>
   1630d:	48 83 c0 01          	add    $0x1,%rax
   16311:	48 39 f0             	cmp    %rsi,%rax
   16314:	48 89 f3             	mov    %rsi,%rbx
   16317:	be 08 00 00 00       	mov    $0x8,%esi
   1631c:	48 0f 43 d8          	cmovae %rax,%rbx
   16320:	48 89 df             	mov    %rbx,%rdi
   16323:	e8 98 cf fe ff       	callq  32c0 <calloc@plt>
   16328:	49 89 c5             	mov    %rax,%r13
   1632b:	48 85 c0             	test   %rax,%rax
   1632e:	0f 84 9c 00 00 00    	je     163d0 <mbedtls_mpi_shrink+0x110>
   16334:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   16338:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   1633f:	00 
   16340:	4c 89 f6             	mov    %r14,%rsi
   16343:	4c 89 ef             	mov    %r13,%rdi
   16346:	e8 c5 cf fe ff       	callq  3310 <memcpy@plt>
   1634b:	4c 89 f7             	mov    %r14,%rdi
   1634e:	4a 8d 34 e5 00 00 00 	lea    0x0(,%r12,8),%rsi
   16355:	00 
   16356:	e8 d5 ee fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1635b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1635f:	e8 7c ce fe ff       	callq  31e0 <free@plt>
   16364:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   16368:	31 c0                	xor    %eax,%eax
   1636a:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   1636e:	5b                   	pop    %rbx
   1636f:	5d                   	pop    %rbp
   16370:	41 5c                	pop    %r12
   16372:	41 5d                	pop    %r13
   16374:	41 5e                	pop    %r14
   16376:	c3                   	retq   
   16377:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1637e:	00 00 
   16380:	b8 01 00 00 00       	mov    $0x1,%eax
   16385:	eb 8a                	jmp    16311 <mbedtls_mpi_shrink+0x51>
   16387:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1638e:	00 00 
   16390:	5b                   	pop    %rbx
   16391:	5d                   	pop    %rbp
   16392:	41 5c                	pop    %r12
   16394:	41 5d                	pop    %r13
   16396:	41 5e                	pop    %r14
   16398:	e9 13 fe ff ff       	jmpq   161b0 <mbedtls_mpi_grow>
   1639d:	48 85 f6             	test   %rsi,%rsi
   163a0:	b8 01 00 00 00       	mov    $0x1,%eax
   163a5:	48 0f 45 c6          	cmovne %rsi,%rax
   163a9:	be 08 00 00 00       	mov    $0x8,%esi
   163ae:	48 89 c7             	mov    %rax,%rdi
   163b1:	48 89 c3             	mov    %rax,%rbx
   163b4:	e8 07 cf fe ff       	callq  32c0 <calloc@plt>
   163b9:	49 89 c5             	mov    %rax,%r13
   163bc:	48 85 c0             	test   %rax,%rax
   163bf:	74 0f                	je     163d0 <mbedtls_mpi_shrink+0x110>
   163c1:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   163c5:	4d 85 f6             	test   %r14,%r14
   163c8:	74 9a                	je     16364 <mbedtls_mpi_shrink+0xa4>
   163ca:	e9 69 ff ff ff       	jmpq   16338 <mbedtls_mpi_shrink+0x78>
   163cf:	90                   	nop
   163d0:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   163d5:	eb 97                	jmp    1636e <mbedtls_mpi_shrink+0xae>
   163d7:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   163dc:	c3                   	retq   
   163dd:	0f 1f 00             	nopl   (%rax)

00000000000163e0 <mbedtls_mpi_copy>:
   163e0:	f3 0f 1e fa          	endbr64 
   163e4:	41 55                	push   %r13
   163e6:	41 54                	push   %r12
   163e8:	55                   	push   %rbp
   163e9:	53                   	push   %rbx
   163ea:	48 83 ec 08          	sub    $0x8,%rsp
   163ee:	48 39 f7             	cmp    %rsi,%rdi
   163f1:	0f 84 d9 00 00 00    	je     164d0 <mbedtls_mpi_copy+0xf0>
   163f7:	48 8b 46 08          	mov    0x8(%rsi),%rax
   163fb:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   163ff:	48 89 fd             	mov    %rdi,%rbp
   16402:	49 89 f4             	mov    %rsi,%r12
   16405:	48 85 c0             	test   %rax,%rax
   16408:	0f 84 92 00 00 00    	je     164a0 <mbedtls_mpi_copy+0xc0>
   1640e:	48 83 e8 01          	sub    $0x1,%rax
   16412:	0f 84 a8 00 00 00    	je     164c0 <mbedtls_mpi_copy+0xe0>
   16418:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   1641c:	eb 0c                	jmp    1642a <mbedtls_mpi_copy+0x4a>
   1641e:	66 90                	xchg   %ax,%ax
   16420:	48 83 e8 01          	sub    $0x1,%rax
   16424:	0f 84 96 00 00 00    	je     164c0 <mbedtls_mpi_copy+0xe0>
   1642a:	48 83 3c c1 00       	cmpq   $0x0,(%rcx,%rax,8)
   1642f:	74 ef                	je     16420 <mbedtls_mpi_copy+0x40>
   16431:	48 8d 58 01          	lea    0x1(%rax),%rbx
   16435:	41 8b 04 24          	mov    (%r12),%eax
   16439:	89 45 00             	mov    %eax,0x0(%rbp)
   1643c:	48 39 da             	cmp    %rbx,%rdx
   1643f:	73 1f                	jae    16460 <mbedtls_mpi_copy+0x80>
   16441:	48 89 de             	mov    %rbx,%rsi
   16444:	48 89 ef             	mov    %rbp,%rdi
   16447:	e8 64 fd ff ff       	callq  161b0 <mbedtls_mpi_grow>
   1644c:	41 89 c5             	mov    %eax,%r13d
   1644f:	85 c0                	test   %eax,%eax
   16451:	75 3e                	jne    16491 <mbedtls_mpi_copy+0xb1>
   16453:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
   1645a:	00 
   1645b:	eb 20                	jmp    1647d <mbedtls_mpi_copy+0x9d>
   1645d:	0f 1f 00             	nopl   (%rax)
   16460:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16464:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
   1646b:	00 
   1646c:	48 29 da             	sub    %rbx,%rdx
   1646f:	31 f6                	xor    %esi,%esi
   16471:	48 c1 e2 03          	shl    $0x3,%rdx
   16475:	4c 01 ef             	add    %r13,%rdi
   16478:	e8 13 ce fe ff       	callq  3290 <memset@plt>
   1647d:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16481:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   16486:	4c 89 ea             	mov    %r13,%rdx
   16489:	45 31 ed             	xor    %r13d,%r13d
   1648c:	e8 7f ce fe ff       	callq  3310 <memcpy@plt>
   16491:	48 83 c4 08          	add    $0x8,%rsp
   16495:	44 89 e8             	mov    %r13d,%eax
   16498:	5b                   	pop    %rbx
   16499:	5d                   	pop    %rbp
   1649a:	41 5c                	pop    %r12
   1649c:	41 5d                	pop    %r13
   1649e:	c3                   	retq   
   1649f:	90                   	nop
   164a0:	45 31 ed             	xor    %r13d,%r13d
   164a3:	48 85 d2             	test   %rdx,%rdx
   164a6:	74 e9                	je     16491 <mbedtls_mpi_copy+0xb1>
   164a8:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   164ae:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   164b2:	48 c1 e2 03          	shl    $0x3,%rdx
   164b6:	31 f6                	xor    %esi,%esi
   164b8:	e8 d3 cd fe ff       	callq  3290 <memset@plt>
   164bd:	eb d2                	jmp    16491 <mbedtls_mpi_copy+0xb1>
   164bf:	90                   	nop
   164c0:	bb 01 00 00 00       	mov    $0x1,%ebx
   164c5:	e9 6b ff ff ff       	jmpq   16435 <mbedtls_mpi_copy+0x55>
   164ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   164d0:	48 83 c4 08          	add    $0x8,%rsp
   164d4:	45 31 ed             	xor    %r13d,%r13d
   164d7:	5b                   	pop    %rbx
   164d8:	44 89 e8             	mov    %r13d,%eax
   164db:	5d                   	pop    %rbp
   164dc:	41 5c                	pop    %r12
   164de:	41 5d                	pop    %r13
   164e0:	c3                   	retq   
   164e1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   164e8:	00 00 00 00 
   164ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000164f0 <mbedtls_mpi_swap>:
   164f0:	f3 0f 1e fa          	endbr64 
   164f4:	48 83 ec 28          	sub    $0x28,%rsp
   164f8:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
   164fc:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   16500:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16507:	00 00 
   16509:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1650e:	31 c0                	xor    %eax,%eax
   16510:	48 8b 47 10          	mov    0x10(%rdi),%rax
   16514:	0f 11 0f             	movups %xmm1,(%rdi)
   16517:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   1651b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16520:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   16524:	48 89 46 10          	mov    %rax,0x10(%rsi)
   16528:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1652c:	0f 11 06             	movups %xmm0,(%rsi)
   1652f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16534:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1653b:	00 00 
   1653d:	75 05                	jne    16544 <mbedtls_mpi_swap+0x54>
   1653f:	48 83 c4 28          	add    $0x28,%rsp
   16543:	c3                   	retq   
   16544:	e8 17 cd fe ff       	callq  3260 <__stack_chk_fail@plt>
   16549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016550 <mbedtls_mpi_lset>:
   16550:	f3 0f 1e fa          	endbr64 
   16554:	41 54                	push   %r12
   16556:	55                   	push   %rbp
   16557:	48 89 f5             	mov    %rsi,%rbp
   1655a:	be 01 00 00 00       	mov    $0x1,%esi
   1655f:	53                   	push   %rbx
   16560:	48 89 fb             	mov    %rdi,%rbx
   16563:	e8 48 fc ff ff       	callq  161b0 <mbedtls_mpi_grow>
   16568:	41 89 c4             	mov    %eax,%r12d
   1656b:	85 c0                	test   %eax,%eax
   1656d:	74 11                	je     16580 <mbedtls_mpi_lset+0x30>
   1656f:	44 89 e0             	mov    %r12d,%eax
   16572:	5b                   	pop    %rbx
   16573:	5d                   	pop    %rbp
   16574:	41 5c                	pop    %r12
   16576:	c3                   	retq   
   16577:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1657e:	00 00 
   16580:	48 8b 43 08          	mov    0x8(%rbx),%rax
   16584:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   16588:	31 f6                	xor    %esi,%esi
   1658a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16591:	00 
   16592:	e8 f9 cc fe ff       	callq  3290 <memset@plt>
   16597:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1659b:	48 89 ee             	mov    %rbp,%rsi
   1659e:	b8 01 00 00 00       	mov    $0x1,%eax
   165a3:	48 85 ed             	test   %rbp,%rbp
   165a6:	79 08                	jns    165b0 <mbedtls_mpi_lset+0x60>
   165a8:	48 f7 de             	neg    %rsi
   165ab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   165b0:	f3 0f 1e fa          	endbr64 
   165b4:	48 89 32             	mov    %rsi,(%rdx)
   165b7:	89 03                	mov    %eax,(%rbx)
   165b9:	44 89 e0             	mov    %r12d,%eax
   165bc:	5b                   	pop    %rbx
   165bd:	5d                   	pop    %rbp
   165be:	41 5c                	pop    %r12
   165c0:	c3                   	retq   
   165c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   165c8:	00 00 00 00 
   165cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000165d0 <mbedtls_mpi_get_bit>:
   165d0:	f3 0f 1e fa          	endbr64 
   165d4:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   165d8:	31 c0                	xor    %eax,%eax
   165da:	48 c1 e2 06          	shl    $0x6,%rdx
   165de:	48 39 f2             	cmp    %rsi,%rdx
   165e1:	76 17                	jbe    165fa <mbedtls_mpi_get_bit+0x2a>
   165e3:	48 8b 47 10          	mov    0x10(%rdi),%rax
   165e7:	48 89 f2             	mov    %rsi,%rdx
   165ea:	89 f1                	mov    %esi,%ecx
   165ec:	48 c1 ea 06          	shr    $0x6,%rdx
   165f0:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   165f4:	48 d3 e8             	shr    %cl,%rax
   165f7:	83 e0 01             	and    $0x1,%eax
   165fa:	c3                   	retq   
   165fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016600 <mbedtls_mpi_set_bit>:
   16600:	f3 0f 1e fa          	endbr64 
   16604:	41 55                	push   %r13
   16606:	49 89 f5             	mov    %rsi,%r13
   16609:	41 54                	push   %r12
   1660b:	49 c1 ed 06          	shr    $0x6,%r13
   1660f:	55                   	push   %rbp
   16610:	53                   	push   %rbx
   16611:	48 83 ec 08          	sub    $0x8,%rsp
   16615:	80 fa 01             	cmp    $0x1,%dl
   16618:	77 66                	ja     16680 <mbedtls_mpi_set_bit+0x80>
   1661a:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   1661e:	48 89 fd             	mov    %rdi,%rbp
   16621:	48 89 f3             	mov    %rsi,%rbx
   16624:	41 89 d4             	mov    %edx,%r12d
   16627:	48 c1 e1 06          	shl    $0x6,%rcx
   1662b:	48 39 f1             	cmp    %rsi,%rcx
   1662e:	77 13                	ja     16643 <mbedtls_mpi_set_bit+0x43>
   16630:	31 c0                	xor    %eax,%eax
   16632:	84 d2                	test   %dl,%dl
   16634:	74 37                	je     1666d <mbedtls_mpi_set_bit+0x6d>
   16636:	49 8d 75 01          	lea    0x1(%r13),%rsi
   1663a:	e8 71 fb ff ff       	callq  161b0 <mbedtls_mpi_grow>
   1663f:	85 c0                	test   %eax,%eax
   16641:	75 2a                	jne    1666d <mbedtls_mpi_set_bit+0x6d>
   16643:	48 8b 45 10          	mov    0x10(%rbp),%rax
   16647:	83 e3 3f             	and    $0x3f,%ebx
   1664a:	41 0f b6 d4          	movzbl %r12b,%edx
   1664e:	48 89 d9             	mov    %rbx,%rcx
   16651:	4a 8d 3c e8          	lea    (%rax,%r13,8),%rdi
   16655:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   1665c:	48 d3 e2             	shl    %cl,%rdx
   1665f:	48 d3 c0             	rol    %cl,%rax
   16662:	48 23 07             	and    (%rdi),%rax
   16665:	48 09 d0             	or     %rdx,%rax
   16668:	48 89 07             	mov    %rax,(%rdi)
   1666b:	31 c0                	xor    %eax,%eax
   1666d:	48 83 c4 08          	add    $0x8,%rsp
   16671:	5b                   	pop    %rbx
   16672:	5d                   	pop    %rbp
   16673:	41 5c                	pop    %r12
   16675:	41 5d                	pop    %r13
   16677:	c3                   	retq   
   16678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1667f:	00 
   16680:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   16685:	eb e6                	jmp    1666d <mbedtls_mpi_set_bit+0x6d>
   16687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1668e:	00 00 

0000000000016690 <mbedtls_mpi_lsb>:
   16690:	f3 0f 1e fa          	endbr64 
   16694:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   16698:	48 85 f6             	test   %rsi,%rsi
   1669b:	74 3c                	je     166d9 <mbedtls_mpi_lsb+0x49>
   1669d:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   166a1:	45 31 c0             	xor    %r8d,%r8d
   166a4:	31 c9                	xor    %ecx,%ecx
   166a6:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   166aa:	31 c0                	xor    %eax,%eax
   166ac:	eb 10                	jmp    166be <mbedtls_mpi_lsb+0x2e>
   166ae:	66 90                	xchg   %ax,%ax
   166b0:	48 83 c0 01          	add    $0x1,%rax
   166b4:	49 83 c0 01          	add    $0x1,%r8
   166b8:	48 83 f8 40          	cmp    $0x40,%rax
   166bc:	74 12                	je     166d0 <mbedtls_mpi_lsb+0x40>
   166be:	48 0f a3 c2          	bt     %rax,%rdx
   166c2:	73 ec                	jae    166b0 <mbedtls_mpi_lsb+0x20>
   166c4:	4c 89 c0             	mov    %r8,%rax
   166c7:	c3                   	retq   
   166c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   166cf:	00 
   166d0:	48 83 c1 01          	add    $0x1,%rcx
   166d4:	48 39 ce             	cmp    %rcx,%rsi
   166d7:	75 cd                	jne    166a6 <mbedtls_mpi_lsb+0x16>
   166d9:	45 31 c0             	xor    %r8d,%r8d
   166dc:	eb e6                	jmp    166c4 <mbedtls_mpi_lsb+0x34>
   166de:	66 90                	xchg   %ax,%ax

00000000000166e0 <mbedtls_mpi_bitlen>:
   166e0:	f3 0f 1e fa          	endbr64 
   166e4:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   166e8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   166ec:	e9 0f 4e 00 00       	jmpq   1b500 <mbedtls_mpi_core_bitlen>
   166f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   166f8:	00 00 00 00 
   166fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016700 <mbedtls_mpi_size>:
   16700:	f3 0f 1e fa          	endbr64 
   16704:	48 83 ec 08          	sub    $0x8,%rsp
   16708:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1670c:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16710:	e8 eb 4d 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   16715:	48 83 c4 08          	add    $0x8,%rsp
   16719:	48 83 c0 07          	add    $0x7,%rax
   1671d:	48 c1 e8 03          	shr    $0x3,%rax
   16721:	c3                   	retq   
   16722:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16729:	00 00 00 00 
   1672d:	0f 1f 00             	nopl   (%rax)

0000000000016730 <mbedtls_mpi_read_binary_le>:
   16730:	f3 0f 1e fa          	endbr64 
   16734:	41 55                	push   %r13
   16736:	48 89 d0             	mov    %rdx,%rax
   16739:	49 89 f5             	mov    %rsi,%r13
   1673c:	31 f6                	xor    %esi,%esi
   1673e:	41 54                	push   %r12
   16740:	f6 c2 07             	test   $0x7,%dl
   16743:	49 89 d4             	mov    %rdx,%r12
   16746:	53                   	push   %rbx
   16747:	40 0f 95 c6          	setne  %sil
   1674b:	48 c1 e8 03          	shr    $0x3,%rax
   1674f:	48 89 fb             	mov    %rdi,%rbx
   16752:	48 01 c6             	add    %rax,%rsi
   16755:	e8 f6 fa ff ff       	callq  16250 <mbedtls_mpi_resize_clear>
   1675a:	85 c0                	test   %eax,%eax
   1675c:	74 0a                	je     16768 <mbedtls_mpi_read_binary_le+0x38>
   1675e:	5b                   	pop    %rbx
   1675f:	41 5c                	pop    %r12
   16761:	41 5d                	pop    %r13
   16763:	c3                   	retq   
   16764:	0f 1f 40 00          	nopl   0x0(%rax)
   16768:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1676c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   16770:	4c 89 e1             	mov    %r12,%rcx
   16773:	4c 89 ea             	mov    %r13,%rdx
   16776:	5b                   	pop    %rbx
   16777:	41 5c                	pop    %r12
   16779:	41 5d                	pop    %r13
   1677b:	e9 d0 4e 00 00       	jmpq   1b650 <mbedtls_mpi_core_read_le>

0000000000016780 <mbedtls_mpi_read_binary>:
   16780:	f3 0f 1e fa          	endbr64 
   16784:	41 55                	push   %r13
   16786:	48 89 d0             	mov    %rdx,%rax
   16789:	49 89 f5             	mov    %rsi,%r13
   1678c:	31 f6                	xor    %esi,%esi
   1678e:	41 54                	push   %r12
   16790:	f6 c2 07             	test   $0x7,%dl
   16793:	49 89 d4             	mov    %rdx,%r12
   16796:	53                   	push   %rbx
   16797:	40 0f 95 c6          	setne  %sil
   1679b:	48 c1 e8 03          	shr    $0x3,%rax
   1679f:	48 89 fb             	mov    %rdi,%rbx
   167a2:	48 01 c6             	add    %rax,%rsi
   167a5:	e8 a6 fa ff ff       	callq  16250 <mbedtls_mpi_resize_clear>
   167aa:	85 c0                	test   %eax,%eax
   167ac:	74 0a                	je     167b8 <mbedtls_mpi_read_binary+0x38>
   167ae:	5b                   	pop    %rbx
   167af:	41 5c                	pop    %r12
   167b1:	41 5d                	pop    %r13
   167b3:	c3                   	retq   
   167b4:	0f 1f 40 00          	nopl   0x0(%rax)
   167b8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   167bc:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   167c0:	4c 89 e1             	mov    %r12,%rcx
   167c3:	4c 89 ea             	mov    %r13,%rdx
   167c6:	5b                   	pop    %rbx
   167c7:	41 5c                	pop    %r12
   167c9:	41 5d                	pop    %r13
   167cb:	e9 00 4f 00 00       	jmpq   1b6d0 <mbedtls_mpi_core_read_be>

00000000000167d0 <mbedtls_mpi_write_binary_le>:
   167d0:	f3 0f 1e fa          	endbr64 
   167d4:	49 89 f0             	mov    %rsi,%r8
   167d7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   167db:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   167df:	48 89 d1             	mov    %rdx,%rcx
   167e2:	4c 89 c2             	mov    %r8,%rdx
   167e5:	e9 86 4f 00 00       	jmpq   1b770 <mbedtls_mpi_core_write_le>
   167ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000167f0 <mbedtls_mpi_write_binary>:
   167f0:	f3 0f 1e fa          	endbr64 
   167f4:	49 89 f0             	mov    %rsi,%r8
   167f7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   167fb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   167ff:	48 89 d1             	mov    %rdx,%rcx
   16802:	4c 89 c2             	mov    %r8,%rdx
   16805:	e9 36 50 00 00       	jmpq   1b840 <mbedtls_mpi_core_write_be>
   1680a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016810 <mbedtls_mpi_shift_l>:
   16810:	f3 0f 1e fa          	endbr64 
   16814:	41 55                	push   %r13
   16816:	49 89 f5             	mov    %rsi,%r13
   16819:	41 54                	push   %r12
   1681b:	49 89 f4             	mov    %rsi,%r12
   1681e:	55                   	push   %rbp
   1681f:	48 89 fd             	mov    %rdi,%rbp
   16822:	41 83 e4 3f          	and    $0x3f,%r12d
   16826:	53                   	push   %rbx
   16827:	48 89 f3             	mov    %rsi,%rbx
   1682a:	48 c1 eb 06          	shr    $0x6,%rbx
   1682e:	48 83 ec 08          	sub    $0x8,%rsp
   16832:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   16836:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1683a:	e8 c1 4c 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   1683f:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   16843:	4c 01 e8             	add    %r13,%rax
   16846:	48 c1 e2 06          	shl    $0x6,%rdx
   1684a:	48 39 c2             	cmp    %rax,%rdx
   1684d:	0f 82 b5 00 00 00    	jb     16908 <mbedtls_mpi_shift_l+0xf8>
   16853:	49 83 fd 3f          	cmp    $0x3f,%r13
   16857:	76 56                	jbe    168af <mbedtls_mpi_shift_l+0x9f>
   16859:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1685d:	48 39 c3             	cmp    %rax,%rbx
   16860:	73 32                	jae    16894 <mbedtls_mpi_shift_l+0x84>
   16862:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16866:	48 89 d9             	mov    %rbx,%rcx
   16869:	48 f7 d9             	neg    %rcx
   1686c:	48 8d 44 c2 f8       	lea    -0x8(%rdx,%rax,8),%rax
   16871:	48 8d 74 da f8       	lea    -0x8(%rdx,%rbx,8),%rsi
   16876:	48 c1 e1 03          	shl    $0x3,%rcx
   1687a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16880:	48 8b 14 08          	mov    (%rax,%rcx,1),%rdx
   16884:	48 83 e8 08          	sub    $0x8,%rax
   16888:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1688c:	48 39 c6             	cmp    %rax,%rsi
   1688f:	75 ef                	jne    16880 <mbedtls_mpi_shift_l+0x70>
   16891:	48 89 d8             	mov    %rbx,%rax
   16894:	48 85 c0             	test   %rax,%rax
   16897:	74 16                	je     168af <mbedtls_mpi_shift_l+0x9f>
   16899:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1689d:	0f 1f 00             	nopl   (%rax)
   168a0:	48 c7 44 c2 f8 00 00 	movq   $0x0,-0x8(%rdx,%rax,8)
   168a7:	00 00 
   168a9:	48 83 e8 01          	sub    $0x1,%rax
   168ad:	75 f1                	jne    168a0 <mbedtls_mpi_shift_l+0x90>
   168af:	4d 85 e4             	test   %r12,%r12
   168b2:	74 43                	je     168f7 <mbedtls_mpi_shift_l+0xe7>
   168b4:	48 3b 5d 08          	cmp    0x8(%rbp),%rbx
   168b8:	73 3d                	jae    168f7 <mbedtls_mpi_shift_l+0xe7>
   168ba:	41 b8 40 00 00 00    	mov    $0x40,%r8d
   168c0:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   168c4:	45 89 e1             	mov    %r12d,%r9d
   168c7:	31 d2                	xor    %edx,%edx
   168c9:	45 29 e0             	sub    %r12d,%r8d
   168cc:	0f 1f 40 00          	nopl   0x0(%rax)
   168d0:	48 8b 04 de          	mov    (%rsi,%rbx,8),%rax
   168d4:	48 89 d7             	mov    %rdx,%rdi
   168d7:	44 89 c1             	mov    %r8d,%ecx
   168da:	48 89 c2             	mov    %rax,%rdx
   168dd:	48 d3 ea             	shr    %cl,%rdx
   168e0:	44 89 c9             	mov    %r9d,%ecx
   168e3:	48 d3 e0             	shl    %cl,%rax
   168e6:	48 09 f8             	or     %rdi,%rax
   168e9:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
   168ed:	48 83 c3 01          	add    $0x1,%rbx
   168f1:	48 39 5d 08          	cmp    %rbx,0x8(%rbp)
   168f5:	77 d9                	ja     168d0 <mbedtls_mpi_shift_l+0xc0>
   168f7:	48 83 c4 08          	add    $0x8,%rsp
   168fb:	31 c0                	xor    %eax,%eax
   168fd:	5b                   	pop    %rbx
   168fe:	5d                   	pop    %rbp
   168ff:	41 5c                	pop    %r12
   16901:	41 5d                	pop    %r13
   16903:	c3                   	retq   
   16904:	0f 1f 40 00          	nopl   0x0(%rax)
   16908:	31 f6                	xor    %esi,%esi
   1690a:	a8 3f                	test   $0x3f,%al
   1690c:	48 89 ef             	mov    %rbp,%rdi
   1690f:	40 0f 95 c6          	setne  %sil
   16913:	48 c1 e8 06          	shr    $0x6,%rax
   16917:	48 01 c6             	add    %rax,%rsi
   1691a:	e8 91 f8 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   1691f:	85 c0                	test   %eax,%eax
   16921:	0f 84 2c ff ff ff    	je     16853 <mbedtls_mpi_shift_l+0x43>
   16927:	48 83 c4 08          	add    $0x8,%rsp
   1692b:	5b                   	pop    %rbx
   1692c:	5d                   	pop    %rbp
   1692d:	41 5c                	pop    %r12
   1692f:	41 5d                	pop    %r13
   16931:	c3                   	retq   
   16932:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16939:	00 00 00 00 
   1693d:	0f 1f 00             	nopl   (%rax)

0000000000016940 <mbedtls_mpi_shift_r>:
   16940:	f3 0f 1e fa          	endbr64 
   16944:	4c 8b 47 08          	mov    0x8(%rdi),%r8
   16948:	4d 85 c0             	test   %r8,%r8
   1694b:	75 03                	jne    16950 <mbedtls_mpi_shift_r+0x10>
   1694d:	31 c0                	xor    %eax,%eax
   1694f:	c3                   	retq   
   16950:	48 83 ec 08          	sub    $0x8,%rsp
   16954:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16958:	48 89 f2             	mov    %rsi,%rdx
   1695b:	4c 89 c6             	mov    %r8,%rsi
   1695e:	e8 bd 4f 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   16963:	31 c0                	xor    %eax,%eax
   16965:	48 83 c4 08          	add    $0x8,%rsp
   16969:	c3                   	retq   
   1696a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016970 <mbedtls_mpi_cmp_abs>:
   16970:	f3 0f 1e fa          	endbr64 
   16974:	48 8b 47 08          	mov    0x8(%rdi),%rax
   16978:	48 85 c0             	test   %rax,%rax
   1697b:	0f 84 7f 00 00 00    	je     16a00 <mbedtls_mpi_cmp_abs+0x90>
   16981:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16985:	eb 0f                	jmp    16996 <mbedtls_mpi_cmp_abs+0x26>
   16987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1698e:	00 00 
   16990:	48 83 e8 01          	sub    $0x1,%rax
   16994:	74 6a                	je     16a00 <mbedtls_mpi_cmp_abs+0x90>
   16996:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
   1699c:	74 f2                	je     16990 <mbedtls_mpi_cmp_abs+0x20>
   1699e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   169a2:	48 85 d2             	test   %rdx,%rdx
   169a5:	74 4d                	je     169f4 <mbedtls_mpi_cmp_abs+0x84>
   169a7:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   169ab:	eb 09                	jmp    169b6 <mbedtls_mpi_cmp_abs+0x46>
   169ad:	0f 1f 00             	nopl   (%rax)
   169b0:	48 83 ea 01          	sub    $0x1,%rdx
   169b4:	74 62                	je     16a18 <mbedtls_mpi_cmp_abs+0xa8>
   169b6:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
   169bc:	74 f2                	je     169b0 <mbedtls_mpi_cmp_abs+0x40>
   169be:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   169c4:	48 39 c2             	cmp    %rax,%rdx
   169c7:	72 31                	jb     169fa <mbedtls_mpi_cmp_abs+0x8a>
   169c9:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   169cf:	77 29                	ja     169fa <mbedtls_mpi_cmp_abs+0x8a>
   169d1:	48 85 c0             	test   %rax,%rax
   169d4:	74 35                	je     16a0b <mbedtls_mpi_cmp_abs+0x9b>
   169d6:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   169da:	eb 0c                	jmp    169e8 <mbedtls_mpi_cmp_abs+0x78>
   169dc:	0f 1f 40 00          	nopl   0x0(%rax)
   169e0:	72 42                	jb     16a24 <mbedtls_mpi_cmp_abs+0xb4>
   169e2:	48 83 e8 01          	sub    $0x1,%rax
   169e6:	74 23                	je     16a0b <mbedtls_mpi_cmp_abs+0x9b>
   169e8:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
   169ed:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
   169f2:	76 ec                	jbe    169e0 <mbedtls_mpi_cmp_abs+0x70>
   169f4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   169fa:	44 89 c0             	mov    %r8d,%eax
   169fd:	c3                   	retq   
   169fe:	66 90                	xchg   %ax,%ax
   16a00:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16a04:	31 c0                	xor    %eax,%eax
   16a06:	48 85 d2             	test   %rdx,%rdx
   16a09:	75 9c                	jne    169a7 <mbedtls_mpi_cmp_abs+0x37>
   16a0b:	45 31 c0             	xor    %r8d,%r8d
   16a0e:	44 89 c0             	mov    %r8d,%eax
   16a11:	c3                   	retq   
   16a12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16a18:	45 31 c0             	xor    %r8d,%r8d
   16a1b:	48 85 c0             	test   %rax,%rax
   16a1e:	75 9e                	jne    169be <mbedtls_mpi_cmp_abs+0x4e>
   16a20:	44 89 c0             	mov    %r8d,%eax
   16a23:	c3                   	retq   
   16a24:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   16a2a:	eb ce                	jmp    169fa <mbedtls_mpi_cmp_abs+0x8a>
   16a2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016a30 <mbedtls_mpi_cmp_mpi>:
   16a30:	f3 0f 1e fa          	endbr64 
   16a34:	48 8b 47 08          	mov    0x8(%rdi),%rax
   16a38:	48 85 c0             	test   %rax,%rax
   16a3b:	0f 84 7f 00 00 00    	je     16ac0 <mbedtls_mpi_cmp_mpi+0x90>
   16a41:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16a45:	eb 0f                	jmp    16a56 <mbedtls_mpi_cmp_mpi+0x26>
   16a47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16a4e:	00 00 
   16a50:	48 83 e8 01          	sub    $0x1,%rax
   16a54:	74 6a                	je     16ac0 <mbedtls_mpi_cmp_mpi+0x90>
   16a56:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
   16a5c:	74 f2                	je     16a50 <mbedtls_mpi_cmp_mpi+0x20>
   16a5e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16a62:	48 85 d2             	test   %rdx,%rdx
   16a65:	74 71                	je     16ad8 <mbedtls_mpi_cmp_mpi+0xa8>
   16a67:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   16a6b:	eb 09                	jmp    16a76 <mbedtls_mpi_cmp_mpi+0x46>
   16a6d:	0f 1f 00             	nopl   (%rax)
   16a70:	48 83 ea 01          	sub    $0x1,%rdx
   16a74:	74 6a                	je     16ae0 <mbedtls_mpi_cmp_mpi+0xb0>
   16a76:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
   16a7c:	74 f2                	je     16a70 <mbedtls_mpi_cmp_mpi+0x40>
   16a7e:	48 39 c2             	cmp    %rax,%rdx
   16a81:	72 55                	jb     16ad8 <mbedtls_mpi_cmp_mpi+0xa8>
   16a83:	8b 16                	mov    (%rsi),%edx
   16a85:	77 79                	ja     16b00 <mbedtls_mpi_cmp_mpi+0xd0>
   16a87:	44 8b 07             	mov    (%rdi),%r8d
   16a8a:	45 85 c0             	test   %r8d,%r8d
   16a8d:	7e 61                	jle    16af0 <mbedtls_mpi_cmp_mpi+0xc0>
   16a8f:	85 d2                	test   %edx,%edx
   16a91:	78 76                	js     16b09 <mbedtls_mpi_cmp_mpi+0xd9>
   16a93:	48 85 c0             	test   %rax,%rax
   16a96:	74 33                	je     16acb <mbedtls_mpi_cmp_mpi+0x9b>
   16a98:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16a9c:	eb 08                	jmp    16aa6 <mbedtls_mpi_cmp_mpi+0x76>
   16a9e:	66 90                	xchg   %ax,%ax
   16aa0:	48 83 e8 01          	sub    $0x1,%rax
   16aa4:	74 25                	je     16acb <mbedtls_mpi_cmp_mpi+0x9b>
   16aa6:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
   16aab:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
   16ab0:	77 29                	ja     16adb <mbedtls_mpi_cmp_mpi+0xab>
   16ab2:	73 ec                	jae    16aa0 <mbedtls_mpi_cmp_mpi+0x70>
   16ab4:	41 f7 d8             	neg    %r8d
   16ab7:	eb 22                	jmp    16adb <mbedtls_mpi_cmp_mpi+0xab>
   16ab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16ac0:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16ac4:	31 c0                	xor    %eax,%eax
   16ac6:	48 85 d2             	test   %rdx,%rdx
   16ac9:	75 9c                	jne    16a67 <mbedtls_mpi_cmp_mpi+0x37>
   16acb:	45 31 c0             	xor    %r8d,%r8d
   16ace:	44 89 c0             	mov    %r8d,%eax
   16ad1:	c3                   	retq   
   16ad2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16ad8:	44 8b 07             	mov    (%rdi),%r8d
   16adb:	44 89 c0             	mov    %r8d,%eax
   16ade:	c3                   	retq   
   16adf:	90                   	nop
   16ae0:	45 31 c0             	xor    %r8d,%r8d
   16ae3:	48 85 c0             	test   %rax,%rax
   16ae6:	75 96                	jne    16a7e <mbedtls_mpi_cmp_mpi+0x4e>
   16ae8:	44 89 c0             	mov    %r8d,%eax
   16aeb:	c3                   	retq   
   16aec:	0f 1f 40 00          	nopl   0x0(%rax)
   16af0:	79 a1                	jns    16a93 <mbedtls_mpi_cmp_mpi+0x63>
   16af2:	85 d2                	test   %edx,%edx
   16af4:	7e 9d                	jle    16a93 <mbedtls_mpi_cmp_mpi+0x63>
   16af6:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   16afc:	eb dd                	jmp    16adb <mbedtls_mpi_cmp_mpi+0xab>
   16afe:	66 90                	xchg   %ax,%ax
   16b00:	f7 da                	neg    %edx
   16b02:	41 89 d0             	mov    %edx,%r8d
   16b05:	44 89 c0             	mov    %r8d,%eax
   16b08:	c3                   	retq   
   16b09:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16b0f:	eb ca                	jmp    16adb <mbedtls_mpi_cmp_mpi+0xab>
   16b11:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16b18:	00 00 00 00 
   16b1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016b20 <mbedtls_mpi_cmp_int>:
   16b20:	f3 0f 1e fa          	endbr64 
   16b24:	48 83 ec 38          	sub    $0x38,%rsp
   16b28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16b2f:	00 00 
   16b31:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16b36:	31 c0                	xor    %eax,%eax
   16b38:	b8 01 00 00 00       	mov    $0x1,%eax
   16b3d:	48 85 f6             	test   %rsi,%rsi
   16b40:	79 08                	jns    16b4a <mbedtls_mpi_cmp_int+0x2a>
   16b42:	48 f7 de             	neg    %rsi
   16b45:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   16b4a:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   16b4f:	48 89 e6             	mov    %rsp,%rsi
   16b52:	89 04 24             	mov    %eax,(%rsp)
   16b55:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   16b5a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   16b61:	00 00 
   16b63:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16b68:	e8 c3 fe ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   16b6d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   16b72:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   16b79:	00 00 
   16b7b:	75 05                	jne    16b82 <mbedtls_mpi_cmp_int+0x62>
   16b7d:	48 83 c4 38          	add    $0x38,%rsp
   16b81:	c3                   	retq   
   16b82:	e8 d9 c6 fe ff       	callq  3260 <__stack_chk_fail@plt>
   16b87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16b8e:	00 00 

0000000000016b90 <mbedtls_mpi_add_abs>:
   16b90:	f3 0f 1e fa          	endbr64 
   16b94:	41 56                	push   %r14
   16b96:	41 55                	push   %r13
   16b98:	49 89 fd             	mov    %rdi,%r13
   16b9b:	41 54                	push   %r12
   16b9d:	55                   	push   %rbp
   16b9e:	48 89 f5             	mov    %rsi,%rbp
   16ba1:	53                   	push   %rbx
   16ba2:	48 39 d7             	cmp    %rdx,%rdi
   16ba5:	74 14                	je     16bbb <mbedtls_mpi_add_abs+0x2b>
   16ba7:	48 89 d3             	mov    %rdx,%rbx
   16baa:	48 39 f7             	cmp    %rsi,%rdi
   16bad:	74 09                	je     16bb8 <mbedtls_mpi_add_abs+0x28>
   16baf:	e8 2c f8 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   16bb4:	85 c0                	test   %eax,%eax
   16bb6:	75 45                	jne    16bfd <mbedtls_mpi_add_abs+0x6d>
   16bb8:	48 89 dd             	mov    %rbx,%rbp
   16bbb:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
   16bbf:	41 c7 45 00 01 00 00 	movl   $0x1,0x0(%r13)
   16bc6:	00 
   16bc7:	48 85 db             	test   %rbx,%rbx
   16bca:	74 44                	je     16c10 <mbedtls_mpi_add_abs+0x80>
   16bcc:	48 8b 45 10          	mov    0x10(%rbp),%rax
   16bd0:	eb 0c                	jmp    16bde <mbedtls_mpi_add_abs+0x4e>
   16bd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16bd8:	48 83 eb 01          	sub    $0x1,%rbx
   16bdc:	74 32                	je     16c10 <mbedtls_mpi_add_abs+0x80>
   16bde:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   16be4:	4c 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%r14
   16beb:	00 
   16bec:	74 ea                	je     16bd8 <mbedtls_mpi_add_abs+0x48>
   16bee:	48 89 de             	mov    %rbx,%rsi
   16bf1:	4c 89 ef             	mov    %r13,%rdi
   16bf4:	e8 b7 f5 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   16bf9:	85 c0                	test   %eax,%eax
   16bfb:	74 23                	je     16c20 <mbedtls_mpi_add_abs+0x90>
   16bfd:	5b                   	pop    %rbx
   16bfe:	5d                   	pop    %rbp
   16bff:	41 5c                	pop    %r12
   16c01:	41 5d                	pop    %r13
   16c03:	41 5e                	pop    %r14
   16c05:	c3                   	retq   
   16c06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16c0d:	00 00 00 
   16c10:	5b                   	pop    %rbx
   16c11:	31 c0                	xor    %eax,%eax
   16c13:	5d                   	pop    %rbp
   16c14:	41 5c                	pop    %r12
   16c16:	41 5d                	pop    %r13
   16c18:	41 5e                	pop    %r14
   16c1a:	c3                   	retq   
   16c1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16c20:	4d 8b 65 10          	mov    0x10(%r13),%r12
   16c24:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16c28:	48 89 d9             	mov    %rbx,%rcx
   16c2b:	4c 89 e6             	mov    %r12,%rsi
   16c2e:	4c 89 e7             	mov    %r12,%rdi
   16c31:	e8 da 4d 00 00       	callq  1ba10 <mbedtls_mpi_core_add>
   16c36:	48 89 c5             	mov    %rax,%rbp
   16c39:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
   16c3d:	48 85 ed             	test   %rbp,%rbp
   16c40:	75 1f                	jne    16c61 <mbedtls_mpi_add_abs+0xd1>
   16c42:	eb cc                	jmp    16c10 <mbedtls_mpi_add_abs+0x80>
   16c44:	0f 1f 40 00          	nopl   0x0(%rax)
   16c48:	31 d2                	xor    %edx,%edx
   16c4a:	48 03 28             	add    (%rax),%rbp
   16c4d:	0f 92 c2             	setb   %dl
   16c50:	48 89 28             	mov    %rbp,(%rax)
   16c53:	48 83 c0 08          	add    $0x8,%rax
   16c57:	bd 01 00 00 00       	mov    $0x1,%ebp
   16c5c:	48 85 d2             	test   %rdx,%rdx
   16c5f:	74 af                	je     16c10 <mbedtls_mpi_add_abs+0x80>
   16c61:	49 89 dc             	mov    %rbx,%r12
   16c64:	48 83 c3 01          	add    $0x1,%rbx
   16c68:	4d 39 65 08          	cmp    %r12,0x8(%r13)
   16c6c:	77 da                	ja     16c48 <mbedtls_mpi_add_abs+0xb8>
   16c6e:	48 89 de             	mov    %rbx,%rsi
   16c71:	4c 89 ef             	mov    %r13,%rdi
   16c74:	e8 37 f5 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   16c79:	85 c0                	test   %eax,%eax
   16c7b:	75 80                	jne    16bfd <mbedtls_mpi_add_abs+0x6d>
   16c7d:	49 8b 45 10          	mov    0x10(%r13),%rax
   16c81:	4a 8d 04 e0          	lea    (%rax,%r12,8),%rax
   16c85:	eb c1                	jmp    16c48 <mbedtls_mpi_add_abs+0xb8>
   16c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16c8e:	00 00 

0000000000016c90 <mbedtls_mpi_sub_abs>:
   16c90:	f3 0f 1e fa          	endbr64 
   16c94:	41 56                	push   %r14
   16c96:	41 55                	push   %r13
   16c98:	49 89 d5             	mov    %rdx,%r13
   16c9b:	41 54                	push   %r12
   16c9d:	49 89 f4             	mov    %rsi,%r12
   16ca0:	55                   	push   %rbp
   16ca1:	48 89 fd             	mov    %rdi,%rbp
   16ca4:	53                   	push   %rbx
   16ca5:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
   16ca9:	48 85 db             	test   %rbx,%rbx
   16cac:	74 32                	je     16ce0 <mbedtls_mpi_sub_abs+0x50>
   16cae:	48 8b 42 10          	mov    0x10(%rdx),%rax
   16cb2:	eb 0a                	jmp    16cbe <mbedtls_mpi_sub_abs+0x2e>
   16cb4:	0f 1f 40 00          	nopl   0x0(%rax)
   16cb8:	48 83 eb 01          	sub    $0x1,%rbx
   16cbc:	74 22                	je     16ce0 <mbedtls_mpi_sub_abs+0x50>
   16cbe:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   16cc4:	74 f2                	je     16cb8 <mbedtls_mpi_sub_abs+0x28>
   16cc6:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   16ccb:	48 39 de             	cmp    %rbx,%rsi
   16cce:	73 17                	jae    16ce7 <mbedtls_mpi_sub_abs+0x57>
   16cd0:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
   16cd6:	eb 5b                	jmp    16d33 <mbedtls_mpi_sub_abs+0xa3>
   16cd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16cdf:	00 
   16ce0:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   16ce5:	31 db                	xor    %ebx,%ebx
   16ce7:	48 89 ef             	mov    %rbp,%rdi
   16cea:	e8 c1 f4 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   16cef:	41 89 c6             	mov    %eax,%r14d
   16cf2:	85 c0                	test   %eax,%eax
   16cf4:	75 3d                	jne    16d33 <mbedtls_mpi_sub_abs+0xa3>
   16cf6:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   16cfb:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16cff:	48 39 da             	cmp    %rbx,%rdx
   16d02:	76 09                	jbe    16d0d <mbedtls_mpi_sub_abs+0x7d>
   16d04:	49 39 ec             	cmp    %rbp,%r12
   16d07:	0f 85 83 00 00 00    	jne    16d90 <mbedtls_mpi_sub_abs+0x100>
   16d0d:	48 8b 45 08          	mov    0x8(%rbp),%rax
   16d11:	48 39 d0             	cmp    %rdx,%rax
   16d14:	77 52                	ja     16d68 <mbedtls_mpi_sub_abs+0xd8>
   16d16:	49 8b 55 10          	mov    0x10(%r13),%rdx
   16d1a:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   16d1f:	48 89 d9             	mov    %rbx,%rcx
   16d22:	e8 a9 4d 00 00       	callq  1bad0 <mbedtls_mpi_core_sub>
   16d27:	48 85 c0             	test   %rax,%rax
   16d2a:	75 14                	jne    16d40 <mbedtls_mpi_sub_abs+0xb0>
   16d2c:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
   16d33:	5b                   	pop    %rbx
   16d34:	44 89 f0             	mov    %r14d,%eax
   16d37:	5d                   	pop    %rbp
   16d38:	41 5c                	pop    %r12
   16d3a:	41 5d                	pop    %r13
   16d3c:	41 5e                	pop    %r14
   16d3e:	c3                   	retq   
   16d3f:	90                   	nop
   16d40:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16d44:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
   16d48:	48 8d 3c da          	lea    (%rdx,%rbx,8),%rdi
   16d4c:	48 29 d9             	sub    %rbx,%rcx
   16d4f:	48 89 c2             	mov    %rax,%rdx
   16d52:	48 89 fe             	mov    %rdi,%rsi
   16d55:	e8 26 57 00 00       	callq  1c480 <mbedtls_mpi_core_sub_int>
   16d5a:	48 85 c0             	test   %rax,%rax
   16d5d:	74 cd                	je     16d2c <mbedtls_mpi_sub_abs+0x9c>
   16d5f:	e9 6c ff ff ff       	jmpq   16cd0 <mbedtls_mpi_sub_abs+0x40>
   16d64:	0f 1f 40 00          	nopl   0x0(%rax)
   16d68:	48 29 d0             	sub    %rdx,%rax
   16d6b:	48 8d 3c d7          	lea    (%rdi,%rdx,8),%rdi
   16d6f:	31 f6                	xor    %esi,%esi
   16d71:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
   16d78:	00 
   16d79:	4c 89 c2             	mov    %r8,%rdx
   16d7c:	e8 0f c5 fe ff       	callq  3290 <memset@plt>
   16d81:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16d85:	eb 8f                	jmp    16d16 <mbedtls_mpi_sub_abs+0x86>
   16d87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16d8e:	00 00 
   16d90:	48 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%rsi
   16d97:	00 
   16d98:	48 29 da             	sub    %rbx,%rdx
   16d9b:	48 01 f7             	add    %rsi,%rdi
   16d9e:	48 c1 e2 03          	shl    $0x3,%rdx
   16da2:	49 03 74 24 10       	add    0x10(%r12),%rsi
   16da7:	e8 64 c5 fe ff       	callq  3310 <memcpy@plt>
   16dac:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   16db1:	48 8b 45 08          	mov    0x8(%rbp),%rax
   16db5:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16db9:	48 39 d0             	cmp    %rdx,%rax
   16dbc:	0f 86 54 ff ff ff    	jbe    16d16 <mbedtls_mpi_sub_abs+0x86>
   16dc2:	eb a4                	jmp    16d68 <mbedtls_mpi_sub_abs+0xd8>
   16dc4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16dcb:	00 00 00 00 
   16dcf:	90                   	nop

0000000000016dd0 <add_sub_mpi>:
   16dd0:	41 54                	push   %r12
   16dd2:	41 89 c8             	mov    %ecx,%r8d
   16dd5:	49 89 f1             	mov    %rsi,%r9
   16dd8:	49 89 d2             	mov    %rdx,%r10
   16ddb:	55                   	push   %rbp
   16ddc:	48 89 fd             	mov    %rdi,%rbp
   16ddf:	53                   	push   %rbx
   16de0:	8b 1e                	mov    (%rsi),%ebx
   16de2:	8b 0a                	mov    (%rdx),%ecx
   16de4:	0f af cb             	imul   %ebx,%ecx
   16de7:	41 0f af c8          	imul   %r8d,%ecx
   16deb:	85 c9                	test   %ecx,%ecx
   16ded:	79 61                	jns    16e50 <add_sub_mpi+0x80>
   16def:	48 89 d6             	mov    %rdx,%rsi
   16df2:	4c 89 cf             	mov    %r9,%rdi
   16df5:	e8 76 fb ff ff       	callq  16970 <mbedtls_mpi_cmp_abs>
   16dfa:	41 89 c4             	mov    %eax,%r12d
   16dfd:	85 c0                	test   %eax,%eax
   16dff:	78 2f                	js     16e30 <add_sub_mpi+0x60>
   16e01:	4c 89 d2             	mov    %r10,%rdx
   16e04:	4c 89 ce             	mov    %r9,%rsi
   16e07:	48 89 ef             	mov    %rbp,%rdi
   16e0a:	e8 81 fe ff ff       	callq  16c90 <mbedtls_mpi_sub_abs>
   16e0f:	85 c0                	test   %eax,%eax
   16e11:	75 0e                	jne    16e21 <add_sub_mpi+0x51>
   16e13:	45 85 e4             	test   %r12d,%r12d
   16e16:	ba 01 00 00 00       	mov    $0x1,%edx
   16e1b:	0f 44 da             	cmove  %edx,%ebx
   16e1e:	89 5d 00             	mov    %ebx,0x0(%rbp)
   16e21:	5b                   	pop    %rbx
   16e22:	5d                   	pop    %rbp
   16e23:	41 5c                	pop    %r12
   16e25:	c3                   	retq   
   16e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16e2d:	00 00 00 
   16e30:	4c 89 ca             	mov    %r9,%rdx
   16e33:	4c 89 d6             	mov    %r10,%rsi
   16e36:	48 89 ef             	mov    %rbp,%rdi
   16e39:	e8 52 fe ff ff       	callq  16c90 <mbedtls_mpi_sub_abs>
   16e3e:	85 c0                	test   %eax,%eax
   16e40:	75 df                	jne    16e21 <add_sub_mpi+0x51>
   16e42:	f7 db                	neg    %ebx
   16e44:	89 5d 00             	mov    %ebx,0x0(%rbp)
   16e47:	5b                   	pop    %rbx
   16e48:	5d                   	pop    %rbp
   16e49:	41 5c                	pop    %r12
   16e4b:	c3                   	retq   
   16e4c:	0f 1f 40 00          	nopl   0x0(%rax)
   16e50:	e8 3b fd ff ff       	callq  16b90 <mbedtls_mpi_add_abs>
   16e55:	85 c0                	test   %eax,%eax
   16e57:	75 c8                	jne    16e21 <add_sub_mpi+0x51>
   16e59:	f3 0f 1e fa          	endbr64 
   16e5d:	89 5d 00             	mov    %ebx,0x0(%rbp)
   16e60:	5b                   	pop    %rbx
   16e61:	5d                   	pop    %rbp
   16e62:	41 5c                	pop    %r12
   16e64:	c3                   	retq   
   16e65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16e6c:	00 00 00 00 

0000000000016e70 <mbedtls_mpi_add_mpi>:
   16e70:	f3 0f 1e fa          	endbr64 
   16e74:	b9 01 00 00 00       	mov    $0x1,%ecx
   16e79:	e9 52 ff ff ff       	jmpq   16dd0 <add_sub_mpi>
   16e7e:	66 90                	xchg   %ax,%ax

0000000000016e80 <mbedtls_mpi_sub_mpi>:
   16e80:	f3 0f 1e fa          	endbr64 
   16e84:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   16e89:	e9 42 ff ff ff       	jmpq   16dd0 <add_sub_mpi>
   16e8e:	66 90                	xchg   %ax,%ax

0000000000016e90 <mbedtls_mpi_add_int>:
   16e90:	f3 0f 1e fa          	endbr64 
   16e94:	48 83 ec 38          	sub    $0x38,%rsp
   16e98:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16e9f:	00 00 
   16ea1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16ea6:	31 c0                	xor    %eax,%eax
   16ea8:	b8 01 00 00 00       	mov    $0x1,%eax
   16ead:	48 85 d2             	test   %rdx,%rdx
   16eb0:	79 08                	jns    16eba <mbedtls_mpi_add_int+0x2a>
   16eb2:	48 f7 da             	neg    %rdx
   16eb5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   16eba:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   16ebf:	b9 01 00 00 00       	mov    $0x1,%ecx
   16ec4:	48 89 e2             	mov    %rsp,%rdx
   16ec7:	89 04 24             	mov    %eax,(%rsp)
   16eca:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   16ecf:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   16ed6:	00 00 
   16ed8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16edd:	e8 ee fe ff ff       	callq  16dd0 <add_sub_mpi>
   16ee2:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   16ee7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   16eee:	00 00 
   16ef0:	75 05                	jne    16ef7 <mbedtls_mpi_add_int+0x67>
   16ef2:	48 83 c4 38          	add    $0x38,%rsp
   16ef6:	c3                   	retq   
   16ef7:	e8 64 c3 fe ff       	callq  3260 <__stack_chk_fail@plt>
   16efc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016f00 <mbedtls_mpi_sub_int>:
   16f00:	f3 0f 1e fa          	endbr64 
   16f04:	48 83 ec 38          	sub    $0x38,%rsp
   16f08:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16f0f:	00 00 
   16f11:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16f16:	31 c0                	xor    %eax,%eax
   16f18:	b8 01 00 00 00       	mov    $0x1,%eax
   16f1d:	48 85 d2             	test   %rdx,%rdx
   16f20:	79 08                	jns    16f2a <mbedtls_mpi_sub_int+0x2a>
   16f22:	48 f7 da             	neg    %rdx
   16f25:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   16f2a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   16f2f:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   16f34:	48 89 e2             	mov    %rsp,%rdx
   16f37:	89 04 24             	mov    %eax,(%rsp)
   16f3a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   16f3f:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   16f46:	00 00 
   16f48:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16f4d:	e8 7e fe ff ff       	callq  16dd0 <add_sub_mpi>
   16f52:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   16f57:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   16f5e:	00 00 
   16f60:	75 05                	jne    16f67 <mbedtls_mpi_sub_int+0x67>
   16f62:	48 83 c4 38          	add    $0x38,%rsp
   16f66:	c3                   	retq   
   16f67:	e8 f4 c2 fe ff       	callq  3260 <__stack_chk_fail@plt>
   16f6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016f70 <mbedtls_mpi_mul_mpi>:
   16f70:	f3 0f 1e fa          	endbr64 
   16f74:	41 57                	push   %r15
   16f76:	49 89 ff             	mov    %rdi,%r15
   16f79:	41 56                	push   %r14
   16f7b:	49 89 d6             	mov    %rdx,%r14
   16f7e:	41 55                	push   %r13
   16f80:	49 89 f5             	mov    %rsi,%r13
   16f83:	41 54                	push   %r12
   16f85:	55                   	push   %rbp
   16f86:	53                   	push   %rbx
   16f87:	48 83 ec 58          	sub    $0x58,%rsp
   16f8b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16f92:	00 00 
   16f94:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   16f99:	31 c0                	xor    %eax,%eax
   16f9b:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   16fa0:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   16fa7:	00 
   16fa8:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   16faf:	00 00 
   16fb1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   16fb8:	00 00 
   16fba:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   16fc1:	00 
   16fc2:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   16fc9:	00 00 
   16fcb:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   16fd2:	00 00 
   16fd4:	48 89 04 24          	mov    %rax,(%rsp)
   16fd8:	48 39 f7             	cmp    %rsi,%rdi
   16fdb:	0f 84 2f 01 00 00    	je     17110 <mbedtls_mpi_mul_mpi+0x1a0>
   16fe1:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   16fe6:	4d 39 f7             	cmp    %r14,%r15
   16fe9:	0f 84 51 01 00 00    	je     17140 <mbedtls_mpi_mul_mpi+0x1d0>
   16fef:	4d 8b 65 08          	mov    0x8(%r13),%r12
   16ff3:	4d 85 e4             	test   %r12,%r12
   16ff6:	0f 84 f4 00 00 00    	je     170f0 <mbedtls_mpi_mul_mpi+0x180>
   16ffc:	49 8b 45 10          	mov    0x10(%r13),%rax
   17000:	eb 10                	jmp    17012 <mbedtls_mpi_mul_mpi+0xa2>
   17002:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17008:	49 83 ec 01          	sub    $0x1,%r12
   1700c:	0f 84 de 00 00 00    	je     170f0 <mbedtls_mpi_mul_mpi+0x180>
   17012:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
   17018:	74 ee                	je     17008 <mbedtls_mpi_mul_mpi+0x98>
   1701a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   17021:	00 
   17022:	49 8b 5e 08          	mov    0x8(%r14),%rbx
   17026:	48 85 db             	test   %rbx,%rbx
   17029:	0f 84 b1 00 00 00    	je     170e0 <mbedtls_mpi_mul_mpi+0x170>
   1702f:	49 8b 46 10          	mov    0x10(%r14),%rax
   17033:	eb 0d                	jmp    17042 <mbedtls_mpi_mul_mpi+0xd2>
   17035:	0f 1f 00             	nopl   (%rax)
   17038:	48 83 eb 01          	sub    $0x1,%rbx
   1703c:	0f 84 9e 00 00 00    	je     170e0 <mbedtls_mpi_mul_mpi+0x170>
   17042:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   17048:	74 ee                	je     17038 <mbedtls_mpi_mul_mpi+0xc8>
   1704a:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
   1704e:	4c 89 ff             	mov    %r15,%rdi
   17051:	e8 5a f1 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   17056:	85 c0                	test   %eax,%eax
   17058:	75 46                	jne    170a0 <mbedtls_mpi_mul_mpi+0x130>
   1705a:	31 f6                	xor    %esi,%esi
   1705c:	4c 89 ff             	mov    %r15,%rdi
   1705f:	e8 ec f4 ff ff       	callq  16550 <mbedtls_mpi_lset>
   17064:	85 c0                	test   %eax,%eax
   17066:	75 38                	jne    170a0 <mbedtls_mpi_mul_mpi+0x130>
   17068:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   1706c:	49 8b 75 10          	mov    0x10(%r13),%rsi
   17070:	49 89 d8             	mov    %rbx,%r8
   17073:	4c 89 e2             	mov    %r12,%rdx
   17076:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1707a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1707e:	e8 4d 4c 00 00       	callq  1bcd0 <mbedtls_mpi_core_mul>
   17083:	8b 44 24 08          	mov    0x8(%rsp),%eax
   17087:	85 c0                	test   %eax,%eax
   17089:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1708d:	74 71                	je     17100 <mbedtls_mpi_mul_mpi+0x190>
   1708f:	41 c7 07 01 00 00 00 	movl   $0x1,(%r15)
   17096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1709d:	00 00 00 
   170a0:	48 89 ef             	mov    %rbp,%rdi
   170a3:	89 44 24 08          	mov    %eax,0x8(%rsp)
   170a7:	e8 a4 f0 ff ff       	callq  16150 <mbedtls_mpi_free>
   170ac:	48 8b 3c 24          	mov    (%rsp),%rdi
   170b0:	e8 9b f0 ff ff       	callq  16150 <mbedtls_mpi_free>
   170b5:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   170ba:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   170c1:	00 00 
   170c3:	8b 44 24 08          	mov    0x8(%rsp),%eax
   170c7:	0f 85 8e 00 00 00    	jne    1715b <mbedtls_mpi_mul_mpi+0x1eb>
   170cd:	48 83 c4 58          	add    $0x58,%rsp
   170d1:	5b                   	pop    %rbx
   170d2:	5d                   	pop    %rbp
   170d3:	41 5c                	pop    %r12
   170d5:	41 5d                	pop    %r13
   170d7:	41 5e                	pop    %r14
   170d9:	41 5f                	pop    %r15
   170db:	c3                   	retq   
   170dc:	0f 1f 40 00          	nopl   0x0(%rax)
   170e0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
   170e7:	00 
   170e8:	4c 89 e6             	mov    %r12,%rsi
   170eb:	e9 5e ff ff ff       	jmpq   1704e <mbedtls_mpi_mul_mpi+0xde>
   170f0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
   170f7:	00 
   170f8:	e9 25 ff ff ff       	jmpq   17022 <mbedtls_mpi_mul_mpi+0xb2>
   170fd:	0f 1f 00             	nopl   (%rax)
   17100:	41 8b 55 00          	mov    0x0(%r13),%edx
   17104:	41 0f af 16          	imul   (%r14),%edx
   17108:	41 89 17             	mov    %edx,(%r15)
   1710b:	eb 93                	jmp    170a0 <mbedtls_mpi_mul_mpi+0x130>
   1710d:	0f 1f 00             	nopl   (%rax)
   17110:	48 89 fe             	mov    %rdi,%rsi
   17113:	48 89 c7             	mov    %rax,%rdi
   17116:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   1711b:	49 89 c5             	mov    %rax,%r13
   1711e:	e8 bd f2 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   17123:	85 c0                	test   %eax,%eax
   17125:	0f 85 75 ff ff ff    	jne    170a0 <mbedtls_mpi_mul_mpi+0x130>
   1712b:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   17130:	4d 39 f7             	cmp    %r14,%r15
   17133:	0f 85 b6 fe ff ff    	jne    16fef <mbedtls_mpi_mul_mpi+0x7f>
   17139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17140:	4c 89 fe             	mov    %r15,%rsi
   17143:	48 89 ef             	mov    %rbp,%rdi
   17146:	e8 95 f2 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   1714b:	85 c0                	test   %eax,%eax
   1714d:	0f 85 4d ff ff ff    	jne    170a0 <mbedtls_mpi_mul_mpi+0x130>
   17153:	49 89 ee             	mov    %rbp,%r14
   17156:	e9 94 fe ff ff       	jmpq   16fef <mbedtls_mpi_mul_mpi+0x7f>
   1715b:	e8 00 c1 fe ff       	callq  3260 <__stack_chk_fail@plt>

0000000000017160 <mbedtls_mpi_mul_int>:
   17160:	f3 0f 1e fa          	endbr64 
   17164:	41 56                	push   %r14
   17166:	41 55                	push   %r13
   17168:	41 54                	push   %r12
   1716a:	55                   	push   %rbp
   1716b:	48 89 fd             	mov    %rdi,%rbp
   1716e:	53                   	push   %rbx
   1716f:	4c 8b 66 08          	mov    0x8(%rsi),%r12
   17173:	4d 85 e4             	test   %r12,%r12
   17176:	0f 84 84 00 00 00    	je     17200 <mbedtls_mpi_mul_int+0xa0>
   1717c:	48 8b 46 10          	mov    0x10(%rsi),%rax
   17180:	48 89 f3             	mov    %rsi,%rbx
   17183:	49 89 d6             	mov    %rdx,%r14
   17186:	eb 0e                	jmp    17196 <mbedtls_mpi_mul_int+0x36>
   17188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1718f:	00 
   17190:	49 83 ec 01          	sub    $0x1,%r12
   17194:	74 6a                	je     17200 <mbedtls_mpi_mul_int+0xa0>
   17196:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
   1719c:	74 f2                	je     17190 <mbedtls_mpi_mul_int+0x30>
   1719e:	4d 85 f6             	test   %r14,%r14
   171a1:	74 5d                	je     17200 <mbedtls_mpi_mul_int+0xa0>
   171a3:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
   171a8:	48 89 ef             	mov    %rbp,%rdi
   171ab:	e8 00 f0 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   171b0:	41 89 c5             	mov    %eax,%r13d
   171b3:	85 c0                	test   %eax,%eax
   171b5:	74 11                	je     171c8 <mbedtls_mpi_mul_int+0x68>
   171b7:	5b                   	pop    %rbx
   171b8:	44 89 e8             	mov    %r13d,%eax
   171bb:	5d                   	pop    %rbp
   171bc:	41 5c                	pop    %r12
   171be:	41 5d                	pop    %r13
   171c0:	41 5e                	pop    %r14
   171c2:	c3                   	retq   
   171c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   171c8:	48 89 de             	mov    %rbx,%rsi
   171cb:	48 89 ef             	mov    %rbp,%rdi
   171ce:	e8 0d f2 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   171d3:	41 89 c5             	mov    %eax,%r13d
   171d6:	85 c0                	test   %eax,%eax
   171d8:	75 dd                	jne    171b7 <mbedtls_mpi_mul_int+0x57>
   171da:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   171de:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   171e2:	4d 8d 46 ff          	lea    -0x1(%r14),%r8
   171e6:	4c 89 e1             	mov    %r12,%rcx
   171e9:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   171ed:	e8 2e 49 00 00       	callq  1bb20 <mbedtls_mpi_core_mla>
   171f2:	5b                   	pop    %rbx
   171f3:	44 89 e8             	mov    %r13d,%eax
   171f6:	5d                   	pop    %rbp
   171f7:	41 5c                	pop    %r12
   171f9:	41 5d                	pop    %r13
   171fb:	41 5e                	pop    %r14
   171fd:	c3                   	retq   
   171fe:	66 90                	xchg   %ax,%ax
   17200:	5b                   	pop    %rbx
   17201:	48 89 ef             	mov    %rbp,%rdi
   17204:	31 f6                	xor    %esi,%esi
   17206:	5d                   	pop    %rbp
   17207:	41 5c                	pop    %r12
   17209:	41 5d                	pop    %r13
   1720b:	41 5e                	pop    %r14
   1720d:	e9 3e f3 ff ff       	jmpq   16550 <mbedtls_mpi_lset>
   17212:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17219:	00 00 00 00 
   1721d:	0f 1f 00             	nopl   (%rax)

0000000000017220 <mbedtls_mpi_read_string>:
   17220:	f3 0f 1e fa          	endbr64 
   17224:	41 57                	push   %r15
   17226:	41 56                	push   %r14
   17228:	41 55                	push   %r13
   1722a:	41 54                	push   %r12
   1722c:	55                   	push   %rbp
   1722d:	48 63 ee             	movslq %esi,%rbp
   17230:	53                   	push   %rbx
   17231:	48 83 ec 38          	sub    $0x38,%rsp
   17235:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1723c:	00 00 
   1723e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17243:	31 c0                	xor    %eax,%eax
   17245:	8d 45 fe             	lea    -0x2(%rbp),%eax
   17248:	83 f8 0e             	cmp    $0xe,%eax
   1724b:	0f 87 4f 02 00 00    	ja     174a0 <mbedtls_mpi_read_string+0x280>
   17251:	0f b6 02             	movzbl (%rdx),%eax
   17254:	49 89 ff             	mov    %rdi,%r15
   17257:	48 89 d3             	mov    %rdx,%rbx
   1725a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   17261:	00 
   17262:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   17269:	00 00 
   1726b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17272:	00 00 
   17274:	84 c0                	test   %al,%al
   17276:	0f 84 9c 01 00 00    	je     17418 <mbedtls_mpi_read_string+0x1f8>
   1727c:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   17283:	00 
   17284:	3c 2d                	cmp    $0x2d,%al
   17286:	75 0c                	jne    17294 <mbedtls_mpi_read_string+0x74>
   17288:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%rsp)
   1728f:	ff 
   17290:	48 83 c3 01          	add    $0x1,%rbx
   17294:	48 89 df             	mov    %rbx,%rdi
   17297:	e8 b4 bf fe ff       	callq  3250 <strlen@plt>
   1729c:	49 89 c6             	mov    %rax,%r14
   1729f:	49 89 c5             	mov    %rax,%r13
   172a2:	83 fd 10             	cmp    $0x10,%ebp
   172a5:	75 79                	jne    17320 <mbedtls_mpi_read_string+0x100>
   172a7:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   172ae:	ff ff 3f 
   172b1:	49 39 c6             	cmp    %rax,%r14
   172b4:	0f 87 e6 01 00 00    	ja     174a0 <mbedtls_mpi_read_string+0x280>
   172ba:	4a 8d 34 b5 00 00 00 	lea    0x0(,%r14,4),%rsi
   172c1:	00 
   172c2:	31 c0                	xor    %eax,%eax
   172c4:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   172c9:	4c 89 ff             	mov    %r15,%rdi
   172cc:	40 f6 c6 3c          	test   $0x3c,%sil
   172d0:	0f 95 c0             	setne  %al
   172d3:	48 c1 ee 06          	shr    $0x6,%rsi
   172d7:	48 01 c6             	add    %rax,%rsi
   172da:	e8 d1 ee ff ff       	callq  161b0 <mbedtls_mpi_grow>
   172df:	85 c0                	test   %eax,%eax
   172e1:	0f 84 d9 00 00 00    	je     173c0 <mbedtls_mpi_read_string+0x1a0>
   172e7:	4c 89 e7             	mov    %r12,%rdi
   172ea:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   172ee:	e8 5d ee ff ff       	callq  16150 <mbedtls_mpi_free>
   172f3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   172f7:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   172fc:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   17303:	00 00 
   17305:	0f 85 9f 01 00 00    	jne    174aa <mbedtls_mpi_read_string+0x28a>
   1730b:	48 83 c4 38          	add    $0x38,%rsp
   1730f:	5b                   	pop    %rbx
   17310:	5d                   	pop    %rbp
   17311:	41 5c                	pop    %r12
   17313:	41 5d                	pop    %r13
   17315:	41 5e                	pop    %r14
   17317:	41 5f                	pop    %r15
   17319:	c3                   	retq   
   1731a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17320:	31 f6                	xor    %esi,%esi
   17322:	4c 89 ff             	mov    %r15,%rdi
   17325:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   1732a:	e8 21 f2 ff ff       	callq  16550 <mbedtls_mpi_lset>
   1732f:	85 c0                	test   %eax,%eax
   17331:	75 b4                	jne    172e7 <mbedtls_mpi_read_string+0xc7>
   17333:	4d 85 f6             	test   %r14,%r14
   17336:	0f 84 1b 01 00 00    	je     17457 <mbedtls_mpi_read_string+0x237>
   1733c:	4e 8d 2c 33          	lea    (%rbx,%r14,1),%r13
   17340:	eb 4f                	jmp    17391 <mbedtls_mpi_read_string+0x171>
   17342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17348:	41 83 e8 30          	sub    $0x30,%r8d
   1734c:	4d 63 f0             	movslq %r8d,%r14
   1734f:	49 39 ee             	cmp    %rbp,%r14
   17352:	0f 83 b0 00 00 00    	jae    17408 <mbedtls_mpi_read_string+0x1e8>
   17358:	48 89 ea             	mov    %rbp,%rdx
   1735b:	4c 89 fe             	mov    %r15,%rsi
   1735e:	4c 89 e7             	mov    %r12,%rdi
   17361:	e8 fa fd ff ff       	callq  17160 <mbedtls_mpi_mul_int>
   17366:	85 c0                	test   %eax,%eax
   17368:	0f 85 79 ff ff ff    	jne    172e7 <mbedtls_mpi_read_string+0xc7>
   1736e:	4c 89 f2             	mov    %r14,%rdx
   17371:	4c 89 e6             	mov    %r12,%rsi
   17374:	4c 89 ff             	mov    %r15,%rdi
   17377:	e8 14 fb ff ff       	callq  16e90 <mbedtls_mpi_add_int>
   1737c:	85 c0                	test   %eax,%eax
   1737e:	0f 85 63 ff ff ff    	jne    172e7 <mbedtls_mpi_read_string+0xc7>
   17384:	48 83 c3 01          	add    $0x1,%rbx
   17388:	49 39 dd             	cmp    %rbx,%r13
   1738b:	0f 84 c6 00 00 00    	je     17457 <mbedtls_mpi_read_string+0x237>
   17391:	44 0f be 03          	movsbl (%rbx),%r8d
   17395:	41 8d 50 d0          	lea    -0x30(%r8),%edx
   17399:	44 89 c0             	mov    %r8d,%eax
   1739c:	80 fa 09             	cmp    $0x9,%dl
   1739f:	76 a7                	jbe    17348 <mbedtls_mpi_read_string+0x128>
   173a1:	41 8d 50 bf          	lea    -0x41(%r8),%edx
   173a5:	80 fa 05             	cmp    $0x5,%dl
   173a8:	0f 87 01 01 00 00    	ja     174af <mbedtls_mpi_read_string+0x28f>
   173ae:	41 83 e8 37          	sub    $0x37,%r8d
   173b2:	4d 63 f0             	movslq %r8d,%r14
   173b5:	eb 98                	jmp    1734f <mbedtls_mpi_read_string+0x12f>
   173b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   173be:	00 00 
   173c0:	31 f6                	xor    %esi,%esi
   173c2:	4c 89 ff             	mov    %r15,%rdi
   173c5:	e8 86 f1 ff ff       	callq  16550 <mbedtls_mpi_lset>
   173ca:	85 c0                	test   %eax,%eax
   173cc:	0f 85 15 ff ff ff    	jne    172e7 <mbedtls_mpi_read_string+0xc7>
   173d2:	31 f6                	xor    %esi,%esi
   173d4:	4d 85 f6             	test   %r14,%r14
   173d7:	74 7e                	je     17457 <mbedtls_mpi_read_string+0x237>
   173d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   173e0:	49 83 ed 01          	sub    $0x1,%r13
   173e4:	42 0f be 04 2b       	movsbl (%rbx,%r13,1),%eax
   173e9:	8d 48 d0             	lea    -0x30(%rax),%ecx
   173ec:	89 c2                	mov    %eax,%edx
   173ee:	80 f9 09             	cmp    $0x9,%cl
   173f1:	76 35                	jbe    17428 <mbedtls_mpi_read_string+0x208>
   173f3:	8d 48 bf             	lea    -0x41(%rax),%ecx
   173f6:	80 f9 05             	cmp    $0x5,%cl
   173f9:	76 75                	jbe    17470 <mbedtls_mpi_read_string+0x250>
   173fb:	83 ea 61             	sub    $0x61,%edx
   173fe:	80 fa 05             	cmp    $0x5,%dl
   17401:	76 65                	jbe    17468 <mbedtls_mpi_read_string+0x248>
   17403:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   17408:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1740d:	e9 d5 fe ff ff       	jmpq   172e7 <mbedtls_mpi_read_string+0xc7>
   17412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17418:	e8 33 ed ff ff       	callq  16150 <mbedtls_mpi_free>
   1741d:	31 c0                	xor    %eax,%eax
   1741f:	e9 d3 fe ff ff       	jmpq   172f7 <mbedtls_mpi_read_string+0xd7>
   17424:	0f 1f 40 00          	nopl   0x0(%rax)
   17428:	83 e8 30             	sub    $0x30,%eax
   1742b:	48 98                	cltq   
   1742d:	48 89 f7             	mov    %rsi,%rdi
   17430:	8d 0c b5 00 00 00 00 	lea    0x0(,%rsi,4),%ecx
   17437:	49 8b 57 10          	mov    0x10(%r15),%rdx
   1743b:	48 83 c6 01          	add    $0x1,%rsi
   1743f:	48 c1 ef 04          	shr    $0x4,%rdi
   17443:	83 e1 3c             	and    $0x3c,%ecx
   17446:	48 d3 e0             	shl    %cl,%rax
   17449:	48 09 04 fa          	or     %rax,(%rdx,%rdi,8)
   1744d:	4d 85 ed             	test   %r13,%r13
   17450:	75 8e                	jne    173e0 <mbedtls_mpi_read_string+0x1c0>
   17452:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   17457:	83 7c 24 0c ff       	cmpl   $0xffffffff,0xc(%rsp)
   1745c:	74 22                	je     17480 <mbedtls_mpi_read_string+0x260>
   1745e:	31 c0                	xor    %eax,%eax
   17460:	e9 82 fe ff ff       	jmpq   172e7 <mbedtls_mpi_read_string+0xc7>
   17465:	0f 1f 00             	nopl   (%rax)
   17468:	83 e8 57             	sub    $0x57,%eax
   1746b:	48 98                	cltq   
   1746d:	eb be                	jmp    1742d <mbedtls_mpi_read_string+0x20d>
   1746f:	90                   	nop
   17470:	83 e8 37             	sub    $0x37,%eax
   17473:	48 98                	cltq   
   17475:	eb b6                	jmp    1742d <mbedtls_mpi_read_string+0x20d>
   17477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1747e:	00 00 
   17480:	49 8b 77 08          	mov    0x8(%r15),%rsi
   17484:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   17488:	e8 73 40 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   1748d:	48 85 c0             	test   %rax,%rax
   17490:	74 cc                	je     1745e <mbedtls_mpi_read_string+0x23e>
   17492:	41 c7 07 ff ff ff ff 	movl   $0xffffffff,(%r15)
   17499:	31 c0                	xor    %eax,%eax
   1749b:	e9 47 fe ff ff       	jmpq   172e7 <mbedtls_mpi_read_string+0xc7>
   174a0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   174a5:	e9 4d fe ff ff       	jmpq   172f7 <mbedtls_mpi_read_string+0xd7>
   174aa:	e8 b1 bd fe ff       	callq  3260 <__stack_chk_fail@plt>
   174af:	83 e8 61             	sub    $0x61,%eax
   174b2:	3c 05                	cmp    $0x5,%al
   174b4:	0f 87 4e ff ff ff    	ja     17408 <mbedtls_mpi_read_string+0x1e8>
   174ba:	41 83 e8 57          	sub    $0x57,%r8d
   174be:	4d 63 f0             	movslq %r8d,%r14
   174c1:	e9 89 fe ff ff       	jmpq   1734f <mbedtls_mpi_read_string+0x12f>
   174c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   174cd:	00 00 00 

00000000000174d0 <mbedtls_mpi_read_file>:
   174d0:	f3 0f 1e fa          	endbr64 
   174d4:	41 55                	push   %r13
   174d6:	41 54                	push   %r12
   174d8:	55                   	push   %rbp
   174d9:	48 81 ec c0 09 00 00 	sub    $0x9c0,%rsp
   174e0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   174e7:	00 00 
   174e9:	48 89 84 24 b8 09 00 	mov    %rax,0x9b8(%rsp)
   174f0:	00 
   174f1:	31 c0                	xor    %eax,%eax
   174f3:	8d 46 fe             	lea    -0x2(%rsi),%eax
   174f6:	83 f8 0e             	cmp    $0xe,%eax
   174f9:	0f 87 4f 01 00 00    	ja     1764e <mbedtls_mpi_read_file+0x17e>
   174ff:	48 89 e5             	mov    %rsp,%rbp
   17502:	31 c0                	xor    %eax,%eax
   17504:	49 89 fd             	mov    %rdi,%r13
   17507:	b9 36 01 00 00       	mov    $0x136,%ecx
   1750c:	48 89 ef             	mov    %rbp,%rdi
   1750f:	41 89 f4             	mov    %esi,%r12d
   17512:	be b3 09 00 00       	mov    $0x9b3,%esi
   17517:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1751a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   17520:	48 89 ef             	mov    %rbp,%rdi
   17523:	e8 88 bd fe ff       	callq  32b0 <fgets@plt>
   17528:	48 85 c0             	test   %rax,%rax
   1752b:	0f 84 2b 01 00 00    	je     1765c <mbedtls_mpi_read_file+0x18c>
   17531:	48 89 ea             	mov    %rbp,%rdx
   17534:	8b 0a                	mov    (%rdx),%ecx
   17536:	48 83 c2 04          	add    $0x4,%rdx
   1753a:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
   17540:	f7 d1                	not    %ecx
   17542:	21 c8                	and    %ecx,%eax
   17544:	25 80 80 80 80       	and    $0x80808080,%eax
   17549:	74 e9                	je     17534 <mbedtls_mpi_read_file+0x64>
   1754b:	89 c1                	mov    %eax,%ecx
   1754d:	c1 e9 10             	shr    $0x10,%ecx
   17550:	a9 80 80 00 00       	test   $0x8080,%eax
   17555:	0f 44 c1             	cmove  %ecx,%eax
   17558:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
   1755c:	48 0f 44 d1          	cmove  %rcx,%rdx
   17560:	89 c7                	mov    %eax,%edi
   17562:	40 00 c7             	add    %al,%dil
   17565:	48 83 da 03          	sbb    $0x3,%rdx
   17569:	48 29 ea             	sub    %rbp,%rdx
   1756c:	48 81 fa b2 09 00 00 	cmp    $0x9b2,%rdx
   17573:	0f 84 dc 00 00 00    	je     17655 <mbedtls_mpi_read_file+0x185>
   17579:	48 85 d2             	test   %rdx,%rdx
   1757c:	0f 85 7e 00 00 00    	jne    17600 <mbedtls_mpi_read_file+0x130>
   17582:	48 89 ea             	mov    %rbp,%rdx
   17585:	49 63 fc             	movslq %r12d,%rdi
   17588:	eb 14                	jmp    1759e <mbedtls_mpi_read_file+0xce>
   1758a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17590:	83 e8 30             	sub    $0x30,%eax
   17593:	48 98                	cltq   
   17595:	48 83 ea 01          	sub    $0x1,%rdx
   17599:	48 39 c7             	cmp    %rax,%rdi
   1759c:	76 32                	jbe    175d0 <mbedtls_mpi_read_file+0x100>
   1759e:	49 89 d0             	mov    %rdx,%r8
   175a1:	48 39 ea             	cmp    %rbp,%rdx
   175a4:	76 2a                	jbe    175d0 <mbedtls_mpi_read_file+0x100>
   175a6:	0f be 42 ff          	movsbl -0x1(%rdx),%eax
   175aa:	8d 70 d0             	lea    -0x30(%rax),%esi
   175ad:	89 c1                	mov    %eax,%ecx
   175af:	40 80 fe 09          	cmp    $0x9,%sil
   175b3:	76 db                	jbe    17590 <mbedtls_mpi_read_file+0xc0>
   175b5:	8d 70 bf             	lea    -0x41(%rax),%esi
   175b8:	40 80 fe 05          	cmp    $0x5,%sil
   175bc:	0f 87 a9 00 00 00    	ja     1766b <mbedtls_mpi_read_file+0x19b>
   175c2:	83 e8 37             	sub    $0x37,%eax
   175c5:	48 83 ea 01          	sub    $0x1,%rdx
   175c9:	48 98                	cltq   
   175cb:	48 39 c7             	cmp    %rax,%rdi
   175ce:	77 ce                	ja     1759e <mbedtls_mpi_read_file+0xce>
   175d0:	4c 89 c2             	mov    %r8,%rdx
   175d3:	44 89 e6             	mov    %r12d,%esi
   175d6:	4c 89 ef             	mov    %r13,%rdi
   175d9:	e8 42 fc ff ff       	callq  17220 <mbedtls_mpi_read_string>
   175de:	48 8b bc 24 b8 09 00 	mov    0x9b8(%rsp),%rdi
   175e5:	00 
   175e6:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   175ed:	00 00 
   175ef:	75 75                	jne    17666 <mbedtls_mpi_read_file+0x196>
   175f1:	48 81 c4 c0 09 00 00 	add    $0x9c0,%rsp
   175f8:	5d                   	pop    %rbp
   175f9:	41 5c                	pop    %r12
   175fb:	41 5d                	pop    %r13
   175fd:	c3                   	retq   
   175fe:	66 90                	xchg   %ax,%ax
   17600:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   17604:	0f b6 0c 04          	movzbl (%rsp,%rax,1),%ecx
   17608:	80 f9 0a             	cmp    $0xa,%cl
   1760b:	74 23                	je     17630 <mbedtls_mpi_read_file+0x160>
   1760d:	48 01 ea             	add    %rbp,%rdx
   17610:	80 f9 0d             	cmp    $0xd,%cl
   17613:	0f 85 6c ff ff ff    	jne    17585 <mbedtls_mpi_read_file+0xb5>
   17619:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
   1761d:	48 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%rdx
   17622:	e9 5e ff ff ff       	jmpq   17585 <mbedtls_mpi_read_file+0xb5>
   17627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1762e:	00 00 
   17630:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
   17634:	48 85 c0             	test   %rax,%rax
   17637:	0f 84 45 ff ff ff    	je     17582 <mbedtls_mpi_read_file+0xb2>
   1763d:	48 8d 72 fe          	lea    -0x2(%rdx),%rsi
   17641:	0f b6 4c 14 fe       	movzbl -0x2(%rsp,%rdx,1),%ecx
   17646:	48 89 c2             	mov    %rax,%rdx
   17649:	48 89 f0             	mov    %rsi,%rax
   1764c:	eb bf                	jmp    1760d <mbedtls_mpi_read_file+0x13d>
   1764e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17653:	eb 89                	jmp    175de <mbedtls_mpi_read_file+0x10e>
   17655:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1765a:	eb 82                	jmp    175de <mbedtls_mpi_read_file+0x10e>
   1765c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   17661:	e9 78 ff ff ff       	jmpq   175de <mbedtls_mpi_read_file+0x10e>
   17666:	e8 f5 bb fe ff       	callq  3260 <__stack_chk_fail@plt>
   1766b:	83 e9 61             	sub    $0x61,%ecx
   1766e:	80 f9 05             	cmp    $0x5,%cl
   17671:	0f 87 59 ff ff ff    	ja     175d0 <mbedtls_mpi_read_file+0x100>
   17677:	83 e8 57             	sub    $0x57,%eax
   1767a:	48 98                	cltq   
   1767c:	e9 14 ff ff ff       	jmpq   17595 <mbedtls_mpi_read_file+0xc5>
   17681:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17688:	00 00 00 00 
   1768c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017690 <mbedtls_mpi_div_mpi>:
   17690:	f3 0f 1e fa          	endbr64 
   17694:	41 57                	push   %r15
   17696:	49 89 fb             	mov    %rdi,%r11
   17699:	41 56                	push   %r14
   1769b:	41 55                	push   %r13
   1769d:	41 54                	push   %r12
   1769f:	55                   	push   %rbp
   176a0:	48 89 d5             	mov    %rdx,%rbp
   176a3:	53                   	push   %rbx
   176a4:	48 89 cb             	mov    %rcx,%rbx
   176a7:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
   176ae:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   176b3:	4c 8d bc 24 30 01 00 	lea    0x130(%rsp),%r15
   176ba:	00 
   176bb:	48 89 cf             	mov    %rcx,%rdi
   176be:	4c 8d ac 24 50 01 00 	lea    0x150(%rsp),%r13
   176c5:	00 
   176c6:	48 89 34 24          	mov    %rsi,(%rsp)
   176ca:	4c 89 fe             	mov    %r15,%rsi
   176cd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   176d4:	00 00 
   176d6:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   176dd:	00 
   176de:	31 c0                	xor    %eax,%eax
   176e0:	4c 89 ac 24 40 01 00 	mov    %r13,0x140(%rsp)
   176e7:	00 
   176e8:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
   176ef:	00 00 00 00 00 
   176f4:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   176fb:	01 00 00 00 
   176ff:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   17706:	00 01 00 00 00 
   1770b:	e8 20 f3 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   17710:	85 c0                	test   %eax,%eax
   17712:	0f 84 68 05 00 00    	je     17c80 <mbedtls_mpi_div_mpi+0x5f0>
   17718:	48 89 de             	mov    %rbx,%rsi
   1771b:	48 89 ef             	mov    %rbp,%rdi
   1771e:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   17725:	01 00 00 00 
   17729:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   17730:	00 00 00 00 00 
   17735:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   1773c:	00 00 00 00 00 
   17741:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   17748:	01 00 00 00 
   1774c:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   17753:	00 00 00 00 00 
   17758:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   1775f:	00 00 00 00 00 
   17764:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   1776b:	01 00 00 00 
   1776f:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   17776:	00 00 00 00 00 
   1777b:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   17782:	00 00 00 00 00 
   17787:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   1778e:	01 00 00 00 
   17792:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   17799:	00 00 00 00 00 
   1779e:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   177a5:	00 00 00 00 00 
   177aa:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   177b1:	01 00 00 00 
   177b5:	48 c7 84 24 18 01 00 	movq   $0x3,0x118(%rsp)
   177bc:	00 03 00 00 00 
   177c1:	4c 89 ac 24 20 01 00 	mov    %r13,0x120(%rsp)
   177c8:	00 
   177c9:	e8 a2 f1 ff ff       	callq  16970 <mbedtls_mpi_cmp_abs>
   177ce:	85 c0                	test   %eax,%eax
   177d0:	0f 89 ca 00 00 00    	jns    178a0 <mbedtls_mpi_div_mpi+0x210>
   177d6:	4d 85 db             	test   %r11,%r11
   177d9:	74 13                	je     177ee <mbedtls_mpi_div_mpi+0x15e>
   177db:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   177e0:	31 f6                	xor    %esi,%esi
   177e2:	e8 69 ed ff ff       	callq  16550 <mbedtls_mpi_lset>
   177e7:	41 89 c4             	mov    %eax,%r12d
   177ea:	85 c0                	test   %eax,%eax
   177ec:	75 1a                	jne    17808 <mbedtls_mpi_div_mpi+0x178>
   177ee:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   177f3:	74 73                	je     17868 <mbedtls_mpi_div_mpi+0x1d8>
   177f5:	48 8b 3c 24          	mov    (%rsp),%rdi
   177f9:	48 89 ee             	mov    %rbp,%rsi
   177fc:	e8 df eb ff ff       	callq  163e0 <mbedtls_mpi_copy>
   17801:	41 89 c4             	mov    %eax,%r12d
   17804:	85 c0                	test   %eax,%eax
   17806:	74 60                	je     17868 <mbedtls_mpi_div_mpi+0x1d8>
   17808:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   1780f:	00 
   17810:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   17817:	00 
   17818:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
   1781f:	00 
   17820:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17825:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   1782c:	00 
   1782d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17832:	4c 89 c7             	mov    %r8,%rdi
   17835:	e8 16 e9 ff ff       	callq  16150 <mbedtls_mpi_free>
   1783a:	4c 89 f7             	mov    %r14,%rdi
   1783d:	e8 0e e9 ff ff       	callq  16150 <mbedtls_mpi_free>
   17842:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17847:	e8 04 e9 ff ff       	callq  16150 <mbedtls_mpi_free>
   1784c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   17851:	e8 fa e8 ff ff       	callq  16150 <mbedtls_mpi_free>
   17856:	be 18 00 00 00       	mov    $0x18,%esi
   1785b:	4c 89 ef             	mov    %r13,%rdi
   1785e:	e8 cd d9 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   17863:	eb 06                	jmp    1786b <mbedtls_mpi_div_mpi+0x1db>
   17865:	0f 1f 00             	nopl   (%rax)
   17868:	45 31 e4             	xor    %r12d,%r12d
   1786b:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
   17872:	00 
   17873:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1787a:	00 00 
   1787c:	0f 85 5d 06 00 00    	jne    17edf <mbedtls_mpi_div_mpi+0x84f>
   17882:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
   17889:	44 89 e0             	mov    %r12d,%eax
   1788c:	5b                   	pop    %rbx
   1788d:	5d                   	pop    %rbp
   1788e:	41 5c                	pop    %r12
   17890:	41 5d                	pop    %r13
   17892:	41 5e                	pop    %r14
   17894:	41 5f                	pop    %r15
   17896:	c3                   	retq   
   17897:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1789e:	00 00 
   178a0:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   178a7:	00 
   178a8:	48 89 ee             	mov    %rbp,%rsi
   178ab:	4c 89 c7             	mov    %r8,%rdi
   178ae:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   178b3:	e8 28 eb ff ff       	callq  163e0 <mbedtls_mpi_copy>
   178b8:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   178bd:	85 c0                	test   %eax,%eax
   178bf:	41 89 c4             	mov    %eax,%r12d
   178c2:	0f 85 48 ff ff ff    	jne    17810 <mbedtls_mpi_div_mpi+0x180>
   178c8:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
   178cf:	00 
   178d0:	48 89 de             	mov    %rbx,%rsi
   178d3:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   178d8:	4c 89 f7             	mov    %r14,%rdi
   178db:	e8 00 eb ff ff       	callq  163e0 <mbedtls_mpi_copy>
   178e0:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   178e5:	85 c0                	test   %eax,%eax
   178e7:	41 89 c4             	mov    %eax,%r12d
   178ea:	74 24                	je     17910 <mbedtls_mpi_div_mpi+0x280>
   178ec:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   178f3:	00 
   178f4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   178f9:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   17900:	00 
   17901:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17906:	e9 27 ff ff ff       	jmpq   17832 <mbedtls_mpi_div_mpi+0x1a2>
   1790b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17910:	48 8b 45 08          	mov    0x8(%rbp),%rax
   17914:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   17919:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   17920:	01 00 00 00 
   17924:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   1792b:	01 00 00 00 
   1792f:	48 8d 70 02          	lea    0x2(%rax),%rsi
   17933:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   1793a:	00 
   1793b:	48 89 c7             	mov    %rax,%rdi
   1793e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17943:	e8 68 e8 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   17948:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   1794f:	00 
   17950:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17955:	85 c0                	test   %eax,%eax
   17957:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1795c:	41 89 c4             	mov    %eax,%r12d
   1795f:	0f 85 cd fe ff ff    	jne    17832 <mbedtls_mpi_div_mpi+0x1a2>
   17965:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1796a:	31 f6                	xor    %esi,%esi
   1796c:	e8 df eb ff ff       	callq  16550 <mbedtls_mpi_lset>
   17971:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17976:	85 c0                	test   %eax,%eax
   17978:	41 89 c4             	mov    %eax,%r12d
   1797b:	0f 85 b1 fe ff ff    	jne    17832 <mbedtls_mpi_div_mpi+0x1a2>
   17981:	48 8b 45 08          	mov    0x8(%rbp),%rax
   17985:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1798a:	48 8d 70 02          	lea    0x2(%rax),%rsi
   1798e:	e8 1d e8 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   17993:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17998:	85 c0                	test   %eax,%eax
   1799a:	41 89 c4             	mov    %eax,%r12d
   1799d:	0f 85 8f fe ff ff    	jne    17832 <mbedtls_mpi_div_mpi+0x1a2>
   179a3:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   179aa:	00 
   179ab:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   179b2:	00 
   179b3:	e8 48 3b 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   179b8:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   179bd:	83 e0 3f             	and    $0x3f,%eax
   179c0:	48 83 f8 3f          	cmp    $0x3f,%rax
   179c4:	0f 84 c1 02 00 00    	je     17c8b <mbedtls_mpi_div_mpi+0x5fb>
   179ca:	ba 3f 00 00 00       	mov    $0x3f,%edx
   179cf:	4c 89 c7             	mov    %r8,%rdi
   179d2:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   179d7:	48 29 c2             	sub    %rax,%rdx
   179da:	48 89 d6             	mov    %rdx,%rsi
   179dd:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   179e2:	e8 29 ee ff ff       	callq  16810 <mbedtls_mpi_shift_l>
   179e7:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   179ec:	85 c0                	test   %eax,%eax
   179ee:	41 89 c4             	mov    %eax,%r12d
   179f1:	0f 85 3b fe ff ff    	jne    17832 <mbedtls_mpi_div_mpi+0x1a2>
   179f7:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   179fc:	4c 89 f7             	mov    %r14,%rdi
   179ff:	e8 0c ee ff ff       	callq  16810 <mbedtls_mpi_shift_l>
   17a04:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17a09:	85 c0                	test   %eax,%eax
   17a0b:	41 89 c4             	mov    %eax,%r12d
   17a0e:	0f 85 1e fe ff ff    	jne    17832 <mbedtls_mpi_div_mpi+0x1a2>
   17a14:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   17a1b:	00 
   17a1c:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   17a23:	00 
   17a24:	4c 89 f7             	mov    %r14,%rdi
   17a27:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   17a2c:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   17a31:	48 29 c2             	sub    %rax,%rdx
   17a34:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17a39:	48 89 d0             	mov    %rdx,%rax
   17a3c:	48 c1 e0 06          	shl    $0x6,%rax
   17a40:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   17a45:	48 89 c6             	mov    %rax,%rsi
   17a48:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   17a4d:	e8 be ed ff ff       	callq  16810 <mbedtls_mpi_shift_l>
   17a52:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17a57:	85 c0                	test   %eax,%eax
   17a59:	41 89 c4             	mov    %eax,%r12d
   17a5c:	0f 85 d0 fd ff ff    	jne    17832 <mbedtls_mpi_div_mpi+0x1a2>
   17a62:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   17a67:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   17a6c:	4c 89 c3             	mov    %r8,%rbx
   17a6f:	44 89 64 24 30       	mov    %r12d,0x30(%rsp)
   17a74:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   17a7b:	00 
   17a7c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17a81:	49 89 c4             	mov    %rax,%r12
   17a84:	eb 34                	jmp    17aba <mbedtls_mpi_div_mpi+0x42a>
   17a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17a8d:	00 00 00 
   17a90:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17a95:	4c 89 f2             	mov    %r14,%rdx
   17a98:	48 89 de             	mov    %rbx,%rsi
   17a9b:	48 89 df             	mov    %rbx,%rdi
   17a9e:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   17aa5:	00 
   17aa6:	4c 01 e0             	add    %r12,%rax
   17aa9:	48 83 00 01          	addq   $0x1,(%rax)
   17aad:	e8 1e f3 ff ff       	callq  16dd0 <add_sub_mpi>
   17ab2:	85 c0                	test   %eax,%eax
   17ab4:	0f 85 df 01 00 00    	jne    17c99 <mbedtls_mpi_div_mpi+0x609>
   17aba:	4c 89 f6             	mov    %r14,%rsi
   17abd:	48 89 df             	mov    %rbx,%rdi
   17ac0:	e8 6b ef ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   17ac5:	85 c0                	test   %eax,%eax
   17ac7:	79 c7                	jns    17a90 <mbedtls_mpi_div_mpi+0x400>
   17ac9:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   17ad0:	00 
   17ad1:	49 89 d8             	mov    %rbx,%r8
   17ad4:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   17ad9:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
   17ade:	48 85 f6             	test   %rsi,%rsi
   17ae1:	0f 85 d7 03 00 00    	jne    17ebe <mbedtls_mpi_div_mpi+0x82e>
   17ae7:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   17aec:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   17af1:	48 83 e8 01          	sub    $0x1,%rax
   17af5:	48 83 e9 01          	sub    $0x1,%rcx
   17af9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   17afe:	48 39 c8             	cmp    %rcx,%rax
   17b01:	0f 86 de 02 00 00    	jbe    17de5 <mbedtls_mpi_div_mpi+0x755>
   17b07:	48 89 c8             	mov    %rcx,%rax
   17b0a:	48 8d 14 cd 00 00 00 	lea    0x0(,%rcx,8),%rdx
   17b11:	00 
   17b12:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   17b17:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   17b1e:	00 
   17b1f:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   17b24:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   17b29:	48 83 e9 08          	sub    $0x8,%rcx
   17b2d:	44 89 64 24 5c       	mov    %r12d,0x5c(%rsp)
   17b32:	49 89 c4             	mov    %rax,%r12
   17b35:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
   17b3a:	48 89 d5             	mov    %rdx,%rbp
   17b3d:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)
   17b42:	48 89 cb             	mov    %rcx,%rbx
   17b45:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
   17b4a:	4d 89 c7             	mov    %r8,%r15
   17b4d:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
   17b52:	49 89 f5             	mov    %rsi,%r13
   17b55:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   17b5c:	00 
   17b5d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   17b62:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
   17b69:	00 
   17b6a:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
   17b71:	00 
   17b72:	49 89 cb             	mov    %rcx,%r11
   17b75:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   17b7c:	00 
   17b7d:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   17b82:	49 01 fb             	add    %rdi,%r11
   17b85:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   17b8a:	4c 8d 44 39 f8       	lea    -0x8(%rcx,%rdi,1),%r8
   17b8f:	4d 8d 14 19          	lea    (%r9,%rbx,1),%r10
   17b93:	49 8b 33             	mov    (%r11),%rsi
   17b96:	48 8b 14 28          	mov    (%rax,%rbp,1),%rdx
   17b9a:	48 39 d6             	cmp    %rdx,%rsi
   17b9d:	0f 82 01 01 00 00    	jb     17ca4 <mbedtls_mpi_div_mpi+0x614>
   17ba3:	49 c7 02 ff ff ff ff 	movq   $0xffffffffffffffff,(%r10)
   17baa:	31 c0                	xor    %eax,%eax
   17bac:	48 83 7c 24 30 01    	cmpq   $0x1,0x30(%rsp)
   17bb2:	74 0f                	je     17bc3 <mbedtls_mpi_div_mpi+0x533>
   17bb4:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   17bb9:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   17bbe:	48 8b 44 08 f0       	mov    -0x10(%rax,%rcx,1),%rax
   17bc3:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   17bca:	00 
   17bcb:	49 8b 00             	mov    (%r8),%rax
   17bce:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   17bd5:	00 
   17bd6:	49 8b 03             	mov    (%r11),%rax
   17bd9:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   17be0:	00 
   17be1:	49 8b 02             	mov    (%r10),%rax
   17be4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17be8:	49 89 12             	mov    %rdx,(%r10)
   17beb:	eb 64                	jmp    17c51 <mbedtls_mpi_div_mpi+0x5c1>
   17bed:	0f 1f 00             	nopl   (%rax)
   17bf0:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
   17bf7:	00 
   17bf8:	31 c9                	xor    %ecx,%ecx
   17bfa:	4d 85 e4             	test   %r12,%r12
   17bfd:	74 05                	je     17c04 <mbedtls_mpi_div_mpi+0x574>
   17bff:	48 8b 4c 2a f8       	mov    -0x8(%rdx,%rbp,1),%rcx
   17c04:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   17c0b:	00 
   17c0c:	4c 89 f6             	mov    %r14,%rsi
   17c0f:	4c 89 f7             	mov    %r14,%rdi
   17c12:	48 89 08             	mov    %rcx,(%rax)
   17c15:	48 8b 14 2a          	mov    (%rdx,%rbp,1),%rdx
   17c19:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17c1d:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   17c24:	00 
   17c25:	48 8b 14 18          	mov    (%rax,%rbx,1),%rdx
   17c29:	e8 32 f5 ff ff       	callq  17160 <mbedtls_mpi_mul_int>
   17c2e:	85 c0                	test   %eax,%eax
   17c30:	75 35                	jne    17c67 <mbedtls_mpi_div_mpi+0x5d7>
   17c32:	4c 89 ee             	mov    %r13,%rsi
   17c35:	4c 89 f7             	mov    %r14,%rdi
   17c38:	e8 f3 ed ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   17c3d:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
   17c44:	00 
   17c45:	49 8b 14 19          	mov    (%r9,%rbx,1),%rdx
   17c49:	85 c0                	test   %eax,%eax
   17c4b:	0f 8e c8 00 00 00    	jle    17d19 <mbedtls_mpi_div_mpi+0x689>
   17c51:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   17c55:	31 f6                	xor    %esi,%esi
   17c57:	4c 89 f7             	mov    %r14,%rdi
   17c5a:	49 89 04 19          	mov    %rax,(%r9,%rbx,1)
   17c5e:	e8 ed e8 ff ff       	callq  16550 <mbedtls_mpi_lset>
   17c63:	85 c0                	test   %eax,%eax
   17c65:	74 89                	je     17bf0 <mbedtls_mpi_div_mpi+0x560>
   17c67:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
   17c6c:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   17c71:	4d 89 f8             	mov    %r15,%r8
   17c74:	41 89 c4             	mov    %eax,%r12d
   17c77:	e9 b6 fb ff ff       	jmpq   17832 <mbedtls_mpi_div_mpi+0x1a2>
   17c7c:	0f 1f 40 00          	nopl   0x0(%rax)
   17c80:	41 bc f4 ff ff ff    	mov    $0xfffffff4,%r12d
   17c86:	e9 e0 fb ff ff       	jmpq   1786b <mbedtls_mpi_div_mpi+0x1db>
   17c8b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17c92:	00 00 
   17c94:	e9 7b fd ff ff       	jmpq   17a14 <mbedtls_mpi_div_mpi+0x384>
   17c99:	49 89 d8             	mov    %rbx,%r8
   17c9c:	41 89 c4             	mov    %eax,%r12d
   17c9f:	e9 8e fb ff ff       	jmpq   17832 <mbedtls_mpi_div_mpi+0x1a2>
   17ca4:	49 8b 38             	mov    (%r8),%rdi
   17ca7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17cae:	48 85 d2             	test   %rdx,%rdx
   17cb1:	74 5e                	je     17d11 <mbedtls_mpi_div_mpi+0x681>
   17cb3:	31 c9                	xor    %ecx,%ecx
   17cb5:	4c 89 8c 24 88 00 00 	mov    %r9,0x88(%rsp)
   17cbc:	00 
   17cbd:	4c 89 94 24 80 00 00 	mov    %r10,0x80(%rsp)
   17cc4:	00 
   17cc5:	4c 89 5c 24 78       	mov    %r11,0x78(%rsp)
   17cca:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   17ccf:	e8 5c 8a 00 00       	callq  20730 <__udivti3>
   17cd4:	b9 00 00 00 00       	mov    $0x0,%ecx
   17cd9:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   17ce0:	4c 8b 8c 24 88 00 00 	mov    0x88(%rsp),%r9
   17ce7:	00 
   17ce8:	48 89 d7             	mov    %rdx,%rdi
   17ceb:	48 39 c6             	cmp    %rax,%rsi
   17cee:	48 89 c2             	mov    %rax,%rdx
   17cf1:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17cf8:	48 19 f9             	sbb    %rdi,%rcx
   17cfb:	4c 8b 5c 24 78       	mov    0x78(%rsp),%r11
   17d00:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   17d05:	48 0f 43 c2          	cmovae %rdx,%rax
   17d09:	4c 8b 94 24 80 00 00 	mov    0x80(%rsp),%r10
   17d10:	00 
   17d11:	49 89 02             	mov    %rax,(%r10)
   17d14:	e9 91 fe ff ff       	jmpq   17baa <mbedtls_mpi_div_mpi+0x51a>
   17d19:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   17d1e:	e8 3d f4 ff ff       	callq  17160 <mbedtls_mpi_mul_int>
   17d23:	85 c0                	test   %eax,%eax
   17d25:	0f 85 3c ff ff ff    	jne    17c67 <mbedtls_mpi_div_mpi+0x5d7>
   17d2b:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   17d32:	00 
   17d33:	4c 89 f7             	mov    %r14,%rdi
   17d36:	48 89 c6             	mov    %rax,%rsi
   17d39:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17d3e:	e8 cd ea ff ff       	callq  16810 <mbedtls_mpi_shift_l>
   17d43:	85 c0                	test   %eax,%eax
   17d45:	0f 85 1c ff ff ff    	jne    17c67 <mbedtls_mpi_div_mpi+0x5d7>
   17d4b:	83 c9 ff             	or     $0xffffffff,%ecx
   17d4e:	4c 89 f2             	mov    %r14,%rdx
   17d51:	4c 89 fe             	mov    %r15,%rsi
   17d54:	4c 89 ff             	mov    %r15,%rdi
   17d57:	e8 74 f0 ff ff       	callq  16dd0 <add_sub_mpi>
   17d5c:	85 c0                	test   %eax,%eax
   17d5e:	0f 85 03 ff ff ff    	jne    17c67 <mbedtls_mpi_div_mpi+0x5d7>
   17d64:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17d69:	4c 89 ff             	mov    %r15,%rdi
   17d6c:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   17d73:	00 
   17d74:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   17d7b:	00 00 00 00 00 
   17d80:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   17d87:	01 00 00 00 
   17d8b:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   17d92:	00 01 00 00 00 
   17d97:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
   17d9e:	00 
   17d9f:	e8 8c ec ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   17da4:	85 c0                	test   %eax,%eax
   17da6:	0f 88 38 01 00 00    	js     17ee4 <mbedtls_mpi_div_mpi+0x854>
   17dac:	48 83 6c 24 30 01    	subq   $0x1,0x30(%rsp)
   17db2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   17db7:	48 83 eb 08          	sub    $0x8,%rbx
   17dbb:	49 39 c4             	cmp    %rax,%r12
   17dbe:	0f 82 91 fd ff ff    	jb     17b55 <mbedtls_mpi_div_mpi+0x4c5>
   17dc4:	4d 89 f8             	mov    %r15,%r8
   17dc7:	44 8b 64 24 5c       	mov    0x5c(%rsp),%r12d
   17dcc:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
   17dd1:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   17dd6:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   17ddb:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
   17de0:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   17de5:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   17deb:	74 2e                	je     17e1b <mbedtls_mpi_div_mpi+0x78b>
   17ded:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   17df2:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   17df7:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   17dfc:	e8 df e5 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   17e01:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17e06:	85 c0                	test   %eax,%eax
   17e08:	0f 85 50 01 00 00    	jne    17f5e <mbedtls_mpi_div_mpi+0x8ce>
   17e0e:	8b 45 00             	mov    0x0(%rbp),%eax
   17e11:	0f af 03             	imul   (%rbx),%eax
   17e14:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   17e19:	89 01                	mov    %eax,(%rcx)
   17e1b:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   17e20:	0f 84 0c fa ff ff    	je     17832 <mbedtls_mpi_div_mpi+0x1a2>
   17e26:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   17e2d:	00 
   17e2e:	48 85 f6             	test   %rsi,%rsi
   17e31:	0f 85 06 01 00 00    	jne    17f3d <mbedtls_mpi_div_mpi+0x8ad>
   17e37:	48 8b 1c 24          	mov    (%rsp),%rbx
   17e3b:	8b 45 00             	mov    0x0(%rbp),%eax
   17e3e:	4c 89 c6             	mov    %r8,%rsi
   17e41:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   17e46:	48 89 df             	mov    %rbx,%rdi
   17e49:	89 84 24 90 00 00 00 	mov    %eax,0x90(%rsp)
   17e50:	e8 8b e5 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   17e55:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   17e5a:	85 c0                	test   %eax,%eax
   17e5c:	0f 85 fc 00 00 00    	jne    17f5e <mbedtls_mpi_div_mpi+0x8ce>
   17e62:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   17e69:	00 
   17e6a:	4c 89 fe             	mov    %r15,%rsi
   17e6d:	48 89 df             	mov    %rbx,%rdi
   17e70:	4c 89 04 24          	mov    %r8,(%rsp)
   17e74:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   17e7b:	00 00 00 00 00 
   17e80:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   17e87:	01 00 00 00 
   17e8b:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   17e92:	00 01 00 00 00 
   17e97:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
   17e9e:	00 
   17e9f:	e8 8c eb ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   17ea4:	4c 8b 04 24          	mov    (%rsp),%r8
   17ea8:	85 c0                	test   %eax,%eax
   17eaa:	0f 85 82 f9 ff ff    	jne    17832 <mbedtls_mpi_div_mpi+0x1a2>
   17eb0:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   17eb6:	45 31 e4             	xor    %r12d,%r12d
   17eb9:	e9 74 f9 ff ff       	jmpq   17832 <mbedtls_mpi_div_mpi+0x1a2>
   17ebe:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   17ec3:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   17ec8:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   17ecf:	00 
   17ed0:	e8 4b 3a 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   17ed5:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   17eda:	e9 08 fc ff ff       	jmpq   17ae7 <mbedtls_mpi_div_mpi+0x457>
   17edf:	e8 7c b3 fe ff       	callq  3260 <__stack_chk_fail@plt>
   17ee4:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   17ee9:	4c 89 f7             	mov    %r14,%rdi
   17eec:	e8 ef e4 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   17ef1:	85 c0                	test   %eax,%eax
   17ef3:	0f 85 6e fd ff ff    	jne    17c67 <mbedtls_mpi_div_mpi+0x5d7>
   17ef9:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   17efe:	4c 89 f7             	mov    %r14,%rdi
   17f01:	e8 0a e9 ff ff       	callq  16810 <mbedtls_mpi_shift_l>
   17f06:	85 c0                	test   %eax,%eax
   17f08:	0f 85 59 fd ff ff    	jne    17c67 <mbedtls_mpi_div_mpi+0x5d7>
   17f0e:	b9 01 00 00 00       	mov    $0x1,%ecx
   17f13:	4c 89 f2             	mov    %r14,%rdx
   17f16:	4c 89 fe             	mov    %r15,%rsi
   17f19:	4c 89 ff             	mov    %r15,%rdi
   17f1c:	e8 af ee ff ff       	callq  16dd0 <add_sub_mpi>
   17f21:	85 c0                	test   %eax,%eax
   17f23:	0f 85 3e fd ff ff    	jne    17c67 <mbedtls_mpi_div_mpi+0x5d7>
   17f29:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   17f30:	00 
   17f31:	48 01 d8             	add    %rbx,%rax
   17f34:	48 83 28 01          	subq   $0x1,(%rax)
   17f38:	e9 6f fe ff ff       	jmpq   17dac <mbedtls_mpi_div_mpi+0x71c>
   17f3d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   17f42:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   17f49:	00 
   17f4a:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   17f4f:	e8 cc 39 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   17f54:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   17f59:	e9 d9 fe ff ff       	jmpq   17e37 <mbedtls_mpi_div_mpi+0x7a7>
   17f5e:	41 89 c4             	mov    %eax,%r12d
   17f61:	e9 cc f8 ff ff       	jmpq   17832 <mbedtls_mpi_div_mpi+0x1a2>
   17f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17f6d:	00 00 00 

0000000000017f70 <mbedtls_mpi_div_int>:
   17f70:	f3 0f 1e fa          	endbr64 
   17f74:	48 83 ec 38          	sub    $0x38,%rsp
   17f78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17f7f:	00 00 
   17f81:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17f86:	31 c0                	xor    %eax,%eax
   17f88:	b8 01 00 00 00       	mov    $0x1,%eax
   17f8d:	48 85 c9             	test   %rcx,%rcx
   17f90:	79 08                	jns    17f9a <mbedtls_mpi_div_int+0x2a>
   17f92:	48 f7 d9             	neg    %rcx
   17f95:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   17f9a:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   17f9f:	48 89 e1             	mov    %rsp,%rcx
   17fa2:	89 04 24             	mov    %eax,(%rsp)
   17fa5:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   17faa:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   17fb1:	00 00 
   17fb3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17fb8:	e8 d3 f6 ff ff       	callq  17690 <mbedtls_mpi_div_mpi>
   17fbd:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   17fc2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   17fc9:	00 00 
   17fcb:	75 05                	jne    17fd2 <mbedtls_mpi_div_int+0x62>
   17fcd:	48 83 c4 38          	add    $0x38,%rsp
   17fd1:	c3                   	retq   
   17fd2:	e8 89 b2 fe ff       	callq  3260 <__stack_chk_fail@plt>
   17fd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17fde:	00 00 

0000000000017fe0 <mbedtls_mpi_mod_mpi>:
   17fe0:	f3 0f 1e fa          	endbr64 
   17fe4:	41 56                	push   %r14
   17fe6:	49 89 f1             	mov    %rsi,%r9
   17fe9:	41 55                	push   %r13
   17feb:	41 54                	push   %r12
   17fed:	55                   	push   %rbp
   17fee:	48 89 d5             	mov    %rdx,%rbp
   17ff1:	53                   	push   %rbx
   17ff2:	48 89 fb             	mov    %rdi,%rbx
   17ff5:	48 89 d7             	mov    %rdx,%rdi
   17ff8:	48 83 ec 30          	sub    $0x30,%rsp
   17ffc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18003:	00 00 
   18005:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1800a:	31 c0                	xor    %eax,%eax
   1800c:	49 89 e4             	mov    %rsp,%r12
   1800f:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   18014:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1801b:	00 00 
   1801d:	4c 89 e6             	mov    %r12,%rsi
   18020:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   18027:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1802e:	00 00 
   18030:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   18035:	e8 f6 e9 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1803a:	85 c0                	test   %eax,%eax
   1803c:	0f 88 c3 00 00 00    	js     18105 <mbedtls_mpi_mod_mpi+0x125>
   18042:	48 89 e9             	mov    %rbp,%rcx
   18045:	4c 89 ca             	mov    %r9,%rdx
   18048:	48 89 de             	mov    %rbx,%rsi
   1804b:	31 ff                	xor    %edi,%edi
   1804d:	e8 3e f6 ff ff       	callq  17690 <mbedtls_mpi_div_mpi>
   18052:	41 89 c6             	mov    %eax,%r14d
   18055:	85 c0                	test   %eax,%eax
   18057:	74 22                	je     1807b <mbedtls_mpi_mod_mpi+0x9b>
   18059:	e9 82 00 00 00       	jmpq   180e0 <mbedtls_mpi_mod_mpi+0x100>
   1805e:	66 90                	xchg   %ax,%ax
   18060:	b9 01 00 00 00       	mov    $0x1,%ecx
   18065:	48 89 ea             	mov    %rbp,%rdx
   18068:	48 89 de             	mov    %rbx,%rsi
   1806b:	48 89 df             	mov    %rbx,%rdi
   1806e:	e8 5d ed ff ff       	callq  16dd0 <add_sub_mpi>
   18073:	85 c0                	test   %eax,%eax
   18075:	0f 85 85 00 00 00    	jne    18100 <mbedtls_mpi_mod_mpi+0x120>
   1807b:	4c 89 e6             	mov    %r12,%rsi
   1807e:	48 89 df             	mov    %rbx,%rdi
   18081:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   18088:	00 00 
   1808a:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   18091:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   18098:	00 00 
   1809a:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   1809f:	e8 8c e9 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   180a4:	85 c0                	test   %eax,%eax
   180a6:	78 b8                	js     18060 <mbedtls_mpi_mod_mpi+0x80>
   180a8:	eb 1d                	jmp    180c7 <mbedtls_mpi_mod_mpi+0xe7>
   180aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   180b0:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   180b5:	48 89 ea             	mov    %rbp,%rdx
   180b8:	48 89 de             	mov    %rbx,%rsi
   180bb:	48 89 df             	mov    %rbx,%rdi
   180be:	e8 0d ed ff ff       	callq  16dd0 <add_sub_mpi>
   180c3:	85 c0                	test   %eax,%eax
   180c5:	75 39                	jne    18100 <mbedtls_mpi_mod_mpi+0x120>
   180c7:	48 89 ee             	mov    %rbp,%rsi
   180ca:	48 89 df             	mov    %rbx,%rdi
   180cd:	e8 5e e9 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   180d2:	85 c0                	test   %eax,%eax
   180d4:	79 da                	jns    180b0 <mbedtls_mpi_mod_mpi+0xd0>
   180d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   180dd:	00 00 00 
   180e0:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   180e5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   180ec:	00 00 
   180ee:	75 1d                	jne    1810d <mbedtls_mpi_mod_mpi+0x12d>
   180f0:	48 83 c4 30          	add    $0x30,%rsp
   180f4:	44 89 f0             	mov    %r14d,%eax
   180f7:	5b                   	pop    %rbx
   180f8:	5d                   	pop    %rbp
   180f9:	41 5c                	pop    %r12
   180fb:	41 5d                	pop    %r13
   180fd:	41 5e                	pop    %r14
   180ff:	c3                   	retq   
   18100:	41 89 c6             	mov    %eax,%r14d
   18103:	eb db                	jmp    180e0 <mbedtls_mpi_mod_mpi+0x100>
   18105:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
   1810b:	eb d3                	jmp    180e0 <mbedtls_mpi_mod_mpi+0x100>
   1810d:	e8 4e b1 fe ff       	callq  3260 <__stack_chk_fail@plt>
   18112:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   18119:	00 00 00 00 
   1811d:	0f 1f 00             	nopl   (%rax)

0000000000018120 <mbedtls_mpi_mod_int>:
   18120:	f3 0f 1e fa          	endbr64 
   18124:	49 89 d0             	mov    %rdx,%r8
   18127:	48 85 d2             	test   %rdx,%rdx
   1812a:	0f 84 8c 00 00 00    	je     181bc <mbedtls_mpi_mod_int+0x9c>
   18130:	0f 88 8c 00 00 00    	js     181c2 <mbedtls_mpi_mod_int+0xa2>
   18136:	48 83 fa 01          	cmp    $0x1,%rdx
   1813a:	74 64                	je     181a0 <mbedtls_mpi_mod_int+0x80>
   1813c:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   18140:	4d 85 c9             	test   %r9,%r9
   18143:	74 5b                	je     181a0 <mbedtls_mpi_mod_int+0x80>
   18145:	4c 8b 56 10          	mov    0x10(%rsi),%r10
   18149:	31 d2                	xor    %edx,%edx
   1814b:	49 83 f8 02          	cmp    $0x2,%r8
   1814f:	74 5f                	je     181b0 <mbedtls_mpi_mod_int+0x90>
   18151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18158:	4b 8b 4c ca f8       	mov    -0x8(%r10,%r9,8),%rcx
   1815d:	48 c1 e2 20          	shl    $0x20,%rdx
   18161:	48 89 c8             	mov    %rcx,%rax
   18164:	48 c1 e8 20          	shr    $0x20,%rax
   18168:	48 09 d0             	or     %rdx,%rax
   1816b:	31 d2                	xor    %edx,%edx
   1816d:	49 f7 f0             	div    %r8
   18170:	89 c8                	mov    %ecx,%eax
   18172:	48 c1 e2 20          	shl    $0x20,%rdx
   18176:	48 09 d0             	or     %rdx,%rax
   18179:	31 d2                	xor    %edx,%edx
   1817b:	49 f7 f0             	div    %r8
   1817e:	49 83 e9 01          	sub    $0x1,%r9
   18182:	75 d4                	jne    18158 <mbedtls_mpi_mod_int+0x38>
   18184:	8b 06                	mov    (%rsi),%eax
   18186:	85 c0                	test   %eax,%eax
   18188:	79 0a                	jns    18194 <mbedtls_mpi_mod_int+0x74>
   1818a:	49 29 d0             	sub    %rdx,%r8
   1818d:	48 85 d2             	test   %rdx,%rdx
   18190:	49 0f 45 d0          	cmovne %r8,%rdx
   18194:	48 89 17             	mov    %rdx,(%rdi)
   18197:	31 c0                	xor    %eax,%eax
   18199:	c3                   	retq   
   1819a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   181a0:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   181a7:	31 c0                	xor    %eax,%eax
   181a9:	c3                   	retq   
   181aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   181b0:	49 8b 02             	mov    (%r10),%rax
   181b3:	83 e0 01             	and    $0x1,%eax
   181b6:	48 89 07             	mov    %rax,(%rdi)
   181b9:	31 c0                	xor    %eax,%eax
   181bb:	c3                   	retq   
   181bc:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
   181c1:	c3                   	retq   
   181c2:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   181c7:	c3                   	retq   
   181c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   181cf:	00 

00000000000181d0 <mbedtls_mpi_write_string>:
   181d0:	f3 0f 1e fa          	endbr64 
   181d4:	41 57                	push   %r15
   181d6:	41 56                	push   %r14
   181d8:	41 55                	push   %r13
   181da:	4c 63 ee             	movslq %esi,%r13
   181dd:	41 54                	push   %r12
   181df:	55                   	push   %rbp
   181e0:	53                   	push   %rbx
   181e1:	48 83 ec 78          	sub    $0x78,%rsp
   181e5:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   181ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   181f1:	00 00 
   181f3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   181f8:	31 c0                	xor    %eax,%eax
   181fa:	41 8d 45 fe          	lea    -0x2(%r13),%eax
   181fe:	83 f8 0e             	cmp    $0xe,%eax
   18201:	0f 87 48 02 00 00    	ja     1844f <mbedtls_mpi_write_string+0x27f>
   18207:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1820b:	48 89 fd             	mov    %rdi,%rbp
   1820e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   18212:	48 89 d3             	mov    %rdx,%rbx
   18215:	49 89 ce             	mov    %rcx,%r14
   18218:	e8 e3 32 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   1821d:	48 89 c2             	mov    %rax,%rdx
   18220:	48 d1 ea             	shr    %rdx
   18223:	41 83 fd 03          	cmp    $0x3,%r13d
   18227:	48 0f 4f c2          	cmovg  %rdx,%rax
   1822b:	48 89 c2             	mov    %rax,%rdx
   1822e:	48 d1 ea             	shr    %rdx
   18231:	41 83 fd 10          	cmp    $0x10,%r13d
   18235:	48 0f 44 c2          	cmove  %rdx,%rax
   18239:	48 83 c0 04          	add    $0x4,%rax
   1823d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   18241:	4c 39 f0             	cmp    %r14,%rax
   18244:	0f 87 0f 02 00 00    	ja     18459 <mbedtls_mpi_write_string+0x289>
   1824a:	83 7d 00 ff          	cmpl   $0xffffffff,0x0(%rbp)
   1824e:	49 89 df             	mov    %rbx,%r15
   18251:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   18258:	00 
   18259:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   18260:	00 00 
   18262:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   18269:	00 00 
   1826b:	75 0b                	jne    18278 <mbedtls_mpi_write_string+0xa8>
   1826d:	c6 03 2d             	movb   $0x2d,(%rbx)
   18270:	4c 8d 7b 01          	lea    0x1(%rbx),%r15
   18274:	49 83 ee 01          	sub    $0x1,%r14
   18278:	41 83 fd 10          	cmp    $0x10,%r13d
   1827c:	0f 85 ee 00 00 00    	jne    18370 <mbedtls_mpi_write_string+0x1a0>
   18282:	4c 8b 5d 08          	mov    0x8(%rbp),%r11
   18286:	4d 85 db             	test   %r11,%r11
   18289:	0f 84 8b 00 00 00    	je     1831a <mbedtls_mpi_write_string+0x14a>
   1828f:	4e 8d 0c dd f8 ff ff 	lea    -0x8(,%r11,8),%r9
   18296:	ff 
   18297:	45 31 ed             	xor    %r13d,%r13d
   1829a:	48 8d 3d bf cf 00 00 	lea    0xcfbf(%rip),%rdi        # 25260 <aria_sb1+0x120>
   182a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   182a8:	be 07 00 00 00       	mov    $0x7,%esi
   182ad:	4d 8d 53 01          	lea    0x1(%r11),%r10
   182b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   182b8:	48 8b 45 10          	mov    0x10(%rbp),%rax
   182bc:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
   182c3:	4a 8b 04 08          	mov    (%rax,%r9,1),%rax
   182c7:	48 d3 e8             	shr    %cl,%rax
   182ca:	89 c2                	mov    %eax,%edx
   182cc:	81 e2 ff 00 00 00    	and    $0xff,%edx
   182d2:	75 0f                	jne    182e3 <mbedtls_mpi_write_string+0x113>
   182d4:	4d 85 ed             	test   %r13,%r13
   182d7:	75 0a                	jne    182e3 <mbedtls_mpi_write_string+0x113>
   182d9:	49 8d 0c 32          	lea    (%r10,%rsi,1),%rcx
   182dd:	48 83 f9 02          	cmp    $0x2,%rcx
   182e1:	75 23                	jne    18306 <mbedtls_mpi_write_string+0x136>
   182e3:	c1 fa 04             	sar    $0x4,%edx
   182e6:	83 e0 0f             	and    $0xf,%eax
   182e9:	49 83 c7 02          	add    $0x2,%r15
   182ed:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   182f3:	48 63 d2             	movslq %edx,%rdx
   182f6:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   182fa:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
   182fe:	41 88 47 ff          	mov    %al,-0x1(%r15)
   18302:	41 88 57 fe          	mov    %dl,-0x2(%r15)
   18306:	48 83 ee 01          	sub    $0x1,%rsi
   1830a:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
   1830e:	75 a8                	jne    182b8 <mbedtls_mpi_write_string+0xe8>
   18310:	49 83 e9 08          	sub    $0x8,%r9
   18314:	49 83 eb 01          	sub    $0x1,%r11
   18318:	75 8e                	jne    182a8 <mbedtls_mpi_write_string+0xd8>
   1831a:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   1831f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18324:	4d 8d 47 01          	lea    0x1(%r15),%r8
   18328:	41 c6 07 00          	movb   $0x0,(%r15)
   1832c:	49 29 d8             	sub    %rbx,%r8
   1832f:	4c 89 00             	mov    %r8,(%rax)
   18332:	31 c0                	xor    %eax,%eax
   18334:	4c 89 e7             	mov    %r12,%rdi
   18337:	89 44 24 08          	mov    %eax,0x8(%rsp)
   1833b:	e8 10 de ff ff       	callq  16150 <mbedtls_mpi_free>
   18340:	8b 44 24 08          	mov    0x8(%rsp),%eax
   18344:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   18349:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   18350:	00 00 
   18352:	0f 85 13 01 00 00    	jne    1846b <mbedtls_mpi_write_string+0x29b>
   18358:	48 83 c4 78          	add    $0x78,%rsp
   1835c:	5b                   	pop    %rbx
   1835d:	5d                   	pop    %rbp
   1835e:	41 5c                	pop    %r12
   18360:	41 5d                	pop    %r13
   18362:	41 5e                	pop    %r14
   18364:	41 5f                	pop    %r15
   18366:	c3                   	retq   
   18367:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1836e:	00 00 
   18370:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   18375:	48 89 ee             	mov    %rbp,%rsi
   18378:	4c 89 e7             	mov    %r12,%rdi
   1837b:	e8 60 e0 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   18380:	85 c0                	test   %eax,%eax
   18382:	75 b0                	jne    18334 <mbedtls_mpi_write_string+0x164>
   18384:	83 7c 24 20 ff       	cmpl   $0xffffffff,0x20(%rsp)
   18389:	75 08                	jne    18393 <mbedtls_mpi_write_string+0x1c3>
   1838b:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   18392:	00 
   18393:	4d 01 fe             	add    %r15,%r14
   18396:	4c 89 f5             	mov    %r14,%rbp
   18399:	e9 85 00 00 00       	jmpq   18423 <mbedtls_mpi_write_string+0x253>
   1839e:	66 90                	xchg   %ax,%ax
   183a0:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   183a5:	4c 89 ea             	mov    %r13,%rdx
   183a8:	4c 89 e6             	mov    %r12,%rsi
   183ab:	e8 70 fd ff ff       	callq  18120 <mbedtls_mpi_mod_int>
   183b0:	85 c0                	test   %eax,%eax
   183b2:	75 80                	jne    18334 <mbedtls_mpi_write_string+0x164>
   183b4:	31 f6                	xor    %esi,%esi
   183b6:	4c 89 e9             	mov    %r13,%rcx
   183b9:	4c 89 e2             	mov    %r12,%rdx
   183bc:	4c 89 e7             	mov    %r12,%rdi
   183bf:	e8 ac fb ff ff       	callq  17f70 <mbedtls_mpi_div_int>
   183c4:	85 c0                	test   %eax,%eax
   183c6:	0f 85 68 ff ff ff    	jne    18334 <mbedtls_mpi_write_string+0x164>
   183cc:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   183d1:	48 83 ed 01          	sub    $0x1,%rbp
   183d5:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   183da:	4c 89 e7             	mov    %r12,%rdi
   183dd:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   183e4:	00 00 
   183e6:	48 83 fa 09          	cmp    $0x9,%rdx
   183ea:	8d 4a 30             	lea    0x30(%rdx),%ecx
   183ed:	8d 42 37             	lea    0x37(%rdx),%eax
   183f0:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   183f7:	00 
   183f8:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   183ff:	00 00 
   18401:	0f 46 c1             	cmovbe %ecx,%eax
   18404:	88 45 00             	mov    %al,0x0(%rbp)
   18407:	4c 89 f0             	mov    %r14,%rax
   1840a:	48 29 e8             	sub    %rbp,%rax
   1840d:	49 89 c3             	mov    %rax,%r11
   18410:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   18415:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1841a:	e8 11 e6 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1841f:	85 c0                	test   %eax,%eax
   18421:	74 13                	je     18436 <mbedtls_mpi_write_string+0x266>
   18423:	4c 39 fd             	cmp    %r15,%rbp
   18426:	0f 85 74 ff ff ff    	jne    183a0 <mbedtls_mpi_write_string+0x1d0>
   1842c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   18431:	e9 fe fe ff ff       	jmpq   18334 <mbedtls_mpi_write_string+0x164>
   18436:	4d 89 de             	mov    %r11,%r14
   18439:	4c 89 ff             	mov    %r15,%rdi
   1843c:	4c 89 da             	mov    %r11,%rdx
   1843f:	48 89 ee             	mov    %rbp,%rsi
   18442:	e8 09 af fe ff       	callq  3350 <memmove@plt>
   18447:	4d 01 f7             	add    %r14,%r15
   1844a:	e9 d0 fe ff ff       	jmpq   1831f <mbedtls_mpi_write_string+0x14f>
   1844f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18454:	e9 eb fe ff ff       	jmpq   18344 <mbedtls_mpi_write_string+0x174>
   18459:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1845e:	48 89 03             	mov    %rax,(%rbx)
   18461:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   18466:	e9 d9 fe ff ff       	jmpq   18344 <mbedtls_mpi_write_string+0x174>
   1846b:	e8 f0 ad fe ff       	callq  3260 <__stack_chk_fail@plt>

0000000000018470 <mbedtls_mpi_write_file>:
   18470:	f3 0f 1e fa          	endbr64 
   18474:	41 57                	push   %r15
   18476:	41 56                	push   %r14
   18478:	41 55                	push   %r13
   1847a:	41 54                	push   %r12
   1847c:	55                   	push   %rbp
   1847d:	53                   	push   %rbx
   1847e:	48 81 ec d8 09 00 00 	sub    $0x9d8,%rsp
   18485:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1848c:	00 00 
   1848e:	48 89 84 24 c8 09 00 	mov    %rax,0x9c8(%rsp)
   18495:	00 
   18496:	31 c0                	xor    %eax,%eax
   18498:	8d 42 fe             	lea    -0x2(%rdx),%eax
   1849b:	83 f8 0e             	cmp    $0xe,%eax
   1849e:	0f 87 3c 01 00 00    	ja     185e0 <mbedtls_mpi_write_file+0x170>
   184a4:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   184a9:	31 c0                	xor    %eax,%eax
   184ab:	49 89 fe             	mov    %rdi,%r14
   184ae:	49 89 cc             	mov    %rcx,%r12
   184b1:	48 89 ef             	mov    %rbp,%rdi
   184b4:	b9 36 01 00 00       	mov    $0x136,%ecx
   184b9:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   184be:	49 89 f1             	mov    %rsi,%r9
   184c1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   184c4:	89 d6                	mov    %edx,%esi
   184c6:	b9 b2 09 00 00       	mov    $0x9b2,%ecx
   184cb:	48 89 ea             	mov    %rbp,%rdx
   184ce:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   184d4:	4c 89 cf             	mov    %r9,%rdi
   184d7:	e8 f4 fc ff ff       	callq  181d0 <mbedtls_mpi_write_string>
   184dc:	41 89 c5             	mov    %eax,%r13d
   184df:	85 c0                	test   %eax,%eax
   184e1:	0f 85 91 00 00 00    	jne    18578 <mbedtls_mpi_write_file+0x108>
   184e7:	4d 85 f6             	test   %r14,%r14
   184ea:	0f 84 b0 00 00 00    	je     185a0 <mbedtls_mpi_write_file+0x130>
   184f0:	4c 89 f7             	mov    %r14,%rdi
   184f3:	e8 58 ad fe ff       	callq  3250 <strlen@plt>
   184f8:	49 89 c7             	mov    %rax,%r15
   184fb:	48 89 eb             	mov    %rbp,%rbx
   184fe:	8b 13                	mov    (%rbx),%edx
   18500:	48 83 c3 04          	add    $0x4,%rbx
   18504:	8d 82 ff fe fe fe    	lea    -0x1010101(%rdx),%eax
   1850a:	f7 d2                	not    %edx
   1850c:	21 d0                	and    %edx,%eax
   1850e:	25 80 80 80 80       	and    $0x80808080,%eax
   18513:	74 e9                	je     184fe <mbedtls_mpi_write_file+0x8e>
   18515:	89 c2                	mov    %eax,%edx
   18517:	c1 ea 10             	shr    $0x10,%edx
   1851a:	a9 80 80 00 00       	test   $0x8080,%eax
   1851f:	0f 44 c2             	cmove  %edx,%eax
   18522:	48 8d 53 02          	lea    0x2(%rbx),%rdx
   18526:	48 0f 44 da          	cmove  %rdx,%rbx
   1852a:	89 c1                	mov    %eax,%ecx
   1852c:	00 c1                	add    %al,%cl
   1852e:	48 83 db 03          	sbb    $0x3,%rbx
   18532:	48 29 eb             	sub    %rbp,%rbx
   18535:	c6 44 1c 10 0d       	movb   $0xd,0x10(%rsp,%rbx,1)
   1853a:	c6 44 1c 11 0a       	movb   $0xa,0x11(%rsp,%rbx,1)
   1853f:	4d 85 e4             	test   %r12,%r12
   18542:	74 6c                	je     185b0 <mbedtls_mpi_write_file+0x140>
   18544:	4c 89 e1             	mov    %r12,%rcx
   18547:	4c 89 fa             	mov    %r15,%rdx
   1854a:	be 01 00 00 00       	mov    $0x1,%esi
   1854f:	4c 89 f7             	mov    %r14,%rdi
   18552:	e8 19 ae fe ff       	callq  3370 <fwrite@plt>
   18557:	4c 39 f8             	cmp    %r15,%rax
   1855a:	75 74                	jne    185d0 <mbedtls_mpi_write_file+0x160>
   1855c:	48 83 c3 02          	add    $0x2,%rbx
   18560:	4c 89 e1             	mov    %r12,%rcx
   18563:	be 01 00 00 00       	mov    $0x1,%esi
   18568:	48 89 ef             	mov    %rbp,%rdi
   1856b:	48 89 da             	mov    %rbx,%rdx
   1856e:	e8 fd ad fe ff       	callq  3370 <fwrite@plt>
   18573:	48 39 d8             	cmp    %rbx,%rax
   18576:	75 58                	jne    185d0 <mbedtls_mpi_write_file+0x160>
   18578:	48 8b 84 24 c8 09 00 	mov    0x9c8(%rsp),%rax
   1857f:	00 
   18580:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   18587:	00 00 
   18589:	75 5d                	jne    185e8 <mbedtls_mpi_write_file+0x178>
   1858b:	48 81 c4 d8 09 00 00 	add    $0x9d8,%rsp
   18592:	44 89 e8             	mov    %r13d,%eax
   18595:	5b                   	pop    %rbx
   18596:	5d                   	pop    %rbp
   18597:	41 5c                	pop    %r12
   18599:	41 5d                	pop    %r13
   1859b:	41 5e                	pop    %r14
   1859d:	41 5f                	pop    %r15
   1859f:	c3                   	retq   
   185a0:	45 31 ff             	xor    %r15d,%r15d
   185a3:	4c 8d 35 27 cd 00 00 	lea    0xcd27(%rip),%r14        # 252d1 <aria_sb1+0x191>
   185aa:	e9 4c ff ff ff       	jmpq   184fb <mbedtls_mpi_write_file+0x8b>
   185af:	90                   	nop
   185b0:	48 89 e9             	mov    %rbp,%rcx
   185b3:	4c 89 f2             	mov    %r14,%rdx
   185b6:	48 8d 35 b4 cc 00 00 	lea    0xccb4(%rip),%rsi        # 25271 <aria_sb1+0x131>
   185bd:	31 c0                	xor    %eax,%eax
   185bf:	bf 01 00 00 00       	mov    $0x1,%edi
   185c4:	e8 77 ad fe ff       	callq  3340 <__printf_chk@plt>
   185c9:	eb ad                	jmp    18578 <mbedtls_mpi_write_file+0x108>
   185cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   185d0:	41 bd fe ff ff ff    	mov    $0xfffffffe,%r13d
   185d6:	eb a0                	jmp    18578 <mbedtls_mpi_write_file+0x108>
   185d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   185df:	00 
   185e0:	41 bd fc ff ff ff    	mov    $0xfffffffc,%r13d
   185e6:	eb 90                	jmp    18578 <mbedtls_mpi_write_file+0x108>
   185e8:	e8 73 ac fe ff       	callq  3260 <__stack_chk_fail@plt>
   185ed:	0f 1f 00             	nopl   (%rax)

00000000000185f0 <mpi_check_small_factors.part.0>:
   185f0:	41 55                	push   %r13
   185f2:	41 54                	push   %r12
   185f4:	41 bc 03 00 00 00    	mov    $0x3,%r12d
   185fa:	55                   	push   %rbp
   185fb:	48 89 fd             	mov    %rdi,%rbp
   185fe:	53                   	push   %rbx
   185ff:	48 8d 1d 1e d1 00 00 	lea    0xd11e(%rip),%rbx        # 25724 <small_prime+0x4>
   18606:	48 83 ec 18          	sub    $0x18,%rsp
   1860a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18611:	00 00 
   18613:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18618:	31 c0                	xor    %eax,%eax
   1861a:	49 89 e5             	mov    %rsp,%r13
   1861d:	eb 26                	jmp    18645 <mpi_check_small_factors.part.0+0x55>
   1861f:	90                   	nop
   18620:	4c 89 e2             	mov    %r12,%rdx
   18623:	48 89 ee             	mov    %rbp,%rsi
   18626:	4c 89 ef             	mov    %r13,%rdi
   18629:	e8 f2 fa ff ff       	callq  18120 <mbedtls_mpi_mod_int>
   1862e:	85 c0                	test   %eax,%eax
   18630:	75 27                	jne    18659 <mpi_check_small_factors.part.0+0x69>
   18632:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   18637:	74 3f                	je     18678 <mpi_check_small_factors.part.0+0x88>
   18639:	4c 63 23             	movslq (%rbx),%r12
   1863c:	48 83 c3 04          	add    $0x4,%rbx
   18640:	45 85 e4             	test   %r12d,%r12d
   18643:	7e 14                	jle    18659 <mpi_check_small_factors.part.0+0x69>
   18645:	4c 89 e6             	mov    %r12,%rsi
   18648:	48 89 ef             	mov    %rbp,%rdi
   1864b:	e8 d0 e4 ff ff       	callq  16b20 <mbedtls_mpi_cmp_int>
   18650:	85 c0                	test   %eax,%eax
   18652:	7f cc                	jg     18620 <mpi_check_small_factors.part.0+0x30>
   18654:	b8 01 00 00 00       	mov    $0x1,%eax
   18659:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1865e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   18665:	00 00 
   18667:	75 16                	jne    1867f <mpi_check_small_factors.part.0+0x8f>
   18669:	48 83 c4 18          	add    $0x18,%rsp
   1866d:	5b                   	pop    %rbx
   1866e:	5d                   	pop    %rbp
   1866f:	41 5c                	pop    %r12
   18671:	41 5d                	pop    %r13
   18673:	c3                   	retq   
   18674:	0f 1f 40 00          	nopl   0x0(%rax)
   18678:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1867d:	eb da                	jmp    18659 <mpi_check_small_factors.part.0+0x69>
   1867f:	e8 dc ab fe ff       	callq  3260 <__stack_chk_fail@plt>
   18684:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1868b:	00 00 00 00 
   1868f:	90                   	nop

0000000000018690 <mbedtls_mpi_exp_mod>:
   18690:	f3 0f 1e fa          	endbr64 
   18694:	41 57                	push   %r15
   18696:	41 56                	push   %r14
   18698:	41 55                	push   %r13
   1869a:	49 89 d5             	mov    %rdx,%r13
   1869d:	41 54                	push   %r12
   1869f:	55                   	push   %rbp
   186a0:	48 89 cd             	mov    %rcx,%rbp
   186a3:	53                   	push   %rbx
   186a4:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
   186ab:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   186b0:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
   186b7:	00 
   186b8:	48 89 cf             	mov    %rcx,%rdi
   186bb:	4c 8d b4 24 30 01 00 	lea    0x130(%rsp),%r14
   186c2:	00 
   186c3:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   186c8:	4c 89 fe             	mov    %r15,%rsi
   186cb:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   186d0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   186d7:	00 00 
   186d9:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
   186e0:	00 
   186e1:	31 c0                	xor    %eax,%eax
   186e3:	4c 89 b4 24 20 01 00 	mov    %r14,0x120(%rsp)
   186ea:	00 
   186eb:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   186f2:	00 00 00 00 00 
   186f7:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   186fe:	01 00 00 00 
   18702:	48 c7 84 24 18 01 00 	movq   $0x1,0x118(%rsp)
   18709:	00 01 00 00 00 
   1870e:	e8 1d e3 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   18713:	85 c0                	test   %eax,%eax
   18715:	0f 8e b5 05 00 00    	jle    18cd0 <mbedtls_mpi_exp_mod+0x640>
   1871b:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1871f:	48 8b 00             	mov    (%rax),%rax
   18722:	83 e0 01             	and    $0x1,%eax
   18725:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1872a:	49 89 c4             	mov    %rax,%r12
   1872d:	0f 84 9d 05 00 00    	je     18cd0 <mbedtls_mpi_exp_mod+0x640>
   18733:	4c 89 fe             	mov    %r15,%rsi
   18736:	4c 89 ef             	mov    %r13,%rdi
   18739:	e8 f2 e2 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1873e:	85 c0                	test   %eax,%eax
   18740:	0f 88 8a 05 00 00    	js     18cd0 <mbedtls_mpi_exp_mod+0x640>
   18746:	49 8b 75 08          	mov    0x8(%r13),%rsi
   1874a:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   1874e:	e8 ad 2d 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   18753:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
   18759:	0f 87 71 05 00 00    	ja     18cd0 <mbedtls_mpi_exp_mod+0x640>
   1875f:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   18763:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   18767:	e8 94 2d 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   1876c:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
   18772:	0f 87 58 05 00 00    	ja     18cd0 <mbedtls_mpi_exp_mod+0x640>
   18778:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1877c:	bb 02 00 00 00       	mov    $0x2,%ebx
   18781:	e8 ba 35 00 00       	callq  1bd40 <mbedtls_mpi_core_montmul_init>
   18786:	b9 0c 00 00 00       	mov    $0xc,%ecx
   1878b:	4c 89 f7             	mov    %r14,%rdi
   1878e:	49 8b 75 08          	mov    0x8(%r13),%rsi
   18792:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   18797:	31 c0                	xor    %eax,%eax
   18799:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1879c:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   187a0:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   187a7:	01 00 00 00 
   187ab:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   187b2:	00 00 00 00 00 
   187b7:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   187be:	00 00 00 00 00 
   187c3:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   187ca:	01 00 00 00 
   187ce:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   187d5:	00 00 00 00 00 
   187da:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   187e1:	00 00 00 00 00 
   187e6:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   187ed:	01 00 00 00 
   187f1:	48 c7 84 24 18 01 00 	movq   $0x0,0x118(%rsp)
   187f8:	00 00 00 00 00 
   187fd:	48 c7 84 24 20 01 00 	movq   $0x0,0x120(%rsp)
   18804:	00 00 00 00 00 
   18809:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   18810:	01 00 00 00 
   18814:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1881b:	00 00 00 00 00 
   18820:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   18827:	00 00 00 00 00 
   1882c:	e8 cf 2c 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   18831:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   18836:	4c 89 f7             	mov    %r14,%rdi
   18839:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   18840:	01 00 00 00 
   18844:	48 c7 84 24 38 01 00 	movq   $0x0,0x138(%rsp)
   1884b:	00 00 00 00 00 
   18850:	48 83 f8 17          	cmp    $0x17,%rax
   18854:	48 c7 84 24 40 01 00 	movq   $0x0,0x140(%rsp)
   1885b:	00 00 00 00 00 
   18860:	49 0f 46 dc          	cmovbe %r12,%rbx
   18864:	48 83 f8 18          	cmp    $0x18,%rax
   18868:	19 d2                	sbb    %edx,%edx
   1886a:	83 c2 02             	add    $0x2,%edx
   1886d:	48 83 f8 18          	cmp    $0x18,%rax
   18871:	4d 19 e4             	sbb    %r12,%r12
   18874:	89 54 24 58          	mov    %edx,0x58(%rsp)
   18878:	e8 63 db ff ff       	callq  163e0 <mbedtls_mpi_copy>
   1887d:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18881:	4c 89 f7             	mov    %r14,%rdi
   18884:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
   18888:	49 83 c4 04          	add    $0x4,%r12
   1888c:	48 8d 70 01          	lea    0x1(%rax),%rsi
   18890:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   18895:	e8 16 d9 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   1889a:	89 04 24             	mov    %eax,(%rsp)
   1889d:	85 c0                	test   %eax,%eax
   1889f:	0f 84 bb 00 00 00    	je     18960 <mbedtls_mpi_exp_mod+0x2d0>
   188a5:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   188ac:	00 
   188ad:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   188b2:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   188b9:	00 
   188ba:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   188bf:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   188c6:	00 
   188c7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   188cc:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
   188d0:	49 8d 2c c6          	lea    (%r14,%rax,8),%rbp
   188d4:	48 89 ef             	mov    %rbp,%rdi
   188d7:	48 83 c3 01          	add    $0x1,%rbx
   188db:	48 83 c5 18          	add    $0x18,%rbp
   188df:	e8 6c d8 ff ff       	callq  16150 <mbedtls_mpi_free>
   188e4:	4c 39 e3             	cmp    %r12,%rbx
   188e7:	72 eb                	jb     188d4 <mbedtls_mpi_exp_mod+0x244>
   188e9:	4c 89 f7             	mov    %r14,%rdi
   188ec:	e8 5f d8 ff ff       	callq  16150 <mbedtls_mpi_free>
   188f1:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   188f6:	e8 55 d8 ff ff       	callq  16150 <mbedtls_mpi_free>
   188fb:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   18900:	e8 4b d8 ff ff       	callq  16150 <mbedtls_mpi_free>
   18905:	4c 89 ff             	mov    %r15,%rdi
   18908:	e8 43 d8 ff ff       	callq  16150 <mbedtls_mpi_free>
   1890d:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18912:	e8 39 d8 ff ff       	callq  16150 <mbedtls_mpi_free>
   18917:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1891c:	48 85 c0             	test   %rax,%rax
   1891f:	0f 84 8b 00 00 00    	je     189b0 <mbedtls_mpi_exp_mod+0x320>
   18925:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   1892a:	0f 84 80 00 00 00    	je     189b0 <mbedtls_mpi_exp_mod+0x320>
   18930:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
   18937:	00 
   18938:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1893f:	00 00 
   18941:	0f 85 de 07 00 00    	jne    19125 <mbedtls_mpi_exp_mod+0xa95>
   18947:	8b 04 24             	mov    (%rsp),%eax
   1894a:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
   18951:	5b                   	pop    %rbx
   18952:	5d                   	pop    %rbp
   18953:	41 5c                	pop    %r12
   18955:	41 5d                	pop    %r13
   18957:	41 5e                	pop    %r14
   18959:	41 5f                	pop    %r15
   1895b:	c3                   	retq   
   1895c:	0f 1f 40 00          	nopl   0x0(%rax)
   18960:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   18965:	48 8d bc 24 48 01 00 	lea    0x148(%rsp),%rdi
   1896c:	00 
   1896d:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   18972:	e8 39 d8 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   18977:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1897c:	85 c0                	test   %eax,%eax
   1897e:	89 04 24             	mov    %eax,(%rsp)
   18981:	74 45                	je     189c8 <mbedtls_mpi_exp_mod+0x338>
   18983:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   1898a:	00 
   1898b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18990:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18997:	00 
   18998:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1899d:	4c 39 e3             	cmp    %r12,%rbx
   189a0:	0f 83 43 ff ff ff    	jae    188e9 <mbedtls_mpi_exp_mod+0x259>
   189a6:	e9 21 ff ff ff       	jmpq   188cc <mbedtls_mpi_exp_mod+0x23c>
   189ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   189b0:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
   189b7:	00 
   189b8:	e8 93 d7 ff ff       	callq  16150 <mbedtls_mpi_free>
   189bd:	e9 6e ff ff ff       	jmpq   18930 <mbedtls_mpi_exp_mod+0x2a0>
   189c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   189c8:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   189cf:	00 
   189d0:	48 01 f6             	add    %rsi,%rsi
   189d3:	48 89 c7             	mov    %rax,%rdi
   189d6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   189db:	e8 d0 d7 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   189e0:	89 04 24             	mov    %eax,(%rsp)
   189e3:	85 c0                	test   %eax,%eax
   189e5:	0f 85 2d 02 00 00    	jne    18c18 <mbedtls_mpi_exp_mod+0x588>
   189eb:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   189f0:	8b 00                	mov    (%rax),%eax
   189f2:	89 44 24 64          	mov    %eax,0x64(%rsp)
   189f6:	83 f8 ff             	cmp    $0xffffffff,%eax
   189f9:	0f 84 fe 02 00 00    	je     18cfd <mbedtls_mpi_exp_mod+0x66d>
   189ff:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18a04:	48 85 c0             	test   %rax,%rax
   18a07:	0f 84 23 02 00 00    	je     18c30 <mbedtls_mpi_exp_mod+0x5a0>
   18a0d:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   18a12:	0f 84 18 02 00 00    	je     18c30 <mbedtls_mpi_exp_mod+0x5a0>
   18a18:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18a1d:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   18a21:	48 8b 40 10          	mov    0x10(%rax),%rax
   18a25:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   18a2c:	00 
   18a2d:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18a31:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   18a38:	00 
   18a39:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   18a3e:	48 89 ee             	mov    %rbp,%rsi
   18a41:	e8 ea df ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   18a46:	85 c0                	test   %eax,%eax
   18a48:	0f 88 aa 01 00 00    	js     18bf8 <mbedtls_mpi_exp_mod+0x568>
   18a4e:	48 89 fe             	mov    %rdi,%rsi
   18a51:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18a56:	48 89 ea             	mov    %rbp,%rdx
   18a59:	e8 82 f5 ff ff       	callq  17fe0 <mbedtls_mpi_mod_mpi>
   18a5e:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18a65:	00 
   18a66:	89 04 24             	mov    %eax,(%rsp)
   18a69:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18a6e:	85 c0                	test   %eax,%eax
   18a70:	0f 85 27 ff ff ff    	jne    1899d <mbedtls_mpi_exp_mod+0x30d>
   18a76:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18a7a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18a7f:	48 8d 70 01          	lea    0x1(%rax),%rsi
   18a83:	e8 28 d7 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   18a88:	89 04 24             	mov    %eax,(%rsp)
   18a8b:	85 c0                	test   %eax,%eax
   18a8d:	0f 85 0a ff ff ff    	jne    1899d <mbedtls_mpi_exp_mod+0x30d>
   18a93:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
   18a9a:	00 
   18a9b:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18aa2:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18aa6:	ff 74 24 58          	pushq  0x58(%rsp)
   18aaa:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   18ab1:	00 
   18ab2:	48 89 fe             	mov    %rdi,%rsi
   18ab5:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   18abc:	00 
   18abd:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18ac1:	e8 ba 32 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   18ac6:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
   18acd:	00 
   18ace:	4c 89 f7             	mov    %r14,%rdi
   18ad1:	e8 0a d9 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   18ad6:	89 44 24 10          	mov    %eax,0x10(%rsp)
   18ada:	41 5b                	pop    %r11
   18adc:	5a                   	pop    %rdx
   18add:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18ae4:	00 
   18ae5:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18aea:	85 c0                	test   %eax,%eax
   18aec:	0f 85 ab fe ff ff    	jne    1899d <mbedtls_mpi_exp_mod+0x30d>
   18af2:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
   18af9:	00 
   18afa:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18b01:	00 
   18b02:	b9 01 00 00 00       	mov    $0x1,%ecx
   18b07:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
   18b0e:	00 01 00 00 00 
   18b13:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   18b1a:	00 
   18b1b:	48 89 c2             	mov    %rax,%rdx
   18b1e:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18b25:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18b29:	48 89 fe             	mov    %rdi,%rsi
   18b2c:	ff 74 24 58          	pushq  0x58(%rsp)
   18b30:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18b34:	e8 47 32 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   18b39:	41 59                	pop    %r9
   18b3b:	41 5a                	pop    %r10
   18b3d:	48 83 fb 02          	cmp    $0x2,%rbx
   18b41:	0f 84 4f 03 00 00    	je     18e96 <mbedtls_mpi_exp_mod+0x806>
   18b47:	49 8b 45 08          	mov    0x8(%r13),%rax
   18b4b:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   18b52:	00 
   18b53:	31 c9                	xor    %ecx,%ecx
   18b55:	31 d2                	xor    %edx,%edx
   18b57:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   18b5e:	00 00 
   18b60:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   18b65:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18b6c:	00 
   18b6d:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   18b74:	00 00 
   18b76:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18b7b:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   18b80:	48 89 cb             	mov    %rcx,%rbx
   18b83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18b88:	48 85 db             	test   %rbx,%rbx
   18b8b:	0f 84 4b 01 00 00    	je     18cdc <mbedtls_mpi_exp_mod+0x64c>
   18b91:	48 83 eb 01          	sub    $0x1,%rbx
   18b95:	89 d9                	mov    %ebx,%ecx
   18b97:	49 8b 45 10          	mov    0x10(%r13),%rax
   18b9b:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   18ba0:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   18ba4:	48 d3 e8             	shr    %cl,%rax
   18ba7:	48 89 d1             	mov    %rdx,%rcx
   18baa:	83 e0 01             	and    $0x1,%eax
   18bad:	48 09 c1             	or     %rax,%rcx
   18bb0:	0f 84 98 02 00 00    	je     18e4e <mbedtls_mpi_exp_mod+0x7be>
   18bb6:	48 85 c0             	test   %rax,%rax
   18bb9:	0f 85 6b 01 00 00    	jne    18d2a <mbedtls_mpi_exp_mod+0x69a>
   18bbf:	48 83 fa 01          	cmp    $0x1,%rdx
   18bc3:	0f 85 61 01 00 00    	jne    18d2a <mbedtls_mpi_exp_mod+0x69a>
   18bc9:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18bce:	31 c9                	xor    %ecx,%ecx
   18bd0:	4c 89 e2             	mov    %r12,%rdx
   18bd3:	4c 89 f6             	mov    %r14,%rsi
   18bd6:	e8 f5 d4 ff ff       	callq  160d0 <mpi_select>
   18bdb:	85 c0                	test   %eax,%eax
   18bdd:	0f 84 72 02 00 00    	je     18e55 <mbedtls_mpi_exp_mod+0x7c5>
   18be3:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   18be8:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   18bef:	00 
   18bf0:	89 04 24             	mov    %eax,(%rsp)
   18bf3:	e9 a5 fd ff ff       	jmpq   1899d <mbedtls_mpi_exp_mod+0x30d>
   18bf8:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18bfd:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18c02:	e8 d9 d7 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   18c07:	89 04 24             	mov    %eax,(%rsp)
   18c0a:	85 c0                	test   %eax,%eax
   18c0c:	0f 84 81 fe ff ff    	je     18a93 <mbedtls_mpi_exp_mod+0x403>
   18c12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18c18:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18c1f:	00 
   18c20:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18c25:	e9 73 fd ff ff       	jmpq   1899d <mbedtls_mpi_exp_mod+0x30d>
   18c2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18c30:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
   18c37:	00 
   18c38:	be 01 00 00 00       	mov    $0x1,%esi
   18c3d:	48 89 cf             	mov    %rcx,%rdi
   18c40:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   18c45:	e8 06 d9 ff ff       	callq  16550 <mbedtls_mpi_lset>
   18c4a:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18c51:	00 
   18c52:	89 04 24             	mov    %eax,(%rsp)
   18c55:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18c5a:	85 c0                	test   %eax,%eax
   18c5c:	0f 85 3b fd ff ff    	jne    1899d <mbedtls_mpi_exp_mod+0x30d>
   18c62:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   18c66:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18c6b:	48 c1 e6 07          	shl    $0x7,%rsi
   18c6f:	48 89 cf             	mov    %rcx,%rdi
   18c72:	e8 99 db ff ff       	callq  16810 <mbedtls_mpi_shift_l>
   18c77:	89 04 24             	mov    %eax,(%rsp)
   18c7a:	85 c0                	test   %eax,%eax
   18c7c:	0f 85 1b fd ff ff    	jne    1899d <mbedtls_mpi_exp_mod+0x30d>
   18c82:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18c87:	48 89 ea             	mov    %rbp,%rdx
   18c8a:	48 89 ce             	mov    %rcx,%rsi
   18c8d:	48 89 cf             	mov    %rcx,%rdi
   18c90:	e8 4b f3 ff ff       	callq  17fe0 <mbedtls_mpi_mod_mpi>
   18c95:	89 04 24             	mov    %eax,(%rsp)
   18c98:	85 c0                	test   %eax,%eax
   18c9a:	0f 85 fd fc ff ff    	jne    1899d <mbedtls_mpi_exp_mod+0x30d>
   18ca0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   18ca5:	48 85 d2             	test   %rdx,%rdx
   18ca8:	0f 84 8b fd ff ff    	je     18a39 <mbedtls_mpi_exp_mod+0x3a9>
   18cae:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18cb3:	66 0f 6f 11          	movdqa (%rcx),%xmm2
   18cb7:	48 8b 41 10          	mov    0x10(%rcx),%rax
   18cbb:	0f 11 12             	movups %xmm2,(%rdx)
   18cbe:	48 89 42 10          	mov    %rax,0x10(%rdx)
   18cc2:	e9 72 fd ff ff       	jmpq   18a39 <mbedtls_mpi_exp_mod+0x3a9>
   18cc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18cce:	00 00 
   18cd0:	c7 04 24 fc ff ff ff 	movl   $0xfffffffc,(%rsp)
   18cd7:	e9 54 fc ff ff       	jmpq   18930 <mbedtls_mpi_exp_mod+0x2a0>
   18cdc:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
   18ce2:	0f 84 eb 01 00 00    	je     18ed3 <mbedtls_mpi_exp_mod+0x843>
   18ce8:	48 83 6c 24 68 01    	subq   $0x1,0x68(%rsp)
   18cee:	bb 3f 00 00 00       	mov    $0x3f,%ebx
   18cf3:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   18cf8:	e9 9a fe ff ff       	jmpq   18b97 <mbedtls_mpi_exp_mod+0x507>
   18cfd:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18d02:	4c 89 ff             	mov    %r15,%rdi
   18d05:	e8 d6 d6 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   18d0a:	89 04 24             	mov    %eax,(%rsp)
   18d0d:	85 c0                	test   %eax,%eax
   18d0f:	0f 85 03 ff ff ff    	jne    18c18 <mbedtls_mpi_exp_mod+0x588>
   18d15:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   18d1c:	01 00 00 00 
   18d20:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
   18d25:	e9 d5 fc ff ff       	jmpq   189ff <mbedtls_mpi_exp_mod+0x36f>
   18d2a:	48 83 44 24 40 01    	addq   $0x1,0x40(%rsp)
   18d30:	8b 4c 24 58          	mov    0x58(%rsp),%ecx
   18d34:	ba 02 00 00 00       	mov    $0x2,%edx
   18d39:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18d3e:	29 f1                	sub    %esi,%ecx
   18d40:	48 d3 e0             	shl    %cl,%rax
   18d43:	48 09 44 24 78       	or     %rax,0x78(%rsp)
   18d48:	48 39 74 24 70       	cmp    %rsi,0x70(%rsp)
   18d4d:	0f 85 35 fe ff ff    	jne    18b88 <mbedtls_mpi_exp_mod+0x4f8>
   18d53:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
   18d5a:	00 
   18d5b:	45 31 ff             	xor    %r15d,%r15d
   18d5e:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   18d63:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
   18d6a:	00 
   18d6b:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   18d70:	eb 05                	jmp    18d77 <mbedtls_mpi_exp_mod+0x6e7>
   18d72:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   18d77:	31 c9                	xor    %ecx,%ecx
   18d79:	4c 89 e2             	mov    %r12,%rdx
   18d7c:	4c 89 f6             	mov    %r14,%rsi
   18d7f:	48 89 df             	mov    %rbx,%rdi
   18d82:	e8 49 d3 ff ff       	callq  160d0 <mpi_select>
   18d87:	85 c0                	test   %eax,%eax
   18d89:	0f 85 54 fe ff ff    	jne    18be3 <mbedtls_mpi_exp_mod+0x553>
   18d8f:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18d96:	00 
   18d97:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18d9e:	49 83 c7 01          	add    $0x1,%r15
   18da2:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18da6:	41 55                	push   %r13
   18da8:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18daf:	00 
   18db0:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18db7:	00 
   18db8:	48 89 fe             	mov    %rdi,%rsi
   18dbb:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18dbf:	e8 bc 2f 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   18dc4:	41 59                	pop    %r9
   18dc6:	41 5a                	pop    %r10
   18dc8:	4c 39 7c 24 40       	cmp    %r15,0x40(%rsp)
   18dcd:	77 a3                	ja     18d72 <mbedtls_mpi_exp_mod+0x6e2>
   18dcf:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   18dd4:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18dd9:	4c 89 e2             	mov    %r12,%rdx
   18ddc:	4c 89 f6             	mov    %r14,%rsi
   18ddf:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
   18de6:	00 
   18de7:	4c 8b ac 24 98 00 00 	mov    0x98(%rsp),%r13
   18dee:	00 
   18def:	e8 dc d2 ff ff       	callq  160d0 <mpi_select>
   18df4:	85 c0                	test   %eax,%eax
   18df6:	0f 85 e7 fd ff ff    	jne    18be3 <mbedtls_mpi_exp_mod+0x553>
   18dfc:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18e03:	00 
   18e04:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18e0b:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18e0f:	ff 74 24 58          	pushq  0x58(%rsp)
   18e13:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18e1a:	00 
   18e1b:	48 89 fe             	mov    %rdi,%rsi
   18e1e:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18e25:	00 
   18e26:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18e2a:	e8 51 2f 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   18e2f:	5f                   	pop    %rdi
   18e30:	41 58                	pop    %r8
   18e32:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   18e39:	00 00 
   18e3b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   18e40:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   18e47:	00 00 
   18e49:	e9 3a fd ff ff       	jmpq   18b88 <mbedtls_mpi_exp_mod+0x4f8>
   18e4e:	31 d2                	xor    %edx,%edx
   18e50:	e9 33 fd ff ff       	jmpq   18b88 <mbedtls_mpi_exp_mod+0x4f8>
   18e55:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18e5c:	00 
   18e5d:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18e64:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18e68:	ff 74 24 58          	pushq  0x58(%rsp)
   18e6c:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18e73:	00 
   18e74:	48 89 fe             	mov    %rdi,%rsi
   18e77:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18e7e:	00 
   18e7f:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18e83:	e8 f8 2e 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   18e88:	41 5b                	pop    %r11
   18e8a:	41 5f                	pop    %r15
   18e8c:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   18e91:	e9 f2 fc ff ff       	jmpq   18b88 <mbedtls_mpi_exp_mod+0x4f8>
   18e96:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18e9a:	48 8d bc 24 60 01 00 	lea    0x160(%rsp),%rdi
   18ea1:	00 
   18ea2:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   18ea7:	48 8d 70 01          	lea    0x1(%rax),%rsi
   18eab:	e8 00 d3 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   18eb0:	85 c0                	test   %eax,%eax
   18eb2:	75 17                	jne    18ecb <mbedtls_mpi_exp_mod+0x83b>
   18eb4:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   18eb9:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   18ebe:	e8 1d d5 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   18ec3:	85 c0                	test   %eax,%eax
   18ec5:	0f 84 83 01 00 00    	je     1904e <mbedtls_mpi_exp_mod+0x9be>
   18ecb:	89 04 24             	mov    %eax,(%rsp)
   18ece:	e9 ca fa ff ff       	jmpq   1899d <mbedtls_mpi_exp_mod+0x30d>
   18ed3:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   18ed9:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   18ede:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   18ee5:	00 
   18ee6:	0f 84 f7 00 00 00    	je     18fe3 <mbedtls_mpi_exp_mod+0x953>
   18eec:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   18ef1:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   18ef6:	4c 89 7c 24 58       	mov    %r15,0x58(%rsp)
   18efb:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   18f00:	4c 89 6c 24 68       	mov    %r13,0x68(%rsp)
   18f05:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   18f0a:	eb 13                	jmp    18f1f <mbedtls_mpi_exp_mod+0x88f>
   18f0c:	0f 1f 40 00          	nopl   0x0(%rax)
   18f10:	48 83 c3 01          	add    $0x1,%rbx
   18f14:	48 39 5c 24 40       	cmp    %rbx,0x40(%rsp)
   18f19:	0f 84 b5 00 00 00    	je     18fd4 <mbedtls_mpi_exp_mod+0x944>
   18f1f:	31 c9                	xor    %ecx,%ecx
   18f21:	4c 89 e2             	mov    %r12,%rdx
   18f24:	4c 89 f6             	mov    %r14,%rsi
   18f27:	4c 89 ff             	mov    %r15,%rdi
   18f2a:	e8 a1 d1 ff ff       	callq  160d0 <mpi_select>
   18f2f:	85 c0                	test   %eax,%eax
   18f31:	0f 85 8e 00 00 00    	jne    18fc5 <mbedtls_mpi_exp_mod+0x935>
   18f37:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18f3e:	00 
   18f3f:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18f46:	4d 01 ed             	add    %r13,%r13
   18f49:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18f4d:	ff 74 24 58          	pushq  0x58(%rsp)
   18f51:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18f58:	00 
   18f59:	48 89 fe             	mov    %rdi,%rsi
   18f5c:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18f63:	00 
   18f64:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18f68:	e8 13 2e 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   18f6d:	59                   	pop    %rcx
   18f6e:	5e                   	pop    %rsi
   18f6f:	4d 85 e5             	test   %r12,%r13
   18f72:	74 9c                	je     18f10 <mbedtls_mpi_exp_mod+0x880>
   18f74:	b9 01 00 00 00       	mov    $0x1,%ecx
   18f79:	4c 89 e2             	mov    %r12,%rdx
   18f7c:	4c 89 f6             	mov    %r14,%rsi
   18f7f:	4c 89 ff             	mov    %r15,%rdi
   18f82:	e8 49 d1 ff ff       	callq  160d0 <mpi_select>
   18f87:	85 c0                	test   %eax,%eax
   18f89:	75 3a                	jne    18fc5 <mbedtls_mpi_exp_mod+0x935>
   18f8b:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18f92:	00 
   18f93:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18f9a:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18f9e:	ff 74 24 58          	pushq  0x58(%rsp)
   18fa2:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18fa9:	00 
   18faa:	48 89 fe             	mov    %rdi,%rsi
   18fad:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18fb4:	00 
   18fb5:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18fb9:	e8 c2 2d 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   18fbe:	58                   	pop    %rax
   18fbf:	5a                   	pop    %rdx
   18fc0:	e9 4b ff ff ff       	jmpq   18f10 <mbedtls_mpi_exp_mod+0x880>
   18fc5:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   18fca:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   18fcf:	e9 f7 fe ff ff       	jmpq   18ecb <mbedtls_mpi_exp_mod+0x83b>
   18fd4:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   18fd9:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
   18fde:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   18fe3:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18fea:	00 
   18feb:	b9 01 00 00 00       	mov    $0x1,%ecx
   18ff0:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
   18ff7:	00 01 00 00 00 
   18ffc:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   19003:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   19007:	ff 74 24 58          	pushq  0x58(%rsp)
   1900b:	48 89 fe             	mov    %rdi,%rsi
   1900e:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   19015:	00 
   19016:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   1901a:	e8 61 2d 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   1901f:	58                   	pop    %rax
   19020:	5a                   	pop    %rdx
   19021:	83 7c 24 64 ff       	cmpl   $0xffffffff,0x64(%rsp)
   19026:	75 14                	jne    1903c <mbedtls_mpi_exp_mod+0x9ac>
   19028:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   1902d:	74 0d                	je     1903c <mbedtls_mpi_exp_mod+0x9ac>
   1902f:	49 8b 45 10          	mov    0x10(%r13),%rax
   19033:	f6 00 01             	testb  $0x1,(%rax)
   19036:	0f 85 fb 00 00 00    	jne    19137 <mbedtls_mpi_exp_mod+0xaa7>
   1903c:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   19041:	4c 89 f6             	mov    %r14,%rsi
   19044:	e8 97 d3 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   19049:	e9 4f f9 ff ff       	jmpq   1899d <mbedtls_mpi_exp_mod+0x30d>
   1904e:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
   19055:	00 
   19056:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1905d:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   19061:	ff 74 24 58          	pushq  0x58(%rsp)
   19065:	48 8b 8c 24 78 01 00 	mov    0x178(%rsp),%rcx
   1906c:	00 
   1906d:	48 89 fa             	mov    %rdi,%rdx
   19070:	48 89 fe             	mov    %rdi,%rsi
   19073:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   19077:	e8 04 2d 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   1907c:	5f                   	pop    %rdi
   1907d:	41 58                	pop    %r8
   1907f:	49 83 fc 04          	cmp    $0x4,%r12
   19083:	0f 85 be fa ff ff    	jne    18b47 <mbedtls_mpi_exp_mod+0x4b7>
   19089:	4c 8d 94 24 78 01 00 	lea    0x178(%rsp),%r10
   19090:	00 
   19091:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
   19098:	00 
   19099:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   1909e:	48 89 eb             	mov    %rbp,%rbx
   190a1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   190a6:	4c 89 d5             	mov    %r10,%rbp
   190a9:	eb 4c                	jmp    190f7 <mbedtls_mpi_exp_mod+0xa67>
   190ab:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
   190af:	48 89 ef             	mov    %rbp,%rdi
   190b2:	e8 29 d3 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   190b7:	85 c0                	test   %eax,%eax
   190b9:	75 50                	jne    1910b <mbedtls_mpi_exp_mod+0xa7b>
   190bb:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   190bf:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   190c6:	48 83 c5 18          	add    $0x18,%rbp
   190ca:	4c 8b 43 10          	mov    0x10(%rbx),%r8
   190ce:	ff 74 24 58          	pushq  0x58(%rsp)
   190d2:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
   190d9:	00 
   190da:	48 89 fe             	mov    %rdi,%rsi
   190dd:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
   190e4:	00 
   190e5:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
   190e9:	e8 92 2c 00 00       	callq  1bd80 <mbedtls_mpi_core_montmul>
   190ee:	59                   	pop    %rcx
   190ef:	5e                   	pop    %rsi
   190f0:	48 39 6c 24 40       	cmp    %rbp,0x40(%rsp)
   190f5:	74 33                	je     1912a <mbedtls_mpi_exp_mod+0xa9a>
   190f7:	48 8b 43 08          	mov    0x8(%rbx),%rax
   190fb:	48 89 ef             	mov    %rbp,%rdi
   190fe:	48 8d 70 01          	lea    0x1(%rax),%rsi
   19102:	e8 a9 d0 ff ff       	callq  161b0 <mbedtls_mpi_grow>
   19107:	85 c0                	test   %eax,%eax
   19109:	74 a0                	je     190ab <mbedtls_mpi_exp_mod+0xa1b>
   1910b:	89 04 24             	mov    %eax,(%rsp)
   1910e:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   19115:	00 
   19116:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   1911b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19120:	e9 a7 f7 ff ff       	jmpq   188cc <mbedtls_mpi_exp_mod+0x23c>
   19125:	e8 36 a1 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1912a:	48 89 dd             	mov    %rbx,%rbp
   1912d:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   19132:	e9 10 fa ff ff       	jmpq   18b47 <mbedtls_mpi_exp_mod+0x4b7>
   19137:	b9 01 00 00 00       	mov    $0x1,%ecx
   1913c:	4c 89 f2             	mov    %r14,%rdx
   1913f:	48 89 ee             	mov    %rbp,%rsi
   19142:	4c 89 f7             	mov    %r14,%rdi
   19145:	c7 84 24 30 01 00 00 	movl   $0xffffffff,0x130(%rsp)
   1914c:	ff ff ff ff 
   19150:	e8 7b dc ff ff       	callq  16dd0 <add_sub_mpi>
   19155:	85 c0                	test   %eax,%eax
   19157:	0f 84 df fe ff ff    	je     1903c <mbedtls_mpi_exp_mod+0x9ac>
   1915d:	e9 69 fd ff ff       	jmpq   18ecb <mbedtls_mpi_exp_mod+0x83b>
   19162:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19169:	00 00 00 00 
   1916d:	0f 1f 00             	nopl   (%rax)

0000000000019170 <mbedtls_mpi_gcd>:
   19170:	f3 0f 1e fa          	endbr64 
   19174:	41 57                	push   %r15
   19176:	49 89 ff             	mov    %rdi,%r15
   19179:	41 56                	push   %r14
   1917b:	49 89 f6             	mov    %rsi,%r14
   1917e:	41 55                	push   %r13
   19180:	41 54                	push   %r12
   19182:	49 89 d4             	mov    %rdx,%r12
   19185:	55                   	push   %rbp
   19186:	53                   	push   %rbx
   19187:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1918e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19195:	00 00 
   19197:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1919c:	31 c0                	xor    %eax,%eax
   1919e:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   191a3:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   191aa:	00 
   191ab:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   191b0:	48 89 ef             	mov    %rbp,%rdi
   191b3:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   191ba:	00 
   191bb:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   191c2:	00 00 
   191c4:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   191cb:	00 00 
   191cd:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   191d4:	00 00 
   191d6:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   191dd:	00 00 
   191df:	e8 fc d1 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   191e4:	85 c0                	test   %eax,%eax
   191e6:	74 3e                	je     19226 <mbedtls_mpi_gcd+0xb6>
   191e8:	48 89 ef             	mov    %rbp,%rdi
   191eb:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   191ef:	e8 5c cf ff ff       	callq  16150 <mbedtls_mpi_free>
   191f4:	4c 89 ef             	mov    %r13,%rdi
   191f7:	e8 54 cf ff ff       	callq  16150 <mbedtls_mpi_free>
   191fc:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   19201:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19208:	00 00 
   1920a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1920e:	0f 85 90 02 00 00    	jne    194a4 <mbedtls_mpi_gcd+0x334>
   19214:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1921b:	5b                   	pop    %rbx
   1921c:	5d                   	pop    %rbp
   1921d:	41 5c                	pop    %r12
   1921f:	41 5d                	pop    %r13
   19221:	41 5e                	pop    %r14
   19223:	41 5f                	pop    %r15
   19225:	c3                   	retq   
   19226:	4c 89 e6             	mov    %r12,%rsi
   19229:	4c 89 ef             	mov    %r13,%rdi
   1922c:	e8 af d1 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   19231:	85 c0                	test   %eax,%eax
   19233:	75 b3                	jne    191e8 <mbedtls_mpi_gcd+0x78>
   19235:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1923a:	48 85 f6             	test   %rsi,%rsi
   1923d:	0f 84 59 02 00 00    	je     1949c <mbedtls_mpi_gcd+0x32c>
   19243:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   19248:	45 31 e4             	xor    %r12d,%r12d
   1924b:	31 c9                	xor    %ecx,%ecx
   1924d:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   19251:	31 c0                	xor    %eax,%eax
   19253:	eb 15                	jmp    1926a <mbedtls_mpi_gcd+0xfa>
   19255:	0f 1f 00             	nopl   (%rax)
   19258:	48 83 c0 01          	add    $0x1,%rax
   1925c:	49 83 c4 01          	add    $0x1,%r12
   19260:	48 83 f8 40          	cmp    $0x40,%rax
   19264:	0f 84 25 02 00 00    	je     1948f <mbedtls_mpi_gcd+0x31f>
   1926a:	48 0f a3 c2          	bt     %rax,%rdx
   1926e:	73 e8                	jae    19258 <mbedtls_mpi_gcd+0xe8>
   19270:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   19275:	48 85 f6             	test   %rsi,%rsi
   19278:	0f 84 6e 01 00 00    	je     193ec <mbedtls_mpi_gcd+0x27c>
   1927e:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   19283:	31 d2                	xor    %edx,%edx
   19285:	31 ff                	xor    %edi,%edi
   19287:	49 8b 0c f8          	mov    (%r8,%rdi,8),%rcx
   1928b:	31 c0                	xor    %eax,%eax
   1928d:	eb 13                	jmp    192a2 <mbedtls_mpi_gcd+0x132>
   1928f:	90                   	nop
   19290:	48 83 c0 01          	add    $0x1,%rax
   19294:	48 83 c2 01          	add    $0x1,%rdx
   19298:	48 83 f8 40          	cmp    $0x40,%rax
   1929c:	0f 84 2a 01 00 00    	je     193cc <mbedtls_mpi_gcd+0x25c>
   192a2:	48 0f a3 c1          	bt     %rax,%rcx
   192a6:	73 e8                	jae    19290 <mbedtls_mpi_gcd+0x120>
   192a8:	48 85 d2             	test   %rdx,%rdx
   192ab:	0f 84 28 01 00 00    	je     193d9 <mbedtls_mpi_gcd+0x269>
   192b1:	49 39 d4             	cmp    %rdx,%r12
   192b4:	4c 0f 47 e2          	cmova  %rdx,%r12
   192b8:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   192bf:	00 
   192c0:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   192c5:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   192ca:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   192d1:	00 
   192d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   192d8:	48 89 de             	mov    %rbx,%rsi
   192db:	48 89 ef             	mov    %rbp,%rdi
   192de:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   192e5:	00 00 
   192e7:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   192ee:	00 
   192ef:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   192f6:	00 00 
   192f8:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   192fd:	e8 2e d7 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19302:	85 c0                	test   %eax,%eax
   19304:	0f 84 62 01 00 00    	je     1946c <mbedtls_mpi_gcd+0x2fc>
   1930a:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   1930f:	4d 85 c0             	test   %r8,%r8
   19312:	74 34                	je     19348 <mbedtls_mpi_gcd+0x1d8>
   19314:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   19319:	31 d2                	xor    %edx,%edx
   1931b:	31 f6                	xor    %esi,%esi
   1931d:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
   19321:	31 c0                	xor    %eax,%eax
   19323:	eb 15                	jmp    1933a <mbedtls_mpi_gcd+0x1ca>
   19325:	0f 1f 00             	nopl   (%rax)
   19328:	48 83 c0 01          	add    $0x1,%rax
   1932c:	48 83 c2 01          	add    $0x1,%rdx
   19330:	48 83 f8 40          	cmp    $0x40,%rax
   19334:	0f 84 06 01 00 00    	je     19440 <mbedtls_mpi_gcd+0x2d0>
   1933a:	48 0f a3 c1          	bt     %rax,%rcx
   1933e:	73 e8                	jae    19328 <mbedtls_mpi_gcd+0x1b8>
   19340:	4c 89 c6             	mov    %r8,%rsi
   19343:	e8 d8 25 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   19348:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   1934d:	4d 85 c0             	test   %r8,%r8
   19350:	74 36                	je     19388 <mbedtls_mpi_gcd+0x218>
   19352:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   19357:	31 d2                	xor    %edx,%edx
   19359:	31 f6                	xor    %esi,%esi
   1935b:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
   1935f:	31 c0                	xor    %eax,%eax
   19361:	eb 17                	jmp    1937a <mbedtls_mpi_gcd+0x20a>
   19363:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19368:	48 83 c0 01          	add    $0x1,%rax
   1936c:	48 83 c2 01          	add    $0x1,%rdx
   19370:	48 83 f8 40          	cmp    $0x40,%rax
   19374:	0f 84 de 00 00 00    	je     19458 <mbedtls_mpi_gcd+0x2e8>
   1937a:	48 0f a3 c1          	bt     %rax,%rcx
   1937e:	73 e8                	jae    19368 <mbedtls_mpi_gcd+0x1f8>
   19380:	4c 89 c6             	mov    %r8,%rsi
   19383:	e8 98 25 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   19388:	4c 89 ee             	mov    %r13,%rsi
   1938b:	48 89 ef             	mov    %rbp,%rdi
   1938e:	e8 9d d6 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19393:	85 c0                	test   %eax,%eax
   19395:	78 69                	js     19400 <mbedtls_mpi_gcd+0x290>
   19397:	4c 89 ea             	mov    %r13,%rdx
   1939a:	48 89 ee             	mov    %rbp,%rsi
   1939d:	e8 ee d8 ff ff       	callq  16c90 <mbedtls_mpi_sub_abs>
   193a2:	85 c0                	test   %eax,%eax
   193a4:	0f 85 3e fe ff ff    	jne    191e8 <mbedtls_mpi_gcd+0x78>
   193aa:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   193af:	48 85 f6             	test   %rsi,%rsi
   193b2:	0f 84 20 ff ff ff    	je     192d8 <mbedtls_mpi_gcd+0x168>
   193b8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   193bd:	ba 01 00 00 00       	mov    $0x1,%edx
   193c2:	e8 59 25 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   193c7:	e9 0c ff ff ff       	jmpq   192d8 <mbedtls_mpi_gcd+0x168>
   193cc:	48 83 c7 01          	add    $0x1,%rdi
   193d0:	48 39 f7             	cmp    %rsi,%rdi
   193d3:	0f 85 ae fe ff ff    	jne    19287 <mbedtls_mpi_gcd+0x117>
   193d9:	48 c1 e6 06          	shl    $0x6,%rsi
   193dd:	74 0d                	je     193ec <mbedtls_mpi_gcd+0x27c>
   193df:	45 31 e4             	xor    %r12d,%r12d
   193e2:	41 f6 00 01          	testb  $0x1,(%r8)
   193e6:	0f 85 cc fe ff ff    	jne    192b8 <mbedtls_mpi_gcd+0x148>
   193ec:	4c 89 f6             	mov    %r14,%rsi
   193ef:	4c 89 ff             	mov    %r15,%rdi
   193f2:	e8 e9 cf ff ff       	callq  163e0 <mbedtls_mpi_copy>
   193f7:	e9 ec fd ff ff       	jmpq   191e8 <mbedtls_mpi_gcd+0x78>
   193fc:	0f 1f 40 00          	nopl   0x0(%rax)
   19400:	48 89 ea             	mov    %rbp,%rdx
   19403:	4c 89 ee             	mov    %r13,%rsi
   19406:	4c 89 ef             	mov    %r13,%rdi
   19409:	e8 82 d8 ff ff       	callq  16c90 <mbedtls_mpi_sub_abs>
   1940e:	85 c0                	test   %eax,%eax
   19410:	0f 85 d2 fd ff ff    	jne    191e8 <mbedtls_mpi_gcd+0x78>
   19416:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1941b:	48 85 f6             	test   %rsi,%rsi
   1941e:	0f 84 b4 fe ff ff    	je     192d8 <mbedtls_mpi_gcd+0x168>
   19424:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   19429:	ba 01 00 00 00       	mov    $0x1,%edx
   1942e:	e8 ed 24 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   19433:	e9 a0 fe ff ff       	jmpq   192d8 <mbedtls_mpi_gcd+0x168>
   19438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1943f:	00 
   19440:	48 83 c6 01          	add    $0x1,%rsi
   19444:	4c 39 c6             	cmp    %r8,%rsi
   19447:	0f 85 d0 fe ff ff    	jne    1931d <mbedtls_mpi_gcd+0x1ad>
   1944d:	31 d2                	xor    %edx,%edx
   1944f:	e9 ec fe ff ff       	jmpq   19340 <mbedtls_mpi_gcd+0x1d0>
   19454:	0f 1f 40 00          	nopl   0x0(%rax)
   19458:	48 83 c6 01          	add    $0x1,%rsi
   1945c:	4c 39 c6             	cmp    %r8,%rsi
   1945f:	0f 85 f6 fe ff ff    	jne    1935b <mbedtls_mpi_gcd+0x1eb>
   19465:	31 d2                	xor    %edx,%edx
   19467:	e9 14 ff ff ff       	jmpq   19380 <mbedtls_mpi_gcd+0x210>
   1946c:	4c 89 e6             	mov    %r12,%rsi
   1946f:	4c 89 ef             	mov    %r13,%rdi
   19472:	e8 99 d3 ff ff       	callq  16810 <mbedtls_mpi_shift_l>
   19477:	85 c0                	test   %eax,%eax
   19479:	0f 85 69 fd ff ff    	jne    191e8 <mbedtls_mpi_gcd+0x78>
   1947f:	4c 89 ee             	mov    %r13,%rsi
   19482:	4c 89 ff             	mov    %r15,%rdi
   19485:	e8 56 cf ff ff       	callq  163e0 <mbedtls_mpi_copy>
   1948a:	e9 59 fd ff ff       	jmpq   191e8 <mbedtls_mpi_gcd+0x78>
   1948f:	48 83 c1 01          	add    $0x1,%rcx
   19493:	48 39 f1             	cmp    %rsi,%rcx
   19496:	0f 85 b1 fd ff ff    	jne    1924d <mbedtls_mpi_gcd+0xdd>
   1949c:	45 31 e4             	xor    %r12d,%r12d
   1949f:	e9 cc fd ff ff       	jmpq   19270 <mbedtls_mpi_gcd+0x100>
   194a4:	e8 b7 9d fe ff       	callq  3260 <__stack_chk_fail@plt>
   194a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000194b0 <mbedtls_mpi_fill_random>:
   194b0:	f3 0f 1e fa          	endbr64 
   194b4:	41 55                	push   %r13
   194b6:	49 89 d5             	mov    %rdx,%r13
   194b9:	41 54                	push   %r12
   194bb:	49 89 f4             	mov    %rsi,%r12
   194be:	55                   	push   %rbp
   194bf:	4c 89 e0             	mov    %r12,%rax
   194c2:	48 89 cd             	mov    %rcx,%rbp
   194c5:	53                   	push   %rbx
   194c6:	48 89 fb             	mov    %rdi,%rbx
   194c9:	48 83 ec 08          	sub    $0x8,%rsp
   194cd:	83 e6 07             	and    $0x7,%esi
   194d0:	40 0f 95 c6          	setne  %sil
   194d4:	48 c1 e8 03          	shr    $0x3,%rax
   194d8:	40 0f b6 f6          	movzbl %sil,%esi
   194dc:	48 01 c6             	add    %rax,%rsi
   194df:	e8 6c cd ff ff       	callq  16250 <mbedtls_mpi_resize_clear>
   194e4:	85 c0                	test   %eax,%eax
   194e6:	75 05                	jne    194ed <mbedtls_mpi_fill_random+0x3d>
   194e8:	4d 85 e4             	test   %r12,%r12
   194eb:	75 13                	jne    19500 <mbedtls_mpi_fill_random+0x50>
   194ed:	48 83 c4 08          	add    $0x8,%rsp
   194f1:	5b                   	pop    %rbx
   194f2:	5d                   	pop    %rbp
   194f3:	41 5c                	pop    %r12
   194f5:	41 5d                	pop    %r13
   194f7:	c3                   	retq   
   194f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   194ff:	00 
   19500:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   19504:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   19508:	48 83 c4 08          	add    $0x8,%rsp
   1950c:	49 89 e8             	mov    %rbp,%r8
   1950f:	5b                   	pop    %rbx
   19510:	4c 89 e9             	mov    %r13,%rcx
   19513:	5d                   	pop    %rbp
   19514:	4c 89 e2             	mov    %r12,%rdx
   19517:	41 5c                	pop    %r12
   19519:	41 5d                	pop    %r13
   1951b:	e9 10 2a 00 00       	jmpq   1bf30 <mbedtls_mpi_core_fill_random>

0000000000019520 <mpi_miller_rabin>:
   19520:	41 57                	push   %r15
   19522:	41 56                	push   %r14
   19524:	49 89 fe             	mov    %rdi,%r14
   19527:	41 55                	push   %r13
   19529:	41 54                	push   %r12
   1952b:	49 89 d4             	mov    %rdx,%r12
   1952e:	55                   	push   %rbp
   1952f:	53                   	push   %rbx
   19530:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   19537:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1953c:	4c 8d 7c 24 60       	lea    0x60(%rsp),%r15
   19541:	48 89 fe             	mov    %rdi,%rsi
   19544:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   19549:	4c 89 ff             	mov    %r15,%rdi
   1954c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   19551:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19558:	00 00 
   1955a:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   19561:	00 
   19562:	31 c0                	xor    %eax,%eax
   19564:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
   1956b:	00 
   1956c:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   19573:	00 
   19574:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19579:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19580:	00 
   19581:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   19588:	00 
   19589:	48 89 c2             	mov    %rax,%rdx
   1958c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19591:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   19598:	00 00 
   1959a:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   195a1:	00 00 
   195a3:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
   195aa:	01 00 00 00 
   195ae:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
   195b5:	00 00 00 00 00 
   195ba:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   195c1:	00 00 00 00 00 
   195c6:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   195cd:	01 00 00 00 
   195d1:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
   195d8:	00 00 00 00 00 
   195dd:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
   195e4:	00 00 00 00 00 
   195e9:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
   195f0:	01 00 00 00 
   195f4:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   195fb:	00 00 00 00 00 
   19600:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   19607:	00 00 00 00 00 
   1960c:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
   19613:	01 00 00 00 
   19617:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1961e:	00 00 00 00 00 
   19623:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
   1962a:	00 00 00 00 00 
   1962f:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19636:	00 01 00 00 00 
   1963b:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19642:	01 00 00 00 
   19646:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   1964d:	00 01 00 00 00 
   19652:	e8 79 d7 ff ff       	callq  16dd0 <add_sub_mpi>
   19657:	89 44 24 24          	mov    %eax,0x24(%rsp)
   1965b:	85 c0                	test   %eax,%eax
   1965d:	0f 85 25 02 00 00    	jne    19888 <mpi_miller_rabin+0x368>
   19663:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   19668:	48 85 f6             	test   %rsi,%rsi
   1966b:	0f 84 ec 02 00 00    	je     1995d <mpi_miller_rabin+0x43d>
   19671:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   19676:	31 ed                	xor    %ebp,%ebp
   19678:	31 c9                	xor    %ecx,%ecx
   1967a:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   1967e:	31 c0                	xor    %eax,%eax
   19680:	eb 18                	jmp    1969a <mpi_miller_rabin+0x17a>
   19682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19688:	48 83 c0 01          	add    $0x1,%rax
   1968c:	48 83 c5 01          	add    $0x1,%rbp
   19690:	48 83 f8 40          	cmp    $0x40,%rax
   19694:	0f 84 b6 02 00 00    	je     19950 <mpi_miller_rabin+0x430>
   1969a:	48 0f a3 c2          	bt     %rax,%rdx
   1969e:	73 e8                	jae    19688 <mpi_miller_rabin+0x168>
   196a0:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   196a7:	00 
   196a8:	4c 89 fe             	mov    %r15,%rsi
   196ab:	48 89 c7             	mov    %rax,%rdi
   196ae:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   196b3:	e8 28 cd ff ff       	callq  163e0 <mbedtls_mpi_copy>
   196b8:	89 44 24 24          	mov    %eax,0x24(%rsp)
   196bc:	85 c0                	test   %eax,%eax
   196be:	0f 85 d1 01 00 00    	jne    19895 <mpi_miller_rabin+0x375>
   196c4:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   196cb:	00 
   196cc:	48 85 f6             	test   %rsi,%rsi
   196cf:	0f 85 93 02 00 00    	jne    19968 <mpi_miller_rabin+0x448>
   196d5:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   196db:	0f 84 b4 01 00 00    	je     19895 <mpi_miller_rabin+0x375>
   196e1:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   196e8:	00 
   196e9:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
   196ee:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   196f5:	00 
   196f6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   196fb:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   19702:	00 
   19703:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   1970a:	00 00 
   1970c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19711:	bd 20 00 00 00       	mov    $0x20,%ebp
   19716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1971d:	00 00 00 
   19720:	49 8b 46 08          	mov    0x8(%r14),%rax
   19724:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19729:	4c 89 e2             	mov    %r12,%rdx
   1972c:	4c 89 ef             	mov    %r13,%rdi
   1972f:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   19736:	00 
   19737:	e8 74 fd ff ff       	callq  194b0 <mbedtls_mpi_fill_random>
   1973c:	85 c0                	test   %eax,%eax
   1973e:	0f 85 d4 01 00 00    	jne    19918 <mpi_miller_rabin+0x3f8>
   19744:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   1974b:	00 
   1974c:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   19753:	00 
   19754:	e8 a7 1d 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   19759:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1975e:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   19763:	48 89 c3             	mov    %rax,%rbx
   19766:	e8 95 1d 00 00       	callq  1b500 <mbedtls_mpi_core_bitlen>
   1976b:	48 39 d8             	cmp    %rbx,%rax
   1976e:	73 2d                	jae    1979d <mpi_miller_rabin+0x27d>
   19770:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   19777:	00 
   19778:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
   1977f:	00 
   19780:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   19784:	c1 e1 06             	shl    $0x6,%ecx
   19787:	f7 d1                	not    %ecx
   19789:	01 c1                	add    %eax,%ecx
   1978b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   19792:	48 d3 e0             	shl    %cl,%rax
   19795:	48 f7 d0             	not    %rax
   19798:	48 21 44 d6 f8       	and    %rax,-0x8(%rsi,%rdx,8)
   1979d:	83 ed 01             	sub    $0x1,%ebp
   197a0:	0f 84 9a 01 00 00    	je     19940 <mpi_miller_rabin+0x420>
   197a6:	4c 89 fe             	mov    %r15,%rsi
   197a9:	4c 89 ef             	mov    %r13,%rdi
   197ac:	e8 7f d2 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   197b1:	85 c0                	test   %eax,%eax
   197b3:	0f 89 67 ff ff ff    	jns    19720 <mpi_miller_rabin+0x200>
   197b9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   197be:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   197c3:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   197ca:	00 01 00 00 00 
   197cf:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   197d6:	01 00 00 00 
   197da:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   197e1:	00 01 00 00 00 
   197e6:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   197ed:	00 
   197ee:	e8 3d d2 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   197f3:	85 c0                	test   %eax,%eax
   197f5:	0f 8e 25 ff ff ff    	jle    19720 <mpi_miller_rabin+0x200>
   197fb:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   19800:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   19805:	4c 89 f1             	mov    %r14,%rcx
   19808:	4c 89 ee             	mov    %r13,%rsi
   1980b:	e8 80 ee ff ff       	callq  18690 <mbedtls_mpi_exp_mod>
   19810:	85 c0                	test   %eax,%eax
   19812:	0f 85 00 01 00 00    	jne    19918 <mpi_miller_rabin+0x3f8>
   19818:	4c 89 fe             	mov    %r15,%rsi
   1981b:	4c 89 ef             	mov    %r13,%rdi
   1981e:	e8 0d d2 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19823:	85 c0                	test   %eax,%eax
   19825:	74 42                	je     19869 <mpi_miller_rabin+0x349>
   19827:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1982c:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19831:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19838:	00 01 00 00 00 
   1983d:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19844:	01 00 00 00 
   19848:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   1984f:	00 01 00 00 00 
   19854:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   1985b:	00 
   1985c:	e8 cf d1 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19861:	85 c0                	test   %eax,%eax
   19863:	0f 85 14 01 00 00    	jne    1997d <mpi_miller_rabin+0x45d>
   19869:	48 83 44 24 50 01    	addq   $0x1,0x50(%rsp)
   1986f:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   19874:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
   19879:	0f 85 92 fe ff ff    	jne    19711 <mpi_miller_rabin+0x1f1>
   1987f:	eb 36                	jmp    198b7 <mpi_miller_rabin+0x397>
   19881:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19888:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1988f:	00 
   19890:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19895:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   1989c:	00 
   1989d:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   198a4:	00 
   198a5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   198aa:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   198b1:	00 
   198b2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   198b7:	4c 89 ff             	mov    %r15,%rdi
   198ba:	e8 91 c8 ff ff       	callq  16150 <mbedtls_mpi_free>
   198bf:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   198c4:	e8 87 c8 ff ff       	callq  16150 <mbedtls_mpi_free>
   198c9:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   198ce:	e8 7d c8 ff ff       	callq  16150 <mbedtls_mpi_free>
   198d3:	4c 89 ef             	mov    %r13,%rdi
   198d6:	e8 75 c8 ff ff       	callq  16150 <mbedtls_mpi_free>
   198db:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   198e0:	e8 6b c8 ff ff       	callq  16150 <mbedtls_mpi_free>
   198e5:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   198ec:	00 
   198ed:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   198f4:	00 00 
   198f6:	0f 85 84 01 00 00    	jne    19a80 <mpi_miller_rabin+0x560>
   198fc:	8b 44 24 24          	mov    0x24(%rsp),%eax
   19900:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
   19907:	5b                   	pop    %rbx
   19908:	5d                   	pop    %rbp
   19909:	41 5c                	pop    %r12
   1990b:	41 5d                	pop    %r13
   1990d:	41 5e                	pop    %r14
   1990f:	41 5f                	pop    %r15
   19911:	c3                   	retq   
   19912:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19918:	89 44 24 24          	mov    %eax,0x24(%rsp)
   1991c:	eb 99                	jmp    198b7 <mpi_miller_rabin+0x397>
   1991e:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   19923:	4c 89 fe             	mov    %r15,%rsi
   19926:	4c 89 ef             	mov    %r13,%rdi
   19929:	e8 02 d1 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1992e:	85 c0                	test   %eax,%eax
   19930:	0f 84 00 01 00 00    	je     19a36 <mpi_miller_rabin+0x516>
   19936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1993d:	00 00 00 
   19940:	c7 44 24 24 f2 ff ff 	movl   $0xfffffff2,0x24(%rsp)
   19947:	ff 
   19948:	e9 6a ff ff ff       	jmpq   198b7 <mpi_miller_rabin+0x397>
   1994d:	0f 1f 00             	nopl   (%rax)
   19950:	48 83 c1 01          	add    $0x1,%rcx
   19954:	48 39 ce             	cmp    %rcx,%rsi
   19957:	0f 85 1d fd ff ff    	jne    1967a <mpi_miller_rabin+0x15a>
   1995d:	31 ed                	xor    %ebp,%ebp
   1995f:	e9 3c fd ff ff       	jmpq   196a0 <mpi_miller_rabin+0x180>
   19964:	0f 1f 40 00          	nopl   0x0(%rax)
   19968:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   1996f:	00 
   19970:	48 89 ea             	mov    %rbp,%rdx
   19973:	e8 a8 1f 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   19978:	e9 58 fd ff ff       	jmpq   196d5 <mpi_miller_rabin+0x1b5>
   1997d:	48 83 7c 24 48 01    	cmpq   $0x1,0x48(%rsp)
   19983:	bb 01 00 00 00       	mov    $0x1,%ebx
   19988:	76 99                	jbe    19923 <mpi_miller_rabin+0x403>
   1998a:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
   1998f:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   19994:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   19999:	e9 80 00 00 00       	jmpq   19a1e <mpi_miller_rabin+0x4fe>
   1999e:	66 90                	xchg   %ax,%ax
   199a0:	4c 89 ea             	mov    %r13,%rdx
   199a3:	4c 89 ee             	mov    %r13,%rsi
   199a6:	48 89 ef             	mov    %rbp,%rdi
   199a9:	e8 c2 d5 ff ff       	callq  16f70 <mbedtls_mpi_mul_mpi>
   199ae:	85 c0                	test   %eax,%eax
   199b0:	0f 85 62 ff ff ff    	jne    19918 <mpi_miller_rabin+0x3f8>
   199b6:	4c 89 f2             	mov    %r14,%rdx
   199b9:	48 89 ee             	mov    %rbp,%rsi
   199bc:	4c 89 ef             	mov    %r13,%rdi
   199bf:	e8 1c e6 ff ff       	callq  17fe0 <mbedtls_mpi_mod_mpi>
   199c4:	85 c0                	test   %eax,%eax
   199c6:	0f 85 4c ff ff ff    	jne    19918 <mpi_miller_rabin+0x3f8>
   199cc:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   199d1:	4c 89 e6             	mov    %r12,%rsi
   199d4:	4c 89 ef             	mov    %r13,%rdi
   199d7:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   199de:	00 01 00 00 00 
   199e3:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   199ea:	01 00 00 00 
   199ee:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   199f5:	00 01 00 00 00 
   199fa:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19a01:	00 
   19a02:	e8 29 d0 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19a07:	85 c0                	test   %eax,%eax
   19a09:	0f 84 0f ff ff ff    	je     1991e <mpi_miller_rabin+0x3fe>
   19a0f:	48 83 c3 01          	add    $0x1,%rbx
   19a13:	48 3b 5c 24 48       	cmp    0x48(%rsp),%rbx
   19a18:	0f 84 00 ff ff ff    	je     1991e <mpi_miller_rabin+0x3fe>
   19a1e:	4c 89 fe             	mov    %r15,%rsi
   19a21:	4c 89 ef             	mov    %r13,%rdi
   19a24:	e8 07 d0 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19a29:	85 c0                	test   %eax,%eax
   19a2b:	0f 85 6f ff ff ff    	jne    199a0 <mpi_miller_rabin+0x480>
   19a31:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   19a36:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19a3b:	4c 89 ef             	mov    %r13,%rdi
   19a3e:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19a43:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19a4a:	00 01 00 00 00 
   19a4f:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19a56:	01 00 00 00 
   19a5a:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   19a61:	00 01 00 00 00 
   19a66:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19a6d:	00 
   19a6e:	e8 bd cf ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19a73:	85 c0                	test   %eax,%eax
   19a75:	0f 85 ee fd ff ff    	jne    19869 <mpi_miller_rabin+0x349>
   19a7b:	e9 c0 fe ff ff       	jmpq   19940 <mpi_miller_rabin+0x420>
   19a80:	e8 db 97 fe ff       	callq  3260 <__stack_chk_fail@plt>
   19a85:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19a8c:	00 00 00 00 

0000000000019a90 <mbedtls_mpi_random>:
   19a90:	f3 0f 1e fa          	endbr64 
   19a94:	48 85 f6             	test   %rsi,%rsi
   19a97:	78 6e                	js     19b07 <mbedtls_mpi_random+0x77>
   19a99:	41 56                	push   %r14
   19a9b:	4d 89 c6             	mov    %r8,%r14
   19a9e:	41 55                	push   %r13
   19aa0:	49 89 cd             	mov    %rcx,%r13
   19aa3:	41 54                	push   %r12
   19aa5:	49 89 fc             	mov    %rdi,%r12
   19aa8:	48 89 d7             	mov    %rdx,%rdi
   19aab:	55                   	push   %rbp
   19aac:	48 89 f5             	mov    %rsi,%rbp
   19aaf:	53                   	push   %rbx
   19ab0:	48 89 d3             	mov    %rdx,%rbx
   19ab3:	e8 68 d0 ff ff       	callq  16b20 <mbedtls_mpi_cmp_int>
   19ab8:	85 c0                	test   %eax,%eax
   19aba:	7e 44                	jle    19b00 <mbedtls_mpi_random+0x70>
   19abc:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   19ac0:	4c 89 e7             	mov    %r12,%rdi
   19ac3:	e8 88 c7 ff ff       	callq  16250 <mbedtls_mpi_resize_clear>
   19ac8:	85 c0                	test   %eax,%eax
   19aca:	74 0c                	je     19ad8 <mbedtls_mpi_random+0x48>
   19acc:	5b                   	pop    %rbx
   19acd:	5d                   	pop    %rbp
   19ace:	41 5c                	pop    %r12
   19ad0:	41 5d                	pop    %r13
   19ad2:	41 5e                	pop    %r14
   19ad4:	c3                   	retq   
   19ad5:	0f 1f 00             	nopl   (%rax)
   19ad8:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
   19add:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   19ae1:	4d 89 f1             	mov    %r14,%r9
   19ae4:	4d 89 e8             	mov    %r13,%r8
   19ae7:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   19aec:	5b                   	pop    %rbx
   19aed:	48 89 ee             	mov    %rbp,%rsi
   19af0:	5d                   	pop    %rbp
   19af1:	41 5c                	pop    %r12
   19af3:	41 5d                	pop    %r13
   19af5:	41 5e                	pop    %r14
   19af7:	e9 f4 24 00 00       	jmpq   1bff0 <mbedtls_mpi_core_random>
   19afc:	0f 1f 40 00          	nopl   0x0(%rax)
   19b00:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   19b05:	eb c5                	jmp    19acc <mbedtls_mpi_random+0x3c>
   19b07:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   19b0c:	c3                   	retq   
   19b0d:	0f 1f 00             	nopl   (%rax)

0000000000019b10 <mbedtls_mpi_inv_mod>:
   19b10:	f3 0f 1e fa          	endbr64 
   19b14:	41 57                	push   %r15
   19b16:	41 56                	push   %r14
   19b18:	49 89 f6             	mov    %rsi,%r14
   19b1b:	41 55                	push   %r13
   19b1d:	41 54                	push   %r12
   19b1f:	55                   	push   %rbp
   19b20:	53                   	push   %rbx
   19b21:	48 89 d3             	mov    %rdx,%rbx
   19b24:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   19b2b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   19b30:	4c 8d a4 24 60 01 00 	lea    0x160(%rsp),%r12
   19b37:	00 
   19b38:	48 89 d7             	mov    %rdx,%rdi
   19b3b:	4c 89 e6             	mov    %r12,%rsi
   19b3e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19b45:	00 00 
   19b47:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   19b4e:	00 
   19b4f:	31 c0                	xor    %eax,%eax
   19b51:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   19b58:	00 
   19b59:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
   19b60:	00 01 00 00 00 
   19b65:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   19b6c:	01 00 00 00 
   19b70:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   19b77:	00 01 00 00 00 
   19b7c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19b81:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   19b88:	00 
   19b89:	e8 a2 ce ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19b8e:	85 c0                	test   %eax,%eax
   19b90:	0f 8e 2a 05 00 00    	jle    1a0c0 <mbedtls_mpi_inv_mod+0x5b0>
   19b96:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   19b9b:	48 89 da             	mov    %rbx,%rdx
   19b9e:	4c 89 f6             	mov    %r14,%rsi
   19ba1:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   19ba8:	00 
   19ba9:	48 89 ef             	mov    %rbp,%rdi
   19bac:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   19bb3:	00 00 
   19bb5:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   19bbc:	00 00 
   19bbe:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
   19bc5:	01 00 00 00 
   19bc9:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
   19bd0:	00 00 00 00 00 
   19bd5:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   19bdc:	00 00 00 00 00 
   19be1:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   19be8:	01 00 00 00 
   19bec:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
   19bf3:	00 00 00 00 00 
   19bf8:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
   19bff:	00 00 00 00 00 
   19c04:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
   19c0b:	01 00 00 00 
   19c0f:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   19c16:	00 00 00 00 00 
   19c1b:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   19c22:	00 00 00 00 00 
   19c27:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   19c2e:	00 
   19c2f:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19c36:	00 00 
   19c38:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   19c3f:	00 00 
   19c41:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
   19c48:	01 00 00 00 
   19c4c:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   19c53:	00 00 00 00 00 
   19c58:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
   19c5f:	00 00 00 00 00 
   19c64:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19c6b:	01 00 00 00 
   19c6f:	48 c7 84 24 08 01 00 	movq   $0x0,0x108(%rsp)
   19c76:	00 00 00 00 00 
   19c7b:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
   19c82:	00 00 00 00 00 
   19c87:	c7 84 24 20 01 00 00 	movl   $0x1,0x120(%rsp)
   19c8e:	01 00 00 00 
   19c92:	48 c7 84 24 28 01 00 	movq   $0x0,0x128(%rsp)
   19c99:	00 00 00 00 00 
   19c9e:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   19ca5:	00 00 00 00 00 
   19caa:	c7 84 24 40 01 00 00 	movl   $0x1,0x140(%rsp)
   19cb1:	01 00 00 00 
   19cb5:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   19cbc:	00 00 00 00 00 
   19cc1:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
   19cc8:	00 00 00 00 00 
   19ccd:	e8 9e f4 ff ff       	callq  19170 <mbedtls_mpi_gcd>
   19cd2:	85 c0                	test   %eax,%eax
   19cd4:	75 48                	jne    19d1e <mbedtls_mpi_inv_mod+0x20e>
   19cd6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19cdb:	4c 89 e6             	mov    %r12,%rsi
   19cde:	48 89 ef             	mov    %rbp,%rdi
   19ce1:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
   19ce8:	00 01 00 00 00 
   19ced:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   19cf4:	01 00 00 00 
   19cf8:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   19cff:	00 01 00 00 00 
   19d04:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   19d0b:	00 
   19d0c:	e8 1f cd ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   19d11:	85 c0                	test   %eax,%eax
   19d13:	0f 84 ef 00 00 00    	je     19e08 <mbedtls_mpi_inv_mod+0x2f8>
   19d19:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   19d1e:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   19d23:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   19d2a:	00 
   19d2b:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   19d32:	00 
   19d33:	48 8d 8c 24 00 01 00 	lea    0x100(%rsp),%rcx
   19d3a:	00 
   19d3b:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
   19d42:	00 
   19d43:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   19d48:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
   19d4f:	00 
   19d50:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
   19d57:	00 
   19d58:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
   19d5f:	00 
   19d60:	4c 89 ef             	mov    %r13,%rdi
   19d63:	89 44 24 10          	mov    %eax,0x10(%rsp)
   19d67:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
   19d6c:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   19d71:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   19d76:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   19d7b:	e8 d0 c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19d80:	4c 89 f7             	mov    %r14,%rdi
   19d83:	e8 c8 c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19d88:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   19d8d:	4c 89 df             	mov    %r11,%rdi
   19d90:	e8 bb c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19d95:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   19d9a:	4c 89 d7             	mov    %r10,%rdi
   19d9d:	e8 ae c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19da2:	48 89 ef             	mov    %rbp,%rdi
   19da5:	e8 a6 c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19daa:	4c 89 ff             	mov    %r15,%rdi
   19dad:	e8 9e c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19db2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19db7:	e8 94 c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19dbc:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   19dc1:	4c 89 c7             	mov    %r8,%rdi
   19dc4:	e8 87 c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19dc9:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   19dce:	4c 89 cf             	mov    %r9,%rdi
   19dd1:	e8 7a c3 ff ff       	callq  16150 <mbedtls_mpi_free>
   19dd6:	8b 44 24 10          	mov    0x10(%rsp),%eax
   19dda:	48 8b 8c 24 88 01 00 	mov    0x188(%rsp),%rcx
   19de1:	00 
   19de2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   19de9:	00 00 
   19deb:	0f 85 3e 05 00 00    	jne    1a32f <mbedtls_mpi_inv_mod+0x81f>
   19df1:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   19df8:	5b                   	pop    %rbx
   19df9:	5d                   	pop    %rbp
   19dfa:	41 5c                	pop    %r12
   19dfc:	41 5d                	pop    %r13
   19dfe:	41 5e                	pop    %r14
   19e00:	41 5f                	pop    %r15
   19e02:	c3                   	retq   
   19e03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19e08:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   19e0d:	4c 89 f6             	mov    %r14,%rsi
   19e10:	48 89 da             	mov    %rbx,%rdx
   19e13:	4c 89 ef             	mov    %r13,%rdi
   19e16:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   19e1d:	00 
   19e1e:	e8 bd e1 ff ff       	callq  17fe0 <mbedtls_mpi_mod_mpi>
   19e23:	85 c0                	test   %eax,%eax
   19e25:	0f 85 00 ff ff ff    	jne    19d2b <mbedtls_mpi_inv_mod+0x21b>
   19e2b:	4c 89 ee             	mov    %r13,%rsi
   19e2e:	4c 89 f7             	mov    %r14,%rdi
   19e31:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   19e38:	00 
   19e39:	e8 a2 c5 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   19e3e:	85 c0                	test   %eax,%eax
   19e40:	0f 85 ed fe ff ff    	jne    19d33 <mbedtls_mpi_inv_mod+0x223>
   19e46:	48 89 de             	mov    %rbx,%rsi
   19e49:	4c 89 ff             	mov    %r15,%rdi
   19e4c:	e8 8f c5 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   19e51:	85 c0                	test   %eax,%eax
   19e53:	0f 85 da fe ff ff    	jne    19d33 <mbedtls_mpi_inv_mod+0x223>
   19e59:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   19e60:	00 
   19e61:	48 89 de             	mov    %rbx,%rsi
   19e64:	48 89 c7             	mov    %rax,%rdi
   19e67:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19e6c:	e8 6f c5 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   19e71:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
   19e78:	00 
   19e79:	85 c0                	test   %eax,%eax
   19e7b:	0f 85 c7 fe ff ff    	jne    19d48 <mbedtls_mpi_inv_mod+0x238>
   19e81:	4c 89 df             	mov    %r11,%rdi
   19e84:	be 01 00 00 00       	mov    $0x1,%esi
   19e89:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   19e8e:	e8 bd c6 ff ff       	callq  16550 <mbedtls_mpi_lset>
   19e93:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   19e98:	85 c0                	test   %eax,%eax
   19e9a:	0f 85 a8 fe ff ff    	jne    19d48 <mbedtls_mpi_inv_mod+0x238>
   19ea0:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
   19ea7:	00 
   19ea8:	31 f6                	xor    %esi,%esi
   19eaa:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   19eaf:	4c 89 d7             	mov    %r10,%rdi
   19eb2:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   19eb7:	e8 94 c6 ff ff       	callq  16550 <mbedtls_mpi_lset>
   19ebc:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   19ec1:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   19ec6:	85 c0                	test   %eax,%eax
   19ec8:	0f 85 82 fe ff ff    	jne    19d50 <mbedtls_mpi_inv_mod+0x240>
   19ece:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
   19ed5:	00 
   19ed6:	31 f6                	xor    %esi,%esi
   19ed8:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   19edd:	4c 89 c7             	mov    %r8,%rdi
   19ee0:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   19ee5:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   19eea:	e8 61 c6 ff ff       	callq  16550 <mbedtls_mpi_lset>
   19eef:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   19ef4:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   19ef9:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
   19f00:	00 
   19f01:	85 c0                	test   %eax,%eax
   19f03:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   19f08:	0f 85 52 fe ff ff    	jne    19d60 <mbedtls_mpi_inv_mod+0x250>
   19f0e:	4c 89 cf             	mov    %r9,%rdi
   19f11:	be 01 00 00 00       	mov    $0x1,%esi
   19f16:	4c 89 5c 24 38       	mov    %r11,0x38(%rsp)
   19f1b:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   19f20:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   19f25:	e8 26 c6 ff ff       	callq  16550 <mbedtls_mpi_lset>
   19f2a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   19f2f:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   19f34:	85 c0                	test   %eax,%eax
   19f36:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   19f3b:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
   19f40:	0f 85 1a fe ff ff    	jne    19d60 <mbedtls_mpi_inv_mod+0x250>
   19f46:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   19f4b:	4c 89 c3             	mov    %r8,%rbx
   19f4e:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   19f53:	4c 89 cd             	mov    %r9,%rbp
   19f56:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   19f5b:	4d 89 d4             	mov    %r10,%r12
   19f5e:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   19f63:	4d 89 de             	mov    %r11,%r14
   19f66:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   19f6d:	00 
   19f6e:	f6 07 01             	testb  $0x1,(%rdi)
   19f71:	0f 85 b3 00 00 00    	jne    1a02a <mbedtls_mpi_inv_mod+0x51a>
   19f77:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   19f7e:	00 
   19f7f:	48 85 f6             	test   %rsi,%rsi
   19f82:	0f 85 6c 01 00 00    	jne    1a0f4 <mbedtls_mpi_inv_mod+0x5e4>
   19f88:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   19f8f:	00 
   19f90:	f6 00 01             	testb  $0x1,(%rax)
   19f93:	75 0d                	jne    19fa2 <mbedtls_mpi_inv_mod+0x492>
   19f95:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   19f9c:	00 
   19f9d:	f6 00 01             	testb  $0x1,(%rax)
   19fa0:	74 36                	je     19fd8 <mbedtls_mpi_inv_mod+0x4c8>
   19fa2:	b9 01 00 00 00       	mov    $0x1,%ecx
   19fa7:	4c 89 fa             	mov    %r15,%rdx
   19faa:	4c 89 f6             	mov    %r14,%rsi
   19fad:	4c 89 f7             	mov    %r14,%rdi
   19fb0:	e8 1b ce ff ff       	callq  16dd0 <add_sub_mpi>
   19fb5:	85 c0                	test   %eax,%eax
   19fb7:	0f 85 9d 01 00 00    	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   19fbd:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   19fc2:	4c 89 ea             	mov    %r13,%rdx
   19fc5:	4c 89 e6             	mov    %r12,%rsi
   19fc8:	4c 89 e7             	mov    %r12,%rdi
   19fcb:	e8 00 ce ff ff       	callq  16dd0 <add_sub_mpi>
   19fd0:	85 c0                	test   %eax,%eax
   19fd2:	0f 85 82 01 00 00    	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   19fd8:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   19fdf:	00 
   19fe0:	48 85 f6             	test   %rsi,%rsi
   19fe3:	0f 85 1a 01 00 00    	jne    1a103 <mbedtls_mpi_inv_mod+0x5f3>
   19fe9:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   19ff0:	00 
   19ff1:	48 85 f6             	test   %rsi,%rsi
   19ff4:	0f 84 6c ff ff ff    	je     19f66 <mbedtls_mpi_inv_mod+0x456>
   19ffa:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   1a001:	00 
   1a002:	ba 01 00 00 00       	mov    $0x1,%edx
   1a007:	e8 14 19 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1a00c:	e9 55 ff ff ff       	jmpq   19f66 <mbedtls_mpi_inv_mod+0x456>
   1a011:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a018:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
   1a01f:	00 
   1a020:	ba 01 00 00 00       	mov    $0x1,%edx
   1a025:	e8 f6 18 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1a02a:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
   1a031:	00 
   1a032:	f6 07 01             	testb  $0x1,(%rdi)
   1a035:	0f 85 3a 01 00 00    	jne    1a175 <mbedtls_mpi_inv_mod+0x665>
   1a03b:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
   1a042:	00 
   1a043:	48 85 f6             	test   %rsi,%rsi
   1a046:	0f 85 84 00 00 00    	jne    1a0d0 <mbedtls_mpi_inv_mod+0x5c0>
   1a04c:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   1a053:	00 
   1a054:	f6 00 01             	testb  $0x1,(%rax)
   1a057:	75 0d                	jne    1a066 <mbedtls_mpi_inv_mod+0x556>
   1a059:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
   1a060:	00 
   1a061:	f6 00 01             	testb  $0x1,(%rax)
   1a064:	74 36                	je     1a09c <mbedtls_mpi_inv_mod+0x58c>
   1a066:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a06b:	4c 89 fa             	mov    %r15,%rdx
   1a06e:	48 89 de             	mov    %rbx,%rsi
   1a071:	48 89 df             	mov    %rbx,%rdi
   1a074:	e8 57 cd ff ff       	callq  16dd0 <add_sub_mpi>
   1a079:	85 c0                	test   %eax,%eax
   1a07b:	0f 85 d9 00 00 00    	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   1a081:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1a086:	4c 89 ea             	mov    %r13,%rdx
   1a089:	48 89 ee             	mov    %rbp,%rsi
   1a08c:	48 89 ef             	mov    %rbp,%rdi
   1a08f:	e8 3c cd ff ff       	callq  16dd0 <add_sub_mpi>
   1a094:	85 c0                	test   %eax,%eax
   1a096:	0f 85 be 00 00 00    	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   1a09c:	48 8b b4 24 28 01 00 	mov    0x128(%rsp),%rsi
   1a0a3:	00 
   1a0a4:	48 85 f6             	test   %rsi,%rsi
   1a0a7:	75 37                	jne    1a0e0 <mbedtls_mpi_inv_mod+0x5d0>
   1a0a9:	48 8b b4 24 48 01 00 	mov    0x148(%rsp),%rsi
   1a0b0:	00 
   1a0b1:	48 85 f6             	test   %rsi,%rsi
   1a0b4:	0f 84 70 ff ff ff    	je     1a02a <mbedtls_mpi_inv_mod+0x51a>
   1a0ba:	e9 59 ff ff ff       	jmpq   1a018 <mbedtls_mpi_inv_mod+0x508>
   1a0bf:	90                   	nop
   1a0c0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1a0c5:	e9 10 fd ff ff       	jmpq   19dda <mbedtls_mpi_inv_mod+0x2ca>
   1a0ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a0d0:	ba 01 00 00 00       	mov    $0x1,%edx
   1a0d5:	e8 46 18 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1a0da:	e9 6d ff ff ff       	jmpq   1a04c <mbedtls_mpi_inv_mod+0x53c>
   1a0df:	90                   	nop
   1a0e0:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
   1a0e7:	00 
   1a0e8:	ba 01 00 00 00       	mov    $0x1,%edx
   1a0ed:	e8 2e 18 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1a0f2:	eb b5                	jmp    1a0a9 <mbedtls_mpi_inv_mod+0x599>
   1a0f4:	ba 01 00 00 00       	mov    $0x1,%edx
   1a0f9:	e8 22 18 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1a0fe:	e9 85 fe ff ff       	jmpq   19f88 <mbedtls_mpi_inv_mod+0x478>
   1a103:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
   1a10a:	00 
   1a10b:	ba 01 00 00 00       	mov    $0x1,%edx
   1a110:	e8 0b 18 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1a115:	e9 cf fe ff ff       	jmpq   19fe9 <mbedtls_mpi_inv_mod+0x4d9>
   1a11a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1a11f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1a124:	48 89 f7             	mov    %rsi,%rdi
   1a127:	e8 a4 cc ff ff       	callq  16dd0 <add_sub_mpi>
   1a12c:	85 c0                	test   %eax,%eax
   1a12e:	75 2a                	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   1a130:	83 c9 ff             	or     $0xffffffff,%ecx
   1a133:	4c 89 f2             	mov    %r14,%rdx
   1a136:	48 89 de             	mov    %rbx,%rsi
   1a139:	48 89 df             	mov    %rbx,%rdi
   1a13c:	e8 8f cc ff ff       	callq  16dd0 <add_sub_mpi>
   1a141:	85 c0                	test   %eax,%eax
   1a143:	75 15                	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   1a145:	83 c9 ff             	or     $0xffffffff,%ecx
   1a148:	4c 89 e2             	mov    %r12,%rdx
   1a14b:	48 89 ee             	mov    %rbp,%rsi
   1a14e:	48 89 ef             	mov    %rbp,%rdi
   1a151:	e8 7a cc ff ff       	callq  16dd0 <add_sub_mpi>
   1a156:	85 c0                	test   %eax,%eax
   1a158:	74 6d                	je     1a1c7 <mbedtls_mpi_inv_mod+0x6b7>
   1a15a:	4d 89 f3             	mov    %r14,%r11
   1a15d:	49 89 e9             	mov    %rbp,%r9
   1a160:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   1a165:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a16a:	4d 89 e2             	mov    %r12,%r10
   1a16d:	49 89 d8             	mov    %rbx,%r8
   1a170:	e9 eb fb ff ff       	jmpq   19d60 <mbedtls_mpi_inv_mod+0x250>
   1a175:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1a17a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1a17f:	4c 89 ce             	mov    %r9,%rsi
   1a182:	e8 a9 c8 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1a187:	83 c9 ff             	or     $0xffffffff,%ecx
   1a18a:	85 c0                	test   %eax,%eax
   1a18c:	78 8c                	js     1a11a <mbedtls_mpi_inv_mod+0x60a>
   1a18e:	4c 89 ca             	mov    %r9,%rdx
   1a191:	48 89 fe             	mov    %rdi,%rsi
   1a194:	e8 37 cc ff ff       	callq  16dd0 <add_sub_mpi>
   1a199:	85 c0                	test   %eax,%eax
   1a19b:	75 bd                	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   1a19d:	83 c9 ff             	or     $0xffffffff,%ecx
   1a1a0:	48 89 da             	mov    %rbx,%rdx
   1a1a3:	4c 89 f6             	mov    %r14,%rsi
   1a1a6:	4c 89 f7             	mov    %r14,%rdi
   1a1a9:	e8 22 cc ff ff       	callq  16dd0 <add_sub_mpi>
   1a1ae:	85 c0                	test   %eax,%eax
   1a1b0:	75 a8                	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   1a1b2:	83 c9 ff             	or     $0xffffffff,%ecx
   1a1b5:	48 89 ea             	mov    %rbp,%rdx
   1a1b8:	4c 89 e6             	mov    %r12,%rsi
   1a1bb:	4c 89 e7             	mov    %r12,%rdi
   1a1be:	e8 0d cc ff ff       	callq  16dd0 <add_sub_mpi>
   1a1c3:	85 c0                	test   %eax,%eax
   1a1c5:	75 93                	jne    1a15a <mbedtls_mpi_inv_mod+0x64a>
   1a1c7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a1cc:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1a1d1:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1a1d8:	00 00 00 00 00 
   1a1dd:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   1a1e4:	01 00 00 00 
   1a1e8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1a1ed:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   1a1f4:	00 01 00 00 00 
   1a1f9:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1a200:	00 
   1a201:	e8 2a c8 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1a206:	85 c0                	test   %eax,%eax
   1a208:	0f 85 58 fd ff ff    	jne    19f66 <mbedtls_mpi_inv_mod+0x456>
   1a20e:	4d 89 e2             	mov    %r12,%r10
   1a211:	49 89 d8             	mov    %rbx,%r8
   1a214:	4d 89 f3             	mov    %r14,%r11
   1a217:	49 89 e9             	mov    %rbp,%r9
   1a21a:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1a21f:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   1a224:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   1a229:	4c 89 c5             	mov    %r8,%rbp
   1a22c:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   1a231:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   1a236:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1a23b:	eb 1b                	jmp    1a258 <mbedtls_mpi_inv_mod+0x748>
   1a23d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a242:	48 89 da             	mov    %rbx,%rdx
   1a245:	48 89 ee             	mov    %rbp,%rsi
   1a248:	48 89 ef             	mov    %rbp,%rdi
   1a24b:	e8 80 cb ff ff       	callq  16dd0 <add_sub_mpi>
   1a250:	85 c0                	test   %eax,%eax
   1a252:	0f 85 dc 00 00 00    	jne    1a334 <mbedtls_mpi_inv_mod+0x824>
   1a258:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a25d:	4c 89 e6             	mov    %r12,%rsi
   1a260:	48 89 ef             	mov    %rbp,%rdi
   1a263:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1a26a:	00 00 00 00 00 
   1a26f:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   1a276:	01 00 00 00 
   1a27a:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   1a281:	00 01 00 00 00 
   1a286:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1a28d:	00 
   1a28e:	e8 9d c7 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1a293:	85 c0                	test   %eax,%eax
   1a295:	78 a6                	js     1a23d <mbedtls_mpi_inv_mod+0x72d>
   1a297:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a29c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1a2a1:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a2a6:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1a2ab:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1a2b0:	48 89 fd             	mov    %rdi,%rbp
   1a2b3:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1a2b8:	4d 89 dc             	mov    %r11,%r12
   1a2bb:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   1a2c0:	eb 15                	jmp    1a2d7 <mbedtls_mpi_inv_mod+0x7c7>
   1a2c2:	83 c9 ff             	or     $0xffffffff,%ecx
   1a2c5:	48 89 da             	mov    %rbx,%rdx
   1a2c8:	48 89 ee             	mov    %rbp,%rsi
   1a2cb:	48 89 ef             	mov    %rbp,%rdi
   1a2ce:	e8 fd ca ff ff       	callq  16dd0 <add_sub_mpi>
   1a2d3:	85 c0                	test   %eax,%eax
   1a2d5:	75 79                	jne    1a350 <mbedtls_mpi_inv_mod+0x840>
   1a2d7:	48 89 de             	mov    %rbx,%rsi
   1a2da:	48 89 ef             	mov    %rbp,%rdi
   1a2dd:	e8 4e c7 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1a2e2:	85 c0                	test   %eax,%eax
   1a2e4:	79 dc                	jns    1a2c2 <mbedtls_mpi_inv_mod+0x7b2>
   1a2e6:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1a2eb:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1a2f0:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1a2f5:	48 89 fe             	mov    %rdi,%rsi
   1a2f8:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1a2fd:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   1a302:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1a307:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   1a30c:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   1a311:	e8 ca c0 ff ff       	callq  163e0 <mbedtls_mpi_copy>
   1a316:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1a31b:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1a320:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a325:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   1a32a:	e9 31 fa ff ff       	jmpq   19d60 <mbedtls_mpi_inv_mod+0x250>
   1a32f:	e8 2c 8f fe ff       	callq  3260 <__stack_chk_fail@plt>
   1a334:	49 89 e8             	mov    %rbp,%r8
   1a337:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1a33c:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a341:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a346:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1a34b:	e9 10 fa ff ff       	jmpq   19d60 <mbedtls_mpi_inv_mod+0x250>
   1a350:	49 89 e8             	mov    %rbp,%r8
   1a353:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1a358:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   1a35d:	4d 89 e3             	mov    %r12,%r11
   1a360:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1a365:	e9 f6 f9 ff ff       	jmpq   19d60 <mbedtls_mpi_inv_mod+0x250>
   1a36a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001a370 <mbedtls_mpi_is_prime_ext>:
   1a370:	f3 0f 1e fa          	endbr64 
   1a374:	41 55                	push   %r13
   1a376:	49 89 cd             	mov    %rcx,%r13
   1a379:	41 54                	push   %r12
   1a37b:	49 89 d4             	mov    %rdx,%r12
   1a37e:	55                   	push   %rbp
   1a37f:	53                   	push   %rbx
   1a380:	89 f3                	mov    %esi,%ebx
   1a382:	48 83 ec 58          	sub    $0x58,%rsp
   1a386:	4c 8b 57 10          	mov    0x10(%rdi),%r10
   1a38a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a391:	00 00 
   1a393:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a398:	31 c0                	xor    %eax,%eax
   1a39a:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1a39e:	4c 8d 4c 24 20       	lea    0x20(%rsp),%r9
   1a3a3:	48 89 e5             	mov    %rsp,%rbp
   1a3a6:	4c 89 ce             	mov    %r9,%rsi
   1a3a9:	48 89 ef             	mov    %rbp,%rdi
   1a3ac:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   1a3b3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a3b8:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   1a3bd:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1a3c2:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a3c9:	00 00 
   1a3cb:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   1a3d2:	00 
   1a3d3:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1a3da:	00 00 
   1a3dc:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a3e1:	e8 4a c6 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1a3e6:	85 c0                	test   %eax,%eax
   1a3e8:	74 7e                	je     1a468 <mbedtls_mpi_is_prime_ext+0xf8>
   1a3ea:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   1a3f1:	00 00 
   1a3f3:	4c 89 ce             	mov    %r9,%rsi
   1a3f6:	e8 35 c6 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1a3fb:	85 c0                	test   %eax,%eax
   1a3fd:	74 69                	je     1a468 <mbedtls_mpi_is_prime_ext+0xf8>
   1a3ff:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   1a406:	00 00 
   1a408:	4c 89 ce             	mov    %r9,%rsi
   1a40b:	e8 20 c6 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1a410:	85 c0                	test   %eax,%eax
   1a412:	74 4c                	je     1a460 <mbedtls_mpi_is_prime_ext+0xf0>
   1a414:	41 f6 02 01          	testb  $0x1,(%r10)
   1a418:	74 4e                	je     1a468 <mbedtls_mpi_is_prime_ext+0xf8>
   1a41a:	e8 d1 e1 ff ff       	callq  185f0 <mpi_check_small_factors.part.0>
   1a41f:	85 c0                	test   %eax,%eax
   1a421:	74 25                	je     1a448 <mbedtls_mpi_is_prime_ext+0xd8>
   1a423:	83 f8 01             	cmp    $0x1,%eax
   1a426:	74 38                	je     1a460 <mbedtls_mpi_is_prime_ext+0xf0>
   1a428:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   1a42d:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1a434:	00 00 
   1a436:	75 37                	jne    1a46f <mbedtls_mpi_is_prime_ext+0xff>
   1a438:	48 83 c4 58          	add    $0x58,%rsp
   1a43c:	5b                   	pop    %rbx
   1a43d:	5d                   	pop    %rbp
   1a43e:	41 5c                	pop    %r12
   1a440:	41 5d                	pop    %r13
   1a442:	c3                   	retq   
   1a443:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a448:	48 63 f3             	movslq %ebx,%rsi
   1a44b:	4c 89 e9             	mov    %r13,%rcx
   1a44e:	4c 89 e2             	mov    %r12,%rdx
   1a451:	48 89 ef             	mov    %rbp,%rdi
   1a454:	e8 c7 f0 ff ff       	callq  19520 <mpi_miller_rabin>
   1a459:	eb cd                	jmp    1a428 <mbedtls_mpi_is_prime_ext+0xb8>
   1a45b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a460:	31 c0                	xor    %eax,%eax
   1a462:	eb c4                	jmp    1a428 <mbedtls_mpi_is_prime_ext+0xb8>
   1a464:	0f 1f 40 00          	nopl   0x0(%rax)
   1a468:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1a46d:	eb b9                	jmp    1a428 <mbedtls_mpi_is_prime_ext+0xb8>
   1a46f:	e8 ec 8d fe ff       	callq  3260 <__stack_chk_fail@plt>
   1a474:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a47b:	00 00 00 00 
   1a47f:	90                   	nop

000000000001a480 <mbedtls_mpi_gen_prime>:
   1a480:	f3 0f 1e fa          	endbr64 
   1a484:	41 57                	push   %r15
   1a486:	41 56                	push   %r14
   1a488:	41 55                	push   %r13
   1a48a:	41 54                	push   %r12
   1a48c:	55                   	push   %rbp
   1a48d:	53                   	push   %rbx
   1a48e:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1a495:	48 89 34 24          	mov    %rsi,(%rsp)
   1a499:	89 54 24 14          	mov    %edx,0x14(%rsp)
   1a49d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a4a4:	00 00 
   1a4a6:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1a4ab:	31 c0                	xor    %eax,%eax
   1a4ad:	48 8d 46 fd          	lea    -0x3(%rsi),%rax
   1a4b1:	48 3d fd 1f 00 00    	cmp    $0x1ffd,%rax
   1a4b7:	0f 87 3f 04 00 00    	ja     1a8fc <mbedtls_mpi_gen_prime+0x47c>
   1a4bd:	31 c0                	xor    %eax,%eax
   1a4bf:	40 f6 c6 3f          	test   $0x3f,%sil
   1a4c3:	49 89 ff             	mov    %rdi,%r15
   1a4c6:	48 89 cb             	mov    %rcx,%rbx
   1a4c9:	0f 95 c0             	setne  %al
   1a4cc:	89 d7                	mov    %edx,%edi
   1a4ce:	48 89 f1             	mov    %rsi,%rcx
   1a4d1:	48 c1 ee 06          	shr    $0x6,%rsi
   1a4d5:	48 01 f0             	add    %rsi,%rax
   1a4d8:	83 e7 02             	and    $0x2,%edi
   1a4db:	4c 89 c5             	mov    %r8,%rbp
   1a4de:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   1a4e5:	00 
   1a4e6:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1a4ed:	00 00 
   1a4ef:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a4f6:	00 00 
   1a4f8:	0f 85 02 01 00 00    	jne    1a600 <mbedtls_mpi_gen_prime+0x180>
   1a4fe:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%rsp)
   1a505:	00 
   1a506:	48 81 f9 13 05 00 00 	cmp    $0x513,%rcx
   1a50d:	77 19                	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a50f:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%rsp)
   1a516:	00 
   1a517:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
   1a51e:	0f 86 1c 03 00 00    	jbe    1a840 <mbedtls_mpi_gen_prime+0x3c0>
   1a524:	0f 1f 40 00          	nopl   0x0(%rax)
   1a528:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
   1a52f:	00 
   1a530:	48 c1 e0 06          	shl    $0x6,%rax
   1a534:	49 bd 84 64 de f9 33 	movabs $0xb504f333f9de6484,%r13
   1a53b:	f3 04 b5 
   1a53e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a543:	48 2b 04 24          	sub    (%rsp),%rax
   1a547:	4d 8d 74 24 f8       	lea    -0x8(%r12),%r14
   1a54c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a558:	48 89 e9             	mov    %rbp,%rcx
   1a55b:	48 89 da             	mov    %rbx,%rdx
   1a55e:	4c 89 e6             	mov    %r12,%rsi
   1a561:	4c 89 ff             	mov    %r15,%rdi
   1a564:	e8 47 ef ff ff       	callq  194b0 <mbedtls_mpi_fill_random>
   1a569:	85 c0                	test   %eax,%eax
   1a56b:	75 51                	jne    1a5be <mbedtls_mpi_gen_prime+0x13e>
   1a56d:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1a571:	4e 39 2c 37          	cmp    %r13,(%rdi,%r14,1)
   1a575:	76 e1                	jbe    1a558 <mbedtls_mpi_gen_prime+0xd8>
   1a577:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1a57c:	48 39 0c 24          	cmp    %rcx,(%rsp)
   1a580:	73 0d                	jae    1a58f <mbedtls_mpi_gen_prime+0x10f>
   1a582:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1a586:	48 85 f6             	test   %rsi,%rsi
   1a589:	0f 85 21 01 00 00    	jne    1a6b0 <mbedtls_mpi_gen_prime+0x230>
   1a58f:	48 8b 07             	mov    (%rdi),%rax
   1a592:	48 89 c2             	mov    %rax,%rdx
   1a595:	48 83 ca 01          	or     $0x1,%rdx
   1a599:	48 89 17             	mov    %rdx,(%rdi)
   1a59c:	f6 44 24 14 01       	testb  $0x1,0x14(%rsp)
   1a5a1:	0f 85 21 01 00 00    	jne    1a6c8 <mbedtls_mpi_gen_prime+0x248>
   1a5a7:	8b 74 24 10          	mov    0x10(%rsp),%esi
   1a5ab:	48 89 e9             	mov    %rbp,%rcx
   1a5ae:	48 89 da             	mov    %rbx,%rdx
   1a5b1:	4c 89 ff             	mov    %r15,%rdi
   1a5b4:	e8 b7 fd ff ff       	callq  1a370 <mbedtls_mpi_is_prime_ext>
   1a5b9:	83 f8 f2             	cmp    $0xfffffff2,%eax
   1a5bc:	74 9a                	je     1a558 <mbedtls_mpi_gen_prime+0xd8>
   1a5be:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a5c3:	4c 89 e7             	mov    %r12,%rdi
   1a5c6:	89 04 24             	mov    %eax,(%rsp)
   1a5c9:	e8 82 bb ff ff       	callq  16150 <mbedtls_mpi_free>
   1a5ce:	8b 04 24             	mov    (%rsp),%eax
   1a5d1:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
   1a5d6:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1a5dd:	00 00 
   1a5df:	0f 85 21 03 00 00    	jne    1a906 <mbedtls_mpi_gen_prime+0x486>
   1a5e5:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1a5ec:	5b                   	pop    %rbx
   1a5ed:	5d                   	pop    %rbp
   1a5ee:	41 5c                	pop    %r12
   1a5f0:	41 5d                	pop    %r13
   1a5f2:	41 5e                	pop    %r14
   1a5f4:	41 5f                	pop    %r15
   1a5f6:	c3                   	retq   
   1a5f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a5fe:	00 00 
   1a600:	48 8b 0c 24          	mov    (%rsp),%rcx
   1a604:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   1a60b:	00 
   1a60c:	48 81 f9 a9 05 00 00 	cmp    $0x5a9,%rcx
   1a613:	0f 87 0f ff ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a619:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%rsp)
   1a620:	00 
   1a621:	48 81 f9 7d 04 00 00 	cmp    $0x47d,%rcx
   1a628:	0f 87 fa fe ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a62e:	c7 44 24 10 06 00 00 	movl   $0x6,0x10(%rsp)
   1a635:	00 
   1a636:	48 81 f9 e7 03 00 00 	cmp    $0x3e7,%rcx
   1a63d:	0f 87 e5 fe ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a643:	c7 44 24 10 07 00 00 	movl   $0x7,0x10(%rsp)
   1a64a:	00 
   1a64b:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
   1a652:	0f 87 d0 fe ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a658:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
   1a65f:	00 
   1a660:	48 81 f9 ed 02 00 00 	cmp    $0x2ed,%rcx
   1a667:	0f 87 bb fe ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a66d:	c7 44 24 10 0d 00 00 	movl   $0xd,0x10(%rsp)
   1a674:	00 
   1a675:	48 81 f9 f3 01 00 00 	cmp    $0x1f3,%rcx
   1a67c:	0f 87 a6 fe ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a682:	c7 44 24 10 1c 00 00 	movl   $0x1c,0x10(%rsp)
   1a689:	00 
   1a68a:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
   1a691:	0f 87 91 fe ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a697:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
   1a69e:	19 c9                	sbb    %ecx,%ecx
   1a6a0:	83 e1 0b             	and    $0xb,%ecx
   1a6a3:	83 c1 28             	add    $0x28,%ecx
   1a6a6:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   1a6aa:	e9 79 fe ff ff       	jmpq   1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a6af:	90                   	nop
   1a6b0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1a6b5:	e8 66 12 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1a6ba:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1a6be:	e9 cc fe ff ff       	jmpq   1a58f <mbedtls_mpi_gen_prime+0x10f>
   1a6c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a6c8:	48 83 c8 03          	or     $0x3,%rax
   1a6cc:	ba 03 00 00 00       	mov    $0x3,%edx
   1a6d1:	4c 89 fe             	mov    %r15,%rsi
   1a6d4:	48 89 07             	mov    %rax,(%rdi)
   1a6d7:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1a6dc:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a6e1:	e8 3a da ff ff       	callq  18120 <mbedtls_mpi_mod_int>
   1a6e6:	85 c0                	test   %eax,%eax
   1a6e8:	0f 85 d5 fe ff ff    	jne    1a5c3 <mbedtls_mpi_gen_prime+0x143>
   1a6ee:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1a6f3:	48 85 c0             	test   %rax,%rax
   1a6f6:	0f 84 9b 01 00 00    	je     1a897 <mbedtls_mpi_gen_prime+0x417>
   1a6fc:	48 83 f8 01          	cmp    $0x1,%rax
   1a700:	0f 84 eb 01 00 00    	je     1a8f1 <mbedtls_mpi_gen_prime+0x471>
   1a706:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a70b:	4c 89 fe             	mov    %r15,%rsi
   1a70e:	4c 89 e7             	mov    %r12,%rdi
   1a711:	e8 ca bc ff ff       	callq  163e0 <mbedtls_mpi_copy>
   1a716:	85 c0                	test   %eax,%eax
   1a718:	0f 85 a5 fe ff ff    	jne    1a5c3 <mbedtls_mpi_gen_prime+0x143>
   1a71e:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1a723:	48 85 f6             	test   %rsi,%rsi
   1a726:	0f 85 b1 01 00 00    	jne    1a8dd <mbedtls_mpi_gen_prime+0x45d>
   1a72c:	48 63 44 24 10       	movslq 0x10(%rsp),%rax
   1a731:	48 89 04 24          	mov    %rax,(%rsp)
   1a735:	e9 8d 00 00 00       	jmpq   1a7c7 <mbedtls_mpi_gen_prime+0x347>
   1a73a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a740:	83 f8 f2             	cmp    $0xfffffff2,%eax
   1a743:	0f 85 7a fe ff ff    	jne    1a5c3 <mbedtls_mpi_gen_prime+0x143>
   1a749:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
   1a74e:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   1a753:	4c 89 fe             	mov    %r15,%rsi
   1a756:	4c 89 ff             	mov    %r15,%rdi
   1a759:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a75e:	4c 89 ea             	mov    %r13,%rdx
   1a761:	48 c7 44 24 70 0c 00 	movq   $0xc,0x70(%rsp)
   1a768:	00 00 
   1a76a:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a771:	00 
   1a772:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1a779:	00 00 
   1a77b:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   1a780:	e8 4b c6 ff ff       	callq  16dd0 <add_sub_mpi>
   1a785:	85 c0                	test   %eax,%eax
   1a787:	0f 85 36 fe ff ff    	jne    1a5c3 <mbedtls_mpi_gen_prime+0x143>
   1a78d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a792:	4c 89 ea             	mov    %r13,%rdx
   1a795:	4c 89 e6             	mov    %r12,%rsi
   1a798:	4c 89 e7             	mov    %r12,%rdi
   1a79b:	48 c7 44 24 70 06 00 	movq   $0x6,0x70(%rsp)
   1a7a2:	00 00 
   1a7a4:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a7ab:	00 
   1a7ac:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1a7b3:	00 00 
   1a7b5:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   1a7ba:	e8 11 c6 ff ff       	callq  16dd0 <add_sub_mpi>
   1a7bf:	85 c0                	test   %eax,%eax
   1a7c1:	0f 85 fc fd ff ff    	jne    1a5c3 <mbedtls_mpi_gen_prime+0x143>
   1a7c7:	49 8b 47 10          	mov    0x10(%r15),%rax
   1a7cb:	f6 00 01             	testb  $0x1,(%rax)
   1a7ce:	0f 84 75 ff ff ff    	je     1a749 <mbedtls_mpi_gen_prime+0x2c9>
   1a7d4:	4c 89 ff             	mov    %r15,%rdi
   1a7d7:	e8 14 de ff ff       	callq  185f0 <mpi_check_small_factors.part.0>
   1a7dc:	85 c0                	test   %eax,%eax
   1a7de:	0f 85 5c ff ff ff    	jne    1a740 <mbedtls_mpi_gen_prime+0x2c0>
   1a7e4:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1a7e9:	f6 00 01             	testb  $0x1,(%rax)
   1a7ec:	0f 84 57 ff ff ff    	je     1a749 <mbedtls_mpi_gen_prime+0x2c9>
   1a7f2:	4c 89 e7             	mov    %r12,%rdi
   1a7f5:	e8 f6 dd ff ff       	callq  185f0 <mpi_check_small_factors.part.0>
   1a7fa:	85 c0                	test   %eax,%eax
   1a7fc:	0f 85 3e ff ff ff    	jne    1a740 <mbedtls_mpi_gen_prime+0x2c0>
   1a802:	48 8b 34 24          	mov    (%rsp),%rsi
   1a806:	48 89 e9             	mov    %rbp,%rcx
   1a809:	48 89 da             	mov    %rbx,%rdx
   1a80c:	4c 89 ff             	mov    %r15,%rdi
   1a80f:	e8 0c ed ff ff       	callq  19520 <mpi_miller_rabin>
   1a814:	85 c0                	test   %eax,%eax
   1a816:	0f 85 24 ff ff ff    	jne    1a740 <mbedtls_mpi_gen_prime+0x2c0>
   1a81c:	48 8b 34 24          	mov    (%rsp),%rsi
   1a820:	48 89 e9             	mov    %rbp,%rcx
   1a823:	48 89 da             	mov    %rbx,%rdx
   1a826:	4c 89 e7             	mov    %r12,%rdi
   1a829:	e8 f2 ec ff ff       	callq  19520 <mpi_miller_rabin>
   1a82e:	85 c0                	test   %eax,%eax
   1a830:	0f 85 0a ff ff ff    	jne    1a740 <mbedtls_mpi_gen_prime+0x2c0>
   1a836:	e9 88 fd ff ff       	jmpq   1a5c3 <mbedtls_mpi_gen_prime+0x143>
   1a83b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a840:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   1a847:	00 
   1a848:	48 81 f9 89 02 00 00 	cmp    $0x289,%rcx
   1a84f:	0f 87 d3 fc ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a855:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
   1a85c:	00 
   1a85d:	48 81 f9 5d 01 00 00 	cmp    $0x15d,%rcx
   1a864:	0f 87 be fc ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a86a:	c7 44 24 10 0c 00 00 	movl   $0xc,0x10(%rsp)
   1a871:	00 
   1a872:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
   1a879:	0f 87 a9 fc ff ff    	ja     1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a87f:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
   1a886:	19 c9                	sbb    %ecx,%ecx
   1a888:	83 e1 09             	and    $0x9,%ecx
   1a88b:	83 c1 12             	add    $0x12,%ecx
   1a88e:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   1a892:	e9 91 fc ff ff       	jmpq   1a528 <mbedtls_mpi_gen_prime+0xa8>
   1a897:	48 c7 44 24 70 08 00 	movq   $0x8,0x70(%rsp)
   1a89e:	00 00 
   1a8a0:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
   1a8a5:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1a8aa:	4c 89 fe             	mov    %r15,%rsi
   1a8ad:	4c 89 ff             	mov    %r15,%rdi
   1a8b0:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a8b5:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a8bc:	00 
   1a8bd:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1a8c4:	00 00 
   1a8c6:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1a8cb:	e8 00 c5 ff ff       	callq  16dd0 <add_sub_mpi>
   1a8d0:	85 c0                	test   %eax,%eax
   1a8d2:	0f 84 2e fe ff ff    	je     1a706 <mbedtls_mpi_gen_prime+0x286>
   1a8d8:	e9 e6 fc ff ff       	jmpq   1a5c3 <mbedtls_mpi_gen_prime+0x143>
   1a8dd:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1a8e2:	ba 01 00 00 00       	mov    $0x1,%edx
   1a8e7:	e8 34 10 00 00       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1a8ec:	e9 3b fe ff ff       	jmpq   1a72c <mbedtls_mpi_gen_prime+0x2ac>
   1a8f1:	48 c7 44 24 70 04 00 	movq   $0x4,0x70(%rsp)
   1a8f8:	00 00 
   1a8fa:	eb a4                	jmp    1a8a0 <mbedtls_mpi_gen_prime+0x420>
   1a8fc:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1a901:	e9 cb fc ff ff       	jmpq   1a5d1 <mbedtls_mpi_gen_prime+0x151>
   1a906:	e8 55 89 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1a90b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a910 <mbedtls_mpi_self_test>:
   1a910:	f3 0f 1e fa          	endbr64 
   1a914:	41 57                	push   %r15
   1a916:	48 8d 15 f3 a9 00 00 	lea    0xa9f3(%rip),%rdx        # 25310 <aria_sb1+0x1d0>
   1a91d:	be 10 00 00 00       	mov    $0x10,%esi
   1a922:	41 56                	push   %r14
   1a924:	41 55                	push   %r13
   1a926:	41 54                	push   %r12
   1a928:	55                   	push   %rbp
   1a929:	53                   	push   %rbx
   1a92a:	89 fb                	mov    %edi,%ebx
   1a92c:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1a933:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a93a:	00 00 
   1a93c:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   1a943:	00 
   1a944:	31 c0                	xor    %eax,%eax
   1a946:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   1a94b:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   1a952:	00 
   1a953:	48 89 ef             	mov    %rbp,%rdi
   1a956:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a95d:	00 
   1a95e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1a965:	00 00 
   1a967:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a96e:	00 00 
   1a970:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   1a977:	00 00 
   1a979:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   1a980:	00 00 
   1a982:	c7 44 24 70 01 00 00 	movl   $0x1,0x70(%rsp)
   1a989:	00 
   1a98a:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   1a991:	00 00 
   1a993:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   1a99a:	00 00 00 00 00 
   1a99f:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   1a9a6:	01 00 00 00 
   1a9aa:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   1a9b1:	00 00 00 00 00 
   1a9b6:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   1a9bd:	00 00 00 00 00 
   1a9c2:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   1a9c9:	01 00 00 00 
   1a9cd:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   1a9d4:	00 00 00 00 00 
   1a9d9:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   1a9e0:	00 00 00 00 00 
   1a9e5:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   1a9ec:	01 00 00 00 
   1a9f0:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1a9f7:	00 00 00 00 00 
   1a9fc:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1aa03:	00 00 00 00 00 
   1aa08:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   1aa0f:	01 00 00 00 
   1aa13:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1aa1a:	00 00 00 00 00 
   1aa1f:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   1aa26:	00 00 00 00 00 
   1aa2b:	e8 f0 c7 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1aa30:	85 c0                	test   %eax,%eax
   1aa32:	0f 84 b8 00 00 00    	je     1aaf0 <mbedtls_mpi_self_test+0x1e0>
   1aa38:	41 89 c7             	mov    %eax,%r15d
   1aa3b:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1aa40:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
   1aa45:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1aa4c:	00 
   1aa4d:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1aa54:	00 
   1aa55:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1aa5c:	00 
   1aa5d:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1aa64:	00 
   1aa65:	85 db                	test   %ebx,%ebx
   1aa67:	0f 85 d4 00 00 00    	jne    1ab41 <mbedtls_mpi_self_test+0x231>
   1aa6d:	48 89 ef             	mov    %rbp,%rdi
   1aa70:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1aa75:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1aa7a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1aa7f:	e8 cc b6 ff ff       	callq  16150 <mbedtls_mpi_free>
   1aa84:	4c 89 e7             	mov    %r12,%rdi
   1aa87:	e8 c4 b6 ff ff       	callq  16150 <mbedtls_mpi_free>
   1aa8c:	4c 89 ef             	mov    %r13,%rdi
   1aa8f:	e8 bc b6 ff ff       	callq  16150 <mbedtls_mpi_free>
   1aa94:	4c 89 f7             	mov    %r14,%rdi
   1aa97:	e8 b4 b6 ff ff       	callq  16150 <mbedtls_mpi_free>
   1aa9c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1aaa1:	4c 89 d7             	mov    %r10,%rdi
   1aaa4:	e8 a7 b6 ff ff       	callq  16150 <mbedtls_mpi_free>
   1aaa9:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1aaae:	4c 89 cf             	mov    %r9,%rdi
   1aab1:	e8 9a b6 ff ff       	callq  16150 <mbedtls_mpi_free>
   1aab6:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1aabb:	4c 89 df             	mov    %r11,%rdi
   1aabe:	e8 8d b6 ff ff       	callq  16150 <mbedtls_mpi_free>
   1aac3:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   1aaca:	00 
   1aacb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1aad2:	00 00 
   1aad4:	0f 85 f1 08 00 00    	jne    1b3cb <mbedtls_mpi_self_test+0xabb>
   1aada:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   1aae1:	44 89 f8             	mov    %r15d,%eax
   1aae4:	5b                   	pop    %rbx
   1aae5:	5d                   	pop    %rbp
   1aae6:	41 5c                	pop    %r12
   1aae8:	41 5d                	pop    %r13
   1aaea:	41 5e                	pop    %r14
   1aaec:	41 5f                	pop    %r15
   1aaee:	c3                   	retq   
   1aaef:	90                   	nop
   1aaf0:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1aaf5:	be 10 00 00 00       	mov    $0x10,%esi
   1aafa:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
   1aaff:	48 8d 15 92 a8 00 00 	lea    0xa892(%rip),%rdx        # 25398 <aria_sb1+0x258>
   1ab06:	4c 89 e7             	mov    %r12,%rdi
   1ab09:	e8 12 c7 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1ab0e:	41 89 c7             	mov    %eax,%r15d
   1ab11:	85 c0                	test   %eax,%eax
   1ab13:	0f 84 a7 00 00 00    	je     1abc0 <mbedtls_mpi_self_test+0x2b0>
   1ab19:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1ab20:	00 
   1ab21:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1ab28:	00 
   1ab29:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1ab30:	00 
   1ab31:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ab38:	00 
   1ab39:	85 db                	test   %ebx,%ebx
   1ab3b:	0f 84 2c ff ff ff    	je     1aa6d <mbedtls_mpi_self_test+0x15d>
   1ab41:	44 89 fa             	mov    %r15d,%edx
   1ab44:	48 8d 35 1d aa 00 00 	lea    0xaa1d(%rip),%rsi        # 25568 <aria_sb1+0x428>
   1ab4b:	bf 01 00 00 00       	mov    $0x1,%edi
   1ab50:	31 c0                	xor    %eax,%eax
   1ab52:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ab57:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ab5c:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ab61:	e8 da 87 fe ff       	callq  3340 <__printf_chk@plt>
   1ab66:	48 89 ef             	mov    %rbp,%rdi
   1ab69:	e8 e2 b5 ff ff       	callq  16150 <mbedtls_mpi_free>
   1ab6e:	4c 89 e7             	mov    %r12,%rdi
   1ab71:	e8 da b5 ff ff       	callq  16150 <mbedtls_mpi_free>
   1ab76:	4c 89 ef             	mov    %r13,%rdi
   1ab79:	e8 d2 b5 ff ff       	callq  16150 <mbedtls_mpi_free>
   1ab7e:	4c 89 f7             	mov    %r14,%rdi
   1ab81:	e8 ca b5 ff ff       	callq  16150 <mbedtls_mpi_free>
   1ab86:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1ab8b:	4c 89 d7             	mov    %r10,%rdi
   1ab8e:	e8 bd b5 ff ff       	callq  16150 <mbedtls_mpi_free>
   1ab93:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1ab98:	4c 89 cf             	mov    %r9,%rdi
   1ab9b:	e8 b0 b5 ff ff       	callq  16150 <mbedtls_mpi_free>
   1aba0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1aba5:	4c 89 df             	mov    %r11,%rdi
   1aba8:	e8 a3 b5 ff ff       	callq  16150 <mbedtls_mpi_free>
   1abad:	bf 0a 00 00 00       	mov    $0xa,%edi
   1abb2:	e8 39 86 fe ff       	callq  31f0 <putchar@plt>
   1abb7:	e9 07 ff ff ff       	jmpq   1aac3 <mbedtls_mpi_self_test+0x1b3>
   1abbc:	0f 1f 40 00          	nopl   0x0(%rax)
   1abc0:	48 8d 15 59 a8 00 00 	lea    0xa859(%rip),%rdx        # 25420 <aria_sb1+0x2e0>
   1abc7:	be 10 00 00 00       	mov    $0x10,%esi
   1abcc:	4c 89 ef             	mov    %r13,%rdi
   1abcf:	e8 4c c6 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1abd4:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1abdb:	00 
   1abdc:	41 89 c7             	mov    %eax,%r15d
   1abdf:	85 c0                	test   %eax,%eax
   1abe1:	74 1d                	je     1ac00 <mbedtls_mpi_self_test+0x2f0>
   1abe3:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1abea:	00 
   1abeb:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1abf2:	00 
   1abf3:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1abfa:	00 
   1abfb:	e9 65 fe ff ff       	jmpq   1aa65 <mbedtls_mpi_self_test+0x155>
   1ac00:	4c 89 ea             	mov    %r13,%rdx
   1ac03:	48 89 ee             	mov    %rbp,%rsi
   1ac06:	4c 89 f7             	mov    %r14,%rdi
   1ac09:	e8 62 c3 ff ff       	callq  16f70 <mbedtls_mpi_mul_mpi>
   1ac0e:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1ac15:	00 
   1ac16:	41 89 c7             	mov    %eax,%r15d
   1ac19:	85 c0                	test   %eax,%eax
   1ac1b:	0f 85 cf 03 00 00    	jne    1aff0 <mbedtls_mpi_self_test+0x6e0>
   1ac21:	4c 89 cf             	mov    %r9,%rdi
   1ac24:	be 10 00 00 00       	mov    $0x10,%esi
   1ac29:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ac2e:	48 8d 15 53 a8 00 00 	lea    0xa853(%rip),%rdx        # 25488 <aria_sb1+0x348>
   1ac35:	e8 e6 c5 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1ac3a:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ac3f:	85 c0                	test   %eax,%eax
   1ac41:	41 89 c7             	mov    %eax,%r15d
   1ac44:	0f 85 a6 03 00 00    	jne    1aff0 <mbedtls_mpi_self_test+0x6e0>
   1ac4a:	85 db                	test   %ebx,%ebx
   1ac4c:	0f 85 c6 03 00 00    	jne    1b018 <mbedtls_mpi_self_test+0x708>
   1ac52:	4c 89 ce             	mov    %r9,%rsi
   1ac55:	4c 89 f7             	mov    %r14,%rdi
   1ac58:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ac5d:	e8 ce bd ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1ac62:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ac67:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1ac6e:	00 
   1ac6f:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ac76:	00 
   1ac77:	85 c0                	test   %eax,%eax
   1ac79:	0f 85 21 04 00 00    	jne    1b0a0 <mbedtls_mpi_self_test+0x790>
   1ac7f:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ac86:	00 
   1ac87:	4c 89 e9             	mov    %r13,%rcx
   1ac8a:	48 89 ea             	mov    %rbp,%rdx
   1ac8d:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ac92:	4c 89 d6             	mov    %r10,%rsi
   1ac95:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ac9a:	e8 f1 c9 ff ff       	callq  17690 <mbedtls_mpi_div_mpi>
   1ac9f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1aca4:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1aca9:	85 c0                	test   %eax,%eax
   1acab:	41 89 c7             	mov    %eax,%r15d
   1acae:	0f 85 54 03 00 00    	jne    1b008 <mbedtls_mpi_self_test+0x6f8>
   1acb4:	4c 89 cf             	mov    %r9,%rdi
   1acb7:	be 10 00 00 00       	mov    $0x10,%esi
   1acbc:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1acc1:	48 8d 15 90 a9 00 00 	lea    0xa990(%rip),%rdx        # 25658 <aria_sb1+0x518>
   1acc8:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1accd:	e8 4e c5 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1acd2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1acd7:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1acdc:	85 c0                	test   %eax,%eax
   1acde:	41 89 c7             	mov    %eax,%r15d
   1ace1:	0f 85 21 03 00 00    	jne    1b008 <mbedtls_mpi_self_test+0x6f8>
   1ace7:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1acee:	00 
   1acef:	be 10 00 00 00       	mov    $0x10,%esi
   1acf4:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1acf9:	48 8d 15 80 a9 00 00 	lea    0xa980(%rip),%rdx        # 25680 <aria_sb1+0x540>
   1ad00:	4c 89 df             	mov    %r11,%rdi
   1ad03:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ad08:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1ad0d:	e8 0e c5 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1ad12:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1ad17:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ad1c:	85 c0                	test   %eax,%eax
   1ad1e:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1ad23:	0f 85 08 04 00 00    	jne    1b131 <mbedtls_mpi_self_test+0x821>
   1ad29:	4c 89 ce             	mov    %r9,%rsi
   1ad2c:	4c 89 f7             	mov    %r14,%rdi
   1ad2f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ad34:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ad39:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ad3e:	e8 ed bc ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1ad43:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ad48:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ad4d:	85 c0                	test   %eax,%eax
   1ad4f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ad54:	0f 85 46 03 00 00    	jne    1b0a0 <mbedtls_mpi_self_test+0x790>
   1ad5a:	4c 89 de             	mov    %r11,%rsi
   1ad5d:	4c 89 d7             	mov    %r10,%rdi
   1ad60:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1ad65:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1ad6a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ad6f:	e8 bc bc ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1ad74:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1ad79:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1ad7e:	85 c0                	test   %eax,%eax
   1ad80:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1ad85:	0f 85 15 03 00 00    	jne    1b0a0 <mbedtls_mpi_self_test+0x790>
   1ad8b:	45 31 c0             	xor    %r8d,%r8d
   1ad8e:	4c 89 e9             	mov    %r13,%rcx
   1ad91:	4c 89 e2             	mov    %r12,%rdx
   1ad94:	48 89 ee             	mov    %rbp,%rsi
   1ad97:	4c 89 f7             	mov    %r14,%rdi
   1ad9a:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ad9f:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ada4:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ada9:	e8 e2 d8 ff ff       	callq  18690 <mbedtls_mpi_exp_mod>
   1adae:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1adb3:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1adb8:	85 c0                	test   %eax,%eax
   1adba:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1adbf:	41 89 c7             	mov    %eax,%r15d
   1adc2:	0f 85 a5 fc ff ff    	jne    1aa6d <mbedtls_mpi_self_test+0x15d>
   1adc8:	4c 89 cf             	mov    %r9,%rdi
   1adcb:	be 10 00 00 00       	mov    $0x10,%esi
   1add0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1add5:	48 8d 15 1c a8 00 00 	lea    0xa81c(%rip),%rdx        # 255f8 <aria_sb1+0x4b8>
   1addc:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ade1:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ade6:	e8 35 c4 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1adeb:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1adf0:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1adf5:	85 c0                	test   %eax,%eax
   1adf7:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1adfc:	41 89 c7             	mov    %eax,%r15d
   1adff:	0f 85 68 fc ff ff    	jne    1aa6d <mbedtls_mpi_self_test+0x15d>
   1ae05:	4c 89 ce             	mov    %r9,%rsi
   1ae08:	4c 89 f7             	mov    %r14,%rdi
   1ae0b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ae10:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ae15:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ae1a:	e8 11 bc ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1ae1f:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ae24:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ae29:	85 c0                	test   %eax,%eax
   1ae2b:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ae30:	0f 85 6a 02 00 00    	jne    1b0a0 <mbedtls_mpi_self_test+0x790>
   1ae36:	4c 89 ea             	mov    %r13,%rdx
   1ae39:	48 89 ee             	mov    %rbp,%rsi
   1ae3c:	4c 89 f7             	mov    %r14,%rdi
   1ae3f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ae44:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ae49:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ae4e:	e8 bd ec ff ff       	callq  19b10 <mbedtls_mpi_inv_mod>
   1ae53:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1ae58:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1ae5d:	85 c0                	test   %eax,%eax
   1ae5f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ae64:	41 89 c7             	mov    %eax,%r15d
   1ae67:	0f 85 00 fc ff ff    	jne    1aa6d <mbedtls_mpi_self_test+0x15d>
   1ae6d:	4c 89 cf             	mov    %r9,%rdi
   1ae70:	be 10 00 00 00       	mov    $0x10,%esi
   1ae75:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ae7a:	48 8d 15 0f a7 00 00 	lea    0xa70f(%rip),%rdx        # 25590 <aria_sb1+0x450>
   1ae81:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ae86:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ae8b:	e8 90 c3 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1ae90:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ae95:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ae9a:	85 c0                	test   %eax,%eax
   1ae9c:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1aea1:	41 89 c0             	mov    %eax,%r8d
   1aea4:	0f 85 39 05 00 00    	jne    1b3e3 <mbedtls_mpi_self_test+0xad3>
   1aeaa:	4c 89 ce             	mov    %r9,%rsi
   1aead:	4c 89 f7             	mov    %r14,%rdi
   1aeb0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1aeb5:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1aeba:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1aebf:	e8 6c bb ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1aec4:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1aec9:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1aece:	85 c0                	test   %eax,%eax
   1aed0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1aed5:	0f 85 c5 01 00 00    	jne    1b0a0 <mbedtls_mpi_self_test+0x790>
   1aedb:	48 8d 05 fe a7 00 00 	lea    0xa7fe(%rip),%rax        # 256e0 <gcd_pairs>
   1aee2:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   1aee9:	00 
   1aeea:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1aeef:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1aef4:	4c 89 f7             	mov    %r14,%rdi
   1aef7:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   1aefc:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   1af01:	48 63 30             	movslq (%rax),%rsi
   1af04:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1af09:	e8 42 b6 ff ff       	callq  16550 <mbedtls_mpi_lset>
   1af0e:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1af13:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1af18:	85 c0                	test   %eax,%eax
   1af1a:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1af1f:	41 89 c7             	mov    %eax,%r15d
   1af22:	0f 85 3d fb ff ff    	jne    1aa65 <mbedtls_mpi_self_test+0x155>
   1af28:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1af2d:	4c 89 d7             	mov    %r10,%rdi
   1af30:	48 63 70 04          	movslq 0x4(%rax),%rsi
   1af34:	e8 17 b6 ff ff       	callq  16550 <mbedtls_mpi_lset>
   1af39:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1af3e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1af43:	85 c0                	test   %eax,%eax
   1af45:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1af4a:	41 89 c7             	mov    %eax,%r15d
   1af4d:	0f 85 12 fb ff ff    	jne    1aa65 <mbedtls_mpi_self_test+0x155>
   1af53:	4c 89 d2             	mov    %r10,%rdx
   1af56:	4c 89 f6             	mov    %r14,%rsi
   1af59:	48 89 ef             	mov    %rbp,%rdi
   1af5c:	e8 0f e2 ff ff       	callq  19170 <mbedtls_mpi_gcd>
   1af61:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1af66:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1af6b:	85 c0                	test   %eax,%eax
   1af6d:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1af72:	41 89 c7             	mov    %eax,%r15d
   1af75:	0f 85 ea fa ff ff    	jne    1aa65 <mbedtls_mpi_self_test+0x155>
   1af7b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1af80:	48 89 ef             	mov    %rbp,%rdi
   1af83:	48 63 70 08          	movslq 0x8(%rax),%rsi
   1af87:	e8 94 bb ff ff       	callq  16b20 <mbedtls_mpi_cmp_int>
   1af8c:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1af91:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1af96:	85 c0                	test   %eax,%eax
   1af98:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1af9d:	41 89 c7             	mov    %eax,%r15d
   1afa0:	0f 85 45 04 00 00    	jne    1b3eb <mbedtls_mpi_self_test+0xadb>
   1afa6:	83 44 24 08 01       	addl   $0x1,0x8(%rsp)
   1afab:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1afaf:	48 83 44 24 10 0c    	addq   $0xc,0x10(%rsp)
   1afb5:	83 f8 03             	cmp    $0x3,%eax
   1afb8:	0f 85 31 ff ff ff    	jne    1aeef <mbedtls_mpi_self_test+0x5df>
   1afbe:	85 db                	test   %ebx,%ebx
   1afc0:	0f 84 a7 fa ff ff    	je     1aa6d <mbedtls_mpi_self_test+0x15d>
   1afc6:	48 8d 3d 15 82 00 00 	lea    0x8215(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1afcd:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1afd2:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1afd7:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1afdc:	e8 1f 82 fe ff       	callq  3200 <puts@plt>
   1afe1:	e9 80 fb ff ff       	jmpq   1ab66 <mbedtls_mpi_self_test+0x256>
   1afe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1afed:	00 00 00 
   1aff0:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1aff7:	00 
   1aff8:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1afff:	00 
   1b000:	e9 60 fa ff ff       	jmpq   1aa65 <mbedtls_mpi_self_test+0x155>
   1b005:	0f 1f 00             	nopl   (%rax)
   1b008:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b00f:	00 
   1b010:	e9 58 fa ff ff       	jmpq   1aa6d <mbedtls_mpi_self_test+0x15d>
   1b015:	0f 1f 00             	nopl   (%rax)
   1b018:	48 8d 35 57 a2 00 00 	lea    0xa257(%rip),%rsi        # 25276 <aria_sb1+0x136>
   1b01f:	bf 01 00 00 00       	mov    $0x1,%edi
   1b024:	31 c0                	xor    %eax,%eax
   1b026:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b02b:	e8 10 83 fe ff       	callq  3340 <__printf_chk@plt>
   1b030:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b035:	4c 89 f7             	mov    %r14,%rdi
   1b038:	4c 89 ce             	mov    %r9,%rsi
   1b03b:	e8 f0 b9 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1b040:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b045:	85 c0                	test   %eax,%eax
   1b047:	75 62                	jne    1b0ab <mbedtls_mpi_self_test+0x79b>
   1b049:	48 8d 3d 92 81 00 00 	lea    0x8192(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1b050:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b055:	e8 a6 81 fe ff       	callq  3200 <puts@plt>
   1b05a:	48 89 ea             	mov    %rbp,%rdx
   1b05d:	4c 89 e9             	mov    %r13,%rcx
   1b060:	4c 89 f7             	mov    %r14,%rdi
   1b063:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1b06a:	00 
   1b06b:	4c 89 d6             	mov    %r10,%rsi
   1b06e:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b073:	e8 18 c6 ff ff       	callq  17690 <mbedtls_mpi_div_mpi>
   1b078:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b07d:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b082:	85 c0                	test   %eax,%eax
   1b084:	89 c2                	mov    %eax,%edx
   1b086:	74 6d                	je     1b0f5 <mbedtls_mpi_self_test+0x7e5>
   1b088:	41 89 c7             	mov    %eax,%r15d
   1b08b:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b092:	00 
   1b093:	e9 ac fa ff ff       	jmpq   1ab44 <mbedtls_mpi_self_test+0x234>
   1b098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b09f:	00 
   1b0a0:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b0a6:	e9 c2 f9 ff ff       	jmpq   1aa6d <mbedtls_mpi_self_test+0x15d>
   1b0ab:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b0b2:	00 
   1b0b3:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1b0ba:	00 
   1b0bb:	48 8d 3d fb 89 00 00 	lea    0x89fb(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   1b0c2:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b0c7:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b0cd:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b0d2:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b0d7:	e8 24 81 fe ff       	callq  3200 <puts@plt>
   1b0dc:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b0e1:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b0e6:	ba 01 00 00 00       	mov    $0x1,%edx
   1b0eb:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b0f0:	e9 4f fa ff ff       	jmpq   1ab44 <mbedtls_mpi_self_test+0x234>
   1b0f5:	4c 89 cf             	mov    %r9,%rdi
   1b0f8:	be 10 00 00 00       	mov    $0x10,%esi
   1b0fd:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b102:	48 8d 15 4f a5 00 00 	lea    0xa54f(%rip),%rdx        # 25658 <aria_sb1+0x518>
   1b109:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b10e:	e8 0d c1 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1b113:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b118:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b11d:	85 c0                	test   %eax,%eax
   1b11f:	74 18                	je     1b139 <mbedtls_mpi_self_test+0x829>
   1b121:	41 89 c7             	mov    %eax,%r15d
   1b124:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b12b:	00 
   1b12c:	e9 10 fa ff ff       	jmpq   1ab41 <mbedtls_mpi_self_test+0x231>
   1b131:	41 89 c7             	mov    %eax,%r15d
   1b134:	e9 2c f9 ff ff       	jmpq   1aa65 <mbedtls_mpi_self_test+0x155>
   1b139:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b140:	00 
   1b141:	be 10 00 00 00       	mov    $0x10,%esi
   1b146:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b14b:	48 8d 15 2e a5 00 00 	lea    0xa52e(%rip),%rdx        # 25680 <aria_sb1+0x540>
   1b152:	4c 89 df             	mov    %r11,%rdi
   1b155:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b15a:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1b15f:	e8 bc c0 ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1b164:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1b169:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b16e:	85 c0                	test   %eax,%eax
   1b170:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b175:	75 ba                	jne    1b131 <mbedtls_mpi_self_test+0x821>
   1b177:	48 8d 35 12 a1 00 00 	lea    0xa112(%rip),%rsi        # 25290 <aria_sb1+0x150>
   1b17e:	bf 01 00 00 00       	mov    $0x1,%edi
   1b183:	31 c0                	xor    %eax,%eax
   1b185:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b18a:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b18f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b194:	e8 a7 81 fe ff       	callq  3340 <__printf_chk@plt>
   1b199:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b19e:	4c 89 f7             	mov    %r14,%rdi
   1b1a1:	4c 89 ce             	mov    %r9,%rsi
   1b1a4:	e8 87 b8 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1b1a9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b1ae:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b1b3:	85 c0                	test   %eax,%eax
   1b1b5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b1ba:	0f 85 fb fe ff ff    	jne    1b0bb <mbedtls_mpi_self_test+0x7ab>
   1b1c0:	4c 89 de             	mov    %r11,%rsi
   1b1c3:	4c 89 d7             	mov    %r10,%rdi
   1b1c6:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b1cb:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1b1d0:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b1d5:	e8 56 b8 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1b1da:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b1df:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1b1e4:	85 c0                	test   %eax,%eax
   1b1e6:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b1eb:	0f 85 ca fe ff ff    	jne    1b0bb <mbedtls_mpi_self_test+0x7ab>
   1b1f1:	48 8d 3d ea 7f 00 00 	lea    0x7fea(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1b1f8:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b1fd:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b202:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b207:	e8 f4 7f fe ff       	callq  3200 <puts@plt>
   1b20c:	45 31 c0             	xor    %r8d,%r8d
   1b20f:	4c 89 e9             	mov    %r13,%rcx
   1b212:	4c 89 e2             	mov    %r12,%rdx
   1b215:	48 89 ee             	mov    %rbp,%rsi
   1b218:	4c 89 f7             	mov    %r14,%rdi
   1b21b:	e8 70 d4 ff ff       	callq  18690 <mbedtls_mpi_exp_mod>
   1b220:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b225:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b22a:	85 c0                	test   %eax,%eax
   1b22c:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b231:	41 89 c0             	mov    %eax,%r8d
   1b234:	0f 85 96 01 00 00    	jne    1b3d0 <mbedtls_mpi_self_test+0xac0>
   1b23a:	4c 89 cf             	mov    %r9,%rdi
   1b23d:	be 10 00 00 00       	mov    $0x10,%esi
   1b242:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b247:	48 8d 15 aa a3 00 00 	lea    0xa3aa(%rip),%rdx        # 255f8 <aria_sb1+0x4b8>
   1b24e:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b253:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b258:	e8 c3 bf ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1b25d:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b262:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b267:	85 c0                	test   %eax,%eax
   1b269:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b26e:	41 89 c0             	mov    %eax,%r8d
   1b271:	0f 85 64 01 00 00    	jne    1b3db <mbedtls_mpi_self_test+0xacb>
   1b277:	48 8d 35 71 a0 00 00 	lea    0xa071(%rip),%rsi        # 252ef <aria_sb1+0x1af>
   1b27e:	bf 01 00 00 00       	mov    $0x1,%edi
   1b283:	31 c0                	xor    %eax,%eax
   1b285:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b28a:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b28f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b294:	e8 a7 80 fe ff       	callq  3340 <__printf_chk@plt>
   1b299:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b29e:	4c 89 f7             	mov    %r14,%rdi
   1b2a1:	4c 89 ce             	mov    %r9,%rsi
   1b2a4:	e8 87 b7 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1b2a9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b2ae:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b2b3:	85 c0                	test   %eax,%eax
   1b2b5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b2ba:	0f 85 fb fd ff ff    	jne    1b0bb <mbedtls_mpi_self_test+0x7ab>
   1b2c0:	48 8d 3d 1b 7f 00 00 	lea    0x7f1b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1b2c7:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b2cc:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b2d1:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b2d6:	e8 25 7f fe ff       	callq  3200 <puts@plt>
   1b2db:	4c 89 ea             	mov    %r13,%rdx
   1b2de:	48 89 ee             	mov    %rbp,%rsi
   1b2e1:	4c 89 f7             	mov    %r14,%rdi
   1b2e4:	e8 27 e8 ff ff       	callq  19b10 <mbedtls_mpi_inv_mod>
   1b2e9:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b2ee:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b2f3:	85 c0                	test   %eax,%eax
   1b2f5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b2fa:	41 89 c0             	mov    %eax,%r8d
   1b2fd:	0f 85 cd 00 00 00    	jne    1b3d0 <mbedtls_mpi_self_test+0xac0>
   1b303:	4c 89 cf             	mov    %r9,%rdi
   1b306:	be 10 00 00 00       	mov    $0x10,%esi
   1b30b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b310:	48 8d 15 79 a2 00 00 	lea    0xa279(%rip),%rdx        # 25590 <aria_sb1+0x450>
   1b317:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b31c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b321:	e8 fa be ff ff       	callq  17220 <mbedtls_mpi_read_string>
   1b326:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b32b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b330:	85 c0                	test   %eax,%eax
   1b332:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b337:	41 89 c0             	mov    %eax,%r8d
   1b33a:	0f 85 9b 00 00 00    	jne    1b3db <mbedtls_mpi_self_test+0xacb>
   1b340:	48 8d 35 63 9f 00 00 	lea    0x9f63(%rip),%rsi        # 252aa <aria_sb1+0x16a>
   1b347:	bf 01 00 00 00       	mov    $0x1,%edi
   1b34c:	31 c0                	xor    %eax,%eax
   1b34e:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b353:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b358:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b35d:	e8 de 7f fe ff       	callq  3340 <__printf_chk@plt>
   1b362:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b367:	4c 89 f7             	mov    %r14,%rdi
   1b36a:	4c 89 ce             	mov    %r9,%rsi
   1b36d:	e8 be b6 ff ff       	callq  16a30 <mbedtls_mpi_cmp_mpi>
   1b372:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b377:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b37c:	85 c0                	test   %eax,%eax
   1b37e:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b383:	0f 85 32 fd ff ff    	jne    1b0bb <mbedtls_mpi_self_test+0x7ab>
   1b389:	48 8d 3d 52 7e 00 00 	lea    0x7e52(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1b390:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b395:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b39a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b39f:	e8 5c 7e fe ff       	callq  3200 <puts@plt>
   1b3a4:	48 8d 35 27 9f 00 00 	lea    0x9f27(%rip),%rsi        # 252d2 <aria_sb1+0x192>
   1b3ab:	bf 01 00 00 00       	mov    $0x1,%edi
   1b3b0:	31 c0                	xor    %eax,%eax
   1b3b2:	e8 89 7f fe ff       	callq  3340 <__printf_chk@plt>
   1b3b7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b3bc:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b3c1:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b3c6:	e9 10 fb ff ff       	jmpq   1aedb <mbedtls_mpi_self_test+0x5cb>
   1b3cb:	e8 90 7e fe ff       	callq  3260 <__stack_chk_fail@plt>
   1b3d0:	45 89 c7             	mov    %r8d,%r15d
   1b3d3:	44 89 c2             	mov    %r8d,%edx
   1b3d6:	e9 69 f7 ff ff       	jmpq   1ab44 <mbedtls_mpi_self_test+0x234>
   1b3db:	45 89 c7             	mov    %r8d,%r15d
   1b3de:	e9 5e f7 ff ff       	jmpq   1ab41 <mbedtls_mpi_self_test+0x231>
   1b3e3:	45 89 c7             	mov    %r8d,%r15d
   1b3e6:	e9 82 f6 ff ff       	jmpq   1aa6d <mbedtls_mpi_self_test+0x15d>
   1b3eb:	85 db                	test   %ebx,%ebx
   1b3ed:	0f 84 ad fc ff ff    	je     1b0a0 <mbedtls_mpi_self_test+0x790>
   1b3f3:	8b 54 24 08          	mov    0x8(%rsp),%edx
   1b3f7:	bf 01 00 00 00       	mov    $0x1,%edi
   1b3fc:	31 c0                	xor    %eax,%eax
   1b3fe:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   1b403:	48 8d 35 ba 9e 00 00 	lea    0x9eba(%rip),%rsi        # 252c4 <aria_sb1+0x184>
   1b40a:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b40f:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b415:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b41a:	e8 21 7f fe ff       	callq  3340 <__printf_chk@plt>
   1b41f:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b424:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b429:	ba 01 00 00 00       	mov    $0x1,%edx
   1b42e:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1b433:	e9 0c f7 ff ff       	jmpq   1ab44 <mbedtls_mpi_self_test+0x234>
   1b438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b43f:	00 

000000000001b440 <mbedtls_mpi_core_bitlen.part.0>:
   1b440:	48 83 ee 01          	sub    $0x1,%rsi
   1b444:	74 3a                	je     1b480 <mbedtls_mpi_core_bitlen.part.0+0x40>
   1b446:	4c 8b 04 f7          	mov    (%rdi,%rsi,8),%r8
   1b44a:	4d 85 c0             	test   %r8,%r8
   1b44d:	74 f1                	je     1b440 <mbedtls_mpi_core_bitlen.part.0>
   1b44f:	48 8d 46 01          	lea    0x1(%rsi),%rax
   1b453:	48 c1 e0 06          	shl    $0x6,%rax
   1b457:	48 b9 00 00 00 00 00 	movabs $0x8000000000000000,%rcx
   1b45e:	00 00 80 
   1b461:	31 d2                	xor    %edx,%edx
   1b463:	eb 10                	jmp    1b475 <mbedtls_mpi_core_bitlen.part.0+0x35>
   1b465:	0f 1f 00             	nopl   (%rax)
   1b468:	48 83 c2 01          	add    $0x1,%rdx
   1b46c:	48 d1 e9             	shr    %rcx
   1b46f:	48 83 fa 40          	cmp    $0x40,%rdx
   1b473:	74 05                	je     1b47a <mbedtls_mpi_core_bitlen.part.0+0x3a>
   1b475:	4c 85 c1             	test   %r8,%rcx
   1b478:	74 ee                	je     1b468 <mbedtls_mpi_core_bitlen.part.0+0x28>
   1b47a:	48 29 d0             	sub    %rdx,%rax
   1b47d:	c3                   	retq   
   1b47e:	66 90                	xchg   %ax,%ax
   1b480:	4c 8b 07             	mov    (%rdi),%r8
   1b483:	b8 40 00 00 00       	mov    $0x40,%eax
   1b488:	eb cd                	jmp    1b457 <mbedtls_mpi_core_bitlen.part.0+0x17>
   1b48a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b490 <mbedtls_mpi_core_bigendian_to_host.part.0>:
   1b490:	48 8d 44 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rax
   1b495:	48 39 c7             	cmp    %rax,%rdi
   1b498:	77 27                	ja     1b4c1 <mbedtls_mpi_core_bigendian_to_host.part.0+0x31>
   1b49a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b4a0:	48 8b 17             	mov    (%rdi),%rdx
   1b4a3:	48 8b 08             	mov    (%rax),%rcx
   1b4a6:	48 83 c7 08          	add    $0x8,%rdi
   1b4aa:	48 83 e8 08          	sub    $0x8,%rax
   1b4ae:	48 0f ca             	bswap  %rdx
   1b4b1:	48 0f c9             	bswap  %rcx
   1b4b4:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
   1b4b8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b4bc:	48 39 c7             	cmp    %rax,%rdi
   1b4bf:	76 df                	jbe    1b4a0 <mbedtls_mpi_core_bigendian_to_host.part.0+0x10>
   1b4c1:	c3                   	retq   
   1b4c2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b4c9:	00 00 00 00 
   1b4cd:	0f 1f 00             	nopl   (%rax)

000000000001b4d0 <mbedtls_mpi_core_clz>:
   1b4d0:	f3 0f 1e fa          	endbr64 
   1b4d4:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
   1b4db:	00 00 80 
   1b4de:	31 c0                	xor    %eax,%eax
   1b4e0:	eb 13                	jmp    1b4f5 <mbedtls_mpi_core_clz+0x25>
   1b4e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b4e8:	48 83 c0 01          	add    $0x1,%rax
   1b4ec:	48 d1 ea             	shr    %rdx
   1b4ef:	48 83 f8 40          	cmp    $0x40,%rax
   1b4f3:	74 05                	je     1b4fa <mbedtls_mpi_core_clz+0x2a>
   1b4f5:	48 85 d7             	test   %rdx,%rdi
   1b4f8:	74 ee                	je     1b4e8 <mbedtls_mpi_core_clz+0x18>
   1b4fa:	c3                   	retq   
   1b4fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b500 <mbedtls_mpi_core_bitlen>:
   1b500:	f3 0f 1e fa          	endbr64 
   1b504:	48 85 f6             	test   %rsi,%rsi
   1b507:	74 07                	je     1b510 <mbedtls_mpi_core_bitlen+0x10>
   1b509:	e9 32 ff ff ff       	jmpq   1b440 <mbedtls_mpi_core_bitlen.part.0>
   1b50e:	66 90                	xchg   %ax,%ax
   1b510:	31 c0                	xor    %eax,%eax
   1b512:	c3                   	retq   
   1b513:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b51a:	00 00 00 00 
   1b51e:	66 90                	xchg   %ax,%ax

000000000001b520 <mbedtls_mpi_core_bigendian_to_host>:
   1b520:	f3 0f 1e fa          	endbr64 
   1b524:	48 85 f6             	test   %rsi,%rsi
   1b527:	74 07                	je     1b530 <mbedtls_mpi_core_bigendian_to_host+0x10>
   1b529:	e9 62 ff ff ff       	jmpq   1b490 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1b52e:	66 90                	xchg   %ax,%ax
   1b530:	c3                   	retq   
   1b531:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b538:	00 00 00 00 
   1b53c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b540 <mbedtls_mpi_core_uint_le_mpi>:
   1b540:	f3 0f 1e fa          	endbr64 
   1b544:	41 54                	push   %r12
   1b546:	49 89 d4             	mov    %rdx,%r12
   1b549:	55                   	push   %rbp
   1b54a:	48 89 f5             	mov    %rsi,%rbp
   1b54d:	48 89 fe             	mov    %rdi,%rsi
   1b550:	53                   	push   %rbx
   1b551:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1b555:	e8 b6 be fe ff       	callq  7410 <mbedtls_ct_mpi_uint_lt>
   1b55a:	83 f0 01             	xor    $0x1,%eax
   1b55d:	89 c3                	mov    %eax,%ebx
   1b55f:	49 83 fc 01          	cmp    $0x1,%r12
   1b563:	76 2b                	jbe    1b590 <mbedtls_mpi_core_uint_le_mpi+0x50>
   1b565:	48 8d 45 08          	lea    0x8(%rbp),%rax
   1b569:	4a 8d 54 e5 00       	lea    0x0(%rbp,%r12,8),%rdx
   1b56e:	31 ff                	xor    %edi,%edi
   1b570:	48 0b 38             	or     (%rax),%rdi
   1b573:	48 83 c0 08          	add    $0x8,%rax
   1b577:	48 39 d0             	cmp    %rdx,%rax
   1b57a:	75 f4                	jne    1b570 <mbedtls_mpi_core_uint_le_mpi+0x30>
   1b57c:	e8 2f be fe ff       	callq  73b0 <mbedtls_ct_mpi_uint_mask>
   1b581:	83 e0 01             	and    $0x1,%eax
   1b584:	09 d8                	or     %ebx,%eax
   1b586:	5b                   	pop    %rbx
   1b587:	5d                   	pop    %rbp
   1b588:	41 5c                	pop    %r12
   1b58a:	c3                   	retq   
   1b58b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b590:	31 ff                	xor    %edi,%edi
   1b592:	e8 19 be fe ff       	callq  73b0 <mbedtls_ct_mpi_uint_mask>
   1b597:	83 e0 01             	and    $0x1,%eax
   1b59a:	09 d8                	or     %ebx,%eax
   1b59c:	5b                   	pop    %rbx
   1b59d:	5d                   	pop    %rbp
   1b59e:	41 5c                	pop    %r12
   1b5a0:	c3                   	retq   
   1b5a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b5a8:	00 00 00 00 
   1b5ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b5b0 <mbedtls_mpi_core_cond_assign>:
   1b5b0:	f3 0f 1e fa          	endbr64 
   1b5b4:	49 89 f8             	mov    %rdi,%r8
   1b5b7:	48 89 d7             	mov    %rdx,%rdi
   1b5ba:	49 39 f0             	cmp    %rsi,%r8
   1b5bd:	74 11                	je     1b5d0 <mbedtls_mpi_core_cond_assign+0x20>
   1b5bf:	48 89 f2             	mov    %rsi,%rdx
   1b5c2:	0f b6 c9             	movzbl %cl,%ecx
   1b5c5:	4c 89 c6             	mov    %r8,%rsi
   1b5c8:	e9 83 be fe ff       	jmpq   7450 <mbedtls_ct_mpi_uint_cond_assign>
   1b5cd:	0f 1f 00             	nopl   (%rax)
   1b5d0:	c3                   	retq   
   1b5d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b5d8:	00 00 00 00 
   1b5dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b5e0 <mbedtls_mpi_core_cond_swap>:
   1b5e0:	f3 0f 1e fa          	endbr64 
   1b5e4:	48 39 f7             	cmp    %rsi,%rdi
   1b5e7:	74 57                	je     1b640 <mbedtls_mpi_core_cond_swap+0x60>
   1b5e9:	41 54                	push   %r12
   1b5eb:	49 89 d4             	mov    %rdx,%r12
   1b5ee:	55                   	push   %rbp
   1b5ef:	48 89 fd             	mov    %rdi,%rbp
   1b5f2:	0f b6 f9             	movzbl %cl,%edi
   1b5f5:	53                   	push   %rbx
   1b5f6:	48 89 f3             	mov    %rsi,%rbx
   1b5f9:	e8 b2 bd fe ff       	callq  73b0 <mbedtls_ct_mpi_uint_mask>
   1b5fe:	4d 85 e4             	test   %r12,%r12
   1b601:	74 36                	je     1b639 <mbedtls_mpi_core_cond_swap+0x59>
   1b603:	31 ff                	xor    %edi,%edi
   1b605:	0f 1f 00             	nopl   (%rax)
   1b608:	48 8b 4c fd 00       	mov    0x0(%rbp,%rdi,8),%rcx
   1b60d:	4c 8b 04 fb          	mov    (%rbx,%rdi,8),%r8
   1b611:	49 31 c8             	xor    %rcx,%r8
   1b614:	49 21 c0             	and    %rax,%r8
   1b617:	49 31 c8             	xor    %rcx,%r8
   1b61a:	4c 89 44 fd 00       	mov    %r8,0x0(%rbp,%rdi,8)
   1b61f:	48 8b 34 fb          	mov    (%rbx,%rdi,8),%rsi
   1b623:	48 31 f1             	xor    %rsi,%rcx
   1b626:	48 21 c1             	and    %rax,%rcx
   1b629:	48 31 f1             	xor    %rsi,%rcx
   1b62c:	48 89 0c fb          	mov    %rcx,(%rbx,%rdi,8)
   1b630:	48 83 c7 01          	add    $0x1,%rdi
   1b634:	49 39 fc             	cmp    %rdi,%r12
   1b637:	75 cf                	jne    1b608 <mbedtls_mpi_core_cond_swap+0x28>
   1b639:	5b                   	pop    %rbx
   1b63a:	5d                   	pop    %rbp
   1b63b:	41 5c                	pop    %r12
   1b63d:	c3                   	retq   
   1b63e:	66 90                	xchg   %ax,%ax
   1b640:	c3                   	retq   
   1b641:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b648:	00 00 00 00 
   1b64c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b650 <mbedtls_mpi_core_read_le>:
   1b650:	f3 0f 1e fa          	endbr64 
   1b654:	55                   	push   %rbp
   1b655:	31 c0                	xor    %eax,%eax
   1b657:	48 89 d5             	mov    %rdx,%rbp
   1b65a:	48 89 ca             	mov    %rcx,%rdx
   1b65d:	53                   	push   %rbx
   1b65e:	48 83 ec 08          	sub    $0x8,%rsp
   1b662:	f6 c1 07             	test   $0x7,%cl
   1b665:	0f 95 c0             	setne  %al
   1b668:	48 c1 ea 03          	shr    $0x3,%rdx
   1b66c:	48 01 d0             	add    %rdx,%rax
   1b66f:	48 39 f0             	cmp    %rsi,%rax
   1b672:	77 54                	ja     1b6c8 <mbedtls_mpi_core_read_le+0x78>
   1b674:	48 85 ff             	test   %rdi,%rdi
   1b677:	74 46                	je     1b6bf <mbedtls_mpi_core_read_le+0x6f>
   1b679:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   1b680:	00 
   1b681:	31 f6                	xor    %esi,%esi
   1b683:	48 89 cb             	mov    %rcx,%rbx
   1b686:	e8 05 7c fe ff       	callq  3290 <memset@plt>
   1b68b:	48 89 c7             	mov    %rax,%rdi
   1b68e:	48 85 db             	test   %rbx,%rbx
   1b691:	74 2c                	je     1b6bf <mbedtls_mpi_core_read_le+0x6f>
   1b693:	31 c0                	xor    %eax,%eax
   1b695:	0f 1f 00             	nopl   (%rax)
   1b698:	0f b6 54 05 00       	movzbl 0x0(%rbp,%rax,1),%edx
   1b69d:	48 89 c6             	mov    %rax,%rsi
   1b6a0:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1b6a7:	00 
   1b6a8:	48 83 c0 01          	add    $0x1,%rax
   1b6ac:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1b6b0:	83 e1 38             	and    $0x38,%ecx
   1b6b3:	48 d3 e2             	shl    %cl,%rdx
   1b6b6:	48 09 14 37          	or     %rdx,(%rdi,%rsi,1)
   1b6ba:	48 39 c3             	cmp    %rax,%rbx
   1b6bd:	75 d9                	jne    1b698 <mbedtls_mpi_core_read_le+0x48>
   1b6bf:	31 c0                	xor    %eax,%eax
   1b6c1:	48 83 c4 08          	add    $0x8,%rsp
   1b6c5:	5b                   	pop    %rbx
   1b6c6:	5d                   	pop    %rbp
   1b6c7:	c3                   	retq   
   1b6c8:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b6cd:	eb f2                	jmp    1b6c1 <mbedtls_mpi_core_read_le+0x71>
   1b6cf:	90                   	nop

000000000001b6d0 <mbedtls_mpi_core_read_be>:
   1b6d0:	f3 0f 1e fa          	endbr64 
   1b6d4:	41 56                	push   %r14
   1b6d6:	31 c0                	xor    %eax,%eax
   1b6d8:	49 89 d6             	mov    %rdx,%r14
   1b6db:	f6 c1 07             	test   $0x7,%cl
   1b6de:	48 89 ca             	mov    %rcx,%rdx
   1b6e1:	0f 95 c0             	setne  %al
   1b6e4:	41 55                	push   %r13
   1b6e6:	48 c1 ea 03          	shr    $0x3,%rdx
   1b6ea:	41 54                	push   %r12
   1b6ec:	48 01 d0             	add    %rdx,%rax
   1b6ef:	55                   	push   %rbp
   1b6f0:	53                   	push   %rbx
   1b6f1:	48 39 f0             	cmp    %rsi,%rax
   1b6f4:	77 6a                	ja     1b760 <mbedtls_mpi_core_read_be+0x90>
   1b6f6:	48 89 f5             	mov    %rsi,%rbp
   1b6f9:	31 c0                	xor    %eax,%eax
   1b6fb:	48 85 f6             	test   %rsi,%rsi
   1b6fe:	75 10                	jne    1b710 <mbedtls_mpi_core_read_be+0x40>
   1b700:	5b                   	pop    %rbx
   1b701:	5d                   	pop    %rbp
   1b702:	41 5c                	pop    %r12
   1b704:	41 5d                	pop    %r13
   1b706:	41 5e                	pop    %r14
   1b708:	c3                   	retq   
   1b709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b710:	48 8d 1c f5 00 00 00 	lea    0x0(,%rsi,8),%rbx
   1b717:	00 
   1b718:	49 89 cc             	mov    %rcx,%r12
   1b71b:	31 f6                	xor    %esi,%esi
   1b71d:	49 89 fd             	mov    %rdi,%r13
   1b720:	48 89 da             	mov    %rbx,%rdx
   1b723:	e8 68 7b fe ff       	callq  3290 <memset@plt>
   1b728:	4d 85 e4             	test   %r12,%r12
   1b72b:	75 1b                	jne    1b748 <mbedtls_mpi_core_read_be+0x78>
   1b72d:	48 89 ee             	mov    %rbp,%rsi
   1b730:	4c 89 ef             	mov    %r13,%rdi
   1b733:	e8 58 fd ff ff       	callq  1b490 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1b738:	5b                   	pop    %rbx
   1b739:	31 c0                	xor    %eax,%eax
   1b73b:	5d                   	pop    %rbp
   1b73c:	41 5c                	pop    %r12
   1b73e:	41 5d                	pop    %r13
   1b740:	41 5e                	pop    %r14
   1b742:	c3                   	retq   
   1b743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b748:	4c 29 e3             	sub    %r12,%rbx
   1b74b:	4c 89 e2             	mov    %r12,%rdx
   1b74e:	4c 89 f6             	mov    %r14,%rsi
   1b751:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
   1b756:	e8 b5 7b fe ff       	callq  3310 <memcpy@plt>
   1b75b:	eb d0                	jmp    1b72d <mbedtls_mpi_core_read_be+0x5d>
   1b75d:	0f 1f 00             	nopl   (%rax)
   1b760:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b765:	eb 99                	jmp    1b700 <mbedtls_mpi_core_read_be+0x30>
   1b767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b76e:	00 00 

000000000001b770 <mbedtls_mpi_core_write_le>:
   1b770:	f3 0f 1e fa          	endbr64 
   1b774:	48 c1 e6 03          	shl    $0x3,%rsi
   1b778:	49 89 c9             	mov    %rcx,%r9
   1b77b:	48 39 ce             	cmp    %rcx,%rsi
   1b77e:	0f 82 8c 00 00 00    	jb     1b810 <mbedtls_mpi_core_write_le+0xa0>
   1b784:	76 4e                	jbe    1b7d4 <mbedtls_mpi_core_write_le+0x64>
   1b786:	48 89 c8             	mov    %rcx,%rax
   1b789:	83 e1 07             	and    $0x7,%ecx
   1b78c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b790:	c1 e1 03             	shl    $0x3,%ecx
   1b793:	48 8b 04 07          	mov    (%rdi,%rax,1),%rax
   1b797:	48 d3 e8             	shr    %cl,%rax
   1b79a:	84 c0                	test   %al,%al
   1b79c:	0f 85 96 00 00 00    	jne    1b838 <mbedtls_mpi_core_write_le+0xc8>
   1b7a2:	4c 89 c8             	mov    %r9,%rax
   1b7a5:	eb 24                	jmp    1b7cb <mbedtls_mpi_core_write_le+0x5b>
   1b7a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b7ae:	00 00 
   1b7b0:	49 89 c0             	mov    %rax,%r8
   1b7b3:	89 c1                	mov    %eax,%ecx
   1b7b5:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   1b7b9:	83 e1 07             	and    $0x7,%ecx
   1b7bc:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
   1b7c0:	c1 e1 03             	shl    $0x3,%ecx
   1b7c3:	49 d3 e8             	shr    %cl,%r8
   1b7c6:	45 84 c0             	test   %r8b,%r8b
   1b7c9:	75 6d                	jne    1b838 <mbedtls_mpi_core_write_le+0xc8>
   1b7cb:	48 83 c0 01          	add    $0x1,%rax
   1b7cf:	48 39 c6             	cmp    %rax,%rsi
   1b7d2:	75 dc                	jne    1b7b0 <mbedtls_mpi_core_write_le+0x40>
   1b7d4:	4d 89 ca             	mov    %r9,%r10
   1b7d7:	4d 85 c9             	test   %r9,%r9
   1b7da:	74 2c                	je     1b808 <mbedtls_mpi_core_write_le+0x98>
   1b7dc:	31 c0                	xor    %eax,%eax
   1b7de:	66 90                	xchg   %ax,%ax
   1b7e0:	49 89 c0             	mov    %rax,%r8
   1b7e3:	89 c1                	mov    %eax,%ecx
   1b7e5:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   1b7e9:	83 e1 07             	and    $0x7,%ecx
   1b7ec:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
   1b7f0:	c1 e1 03             	shl    $0x3,%ecx
   1b7f3:	49 d3 e8             	shr    %cl,%r8
   1b7f6:	44 88 04 02          	mov    %r8b,(%rdx,%rax,1)
   1b7fa:	48 83 c0 01          	add    $0x1,%rax
   1b7fe:	4c 39 d0             	cmp    %r10,%rax
   1b801:	72 dd                	jb     1b7e0 <mbedtls_mpi_core_write_le+0x70>
   1b803:	4c 39 ce             	cmp    %r9,%rsi
   1b806:	72 10                	jb     1b818 <mbedtls_mpi_core_write_le+0xa8>
   1b808:	31 c0                	xor    %eax,%eax
   1b80a:	c3                   	retq   
   1b80b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b810:	49 89 f2             	mov    %rsi,%r10
   1b813:	48 85 f6             	test   %rsi,%rsi
   1b816:	75 c4                	jne    1b7dc <mbedtls_mpi_core_write_le+0x6c>
   1b818:	49 29 f1             	sub    %rsi,%r9
   1b81b:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   1b81f:	48 83 ec 08          	sub    $0x8,%rsp
   1b823:	31 f6                	xor    %esi,%esi
   1b825:	4c 89 ca             	mov    %r9,%rdx
   1b828:	e8 63 7a fe ff       	callq  3290 <memset@plt>
   1b82d:	31 c0                	xor    %eax,%eax
   1b82f:	48 83 c4 08          	add    $0x8,%rsp
   1b833:	c3                   	retq   
   1b834:	0f 1f 40 00          	nopl   0x0(%rax)
   1b838:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b83d:	c3                   	retq   
   1b83e:	66 90                	xchg   %ax,%ax

000000000001b840 <mbedtls_mpi_core_write_be>:
   1b840:	f3 0f 1e fa          	endbr64 
   1b844:	41 54                	push   %r12
   1b846:	55                   	push   %rbp
   1b847:	48 8d 2c f5 00 00 00 	lea    0x0(,%rsi,8),%rbp
   1b84e:	00 
   1b84f:	53                   	push   %rbx
   1b850:	48 89 fb             	mov    %rdi,%rbx
   1b853:	48 89 d7             	mov    %rdx,%rdi
   1b856:	48 89 ca             	mov    %rcx,%rdx
   1b859:	48 39 cd             	cmp    %rcx,%rbp
   1b85c:	0f 82 8e 00 00 00    	jb     1b8f0 <mbedtls_mpi_core_write_be+0xb0>
   1b862:	76 48                	jbe    1b8ac <mbedtls_mpi_core_write_be+0x6c>
   1b864:	48 89 c8             	mov    %rcx,%rax
   1b867:	83 e1 07             	and    $0x7,%ecx
   1b86a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b86e:	c1 e1 03             	shl    $0x3,%ecx
   1b871:	48 8b 04 03          	mov    (%rbx,%rax,1),%rax
   1b875:	48 d3 e8             	shr    %cl,%rax
   1b878:	84 c0                	test   %al,%al
   1b87a:	0f 85 90 00 00 00    	jne    1b910 <mbedtls_mpi_core_write_be+0xd0>
   1b880:	48 89 d0             	mov    %rdx,%rax
   1b883:	eb 1e                	jmp    1b8a3 <mbedtls_mpi_core_write_be+0x63>
   1b885:	0f 1f 00             	nopl   (%rax)
   1b888:	48 89 c6             	mov    %rax,%rsi
   1b88b:	89 c1                	mov    %eax,%ecx
   1b88d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1b891:	83 e1 07             	and    $0x7,%ecx
   1b894:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
   1b898:	c1 e1 03             	shl    $0x3,%ecx
   1b89b:	48 d3 ee             	shr    %cl,%rsi
   1b89e:	40 84 f6             	test   %sil,%sil
   1b8a1:	75 6d                	jne    1b910 <mbedtls_mpi_core_write_be+0xd0>
   1b8a3:	48 83 c0 01          	add    $0x1,%rax
   1b8a7:	48 39 c5             	cmp    %rax,%rbp
   1b8aa:	75 dc                	jne    1b888 <mbedtls_mpi_core_write_be+0x48>
   1b8ac:	48 8d 7c 17 ff       	lea    -0x1(%rdi,%rdx,1),%rdi
   1b8b1:	31 c0                	xor    %eax,%eax
   1b8b3:	48 85 d2             	test   %rdx,%rdx
   1b8b6:	74 2f                	je     1b8e7 <mbedtls_mpi_core_write_be+0xa7>
   1b8b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b8bf:	00 
   1b8c0:	48 89 c6             	mov    %rax,%rsi
   1b8c3:	89 c1                	mov    %eax,%ecx
   1b8c5:	48 83 c0 01          	add    $0x1,%rax
   1b8c9:	48 83 ef 01          	sub    $0x1,%rdi
   1b8cd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1b8d1:	83 e1 07             	and    $0x7,%ecx
   1b8d4:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
   1b8d8:	c1 e1 03             	shl    $0x3,%ecx
   1b8db:	48 d3 ee             	shr    %cl,%rsi
   1b8de:	40 88 77 01          	mov    %sil,0x1(%rdi)
   1b8e2:	48 39 c2             	cmp    %rax,%rdx
   1b8e5:	75 d9                	jne    1b8c0 <mbedtls_mpi_core_write_be+0x80>
   1b8e7:	5b                   	pop    %rbx
   1b8e8:	31 c0                	xor    %eax,%eax
   1b8ea:	5d                   	pop    %rbp
   1b8eb:	41 5c                	pop    %r12
   1b8ed:	c3                   	retq   
   1b8ee:	66 90                	xchg   %ax,%ax
   1b8f0:	48 29 ea             	sub    %rbp,%rdx
   1b8f3:	31 f6                	xor    %esi,%esi
   1b8f5:	4c 8d 24 17          	lea    (%rdi,%rdx,1),%r12
   1b8f9:	e8 92 79 fe ff       	callq  3290 <memset@plt>
   1b8fe:	4c 89 e7             	mov    %r12,%rdi
   1b901:	48 89 ea             	mov    %rbp,%rdx
   1b904:	eb a6                	jmp    1b8ac <mbedtls_mpi_core_write_be+0x6c>
   1b906:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b90d:	00 00 00 
   1b910:	5b                   	pop    %rbx
   1b911:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b916:	5d                   	pop    %rbp
   1b917:	41 5c                	pop    %r12
   1b919:	c3                   	retq   
   1b91a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b920 <mbedtls_mpi_core_shift_r>:
   1b920:	f3 0f 1e fa          	endbr64 
   1b924:	48 89 d1             	mov    %rdx,%rcx
   1b927:	49 89 d0             	mov    %rdx,%r8
   1b92a:	48 c1 e9 06          	shr    $0x6,%rcx
   1b92e:	41 83 e0 3f          	and    $0x3f,%r8d
   1b932:	48 39 f1             	cmp    %rsi,%rcx
   1b935:	77 07                	ja     1b93e <mbedtls_mpi_core_shift_r+0x1e>
   1b937:	75 17                	jne    1b950 <mbedtls_mpi_core_shift_r+0x30>
   1b939:	4d 85 c0             	test   %r8,%r8
   1b93c:	74 12                	je     1b950 <mbedtls_mpi_core_shift_r+0x30>
   1b93e:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   1b945:	00 
   1b946:	31 f6                	xor    %esi,%esi
   1b948:	e9 43 79 fe ff       	jmpq   3290 <memset@plt>
   1b94d:	0f 1f 00             	nopl   (%rax)
   1b950:	48 83 fa 3f          	cmp    $0x3f,%rdx
   1b954:	0f 86 a6 00 00 00    	jbe    1ba00 <mbedtls_mpi_core_shift_r+0xe0>
   1b95a:	49 89 f2             	mov    %rsi,%r10
   1b95d:	49 29 ca             	sub    %rcx,%r10
   1b960:	74 27                	je     1b989 <mbedtls_mpi_core_shift_r+0x69>
   1b962:	48 8d 04 cf          	lea    (%rdi,%rcx,8),%rax
   1b966:	48 f7 d9             	neg    %rcx
   1b969:	4c 8d 0c f7          	lea    (%rdi,%rsi,8),%r9
   1b96d:	48 c1 e1 03          	shl    $0x3,%rcx
   1b971:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b978:	48 8b 10             	mov    (%rax),%rdx
   1b97b:	48 83 c0 08          	add    $0x8,%rax
   1b97f:	48 89 54 08 f8       	mov    %rdx,-0x8(%rax,%rcx,1)
   1b984:	4c 39 c8             	cmp    %r9,%rax
   1b987:	75 ef                	jne    1b978 <mbedtls_mpi_core_shift_r+0x58>
   1b989:	4c 39 d6             	cmp    %r10,%rsi
   1b98c:	76 72                	jbe    1ba00 <mbedtls_mpi_core_shift_r+0xe0>
   1b98e:	4a 8d 04 d7          	lea    (%rdi,%r10,8),%rax
   1b992:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
   1b996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b99d:	00 00 00 
   1b9a0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1b9a7:	48 83 c0 08          	add    $0x8,%rax
   1b9ab:	48 39 c2             	cmp    %rax,%rdx
   1b9ae:	75 f0                	jne    1b9a0 <mbedtls_mpi_core_shift_r+0x80>
   1b9b0:	4d 85 c0             	test   %r8,%r8
   1b9b3:	74 55                	je     1ba0a <mbedtls_mpi_core_shift_r+0xea>
   1b9b5:	41 ba 40 00 00 00    	mov    $0x40,%r10d
   1b9bb:	48 8d 54 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rdx
   1b9c0:	45 89 c3             	mov    %r8d,%r11d
   1b9c3:	31 f6                	xor    %esi,%esi
   1b9c5:	45 29 c2             	sub    %r8d,%r10d
   1b9c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b9cf:	00 
   1b9d0:	48 8b 02             	mov    (%rdx),%rax
   1b9d3:	49 89 f1             	mov    %rsi,%r9
   1b9d6:	44 89 d1             	mov    %r10d,%ecx
   1b9d9:	49 89 d0             	mov    %rdx,%r8
   1b9dc:	48 83 ea 08          	sub    $0x8,%rdx
   1b9e0:	48 89 c6             	mov    %rax,%rsi
   1b9e3:	48 d3 e6             	shl    %cl,%rsi
   1b9e6:	44 89 d9             	mov    %r11d,%ecx
   1b9e9:	48 d3 e8             	shr    %cl,%rax
   1b9ec:	4c 09 c8             	or     %r9,%rax
   1b9ef:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1b9f3:	49 39 f8             	cmp    %rdi,%r8
   1b9f6:	75 d8                	jne    1b9d0 <mbedtls_mpi_core_shift_r+0xb0>
   1b9f8:	c3                   	retq   
   1b9f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ba00:	4d 85 c0             	test   %r8,%r8
   1ba03:	74 05                	je     1ba0a <mbedtls_mpi_core_shift_r+0xea>
   1ba05:	48 85 f6             	test   %rsi,%rsi
   1ba08:	75 ab                	jne    1b9b5 <mbedtls_mpi_core_shift_r+0x95>
   1ba0a:	c3                   	retq   
   1ba0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ba10 <mbedtls_mpi_core_add>:
   1ba10:	f3 0f 1e fa          	endbr64 
   1ba14:	48 85 c9             	test   %rcx,%rcx
   1ba17:	74 37                	je     1ba50 <mbedtls_mpi_core_add+0x40>
   1ba19:	45 31 c0             	xor    %r8d,%r8d
   1ba1c:	31 c0                	xor    %eax,%eax
   1ba1e:	66 90                	xchg   %ax,%ax
   1ba20:	45 31 d2             	xor    %r10d,%r10d
   1ba23:	4a 03 04 c6          	add    (%rsi,%r8,8),%rax
   1ba27:	41 0f 92 c2          	setb   %r10b
   1ba2b:	4a 03 04 c2          	add    (%rdx,%r8,8),%rax
   1ba2f:	49 89 c1             	mov    %rax,%r9
   1ba32:	4c 89 d0             	mov    %r10,%rax
   1ba35:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
   1ba39:	48 83 d0 00          	adc    $0x0,%rax
   1ba3d:	49 83 c0 01          	add    $0x1,%r8
   1ba41:	4c 39 c1             	cmp    %r8,%rcx
   1ba44:	75 da                	jne    1ba20 <mbedtls_mpi_core_add+0x10>
   1ba46:	c3                   	retq   
   1ba47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ba4e:	00 00 
   1ba50:	31 c0                	xor    %eax,%eax
   1ba52:	c3                   	retq   
   1ba53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ba5a:	00 00 00 00 
   1ba5e:	66 90                	xchg   %ax,%ax

000000000001ba60 <mbedtls_mpi_core_add_if>:
   1ba60:	f3 0f 1e fa          	endbr64 
   1ba64:	41 54                	push   %r12
   1ba66:	49 89 f4             	mov    %rsi,%r12
   1ba69:	55                   	push   %rbp
   1ba6a:	48 89 d5             	mov    %rdx,%rbp
   1ba6d:	53                   	push   %rbx
   1ba6e:	48 89 fb             	mov    %rdi,%rbx
   1ba71:	89 cf                	mov    %ecx,%edi
   1ba73:	e8 38 b9 fe ff       	callq  73b0 <mbedtls_ct_mpi_uint_mask>
   1ba78:	48 85 ed             	test   %rbp,%rbp
   1ba7b:	74 43                	je     1bac0 <mbedtls_mpi_core_add_if+0x60>
   1ba7d:	48 89 c2             	mov    %rax,%rdx
   1ba80:	31 c9                	xor    %ecx,%ecx
   1ba82:	31 c0                	xor    %eax,%eax
   1ba84:	0f 1f 40 00          	nopl   0x0(%rax)
   1ba88:	49 8b 3c cc          	mov    (%r12,%rcx,8),%rdi
   1ba8c:	45 31 c0             	xor    %r8d,%r8d
   1ba8f:	48 21 d7             	and    %rdx,%rdi
   1ba92:	48 03 04 cb          	add    (%rbx,%rcx,8),%rax
   1ba96:	41 0f 92 c0          	setb   %r8b
   1ba9a:	48 01 c7             	add    %rax,%rdi
   1ba9d:	4c 89 c0             	mov    %r8,%rax
   1baa0:	48 89 3c cb          	mov    %rdi,(%rbx,%rcx,8)
   1baa4:	48 83 d0 00          	adc    $0x0,%rax
   1baa8:	48 83 c1 01          	add    $0x1,%rcx
   1baac:	48 39 cd             	cmp    %rcx,%rbp
   1baaf:	75 d7                	jne    1ba88 <mbedtls_mpi_core_add_if+0x28>
   1bab1:	5b                   	pop    %rbx
   1bab2:	5d                   	pop    %rbp
   1bab3:	41 5c                	pop    %r12
   1bab5:	c3                   	retq   
   1bab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1babd:	00 00 00 
   1bac0:	5b                   	pop    %rbx
   1bac1:	31 c0                	xor    %eax,%eax
   1bac3:	5d                   	pop    %rbp
   1bac4:	41 5c                	pop    %r12
   1bac6:	c3                   	retq   
   1bac7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bace:	00 00 

000000000001bad0 <mbedtls_mpi_core_sub>:
   1bad0:	f3 0f 1e fa          	endbr64 
   1bad4:	48 85 c9             	test   %rcx,%rcx
   1bad7:	74 3f                	je     1bb18 <mbedtls_mpi_core_sub+0x48>
   1bad9:	45 31 c9             	xor    %r9d,%r9d
   1badc:	31 c0                	xor    %eax,%eax
   1bade:	66 90                	xchg   %ax,%ax
   1bae0:	4e 8b 04 ce          	mov    (%rsi,%r9,8),%r8
   1bae4:	4e 8b 14 ca          	mov    (%rdx,%r9,8),%r10
   1bae8:	45 31 db             	xor    %r11d,%r11d
   1baeb:	49 39 c0             	cmp    %rax,%r8
   1baee:	41 0f 92 c3          	setb   %r11b
   1baf2:	49 29 c0             	sub    %rax,%r8
   1baf5:	31 c0                	xor    %eax,%eax
   1baf7:	4d 39 c2             	cmp    %r8,%r10
   1bafa:	0f 97 c0             	seta   %al
   1bafd:	4d 29 d0             	sub    %r10,%r8
   1bb00:	4e 89 04 cf          	mov    %r8,(%rdi,%r9,8)
   1bb04:	49 83 c1 01          	add    $0x1,%r9
   1bb08:	4c 01 d8             	add    %r11,%rax
   1bb0b:	4c 39 c9             	cmp    %r9,%rcx
   1bb0e:	75 d0                	jne    1bae0 <mbedtls_mpi_core_sub+0x10>
   1bb10:	c3                   	retq   
   1bb11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bb18:	31 c0                	xor    %eax,%eax
   1bb1a:	c3                   	retq   
   1bb1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bb20 <mbedtls_mpi_core_mla>:
   1bb20:	f3 0f 1e fa          	endbr64 
   1bb24:	49 89 f1             	mov    %rsi,%r9
   1bb27:	49 89 cb             	mov    %rcx,%r11
   1bb2a:	53                   	push   %rbx
   1bb2b:	48 89 d6             	mov    %rdx,%rsi
   1bb2e:	49 39 c9             	cmp    %rcx,%r9
   1bb31:	4c 89 c3             	mov    %r8,%rbx
   1bb34:	4d 0f 46 d9          	cmovbe %r9,%r11
   1bb38:	4c 89 d9             	mov    %r11,%rcx
   1bb3b:	4d 29 d9             	sub    %r11,%r9
   1bb3e:	41 83 e3 07          	and    $0x7,%r11d
   1bb42:	48 c1 e9 03          	shr    $0x3,%rcx
   1bb46:	48 85 c9             	test   %rcx,%rcx
   1bb49:	0f 84 12 01 00 00    	je     1bc61 <mbedtls_mpi_core_mla+0x141>
   1bb4f:	4c 8d 51 ff          	lea    -0x1(%rcx),%r10
   1bb53:	31 c9                	xor    %ecx,%ecx
   1bb55:	0f 1f 00             	nopl   (%rax)
   1bb58:	49 83 ea 01          	sub    $0x1,%r10
   1bb5c:	4d 31 c0             	xor    %r8,%r8
   1bb5f:	48 8b 06             	mov    (%rsi),%rax
   1bb62:	48 f7 e3             	mul    %rbx
   1bb65:	48 83 c6 08          	add    $0x8,%rsi
   1bb69:	48 01 c8             	add    %rcx,%rax
   1bb6c:	4c 89 c1             	mov    %r8,%rcx
   1bb6f:	48 83 d2 00          	adc    $0x0,%rdx
   1bb73:	90                   	nop
   1bb74:	48 01 07             	add    %rax,(%rdi)
   1bb77:	48 11 d1             	adc    %rdx,%rcx
   1bb7a:	48 83 c7 08          	add    $0x8,%rdi
   1bb7e:	48 8b 06             	mov    (%rsi),%rax
   1bb81:	48 f7 e3             	mul    %rbx
   1bb84:	48 83 c6 08          	add    $0x8,%rsi
   1bb88:	48 01 c8             	add    %rcx,%rax
   1bb8b:	4c 89 c1             	mov    %r8,%rcx
   1bb8e:	48 83 d2 00          	adc    $0x0,%rdx
   1bb92:	90                   	nop
   1bb93:	48 01 07             	add    %rax,(%rdi)
   1bb96:	48 11 d1             	adc    %rdx,%rcx
   1bb99:	48 83 c7 08          	add    $0x8,%rdi
   1bb9d:	48 8b 06             	mov    (%rsi),%rax
   1bba0:	48 f7 e3             	mul    %rbx
   1bba3:	48 83 c6 08          	add    $0x8,%rsi
   1bba7:	48 01 c8             	add    %rcx,%rax
   1bbaa:	4c 89 c1             	mov    %r8,%rcx
   1bbad:	48 83 d2 00          	adc    $0x0,%rdx
   1bbb1:	90                   	nop
   1bbb2:	48 01 07             	add    %rax,(%rdi)
   1bbb5:	48 11 d1             	adc    %rdx,%rcx
   1bbb8:	48 83 c7 08          	add    $0x8,%rdi
   1bbbc:	48 8b 06             	mov    (%rsi),%rax
   1bbbf:	48 f7 e3             	mul    %rbx
   1bbc2:	48 83 c6 08          	add    $0x8,%rsi
   1bbc6:	48 01 c8             	add    %rcx,%rax
   1bbc9:	4c 89 c1             	mov    %r8,%rcx
   1bbcc:	48 83 d2 00          	adc    $0x0,%rdx
   1bbd0:	90                   	nop
   1bbd1:	48 01 07             	add    %rax,(%rdi)
   1bbd4:	48 11 d1             	adc    %rdx,%rcx
   1bbd7:	48 83 c7 08          	add    $0x8,%rdi
   1bbdb:	48 8b 06             	mov    (%rsi),%rax
   1bbde:	48 f7 e3             	mul    %rbx
   1bbe1:	48 83 c6 08          	add    $0x8,%rsi
   1bbe5:	48 01 c8             	add    %rcx,%rax
   1bbe8:	4c 89 c1             	mov    %r8,%rcx
   1bbeb:	48 83 d2 00          	adc    $0x0,%rdx
   1bbef:	90                   	nop
   1bbf0:	48 01 07             	add    %rax,(%rdi)
   1bbf3:	48 11 d1             	adc    %rdx,%rcx
   1bbf6:	48 83 c7 08          	add    $0x8,%rdi
   1bbfa:	48 8b 06             	mov    (%rsi),%rax
   1bbfd:	48 f7 e3             	mul    %rbx
   1bc00:	48 83 c6 08          	add    $0x8,%rsi
   1bc04:	48 01 c8             	add    %rcx,%rax
   1bc07:	4c 89 c1             	mov    %r8,%rcx
   1bc0a:	48 83 d2 00          	adc    $0x0,%rdx
   1bc0e:	90                   	nop
   1bc0f:	48 01 07             	add    %rax,(%rdi)
   1bc12:	48 11 d1             	adc    %rdx,%rcx
   1bc15:	48 83 c7 08          	add    $0x8,%rdi
   1bc19:	48 8b 06             	mov    (%rsi),%rax
   1bc1c:	48 f7 e3             	mul    %rbx
   1bc1f:	48 83 c6 08          	add    $0x8,%rsi
   1bc23:	48 01 c8             	add    %rcx,%rax
   1bc26:	4c 89 c1             	mov    %r8,%rcx
   1bc29:	48 83 d2 00          	adc    $0x0,%rdx
   1bc2d:	90                   	nop
   1bc2e:	48 01 07             	add    %rax,(%rdi)
   1bc31:	48 11 d1             	adc    %rdx,%rcx
   1bc34:	48 83 c7 08          	add    $0x8,%rdi
   1bc38:	48 8b 06             	mov    (%rsi),%rax
   1bc3b:	48 f7 e3             	mul    %rbx
   1bc3e:	48 83 c6 08          	add    $0x8,%rsi
   1bc42:	48 01 c8             	add    %rcx,%rax
   1bc45:	4c 89 c1             	mov    %r8,%rcx
   1bc48:	48 83 d2 00          	adc    $0x0,%rdx
   1bc4c:	90                   	nop
   1bc4d:	48 01 07             	add    %rax,(%rdi)
   1bc50:	48 11 d1             	adc    %rdx,%rcx
   1bc53:	48 83 c7 08          	add    $0x8,%rdi
   1bc57:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
   1bc5b:	0f 85 f7 fe ff ff    	jne    1bb58 <mbedtls_mpi_core_mla+0x38>
   1bc61:	4d 8d 53 ff          	lea    -0x1(%r11),%r10
   1bc65:	4d 85 db             	test   %r11,%r11
   1bc68:	74 32                	je     1bc9c <mbedtls_mpi_core_mla+0x17c>
   1bc6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bc70:	49 83 ea 01          	sub    $0x1,%r10
   1bc74:	4d 31 c0             	xor    %r8,%r8
   1bc77:	48 8b 06             	mov    (%rsi),%rax
   1bc7a:	48 f7 e3             	mul    %rbx
   1bc7d:	48 83 c6 08          	add    $0x8,%rsi
   1bc81:	48 01 c8             	add    %rcx,%rax
   1bc84:	4c 89 c1             	mov    %r8,%rcx
   1bc87:	48 83 d2 00          	adc    $0x0,%rdx
   1bc8b:	90                   	nop
   1bc8c:	48 01 07             	add    %rax,(%rdi)
   1bc8f:	48 11 d1             	adc    %rdx,%rcx
   1bc92:	48 83 c7 08          	add    $0x8,%rdi
   1bc96:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
   1bc9a:	75 d4                	jne    1bc70 <mbedtls_mpi_core_mla+0x150>
   1bc9c:	49 8d 41 ff          	lea    -0x1(%r9),%rax
   1bca0:	4d 85 c9             	test   %r9,%r9
   1bca3:	74 1d                	je     1bcc2 <mbedtls_mpi_core_mla+0x1a2>
   1bca5:	0f 1f 00             	nopl   (%rax)
   1bca8:	48 03 0f             	add    (%rdi),%rcx
   1bcab:	48 89 0f             	mov    %rcx,(%rdi)
   1bcae:	0f 92 c1             	setb   %cl
   1bcb1:	48 83 e8 01          	sub    $0x1,%rax
   1bcb5:	48 83 c7 08          	add    $0x8,%rdi
   1bcb9:	0f b6 c9             	movzbl %cl,%ecx
   1bcbc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bcc0:	75 e6                	jne    1bca8 <mbedtls_mpi_core_mla+0x188>
   1bcc2:	48 89 c8             	mov    %rcx,%rax
   1bcc5:	5b                   	pop    %rbx
   1bcc6:	c3                   	retq   
   1bcc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bcce:	00 00 

000000000001bcd0 <mbedtls_mpi_core_mul>:
   1bcd0:	f3 0f 1e fa          	endbr64 
   1bcd4:	41 57                	push   %r15
   1bcd6:	4d 89 c7             	mov    %r8,%r15
   1bcd9:	41 56                	push   %r14
   1bcdb:	41 55                	push   %r13
   1bcdd:	49 89 f5             	mov    %rsi,%r13
   1bce0:	31 f6                	xor    %esi,%esi
   1bce2:	41 54                	push   %r12
   1bce4:	49 89 d4             	mov    %rdx,%r12
   1bce7:	4c 01 c2             	add    %r8,%rdx
   1bcea:	55                   	push   %rbp
   1bceb:	48 c1 e2 03          	shl    $0x3,%rdx
   1bcef:	48 89 fd             	mov    %rdi,%rbp
   1bcf2:	53                   	push   %rbx
   1bcf3:	48 89 cb             	mov    %rcx,%rbx
   1bcf6:	48 83 ec 08          	sub    $0x8,%rsp
   1bcfa:	e8 91 75 fe ff       	callq  3290 <memset@plt>
   1bcff:	4d 85 ff             	test   %r15,%r15
   1bd02:	74 2d                	je     1bd31 <mbedtls_mpi_core_mul+0x61>
   1bd04:	4d 8d 74 24 01       	lea    0x1(%r12),%r14
   1bd09:	4e 8d 3c fb          	lea    (%rbx,%r15,8),%r15
   1bd0d:	0f 1f 00             	nopl   (%rax)
   1bd10:	4c 8b 03             	mov    (%rbx),%r8
   1bd13:	48 89 ef             	mov    %rbp,%rdi
   1bd16:	4c 89 e1             	mov    %r12,%rcx
   1bd19:	4c 89 ea             	mov    %r13,%rdx
   1bd1c:	4c 89 f6             	mov    %r14,%rsi
   1bd1f:	48 83 c3 08          	add    $0x8,%rbx
   1bd23:	48 83 c5 08          	add    $0x8,%rbp
   1bd27:	e8 f4 fd ff ff       	callq  1bb20 <mbedtls_mpi_core_mla>
   1bd2c:	4c 39 fb             	cmp    %r15,%rbx
   1bd2f:	75 df                	jne    1bd10 <mbedtls_mpi_core_mul+0x40>
   1bd31:	48 83 c4 08          	add    $0x8,%rsp
   1bd35:	5b                   	pop    %rbx
   1bd36:	5d                   	pop    %rbp
   1bd37:	41 5c                	pop    %r12
   1bd39:	41 5d                	pop    %r13
   1bd3b:	41 5e                	pop    %r14
   1bd3d:	41 5f                	pop    %r15
   1bd3f:	c3                   	retq   

000000000001bd40 <mbedtls_mpi_core_montmul_init>:
   1bd40:	f3 0f 1e fa          	endbr64 
   1bd44:	48 8b 37             	mov    (%rdi),%rsi
   1bd47:	ba 04 00 00 00       	mov    $0x4,%edx
   1bd4c:	bf 02 00 00 00       	mov    $0x2,%edi
   1bd51:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
   1bd56:	83 e0 08             	and    $0x8,%eax
   1bd59:	48 01 f0             	add    %rsi,%rax
   1bd5c:	48 89 f1             	mov    %rsi,%rcx
   1bd5f:	49 89 f8             	mov    %rdi,%r8
   1bd62:	48 0f af c8          	imul   %rax,%rcx
   1bd66:	49 29 c8             	sub    %rcx,%r8
   1bd69:	49 0f af c0          	imul   %r8,%rax
   1bd6d:	83 ea 01             	sub    $0x1,%edx
   1bd70:	75 ea                	jne    1bd5c <mbedtls_mpi_core_montmul_init+0x1c>
   1bd72:	48 f7 d8             	neg    %rax
   1bd75:	c3                   	retq   
   1bd76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bd7d:	00 00 00 

000000000001bd80 <mbedtls_mpi_core_montmul>:
   1bd80:	f3 0f 1e fa          	endbr64 
   1bd84:	41 57                	push   %r15
   1bd86:	41 56                	push   %r14
   1bd88:	41 55                	push   %r13
   1bd8a:	41 54                	push   %r12
   1bd8c:	4d 89 c4             	mov    %r8,%r12
   1bd8f:	55                   	push   %rbp
   1bd90:	4c 89 cd             	mov    %r9,%rbp
   1bd93:	53                   	push   %rbx
   1bd94:	48 89 f3             	mov    %rsi,%rbx
   1bd97:	31 f6                	xor    %esi,%esi
   1bd99:	48 83 ec 38          	sub    $0x38,%rsp
   1bd9d:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
   1bda2:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1bda7:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1bdac:	4c 89 ca             	mov    %r9,%rdx
   1bdaf:	48 c1 e2 04          	shl    $0x4,%rdx
   1bdb3:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   1bdb8:	48 83 c2 08          	add    $0x8,%rdx
   1bdbc:	4c 89 ff             	mov    %r15,%rdi
   1bdbf:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1bdc4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1bdc9:	e8 c2 74 fe ff       	callq  3290 <memset@plt>
   1bdce:	48 85 ed             	test   %rbp,%rbp
   1bdd1:	0f 84 e9 00 00 00    	je     1bec0 <mbedtls_mpi_core_montmul+0x140>
   1bdd7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1bddc:	4c 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%r11
   1bde3:	00 
   1bde4:	49 89 d9             	mov    %rbx,%r9
   1bde7:	4c 8d 6d 02          	lea    0x2(%rbp),%r13
   1bdeb:	4f 8d 34 1f          	lea    (%r15,%r11,1),%r14
   1bdef:	4c 89 fb             	mov    %r15,%rbx
   1bdf2:	4d 89 cf             	mov    %r9,%r15
   1bdf5:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   1bdfa:	4d 89 d6             	mov    %r10,%r14
   1bdfd:	0f 1f 00             	nopl   (%rax)
   1be00:	4d 8b 07             	mov    (%r15),%r8
   1be03:	4d 8b 1e             	mov    (%r14),%r11
   1be06:	48 89 df             	mov    %rbx,%rdi
   1be09:	4c 89 f2             	mov    %r14,%rdx
   1be0c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1be11:	4c 89 ee             	mov    %r13,%rsi
   1be14:	49 83 c7 08          	add    $0x8,%r15
   1be18:	4d 0f af d8          	imul   %r8,%r11
   1be1c:	4c 03 1b             	add    (%rbx),%r11
   1be1f:	4c 0f af 5c 24 20    	imul   0x20(%rsp),%r11
   1be25:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1be2a:	e8 f1 fc ff ff       	callq  1bb20 <mbedtls_mpi_core_mla>
   1be2f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1be34:	48 89 df             	mov    %rbx,%rdi
   1be37:	48 89 e9             	mov    %rbp,%rcx
   1be3a:	4c 89 e2             	mov    %r12,%rdx
   1be3d:	4c 89 ee             	mov    %r13,%rsi
   1be40:	48 83 c3 08          	add    $0x8,%rbx
   1be44:	4d 89 d8             	mov    %r11,%r8
   1be47:	e8 d4 fc ff ff       	callq  1bb20 <mbedtls_mpi_core_mla>
   1be4c:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
   1be51:	75 ad                	jne    1be00 <mbedtls_mpi_core_montmul+0x80>
   1be53:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   1be58:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1be5d:	31 c9                	xor    %ecx,%ecx
   1be5f:	31 d2                	xor    %edx,%edx
   1be61:	4d 8b 04 ee          	mov    (%r14,%rbp,8),%r8
   1be65:	0f 1f 00             	nopl   (%rax)
   1be68:	49 8b 04 d6          	mov    (%r14,%rdx,8),%rax
   1be6c:	49 8b 34 d4          	mov    (%r12,%rdx,8),%rsi
   1be70:	31 ff                	xor    %edi,%edi
   1be72:	48 39 c8             	cmp    %rcx,%rax
   1be75:	40 0f 92 c7          	setb   %dil
   1be79:	48 29 c8             	sub    %rcx,%rax
   1be7c:	48 39 f0             	cmp    %rsi,%rax
   1be7f:	48 83 d7 00          	adc    $0x0,%rdi
   1be83:	48 29 f0             	sub    %rsi,%rax
   1be86:	49 89 04 d1          	mov    %rax,(%r9,%rdx,8)
   1be8a:	48 83 c2 01          	add    $0x1,%rdx
   1be8e:	48 89 f9             	mov    %rdi,%rcx
   1be91:	48 39 d5             	cmp    %rdx,%rbp
   1be94:	75 d2                	jne    1be68 <mbedtls_mpi_core_montmul+0xe8>
   1be96:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1be9b:	44 31 c1             	xor    %r8d,%ecx
   1be9e:	48 83 c4 38          	add    $0x38,%rsp
   1bea2:	4c 89 f2             	mov    %r14,%rdx
   1bea5:	5b                   	pop    %rbx
   1bea6:	48 89 ef             	mov    %rbp,%rdi
   1bea9:	0f b6 c9             	movzbl %cl,%ecx
   1beac:	5d                   	pop    %rbp
   1bead:	41 5c                	pop    %r12
   1beaf:	41 5d                	pop    %r13
   1beb1:	41 5e                	pop    %r14
   1beb3:	41 5f                	pop    %r15
   1beb5:	e9 96 b5 fe ff       	jmpq   7450 <mbedtls_ct_mpi_uint_cond_assign>
   1beba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bec0:	4d 8b 07             	mov    (%r15),%r8
   1bec3:	4d 89 fe             	mov    %r15,%r14
   1bec6:	31 c9                	xor    %ecx,%ecx
   1bec8:	eb cc                	jmp    1be96 <mbedtls_mpi_core_montmul+0x116>
   1beca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001bed0 <mbedtls_mpi_core_get_mont_r2_unsafe>:
   1bed0:	f3 0f 1e fa          	endbr64 
   1bed4:	55                   	push   %rbp
   1bed5:	48 89 fd             	mov    %rdi,%rbp
   1bed8:	53                   	push   %rbx
   1bed9:	48 89 f3             	mov    %rsi,%rbx
   1bedc:	be 01 00 00 00       	mov    $0x1,%esi
   1bee1:	48 83 ec 08          	sub    $0x8,%rsp
   1bee5:	e8 66 a6 ff ff       	callq  16550 <mbedtls_mpi_lset>
   1beea:	85 c0                	test   %eax,%eax
   1beec:	74 0a                	je     1bef8 <mbedtls_mpi_core_get_mont_r2_unsafe+0x28>
   1beee:	48 83 c4 08          	add    $0x8,%rsp
   1bef2:	5b                   	pop    %rbx
   1bef3:	5d                   	pop    %rbp
   1bef4:	c3                   	retq   
   1bef5:	0f 1f 00             	nopl   (%rax)
   1bef8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1befc:	48 89 ef             	mov    %rbp,%rdi
   1beff:	48 c1 e6 07          	shl    $0x7,%rsi
   1bf03:	e8 08 a9 ff ff       	callq  16810 <mbedtls_mpi_shift_l>
   1bf08:	85 c0                	test   %eax,%eax
   1bf0a:	75 e2                	jne    1beee <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
   1bf0c:	48 89 da             	mov    %rbx,%rdx
   1bf0f:	48 89 ee             	mov    %rbp,%rsi
   1bf12:	48 89 ef             	mov    %rbp,%rdi
   1bf15:	e8 c6 c0 ff ff       	callq  17fe0 <mbedtls_mpi_mod_mpi>
   1bf1a:	85 c0                	test   %eax,%eax
   1bf1c:	75 d0                	jne    1beee <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
   1bf1e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1bf22:	48 83 c4 08          	add    $0x8,%rsp
   1bf26:	48 89 ef             	mov    %rbp,%rdi
   1bf29:	5b                   	pop    %rbx
   1bf2a:	5d                   	pop    %rbp
   1bf2b:	e9 90 a3 ff ff       	jmpq   162c0 <mbedtls_mpi_shrink>

000000000001bf30 <mbedtls_mpi_core_fill_random>:
   1bf30:	f3 0f 1e fa          	endbr64 
   1bf34:	41 57                	push   %r15
   1bf36:	48 89 d0             	mov    %rdx,%rax
   1bf39:	41 56                	push   %r14
   1bf3b:	41 55                	push   %r13
   1bf3d:	41 54                	push   %r12
   1bf3f:	55                   	push   %rbp
   1bf40:	31 ed                	xor    %ebp,%ebp
   1bf42:	53                   	push   %rbx
   1bf43:	48 83 ec 18          	sub    $0x18,%rsp
   1bf47:	f6 c2 07             	test   $0x7,%dl
   1bf4a:	40 0f 95 c5          	setne  %bpl
   1bf4e:	48 c1 e8 03          	shr    $0x3,%rax
   1bf52:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1bf57:	48 01 c5             	add    %rax,%rbp
   1bf5a:	4c 89 04 24          	mov    %r8,(%rsp)
   1bf5e:	4c 8d 34 ed 00 00 00 	lea    0x0(,%rbp,8),%r14
   1bf65:	00 
   1bf66:	4d 89 f7             	mov    %r14,%r15
   1bf69:	49 29 d7             	sub    %rdx,%r15
   1bf6c:	48 39 f5             	cmp    %rsi,%rbp
   1bf6f:	77 6f                	ja     1bfe0 <mbedtls_mpi_core_fill_random+0xb0>
   1bf71:	48 89 f3             	mov    %rsi,%rbx
   1bf74:	49 89 fd             	mov    %rdi,%r13
   1bf77:	49 89 d4             	mov    %rdx,%r12
   1bf7a:	31 f6                	xor    %esi,%esi
   1bf7c:	4c 89 fa             	mov    %r15,%rdx
   1bf7f:	48 29 eb             	sub    %rbp,%rbx
   1bf82:	e8 09 73 fe ff       	callq  3290 <memset@plt>
   1bf87:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   1bf8e:	00 
   1bf8f:	4b 8d 7c 35 00       	lea    0x0(%r13,%r14,1),%rdi
   1bf94:	31 f6                	xor    %esi,%esi
   1bf96:	e8 f5 72 fe ff       	callq  3290 <memset@plt>
   1bf9b:	4c 8b 04 24          	mov    (%rsp),%r8
   1bf9f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1bfa4:	4c 89 e2             	mov    %r12,%rdx
   1bfa7:	4b 8d 74 3d 00       	lea    0x0(%r13,%r15,1),%rsi
   1bfac:	4c 89 c7             	mov    %r8,%rdi
   1bfaf:	ff d1                	callq  *%rcx
   1bfb1:	41 89 c0             	mov    %eax,%r8d
   1bfb4:	85 c0                	test   %eax,%eax
   1bfb6:	75 10                	jne    1bfc8 <mbedtls_mpi_core_fill_random+0x98>
   1bfb8:	48 85 ed             	test   %rbp,%rbp
   1bfbb:	74 0b                	je     1bfc8 <mbedtls_mpi_core_fill_random+0x98>
   1bfbd:	48 89 ee             	mov    %rbp,%rsi
   1bfc0:	4c 89 ef             	mov    %r13,%rdi
   1bfc3:	e8 c8 f4 ff ff       	callq  1b490 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1bfc8:	48 83 c4 18          	add    $0x18,%rsp
   1bfcc:	44 89 c0             	mov    %r8d,%eax
   1bfcf:	5b                   	pop    %rbx
   1bfd0:	5d                   	pop    %rbp
   1bfd1:	41 5c                	pop    %r12
   1bfd3:	41 5d                	pop    %r13
   1bfd5:	41 5e                	pop    %r14
   1bfd7:	41 5f                	pop    %r15
   1bfd9:	c3                   	retq   
   1bfda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bfe0:	41 b8 fc ff ff ff    	mov    $0xfffffffc,%r8d
   1bfe6:	eb e0                	jmp    1bfc8 <mbedtls_mpi_core_fill_random+0x98>
   1bfe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bfef:	00 

000000000001bff0 <mbedtls_mpi_core_random>:
   1bff0:	f3 0f 1e fa          	endbr64 
   1bff4:	41 57                	push   %r15
   1bff6:	4d 89 cf             	mov    %r9,%r15
   1bff9:	41 56                	push   %r14
   1bffb:	41 55                	push   %r13
   1bffd:	41 54                	push   %r12
   1bfff:	55                   	push   %rbp
   1c000:	48 89 fd             	mov    %rdi,%rbp
   1c003:	53                   	push   %rbx
   1c004:	48 89 cb             	mov    %rcx,%rbx
   1c007:	48 83 ec 38          	sub    $0x38,%rsp
   1c00b:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1c010:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   1c015:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1c01a:	48 85 c9             	test   %rcx,%rcx
   1c01d:	0f 84 bd 00 00 00    	je     1c0e0 <mbedtls_mpi_core_random+0xf0>
   1c023:	48 89 ce             	mov    %rcx,%rsi
   1c026:	48 89 d7             	mov    %rdx,%rdi
   1c029:	e8 12 f4 ff ff       	callq  1b440 <mbedtls_mpi_core_bitlen.part.0>
   1c02e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c033:	48 83 c0 07          	add    $0x7,%rax
   1c037:	48 89 c1             	mov    %rax,%rcx
   1c03a:	48 c1 e9 03          	shr    $0x3,%rcx
   1c03e:	48 83 f8 28          	cmp    $0x28,%rax
   1c042:	45 19 ed             	sbb    %r13d,%r13d
   1c045:	48 89 0c 24          	mov    %rcx,(%rsp)
   1c049:	41 81 e5 dc 00 00 00 	and    $0xdc,%r13d
   1c050:	41 83 c5 1e          	add    $0x1e,%r13d
   1c054:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1c058:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c05d:	0f 1f 00             	nopl   (%rax)
   1c060:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c065:	48 8b 14 24          	mov    (%rsp),%rdx
   1c069:	4d 89 f8             	mov    %r15,%r8
   1c06c:	48 89 de             	mov    %rbx,%rsi
   1c06f:	48 89 ef             	mov    %rbp,%rdi
   1c072:	e8 b9 fe ff ff       	callq  1bf30 <mbedtls_mpi_core_fill_random>
   1c077:	41 89 c4             	mov    %eax,%r12d
   1c07a:	85 c0                	test   %eax,%eax
   1c07c:	75 47                	jne    1c0c5 <mbedtls_mpi_core_random+0xd5>
   1c07e:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1c083:	48 89 de             	mov    %rbx,%rsi
   1c086:	48 2b 54 24 10       	sub    0x10(%rsp),%rdx
   1c08b:	48 89 ef             	mov    %rbp,%rdi
   1c08e:	e8 8d f8 ff ff       	callq  1b920 <mbedtls_mpi_core_shift_r>
   1c093:	41 83 ed 01          	sub    $0x1,%r13d
   1c097:	74 6f                	je     1c108 <mbedtls_mpi_core_random+0x118>
   1c099:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1c09e:	48 89 da             	mov    %rbx,%rdx
   1c0a1:	48 89 ee             	mov    %rbp,%rsi
   1c0a4:	e8 97 f4 ff ff       	callq  1b540 <mbedtls_mpi_core_uint_le_mpi>
   1c0a9:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1c0ae:	48 89 da             	mov    %rbx,%rdx
   1c0b1:	48 89 ef             	mov    %rbp,%rdi
   1c0b4:	41 89 c6             	mov    %eax,%r14d
   1c0b7:	e8 f4 b9 fe ff       	callq  7ab0 <mbedtls_mpi_core_lt_ct>
   1c0bc:	45 85 f6             	test   %r14d,%r14d
   1c0bf:	74 9f                	je     1c060 <mbedtls_mpi_core_random+0x70>
   1c0c1:	85 c0                	test   %eax,%eax
   1c0c3:	74 9b                	je     1c060 <mbedtls_mpi_core_random+0x70>
   1c0c5:	48 83 c4 38          	add    $0x38,%rsp
   1c0c9:	44 89 e0             	mov    %r12d,%eax
   1c0cc:	5b                   	pop    %rbx
   1c0cd:	5d                   	pop    %rbp
   1c0ce:	41 5c                	pop    %r12
   1c0d0:	41 5d                	pop    %r13
   1c0d2:	41 5e                	pop    %r14
   1c0d4:	41 5f                	pop    %r15
   1c0d6:	c3                   	retq   
   1c0d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c0de:	00 00 
   1c0e0:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1c0e7:	00 00 
   1c0e9:	b8 07 00 00 00       	mov    $0x7,%eax
   1c0ee:	41 bd fa 00 00 00    	mov    $0xfa,%r13d
   1c0f4:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1c0fb:	00 
   1c0fc:	e9 53 ff ff ff       	jmpq   1c054 <mbedtls_mpi_core_random+0x64>
   1c101:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c108:	f3 0f 1e fa          	endbr64 
   1c10c:	41 bc f2 ff ff ff    	mov    $0xfffffff2,%r12d
   1c112:	eb b1                	jmp    1c0c5 <mbedtls_mpi_core_random+0xd5>
   1c114:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c11b:	00 00 00 00 
   1c11f:	90                   	nop

000000000001c120 <mbedtls_mpi_core_exp_mod_working_limbs>:
   1c120:	f3 0f 1e fa          	endbr64 
   1c124:	48 c1 e6 06          	shl    $0x6,%rsi
   1c128:	49 89 f8             	mov    %rdi,%r8
   1c12b:	48 83 fe 50          	cmp    $0x50,%rsi
   1c12f:	48 19 ff             	sbb    %rdi,%rdi
   1c132:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   1c136:	48 83 c7 07          	add    $0x7,%rdi
   1c13a:	49 0f af f8          	imul   %r8,%rdi
   1c13e:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1c142:	c3                   	retq   
   1c143:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c14a:	00 00 00 00 
   1c14e:	66 90                	xchg   %ax,%ax

000000000001c150 <mbedtls_mpi_core_exp_mod>:
   1c150:	f3 0f 1e fa          	endbr64 
   1c154:	41 57                	push   %r15
   1c156:	4c 89 c8             	mov    %r9,%rax
   1c159:	49 89 cf             	mov    %rcx,%r15
   1c15c:	41 56                	push   %r14
   1c15e:	48 c1 e0 06          	shl    $0x6,%rax
   1c162:	49 89 d6             	mov    %rdx,%r14
   1c165:	41 55                	push   %r13
   1c167:	4d 89 cd             	mov    %r9,%r13
   1c16a:	41 54                	push   %r12
   1c16c:	49 89 f4             	mov    %rsi,%r12
   1c16f:	55                   	push   %rbp
   1c170:	48 89 fd             	mov    %rdi,%rbp
   1c173:	4a 8d 3c fd 00 00 00 	lea    0x0(,%r15,8),%rdi
   1c17a:	00 
   1c17b:	53                   	push   %rbx
   1c17c:	48 83 ec 68          	sub    $0x68,%rsp
   1c180:	48 83 f8 50          	cmp    $0x50,%rax
   1c184:	48 19 f6             	sbb    %rsi,%rsi
   1c187:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   1c18c:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
   1c190:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   1c195:	48 83 c6 04          	add    $0x4,%rsi
   1c199:	48 83 f8 50          	cmp    $0x50,%rax
   1c19d:	19 c9                	sbb    %ecx,%ecx
   1c19f:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1c1a4:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c1ab:	00 
   1c1ac:	83 c1 02             	add    $0x2,%ecx
   1c1af:	48 83 f8 50          	cmp    $0x50,%rax
   1c1b3:	48 19 c0             	sbb    %rax,%rax
   1c1b6:	48 83 c0 02          	add    $0x2,%rax
   1c1ba:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1c1bf:	4c 89 f8             	mov    %r15,%rax
   1c1c2:	48 d3 e0             	shl    %cl,%rax
   1c1c5:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
   1c1c9:	48 8b 32             	mov    (%rdx),%rsi
   1c1cc:	ba 04 00 00 00       	mov    $0x4,%edx
   1c1d1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1c1d6:	48 01 f8             	add    %rdi,%rax
   1c1d9:	bf 02 00 00 00       	mov    $0x2,%edi
   1c1de:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c1e3:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
   1c1e8:	83 e0 08             	and    $0x8,%eax
   1c1eb:	48 01 f0             	add    %rsi,%rax
   1c1ee:	48 89 f1             	mov    %rsi,%rcx
   1c1f1:	48 89 fb             	mov    %rdi,%rbx
   1c1f4:	48 0f af c8          	imul   %rax,%rcx
   1c1f8:	48 29 cb             	sub    %rcx,%rbx
   1c1fb:	48 0f af c3          	imul   %rbx,%rax
   1c1ff:	83 ea 01             	sub    $0x1,%edx
   1c202:	75 ea                	jne    1c1ee <mbedtls_mpi_core_exp_mod+0x9e>
   1c204:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1c209:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1c210:	00 
   1c211:	48 f7 d8             	neg    %rax
   1c214:	31 f6                	xor    %esi,%esi
   1c216:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1c21b:	48 89 da             	mov    %rbx,%rdx
   1c21e:	e8 6d 70 fe ff       	callq  3290 <memset@plt>
   1c223:	4d 89 f9             	mov    %r15,%r9
   1c226:	4d 89 f0             	mov    %r14,%r8
   1c229:	4c 89 f9             	mov    %r15,%rcx
   1c22c:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c233:	00 
   1c234:	48 c7 06 01 00 00 00 	movq   $0x1,(%rsi)
   1c23b:	ff 74 24 10          	pushq  0x10(%rsp)
   1c23f:	ff 74 24 30          	pushq  0x30(%rsp)
   1c243:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   1c24a:	00 
   1c24b:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   1c252:	00 
   1c253:	48 89 f7             	mov    %rsi,%rdi
   1c256:	e8 25 fb ff ff       	callq  1bd80 <mbedtls_mpi_core_montmul>
   1c25b:	48 89 da             	mov    %rbx,%rdx
   1c25e:	48 03 9c 24 b8 00 00 	add    0xb8(%rsp),%rbx
   1c265:	00 
   1c266:	4c 89 e6             	mov    %r12,%rsi
   1c269:	48 89 df             	mov    %rbx,%rdi
   1c26c:	49 89 dc             	mov    %rbx,%r12
   1c26f:	e8 9c 70 fe ff       	callq  3310 <memcpy@plt>
   1c274:	41 59                	pop    %r9
   1c276:	41 5a                	pop    %r10
   1c278:	b8 02 00 00 00       	mov    $0x2,%eax
   1c27d:	48 83 7c 24 20 02    	cmpq   $0x2,0x20(%rsp)
   1c283:	74 58                	je     1c2dd <mbedtls_mpi_core_exp_mod+0x18d>
   1c285:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   1c28a:	4d 89 e5             	mov    %r12,%r13
   1c28d:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   1c292:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   1c297:	48 89 dd             	mov    %rbx,%rbp
   1c29a:	4c 89 fb             	mov    %r15,%rbx
   1c29d:	49 89 c7             	mov    %rax,%r15
   1c2a0:	4c 89 ee             	mov    %r13,%rsi
   1c2a3:	4c 03 6c 24 18       	add    0x18(%rsp),%r13
   1c2a8:	ff 74 24 10          	pushq  0x10(%rsp)
   1c2ac:	4d 89 f0             	mov    %r14,%r8
   1c2af:	41 54                	push   %r12
   1c2b1:	4c 89 ef             	mov    %r13,%rdi
   1c2b4:	49 89 d9             	mov    %rbx,%r9
   1c2b7:	48 89 d9             	mov    %rbx,%rcx
   1c2ba:	48 89 ea             	mov    %rbp,%rdx
   1c2bd:	49 83 c7 01          	add    $0x1,%r15
   1c2c1:	e8 ba fa ff ff       	callq  1bd80 <mbedtls_mpi_core_montmul>
   1c2c6:	5f                   	pop    %rdi
   1c2c7:	41 58                	pop    %r8
   1c2c9:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
   1c2ce:	75 d0                	jne    1c2a0 <mbedtls_mpi_core_exp_mod+0x150>
   1c2d0:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   1c2d5:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   1c2da:	49 89 df             	mov    %rbx,%r15
   1c2dd:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1c2e2:	48 89 ef             	mov    %rbp,%rdi
   1c2e5:	49 89 ec             	mov    %rbp,%r12
   1c2e8:	31 db                	xor    %ebx,%ebx
   1c2ea:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c2f1:	00 
   1c2f2:	4c 89 fd             	mov    %r15,%rbp
   1c2f5:	e8 16 70 fe ff       	callq  3310 <memcpy@plt>
   1c2fa:	31 c0                	xor    %eax,%eax
   1c2fc:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   1c301:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1c308:	00 00 
   1c30a:	49 89 c6             	mov    %rax,%r14
   1c30d:	0f 1f 00             	nopl   (%rax)
   1c310:	ff 74 24 10          	pushq  0x10(%rsp)
   1c314:	48 89 e9             	mov    %rbp,%rcx
   1c317:	4c 89 e6             	mov    %r12,%rsi
   1c31a:	49 89 e9             	mov    %rbp,%r9
   1c31d:	ff 74 24 30          	pushq  0x30(%rsp)
   1c321:	4c 89 e2             	mov    %r12,%rdx
   1c324:	4c 89 e7             	mov    %r12,%rdi
   1c327:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1c32c:	e8 4f fa ff ff       	callq  1bd80 <mbedtls_mpi_core_montmul>
   1c331:	59                   	pop    %rcx
   1c332:	5e                   	pop    %rsi
   1c333:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   1c339:	0f 85 d1 00 00 00    	jne    1c410 <mbedtls_mpi_core_exp_mod+0x2c0>
   1c33f:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1c344:	49 83 ed 01          	sub    $0x1,%r13
   1c348:	48 01 db             	add    %rbx,%rbx
   1c34b:	49 83 c6 01          	add    $0x1,%r14
   1c34f:	4a 8b 04 e8          	mov    (%rax,%r13,8),%rax
   1c353:	48 89 c2             	mov    %rax,%rdx
   1c356:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c35b:	4c 89 e8             	mov    %r13,%rax
   1c35e:	48 c1 ea 3f          	shr    $0x3f,%rdx
   1c362:	48 83 c8 3f          	or     $0x3f,%rax
   1c366:	48 c7 44 24 08 3f 00 	movq   $0x3f,0x8(%rsp)
   1c36d:	00 00 
   1c36f:	48 09 d3             	or     %rdx,%rbx
   1c372:	4c 39 74 24 50       	cmp    %r14,0x50(%rsp)
   1c377:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1c37c:	75 92                	jne    1c310 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c37e:	66 90                	xchg   %ax,%ax
   1c380:	4c 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%r15
   1c387:	00 
   1c388:	45 31 f6             	xor    %r14d,%r14d
   1c38b:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   1c390:	4d 89 fc             	mov    %r15,%r12
   1c393:	4d 89 f7             	mov    %r14,%r15
   1c396:	49 89 de             	mov    %rbx,%r14
   1c399:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
   1c39e:	66 90                	xchg   %ax,%ax
   1c3a0:	4c 89 f6             	mov    %r14,%rsi
   1c3a3:	4c 89 ff             	mov    %r15,%rdi
   1c3a6:	e8 45 b0 fe ff       	callq  73f0 <mbedtls_ct_size_bool_eq>
   1c3ab:	4c 39 e3             	cmp    %r12,%rbx
   1c3ae:	74 11                	je     1c3c1 <mbedtls_mpi_core_exp_mod+0x271>
   1c3b0:	0f b6 c8             	movzbl %al,%ecx
   1c3b3:	4c 89 e2             	mov    %r12,%rdx
   1c3b6:	48 89 de             	mov    %rbx,%rsi
   1c3b9:	48 89 ef             	mov    %rbp,%rdi
   1c3bc:	e8 8f b0 fe ff       	callq  7450 <mbedtls_ct_mpi_uint_cond_assign>
   1c3c1:	49 83 c7 01          	add    $0x1,%r15
   1c3c5:	4c 03 64 24 18       	add    0x18(%rsp),%r12
   1c3ca:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
   1c3cf:	75 cf                	jne    1c3a0 <mbedtls_mpi_core_exp_mod+0x250>
   1c3d1:	4c 8b 64 24 48       	mov    0x48(%rsp),%r12
   1c3d6:	ff 74 24 10          	pushq  0x10(%rsp)
   1c3da:	49 89 e9             	mov    %rbp,%r9
   1c3dd:	48 89 e9             	mov    %rbp,%rcx
   1c3e0:	ff 74 24 30          	pushq  0x30(%rsp)
   1c3e4:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1c3e9:	4c 89 e6             	mov    %r12,%rsi
   1c3ec:	4c 89 e7             	mov    %r12,%rdi
   1c3ef:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1c3f4:	e8 87 f9 ff ff       	callq  1bd80 <mbedtls_mpi_core_montmul>
   1c3f9:	58                   	pop    %rax
   1c3fa:	5a                   	pop    %rdx
   1c3fb:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   1c401:	74 6d                	je     1c470 <mbedtls_mpi_core_exp_mod+0x320>
   1c403:	31 db                	xor    %ebx,%ebx
   1c405:	45 31 f6             	xor    %r14d,%r14d
   1c408:	e9 03 ff ff ff       	jmpq   1c310 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c40d:	0f 1f 00             	nopl   (%rax)
   1c410:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1c415:	48 83 6c 24 08 01    	subq   $0x1,0x8(%rsp)
   1c41b:	48 01 db             	add    %rbx,%rbx
   1c41e:	49 83 c6 01          	add    $0x1,%r14
   1c422:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1c427:	4a 8b 3c ef          	mov    (%rdi,%r13,8),%rdi
   1c42b:	89 c1                	mov    %eax,%ecx
   1c42d:	4c 09 e8             	or     %r13,%rax
   1c430:	48 89 fa             	mov    %rdi,%rdx
   1c433:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1c438:	48 d3 ea             	shr    %cl,%rdx
   1c43b:	83 e2 01             	and    $0x1,%edx
   1c43e:	48 09 d3             	or     %rdx,%rbx
   1c441:	4c 3b 74 24 50       	cmp    0x50(%rsp),%r14
   1c446:	0f 84 34 ff ff ff    	je     1c380 <mbedtls_mpi_core_exp_mod+0x230>
   1c44c:	48 85 c0             	test   %rax,%rax
   1c44f:	0f 85 bb fe ff ff    	jne    1c310 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c455:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1c45c:	00 00 
   1c45e:	45 31 ed             	xor    %r13d,%r13d
   1c461:	e9 1a ff ff ff       	jmpq   1c380 <mbedtls_mpi_core_exp_mod+0x230>
   1c466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c46d:	00 00 00 
   1c470:	48 83 c4 68          	add    $0x68,%rsp
   1c474:	5b                   	pop    %rbx
   1c475:	5d                   	pop    %rbp
   1c476:	41 5c                	pop    %r12
   1c478:	41 5d                	pop    %r13
   1c47a:	41 5e                	pop    %r14
   1c47c:	41 5f                	pop    %r15
   1c47e:	c3                   	retq   
   1c47f:	90                   	nop

000000000001c480 <mbedtls_mpi_core_sub_int>:
   1c480:	f3 0f 1e fa          	endbr64 
   1c484:	48 89 d0             	mov    %rdx,%rax
   1c487:	48 85 c9             	test   %rcx,%rcx
   1c48a:	74 21                	je     1c4ad <mbedtls_mpi_core_sub_int+0x2d>
   1c48c:	45 31 c0             	xor    %r8d,%r8d
   1c48f:	90                   	nop
   1c490:	4a 8b 14 c6          	mov    (%rsi,%r8,8),%rdx
   1c494:	49 89 d1             	mov    %rdx,%r9
   1c497:	49 29 c1             	sub    %rax,%r9
   1c49a:	0f 92 c0             	setb   %al
   1c49d:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
   1c4a1:	49 83 c0 01          	add    $0x1,%r8
   1c4a5:	0f b6 c0             	movzbl %al,%eax
   1c4a8:	4c 39 c1             	cmp    %r8,%rcx
   1c4ab:	75 e3                	jne    1c490 <mbedtls_mpi_core_sub_int+0x10>
   1c4ad:	c3                   	retq   
   1c4ae:	66 90                	xchg   %ax,%ax

000000000001c4b0 <mbedtls_mpi_core_check_zero_ct>:
   1c4b0:	f3 0f 1e fa          	endbr64 
   1c4b4:	48 85 f6             	test   %rsi,%rsi
   1c4b7:	74 17                	je     1c4d0 <mbedtls_mpi_core_check_zero_ct+0x20>
   1c4b9:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
   1c4bd:	31 c0                	xor    %eax,%eax
   1c4bf:	90                   	nop
   1c4c0:	48 0b 07             	or     (%rdi),%rax
   1c4c3:	48 83 c7 08          	add    $0x8,%rdi
   1c4c7:	48 39 d7             	cmp    %rdx,%rdi
   1c4ca:	75 f4                	jne    1c4c0 <mbedtls_mpi_core_check_zero_ct+0x10>
   1c4cc:	c3                   	retq   
   1c4cd:	0f 1f 00             	nopl   (%rax)
   1c4d0:	31 c0                	xor    %eax,%eax
   1c4d2:	c3                   	retq   
   1c4d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c4da:	00 00 00 00 
   1c4de:	66 90                	xchg   %ax,%ax

000000000001c4e0 <mbedtls_mpi_core_to_mont_rep>:
   1c4e0:	f3 0f 1e fa          	endbr64 
   1c4e4:	48 83 ec 08          	sub    $0x8,%rsp
   1c4e8:	49 89 d2             	mov    %rdx,%r10
   1c4eb:	4c 89 ca             	mov    %r9,%rdx
   1c4ee:	49 89 c9             	mov    %rcx,%r9
   1c4f1:	ff 74 24 10          	pushq  0x10(%rsp)
   1c4f5:	41 50                	push   %r8
   1c4f7:	4d 89 d0             	mov    %r10,%r8
   1c4fa:	e8 81 f8 ff ff       	callq  1bd80 <mbedtls_mpi_core_montmul>
   1c4ff:	48 83 c4 18          	add    $0x18,%rsp
   1c503:	c3                   	retq   
   1c504:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c50b:	00 00 00 00 
   1c50f:	90                   	nop

000000000001c510 <mbedtls_mpi_core_from_mont_rep>:
   1c510:	f3 0f 1e fa          	endbr64 
   1c514:	48 83 ec 18          	sub    $0x18,%rsp
   1c518:	49 89 d2             	mov    %rdx,%r10
   1c51b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c522:	00 00 
   1c524:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c529:	31 c0                	xor    %eax,%eax
   1c52b:	48 89 e2             	mov    %rsp,%rdx
   1c52e:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   1c535:	00 
   1c536:	41 51                	push   %r9
   1c538:	49 89 c9             	mov    %rcx,%r9
   1c53b:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c540:	41 50                	push   %r8
   1c542:	4d 89 d0             	mov    %r10,%r8
   1c545:	e8 36 f8 ff ff       	callq  1bd80 <mbedtls_mpi_core_montmul>
   1c54a:	58                   	pop    %rax
   1c54b:	5a                   	pop    %rdx
   1c54c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1c551:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1c558:	00 00 
   1c55a:	75 05                	jne    1c561 <mbedtls_mpi_core_from_mont_rep+0x51>
   1c55c:	48 83 c4 18          	add    $0x18,%rsp
   1c560:	c3                   	retq   
   1c561:	e8 fa 6c fe ff       	callq  3260 <__stack_chk_fail@plt>
   1c566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c56d:	00 00 00 

000000000001c570 <camellia_feistel>:
   1c570:	8b 0f                	mov    (%rdi),%ecx
   1c572:	33 0e                	xor    (%rsi),%ecx
   1c574:	4c 8d 05 05 9b 00 00 	lea    0x9b05(%rip),%r8        # 26080 <FSb3>
   1c57b:	4c 8d 15 fe 9c 00 00 	lea    0x9cfe(%rip),%r10        # 26280 <FSb>
   1c582:	8b 47 04             	mov    0x4(%rdi),%eax
   1c585:	33 46 04             	xor    0x4(%rsi),%eax
   1c588:	0f b6 f5             	movzbl %ch,%esi
   1c58b:	48 8d 3d ee 99 00 00 	lea    0x99ee(%rip),%rdi        # 25f80 <FSb4>
   1c592:	45 0f b6 0c 30       	movzbl (%r8,%rsi,1),%r9d
   1c597:	89 ce                	mov    %ecx,%esi
   1c599:	44 0f b6 d9          	movzbl %cl,%r11d
   1c59d:	c1 e9 10             	shr    $0x10,%ecx
   1c5a0:	c1 ee 18             	shr    $0x18,%esi
   1c5a3:	46 0f b6 1c 1f       	movzbl (%rdi,%r11,1),%r11d
   1c5a8:	0f b6 c9             	movzbl %cl,%ecx
   1c5ab:	41 0f b6 34 32       	movzbl (%r10,%rsi,1),%esi
   1c5b0:	41 c1 e1 08          	shl    $0x8,%r9d
   1c5b4:	c1 e6 18             	shl    $0x18,%esi
   1c5b7:	44 09 de             	or     %r11d,%esi
   1c5ba:	4c 8d 1d bf 9b 00 00 	lea    0x9bbf(%rip),%r11        # 26180 <FSb2>
   1c5c1:	41 0f b6 0c 0b       	movzbl (%r11,%rcx,1),%ecx
   1c5c6:	c1 e1 10             	shl    $0x10,%ecx
   1c5c9:	09 f1                	or     %esi,%ecx
   1c5cb:	41 09 c9             	or     %ecx,%r9d
   1c5ce:	0f b6 cc             	movzbl %ah,%ecx
   1c5d1:	0f b6 3c 0f          	movzbl (%rdi,%rcx,1),%edi
   1c5d5:	89 c1                	mov    %eax,%ecx
   1c5d7:	c1 e9 18             	shr    $0x18,%ecx
   1c5da:	41 0f b6 34 0b       	movzbl (%r11,%rcx,1),%esi
   1c5df:	0f b6 c8             	movzbl %al,%ecx
   1c5e2:	c1 e8 10             	shr    $0x10,%eax
   1c5e5:	41 0f b6 0c 0a       	movzbl (%r10,%rcx,1),%ecx
   1c5ea:	c1 e7 08             	shl    $0x8,%edi
   1c5ed:	c1 e6 18             	shl    $0x18,%esi
   1c5f0:	09 ce                	or     %ecx,%esi
   1c5f2:	0f b6 c8             	movzbl %al,%ecx
   1c5f5:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   1c5fa:	c1 e0 10             	shl    $0x10,%eax
   1c5fd:	09 f0                	or     %esi,%eax
   1c5ff:	09 c7                	or     %eax,%edi
   1c601:	89 f9                	mov    %edi,%ecx
   1c603:	c1 c1 08             	rol    $0x8,%ecx
   1c606:	89 ce                	mov    %ecx,%esi
   1c608:	44 31 ce             	xor    %r9d,%esi
   1c60b:	89 f0                	mov    %esi,%eax
   1c60d:	c1 c0 10             	rol    $0x10,%eax
   1c610:	31 f8                	xor    %edi,%eax
   1c612:	89 c1                	mov    %eax,%ecx
   1c614:	33 02                	xor    (%rdx),%eax
   1c616:	c1 c9 08             	ror    $0x8,%ecx
   1c619:	31 f1                	xor    %esi,%ecx
   1c61b:	31 4a 04             	xor    %ecx,0x4(%rdx)
   1c61e:	89 ce                	mov    %ecx,%esi
   1c620:	c1 ce 08             	ror    $0x8,%esi
   1c623:	31 f0                	xor    %esi,%eax
   1c625:	89 02                	mov    %eax,(%rdx)
   1c627:	c3                   	retq   
   1c628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c62f:	00 

000000000001c630 <mbedtls_camellia_init>:
   1c630:	f3 0f 1e fa          	endbr64 
   1c634:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1c63b:	48 89 f9             	mov    %rdi,%rcx
   1c63e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1c642:	31 c0                	xor    %eax,%eax
   1c644:	48 c7 87 04 01 00 00 	movq   $0x0,0x104(%rdi)
   1c64b:	00 00 00 00 
   1c64f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1c653:	48 29 f9             	sub    %rdi,%rcx
   1c656:	81 c1 14 01 00 00    	add    $0x114,%ecx
   1c65c:	c1 e9 03             	shr    $0x3,%ecx
   1c65f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1c662:	c3                   	retq   
   1c663:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c66a:	00 00 00 00 
   1c66e:	66 90                	xchg   %ax,%ax

000000000001c670 <mbedtls_camellia_free>:
   1c670:	f3 0f 1e fa          	endbr64 
   1c674:	48 85 ff             	test   %rdi,%rdi
   1c677:	74 0f                	je     1c688 <mbedtls_camellia_free+0x18>
   1c679:	be 14 01 00 00       	mov    $0x114,%esi
   1c67e:	e9 ad 8b fe ff       	jmpq   5230 <mbedtls_platform_zeroize>
   1c683:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c688:	c3                   	retq   
   1c689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c690 <mbedtls_camellia_setkey_enc>:
   1c690:	f3 0f 1e fa          	endbr64 
   1c694:	41 57                	push   %r15
   1c696:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1c69a:	41 89 d7             	mov    %edx,%r15d
   1c69d:	41 56                	push   %r14
   1c69f:	41 55                	push   %r13
   1c6a1:	49 89 fd             	mov    %rdi,%r13
   1c6a4:	41 54                	push   %r12
   1c6a6:	4c 8d 67 04          	lea    0x4(%rdi),%r12
   1c6aa:	48 83 c7 0c          	add    $0xc,%rdi
   1c6ae:	55                   	push   %rbp
   1c6af:	4c 89 e1             	mov    %r12,%rcx
   1c6b2:	53                   	push   %rbx
   1c6b3:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   1c6ba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c6c1:	00 00 
   1c6c3:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   1c6ca:	00 
   1c6cb:	31 c0                	xor    %eax,%eax
   1c6cd:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   1c6d4:	00 
   1c6d5:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   1c6dc:	00 
   1c6dd:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   1c6e4:	00 
   1c6e5:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
   1c6ec:	00 
   1c6ed:	48 c7 47 f8 00 00 00 	movq   $0x0,-0x8(%rdi)
   1c6f4:	00 
   1c6f5:	48 c7 87 00 01 00 00 	movq   $0x0,0x100(%rdi)
   1c6fc:	00 00 00 00 
   1c700:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1c704:	48 29 f9             	sub    %rdi,%rcx
   1c707:	81 c1 10 01 00 00    	add    $0x110,%ecx
   1c70d:	c1 e9 03             	shr    $0x3,%ecx
   1c710:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1c713:	8d 82 40 ff ff ff    	lea    -0xc0(%rdx),%eax
   1c719:	83 e0 bf             	and    $0xffffffbf,%eax
   1c71c:	74 42                	je     1c760 <mbedtls_camellia_setkey_enc+0xd0>
   1c71e:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1c723:	81 fa 80 00 00 00    	cmp    $0x80,%edx
   1c729:	0f 84 11 07 00 00    	je     1ce40 <mbedtls_camellia_setkey_enc+0x7b0>
   1c72f:	48 8b 9c 24 28 01 00 	mov    0x128(%rsp),%rbx
   1c736:	00 
   1c737:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1c73e:	00 00 
   1c740:	0f 85 50 07 00 00    	jne    1ce96 <mbedtls_camellia_setkey_enc+0x806>
   1c746:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
   1c74d:	5b                   	pop    %rbx
   1c74e:	5d                   	pop    %rbp
   1c74f:	41 5c                	pop    %r12
   1c751:	41 5d                	pop    %r13
   1c753:	41 5e                	pop    %r14
   1c755:	41 5f                	pop    %r15
   1c757:	c3                   	retq   
   1c758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c75f:	00 
   1c760:	89 d1                	mov    %edx,%ecx
   1c762:	41 c7 45 00 04 00 00 	movl   $0x4,0x0(%r13)
   1c769:	00 
   1c76a:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   1c771:	bb 19 00 00 00       	mov    $0x19,%ebx
   1c776:	c1 e9 03             	shr    $0x3,%ecx
   1c779:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%rsp)
   1c780:	00 
   1c781:	48 c7 44 24 10 2c 00 	movq   $0x2c,0x10(%rsp)
   1c788:	00 00 
   1c78a:	89 cf                	mov    %ecx,%edi
   1c78c:	74 2b                	je     1c7b9 <mbedtls_camellia_setkey_enc+0x129>
   1c78e:	31 c0                	xor    %eax,%eax
   1c790:	48 8d 8c 24 e0 00 00 	lea    0xe0(%rsp),%rcx
   1c797:	00 
   1c798:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c79f:	00 
   1c7a0:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
   1c7a4:	88 14 01             	mov    %dl,(%rcx,%rax,1)
   1c7a7:	48 83 c0 01          	add    $0x1,%rax
   1c7ab:	48 39 f8             	cmp    %rdi,%rax
   1c7ae:	72 f0                	jb     1c7a0 <mbedtls_camellia_setkey_enc+0x110>
   1c7b0:	8b 8c 24 e0 00 00 00 	mov    0xe0(%rsp),%ecx
   1c7b7:	0f c9                	bswap  %ecx
   1c7b9:	41 81 ff c0 00 00 00 	cmp    $0xc0,%r15d
   1c7c0:	0f 84 aa 06 00 00    	je     1ce70 <mbedtls_camellia_setkey_enc+0x7e0>
   1c7c6:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
   1c7cb:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1c7d0:	bf 7f 66 9e a0       	mov    $0xa09e667f,%edi
   1c7d5:	41 b9 8b 90 cc 3b    	mov    $0x3bcc908b,%r9d
   1c7db:	4c 89 c2             	mov    %r8,%rdx
   1c7de:	48 8d 35 9b 9b 00 00 	lea    0x9b9b(%rip),%rsi        # 26380 <SIGMA_CHARS>
   1c7e5:	eb 14                	jmp    1c7fb <mbedtls_camellia_setkey_enc+0x16b>
   1c7e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c7ee:	00 00 
   1c7f0:	8b 3e                	mov    (%rsi),%edi
   1c7f2:	44 8b 4e 04          	mov    0x4(%rsi),%r9d
   1c7f6:	0f cf                	bswap  %edi
   1c7f8:	41 0f c9             	bswap  %r9d
   1c7fb:	89 3a                	mov    %edi,(%rdx)
   1c7fd:	48 83 c2 08          	add    $0x8,%rdx
   1c801:	48 83 c6 08          	add    $0x8,%rsi
   1c805:	44 89 4a fc          	mov    %r9d,-0x4(%rdx)
   1c809:	48 39 c2             	cmp    %rax,%rdx
   1c80c:	75 e2                	jne    1c7f0 <mbedtls_camellia_setkey_enc+0x160>
   1c80e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1c812:	31 d2                	xor    %edx,%edx
   1c814:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1c819:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1c81e:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1c823:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1c82a:	00 
   1c82b:	eb 0c                	jmp    1c839 <mbedtls_camellia_setkey_enc+0x1a9>
   1c82d:	0f 1f 00             	nopl   (%rax)
   1c830:	8b 8c 94 e0 00 00 00 	mov    0xe0(%rsp,%rdx,4),%ecx
   1c837:	0f c9                	bswap  %ecx
   1c839:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
   1c83c:	48 83 c2 01          	add    $0x1,%rdx
   1c840:	48 83 fa 08          	cmp    $0x8,%rdx
   1c844:	75 ea                	jne    1c830 <mbedtls_camellia_setkey_enc+0x1a0>
   1c846:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1c84b:	48 33 54 24 60       	xor    0x60(%rsp),%rdx
   1c850:	4c 8d 54 24 70       	lea    0x70(%rsp),%r10
   1c855:	4c 89 c6             	mov    %r8,%rsi
   1c858:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
   1c85d:	4c 8d 74 24 78       	lea    0x78(%rsp),%r14
   1c862:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   1c867:	4c 89 d7             	mov    %r10,%rdi
   1c86a:	48 33 54 24 68       	xor    0x68(%rsp),%rdx
   1c86f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c874:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
   1c879:	4c 89 f2             	mov    %r14,%rdx
   1c87c:	4c 89 14 24          	mov    %r10,(%rsp)
   1c880:	e8 eb fc ff ff       	callq  1c570 <camellia_feistel>
   1c885:	4c 8b 14 24          	mov    (%rsp),%r10
   1c889:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   1c88e:	4c 89 f7             	mov    %r14,%rdi
   1c891:	4c 89 d2             	mov    %r10,%rdx
   1c894:	e8 d7 fc ff ff       	callq  1c570 <camellia_feistel>
   1c899:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1c89e:	4c 8b 14 24          	mov    (%rsp),%r10
   1c8a2:	48 8d 4c 24 60       	lea    0x60(%rsp),%rcx
   1c8a7:	8b 10                	mov    (%rax),%edx
   1c8a9:	31 50 20             	xor    %edx,0x20(%rax)
   1c8ac:	48 83 c0 04          	add    $0x4,%rax
   1c8b0:	48 39 c8             	cmp    %rcx,%rax
   1c8b3:	75 f2                	jne    1c8a7 <mbedtls_camellia_setkey_enc+0x217>
   1c8b5:	4c 89 d7             	mov    %r10,%rdi
   1c8b8:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1c8bd:	4c 89 f2             	mov    %r14,%rdx
   1c8c0:	4c 89 14 24          	mov    %r10,(%rsp)
   1c8c4:	e8 a7 fc ff ff       	callq  1c570 <camellia_feistel>
   1c8c9:	4c 8b 14 24          	mov    (%rsp),%r10
   1c8cd:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   1c8d2:	4c 89 f7             	mov    %r14,%rdi
   1c8d5:	4c 89 d2             	mov    %r10,%rdx
   1c8d8:	e8 93 fc ff ff       	callq  1c570 <camellia_feistel>
   1c8dd:	41 81 ff 80 00 00 00 	cmp    $0x80,%r15d
   1c8e4:	76 66                	jbe    1c94c <mbedtls_camellia_setkey_enc+0x2bc>
   1c8e6:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   1c8ed:	00 
   1c8ee:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1c8f3:	48 33 44 24 70       	xor    0x70(%rsp),%rax
   1c8f8:	4c 8d 8c 24 80 00 00 	lea    0x80(%rsp),%r9
   1c8ff:	00 
   1c900:	4c 89 c2             	mov    %r8,%rdx
   1c903:	4c 89 cf             	mov    %r9,%rdi
   1c906:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   1c90b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1c910:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1c917:	00 
   1c918:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1c91d:	48 33 44 24 78       	xor    0x78(%rsp),%rax
   1c922:	4c 89 0c 24          	mov    %r9,(%rsp)
   1c926:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   1c92d:	00 
   1c92e:	e8 3d fc ff ff       	callq  1c570 <camellia_feistel>
   1c933:	4c 8b 0c 24          	mov    (%rsp),%r9
   1c937:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1c93c:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
   1c941:	4c 89 ca             	mov    %r9,%rdx
   1c944:	4c 89 c7             	mov    %r8,%rdi
   1c947:	e8 24 fc ff ff       	callq  1c570 <camellia_feistel>
   1c94c:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1c951:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
   1c958:	00 
   1c959:	be 01 00 00 00       	mov    $0x1,%esi
   1c95e:	41 be 20 00 00 00    	mov    $0x20,%r14d
   1c964:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1c969:	49 89 d3             	mov    %rdx,%r11
   1c96c:	48 89 d7             	mov    %rdx,%rdi
   1c96f:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1c976:	00 
   1c977:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1c97c:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1c983:	00 
   1c984:	48 63 44 24 1c       	movslq 0x1c(%rsp),%rax
   1c989:	49 89 c1             	mov    %rax,%r9
   1c98c:	48 89 04 24          	mov    %rax,(%rsp)
   1c990:	48 8d 05 c9 95 00 00 	lea    0x95c9(%rip),%rax        # 25f60 <shifts>
   1c997:	49 c1 e1 04          	shl    $0x4,%r9
   1c99b:	49 01 c1             	add    %rax,%r9
   1c99e:	b8 01 00 00 00       	mov    $0x1,%eax
   1c9a3:	84 c0                	test   %al,%al
   1c9a5:	0f 84 8e 00 00 00    	je     1ca39 <mbedtls_camellia_setkey_enc+0x3a9>
   1c9ab:	89 f0                	mov    %esi,%eax
   1c9ad:	44 8b 94 24 90 00 00 	mov    0x90(%rsp),%r10d
   1c9b4:	00 
   1c9b5:	45 89 f0             	mov    %r14d,%r8d
   1c9b8:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
   1c9bf:	c1 e0 04             	shl    $0x4,%eax
   1c9c2:	29 f0                	sub    %esi,%eax
   1c9c4:	83 e0 1f             	and    $0x1f,%eax
   1c9c7:	41 29 c0             	sub    %eax,%r8d
   1c9ca:	89 c1                	mov    %eax,%ecx
   1c9cc:	41 d3 e2             	shl    %cl,%r10d
   1c9cf:	44 89 c1             	mov    %r8d,%ecx
   1c9d2:	d3 ea                	shr    %cl,%edx
   1c9d4:	89 c1                	mov    %eax,%ecx
   1c9d6:	41 31 d2             	xor    %edx,%r10d
   1c9d9:	44 89 57 10          	mov    %r10d,0x10(%rdi)
   1c9dd:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   1c9e4:	00 
   1c9e5:	8b 94 24 98 00 00 00 	mov    0x98(%rsp),%edx
   1c9ec:	41 d3 e2             	shl    %cl,%r10d
   1c9ef:	44 89 c1             	mov    %r8d,%ecx
   1c9f2:	d3 ea                	shr    %cl,%edx
   1c9f4:	89 c1                	mov    %eax,%ecx
   1c9f6:	41 31 d2             	xor    %edx,%r10d
   1c9f9:	44 89 57 14          	mov    %r10d,0x14(%rdi)
   1c9fd:	44 8b 94 24 98 00 00 	mov    0x98(%rsp),%r10d
   1ca04:	00 
   1ca05:	8b 94 24 9c 00 00 00 	mov    0x9c(%rsp),%edx
   1ca0c:	41 d3 e2             	shl    %cl,%r10d
   1ca0f:	44 89 c1             	mov    %r8d,%ecx
   1ca12:	d3 ea                	shr    %cl,%edx
   1ca14:	89 c1                	mov    %eax,%ecx
   1ca16:	41 31 d2             	xor    %edx,%r10d
   1ca19:	44 89 57 18          	mov    %r10d,0x18(%rdi)
   1ca1d:	8b 94 24 9c 00 00 00 	mov    0x9c(%rsp),%edx
   1ca24:	d3 e2                	shl    %cl,%edx
   1ca26:	44 89 c1             	mov    %r8d,%ecx
   1ca29:	89 d0                	mov    %edx,%eax
   1ca2b:	8b 94 24 90 00 00 00 	mov    0x90(%rsp),%edx
   1ca32:	d3 ea                	shr    %cl,%edx
   1ca34:	31 d0                	xor    %edx,%eax
   1ca36:	89 47 1c             	mov    %eax,0x1c(%rdi)
   1ca39:	48 83 c6 01          	add    $0x1,%rsi
   1ca3d:	48 83 c7 10          	add    $0x10,%rdi
   1ca41:	48 83 fe 05          	cmp    $0x5,%rsi
   1ca45:	74 1c                	je     1ca63 <mbedtls_camellia_setkey_enc+0x3d3>
   1ca47:	41 0f b6 44 31 ff    	movzbl -0x1(%r9,%rsi,1),%eax
   1ca4d:	84 c0                	test   %al,%al
   1ca4f:	0f 85 56 ff ff ff    	jne    1c9ab <mbedtls_camellia_setkey_enc+0x31b>
   1ca55:	48 83 c6 01          	add    $0x1,%rsi
   1ca59:	48 83 c7 10          	add    $0x10,%rdi
   1ca5d:	48 83 fe 05          	cmp    $0x5,%rsi
   1ca61:	75 e4                	jne    1ca47 <mbedtls_camellia_setkey_enc+0x3b7>
   1ca63:	48 8b 3c 24          	mov    (%rsp),%rdi
   1ca67:	48 8d 0d 52 94 00 00 	lea    0x9452(%rip),%rcx        # 25ec0 <indexes>
   1ca6e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1ca73:	31 f6                	xor    %esi,%esi
   1ca75:	48 8d 04 bd 00 00 00 	lea    0x0(,%rdi,4),%rax
   1ca7c:	00 
   1ca7d:	48 01 f8             	add    %rdi,%rax
   1ca80:	48 c1 e0 04          	shl    $0x4,%rax
   1ca84:	48 01 c8             	add    %rcx,%rax
   1ca87:	31 c9                	xor    %ecx,%ecx
   1ca89:	eb 0a                	jmp    1ca95 <mbedtls_camellia_setkey_enc+0x405>
   1ca8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ca90:	48 0f be 34 08       	movsbq (%rax,%rcx,1),%rsi
   1ca95:	40 80 fe ff          	cmp    $0xff,%sil
   1ca99:	74 07                	je     1caa2 <mbedtls_camellia_setkey_enc+0x412>
   1ca9b:	8b 3c 8a             	mov    (%rdx,%rcx,4),%edi
   1ca9e:	41 89 3c b4          	mov    %edi,(%r12,%rsi,4)
   1caa2:	48 83 c1 01          	add    $0x1,%rcx
   1caa6:	48 83 f9 14          	cmp    $0x14,%rcx
   1caaa:	75 e4                	jne    1ca90 <mbedtls_camellia_setkey_enc+0x400>
   1caac:	41 81 ff 80 00 00 00 	cmp    $0x80,%r15d
   1cab3:	0f 86 04 01 00 00    	jbe    1cbbd <mbedtls_camellia_setkey_enc+0x52d>
   1cab9:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
   1cabe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cac3:	49 89 d0             	mov    %rdx,%r8
   1cac6:	be 01 00 00 00       	mov    $0x1,%esi
   1cacb:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   1cad2:	00 
   1cad3:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   1cad8:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   1cadf:	00 
   1cae0:	41 80 7c 31 03 00    	cmpb   $0x0,0x3(%r9,%rsi,1)
   1cae6:	0f 84 92 00 00 00    	je     1cb7e <mbedtls_camellia_setkey_enc+0x4ee>
   1caec:	89 f7                	mov    %esi,%edi
   1caee:	44 8b b4 24 90 00 00 	mov    0x90(%rsp),%r14d
   1caf5:	00 
   1caf6:	41 ba 20 00 00 00    	mov    $0x20,%r10d
   1cafc:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
   1cb03:	c1 e7 04             	shl    $0x4,%edi
   1cb06:	29 f7                	sub    %esi,%edi
   1cb08:	83 e7 1f             	and    $0x1f,%edi
   1cb0b:	41 29 fa             	sub    %edi,%r10d
   1cb0e:	89 f9                	mov    %edi,%ecx
   1cb10:	41 d3 e6             	shl    %cl,%r14d
   1cb13:	44 89 d1             	mov    %r10d,%ecx
   1cb16:	d3 e8                	shr    %cl,%eax
   1cb18:	89 f9                	mov    %edi,%ecx
   1cb1a:	41 31 c6             	xor    %eax,%r14d
   1cb1d:	45 89 70 10          	mov    %r14d,0x10(%r8)
   1cb21:	44 8b b4 24 94 00 00 	mov    0x94(%rsp),%r14d
   1cb28:	00 
   1cb29:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
   1cb30:	41 d3 e6             	shl    %cl,%r14d
   1cb33:	44 89 d1             	mov    %r10d,%ecx
   1cb36:	d3 e8                	shr    %cl,%eax
   1cb38:	89 f9                	mov    %edi,%ecx
   1cb3a:	41 31 c6             	xor    %eax,%r14d
   1cb3d:	45 89 70 14          	mov    %r14d,0x14(%r8)
   1cb41:	44 8b b4 24 98 00 00 	mov    0x98(%rsp),%r14d
   1cb48:	00 
   1cb49:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cb50:	41 d3 e6             	shl    %cl,%r14d
   1cb53:	44 89 d1             	mov    %r10d,%ecx
   1cb56:	d3 e8                	shr    %cl,%eax
   1cb58:	89 f9                	mov    %edi,%ecx
   1cb5a:	41 31 c6             	xor    %eax,%r14d
   1cb5d:	45 89 70 18          	mov    %r14d,0x18(%r8)
   1cb61:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cb68:	d3 e0                	shl    %cl,%eax
   1cb6a:	44 89 d1             	mov    %r10d,%ecx
   1cb6d:	89 c7                	mov    %eax,%edi
   1cb6f:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
   1cb76:	d3 e8                	shr    %cl,%eax
   1cb78:	31 c7                	xor    %eax,%edi
   1cb7a:	41 89 78 1c          	mov    %edi,0x1c(%r8)
   1cb7e:	48 83 c6 01          	add    $0x1,%rsi
   1cb82:	49 83 c0 10          	add    $0x10,%r8
   1cb86:	48 83 fe 05          	cmp    $0x5,%rsi
   1cb8a:	0f 85 50 ff ff ff    	jne    1cae0 <mbedtls_camellia_setkey_enc+0x450>
   1cb90:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1cb95:	31 c9                	xor    %ecx,%ecx
   1cb97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cb9e:	00 00 
   1cba0:	48 0f be 74 08 14    	movsbq 0x14(%rax,%rcx,1),%rsi
   1cba6:	40 80 fe ff          	cmp    $0xff,%sil
   1cbaa:	74 07                	je     1cbb3 <mbedtls_camellia_setkey_enc+0x523>
   1cbac:	8b 3c 8a             	mov    (%rdx,%rcx,4),%edi
   1cbaf:	41 89 3c b4          	mov    %edi,(%r12,%rsi,4)
   1cbb3:	48 83 c1 01          	add    $0x1,%rcx
   1cbb7:	48 83 f9 14          	cmp    $0x14,%rcx
   1cbbb:	75 e3                	jne    1cba0 <mbedtls_camellia_setkey_enc+0x510>
   1cbbd:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   1cbc2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cbc7:	49 89 d0             	mov    %rdx,%r8
   1cbca:	bf 01 00 00 00       	mov    $0x1,%edi
   1cbcf:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   1cbd6:	00 
   1cbd7:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   1cbdc:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   1cbe3:	00 
   1cbe4:	b9 01 00 00 00       	mov    $0x1,%ecx
   1cbe9:	84 c9                	test   %cl,%cl
   1cbeb:	0f 84 92 00 00 00    	je     1cc83 <mbedtls_camellia_setkey_enc+0x5f3>
   1cbf1:	89 fe                	mov    %edi,%esi
   1cbf3:	44 8b b4 24 90 00 00 	mov    0x90(%rsp),%r14d
   1cbfa:	00 
   1cbfb:	41 ba 20 00 00 00    	mov    $0x20,%r10d
   1cc01:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
   1cc08:	c1 e6 04             	shl    $0x4,%esi
   1cc0b:	29 fe                	sub    %edi,%esi
   1cc0d:	83 e6 1f             	and    $0x1f,%esi
   1cc10:	41 29 f2             	sub    %esi,%r10d
   1cc13:	89 f1                	mov    %esi,%ecx
   1cc15:	41 d3 e6             	shl    %cl,%r14d
   1cc18:	44 89 d1             	mov    %r10d,%ecx
   1cc1b:	d3 e8                	shr    %cl,%eax
   1cc1d:	89 f1                	mov    %esi,%ecx
   1cc1f:	41 31 c6             	xor    %eax,%r14d
   1cc22:	45 89 70 10          	mov    %r14d,0x10(%r8)
   1cc26:	44 8b b4 24 94 00 00 	mov    0x94(%rsp),%r14d
   1cc2d:	00 
   1cc2e:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
   1cc35:	41 d3 e6             	shl    %cl,%r14d
   1cc38:	44 89 d1             	mov    %r10d,%ecx
   1cc3b:	d3 e8                	shr    %cl,%eax
   1cc3d:	89 f1                	mov    %esi,%ecx
   1cc3f:	41 31 c6             	xor    %eax,%r14d
   1cc42:	45 89 70 14          	mov    %r14d,0x14(%r8)
   1cc46:	44 8b b4 24 98 00 00 	mov    0x98(%rsp),%r14d
   1cc4d:	00 
   1cc4e:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cc55:	41 d3 e6             	shl    %cl,%r14d
   1cc58:	44 89 d1             	mov    %r10d,%ecx
   1cc5b:	d3 e8                	shr    %cl,%eax
   1cc5d:	89 f1                	mov    %esi,%ecx
   1cc5f:	41 31 c6             	xor    %eax,%r14d
   1cc62:	45 89 70 18          	mov    %r14d,0x18(%r8)
   1cc66:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cc6d:	d3 e0                	shl    %cl,%eax
   1cc6f:	44 89 d1             	mov    %r10d,%ecx
   1cc72:	89 c6                	mov    %eax,%esi
   1cc74:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
   1cc7b:	d3 e8                	shr    %cl,%eax
   1cc7d:	31 c6                	xor    %eax,%esi
   1cc7f:	41 89 70 1c          	mov    %esi,0x1c(%r8)
   1cc83:	48 83 c7 01          	add    $0x1,%rdi
   1cc87:	49 83 c0 10          	add    $0x10,%r8
   1cc8b:	48 83 ff 05          	cmp    $0x5,%rdi
   1cc8f:	74 1c                	je     1ccad <mbedtls_camellia_setkey_enc+0x61d>
   1cc91:	41 0f b6 4c 39 07    	movzbl 0x7(%r9,%rdi,1),%ecx
   1cc97:	84 c9                	test   %cl,%cl
   1cc99:	0f 85 52 ff ff ff    	jne    1cbf1 <mbedtls_camellia_setkey_enc+0x561>
   1cc9f:	48 83 c7 01          	add    $0x1,%rdi
   1cca3:	49 83 c0 10          	add    $0x10,%r8
   1cca7:	48 83 ff 05          	cmp    $0x5,%rdi
   1ccab:	75 e4                	jne    1cc91 <mbedtls_camellia_setkey_enc+0x601>
   1ccad:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1ccb2:	31 c9                	xor    %ecx,%ecx
   1ccb4:	eb 10                	jmp    1ccc6 <mbedtls_camellia_setkey_enc+0x636>
   1ccb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ccbd:	00 00 00 
   1ccc0:	48 0f be 6c 08 28    	movsbq 0x28(%rax,%rcx,1),%rbp
   1ccc6:	40 80 fd ff          	cmp    $0xff,%bpl
   1ccca:	74 07                	je     1ccd3 <mbedtls_camellia_setkey_enc+0x643>
   1cccc:	8b 34 8a             	mov    (%rdx,%rcx,4),%esi
   1cccf:	41 89 34 ac          	mov    %esi,(%r12,%rbp,4)
   1ccd3:	48 83 c1 01          	add    $0x1,%rcx
   1ccd7:	48 83 f9 14          	cmp    $0x14,%rcx
   1ccdb:	75 e3                	jne    1ccc0 <mbedtls_camellia_setkey_enc+0x630>
   1ccdd:	41 81 ff 80 00 00 00 	cmp    $0x80,%r15d
   1cce4:	0f 86 03 01 00 00    	jbe    1cded <mbedtls_camellia_setkey_enc+0x75d>
   1ccea:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1ccf1:	00 
   1ccf2:	be 01 00 00 00       	mov    $0x1,%esi
   1ccf7:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   1ccfd:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   1cd04:	00 
   1cd05:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   1cd0c:	00 
   1cd0d:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   1cd14:	00 
   1cd15:	41 80 7c 31 0b 00    	cmpb   $0x0,0xb(%r9,%rsi,1)
   1cd1b:	0f 84 96 00 00 00    	je     1cdb7 <mbedtls_camellia_setkey_enc+0x727>
   1cd21:	89 f7                	mov    %esi,%edi
   1cd23:	44 8b 94 24 90 00 00 	mov    0x90(%rsp),%r10d
   1cd2a:	00 
   1cd2b:	44 89 c5             	mov    %r8d,%ebp
   1cd2e:	44 8b bc 24 94 00 00 	mov    0x94(%rsp),%r15d
   1cd35:	00 
   1cd36:	c1 e7 04             	shl    $0x4,%edi
   1cd39:	29 f7                	sub    %esi,%edi
   1cd3b:	83 e7 1f             	and    $0x1f,%edi
   1cd3e:	29 fd                	sub    %edi,%ebp
   1cd40:	89 f9                	mov    %edi,%ecx
   1cd42:	41 d3 e2             	shl    %cl,%r10d
   1cd45:	89 e9                	mov    %ebp,%ecx
   1cd47:	41 d3 ef             	shr    %cl,%r15d
   1cd4a:	89 f9                	mov    %edi,%ecx
   1cd4c:	45 31 fa             	xor    %r15d,%r10d
   1cd4f:	45 89 53 10          	mov    %r10d,0x10(%r11)
   1cd53:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   1cd5a:	00 
   1cd5b:	44 8b bc 24 98 00 00 	mov    0x98(%rsp),%r15d
   1cd62:	00 
   1cd63:	41 d3 e2             	shl    %cl,%r10d
   1cd66:	89 e9                	mov    %ebp,%ecx
   1cd68:	41 d3 ef             	shr    %cl,%r15d
   1cd6b:	89 f9                	mov    %edi,%ecx
   1cd6d:	45 31 fa             	xor    %r15d,%r10d
   1cd70:	45 89 53 14          	mov    %r10d,0x14(%r11)
   1cd74:	44 8b 94 24 98 00 00 	mov    0x98(%rsp),%r10d
   1cd7b:	00 
   1cd7c:	44 8b bc 24 9c 00 00 	mov    0x9c(%rsp),%r15d
   1cd83:	00 
   1cd84:	41 d3 e2             	shl    %cl,%r10d
   1cd87:	89 e9                	mov    %ebp,%ecx
   1cd89:	41 d3 ef             	shr    %cl,%r15d
   1cd8c:	89 f9                	mov    %edi,%ecx
   1cd8e:	45 31 fa             	xor    %r15d,%r10d
   1cd91:	45 89 53 18          	mov    %r10d,0x18(%r11)
   1cd95:	44 8b bc 24 9c 00 00 	mov    0x9c(%rsp),%r15d
   1cd9c:	00 
   1cd9d:	41 d3 e7             	shl    %cl,%r15d
   1cda0:	89 e9                	mov    %ebp,%ecx
   1cda2:	44 89 ff             	mov    %r15d,%edi
   1cda5:	44 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15d
   1cdac:	00 
   1cdad:	41 d3 ef             	shr    %cl,%r15d
   1cdb0:	44 31 ff             	xor    %r15d,%edi
   1cdb3:	41 89 7b 1c          	mov    %edi,0x1c(%r11)
   1cdb7:	48 83 c6 01          	add    $0x1,%rsi
   1cdbb:	49 83 c3 10          	add    $0x10,%r11
   1cdbf:	48 83 fe 05          	cmp    $0x5,%rsi
   1cdc3:	0f 85 4c ff ff ff    	jne    1cd15 <mbedtls_camellia_setkey_enc+0x685>
   1cdc9:	31 c9                	xor    %ecx,%ecx
   1cdcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1cdd0:	48 0f be 74 08 3c    	movsbq 0x3c(%rax,%rcx,1),%rsi
   1cdd6:	40 80 fe ff          	cmp    $0xff,%sil
   1cdda:	74 07                	je     1cde3 <mbedtls_camellia_setkey_enc+0x753>
   1cddc:	8b 3c 8a             	mov    (%rdx,%rcx,4),%edi
   1cddf:	41 89 3c b4          	mov    %edi,(%r12,%rsi,4)
   1cde3:	48 83 c1 01          	add    $0x1,%rcx
   1cde7:	48 83 f9 14          	cmp    $0x14,%rcx
   1cdeb:	75 e3                	jne    1cdd0 <mbedtls_camellia_setkey_enc+0x740>
   1cded:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1cdf2:	49 8d 74 85 00       	lea    0x0(%r13,%rax,4),%rsi
   1cdf7:	48 8b 04 24          	mov    (%rsp),%rax
   1cdfb:	4c 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%r14
   1ce02:	00 
   1ce03:	49 01 c6             	add    %rax,%r14
   1ce06:	48 8d 05 73 90 00 00 	lea    0x9073(%rip),%rax        # 25e80 <transposes>
   1ce0d:	4a 8d 0c b0          	lea    (%rax,%r14,4),%rcx
   1ce11:	31 c0                	xor    %eax,%eax
   1ce13:	eb 08                	jmp    1ce1d <mbedtls_camellia_setkey_enc+0x78d>
   1ce15:	0f 1f 00             	nopl   (%rax)
   1ce18:	48 0f be 1c 01       	movsbq (%rcx,%rax,1),%rbx
   1ce1d:	80 fb ff             	cmp    $0xff,%bl
   1ce20:	74 08                	je     1ce2a <mbedtls_camellia_setkey_enc+0x79a>
   1ce22:	41 8b 14 9c          	mov    (%r12,%rbx,4),%edx
   1ce26:	89 54 86 04          	mov    %edx,0x4(%rsi,%rax,4)
   1ce2a:	48 83 c0 01          	add    $0x1,%rax
   1ce2e:	48 83 f8 14          	cmp    $0x14,%rax
   1ce32:	75 e4                	jne    1ce18 <mbedtls_camellia_setkey_enc+0x788>
   1ce34:	31 c0                	xor    %eax,%eax
   1ce36:	e9 f4 f8 ff ff       	jmpq   1c72f <mbedtls_camellia_setkey_enc+0x9f>
   1ce3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ce40:	bd 04 00 00 00       	mov    $0x4,%ebp
   1ce45:	bb 15 00 00 00       	mov    $0x15,%ebx
   1ce4a:	bf 10 00 00 00       	mov    $0x10,%edi
   1ce4f:	41 c7 45 00 03 00 00 	movl   $0x3,0x0(%r13)
   1ce56:	00 
   1ce57:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
   1ce5e:	00 00 
   1ce60:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   1ce67:	00 
   1ce68:	e9 21 f9 ff ff       	jmpq   1c78e <mbedtls_camellia_setkey_enc+0xfe>
   1ce6d:	0f 1f 00             	nopl   (%rax)
   1ce70:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   1ce77:	00 
   1ce78:	48 8d b4 24 f8 00 00 	lea    0xf8(%rsp),%rsi
   1ce7f:	00 
   1ce80:	0f b6 10             	movzbl (%rax),%edx
   1ce83:	48 83 c0 01          	add    $0x1,%rax
   1ce87:	f7 d2                	not    %edx
   1ce89:	88 50 07             	mov    %dl,0x7(%rax)
   1ce8c:	48 39 f0             	cmp    %rsi,%rax
   1ce8f:	75 ef                	jne    1ce80 <mbedtls_camellia_setkey_enc+0x7f0>
   1ce91:	e9 30 f9 ff ff       	jmpq   1c7c6 <mbedtls_camellia_setkey_enc+0x136>
   1ce96:	e8 c5 63 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1ce9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001cea0 <mbedtls_camellia_setkey_dec>:
   1cea0:	f3 0f 1e fa          	endbr64 
   1cea4:	41 54                	push   %r12
   1cea6:	b9 22 00 00 00       	mov    $0x22,%ecx
   1ceab:	55                   	push   %rbp
   1ceac:	53                   	push   %rbx
   1cead:	48 89 fb             	mov    %rdi,%rbx
   1ceb0:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   1ceb7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1cebe:	00 00 
   1cec0:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   1cec7:	00 
   1cec8:	31 c0                	xor    %eax,%eax
   1ceca:	48 89 e5             	mov    %rsp,%rbp
   1cecd:	48 89 ef             	mov    %rbp,%rdi
   1ced0:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1ced3:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1ced9:	48 89 ef             	mov    %rbp,%rdi
   1cedc:	e8 af f7 ff ff       	callq  1c690 <mbedtls_camellia_setkey_enc>
   1cee1:	41 89 c4             	mov    %eax,%r12d
   1cee4:	85 c0                	test   %eax,%eax
   1cee6:	0f 85 92 00 00 00    	jne    1cf7e <mbedtls_camellia_setkey_dec+0xde>
   1ceec:	8b 04 24             	mov    (%rsp),%eax
   1ceef:	45 31 c0             	xor    %r8d,%r8d
   1cef2:	4c 8d 4b 14          	lea    0x14(%rbx),%r9
   1cef6:	83 f8 04             	cmp    $0x4,%eax
   1cef9:	89 03                	mov    %eax,(%rbx)
   1cefb:	41 0f 94 c0          	sete   %r8b
   1ceff:	44 89 c0             	mov    %r8d,%eax
   1cf02:	c1 e0 04             	shl    $0x4,%eax
   1cf05:	48 98                	cltq   
   1cf07:	48 83 c0 30          	add    $0x30,%rax
   1cf0b:	48 8d 44 84 04       	lea    0x4(%rsp,%rax,4),%rax
   1cf10:	48 8b 10             	mov    (%rax),%rdx
   1cf13:	48 83 e8 08          	sub    $0x8,%rax
   1cf17:	48 89 53 04          	mov    %rdx,0x4(%rbx)
   1cf1b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1cf1f:	48 89 c1             	mov    %rax,%rcx
   1cf22:	48 89 53 0c          	mov    %rdx,0xc(%rbx)
   1cf26:	ba 16 00 00 00       	mov    $0x16,%edx
   1cf2b:	46 8d 04 c2          	lea    (%rdx,%r8,8),%r8d
   1cf2f:	4c 89 ca             	mov    %r9,%rdx
   1cf32:	4d 63 c0             	movslq %r8d,%r8
   1cf35:	4c 89 c6             	mov    %r8,%rsi
   1cf38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cf3f:	00 
   1cf40:	8b 39                	mov    (%rcx),%edi
   1cf42:	48 83 c2 08          	add    $0x8,%rdx
   1cf46:	48 83 e9 08          	sub    $0x8,%rcx
   1cf4a:	89 7a f8             	mov    %edi,-0x8(%rdx)
   1cf4d:	8b 79 0c             	mov    0xc(%rcx),%edi
   1cf50:	89 7a fc             	mov    %edi,-0x4(%rdx)
   1cf53:	48 83 ee 01          	sub    $0x1,%rsi
   1cf57:	75 e7                	jne    1cf40 <mbedtls_camellia_setkey_dec+0xa0>
   1cf59:	4b 8d 54 c1 f8       	lea    -0x8(%r9,%r8,8),%rdx
   1cf5e:	49 f7 d8             	neg    %r8
   1cf61:	4a 8d 44 c0 08       	lea    0x8(%rax,%r8,8),%rax
   1cf66:	8b 48 f0             	mov    -0x10(%rax),%ecx
   1cf69:	89 4a 08             	mov    %ecx,0x8(%rdx)
   1cf6c:	8b 48 f4             	mov    -0xc(%rax),%ecx
   1cf6f:	89 4a 0c             	mov    %ecx,0xc(%rdx)
   1cf72:	8b 48 f8             	mov    -0x8(%rax),%ecx
   1cf75:	8b 40 fc             	mov    -0x4(%rax),%eax
   1cf78:	89 4a 10             	mov    %ecx,0x10(%rdx)
   1cf7b:	89 42 14             	mov    %eax,0x14(%rdx)
   1cf7e:	be 14 01 00 00       	mov    $0x114,%esi
   1cf83:	48 89 ef             	mov    %rbp,%rdi
   1cf86:	e8 a5 82 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1cf8b:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   1cf92:	00 
   1cf93:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1cf9a:	00 00 
   1cf9c:	75 0f                	jne    1cfad <mbedtls_camellia_setkey_dec+0x10d>
   1cf9e:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
   1cfa5:	44 89 e0             	mov    %r12d,%eax
   1cfa8:	5b                   	pop    %rbx
   1cfa9:	5d                   	pop    %rbp
   1cfaa:	41 5c                	pop    %r12
   1cfac:	c3                   	retq   
   1cfad:	e8 ae 62 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1cfb2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1cfb9:	00 00 00 00 
   1cfbd:	0f 1f 00             	nopl   (%rax)

000000000001cfc0 <mbedtls_camellia_crypt_ecb>:
   1cfc0:	f3 0f 1e fa          	endbr64 
   1cfc4:	41 57                	push   %r15
   1cfc6:	41 56                	push   %r14
   1cfc8:	41 55                	push   %r13
   1cfca:	41 54                	push   %r12
   1cfcc:	55                   	push   %rbp
   1cfcd:	53                   	push   %rbx
   1cfce:	48 83 ec 38          	sub    $0x38,%rsp
   1cfd2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1cfd9:	00 00 
   1cfdb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1cfe0:	31 c0                	xor    %eax,%eax
   1cfe2:	83 fe 01             	cmp    $0x1,%esi
   1cfe5:	0f 87 7a 01 00 00    	ja     1d165 <mbedtls_camellia_crypt_ecb+0x1a5>
   1cfeb:	49 89 d1             	mov    %rdx,%r9
   1cfee:	49 89 cf             	mov    %rcx,%r15
   1cff1:	8b 12                	mov    (%rdx),%edx
   1cff3:	44 8b 07             	mov    (%rdi),%r8d
   1cff6:	41 8b 41 04          	mov    0x4(%r9),%eax
   1cffa:	41 8b 71 08          	mov    0x8(%r9),%esi
   1cffe:	4c 8d 6f 14          	lea    0x14(%rdi),%r13
   1d002:	41 8b 49 0c          	mov    0xc(%r9),%ecx
   1d006:	0f ca                	bswap  %edx
   1d008:	33 57 04             	xor    0x4(%rdi),%edx
   1d00b:	0f c8                	bswap  %eax
   1d00d:	0f ce                	bswap  %esi
   1d00f:	33 47 08             	xor    0x8(%rdi),%eax
   1d012:	33 77 0c             	xor    0xc(%rdi),%esi
   1d015:	0f c9                	bswap  %ecx
   1d017:	33 4f 10             	xor    0x10(%rdi),%ecx
   1d01a:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1d01e:	89 44 24 14          	mov    %eax,0x14(%rsp)
   1d022:	89 74 24 18          	mov    %esi,0x18(%rsp)
   1d026:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   1d02a:	45 85 c0             	test   %r8d,%r8d
   1d02d:	0f 84 ea 00 00 00    	je     1d11d <mbedtls_camellia_crypt_ecb+0x15d>
   1d033:	41 8d 40 ff          	lea    -0x1(%r8),%eax
   1d037:	4c 89 eb             	mov    %r13,%rbx
   1d03a:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   1d03f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1d043:	48 c1 e0 06          	shl    $0x6,%rax
   1d047:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
   1d04c:	4c 8d 74 07 14       	lea    0x14(%rdi,%rax,1),%r14
   1d051:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d058:	48 89 ea             	mov    %rbp,%rdx
   1d05b:	48 89 de             	mov    %rbx,%rsi
   1d05e:	4c 89 e7             	mov    %r12,%rdi
   1d061:	e8 0a f5 ff ff       	callq  1c570 <camellia_feistel>
   1d066:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1d06a:	4c 89 e2             	mov    %r12,%rdx
   1d06d:	48 89 ef             	mov    %rbp,%rdi
   1d070:	e8 fb f4 ff ff       	callq  1c570 <camellia_feistel>
   1d075:	48 8d 73 10          	lea    0x10(%rbx),%rsi
   1d079:	48 89 ea             	mov    %rbp,%rdx
   1d07c:	4c 89 e7             	mov    %r12,%rdi
   1d07f:	e8 ec f4 ff ff       	callq  1c570 <camellia_feistel>
   1d084:	48 8d 73 18          	lea    0x18(%rbx),%rsi
   1d088:	4c 89 e2             	mov    %r12,%rdx
   1d08b:	48 89 ef             	mov    %rbp,%rdi
   1d08e:	e8 dd f4 ff ff       	callq  1c570 <camellia_feistel>
   1d093:	48 8d 73 20          	lea    0x20(%rbx),%rsi
   1d097:	48 89 ea             	mov    %rbp,%rdx
   1d09a:	4c 89 e7             	mov    %r12,%rdi
   1d09d:	e8 ce f4 ff ff       	callq  1c570 <camellia_feistel>
   1d0a2:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   1d0a6:	4c 89 e2             	mov    %r12,%rdx
   1d0a9:	48 89 ef             	mov    %rbp,%rdi
   1d0ac:	e8 bf f4 ff ff       	callq  1c570 <camellia_feistel>
   1d0b1:	4c 39 f3             	cmp    %r14,%rbx
   1d0b4:	74 4a                	je     1d100 <mbedtls_camellia_crypt_ecb+0x140>
   1d0b6:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d0ba:	8b 43 30             	mov    0x30(%rbx),%eax
   1d0bd:	48 83 c3 40          	add    $0x40,%rbx
   1d0c1:	21 d0                	and    %edx,%eax
   1d0c3:	d1 c0                	rol    %eax
   1d0c5:	33 44 24 14          	xor    0x14(%rsp),%eax
   1d0c9:	89 44 24 14          	mov    %eax,0x14(%rsp)
   1d0cd:	0b 43 f4             	or     -0xc(%rbx),%eax
   1d0d0:	31 d0                	xor    %edx,%eax
   1d0d2:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
   1d0d6:	89 44 24 10          	mov    %eax,0x10(%rsp)
   1d0da:	8b 43 fc             	mov    -0x4(%rbx),%eax
   1d0dd:	09 d0                	or     %edx,%eax
   1d0df:	33 44 24 18          	xor    0x18(%rsp),%eax
   1d0e3:	89 44 24 18          	mov    %eax,0x18(%rsp)
   1d0e7:	23 43 f8             	and    -0x8(%rbx),%eax
   1d0ea:	d1 c0                	rol    %eax
   1d0ec:	31 d0                	xor    %edx,%eax
   1d0ee:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1d0f2:	e9 61 ff ff ff       	jmpq   1d058 <mbedtls_camellia_crypt_ecb+0x98>
   1d0f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d0fe:	00 00 
   1d100:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1d104:	8b 74 24 18          	mov    0x18(%rsp),%esi
   1d108:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   1d10c:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d110:	48 c1 e0 06          	shl    $0x6,%rax
   1d114:	4d 8d 6c 05 30       	lea    0x30(%r13,%rax,1),%r13
   1d119:	8b 44 24 14          	mov    0x14(%rsp),%eax
   1d11d:	41 33 4d 04          	xor    0x4(%r13),%ecx
   1d121:	41 33 55 08          	xor    0x8(%r13),%edx
   1d125:	41 33 75 00          	xor    0x0(%r13),%esi
   1d129:	41 33 45 0c          	xor    0xc(%r13),%eax
   1d12d:	0f c9                	bswap  %ecx
   1d12f:	0f ca                	bswap  %edx
   1d131:	0f ce                	bswap  %esi
   1d133:	41 89 4f 04          	mov    %ecx,0x4(%r15)
   1d137:	0f c8                	bswap  %eax
   1d139:	41 89 37             	mov    %esi,(%r15)
   1d13c:	41 89 57 08          	mov    %edx,0x8(%r15)
   1d140:	41 89 47 0c          	mov    %eax,0xc(%r15)
   1d144:	31 c0                	xor    %eax,%eax
   1d146:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1d14b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1d152:	00 00 
   1d154:	75 16                	jne    1d16c <mbedtls_camellia_crypt_ecb+0x1ac>
   1d156:	48 83 c4 38          	add    $0x38,%rsp
   1d15a:	5b                   	pop    %rbx
   1d15b:	5d                   	pop    %rbp
   1d15c:	41 5c                	pop    %r12
   1d15e:	41 5d                	pop    %r13
   1d160:	41 5e                	pop    %r14
   1d162:	41 5f                	pop    %r15
   1d164:	c3                   	retq   
   1d165:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1d16a:	eb da                	jmp    1d146 <mbedtls_camellia_crypt_ecb+0x186>
   1d16c:	e8 ef 60 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1d171:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1d178:	00 00 00 00 
   1d17c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d180 <mbedtls_camellia_crypt_cbc>:
   1d180:	f3 0f 1e fa          	endbr64 
   1d184:	83 fe 01             	cmp    $0x1,%esi
   1d187:	0f 87 f1 00 00 00    	ja     1d27e <mbedtls_camellia_crypt_cbc+0xfe>
   1d18d:	f6 c2 0f             	test   $0xf,%dl
   1d190:	0f 85 ee 00 00 00    	jne    1d284 <mbedtls_camellia_crypt_cbc+0x104>
   1d196:	41 56                	push   %r14
   1d198:	41 55                	push   %r13
   1d19a:	49 89 cd             	mov    %rcx,%r13
   1d19d:	41 54                	push   %r12
   1d19f:	49 89 fc             	mov    %rdi,%r12
   1d1a2:	55                   	push   %rbp
   1d1a3:	4c 89 c5             	mov    %r8,%rbp
   1d1a6:	53                   	push   %rbx
   1d1a7:	4c 89 cb             	mov    %r9,%rbx
   1d1aa:	48 83 ec 10          	sub    $0x10,%rsp
   1d1ae:	85 f6                	test   %esi,%esi
   1d1b0:	75 66                	jne    1d218 <mbedtls_camellia_crypt_cbc+0x98>
   1d1b2:	48 85 d2             	test   %rdx,%rdx
   1d1b5:	74 4d                	je     1d204 <mbedtls_camellia_crypt_cbc+0x84>
   1d1b7:	4d 8d 34 10          	lea    (%r8,%rdx,1),%r14
   1d1bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d1c0:	f3 0f 6f 45 00       	movdqu 0x0(%rbp),%xmm0
   1d1c5:	48 89 d9             	mov    %rbx,%rcx
   1d1c8:	48 89 ea             	mov    %rbp,%rdx
   1d1cb:	31 f6                	xor    %esi,%esi
   1d1cd:	4c 89 e7             	mov    %r12,%rdi
   1d1d0:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1d1d4:	e8 e7 fd ff ff       	callq  1cfc0 <mbedtls_camellia_crypt_ecb>
   1d1d9:	66 0f 6f 04 24       	movdqa (%rsp),%xmm0
   1d1de:	31 c0                	xor    %eax,%eax
   1d1e0:	41 8b 54 05 00       	mov    0x0(%r13,%rax,1),%edx
   1d1e5:	31 14 03             	xor    %edx,(%rbx,%rax,1)
   1d1e8:	48 83 c0 04          	add    $0x4,%rax
   1d1ec:	48 83 f8 10          	cmp    $0x10,%rax
   1d1f0:	75 ee                	jne    1d1e0 <mbedtls_camellia_crypt_cbc+0x60>
   1d1f2:	48 83 c5 10          	add    $0x10,%rbp
   1d1f6:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
   1d1fb:	48 83 c3 10          	add    $0x10,%rbx
   1d1ff:	4c 39 f5             	cmp    %r14,%rbp
   1d202:	75 bc                	jne    1d1c0 <mbedtls_camellia_crypt_cbc+0x40>
   1d204:	48 83 c4 10          	add    $0x10,%rsp
   1d208:	31 c0                	xor    %eax,%eax
   1d20a:	5b                   	pop    %rbx
   1d20b:	5d                   	pop    %rbp
   1d20c:	41 5c                	pop    %r12
   1d20e:	41 5d                	pop    %r13
   1d210:	41 5e                	pop    %r14
   1d212:	c3                   	retq   
   1d213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d218:	4d 8d 34 11          	lea    (%r9,%rdx,1),%r14
   1d21c:	48 85 d2             	test   %rdx,%rdx
   1d21f:	74 e3                	je     1d204 <mbedtls_camellia_crypt_cbc+0x84>
   1d221:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d228:	31 c0                	xor    %eax,%eax
   1d22a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d230:	8b 54 05 00          	mov    0x0(%rbp,%rax,1),%edx
   1d234:	41 33 54 05 00       	xor    0x0(%r13,%rax,1),%edx
   1d239:	89 14 03             	mov    %edx,(%rbx,%rax,1)
   1d23c:	48 83 c0 04          	add    $0x4,%rax
   1d240:	48 83 f8 10          	cmp    $0x10,%rax
   1d244:	75 ea                	jne    1d230 <mbedtls_camellia_crypt_cbc+0xb0>
   1d246:	48 89 d9             	mov    %rbx,%rcx
   1d249:	48 89 da             	mov    %rbx,%rdx
   1d24c:	be 01 00 00 00       	mov    $0x1,%esi
   1d251:	4c 89 e7             	mov    %r12,%rdi
   1d254:	e8 67 fd ff ff       	callq  1cfc0 <mbedtls_camellia_crypt_ecb>
   1d259:	f3 0f 6f 0b          	movdqu (%rbx),%xmm1
   1d25d:	48 83 c3 10          	add    $0x10,%rbx
   1d261:	48 83 c5 10          	add    $0x10,%rbp
   1d265:	41 0f 11 4d 00       	movups %xmm1,0x0(%r13)
   1d26a:	4c 39 f3             	cmp    %r14,%rbx
   1d26d:	75 b9                	jne    1d228 <mbedtls_camellia_crypt_cbc+0xa8>
   1d26f:	48 83 c4 10          	add    $0x10,%rsp
   1d273:	31 c0                	xor    %eax,%eax
   1d275:	5b                   	pop    %rbx
   1d276:	5d                   	pop    %rbp
   1d277:	41 5c                	pop    %r12
   1d279:	41 5d                	pop    %r13
   1d27b:	41 5e                	pop    %r14
   1d27d:	c3                   	retq   
   1d27e:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1d283:	c3                   	retq   
   1d284:	b8 da ff ff ff       	mov    $0xffffffda,%eax
   1d289:	c3                   	retq   
   1d28a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001d290 <mbedtls_camellia_crypt_cfb128>:
   1d290:	f3 0f 1e fa          	endbr64 
   1d294:	41 57                	push   %r15
   1d296:	41 56                	push   %r14
   1d298:	41 55                	push   %r13
   1d29a:	41 54                	push   %r12
   1d29c:	55                   	push   %rbp
   1d29d:	53                   	push   %rbx
   1d29e:	48 83 ec 18          	sub    $0x18,%rsp
   1d2a2:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1d2a7:	83 fe 01             	cmp    $0x1,%esi
   1d2aa:	0f 87 f5 00 00 00    	ja     1d3a5 <mbedtls_camellia_crypt_cfb128+0x115>
   1d2b0:	48 8b 19             	mov    (%rcx),%rbx
   1d2b3:	49 89 cd             	mov    %rcx,%r13
   1d2b6:	48 83 fb 0f          	cmp    $0xf,%rbx
   1d2ba:	0f 87 e5 00 00 00    	ja     1d3a5 <mbedtls_camellia_crypt_cfb128+0x115>
   1d2c0:	49 89 ff             	mov    %rdi,%r15
   1d2c3:	4d 89 c6             	mov    %r8,%r14
   1d2c6:	4c 89 cd             	mov    %r9,%rbp
   1d2c9:	85 f6                	test   %esi,%esi
   1d2cb:	75 63                	jne    1d330 <mbedtls_camellia_crypt_cfb128+0xa0>
   1d2cd:	48 85 d2             	test   %rdx,%rdx
   1d2d0:	0f 84 ba 00 00 00    	je     1d390 <mbedtls_camellia_crypt_cfb128+0x100>
   1d2d6:	4d 8d 04 11          	lea    (%r9,%rdx,1),%r8
   1d2da:	eb 30                	jmp    1d30c <mbedtls_camellia_crypt_cfb128+0x7c>
   1d2dc:	0f 1f 40 00          	nopl   0x0(%rax)
   1d2e0:	49 8d 04 1e          	lea    (%r14,%rbx,1),%rax
   1d2e4:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   1d2e8:	48 83 c5 01          	add    $0x1,%rbp
   1d2ec:	49 83 c4 01          	add    $0x1,%r12
   1d2f0:	0f b6 08             	movzbl (%rax),%ecx
   1d2f3:	48 83 c3 01          	add    $0x1,%rbx
   1d2f7:	83 e3 0f             	and    $0xf,%ebx
   1d2fa:	31 d1                	xor    %edx,%ecx
   1d2fc:	41 88 4c 24 ff       	mov    %cl,-0x1(%r12)
   1d301:	88 10                	mov    %dl,(%rax)
   1d303:	4c 39 c5             	cmp    %r8,%rbp
   1d306:	0f 84 84 00 00 00    	je     1d390 <mbedtls_camellia_crypt_cfb128+0x100>
   1d30c:	48 85 db             	test   %rbx,%rbx
   1d30f:	75 cf                	jne    1d2e0 <mbedtls_camellia_crypt_cfb128+0x50>
   1d311:	4c 89 f1             	mov    %r14,%rcx
   1d314:	4c 89 f2             	mov    %r14,%rdx
   1d317:	be 01 00 00 00       	mov    $0x1,%esi
   1d31c:	4c 89 ff             	mov    %r15,%rdi
   1d31f:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1d324:	e8 97 fc ff ff       	callq  1cfc0 <mbedtls_camellia_crypt_ecb>
   1d329:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1d32e:	eb b0                	jmp    1d2e0 <mbedtls_camellia_crypt_cfb128+0x50>
   1d330:	4d 8d 0c 11          	lea    (%r9,%rdx,1),%r9
   1d334:	48 85 d2             	test   %rdx,%rdx
   1d337:	75 2c                	jne    1d365 <mbedtls_camellia_crypt_cfb128+0xd5>
   1d339:	eb 55                	jmp    1d390 <mbedtls_camellia_crypt_cfb128+0x100>
   1d33b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d340:	49 8d 14 1e          	lea    (%r14,%rbx,1),%rdx
   1d344:	48 83 c5 01          	add    $0x1,%rbp
   1d348:	49 83 c4 01          	add    $0x1,%r12
   1d34c:	48 83 c3 01          	add    $0x1,%rbx
   1d350:	0f b6 02             	movzbl (%rdx),%eax
   1d353:	32 45 ff             	xor    -0x1(%rbp),%al
   1d356:	83 e3 0f             	and    $0xf,%ebx
   1d359:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   1d35e:	88 02                	mov    %al,(%rdx)
   1d360:	4c 39 cd             	cmp    %r9,%rbp
   1d363:	74 2b                	je     1d390 <mbedtls_camellia_crypt_cfb128+0x100>
   1d365:	48 85 db             	test   %rbx,%rbx
   1d368:	75 d6                	jne    1d340 <mbedtls_camellia_crypt_cfb128+0xb0>
   1d36a:	4c 89 f1             	mov    %r14,%rcx
   1d36d:	4c 89 f2             	mov    %r14,%rdx
   1d370:	be 01 00 00 00       	mov    $0x1,%esi
   1d375:	4c 89 ff             	mov    %r15,%rdi
   1d378:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1d37d:	e8 3e fc ff ff       	callq  1cfc0 <mbedtls_camellia_crypt_ecb>
   1d382:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1d387:	eb b7                	jmp    1d340 <mbedtls_camellia_crypt_cfb128+0xb0>
   1d389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d390:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   1d394:	31 c0                	xor    %eax,%eax
   1d396:	48 83 c4 18          	add    $0x18,%rsp
   1d39a:	5b                   	pop    %rbx
   1d39b:	5d                   	pop    %rbp
   1d39c:	41 5c                	pop    %r12
   1d39e:	41 5d                	pop    %r13
   1d3a0:	41 5e                	pop    %r14
   1d3a2:	41 5f                	pop    %r15
   1d3a4:	c3                   	retq   
   1d3a5:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1d3aa:	eb ea                	jmp    1d396 <mbedtls_camellia_crypt_cfb128+0x106>
   1d3ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d3b0 <mbedtls_camellia_crypt_ctr>:
   1d3b0:	f3 0f 1e fa          	endbr64 
   1d3b4:	41 57                	push   %r15
   1d3b6:	41 56                	push   %r14
   1d3b8:	41 55                	push   %r13
   1d3ba:	41 54                	push   %r12
   1d3bc:	55                   	push   %rbp
   1d3bd:	53                   	push   %rbx
   1d3be:	48 83 ec 28          	sub    $0x28,%rsp
   1d3c2:	48 8b 1a             	mov    (%rdx),%rbx
   1d3c5:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
   1d3ca:	48 83 fb 0f          	cmp    $0xf,%rbx
   1d3ce:	0f 87 a8 00 00 00    	ja     1d47c <mbedtls_camellia_crypt_ctr+0xcc>
   1d3d4:	49 89 d6             	mov    %rdx,%r14
   1d3d7:	48 85 f6             	test   %rsi,%rsi
   1d3da:	0f 84 88 00 00 00    	je     1d468 <mbedtls_camellia_crypt_ctr+0xb8>
   1d3e0:	48 8d 41 0f          	lea    0xf(%rcx),%rax
   1d3e4:	49 89 cd             	mov    %rcx,%r13
   1d3e7:	4d 8d 3c 31          	lea    (%r9,%rsi,1),%r15
   1d3eb:	4c 89 cd             	mov    %r9,%rbp
   1d3ee:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1d3f3:	eb 24                	jmp    1d419 <mbedtls_camellia_crypt_ctr+0x69>
   1d3f5:	0f 1f 00             	nopl   (%rax)
   1d3f8:	48 83 c5 01          	add    $0x1,%rbp
   1d3fc:	41 0f b6 04 18       	movzbl (%r8,%rbx,1),%eax
   1d401:	49 83 c4 01          	add    $0x1,%r12
   1d405:	48 83 c3 01          	add    $0x1,%rbx
   1d409:	32 45 ff             	xor    -0x1(%rbp),%al
   1d40c:	83 e3 0f             	and    $0xf,%ebx
   1d40f:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   1d414:	49 39 ef             	cmp    %rbp,%r15
   1d417:	74 4f                	je     1d468 <mbedtls_camellia_crypt_ctr+0xb8>
   1d419:	48 85 db             	test   %rbx,%rbx
   1d41c:	75 da                	jne    1d3f8 <mbedtls_camellia_crypt_ctr+0x48>
   1d41e:	4c 89 c1             	mov    %r8,%rcx
   1d421:	4c 89 ea             	mov    %r13,%rdx
   1d424:	be 01 00 00 00       	mov    $0x1,%esi
   1d429:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   1d42e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1d433:	e8 88 fb ff ff       	callq  1cfc0 <mbedtls_camellia_crypt_ecb>
   1d438:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1d43d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1d442:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1d447:	eb 0a                	jmp    1d453 <mbedtls_camellia_crypt_ctr+0xa3>
   1d449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d450:	48 89 c2             	mov    %rax,%rdx
   1d453:	80 02 01             	addb   $0x1,(%rdx)
   1d456:	75 a0                	jne    1d3f8 <mbedtls_camellia_crypt_ctr+0x48>
   1d458:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   1d45c:	49 39 d5             	cmp    %rdx,%r13
   1d45f:	75 ef                	jne    1d450 <mbedtls_camellia_crypt_ctr+0xa0>
   1d461:	eb 95                	jmp    1d3f8 <mbedtls_camellia_crypt_ctr+0x48>
   1d463:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d468:	49 89 1e             	mov    %rbx,(%r14)
   1d46b:	31 c0                	xor    %eax,%eax
   1d46d:	48 83 c4 28          	add    $0x28,%rsp
   1d471:	5b                   	pop    %rbx
   1d472:	5d                   	pop    %rbp
   1d473:	41 5c                	pop    %r12
   1d475:	41 5d                	pop    %r13
   1d477:	41 5e                	pop    %r14
   1d479:	41 5f                	pop    %r15
   1d47b:	c3                   	retq   
   1d47c:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1d481:	eb ea                	jmp    1d46d <mbedtls_camellia_crypt_ctr+0xbd>
   1d483:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1d48a:	00 00 00 00 
   1d48e:	66 90                	xchg   %ax,%ax

000000000001d490 <mbedtls_camellia_self_test>:
   1d490:	f3 0f 1e fa          	endbr64 
   1d494:	41 57                	push   %r15
   1d496:	b9 22 00 00 00       	mov    $0x22,%ecx
   1d49b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1d49f:	41 56                	push   %r14
   1d4a1:	41 55                	push   %r13
   1d4a3:	41 54                	push   %r12
   1d4a5:	55                   	push   %rbp
   1d4a6:	53                   	push   %rbx
   1d4a7:	48 81 ec 38 02 00 00 	sub    $0x238,%rsp
   1d4ae:	89 7c 24 30          	mov    %edi,0x30(%rsp)
   1d4b2:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
   1d4b7:	4c 8d bc 24 e0 01 00 	lea    0x1e0(%rsp),%r15
   1d4be:	00 
   1d4bf:	4c 89 f7             	mov    %r14,%rdi
   1d4c2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d4c9:	00 00 
   1d4cb:	48 89 84 24 28 02 00 	mov    %rax,0x228(%rsp)
   1d4d2:	00 
   1d4d3:	31 c0                	xor    %eax,%eax
   1d4d5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   1d4dc:	00 
   1d4dd:	0f 29 84 24 c0 01 00 	movaps %xmm0,0x1c0(%rsp)
   1d4e4:	00 
   1d4e5:	0f 29 84 24 d0 01 00 	movaps %xmm0,0x1d0(%rsp)
   1d4ec:	00 
   1d4ed:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1d4f0:	48 8d 84 24 c0 01 00 	lea    0x1c0(%rsp),%rax
   1d4f7:	00 
   1d4f8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d4fd:	48 8d 84 24 70 01 00 	lea    0x170(%rsp),%rax
   1d504:	00 
   1d505:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d50a:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   1d511:	00 
   1d512:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1d517:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1d51d:	8b 44 24 10          	mov    0x10(%rsp),%eax
   1d521:	89 c3                	mov    %eax,%ebx
   1d523:	83 e0 01             	and    $0x1,%eax
   1d526:	41 89 c5             	mov    %eax,%r13d
   1d529:	8b 44 24 30          	mov    0x30(%rsp),%eax
   1d52d:	d1 fb                	sar    %ebx
   1d52f:	8d 6b 02             	lea    0x2(%rbx),%ebp
   1d532:	85 c0                	test   %eax,%eax
   1d534:	74 2d                	je     1d563 <mbedtls_camellia_self_test+0xd3>
   1d536:	45 85 ed             	test   %r13d,%r13d
   1d539:	48 8d 05 be 3b 00 00 	lea    0x3bbe(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   1d540:	89 ea                	mov    %ebp,%edx
   1d542:	bf 01 00 00 00       	mov    $0x1,%edi
   1d547:	48 8d 0d 8b 3b 00 00 	lea    0x3b8b(%rip),%rcx        # 210d9 <_IO_stdin_used+0xd9>
   1d54e:	48 8d 35 6b 84 00 00 	lea    0x846b(%rip),%rsi        # 259c0 <small_prime+0x2a0>
   1d555:	48 0f 44 c8          	cmove  %rax,%rcx
   1d559:	c1 e2 06             	shl    $0x6,%edx
   1d55c:	31 c0                	xor    %eax,%eax
   1d55e:	e8 dd 5d fe ff       	callq  3340 <__printf_chk@plt>
   1d563:	8d 04 ed 00 00 00 00 	lea    0x0(,%rbp,8),%eax
   1d56a:	48 63 db             	movslq %ebx,%rbx
   1d56d:	c1 e5 06             	shl    $0x6,%ebp
   1d570:	4c 8d 25 29 88 00 00 	lea    0x8829(%rip),%r12        # 25da0 <camellia_test_ecb_plain>
   1d577:	48 98                	cltq   
   1d579:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
   1d57d:	48 89 dd             	mov    %rbx,%rbp
   1d580:	48 c1 e3 05          	shl    $0x5,%rbx
   1d584:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d589:	48 c1 e5 06          	shl    $0x6,%rbp
   1d58d:	48 8d 05 2c 88 00 00 	lea    0x882c(%rip),%rax        # 25dc0 <camellia_test_ecb_key>
   1d594:	48 01 c5             	add    %rax,%rbp
   1d597:	48 8d 05 a2 87 00 00 	lea    0x87a2(%rip),%rax        # 25d40 <camellia_test_ecb_cipher>
   1d59e:	48 01 c3             	add    %rax,%rbx
   1d5a1:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1d5a6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1d5ab:	48 89 ee             	mov    %rbp,%rsi
   1d5ae:	b9 20 00 00 00       	mov    $0x20,%ecx
   1d5b3:	e8 28 5d fe ff       	callq  32e0 <__memcpy_chk@plt>
   1d5b8:	8b 54 24 34          	mov    0x34(%rsp),%edx
   1d5bc:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1d5c1:	4c 89 f7             	mov    %r14,%rdi
   1d5c4:	45 85 ed             	test   %r13d,%r13d
   1d5c7:	0f 85 23 04 00 00    	jne    1d9f0 <mbedtls_camellia_self_test+0x560>
   1d5cd:	e8 ce f8 ff ff       	callq  1cea0 <mbedtls_camellia_setkey_dec>
   1d5d2:	66 0f 6f 0b          	movdqa (%rbx),%xmm1
   1d5d6:	66 41 0f 6f 14 24    	movdqa (%r12),%xmm2
   1d5dc:	0f 29 8c 24 70 01 00 	movaps %xmm1,0x170(%rsp)
   1d5e3:	00 
   1d5e4:	0f 29 94 24 80 01 00 	movaps %xmm2,0x180(%rsp)
   1d5eb:	00 
   1d5ec:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1d5f1:	4c 89 f9             	mov    %r15,%rcx
   1d5f4:	44 89 ee             	mov    %r13d,%esi
   1d5f7:	4c 89 f7             	mov    %r14,%rdi
   1d5fa:	e8 c1 f9 ff ff       	callq  1cfc0 <mbedtls_camellia_crypt_ecb>
   1d5ff:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1d604:	49 8b 07             	mov    (%r15),%rax
   1d607:	49 8b 57 08          	mov    0x8(%r15),%rdx
   1d60b:	48 33 01             	xor    (%rcx),%rax
   1d60e:	48 33 51 08          	xor    0x8(%rcx),%rdx
   1d612:	48 09 c2             	or     %rax,%rdx
   1d615:	74 59                	je     1d670 <mbedtls_camellia_self_test+0x1e0>
   1d617:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   1d61c:	c7 44 24 34 01 00 00 	movl   $0x1,0x34(%rsp)
   1d623:	00 
   1d624:	45 85 e4             	test   %r12d,%r12d
   1d627:	0f 85 6b 04 00 00    	jne    1da98 <mbedtls_camellia_self_test+0x608>
   1d62d:	be 14 01 00 00       	mov    $0x114,%esi
   1d632:	4c 89 f7             	mov    %r14,%rdi
   1d635:	e8 f6 7b fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1d63a:	48 8b 84 24 28 02 00 	mov    0x228(%rsp),%rax
   1d641:	00 
   1d642:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1d649:	00 00 
   1d64b:	0f 85 0e 05 00 00    	jne    1db5f <mbedtls_camellia_self_test+0x6cf>
   1d651:	8b 44 24 34          	mov    0x34(%rsp),%eax
   1d655:	48 81 c4 38 02 00 00 	add    $0x238,%rsp
   1d65c:	5b                   	pop    %rbx
   1d65d:	5d                   	pop    %rbp
   1d65e:	41 5c                	pop    %r12
   1d660:	41 5d                	pop    %r13
   1d662:	41 5e                	pop    %r14
   1d664:	41 5f                	pop    %r15
   1d666:	c3                   	retq   
   1d667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d66e:	00 00 
   1d670:	49 83 c4 10          	add    $0x10,%r12
   1d674:	31 d2                	xor    %edx,%edx
   1d676:	48 83 c5 20          	add    $0x20,%rbp
   1d67a:	48 83 c3 10          	add    $0x10,%rbx
   1d67e:	48 8d 05 3b 87 00 00 	lea    0x873b(%rip),%rax        # 25dc0 <camellia_test_ecb_key>
   1d685:	4c 39 e0             	cmp    %r12,%rax
   1d688:	0f 85 13 ff ff ff    	jne    1d5a1 <mbedtls_camellia_self_test+0x111>
   1d68e:	8b 6c 24 30          	mov    0x30(%rsp),%ebp
   1d692:	89 54 24 28          	mov    %edx,0x28(%rsp)
   1d696:	85 ed                	test   %ebp,%ebp
   1d698:	0f 85 b2 03 00 00    	jne    1da50 <mbedtls_camellia_self_test+0x5c0>
   1d69e:	83 44 24 10 01       	addl   $0x1,0x10(%rsp)
   1d6a3:	8b 44 24 10          	mov    0x10(%rsp),%eax
   1d6a7:	83 f8 06             	cmp    $0x6,%eax
   1d6aa:	0f 85 6d fe ff ff    	jne    1d51d <mbedtls_camellia_self_test+0x8d>
   1d6b0:	8b 5c 24 30          	mov    0x30(%rsp),%ebx
   1d6b4:	85 db                	test   %ebx,%ebx
   1d6b6:	0f 85 f4 03 00 00    	jne    1dab0 <mbedtls_camellia_self_test+0x620>
   1d6bc:	4c 8d a4 24 90 01 00 	lea    0x190(%rsp),%r12
   1d6c3:	00 
   1d6c4:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
   1d6c9:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1d6ce:	4d 89 fc             	mov    %r15,%r12
   1d6d1:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1d6d5:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   1d6da:	89 c5                	mov    %eax,%ebp
   1d6dc:	83 e0 01             	and    $0x1,%eax
   1d6df:	d1 fd                	sar    %ebp
   1d6e1:	89 c3                	mov    %eax,%ebx
   1d6e3:	44 8d 7d 02          	lea    0x2(%rbp),%r15d
   1d6e7:	45 89 fa             	mov    %r15d,%r10d
   1d6ea:	41 c1 e2 06          	shl    $0x6,%r10d
   1d6ee:	45 85 db             	test   %r11d,%r11d
   1d6f1:	74 34                	je     1d727 <mbedtls_camellia_self_test+0x297>
   1d6f3:	85 c0                	test   %eax,%eax
   1d6f5:	44 89 d2             	mov    %r10d,%edx
   1d6f8:	bf 01 00 00 00       	mov    $0x1,%edi
   1d6fd:	44 89 54 24 34       	mov    %r10d,0x34(%rsp)
   1d702:	48 8d 05 f5 39 00 00 	lea    0x39f5(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   1d709:	48 8d 0d c9 39 00 00 	lea    0x39c9(%rip),%rcx        # 210d9 <_IO_stdin_used+0xd9>
   1d710:	48 0f 44 c8          	cmove  %rax,%rcx
   1d714:	48 8d 35 bf 82 00 00 	lea    0x82bf(%rip),%rsi        # 259da <small_prime+0x2ba>
   1d71b:	31 c0                	xor    %eax,%eax
   1d71d:	e8 1e 5c fe ff       	callq  3340 <__printf_chk@plt>
   1d722:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
   1d727:	48 63 ed             	movslq %ebp,%rbp
   1d72a:	b9 20 00 00 00       	mov    $0x20,%ecx
   1d72f:	44 89 54 24 34       	mov    %r10d,0x34(%rsp)
   1d734:	48 ba 08 09 0a 0b 0c 	movabs $0xf0e0d0c0b0a0908,%rdx
   1d73b:	0d 0e 0f 
   1d73e:	48 b8 00 01 02 03 04 	movabs $0x706050403020100,%rax
   1d745:	05 06 07 
   1d748:	48 89 94 24 78 01 00 	mov    %rdx,0x178(%rsp)
   1d74f:	00 
   1d750:	48 89 ee             	mov    %rbp,%rsi
   1d753:	48 89 94 24 88 01 00 	mov    %rdx,0x188(%rsp)
   1d75a:	00 
   1d75b:	42 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%edx
   1d762:	00 
   1d763:	48 c1 e6 05          	shl    $0x5,%rsi
   1d767:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   1d76c:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1d773:	00 
   1d774:	48 63 d2             	movslq %edx,%rdx
   1d777:	48 89 84 24 80 01 00 	mov    %rax,0x180(%rsp)
   1d77e:	00 
   1d77f:	48 8d 05 5a 85 00 00 	lea    0x855a(%rip),%rax        # 25ce0 <camellia_test_cbc_key>
   1d786:	4c 89 ff             	mov    %r15,%rdi
   1d789:	48 01 c6             	add    %rax,%rsi
   1d78c:	e8 4f 5b fe ff       	callq  32e0 <__memcpy_chk@plt>
   1d791:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
   1d796:	85 db                	test   %ebx,%ebx
   1d798:	44 89 d2             	mov    %r10d,%edx
   1d79b:	0f 85 c7 02 00 00    	jne    1da68 <mbedtls_camellia_self_test+0x5d8>
   1d7a1:	4c 89 fe             	mov    %r15,%rsi
   1d7a4:	4c 89 f7             	mov    %r14,%rdi
   1d7a7:	e8 f4 f6 ff ff       	callq  1cea0 <mbedtls_camellia_setkey_dec>
   1d7ac:	48 8d 6c 6d 00       	lea    0x0(%rbp,%rbp,2),%rbp
   1d7b1:	48 8d 05 48 84 00 00 	lea    0x8448(%rip),%rax        # 25c00 <camellia_test_cbc_cipher>
   1d7b8:	48 c1 e5 04          	shl    $0x4,%rbp
   1d7bc:	4c 8d 3d dd 84 00 00 	lea    0x84dd(%rip),%r15        # 25ca0 <camellia_test_cbc_plain>
   1d7c3:	48 01 c5             	add    %rax,%rbp
   1d7c6:	4c 89 e8             	mov    %r13,%rax
   1d7c9:	4d 89 f5             	mov    %r14,%r13
   1d7cc:	49 89 c6             	mov    %rax,%r14
   1d7cf:	85 db                	test   %ebx,%ebx
   1d7d1:	0f 85 49 02 00 00    	jne    1da20 <mbedtls_camellia_self_test+0x590>
   1d7d7:	66 0f 6f ac 24 70 01 	movdqa 0x170(%rsp),%xmm5
   1d7de:	00 00 
   1d7e0:	66 0f 6f 75 00       	movdqa 0x0(%rbp),%xmm6
   1d7e5:	66 41 0f 6f 3f       	movdqa (%r15),%xmm7
   1d7ea:	0f 29 ac 24 90 01 00 	movaps %xmm5,0x190(%rsp)
   1d7f1:	00 
   1d7f2:	0f 29 b4 24 70 01 00 	movaps %xmm6,0x170(%rsp)
   1d7f9:	00 
   1d7fa:	0f 29 bc 24 80 01 00 	movaps %xmm7,0x180(%rsp)
   1d801:	00 
   1d802:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   1d807:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1d80c:	4d 89 e1             	mov    %r12,%r9
   1d80f:	89 de                	mov    %ebx,%esi
   1d811:	ba 10 00 00 00       	mov    $0x10,%edx
   1d816:	4c 89 ef             	mov    %r13,%rdi
   1d819:	e8 62 f9 ff ff       	callq  1d180 <mbedtls_camellia_crypt_cbc>
   1d81e:	49 8b 04 24          	mov    (%r12),%rax
   1d822:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   1d827:	49 33 06             	xor    (%r14),%rax
   1d82a:	49 33 56 08          	xor    0x8(%r14),%rdx
   1d82e:	48 09 c2             	or     %rax,%rdx
   1d831:	0f 85 e1 01 00 00    	jne    1da18 <mbedtls_camellia_self_test+0x588>
   1d837:	49 83 c7 10          	add    $0x10,%r15
   1d83b:	48 8d 05 8e 84 00 00 	lea    0x848e(%rip),%rax        # 25cd0 <camellia_test_cbc_plain+0x30>
   1d842:	31 d2                	xor    %edx,%edx
   1d844:	48 83 c5 10          	add    $0x10,%rbp
   1d848:	4c 39 f8             	cmp    %r15,%rax
   1d84b:	75 82                	jne    1d7cf <mbedtls_camellia_self_test+0x33f>
   1d84d:	44 8b 4c 24 30       	mov    0x30(%rsp),%r9d
   1d852:	4c 89 f0             	mov    %r14,%rax
   1d855:	89 54 24 34          	mov    %edx,0x34(%rsp)
   1d859:	4d 89 ee             	mov    %r13,%r14
   1d85c:	49 89 c5             	mov    %rax,%r13
   1d85f:	45 85 c9             	test   %r9d,%r9d
   1d862:	0f 85 18 02 00 00    	jne    1da80 <mbedtls_camellia_self_test+0x5f0>
   1d868:	83 44 24 28 01       	addl   $0x1,0x28(%rsp)
   1d86d:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1d871:	83 f8 06             	cmp    $0x6,%eax
   1d874:	0f 85 57 fe ff ff    	jne    1d6d1 <mbedtls_camellia_self_test+0x241>
   1d87a:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
   1d87f:	4d 89 e7             	mov    %r12,%r15
   1d882:	45 85 c0             	test   %r8d,%r8d
   1d885:	0f 85 c5 02 00 00    	jne    1db50 <mbedtls_camellia_self_test+0x6c0>
   1d88b:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   1d892:	00 
   1d893:	31 ed                	xor    %ebp,%ebp
   1d895:	41 bc 10 00 00 00    	mov    $0x10,%r12d
   1d89b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1d8a0:	48 8d 84 24 a0 01 00 	lea    0x1a0(%rsp),%rax
   1d8a7:	00 
   1d8a8:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d8ad:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1d8b2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d8b7:	8b 7c 24 30          	mov    0x30(%rsp),%edi
   1d8bb:	41 89 ed             	mov    %ebp,%r13d
   1d8be:	89 eb                	mov    %ebp,%ebx
   1d8c0:	41 d1 fd             	sar    %r13d
   1d8c3:	83 e3 01             	and    $0x1,%ebx
   1d8c6:	85 ff                	test   %edi,%edi
   1d8c8:	74 27                	je     1d8f1 <mbedtls_camellia_self_test+0x461>
   1d8ca:	85 db                	test   %ebx,%ebx
   1d8cc:	48 8d 05 2b 38 00 00 	lea    0x382b(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   1d8d3:	48 8d 15 ff 37 00 00 	lea    0x37ff(%rip),%rdx        # 210d9 <_IO_stdin_used+0xd9>
   1d8da:	bf 01 00 00 00       	mov    $0x1,%edi
   1d8df:	48 0f 44 d0          	cmove  %rax,%rdx
   1d8e3:	48 8d 35 0a 81 00 00 	lea    0x810a(%rip),%rsi        # 259f4 <small_prime+0x2d4>
   1d8ea:	31 c0                	xor    %eax,%eax
   1d8ec:	e8 4f 5a fe ff       	callq  3340 <__printf_chk@plt>
   1d8f1:	4d 63 ed             	movslq %r13d,%r13
   1d8f4:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1d8f9:	ba 80 00 00 00       	mov    $0x80,%edx
   1d8fe:	48 8d 3d 7b 82 00 00 	lea    0x827b(%rip),%rdi        # 25b80 <camellia_test_ctr_nonce_counter>
   1d905:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   1d90c:	00 00 
   1d90e:	4c 89 e8             	mov    %r13,%rax
   1d911:	48 c1 e0 04          	shl    $0x4,%rax
   1d915:	66 0f 6f 3c 07       	movdqa (%rdi,%rax,1),%xmm7
   1d91a:	48 8d 3d 9f 82 00 00 	lea    0x829f(%rip),%rdi        # 25bc0 <camellia_test_ctr_key>
   1d921:	66 0f 6f 14 07       	movdqa (%rdi,%rax,1),%xmm2
   1d926:	4c 89 f7             	mov    %r14,%rdi
   1d929:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   1d92e:	0f 29 bc 24 a0 01 00 	movaps %xmm7,0x1a0(%rsp)
   1d935:	00 
   1d936:	0f 29 94 24 c0 01 00 	movaps %xmm2,0x1c0(%rsp)
   1d93d:	00 
   1d93e:	e8 4d ed ff ff       	callq  1c690 <mbedtls_camellia_setkey_enc>
   1d943:	4f 8d 54 6d 00       	lea    0x0(%r13,%r13,2),%r10
   1d948:	48 8d 05 91 81 00 00 	lea    0x8191(%rip),%rax        # 25ae0 <camellia_test_ctr_pt>
   1d94f:	49 c1 e2 04          	shl    $0x4,%r10
   1d953:	4e 8d 1c 10          	lea    (%rax,%r10,1),%r11
   1d957:	48 8d 05 e2 80 00 00 	lea    0x80e2(%rip),%rax        # 25a40 <camellia_test_ctr_ct>
   1d95e:	49 01 c2             	add    %rax,%r10
   1d961:	85 db                	test   %ebx,%ebx
   1d963:	0f 85 57 01 00 00    	jne    1dac0 <mbedtls_camellia_self_test+0x630>
   1d969:	4c 89 d6             	mov    %r10,%rsi
   1d96c:	b9 40 00 00 00       	mov    $0x40,%ecx
   1d971:	4c 89 e2             	mov    %r12,%rdx
   1d974:	4c 89 ff             	mov    %r15,%rdi
   1d977:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1d97c:	e8 5f 59 fe ff       	callq  32e0 <__memcpy_chk@plt>
   1d981:	48 83 ec 08          	sub    $0x8,%rsp
   1d985:	4c 89 e6             	mov    %r12,%rsi
   1d988:	4d 89 f9             	mov    %r15,%r9
   1d98b:	41 57                	push   %r15
   1d98d:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   1d992:	4c 89 f7             	mov    %r14,%rdi
   1d995:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   1d99a:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1d99f:	e8 0c fa ff ff       	callq  1d3b0 <mbedtls_camellia_crypt_ctr>
   1d9a4:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1d9a9:	4c 89 e2             	mov    %r12,%rdx
   1d9ac:	4c 89 de             	mov    %r11,%rsi
   1d9af:	4c 89 ff             	mov    %r15,%rdi
   1d9b2:	e8 e9 58 fe ff       	callq  32a0 <memcmp@plt>
   1d9b7:	59                   	pop    %rcx
   1d9b8:	5e                   	pop    %rsi
   1d9b9:	85 c0                	test   %eax,%eax
   1d9bb:	0f 85 56 fc ff ff    	jne    1d617 <mbedtls_camellia_self_test+0x187>
   1d9c1:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1d9c5:	85 d2                	test   %edx,%edx
   1d9c7:	0f 85 43 01 00 00    	jne    1db10 <mbedtls_camellia_self_test+0x680>
   1d9cd:	83 c5 01             	add    $0x1,%ebp
   1d9d0:	83 fd 06             	cmp    $0x6,%ebp
   1d9d3:	0f 84 4f 01 00 00    	je     1db28 <mbedtls_camellia_self_test+0x698>
   1d9d9:	89 e8                	mov    %ebp,%eax
   1d9db:	48 8d 35 3e 80 00 00 	lea    0x803e(%rip),%rsi        # 25a20 <camellia_test_ctr_len>
   1d9e2:	d1 f8                	sar    %eax
   1d9e4:	48 98                	cltq   
   1d9e6:	4c 63 24 86          	movslq (%rsi,%rax,4),%r12
   1d9ea:	e9 c8 fe ff ff       	jmpq   1d8b7 <mbedtls_camellia_self_test+0x427>
   1d9ef:	90                   	nop
   1d9f0:	e8 9b ec ff ff       	callq  1c690 <mbedtls_camellia_setkey_enc>
   1d9f5:	66 41 0f 6f 1c 24    	movdqa (%r12),%xmm3
   1d9fb:	66 0f 6f 23          	movdqa (%rbx),%xmm4
   1d9ff:	0f 29 9c 24 70 01 00 	movaps %xmm3,0x170(%rsp)
   1da06:	00 
   1da07:	0f 29 a4 24 80 01 00 	movaps %xmm4,0x180(%rsp)
   1da0e:	00 
   1da0f:	e9 d8 fb ff ff       	jmpq   1d5ec <mbedtls_camellia_self_test+0x15c>
   1da14:	0f 1f 40 00          	nopl   0x0(%rax)
   1da18:	4d 89 ee             	mov    %r13,%r14
   1da1b:	e9 f7 fb ff ff       	jmpq   1d617 <mbedtls_camellia_self_test+0x187>
   1da20:	66 0f 6f 84 24 80 01 	movdqa 0x180(%rsp),%xmm0
   1da27:	00 00 
   1da29:	66 41 0f 6f 2f       	movdqa (%r15),%xmm5
   1da2e:	66 0f 6f 75 00       	movdqa 0x0(%rbp),%xmm6
   1da33:	0f 29 84 24 90 01 00 	movaps %xmm0,0x190(%rsp)
   1da3a:	00 
   1da3b:	0f 29 ac 24 70 01 00 	movaps %xmm5,0x170(%rsp)
   1da42:	00 
   1da43:	0f 29 b4 24 80 01 00 	movaps %xmm6,0x180(%rsp)
   1da4a:	00 
   1da4b:	e9 b2 fd ff ff       	jmpq   1d802 <mbedtls_camellia_self_test+0x372>
   1da50:	48 8d 3d 8b 57 00 00 	lea    0x578b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1da57:	e8 a4 57 fe ff       	callq  3200 <puts@plt>
   1da5c:	e9 3d fc ff ff       	jmpq   1d69e <mbedtls_camellia_self_test+0x20e>
   1da61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1da68:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1da6d:	4c 89 f7             	mov    %r14,%rdi
   1da70:	e8 1b ec ff ff       	callq  1c690 <mbedtls_camellia_setkey_enc>
   1da75:	e9 32 fd ff ff       	jmpq   1d7ac <mbedtls_camellia_self_test+0x31c>
   1da7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1da80:	48 8d 3d 5b 57 00 00 	lea    0x575b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1da87:	e8 74 57 fe ff       	callq  3200 <puts@plt>
   1da8c:	e9 d7 fd ff ff       	jmpq   1d868 <mbedtls_camellia_self_test+0x3d8>
   1da91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1da98:	48 8d 3d 1e 60 00 00 	lea    0x601e(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   1da9f:	e8 5c 57 fe ff       	callq  3200 <puts@plt>
   1daa4:	e9 84 fb ff ff       	jmpq   1d62d <mbedtls_camellia_self_test+0x19d>
   1daa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1dab0:	bf 0a 00 00 00       	mov    $0xa,%edi
   1dab5:	e8 36 57 fe ff       	callq  31f0 <putchar@plt>
   1daba:	e9 fd fb ff ff       	jmpq   1d6bc <mbedtls_camellia_self_test+0x22c>
   1dabf:	90                   	nop
   1dac0:	4c 89 de             	mov    %r11,%rsi
   1dac3:	b9 40 00 00 00       	mov    $0x40,%ecx
   1dac8:	4c 89 e2             	mov    %r12,%rdx
   1dacb:	4c 89 ff             	mov    %r15,%rdi
   1dace:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1dad3:	e8 08 58 fe ff       	callq  32e0 <__memcpy_chk@plt>
   1dad8:	48 83 ec 08          	sub    $0x8,%rsp
   1dadc:	4c 89 e6             	mov    %r12,%rsi
   1dadf:	4d 89 f9             	mov    %r15,%r9
   1dae2:	41 57                	push   %r15
   1dae4:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   1dae9:	4c 89 f7             	mov    %r14,%rdi
   1daec:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   1daf1:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1daf6:	e8 b5 f8 ff ff       	callq  1d3b0 <mbedtls_camellia_crypt_ctr>
   1dafb:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1db00:	4c 89 e2             	mov    %r12,%rdx
   1db03:	4c 89 d6             	mov    %r10,%rsi
   1db06:	e9 a4 fe ff ff       	jmpq   1d9af <mbedtls_camellia_self_test+0x51f>
   1db0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1db10:	48 8d 3d cb 56 00 00 	lea    0x56cb(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1db17:	83 c5 01             	add    $0x1,%ebp
   1db1a:	e8 e1 56 fe ff       	callq  3200 <puts@plt>
   1db1f:	83 fd 06             	cmp    $0x6,%ebp
   1db22:	0f 85 b1 fe ff ff    	jne    1d9d9 <mbedtls_camellia_self_test+0x549>
   1db28:	8b 44 24 30          	mov    0x30(%rsp),%eax
   1db2c:	85 c0                	test   %eax,%eax
   1db2e:	75 0d                	jne    1db3d <mbedtls_camellia_self_test+0x6ad>
   1db30:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%rsp)
   1db37:	00 
   1db38:	e9 f0 fa ff ff       	jmpq   1d62d <mbedtls_camellia_self_test+0x19d>
   1db3d:	bf 0a 00 00 00       	mov    $0xa,%edi
   1db42:	e8 a9 56 fe ff       	callq  31f0 <putchar@plt>
   1db47:	e9 e1 fa ff ff       	jmpq   1d62d <mbedtls_camellia_self_test+0x19d>
   1db4c:	0f 1f 40 00          	nopl   0x0(%rax)
   1db50:	bf 0a 00 00 00       	mov    $0xa,%edi
   1db55:	e8 96 56 fe ff       	callq  31f0 <putchar@plt>
   1db5a:	e9 2c fd ff ff       	jmpq   1d88b <mbedtls_camellia_self_test+0x3fb>
   1db5f:	e8 fc 56 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1db64:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1db6b:	00 00 00 
   1db6e:	66 90                	xchg   %ax,%ax

000000000001db70 <ccm_calculate_first_block_if_ready>:
   1db70:	53                   	push   %rbx
   1db71:	48 89 fb             	mov    %rdi,%rbx
   1db74:	48 83 ec 10          	sub    $0x10,%rsp
   1db78:	8b bf a4 00 00 00    	mov    0xa4(%rdi),%edi
   1db7e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1db85:	00 00 
   1db87:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1db8c:	31 c0                	xor    %eax,%eax
   1db8e:	89 fa                	mov    %edi,%edx
   1db90:	83 e2 03             	and    $0x3,%edx
   1db93:	83 fa 03             	cmp    $0x3,%edx
   1db96:	0f 85 8b 00 00 00    	jne    1dc27 <ccm_calculate_first_block_if_ready+0xb7>
   1db9c:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
   1dba3:	48 85 c0             	test   %rax,%rax
   1dba6:	0f 84 94 00 00 00    	je     1dc40 <ccm_calculate_first_block_if_ready+0xd0>
   1dbac:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
   1dbb3:	48 83 bb 88 00 00 00 	cmpq   $0x0,0x88(%rbx)
   1dbba:	00 
   1dbbb:	44 0f b6 03          	movzbl (%rbx),%r8d
   1dbbf:	74 04                	je     1dbc5 <ccm_calculate_first_block_if_ready+0x55>
   1dbc1:	41 83 c8 40          	or     $0x40,%r8d
   1dbc5:	48 83 e8 02          	sub    $0x2,%rax
   1dbc9:	0f b6 8b a0 00 00 00 	movzbl 0xa0(%rbx),%ecx
   1dbd0:	48 d1 e8             	shr    %rax
   1dbd3:	c1 e0 03             	shl    $0x3,%eax
   1dbd6:	8d 71 ff             	lea    -0x1(%rcx),%esi
   1dbd9:	44 09 c0             	or     %r8d,%eax
   1dbdc:	09 f0                	or     %esi,%eax
   1dbde:	88 03                	mov    %al,(%rbx)
   1dbe0:	84 c9                	test   %cl,%cl
   1dbe2:	74 23                	je     1dc07 <ccm_calculate_first_block_if_ready+0x97>
   1dbe4:	48 8d 4b 0e          	lea    0xe(%rbx),%rcx
   1dbe8:	40 0f b6 f6          	movzbl %sil,%esi
   1dbec:	48 8d 43 0f          	lea    0xf(%rbx),%rax
   1dbf0:	48 29 f1             	sub    %rsi,%rcx
   1dbf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dbf8:	88 10                	mov    %dl,(%rax)
   1dbfa:	48 83 e8 01          	sub    $0x1,%rax
   1dbfe:	48 c1 ea 08          	shr    $0x8,%rdx
   1dc02:	48 39 c8             	cmp    %rcx,%rax
   1dc05:	75 f1                	jne    1dbf8 <ccm_calculate_first_block_if_ready+0x88>
   1dc07:	48 85 d2             	test   %rdx,%rdx
   1dc0a:	75 65                	jne    1dc71 <ccm_calculate_first_block_if_ready+0x101>
   1dc0c:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   1dc10:	49 89 e0             	mov    %rsp,%r8
   1dc13:	48 89 d9             	mov    %rbx,%rcx
   1dc16:	ba 10 00 00 00       	mov    $0x10,%edx
   1dc1b:	48 89 de             	mov    %rbx,%rsi
   1dc1e:	e8 3d 84 fe ff       	callq  6060 <mbedtls_cipher_update>
   1dc23:	85 c0                	test   %eax,%eax
   1dc25:	75 41                	jne    1dc68 <ccm_calculate_first_block_if_ready+0xf8>
   1dc27:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1dc2c:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1dc33:	00 00 
   1dc35:	75 51                	jne    1dc88 <ccm_calculate_first_block_if_ready+0x118>
   1dc37:	48 83 c4 10          	add    $0x10,%rsp
   1dc3b:	5b                   	pop    %rbx
   1dc3c:	c3                   	retq   
   1dc3d:	0f 1f 00             	nopl   (%rax)
   1dc40:	0f b6 b3 a1 00 00 00 	movzbl 0xa1(%rbx),%esi
   1dc47:	8d 56 fe             	lea    -0x2(%rsi),%edx
   1dc4a:	80 fa 01             	cmp    $0x1,%dl
   1dc4d:	77 32                	ja     1dc81 <ccm_calculate_first_block_if_ready+0x111>
   1dc4f:	48 c7 83 80 00 00 00 	movq   $0x0,0x80(%rbx)
   1dc56:	00 00 00 00 
   1dc5a:	31 d2                	xor    %edx,%edx
   1dc5c:	e9 52 ff ff ff       	jmpq   1dbb3 <ccm_calculate_first_block_if_ready+0x43>
   1dc61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1dc68:	83 8b a4 00 00 00 10 	orl    $0x10,0xa4(%rbx)
   1dc6f:	eb b6                	jmp    1dc27 <ccm_calculate_first_block_if_ready+0xb7>
   1dc71:	83 cf 10             	or     $0x10,%edi
   1dc74:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1dc79:	89 bb a4 00 00 00    	mov    %edi,0xa4(%rbx)
   1dc7f:	eb a6                	jmp    1dc27 <ccm_calculate_first_block_if_ready+0xb7>
   1dc81:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1dc86:	eb 9f                	jmp    1dc27 <ccm_calculate_first_block_if_ready+0xb7>
   1dc88:	e8 d3 55 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1dc8d:	0f 1f 00             	nopl   (%rax)

000000000001dc90 <mbedtls_ccm_crypt>:
   1dc90:	41 57                	push   %r15
   1dc92:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1dc96:	41 56                	push   %r14
   1dc98:	41 55                	push   %r13
   1dc9a:	4d 89 c5             	mov    %r8,%r13
   1dc9d:	41 54                	push   %r12
   1dc9f:	49 89 cc             	mov    %rcx,%r12
   1dca2:	55                   	push   %rbp
   1dca3:	48 89 fd             	mov    %rdi,%rbp
   1dca6:	53                   	push   %rbx
   1dca7:	48 89 d3             	mov    %rdx,%rbx
   1dcaa:	ba 10 00 00 00       	mov    $0x10,%edx
   1dcaf:	48 83 ec 48          	sub    $0x48,%rsp
   1dcb3:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1dcb8:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1dcbd:	48 8d 77 10          	lea    0x10(%rdi),%rsi
   1dcc1:	48 83 c7 20          	add    $0x20,%rdi
   1dcc5:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1dcca:	4c 89 f9             	mov    %r15,%rcx
   1dccd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dcd4:	00 00 
   1dcd6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1dcdb:	31 c0                	xor    %eax,%eax
   1dcdd:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1dce2:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1dce9:	00 00 
   1dceb:	e8 70 83 fe ff       	callq  6060 <mbedtls_cipher_update>
   1dcf0:	41 89 c6             	mov    %eax,%r14d
   1dcf3:	85 c0                	test   %eax,%eax
   1dcf5:	0f 85 85 00 00 00    	jne    1dd80 <mbedtls_ccm_crypt+0xf0>
   1dcfb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1dd00:	4c 01 fe             	add    %r15,%rsi
   1dd03:	48 83 fb 03          	cmp    $0x3,%rbx
   1dd07:	0f 86 93 00 00 00    	jbe    1dda0 <mbedtls_ccm_crypt+0x110>
   1dd0d:	b9 04 00 00 00       	mov    $0x4,%ecx
   1dd12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1dd18:	41 8b 44 0c fc       	mov    -0x4(%r12,%rcx,1),%eax
   1dd1d:	33 44 0e fc          	xor    -0x4(%rsi,%rcx,1),%eax
   1dd21:	48 89 ca             	mov    %rcx,%rdx
   1dd24:	41 89 44 0d fc       	mov    %eax,-0x4(%r13,%rcx,1)
   1dd29:	48 8d 49 04          	lea    0x4(%rcx),%rcx
   1dd2d:	48 39 cb             	cmp    %rcx,%rbx
   1dd30:	73 e6                	jae    1dd18 <mbedtls_ccm_crypt+0x88>
   1dd32:	48 39 d3             	cmp    %rdx,%rbx
   1dd35:	76 16                	jbe    1dd4d <mbedtls_ccm_crypt+0xbd>
   1dd37:	41 0f b6 04 14       	movzbl (%r12,%rdx,1),%eax
   1dd3c:	32 04 16             	xor    (%rsi,%rdx,1),%al
   1dd3f:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
   1dd44:	48 83 c2 01          	add    $0x1,%rdx
   1dd48:	48 39 d3             	cmp    %rdx,%rbx
   1dd4b:	77 ea                	ja     1dd37 <mbedtls_ccm_crypt+0xa7>
   1dd4d:	be 10 00 00 00       	mov    $0x10,%esi
   1dd52:	4c 89 ff             	mov    %r15,%rdi
   1dd55:	e8 d6 74 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1dd5a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1dd5f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1dd66:	00 00 
   1dd68:	75 3a                	jne    1dda4 <mbedtls_ccm_crypt+0x114>
   1dd6a:	48 83 c4 48          	add    $0x48,%rsp
   1dd6e:	44 89 f0             	mov    %r14d,%eax
   1dd71:	5b                   	pop    %rbx
   1dd72:	5d                   	pop    %rbp
   1dd73:	41 5c                	pop    %r12
   1dd75:	41 5d                	pop    %r13
   1dd77:	41 5e                	pop    %r14
   1dd79:	41 5f                	pop    %r15
   1dd7b:	c3                   	retq   
   1dd7c:	0f 1f 40 00          	nopl   0x0(%rax)
   1dd80:	83 8d a4 00 00 00 10 	orl    $0x10,0xa4(%rbp)
   1dd87:	be 10 00 00 00       	mov    $0x10,%esi
   1dd8c:	4c 89 ff             	mov    %r15,%rdi
   1dd8f:	e8 9c 74 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1dd94:	eb c4                	jmp    1dd5a <mbedtls_ccm_crypt+0xca>
   1dd96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1dd9d:	00 00 00 
   1dda0:	31 d2                	xor    %edx,%edx
   1dda2:	eb 93                	jmp    1dd37 <mbedtls_ccm_crypt+0xa7>
   1dda4:	e8 b7 54 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1dda9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001ddb0 <mbedtls_ccm_init>:
   1ddb0:	f3 0f 1e fa          	endbr64 
   1ddb4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1ddbb:	48 89 f9             	mov    %rdi,%rcx
   1ddbe:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1ddc2:	31 c0                	xor    %eax,%eax
   1ddc4:	48 c7 87 98 00 00 00 	movq   $0x0,0x98(%rdi)
   1ddcb:	00 00 00 00 
   1ddcf:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1ddd3:	48 29 f9             	sub    %rdi,%rcx
   1ddd6:	81 c1 a8 00 00 00    	add    $0xa8,%ecx
   1dddc:	c1 e9 03             	shr    $0x3,%ecx
   1dddf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1dde2:	c3                   	retq   
   1dde3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ddea:	00 00 00 00 
   1ddee:	66 90                	xchg   %ax,%ax

000000000001ddf0 <mbedtls_ccm_setkey>:
   1ddf0:	f3 0f 1e fa          	endbr64 
   1ddf4:	41 56                	push   %r14
   1ddf6:	49 89 d6             	mov    %rdx,%r14
   1ddf9:	ba 01 00 00 00       	mov    $0x1,%edx
   1ddfe:	41 55                	push   %r13
   1de00:	41 89 cd             	mov    %ecx,%r13d
   1de03:	41 54                	push   %r12
   1de05:	49 89 fc             	mov    %rdi,%r12
   1de08:	89 f7                	mov    %esi,%edi
   1de0a:	89 ce                	mov    %ecx,%esi
   1de0c:	55                   	push   %rbp
   1de0d:	48 83 ec 08          	sub    $0x8,%rsp
   1de11:	e8 ca 7d fe ff       	callq  5be0 <mbedtls_cipher_info_from_values>
   1de16:	48 85 c0             	test   %rax,%rax
   1de19:	74 55                	je     1de70 <mbedtls_ccm_setkey+0x80>
   1de1b:	83 78 20 10          	cmpl   $0x10,0x20(%rax)
   1de1f:	48 89 c5             	mov    %rax,%rbp
   1de22:	75 4c                	jne    1de70 <mbedtls_ccm_setkey+0x80>
   1de24:	49 83 c4 20          	add    $0x20,%r12
   1de28:	4c 89 e7             	mov    %r12,%rdi
   1de2b:	e8 30 7e fe ff       	callq  5c60 <mbedtls_cipher_free>
   1de30:	48 89 ee             	mov    %rbp,%rsi
   1de33:	4c 89 e7             	mov    %r12,%rdi
   1de36:	e8 85 7e fe ff       	callq  5cc0 <mbedtls_cipher_setup>
   1de3b:	85 c0                	test   %eax,%eax
   1de3d:	74 11                	je     1de50 <mbedtls_ccm_setkey+0x60>
   1de3f:	48 83 c4 08          	add    $0x8,%rsp
   1de43:	5d                   	pop    %rbp
   1de44:	41 5c                	pop    %r12
   1de46:	41 5d                	pop    %r13
   1de48:	41 5e                	pop    %r14
   1de4a:	c3                   	retq   
   1de4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1de50:	48 83 c4 08          	add    $0x8,%rsp
   1de54:	44 89 ea             	mov    %r13d,%edx
   1de57:	4c 89 f6             	mov    %r14,%rsi
   1de5a:	4c 89 e7             	mov    %r12,%rdi
   1de5d:	5d                   	pop    %rbp
   1de5e:	b9 01 00 00 00       	mov    $0x1,%ecx
   1de63:	41 5c                	pop    %r12
   1de65:	41 5d                	pop    %r13
   1de67:	41 5e                	pop    %r14
   1de69:	e9 f2 7e fe ff       	jmpq   5d60 <mbedtls_cipher_setkey>
   1de6e:	66 90                	xchg   %ax,%ax
   1de70:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1de75:	eb c8                	jmp    1de3f <mbedtls_ccm_setkey+0x4f>
   1de77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1de7e:	00 00 

000000000001de80 <mbedtls_ccm_free>:
   1de80:	f3 0f 1e fa          	endbr64 
   1de84:	48 85 ff             	test   %rdi,%rdi
   1de87:	74 1f                	je     1dea8 <mbedtls_ccm_free+0x28>
   1de89:	55                   	push   %rbp
   1de8a:	48 89 fd             	mov    %rdi,%rbp
   1de8d:	48 8d 7f 20          	lea    0x20(%rdi),%rdi
   1de91:	e8 ca 7d fe ff       	callq  5c60 <mbedtls_cipher_free>
   1de96:	48 89 ef             	mov    %rbp,%rdi
   1de99:	be a8 00 00 00       	mov    $0xa8,%esi
   1de9e:	5d                   	pop    %rbp
   1de9f:	e9 8c 73 fe ff       	jmpq   5230 <mbedtls_platform_zeroize>
   1dea4:	0f 1f 40 00          	nopl   0x0(%rax)
   1dea8:	c3                   	retq   
   1dea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001deb0 <mbedtls_ccm_starts>:
   1deb0:	f3 0f 1e fa          	endbr64 
   1deb4:	48 8d 41 f9          	lea    -0x7(%rcx),%rax
   1deb8:	48 83 f8 06          	cmp    $0x6,%rax
   1debc:	0f 87 ee 00 00 00    	ja     1dfb0 <mbedtls_ccm_starts+0x100>
   1dec2:	41 55                	push   %r13
   1dec4:	b8 0f 00 00 00       	mov    $0xf,%eax
   1dec9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1decd:	49 89 d5             	mov    %rdx,%r13
   1ded0:	41 54                	push   %r12
   1ded2:	29 c8                	sub    %ecx,%eax
   1ded4:	48 89 ca             	mov    %rcx,%rdx
   1ded7:	49 89 cc             	mov    %rcx,%r12
   1deda:	55                   	push   %rbp
   1dedb:	48 89 fd             	mov    %rdi,%rbp
   1dede:	53                   	push   %rbx
   1dedf:	48 8d 5f 10          	lea    0x10(%rdi),%rbx
   1dee3:	48 8d 7f 11          	lea    0x11(%rdi),%rdi
   1dee7:	48 83 ec 08          	sub    $0x8,%rsp
   1deeb:	88 87 8f 00 00 00    	mov    %al,0x8f(%rdi)
   1def1:	b8 0e 00 00 00       	mov    $0xe,%eax
   1def6:	29 c8                	sub    %ecx,%eax
   1def8:	40 88 b7 90 00 00 00 	mov    %sil,0x90(%rdi)
   1deff:	4c 89 ee             	mov    %r13,%rsi
   1df02:	0f 11 47 ff          	movups %xmm0,-0x1(%rdi)
   1df06:	88 47 ff             	mov    %al,-0x1(%rdi)
   1df09:	e8 02 54 fe ff       	callq  3310 <memcpy@plt>
   1df0e:	0f b6 8d a0 00 00 00 	movzbl 0xa0(%rbp),%ecx
   1df15:	4a 8d 44 23 01       	lea    0x1(%rbx,%r12,1),%rax
   1df1a:	83 f9 08             	cmp    $0x8,%ecx
   1df1d:	73 21                	jae    1df40 <mbedtls_ccm_starts+0x90>
   1df1f:	f6 c1 04             	test   $0x4,%cl
   1df22:	75 74                	jne    1df98 <mbedtls_ccm_starts+0xe8>
   1df24:	85 c9                	test   %ecx,%ecx
   1df26:	74 3d                	je     1df65 <mbedtls_ccm_starts+0xb5>
   1df28:	c6 00 00             	movb   $0x0,(%rax)
   1df2b:	f6 c1 02             	test   $0x2,%cl
   1df2e:	74 35                	je     1df65 <mbedtls_ccm_starts+0xb5>
   1df30:	31 d2                	xor    %edx,%edx
   1df32:	66 89 54 01 fe       	mov    %dx,-0x2(%rcx,%rax,1)
   1df37:	eb 2c                	jmp    1df65 <mbedtls_ccm_starts+0xb5>
   1df39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1df40:	48 8d 78 08          	lea    0x8(%rax),%rdi
   1df44:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1df4b:	48 c7 44 01 f8 00 00 	movq   $0x0,-0x8(%rcx,%rax,1)
   1df52:	00 00 
   1df54:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1df58:	48 29 f8             	sub    %rdi,%rax
   1df5b:	01 c1                	add    %eax,%ecx
   1df5d:	31 c0                	xor    %eax,%eax
   1df5f:	c1 e9 03             	shr    $0x3,%ecx
   1df62:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1df65:	c6 45 1f 01          	movb   $0x1,0x1f(%rbp)
   1df69:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
   1df6d:	4c 89 e2             	mov    %r12,%rdx
   1df70:	4c 89 ee             	mov    %r13,%rsi
   1df73:	e8 98 53 fe ff       	callq  3310 <memcpy@plt>
   1df78:	83 8d a4 00 00 00 01 	orl    $0x1,0xa4(%rbp)
   1df7f:	48 83 c4 08          	add    $0x8,%rsp
   1df83:	48 89 ef             	mov    %rbp,%rdi
   1df86:	5b                   	pop    %rbx
   1df87:	5d                   	pop    %rbp
   1df88:	41 5c                	pop    %r12
   1df8a:	41 5d                	pop    %r13
   1df8c:	e9 df fb ff ff       	jmpq   1db70 <ccm_calculate_first_block_if_ready>
   1df91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1df98:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1df9e:	c7 44 01 fc 00 00 00 	movl   $0x0,-0x4(%rcx,%rax,1)
   1dfa5:	00 
   1dfa6:	eb bd                	jmp    1df65 <mbedtls_ccm_starts+0xb5>
   1dfa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1dfaf:	00 
   1dfb0:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1dfb5:	c3                   	retq   
   1dfb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1dfbd:	00 00 00 

000000000001dfc0 <mbedtls_ccm_set_lengths>:
   1dfc0:	f3 0f 1e fa          	endbr64 
   1dfc4:	48 83 f9 02          	cmp    $0x2,%rcx
   1dfc8:	74 46                	je     1e010 <mbedtls_ccm_set_lengths+0x50>
   1dfca:	48 83 f9 10          	cmp    $0x10,%rcx
   1dfce:	77 40                	ja     1e010 <mbedtls_ccm_set_lengths+0x50>
   1dfd0:	48 81 fe ff fe 00 00 	cmp    $0xfeff,%rsi
   1dfd7:	77 37                	ja     1e010 <mbedtls_ccm_set_lengths+0x50>
   1dfd9:	f6 c1 01             	test   $0x1,%cl
   1dfdc:	75 32                	jne    1e010 <mbedtls_ccm_set_lengths+0x50>
   1dfde:	83 8f a4 00 00 00 02 	orl    $0x2,0xa4(%rdi)
   1dfe5:	48 89 97 80 00 00 00 	mov    %rdx,0x80(%rdi)
   1dfec:	48 89 b7 88 00 00 00 	mov    %rsi,0x88(%rdi)
   1dff3:	48 89 8f 90 00 00 00 	mov    %rcx,0x90(%rdi)
   1dffa:	48 c7 87 98 00 00 00 	movq   $0x0,0x98(%rdi)
   1e001:	00 00 00 00 
   1e005:	e9 66 fb ff ff       	jmpq   1db70 <ccm_calculate_first_block_if_ready>
   1e00a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e010:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1e015:	c3                   	retq   
   1e016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e01d:	00 00 00 

000000000001e020 <mbedtls_ccm_update_ad>:
   1e020:	f3 0f 1e fa          	endbr64 
   1e024:	41 56                	push   %r14
   1e026:	41 55                	push   %r13
   1e028:	41 54                	push   %r12
   1e02a:	55                   	push   %rbp
   1e02b:	53                   	push   %rbx
   1e02c:	48 83 ec 10          	sub    $0x10,%rsp
   1e030:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e037:	00 00 
   1e039:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e03e:	31 c0                	xor    %eax,%eax
   1e040:	8b 87 a4 00 00 00    	mov    0xa4(%rdi),%eax
   1e046:	41 89 c4             	mov    %eax,%r12d
   1e049:	41 83 e4 10          	and    $0x10,%r12d
   1e04d:	0f 85 61 01 00 00    	jne    1e1b4 <mbedtls_ccm_update_ad+0x194>
   1e053:	48 89 d5             	mov    %rdx,%rbp
   1e056:	48 85 d2             	test   %rdx,%rdx
   1e059:	0f 84 e9 00 00 00    	je     1e148 <mbedtls_ccm_update_ad+0x128>
   1e05f:	41 89 c4             	mov    %eax,%r12d
   1e062:	41 83 e4 08          	and    $0x8,%r12d
   1e066:	0f 85 48 01 00 00    	jne    1e1b4 <mbedtls_ccm_update_ad+0x194>
   1e06c:	48 8b 8f 88 00 00 00 	mov    0x88(%rdi),%rcx
   1e073:	49 89 fe             	mov    %rdi,%r14
   1e076:	49 89 f5             	mov    %rsi,%r13
   1e079:	a8 04                	test   $0x4,%al
   1e07b:	0f 85 1f 01 00 00    	jne    1e1a0 <mbedtls_ccm_update_ad+0x180>
   1e081:	48 39 ca             	cmp    %rcx,%rdx
   1e084:	0f 87 2a 01 00 00    	ja     1e1b4 <mbedtls_ccm_update_ad+0x194>
   1e08a:	83 c8 04             	or     $0x4,%eax
   1e08d:	30 4f 01             	xor    %cl,0x1(%rdi)
   1e090:	48 89 ca             	mov    %rcx,%rdx
   1e093:	89 87 a4 00 00 00    	mov    %eax,0xa4(%rdi)
   1e099:	48 c1 ea 08          	shr    $0x8,%rdx
   1e09d:	30 17                	xor    %dl,(%rdi)
   1e09f:	48 8b 97 98 00 00 00 	mov    0x98(%rdi),%rdx
   1e0a6:	bb 10 00 00 00       	mov    $0x10,%ebx
   1e0ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e0b0:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
   1e0b4:	48 89 d8             	mov    %rbx,%rax
   1e0b7:	83 e1 0f             	and    $0xf,%ecx
   1e0ba:	48 29 c8             	sub    %rcx,%rax
   1e0bd:	49 8d 3c 0e          	lea    (%r14,%rcx,1),%rdi
   1e0c1:	48 39 e8             	cmp    %rbp,%rax
   1e0c4:	48 0f 47 c5          	cmova  %rbp,%rax
   1e0c8:	48 83 f8 03          	cmp    $0x3,%rax
   1e0cc:	0f 86 c6 00 00 00    	jbe    1e198 <mbedtls_ccm_update_ad+0x178>
   1e0d2:	be 04 00 00 00       	mov    $0x4,%esi
   1e0d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e0de:	00 00 
   1e0e0:	41 8b 54 35 fc       	mov    -0x4(%r13,%rsi,1),%edx
   1e0e5:	31 54 37 fc          	xor    %edx,-0x4(%rdi,%rsi,1)
   1e0e9:	48 89 f2             	mov    %rsi,%rdx
   1e0ec:	48 8d 76 04          	lea    0x4(%rsi),%rsi
   1e0f0:	48 39 f0             	cmp    %rsi,%rax
   1e0f3:	73 eb                	jae    1e0e0 <mbedtls_ccm_update_ad+0xc0>
   1e0f5:	48 39 d0             	cmp    %rdx,%rax
   1e0f8:	76 13                	jbe    1e10d <mbedtls_ccm_update_ad+0xed>
   1e0fa:	41 0f b6 74 15 00    	movzbl 0x0(%r13,%rdx,1),%esi
   1e100:	40 30 34 17          	xor    %sil,(%rdi,%rdx,1)
   1e104:	48 83 c2 01          	add    $0x1,%rdx
   1e108:	48 39 d0             	cmp    %rdx,%rax
   1e10b:	77 ed                	ja     1e0fa <mbedtls_ccm_update_ad+0xda>
   1e10d:	49 8b 96 98 00 00 00 	mov    0x98(%r14),%rdx
   1e114:	48 29 c5             	sub    %rax,%rbp
   1e117:	49 01 c5             	add    %rax,%r13
   1e11a:	48 01 c2             	add    %rax,%rdx
   1e11d:	48 01 c8             	add    %rcx,%rax
   1e120:	49 89 96 98 00 00 00 	mov    %rdx,0x98(%r14)
   1e127:	48 83 f8 10          	cmp    $0x10,%rax
   1e12b:	74 43                	je     1e170 <mbedtls_ccm_update_ad+0x150>
   1e12d:	49 3b 96 88 00 00 00 	cmp    0x88(%r14),%rdx
   1e134:	74 3a                	je     1e170 <mbedtls_ccm_update_ad+0x150>
   1e136:	48 85 ed             	test   %rbp,%rbp
   1e139:	0f 85 71 ff ff ff    	jne    1e0b0 <mbedtls_ccm_update_ad+0x90>
   1e13f:	49 39 96 88 00 00 00 	cmp    %rdx,0x88(%r14)
   1e146:	74 78                	je     1e1c0 <mbedtls_ccm_update_ad+0x1a0>
   1e148:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1e14d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1e154:	00 00 
   1e156:	0f 85 94 00 00 00    	jne    1e1f0 <mbedtls_ccm_update_ad+0x1d0>
   1e15c:	48 83 c4 10          	add    $0x10,%rsp
   1e160:	44 89 e0             	mov    %r12d,%eax
   1e163:	5b                   	pop    %rbx
   1e164:	5d                   	pop    %rbp
   1e165:	41 5c                	pop    %r12
   1e167:	41 5d                	pop    %r13
   1e169:	41 5e                	pop    %r14
   1e16b:	c3                   	retq   
   1e16c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e170:	49 8d 7e 20          	lea    0x20(%r14),%rdi
   1e174:	49 89 e0             	mov    %rsp,%r8
   1e177:	4c 89 f1             	mov    %r14,%rcx
   1e17a:	ba 10 00 00 00       	mov    $0x10,%edx
   1e17f:	4c 89 f6             	mov    %r14,%rsi
   1e182:	e8 d9 7e fe ff       	callq  6060 <mbedtls_cipher_update>
   1e187:	85 c0                	test   %eax,%eax
   1e189:	75 55                	jne    1e1e0 <mbedtls_ccm_update_ad+0x1c0>
   1e18b:	49 8b 96 98 00 00 00 	mov    0x98(%r14),%rdx
   1e192:	eb a2                	jmp    1e136 <mbedtls_ccm_update_ad+0x116>
   1e194:	0f 1f 40 00          	nopl   0x0(%rax)
   1e198:	31 d2                	xor    %edx,%edx
   1e19a:	e9 5b ff ff ff       	jmpq   1e0fa <mbedtls_ccm_update_ad+0xda>
   1e19f:	90                   	nop
   1e1a0:	48 8b 97 98 00 00 00 	mov    0x98(%rdi),%rdx
   1e1a7:	48 8d 04 2a          	lea    (%rdx,%rbp,1),%rax
   1e1ab:	48 39 c8             	cmp    %rcx,%rax
   1e1ae:	0f 86 f2 fe ff ff    	jbe    1e0a6 <mbedtls_ccm_update_ad+0x86>
   1e1b4:	41 bc f3 ff ff ff    	mov    $0xfffffff3,%r12d
   1e1ba:	eb 8c                	jmp    1e148 <mbedtls_ccm_update_ad+0x128>
   1e1bc:	0f 1f 40 00          	nopl   0x0(%rax)
   1e1c0:	41 83 8e a4 00 00 00 	orl    $0x8,0xa4(%r14)
   1e1c7:	08 
   1e1c8:	49 c7 86 98 00 00 00 	movq   $0x0,0x98(%r14)
   1e1cf:	00 00 00 00 
   1e1d3:	e9 70 ff ff ff       	jmpq   1e148 <mbedtls_ccm_update_ad+0x128>
   1e1d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e1df:	00 
   1e1e0:	41 83 8e a4 00 00 00 	orl    $0x10,0xa4(%r14)
   1e1e7:	10 
   1e1e8:	41 89 c4             	mov    %eax,%r12d
   1e1eb:	e9 58 ff ff ff       	jmpq   1e148 <mbedtls_ccm_update_ad+0x128>
   1e1f0:	e8 6b 50 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1e1f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e1fc:	00 00 00 00 

000000000001e200 <mbedtls_ccm_update>:
   1e200:	f3 0f 1e fa          	endbr64 
   1e204:	41 57                	push   %r15
   1e206:	41 56                	push   %r14
   1e208:	41 55                	push   %r13
   1e20a:	41 54                	push   %r12
   1e20c:	55                   	push   %rbp
   1e20d:	53                   	push   %rbx
   1e20e:	48 83 ec 48          	sub    $0x48,%rsp
   1e212:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e219:	00 00 
   1e21b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e220:	31 c0                	xor    %eax,%eax
   1e222:	8b 87 a4 00 00 00    	mov    0xa4(%rdi),%eax
   1e228:	83 e0 10             	and    $0x10,%eax
   1e22b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1e22f:	0f 85 c9 03 00 00    	jne    1e5fe <mbedtls_ccm_update+0x3fe>
   1e235:	48 89 fd             	mov    %rdi,%rbp
   1e238:	49 89 f5             	mov    %rsi,%r13
   1e23b:	49 89 d6             	mov    %rdx,%r14
   1e23e:	49 89 cb             	mov    %rcx,%r11
   1e241:	48 83 bf 90 00 00 00 	cmpq   $0x0,0x90(%rdi)
   1e248:	00 
   1e249:	0f 85 98 03 00 00    	jne    1e5e7 <mbedtls_ccm_update+0x3e7>
   1e24f:	4d 39 c6             	cmp    %r8,%r14
   1e252:	0f 87 a6 03 00 00    	ja     1e5fe <mbedtls_ccm_update+0x3fe>
   1e258:	4d 89 31             	mov    %r14,(%r9)
   1e25b:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1e260:	4d 85 f6             	test   %r14,%r14
   1e263:	75 46                	jne    1e2ab <mbedtls_ccm_update+0xab>
   1e265:	e9 6e 02 00 00       	jmpq   1e4d8 <mbedtls_ccm_update+0x2d8>
   1e26a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e270:	84 c0                	test   %al,%al
   1e272:	0f 84 04 01 00 00    	je     1e37c <mbedtls_ccm_update+0x17c>
   1e278:	49 01 dc             	add    %rbx,%r12
   1e27b:	49 83 fc 10          	cmp    $0x10,%r12
   1e27f:	0f 84 03 02 00 00    	je     1e488 <mbedtls_ccm_update+0x288>
   1e285:	48 8b 95 98 00 00 00 	mov    0x98(%rbp),%rdx
   1e28c:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   1e293:	48 39 c2             	cmp    %rax,%rdx
   1e296:	0f 84 ec 01 00 00    	je     1e488 <mbedtls_ccm_update+0x288>
   1e29c:	49 01 dd             	add    %rbx,%r13
   1e29f:	49 01 db             	add    %rbx,%r11
   1e2a2:	49 29 de             	sub    %rbx,%r14
   1e2a5:	0f 84 2d 02 00 00    	je     1e4d8 <mbedtls_ccm_update+0x2d8>
   1e2ab:	48 8b 85 98 00 00 00 	mov    0x98(%rbp),%rax
   1e2b2:	bb 10 00 00 00       	mov    $0x10,%ebx
   1e2b7:	49 89 c4             	mov    %rax,%r12
   1e2ba:	41 83 e4 0f          	and    $0xf,%r12d
   1e2be:	4c 29 e3             	sub    %r12,%rbx
   1e2c1:	4c 39 f3             	cmp    %r14,%rbx
   1e2c4:	49 0f 47 de          	cmova  %r14,%rbx
   1e2c8:	48 01 d8             	add    %rbx,%rax
   1e2cb:	48 89 85 98 00 00 00 	mov    %rax,0x98(%rbp)
   1e2d2:	0f b6 85 a1 00 00 00 	movzbl 0xa1(%rbp),%eax
   1e2d9:	83 e0 fd             	and    $0xfffffffd,%eax
   1e2dc:	3c 01                	cmp    $0x1,%al
   1e2de:	75 90                	jne    1e270 <mbedtls_ccm_update+0x70>
   1e2e0:	4a 8d 4c 25 00       	lea    0x0(%rbp,%r12,1),%rcx
   1e2e5:	48 83 fb 03          	cmp    $0x3,%rbx
   1e2e9:	0f 86 e1 02 00 00    	jbe    1e5d0 <mbedtls_ccm_update+0x3d0>
   1e2ef:	b8 04 00 00 00       	mov    $0x4,%eax
   1e2f4:	0f 1f 40 00          	nopl   0x0(%rax)
   1e2f8:	41 8b 54 05 fc       	mov    -0x4(%r13,%rax,1),%edx
   1e2fd:	31 54 01 fc          	xor    %edx,-0x4(%rcx,%rax,1)
   1e301:	48 89 c2             	mov    %rax,%rdx
   1e304:	48 8d 40 04          	lea    0x4(%rax),%rax
   1e308:	48 39 c3             	cmp    %rax,%rbx
   1e30b:	73 eb                	jae    1e2f8 <mbedtls_ccm_update+0xf8>
   1e30d:	48 39 d3             	cmp    %rdx,%rbx
   1e310:	76 12                	jbe    1e324 <mbedtls_ccm_update+0x124>
   1e312:	41 0f b6 44 15 00    	movzbl 0x0(%r13,%rdx,1),%eax
   1e318:	30 04 11             	xor    %al,(%rcx,%rdx,1)
   1e31b:	48 83 c2 01          	add    $0x1,%rdx
   1e31f:	48 39 d3             	cmp    %rdx,%rbx
   1e322:	77 ee                	ja     1e312 <mbedtls_ccm_update+0x112>
   1e324:	49 8d 04 1c          	lea    (%r12,%rbx,1),%rax
   1e328:	48 83 f8 10          	cmp    $0x10,%rax
   1e32c:	0f 84 2e 02 00 00    	je     1e560 <mbedtls_ccm_update+0x360>
   1e332:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   1e339:	48 39 85 98 00 00 00 	cmp    %rax,0x98(%rbp)
   1e340:	0f 84 1a 02 00 00    	je     1e560 <mbedtls_ccm_update+0x360>
   1e346:	4d 89 d8             	mov    %r11,%r8
   1e349:	4c 89 e9             	mov    %r13,%rcx
   1e34c:	48 89 da             	mov    %rbx,%rdx
   1e34f:	4c 89 e6             	mov    %r12,%rsi
   1e352:	48 89 ef             	mov    %rbp,%rdi
   1e355:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e359:	e8 32 f9 ff ff       	callq  1dc90 <mbedtls_ccm_crypt>
   1e35e:	85 c0                	test   %eax,%eax
   1e360:	0f 85 c1 02 00 00    	jne    1e627 <mbedtls_ccm_update+0x427>
   1e366:	0f b6 85 a1 00 00 00 	movzbl 0xa1(%rbp),%eax
   1e36d:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e371:	83 e0 fd             	and    $0xfffffffd,%eax
   1e374:	84 c0                	test   %al,%al
   1e376:	0f 85 fc fe ff ff    	jne    1e278 <mbedtls_ccm_update+0x78>
   1e37c:	4d 89 f8             	mov    %r15,%r8
   1e37f:	4c 89 e9             	mov    %r13,%rcx
   1e382:	48 89 da             	mov    %rbx,%rdx
   1e385:	4c 89 e6             	mov    %r12,%rsi
   1e388:	48 89 ef             	mov    %rbp,%rdi
   1e38b:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e38f:	e8 fc f8 ff ff       	callq  1dc90 <mbedtls_ccm_crypt>
   1e394:	85 c0                	test   %eax,%eax
   1e396:	0f 85 8b 02 00 00    	jne    1e627 <mbedtls_ccm_update+0x427>
   1e39c:	48 83 fb 03          	cmp    $0x3,%rbx
   1e3a0:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e3a4:	4a 8d 4c 25 00       	lea    0x0(%rbp,%r12,1),%rcx
   1e3a9:	0f 86 31 02 00 00    	jbe    1e5e0 <mbedtls_ccm_update+0x3e0>
   1e3af:	b8 04 00 00 00       	mov    $0x4,%eax
   1e3b4:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
   1e3b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e3c0:	8b 14 06             	mov    (%rsi,%rax,1),%edx
   1e3c3:	31 54 01 fc          	xor    %edx,-0x4(%rcx,%rax,1)
   1e3c7:	48 89 c2             	mov    %rax,%rdx
   1e3ca:	48 8d 40 04          	lea    0x4(%rax),%rax
   1e3ce:	48 39 c3             	cmp    %rax,%rbx
   1e3d1:	73 ed                	jae    1e3c0 <mbedtls_ccm_update+0x1c0>
   1e3d3:	48 39 d3             	cmp    %rdx,%rbx
   1e3d6:	76 11                	jbe    1e3e9 <mbedtls_ccm_update+0x1e9>
   1e3d8:	41 0f b6 04 17       	movzbl (%r15,%rdx,1),%eax
   1e3dd:	30 04 11             	xor    %al,(%rcx,%rdx,1)
   1e3e0:	48 83 c2 01          	add    $0x1,%rdx
   1e3e4:	48 39 d3             	cmp    %rdx,%rbx
   1e3e7:	77 ef                	ja     1e3d8 <mbedtls_ccm_update+0x1d8>
   1e3e9:	83 fb 08             	cmp    $0x8,%ebx
   1e3ec:	0f 83 1e 01 00 00    	jae    1e510 <mbedtls_ccm_update+0x310>
   1e3f2:	f6 c3 04             	test   $0x4,%bl
   1e3f5:	0f 85 15 02 00 00    	jne    1e610 <mbedtls_ccm_update+0x410>
   1e3fb:	85 db                	test   %ebx,%ebx
   1e3fd:	74 10                	je     1e40f <mbedtls_ccm_update+0x20f>
   1e3ff:	41 0f b6 07          	movzbl (%r15),%eax
   1e403:	41 88 03             	mov    %al,(%r11)
   1e406:	f6 c3 02             	test   $0x2,%bl
   1e409:	0f 85 21 02 00 00    	jne    1e630 <mbedtls_ccm_update+0x430>
   1e40f:	be 10 00 00 00       	mov    $0x10,%esi
   1e414:	4c 89 ff             	mov    %r15,%rdi
   1e417:	49 01 dc             	add    %rbx,%r12
   1e41a:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e41e:	e8 0d 6e fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1e423:	49 83 fc 10          	cmp    $0x10,%r12
   1e427:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e42b:	0f 84 6f 01 00 00    	je     1e5a0 <mbedtls_ccm_update+0x3a0>
   1e431:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   1e438:	48 39 85 98 00 00 00 	cmp    %rax,0x98(%rbp)
   1e43f:	0f 85 57 fe ff ff    	jne    1e29c <mbedtls_ccm_update+0x9c>
   1e445:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e449:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1e44e:	48 89 e9             	mov    %rbp,%rcx
   1e451:	48 89 ee             	mov    %rbp,%rsi
   1e454:	ba 10 00 00 00       	mov    $0x10,%edx
   1e459:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e45d:	e8 fe 7b fe ff       	callq  6060 <mbedtls_cipher_update>
   1e462:	85 c0                	test   %eax,%eax
   1e464:	0f 85 1f 01 00 00    	jne    1e589 <mbedtls_ccm_update+0x389>
   1e46a:	48 8b 95 98 00 00 00 	mov    0x98(%rbp),%rdx
   1e471:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   1e478:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e47c:	48 39 c2             	cmp    %rax,%rdx
   1e47f:	0f 85 17 fe ff ff    	jne    1e29c <mbedtls_ccm_update+0x9c>
   1e485:	0f 1f 00             	nopl   (%rax)
   1e488:	0f b6 85 a0 00 00 00 	movzbl 0xa0(%rbp),%eax
   1e48f:	84 c0                	test   %al,%al
   1e491:	0f 84 05 fe ff ff    	je     1e29c <mbedtls_ccm_update+0x9c>
   1e497:	83 e8 01             	sub    $0x1,%eax
   1e49a:	48 8d 4d 1e          	lea    0x1e(%rbp),%rcx
   1e49e:	48 8d 55 1f          	lea    0x1f(%rbp),%rdx
   1e4a2:	0f b6 c0             	movzbl %al,%eax
   1e4a5:	48 29 c1             	sub    %rax,%rcx
   1e4a8:	eb 13                	jmp    1e4bd <mbedtls_ccm_update+0x2bd>
   1e4aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e4b0:	48 83 ea 01          	sub    $0x1,%rdx
   1e4b4:	48 39 d1             	cmp    %rdx,%rcx
   1e4b7:	0f 84 df fd ff ff    	je     1e29c <mbedtls_ccm_update+0x9c>
   1e4bd:	80 02 01             	addb   $0x1,(%rdx)
   1e4c0:	74 ee                	je     1e4b0 <mbedtls_ccm_update+0x2b0>
   1e4c2:	49 01 dd             	add    %rbx,%r13
   1e4c5:	49 01 db             	add    %rbx,%r11
   1e4c8:	49 29 de             	sub    %rbx,%r14
   1e4cb:	0f 85 da fd ff ff    	jne    1e2ab <mbedtls_ccm_update+0xab>
   1e4d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e4d8:	be 10 00 00 00       	mov    $0x10,%esi
   1e4dd:	4c 89 ff             	mov    %r15,%rdi
   1e4e0:	e8 4b 6d fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1e4e5:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1e4ea:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1e4f1:	00 00 
   1e4f3:	0f 85 4a 01 00 00    	jne    1e643 <mbedtls_ccm_update+0x443>
   1e4f9:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1e4fd:	48 83 c4 48          	add    $0x48,%rsp
   1e501:	5b                   	pop    %rbx
   1e502:	5d                   	pop    %rbp
   1e503:	41 5c                	pop    %r12
   1e505:	41 5d                	pop    %r13
   1e507:	41 5e                	pop    %r14
   1e509:	41 5f                	pop    %r15
   1e50b:	c3                   	retq   
   1e50c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e510:	49 8b 07             	mov    (%r15),%rax
   1e513:	49 8d 4b 08          	lea    0x8(%r11),%rcx
   1e517:	4c 89 fe             	mov    %r15,%rsi
   1e51a:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   1e51e:	49 89 03             	mov    %rax,(%r11)
   1e521:	89 d8                	mov    %ebx,%eax
   1e523:	49 8b 54 07 f8       	mov    -0x8(%r15,%rax,1),%rdx
   1e528:	49 89 54 03 f8       	mov    %rdx,-0x8(%r11,%rax,1)
   1e52d:	4c 89 d8             	mov    %r11,%rax
   1e530:	48 29 c8             	sub    %rcx,%rax
   1e533:	48 29 c6             	sub    %rax,%rsi
   1e536:	01 d8                	add    %ebx,%eax
   1e538:	83 e0 f8             	and    $0xfffffff8,%eax
   1e53b:	83 f8 08             	cmp    $0x8,%eax
   1e53e:	0f 82 cb fe ff ff    	jb     1e40f <mbedtls_ccm_update+0x20f>
   1e544:	83 e0 f8             	and    $0xfffffff8,%eax
   1e547:	31 d2                	xor    %edx,%edx
   1e549:	89 d7                	mov    %edx,%edi
   1e54b:	83 c2 08             	add    $0x8,%edx
   1e54e:	4c 8b 04 3e          	mov    (%rsi,%rdi,1),%r8
   1e552:	4c 89 04 39          	mov    %r8,(%rcx,%rdi,1)
   1e556:	39 c2                	cmp    %eax,%edx
   1e558:	72 ef                	jb     1e549 <mbedtls_ccm_update+0x349>
   1e55a:	e9 b0 fe ff ff       	jmpq   1e40f <mbedtls_ccm_update+0x20f>
   1e55f:	90                   	nop
   1e560:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e564:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1e569:	48 89 e9             	mov    %rbp,%rcx
   1e56c:	48 89 ee             	mov    %rbp,%rsi
   1e56f:	ba 10 00 00 00       	mov    $0x10,%edx
   1e574:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e578:	e8 e3 7a fe ff       	callq  6060 <mbedtls_cipher_update>
   1e57d:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e581:	85 c0                	test   %eax,%eax
   1e583:	0f 84 bd fd ff ff    	je     1e346 <mbedtls_ccm_update+0x146>
   1e589:	83 8d a4 00 00 00 10 	orl    $0x10,0xa4(%rbp)
   1e590:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1e594:	e9 3f ff ff ff       	jmpq   1e4d8 <mbedtls_ccm_update+0x2d8>
   1e599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e5a0:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e5a4:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1e5a9:	48 89 e9             	mov    %rbp,%rcx
   1e5ac:	48 89 ee             	mov    %rbp,%rsi
   1e5af:	ba 10 00 00 00       	mov    $0x10,%edx
   1e5b4:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e5b8:	e8 a3 7a fe ff       	callq  6060 <mbedtls_cipher_update>
   1e5bd:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e5c1:	85 c0                	test   %eax,%eax
   1e5c3:	0f 84 bf fe ff ff    	je     1e488 <mbedtls_ccm_update+0x288>
   1e5c9:	eb be                	jmp    1e589 <mbedtls_ccm_update+0x389>
   1e5cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e5d0:	31 d2                	xor    %edx,%edx
   1e5d2:	e9 3b fd ff ff       	jmpq   1e312 <mbedtls_ccm_update+0x112>
   1e5d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e5de:	00 00 
   1e5e0:	31 d2                	xor    %edx,%edx
   1e5e2:	e9 f1 fd ff ff       	jmpq   1e3d8 <mbedtls_ccm_update+0x1d8>
   1e5e7:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
   1e5ee:	48 01 d0             	add    %rdx,%rax
   1e5f1:	48 3b 87 80 00 00 00 	cmp    0x80(%rdi),%rax
   1e5f8:	0f 86 51 fc ff ff    	jbe    1e24f <mbedtls_ccm_update+0x4f>
   1e5fe:	c7 44 24 0c f3 ff ff 	movl   $0xfffffff3,0xc(%rsp)
   1e605:	ff 
   1e606:	e9 da fe ff ff       	jmpq   1e4e5 <mbedtls_ccm_update+0x2e5>
   1e60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e610:	41 8b 07             	mov    (%r15),%eax
   1e613:	41 89 03             	mov    %eax,(%r11)
   1e616:	89 d8                	mov    %ebx,%eax
   1e618:	41 8b 54 07 fc       	mov    -0x4(%r15,%rax,1),%edx
   1e61d:	41 89 54 03 fc       	mov    %edx,-0x4(%r11,%rax,1)
   1e622:	e9 e8 fd ff ff       	jmpq   1e40f <mbedtls_ccm_update+0x20f>
   1e627:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1e62b:	e9 a8 fe ff ff       	jmpq   1e4d8 <mbedtls_ccm_update+0x2d8>
   1e630:	89 d8                	mov    %ebx,%eax
   1e632:	41 0f b7 54 07 fe    	movzwl -0x2(%r15,%rax,1),%edx
   1e638:	66 41 89 54 03 fe    	mov    %dx,-0x2(%r11,%rax,1)
   1e63e:	e9 cc fd ff ff       	jmpq   1e40f <mbedtls_ccm_update+0x20f>
   1e643:	e8 18 4c fe ff       	callq  3260 <__stack_chk_fail@plt>
   1e648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e64f:	00 

000000000001e650 <mbedtls_ccm_finish>:
   1e650:	f3 0f 1e fa          	endbr64 
   1e654:	41 55                	push   %r13
   1e656:	41 54                	push   %r12
   1e658:	55                   	push   %rbp
   1e659:	53                   	push   %rbx
   1e65a:	48 83 ec 08          	sub    $0x8,%rsp
   1e65e:	8b 87 a4 00 00 00    	mov    0xa4(%rdi),%eax
   1e664:	a8 10                	test   $0x10,%al
   1e666:	0f 85 b9 00 00 00    	jne    1e725 <mbedtls_ccm_finish+0xd5>
   1e66c:	48 83 bf 88 00 00 00 	cmpq   $0x0,0x88(%rdi)
   1e673:	00 
   1e674:	48 89 fb             	mov    %rdi,%rbx
   1e677:	48 89 f5             	mov    %rsi,%rbp
   1e67a:	49 89 d4             	mov    %rdx,%r12
   1e67d:	74 08                	je     1e687 <mbedtls_ccm_finish+0x37>
   1e67f:	a8 08                	test   $0x8,%al
   1e681:	0f 84 96 00 00 00    	je     1e71d <mbedtls_ccm_finish+0xcd>
   1e687:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
   1e68e:	48 85 c0             	test   %rax,%rax
   1e691:	75 7d                	jne    1e710 <mbedtls_ccm_finish+0xc0>
   1e693:	0f b6 8b a0 00 00 00 	movzbl 0xa0(%rbx),%ecx
   1e69a:	84 c9                	test   %cl,%cl
   1e69c:	74 1e                	je     1e6bc <mbedtls_ccm_finish+0x6c>
   1e69e:	83 e9 01             	sub    $0x1,%ecx
   1e6a1:	48 8d 53 1e          	lea    0x1e(%rbx),%rdx
   1e6a5:	48 8d 43 1f          	lea    0x1f(%rbx),%rax
   1e6a9:	0f b6 c9             	movzbl %cl,%ecx
   1e6ac:	48 29 ca             	sub    %rcx,%rdx
   1e6af:	90                   	nop
   1e6b0:	c6 00 00             	movb   $0x0,(%rax)
   1e6b3:	48 83 e8 01          	sub    $0x1,%rax
   1e6b7:	48 39 d0             	cmp    %rdx,%rax
   1e6ba:	75 f4                	jne    1e6b0 <mbedtls_ccm_finish+0x60>
   1e6bc:	49 89 d8             	mov    %rbx,%r8
   1e6bf:	48 89 d9             	mov    %rbx,%rcx
   1e6c2:	ba 10 00 00 00       	mov    $0x10,%edx
   1e6c7:	31 f6                	xor    %esi,%esi
   1e6c9:	48 89 df             	mov    %rbx,%rdi
   1e6cc:	e8 bf f5 ff ff       	callq  1dc90 <mbedtls_ccm_crypt>
   1e6d1:	41 89 c5             	mov    %eax,%r13d
   1e6d4:	85 c0                	test   %eax,%eax
   1e6d6:	75 28                	jne    1e700 <mbedtls_ccm_finish+0xb0>
   1e6d8:	48 85 ed             	test   %rbp,%rbp
   1e6db:	74 0e                	je     1e6eb <mbedtls_ccm_finish+0x9b>
   1e6dd:	4c 89 e2             	mov    %r12,%rdx
   1e6e0:	48 89 de             	mov    %rbx,%rsi
   1e6e3:	48 89 ef             	mov    %rbp,%rdi
   1e6e6:	e8 25 4c fe ff       	callq  3310 <memcpy@plt>
   1e6eb:	c7 83 a4 00 00 00 00 	movl   $0x0,0xa4(%rbx)
   1e6f2:	00 00 00 
   1e6f5:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1e6f9:	0f 11 03             	movups %xmm0,(%rbx)
   1e6fc:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   1e700:	48 83 c4 08          	add    $0x8,%rsp
   1e704:	44 89 e8             	mov    %r13d,%eax
   1e707:	5b                   	pop    %rbx
   1e708:	5d                   	pop    %rbp
   1e709:	41 5c                	pop    %r12
   1e70b:	41 5d                	pop    %r13
   1e70d:	c3                   	retq   
   1e70e:	66 90                	xchg   %ax,%ax
   1e710:	48 3b 83 98 00 00 00 	cmp    0x98(%rbx),%rax
   1e717:	0f 84 76 ff ff ff    	je     1e693 <mbedtls_ccm_finish+0x43>
   1e71d:	41 bd f3 ff ff ff    	mov    $0xfffffff3,%r13d
   1e723:	eb db                	jmp    1e700 <mbedtls_ccm_finish+0xb0>
   1e725:	41 bd 92 ff ff ff    	mov    $0xffffff92,%r13d
   1e72b:	eb d3                	jmp    1e700 <mbedtls_ccm_finish+0xb0>
   1e72d:	0f 1f 00             	nopl   (%rax)

000000000001e730 <ccm_auth_crypt>:
   1e730:	41 57                	push   %r15
   1e732:	41 56                	push   %r14
   1e734:	41 55                	push   %r13
   1e736:	41 54                	push   %r12
   1e738:	49 89 d4             	mov    %rdx,%r12
   1e73b:	48 89 ca             	mov    %rcx,%rdx
   1e73e:	4c 89 c1             	mov    %r8,%rcx
   1e741:	55                   	push   %rbp
   1e742:	4c 89 cd             	mov    %r9,%rbp
   1e745:	53                   	push   %rbx
   1e746:	48 89 fb             	mov    %rdi,%rbx
   1e749:	48 83 ec 18          	sub    $0x18,%rsp
   1e74d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e754:	00 00 
   1e756:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e75b:	31 c0                	xor    %eax,%eax
   1e75d:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
   1e762:	4c 8b 74 24 60       	mov    0x60(%rsp),%r14
   1e767:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15
   1e76c:	e8 3f f7 ff ff       	callq  1deb0 <mbedtls_ccm_starts>
   1e771:	85 c0                	test   %eax,%eax
   1e773:	74 23                	je     1e798 <ccm_auth_crypt+0x68>
   1e775:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1e77a:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1e781:	00 00 
   1e783:	75 6d                	jne    1e7f2 <ccm_auth_crypt+0xc2>
   1e785:	48 83 c4 18          	add    $0x18,%rsp
   1e789:	5b                   	pop    %rbx
   1e78a:	5d                   	pop    %rbp
   1e78b:	41 5c                	pop    %r12
   1e78d:	41 5d                	pop    %r13
   1e78f:	41 5e                	pop    %r14
   1e791:	41 5f                	pop    %r15
   1e793:	c3                   	retq   
   1e794:	0f 1f 40 00          	nopl   0x0(%rax)
   1e798:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   1e79d:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1e7a2:	4c 89 e2             	mov    %r12,%rdx
   1e7a5:	48 89 df             	mov    %rbx,%rdi
   1e7a8:	e8 13 f8 ff ff       	callq  1dfc0 <mbedtls_ccm_set_lengths>
   1e7ad:	85 c0                	test   %eax,%eax
   1e7af:	75 c4                	jne    1e775 <ccm_auth_crypt+0x45>
   1e7b1:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1e7b6:	48 89 ee             	mov    %rbp,%rsi
   1e7b9:	48 89 df             	mov    %rbx,%rdi
   1e7bc:	e8 5f f8 ff ff       	callq  1e020 <mbedtls_ccm_update_ad>
   1e7c1:	85 c0                	test   %eax,%eax
   1e7c3:	75 b0                	jne    1e775 <ccm_auth_crypt+0x45>
   1e7c5:	49 89 e1             	mov    %rsp,%r9
   1e7c8:	4d 89 e0             	mov    %r12,%r8
   1e7cb:	4c 89 f1             	mov    %r14,%rcx
   1e7ce:	4c 89 e2             	mov    %r12,%rdx
   1e7d1:	4c 89 ee             	mov    %r13,%rsi
   1e7d4:	48 89 df             	mov    %rbx,%rdi
   1e7d7:	e8 24 fa ff ff       	callq  1e200 <mbedtls_ccm_update>
   1e7dc:	85 c0                	test   %eax,%eax
   1e7de:	75 95                	jne    1e775 <ccm_auth_crypt+0x45>
   1e7e0:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   1e7e5:	4c 89 fe             	mov    %r15,%rsi
   1e7e8:	48 89 df             	mov    %rbx,%rdi
   1e7eb:	e8 60 fe ff ff       	callq  1e650 <mbedtls_ccm_finish>
   1e7f0:	eb 83                	jmp    1e775 <ccm_auth_crypt+0x45>
   1e7f2:	e8 69 4a fe ff       	callq  3260 <__stack_chk_fail@plt>
   1e7f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e7fe:	00 00 

000000000001e800 <ccm_auth_decrypt>:
   1e800:	41 55                	push   %r13
   1e802:	49 89 d5             	mov    %rdx,%r13
   1e805:	41 54                	push   %r12
   1e807:	55                   	push   %rbp
   1e808:	53                   	push   %rbx
   1e809:	48 83 ec 30          	sub    $0x30,%rsp
   1e80d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e814:	00 00 
   1e816:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e81b:	31 c0                	xor    %eax,%eax
   1e81d:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
   1e822:	4c 8b 64 24 68       	mov    0x68(%rsp),%r12
   1e827:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   1e82c:	53                   	push   %rbx
   1e82d:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1e832:	50                   	push   %rax
   1e833:	41 54                	push   %r12
   1e835:	ff 74 24 78          	pushq  0x78(%rsp)
   1e839:	ff 74 24 78          	pushq  0x78(%rsp)
   1e83d:	e8 ee fe ff ff       	callq  1e730 <ccm_auth_crypt>
   1e842:	48 83 c4 30          	add    $0x30,%rsp
   1e846:	85 c0                	test   %eax,%eax
   1e848:	75 2b                	jne    1e875 <ccm_auth_decrypt+0x75>
   1e84a:	48 85 db             	test   %rbx,%rbx
   1e84d:	74 26                	je     1e875 <ccm_auth_decrypt+0x75>
   1e84f:	31 ff                	xor    %edi,%edi
   1e851:	31 f6                	xor    %esi,%esi
   1e853:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e858:	0f b6 4c 35 00       	movzbl 0x0(%rbp,%rsi,1),%ecx
   1e85d:	83 c7 01             	add    $0x1,%edi
   1e860:	32 0c 34             	xor    (%rsp,%rsi,1),%cl
   1e863:	0f b6 c9             	movzbl %cl,%ecx
   1e866:	40 0f b6 f7          	movzbl %dil,%esi
   1e86a:	09 c8                	or     %ecx,%eax
   1e86c:	48 39 f3             	cmp    %rsi,%rbx
   1e86f:	77 e7                	ja     1e858 <ccm_auth_decrypt+0x58>
   1e871:	85 c0                	test   %eax,%eax
   1e873:	75 1b                	jne    1e890 <ccm_auth_decrypt+0x90>
   1e875:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1e87a:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1e881:	00 00 
   1e883:	75 1d                	jne    1e8a2 <ccm_auth_decrypt+0xa2>
   1e885:	48 83 c4 28          	add    $0x28,%rsp
   1e889:	5b                   	pop    %rbx
   1e88a:	5d                   	pop    %rbp
   1e88b:	41 5c                	pop    %r12
   1e88d:	41 5d                	pop    %r13
   1e88f:	c3                   	retq   
   1e890:	4c 89 ee             	mov    %r13,%rsi
   1e893:	4c 89 e7             	mov    %r12,%rdi
   1e896:	e8 95 69 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1e89b:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   1e8a0:	eb d3                	jmp    1e875 <ccm_auth_decrypt+0x75>
   1e8a2:	e8 b9 49 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1e8a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e8ae:	00 00 

000000000001e8b0 <mbedtls_ccm_star_encrypt_and_tag>:
   1e8b0:	f3 0f 1e fa          	endbr64 
   1e8b4:	48 83 ec 10          	sub    $0x10,%rsp
   1e8b8:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8bc:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8c0:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8c4:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8c8:	41 51                	push   %r9
   1e8ca:	4d 89 c1             	mov    %r8,%r9
   1e8cd:	49 89 c8             	mov    %rcx,%r8
   1e8d0:	48 89 d1             	mov    %rdx,%rcx
   1e8d3:	48 89 f2             	mov    %rsi,%rdx
   1e8d6:	be 03 00 00 00       	mov    $0x3,%esi
   1e8db:	e8 50 fe ff ff       	callq  1e730 <ccm_auth_crypt>
   1e8e0:	48 83 c4 38          	add    $0x38,%rsp
   1e8e4:	c3                   	retq   
   1e8e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e8ec:	00 00 00 00 

000000000001e8f0 <mbedtls_ccm_encrypt_and_tag>:
   1e8f0:	f3 0f 1e fa          	endbr64 
   1e8f4:	48 83 ec 10          	sub    $0x10,%rsp
   1e8f8:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8fc:	ff 74 24 30          	pushq  0x30(%rsp)
   1e900:	ff 74 24 30          	pushq  0x30(%rsp)
   1e904:	ff 74 24 30          	pushq  0x30(%rsp)
   1e908:	41 51                	push   %r9
   1e90a:	4d 89 c1             	mov    %r8,%r9
   1e90d:	49 89 c8             	mov    %rcx,%r8
   1e910:	48 89 d1             	mov    %rdx,%rcx
   1e913:	48 89 f2             	mov    %rsi,%rdx
   1e916:	be 01 00 00 00       	mov    $0x1,%esi
   1e91b:	e8 10 fe ff ff       	callq  1e730 <ccm_auth_crypt>
   1e920:	48 83 c4 38          	add    $0x38,%rsp
   1e924:	c3                   	retq   
   1e925:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e92c:	00 00 00 00 

000000000001e930 <mbedtls_ccm_star_auth_decrypt>:
   1e930:	f3 0f 1e fa          	endbr64 
   1e934:	48 83 ec 10          	sub    $0x10,%rsp
   1e938:	ff 74 24 30          	pushq  0x30(%rsp)
   1e93c:	ff 74 24 30          	pushq  0x30(%rsp)
   1e940:	ff 74 24 30          	pushq  0x30(%rsp)
   1e944:	ff 74 24 30          	pushq  0x30(%rsp)
   1e948:	41 51                	push   %r9
   1e94a:	4d 89 c1             	mov    %r8,%r9
   1e94d:	49 89 c8             	mov    %rcx,%r8
   1e950:	48 89 d1             	mov    %rdx,%rcx
   1e953:	48 89 f2             	mov    %rsi,%rdx
   1e956:	be 02 00 00 00       	mov    $0x2,%esi
   1e95b:	e8 a0 fe ff ff       	callq  1e800 <ccm_auth_decrypt>
   1e960:	48 83 c4 38          	add    $0x38,%rsp
   1e964:	c3                   	retq   
   1e965:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e96c:	00 00 00 00 

000000000001e970 <mbedtls_ccm_auth_decrypt>:
   1e970:	f3 0f 1e fa          	endbr64 
   1e974:	48 83 ec 10          	sub    $0x10,%rsp
   1e978:	ff 74 24 30          	pushq  0x30(%rsp)
   1e97c:	ff 74 24 30          	pushq  0x30(%rsp)
   1e980:	ff 74 24 30          	pushq  0x30(%rsp)
   1e984:	ff 74 24 30          	pushq  0x30(%rsp)
   1e988:	41 51                	push   %r9
   1e98a:	4d 89 c1             	mov    %r8,%r9
   1e98d:	49 89 c8             	mov    %rcx,%r8
   1e990:	48 89 d1             	mov    %rdx,%rcx
   1e993:	48 89 f2             	mov    %rsi,%rdx
   1e996:	31 f6                	xor    %esi,%esi
   1e998:	e8 63 fe ff ff       	callq  1e800 <ccm_auth_decrypt>
   1e99d:	48 83 c4 38          	add    $0x38,%rsp
   1e9a1:	c3                   	retq   
   1e9a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e9a9:	00 00 00 00 
   1e9ad:	0f 1f 00             	nopl   (%rax)

000000000001e9b0 <mbedtls_ccm_self_test>:
   1e9b0:	f3 0f 1e fa          	endbr64 
   1e9b4:	41 57                	push   %r15
   1e9b6:	b9 15 00 00 00       	mov    $0x15,%ecx
   1e9bb:	be 02 00 00 00       	mov    $0x2,%esi
   1e9c0:	48 8d 15 49 7b 00 00 	lea    0x7b49(%rip),%rdx        # 26510 <key_test_data>
   1e9c7:	41 56                	push   %r14
   1e9c9:	41 55                	push   %r13
   1e9cb:	41 54                	push   %r12
   1e9cd:	55                   	push   %rbp
   1e9ce:	53                   	push   %rbx
   1e9cf:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
   1e9d6:	89 7c 24 04          	mov    %edi,0x4(%rsp)
   1e9da:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1e9df:	4c 89 ff             	mov    %r15,%rdi
   1e9e2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e9e9:	00 00 
   1e9eb:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   1e9f2:	00 
   1e9f3:	31 c0                	xor    %eax,%eax
   1e9f5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1e9f8:	b9 80 00 00 00       	mov    $0x80,%ecx
   1e9fd:	4c 89 ff             	mov    %r15,%rdi
   1ea00:	e8 eb f3 ff ff       	callq  1ddf0 <mbedtls_ccm_setkey>
   1ea05:	85 c0                	test   %eax,%eax
   1ea07:	0f 85 fb 01 00 00    	jne    1ec08 <mbedtls_ccm_self_test+0x258>
   1ea0d:	31 db                	xor    %ebx,%ebx
   1ea0f:	48 8d ac 24 d0 00 00 	lea    0xd0(%rsp),%rbp
   1ea16:	00 
   1ea17:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   1ea1e:	00 
   1ea1f:	8b 74 24 04          	mov    0x4(%rsp),%esi
   1ea23:	85 f6                	test   %esi,%esi
   1ea25:	0f 85 a5 01 00 00    	jne    1ebd0 <mbedtls_ccm_self_test+0x220>
   1ea2b:	48 8d 05 2e 7a 00 00 	lea    0x7a2e(%rip),%rax        # 26460 <msg_len_test_data>
   1ea32:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1ea36:	b9 18 00 00 00       	mov    $0x18,%ecx
   1ea3b:	48 89 ef             	mov    %rbp,%rdi
   1ea3e:	4c 8b 34 d8          	mov    (%rax,%rbx,8),%r14
   1ea42:	48 8d 35 77 7a 00 00 	lea    0x7a77(%rip),%rsi        # 264c0 <msg_test_data>
   1ea49:	0f 29 45 00          	movaps %xmm0,0x0(%rbp)
   1ea4d:	41 0f 29 04 24       	movaps %xmm0,(%r12)
   1ea52:	4c 89 f2             	mov    %r14,%rdx
   1ea55:	41 0f 29 44 24 10    	movaps %xmm0,0x10(%r12)
   1ea5b:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
   1ea62:	00 
   1ea63:	e8 78 48 fe ff       	callq  32e0 <__memcpy_chk@plt>
   1ea68:	48 8d 15 11 7a 00 00 	lea    0x7a11(%rip),%rdx        # 26480 <add_len_test_data>
   1ea6f:	48 83 ec 08          	sub    $0x8,%rsp
   1ea73:	48 8d 05 c6 79 00 00 	lea    0x79c6(%rip),%rax        # 26440 <tag_len_test_data>
   1ea7a:	48 8b 0c da          	mov    (%rdx,%rbx,8),%rcx
   1ea7e:	4c 8b 2c d8          	mov    (%rax,%rbx,8),%r13
   1ea82:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
   1ea86:	4c 89 ff             	mov    %r15,%rdi
   1ea89:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ea8e:	48 8d 15 0b 7a 00 00 	lea    0x7a0b(%rip),%rdx        # 264a0 <iv_len_test_data>
   1ea95:	be 01 00 00 00       	mov    $0x1,%esi
   1ea9a:	4c 8d 0d 3f 7a 00 00 	lea    0x7a3f(%rip),%r9        # 264e0 <ad_test_data>
   1eaa1:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1eaa6:	4c 8b 04 da          	mov    (%rdx,%rbx,8),%r8
   1eaaa:	4c 89 f2             	mov    %r14,%rdx
   1eaad:	41 55                	push   %r13
   1eaaf:	50                   	push   %rax
   1eab0:	41 54                	push   %r12
   1eab2:	55                   	push   %rbp
   1eab3:	51                   	push   %rcx
   1eab4:	48 8d 0d 3d 7a 00 00 	lea    0x7a3d(%rip),%rcx        # 264f8 <iv_test_data>
   1eabb:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   1eac0:	e8 6b fc ff ff       	callq  1e730 <ccm_auth_crypt>
   1eac5:	48 83 c4 30          	add    $0x30,%rsp
   1eac9:	85 c0                	test   %eax,%eax
   1eacb:	0f 85 5f 01 00 00    	jne    1ec30 <mbedtls_ccm_self_test+0x280>
   1ead1:	48 89 de             	mov    %rbx,%rsi
   1ead4:	48 8d 05 05 79 00 00 	lea    0x7905(%rip),%rax        # 263e0 <res_test_data>
   1eadb:	4b 8d 14 2e          	lea    (%r14,%r13,1),%rdx
   1eadf:	4c 89 e7             	mov    %r12,%rdi
   1eae2:	48 c1 e6 05          	shl    $0x5,%rsi
   1eae6:	48 01 c6             	add    %rax,%rsi
   1eae9:	e8 b2 47 fe ff       	callq  32a0 <memcmp@plt>
   1eaee:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1eaf3:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1eaf7:	85 c0                	test   %eax,%eax
   1eaf9:	0f 85 31 01 00 00    	jne    1ec30 <mbedtls_ccm_self_test+0x280>
   1eaff:	48 83 ec 08          	sub    $0x8,%rsp
   1eb03:	0f 29 45 00          	movaps %xmm0,0x0(%rbp)
   1eb07:	4c 89 f2             	mov    %r14,%rdx
   1eb0a:	31 f6                	xor    %esi,%esi
   1eb0c:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
   1eb13:	00 
   1eb14:	4c 8d 0d c5 79 00 00 	lea    0x79c5(%rip),%r9        # 264e0 <ad_test_data>
   1eb1b:	48 8d 0d d6 79 00 00 	lea    0x79d6(%rip),%rcx        # 264f8 <iv_test_data>
   1eb22:	4c 89 ff             	mov    %r15,%rdi
   1eb25:	41 55                	push   %r13
   1eb27:	ff 74 24 20          	pushq  0x20(%rsp)
   1eb2b:	55                   	push   %rbp
   1eb2c:	41 54                	push   %r12
   1eb2e:	ff 74 24 40          	pushq  0x40(%rsp)
   1eb32:	e8 c9 fc ff ff       	callq  1e800 <ccm_auth_decrypt>
   1eb37:	48 83 c4 30          	add    $0x30,%rsp
   1eb3b:	85 c0                	test   %eax,%eax
   1eb3d:	0f 85 ed 00 00 00    	jne    1ec30 <mbedtls_ccm_self_test+0x280>
   1eb43:	4c 89 f2             	mov    %r14,%rdx
   1eb46:	48 8d 35 73 79 00 00 	lea    0x7973(%rip),%rsi        # 264c0 <msg_test_data>
   1eb4d:	48 89 ef             	mov    %rbp,%rdi
   1eb50:	e8 4b 47 fe ff       	callq  32a0 <memcmp@plt>
   1eb55:	41 89 c5             	mov    %eax,%r13d
   1eb58:	85 c0                	test   %eax,%eax
   1eb5a:	0f 85 d0 00 00 00    	jne    1ec30 <mbedtls_ccm_self_test+0x280>
   1eb60:	8b 54 24 04          	mov    0x4(%rsp),%edx
   1eb64:	85 d2                	test   %edx,%edx
   1eb66:	0f 85 84 00 00 00    	jne    1ebf0 <mbedtls_ccm_self_test+0x240>
   1eb6c:	48 83 c3 01          	add    $0x1,%rbx
   1eb70:	48 83 fb 03          	cmp    $0x3,%rbx
   1eb74:	0f 85 a5 fe ff ff    	jne    1ea1f <mbedtls_ccm_self_test+0x6f>
   1eb7a:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1eb7f:	e8 dc 70 fe ff       	callq  5c60 <mbedtls_cipher_free>
   1eb84:	be a8 00 00 00       	mov    $0xa8,%esi
   1eb89:	4c 89 ff             	mov    %r15,%rdi
   1eb8c:	e8 9f 66 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1eb91:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1eb95:	85 c0                	test   %eax,%eax
   1eb97:	0f 85 83 00 00 00    	jne    1ec20 <mbedtls_ccm_self_test+0x270>
   1eb9d:	45 31 ed             	xor    %r13d,%r13d
   1eba0:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   1eba7:	00 
   1eba8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1ebaf:	00 00 
   1ebb1:	0f 85 b7 00 00 00    	jne    1ec6e <mbedtls_ccm_self_test+0x2be>
   1ebb7:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
   1ebbe:	44 89 e8             	mov    %r13d,%eax
   1ebc1:	5b                   	pop    %rbx
   1ebc2:	5d                   	pop    %rbp
   1ebc3:	41 5c                	pop    %r12
   1ebc5:	41 5d                	pop    %r13
   1ebc7:	41 5e                	pop    %r14
   1ebc9:	41 5f                	pop    %r15
   1ebcb:	c3                   	retq   
   1ebcc:	0f 1f 40 00          	nopl   0x0(%rax)
   1ebd0:	8d 53 01             	lea    0x1(%rbx),%edx
   1ebd3:	48 8d 35 ea 77 00 00 	lea    0x77ea(%rip),%rsi        # 263c4 <SIGMA_CHARS+0x44>
   1ebda:	bf 01 00 00 00       	mov    $0x1,%edi
   1ebdf:	31 c0                	xor    %eax,%eax
   1ebe1:	e8 5a 47 fe ff       	callq  3340 <__printf_chk@plt>
   1ebe6:	e9 40 fe ff ff       	jmpq   1ea2b <mbedtls_ccm_self_test+0x7b>
   1ebeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ebf0:	48 8d 3d eb 45 00 00 	lea    0x45eb(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1ebf7:	e8 04 46 fe ff       	callq  3200 <puts@plt>
   1ebfc:	e9 6b ff ff ff       	jmpq   1eb6c <mbedtls_ccm_self_test+0x1bc>
   1ec01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ec08:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   1ec0c:	85 ff                	test   %edi,%edi
   1ec0e:	75 40                	jne    1ec50 <mbedtls_ccm_self_test+0x2a0>
   1ec10:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1ec16:	eb 88                	jmp    1eba0 <mbedtls_ccm_self_test+0x1f0>
   1ec18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ec1f:	00 
   1ec20:	bf 0a 00 00 00       	mov    $0xa,%edi
   1ec25:	e8 c6 45 fe ff       	callq  31f0 <putchar@plt>
   1ec2a:	e9 71 ff ff ff       	jmpq   1eba0 <mbedtls_ccm_self_test+0x1f0>
   1ec2f:	90                   	nop
   1ec30:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   1ec34:	85 c9                	test   %ecx,%ecx
   1ec36:	74 d8                	je     1ec10 <mbedtls_ccm_self_test+0x260>
   1ec38:	48 8d 3d 7e 4e 00 00 	lea    0x4e7e(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   1ec3f:	e8 bc 45 fe ff       	callq  3200 <puts@plt>
   1ec44:	eb ca                	jmp    1ec10 <mbedtls_ccm_self_test+0x260>
   1ec46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ec4d:	00 00 00 
   1ec50:	48 8d 35 59 77 00 00 	lea    0x7759(%rip),%rsi        # 263b0 <SIGMA_CHARS+0x30>
   1ec57:	bf 01 00 00 00       	mov    $0x1,%edi
   1ec5c:	31 c0                	xor    %eax,%eax
   1ec5e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1ec64:	e8 d7 46 fe ff       	callq  3340 <__printf_chk@plt>
   1ec69:	e9 32 ff ff ff       	jmpq   1eba0 <mbedtls_ccm_self_test+0x1f0>
   1ec6e:	e8 ed 45 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1ec73:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ec7a:	00 00 00 
   1ec7d:	0f 1f 00             	nopl   (%rax)

000000000001ec80 <chacha20_block>:
   1ec80:	41 57                	push   %r15
   1ec82:	48 89 f8             	mov    %rdi,%rax
   1ec85:	41 56                	push   %r14
   1ec87:	41 55                	push   %r13
   1ec89:	41 54                	push   %r12
   1ec8b:	55                   	push   %rbp
   1ec8c:	53                   	push   %rbx
   1ec8d:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1ec94:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   1ec98:	f3 0f 6f 57 10       	movdqu 0x10(%rdi),%xmm2
   1ec9d:	f3 0f 6f 67 20       	movdqu 0x20(%rdi),%xmm4
   1eca2:	f3 0f 6f 70 30       	movdqu 0x30(%rax),%xmm6
   1eca7:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   1ecac:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1ecb1:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
   1ecb8:	00 00 
   1ecba:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   1ecbf:	31 c9                	xor    %ecx,%ecx
   1ecc1:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1ecc6:	8b 54 24 38          	mov    0x38(%rsp),%edx
   1ecca:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
   1eccf:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1ecd3:	44 8b 34 24          	mov    (%rsp),%r14d
   1ecd7:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   1ecdc:	8b 5c 24 44          	mov    0x44(%rsp),%ebx
   1ece0:	0f 29 14 24          	movaps %xmm2,(%rsp)
   1ece4:	8b 34 24             	mov    (%rsp),%esi
   1ece7:	0f 29 64 24 50       	movaps %xmm4,0x50(%rsp)
   1ecec:	44 8b 44 24 54       	mov    0x54(%rsp),%r8d
   1ecf1:	0f 29 24 24          	movaps %xmm4,(%rsp)
   1ecf5:	8b 3c 24             	mov    (%rsp),%edi
   1ecf8:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1ecfd:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
   1ed01:	0f 29 34 24          	movaps %xmm6,(%rsp)
   1ed05:	8b 04 24             	mov    (%rsp),%eax
   1ed08:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1ed0c:	44 8b 4c 24 5c       	mov    0x5c(%rsp),%r9d
   1ed11:	48 c7 44 24 18 0a 00 	movq   $0xa,0x18(%rsp)
   1ed18:	00 00 
   1ed1a:	44 8b 64 24 48       	mov    0x48(%rsp),%r12d
   1ed1f:	8b 54 24 68          	mov    0x68(%rsp),%edx
   1ed23:	44 8b 6c 24 58       	mov    0x58(%rsp),%r13d
   1ed28:	44 89 0c 24          	mov    %r9d,(%rsp)
   1ed2c:	8b 6c 24 3c          	mov    0x3c(%rsp),%ebp
   1ed30:	44 8b 5c 24 4c       	mov    0x4c(%rsp),%r11d
   1ed35:	44 8b 7c 24 6c       	mov    0x6c(%rsp),%r15d
   1ed3a:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   1ed3f:	90                   	nop
   1ed40:	41 01 f6             	add    %esi,%r14d
   1ed43:	41 01 da             	add    %ebx,%r10d
   1ed46:	45 01 e1             	add    %r12d,%r9d
   1ed49:	44 31 f0             	xor    %r14d,%eax
   1ed4c:	44 31 d1             	xor    %r10d,%ecx
   1ed4f:	44 31 ca             	xor    %r9d,%edx
   1ed52:	c1 c0 10             	rol    $0x10,%eax
   1ed55:	c1 c1 10             	rol    $0x10,%ecx
   1ed58:	01 c7                	add    %eax,%edi
   1ed5a:	41 01 c8             	add    %ecx,%r8d
   1ed5d:	c1 c2 10             	rol    $0x10,%edx
   1ed60:	31 fe                	xor    %edi,%esi
   1ed62:	44 31 c3             	xor    %r8d,%ebx
   1ed65:	41 01 d5             	add    %edx,%r13d
   1ed68:	c1 c6 0c             	rol    $0xc,%esi
   1ed6b:	c1 c3 0c             	rol    $0xc,%ebx
   1ed6e:	45 31 ec             	xor    %r13d,%r12d
   1ed71:	41 01 f6             	add    %esi,%r14d
   1ed74:	41 01 da             	add    %ebx,%r10d
   1ed77:	41 c1 c4 0c          	rol    $0xc,%r12d
   1ed7b:	44 31 f0             	xor    %r14d,%eax
   1ed7e:	44 31 d1             	xor    %r10d,%ecx
   1ed81:	45 01 e1             	add    %r12d,%r9d
   1ed84:	c1 c0 08             	rol    $0x8,%eax
   1ed87:	c1 c1 08             	rol    $0x8,%ecx
   1ed8a:	44 31 ca             	xor    %r9d,%edx
   1ed8d:	01 c7                	add    %eax,%edi
   1ed8f:	41 01 c8             	add    %ecx,%r8d
   1ed92:	31 fe                	xor    %edi,%esi
   1ed94:	44 31 c3             	xor    %r8d,%ebx
   1ed97:	89 7c 24 10          	mov    %edi,0x10(%rsp)
   1ed9b:	c1 c6 07             	rol    $0x7,%esi
   1ed9e:	c1 c3 07             	rol    $0x7,%ebx
   1eda1:	c1 c2 08             	rol    $0x8,%edx
   1eda4:	44 01 dd             	add    %r11d,%ebp
   1eda7:	89 74 24 14          	mov    %esi,0x14(%rsp)
   1edab:	41 01 de             	add    %ebx,%r14d
   1edae:	41 31 ef             	xor    %ebp,%r15d
   1edb1:	41 01 d5             	add    %edx,%r13d
   1edb4:	44 89 fe             	mov    %r15d,%esi
   1edb7:	44 8b 3c 24          	mov    (%rsp),%r15d
   1edbb:	45 31 ec             	xor    %r13d,%r12d
   1edbe:	c1 c6 10             	rol    $0x10,%esi
   1edc1:	41 c1 c4 07          	rol    $0x7,%r12d
   1edc5:	41 01 f7             	add    %esi,%r15d
   1edc8:	45 01 e2             	add    %r12d,%r10d
   1edcb:	45 31 fb             	xor    %r15d,%r11d
   1edce:	44 89 ff             	mov    %r15d,%edi
   1edd1:	44 31 d0             	xor    %r10d,%eax
   1edd4:	41 c1 c3 0c          	rol    $0xc,%r11d
   1edd8:	c1 c0 10             	rol    $0x10,%eax
   1eddb:	44 01 dd             	add    %r11d,%ebp
   1edde:	31 ee                	xor    %ebp,%esi
   1ede0:	c1 c6 08             	rol    $0x8,%esi
   1ede3:	01 f7                	add    %esi,%edi
   1ede5:	44 31 f6             	xor    %r14d,%esi
   1ede8:	c1 c6 10             	rol    $0x10,%esi
   1edeb:	41 31 fb             	xor    %edi,%r11d
   1edee:	01 c7                	add    %eax,%edi
   1edf0:	41 01 f5             	add    %esi,%r13d
   1edf3:	41 c1 c3 07          	rol    $0x7,%r11d
   1edf7:	44 31 eb             	xor    %r13d,%ebx
   1edfa:	c1 c3 0c             	rol    $0xc,%ebx
   1edfd:	41 01 de             	add    %ebx,%r14d
   1ee00:	44 31 f6             	xor    %r14d,%esi
   1ee03:	41 89 f7             	mov    %esi,%r15d
   1ee06:	41 c1 c7 08          	rol    $0x8,%r15d
   1ee0a:	45 01 fd             	add    %r15d,%r13d
   1ee0d:	44 31 eb             	xor    %r13d,%ebx
   1ee10:	c1 c3 07             	rol    $0x7,%ebx
   1ee13:	41 31 fc             	xor    %edi,%r12d
   1ee16:	45 01 d9             	add    %r11d,%r9d
   1ee19:	41 c1 c4 0c          	rol    $0xc,%r12d
   1ee1d:	44 31 c9             	xor    %r9d,%ecx
   1ee20:	45 01 e2             	add    %r12d,%r10d
   1ee23:	c1 c1 10             	rol    $0x10,%ecx
   1ee26:	44 31 d0             	xor    %r10d,%eax
   1ee29:	c1 c0 08             	rol    $0x8,%eax
   1ee2c:	8d 34 07             	lea    (%rdi,%rax,1),%esi
   1ee2f:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   1ee33:	41 31 f4             	xor    %esi,%r12d
   1ee36:	89 34 24             	mov    %esi,(%rsp)
   1ee39:	8b 74 24 14          	mov    0x14(%rsp),%esi
   1ee3d:	01 cf                	add    %ecx,%edi
   1ee3f:	41 c1 c4 07          	rol    $0x7,%r12d
   1ee43:	01 f5                	add    %esi,%ebp
   1ee45:	41 31 fb             	xor    %edi,%r11d
   1ee48:	31 ea                	xor    %ebp,%edx
   1ee4a:	41 c1 c3 0c          	rol    $0xc,%r11d
   1ee4e:	c1 c2 10             	rol    $0x10,%edx
   1ee51:	45 01 d9             	add    %r11d,%r9d
   1ee54:	41 01 d0             	add    %edx,%r8d
   1ee57:	44 31 c9             	xor    %r9d,%ecx
   1ee5a:	44 31 c6             	xor    %r8d,%esi
   1ee5d:	c1 c1 08             	rol    $0x8,%ecx
   1ee60:	c1 c6 0c             	rol    $0xc,%esi
   1ee63:	01 cf                	add    %ecx,%edi
   1ee65:	01 f5                	add    %esi,%ebp
   1ee67:	41 31 fb             	xor    %edi,%r11d
   1ee6a:	31 ea                	xor    %ebp,%edx
   1ee6c:	41 c1 c3 07          	rol    $0x7,%r11d
   1ee70:	c1 c2 08             	rol    $0x8,%edx
   1ee73:	41 01 d0             	add    %edx,%r8d
   1ee76:	44 31 c6             	xor    %r8d,%esi
   1ee79:	c1 c6 07             	rol    $0x7,%esi
   1ee7c:	48 83 6c 24 18 01    	subq   $0x1,0x18(%rsp)
   1ee82:	0f 85 b8 fe ff ff    	jne    1ed40 <chacha20_block+0xc0>
   1ee88:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   1ee8d:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1ee92:	45 03 51 04          	add    0x4(%r9),%r10d
   1ee96:	45 03 31             	add    (%r9),%r14d
   1ee99:	44 89 54 24 34       	mov    %r10d,0x34(%rsp)
   1ee9e:	4d 89 ca             	mov    %r9,%r10
   1eea1:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   1eea6:	45 03 62 18          	add    0x18(%r10),%r12d
   1eeaa:	41 03 7a 20          	add    0x20(%r10),%edi
   1eeae:	44 89 74 24 30       	mov    %r14d,0x30(%rsp)
   1eeb3:	41 03 42 30          	add    0x30(%r10),%eax
   1eeb7:	45 03 4a 08          	add    0x8(%r10),%r9d
   1eebb:	44 89 64 24 48       	mov    %r12d,0x48(%rsp)
   1eec0:	41 03 6a 0c          	add    0xc(%r10),%ebp
   1eec4:	44 8b 24 24          	mov    (%rsp),%r12d
   1eec8:	89 7c 24 50          	mov    %edi,0x50(%rsp)
   1eecc:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   1eed1:	41 03 72 10          	add    0x10(%r10),%esi
   1eed5:	41 03 5a 14          	add    0x14(%r10),%ebx
   1eed9:	89 44 24 60          	mov    %eax,0x60(%rsp)
   1eedd:	45 03 5a 1c          	add    0x1c(%r10),%r11d
   1eee1:	45 03 42 24          	add    0x24(%r10),%r8d
   1eee5:	44 89 4c 24 38       	mov    %r9d,0x38(%rsp)
   1eeea:	45 03 6a 28          	add    0x28(%r10),%r13d
   1eeee:	45 03 62 2c          	add    0x2c(%r10),%r12d
   1eef2:	89 6c 24 3c          	mov    %ebp,0x3c(%rsp)
   1eef6:	41 03 4a 34          	add    0x34(%r10),%ecx
   1eefa:	89 74 24 40          	mov    %esi,0x40(%rsp)
   1eefe:	89 5c 24 44          	mov    %ebx,0x44(%rsp)
   1ef02:	44 89 5c 24 4c       	mov    %r11d,0x4c(%rsp)
   1ef07:	44 89 44 24 54       	mov    %r8d,0x54(%rsp)
   1ef0c:	44 89 6c 24 58       	mov    %r13d,0x58(%rsp)
   1ef11:	44 89 64 24 5c       	mov    %r12d,0x5c(%rsp)
   1ef16:	89 4c 24 64          	mov    %ecx,0x64(%rsp)
   1ef1a:	41 03 52 38          	add    0x38(%r10),%edx
   1ef1e:	45 03 7a 3c          	add    0x3c(%r10),%r15d
   1ef22:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1ef27:	89 54 24 68          	mov    %edx,0x68(%rsp)
   1ef2b:	44 89 7c 24 6c       	mov    %r15d,0x6c(%rsp)
   1ef30:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1ef35:	eb 0d                	jmp    1ef44 <chacha20_block+0x2c4>
   1ef37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ef3e:	00 00 
   1ef40:	44 8b 34 87          	mov    (%rdi,%rax,4),%r14d
   1ef44:	44 89 34 82          	mov    %r14d,(%rdx,%rax,4)
   1ef48:	48 83 c0 01          	add    $0x1,%rax
   1ef4c:	48 83 f8 10          	cmp    $0x10,%rax
   1ef50:	75 ee                	jne    1ef40 <chacha20_block+0x2c0>
   1ef52:	be 40 00 00 00       	mov    $0x40,%esi
   1ef57:	e8 d4 62 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1ef5c:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1ef61:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1ef68:	00 00 
   1ef6a:	75 12                	jne    1ef7e <chacha20_block+0x2fe>
   1ef6c:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1ef73:	5b                   	pop    %rbx
   1ef74:	5d                   	pop    %rbp
   1ef75:	41 5c                	pop    %r12
   1ef77:	41 5d                	pop    %r13
   1ef79:	41 5e                	pop    %r14
   1ef7b:	41 5f                	pop    %r15
   1ef7d:	c3                   	retq   
   1ef7e:	e8 dd 42 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1ef83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ef8a:	00 00 00 00 
   1ef8e:	66 90                	xchg   %ax,%ax

000000000001ef90 <mbedtls_chacha20_init>:
   1ef90:	f3 0f 1e fa          	endbr64 
   1ef94:	53                   	push   %rbx
   1ef95:	be 40 00 00 00       	mov    $0x40,%esi
   1ef9a:	48 89 fb             	mov    %rdi,%rbx
   1ef9d:	e8 8e 62 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1efa2:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   1efa6:	be 40 00 00 00       	mov    $0x40,%esi
   1efab:	e8 80 62 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1efb0:	48 c7 83 80 00 00 00 	movq   $0x40,0x80(%rbx)
   1efb7:	40 00 00 00 
   1efbb:	5b                   	pop    %rbx
   1efbc:	c3                   	retq   
   1efbd:	0f 1f 00             	nopl   (%rax)

000000000001efc0 <mbedtls_chacha20_free>:
   1efc0:	f3 0f 1e fa          	endbr64 
   1efc4:	48 85 ff             	test   %rdi,%rdi
   1efc7:	74 0f                	je     1efd8 <mbedtls_chacha20_free+0x18>
   1efc9:	be 88 00 00 00       	mov    $0x88,%esi
   1efce:	e9 5d 62 fe ff       	jmpq   5230 <mbedtls_platform_zeroize>
   1efd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1efd8:	c3                   	retq   
   1efd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001efe0 <mbedtls_chacha20_setkey>:
   1efe0:	f3 0f 1e fa          	endbr64 
   1efe4:	48 b8 65 78 70 61 6e 	movabs $0x3320646e61707865,%rax
   1efeb:	64 20 33 
   1efee:	48 89 07             	mov    %rax,(%rdi)
   1eff1:	48 b8 32 2d 62 79 74 	movabs $0x6b20657479622d32,%rax
   1eff8:	65 20 6b 
   1effb:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1efff:	8b 06                	mov    (%rsi),%eax
   1f001:	89 47 10             	mov    %eax,0x10(%rdi)
   1f004:	8b 46 04             	mov    0x4(%rsi),%eax
   1f007:	89 47 14             	mov    %eax,0x14(%rdi)
   1f00a:	8b 46 08             	mov    0x8(%rsi),%eax
   1f00d:	89 47 18             	mov    %eax,0x18(%rdi)
   1f010:	8b 46 0c             	mov    0xc(%rsi),%eax
   1f013:	89 47 1c             	mov    %eax,0x1c(%rdi)
   1f016:	8b 46 10             	mov    0x10(%rsi),%eax
   1f019:	89 47 20             	mov    %eax,0x20(%rdi)
   1f01c:	8b 46 14             	mov    0x14(%rsi),%eax
   1f01f:	89 47 24             	mov    %eax,0x24(%rdi)
   1f022:	8b 46 18             	mov    0x18(%rsi),%eax
   1f025:	89 47 28             	mov    %eax,0x28(%rdi)
   1f028:	8b 46 1c             	mov    0x1c(%rsi),%eax
   1f02b:	89 47 2c             	mov    %eax,0x2c(%rdi)
   1f02e:	31 c0                	xor    %eax,%eax
   1f030:	c3                   	retq   
   1f031:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1f038:	00 00 00 00 
   1f03c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f040 <mbedtls_chacha20_starts>:
   1f040:	f3 0f 1e fa          	endbr64 
   1f044:	53                   	push   %rbx
   1f045:	48 89 fb             	mov    %rdi,%rbx
   1f048:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1f04c:	89 57 f0             	mov    %edx,-0x10(%rdi)
   1f04f:	8b 06                	mov    (%rsi),%eax
   1f051:	89 47 f4             	mov    %eax,-0xc(%rdi)
   1f054:	8b 46 04             	mov    0x4(%rsi),%eax
   1f057:	89 47 f8             	mov    %eax,-0x8(%rdi)
   1f05a:	8b 46 08             	mov    0x8(%rsi),%eax
   1f05d:	be 40 00 00 00       	mov    $0x40,%esi
   1f062:	89 47 fc             	mov    %eax,-0x4(%rdi)
   1f065:	e8 c6 61 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1f06a:	31 c0                	xor    %eax,%eax
   1f06c:	48 c7 83 80 00 00 00 	movq   $0x40,0x80(%rbx)
   1f073:	40 00 00 00 
   1f077:	5b                   	pop    %rbx
   1f078:	c3                   	retq   
   1f079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f080 <mbedtls_chacha20_update>:
   1f080:	f3 0f 1e fa          	endbr64 
   1f084:	41 57                	push   %r15
   1f086:	41 56                	push   %r14
   1f088:	41 55                	push   %r13
   1f08a:	41 54                	push   %r12
   1f08c:	55                   	push   %rbp
   1f08d:	53                   	push   %rbx
   1f08e:	48 83 ec 28          	sub    $0x28,%rsp
   1f092:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1f097:	48 85 f6             	test   %rsi,%rsi
   1f09a:	0f 84 40 01 00 00    	je     1f1e0 <mbedtls_chacha20_update+0x160>
   1f0a0:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   1f0a7:	48 89 fb             	mov    %rdi,%rbx
   1f0aa:	49 89 d6             	mov    %rdx,%r14
   1f0ad:	45 31 ed             	xor    %r13d,%r13d
   1f0b0:	eb 38                	jmp    1f0ea <mbedtls_chacha20_update+0x6a>
   1f0b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f0b8:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1f0bd:	43 0f b6 3c 2e       	movzbl (%r14,%r13,1),%edi
   1f0c2:	40 32 7c 03 40       	xor    0x40(%rbx,%rax,1),%dil
   1f0c7:	42 88 3c 2a          	mov    %dil,(%rdx,%r13,1)
   1f0cb:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
   1f0d2:	49 83 c5 01          	add    $0x1,%r13
   1f0d6:	48 83 c0 01          	add    $0x1,%rax
   1f0da:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
   1f0e1:	4c 39 ee             	cmp    %r13,%rsi
   1f0e4:	0f 84 f6 00 00 00    	je     1f1e0 <mbedtls_chacha20_update+0x160>
   1f0ea:	48 89 f5             	mov    %rsi,%rbp
   1f0ed:	4c 29 ed             	sub    %r13,%rbp
   1f0f0:	48 83 f8 3f          	cmp    $0x3f,%rax
   1f0f4:	76 c2                	jbe    1f0b8 <mbedtls_chacha20_update+0x38>
   1f0f6:	48 83 fd 3f          	cmp    $0x3f,%rbp
   1f0fa:	76 7b                	jbe    1f177 <mbedtls_chacha20_update+0xf7>
   1f0fc:	49 8d 04 36          	lea    (%r14,%rsi,1),%rax
   1f100:	4c 8d 7b 40          	lea    0x40(%rbx),%r15
   1f104:	49 89 ec             	mov    %rbp,%r12
   1f107:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f10c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1f111:	48 01 f0             	add    %rsi,%rax
   1f114:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f120:	48 89 df             	mov    %rbx,%rdi
   1f123:	4c 89 fe             	mov    %r15,%rsi
   1f126:	e8 55 fb ff ff       	callq  1ec80 <chacha20_block>
   1f12b:	83 43 30 01          	addl   $0x1,0x30(%rbx)
   1f12f:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1f134:	31 c0                	xor    %eax,%eax
   1f136:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1f13b:	4d 29 e1             	sub    %r12,%r9
   1f13e:	4c 29 e7             	sub    %r12,%rdi
   1f141:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f148:	41 8b 34 01          	mov    (%r9,%rax,1),%esi
   1f14c:	33 74 03 40          	xor    0x40(%rbx,%rax,1),%esi
   1f150:	89 34 07             	mov    %esi,(%rdi,%rax,1)
   1f153:	48 83 c0 04          	add    $0x4,%rax
   1f157:	48 83 f8 40          	cmp    $0x40,%rax
   1f15b:	75 eb                	jne    1f148 <mbedtls_chacha20_update+0xc8>
   1f15d:	49 83 ec 40          	sub    $0x40,%r12
   1f161:	49 83 fc 3f          	cmp    $0x3f,%r12
   1f165:	77 b9                	ja     1f120 <mbedtls_chacha20_update+0xa0>
   1f167:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1f16b:	83 e5 3f             	and    $0x3f,%ebp
   1f16e:	48 83 e0 c0          	and    $0xffffffffffffffc0,%rax
   1f172:	4d 8d 6c 05 40       	lea    0x40(%r13,%rax,1),%r13
   1f177:	48 85 ed             	test   %rbp,%rbp
   1f17a:	74 64                	je     1f1e0 <mbedtls_chacha20_update+0x160>
   1f17c:	48 8d 73 40          	lea    0x40(%rbx),%rsi
   1f180:	48 89 df             	mov    %rbx,%rdi
   1f183:	e8 f8 fa ff ff       	callq  1ec80 <chacha20_block>
   1f188:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1f18d:	83 43 30 01          	addl   $0x1,0x30(%rbx)
   1f191:	4b 8d 14 2e          	lea    (%r14,%r13,1),%rdx
   1f195:	4c 01 e9             	add    %r13,%rcx
   1f198:	48 83 fd 03          	cmp    $0x3,%rbp
   1f19c:	76 53                	jbe    1f1f1 <mbedtls_chacha20_update+0x171>
   1f19e:	b8 04 00 00 00       	mov    $0x4,%eax
   1f1a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f1a8:	8b 74 02 fc          	mov    -0x4(%rdx,%rax,1),%esi
   1f1ac:	33 74 03 3c          	xor    0x3c(%rbx,%rax,1),%esi
   1f1b0:	89 74 01 fc          	mov    %esi,-0x4(%rcx,%rax,1)
   1f1b4:	48 89 c6             	mov    %rax,%rsi
   1f1b7:	48 8d 40 04          	lea    0x4(%rax),%rax
   1f1bb:	48 39 c5             	cmp    %rax,%rbp
   1f1be:	73 e8                	jae    1f1a8 <mbedtls_chacha20_update+0x128>
   1f1c0:	48 39 ee             	cmp    %rbp,%rsi
   1f1c3:	73 14                	jae    1f1d9 <mbedtls_chacha20_update+0x159>
   1f1c5:	0f b6 04 32          	movzbl (%rdx,%rsi,1),%eax
   1f1c9:	32 44 33 40          	xor    0x40(%rbx,%rsi,1),%al
   1f1cd:	88 04 31             	mov    %al,(%rcx,%rsi,1)
   1f1d0:	48 83 c6 01          	add    $0x1,%rsi
   1f1d4:	48 39 ee             	cmp    %rbp,%rsi
   1f1d7:	75 ec                	jne    1f1c5 <mbedtls_chacha20_update+0x145>
   1f1d9:	48 89 ab 80 00 00 00 	mov    %rbp,0x80(%rbx)
   1f1e0:	48 83 c4 28          	add    $0x28,%rsp
   1f1e4:	31 c0                	xor    %eax,%eax
   1f1e6:	5b                   	pop    %rbx
   1f1e7:	5d                   	pop    %rbp
   1f1e8:	41 5c                	pop    %r12
   1f1ea:	41 5d                	pop    %r13
   1f1ec:	41 5e                	pop    %r14
   1f1ee:	41 5f                	pop    %r15
   1f1f0:	c3                   	retq   
   1f1f1:	31 f6                	xor    %esi,%esi
   1f1f3:	eb d0                	jmp    1f1c5 <mbedtls_chacha20_update+0x145>
   1f1f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1f1fc:	00 00 00 00 

000000000001f200 <mbedtls_chacha20_crypt>:
   1f200:	f3 0f 1e fa          	endbr64 
   1f204:	41 57                	push   %r15
   1f206:	4d 89 cf             	mov    %r9,%r15
   1f209:	41 56                	push   %r14
   1f20b:	4d 89 c6             	mov    %r8,%r14
   1f20e:	41 55                	push   %r13
   1f210:	49 89 cd             	mov    %rcx,%r13
   1f213:	41 54                	push   %r12
   1f215:	55                   	push   %rbp
   1f216:	48 89 f5             	mov    %rsi,%rbp
   1f219:	53                   	push   %rbx
   1f21a:	48 89 fb             	mov    %rdi,%rbx
   1f21d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1f224:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   1f228:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   1f22d:	4c 89 e7             	mov    %r12,%rdi
   1f230:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f237:	00 00 
   1f239:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1f240:	00 
   1f241:	31 c0                	xor    %eax,%eax
   1f243:	e8 48 fd ff ff       	callq  1ef90 <mbedtls_chacha20_init>
   1f248:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   1f24c:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1f251:	48 b8 65 78 70 61 6e 	movabs $0x3320646e61707865,%rax
   1f258:	64 20 33 
   1f25b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f260:	be 40 00 00 00       	mov    $0x40,%esi
   1f265:	48 b8 32 2d 62 79 74 	movabs $0x6b20657479622d32,%rax
   1f26c:	65 20 6b 
   1f26f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f274:	48 8b 03             	mov    (%rbx),%rax
   1f277:	89 54 24 40          	mov    %edx,0x40(%rsp)
   1f27b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1f280:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1f284:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1f289:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1f28d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1f292:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f296:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f29b:	8b 45 00             	mov    0x0(%rbp),%eax
   1f29e:	89 44 24 44          	mov    %eax,0x44(%rsp)
   1f2a2:	48 8b 45 04          	mov    0x4(%rbp),%rax
   1f2a6:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1f2ab:	e8 80 5f fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1f2b0:	4c 89 ee             	mov    %r13,%rsi
   1f2b3:	4c 89 f9             	mov    %r15,%rcx
   1f2b6:	4c 89 f2             	mov    %r14,%rdx
   1f2b9:	48 c7 84 24 90 00 00 	movq   $0x40,0x90(%rsp)
   1f2c0:	00 40 00 00 00 
   1f2c5:	4c 89 e7             	mov    %r12,%rdi
   1f2c8:	e8 b3 fd ff ff       	callq  1f080 <mbedtls_chacha20_update>
   1f2cd:	be 88 00 00 00       	mov    $0x88,%esi
   1f2d2:	4c 89 e7             	mov    %r12,%rdi
   1f2d5:	41 89 c5             	mov    %eax,%r13d
   1f2d8:	e8 53 5f fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1f2dd:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   1f2e4:	00 
   1f2e5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1f2ec:	00 00 
   1f2ee:	75 15                	jne    1f305 <mbedtls_chacha20_crypt+0x105>
   1f2f0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1f2f7:	44 89 e8             	mov    %r13d,%eax
   1f2fa:	5b                   	pop    %rbx
   1f2fb:	5d                   	pop    %rbp
   1f2fc:	41 5c                	pop    %r12
   1f2fe:	41 5d                	pop    %r13
   1f300:	41 5e                	pop    %r14
   1f302:	41 5f                	pop    %r15
   1f304:	c3                   	retq   
   1f305:	e8 56 3f fe ff       	callq  3260 <__stack_chk_fail@plt>
   1f30a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001f310 <mbedtls_chacha20_self_test>:
   1f310:	f3 0f 1e fa          	endbr64 
   1f314:	41 54                	push   %r12
   1f316:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
   1f31d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f324:	00 00 
   1f326:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1f32d:	00 
   1f32e:	31 c0                	xor    %eax,%eax
   1f330:	85 ff                	test   %edi,%edi
   1f332:	0f 85 30 01 00 00    	jne    1f468 <mbedtls_chacha20_self_test+0x158>
   1f338:	49 89 e4             	mov    %rsp,%r12
   1f33b:	31 d2                	xor    %edx,%edx
   1f33d:	4c 8d 05 1c 75 00 00 	lea    0x751c(%rip),%r8        # 26860 <test_input>
   1f344:	b9 40 00 00 00       	mov    $0x40,%ecx
   1f349:	4d 89 e1             	mov    %r12,%r9
   1f34c:	48 8d 35 fd 77 00 00 	lea    0x77fd(%rip),%rsi        # 26b50 <test_nonces>
   1f353:	48 8d 3d 26 78 00 00 	lea    0x7826(%rip),%rdi        # 26b80 <test_keys>
   1f35a:	e8 a1 fe ff ff       	callq  1f200 <mbedtls_chacha20_crypt>
   1f35f:	85 c0                	test   %eax,%eax
   1f361:	75 1c                	jne    1f37f <mbedtls_chacha20_self_test+0x6f>
   1f363:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1f368:	48 8b 04 24          	mov    (%rsp),%rax
   1f36c:	48 33 15 f5 71 00 00 	xor    0x71f5(%rip),%rdx        # 26568 <test_output+0x8>
   1f373:	48 33 05 e6 71 00 00 	xor    0x71e6(%rip),%rax        # 26560 <test_output>
   1f37a:	48 09 c2             	or     %rax,%rdx
   1f37d:	74 31                	je     1f3b0 <mbedtls_chacha20_self_test+0xa0>
   1f37f:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1f385:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   1f38c:	00 
   1f38d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1f394:	00 00 
   1f396:	0f 85 47 02 00 00    	jne    1f5e3 <mbedtls_chacha20_self_test+0x2d3>
   1f39c:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
   1f3a3:	44 89 e0             	mov    %r12d,%eax
   1f3a6:	41 5c                	pop    %r12
   1f3a8:	c3                   	retq   
   1f3a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f3b0:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1f3b5:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
   1f3ba:	48 33 05 af 71 00 00 	xor    0x71af(%rip),%rax        # 26570 <test_output+0x10>
   1f3c1:	48 33 15 b0 71 00 00 	xor    0x71b0(%rip),%rdx        # 26578 <test_output+0x18>
   1f3c8:	48 09 c2             	or     %rax,%rdx
   1f3cb:	75 b2                	jne    1f37f <mbedtls_chacha20_self_test+0x6f>
   1f3cd:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   1f3d2:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
   1f3d7:	48 33 05 a2 71 00 00 	xor    0x71a2(%rip),%rax        # 26580 <test_output+0x20>
   1f3de:	48 33 15 a3 71 00 00 	xor    0x71a3(%rip),%rdx        # 26588 <test_output+0x28>
   1f3e5:	48 09 c2             	or     %rax,%rdx
   1f3e8:	75 95                	jne    1f37f <mbedtls_chacha20_self_test+0x6f>
   1f3ea:	49 8b 44 24 30       	mov    0x30(%r12),%rax
   1f3ef:	49 8b 54 24 38       	mov    0x38(%r12),%rdx
   1f3f4:	48 33 05 95 71 00 00 	xor    0x7195(%rip),%rax        # 26590 <test_output+0x30>
   1f3fb:	48 33 15 96 71 00 00 	xor    0x7196(%rip),%rdx        # 26598 <test_output+0x38>
   1f402:	48 09 c2             	or     %rax,%rdx
   1f405:	0f 85 74 ff ff ff    	jne    1f37f <mbedtls_chacha20_self_test+0x6f>
   1f40b:	4d 89 e1             	mov    %r12,%r9
   1f40e:	b9 77 01 00 00       	mov    $0x177,%ecx
   1f413:	4c 8d 05 bd 75 00 00 	lea    0x75bd(%rip),%r8        # 269d7 <test_input+0x177>
   1f41a:	ba 01 00 00 00       	mov    $0x1,%edx
   1f41f:	48 8d 35 36 77 00 00 	lea    0x7736(%rip),%rsi        # 26b5c <test_nonces+0xc>
   1f426:	48 8d 3d 73 77 00 00 	lea    0x7773(%rip),%rdi        # 26ba0 <test_keys+0x20>
   1f42d:	e8 ce fd ff ff       	callq  1f200 <mbedtls_chacha20_crypt>
   1f432:	85 c0                	test   %eax,%eax
   1f434:	0f 85 45 ff ff ff    	jne    1f37f <mbedtls_chacha20_self_test+0x6f>
   1f43a:	4c 89 e7             	mov    %r12,%rdi
   1f43d:	ba 77 01 00 00       	mov    $0x177,%edx
   1f442:	48 8d 35 8e 72 00 00 	lea    0x728e(%rip),%rsi        # 266d7 <test_output+0x177>
   1f449:	e8 52 3e fe ff       	callq  32a0 <memcmp@plt>
   1f44e:	41 89 c4             	mov    %eax,%r12d
   1f451:	85 c0                	test   %eax,%eax
   1f453:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f458:	44 0f 45 e0          	cmovne %eax,%r12d
   1f45c:	e9 24 ff ff ff       	jmpq   1f385 <mbedtls_chacha20_self_test+0x75>
   1f461:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f468:	31 d2                	xor    %edx,%edx
   1f46a:	48 8d 35 af 70 00 00 	lea    0x70af(%rip),%rsi        # 26520 <key_test_data+0x10>
   1f471:	bf 01 00 00 00       	mov    $0x1,%edi
   1f476:	49 89 e4             	mov    %rsp,%r12
   1f479:	e8 c2 3e fe ff       	callq  3340 <__printf_chk@plt>
   1f47e:	31 d2                	xor    %edx,%edx
   1f480:	4d 89 e1             	mov    %r12,%r9
   1f483:	b9 40 00 00 00       	mov    $0x40,%ecx
   1f488:	4c 8d 05 d1 73 00 00 	lea    0x73d1(%rip),%r8        # 26860 <test_input>
   1f48f:	48 8d 35 ba 76 00 00 	lea    0x76ba(%rip),%rsi        # 26b50 <test_nonces>
   1f496:	48 8d 3d e3 76 00 00 	lea    0x76e3(%rip),%rdi        # 26b80 <test_keys>
   1f49d:	e8 5e fd ff ff       	callq  1f200 <mbedtls_chacha20_crypt>
   1f4a2:	85 c0                	test   %eax,%eax
   1f4a4:	0f 85 19 01 00 00    	jne    1f5c3 <mbedtls_chacha20_self_test+0x2b3>
   1f4aa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1f4af:	48 8b 04 24          	mov    (%rsp),%rax
   1f4b3:	48 33 15 ae 70 00 00 	xor    0x70ae(%rip),%rdx        # 26568 <test_output+0x8>
   1f4ba:	48 33 05 9f 70 00 00 	xor    0x709f(%rip),%rax        # 26560 <test_output>
   1f4c1:	48 09 c2             	or     %rax,%rdx
   1f4c4:	75 1d                	jne    1f4e3 <mbedtls_chacha20_self_test+0x1d3>
   1f4c6:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1f4cb:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
   1f4d0:	48 33 05 99 70 00 00 	xor    0x7099(%rip),%rax        # 26570 <test_output+0x10>
   1f4d7:	48 33 15 9a 70 00 00 	xor    0x709a(%rip),%rdx        # 26578 <test_output+0x18>
   1f4de:	48 09 c2             	or     %rax,%rdx
   1f4e1:	74 1d                	je     1f500 <mbedtls_chacha20_self_test+0x1f0>
   1f4e3:	48 8d 3d 4a 70 00 00 	lea    0x704a(%rip),%rdi        # 26534 <key_test_data+0x24>
   1f4ea:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1f4f0:	e8 0b 3d fe ff       	callq  3200 <puts@plt>
   1f4f5:	e9 8b fe ff ff       	jmpq   1f385 <mbedtls_chacha20_self_test+0x75>
   1f4fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f500:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   1f505:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
   1f50a:	48 33 05 6f 70 00 00 	xor    0x706f(%rip),%rax        # 26580 <test_output+0x20>
   1f511:	48 33 15 70 70 00 00 	xor    0x7070(%rip),%rdx        # 26588 <test_output+0x28>
   1f518:	48 09 c2             	or     %rax,%rdx
   1f51b:	75 c6                	jne    1f4e3 <mbedtls_chacha20_self_test+0x1d3>
   1f51d:	49 8b 44 24 30       	mov    0x30(%r12),%rax
   1f522:	49 8b 54 24 38       	mov    0x38(%r12),%rdx
   1f527:	48 33 05 62 70 00 00 	xor    0x7062(%rip),%rax        # 26590 <test_output+0x30>
   1f52e:	48 33 15 63 70 00 00 	xor    0x7063(%rip),%rdx        # 26598 <test_output+0x38>
   1f535:	48 09 c2             	or     %rax,%rdx
   1f538:	75 a9                	jne    1f4e3 <mbedtls_chacha20_self_test+0x1d3>
   1f53a:	48 8d 3d a1 3c 00 00 	lea    0x3ca1(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1f541:	e8 ba 3c fe ff       	callq  3200 <puts@plt>
   1f546:	ba 01 00 00 00       	mov    $0x1,%edx
   1f54b:	48 8d 35 ce 6f 00 00 	lea    0x6fce(%rip),%rsi        # 26520 <key_test_data+0x10>
   1f552:	31 c0                	xor    %eax,%eax
   1f554:	bf 01 00 00 00       	mov    $0x1,%edi
   1f559:	e8 e2 3d fe ff       	callq  3340 <__printf_chk@plt>
   1f55e:	4d 89 e1             	mov    %r12,%r9
   1f561:	b9 77 01 00 00       	mov    $0x177,%ecx
   1f566:	4c 8d 05 6a 74 00 00 	lea    0x746a(%rip),%r8        # 269d7 <test_input+0x177>
   1f56d:	ba 01 00 00 00       	mov    $0x1,%edx
   1f572:	48 8d 35 e3 75 00 00 	lea    0x75e3(%rip),%rsi        # 26b5c <test_nonces+0xc>
   1f579:	48 8d 3d 20 76 00 00 	lea    0x7620(%rip),%rdi        # 26ba0 <test_keys+0x20>
   1f580:	e8 7b fc ff ff       	callq  1f200 <mbedtls_chacha20_crypt>
   1f585:	85 c0                	test   %eax,%eax
   1f587:	75 3a                	jne    1f5c3 <mbedtls_chacha20_self_test+0x2b3>
   1f589:	4c 89 e7             	mov    %r12,%rdi
   1f58c:	ba 77 01 00 00       	mov    $0x177,%edx
   1f591:	48 8d 35 3f 71 00 00 	lea    0x713f(%rip),%rsi        # 266d7 <test_output+0x177>
   1f598:	e8 03 3d fe ff       	callq  32a0 <memcmp@plt>
   1f59d:	41 89 c4             	mov    %eax,%r12d
   1f5a0:	85 c0                	test   %eax,%eax
   1f5a2:	0f 85 3b ff ff ff    	jne    1f4e3 <mbedtls_chacha20_self_test+0x1d3>
   1f5a8:	48 8d 3d 33 3c 00 00 	lea    0x3c33(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1f5af:	e8 4c 3c fe ff       	callq  3200 <puts@plt>
   1f5b4:	bf 0a 00 00 00       	mov    $0xa,%edi
   1f5b9:	e8 32 3c fe ff       	callq  31f0 <putchar@plt>
   1f5be:	e9 c2 fd ff ff       	jmpq   1f385 <mbedtls_chacha20_self_test+0x75>
   1f5c3:	89 c2                	mov    %eax,%edx
   1f5c5:	48 8d 35 1a 76 00 00 	lea    0x761a(%rip),%rsi        # 26be6 <test_keys+0x66>
   1f5cc:	31 c0                	xor    %eax,%eax
   1f5ce:	bf 01 00 00 00       	mov    $0x1,%edi
   1f5d3:	e8 68 3d fe ff       	callq  3340 <__printf_chk@plt>
   1f5d8:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1f5de:	e9 a2 fd ff ff       	jmpq   1f385 <mbedtls_chacha20_self_test+0x75>
   1f5e3:	e8 78 3c fe ff       	callq  3260 <__stack_chk_fail@plt>
   1f5e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f5ef:	00 

000000000001f5f0 <chachapoly_pad_aad>:
   1f5f0:	48 83 ec 28          	sub    $0x28,%rsp
   1f5f4:	8b 8f d8 00 00 00    	mov    0xd8(%rdi),%ecx
   1f5fa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f601:	00 00 
   1f603:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f608:	31 c0                	xor    %eax,%eax
   1f60a:	83 e1 0f             	and    $0xf,%ecx
   1f60d:	74 35                	je     1f644 <chachapoly_pad_aad+0x54>
   1f60f:	ba 10 00 00 00       	mov    $0x10,%edx
   1f614:	31 c0                	xor    %eax,%eax
   1f616:	48 8d 74 24 09       	lea    0x9(%rsp),%rsi
   1f61b:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
   1f622:	29 ca                	sub    %ecx,%edx
   1f624:	c7 44 24 11 00 00 00 	movl   $0x0,0x11(%rsp)
   1f62b:	00 
   1f62c:	48 c7 44 24 09 00 00 	movq   $0x0,0x9(%rsp)
   1f633:	00 00 
   1f635:	66 89 44 24 15       	mov    %ax,0x15(%rsp)
   1f63a:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
   1f63f:	e8 8c 0b 00 00       	callq  201d0 <mbedtls_poly1305_update>
   1f644:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1f649:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1f650:	00 00 
   1f652:	75 05                	jne    1f659 <chachapoly_pad_aad+0x69>
   1f654:	48 83 c4 28          	add    $0x28,%rsp
   1f658:	c3                   	retq   
   1f659:	e8 02 3c fe ff       	callq  3260 <__stack_chk_fail@plt>
   1f65e:	66 90                	xchg   %ax,%ax

000000000001f660 <mbedtls_chachapoly_init>:
   1f660:	f3 0f 1e fa          	endbr64 
   1f664:	53                   	push   %rbx
   1f665:	48 89 fb             	mov    %rdi,%rbx
   1f668:	e8 23 f9 ff ff       	callq  1ef90 <mbedtls_chacha20_init>
   1f66d:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
   1f674:	e8 a7 0a 00 00       	callq  20120 <mbedtls_poly1305_init>
   1f679:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1f680:	00 00 00 00 
   1f684:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   1f68b:	00 00 00 00 
   1f68f:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
   1f696:	00 00 00 00 
   1f69a:	5b                   	pop    %rbx
   1f69b:	c3                   	retq   
   1f69c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f6a0 <mbedtls_chachapoly_free>:
   1f6a0:	f3 0f 1e fa          	endbr64 
   1f6a4:	48 85 ff             	test   %rdi,%rdi
   1f6a7:	74 3f                	je     1f6e8 <mbedtls_chachapoly_free+0x48>
   1f6a9:	53                   	push   %rbx
   1f6aa:	48 89 fb             	mov    %rdi,%rbx
   1f6ad:	e8 0e f9 ff ff       	callq  1efc0 <mbedtls_chacha20_free>
   1f6b2:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
   1f6b9:	e8 72 0a 00 00       	callq  20130 <mbedtls_poly1305_free>
   1f6be:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1f6c5:	00 00 00 00 
   1f6c9:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   1f6d0:	00 00 00 00 
   1f6d4:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
   1f6db:	00 00 00 00 
   1f6df:	5b                   	pop    %rbx
   1f6e0:	c3                   	retq   
   1f6e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f6e8:	c3                   	retq   
   1f6e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f6f0 <mbedtls_chachapoly_setkey>:
   1f6f0:	f3 0f 1e fa          	endbr64 
   1f6f4:	e9 e7 f8 ff ff       	jmpq   1efe0 <mbedtls_chacha20_setkey>
   1f6f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f700 <mbedtls_chachapoly_starts>:
   1f700:	f3 0f 1e fa          	endbr64 
   1f704:	41 55                	push   %r13
   1f706:	41 54                	push   %r12
   1f708:	55                   	push   %rbp
   1f709:	89 d5                	mov    %edx,%ebp
   1f70b:	31 d2                	xor    %edx,%edx
   1f70d:	53                   	push   %rbx
   1f70e:	48 89 fb             	mov    %rdi,%rbx
   1f711:	48 83 ec 58          	sub    $0x58,%rsp
   1f715:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f71c:	00 00 
   1f71e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1f723:	31 c0                	xor    %eax,%eax
   1f725:	49 89 e5             	mov    %rsp,%r13
   1f728:	e8 13 f9 ff ff       	callq  1f040 <mbedtls_chacha20_starts>
   1f72d:	41 89 c4             	mov    %eax,%r12d
   1f730:	85 c0                	test   %eax,%eax
   1f732:	74 34                	je     1f768 <mbedtls_chachapoly_starts+0x68>
   1f734:	be 40 00 00 00       	mov    $0x40,%esi
   1f739:	4c 89 ef             	mov    %r13,%rdi
   1f73c:	e8 ef 5a fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1f741:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1f746:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1f74d:	00 00 
   1f74f:	0f 85 85 00 00 00    	jne    1f7da <mbedtls_chachapoly_starts+0xda>
   1f755:	48 83 c4 58          	add    $0x58,%rsp
   1f759:	44 89 e0             	mov    %r12d,%eax
   1f75c:	5b                   	pop    %rbx
   1f75d:	5d                   	pop    %rbp
   1f75e:	41 5c                	pop    %r12
   1f760:	41 5d                	pop    %r13
   1f762:	c3                   	retq   
   1f763:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f768:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f76c:	4c 89 e9             	mov    %r13,%rcx
   1f76f:	4c 89 ea             	mov    %r13,%rdx
   1f772:	be 40 00 00 00       	mov    $0x40,%esi
   1f777:	48 89 df             	mov    %rbx,%rdi
   1f77a:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1f77e:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1f783:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1f788:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1f78d:	e8 ee f8 ff ff       	callq  1f080 <mbedtls_chacha20_update>
   1f792:	41 89 c4             	mov    %eax,%r12d
   1f795:	85 c0                	test   %eax,%eax
   1f797:	75 9b                	jne    1f734 <mbedtls_chachapoly_starts+0x34>
   1f799:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
   1f7a0:	4c 89 ee             	mov    %r13,%rsi
   1f7a3:	e8 a8 09 00 00       	callq  20150 <mbedtls_poly1305_starts>
   1f7a8:	41 89 c4             	mov    %eax,%r12d
   1f7ab:	85 c0                	test   %eax,%eax
   1f7ad:	75 85                	jne    1f734 <mbedtls_chachapoly_starts+0x34>
   1f7af:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1f7b6:	00 00 00 00 
   1f7ba:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   1f7c1:	00 00 00 00 
   1f7c5:	c7 83 e8 00 00 00 01 	movl   $0x1,0xe8(%rbx)
   1f7cc:	00 00 00 
   1f7cf:	89 ab ec 00 00 00    	mov    %ebp,0xec(%rbx)
   1f7d5:	e9 5a ff ff ff       	jmpq   1f734 <mbedtls_chachapoly_starts+0x34>
   1f7da:	e8 81 3a fe ff       	callq  3260 <__stack_chk_fail@plt>
   1f7df:	90                   	nop

000000000001f7e0 <mbedtls_chachapoly_update_aad>:
   1f7e0:	f3 0f 1e fa          	endbr64 
   1f7e4:	83 bf e8 00 00 00 01 	cmpl   $0x1,0xe8(%rdi)
   1f7eb:	75 13                	jne    1f800 <mbedtls_chachapoly_update_aad+0x20>
   1f7ed:	48 01 97 d8 00 00 00 	add    %rdx,0xd8(%rdi)
   1f7f4:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
   1f7fb:	e9 d0 09 00 00       	jmpq   201d0 <mbedtls_poly1305_update>
   1f800:	b8 ac ff ff ff       	mov    $0xffffffac,%eax
   1f805:	c3                   	retq   
   1f806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f80d:	00 00 00 

000000000001f810 <mbedtls_chachapoly_update>:
   1f810:	f3 0f 1e fa          	endbr64 
   1f814:	41 56                	push   %r14
   1f816:	41 55                	push   %r13
   1f818:	49 89 d5             	mov    %rdx,%r13
   1f81b:	41 54                	push   %r12
   1f81d:	55                   	push   %rbp
   1f81e:	48 83 ec 08          	sub    $0x8,%rsp
   1f822:	8b 87 e8 00 00 00    	mov    0xe8(%rdi),%eax
   1f828:	8d 50 ff             	lea    -0x1(%rax),%edx
   1f82b:	83 fa 01             	cmp    $0x1,%edx
   1f82e:	0f 87 94 00 00 00    	ja     1f8c8 <mbedtls_chachapoly_update+0xb8>
   1f834:	48 89 fd             	mov    %rdi,%rbp
   1f837:	49 89 f4             	mov    %rsi,%r12
   1f83a:	49 89 ce             	mov    %rcx,%r14
   1f83d:	83 f8 01             	cmp    $0x1,%eax
   1f840:	0f 84 9a 00 00 00    	je     1f8e0 <mbedtls_chachapoly_update+0xd0>
   1f846:	8b 85 ec 00 00 00    	mov    0xec(%rbp),%eax
   1f84c:	4c 01 a5 e0 00 00 00 	add    %r12,0xe0(%rbp)
   1f853:	85 c0                	test   %eax,%eax
   1f855:	75 39                	jne    1f890 <mbedtls_chachapoly_update+0x80>
   1f857:	4c 89 f1             	mov    %r14,%rcx
   1f85a:	4c 89 ea             	mov    %r13,%rdx
   1f85d:	4c 89 e6             	mov    %r12,%rsi
   1f860:	48 89 ef             	mov    %rbp,%rdi
   1f863:	e8 18 f8 ff ff       	callq  1f080 <mbedtls_chacha20_update>
   1f868:	85 c0                	test   %eax,%eax
   1f86a:	75 61                	jne    1f8cd <mbedtls_chachapoly_update+0xbd>
   1f86c:	48 83 c4 08          	add    $0x8,%rsp
   1f870:	48 8d bd 88 00 00 00 	lea    0x88(%rbp),%rdi
   1f877:	4c 89 e2             	mov    %r12,%rdx
   1f87a:	4c 89 f6             	mov    %r14,%rsi
   1f87d:	5d                   	pop    %rbp
   1f87e:	41 5c                	pop    %r12
   1f880:	41 5d                	pop    %r13
   1f882:	41 5e                	pop    %r14
   1f884:	e9 47 09 00 00       	jmpq   201d0 <mbedtls_poly1305_update>
   1f889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f890:	48 8d bd 88 00 00 00 	lea    0x88(%rbp),%rdi
   1f897:	4c 89 e2             	mov    %r12,%rdx
   1f89a:	4c 89 ee             	mov    %r13,%rsi
   1f89d:	e8 2e 09 00 00       	callq  201d0 <mbedtls_poly1305_update>
   1f8a2:	85 c0                	test   %eax,%eax
   1f8a4:	75 27                	jne    1f8cd <mbedtls_chachapoly_update+0xbd>
   1f8a6:	48 83 c4 08          	add    $0x8,%rsp
   1f8aa:	4c 89 f1             	mov    %r14,%rcx
   1f8ad:	4c 89 ea             	mov    %r13,%rdx
   1f8b0:	4c 89 e6             	mov    %r12,%rsi
   1f8b3:	48 89 ef             	mov    %rbp,%rdi
   1f8b6:	5d                   	pop    %rbp
   1f8b7:	41 5c                	pop    %r12
   1f8b9:	41 5d                	pop    %r13
   1f8bb:	41 5e                	pop    %r14
   1f8bd:	e9 be f7 ff ff       	jmpq   1f080 <mbedtls_chacha20_update>
   1f8c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f8c8:	b8 ac ff ff ff       	mov    $0xffffffac,%eax
   1f8cd:	48 83 c4 08          	add    $0x8,%rsp
   1f8d1:	5d                   	pop    %rbp
   1f8d2:	41 5c                	pop    %r12
   1f8d4:	41 5d                	pop    %r13
   1f8d6:	41 5e                	pop    %r14
   1f8d8:	c3                   	retq   
   1f8d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f8e0:	c7 87 e8 00 00 00 02 	movl   $0x2,0xe8(%rdi)
   1f8e7:	00 00 00 
   1f8ea:	e8 01 fd ff ff       	callq  1f5f0 <chachapoly_pad_aad>
   1f8ef:	85 c0                	test   %eax,%eax
   1f8f1:	0f 84 4f ff ff ff    	je     1f846 <mbedtls_chachapoly_update+0x36>
   1f8f7:	eb d4                	jmp    1f8cd <mbedtls_chachapoly_update+0xbd>
   1f8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f900 <mbedtls_chachapoly_finish>:
   1f900:	f3 0f 1e fa          	endbr64 
   1f904:	41 54                	push   %r12
   1f906:	55                   	push   %rbp
   1f907:	53                   	push   %rbx
   1f908:	48 83 ec 30          	sub    $0x30,%rsp
   1f90c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f913:	00 00 
   1f915:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1f91a:	31 c0                	xor    %eax,%eax
   1f91c:	8b 87 e8 00 00 00    	mov    0xe8(%rdi),%eax
   1f922:	85 c0                	test   %eax,%eax
   1f924:	0f 84 fe 00 00 00    	je     1fa28 <mbedtls_chachapoly_finish+0x128>
   1f92a:	48 89 fb             	mov    %rdi,%rbx
   1f92d:	48 89 f5             	mov    %rsi,%rbp
   1f930:	83 f8 01             	cmp    $0x1,%eax
   1f933:	74 7b                	je     1f9b0 <mbedtls_chachapoly_finish+0xb0>
   1f935:	48 8b 97 e0 00 00 00 	mov    0xe0(%rdi),%rdx
   1f93c:	4c 8d a7 88 00 00 00 	lea    0x88(%rdi),%r12
   1f943:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1f948:	83 f8 02             	cmp    $0x2,%eax
   1f94b:	0f 84 7f 00 00 00    	je     1f9d0 <mbedtls_chachapoly_finish+0xd0>
   1f951:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
   1f958:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1f95d:	4c 89 e7             	mov    %r12,%rdi
   1f960:	ba 10 00 00 00       	mov    $0x10,%edx
   1f965:	c7 83 e8 00 00 00 03 	movl   $0x3,0xe8(%rbx)
   1f96c:	00 00 00 
   1f96f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f974:	e8 57 08 00 00       	callq  201d0 <mbedtls_poly1305_update>
   1f979:	85 c0                	test   %eax,%eax
   1f97b:	74 23                	je     1f9a0 <mbedtls_chachapoly_finish+0xa0>
   1f97d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1f982:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1f989:	00 00 
   1f98b:	0f 85 a1 00 00 00    	jne    1fa32 <mbedtls_chachapoly_finish+0x132>
   1f991:	48 83 c4 30          	add    $0x30,%rsp
   1f995:	5b                   	pop    %rbx
   1f996:	5d                   	pop    %rbp
   1f997:	41 5c                	pop    %r12
   1f999:	c3                   	retq   
   1f99a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f9a0:	48 89 ee             	mov    %rbp,%rsi
   1f9a3:	4c 89 e7             	mov    %r12,%rdi
   1f9a6:	e8 a5 09 00 00       	callq  20350 <mbedtls_poly1305_finish>
   1f9ab:	eb d0                	jmp    1f97d <mbedtls_chachapoly_finish+0x7d>
   1f9ad:	0f 1f 00             	nopl   (%rax)
   1f9b0:	e8 3b fc ff ff       	callq  1f5f0 <chachapoly_pad_aad>
   1f9b5:	85 c0                	test   %eax,%eax
   1f9b7:	75 c4                	jne    1f97d <mbedtls_chachapoly_finish+0x7d>
   1f9b9:	48 8b 93 e0 00 00 00 	mov    0xe0(%rbx),%rdx
   1f9c0:	4c 8d a3 88 00 00 00 	lea    0x88(%rbx),%r12
   1f9c7:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1f9cc:	eb 83                	jmp    1f951 <mbedtls_chachapoly_finish+0x51>
   1f9ce:	66 90                	xchg   %ax,%ax
   1f9d0:	89 d0                	mov    %edx,%eax
   1f9d2:	83 e0 0f             	and    $0xf,%eax
   1f9d5:	0f 84 76 ff ff ff    	je     1f951 <mbedtls_chachapoly_finish+0x51>
   1f9db:	31 d2                	xor    %edx,%edx
   1f9dd:	4c 89 e7             	mov    %r12,%rdi
   1f9e0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1f9e5:	66 89 54 24 1c       	mov    %dx,0x1c(%rsp)
   1f9ea:	ba 10 00 00 00       	mov    $0x10,%edx
   1f9ef:	29 c2                	sub    %eax,%edx
   1f9f1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
   1f9f8:	00 
   1f9f9:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1fa00:	00 00 
   1fa02:	c6 44 24 1e 00       	movb   $0x0,0x1e(%rsp)
   1fa07:	e8 c4 07 00 00       	callq  201d0 <mbedtls_poly1305_update>
   1fa0c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1fa11:	85 c0                	test   %eax,%eax
   1fa13:	0f 85 64 ff ff ff    	jne    1f97d <mbedtls_chachapoly_finish+0x7d>
   1fa19:	48 8b 93 e0 00 00 00 	mov    0xe0(%rbx),%rdx
   1fa20:	e9 2c ff ff ff       	jmpq   1f951 <mbedtls_chachapoly_finish+0x51>
   1fa25:	0f 1f 00             	nopl   (%rax)
   1fa28:	b8 ac ff ff ff       	mov    $0xffffffac,%eax
   1fa2d:	e9 4b ff ff ff       	jmpq   1f97d <mbedtls_chachapoly_finish+0x7d>
   1fa32:	e8 29 38 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1fa37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1fa3e:	00 00 

000000000001fa40 <chachapoly_crypt_and_tag>:
   1fa40:	41 57                	push   %r15
   1fa42:	41 89 f2             	mov    %esi,%r10d
   1fa45:	48 89 ce             	mov    %rcx,%rsi
   1fa48:	49 89 ff             	mov    %rdi,%r15
   1fa4b:	41 56                	push   %r14
   1fa4d:	4d 89 c6             	mov    %r8,%r14
   1fa50:	41 55                	push   %r13
   1fa52:	41 54                	push   %r12
   1fa54:	55                   	push   %rbp
   1fa55:	48 89 d5             	mov    %rdx,%rbp
   1fa58:	44 89 d2             	mov    %r10d,%edx
   1fa5b:	53                   	push   %rbx
   1fa5c:	4c 89 cb             	mov    %r9,%rbx
   1fa5f:	48 83 ec 18          	sub    $0x18,%rsp
   1fa63:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1fa68:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1fa6d:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
   1fa72:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1fa77:	e8 84 fc ff ff       	callq  1f700 <mbedtls_chachapoly_starts>
   1fa7c:	85 c0                	test   %eax,%eax
   1fa7e:	75 27                	jne    1faa7 <chachapoly_crypt_and_tag+0x67>
   1fa80:	41 83 bf e8 00 00 00 	cmpl   $0x1,0xe8(%r15)
   1fa87:	01 
   1fa88:	75 66                	jne    1faf0 <chachapoly_crypt_and_tag+0xb0>
   1fa8a:	49 01 9f d8 00 00 00 	add    %rbx,0xd8(%r15)
   1fa91:	49 8d bf 88 00 00 00 	lea    0x88(%r15),%rdi
   1fa98:	48 89 da             	mov    %rbx,%rdx
   1fa9b:	4c 89 f6             	mov    %r14,%rsi
   1fa9e:	e8 2d 07 00 00       	callq  201d0 <mbedtls_poly1305_update>
   1faa3:	85 c0                	test   %eax,%eax
   1faa5:	74 19                	je     1fac0 <chachapoly_crypt_and_tag+0x80>
   1faa7:	48 83 c4 18          	add    $0x18,%rsp
   1faab:	5b                   	pop    %rbx
   1faac:	5d                   	pop    %rbp
   1faad:	41 5c                	pop    %r12
   1faaf:	41 5d                	pop    %r13
   1fab1:	41 5e                	pop    %r14
   1fab3:	41 5f                	pop    %r15
   1fab5:	c3                   	retq   
   1fab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fabd:	00 00 00 
   1fac0:	4c 89 e9             	mov    %r13,%rcx
   1fac3:	4c 89 e2             	mov    %r12,%rdx
   1fac6:	48 89 ee             	mov    %rbp,%rsi
   1fac9:	4c 89 ff             	mov    %r15,%rdi
   1facc:	e8 3f fd ff ff       	callq  1f810 <mbedtls_chachapoly_update>
   1fad1:	85 c0                	test   %eax,%eax
   1fad3:	75 d2                	jne    1faa7 <chachapoly_crypt_and_tag+0x67>
   1fad5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1fada:	48 83 c4 18          	add    $0x18,%rsp
   1fade:	4c 89 ff             	mov    %r15,%rdi
   1fae1:	5b                   	pop    %rbx
   1fae2:	5d                   	pop    %rbp
   1fae3:	41 5c                	pop    %r12
   1fae5:	41 5d                	pop    %r13
   1fae7:	41 5e                	pop    %r14
   1fae9:	41 5f                	pop    %r15
   1faeb:	e9 10 fe ff ff       	jmpq   1f900 <mbedtls_chachapoly_finish>
   1faf0:	f3 0f 1e fa          	endbr64 
   1faf4:	b8 ac ff ff ff       	mov    $0xffffffac,%eax
   1faf9:	eb ac                	jmp    1faa7 <chachapoly_crypt_and_tag+0x67>
   1fafb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001fb00 <mbedtls_chachapoly_encrypt_and_tag>:
   1fb00:	f3 0f 1e fa          	endbr64 
   1fb04:	48 83 ec 10          	sub    $0x10,%rsp
   1fb08:	ff 74 24 20          	pushq  0x20(%rsp)
   1fb0c:	ff 74 24 20          	pushq  0x20(%rsp)
   1fb10:	41 51                	push   %r9
   1fb12:	4d 89 c1             	mov    %r8,%r9
   1fb15:	49 89 c8             	mov    %rcx,%r8
   1fb18:	48 89 d1             	mov    %rdx,%rcx
   1fb1b:	48 89 f2             	mov    %rsi,%rdx
   1fb1e:	31 f6                	xor    %esi,%esi
   1fb20:	e8 1b ff ff ff       	callq  1fa40 <chachapoly_crypt_and_tag>
   1fb25:	48 83 c4 28          	add    $0x28,%rsp
   1fb29:	c3                   	retq   
   1fb2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001fb30 <mbedtls_chachapoly_auth_decrypt>:
   1fb30:	f3 0f 1e fa          	endbr64 
   1fb34:	41 55                	push   %r13
   1fb36:	41 54                	push   %r12
   1fb38:	49 89 f4             	mov    %rsi,%r12
   1fb3b:	55                   	push   %rbp
   1fb3c:	53                   	push   %rbx
   1fb3d:	4c 89 cb             	mov    %r9,%rbx
   1fb40:	4d 89 c1             	mov    %r8,%r9
   1fb43:	49 89 c8             	mov    %rcx,%r8
   1fb46:	48 89 d1             	mov    %rdx,%rcx
   1fb49:	48 89 f2             	mov    %rsi,%rdx
   1fb4c:	be 01 00 00 00       	mov    $0x1,%esi
   1fb51:	48 83 ec 30          	sub    $0x30,%rsp
   1fb55:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fb5c:	00 00 
   1fb5e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1fb63:	31 c0                	xor    %eax,%eax
   1fb65:	4c 8b 6c 24 60       	mov    0x60(%rsp),%r13
   1fb6a:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   1fb6f:	55                   	push   %rbp
   1fb70:	41 55                	push   %r13
   1fb72:	ff 74 24 68          	pushq  0x68(%rsp)
   1fb76:	e8 c5 fe ff ff       	callq  1fa40 <chachapoly_crypt_and_tag>
   1fb7b:	48 83 c4 20          	add    $0x20,%rsp
   1fb7f:	85 c0                	test   %eax,%eax
   1fb81:	75 20                	jne    1fba3 <mbedtls_chachapoly_auth_decrypt+0x73>
   1fb83:	31 c9                	xor    %ecx,%ecx
   1fb85:	0f 1f 00             	nopl   (%rax)
   1fb88:	0f b6 14 0b          	movzbl (%rbx,%rcx,1),%edx
   1fb8c:	32 54 0d 00          	xor    0x0(%rbp,%rcx,1),%dl
   1fb90:	48 83 c1 01          	add    $0x1,%rcx
   1fb94:	0f b6 d2             	movzbl %dl,%edx
   1fb97:	09 d0                	or     %edx,%eax
   1fb99:	48 83 f9 10          	cmp    $0x10,%rcx
   1fb9d:	75 e9                	jne    1fb88 <mbedtls_chachapoly_auth_decrypt+0x58>
   1fb9f:	85 c0                	test   %eax,%eax
   1fba1:	75 1b                	jne    1fbbe <mbedtls_chachapoly_auth_decrypt+0x8e>
   1fba3:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1fba8:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1fbaf:	00 00 
   1fbb1:	75 1d                	jne    1fbd0 <mbedtls_chachapoly_auth_decrypt+0xa0>
   1fbb3:	48 83 c4 28          	add    $0x28,%rsp
   1fbb7:	5b                   	pop    %rbx
   1fbb8:	5d                   	pop    %rbp
   1fbb9:	41 5c                	pop    %r12
   1fbbb:	41 5d                	pop    %r13
   1fbbd:	c3                   	retq   
   1fbbe:	4c 89 e6             	mov    %r12,%rsi
   1fbc1:	4c 89 ef             	mov    %r13,%rdi
   1fbc4:	e8 67 56 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   1fbc9:	b8 aa ff ff ff       	mov    $0xffffffaa,%eax
   1fbce:	eb d3                	jmp    1fba3 <mbedtls_chachapoly_auth_decrypt+0x73>
   1fbd0:	e8 8b 36 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1fbd5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fbdc:	00 00 00 00 

000000000001fbe0 <mbedtls_chachapoly_self_test>:
   1fbe0:	f3 0f 1e fa          	endbr64 
   1fbe4:	41 55                	push   %r13
   1fbe6:	41 54                	push   %r12
   1fbe8:	55                   	push   %rbp
   1fbe9:	53                   	push   %rbx
   1fbea:	89 fb                	mov    %edi,%ebx
   1fbec:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
   1fbf3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fbfa:	00 00 
   1fbfc:	48 89 84 24 c8 01 00 	mov    %rax,0x1c8(%rsp)
   1fc03:	00 
   1fc04:	31 c0                	xor    %eax,%eax
   1fc06:	85 ff                	test   %edi,%edi
   1fc08:	0f 85 02 01 00 00    	jne    1fd10 <mbedtls_chachapoly_self_test+0x130>
   1fc0e:	49 89 e4             	mov    %rsp,%r12
   1fc11:	48 8d ac 24 88 00 00 	lea    0x88(%rsp),%rbp
   1fc18:	00 
   1fc19:	4c 89 e7             	mov    %r12,%rdi
   1fc1c:	e8 6f f3 ff ff       	callq  1ef90 <mbedtls_chacha20_init>
   1fc21:	48 89 ef             	mov    %rbp,%rdi
   1fc24:	e8 f7 04 00 00       	callq  20120 <mbedtls_poly1305_init>
   1fc29:	48 8d 35 70 71 00 00 	lea    0x7170(%rip),%rsi        # 26da0 <test_key>
   1fc30:	4c 89 e7             	mov    %r12,%rdi
   1fc33:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1fc3a:	00 00 00 00 00 
   1fc3f:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1fc46:	00 00 00 00 00 
   1fc4b:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1fc52:	00 00 00 00 00 
   1fc57:	e8 84 f3 ff ff       	callq  1efe0 <mbedtls_chacha20_setkey>
   1fc5c:	85 c0                	test   %eax,%eax
   1fc5e:	75 70                	jne    1fcd0 <mbedtls_chachapoly_self_test+0xf0>
   1fc60:	48 83 ec 08          	sub    $0x8,%rsp
   1fc64:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
   1fc6a:	31 f6                	xor    %esi,%esi
   1fc6c:	4c 89 e7             	mov    %r12,%rdi
   1fc6f:	48 8d 84 24 f8 00 00 	lea    0xf8(%rsp),%rax
   1fc76:	00 
   1fc77:	4c 8d 05 fa 70 00 00 	lea    0x70fa(%rip),%r8        # 26d78 <test_aad>
   1fc7e:	ba 72 00 00 00       	mov    $0x72,%edx
   1fc83:	50                   	push   %rax
   1fc84:	48 8d 05 75 70 00 00 	lea    0x7075(%rip),%rax        # 26d00 <test_input>
   1fc8b:	48 8d 0d f6 70 00 00 	lea    0x70f6(%rip),%rcx        # 26d88 <test_nonce>
   1fc92:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
   1fc99:	00 
   1fc9a:	41 55                	push   %r13
   1fc9c:	50                   	push   %rax
   1fc9d:	e8 9e fd ff ff       	callq  1fa40 <chachapoly_crypt_and_tag>
   1fca2:	48 83 c4 20          	add    $0x20,%rsp
   1fca6:	85 c0                	test   %eax,%eax
   1fca8:	75 26                	jne    1fcd0 <mbedtls_chachapoly_self_test+0xf0>
   1fcaa:	ba 72 00 00 00       	mov    $0x72,%edx
   1fcaf:	48 8d 35 ca 6f 00 00 	lea    0x6fca(%rip),%rsi        # 26c80 <test_output>
   1fcb6:	4c 89 ef             	mov    %r13,%rdi
   1fcb9:	e8 e2 35 fe ff       	callq  32a0 <memcmp@plt>
   1fcbe:	85 c0                	test   %eax,%eax
   1fcc0:	0f 84 1d 01 00 00    	je     1fde3 <mbedtls_chachapoly_self_test+0x203>
   1fcc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fccd:	00 00 00 
   1fcd0:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1fcd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fcdd:	00 00 00 
   1fce0:	48 8b 84 24 c8 01 00 	mov    0x1c8(%rsp),%rax
   1fce7:	00 
   1fce8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1fcef:	00 00 
   1fcf1:	0f 85 d9 01 00 00    	jne    1fed0 <mbedtls_chachapoly_self_test+0x2f0>
   1fcf7:	48 81 c4 d8 01 00 00 	add    $0x1d8,%rsp
   1fcfe:	44 89 e8             	mov    %r13d,%eax
   1fd01:	5b                   	pop    %rbx
   1fd02:	5d                   	pop    %rbp
   1fd03:	41 5c                	pop    %r12
   1fd05:	41 5d                	pop    %r13
   1fd07:	c3                   	retq   
   1fd08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1fd0f:	00 
   1fd10:	31 d2                	xor    %edx,%edx
   1fd12:	48 8d 35 a7 6e 00 00 	lea    0x6ea7(%rip),%rsi        # 26bc0 <test_keys+0x40>
   1fd19:	bf 01 00 00 00       	mov    $0x1,%edi
   1fd1e:	49 89 e4             	mov    %rsp,%r12
   1fd21:	e8 1a 36 fe ff       	callq  3340 <__printf_chk@plt>
   1fd26:	48 8d ac 24 88 00 00 	lea    0x88(%rsp),%rbp
   1fd2d:	00 
   1fd2e:	4c 89 e7             	mov    %r12,%rdi
   1fd31:	e8 5a f2 ff ff       	callq  1ef90 <mbedtls_chacha20_init>
   1fd36:	48 89 ef             	mov    %rbp,%rdi
   1fd39:	e8 e2 03 00 00       	callq  20120 <mbedtls_poly1305_init>
   1fd3e:	48 8d 35 5b 70 00 00 	lea    0x705b(%rip),%rsi        # 26da0 <test_key>
   1fd45:	4c 89 e7             	mov    %r12,%rdi
   1fd48:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1fd4f:	00 00 00 00 00 
   1fd54:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1fd5b:	00 00 00 00 00 
   1fd60:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1fd67:	00 00 00 00 00 
   1fd6c:	e8 6f f2 ff ff       	callq  1efe0 <mbedtls_chacha20_setkey>
   1fd71:	85 c0                	test   %eax,%eax
   1fd73:	0f 85 06 01 00 00    	jne    1fe7f <mbedtls_chachapoly_self_test+0x29f>
   1fd79:	48 83 ec 08          	sub    $0x8,%rsp
   1fd7d:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
   1fd83:	31 f6                	xor    %esi,%esi
   1fd85:	4c 89 e7             	mov    %r12,%rdi
   1fd88:	48 8d 84 24 f8 00 00 	lea    0xf8(%rsp),%rax
   1fd8f:	00 
   1fd90:	4c 8d 05 e1 6f 00 00 	lea    0x6fe1(%rip),%r8        # 26d78 <test_aad>
   1fd97:	ba 72 00 00 00       	mov    $0x72,%edx
   1fd9c:	50                   	push   %rax
   1fd9d:	48 8d 05 5c 6f 00 00 	lea    0x6f5c(%rip),%rax        # 26d00 <test_input>
   1fda4:	48 8d 0d dd 6f 00 00 	lea    0x6fdd(%rip),%rcx        # 26d88 <test_nonce>
   1fdab:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
   1fdb2:	00 
   1fdb3:	41 55                	push   %r13
   1fdb5:	50                   	push   %rax
   1fdb6:	e8 85 fc ff ff       	callq  1fa40 <chachapoly_crypt_and_tag>
   1fdbb:	48 83 c4 20          	add    $0x20,%rsp
   1fdbf:	85 c0                	test   %eax,%eax
   1fdc1:	0f 85 d8 00 00 00    	jne    1fe9f <mbedtls_chachapoly_self_test+0x2bf>
   1fdc7:	ba 72 00 00 00       	mov    $0x72,%edx
   1fdcc:	48 8d 35 ad 6e 00 00 	lea    0x6ead(%rip),%rsi        # 26c80 <test_output>
   1fdd3:	4c 89 ef             	mov    %r13,%rdi
   1fdd6:	e8 c5 34 fe ff       	callq  32a0 <memcmp@plt>
   1fddb:	85 c0                	test   %eax,%eax
   1fddd:	0f 85 dc 00 00 00    	jne    1febf <mbedtls_chachapoly_self_test+0x2df>
   1fde3:	48 8b 94 24 f8 00 00 	mov    0xf8(%rsp),%rdx
   1fdea:	00 
   1fdeb:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   1fdf2:	00 
   1fdf3:	48 33 15 6e 6e 00 00 	xor    0x6e6e(%rip),%rdx        # 26c68 <test_mac+0x8>
   1fdfa:	48 33 05 5f 6e 00 00 	xor    0x6e5f(%rip),%rax        # 26c60 <test_mac>
   1fe01:	48 09 c2             	or     %rax,%rdx
   1fe04:	75 5a                	jne    1fe60 <mbedtls_chachapoly_self_test+0x280>
   1fe06:	4c 89 e7             	mov    %r12,%rdi
   1fe09:	45 31 ed             	xor    %r13d,%r13d
   1fe0c:	e8 af f1 ff ff       	callq  1efc0 <mbedtls_chacha20_free>
   1fe11:	48 89 ef             	mov    %rbp,%rdi
   1fe14:	e8 17 03 00 00       	callq  20130 <mbedtls_poly1305_free>
   1fe19:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1fe20:	00 00 00 00 00 
   1fe25:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1fe2c:	00 00 00 00 00 
   1fe31:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1fe38:	00 00 00 00 00 
   1fe3d:	85 db                	test   %ebx,%ebx
   1fe3f:	0f 84 9b fe ff ff    	je     1fce0 <mbedtls_chachapoly_self_test+0x100>
   1fe45:	48 8d 3d 96 33 00 00 	lea    0x3396(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1fe4c:	e8 af 33 fe ff       	callq  3200 <puts@plt>
   1fe51:	bf 0a 00 00 00       	mov    $0xa,%edi
   1fe56:	e8 95 33 fe ff       	callq  31f0 <putchar@plt>
   1fe5b:	e9 80 fe ff ff       	jmpq   1fce0 <mbedtls_chachapoly_self_test+0x100>
   1fe60:	85 db                	test   %ebx,%ebx
   1fe62:	0f 84 68 fe ff ff    	je     1fcd0 <mbedtls_chachapoly_self_test+0xf0>
   1fe68:	48 8d 3d 9e 6d 00 00 	lea    0x6d9e(%rip),%rdi        # 26c0d <test_keys+0x8d>
   1fe6f:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1fe75:	e8 86 33 fe ff       	callq  3200 <puts@plt>
   1fe7a:	e9 61 fe ff ff       	jmpq   1fce0 <mbedtls_chachapoly_self_test+0x100>
   1fe7f:	89 c2                	mov    %eax,%edx
   1fe81:	48 8d 35 55 6d 00 00 	lea    0x6d55(%rip),%rsi        # 26bdd <test_keys+0x5d>
   1fe88:	31 c0                	xor    %eax,%eax
   1fe8a:	bf 01 00 00 00       	mov    $0x1,%edi
   1fe8f:	e8 ac 34 fe ff       	callq  3340 <__printf_chk@plt>
   1fe94:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1fe9a:	e9 41 fe ff ff       	jmpq   1fce0 <mbedtls_chachapoly_self_test+0x100>
   1fe9f:	89 c2                	mov    %eax,%edx
   1fea1:	48 8d 35 80 6d 00 00 	lea    0x6d80(%rip),%rsi        # 26c28 <test_keys+0xa8>
   1fea8:	31 c0                	xor    %eax,%eax
   1feaa:	bf 01 00 00 00       	mov    $0x1,%edi
   1feaf:	e8 8c 34 fe ff       	callq  3340 <__printf_chk@plt>
   1feb4:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1feba:	e9 21 fe ff ff       	jmpq   1fce0 <mbedtls_chachapoly_self_test+0x100>
   1febf:	48 8d 3d 30 6d 00 00 	lea    0x6d30(%rip),%rdi        # 26bf6 <test_keys+0x76>
   1fec6:	e8 35 33 fe ff       	callq  3200 <puts@plt>
   1fecb:	e9 00 fe ff ff       	jmpq   1fcd0 <mbedtls_chachapoly_self_test+0xf0>
   1fed0:	e8 8b 33 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1fed5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fedc:	00 00 00 
   1fedf:	90                   	nop

000000000001fee0 <poly1305_process>:
   1fee0:	41 57                	push   %r15
   1fee2:	48 c1 e6 04          	shl    $0x4,%rsi
   1fee6:	41 56                	push   %r14
   1fee8:	41 55                	push   %r13
   1feea:	41 54                	push   %r12
   1feec:	55                   	push   %rbp
   1feed:	53                   	push   %rbx
   1feee:	48 89 fb             	mov    %rdi,%rbx
   1fef1:	44 8b 67 04          	mov    0x4(%rdi),%r12d
   1fef5:	44 8b 1f             	mov    (%rdi),%r11d
   1fef8:	8b 43 0c             	mov    0xc(%rbx),%eax
   1fefb:	44 8b 73 20          	mov    0x20(%rbx),%r14d
   1feff:	44 8b 7b 28          	mov    0x28(%rbx),%r15d
   1ff03:	45 89 e2             	mov    %r12d,%r10d
   1ff06:	44 8b 6b 2c          	mov    0x2c(%rbx),%r13d
   1ff0a:	44 8b 43 30          	mov    0x30(%rbx),%r8d
   1ff0e:	89 4c 24 f4          	mov    %ecx,-0xc(%rsp)
   1ff12:	41 c1 ea 02          	shr    $0x2,%r10d
   1ff16:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   1ff1b:	8b 7f 08             	mov    0x8(%rdi),%edi
   1ff1e:	8b 4b 24             	mov    0x24(%rbx),%ecx
   1ff21:	89 c3                	mov    %eax,%ebx
   1ff23:	44 89 5c 24 f0       	mov    %r11d,-0x10(%rsp)
   1ff28:	41 89 f9             	mov    %edi,%r9d
   1ff2b:	48 89 5c 24 e0       	mov    %rbx,-0x20(%rsp)
   1ff30:	89 fb                	mov    %edi,%ebx
   1ff32:	41 c1 e9 02          	shr    $0x2,%r9d
   1ff36:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
   1ff3b:	43 8d 1c 22          	lea    (%r10,%r12,1),%ebx
   1ff3f:	41 8d 2c 39          	lea    (%r9,%rdi,1),%ebp
   1ff43:	89 c7                	mov    %eax,%edi
   1ff45:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
   1ff4a:	c1 ef 02             	shr    $0x2,%edi
   1ff4d:	8d 1c 07             	lea    (%rdi,%rax,1),%ebx
   1ff50:	48 8d 04 32          	lea    (%rdx,%rsi,1),%rax
   1ff54:	48 89 44 24 d8       	mov    %rax,-0x28(%rsp)
   1ff59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ff60:	8b 72 04             	mov    0x4(%rdx),%esi
   1ff63:	44 8b 0a             	mov    (%rdx),%r9d
   1ff66:	89 c9                	mov    %ecx,%ecx
   1ff68:	45 89 ff             	mov    %r15d,%r15d
   1ff6b:	45 89 ed             	mov    %r13d,%r13d
   1ff6e:	48 01 f1             	add    %rsi,%rcx
   1ff71:	44 89 f6             	mov    %r14d,%esi
   1ff74:	4c 89 cf             	mov    %r9,%rdi
   1ff77:	4a 8d 04 0e          	lea    (%rsi,%r9,1),%rax
   1ff7b:	44 8b 4a 0c          	mov    0xc(%rdx),%r9d
   1ff7f:	48 c1 e8 20          	shr    $0x20,%rax
   1ff83:	48 01 c8             	add    %rcx,%rax
   1ff86:	8b 4a 08             	mov    0x8(%rdx),%ecx
   1ff89:	4d 01 cd             	add    %r9,%r13
   1ff8c:	48 89 c6             	mov    %rax,%rsi
   1ff8f:	89 c0                	mov    %eax,%eax
   1ff91:	49 01 cf             	add    %rcx,%r15
   1ff94:	48 c1 ee 20          	shr    $0x20,%rsi
   1ff98:	49 89 c2             	mov    %rax,%r10
   1ff9b:	4c 01 fe             	add    %r15,%rsi
   1ff9e:	4c 8b 7c 24 e8       	mov    -0x18(%rsp),%r15
   1ffa3:	4d 0f af d4          	imul   %r12,%r10
   1ffa7:	48 89 f1             	mov    %rsi,%rcx
   1ffaa:	89 f6                	mov    %esi,%esi
   1ffac:	48 c1 e9 20          	shr    $0x20,%rcx
   1ffb0:	4c 01 e9             	add    %r13,%rcx
   1ffb3:	46 8d 2c 37          	lea    (%rdi,%r14,1),%r13d
   1ffb7:	4c 89 df             	mov    %r11,%rdi
   1ffba:	49 89 c9             	mov    %rcx,%r9
   1ffbd:	49 0f af fd          	imul   %r13,%rdi
   1ffc1:	89 c9                	mov    %ecx,%ecx
   1ffc3:	49 c1 e9 20          	shr    $0x20,%r9
   1ffc7:	44 03 4c 24 f4       	add    -0xc(%rsp),%r9d
   1ffcc:	45 01 c8             	add    %r9d,%r8d
   1ffcf:	49 89 c1             	mov    %rax,%r9
   1ffd2:	4c 0f af cb          	imul   %rbx,%r9
   1ffd6:	45 89 c6             	mov    %r8d,%r14d
   1ffd9:	49 01 f9             	add    %rdi,%r9
   1ffdc:	48 89 f7             	mov    %rsi,%rdi
   1ffdf:	48 0f af fd          	imul   %rbp,%rdi
   1ffe3:	4c 01 cf             	add    %r9,%rdi
   1ffe6:	4c 8b 4c 24 d0       	mov    -0x30(%rsp),%r9
   1ffeb:	4c 0f af c9          	imul   %rcx,%r9
   1ffef:	4c 01 cf             	add    %r9,%rdi
   1fff2:	4d 89 f9             	mov    %r15,%r9
   1fff5:	4d 0f af cd          	imul   %r13,%r9
   1fff9:	4c 0f af f8          	imul   %rax,%r15
   1fffd:	4d 01 d1             	add    %r10,%r9
   20000:	49 89 f2             	mov    %rsi,%r10
   20003:	4d 0f af d3          	imul   %r11,%r10
   20007:	4d 01 d1             	add    %r10,%r9
   2000a:	49 89 ca             	mov    %rcx,%r10
   2000d:	4c 0f af d3          	imul   %rbx,%r10
   20011:	4d 01 ca             	add    %r9,%r10
   20014:	4d 89 f1             	mov    %r14,%r9
   20017:	4c 0f af cd          	imul   %rbp,%r9
   2001b:	4d 01 ca             	add    %r9,%r10
   2001e:	4c 8b 4c 24 e0       	mov    -0x20(%rsp),%r9
   20023:	4d 0f af cd          	imul   %r13,%r9
   20027:	4d 01 cf             	add    %r9,%r15
   2002a:	49 89 f1             	mov    %rsi,%r9
   2002d:	4d 0f af cc          	imul   %r12,%r9
   20031:	4d 01 cf             	add    %r9,%r15
   20034:	4d 0f af ec          	imul   %r12,%r13
   20038:	49 89 c9             	mov    %rcx,%r9
   2003b:	49 0f af c3          	imul   %r11,%rax
   2003f:	48 0f af f3          	imul   %rbx,%rsi
   20043:	48 0f af cd          	imul   %rbp,%rcx
   20047:	4d 0f af cb          	imul   %r11,%r9
   2004b:	4c 01 e8             	add    %r13,%rax
   2004e:	48 01 f0             	add    %rsi,%rax
   20051:	44 0f af 44 24 f0    	imul   -0x10(%rsp),%r8d
   20057:	48 01 c8             	add    %rcx,%rax
   2005a:	48 89 f9             	mov    %rdi,%rcx
   2005d:	89 ff                	mov    %edi,%edi
   2005f:	4d 01 f9             	add    %r15,%r9
   20062:	4d 89 f7             	mov    %r14,%r15
   20065:	48 c1 e9 20          	shr    $0x20,%rcx
   20069:	4c 0f af 74 24 d0    	imul   -0x30(%rsp),%r14
   2006f:	48 01 c8             	add    %rcx,%rax
   20072:	4c 0f af fb          	imul   %rbx,%r15
   20076:	4a 8d 0c 30          	lea    (%rax,%r14,1),%rcx
   2007a:	48 89 c8             	mov    %rcx,%rax
   2007d:	4d 01 f9             	add    %r15,%r9
   20080:	89 c9                	mov    %ecx,%ecx
   20082:	48 c1 e8 20          	shr    $0x20,%rax
   20086:	49 01 c2             	add    %rax,%r10
   20089:	4c 89 d0             	mov    %r10,%rax
   2008c:	45 89 d2             	mov    %r10d,%r10d
   2008f:	48 c1 e8 20          	shr    $0x20,%rax
   20093:	49 01 c1             	add    %rax,%r9
   20096:	4c 89 c8             	mov    %r9,%rax
   20099:	45 89 c9             	mov    %r9d,%r9d
   2009c:	48 c1 e8 20          	shr    $0x20,%rax
   200a0:	41 01 c0             	add    %eax,%r8d
   200a3:	44 89 c0             	mov    %r8d,%eax
   200a6:	44 89 c6             	mov    %r8d,%esi
   200a9:	83 e6 fc             	and    $0xfffffffc,%esi
   200ac:	c1 e8 02             	shr    $0x2,%eax
   200af:	48 01 f0             	add    %rsi,%rax
   200b2:	48 01 c7             	add    %rax,%rdi
   200b5:	48 89 f8             	mov    %rdi,%rax
   200b8:	41 89 fe             	mov    %edi,%r14d
   200bb:	48 c1 e8 20          	shr    $0x20,%rax
   200bf:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   200c3:	48 89 f0             	mov    %rsi,%rax
   200c6:	89 f1                	mov    %esi,%ecx
   200c8:	48 c1 e8 20          	shr    $0x20,%rax
   200cc:	49 01 c2             	add    %rax,%r10
   200cf:	4c 89 d0             	mov    %r10,%rax
   200d2:	45 89 d7             	mov    %r10d,%r15d
   200d5:	48 c1 e8 20          	shr    $0x20,%rax
   200d9:	49 01 c1             	add    %rax,%r9
   200dc:	4c 89 c8             	mov    %r9,%rax
   200df:	45 89 cd             	mov    %r9d,%r13d
   200e2:	48 c1 e8 20          	shr    $0x20,%rax
   200e6:	41 83 e0 03          	and    $0x3,%r8d
   200ea:	48 83 c2 10          	add    $0x10,%rdx
   200ee:	4c 01 c0             	add    %r8,%rax
   200f1:	41 89 c0             	mov    %eax,%r8d
   200f4:	48 39 54 24 d8       	cmp    %rdx,-0x28(%rsp)
   200f9:	0f 85 61 fe ff ff    	jne    1ff60 <poly1305_process+0x80>
   200ff:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
   20104:	89 7a 20             	mov    %edi,0x20(%rdx)
   20107:	89 72 24             	mov    %esi,0x24(%rdx)
   2010a:	44 89 52 28          	mov    %r10d,0x28(%rdx)
   2010e:	44 89 4a 2c          	mov    %r9d,0x2c(%rdx)
   20112:	89 42 30             	mov    %eax,0x30(%rdx)
   20115:	5b                   	pop    %rbx
   20116:	5d                   	pop    %rbp
   20117:	41 5c                	pop    %r12
   20119:	41 5d                	pop    %r13
   2011b:	41 5e                	pop    %r14
   2011d:	41 5f                	pop    %r15
   2011f:	c3                   	retq   

0000000000020120 <mbedtls_poly1305_init>:
   20120:	f3 0f 1e fa          	endbr64 
   20124:	be 50 00 00 00       	mov    $0x50,%esi
   20129:	e9 02 51 fe ff       	jmpq   5230 <mbedtls_platform_zeroize>
   2012e:	66 90                	xchg   %ax,%ax

0000000000020130 <mbedtls_poly1305_free>:
   20130:	f3 0f 1e fa          	endbr64 
   20134:	48 85 ff             	test   %rdi,%rdi
   20137:	74 0f                	je     20148 <mbedtls_poly1305_free+0x18>
   20139:	be 50 00 00 00       	mov    $0x50,%esi
   2013e:	e9 ed 50 fe ff       	jmpq   5230 <mbedtls_platform_zeroize>
   20143:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20148:	c3                   	retq   
   20149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000020150 <mbedtls_poly1305_starts>:
   20150:	f3 0f 1e fa          	endbr64 
   20154:	53                   	push   %rbx
   20155:	8b 06                	mov    (%rsi),%eax
   20157:	48 89 fb             	mov    %rdi,%rbx
   2015a:	48 8d 7f 34          	lea    0x34(%rdi),%rdi
   2015e:	25 ff ff ff 0f       	and    $0xfffffff,%eax
   20163:	89 47 cc             	mov    %eax,-0x34(%rdi)
   20166:	8b 46 04             	mov    0x4(%rsi),%eax
   20169:	25 fc ff ff 0f       	and    $0xffffffc,%eax
   2016e:	89 47 d0             	mov    %eax,-0x30(%rdi)
   20171:	8b 46 08             	mov    0x8(%rsi),%eax
   20174:	25 fc ff ff 0f       	and    $0xffffffc,%eax
   20179:	89 47 d4             	mov    %eax,-0x2c(%rdi)
   2017c:	8b 46 0c             	mov    0xc(%rsi),%eax
   2017f:	25 fc ff ff 0f       	and    $0xffffffc,%eax
   20184:	89 47 d8             	mov    %eax,-0x28(%rdi)
   20187:	8b 46 10             	mov    0x10(%rsi),%eax
   2018a:	89 47 dc             	mov    %eax,-0x24(%rdi)
   2018d:	8b 46 14             	mov    0x14(%rsi),%eax
   20190:	89 47 e0             	mov    %eax,-0x20(%rdi)
   20193:	8b 46 18             	mov    0x18(%rsi),%eax
   20196:	89 47 e4             	mov    %eax,-0x1c(%rdi)
   20199:	8b 46 1c             	mov    0x1c(%rsi),%eax
   2019c:	be 10 00 00 00       	mov    $0x10,%esi
   201a1:	48 c7 47 ec 00 00 00 	movq   $0x0,-0x14(%rdi)
   201a8:	00 
   201a9:	89 47 e8             	mov    %eax,-0x18(%rdi)
   201ac:	48 c7 47 f4 00 00 00 	movq   $0x0,-0xc(%rdi)
   201b3:	00 
   201b4:	c7 47 fc 00 00 00 00 	movl   $0x0,-0x4(%rdi)
   201bb:	e8 70 50 fe ff       	callq  5230 <mbedtls_platform_zeroize>
   201c0:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   201c7:	00 
   201c8:	31 c0                	xor    %eax,%eax
   201ca:	5b                   	pop    %rbx
   201cb:	c3                   	retq   
   201cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000201d0 <mbedtls_poly1305_update>:
   201d0:	f3 0f 1e fa          	endbr64 
   201d4:	48 85 d2             	test   %rdx,%rdx
   201d7:	0f 84 fb 00 00 00    	je     202d8 <mbedtls_poly1305_update+0x108>
   201dd:	41 56                	push   %r14
   201df:	49 89 f6             	mov    %rsi,%r14
   201e2:	41 55                	push   %r13
   201e4:	49 89 fd             	mov    %rdi,%r13
   201e7:	41 54                	push   %r12
   201e9:	55                   	push   %rbp
   201ea:	53                   	push   %rbx
   201eb:	4c 8b 67 48          	mov    0x48(%rdi),%r12
   201ef:	48 89 d3             	mov    %rdx,%rbx
   201f2:	4d 85 e4             	test   %r12,%r12
   201f5:	0f 84 e5 00 00 00    	je     202e0 <mbedtls_poly1305_update+0x110>
   201fb:	bd 10 00 00 00       	mov    $0x10,%ebp
   20200:	4a 8d 7c 27 34       	lea    0x34(%rdi,%r12,1),%rdi
   20205:	4c 29 e5             	sub    %r12,%rbp
   20208:	48 39 ea             	cmp    %rbp,%rdx
   2020b:	0f 82 07 01 00 00    	jb     20318 <mbedtls_poly1305_update+0x148>
   20211:	48 89 ea             	mov    %rbp,%rdx
   20214:	49 8d 5c 1c f0       	lea    -0x10(%r12,%rbx,1),%rbx
   20219:	e8 f2 30 fe ff       	callq  3310 <memcpy@plt>
   2021e:	49 c7 45 48 00 00 00 	movq   $0x0,0x48(%r13)
   20225:	00 
   20226:	49 8d 55 34          	lea    0x34(%r13),%rdx
   2022a:	4c 89 ef             	mov    %r13,%rdi
   2022d:	b9 01 00 00 00       	mov    $0x1,%ecx
   20232:	be 01 00 00 00       	mov    $0x1,%esi
   20237:	e8 a4 fc ff ff       	callq  1fee0 <poly1305_process>
   2023c:	48 83 fb 0f          	cmp    $0xf,%rbx
   20240:	76 28                	jbe    2026a <mbedtls_poly1305_update+0x9a>
   20242:	49 8d 14 2e          	lea    (%r14,%rbp,1),%rdx
   20246:	49 89 ec             	mov    %rbp,%r12
   20249:	48 89 de             	mov    %rbx,%rsi
   2024c:	48 89 dd             	mov    %rbx,%rbp
   2024f:	b9 01 00 00 00       	mov    $0x1,%ecx
   20254:	4c 89 ef             	mov    %r13,%rdi
   20257:	48 c1 ee 04          	shr    $0x4,%rsi
   2025b:	48 83 e5 f0          	and    $0xfffffffffffffff0,%rbp
   2025f:	83 e3 0f             	and    $0xf,%ebx
   20262:	e8 79 fc ff ff       	callq  1fee0 <poly1305_process>
   20267:	4c 01 e5             	add    %r12,%rbp
   2026a:	48 85 db             	test   %rbx,%rbx
   2026d:	74 58                	je     202c7 <mbedtls_poly1305_update+0xf7>
   2026f:	49 01 ee             	add    %rbp,%r14
   20272:	49 89 5d 48          	mov    %rbx,0x48(%r13)
   20276:	49 8d 4d 34          	lea    0x34(%r13),%rcx
   2027a:	89 d8                	mov    %ebx,%eax
   2027c:	83 fb 08             	cmp    $0x8,%ebx
   2027f:	72 6f                	jb     202f0 <mbedtls_poly1305_update+0x120>
   20281:	49 8b 06             	mov    (%r14),%rax
   20284:	49 83 c5 3c          	add    $0x3c,%r13
   20288:	4c 89 f6             	mov    %r14,%rsi
   2028b:	49 89 45 f8          	mov    %rax,-0x8(%r13)
   2028f:	89 d8                	mov    %ebx,%eax
   20291:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   20295:	49 8b 54 06 f8       	mov    -0x8(%r14,%rax,1),%rdx
   2029a:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   2029f:	4c 29 e9             	sub    %r13,%rcx
   202a2:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   202a5:	48 29 ce             	sub    %rcx,%rsi
   202a8:	83 e0 f8             	and    $0xfffffff8,%eax
   202ab:	83 f8 08             	cmp    $0x8,%eax
   202ae:	72 17                	jb     202c7 <mbedtls_poly1305_update+0xf7>
   202b0:	83 e0 f8             	and    $0xfffffff8,%eax
   202b3:	31 d2                	xor    %edx,%edx
   202b5:	89 d1                	mov    %edx,%ecx
   202b7:	83 c2 08             	add    $0x8,%edx
   202ba:	48 8b 3c 0e          	mov    (%rsi,%rcx,1),%rdi
   202be:	49 89 7c 0d 00       	mov    %rdi,0x0(%r13,%rcx,1)
   202c3:	39 c2                	cmp    %eax,%edx
   202c5:	72 ee                	jb     202b5 <mbedtls_poly1305_update+0xe5>
   202c7:	5b                   	pop    %rbx
   202c8:	31 c0                	xor    %eax,%eax
   202ca:	5d                   	pop    %rbp
   202cb:	41 5c                	pop    %r12
   202cd:	41 5d                	pop    %r13
   202cf:	41 5e                	pop    %r14
   202d1:	c3                   	retq   
   202d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   202d8:	31 c0                	xor    %eax,%eax
   202da:	c3                   	retq   
   202db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   202e0:	48 89 f2             	mov    %rsi,%rdx
   202e3:	48 83 fb 0f          	cmp    $0xf,%rbx
   202e7:	0f 87 5c ff ff ff    	ja     20249 <mbedtls_poly1305_update+0x79>
   202ed:	eb 83                	jmp    20272 <mbedtls_poly1305_update+0xa2>
   202ef:	90                   	nop
   202f0:	83 e3 04             	and    $0x4,%ebx
   202f3:	75 3b                	jne    20330 <mbedtls_poly1305_update+0x160>
   202f5:	85 c0                	test   %eax,%eax
   202f7:	74 ce                	je     202c7 <mbedtls_poly1305_update+0xf7>
   202f9:	41 0f b6 16          	movzbl (%r14),%edx
   202fd:	41 88 55 34          	mov    %dl,0x34(%r13)
   20301:	a8 02                	test   $0x2,%al
   20303:	74 c2                	je     202c7 <mbedtls_poly1305_update+0xf7>
   20305:	89 c2                	mov    %eax,%edx
   20307:	41 0f b7 44 16 fe    	movzwl -0x2(%r14,%rdx,1),%eax
   2030d:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   20312:	eb b3                	jmp    202c7 <mbedtls_poly1305_update+0xf7>
   20314:	0f 1f 40 00          	nopl   0x0(%rax)
   20318:	e8 f3 2f fe ff       	callq  3310 <memcpy@plt>
   2031d:	49 01 5d 48          	add    %rbx,0x48(%r13)
   20321:	31 c0                	xor    %eax,%eax
   20323:	5b                   	pop    %rbx
   20324:	5d                   	pop    %rbp
   20325:	41 5c                	pop    %r12
   20327:	41 5d                	pop    %r13
   20329:	41 5e                	pop    %r14
   2032b:	c3                   	retq   
   2032c:	0f 1f 40 00          	nopl   0x0(%rax)
   20330:	41 8b 16             	mov    (%r14),%edx
   20333:	41 89 55 34          	mov    %edx,0x34(%r13)
   20337:	89 c2                	mov    %eax,%edx
   20339:	41 8b 44 16 fc       	mov    -0x4(%r14,%rdx,1),%eax
   2033e:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   20342:	eb 83                	jmp    202c7 <mbedtls_poly1305_update+0xf7>
   20344:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2034b:	00 00 00 00 
   2034f:	90                   	nop

0000000000020350 <mbedtls_poly1305_finish>:
   20350:	f3 0f 1e fa          	endbr64 
   20354:	41 55                	push   %r13
   20356:	41 54                	push   %r12
   20358:	55                   	push   %rbp
   20359:	48 89 f5             	mov    %rsi,%rbp
   2035c:	53                   	push   %rbx
   2035d:	48 89 fb             	mov    %rdi,%rbx
   20360:	48 83 ec 08          	sub    $0x8,%rsp
   20364:	48 8b 47 48          	mov    0x48(%rdi),%rax
   20368:	48 85 c0             	test   %rax,%rax
   2036b:	0f 85 c7 00 00 00    	jne    20438 <mbedtls_poly1305_finish+0xe8>
   20371:	8b 4b 20             	mov    0x20(%rbx),%ecx
   20374:	8b 53 24             	mov    0x24(%rbx),%edx
   20377:	8b 73 28             	mov    0x28(%rbx),%esi
   2037a:	44 8b 5b 2c          	mov    0x2c(%rbx),%r11d
   2037e:	49 89 cd             	mov    %rcx,%r13
   20381:	48 83 c1 05          	add    $0x5,%rcx
   20385:	49 89 d0             	mov    %rdx,%r8
   20388:	48 c1 e9 20          	shr    $0x20,%rcx
   2038c:	48 89 f0             	mov    %rsi,%rax
   2038f:	45 8d 4d 05          	lea    0x5(%r13),%r9d
   20393:	4d 89 dc             	mov    %r11,%r12
   20396:	48 01 d1             	add    %rdx,%rcx
   20399:	48 89 ca             	mov    %rcx,%rdx
   2039c:	48 c1 ea 20          	shr    $0x20,%rdx
   203a0:	48 01 f2             	add    %rsi,%rdx
   203a3:	48 89 d6             	mov    %rdx,%rsi
   203a6:	48 c1 ee 20          	shr    $0x20,%rsi
   203aa:	49 01 f3             	add    %rsi,%r11
   203ad:	4d 89 da             	mov    %r11,%r10
   203b0:	49 c1 ea 20          	shr    $0x20,%r10
   203b4:	44 03 53 30          	add    0x30(%rbx),%r10d
   203b8:	41 c1 ea 02          	shr    $0x2,%r10d
   203bc:	44 89 d6             	mov    %r10d,%esi
   203bf:	41 8d 7a ff          	lea    -0x1(%r10),%edi
   203c3:	45 89 ea             	mov    %r13d,%r10d
   203c6:	f7 de                	neg    %esi
   203c8:	41 21 f8             	and    %edi,%r8d
   203cb:	41 21 fa             	and    %edi,%r10d
   203ce:	21 f8                	and    %edi,%eax
   203d0:	21 f1                	and    %esi,%ecx
   203d2:	41 21 f1             	and    %esi,%r9d
   203d5:	44 21 e7             	and    %r12d,%edi
   203d8:	44 8b 63 10          	mov    0x10(%rbx),%r12d
   203dc:	44 09 c1             	or     %r8d,%ecx
   203df:	44 8b 43 14          	mov    0x14(%rbx),%r8d
   203e3:	45 09 d1             	or     %r10d,%r9d
   203e6:	21 f2                	and    %esi,%edx
   203e8:	09 c2                	or     %eax,%edx
   203ea:	8b 43 18             	mov    0x18(%rbx),%eax
   203ed:	44 21 de             	and    %r11d,%esi
   203f0:	49 01 c8             	add    %rcx,%r8
   203f3:	44 89 c9             	mov    %r9d,%ecx
   203f6:	09 fe                	or     %edi,%esi
   203f8:	45 01 e1             	add    %r12d,%r9d
   203fb:	4c 01 e1             	add    %r12,%rcx
   203fe:	48 01 d0             	add    %rdx,%rax
   20401:	03 73 1c             	add    0x1c(%rbx),%esi
   20404:	44 89 4d 00          	mov    %r9d,0x0(%rbp)
   20408:	48 c1 e9 20          	shr    $0x20,%rcx
   2040c:	4c 01 c1             	add    %r8,%rcx
   2040f:	48 89 ca             	mov    %rcx,%rdx
   20412:	89 4d 04             	mov    %ecx,0x4(%rbp)
   20415:	48 c1 ea 20          	shr    $0x20,%rdx
   20419:	48 01 d0             	add    %rdx,%rax
   2041c:	89 45 08             	mov    %eax,0x8(%rbp)
   2041f:	48 c1 e8 20          	shr    $0x20,%rax
   20423:	01 f0                	add    %esi,%eax
   20425:	89 45 0c             	mov    %eax,0xc(%rbp)
   20428:	48 83 c4 08          	add    $0x8,%rsp
   2042c:	31 c0                	xor    %eax,%eax
   2042e:	5b                   	pop    %rbx
   2042f:	5d                   	pop    %rbp
   20430:	41 5c                	pop    %r12
   20432:	41 5d                	pop    %r13
   20434:	c3                   	retq   
   20435:	0f 1f 00             	nopl   (%rax)
   20438:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2043c:	c6 44 07 34 01       	movb   $0x1,0x34(%rdi,%rax,1)
   20441:	ba 10 00 00 00       	mov    $0x10,%edx
   20446:	31 f6                	xor    %esi,%esi
   20448:	48 89 4f 48          	mov    %rcx,0x48(%rdi)
   2044c:	48 29 ca             	sub    %rcx,%rdx
   2044f:	48 8d 7c 07 35       	lea    0x35(%rdi,%rax,1),%rdi
   20454:	e8 37 2e fe ff       	callq  3290 <memset@plt>
   20459:	48 8d 53 34          	lea    0x34(%rbx),%rdx
   2045d:	31 c9                	xor    %ecx,%ecx
   2045f:	be 01 00 00 00       	mov    $0x1,%esi
   20464:	48 89 df             	mov    %rbx,%rdi
   20467:	e8 74 fa ff ff       	callq  1fee0 <poly1305_process>
   2046c:	e9 00 ff ff ff       	jmpq   20371 <mbedtls_poly1305_finish+0x21>
   20471:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   20478:	00 00 00 00 
   2047c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020480 <mbedtls_poly1305_mac>:
   20480:	f3 0f 1e fa          	endbr64 
   20484:	41 57                	push   %r15
   20486:	49 89 d7             	mov    %rdx,%r15
   20489:	41 56                	push   %r14
   2048b:	49 89 f6             	mov    %rsi,%r14
   2048e:	be 50 00 00 00       	mov    $0x50,%esi
   20493:	41 55                	push   %r13
   20495:	49 89 cd             	mov    %rcx,%r13
   20498:	41 54                	push   %r12
   2049a:	49 89 fc             	mov    %rdi,%r12
   2049d:	55                   	push   %rbp
   2049e:	48 83 ec 60          	sub    $0x60,%rsp
   204a2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   204a9:	00 00 
   204ab:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   204b0:	31 c0                	xor    %eax,%eax
   204b2:	48 89 e5             	mov    %rsp,%rbp
   204b5:	48 89 ef             	mov    %rbp,%rdi
   204b8:	e8 73 4d fe ff       	callq  5230 <mbedtls_platform_zeroize>
   204bd:	4c 89 e6             	mov    %r12,%rsi
   204c0:	48 89 ef             	mov    %rbp,%rdi
   204c3:	e8 88 fc ff ff       	callq  20150 <mbedtls_poly1305_starts>
   204c8:	41 89 c4             	mov    %eax,%r12d
   204cb:	85 c0                	test   %eax,%eax
   204cd:	74 31                	je     20500 <mbedtls_poly1305_mac+0x80>
   204cf:	be 50 00 00 00       	mov    $0x50,%esi
   204d4:	48 89 ef             	mov    %rbp,%rdi
   204d7:	e8 54 4d fe ff       	callq  5230 <mbedtls_platform_zeroize>
   204dc:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   204e1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   204e8:	00 00 
   204ea:	75 39                	jne    20525 <mbedtls_poly1305_mac+0xa5>
   204ec:	48 83 c4 60          	add    $0x60,%rsp
   204f0:	44 89 e0             	mov    %r12d,%eax
   204f3:	5d                   	pop    %rbp
   204f4:	41 5c                	pop    %r12
   204f6:	41 5d                	pop    %r13
   204f8:	41 5e                	pop    %r14
   204fa:	41 5f                	pop    %r15
   204fc:	c3                   	retq   
   204fd:	0f 1f 00             	nopl   (%rax)
   20500:	4c 89 fa             	mov    %r15,%rdx
   20503:	4c 89 f6             	mov    %r14,%rsi
   20506:	48 89 ef             	mov    %rbp,%rdi
   20509:	e8 c2 fc ff ff       	callq  201d0 <mbedtls_poly1305_update>
   2050e:	41 89 c4             	mov    %eax,%r12d
   20511:	85 c0                	test   %eax,%eax
   20513:	75 ba                	jne    204cf <mbedtls_poly1305_mac+0x4f>
   20515:	4c 89 ee             	mov    %r13,%rsi
   20518:	48 89 ef             	mov    %rbp,%rdi
   2051b:	e8 30 fe ff ff       	callq  20350 <mbedtls_poly1305_finish>
   20520:	41 89 c4             	mov    %eax,%r12d
   20523:	eb aa                	jmp    204cf <mbedtls_poly1305_mac+0x4f>
   20525:	e8 36 2d fe ff       	callq  3260 <__stack_chk_fail@plt>
   2052a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020530 <mbedtls_poly1305_self_test>:
   20530:	f3 0f 1e fa          	endbr64 
   20534:	41 55                	push   %r13
   20536:	41 54                	push   %r12
   20538:	48 83 ec 28          	sub    $0x28,%rsp
   2053c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20543:	00 00 
   20545:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2054a:	31 c0                	xor    %eax,%eax
   2054c:	85 ff                	test   %edi,%edi
   2054e:	0f 85 bc 00 00 00    	jne    20610 <mbedtls_poly1305_self_test+0xe0>
   20554:	49 89 e5             	mov    %rsp,%r13
   20557:	ba 22 00 00 00       	mov    $0x22,%edx
   2055c:	48 8d 35 bd 68 00 00 	lea    0x68bd(%rip),%rsi        # 26e20 <test_data>
   20563:	4c 89 e9             	mov    %r13,%rcx
   20566:	48 8d 3d b3 69 00 00 	lea    0x69b3(%rip),%rdi        # 26f20 <test_keys>
   2056d:	e8 0e ff ff ff       	callq  20480 <mbedtls_poly1305_mac>
   20572:	85 c0                	test   %eax,%eax
   20574:	0f 85 86 01 00 00    	jne    20700 <mbedtls_poly1305_self_test+0x1d0>
   2057a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2057f:	48 8b 04 24          	mov    (%rsp),%rax
   20583:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   20589:	48 33 15 78 68 00 00 	xor    0x6878(%rip),%rdx        # 26e08 <test_mac+0x8>
   20590:	48 33 05 69 68 00 00 	xor    0x6869(%rip),%rax        # 26e00 <test_mac>
   20597:	48 09 c2             	or     %rax,%rdx
   2059a:	74 24                	je     205c0 <mbedtls_poly1305_self_test+0x90>
   2059c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   205a1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   205a8:	00 00 
   205aa:	0f 85 7b 01 00 00    	jne    2072b <mbedtls_poly1305_self_test+0x1fb>
   205b0:	48 83 c4 28          	add    $0x28,%rsp
   205b4:	44 89 e0             	mov    %r12d,%eax
   205b7:	41 5c                	pop    %r12
   205b9:	41 5d                	pop    %r13
   205bb:	c3                   	retq   
   205bc:	0f 1f 40 00          	nopl   0x0(%rax)
   205c0:	4c 89 e9             	mov    %r13,%rcx
   205c3:	ba 7f 00 00 00       	mov    $0x7f,%edx
   205c8:	48 8d 35 d0 68 00 00 	lea    0x68d0(%rip),%rsi        # 26e9f <test_data+0x7f>
   205cf:	48 8d 3d 6a 69 00 00 	lea    0x696a(%rip),%rdi        # 26f40 <test_keys+0x20>
   205d6:	e8 a5 fe ff ff       	callq  20480 <mbedtls_poly1305_mac>
   205db:	85 c0                	test   %eax,%eax
   205dd:	0f 85 1d 01 00 00    	jne    20700 <mbedtls_poly1305_self_test+0x1d0>
   205e3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   205e8:	48 8b 04 24          	mov    (%rsp),%rax
   205ec:	45 31 e4             	xor    %r12d,%r12d
   205ef:	48 33 15 22 68 00 00 	xor    0x6822(%rip),%rdx        # 26e18 <test_mac+0x18>
   205f6:	48 33 05 13 68 00 00 	xor    0x6813(%rip),%rax        # 26e10 <test_mac+0x10>
   205fd:	48 09 c2             	or     %rax,%rdx
   20600:	41 0f 94 c4          	sete   %r12b
   20604:	41 83 ec 01          	sub    $0x1,%r12d
   20608:	eb 92                	jmp    2059c <mbedtls_poly1305_self_test+0x6c>
   2060a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20610:	31 d2                	xor    %edx,%edx
   20612:	48 8d 35 a7 67 00 00 	lea    0x67a7(%rip),%rsi        # 26dc0 <test_key+0x20>
   20619:	bf 01 00 00 00       	mov    $0x1,%edi
   2061e:	49 89 e5             	mov    %rsp,%r13
   20621:	e8 1a 2d fe ff       	callq  3340 <__printf_chk@plt>
   20626:	4c 89 e9             	mov    %r13,%rcx
   20629:	ba 22 00 00 00       	mov    $0x22,%edx
   2062e:	48 8d 35 eb 67 00 00 	lea    0x67eb(%rip),%rsi        # 26e20 <test_data>
   20635:	48 8d 3d e4 68 00 00 	lea    0x68e4(%rip),%rdi        # 26f20 <test_keys>
   2063c:	e8 3f fe ff ff       	callq  20480 <mbedtls_poly1305_mac>
   20641:	85 c0                	test   %eax,%eax
   20643:	0f 85 c2 00 00 00    	jne    2070b <mbedtls_poly1305_self_test+0x1db>
   20649:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2064e:	48 8b 04 24          	mov    (%rsp),%rax
   20652:	48 33 15 af 67 00 00 	xor    0x67af(%rip),%rdx        # 26e08 <test_mac+0x8>
   20659:	48 33 05 a0 67 00 00 	xor    0x67a0(%rip),%rax        # 26e00 <test_mac>
   20660:	48 09 c2             	or     %rax,%rdx
   20663:	75 5f                	jne    206c4 <mbedtls_poly1305_self_test+0x194>
   20665:	48 8d 3d 76 2b 00 00 	lea    0x2b76(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   2066c:	e8 8f 2b fe ff       	callq  3200 <puts@plt>
   20671:	ba 01 00 00 00       	mov    $0x1,%edx
   20676:	48 8d 35 43 67 00 00 	lea    0x6743(%rip),%rsi        # 26dc0 <test_key+0x20>
   2067d:	31 c0                	xor    %eax,%eax
   2067f:	bf 01 00 00 00       	mov    $0x1,%edi
   20684:	e8 b7 2c fe ff       	callq  3340 <__printf_chk@plt>
   20689:	4c 89 e9             	mov    %r13,%rcx
   2068c:	ba 7f 00 00 00       	mov    $0x7f,%edx
   20691:	48 8d 35 07 68 00 00 	lea    0x6807(%rip),%rsi        # 26e9f <test_data+0x7f>
   20698:	48 8d 3d a1 68 00 00 	lea    0x68a1(%rip),%rdi        # 26f40 <test_keys+0x20>
   2069f:	e8 dc fd ff ff       	callq  20480 <mbedtls_poly1305_mac>
   206a4:	85 c0                	test   %eax,%eax
   206a6:	75 63                	jne    2070b <mbedtls_poly1305_self_test+0x1db>
   206a8:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   206ad:	48 8b 04 24          	mov    (%rsp),%rax
   206b1:	48 33 15 60 67 00 00 	xor    0x6760(%rip),%rdx        # 26e18 <test_mac+0x18>
   206b8:	48 33 05 51 67 00 00 	xor    0x6751(%rip),%rax        # 26e10 <test_mac+0x10>
   206bf:	48 09 c2             	or     %rax,%rdx
   206c2:	74 1c                	je     206e0 <mbedtls_poly1305_self_test+0x1b0>
   206c4:	48 8d 3d 09 67 00 00 	lea    0x6709(%rip),%rdi        # 26dd4 <test_key+0x34>
   206cb:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   206d1:	e8 2a 2b fe ff       	callq  3200 <puts@plt>
   206d6:	e9 c1 fe ff ff       	jmpq   2059c <mbedtls_poly1305_self_test+0x6c>
   206db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   206e0:	48 8d 3d fb 2a 00 00 	lea    0x2afb(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   206e7:	45 31 e4             	xor    %r12d,%r12d
   206ea:	e8 11 2b fe ff       	callq  3200 <puts@plt>
   206ef:	bf 0a 00 00 00       	mov    $0xa,%edi
   206f4:	e8 f7 2a fe ff       	callq  31f0 <putchar@plt>
   206f9:	e9 9e fe ff ff       	jmpq   2059c <mbedtls_poly1305_self_test+0x6c>
   206fe:	66 90                	xchg   %ax,%ax
   20700:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   20706:	e9 91 fe ff ff       	jmpq   2059c <mbedtls_poly1305_self_test+0x6c>
   2070b:	89 c2                	mov    %eax,%edx
   2070d:	48 8d 35 d2 64 00 00 	lea    0x64d2(%rip),%rsi        # 26be6 <test_keys+0x66>
   20714:	31 c0                	xor    %eax,%eax
   20716:	bf 01 00 00 00       	mov    $0x1,%edi
   2071b:	e8 20 2c fe ff       	callq  3340 <__printf_chk@plt>
   20720:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   20726:	e9 71 fe ff ff       	jmpq   2059c <mbedtls_poly1305_self_test+0x6c>
   2072b:	e8 30 2b fe ff       	callq  3260 <__stack_chk_fail@plt>

0000000000020730 <__udivti3>:
   20730:	f3 0f 1e fa          	endbr64 
   20734:	49 89 d0             	mov    %rdx,%r8
   20737:	48 89 ca             	mov    %rcx,%rdx
   2073a:	48 85 c9             	test   %rcx,%rcx
   2073d:	75 11                	jne    20750 <__udivti3+0x20>
   2073f:	49 39 f0             	cmp    %rsi,%r8
   20742:	76 44                	jbe    20788 <__udivti3+0x58>
   20744:	48 89 f8             	mov    %rdi,%rax
   20747:	48 89 f2             	mov    %rsi,%rdx
   2074a:	49 f7 f0             	div    %r8
   2074d:	31 d2                	xor    %edx,%edx
   2074f:	c3                   	retq   
   20750:	48 39 f1             	cmp    %rsi,%rcx
   20753:	76 0b                	jbe    20760 <__udivti3+0x30>
   20755:	31 d2                	xor    %edx,%edx
   20757:	31 c0                	xor    %eax,%eax
   20759:	c3                   	retq   
   2075a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20760:	48 0f bd c1          	bsr    %rcx,%rax
   20764:	48 83 f0 3f          	xor    $0x3f,%rax
   20768:	41 89 c2             	mov    %eax,%r10d
   2076b:	85 c0                	test   %eax,%eax
   2076d:	75 49                	jne    207b8 <__udivti3+0x88>
   2076f:	48 39 f1             	cmp    %rsi,%rcx
   20772:	72 09                	jb     2077d <__udivti3+0x4d>
   20774:	31 d2                	xor    %edx,%edx
   20776:	31 c0                	xor    %eax,%eax
   20778:	49 39 f8             	cmp    %rdi,%r8
   2077b:	77 d2                	ja     2074f <__udivti3+0x1f>
   2077d:	31 d2                	xor    %edx,%edx
   2077f:	b8 01 00 00 00       	mov    $0x1,%eax
   20784:	c3                   	retq   
   20785:	0f 1f 00             	nopl   (%rax)
   20788:	4c 89 c1             	mov    %r8,%rcx
   2078b:	4d 85 c0             	test   %r8,%r8
   2078e:	75 0d                	jne    2079d <__udivti3+0x6d>
   20790:	b8 01 00 00 00       	mov    $0x1,%eax
   20795:	31 d2                	xor    %edx,%edx
   20797:	49 f7 f0             	div    %r8
   2079a:	48 89 c1             	mov    %rax,%rcx
   2079d:	31 d2                	xor    %edx,%edx
   2079f:	48 89 f0             	mov    %rsi,%rax
   207a2:	48 f7 f1             	div    %rcx
   207a5:	48 89 c6             	mov    %rax,%rsi
   207a8:	48 89 f8             	mov    %rdi,%rax
   207ab:	48 f7 f1             	div    %rcx
   207ae:	48 89 f2             	mov    %rsi,%rdx
   207b1:	c3                   	retq   
   207b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   207b8:	89 c1                	mov    %eax,%ecx
   207ba:	53                   	push   %rbx
   207bb:	bb 40 00 00 00       	mov    $0x40,%ebx
   207c0:	4d 89 c3             	mov    %r8,%r11
   207c3:	48 d3 e2             	shl    %cl,%rdx
   207c6:	48 63 c8             	movslq %eax,%rcx
   207c9:	49 89 f1             	mov    %rsi,%r9
   207cc:	48 29 cb             	sub    %rcx,%rbx
   207cf:	89 d9                	mov    %ebx,%ecx
   207d1:	49 d3 eb             	shr    %cl,%r11
   207d4:	89 c1                	mov    %eax,%ecx
   207d6:	49 d3 e0             	shl    %cl,%r8
   207d9:	89 d9                	mov    %ebx,%ecx
   207db:	49 09 d3             	or     %rdx,%r11
   207de:	49 d3 e9             	shr    %cl,%r9
   207e1:	89 c1                	mov    %eax,%ecx
   207e3:	48 89 f8             	mov    %rdi,%rax
   207e6:	48 d3 e6             	shl    %cl,%rsi
   207e9:	89 d9                	mov    %ebx,%ecx
   207eb:	4c 89 ca             	mov    %r9,%rdx
   207ee:	48 d3 e8             	shr    %cl,%rax
   207f1:	48 09 f0             	or     %rsi,%rax
   207f4:	49 f7 f3             	div    %r11
   207f7:	49 89 d1             	mov    %rdx,%r9
   207fa:	48 89 c6             	mov    %rax,%rsi
   207fd:	49 f7 e0             	mul    %r8
   20800:	49 39 d1             	cmp    %rdx,%r9
   20803:	72 1b                	jb     20820 <__udivti3+0xf0>
   20805:	44 89 d1             	mov    %r10d,%ecx
   20808:	48 d3 e7             	shl    %cl,%rdi
   2080b:	48 39 c7             	cmp    %rax,%rdi
   2080e:	73 05                	jae    20815 <__udivti3+0xe5>
   20810:	49 39 d1             	cmp    %rdx,%r9
   20813:	74 0b                	je     20820 <__udivti3+0xf0>
   20815:	48 89 f0             	mov    %rsi,%rax
   20818:	31 d2                	xor    %edx,%edx
   2081a:	5b                   	pop    %rbx
   2081b:	c3                   	retq   
   2081c:	0f 1f 40 00          	nopl   0x0(%rax)
   20820:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   20824:	31 d2                	xor    %edx,%edx
   20826:	5b                   	pop    %rbx
   20827:	c3                   	retq   
   20828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2082f:	00 

0000000000020830 <__libc_csu_init>:
   20830:	f3 0f 1e fa          	endbr64 
   20834:	41 57                	push   %r15
   20836:	4c 8d 3d 73 d4 00 00 	lea    0xd473(%rip),%r15        # 2dcb0 <__frame_dummy_init_array_entry>
   2083d:	41 56                	push   %r14
   2083f:	49 89 d6             	mov    %rdx,%r14
   20842:	41 55                	push   %r13
   20844:	49 89 f5             	mov    %rsi,%r13
   20847:	41 54                	push   %r12
   20849:	41 89 fc             	mov    %edi,%r12d
   2084c:	55                   	push   %rbp
   2084d:	48 8d 2d 64 d4 00 00 	lea    0xd464(%rip),%rbp        # 2dcb8 <__do_global_dtors_aux_fini_array_entry>
   20854:	53                   	push   %rbx
   20855:	4c 29 fd             	sub    %r15,%rbp
   20858:	48 83 ec 08          	sub    $0x8,%rsp
   2085c:	e8 9f 27 fe ff       	callq  3000 <_init>
   20861:	48 c1 fd 03          	sar    $0x3,%rbp
   20865:	74 1f                	je     20886 <__libc_csu_init+0x56>
   20867:	31 db                	xor    %ebx,%ebx
   20869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20870:	4c 89 f2             	mov    %r14,%rdx
   20873:	4c 89 ee             	mov    %r13,%rsi
   20876:	44 89 e7             	mov    %r12d,%edi
   20879:	41 ff 14 df          	callq  *(%r15,%rbx,8)
   2087d:	48 83 c3 01          	add    $0x1,%rbx
   20881:	48 39 dd             	cmp    %rbx,%rbp
   20884:	75 ea                	jne    20870 <__libc_csu_init+0x40>
   20886:	48 83 c4 08          	add    $0x8,%rsp
   2088a:	5b                   	pop    %rbx
   2088b:	5d                   	pop    %rbp
   2088c:	41 5c                	pop    %r12
   2088e:	41 5d                	pop    %r13
   20890:	41 5e                	pop    %r14
   20892:	41 5f                	pop    %r15
   20894:	c3                   	retq   
   20895:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2089c:	00 00 00 00 

00000000000208a0 <__libc_csu_fini>:
   208a0:	f3 0f 1e fa          	endbr64 
   208a4:	c3                   	retq   

Disassembly of section .fini:

00000000000208a8 <_fini>:
   208a8:	f3 0f 1e fa          	endbr64 
   208ac:	48 83 ec 08          	sub    $0x8,%rsp
   208b0:	48 83 c4 08          	add    $0x8,%rsp
   208b4:	c3                   	retq   
