
examples/mbedtls/rsa/app:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	f3 0f 1e fa          	endbr64 
    3004:	48 83 ec 08          	sub    $0x8,%rsp
    3008:	48 8b 05 c9 df 01 00 	mov    0x1dfc9(%rip),%rax        # 20fd8 <__gmon_start__>
    300f:	48 85 c0             	test   %rax,%rax
    3012:	74 02                	je     3016 <_init+0x16>
    3014:	ff d0                	callq  *%rax
    3016:	48 83 c4 08          	add    $0x8,%rsp
    301a:	c3                   	retq   

Disassembly of section .plt:

0000000000003020 <.plt>:
    3020:	ff 35 ba de 01 00    	pushq  0x1deba(%rip)        # 20ee0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	f2 ff 25 bb de 01 00 	bnd jmpq *0x1debb(%rip)        # 20ee8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302d:	0f 1f 00             	nopl   (%rax)
    3030:	f3 0f 1e fa          	endbr64 
    3034:	68 00 00 00 00       	pushq  $0x0
    3039:	f2 e9 e1 ff ff ff    	bnd jmpq 3020 <.plt>
    303f:	90                   	nop
    3040:	f3 0f 1e fa          	endbr64 
    3044:	68 01 00 00 00       	pushq  $0x1
    3049:	f2 e9 d1 ff ff ff    	bnd jmpq 3020 <.plt>
    304f:	90                   	nop
    3050:	f3 0f 1e fa          	endbr64 
    3054:	68 02 00 00 00       	pushq  $0x2
    3059:	f2 e9 c1 ff ff ff    	bnd jmpq 3020 <.plt>
    305f:	90                   	nop
    3060:	f3 0f 1e fa          	endbr64 
    3064:	68 03 00 00 00       	pushq  $0x3
    3069:	f2 e9 b1 ff ff ff    	bnd jmpq 3020 <.plt>
    306f:	90                   	nop
    3070:	f3 0f 1e fa          	endbr64 
    3074:	68 04 00 00 00       	pushq  $0x4
    3079:	f2 e9 a1 ff ff ff    	bnd jmpq 3020 <.plt>
    307f:	90                   	nop
    3080:	f3 0f 1e fa          	endbr64 
    3084:	68 05 00 00 00       	pushq  $0x5
    3089:	f2 e9 91 ff ff ff    	bnd jmpq 3020 <.plt>
    308f:	90                   	nop
    3090:	f3 0f 1e fa          	endbr64 
    3094:	68 06 00 00 00       	pushq  $0x6
    3099:	f2 e9 81 ff ff ff    	bnd jmpq 3020 <.plt>
    309f:	90                   	nop
    30a0:	f3 0f 1e fa          	endbr64 
    30a4:	68 07 00 00 00       	pushq  $0x7
    30a9:	f2 e9 71 ff ff ff    	bnd jmpq 3020 <.plt>
    30af:	90                   	nop
    30b0:	f3 0f 1e fa          	endbr64 
    30b4:	68 08 00 00 00       	pushq  $0x8
    30b9:	f2 e9 61 ff ff ff    	bnd jmpq 3020 <.plt>
    30bf:	90                   	nop
    30c0:	f3 0f 1e fa          	endbr64 
    30c4:	68 09 00 00 00       	pushq  $0x9
    30c9:	f2 e9 51 ff ff ff    	bnd jmpq 3020 <.plt>
    30cf:	90                   	nop
    30d0:	f3 0f 1e fa          	endbr64 
    30d4:	68 0a 00 00 00       	pushq  $0xa
    30d9:	f2 e9 41 ff ff ff    	bnd jmpq 3020 <.plt>
    30df:	90                   	nop
    30e0:	f3 0f 1e fa          	endbr64 
    30e4:	68 0b 00 00 00       	pushq  $0xb
    30e9:	f2 e9 31 ff ff ff    	bnd jmpq 3020 <.plt>
    30ef:	90                   	nop
    30f0:	f3 0f 1e fa          	endbr64 
    30f4:	68 0c 00 00 00       	pushq  $0xc
    30f9:	f2 e9 21 ff ff ff    	bnd jmpq 3020 <.plt>
    30ff:	90                   	nop
    3100:	f3 0f 1e fa          	endbr64 
    3104:	68 0d 00 00 00       	pushq  $0xd
    3109:	f2 e9 11 ff ff ff    	bnd jmpq 3020 <.plt>
    310f:	90                   	nop
    3110:	f3 0f 1e fa          	endbr64 
    3114:	68 0e 00 00 00       	pushq  $0xe
    3119:	f2 e9 01 ff ff ff    	bnd jmpq 3020 <.plt>
    311f:	90                   	nop
    3120:	f3 0f 1e fa          	endbr64 
    3124:	68 0f 00 00 00       	pushq  $0xf
    3129:	f2 e9 f1 fe ff ff    	bnd jmpq 3020 <.plt>
    312f:	90                   	nop
    3130:	f3 0f 1e fa          	endbr64 
    3134:	68 10 00 00 00       	pushq  $0x10
    3139:	f2 e9 e1 fe ff ff    	bnd jmpq 3020 <.plt>
    313f:	90                   	nop
    3140:	f3 0f 1e fa          	endbr64 
    3144:	68 11 00 00 00       	pushq  $0x11
    3149:	f2 e9 d1 fe ff ff    	bnd jmpq 3020 <.plt>
    314f:	90                   	nop
    3150:	f3 0f 1e fa          	endbr64 
    3154:	68 12 00 00 00       	pushq  $0x12
    3159:	f2 e9 c1 fe ff ff    	bnd jmpq 3020 <.plt>
    315f:	90                   	nop
    3160:	f3 0f 1e fa          	endbr64 
    3164:	68 13 00 00 00       	pushq  $0x13
    3169:	f2 e9 b1 fe ff ff    	bnd jmpq 3020 <.plt>
    316f:	90                   	nop
    3170:	f3 0f 1e fa          	endbr64 
    3174:	68 14 00 00 00       	pushq  $0x14
    3179:	f2 e9 a1 fe ff ff    	bnd jmpq 3020 <.plt>
    317f:	90                   	nop
    3180:	f3 0f 1e fa          	endbr64 
    3184:	68 15 00 00 00       	pushq  $0x15
    3189:	f2 e9 91 fe ff ff    	bnd jmpq 3020 <.plt>
    318f:	90                   	nop
    3190:	f3 0f 1e fa          	endbr64 
    3194:	68 16 00 00 00       	pushq  $0x16
    3199:	f2 e9 81 fe ff ff    	bnd jmpq 3020 <.plt>
    319f:	90                   	nop
    31a0:	f3 0f 1e fa          	endbr64 
    31a4:	68 17 00 00 00       	pushq  $0x17
    31a9:	f2 e9 71 fe ff ff    	bnd jmpq 3020 <.plt>
    31af:	90                   	nop
    31b0:	f3 0f 1e fa          	endbr64 
    31b4:	68 18 00 00 00       	pushq  $0x18
    31b9:	f2 e9 61 fe ff ff    	bnd jmpq 3020 <.plt>
    31bf:	90                   	nop
    31c0:	f3 0f 1e fa          	endbr64 
    31c4:	68 19 00 00 00       	pushq  $0x19
    31c9:	f2 e9 51 fe ff ff    	bnd jmpq 3020 <.plt>
    31cf:	90                   	nop
    31d0:	f3 0f 1e fa          	endbr64 
    31d4:	68 1a 00 00 00       	pushq  $0x1a
    31d9:	f2 e9 41 fe ff ff    	bnd jmpq 3020 <.plt>
    31df:	90                   	nop

Disassembly of section .plt.got:

00000000000031e0 <__cxa_finalize@plt>:
    31e0:	f3 0f 1e fa          	endbr64 
    31e4:	f2 ff 25 fd dd 01 00 	bnd jmpq *0x1ddfd(%rip)        # 20fe8 <__cxa_finalize@GLIBC_2.2.5>
    31eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000031f0 <__snprintf_chk@plt>:
    31f0:	f3 0f 1e fa          	endbr64 
    31f4:	f2 ff 25 f5 dc 01 00 	bnd jmpq *0x1dcf5(%rip)        # 20ef0 <__snprintf_chk@GLIBC_2.3.4>
    31fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003200 <free@plt>:
    3200:	f3 0f 1e fa          	endbr64 
    3204:	f2 ff 25 ed dc 01 00 	bnd jmpq *0x1dced(%rip)        # 20ef8 <free@GLIBC_2.2.5>
    320b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003210 <putchar@plt>:
    3210:	f3 0f 1e fa          	endbr64 
    3214:	f2 ff 25 e5 dc 01 00 	bnd jmpq *0x1dce5(%rip)        # 20f00 <putchar@GLIBC_2.2.5>
    321b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003220 <puts@plt>:
    3220:	f3 0f 1e fa          	endbr64 
    3224:	f2 ff 25 dd dc 01 00 	bnd jmpq *0x1dcdd(%rip)        # 20f08 <puts@GLIBC_2.2.5>
    322b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003230 <ferror@plt>:
    3230:	f3 0f 1e fa          	endbr64 
    3234:	f2 ff 25 d5 dc 01 00 	bnd jmpq *0x1dcd5(%rip)        # 20f10 <ferror@GLIBC_2.2.5>
    323b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003240 <fread@plt>:
    3240:	f3 0f 1e fa          	endbr64 
    3244:	f2 ff 25 cd dc 01 00 	bnd jmpq *0x1dccd(%rip)        # 20f18 <fread@GLIBC_2.2.5>
    324b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003250 <clock_gettime@plt>:
    3250:	f3 0f 1e fa          	endbr64 
    3254:	f2 ff 25 c5 dc 01 00 	bnd jmpq *0x1dcc5(%rip)        # 20f20 <clock_gettime@GLIBC_2.17>
    325b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003260 <fclose@plt>:
    3260:	f3 0f 1e fa          	endbr64 
    3264:	f2 ff 25 bd dc 01 00 	bnd jmpq *0x1dcbd(%rip)        # 20f28 <fclose@GLIBC_2.2.5>
    326b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003270 <strlen@plt>:
    3270:	f3 0f 1e fa          	endbr64 
    3274:	f2 ff 25 b5 dc 01 00 	bnd jmpq *0x1dcb5(%rip)        # 20f30 <strlen@GLIBC_2.2.5>
    327b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003280 <__stack_chk_fail@plt>:
    3280:	f3 0f 1e fa          	endbr64 
    3284:	f2 ff 25 ad dc 01 00 	bnd jmpq *0x1dcad(%rip)        # 20f38 <__stack_chk_fail@GLIBC_2.4>
    328b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003290 <setbuf@plt>:
    3290:	f3 0f 1e fa          	endbr64 
    3294:	f2 ff 25 a5 dc 01 00 	bnd jmpq *0x1dca5(%rip)        # 20f40 <setbuf@GLIBC_2.2.5>
    329b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032a0 <gmtime_r@plt>:
    32a0:	f3 0f 1e fa          	endbr64 
    32a4:	f2 ff 25 9d dc 01 00 	bnd jmpq *0x1dc9d(%rip)        # 20f48 <gmtime_r@GLIBC_2.2.5>
    32ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032b0 <memset@plt>:
    32b0:	f3 0f 1e fa          	endbr64 
    32b4:	f2 ff 25 95 dc 01 00 	bnd jmpq *0x1dc95(%rip)        # 20f50 <memset@GLIBC_2.2.5>
    32bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032c0 <memcmp@plt>:
    32c0:	f3 0f 1e fa          	endbr64 
    32c4:	f2 ff 25 8d dc 01 00 	bnd jmpq *0x1dc8d(%rip)        # 20f58 <memcmp@GLIBC_2.2.5>
    32cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032d0 <fgets@plt>:
    32d0:	f3 0f 1e fa          	endbr64 
    32d4:	f2 ff 25 85 dc 01 00 	bnd jmpq *0x1dc85(%rip)        # 20f60 <fgets@GLIBC_2.2.5>
    32db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032e0 <calloc@plt>:
    32e0:	f3 0f 1e fa          	endbr64 
    32e4:	f2 ff 25 7d dc 01 00 	bnd jmpq *0x1dc7d(%rip)        # 20f68 <calloc@GLIBC_2.2.5>
    32eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032f0 <strcmp@plt>:
    32f0:	f3 0f 1e fa          	endbr64 
    32f4:	f2 ff 25 75 dc 01 00 	bnd jmpq *0x1dc75(%rip)        # 20f70 <strcmp@GLIBC_2.2.5>
    32fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003300 <fopen64@plt>:
    3300:	f3 0f 1e fa          	endbr64 
    3304:	f2 ff 25 6d dc 01 00 	bnd jmpq *0x1dc6d(%rip)        # 20f78 <fopen64@GLIBC_2.2.5>
    330b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003310 <strtol@plt>:
    3310:	f3 0f 1e fa          	endbr64 
    3314:	f2 ff 25 65 dc 01 00 	bnd jmpq *0x1dc65(%rip)        # 20f80 <strtol@GLIBC_2.2.5>
    331b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003320 <memcpy@plt>:
    3320:	f3 0f 1e fa          	endbr64 
    3324:	f2 ff 25 5d dc 01 00 	bnd jmpq *0x1dc5d(%rip)        # 20f88 <memcpy@GLIBC_2.14>
    332b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003330 <time@plt>:
    3330:	f3 0f 1e fa          	endbr64 
    3334:	f2 ff 25 55 dc 01 00 	bnd jmpq *0x1dc55(%rip)        # 20f90 <time@GLIBC_2.2.5>
    333b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003340 <malloc@plt>:
    3340:	f3 0f 1e fa          	endbr64 
    3344:	f2 ff 25 4d dc 01 00 	bnd jmpq *0x1dc4d(%rip)        # 20f98 <malloc@GLIBC_2.2.5>
    334b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003350 <__printf_chk@plt>:
    3350:	f3 0f 1e fa          	endbr64 
    3354:	f2 ff 25 45 dc 01 00 	bnd jmpq *0x1dc45(%rip)        # 20fa0 <__printf_chk@GLIBC_2.3.4>
    335b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003360 <memmove@plt>:
    3360:	f3 0f 1e fa          	endbr64 
    3364:	f2 ff 25 3d dc 01 00 	bnd jmpq *0x1dc3d(%rip)        # 20fa8 <memmove@GLIBC_2.2.5>
    336b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003370 <__explicit_bzero_chk@plt>:
    3370:	f3 0f 1e fa          	endbr64 
    3374:	f2 ff 25 35 dc 01 00 	bnd jmpq *0x1dc35(%rip)        # 20fb0 <__explicit_bzero_chk@GLIBC_2.25>
    337b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003380 <fwrite@plt>:
    3380:	f3 0f 1e fa          	endbr64 
    3384:	f2 ff 25 2d dc 01 00 	bnd jmpq *0x1dc2d(%rip)        # 20fb8 <fwrite@GLIBC_2.2.5>
    338b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003390 <rand@plt>:
    3390:	f3 0f 1e fa          	endbr64 
    3394:	f2 ff 25 25 dc 01 00 	bnd jmpq *0x1dc25(%rip)        # 20fc0 <rand@GLIBC_2.2.5>
    339b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000033a0 <main>:
    33a0:	f3 0f 1e fa          	endbr64 
    33a4:	41 56                	push   %r14
    33a6:	41 55                	push   %r13
    33a8:	41 54                	push   %r12
    33aa:	49 89 f4             	mov    %rsi,%r12
    33ad:	53                   	push   %rbx
    33ae:	89 fb                	mov    %edi,%ebx
    33b0:	bf 01 00 00 00       	mov    $0x1,%edi
    33b5:	48 83 ec 48          	sub    $0x48,%rsp
    33b9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    33c0:	00 00 
    33c2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    33c7:	31 c0                	xor    %eax,%eax
    33c9:	48 89 e6             	mov    %rsp,%rsi
    33cc:	e8 7f fe ff ff       	callq  3250 <clock_gettime@plt>
    33d1:	31 c0                	xor    %eax,%eax
    33d3:	e8 48 04 00 00       	callq  3820 <foo>
    33d8:	83 fb 01             	cmp    $0x1,%ebx
    33db:	7f 6f                	jg     344c <main+0xac>
    33dd:	e8 0e 05 00 00       	callq  38f0 <cf_init_target>
    33e2:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    33e7:	45 31 ed             	xor    %r13d,%r13d
    33ea:	45 31 e4             	xor    %r12d,%r12d
    33ed:	bf 01 00 00 00       	mov    $0x1,%edi
    33f2:	e8 59 fe ff ff       	callq  3250 <clock_gettime@plt>
    33f7:	41 83 f4 01          	xor    $0x1,%r12d
    33fb:	48 8d 1d 7e dd 01 00 	lea    0x1dd7e(%rip),%rbx        # 21180 <__TMC_END__>
    3402:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3408:	45 85 ed             	test   %r13d,%r13d
    340b:	40 0f 94 c7          	sete   %dil
    340f:	44 09 e7             	or     %r12d,%edi
    3412:	40 0f b6 ff          	movzbl %dil,%edi
    3416:	e8 25 05 00 00       	callq  3940 <cf_run_target>
    341b:	e8 10 03 00 00       	callq  3730 <drop_taint>
    3420:	48 8d 15 39 dd 01 00 	lea    0x1dd39(%rip),%rdx        # 21160 <m>
    3427:	eb 10                	jmp    3439 <main+0x99>
    3429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3430:	48 83 c2 01          	add    $0x1,%rdx
    3434:	48 39 d3             	cmp    %rdx,%rbx
    3437:	74 05                	je     343e <main+0x9e>
    3439:	80 02 01             	addb   $0x1,(%rdx)
    343c:	74 f2                	je     3430 <main+0x90>
    343e:	41 8d 45 ff          	lea    -0x1(%r13),%eax
    3442:	45 85 ed             	test   %r13d,%r13d
    3445:	7e 79                	jle    34c0 <main+0x120>
    3447:	41 89 c5             	mov    %eax,%r13d
    344a:	eb bc                	jmp    3408 <main+0x68>
    344c:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    3451:	31 f6                	xor    %esi,%esi
    3453:	ba 0a 00 00 00       	mov    $0xa,%edx
    3458:	e8 b3 fe ff ff       	callq  3310 <strtol@plt>
    345d:	48 8d 35 af 4b 01 00 	lea    0x14baf(%rip),%rsi        # 18013 <_IO_stdin_used+0x13>
    3464:	bf 01 00 00 00       	mov    $0x1,%edi
    3469:	49 89 c6             	mov    %rax,%r14
    346c:	89 c2                	mov    %eax,%edx
    346e:	31 c0                	xor    %eax,%eax
    3470:	e8 db fe ff ff       	callq  3350 <__printf_chk@plt>
    3475:	83 fb 02             	cmp    $0x2,%ebx
    3478:	0f 84 67 01 00 00    	je     35e5 <main+0x245>
    347e:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    3483:	48 8d 35 9c 4b 01 00 	lea    0x14b9c(%rip),%rsi        # 18026 <_IO_stdin_used+0x26>
    348a:	45 31 e4             	xor    %r12d,%r12d
    348d:	e8 5e fe ff ff       	callq  32f0 <strcmp@plt>
    3492:	85 c0                	test   %eax,%eax
    3494:	0f 84 34 01 00 00    	je     35ce <main+0x22e>
    349a:	e8 51 04 00 00       	callq  38f0 <cf_init_target>
    349f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    34a4:	bf 01 00 00 00       	mov    $0x1,%edi
    34a9:	45 8d 6e ff          	lea    -0x1(%r14),%r13d
    34ad:	e8 9e fd ff ff       	callq  3250 <clock_gettime@plt>
    34b2:	45 85 f6             	test   %r14d,%r14d
    34b5:	0f 8f 3c ff ff ff    	jg     33f7 <main+0x57>
    34bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34c0:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    34c5:	bf 01 00 00 00       	mov    $0x1,%edi
    34ca:	e8 81 fd ff ff       	callq  3250 <clock_gettime@plt>
    34cf:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    34d4:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    34d9:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    34e0:	9b c4 20 
    34e3:	48 89 f9             	mov    %rdi,%rcx
    34e6:	48 2b 4c 24 08       	sub    0x8(%rsp),%rcx
    34eb:	4d 89 c5             	mov    %r8,%r13
    34ee:	4c 2b 2c 24          	sub    (%rsp),%r13
    34f2:	48 89 c8             	mov    %rcx,%rax
    34f5:	4d 69 ed 40 42 0f 00 	imul   $0xf4240,%r13,%r13
    34fc:	48 c1 f9 3f          	sar    $0x3f,%rcx
    3500:	48 f7 ee             	imul   %rsi
    3503:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3508:	48 29 f8             	sub    %rdi,%rax
    350b:	48 c1 fa 07          	sar    $0x7,%rdx
    350f:	48 89 c7             	mov    %rax,%rdi
    3512:	48 29 ca             	sub    %rcx,%rdx
    3515:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    351a:	48 c1 ff 3f          	sar    $0x3f,%rdi
    351e:	49 01 d5             	add    %rdx,%r13
    3521:	48 f7 ee             	imul   %rsi
    3524:	4c 29 c1             	sub    %r8,%rcx
    3527:	48 69 c9 40 42 0f 00 	imul   $0xf4240,%rcx,%rcx
    352e:	48 89 d6             	mov    %rdx,%rsi
    3531:	48 c1 fe 07          	sar    $0x7,%rsi
    3535:	48 29 fe             	sub    %rdi,%rsi
    3538:	bf 0a 00 00 00       	mov    $0xa,%edi
    353d:	4c 8d 24 31          	lea    (%rcx,%rsi,1),%r12
    3541:	e8 ca fc ff ff       	callq  3210 <putchar@plt>
    3546:	41 b8 09 00 00 00    	mov    $0x9,%r8d
    354c:	4c 89 e9             	mov    %r13,%rcx
    354f:	ba 09 00 00 00       	mov    $0x9,%edx
    3554:	48 8d 35 e5 4a 01 00 	lea    0x14ae5(%rip),%rsi        # 18040 <_IO_stdin_used+0x40>
    355b:	bf 01 00 00 00       	mov    $0x1,%edi
    3560:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3564:	b8 01 00 00 00       	mov    $0x1,%eax
    3569:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    356e:	f2 0f 5e 05 1a 4b 01 	divsd  0x14b1a(%rip),%xmm0        # 18090 <bits+0x10>
    3575:	00 
    3576:	e8 d5 fd ff ff       	callq  3350 <__printf_chk@plt>
    357b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    357f:	41 b8 09 00 00 00    	mov    $0x9,%r8d
    3585:	4c 89 e1             	mov    %r12,%rcx
    3588:	ba 09 00 00 00       	mov    $0x9,%edx
    358d:	bf 01 00 00 00       	mov    $0x1,%edi
    3592:	b8 01 00 00 00       	mov    $0x1,%eax
    3597:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
    359c:	48 8d 35 bd 4a 01 00 	lea    0x14abd(%rip),%rsi        # 18060 <_IO_stdin_used+0x60>
    35a3:	f2 0f 5e 05 e5 4a 01 	divsd  0x14ae5(%rip),%xmm0        # 18090 <bits+0x10>
    35aa:	00 
    35ab:	e8 a0 fd ff ff       	callq  3350 <__printf_chk@plt>
    35b0:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    35b5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    35bc:	00 00 
    35be:	75 2d                	jne    35ed <main+0x24d>
    35c0:	48 83 c4 48          	add    $0x48,%rsp
    35c4:	31 c0                	xor    %eax,%eax
    35c6:	5b                   	pop    %rbx
    35c7:	41 5c                	pop    %r12
    35c9:	41 5d                	pop    %r13
    35cb:	41 5e                	pop    %r14
    35cd:	c3                   	retq   
    35ce:	48 8d 3d 56 4a 01 00 	lea    0x14a56(%rip),%rdi        # 1802b <_IO_stdin_used+0x2b>
    35d5:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    35db:	e8 40 fc ff ff       	callq  3220 <puts@plt>
    35e0:	e9 b5 fe ff ff       	jmpq   349a <main+0xfa>
    35e5:	45 31 e4             	xor    %r12d,%r12d
    35e8:	e9 ad fe ff ff       	jmpq   349a <main+0xfa>
    35ed:	e8 8e fc ff ff       	callq  3280 <__stack_chk_fail@plt>
    35f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    35f9:	00 00 00 
    35fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003600 <_start>:
    3600:	f3 0f 1e fa          	endbr64 
    3604:	31 ed                	xor    %ebp,%ebp
    3606:	49 89 d1             	mov    %rdx,%r9
    3609:	5e                   	pop    %rsi
    360a:	48 89 e2             	mov    %rsp,%rdx
    360d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    3611:	50                   	push   %rax
    3612:	54                   	push   %rsp
    3613:	4c 8d 05 56 3d 01 00 	lea    0x13d56(%rip),%r8        # 17370 <__libc_csu_fini>
    361a:	48 8d 0d df 3c 01 00 	lea    0x13cdf(%rip),%rcx        # 17300 <__libc_csu_init>
    3621:	48 8d 3d 78 fd ff ff 	lea    -0x288(%rip),%rdi        # 33a0 <main>
    3628:	ff 15 a2 d9 01 00    	callq  *0x1d9a2(%rip)        # 20fd0 <__libc_start_main@GLIBC_2.2.5>
    362e:	f4                   	hlt    
    362f:	90                   	nop

0000000000003630 <deregister_tm_clones>:
    3630:	48 8d 3d 49 db 01 00 	lea    0x1db49(%rip),%rdi        # 21180 <__TMC_END__>
    3637:	48 8d 05 42 db 01 00 	lea    0x1db42(%rip),%rax        # 21180 <__TMC_END__>
    363e:	48 39 f8             	cmp    %rdi,%rax
    3641:	74 15                	je     3658 <deregister_tm_clones+0x28>
    3643:	48 8b 05 7e d9 01 00 	mov    0x1d97e(%rip),%rax        # 20fc8 <_ITM_deregisterTMCloneTable>
    364a:	48 85 c0             	test   %rax,%rax
    364d:	74 09                	je     3658 <deregister_tm_clones+0x28>
    364f:	ff e0                	jmpq   *%rax
    3651:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3658:	c3                   	retq   
    3659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003660 <register_tm_clones>:
    3660:	48 8d 3d 19 db 01 00 	lea    0x1db19(%rip),%rdi        # 21180 <__TMC_END__>
    3667:	48 8d 35 12 db 01 00 	lea    0x1db12(%rip),%rsi        # 21180 <__TMC_END__>
    366e:	48 29 fe             	sub    %rdi,%rsi
    3671:	48 89 f0             	mov    %rsi,%rax
    3674:	48 c1 ee 3f          	shr    $0x3f,%rsi
    3678:	48 c1 f8 03          	sar    $0x3,%rax
    367c:	48 01 c6             	add    %rax,%rsi
    367f:	48 d1 fe             	sar    %rsi
    3682:	74 14                	je     3698 <register_tm_clones+0x38>
    3684:	48 8b 05 55 d9 01 00 	mov    0x1d955(%rip),%rax        # 20fe0 <_ITM_registerTMCloneTable>
    368b:	48 85 c0             	test   %rax,%rax
    368e:	74 08                	je     3698 <register_tm_clones+0x38>
    3690:	ff e0                	jmpq   *%rax
    3692:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3698:	c3                   	retq   
    3699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036a0 <__do_global_dtors_aux>:
    36a0:	f3 0f 1e fa          	endbr64 
    36a4:	80 3d d5 da 01 00 00 	cmpb   $0x0,0x1dad5(%rip)        # 21180 <__TMC_END__>
    36ab:	75 2b                	jne    36d8 <__do_global_dtors_aux+0x38>
    36ad:	55                   	push   %rbp
    36ae:	48 83 3d 32 d9 01 00 	cmpq   $0x0,0x1d932(%rip)        # 20fe8 <__cxa_finalize@GLIBC_2.2.5>
    36b5:	00 
    36b6:	48 89 e5             	mov    %rsp,%rbp
    36b9:	74 0c                	je     36c7 <__do_global_dtors_aux+0x27>
    36bb:	48 8b 3d 46 d9 01 00 	mov    0x1d946(%rip),%rdi        # 21008 <__dso_handle>
    36c2:	e8 19 fb ff ff       	callq  31e0 <__cxa_finalize@plt>
    36c7:	e8 64 ff ff ff       	callq  3630 <deregister_tm_clones>
    36cc:	c6 05 ad da 01 00 01 	movb   $0x1,0x1daad(%rip)        # 21180 <__TMC_END__>
    36d3:	5d                   	pop    %rbp
    36d4:	c3                   	retq   
    36d5:	0f 1f 00             	nopl   (%rax)
    36d8:	c3                   	retq   
    36d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036e0 <frame_dummy>:
    36e0:	f3 0f 1e fa          	endbr64 
    36e4:	e9 77 ff ff ff       	jmpq   3660 <register_tm_clones>
    36e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036f0 <classify>:
    36f0:	f3 0f 1e fa          	endbr64 
    36f4:	55                   	push   %rbp
    36f5:	48 89 e5             	mov    %rsp,%rbp
    36f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36fc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    36ff:	90                   	nop
    3700:	5d                   	pop    %rbp
    3701:	c3                   	retq   
    3702:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3709:	00 00 00 00 
    370d:	0f 1f 00             	nopl   (%rax)

0000000000003710 <declassify>:
    3710:	f3 0f 1e fa          	endbr64 
    3714:	55                   	push   %rbp
    3715:	48 89 e5             	mov    %rsp,%rbp
    3718:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    371c:	89 75 f4             	mov    %esi,-0xc(%rbp)
    371f:	90                   	nop
    3720:	5d                   	pop    %rbp
    3721:	c3                   	retq   
    3722:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3729:	00 00 00 00 
    372d:	0f 1f 00             	nopl   (%rax)

0000000000003730 <drop_taint>:
    3730:	f3 0f 1e fa          	endbr64 
    3734:	55                   	push   %rbp
    3735:	48 89 e5             	mov    %rsp,%rbp
    3738:	90                   	nop
    3739:	5d                   	pop    %rbp
    373a:	c3                   	retq   
    373b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003740 <dump_secret>:
    3740:	f3 0f 1e fa          	endbr64 
    3744:	41 57                	push   %r15
    3746:	49 89 ff             	mov    %rdi,%r15
    3749:	41 56                	push   %r14
    374b:	49 89 d6             	mov    %rdx,%r14
    374e:	48 63 d6             	movslq %esi,%rdx
    3751:	41 55                	push   %r13
    3753:	48 89 d7             	mov    %rdx,%rdi
    3756:	41 54                	push   %r12
    3758:	53                   	push   %rbx
    3759:	89 f3                	mov    %esi,%ebx
    375b:	48 83 ec 10          	sub    $0x10,%rsp
    375f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3764:	e8 d7 fb ff ff       	callq  3340 <malloc@plt>
    3769:	bf 04 00 00 00       	mov    $0x4,%edi
    376e:	49 89 c5             	mov    %rax,%r13
    3771:	e8 ca fb ff ff       	callq  3340 <malloc@plt>
    3776:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    377b:	4c 89 fe             	mov    %r15,%rsi
    377e:	4c 89 ef             	mov    %r13,%rdi
    3781:	49 89 c4             	mov    %rax,%r12
    3784:	e8 97 fb ff ff       	callq  3320 <memcpy@plt>
    3789:	be 04 00 00 00       	mov    $0x4,%esi
    378e:	4c 89 e7             	mov    %r12,%rdi
    3791:	41 89 1c 24          	mov    %ebx,(%r12)
    3795:	e8 76 ff ff ff       	callq  3710 <declassify>
    379a:	41 8b 34 24          	mov    (%r12),%esi
    379e:	4c 89 ef             	mov    %r13,%rdi
    37a1:	e8 6a ff ff ff       	callq  3710 <declassify>
    37a6:	4d 85 f6             	test   %r14,%r14
    37a9:	74 16                	je     37c1 <dump_secret+0x81>
    37ab:	4c 89 f2             	mov    %r14,%rdx
    37ae:	48 8d 35 53 48 01 00 	lea    0x14853(%rip),%rsi        # 18008 <_IO_stdin_used+0x8>
    37b5:	bf 01 00 00 00       	mov    $0x1,%edi
    37ba:	31 c0                	xor    %eax,%eax
    37bc:	e8 8f fb ff ff       	callq  3350 <__printf_chk@plt>
    37c1:	41 8b 04 24          	mov    (%r12),%eax
    37c5:	85 c0                	test   %eax,%eax
    37c7:	7e 2e                	jle    37f7 <dump_secret+0xb7>
    37c9:	31 db                	xor    %ebx,%ebx
    37cb:	4c 8d 35 3b 48 01 00 	lea    0x1483b(%rip),%r14        # 1800d <_IO_stdin_used+0xd>
    37d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    37d8:	41 0f b6 54 1d 00    	movzbl 0x0(%r13,%rbx,1),%edx
    37de:	4c 89 f6             	mov    %r14,%rsi
    37e1:	bf 01 00 00 00       	mov    $0x1,%edi
    37e6:	31 c0                	xor    %eax,%eax
    37e8:	48 83 c3 01          	add    $0x1,%rbx
    37ec:	e8 5f fb ff ff       	callq  3350 <__printf_chk@plt>
    37f1:	41 39 1c 24          	cmp    %ebx,(%r12)
    37f5:	7f e1                	jg     37d8 <dump_secret+0x98>
    37f7:	bf 0a 00 00 00       	mov    $0xa,%edi
    37fc:	e8 0f fa ff ff       	callq  3210 <putchar@plt>
    3801:	4c 89 ef             	mov    %r13,%rdi
    3804:	e8 f7 f9 ff ff       	callq  3200 <free@plt>
    3809:	48 83 c4 10          	add    $0x10,%rsp
    380d:	5b                   	pop    %rbx
    380e:	41 5c                	pop    %r12
    3810:	41 5d                	pop    %r13
    3812:	41 5e                	pop    %r14
    3814:	41 5f                	pop    %r15
    3816:	c3                   	retq   
    3817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    381e:	00 00 

0000000000003820 <foo>:
    3820:	f3 0f 1e fa          	endbr64 
    3824:	55                   	push   %rbp
    3825:	48 89 e5             	mov    %rsp,%rbp
    3828:	48 83 ec 10          	sub    $0x10,%rsp
    382c:	bf 04 00 00 00       	mov    $0x4,%edi
    3831:	e8 0a fb ff ff       	callq  3340 <malloc@plt>
    3836:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    383a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    383e:	48 89 c7             	mov    %rax,%rdi
    3841:	e8 ba f9 ff ff       	callq  3200 <free@plt>
    3846:	90                   	nop
    3847:	c9                   	leaveq 
    3848:	c3                   	retq   
    3849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003850 <myrng>:
    3850:	f3 0f 1e fa          	endbr64 
    3854:	48 85 d2             	test   %rdx,%rdx
    3857:	0f 84 8c 00 00 00    	je     38e9 <myrng+0x99>
    385d:	41 57                	push   %r15
    385f:	45 31 ff             	xor    %r15d,%r15d
    3862:	41 56                	push   %r14
    3864:	49 89 f6             	mov    %rsi,%r14
    3867:	41 55                	push   %r13
    3869:	49 89 d5             	mov    %rdx,%r13
    386c:	41 54                	push   %r12
    386e:	4c 8d 25 ab da 01 00 	lea    0x1daab(%rip),%r12        # 21320 <rngCtx>
    3875:	53                   	push   %rbx
    3876:	31 db                	xor    %ebx,%ebx
    3878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    387f:	00 
    3880:	31 f6                	xor    %esi,%esi
    3882:	4c 89 e7             	mov    %r12,%rdi
    3885:	e8 86 44 00 00       	callq  7d10 <mbedtls_sha256_starts>
    388a:	48 8d 35 0f d9 01 00 	lea    0x1d90f(%rip),%rsi        # 211a0 <rngState>
    3891:	4c 89 e7             	mov    %r12,%rdi
    3894:	ba 20 00 00 00       	mov    $0x20,%edx
    3899:	e8 52 52 00 00       	callq  8af0 <mbedtls_sha256_update>
    389e:	48 8d 35 fb d8 01 00 	lea    0x1d8fb(%rip),%rsi        # 211a0 <rngState>
    38a5:	4c 89 e7             	mov    %r12,%rdi
    38a8:	e8 63 52 00 00       	callq  8b10 <mbedtls_sha256_finish>
    38ad:	49 39 dd             	cmp    %rbx,%r13
    38b0:	76 1f                	jbe    38d1 <myrng+0x81>
    38b2:	48 8d 0d e7 d8 01 00 	lea    0x1d8e7(%rip),%rcx        # 211a0 <rngState>
    38b9:	48 89 d8             	mov    %rbx,%rax
    38bc:	48 29 d9             	sub    %rbx,%rcx
    38bf:	90                   	nop
    38c0:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
    38c4:	41 88 14 06          	mov    %dl,(%r14,%rax,1)
    38c8:	48 83 c0 01          	add    $0x1,%rax
    38cc:	49 39 c5             	cmp    %rax,%r13
    38cf:	75 ef                	jne    38c0 <myrng+0x70>
    38d1:	41 83 c7 20          	add    $0x20,%r15d
    38d5:	49 63 df             	movslq %r15d,%rbx
    38d8:	4c 39 eb             	cmp    %r13,%rbx
    38db:	72 a3                	jb     3880 <myrng+0x30>
    38dd:	5b                   	pop    %rbx
    38de:	31 c0                	xor    %eax,%eax
    38e0:	41 5c                	pop    %r12
    38e2:	41 5d                	pop    %r13
    38e4:	41 5e                	pop    %r14
    38e6:	41 5f                	pop    %r15
    38e8:	c3                   	retq   
    38e9:	31 c0                	xor    %eax,%eax
    38eb:	c3                   	retq   
    38ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000038f0 <cf_init_target>:
    38f0:	f3 0f 1e fa          	endbr64 
    38f4:	41 54                	push   %r12
    38f6:	48 8d 3d 23 da 01 00 	lea    0x1da23(%rip),%rdi        # 21320 <rngCtx>
    38fd:	e8 6e 43 00 00       	callq  7c70 <mbedtls_sha256_init>
    3902:	bf 00 04 00 00       	mov    $0x400,%edi
    3907:	e8 34 fa ff ff       	callq  3340 <malloc@plt>
    390c:	ba 00 04 00 00       	mov    $0x400,%edx
    3911:	31 ff                	xor    %edi,%edi
    3913:	49 89 c4             	mov    %rax,%r12
    3916:	48 89 c6             	mov    %rax,%rsi
    3919:	e8 32 ff ff ff       	callq  3850 <myrng>
    391e:	4c 89 e7             	mov    %r12,%rdi
    3921:	e8 da f8 ff ff       	callq  3200 <free@plt>
    3926:	48 8d 3d 93 d8 01 00 	lea    0x1d893(%rip),%rdi        # 211c0 <rsa>
    392d:	e8 7e 11 00 00       	callq  4ab0 <mbedtls_rsa_init>
    3932:	41 5c                	pop    %r12
    3934:	c3                   	retq   
    3935:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    393c:	00 00 00 00 

0000000000003940 <cf_run_target>:
    3940:	f3 0f 1e fa          	endbr64 
    3944:	41 54                	push   %r12
    3946:	be 40 00 00 00       	mov    $0x40,%esi
    394b:	53                   	push   %rbx
    394c:	89 fb                	mov    %edi,%ebx
    394e:	48 8d 3d 0b d7 01 00 	lea    0x1d70b(%rip),%rdi        # 21060 <rsaP>
    3955:	48 83 ec 08          	sub    $0x8,%rsp
    3959:	e8 92 fd ff ff       	callq  36f0 <classify>
    395e:	be 40 00 00 00       	mov    $0x40,%esi
    3963:	48 8d 3d 36 d7 01 00 	lea    0x1d736(%rip),%rdi        # 210a0 <rsaQ>
    396a:	e8 81 fd ff ff       	callq  36f0 <classify>
    396f:	be 40 00 00 00       	mov    $0x40,%esi
    3974:	48 8d 3d 65 d7 01 00 	lea    0x1d765(%rip),%rdi        # 210e0 <rsaD>
    397b:	e8 70 fd ff ff       	callq  36f0 <classify>
    3980:	48 83 ec 30          	sub    $0x30,%rsp
    3984:	ba 40 00 00 00       	mov    $0x40,%edx
    3989:	48 8d 05 90 d7 01 00 	lea    0x1d790(%rip),%rax        # 21120 <rsaE>
    3990:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3995:	48 8d 05 44 d7 01 00 	lea    0x1d744(%rip),%rax        # 210e0 <rsaD>
    399c:	4c 8d 0d fd d6 01 00 	lea    0x1d6fd(%rip),%r9        # 210a0 <rsaQ>
    39a3:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    39a9:	48 c7 44 24 20 40 00 	movq   $0x40,0x20(%rsp)
    39b0:	00 00 
    39b2:	48 8d 0d a7 d6 01 00 	lea    0x1d6a7(%rip),%rcx        # 21060 <rsaP>
    39b9:	48 8d 35 60 d6 01 00 	lea    0x1d660(%rip),%rsi        # 21020 <rsaN>
    39c0:	48 c7 44 24 10 40 00 	movq   $0x40,0x10(%rsp)
    39c7:	00 00 
    39c9:	48 8d 3d f0 d7 01 00 	lea    0x1d7f0(%rip),%rdi        # 211c0 <rsa>
    39d0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    39d5:	48 c7 04 24 40 00 00 	movq   $0x40,(%rsp)
    39dc:	00 
    39dd:	e8 ee 08 00 00       	callq  42d0 <mbedtls_rsa_import_raw>
    39e2:	48 83 c4 30          	add    $0x30,%rsp
    39e6:	48 8d 3d d3 d7 01 00 	lea    0x1d7d3(%rip),%rdi        # 211c0 <rsa>
    39ed:	e8 ae 09 00 00       	callq  43a0 <mbedtls_rsa_complete>
    39f2:	bf 40 00 00 00       	mov    $0x40,%edi
    39f7:	e8 44 f9 ff ff       	callq  3340 <malloc@plt>
    39fc:	48 83 ec 10          	sub    $0x10,%rsp
    3a00:	31 d2                	xor    %edx,%edx
    3a02:	31 c9                	xor    %ecx,%ecx
    3a04:	48 89 04 24          	mov    %rax,(%rsp)
    3a08:	41 b8 20 00 00 00    	mov    $0x20,%r8d
    3a0e:	4c 8d 0d 4b d7 01 00 	lea    0x1d74b(%rip),%r9        # 21160 <m>
    3a15:	48 8d 35 34 fe ff ff 	lea    -0x1cc(%rip),%rsi        # 3850 <myrng>
    3a1c:	48 8d 3d 9d d7 01 00 	lea    0x1d79d(%rip),%rdi        # 211c0 <rsa>
    3a23:	49 89 c4             	mov    %rax,%r12
    3a26:	e8 05 2b 00 00       	callq  6530 <mbedtls_rsa_pkcs1_sign>
    3a2b:	58                   	pop    %rax
    3a2c:	5a                   	pop    %rdx
    3a2d:	84 db                	test   %bl,%bl
    3a2f:	75 17                	jne    3a48 <cf_run_target+0x108>
    3a31:	4c 89 e7             	mov    %r12,%rdi
    3a34:	e8 c7 f7 ff ff       	callq  3200 <free@plt>
    3a39:	48 83 c4 08          	add    $0x8,%rsp
    3a3d:	5b                   	pop    %rbx
    3a3e:	41 5c                	pop    %r12
    3a40:	c3                   	retq   
    3a41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3a48:	4c 89 e7             	mov    %r12,%rdi
    3a4b:	48 8d 15 32 46 01 00 	lea    0x14632(%rip),%rdx        # 18084 <bits+0x4>
    3a52:	be 40 00 00 00       	mov    $0x40,%esi
    3a57:	e8 e4 fc ff ff       	callq  3740 <dump_secret>
    3a5c:	4c 89 e7             	mov    %r12,%rdi
    3a5f:	e8 9c f7 ff ff       	callq  3200 <free@plt>
    3a64:	48 83 c4 08          	add    $0x8,%rsp
    3a68:	5b                   	pop    %rbx
    3a69:	41 5c                	pop    %r12
    3a6b:	c3                   	retq   
    3a6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003a70 <cf_prepare_next>:
    3a70:	f3 0f 1e fa          	endbr64 
    3a74:	48 8d 15 e5 d6 01 00 	lea    0x1d6e5(%rip),%rdx        # 21160 <m>
    3a7b:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    3a7f:	eb 10                	jmp    3a91 <cf_prepare_next+0x21>
    3a81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3a88:	48 83 c2 01          	add    $0x1,%rdx
    3a8c:	48 39 ca             	cmp    %rcx,%rdx
    3a8f:	74 05                	je     3a96 <cf_prepare_next+0x26>
    3a91:	80 02 01             	addb   $0x1,(%rdx)
    3a94:	74 f2                	je     3a88 <cf_prepare_next+0x18>
    3a96:	c3                   	retq   
    3a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3a9e:	00 00 

0000000000003aa0 <hash_mprime>:
    3aa0:	41 57                	push   %r15
    3aa2:	49 89 cf             	mov    %rcx,%r15
    3aa5:	41 56                	push   %r14
    3aa7:	41 55                	push   %r13
    3aa9:	49 89 f5             	mov    %rsi,%r13
    3aac:	41 54                	push   %r12
    3aae:	55                   	push   %rbp
    3aaf:	48 89 fd             	mov    %rdi,%rbp
    3ab2:	44 89 cf             	mov    %r9d,%edi
    3ab5:	53                   	push   %rbx
    3ab6:	48 89 d3             	mov    %rdx,%rbx
    3ab9:	48 83 ec 48          	sub    $0x48,%rsp
    3abd:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    3ac2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3ac9:	00 00 
    3acb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    3ad0:	31 c0                	xor    %eax,%eax
    3ad2:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    3ad9:	00 00 
    3adb:	e8 60 c7 00 00       	callq  10240 <mbedtls_md_info_from_type>
    3ae0:	48 85 c0             	test   %rax,%rax
    3ae3:	0f 84 c2 00 00 00    	je     3bab <hash_mprime+0x10b>
    3ae9:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    3aee:	49 89 c4             	mov    %rax,%r12
    3af1:	4c 89 f7             	mov    %r14,%rdi
    3af4:	e8 d7 c7 00 00       	callq  102d0 <mbedtls_md_init>
    3af9:	4c 89 e6             	mov    %r12,%rsi
    3afc:	31 d2                	xor    %edx,%edx
    3afe:	4c 89 f7             	mov    %r14,%rdi
    3b01:	e8 ba c9 00 00       	callq  104c0 <mbedtls_md_setup>
    3b06:	41 89 c4             	mov    %eax,%r12d
    3b09:	85 c0                	test   %eax,%eax
    3b0b:	74 33                	je     3b40 <hash_mprime+0xa0>
    3b0d:	4c 89 f7             	mov    %r14,%rdi
    3b10:	e8 db c7 00 00       	callq  102f0 <mbedtls_md_free>
    3b15:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3b1a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3b21:	00 00 
    3b23:	0f 85 8d 00 00 00    	jne    3bb6 <hash_mprime+0x116>
    3b29:	48 83 c4 48          	add    $0x48,%rsp
    3b2d:	44 89 e0             	mov    %r12d,%eax
    3b30:	5b                   	pop    %rbx
    3b31:	5d                   	pop    %rbp
    3b32:	41 5c                	pop    %r12
    3b34:	41 5d                	pop    %r13
    3b36:	41 5e                	pop    %r14
    3b38:	41 5f                	pop    %r15
    3b3a:	c3                   	retq   
    3b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3b40:	4c 89 f7             	mov    %r14,%rdi
    3b43:	e8 e8 ca 00 00       	callq  10630 <mbedtls_md_starts>
    3b48:	41 89 c4             	mov    %eax,%r12d
    3b4b:	85 c0                	test   %eax,%eax
    3b4d:	75 be                	jne    3b0d <hash_mprime+0x6d>
    3b4f:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
    3b54:	ba 08 00 00 00       	mov    $0x8,%edx
    3b59:	4c 89 f7             	mov    %r14,%rdi
    3b5c:	e8 8f cb 00 00       	callq  106f0 <mbedtls_md_update>
    3b61:	41 89 c4             	mov    %eax,%r12d
    3b64:	85 c0                	test   %eax,%eax
    3b66:	75 a5                	jne    3b0d <hash_mprime+0x6d>
    3b68:	4c 89 ea             	mov    %r13,%rdx
    3b6b:	48 89 ee             	mov    %rbp,%rsi
    3b6e:	4c 89 f7             	mov    %r14,%rdi
    3b71:	e8 7a cb 00 00       	callq  106f0 <mbedtls_md_update>
    3b76:	41 89 c4             	mov    %eax,%r12d
    3b79:	85 c0                	test   %eax,%eax
    3b7b:	75 90                	jne    3b0d <hash_mprime+0x6d>
    3b7d:	4c 89 fa             	mov    %r15,%rdx
    3b80:	48 89 de             	mov    %rbx,%rsi
    3b83:	4c 89 f7             	mov    %r14,%rdi
    3b86:	e8 65 cb 00 00       	callq  106f0 <mbedtls_md_update>
    3b8b:	41 89 c4             	mov    %eax,%r12d
    3b8e:	85 c0                	test   %eax,%eax
    3b90:	0f 85 77 ff ff ff    	jne    3b0d <hash_mprime+0x6d>
    3b96:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    3b9b:	4c 89 f7             	mov    %r14,%rdi
    3b9e:	e8 cd cb 00 00       	callq  10770 <mbedtls_md_finish>
    3ba3:	41 89 c4             	mov    %eax,%r12d
    3ba6:	e9 62 ff ff ff       	jmpq   3b0d <hash_mprime+0x6d>
    3bab:	41 bc 80 bf ff ff    	mov    $0xffffbf80,%r12d
    3bb1:	e9 5f ff ff ff       	jmpq   3b15 <hash_mprime+0x75>
    3bb6:	e8 c5 f6 ff ff       	callq  3280 <__stack_chk_fail@plt>
    3bbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003bc0 <rsa_rsassa_pkcs1_v15_encode>:
    3bc0:	41 57                	push   %r15
    3bc2:	41 56                	push   %r14
    3bc4:	4d 89 c6             	mov    %r8,%r14
    3bc7:	41 55                	push   %r13
    3bc9:	49 89 d5             	mov    %rdx,%r13
    3bcc:	41 54                	push   %r12
    3bce:	55                   	push   %rbp
    3bcf:	48 89 cd             	mov    %rcx,%rbp
    3bd2:	53                   	push   %rbx
    3bd3:	89 f3                	mov    %esi,%ebx
    3bd5:	48 83 ec 38          	sub    $0x38,%rsp
    3bd9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3be0:	00 00 
    3be2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3be7:	31 c0                	xor    %eax,%eax
    3be9:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    3bf0:	00 00 
    3bf2:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    3bf9:	00 00 
    3bfb:	85 ff                	test   %edi,%edi
    3bfd:	0f 85 7d 00 00 00    	jne    3c80 <rsa_rsassa_pkcs1_v15_encode+0xc0>
    3c03:	41 89 f4             	mov    %esi,%r12d
    3c06:	49 39 cc             	cmp    %rcx,%r12
    3c09:	77 09                	ja     3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3c0b:	4c 29 e5             	sub    %r12,%rbp
    3c0e:	48 83 fd 0a          	cmp    $0xa,%rbp
    3c12:	77 2c                	ja     3c40 <rsa_rsassa_pkcs1_v15_encode+0x80>
    3c14:	41 bf 80 bf ff ff    	mov    $0xffffbf80,%r15d
    3c1a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3c1f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3c26:	00 00 
    3c28:	0f 85 08 02 00 00    	jne    3e36 <rsa_rsassa_pkcs1_v15_encode+0x276>
    3c2e:	48 83 c4 38          	add    $0x38,%rsp
    3c32:	44 89 f8             	mov    %r15d,%eax
    3c35:	5b                   	pop    %rbx
    3c36:	5d                   	pop    %rbp
    3c37:	41 5c                	pop    %r12
    3c39:	41 5d                	pop    %r13
    3c3b:	41 5e                	pop    %r14
    3c3d:	41 5f                	pop    %r15
    3c3f:	c3                   	retq   
    3c40:	b8 00 01 00 00       	mov    $0x100,%eax
    3c45:	48 83 ed 03          	sub    $0x3,%rbp
    3c49:	49 8d 78 02          	lea    0x2(%r8),%rdi
    3c4d:	45 31 ff             	xor    %r15d,%r15d
    3c50:	66 41 89 00          	mov    %ax,(%r8)
    3c54:	48 89 ea             	mov    %rbp,%rdx
    3c57:	be ff 00 00 00       	mov    $0xff,%esi
    3c5c:	e8 4f f6 ff ff       	callq  32b0 <memset@plt>
    3c61:	4c 89 e2             	mov    %r12,%rdx
    3c64:	4c 89 ee             	mov    %r13,%rsi
    3c67:	48 01 c5             	add    %rax,%rbp
    3c6a:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
    3c6e:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
    3c72:	e8 a9 f6 ff ff       	callq  3320 <memcpy@plt>
    3c77:	eb a1                	jmp    3c1a <rsa_rsassa_pkcs1_v15_encode+0x5a>
    3c79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3c80:	41 89 ff             	mov    %edi,%r15d
    3c83:	e8 38 c4 00 00       	callq  100c0 <mbedtls_hash_info_get_size>
    3c88:	41 89 c4             	mov    %eax,%r12d
    3c8b:	84 c0                	test   %al,%al
    3c8d:	74 85                	je     3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3c8f:	44 89 ff             	mov    %r15d,%edi
    3c92:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    3c97:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    3c9c:	e8 df e8 00 00       	callq  12580 <mbedtls_oid_get_oid_by_md>
    3ca1:	41 89 c7             	mov    %eax,%r15d
    3ca4:	85 c0                	test   %eax,%eax
    3ca6:	0f 85 68 ff ff ff    	jne    3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3cac:	41 0f b6 c4          	movzbl %r12b,%eax
    3cb0:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3cb4:	39 d8                	cmp    %ebx,%eax
    3cb6:	0f 85 58 ff ff ff    	jne    3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3cbc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3cc1:	8d 53 08             	lea    0x8(%rbx),%edx
    3cc4:	48 01 c2             	add    %rax,%rdx
    3cc7:	48 83 fa 7f          	cmp    $0x7f,%rdx
    3ccb:	0f 87 43 ff ff ff    	ja     3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3cd1:	8d 53 0a             	lea    0xa(%rbx),%edx
    3cd4:	48 01 d0             	add    %rdx,%rax
    3cd7:	0f 92 c2             	setb   %dl
    3cda:	0f b6 d2             	movzbl %dl,%edx
    3cdd:	48 39 e8             	cmp    %rbp,%rax
    3ce0:	0f 87 2e ff ff ff    	ja     3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3ce6:	48 85 d2             	test   %rdx,%rdx
    3ce9:	0f 85 25 ff ff ff    	jne    3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3cef:	48 89 ee             	mov    %rbp,%rsi
    3cf2:	48 29 c6             	sub    %rax,%rsi
    3cf5:	48 83 fe 0a          	cmp    $0xa,%rsi
    3cf9:	0f 86 15 ff ff ff    	jbe    3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3cff:	ba 00 01 00 00       	mov    $0x100,%edx
    3d04:	4c 8d 66 fd          	lea    -0x3(%rsi),%r12
    3d08:	49 8d 4e 02          	lea    0x2(%r14),%rcx
    3d0c:	be ff 00 00 00       	mov    $0xff,%esi
    3d11:	66 41 89 16          	mov    %dx,(%r14)
    3d15:	48 89 cf             	mov    %rcx,%rdi
    3d18:	4c 89 e2             	mov    %r12,%rdx
    3d1b:	e8 90 f5 ff ff       	callq  32b0 <memset@plt>
    3d20:	b9 00 30 00 00       	mov    $0x3000,%ecx
    3d25:	4a 8d 04 20          	lea    (%rax,%r12,1),%rax
    3d29:	66 89 08             	mov    %cx,(%rax)
    3d2c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    3d31:	48 8d 78 07          	lea    0x7(%rax),%rdi
    3d35:	c6 40 03 30          	movb   $0x30,0x3(%rax)
    3d39:	8d 4c 1a 08          	lea    0x8(%rdx,%rbx,1),%ecx
    3d3d:	c6 40 05 06          	movb   $0x6,0x5(%rax)
    3d41:	88 48 02             	mov    %cl,0x2(%rax)
    3d44:	8d 4a 04             	lea    0x4(%rdx),%ecx
    3d47:	88 48 04             	mov    %cl,0x4(%rax)
    3d4a:	88 50 06             	mov    %dl,0x6(%rax)
    3d4d:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    3d52:	e8 c9 f5 ff ff       	callq  3320 <memcpy@plt>
    3d57:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    3d5c:	be 05 00 00 00       	mov    $0x5,%esi
    3d61:	41 89 d9             	mov    %ebx,%r9d
    3d64:	48 01 c7             	add    %rax,%rdi
    3d67:	66 89 37             	mov    %si,(%rdi)
    3d6a:	4c 8d 47 04          	lea    0x4(%rdi),%r8
    3d6e:	c6 47 02 04          	movb   $0x4,0x2(%rdi)
    3d72:	88 5f 03             	mov    %bl,0x3(%rdi)
    3d75:	83 fb 08             	cmp    $0x8,%ebx
    3d78:	73 36                	jae    3db0 <rsa_rsassa_pkcs1_v15_encode+0x1f0>
    3d7a:	f6 c3 04             	test   $0x4,%bl
    3d7d:	0f 85 9d 00 00 00    	jne    3e20 <rsa_rsassa_pkcs1_v15_encode+0x260>
    3d83:	85 db                	test   %ebx,%ebx
    3d85:	75 71                	jne    3df8 <rsa_rsassa_pkcs1_v15_encode+0x238>
    3d87:	49 8d 04 2e          	lea    (%r14,%rbp,1),%rax
    3d8b:	4d 01 c8             	add    %r9,%r8
    3d8e:	4c 39 c0             	cmp    %r8,%rax
    3d91:	0f 84 83 fe ff ff    	je     3c1a <rsa_rsassa_pkcs1_v15_encode+0x5a>
    3d97:	48 89 ee             	mov    %rbp,%rsi
    3d9a:	4c 89 f7             	mov    %r14,%rdi
    3d9d:	e8 8e eb 00 00       	callq  12930 <mbedtls_platform_zeroize>
    3da2:	e9 6d fe ff ff       	jmpq   3c14 <rsa_rsassa_pkcs1_v15_encode+0x54>
    3da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3dae:	00 00 
    3db0:	49 8b 45 00          	mov    0x0(%r13),%rax
    3db4:	48 83 c7 0c          	add    $0xc,%rdi
    3db8:	4c 89 c1             	mov    %r8,%rcx
    3dbb:	4c 89 ee             	mov    %r13,%rsi
    3dbe:	48 89 47 f8          	mov    %rax,-0x8(%rdi)
    3dc2:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    3dc6:	4b 8b 44 0d f8       	mov    -0x8(%r13,%r9,1),%rax
    3dcb:	48 29 f9             	sub    %rdi,%rcx
    3dce:	4b 89 44 08 f8       	mov    %rax,-0x8(%r8,%r9,1)
    3dd3:	48 29 ce             	sub    %rcx,%rsi
    3dd6:	49 8d 04 2e          	lea    (%r14,%rbp,1),%rax
    3dda:	03 4c 24 0c          	add    0xc(%rsp),%ecx
    3dde:	4d 01 c8             	add    %r9,%r8
    3de1:	c1 e9 03             	shr    $0x3,%ecx
    3de4:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    3de7:	4c 39 c0             	cmp    %r8,%rax
    3dea:	0f 84 2a fe ff ff    	je     3c1a <rsa_rsassa_pkcs1_v15_encode+0x5a>
    3df0:	eb a5                	jmp    3d97 <rsa_rsassa_pkcs1_v15_encode+0x1d7>
    3df2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3df8:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
    3dfd:	83 e3 02             	and    $0x2,%ebx
    3e00:	88 47 04             	mov    %al,0x4(%rdi)
    3e03:	74 82                	je     3d87 <rsa_rsassa_pkcs1_v15_encode+0x1c7>
    3e05:	43 0f b7 44 0d fe    	movzwl -0x2(%r13,%r9,1),%eax
    3e0b:	66 43 89 44 08 fe    	mov    %ax,-0x2(%r8,%r9,1)
    3e11:	e9 71 ff ff ff       	jmpq   3d87 <rsa_rsassa_pkcs1_v15_encode+0x1c7>
    3e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3e1d:	00 00 00 
    3e20:	41 8b 45 00          	mov    0x0(%r13),%eax
    3e24:	89 47 04             	mov    %eax,0x4(%rdi)
    3e27:	43 8b 44 0d fc       	mov    -0x4(%r13,%r9,1),%eax
    3e2c:	43 89 44 08 fc       	mov    %eax,-0x4(%r8,%r9,1)
    3e31:	e9 51 ff ff ff       	jmpq   3d87 <rsa_rsassa_pkcs1_v15_encode+0x1c7>
    3e36:	e8 45 f4 ff ff       	callq  3280 <__stack_chk_fail@plt>
    3e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003e40 <myrand>:
    3e40:	f3 0f 1e fa          	endbr64 
    3e44:	48 85 d2             	test   %rdx,%rdx
    3e47:	74 37                	je     3e80 <myrand+0x40>
    3e49:	55                   	push   %rbp
    3e4a:	48 8d 2c 16          	lea    (%rsi,%rdx,1),%rbp
    3e4e:	53                   	push   %rbx
    3e4f:	48 89 f3             	mov    %rsi,%rbx
    3e52:	48 83 ec 08          	sub    $0x8,%rsp
    3e56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3e5d:	00 00 00 
    3e60:	e8 2b f5 ff ff       	callq  3390 <rand@plt>
    3e65:	48 83 c3 01          	add    $0x1,%rbx
    3e69:	88 43 ff             	mov    %al,-0x1(%rbx)
    3e6c:	48 39 eb             	cmp    %rbp,%rbx
    3e6f:	75 ef                	jne    3e60 <myrand+0x20>
    3e71:	48 83 c4 08          	add    $0x8,%rsp
    3e75:	31 c0                	xor    %eax,%eax
    3e77:	5b                   	pop    %rbx
    3e78:	5d                   	pop    %rbp
    3e79:	c3                   	retq   
    3e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3e80:	31 c0                	xor    %eax,%eax
    3e82:	c3                   	retq   
    3e83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3e8a:	00 00 00 00 
    3e8e:	66 90                	xchg   %ax,%ax

0000000000003e90 <rsa_check_context.isra.0>:
    3e90:	41 55                	push   %r13
    3e92:	41 89 f5             	mov    %esi,%r13d
    3e95:	41 54                	push   %r12
    3e97:	55                   	push   %rbp
    3e98:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
    3e9c:	53                   	push   %rbx
    3e9d:	48 89 fb             	mov    %rdi,%rbx
    3ea0:	48 83 ec 08          	sub    $0x8,%rsp
    3ea4:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    3ea8:	48 89 ef             	mov    %rbp,%rdi
    3eab:	e8 c0 58 00 00       	callq  9770 <mbedtls_mpi_size>
    3eb0:	49 39 c4             	cmp    %rax,%r12
    3eb3:	0f 85 e6 00 00 00    	jne    3f9f <rsa_check_context.isra.0+0x10f>
    3eb9:	48 81 7b 08 00 04 00 	cmpq   $0x400,0x8(%rbx)
    3ec0:	00 
    3ec1:	0f 87 d8 00 00 00    	ja     3f9f <rsa_check_context.isra.0+0x10f>
    3ec7:	31 f6                	xor    %esi,%esi
    3ec9:	48 89 ef             	mov    %rbp,%rdi
    3ecc:	e8 bf 5c 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    3ed1:	85 c0                	test   %eax,%eax
    3ed3:	0f 8e c6 00 00 00    	jle    3f9f <rsa_check_context.isra.0+0x10f>
    3ed9:	31 f6                	xor    %esi,%esi
    3edb:	48 89 ef             	mov    %rbp,%rdi
    3ede:	e8 5d 57 00 00       	callq  9640 <mbedtls_mpi_get_bit>
    3ee3:	85 c0                	test   %eax,%eax
    3ee5:	0f 84 b4 00 00 00    	je     3f9f <rsa_check_context.isra.0+0x10f>
    3eeb:	45 85 ed             	test   %r13d,%r13d
    3eee:	0f 84 9c 00 00 00    	je     3f90 <rsa_check_context.isra.0+0x100>
    3ef4:	48 8d 6b 58          	lea    0x58(%rbx),%rbp
    3ef8:	31 f6                	xor    %esi,%esi
    3efa:	48 89 ef             	mov    %rbp,%rdi
    3efd:	e8 8e 5c 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    3f02:	85 c0                	test   %eax,%eax
    3f04:	0f 8e 95 00 00 00    	jle    3f9f <rsa_check_context.isra.0+0x10f>
    3f0a:	31 f6                	xor    %esi,%esi
    3f0c:	48 89 ef             	mov    %rbp,%rdi
    3f0f:	e8 2c 57 00 00       	callq  9640 <mbedtls_mpi_get_bit>
    3f14:	85 c0                	test   %eax,%eax
    3f16:	0f 84 83 00 00 00    	je     3f9f <rsa_check_context.isra.0+0x10f>
    3f1c:	48 8d 6b 70          	lea    0x70(%rbx),%rbp
    3f20:	31 f6                	xor    %esi,%esi
    3f22:	48 89 ef             	mov    %rbp,%rdi
    3f25:	e8 66 5c 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    3f2a:	85 c0                	test   %eax,%eax
    3f2c:	7e 71                	jle    3f9f <rsa_check_context.isra.0+0x10f>
    3f2e:	31 f6                	xor    %esi,%esi
    3f30:	48 89 ef             	mov    %rbp,%rdi
    3f33:	e8 08 57 00 00       	callq  9640 <mbedtls_mpi_get_bit>
    3f38:	85 c0                	test   %eax,%eax
    3f3a:	74 63                	je     3f9f <rsa_check_context.isra.0+0x10f>
    3f3c:	31 f6                	xor    %esi,%esi
    3f3e:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    3f42:	e8 49 5c 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    3f47:	85 c0                	test   %eax,%eax
    3f49:	7e 54                	jle    3f9f <rsa_check_context.isra.0+0x10f>
    3f4b:	31 f6                	xor    %esi,%esi
    3f4d:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
    3f54:	e8 37 5c 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    3f59:	85 c0                	test   %eax,%eax
    3f5b:	7e 42                	jle    3f9f <rsa_check_context.isra.0+0x10f>
    3f5d:	31 f6                	xor    %esi,%esi
    3f5f:	48 8d bb a0 00 00 00 	lea    0xa0(%rbx),%rdi
    3f66:	e8 25 5c 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    3f6b:	85 c0                	test   %eax,%eax
    3f6d:	7e 30                	jle    3f9f <rsa_check_context.isra.0+0x10f>
    3f6f:	31 f6                	xor    %esi,%esi
    3f71:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
    3f78:	e8 13 5c 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    3f7d:	85 c0                	test   %eax,%eax
    3f7f:	7e 1e                	jle    3f9f <rsa_check_context.isra.0+0x10f>
    3f81:	48 83 c4 08          	add    $0x8,%rsp
    3f85:	31 c0                	xor    %eax,%eax
    3f87:	5b                   	pop    %rbx
    3f88:	5d                   	pop    %rbp
    3f89:	41 5c                	pop    %r12
    3f8b:	41 5d                	pop    %r13
    3f8d:	c3                   	retq   
    3f8e:	66 90                	xchg   %ax,%ax
    3f90:	31 f6                	xor    %esi,%esi
    3f92:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    3f96:	e8 f5 5b 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    3f9b:	85 c0                	test   %eax,%eax
    3f9d:	7f e2                	jg     3f81 <rsa_check_context.isra.0+0xf1>
    3f9f:	48 83 c4 08          	add    $0x8,%rsp
    3fa3:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    3fa8:	5b                   	pop    %rbx
    3fa9:	5d                   	pop    %rbp
    3faa:	41 5c                	pop    %r12
    3fac:	41 5d                	pop    %r13
    3fae:	c3                   	retq   
    3faf:	90                   	nop

0000000000003fb0 <mgf_mask>:
    3fb0:	41 57                	push   %r15
    3fb2:	41 56                	push   %r14
    3fb4:	49 89 ce             	mov    %rcx,%r14
    3fb7:	41 55                	push   %r13
    3fb9:	49 89 fd             	mov    %rdi,%r13
    3fbc:	41 54                	push   %r12
    3fbe:	45 89 c4             	mov    %r8d,%r12d
    3fc1:	55                   	push   %rbp
    3fc2:	53                   	push   %rbx
    3fc3:	48 89 f3             	mov    %rsi,%rbx
    3fc6:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    3fcd:	48 89 14 24          	mov    %rdx,(%rsp)
    3fd1:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
    3fd6:	48 89 ef             	mov    %rbp,%rdi
    3fd9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3fe0:	00 00 
    3fe2:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    3fe9:	00 
    3fea:	31 c0                	xor    %eax,%eax
    3fec:	e8 df c2 00 00       	callq  102d0 <mbedtls_md_init>
    3ff1:	44 89 e7             	mov    %r12d,%edi
    3ff4:	e8 47 c2 00 00       	callq  10240 <mbedtls_md_info_from_type>
    3ff9:	48 85 c0             	test   %rax,%rax
    3ffc:	0f 84 47 01 00 00    	je     4149 <mgf_mask+0x199>
    4002:	49 89 c4             	mov    %rax,%r12
    4005:	48 89 ef             	mov    %rbp,%rdi
    4008:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
    400d:	e8 be c2 00 00       	callq  102d0 <mbedtls_md_init>
    4012:	31 d2                	xor    %edx,%edx
    4014:	4c 89 e6             	mov    %r12,%rsi
    4017:	48 89 ef             	mov    %rbp,%rdi
    401a:	e8 a1 c4 00 00       	callq  104c0 <mbedtls_md_setup>
    401f:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    4023:	85 c0                	test   %eax,%eax
    4025:	74 49                	je     4070 <mgf_mask+0xc0>
    4027:	4c 89 ff             	mov    %r15,%rdi
    402a:	be 40 00 00 00       	mov    $0x40,%esi
    402f:	e8 fc e8 00 00       	callq  12930 <mbedtls_platform_zeroize>
    4034:	48 89 ef             	mov    %rbp,%rdi
    4037:	e8 b4 c2 00 00       	callq  102f0 <mbedtls_md_free>
    403c:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    4043:	00 
    4044:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    404b:	00 00 
    404d:	0f 85 03 01 00 00    	jne    4156 <mgf_mask+0x1a6>
    4053:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    4057:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    405e:	5b                   	pop    %rbx
    405f:	5d                   	pop    %rbp
    4060:	41 5c                	pop    %r12
    4062:	41 5d                	pop    %r13
    4064:	41 5e                	pop    %r14
    4066:	41 5f                	pop    %r15
    4068:	c3                   	retq   
    4069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4070:	4c 89 e7             	mov    %r12,%rdi
    4073:	e8 18 c8 00 00       	callq  10890 <mbedtls_md_get_size>
    4078:	66 0f ef c0          	pxor   %xmm0,%xmm0
    407c:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%rsp)
    4083:	00 
    4084:	0f b6 c0             	movzbl %al,%eax
    4087:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    408c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4091:	48 8d 44 24 3c       	lea    0x3c(%rsp),%rax
    4096:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    409b:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    40a0:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    40a5:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    40aa:	48 85 db             	test   %rbx,%rbx
    40ad:	0f 84 74 ff ff ff    	je     4027 <mgf_mask+0x77>
    40b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    40b8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    40bd:	48 89 ef             	mov    %rbp,%rdi
    40c0:	48 39 d8             	cmp    %rbx,%rax
    40c3:	49 89 c4             	mov    %rax,%r12
    40c6:	4c 0f 47 e3          	cmova  %rbx,%r12
    40ca:	e8 61 c5 00 00       	callq  10630 <mbedtls_md_starts>
    40cf:	85 c0                	test   %eax,%eax
    40d1:	75 6d                	jne    4140 <mgf_mask+0x190>
    40d3:	48 8b 34 24          	mov    (%rsp),%rsi
    40d7:	4c 89 f2             	mov    %r14,%rdx
    40da:	48 89 ef             	mov    %rbp,%rdi
    40dd:	e8 0e c6 00 00       	callq  106f0 <mbedtls_md_update>
    40e2:	85 c0                	test   %eax,%eax
    40e4:	75 5a                	jne    4140 <mgf_mask+0x190>
    40e6:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    40eb:	ba 04 00 00 00       	mov    $0x4,%edx
    40f0:	48 89 ef             	mov    %rbp,%rdi
    40f3:	e8 f8 c5 00 00       	callq  106f0 <mbedtls_md_update>
    40f8:	85 c0                	test   %eax,%eax
    40fa:	75 44                	jne    4140 <mgf_mask+0x190>
    40fc:	4c 89 fe             	mov    %r15,%rsi
    40ff:	48 89 ef             	mov    %rbp,%rdi
    4102:	e8 69 c6 00 00       	callq  10770 <mbedtls_md_finish>
    4107:	85 c0                	test   %eax,%eax
    4109:	75 35                	jne    4140 <mgf_mask+0x190>
    410b:	4d 85 e4             	test   %r12,%r12
    410e:	74 1e                	je     412e <mgf_mask+0x17e>
    4110:	31 c0                	xor    %eax,%eax
    4112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4118:	41 0f b6 14 07       	movzbl (%r15,%rax,1),%edx
    411d:	41 30 54 05 00       	xor    %dl,0x0(%r13,%rax,1)
    4122:	48 83 c0 01          	add    $0x1,%rax
    4126:	49 39 c4             	cmp    %rax,%r12
    4129:	75 ed                	jne    4118 <mgf_mask+0x168>
    412b:	4d 01 e5             	add    %r12,%r13
    412e:	80 44 24 3f 01       	addb   $0x1,0x3f(%rsp)
    4133:	4c 29 e3             	sub    %r12,%rbx
    4136:	75 80                	jne    40b8 <mgf_mask+0x108>
    4138:	e9 ea fe ff ff       	jmpq   4027 <mgf_mask+0x77>
    413d:	0f 1f 00             	nopl   (%rax)
    4140:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    4144:	e9 de fe ff ff       	jmpq   4027 <mgf_mask+0x77>
    4149:	c7 44 24 1c 80 bf ff 	movl   $0xffffbf80,0x1c(%rsp)
    4150:	ff 
    4151:	e9 e6 fe ff ff       	jmpq   403c <mgf_mask+0x8c>
    4156:	e8 25 f1 ff ff       	callq  3280 <__stack_chk_fail@plt>
    415b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004160 <mbedtls_rsa_free.part.0>:
    4160:	53                   	push   %rbx
    4161:	48 89 fb             	mov    %rdi,%rbx
    4164:	48 8d bf 18 01 00 00 	lea    0x118(%rdi),%rdi
    416b:	e8 50 50 00 00       	callq  91c0 <mbedtls_mpi_free>
    4170:	48 8d bb 30 01 00 00 	lea    0x130(%rbx),%rdi
    4177:	e8 44 50 00 00       	callq  91c0 <mbedtls_mpi_free>
    417c:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
    4183:	e8 38 50 00 00       	callq  91c0 <mbedtls_mpi_free>
    4188:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    418c:	e8 2f 50 00 00       	callq  91c0 <mbedtls_mpi_free>
    4191:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    4195:	e8 26 50 00 00       	callq  91c0 <mbedtls_mpi_free>
    419a:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    419e:	e8 1d 50 00 00       	callq  91c0 <mbedtls_mpi_free>
    41a3:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    41a7:	e8 14 50 00 00       	callq  91c0 <mbedtls_mpi_free>
    41ac:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    41b0:	e8 0b 50 00 00       	callq  91c0 <mbedtls_mpi_free>
    41b5:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
    41bc:	e8 ff 4f 00 00       	callq  91c0 <mbedtls_mpi_free>
    41c1:	48 8d bb e8 00 00 00 	lea    0xe8(%rbx),%rdi
    41c8:	e8 f3 4f 00 00       	callq  91c0 <mbedtls_mpi_free>
    41cd:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
    41d4:	e8 e7 4f 00 00       	callq  91c0 <mbedtls_mpi_free>
    41d9:	48 8d bb a0 00 00 00 	lea    0xa0(%rbx),%rdi
    41e0:	e8 db 4f 00 00       	callq  91c0 <mbedtls_mpi_free>
    41e5:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
    41ec:	5b                   	pop    %rbx
    41ed:	e9 ce 4f 00 00       	jmpq   91c0 <mbedtls_mpi_free>
    41f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    41f9:	00 00 00 00 
    41fd:	0f 1f 00             	nopl   (%rax)

0000000000004200 <mbedtls_rsa_import>:
    4200:	f3 0f 1e fa          	endbr64 
    4204:	41 57                	push   %r15
    4206:	49 89 cf             	mov    %rcx,%r15
    4209:	41 56                	push   %r14
    420b:	49 89 d6             	mov    %rdx,%r14
    420e:	41 55                	push   %r13
    4210:	4d 89 cd             	mov    %r9,%r13
    4213:	41 54                	push   %r12
    4215:	4d 89 c4             	mov    %r8,%r12
    4218:	55                   	push   %rbp
    4219:	48 89 f5             	mov    %rsi,%rbp
    421c:	53                   	push   %rbx
    421d:	48 89 fb             	mov    %rdi,%rbx
    4220:	48 83 ec 08          	sub    $0x8,%rsp
    4224:	48 85 f6             	test   %rsi,%rsi
    4227:	74 0d                	je     4236 <mbedtls_rsa_import+0x36>
    4229:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
    422d:	e8 1e 52 00 00       	callq  9450 <mbedtls_mpi_copy>
    4232:	85 c0                	test   %eax,%eax
    4234:	75 72                	jne    42a8 <mbedtls_rsa_import+0xa8>
    4236:	4d 85 f6             	test   %r14,%r14
    4239:	74 10                	je     424b <mbedtls_rsa_import+0x4b>
    423b:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    423f:	4c 89 f6             	mov    %r14,%rsi
    4242:	e8 09 52 00 00       	callq  9450 <mbedtls_mpi_copy>
    4247:	85 c0                	test   %eax,%eax
    4249:	75 5d                	jne    42a8 <mbedtls_rsa_import+0xa8>
    424b:	4d 85 ff             	test   %r15,%r15
    424e:	74 10                	je     4260 <mbedtls_rsa_import+0x60>
    4250:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    4254:	4c 89 fe             	mov    %r15,%rsi
    4257:	e8 f4 51 00 00       	callq  9450 <mbedtls_mpi_copy>
    425c:	85 c0                	test   %eax,%eax
    425e:	75 48                	jne    42a8 <mbedtls_rsa_import+0xa8>
    4260:	4d 85 e4             	test   %r12,%r12
    4263:	74 10                	je     4275 <mbedtls_rsa_import+0x75>
    4265:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    4269:	4c 89 e6             	mov    %r12,%rsi
    426c:	e8 df 51 00 00       	callq  9450 <mbedtls_mpi_copy>
    4271:	85 c0                	test   %eax,%eax
    4273:	75 33                	jne    42a8 <mbedtls_rsa_import+0xa8>
    4275:	4d 85 ed             	test   %r13,%r13
    4278:	74 10                	je     428a <mbedtls_rsa_import+0x8a>
    427a:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    427e:	4c 89 ee             	mov    %r13,%rsi
    4281:	e8 ca 51 00 00       	callq  9450 <mbedtls_mpi_copy>
    4286:	85 c0                	test   %eax,%eax
    4288:	75 1e                	jne    42a8 <mbedtls_rsa_import+0xa8>
    428a:	45 31 e4             	xor    %r12d,%r12d
    428d:	48 85 ed             	test   %rbp,%rbp
    4290:	74 1d                	je     42af <mbedtls_rsa_import+0xaf>
    4292:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    4296:	e8 d5 54 00 00       	callq  9770 <mbedtls_mpi_size>
    429b:	48 89 43 08          	mov    %rax,0x8(%rbx)
    429f:	eb 0e                	jmp    42af <mbedtls_rsa_import+0xaf>
    42a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    42a8:	44 8d a0 80 bf ff ff 	lea    -0x4080(%rax),%r12d
    42af:	48 83 c4 08          	add    $0x8,%rsp
    42b3:	44 89 e0             	mov    %r12d,%eax
    42b6:	5b                   	pop    %rbx
    42b7:	5d                   	pop    %rbp
    42b8:	41 5c                	pop    %r12
    42ba:	41 5d                	pop    %r13
    42bc:	41 5e                	pop    %r14
    42be:	41 5f                	pop    %r15
    42c0:	c3                   	retq   
    42c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    42c8:	00 00 00 00 
    42cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000042d0 <mbedtls_rsa_import_raw>:
    42d0:	f3 0f 1e fa          	endbr64 
    42d4:	41 56                	push   %r14
    42d6:	41 55                	push   %r13
    42d8:	4d 89 c5             	mov    %r8,%r13
    42db:	41 54                	push   %r12
    42dd:	49 89 cc             	mov    %rcx,%r12
    42e0:	55                   	push   %rbp
    42e1:	4c 89 cd             	mov    %r9,%rbp
    42e4:	53                   	push   %rbx
    42e5:	48 89 fb             	mov    %rdi,%rbx
    42e8:	48 85 f6             	test   %rsi,%rsi
    42eb:	74 2f                	je     431c <mbedtls_rsa_import_raw+0x4c>
    42ed:	4c 8d 77 10          	lea    0x10(%rdi),%r14
    42f1:	4c 89 f7             	mov    %r14,%rdi
    42f4:	e8 f7 54 00 00       	callq  97f0 <mbedtls_mpi_read_binary>
    42f9:	85 c0                	test   %eax,%eax
    42fb:	74 13                	je     4310 <mbedtls_rsa_import_raw+0x40>
    42fd:	5b                   	pop    %rbx
    42fe:	2d 80 40 00 00       	sub    $0x4080,%eax
    4303:	5d                   	pop    %rbp
    4304:	41 5c                	pop    %r12
    4306:	41 5d                	pop    %r13
    4308:	41 5e                	pop    %r14
    430a:	c3                   	retq   
    430b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4310:	4c 89 f7             	mov    %r14,%rdi
    4313:	e8 58 54 00 00       	callq  9770 <mbedtls_mpi_size>
    4318:	48 89 43 08          	mov    %rax,0x8(%rbx)
    431c:	4d 85 e4             	test   %r12,%r12
    431f:	74 13                	je     4334 <mbedtls_rsa_import_raw+0x64>
    4321:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    4325:	4c 89 ea             	mov    %r13,%rdx
    4328:	4c 89 e6             	mov    %r12,%rsi
    432b:	e8 c0 54 00 00       	callq  97f0 <mbedtls_mpi_read_binary>
    4330:	85 c0                	test   %eax,%eax
    4332:	75 c9                	jne    42fd <mbedtls_rsa_import_raw+0x2d>
    4334:	48 85 ed             	test   %rbp,%rbp
    4337:	74 15                	je     434e <mbedtls_rsa_import_raw+0x7e>
    4339:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    433e:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    4342:	48 89 ee             	mov    %rbp,%rsi
    4345:	e8 a6 54 00 00       	callq  97f0 <mbedtls_mpi_read_binary>
    434a:	85 c0                	test   %eax,%eax
    434c:	75 af                	jne    42fd <mbedtls_rsa_import_raw+0x2d>
    434e:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
    4354:	74 17                	je     436d <mbedtls_rsa_import_raw+0x9d>
    4356:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    435b:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    4360:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    4364:	e8 87 54 00 00       	callq  97f0 <mbedtls_mpi_read_binary>
    4369:	85 c0                	test   %eax,%eax
    436b:	75 90                	jne    42fd <mbedtls_rsa_import_raw+0x2d>
    436d:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
    4373:	74 1b                	je     4390 <mbedtls_rsa_import_raw+0xc0>
    4375:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    437a:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    437f:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    4383:	e8 68 54 00 00       	callq  97f0 <mbedtls_mpi_read_binary>
    4388:	85 c0                	test   %eax,%eax
    438a:	0f 85 6d ff ff ff    	jne    42fd <mbedtls_rsa_import_raw+0x2d>
    4390:	5b                   	pop    %rbx
    4391:	31 c0                	xor    %eax,%eax
    4393:	5d                   	pop    %rbp
    4394:	41 5c                	pop    %r12
    4396:	41 5d                	pop    %r13
    4398:	41 5e                	pop    %r14
    439a:	c3                   	retq   
    439b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000043a0 <mbedtls_rsa_complete>:
    43a0:	f3 0f 1e fa          	endbr64 
    43a4:	41 57                	push   %r15
    43a6:	4c 8d 4f 10          	lea    0x10(%rdi),%r9
    43aa:	31 f6                	xor    %esi,%esi
    43ac:	41 56                	push   %r14
    43ae:	41 55                	push   %r13
    43b0:	41 54                	push   %r12
    43b2:	55                   	push   %rbp
    43b3:	48 89 fd             	mov    %rdi,%rbp
    43b6:	4c 89 cf             	mov    %r9,%rdi
    43b9:	53                   	push   %rbx
    43ba:	4c 8d 65 58          	lea    0x58(%rbp),%r12
    43be:	4c 8d 6d 70          	lea    0x70(%rbp),%r13
    43c2:	48 8d 5d 40          	lea    0x40(%rbp),%rbx
    43c6:	4c 8d b5 a0 00 00 00 	lea    0xa0(%rbp),%r14
    43cd:	4c 8d bd b8 00 00 00 	lea    0xb8(%rbp),%r15
    43d4:	48 83 ec 58          	sub    $0x58,%rsp
    43d8:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    43dd:	e8 ae 57 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    43e2:	31 f6                	xor    %esi,%esi
    43e4:	4c 89 e7             	mov    %r12,%rdi
    43e7:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    43eb:	e8 a0 57 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    43f0:	31 f6                	xor    %esi,%esi
    43f2:	4c 89 ef             	mov    %r13,%rdi
    43f5:	89 44 24 38          	mov    %eax,0x38(%rsp)
    43f9:	e8 92 57 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    43fe:	31 f6                	xor    %esi,%esi
    4400:	48 89 df             	mov    %rbx,%rdi
    4403:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    4407:	e8 84 57 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    440c:	4c 8d 5d 28          	lea    0x28(%rbp),%r11
    4410:	85 c0                	test   %eax,%eax
    4412:	4c 89 df             	mov    %r11,%rdi
    4415:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
    441a:	0f 95 44 24 10       	setne  0x10(%rsp)
    441f:	31 f6                	xor    %esi,%esi
    4421:	89 44 24 28          	mov    %eax,0x28(%rsp)
    4425:	e8 66 57 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    442a:	85 c0                	test   %eax,%eax
    442c:	48 8d 85 88 00 00 00 	lea    0x88(%rbp),%rax
    4433:	41 0f 95 c2          	setne  %r10b
    4437:	48 89 c7             	mov    %rax,%rdi
    443a:	31 f6                	xor    %esi,%esi
    443c:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    4441:	44 88 54 24 18       	mov    %r10b,0x18(%rsp)
    4446:	e8 45 57 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    444b:	31 f6                	xor    %esi,%esi
    444d:	4c 89 f7             	mov    %r14,%rdi
    4450:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    4454:	e8 37 57 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    4459:	31 f6                	xor    %esi,%esi
    445b:	4c 89 ff             	mov    %r15,%rdi
    445e:	89 44 24 40          	mov    %eax,0x40(%rsp)
    4462:	e8 29 57 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    4467:	44 8b 44 24 38       	mov    0x38(%rsp),%r8d
    446c:	44 0f b6 54 24 18    	movzbl 0x18(%rsp),%r10d
    4472:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    4477:	8b 54 24 28          	mov    0x28(%rsp),%edx
    447b:	89 44 24 44          	mov    %eax,0x44(%rsp)
    447f:	45 85 c0             	test   %r8d,%r8d
    4482:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    4486:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    448b:	74 6b                	je     44f8 <mbedtls_rsa_complete+0x158>
    448d:	85 c9                	test   %ecx,%ecx
    448f:	74 67                	je     44f8 <mbedtls_rsa_complete+0x158>
    4491:	80 7c 24 10 00       	cmpb   $0x0,0x10(%rsp)
    4496:	0f 84 24 01 00 00    	je     45c0 <mbedtls_rsa_complete+0x220>
    449c:	45 84 d2             	test   %r10b,%r10b
    449f:	0f 84 1b 01 00 00    	je     45c0 <mbedtls_rsa_complete+0x220>
    44a5:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    44aa:	45 85 c0             	test   %r8d,%r8d
    44ad:	0f 84 45 01 00 00    	je     45f8 <mbedtls_rsa_complete+0x258>
    44b3:	8b 4c 24 3c          	mov    0x3c(%rsp),%ecx
    44b7:	8b 74 24 40          	mov    0x40(%rsp),%esi
    44bb:	85 c9                	test   %ecx,%ecx
    44bd:	0f 94 c2             	sete   %dl
    44c0:	85 f6                	test   %esi,%esi
    44c2:	0f 94 c0             	sete   %al
    44c5:	08 c2                	or     %al,%dl
    44c7:	0f 85 9b 00 00 00    	jne    4568 <mbedtls_rsa_complete+0x1c8>
    44cd:	8b 54 24 44          	mov    0x44(%rsp),%edx
    44d1:	be 01 00 00 00       	mov    $0x1,%esi
    44d6:	85 d2                	test   %edx,%edx
    44d8:	0f 84 8a 00 00 00    	je     4568 <mbedtls_rsa_complete+0x1c8>
    44de:	48 83 c4 58          	add    $0x58,%rsp
    44e2:	48 89 ef             	mov    %rbp,%rdi
    44e5:	5b                   	pop    %rbx
    44e6:	5d                   	pop    %rbp
    44e7:	41 5c                	pop    %r12
    44e9:	41 5d                	pop    %r13
    44eb:	41 5e                	pop    %r14
    44ed:	41 5f                	pop    %r15
    44ef:	e9 9c f9 ff ff       	jmpq   3e90 <rsa_check_context.isra.0>
    44f4:	0f 1f 40 00          	nopl   0x0(%rax)
    44f8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    44fc:	85 c0                	test   %eax,%eax
    44fe:	0f 84 a8 00 00 00    	je     45ac <mbedtls_rsa_complete+0x20c>
    4504:	45 85 c0             	test   %r8d,%r8d
    4507:	0f 85 9f 00 00 00    	jne    45ac <mbedtls_rsa_complete+0x20c>
    450d:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
    4512:	85 c9                	test   %ecx,%ecx
    4514:	40 0f 94 c6          	sete   %sil
    4518:	44 21 d0             	and    %r10d,%eax
    451b:	21 f0                	and    %esi,%eax
    451d:	09 d1                	or     %edx,%ecx
    451f:	0f 85 83 00 00 00    	jne    45a8 <mbedtls_rsa_complete+0x208>
    4525:	45 84 d2             	test   %r10b,%r10b
    4528:	74 7e                	je     45a8 <mbedtls_rsa_complete+0x208>
    452a:	31 f6                	xor    %esi,%esi
    452c:	84 c0                	test   %al,%al
    452e:	74 ae                	je     44de <mbedtls_rsa_complete+0x13e>
    4530:	48 89 da             	mov    %rbx,%rdx
    4533:	4d 89 e8             	mov    %r13,%r8
    4536:	4c 89 e1             	mov    %r12,%rcx
    4539:	4c 89 de             	mov    %r11,%rsi
    453c:	4c 89 cf             	mov    %r9,%rdi
    453f:	e8 8c 2b 00 00       	callq  70d0 <mbedtls_rsa_deduce_primes>
    4544:	89 c2                	mov    %eax,%edx
    4546:	8d 80 80 bf ff ff    	lea    -0x4080(%rax),%eax
    454c:	85 d2                	test   %edx,%edx
    454e:	0f 84 5f ff ff ff    	je     44b3 <mbedtls_rsa_complete+0x113>
    4554:	48 83 c4 58          	add    $0x58,%rsp
    4558:	5b                   	pop    %rbx
    4559:	5d                   	pop    %rbp
    455a:	41 5c                	pop    %r12
    455c:	41 5d                	pop    %r13
    455e:	41 5e                	pop    %r14
    4560:	41 5f                	pop    %r15
    4562:	c3                   	retq   
    4563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4568:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    456d:	4c 89 ee             	mov    %r13,%rsi
    4570:	4d 89 f9             	mov    %r15,%r9
    4573:	4d 89 f0             	mov    %r14,%r8
    4576:	48 89 da             	mov    %rbx,%rdx
    4579:	4c 89 e7             	mov    %r12,%rdi
    457c:	e8 1f 30 00 00       	callq  75a0 <mbedtls_rsa_deduce_crt>
    4581:	be 01 00 00 00       	mov    $0x1,%esi
    4586:	85 c0                	test   %eax,%eax
    4588:	0f 84 50 ff ff ff    	je     44de <mbedtls_rsa_complete+0x13e>
    458e:	48 83 c4 58          	add    $0x58,%rsp
    4592:	2d 80 40 00 00       	sub    $0x4080,%eax
    4597:	5b                   	pop    %rbx
    4598:	5d                   	pop    %rbp
    4599:	41 5c                	pop    %r12
    459b:	41 5d                	pop    %r13
    459d:	41 5e                	pop    %r14
    459f:	41 5f                	pop    %r15
    45a1:	c3                   	retq   
    45a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    45a8:	84 c0                	test   %al,%al
    45aa:	75 84                	jne    4530 <mbedtls_rsa_complete+0x190>
    45ac:	48 83 c4 58          	add    $0x58,%rsp
    45b0:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    45b5:	5b                   	pop    %rbx
    45b6:	5d                   	pop    %rbp
    45b7:	41 5c                	pop    %r12
    45b9:	41 5d                	pop    %r13
    45bb:	41 5e                	pop    %r14
    45bd:	41 5f                	pop    %r15
    45bf:	c3                   	retq   
    45c0:	85 d2                	test   %edx,%edx
    45c2:	75 e8                	jne    45ac <mbedtls_rsa_complete+0x20c>
    45c4:	45 84 d2             	test   %r10b,%r10b
    45c7:	74 e3                	je     45ac <mbedtls_rsa_complete+0x20c>
    45c9:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    45cd:	85 c0                	test   %eax,%eax
    45cf:	74 1f                	je     45f0 <mbedtls_rsa_complete+0x250>
    45d1:	48 89 d9             	mov    %rbx,%rcx
    45d4:	4c 89 da             	mov    %r11,%rdx
    45d7:	4c 89 ee             	mov    %r13,%rsi
    45da:	4c 89 e7             	mov    %r12,%rdi
    45dd:	e8 3e 2e 00 00       	callq  7420 <mbedtls_rsa_deduce_private_exponent>
    45e2:	85 c0                	test   %eax,%eax
    45e4:	0f 84 c9 fe ff ff    	je     44b3 <mbedtls_rsa_complete+0x113>
    45ea:	eb a2                	jmp    458e <mbedtls_rsa_complete+0x1ee>
    45ec:	0f 1f 40 00          	nopl   0x0(%rax)
    45f0:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
    45f7:	00 
    45f8:	4c 89 cf             	mov    %r9,%rdi
    45fb:	4c 89 ea             	mov    %r13,%rdx
    45fe:	4c 89 e6             	mov    %r12,%rsi
    4601:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    4606:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    460b:	e8 d0 59 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    4610:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    4615:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    461a:	85 c0                	test   %eax,%eax
    461c:	0f 85 6c ff ff ff    	jne    458e <mbedtls_rsa_complete+0x1ee>
    4622:	4c 89 cf             	mov    %r9,%rdi
    4625:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    462a:	e8 41 51 00 00       	callq  9770 <mbedtls_mpi_size>
    462f:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    4633:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    4638:	48 89 45 08          	mov    %rax,0x8(%rbp)
    463c:	85 ff                	test   %edi,%edi
    463e:	75 91                	jne    45d1 <mbedtls_rsa_complete+0x231>
    4640:	e9 6e fe ff ff       	jmpq   44b3 <mbedtls_rsa_complete+0x113>
    4645:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    464c:	00 00 00 00 

0000000000004650 <mbedtls_rsa_export_raw>:
    4650:	f3 0f 1e fa          	endbr64 
    4654:	41 57                	push   %r15
    4656:	41 56                	push   %r14
    4658:	4c 8d 77 10          	lea    0x10(%rdi),%r14
    465c:	41 55                	push   %r13
    465e:	49 89 f5             	mov    %rsi,%r13
    4661:	31 f6                	xor    %esi,%esi
    4663:	41 54                	push   %r12
    4665:	49 89 cc             	mov    %rcx,%r12
    4668:	55                   	push   %rbp
    4669:	4c 89 cd             	mov    %r9,%rbp
    466c:	53                   	push   %rbx
    466d:	48 89 fb             	mov    %rdi,%rbx
    4670:	4c 89 f7             	mov    %r14,%rdi
    4673:	48 83 ec 48          	sub    $0x48,%rsp
    4677:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
    467e:	00 
    467f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    4684:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    4689:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
    4690:	00 
    4691:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4696:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    469d:	00 
    469e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    46a3:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    46aa:	00 
    46ab:	48 89 04 24          	mov    %rax,(%rsp)
    46af:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
    46b6:	00 
    46b7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    46bc:	e8 cf 54 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    46c1:	85 c0                	test   %eax,%eax
    46c3:	75 43                	jne    4708 <mbedtls_rsa_export_raw+0xb8>
    46c5:	4c 09 fd             	or     %r15,%rbp
    46c8:	49 09 ec             	or     %rbp,%r12
    46cb:	0f 85 2f 01 00 00    	jne    4800 <mbedtls_rsa_export_raw+0x1b0>
    46d1:	4d 85 ed             	test   %r13,%r13
    46d4:	0f 84 f4 00 00 00    	je     47ce <mbedtls_rsa_export_raw+0x17e>
    46da:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    46df:	4c 89 ee             	mov    %r13,%rsi
    46e2:	4c 89 f7             	mov    %r14,%rdi
    46e5:	e8 76 51 00 00       	callq  9860 <mbedtls_mpi_write_binary>
    46ea:	85 c0                	test   %eax,%eax
    46ec:	0f 84 be 00 00 00    	je     47b0 <mbedtls_rsa_export_raw+0x160>
    46f2:	48 83 c4 48          	add    $0x48,%rsp
    46f6:	5b                   	pop    %rbx
    46f7:	5d                   	pop    %rbp
    46f8:	41 5c                	pop    %r12
    46fa:	41 5d                	pop    %r13
    46fc:	41 5e                	pop    %r14
    46fe:	41 5f                	pop    %r15
    4700:	c3                   	retq   
    4701:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4708:	4c 8d 4b 58          	lea    0x58(%rbx),%r9
    470c:	31 f6                	xor    %esi,%esi
    470e:	4c 89 cf             	mov    %r9,%rdi
    4711:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    4716:	e8 75 54 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    471b:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    4720:	85 c0                	test   %eax,%eax
    4722:	74 a1                	je     46c5 <mbedtls_rsa_export_raw+0x75>
    4724:	48 8d 43 70          	lea    0x70(%rbx),%rax
    4728:	31 f6                	xor    %esi,%esi
    472a:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
    472f:	48 89 c7             	mov    %rax,%rdi
    4732:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    4737:	e8 54 54 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    473c:	85 c0                	test   %eax,%eax
    473e:	74 85                	je     46c5 <mbedtls_rsa_export_raw+0x75>
    4740:	31 f6                	xor    %esi,%esi
    4742:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    4746:	e8 45 54 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    474b:	85 c0                	test   %eax,%eax
    474d:	0f 84 72 ff ff ff    	je     46c5 <mbedtls_rsa_export_raw+0x75>
    4753:	31 f6                	xor    %esi,%esi
    4755:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    4759:	e8 32 54 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    475e:	85 c0                	test   %eax,%eax
    4760:	0f 84 5f ff ff ff    	je     46c5 <mbedtls_rsa_export_raw+0x75>
    4766:	4d 85 ed             	test   %r13,%r13
    4769:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    476e:	0f 85 96 00 00 00    	jne    480a <mbedtls_rsa_export_raw+0x1ba>
    4774:	4d 85 e4             	test   %r12,%r12
    4777:	74 18                	je     4791 <mbedtls_rsa_export_raw+0x141>
    4779:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    477e:	4c 89 e6             	mov    %r12,%rsi
    4781:	4c 89 cf             	mov    %r9,%rdi
    4784:	e8 d7 50 00 00       	callq  9860 <mbedtls_mpi_write_binary>
    4789:	85 c0                	test   %eax,%eax
    478b:	0f 85 61 ff ff ff    	jne    46f2 <mbedtls_rsa_export_raw+0xa2>
    4791:	48 85 ed             	test   %rbp,%rbp
    4794:	74 1a                	je     47b0 <mbedtls_rsa_export_raw+0x160>
    4796:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    479b:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    47a0:	48 89 ee             	mov    %rbp,%rsi
    47a3:	e8 b8 50 00 00       	callq  9860 <mbedtls_mpi_write_binary>
    47a8:	85 c0                	test   %eax,%eax
    47aa:	0f 85 42 ff ff ff    	jne    46f2 <mbedtls_rsa_export_raw+0xa2>
    47b0:	4d 85 ff             	test   %r15,%r15
    47b3:	74 19                	je     47ce <mbedtls_rsa_export_raw+0x17e>
    47b5:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    47ba:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    47be:	4c 89 fe             	mov    %r15,%rsi
    47c1:	e8 9a 50 00 00       	callq  9860 <mbedtls_mpi_write_binary>
    47c6:	85 c0                	test   %eax,%eax
    47c8:	0f 85 24 ff ff ff    	jne    46f2 <mbedtls_rsa_export_raw+0xa2>
    47ce:	31 c0                	xor    %eax,%eax
    47d0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    47d5:	0f 84 17 ff ff ff    	je     46f2 <mbedtls_rsa_export_raw+0xa2>
    47db:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    47e0:	48 8b 34 24          	mov    (%rsp),%rsi
    47e4:	48 83 c4 48          	add    $0x48,%rsp
    47e8:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    47ec:	5b                   	pop    %rbx
    47ed:	5d                   	pop    %rbp
    47ee:	41 5c                	pop    %r12
    47f0:	41 5d                	pop    %r13
    47f2:	41 5e                	pop    %r14
    47f4:	41 5f                	pop    %r15
    47f6:	e9 65 50 00 00       	jmpq   9860 <mbedtls_mpi_write_binary>
    47fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4800:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    4805:	e9 e8 fe ff ff       	jmpq   46f2 <mbedtls_rsa_export_raw+0xa2>
    480a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    480f:	4c 89 ee             	mov    %r13,%rsi
    4812:	4c 89 f7             	mov    %r14,%rdi
    4815:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
    481a:	e8 41 50 00 00       	callq  9860 <mbedtls_mpi_write_binary>
    481f:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    4824:	85 c0                	test   %eax,%eax
    4826:	0f 84 48 ff ff ff    	je     4774 <mbedtls_rsa_export_raw+0x124>
    482c:	e9 c1 fe ff ff       	jmpq   46f2 <mbedtls_rsa_export_raw+0xa2>
    4831:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4838:	00 00 00 00 
    483c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004840 <mbedtls_rsa_export>:
    4840:	f3 0f 1e fa          	endbr64 
    4844:	41 57                	push   %r15
    4846:	4c 8d 7f 10          	lea    0x10(%rdi),%r15
    484a:	41 56                	push   %r14
    484c:	49 89 f6             	mov    %rsi,%r14
    484f:	31 f6                	xor    %esi,%esi
    4851:	41 55                	push   %r13
    4853:	4d 89 c5             	mov    %r8,%r13
    4856:	41 54                	push   %r12
    4858:	49 89 d4             	mov    %rdx,%r12
    485b:	55                   	push   %rbp
    485c:	48 89 cd             	mov    %rcx,%rbp
    485f:	53                   	push   %rbx
    4860:	48 89 fb             	mov    %rdi,%rbx
    4863:	4c 89 ff             	mov    %r15,%rdi
    4866:	48 83 ec 28          	sub    $0x28,%rsp
    486a:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    486f:	e8 1c 53 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    4874:	85 c0                	test   %eax,%eax
    4876:	75 38                	jne    48b0 <mbedtls_rsa_export+0x70>
    4878:	4c 09 ed             	or     %r13,%rbp
    487b:	49 09 ec             	or     %rbp,%r12
    487e:	0f 85 0c 01 00 00    	jne    4990 <mbedtls_rsa_export+0x150>
    4884:	4d 85 f6             	test   %r14,%r14
    4887:	0f 84 d6 00 00 00    	je     4963 <mbedtls_rsa_export+0x123>
    488d:	4c 89 fe             	mov    %r15,%rsi
    4890:	4c 89 f7             	mov    %r14,%rdi
    4893:	e8 b8 4b 00 00       	callq  9450 <mbedtls_mpi_copy>
    4898:	85 c0                	test   %eax,%eax
    489a:	0f 84 aa 00 00 00    	je     494a <mbedtls_rsa_export+0x10a>
    48a0:	48 83 c4 28          	add    $0x28,%rsp
    48a4:	5b                   	pop    %rbx
    48a5:	5d                   	pop    %rbp
    48a6:	41 5c                	pop    %r12
    48a8:	41 5d                	pop    %r13
    48aa:	41 5e                	pop    %r14
    48ac:	41 5f                	pop    %r15
    48ae:	c3                   	retq   
    48af:	90                   	nop
    48b0:	4c 8d 4b 58          	lea    0x58(%rbx),%r9
    48b4:	31 f6                	xor    %esi,%esi
    48b6:	4c 89 cf             	mov    %r9,%rdi
    48b9:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    48be:	e8 cd 52 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    48c3:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    48c8:	85 c0                	test   %eax,%eax
    48ca:	74 ac                	je     4878 <mbedtls_rsa_export+0x38>
    48cc:	48 8d 43 70          	lea    0x70(%rbx),%rax
    48d0:	31 f6                	xor    %esi,%esi
    48d2:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    48d7:	48 89 c7             	mov    %rax,%rdi
    48da:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    48df:	e8 ac 52 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    48e4:	85 c0                	test   %eax,%eax
    48e6:	74 90                	je     4878 <mbedtls_rsa_export+0x38>
    48e8:	31 f6                	xor    %esi,%esi
    48ea:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    48ee:	e8 9d 52 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    48f3:	85 c0                	test   %eax,%eax
    48f5:	74 81                	je     4878 <mbedtls_rsa_export+0x38>
    48f7:	31 f6                	xor    %esi,%esi
    48f9:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    48fd:	e8 8e 52 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    4902:	85 c0                	test   %eax,%eax
    4904:	0f 84 6e ff ff ff    	je     4878 <mbedtls_rsa_export+0x38>
    490a:	4d 85 f6             	test   %r14,%r14
    490d:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    4912:	0f 85 82 00 00 00    	jne    499a <mbedtls_rsa_export+0x15a>
    4918:	4d 85 e4             	test   %r12,%r12
    491b:	74 13                	je     4930 <mbedtls_rsa_export+0xf0>
    491d:	4c 89 ce             	mov    %r9,%rsi
    4920:	4c 89 e7             	mov    %r12,%rdi
    4923:	e8 28 4b 00 00       	callq  9450 <mbedtls_mpi_copy>
    4928:	85 c0                	test   %eax,%eax
    492a:	0f 85 70 ff ff ff    	jne    48a0 <mbedtls_rsa_export+0x60>
    4930:	48 85 ed             	test   %rbp,%rbp
    4933:	74 15                	je     494a <mbedtls_rsa_export+0x10a>
    4935:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    493a:	48 89 ef             	mov    %rbp,%rdi
    493d:	e8 0e 4b 00 00       	callq  9450 <mbedtls_mpi_copy>
    4942:	85 c0                	test   %eax,%eax
    4944:	0f 85 56 ff ff ff    	jne    48a0 <mbedtls_rsa_export+0x60>
    494a:	4d 85 ed             	test   %r13,%r13
    494d:	74 14                	je     4963 <mbedtls_rsa_export+0x123>
    494f:	48 8d 73 40          	lea    0x40(%rbx),%rsi
    4953:	4c 89 ef             	mov    %r13,%rdi
    4956:	e8 f5 4a 00 00       	callq  9450 <mbedtls_mpi_copy>
    495b:	85 c0                	test   %eax,%eax
    495d:	0f 85 3d ff ff ff    	jne    48a0 <mbedtls_rsa_export+0x60>
    4963:	31 c0                	xor    %eax,%eax
    4965:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    496b:	0f 84 2f ff ff ff    	je     48a0 <mbedtls_rsa_export+0x60>
    4971:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    4976:	48 83 c4 28          	add    $0x28,%rsp
    497a:	48 8d 73 28          	lea    0x28(%rbx),%rsi
    497e:	5b                   	pop    %rbx
    497f:	5d                   	pop    %rbp
    4980:	41 5c                	pop    %r12
    4982:	41 5d                	pop    %r13
    4984:	41 5e                	pop    %r14
    4986:	41 5f                	pop    %r15
    4988:	e9 c3 4a 00 00       	jmpq   9450 <mbedtls_mpi_copy>
    498d:	0f 1f 00             	nopl   (%rax)
    4990:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    4995:	e9 06 ff ff ff       	jmpq   48a0 <mbedtls_rsa_export+0x60>
    499a:	4c 89 fe             	mov    %r15,%rsi
    499d:	4c 89 f7             	mov    %r14,%rdi
    49a0:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    49a5:	e8 a6 4a 00 00       	callq  9450 <mbedtls_mpi_copy>
    49aa:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    49af:	85 c0                	test   %eax,%eax
    49b1:	0f 84 61 ff ff ff    	je     4918 <mbedtls_rsa_export+0xd8>
    49b7:	e9 e4 fe ff ff       	jmpq   48a0 <mbedtls_rsa_export+0x60>
    49bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000049c0 <mbedtls_rsa_export_crt>:
    49c0:	f3 0f 1e fa          	endbr64 
    49c4:	41 55                	push   %r13
    49c6:	49 89 d5             	mov    %rdx,%r13
    49c9:	41 54                	push   %r12
    49cb:	49 89 f4             	mov    %rsi,%r12
    49ce:	31 f6                	xor    %esi,%esi
    49d0:	55                   	push   %rbp
    49d1:	48 89 cd             	mov    %rcx,%rbp
    49d4:	53                   	push   %rbx
    49d5:	48 89 fb             	mov    %rdi,%rbx
    49d8:	48 83 c7 10          	add    $0x10,%rdi
    49dc:	48 83 ec 08          	sub    $0x8,%rsp
    49e0:	e8 ab 51 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    49e5:	85 c0                	test   %eax,%eax
    49e7:	0f 84 b3 00 00 00    	je     4aa0 <mbedtls_rsa_export_crt+0xe0>
    49ed:	31 f6                	xor    %esi,%esi
    49ef:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    49f3:	e8 98 51 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    49f8:	85 c0                	test   %eax,%eax
    49fa:	0f 84 a0 00 00 00    	je     4aa0 <mbedtls_rsa_export_crt+0xe0>
    4a00:	31 f6                	xor    %esi,%esi
    4a02:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    4a06:	e8 85 51 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    4a0b:	85 c0                	test   %eax,%eax
    4a0d:	0f 84 8d 00 00 00    	je     4aa0 <mbedtls_rsa_export_crt+0xe0>
    4a13:	31 f6                	xor    %esi,%esi
    4a15:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    4a19:	e8 72 51 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    4a1e:	85 c0                	test   %eax,%eax
    4a20:	74 7e                	je     4aa0 <mbedtls_rsa_export_crt+0xe0>
    4a22:	31 f6                	xor    %esi,%esi
    4a24:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    4a28:	e8 63 51 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    4a2d:	85 c0                	test   %eax,%eax
    4a2f:	74 6f                	je     4aa0 <mbedtls_rsa_export_crt+0xe0>
    4a31:	4d 85 e4             	test   %r12,%r12
    4a34:	74 13                	je     4a49 <mbedtls_rsa_export_crt+0x89>
    4a36:	48 8d b3 88 00 00 00 	lea    0x88(%rbx),%rsi
    4a3d:	4c 89 e7             	mov    %r12,%rdi
    4a40:	e8 0b 4a 00 00       	callq  9450 <mbedtls_mpi_copy>
    4a45:	85 c0                	test   %eax,%eax
    4a47:	75 47                	jne    4a90 <mbedtls_rsa_export_crt+0xd0>
    4a49:	4d 85 ed             	test   %r13,%r13
    4a4c:	74 13                	je     4a61 <mbedtls_rsa_export_crt+0xa1>
    4a4e:	48 8d b3 a0 00 00 00 	lea    0xa0(%rbx),%rsi
    4a55:	4c 89 ef             	mov    %r13,%rdi
    4a58:	e8 f3 49 00 00       	callq  9450 <mbedtls_mpi_copy>
    4a5d:	85 c0                	test   %eax,%eax
    4a5f:	75 2f                	jne    4a90 <mbedtls_rsa_export_crt+0xd0>
    4a61:	48 85 ed             	test   %rbp,%rbp
    4a64:	74 13                	je     4a79 <mbedtls_rsa_export_crt+0xb9>
    4a66:	48 8d b3 b8 00 00 00 	lea    0xb8(%rbx),%rsi
    4a6d:	48 89 ef             	mov    %rbp,%rdi
    4a70:	e8 db 49 00 00       	callq  9450 <mbedtls_mpi_copy>
    4a75:	85 c0                	test   %eax,%eax
    4a77:	75 17                	jne    4a90 <mbedtls_rsa_export_crt+0xd0>
    4a79:	31 c0                	xor    %eax,%eax
    4a7b:	48 83 c4 08          	add    $0x8,%rsp
    4a7f:	5b                   	pop    %rbx
    4a80:	5d                   	pop    %rbp
    4a81:	41 5c                	pop    %r12
    4a83:	41 5d                	pop    %r13
    4a85:	c3                   	retq   
    4a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4a8d:	00 00 00 
    4a90:	48 83 c4 08          	add    $0x8,%rsp
    4a94:	2d 80 40 00 00       	sub    $0x4080,%eax
    4a99:	5b                   	pop    %rbx
    4a9a:	5d                   	pop    %rbp
    4a9b:	41 5c                	pop    %r12
    4a9d:	41 5d                	pop    %r13
    4a9f:	c3                   	retq   
    4aa0:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    4aa5:	eb d4                	jmp    4a7b <mbedtls_rsa_export_crt+0xbb>
    4aa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4aae:	00 00 

0000000000004ab0 <mbedtls_rsa_init>:
    4ab0:	f3 0f 1e fa          	endbr64 
    4ab4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    4abb:	48 89 fa             	mov    %rdi,%rdx
    4abe:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    4ac2:	31 c0                	xor    %eax,%eax
    4ac4:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    4ac8:	48 89 d1             	mov    %rdx,%rcx
    4acb:	48 29 f9             	sub    %rdi,%rcx
    4ace:	81 c1 50 01 00 00    	add    $0x150,%ecx
    4ad4:	c1 e9 03             	shr    $0x3,%ecx
    4ad7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4ada:	48 c7 82 48 01 00 00 	movq   $0x0,0x148(%rdx)
    4ae1:	00 00 00 00 
    4ae5:	c3                   	retq   
    4ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4aed:	00 00 00 

0000000000004af0 <mbedtls_rsa_set_padding>:
    4af0:	f3 0f 1e fa          	endbr64 
    4af4:	83 fe 01             	cmp    $0x1,%esi
    4af7:	77 41                	ja     4b3a <mbedtls_rsa_set_padding+0x4a>
    4af9:	41 54                	push   %r12
    4afb:	49 89 fc             	mov    %rdi,%r12
    4afe:	55                   	push   %rbp
    4aff:	89 d5                	mov    %edx,%ebp
    4b01:	53                   	push   %rbx
    4b02:	89 f3                	mov    %esi,%ebx
    4b04:	85 d2                	test   %edx,%edx
    4b06:	74 06                	je     4b0e <mbedtls_rsa_set_padding+0x1e>
    4b08:	40 f6 c6 01          	test   $0x1,%sil
    4b0c:	75 1a                	jne    4b28 <mbedtls_rsa_set_padding+0x38>
    4b0e:	41 89 9c 24 48 01 00 	mov    %ebx,0x148(%r12)
    4b15:	00 
    4b16:	31 c0                	xor    %eax,%eax
    4b18:	41 89 ac 24 4c 01 00 	mov    %ebp,0x14c(%r12)
    4b1f:	00 
    4b20:	5b                   	pop    %rbx
    4b21:	5d                   	pop    %rbp
    4b22:	41 5c                	pop    %r12
    4b24:	c3                   	retq   
    4b25:	0f 1f 00             	nopl   (%rax)
    4b28:	89 d7                	mov    %edx,%edi
    4b2a:	e8 31 b6 00 00       	callq  10160 <mbedtls_hash_info_psa_from_md>
    4b2f:	85 c0                	test   %eax,%eax
    4b31:	75 db                	jne    4b0e <mbedtls_rsa_set_padding+0x1e>
    4b33:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
    4b38:	eb e6                	jmp    4b20 <mbedtls_rsa_set_padding+0x30>
    4b3a:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
    4b3f:	c3                   	retq   

0000000000004b40 <mbedtls_rsa_get_padding_mode>:
    4b40:	f3 0f 1e fa          	endbr64 
    4b44:	8b 87 48 01 00 00    	mov    0x148(%rdi),%eax
    4b4a:	c3                   	retq   
    4b4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004b50 <mbedtls_rsa_get_md_alg>:
    4b50:	f3 0f 1e fa          	endbr64 
    4b54:	8b 87 4c 01 00 00    	mov    0x14c(%rdi),%eax
    4b5a:	c3                   	retq   
    4b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004b60 <mbedtls_rsa_get_len>:
    4b60:	f3 0f 1e fa          	endbr64 
    4b64:	48 8b 47 08          	mov    0x8(%rdi),%rax
    4b68:	c3                   	retq   
    4b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004b70 <mbedtls_rsa_check_pubkey>:
    4b70:	f3 0f 1e fa          	endbr64 
    4b74:	41 55                	push   %r13
    4b76:	31 f6                	xor    %esi,%esi
    4b78:	41 54                	push   %r12
    4b7a:	55                   	push   %rbp
    4b7b:	48 89 fd             	mov    %rdi,%rbp
    4b7e:	e8 0d f3 ff ff       	callq  3e90 <rsa_check_context.isra.0>
    4b83:	85 c0                	test   %eax,%eax
    4b85:	75 51                	jne    4bd8 <mbedtls_rsa_check_pubkey+0x68>
    4b87:	4c 8d 6d 10          	lea    0x10(%rbp),%r13
    4b8b:	41 89 c4             	mov    %eax,%r12d
    4b8e:	4c 89 ef             	mov    %r13,%rdi
    4b91:	e8 ba 4b 00 00       	callq  9750 <mbedtls_mpi_bitlen>
    4b96:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b9a:	76 3c                	jbe    4bd8 <mbedtls_rsa_check_pubkey+0x68>
    4b9c:	48 83 c5 28          	add    $0x28,%rbp
    4ba0:	31 f6                	xor    %esi,%esi
    4ba2:	48 89 ef             	mov    %rbp,%rdi
    4ba5:	e8 96 4a 00 00       	callq  9640 <mbedtls_mpi_get_bit>
    4baa:	85 c0                	test   %eax,%eax
    4bac:	74 2a                	je     4bd8 <mbedtls_rsa_check_pubkey+0x68>
    4bae:	48 89 ef             	mov    %rbp,%rdi
    4bb1:	e8 9a 4b 00 00       	callq  9750 <mbedtls_mpi_bitlen>
    4bb6:	48 83 f8 01          	cmp    $0x1,%rax
    4bba:	76 1c                	jbe    4bd8 <mbedtls_rsa_check_pubkey+0x68>
    4bbc:	4c 89 ee             	mov    %r13,%rsi
    4bbf:	48 89 ef             	mov    %rbp,%rdi
    4bc2:	e8 d9 4e 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    4bc7:	85 c0                	test   %eax,%eax
    4bc9:	79 0d                	jns    4bd8 <mbedtls_rsa_check_pubkey+0x68>
    4bcb:	44 89 e0             	mov    %r12d,%eax
    4bce:	5d                   	pop    %rbp
    4bcf:	41 5c                	pop    %r12
    4bd1:	41 5d                	pop    %r13
    4bd3:	c3                   	retq   
    4bd4:	0f 1f 40 00          	nopl   0x0(%rax)
    4bd8:	41 bc 00 be ff ff    	mov    $0xffffbe00,%r12d
    4bde:	eb eb                	jmp    4bcb <mbedtls_rsa_check_pubkey+0x5b>

0000000000004be0 <mbedtls_rsa_check_privkey>:
    4be0:	f3 0f 1e fa          	endbr64 
    4be4:	41 55                	push   %r13
    4be6:	41 54                	push   %r12
    4be8:	55                   	push   %rbp
    4be9:	53                   	push   %rbx
    4bea:	48 89 fb             	mov    %rdi,%rbx
    4bed:	48 83 ec 08          	sub    $0x8,%rsp
    4bf1:	e8 7a ff ff ff       	callq  4b70 <mbedtls_rsa_check_pubkey>
    4bf6:	85 c0                	test   %eax,%eax
    4bf8:	75 76                	jne    4c70 <mbedtls_rsa_check_privkey+0x90>
    4bfa:	be 01 00 00 00       	mov    $0x1,%esi
    4bff:	48 89 df             	mov    %rbx,%rdi
    4c02:	e8 89 f2 ff ff       	callq  3e90 <rsa_check_context.isra.0>
    4c07:	85 c0                	test   %eax,%eax
    4c09:	75 65                	jne    4c70 <mbedtls_rsa_check_privkey+0x90>
    4c0b:	48 83 ec 08          	sub    $0x8,%rsp
    4c0f:	4c 8d 6b 40          	lea    0x40(%rbx),%r13
    4c13:	4c 8d 63 70          	lea    0x70(%rbx),%r12
    4c17:	45 31 c9             	xor    %r9d,%r9d
    4c1a:	6a 00                	pushq  $0x0
    4c1c:	48 8d 6b 58          	lea    0x58(%rbx),%rbp
    4c20:	4c 89 e9             	mov    %r13,%rcx
    4c23:	4c 89 e2             	mov    %r12,%rdx
    4c26:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    4c2a:	4c 8d 43 28          	lea    0x28(%rbx),%r8
    4c2e:	48 89 ee             	mov    %rbp,%rsi
    4c31:	e8 5a 2a 00 00       	callq  7690 <mbedtls_rsa_validate_params>
    4c36:	5a                   	pop    %rdx
    4c37:	59                   	pop    %rcx
    4c38:	85 c0                	test   %eax,%eax
    4c3a:	75 34                	jne    4c70 <mbedtls_rsa_check_privkey+0x90>
    4c3c:	48 8d 8b 88 00 00 00 	lea    0x88(%rbx),%rcx
    4c43:	4c 89 ea             	mov    %r13,%rdx
    4c46:	4c 89 e6             	mov    %r12,%rsi
    4c49:	48 89 ef             	mov    %rbp,%rdi
    4c4c:	4c 8d 8b b8 00 00 00 	lea    0xb8(%rbx),%r9
    4c53:	4c 8d 83 a0 00 00 00 	lea    0xa0(%rbx),%r8
    4c5a:	e8 f1 2d 00 00       	callq  7a50 <mbedtls_rsa_validate_crt>
    4c5f:	85 c0                	test   %eax,%eax
    4c61:	75 0d                	jne    4c70 <mbedtls_rsa_check_privkey+0x90>
    4c63:	48 83 c4 08          	add    $0x8,%rsp
    4c67:	5b                   	pop    %rbx
    4c68:	5d                   	pop    %rbp
    4c69:	41 5c                	pop    %r12
    4c6b:	41 5d                	pop    %r13
    4c6d:	c3                   	retq   
    4c6e:	66 90                	xchg   %ax,%ax
    4c70:	b8 00 be ff ff       	mov    $0xffffbe00,%eax
    4c75:	eb ec                	jmp    4c63 <mbedtls_rsa_check_privkey+0x83>
    4c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4c7e:	00 00 

0000000000004c80 <mbedtls_rsa_gen_key>:
    4c80:	f3 0f 1e fa          	endbr64 
    4c84:	41 57                	push   %r15
    4c86:	41 56                	push   %r14
    4c88:	41 89 ce             	mov    %ecx,%r14d
    4c8b:	41 55                	push   %r13
    4c8d:	45 89 c5             	mov    %r8d,%r13d
    4c90:	41 54                	push   %r12
    4c92:	55                   	push   %rbp
    4c93:	53                   	push   %rbx
    4c94:	31 db                	xor    %ebx,%ebx
    4c96:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    4c9d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    4ca2:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
    4ca7:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
    4cac:	48 89 34 24          	mov    %rsi,(%rsp)
    4cb0:	48 89 ef             	mov    %rbp,%rdi
    4cb3:	4c 8d bc 24 80 00 00 	lea    0x80(%rsp),%r15
    4cba:	00 
    4cbb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    4cc0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4cc7:	00 00 
    4cc9:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    4cd0:	00 
    4cd1:	31 c0                	xor    %eax,%eax
    4cd3:	81 f9 00 04 00 00    	cmp    $0x400,%ecx
    4cd9:	0f 97 c3             	seta   %bl
    4cdc:	e8 bf 44 00 00       	callq  91a0 <mbedtls_mpi_init>
    4ce1:	4c 89 e7             	mov    %r12,%rdi
    4ce4:	01 db                	add    %ebx,%ebx
    4ce6:	e8 b5 44 00 00       	callq  91a0 <mbedtls_mpi_init>
    4ceb:	4c 89 ff             	mov    %r15,%rdi
    4cee:	e8 ad 44 00 00       	callq  91a0 <mbedtls_mpi_init>
    4cf3:	41 83 fe 7f          	cmp    $0x7f,%r14d
    4cf7:	76 0c                	jbe    4d05 <mbedtls_rsa_gen_key+0x85>
    4cf9:	41 83 fd 02          	cmp    $0x2,%r13d
    4cfd:	7e 06                	jle    4d05 <mbedtls_rsa_gen_key+0x85>
    4cff:	41 f6 c6 01          	test   $0x1,%r14b
    4d03:	74 5b                	je     4d60 <mbedtls_rsa_gen_key+0xe0>
    4d05:	48 89 ef             	mov    %rbp,%rdi
    4d08:	e8 b3 44 00 00       	callq  91c0 <mbedtls_mpi_free>
    4d0d:	4c 89 e7             	mov    %r12,%rdi
    4d10:	e8 ab 44 00 00       	callq  91c0 <mbedtls_mpi_free>
    4d15:	4c 89 ff             	mov    %r15,%rdi
    4d18:	e8 a3 44 00 00       	callq  91c0 <mbedtls_mpi_free>
    4d1d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    4d22:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    4d27:	48 85 ff             	test   %rdi,%rdi
    4d2a:	74 0b                	je     4d37 <mbedtls_rsa_gen_key+0xb7>
    4d2c:	89 04 24             	mov    %eax,(%rsp)
    4d2f:	e8 2c f4 ff ff       	callq  4160 <mbedtls_rsa_free.part.0>
    4d34:	8b 04 24             	mov    (%rsp),%eax
    4d37:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
    4d3e:	00 
    4d3f:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    4d46:	00 00 
    4d48:	0f 85 35 03 00 00    	jne    5083 <mbedtls_rsa_gen_key+0x403>
    4d4e:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    4d55:	5b                   	pop    %rbx
    4d56:	5d                   	pop    %rbp
    4d57:	41 5c                	pop    %r12
    4d59:	41 5d                	pop    %r13
    4d5b:	41 5e                	pop    %r14
    4d5d:	41 5f                	pop    %r15
    4d5f:	c3                   	retq   
    4d60:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4d65:	49 63 f5             	movslq %r13d,%rsi
    4d68:	48 8d 78 28          	lea    0x28(%rax),%rdi
    4d6c:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    4d71:	e8 4a 48 00 00       	callq  95c0 <mbedtls_mpi_lset>
    4d76:	85 c0                	test   %eax,%eax
    4d78:	0f 85 b2 01 00 00    	jne    4f30 <mbedtls_rsa_gen_key+0x2b0>
    4d7e:	44 89 f1             	mov    %r14d,%ecx
    4d81:	b8 00 00 00 00       	mov    $0x0,%eax
    4d86:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
    4d8b:	d1 e9                	shr    %ecx
    4d8d:	41 81 fe c7 00 00 00 	cmp    $0xc7,%r14d
    4d94:	89 ce                	mov    %ecx,%esi
    4d96:	48 89 c1             	mov    %rax,%rcx
    4d99:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4d9e:	8d 56 9d             	lea    -0x63(%rsi),%edx
    4da1:	49 89 f7             	mov    %rsi,%r15
    4da4:	48 0f 47 ca          	cmova  %rdx,%rcx
    4da8:	41 83 c6 01          	add    $0x1,%r14d
    4dac:	4c 8d 68 58          	lea    0x58(%rax),%r13
    4db0:	41 d1 ee             	shr    %r14d
    4db3:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    4db8:	44 89 f1             	mov    %r14d,%ecx
    4dbb:	4c 8d 70 70          	lea    0x70(%rax),%r14
    4dbf:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    4dc4:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    4dc9:	48 8b 0c 24          	mov    (%rsp),%rcx
    4dcd:	89 da                	mov    %ebx,%edx
    4dcf:	4c 89 fe             	mov    %r15,%rsi
    4dd2:	4c 89 ef             	mov    %r13,%rdi
    4dd5:	e8 16 87 00 00       	callq  d4f0 <mbedtls_mpi_gen_prime>
    4dda:	85 c0                	test   %eax,%eax
    4ddc:	0f 85 9e 01 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4de2:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    4de7:	48 8b 0c 24          	mov    (%rsp),%rcx
    4deb:	89 da                	mov    %ebx,%edx
    4ded:	4c 89 fe             	mov    %r15,%rsi
    4df0:	4c 89 f7             	mov    %r14,%rdi
    4df3:	e8 f8 86 00 00       	callq  d4f0 <mbedtls_mpi_gen_prime>
    4df8:	85 c0                	test   %eax,%eax
    4dfa:	0f 85 80 01 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4e00:	4c 89 f2             	mov    %r14,%rdx
    4e03:	4c 89 ee             	mov    %r13,%rsi
    4e06:	48 89 ef             	mov    %rbp,%rdi
    4e09:	e8 e2 50 00 00       	callq  9ef0 <mbedtls_mpi_sub_mpi>
    4e0e:	85 c0                	test   %eax,%eax
    4e10:	0f 85 6a 01 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4e16:	48 89 ef             	mov    %rbp,%rdi
    4e19:	e8 32 49 00 00       	callq  9750 <mbedtls_mpi_bitlen>
    4e1e:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
    4e23:	76 9f                	jbe    4dc4 <mbedtls_rsa_gen_key+0x144>
    4e25:	8b 44 24 40          	mov    0x40(%rsp),%eax
    4e29:	85 c0                	test   %eax,%eax
    4e2b:	0f 88 3f 01 00 00    	js     4f70 <mbedtls_rsa_gen_key+0x2f0>
    4e31:	ba 01 00 00 00       	mov    $0x1,%edx
    4e36:	4c 89 ee             	mov    %r13,%rsi
    4e39:	4c 89 ef             	mov    %r13,%rdi
    4e3c:	e8 2f 51 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    4e41:	85 c0                	test   %eax,%eax
    4e43:	0f 85 37 01 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4e49:	ba 01 00 00 00       	mov    $0x1,%edx
    4e4e:	4c 89 f6             	mov    %r14,%rsi
    4e51:	4c 89 f7             	mov    %r14,%rdi
    4e54:	e8 17 51 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    4e59:	85 c0                	test   %eax,%eax
    4e5b:	0f 85 1f 01 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4e61:	4c 89 f2             	mov    %r14,%rdx
    4e64:	4c 89 ee             	mov    %r13,%rsi
    4e67:	48 89 ef             	mov    %rbp,%rdi
    4e6a:	e8 71 51 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    4e6f:	85 c0                	test   %eax,%eax
    4e71:	0f 85 09 01 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4e77:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4e7c:	48 89 ea             	mov    %rbp,%rdx
    4e7f:	4c 89 e7             	mov    %r12,%rdi
    4e82:	e8 59 73 00 00       	callq  c1e0 <mbedtls_mpi_gcd>
    4e87:	85 c0                	test   %eax,%eax
    4e89:	0f 85 f1 00 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4e8f:	be 01 00 00 00       	mov    $0x1,%esi
    4e94:	4c 89 e7             	mov    %r12,%rdi
    4e97:	e8 f4 4c 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    4e9c:	85 c0                	test   %eax,%eax
    4e9e:	0f 85 20 ff ff ff    	jne    4dc4 <mbedtls_rsa_gen_key+0x144>
    4ea4:	4c 89 f2             	mov    %r14,%rdx
    4ea7:	4c 89 ee             	mov    %r13,%rsi
    4eaa:	4c 89 e7             	mov    %r12,%rdi
    4ead:	e8 2e 73 00 00       	callq  c1e0 <mbedtls_mpi_gcd>
    4eb2:	85 c0                	test   %eax,%eax
    4eb4:	0f 85 c6 00 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4eba:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    4ebf:	31 f6                	xor    %esi,%esi
    4ec1:	4c 89 e1             	mov    %r12,%rcx
    4ec4:	48 89 ea             	mov    %rbp,%rdx
    4ec7:	e8 34 58 00 00       	callq  a700 <mbedtls_mpi_div_mpi>
    4ecc:	85 c0                	test   %eax,%eax
    4ece:	0f 85 ac 00 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4ed4:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4ed9:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    4ede:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4ee3:	48 8d 48 40          	lea    0x40(%rax),%rcx
    4ee7:	48 89 cf             	mov    %rcx,%rdi
    4eea:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    4eef:	e8 8c 7c 00 00       	callq  cb80 <mbedtls_mpi_inv_mod>
    4ef4:	85 c0                	test   %eax,%eax
    4ef6:	0f 85 84 00 00 00    	jne    4f80 <mbedtls_rsa_gen_key+0x300>
    4efc:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    4f01:	e8 4a 48 00 00       	callq  9750 <mbedtls_mpi_bitlen>
    4f06:	48 3b 44 24 38       	cmp    0x38(%rsp),%rax
    4f0b:	0f 86 b3 fe ff ff    	jbe    4dc4 <mbedtls_rsa_gen_key+0x144>
    4f11:	ba 01 00 00 00       	mov    $0x1,%edx
    4f16:	4c 89 ee             	mov    %r13,%rsi
    4f19:	4c 89 ef             	mov    %r13,%rdi
    4f1c:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    4f21:	e8 da 4f 00 00       	callq  9f00 <mbedtls_mpi_add_int>
    4f26:	85 c0                	test   %eax,%eax
    4f28:	74 66                	je     4f90 <mbedtls_rsa_gen_key+0x310>
    4f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4f30:	48 89 ef             	mov    %rbp,%rdi
    4f33:	89 04 24             	mov    %eax,(%rsp)
    4f36:	e8 85 42 00 00       	callq  91c0 <mbedtls_mpi_free>
    4f3b:	4c 89 e7             	mov    %r12,%rdi
    4f3e:	e8 7d 42 00 00       	callq  91c0 <mbedtls_mpi_free>
    4f43:	4c 89 ff             	mov    %r15,%rdi
    4f46:	e8 75 42 00 00       	callq  91c0 <mbedtls_mpi_free>
    4f4b:	8b 04 24             	mov    (%rsp),%eax
    4f4e:	89 c2                	mov    %eax,%edx
    4f50:	f7 da                	neg    %edx
    4f52:	83 e2 80             	and    $0xffffff80,%edx
    4f55:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    4f5b:	0f 84 d9 00 00 00    	je     503a <mbedtls_rsa_gen_key+0x3ba>
    4f61:	e9 bc 00 00 00       	jmpq   5022 <mbedtls_rsa_gen_key+0x3a2>
    4f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4f6d:	00 00 00 
    4f70:	4c 89 f6             	mov    %r14,%rsi
    4f73:	4c 89 ef             	mov    %r13,%rdi
    4f76:	e8 e5 45 00 00       	callq  9560 <mbedtls_mpi_swap>
    4f7b:	e9 b1 fe ff ff       	jmpq   4e31 <mbedtls_rsa_gen_key+0x1b1>
    4f80:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    4f85:	eb a9                	jmp    4f30 <mbedtls_rsa_gen_key+0x2b0>
    4f87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4f8e:	00 00 
    4f90:	ba 01 00 00 00       	mov    $0x1,%edx
    4f95:	4c 89 f6             	mov    %r14,%rsi
    4f98:	4c 89 f7             	mov    %r14,%rdi
    4f9b:	e8 60 4f 00 00       	callq  9f00 <mbedtls_mpi_add_int>
    4fa0:	85 c0                	test   %eax,%eax
    4fa2:	75 8c                	jne    4f30 <mbedtls_rsa_gen_key+0x2b0>
    4fa4:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    4fa9:	4c 89 f2             	mov    %r14,%rdx
    4fac:	4c 89 ee             	mov    %r13,%rsi
    4faf:	48 83 c3 10          	add    $0x10,%rbx
    4fb3:	48 89 df             	mov    %rbx,%rdi
    4fb6:	e8 25 50 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    4fbb:	85 c0                	test   %eax,%eax
    4fbd:	0f 85 6d ff ff ff    	jne    4f30 <mbedtls_rsa_gen_key+0x2b0>
    4fc3:	48 89 df             	mov    %rbx,%rdi
    4fc6:	e8 a5 47 00 00       	callq  9770 <mbedtls_mpi_size>
    4fcb:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    4fd0:	4c 89 f6             	mov    %r14,%rsi
    4fd3:	4c 89 ef             	mov    %r13,%rdi
    4fd6:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4fdb:	48 89 43 08          	mov    %rax,0x8(%rbx)
    4fdf:	48 8d 8b 88 00 00 00 	lea    0x88(%rbx),%rcx
    4fe6:	4c 8d 8b b8 00 00 00 	lea    0xb8(%rbx),%r9
    4fed:	4c 8d 83 a0 00 00 00 	lea    0xa0(%rbx),%r8
    4ff4:	e8 a7 25 00 00       	callq  75a0 <mbedtls_rsa_deduce_crt>
    4ff9:	85 c0                	test   %eax,%eax
    4ffb:	74 4f                	je     504c <mbedtls_rsa_gen_key+0x3cc>
    4ffd:	48 89 ef             	mov    %rbp,%rdi
    5000:	89 04 24             	mov    %eax,(%rsp)
    5003:	e8 b8 41 00 00       	callq  91c0 <mbedtls_mpi_free>
    5008:	4c 89 e7             	mov    %r12,%rdi
    500b:	e8 b0 41 00 00       	callq  91c0 <mbedtls_mpi_free>
    5010:	4c 89 ff             	mov    %r15,%rdi
    5013:	e8 a8 41 00 00       	callq  91c0 <mbedtls_mpi_free>
    5018:	8b 04 24             	mov    (%rsp),%eax
    501b:	89 c2                	mov    %eax,%edx
    501d:	f7 da                	neg    %edx
    501f:	83 e2 80             	and    $0xffffff80,%edx
    5022:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5027:	89 44 24 08          	mov    %eax,0x8(%rsp)
    502b:	89 14 24             	mov    %edx,(%rsp)
    502e:	e8 2d f1 ff ff       	callq  4160 <mbedtls_rsa_free.part.0>
    5033:	8b 44 24 08          	mov    0x8(%rsp),%eax
    5037:	8b 14 24             	mov    (%rsp),%edx
    503a:	85 d2                	test   %edx,%edx
    503c:	0f 85 f5 fc ff ff    	jne    4d37 <mbedtls_rsa_gen_key+0xb7>
    5042:	2d 80 41 00 00       	sub    $0x4180,%eax
    5047:	e9 eb fc ff ff       	jmpq   4d37 <mbedtls_rsa_gen_key+0xb7>
    504c:	48 89 df             	mov    %rbx,%rdi
    504f:	e8 8c fb ff ff       	callq  4be0 <mbedtls_rsa_check_privkey>
    5054:	48 89 ef             	mov    %rbp,%rdi
    5057:	89 04 24             	mov    %eax,(%rsp)
    505a:	e8 61 41 00 00       	callq  91c0 <mbedtls_mpi_free>
    505f:	4c 89 e7             	mov    %r12,%rdi
    5062:	e8 59 41 00 00       	callq  91c0 <mbedtls_mpi_free>
    5067:	4c 89 ff             	mov    %r15,%rdi
    506a:	e8 51 41 00 00       	callq  91c0 <mbedtls_mpi_free>
    506f:	8b 04 24             	mov    (%rsp),%eax
    5072:	85 c0                	test   %eax,%eax
    5074:	0f 84 bd fc ff ff    	je     4d37 <mbedtls_rsa_gen_key+0xb7>
    507a:	89 c2                	mov    %eax,%edx
    507c:	f7 da                	neg    %edx
    507e:	83 e2 80             	and    $0xffffff80,%edx
    5081:	eb 9f                	jmp    5022 <mbedtls_rsa_gen_key+0x3a2>
    5083:	e8 f8 e1 ff ff       	callq  3280 <__stack_chk_fail@plt>
    5088:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    508f:	00 

0000000000005090 <mbedtls_rsa_check_pub_priv>:
    5090:	f3 0f 1e fa          	endbr64 
    5094:	55                   	push   %rbp
    5095:	48 89 f5             	mov    %rsi,%rbp
    5098:	53                   	push   %rbx
    5099:	48 89 fb             	mov    %rdi,%rbx
    509c:	48 83 ec 08          	sub    $0x8,%rsp
    50a0:	e8 cb fa ff ff       	callq  4b70 <mbedtls_rsa_check_pubkey>
    50a5:	85 c0                	test   %eax,%eax
    50a7:	75 37                	jne    50e0 <mbedtls_rsa_check_pub_priv+0x50>
    50a9:	48 89 ef             	mov    %rbp,%rdi
    50ac:	e8 2f fb ff ff       	callq  4be0 <mbedtls_rsa_check_privkey>
    50b1:	85 c0                	test   %eax,%eax
    50b3:	75 2b                	jne    50e0 <mbedtls_rsa_check_pub_priv+0x50>
    50b5:	48 8d 75 10          	lea    0x10(%rbp),%rsi
    50b9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    50bd:	e8 de 49 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    50c2:	85 c0                	test   %eax,%eax
    50c4:	75 1a                	jne    50e0 <mbedtls_rsa_check_pub_priv+0x50>
    50c6:	48 8d 75 28          	lea    0x28(%rbp),%rsi
    50ca:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    50ce:	e8 cd 49 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    50d3:	85 c0                	test   %eax,%eax
    50d5:	75 09                	jne    50e0 <mbedtls_rsa_check_pub_priv+0x50>
    50d7:	48 83 c4 08          	add    $0x8,%rsp
    50db:	5b                   	pop    %rbx
    50dc:	5d                   	pop    %rbp
    50dd:	c3                   	retq   
    50de:	66 90                	xchg   %ax,%ax
    50e0:	b8 00 be ff ff       	mov    $0xffffbe00,%eax
    50e5:	eb f0                	jmp    50d7 <mbedtls_rsa_check_pub_priv+0x47>
    50e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    50ee:	00 00 

00000000000050f0 <mbedtls_rsa_public>:
    50f0:	f3 0f 1e fa          	endbr64 
    50f4:	41 56                	push   %r14
    50f6:	41 55                	push   %r13
    50f8:	49 89 d5             	mov    %rdx,%r13
    50fb:	41 54                	push   %r12
    50fd:	49 89 f4             	mov    %rsi,%r12
    5100:	31 f6                	xor    %esi,%esi
    5102:	55                   	push   %rbp
    5103:	53                   	push   %rbx
    5104:	48 89 fb             	mov    %rdi,%rbx
    5107:	48 83 ec 30          	sub    $0x30,%rsp
    510b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5112:	00 00 
    5114:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5119:	31 c0                	xor    %eax,%eax
    511b:	e8 70 ed ff ff       	callq  3e90 <rsa_check_context.isra.0>
    5120:	85 c0                	test   %eax,%eax
    5122:	0f 85 e0 00 00 00    	jne    5208 <mbedtls_rsa_public+0x118>
    5128:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    512d:	48 89 ef             	mov    %rbp,%rdi
    5130:	e8 6b 40 00 00       	callq  91a0 <mbedtls_mpi_init>
    5135:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5139:	4c 89 e6             	mov    %r12,%rsi
    513c:	48 89 ef             	mov    %rbp,%rdi
    513f:	e8 ac 46 00 00       	callq  97f0 <mbedtls_mpi_read_binary>
    5144:	85 c0                	test   %eax,%eax
    5146:	74 40                	je     5188 <mbedtls_rsa_public+0x98>
    5148:	48 89 ef             	mov    %rbp,%rdi
    514b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    514f:	e8 6c 40 00 00       	callq  91c0 <mbedtls_mpi_free>
    5154:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    5158:	44 8d a0 80 bd ff ff 	lea    -0x4280(%rax),%r12d
    515f:	90                   	nop
    5160:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5165:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    516c:	00 00 
    516e:	0f 85 9f 00 00 00    	jne    5213 <mbedtls_rsa_public+0x123>
    5174:	48 83 c4 30          	add    $0x30,%rsp
    5178:	44 89 e0             	mov    %r12d,%eax
    517b:	5b                   	pop    %rbx
    517c:	5d                   	pop    %rbp
    517d:	41 5c                	pop    %r12
    517f:	41 5d                	pop    %r13
    5181:	41 5e                	pop    %r14
    5183:	c3                   	retq   
    5184:	0f 1f 40 00          	nopl   0x0(%rax)
    5188:	4c 8d 63 10          	lea    0x10(%rbx),%r12
    518c:	48 89 ef             	mov    %rbp,%rdi
    518f:	4c 89 e6             	mov    %r12,%rsi
    5192:	e8 09 49 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    5197:	85 c0                	test   %eax,%eax
    5199:	78 15                	js     51b0 <mbedtls_rsa_public+0xc0>
    519b:	48 89 ef             	mov    %rbp,%rdi
    519e:	41 bc 7c bd ff ff    	mov    $0xffffbd7c,%r12d
    51a4:	e8 17 40 00 00       	callq  91c0 <mbedtls_mpi_free>
    51a9:	eb b5                	jmp    5160 <mbedtls_rsa_public+0x70>
    51ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    51b0:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    51b4:	4c 89 e1             	mov    %r12,%rcx
    51b7:	48 89 ee             	mov    %rbp,%rsi
    51ba:	48 89 ef             	mov    %rbp,%rdi
    51bd:	4c 8d 83 d0 00 00 00 	lea    0xd0(%rbx),%r8
    51c4:	4c 8b 73 08          	mov    0x8(%rbx),%r14
    51c8:	e8 33 65 00 00       	callq  b700 <mbedtls_mpi_exp_mod>
    51cd:	85 c0                	test   %eax,%eax
    51cf:	0f 85 73 ff ff ff    	jne    5148 <mbedtls_rsa_public+0x58>
    51d5:	48 89 ef             	mov    %rbp,%rdi
    51d8:	4c 89 f2             	mov    %r14,%rdx
    51db:	4c 89 ee             	mov    %r13,%rsi
    51de:	e8 7d 46 00 00       	callq  9860 <mbedtls_mpi_write_binary>
    51e3:	48 89 ef             	mov    %rbp,%rdi
    51e6:	41 89 c4             	mov    %eax,%r12d
    51e9:	e8 d2 3f 00 00       	callq  91c0 <mbedtls_mpi_free>
    51ee:	45 85 e4             	test   %r12d,%r12d
    51f1:	0f 84 69 ff ff ff    	je     5160 <mbedtls_rsa_public+0x70>
    51f7:	41 81 ec 80 42 00 00 	sub    $0x4280,%r12d
    51fe:	e9 5d ff ff ff       	jmpq   5160 <mbedtls_rsa_public+0x70>
    5203:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5208:	41 bc 80 bf ff ff    	mov    $0xffffbf80,%r12d
    520e:	e9 4d ff ff ff       	jmpq   5160 <mbedtls_rsa_public+0x70>
    5213:	e8 68 e0 ff ff       	callq  3280 <__stack_chk_fail@plt>
    5218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    521f:	00 

0000000000005220 <mbedtls_rsa_private>:
    5220:	f3 0f 1e fa          	endbr64 
    5224:	41 57                	push   %r15
    5226:	41 56                	push   %r14
    5228:	41 55                	push   %r13
    522a:	41 54                	push   %r12
    522c:	55                   	push   %rbp
    522d:	53                   	push   %rbx
    522e:	48 81 ec f8 01 00 00 	sub    $0x1f8,%rsp
    5235:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    523a:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    523f:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    5244:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    524b:	00 00 
    524d:	48 89 84 24 e8 01 00 	mov    %rax,0x1e8(%rsp)
    5254:	00 
    5255:	31 c0                	xor    %eax,%eax
    5257:	48 85 f6             	test   %rsi,%rsi
    525a:	0f 84 20 07 00 00    	je     5980 <mbedtls_rsa_private+0x760>
    5260:	be 01 00 00 00       	mov    $0x1,%esi
    5265:	48 89 fb             	mov    %rdi,%rbx
    5268:	49 89 cc             	mov    %rcx,%r12
    526b:	e8 20 ec ff ff       	callq  3e90 <rsa_check_context.isra.0>
    5270:	85 c0                	test   %eax,%eax
    5272:	0f 85 08 07 00 00    	jne    5980 <mbedtls_rsa_private+0x760>
    5278:	48 8d ac 24 90 00 00 	lea    0x90(%rsp),%rbp
    527f:	00 
    5280:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
    5287:	00 
    5288:	48 89 ef             	mov    %rbp,%rdi
    528b:	4c 8d bc 24 d0 00 00 	lea    0xd0(%rsp),%r15
    5292:	00 
    5293:	4c 8d ac 24 90 01 00 	lea    0x190(%rsp),%r13
    529a:	00 
    529b:	e8 00 3f 00 00       	callq  91a0 <mbedtls_mpi_init>
    52a0:	4c 89 f7             	mov    %r14,%rdi
    52a3:	e8 f8 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    52a8:	4c 89 ff             	mov    %r15,%rdi
    52ab:	e8 f0 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    52b0:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    52b7:	00 
    52b8:	48 89 c7             	mov    %rax,%rdi
    52bb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    52c0:	e8 db 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    52c5:	48 8d 84 24 50 01 00 	lea    0x150(%rsp),%rax
    52cc:	00 
    52cd:	48 89 c7             	mov    %rax,%rdi
    52d0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    52d5:	e8 c6 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    52da:	48 8d 84 24 70 01 00 	lea    0x170(%rsp),%rax
    52e1:	00 
    52e2:	48 89 c7             	mov    %rax,%rdi
    52e5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    52ea:	e8 b1 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    52ef:	48 8d 84 24 10 01 00 	lea    0x110(%rsp),%rax
    52f6:	00 
    52f7:	48 89 c7             	mov    %rax,%rdi
    52fa:	48 89 04 24          	mov    %rax,(%rsp)
    52fe:	e8 9d 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    5303:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
    530a:	00 
    530b:	48 89 c7             	mov    %rax,%rdi
    530e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5313:	e8 88 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    5318:	4c 89 ef             	mov    %r13,%rdi
    531b:	e8 80 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    5320:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
    5327:	00 
    5328:	48 89 c7             	mov    %rax,%rdi
    532b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5330:	e8 6b 3e 00 00       	callq  91a0 <mbedtls_mpi_init>
    5335:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5339:	4c 89 e6             	mov    %r12,%rsi
    533c:	48 89 ef             	mov    %rbp,%rdi
    533f:	e8 ac 44 00 00       	callq  97f0 <mbedtls_mpi_read_binary>
    5344:	85 c0                	test   %eax,%eax
    5346:	0f 84 a4 00 00 00    	je     53f0 <mbedtls_rsa_private+0x1d0>
    534c:	83 f8 81             	cmp    $0xffffff81,%eax
    534f:	0f 9d c1             	setge  %cl
    5352:	89 cb                	mov    %ecx,%ebx
    5354:	4c 89 f7             	mov    %r14,%rdi
    5357:	89 44 24 30          	mov    %eax,0x30(%rsp)
    535b:	e8 60 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    5360:	4c 89 ff             	mov    %r15,%rdi
    5363:	e8 58 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    5368:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    536d:	e8 4e 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    5372:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    5377:	e8 44 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    537c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    5381:	e8 3a 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    5386:	48 89 ef             	mov    %rbp,%rdi
    5389:	e8 32 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    538e:	48 8b 3c 24          	mov    (%rsp),%rdi
    5392:	e8 29 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    5397:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    539c:	e8 1f 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    53a1:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    53a6:	e8 15 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    53ab:	4c 89 ef             	mov    %r13,%rdi
    53ae:	e8 0d 3e 00 00       	callq  91c0 <mbedtls_mpi_free>
    53b3:	8b 44 24 30          	mov    0x30(%rsp),%eax
    53b7:	84 db                	test   %bl,%bl
    53b9:	8d 90 00 bd ff ff    	lea    -0x4300(%rax),%edx
    53bf:	0f 45 c2             	cmovne %edx,%eax
    53c2:	48 8b 9c 24 e8 01 00 	mov    0x1e8(%rsp),%rbx
    53c9:	00 
    53ca:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    53d1:	00 00 
    53d3:	0f 85 b1 05 00 00    	jne    598a <mbedtls_rsa_private+0x76a>
    53d9:	48 81 c4 f8 01 00 00 	add    $0x1f8,%rsp
    53e0:	5b                   	pop    %rbx
    53e1:	5d                   	pop    %rbp
    53e2:	41 5c                	pop    %r12
    53e4:	41 5d                	pop    %r13
    53e6:	41 5e                	pop    %r14
    53e8:	41 5f                	pop    %r15
    53ea:	c3                   	retq   
    53eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    53f0:	48 8d 43 10          	lea    0x10(%rbx),%rax
    53f4:	48 89 ef             	mov    %rbp,%rdi
    53f7:	48 89 c6             	mov    %rax,%rsi
    53fa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    53ff:	e8 9c 46 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    5404:	85 c0                	test   %eax,%eax
    5406:	78 68                	js     5470 <mbedtls_rsa_private+0x250>
    5408:	4c 89 f7             	mov    %r14,%rdi
    540b:	e8 b0 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    5410:	4c 89 ff             	mov    %r15,%rdi
    5413:	e8 a8 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    5418:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    541d:	e8 9e 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    5422:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    5427:	e8 94 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    542c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    5431:	e8 8a 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    5436:	48 89 ef             	mov    %rbp,%rdi
    5439:	e8 82 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    543e:	48 8b 3c 24          	mov    (%rsp),%rdi
    5442:	e8 79 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    5447:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    544c:	e8 6f 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    5451:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    5456:	e8 65 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    545b:	4c 89 ef             	mov    %r13,%rdi
    545e:	e8 5d 3d 00 00       	callq  91c0 <mbedtls_mpi_free>
    5463:	b8 fc bc ff ff       	mov    $0xffffbcfc,%eax
    5468:	e9 55 ff ff ff       	jmpq   53c2 <mbedtls_rsa_private+0x1a2>
    546d:	0f 1f 00             	nopl   (%rax)
    5470:	48 89 ee             	mov    %rbp,%rsi
    5473:	4c 89 ef             	mov    %r13,%rdi
    5476:	e8 d5 3f 00 00       	callq  9450 <mbedtls_mpi_copy>
    547b:	85 c0                	test   %eax,%eax
    547d:	0f 85 ad 03 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    5483:	48 8d 84 24 d0 01 00 	lea    0x1d0(%rsp),%rax
    548a:	00 
    548b:	48 89 c7             	mov    %rax,%rdi
    548e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    5493:	e8 08 3d 00 00       	callq  91a0 <mbedtls_mpi_init>
    5498:	48 83 bb 40 01 00 00 	cmpq   $0x0,0x140(%rbx)
    549f:	00 
    54a0:	0f 84 9a 03 00 00    	je     5840 <mbedtls_rsa_private+0x620>
    54a6:	4c 8d a3 18 01 00 00 	lea    0x118(%rbx),%r12
    54ad:	4c 89 e2             	mov    %r12,%rdx
    54b0:	4c 89 e6             	mov    %r12,%rsi
    54b3:	4c 89 e7             	mov    %r12,%rdi
    54b6:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
    54bb:	e8 20 4b 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    54c0:	85 c0                	test   %eax,%eax
    54c2:	0f 85 af 04 00 00    	jne    5977 <mbedtls_rsa_private+0x757>
    54c8:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    54cd:	4c 89 e6             	mov    %r12,%rsi
    54d0:	4c 89 e7             	mov    %r12,%rdi
    54d3:	e8 78 5b 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    54d8:	85 c0                	test   %eax,%eax
    54da:	0f 85 97 04 00 00    	jne    5977 <mbedtls_rsa_private+0x757>
    54e0:	48 8d 83 30 01 00 00 	lea    0x130(%rbx),%rax
    54e7:	48 89 c6             	mov    %rax,%rsi
    54ea:	48 89 c2             	mov    %rax,%rdx
    54ed:	48 89 c7             	mov    %rax,%rdi
    54f0:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    54f7:	00 
    54f8:	e8 e3 4a 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    54fd:	85 c0                	test   %eax,%eax
    54ff:	0f 85 72 04 00 00    	jne    5977 <mbedtls_rsa_private+0x757>
    5505:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    550c:	00 
    550d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    5512:	48 89 f7             	mov    %rsi,%rdi
    5515:	e8 36 5b 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    551a:	85 c0                	test   %eax,%eax
    551c:	0f 85 55 04 00 00    	jne    5977 <mbedtls_rsa_private+0x757>
    5522:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    5527:	e8 94 3c 00 00       	callq  91c0 <mbedtls_mpi_free>
    552c:	0f 1f 40 00          	nopl   0x0(%rax)
    5530:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    5535:	48 89 ee             	mov    %rbp,%rsi
    5538:	48 89 ef             	mov    %rbp,%rdi
    553b:	e8 a0 4a 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    5540:	85 c0                	test   %eax,%eax
    5542:	0f 85 e8 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    5548:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    554d:	48 89 ee             	mov    %rbp,%rsi
    5550:	48 89 ef             	mov    %rbp,%rdi
    5553:	e8 f8 5a 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    5558:	85 c0                	test   %eax,%eax
    555a:	0f 85 d0 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    5560:	4c 8d 63 58          	lea    0x58(%rbx),%r12
    5564:	ba 01 00 00 00       	mov    $0x1,%edx
    5569:	4c 89 f7             	mov    %r14,%rdi
    556c:	4c 89 e6             	mov    %r12,%rsi
    556f:	e8 fc 49 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    5574:	85 c0                	test   %eax,%eax
    5576:	0f 85 b4 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    557c:	48 8d 43 70          	lea    0x70(%rbx),%rax
    5580:	ba 01 00 00 00       	mov    $0x1,%edx
    5585:	4c 89 ff             	mov    %r15,%rdi
    5588:	48 89 c6             	mov    %rax,%rsi
    558b:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    5590:	e8 db 49 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    5595:	85 c0                	test   %eax,%eax
    5597:	0f 85 93 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    559d:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    55a2:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    55a7:	be 1c 00 00 00       	mov    $0x1c,%esi
    55ac:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    55b1:	e8 6a 6f 00 00       	callq  c520 <mbedtls_mpi_fill_random>
    55b6:	85 c0                	test   %eax,%eax
    55b8:	0f 85 72 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    55be:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    55c3:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    55c8:	4c 89 f6             	mov    %r14,%rsi
    55cb:	e8 10 4a 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    55d0:	85 c0                	test   %eax,%eax
    55d2:	0f 85 58 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    55d8:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    55dd:	48 8d 93 88 00 00 00 	lea    0x88(%rbx),%rdx
    55e4:	48 89 f7             	mov    %rsi,%rdi
    55e7:	e8 f4 48 00 00       	callq  9ee0 <mbedtls_mpi_add_mpi>
    55ec:	85 c0                	test   %eax,%eax
    55ee:	0f 85 3c 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    55f4:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    55f9:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    55fe:	be 1c 00 00 00       	mov    $0x1c,%esi
    5603:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5608:	e8 13 6f 00 00       	callq  c520 <mbedtls_mpi_fill_random>
    560d:	85 c0                	test   %eax,%eax
    560f:	0f 85 1b 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    5615:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    561a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    561f:	4c 89 fe             	mov    %r15,%rsi
    5622:	e8 b9 49 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    5627:	85 c0                	test   %eax,%eax
    5629:	0f 85 01 02 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    562f:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    5634:	48 8d 93 a0 00 00 00 	lea    0xa0(%rbx),%rdx
    563b:	48 89 f7             	mov    %rsi,%rdi
    563e:	e8 9d 48 00 00       	callq  9ee0 <mbedtls_mpi_add_mpi>
    5643:	85 c0                	test   %eax,%eax
    5645:	0f 85 e5 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    564b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    5650:	48 8b 3c 24          	mov    (%rsp),%rdi
    5654:	4c 89 e1             	mov    %r12,%rcx
    5657:	48 89 ee             	mov    %rbp,%rsi
    565a:	4c 8d 83 e8 00 00 00 	lea    0xe8(%rbx),%r8
    5661:	e8 9a 60 00 00       	callq  b700 <mbedtls_mpi_exp_mod>
    5666:	85 c0                	test   %eax,%eax
    5668:	0f 85 c2 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    566e:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    5673:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    5678:	48 89 ee             	mov    %rbp,%rsi
    567b:	4c 8d 83 00 01 00 00 	lea    0x100(%rbx),%r8
    5682:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5687:	e8 74 60 00 00       	callq  b700 <mbedtls_mpi_exp_mod>
    568c:	85 c0                	test   %eax,%eax
    568e:	0f 85 9c 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    5694:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    5699:	48 8b 34 24          	mov    (%rsp),%rsi
    569d:	48 89 ef             	mov    %rbp,%rdi
    56a0:	e8 4b 48 00 00       	callq  9ef0 <mbedtls_mpi_sub_mpi>
    56a5:	85 c0                	test   %eax,%eax
    56a7:	0f 85 83 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    56ad:	48 8b 3c 24          	mov    (%rsp),%rdi
    56b1:	48 8d 93 b8 00 00 00 	lea    0xb8(%rbx),%rdx
    56b8:	48 89 ee             	mov    %rbp,%rsi
    56bb:	e8 20 49 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    56c0:	85 c0                	test   %eax,%eax
    56c2:	0f 85 68 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    56c8:	48 8b 34 24          	mov    (%rsp),%rsi
    56cc:	4c 89 e2             	mov    %r12,%rdx
    56cf:	48 89 ef             	mov    %rbp,%rdi
    56d2:	e8 79 59 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    56d7:	85 c0                	test   %eax,%eax
    56d9:	0f 85 51 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    56df:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    56e4:	48 8b 3c 24          	mov    (%rsp),%rdi
    56e8:	48 89 ee             	mov    %rbp,%rsi
    56eb:	e8 f0 48 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    56f0:	85 c0                	test   %eax,%eax
    56f2:	0f 85 38 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    56f8:	48 8b 14 24          	mov    (%rsp),%rdx
    56fc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    5701:	48 89 ef             	mov    %rbp,%rdi
    5704:	e8 d7 47 00 00       	callq  9ee0 <mbedtls_mpi_add_mpi>
    5709:	85 c0                	test   %eax,%eax
    570b:	0f 85 1f 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    5711:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    5718:	00 
    5719:	48 89 ee             	mov    %rbp,%rsi
    571c:	48 89 ef             	mov    %rbp,%rdi
    571f:	e8 bc 48 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    5724:	85 c0                	test   %eax,%eax
    5726:	0f 85 04 01 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    572c:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    5731:	48 89 ee             	mov    %rbp,%rsi
    5734:	48 89 ef             	mov    %rbp,%rdi
    5737:	e8 14 59 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    573c:	85 c0                	test   %eax,%eax
    573e:	0f 85 ec 00 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    5744:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    5749:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    574e:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    5752:	48 89 ee             	mov    %rbp,%rsi
    5755:	4c 8d 83 d0 00 00 00 	lea    0xd0(%rbx),%r8
    575c:	e8 9f 5f 00 00       	callq  b700 <mbedtls_mpi_exp_mod>
    5761:	85 c0                	test   %eax,%eax
    5763:	0f 85 c7 00 00 00    	jne    5830 <mbedtls_rsa_private+0x610>
    5769:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    576e:	4c 89 ee             	mov    %r13,%rsi
    5771:	e8 2a 43 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    5776:	85 c0                	test   %eax,%eax
    5778:	0f 85 11 02 00 00    	jne    598f <mbedtls_rsa_private+0x76f>
    577e:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5782:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    5787:	48 89 ef             	mov    %rbp,%rdi
    578a:	e8 d1 40 00 00       	callq  9860 <mbedtls_mpi_write_binary>
    578f:	85 c0                	test   %eax,%eax
    5791:	41 0f 95 c4          	setne  %r12b
    5795:	83 f8 81             	cmp    $0xffffff81,%eax
    5798:	0f 9d c2             	setge  %dl
    579b:	41 21 d4             	and    %edx,%r12d
    579e:	44 89 e3             	mov    %r12d,%ebx
    57a1:	e9 ae fb ff ff       	jmpq   5354 <mbedtls_rsa_private+0x134>
    57a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    57ad:	00 00 00 
    57b0:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    57b5:	4c 89 e6             	mov    %r12,%rsi
    57b8:	4c 89 e7             	mov    %r12,%rdi
    57bb:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
    57c0:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
    57c5:	4c 8b 74 24 78       	mov    0x78(%rsp),%r14
    57ca:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    57d1:	00 
    57d2:	e8 09 48 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    57d7:	85 c0                	test   %eax,%eax
    57d9:	0f 85 98 01 00 00    	jne    5977 <mbedtls_rsa_private+0x757>
    57df:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    57e4:	4c 89 e6             	mov    %r12,%rsi
    57e7:	4c 89 e7             	mov    %r12,%rdi
    57ea:	e8 61 58 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    57ef:	85 c0                	test   %eax,%eax
    57f1:	0f 85 80 01 00 00    	jne    5977 <mbedtls_rsa_private+0x757>
    57f7:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    57fc:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    5800:	4c 89 e6             	mov    %r12,%rsi
    5803:	4c 89 e7             	mov    %r12,%rdi
    5806:	4c 8d 83 d0 00 00 00 	lea    0xd0(%rbx),%r8
    580d:	e8 ee 5e 00 00       	callq  b700 <mbedtls_mpi_exp_mod>
    5812:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    5817:	89 44 24 64          	mov    %eax,0x64(%rsp)
    581b:	e8 a0 39 00 00       	callq  91c0 <mbedtls_mpi_free>
    5820:	8b 44 24 64          	mov    0x64(%rsp),%eax
    5824:	85 c0                	test   %eax,%eax
    5826:	0f 84 04 fd ff ff    	je     5530 <mbedtls_rsa_private+0x310>
    582c:	0f 1f 40 00          	nopl   0x0(%rax)
    5830:	83 f8 81             	cmp    $0xffffff81,%eax
    5833:	0f 9d c3             	setge  %bl
    5836:	e9 19 fb ff ff       	jmpq   5354 <mbedtls_rsa_private+0x134>
    583b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5840:	48 8d 83 30 01 00 00 	lea    0x130(%rbx),%rax
    5847:	c7 44 24 64 0b 00 00 	movl   $0xb,0x64(%rsp)
    584e:	00 
    584f:	4c 8d a3 18 01 00 00 	lea    0x118(%rbx),%r12
    5856:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    585d:	00 
    585e:	48 89 6c 24 68       	mov    %rbp,0x68(%rsp)
    5863:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
    5868:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
    586d:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    5872:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
    5879:	00 
    587a:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    587f:	4c 89 74 24 78       	mov    %r14,0x78(%rsp)
    5884:	49 89 c6             	mov    %rax,%r14
    5887:	48 8b 43 08          	mov    0x8(%rbx),%rax
    588b:	4c 89 e9             	mov    %r13,%rcx
    588e:	48 89 ea             	mov    %rbp,%rdx
    5891:	4c 89 f7             	mov    %r14,%rdi
    5894:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
    5898:	e8 83 6c 00 00       	callq  c520 <mbedtls_mpi_fill_random>
    589d:	85 c0                	test   %eax,%eax
    589f:	0f 85 bb 00 00 00    	jne    5960 <mbedtls_rsa_private+0x740>
    58a5:	48 8b 43 08          	mov    0x8(%rbx),%rax
    58a9:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    58ae:	4c 89 e9             	mov    %r13,%rcx
    58b1:	48 89 ea             	mov    %rbp,%rdx
    58b4:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
    58b8:	e8 63 6c 00 00       	callq  c520 <mbedtls_mpi_fill_random>
    58bd:	85 c0                	test   %eax,%eax
    58bf:	0f 85 9b 00 00 00    	jne    5960 <mbedtls_rsa_private+0x740>
    58c5:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    58ca:	4c 89 f6             	mov    %r14,%rsi
    58cd:	4c 89 e7             	mov    %r12,%rdi
    58d0:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
    58d5:	e8 06 47 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    58da:	85 c0                	test   %eax,%eax
    58dc:	0f 85 7e 00 00 00    	jne    5960 <mbedtls_rsa_private+0x740>
    58e2:	4c 89 fa             	mov    %r15,%rdx
    58e5:	4c 89 e6             	mov    %r12,%rsi
    58e8:	4c 89 e7             	mov    %r12,%rdi
    58eb:	e8 60 57 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    58f0:	85 c0                	test   %eax,%eax
    58f2:	75 6c                	jne    5960 <mbedtls_rsa_private+0x740>
    58f4:	4c 89 fa             	mov    %r15,%rdx
    58f7:	4c 89 e6             	mov    %r12,%rsi
    58fa:	4c 89 e7             	mov    %r12,%rdi
    58fd:	e8 7e 72 00 00       	callq  cb80 <mbedtls_mpi_inv_mod>
    5902:	85 c0                	test   %eax,%eax
    5904:	0f 95 c2             	setne  %dl
    5907:	83 f8 f2             	cmp    $0xfffffff2,%eax
    590a:	0f 95 c1             	setne  %cl
    590d:	20 ca                	and    %cl,%dl
    590f:	75 4f                	jne    5960 <mbedtls_rsa_private+0x740>
    5911:	83 f8 f2             	cmp    $0xfffffff2,%eax
    5914:	0f 85 96 fe ff ff    	jne    57b0 <mbedtls_rsa_private+0x590>
    591a:	83 6c 24 64 01       	subl   $0x1,0x64(%rsp)
    591f:	0f 85 62 ff ff ff    	jne    5887 <mbedtls_rsa_private+0x667>
    5925:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
    592a:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
    592f:	89 d3                	mov    %edx,%ebx
    5931:	b8 80 bb ff ff       	mov    $0xffffbb80,%eax
    5936:	4c 8b 74 24 78       	mov    0x78(%rsp),%r14
    593b:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    5942:	00 
    5943:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    5948:	89 44 24 30          	mov    %eax,0x30(%rsp)
    594c:	e8 6f 38 00 00       	callq  91c0 <mbedtls_mpi_free>
    5951:	8b 44 24 30          	mov    0x30(%rsp),%eax
    5955:	e9 fa f9 ff ff       	jmpq   5354 <mbedtls_rsa_private+0x134>
    595a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5960:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
    5965:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
    596a:	4c 8b 74 24 78       	mov    0x78(%rsp),%r14
    596f:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    5976:	00 
    5977:	83 f8 81             	cmp    $0xffffff81,%eax
    597a:	0f 9d c3             	setge  %bl
    597d:	eb c4                	jmp    5943 <mbedtls_rsa_private+0x723>
    597f:	90                   	nop
    5980:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    5985:	e9 38 fa ff ff       	jmpq   53c2 <mbedtls_rsa_private+0x1a2>
    598a:	e8 f1 d8 ff ff       	callq  3280 <__stack_chk_fail@plt>
    598f:	4c 89 f7             	mov    %r14,%rdi
    5992:	e8 29 38 00 00       	callq  91c0 <mbedtls_mpi_free>
    5997:	4c 89 ff             	mov    %r15,%rdi
    599a:	e8 21 38 00 00       	callq  91c0 <mbedtls_mpi_free>
    599f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    59a4:	e8 17 38 00 00       	callq  91c0 <mbedtls_mpi_free>
    59a9:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    59ae:	e8 0d 38 00 00       	callq  91c0 <mbedtls_mpi_free>
    59b3:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    59b8:	e8 03 38 00 00       	callq  91c0 <mbedtls_mpi_free>
    59bd:	48 89 ef             	mov    %rbp,%rdi
    59c0:	e8 fb 37 00 00       	callq  91c0 <mbedtls_mpi_free>
    59c5:	48 8b 3c 24          	mov    (%rsp),%rdi
    59c9:	e8 f2 37 00 00       	callq  91c0 <mbedtls_mpi_free>
    59ce:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    59d3:	e8 e8 37 00 00       	callq  91c0 <mbedtls_mpi_free>
    59d8:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    59dd:	e8 de 37 00 00       	callq  91c0 <mbedtls_mpi_free>
    59e2:	4c 89 ef             	mov    %r13,%rdi
    59e5:	e8 d6 37 00 00       	callq  91c0 <mbedtls_mpi_free>
    59ea:	b8 80 bc ff ff       	mov    $0xffffbc80,%eax
    59ef:	e9 ce f9 ff ff       	jmpq   53c2 <mbedtls_rsa_private+0x1a2>
    59f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    59fb:	00 00 00 00 
    59ff:	90                   	nop

0000000000005a00 <rsa_rsassa_pss_sign>:
    5a00:	41 57                	push   %r15
    5a02:	41 56                	push   %r14
    5a04:	49 89 f6             	mov    %rsi,%r14
    5a07:	41 55                	push   %r13
    5a09:	41 54                	push   %r12
    5a0b:	55                   	push   %rbp
    5a0c:	48 89 fd             	mov    %rdi,%rbp
    5a0f:	89 cf                	mov    %ecx,%edi
    5a11:	53                   	push   %rbx
    5a12:	48 83 ec 48          	sub    $0x48,%rsp
    5a16:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    5a1b:	41 09 c8             	or     %ecx,%r8d
    5a1e:	4c 63 a4 24 80 00 00 	movslq 0x80(%rsp),%r12
    5a25:	00 
    5a26:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    5a2b:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
    5a32:	00 
    5a33:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    5a38:	74 09                	je     5a43 <rsa_rsassa_pss_sign+0x43>
    5a3a:	4d 85 c9             	test   %r9,%r9
    5a3d:	0f 84 ed 00 00 00    	je     5b30 <rsa_rsassa_pss_sign+0x130>
    5a43:	83 bd 48 01 00 00 01 	cmpl   $0x1,0x148(%rbp)
    5a4a:	0f 85 e0 00 00 00    	jne    5b30 <rsa_rsassa_pss_sign+0x130>
    5a50:	4d 85 f6             	test   %r14,%r14
    5a53:	0f 84 d7 00 00 00    	je     5b30 <rsa_rsassa_pss_sign+0x130>
    5a59:	4c 8b 6d 08          	mov    0x8(%rbp),%r13
    5a5d:	85 ff                	test   %edi,%edi
    5a5f:	0f 85 ab 00 00 00    	jne    5b10 <rsa_rsassa_pss_sign+0x110>
    5a65:	8b bd 4c 01 00 00    	mov    0x14c(%rbp),%edi
    5a6b:	e8 50 a6 00 00       	callq  100c0 <mbedtls_hash_info_get_size>
    5a70:	0f b6 d8             	movzbl %al,%ebx
    5a73:	48 85 db             	test   %rbx,%rbx
    5a76:	0f 84 b4 00 00 00    	je     5b30 <rsa_rsassa_pss_sign+0x130>
    5a7c:	41 83 fc ff          	cmp    $0xffffffff,%r12d
    5a80:	0f 84 7a 01 00 00    	je     5c00 <rsa_rsassa_pss_sign+0x200>
    5a86:	45 85 e4             	test   %r12d,%r12d
    5a89:	0f 88 a1 00 00 00    	js     5b30 <rsa_rsassa_pss_sign+0x130>
    5a8f:	49 8d 44 1c 02       	lea    0x2(%r12,%rbx,1),%rax
    5a94:	4c 39 e8             	cmp    %r13,%rax
    5a97:	0f 87 93 00 00 00    	ja     5b30 <rsa_rsassa_pss_sign+0x130>
    5a9d:	31 f6                	xor    %esi,%esi
    5a9f:	4c 89 ea             	mov    %r13,%rdx
    5aa2:	4c 89 ff             	mov    %r15,%rdi
    5aa5:	e8 06 d8 ff ff       	callq  32b0 <memset@plt>
    5aaa:	48 8d 45 10          	lea    0x10(%rbp),%rax
    5aae:	48 89 c7             	mov    %rax,%rdi
    5ab1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    5ab6:	e8 95 3c 00 00       	callq  9750 <mbedtls_mpi_bitlen>
    5abb:	4c 89 e9             	mov    %r13,%rcx
    5abe:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5ac3:	4c 89 e2             	mov    %r12,%rdx
    5ac6:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5acb:	4c 89 f8             	mov    %r15,%rax
    5ace:	48 29 d9             	sub    %rbx,%rcx
    5ad1:	4c 29 e0             	sub    %r12,%rax
    5ad4:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    5ad9:	48 8d 44 08 fe       	lea    -0x2(%rax,%rcx,1),%rax
    5ade:	4c 8d 58 01          	lea    0x1(%rax),%r11
    5ae2:	c6 00 01             	movb   $0x1,(%rax)
    5ae5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    5aea:	4c 89 de             	mov    %r11,%rsi
    5aed:	41 ff d6             	callq  *%r14
    5af0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    5af5:	85 c0                	test   %eax,%eax
    5af7:	74 47                	je     5b40 <rsa_rsassa_pss_sign+0x140>
    5af9:	2d 80 44 00 00       	sub    $0x4480,%eax
    5afe:	48 83 c4 48          	add    $0x48,%rsp
    5b02:	5b                   	pop    %rbx
    5b03:	5d                   	pop    %rbp
    5b04:	41 5c                	pop    %r12
    5b06:	41 5d                	pop    %r13
    5b08:	41 5e                	pop    %r14
    5b0a:	41 5f                	pop    %r15
    5b0c:	c3                   	retq   
    5b0d:	0f 1f 00             	nopl   (%rax)
    5b10:	e8 ab a5 00 00       	callq  100c0 <mbedtls_hash_info_get_size>
    5b15:	84 c0                	test   %al,%al
    5b17:	74 17                	je     5b30 <rsa_rsassa_pss_sign+0x130>
    5b19:	0f b6 c0             	movzbl %al,%eax
    5b1c:	3b 44 24 10          	cmp    0x10(%rsp),%eax
    5b20:	0f 84 3f ff ff ff    	je     5a65 <rsa_rsassa_pss_sign+0x65>
    5b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5b2d:	00 00 00 
    5b30:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    5b35:	eb c7                	jmp    5afe <rsa_rsassa_pss_sign+0xfe>
    5b37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5b3e:	00 00 
    5b40:	4f 8d 14 23          	lea    (%r11,%r12,1),%r10
    5b44:	8b 74 24 10          	mov    0x10(%rsp),%esi
    5b48:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    5b4d:	4c 89 e1             	mov    %r12,%rcx
    5b50:	44 8b 8d 4c 01 00 00 	mov    0x14c(%rbp),%r9d
    5b57:	4d 89 d0             	mov    %r10,%r8
    5b5a:	4c 89 da             	mov    %r11,%rdx
    5b5d:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    5b62:	e8 39 df ff ff       	callq  3aa0 <hash_mprime>
    5b67:	85 c0                	test   %eax,%eax
    5b69:	75 93                	jne    5afe <rsa_rsassa_pss_sign+0xfe>
    5b6b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5b70:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    5b75:	31 ff                	xor    %edi,%edi
    5b77:	48 89 d9             	mov    %rbx,%rcx
    5b7a:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    5b7f:	44 8b 85 4c 01 00 00 	mov    0x14c(%rbp),%r8d
    5b86:	48 83 e8 01          	sub    $0x1,%rax
    5b8a:	a8 07                	test   $0x7,%al
    5b8c:	4c 89 d2             	mov    %r10,%rdx
    5b8f:	40 0f 94 c7          	sete   %dil
    5b93:	48 83 ee 01          	sub    $0x1,%rsi
    5b97:	48 29 fe             	sub    %rdi,%rsi
    5b9a:	4c 01 ff             	add    %r15,%rdi
    5b9d:	e8 0e e4 ff ff       	callq  3fb0 <mgf_mask>
    5ba2:	85 c0                	test   %eax,%eax
    5ba4:	0f 85 54 ff ff ff    	jne    5afe <rsa_rsassa_pss_sign+0xfe>
    5baa:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    5baf:	e8 9c 3b 00 00       	callq  9750 <mbedtls_mpi_bitlen>
    5bb4:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    5bb9:	4d 89 f8             	mov    %r15,%r8
    5bbc:	4c 89 f6             	mov    %r14,%rsi
    5bbf:	42 8d 0c ed 00 00 00 	lea    0x0(,%r13,8),%ecx
    5bc6:	00 
    5bc7:	48 83 e8 01          	sub    $0x1,%rax
    5bcb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5bd0:	48 89 ef             	mov    %rbp,%rdi
    5bd3:	29 c1                	sub    %eax,%ecx
    5bd5:	b8 ff 00 00 00       	mov    $0xff,%eax
    5bda:	d3 f8                	sar    %cl,%eax
    5bdc:	41 20 07             	and    %al,(%r15)
    5bdf:	4c 89 f9             	mov    %r15,%rcx
    5be2:	41 c6 04 1a bc       	movb   $0xbc,(%r10,%rbx,1)
    5be7:	48 83 c4 48          	add    $0x48,%rsp
    5beb:	5b                   	pop    %rbx
    5bec:	5d                   	pop    %rbp
    5bed:	41 5c                	pop    %r12
    5bef:	41 5d                	pop    %r13
    5bf1:	41 5e                	pop    %r14
    5bf3:	41 5f                	pop    %r15
    5bf5:	e9 26 f6 ff ff       	jmpq   5220 <mbedtls_rsa_private>
    5bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5c00:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
    5c04:	49 39 c5             	cmp    %rax,%r13
    5c07:	0f 82 23 ff ff ff    	jb     5b30 <rsa_rsassa_pss_sign+0x130>
    5c0d:	48 83 c0 02          	add    $0x2,%rax
    5c11:	49 8d 4d fe          	lea    -0x2(%r13),%rcx
    5c15:	48 29 d9             	sub    %rbx,%rcx
    5c18:	4c 39 e8             	cmp    %r13,%rax
    5c1b:	48 0f 46 cb          	cmovbe %rbx,%rcx
    5c1f:	49 89 cc             	mov    %rcx,%r12
    5c22:	e9 76 fe ff ff       	jmpq   5a9d <rsa_rsassa_pss_sign+0x9d>
    5c27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5c2e:	00 00 

0000000000005c30 <mbedtls_rsa_rsaes_oaep_encrypt>:
    5c30:	f3 0f 1e fa          	endbr64 
    5c34:	41 57                	push   %r15
    5c36:	41 56                	push   %r14
    5c38:	41 55                	push   %r13
    5c3a:	41 54                	push   %r12
    5c3c:	55                   	push   %rbp
    5c3d:	53                   	push   %rbx
    5c3e:	48 83 ec 38          	sub    $0x38,%rsp
    5c42:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    5c47:	4c 8b 74 24 78       	mov    0x78(%rsp),%r14
    5c4c:	48 89 14 24          	mov    %rdx,(%rsp)
    5c50:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    5c55:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    5c5a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5c5f:	48 85 f6             	test   %rsi,%rsi
    5c62:	0f 84 68 01 00 00    	je     5dd0 <mbedtls_rsa_rsaes_oaep_encrypt+0x1a0>
    5c68:	48 89 fd             	mov    %rdi,%rbp
    5c6b:	8b bf 4c 01 00 00    	mov    0x14c(%rdi),%edi
    5c71:	48 89 f3             	mov    %rsi,%rbx
    5c74:	4d 89 cc             	mov    %r9,%r12
    5c77:	e8 44 a4 00 00       	callq  100c0 <mbedtls_hash_info_get_size>
    5c7c:	0f b6 d0             	movzbl %al,%edx
    5c7f:	49 89 d7             	mov    %rdx,%r15
    5c82:	85 d2                	test   %edx,%edx
    5c84:	0f 84 46 01 00 00    	je     5dd0 <mbedtls_rsa_rsaes_oaep_encrypt+0x1a0>
    5c8a:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
    5c8d:	4c 8b 6d 08          	mov    0x8(%rbp),%r13
    5c91:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    5c96:	4a 8d 44 20 02       	lea    0x2(%rax,%r12,1),%rax
    5c9b:	4c 39 e0             	cmp    %r12,%rax
    5c9e:	0f 82 2c 01 00 00    	jb     5dd0 <mbedtls_rsa_rsaes_oaep_encrypt+0x1a0>
    5ca4:	4c 39 e8             	cmp    %r13,%rax
    5ca7:	0f 87 23 01 00 00    	ja     5dd0 <mbedtls_rsa_rsaes_oaep_encrypt+0x1a0>
    5cad:	31 f6                	xor    %esi,%esi
    5caf:	4c 89 ea             	mov    %r13,%rdx
    5cb2:	4c 89 f7             	mov    %r14,%rdi
    5cb5:	e8 f6 d5 ff ff       	callq  32b0 <memset@plt>
    5cba:	49 8d 76 01          	lea    0x1(%r14),%rsi
    5cbe:	41 c6 06 00          	movb   $0x0,(%r14)
    5cc2:	4c 89 fa             	mov    %r15,%rdx
    5cc5:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    5cca:	48 8b 3c 24          	mov    (%rsp),%rdi
    5cce:	ff d3                	callq  *%rbx
    5cd0:	85 c0                	test   %eax,%eax
    5cd2:	74 1c                	je     5cf0 <mbedtls_rsa_rsaes_oaep_encrypt+0xc0>
    5cd4:	2d 80 44 00 00       	sub    $0x4480,%eax
    5cd9:	48 83 c4 38          	add    $0x38,%rsp
    5cdd:	5b                   	pop    %rbx
    5cde:	5d                   	pop    %rbp
    5cdf:	41 5c                	pop    %r12
    5ce1:	41 5d                	pop    %r13
    5ce3:	41 5e                	pop    %r14
    5ce5:	41 5f                	pop    %r15
    5ce7:	c3                   	retq   
    5ce8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5cef:	00 
    5cf0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cf5:	8b bd 4c 01 00 00    	mov    0x14c(%rbp),%edi
    5cfb:	4a 8d 1c 38          	lea    (%rax,%r15,1),%rbx
    5cff:	e8 3c a5 00 00       	callq  10240 <mbedtls_md_info_from_type>
    5d04:	48 89 c7             	mov    %rax,%rdi
    5d07:	48 85 c0             	test   %rax,%rax
    5d0a:	0f 84 c0 00 00 00    	je     5dd0 <mbedtls_rsa_rsaes_oaep_encrypt+0x1a0>
    5d10:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    5d15:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    5d1a:	48 89 d9             	mov    %rbx,%rcx
    5d1d:	e8 ce aa 00 00       	callq  107f0 <mbedtls_md>
    5d22:	85 c0                	test   %eax,%eax
    5d24:	75 b3                	jne    5cd9 <mbedtls_rsa_rsaes_oaep_encrypt+0xa9>
    5d26:	4c 89 e8             	mov    %r13,%rax
    5d29:	4c 29 e0             	sub    %r12,%rax
    5d2c:	49 8d 7c 07 fe       	lea    -0x2(%r15,%rax,1),%rdi
    5d31:	48 2b 7c 24 20       	sub    0x20(%rsp),%rdi
    5d36:	48 01 fb             	add    %rdi,%rbx
    5d39:	c6 03 01             	movb   $0x1,(%rbx)
    5d3c:	4d 85 e4             	test   %r12,%r12
    5d3f:	75 6f                	jne    5db0 <mbedtls_rsa_rsaes_oaep_encrypt+0x180>
    5d41:	49 83 ed 01          	sub    $0x1,%r13
    5d45:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    5d4a:	4f 8d 64 3e 01       	lea    0x1(%r14,%r15,1),%r12
    5d4f:	4c 89 f9             	mov    %r15,%rcx
    5d52:	4d 29 fd             	sub    %r15,%r13
    5d55:	44 8b 85 4c 01 00 00 	mov    0x14c(%rbp),%r8d
    5d5c:	4c 89 e7             	mov    %r12,%rdi
    5d5f:	48 89 da             	mov    %rbx,%rdx
    5d62:	4c 89 ee             	mov    %r13,%rsi
    5d65:	e8 46 e2 ff ff       	callq  3fb0 <mgf_mask>
    5d6a:	85 c0                	test   %eax,%eax
    5d6c:	0f 85 67 ff ff ff    	jne    5cd9 <mbedtls_rsa_rsaes_oaep_encrypt+0xa9>
    5d72:	44 8b 85 4c 01 00 00 	mov    0x14c(%rbp),%r8d
    5d79:	4c 89 e9             	mov    %r13,%rcx
    5d7c:	4c 89 e2             	mov    %r12,%rdx
    5d7f:	4c 89 fe             	mov    %r15,%rsi
    5d82:	48 89 df             	mov    %rbx,%rdi
    5d85:	e8 26 e2 ff ff       	callq  3fb0 <mgf_mask>
    5d8a:	85 c0                	test   %eax,%eax
    5d8c:	0f 85 47 ff ff ff    	jne    5cd9 <mbedtls_rsa_rsaes_oaep_encrypt+0xa9>
    5d92:	48 83 c4 38          	add    $0x38,%rsp
    5d96:	4c 89 f2             	mov    %r14,%rdx
    5d99:	4c 89 f6             	mov    %r14,%rsi
    5d9c:	48 89 ef             	mov    %rbp,%rdi
    5d9f:	5b                   	pop    %rbx
    5da0:	5d                   	pop    %rbp
    5da1:	41 5c                	pop    %r12
    5da3:	41 5d                	pop    %r13
    5da5:	41 5e                	pop    %r14
    5da7:	41 5f                	pop    %r15
    5da9:	e9 42 f3 ff ff       	jmpq   50f0 <mbedtls_rsa_public>
    5dae:	66 90                	xchg   %ax,%ax
    5db0:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    5db5:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
    5db9:	4c 89 e2             	mov    %r12,%rdx
    5dbc:	e8 5f d5 ff ff       	callq  3320 <memcpy@plt>
    5dc1:	e9 7b ff ff ff       	jmpq   5d41 <mbedtls_rsa_rsaes_oaep_encrypt+0x111>
    5dc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5dcd:	00 00 00 
    5dd0:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    5dd5:	e9 ff fe ff ff       	jmpq   5cd9 <mbedtls_rsa_rsaes_oaep_encrypt+0xa9>
    5dda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005de0 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt>:
    5de0:	f3 0f 1e fa          	endbr64 
    5de4:	41 57                	push   %r15
    5de6:	41 56                	push   %r14
    5de8:	41 55                	push   %r13
    5dea:	41 54                	push   %r12
    5dec:	55                   	push   %rbp
    5ded:	53                   	push   %rbx
    5dee:	48 83 ec 28          	sub    $0x28,%rsp
    5df2:	48 8b 47 08          	mov    0x8(%rdi),%rax
    5df6:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    5dfb:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    5e00:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    5e05:	48 83 f9 f4          	cmp    $0xfffffffffffffff4,%rcx
    5e09:	0f 87 e0 00 00 00    	ja     5eef <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0x10f>
    5e0f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    5e14:	48 89 d5             	mov    %rdx,%rbp
    5e17:	48 8d 51 0b          	lea    0xb(%rcx),%rdx
    5e1b:	48 39 c2             	cmp    %rax,%rdx
    5e1e:	0f 87 cb 00 00 00    	ja     5eef <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0x10f>
    5e24:	48 29 c8             	sub    %rcx,%rax
    5e27:	41 c6 01 00          	movb   $0x0,(%r9)
    5e2b:	48 89 f3             	mov    %rsi,%rbx
    5e2e:	4d 89 cd             	mov    %r9,%r13
    5e31:	48 83 e8 03          	sub    $0x3,%rax
    5e35:	48 85 f6             	test   %rsi,%rsi
    5e38:	0f 84 b1 00 00 00    	je     5eef <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0x10f>
    5e3e:	41 c6 41 01 02       	movb   $0x2,0x1(%r9)
    5e43:	4d 8d 79 02          	lea    0x2(%r9),%r15
    5e47:	48 85 c0             	test   %rax,%rax
    5e4a:	0f 84 9a 00 00 00    	je     5eea <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0x10a>
    5e50:	4d 8d 64 01 02       	lea    0x2(%r9,%rax,1),%r12
    5e55:	0f 1f 00             	nopl   (%rax)
    5e58:	41 be 64 00 00 00    	mov    $0x64,%r14d
    5e5e:	eb 0d                	jmp    5e6d <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0x8d>
    5e60:	41 83 ee 01          	sub    $0x1,%r14d
    5e64:	85 c0                	test   %eax,%eax
    5e66:	75 58                	jne    5ec0 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0xe0>
    5e68:	45 85 f6             	test   %r14d,%r14d
    5e6b:	74 53                	je     5ec0 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0xe0>
    5e6d:	ba 01 00 00 00       	mov    $0x1,%edx
    5e72:	4c 89 fe             	mov    %r15,%rsi
    5e75:	48 89 ef             	mov    %rbp,%rdi
    5e78:	ff d3                	callq  *%rbx
    5e7a:	41 80 3f 00          	cmpb   $0x0,(%r15)
    5e7e:	74 e0                	je     5e60 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0x80>
    5e80:	85 c0                	test   %eax,%eax
    5e82:	75 3c                	jne    5ec0 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0xe0>
    5e84:	49 83 c7 01          	add    $0x1,%r15
    5e88:	4d 39 fc             	cmp    %r15,%r12
    5e8b:	75 cb                	jne    5e58 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0x78>
    5e8d:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    5e93:	41 c6 04 24 00       	movb   $0x0,(%r12)
    5e98:	75 3a                	jne    5ed4 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0xf4>
    5e9a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5e9f:	48 83 c4 28          	add    $0x28,%rsp
    5ea3:	4c 89 ea             	mov    %r13,%rdx
    5ea6:	4c 89 ee             	mov    %r13,%rsi
    5ea9:	5b                   	pop    %rbx
    5eaa:	5d                   	pop    %rbp
    5eab:	41 5c                	pop    %r12
    5ead:	41 5d                	pop    %r13
    5eaf:	41 5e                	pop    %r14
    5eb1:	41 5f                	pop    %r15
    5eb3:	e9 38 f2 ff ff       	jmpq   50f0 <mbedtls_rsa_public>
    5eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5ebf:	00 
    5ec0:	2d 80 44 00 00       	sub    $0x4480,%eax
    5ec5:	48 83 c4 28          	add    $0x28,%rsp
    5ec9:	5b                   	pop    %rbx
    5eca:	5d                   	pop    %rbp
    5ecb:	41 5c                	pop    %r12
    5ecd:	41 5d                	pop    %r13
    5ecf:	41 5e                	pop    %r14
    5ed1:	41 5f                	pop    %r15
    5ed3:	c3                   	retq   
    5ed4:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5ed9:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    5ede:	49 8d 7c 24 01       	lea    0x1(%r12),%rdi
    5ee3:	e8 38 d4 ff ff       	callq  3320 <memcpy@plt>
    5ee8:	eb b0                	jmp    5e9a <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0xba>
    5eea:	4d 89 fc             	mov    %r15,%r12
    5eed:	eb 9e                	jmp    5e8d <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0xad>
    5eef:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    5ef4:	eb cf                	jmp    5ec5 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt+0xe5>
    5ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5efd:	00 00 00 

0000000000005f00 <mbedtls_rsa_pkcs1_encrypt>:
    5f00:	f3 0f 1e fa          	endbr64 
    5f04:	8b 87 48 01 00 00    	mov    0x148(%rdi),%eax
    5f0a:	85 c0                	test   %eax,%eax
    5f0c:	74 32                	je     5f40 <mbedtls_rsa_pkcs1_encrypt+0x40>
    5f0e:	83 f8 01             	cmp    $0x1,%eax
    5f11:	75 1d                	jne    5f30 <mbedtls_rsa_pkcs1_encrypt+0x30>
    5f13:	48 83 ec 08          	sub    $0x8,%rsp
    5f17:	41 51                	push   %r9
    5f19:	49 89 c9             	mov    %rcx,%r9
    5f1c:	31 c9                	xor    %ecx,%ecx
    5f1e:	41 50                	push   %r8
    5f20:	45 31 c0             	xor    %r8d,%r8d
    5f23:	e8 08 fd ff ff       	callq  5c30 <mbedtls_rsa_rsaes_oaep_encrypt>
    5f28:	48 83 c4 18          	add    $0x18,%rsp
    5f2c:	c3                   	retq   
    5f2d:	0f 1f 00             	nopl   (%rax)
    5f30:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
    5f35:	c3                   	retq   
    5f36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5f3d:	00 00 00 
    5f40:	e9 9b fe ff ff       	jmpq   5de0 <mbedtls_rsa_rsaes_pkcs1_v15_encrypt>
    5f45:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5f4c:	00 00 00 00 

0000000000005f50 <mbedtls_rsa_rsaes_oaep_decrypt>:
    5f50:	f3 0f 1e fa          	endbr64 
    5f54:	41 57                	push   %r15
    5f56:	41 56                	push   %r14
    5f58:	41 55                	push   %r13
    5f5a:	41 54                	push   %r12
    5f5c:	55                   	push   %rbp
    5f5d:	53                   	push   %rbx
    5f5e:	48 81 ec 98 04 00 00 	sub    $0x498,%rsp
    5f65:	48 8b 84 24 d8 04 00 	mov    0x4d8(%rsp),%rax
    5f6c:	00 
    5f6d:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    5f72:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    5f77:	48 8b 8c 24 d0 04 00 	mov    0x4d0(%rsp),%rcx
    5f7e:	00 
    5f7f:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    5f84:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    5f89:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5f90:	00 00 
    5f92:	48 89 84 24 88 04 00 	mov    %rax,0x488(%rsp)
    5f99:	00 
    5f9a:	31 c0                	xor    %eax,%eax
    5f9c:	83 bf 48 01 00 00 01 	cmpl   $0x1,0x148(%rdi)
    5fa3:	0f 85 3f 02 00 00    	jne    61e8 <mbedtls_rsa_rsaes_oaep_decrypt+0x298>
    5fa9:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    5fad:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    5fb2:	48 89 fb             	mov    %rdi,%rbx
    5fb5:	49 8d 44 24 f0       	lea    -0x10(%r12),%rax
    5fba:	48 3d f0 03 00 00    	cmp    $0x3f0,%rax
    5fc0:	0f 87 22 02 00 00    	ja     61e8 <mbedtls_rsa_rsaes_oaep_decrypt+0x298>
    5fc6:	8b bf 4c 01 00 00    	mov    0x14c(%rdi),%edi
    5fcc:	49 89 f6             	mov    %rsi,%r14
    5fcf:	49 89 d7             	mov    %rdx,%r15
    5fd2:	e8 e9 a0 00 00       	callq  100c0 <mbedtls_hash_info_get_size>
    5fd7:	0f b6 e8             	movzbl %al,%ebp
    5fda:	40 0f b6 c5          	movzbl %bpl,%eax
    5fde:	85 c0                	test   %eax,%eax
    5fe0:	0f 84 02 02 00 00    	je     61e8 <mbedtls_rsa_rsaes_oaep_decrypt+0x298>
    5fe6:	8d 44 00 02          	lea    0x2(%rax,%rax,1),%eax
    5fea:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    5fee:	4c 39 e0             	cmp    %r12,%rax
    5ff1:	0f 87 f1 01 00 00    	ja     61e8 <mbedtls_rsa_rsaes_oaep_decrypt+0x298>
    5ff7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    5ffc:	4c 89 fa             	mov    %r15,%rdx
    5fff:	4c 89 f6             	mov    %r14,%rsi
    6002:	48 89 df             	mov    %rbx,%rdi
    6005:	4c 8d ac 24 80 00 00 	lea    0x80(%rsp),%r13
    600c:	00 
    600d:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
    6012:	4d 89 e8             	mov    %r13,%r8
    6015:	e8 06 f2 ff ff       	callq  5220 <mbedtls_rsa_private>
    601a:	41 89 c0             	mov    %eax,%r8d
    601d:	85 c0                	test   %eax,%eax
    601f:	74 57                	je     6078 <mbedtls_rsa_rsaes_oaep_decrypt+0x128>
    6021:	be 00 04 00 00       	mov    $0x400,%esi
    6026:	4c 89 ef             	mov    %r13,%rdi
    6029:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    602e:	e8 fd c8 00 00       	callq  12930 <mbedtls_platform_zeroize>
    6033:	be 40 00 00 00       	mov    $0x40,%esi
    6038:	4c 89 ff             	mov    %r15,%rdi
    603b:	e8 f0 c8 00 00       	callq  12930 <mbedtls_platform_zeroize>
    6040:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
    6045:	48 8b 84 24 88 04 00 	mov    0x488(%rsp),%rax
    604c:	00 
    604d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    6054:	00 00 
    6056:	0f 85 cf 01 00 00    	jne    622b <mbedtls_rsa_rsaes_oaep_decrypt+0x2db>
    605c:	48 81 c4 98 04 00 00 	add    $0x498,%rsp
    6063:	44 89 c0             	mov    %r8d,%eax
    6066:	5b                   	pop    %rbx
    6067:	5d                   	pop    %rbp
    6068:	41 5c                	pop    %r12
    606a:	41 5d                	pop    %r13
    606c:	41 5e                	pop    %r14
    606e:	41 5f                	pop    %r15
    6070:	c3                   	retq   
    6071:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6078:	4d 8d 54 24 ff       	lea    -0x1(%r12),%r10
    607d:	4d 8d 5c 2d 01       	lea    0x1(%r13,%rbp,1),%r11
    6082:	48 89 ee             	mov    %rbp,%rsi
    6085:	44 8b 83 4c 01 00 00 	mov    0x14c(%rbx),%r8d
    608c:	49 29 ea             	sub    %rbp,%r10
    608f:	4c 8d b4 24 81 00 00 	lea    0x81(%rsp),%r14
    6096:	00 
    6097:	4c 89 da             	mov    %r11,%rdx
    609a:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    609f:	4c 89 d1             	mov    %r10,%rcx
    60a2:	4c 89 f7             	mov    %r14,%rdi
    60a5:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
    60aa:	e8 01 df ff ff       	callq  3fb0 <mgf_mask>
    60af:	41 89 c0             	mov    %eax,%r8d
    60b2:	85 c0                	test   %eax,%eax
    60b4:	0f 85 67 ff ff ff    	jne    6021 <mbedtls_rsa_rsaes_oaep_decrypt+0xd1>
    60ba:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    60bf:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    60c4:	48 89 e9             	mov    %rbp,%rcx
    60c7:	4c 89 f2             	mov    %r14,%rdx
    60ca:	44 8b 83 4c 01 00 00 	mov    0x14c(%rbx),%r8d
    60d1:	4c 89 d6             	mov    %r10,%rsi
    60d4:	4c 89 df             	mov    %r11,%rdi
    60d7:	e8 d4 de ff ff       	callq  3fb0 <mgf_mask>
    60dc:	41 89 c0             	mov    %eax,%r8d
    60df:	85 c0                	test   %eax,%eax
    60e1:	0f 85 3a ff ff ff    	jne    6021 <mbedtls_rsa_rsaes_oaep_decrypt+0xd1>
    60e7:	8b bb 4c 01 00 00    	mov    0x14c(%rbx),%edi
    60ed:	e8 4e a1 00 00       	callq  10240 <mbedtls_md_info_from_type>
    60f2:	48 89 c7             	mov    %rax,%rdi
    60f5:	48 85 c0             	test   %rax,%rax
    60f8:	0f 84 22 01 00 00    	je     6220 <mbedtls_rsa_rsaes_oaep_decrypt+0x2d0>
    60fe:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6103:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    6108:	4c 89 f9             	mov    %r15,%rcx
    610b:	e8 e0 a6 00 00       	callq  107f0 <mbedtls_md>
    6110:	41 89 c0             	mov    %eax,%r8d
    6113:	85 c0                	test   %eax,%eax
    6115:	0f 85 06 ff ff ff    	jne    6021 <mbedtls_rsa_rsaes_oaep_decrypt+0xd1>
    611b:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    6122:	00 
    6123:	49 01 ee             	add    %rbp,%r14
    6126:	31 c0                	xor    %eax,%eax
    6128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    612f:	00 
    6130:	41 0f b6 14 07       	movzbl (%r15,%rax,1),%edx
    6135:	41 32 14 06          	xor    (%r14,%rax,1),%dl
    6139:	48 83 c0 01          	add    $0x1,%rax
    613d:	09 ca                	or     %ecx,%edx
    613f:	89 d1                	mov    %edx,%ecx
    6141:	48 39 c5             	cmp    %rax,%rbp
    6144:	75 ea                	jne    6130 <mbedtls_rsa_rsaes_oaep_decrypt+0x1e0>
    6146:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    614a:	4d 8d 54 24 fe       	lea    -0x2(%r12),%r10
    614f:	4c 01 f5             	add    %r14,%rbp
    6152:	83 e8 02             	sub    $0x2,%eax
    6155:	49 29 c2             	sub    %rax,%r10
    6158:	0f 84 b5 00 00 00    	je     6213 <mbedtls_rsa_rsaes_oaep_decrypt+0x2c3>
    615e:	48 89 ee             	mov    %rbp,%rsi
    6161:	49 01 ea             	add    %rbp,%r10
    6164:	31 c9                	xor    %ecx,%ecx
    6166:	31 ff                	xor    %edi,%edi
    6168:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    616f:	00 
    6170:	0a 0e                	or     (%rsi),%cl
    6172:	48 83 c6 01          	add    $0x1,%rsi
    6176:	89 c8                	mov    %ecx,%eax
    6178:	f7 d8                	neg    %eax
    617a:	09 c8                	or     %ecx,%eax
    617c:	c0 e8 07             	shr    $0x7,%al
    617f:	83 f0 01             	xor    $0x1,%eax
    6182:	0f b6 c0             	movzbl %al,%eax
    6185:	48 01 c7             	add    %rax,%rdi
    6188:	49 39 f2             	cmp    %rsi,%r10
    618b:	75 e3                	jne    6170 <mbedtls_rsa_rsaes_oaep_decrypt+0x220>
    618d:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    6191:	48 01 ef             	add    %rbp,%rdi
    6194:	0f b6 07             	movzbl (%rdi),%eax
    6197:	83 f0 01             	xor    $0x1,%eax
    619a:	08 d0                	or     %dl,%al
    619c:	75 5a                	jne    61f8 <mbedtls_rsa_rsaes_oaep_decrypt+0x2a8>
    619e:	48 01 ee             	add    %rbp,%rsi
    61a1:	48 89 f0             	mov    %rsi,%rax
    61a4:	4c 29 e8             	sub    %r13,%rax
    61a7:	49 29 c4             	sub    %rax,%r12
    61aa:	4c 3b a4 24 e0 04 00 	cmp    0x4e0(%rsp),%r12
    61b1:	00 
    61b2:	77 54                	ja     6208 <mbedtls_rsa_rsaes_oaep_decrypt+0x2b8>
    61b4:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    61b9:	4c 89 20             	mov    %r12,(%rax)
    61bc:	4d 85 e4             	test   %r12,%r12
    61bf:	0f 84 5c fe ff ff    	je     6021 <mbedtls_rsa_rsaes_oaep_decrypt+0xd1>
    61c5:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    61ca:	4c 89 e2             	mov    %r12,%rdx
    61cd:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    61d2:	e8 49 d1 ff ff       	callq  3320 <memcpy@plt>
    61d7:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
    61dc:	e9 40 fe ff ff       	jmpq   6021 <mbedtls_rsa_rsaes_oaep_decrypt+0xd1>
    61e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    61e8:	41 b8 80 bf ff ff    	mov    $0xffffbf80,%r8d
    61ee:	e9 52 fe ff ff       	jmpq   6045 <mbedtls_rsa_rsaes_oaep_decrypt+0xf5>
    61f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    61f8:	41 b8 00 bf ff ff    	mov    $0xffffbf00,%r8d
    61fe:	e9 1e fe ff ff       	jmpq   6021 <mbedtls_rsa_rsaes_oaep_decrypt+0xd1>
    6203:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6208:	41 b8 00 bc ff ff    	mov    $0xffffbc00,%r8d
    620e:	e9 0e fe ff ff       	jmpq   6021 <mbedtls_rsa_rsaes_oaep_decrypt+0xd1>
    6213:	48 89 ef             	mov    %rbp,%rdi
    6216:	be 01 00 00 00       	mov    $0x1,%esi
    621b:	e9 74 ff ff ff       	jmpq   6194 <mbedtls_rsa_rsaes_oaep_decrypt+0x244>
    6220:	41 b8 80 bf ff ff    	mov    $0xffffbf80,%r8d
    6226:	e9 f6 fd ff ff       	jmpq   6021 <mbedtls_rsa_rsaes_oaep_decrypt+0xd1>
    622b:	e8 50 d0 ff ff       	callq  3280 <__stack_chk_fail@plt>

0000000000006230 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt>:
    6230:	f3 0f 1e fa          	endbr64 
    6234:	41 56                	push   %r14
    6236:	41 55                	push   %r13
    6238:	41 54                	push   %r12
    623a:	55                   	push   %rbp
    623b:	53                   	push   %rbx
    623c:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    6243:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    6247:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    624e:	00 00 
    6250:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    6257:	00 
    6258:	31 c0                	xor    %eax,%eax
    625a:	8b 87 48 01 00 00    	mov    0x148(%rdi),%eax
    6260:	85 c0                	test   %eax,%eax
    6262:	75 7c                	jne    62e0 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xb0>
    6264:	49 8d 46 f0          	lea    -0x10(%r14),%rax
    6268:	48 3d f0 03 00 00    	cmp    $0x3f0,%rax
    626e:	77 70                	ja     62e0 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xb0>
    6270:	48 89 e5             	mov    %rsp,%rbp
    6273:	48 89 cb             	mov    %rcx,%rbx
    6276:	4c 89 c1             	mov    %r8,%rcx
    6279:	4d 89 cd             	mov    %r9,%r13
    627c:	49 89 e8             	mov    %rbp,%r8
    627f:	e8 9c ef ff ff       	callq  5220 <mbedtls_rsa_private>
    6284:	41 89 c4             	mov    %eax,%r12d
    6287:	85 c0                	test   %eax,%eax
    6289:	74 35                	je     62c0 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x90>
    628b:	be 00 04 00 00       	mov    $0x400,%esi
    6290:	48 89 ef             	mov    %rbp,%rdi
    6293:	e8 98 c6 00 00       	callq  12930 <mbedtls_platform_zeroize>
    6298:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    629f:	00 
    62a0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    62a7:	00 00 
    62a9:	75 3d                	jne    62e8 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xb8>
    62ab:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    62b2:	44 89 e0             	mov    %r12d,%eax
    62b5:	5b                   	pop    %rbx
    62b6:	5d                   	pop    %rbp
    62b7:	41 5c                	pop    %r12
    62b9:	41 5d                	pop    %r13
    62bb:	41 5e                	pop    %r14
    62bd:	c3                   	retq   
    62be:	66 90                	xchg   %ax,%ax
    62c0:	49 89 d8             	mov    %rbx,%r8
    62c3:	4c 89 ea             	mov    %r13,%rdx
    62c6:	4c 89 f6             	mov    %r14,%rsi
    62c9:	48 89 ef             	mov    %rbp,%rdi
    62cc:	48 8b 8c 24 40 04 00 	mov    0x440(%rsp),%rcx
    62d3:	00 
    62d4:	e8 f7 9b 00 00       	callq  fed0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding>
    62d9:	41 89 c4             	mov    %eax,%r12d
    62dc:	eb ad                	jmp    628b <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x5b>
    62de:	66 90                	xchg   %ax,%ax
    62e0:	41 bc 80 bf ff ff    	mov    $0xffffbf80,%r12d
    62e6:	eb b0                	jmp    6298 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x68>
    62e8:	e8 93 cf ff ff       	callq  3280 <__stack_chk_fail@plt>
    62ed:	0f 1f 00             	nopl   (%rax)

00000000000062f0 <mbedtls_rsa_pkcs1_decrypt>:
    62f0:	f3 0f 1e fa          	endbr64 
    62f4:	48 83 ec 08          	sub    $0x8,%rsp
    62f8:	8b 87 48 01 00 00    	mov    0x148(%rdi),%eax
    62fe:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    6303:	85 c0                	test   %eax,%eax
    6305:	74 39                	je     6340 <mbedtls_rsa_pkcs1_decrypt+0x50>
    6307:	83 f8 01             	cmp    $0x1,%eax
    630a:	75 24                	jne    6330 <mbedtls_rsa_pkcs1_decrypt+0x40>
    630c:	48 83 ec 08          	sub    $0x8,%rsp
    6310:	41 52                	push   %r10
    6312:	41 51                	push   %r9
    6314:	49 89 c9             	mov    %rcx,%r9
    6317:	31 c9                	xor    %ecx,%ecx
    6319:	41 50                	push   %r8
    631b:	45 31 c0             	xor    %r8d,%r8d
    631e:	e8 2d fc ff ff       	callq  5f50 <mbedtls_rsa_rsaes_oaep_decrypt>
    6323:	48 83 c4 20          	add    $0x20,%rsp
    6327:	48 83 c4 08          	add    $0x8,%rsp
    632b:	c3                   	retq   
    632c:	0f 1f 40 00          	nopl   0x0(%rax)
    6330:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
    6335:	48 83 c4 08          	add    $0x8,%rsp
    6339:	c3                   	retq   
    633a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6340:	48 83 c4 08          	add    $0x8,%rsp
    6344:	e9 e7 fe ff ff       	jmpq   6230 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt>
    6349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006350 <mbedtls_rsa_rsassa_pss_sign_ext>:
    6350:	f3 0f 1e fa          	endbr64 
    6354:	e9 a7 f6 ff ff       	jmpq   5a00 <rsa_rsassa_pss_sign>
    6359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006360 <mbedtls_rsa_rsassa_pss_sign>:
    6360:	f3 0f 1e fa          	endbr64 
    6364:	48 83 ec 08          	sub    $0x8,%rsp
    6368:	ff 74 24 10          	pushq  0x10(%rsp)
    636c:	6a ff                	pushq  $0xffffffffffffffff
    636e:	e8 8d f6 ff ff       	callq  5a00 <rsa_rsassa_pss_sign>
    6373:	48 83 c4 18          	add    $0x18,%rsp
    6377:	c3                   	retq   
    6378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    637f:	00 

0000000000006380 <mbedtls_rsa_rsassa_pkcs1_v15_sign>:
    6380:	f3 0f 1e fa          	endbr64 
    6384:	41 57                	push   %r15
    6386:	89 c8                	mov    %ecx,%eax
    6388:	41 56                	push   %r14
    638a:	41 55                	push   %r13
    638c:	49 89 d5             	mov    %rdx,%r13
    638f:	4c 89 ca             	mov    %r9,%rdx
    6392:	41 54                	push   %r12
    6394:	55                   	push   %rbp
    6395:	48 89 fd             	mov    %rdi,%rbp
    6398:	89 cf                	mov    %ecx,%edi
    639a:	53                   	push   %rbx
    639b:	48 83 ec 18          	sub    $0x18,%rsp
    639f:	44 09 c0             	or     %r8d,%eax
    63a2:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    63a7:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    63ac:	44 89 c6             	mov    %r8d,%esi
    63af:	74 09                	je     63ba <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x3a>
    63b1:	4d 85 c9             	test   %r9,%r9
    63b4:	0f 84 46 01 00 00    	je     6500 <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x180>
    63ba:	8b 85 48 01 00 00    	mov    0x148(%rbp),%eax
    63c0:	85 c0                	test   %eax,%eax
    63c2:	0f 85 38 01 00 00    	jne    6500 <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x180>
    63c8:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
    63cc:	4d 89 f8             	mov    %r15,%r8
    63cf:	e8 ec d7 ff ff       	callq  3bc0 <rsa_rsassa_pkcs1_v15_encode>
    63d4:	41 89 c4             	mov    %eax,%r12d
    63d7:	85 c0                	test   %eax,%eax
    63d9:	74 15                	je     63f0 <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x70>
    63db:	48 83 c4 18          	add    $0x18,%rsp
    63df:	44 89 e0             	mov    %r12d,%eax
    63e2:	5b                   	pop    %rbx
    63e3:	5d                   	pop    %rbp
    63e4:	41 5c                	pop    %r12
    63e6:	41 5d                	pop    %r13
    63e8:	41 5e                	pop    %r14
    63ea:	41 5f                	pop    %r15
    63ec:	c3                   	retq   
    63ed:	0f 1f 00             	nopl   (%rax)
    63f0:	4c 8b 65 08          	mov    0x8(%rbp),%r12
    63f4:	bf 01 00 00 00       	mov    $0x1,%edi
    63f9:	4c 89 e6             	mov    %r12,%rsi
    63fc:	e8 df ce ff ff       	callq  32e0 <calloc@plt>
    6401:	49 89 c6             	mov    %rax,%r14
    6404:	48 85 c0             	test   %rax,%rax
    6407:	0f 84 fe 00 00 00    	je     650b <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x18b>
    640d:	4c 89 e6             	mov    %r12,%rsi
    6410:	bf 01 00 00 00       	mov    $0x1,%edi
    6415:	e8 c6 ce ff ff       	callq  32e0 <calloc@plt>
    641a:	48 89 c3             	mov    %rax,%rbx
    641d:	48 85 c0             	test   %rax,%rax
    6420:	0f 84 f0 00 00 00    	je     6516 <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x196>
    6426:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    642b:	4d 89 f0             	mov    %r14,%r8
    642e:	4c 89 f9             	mov    %r15,%rcx
    6431:	4c 89 ea             	mov    %r13,%rdx
    6434:	48 89 ef             	mov    %rbp,%rdi
    6437:	e8 e4 ed ff ff       	callq  5220 <mbedtls_rsa_private>
    643c:	41 89 c4             	mov    %eax,%r12d
    643f:	85 c0                	test   %eax,%eax
    6441:	74 45                	je     6488 <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x108>
    6443:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    6447:	4c 89 f7             	mov    %r14,%rdi
    644a:	e8 e1 c4 00 00       	callq  12930 <mbedtls_platform_zeroize>
    644f:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    6453:	48 89 df             	mov    %rbx,%rdi
    6456:	e8 d5 c4 00 00       	callq  12930 <mbedtls_platform_zeroize>
    645b:	4c 89 f7             	mov    %r14,%rdi
    645e:	e8 9d cd ff ff       	callq  3200 <free@plt>
    6463:	48 89 df             	mov    %rbx,%rdi
    6466:	e8 95 cd ff ff       	callq  3200 <free@plt>
    646b:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    646f:	be 21 00 00 00       	mov    $0x21,%esi
    6474:	4c 89 ff             	mov    %r15,%rdi
    6477:	e8 34 ce ff ff       	callq  32b0 <memset@plt>
    647c:	e9 5a ff ff ff       	jmpq   63db <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x5b>
    6481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6488:	48 89 da             	mov    %rbx,%rdx
    648b:	4c 89 f6             	mov    %r14,%rsi
    648e:	48 89 ef             	mov    %rbp,%rdi
    6491:	e8 5a ec ff ff       	callq  50f0 <mbedtls_rsa_public>
    6496:	41 89 c4             	mov    %eax,%r12d
    6499:	85 c0                	test   %eax,%eax
    649b:	75 a6                	jne    6443 <mbedtls_rsa_rsassa_pkcs1_v15_sign+0xc3>
    649d:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    64a1:	4c 89 fe             	mov    %r15,%rsi
    64a4:	48 89 df             	mov    %rbx,%rdi
    64a7:	e8 34 91 00 00       	callq  f5e0 <mbedtls_ct_memcmp>
    64ac:	41 89 c4             	mov    %eax,%r12d
    64af:	85 c0                	test   %eax,%eax
    64b1:	75 3d                	jne    64f0 <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x170>
    64b3:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    64b7:	4c 89 f6             	mov    %r14,%rsi
    64ba:	4c 89 ff             	mov    %r15,%rdi
    64bd:	e8 5e ce ff ff       	callq  3320 <memcpy@plt>
    64c2:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    64c6:	4c 89 f7             	mov    %r14,%rdi
    64c9:	e8 62 c4 00 00       	callq  12930 <mbedtls_platform_zeroize>
    64ce:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    64d2:	48 89 df             	mov    %rbx,%rdi
    64d5:	e8 56 c4 00 00       	callq  12930 <mbedtls_platform_zeroize>
    64da:	4c 89 f7             	mov    %r14,%rdi
    64dd:	e8 1e cd ff ff       	callq  3200 <free@plt>
    64e2:	48 89 df             	mov    %rbx,%rdi
    64e5:	e8 16 cd ff ff       	callq  3200 <free@plt>
    64ea:	e9 ec fe ff ff       	jmpq   63db <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x5b>
    64ef:	90                   	nop
    64f0:	41 bc 00 bd ff ff    	mov    $0xffffbd00,%r12d
    64f6:	e9 48 ff ff ff       	jmpq   6443 <mbedtls_rsa_rsassa_pkcs1_v15_sign+0xc3>
    64fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6500:	41 bc 80 bf ff ff    	mov    $0xffffbf80,%r12d
    6506:	e9 d0 fe ff ff       	jmpq   63db <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x5b>
    650b:	41 bc f0 ff ff ff    	mov    $0xfffffff0,%r12d
    6511:	e9 c5 fe ff ff       	jmpq   63db <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x5b>
    6516:	4c 89 f7             	mov    %r14,%rdi
    6519:	41 bc f0 ff ff ff    	mov    $0xfffffff0,%r12d
    651f:	e8 dc cc ff ff       	callq  3200 <free@plt>
    6524:	e9 b2 fe ff ff       	jmpq   63db <mbedtls_rsa_rsassa_pkcs1_v15_sign+0x5b>
    6529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006530 <mbedtls_rsa_pkcs1_sign>:
    6530:	f3 0f 1e fa          	endbr64 
    6534:	89 c8                	mov    %ecx,%eax
    6536:	48 83 ec 08          	sub    $0x8,%rsp
    653a:	44 09 c0             	or     %r8d,%eax
    653d:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    6542:	74 05                	je     6549 <mbedtls_rsa_pkcs1_sign+0x19>
    6544:	4d 85 c9             	test   %r9,%r9
    6547:	74 45                	je     658e <mbedtls_rsa_pkcs1_sign+0x5e>
    6549:	8b 87 48 01 00 00    	mov    0x148(%rdi),%eax
    654f:	85 c0                	test   %eax,%eax
    6551:	74 2d                	je     6580 <mbedtls_rsa_pkcs1_sign+0x50>
    6553:	83 f8 01             	cmp    $0x1,%eax
    6556:	74 10                	je     6568 <mbedtls_rsa_pkcs1_sign+0x38>
    6558:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
    655d:	48 83 c4 08          	add    $0x8,%rsp
    6561:	c3                   	retq   
    6562:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6568:	41 52                	push   %r10
    656a:	6a ff                	pushq  $0xffffffffffffffff
    656c:	e8 8f f4 ff ff       	callq  5a00 <rsa_rsassa_pss_sign>
    6571:	5a                   	pop    %rdx
    6572:	59                   	pop    %rcx
    6573:	48 83 c4 08          	add    $0x8,%rsp
    6577:	c3                   	retq   
    6578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    657f:	00 
    6580:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    6585:	48 83 c4 08          	add    $0x8,%rsp
    6589:	e9 f2 fd ff ff       	jmpq   6380 <mbedtls_rsa_rsassa_pkcs1_v15_sign>
    658e:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    6593:	eb c8                	jmp    655d <mbedtls_rsa_pkcs1_sign+0x2d>
    6595:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    659c:	00 00 00 00 

00000000000065a0 <mbedtls_rsa_rsassa_pss_verify_ext>:
    65a0:	f3 0f 1e fa          	endbr64 
    65a4:	41 57                	push   %r15
    65a6:	41 89 f3             	mov    %esi,%r11d
    65a9:	49 89 cf             	mov    %rcx,%r15
    65ac:	b9 7e 00 00 00       	mov    $0x7e,%ecx
    65b1:	41 56                	push   %r14
    65b3:	49 89 fe             	mov    %rdi,%r14
    65b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    65ba:	41 55                	push   %r13
    65bc:	45 89 c5             	mov    %r8d,%r13d
    65bf:	41 54                	push   %r12
    65c1:	41 89 d4             	mov    %edx,%r12d
    65c4:	55                   	push   %rbp
    65c5:	53                   	push   %rbx
    65c6:	48 81 ec 78 04 00 00 	sub    $0x478,%rsp
    65cd:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
    65d2:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
    65d7:	48 8b b4 24 b0 04 00 	mov    0x4b0(%rsp),%rsi
    65de:	00 
    65df:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    65e6:	00 00 
    65e8:	48 89 84 24 68 04 00 	mov    %rax,0x468(%rsp)
    65ef:	00 
    65f0:	31 c0                	xor    %eax,%eax
    65f2:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    65f7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    65fa:	44 89 d8             	mov    %r11d,%eax
    65fd:	09 d0                	or     %edx,%eax
    65ff:	74 09                	je     660a <mbedtls_rsa_rsassa_pss_verify_ext+0x6a>
    6601:	4d 85 ff             	test   %r15,%r15
    6604:	0f 84 e6 01 00 00    	je     67f0 <mbedtls_rsa_rsassa_pss_verify_ext+0x250>
    660a:	49 8b 6e 08          	mov    0x8(%r14),%rbp
    660e:	44 89 1c 24          	mov    %r11d,(%rsp)
    6612:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    6616:	48 3d f0 03 00 00    	cmp    $0x3f0,%rax
    661c:	0f 87 ce 01 00 00    	ja     67f0 <mbedtls_rsa_rsassa_pss_verify_ext+0x250>
    6622:	48 8d 5c 24 60       	lea    0x60(%rsp),%rbx
    6627:	4c 89 f7             	mov    %r14,%rdi
    662a:	48 89 da             	mov    %rbx,%rdx
    662d:	e8 be ea ff ff       	callq  50f0 <mbedtls_rsa_public>
    6632:	85 c0                	test   %eax,%eax
    6634:	0f 85 69 01 00 00    	jne    67a3 <mbedtls_rsa_rsassa_pss_verify_ext+0x203>
    663a:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    663e:	80 7c 2c 5f bc       	cmpb   $0xbc,0x5f(%rsp,%rbp,1)
    6643:	44 8b 1c 24          	mov    (%rsp),%r11d
    6647:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    664c:	0f 85 d6 01 00 00    	jne    6828 <mbedtls_rsa_rsassa_pss_verify_ext+0x288>
    6652:	45 85 db             	test   %r11d,%r11d
    6655:	0f 85 75 01 00 00    	jne    67d0 <mbedtls_rsa_rsassa_pss_verify_ext+0x230>
    665b:	44 89 ef             	mov    %r13d,%edi
    665e:	e8 5d 9a 00 00       	callq  100c0 <mbedtls_hash_info_get_size>
    6663:	0f b6 d0             	movzbl %al,%edx
    6666:	85 d2                	test   %edx,%edx
    6668:	0f 84 82 01 00 00    	je     67f0 <mbedtls_rsa_rsassa_pss_verify_ext+0x250>
    666e:	49 8d 7e 10          	lea    0x10(%r14),%rdi
    6672:	89 54 24 10          	mov    %edx,0x10(%rsp)
    6676:	88 14 24             	mov    %dl,(%rsp)
    6679:	e8 d2 30 00 00       	callq  9750 <mbedtls_mpi_bitlen>
    667e:	b9 01 00 00 00       	mov    $0x1,%ecx
    6683:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
    6687:	48 29 e9             	sub    %rbp,%rcx
    668a:	0f b6 44 24 60       	movzbl 0x60(%rsp),%eax
    668f:	41 8d 0c c9          	lea    (%r9,%rcx,8),%ecx
    6693:	d3 f8                	sar    %cl,%eax
    6695:	85 c0                	test   %eax,%eax
    6697:	0f 85 53 01 00 00    	jne    67f0 <mbedtls_rsa_rsassa_pss_verify_ext+0x250>
    669d:	41 f6 c1 07          	test   $0x7,%r9b
    66a1:	0f b6 34 24          	movzbl (%rsp),%esi
    66a5:	8b 54 24 10          	mov    0x10(%rsp),%edx
    66a9:	0f 84 51 01 00 00    	je     6800 <mbedtls_rsa_rsassa_pss_verify_ext+0x260>
    66af:	83 c2 02             	add    $0x2,%edx
    66b2:	4c 89 0c 24          	mov    %r9,(%rsp)
    66b6:	48 39 ea             	cmp    %rbp,%rdx
    66b9:	0f 87 31 01 00 00    	ja     67f0 <mbedtls_rsa_rsassa_pss_verify_ext+0x250>
    66bf:	44 0f b6 d6          	movzbl %sil,%r10d
    66c3:	45 89 e8             	mov    %r13d,%r8d
    66c6:	48 89 df             	mov    %rbx,%rdi
    66c9:	4c 89 d6             	mov    %r10,%rsi
    66cc:	4c 89 d1             	mov    %r10,%rcx
    66cf:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    66d4:	48 f7 d6             	not    %rsi
    66d7:	48 01 ee             	add    %rbp,%rsi
    66da:	4c 8d 1c 33          	lea    (%rbx,%rsi,1),%r11
    66de:	4c 89 da             	mov    %r11,%rdx
    66e1:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    66e6:	e8 c5 d8 ff ff       	callq  3fb0 <mgf_mask>
    66eb:	85 c0                	test   %eax,%eax
    66ed:	0f 85 b0 00 00 00    	jne    67a3 <mbedtls_rsa_rsassa_pss_verify_ext+0x203>
    66f3:	4c 8b 0c 24          	mov    (%rsp),%r9
    66f7:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    66fc:	b8 ff 00 00 00       	mov    $0xff,%eax
    6701:	8d 0c ed 00 00 00 00 	lea    0x0(,%rbp,8),%ecx
    6708:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    670d:	44 29 c9             	sub    %r9d,%ecx
    6710:	49 8d 53 ff          	lea    -0x1(%r11),%rdx
    6714:	d3 f8                	sar    %cl,%eax
    6716:	20 44 24 60          	and    %al,0x60(%rsp)
    671a:	48 39 d3             	cmp    %rdx,%rbx
    671d:	72 12                	jb     6731 <mbedtls_rsa_rsassa_pss_verify_ext+0x191>
    671f:	e9 0e 01 00 00       	jmpq   6832 <mbedtls_rsa_rsassa_pss_verify_ext+0x292>
    6724:	0f 1f 40 00          	nopl   0x0(%rax)
    6728:	48 39 d3             	cmp    %rdx,%rbx
    672b:	0f 84 df 00 00 00    	je     6810 <mbedtls_rsa_rsassa_pss_verify_ext+0x270>
    6731:	0f b6 03             	movzbl (%rbx),%eax
    6734:	48 89 d9             	mov    %rbx,%rcx
    6737:	48 83 c3 01          	add    $0x1,%rbx
    673b:	84 c0                	test   %al,%al
    673d:	74 e9                	je     6728 <mbedtls_rsa_rsassa_pss_verify_ext+0x188>
    673f:	3c 01                	cmp    $0x1,%al
    6741:	0f 85 e1 00 00 00    	jne    6828 <mbedtls_rsa_rsassa_pss_verify_ext+0x288>
    6747:	8b 44 24 08          	mov    0x8(%rsp),%eax
    674b:	4c 89 d9             	mov    %r11,%rcx
    674e:	48 29 d9             	sub    %rbx,%rcx
    6751:	83 f8 ff             	cmp    $0xffffffff,%eax
    6754:	74 0c                	je     6762 <mbedtls_rsa_rsassa_pss_verify_ext+0x1c2>
    6756:	4c 63 f0             	movslq %eax,%r14
    6759:	49 39 ce             	cmp    %rcx,%r14
    675c:	0f 85 c6 00 00 00    	jne    6828 <mbedtls_rsa_rsassa_pss_verify_ext+0x288>
    6762:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
    6767:	44 89 e6             	mov    %r12d,%esi
    676a:	45 89 e9             	mov    %r13d,%r9d
    676d:	48 89 da             	mov    %rbx,%rdx
    6770:	49 89 e8             	mov    %rbp,%r8
    6773:	4c 89 ff             	mov    %r15,%rdi
    6776:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    677b:	4c 89 14 24          	mov    %r10,(%rsp)
    677f:	e8 1c d3 ff ff       	callq  3aa0 <hash_mprime>
    6784:	85 c0                	test   %eax,%eax
    6786:	75 1b                	jne    67a3 <mbedtls_rsa_rsassa_pss_verify_ext+0x203>
    6788:	4c 8b 14 24          	mov    (%rsp),%r10
    678c:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    6791:	48 89 ee             	mov    %rbp,%rsi
    6794:	4c 89 d2             	mov    %r10,%rdx
    6797:	4c 89 df             	mov    %r11,%rdi
    679a:	e8 21 cb ff ff       	callq  32c0 <memcmp@plt>
    679f:	85 c0                	test   %eax,%eax
    67a1:	75 79                	jne    681c <mbedtls_rsa_rsassa_pss_verify_ext+0x27c>
    67a3:	48 8b bc 24 68 04 00 	mov    0x468(%rsp),%rdi
    67aa:	00 
    67ab:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    67b2:	00 00 
    67b4:	0f 85 84 00 00 00    	jne    683e <mbedtls_rsa_rsassa_pss_verify_ext+0x29e>
    67ba:	48 81 c4 78 04 00 00 	add    $0x478,%rsp
    67c1:	5b                   	pop    %rbx
    67c2:	5d                   	pop    %rbp
    67c3:	41 5c                	pop    %r12
    67c5:	41 5d                	pop    %r13
    67c7:	41 5e                	pop    %r14
    67c9:	41 5f                	pop    %r15
    67cb:	c3                   	retq   
    67cc:	0f 1f 40 00          	nopl   0x0(%rax)
    67d0:	44 89 df             	mov    %r11d,%edi
    67d3:	e8 e8 98 00 00       	callq  100c0 <mbedtls_hash_info_get_size>
    67d8:	84 c0                	test   %al,%al
    67da:	74 14                	je     67f0 <mbedtls_rsa_rsassa_pss_verify_ext+0x250>
    67dc:	0f b6 c0             	movzbl %al,%eax
    67df:	41 39 c4             	cmp    %eax,%r12d
    67e2:	0f 84 73 fe ff ff    	je     665b <mbedtls_rsa_rsassa_pss_verify_ext+0xbb>
    67e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    67ef:	00 
    67f0:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    67f5:	eb ac                	jmp    67a3 <mbedtls_rsa_rsassa_pss_verify_ext+0x203>
    67f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    67fe:	00 00 
    6800:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
    6805:	48 8d 5c 24 61       	lea    0x61(%rsp),%rbx
    680a:	e9 a0 fe ff ff       	jmpq   66af <mbedtls_rsa_rsassa_pss_verify_ext+0x10f>
    680f:	90                   	nop
    6810:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
    6814:	4c 89 db             	mov    %r11,%rbx
    6817:	e9 23 ff ff ff       	jmpq   673f <mbedtls_rsa_rsassa_pss_verify_ext+0x19f>
    681c:	b8 80 bc ff ff       	mov    $0xffffbc80,%eax
    6821:	eb 80                	jmp    67a3 <mbedtls_rsa_rsassa_pss_verify_ext+0x203>
    6823:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6828:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
    682d:	e9 71 ff ff ff       	jmpq   67a3 <mbedtls_rsa_rsassa_pss_verify_ext+0x203>
    6832:	0f b6 03             	movzbl (%rbx),%eax
    6835:	48 83 c3 01          	add    $0x1,%rbx
    6839:	e9 01 ff ff ff       	jmpq   673f <mbedtls_rsa_rsassa_pss_verify_ext+0x19f>
    683e:	e8 3d ca ff ff       	callq  3280 <__stack_chk_fail@plt>
    6843:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    684a:	00 00 00 00 
    684e:	66 90                	xchg   %ax,%ax

0000000000006850 <mbedtls_rsa_rsassa_pss_verify>:
    6850:	f3 0f 1e fa          	endbr64 
    6854:	89 f0                	mov    %esi,%eax
    6856:	4d 89 c1             	mov    %r8,%r9
    6859:	09 d0                	or     %edx,%eax
    685b:	74 05                	je     6862 <mbedtls_rsa_rsassa_pss_verify+0x12>
    685d:	48 85 c9             	test   %rcx,%rcx
    6860:	74 24                	je     6886 <mbedtls_rsa_rsassa_pss_verify+0x36>
    6862:	48 83 ec 10          	sub    $0x10,%rsp
    6866:	8b 87 4c 01 00 00    	mov    0x14c(%rdi),%eax
    686c:	41 51                	push   %r9
    686e:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
    6874:	85 c0                	test   %eax,%eax
    6876:	0f 44 c6             	cmove  %esi,%eax
    6879:	41 89 c0             	mov    %eax,%r8d
    687c:	e8 1f fd ff ff       	callq  65a0 <mbedtls_rsa_rsassa_pss_verify_ext>
    6881:	48 83 c4 18          	add    $0x18,%rsp
    6885:	c3                   	retq   
    6886:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    688b:	c3                   	retq   
    688c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006890 <mbedtls_rsa_rsassa_pkcs1_v15_verify>:
    6890:	f3 0f 1e fa          	endbr64 
    6894:	41 57                	push   %r15
    6896:	89 f0                	mov    %esi,%eax
    6898:	41 56                	push   %r14
    689a:	49 89 ce             	mov    %rcx,%r14
    689d:	41 55                	push   %r13
    689f:	41 89 d5             	mov    %edx,%r13d
    68a2:	41 54                	push   %r12
    68a4:	41 89 f4             	mov    %esi,%r12d
    68a7:	55                   	push   %rbp
    68a8:	53                   	push   %rbx
    68a9:	48 83 ec 18          	sub    $0x18,%rsp
    68ad:	09 d0                	or     %edx,%eax
    68af:	48 89 3c 24          	mov    %rdi,(%rsp)
    68b3:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    68b8:	74 09                	je     68c3 <mbedtls_rsa_rsassa_pkcs1_v15_verify+0x33>
    68ba:	48 85 c9             	test   %rcx,%rcx
    68bd:	0f 84 c3 00 00 00    	je     6986 <mbedtls_rsa_rsassa_pkcs1_v15_verify+0xf6>
    68c3:	48 8b 04 24          	mov    (%rsp),%rax
    68c7:	bf 01 00 00 00       	mov    $0x1,%edi
    68cc:	4c 8b 78 08          	mov    0x8(%rax),%r15
    68d0:	4c 89 fe             	mov    %r15,%rsi
    68d3:	e8 08 ca ff ff       	callq  32e0 <calloc@plt>
    68d8:	48 89 c5             	mov    %rax,%rbp
    68db:	48 85 c0             	test   %rax,%rax
    68de:	0f 84 bd 00 00 00    	je     69a1 <mbedtls_rsa_rsassa_pkcs1_v15_verify+0x111>
    68e4:	4c 89 fe             	mov    %r15,%rsi
    68e7:	bf 01 00 00 00       	mov    $0x1,%edi
    68ec:	e8 ef c9 ff ff       	callq  32e0 <calloc@plt>
    68f1:	48 89 c3             	mov    %rax,%rbx
    68f4:	48 85 c0             	test   %rax,%rax
    68f7:	0f 84 91 00 00 00    	je     698e <mbedtls_rsa_rsassa_pkcs1_v15_verify+0xfe>
    68fd:	44 89 e7             	mov    %r12d,%edi
    6900:	49 89 c0             	mov    %rax,%r8
    6903:	4c 89 f9             	mov    %r15,%rcx
    6906:	4c 89 f2             	mov    %r14,%rdx
    6909:	44 89 ee             	mov    %r13d,%esi
    690c:	e8 af d2 ff ff       	callq  3bc0 <rsa_rsassa_pkcs1_v15_encode>
    6911:	41 89 c4             	mov    %eax,%r12d
    6914:	85 c0                	test   %eax,%eax
    6916:	74 38                	je     6950 <mbedtls_rsa_rsassa_pkcs1_v15_verify+0xc0>
    6918:	4c 89 fe             	mov    %r15,%rsi
    691b:	48 89 ef             	mov    %rbp,%rdi
    691e:	e8 0d c0 00 00       	callq  12930 <mbedtls_platform_zeroize>
    6923:	48 89 ef             	mov    %rbp,%rdi
    6926:	e8 d5 c8 ff ff       	callq  3200 <free@plt>
    692b:	48 89 df             	mov    %rbx,%rdi
    692e:	4c 89 fe             	mov    %r15,%rsi
    6931:	e8 fa bf 00 00       	callq  12930 <mbedtls_platform_zeroize>
    6936:	48 89 df             	mov    %rbx,%rdi
    6939:	e8 c2 c8 ff ff       	callq  3200 <free@plt>
    693e:	48 83 c4 18          	add    $0x18,%rsp
    6942:	44 89 e0             	mov    %r12d,%eax
    6945:	5b                   	pop    %rbx
    6946:	5d                   	pop    %rbp
    6947:	41 5c                	pop    %r12
    6949:	41 5d                	pop    %r13
    694b:	41 5e                	pop    %r14
    694d:	41 5f                	pop    %r15
    694f:	c3                   	retq   
    6950:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6955:	48 8b 3c 24          	mov    (%rsp),%rdi
    6959:	48 89 ea             	mov    %rbp,%rdx
    695c:	e8 8f e7 ff ff       	callq  50f0 <mbedtls_rsa_public>
    6961:	41 89 c4             	mov    %eax,%r12d
    6964:	85 c0                	test   %eax,%eax
    6966:	75 b0                	jne    6918 <mbedtls_rsa_rsassa_pkcs1_v15_verify+0x88>
    6968:	4c 89 fa             	mov    %r15,%rdx
    696b:	48 89 de             	mov    %rbx,%rsi
    696e:	48 89 ef             	mov    %rbp,%rdi
    6971:	e8 6a 8c 00 00       	callq  f5e0 <mbedtls_ct_memcmp>
    6976:	41 89 c4             	mov    %eax,%r12d
    6979:	85 c0                	test   %eax,%eax
    697b:	b8 80 bc ff ff       	mov    $0xffffbc80,%eax
    6980:	44 0f 45 e0          	cmovne %eax,%r12d
    6984:	eb 92                	jmp    6918 <mbedtls_rsa_rsassa_pkcs1_v15_verify+0x88>
    6986:	41 bc 80 bf ff ff    	mov    $0xffffbf80,%r12d
    698c:	eb b0                	jmp    693e <mbedtls_rsa_rsassa_pkcs1_v15_verify+0xae>
    698e:	48 89 ef             	mov    %rbp,%rdi
    6991:	4c 89 fe             	mov    %r15,%rsi
    6994:	e8 97 bf 00 00       	callq  12930 <mbedtls_platform_zeroize>
    6999:	48 89 ef             	mov    %rbp,%rdi
    699c:	e8 5f c8 ff ff       	callq  3200 <free@plt>
    69a1:	41 bc f0 ff ff ff    	mov    $0xfffffff0,%r12d
    69a7:	eb 95                	jmp    693e <mbedtls_rsa_rsassa_pkcs1_v15_verify+0xae>
    69a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000069b0 <mbedtls_rsa_pkcs1_verify>:
    69b0:	f3 0f 1e fa          	endbr64 
    69b4:	89 f0                	mov    %esi,%eax
    69b6:	09 d0                	or     %edx,%eax
    69b8:	74 05                	je     69bf <mbedtls_rsa_pkcs1_verify+0xf>
    69ba:	48 85 c9             	test   %rcx,%rcx
    69bd:	74 26                	je     69e5 <mbedtls_rsa_pkcs1_verify+0x35>
    69bf:	8b 87 48 01 00 00    	mov    0x148(%rdi),%eax
    69c5:	85 c0                	test   %eax,%eax
    69c7:	74 17                	je     69e0 <mbedtls_rsa_pkcs1_verify+0x30>
    69c9:	83 f8 01             	cmp    $0x1,%eax
    69cc:	74 0a                	je     69d8 <mbedtls_rsa_pkcs1_verify+0x28>
    69ce:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
    69d3:	c3                   	retq   
    69d4:	0f 1f 40 00          	nopl   0x0(%rax)
    69d8:	e9 73 fe ff ff       	jmpq   6850 <mbedtls_rsa_rsassa_pss_verify>
    69dd:	0f 1f 00             	nopl   (%rax)
    69e0:	e9 ab fe ff ff       	jmpq   6890 <mbedtls_rsa_rsassa_pkcs1_v15_verify>
    69e5:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
    69ea:	c3                   	retq   
    69eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000069f0 <mbedtls_rsa_copy>:
    69f0:	f3 0f 1e fa          	endbr64 
    69f4:	55                   	push   %rbp
    69f5:	48 89 fd             	mov    %rdi,%rbp
    69f8:	48 83 c7 10          	add    $0x10,%rdi
    69fc:	53                   	push   %rbx
    69fd:	48 89 f3             	mov    %rsi,%rbx
    6a00:	48 83 c6 10          	add    $0x10,%rsi
    6a04:	48 83 ec 18          	sub    $0x18,%rsp
    6a08:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
    6a0c:	48 89 47 f8          	mov    %rax,-0x8(%rdi)
    6a10:	e8 3b 2a 00 00       	callq  9450 <mbedtls_mpi_copy>
    6a15:	85 c0                	test   %eax,%eax
    6a17:	74 17                	je     6a30 <mbedtls_rsa_copy+0x40>
    6a19:	48 89 ef             	mov    %rbp,%rdi
    6a1c:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    6a20:	e8 3b d7 ff ff       	callq  4160 <mbedtls_rsa_free.part.0>
    6a25:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    6a29:	48 83 c4 18          	add    $0x18,%rsp
    6a2d:	5b                   	pop    %rbx
    6a2e:	5d                   	pop    %rbp
    6a2f:	c3                   	retq   
    6a30:	48 8d 73 28          	lea    0x28(%rbx),%rsi
    6a34:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
    6a38:	e8 13 2a 00 00       	callq  9450 <mbedtls_mpi_copy>
    6a3d:	85 c0                	test   %eax,%eax
    6a3f:	75 d8                	jne    6a19 <mbedtls_rsa_copy+0x29>
    6a41:	48 8d 73 40          	lea    0x40(%rbx),%rsi
    6a45:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
    6a49:	e8 02 2a 00 00       	callq  9450 <mbedtls_mpi_copy>
    6a4e:	85 c0                	test   %eax,%eax
    6a50:	75 c7                	jne    6a19 <mbedtls_rsa_copy+0x29>
    6a52:	48 8d 73 58          	lea    0x58(%rbx),%rsi
    6a56:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
    6a5a:	e8 f1 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6a5f:	85 c0                	test   %eax,%eax
    6a61:	75 b6                	jne    6a19 <mbedtls_rsa_copy+0x29>
    6a63:	48 8d 73 70          	lea    0x70(%rbx),%rsi
    6a67:	48 8d 7d 70          	lea    0x70(%rbp),%rdi
    6a6b:	e8 e0 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6a70:	85 c0                	test   %eax,%eax
    6a72:	75 a5                	jne    6a19 <mbedtls_rsa_copy+0x29>
    6a74:	48 8d b3 88 00 00 00 	lea    0x88(%rbx),%rsi
    6a7b:	48 8d bd 88 00 00 00 	lea    0x88(%rbp),%rdi
    6a82:	e8 c9 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6a87:	85 c0                	test   %eax,%eax
    6a89:	75 8e                	jne    6a19 <mbedtls_rsa_copy+0x29>
    6a8b:	48 8d b3 a0 00 00 00 	lea    0xa0(%rbx),%rsi
    6a92:	48 8d bd a0 00 00 00 	lea    0xa0(%rbp),%rdi
    6a99:	e8 b2 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6a9e:	85 c0                	test   %eax,%eax
    6aa0:	0f 85 73 ff ff ff    	jne    6a19 <mbedtls_rsa_copy+0x29>
    6aa6:	48 8d b3 b8 00 00 00 	lea    0xb8(%rbx),%rsi
    6aad:	48 8d bd b8 00 00 00 	lea    0xb8(%rbp),%rdi
    6ab4:	e8 97 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6ab9:	85 c0                	test   %eax,%eax
    6abb:	0f 85 58 ff ff ff    	jne    6a19 <mbedtls_rsa_copy+0x29>
    6ac1:	48 8d b3 e8 00 00 00 	lea    0xe8(%rbx),%rsi
    6ac8:	48 8d bd e8 00 00 00 	lea    0xe8(%rbp),%rdi
    6acf:	e8 7c 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6ad4:	85 c0                	test   %eax,%eax
    6ad6:	0f 85 3d ff ff ff    	jne    6a19 <mbedtls_rsa_copy+0x29>
    6adc:	48 8d b3 00 01 00 00 	lea    0x100(%rbx),%rsi
    6ae3:	48 8d bd 00 01 00 00 	lea    0x100(%rbp),%rdi
    6aea:	e8 61 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6aef:	85 c0                	test   %eax,%eax
    6af1:	0f 85 22 ff ff ff    	jne    6a19 <mbedtls_rsa_copy+0x29>
    6af7:	48 8d b3 d0 00 00 00 	lea    0xd0(%rbx),%rsi
    6afe:	48 8d bd d0 00 00 00 	lea    0xd0(%rbp),%rdi
    6b05:	e8 46 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6b0a:	85 c0                	test   %eax,%eax
    6b0c:	0f 85 07 ff ff ff    	jne    6a19 <mbedtls_rsa_copy+0x29>
    6b12:	48 8d b3 18 01 00 00 	lea    0x118(%rbx),%rsi
    6b19:	48 8d bd 18 01 00 00 	lea    0x118(%rbp),%rdi
    6b20:	e8 2b 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6b25:	85 c0                	test   %eax,%eax
    6b27:	0f 85 ec fe ff ff    	jne    6a19 <mbedtls_rsa_copy+0x29>
    6b2d:	48 8d b3 30 01 00 00 	lea    0x130(%rbx),%rsi
    6b34:	48 8d bd 30 01 00 00 	lea    0x130(%rbp),%rdi
    6b3b:	e8 10 29 00 00       	callq  9450 <mbedtls_mpi_copy>
    6b40:	85 c0                	test   %eax,%eax
    6b42:	0f 85 d1 fe ff ff    	jne    6a19 <mbedtls_rsa_copy+0x29>
    6b48:	8b 93 48 01 00 00    	mov    0x148(%rbx),%edx
    6b4e:	89 95 48 01 00 00    	mov    %edx,0x148(%rbp)
    6b54:	8b 93 4c 01 00 00    	mov    0x14c(%rbx),%edx
    6b5a:	89 95 4c 01 00 00    	mov    %edx,0x14c(%rbp)
    6b60:	e9 c4 fe ff ff       	jmpq   6a29 <mbedtls_rsa_copy+0x39>
    6b65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6b6c:	00 00 00 00 

0000000000006b70 <mbedtls_rsa_free>:
    6b70:	f3 0f 1e fa          	endbr64 
    6b74:	48 85 ff             	test   %rdi,%rdi
    6b77:	74 07                	je     6b80 <mbedtls_rsa_free+0x10>
    6b79:	e9 e2 d5 ff ff       	jmpq   4160 <mbedtls_rsa_free.part.0>
    6b7e:	66 90                	xchg   %ax,%ax
    6b80:	c3                   	retq   
    6b81:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6b88:	00 00 00 00 
    6b8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006b90 <mbedtls_rsa_self_test>:
    6b90:	f3 0f 1e fa          	endbr64 
    6b94:	41 56                	push   %r14
    6b96:	41 55                	push   %r13
    6b98:	41 54                	push   %r12
    6b9a:	55                   	push   %rbp
    6b9b:	53                   	push   %rbx
    6b9c:	89 fb                	mov    %edi,%ebx
    6b9e:	48 81 ec 70 02 00 00 	sub    $0x270,%rsp
    6ba5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6bac:	00 00 
    6bae:	48 89 84 24 68 02 00 	mov    %rax,0x268(%rsp)
    6bb5:	00 
    6bb6:	31 c0                	xor    %eax,%eax
    6bb8:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
    6bbd:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    6bc2:	4c 89 ef             	mov    %r13,%rdi
    6bc5:	e8 d6 25 00 00       	callq  91a0 <mbedtls_mpi_init>
    6bca:	31 c0                	xor    %eax,%eax
    6bcc:	b9 2a 00 00 00       	mov    $0x2a,%ecx
    6bd1:	48 89 ef             	mov    %rbp,%rdi
    6bd4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    6bd7:	48 8d 15 ba 14 01 00 	lea    0x114ba(%rip),%rdx        # 18098 <bits+0x18>
    6bde:	be 10 00 00 00       	mov    $0x10,%esi
    6be3:	4c 89 ef             	mov    %r13,%rdi
    6be6:	e8 a5 36 00 00       	callq  a290 <mbedtls_mpi_read_string>
    6beb:	41 89 c4             	mov    %eax,%r12d
    6bee:	85 c0                	test   %eax,%eax
    6bf0:	74 3e                	je     6c30 <mbedtls_rsa_self_test+0xa0>
    6bf2:	4c 89 ef             	mov    %r13,%rdi
    6bf5:	e8 c6 25 00 00       	callq  91c0 <mbedtls_mpi_free>
    6bfa:	48 89 ef             	mov    %rbp,%rdi
    6bfd:	e8 5e d5 ff ff       	callq  4160 <mbedtls_rsa_free.part.0>
    6c02:	48 8b 84 24 68 02 00 	mov    0x268(%rsp),%rax
    6c09:	00 
    6c0a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    6c11:	00 00 
    6c13:	0f 85 2e 04 00 00    	jne    7047 <mbedtls_rsa_self_test+0x4b7>
    6c19:	48 81 c4 70 02 00 00 	add    $0x270,%rsp
    6c20:	44 89 e0             	mov    %r12d,%eax
    6c23:	5b                   	pop    %rbx
    6c24:	5d                   	pop    %rbp
    6c25:	41 5c                	pop    %r12
    6c27:	41 5d                	pop    %r13
    6c29:	41 5e                	pop    %r14
    6c2b:	c3                   	retq   
    6c2c:	0f 1f 40 00          	nopl   0x0(%rax)
    6c30:	45 31 c9             	xor    %r9d,%r9d
    6c33:	45 31 c0             	xor    %r8d,%r8d
    6c36:	31 c9                	xor    %ecx,%ecx
    6c38:	31 d2                	xor    %edx,%edx
    6c3a:	4c 89 ee             	mov    %r13,%rsi
    6c3d:	48 89 ef             	mov    %rbp,%rdi
    6c40:	e8 bb d5 ff ff       	callq  4200 <mbedtls_rsa_import>
    6c45:	41 89 c4             	mov    %eax,%r12d
    6c48:	85 c0                	test   %eax,%eax
    6c4a:	75 a6                	jne    6bf2 <mbedtls_rsa_self_test+0x62>
    6c4c:	48 8d 15 4d 15 01 00 	lea    0x1154d(%rip),%rdx        # 181a0 <bits+0x120>
    6c53:	be 10 00 00 00       	mov    $0x10,%esi
    6c58:	4c 89 ef             	mov    %r13,%rdi
    6c5b:	e8 30 36 00 00       	callq  a290 <mbedtls_mpi_read_string>
    6c60:	41 89 c4             	mov    %eax,%r12d
    6c63:	85 c0                	test   %eax,%eax
    6c65:	75 8b                	jne    6bf2 <mbedtls_rsa_self_test+0x62>
    6c67:	48 8d bc 24 88 00 00 	lea    0x88(%rsp),%rdi
    6c6e:	00 
    6c6f:	4c 89 ee             	mov    %r13,%rsi
    6c72:	e8 d9 27 00 00       	callq  9450 <mbedtls_mpi_copy>
    6c77:	85 c0                	test   %eax,%eax
    6c79:	0f 85 19 02 00 00    	jne    6e98 <mbedtls_rsa_self_test+0x308>
    6c7f:	48 8d 15 a2 15 01 00 	lea    0x115a2(%rip),%rdx        # 18228 <bits+0x1a8>
    6c86:	be 10 00 00 00       	mov    $0x10,%esi
    6c8b:	4c 89 ef             	mov    %r13,%rdi
    6c8e:	e8 fd 35 00 00       	callq  a290 <mbedtls_mpi_read_string>
    6c93:	41 89 c4             	mov    %eax,%r12d
    6c96:	85 c0                	test   %eax,%eax
    6c98:	0f 85 54 ff ff ff    	jne    6bf2 <mbedtls_rsa_self_test+0x62>
    6c9e:	48 8d bc 24 a0 00 00 	lea    0xa0(%rsp),%rdi
    6ca5:	00 
    6ca6:	4c 89 ee             	mov    %r13,%rsi
    6ca9:	e8 a2 27 00 00       	callq  9450 <mbedtls_mpi_copy>
    6cae:	85 c0                	test   %eax,%eax
    6cb0:	0f 85 ca 01 00 00    	jne    6e80 <mbedtls_rsa_self_test+0x2f0>
    6cb6:	48 8d 15 f3 15 01 00 	lea    0x115f3(%rip),%rdx        # 182b0 <bits+0x230>
    6cbd:	be 10 00 00 00       	mov    $0x10,%esi
    6cc2:	4c 89 ef             	mov    %r13,%rdi
    6cc5:	e8 c6 35 00 00       	callq  a290 <mbedtls_mpi_read_string>
    6cca:	41 89 c4             	mov    %eax,%r12d
    6ccd:	85 c0                	test   %eax,%eax
    6ccf:	0f 85 1d ff ff ff    	jne    6bf2 <mbedtls_rsa_self_test+0x62>
    6cd5:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
    6cda:	4c 89 ee             	mov    %r13,%rsi
    6cdd:	e8 6e 27 00 00       	callq  9450 <mbedtls_mpi_copy>
    6ce2:	85 c0                	test   %eax,%eax
    6ce4:	0f 85 c1 01 00 00    	jne    6eab <mbedtls_rsa_self_test+0x31b>
    6cea:	48 8d 15 c0 16 01 00 	lea    0x116c0(%rip),%rdx        # 183b1 <bits+0x331>
    6cf1:	be 10 00 00 00       	mov    $0x10,%esi
    6cf6:	4c 89 ef             	mov    %r13,%rdi
    6cf9:	e8 92 35 00 00       	callq  a290 <mbedtls_mpi_read_string>
    6cfe:	41 89 c4             	mov    %eax,%r12d
    6d01:	85 c0                	test   %eax,%eax
    6d03:	0f 85 e9 fe ff ff    	jne    6bf2 <mbedtls_rsa_self_test+0x62>
    6d09:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
    6d0e:	4c 89 ee             	mov    %r13,%rsi
    6d11:	e8 3a 27 00 00       	callq  9450 <mbedtls_mpi_copy>
    6d16:	85 c0                	test   %eax,%eax
    6d18:	0f 85 ab 01 00 00    	jne    6ec9 <mbedtls_rsa_self_test+0x339>
    6d1e:	48 89 ef             	mov    %rbp,%rdi
    6d21:	e8 7a d6 ff ff       	callq  43a0 <mbedtls_rsa_complete>
    6d26:	41 89 c4             	mov    %eax,%r12d
    6d29:	85 c0                	test   %eax,%eax
    6d2b:	0f 85 c1 fe ff ff    	jne    6bf2 <mbedtls_rsa_self_test+0x62>
    6d31:	85 db                	test   %ebx,%ebx
    6d33:	0f 85 a3 01 00 00    	jne    6edc <mbedtls_rsa_self_test+0x34c>
    6d39:	48 89 ef             	mov    %rbp,%rdi
    6d3c:	e8 2f de ff ff       	callq  4b70 <mbedtls_rsa_check_pubkey>
    6d41:	85 c0                	test   %eax,%eax
    6d43:	0f 85 75 01 00 00    	jne    6ebe <mbedtls_rsa_self_test+0x32e>
    6d49:	48 89 ef             	mov    %rbp,%rdi
    6d4c:	e8 8f de ff ff       	callq  4be0 <mbedtls_rsa_check_privkey>
    6d51:	85 c0                	test   %eax,%eax
    6d53:	0f 85 65 01 00 00    	jne    6ebe <mbedtls_rsa_self_test+0x32e>
    6d59:	66 0f 6f 05 ef 16 01 	movdqa 0x116ef(%rip),%xmm0        # 18450 <bits+0x3d0>
    6d60:	00 
    6d61:	31 d2                	xor    %edx,%edx
    6d63:	48 89 ef             	mov    %rbp,%rdi
    6d66:	48 8d 9c 24 e0 01 00 	lea    0x1e0(%rsp),%rbx
    6d6d:	00 
    6d6e:	4c 8d a4 24 a0 01 00 	lea    0x1a0(%rsp),%r12
    6d75:	00 
    6d76:	49 89 d9             	mov    %rbx,%r9
    6d79:	48 b8 0b 0c cc dd dd 	movabs $0xddddddddddcc0c0b,%rax
    6d80:	dd dd dd 
    6d83:	b9 18 00 00 00       	mov    $0x18,%ecx
    6d88:	4d 89 e0             	mov    %r12,%r8
    6d8b:	48 8d 35 ae d0 ff ff 	lea    -0x2f52(%rip),%rsi        # 3e40 <myrand>
    6d92:	48 89 84 24 b0 01 00 	mov    %rax,0x1b0(%rsp)
    6d99:	00 
    6d9a:	0f 29 84 24 a0 01 00 	movaps %xmm0,0x1a0(%rsp)
    6da1:	00 
    6da2:	e8 59 f1 ff ff       	callq  5f00 <mbedtls_rsa_pkcs1_encrypt>
    6da7:	85 c0                	test   %eax,%eax
    6da9:	0f 85 0f 01 00 00    	jne    6ebe <mbedtls_rsa_self_test+0x32e>
    6daf:	4c 8d b4 24 c0 01 00 	lea    0x1c0(%rsp),%r14
    6db6:	00 
    6db7:	31 d2                	xor    %edx,%edx
    6db9:	49 89 d8             	mov    %rbx,%r8
    6dbc:	48 89 ef             	mov    %rbp,%rdi
    6dbf:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    6dc4:	50                   	push   %rax
    6dc5:	4d 89 f1             	mov    %r14,%r9
    6dc8:	48 8d 35 71 d0 ff ff 	lea    -0x2f8f(%rip),%rsi        # 3e40 <myrand>
    6dcf:	6a 18                	pushq  $0x18
    6dd1:	e8 1a f5 ff ff       	callq  62f0 <mbedtls_rsa_pkcs1_decrypt>
    6dd6:	5a                   	pop    %rdx
    6dd7:	59                   	pop    %rcx
    6dd8:	85 c0                	test   %eax,%eax
    6dda:	0f 85 de 00 00 00    	jne    6ebe <mbedtls_rsa_self_test+0x32e>
    6de0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6de5:	4c 89 e6             	mov    %r12,%rsi
    6de8:	4c 89 f7             	mov    %r14,%rdi
    6deb:	e8 d0 c4 ff ff       	callq  32c0 <memcmp@plt>
    6df0:	85 c0                	test   %eax,%eax
    6df2:	0f 85 c6 00 00 00    	jne    6ebe <mbedtls_rsa_self_test+0x32e>
    6df8:	bf 02 00 00 00       	mov    $0x2,%edi
    6dfd:	4c 8d b4 24 80 01 00 	lea    0x180(%rsp),%r14
    6e04:	00 
    6e05:	e8 36 94 00 00       	callq  10240 <mbedtls_md_info_from_type>
    6e0a:	4c 89 e6             	mov    %r12,%rsi
    6e0d:	4c 89 f1             	mov    %r14,%rcx
    6e10:	ba 18 00 00 00       	mov    $0x18,%edx
    6e15:	48 89 c7             	mov    %rax,%rdi
    6e18:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6e1e:	e8 cd 99 00 00       	callq  107f0 <mbedtls_md>
    6e23:	85 c0                	test   %eax,%eax
    6e25:	0f 85 d7 fd ff ff    	jne    6c02 <mbedtls_rsa_self_test+0x72>
    6e2b:	41 51                	push   %r9
    6e2d:	41 b8 14 00 00 00    	mov    $0x14,%r8d
    6e33:	4d 89 f1             	mov    %r14,%r9
    6e36:	b9 02 00 00 00       	mov    $0x2,%ecx
    6e3b:	53                   	push   %rbx
    6e3c:	31 d2                	xor    %edx,%edx
    6e3e:	48 8d 35 fb cf ff ff 	lea    -0x3005(%rip),%rsi        # 3e40 <myrand>
    6e45:	48 89 ef             	mov    %rbp,%rdi
    6e48:	e8 e3 f6 ff ff       	callq  6530 <mbedtls_rsa_pkcs1_sign>
    6e4d:	41 5a                	pop    %r10
    6e4f:	41 5b                	pop    %r11
    6e51:	85 c0                	test   %eax,%eax
    6e53:	75 69                	jne    6ebe <mbedtls_rsa_self_test+0x32e>
    6e55:	49 89 d8             	mov    %rbx,%r8
    6e58:	4c 89 f1             	mov    %r14,%rcx
    6e5b:	ba 14 00 00 00       	mov    $0x14,%edx
    6e60:	be 02 00 00 00       	mov    $0x2,%esi
    6e65:	48 89 ef             	mov    %rbp,%rdi
    6e68:	45 31 e4             	xor    %r12d,%r12d
    6e6b:	e8 40 fb ff ff       	callq  69b0 <mbedtls_rsa_pkcs1_verify>
    6e70:	85 c0                	test   %eax,%eax
    6e72:	41 0f 95 c4          	setne  %r12b
    6e76:	e9 77 fd ff ff       	jmpq   6bf2 <mbedtls_rsa_self_test+0x62>
    6e7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6e80:	2d 80 40 00 00       	sub    $0x4080,%eax
    6e85:	41 89 c4             	mov    %eax,%r12d
    6e88:	0f 84 28 fe ff ff    	je     6cb6 <mbedtls_rsa_self_test+0x126>
    6e8e:	e9 5f fd ff ff       	jmpq   6bf2 <mbedtls_rsa_self_test+0x62>
    6e93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6e98:	2d 80 40 00 00       	sub    $0x4080,%eax
    6e9d:	41 89 c4             	mov    %eax,%r12d
    6ea0:	0f 84 d9 fd ff ff    	je     6c7f <mbedtls_rsa_self_test+0xef>
    6ea6:	e9 47 fd ff ff       	jmpq   6bf2 <mbedtls_rsa_self_test+0x62>
    6eab:	2d 80 40 00 00       	sub    $0x4080,%eax
    6eb0:	41 89 c4             	mov    %eax,%r12d
    6eb3:	0f 84 31 fe ff ff    	je     6cea <mbedtls_rsa_self_test+0x15a>
    6eb9:	e9 34 fd ff ff       	jmpq   6bf2 <mbedtls_rsa_self_test+0x62>
    6ebe:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6ec4:	e9 29 fd ff ff       	jmpq   6bf2 <mbedtls_rsa_self_test+0x62>
    6ec9:	2d 80 40 00 00       	sub    $0x4080,%eax
    6ece:	41 89 c4             	mov    %eax,%r12d
    6ed1:	0f 84 47 fe ff ff    	je     6d1e <mbedtls_rsa_self_test+0x18e>
    6ed7:	e9 16 fd ff ff       	jmpq   6bf2 <mbedtls_rsa_self_test+0x62>
    6edc:	bf 01 00 00 00       	mov    $0x1,%edi
    6ee1:	31 c0                	xor    %eax,%eax
    6ee3:	48 8d 35 cd 14 01 00 	lea    0x114cd(%rip),%rsi        # 183b7 <bits+0x337>
    6eea:	e8 61 c4 ff ff       	callq  3350 <__printf_chk@plt>
    6eef:	48 89 ef             	mov    %rbp,%rdi
    6ef2:	e8 79 dc ff ff       	callq  4b70 <mbedtls_rsa_check_pubkey>
    6ef7:	85 c0                	test   %eax,%eax
    6ef9:	0f 85 31 01 00 00    	jne    7030 <mbedtls_rsa_self_test+0x4a0>
    6eff:	48 89 ef             	mov    %rbp,%rdi
    6f02:	e8 d9 dc ff ff       	callq  4be0 <mbedtls_rsa_check_privkey>
    6f07:	85 c0                	test   %eax,%eax
    6f09:	0f 85 21 01 00 00    	jne    7030 <mbedtls_rsa_self_test+0x4a0>
    6f0f:	48 8d 35 12 15 01 00 	lea    0x11512(%rip),%rsi        # 18428 <bits+0x3a8>
    6f16:	bf 01 00 00 00       	mov    $0x1,%edi
    6f1b:	31 c0                	xor    %eax,%eax
    6f1d:	e8 2e c4 ff ff       	callq  3350 <__printf_chk@plt>
    6f22:	31 d2                	xor    %edx,%edx
    6f24:	b9 18 00 00 00       	mov    $0x18,%ecx
    6f29:	48 89 ef             	mov    %rbp,%rdi
    6f2c:	66 0f 6f 05 1c 15 01 	movdqa 0x1151c(%rip),%xmm0        # 18450 <bits+0x3d0>
    6f33:	00 
    6f34:	48 8d 9c 24 e0 01 00 	lea    0x1e0(%rsp),%rbx
    6f3b:	00 
    6f3c:	4c 8d a4 24 a0 01 00 	lea    0x1a0(%rsp),%r12
    6f43:	00 
    6f44:	48 b8 0b 0c cc dd dd 	movabs $0xddddddddddcc0c0b,%rax
    6f4b:	dd dd dd 
    6f4e:	49 89 d9             	mov    %rbx,%r9
    6f51:	4d 89 e0             	mov    %r12,%r8
    6f54:	48 8d 35 e5 ce ff ff 	lea    -0x311b(%rip),%rsi        # 3e40 <myrand>
    6f5b:	48 89 84 24 b0 01 00 	mov    %rax,0x1b0(%rsp)
    6f62:	00 
    6f63:	0f 29 84 24 a0 01 00 	movaps %xmm0,0x1a0(%rsp)
    6f6a:	00 
    6f6b:	e8 90 ef ff ff       	callq  5f00 <mbedtls_rsa_pkcs1_encrypt>
    6f70:	85 c0                	test   %eax,%eax
    6f72:	0f 85 b8 00 00 00    	jne    7030 <mbedtls_rsa_self_test+0x4a0>
    6f78:	48 8d 35 8b 14 01 00 	lea    0x1148b(%rip),%rsi        # 1840a <bits+0x38a>
    6f7f:	bf 01 00 00 00       	mov    $0x1,%edi
    6f84:	31 c0                	xor    %eax,%eax
    6f86:	e8 c5 c3 ff ff       	callq  3350 <__printf_chk@plt>
    6f8b:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    6f90:	49 89 d8             	mov    %rbx,%r8
    6f93:	48 89 ef             	mov    %rbp,%rdi
    6f96:	4c 8d b4 24 c0 01 00 	lea    0x1c0(%rsp),%r14
    6f9d:	00 
    6f9e:	56                   	push   %rsi
    6f9f:	31 d2                	xor    %edx,%edx
    6fa1:	48 8d 35 98 ce ff ff 	lea    -0x3168(%rip),%rsi        # 3e40 <myrand>
    6fa8:	6a 18                	pushq  $0x18
    6faa:	4d 89 f1             	mov    %r14,%r9
    6fad:	e8 3e f3 ff ff       	callq  62f0 <mbedtls_rsa_pkcs1_decrypt>
    6fb2:	5f                   	pop    %rdi
    6fb3:	41 58                	pop    %r8
    6fb5:	85 c0                	test   %eax,%eax
    6fb7:	75 77                	jne    7030 <mbedtls_rsa_self_test+0x4a0>
    6fb9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6fbe:	4c 89 e6             	mov    %r12,%rsi
    6fc1:	4c 89 f7             	mov    %r14,%rdi
    6fc4:	e8 f7 c2 ff ff       	callq  32c0 <memcmp@plt>
    6fc9:	85 c0                	test   %eax,%eax
    6fcb:	75 63                	jne    7030 <mbedtls_rsa_self_test+0x4a0>
    6fcd:	48 8d 3d fa 13 01 00 	lea    0x113fa(%rip),%rdi        # 183ce <bits+0x34e>
    6fd4:	4c 8d b4 24 80 01 00 	lea    0x180(%rsp),%r14
    6fdb:	00 
    6fdc:	e8 3f c2 ff ff       	callq  3220 <puts@plt>
    6fe1:	48 8d 35 ed 13 01 00 	lea    0x113ed(%rip),%rsi        # 183d5 <bits+0x355>
    6fe8:	bf 01 00 00 00       	mov    $0x1,%edi
    6fed:	31 c0                	xor    %eax,%eax
    6fef:	e8 5c c3 ff ff       	callq  3350 <__printf_chk@plt>
    6ff4:	bf 02 00 00 00       	mov    $0x2,%edi
    6ff9:	e8 42 92 00 00       	callq  10240 <mbedtls_md_info_from_type>
    6ffe:	4c 89 f1             	mov    %r14,%rcx
    7001:	ba 18 00 00 00       	mov    $0x18,%edx
    7006:	4c 89 e6             	mov    %r12,%rsi
    7009:	48 89 c7             	mov    %rax,%rdi
    700c:	e8 df 97 00 00       	callq  107f0 <mbedtls_md>
    7011:	85 c0                	test   %eax,%eax
    7013:	74 37                	je     704c <mbedtls_rsa_self_test+0x4bc>
    7015:	48 8d 3d 86 14 01 00 	lea    0x11486(%rip),%rdi        # 184a2 <bits+0x422>
    701c:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    7022:	e8 f9 c1 ff ff       	callq  3220 <puts@plt>
    7027:	e9 d6 fb ff ff       	jmpq   6c02 <mbedtls_rsa_self_test+0x72>
    702c:	0f 1f 40 00          	nopl   0x0(%rax)
    7030:	48 8d 3d 6b 14 01 00 	lea    0x1146b(%rip),%rdi        # 184a2 <bits+0x422>
    7037:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    703d:	e8 de c1 ff ff       	callq  3220 <puts@plt>
    7042:	e9 ab fb ff ff       	jmpq   6bf2 <mbedtls_rsa_self_test+0x62>
    7047:	e8 34 c2 ff ff       	callq  3280 <__stack_chk_fail@plt>
    704c:	41 54                	push   %r12
    704e:	b9 02 00 00 00       	mov    $0x2,%ecx
    7053:	31 d2                	xor    %edx,%edx
    7055:	4d 89 f1             	mov    %r14,%r9
    7058:	53                   	push   %rbx
    7059:	41 b8 14 00 00 00    	mov    $0x14,%r8d
    705f:	48 8d 35 da cd ff ff 	lea    -0x3226(%rip),%rsi        # 3e40 <myrand>
    7066:	48 89 ef             	mov    %rbp,%rdi
    7069:	e8 c2 f4 ff ff       	callq  6530 <mbedtls_rsa_pkcs1_sign>
    706e:	5a                   	pop    %rdx
    706f:	59                   	pop    %rcx
    7070:	85 c0                	test   %eax,%eax
    7072:	75 bc                	jne    7030 <mbedtls_rsa_self_test+0x4a0>
    7074:	48 8d 35 71 13 01 00 	lea    0x11371(%rip),%rsi        # 183ec <bits+0x36c>
    707b:	bf 01 00 00 00       	mov    $0x1,%edi
    7080:	31 c0                	xor    %eax,%eax
    7082:	e8 c9 c2 ff ff       	callq  3350 <__printf_chk@plt>
    7087:	49 89 d8             	mov    %rbx,%r8
    708a:	4c 89 f1             	mov    %r14,%rcx
    708d:	ba 14 00 00 00       	mov    $0x14,%edx
    7092:	be 02 00 00 00       	mov    $0x2,%esi
    7097:	48 89 ef             	mov    %rbp,%rdi
    709a:	e8 11 f9 ff ff       	callq  69b0 <mbedtls_rsa_pkcs1_verify>
    709f:	41 89 c4             	mov    %eax,%r12d
    70a2:	85 c0                	test   %eax,%eax
    70a4:	75 8a                	jne    7030 <mbedtls_rsa_self_test+0x4a0>
    70a6:	48 8d 3d 21 13 01 00 	lea    0x11321(%rip),%rdi        # 183ce <bits+0x34e>
    70ad:	e8 6e c1 ff ff       	callq  3220 <puts@plt>
    70b2:	bf 0a 00 00 00       	mov    $0xa,%edi
    70b7:	e8 54 c1 ff ff       	callq  3210 <putchar@plt>
    70bc:	e9 31 fb ff ff       	jmpq   6bf2 <mbedtls_rsa_self_test+0x62>
    70c1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    70c8:	00 00 00 
    70cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000070d0 <mbedtls_rsa_deduce_primes>:
    70d0:	f3 0f 1e fa          	endbr64 
    70d4:	41 57                	push   %r15
    70d6:	41 56                	push   %r14
    70d8:	41 55                	push   %r13
    70da:	41 54                	push   %r12
    70dc:	55                   	push   %rbp
    70dd:	53                   	push   %rbx
    70de:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    70e5:	66 0f 6f 05 73 13 01 	movdqa 0x11373(%rip),%xmm0        # 18460 <bits+0x3e0>
    70ec:	00 
    70ed:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    70f2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    70f9:	00 00 
    70fb:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    7102:	00 
    7103:	31 c0                	xor    %eax,%eax
    7105:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    710a:	66 0f 6f 05 5e 13 01 	movdqa 0x1135e(%rip),%xmm0        # 18470 <bits+0x3f0>
    7111:	00 
    7112:	b8 f1 fb ff ff       	mov    $0xfffffbf1,%eax
    7117:	c7 84 24 90 00 00 00 	movl   $0xefe9e5e3,0x90(%rsp)
    711e:	e3 e5 e9 ef 
    7122:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    7127:	66 0f 6f 05 51 13 01 	movdqa 0x11351(%rip),%xmm0        # 18480 <bits+0x400>
    712e:	00 
    712f:	66 89 84 24 94 00 00 	mov    %ax,0x94(%rsp)
    7136:	00 
    7137:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    713e:	00 
    713f:	48 85 c9             	test   %rcx,%rcx
    7142:	0f 84 30 01 00 00    	je     7278 <mbedtls_rsa_deduce_primes+0x1a8>
    7148:	4d 85 c0             	test   %r8,%r8
    714b:	0f 84 27 01 00 00    	je     7278 <mbedtls_rsa_deduce_primes+0x1a8>
    7151:	48 83 79 10 00       	cmpq   $0x0,0x10(%rcx)
    7156:	49 89 cd             	mov    %rcx,%r13
    7159:	0f 85 19 01 00 00    	jne    7278 <mbedtls_rsa_deduce_primes+0x1a8>
    715f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7164:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    7169:	0f 85 09 01 00 00    	jne    7278 <mbedtls_rsa_deduce_primes+0x1a8>
    716f:	48 89 f3             	mov    %rsi,%rbx
    7172:	31 f6                	xor    %esi,%esi
    7174:	49 89 fc             	mov    %rdi,%r12
    7177:	49 89 d7             	mov    %rdx,%r15
    717a:	e8 11 2a 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    717f:	85 c0                	test   %eax,%eax
    7181:	0f 8e f1 00 00 00    	jle    7278 <mbedtls_rsa_deduce_primes+0x1a8>
    7187:	be 01 00 00 00       	mov    $0x1,%esi
    718c:	4c 89 ff             	mov    %r15,%rdi
    718f:	e8 fc 29 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7194:	85 c0                	test   %eax,%eax
    7196:	0f 8e dc 00 00 00    	jle    7278 <mbedtls_rsa_deduce_primes+0x1a8>
    719c:	4c 89 e6             	mov    %r12,%rsi
    719f:	4c 89 ff             	mov    %r15,%rdi
    71a2:	e8 f9 28 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    71a7:	85 c0                	test   %eax,%eax
    71a9:	0f 89 c9 00 00 00    	jns    7278 <mbedtls_rsa_deduce_primes+0x1a8>
    71af:	be 01 00 00 00       	mov    $0x1,%esi
    71b4:	48 89 df             	mov    %rbx,%rdi
    71b7:	e8 d4 29 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    71bc:	85 c0                	test   %eax,%eax
    71be:	0f 8e b4 00 00 00    	jle    7278 <mbedtls_rsa_deduce_primes+0x1a8>
    71c4:	4c 89 e6             	mov    %r12,%rsi
    71c7:	48 89 df             	mov    %rbx,%rdi
    71ca:	e8 d1 28 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    71cf:	85 c0                	test   %eax,%eax
    71d1:	0f 89 a1 00 00 00    	jns    7278 <mbedtls_rsa_deduce_primes+0x1a8>
    71d7:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
    71dc:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    71e1:	48 89 ef             	mov    %rbp,%rdi
    71e4:	e8 b7 1f 00 00       	callq  91a0 <mbedtls_mpi_init>
    71e9:	4c 89 f7             	mov    %r14,%rdi
    71ec:	e8 af 1f 00 00       	callq  91a0 <mbedtls_mpi_init>
    71f1:	48 89 da             	mov    %rbx,%rdx
    71f4:	4c 89 fe             	mov    %r15,%rsi
    71f7:	4c 89 f7             	mov    %r14,%rdi
    71fa:	e8 e1 2d 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    71ff:	85 c0                	test   %eax,%eax
    7201:	74 45                	je     7248 <mbedtls_rsa_deduce_primes+0x178>
    7203:	48 89 ef             	mov    %rbp,%rdi
    7206:	89 44 24 08          	mov    %eax,0x8(%rsp)
    720a:	e8 b1 1f 00 00       	callq  91c0 <mbedtls_mpi_free>
    720f:	4c 89 f7             	mov    %r14,%rdi
    7212:	e8 a9 1f 00 00       	callq  91c0 <mbedtls_mpi_free>
    7217:	8b 44 24 08          	mov    0x8(%rsp),%eax
    721b:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    7222:	00 
    7223:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    722a:	00 00 
    722c:	0f 85 e8 01 00 00    	jne    741a <mbedtls_rsa_deduce_primes+0x34a>
    7232:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    7239:	5b                   	pop    %rbx
    723a:	5d                   	pop    %rbp
    723b:	41 5c                	pop    %r12
    723d:	41 5d                	pop    %r13
    723f:	41 5e                	pop    %r14
    7241:	41 5f                	pop    %r15
    7243:	c3                   	retq   
    7244:	0f 1f 40 00          	nopl   0x0(%rax)
    7248:	ba 01 00 00 00       	mov    $0x1,%edx
    724d:	4c 89 f6             	mov    %r14,%rsi
    7250:	4c 89 f7             	mov    %r14,%rdi
    7253:	e8 18 2d 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7258:	85 c0                	test   %eax,%eax
    725a:	75 a7                	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    725c:	4c 89 f7             	mov    %r14,%rdi
    725f:	e8 9c 24 00 00       	callq  9700 <mbedtls_mpi_lsb>
    7264:	66 89 44 24 16       	mov    %ax,0x16(%rsp)
    7269:	66 85 c0             	test   %ax,%ax
    726c:	75 12                	jne    7280 <mbedtls_rsa_deduce_primes+0x1b0>
    726e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    7273:	eb 8e                	jmp    7203 <mbedtls_rsa_deduce_primes+0x133>
    7275:	0f 1f 00             	nopl   (%rax)
    7278:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    727d:	eb 9c                	jmp    721b <mbedtls_rsa_deduce_primes+0x14b>
    727f:	90                   	nop
    7280:	0f b7 f0             	movzwl %ax,%esi
    7283:	4c 89 f7             	mov    %r14,%rdi
    7286:	e8 25 27 00 00       	callq  99b0 <mbedtls_mpi_shift_r>
    728b:	85 c0                	test   %eax,%eax
    728d:	0f 85 70 ff ff ff    	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    7293:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    7298:	45 31 ff             	xor    %r15d,%r15d
    729b:	48 8b 00             	mov    (%rax),%rax
    729e:	83 e0 07             	and    $0x7,%eax
    72a1:	48 83 f8 01          	cmp    $0x1,%rax
    72a5:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    72aa:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    72af:	41 0f 94 c7          	sete   %r15b
    72b3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    72b8:	48 89 ef             	mov    %rbp,%rdi
    72bb:	42 0f b6 34 38       	movzbl (%rax,%r15,1),%esi
    72c0:	e8 fb 22 00 00       	callq  95c0 <mbedtls_mpi_lset>
    72c5:	4c 89 e2             	mov    %r12,%rdx
    72c8:	48 89 ee             	mov    %rbp,%rsi
    72cb:	4c 89 ef             	mov    %r13,%rdi
    72ce:	e8 0d 4f 00 00       	callq  c1e0 <mbedtls_mpi_gcd>
    72d3:	85 c0                	test   %eax,%eax
    72d5:	0f 85 28 ff ff ff    	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    72db:	be 01 00 00 00       	mov    $0x1,%esi
    72e0:	4c 89 ef             	mov    %r13,%rdi
    72e3:	e8 a8 28 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    72e8:	85 c0                	test   %eax,%eax
    72ea:	74 14                	je     7300 <mbedtls_rsa_deduce_primes+0x230>
    72ec:	49 83 c7 01          	add    $0x1,%r15
    72f0:	66 41 83 ff 35       	cmp    $0x35,%r15w
    72f5:	76 bc                	jbe    72b3 <mbedtls_rsa_deduce_primes+0x1e3>
    72f7:	e9 72 ff ff ff       	jmpq   726e <mbedtls_rsa_deduce_primes+0x19e>
    72fc:	0f 1f 40 00          	nopl   0x0(%rax)
    7300:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    7305:	4c 89 e1             	mov    %r12,%rcx
    7308:	4c 89 f2             	mov    %r14,%rdx
    730b:	48 89 ee             	mov    %rbp,%rsi
    730e:	48 89 ef             	mov    %rbp,%rdi
    7311:	e8 ea 43 00 00       	callq  b700 <mbedtls_mpi_exp_mod>
    7316:	85 c0                	test   %eax,%eax
    7318:	0f 85 e5 fe ff ff    	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    731e:	bb 01 00 00 00       	mov    $0x1,%ebx
    7323:	eb 55                	jmp    737a <mbedtls_rsa_deduce_primes+0x2aa>
    7325:	0f 1f 00             	nopl   (%rax)
    7328:	ba 01 00 00 00       	mov    $0x1,%edx
    732d:	48 89 ee             	mov    %rbp,%rsi
    7330:	48 89 ef             	mov    %rbp,%rdi
    7333:	e8 38 2c 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7338:	85 c0                	test   %eax,%eax
    733a:	0f 85 c3 fe ff ff    	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    7340:	48 89 ea             	mov    %rbp,%rdx
    7343:	48 89 ee             	mov    %rbp,%rsi
    7346:	48 89 ef             	mov    %rbp,%rdi
    7349:	e8 92 2c 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    734e:	85 c0                	test   %eax,%eax
    7350:	0f 85 ad fe ff ff    	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    7356:	4c 89 e2             	mov    %r12,%rdx
    7359:	48 89 ee             	mov    %rbp,%rsi
    735c:	48 89 ef             	mov    %rbp,%rdi
    735f:	e8 ec 3c 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    7364:	85 c0                	test   %eax,%eax
    7366:	0f 85 97 fe ff ff    	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    736c:	83 c3 01             	add    $0x1,%ebx
    736f:	66 39 5c 24 16       	cmp    %bx,0x16(%rsp)
    7374:	0f 82 86 00 00 00    	jb     7400 <mbedtls_rsa_deduce_primes+0x330>
    737a:	be 01 00 00 00       	mov    $0x1,%esi
    737f:	48 89 ef             	mov    %rbp,%rdi
    7382:	e8 09 28 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7387:	85 c0                	test   %eax,%eax
    7389:	74 75                	je     7400 <mbedtls_rsa_deduce_primes+0x330>
    738b:	ba 01 00 00 00       	mov    $0x1,%edx
    7390:	48 89 ee             	mov    %rbp,%rsi
    7393:	48 89 ef             	mov    %rbp,%rdi
    7396:	e8 65 2b 00 00       	callq  9f00 <mbedtls_mpi_add_int>
    739b:	85 c0                	test   %eax,%eax
    739d:	0f 85 60 fe ff ff    	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    73a3:	4c 89 e2             	mov    %r12,%rdx
    73a6:	48 89 ee             	mov    %rbp,%rsi
    73a9:	4c 89 ef             	mov    %r13,%rdi
    73ac:	e8 2f 4e 00 00       	callq  c1e0 <mbedtls_mpi_gcd>
    73b1:	85 c0                	test   %eax,%eax
    73b3:	0f 85 4a fe ff ff    	jne    7203 <mbedtls_rsa_deduce_primes+0x133>
    73b9:	be 01 00 00 00       	mov    $0x1,%esi
    73be:	4c 89 ef             	mov    %r13,%rdi
    73c1:	e8 ca 27 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    73c6:	83 f8 01             	cmp    $0x1,%eax
    73c9:	0f 85 59 ff ff ff    	jne    7328 <mbedtls_rsa_deduce_primes+0x258>
    73cf:	4c 89 e6             	mov    %r12,%rsi
    73d2:	4c 89 ef             	mov    %r13,%rdi
    73d5:	e8 c6 26 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    73da:	83 f8 ff             	cmp    $0xffffffff,%eax
    73dd:	0f 85 45 ff ff ff    	jne    7328 <mbedtls_rsa_deduce_primes+0x258>
    73e3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    73e8:	4c 89 e9             	mov    %r13,%rcx
    73eb:	4c 89 e2             	mov    %r12,%rdx
    73ee:	31 f6                	xor    %esi,%esi
    73f0:	e8 0b 33 00 00       	callq  a700 <mbedtls_mpi_div_mpi>
    73f5:	e9 09 fe ff ff       	jmpq   7203 <mbedtls_rsa_deduce_primes+0x133>
    73fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7400:	be 01 00 00 00       	mov    $0x1,%esi
    7405:	48 89 ef             	mov    %rbp,%rdi
    7408:	e8 83 27 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    740d:	85 c0                	test   %eax,%eax
    740f:	0f 84 d7 fe ff ff    	je     72ec <mbedtls_rsa_deduce_primes+0x21c>
    7415:	e9 54 fe ff ff       	jmpq   726e <mbedtls_rsa_deduce_primes+0x19e>
    741a:	e8 61 be ff ff       	callq  3280 <__stack_chk_fail@plt>
    741f:	90                   	nop

0000000000007420 <mbedtls_rsa_deduce_private_exponent>:
    7420:	f3 0f 1e fa          	endbr64 
    7424:	41 57                	push   %r15
    7426:	41 56                	push   %r14
    7428:	41 55                	push   %r13
    742a:	41 54                	push   %r12
    742c:	55                   	push   %rbp
    742d:	53                   	push   %rbx
    742e:	48 83 ec 48          	sub    $0x48,%rsp
    7432:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7439:	00 00 
    743b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    7440:	31 c0                	xor    %eax,%eax
    7442:	48 85 c9             	test   %rcx,%rcx
    7445:	0f 84 3d 01 00 00    	je     7588 <mbedtls_rsa_deduce_private_exponent+0x168>
    744b:	49 89 fc             	mov    %rdi,%r12
    744e:	49 89 f7             	mov    %rsi,%r15
    7451:	48 89 cf             	mov    %rcx,%rdi
    7454:	31 f6                	xor    %esi,%esi
    7456:	49 89 d5             	mov    %rdx,%r13
    7459:	48 89 cd             	mov    %rcx,%rbp
    745c:	e8 2f 27 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7461:	85 c0                	test   %eax,%eax
    7463:	0f 85 1f 01 00 00    	jne    7588 <mbedtls_rsa_deduce_private_exponent+0x168>
    7469:	be 01 00 00 00       	mov    $0x1,%esi
    746e:	4c 89 e7             	mov    %r12,%rdi
    7471:	e8 1a 27 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7476:	85 c0                	test   %eax,%eax
    7478:	0f 8e 0a 01 00 00    	jle    7588 <mbedtls_rsa_deduce_private_exponent+0x168>
    747e:	be 01 00 00 00       	mov    $0x1,%esi
    7483:	4c 89 ff             	mov    %r15,%rdi
    7486:	e8 05 27 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    748b:	85 c0                	test   %eax,%eax
    748d:	0f 8e f5 00 00 00    	jle    7588 <mbedtls_rsa_deduce_private_exponent+0x168>
    7493:	31 f6                	xor    %esi,%esi
    7495:	4c 89 ef             	mov    %r13,%rdi
    7498:	e8 f3 26 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    749d:	85 c0                	test   %eax,%eax
    749f:	0f 84 e3 00 00 00    	je     7588 <mbedtls_rsa_deduce_private_exponent+0x168>
    74a5:	48 89 e3             	mov    %rsp,%rbx
    74a8:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    74ad:	48 89 df             	mov    %rbx,%rdi
    74b0:	e8 eb 1c 00 00       	callq  91a0 <mbedtls_mpi_init>
    74b5:	4c 89 f7             	mov    %r14,%rdi
    74b8:	e8 e3 1c 00 00       	callq  91a0 <mbedtls_mpi_init>
    74bd:	4c 89 e6             	mov    %r12,%rsi
    74c0:	ba 01 00 00 00       	mov    $0x1,%edx
    74c5:	48 89 df             	mov    %rbx,%rdi
    74c8:	e8 a3 2a 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    74cd:	41 89 c4             	mov    %eax,%r12d
    74d0:	85 c0                	test   %eax,%eax
    74d2:	74 3c                	je     7510 <mbedtls_rsa_deduce_private_exponent+0xf0>
    74d4:	48 89 df             	mov    %rbx,%rdi
    74d7:	e8 e4 1c 00 00       	callq  91c0 <mbedtls_mpi_free>
    74dc:	4c 89 f7             	mov    %r14,%rdi
    74df:	e8 dc 1c 00 00       	callq  91c0 <mbedtls_mpi_free>
    74e4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    74e9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    74f0:	00 00 
    74f2:	0f 85 9b 00 00 00    	jne    7593 <mbedtls_rsa_deduce_private_exponent+0x173>
    74f8:	48 83 c4 48          	add    $0x48,%rsp
    74fc:	44 89 e0             	mov    %r12d,%eax
    74ff:	5b                   	pop    %rbx
    7500:	5d                   	pop    %rbp
    7501:	41 5c                	pop    %r12
    7503:	41 5d                	pop    %r13
    7505:	41 5e                	pop    %r14
    7507:	41 5f                	pop    %r15
    7509:	c3                   	retq   
    750a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7510:	ba 01 00 00 00       	mov    $0x1,%edx
    7515:	4c 89 fe             	mov    %r15,%rsi
    7518:	4c 89 f7             	mov    %r14,%rdi
    751b:	e8 50 2a 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7520:	41 89 c4             	mov    %eax,%r12d
    7523:	85 c0                	test   %eax,%eax
    7525:	75 ad                	jne    74d4 <mbedtls_rsa_deduce_private_exponent+0xb4>
    7527:	4c 89 f2             	mov    %r14,%rdx
    752a:	48 89 de             	mov    %rbx,%rsi
    752d:	48 89 ef             	mov    %rbp,%rdi
    7530:	e8 ab 4c 00 00       	callq  c1e0 <mbedtls_mpi_gcd>
    7535:	41 89 c4             	mov    %eax,%r12d
    7538:	85 c0                	test   %eax,%eax
    753a:	75 98                	jne    74d4 <mbedtls_rsa_deduce_private_exponent+0xb4>
    753c:	4c 89 f2             	mov    %r14,%rdx
    753f:	48 89 de             	mov    %rbx,%rsi
    7542:	48 89 df             	mov    %rbx,%rdi
    7545:	e8 96 2a 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    754a:	41 89 c4             	mov    %eax,%r12d
    754d:	85 c0                	test   %eax,%eax
    754f:	75 83                	jne    74d4 <mbedtls_rsa_deduce_private_exponent+0xb4>
    7551:	48 89 e9             	mov    %rbp,%rcx
    7554:	48 89 da             	mov    %rbx,%rdx
    7557:	31 f6                	xor    %esi,%esi
    7559:	48 89 df             	mov    %rbx,%rdi
    755c:	e8 9f 31 00 00       	callq  a700 <mbedtls_mpi_div_mpi>
    7561:	41 89 c4             	mov    %eax,%r12d
    7564:	85 c0                	test   %eax,%eax
    7566:	0f 85 68 ff ff ff    	jne    74d4 <mbedtls_rsa_deduce_private_exponent+0xb4>
    756c:	48 89 da             	mov    %rbx,%rdx
    756f:	4c 89 ee             	mov    %r13,%rsi
    7572:	48 89 ef             	mov    %rbp,%rdi
    7575:	e8 06 56 00 00       	callq  cb80 <mbedtls_mpi_inv_mod>
    757a:	41 89 c4             	mov    %eax,%r12d
    757d:	e9 52 ff ff ff       	jmpq   74d4 <mbedtls_rsa_deduce_private_exponent+0xb4>
    7582:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7588:	41 bc fc ff ff ff    	mov    $0xfffffffc,%r12d
    758e:	e9 51 ff ff ff       	jmpq   74e4 <mbedtls_rsa_deduce_private_exponent+0xc4>
    7593:	e8 e8 bc ff ff       	callq  3280 <__stack_chk_fail@plt>
    7598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    759f:	00 

00000000000075a0 <mbedtls_rsa_deduce_crt>:
    75a0:	f3 0f 1e fa          	endbr64 
    75a4:	41 57                	push   %r15
    75a6:	49 89 f7             	mov    %rsi,%r15
    75a9:	41 56                	push   %r14
    75ab:	41 55                	push   %r13
    75ad:	49 89 fd             	mov    %rdi,%r13
    75b0:	41 54                	push   %r12
    75b2:	4d 89 c4             	mov    %r8,%r12
    75b5:	55                   	push   %rbp
    75b6:	48 89 cd             	mov    %rcx,%rbp
    75b9:	53                   	push   %rbx
    75ba:	4c 89 cb             	mov    %r9,%rbx
    75bd:	48 83 ec 38          	sub    $0x38,%rsp
    75c1:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    75c6:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    75cb:	4c 89 f7             	mov    %r14,%rdi
    75ce:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    75d5:	00 00 
    75d7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    75dc:	31 c0                	xor    %eax,%eax
    75de:	e8 bd 1b 00 00       	callq  91a0 <mbedtls_mpi_init>
    75e3:	48 85 ed             	test   %rbp,%rbp
    75e6:	74 5c                	je     7644 <mbedtls_rsa_deduce_crt+0xa4>
    75e8:	ba 01 00 00 00       	mov    $0x1,%edx
    75ed:	4c 89 ee             	mov    %r13,%rsi
    75f0:	4c 89 f7             	mov    %r14,%rdi
    75f3:	e8 78 29 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    75f8:	85 c0                	test   %eax,%eax
    75fa:	74 34                	je     7630 <mbedtls_rsa_deduce_crt+0x90>
    75fc:	4c 89 f7             	mov    %r14,%rdi
    75ff:	89 44 24 08          	mov    %eax,0x8(%rsp)
    7603:	e8 b8 1b 00 00       	callq  91c0 <mbedtls_mpi_free>
    7608:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    760d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7614:	00 00 
    7616:	8b 44 24 08          	mov    0x8(%rsp),%eax
    761a:	75 6f                	jne    768b <mbedtls_rsa_deduce_crt+0xeb>
    761c:	48 83 c4 38          	add    $0x38,%rsp
    7620:	5b                   	pop    %rbx
    7621:	5d                   	pop    %rbp
    7622:	41 5c                	pop    %r12
    7624:	41 5d                	pop    %r13
    7626:	41 5e                	pop    %r14
    7628:	41 5f                	pop    %r15
    762a:	c3                   	retq   
    762b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7630:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7635:	4c 89 f2             	mov    %r14,%rdx
    7638:	48 89 ef             	mov    %rbp,%rdi
    763b:	e8 10 3a 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    7640:	85 c0                	test   %eax,%eax
    7642:	75 b8                	jne    75fc <mbedtls_rsa_deduce_crt+0x5c>
    7644:	4d 85 e4             	test   %r12,%r12
    7647:	74 28                	je     7671 <mbedtls_rsa_deduce_crt+0xd1>
    7649:	ba 01 00 00 00       	mov    $0x1,%edx
    764e:	4c 89 fe             	mov    %r15,%rsi
    7651:	4c 89 f7             	mov    %r14,%rdi
    7654:	e8 17 29 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7659:	85 c0                	test   %eax,%eax
    765b:	75 9f                	jne    75fc <mbedtls_rsa_deduce_crt+0x5c>
    765d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7662:	4c 89 f2             	mov    %r14,%rdx
    7665:	4c 89 e7             	mov    %r12,%rdi
    7668:	e8 e3 39 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    766d:	85 c0                	test   %eax,%eax
    766f:	75 8b                	jne    75fc <mbedtls_rsa_deduce_crt+0x5c>
    7671:	31 c0                	xor    %eax,%eax
    7673:	48 85 db             	test   %rbx,%rbx
    7676:	74 84                	je     75fc <mbedtls_rsa_deduce_crt+0x5c>
    7678:	4c 89 ea             	mov    %r13,%rdx
    767b:	4c 89 fe             	mov    %r15,%rsi
    767e:	48 89 df             	mov    %rbx,%rdi
    7681:	e8 fa 54 00 00       	callq  cb80 <mbedtls_mpi_inv_mod>
    7686:	e9 71 ff ff ff       	jmpq   75fc <mbedtls_rsa_deduce_crt+0x5c>
    768b:	e8 f0 bb ff ff       	callq  3280 <__stack_chk_fail@plt>

0000000000007690 <mbedtls_rsa_validate_params>:
    7690:	f3 0f 1e fa          	endbr64 
    7694:	41 57                	push   %r15
    7696:	41 56                	push   %r14
    7698:	41 55                	push   %r13
    769a:	49 89 fd             	mov    %rdi,%r13
    769d:	41 54                	push   %r12
    769f:	49 89 d4             	mov    %rdx,%r12
    76a2:	55                   	push   %rbp
    76a3:	48 89 f5             	mov    %rsi,%rbp
    76a6:	53                   	push   %rbx
    76a7:	4c 89 cb             	mov    %r9,%rbx
    76aa:	48 83 ec 68          	sub    $0x68,%rsp
    76ae:	4c 89 04 24          	mov    %r8,(%rsp)
    76b2:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    76b7:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
    76bc:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
    76c3:	00 
    76c4:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    76c9:	4c 89 f7             	mov    %r14,%rdi
    76cc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    76d1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    76d8:	00 00 
    76da:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    76df:	31 c0                	xor    %eax,%eax
    76e1:	e8 ba 1a 00 00       	callq  91a0 <mbedtls_mpi_init>
    76e6:	4c 89 ff             	mov    %r15,%rdi
    76e9:	e8 b2 1a 00 00       	callq  91a0 <mbedtls_mpi_init>
    76ee:	48 85 db             	test   %rbx,%rbx
    76f1:	41 0f 95 c3          	setne  %r11b
    76f5:	48 85 ed             	test   %rbp,%rbp
    76f8:	41 0f 95 c0          	setne  %r8b
    76fc:	45 84 db             	test   %r11b,%r11b
    76ff:	74 09                	je     770a <mbedtls_rsa_validate_params+0x7a>
    7701:	45 84 c0             	test   %r8b,%r8b
    7704:	0f 85 06 01 00 00    	jne    7810 <mbedtls_rsa_validate_params+0x180>
    770a:	4d 85 e4             	test   %r12,%r12
    770d:	41 0f 95 c2          	setne  %r10b
    7711:	45 84 db             	test   %r11b,%r11b
    7714:	74 09                	je     771f <mbedtls_rsa_validate_params+0x8f>
    7716:	45 84 d2             	test   %r10b,%r10b
    7719:	0f 85 29 01 00 00    	jne    7848 <mbedtls_rsa_validate_params+0x1b8>
    771f:	45 20 d0             	and    %r10b,%r8b
    7722:	44 88 44 24 10       	mov    %r8b,0x10(%rsp)
    7727:	74 47                	je     7770 <mbedtls_rsa_validate_params+0xe0>
    7729:	4d 85 ed             	test   %r13,%r13
    772c:	0f 84 ae 01 00 00    	je     78e0 <mbedtls_rsa_validate_params+0x250>
    7732:	4c 89 e2             	mov    %r12,%rdx
    7735:	48 89 ee             	mov    %rbp,%rsi
    7738:	4c 89 f7             	mov    %r14,%rdi
    773b:	e8 a0 28 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    7740:	89 c3                	mov    %eax,%ebx
    7742:	85 c0                	test   %eax,%eax
    7744:	0f 84 46 01 00 00    	je     7890 <mbedtls_rsa_validate_params+0x200>
    774a:	4c 89 f7             	mov    %r14,%rdi
    774d:	e8 6e 1a 00 00       	callq  91c0 <mbedtls_mpi_free>
    7752:	4c 89 ff             	mov    %r15,%rdi
    7755:	e8 66 1a 00 00       	callq  91c0 <mbedtls_mpi_free>
    775a:	81 fb 00 be ff ff    	cmp    $0xffffbe00,%ebx
    7760:	0f 84 7f 00 00 00    	je     77e5 <mbedtls_rsa_validate_params+0x155>
    7766:	81 eb 00 42 00 00    	sub    $0x4200,%ebx
    776c:	eb 77                	jmp    77e5 <mbedtls_rsa_validate_params+0x155>
    776e:	66 90                	xchg   %ax,%ax
    7770:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7775:	0f 95 c2             	setne  %dl
    7778:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    777e:	0f 95 c0             	setne  %al
    7781:	84 c2                	test   %al,%dl
    7783:	0f 84 47 01 00 00    	je     78d0 <mbedtls_rsa_validate_params+0x240>
    7789:	4d 85 ed             	test   %r13,%r13
    778c:	0f 84 3e 01 00 00    	je     78d0 <mbedtls_rsa_validate_params+0x240>
    7792:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    7797:	be 01 00 00 00       	mov    $0x1,%esi
    779c:	48 89 df             	mov    %rbx,%rdi
    779f:	e8 ec 23 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    77a4:	85 c0                	test   %eax,%eax
    77a6:	7e 28                	jle    77d0 <mbedtls_rsa_validate_params+0x140>
    77a8:	48 8b 3c 24          	mov    (%rsp),%rdi
    77ac:	be 01 00 00 00       	mov    $0x1,%esi
    77b1:	e8 da 23 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    77b6:	85 c0                	test   %eax,%eax
    77b8:	7e 16                	jle    77d0 <mbedtls_rsa_validate_params+0x140>
    77ba:	4c 89 ee             	mov    %r13,%rsi
    77bd:	48 89 df             	mov    %rbx,%rdi
    77c0:	e8 db 22 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    77c5:	85 c0                	test   %eax,%eax
    77c7:	0f 88 4b 02 00 00    	js     7a18 <mbedtls_rsa_validate_params+0x388>
    77cd:	0f 1f 00             	nopl   (%rax)
    77d0:	bb 00 be ff ff       	mov    $0xffffbe00,%ebx
    77d5:	4c 89 f7             	mov    %r14,%rdi
    77d8:	e8 e3 19 00 00       	callq  91c0 <mbedtls_mpi_free>
    77dd:	4c 89 ff             	mov    %r15,%rdi
    77e0:	e8 db 19 00 00       	callq  91c0 <mbedtls_mpi_free>
    77e5:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    77ea:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    77f1:	00 00 
    77f3:	0f 85 45 02 00 00    	jne    7a3e <mbedtls_rsa_validate_params+0x3ae>
    77f9:	48 83 c4 68          	add    $0x68,%rsp
    77fd:	89 d8                	mov    %ebx,%eax
    77ff:	5b                   	pop    %rbx
    7800:	5d                   	pop    %rbp
    7801:	41 5c                	pop    %r12
    7803:	41 5d                	pop    %r13
    7805:	41 5e                	pop    %r14
    7807:	41 5f                	pop    %r15
    7809:	c3                   	retq   
    780a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7810:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    7815:	48 89 da             	mov    %rbx,%rdx
    7818:	be 32 00 00 00       	mov    $0x32,%esi
    781d:	48 89 ef             	mov    %rbp,%rdi
    7820:	44 88 44 24 1f       	mov    %r8b,0x1f(%rsp)
    7825:	44 88 5c 24 1e       	mov    %r11b,0x1e(%rsp)
    782a:	e8 b1 5b 00 00       	callq  d3e0 <mbedtls_mpi_is_prime_ext>
    782f:	44 0f b6 5c 24 1e    	movzbl 0x1e(%rsp),%r11d
    7835:	44 0f b6 44 24 1f    	movzbl 0x1f(%rsp),%r8d
    783b:	85 c0                	test   %eax,%eax
    783d:	0f 84 c7 fe ff ff    	je     770a <mbedtls_rsa_validate_params+0x7a>
    7843:	eb 8b                	jmp    77d0 <mbedtls_rsa_validate_params+0x140>
    7845:	0f 1f 00             	nopl   (%rax)
    7848:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    784d:	48 89 da             	mov    %rbx,%rdx
    7850:	be 32 00 00 00       	mov    $0x32,%esi
    7855:	4c 89 e7             	mov    %r12,%rdi
    7858:	44 88 54 24 1f       	mov    %r10b,0x1f(%rsp)
    785d:	44 88 44 24 1e       	mov    %r8b,0x1e(%rsp)
    7862:	e8 79 5b 00 00       	callq  d3e0 <mbedtls_mpi_is_prime_ext>
    7867:	44 0f b6 44 24 1e    	movzbl 0x1e(%rsp),%r8d
    786d:	44 0f b6 54 24 1f    	movzbl 0x1f(%rsp),%r10d
    7873:	85 c0                	test   %eax,%eax
    7875:	0f 85 55 ff ff ff    	jne    77d0 <mbedtls_rsa_validate_params+0x140>
    787b:	45 20 d0             	and    %r10b,%r8b
    787e:	44 88 44 24 10       	mov    %r8b,0x10(%rsp)
    7883:	0f 85 a0 fe ff ff    	jne    7729 <mbedtls_rsa_validate_params+0x99>
    7889:	e9 e2 fe ff ff       	jmpq   7770 <mbedtls_rsa_validate_params+0xe0>
    788e:	66 90                	xchg   %ax,%ax
    7890:	be 01 00 00 00       	mov    $0x1,%esi
    7895:	4c 89 ef             	mov    %r13,%rdi
    7898:	e8 f3 22 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    789d:	85 c0                	test   %eax,%eax
    789f:	0f 8e 2b ff ff ff    	jle    77d0 <mbedtls_rsa_validate_params+0x140>
    78a5:	4c 89 ee             	mov    %r13,%rsi
    78a8:	4c 89 f7             	mov    %r14,%rdi
    78ab:	e8 f0 21 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    78b0:	85 c0                	test   %eax,%eax
    78b2:	0f 85 18 ff ff ff    	jne    77d0 <mbedtls_rsa_validate_params+0x140>
    78b8:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    78bd:	74 11                	je     78d0 <mbedtls_rsa_validate_params+0x240>
    78bf:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    78c5:	0f 85 c7 fe ff ff    	jne    7792 <mbedtls_rsa_validate_params+0x102>
    78cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    78d0:	31 db                	xor    %ebx,%ebx
    78d2:	e9 fe fe ff ff       	jmpq   77d5 <mbedtls_rsa_validate_params+0x145>
    78d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    78de:	00 00 
    78e0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    78e5:	74 e9                	je     78d0 <mbedtls_rsa_validate_params+0x240>
    78e7:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    78ed:	74 e1                	je     78d0 <mbedtls_rsa_validate_params+0x240>
    78ef:	be 01 00 00 00       	mov    $0x1,%esi
    78f4:	48 89 ef             	mov    %rbp,%rdi
    78f7:	e8 94 22 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    78fc:	85 c0                	test   %eax,%eax
    78fe:	0f 8e cc fe ff ff    	jle    77d0 <mbedtls_rsa_validate_params+0x140>
    7904:	be 01 00 00 00       	mov    $0x1,%esi
    7909:	4c 89 e7             	mov    %r12,%rdi
    790c:	e8 7f 22 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7911:	85 c0                	test   %eax,%eax
    7913:	0f 8e b7 fe ff ff    	jle    77d0 <mbedtls_rsa_validate_params+0x140>
    7919:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    791e:	48 8b 14 24          	mov    (%rsp),%rdx
    7922:	4c 89 f7             	mov    %r14,%rdi
    7925:	4c 89 ee             	mov    %r13,%rsi
    7928:	e8 b3 26 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    792d:	89 c3                	mov    %eax,%ebx
    792f:	85 c0                	test   %eax,%eax
    7931:	0f 85 13 fe ff ff    	jne    774a <mbedtls_rsa_validate_params+0xba>
    7937:	ba 01 00 00 00       	mov    $0x1,%edx
    793c:	4c 89 f6             	mov    %r14,%rsi
    793f:	4c 89 f7             	mov    %r14,%rdi
    7942:	e8 29 26 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7947:	89 c3                	mov    %eax,%ebx
    7949:	85 c0                	test   %eax,%eax
    794b:	0f 85 f9 fd ff ff    	jne    774a <mbedtls_rsa_validate_params+0xba>
    7951:	ba 01 00 00 00       	mov    $0x1,%edx
    7956:	48 89 ee             	mov    %rbp,%rsi
    7959:	4c 89 ff             	mov    %r15,%rdi
    795c:	e8 0f 26 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7961:	89 c3                	mov    %eax,%ebx
    7963:	85 c0                	test   %eax,%eax
    7965:	0f 85 df fd ff ff    	jne    774a <mbedtls_rsa_validate_params+0xba>
    796b:	4c 89 fa             	mov    %r15,%rdx
    796e:	4c 89 f6             	mov    %r14,%rsi
    7971:	4c 89 f7             	mov    %r14,%rdi
    7974:	e8 d7 36 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    7979:	89 c3                	mov    %eax,%ebx
    797b:	85 c0                	test   %eax,%eax
    797d:	0f 85 c7 fd ff ff    	jne    774a <mbedtls_rsa_validate_params+0xba>
    7983:	31 f6                	xor    %esi,%esi
    7985:	4c 89 f7             	mov    %r14,%rdi
    7988:	e8 03 22 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    798d:	85 c0                	test   %eax,%eax
    798f:	0f 85 3b fe ff ff    	jne    77d0 <mbedtls_rsa_validate_params+0x140>
    7995:	48 8b 14 24          	mov    (%rsp),%rdx
    7999:	4c 89 ee             	mov    %r13,%rsi
    799c:	4c 89 f7             	mov    %r14,%rdi
    799f:	e8 3c 26 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    79a4:	89 c3                	mov    %eax,%ebx
    79a6:	85 c0                	test   %eax,%eax
    79a8:	0f 85 9c fd ff ff    	jne    774a <mbedtls_rsa_validate_params+0xba>
    79ae:	ba 01 00 00 00       	mov    $0x1,%edx
    79b3:	4c 89 f6             	mov    %r14,%rsi
    79b6:	4c 89 f7             	mov    %r14,%rdi
    79b9:	e8 b2 25 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    79be:	89 c3                	mov    %eax,%ebx
    79c0:	85 c0                	test   %eax,%eax
    79c2:	0f 85 82 fd ff ff    	jne    774a <mbedtls_rsa_validate_params+0xba>
    79c8:	ba 01 00 00 00       	mov    $0x1,%edx
    79cd:	4c 89 e6             	mov    %r12,%rsi
    79d0:	4c 89 ff             	mov    %r15,%rdi
    79d3:	e8 98 25 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    79d8:	89 c3                	mov    %eax,%ebx
    79da:	85 c0                	test   %eax,%eax
    79dc:	0f 85 68 fd ff ff    	jne    774a <mbedtls_rsa_validate_params+0xba>
    79e2:	4c 89 fa             	mov    %r15,%rdx
    79e5:	4c 89 f6             	mov    %r14,%rsi
    79e8:	4c 89 f7             	mov    %r14,%rdi
    79eb:	e8 60 36 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    79f0:	89 c3                	mov    %eax,%ebx
    79f2:	85 c0                	test   %eax,%eax
    79f4:	0f 85 50 fd ff ff    	jne    774a <mbedtls_rsa_validate_params+0xba>
    79fa:	31 f6                	xor    %esi,%esi
    79fc:	4c 89 f7             	mov    %r14,%rdi
    79ff:	e8 8c 21 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7a04:	85 c0                	test   %eax,%eax
    7a06:	0f 85 c4 fd ff ff    	jne    77d0 <mbedtls_rsa_validate_params+0x140>
    7a0c:	31 db                	xor    %ebx,%ebx
    7a0e:	e9 c2 fd ff ff       	jmpq   77d5 <mbedtls_rsa_validate_params+0x145>
    7a13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7a18:	48 8b 3c 24          	mov    (%rsp),%rdi
    7a1c:	4c 89 ee             	mov    %r13,%rsi
    7a1f:	e8 7c 20 00 00       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    7a24:	85 c0                	test   %eax,%eax
    7a26:	0f 89 a4 fd ff ff    	jns    77d0 <mbedtls_rsa_validate_params+0x140>
    7a2c:	80 7c 24 10 00       	cmpb   $0x0,0x10(%rsp)
    7a31:	0f 85 b8 fe ff ff    	jne    78ef <mbedtls_rsa_validate_params+0x25f>
    7a37:	31 db                	xor    %ebx,%ebx
    7a39:	e9 97 fd ff ff       	jmpq   77d5 <mbedtls_rsa_validate_params+0x145>
    7a3e:	e8 3d b8 ff ff       	callq  3280 <__stack_chk_fail@plt>
    7a43:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7a4a:	00 00 00 00 
    7a4e:	66 90                	xchg   %ax,%ax

0000000000007a50 <mbedtls_rsa_validate_crt>:
    7a50:	f3 0f 1e fa          	endbr64 
    7a54:	41 57                	push   %r15
    7a56:	41 56                	push   %r14
    7a58:	49 89 f6             	mov    %rsi,%r14
    7a5b:	41 55                	push   %r13
    7a5d:	41 54                	push   %r12
    7a5f:	49 89 fc             	mov    %rdi,%r12
    7a62:	55                   	push   %rbp
    7a63:	48 89 cd             	mov    %rcx,%rbp
    7a66:	53                   	push   %rbx
    7a67:	4c 89 c3             	mov    %r8,%rbx
    7a6a:	48 83 ec 58          	sub    $0x58,%rsp
    7a6e:	48 89 14 24          	mov    %rdx,(%rsp)
    7a72:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    7a77:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
    7a7c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    7a81:	4c 89 ff             	mov    %r15,%rdi
    7a84:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7a8b:	00 00 
    7a8d:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    7a92:	31 c0                	xor    %eax,%eax
    7a94:	e8 07 17 00 00       	callq  91a0 <mbedtls_mpi_init>
    7a99:	4c 89 ef             	mov    %r13,%rdi
    7a9c:	e8 ff 16 00 00       	callq  91a0 <mbedtls_mpi_init>
    7aa1:	48 85 ed             	test   %rbp,%rbp
    7aa4:	0f 84 86 00 00 00    	je     7b30 <mbedtls_rsa_validate_crt+0xe0>
    7aaa:	4d 85 e4             	test   %r12,%r12
    7aad:	0f 84 fd 00 00 00    	je     7bb0 <mbedtls_rsa_validate_crt+0x160>
    7ab3:	ba 01 00 00 00       	mov    $0x1,%edx
    7ab8:	4c 89 e6             	mov    %r12,%rsi
    7abb:	4c 89 ff             	mov    %r15,%rdi
    7abe:	e8 ad 24 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7ac3:	85 c0                	test   %eax,%eax
    7ac5:	75 19                	jne    7ae0 <mbedtls_rsa_validate_crt+0x90>
    7ac7:	48 8b 14 24          	mov    (%rsp),%rdx
    7acb:	48 89 ee             	mov    %rbp,%rsi
    7ace:	4c 89 ef             	mov    %r13,%rdi
    7ad1:	e8 1a 24 00 00       	callq  9ef0 <mbedtls_mpi_sub_mpi>
    7ad6:	85 c0                	test   %eax,%eax
    7ad8:	74 2e                	je     7b08 <mbedtls_rsa_validate_crt+0xb8>
    7ada:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ae0:	3d 00 be ff ff       	cmp    $0xffffbe00,%eax
    7ae5:	0f 84 05 01 00 00    	je     7bf0 <mbedtls_rsa_validate_crt+0x1a0>
    7aeb:	3d 80 bf ff ff       	cmp    $0xffffbf80,%eax
    7af0:	0f 84 ba 00 00 00    	je     7bb0 <mbedtls_rsa_validate_crt+0x160>
    7af6:	44 8d a0 00 be ff ff 	lea    -0x4200(%rax),%r12d
    7afd:	e9 b4 00 00 00       	jmpq   7bb6 <mbedtls_rsa_validate_crt+0x166>
    7b02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7b08:	4c 89 fa             	mov    %r15,%rdx
    7b0b:	4c 89 ee             	mov    %r13,%rsi
    7b0e:	4c 89 ef             	mov    %r13,%rdi
    7b11:	e8 3a 35 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    7b16:	85 c0                	test   %eax,%eax
    7b18:	75 c6                	jne    7ae0 <mbedtls_rsa_validate_crt+0x90>
    7b1a:	31 f6                	xor    %esi,%esi
    7b1c:	4c 89 ef             	mov    %r13,%rdi
    7b1f:	e8 6c 20 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7b24:	85 c0                	test   %eax,%eax
    7b26:	0f 85 c4 00 00 00    	jne    7bf0 <mbedtls_rsa_validate_crt+0x1a0>
    7b2c:	0f 1f 40 00          	nopl   0x0(%rax)
    7b30:	48 85 db             	test   %rbx,%rbx
    7b33:	74 5b                	je     7b90 <mbedtls_rsa_validate_crt+0x140>
    7b35:	4d 85 f6             	test   %r14,%r14
    7b38:	74 76                	je     7bb0 <mbedtls_rsa_validate_crt+0x160>
    7b3a:	ba 01 00 00 00       	mov    $0x1,%edx
    7b3f:	4c 89 f6             	mov    %r14,%rsi
    7b42:	4c 89 ff             	mov    %r15,%rdi
    7b45:	e8 26 24 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7b4a:	85 c0                	test   %eax,%eax
    7b4c:	75 92                	jne    7ae0 <mbedtls_rsa_validate_crt+0x90>
    7b4e:	48 8b 14 24          	mov    (%rsp),%rdx
    7b52:	48 89 de             	mov    %rbx,%rsi
    7b55:	4c 89 ef             	mov    %r13,%rdi
    7b58:	e8 93 23 00 00       	callq  9ef0 <mbedtls_mpi_sub_mpi>
    7b5d:	85 c0                	test   %eax,%eax
    7b5f:	0f 85 7b ff ff ff    	jne    7ae0 <mbedtls_rsa_validate_crt+0x90>
    7b65:	4c 89 fa             	mov    %r15,%rdx
    7b68:	4c 89 ee             	mov    %r13,%rsi
    7b6b:	4c 89 ef             	mov    %r13,%rdi
    7b6e:	e8 dd 34 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    7b73:	85 c0                	test   %eax,%eax
    7b75:	0f 85 65 ff ff ff    	jne    7ae0 <mbedtls_rsa_validate_crt+0x90>
    7b7b:	31 f6                	xor    %esi,%esi
    7b7d:	4c 89 ef             	mov    %r13,%rdi
    7b80:	e8 0b 20 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7b85:	85 c0                	test   %eax,%eax
    7b87:	75 67                	jne    7bf0 <mbedtls_rsa_validate_crt+0x1a0>
    7b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7b90:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    7b96:	0f 84 bc 00 00 00    	je     7c58 <mbedtls_rsa_validate_crt+0x208>
    7b9c:	4d 85 e4             	test   %r12,%r12
    7b9f:	74 0f                	je     7bb0 <mbedtls_rsa_validate_crt+0x160>
    7ba1:	4d 85 f6             	test   %r14,%r14
    7ba4:	75 5a                	jne    7c00 <mbedtls_rsa_validate_crt+0x1b0>
    7ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7bad:	00 00 00 
    7bb0:	41 bc 80 bf ff ff    	mov    $0xffffbf80,%r12d
    7bb6:	4c 89 ff             	mov    %r15,%rdi
    7bb9:	e8 02 16 00 00       	callq  91c0 <mbedtls_mpi_free>
    7bbe:	4c 89 ef             	mov    %r13,%rdi
    7bc1:	e8 fa 15 00 00       	callq  91c0 <mbedtls_mpi_free>
    7bc6:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    7bcb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7bd2:	00 00 
    7bd4:	0f 85 86 00 00 00    	jne    7c60 <mbedtls_rsa_validate_crt+0x210>
    7bda:	48 83 c4 58          	add    $0x58,%rsp
    7bde:	44 89 e0             	mov    %r12d,%eax
    7be1:	5b                   	pop    %rbx
    7be2:	5d                   	pop    %rbp
    7be3:	41 5c                	pop    %r12
    7be5:	41 5d                	pop    %r13
    7be7:	41 5e                	pop    %r14
    7be9:	41 5f                	pop    %r15
    7beb:	c3                   	retq   
    7bec:	0f 1f 40 00          	nopl   0x0(%rax)
    7bf0:	41 bc 00 be ff ff    	mov    $0xffffbe00,%r12d
    7bf6:	eb be                	jmp    7bb6 <mbedtls_rsa_validate_crt+0x166>
    7bf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7bff:	00 
    7c00:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7c05:	4c 89 f2             	mov    %r14,%rdx
    7c08:	4c 89 ff             	mov    %r15,%rdi
    7c0b:	e8 d0 23 00 00       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    7c10:	85 c0                	test   %eax,%eax
    7c12:	0f 85 c8 fe ff ff    	jne    7ae0 <mbedtls_rsa_validate_crt+0x90>
    7c18:	ba 01 00 00 00       	mov    $0x1,%edx
    7c1d:	4c 89 fe             	mov    %r15,%rsi
    7c20:	4c 89 ff             	mov    %r15,%rdi
    7c23:	e8 48 23 00 00       	callq  9f70 <mbedtls_mpi_sub_int>
    7c28:	85 c0                	test   %eax,%eax
    7c2a:	0f 85 b0 fe ff ff    	jne    7ae0 <mbedtls_rsa_validate_crt+0x90>
    7c30:	4c 89 e2             	mov    %r12,%rdx
    7c33:	4c 89 fe             	mov    %r15,%rsi
    7c36:	4c 89 ff             	mov    %r15,%rdi
    7c39:	e8 12 34 00 00       	callq  b050 <mbedtls_mpi_mod_mpi>
    7c3e:	85 c0                	test   %eax,%eax
    7c40:	0f 85 9a fe ff ff    	jne    7ae0 <mbedtls_rsa_validate_crt+0x90>
    7c46:	31 f6                	xor    %esi,%esi
    7c48:	4c 89 ff             	mov    %r15,%rdi
    7c4b:	e8 40 1f 00 00       	callq  9b90 <mbedtls_mpi_cmp_int>
    7c50:	85 c0                	test   %eax,%eax
    7c52:	75 9c                	jne    7bf0 <mbedtls_rsa_validate_crt+0x1a0>
    7c54:	0f 1f 40 00          	nopl   0x0(%rax)
    7c58:	45 31 e4             	xor    %r12d,%r12d
    7c5b:	e9 56 ff ff ff       	jmpq   7bb6 <mbedtls_rsa_validate_crt+0x166>
    7c60:	e8 1b b6 ff ff       	callq  3280 <__stack_chk_fail@plt>
    7c65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7c6c:	00 00 00 
    7c6f:	90                   	nop

0000000000007c70 <mbedtls_sha256_init>:
    7c70:	f3 0f 1e fa          	endbr64 
    7c74:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    7c7b:	48 89 f9             	mov    %rdi,%rcx
    7c7e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    7c82:	31 c0                	xor    %eax,%eax
    7c84:	48 c7 47 5c 00 00 00 	movq   $0x0,0x5c(%rdi)
    7c8b:	00 
    7c8c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    7c90:	48 29 f9             	sub    %rdi,%rcx
    7c93:	83 c1 6c             	add    $0x6c,%ecx
    7c96:	c1 e9 03             	shr    $0x3,%ecx
    7c99:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7c9c:	c3                   	retq   
    7c9d:	0f 1f 00             	nopl   (%rax)

0000000000007ca0 <mbedtls_sha256_free>:
    7ca0:	f3 0f 1e fa          	endbr64 
    7ca4:	48 85 ff             	test   %rdi,%rdi
    7ca7:	74 0f                	je     7cb8 <mbedtls_sha256_free+0x18>
    7ca9:	be 6c 00 00 00       	mov    $0x6c,%esi
    7cae:	e9 7d ac 00 00       	jmpq   12930 <mbedtls_platform_zeroize>
    7cb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7cb8:	c3                   	retq   
    7cb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007cc0 <mbedtls_sha256_clone>:
    7cc0:	f3 0f 1e fa          	endbr64 
    7cc4:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    7cc8:	0f 11 07             	movups %xmm0,(%rdi)
    7ccb:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    7cd0:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    7cd4:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    7cd9:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    7cdd:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    7ce2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    7ce6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    7ceb:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    7cef:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
    7cf4:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
    7cf8:	48 8b 46 60          	mov    0x60(%rsi),%rax
    7cfc:	48 89 47 60          	mov    %rax,0x60(%rdi)
    7d00:	8b 46 68             	mov    0x68(%rsi),%eax
    7d03:	89 47 68             	mov    %eax,0x68(%rdi)
    7d06:	c3                   	retq   
    7d07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7d0e:	00 00 

0000000000007d10 <mbedtls_sha256_starts>:
    7d10:	f3 0f 1e fa          	endbr64 
    7d14:	83 fe 01             	cmp    $0x1,%esi
    7d17:	0f 87 93 00 00 00    	ja     7db0 <mbedtls_sha256_starts+0xa0>
    7d1d:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    7d24:	85 f6                	test   %esi,%esi
    7d26:	74 48                	je     7d70 <mbedtls_sha256_starts+0x60>
    7d28:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
    7d2f:	d5 7c 36 
    7d32:	89 77 68             	mov    %esi,0x68(%rdi)
    7d35:	48 89 47 08          	mov    %rax,0x8(%rdi)
    7d39:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
    7d40:	59 0e f7 
    7d43:	48 89 47 10          	mov    %rax,0x10(%rdi)
    7d47:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
    7d4e:	15 58 68 
    7d51:	48 89 47 18          	mov    %rax,0x18(%rdi)
    7d55:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
    7d5c:	4f fa be 
    7d5f:	48 89 47 20          	mov    %rax,0x20(%rdi)
    7d63:	31 c0                	xor    %eax,%eax
    7d65:	c3                   	retq   
    7d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7d6d:	00 00 00 
    7d70:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
    7d77:	ae 67 bb 
    7d7a:	89 77 68             	mov    %esi,0x68(%rdi)
    7d7d:	48 89 47 08          	mov    %rax,0x8(%rdi)
    7d81:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
    7d88:	f5 4f a5 
    7d8b:	48 89 47 10          	mov    %rax,0x10(%rdi)
    7d8f:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
    7d96:	68 05 9b 
    7d99:	48 89 47 18          	mov    %rax,0x18(%rdi)
    7d9d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
    7da4:	cd e0 5b 
    7da7:	48 89 47 20          	mov    %rax,0x20(%rdi)
    7dab:	31 c0                	xor    %eax,%eax
    7dad:	c3                   	retq   
    7dae:	66 90                	xchg   %ax,%ax
    7db0:	b8 8c ff ff ff       	mov    $0xffffff8c,%eax
    7db5:	c3                   	retq   
    7db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7dbd:	00 00 00 

0000000000007dc0 <mbedtls_internal_sha256_process>:
    7dc0:	f3 0f 1e fa          	endbr64 
    7dc4:	41 57                	push   %r15
    7dc6:	48 89 f9             	mov    %rdi,%rcx
    7dc9:	41 56                	push   %r14
    7dcb:	41 55                	push   %r13
    7dcd:	41 54                	push   %r12
    7dcf:	55                   	push   %rbp
    7dd0:	53                   	push   %rbx
    7dd1:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
    7dd8:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
    7ddd:	48 8d 9c 24 58 01 00 	lea    0x158(%rsp),%rbx
    7de4:	00 
    7de5:	48 89 df             	mov    %rbx,%rdi
    7de8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7def:	00 00 
    7df1:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
    7df8:	00 
    7df9:	31 c0                	xor    %eax,%eax
    7dfb:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    7e00:	8b 54 01 08          	mov    0x8(%rcx,%rax,1),%edx
    7e04:	89 14 07             	mov    %edx,(%rdi,%rax,1)
    7e07:	48 83 c0 04          	add    $0x4,%rax
    7e0b:	48 83 f8 20          	cmp    $0x20,%rax
    7e0f:	75 ef                	jne    7e00 <mbedtls_internal_sha256_process+0x40>
    7e11:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
    7e16:	31 c0                	xor    %eax,%eax
    7e18:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
    7e1d:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    7e22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7e28:	8b 14 06             	mov    (%rsi,%rax,1),%edx
    7e2b:	0f ca                	bswap  %edx
    7e2d:	89 14 01             	mov    %edx,(%rcx,%rax,1)
    7e30:	48 83 c0 04          	add    $0x4,%rax
    7e34:	48 83 f8 40          	cmp    $0x40,%rax
    7e38:	75 ee                	jne    7e28 <mbedtls_internal_sha256_process+0x68>
    7e3a:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    7e3f:	48 8d 05 1a 08 01 00 	lea    0x1081a(%rip),%rax        # 18660 <K>
    7e46:	c7 44 24 1c d5 5e 1c 	movl   $0xab1c5ed5,0x1c(%rsp)
    7e4d:	ab 
    7e4e:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
    7e55:	00 
    7e56:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7e5b:	8b ac 24 74 01 00 00 	mov    0x174(%rsp),%ebp
    7e62:	41 ba a5 db b5 e9    	mov    $0xe9b5dba5,%r10d
    7e68:	41 b9 cf fb c0 b5    	mov    $0xb5c0fbcf,%r9d
    7e6e:	48 89 04 24          	mov    %rax,(%rsp)
    7e72:	8b b4 24 68 01 00 00 	mov    0x168(%rsp),%esi
    7e79:	41 b8 98 2f 8a 42    	mov    $0x428a2f98,%r8d
    7e7f:	c7 44 24 18 a4 82 3f 	movl   $0x923f82a4,0x18(%rsp)
    7e86:	92 
    7e87:	44 8b bc 24 70 01 00 	mov    0x170(%rsp),%r15d
    7e8e:	00 
    7e8f:	c7 44 24 14 f1 11 f1 	movl   $0x59f111f1,0x14(%rsp)
    7e96:	59 
    7e97:	44 8b b4 24 6c 01 00 	mov    0x16c(%rsp),%r14d
    7e9e:	00 
    7e9f:	c7 44 24 10 5b c2 56 	movl   $0x3956c25b,0x10(%rsp)
    7ea6:	39 
    7ea7:	44 8b ac 24 58 01 00 	mov    0x158(%rsp),%r13d
    7eae:	00 
    7eaf:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    7eb4:	44 8b 9c 24 5c 01 00 	mov    0x15c(%rsp),%r11d
    7ebb:	00 
    7ebc:	8b 9c 24 60 01 00 00 	mov    0x160(%rsp),%ebx
    7ec3:	8b 8c 24 64 01 00 00 	mov    0x164(%rsp),%ecx
    7eca:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    7ecf:	ba 91 44 37 71       	mov    $0x71374491,%edx
    7ed4:	41 89 f4             	mov    %esi,%r12d
    7ed7:	89 f0                	mov    %esi,%eax
    7ed9:	41 c1 cc 06          	ror    $0x6,%r12d
    7edd:	c1 c8 0b             	ror    $0xb,%eax
    7ee0:	44 31 e0             	xor    %r12d,%eax
    7ee3:	41 89 f4             	mov    %esi,%r12d
    7ee6:	41 c1 c4 07          	rol    $0x7,%r12d
    7eea:	44 31 e0             	xor    %r12d,%eax
    7eed:	45 89 fc             	mov    %r15d,%r12d
    7ef0:	45 31 f4             	xor    %r14d,%r12d
    7ef3:	41 21 f4             	and    %esi,%r12d
    7ef6:	45 31 fc             	xor    %r15d,%r12d
    7ef9:	44 03 7f 0c          	add    0xc(%rdi),%r15d
    7efd:	44 01 e0             	add    %r12d,%eax
    7f00:	03 47 08             	add    0x8(%rdi),%eax
    7f03:	45 89 ec             	mov    %r13d,%r12d
    7f06:	01 c5                	add    %eax,%ebp
    7f08:	44 89 e8             	mov    %r13d,%eax
    7f0b:	45 21 dc             	and    %r11d,%r12d
    7f0e:	44 01 c5             	add    %r8d,%ebp
    7f11:	45 89 e8             	mov    %r13d,%r8d
    7f14:	c1 c8 0d             	ror    $0xd,%eax
    7f17:	41 c1 c8 02          	ror    $0x2,%r8d
    7f1b:	01 e9                	add    %ebp,%ecx
    7f1d:	44 31 c0             	xor    %r8d,%eax
    7f20:	45 89 e8             	mov    %r13d,%r8d
    7f23:	41 c1 c0 0a          	rol    $0xa,%r8d
    7f27:	44 31 c0             	xor    %r8d,%eax
    7f2a:	45 89 e8             	mov    %r13d,%r8d
    7f2d:	45 09 d8             	or     %r11d,%r8d
    7f30:	41 21 d8             	and    %ebx,%r8d
    7f33:	45 09 e0             	or     %r12d,%r8d
    7f36:	41 01 c0             	add    %eax,%r8d
    7f39:	89 c8                	mov    %ecx,%eax
    7f3b:	41 01 e8             	add    %ebp,%r8d
    7f3e:	89 f5                	mov    %esi,%ebp
    7f40:	c1 c8 0b             	ror    $0xb,%eax
    7f43:	44 31 f5             	xor    %r14d,%ebp
    7f46:	45 89 c4             	mov    %r8d,%r12d
    7f49:	21 cd                	and    %ecx,%ebp
    7f4b:	44 31 f5             	xor    %r14d,%ebp
    7f4e:	41 01 ef             	add    %ebp,%r15d
    7f51:	89 cd                	mov    %ecx,%ebp
    7f53:	c1 cd 06             	ror    $0x6,%ebp
    7f56:	31 e8                	xor    %ebp,%eax
    7f58:	89 cd                	mov    %ecx,%ebp
    7f5a:	c1 c5 07             	rol    $0x7,%ebp
    7f5d:	45 21 ec             	and    %r13d,%r12d
    7f60:	44 03 77 10          	add    0x10(%rdi),%r14d
    7f64:	31 e8                	xor    %ebp,%eax
    7f66:	44 89 c5             	mov    %r8d,%ebp
    7f69:	44 01 f8             	add    %r15d,%eax
    7f6c:	c1 cd 0d             	ror    $0xd,%ebp
    7f6f:	01 c2                	add    %eax,%edx
    7f71:	44 89 c0             	mov    %r8d,%eax
    7f74:	c1 c8 02             	ror    $0x2,%eax
    7f77:	01 d3                	add    %edx,%ebx
    7f79:	31 c5                	xor    %eax,%ebp
    7f7b:	44 89 c0             	mov    %r8d,%eax
    7f7e:	c1 c0 0a             	rol    $0xa,%eax
    7f81:	31 c5                	xor    %eax,%ebp
    7f83:	44 89 c0             	mov    %r8d,%eax
    7f86:	44 09 e8             	or     %r13d,%eax
    7f89:	44 21 d8             	and    %r11d,%eax
    7f8c:	44 09 e0             	or     %r12d,%eax
    7f8f:	45 89 c4             	mov    %r8d,%r12d
    7f92:	01 e8                	add    %ebp,%eax
    7f94:	89 cd                	mov    %ecx,%ebp
    7f96:	31 f5                	xor    %esi,%ebp
    7f98:	01 d0                	add    %edx,%eax
    7f9a:	89 da                	mov    %ebx,%edx
    7f9c:	21 dd                	and    %ebx,%ebp
    7f9e:	c1 ca 0b             	ror    $0xb,%edx
    7fa1:	31 f5                	xor    %esi,%ebp
    7fa3:	41 01 ee             	add    %ebp,%r14d
    7fa6:	89 dd                	mov    %ebx,%ebp
    7fa8:	c1 cd 06             	ror    $0x6,%ebp
    7fab:	31 ea                	xor    %ebp,%edx
    7fad:	89 dd                	mov    %ebx,%ebp
    7faf:	c1 c5 07             	rol    $0x7,%ebp
    7fb2:	31 ea                	xor    %ebp,%edx
    7fb4:	89 c5                	mov    %eax,%ebp
    7fb6:	44 01 f2             	add    %r14d,%edx
    7fb9:	c1 cd 0d             	ror    $0xd,%ebp
    7fbc:	41 01 d1             	add    %edx,%r9d
    7fbf:	89 c2                	mov    %eax,%edx
    7fc1:	c1 ca 02             	ror    $0x2,%edx
    7fc4:	45 01 cb             	add    %r9d,%r11d
    7fc7:	31 d5                	xor    %edx,%ebp
    7fc9:	89 c2                	mov    %eax,%edx
    7fcb:	c1 c2 0a             	rol    $0xa,%edx
    7fce:	41 21 c4             	and    %eax,%r12d
    7fd1:	03 77 14             	add    0x14(%rdi),%esi
    7fd4:	31 d5                	xor    %edx,%ebp
    7fd6:	44 89 c2             	mov    %r8d,%edx
    7fd9:	09 c2                	or     %eax,%edx
    7fdb:	44 21 ea             	and    %r13d,%edx
    7fde:	44 09 e2             	or     %r12d,%edx
    7fe1:	01 ea                	add    %ebp,%edx
    7fe3:	44 89 dd             	mov    %r11d,%ebp
    7fe6:	44 01 ca             	add    %r9d,%edx
    7fe9:	41 89 c9             	mov    %ecx,%r9d
    7fec:	c1 cd 06             	ror    $0x6,%ebp
    7fef:	41 31 d9             	xor    %ebx,%r9d
    7ff2:	45 21 d9             	and    %r11d,%r9d
    7ff5:	41 31 c9             	xor    %ecx,%r9d
    7ff8:	44 01 ce             	add    %r9d,%esi
    7ffb:	45 89 d9             	mov    %r11d,%r9d
    7ffe:	41 c1 c9 0b          	ror    $0xb,%r9d
    8002:	41 31 e9             	xor    %ebp,%r9d
    8005:	44 89 dd             	mov    %r11d,%ebp
    8008:	c1 c5 07             	rol    $0x7,%ebp
    800b:	41 31 e9             	xor    %ebp,%r9d
    800e:	89 c5                	mov    %eax,%ebp
    8010:	44 01 ce             	add    %r9d,%esi
    8013:	41 89 d1             	mov    %edx,%r9d
    8016:	21 d5                	and    %edx,%ebp
    8018:	41 01 f2             	add    %esi,%r10d
    801b:	89 d6                	mov    %edx,%esi
    801d:	41 c1 c9 0d          	ror    $0xd,%r9d
    8021:	c1 ce 02             	ror    $0x2,%esi
    8024:	45 01 d5             	add    %r10d,%r13d
    8027:	41 31 f1             	xor    %esi,%r9d
    802a:	89 d6                	mov    %edx,%esi
    802c:	c1 c6 0a             	rol    $0xa,%esi
    802f:	41 31 f1             	xor    %esi,%r9d
    8032:	89 c6                	mov    %eax,%esi
    8034:	09 d6                	or     %edx,%esi
    8036:	44 21 c6             	and    %r8d,%esi
    8039:	09 ee                	or     %ebp,%esi
    803b:	44 01 ce             	add    %r9d,%esi
    803e:	45 89 e9             	mov    %r13d,%r9d
    8041:	44 01 d6             	add    %r10d,%esi
    8044:	41 89 da             	mov    %ebx,%r10d
    8047:	45 31 da             	xor    %r11d,%r10d
    804a:	03 4f 18             	add    0x18(%rdi),%ecx
    804d:	41 c1 c9 06          	ror    $0x6,%r9d
    8051:	45 21 ea             	and    %r13d,%r10d
    8054:	41 31 da             	xor    %ebx,%r10d
    8057:	03 5f 1c             	add    0x1c(%rdi),%ebx
    805a:	41 01 ca             	add    %ecx,%r10d
    805d:	44 89 e9             	mov    %r13d,%ecx
    8060:	c1 c9 0b             	ror    $0xb,%ecx
    8063:	44 31 c9             	xor    %r9d,%ecx
    8066:	45 89 e9             	mov    %r13d,%r9d
    8069:	41 c1 c1 07          	rol    $0x7,%r9d
    806d:	44 31 c9             	xor    %r9d,%ecx
    8070:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
    8075:	44 01 d1             	add    %r10d,%ecx
    8078:	41 89 d2             	mov    %edx,%r10d
    807b:	41 01 c9             	add    %ecx,%r9d
    807e:	89 f1                	mov    %esi,%ecx
    8080:	41 21 f2             	and    %esi,%r10d
    8083:	43 8d 2c 08          	lea    (%r8,%r9,1),%ebp
    8087:	41 89 f0             	mov    %esi,%r8d
    808a:	c1 c9 02             	ror    $0x2,%ecx
    808d:	41 c1 c8 0d          	ror    $0xd,%r8d
    8091:	41 31 c8             	xor    %ecx,%r8d
    8094:	89 f1                	mov    %esi,%ecx
    8096:	c1 c1 0a             	rol    $0xa,%ecx
    8099:	41 31 c8             	xor    %ecx,%r8d
    809c:	89 d1                	mov    %edx,%ecx
    809e:	09 f1                	or     %esi,%ecx
    80a0:	21 c1                	and    %eax,%ecx
    80a2:	44 09 d1             	or     %r10d,%ecx
    80a5:	44 01 c1             	add    %r8d,%ecx
    80a8:	41 89 e8             	mov    %ebp,%r8d
    80ab:	44 01 c9             	add    %r9d,%ecx
    80ae:	45 89 d9             	mov    %r11d,%r9d
    80b1:	41 c1 c8 0b          	ror    $0xb,%r8d
    80b5:	45 31 e9             	xor    %r13d,%r9d
    80b8:	41 21 e9             	and    %ebp,%r9d
    80bb:	45 31 d9             	xor    %r11d,%r9d
    80be:	41 01 d9             	add    %ebx,%r9d
    80c1:	89 eb                	mov    %ebp,%ebx
    80c3:	c1 cb 06             	ror    $0x6,%ebx
    80c6:	41 31 d8             	xor    %ebx,%r8d
    80c9:	89 eb                	mov    %ebp,%ebx
    80cb:	c1 c3 07             	rol    $0x7,%ebx
    80ce:	41 31 d8             	xor    %ebx,%r8d
    80d1:	89 cb                	mov    %ecx,%ebx
    80d3:	44 03 5f 20          	add    0x20(%rdi),%r11d
    80d7:	45 01 c8             	add    %r9d,%r8d
    80da:	44 03 44 24 14       	add    0x14(%rsp),%r8d
    80df:	c1 cb 02             	ror    $0x2,%ebx
    80e2:	41 89 f1             	mov    %esi,%r9d
    80e5:	46 8d 3c 00          	lea    (%rax,%r8,1),%r15d
    80e9:	89 c8                	mov    %ecx,%eax
    80eb:	41 21 c9             	and    %ecx,%r9d
    80ee:	c1 c8 0d             	ror    $0xd,%eax
    80f1:	31 d8                	xor    %ebx,%eax
    80f3:	89 cb                	mov    %ecx,%ebx
    80f5:	c1 c3 0a             	rol    $0xa,%ebx
    80f8:	31 d8                	xor    %ebx,%eax
    80fa:	89 f3                	mov    %esi,%ebx
    80fc:	09 cb                	or     %ecx,%ebx
    80fe:	21 d3                	and    %edx,%ebx
    8100:	44 09 cb             	or     %r9d,%ebx
    8103:	01 c3                	add    %eax,%ebx
    8105:	44 89 f8             	mov    %r15d,%eax
    8108:	44 01 c3             	add    %r8d,%ebx
    810b:	45 89 e8             	mov    %r13d,%r8d
    810e:	c1 c8 0b             	ror    $0xb,%eax
    8111:	41 31 e8             	xor    %ebp,%r8d
    8114:	41 89 d9             	mov    %ebx,%r9d
    8117:	45 21 f8             	and    %r15d,%r8d
    811a:	45 31 e8             	xor    %r13d,%r8d
    811d:	45 01 d8             	add    %r11d,%r8d
    8120:	45 89 fb             	mov    %r15d,%r11d
    8123:	41 c1 cb 06          	ror    $0x6,%r11d
    8127:	44 31 d8             	xor    %r11d,%eax
    812a:	45 89 fb             	mov    %r15d,%r11d
    812d:	41 c1 c3 07          	rol    $0x7,%r11d
    8131:	44 31 d8             	xor    %r11d,%eax
    8134:	45 8d 1c 00          	lea    (%r8,%rax,1),%r11d
    8138:	8b 44 24 18          	mov    0x18(%rsp),%eax
    813c:	41 89 c8             	mov    %ecx,%r8d
    813f:	44 01 d8             	add    %r11d,%eax
    8142:	41 89 db             	mov    %ebx,%r11d
    8145:	44 8d 34 02          	lea    (%rdx,%rax,1),%r14d
    8149:	89 da                	mov    %ebx,%edx
    814b:	41 c1 cb 0d          	ror    $0xd,%r11d
    814f:	c1 ca 02             	ror    $0x2,%edx
    8152:	44 31 da             	xor    %r11d,%edx
    8155:	41 89 db             	mov    %ebx,%r11d
    8158:	41 c1 c3 0a          	rol    $0xa,%r11d
    815c:	44 31 da             	xor    %r11d,%edx
    815f:	41 89 cb             	mov    %ecx,%r11d
    8162:	41 09 db             	or     %ebx,%r11d
    8165:	41 21 f3             	and    %esi,%r11d
    8168:	41 21 d8             	and    %ebx,%r8d
    816b:	44 03 6f 24          	add    0x24(%rdi),%r13d
    816f:	48 83 04 24 20       	addq   $0x20,(%rsp)
    8174:	45 09 c3             	or     %r8d,%r11d
    8177:	48 83 c7 20          	add    $0x20,%rdi
    817b:	41 01 d3             	add    %edx,%r11d
    817e:	44 89 f2             	mov    %r14d,%edx
    8181:	41 01 c3             	add    %eax,%r11d
    8184:	89 e8                	mov    %ebp,%eax
    8186:	c1 ca 0b             	ror    $0xb,%edx
    8189:	44 31 f8             	xor    %r15d,%eax
    818c:	45 89 d8             	mov    %r11d,%r8d
    818f:	45 21 d9             	and    %r11d,%r9d
    8192:	44 21 f0             	and    %r14d,%eax
    8195:	41 c1 c8 0d          	ror    $0xd,%r8d
    8199:	31 e8                	xor    %ebp,%eax
    819b:	41 01 c5             	add    %eax,%r13d
    819e:	44 89 f0             	mov    %r14d,%eax
    81a1:	c1 c8 06             	ror    $0x6,%eax
    81a4:	31 d0                	xor    %edx,%eax
    81a6:	44 89 f2             	mov    %r14d,%edx
    81a9:	c1 c2 07             	rol    $0x7,%edx
    81ac:	31 d0                	xor    %edx,%eax
    81ae:	44 89 da             	mov    %r11d,%edx
    81b1:	c1 ca 02             	ror    $0x2,%edx
    81b4:	41 01 c5             	add    %eax,%r13d
    81b7:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    81bb:	44 31 c2             	xor    %r8d,%edx
    81be:	45 89 d8             	mov    %r11d,%r8d
    81c1:	41 c1 c0 0a          	rol    $0xa,%r8d
    81c5:	44 01 e8             	add    %r13d,%eax
    81c8:	44 31 c2             	xor    %r8d,%edx
    81cb:	41 89 d8             	mov    %ebx,%r8d
    81ce:	01 c6                	add    %eax,%esi
    81d0:	45 09 d8             	or     %r11d,%r8d
    81d3:	41 21 c8             	and    %ecx,%r8d
    81d6:	45 09 c8             	or     %r9d,%r8d
    81d9:	4c 8b 0c 24          	mov    (%rsp),%r9
    81dd:	44 01 c2             	add    %r8d,%edx
    81e0:	44 8d 2c 10          	lea    (%rax,%rdx,1),%r13d
    81e4:	48 39 7c 24 20       	cmp    %rdi,0x20(%rsp)
    81e9:	74 3d                	je     8228 <mbedtls_internal_sha256_process+0x468>
    81eb:	4c 89 c8             	mov    %r9,%rax
    81ee:	45 8b 01             	mov    (%r9),%r8d
    81f1:	41 8b 51 04          	mov    0x4(%r9),%edx
    81f5:	44 8b 60 10          	mov    0x10(%rax),%r12d
    81f9:	44 8b 50 0c          	mov    0xc(%rax),%r10d
    81fd:	45 8b 49 08          	mov    0x8(%r9),%r9d
    8201:	44 89 64 24 10       	mov    %r12d,0x10(%rsp)
    8206:	44 8b 60 14          	mov    0x14(%rax),%r12d
    820a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
    820f:	44 8b 60 18          	mov    0x18(%rax),%r12d
    8213:	8b 40 1c             	mov    0x1c(%rax),%eax
    8216:	44 89 64 24 18       	mov    %r12d,0x18(%rsp)
    821b:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    821f:	e9 b0 fc ff ff       	jmpq   7ed4 <mbedtls_internal_sha256_process+0x114>
    8224:	0f 1f 40 00          	nopl   0x0(%rax)
    8228:	89 44 24 50          	mov    %eax,0x50(%rsp)
    822c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    8231:	41 b9 86 47 be ef    	mov    $0xefbe4786,%r9d
    8237:	41 b8 c1 69 9b e4    	mov    $0xe49b69c1,%r8d
    823d:	89 b4 24 68 01 00 00 	mov    %esi,0x168(%rsp)
    8244:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    8249:	48 05 c0 00 00 00    	add    $0xc0,%rax
    824f:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
    8256:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    825b:	89 f0                	mov    %esi,%eax
    825d:	89 ce                	mov    %ecx,%esi
    825f:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
    8266:	00 
    8267:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
    826e:	00 
    826f:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
    8276:	00 
    8277:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
    827e:	00 
    827f:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
    8286:	89 8c 24 64 01 00 00 	mov    %ecx,0x164(%rsp)
    828d:	89 54 24 54          	mov    %edx,0x54(%rsp)
    8291:	c7 44 24 28 da 88 f9 	movl   $0x76f988da,0x28(%rsp)
    8298:	76 
    8299:	c7 44 24 20 dc a9 b0 	movl   $0x5cb0a9dc,0x20(%rsp)
    82a0:	5c 
    82a1:	c7 44 24 1c aa 84 74 	movl   $0x4a7484aa,0x1c(%rsp)
    82a8:	4a 
    82a9:	c7 44 24 18 6f 2c e9 	movl   $0x2de92c6f,0x18(%rsp)
    82b0:	2d 
    82b1:	c7 44 24 14 cc a1 0c 	movl   $0x240ca1cc,0x14(%rsp)
    82b8:	24 
    82b9:	c7 44 24 10 c6 9d c1 	movl   $0xfc19dc6,0x10(%rsp)
    82c0:	0f 
    82c1:	eb 37                	jmp    82fa <mbedtls_internal_sha256_process+0x53a>
    82c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    82c8:	8b 57 48             	mov    0x48(%rdi),%edx
    82cb:	44 8b 47 40          	mov    0x40(%rdi),%r8d
    82cf:	44 8b 4f 44          	mov    0x44(%rdi),%r9d
    82d3:	89 54 24 10          	mov    %edx,0x10(%rsp)
    82d7:	8b 57 4c             	mov    0x4c(%rdi),%edx
    82da:	89 54 24 14          	mov    %edx,0x14(%rsp)
    82de:	8b 57 50             	mov    0x50(%rdi),%edx
    82e1:	89 54 24 18          	mov    %edx,0x18(%rsp)
    82e5:	8b 57 54             	mov    0x54(%rdi),%edx
    82e8:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    82ec:	8b 57 58             	mov    0x58(%rdi),%edx
    82ef:	8b 7f 5c             	mov    0x5c(%rdi),%edi
    82f2:	89 54 24 20          	mov    %edx,0x20(%rsp)
    82f6:	89 7c 24 28          	mov    %edi,0x28(%rsp)
    82fa:	41 8b 54 24 40       	mov    0x40(%r12),%edx
    82ff:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
    8304:	41 8b 7c 24 0c       	mov    0xc(%r12),%edi
    8309:	45 8b 54 24 08       	mov    0x8(%r12),%r10d
    830e:	c1 c1 0d             	rol    $0xd,%ecx
    8311:	c1 c2 0f             	rol    $0xf,%edx
    8314:	45 03 54 24 2c       	add    0x2c(%r12),%r10d
    8319:	31 ca                	xor    %ecx,%edx
    831b:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
    8320:	c1 e9 0a             	shr    $0xa,%ecx
    8323:	31 d1                	xor    %edx,%ecx
    8325:	89 fa                	mov    %edi,%edx
    8327:	44 01 d1             	add    %r10d,%ecx
    832a:	41 89 fa             	mov    %edi,%r10d
    832d:	c1 c2 0e             	rol    $0xe,%edx
    8330:	41 c1 ca 07          	ror    $0x7,%r10d
    8334:	44 31 d2             	xor    %r10d,%edx
    8337:	41 89 fa             	mov    %edi,%r10d
    833a:	41 c1 ea 03          	shr    $0x3,%r10d
    833e:	44 31 d2             	xor    %r10d,%edx
    8341:	44 8d 14 11          	lea    (%rcx,%rdx,1),%r10d
    8345:	89 c1                	mov    %eax,%ecx
    8347:	89 c2                	mov    %eax,%edx
    8349:	c1 c9 06             	ror    $0x6,%ecx
    834c:	c1 ca 0b             	ror    $0xb,%edx
    834f:	45 89 54 24 48       	mov    %r10d,0x48(%r12)
    8354:	31 ca                	xor    %ecx,%edx
    8356:	89 c1                	mov    %eax,%ecx
    8358:	44 89 14 24          	mov    %r10d,(%rsp)
    835c:	c1 c1 07             	rol    $0x7,%ecx
    835f:	31 ca                	xor    %ecx,%edx
    8361:	44 89 f9             	mov    %r15d,%ecx
    8364:	44 31 f1             	xor    %r14d,%ecx
    8367:	21 c1                	and    %eax,%ecx
    8369:	44 31 f9             	xor    %r15d,%ecx
    836c:	01 ca                	add    %ecx,%edx
    836e:	44 89 e9             	mov    %r13d,%ecx
    8371:	44 01 d2             	add    %r10d,%edx
    8374:	44 21 d9             	and    %r11d,%ecx
    8377:	01 d5                	add    %edx,%ebp
    8379:	44 89 ea             	mov    %r13d,%edx
    837c:	41 01 e8             	add    %ebp,%r8d
    837f:	44 89 ed             	mov    %r13d,%ebp
    8382:	c1 ca 0d             	ror    $0xd,%edx
    8385:	c1 cd 02             	ror    $0x2,%ebp
    8388:	46 8d 14 06          	lea    (%rsi,%r8,1),%r10d
    838c:	89 c6                	mov    %eax,%esi
    838e:	31 ea                	xor    %ebp,%edx
    8390:	44 89 ed             	mov    %r13d,%ebp
    8393:	c1 c5 0a             	rol    $0xa,%ebp
    8396:	31 ea                	xor    %ebp,%edx
    8398:	44 89 ed             	mov    %r13d,%ebp
    839b:	44 09 dd             	or     %r11d,%ebp
    839e:	21 dd                	and    %ebx,%ebp
    83a0:	09 cd                	or     %ecx,%ebp
    83a2:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
    83a7:	41 03 7c 24 30       	add    0x30(%r12),%edi
    83ac:	44 31 f6             	xor    %r14d,%esi
    83af:	01 d5                	add    %edx,%ebp
    83b1:	41 8b 54 24 44       	mov    0x44(%r12),%edx
    83b6:	44 21 d6             	and    %r10d,%esi
    83b9:	c1 c1 0f             	rol    $0xf,%ecx
    83bc:	44 01 c5             	add    %r8d,%ebp
    83bf:	45 8b 44 24 10       	mov    0x10(%r12),%r8d
    83c4:	44 31 f6             	xor    %r14d,%esi
    83c7:	c1 c2 0d             	rol    $0xd,%edx
    83ca:	31 ca                	xor    %ecx,%edx
    83cc:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
    83d1:	c1 e9 0a             	shr    $0xa,%ecx
    83d4:	31 d1                	xor    %edx,%ecx
    83d6:	44 89 c2             	mov    %r8d,%edx
    83d9:	01 cf                	add    %ecx,%edi
    83db:	44 89 c1             	mov    %r8d,%ecx
    83de:	c1 ca 07             	ror    $0x7,%edx
    83e1:	c1 c1 0e             	rol    $0xe,%ecx
    83e4:	31 d1                	xor    %edx,%ecx
    83e6:	44 89 c2             	mov    %r8d,%edx
    83e9:	c1 ea 03             	shr    $0x3,%edx
    83ec:	31 d1                	xor    %edx,%ecx
    83ee:	44 89 d2             	mov    %r10d,%edx
    83f1:	01 f9                	add    %edi,%ecx
    83f3:	c1 ca 0b             	ror    $0xb,%edx
    83f6:	44 89 ef             	mov    %r13d,%edi
    83f9:	41 01 cf             	add    %ecx,%r15d
    83fc:	41 89 4c 24 4c       	mov    %ecx,0x4c(%r12)
    8401:	41 01 f7             	add    %esi,%r15d
    8404:	44 89 d6             	mov    %r10d,%esi
    8407:	c1 ce 06             	ror    $0x6,%esi
    840a:	31 f2                	xor    %esi,%edx
    840c:	44 89 d6             	mov    %r10d,%esi
    840f:	c1 c6 07             	rol    $0x7,%esi
    8412:	31 f2                	xor    %esi,%edx
    8414:	89 ee                	mov    %ebp,%esi
    8416:	44 01 fa             	add    %r15d,%edx
    8419:	c1 ce 0d             	ror    $0xd,%esi
    841c:	44 8b 3c 24          	mov    (%rsp),%r15d
    8420:	41 01 d1             	add    %edx,%r9d
    8423:	89 ea                	mov    %ebp,%edx
    8425:	c1 ca 02             	ror    $0x2,%edx
    8428:	44 01 cb             	add    %r9d,%ebx
    842b:	31 d6                	xor    %edx,%esi
    842d:	89 ea                	mov    %ebp,%edx
    842f:	c1 c2 0a             	rol    $0xa,%edx
    8432:	21 ef                	and    %ebp,%edi
    8434:	45 03 44 24 34       	add    0x34(%r12),%r8d
    8439:	31 d6                	xor    %edx,%esi
    843b:	44 89 ea             	mov    %r13d,%edx
    843e:	09 ea                	or     %ebp,%edx
    8440:	44 21 da             	and    %r11d,%edx
    8443:	09 fa                	or     %edi,%edx
    8445:	44 89 ff             	mov    %r15d,%edi
    8448:	01 f2                	add    %esi,%edx
    844a:	44 89 fe             	mov    %r15d,%esi
    844d:	c1 c7 0d             	rol    $0xd,%edi
    8450:	c1 c6 0f             	rol    $0xf,%esi
    8453:	44 01 ca             	add    %r9d,%edx
    8456:	45 8b 4c 24 14       	mov    0x14(%r12),%r9d
    845b:	31 f7                	xor    %esi,%edi
    845d:	44 89 fe             	mov    %r15d,%esi
    8460:	41 89 ef             	mov    %ebp,%r15d
    8463:	c1 ee 0a             	shr    $0xa,%esi
    8466:	31 fe                	xor    %edi,%esi
    8468:	44 89 cf             	mov    %r9d,%edi
    846b:	41 01 f0             	add    %esi,%r8d
    846e:	44 89 ce             	mov    %r9d,%esi
    8471:	c1 cf 07             	ror    $0x7,%edi
    8474:	c1 c6 0e             	rol    $0xe,%esi
    8477:	31 fe                	xor    %edi,%esi
    8479:	44 89 cf             	mov    %r9d,%edi
    847c:	c1 ef 03             	shr    $0x3,%edi
    847f:	31 fe                	xor    %edi,%esi
    8481:	44 01 c6             	add    %r8d,%esi
    8484:	41 89 c0             	mov    %eax,%r8d
    8487:	45 31 d0             	xor    %r10d,%r8d
    848a:	41 89 74 24 50       	mov    %esi,0x50(%r12)
    848f:	41 21 d8             	and    %ebx,%r8d
    8492:	44 89 c7             	mov    %r8d,%edi
    8495:	45 8d 04 36          	lea    (%r14,%rsi,1),%r8d
    8499:	41 89 de             	mov    %ebx,%r14d
    849c:	31 c7                	xor    %eax,%edi
    849e:	41 c1 ce 0b          	ror    $0xb,%r14d
    84a2:	41 01 f8             	add    %edi,%r8d
    84a5:	89 df                	mov    %ebx,%edi
    84a7:	c1 cf 06             	ror    $0x6,%edi
    84aa:	41 31 fe             	xor    %edi,%r14d
    84ad:	89 df                	mov    %ebx,%edi
    84af:	c1 c7 07             	rol    $0x7,%edi
    84b2:	41 31 fe             	xor    %edi,%r14d
    84b5:	89 d7                	mov    %edx,%edi
    84b7:	45 01 c6             	add    %r8d,%r14d
    84ba:	41 89 d0             	mov    %edx,%r8d
    84bd:	44 03 74 24 10       	add    0x10(%rsp),%r14d
    84c2:	45 01 f3             	add    %r14d,%r11d
    84c5:	41 c1 c8 02          	ror    $0x2,%r8d
    84c9:	41 21 d7             	and    %edx,%r15d
    84cc:	c1 cf 0d             	ror    $0xd,%edi
    84cf:	44 31 c7             	xor    %r8d,%edi
    84d2:	41 89 d0             	mov    %edx,%r8d
    84d5:	41 c1 c0 0a          	rol    $0xa,%r8d
    84d9:	44 31 c7             	xor    %r8d,%edi
    84dc:	41 89 e8             	mov    %ebp,%r8d
    84df:	41 09 d0             	or     %edx,%r8d
    84e2:	45 21 e8             	and    %r13d,%r8d
    84e5:	45 09 f8             	or     %r15d,%r8d
    84e8:	41 01 f8             	add    %edi,%r8d
    84eb:	89 cf                	mov    %ecx,%edi
    84ed:	c1 c7 0f             	rol    $0xf,%edi
    84f0:	45 01 f0             	add    %r14d,%r8d
    84f3:	45 8b 74 24 18       	mov    0x18(%r12),%r14d
    84f8:	41 89 ff             	mov    %edi,%r15d
    84fb:	89 cf                	mov    %ecx,%edi
    84fd:	c1 e9 0a             	shr    $0xa,%ecx
    8500:	c1 c7 0d             	rol    $0xd,%edi
    8503:	44 31 ff             	xor    %r15d,%edi
    8506:	41 89 d7             	mov    %edx,%r15d
    8509:	31 cf                	xor    %ecx,%edi
    850b:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
    8510:	44 01 c9             	add    %r9d,%ecx
    8513:	45 89 f1             	mov    %r14d,%r9d
    8516:	01 f9                	add    %edi,%ecx
    8518:	44 89 f7             	mov    %r14d,%edi
    851b:	41 c1 c9 07          	ror    $0x7,%r9d
    851f:	c1 c7 0e             	rol    $0xe,%edi
    8522:	44 31 cf             	xor    %r9d,%edi
    8525:	45 89 f1             	mov    %r14d,%r9d
    8528:	41 c1 e9 03          	shr    $0x3,%r9d
    852c:	44 31 cf             	xor    %r9d,%edi
    852f:	45 89 d9             	mov    %r11d,%r9d
    8532:	01 cf                	add    %ecx,%edi
    8534:	44 89 d1             	mov    %r10d,%ecx
    8537:	41 c1 c9 06          	ror    $0x6,%r9d
    853b:	31 d9                	xor    %ebx,%ecx
    853d:	01 f8                	add    %edi,%eax
    853f:	41 89 7c 24 54       	mov    %edi,0x54(%r12)
    8544:	44 21 d9             	and    %r11d,%ecx
    8547:	44 31 d1             	xor    %r10d,%ecx
    854a:	01 c8                	add    %ecx,%eax
    854c:	44 89 d9             	mov    %r11d,%ecx
    854f:	c1 c9 0b             	ror    $0xb,%ecx
    8552:	44 31 c9             	xor    %r9d,%ecx
    8555:	45 89 d9             	mov    %r11d,%r9d
    8558:	45 21 c7             	and    %r8d,%r15d
    855b:	45 03 74 24 3c       	add    0x3c(%r12),%r14d
    8560:	41 c1 c1 07          	rol    $0x7,%r9d
    8564:	44 31 c9             	xor    %r9d,%ecx
    8567:	01 c1                	add    %eax,%ecx
    8569:	03 4c 24 14          	add    0x14(%rsp),%ecx
    856d:	44 89 c0             	mov    %r8d,%eax
    8570:	45 8d 4c 0d 00       	lea    0x0(%r13,%rcx,1),%r9d
    8575:	45 89 c5             	mov    %r8d,%r13d
    8578:	c1 c8 02             	ror    $0x2,%eax
    857b:	41 c1 cd 0d          	ror    $0xd,%r13d
    857f:	41 31 c5             	xor    %eax,%r13d
    8582:	44 89 c0             	mov    %r8d,%eax
    8585:	c1 c0 0a             	rol    $0xa,%eax
    8588:	41 31 c5             	xor    %eax,%r13d
    858b:	89 d0                	mov    %edx,%eax
    858d:	44 09 c0             	or     %r8d,%eax
    8590:	21 e8                	and    %ebp,%eax
    8592:	44 09 f8             	or     %r15d,%eax
    8595:	44 01 e8             	add    %r13d,%eax
    8598:	45 8b 6c 24 1c       	mov    0x1c(%r12),%r13d
    859d:	01 c8                	add    %ecx,%eax
    859f:	89 f1                	mov    %esi,%ecx
    85a1:	c1 c1 0f             	rol    $0xf,%ecx
    85a4:	41 89 cf             	mov    %ecx,%r15d
    85a7:	89 f1                	mov    %esi,%ecx
    85a9:	c1 ee 0a             	shr    $0xa,%esi
    85ac:	c1 c1 0d             	rol    $0xd,%ecx
    85af:	44 31 f9             	xor    %r15d,%ecx
    85b2:	45 89 c7             	mov    %r8d,%r15d
    85b5:	31 f1                	xor    %esi,%ecx
    85b7:	44 89 f6             	mov    %r14d,%esi
    85ba:	45 89 ee             	mov    %r13d,%r14d
    85bd:	01 ce                	add    %ecx,%esi
    85bf:	44 89 e9             	mov    %r13d,%ecx
    85c2:	41 c1 ce 07          	ror    $0x7,%r14d
    85c6:	c1 c1 0e             	rol    $0xe,%ecx
    85c9:	44 31 f1             	xor    %r14d,%ecx
    85cc:	45 89 ee             	mov    %r13d,%r14d
    85cf:	41 c1 ee 03          	shr    $0x3,%r14d
    85d3:	44 31 f1             	xor    %r14d,%ecx
    85d6:	01 f1                	add    %esi,%ecx
    85d8:	89 de                	mov    %ebx,%esi
    85da:	44 31 de             	xor    %r11d,%esi
    85dd:	41 89 4c 24 58       	mov    %ecx,0x58(%r12)
    85e2:	44 21 ce             	and    %r9d,%esi
    85e5:	41 89 f6             	mov    %esi,%r14d
    85e8:	41 8d 34 0a          	lea    (%r10,%rcx,1),%esi
    85ec:	45 89 ca             	mov    %r9d,%r10d
    85ef:	41 31 de             	xor    %ebx,%r14d
    85f2:	44 01 f6             	add    %r14d,%esi
    85f5:	45 89 ce             	mov    %r9d,%r14d
    85f8:	41 c1 ca 0b          	ror    $0xb,%r10d
    85fc:	41 21 c7             	and    %eax,%r15d
    85ff:	41 c1 ce 06          	ror    $0x6,%r14d
    8603:	45 31 f2             	xor    %r14d,%r10d
    8606:	45 89 ce             	mov    %r9d,%r14d
    8609:	41 c1 c6 07          	rol    $0x7,%r14d
    860d:	45 31 f2             	xor    %r14d,%r10d
    8610:	41 89 c6             	mov    %eax,%r14d
    8613:	41 01 f2             	add    %esi,%r10d
    8616:	89 c6                	mov    %eax,%esi
    8618:	41 c1 ce 0d          	ror    $0xd,%r14d
    861c:	44 03 54 24 18       	add    0x18(%rsp),%r10d
    8621:	c1 ce 02             	ror    $0x2,%esi
    8624:	44 01 d5             	add    %r10d,%ebp
    8627:	41 31 f6             	xor    %esi,%r14d
    862a:	89 c6                	mov    %eax,%esi
    862c:	c1 c6 0a             	rol    $0xa,%esi
    862f:	41 31 f6             	xor    %esi,%r14d
    8632:	44 89 c6             	mov    %r8d,%esi
    8635:	09 c6                	or     %eax,%esi
    8637:	21 d6                	and    %edx,%esi
    8639:	44 09 fe             	or     %r15d,%esi
    863c:	41 89 ff             	mov    %edi,%r15d
    863f:	44 01 f6             	add    %r14d,%esi
    8642:	41 89 fe             	mov    %edi,%r14d
    8645:	41 c1 c7 0f          	rol    $0xf,%r15d
    8649:	41 c1 c6 0d          	rol    $0xd,%r14d
    864d:	c1 ef 0a             	shr    $0xa,%edi
    8650:	44 01 d6             	add    %r10d,%esi
    8653:	45 8b 54 24 20       	mov    0x20(%r12),%r10d
    8658:	45 31 fe             	xor    %r15d,%r14d
    865b:	41 31 fe             	xor    %edi,%r14d
    865e:	41 8b 7c 24 40       	mov    0x40(%r12),%edi
    8663:	44 01 ef             	add    %r13d,%edi
    8666:	45 89 d5             	mov    %r10d,%r13d
    8669:	41 01 fe             	add    %edi,%r14d
    866c:	44 89 d7             	mov    %r10d,%edi
    866f:	41 c1 cd 07          	ror    $0x7,%r13d
    8673:	c1 c7 0e             	rol    $0xe,%edi
    8676:	44 31 ef             	xor    %r13d,%edi
    8679:	45 89 d5             	mov    %r10d,%r13d
    867c:	41 c1 ed 03          	shr    $0x3,%r13d
    8680:	44 31 ef             	xor    %r13d,%edi
    8683:	41 89 ed             	mov    %ebp,%r13d
    8686:	44 01 f7             	add    %r14d,%edi
    8689:	41 89 ee             	mov    %ebp,%r14d
    868c:	41 c1 cd 0b          	ror    $0xb,%r13d
    8690:	41 c1 ce 06          	ror    $0x6,%r14d
    8694:	01 fb                	add    %edi,%ebx
    8696:	41 89 7c 24 5c       	mov    %edi,0x5c(%r12)
    869b:	45 31 f5             	xor    %r14d,%r13d
    869e:	41 89 ee             	mov    %ebp,%r14d
    86a1:	41 c1 c6 07          	rol    $0x7,%r14d
    86a5:	45 31 f5             	xor    %r14d,%r13d
    86a8:	45 89 de             	mov    %r11d,%r14d
    86ab:	45 31 ce             	xor    %r9d,%r14d
    86ae:	41 21 ee             	and    %ebp,%r14d
    86b1:	45 31 de             	xor    %r11d,%r14d
    86b4:	44 01 f3             	add    %r14d,%ebx
    86b7:	41 89 c6             	mov    %eax,%r14d
    86ba:	44 01 eb             	add    %r13d,%ebx
    86bd:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    86c2:	41 21 f6             	and    %esi,%r14d
    86c5:	41 01 dd             	add    %ebx,%r13d
    86c8:	89 f3                	mov    %esi,%ebx
    86ca:	46 8d 3c 2a          	lea    (%rdx,%r13,1),%r15d
    86ce:	89 f2                	mov    %esi,%edx
    86d0:	c1 cb 02             	ror    $0x2,%ebx
    86d3:	c1 ca 0d             	ror    $0xd,%edx
    86d6:	31 da                	xor    %ebx,%edx
    86d8:	89 f3                	mov    %esi,%ebx
    86da:	c1 c3 0a             	rol    $0xa,%ebx
    86dd:	31 da                	xor    %ebx,%edx
    86df:	89 c3                	mov    %eax,%ebx
    86e1:	09 f3                	or     %esi,%ebx
    86e3:	44 21 c3             	and    %r8d,%ebx
    86e6:	44 09 f3             	or     %r14d,%ebx
    86e9:	41 89 ce             	mov    %ecx,%r14d
    86ec:	01 d3                	add    %edx,%ebx
    86ee:	41 c1 c6 0f          	rol    $0xf,%r14d
    86f2:	41 8b 54 24 24       	mov    0x24(%r12),%edx
    86f7:	45 03 54 24 44       	add    0x44(%r12),%r10d
    86fc:	44 01 eb             	add    %r13d,%ebx
    86ff:	41 89 cd             	mov    %ecx,%r13d
    8702:	c1 e9 0a             	shr    $0xa,%ecx
    8705:	41 c1 c5 0d          	rol    $0xd,%r13d
    8709:	45 31 f5             	xor    %r14d,%r13d
    870c:	41 31 cd             	xor    %ecx,%r13d
    870f:	89 d1                	mov    %edx,%ecx
    8711:	45 01 d5             	add    %r10d,%r13d
    8714:	41 89 d2             	mov    %edx,%r10d
    8717:	c1 c9 07             	ror    $0x7,%ecx
    871a:	41 c1 c2 0e          	rol    $0xe,%r10d
    871e:	41 31 ca             	xor    %ecx,%r10d
    8721:	89 d1                	mov    %edx,%ecx
    8723:	c1 e9 03             	shr    $0x3,%ecx
    8726:	41 31 ca             	xor    %ecx,%r10d
    8729:	44 89 f9             	mov    %r15d,%ecx
    872c:	45 01 ea             	add    %r13d,%r10d
    872f:	45 89 fd             	mov    %r15d,%r13d
    8732:	c1 c9 0b             	ror    $0xb,%ecx
    8735:	41 c1 cd 06          	ror    $0x6,%r13d
    8739:	45 01 d3             	add    %r10d,%r11d
    873c:	45 89 54 24 60       	mov    %r10d,0x60(%r12)
    8741:	41 89 f2             	mov    %esi,%r10d
    8744:	44 31 e9             	xor    %r13d,%ecx
    8747:	45 89 fd             	mov    %r15d,%r13d
    874a:	41 21 da             	and    %ebx,%r10d
    874d:	41 c1 c5 07          	rol    $0x7,%r13d
    8751:	44 31 e9             	xor    %r13d,%ecx
    8754:	45 89 cd             	mov    %r9d,%r13d
    8757:	41 31 ed             	xor    %ebp,%r13d
    875a:	45 21 fd             	and    %r15d,%r13d
    875d:	45 31 cd             	xor    %r9d,%r13d
    8760:	45 01 eb             	add    %r13d,%r11d
    8763:	41 01 cb             	add    %ecx,%r11d
    8766:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    876a:	44 01 d9             	add    %r11d,%ecx
    876d:	41 89 db             	mov    %ebx,%r11d
    8770:	45 8d 34 08          	lea    (%r8,%rcx,1),%r14d
    8774:	41 89 d8             	mov    %ebx,%r8d
    8777:	41 c1 cb 02          	ror    $0x2,%r11d
    877b:	41 c1 c8 0d          	ror    $0xd,%r8d
    877f:	45 89 f5             	mov    %r14d,%r13d
    8782:	45 31 d8             	xor    %r11d,%r8d
    8785:	41 89 db             	mov    %ebx,%r11d
    8788:	41 c1 c3 0a          	rol    $0xa,%r11d
    878c:	45 31 d8             	xor    %r11d,%r8d
    878f:	41 89 f3             	mov    %esi,%r11d
    8792:	41 09 db             	or     %ebx,%r11d
    8795:	41 21 c3             	and    %eax,%r11d
    8798:	45 09 d3             	or     %r10d,%r11d
    879b:	41 89 fa             	mov    %edi,%r10d
    879e:	45 01 c3             	add    %r8d,%r11d
    87a1:	41 c1 c2 0f          	rol    $0xf,%r10d
    87a5:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
    87aa:	41 01 cb             	add    %ecx,%r11d
    87ad:	89 f9                	mov    %edi,%ecx
    87af:	c1 ef 0a             	shr    $0xa,%edi
    87b2:	c1 c1 0d             	rol    $0xd,%ecx
    87b5:	44 31 d1             	xor    %r10d,%ecx
    87b8:	41 89 ea             	mov    %ebp,%r10d
    87bb:	31 f9                	xor    %edi,%ecx
    87bd:	03 14 24             	add    (%rsp),%edx
    87c0:	44 89 c7             	mov    %r8d,%edi
    87c3:	41 c1 cd 06          	ror    $0x6,%r13d
    87c7:	01 d1                	add    %edx,%ecx
    87c9:	44 89 c2             	mov    %r8d,%edx
    87cc:	c1 c7 0e             	rol    $0xe,%edi
    87cf:	45 31 fa             	xor    %r15d,%r10d
    87d2:	c1 ca 07             	ror    $0x7,%edx
    87d5:	41 c1 e8 03          	shr    $0x3,%r8d
    87d9:	45 21 f2             	and    %r14d,%r10d
    87dc:	31 d7                	xor    %edx,%edi
    87de:	44 89 f2             	mov    %r14d,%edx
    87e1:	41 31 ea             	xor    %ebp,%r10d
    87e4:	c1 ca 0b             	ror    $0xb,%edx
    87e7:	44 31 c7             	xor    %r8d,%edi
    87ea:	41 31 d5             	xor    %edx,%r13d
    87ed:	44 89 f2             	mov    %r14d,%edx
    87f0:	01 f9                	add    %edi,%ecx
    87f2:	89 df                	mov    %ebx,%edi
    87f4:	c1 c2 07             	rol    $0x7,%edx
    87f7:	41 89 4c 24 64       	mov    %ecx,0x64(%r12)
    87fc:	41 01 c9             	add    %ecx,%r9d
    87ff:	44 89 d9             	mov    %r11d,%ecx
    8802:	41 31 d5             	xor    %edx,%r13d
    8805:	44 89 da             	mov    %r11d,%edx
    8808:	c1 c9 0d             	ror    $0xd,%ecx
    880b:	44 21 df             	and    %r11d,%edi
    880e:	c1 ca 02             	ror    $0x2,%edx
    8811:	45 01 d1             	add    %r10d,%r9d
    8814:	31 ca                	xor    %ecx,%edx
    8816:	44 89 d9             	mov    %r11d,%ecx
    8819:	45 01 e9             	add    %r13d,%r9d
    881c:	44 03 4c 24 28       	add    0x28(%rsp),%r9d
    8821:	c1 c1 0a             	rol    $0xa,%ecx
    8824:	44 01 c8             	add    %r9d,%eax
    8827:	31 d1                	xor    %edx,%ecx
    8829:	89 da                	mov    %ebx,%edx
    882b:	44 09 da             	or     %r11d,%edx
    882e:	21 f2                	and    %esi,%edx
    8830:	09 fa                	or     %edi,%edx
    8832:	01 ca                	add    %ecx,%edx
    8834:	49 83 c4 20          	add    $0x20,%r12
    8838:	48 83 44 24 08 20    	addq   $0x20,0x8(%rsp)
    883e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8843:	45 8d 2c 11          	lea    (%r9,%rdx,1),%r13d
    8847:	4c 39 64 24 30       	cmp    %r12,0x30(%rsp)
    884c:	0f 85 76 fa ff ff    	jne    82c8 <mbedtls_internal_sha256_process+0x508>
    8852:	89 84 24 68 01 00 00 	mov    %eax,0x168(%rsp)
    8859:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    885e:	31 c0                	xor    %eax,%eax
    8860:	89 54 24 54          	mov    %edx,0x54(%rsp)
    8864:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    8869:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
    8870:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
    8877:	00 
    8878:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
    887f:	00 
    8880:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
    8887:	00 
    8888:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
    888f:	00 
    8890:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
    8897:	89 b4 24 64 01 00 00 	mov    %esi,0x164(%rsp)
    889e:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
    88a3:	eb 07                	jmp    88ac <mbedtls_internal_sha256_process+0xaec>
    88a5:	0f 1f 00             	nopl   (%rax)
    88a8:	44 8b 2c 01          	mov    (%rcx,%rax,1),%r13d
    88ac:	44 01 6c 02 08       	add    %r13d,0x8(%rdx,%rax,1)
    88b1:	48 83 c0 04          	add    $0x4,%rax
    88b5:	48 83 f8 20          	cmp    $0x20,%rax
    88b9:	75 ed                	jne    88a8 <mbedtls_internal_sha256_process+0xae8>
    88bb:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    88c0:	be 28 01 00 00       	mov    $0x128,%esi
    88c5:	e8 66 a0 00 00       	callq  12930 <mbedtls_platform_zeroize>
    88ca:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
    88d1:	00 
    88d2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    88d9:	00 00 
    88db:	75 14                	jne    88f1 <mbedtls_internal_sha256_process+0xb31>
    88dd:	48 81 c4 88 01 00 00 	add    $0x188,%rsp
    88e4:	31 c0                	xor    %eax,%eax
    88e6:	5b                   	pop    %rbx
    88e7:	5d                   	pop    %rbp
    88e8:	41 5c                	pop    %r12
    88ea:	41 5d                	pop    %r13
    88ec:	41 5e                	pop    %r14
    88ee:	41 5f                	pop    %r15
    88f0:	c3                   	retq   
    88f1:	e8 8a a9 ff ff       	callq  3280 <__stack_chk_fail@plt>
    88f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    88fd:	00 00 00 

0000000000008900 <mbedtls_sha256_update.part.0>:
    8900:	41 56                	push   %r14
    8902:	41 55                	push   %r13
    8904:	49 89 d5             	mov    %rdx,%r13
    8907:	ba 40 00 00 00       	mov    $0x40,%edx
    890c:	41 54                	push   %r12
    890e:	49 89 fc             	mov    %rdi,%r12
    8911:	55                   	push   %rbp
    8912:	48 89 f5             	mov    %rsi,%rbp
    8915:	53                   	push   %rbx
    8916:	8b 07                	mov    (%rdi),%eax
    8918:	41 89 c6             	mov    %eax,%r14d
    891b:	41 83 e6 3f          	and    $0x3f,%r14d
    891f:	44 29 f2             	sub    %r14d,%edx
    8922:	44 01 e8             	add    %r13d,%eax
    8925:	89 07                	mov    %eax,(%rdi)
    8927:	89 d3                	mov    %edx,%ebx
    8929:	73 04                	jae    892f <mbedtls_sha256_update.part.0+0x2f>
    892b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
    892f:	45 85 f6             	test   %r14d,%r14d
    8932:	74 05                	je     8939 <mbedtls_sha256_update.part.0+0x39>
    8934:	4c 39 eb             	cmp    %r13,%rbx
    8937:	76 69                	jbe    89a2 <mbedtls_sha256_update.part.0+0xa2>
    8939:	31 db                	xor    %ebx,%ebx
    893b:	49 83 fd 3f          	cmp    $0x3f,%r13
    893f:	0f 86 69 01 00 00    	jbe    8aae <mbedtls_sha256_update.part.0+0x1ae>
    8945:	0f 1f 00             	nopl   (%rax)
    8948:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
    894d:	4c 89 e7             	mov    %r12,%rdi
    8950:	e8 6b f4 ff ff       	callq  7dc0 <mbedtls_internal_sha256_process>
    8955:	85 c0                	test   %eax,%eax
    8957:	75 37                	jne    8990 <mbedtls_sha256_update.part.0+0x90>
    8959:	48 83 c3 40          	add    $0x40,%rbx
    895d:	4c 89 e8             	mov    %r13,%rax
    8960:	48 29 d8             	sub    %rbx,%rax
    8963:	48 83 f8 3f          	cmp    $0x3f,%rax
    8967:	77 df                	ja     8948 <mbedtls_sha256_update.part.0+0x48>
    8969:	48 83 fb 3f          	cmp    $0x3f,%rbx
    896d:	76 21                	jbe    8990 <mbedtls_sha256_update.part.0+0x90>
    896f:	48 01 dd             	add    %rbx,%rbp
    8972:	45 31 c0             	xor    %r8d,%r8d
    8975:	48 85 c0             	test   %rax,%rax
    8978:	0f 85 b4 00 00 00    	jne    8a32 <mbedtls_sha256_update.part.0+0x132>
    897e:	5b                   	pop    %rbx
    897f:	44 89 c0             	mov    %r8d,%eax
    8982:	5d                   	pop    %rbp
    8983:	41 5c                	pop    %r12
    8985:	41 5d                	pop    %r13
    8987:	41 5e                	pop    %r14
    8989:	c3                   	retq   
    898a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8990:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    8996:	5b                   	pop    %rbx
    8997:	5d                   	pop    %rbp
    8998:	44 89 c0             	mov    %r8d,%eax
    899b:	41 5c                	pop    %r12
    899d:	41 5d                	pop    %r13
    899f:	41 5e                	pop    %r14
    89a1:	c3                   	retq   
    89a2:	4d 8d 44 24 28       	lea    0x28(%r12),%r8
    89a7:	44 89 f0             	mov    %r14d,%eax
    89aa:	4c 01 c0             	add    %r8,%rax
    89ad:	83 fa 08             	cmp    $0x8,%edx
    89b0:	73 3c                	jae    89ee <mbedtls_sha256_update.part.0+0xee>
    89b2:	f6 c2 04             	test   $0x4,%dl
    89b5:	0f 85 fb 00 00 00    	jne    8ab6 <mbedtls_sha256_update.part.0+0x1b6>
    89bb:	85 d2                	test   %edx,%edx
    89bd:	74 0f                	je     89ce <mbedtls_sha256_update.part.0+0xce>
    89bf:	0f b6 4d 00          	movzbl 0x0(%rbp),%ecx
    89c3:	83 e2 02             	and    $0x2,%edx
    89c6:	88 08                	mov    %cl,(%rax)
    89c8:	0f 85 09 01 00 00    	jne    8ad7 <mbedtls_sha256_update.part.0+0x1d7>
    89ce:	4c 89 c6             	mov    %r8,%rsi
    89d1:	4c 89 e7             	mov    %r12,%rdi
    89d4:	e8 e7 f3 ff ff       	callq  7dc0 <mbedtls_internal_sha256_process>
    89d9:	41 89 c0             	mov    %eax,%r8d
    89dc:	85 c0                	test   %eax,%eax
    89de:	75 9e                	jne    897e <mbedtls_sha256_update.part.0+0x7e>
    89e0:	48 01 dd             	add    %rbx,%rbp
    89e3:	49 29 dd             	sub    %rbx,%r13
    89e6:	45 31 f6             	xor    %r14d,%r14d
    89e9:	e9 4b ff ff ff       	jmpq   8939 <mbedtls_sha256_update.part.0+0x39>
    89ee:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    89f2:	48 8d 70 08          	lea    0x8(%rax),%rsi
    89f6:	49 89 e9             	mov    %rbp,%r9
    89f9:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    89fd:	48 89 08             	mov    %rcx,(%rax)
    8a00:	48 8b 4c 1d f8       	mov    -0x8(%rbp,%rbx,1),%rcx
    8a05:	48 89 4c 18 f8       	mov    %rcx,-0x8(%rax,%rbx,1)
    8a0a:	48 29 f0             	sub    %rsi,%rax
    8a0d:	01 c2                	add    %eax,%edx
    8a0f:	49 29 c1             	sub    %rax,%r9
    8a12:	83 e2 f8             	and    $0xfffffff8,%edx
    8a15:	83 fa 08             	cmp    $0x8,%edx
    8a18:	72 b4                	jb     89ce <mbedtls_sha256_update.part.0+0xce>
    8a1a:	83 e2 f8             	and    $0xfffffff8,%edx
    8a1d:	31 c0                	xor    %eax,%eax
    8a1f:	89 c1                	mov    %eax,%ecx
    8a21:	83 c0 08             	add    $0x8,%eax
    8a24:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
    8a28:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    8a2c:	39 d0                	cmp    %edx,%eax
    8a2e:	72 ef                	jb     8a1f <mbedtls_sha256_update.part.0+0x11f>
    8a30:	eb 9c                	jmp    89ce <mbedtls_sha256_update.part.0+0xce>
    8a32:	4b 8d 4c 34 28       	lea    0x28(%r12,%r14,1),%rcx
    8a37:	89 c2                	mov    %eax,%edx
    8a39:	83 f8 08             	cmp    $0x8,%eax
    8a3c:	73 29                	jae    8a67 <mbedtls_sha256_update.part.0+0x167>
    8a3e:	a8 04                	test   $0x4,%al
    8a40:	0f 85 82 00 00 00    	jne    8ac8 <mbedtls_sha256_update.part.0+0x1c8>
    8a46:	85 d2                	test   %edx,%edx
    8a48:	74 15                	je     8a5f <mbedtls_sha256_update.part.0+0x15f>
    8a4a:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    8a4e:	88 01                	mov    %al,(%rcx)
    8a50:	f6 c2 02             	test   $0x2,%dl
    8a53:	74 0a                	je     8a5f <mbedtls_sha256_update.part.0+0x15f>
    8a55:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
    8a5a:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    8a5f:	45 31 c0             	xor    %r8d,%r8d
    8a62:	e9 17 ff ff ff       	jmpq   897e <mbedtls_sha256_update.part.0+0x7e>
    8a67:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    8a6b:	48 89 11             	mov    %rdx,(%rcx)
    8a6e:	89 c2                	mov    %eax,%edx
    8a70:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
    8a75:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
    8a7a:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    8a7e:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    8a82:	48 29 f1             	sub    %rsi,%rcx
    8a85:	48 89 ca             	mov    %rcx,%rdx
    8a88:	48 29 cd             	sub    %rcx,%rbp
    8a8b:	01 c2                	add    %eax,%edx
    8a8d:	83 e2 f8             	and    $0xfffffff8,%edx
    8a90:	83 fa 08             	cmp    $0x8,%edx
    8a93:	72 ca                	jb     8a5f <mbedtls_sha256_update.part.0+0x15f>
    8a95:	83 e2 f8             	and    $0xfffffff8,%edx
    8a98:	31 c0                	xor    %eax,%eax
    8a9a:	89 c1                	mov    %eax,%ecx
    8a9c:	83 c0 08             	add    $0x8,%eax
    8a9f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
    8aa4:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    8aa8:	39 d0                	cmp    %edx,%eax
    8aaa:	72 ee                	jb     8a9a <mbedtls_sha256_update.part.0+0x19a>
    8aac:	eb b1                	jmp    8a5f <mbedtls_sha256_update.part.0+0x15f>
    8aae:	4c 89 e8             	mov    %r13,%rax
    8ab1:	e9 bc fe ff ff       	jmpq   8972 <mbedtls_sha256_update.part.0+0x72>
    8ab6:	8b 55 00             	mov    0x0(%rbp),%edx
    8ab9:	89 10                	mov    %edx,(%rax)
    8abb:	8b 54 1d fc          	mov    -0x4(%rbp,%rbx,1),%edx
    8abf:	89 54 18 fc          	mov    %edx,-0x4(%rax,%rbx,1)
    8ac3:	e9 06 ff ff ff       	jmpq   89ce <mbedtls_sha256_update.part.0+0xce>
    8ac8:	8b 45 00             	mov    0x0(%rbp),%eax
    8acb:	89 01                	mov    %eax,(%rcx)
    8acd:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
    8ad1:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    8ad5:	eb 88                	jmp    8a5f <mbedtls_sha256_update.part.0+0x15f>
    8ad7:	0f b7 54 1d fe       	movzwl -0x2(%rbp,%rbx,1),%edx
    8adc:	66 89 54 18 fe       	mov    %dx,-0x2(%rax,%rbx,1)
    8ae1:	e9 e8 fe ff ff       	jmpq   89ce <mbedtls_sha256_update.part.0+0xce>
    8ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8aed:	00 00 00 

0000000000008af0 <mbedtls_sha256_update>:
    8af0:	f3 0f 1e fa          	endbr64 
    8af4:	48 85 d2             	test   %rdx,%rdx
    8af7:	74 07                	je     8b00 <mbedtls_sha256_update+0x10>
    8af9:	e9 02 fe ff ff       	jmpq   8900 <mbedtls_sha256_update.part.0>
    8afe:	66 90                	xchg   %ax,%ax
    8b00:	31 c0                	xor    %eax,%eax
    8b02:	c3                   	retq   
    8b03:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    8b0a:	00 00 00 00 
    8b0e:	66 90                	xchg   %ax,%ax

0000000000008b10 <mbedtls_sha256_finish>:
    8b10:	f3 0f 1e fa          	endbr64 
    8b14:	41 54                	push   %r12
    8b16:	4c 8d 67 28          	lea    0x28(%rdi),%r12
    8b1a:	55                   	push   %rbp
    8b1b:	48 89 f5             	mov    %rsi,%rbp
    8b1e:	53                   	push   %rbx
    8b1f:	8b 07                	mov    (%rdi),%eax
    8b21:	48 89 fb             	mov    %rdi,%rbx
    8b24:	83 e0 3f             	and    $0x3f,%eax
    8b27:	8d 48 01             	lea    0x1(%rax),%ecx
    8b2a:	c6 44 07 28 80       	movb   $0x80,0x28(%rdi,%rax,1)
    8b2f:	89 c8                	mov    %ecx,%eax
    8b31:	4c 01 e0             	add    %r12,%rax
    8b34:	83 f9 38             	cmp    $0x38,%ecx
    8b37:	77 57                	ja     8b90 <mbedtls_sha256_finish+0x80>
    8b39:	ba 38 00 00 00       	mov    $0x38,%edx
    8b3e:	31 ff                	xor    %edi,%edi
    8b40:	29 ca                	sub    %ecx,%edx
    8b42:	83 fa 08             	cmp    $0x8,%edx
    8b45:	72 79                	jb     8bc0 <mbedtls_sha256_finish+0xb0>
    8b47:	89 d1                	mov    %edx,%ecx
    8b49:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8b50:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
    8b57:	00 00 
    8b59:	48 8d 48 08          	lea    0x8(%rax),%rcx
    8b5d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    8b61:	48 29 c8             	sub    %rcx,%rax
    8b64:	01 c2                	add    %eax,%edx
    8b66:	83 e2 f8             	and    $0xfffffff8,%edx
    8b69:	83 fa 08             	cmp    $0x8,%edx
    8b6c:	0f 82 8b 00 00 00    	jb     8bfd <mbedtls_sha256_finish+0xed>
    8b72:	83 e2 f8             	and    $0xfffffff8,%edx
    8b75:	31 c0                	xor    %eax,%eax
    8b77:	89 c6                	mov    %eax,%esi
    8b79:	83 c0 08             	add    $0x8,%eax
    8b7c:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
    8b80:	39 d0                	cmp    %edx,%eax
    8b82:	72 f3                	jb     8b77 <mbedtls_sha256_finish+0x67>
    8b84:	eb 77                	jmp    8bfd <mbedtls_sha256_finish+0xed>
    8b86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8b8d:	00 00 00 
    8b90:	ba 40 00 00 00       	mov    $0x40,%edx
    8b95:	29 ca                	sub    %ecx,%edx
    8b97:	89 d1                	mov    %edx,%ecx
    8b99:	74 0f                	je     8baa <mbedtls_sha256_finish+0x9a>
    8b9b:	31 d2                	xor    %edx,%edx
    8b9d:	89 d6                	mov    %edx,%esi
    8b9f:	83 c2 01             	add    $0x1,%edx
    8ba2:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
    8ba6:	39 ca                	cmp    %ecx,%edx
    8ba8:	72 f3                	jb     8b9d <mbedtls_sha256_finish+0x8d>
    8baa:	4c 89 e6             	mov    %r12,%rsi
    8bad:	48 89 df             	mov    %rbx,%rdi
    8bb0:	e8 0b f2 ff ff       	callq  7dc0 <mbedtls_internal_sha256_process>
    8bb5:	85 c0                	test   %eax,%eax
    8bb7:	74 27                	je     8be0 <mbedtls_sha256_finish+0xd0>
    8bb9:	5b                   	pop    %rbx
    8bba:	5d                   	pop    %rbp
    8bbb:	41 5c                	pop    %r12
    8bbd:	c3                   	retq   
    8bbe:	66 90                	xchg   %ax,%ax
    8bc0:	f6 c2 04             	test   $0x4,%dl
    8bc3:	0f 85 b7 00 00 00    	jne    8c80 <mbedtls_sha256_finish+0x170>
    8bc9:	85 d2                	test   %edx,%edx
    8bcb:	74 30                	je     8bfd <mbedtls_sha256_finish+0xed>
    8bcd:	c6 00 00             	movb   $0x0,(%rax)
    8bd0:	f6 c2 02             	test   $0x2,%dl
    8bd3:	74 28                	je     8bfd <mbedtls_sha256_finish+0xed>
    8bd5:	31 c9                	xor    %ecx,%ecx
    8bd7:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
    8bdc:	eb 1f                	jmp    8bfd <mbedtls_sha256_finish+0xed>
    8bde:	66 90                	xchg   %ax,%ax
    8be0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8be4:	0f 11 43 28          	movups %xmm0,0x28(%rbx)
    8be8:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
    8bef:	00 00 
    8bf1:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
    8bf7:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
    8bfd:	8b 13                	mov    (%rbx),%edx
    8bff:	8b 43 04             	mov    0x4(%rbx),%eax
    8c02:	4c 89 e6             	mov    %r12,%rsi
    8c05:	48 89 df             	mov    %rbx,%rdi
    8c08:	89 d1                	mov    %edx,%ecx
    8c0a:	c1 e0 03             	shl    $0x3,%eax
    8c0d:	c1 e9 1d             	shr    $0x1d,%ecx
    8c10:	c1 e2 03             	shl    $0x3,%edx
    8c13:	09 c8                	or     %ecx,%eax
    8c15:	0f ca                	bswap  %edx
    8c17:	89 53 64             	mov    %edx,0x64(%rbx)
    8c1a:	0f c8                	bswap  %eax
    8c1c:	89 43 60             	mov    %eax,0x60(%rbx)
    8c1f:	e8 9c f1 ff ff       	callq  7dc0 <mbedtls_internal_sha256_process>
    8c24:	85 c0                	test   %eax,%eax
    8c26:	75 91                	jne    8bb9 <mbedtls_sha256_finish+0xa9>
    8c28:	8b 53 08             	mov    0x8(%rbx),%edx
    8c2b:	0f ca                	bswap  %edx
    8c2d:	89 55 00             	mov    %edx,0x0(%rbp)
    8c30:	8b 53 0c             	mov    0xc(%rbx),%edx
    8c33:	0f ca                	bswap  %edx
    8c35:	89 55 04             	mov    %edx,0x4(%rbp)
    8c38:	8b 53 10             	mov    0x10(%rbx),%edx
    8c3b:	0f ca                	bswap  %edx
    8c3d:	89 55 08             	mov    %edx,0x8(%rbp)
    8c40:	8b 53 14             	mov    0x14(%rbx),%edx
    8c43:	0f ca                	bswap  %edx
    8c45:	89 55 0c             	mov    %edx,0xc(%rbp)
    8c48:	8b 53 18             	mov    0x18(%rbx),%edx
    8c4b:	0f ca                	bswap  %edx
    8c4d:	89 55 10             	mov    %edx,0x10(%rbp)
    8c50:	8b 53 1c             	mov    0x1c(%rbx),%edx
    8c53:	0f ca                	bswap  %edx
    8c55:	89 55 14             	mov    %edx,0x14(%rbp)
    8c58:	8b 53 20             	mov    0x20(%rbx),%edx
    8c5b:	0f ca                	bswap  %edx
    8c5d:	89 55 18             	mov    %edx,0x18(%rbp)
    8c60:	8b 53 68             	mov    0x68(%rbx),%edx
    8c63:	85 d2                	test   %edx,%edx
    8c65:	0f 85 4e ff ff ff    	jne    8bb9 <mbedtls_sha256_finish+0xa9>
    8c6b:	8b 53 24             	mov    0x24(%rbx),%edx
    8c6e:	5b                   	pop    %rbx
    8c6f:	0f ca                	bswap  %edx
    8c71:	89 55 1c             	mov    %edx,0x1c(%rbp)
    8c74:	5d                   	pop    %rbp
    8c75:	41 5c                	pop    %r12
    8c77:	c3                   	retq   
    8c78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8c7f:	00 
    8c80:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    8c86:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
    8c8d:	00 
    8c8e:	e9 6a ff ff ff       	jmpq   8bfd <mbedtls_sha256_finish+0xed>
    8c93:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    8c9a:	00 00 00 00 
    8c9e:	66 90                	xchg   %ax,%ax

0000000000008ca0 <mbedtls_sha256_common_self_test>:
    8ca0:	41 57                	push   %r15
    8ca2:	41 56                	push   %r14
    8ca4:	41 55                	push   %r13
    8ca6:	41 89 f5             	mov    %esi,%r13d
    8ca9:	41 54                	push   %r12
    8cab:	41 89 fc             	mov    %edi,%r12d
    8cae:	bf 00 04 00 00       	mov    $0x400,%edi
    8cb3:	55                   	push   %rbp
    8cb4:	48 8d 2d 65 f8 00 00 	lea    0xf865(%rip),%rbp        # 18520 <sha224_test_sum>
    8cbb:	53                   	push   %rbx
    8cbc:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    8cc3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8cca:	00 00 
    8ccc:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    8cd3:	00 
    8cd4:	31 c0                	xor    %eax,%eax
    8cd6:	85 f6                	test   %esi,%esi
    8cd8:	48 8d 05 e1 f7 00 00 	lea    0xf7e1(%rip),%rax        # 184c0 <sha256_test_sum>
    8cdf:	be 01 00 00 00       	mov    $0x1,%esi
    8ce4:	48 0f 44 e8          	cmove  %rax,%rbp
    8ce8:	e8 f3 a5 ff ff       	callq  32e0 <calloc@plt>
    8ced:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8cf2:	48 85 c0             	test   %rax,%rax
    8cf5:	0f 84 a9 02 00 00    	je     8fa4 <mbedtls_sha256_common_self_test+0x304>
    8cfb:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    8d00:	31 c0                	xor    %eax,%eax
    8d02:	b9 0d 00 00 00       	mov    $0xd,%ecx
    8d07:	31 db                	xor    %ebx,%ebx
    8d09:	4c 89 f7             	mov    %r14,%rdi
    8d0c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    8d0f:	b8 08 00 00 00       	mov    $0x8,%eax
    8d14:	44 29 e8             	sub    %r13d,%eax
    8d17:	89 c1                	mov    %eax,%ecx
    8d19:	c1 e0 02             	shl    $0x2,%eax
    8d1c:	c1 e1 05             	shl    $0x5,%ecx
    8d1f:	48 89 04 24          	mov    %rax,(%rsp)
    8d23:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
    8d27:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    8d2d:	45 85 e4             	test   %r12d,%r12d
    8d30:	0f 85 ea 01 00 00    	jne    8f20 <mbedtls_sha256_common_self_test+0x280>
    8d36:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    8d3d:	00 00 
    8d3f:	45 85 ed             	test   %r13d,%r13d
    8d42:	0f 85 28 01 00 00    	jne    8e70 <mbedtls_sha256_common_self_test+0x1d0>
    8d48:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
    8d4f:	ae 67 bb 
    8d52:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
    8d59:	00 
    8d5a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    8d5f:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
    8d66:	f5 4f a5 
    8d69:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    8d6e:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
    8d75:	68 05 9b 
    8d78:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    8d7d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
    8d84:	cd e0 5b 
    8d87:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    8d8c:	48 83 fb 02          	cmp    $0x2,%rbx
    8d90:	0f 84 28 01 00 00    	je     8ebe <mbedtls_sha256_common_self_test+0x21e>
    8d96:	48 8d 05 e3 f7 00 00 	lea    0xf7e3(%rip),%rax        # 18580 <sha_test_buflen>
    8d9d:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    8da1:	48 85 d2             	test   %rdx,%rdx
    8da4:	74 29                	je     8dcf <mbedtls_sha256_common_self_test+0x12f>
    8da6:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    8dad:	00 
    8dae:	4c 89 f7             	mov    %r14,%rdi
    8db1:	48 29 d8             	sub    %rbx,%rax
    8db4:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    8db8:	48 8d 05 e1 f7 00 00 	lea    0xf7e1(%rip),%rax        # 185a0 <sha_test_buf>
    8dbf:	48 01 c6             	add    %rax,%rsi
    8dc2:	e8 39 fb ff ff       	callq  8900 <mbedtls_sha256_update.part.0>
    8dc7:	85 c0                	test   %eax,%eax
    8dc9:	0f 85 3f 01 00 00    	jne    8f0e <mbedtls_sha256_common_self_test+0x26e>
    8dcf:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
    8dd6:	00 
    8dd7:	4c 89 f7             	mov    %r14,%rdi
    8dda:	4c 89 fe             	mov    %r15,%rsi
    8ddd:	e8 2e fd ff ff       	callq  8b10 <mbedtls_sha256_finish>
    8de2:	85 c0                	test   %eax,%eax
    8de4:	0f 85 24 01 00 00    	jne    8f0e <mbedtls_sha256_common_self_test+0x26e>
    8dea:	48 8b 14 24          	mov    (%rsp),%rdx
    8dee:	48 89 ee             	mov    %rbp,%rsi
    8df1:	4c 89 ff             	mov    %r15,%rdi
    8df4:	e8 c7 a4 ff ff       	callq  32c0 <memcmp@plt>
    8df9:	85 c0                	test   %eax,%eax
    8dfb:	0f 85 8f 01 00 00    	jne    8f90 <mbedtls_sha256_common_self_test+0x2f0>
    8e01:	45 85 e4             	test   %r12d,%r12d
    8e04:	0f 85 36 01 00 00    	jne    8f40 <mbedtls_sha256_common_self_test+0x2a0>
    8e0a:	48 83 c3 01          	add    $0x1,%rbx
    8e0e:	48 83 c5 20          	add    $0x20,%rbp
    8e12:	48 83 fb 03          	cmp    $0x3,%rbx
    8e16:	0f 85 11 ff ff ff    	jne    8d2d <mbedtls_sha256_common_self_test+0x8d>
    8e1c:	45 85 e4             	test   %r12d,%r12d
    8e1f:	0f 85 33 01 00 00    	jne    8f58 <mbedtls_sha256_common_self_test+0x2b8>
    8e25:	be 6c 00 00 00       	mov    $0x6c,%esi
    8e2a:	4c 89 f7             	mov    %r14,%rdi
    8e2d:	45 89 e5             	mov    %r12d,%r13d
    8e30:	e8 fb 9a 00 00       	callq  12930 <mbedtls_platform_zeroize>
    8e35:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8e3a:	e8 c1 a3 ff ff       	callq  3200 <free@plt>
    8e3f:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
    8e46:	00 
    8e47:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8e4e:	00 00 
    8e50:	0f 85 6e 01 00 00    	jne    8fc4 <mbedtls_sha256_common_self_test+0x324>
    8e56:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    8e5d:	44 89 e8             	mov    %r13d,%eax
    8e60:	5b                   	pop    %rbx
    8e61:	5d                   	pop    %rbp
    8e62:	41 5c                	pop    %r12
    8e64:	41 5d                	pop    %r13
    8e66:	41 5e                	pop    %r14
    8e68:	41 5f                	pop    %r15
    8e6a:	c3                   	retq   
    8e6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8e70:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
    8e77:	d5 7c 36 
    8e7a:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
    8e81:	00 
    8e82:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    8e87:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
    8e8e:	59 0e f7 
    8e91:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    8e96:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
    8e9d:	15 58 68 
    8ea0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    8ea5:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
    8eac:	4f fa be 
    8eaf:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    8eb4:	48 83 fb 02          	cmp    $0x2,%rbx
    8eb8:	0f 85 d8 fe ff ff    	jne    8d96 <mbedtls_sha256_common_self_test+0xf6>
    8ebe:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8ec3:	b9 7d 00 00 00       	mov    $0x7d,%ecx
    8ec8:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    8ecd:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
    8ed4:	61 61 61 
    8ed7:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    8edc:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
    8ee2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    8ee5:	eb 13                	jmp    8efa <mbedtls_sha256_common_self_test+0x25a>
    8ee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8eee:	00 00 
    8ef0:	41 83 ef 01          	sub    $0x1,%r15d
    8ef4:	0f 84 a0 00 00 00    	je     8f9a <mbedtls_sha256_common_self_test+0x2fa>
    8efa:	ba e8 03 00 00       	mov    $0x3e8,%edx
    8eff:	48 89 de             	mov    %rbx,%rsi
    8f02:	4c 89 f7             	mov    %r14,%rdi
    8f05:	e8 f6 f9 ff ff       	callq  8900 <mbedtls_sha256_update.part.0>
    8f0a:	85 c0                	test   %eax,%eax
    8f0c:	74 e2                	je     8ef0 <mbedtls_sha256_common_self_test+0x250>
    8f0e:	89 c2                	mov    %eax,%edx
    8f10:	45 85 e4             	test   %r12d,%r12d
    8f13:	75 5b                	jne    8f70 <mbedtls_sha256_common_self_test+0x2d0>
    8f15:	41 89 d4             	mov    %edx,%r12d
    8f18:	e9 08 ff ff ff       	jmpq   8e25 <mbedtls_sha256_common_self_test+0x185>
    8f1d:	0f 1f 00             	nopl   (%rax)
    8f20:	8b 54 24 14          	mov    0x14(%rsp),%edx
    8f24:	8d 4b 01             	lea    0x1(%rbx),%ecx
    8f27:	48 8d 35 7b f5 00 00 	lea    0xf57b(%rip),%rsi        # 184a9 <bits+0x429>
    8f2e:	31 c0                	xor    %eax,%eax
    8f30:	bf 01 00 00 00       	mov    $0x1,%edi
    8f35:	e8 16 a4 ff ff       	callq  3350 <__printf_chk@plt>
    8f3a:	e9 f7 fd ff ff       	jmpq   8d36 <mbedtls_sha256_common_self_test+0x96>
    8f3f:	90                   	nop
    8f40:	48 8d 3d 87 f4 00 00 	lea    0xf487(%rip),%rdi        # 183ce <bits+0x34e>
    8f47:	e8 d4 a2 ff ff       	callq  3220 <puts@plt>
    8f4c:	e9 b9 fe ff ff       	jmpq   8e0a <mbedtls_sha256_common_self_test+0x16a>
    8f51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8f58:	bf 0a 00 00 00       	mov    $0xa,%edi
    8f5d:	45 31 e4             	xor    %r12d,%r12d
    8f60:	e8 ab a2 ff ff       	callq  3210 <putchar@plt>
    8f65:	e9 bb fe ff ff       	jmpq   8e25 <mbedtls_sha256_common_self_test+0x185>
    8f6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f70:	48 8d 3d 2b f5 00 00 	lea    0xf52b(%rip),%rdi        # 184a2 <bits+0x422>
    8f77:	89 14 24             	mov    %edx,(%rsp)
    8f7a:	e8 a1 a2 ff ff       	callq  3220 <puts@plt>
    8f7f:	8b 14 24             	mov    (%rsp),%edx
    8f82:	41 89 d4             	mov    %edx,%r12d
    8f85:	e9 9b fe ff ff       	jmpq   8e25 <mbedtls_sha256_common_self_test+0x185>
    8f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f90:	ba 01 00 00 00       	mov    $0x1,%edx
    8f95:	e9 76 ff ff ff       	jmpq   8f10 <mbedtls_sha256_common_self_test+0x270>
    8f9a:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    8f9f:	e9 2b fe ff ff       	jmpq   8dcf <mbedtls_sha256_common_self_test+0x12f>
    8fa4:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    8faa:	45 85 e4             	test   %r12d,%r12d
    8fad:	0f 84 8c fe ff ff    	je     8e3f <mbedtls_sha256_common_self_test+0x19f>
    8fb3:	48 8d 3d d6 f4 00 00 	lea    0xf4d6(%rip),%rdi        # 18490 <bits+0x410>
    8fba:	e8 61 a2 ff ff       	callq  3220 <puts@plt>
    8fbf:	e9 7b fe ff ff       	jmpq   8e3f <mbedtls_sha256_common_self_test+0x19f>
    8fc4:	e8 b7 a2 ff ff       	callq  3280 <__stack_chk_fail@plt>
    8fc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000008fd0 <mbedtls_sha256>:
    8fd0:	f3 0f 1e fa          	endbr64 
    8fd4:	41 55                	push   %r13
    8fd6:	41 54                	push   %r12
    8fd8:	55                   	push   %rbp
    8fd9:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    8fdd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8fe4:	00 00 
    8fe6:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    8feb:	31 c0                	xor    %eax,%eax
    8fed:	83 f9 01             	cmp    $0x1,%ecx
    8ff0:	0f 87 12 01 00 00    	ja     9108 <mbedtls_sha256+0x138>
    8ff6:	49 89 f0             	mov    %rsi,%r8
    8ff9:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8ffe:	49 89 f9             	mov    %rdi,%r9
    9001:	49 89 d5             	mov    %rdx,%r13
    9004:	48 89 f7             	mov    %rsi,%rdi
    9007:	89 ca                	mov    %ecx,%edx
    9009:	b9 0c 00 00 00       	mov    $0xc,%ecx
    900e:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9015:	00 
    9016:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    9019:	85 d2                	test   %edx,%edx
    901b:	0f 84 9f 00 00 00    	je     90c0 <mbedtls_sha256+0xf0>
    9021:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
    9028:	d5 7c 36 
    902b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9030:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
    9037:	59 0e f7 
    903a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    903f:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
    9046:	15 58 68 
    9049:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    904e:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
    9055:	4f fa be 
    9058:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    905d:	89 54 24 68          	mov    %edx,0x68(%rsp)
    9061:	48 89 e5             	mov    %rsp,%rbp
    9064:	4d 85 c0             	test   %r8,%r8
    9067:	74 15                	je     907e <mbedtls_sha256+0xae>
    9069:	4c 89 c2             	mov    %r8,%rdx
    906c:	4c 89 ce             	mov    %r9,%rsi
    906f:	48 89 ef             	mov    %rbp,%rdi
    9072:	e8 89 f8 ff ff       	callq  8900 <mbedtls_sha256_update.part.0>
    9077:	41 89 c4             	mov    %eax,%r12d
    907a:	85 c0                	test   %eax,%eax
    907c:	75 0e                	jne    908c <mbedtls_sha256+0xbc>
    907e:	4c 89 ee             	mov    %r13,%rsi
    9081:	48 89 ef             	mov    %rbp,%rdi
    9084:	e8 87 fa ff ff       	callq  8b10 <mbedtls_sha256_finish>
    9089:	41 89 c4             	mov    %eax,%r12d
    908c:	be 6c 00 00 00       	mov    $0x6c,%esi
    9091:	48 89 ef             	mov    %rbp,%rdi
    9094:	e8 97 98 00 00       	callq  12930 <mbedtls_platform_zeroize>
    9099:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    909e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    90a5:	00 00 
    90a7:	75 67                	jne    9110 <mbedtls_sha256+0x140>
    90a9:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    90ad:	44 89 e0             	mov    %r12d,%eax
    90b0:	5d                   	pop    %rbp
    90b1:	41 5c                	pop    %r12
    90b3:	41 5d                	pop    %r13
    90b5:	c3                   	retq   
    90b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    90bd:	00 00 00 
    90c0:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
    90c7:	ae 67 bb 
    90ca:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    90cf:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
    90d6:	f5 4f a5 
    90d9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    90de:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
    90e5:	68 05 9b 
    90e8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    90ed:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
    90f4:	cd e0 5b 
    90f7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    90fc:	e9 5c ff ff ff       	jmpq   905d <mbedtls_sha256+0x8d>
    9101:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9108:	41 bc 8c ff ff ff    	mov    $0xffffff8c,%r12d
    910e:	eb 89                	jmp    9099 <mbedtls_sha256+0xc9>
    9110:	e8 6b a1 ff ff       	callq  3280 <__stack_chk_fail@plt>
    9115:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    911c:	00 00 00 00 

0000000000009120 <mbedtls_sha256_self_test>:
    9120:	f3 0f 1e fa          	endbr64 
    9124:	31 f6                	xor    %esi,%esi
    9126:	e9 75 fb ff ff       	jmpq   8ca0 <mbedtls_sha256_common_self_test>
    912b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009130 <mbedtls_sha224_self_test>:
    9130:	f3 0f 1e fa          	endbr64 
    9134:	be 01 00 00 00       	mov    $0x1,%esi
    9139:	e9 62 fb ff ff       	jmpq   8ca0 <mbedtls_sha256_common_self_test>
    913e:	66 90                	xchg   %ax,%ax

0000000000009140 <mpi_select>:
    9140:	41 56                	push   %r14
    9142:	45 31 f6             	xor    %r14d,%r14d
    9145:	41 55                	push   %r13
    9147:	49 89 d5             	mov    %rdx,%r13
    914a:	41 54                	push   %r12
    914c:	49 89 fc             	mov    %rdi,%r12
    914f:	55                   	push   %rbp
    9150:	48 89 cd             	mov    %rcx,%rbp
    9153:	53                   	push   %rbx
    9154:	48 89 f3             	mov    %rsi,%rbx
    9157:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    915e:	00 00 
    9160:	48 89 ee             	mov    %rbp,%rsi
    9163:	4c 89 f7             	mov    %r14,%rdi
    9166:	e8 35 65 00 00       	callq  f6a0 <mbedtls_ct_size_bool_eq>
    916b:	48 89 de             	mov    %rbx,%rsi
    916e:	4c 89 e7             	mov    %r12,%rdi
    9171:	0f b6 d0             	movzbl %al,%edx
    9174:	e8 87 6a 00 00       	callq  fc00 <mbedtls_mpi_safe_cond_assign>
    9179:	85 c0                	test   %eax,%eax
    917b:	75 0d                	jne    918a <mpi_select+0x4a>
    917d:	49 83 c6 01          	add    $0x1,%r14
    9181:	48 83 c3 18          	add    $0x18,%rbx
    9185:	4d 39 f5             	cmp    %r14,%r13
    9188:	75 d6                	jne    9160 <mpi_select+0x20>
    918a:	5b                   	pop    %rbx
    918b:	5d                   	pop    %rbp
    918c:	41 5c                	pop    %r12
    918e:	41 5d                	pop    %r13
    9190:	41 5e                	pop    %r14
    9192:	c3                   	retq   
    9193:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    919a:	00 00 00 00 
    919e:	66 90                	xchg   %ax,%ax

00000000000091a0 <mbedtls_mpi_init>:
    91a0:	f3 0f 1e fa          	endbr64 
    91a4:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
    91aa:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    91b1:	00 
    91b2:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    91b9:	00 
    91ba:	c3                   	retq   
    91bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000091c0 <mbedtls_mpi_free>:
    91c0:	f3 0f 1e fa          	endbr64 
    91c4:	48 85 ff             	test   %rdi,%rdi
    91c7:	74 47                	je     9210 <mbedtls_mpi_free+0x50>
    91c9:	53                   	push   %rbx
    91ca:	48 89 fb             	mov    %rdi,%rbx
    91cd:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    91d1:	48 85 ff             	test   %rdi,%rdi
    91d4:	74 1a                	je     91f0 <mbedtls_mpi_free+0x30>
    91d6:	48 8b 43 08          	mov    0x8(%rbx),%rax
    91da:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    91e1:	00 
    91e2:	e8 49 97 00 00       	callq  12930 <mbedtls_platform_zeroize>
    91e7:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    91eb:	e8 10 a0 ff ff       	callq  3200 <free@plt>
    91f0:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    91f6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    91fd:	00 
    91fe:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    9205:	00 
    9206:	5b                   	pop    %rbx
    9207:	c3                   	retq   
    9208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    920f:	00 
    9210:	c3                   	retq   
    9211:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9218:	00 00 00 00 
    921c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009220 <mbedtls_mpi_grow>:
    9220:	f3 0f 1e fa          	endbr64 
    9224:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
    922b:	0f 87 85 00 00 00    	ja     92b6 <mbedtls_mpi_grow+0x96>
    9231:	41 56                	push   %r14
    9233:	31 c0                	xor    %eax,%eax
    9235:	41 55                	push   %r13
    9237:	41 54                	push   %r12
    9239:	55                   	push   %rbp
    923a:	48 89 fd             	mov    %rdi,%rbp
    923d:	53                   	push   %rbx
    923e:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    9242:	48 89 f3             	mov    %rsi,%rbx
    9245:	49 39 f4             	cmp    %rsi,%r12
    9248:	72 0e                	jb     9258 <mbedtls_mpi_grow+0x38>
    924a:	5b                   	pop    %rbx
    924b:	5d                   	pop    %rbp
    924c:	41 5c                	pop    %r12
    924e:	41 5d                	pop    %r13
    9250:	41 5e                	pop    %r14
    9252:	c3                   	retq   
    9253:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9258:	be 08 00 00 00       	mov    $0x8,%esi
    925d:	48 89 df             	mov    %rbx,%rdi
    9260:	e8 7b a0 ff ff       	callq  32e0 <calloc@plt>
    9265:	49 89 c5             	mov    %rax,%r13
    9268:	48 85 c0             	test   %rax,%rax
    926b:	74 42                	je     92af <mbedtls_mpi_grow+0x8f>
    926d:	4c 8b 75 10          	mov    0x10(%rbp),%r14
    9271:	4d 85 f6             	test   %r14,%r14
    9274:	74 26                	je     929c <mbedtls_mpi_grow+0x7c>
    9276:	49 c1 e4 03          	shl    $0x3,%r12
    927a:	4c 89 f6             	mov    %r14,%rsi
    927d:	48 89 c7             	mov    %rax,%rdi
    9280:	4c 89 e2             	mov    %r12,%rdx
    9283:	e8 98 a0 ff ff       	callq  3320 <memcpy@plt>
    9288:	4c 89 f7             	mov    %r14,%rdi
    928b:	4c 89 e6             	mov    %r12,%rsi
    928e:	e8 9d 96 00 00       	callq  12930 <mbedtls_platform_zeroize>
    9293:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    9297:	e8 64 9f ff ff       	callq  3200 <free@plt>
    929c:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
    92a0:	31 c0                	xor    %eax,%eax
    92a2:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    92a6:	5b                   	pop    %rbx
    92a7:	5d                   	pop    %rbp
    92a8:	41 5c                	pop    %r12
    92aa:	41 5d                	pop    %r13
    92ac:	41 5e                	pop    %r14
    92ae:	c3                   	retq   
    92af:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    92b4:	eb 94                	jmp    924a <mbedtls_mpi_grow+0x2a>
    92b6:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    92bb:	c3                   	retq   
    92bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000092c0 <mbedtls_mpi_resize_clear>:
    92c0:	41 54                	push   %r12
    92c2:	49 89 fc             	mov    %rdi,%r12
    92c5:	55                   	push   %rbp
    92c6:	48 83 ec 08          	sub    $0x8,%rsp
    92ca:	48 85 f6             	test   %rsi,%rsi
    92cd:	74 49                	je     9318 <mbedtls_mpi_resize_clear+0x58>
    92cf:	48 89 f5             	mov    %rsi,%rbp
    92d2:	48 39 77 08          	cmp    %rsi,0x8(%rdi)
    92d6:	74 18                	je     92f0 <mbedtls_mpi_resize_clear+0x30>
    92d8:	e8 e3 fe ff ff       	callq  91c0 <mbedtls_mpi_free>
    92dd:	48 83 c4 08          	add    $0x8,%rsp
    92e1:	48 89 ee             	mov    %rbp,%rsi
    92e4:	4c 89 e7             	mov    %r12,%rdi
    92e7:	5d                   	pop    %rbp
    92e8:	41 5c                	pop    %r12
    92ea:	e9 31 ff ff ff       	jmpq   9220 <mbedtls_mpi_grow>
    92ef:	90                   	nop
    92f0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    92f4:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
    92fb:	00 
    92fc:	31 f6                	xor    %esi,%esi
    92fe:	e8 ad 9f ff ff       	callq  32b0 <memset@plt>
    9303:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
    930a:	00 
    930b:	31 c0                	xor    %eax,%eax
    930d:	48 83 c4 08          	add    $0x8,%rsp
    9311:	5d                   	pop    %rbp
    9312:	41 5c                	pop    %r12
    9314:	c3                   	retq   
    9315:	0f 1f 00             	nopl   (%rax)
    9318:	e8 a3 fe ff ff       	callq  91c0 <mbedtls_mpi_free>
    931d:	48 83 c4 08          	add    $0x8,%rsp
    9321:	31 c0                	xor    %eax,%eax
    9323:	5d                   	pop    %rbp
    9324:	41 5c                	pop    %r12
    9326:	c3                   	retq   
    9327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    932e:	00 00 

0000000000009330 <mbedtls_mpi_shrink>:
    9330:	f3 0f 1e fa          	endbr64 
    9334:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
    933b:	0f 87 06 01 00 00    	ja     9447 <mbedtls_mpi_shrink+0x117>
    9341:	41 56                	push   %r14
    9343:	41 55                	push   %r13
    9345:	41 54                	push   %r12
    9347:	55                   	push   %rbp
    9348:	48 89 fd             	mov    %rdi,%rbp
    934b:	53                   	push   %rbx
    934c:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    9350:	49 39 f4             	cmp    %rsi,%r12
    9353:	0f 86 a7 00 00 00    	jbe    9400 <mbedtls_mpi_shrink+0xd0>
    9359:	4c 89 e0             	mov    %r12,%rax
    935c:	48 83 e8 01          	sub    $0x1,%rax
    9360:	0f 84 a7 00 00 00    	je     940d <mbedtls_mpi_shrink+0xdd>
    9366:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    936a:	eb 0a                	jmp    9376 <mbedtls_mpi_shrink+0x46>
    936c:	0f 1f 40 00          	nopl   0x0(%rax)
    9370:	48 83 e8 01          	sub    $0x1,%rax
    9374:	74 7a                	je     93f0 <mbedtls_mpi_shrink+0xc0>
    9376:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
    937b:	74 f3                	je     9370 <mbedtls_mpi_shrink+0x40>
    937d:	48 83 c0 01          	add    $0x1,%rax
    9381:	48 39 f0             	cmp    %rsi,%rax
    9384:	48 89 f3             	mov    %rsi,%rbx
    9387:	be 08 00 00 00       	mov    $0x8,%esi
    938c:	48 0f 43 d8          	cmovae %rax,%rbx
    9390:	48 89 df             	mov    %rbx,%rdi
    9393:	e8 48 9f ff ff       	callq  32e0 <calloc@plt>
    9398:	49 89 c5             	mov    %rax,%r13
    939b:	48 85 c0             	test   %rax,%rax
    939e:	0f 84 9c 00 00 00    	je     9440 <mbedtls_mpi_shrink+0x110>
    93a4:	4c 8b 75 10          	mov    0x10(%rbp),%r14
    93a8:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    93af:	00 
    93b0:	4c 89 f6             	mov    %r14,%rsi
    93b3:	4c 89 ef             	mov    %r13,%rdi
    93b6:	e8 65 9f ff ff       	callq  3320 <memcpy@plt>
    93bb:	4c 89 f7             	mov    %r14,%rdi
    93be:	4a 8d 34 e5 00 00 00 	lea    0x0(,%r12,8),%rsi
    93c5:	00 
    93c6:	e8 65 95 00 00       	callq  12930 <mbedtls_platform_zeroize>
    93cb:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    93cf:	e8 2c 9e ff ff       	callq  3200 <free@plt>
    93d4:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
    93d8:	31 c0                	xor    %eax,%eax
    93da:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    93de:	5b                   	pop    %rbx
    93df:	5d                   	pop    %rbp
    93e0:	41 5c                	pop    %r12
    93e2:	41 5d                	pop    %r13
    93e4:	41 5e                	pop    %r14
    93e6:	c3                   	retq   
    93e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    93ee:	00 00 
    93f0:	b8 01 00 00 00       	mov    $0x1,%eax
    93f5:	eb 8a                	jmp    9381 <mbedtls_mpi_shrink+0x51>
    93f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    93fe:	00 00 
    9400:	5b                   	pop    %rbx
    9401:	5d                   	pop    %rbp
    9402:	41 5c                	pop    %r12
    9404:	41 5d                	pop    %r13
    9406:	41 5e                	pop    %r14
    9408:	e9 13 fe ff ff       	jmpq   9220 <mbedtls_mpi_grow>
    940d:	48 85 f6             	test   %rsi,%rsi
    9410:	b8 01 00 00 00       	mov    $0x1,%eax
    9415:	48 0f 45 c6          	cmovne %rsi,%rax
    9419:	be 08 00 00 00       	mov    $0x8,%esi
    941e:	48 89 c7             	mov    %rax,%rdi
    9421:	48 89 c3             	mov    %rax,%rbx
    9424:	e8 b7 9e ff ff       	callq  32e0 <calloc@plt>
    9429:	49 89 c5             	mov    %rax,%r13
    942c:	48 85 c0             	test   %rax,%rax
    942f:	74 0f                	je     9440 <mbedtls_mpi_shrink+0x110>
    9431:	4c 8b 75 10          	mov    0x10(%rbp),%r14
    9435:	4d 85 f6             	test   %r14,%r14
    9438:	74 9a                	je     93d4 <mbedtls_mpi_shrink+0xa4>
    943a:	e9 69 ff ff ff       	jmpq   93a8 <mbedtls_mpi_shrink+0x78>
    943f:	90                   	nop
    9440:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    9445:	eb 97                	jmp    93de <mbedtls_mpi_shrink+0xae>
    9447:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    944c:	c3                   	retq   
    944d:	0f 1f 00             	nopl   (%rax)

0000000000009450 <mbedtls_mpi_copy>:
    9450:	f3 0f 1e fa          	endbr64 
    9454:	41 55                	push   %r13
    9456:	41 54                	push   %r12
    9458:	55                   	push   %rbp
    9459:	53                   	push   %rbx
    945a:	48 83 ec 08          	sub    $0x8,%rsp
    945e:	48 39 f7             	cmp    %rsi,%rdi
    9461:	0f 84 d9 00 00 00    	je     9540 <mbedtls_mpi_copy+0xf0>
    9467:	48 8b 46 08          	mov    0x8(%rsi),%rax
    946b:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    946f:	48 89 fd             	mov    %rdi,%rbp
    9472:	49 89 f4             	mov    %rsi,%r12
    9475:	48 85 c0             	test   %rax,%rax
    9478:	0f 84 92 00 00 00    	je     9510 <mbedtls_mpi_copy+0xc0>
    947e:	48 83 e8 01          	sub    $0x1,%rax
    9482:	0f 84 a8 00 00 00    	je     9530 <mbedtls_mpi_copy+0xe0>
    9488:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    948c:	eb 0c                	jmp    949a <mbedtls_mpi_copy+0x4a>
    948e:	66 90                	xchg   %ax,%ax
    9490:	48 83 e8 01          	sub    $0x1,%rax
    9494:	0f 84 96 00 00 00    	je     9530 <mbedtls_mpi_copy+0xe0>
    949a:	48 83 3c c1 00       	cmpq   $0x0,(%rcx,%rax,8)
    949f:	74 ef                	je     9490 <mbedtls_mpi_copy+0x40>
    94a1:	48 8d 58 01          	lea    0x1(%rax),%rbx
    94a5:	41 8b 04 24          	mov    (%r12),%eax
    94a9:	89 45 00             	mov    %eax,0x0(%rbp)
    94ac:	48 39 da             	cmp    %rbx,%rdx
    94af:	73 1f                	jae    94d0 <mbedtls_mpi_copy+0x80>
    94b1:	48 89 de             	mov    %rbx,%rsi
    94b4:	48 89 ef             	mov    %rbp,%rdi
    94b7:	e8 64 fd ff ff       	callq  9220 <mbedtls_mpi_grow>
    94bc:	41 89 c5             	mov    %eax,%r13d
    94bf:	85 c0                	test   %eax,%eax
    94c1:	75 3e                	jne    9501 <mbedtls_mpi_copy+0xb1>
    94c3:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
    94ca:	00 
    94cb:	eb 20                	jmp    94ed <mbedtls_mpi_copy+0x9d>
    94cd:	0f 1f 00             	nopl   (%rax)
    94d0:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    94d4:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
    94db:	00 
    94dc:	48 29 da             	sub    %rbx,%rdx
    94df:	31 f6                	xor    %esi,%esi
    94e1:	48 c1 e2 03          	shl    $0x3,%rdx
    94e5:	4c 01 ef             	add    %r13,%rdi
    94e8:	e8 c3 9d ff ff       	callq  32b0 <memset@plt>
    94ed:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    94f1:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    94f6:	4c 89 ea             	mov    %r13,%rdx
    94f9:	45 31 ed             	xor    %r13d,%r13d
    94fc:	e8 1f 9e ff ff       	callq  3320 <memcpy@plt>
    9501:	48 83 c4 08          	add    $0x8,%rsp
    9505:	44 89 e8             	mov    %r13d,%eax
    9508:	5b                   	pop    %rbx
    9509:	5d                   	pop    %rbp
    950a:	41 5c                	pop    %r12
    950c:	41 5d                	pop    %r13
    950e:	c3                   	retq   
    950f:	90                   	nop
    9510:	45 31 ed             	xor    %r13d,%r13d
    9513:	48 85 d2             	test   %rdx,%rdx
    9516:	74 e9                	je     9501 <mbedtls_mpi_copy+0xb1>
    9518:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
    951e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9522:	48 c1 e2 03          	shl    $0x3,%rdx
    9526:	31 f6                	xor    %esi,%esi
    9528:	e8 83 9d ff ff       	callq  32b0 <memset@plt>
    952d:	eb d2                	jmp    9501 <mbedtls_mpi_copy+0xb1>
    952f:	90                   	nop
    9530:	bb 01 00 00 00       	mov    $0x1,%ebx
    9535:	e9 6b ff ff ff       	jmpq   94a5 <mbedtls_mpi_copy+0x55>
    953a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9540:	48 83 c4 08          	add    $0x8,%rsp
    9544:	45 31 ed             	xor    %r13d,%r13d
    9547:	5b                   	pop    %rbx
    9548:	44 89 e8             	mov    %r13d,%eax
    954b:	5d                   	pop    %rbp
    954c:	41 5c                	pop    %r12
    954e:	41 5d                	pop    %r13
    9550:	c3                   	retq   
    9551:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9558:	00 00 00 00 
    955c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009560 <mbedtls_mpi_swap>:
    9560:	f3 0f 1e fa          	endbr64 
    9564:	48 83 ec 28          	sub    $0x28,%rsp
    9568:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
    956c:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
    9570:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9577:	00 00 
    9579:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    957e:	31 c0                	xor    %eax,%eax
    9580:	48 8b 47 10          	mov    0x10(%rdi),%rax
    9584:	0f 11 0f             	movups %xmm1,(%rdi)
    9587:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    958b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9590:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    9594:	48 89 46 10          	mov    %rax,0x10(%rsi)
    9598:	0f 29 04 24          	movaps %xmm0,(%rsp)
    959c:	0f 11 06             	movups %xmm0,(%rsi)
    959f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    95a4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    95ab:	00 00 
    95ad:	75 05                	jne    95b4 <mbedtls_mpi_swap+0x54>
    95af:	48 83 c4 28          	add    $0x28,%rsp
    95b3:	c3                   	retq   
    95b4:	e8 c7 9c ff ff       	callq  3280 <__stack_chk_fail@plt>
    95b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000095c0 <mbedtls_mpi_lset>:
    95c0:	f3 0f 1e fa          	endbr64 
    95c4:	41 54                	push   %r12
    95c6:	55                   	push   %rbp
    95c7:	48 89 f5             	mov    %rsi,%rbp
    95ca:	be 01 00 00 00       	mov    $0x1,%esi
    95cf:	53                   	push   %rbx
    95d0:	48 89 fb             	mov    %rdi,%rbx
    95d3:	e8 48 fc ff ff       	callq  9220 <mbedtls_mpi_grow>
    95d8:	41 89 c4             	mov    %eax,%r12d
    95db:	85 c0                	test   %eax,%eax
    95dd:	74 11                	je     95f0 <mbedtls_mpi_lset+0x30>
    95df:	44 89 e0             	mov    %r12d,%eax
    95e2:	5b                   	pop    %rbx
    95e3:	5d                   	pop    %rbp
    95e4:	41 5c                	pop    %r12
    95e6:	c3                   	retq   
    95e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    95ee:	00 00 
    95f0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    95f4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    95f8:	31 f6                	xor    %esi,%esi
    95fa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9601:	00 
    9602:	e8 a9 9c ff ff       	callq  32b0 <memset@plt>
    9607:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    960b:	48 89 ee             	mov    %rbp,%rsi
    960e:	b8 01 00 00 00       	mov    $0x1,%eax
    9613:	48 85 ed             	test   %rbp,%rbp
    9616:	79 08                	jns    9620 <mbedtls_mpi_lset+0x60>
    9618:	48 f7 de             	neg    %rsi
    961b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9620:	f3 0f 1e fa          	endbr64 
    9624:	48 89 32             	mov    %rsi,(%rdx)
    9627:	89 03                	mov    %eax,(%rbx)
    9629:	44 89 e0             	mov    %r12d,%eax
    962c:	5b                   	pop    %rbx
    962d:	5d                   	pop    %rbp
    962e:	41 5c                	pop    %r12
    9630:	c3                   	retq   
    9631:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9638:	00 00 00 00 
    963c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009640 <mbedtls_mpi_get_bit>:
    9640:	f3 0f 1e fa          	endbr64 
    9644:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    9648:	31 c0                	xor    %eax,%eax
    964a:	48 c1 e2 06          	shl    $0x6,%rdx
    964e:	48 39 f2             	cmp    %rsi,%rdx
    9651:	76 17                	jbe    966a <mbedtls_mpi_get_bit+0x2a>
    9653:	48 8b 47 10          	mov    0x10(%rdi),%rax
    9657:	48 89 f2             	mov    %rsi,%rdx
    965a:	89 f1                	mov    %esi,%ecx
    965c:	48 c1 ea 06          	shr    $0x6,%rdx
    9660:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    9664:	48 d3 e8             	shr    %cl,%rax
    9667:	83 e0 01             	and    $0x1,%eax
    966a:	c3                   	retq   
    966b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009670 <mbedtls_mpi_set_bit>:
    9670:	f3 0f 1e fa          	endbr64 
    9674:	41 55                	push   %r13
    9676:	49 89 f5             	mov    %rsi,%r13
    9679:	41 54                	push   %r12
    967b:	49 c1 ed 06          	shr    $0x6,%r13
    967f:	55                   	push   %rbp
    9680:	53                   	push   %rbx
    9681:	48 83 ec 08          	sub    $0x8,%rsp
    9685:	80 fa 01             	cmp    $0x1,%dl
    9688:	77 66                	ja     96f0 <mbedtls_mpi_set_bit+0x80>
    968a:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    968e:	48 89 fd             	mov    %rdi,%rbp
    9691:	48 89 f3             	mov    %rsi,%rbx
    9694:	41 89 d4             	mov    %edx,%r12d
    9697:	48 c1 e1 06          	shl    $0x6,%rcx
    969b:	48 39 f1             	cmp    %rsi,%rcx
    969e:	77 13                	ja     96b3 <mbedtls_mpi_set_bit+0x43>
    96a0:	31 c0                	xor    %eax,%eax
    96a2:	84 d2                	test   %dl,%dl
    96a4:	74 37                	je     96dd <mbedtls_mpi_set_bit+0x6d>
    96a6:	49 8d 75 01          	lea    0x1(%r13),%rsi
    96aa:	e8 71 fb ff ff       	callq  9220 <mbedtls_mpi_grow>
    96af:	85 c0                	test   %eax,%eax
    96b1:	75 2a                	jne    96dd <mbedtls_mpi_set_bit+0x6d>
    96b3:	48 8b 45 10          	mov    0x10(%rbp),%rax
    96b7:	83 e3 3f             	and    $0x3f,%ebx
    96ba:	41 0f b6 d4          	movzbl %r12b,%edx
    96be:	48 89 d9             	mov    %rbx,%rcx
    96c1:	4a 8d 3c e8          	lea    (%rax,%r13,8),%rdi
    96c5:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    96cc:	48 d3 e2             	shl    %cl,%rdx
    96cf:	48 d3 c0             	rol    %cl,%rax
    96d2:	48 23 07             	and    (%rdi),%rax
    96d5:	48 09 d0             	or     %rdx,%rax
    96d8:	48 89 07             	mov    %rax,(%rdi)
    96db:	31 c0                	xor    %eax,%eax
    96dd:	48 83 c4 08          	add    $0x8,%rsp
    96e1:	5b                   	pop    %rbx
    96e2:	5d                   	pop    %rbp
    96e3:	41 5c                	pop    %r12
    96e5:	41 5d                	pop    %r13
    96e7:	c3                   	retq   
    96e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    96ef:	00 
    96f0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    96f5:	eb e6                	jmp    96dd <mbedtls_mpi_set_bit+0x6d>
    96f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    96fe:	00 00 

0000000000009700 <mbedtls_mpi_lsb>:
    9700:	f3 0f 1e fa          	endbr64 
    9704:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    9708:	48 85 f6             	test   %rsi,%rsi
    970b:	74 3c                	je     9749 <mbedtls_mpi_lsb+0x49>
    970d:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9711:	45 31 c0             	xor    %r8d,%r8d
    9714:	31 c9                	xor    %ecx,%ecx
    9716:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
    971a:	31 c0                	xor    %eax,%eax
    971c:	eb 10                	jmp    972e <mbedtls_mpi_lsb+0x2e>
    971e:	66 90                	xchg   %ax,%ax
    9720:	48 83 c0 01          	add    $0x1,%rax
    9724:	49 83 c0 01          	add    $0x1,%r8
    9728:	48 83 f8 40          	cmp    $0x40,%rax
    972c:	74 12                	je     9740 <mbedtls_mpi_lsb+0x40>
    972e:	48 0f a3 c2          	bt     %rax,%rdx
    9732:	73 ec                	jae    9720 <mbedtls_mpi_lsb+0x20>
    9734:	4c 89 c0             	mov    %r8,%rax
    9737:	c3                   	retq   
    9738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    973f:	00 
    9740:	48 83 c1 01          	add    $0x1,%rcx
    9744:	48 39 ce             	cmp    %rcx,%rsi
    9747:	75 cd                	jne    9716 <mbedtls_mpi_lsb+0x16>
    9749:	45 31 c0             	xor    %r8d,%r8d
    974c:	eb e6                	jmp    9734 <mbedtls_mpi_lsb+0x34>
    974e:	66 90                	xchg   %ax,%ax

0000000000009750 <mbedtls_mpi_bitlen>:
    9750:	f3 0f 1e fa          	endbr64 
    9754:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    9758:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    975c:	e9 0f 4e 00 00       	jmpq   e570 <mbedtls_mpi_core_bitlen>
    9761:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9768:	00 00 00 00 
    976c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009770 <mbedtls_mpi_size>:
    9770:	f3 0f 1e fa          	endbr64 
    9774:	48 83 ec 08          	sub    $0x8,%rsp
    9778:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    977c:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9780:	e8 eb 4d 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    9785:	48 83 c4 08          	add    $0x8,%rsp
    9789:	48 83 c0 07          	add    $0x7,%rax
    978d:	48 c1 e8 03          	shr    $0x3,%rax
    9791:	c3                   	retq   
    9792:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9799:	00 00 00 00 
    979d:	0f 1f 00             	nopl   (%rax)

00000000000097a0 <mbedtls_mpi_read_binary_le>:
    97a0:	f3 0f 1e fa          	endbr64 
    97a4:	41 55                	push   %r13
    97a6:	48 89 d0             	mov    %rdx,%rax
    97a9:	49 89 f5             	mov    %rsi,%r13
    97ac:	31 f6                	xor    %esi,%esi
    97ae:	41 54                	push   %r12
    97b0:	f6 c2 07             	test   $0x7,%dl
    97b3:	49 89 d4             	mov    %rdx,%r12
    97b6:	53                   	push   %rbx
    97b7:	40 0f 95 c6          	setne  %sil
    97bb:	48 c1 e8 03          	shr    $0x3,%rax
    97bf:	48 89 fb             	mov    %rdi,%rbx
    97c2:	48 01 c6             	add    %rax,%rsi
    97c5:	e8 f6 fa ff ff       	callq  92c0 <mbedtls_mpi_resize_clear>
    97ca:	85 c0                	test   %eax,%eax
    97cc:	74 0a                	je     97d8 <mbedtls_mpi_read_binary_le+0x38>
    97ce:	5b                   	pop    %rbx
    97cf:	41 5c                	pop    %r12
    97d1:	41 5d                	pop    %r13
    97d3:	c3                   	retq   
    97d4:	0f 1f 40 00          	nopl   0x0(%rax)
    97d8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    97dc:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    97e0:	4c 89 e1             	mov    %r12,%rcx
    97e3:	4c 89 ea             	mov    %r13,%rdx
    97e6:	5b                   	pop    %rbx
    97e7:	41 5c                	pop    %r12
    97e9:	41 5d                	pop    %r13
    97eb:	e9 d0 4e 00 00       	jmpq   e6c0 <mbedtls_mpi_core_read_le>

00000000000097f0 <mbedtls_mpi_read_binary>:
    97f0:	f3 0f 1e fa          	endbr64 
    97f4:	41 55                	push   %r13
    97f6:	48 89 d0             	mov    %rdx,%rax
    97f9:	49 89 f5             	mov    %rsi,%r13
    97fc:	31 f6                	xor    %esi,%esi
    97fe:	41 54                	push   %r12
    9800:	f6 c2 07             	test   $0x7,%dl
    9803:	49 89 d4             	mov    %rdx,%r12
    9806:	53                   	push   %rbx
    9807:	40 0f 95 c6          	setne  %sil
    980b:	48 c1 e8 03          	shr    $0x3,%rax
    980f:	48 89 fb             	mov    %rdi,%rbx
    9812:	48 01 c6             	add    %rax,%rsi
    9815:	e8 a6 fa ff ff       	callq  92c0 <mbedtls_mpi_resize_clear>
    981a:	85 c0                	test   %eax,%eax
    981c:	74 0a                	je     9828 <mbedtls_mpi_read_binary+0x38>
    981e:	5b                   	pop    %rbx
    981f:	41 5c                	pop    %r12
    9821:	41 5d                	pop    %r13
    9823:	c3                   	retq   
    9824:	0f 1f 40 00          	nopl   0x0(%rax)
    9828:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    982c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9830:	4c 89 e1             	mov    %r12,%rcx
    9833:	4c 89 ea             	mov    %r13,%rdx
    9836:	5b                   	pop    %rbx
    9837:	41 5c                	pop    %r12
    9839:	41 5d                	pop    %r13
    983b:	e9 00 4f 00 00       	jmpq   e740 <mbedtls_mpi_core_read_be>

0000000000009840 <mbedtls_mpi_write_binary_le>:
    9840:	f3 0f 1e fa          	endbr64 
    9844:	49 89 f0             	mov    %rsi,%r8
    9847:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    984b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    984f:	48 89 d1             	mov    %rdx,%rcx
    9852:	4c 89 c2             	mov    %r8,%rdx
    9855:	e9 86 4f 00 00       	jmpq   e7e0 <mbedtls_mpi_core_write_le>
    985a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000009860 <mbedtls_mpi_write_binary>:
    9860:	f3 0f 1e fa          	endbr64 
    9864:	49 89 f0             	mov    %rsi,%r8
    9867:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    986b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    986f:	48 89 d1             	mov    %rdx,%rcx
    9872:	4c 89 c2             	mov    %r8,%rdx
    9875:	e9 36 50 00 00       	jmpq   e8b0 <mbedtls_mpi_core_write_be>
    987a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000009880 <mbedtls_mpi_shift_l>:
    9880:	f3 0f 1e fa          	endbr64 
    9884:	41 55                	push   %r13
    9886:	49 89 f5             	mov    %rsi,%r13
    9889:	41 54                	push   %r12
    988b:	49 89 f4             	mov    %rsi,%r12
    988e:	55                   	push   %rbp
    988f:	48 89 fd             	mov    %rdi,%rbp
    9892:	41 83 e4 3f          	and    $0x3f,%r12d
    9896:	53                   	push   %rbx
    9897:	48 89 f3             	mov    %rsi,%rbx
    989a:	48 c1 eb 06          	shr    $0x6,%rbx
    989e:	48 83 ec 08          	sub    $0x8,%rsp
    98a2:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    98a6:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    98aa:	e8 c1 4c 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    98af:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    98b3:	4c 01 e8             	add    %r13,%rax
    98b6:	48 c1 e2 06          	shl    $0x6,%rdx
    98ba:	48 39 c2             	cmp    %rax,%rdx
    98bd:	0f 82 b5 00 00 00    	jb     9978 <mbedtls_mpi_shift_l+0xf8>
    98c3:	49 83 fd 3f          	cmp    $0x3f,%r13
    98c7:	76 56                	jbe    991f <mbedtls_mpi_shift_l+0x9f>
    98c9:	48 8b 45 08          	mov    0x8(%rbp),%rax
    98cd:	48 39 c3             	cmp    %rax,%rbx
    98d0:	73 32                	jae    9904 <mbedtls_mpi_shift_l+0x84>
    98d2:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    98d6:	48 89 d9             	mov    %rbx,%rcx
    98d9:	48 f7 d9             	neg    %rcx
    98dc:	48 8d 44 c2 f8       	lea    -0x8(%rdx,%rax,8),%rax
    98e1:	48 8d 74 da f8       	lea    -0x8(%rdx,%rbx,8),%rsi
    98e6:	48 c1 e1 03          	shl    $0x3,%rcx
    98ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    98f0:	48 8b 14 08          	mov    (%rax,%rcx,1),%rdx
    98f4:	48 83 e8 08          	sub    $0x8,%rax
    98f8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    98fc:	48 39 c6             	cmp    %rax,%rsi
    98ff:	75 ef                	jne    98f0 <mbedtls_mpi_shift_l+0x70>
    9901:	48 89 d8             	mov    %rbx,%rax
    9904:	48 85 c0             	test   %rax,%rax
    9907:	74 16                	je     991f <mbedtls_mpi_shift_l+0x9f>
    9909:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    990d:	0f 1f 00             	nopl   (%rax)
    9910:	48 c7 44 c2 f8 00 00 	movq   $0x0,-0x8(%rdx,%rax,8)
    9917:	00 00 
    9919:	48 83 e8 01          	sub    $0x1,%rax
    991d:	75 f1                	jne    9910 <mbedtls_mpi_shift_l+0x90>
    991f:	4d 85 e4             	test   %r12,%r12
    9922:	74 43                	je     9967 <mbedtls_mpi_shift_l+0xe7>
    9924:	48 3b 5d 08          	cmp    0x8(%rbp),%rbx
    9928:	73 3d                	jae    9967 <mbedtls_mpi_shift_l+0xe7>
    992a:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    9930:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    9934:	45 89 e1             	mov    %r12d,%r9d
    9937:	31 d2                	xor    %edx,%edx
    9939:	45 29 e0             	sub    %r12d,%r8d
    993c:	0f 1f 40 00          	nopl   0x0(%rax)
    9940:	48 8b 04 de          	mov    (%rsi,%rbx,8),%rax
    9944:	48 89 d7             	mov    %rdx,%rdi
    9947:	44 89 c1             	mov    %r8d,%ecx
    994a:	48 89 c2             	mov    %rax,%rdx
    994d:	48 d3 ea             	shr    %cl,%rdx
    9950:	44 89 c9             	mov    %r9d,%ecx
    9953:	48 d3 e0             	shl    %cl,%rax
    9956:	48 09 f8             	or     %rdi,%rax
    9959:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
    995d:	48 83 c3 01          	add    $0x1,%rbx
    9961:	48 39 5d 08          	cmp    %rbx,0x8(%rbp)
    9965:	77 d9                	ja     9940 <mbedtls_mpi_shift_l+0xc0>
    9967:	48 83 c4 08          	add    $0x8,%rsp
    996b:	31 c0                	xor    %eax,%eax
    996d:	5b                   	pop    %rbx
    996e:	5d                   	pop    %rbp
    996f:	41 5c                	pop    %r12
    9971:	41 5d                	pop    %r13
    9973:	c3                   	retq   
    9974:	0f 1f 40 00          	nopl   0x0(%rax)
    9978:	31 f6                	xor    %esi,%esi
    997a:	a8 3f                	test   $0x3f,%al
    997c:	48 89 ef             	mov    %rbp,%rdi
    997f:	40 0f 95 c6          	setne  %sil
    9983:	48 c1 e8 06          	shr    $0x6,%rax
    9987:	48 01 c6             	add    %rax,%rsi
    998a:	e8 91 f8 ff ff       	callq  9220 <mbedtls_mpi_grow>
    998f:	85 c0                	test   %eax,%eax
    9991:	0f 84 2c ff ff ff    	je     98c3 <mbedtls_mpi_shift_l+0x43>
    9997:	48 83 c4 08          	add    $0x8,%rsp
    999b:	5b                   	pop    %rbx
    999c:	5d                   	pop    %rbp
    999d:	41 5c                	pop    %r12
    999f:	41 5d                	pop    %r13
    99a1:	c3                   	retq   
    99a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    99a9:	00 00 00 00 
    99ad:	0f 1f 00             	nopl   (%rax)

00000000000099b0 <mbedtls_mpi_shift_r>:
    99b0:	f3 0f 1e fa          	endbr64 
    99b4:	4c 8b 47 08          	mov    0x8(%rdi),%r8
    99b8:	4d 85 c0             	test   %r8,%r8
    99bb:	75 03                	jne    99c0 <mbedtls_mpi_shift_r+0x10>
    99bd:	31 c0                	xor    %eax,%eax
    99bf:	c3                   	retq   
    99c0:	48 83 ec 08          	sub    $0x8,%rsp
    99c4:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    99c8:	48 89 f2             	mov    %rsi,%rdx
    99cb:	4c 89 c6             	mov    %r8,%rsi
    99ce:	e8 bd 4f 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    99d3:	31 c0                	xor    %eax,%eax
    99d5:	48 83 c4 08          	add    $0x8,%rsp
    99d9:	c3                   	retq   
    99da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000099e0 <mbedtls_mpi_cmp_abs>:
    99e0:	f3 0f 1e fa          	endbr64 
    99e4:	48 8b 47 08          	mov    0x8(%rdi),%rax
    99e8:	48 85 c0             	test   %rax,%rax
    99eb:	0f 84 7f 00 00 00    	je     9a70 <mbedtls_mpi_cmp_abs+0x90>
    99f1:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    99f5:	eb 0f                	jmp    9a06 <mbedtls_mpi_cmp_abs+0x26>
    99f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    99fe:	00 00 
    9a00:	48 83 e8 01          	sub    $0x1,%rax
    9a04:	74 6a                	je     9a70 <mbedtls_mpi_cmp_abs+0x90>
    9a06:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
    9a0c:	74 f2                	je     9a00 <mbedtls_mpi_cmp_abs+0x20>
    9a0e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    9a12:	48 85 d2             	test   %rdx,%rdx
    9a15:	74 4d                	je     9a64 <mbedtls_mpi_cmp_abs+0x84>
    9a17:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    9a1b:	eb 09                	jmp    9a26 <mbedtls_mpi_cmp_abs+0x46>
    9a1d:	0f 1f 00             	nopl   (%rax)
    9a20:	48 83 ea 01          	sub    $0x1,%rdx
    9a24:	74 62                	je     9a88 <mbedtls_mpi_cmp_abs+0xa8>
    9a26:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
    9a2c:	74 f2                	je     9a20 <mbedtls_mpi_cmp_abs+0x40>
    9a2e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    9a34:	48 39 c2             	cmp    %rax,%rdx
    9a37:	72 31                	jb     9a6a <mbedtls_mpi_cmp_abs+0x8a>
    9a39:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    9a3f:	77 29                	ja     9a6a <mbedtls_mpi_cmp_abs+0x8a>
    9a41:	48 85 c0             	test   %rax,%rax
    9a44:	74 35                	je     9a7b <mbedtls_mpi_cmp_abs+0x9b>
    9a46:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9a4a:	eb 0c                	jmp    9a58 <mbedtls_mpi_cmp_abs+0x78>
    9a4c:	0f 1f 40 00          	nopl   0x0(%rax)
    9a50:	72 42                	jb     9a94 <mbedtls_mpi_cmp_abs+0xb4>
    9a52:	48 83 e8 01          	sub    $0x1,%rax
    9a56:	74 23                	je     9a7b <mbedtls_mpi_cmp_abs+0x9b>
    9a58:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
    9a5d:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
    9a62:	76 ec                	jbe    9a50 <mbedtls_mpi_cmp_abs+0x70>
    9a64:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    9a6a:	44 89 c0             	mov    %r8d,%eax
    9a6d:	c3                   	retq   
    9a6e:	66 90                	xchg   %ax,%ax
    9a70:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    9a74:	31 c0                	xor    %eax,%eax
    9a76:	48 85 d2             	test   %rdx,%rdx
    9a79:	75 9c                	jne    9a17 <mbedtls_mpi_cmp_abs+0x37>
    9a7b:	45 31 c0             	xor    %r8d,%r8d
    9a7e:	44 89 c0             	mov    %r8d,%eax
    9a81:	c3                   	retq   
    9a82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9a88:	45 31 c0             	xor    %r8d,%r8d
    9a8b:	48 85 c0             	test   %rax,%rax
    9a8e:	75 9e                	jne    9a2e <mbedtls_mpi_cmp_abs+0x4e>
    9a90:	44 89 c0             	mov    %r8d,%eax
    9a93:	c3                   	retq   
    9a94:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    9a9a:	eb ce                	jmp    9a6a <mbedtls_mpi_cmp_abs+0x8a>
    9a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009aa0 <mbedtls_mpi_cmp_mpi>:
    9aa0:	f3 0f 1e fa          	endbr64 
    9aa4:	48 8b 47 08          	mov    0x8(%rdi),%rax
    9aa8:	48 85 c0             	test   %rax,%rax
    9aab:	0f 84 7f 00 00 00    	je     9b30 <mbedtls_mpi_cmp_mpi+0x90>
    9ab1:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9ab5:	eb 0f                	jmp    9ac6 <mbedtls_mpi_cmp_mpi+0x26>
    9ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9abe:	00 00 
    9ac0:	48 83 e8 01          	sub    $0x1,%rax
    9ac4:	74 6a                	je     9b30 <mbedtls_mpi_cmp_mpi+0x90>
    9ac6:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
    9acc:	74 f2                	je     9ac0 <mbedtls_mpi_cmp_mpi+0x20>
    9ace:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    9ad2:	48 85 d2             	test   %rdx,%rdx
    9ad5:	74 71                	je     9b48 <mbedtls_mpi_cmp_mpi+0xa8>
    9ad7:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    9adb:	eb 09                	jmp    9ae6 <mbedtls_mpi_cmp_mpi+0x46>
    9add:	0f 1f 00             	nopl   (%rax)
    9ae0:	48 83 ea 01          	sub    $0x1,%rdx
    9ae4:	74 6a                	je     9b50 <mbedtls_mpi_cmp_mpi+0xb0>
    9ae6:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
    9aec:	74 f2                	je     9ae0 <mbedtls_mpi_cmp_mpi+0x40>
    9aee:	48 39 c2             	cmp    %rax,%rdx
    9af1:	72 55                	jb     9b48 <mbedtls_mpi_cmp_mpi+0xa8>
    9af3:	8b 16                	mov    (%rsi),%edx
    9af5:	77 79                	ja     9b70 <mbedtls_mpi_cmp_mpi+0xd0>
    9af7:	44 8b 07             	mov    (%rdi),%r8d
    9afa:	45 85 c0             	test   %r8d,%r8d
    9afd:	7e 61                	jle    9b60 <mbedtls_mpi_cmp_mpi+0xc0>
    9aff:	85 d2                	test   %edx,%edx
    9b01:	78 76                	js     9b79 <mbedtls_mpi_cmp_mpi+0xd9>
    9b03:	48 85 c0             	test   %rax,%rax
    9b06:	74 33                	je     9b3b <mbedtls_mpi_cmp_mpi+0x9b>
    9b08:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9b0c:	eb 08                	jmp    9b16 <mbedtls_mpi_cmp_mpi+0x76>
    9b0e:	66 90                	xchg   %ax,%ax
    9b10:	48 83 e8 01          	sub    $0x1,%rax
    9b14:	74 25                	je     9b3b <mbedtls_mpi_cmp_mpi+0x9b>
    9b16:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
    9b1b:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
    9b20:	77 29                	ja     9b4b <mbedtls_mpi_cmp_mpi+0xab>
    9b22:	73 ec                	jae    9b10 <mbedtls_mpi_cmp_mpi+0x70>
    9b24:	41 f7 d8             	neg    %r8d
    9b27:	eb 22                	jmp    9b4b <mbedtls_mpi_cmp_mpi+0xab>
    9b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b30:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    9b34:	31 c0                	xor    %eax,%eax
    9b36:	48 85 d2             	test   %rdx,%rdx
    9b39:	75 9c                	jne    9ad7 <mbedtls_mpi_cmp_mpi+0x37>
    9b3b:	45 31 c0             	xor    %r8d,%r8d
    9b3e:	44 89 c0             	mov    %r8d,%eax
    9b41:	c3                   	retq   
    9b42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9b48:	44 8b 07             	mov    (%rdi),%r8d
    9b4b:	44 89 c0             	mov    %r8d,%eax
    9b4e:	c3                   	retq   
    9b4f:	90                   	nop
    9b50:	45 31 c0             	xor    %r8d,%r8d
    9b53:	48 85 c0             	test   %rax,%rax
    9b56:	75 96                	jne    9aee <mbedtls_mpi_cmp_mpi+0x4e>
    9b58:	44 89 c0             	mov    %r8d,%eax
    9b5b:	c3                   	retq   
    9b5c:	0f 1f 40 00          	nopl   0x0(%rax)
    9b60:	79 a1                	jns    9b03 <mbedtls_mpi_cmp_mpi+0x63>
    9b62:	85 d2                	test   %edx,%edx
    9b64:	7e 9d                	jle    9b03 <mbedtls_mpi_cmp_mpi+0x63>
    9b66:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    9b6c:	eb dd                	jmp    9b4b <mbedtls_mpi_cmp_mpi+0xab>
    9b6e:	66 90                	xchg   %ax,%ax
    9b70:	f7 da                	neg    %edx
    9b72:	41 89 d0             	mov    %edx,%r8d
    9b75:	44 89 c0             	mov    %r8d,%eax
    9b78:	c3                   	retq   
    9b79:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    9b7f:	eb ca                	jmp    9b4b <mbedtls_mpi_cmp_mpi+0xab>
    9b81:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9b88:	00 00 00 00 
    9b8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009b90 <mbedtls_mpi_cmp_int>:
    9b90:	f3 0f 1e fa          	endbr64 
    9b94:	48 83 ec 38          	sub    $0x38,%rsp
    9b98:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9b9f:	00 00 
    9ba1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9ba6:	31 c0                	xor    %eax,%eax
    9ba8:	b8 01 00 00 00       	mov    $0x1,%eax
    9bad:	48 85 f6             	test   %rsi,%rsi
    9bb0:	79 08                	jns    9bba <mbedtls_mpi_cmp_int+0x2a>
    9bb2:	48 f7 de             	neg    %rsi
    9bb5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9bba:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    9bbf:	48 89 e6             	mov    %rsp,%rsi
    9bc2:	89 04 24             	mov    %eax,(%rsp)
    9bc5:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    9bca:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    9bd1:	00 00 
    9bd3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9bd8:	e8 c3 fe ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    9bdd:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9be2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    9be9:	00 00 
    9beb:	75 05                	jne    9bf2 <mbedtls_mpi_cmp_int+0x62>
    9bed:	48 83 c4 38          	add    $0x38,%rsp
    9bf1:	c3                   	retq   
    9bf2:	e8 89 96 ff ff       	callq  3280 <__stack_chk_fail@plt>
    9bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9bfe:	00 00 

0000000000009c00 <mbedtls_mpi_add_abs>:
    9c00:	f3 0f 1e fa          	endbr64 
    9c04:	41 56                	push   %r14
    9c06:	41 55                	push   %r13
    9c08:	49 89 fd             	mov    %rdi,%r13
    9c0b:	41 54                	push   %r12
    9c0d:	55                   	push   %rbp
    9c0e:	48 89 f5             	mov    %rsi,%rbp
    9c11:	53                   	push   %rbx
    9c12:	48 39 d7             	cmp    %rdx,%rdi
    9c15:	74 14                	je     9c2b <mbedtls_mpi_add_abs+0x2b>
    9c17:	48 89 d3             	mov    %rdx,%rbx
    9c1a:	48 39 f7             	cmp    %rsi,%rdi
    9c1d:	74 09                	je     9c28 <mbedtls_mpi_add_abs+0x28>
    9c1f:	e8 2c f8 ff ff       	callq  9450 <mbedtls_mpi_copy>
    9c24:	85 c0                	test   %eax,%eax
    9c26:	75 45                	jne    9c6d <mbedtls_mpi_add_abs+0x6d>
    9c28:	48 89 dd             	mov    %rbx,%rbp
    9c2b:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
    9c2f:	41 c7 45 00 01 00 00 	movl   $0x1,0x0(%r13)
    9c36:	00 
    9c37:	48 85 db             	test   %rbx,%rbx
    9c3a:	74 44                	je     9c80 <mbedtls_mpi_add_abs+0x80>
    9c3c:	48 8b 45 10          	mov    0x10(%rbp),%rax
    9c40:	eb 0c                	jmp    9c4e <mbedtls_mpi_add_abs+0x4e>
    9c42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9c48:	48 83 eb 01          	sub    $0x1,%rbx
    9c4c:	74 32                	je     9c80 <mbedtls_mpi_add_abs+0x80>
    9c4e:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
    9c54:	4c 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%r14
    9c5b:	00 
    9c5c:	74 ea                	je     9c48 <mbedtls_mpi_add_abs+0x48>
    9c5e:	48 89 de             	mov    %rbx,%rsi
    9c61:	4c 89 ef             	mov    %r13,%rdi
    9c64:	e8 b7 f5 ff ff       	callq  9220 <mbedtls_mpi_grow>
    9c69:	85 c0                	test   %eax,%eax
    9c6b:	74 23                	je     9c90 <mbedtls_mpi_add_abs+0x90>
    9c6d:	5b                   	pop    %rbx
    9c6e:	5d                   	pop    %rbp
    9c6f:	41 5c                	pop    %r12
    9c71:	41 5d                	pop    %r13
    9c73:	41 5e                	pop    %r14
    9c75:	c3                   	retq   
    9c76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9c7d:	00 00 00 
    9c80:	5b                   	pop    %rbx
    9c81:	31 c0                	xor    %eax,%eax
    9c83:	5d                   	pop    %rbp
    9c84:	41 5c                	pop    %r12
    9c86:	41 5d                	pop    %r13
    9c88:	41 5e                	pop    %r14
    9c8a:	c3                   	retq   
    9c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9c90:	4d 8b 65 10          	mov    0x10(%r13),%r12
    9c94:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    9c98:	48 89 d9             	mov    %rbx,%rcx
    9c9b:	4c 89 e6             	mov    %r12,%rsi
    9c9e:	4c 89 e7             	mov    %r12,%rdi
    9ca1:	e8 da 4d 00 00       	callq  ea80 <mbedtls_mpi_core_add>
    9ca6:	48 89 c5             	mov    %rax,%rbp
    9ca9:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
    9cad:	48 85 ed             	test   %rbp,%rbp
    9cb0:	75 1f                	jne    9cd1 <mbedtls_mpi_add_abs+0xd1>
    9cb2:	eb cc                	jmp    9c80 <mbedtls_mpi_add_abs+0x80>
    9cb4:	0f 1f 40 00          	nopl   0x0(%rax)
    9cb8:	31 d2                	xor    %edx,%edx
    9cba:	48 03 28             	add    (%rax),%rbp
    9cbd:	0f 92 c2             	setb   %dl
    9cc0:	48 89 28             	mov    %rbp,(%rax)
    9cc3:	48 83 c0 08          	add    $0x8,%rax
    9cc7:	bd 01 00 00 00       	mov    $0x1,%ebp
    9ccc:	48 85 d2             	test   %rdx,%rdx
    9ccf:	74 af                	je     9c80 <mbedtls_mpi_add_abs+0x80>
    9cd1:	49 89 dc             	mov    %rbx,%r12
    9cd4:	48 83 c3 01          	add    $0x1,%rbx
    9cd8:	4d 39 65 08          	cmp    %r12,0x8(%r13)
    9cdc:	77 da                	ja     9cb8 <mbedtls_mpi_add_abs+0xb8>
    9cde:	48 89 de             	mov    %rbx,%rsi
    9ce1:	4c 89 ef             	mov    %r13,%rdi
    9ce4:	e8 37 f5 ff ff       	callq  9220 <mbedtls_mpi_grow>
    9ce9:	85 c0                	test   %eax,%eax
    9ceb:	75 80                	jne    9c6d <mbedtls_mpi_add_abs+0x6d>
    9ced:	49 8b 45 10          	mov    0x10(%r13),%rax
    9cf1:	4a 8d 04 e0          	lea    (%rax,%r12,8),%rax
    9cf5:	eb c1                	jmp    9cb8 <mbedtls_mpi_add_abs+0xb8>
    9cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9cfe:	00 00 

0000000000009d00 <mbedtls_mpi_sub_abs>:
    9d00:	f3 0f 1e fa          	endbr64 
    9d04:	41 56                	push   %r14
    9d06:	41 55                	push   %r13
    9d08:	49 89 d5             	mov    %rdx,%r13
    9d0b:	41 54                	push   %r12
    9d0d:	49 89 f4             	mov    %rsi,%r12
    9d10:	55                   	push   %rbp
    9d11:	48 89 fd             	mov    %rdi,%rbp
    9d14:	53                   	push   %rbx
    9d15:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
    9d19:	48 85 db             	test   %rbx,%rbx
    9d1c:	74 32                	je     9d50 <mbedtls_mpi_sub_abs+0x50>
    9d1e:	48 8b 42 10          	mov    0x10(%rdx),%rax
    9d22:	eb 0a                	jmp    9d2e <mbedtls_mpi_sub_abs+0x2e>
    9d24:	0f 1f 40 00          	nopl   0x0(%rax)
    9d28:	48 83 eb 01          	sub    $0x1,%rbx
    9d2c:	74 22                	je     9d50 <mbedtls_mpi_sub_abs+0x50>
    9d2e:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
    9d34:	74 f2                	je     9d28 <mbedtls_mpi_sub_abs+0x28>
    9d36:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
    9d3b:	48 39 de             	cmp    %rbx,%rsi
    9d3e:	73 17                	jae    9d57 <mbedtls_mpi_sub_abs+0x57>
    9d40:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
    9d46:	eb 5b                	jmp    9da3 <mbedtls_mpi_sub_abs+0xa3>
    9d48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9d4f:	00 
    9d50:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
    9d55:	31 db                	xor    %ebx,%ebx
    9d57:	48 89 ef             	mov    %rbp,%rdi
    9d5a:	e8 c1 f4 ff ff       	callq  9220 <mbedtls_mpi_grow>
    9d5f:	41 89 c6             	mov    %eax,%r14d
    9d62:	85 c0                	test   %eax,%eax
    9d64:	75 3d                	jne    9da3 <mbedtls_mpi_sub_abs+0xa3>
    9d66:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    9d6b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    9d6f:	48 39 da             	cmp    %rbx,%rdx
    9d72:	76 09                	jbe    9d7d <mbedtls_mpi_sub_abs+0x7d>
    9d74:	49 39 ec             	cmp    %rbp,%r12
    9d77:	0f 85 83 00 00 00    	jne    9e00 <mbedtls_mpi_sub_abs+0x100>
    9d7d:	48 8b 45 08          	mov    0x8(%rbp),%rax
    9d81:	48 39 d0             	cmp    %rdx,%rax
    9d84:	77 52                	ja     9dd8 <mbedtls_mpi_sub_abs+0xd8>
    9d86:	49 8b 55 10          	mov    0x10(%r13),%rdx
    9d8a:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    9d8f:	48 89 d9             	mov    %rbx,%rcx
    9d92:	e8 a9 4d 00 00       	callq  eb40 <mbedtls_mpi_core_sub>
    9d97:	48 85 c0             	test   %rax,%rax
    9d9a:	75 14                	jne    9db0 <mbedtls_mpi_sub_abs+0xb0>
    9d9c:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
    9da3:	5b                   	pop    %rbx
    9da4:	44 89 f0             	mov    %r14d,%eax
    9da7:	5d                   	pop    %rbp
    9da8:	41 5c                	pop    %r12
    9daa:	41 5d                	pop    %r13
    9dac:	41 5e                	pop    %r14
    9dae:	c3                   	retq   
    9daf:	90                   	nop
    9db0:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    9db4:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
    9db8:	48 8d 3c da          	lea    (%rdx,%rbx,8),%rdi
    9dbc:	48 29 d9             	sub    %rbx,%rcx
    9dbf:	48 89 c2             	mov    %rax,%rdx
    9dc2:	48 89 fe             	mov    %rdi,%rsi
    9dc5:	e8 26 57 00 00       	callq  f4f0 <mbedtls_mpi_core_sub_int>
    9dca:	48 85 c0             	test   %rax,%rax
    9dcd:	74 cd                	je     9d9c <mbedtls_mpi_sub_abs+0x9c>
    9dcf:	e9 6c ff ff ff       	jmpq   9d40 <mbedtls_mpi_sub_abs+0x40>
    9dd4:	0f 1f 40 00          	nopl   0x0(%rax)
    9dd8:	48 29 d0             	sub    %rdx,%rax
    9ddb:	48 8d 3c d7          	lea    (%rdi,%rdx,8),%rdi
    9ddf:	31 f6                	xor    %esi,%esi
    9de1:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
    9de8:	00 
    9de9:	4c 89 c2             	mov    %r8,%rdx
    9dec:	e8 bf 94 ff ff       	callq  32b0 <memset@plt>
    9df1:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    9df5:	eb 8f                	jmp    9d86 <mbedtls_mpi_sub_abs+0x86>
    9df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9dfe:	00 00 
    9e00:	48 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%rsi
    9e07:	00 
    9e08:	48 29 da             	sub    %rbx,%rdx
    9e0b:	48 01 f7             	add    %rsi,%rdi
    9e0e:	48 c1 e2 03          	shl    $0x3,%rdx
    9e12:	49 03 74 24 10       	add    0x10(%r12),%rsi
    9e17:	e8 04 95 ff ff       	callq  3320 <memcpy@plt>
    9e1c:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    9e21:	48 8b 45 08          	mov    0x8(%rbp),%rax
    9e25:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    9e29:	48 39 d0             	cmp    %rdx,%rax
    9e2c:	0f 86 54 ff ff ff    	jbe    9d86 <mbedtls_mpi_sub_abs+0x86>
    9e32:	eb a4                	jmp    9dd8 <mbedtls_mpi_sub_abs+0xd8>
    9e34:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9e3b:	00 00 00 00 
    9e3f:	90                   	nop

0000000000009e40 <add_sub_mpi>:
    9e40:	41 54                	push   %r12
    9e42:	41 89 c8             	mov    %ecx,%r8d
    9e45:	49 89 f1             	mov    %rsi,%r9
    9e48:	49 89 d2             	mov    %rdx,%r10
    9e4b:	55                   	push   %rbp
    9e4c:	48 89 fd             	mov    %rdi,%rbp
    9e4f:	53                   	push   %rbx
    9e50:	8b 1e                	mov    (%rsi),%ebx
    9e52:	8b 0a                	mov    (%rdx),%ecx
    9e54:	0f af cb             	imul   %ebx,%ecx
    9e57:	41 0f af c8          	imul   %r8d,%ecx
    9e5b:	85 c9                	test   %ecx,%ecx
    9e5d:	79 61                	jns    9ec0 <add_sub_mpi+0x80>
    9e5f:	48 89 d6             	mov    %rdx,%rsi
    9e62:	4c 89 cf             	mov    %r9,%rdi
    9e65:	e8 76 fb ff ff       	callq  99e0 <mbedtls_mpi_cmp_abs>
    9e6a:	41 89 c4             	mov    %eax,%r12d
    9e6d:	85 c0                	test   %eax,%eax
    9e6f:	78 2f                	js     9ea0 <add_sub_mpi+0x60>
    9e71:	4c 89 d2             	mov    %r10,%rdx
    9e74:	4c 89 ce             	mov    %r9,%rsi
    9e77:	48 89 ef             	mov    %rbp,%rdi
    9e7a:	e8 81 fe ff ff       	callq  9d00 <mbedtls_mpi_sub_abs>
    9e7f:	85 c0                	test   %eax,%eax
    9e81:	75 0e                	jne    9e91 <add_sub_mpi+0x51>
    9e83:	45 85 e4             	test   %r12d,%r12d
    9e86:	ba 01 00 00 00       	mov    $0x1,%edx
    9e8b:	0f 44 da             	cmove  %edx,%ebx
    9e8e:	89 5d 00             	mov    %ebx,0x0(%rbp)
    9e91:	5b                   	pop    %rbx
    9e92:	5d                   	pop    %rbp
    9e93:	41 5c                	pop    %r12
    9e95:	c3                   	retq   
    9e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9e9d:	00 00 00 
    9ea0:	4c 89 ca             	mov    %r9,%rdx
    9ea3:	4c 89 d6             	mov    %r10,%rsi
    9ea6:	48 89 ef             	mov    %rbp,%rdi
    9ea9:	e8 52 fe ff ff       	callq  9d00 <mbedtls_mpi_sub_abs>
    9eae:	85 c0                	test   %eax,%eax
    9eb0:	75 df                	jne    9e91 <add_sub_mpi+0x51>
    9eb2:	f7 db                	neg    %ebx
    9eb4:	89 5d 00             	mov    %ebx,0x0(%rbp)
    9eb7:	5b                   	pop    %rbx
    9eb8:	5d                   	pop    %rbp
    9eb9:	41 5c                	pop    %r12
    9ebb:	c3                   	retq   
    9ebc:	0f 1f 40 00          	nopl   0x0(%rax)
    9ec0:	e8 3b fd ff ff       	callq  9c00 <mbedtls_mpi_add_abs>
    9ec5:	85 c0                	test   %eax,%eax
    9ec7:	75 c8                	jne    9e91 <add_sub_mpi+0x51>
    9ec9:	f3 0f 1e fa          	endbr64 
    9ecd:	89 5d 00             	mov    %ebx,0x0(%rbp)
    9ed0:	5b                   	pop    %rbx
    9ed1:	5d                   	pop    %rbp
    9ed2:	41 5c                	pop    %r12
    9ed4:	c3                   	retq   
    9ed5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9edc:	00 00 00 00 

0000000000009ee0 <mbedtls_mpi_add_mpi>:
    9ee0:	f3 0f 1e fa          	endbr64 
    9ee4:	b9 01 00 00 00       	mov    $0x1,%ecx
    9ee9:	e9 52 ff ff ff       	jmpq   9e40 <add_sub_mpi>
    9eee:	66 90                	xchg   %ax,%ax

0000000000009ef0 <mbedtls_mpi_sub_mpi>:
    9ef0:	f3 0f 1e fa          	endbr64 
    9ef4:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    9ef9:	e9 42 ff ff ff       	jmpq   9e40 <add_sub_mpi>
    9efe:	66 90                	xchg   %ax,%ax

0000000000009f00 <mbedtls_mpi_add_int>:
    9f00:	f3 0f 1e fa          	endbr64 
    9f04:	48 83 ec 38          	sub    $0x38,%rsp
    9f08:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9f0f:	00 00 
    9f11:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9f16:	31 c0                	xor    %eax,%eax
    9f18:	b8 01 00 00 00       	mov    $0x1,%eax
    9f1d:	48 85 d2             	test   %rdx,%rdx
    9f20:	79 08                	jns    9f2a <mbedtls_mpi_add_int+0x2a>
    9f22:	48 f7 da             	neg    %rdx
    9f25:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9f2a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    9f2f:	b9 01 00 00 00       	mov    $0x1,%ecx
    9f34:	48 89 e2             	mov    %rsp,%rdx
    9f37:	89 04 24             	mov    %eax,(%rsp)
    9f3a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    9f3f:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    9f46:	00 00 
    9f48:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9f4d:	e8 ee fe ff ff       	callq  9e40 <add_sub_mpi>
    9f52:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    9f57:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    9f5e:	00 00 
    9f60:	75 05                	jne    9f67 <mbedtls_mpi_add_int+0x67>
    9f62:	48 83 c4 38          	add    $0x38,%rsp
    9f66:	c3                   	retq   
    9f67:	e8 14 93 ff ff       	callq  3280 <__stack_chk_fail@plt>
    9f6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009f70 <mbedtls_mpi_sub_int>:
    9f70:	f3 0f 1e fa          	endbr64 
    9f74:	48 83 ec 38          	sub    $0x38,%rsp
    9f78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9f7f:	00 00 
    9f81:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9f86:	31 c0                	xor    %eax,%eax
    9f88:	b8 01 00 00 00       	mov    $0x1,%eax
    9f8d:	48 85 d2             	test   %rdx,%rdx
    9f90:	79 08                	jns    9f9a <mbedtls_mpi_sub_int+0x2a>
    9f92:	48 f7 da             	neg    %rdx
    9f95:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9f9a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    9f9f:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    9fa4:	48 89 e2             	mov    %rsp,%rdx
    9fa7:	89 04 24             	mov    %eax,(%rsp)
    9faa:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    9faf:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    9fb6:	00 00 
    9fb8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9fbd:	e8 7e fe ff ff       	callq  9e40 <add_sub_mpi>
    9fc2:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    9fc7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    9fce:	00 00 
    9fd0:	75 05                	jne    9fd7 <mbedtls_mpi_sub_int+0x67>
    9fd2:	48 83 c4 38          	add    $0x38,%rsp
    9fd6:	c3                   	retq   
    9fd7:	e8 a4 92 ff ff       	callq  3280 <__stack_chk_fail@plt>
    9fdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009fe0 <mbedtls_mpi_mul_mpi>:
    9fe0:	f3 0f 1e fa          	endbr64 
    9fe4:	41 57                	push   %r15
    9fe6:	49 89 ff             	mov    %rdi,%r15
    9fe9:	41 56                	push   %r14
    9feb:	49 89 d6             	mov    %rdx,%r14
    9fee:	41 55                	push   %r13
    9ff0:	49 89 f5             	mov    %rsi,%r13
    9ff3:	41 54                	push   %r12
    9ff5:	55                   	push   %rbp
    9ff6:	53                   	push   %rbx
    9ff7:	48 83 ec 58          	sub    $0x58,%rsp
    9ffb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a002:	00 00 
    a004:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    a009:	31 c0                	xor    %eax,%eax
    a00b:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
    a010:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    a017:	00 
    a018:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    a01f:	00 00 
    a021:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a028:	00 00 
    a02a:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    a031:	00 
    a032:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a039:	00 00 
    a03b:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    a042:	00 00 
    a044:	48 89 04 24          	mov    %rax,(%rsp)
    a048:	48 39 f7             	cmp    %rsi,%rdi
    a04b:	0f 84 2f 01 00 00    	je     a180 <mbedtls_mpi_mul_mpi+0x1a0>
    a051:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    a056:	4d 39 f7             	cmp    %r14,%r15
    a059:	0f 84 51 01 00 00    	je     a1b0 <mbedtls_mpi_mul_mpi+0x1d0>
    a05f:	4d 8b 65 08          	mov    0x8(%r13),%r12
    a063:	4d 85 e4             	test   %r12,%r12
    a066:	0f 84 f4 00 00 00    	je     a160 <mbedtls_mpi_mul_mpi+0x180>
    a06c:	49 8b 45 10          	mov    0x10(%r13),%rax
    a070:	eb 10                	jmp    a082 <mbedtls_mpi_mul_mpi+0xa2>
    a072:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a078:	49 83 ec 01          	sub    $0x1,%r12
    a07c:	0f 84 de 00 00 00    	je     a160 <mbedtls_mpi_mul_mpi+0x180>
    a082:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
    a088:	74 ee                	je     a078 <mbedtls_mpi_mul_mpi+0x98>
    a08a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
    a091:	00 
    a092:	49 8b 5e 08          	mov    0x8(%r14),%rbx
    a096:	48 85 db             	test   %rbx,%rbx
    a099:	0f 84 b1 00 00 00    	je     a150 <mbedtls_mpi_mul_mpi+0x170>
    a09f:	49 8b 46 10          	mov    0x10(%r14),%rax
    a0a3:	eb 0d                	jmp    a0b2 <mbedtls_mpi_mul_mpi+0xd2>
    a0a5:	0f 1f 00             	nopl   (%rax)
    a0a8:	48 83 eb 01          	sub    $0x1,%rbx
    a0ac:	0f 84 9e 00 00 00    	je     a150 <mbedtls_mpi_mul_mpi+0x170>
    a0b2:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
    a0b8:	74 ee                	je     a0a8 <mbedtls_mpi_mul_mpi+0xc8>
    a0ba:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
    a0be:	4c 89 ff             	mov    %r15,%rdi
    a0c1:	e8 5a f1 ff ff       	callq  9220 <mbedtls_mpi_grow>
    a0c6:	85 c0                	test   %eax,%eax
    a0c8:	75 46                	jne    a110 <mbedtls_mpi_mul_mpi+0x130>
    a0ca:	31 f6                	xor    %esi,%esi
    a0cc:	4c 89 ff             	mov    %r15,%rdi
    a0cf:	e8 ec f4 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    a0d4:	85 c0                	test   %eax,%eax
    a0d6:	75 38                	jne    a110 <mbedtls_mpi_mul_mpi+0x130>
    a0d8:	49 8b 4e 10          	mov    0x10(%r14),%rcx
    a0dc:	49 8b 75 10          	mov    0x10(%r13),%rsi
    a0e0:	49 89 d8             	mov    %rbx,%r8
    a0e3:	4c 89 e2             	mov    %r12,%rdx
    a0e6:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    a0ea:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    a0ee:	e8 4d 4c 00 00       	callq  ed40 <mbedtls_mpi_core_mul>
    a0f3:	8b 44 24 08          	mov    0x8(%rsp),%eax
    a0f7:	85 c0                	test   %eax,%eax
    a0f9:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    a0fd:	74 71                	je     a170 <mbedtls_mpi_mul_mpi+0x190>
    a0ff:	41 c7 07 01 00 00 00 	movl   $0x1,(%r15)
    a106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a10d:	00 00 00 
    a110:	48 89 ef             	mov    %rbp,%rdi
    a113:	89 44 24 08          	mov    %eax,0x8(%rsp)
    a117:	e8 a4 f0 ff ff       	callq  91c0 <mbedtls_mpi_free>
    a11c:	48 8b 3c 24          	mov    (%rsp),%rdi
    a120:	e8 9b f0 ff ff       	callq  91c0 <mbedtls_mpi_free>
    a125:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    a12a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a131:	00 00 
    a133:	8b 44 24 08          	mov    0x8(%rsp),%eax
    a137:	0f 85 8e 00 00 00    	jne    a1cb <mbedtls_mpi_mul_mpi+0x1eb>
    a13d:	48 83 c4 58          	add    $0x58,%rsp
    a141:	5b                   	pop    %rbx
    a142:	5d                   	pop    %rbp
    a143:	41 5c                	pop    %r12
    a145:	41 5d                	pop    %r13
    a147:	41 5e                	pop    %r14
    a149:	41 5f                	pop    %r15
    a14b:	c3                   	retq   
    a14c:	0f 1f 40 00          	nopl   0x0(%rax)
    a150:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
    a157:	00 
    a158:	4c 89 e6             	mov    %r12,%rsi
    a15b:	e9 5e ff ff ff       	jmpq   a0be <mbedtls_mpi_mul_mpi+0xde>
    a160:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
    a167:	00 
    a168:	e9 25 ff ff ff       	jmpq   a092 <mbedtls_mpi_mul_mpi+0xb2>
    a16d:	0f 1f 00             	nopl   (%rax)
    a170:	41 8b 55 00          	mov    0x0(%r13),%edx
    a174:	41 0f af 16          	imul   (%r14),%edx
    a178:	41 89 17             	mov    %edx,(%r15)
    a17b:	eb 93                	jmp    a110 <mbedtls_mpi_mul_mpi+0x130>
    a17d:	0f 1f 00             	nopl   (%rax)
    a180:	48 89 fe             	mov    %rdi,%rsi
    a183:	48 89 c7             	mov    %rax,%rdi
    a186:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    a18b:	49 89 c5             	mov    %rax,%r13
    a18e:	e8 bd f2 ff ff       	callq  9450 <mbedtls_mpi_copy>
    a193:	85 c0                	test   %eax,%eax
    a195:	0f 85 75 ff ff ff    	jne    a110 <mbedtls_mpi_mul_mpi+0x130>
    a19b:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    a1a0:	4d 39 f7             	cmp    %r14,%r15
    a1a3:	0f 85 b6 fe ff ff    	jne    a05f <mbedtls_mpi_mul_mpi+0x7f>
    a1a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a1b0:	4c 89 fe             	mov    %r15,%rsi
    a1b3:	48 89 ef             	mov    %rbp,%rdi
    a1b6:	e8 95 f2 ff ff       	callq  9450 <mbedtls_mpi_copy>
    a1bb:	85 c0                	test   %eax,%eax
    a1bd:	0f 85 4d ff ff ff    	jne    a110 <mbedtls_mpi_mul_mpi+0x130>
    a1c3:	49 89 ee             	mov    %rbp,%r14
    a1c6:	e9 94 fe ff ff       	jmpq   a05f <mbedtls_mpi_mul_mpi+0x7f>
    a1cb:	e8 b0 90 ff ff       	callq  3280 <__stack_chk_fail@plt>

000000000000a1d0 <mbedtls_mpi_mul_int>:
    a1d0:	f3 0f 1e fa          	endbr64 
    a1d4:	41 56                	push   %r14
    a1d6:	41 55                	push   %r13
    a1d8:	41 54                	push   %r12
    a1da:	55                   	push   %rbp
    a1db:	48 89 fd             	mov    %rdi,%rbp
    a1de:	53                   	push   %rbx
    a1df:	4c 8b 66 08          	mov    0x8(%rsi),%r12
    a1e3:	4d 85 e4             	test   %r12,%r12
    a1e6:	0f 84 84 00 00 00    	je     a270 <mbedtls_mpi_mul_int+0xa0>
    a1ec:	48 8b 46 10          	mov    0x10(%rsi),%rax
    a1f0:	48 89 f3             	mov    %rsi,%rbx
    a1f3:	49 89 d6             	mov    %rdx,%r14
    a1f6:	eb 0e                	jmp    a206 <mbedtls_mpi_mul_int+0x36>
    a1f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a1ff:	00 
    a200:	49 83 ec 01          	sub    $0x1,%r12
    a204:	74 6a                	je     a270 <mbedtls_mpi_mul_int+0xa0>
    a206:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
    a20c:	74 f2                	je     a200 <mbedtls_mpi_mul_int+0x30>
    a20e:	4d 85 f6             	test   %r14,%r14
    a211:	74 5d                	je     a270 <mbedtls_mpi_mul_int+0xa0>
    a213:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
    a218:	48 89 ef             	mov    %rbp,%rdi
    a21b:	e8 00 f0 ff ff       	callq  9220 <mbedtls_mpi_grow>
    a220:	41 89 c5             	mov    %eax,%r13d
    a223:	85 c0                	test   %eax,%eax
    a225:	74 11                	je     a238 <mbedtls_mpi_mul_int+0x68>
    a227:	5b                   	pop    %rbx
    a228:	44 89 e8             	mov    %r13d,%eax
    a22b:	5d                   	pop    %rbp
    a22c:	41 5c                	pop    %r12
    a22e:	41 5d                	pop    %r13
    a230:	41 5e                	pop    %r14
    a232:	c3                   	retq   
    a233:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a238:	48 89 de             	mov    %rbx,%rsi
    a23b:	48 89 ef             	mov    %rbp,%rdi
    a23e:	e8 0d f2 ff ff       	callq  9450 <mbedtls_mpi_copy>
    a243:	41 89 c5             	mov    %eax,%r13d
    a246:	85 c0                	test   %eax,%eax
    a248:	75 dd                	jne    a227 <mbedtls_mpi_mul_int+0x57>
    a24a:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    a24e:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    a252:	4d 8d 46 ff          	lea    -0x1(%r14),%r8
    a256:	4c 89 e1             	mov    %r12,%rcx
    a259:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    a25d:	e8 2e 49 00 00       	callq  eb90 <mbedtls_mpi_core_mla>
    a262:	5b                   	pop    %rbx
    a263:	44 89 e8             	mov    %r13d,%eax
    a266:	5d                   	pop    %rbp
    a267:	41 5c                	pop    %r12
    a269:	41 5d                	pop    %r13
    a26b:	41 5e                	pop    %r14
    a26d:	c3                   	retq   
    a26e:	66 90                	xchg   %ax,%ax
    a270:	5b                   	pop    %rbx
    a271:	48 89 ef             	mov    %rbp,%rdi
    a274:	31 f6                	xor    %esi,%esi
    a276:	5d                   	pop    %rbp
    a277:	41 5c                	pop    %r12
    a279:	41 5d                	pop    %r13
    a27b:	41 5e                	pop    %r14
    a27d:	e9 3e f3 ff ff       	jmpq   95c0 <mbedtls_mpi_lset>
    a282:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a289:	00 00 00 00 
    a28d:	0f 1f 00             	nopl   (%rax)

000000000000a290 <mbedtls_mpi_read_string>:
    a290:	f3 0f 1e fa          	endbr64 
    a294:	41 57                	push   %r15
    a296:	41 56                	push   %r14
    a298:	41 55                	push   %r13
    a29a:	41 54                	push   %r12
    a29c:	55                   	push   %rbp
    a29d:	48 63 ee             	movslq %esi,%rbp
    a2a0:	53                   	push   %rbx
    a2a1:	48 83 ec 38          	sub    $0x38,%rsp
    a2a5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a2ac:	00 00 
    a2ae:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    a2b3:	31 c0                	xor    %eax,%eax
    a2b5:	8d 45 fe             	lea    -0x2(%rbp),%eax
    a2b8:	83 f8 0e             	cmp    $0xe,%eax
    a2bb:	0f 87 4f 02 00 00    	ja     a510 <mbedtls_mpi_read_string+0x280>
    a2c1:	0f b6 02             	movzbl (%rdx),%eax
    a2c4:	49 89 ff             	mov    %rdi,%r15
    a2c7:	48 89 d3             	mov    %rdx,%rbx
    a2ca:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    a2d1:	00 
    a2d2:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    a2d9:	00 00 
    a2db:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a2e2:	00 00 
    a2e4:	84 c0                	test   %al,%al
    a2e6:	0f 84 9c 01 00 00    	je     a488 <mbedtls_mpi_read_string+0x1f8>
    a2ec:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
    a2f3:	00 
    a2f4:	3c 2d                	cmp    $0x2d,%al
    a2f6:	75 0c                	jne    a304 <mbedtls_mpi_read_string+0x74>
    a2f8:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%rsp)
    a2ff:	ff 
    a300:	48 83 c3 01          	add    $0x1,%rbx
    a304:	48 89 df             	mov    %rbx,%rdi
    a307:	e8 64 8f ff ff       	callq  3270 <strlen@plt>
    a30c:	49 89 c6             	mov    %rax,%r14
    a30f:	49 89 c5             	mov    %rax,%r13
    a312:	83 fd 10             	cmp    $0x10,%ebp
    a315:	75 79                	jne    a390 <mbedtls_mpi_read_string+0x100>
    a317:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    a31e:	ff ff 3f 
    a321:	49 39 c6             	cmp    %rax,%r14
    a324:	0f 87 e6 01 00 00    	ja     a510 <mbedtls_mpi_read_string+0x280>
    a32a:	4a 8d 34 b5 00 00 00 	lea    0x0(,%r14,4),%rsi
    a331:	00 
    a332:	31 c0                	xor    %eax,%eax
    a334:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    a339:	4c 89 ff             	mov    %r15,%rdi
    a33c:	40 f6 c6 3c          	test   $0x3c,%sil
    a340:	0f 95 c0             	setne  %al
    a343:	48 c1 ee 06          	shr    $0x6,%rsi
    a347:	48 01 c6             	add    %rax,%rsi
    a34a:	e8 d1 ee ff ff       	callq  9220 <mbedtls_mpi_grow>
    a34f:	85 c0                	test   %eax,%eax
    a351:	0f 84 d9 00 00 00    	je     a430 <mbedtls_mpi_read_string+0x1a0>
    a357:	4c 89 e7             	mov    %r12,%rdi
    a35a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    a35e:	e8 5d ee ff ff       	callq  91c0 <mbedtls_mpi_free>
    a363:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    a367:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    a36c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a373:	00 00 
    a375:	0f 85 9f 01 00 00    	jne    a51a <mbedtls_mpi_read_string+0x28a>
    a37b:	48 83 c4 38          	add    $0x38,%rsp
    a37f:	5b                   	pop    %rbx
    a380:	5d                   	pop    %rbp
    a381:	41 5c                	pop    %r12
    a383:	41 5d                	pop    %r13
    a385:	41 5e                	pop    %r14
    a387:	41 5f                	pop    %r15
    a389:	c3                   	retq   
    a38a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a390:	31 f6                	xor    %esi,%esi
    a392:	4c 89 ff             	mov    %r15,%rdi
    a395:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    a39a:	e8 21 f2 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    a39f:	85 c0                	test   %eax,%eax
    a3a1:	75 b4                	jne    a357 <mbedtls_mpi_read_string+0xc7>
    a3a3:	4d 85 f6             	test   %r14,%r14
    a3a6:	0f 84 1b 01 00 00    	je     a4c7 <mbedtls_mpi_read_string+0x237>
    a3ac:	4e 8d 2c 33          	lea    (%rbx,%r14,1),%r13
    a3b0:	eb 4f                	jmp    a401 <mbedtls_mpi_read_string+0x171>
    a3b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a3b8:	41 83 e8 30          	sub    $0x30,%r8d
    a3bc:	4d 63 f0             	movslq %r8d,%r14
    a3bf:	49 39 ee             	cmp    %rbp,%r14
    a3c2:	0f 83 b0 00 00 00    	jae    a478 <mbedtls_mpi_read_string+0x1e8>
    a3c8:	48 89 ea             	mov    %rbp,%rdx
    a3cb:	4c 89 fe             	mov    %r15,%rsi
    a3ce:	4c 89 e7             	mov    %r12,%rdi
    a3d1:	e8 fa fd ff ff       	callq  a1d0 <mbedtls_mpi_mul_int>
    a3d6:	85 c0                	test   %eax,%eax
    a3d8:	0f 85 79 ff ff ff    	jne    a357 <mbedtls_mpi_read_string+0xc7>
    a3de:	4c 89 f2             	mov    %r14,%rdx
    a3e1:	4c 89 e6             	mov    %r12,%rsi
    a3e4:	4c 89 ff             	mov    %r15,%rdi
    a3e7:	e8 14 fb ff ff       	callq  9f00 <mbedtls_mpi_add_int>
    a3ec:	85 c0                	test   %eax,%eax
    a3ee:	0f 85 63 ff ff ff    	jne    a357 <mbedtls_mpi_read_string+0xc7>
    a3f4:	48 83 c3 01          	add    $0x1,%rbx
    a3f8:	49 39 dd             	cmp    %rbx,%r13
    a3fb:	0f 84 c6 00 00 00    	je     a4c7 <mbedtls_mpi_read_string+0x237>
    a401:	44 0f be 03          	movsbl (%rbx),%r8d
    a405:	41 8d 50 d0          	lea    -0x30(%r8),%edx
    a409:	44 89 c0             	mov    %r8d,%eax
    a40c:	80 fa 09             	cmp    $0x9,%dl
    a40f:	76 a7                	jbe    a3b8 <mbedtls_mpi_read_string+0x128>
    a411:	41 8d 50 bf          	lea    -0x41(%r8),%edx
    a415:	80 fa 05             	cmp    $0x5,%dl
    a418:	0f 87 01 01 00 00    	ja     a51f <mbedtls_mpi_read_string+0x28f>
    a41e:	41 83 e8 37          	sub    $0x37,%r8d
    a422:	4d 63 f0             	movslq %r8d,%r14
    a425:	eb 98                	jmp    a3bf <mbedtls_mpi_read_string+0x12f>
    a427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a42e:	00 00 
    a430:	31 f6                	xor    %esi,%esi
    a432:	4c 89 ff             	mov    %r15,%rdi
    a435:	e8 86 f1 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    a43a:	85 c0                	test   %eax,%eax
    a43c:	0f 85 15 ff ff ff    	jne    a357 <mbedtls_mpi_read_string+0xc7>
    a442:	31 f6                	xor    %esi,%esi
    a444:	4d 85 f6             	test   %r14,%r14
    a447:	74 7e                	je     a4c7 <mbedtls_mpi_read_string+0x237>
    a449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a450:	49 83 ed 01          	sub    $0x1,%r13
    a454:	42 0f be 04 2b       	movsbl (%rbx,%r13,1),%eax
    a459:	8d 48 d0             	lea    -0x30(%rax),%ecx
    a45c:	89 c2                	mov    %eax,%edx
    a45e:	80 f9 09             	cmp    $0x9,%cl
    a461:	76 35                	jbe    a498 <mbedtls_mpi_read_string+0x208>
    a463:	8d 48 bf             	lea    -0x41(%rax),%ecx
    a466:	80 f9 05             	cmp    $0x5,%cl
    a469:	76 75                	jbe    a4e0 <mbedtls_mpi_read_string+0x250>
    a46b:	83 ea 61             	sub    $0x61,%edx
    a46e:	80 fa 05             	cmp    $0x5,%dl
    a471:	76 65                	jbe    a4d8 <mbedtls_mpi_read_string+0x248>
    a473:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    a478:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
    a47d:	e9 d5 fe ff ff       	jmpq   a357 <mbedtls_mpi_read_string+0xc7>
    a482:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a488:	e8 33 ed ff ff       	callq  91c0 <mbedtls_mpi_free>
    a48d:	31 c0                	xor    %eax,%eax
    a48f:	e9 d3 fe ff ff       	jmpq   a367 <mbedtls_mpi_read_string+0xd7>
    a494:	0f 1f 40 00          	nopl   0x0(%rax)
    a498:	83 e8 30             	sub    $0x30,%eax
    a49b:	48 98                	cltq   
    a49d:	48 89 f7             	mov    %rsi,%rdi
    a4a0:	8d 0c b5 00 00 00 00 	lea    0x0(,%rsi,4),%ecx
    a4a7:	49 8b 57 10          	mov    0x10(%r15),%rdx
    a4ab:	48 83 c6 01          	add    $0x1,%rsi
    a4af:	48 c1 ef 04          	shr    $0x4,%rdi
    a4b3:	83 e1 3c             	and    $0x3c,%ecx
    a4b6:	48 d3 e0             	shl    %cl,%rax
    a4b9:	48 09 04 fa          	or     %rax,(%rdx,%rdi,8)
    a4bd:	4d 85 ed             	test   %r13,%r13
    a4c0:	75 8e                	jne    a450 <mbedtls_mpi_read_string+0x1c0>
    a4c2:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    a4c7:	83 7c 24 0c ff       	cmpl   $0xffffffff,0xc(%rsp)
    a4cc:	74 22                	je     a4f0 <mbedtls_mpi_read_string+0x260>
    a4ce:	31 c0                	xor    %eax,%eax
    a4d0:	e9 82 fe ff ff       	jmpq   a357 <mbedtls_mpi_read_string+0xc7>
    a4d5:	0f 1f 00             	nopl   (%rax)
    a4d8:	83 e8 57             	sub    $0x57,%eax
    a4db:	48 98                	cltq   
    a4dd:	eb be                	jmp    a49d <mbedtls_mpi_read_string+0x20d>
    a4df:	90                   	nop
    a4e0:	83 e8 37             	sub    $0x37,%eax
    a4e3:	48 98                	cltq   
    a4e5:	eb b6                	jmp    a49d <mbedtls_mpi_read_string+0x20d>
    a4e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a4ee:	00 00 
    a4f0:	49 8b 77 08          	mov    0x8(%r15),%rsi
    a4f4:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    a4f8:	e8 73 40 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    a4fd:	48 85 c0             	test   %rax,%rax
    a500:	74 cc                	je     a4ce <mbedtls_mpi_read_string+0x23e>
    a502:	41 c7 07 ff ff ff ff 	movl   $0xffffffff,(%r15)
    a509:	31 c0                	xor    %eax,%eax
    a50b:	e9 47 fe ff ff       	jmpq   a357 <mbedtls_mpi_read_string+0xc7>
    a510:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    a515:	e9 4d fe ff ff       	jmpq   a367 <mbedtls_mpi_read_string+0xd7>
    a51a:	e8 61 8d ff ff       	callq  3280 <__stack_chk_fail@plt>
    a51f:	83 e8 61             	sub    $0x61,%eax
    a522:	3c 05                	cmp    $0x5,%al
    a524:	0f 87 4e ff ff ff    	ja     a478 <mbedtls_mpi_read_string+0x1e8>
    a52a:	41 83 e8 57          	sub    $0x57,%r8d
    a52e:	4d 63 f0             	movslq %r8d,%r14
    a531:	e9 89 fe ff ff       	jmpq   a3bf <mbedtls_mpi_read_string+0x12f>
    a536:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a53d:	00 00 00 

000000000000a540 <mbedtls_mpi_read_file>:
    a540:	f3 0f 1e fa          	endbr64 
    a544:	41 55                	push   %r13
    a546:	41 54                	push   %r12
    a548:	55                   	push   %rbp
    a549:	48 81 ec c0 09 00 00 	sub    $0x9c0,%rsp
    a550:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a557:	00 00 
    a559:	48 89 84 24 b8 09 00 	mov    %rax,0x9b8(%rsp)
    a560:	00 
    a561:	31 c0                	xor    %eax,%eax
    a563:	8d 46 fe             	lea    -0x2(%rsi),%eax
    a566:	83 f8 0e             	cmp    $0xe,%eax
    a569:	0f 87 4f 01 00 00    	ja     a6be <mbedtls_mpi_read_file+0x17e>
    a56f:	48 89 e5             	mov    %rsp,%rbp
    a572:	31 c0                	xor    %eax,%eax
    a574:	49 89 fd             	mov    %rdi,%r13
    a577:	b9 36 01 00 00       	mov    $0x136,%ecx
    a57c:	48 89 ef             	mov    %rbp,%rdi
    a57f:	41 89 f4             	mov    %esi,%r12d
    a582:	be b3 09 00 00       	mov    $0x9b3,%esi
    a587:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    a58a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    a590:	48 89 ef             	mov    %rbp,%rdi
    a593:	e8 38 8d ff ff       	callq  32d0 <fgets@plt>
    a598:	48 85 c0             	test   %rax,%rax
    a59b:	0f 84 2b 01 00 00    	je     a6cc <mbedtls_mpi_read_file+0x18c>
    a5a1:	48 89 ea             	mov    %rbp,%rdx
    a5a4:	8b 0a                	mov    (%rdx),%ecx
    a5a6:	48 83 c2 04          	add    $0x4,%rdx
    a5aa:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    a5b0:	f7 d1                	not    %ecx
    a5b2:	21 c8                	and    %ecx,%eax
    a5b4:	25 80 80 80 80       	and    $0x80808080,%eax
    a5b9:	74 e9                	je     a5a4 <mbedtls_mpi_read_file+0x64>
    a5bb:	89 c1                	mov    %eax,%ecx
    a5bd:	c1 e9 10             	shr    $0x10,%ecx
    a5c0:	a9 80 80 00 00       	test   $0x8080,%eax
    a5c5:	0f 44 c1             	cmove  %ecx,%eax
    a5c8:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    a5cc:	48 0f 44 d1          	cmove  %rcx,%rdx
    a5d0:	89 c7                	mov    %eax,%edi
    a5d2:	40 00 c7             	add    %al,%dil
    a5d5:	48 83 da 03          	sbb    $0x3,%rdx
    a5d9:	48 29 ea             	sub    %rbp,%rdx
    a5dc:	48 81 fa b2 09 00 00 	cmp    $0x9b2,%rdx
    a5e3:	0f 84 dc 00 00 00    	je     a6c5 <mbedtls_mpi_read_file+0x185>
    a5e9:	48 85 d2             	test   %rdx,%rdx
    a5ec:	0f 85 7e 00 00 00    	jne    a670 <mbedtls_mpi_read_file+0x130>
    a5f2:	48 89 ea             	mov    %rbp,%rdx
    a5f5:	49 63 fc             	movslq %r12d,%rdi
    a5f8:	eb 14                	jmp    a60e <mbedtls_mpi_read_file+0xce>
    a5fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a600:	83 e8 30             	sub    $0x30,%eax
    a603:	48 98                	cltq   
    a605:	48 83 ea 01          	sub    $0x1,%rdx
    a609:	48 39 c7             	cmp    %rax,%rdi
    a60c:	76 32                	jbe    a640 <mbedtls_mpi_read_file+0x100>
    a60e:	49 89 d0             	mov    %rdx,%r8
    a611:	48 39 ea             	cmp    %rbp,%rdx
    a614:	76 2a                	jbe    a640 <mbedtls_mpi_read_file+0x100>
    a616:	0f be 42 ff          	movsbl -0x1(%rdx),%eax
    a61a:	8d 70 d0             	lea    -0x30(%rax),%esi
    a61d:	89 c1                	mov    %eax,%ecx
    a61f:	40 80 fe 09          	cmp    $0x9,%sil
    a623:	76 db                	jbe    a600 <mbedtls_mpi_read_file+0xc0>
    a625:	8d 70 bf             	lea    -0x41(%rax),%esi
    a628:	40 80 fe 05          	cmp    $0x5,%sil
    a62c:	0f 87 a9 00 00 00    	ja     a6db <mbedtls_mpi_read_file+0x19b>
    a632:	83 e8 37             	sub    $0x37,%eax
    a635:	48 83 ea 01          	sub    $0x1,%rdx
    a639:	48 98                	cltq   
    a63b:	48 39 c7             	cmp    %rax,%rdi
    a63e:	77 ce                	ja     a60e <mbedtls_mpi_read_file+0xce>
    a640:	4c 89 c2             	mov    %r8,%rdx
    a643:	44 89 e6             	mov    %r12d,%esi
    a646:	4c 89 ef             	mov    %r13,%rdi
    a649:	e8 42 fc ff ff       	callq  a290 <mbedtls_mpi_read_string>
    a64e:	48 8b bc 24 b8 09 00 	mov    0x9b8(%rsp),%rdi
    a655:	00 
    a656:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    a65d:	00 00 
    a65f:	75 75                	jne    a6d6 <mbedtls_mpi_read_file+0x196>
    a661:	48 81 c4 c0 09 00 00 	add    $0x9c0,%rsp
    a668:	5d                   	pop    %rbp
    a669:	41 5c                	pop    %r12
    a66b:	41 5d                	pop    %r13
    a66d:	c3                   	retq   
    a66e:	66 90                	xchg   %ax,%ax
    a670:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    a674:	0f b6 0c 04          	movzbl (%rsp,%rax,1),%ecx
    a678:	80 f9 0a             	cmp    $0xa,%cl
    a67b:	74 23                	je     a6a0 <mbedtls_mpi_read_file+0x160>
    a67d:	48 01 ea             	add    %rbp,%rdx
    a680:	80 f9 0d             	cmp    $0xd,%cl
    a683:	0f 85 6c ff ff ff    	jne    a5f5 <mbedtls_mpi_read_file+0xb5>
    a689:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
    a68d:	48 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%rdx
    a692:	e9 5e ff ff ff       	jmpq   a5f5 <mbedtls_mpi_read_file+0xb5>
    a697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a69e:	00 00 
    a6a0:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
    a6a4:	48 85 c0             	test   %rax,%rax
    a6a7:	0f 84 45 ff ff ff    	je     a5f2 <mbedtls_mpi_read_file+0xb2>
    a6ad:	48 8d 72 fe          	lea    -0x2(%rdx),%rsi
    a6b1:	0f b6 4c 14 fe       	movzbl -0x2(%rsp,%rdx,1),%ecx
    a6b6:	48 89 c2             	mov    %rax,%rdx
    a6b9:	48 89 f0             	mov    %rsi,%rax
    a6bc:	eb bf                	jmp    a67d <mbedtls_mpi_read_file+0x13d>
    a6be:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    a6c3:	eb 89                	jmp    a64e <mbedtls_mpi_read_file+0x10e>
    a6c5:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    a6ca:	eb 82                	jmp    a64e <mbedtls_mpi_read_file+0x10e>
    a6cc:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    a6d1:	e9 78 ff ff ff       	jmpq   a64e <mbedtls_mpi_read_file+0x10e>
    a6d6:	e8 a5 8b ff ff       	callq  3280 <__stack_chk_fail@plt>
    a6db:	83 e9 61             	sub    $0x61,%ecx
    a6de:	80 f9 05             	cmp    $0x5,%cl
    a6e1:	0f 87 59 ff ff ff    	ja     a640 <mbedtls_mpi_read_file+0x100>
    a6e7:	83 e8 57             	sub    $0x57,%eax
    a6ea:	48 98                	cltq   
    a6ec:	e9 14 ff ff ff       	jmpq   a605 <mbedtls_mpi_read_file+0xc5>
    a6f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a6f8:	00 00 00 00 
    a6fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a700 <mbedtls_mpi_div_mpi>:
    a700:	f3 0f 1e fa          	endbr64 
    a704:	41 57                	push   %r15
    a706:	49 89 fb             	mov    %rdi,%r11
    a709:	41 56                	push   %r14
    a70b:	41 55                	push   %r13
    a70d:	41 54                	push   %r12
    a70f:	55                   	push   %rbp
    a710:	48 89 d5             	mov    %rdx,%rbp
    a713:	53                   	push   %rbx
    a714:	48 89 cb             	mov    %rcx,%rbx
    a717:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
    a71e:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    a723:	4c 8d bc 24 30 01 00 	lea    0x130(%rsp),%r15
    a72a:	00 
    a72b:	48 89 cf             	mov    %rcx,%rdi
    a72e:	4c 8d ac 24 50 01 00 	lea    0x150(%rsp),%r13
    a735:	00 
    a736:	48 89 34 24          	mov    %rsi,(%rsp)
    a73a:	4c 89 fe             	mov    %r15,%rsi
    a73d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a744:	00 00 
    a746:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
    a74d:	00 
    a74e:	31 c0                	xor    %eax,%eax
    a750:	4c 89 ac 24 40 01 00 	mov    %r13,0x140(%rsp)
    a757:	00 
    a758:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
    a75f:	00 00 00 00 00 
    a764:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
    a76b:	01 00 00 00 
    a76f:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    a776:	00 01 00 00 00 
    a77b:	e8 20 f3 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    a780:	85 c0                	test   %eax,%eax
    a782:	0f 84 68 05 00 00    	je     acf0 <mbedtls_mpi_div_mpi+0x5f0>
    a788:	48 89 de             	mov    %rbx,%rsi
    a78b:	48 89 ef             	mov    %rbp,%rdi
    a78e:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    a795:	01 00 00 00 
    a799:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
    a7a0:	00 00 00 00 00 
    a7a5:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    a7ac:	00 00 00 00 00 
    a7b1:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
    a7b8:	01 00 00 00 
    a7bc:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
    a7c3:	00 00 00 00 00 
    a7c8:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
    a7cf:	00 00 00 00 00 
    a7d4:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
    a7db:	01 00 00 00 
    a7df:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
    a7e6:	00 00 00 00 00 
    a7eb:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
    a7f2:	00 00 00 00 00 
    a7f7:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
    a7fe:	01 00 00 00 
    a802:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
    a809:	00 00 00 00 00 
    a80e:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
    a815:	00 00 00 00 00 
    a81a:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
    a821:	01 00 00 00 
    a825:	48 c7 84 24 18 01 00 	movq   $0x3,0x118(%rsp)
    a82c:	00 03 00 00 00 
    a831:	4c 89 ac 24 20 01 00 	mov    %r13,0x120(%rsp)
    a838:	00 
    a839:	e8 a2 f1 ff ff       	callq  99e0 <mbedtls_mpi_cmp_abs>
    a83e:	85 c0                	test   %eax,%eax
    a840:	0f 89 ca 00 00 00    	jns    a910 <mbedtls_mpi_div_mpi+0x210>
    a846:	4d 85 db             	test   %r11,%r11
    a849:	74 13                	je     a85e <mbedtls_mpi_div_mpi+0x15e>
    a84b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    a850:	31 f6                	xor    %esi,%esi
    a852:	e8 69 ed ff ff       	callq  95c0 <mbedtls_mpi_lset>
    a857:	41 89 c4             	mov    %eax,%r12d
    a85a:	85 c0                	test   %eax,%eax
    a85c:	75 1a                	jne    a878 <mbedtls_mpi_div_mpi+0x178>
    a85e:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    a863:	74 73                	je     a8d8 <mbedtls_mpi_div_mpi+0x1d8>
    a865:	48 8b 3c 24          	mov    (%rsp),%rdi
    a869:	48 89 ee             	mov    %rbp,%rsi
    a86c:	e8 df eb ff ff       	callq  9450 <mbedtls_mpi_copy>
    a871:	41 89 c4             	mov    %eax,%r12d
    a874:	85 c0                	test   %eax,%eax
    a876:	74 60                	je     a8d8 <mbedtls_mpi_div_mpi+0x1d8>
    a878:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
    a87f:	00 
    a880:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    a887:	00 
    a888:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
    a88f:	00 
    a890:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a895:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    a89c:	00 
    a89d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    a8a2:	4c 89 c7             	mov    %r8,%rdi
    a8a5:	e8 16 e9 ff ff       	callq  91c0 <mbedtls_mpi_free>
    a8aa:	4c 89 f7             	mov    %r14,%rdi
    a8ad:	e8 0e e9 ff ff       	callq  91c0 <mbedtls_mpi_free>
    a8b2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a8b7:	e8 04 e9 ff ff       	callq  91c0 <mbedtls_mpi_free>
    a8bc:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    a8c1:	e8 fa e8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    a8c6:	be 18 00 00 00       	mov    $0x18,%esi
    a8cb:	4c 89 ef             	mov    %r13,%rdi
    a8ce:	e8 5d 80 00 00       	callq  12930 <mbedtls_platform_zeroize>
    a8d3:	eb 06                	jmp    a8db <mbedtls_mpi_div_mpi+0x1db>
    a8d5:	0f 1f 00             	nopl   (%rax)
    a8d8:	45 31 e4             	xor    %r12d,%r12d
    a8db:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
    a8e2:	00 
    a8e3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a8ea:	00 00 
    a8ec:	0f 85 5d 06 00 00    	jne    af4f <mbedtls_mpi_div_mpi+0x84f>
    a8f2:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
    a8f9:	44 89 e0             	mov    %r12d,%eax
    a8fc:	5b                   	pop    %rbx
    a8fd:	5d                   	pop    %rbp
    a8fe:	41 5c                	pop    %r12
    a900:	41 5d                	pop    %r13
    a902:	41 5e                	pop    %r14
    a904:	41 5f                	pop    %r15
    a906:	c3                   	retq   
    a907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a90e:	00 00 
    a910:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
    a917:	00 
    a918:	48 89 ee             	mov    %rbp,%rsi
    a91b:	4c 89 c7             	mov    %r8,%rdi
    a91e:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    a923:	e8 28 eb ff ff       	callq  9450 <mbedtls_mpi_copy>
    a928:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    a92d:	85 c0                	test   %eax,%eax
    a92f:	41 89 c4             	mov    %eax,%r12d
    a932:	0f 85 48 ff ff ff    	jne    a880 <mbedtls_mpi_div_mpi+0x180>
    a938:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
    a93f:	00 
    a940:	48 89 de             	mov    %rbx,%rsi
    a943:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    a948:	4c 89 f7             	mov    %r14,%rdi
    a94b:	e8 00 eb ff ff       	callq  9450 <mbedtls_mpi_copy>
    a950:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    a955:	85 c0                	test   %eax,%eax
    a957:	41 89 c4             	mov    %eax,%r12d
    a95a:	74 24                	je     a980 <mbedtls_mpi_div_mpi+0x280>
    a95c:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    a963:	00 
    a964:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a969:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    a970:	00 
    a971:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    a976:	e9 27 ff ff ff       	jmpq   a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    a97b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a980:	48 8b 45 08          	mov    0x8(%rbp),%rax
    a984:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    a989:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
    a990:	01 00 00 00 
    a994:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    a99b:	01 00 00 00 
    a99f:	48 8d 70 02          	lea    0x2(%rax),%rsi
    a9a3:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    a9aa:	00 
    a9ab:	48 89 c7             	mov    %rax,%rdi
    a9ae:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a9b3:	e8 68 e8 ff ff       	callq  9220 <mbedtls_mpi_grow>
    a9b8:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
    a9bf:	00 
    a9c0:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    a9c5:	85 c0                	test   %eax,%eax
    a9c7:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    a9cc:	41 89 c4             	mov    %eax,%r12d
    a9cf:	0f 85 cd fe ff ff    	jne    a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    a9d5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a9da:	31 f6                	xor    %esi,%esi
    a9dc:	e8 df eb ff ff       	callq  95c0 <mbedtls_mpi_lset>
    a9e1:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    a9e6:	85 c0                	test   %eax,%eax
    a9e8:	41 89 c4             	mov    %eax,%r12d
    a9eb:	0f 85 b1 fe ff ff    	jne    a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    a9f1:	48 8b 45 08          	mov    0x8(%rbp),%rax
    a9f5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    a9fa:	48 8d 70 02          	lea    0x2(%rax),%rsi
    a9fe:	e8 1d e8 ff ff       	callq  9220 <mbedtls_mpi_grow>
    aa03:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    aa08:	85 c0                	test   %eax,%eax
    aa0a:	41 89 c4             	mov    %eax,%r12d
    aa0d:	0f 85 8f fe ff ff    	jne    a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    aa13:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    aa1a:	00 
    aa1b:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
    aa22:	00 
    aa23:	e8 48 3b 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    aa28:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    aa2d:	83 e0 3f             	and    $0x3f,%eax
    aa30:	48 83 f8 3f          	cmp    $0x3f,%rax
    aa34:	0f 84 c1 02 00 00    	je     acfb <mbedtls_mpi_div_mpi+0x5fb>
    aa3a:	ba 3f 00 00 00       	mov    $0x3f,%edx
    aa3f:	4c 89 c7             	mov    %r8,%rdi
    aa42:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    aa47:	48 29 c2             	sub    %rax,%rdx
    aa4a:	48 89 d6             	mov    %rdx,%rsi
    aa4d:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    aa52:	e8 29 ee ff ff       	callq  9880 <mbedtls_mpi_shift_l>
    aa57:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    aa5c:	85 c0                	test   %eax,%eax
    aa5e:	41 89 c4             	mov    %eax,%r12d
    aa61:	0f 85 3b fe ff ff    	jne    a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    aa67:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    aa6c:	4c 89 f7             	mov    %r14,%rdi
    aa6f:	e8 0c ee ff ff       	callq  9880 <mbedtls_mpi_shift_l>
    aa74:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    aa79:	85 c0                	test   %eax,%eax
    aa7b:	41 89 c4             	mov    %eax,%r12d
    aa7e:	0f 85 1e fe ff ff    	jne    a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    aa84:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
    aa8b:	00 
    aa8c:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    aa93:	00 
    aa94:	4c 89 f7             	mov    %r14,%rdi
    aa97:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    aa9c:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    aaa1:	48 29 c2             	sub    %rax,%rdx
    aaa4:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    aaa9:	48 89 d0             	mov    %rdx,%rax
    aaac:	48 c1 e0 06          	shl    $0x6,%rax
    aab0:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    aab5:	48 89 c6             	mov    %rax,%rsi
    aab8:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    aabd:	e8 be ed ff ff       	callq  9880 <mbedtls_mpi_shift_l>
    aac2:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    aac7:	85 c0                	test   %eax,%eax
    aac9:	41 89 c4             	mov    %eax,%r12d
    aacc:	0f 85 d0 fd ff ff    	jne    a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    aad2:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    aad7:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
    aadc:	4c 89 c3             	mov    %r8,%rbx
    aadf:	44 89 64 24 30       	mov    %r12d,0x30(%rsp)
    aae4:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    aaeb:	00 
    aaec:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    aaf1:	49 89 c4             	mov    %rax,%r12
    aaf4:	eb 34                	jmp    ab2a <mbedtls_mpi_div_mpi+0x42a>
    aaf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    aafd:	00 00 00 
    ab00:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    ab05:	4c 89 f2             	mov    %r14,%rdx
    ab08:	48 89 de             	mov    %rbx,%rsi
    ab0b:	48 89 df             	mov    %rbx,%rdi
    ab0e:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    ab15:	00 
    ab16:	4c 01 e0             	add    %r12,%rax
    ab19:	48 83 00 01          	addq   $0x1,(%rax)
    ab1d:	e8 1e f3 ff ff       	callq  9e40 <add_sub_mpi>
    ab22:	85 c0                	test   %eax,%eax
    ab24:	0f 85 df 01 00 00    	jne    ad09 <mbedtls_mpi_div_mpi+0x609>
    ab2a:	4c 89 f6             	mov    %r14,%rsi
    ab2d:	48 89 df             	mov    %rbx,%rdi
    ab30:	e8 6b ef ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    ab35:	85 c0                	test   %eax,%eax
    ab37:	79 c7                	jns    ab00 <mbedtls_mpi_div_mpi+0x400>
    ab39:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    ab40:	00 
    ab41:	49 89 d8             	mov    %rbx,%r8
    ab44:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    ab49:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    ab4e:	48 85 f6             	test   %rsi,%rsi
    ab51:	0f 85 d7 03 00 00    	jne    af2e <mbedtls_mpi_div_mpi+0x82e>
    ab57:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    ab5c:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    ab61:	48 83 e8 01          	sub    $0x1,%rax
    ab65:	48 83 e9 01          	sub    $0x1,%rcx
    ab69:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    ab6e:	48 39 c8             	cmp    %rcx,%rax
    ab71:	0f 86 de 02 00 00    	jbe    ae55 <mbedtls_mpi_div_mpi+0x755>
    ab77:	48 89 c8             	mov    %rcx,%rax
    ab7a:	48 8d 14 cd 00 00 00 	lea    0x0(,%rcx,8),%rdx
    ab81:	00 
    ab82:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    ab87:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
    ab8e:	00 
    ab8f:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
    ab94:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    ab99:	48 83 e9 08          	sub    $0x8,%rcx
    ab9d:	44 89 64 24 5c       	mov    %r12d,0x5c(%rsp)
    aba2:	49 89 c4             	mov    %rax,%r12
    aba5:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
    abaa:	48 89 d5             	mov    %rdx,%rbp
    abad:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)
    abb2:	48 89 cb             	mov    %rcx,%rbx
    abb5:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
    abba:	4d 89 c7             	mov    %r8,%r15
    abbd:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
    abc2:	49 89 f5             	mov    %rsi,%r13
    abc5:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
    abcc:	00 
    abcd:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    abd2:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
    abd9:	00 
    abda:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
    abe1:	00 
    abe2:	49 89 cb             	mov    %rcx,%r11
    abe5:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
    abec:	00 
    abed:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
    abf2:	49 01 fb             	add    %rdi,%r11
    abf5:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    abfa:	4c 8d 44 39 f8       	lea    -0x8(%rcx,%rdi,1),%r8
    abff:	4d 8d 14 19          	lea    (%r9,%rbx,1),%r10
    ac03:	49 8b 33             	mov    (%r11),%rsi
    ac06:	48 8b 14 28          	mov    (%rax,%rbp,1),%rdx
    ac0a:	48 39 d6             	cmp    %rdx,%rsi
    ac0d:	0f 82 01 01 00 00    	jb     ad14 <mbedtls_mpi_div_mpi+0x614>
    ac13:	49 c7 02 ff ff ff ff 	movq   $0xffffffffffffffff,(%r10)
    ac1a:	31 c0                	xor    %eax,%eax
    ac1c:	48 83 7c 24 30 01    	cmpq   $0x1,0x30(%rsp)
    ac22:	74 0f                	je     ac33 <mbedtls_mpi_div_mpi+0x533>
    ac24:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    ac29:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    ac2e:	48 8b 44 08 f0       	mov    -0x10(%rax,%rcx,1),%rax
    ac33:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
    ac3a:	00 
    ac3b:	49 8b 00             	mov    (%r8),%rax
    ac3e:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
    ac45:	00 
    ac46:	49 8b 03             	mov    (%r11),%rax
    ac49:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
    ac50:	00 
    ac51:	49 8b 02             	mov    (%r10),%rax
    ac54:	48 8d 50 01          	lea    0x1(%rax),%rdx
    ac58:	49 89 12             	mov    %rdx,(%r10)
    ac5b:	eb 64                	jmp    acc1 <mbedtls_mpi_div_mpi+0x5c1>
    ac5d:	0f 1f 00             	nopl   (%rax)
    ac60:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
    ac67:	00 
    ac68:	31 c9                	xor    %ecx,%ecx
    ac6a:	4d 85 e4             	test   %r12,%r12
    ac6d:	74 05                	je     ac74 <mbedtls_mpi_div_mpi+0x574>
    ac6f:	48 8b 4c 2a f8       	mov    -0x8(%rdx,%rbp,1),%rcx
    ac74:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
    ac7b:	00 
    ac7c:	4c 89 f6             	mov    %r14,%rsi
    ac7f:	4c 89 f7             	mov    %r14,%rdi
    ac82:	48 89 08             	mov    %rcx,(%rax)
    ac85:	48 8b 14 2a          	mov    (%rdx,%rbp,1),%rdx
    ac89:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ac8d:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    ac94:	00 
    ac95:	48 8b 14 18          	mov    (%rax,%rbx,1),%rdx
    ac99:	e8 32 f5 ff ff       	callq  a1d0 <mbedtls_mpi_mul_int>
    ac9e:	85 c0                	test   %eax,%eax
    aca0:	75 35                	jne    acd7 <mbedtls_mpi_div_mpi+0x5d7>
    aca2:	4c 89 ee             	mov    %r13,%rsi
    aca5:	4c 89 f7             	mov    %r14,%rdi
    aca8:	e8 f3 ed ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    acad:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
    acb4:	00 
    acb5:	49 8b 14 19          	mov    (%r9,%rbx,1),%rdx
    acb9:	85 c0                	test   %eax,%eax
    acbb:	0f 8e c8 00 00 00    	jle    ad89 <mbedtls_mpi_div_mpi+0x689>
    acc1:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    acc5:	31 f6                	xor    %esi,%esi
    acc7:	4c 89 f7             	mov    %r14,%rdi
    acca:	49 89 04 19          	mov    %rax,(%r9,%rbx,1)
    acce:	e8 ed e8 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    acd3:	85 c0                	test   %eax,%eax
    acd5:	74 89                	je     ac60 <mbedtls_mpi_div_mpi+0x560>
    acd7:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    acdc:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    ace1:	4d 89 f8             	mov    %r15,%r8
    ace4:	41 89 c4             	mov    %eax,%r12d
    ace7:	e9 b6 fb ff ff       	jmpq   a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    acec:	0f 1f 40 00          	nopl   0x0(%rax)
    acf0:	41 bc f4 ff ff ff    	mov    $0xfffffff4,%r12d
    acf6:	e9 e0 fb ff ff       	jmpq   a8db <mbedtls_mpi_div_mpi+0x1db>
    acfb:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    ad02:	00 00 
    ad04:	e9 7b fd ff ff       	jmpq   aa84 <mbedtls_mpi_div_mpi+0x384>
    ad09:	49 89 d8             	mov    %rbx,%r8
    ad0c:	41 89 c4             	mov    %eax,%r12d
    ad0f:	e9 8e fb ff ff       	jmpq   a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    ad14:	49 8b 38             	mov    (%r8),%rdi
    ad17:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    ad1e:	48 85 d2             	test   %rdx,%rdx
    ad21:	74 5e                	je     ad81 <mbedtls_mpi_div_mpi+0x681>
    ad23:	31 c9                	xor    %ecx,%ecx
    ad25:	4c 89 8c 24 88 00 00 	mov    %r9,0x88(%rsp)
    ad2c:	00 
    ad2d:	4c 89 94 24 80 00 00 	mov    %r10,0x80(%rsp)
    ad34:	00 
    ad35:	4c 89 5c 24 78       	mov    %r11,0x78(%rsp)
    ad3a:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
    ad3f:	e8 bc c4 00 00       	callq  17200 <__udivti3>
    ad44:	b9 00 00 00 00       	mov    $0x0,%ecx
    ad49:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    ad50:	4c 8b 8c 24 88 00 00 	mov    0x88(%rsp),%r9
    ad57:	00 
    ad58:	48 89 d7             	mov    %rdx,%rdi
    ad5b:	48 39 c6             	cmp    %rax,%rsi
    ad5e:	48 89 c2             	mov    %rax,%rdx
    ad61:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    ad68:	48 19 f9             	sbb    %rdi,%rcx
    ad6b:	4c 8b 5c 24 78       	mov    0x78(%rsp),%r11
    ad70:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    ad75:	48 0f 43 c2          	cmovae %rdx,%rax
    ad79:	4c 8b 94 24 80 00 00 	mov    0x80(%rsp),%r10
    ad80:	00 
    ad81:	49 89 02             	mov    %rax,(%r10)
    ad84:	e9 91 fe ff ff       	jmpq   ac1a <mbedtls_mpi_div_mpi+0x51a>
    ad89:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    ad8e:	e8 3d f4 ff ff       	callq  a1d0 <mbedtls_mpi_mul_int>
    ad93:	85 c0                	test   %eax,%eax
    ad95:	0f 85 3c ff ff ff    	jne    acd7 <mbedtls_mpi_div_mpi+0x5d7>
    ad9b:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    ada2:	00 
    ada3:	4c 89 f7             	mov    %r14,%rdi
    ada6:	48 89 c6             	mov    %rax,%rsi
    ada9:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    adae:	e8 cd ea ff ff       	callq  9880 <mbedtls_mpi_shift_l>
    adb3:	85 c0                	test   %eax,%eax
    adb5:	0f 85 1c ff ff ff    	jne    acd7 <mbedtls_mpi_div_mpi+0x5d7>
    adbb:	83 c9 ff             	or     $0xffffffff,%ecx
    adbe:	4c 89 f2             	mov    %r14,%rdx
    adc1:	4c 89 fe             	mov    %r15,%rsi
    adc4:	4c 89 ff             	mov    %r15,%rdi
    adc7:	e8 74 f0 ff ff       	callq  9e40 <add_sub_mpi>
    adcc:	85 c0                	test   %eax,%eax
    adce:	0f 85 03 ff ff ff    	jne    acd7 <mbedtls_mpi_div_mpi+0x5d7>
    add4:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    add9:	4c 89 ff             	mov    %r15,%rdi
    addc:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
    ade3:	00 
    ade4:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
    adeb:	00 00 00 00 00 
    adf0:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
    adf7:	01 00 00 00 
    adfb:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    ae02:	00 01 00 00 00 
    ae07:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
    ae0e:	00 
    ae0f:	e8 8c ec ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    ae14:	85 c0                	test   %eax,%eax
    ae16:	0f 88 38 01 00 00    	js     af54 <mbedtls_mpi_div_mpi+0x854>
    ae1c:	48 83 6c 24 30 01    	subq   $0x1,0x30(%rsp)
    ae22:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    ae27:	48 83 eb 08          	sub    $0x8,%rbx
    ae2b:	49 39 c4             	cmp    %rax,%r12
    ae2e:	0f 82 91 fd ff ff    	jb     abc5 <mbedtls_mpi_div_mpi+0x4c5>
    ae34:	4d 89 f8             	mov    %r15,%r8
    ae37:	44 8b 64 24 5c       	mov    0x5c(%rsp),%r12d
    ae3c:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
    ae41:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    ae46:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    ae4b:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    ae50:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    ae55:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    ae5b:	74 2e                	je     ae8b <mbedtls_mpi_div_mpi+0x78b>
    ae5d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    ae62:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    ae67:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    ae6c:	e8 df e5 ff ff       	callq  9450 <mbedtls_mpi_copy>
    ae71:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    ae76:	85 c0                	test   %eax,%eax
    ae78:	0f 85 50 01 00 00    	jne    afce <mbedtls_mpi_div_mpi+0x8ce>
    ae7e:	8b 45 00             	mov    0x0(%rbp),%eax
    ae81:	0f af 03             	imul   (%rbx),%eax
    ae84:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    ae89:	89 01                	mov    %eax,(%rcx)
    ae8b:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    ae90:	0f 84 0c fa ff ff    	je     a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    ae96:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
    ae9d:	00 
    ae9e:	48 85 f6             	test   %rsi,%rsi
    aea1:	0f 85 06 01 00 00    	jne    afad <mbedtls_mpi_div_mpi+0x8ad>
    aea7:	48 8b 1c 24          	mov    (%rsp),%rbx
    aeab:	8b 45 00             	mov    0x0(%rbp),%eax
    aeae:	4c 89 c6             	mov    %r8,%rsi
    aeb1:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    aeb6:	48 89 df             	mov    %rbx,%rdi
    aeb9:	89 84 24 90 00 00 00 	mov    %eax,0x90(%rsp)
    aec0:	e8 8b e5 ff ff       	callq  9450 <mbedtls_mpi_copy>
    aec5:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    aeca:	85 c0                	test   %eax,%eax
    aecc:	0f 85 fc 00 00 00    	jne    afce <mbedtls_mpi_div_mpi+0x8ce>
    aed2:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
    aed9:	00 
    aeda:	4c 89 fe             	mov    %r15,%rsi
    aedd:	48 89 df             	mov    %rbx,%rdi
    aee0:	4c 89 04 24          	mov    %r8,(%rsp)
    aee4:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
    aeeb:	00 00 00 00 00 
    aef0:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
    aef7:	01 00 00 00 
    aefb:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    af02:	00 01 00 00 00 
    af07:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
    af0e:	00 
    af0f:	e8 8c eb ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    af14:	4c 8b 04 24          	mov    (%rsp),%r8
    af18:	85 c0                	test   %eax,%eax
    af1a:	0f 85 82 f9 ff ff    	jne    a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    af20:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    af26:	45 31 e4             	xor    %r12d,%r12d
    af29:	e9 74 f9 ff ff       	jmpq   a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    af2e:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
    af33:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    af38:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
    af3f:	00 
    af40:	e8 4b 3a 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    af45:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    af4a:	e9 08 fc ff ff       	jmpq   ab57 <mbedtls_mpi_div_mpi+0x457>
    af4f:	e8 2c 83 ff ff       	callq  3280 <__stack_chk_fail@plt>
    af54:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    af59:	4c 89 f7             	mov    %r14,%rdi
    af5c:	e8 ef e4 ff ff       	callq  9450 <mbedtls_mpi_copy>
    af61:	85 c0                	test   %eax,%eax
    af63:	0f 85 6e fd ff ff    	jne    acd7 <mbedtls_mpi_div_mpi+0x5d7>
    af69:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    af6e:	4c 89 f7             	mov    %r14,%rdi
    af71:	e8 0a e9 ff ff       	callq  9880 <mbedtls_mpi_shift_l>
    af76:	85 c0                	test   %eax,%eax
    af78:	0f 85 59 fd ff ff    	jne    acd7 <mbedtls_mpi_div_mpi+0x5d7>
    af7e:	b9 01 00 00 00       	mov    $0x1,%ecx
    af83:	4c 89 f2             	mov    %r14,%rdx
    af86:	4c 89 fe             	mov    %r15,%rsi
    af89:	4c 89 ff             	mov    %r15,%rdi
    af8c:	e8 af ee ff ff       	callq  9e40 <add_sub_mpi>
    af91:	85 c0                	test   %eax,%eax
    af93:	0f 85 3e fd ff ff    	jne    acd7 <mbedtls_mpi_div_mpi+0x5d7>
    af99:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    afa0:	00 
    afa1:	48 01 d8             	add    %rbx,%rax
    afa4:	48 83 28 01          	subq   $0x1,(%rax)
    afa8:	e9 6f fe ff ff       	jmpq   ae1c <mbedtls_mpi_div_mpi+0x71c>
    afad:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    afb2:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
    afb9:	00 
    afba:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    afbf:	e8 cc 39 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    afc4:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    afc9:	e9 d9 fe ff ff       	jmpq   aea7 <mbedtls_mpi_div_mpi+0x7a7>
    afce:	41 89 c4             	mov    %eax,%r12d
    afd1:	e9 cc f8 ff ff       	jmpq   a8a2 <mbedtls_mpi_div_mpi+0x1a2>
    afd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    afdd:	00 00 00 

000000000000afe0 <mbedtls_mpi_div_int>:
    afe0:	f3 0f 1e fa          	endbr64 
    afe4:	48 83 ec 38          	sub    $0x38,%rsp
    afe8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    afef:	00 00 
    aff1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    aff6:	31 c0                	xor    %eax,%eax
    aff8:	b8 01 00 00 00       	mov    $0x1,%eax
    affd:	48 85 c9             	test   %rcx,%rcx
    b000:	79 08                	jns    b00a <mbedtls_mpi_div_int+0x2a>
    b002:	48 f7 d9             	neg    %rcx
    b005:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b00a:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    b00f:	48 89 e1             	mov    %rsp,%rcx
    b012:	89 04 24             	mov    %eax,(%rsp)
    b015:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    b01a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    b021:	00 00 
    b023:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    b028:	e8 d3 f6 ff ff       	callq  a700 <mbedtls_mpi_div_mpi>
    b02d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    b032:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    b039:	00 00 
    b03b:	75 05                	jne    b042 <mbedtls_mpi_div_int+0x62>
    b03d:	48 83 c4 38          	add    $0x38,%rsp
    b041:	c3                   	retq   
    b042:	e8 39 82 ff ff       	callq  3280 <__stack_chk_fail@plt>
    b047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b04e:	00 00 

000000000000b050 <mbedtls_mpi_mod_mpi>:
    b050:	f3 0f 1e fa          	endbr64 
    b054:	41 56                	push   %r14
    b056:	49 89 f1             	mov    %rsi,%r9
    b059:	41 55                	push   %r13
    b05b:	41 54                	push   %r12
    b05d:	55                   	push   %rbp
    b05e:	48 89 d5             	mov    %rdx,%rbp
    b061:	53                   	push   %rbx
    b062:	48 89 fb             	mov    %rdi,%rbx
    b065:	48 89 d7             	mov    %rdx,%rdi
    b068:	48 83 ec 30          	sub    $0x30,%rsp
    b06c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b073:	00 00 
    b075:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    b07a:	31 c0                	xor    %eax,%eax
    b07c:	49 89 e4             	mov    %rsp,%r12
    b07f:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    b084:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    b08b:	00 00 
    b08d:	4c 89 e6             	mov    %r12,%rsi
    b090:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    b097:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    b09e:	00 00 
    b0a0:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    b0a5:	e8 f6 e9 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    b0aa:	85 c0                	test   %eax,%eax
    b0ac:	0f 88 c3 00 00 00    	js     b175 <mbedtls_mpi_mod_mpi+0x125>
    b0b2:	48 89 e9             	mov    %rbp,%rcx
    b0b5:	4c 89 ca             	mov    %r9,%rdx
    b0b8:	48 89 de             	mov    %rbx,%rsi
    b0bb:	31 ff                	xor    %edi,%edi
    b0bd:	e8 3e f6 ff ff       	callq  a700 <mbedtls_mpi_div_mpi>
    b0c2:	41 89 c6             	mov    %eax,%r14d
    b0c5:	85 c0                	test   %eax,%eax
    b0c7:	74 22                	je     b0eb <mbedtls_mpi_mod_mpi+0x9b>
    b0c9:	e9 82 00 00 00       	jmpq   b150 <mbedtls_mpi_mod_mpi+0x100>
    b0ce:	66 90                	xchg   %ax,%ax
    b0d0:	b9 01 00 00 00       	mov    $0x1,%ecx
    b0d5:	48 89 ea             	mov    %rbp,%rdx
    b0d8:	48 89 de             	mov    %rbx,%rsi
    b0db:	48 89 df             	mov    %rbx,%rdi
    b0de:	e8 5d ed ff ff       	callq  9e40 <add_sub_mpi>
    b0e3:	85 c0                	test   %eax,%eax
    b0e5:	0f 85 85 00 00 00    	jne    b170 <mbedtls_mpi_mod_mpi+0x120>
    b0eb:	4c 89 e6             	mov    %r12,%rsi
    b0ee:	48 89 df             	mov    %rbx,%rdi
    b0f1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    b0f8:	00 00 
    b0fa:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    b101:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    b108:	00 00 
    b10a:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    b10f:	e8 8c e9 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    b114:	85 c0                	test   %eax,%eax
    b116:	78 b8                	js     b0d0 <mbedtls_mpi_mod_mpi+0x80>
    b118:	eb 1d                	jmp    b137 <mbedtls_mpi_mod_mpi+0xe7>
    b11a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b120:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    b125:	48 89 ea             	mov    %rbp,%rdx
    b128:	48 89 de             	mov    %rbx,%rsi
    b12b:	48 89 df             	mov    %rbx,%rdi
    b12e:	e8 0d ed ff ff       	callq  9e40 <add_sub_mpi>
    b133:	85 c0                	test   %eax,%eax
    b135:	75 39                	jne    b170 <mbedtls_mpi_mod_mpi+0x120>
    b137:	48 89 ee             	mov    %rbp,%rsi
    b13a:	48 89 df             	mov    %rbx,%rdi
    b13d:	e8 5e e9 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    b142:	85 c0                	test   %eax,%eax
    b144:	79 da                	jns    b120 <mbedtls_mpi_mod_mpi+0xd0>
    b146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b14d:	00 00 00 
    b150:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b155:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b15c:	00 00 
    b15e:	75 1d                	jne    b17d <mbedtls_mpi_mod_mpi+0x12d>
    b160:	48 83 c4 30          	add    $0x30,%rsp
    b164:	44 89 f0             	mov    %r14d,%eax
    b167:	5b                   	pop    %rbx
    b168:	5d                   	pop    %rbp
    b169:	41 5c                	pop    %r12
    b16b:	41 5d                	pop    %r13
    b16d:	41 5e                	pop    %r14
    b16f:	c3                   	retq   
    b170:	41 89 c6             	mov    %eax,%r14d
    b173:	eb db                	jmp    b150 <mbedtls_mpi_mod_mpi+0x100>
    b175:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
    b17b:	eb d3                	jmp    b150 <mbedtls_mpi_mod_mpi+0x100>
    b17d:	e8 fe 80 ff ff       	callq  3280 <__stack_chk_fail@plt>
    b182:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b189:	00 00 00 00 
    b18d:	0f 1f 00             	nopl   (%rax)

000000000000b190 <mbedtls_mpi_mod_int>:
    b190:	f3 0f 1e fa          	endbr64 
    b194:	49 89 d0             	mov    %rdx,%r8
    b197:	48 85 d2             	test   %rdx,%rdx
    b19a:	0f 84 8c 00 00 00    	je     b22c <mbedtls_mpi_mod_int+0x9c>
    b1a0:	0f 88 8c 00 00 00    	js     b232 <mbedtls_mpi_mod_int+0xa2>
    b1a6:	48 83 fa 01          	cmp    $0x1,%rdx
    b1aa:	74 64                	je     b210 <mbedtls_mpi_mod_int+0x80>
    b1ac:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    b1b0:	4d 85 c9             	test   %r9,%r9
    b1b3:	74 5b                	je     b210 <mbedtls_mpi_mod_int+0x80>
    b1b5:	4c 8b 56 10          	mov    0x10(%rsi),%r10
    b1b9:	31 d2                	xor    %edx,%edx
    b1bb:	49 83 f8 02          	cmp    $0x2,%r8
    b1bf:	74 5f                	je     b220 <mbedtls_mpi_mod_int+0x90>
    b1c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b1c8:	4b 8b 4c ca f8       	mov    -0x8(%r10,%r9,8),%rcx
    b1cd:	48 c1 e2 20          	shl    $0x20,%rdx
    b1d1:	48 89 c8             	mov    %rcx,%rax
    b1d4:	48 c1 e8 20          	shr    $0x20,%rax
    b1d8:	48 09 d0             	or     %rdx,%rax
    b1db:	31 d2                	xor    %edx,%edx
    b1dd:	49 f7 f0             	div    %r8
    b1e0:	89 c8                	mov    %ecx,%eax
    b1e2:	48 c1 e2 20          	shl    $0x20,%rdx
    b1e6:	48 09 d0             	or     %rdx,%rax
    b1e9:	31 d2                	xor    %edx,%edx
    b1eb:	49 f7 f0             	div    %r8
    b1ee:	49 83 e9 01          	sub    $0x1,%r9
    b1f2:	75 d4                	jne    b1c8 <mbedtls_mpi_mod_int+0x38>
    b1f4:	8b 06                	mov    (%rsi),%eax
    b1f6:	85 c0                	test   %eax,%eax
    b1f8:	79 0a                	jns    b204 <mbedtls_mpi_mod_int+0x74>
    b1fa:	49 29 d0             	sub    %rdx,%r8
    b1fd:	48 85 d2             	test   %rdx,%rdx
    b200:	49 0f 45 d0          	cmovne %r8,%rdx
    b204:	48 89 17             	mov    %rdx,(%rdi)
    b207:	31 c0                	xor    %eax,%eax
    b209:	c3                   	retq   
    b20a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b210:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    b217:	31 c0                	xor    %eax,%eax
    b219:	c3                   	retq   
    b21a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b220:	49 8b 02             	mov    (%r10),%rax
    b223:	83 e0 01             	and    $0x1,%eax
    b226:	48 89 07             	mov    %rax,(%rdi)
    b229:	31 c0                	xor    %eax,%eax
    b22b:	c3                   	retq   
    b22c:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    b231:	c3                   	retq   
    b232:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b237:	c3                   	retq   
    b238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b23f:	00 

000000000000b240 <mbedtls_mpi_write_string>:
    b240:	f3 0f 1e fa          	endbr64 
    b244:	41 57                	push   %r15
    b246:	41 56                	push   %r14
    b248:	41 55                	push   %r13
    b24a:	4c 63 ee             	movslq %esi,%r13
    b24d:	41 54                	push   %r12
    b24f:	55                   	push   %rbp
    b250:	53                   	push   %rbx
    b251:	48 83 ec 78          	sub    $0x78,%rsp
    b255:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    b25a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b261:	00 00 
    b263:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    b268:	31 c0                	xor    %eax,%eax
    b26a:	41 8d 45 fe          	lea    -0x2(%r13),%eax
    b26e:	83 f8 0e             	cmp    $0xe,%eax
    b271:	0f 87 48 02 00 00    	ja     b4bf <mbedtls_mpi_write_string+0x27f>
    b277:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    b27b:	48 89 fd             	mov    %rdi,%rbp
    b27e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    b282:	48 89 d3             	mov    %rdx,%rbx
    b285:	49 89 ce             	mov    %rcx,%r14
    b288:	e8 e3 32 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    b28d:	48 89 c2             	mov    %rax,%rdx
    b290:	48 d1 ea             	shr    %rdx
    b293:	41 83 fd 03          	cmp    $0x3,%r13d
    b297:	48 0f 4f c2          	cmovg  %rdx,%rax
    b29b:	48 89 c2             	mov    %rax,%rdx
    b29e:	48 d1 ea             	shr    %rdx
    b2a1:	41 83 fd 10          	cmp    $0x10,%r13d
    b2a5:	48 0f 44 c2          	cmove  %rdx,%rax
    b2a9:	48 83 c0 04          	add    $0x4,%rax
    b2ad:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    b2b1:	4c 39 f0             	cmp    %r14,%rax
    b2b4:	0f 87 0f 02 00 00    	ja     b4c9 <mbedtls_mpi_write_string+0x289>
    b2ba:	83 7d 00 ff          	cmpl   $0xffffffff,0x0(%rbp)
    b2be:	49 89 df             	mov    %rbx,%r15
    b2c1:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
    b2c8:	00 
    b2c9:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    b2d0:	00 00 
    b2d2:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    b2d9:	00 00 
    b2db:	75 0b                	jne    b2e8 <mbedtls_mpi_write_string+0xa8>
    b2dd:	c6 03 2d             	movb   $0x2d,(%rbx)
    b2e0:	4c 8d 7b 01          	lea    0x1(%rbx),%r15
    b2e4:	49 83 ee 01          	sub    $0x1,%r14
    b2e8:	41 83 fd 10          	cmp    $0x10,%r13d
    b2ec:	0f 85 ee 00 00 00    	jne    b3e0 <mbedtls_mpi_write_string+0x1a0>
    b2f2:	4c 8b 5d 08          	mov    0x8(%rbp),%r11
    b2f6:	4d 85 db             	test   %r11,%r11
    b2f9:	0f 84 8b 00 00 00    	je     b38a <mbedtls_mpi_write_string+0x14a>
    b2ff:	4e 8d 0c dd f8 ff ff 	lea    -0x8(,%r11,8),%r9
    b306:	ff 
    b307:	45 31 ed             	xor    %r13d,%r13d
    b30a:	48 8d 3d 4f d4 00 00 	lea    0xd44f(%rip),%rdi        # 18760 <K+0x100>
    b311:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b318:	be 07 00 00 00       	mov    $0x7,%esi
    b31d:	4d 8d 53 01          	lea    0x1(%r11),%r10
    b321:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b328:	48 8b 45 10          	mov    0x10(%rbp),%rax
    b32c:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    b333:	4a 8b 04 08          	mov    (%rax,%r9,1),%rax
    b337:	48 d3 e8             	shr    %cl,%rax
    b33a:	89 c2                	mov    %eax,%edx
    b33c:	81 e2 ff 00 00 00    	and    $0xff,%edx
    b342:	75 0f                	jne    b353 <mbedtls_mpi_write_string+0x113>
    b344:	4d 85 ed             	test   %r13,%r13
    b347:	75 0a                	jne    b353 <mbedtls_mpi_write_string+0x113>
    b349:	49 8d 0c 32          	lea    (%r10,%rsi,1),%rcx
    b34d:	48 83 f9 02          	cmp    $0x2,%rcx
    b351:	75 23                	jne    b376 <mbedtls_mpi_write_string+0x136>
    b353:	c1 fa 04             	sar    $0x4,%edx
    b356:	83 e0 0f             	and    $0xf,%eax
    b359:	49 83 c7 02          	add    $0x2,%r15
    b35d:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    b363:	48 63 d2             	movslq %edx,%rdx
    b366:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
    b36a:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
    b36e:	41 88 47 ff          	mov    %al,-0x1(%r15)
    b372:	41 88 57 fe          	mov    %dl,-0x2(%r15)
    b376:	48 83 ee 01          	sub    $0x1,%rsi
    b37a:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
    b37e:	75 a8                	jne    b328 <mbedtls_mpi_write_string+0xe8>
    b380:	49 83 e9 08          	sub    $0x8,%r9
    b384:	49 83 eb 01          	sub    $0x1,%r11
    b388:	75 8e                	jne    b318 <mbedtls_mpi_write_string+0xd8>
    b38a:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
    b38f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b394:	4d 8d 47 01          	lea    0x1(%r15),%r8
    b398:	41 c6 07 00          	movb   $0x0,(%r15)
    b39c:	49 29 d8             	sub    %rbx,%r8
    b39f:	4c 89 00             	mov    %r8,(%rax)
    b3a2:	31 c0                	xor    %eax,%eax
    b3a4:	4c 89 e7             	mov    %r12,%rdi
    b3a7:	89 44 24 08          	mov    %eax,0x8(%rsp)
    b3ab:	e8 10 de ff ff       	callq  91c0 <mbedtls_mpi_free>
    b3b0:	8b 44 24 08          	mov    0x8(%rsp),%eax
    b3b4:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    b3b9:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    b3c0:	00 00 
    b3c2:	0f 85 13 01 00 00    	jne    b4db <mbedtls_mpi_write_string+0x29b>
    b3c8:	48 83 c4 78          	add    $0x78,%rsp
    b3cc:	5b                   	pop    %rbx
    b3cd:	5d                   	pop    %rbp
    b3ce:	41 5c                	pop    %r12
    b3d0:	41 5d                	pop    %r13
    b3d2:	41 5e                	pop    %r14
    b3d4:	41 5f                	pop    %r15
    b3d6:	c3                   	retq   
    b3d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b3de:	00 00 
    b3e0:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
    b3e5:	48 89 ee             	mov    %rbp,%rsi
    b3e8:	4c 89 e7             	mov    %r12,%rdi
    b3eb:	e8 60 e0 ff ff       	callq  9450 <mbedtls_mpi_copy>
    b3f0:	85 c0                	test   %eax,%eax
    b3f2:	75 b0                	jne    b3a4 <mbedtls_mpi_write_string+0x164>
    b3f4:	83 7c 24 20 ff       	cmpl   $0xffffffff,0x20(%rsp)
    b3f9:	75 08                	jne    b403 <mbedtls_mpi_write_string+0x1c3>
    b3fb:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
    b402:	00 
    b403:	4d 01 fe             	add    %r15,%r14
    b406:	4c 89 f5             	mov    %r14,%rbp
    b409:	e9 85 00 00 00       	jmpq   b493 <mbedtls_mpi_write_string+0x253>
    b40e:	66 90                	xchg   %ax,%ax
    b410:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    b415:	4c 89 ea             	mov    %r13,%rdx
    b418:	4c 89 e6             	mov    %r12,%rsi
    b41b:	e8 70 fd ff ff       	callq  b190 <mbedtls_mpi_mod_int>
    b420:	85 c0                	test   %eax,%eax
    b422:	75 80                	jne    b3a4 <mbedtls_mpi_write_string+0x164>
    b424:	31 f6                	xor    %esi,%esi
    b426:	4c 89 e9             	mov    %r13,%rcx
    b429:	4c 89 e2             	mov    %r12,%rdx
    b42c:	4c 89 e7             	mov    %r12,%rdi
    b42f:	e8 ac fb ff ff       	callq  afe0 <mbedtls_mpi_div_int>
    b434:	85 c0                	test   %eax,%eax
    b436:	0f 85 68 ff ff ff    	jne    b3a4 <mbedtls_mpi_write_string+0x164>
    b43c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    b441:	48 83 ed 01          	sub    $0x1,%rbp
    b445:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    b44a:	4c 89 e7             	mov    %r12,%rdi
    b44d:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    b454:	00 00 
    b456:	48 83 fa 09          	cmp    $0x9,%rdx
    b45a:	8d 4a 30             	lea    0x30(%rdx),%ecx
    b45d:	8d 42 37             	lea    0x37(%rdx),%eax
    b460:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
    b467:	00 
    b468:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
    b46f:	00 00 
    b471:	0f 46 c1             	cmovbe %ecx,%eax
    b474:	88 45 00             	mov    %al,0x0(%rbp)
    b477:	4c 89 f0             	mov    %r14,%rax
    b47a:	48 29 e8             	sub    %rbp,%rax
    b47d:	49 89 c3             	mov    %rax,%r11
    b480:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    b485:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    b48a:	e8 11 e6 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    b48f:	85 c0                	test   %eax,%eax
    b491:	74 13                	je     b4a6 <mbedtls_mpi_write_string+0x266>
    b493:	4c 39 fd             	cmp    %r15,%rbp
    b496:	0f 85 74 ff ff ff    	jne    b410 <mbedtls_mpi_write_string+0x1d0>
    b49c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    b4a1:	e9 fe fe ff ff       	jmpq   b3a4 <mbedtls_mpi_write_string+0x164>
    b4a6:	4d 89 de             	mov    %r11,%r14
    b4a9:	4c 89 ff             	mov    %r15,%rdi
    b4ac:	4c 89 da             	mov    %r11,%rdx
    b4af:	48 89 ee             	mov    %rbp,%rsi
    b4b2:	e8 a9 7e ff ff       	callq  3360 <memmove@plt>
    b4b7:	4d 01 f7             	add    %r14,%r15
    b4ba:	e9 d0 fe ff ff       	jmpq   b38f <mbedtls_mpi_write_string+0x14f>
    b4bf:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    b4c4:	e9 eb fe ff ff       	jmpq   b3b4 <mbedtls_mpi_write_string+0x174>
    b4c9:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    b4ce:	48 89 03             	mov    %rax,(%rbx)
    b4d1:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    b4d6:	e9 d9 fe ff ff       	jmpq   b3b4 <mbedtls_mpi_write_string+0x174>
    b4db:	e8 a0 7d ff ff       	callq  3280 <__stack_chk_fail@plt>

000000000000b4e0 <mbedtls_mpi_write_file>:
    b4e0:	f3 0f 1e fa          	endbr64 
    b4e4:	41 57                	push   %r15
    b4e6:	41 56                	push   %r14
    b4e8:	41 55                	push   %r13
    b4ea:	41 54                	push   %r12
    b4ec:	55                   	push   %rbp
    b4ed:	53                   	push   %rbx
    b4ee:	48 81 ec d8 09 00 00 	sub    $0x9d8,%rsp
    b4f5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b4fc:	00 00 
    b4fe:	48 89 84 24 c8 09 00 	mov    %rax,0x9c8(%rsp)
    b505:	00 
    b506:	31 c0                	xor    %eax,%eax
    b508:	8d 42 fe             	lea    -0x2(%rdx),%eax
    b50b:	83 f8 0e             	cmp    $0xe,%eax
    b50e:	0f 87 3c 01 00 00    	ja     b650 <mbedtls_mpi_write_file+0x170>
    b514:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    b519:	31 c0                	xor    %eax,%eax
    b51b:	49 89 fe             	mov    %rdi,%r14
    b51e:	49 89 cc             	mov    %rcx,%r12
    b521:	48 89 ef             	mov    %rbp,%rdi
    b524:	b9 36 01 00 00       	mov    $0x136,%ecx
    b529:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
    b52e:	49 89 f1             	mov    %rsi,%r9
    b531:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    b534:	89 d6                	mov    %edx,%esi
    b536:	b9 b2 09 00 00       	mov    $0x9b2,%ecx
    b53b:	48 89 ea             	mov    %rbp,%rdx
    b53e:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    b544:	4c 89 cf             	mov    %r9,%rdi
    b547:	e8 f4 fc ff ff       	callq  b240 <mbedtls_mpi_write_string>
    b54c:	41 89 c5             	mov    %eax,%r13d
    b54f:	85 c0                	test   %eax,%eax
    b551:	0f 85 91 00 00 00    	jne    b5e8 <mbedtls_mpi_write_file+0x108>
    b557:	4d 85 f6             	test   %r14,%r14
    b55a:	0f 84 b0 00 00 00    	je     b610 <mbedtls_mpi_write_file+0x130>
    b560:	4c 89 f7             	mov    %r14,%rdi
    b563:	e8 08 7d ff ff       	callq  3270 <strlen@plt>
    b568:	49 89 c7             	mov    %rax,%r15
    b56b:	48 89 eb             	mov    %rbp,%rbx
    b56e:	8b 13                	mov    (%rbx),%edx
    b570:	48 83 c3 04          	add    $0x4,%rbx
    b574:	8d 82 ff fe fe fe    	lea    -0x1010101(%rdx),%eax
    b57a:	f7 d2                	not    %edx
    b57c:	21 d0                	and    %edx,%eax
    b57e:	25 80 80 80 80       	and    $0x80808080,%eax
    b583:	74 e9                	je     b56e <mbedtls_mpi_write_file+0x8e>
    b585:	89 c2                	mov    %eax,%edx
    b587:	c1 ea 10             	shr    $0x10,%edx
    b58a:	a9 80 80 00 00       	test   $0x8080,%eax
    b58f:	0f 44 c2             	cmove  %edx,%eax
    b592:	48 8d 53 02          	lea    0x2(%rbx),%rdx
    b596:	48 0f 44 da          	cmove  %rdx,%rbx
    b59a:	89 c1                	mov    %eax,%ecx
    b59c:	00 c1                	add    %al,%cl
    b59e:	48 83 db 03          	sbb    $0x3,%rbx
    b5a2:	48 29 eb             	sub    %rbp,%rbx
    b5a5:	c6 44 1c 10 0d       	movb   $0xd,0x10(%rsp,%rbx,1)
    b5aa:	c6 44 1c 11 0a       	movb   $0xa,0x11(%rsp,%rbx,1)
    b5af:	4d 85 e4             	test   %r12,%r12
    b5b2:	74 6c                	je     b620 <mbedtls_mpi_write_file+0x140>
    b5b4:	4c 89 e1             	mov    %r12,%rcx
    b5b7:	4c 89 fa             	mov    %r15,%rdx
    b5ba:	be 01 00 00 00       	mov    $0x1,%esi
    b5bf:	4c 89 f7             	mov    %r14,%rdi
    b5c2:	e8 b9 7d ff ff       	callq  3380 <fwrite@plt>
    b5c7:	4c 39 f8             	cmp    %r15,%rax
    b5ca:	75 74                	jne    b640 <mbedtls_mpi_write_file+0x160>
    b5cc:	48 83 c3 02          	add    $0x2,%rbx
    b5d0:	4c 89 e1             	mov    %r12,%rcx
    b5d3:	be 01 00 00 00       	mov    $0x1,%esi
    b5d8:	48 89 ef             	mov    %rbp,%rdi
    b5db:	48 89 da             	mov    %rbx,%rdx
    b5de:	e8 9d 7d ff ff       	callq  3380 <fwrite@plt>
    b5e3:	48 39 d8             	cmp    %rbx,%rax
    b5e6:	75 58                	jne    b640 <mbedtls_mpi_write_file+0x160>
    b5e8:	48 8b 84 24 c8 09 00 	mov    0x9c8(%rsp),%rax
    b5ef:	00 
    b5f0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b5f7:	00 00 
    b5f9:	75 5d                	jne    b658 <mbedtls_mpi_write_file+0x178>
    b5fb:	48 81 c4 d8 09 00 00 	add    $0x9d8,%rsp
    b602:	44 89 e8             	mov    %r13d,%eax
    b605:	5b                   	pop    %rbx
    b606:	5d                   	pop    %rbp
    b607:	41 5c                	pop    %r12
    b609:	41 5d                	pop    %r13
    b60b:	41 5e                	pop    %r14
    b60d:	41 5f                	pop    %r15
    b60f:	c3                   	retq   
    b610:	45 31 ff             	xor    %r15d,%r15d
    b613:	4c 8d 35 8c dd 00 00 	lea    0xdd8c(%rip),%r14        # 193a6 <md5_test_buf+0x266>
    b61a:	e9 4c ff ff ff       	jmpq   b56b <mbedtls_mpi_write_file+0x8b>
    b61f:	90                   	nop
    b620:	48 89 e9             	mov    %rbp,%rcx
    b623:	4c 89 f2             	mov    %r14,%rdx
    b626:	48 8d 35 44 d1 00 00 	lea    0xd144(%rip),%rsi        # 18771 <K+0x111>
    b62d:	31 c0                	xor    %eax,%eax
    b62f:	bf 01 00 00 00       	mov    $0x1,%edi
    b634:	e8 17 7d ff ff       	callq  3350 <__printf_chk@plt>
    b639:	eb ad                	jmp    b5e8 <mbedtls_mpi_write_file+0x108>
    b63b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b640:	41 bd fe ff ff ff    	mov    $0xfffffffe,%r13d
    b646:	eb a0                	jmp    b5e8 <mbedtls_mpi_write_file+0x108>
    b648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b64f:	00 
    b650:	41 bd fc ff ff ff    	mov    $0xfffffffc,%r13d
    b656:	eb 90                	jmp    b5e8 <mbedtls_mpi_write_file+0x108>
    b658:	e8 23 7c ff ff       	callq  3280 <__stack_chk_fail@plt>
    b65d:	0f 1f 00             	nopl   (%rax)

000000000000b660 <mpi_check_small_factors.part.0>:
    b660:	41 55                	push   %r13
    b662:	41 54                	push   %r12
    b664:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    b66a:	55                   	push   %rbp
    b66b:	48 89 fd             	mov    %rdi,%rbp
    b66e:	53                   	push   %rbx
    b66f:	48 8d 1d ae d5 00 00 	lea    0xd5ae(%rip),%rbx        # 18c24 <small_prime+0x4>
    b676:	48 83 ec 18          	sub    $0x18,%rsp
    b67a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b681:	00 00 
    b683:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b688:	31 c0                	xor    %eax,%eax
    b68a:	49 89 e5             	mov    %rsp,%r13
    b68d:	eb 26                	jmp    b6b5 <mpi_check_small_factors.part.0+0x55>
    b68f:	90                   	nop
    b690:	4c 89 e2             	mov    %r12,%rdx
    b693:	48 89 ee             	mov    %rbp,%rsi
    b696:	4c 89 ef             	mov    %r13,%rdi
    b699:	e8 f2 fa ff ff       	callq  b190 <mbedtls_mpi_mod_int>
    b69e:	85 c0                	test   %eax,%eax
    b6a0:	75 27                	jne    b6c9 <mpi_check_small_factors.part.0+0x69>
    b6a2:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    b6a7:	74 3f                	je     b6e8 <mpi_check_small_factors.part.0+0x88>
    b6a9:	4c 63 23             	movslq (%rbx),%r12
    b6ac:	48 83 c3 04          	add    $0x4,%rbx
    b6b0:	45 85 e4             	test   %r12d,%r12d
    b6b3:	7e 14                	jle    b6c9 <mpi_check_small_factors.part.0+0x69>
    b6b5:	4c 89 e6             	mov    %r12,%rsi
    b6b8:	48 89 ef             	mov    %rbp,%rdi
    b6bb:	e8 d0 e4 ff ff       	callq  9b90 <mbedtls_mpi_cmp_int>
    b6c0:	85 c0                	test   %eax,%eax
    b6c2:	7f cc                	jg     b690 <mpi_check_small_factors.part.0+0x30>
    b6c4:	b8 01 00 00 00       	mov    $0x1,%eax
    b6c9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    b6ce:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    b6d5:	00 00 
    b6d7:	75 16                	jne    b6ef <mpi_check_small_factors.part.0+0x8f>
    b6d9:	48 83 c4 18          	add    $0x18,%rsp
    b6dd:	5b                   	pop    %rbx
    b6de:	5d                   	pop    %rbp
    b6df:	41 5c                	pop    %r12
    b6e1:	41 5d                	pop    %r13
    b6e3:	c3                   	retq   
    b6e4:	0f 1f 40 00          	nopl   0x0(%rax)
    b6e8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    b6ed:	eb da                	jmp    b6c9 <mpi_check_small_factors.part.0+0x69>
    b6ef:	e8 8c 7b ff ff       	callq  3280 <__stack_chk_fail@plt>
    b6f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b6fb:	00 00 00 00 
    b6ff:	90                   	nop

000000000000b700 <mbedtls_mpi_exp_mod>:
    b700:	f3 0f 1e fa          	endbr64 
    b704:	41 57                	push   %r15
    b706:	41 56                	push   %r14
    b708:	41 55                	push   %r13
    b70a:	49 89 d5             	mov    %rdx,%r13
    b70d:	41 54                	push   %r12
    b70f:	55                   	push   %rbp
    b710:	48 89 cd             	mov    %rcx,%rbp
    b713:	53                   	push   %rbx
    b714:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
    b71b:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    b720:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
    b727:	00 
    b728:	48 89 cf             	mov    %rcx,%rdi
    b72b:	4c 8d b4 24 30 01 00 	lea    0x130(%rsp),%r14
    b732:	00 
    b733:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
    b738:	4c 89 fe             	mov    %r15,%rsi
    b73b:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    b740:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b747:	00 00 
    b749:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
    b750:	00 
    b751:	31 c0                	xor    %eax,%eax
    b753:	4c 89 b4 24 20 01 00 	mov    %r14,0x120(%rsp)
    b75a:	00 
    b75b:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
    b762:	00 00 00 00 00 
    b767:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
    b76e:	01 00 00 00 
    b772:	48 c7 84 24 18 01 00 	movq   $0x1,0x118(%rsp)
    b779:	00 01 00 00 00 
    b77e:	e8 1d e3 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    b783:	85 c0                	test   %eax,%eax
    b785:	0f 8e b5 05 00 00    	jle    bd40 <mbedtls_mpi_exp_mod+0x640>
    b78b:	48 8b 45 10          	mov    0x10(%rbp),%rax
    b78f:	48 8b 00             	mov    (%rax),%rax
    b792:	83 e0 01             	and    $0x1,%eax
    b795:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    b79a:	49 89 c4             	mov    %rax,%r12
    b79d:	0f 84 9d 05 00 00    	je     bd40 <mbedtls_mpi_exp_mod+0x640>
    b7a3:	4c 89 fe             	mov    %r15,%rsi
    b7a6:	4c 89 ef             	mov    %r13,%rdi
    b7a9:	e8 f2 e2 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    b7ae:	85 c0                	test   %eax,%eax
    b7b0:	0f 88 8a 05 00 00    	js     bd40 <mbedtls_mpi_exp_mod+0x640>
    b7b6:	49 8b 75 08          	mov    0x8(%r13),%rsi
    b7ba:	49 8b 7d 10          	mov    0x10(%r13),%rdi
    b7be:	e8 ad 2d 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    b7c3:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    b7c9:	0f 87 71 05 00 00    	ja     bd40 <mbedtls_mpi_exp_mod+0x640>
    b7cf:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    b7d3:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    b7d7:	e8 94 2d 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    b7dc:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    b7e2:	0f 87 58 05 00 00    	ja     bd40 <mbedtls_mpi_exp_mod+0x640>
    b7e8:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    b7ec:	bb 02 00 00 00       	mov    $0x2,%ebx
    b7f1:	e8 ba 35 00 00       	callq  edb0 <mbedtls_mpi_core_montmul_init>
    b7f6:	b9 0c 00 00 00       	mov    $0xc,%ecx
    b7fb:	4c 89 f7             	mov    %r14,%rdi
    b7fe:	49 8b 75 08          	mov    0x8(%r13),%rsi
    b802:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    b807:	31 c0                	xor    %eax,%eax
    b809:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    b80c:	49 8b 7d 10          	mov    0x10(%r13),%rdi
    b810:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
    b817:	01 00 00 00 
    b81b:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
    b822:	00 00 00 00 00 
    b827:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
    b82e:	00 00 00 00 00 
    b833:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
    b83a:	01 00 00 00 
    b83e:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
    b845:	00 00 00 00 00 
    b84a:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
    b851:	00 00 00 00 00 
    b856:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
    b85d:	01 00 00 00 
    b861:	48 c7 84 24 18 01 00 	movq   $0x0,0x118(%rsp)
    b868:	00 00 00 00 00 
    b86d:	48 c7 84 24 20 01 00 	movq   $0x0,0x120(%rsp)
    b874:	00 00 00 00 00 
    b879:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
    b880:	01 00 00 00 
    b884:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
    b88b:	00 00 00 00 00 
    b890:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
    b897:	00 00 00 00 00 
    b89c:	e8 cf 2c 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    b8a1:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    b8a6:	4c 89 f7             	mov    %r14,%rdi
    b8a9:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
    b8b0:	01 00 00 00 
    b8b4:	48 c7 84 24 38 01 00 	movq   $0x0,0x138(%rsp)
    b8bb:	00 00 00 00 00 
    b8c0:	48 83 f8 17          	cmp    $0x17,%rax
    b8c4:	48 c7 84 24 40 01 00 	movq   $0x0,0x140(%rsp)
    b8cb:	00 00 00 00 00 
    b8d0:	49 0f 46 dc          	cmovbe %r12,%rbx
    b8d4:	48 83 f8 18          	cmp    $0x18,%rax
    b8d8:	19 d2                	sbb    %edx,%edx
    b8da:	83 c2 02             	add    $0x2,%edx
    b8dd:	48 83 f8 18          	cmp    $0x18,%rax
    b8e1:	4d 19 e4             	sbb    %r12,%r12
    b8e4:	89 54 24 58          	mov    %edx,0x58(%rsp)
    b8e8:	e8 63 db ff ff       	callq  9450 <mbedtls_mpi_copy>
    b8ed:	48 8b 45 08          	mov    0x8(%rbp),%rax
    b8f1:	4c 89 f7             	mov    %r14,%rdi
    b8f4:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
    b8f8:	49 83 c4 04          	add    $0x4,%r12
    b8fc:	48 8d 70 01          	lea    0x1(%rax),%rsi
    b900:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    b905:	e8 16 d9 ff ff       	callq  9220 <mbedtls_mpi_grow>
    b90a:	89 04 24             	mov    %eax,(%rsp)
    b90d:	85 c0                	test   %eax,%eax
    b90f:	0f 84 bb 00 00 00    	je     b9d0 <mbedtls_mpi_exp_mod+0x2d0>
    b915:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
    b91c:	00 
    b91d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b922:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    b929:	00 
    b92a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    b92f:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    b936:	00 
    b937:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    b93c:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
    b940:	49 8d 2c c6          	lea    (%r14,%rax,8),%rbp
    b944:	48 89 ef             	mov    %rbp,%rdi
    b947:	48 83 c3 01          	add    $0x1,%rbx
    b94b:	48 83 c5 18          	add    $0x18,%rbp
    b94f:	e8 6c d8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    b954:	4c 39 e3             	cmp    %r12,%rbx
    b957:	72 eb                	jb     b944 <mbedtls_mpi_exp_mod+0x244>
    b959:	4c 89 f7             	mov    %r14,%rdi
    b95c:	e8 5f d8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    b961:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    b966:	e8 55 d8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    b96b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    b970:	e8 4b d8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    b975:	4c 89 ff             	mov    %r15,%rdi
    b978:	e8 43 d8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    b97d:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    b982:	e8 39 d8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    b987:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b98c:	48 85 c0             	test   %rax,%rax
    b98f:	0f 84 8b 00 00 00    	je     ba20 <mbedtls_mpi_exp_mod+0x320>
    b995:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    b99a:	0f 84 80 00 00 00    	je     ba20 <mbedtls_mpi_exp_mod+0x320>
    b9a0:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
    b9a7:	00 
    b9a8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b9af:	00 00 
    b9b1:	0f 85 de 07 00 00    	jne    c195 <mbedtls_mpi_exp_mod+0xa95>
    b9b7:	8b 04 24             	mov    (%rsp),%eax
    b9ba:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
    b9c1:	5b                   	pop    %rbx
    b9c2:	5d                   	pop    %rbp
    b9c3:	41 5c                	pop    %r12
    b9c5:	41 5d                	pop    %r13
    b9c7:	41 5e                	pop    %r14
    b9c9:	41 5f                	pop    %r15
    b9cb:	c3                   	retq   
    b9cc:	0f 1f 40 00          	nopl   0x0(%rax)
    b9d0:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    b9d5:	48 8d bc 24 48 01 00 	lea    0x148(%rsp),%rdi
    b9dc:	00 
    b9dd:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    b9e2:	e8 39 d8 ff ff       	callq  9220 <mbedtls_mpi_grow>
    b9e7:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    b9ec:	85 c0                	test   %eax,%eax
    b9ee:	89 04 24             	mov    %eax,(%rsp)
    b9f1:	74 45                	je     ba38 <mbedtls_mpi_exp_mod+0x338>
    b9f3:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    b9fa:	00 
    b9fb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    ba00:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    ba07:	00 
    ba08:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    ba0d:	4c 39 e3             	cmp    %r12,%rbx
    ba10:	0f 83 43 ff ff ff    	jae    b959 <mbedtls_mpi_exp_mod+0x259>
    ba16:	e9 21 ff ff ff       	jmpq   b93c <mbedtls_mpi_exp_mod+0x23c>
    ba1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ba20:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
    ba27:	00 
    ba28:	e8 93 d7 ff ff       	callq  91c0 <mbedtls_mpi_free>
    ba2d:	e9 6e ff ff ff       	jmpq   b9a0 <mbedtls_mpi_exp_mod+0x2a0>
    ba32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ba38:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    ba3f:	00 
    ba40:	48 01 f6             	add    %rsi,%rsi
    ba43:	48 89 c7             	mov    %rax,%rdi
    ba46:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    ba4b:	e8 d0 d7 ff ff       	callq  9220 <mbedtls_mpi_grow>
    ba50:	89 04 24             	mov    %eax,(%rsp)
    ba53:	85 c0                	test   %eax,%eax
    ba55:	0f 85 2d 02 00 00    	jne    bc88 <mbedtls_mpi_exp_mod+0x588>
    ba5b:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    ba60:	8b 00                	mov    (%rax),%eax
    ba62:	89 44 24 64          	mov    %eax,0x64(%rsp)
    ba66:	83 f8 ff             	cmp    $0xffffffff,%eax
    ba69:	0f 84 fe 02 00 00    	je     bd6d <mbedtls_mpi_exp_mod+0x66d>
    ba6f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    ba74:	48 85 c0             	test   %rax,%rax
    ba77:	0f 84 23 02 00 00    	je     bca0 <mbedtls_mpi_exp_mod+0x5a0>
    ba7d:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    ba82:	0f 84 18 02 00 00    	je     bca0 <mbedtls_mpi_exp_mod+0x5a0>
    ba88:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    ba8d:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    ba91:	48 8b 40 10          	mov    0x10(%rax),%rax
    ba95:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    ba9c:	00 
    ba9d:	0f 29 04 24          	movaps %xmm0,(%rsp)
    baa1:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
    baa8:	00 
    baa9:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    baae:	48 89 ee             	mov    %rbp,%rsi
    bab1:	e8 ea df ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    bab6:	85 c0                	test   %eax,%eax
    bab8:	0f 88 aa 01 00 00    	js     bc68 <mbedtls_mpi_exp_mod+0x568>
    babe:	48 89 fe             	mov    %rdi,%rsi
    bac1:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    bac6:	48 89 ea             	mov    %rbp,%rdx
    bac9:	e8 82 f5 ff ff       	callq  b050 <mbedtls_mpi_mod_mpi>
    bace:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
    bad5:	00 
    bad6:	89 04 24             	mov    %eax,(%rsp)
    bad9:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    bade:	85 c0                	test   %eax,%eax
    bae0:	0f 85 27 ff ff ff    	jne    ba0d <mbedtls_mpi_exp_mod+0x30d>
    bae6:	48 8b 45 08          	mov    0x8(%rbp),%rax
    baea:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    baef:	48 8d 70 01          	lea    0x1(%rax),%rsi
    baf3:	e8 28 d7 ff ff       	callq  9220 <mbedtls_mpi_grow>
    baf8:	89 04 24             	mov    %eax,(%rsp)
    bafb:	85 c0                	test   %eax,%eax
    bafd:	0f 85 0a ff ff ff    	jne    ba0d <mbedtls_mpi_exp_mod+0x30d>
    bb03:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
    bb0a:	00 
    bb0b:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    bb12:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    bb16:	ff 74 24 58          	pushq  0x58(%rsp)
    bb1a:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
    bb21:	00 
    bb22:	48 89 fe             	mov    %rdi,%rsi
    bb25:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
    bb2c:	00 
    bb2d:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    bb31:	e8 ba 32 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    bb36:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
    bb3d:	00 
    bb3e:	4c 89 f7             	mov    %r14,%rdi
    bb41:	e8 0a d9 ff ff       	callq  9450 <mbedtls_mpi_copy>
    bb46:	89 44 24 10          	mov    %eax,0x10(%rsp)
    bb4a:	41 5b                	pop    %r11
    bb4c:	5a                   	pop    %rdx
    bb4d:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
    bb54:	00 
    bb55:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    bb5a:	85 c0                	test   %eax,%eax
    bb5c:	0f 85 ab fe ff ff    	jne    ba0d <mbedtls_mpi_exp_mod+0x30d>
    bb62:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
    bb69:	00 
    bb6a:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    bb71:	00 
    bb72:	b9 01 00 00 00       	mov    $0x1,%ecx
    bb77:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
    bb7e:	00 01 00 00 00 
    bb83:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    bb8a:	00 
    bb8b:	48 89 c2             	mov    %rax,%rdx
    bb8e:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    bb95:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    bb99:	48 89 fe             	mov    %rdi,%rsi
    bb9c:	ff 74 24 58          	pushq  0x58(%rsp)
    bba0:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    bba4:	e8 47 32 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    bba9:	41 59                	pop    %r9
    bbab:	41 5a                	pop    %r10
    bbad:	48 83 fb 02          	cmp    $0x2,%rbx
    bbb1:	0f 84 4f 03 00 00    	je     bf06 <mbedtls_mpi_exp_mod+0x806>
    bbb7:	49 8b 45 08          	mov    0x8(%r13),%rax
    bbbb:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
    bbc2:	00 
    bbc3:	31 c9                	xor    %ecx,%ecx
    bbc5:	31 d2                	xor    %edx,%edx
    bbc7:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    bbce:	00 00 
    bbd0:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    bbd5:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    bbdc:	00 
    bbdd:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    bbe4:	00 00 
    bbe6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    bbeb:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    bbf0:	48 89 cb             	mov    %rcx,%rbx
    bbf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bbf8:	48 85 db             	test   %rbx,%rbx
    bbfb:	0f 84 4b 01 00 00    	je     bd4c <mbedtls_mpi_exp_mod+0x64c>
    bc01:	48 83 eb 01          	sub    $0x1,%rbx
    bc05:	89 d9                	mov    %ebx,%ecx
    bc07:	49 8b 45 10          	mov    0x10(%r13),%rax
    bc0b:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    bc10:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
    bc14:	48 d3 e8             	shr    %cl,%rax
    bc17:	48 89 d1             	mov    %rdx,%rcx
    bc1a:	83 e0 01             	and    $0x1,%eax
    bc1d:	48 09 c1             	or     %rax,%rcx
    bc20:	0f 84 98 02 00 00    	je     bebe <mbedtls_mpi_exp_mod+0x7be>
    bc26:	48 85 c0             	test   %rax,%rax
    bc29:	0f 85 6b 01 00 00    	jne    bd9a <mbedtls_mpi_exp_mod+0x69a>
    bc2f:	48 83 fa 01          	cmp    $0x1,%rdx
    bc33:	0f 85 61 01 00 00    	jne    bd9a <mbedtls_mpi_exp_mod+0x69a>
    bc39:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    bc3e:	31 c9                	xor    %ecx,%ecx
    bc40:	4c 89 e2             	mov    %r12,%rdx
    bc43:	4c 89 f6             	mov    %r14,%rsi
    bc46:	e8 f5 d4 ff ff       	callq  9140 <mpi_select>
    bc4b:	85 c0                	test   %eax,%eax
    bc4d:	0f 84 72 02 00 00    	je     bec5 <mbedtls_mpi_exp_mod+0x7c5>
    bc53:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    bc58:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    bc5f:	00 
    bc60:	89 04 24             	mov    %eax,(%rsp)
    bc63:	e9 a5 fd ff ff       	jmpq   ba0d <mbedtls_mpi_exp_mod+0x30d>
    bc68:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    bc6d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    bc72:	e8 d9 d7 ff ff       	callq  9450 <mbedtls_mpi_copy>
    bc77:	89 04 24             	mov    %eax,(%rsp)
    bc7a:	85 c0                	test   %eax,%eax
    bc7c:	0f 84 81 fe ff ff    	je     bb03 <mbedtls_mpi_exp_mod+0x403>
    bc82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bc88:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    bc8f:	00 
    bc90:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    bc95:	e9 73 fd ff ff       	jmpq   ba0d <mbedtls_mpi_exp_mod+0x30d>
    bc9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bca0:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
    bca7:	00 
    bca8:	be 01 00 00 00       	mov    $0x1,%esi
    bcad:	48 89 cf             	mov    %rcx,%rdi
    bcb0:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    bcb5:	e8 06 d9 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    bcba:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
    bcc1:	00 
    bcc2:	89 04 24             	mov    %eax,(%rsp)
    bcc5:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    bcca:	85 c0                	test   %eax,%eax
    bccc:	0f 85 3b fd ff ff    	jne    ba0d <mbedtls_mpi_exp_mod+0x30d>
    bcd2:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    bcd6:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    bcdb:	48 c1 e6 07          	shl    $0x7,%rsi
    bcdf:	48 89 cf             	mov    %rcx,%rdi
    bce2:	e8 99 db ff ff       	callq  9880 <mbedtls_mpi_shift_l>
    bce7:	89 04 24             	mov    %eax,(%rsp)
    bcea:	85 c0                	test   %eax,%eax
    bcec:	0f 85 1b fd ff ff    	jne    ba0d <mbedtls_mpi_exp_mod+0x30d>
    bcf2:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    bcf7:	48 89 ea             	mov    %rbp,%rdx
    bcfa:	48 89 ce             	mov    %rcx,%rsi
    bcfd:	48 89 cf             	mov    %rcx,%rdi
    bd00:	e8 4b f3 ff ff       	callq  b050 <mbedtls_mpi_mod_mpi>
    bd05:	89 04 24             	mov    %eax,(%rsp)
    bd08:	85 c0                	test   %eax,%eax
    bd0a:	0f 85 fd fc ff ff    	jne    ba0d <mbedtls_mpi_exp_mod+0x30d>
    bd10:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    bd15:	48 85 d2             	test   %rdx,%rdx
    bd18:	0f 84 8b fd ff ff    	je     baa9 <mbedtls_mpi_exp_mod+0x3a9>
    bd1e:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    bd23:	66 0f 6f 11          	movdqa (%rcx),%xmm2
    bd27:	48 8b 41 10          	mov    0x10(%rcx),%rax
    bd2b:	0f 11 12             	movups %xmm2,(%rdx)
    bd2e:	48 89 42 10          	mov    %rax,0x10(%rdx)
    bd32:	e9 72 fd ff ff       	jmpq   baa9 <mbedtls_mpi_exp_mod+0x3a9>
    bd37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bd3e:	00 00 
    bd40:	c7 04 24 fc ff ff ff 	movl   $0xfffffffc,(%rsp)
    bd47:	e9 54 fc ff ff       	jmpq   b9a0 <mbedtls_mpi_exp_mod+0x2a0>
    bd4c:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
    bd52:	0f 84 eb 01 00 00    	je     bf43 <mbedtls_mpi_exp_mod+0x843>
    bd58:	48 83 6c 24 68 01    	subq   $0x1,0x68(%rsp)
    bd5e:	bb 3f 00 00 00       	mov    $0x3f,%ebx
    bd63:	b9 3f 00 00 00       	mov    $0x3f,%ecx
    bd68:	e9 9a fe ff ff       	jmpq   bc07 <mbedtls_mpi_exp_mod+0x507>
    bd6d:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    bd72:	4c 89 ff             	mov    %r15,%rdi
    bd75:	e8 d6 d6 ff ff       	callq  9450 <mbedtls_mpi_copy>
    bd7a:	89 04 24             	mov    %eax,(%rsp)
    bd7d:	85 c0                	test   %eax,%eax
    bd7f:	0f 85 03 ff ff ff    	jne    bc88 <mbedtls_mpi_exp_mod+0x588>
    bd85:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
    bd8c:	01 00 00 00 
    bd90:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
    bd95:	e9 d5 fc ff ff       	jmpq   ba6f <mbedtls_mpi_exp_mod+0x36f>
    bd9a:	48 83 44 24 40 01    	addq   $0x1,0x40(%rsp)
    bda0:	8b 4c 24 58          	mov    0x58(%rsp),%ecx
    bda4:	ba 02 00 00 00       	mov    $0x2,%edx
    bda9:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    bdae:	29 f1                	sub    %esi,%ecx
    bdb0:	48 d3 e0             	shl    %cl,%rax
    bdb3:	48 09 44 24 78       	or     %rax,0x78(%rsp)
    bdb8:	48 39 74 24 70       	cmp    %rsi,0x70(%rsp)
    bdbd:	0f 85 35 fe ff ff    	jne    bbf8 <mbedtls_mpi_exp_mod+0x4f8>
    bdc3:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
    bdca:	00 
    bdcb:	45 31 ff             	xor    %r15d,%r15d
    bdce:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    bdd3:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
    bdda:	00 
    bddb:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
    bde0:	eb 05                	jmp    bde7 <mbedtls_mpi_exp_mod+0x6e7>
    bde2:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    bde7:	31 c9                	xor    %ecx,%ecx
    bde9:	4c 89 e2             	mov    %r12,%rdx
    bdec:	4c 89 f6             	mov    %r14,%rsi
    bdef:	48 89 df             	mov    %rbx,%rdi
    bdf2:	e8 49 d3 ff ff       	callq  9140 <mpi_select>
    bdf7:	85 c0                	test   %eax,%eax
    bdf9:	0f 85 54 fe ff ff    	jne    bc53 <mbedtls_mpi_exp_mod+0x553>
    bdff:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    be06:	00 
    be07:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    be0e:	49 83 c7 01          	add    $0x1,%r15
    be12:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    be16:	41 55                	push   %r13
    be18:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    be1f:	00 
    be20:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    be27:	00 
    be28:	48 89 fe             	mov    %rdi,%rsi
    be2b:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    be2f:	e8 bc 2f 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    be34:	41 59                	pop    %r9
    be36:	41 5a                	pop    %r10
    be38:	4c 39 7c 24 40       	cmp    %r15,0x40(%rsp)
    be3d:	77 a3                	ja     bde2 <mbedtls_mpi_exp_mod+0x6e2>
    be3f:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    be44:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    be49:	4c 89 e2             	mov    %r12,%rdx
    be4c:	4c 89 f6             	mov    %r14,%rsi
    be4f:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
    be56:	00 
    be57:	4c 8b ac 24 98 00 00 	mov    0x98(%rsp),%r13
    be5e:	00 
    be5f:	e8 dc d2 ff ff       	callq  9140 <mpi_select>
    be64:	85 c0                	test   %eax,%eax
    be66:	0f 85 e7 fd ff ff    	jne    bc53 <mbedtls_mpi_exp_mod+0x553>
    be6c:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    be73:	00 
    be74:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    be7b:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    be7f:	ff 74 24 58          	pushq  0x58(%rsp)
    be83:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    be8a:	00 
    be8b:	48 89 fe             	mov    %rdi,%rsi
    be8e:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    be95:	00 
    be96:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    be9a:	e8 51 2f 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    be9f:	5f                   	pop    %rdi
    bea0:	41 58                	pop    %r8
    bea2:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    bea9:	00 00 
    beab:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    beb0:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    beb7:	00 00 
    beb9:	e9 3a fd ff ff       	jmpq   bbf8 <mbedtls_mpi_exp_mod+0x4f8>
    bebe:	31 d2                	xor    %edx,%edx
    bec0:	e9 33 fd ff ff       	jmpq   bbf8 <mbedtls_mpi_exp_mod+0x4f8>
    bec5:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    becc:	00 
    becd:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    bed4:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    bed8:	ff 74 24 58          	pushq  0x58(%rsp)
    bedc:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    bee3:	00 
    bee4:	48 89 fe             	mov    %rdi,%rsi
    bee7:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    beee:	00 
    beef:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    bef3:	e8 f8 2e 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    bef8:	41 5b                	pop    %r11
    befa:	41 5f                	pop    %r15
    befc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    bf01:	e9 f2 fc ff ff       	jmpq   bbf8 <mbedtls_mpi_exp_mod+0x4f8>
    bf06:	48 8b 45 08          	mov    0x8(%rbp),%rax
    bf0a:	48 8d bc 24 60 01 00 	lea    0x160(%rsp),%rdi
    bf11:	00 
    bf12:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
    bf17:	48 8d 70 01          	lea    0x1(%rax),%rsi
    bf1b:	e8 00 d3 ff ff       	callq  9220 <mbedtls_mpi_grow>
    bf20:	85 c0                	test   %eax,%eax
    bf22:	75 17                	jne    bf3b <mbedtls_mpi_exp_mod+0x83b>
    bf24:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    bf29:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    bf2e:	e8 1d d5 ff ff       	callq  9450 <mbedtls_mpi_copy>
    bf33:	85 c0                	test   %eax,%eax
    bf35:	0f 84 83 01 00 00    	je     c0be <mbedtls_mpi_exp_mod+0x9be>
    bf3b:	89 04 24             	mov    %eax,(%rsp)
    bf3e:	e9 ca fa ff ff       	jmpq   ba0d <mbedtls_mpi_exp_mod+0x30d>
    bf43:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    bf49:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    bf4e:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    bf55:	00 
    bf56:	0f 84 f7 00 00 00    	je     c053 <mbedtls_mpi_exp_mod+0x953>
    bf5c:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    bf61:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    bf66:	4c 89 7c 24 58       	mov    %r15,0x58(%rsp)
    bf6b:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    bf70:	4c 89 6c 24 68       	mov    %r13,0x68(%rsp)
    bf75:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
    bf7a:	eb 13                	jmp    bf8f <mbedtls_mpi_exp_mod+0x88f>
    bf7c:	0f 1f 40 00          	nopl   0x0(%rax)
    bf80:	48 83 c3 01          	add    $0x1,%rbx
    bf84:	48 39 5c 24 40       	cmp    %rbx,0x40(%rsp)
    bf89:	0f 84 b5 00 00 00    	je     c044 <mbedtls_mpi_exp_mod+0x944>
    bf8f:	31 c9                	xor    %ecx,%ecx
    bf91:	4c 89 e2             	mov    %r12,%rdx
    bf94:	4c 89 f6             	mov    %r14,%rsi
    bf97:	4c 89 ff             	mov    %r15,%rdi
    bf9a:	e8 a1 d1 ff ff       	callq  9140 <mpi_select>
    bf9f:	85 c0                	test   %eax,%eax
    bfa1:	0f 85 8e 00 00 00    	jne    c035 <mbedtls_mpi_exp_mod+0x935>
    bfa7:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    bfae:	00 
    bfaf:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    bfb6:	4d 01 ed             	add    %r13,%r13
    bfb9:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    bfbd:	ff 74 24 58          	pushq  0x58(%rsp)
    bfc1:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    bfc8:	00 
    bfc9:	48 89 fe             	mov    %rdi,%rsi
    bfcc:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    bfd3:	00 
    bfd4:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    bfd8:	e8 13 2e 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    bfdd:	59                   	pop    %rcx
    bfde:	5e                   	pop    %rsi
    bfdf:	4d 85 e5             	test   %r12,%r13
    bfe2:	74 9c                	je     bf80 <mbedtls_mpi_exp_mod+0x880>
    bfe4:	b9 01 00 00 00       	mov    $0x1,%ecx
    bfe9:	4c 89 e2             	mov    %r12,%rdx
    bfec:	4c 89 f6             	mov    %r14,%rsi
    bfef:	4c 89 ff             	mov    %r15,%rdi
    bff2:	e8 49 d1 ff ff       	callq  9140 <mpi_select>
    bff7:	85 c0                	test   %eax,%eax
    bff9:	75 3a                	jne    c035 <mbedtls_mpi_exp_mod+0x935>
    bffb:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    c002:	00 
    c003:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    c00a:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    c00e:	ff 74 24 58          	pushq  0x58(%rsp)
    c012:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    c019:	00 
    c01a:	48 89 fe             	mov    %rdi,%rsi
    c01d:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    c024:	00 
    c025:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    c029:	e8 c2 2d 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    c02e:	58                   	pop    %rax
    c02f:	5a                   	pop    %rdx
    c030:	e9 4b ff ff ff       	jmpq   bf80 <mbedtls_mpi_exp_mod+0x880>
    c035:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    c03a:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
    c03f:	e9 f7 fe ff ff       	jmpq   bf3b <mbedtls_mpi_exp_mod+0x83b>
    c044:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    c049:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
    c04e:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
    c053:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    c05a:	00 
    c05b:	b9 01 00 00 00       	mov    $0x1,%ecx
    c060:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
    c067:	00 01 00 00 00 
    c06c:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    c073:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    c077:	ff 74 24 58          	pushq  0x58(%rsp)
    c07b:	48 89 fe             	mov    %rdi,%rsi
    c07e:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    c085:	00 
    c086:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    c08a:	e8 61 2d 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    c08f:	58                   	pop    %rax
    c090:	5a                   	pop    %rdx
    c091:	83 7c 24 64 ff       	cmpl   $0xffffffff,0x64(%rsp)
    c096:	75 14                	jne    c0ac <mbedtls_mpi_exp_mod+0x9ac>
    c098:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
    c09d:	74 0d                	je     c0ac <mbedtls_mpi_exp_mod+0x9ac>
    c09f:	49 8b 45 10          	mov    0x10(%r13),%rax
    c0a3:	f6 00 01             	testb  $0x1,(%rax)
    c0a6:	0f 85 fb 00 00 00    	jne    c1a7 <mbedtls_mpi_exp_mod+0xaa7>
    c0ac:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    c0b1:	4c 89 f6             	mov    %r14,%rsi
    c0b4:	e8 97 d3 ff ff       	callq  9450 <mbedtls_mpi_copy>
    c0b9:	e9 4f f9 ff ff       	jmpq   ba0d <mbedtls_mpi_exp_mod+0x30d>
    c0be:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
    c0c5:	00 
    c0c6:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    c0cd:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    c0d1:	ff 74 24 58          	pushq  0x58(%rsp)
    c0d5:	48 8b 8c 24 78 01 00 	mov    0x178(%rsp),%rcx
    c0dc:	00 
    c0dd:	48 89 fa             	mov    %rdi,%rdx
    c0e0:	48 89 fe             	mov    %rdi,%rsi
    c0e3:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    c0e7:	e8 04 2d 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    c0ec:	5f                   	pop    %rdi
    c0ed:	41 58                	pop    %r8
    c0ef:	49 83 fc 04          	cmp    $0x4,%r12
    c0f3:	0f 85 be fa ff ff    	jne    bbb7 <mbedtls_mpi_exp_mod+0x4b7>
    c0f9:	4c 8d 94 24 78 01 00 	lea    0x178(%rsp),%r10
    c100:	00 
    c101:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
    c108:	00 
    c109:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
    c10e:	48 89 eb             	mov    %rbp,%rbx
    c111:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    c116:	4c 89 d5             	mov    %r10,%rbp
    c119:	eb 4c                	jmp    c167 <mbedtls_mpi_exp_mod+0xa67>
    c11b:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
    c11f:	48 89 ef             	mov    %rbp,%rdi
    c122:	e8 29 d3 ff ff       	callq  9450 <mbedtls_mpi_copy>
    c127:	85 c0                	test   %eax,%eax
    c129:	75 50                	jne    c17b <mbedtls_mpi_exp_mod+0xa7b>
    c12b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    c12f:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    c136:	48 83 c5 18          	add    $0x18,%rbp
    c13a:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    c13e:	ff 74 24 58          	pushq  0x58(%rsp)
    c142:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
    c149:	00 
    c14a:	48 89 fe             	mov    %rdi,%rsi
    c14d:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
    c154:	00 
    c155:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
    c159:	e8 92 2c 00 00       	callq  edf0 <mbedtls_mpi_core_montmul>
    c15e:	59                   	pop    %rcx
    c15f:	5e                   	pop    %rsi
    c160:	48 39 6c 24 40       	cmp    %rbp,0x40(%rsp)
    c165:	74 33                	je     c19a <mbedtls_mpi_exp_mod+0xa9a>
    c167:	48 8b 43 08          	mov    0x8(%rbx),%rax
    c16b:	48 89 ef             	mov    %rbp,%rdi
    c16e:	48 8d 70 01          	lea    0x1(%rax),%rsi
    c172:	e8 a9 d0 ff ff       	callq  9220 <mbedtls_mpi_grow>
    c177:	85 c0                	test   %eax,%eax
    c179:	74 a0                	je     c11b <mbedtls_mpi_exp_mod+0xa1b>
    c17b:	89 04 24             	mov    %eax,(%rsp)
    c17e:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    c185:	00 
    c186:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    c18b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    c190:	e9 a7 f7 ff ff       	jmpq   b93c <mbedtls_mpi_exp_mod+0x23c>
    c195:	e8 e6 70 ff ff       	callq  3280 <__stack_chk_fail@plt>
    c19a:	48 89 dd             	mov    %rbx,%rbp
    c19d:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    c1a2:	e9 10 fa ff ff       	jmpq   bbb7 <mbedtls_mpi_exp_mod+0x4b7>
    c1a7:	b9 01 00 00 00       	mov    $0x1,%ecx
    c1ac:	4c 89 f2             	mov    %r14,%rdx
    c1af:	48 89 ee             	mov    %rbp,%rsi
    c1b2:	4c 89 f7             	mov    %r14,%rdi
    c1b5:	c7 84 24 30 01 00 00 	movl   $0xffffffff,0x130(%rsp)
    c1bc:	ff ff ff ff 
    c1c0:	e8 7b dc ff ff       	callq  9e40 <add_sub_mpi>
    c1c5:	85 c0                	test   %eax,%eax
    c1c7:	0f 84 df fe ff ff    	je     c0ac <mbedtls_mpi_exp_mod+0x9ac>
    c1cd:	e9 69 fd ff ff       	jmpq   bf3b <mbedtls_mpi_exp_mod+0x83b>
    c1d2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    c1d9:	00 00 00 00 
    c1dd:	0f 1f 00             	nopl   (%rax)

000000000000c1e0 <mbedtls_mpi_gcd>:
    c1e0:	f3 0f 1e fa          	endbr64 
    c1e4:	41 57                	push   %r15
    c1e6:	49 89 ff             	mov    %rdi,%r15
    c1e9:	41 56                	push   %r14
    c1eb:	49 89 f6             	mov    %rsi,%r14
    c1ee:	41 55                	push   %r13
    c1f0:	41 54                	push   %r12
    c1f2:	49 89 d4             	mov    %rdx,%r12
    c1f5:	55                   	push   %rbp
    c1f6:	53                   	push   %rbx
    c1f7:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    c1fe:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c205:	00 00 
    c207:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    c20c:	31 c0                	xor    %eax,%eax
    c20e:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    c213:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    c21a:	00 
    c21b:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
    c220:	48 89 ef             	mov    %rbp,%rdi
    c223:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    c22a:	00 
    c22b:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    c232:	00 00 
    c234:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    c23b:	00 00 
    c23d:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    c244:	00 00 
    c246:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    c24d:	00 00 
    c24f:	e8 fc d1 ff ff       	callq  9450 <mbedtls_mpi_copy>
    c254:	85 c0                	test   %eax,%eax
    c256:	74 3e                	je     c296 <mbedtls_mpi_gcd+0xb6>
    c258:	48 89 ef             	mov    %rbp,%rdi
    c25b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    c25f:	e8 5c cf ff ff       	callq  91c0 <mbedtls_mpi_free>
    c264:	4c 89 ef             	mov    %r13,%rdi
    c267:	e8 54 cf ff ff       	callq  91c0 <mbedtls_mpi_free>
    c26c:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    c271:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    c278:	00 00 
    c27a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    c27e:	0f 85 90 02 00 00    	jne    c514 <mbedtls_mpi_gcd+0x334>
    c284:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    c28b:	5b                   	pop    %rbx
    c28c:	5d                   	pop    %rbp
    c28d:	41 5c                	pop    %r12
    c28f:	41 5d                	pop    %r13
    c291:	41 5e                	pop    %r14
    c293:	41 5f                	pop    %r15
    c295:	c3                   	retq   
    c296:	4c 89 e6             	mov    %r12,%rsi
    c299:	4c 89 ef             	mov    %r13,%rdi
    c29c:	e8 af d1 ff ff       	callq  9450 <mbedtls_mpi_copy>
    c2a1:	85 c0                	test   %eax,%eax
    c2a3:	75 b3                	jne    c258 <mbedtls_mpi_gcd+0x78>
    c2a5:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    c2aa:	48 85 f6             	test   %rsi,%rsi
    c2ad:	0f 84 59 02 00 00    	je     c50c <mbedtls_mpi_gcd+0x32c>
    c2b3:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    c2b8:	45 31 e4             	xor    %r12d,%r12d
    c2bb:	31 c9                	xor    %ecx,%ecx
    c2bd:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
    c2c1:	31 c0                	xor    %eax,%eax
    c2c3:	eb 15                	jmp    c2da <mbedtls_mpi_gcd+0xfa>
    c2c5:	0f 1f 00             	nopl   (%rax)
    c2c8:	48 83 c0 01          	add    $0x1,%rax
    c2cc:	49 83 c4 01          	add    $0x1,%r12
    c2d0:	48 83 f8 40          	cmp    $0x40,%rax
    c2d4:	0f 84 25 02 00 00    	je     c4ff <mbedtls_mpi_gcd+0x31f>
    c2da:	48 0f a3 c2          	bt     %rax,%rdx
    c2de:	73 e8                	jae    c2c8 <mbedtls_mpi_gcd+0xe8>
    c2e0:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    c2e5:	48 85 f6             	test   %rsi,%rsi
    c2e8:	0f 84 6e 01 00 00    	je     c45c <mbedtls_mpi_gcd+0x27c>
    c2ee:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
    c2f3:	31 d2                	xor    %edx,%edx
    c2f5:	31 ff                	xor    %edi,%edi
    c2f7:	49 8b 0c f8          	mov    (%r8,%rdi,8),%rcx
    c2fb:	31 c0                	xor    %eax,%eax
    c2fd:	eb 13                	jmp    c312 <mbedtls_mpi_gcd+0x132>
    c2ff:	90                   	nop
    c300:	48 83 c0 01          	add    $0x1,%rax
    c304:	48 83 c2 01          	add    $0x1,%rdx
    c308:	48 83 f8 40          	cmp    $0x40,%rax
    c30c:	0f 84 2a 01 00 00    	je     c43c <mbedtls_mpi_gcd+0x25c>
    c312:	48 0f a3 c1          	bt     %rax,%rcx
    c316:	73 e8                	jae    c300 <mbedtls_mpi_gcd+0x120>
    c318:	48 85 d2             	test   %rdx,%rdx
    c31b:	0f 84 28 01 00 00    	je     c449 <mbedtls_mpi_gcd+0x269>
    c321:	49 39 d4             	cmp    %rdx,%r12
    c324:	4c 0f 47 e2          	cmova  %rdx,%r12
    c328:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    c32f:	00 
    c330:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
    c335:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
    c33a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    c341:	00 
    c342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c348:	48 89 de             	mov    %rbx,%rsi
    c34b:	48 89 ef             	mov    %rbp,%rdi
    c34e:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
    c355:	00 00 
    c357:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    c35e:	00 
    c35f:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
    c366:	00 00 
    c368:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
    c36d:	e8 2e d7 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    c372:	85 c0                	test   %eax,%eax
    c374:	0f 84 62 01 00 00    	je     c4dc <mbedtls_mpi_gcd+0x2fc>
    c37a:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    c37f:	4d 85 c0             	test   %r8,%r8
    c382:	74 34                	je     c3b8 <mbedtls_mpi_gcd+0x1d8>
    c384:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    c389:	31 d2                	xor    %edx,%edx
    c38b:	31 f6                	xor    %esi,%esi
    c38d:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
    c391:	31 c0                	xor    %eax,%eax
    c393:	eb 15                	jmp    c3aa <mbedtls_mpi_gcd+0x1ca>
    c395:	0f 1f 00             	nopl   (%rax)
    c398:	48 83 c0 01          	add    $0x1,%rax
    c39c:	48 83 c2 01          	add    $0x1,%rdx
    c3a0:	48 83 f8 40          	cmp    $0x40,%rax
    c3a4:	0f 84 06 01 00 00    	je     c4b0 <mbedtls_mpi_gcd+0x2d0>
    c3aa:	48 0f a3 c1          	bt     %rax,%rcx
    c3ae:	73 e8                	jae    c398 <mbedtls_mpi_gcd+0x1b8>
    c3b0:	4c 89 c6             	mov    %r8,%rsi
    c3b3:	e8 d8 25 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    c3b8:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
    c3bd:	4d 85 c0             	test   %r8,%r8
    c3c0:	74 36                	je     c3f8 <mbedtls_mpi_gcd+0x218>
    c3c2:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    c3c7:	31 d2                	xor    %edx,%edx
    c3c9:	31 f6                	xor    %esi,%esi
    c3cb:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
    c3cf:	31 c0                	xor    %eax,%eax
    c3d1:	eb 17                	jmp    c3ea <mbedtls_mpi_gcd+0x20a>
    c3d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c3d8:	48 83 c0 01          	add    $0x1,%rax
    c3dc:	48 83 c2 01          	add    $0x1,%rdx
    c3e0:	48 83 f8 40          	cmp    $0x40,%rax
    c3e4:	0f 84 de 00 00 00    	je     c4c8 <mbedtls_mpi_gcd+0x2e8>
    c3ea:	48 0f a3 c1          	bt     %rax,%rcx
    c3ee:	73 e8                	jae    c3d8 <mbedtls_mpi_gcd+0x1f8>
    c3f0:	4c 89 c6             	mov    %r8,%rsi
    c3f3:	e8 98 25 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    c3f8:	4c 89 ee             	mov    %r13,%rsi
    c3fb:	48 89 ef             	mov    %rbp,%rdi
    c3fe:	e8 9d d6 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    c403:	85 c0                	test   %eax,%eax
    c405:	78 69                	js     c470 <mbedtls_mpi_gcd+0x290>
    c407:	4c 89 ea             	mov    %r13,%rdx
    c40a:	48 89 ee             	mov    %rbp,%rsi
    c40d:	e8 ee d8 ff ff       	callq  9d00 <mbedtls_mpi_sub_abs>
    c412:	85 c0                	test   %eax,%eax
    c414:	0f 85 3e fe ff ff    	jne    c258 <mbedtls_mpi_gcd+0x78>
    c41a:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    c41f:	48 85 f6             	test   %rsi,%rsi
    c422:	0f 84 20 ff ff ff    	je     c348 <mbedtls_mpi_gcd+0x168>
    c428:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    c42d:	ba 01 00 00 00       	mov    $0x1,%edx
    c432:	e8 59 25 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    c437:	e9 0c ff ff ff       	jmpq   c348 <mbedtls_mpi_gcd+0x168>
    c43c:	48 83 c7 01          	add    $0x1,%rdi
    c440:	48 39 f7             	cmp    %rsi,%rdi
    c443:	0f 85 ae fe ff ff    	jne    c2f7 <mbedtls_mpi_gcd+0x117>
    c449:	48 c1 e6 06          	shl    $0x6,%rsi
    c44d:	74 0d                	je     c45c <mbedtls_mpi_gcd+0x27c>
    c44f:	45 31 e4             	xor    %r12d,%r12d
    c452:	41 f6 00 01          	testb  $0x1,(%r8)
    c456:	0f 85 cc fe ff ff    	jne    c328 <mbedtls_mpi_gcd+0x148>
    c45c:	4c 89 f6             	mov    %r14,%rsi
    c45f:	4c 89 ff             	mov    %r15,%rdi
    c462:	e8 e9 cf ff ff       	callq  9450 <mbedtls_mpi_copy>
    c467:	e9 ec fd ff ff       	jmpq   c258 <mbedtls_mpi_gcd+0x78>
    c46c:	0f 1f 40 00          	nopl   0x0(%rax)
    c470:	48 89 ea             	mov    %rbp,%rdx
    c473:	4c 89 ee             	mov    %r13,%rsi
    c476:	4c 89 ef             	mov    %r13,%rdi
    c479:	e8 82 d8 ff ff       	callq  9d00 <mbedtls_mpi_sub_abs>
    c47e:	85 c0                	test   %eax,%eax
    c480:	0f 85 d2 fd ff ff    	jne    c258 <mbedtls_mpi_gcd+0x78>
    c486:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    c48b:	48 85 f6             	test   %rsi,%rsi
    c48e:	0f 84 b4 fe ff ff    	je     c348 <mbedtls_mpi_gcd+0x168>
    c494:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    c499:	ba 01 00 00 00       	mov    $0x1,%edx
    c49e:	e8 ed 24 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    c4a3:	e9 a0 fe ff ff       	jmpq   c348 <mbedtls_mpi_gcd+0x168>
    c4a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c4af:	00 
    c4b0:	48 83 c6 01          	add    $0x1,%rsi
    c4b4:	4c 39 c6             	cmp    %r8,%rsi
    c4b7:	0f 85 d0 fe ff ff    	jne    c38d <mbedtls_mpi_gcd+0x1ad>
    c4bd:	31 d2                	xor    %edx,%edx
    c4bf:	e9 ec fe ff ff       	jmpq   c3b0 <mbedtls_mpi_gcd+0x1d0>
    c4c4:	0f 1f 40 00          	nopl   0x0(%rax)
    c4c8:	48 83 c6 01          	add    $0x1,%rsi
    c4cc:	4c 39 c6             	cmp    %r8,%rsi
    c4cf:	0f 85 f6 fe ff ff    	jne    c3cb <mbedtls_mpi_gcd+0x1eb>
    c4d5:	31 d2                	xor    %edx,%edx
    c4d7:	e9 14 ff ff ff       	jmpq   c3f0 <mbedtls_mpi_gcd+0x210>
    c4dc:	4c 89 e6             	mov    %r12,%rsi
    c4df:	4c 89 ef             	mov    %r13,%rdi
    c4e2:	e8 99 d3 ff ff       	callq  9880 <mbedtls_mpi_shift_l>
    c4e7:	85 c0                	test   %eax,%eax
    c4e9:	0f 85 69 fd ff ff    	jne    c258 <mbedtls_mpi_gcd+0x78>
    c4ef:	4c 89 ee             	mov    %r13,%rsi
    c4f2:	4c 89 ff             	mov    %r15,%rdi
    c4f5:	e8 56 cf ff ff       	callq  9450 <mbedtls_mpi_copy>
    c4fa:	e9 59 fd ff ff       	jmpq   c258 <mbedtls_mpi_gcd+0x78>
    c4ff:	48 83 c1 01          	add    $0x1,%rcx
    c503:	48 39 f1             	cmp    %rsi,%rcx
    c506:	0f 85 b1 fd ff ff    	jne    c2bd <mbedtls_mpi_gcd+0xdd>
    c50c:	45 31 e4             	xor    %r12d,%r12d
    c50f:	e9 cc fd ff ff       	jmpq   c2e0 <mbedtls_mpi_gcd+0x100>
    c514:	e8 67 6d ff ff       	callq  3280 <__stack_chk_fail@plt>
    c519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c520 <mbedtls_mpi_fill_random>:
    c520:	f3 0f 1e fa          	endbr64 
    c524:	41 55                	push   %r13
    c526:	49 89 d5             	mov    %rdx,%r13
    c529:	41 54                	push   %r12
    c52b:	49 89 f4             	mov    %rsi,%r12
    c52e:	55                   	push   %rbp
    c52f:	4c 89 e0             	mov    %r12,%rax
    c532:	48 89 cd             	mov    %rcx,%rbp
    c535:	53                   	push   %rbx
    c536:	48 89 fb             	mov    %rdi,%rbx
    c539:	48 83 ec 08          	sub    $0x8,%rsp
    c53d:	83 e6 07             	and    $0x7,%esi
    c540:	40 0f 95 c6          	setne  %sil
    c544:	48 c1 e8 03          	shr    $0x3,%rax
    c548:	40 0f b6 f6          	movzbl %sil,%esi
    c54c:	48 01 c6             	add    %rax,%rsi
    c54f:	e8 6c cd ff ff       	callq  92c0 <mbedtls_mpi_resize_clear>
    c554:	85 c0                	test   %eax,%eax
    c556:	75 05                	jne    c55d <mbedtls_mpi_fill_random+0x3d>
    c558:	4d 85 e4             	test   %r12,%r12
    c55b:	75 13                	jne    c570 <mbedtls_mpi_fill_random+0x50>
    c55d:	48 83 c4 08          	add    $0x8,%rsp
    c561:	5b                   	pop    %rbx
    c562:	5d                   	pop    %rbp
    c563:	41 5c                	pop    %r12
    c565:	41 5d                	pop    %r13
    c567:	c3                   	retq   
    c568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c56f:	00 
    c570:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    c574:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    c578:	48 83 c4 08          	add    $0x8,%rsp
    c57c:	49 89 e8             	mov    %rbp,%r8
    c57f:	5b                   	pop    %rbx
    c580:	4c 89 e9             	mov    %r13,%rcx
    c583:	5d                   	pop    %rbp
    c584:	4c 89 e2             	mov    %r12,%rdx
    c587:	41 5c                	pop    %r12
    c589:	41 5d                	pop    %r13
    c58b:	e9 10 2a 00 00       	jmpq   efa0 <mbedtls_mpi_core_fill_random>

000000000000c590 <mpi_miller_rabin>:
    c590:	41 57                	push   %r15
    c592:	41 56                	push   %r14
    c594:	49 89 fe             	mov    %rdi,%r14
    c597:	41 55                	push   %r13
    c599:	41 54                	push   %r12
    c59b:	49 89 d4             	mov    %rdx,%r12
    c59e:	55                   	push   %rbp
    c59f:	53                   	push   %rbx
    c5a0:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    c5a7:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
    c5ac:	4c 8d 7c 24 60       	lea    0x60(%rsp),%r15
    c5b1:	48 89 fe             	mov    %rdi,%rsi
    c5b4:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    c5b9:	4c 89 ff             	mov    %r15,%rdi
    c5bc:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    c5c1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c5c8:	00 00 
    c5ca:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    c5d1:	00 
    c5d2:	31 c0                	xor    %eax,%eax
    c5d4:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
    c5db:	00 
    c5dc:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
    c5e3:	00 
    c5e4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    c5e9:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    c5f0:	00 
    c5f1:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    c5f8:	00 
    c5f9:	48 89 c2             	mov    %rax,%rdx
    c5fc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c601:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
    c608:	00 00 
    c60a:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
    c611:	00 00 
    c613:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
    c61a:	01 00 00 00 
    c61e:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
    c625:	00 00 00 00 00 
    c62a:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    c631:	00 00 00 00 00 
    c636:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
    c63d:	01 00 00 00 
    c641:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
    c648:	00 00 00 00 00 
    c64d:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
    c654:	00 00 00 00 00 
    c659:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
    c660:	01 00 00 00 
    c664:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
    c66b:	00 00 00 00 00 
    c670:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
    c677:	00 00 00 00 00 
    c67c:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
    c683:	01 00 00 00 
    c687:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
    c68e:	00 00 00 00 00 
    c693:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
    c69a:	00 00 00 00 00 
    c69f:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    c6a6:	00 01 00 00 00 
    c6ab:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    c6b2:	01 00 00 00 
    c6b6:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    c6bd:	00 01 00 00 00 
    c6c2:	e8 79 d7 ff ff       	callq  9e40 <add_sub_mpi>
    c6c7:	89 44 24 24          	mov    %eax,0x24(%rsp)
    c6cb:	85 c0                	test   %eax,%eax
    c6cd:	0f 85 25 02 00 00    	jne    c8f8 <mpi_miller_rabin+0x368>
    c6d3:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    c6d8:	48 85 f6             	test   %rsi,%rsi
    c6db:	0f 84 ec 02 00 00    	je     c9cd <mpi_miller_rabin+0x43d>
    c6e1:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
    c6e6:	31 ed                	xor    %ebp,%ebp
    c6e8:	31 c9                	xor    %ecx,%ecx
    c6ea:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
    c6ee:	31 c0                	xor    %eax,%eax
    c6f0:	eb 18                	jmp    c70a <mpi_miller_rabin+0x17a>
    c6f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c6f8:	48 83 c0 01          	add    $0x1,%rax
    c6fc:	48 83 c5 01          	add    $0x1,%rbp
    c700:	48 83 f8 40          	cmp    $0x40,%rax
    c704:	0f 84 b6 02 00 00    	je     c9c0 <mpi_miller_rabin+0x430>
    c70a:	48 0f a3 c2          	bt     %rax,%rdx
    c70e:	73 e8                	jae    c6f8 <mpi_miller_rabin+0x168>
    c710:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    c717:	00 
    c718:	4c 89 fe             	mov    %r15,%rsi
    c71b:	48 89 c7             	mov    %rax,%rdi
    c71e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    c723:	e8 28 cd ff ff       	callq  9450 <mbedtls_mpi_copy>
    c728:	89 44 24 24          	mov    %eax,0x24(%rsp)
    c72c:	85 c0                	test   %eax,%eax
    c72e:	0f 85 d1 01 00 00    	jne    c905 <mpi_miller_rabin+0x375>
    c734:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    c73b:	00 
    c73c:	48 85 f6             	test   %rsi,%rsi
    c73f:	0f 85 93 02 00 00    	jne    c9d8 <mpi_miller_rabin+0x448>
    c745:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    c74b:	0f 84 b4 01 00 00    	je     c905 <mpi_miller_rabin+0x375>
    c751:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    c758:	00 
    c759:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
    c75e:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
    c765:	00 
    c766:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    c76b:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    c772:	00 
    c773:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    c77a:	00 00 
    c77c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    c781:	bd 20 00 00 00       	mov    $0x20,%ebp
    c786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c78d:	00 00 00 
    c790:	49 8b 46 08          	mov    0x8(%r14),%rax
    c794:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    c799:	4c 89 e2             	mov    %r12,%rdx
    c79c:	4c 89 ef             	mov    %r13,%rdi
    c79f:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    c7a6:	00 
    c7a7:	e8 74 fd ff ff       	callq  c520 <mbedtls_mpi_fill_random>
    c7ac:	85 c0                	test   %eax,%eax
    c7ae:	0f 85 d4 01 00 00    	jne    c988 <mpi_miller_rabin+0x3f8>
    c7b4:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
    c7bb:	00 
    c7bc:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
    c7c3:	00 
    c7c4:	e8 a7 1d 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    c7c9:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    c7ce:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
    c7d3:	48 89 c3             	mov    %rax,%rbx
    c7d6:	e8 95 1d 00 00       	callq  e570 <mbedtls_mpi_core_bitlen>
    c7db:	48 39 d8             	cmp    %rbx,%rax
    c7de:	73 2d                	jae    c80d <mpi_miller_rabin+0x27d>
    c7e0:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
    c7e7:	00 
    c7e8:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
    c7ef:	00 
    c7f0:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    c7f4:	c1 e1 06             	shl    $0x6,%ecx
    c7f7:	f7 d1                	not    %ecx
    c7f9:	01 c1                	add    %eax,%ecx
    c7fb:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    c802:	48 d3 e0             	shl    %cl,%rax
    c805:	48 f7 d0             	not    %rax
    c808:	48 21 44 d6 f8       	and    %rax,-0x8(%rsi,%rdx,8)
    c80d:	83 ed 01             	sub    $0x1,%ebp
    c810:	0f 84 9a 01 00 00    	je     c9b0 <mpi_miller_rabin+0x420>
    c816:	4c 89 fe             	mov    %r15,%rsi
    c819:	4c 89 ef             	mov    %r13,%rdi
    c81c:	e8 7f d2 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    c821:	85 c0                	test   %eax,%eax
    c823:	0f 89 67 ff ff ff    	jns    c790 <mpi_miller_rabin+0x200>
    c829:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    c82e:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    c833:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    c83a:	00 01 00 00 00 
    c83f:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    c846:	01 00 00 00 
    c84a:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    c851:	00 01 00 00 00 
    c856:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    c85d:	00 
    c85e:	e8 3d d2 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    c863:	85 c0                	test   %eax,%eax
    c865:	0f 8e 25 ff ff ff    	jle    c790 <mpi_miller_rabin+0x200>
    c86b:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    c870:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    c875:	4c 89 f1             	mov    %r14,%rcx
    c878:	4c 89 ee             	mov    %r13,%rsi
    c87b:	e8 80 ee ff ff       	callq  b700 <mbedtls_mpi_exp_mod>
    c880:	85 c0                	test   %eax,%eax
    c882:	0f 85 00 01 00 00    	jne    c988 <mpi_miller_rabin+0x3f8>
    c888:	4c 89 fe             	mov    %r15,%rsi
    c88b:	4c 89 ef             	mov    %r13,%rdi
    c88e:	e8 0d d2 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    c893:	85 c0                	test   %eax,%eax
    c895:	74 42                	je     c8d9 <mpi_miller_rabin+0x349>
    c897:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    c89c:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    c8a1:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    c8a8:	00 01 00 00 00 
    c8ad:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    c8b4:	01 00 00 00 
    c8b8:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    c8bf:	00 01 00 00 00 
    c8c4:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    c8cb:	00 
    c8cc:	e8 cf d1 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    c8d1:	85 c0                	test   %eax,%eax
    c8d3:	0f 85 14 01 00 00    	jne    c9ed <mpi_miller_rabin+0x45d>
    c8d9:	48 83 44 24 50 01    	addq   $0x1,0x50(%rsp)
    c8df:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    c8e4:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
    c8e9:	0f 85 92 fe ff ff    	jne    c781 <mpi_miller_rabin+0x1f1>
    c8ef:	eb 36                	jmp    c927 <mpi_miller_rabin+0x397>
    c8f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c8f8:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    c8ff:	00 
    c900:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    c905:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    c90c:	00 
    c90d:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
    c914:	00 
    c915:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    c91a:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    c921:	00 
    c922:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    c927:	4c 89 ff             	mov    %r15,%rdi
    c92a:	e8 91 c8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    c92f:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    c934:	e8 87 c8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    c939:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    c93e:	e8 7d c8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    c943:	4c 89 ef             	mov    %r13,%rdi
    c946:	e8 75 c8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    c94b:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    c950:	e8 6b c8 ff ff       	callq  91c0 <mbedtls_mpi_free>
    c955:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
    c95c:	00 
    c95d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    c964:	00 00 
    c966:	0f 85 84 01 00 00    	jne    caf0 <mpi_miller_rabin+0x560>
    c96c:	8b 44 24 24          	mov    0x24(%rsp),%eax
    c970:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
    c977:	5b                   	pop    %rbx
    c978:	5d                   	pop    %rbp
    c979:	41 5c                	pop    %r12
    c97b:	41 5d                	pop    %r13
    c97d:	41 5e                	pop    %r14
    c97f:	41 5f                	pop    %r15
    c981:	c3                   	retq   
    c982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c988:	89 44 24 24          	mov    %eax,0x24(%rsp)
    c98c:	eb 99                	jmp    c927 <mpi_miller_rabin+0x397>
    c98e:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
    c993:	4c 89 fe             	mov    %r15,%rsi
    c996:	4c 89 ef             	mov    %r13,%rdi
    c999:	e8 02 d1 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    c99e:	85 c0                	test   %eax,%eax
    c9a0:	0f 84 00 01 00 00    	je     caa6 <mpi_miller_rabin+0x516>
    c9a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c9ad:	00 00 00 
    c9b0:	c7 44 24 24 f2 ff ff 	movl   $0xfffffff2,0x24(%rsp)
    c9b7:	ff 
    c9b8:	e9 6a ff ff ff       	jmpq   c927 <mpi_miller_rabin+0x397>
    c9bd:	0f 1f 00             	nopl   (%rax)
    c9c0:	48 83 c1 01          	add    $0x1,%rcx
    c9c4:	48 39 ce             	cmp    %rcx,%rsi
    c9c7:	0f 85 1d fd ff ff    	jne    c6ea <mpi_miller_rabin+0x15a>
    c9cd:	31 ed                	xor    %ebp,%ebp
    c9cf:	e9 3c fd ff ff       	jmpq   c710 <mpi_miller_rabin+0x180>
    c9d4:	0f 1f 40 00          	nopl   0x0(%rax)
    c9d8:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    c9df:	00 
    c9e0:	48 89 ea             	mov    %rbp,%rdx
    c9e3:	e8 a8 1f 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    c9e8:	e9 58 fd ff ff       	jmpq   c745 <mpi_miller_rabin+0x1b5>
    c9ed:	48 83 7c 24 48 01    	cmpq   $0x1,0x48(%rsp)
    c9f3:	bb 01 00 00 00       	mov    $0x1,%ebx
    c9f8:	76 99                	jbe    c993 <mpi_miller_rabin+0x403>
    c9fa:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
    c9ff:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
    ca04:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    ca09:	e9 80 00 00 00       	jmpq   ca8e <mpi_miller_rabin+0x4fe>
    ca0e:	66 90                	xchg   %ax,%ax
    ca10:	4c 89 ea             	mov    %r13,%rdx
    ca13:	4c 89 ee             	mov    %r13,%rsi
    ca16:	48 89 ef             	mov    %rbp,%rdi
    ca19:	e8 c2 d5 ff ff       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    ca1e:	85 c0                	test   %eax,%eax
    ca20:	0f 85 62 ff ff ff    	jne    c988 <mpi_miller_rabin+0x3f8>
    ca26:	4c 89 f2             	mov    %r14,%rdx
    ca29:	48 89 ee             	mov    %rbp,%rsi
    ca2c:	4c 89 ef             	mov    %r13,%rdi
    ca2f:	e8 1c e6 ff ff       	callq  b050 <mbedtls_mpi_mod_mpi>
    ca34:	85 c0                	test   %eax,%eax
    ca36:	0f 85 4c ff ff ff    	jne    c988 <mpi_miller_rabin+0x3f8>
    ca3c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    ca41:	4c 89 e6             	mov    %r12,%rsi
    ca44:	4c 89 ef             	mov    %r13,%rdi
    ca47:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    ca4e:	00 01 00 00 00 
    ca53:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    ca5a:	01 00 00 00 
    ca5e:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    ca65:	00 01 00 00 00 
    ca6a:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    ca71:	00 
    ca72:	e8 29 d0 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    ca77:	85 c0                	test   %eax,%eax
    ca79:	0f 84 0f ff ff ff    	je     c98e <mpi_miller_rabin+0x3fe>
    ca7f:	48 83 c3 01          	add    $0x1,%rbx
    ca83:	48 3b 5c 24 48       	cmp    0x48(%rsp),%rbx
    ca88:	0f 84 00 ff ff ff    	je     c98e <mpi_miller_rabin+0x3fe>
    ca8e:	4c 89 fe             	mov    %r15,%rsi
    ca91:	4c 89 ef             	mov    %r13,%rdi
    ca94:	e8 07 d0 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    ca99:	85 c0                	test   %eax,%eax
    ca9b:	0f 85 6f ff ff ff    	jne    ca10 <mpi_miller_rabin+0x480>
    caa1:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
    caa6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    caab:	4c 89 ef             	mov    %r13,%rdi
    caae:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    cab3:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    caba:	00 01 00 00 00 
    cabf:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    cac6:	01 00 00 00 
    caca:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    cad1:	00 01 00 00 00 
    cad6:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    cadd:	00 
    cade:	e8 bd cf ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    cae3:	85 c0                	test   %eax,%eax
    cae5:	0f 85 ee fd ff ff    	jne    c8d9 <mpi_miller_rabin+0x349>
    caeb:	e9 c0 fe ff ff       	jmpq   c9b0 <mpi_miller_rabin+0x420>
    caf0:	e8 8b 67 ff ff       	callq  3280 <__stack_chk_fail@plt>
    caf5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cafc:	00 00 00 00 

000000000000cb00 <mbedtls_mpi_random>:
    cb00:	f3 0f 1e fa          	endbr64 
    cb04:	48 85 f6             	test   %rsi,%rsi
    cb07:	78 6e                	js     cb77 <mbedtls_mpi_random+0x77>
    cb09:	41 56                	push   %r14
    cb0b:	4d 89 c6             	mov    %r8,%r14
    cb0e:	41 55                	push   %r13
    cb10:	49 89 cd             	mov    %rcx,%r13
    cb13:	41 54                	push   %r12
    cb15:	49 89 fc             	mov    %rdi,%r12
    cb18:	48 89 d7             	mov    %rdx,%rdi
    cb1b:	55                   	push   %rbp
    cb1c:	48 89 f5             	mov    %rsi,%rbp
    cb1f:	53                   	push   %rbx
    cb20:	48 89 d3             	mov    %rdx,%rbx
    cb23:	e8 68 d0 ff ff       	callq  9b90 <mbedtls_mpi_cmp_int>
    cb28:	85 c0                	test   %eax,%eax
    cb2a:	7e 44                	jle    cb70 <mbedtls_mpi_random+0x70>
    cb2c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    cb30:	4c 89 e7             	mov    %r12,%rdi
    cb33:	e8 88 c7 ff ff       	callq  92c0 <mbedtls_mpi_resize_clear>
    cb38:	85 c0                	test   %eax,%eax
    cb3a:	74 0c                	je     cb48 <mbedtls_mpi_random+0x48>
    cb3c:	5b                   	pop    %rbx
    cb3d:	5d                   	pop    %rbp
    cb3e:	41 5c                	pop    %r12
    cb40:	41 5d                	pop    %r13
    cb42:	41 5e                	pop    %r14
    cb44:	c3                   	retq   
    cb45:	0f 1f 00             	nopl   (%rax)
    cb48:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
    cb4d:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    cb51:	4d 89 f1             	mov    %r14,%r9
    cb54:	4d 89 e8             	mov    %r13,%r8
    cb57:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    cb5c:	5b                   	pop    %rbx
    cb5d:	48 89 ee             	mov    %rbp,%rsi
    cb60:	5d                   	pop    %rbp
    cb61:	41 5c                	pop    %r12
    cb63:	41 5d                	pop    %r13
    cb65:	41 5e                	pop    %r14
    cb67:	e9 f4 24 00 00       	jmpq   f060 <mbedtls_mpi_core_random>
    cb6c:	0f 1f 40 00          	nopl   0x0(%rax)
    cb70:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    cb75:	eb c5                	jmp    cb3c <mbedtls_mpi_random+0x3c>
    cb77:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    cb7c:	c3                   	retq   
    cb7d:	0f 1f 00             	nopl   (%rax)

000000000000cb80 <mbedtls_mpi_inv_mod>:
    cb80:	f3 0f 1e fa          	endbr64 
    cb84:	41 57                	push   %r15
    cb86:	41 56                	push   %r14
    cb88:	49 89 f6             	mov    %rsi,%r14
    cb8b:	41 55                	push   %r13
    cb8d:	41 54                	push   %r12
    cb8f:	55                   	push   %rbp
    cb90:	53                   	push   %rbx
    cb91:	48 89 d3             	mov    %rdx,%rbx
    cb94:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
    cb9b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    cba0:	4c 8d a4 24 60 01 00 	lea    0x160(%rsp),%r12
    cba7:	00 
    cba8:	48 89 d7             	mov    %rdx,%rdi
    cbab:	4c 89 e6             	mov    %r12,%rsi
    cbae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cbb5:	00 00 
    cbb7:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    cbbe:	00 
    cbbf:	31 c0                	xor    %eax,%eax
    cbc1:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
    cbc8:	00 
    cbc9:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
    cbd0:	00 01 00 00 00 
    cbd5:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
    cbdc:	01 00 00 00 
    cbe0:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
    cbe7:	00 01 00 00 00 
    cbec:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    cbf1:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    cbf8:	00 
    cbf9:	e8 a2 ce ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    cbfe:	85 c0                	test   %eax,%eax
    cc00:	0f 8e 2a 05 00 00    	jle    d130 <mbedtls_mpi_inv_mod+0x5b0>
    cc06:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
    cc0b:	48 89 da             	mov    %rbx,%rdx
    cc0e:	4c 89 f6             	mov    %r14,%rsi
    cc11:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
    cc18:	00 
    cc19:	48 89 ef             	mov    %rbp,%rdi
    cc1c:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
    cc23:	00 00 
    cc25:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
    cc2c:	00 00 
    cc2e:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
    cc35:	01 00 00 00 
    cc39:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
    cc40:	00 00 00 00 00 
    cc45:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    cc4c:	00 00 00 00 00 
    cc51:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
    cc58:	01 00 00 00 
    cc5c:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
    cc63:	00 00 00 00 00 
    cc68:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
    cc6f:	00 00 00 00 00 
    cc74:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
    cc7b:	01 00 00 00 
    cc7f:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
    cc86:	00 00 00 00 00 
    cc8b:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
    cc92:	00 00 00 00 00 
    cc97:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
    cc9e:	00 
    cc9f:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    cca6:	00 00 
    cca8:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    ccaf:	00 00 
    ccb1:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
    ccb8:	01 00 00 00 
    ccbc:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
    ccc3:	00 00 00 00 00 
    ccc8:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
    cccf:	00 00 00 00 00 
    ccd4:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    ccdb:	01 00 00 00 
    ccdf:	48 c7 84 24 08 01 00 	movq   $0x0,0x108(%rsp)
    cce6:	00 00 00 00 00 
    cceb:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
    ccf2:	00 00 00 00 00 
    ccf7:	c7 84 24 20 01 00 00 	movl   $0x1,0x120(%rsp)
    ccfe:	01 00 00 00 
    cd02:	48 c7 84 24 28 01 00 	movq   $0x0,0x128(%rsp)
    cd09:	00 00 00 00 00 
    cd0e:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
    cd15:	00 00 00 00 00 
    cd1a:	c7 84 24 40 01 00 00 	movl   $0x1,0x140(%rsp)
    cd21:	01 00 00 00 
    cd25:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
    cd2c:	00 00 00 00 00 
    cd31:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
    cd38:	00 00 00 00 00 
    cd3d:	e8 9e f4 ff ff       	callq  c1e0 <mbedtls_mpi_gcd>
    cd42:	85 c0                	test   %eax,%eax
    cd44:	75 48                	jne    cd8e <mbedtls_mpi_inv_mod+0x20e>
    cd46:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    cd4b:	4c 89 e6             	mov    %r12,%rsi
    cd4e:	48 89 ef             	mov    %rbp,%rdi
    cd51:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
    cd58:	00 01 00 00 00 
    cd5d:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
    cd64:	01 00 00 00 
    cd68:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
    cd6f:	00 01 00 00 00 
    cd74:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    cd7b:	00 
    cd7c:	e8 1f cd ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    cd81:	85 c0                	test   %eax,%eax
    cd83:	0f 84 ef 00 00 00    	je     ce78 <mbedtls_mpi_inv_mod+0x2f8>
    cd89:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    cd8e:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
    cd93:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
    cd9a:	00 
    cd9b:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
    cda2:	00 
    cda3:	48 8d 8c 24 00 01 00 	lea    0x100(%rsp),%rcx
    cdaa:	00 
    cdab:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
    cdb2:	00 
    cdb3:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    cdb8:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
    cdbf:	00 
    cdc0:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
    cdc7:	00 
    cdc8:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
    cdcf:	00 
    cdd0:	4c 89 ef             	mov    %r13,%rdi
    cdd3:	89 44 24 10          	mov    %eax,0x10(%rsp)
    cdd7:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    cddc:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    cde1:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    cde6:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
    cdeb:	e8 d0 c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    cdf0:	4c 89 f7             	mov    %r14,%rdi
    cdf3:	e8 c8 c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    cdf8:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    cdfd:	4c 89 df             	mov    %r11,%rdi
    ce00:	e8 bb c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    ce05:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    ce0a:	4c 89 d7             	mov    %r10,%rdi
    ce0d:	e8 ae c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    ce12:	48 89 ef             	mov    %rbp,%rdi
    ce15:	e8 a6 c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    ce1a:	4c 89 ff             	mov    %r15,%rdi
    ce1d:	e8 9e c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    ce22:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    ce27:	e8 94 c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    ce2c:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    ce31:	4c 89 c7             	mov    %r8,%rdi
    ce34:	e8 87 c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    ce39:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    ce3e:	4c 89 cf             	mov    %r9,%rdi
    ce41:	e8 7a c3 ff ff       	callq  91c0 <mbedtls_mpi_free>
    ce46:	8b 44 24 10          	mov    0x10(%rsp),%eax
    ce4a:	48 8b 8c 24 88 01 00 	mov    0x188(%rsp),%rcx
    ce51:	00 
    ce52:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    ce59:	00 00 
    ce5b:	0f 85 3e 05 00 00    	jne    d39f <mbedtls_mpi_inv_mod+0x81f>
    ce61:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
    ce68:	5b                   	pop    %rbx
    ce69:	5d                   	pop    %rbp
    ce6a:	41 5c                	pop    %r12
    ce6c:	41 5d                	pop    %r13
    ce6e:	41 5e                	pop    %r14
    ce70:	41 5f                	pop    %r15
    ce72:	c3                   	retq   
    ce73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ce78:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
    ce7d:	4c 89 f6             	mov    %r14,%rsi
    ce80:	48 89 da             	mov    %rbx,%rdx
    ce83:	4c 89 ef             	mov    %r13,%rdi
    ce86:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
    ce8d:	00 
    ce8e:	e8 bd e1 ff ff       	callq  b050 <mbedtls_mpi_mod_mpi>
    ce93:	85 c0                	test   %eax,%eax
    ce95:	0f 85 00 ff ff ff    	jne    cd9b <mbedtls_mpi_inv_mod+0x21b>
    ce9b:	4c 89 ee             	mov    %r13,%rsi
    ce9e:	4c 89 f7             	mov    %r14,%rdi
    cea1:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
    cea8:	00 
    cea9:	e8 a2 c5 ff ff       	callq  9450 <mbedtls_mpi_copy>
    ceae:	85 c0                	test   %eax,%eax
    ceb0:	0f 85 ed fe ff ff    	jne    cda3 <mbedtls_mpi_inv_mod+0x223>
    ceb6:	48 89 de             	mov    %rbx,%rsi
    ceb9:	4c 89 ff             	mov    %r15,%rdi
    cebc:	e8 8f c5 ff ff       	callq  9450 <mbedtls_mpi_copy>
    cec1:	85 c0                	test   %eax,%eax
    cec3:	0f 85 da fe ff ff    	jne    cda3 <mbedtls_mpi_inv_mod+0x223>
    cec9:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    ced0:	00 
    ced1:	48 89 de             	mov    %rbx,%rsi
    ced4:	48 89 c7             	mov    %rax,%rdi
    ced7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    cedc:	e8 6f c5 ff ff       	callq  9450 <mbedtls_mpi_copy>
    cee1:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
    cee8:	00 
    cee9:	85 c0                	test   %eax,%eax
    ceeb:	0f 85 c7 fe ff ff    	jne    cdb8 <mbedtls_mpi_inv_mod+0x238>
    cef1:	4c 89 df             	mov    %r11,%rdi
    cef4:	be 01 00 00 00       	mov    $0x1,%esi
    cef9:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
    cefe:	e8 bd c6 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    cf03:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    cf08:	85 c0                	test   %eax,%eax
    cf0a:	0f 85 a8 fe ff ff    	jne    cdb8 <mbedtls_mpi_inv_mod+0x238>
    cf10:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
    cf17:	00 
    cf18:	31 f6                	xor    %esi,%esi
    cf1a:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
    cf1f:	4c 89 d7             	mov    %r10,%rdi
    cf22:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    cf27:	e8 94 c6 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    cf2c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    cf31:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    cf36:	85 c0                	test   %eax,%eax
    cf38:	0f 85 82 fe ff ff    	jne    cdc0 <mbedtls_mpi_inv_mod+0x240>
    cf3e:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
    cf45:	00 
    cf46:	31 f6                	xor    %esi,%esi
    cf48:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
    cf4d:	4c 89 c7             	mov    %r8,%rdi
    cf50:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
    cf55:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    cf5a:	e8 61 c6 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    cf5f:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    cf64:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    cf69:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
    cf70:	00 
    cf71:	85 c0                	test   %eax,%eax
    cf73:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    cf78:	0f 85 52 fe ff ff    	jne    cdd0 <mbedtls_mpi_inv_mod+0x250>
    cf7e:	4c 89 cf             	mov    %r9,%rdi
    cf81:	be 01 00 00 00       	mov    $0x1,%esi
    cf86:	4c 89 5c 24 38       	mov    %r11,0x38(%rsp)
    cf8b:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
    cf90:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    cf95:	e8 26 c6 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    cf9a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    cf9f:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    cfa4:	85 c0                	test   %eax,%eax
    cfa6:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    cfab:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
    cfb0:	0f 85 1a fe ff ff    	jne    cdd0 <mbedtls_mpi_inv_mod+0x250>
    cfb6:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    cfbb:	4c 89 c3             	mov    %r8,%rbx
    cfbe:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
    cfc3:	4c 89 cd             	mov    %r9,%rbp
    cfc6:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
    cfcb:	4d 89 d4             	mov    %r10,%r12
    cfce:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
    cfd3:	4d 89 de             	mov    %r11,%r14
    cfd6:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    cfdd:	00 
    cfde:	f6 07 01             	testb  $0x1,(%rdi)
    cfe1:	0f 85 b3 00 00 00    	jne    d09a <mbedtls_mpi_inv_mod+0x51a>
    cfe7:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    cfee:	00 
    cfef:	48 85 f6             	test   %rsi,%rsi
    cff2:	0f 85 6c 01 00 00    	jne    d164 <mbedtls_mpi_inv_mod+0x5e4>
    cff8:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    cfff:	00 
    d000:	f6 00 01             	testb  $0x1,(%rax)
    d003:	75 0d                	jne    d012 <mbedtls_mpi_inv_mod+0x492>
    d005:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
    d00c:	00 
    d00d:	f6 00 01             	testb  $0x1,(%rax)
    d010:	74 36                	je     d048 <mbedtls_mpi_inv_mod+0x4c8>
    d012:	b9 01 00 00 00       	mov    $0x1,%ecx
    d017:	4c 89 fa             	mov    %r15,%rdx
    d01a:	4c 89 f6             	mov    %r14,%rsi
    d01d:	4c 89 f7             	mov    %r14,%rdi
    d020:	e8 1b ce ff ff       	callq  9e40 <add_sub_mpi>
    d025:	85 c0                	test   %eax,%eax
    d027:	0f 85 9d 01 00 00    	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d02d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    d032:	4c 89 ea             	mov    %r13,%rdx
    d035:	4c 89 e6             	mov    %r12,%rsi
    d038:	4c 89 e7             	mov    %r12,%rdi
    d03b:	e8 00 ce ff ff       	callq  9e40 <add_sub_mpi>
    d040:	85 c0                	test   %eax,%eax
    d042:	0f 85 82 01 00 00    	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d048:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
    d04f:	00 
    d050:	48 85 f6             	test   %rsi,%rsi
    d053:	0f 85 1a 01 00 00    	jne    d173 <mbedtls_mpi_inv_mod+0x5f3>
    d059:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
    d060:	00 
    d061:	48 85 f6             	test   %rsi,%rsi
    d064:	0f 84 6c ff ff ff    	je     cfd6 <mbedtls_mpi_inv_mod+0x456>
    d06a:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
    d071:	00 
    d072:	ba 01 00 00 00       	mov    $0x1,%edx
    d077:	e8 14 19 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    d07c:	e9 55 ff ff ff       	jmpq   cfd6 <mbedtls_mpi_inv_mod+0x456>
    d081:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d088:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
    d08f:	00 
    d090:	ba 01 00 00 00       	mov    $0x1,%edx
    d095:	e8 f6 18 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    d09a:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
    d0a1:	00 
    d0a2:	f6 07 01             	testb  $0x1,(%rdi)
    d0a5:	0f 85 3a 01 00 00    	jne    d1e5 <mbedtls_mpi_inv_mod+0x665>
    d0ab:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
    d0b2:	00 
    d0b3:	48 85 f6             	test   %rsi,%rsi
    d0b6:	0f 85 84 00 00 00    	jne    d140 <mbedtls_mpi_inv_mod+0x5c0>
    d0bc:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
    d0c3:	00 
    d0c4:	f6 00 01             	testb  $0x1,(%rax)
    d0c7:	75 0d                	jne    d0d6 <mbedtls_mpi_inv_mod+0x556>
    d0c9:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
    d0d0:	00 
    d0d1:	f6 00 01             	testb  $0x1,(%rax)
    d0d4:	74 36                	je     d10c <mbedtls_mpi_inv_mod+0x58c>
    d0d6:	b9 01 00 00 00       	mov    $0x1,%ecx
    d0db:	4c 89 fa             	mov    %r15,%rdx
    d0de:	48 89 de             	mov    %rbx,%rsi
    d0e1:	48 89 df             	mov    %rbx,%rdi
    d0e4:	e8 57 cd ff ff       	callq  9e40 <add_sub_mpi>
    d0e9:	85 c0                	test   %eax,%eax
    d0eb:	0f 85 d9 00 00 00    	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d0f1:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    d0f6:	4c 89 ea             	mov    %r13,%rdx
    d0f9:	48 89 ee             	mov    %rbp,%rsi
    d0fc:	48 89 ef             	mov    %rbp,%rdi
    d0ff:	e8 3c cd ff ff       	callq  9e40 <add_sub_mpi>
    d104:	85 c0                	test   %eax,%eax
    d106:	0f 85 be 00 00 00    	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d10c:	48 8b b4 24 28 01 00 	mov    0x128(%rsp),%rsi
    d113:	00 
    d114:	48 85 f6             	test   %rsi,%rsi
    d117:	75 37                	jne    d150 <mbedtls_mpi_inv_mod+0x5d0>
    d119:	48 8b b4 24 48 01 00 	mov    0x148(%rsp),%rsi
    d120:	00 
    d121:	48 85 f6             	test   %rsi,%rsi
    d124:	0f 84 70 ff ff ff    	je     d09a <mbedtls_mpi_inv_mod+0x51a>
    d12a:	e9 59 ff ff ff       	jmpq   d088 <mbedtls_mpi_inv_mod+0x508>
    d12f:	90                   	nop
    d130:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    d135:	e9 10 fd ff ff       	jmpq   ce4a <mbedtls_mpi_inv_mod+0x2ca>
    d13a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d140:	ba 01 00 00 00       	mov    $0x1,%edx
    d145:	e8 46 18 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    d14a:	e9 6d ff ff ff       	jmpq   d0bc <mbedtls_mpi_inv_mod+0x53c>
    d14f:	90                   	nop
    d150:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
    d157:	00 
    d158:	ba 01 00 00 00       	mov    $0x1,%edx
    d15d:	e8 2e 18 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    d162:	eb b5                	jmp    d119 <mbedtls_mpi_inv_mod+0x599>
    d164:	ba 01 00 00 00       	mov    $0x1,%edx
    d169:	e8 22 18 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    d16e:	e9 85 fe ff ff       	jmpq   cff8 <mbedtls_mpi_inv_mod+0x478>
    d173:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
    d17a:	00 
    d17b:	ba 01 00 00 00       	mov    $0x1,%edx
    d180:	e8 0b 18 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    d185:	e9 cf fe ff ff       	jmpq   d059 <mbedtls_mpi_inv_mod+0x4d9>
    d18a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    d18f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    d194:	48 89 f7             	mov    %rsi,%rdi
    d197:	e8 a4 cc ff ff       	callq  9e40 <add_sub_mpi>
    d19c:	85 c0                	test   %eax,%eax
    d19e:	75 2a                	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d1a0:	83 c9 ff             	or     $0xffffffff,%ecx
    d1a3:	4c 89 f2             	mov    %r14,%rdx
    d1a6:	48 89 de             	mov    %rbx,%rsi
    d1a9:	48 89 df             	mov    %rbx,%rdi
    d1ac:	e8 8f cc ff ff       	callq  9e40 <add_sub_mpi>
    d1b1:	85 c0                	test   %eax,%eax
    d1b3:	75 15                	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d1b5:	83 c9 ff             	or     $0xffffffff,%ecx
    d1b8:	4c 89 e2             	mov    %r12,%rdx
    d1bb:	48 89 ee             	mov    %rbp,%rsi
    d1be:	48 89 ef             	mov    %rbp,%rdi
    d1c1:	e8 7a cc ff ff       	callq  9e40 <add_sub_mpi>
    d1c6:	85 c0                	test   %eax,%eax
    d1c8:	74 6d                	je     d237 <mbedtls_mpi_inv_mod+0x6b7>
    d1ca:	4d 89 f3             	mov    %r14,%r11
    d1cd:	49 89 e9             	mov    %rbp,%r9
    d1d0:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    d1d5:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    d1da:	4d 89 e2             	mov    %r12,%r10
    d1dd:	49 89 d8             	mov    %rbx,%r8
    d1e0:	e9 eb fb ff ff       	jmpq   cdd0 <mbedtls_mpi_inv_mod+0x250>
    d1e5:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    d1ea:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    d1ef:	4c 89 ce             	mov    %r9,%rsi
    d1f2:	e8 a9 c8 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    d1f7:	83 c9 ff             	or     $0xffffffff,%ecx
    d1fa:	85 c0                	test   %eax,%eax
    d1fc:	78 8c                	js     d18a <mbedtls_mpi_inv_mod+0x60a>
    d1fe:	4c 89 ca             	mov    %r9,%rdx
    d201:	48 89 fe             	mov    %rdi,%rsi
    d204:	e8 37 cc ff ff       	callq  9e40 <add_sub_mpi>
    d209:	85 c0                	test   %eax,%eax
    d20b:	75 bd                	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d20d:	83 c9 ff             	or     $0xffffffff,%ecx
    d210:	48 89 da             	mov    %rbx,%rdx
    d213:	4c 89 f6             	mov    %r14,%rsi
    d216:	4c 89 f7             	mov    %r14,%rdi
    d219:	e8 22 cc ff ff       	callq  9e40 <add_sub_mpi>
    d21e:	85 c0                	test   %eax,%eax
    d220:	75 a8                	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d222:	83 c9 ff             	or     $0xffffffff,%ecx
    d225:	48 89 ea             	mov    %rbp,%rdx
    d228:	4c 89 e6             	mov    %r12,%rsi
    d22b:	4c 89 e7             	mov    %r12,%rdi
    d22e:	e8 0d cc ff ff       	callq  9e40 <add_sub_mpi>
    d233:	85 c0                	test   %eax,%eax
    d235:	75 93                	jne    d1ca <mbedtls_mpi_inv_mod+0x64a>
    d237:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    d23c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    d241:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
    d248:	00 00 00 00 00 
    d24d:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
    d254:	01 00 00 00 
    d258:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    d25d:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
    d264:	00 01 00 00 00 
    d269:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    d270:	00 
    d271:	e8 2a c8 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    d276:	85 c0                	test   %eax,%eax
    d278:	0f 85 58 fd ff ff    	jne    cfd6 <mbedtls_mpi_inv_mod+0x456>
    d27e:	4d 89 e2             	mov    %r12,%r10
    d281:	49 89 d8             	mov    %rbx,%r8
    d284:	4d 89 f3             	mov    %r14,%r11
    d287:	49 89 e9             	mov    %rbp,%r9
    d28a:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
    d28f:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    d294:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
    d299:	4c 89 c5             	mov    %r8,%rbp
    d29c:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    d2a1:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
    d2a6:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    d2ab:	eb 1b                	jmp    d2c8 <mbedtls_mpi_inv_mod+0x748>
    d2ad:	b9 01 00 00 00       	mov    $0x1,%ecx
    d2b2:	48 89 da             	mov    %rbx,%rdx
    d2b5:	48 89 ee             	mov    %rbp,%rsi
    d2b8:	48 89 ef             	mov    %rbp,%rdi
    d2bb:	e8 80 cb ff ff       	callq  9e40 <add_sub_mpi>
    d2c0:	85 c0                	test   %eax,%eax
    d2c2:	0f 85 dc 00 00 00    	jne    d3a4 <mbedtls_mpi_inv_mod+0x824>
    d2c8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    d2cd:	4c 89 e6             	mov    %r12,%rsi
    d2d0:	48 89 ef             	mov    %rbp,%rdi
    d2d3:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
    d2da:	00 00 00 00 00 
    d2df:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
    d2e6:	01 00 00 00 
    d2ea:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
    d2f1:	00 01 00 00 00 
    d2f6:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    d2fd:	00 
    d2fe:	e8 9d c7 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    d303:	85 c0                	test   %eax,%eax
    d305:	78 a6                	js     d2ad <mbedtls_mpi_inv_mod+0x72d>
    d307:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    d30c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    d311:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    d316:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    d31b:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
    d320:	48 89 fd             	mov    %rdi,%rbp
    d323:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    d328:	4d 89 dc             	mov    %r11,%r12
    d32b:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    d330:	eb 15                	jmp    d347 <mbedtls_mpi_inv_mod+0x7c7>
    d332:	83 c9 ff             	or     $0xffffffff,%ecx
    d335:	48 89 da             	mov    %rbx,%rdx
    d338:	48 89 ee             	mov    %rbp,%rsi
    d33b:	48 89 ef             	mov    %rbp,%rdi
    d33e:	e8 fd ca ff ff       	callq  9e40 <add_sub_mpi>
    d343:	85 c0                	test   %eax,%eax
    d345:	75 79                	jne    d3c0 <mbedtls_mpi_inv_mod+0x840>
    d347:	48 89 de             	mov    %rbx,%rsi
    d34a:	48 89 ef             	mov    %rbp,%rdi
    d34d:	e8 4e c7 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    d352:	85 c0                	test   %eax,%eax
    d354:	79 dc                	jns    d332 <mbedtls_mpi_inv_mod+0x7b2>
    d356:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    d35b:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    d360:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    d365:	48 89 fe             	mov    %rdi,%rsi
    d368:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    d36d:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    d372:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
    d377:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
    d37c:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    d381:	e8 ca c0 ff ff       	callq  9450 <mbedtls_mpi_copy>
    d386:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    d38b:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    d390:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    d395:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    d39a:	e9 31 fa ff ff       	jmpq   cdd0 <mbedtls_mpi_inv_mod+0x250>
    d39f:	e8 dc 5e ff ff       	callq  3280 <__stack_chk_fail@plt>
    d3a4:	49 89 e8             	mov    %rbp,%r8
    d3a7:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    d3ac:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    d3b1:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    d3b6:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    d3bb:	e9 10 fa ff ff       	jmpq   cdd0 <mbedtls_mpi_inv_mod+0x250>
    d3c0:	49 89 e8             	mov    %rbp,%r8
    d3c3:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    d3c8:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    d3cd:	4d 89 e3             	mov    %r12,%r11
    d3d0:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    d3d5:	e9 f6 f9 ff ff       	jmpq   cdd0 <mbedtls_mpi_inv_mod+0x250>
    d3da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000d3e0 <mbedtls_mpi_is_prime_ext>:
    d3e0:	f3 0f 1e fa          	endbr64 
    d3e4:	41 55                	push   %r13
    d3e6:	49 89 cd             	mov    %rcx,%r13
    d3e9:	41 54                	push   %r12
    d3eb:	49 89 d4             	mov    %rdx,%r12
    d3ee:	55                   	push   %rbp
    d3ef:	53                   	push   %rbx
    d3f0:	89 f3                	mov    %esi,%ebx
    d3f2:	48 83 ec 58          	sub    $0x58,%rsp
    d3f6:	4c 8b 57 10          	mov    0x10(%rdi),%r10
    d3fa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d401:	00 00 
    d403:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    d408:	31 c0                	xor    %eax,%eax
    d40a:	48 8b 47 08          	mov    0x8(%rdi),%rax
    d40e:	4c 8d 4c 24 20       	lea    0x20(%rsp),%r9
    d413:	48 89 e5             	mov    %rsp,%rbp
    d416:	4c 89 ce             	mov    %r9,%rsi
    d419:	48 89 ef             	mov    %rbp,%rdi
    d41c:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    d423:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    d428:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    d42d:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    d432:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    d439:	00 00 
    d43b:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
    d442:	00 
    d443:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
    d44a:	00 00 
    d44c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    d451:	e8 4a c6 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    d456:	85 c0                	test   %eax,%eax
    d458:	74 7e                	je     d4d8 <mbedtls_mpi_is_prime_ext+0xf8>
    d45a:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
    d461:	00 00 
    d463:	4c 89 ce             	mov    %r9,%rsi
    d466:	e8 35 c6 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    d46b:	85 c0                	test   %eax,%eax
    d46d:	74 69                	je     d4d8 <mbedtls_mpi_is_prime_ext+0xf8>
    d46f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
    d476:	00 00 
    d478:	4c 89 ce             	mov    %r9,%rsi
    d47b:	e8 20 c6 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    d480:	85 c0                	test   %eax,%eax
    d482:	74 4c                	je     d4d0 <mbedtls_mpi_is_prime_ext+0xf0>
    d484:	41 f6 02 01          	testb  $0x1,(%r10)
    d488:	74 4e                	je     d4d8 <mbedtls_mpi_is_prime_ext+0xf8>
    d48a:	e8 d1 e1 ff ff       	callq  b660 <mpi_check_small_factors.part.0>
    d48f:	85 c0                	test   %eax,%eax
    d491:	74 25                	je     d4b8 <mbedtls_mpi_is_prime_ext+0xd8>
    d493:	83 f8 01             	cmp    $0x1,%eax
    d496:	74 38                	je     d4d0 <mbedtls_mpi_is_prime_ext+0xf0>
    d498:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    d49d:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    d4a4:	00 00 
    d4a6:	75 37                	jne    d4df <mbedtls_mpi_is_prime_ext+0xff>
    d4a8:	48 83 c4 58          	add    $0x58,%rsp
    d4ac:	5b                   	pop    %rbx
    d4ad:	5d                   	pop    %rbp
    d4ae:	41 5c                	pop    %r12
    d4b0:	41 5d                	pop    %r13
    d4b2:	c3                   	retq   
    d4b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d4b8:	48 63 f3             	movslq %ebx,%rsi
    d4bb:	4c 89 e9             	mov    %r13,%rcx
    d4be:	4c 89 e2             	mov    %r12,%rdx
    d4c1:	48 89 ef             	mov    %rbp,%rdi
    d4c4:	e8 c7 f0 ff ff       	callq  c590 <mpi_miller_rabin>
    d4c9:	eb cd                	jmp    d498 <mbedtls_mpi_is_prime_ext+0xb8>
    d4cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d4d0:	31 c0                	xor    %eax,%eax
    d4d2:	eb c4                	jmp    d498 <mbedtls_mpi_is_prime_ext+0xb8>
    d4d4:	0f 1f 40 00          	nopl   0x0(%rax)
    d4d8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d4dd:	eb b9                	jmp    d498 <mbedtls_mpi_is_prime_ext+0xb8>
    d4df:	e8 9c 5d ff ff       	callq  3280 <__stack_chk_fail@plt>
    d4e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d4eb:	00 00 00 00 
    d4ef:	90                   	nop

000000000000d4f0 <mbedtls_mpi_gen_prime>:
    d4f0:	f3 0f 1e fa          	endbr64 
    d4f4:	41 57                	push   %r15
    d4f6:	41 56                	push   %r14
    d4f8:	41 55                	push   %r13
    d4fa:	41 54                	push   %r12
    d4fc:	55                   	push   %rbp
    d4fd:	53                   	push   %rbx
    d4fe:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    d505:	48 89 34 24          	mov    %rsi,(%rsp)
    d509:	89 54 24 14          	mov    %edx,0x14(%rsp)
    d50d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d514:	00 00 
    d516:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    d51b:	31 c0                	xor    %eax,%eax
    d51d:	48 8d 46 fd          	lea    -0x3(%rsi),%rax
    d521:	48 3d fd 1f 00 00    	cmp    $0x1ffd,%rax
    d527:	0f 87 3f 04 00 00    	ja     d96c <mbedtls_mpi_gen_prime+0x47c>
    d52d:	31 c0                	xor    %eax,%eax
    d52f:	40 f6 c6 3f          	test   $0x3f,%sil
    d533:	49 89 ff             	mov    %rdi,%r15
    d536:	48 89 cb             	mov    %rcx,%rbx
    d539:	0f 95 c0             	setne  %al
    d53c:	89 d7                	mov    %edx,%edi
    d53e:	48 89 f1             	mov    %rsi,%rcx
    d541:	48 c1 ee 06          	shr    $0x6,%rsi
    d545:	48 01 f0             	add    %rsi,%rax
    d548:	83 e7 02             	and    $0x2,%edi
    d54b:	4c 89 c5             	mov    %r8,%rbp
    d54e:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    d555:	00 
    d556:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    d55d:	00 00 
    d55f:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    d566:	00 00 
    d568:	0f 85 02 01 00 00    	jne    d670 <mbedtls_mpi_gen_prime+0x180>
    d56e:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%rsp)
    d575:	00 
    d576:	48 81 f9 13 05 00 00 	cmp    $0x513,%rcx
    d57d:	77 19                	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d57f:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%rsp)
    d586:	00 
    d587:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
    d58e:	0f 86 1c 03 00 00    	jbe    d8b0 <mbedtls_mpi_gen_prime+0x3c0>
    d594:	0f 1f 40 00          	nopl   0x0(%rax)
    d598:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
    d59f:	00 
    d5a0:	48 c1 e0 06          	shl    $0x6,%rax
    d5a4:	49 bd 84 64 de f9 33 	movabs $0xb504f333f9de6484,%r13
    d5ab:	f3 04 b5 
    d5ae:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    d5b3:	48 2b 04 24          	sub    (%rsp),%rax
    d5b7:	4d 8d 74 24 f8       	lea    -0x8(%r12),%r14
    d5bc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    d5c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d5c8:	48 89 e9             	mov    %rbp,%rcx
    d5cb:	48 89 da             	mov    %rbx,%rdx
    d5ce:	4c 89 e6             	mov    %r12,%rsi
    d5d1:	4c 89 ff             	mov    %r15,%rdi
    d5d4:	e8 47 ef ff ff       	callq  c520 <mbedtls_mpi_fill_random>
    d5d9:	85 c0                	test   %eax,%eax
    d5db:	75 51                	jne    d62e <mbedtls_mpi_gen_prime+0x13e>
    d5dd:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    d5e1:	4e 39 2c 37          	cmp    %r13,(%rdi,%r14,1)
    d5e5:	76 e1                	jbe    d5c8 <mbedtls_mpi_gen_prime+0xd8>
    d5e7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    d5ec:	48 39 0c 24          	cmp    %rcx,(%rsp)
    d5f0:	73 0d                	jae    d5ff <mbedtls_mpi_gen_prime+0x10f>
    d5f2:	49 8b 77 08          	mov    0x8(%r15),%rsi
    d5f6:	48 85 f6             	test   %rsi,%rsi
    d5f9:	0f 85 21 01 00 00    	jne    d720 <mbedtls_mpi_gen_prime+0x230>
    d5ff:	48 8b 07             	mov    (%rdi),%rax
    d602:	48 89 c2             	mov    %rax,%rdx
    d605:	48 83 ca 01          	or     $0x1,%rdx
    d609:	48 89 17             	mov    %rdx,(%rdi)
    d60c:	f6 44 24 14 01       	testb  $0x1,0x14(%rsp)
    d611:	0f 85 21 01 00 00    	jne    d738 <mbedtls_mpi_gen_prime+0x248>
    d617:	8b 74 24 10          	mov    0x10(%rsp),%esi
    d61b:	48 89 e9             	mov    %rbp,%rcx
    d61e:	48 89 da             	mov    %rbx,%rdx
    d621:	4c 89 ff             	mov    %r15,%rdi
    d624:	e8 b7 fd ff ff       	callq  d3e0 <mbedtls_mpi_is_prime_ext>
    d629:	83 f8 f2             	cmp    $0xfffffff2,%eax
    d62c:	74 9a                	je     d5c8 <mbedtls_mpi_gen_prime+0xd8>
    d62e:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    d633:	4c 89 e7             	mov    %r12,%rdi
    d636:	89 04 24             	mov    %eax,(%rsp)
    d639:	e8 82 bb ff ff       	callq  91c0 <mbedtls_mpi_free>
    d63e:	8b 04 24             	mov    (%rsp),%eax
    d641:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
    d646:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    d64d:	00 00 
    d64f:	0f 85 21 03 00 00    	jne    d976 <mbedtls_mpi_gen_prime+0x486>
    d655:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    d65c:	5b                   	pop    %rbx
    d65d:	5d                   	pop    %rbp
    d65e:	41 5c                	pop    %r12
    d660:	41 5d                	pop    %r13
    d662:	41 5e                	pop    %r14
    d664:	41 5f                	pop    %r15
    d666:	c3                   	retq   
    d667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d66e:	00 00 
    d670:	48 8b 0c 24          	mov    (%rsp),%rcx
    d674:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
    d67b:	00 
    d67c:	48 81 f9 a9 05 00 00 	cmp    $0x5a9,%rcx
    d683:	0f 87 0f ff ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d689:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%rsp)
    d690:	00 
    d691:	48 81 f9 7d 04 00 00 	cmp    $0x47d,%rcx
    d698:	0f 87 fa fe ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d69e:	c7 44 24 10 06 00 00 	movl   $0x6,0x10(%rsp)
    d6a5:	00 
    d6a6:	48 81 f9 e7 03 00 00 	cmp    $0x3e7,%rcx
    d6ad:	0f 87 e5 fe ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d6b3:	c7 44 24 10 07 00 00 	movl   $0x7,0x10(%rsp)
    d6ba:	00 
    d6bb:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
    d6c2:	0f 87 d0 fe ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d6c8:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
    d6cf:	00 
    d6d0:	48 81 f9 ed 02 00 00 	cmp    $0x2ed,%rcx
    d6d7:	0f 87 bb fe ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d6dd:	c7 44 24 10 0d 00 00 	movl   $0xd,0x10(%rsp)
    d6e4:	00 
    d6e5:	48 81 f9 f3 01 00 00 	cmp    $0x1f3,%rcx
    d6ec:	0f 87 a6 fe ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d6f2:	c7 44 24 10 1c 00 00 	movl   $0x1c,0x10(%rsp)
    d6f9:	00 
    d6fa:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
    d701:	0f 87 91 fe ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d707:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
    d70e:	19 c9                	sbb    %ecx,%ecx
    d710:	83 e1 0b             	and    $0xb,%ecx
    d713:	83 c1 28             	add    $0x28,%ecx
    d716:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    d71a:	e9 79 fe ff ff       	jmpq   d598 <mbedtls_mpi_gen_prime+0xa8>
    d71f:	90                   	nop
    d720:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    d725:	e8 66 12 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    d72a:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    d72e:	e9 cc fe ff ff       	jmpq   d5ff <mbedtls_mpi_gen_prime+0x10f>
    d733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d738:	48 83 c8 03          	or     $0x3,%rax
    d73c:	ba 03 00 00 00       	mov    $0x3,%edx
    d741:	4c 89 fe             	mov    %r15,%rsi
    d744:	48 89 07             	mov    %rax,(%rdi)
    d747:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    d74c:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    d751:	e8 3a da ff ff       	callq  b190 <mbedtls_mpi_mod_int>
    d756:	85 c0                	test   %eax,%eax
    d758:	0f 85 d5 fe ff ff    	jne    d633 <mbedtls_mpi_gen_prime+0x143>
    d75e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    d763:	48 85 c0             	test   %rax,%rax
    d766:	0f 84 9b 01 00 00    	je     d907 <mbedtls_mpi_gen_prime+0x417>
    d76c:	48 83 f8 01          	cmp    $0x1,%rax
    d770:	0f 84 eb 01 00 00    	je     d961 <mbedtls_mpi_gen_prime+0x471>
    d776:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    d77b:	4c 89 fe             	mov    %r15,%rsi
    d77e:	4c 89 e7             	mov    %r12,%rdi
    d781:	e8 ca bc ff ff       	callq  9450 <mbedtls_mpi_copy>
    d786:	85 c0                	test   %eax,%eax
    d788:	0f 85 a5 fe ff ff    	jne    d633 <mbedtls_mpi_gen_prime+0x143>
    d78e:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    d793:	48 85 f6             	test   %rsi,%rsi
    d796:	0f 85 b1 01 00 00    	jne    d94d <mbedtls_mpi_gen_prime+0x45d>
    d79c:	48 63 44 24 10       	movslq 0x10(%rsp),%rax
    d7a1:	48 89 04 24          	mov    %rax,(%rsp)
    d7a5:	e9 8d 00 00 00       	jmpq   d837 <mbedtls_mpi_gen_prime+0x347>
    d7aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d7b0:	83 f8 f2             	cmp    $0xfffffff2,%eax
    d7b3:	0f 85 7a fe ff ff    	jne    d633 <mbedtls_mpi_gen_prime+0x143>
    d7b9:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
    d7be:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
    d7c3:	4c 89 fe             	mov    %r15,%rsi
    d7c6:	4c 89 ff             	mov    %r15,%rdi
    d7c9:	b9 01 00 00 00       	mov    $0x1,%ecx
    d7ce:	4c 89 ea             	mov    %r13,%rdx
    d7d1:	48 c7 44 24 70 0c 00 	movq   $0xc,0x70(%rsp)
    d7d8:	00 00 
    d7da:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    d7e1:	00 
    d7e2:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
    d7e9:	00 00 
    d7eb:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
    d7f0:	e8 4b c6 ff ff       	callq  9e40 <add_sub_mpi>
    d7f5:	85 c0                	test   %eax,%eax
    d7f7:	0f 85 36 fe ff ff    	jne    d633 <mbedtls_mpi_gen_prime+0x143>
    d7fd:	b9 01 00 00 00       	mov    $0x1,%ecx
    d802:	4c 89 ea             	mov    %r13,%rdx
    d805:	4c 89 e6             	mov    %r12,%rsi
    d808:	4c 89 e7             	mov    %r12,%rdi
    d80b:	48 c7 44 24 70 06 00 	movq   $0x6,0x70(%rsp)
    d812:	00 00 
    d814:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    d81b:	00 
    d81c:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
    d823:	00 00 
    d825:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
    d82a:	e8 11 c6 ff ff       	callq  9e40 <add_sub_mpi>
    d82f:	85 c0                	test   %eax,%eax
    d831:	0f 85 fc fd ff ff    	jne    d633 <mbedtls_mpi_gen_prime+0x143>
    d837:	49 8b 47 10          	mov    0x10(%r15),%rax
    d83b:	f6 00 01             	testb  $0x1,(%rax)
    d83e:	0f 84 75 ff ff ff    	je     d7b9 <mbedtls_mpi_gen_prime+0x2c9>
    d844:	4c 89 ff             	mov    %r15,%rdi
    d847:	e8 14 de ff ff       	callq  b660 <mpi_check_small_factors.part.0>
    d84c:	85 c0                	test   %eax,%eax
    d84e:	0f 85 5c ff ff ff    	jne    d7b0 <mbedtls_mpi_gen_prime+0x2c0>
    d854:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    d859:	f6 00 01             	testb  $0x1,(%rax)
    d85c:	0f 84 57 ff ff ff    	je     d7b9 <mbedtls_mpi_gen_prime+0x2c9>
    d862:	4c 89 e7             	mov    %r12,%rdi
    d865:	e8 f6 dd ff ff       	callq  b660 <mpi_check_small_factors.part.0>
    d86a:	85 c0                	test   %eax,%eax
    d86c:	0f 85 3e ff ff ff    	jne    d7b0 <mbedtls_mpi_gen_prime+0x2c0>
    d872:	48 8b 34 24          	mov    (%rsp),%rsi
    d876:	48 89 e9             	mov    %rbp,%rcx
    d879:	48 89 da             	mov    %rbx,%rdx
    d87c:	4c 89 ff             	mov    %r15,%rdi
    d87f:	e8 0c ed ff ff       	callq  c590 <mpi_miller_rabin>
    d884:	85 c0                	test   %eax,%eax
    d886:	0f 85 24 ff ff ff    	jne    d7b0 <mbedtls_mpi_gen_prime+0x2c0>
    d88c:	48 8b 34 24          	mov    (%rsp),%rsi
    d890:	48 89 e9             	mov    %rbp,%rcx
    d893:	48 89 da             	mov    %rbx,%rdx
    d896:	4c 89 e7             	mov    %r12,%rdi
    d899:	e8 f2 ec ff ff       	callq  c590 <mpi_miller_rabin>
    d89e:	85 c0                	test   %eax,%eax
    d8a0:	0f 85 0a ff ff ff    	jne    d7b0 <mbedtls_mpi_gen_prime+0x2c0>
    d8a6:	e9 88 fd ff ff       	jmpq   d633 <mbedtls_mpi_gen_prime+0x143>
    d8ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d8b0:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
    d8b7:	00 
    d8b8:	48 81 f9 89 02 00 00 	cmp    $0x289,%rcx
    d8bf:	0f 87 d3 fc ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d8c5:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
    d8cc:	00 
    d8cd:	48 81 f9 5d 01 00 00 	cmp    $0x15d,%rcx
    d8d4:	0f 87 be fc ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d8da:	c7 44 24 10 0c 00 00 	movl   $0xc,0x10(%rsp)
    d8e1:	00 
    d8e2:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
    d8e9:	0f 87 a9 fc ff ff    	ja     d598 <mbedtls_mpi_gen_prime+0xa8>
    d8ef:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
    d8f6:	19 c9                	sbb    %ecx,%ecx
    d8f8:	83 e1 09             	and    $0x9,%ecx
    d8fb:	83 c1 12             	add    $0x12,%ecx
    d8fe:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    d902:	e9 91 fc ff ff       	jmpq   d598 <mbedtls_mpi_gen_prime+0xa8>
    d907:	48 c7 44 24 70 08 00 	movq   $0x8,0x70(%rsp)
    d90e:	00 00 
    d910:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
    d915:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
    d91a:	4c 89 fe             	mov    %r15,%rsi
    d91d:	4c 89 ff             	mov    %r15,%rdi
    d920:	b9 01 00 00 00       	mov    $0x1,%ecx
    d925:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    d92c:	00 
    d92d:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
    d934:	00 00 
    d936:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    d93b:	e8 00 c5 ff ff       	callq  9e40 <add_sub_mpi>
    d940:	85 c0                	test   %eax,%eax
    d942:	0f 84 2e fe ff ff    	je     d776 <mbedtls_mpi_gen_prime+0x286>
    d948:	e9 e6 fc ff ff       	jmpq   d633 <mbedtls_mpi_gen_prime+0x143>
    d94d:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    d952:	ba 01 00 00 00       	mov    $0x1,%edx
    d957:	e8 34 10 00 00       	callq  e990 <mbedtls_mpi_core_shift_r>
    d95c:	e9 3b fe ff ff       	jmpq   d79c <mbedtls_mpi_gen_prime+0x2ac>
    d961:	48 c7 44 24 70 04 00 	movq   $0x4,0x70(%rsp)
    d968:	00 00 
    d96a:	eb a4                	jmp    d910 <mbedtls_mpi_gen_prime+0x420>
    d96c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    d971:	e9 cb fc ff ff       	jmpq   d641 <mbedtls_mpi_gen_prime+0x151>
    d976:	e8 05 59 ff ff       	callq  3280 <__stack_chk_fail@plt>
    d97b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d980 <mbedtls_mpi_self_test>:
    d980:	f3 0f 1e fa          	endbr64 
    d984:	41 57                	push   %r15
    d986:	48 8d 15 83 ae 00 00 	lea    0xae83(%rip),%rdx        # 18810 <K+0x1b0>
    d98d:	be 10 00 00 00       	mov    $0x10,%esi
    d992:	41 56                	push   %r14
    d994:	41 55                	push   %r13
    d996:	41 54                	push   %r12
    d998:	55                   	push   %rbp
    d999:	53                   	push   %rbx
    d99a:	89 fb                	mov    %edi,%ebx
    d99c:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    d9a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d9aa:	00 00 
    d9ac:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    d9b3:	00 
    d9b4:	31 c0                	xor    %eax,%eax
    d9b6:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    d9bb:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    d9c2:	00 
    d9c3:	48 89 ef             	mov    %rbp,%rdi
    d9c6:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    d9cd:	00 
    d9ce:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    d9d5:	00 00 
    d9d7:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    d9de:	00 00 
    d9e0:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    d9e7:	00 00 
    d9e9:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    d9f0:	00 00 
    d9f2:	c7 44 24 70 01 00 00 	movl   $0x1,0x70(%rsp)
    d9f9:	00 
    d9fa:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    da01:	00 00 
    da03:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
    da0a:	00 00 00 00 00 
    da0f:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    da16:	01 00 00 00 
    da1a:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
    da21:	00 00 00 00 00 
    da26:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    da2d:	00 00 00 00 00 
    da32:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
    da39:	01 00 00 00 
    da3d:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
    da44:	00 00 00 00 00 
    da49:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
    da50:	00 00 00 00 00 
    da55:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
    da5c:	01 00 00 00 
    da60:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
    da67:	00 00 00 00 00 
    da6c:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
    da73:	00 00 00 00 00 
    da78:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
    da7f:	01 00 00 00 
    da83:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
    da8a:	00 00 00 00 00 
    da8f:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
    da96:	00 00 00 00 00 
    da9b:	e8 f0 c7 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    daa0:	85 c0                	test   %eax,%eax
    daa2:	0f 84 b8 00 00 00    	je     db60 <mbedtls_mpi_self_test+0x1e0>
    daa8:	41 89 c7             	mov    %eax,%r15d
    daab:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
    dab0:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
    dab5:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
    dabc:	00 
    dabd:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
    dac4:	00 
    dac5:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    dacc:	00 
    dacd:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    dad4:	00 
    dad5:	85 db                	test   %ebx,%ebx
    dad7:	0f 85 d4 00 00 00    	jne    dbb1 <mbedtls_mpi_self_test+0x231>
    dadd:	48 89 ef             	mov    %rbp,%rdi
    dae0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    dae5:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    daea:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    daef:	e8 cc b6 ff ff       	callq  91c0 <mbedtls_mpi_free>
    daf4:	4c 89 e7             	mov    %r12,%rdi
    daf7:	e8 c4 b6 ff ff       	callq  91c0 <mbedtls_mpi_free>
    dafc:	4c 89 ef             	mov    %r13,%rdi
    daff:	e8 bc b6 ff ff       	callq  91c0 <mbedtls_mpi_free>
    db04:	4c 89 f7             	mov    %r14,%rdi
    db07:	e8 b4 b6 ff ff       	callq  91c0 <mbedtls_mpi_free>
    db0c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    db11:	4c 89 d7             	mov    %r10,%rdi
    db14:	e8 a7 b6 ff ff       	callq  91c0 <mbedtls_mpi_free>
    db19:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    db1e:	4c 89 cf             	mov    %r9,%rdi
    db21:	e8 9a b6 ff ff       	callq  91c0 <mbedtls_mpi_free>
    db26:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    db2b:	4c 89 df             	mov    %r11,%rdi
    db2e:	e8 8d b6 ff ff       	callq  91c0 <mbedtls_mpi_free>
    db33:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    db3a:	00 
    db3b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    db42:	00 00 
    db44:	0f 85 f1 08 00 00    	jne    e43b <mbedtls_mpi_self_test+0xabb>
    db4a:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    db51:	44 89 f8             	mov    %r15d,%eax
    db54:	5b                   	pop    %rbx
    db55:	5d                   	pop    %rbp
    db56:	41 5c                	pop    %r12
    db58:	41 5d                	pop    %r13
    db5a:	41 5e                	pop    %r14
    db5c:	41 5f                	pop    %r15
    db5e:	c3                   	retq   
    db5f:	90                   	nop
    db60:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
    db65:	be 10 00 00 00       	mov    $0x10,%esi
    db6a:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
    db6f:	48 8d 15 22 ad 00 00 	lea    0xad22(%rip),%rdx        # 18898 <K+0x238>
    db76:	4c 89 e7             	mov    %r12,%rdi
    db79:	e8 12 c7 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    db7e:	41 89 c7             	mov    %eax,%r15d
    db81:	85 c0                	test   %eax,%eax
    db83:	0f 84 a7 00 00 00    	je     dc30 <mbedtls_mpi_self_test+0x2b0>
    db89:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
    db90:	00 
    db91:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
    db98:	00 
    db99:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    dba0:	00 
    dba1:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    dba8:	00 
    dba9:	85 db                	test   %ebx,%ebx
    dbab:	0f 84 2c ff ff ff    	je     dadd <mbedtls_mpi_self_test+0x15d>
    dbb1:	44 89 fa             	mov    %r15d,%edx
    dbb4:	48 8d 35 ad ae 00 00 	lea    0xaead(%rip),%rsi        # 18a68 <K+0x408>
    dbbb:	bf 01 00 00 00       	mov    $0x1,%edi
    dbc0:	31 c0                	xor    %eax,%eax
    dbc2:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    dbc7:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    dbcc:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    dbd1:	e8 7a 57 ff ff       	callq  3350 <__printf_chk@plt>
    dbd6:	48 89 ef             	mov    %rbp,%rdi
    dbd9:	e8 e2 b5 ff ff       	callq  91c0 <mbedtls_mpi_free>
    dbde:	4c 89 e7             	mov    %r12,%rdi
    dbe1:	e8 da b5 ff ff       	callq  91c0 <mbedtls_mpi_free>
    dbe6:	4c 89 ef             	mov    %r13,%rdi
    dbe9:	e8 d2 b5 ff ff       	callq  91c0 <mbedtls_mpi_free>
    dbee:	4c 89 f7             	mov    %r14,%rdi
    dbf1:	e8 ca b5 ff ff       	callq  91c0 <mbedtls_mpi_free>
    dbf6:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    dbfb:	4c 89 d7             	mov    %r10,%rdi
    dbfe:	e8 bd b5 ff ff       	callq  91c0 <mbedtls_mpi_free>
    dc03:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    dc08:	4c 89 cf             	mov    %r9,%rdi
    dc0b:	e8 b0 b5 ff ff       	callq  91c0 <mbedtls_mpi_free>
    dc10:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    dc15:	4c 89 df             	mov    %r11,%rdi
    dc18:	e8 a3 b5 ff ff       	callq  91c0 <mbedtls_mpi_free>
    dc1d:	bf 0a 00 00 00       	mov    $0xa,%edi
    dc22:	e8 e9 55 ff ff       	callq  3210 <putchar@plt>
    dc27:	e9 07 ff ff ff       	jmpq   db33 <mbedtls_mpi_self_test+0x1b3>
    dc2c:	0f 1f 40 00          	nopl   0x0(%rax)
    dc30:	48 8d 15 e9 ac 00 00 	lea    0xace9(%rip),%rdx        # 18920 <K+0x2c0>
    dc37:	be 10 00 00 00       	mov    $0x10,%esi
    dc3c:	4c 89 ef             	mov    %r13,%rdi
    dc3f:	e8 4c c6 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    dc44:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
    dc4b:	00 
    dc4c:	41 89 c7             	mov    %eax,%r15d
    dc4f:	85 c0                	test   %eax,%eax
    dc51:	74 1d                	je     dc70 <mbedtls_mpi_self_test+0x2f0>
    dc53:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
    dc5a:	00 
    dc5b:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    dc62:	00 
    dc63:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    dc6a:	00 
    dc6b:	e9 65 fe ff ff       	jmpq   dad5 <mbedtls_mpi_self_test+0x155>
    dc70:	4c 89 ea             	mov    %r13,%rdx
    dc73:	48 89 ee             	mov    %rbp,%rsi
    dc76:	4c 89 f7             	mov    %r14,%rdi
    dc79:	e8 62 c3 ff ff       	callq  9fe0 <mbedtls_mpi_mul_mpi>
    dc7e:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
    dc85:	00 
    dc86:	41 89 c7             	mov    %eax,%r15d
    dc89:	85 c0                	test   %eax,%eax
    dc8b:	0f 85 cf 03 00 00    	jne    e060 <mbedtls_mpi_self_test+0x6e0>
    dc91:	4c 89 cf             	mov    %r9,%rdi
    dc94:	be 10 00 00 00       	mov    $0x10,%esi
    dc99:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    dc9e:	48 8d 15 e3 ac 00 00 	lea    0xace3(%rip),%rdx        # 18988 <K+0x328>
    dca5:	e8 e6 c5 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    dcaa:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    dcaf:	85 c0                	test   %eax,%eax
    dcb1:	41 89 c7             	mov    %eax,%r15d
    dcb4:	0f 85 a6 03 00 00    	jne    e060 <mbedtls_mpi_self_test+0x6e0>
    dcba:	85 db                	test   %ebx,%ebx
    dcbc:	0f 85 c6 03 00 00    	jne    e088 <mbedtls_mpi_self_test+0x708>
    dcc2:	4c 89 ce             	mov    %r9,%rsi
    dcc5:	4c 89 f7             	mov    %r14,%rdi
    dcc8:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    dccd:	e8 ce bd ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    dcd2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    dcd7:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    dcde:	00 
    dcdf:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    dce6:	00 
    dce7:	85 c0                	test   %eax,%eax
    dce9:	0f 85 21 04 00 00    	jne    e110 <mbedtls_mpi_self_test+0x790>
    dcef:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    dcf6:	00 
    dcf7:	4c 89 e9             	mov    %r13,%rcx
    dcfa:	48 89 ea             	mov    %rbp,%rdx
    dcfd:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    dd02:	4c 89 d6             	mov    %r10,%rsi
    dd05:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    dd0a:	e8 f1 c9 ff ff       	callq  a700 <mbedtls_mpi_div_mpi>
    dd0f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    dd14:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    dd19:	85 c0                	test   %eax,%eax
    dd1b:	41 89 c7             	mov    %eax,%r15d
    dd1e:	0f 85 54 03 00 00    	jne    e078 <mbedtls_mpi_self_test+0x6f8>
    dd24:	4c 89 cf             	mov    %r9,%rdi
    dd27:	be 10 00 00 00       	mov    $0x10,%esi
    dd2c:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    dd31:	48 8d 15 20 ae 00 00 	lea    0xae20(%rip),%rdx        # 18b58 <K+0x4f8>
    dd38:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    dd3d:	e8 4e c5 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    dd42:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    dd47:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    dd4c:	85 c0                	test   %eax,%eax
    dd4e:	41 89 c7             	mov    %eax,%r15d
    dd51:	0f 85 21 03 00 00    	jne    e078 <mbedtls_mpi_self_test+0x6f8>
    dd57:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    dd5e:	00 
    dd5f:	be 10 00 00 00       	mov    $0x10,%esi
    dd64:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    dd69:	48 8d 15 10 ae 00 00 	lea    0xae10(%rip),%rdx        # 18b80 <K+0x520>
    dd70:	4c 89 df             	mov    %r11,%rdi
    dd73:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    dd78:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    dd7d:	e8 0e c5 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    dd82:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    dd87:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    dd8c:	85 c0                	test   %eax,%eax
    dd8e:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    dd93:	0f 85 08 04 00 00    	jne    e1a1 <mbedtls_mpi_self_test+0x821>
    dd99:	4c 89 ce             	mov    %r9,%rsi
    dd9c:	4c 89 f7             	mov    %r14,%rdi
    dd9f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    dda4:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    dda9:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    ddae:	e8 ed bc ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    ddb3:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    ddb8:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    ddbd:	85 c0                	test   %eax,%eax
    ddbf:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    ddc4:	0f 85 46 03 00 00    	jne    e110 <mbedtls_mpi_self_test+0x790>
    ddca:	4c 89 de             	mov    %r11,%rsi
    ddcd:	4c 89 d7             	mov    %r10,%rdi
    ddd0:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    ddd5:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    ddda:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    dddf:	e8 bc bc ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    dde4:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    dde9:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    ddee:	85 c0                	test   %eax,%eax
    ddf0:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    ddf5:	0f 85 15 03 00 00    	jne    e110 <mbedtls_mpi_self_test+0x790>
    ddfb:	45 31 c0             	xor    %r8d,%r8d
    ddfe:	4c 89 e9             	mov    %r13,%rcx
    de01:	4c 89 e2             	mov    %r12,%rdx
    de04:	48 89 ee             	mov    %rbp,%rsi
    de07:	4c 89 f7             	mov    %r14,%rdi
    de0a:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    de0f:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    de14:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    de19:	e8 e2 d8 ff ff       	callq  b700 <mbedtls_mpi_exp_mod>
    de1e:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    de23:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    de28:	85 c0                	test   %eax,%eax
    de2a:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    de2f:	41 89 c7             	mov    %eax,%r15d
    de32:	0f 85 a5 fc ff ff    	jne    dadd <mbedtls_mpi_self_test+0x15d>
    de38:	4c 89 cf             	mov    %r9,%rdi
    de3b:	be 10 00 00 00       	mov    $0x10,%esi
    de40:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    de45:	48 8d 15 ac ac 00 00 	lea    0xacac(%rip),%rdx        # 18af8 <K+0x498>
    de4c:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    de51:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    de56:	e8 35 c4 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    de5b:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    de60:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    de65:	85 c0                	test   %eax,%eax
    de67:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    de6c:	41 89 c7             	mov    %eax,%r15d
    de6f:	0f 85 68 fc ff ff    	jne    dadd <mbedtls_mpi_self_test+0x15d>
    de75:	4c 89 ce             	mov    %r9,%rsi
    de78:	4c 89 f7             	mov    %r14,%rdi
    de7b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    de80:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    de85:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    de8a:	e8 11 bc ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    de8f:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    de94:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    de99:	85 c0                	test   %eax,%eax
    de9b:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    dea0:	0f 85 6a 02 00 00    	jne    e110 <mbedtls_mpi_self_test+0x790>
    dea6:	4c 89 ea             	mov    %r13,%rdx
    dea9:	48 89 ee             	mov    %rbp,%rsi
    deac:	4c 89 f7             	mov    %r14,%rdi
    deaf:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    deb4:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    deb9:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    debe:	e8 bd ec ff ff       	callq  cb80 <mbedtls_mpi_inv_mod>
    dec3:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    dec8:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    decd:	85 c0                	test   %eax,%eax
    decf:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    ded4:	41 89 c7             	mov    %eax,%r15d
    ded7:	0f 85 00 fc ff ff    	jne    dadd <mbedtls_mpi_self_test+0x15d>
    dedd:	4c 89 cf             	mov    %r9,%rdi
    dee0:	be 10 00 00 00       	mov    $0x10,%esi
    dee5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    deea:	48 8d 15 9f ab 00 00 	lea    0xab9f(%rip),%rdx        # 18a90 <K+0x430>
    def1:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    def6:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    defb:	e8 90 c3 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    df00:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    df05:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    df0a:	85 c0                	test   %eax,%eax
    df0c:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    df11:	41 89 c0             	mov    %eax,%r8d
    df14:	0f 85 39 05 00 00    	jne    e453 <mbedtls_mpi_self_test+0xad3>
    df1a:	4c 89 ce             	mov    %r9,%rsi
    df1d:	4c 89 f7             	mov    %r14,%rdi
    df20:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    df25:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    df2a:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    df2f:	e8 6c bb ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    df34:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    df39:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    df3e:	85 c0                	test   %eax,%eax
    df40:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    df45:	0f 85 c5 01 00 00    	jne    e110 <mbedtls_mpi_self_test+0x790>
    df4b:	48 8d 05 8e ac 00 00 	lea    0xac8e(%rip),%rax        # 18be0 <gcd_pairs>
    df52:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
    df59:	00 
    df5a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    df5f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    df64:	4c 89 f7             	mov    %r14,%rdi
    df67:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
    df6c:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    df71:	48 63 30             	movslq (%rax),%rsi
    df74:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    df79:	e8 42 b6 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    df7e:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    df83:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    df88:	85 c0                	test   %eax,%eax
    df8a:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    df8f:	41 89 c7             	mov    %eax,%r15d
    df92:	0f 85 3d fb ff ff    	jne    dad5 <mbedtls_mpi_self_test+0x155>
    df98:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    df9d:	4c 89 d7             	mov    %r10,%rdi
    dfa0:	48 63 70 04          	movslq 0x4(%rax),%rsi
    dfa4:	e8 17 b6 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    dfa9:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    dfae:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    dfb3:	85 c0                	test   %eax,%eax
    dfb5:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    dfba:	41 89 c7             	mov    %eax,%r15d
    dfbd:	0f 85 12 fb ff ff    	jne    dad5 <mbedtls_mpi_self_test+0x155>
    dfc3:	4c 89 d2             	mov    %r10,%rdx
    dfc6:	4c 89 f6             	mov    %r14,%rsi
    dfc9:	48 89 ef             	mov    %rbp,%rdi
    dfcc:	e8 0f e2 ff ff       	callq  c1e0 <mbedtls_mpi_gcd>
    dfd1:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    dfd6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    dfdb:	85 c0                	test   %eax,%eax
    dfdd:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    dfe2:	41 89 c7             	mov    %eax,%r15d
    dfe5:	0f 85 ea fa ff ff    	jne    dad5 <mbedtls_mpi_self_test+0x155>
    dfeb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    dff0:	48 89 ef             	mov    %rbp,%rdi
    dff3:	48 63 70 08          	movslq 0x8(%rax),%rsi
    dff7:	e8 94 bb ff ff       	callq  9b90 <mbedtls_mpi_cmp_int>
    dffc:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    e001:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    e006:	85 c0                	test   %eax,%eax
    e008:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    e00d:	41 89 c7             	mov    %eax,%r15d
    e010:	0f 85 45 04 00 00    	jne    e45b <mbedtls_mpi_self_test+0xadb>
    e016:	83 44 24 08 01       	addl   $0x1,0x8(%rsp)
    e01b:	8b 44 24 08          	mov    0x8(%rsp),%eax
    e01f:	48 83 44 24 10 0c    	addq   $0xc,0x10(%rsp)
    e025:	83 f8 03             	cmp    $0x3,%eax
    e028:	0f 85 31 ff ff ff    	jne    df5f <mbedtls_mpi_self_test+0x5df>
    e02e:	85 db                	test   %ebx,%ebx
    e030:	0f 84 a7 fa ff ff    	je     dadd <mbedtls_mpi_self_test+0x15d>
    e036:	48 8d 3d 91 a3 00 00 	lea    0xa391(%rip),%rdi        # 183ce <bits+0x34e>
    e03d:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e042:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    e047:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    e04c:	e8 cf 51 ff ff       	callq  3220 <puts@plt>
    e051:	e9 80 fb ff ff       	jmpq   dbd6 <mbedtls_mpi_self_test+0x256>
    e056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e05d:	00 00 00 
    e060:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    e067:	00 
    e068:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    e06f:	00 
    e070:	e9 60 fa ff ff       	jmpq   dad5 <mbedtls_mpi_self_test+0x155>
    e075:	0f 1f 00             	nopl   (%rax)
    e078:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    e07f:	00 
    e080:	e9 58 fa ff ff       	jmpq   dadd <mbedtls_mpi_self_test+0x15d>
    e085:	0f 1f 00             	nopl   (%rax)
    e088:	48 8d 35 e7 a6 00 00 	lea    0xa6e7(%rip),%rsi        # 18776 <K+0x116>
    e08f:	bf 01 00 00 00       	mov    $0x1,%edi
    e094:	31 c0                	xor    %eax,%eax
    e096:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e09b:	e8 b0 52 ff ff       	callq  3350 <__printf_chk@plt>
    e0a0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e0a5:	4c 89 f7             	mov    %r14,%rdi
    e0a8:	4c 89 ce             	mov    %r9,%rsi
    e0ab:	e8 f0 b9 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    e0b0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e0b5:	85 c0                	test   %eax,%eax
    e0b7:	75 62                	jne    e11b <mbedtls_mpi_self_test+0x79b>
    e0b9:	48 8d 3d 0e a3 00 00 	lea    0xa30e(%rip),%rdi        # 183ce <bits+0x34e>
    e0c0:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    e0c5:	e8 56 51 ff ff       	callq  3220 <puts@plt>
    e0ca:	48 89 ea             	mov    %rbp,%rdx
    e0cd:	4c 89 e9             	mov    %r13,%rcx
    e0d0:	4c 89 f7             	mov    %r14,%rdi
    e0d3:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    e0da:	00 
    e0db:	4c 89 d6             	mov    %r10,%rsi
    e0de:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    e0e3:	e8 18 c6 ff ff       	callq  a700 <mbedtls_mpi_div_mpi>
    e0e8:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    e0ed:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    e0f2:	85 c0                	test   %eax,%eax
    e0f4:	89 c2                	mov    %eax,%edx
    e0f6:	74 6d                	je     e165 <mbedtls_mpi_self_test+0x7e5>
    e0f8:	41 89 c7             	mov    %eax,%r15d
    e0fb:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    e102:	00 
    e103:	e9 ac fa ff ff       	jmpq   dbb4 <mbedtls_mpi_self_test+0x234>
    e108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e10f:	00 
    e110:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    e116:	e9 c2 f9 ff ff       	jmpq   dadd <mbedtls_mpi_self_test+0x15d>
    e11b:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    e122:	00 
    e123:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    e12a:	00 
    e12b:	48 8d 3d 70 a3 00 00 	lea    0xa370(%rip),%rdi        # 184a2 <bits+0x422>
    e132:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e137:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    e13d:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    e142:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    e147:	e8 d4 50 ff ff       	callq  3220 <puts@plt>
    e14c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    e151:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    e156:	ba 01 00 00 00       	mov    $0x1,%edx
    e15b:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e160:	e9 4f fa ff ff       	jmpq   dbb4 <mbedtls_mpi_self_test+0x234>
    e165:	4c 89 cf             	mov    %r9,%rdi
    e168:	be 10 00 00 00       	mov    $0x10,%esi
    e16d:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    e172:	48 8d 15 df a9 00 00 	lea    0xa9df(%rip),%rdx        # 18b58 <K+0x4f8>
    e179:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e17e:	e8 0d c1 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    e183:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e188:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    e18d:	85 c0                	test   %eax,%eax
    e18f:	74 18                	je     e1a9 <mbedtls_mpi_self_test+0x829>
    e191:	41 89 c7             	mov    %eax,%r15d
    e194:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    e19b:	00 
    e19c:	e9 10 fa ff ff       	jmpq   dbb1 <mbedtls_mpi_self_test+0x231>
    e1a1:	41 89 c7             	mov    %eax,%r15d
    e1a4:	e9 2c f9 ff ff       	jmpq   dad5 <mbedtls_mpi_self_test+0x155>
    e1a9:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    e1b0:	00 
    e1b1:	be 10 00 00 00       	mov    $0x10,%esi
    e1b6:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    e1bb:	48 8d 15 be a9 00 00 	lea    0xa9be(%rip),%rdx        # 18b80 <K+0x520>
    e1c2:	4c 89 df             	mov    %r11,%rdi
    e1c5:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    e1ca:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    e1cf:	e8 bc c0 ff ff       	callq  a290 <mbedtls_mpi_read_string>
    e1d4:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    e1d9:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    e1de:	85 c0                	test   %eax,%eax
    e1e0:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    e1e5:	75 ba                	jne    e1a1 <mbedtls_mpi_self_test+0x821>
    e1e7:	48 8d 35 a2 a5 00 00 	lea    0xa5a2(%rip),%rsi        # 18790 <K+0x130>
    e1ee:	bf 01 00 00 00       	mov    $0x1,%edi
    e1f3:	31 c0                	xor    %eax,%eax
    e1f5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e1fa:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    e1ff:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e204:	e8 47 51 ff ff       	callq  3350 <__printf_chk@plt>
    e209:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e20e:	4c 89 f7             	mov    %r14,%rdi
    e211:	4c 89 ce             	mov    %r9,%rsi
    e214:	e8 87 b8 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    e219:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e21e:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    e223:	85 c0                	test   %eax,%eax
    e225:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e22a:	0f 85 fb fe ff ff    	jne    e12b <mbedtls_mpi_self_test+0x7ab>
    e230:	4c 89 de             	mov    %r11,%rsi
    e233:	4c 89 d7             	mov    %r10,%rdi
    e236:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    e23b:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    e240:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    e245:	e8 56 b8 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    e24a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    e24f:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    e254:	85 c0                	test   %eax,%eax
    e256:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    e25b:	0f 85 ca fe ff ff    	jne    e12b <mbedtls_mpi_self_test+0x7ab>
    e261:	48 8d 3d 66 a1 00 00 	lea    0xa166(%rip),%rdi        # 183ce <bits+0x34e>
    e268:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e26d:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    e272:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    e277:	e8 a4 4f ff ff       	callq  3220 <puts@plt>
    e27c:	45 31 c0             	xor    %r8d,%r8d
    e27f:	4c 89 e9             	mov    %r13,%rcx
    e282:	4c 89 e2             	mov    %r12,%rdx
    e285:	48 89 ee             	mov    %rbp,%rsi
    e288:	4c 89 f7             	mov    %r14,%rdi
    e28b:	e8 70 d4 ff ff       	callq  b700 <mbedtls_mpi_exp_mod>
    e290:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    e295:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    e29a:	85 c0                	test   %eax,%eax
    e29c:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e2a1:	41 89 c0             	mov    %eax,%r8d
    e2a4:	0f 85 96 01 00 00    	jne    e440 <mbedtls_mpi_self_test+0xac0>
    e2aa:	4c 89 cf             	mov    %r9,%rdi
    e2ad:	be 10 00 00 00       	mov    $0x10,%esi
    e2b2:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e2b7:	48 8d 15 3a a8 00 00 	lea    0xa83a(%rip),%rdx        # 18af8 <K+0x498>
    e2be:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    e2c3:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e2c8:	e8 c3 bf ff ff       	callq  a290 <mbedtls_mpi_read_string>
    e2cd:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e2d2:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    e2d7:	85 c0                	test   %eax,%eax
    e2d9:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e2de:	41 89 c0             	mov    %eax,%r8d
    e2e1:	0f 85 64 01 00 00    	jne    e44b <mbedtls_mpi_self_test+0xacb>
    e2e7:	48 8d 35 01 a5 00 00 	lea    0xa501(%rip),%rsi        # 187ef <K+0x18f>
    e2ee:	bf 01 00 00 00       	mov    $0x1,%edi
    e2f3:	31 c0                	xor    %eax,%eax
    e2f5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e2fa:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    e2ff:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e304:	e8 47 50 ff ff       	callq  3350 <__printf_chk@plt>
    e309:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e30e:	4c 89 f7             	mov    %r14,%rdi
    e311:	4c 89 ce             	mov    %r9,%rsi
    e314:	e8 87 b7 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    e319:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e31e:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    e323:	85 c0                	test   %eax,%eax
    e325:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e32a:	0f 85 fb fd ff ff    	jne    e12b <mbedtls_mpi_self_test+0x7ab>
    e330:	48 8d 3d 97 a0 00 00 	lea    0xa097(%rip),%rdi        # 183ce <bits+0x34e>
    e337:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e33c:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    e341:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    e346:	e8 d5 4e ff ff       	callq  3220 <puts@plt>
    e34b:	4c 89 ea             	mov    %r13,%rdx
    e34e:	48 89 ee             	mov    %rbp,%rsi
    e351:	4c 89 f7             	mov    %r14,%rdi
    e354:	e8 27 e8 ff ff       	callq  cb80 <mbedtls_mpi_inv_mod>
    e359:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    e35e:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    e363:	85 c0                	test   %eax,%eax
    e365:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e36a:	41 89 c0             	mov    %eax,%r8d
    e36d:	0f 85 cd 00 00 00    	jne    e440 <mbedtls_mpi_self_test+0xac0>
    e373:	4c 89 cf             	mov    %r9,%rdi
    e376:	be 10 00 00 00       	mov    $0x10,%esi
    e37b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e380:	48 8d 15 09 a7 00 00 	lea    0xa709(%rip),%rdx        # 18a90 <K+0x430>
    e387:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    e38c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e391:	e8 fa be ff ff       	callq  a290 <mbedtls_mpi_read_string>
    e396:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e39b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    e3a0:	85 c0                	test   %eax,%eax
    e3a2:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e3a7:	41 89 c0             	mov    %eax,%r8d
    e3aa:	0f 85 9b 00 00 00    	jne    e44b <mbedtls_mpi_self_test+0xacb>
    e3b0:	48 8d 35 f3 a3 00 00 	lea    0xa3f3(%rip),%rsi        # 187aa <K+0x14a>
    e3b7:	bf 01 00 00 00       	mov    $0x1,%edi
    e3bc:	31 c0                	xor    %eax,%eax
    e3be:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e3c3:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    e3c8:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e3cd:	e8 7e 4f ff ff       	callq  3350 <__printf_chk@plt>
    e3d2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e3d7:	4c 89 f7             	mov    %r14,%rdi
    e3da:	4c 89 ce             	mov    %r9,%rsi
    e3dd:	e8 be b6 ff ff       	callq  9aa0 <mbedtls_mpi_cmp_mpi>
    e3e2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e3e7:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    e3ec:	85 c0                	test   %eax,%eax
    e3ee:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e3f3:	0f 85 32 fd ff ff    	jne    e12b <mbedtls_mpi_self_test+0x7ab>
    e3f9:	48 8d 3d ce 9f 00 00 	lea    0x9fce(%rip),%rdi        # 183ce <bits+0x34e>
    e400:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e405:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    e40a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    e40f:	e8 0c 4e ff ff       	callq  3220 <puts@plt>
    e414:	48 8d 35 b7 a3 00 00 	lea    0xa3b7(%rip),%rsi        # 187d2 <K+0x172>
    e41b:	bf 01 00 00 00       	mov    $0x1,%edi
    e420:	31 c0                	xor    %eax,%eax
    e422:	e8 29 4f ff ff       	callq  3350 <__printf_chk@plt>
    e427:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    e42c:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    e431:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    e436:	e9 10 fb ff ff       	jmpq   df4b <mbedtls_mpi_self_test+0x5cb>
    e43b:	e8 40 4e ff ff       	callq  3280 <__stack_chk_fail@plt>
    e440:	45 89 c7             	mov    %r8d,%r15d
    e443:	44 89 c2             	mov    %r8d,%edx
    e446:	e9 69 f7 ff ff       	jmpq   dbb4 <mbedtls_mpi_self_test+0x234>
    e44b:	45 89 c7             	mov    %r8d,%r15d
    e44e:	e9 5e f7 ff ff       	jmpq   dbb1 <mbedtls_mpi_self_test+0x231>
    e453:	45 89 c7             	mov    %r8d,%r15d
    e456:	e9 82 f6 ff ff       	jmpq   dadd <mbedtls_mpi_self_test+0x15d>
    e45b:	85 db                	test   %ebx,%ebx
    e45d:	0f 84 ad fc ff ff    	je     e110 <mbedtls_mpi_self_test+0x790>
    e463:	8b 54 24 08          	mov    0x8(%rsp),%edx
    e467:	bf 01 00 00 00       	mov    $0x1,%edi
    e46c:	31 c0                	xor    %eax,%eax
    e46e:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
    e473:	48 8d 35 4a a3 00 00 	lea    0xa34a(%rip),%rsi        # 187c4 <K+0x164>
    e47a:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    e47f:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    e485:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    e48a:	e8 c1 4e ff ff       	callq  3350 <__printf_chk@plt>
    e48f:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    e494:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    e499:	ba 01 00 00 00       	mov    $0x1,%edx
    e49e:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    e4a3:	e9 0c f7 ff ff       	jmpq   dbb4 <mbedtls_mpi_self_test+0x234>
    e4a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e4af:	00 

000000000000e4b0 <mbedtls_mpi_core_bitlen.part.0>:
    e4b0:	48 83 ee 01          	sub    $0x1,%rsi
    e4b4:	74 3a                	je     e4f0 <mbedtls_mpi_core_bitlen.part.0+0x40>
    e4b6:	4c 8b 04 f7          	mov    (%rdi,%rsi,8),%r8
    e4ba:	4d 85 c0             	test   %r8,%r8
    e4bd:	74 f1                	je     e4b0 <mbedtls_mpi_core_bitlen.part.0>
    e4bf:	48 8d 46 01          	lea    0x1(%rsi),%rax
    e4c3:	48 c1 e0 06          	shl    $0x6,%rax
    e4c7:	48 b9 00 00 00 00 00 	movabs $0x8000000000000000,%rcx
    e4ce:	00 00 80 
    e4d1:	31 d2                	xor    %edx,%edx
    e4d3:	eb 10                	jmp    e4e5 <mbedtls_mpi_core_bitlen.part.0+0x35>
    e4d5:	0f 1f 00             	nopl   (%rax)
    e4d8:	48 83 c2 01          	add    $0x1,%rdx
    e4dc:	48 d1 e9             	shr    %rcx
    e4df:	48 83 fa 40          	cmp    $0x40,%rdx
    e4e3:	74 05                	je     e4ea <mbedtls_mpi_core_bitlen.part.0+0x3a>
    e4e5:	4c 85 c1             	test   %r8,%rcx
    e4e8:	74 ee                	je     e4d8 <mbedtls_mpi_core_bitlen.part.0+0x28>
    e4ea:	48 29 d0             	sub    %rdx,%rax
    e4ed:	c3                   	retq   
    e4ee:	66 90                	xchg   %ax,%ax
    e4f0:	4c 8b 07             	mov    (%rdi),%r8
    e4f3:	b8 40 00 00 00       	mov    $0x40,%eax
    e4f8:	eb cd                	jmp    e4c7 <mbedtls_mpi_core_bitlen.part.0+0x17>
    e4fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000e500 <mbedtls_mpi_core_bigendian_to_host.part.0>:
    e500:	48 8d 44 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rax
    e505:	48 39 c7             	cmp    %rax,%rdi
    e508:	77 27                	ja     e531 <mbedtls_mpi_core_bigendian_to_host.part.0+0x31>
    e50a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e510:	48 8b 17             	mov    (%rdi),%rdx
    e513:	48 8b 08             	mov    (%rax),%rcx
    e516:	48 83 c7 08          	add    $0x8,%rdi
    e51a:	48 83 e8 08          	sub    $0x8,%rax
    e51e:	48 0f ca             	bswap  %rdx
    e521:	48 0f c9             	bswap  %rcx
    e524:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
    e528:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e52c:	48 39 c7             	cmp    %rax,%rdi
    e52f:	76 df                	jbe    e510 <mbedtls_mpi_core_bigendian_to_host.part.0+0x10>
    e531:	c3                   	retq   
    e532:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e539:	00 00 00 00 
    e53d:	0f 1f 00             	nopl   (%rax)

000000000000e540 <mbedtls_mpi_core_clz>:
    e540:	f3 0f 1e fa          	endbr64 
    e544:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
    e54b:	00 00 80 
    e54e:	31 c0                	xor    %eax,%eax
    e550:	eb 13                	jmp    e565 <mbedtls_mpi_core_clz+0x25>
    e552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e558:	48 83 c0 01          	add    $0x1,%rax
    e55c:	48 d1 ea             	shr    %rdx
    e55f:	48 83 f8 40          	cmp    $0x40,%rax
    e563:	74 05                	je     e56a <mbedtls_mpi_core_clz+0x2a>
    e565:	48 85 d7             	test   %rdx,%rdi
    e568:	74 ee                	je     e558 <mbedtls_mpi_core_clz+0x18>
    e56a:	c3                   	retq   
    e56b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000e570 <mbedtls_mpi_core_bitlen>:
    e570:	f3 0f 1e fa          	endbr64 
    e574:	48 85 f6             	test   %rsi,%rsi
    e577:	74 07                	je     e580 <mbedtls_mpi_core_bitlen+0x10>
    e579:	e9 32 ff ff ff       	jmpq   e4b0 <mbedtls_mpi_core_bitlen.part.0>
    e57e:	66 90                	xchg   %ax,%ax
    e580:	31 c0                	xor    %eax,%eax
    e582:	c3                   	retq   
    e583:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e58a:	00 00 00 00 
    e58e:	66 90                	xchg   %ax,%ax

000000000000e590 <mbedtls_mpi_core_bigendian_to_host>:
    e590:	f3 0f 1e fa          	endbr64 
    e594:	48 85 f6             	test   %rsi,%rsi
    e597:	74 07                	je     e5a0 <mbedtls_mpi_core_bigendian_to_host+0x10>
    e599:	e9 62 ff ff ff       	jmpq   e500 <mbedtls_mpi_core_bigendian_to_host.part.0>
    e59e:	66 90                	xchg   %ax,%ax
    e5a0:	c3                   	retq   
    e5a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e5a8:	00 00 00 00 
    e5ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e5b0 <mbedtls_mpi_core_uint_le_mpi>:
    e5b0:	f3 0f 1e fa          	endbr64 
    e5b4:	41 54                	push   %r12
    e5b6:	49 89 d4             	mov    %rdx,%r12
    e5b9:	55                   	push   %rbp
    e5ba:	48 89 f5             	mov    %rsi,%rbp
    e5bd:	48 89 fe             	mov    %rdi,%rsi
    e5c0:	53                   	push   %rbx
    e5c1:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    e5c5:	e8 f6 10 00 00       	callq  f6c0 <mbedtls_ct_mpi_uint_lt>
    e5ca:	83 f0 01             	xor    $0x1,%eax
    e5cd:	89 c3                	mov    %eax,%ebx
    e5cf:	49 83 fc 01          	cmp    $0x1,%r12
    e5d3:	76 2b                	jbe    e600 <mbedtls_mpi_core_uint_le_mpi+0x50>
    e5d5:	48 8d 45 08          	lea    0x8(%rbp),%rax
    e5d9:	4a 8d 54 e5 00       	lea    0x0(%rbp,%r12,8),%rdx
    e5de:	31 ff                	xor    %edi,%edi
    e5e0:	48 0b 38             	or     (%rax),%rdi
    e5e3:	48 83 c0 08          	add    $0x8,%rax
    e5e7:	48 39 d0             	cmp    %rdx,%rax
    e5ea:	75 f4                	jne    e5e0 <mbedtls_mpi_core_uint_le_mpi+0x30>
    e5ec:	e8 6f 10 00 00       	callq  f660 <mbedtls_ct_mpi_uint_mask>
    e5f1:	83 e0 01             	and    $0x1,%eax
    e5f4:	09 d8                	or     %ebx,%eax
    e5f6:	5b                   	pop    %rbx
    e5f7:	5d                   	pop    %rbp
    e5f8:	41 5c                	pop    %r12
    e5fa:	c3                   	retq   
    e5fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e600:	31 ff                	xor    %edi,%edi
    e602:	e8 59 10 00 00       	callq  f660 <mbedtls_ct_mpi_uint_mask>
    e607:	83 e0 01             	and    $0x1,%eax
    e60a:	09 d8                	or     %ebx,%eax
    e60c:	5b                   	pop    %rbx
    e60d:	5d                   	pop    %rbp
    e60e:	41 5c                	pop    %r12
    e610:	c3                   	retq   
    e611:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e618:	00 00 00 00 
    e61c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e620 <mbedtls_mpi_core_cond_assign>:
    e620:	f3 0f 1e fa          	endbr64 
    e624:	49 89 f8             	mov    %rdi,%r8
    e627:	48 89 d7             	mov    %rdx,%rdi
    e62a:	49 39 f0             	cmp    %rsi,%r8
    e62d:	74 11                	je     e640 <mbedtls_mpi_core_cond_assign+0x20>
    e62f:	48 89 f2             	mov    %rsi,%rdx
    e632:	0f b6 c9             	movzbl %cl,%ecx
    e635:	4c 89 c6             	mov    %r8,%rsi
    e638:	e9 c3 10 00 00       	jmpq   f700 <mbedtls_ct_mpi_uint_cond_assign>
    e63d:	0f 1f 00             	nopl   (%rax)
    e640:	c3                   	retq   
    e641:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e648:	00 00 00 00 
    e64c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e650 <mbedtls_mpi_core_cond_swap>:
    e650:	f3 0f 1e fa          	endbr64 
    e654:	48 39 f7             	cmp    %rsi,%rdi
    e657:	74 57                	je     e6b0 <mbedtls_mpi_core_cond_swap+0x60>
    e659:	41 54                	push   %r12
    e65b:	49 89 d4             	mov    %rdx,%r12
    e65e:	55                   	push   %rbp
    e65f:	48 89 fd             	mov    %rdi,%rbp
    e662:	0f b6 f9             	movzbl %cl,%edi
    e665:	53                   	push   %rbx
    e666:	48 89 f3             	mov    %rsi,%rbx
    e669:	e8 f2 0f 00 00       	callq  f660 <mbedtls_ct_mpi_uint_mask>
    e66e:	4d 85 e4             	test   %r12,%r12
    e671:	74 36                	je     e6a9 <mbedtls_mpi_core_cond_swap+0x59>
    e673:	31 ff                	xor    %edi,%edi
    e675:	0f 1f 00             	nopl   (%rax)
    e678:	48 8b 4c fd 00       	mov    0x0(%rbp,%rdi,8),%rcx
    e67d:	4c 8b 04 fb          	mov    (%rbx,%rdi,8),%r8
    e681:	49 31 c8             	xor    %rcx,%r8
    e684:	49 21 c0             	and    %rax,%r8
    e687:	49 31 c8             	xor    %rcx,%r8
    e68a:	4c 89 44 fd 00       	mov    %r8,0x0(%rbp,%rdi,8)
    e68f:	48 8b 34 fb          	mov    (%rbx,%rdi,8),%rsi
    e693:	48 31 f1             	xor    %rsi,%rcx
    e696:	48 21 c1             	and    %rax,%rcx
    e699:	48 31 f1             	xor    %rsi,%rcx
    e69c:	48 89 0c fb          	mov    %rcx,(%rbx,%rdi,8)
    e6a0:	48 83 c7 01          	add    $0x1,%rdi
    e6a4:	49 39 fc             	cmp    %rdi,%r12
    e6a7:	75 cf                	jne    e678 <mbedtls_mpi_core_cond_swap+0x28>
    e6a9:	5b                   	pop    %rbx
    e6aa:	5d                   	pop    %rbp
    e6ab:	41 5c                	pop    %r12
    e6ad:	c3                   	retq   
    e6ae:	66 90                	xchg   %ax,%ax
    e6b0:	c3                   	retq   
    e6b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e6b8:	00 00 00 00 
    e6bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e6c0 <mbedtls_mpi_core_read_le>:
    e6c0:	f3 0f 1e fa          	endbr64 
    e6c4:	55                   	push   %rbp
    e6c5:	31 c0                	xor    %eax,%eax
    e6c7:	48 89 d5             	mov    %rdx,%rbp
    e6ca:	48 89 ca             	mov    %rcx,%rdx
    e6cd:	53                   	push   %rbx
    e6ce:	48 83 ec 08          	sub    $0x8,%rsp
    e6d2:	f6 c1 07             	test   $0x7,%cl
    e6d5:	0f 95 c0             	setne  %al
    e6d8:	48 c1 ea 03          	shr    $0x3,%rdx
    e6dc:	48 01 d0             	add    %rdx,%rax
    e6df:	48 39 f0             	cmp    %rsi,%rax
    e6e2:	77 54                	ja     e738 <mbedtls_mpi_core_read_le+0x78>
    e6e4:	48 85 ff             	test   %rdi,%rdi
    e6e7:	74 46                	je     e72f <mbedtls_mpi_core_read_le+0x6f>
    e6e9:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
    e6f0:	00 
    e6f1:	31 f6                	xor    %esi,%esi
    e6f3:	48 89 cb             	mov    %rcx,%rbx
    e6f6:	e8 b5 4b ff ff       	callq  32b0 <memset@plt>
    e6fb:	48 89 c7             	mov    %rax,%rdi
    e6fe:	48 85 db             	test   %rbx,%rbx
    e701:	74 2c                	je     e72f <mbedtls_mpi_core_read_le+0x6f>
    e703:	31 c0                	xor    %eax,%eax
    e705:	0f 1f 00             	nopl   (%rax)
    e708:	0f b6 54 05 00       	movzbl 0x0(%rbp,%rax,1),%edx
    e70d:	48 89 c6             	mov    %rax,%rsi
    e710:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    e717:	00 
    e718:	48 83 c0 01          	add    $0x1,%rax
    e71c:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    e720:	83 e1 38             	and    $0x38,%ecx
    e723:	48 d3 e2             	shl    %cl,%rdx
    e726:	48 09 14 37          	or     %rdx,(%rdi,%rsi,1)
    e72a:	48 39 c3             	cmp    %rax,%rbx
    e72d:	75 d9                	jne    e708 <mbedtls_mpi_core_read_le+0x48>
    e72f:	31 c0                	xor    %eax,%eax
    e731:	48 83 c4 08          	add    $0x8,%rsp
    e735:	5b                   	pop    %rbx
    e736:	5d                   	pop    %rbp
    e737:	c3                   	retq   
    e738:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    e73d:	eb f2                	jmp    e731 <mbedtls_mpi_core_read_le+0x71>
    e73f:	90                   	nop

000000000000e740 <mbedtls_mpi_core_read_be>:
    e740:	f3 0f 1e fa          	endbr64 
    e744:	41 56                	push   %r14
    e746:	31 c0                	xor    %eax,%eax
    e748:	49 89 d6             	mov    %rdx,%r14
    e74b:	f6 c1 07             	test   $0x7,%cl
    e74e:	48 89 ca             	mov    %rcx,%rdx
    e751:	0f 95 c0             	setne  %al
    e754:	41 55                	push   %r13
    e756:	48 c1 ea 03          	shr    $0x3,%rdx
    e75a:	41 54                	push   %r12
    e75c:	48 01 d0             	add    %rdx,%rax
    e75f:	55                   	push   %rbp
    e760:	53                   	push   %rbx
    e761:	48 39 f0             	cmp    %rsi,%rax
    e764:	77 6a                	ja     e7d0 <mbedtls_mpi_core_read_be+0x90>
    e766:	48 89 f5             	mov    %rsi,%rbp
    e769:	31 c0                	xor    %eax,%eax
    e76b:	48 85 f6             	test   %rsi,%rsi
    e76e:	75 10                	jne    e780 <mbedtls_mpi_core_read_be+0x40>
    e770:	5b                   	pop    %rbx
    e771:	5d                   	pop    %rbp
    e772:	41 5c                	pop    %r12
    e774:	41 5d                	pop    %r13
    e776:	41 5e                	pop    %r14
    e778:	c3                   	retq   
    e779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e780:	48 8d 1c f5 00 00 00 	lea    0x0(,%rsi,8),%rbx
    e787:	00 
    e788:	49 89 cc             	mov    %rcx,%r12
    e78b:	31 f6                	xor    %esi,%esi
    e78d:	49 89 fd             	mov    %rdi,%r13
    e790:	48 89 da             	mov    %rbx,%rdx
    e793:	e8 18 4b ff ff       	callq  32b0 <memset@plt>
    e798:	4d 85 e4             	test   %r12,%r12
    e79b:	75 1b                	jne    e7b8 <mbedtls_mpi_core_read_be+0x78>
    e79d:	48 89 ee             	mov    %rbp,%rsi
    e7a0:	4c 89 ef             	mov    %r13,%rdi
    e7a3:	e8 58 fd ff ff       	callq  e500 <mbedtls_mpi_core_bigendian_to_host.part.0>
    e7a8:	5b                   	pop    %rbx
    e7a9:	31 c0                	xor    %eax,%eax
    e7ab:	5d                   	pop    %rbp
    e7ac:	41 5c                	pop    %r12
    e7ae:	41 5d                	pop    %r13
    e7b0:	41 5e                	pop    %r14
    e7b2:	c3                   	retq   
    e7b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e7b8:	4c 29 e3             	sub    %r12,%rbx
    e7bb:	4c 89 e2             	mov    %r12,%rdx
    e7be:	4c 89 f6             	mov    %r14,%rsi
    e7c1:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
    e7c6:	e8 55 4b ff ff       	callq  3320 <memcpy@plt>
    e7cb:	eb d0                	jmp    e79d <mbedtls_mpi_core_read_be+0x5d>
    e7cd:	0f 1f 00             	nopl   (%rax)
    e7d0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    e7d5:	eb 99                	jmp    e770 <mbedtls_mpi_core_read_be+0x30>
    e7d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e7de:	00 00 

000000000000e7e0 <mbedtls_mpi_core_write_le>:
    e7e0:	f3 0f 1e fa          	endbr64 
    e7e4:	48 c1 e6 03          	shl    $0x3,%rsi
    e7e8:	49 89 c9             	mov    %rcx,%r9
    e7eb:	48 39 ce             	cmp    %rcx,%rsi
    e7ee:	0f 82 8c 00 00 00    	jb     e880 <mbedtls_mpi_core_write_le+0xa0>
    e7f4:	76 4e                	jbe    e844 <mbedtls_mpi_core_write_le+0x64>
    e7f6:	48 89 c8             	mov    %rcx,%rax
    e7f9:	83 e1 07             	and    $0x7,%ecx
    e7fc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e800:	c1 e1 03             	shl    $0x3,%ecx
    e803:	48 8b 04 07          	mov    (%rdi,%rax,1),%rax
    e807:	48 d3 e8             	shr    %cl,%rax
    e80a:	84 c0                	test   %al,%al
    e80c:	0f 85 96 00 00 00    	jne    e8a8 <mbedtls_mpi_core_write_le+0xc8>
    e812:	4c 89 c8             	mov    %r9,%rax
    e815:	eb 24                	jmp    e83b <mbedtls_mpi_core_write_le+0x5b>
    e817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e81e:	00 00 
    e820:	49 89 c0             	mov    %rax,%r8
    e823:	89 c1                	mov    %eax,%ecx
    e825:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e829:	83 e1 07             	and    $0x7,%ecx
    e82c:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
    e830:	c1 e1 03             	shl    $0x3,%ecx
    e833:	49 d3 e8             	shr    %cl,%r8
    e836:	45 84 c0             	test   %r8b,%r8b
    e839:	75 6d                	jne    e8a8 <mbedtls_mpi_core_write_le+0xc8>
    e83b:	48 83 c0 01          	add    $0x1,%rax
    e83f:	48 39 c6             	cmp    %rax,%rsi
    e842:	75 dc                	jne    e820 <mbedtls_mpi_core_write_le+0x40>
    e844:	4d 89 ca             	mov    %r9,%r10
    e847:	4d 85 c9             	test   %r9,%r9
    e84a:	74 2c                	je     e878 <mbedtls_mpi_core_write_le+0x98>
    e84c:	31 c0                	xor    %eax,%eax
    e84e:	66 90                	xchg   %ax,%ax
    e850:	49 89 c0             	mov    %rax,%r8
    e853:	89 c1                	mov    %eax,%ecx
    e855:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e859:	83 e1 07             	and    $0x7,%ecx
    e85c:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
    e860:	c1 e1 03             	shl    $0x3,%ecx
    e863:	49 d3 e8             	shr    %cl,%r8
    e866:	44 88 04 02          	mov    %r8b,(%rdx,%rax,1)
    e86a:	48 83 c0 01          	add    $0x1,%rax
    e86e:	4c 39 d0             	cmp    %r10,%rax
    e871:	72 dd                	jb     e850 <mbedtls_mpi_core_write_le+0x70>
    e873:	4c 39 ce             	cmp    %r9,%rsi
    e876:	72 10                	jb     e888 <mbedtls_mpi_core_write_le+0xa8>
    e878:	31 c0                	xor    %eax,%eax
    e87a:	c3                   	retq   
    e87b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e880:	49 89 f2             	mov    %rsi,%r10
    e883:	48 85 f6             	test   %rsi,%rsi
    e886:	75 c4                	jne    e84c <mbedtls_mpi_core_write_le+0x6c>
    e888:	49 29 f1             	sub    %rsi,%r9
    e88b:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    e88f:	48 83 ec 08          	sub    $0x8,%rsp
    e893:	31 f6                	xor    %esi,%esi
    e895:	4c 89 ca             	mov    %r9,%rdx
    e898:	e8 13 4a ff ff       	callq  32b0 <memset@plt>
    e89d:	31 c0                	xor    %eax,%eax
    e89f:	48 83 c4 08          	add    $0x8,%rsp
    e8a3:	c3                   	retq   
    e8a4:	0f 1f 40 00          	nopl   0x0(%rax)
    e8a8:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    e8ad:	c3                   	retq   
    e8ae:	66 90                	xchg   %ax,%ax

000000000000e8b0 <mbedtls_mpi_core_write_be>:
    e8b0:	f3 0f 1e fa          	endbr64 
    e8b4:	41 54                	push   %r12
    e8b6:	55                   	push   %rbp
    e8b7:	48 8d 2c f5 00 00 00 	lea    0x0(,%rsi,8),%rbp
    e8be:	00 
    e8bf:	53                   	push   %rbx
    e8c0:	48 89 fb             	mov    %rdi,%rbx
    e8c3:	48 89 d7             	mov    %rdx,%rdi
    e8c6:	48 89 ca             	mov    %rcx,%rdx
    e8c9:	48 39 cd             	cmp    %rcx,%rbp
    e8cc:	0f 82 8e 00 00 00    	jb     e960 <mbedtls_mpi_core_write_be+0xb0>
    e8d2:	76 48                	jbe    e91c <mbedtls_mpi_core_write_be+0x6c>
    e8d4:	48 89 c8             	mov    %rcx,%rax
    e8d7:	83 e1 07             	and    $0x7,%ecx
    e8da:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e8de:	c1 e1 03             	shl    $0x3,%ecx
    e8e1:	48 8b 04 03          	mov    (%rbx,%rax,1),%rax
    e8e5:	48 d3 e8             	shr    %cl,%rax
    e8e8:	84 c0                	test   %al,%al
    e8ea:	0f 85 90 00 00 00    	jne    e980 <mbedtls_mpi_core_write_be+0xd0>
    e8f0:	48 89 d0             	mov    %rdx,%rax
    e8f3:	eb 1e                	jmp    e913 <mbedtls_mpi_core_write_be+0x63>
    e8f5:	0f 1f 00             	nopl   (%rax)
    e8f8:	48 89 c6             	mov    %rax,%rsi
    e8fb:	89 c1                	mov    %eax,%ecx
    e8fd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    e901:	83 e1 07             	and    $0x7,%ecx
    e904:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
    e908:	c1 e1 03             	shl    $0x3,%ecx
    e90b:	48 d3 ee             	shr    %cl,%rsi
    e90e:	40 84 f6             	test   %sil,%sil
    e911:	75 6d                	jne    e980 <mbedtls_mpi_core_write_be+0xd0>
    e913:	48 83 c0 01          	add    $0x1,%rax
    e917:	48 39 c5             	cmp    %rax,%rbp
    e91a:	75 dc                	jne    e8f8 <mbedtls_mpi_core_write_be+0x48>
    e91c:	48 8d 7c 17 ff       	lea    -0x1(%rdi,%rdx,1),%rdi
    e921:	31 c0                	xor    %eax,%eax
    e923:	48 85 d2             	test   %rdx,%rdx
    e926:	74 2f                	je     e957 <mbedtls_mpi_core_write_be+0xa7>
    e928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e92f:	00 
    e930:	48 89 c6             	mov    %rax,%rsi
    e933:	89 c1                	mov    %eax,%ecx
    e935:	48 83 c0 01          	add    $0x1,%rax
    e939:	48 83 ef 01          	sub    $0x1,%rdi
    e93d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    e941:	83 e1 07             	and    $0x7,%ecx
    e944:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
    e948:	c1 e1 03             	shl    $0x3,%ecx
    e94b:	48 d3 ee             	shr    %cl,%rsi
    e94e:	40 88 77 01          	mov    %sil,0x1(%rdi)
    e952:	48 39 c2             	cmp    %rax,%rdx
    e955:	75 d9                	jne    e930 <mbedtls_mpi_core_write_be+0x80>
    e957:	5b                   	pop    %rbx
    e958:	31 c0                	xor    %eax,%eax
    e95a:	5d                   	pop    %rbp
    e95b:	41 5c                	pop    %r12
    e95d:	c3                   	retq   
    e95e:	66 90                	xchg   %ax,%ax
    e960:	48 29 ea             	sub    %rbp,%rdx
    e963:	31 f6                	xor    %esi,%esi
    e965:	4c 8d 24 17          	lea    (%rdi,%rdx,1),%r12
    e969:	e8 42 49 ff ff       	callq  32b0 <memset@plt>
    e96e:	4c 89 e7             	mov    %r12,%rdi
    e971:	48 89 ea             	mov    %rbp,%rdx
    e974:	eb a6                	jmp    e91c <mbedtls_mpi_core_write_be+0x6c>
    e976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e97d:	00 00 00 
    e980:	5b                   	pop    %rbx
    e981:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    e986:	5d                   	pop    %rbp
    e987:	41 5c                	pop    %r12
    e989:	c3                   	retq   
    e98a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000e990 <mbedtls_mpi_core_shift_r>:
    e990:	f3 0f 1e fa          	endbr64 
    e994:	48 89 d1             	mov    %rdx,%rcx
    e997:	49 89 d0             	mov    %rdx,%r8
    e99a:	48 c1 e9 06          	shr    $0x6,%rcx
    e99e:	41 83 e0 3f          	and    $0x3f,%r8d
    e9a2:	48 39 f1             	cmp    %rsi,%rcx
    e9a5:	77 07                	ja     e9ae <mbedtls_mpi_core_shift_r+0x1e>
    e9a7:	75 17                	jne    e9c0 <mbedtls_mpi_core_shift_r+0x30>
    e9a9:	4d 85 c0             	test   %r8,%r8
    e9ac:	74 12                	je     e9c0 <mbedtls_mpi_core_shift_r+0x30>
    e9ae:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
    e9b5:	00 
    e9b6:	31 f6                	xor    %esi,%esi
    e9b8:	e9 f3 48 ff ff       	jmpq   32b0 <memset@plt>
    e9bd:	0f 1f 00             	nopl   (%rax)
    e9c0:	48 83 fa 3f          	cmp    $0x3f,%rdx
    e9c4:	0f 86 a6 00 00 00    	jbe    ea70 <mbedtls_mpi_core_shift_r+0xe0>
    e9ca:	49 89 f2             	mov    %rsi,%r10
    e9cd:	49 29 ca             	sub    %rcx,%r10
    e9d0:	74 27                	je     e9f9 <mbedtls_mpi_core_shift_r+0x69>
    e9d2:	48 8d 04 cf          	lea    (%rdi,%rcx,8),%rax
    e9d6:	48 f7 d9             	neg    %rcx
    e9d9:	4c 8d 0c f7          	lea    (%rdi,%rsi,8),%r9
    e9dd:	48 c1 e1 03          	shl    $0x3,%rcx
    e9e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e9e8:	48 8b 10             	mov    (%rax),%rdx
    e9eb:	48 83 c0 08          	add    $0x8,%rax
    e9ef:	48 89 54 08 f8       	mov    %rdx,-0x8(%rax,%rcx,1)
    e9f4:	4c 39 c8             	cmp    %r9,%rax
    e9f7:	75 ef                	jne    e9e8 <mbedtls_mpi_core_shift_r+0x58>
    e9f9:	4c 39 d6             	cmp    %r10,%rsi
    e9fc:	76 72                	jbe    ea70 <mbedtls_mpi_core_shift_r+0xe0>
    e9fe:	4a 8d 04 d7          	lea    (%rdi,%r10,8),%rax
    ea02:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
    ea06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ea0d:	00 00 00 
    ea10:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ea17:	48 83 c0 08          	add    $0x8,%rax
    ea1b:	48 39 c2             	cmp    %rax,%rdx
    ea1e:	75 f0                	jne    ea10 <mbedtls_mpi_core_shift_r+0x80>
    ea20:	4d 85 c0             	test   %r8,%r8
    ea23:	74 55                	je     ea7a <mbedtls_mpi_core_shift_r+0xea>
    ea25:	41 ba 40 00 00 00    	mov    $0x40,%r10d
    ea2b:	48 8d 54 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rdx
    ea30:	45 89 c3             	mov    %r8d,%r11d
    ea33:	31 f6                	xor    %esi,%esi
    ea35:	45 29 c2             	sub    %r8d,%r10d
    ea38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ea3f:	00 
    ea40:	48 8b 02             	mov    (%rdx),%rax
    ea43:	49 89 f1             	mov    %rsi,%r9
    ea46:	44 89 d1             	mov    %r10d,%ecx
    ea49:	49 89 d0             	mov    %rdx,%r8
    ea4c:	48 83 ea 08          	sub    $0x8,%rdx
    ea50:	48 89 c6             	mov    %rax,%rsi
    ea53:	48 d3 e6             	shl    %cl,%rsi
    ea56:	44 89 d9             	mov    %r11d,%ecx
    ea59:	48 d3 e8             	shr    %cl,%rax
    ea5c:	4c 09 c8             	or     %r9,%rax
    ea5f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    ea63:	49 39 f8             	cmp    %rdi,%r8
    ea66:	75 d8                	jne    ea40 <mbedtls_mpi_core_shift_r+0xb0>
    ea68:	c3                   	retq   
    ea69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ea70:	4d 85 c0             	test   %r8,%r8
    ea73:	74 05                	je     ea7a <mbedtls_mpi_core_shift_r+0xea>
    ea75:	48 85 f6             	test   %rsi,%rsi
    ea78:	75 ab                	jne    ea25 <mbedtls_mpi_core_shift_r+0x95>
    ea7a:	c3                   	retq   
    ea7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ea80 <mbedtls_mpi_core_add>:
    ea80:	f3 0f 1e fa          	endbr64 
    ea84:	48 85 c9             	test   %rcx,%rcx
    ea87:	74 37                	je     eac0 <mbedtls_mpi_core_add+0x40>
    ea89:	45 31 c0             	xor    %r8d,%r8d
    ea8c:	31 c0                	xor    %eax,%eax
    ea8e:	66 90                	xchg   %ax,%ax
    ea90:	45 31 d2             	xor    %r10d,%r10d
    ea93:	4a 03 04 c6          	add    (%rsi,%r8,8),%rax
    ea97:	41 0f 92 c2          	setb   %r10b
    ea9b:	4a 03 04 c2          	add    (%rdx,%r8,8),%rax
    ea9f:	49 89 c1             	mov    %rax,%r9
    eaa2:	4c 89 d0             	mov    %r10,%rax
    eaa5:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
    eaa9:	48 83 d0 00          	adc    $0x0,%rax
    eaad:	49 83 c0 01          	add    $0x1,%r8
    eab1:	4c 39 c1             	cmp    %r8,%rcx
    eab4:	75 da                	jne    ea90 <mbedtls_mpi_core_add+0x10>
    eab6:	c3                   	retq   
    eab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    eabe:	00 00 
    eac0:	31 c0                	xor    %eax,%eax
    eac2:	c3                   	retq   
    eac3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    eaca:	00 00 00 00 
    eace:	66 90                	xchg   %ax,%ax

000000000000ead0 <mbedtls_mpi_core_add_if>:
    ead0:	f3 0f 1e fa          	endbr64 
    ead4:	41 54                	push   %r12
    ead6:	49 89 f4             	mov    %rsi,%r12
    ead9:	55                   	push   %rbp
    eada:	48 89 d5             	mov    %rdx,%rbp
    eadd:	53                   	push   %rbx
    eade:	48 89 fb             	mov    %rdi,%rbx
    eae1:	89 cf                	mov    %ecx,%edi
    eae3:	e8 78 0b 00 00       	callq  f660 <mbedtls_ct_mpi_uint_mask>
    eae8:	48 85 ed             	test   %rbp,%rbp
    eaeb:	74 43                	je     eb30 <mbedtls_mpi_core_add_if+0x60>
    eaed:	48 89 c2             	mov    %rax,%rdx
    eaf0:	31 c9                	xor    %ecx,%ecx
    eaf2:	31 c0                	xor    %eax,%eax
    eaf4:	0f 1f 40 00          	nopl   0x0(%rax)
    eaf8:	49 8b 3c cc          	mov    (%r12,%rcx,8),%rdi
    eafc:	45 31 c0             	xor    %r8d,%r8d
    eaff:	48 21 d7             	and    %rdx,%rdi
    eb02:	48 03 04 cb          	add    (%rbx,%rcx,8),%rax
    eb06:	41 0f 92 c0          	setb   %r8b
    eb0a:	48 01 c7             	add    %rax,%rdi
    eb0d:	4c 89 c0             	mov    %r8,%rax
    eb10:	48 89 3c cb          	mov    %rdi,(%rbx,%rcx,8)
    eb14:	48 83 d0 00          	adc    $0x0,%rax
    eb18:	48 83 c1 01          	add    $0x1,%rcx
    eb1c:	48 39 cd             	cmp    %rcx,%rbp
    eb1f:	75 d7                	jne    eaf8 <mbedtls_mpi_core_add_if+0x28>
    eb21:	5b                   	pop    %rbx
    eb22:	5d                   	pop    %rbp
    eb23:	41 5c                	pop    %r12
    eb25:	c3                   	retq   
    eb26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    eb2d:	00 00 00 
    eb30:	5b                   	pop    %rbx
    eb31:	31 c0                	xor    %eax,%eax
    eb33:	5d                   	pop    %rbp
    eb34:	41 5c                	pop    %r12
    eb36:	c3                   	retq   
    eb37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    eb3e:	00 00 

000000000000eb40 <mbedtls_mpi_core_sub>:
    eb40:	f3 0f 1e fa          	endbr64 
    eb44:	48 85 c9             	test   %rcx,%rcx
    eb47:	74 3f                	je     eb88 <mbedtls_mpi_core_sub+0x48>
    eb49:	45 31 c9             	xor    %r9d,%r9d
    eb4c:	31 c0                	xor    %eax,%eax
    eb4e:	66 90                	xchg   %ax,%ax
    eb50:	4e 8b 04 ce          	mov    (%rsi,%r9,8),%r8
    eb54:	4e 8b 14 ca          	mov    (%rdx,%r9,8),%r10
    eb58:	45 31 db             	xor    %r11d,%r11d
    eb5b:	49 39 c0             	cmp    %rax,%r8
    eb5e:	41 0f 92 c3          	setb   %r11b
    eb62:	49 29 c0             	sub    %rax,%r8
    eb65:	31 c0                	xor    %eax,%eax
    eb67:	4d 39 c2             	cmp    %r8,%r10
    eb6a:	0f 97 c0             	seta   %al
    eb6d:	4d 29 d0             	sub    %r10,%r8
    eb70:	4e 89 04 cf          	mov    %r8,(%rdi,%r9,8)
    eb74:	49 83 c1 01          	add    $0x1,%r9
    eb78:	4c 01 d8             	add    %r11,%rax
    eb7b:	4c 39 c9             	cmp    %r9,%rcx
    eb7e:	75 d0                	jne    eb50 <mbedtls_mpi_core_sub+0x10>
    eb80:	c3                   	retq   
    eb81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eb88:	31 c0                	xor    %eax,%eax
    eb8a:	c3                   	retq   
    eb8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000eb90 <mbedtls_mpi_core_mla>:
    eb90:	f3 0f 1e fa          	endbr64 
    eb94:	49 89 f1             	mov    %rsi,%r9
    eb97:	49 89 cb             	mov    %rcx,%r11
    eb9a:	53                   	push   %rbx
    eb9b:	48 89 d6             	mov    %rdx,%rsi
    eb9e:	49 39 c9             	cmp    %rcx,%r9
    eba1:	4c 89 c3             	mov    %r8,%rbx
    eba4:	4d 0f 46 d9          	cmovbe %r9,%r11
    eba8:	4c 89 d9             	mov    %r11,%rcx
    ebab:	4d 29 d9             	sub    %r11,%r9
    ebae:	41 83 e3 07          	and    $0x7,%r11d
    ebb2:	48 c1 e9 03          	shr    $0x3,%rcx
    ebb6:	48 85 c9             	test   %rcx,%rcx
    ebb9:	0f 84 12 01 00 00    	je     ecd1 <mbedtls_mpi_core_mla+0x141>
    ebbf:	4c 8d 51 ff          	lea    -0x1(%rcx),%r10
    ebc3:	31 c9                	xor    %ecx,%ecx
    ebc5:	0f 1f 00             	nopl   (%rax)
    ebc8:	49 83 ea 01          	sub    $0x1,%r10
    ebcc:	4d 31 c0             	xor    %r8,%r8
    ebcf:	48 8b 06             	mov    (%rsi),%rax
    ebd2:	48 f7 e3             	mul    %rbx
    ebd5:	48 83 c6 08          	add    $0x8,%rsi
    ebd9:	48 01 c8             	add    %rcx,%rax
    ebdc:	4c 89 c1             	mov    %r8,%rcx
    ebdf:	48 83 d2 00          	adc    $0x0,%rdx
    ebe3:	90                   	nop
    ebe4:	48 01 07             	add    %rax,(%rdi)
    ebe7:	48 11 d1             	adc    %rdx,%rcx
    ebea:	48 83 c7 08          	add    $0x8,%rdi
    ebee:	48 8b 06             	mov    (%rsi),%rax
    ebf1:	48 f7 e3             	mul    %rbx
    ebf4:	48 83 c6 08          	add    $0x8,%rsi
    ebf8:	48 01 c8             	add    %rcx,%rax
    ebfb:	4c 89 c1             	mov    %r8,%rcx
    ebfe:	48 83 d2 00          	adc    $0x0,%rdx
    ec02:	90                   	nop
    ec03:	48 01 07             	add    %rax,(%rdi)
    ec06:	48 11 d1             	adc    %rdx,%rcx
    ec09:	48 83 c7 08          	add    $0x8,%rdi
    ec0d:	48 8b 06             	mov    (%rsi),%rax
    ec10:	48 f7 e3             	mul    %rbx
    ec13:	48 83 c6 08          	add    $0x8,%rsi
    ec17:	48 01 c8             	add    %rcx,%rax
    ec1a:	4c 89 c1             	mov    %r8,%rcx
    ec1d:	48 83 d2 00          	adc    $0x0,%rdx
    ec21:	90                   	nop
    ec22:	48 01 07             	add    %rax,(%rdi)
    ec25:	48 11 d1             	adc    %rdx,%rcx
    ec28:	48 83 c7 08          	add    $0x8,%rdi
    ec2c:	48 8b 06             	mov    (%rsi),%rax
    ec2f:	48 f7 e3             	mul    %rbx
    ec32:	48 83 c6 08          	add    $0x8,%rsi
    ec36:	48 01 c8             	add    %rcx,%rax
    ec39:	4c 89 c1             	mov    %r8,%rcx
    ec3c:	48 83 d2 00          	adc    $0x0,%rdx
    ec40:	90                   	nop
    ec41:	48 01 07             	add    %rax,(%rdi)
    ec44:	48 11 d1             	adc    %rdx,%rcx
    ec47:	48 83 c7 08          	add    $0x8,%rdi
    ec4b:	48 8b 06             	mov    (%rsi),%rax
    ec4e:	48 f7 e3             	mul    %rbx
    ec51:	48 83 c6 08          	add    $0x8,%rsi
    ec55:	48 01 c8             	add    %rcx,%rax
    ec58:	4c 89 c1             	mov    %r8,%rcx
    ec5b:	48 83 d2 00          	adc    $0x0,%rdx
    ec5f:	90                   	nop
    ec60:	48 01 07             	add    %rax,(%rdi)
    ec63:	48 11 d1             	adc    %rdx,%rcx
    ec66:	48 83 c7 08          	add    $0x8,%rdi
    ec6a:	48 8b 06             	mov    (%rsi),%rax
    ec6d:	48 f7 e3             	mul    %rbx
    ec70:	48 83 c6 08          	add    $0x8,%rsi
    ec74:	48 01 c8             	add    %rcx,%rax
    ec77:	4c 89 c1             	mov    %r8,%rcx
    ec7a:	48 83 d2 00          	adc    $0x0,%rdx
    ec7e:	90                   	nop
    ec7f:	48 01 07             	add    %rax,(%rdi)
    ec82:	48 11 d1             	adc    %rdx,%rcx
    ec85:	48 83 c7 08          	add    $0x8,%rdi
    ec89:	48 8b 06             	mov    (%rsi),%rax
    ec8c:	48 f7 e3             	mul    %rbx
    ec8f:	48 83 c6 08          	add    $0x8,%rsi
    ec93:	48 01 c8             	add    %rcx,%rax
    ec96:	4c 89 c1             	mov    %r8,%rcx
    ec99:	48 83 d2 00          	adc    $0x0,%rdx
    ec9d:	90                   	nop
    ec9e:	48 01 07             	add    %rax,(%rdi)
    eca1:	48 11 d1             	adc    %rdx,%rcx
    eca4:	48 83 c7 08          	add    $0x8,%rdi
    eca8:	48 8b 06             	mov    (%rsi),%rax
    ecab:	48 f7 e3             	mul    %rbx
    ecae:	48 83 c6 08          	add    $0x8,%rsi
    ecb2:	48 01 c8             	add    %rcx,%rax
    ecb5:	4c 89 c1             	mov    %r8,%rcx
    ecb8:	48 83 d2 00          	adc    $0x0,%rdx
    ecbc:	90                   	nop
    ecbd:	48 01 07             	add    %rax,(%rdi)
    ecc0:	48 11 d1             	adc    %rdx,%rcx
    ecc3:	48 83 c7 08          	add    $0x8,%rdi
    ecc7:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
    eccb:	0f 85 f7 fe ff ff    	jne    ebc8 <mbedtls_mpi_core_mla+0x38>
    ecd1:	4d 8d 53 ff          	lea    -0x1(%r11),%r10
    ecd5:	4d 85 db             	test   %r11,%r11
    ecd8:	74 32                	je     ed0c <mbedtls_mpi_core_mla+0x17c>
    ecda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ece0:	49 83 ea 01          	sub    $0x1,%r10
    ece4:	4d 31 c0             	xor    %r8,%r8
    ece7:	48 8b 06             	mov    (%rsi),%rax
    ecea:	48 f7 e3             	mul    %rbx
    eced:	48 83 c6 08          	add    $0x8,%rsi
    ecf1:	48 01 c8             	add    %rcx,%rax
    ecf4:	4c 89 c1             	mov    %r8,%rcx
    ecf7:	48 83 d2 00          	adc    $0x0,%rdx
    ecfb:	90                   	nop
    ecfc:	48 01 07             	add    %rax,(%rdi)
    ecff:	48 11 d1             	adc    %rdx,%rcx
    ed02:	48 83 c7 08          	add    $0x8,%rdi
    ed06:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
    ed0a:	75 d4                	jne    ece0 <mbedtls_mpi_core_mla+0x150>
    ed0c:	49 8d 41 ff          	lea    -0x1(%r9),%rax
    ed10:	4d 85 c9             	test   %r9,%r9
    ed13:	74 1d                	je     ed32 <mbedtls_mpi_core_mla+0x1a2>
    ed15:	0f 1f 00             	nopl   (%rax)
    ed18:	48 03 0f             	add    (%rdi),%rcx
    ed1b:	48 89 0f             	mov    %rcx,(%rdi)
    ed1e:	0f 92 c1             	setb   %cl
    ed21:	48 83 e8 01          	sub    $0x1,%rax
    ed25:	48 83 c7 08          	add    $0x8,%rdi
    ed29:	0f b6 c9             	movzbl %cl,%ecx
    ed2c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    ed30:	75 e6                	jne    ed18 <mbedtls_mpi_core_mla+0x188>
    ed32:	48 89 c8             	mov    %rcx,%rax
    ed35:	5b                   	pop    %rbx
    ed36:	c3                   	retq   
    ed37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ed3e:	00 00 

000000000000ed40 <mbedtls_mpi_core_mul>:
    ed40:	f3 0f 1e fa          	endbr64 
    ed44:	41 57                	push   %r15
    ed46:	4d 89 c7             	mov    %r8,%r15
    ed49:	41 56                	push   %r14
    ed4b:	41 55                	push   %r13
    ed4d:	49 89 f5             	mov    %rsi,%r13
    ed50:	31 f6                	xor    %esi,%esi
    ed52:	41 54                	push   %r12
    ed54:	49 89 d4             	mov    %rdx,%r12
    ed57:	4c 01 c2             	add    %r8,%rdx
    ed5a:	55                   	push   %rbp
    ed5b:	48 c1 e2 03          	shl    $0x3,%rdx
    ed5f:	48 89 fd             	mov    %rdi,%rbp
    ed62:	53                   	push   %rbx
    ed63:	48 89 cb             	mov    %rcx,%rbx
    ed66:	48 83 ec 08          	sub    $0x8,%rsp
    ed6a:	e8 41 45 ff ff       	callq  32b0 <memset@plt>
    ed6f:	4d 85 ff             	test   %r15,%r15
    ed72:	74 2d                	je     eda1 <mbedtls_mpi_core_mul+0x61>
    ed74:	4d 8d 74 24 01       	lea    0x1(%r12),%r14
    ed79:	4e 8d 3c fb          	lea    (%rbx,%r15,8),%r15
    ed7d:	0f 1f 00             	nopl   (%rax)
    ed80:	4c 8b 03             	mov    (%rbx),%r8
    ed83:	48 89 ef             	mov    %rbp,%rdi
    ed86:	4c 89 e1             	mov    %r12,%rcx
    ed89:	4c 89 ea             	mov    %r13,%rdx
    ed8c:	4c 89 f6             	mov    %r14,%rsi
    ed8f:	48 83 c3 08          	add    $0x8,%rbx
    ed93:	48 83 c5 08          	add    $0x8,%rbp
    ed97:	e8 f4 fd ff ff       	callq  eb90 <mbedtls_mpi_core_mla>
    ed9c:	4c 39 fb             	cmp    %r15,%rbx
    ed9f:	75 df                	jne    ed80 <mbedtls_mpi_core_mul+0x40>
    eda1:	48 83 c4 08          	add    $0x8,%rsp
    eda5:	5b                   	pop    %rbx
    eda6:	5d                   	pop    %rbp
    eda7:	41 5c                	pop    %r12
    eda9:	41 5d                	pop    %r13
    edab:	41 5e                	pop    %r14
    edad:	41 5f                	pop    %r15
    edaf:	c3                   	retq   

000000000000edb0 <mbedtls_mpi_core_montmul_init>:
    edb0:	f3 0f 1e fa          	endbr64 
    edb4:	48 8b 37             	mov    (%rdi),%rsi
    edb7:	ba 04 00 00 00       	mov    $0x4,%edx
    edbc:	bf 02 00 00 00       	mov    $0x2,%edi
    edc1:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
    edc6:	83 e0 08             	and    $0x8,%eax
    edc9:	48 01 f0             	add    %rsi,%rax
    edcc:	48 89 f1             	mov    %rsi,%rcx
    edcf:	49 89 f8             	mov    %rdi,%r8
    edd2:	48 0f af c8          	imul   %rax,%rcx
    edd6:	49 29 c8             	sub    %rcx,%r8
    edd9:	49 0f af c0          	imul   %r8,%rax
    eddd:	83 ea 01             	sub    $0x1,%edx
    ede0:	75 ea                	jne    edcc <mbedtls_mpi_core_montmul_init+0x1c>
    ede2:	48 f7 d8             	neg    %rax
    ede5:	c3                   	retq   
    ede6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    eded:	00 00 00 

000000000000edf0 <mbedtls_mpi_core_montmul>:
    edf0:	f3 0f 1e fa          	endbr64 
    edf4:	41 57                	push   %r15
    edf6:	41 56                	push   %r14
    edf8:	41 55                	push   %r13
    edfa:	41 54                	push   %r12
    edfc:	4d 89 c4             	mov    %r8,%r12
    edff:	55                   	push   %rbp
    ee00:	4c 89 cd             	mov    %r9,%rbp
    ee03:	53                   	push   %rbx
    ee04:	48 89 f3             	mov    %rsi,%rbx
    ee07:	31 f6                	xor    %esi,%esi
    ee09:	48 83 ec 38          	sub    $0x38,%rsp
    ee0d:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
    ee12:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    ee17:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    ee1c:	4c 89 ca             	mov    %r9,%rdx
    ee1f:	48 c1 e2 04          	shl    $0x4,%rdx
    ee23:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    ee28:	48 83 c2 08          	add    $0x8,%rdx
    ee2c:	4c 89 ff             	mov    %r15,%rdi
    ee2f:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    ee34:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    ee39:	e8 72 44 ff ff       	callq  32b0 <memset@plt>
    ee3e:	48 85 ed             	test   %rbp,%rbp
    ee41:	0f 84 e9 00 00 00    	je     ef30 <mbedtls_mpi_core_montmul+0x140>
    ee47:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    ee4c:	4c 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%r11
    ee53:	00 
    ee54:	49 89 d9             	mov    %rbx,%r9
    ee57:	4c 8d 6d 02          	lea    0x2(%rbp),%r13
    ee5b:	4f 8d 34 1f          	lea    (%r15,%r11,1),%r14
    ee5f:	4c 89 fb             	mov    %r15,%rbx
    ee62:	4d 89 cf             	mov    %r9,%r15
    ee65:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    ee6a:	4d 89 d6             	mov    %r10,%r14
    ee6d:	0f 1f 00             	nopl   (%rax)
    ee70:	4d 8b 07             	mov    (%r15),%r8
    ee73:	4d 8b 1e             	mov    (%r14),%r11
    ee76:	48 89 df             	mov    %rbx,%rdi
    ee79:	4c 89 f2             	mov    %r14,%rdx
    ee7c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    ee81:	4c 89 ee             	mov    %r13,%rsi
    ee84:	49 83 c7 08          	add    $0x8,%r15
    ee88:	4d 0f af d8          	imul   %r8,%r11
    ee8c:	4c 03 1b             	add    (%rbx),%r11
    ee8f:	4c 0f af 5c 24 20    	imul   0x20(%rsp),%r11
    ee95:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    ee9a:	e8 f1 fc ff ff       	callq  eb90 <mbedtls_mpi_core_mla>
    ee9f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    eea4:	48 89 df             	mov    %rbx,%rdi
    eea7:	48 89 e9             	mov    %rbp,%rcx
    eeaa:	4c 89 e2             	mov    %r12,%rdx
    eead:	4c 89 ee             	mov    %r13,%rsi
    eeb0:	48 83 c3 08          	add    $0x8,%rbx
    eeb4:	4d 89 d8             	mov    %r11,%r8
    eeb7:	e8 d4 fc ff ff       	callq  eb90 <mbedtls_mpi_core_mla>
    eebc:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
    eec1:	75 ad                	jne    ee70 <mbedtls_mpi_core_montmul+0x80>
    eec3:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    eec8:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    eecd:	31 c9                	xor    %ecx,%ecx
    eecf:	31 d2                	xor    %edx,%edx
    eed1:	4d 8b 04 ee          	mov    (%r14,%rbp,8),%r8
    eed5:	0f 1f 00             	nopl   (%rax)
    eed8:	49 8b 04 d6          	mov    (%r14,%rdx,8),%rax
    eedc:	49 8b 34 d4          	mov    (%r12,%rdx,8),%rsi
    eee0:	31 ff                	xor    %edi,%edi
    eee2:	48 39 c8             	cmp    %rcx,%rax
    eee5:	40 0f 92 c7          	setb   %dil
    eee9:	48 29 c8             	sub    %rcx,%rax
    eeec:	48 39 f0             	cmp    %rsi,%rax
    eeef:	48 83 d7 00          	adc    $0x0,%rdi
    eef3:	48 29 f0             	sub    %rsi,%rax
    eef6:	49 89 04 d1          	mov    %rax,(%r9,%rdx,8)
    eefa:	48 83 c2 01          	add    $0x1,%rdx
    eefe:	48 89 f9             	mov    %rdi,%rcx
    ef01:	48 39 d5             	cmp    %rdx,%rbp
    ef04:	75 d2                	jne    eed8 <mbedtls_mpi_core_montmul+0xe8>
    ef06:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    ef0b:	44 31 c1             	xor    %r8d,%ecx
    ef0e:	48 83 c4 38          	add    $0x38,%rsp
    ef12:	4c 89 f2             	mov    %r14,%rdx
    ef15:	5b                   	pop    %rbx
    ef16:	48 89 ef             	mov    %rbp,%rdi
    ef19:	0f b6 c9             	movzbl %cl,%ecx
    ef1c:	5d                   	pop    %rbp
    ef1d:	41 5c                	pop    %r12
    ef1f:	41 5d                	pop    %r13
    ef21:	41 5e                	pop    %r14
    ef23:	41 5f                	pop    %r15
    ef25:	e9 d6 07 00 00       	jmpq   f700 <mbedtls_ct_mpi_uint_cond_assign>
    ef2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ef30:	4d 8b 07             	mov    (%r15),%r8
    ef33:	4d 89 fe             	mov    %r15,%r14
    ef36:	31 c9                	xor    %ecx,%ecx
    ef38:	eb cc                	jmp    ef06 <mbedtls_mpi_core_montmul+0x116>
    ef3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ef40 <mbedtls_mpi_core_get_mont_r2_unsafe>:
    ef40:	f3 0f 1e fa          	endbr64 
    ef44:	55                   	push   %rbp
    ef45:	48 89 fd             	mov    %rdi,%rbp
    ef48:	53                   	push   %rbx
    ef49:	48 89 f3             	mov    %rsi,%rbx
    ef4c:	be 01 00 00 00       	mov    $0x1,%esi
    ef51:	48 83 ec 08          	sub    $0x8,%rsp
    ef55:	e8 66 a6 ff ff       	callq  95c0 <mbedtls_mpi_lset>
    ef5a:	85 c0                	test   %eax,%eax
    ef5c:	74 0a                	je     ef68 <mbedtls_mpi_core_get_mont_r2_unsafe+0x28>
    ef5e:	48 83 c4 08          	add    $0x8,%rsp
    ef62:	5b                   	pop    %rbx
    ef63:	5d                   	pop    %rbp
    ef64:	c3                   	retq   
    ef65:	0f 1f 00             	nopl   (%rax)
    ef68:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    ef6c:	48 89 ef             	mov    %rbp,%rdi
    ef6f:	48 c1 e6 07          	shl    $0x7,%rsi
    ef73:	e8 08 a9 ff ff       	callq  9880 <mbedtls_mpi_shift_l>
    ef78:	85 c0                	test   %eax,%eax
    ef7a:	75 e2                	jne    ef5e <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
    ef7c:	48 89 da             	mov    %rbx,%rdx
    ef7f:	48 89 ee             	mov    %rbp,%rsi
    ef82:	48 89 ef             	mov    %rbp,%rdi
    ef85:	e8 c6 c0 ff ff       	callq  b050 <mbedtls_mpi_mod_mpi>
    ef8a:	85 c0                	test   %eax,%eax
    ef8c:	75 d0                	jne    ef5e <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
    ef8e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    ef92:	48 83 c4 08          	add    $0x8,%rsp
    ef96:	48 89 ef             	mov    %rbp,%rdi
    ef99:	5b                   	pop    %rbx
    ef9a:	5d                   	pop    %rbp
    ef9b:	e9 90 a3 ff ff       	jmpq   9330 <mbedtls_mpi_shrink>

000000000000efa0 <mbedtls_mpi_core_fill_random>:
    efa0:	f3 0f 1e fa          	endbr64 
    efa4:	41 57                	push   %r15
    efa6:	48 89 d0             	mov    %rdx,%rax
    efa9:	41 56                	push   %r14
    efab:	41 55                	push   %r13
    efad:	41 54                	push   %r12
    efaf:	55                   	push   %rbp
    efb0:	31 ed                	xor    %ebp,%ebp
    efb2:	53                   	push   %rbx
    efb3:	48 83 ec 18          	sub    $0x18,%rsp
    efb7:	f6 c2 07             	test   $0x7,%dl
    efba:	40 0f 95 c5          	setne  %bpl
    efbe:	48 c1 e8 03          	shr    $0x3,%rax
    efc2:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    efc7:	48 01 c5             	add    %rax,%rbp
    efca:	4c 89 04 24          	mov    %r8,(%rsp)
    efce:	4c 8d 34 ed 00 00 00 	lea    0x0(,%rbp,8),%r14
    efd5:	00 
    efd6:	4d 89 f7             	mov    %r14,%r15
    efd9:	49 29 d7             	sub    %rdx,%r15
    efdc:	48 39 f5             	cmp    %rsi,%rbp
    efdf:	77 6f                	ja     f050 <mbedtls_mpi_core_fill_random+0xb0>
    efe1:	48 89 f3             	mov    %rsi,%rbx
    efe4:	49 89 fd             	mov    %rdi,%r13
    efe7:	49 89 d4             	mov    %rdx,%r12
    efea:	31 f6                	xor    %esi,%esi
    efec:	4c 89 fa             	mov    %r15,%rdx
    efef:	48 29 eb             	sub    %rbp,%rbx
    eff2:	e8 b9 42 ff ff       	callq  32b0 <memset@plt>
    eff7:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    effe:	00 
    efff:	4b 8d 7c 35 00       	lea    0x0(%r13,%r14,1),%rdi
    f004:	31 f6                	xor    %esi,%esi
    f006:	e8 a5 42 ff ff       	callq  32b0 <memset@plt>
    f00b:	4c 8b 04 24          	mov    (%rsp),%r8
    f00f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    f014:	4c 89 e2             	mov    %r12,%rdx
    f017:	4b 8d 74 3d 00       	lea    0x0(%r13,%r15,1),%rsi
    f01c:	4c 89 c7             	mov    %r8,%rdi
    f01f:	ff d1                	callq  *%rcx
    f021:	41 89 c0             	mov    %eax,%r8d
    f024:	85 c0                	test   %eax,%eax
    f026:	75 10                	jne    f038 <mbedtls_mpi_core_fill_random+0x98>
    f028:	48 85 ed             	test   %rbp,%rbp
    f02b:	74 0b                	je     f038 <mbedtls_mpi_core_fill_random+0x98>
    f02d:	48 89 ee             	mov    %rbp,%rsi
    f030:	4c 89 ef             	mov    %r13,%rdi
    f033:	e8 c8 f4 ff ff       	callq  e500 <mbedtls_mpi_core_bigendian_to_host.part.0>
    f038:	48 83 c4 18          	add    $0x18,%rsp
    f03c:	44 89 c0             	mov    %r8d,%eax
    f03f:	5b                   	pop    %rbx
    f040:	5d                   	pop    %rbp
    f041:	41 5c                	pop    %r12
    f043:	41 5d                	pop    %r13
    f045:	41 5e                	pop    %r14
    f047:	41 5f                	pop    %r15
    f049:	c3                   	retq   
    f04a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f050:	41 b8 fc ff ff ff    	mov    $0xfffffffc,%r8d
    f056:	eb e0                	jmp    f038 <mbedtls_mpi_core_fill_random+0x98>
    f058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f05f:	00 

000000000000f060 <mbedtls_mpi_core_random>:
    f060:	f3 0f 1e fa          	endbr64 
    f064:	41 57                	push   %r15
    f066:	4d 89 cf             	mov    %r9,%r15
    f069:	41 56                	push   %r14
    f06b:	41 55                	push   %r13
    f06d:	41 54                	push   %r12
    f06f:	55                   	push   %rbp
    f070:	48 89 fd             	mov    %rdi,%rbp
    f073:	53                   	push   %rbx
    f074:	48 89 cb             	mov    %rcx,%rbx
    f077:	48 83 ec 38          	sub    $0x38,%rsp
    f07b:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    f080:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    f085:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f08a:	48 85 c9             	test   %rcx,%rcx
    f08d:	0f 84 bd 00 00 00    	je     f150 <mbedtls_mpi_core_random+0xf0>
    f093:	48 89 ce             	mov    %rcx,%rsi
    f096:	48 89 d7             	mov    %rdx,%rdi
    f099:	e8 12 f4 ff ff       	callq  e4b0 <mbedtls_mpi_core_bitlen.part.0>
    f09e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    f0a3:	48 83 c0 07          	add    $0x7,%rax
    f0a7:	48 89 c1             	mov    %rax,%rcx
    f0aa:	48 c1 e9 03          	shr    $0x3,%rcx
    f0ae:	48 83 f8 28          	cmp    $0x28,%rax
    f0b2:	45 19 ed             	sbb    %r13d,%r13d
    f0b5:	48 89 0c 24          	mov    %rcx,(%rsp)
    f0b9:	41 81 e5 dc 00 00 00 	and    $0xdc,%r13d
    f0c0:	41 83 c5 1e          	add    $0x1e,%r13d
    f0c4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f0c8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f0cd:	0f 1f 00             	nopl   (%rax)
    f0d0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    f0d5:	48 8b 14 24          	mov    (%rsp),%rdx
    f0d9:	4d 89 f8             	mov    %r15,%r8
    f0dc:	48 89 de             	mov    %rbx,%rsi
    f0df:	48 89 ef             	mov    %rbp,%rdi
    f0e2:	e8 b9 fe ff ff       	callq  efa0 <mbedtls_mpi_core_fill_random>
    f0e7:	41 89 c4             	mov    %eax,%r12d
    f0ea:	85 c0                	test   %eax,%eax
    f0ec:	75 47                	jne    f135 <mbedtls_mpi_core_random+0xd5>
    f0ee:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    f0f3:	48 89 de             	mov    %rbx,%rsi
    f0f6:	48 2b 54 24 10       	sub    0x10(%rsp),%rdx
    f0fb:	48 89 ef             	mov    %rbp,%rdi
    f0fe:	e8 8d f8 ff ff       	callq  e990 <mbedtls_mpi_core_shift_r>
    f103:	41 83 ed 01          	sub    $0x1,%r13d
    f107:	74 6f                	je     f178 <mbedtls_mpi_core_random+0x118>
    f109:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    f10e:	48 89 da             	mov    %rbx,%rdx
    f111:	48 89 ee             	mov    %rbp,%rsi
    f114:	e8 97 f4 ff ff       	callq  e5b0 <mbedtls_mpi_core_uint_le_mpi>
    f119:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    f11e:	48 89 da             	mov    %rbx,%rdx
    f121:	48 89 ef             	mov    %rbp,%rdi
    f124:	41 89 c6             	mov    %eax,%r14d
    f127:	e8 34 0c 00 00       	callq  fd60 <mbedtls_mpi_core_lt_ct>
    f12c:	45 85 f6             	test   %r14d,%r14d
    f12f:	74 9f                	je     f0d0 <mbedtls_mpi_core_random+0x70>
    f131:	85 c0                	test   %eax,%eax
    f133:	74 9b                	je     f0d0 <mbedtls_mpi_core_random+0x70>
    f135:	48 83 c4 38          	add    $0x38,%rsp
    f139:	44 89 e0             	mov    %r12d,%eax
    f13c:	5b                   	pop    %rbx
    f13d:	5d                   	pop    %rbp
    f13e:	41 5c                	pop    %r12
    f140:	41 5d                	pop    %r13
    f142:	41 5e                	pop    %r14
    f144:	41 5f                	pop    %r15
    f146:	c3                   	retq   
    f147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f14e:	00 00 
    f150:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    f157:	00 00 
    f159:	b8 07 00 00 00       	mov    $0x7,%eax
    f15e:	41 bd fa 00 00 00    	mov    $0xfa,%r13d
    f164:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    f16b:	00 
    f16c:	e9 53 ff ff ff       	jmpq   f0c4 <mbedtls_mpi_core_random+0x64>
    f171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f178:	f3 0f 1e fa          	endbr64 
    f17c:	41 bc f2 ff ff ff    	mov    $0xfffffff2,%r12d
    f182:	eb b1                	jmp    f135 <mbedtls_mpi_core_random+0xd5>
    f184:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f18b:	00 00 00 00 
    f18f:	90                   	nop

000000000000f190 <mbedtls_mpi_core_exp_mod_working_limbs>:
    f190:	f3 0f 1e fa          	endbr64 
    f194:	48 c1 e6 06          	shl    $0x6,%rsi
    f198:	49 89 f8             	mov    %rdi,%r8
    f19b:	48 83 fe 50          	cmp    $0x50,%rsi
    f19f:	48 19 ff             	sbb    %rdi,%rdi
    f1a2:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
    f1a6:	48 83 c7 07          	add    $0x7,%rdi
    f1aa:	49 0f af f8          	imul   %r8,%rdi
    f1ae:	48 8d 47 01          	lea    0x1(%rdi),%rax
    f1b2:	c3                   	retq   
    f1b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f1ba:	00 00 00 00 
    f1be:	66 90                	xchg   %ax,%ax

000000000000f1c0 <mbedtls_mpi_core_exp_mod>:
    f1c0:	f3 0f 1e fa          	endbr64 
    f1c4:	41 57                	push   %r15
    f1c6:	4c 89 c8             	mov    %r9,%rax
    f1c9:	49 89 cf             	mov    %rcx,%r15
    f1cc:	41 56                	push   %r14
    f1ce:	48 c1 e0 06          	shl    $0x6,%rax
    f1d2:	49 89 d6             	mov    %rdx,%r14
    f1d5:	41 55                	push   %r13
    f1d7:	4d 89 cd             	mov    %r9,%r13
    f1da:	41 54                	push   %r12
    f1dc:	49 89 f4             	mov    %rsi,%r12
    f1df:	55                   	push   %rbp
    f1e0:	48 89 fd             	mov    %rdi,%rbp
    f1e3:	4a 8d 3c fd 00 00 00 	lea    0x0(,%r15,8),%rdi
    f1ea:	00 
    f1eb:	53                   	push   %rbx
    f1ec:	48 83 ec 68          	sub    $0x68,%rsp
    f1f0:	48 83 f8 50          	cmp    $0x50,%rax
    f1f4:	48 19 f6             	sbb    %rsi,%rsi
    f1f7:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
    f1fc:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    f200:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    f205:	48 83 c6 04          	add    $0x4,%rsi
    f209:	48 83 f8 50          	cmp    $0x50,%rax
    f20d:	19 c9                	sbb    %ecx,%ecx
    f20f:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    f214:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
    f21b:	00 
    f21c:	83 c1 02             	add    $0x2,%ecx
    f21f:	48 83 f8 50          	cmp    $0x50,%rax
    f223:	48 19 c0             	sbb    %rax,%rax
    f226:	48 83 c0 02          	add    $0x2,%rax
    f22a:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    f22f:	4c 89 f8             	mov    %r15,%rax
    f232:	48 d3 e0             	shl    %cl,%rax
    f235:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    f239:	48 8b 32             	mov    (%rdx),%rsi
    f23c:	ba 04 00 00 00       	mov    $0x4,%edx
    f241:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    f246:	48 01 f8             	add    %rdi,%rax
    f249:	bf 02 00 00 00       	mov    $0x2,%edi
    f24e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    f253:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
    f258:	83 e0 08             	and    $0x8,%eax
    f25b:	48 01 f0             	add    %rsi,%rax
    f25e:	48 89 f1             	mov    %rsi,%rcx
    f261:	48 89 fb             	mov    %rdi,%rbx
    f264:	48 0f af c8          	imul   %rax,%rcx
    f268:	48 29 cb             	sub    %rcx,%rbx
    f26b:	48 0f af c3          	imul   %rbx,%rax
    f26f:	83 ea 01             	sub    $0x1,%edx
    f272:	75 ea                	jne    f25e <mbedtls_mpi_core_exp_mod+0x9e>
    f274:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    f279:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
    f280:	00 
    f281:	48 f7 d8             	neg    %rax
    f284:	31 f6                	xor    %esi,%esi
    f286:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    f28b:	48 89 da             	mov    %rbx,%rdx
    f28e:	e8 1d 40 ff ff       	callq  32b0 <memset@plt>
    f293:	4d 89 f9             	mov    %r15,%r9
    f296:	4d 89 f0             	mov    %r14,%r8
    f299:	4c 89 f9             	mov    %r15,%rcx
    f29c:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
    f2a3:	00 
    f2a4:	48 c7 06 01 00 00 00 	movq   $0x1,(%rsi)
    f2ab:	ff 74 24 10          	pushq  0x10(%rsp)
    f2af:	ff 74 24 30          	pushq  0x30(%rsp)
    f2b3:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    f2ba:	00 
    f2bb:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
    f2c2:	00 
    f2c3:	48 89 f7             	mov    %rsi,%rdi
    f2c6:	e8 25 fb ff ff       	callq  edf0 <mbedtls_mpi_core_montmul>
    f2cb:	48 89 da             	mov    %rbx,%rdx
    f2ce:	48 03 9c 24 b8 00 00 	add    0xb8(%rsp),%rbx
    f2d5:	00 
    f2d6:	4c 89 e6             	mov    %r12,%rsi
    f2d9:	48 89 df             	mov    %rbx,%rdi
    f2dc:	49 89 dc             	mov    %rbx,%r12
    f2df:	e8 3c 40 ff ff       	callq  3320 <memcpy@plt>
    f2e4:	41 59                	pop    %r9
    f2e6:	41 5a                	pop    %r10
    f2e8:	b8 02 00 00 00       	mov    $0x2,%eax
    f2ed:	48 83 7c 24 20 02    	cmpq   $0x2,0x20(%rsp)
    f2f3:	74 58                	je     f34d <mbedtls_mpi_core_exp_mod+0x18d>
    f2f5:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
    f2fa:	4d 89 e5             	mov    %r12,%r13
    f2fd:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    f302:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    f307:	48 89 dd             	mov    %rbx,%rbp
    f30a:	4c 89 fb             	mov    %r15,%rbx
    f30d:	49 89 c7             	mov    %rax,%r15
    f310:	4c 89 ee             	mov    %r13,%rsi
    f313:	4c 03 6c 24 18       	add    0x18(%rsp),%r13
    f318:	ff 74 24 10          	pushq  0x10(%rsp)
    f31c:	4d 89 f0             	mov    %r14,%r8
    f31f:	41 54                	push   %r12
    f321:	4c 89 ef             	mov    %r13,%rdi
    f324:	49 89 d9             	mov    %rbx,%r9
    f327:	48 89 d9             	mov    %rbx,%rcx
    f32a:	48 89 ea             	mov    %rbp,%rdx
    f32d:	49 83 c7 01          	add    $0x1,%r15
    f331:	e8 ba fa ff ff       	callq  edf0 <mbedtls_mpi_core_montmul>
    f336:	5f                   	pop    %rdi
    f337:	41 58                	pop    %r8
    f339:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
    f33e:	75 d0                	jne    f310 <mbedtls_mpi_core_exp_mod+0x150>
    f340:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    f345:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
    f34a:	49 89 df             	mov    %rbx,%r15
    f34d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    f352:	48 89 ef             	mov    %rbp,%rdi
    f355:	49 89 ec             	mov    %rbp,%r12
    f358:	31 db                	xor    %ebx,%ebx
    f35a:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
    f361:	00 
    f362:	4c 89 fd             	mov    %r15,%rbp
    f365:	e8 b6 3f ff ff       	callq  3320 <memcpy@plt>
    f36a:	31 c0                	xor    %eax,%eax
    f36c:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
    f371:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    f378:	00 00 
    f37a:	49 89 c6             	mov    %rax,%r14
    f37d:	0f 1f 00             	nopl   (%rax)
    f380:	ff 74 24 10          	pushq  0x10(%rsp)
    f384:	48 89 e9             	mov    %rbp,%rcx
    f387:	4c 89 e6             	mov    %r12,%rsi
    f38a:	49 89 e9             	mov    %rbp,%r9
    f38d:	ff 74 24 30          	pushq  0x30(%rsp)
    f391:	4c 89 e2             	mov    %r12,%rdx
    f394:	4c 89 e7             	mov    %r12,%rdi
    f397:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
    f39c:	e8 4f fa ff ff       	callq  edf0 <mbedtls_mpi_core_montmul>
    f3a1:	59                   	pop    %rcx
    f3a2:	5e                   	pop    %rsi
    f3a3:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    f3a9:	0f 85 d1 00 00 00    	jne    f480 <mbedtls_mpi_core_exp_mod+0x2c0>
    f3af:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    f3b4:	49 83 ed 01          	sub    $0x1,%r13
    f3b8:	48 01 db             	add    %rbx,%rbx
    f3bb:	49 83 c6 01          	add    $0x1,%r14
    f3bf:	4a 8b 04 e8          	mov    (%rax,%r13,8),%rax
    f3c3:	48 89 c2             	mov    %rax,%rdx
    f3c6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f3cb:	4c 89 e8             	mov    %r13,%rax
    f3ce:	48 c1 ea 3f          	shr    $0x3f,%rdx
    f3d2:	48 83 c8 3f          	or     $0x3f,%rax
    f3d6:	48 c7 44 24 08 3f 00 	movq   $0x3f,0x8(%rsp)
    f3dd:	00 00 
    f3df:	48 09 d3             	or     %rdx,%rbx
    f3e2:	4c 39 74 24 50       	cmp    %r14,0x50(%rsp)
    f3e7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    f3ec:	75 92                	jne    f380 <mbedtls_mpi_core_exp_mod+0x1c0>
    f3ee:	66 90                	xchg   %ax,%ax
    f3f0:	4c 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%r15
    f3f7:	00 
    f3f8:	45 31 f6             	xor    %r14d,%r14d
    f3fb:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
    f400:	4d 89 fc             	mov    %r15,%r12
    f403:	4d 89 f7             	mov    %r14,%r15
    f406:	49 89 de             	mov    %rbx,%r14
    f409:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    f40e:	66 90                	xchg   %ax,%ax
    f410:	4c 89 f6             	mov    %r14,%rsi
    f413:	4c 89 ff             	mov    %r15,%rdi
    f416:	e8 85 02 00 00       	callq  f6a0 <mbedtls_ct_size_bool_eq>
    f41b:	4c 39 e3             	cmp    %r12,%rbx
    f41e:	74 11                	je     f431 <mbedtls_mpi_core_exp_mod+0x271>
    f420:	0f b6 c8             	movzbl %al,%ecx
    f423:	4c 89 e2             	mov    %r12,%rdx
    f426:	48 89 de             	mov    %rbx,%rsi
    f429:	48 89 ef             	mov    %rbp,%rdi
    f42c:	e8 cf 02 00 00       	callq  f700 <mbedtls_ct_mpi_uint_cond_assign>
    f431:	49 83 c7 01          	add    $0x1,%r15
    f435:	4c 03 64 24 18       	add    0x18(%rsp),%r12
    f43a:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
    f43f:	75 cf                	jne    f410 <mbedtls_mpi_core_exp_mod+0x250>
    f441:	4c 8b 64 24 48       	mov    0x48(%rsp),%r12
    f446:	ff 74 24 10          	pushq  0x10(%rsp)
    f44a:	49 89 e9             	mov    %rbp,%r9
    f44d:	48 89 e9             	mov    %rbp,%rcx
    f450:	ff 74 24 30          	pushq  0x30(%rsp)
    f454:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
    f459:	4c 89 e6             	mov    %r12,%rsi
    f45c:	4c 89 e7             	mov    %r12,%rdi
    f45f:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    f464:	e8 87 f9 ff ff       	callq  edf0 <mbedtls_mpi_core_montmul>
    f469:	58                   	pop    %rax
    f46a:	5a                   	pop    %rdx
    f46b:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
    f471:	74 6d                	je     f4e0 <mbedtls_mpi_core_exp_mod+0x320>
    f473:	31 db                	xor    %ebx,%ebx
    f475:	45 31 f6             	xor    %r14d,%r14d
    f478:	e9 03 ff ff ff       	jmpq   f380 <mbedtls_mpi_core_exp_mod+0x1c0>
    f47d:	0f 1f 00             	nopl   (%rax)
    f480:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    f485:	48 83 6c 24 08 01    	subq   $0x1,0x8(%rsp)
    f48b:	48 01 db             	add    %rbx,%rbx
    f48e:	49 83 c6 01          	add    $0x1,%r14
    f492:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    f497:	4a 8b 3c ef          	mov    (%rdi,%r13,8),%rdi
    f49b:	89 c1                	mov    %eax,%ecx
    f49d:	4c 09 e8             	or     %r13,%rax
    f4a0:	48 89 fa             	mov    %rdi,%rdx
    f4a3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    f4a8:	48 d3 ea             	shr    %cl,%rdx
    f4ab:	83 e2 01             	and    $0x1,%edx
    f4ae:	48 09 d3             	or     %rdx,%rbx
    f4b1:	4c 3b 74 24 50       	cmp    0x50(%rsp),%r14
    f4b6:	0f 84 34 ff ff ff    	je     f3f0 <mbedtls_mpi_core_exp_mod+0x230>
    f4bc:	48 85 c0             	test   %rax,%rax
    f4bf:	0f 85 bb fe ff ff    	jne    f380 <mbedtls_mpi_core_exp_mod+0x1c0>
    f4c5:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    f4cc:	00 00 
    f4ce:	45 31 ed             	xor    %r13d,%r13d
    f4d1:	e9 1a ff ff ff       	jmpq   f3f0 <mbedtls_mpi_core_exp_mod+0x230>
    f4d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f4dd:	00 00 00 
    f4e0:	48 83 c4 68          	add    $0x68,%rsp
    f4e4:	5b                   	pop    %rbx
    f4e5:	5d                   	pop    %rbp
    f4e6:	41 5c                	pop    %r12
    f4e8:	41 5d                	pop    %r13
    f4ea:	41 5e                	pop    %r14
    f4ec:	41 5f                	pop    %r15
    f4ee:	c3                   	retq   
    f4ef:	90                   	nop

000000000000f4f0 <mbedtls_mpi_core_sub_int>:
    f4f0:	f3 0f 1e fa          	endbr64 
    f4f4:	48 89 d0             	mov    %rdx,%rax
    f4f7:	48 85 c9             	test   %rcx,%rcx
    f4fa:	74 21                	je     f51d <mbedtls_mpi_core_sub_int+0x2d>
    f4fc:	45 31 c0             	xor    %r8d,%r8d
    f4ff:	90                   	nop
    f500:	4a 8b 14 c6          	mov    (%rsi,%r8,8),%rdx
    f504:	49 89 d1             	mov    %rdx,%r9
    f507:	49 29 c1             	sub    %rax,%r9
    f50a:	0f 92 c0             	setb   %al
    f50d:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
    f511:	49 83 c0 01          	add    $0x1,%r8
    f515:	0f b6 c0             	movzbl %al,%eax
    f518:	4c 39 c1             	cmp    %r8,%rcx
    f51b:	75 e3                	jne    f500 <mbedtls_mpi_core_sub_int+0x10>
    f51d:	c3                   	retq   
    f51e:	66 90                	xchg   %ax,%ax

000000000000f520 <mbedtls_mpi_core_check_zero_ct>:
    f520:	f3 0f 1e fa          	endbr64 
    f524:	48 85 f6             	test   %rsi,%rsi
    f527:	74 17                	je     f540 <mbedtls_mpi_core_check_zero_ct+0x20>
    f529:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
    f52d:	31 c0                	xor    %eax,%eax
    f52f:	90                   	nop
    f530:	48 0b 07             	or     (%rdi),%rax
    f533:	48 83 c7 08          	add    $0x8,%rdi
    f537:	48 39 d7             	cmp    %rdx,%rdi
    f53a:	75 f4                	jne    f530 <mbedtls_mpi_core_check_zero_ct+0x10>
    f53c:	c3                   	retq   
    f53d:	0f 1f 00             	nopl   (%rax)
    f540:	31 c0                	xor    %eax,%eax
    f542:	c3                   	retq   
    f543:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f54a:	00 00 00 00 
    f54e:	66 90                	xchg   %ax,%ax

000000000000f550 <mbedtls_mpi_core_to_mont_rep>:
    f550:	f3 0f 1e fa          	endbr64 
    f554:	48 83 ec 08          	sub    $0x8,%rsp
    f558:	49 89 d2             	mov    %rdx,%r10
    f55b:	4c 89 ca             	mov    %r9,%rdx
    f55e:	49 89 c9             	mov    %rcx,%r9
    f561:	ff 74 24 10          	pushq  0x10(%rsp)
    f565:	41 50                	push   %r8
    f567:	4d 89 d0             	mov    %r10,%r8
    f56a:	e8 81 f8 ff ff       	callq  edf0 <mbedtls_mpi_core_montmul>
    f56f:	48 83 c4 18          	add    $0x18,%rsp
    f573:	c3                   	retq   
    f574:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f57b:	00 00 00 00 
    f57f:	90                   	nop

000000000000f580 <mbedtls_mpi_core_from_mont_rep>:
    f580:	f3 0f 1e fa          	endbr64 
    f584:	48 83 ec 18          	sub    $0x18,%rsp
    f588:	49 89 d2             	mov    %rdx,%r10
    f58b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f592:	00 00 
    f594:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f599:	31 c0                	xor    %eax,%eax
    f59b:	48 89 e2             	mov    %rsp,%rdx
    f59e:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
    f5a5:	00 
    f5a6:	41 51                	push   %r9
    f5a8:	49 89 c9             	mov    %rcx,%r9
    f5ab:	b9 01 00 00 00       	mov    $0x1,%ecx
    f5b0:	41 50                	push   %r8
    f5b2:	4d 89 d0             	mov    %r10,%r8
    f5b5:	e8 36 f8 ff ff       	callq  edf0 <mbedtls_mpi_core_montmul>
    f5ba:	58                   	pop    %rax
    f5bb:	5a                   	pop    %rdx
    f5bc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    f5c1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f5c8:	00 00 
    f5ca:	75 05                	jne    f5d1 <mbedtls_mpi_core_from_mont_rep+0x51>
    f5cc:	48 83 c4 18          	add    $0x18,%rsp
    f5d0:	c3                   	retq   
    f5d1:	e8 aa 3c ff ff       	callq  3280 <__stack_chk_fail@plt>
    f5d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f5dd:	00 00 00 

000000000000f5e0 <mbedtls_ct_memcmp>:
    f5e0:	f3 0f 1e fa          	endbr64 
    f5e4:	48 85 d2             	test   %rdx,%rdx
    f5e7:	74 27                	je     f610 <mbedtls_ct_memcmp+0x30>
    f5e9:	4c 8d 04 17          	lea    (%rdi,%rdx,1),%r8
    f5ed:	31 c0                	xor    %eax,%eax
    f5ef:	90                   	nop
    f5f0:	0f b6 17             	movzbl (%rdi),%edx
    f5f3:	0f b6 0e             	movzbl (%rsi),%ecx
    f5f6:	48 83 c7 01          	add    $0x1,%rdi
    f5fa:	48 83 c6 01          	add    $0x1,%rsi
    f5fe:	31 ca                	xor    %ecx,%edx
    f600:	0f b6 d2             	movzbl %dl,%edx
    f603:	09 d0                	or     %edx,%eax
    f605:	4c 39 c7             	cmp    %r8,%rdi
    f608:	75 e6                	jne    f5f0 <mbedtls_ct_memcmp+0x10>
    f60a:	c3                   	retq   
    f60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f610:	31 c0                	xor    %eax,%eax
    f612:	c3                   	retq   
    f613:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f61a:	00 00 00 00 
    f61e:	66 90                	xchg   %ax,%ax

000000000000f620 <mbedtls_ct_uint_mask>:
    f620:	f3 0f 1e fa          	endbr64 
    f624:	41 89 f8             	mov    %edi,%r8d
    f627:	f7 df                	neg    %edi
    f629:	44 09 c7             	or     %r8d,%edi
    f62c:	89 f8                	mov    %edi,%eax
    f62e:	c1 f8 1f             	sar    $0x1f,%eax
    f631:	c3                   	retq   
    f632:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f639:	00 00 00 00 
    f63d:	0f 1f 00             	nopl   (%rax)

000000000000f640 <mbedtls_ct_size_mask>:
    f640:	f3 0f 1e fa          	endbr64 
    f644:	49 89 f8             	mov    %rdi,%r8
    f647:	48 f7 df             	neg    %rdi
    f64a:	4c 09 c7             	or     %r8,%rdi
    f64d:	48 89 f8             	mov    %rdi,%rax
    f650:	48 c1 f8 3f          	sar    $0x3f,%rax
    f654:	c3                   	retq   
    f655:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f65c:	00 00 00 00 

000000000000f660 <mbedtls_ct_mpi_uint_mask>:
    f660:	f3 0f 1e fa          	endbr64 
    f664:	49 89 f8             	mov    %rdi,%r8
    f667:	48 f7 df             	neg    %rdi
    f66a:	4c 09 c7             	or     %r8,%rdi
    f66d:	48 89 f8             	mov    %rdi,%rax
    f670:	48 c1 f8 3f          	sar    $0x3f,%rax
    f674:	c3                   	retq   
    f675:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f67c:	00 00 00 00 

000000000000f680 <mbedtls_ct_size_mask_ge>:
    f680:	f3 0f 1e fa          	endbr64 
    f684:	48 89 f8             	mov    %rdi,%rax
    f687:	48 29 f0             	sub    %rsi,%rax
    f68a:	48 c1 f8 3f          	sar    $0x3f,%rax
    f68e:	48 f7 d0             	not    %rax
    f691:	c3                   	retq   
    f692:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f699:	00 00 00 00 
    f69d:	0f 1f 00             	nopl   (%rax)

000000000000f6a0 <mbedtls_ct_size_bool_eq>:
    f6a0:	f3 0f 1e fa          	endbr64 
    f6a4:	48 31 fe             	xor    %rdi,%rsi
    f6a7:	48 89 f0             	mov    %rsi,%rax
    f6aa:	48 f7 d8             	neg    %rax
    f6ad:	48 09 f0             	or     %rsi,%rax
    f6b0:	48 c1 e8 3f          	shr    $0x3f,%rax
    f6b4:	83 f0 01             	xor    $0x1,%eax
    f6b7:	c3                   	retq   
    f6b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f6bf:	00 

000000000000f6c0 <mbedtls_ct_mpi_uint_lt>:
    f6c0:	f3 0f 1e fa          	endbr64 
    f6c4:	48 89 fa             	mov    %rdi,%rdx
    f6c7:	48 89 f0             	mov    %rsi,%rax
    f6ca:	48 31 f7             	xor    %rsi,%rdi
    f6cd:	48 29 f2             	sub    %rsi,%rdx
    f6d0:	48 31 d0             	xor    %rdx,%rax
    f6d3:	48 21 f8             	and    %rdi,%rax
    f6d6:	48 31 d0             	xor    %rdx,%rax
    f6d9:	48 c1 e8 3f          	shr    $0x3f,%rax
    f6dd:	c3                   	retq   
    f6de:	66 90                	xchg   %ax,%ax

000000000000f6e0 <mbedtls_ct_uint_if>:
    f6e0:	f3 0f 1e fa          	endbr64 
    f6e4:	41 89 f8             	mov    %edi,%r8d
    f6e7:	f7 df                	neg    %edi
    f6e9:	31 d6                	xor    %edx,%esi
    f6eb:	89 d0                	mov    %edx,%eax
    f6ed:	44 09 c7             	or     %r8d,%edi
    f6f0:	c1 ff 1f             	sar    $0x1f,%edi
    f6f3:	21 f7                	and    %esi,%edi
    f6f5:	31 f8                	xor    %edi,%eax
    f6f7:	c3                   	retq   
    f6f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f6ff:	00 

000000000000f700 <mbedtls_ct_mpi_uint_cond_assign>:
    f700:	f3 0f 1e fa          	endbr64 
    f704:	0f b6 c9             	movzbl %cl,%ecx
    f707:	31 c0                	xor    %eax,%eax
    f709:	41 89 ca             	mov    %ecx,%r10d
    f70c:	83 e9 01             	sub    $0x1,%ecx
    f70f:	41 f7 da             	neg    %r10d
    f712:	4c 63 c9             	movslq %ecx,%r9
    f715:	4d 63 d2             	movslq %r10d,%r10
    f718:	48 85 ff             	test   %rdi,%rdi
    f71b:	74 21                	je     f73e <mbedtls_ct_mpi_uint_cond_assign+0x3e>
    f71d:	0f 1f 00             	nopl   (%rax)
    f720:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    f724:	4c 8b 04 c6          	mov    (%rsi,%rax,8),%r8
    f728:	4c 21 d1             	and    %r10,%rcx
    f72b:	4d 21 c8             	and    %r9,%r8
    f72e:	4c 09 c1             	or     %r8,%rcx
    f731:	48 89 0c c6          	mov    %rcx,(%rsi,%rax,8)
    f735:	48 83 c0 01          	add    $0x1,%rax
    f739:	48 39 c7             	cmp    %rax,%rdi
    f73c:	75 e2                	jne    f720 <mbedtls_ct_mpi_uint_cond_assign+0x20>
    f73e:	c3                   	retq   
    f73f:	90                   	nop

000000000000f740 <mbedtls_ct_base64_enc_char>:
    f740:	f3 0f 1e fa          	endbr64 
    f744:	40 0f b6 ff          	movzbl %dil,%edi
    f748:	ba 3e 00 00 00       	mov    $0x3e,%edx
    f74d:	29 fa                	sub    %edi,%edx
    f74f:	8d 47 c2             	lea    -0x3e(%rdi),%eax
    f752:	8d 4f 41             	lea    0x41(%rdi),%ecx
    f755:	c1 ea 08             	shr    $0x8,%edx
    f758:	c1 e8 08             	shr    $0x8,%eax
    f75b:	09 d0                	or     %edx,%eax
    f75d:	f7 d0                	not    %eax
    f75f:	83 e0 2b             	and    $0x2b,%eax
    f762:	89 c2                	mov    %eax,%edx
    f764:	b8 19 00 00 00       	mov    $0x19,%eax
    f769:	29 f8                	sub    %edi,%eax
    f76b:	c1 e8 08             	shr    $0x8,%eax
    f76e:	f7 d0                	not    %eax
    f770:	21 c8                	and    %ecx,%eax
    f772:	b9 3f 00 00 00       	mov    $0x3f,%ecx
    f777:	09 d0                	or     %edx,%eax
    f779:	29 f9                	sub    %edi,%ecx
    f77b:	8d 57 c1             	lea    -0x3f(%rdi),%edx
    f77e:	c1 e9 08             	shr    $0x8,%ecx
    f781:	c1 ea 08             	shr    $0x8,%edx
    f784:	09 ca                	or     %ecx,%edx
    f786:	b9 33 00 00 00       	mov    $0x33,%ecx
    f78b:	f7 d2                	not    %edx
    f78d:	29 f9                	sub    %edi,%ecx
    f78f:	83 e2 2f             	and    $0x2f,%edx
    f792:	c1 e9 08             	shr    $0x8,%ecx
    f795:	09 d0                	or     %edx,%eax
    f797:	8d 57 e6             	lea    -0x1a(%rdi),%edx
    f79a:	c1 ea 08             	shr    $0x8,%edx
    f79d:	09 ca                	or     %ecx,%edx
    f79f:	8d 4f 47             	lea    0x47(%rdi),%ecx
    f7a2:	f7 d2                	not    %edx
    f7a4:	21 ca                	and    %ecx,%edx
    f7a6:	b9 3d 00 00 00       	mov    $0x3d,%ecx
    f7ab:	09 c2                	or     %eax,%edx
    f7ad:	29 f9                	sub    %edi,%ecx
    f7af:	8d 47 cc             	lea    -0x34(%rdi),%eax
    f7b2:	83 ef 04             	sub    $0x4,%edi
    f7b5:	c1 e8 08             	shr    $0x8,%eax
    f7b8:	c1 e9 08             	shr    $0x8,%ecx
    f7bb:	09 c8                	or     %ecx,%eax
    f7bd:	f7 d0                	not    %eax
    f7bf:	21 c7                	and    %eax,%edi
    f7c1:	89 f8                	mov    %edi,%eax
    f7c3:	09 d0                	or     %edx,%eax
    f7c5:	c3                   	retq   
    f7c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f7cd:	00 00 00 

000000000000f7d0 <mbedtls_ct_base64_dec_value>:
    f7d0:	f3 0f 1e fa          	endbr64 
    f7d4:	40 0f b6 ff          	movzbl %dil,%edi
    f7d8:	ba 5a 00 00 00       	mov    $0x5a,%edx
    f7dd:	b9 7a 00 00 00       	mov    $0x7a,%ecx
    f7e2:	29 fa                	sub    %edi,%edx
    f7e4:	8d 47 bf             	lea    -0x41(%rdi),%eax
    f7e7:	29 f9                	sub    %edi,%ecx
    f7e9:	c1 ea 08             	shr    $0x8,%edx
    f7ec:	c1 e8 08             	shr    $0x8,%eax
    f7ef:	09 d0                	or     %edx,%eax
    f7f1:	8d 57 c0             	lea    -0x40(%rdi),%edx
    f7f4:	c1 e9 08             	shr    $0x8,%ecx
    f7f7:	f7 d0                	not    %eax
    f7f9:	21 c2                	and    %eax,%edx
    f7fb:	8d 47 9f             	lea    -0x61(%rdi),%eax
    f7fe:	c1 e8 08             	shr    $0x8,%eax
    f801:	09 c8                	or     %ecx,%eax
    f803:	8d 4f ba             	lea    -0x46(%rdi),%ecx
    f806:	f7 d0                	not    %eax
    f808:	21 c8                	and    %ecx,%eax
    f80a:	b9 39 00 00 00       	mov    $0x39,%ecx
    f80f:	09 d0                	or     %edx,%eax
    f811:	29 f9                	sub    %edi,%ecx
    f813:	8d 57 d0             	lea    -0x30(%rdi),%edx
    f816:	c1 e9 08             	shr    $0x8,%ecx
    f819:	c1 ea 08             	shr    $0x8,%edx
    f81c:	09 ca                	or     %ecx,%edx
    f81e:	8d 4f 05             	lea    0x5(%rdi),%ecx
    f821:	f7 d2                	not    %edx
    f823:	21 ca                	and    %ecx,%edx
    f825:	b9 2b 00 00 00       	mov    $0x2b,%ecx
    f82a:	09 d0                	or     %edx,%eax
    f82c:	29 f9                	sub    %edi,%ecx
    f82e:	8d 57 d5             	lea    -0x2b(%rdi),%edx
    f831:	c1 e9 08             	shr    $0x8,%ecx
    f834:	c1 ea 08             	shr    $0x8,%edx
    f837:	09 ca                	or     %ecx,%edx
    f839:	8d 4f 14             	lea    0x14(%rdi),%ecx
    f83c:	f7 d2                	not    %edx
    f83e:	21 ca                	and    %ecx,%edx
    f840:	b9 2f 00 00 00       	mov    $0x2f,%ecx
    f845:	09 c2                	or     %eax,%edx
    f847:	29 f9                	sub    %edi,%ecx
    f849:	8d 47 d1             	lea    -0x2f(%rdi),%eax
    f84c:	83 c7 11             	add    $0x11,%edi
    f84f:	c1 e8 08             	shr    $0x8,%eax
    f852:	c1 e9 08             	shr    $0x8,%ecx
    f855:	09 c8                	or     %ecx,%eax
    f857:	f7 d0                	not    %eax
    f859:	21 c7                	and    %eax,%edi
    f85b:	09 d7                	or     %edx,%edi
    f85d:	8d 47 ff             	lea    -0x1(%rdi),%eax
    f860:	c3                   	retq   
    f861:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f868:	00 00 00 00 
    f86c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f870 <mbedtls_ct_memcpy_if_eq>:
    f870:	f3 0f 1e fa          	endbr64 
    f874:	4c 31 c1             	xor    %r8,%rcx
    f877:	48 89 c8             	mov    %rcx,%rax
    f87a:	48 f7 d8             	neg    %rax
    f87d:	48 09 c8             	or     %rcx,%rax
    f880:	48 c1 e8 3f          	shr    $0x3f,%rax
    f884:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
    f888:	45 89 ca             	mov    %r9d,%r10d
    f88b:	45 89 cb             	mov    %r9d,%r11d
    f88e:	48 83 fa 03          	cmp    $0x3,%rdx
    f892:	76 5c                	jbe    f8f0 <mbedtls_ct_memcpy_if_eq+0x80>
    f894:	b8 04 00 00 00       	mov    $0x4,%eax
    f899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f8a0:	44 8b 44 07 fc       	mov    -0x4(%rdi,%rax,1),%r8d
    f8a5:	8b 4c 06 fc          	mov    -0x4(%rsi,%rax,1),%ecx
    f8a9:	44 31 c1             	xor    %r8d,%ecx
    f8ac:	44 21 d1             	and    %r10d,%ecx
    f8af:	44 31 c1             	xor    %r8d,%ecx
    f8b2:	89 4c 07 fc          	mov    %ecx,-0x4(%rdi,%rax,1)
    f8b6:	48 89 c1             	mov    %rax,%rcx
    f8b9:	48 83 c0 04          	add    $0x4,%rax
    f8bd:	48 39 c2             	cmp    %rax,%rdx
    f8c0:	73 de                	jae    f8a0 <mbedtls_ct_memcpy_if_eq+0x30>
    f8c2:	44 89 c8             	mov    %r9d,%eax
    f8c5:	f7 d0                	not    %eax
    f8c7:	48 39 ca             	cmp    %rcx,%rdx
    f8ca:	76 20                	jbe    f8ec <mbedtls_ct_memcpy_if_eq+0x7c>
    f8cc:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
    f8d1:	44 0f b6 0c 0f       	movzbl (%rdi,%rcx,1),%r9d
    f8d6:	45 21 d8             	and    %r11d,%r8d
    f8d9:	41 21 c1             	and    %eax,%r9d
    f8dc:	45 09 c8             	or     %r9d,%r8d
    f8df:	44 88 04 0f          	mov    %r8b,(%rdi,%rcx,1)
    f8e3:	48 83 c1 01          	add    $0x1,%rcx
    f8e7:	48 39 ca             	cmp    %rcx,%rdx
    f8ea:	75 e0                	jne    f8cc <mbedtls_ct_memcpy_if_eq+0x5c>
    f8ec:	c3                   	retq   
    f8ed:	0f 1f 00             	nopl   (%rax)
    f8f0:	31 c9                	xor    %ecx,%ecx
    f8f2:	eb ce                	jmp    f8c2 <mbedtls_ct_memcpy_if_eq+0x52>
    f8f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f8fb:	00 00 00 00 
    f8ff:	90                   	nop

000000000000f900 <mbedtls_ct_memcpy_offset>:
    f900:	f3 0f 1e fa          	endbr64 
    f904:	4c 39 c1             	cmp    %r8,%rcx
    f907:	77 37                	ja     f940 <mbedtls_ct_memcpy_offset+0x40>
    f909:	41 55                	push   %r13
    f90b:	49 89 f5             	mov    %rsi,%r13
    f90e:	41 54                	push   %r12
    f910:	49 89 d4             	mov    %rdx,%r12
    f913:	4c 89 ca             	mov    %r9,%rdx
    f916:	55                   	push   %rbp
    f917:	4c 89 c5             	mov    %r8,%rbp
    f91a:	53                   	push   %rbx
    f91b:	48 89 cb             	mov    %rcx,%rbx
    f91e:	66 90                	xchg   %ax,%ax
    f920:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    f925:	48 89 d9             	mov    %rbx,%rcx
    f928:	4d 89 e0             	mov    %r12,%r8
    f92b:	48 83 c3 01          	add    $0x1,%rbx
    f92f:	e8 3c ff ff ff       	callq  f870 <mbedtls_ct_memcpy_if_eq>
    f934:	48 39 dd             	cmp    %rbx,%rbp
    f937:	73 e7                	jae    f920 <mbedtls_ct_memcpy_offset+0x20>
    f939:	5b                   	pop    %rbx
    f93a:	5d                   	pop    %rbp
    f93b:	41 5c                	pop    %r12
    f93d:	41 5d                	pop    %r13
    f93f:	c3                   	retq   
    f940:	c3                   	retq   
    f941:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f948:	00 00 00 00 
    f94c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f950 <mbedtls_ct_hmac>:
    f950:	f3 0f 1e fa          	endbr64 
    f954:	41 57                	push   %r15
    f956:	49 89 d7             	mov    %rdx,%r15
    f959:	41 56                	push   %r14
    f95b:	41 55                	push   %r13
    f95d:	49 89 f5             	mov    %rsi,%r13
    f960:	41 54                	push   %r12
    f962:	55                   	push   %rbp
    f963:	48 89 fd             	mov    %rdi,%rbp
    f966:	53                   	push   %rbx
    f967:	4c 89 cb             	mov    %r9,%rbx
    f96a:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    f971:	48 8b 3f             	mov    (%rdi),%rdi
    f974:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    f979:	4c 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%r14
    f980:	00 
    f981:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    f986:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f98b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f992:	00 00 
    f994:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    f99b:	00 
    f99c:	31 c0                	xor    %eax,%eax
    f99e:	e8 0d 0f 00 00       	callq  108b0 <mbedtls_md_get_type>
    f9a3:	ba 80 00 00 00       	mov    $0x80,%edx
    f9a8:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    f9ac:	83 f8 05             	cmp    $0x5,%eax
    f9af:	b8 40 00 00 00       	mov    $0x40,%eax
    f9b4:	48 0f 44 c2          	cmove  %rdx,%rax
    f9b8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    f9bd:	48 8b 45 10          	mov    0x10(%rbp),%rax
    f9c1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    f9c6:	e8 c5 0e 00 00       	callq  10890 <mbedtls_md_get_size>
    f9cb:	4c 89 e7             	mov    %r12,%rdi
    f9ce:	88 44 24 18          	mov    %al,0x18(%rsp)
    f9d2:	e8 f9 08 00 00       	callq  102d0 <mbedtls_md_init>
    f9d7:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    f9db:	31 d2                	xor    %edx,%edx
    f9dd:	4c 89 e7             	mov    %r12,%rdi
    f9e0:	e8 db 0a 00 00       	callq  104c0 <mbedtls_md_setup>
    f9e5:	85 c0                	test   %eax,%eax
    f9e7:	74 3f                	je     fa28 <mbedtls_ct_hmac+0xd8>
    f9e9:	4c 89 e7             	mov    %r12,%rdi
    f9ec:	89 44 24 08          	mov    %eax,0x8(%rsp)
    f9f0:	e8 fb 08 00 00       	callq  102f0 <mbedtls_md_free>
    f9f5:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    f9fc:	00 
    f9fd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fa04:	00 00 
    fa06:	8b 44 24 08          	mov    0x8(%rsp),%eax
    fa0a:	0f 85 dd 01 00 00    	jne    fbed <mbedtls_ct_hmac+0x29d>
    fa10:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    fa17:	5b                   	pop    %rbx
    fa18:	5d                   	pop    %rbp
    fa19:	41 5c                	pop    %r12
    fa1b:	41 5d                	pop    %r13
    fa1d:	41 5e                	pop    %r14
    fa1f:	41 5f                	pop    %r15
    fa21:	c3                   	retq   
    fa22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fa28:	4c 89 fa             	mov    %r15,%rdx
    fa2b:	4c 89 ee             	mov    %r13,%rsi
    fa2e:	48 89 ef             	mov    %rbp,%rdi
    fa31:	e8 ba 0c 00 00       	callq  106f0 <mbedtls_md_update>
    fa36:	85 c0                	test   %eax,%eax
    fa38:	75 af                	jne    f9e9 <mbedtls_ct_hmac+0x99>
    fa3a:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    fa3f:	48 89 da             	mov    %rbx,%rdx
    fa42:	48 89 ef             	mov    %rbp,%rdi
    fa45:	e8 a6 0c 00 00       	callq  106f0 <mbedtls_md_update>
    fa4a:	85 c0                	test   %eax,%eax
    fa4c:	75 9b                	jne    f9e9 <mbedtls_ct_hmac+0x99>
    fa4e:	48 b8 21 21 21 21 21 	movabs $0x2121212121212121,%rax
    fa55:	21 21 21 
    fa58:	44 0f b6 7c 24 18    	movzbl 0x18(%rsp),%r15d
    fa5e:	41 83 ff 08          	cmp    $0x8,%r15d
    fa62:	0f 83 a8 00 00 00    	jae    fb10 <mbedtls_ct_hmac+0x1c0>
    fa68:	41 f6 c7 04          	test   $0x4,%r15b
    fa6c:	0f 85 66 01 00 00    	jne    fbd8 <mbedtls_ct_hmac+0x288>
    fa72:	45 85 ff             	test   %r15d,%r15d
    fa75:	0f 85 bd 00 00 00    	jne    fb38 <mbedtls_ct_hmac+0x1e8>
    fa7b:	48 3b 9c 24 e0 00 00 	cmp    0xe0(%rsp),%rbx
    fa82:	00 
    fa83:	0f 87 cd 00 00 00    	ja     fb56 <mbedtls_ct_hmac+0x206>
    fa89:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
    fa8e:	eb 12                	jmp    faa2 <mbedtls_ct_hmac+0x152>
    fa90:	48 83 c3 01          	add    $0x1,%rbx
    fa94:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
    fa9b:	00 
    fa9c:	0f 82 be 00 00 00    	jb     fb60 <mbedtls_ct_hmac+0x210>
    faa2:	48 89 ee             	mov    %rbp,%rsi
    faa5:	4c 89 e7             	mov    %r12,%rdi
    faa8:	e8 23 09 00 00       	callq  103d0 <mbedtls_md_clone>
    faad:	85 c0                	test   %eax,%eax
    faaf:	0f 85 34 ff ff ff    	jne    f9e9 <mbedtls_ct_hmac+0x99>
    fab5:	4c 89 ee             	mov    %r13,%rsi
    fab8:	4c 89 e7             	mov    %r12,%rdi
    fabb:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    fac0:	e8 ab 0c 00 00       	callq  10770 <mbedtls_md_finish>
    fac5:	85 c0                	test   %eax,%eax
    fac7:	0f 85 1c ff ff ff    	jne    f9e9 <mbedtls_ct_hmac+0x99>
    facd:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    fad2:	48 89 d9             	mov    %rbx,%rcx
    fad5:	4c 89 fa             	mov    %r15,%rdx
    fad8:	4c 89 ee             	mov    %r13,%rsi
    fadb:	4c 89 f7             	mov    %r14,%rdi
    fade:	e8 8d fd ff ff       	callq  f870 <mbedtls_ct_memcpy_if_eq>
    fae3:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
    faea:	00 
    faeb:	76 a3                	jbe    fa90 <mbedtls_ct_hmac+0x140>
    faed:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    faf2:	ba 01 00 00 00       	mov    $0x1,%edx
    faf7:	48 89 ef             	mov    %rbp,%rdi
    fafa:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
    fafe:	e8 ed 0b 00 00       	callq  106f0 <mbedtls_md_update>
    fb03:	85 c0                	test   %eax,%eax
    fb05:	74 89                	je     fa90 <mbedtls_ct_hmac+0x140>
    fb07:	e9 dd fe ff ff       	jmpq   f9e9 <mbedtls_ct_hmac+0x99>
    fb0c:	0f 1f 40 00          	nopl   0x0(%rax)
    fb10:	49 8d 7e 08          	lea    0x8(%r14),%rdi
    fb14:	4c 89 f1             	mov    %r14,%rcx
    fb17:	49 89 06             	mov    %rax,(%r14)
    fb1a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    fb1e:	4b 89 44 3e f8       	mov    %rax,-0x8(%r14,%r15,1)
    fb23:	48 29 f9             	sub    %rdi,%rcx
    fb26:	44 01 f9             	add    %r15d,%ecx
    fb29:	c1 e9 03             	shr    $0x3,%ecx
    fb2c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    fb2f:	e9 47 ff ff ff       	jmpq   fa7b <mbedtls_ct_hmac+0x12b>
    fb34:	0f 1f 40 00          	nopl   0x0(%rax)
    fb38:	41 c6 06 21          	movb   $0x21,(%r14)
    fb3c:	41 f6 c7 02          	test   $0x2,%r15b
    fb40:	0f 84 35 ff ff ff    	je     fa7b <mbedtls_ct_hmac+0x12b>
    fb46:	b8 21 21 00 00       	mov    $0x2121,%eax
    fb4b:	66 43 89 44 3e fe    	mov    %ax,-0x2(%r14,%r15,1)
    fb51:	e9 25 ff ff ff       	jmpq   fa7b <mbedtls_ct_hmac+0x12b>
    fb56:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    fb5b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fb60:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    fb65:	48 89 ef             	mov    %rbp,%rdi
    fb68:	e8 03 0c 00 00       	callq  10770 <mbedtls_md_finish>
    fb6d:	85 c0                	test   %eax,%eax
    fb6f:	0f 85 74 fe ff ff    	jne    f9e9 <mbedtls_ct_hmac+0x99>
    fb75:	48 89 ef             	mov    %rbp,%rdi
    fb78:	e8 b3 0a 00 00       	callq  10630 <mbedtls_md_starts>
    fb7d:	85 c0                	test   %eax,%eax
    fb7f:	0f 85 64 fe ff ff    	jne    f9e9 <mbedtls_ct_hmac+0x99>
    fb85:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    fb8a:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    fb8f:	48 89 ef             	mov    %rbp,%rdi
    fb92:	48 01 d6             	add    %rdx,%rsi
    fb95:	e8 56 0b 00 00       	callq  106f0 <mbedtls_md_update>
    fb9a:	85 c0                	test   %eax,%eax
    fb9c:	0f 85 47 fe ff ff    	jne    f9e9 <mbedtls_ct_hmac+0x99>
    fba2:	4c 89 fa             	mov    %r15,%rdx
    fba5:	4c 89 f6             	mov    %r14,%rsi
    fba8:	48 89 ef             	mov    %rbp,%rdi
    fbab:	e8 40 0b 00 00       	callq  106f0 <mbedtls_md_update>
    fbb0:	85 c0                	test   %eax,%eax
    fbb2:	0f 85 31 fe ff ff    	jne    f9e9 <mbedtls_ct_hmac+0x99>
    fbb8:	4c 89 f6             	mov    %r14,%rsi
    fbbb:	48 89 ef             	mov    %rbp,%rdi
    fbbe:	e8 ad 0b 00 00       	callq  10770 <mbedtls_md_finish>
    fbc3:	85 c0                	test   %eax,%eax
    fbc5:	0f 85 1e fe ff ff    	jne    f9e9 <mbedtls_ct_hmac+0x99>
    fbcb:	48 89 ef             	mov    %rbp,%rdi
    fbce:	e8 bd 13 00 00       	callq  10f90 <mbedtls_md_hmac_reset>
    fbd3:	e9 11 fe ff ff       	jmpq   f9e9 <mbedtls_ct_hmac+0x99>
    fbd8:	41 c7 06 21 21 21 21 	movl   $0x21212121,(%r14)
    fbdf:	43 c7 44 3e fc 21 21 	movl   $0x21212121,-0x4(%r14,%r15,1)
    fbe6:	21 21 
    fbe8:	e9 8e fe ff ff       	jmpq   fa7b <mbedtls_ct_hmac+0x12b>
    fbed:	e8 8e 36 ff ff       	callq  3280 <__stack_chk_fail@plt>
    fbf2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    fbf9:	00 00 00 00 
    fbfd:	0f 1f 00             	nopl   (%rax)

000000000000fc00 <mbedtls_mpi_safe_cond_assign>:
    fc00:	f3 0f 1e fa          	endbr64 
    fc04:	41 56                	push   %r14
    fc06:	44 0f b6 f2          	movzbl %dl,%r14d
    fc0a:	41 55                	push   %r13
    fc0c:	41 54                	push   %r12
    fc0e:	41 89 d4             	mov    %edx,%r12d
    fc11:	55                   	push   %rbp
    fc12:	48 89 f5             	mov    %rsi,%rbp
    fc15:	53                   	push   %rbx
    fc16:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    fc1a:	48 89 fb             	mov    %rdi,%rbx
    fc1d:	e8 fe 95 ff ff       	callq  9220 <mbedtls_mpi_grow>
    fc22:	41 89 c5             	mov    %eax,%r13d
    fc25:	85 c0                	test   %eax,%eax
    fc27:	74 0f                	je     fc38 <mbedtls_mpi_safe_cond_assign+0x38>
    fc29:	5b                   	pop    %rbx
    fc2a:	44 89 e8             	mov    %r13d,%eax
    fc2d:	5d                   	pop    %rbp
    fc2e:	41 5c                	pop    %r12
    fc30:	41 5d                	pop    %r13
    fc32:	41 5e                	pop    %r14
    fc34:	c3                   	retq   
    fc35:	0f 1f 00             	nopl   (%rax)
    fc38:	8b 03                	mov    (%rbx),%eax
    fc3a:	41 0f b6 cc          	movzbl %r12b,%ecx
    fc3e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    fc42:	8d 34 09             	lea    (%rcx,%rcx,1),%esi
    fc45:	8d 50 01             	lea    0x1(%rax),%edx
    fc48:	8b 45 00             	mov    0x0(%rbp),%eax
    fc4b:	83 c0 01             	add    $0x1,%eax
    fc4e:	31 d0                	xor    %edx,%eax
    fc50:	21 f0                	and    %esi,%eax
    fc52:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    fc56:	31 d0                	xor    %edx,%eax
    fc58:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    fc5c:	83 e8 01             	sub    $0x1,%eax
    fc5f:	89 03                	mov    %eax,(%rbx)
    fc61:	e8 ba e9 ff ff       	callq  e620 <mbedtls_mpi_core_cond_assign>
    fc66:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    fc6a:	48 3b 53 08          	cmp    0x8(%rbx),%rdx
    fc6e:	73 b9                	jae    fc29 <mbedtls_mpi_safe_cond_assign+0x29>
    fc70:	4c 89 f6             	mov    %r14,%rsi
    fc73:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    fc77:	48 f7 de             	neg    %rsi
    fc7a:	4c 09 f6             	or     %r14,%rsi
    fc7d:	48 c1 fe 3f          	sar    $0x3f,%rsi
    fc81:	48 f7 d6             	not    %rsi
    fc84:	0f 1f 40 00          	nopl   0x0(%rax)
    fc88:	48 21 34 d1          	and    %rsi,(%rcx,%rdx,8)
    fc8c:	48 83 c2 01          	add    $0x1,%rdx
    fc90:	48 39 53 08          	cmp    %rdx,0x8(%rbx)
    fc94:	77 f2                	ja     fc88 <mbedtls_mpi_safe_cond_assign+0x88>
    fc96:	5b                   	pop    %rbx
    fc97:	44 89 e8             	mov    %r13d,%eax
    fc9a:	5d                   	pop    %rbp
    fc9b:	41 5c                	pop    %r12
    fc9d:	41 5d                	pop    %r13
    fc9f:	41 5e                	pop    %r14
    fca1:	c3                   	retq   
    fca2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    fca9:	00 00 00 00 
    fcad:	0f 1f 00             	nopl   (%rax)

000000000000fcb0 <mbedtls_mpi_safe_cond_swap>:
    fcb0:	f3 0f 1e fa          	endbr64 
    fcb4:	31 c0                	xor    %eax,%eax
    fcb6:	48 39 f7             	cmp    %rsi,%rdi
    fcb9:	0f 84 99 00 00 00    	je     fd58 <mbedtls_mpi_safe_cond_swap+0xa8>
    fcbf:	41 54                	push   %r12
    fcc1:	41 89 d4             	mov    %edx,%r12d
    fcc4:	55                   	push   %rbp
    fcc5:	48 89 f5             	mov    %rsi,%rbp
    fcc8:	53                   	push   %rbx
    fcc9:	48 89 fb             	mov    %rdi,%rbx
    fccc:	48 83 ec 10          	sub    $0x10,%rsp
    fcd0:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    fcd4:	e8 47 95 ff ff       	callq  9220 <mbedtls_mpi_grow>
    fcd9:	85 c0                	test   %eax,%eax
    fcdb:	74 13                	je     fcf0 <mbedtls_mpi_safe_cond_swap+0x40>
    fcdd:	48 83 c4 10          	add    $0x10,%rsp
    fce1:	5b                   	pop    %rbx
    fce2:	5d                   	pop    %rbp
    fce3:	41 5c                	pop    %r12
    fce5:	c3                   	retq   
    fce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fced:	00 00 00 
    fcf0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    fcf4:	48 89 ef             	mov    %rbp,%rdi
    fcf7:	e8 24 95 ff ff       	callq  9220 <mbedtls_mpi_grow>
    fcfc:	85 c0                	test   %eax,%eax
    fcfe:	75 dd                	jne    fcdd <mbedtls_mpi_safe_cond_swap+0x2d>
    fd00:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    fd04:	8b 03                	mov    (%rbx),%eax
    fd06:	41 0f b6 cc          	movzbl %r12b,%ecx
    fd0a:	8d 3c 09             	lea    (%rcx,%rcx,1),%edi
    fd0d:	8d 50 01             	lea    0x1(%rax),%edx
    fd10:	8b 45 00             	mov    0x0(%rbp),%eax
    fd13:	8d 70 01             	lea    0x1(%rax),%esi
    fd16:	31 d6                	xor    %edx,%esi
    fd18:	21 fe                	and    %edi,%esi
    fd1a:	31 d6                	xor    %edx,%esi
    fd1c:	83 ee 01             	sub    $0x1,%esi
    fd1f:	89 33                	mov    %esi,(%rbx)
    fd21:	8b 45 00             	mov    0x0(%rbp),%eax
    fd24:	8d 70 01             	lea    0x1(%rax),%esi
    fd27:	31 f2                	xor    %esi,%edx
    fd29:	21 fa                	and    %edi,%edx
    fd2b:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    fd2f:	31 f2                	xor    %esi,%edx
    fd31:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    fd35:	83 ea 01             	sub    $0x1,%edx
    fd38:	89 55 00             	mov    %edx,0x0(%rbp)
    fd3b:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    fd3f:	e8 0c e9 ff ff       	callq  e650 <mbedtls_mpi_core_cond_swap>
    fd44:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    fd48:	48 83 c4 10          	add    $0x10,%rsp
    fd4c:	5b                   	pop    %rbx
    fd4d:	5d                   	pop    %rbp
    fd4e:	41 5c                	pop    %r12
    fd50:	c3                   	retq   
    fd51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fd58:	c3                   	retq   
    fd59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000fd60 <mbedtls_mpi_core_lt_ct>:
    fd60:	f3 0f 1e fa          	endbr64 
    fd64:	48 85 d2             	test   %rdx,%rdx
    fd67:	74 6f                	je     fdd8 <mbedtls_mpi_core_lt_ct+0x78>
    fd69:	55                   	push   %rbp
    fd6a:	45 31 c9             	xor    %r9d,%r9d
    fd6d:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    fd73:	53                   	push   %rbx
    fd74:	31 db                	xor    %ebx,%ebx
    fd76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fd7d:	00 00 00 
    fd80:	48 8b 44 d6 f8       	mov    -0x8(%rsi,%rdx,8),%rax
    fd85:	48 8b 4c d7 f8       	mov    -0x8(%rdi,%rdx,8),%rcx
    fd8a:	48 89 c5             	mov    %rax,%rbp
    fd8d:	49 89 cb             	mov    %rcx,%r11
    fd90:	49 89 c8             	mov    %rcx,%r8
    fd93:	48 29 cd             	sub    %rcx,%rbp
    fd96:	49 31 c3             	xor    %rax,%r11
    fd99:	48 29 c1             	sub    %rax,%rcx
    fd9c:	49 31 e8             	xor    %rbp,%r8
    fd9f:	48 31 c8             	xor    %rcx,%rax
    fda2:	4d 21 d8             	and    %r11,%r8
    fda5:	4c 21 d8             	and    %r11,%rax
    fda8:	49 31 e8             	xor    %rbp,%r8
    fdab:	48 31 c8             	xor    %rcx,%rax
    fdae:	44 89 d1             	mov    %r10d,%ecx
    fdb1:	49 c1 e8 3f          	shr    $0x3f,%r8
    fdb5:	48 c1 e8 3f          	shr    $0x3f,%rax
    fdb9:	41 09 d8             	or     %ebx,%r8d
    fdbc:	44 29 c1             	sub    %r8d,%ecx
    fdbf:	44 89 c3             	mov    %r8d,%ebx
    fdc2:	21 c1                	and    %eax,%ecx
    fdc4:	09 c3                	or     %eax,%ebx
    fdc6:	41 09 c9             	or     %ecx,%r9d
    fdc9:	48 83 ea 01          	sub    $0x1,%rdx
    fdcd:	75 b1                	jne    fd80 <mbedtls_mpi_core_lt_ct+0x20>
    fdcf:	44 89 c8             	mov    %r9d,%eax
    fdd2:	5b                   	pop    %rbx
    fdd3:	5d                   	pop    %rbp
    fdd4:	c3                   	retq   
    fdd5:	0f 1f 00             	nopl   (%rax)
    fdd8:	45 31 c9             	xor    %r9d,%r9d
    fddb:	44 89 c8             	mov    %r9d,%eax
    fdde:	c3                   	retq   
    fddf:	90                   	nop

000000000000fde0 <mbedtls_mpi_lt_mpi_ct>:
    fde0:	f3 0f 1e fa          	endbr64 
    fde4:	4c 8b 47 08          	mov    0x8(%rdi),%r8
    fde8:	4c 3b 46 08          	cmp    0x8(%rsi),%r8
    fdec:	0f 85 d1 00 00 00    	jne    fec3 <mbedtls_mpi_lt_mpi_ct+0xe3>
    fdf2:	8b 07                	mov    (%rdi),%eax
    fdf4:	44 8b 0e             	mov    (%rsi),%r9d
    fdf7:	d1 f8                	sar    %eax
    fdf9:	41 d1 f9             	sar    %r9d
    fdfc:	41 89 c3             	mov    %eax,%r11d
    fdff:	41 31 c1             	xor    %eax,%r9d
    fe02:	41 83 e3 01          	and    $0x1,%r11d
    fe06:	45 89 ca             	mov    %r9d,%r10d
    fe09:	45 21 d9             	and    %r11d,%r9d
    fe0c:	41 83 e2 01          	and    $0x1,%r10d
    fe10:	44 89 0a             	mov    %r9d,(%rdx)
    fe13:	4d 85 c0             	test   %r8,%r8
    fe16:	0f 84 a4 00 00 00    	je     fec0 <mbedtls_mpi_lt_mpi_ct+0xe0>
    fe1c:	41 56                	push   %r14
    fe1e:	41 55                	push   %r13
    fe20:	41 54                	push   %r12
    fe22:	55                   	push   %rbp
    fe23:	53                   	push   %rbx
    fe24:	bb 01 00 00 00       	mov    $0x1,%ebx
    fe29:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
    fe2d:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    fe31:	44 29 db             	sub    %r11d,%ebx
    fe34:	bf 01 00 00 00       	mov    $0x1,%edi
    fe39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fe40:	4a 8b 44 c5 f8       	mov    -0x8(%rbp,%r8,8),%rax
    fe45:	4f 8b 6c c4 f8       	mov    -0x8(%r12,%r8,8),%r13
    fe4a:	48 89 c6             	mov    %rax,%rsi
    fe4d:	4d 89 ee             	mov    %r13,%r14
    fe50:	4c 89 e9             	mov    %r13,%rcx
    fe53:	4c 29 ee             	sub    %r13,%rsi
    fe56:	49 29 c5             	sub    %rax,%r13
    fe59:	49 31 c6             	xor    %rax,%r14
    fe5c:	48 31 f1             	xor    %rsi,%rcx
    fe5f:	4c 31 e8             	xor    %r13,%rax
    fe62:	4c 21 f1             	and    %r14,%rcx
    fe65:	4c 21 f0             	and    %r14,%rax
    fe68:	41 89 fe             	mov    %edi,%r14d
    fe6b:	45 29 d6             	sub    %r10d,%r14d
    fe6e:	48 31 f1             	xor    %rsi,%rcx
    fe71:	44 89 d6             	mov    %r10d,%esi
    fe74:	4c 31 e8             	xor    %r13,%rax
    fe77:	48 c1 e9 3f          	shr    $0x3f,%rcx
    fe7b:	45 89 f2             	mov    %r14d,%r10d
    fe7e:	48 c1 e8 3f          	shr    $0x3f,%rax
    fe82:	41 89 dd             	mov    %ebx,%r13d
    fe85:	45 21 da             	and    %r11d,%r10d
    fe88:	09 ce                	or     %ecx,%esi
    fe8a:	41 21 c5             	and    %eax,%r13d
    fe8d:	44 21 d1             	and    %r10d,%ecx
    fe90:	41 89 fa             	mov    %edi,%r10d
    fe93:	41 29 f2             	sub    %esi,%r10d
    fe96:	09 c6                	or     %eax,%esi
    fe98:	45 21 ea             	and    %r13d,%r10d
    fe9b:	44 09 d1             	or     %r10d,%ecx
    fe9e:	41 89 f2             	mov    %esi,%r10d
    fea1:	41 09 c9             	or     %ecx,%r9d
    fea4:	49 83 e8 01          	sub    $0x1,%r8
    fea8:	75 96                	jne    fe40 <mbedtls_mpi_lt_mpi_ct+0x60>
    feaa:	5b                   	pop    %rbx
    feab:	31 c0                	xor    %eax,%eax
    fead:	5d                   	pop    %rbp
    feae:	44 89 0a             	mov    %r9d,(%rdx)
    feb1:	41 5c                	pop    %r12
    feb3:	41 5d                	pop    %r13
    feb5:	41 5e                	pop    %r14
    feb7:	c3                   	retq   
    feb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    febf:	00 
    fec0:	31 c0                	xor    %eax,%eax
    fec2:	c3                   	retq   
    fec3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    fec8:	c3                   	retq   
    fec9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000fed0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding>:
    fed0:	f3 0f 1e fa          	endbr64 
    fed4:	41 57                	push   %r15
    fed6:	41 56                	push   %r14
    fed8:	41 55                	push   %r13
    feda:	4d 89 c5             	mov    %r8,%r13
    fedd:	4c 8d 46 f5          	lea    -0xb(%rsi),%r8
    fee1:	41 54                	push   %r12
    fee3:	55                   	push   %rbp
    fee4:	53                   	push   %rbx
    fee5:	48 83 ec 18          	sub    $0x18,%rsp
    fee9:	0f b6 5f 01          	movzbl 0x1(%rdi),%ebx
    feed:	49 39 c8             	cmp    %rcx,%r8
    fef0:	4c 0f 47 c1          	cmova  %rcx,%r8
    fef4:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    fef9:	83 f3 02             	xor    $0x2,%ebx
    fefc:	0a 1f                	or     (%rdi),%bl
    fefe:	0f b6 db             	movzbl %bl,%ebx
    ff01:	48 83 fe 02          	cmp    $0x2,%rsi
    ff05:	0f 86 9d 01 00 00    	jbe    100a8 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1d8>
    ff0b:	4c 8d 4f 02          	lea    0x2(%rdi),%r9
    ff0f:	4c 8d 1c 37          	lea    (%rdi,%rsi,1),%r11
    ff13:	31 d2                	xor    %edx,%edx
    ff15:	45 31 d2             	xor    %r10d,%r10d
    ff18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ff1f:	00 
    ff20:	41 0f b6 29          	movzbl (%r9),%ebp
    ff24:	49 83 c1 01          	add    $0x1,%r9
    ff28:	89 e8                	mov    %ebp,%eax
    ff2a:	f7 d8                	neg    %eax
    ff2c:	09 e8                	or     %ebp,%eax
    ff2e:	c0 e8 07             	shr    $0x7,%al
    ff31:	83 f0 01             	xor    $0x1,%eax
    ff34:	09 c2                	or     %eax,%edx
    ff36:	89 d0                	mov    %edx,%eax
    ff38:	f7 d8                	neg    %eax
    ff3a:	09 d0                	or     %edx,%eax
    ff3c:	c0 e8 07             	shr    $0x7,%al
    ff3f:	83 f0 01             	xor    $0x1,%eax
    ff42:	0f b6 c0             	movzbl %al,%eax
    ff45:	49 01 c2             	add    %rax,%r10
    ff48:	4d 39 cb             	cmp    %r9,%r11
    ff4b:	75 d3                	jne    ff20 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x50>
    ff4d:	0f b6 d2             	movzbl %dl,%edx
    ff50:	44 89 d0             	mov    %r10d,%eax
    ff53:	49 83 ea 08          	sub    $0x8,%r10
    ff57:	f7 da                	neg    %edx
    ff59:	49 c1 ea 3f          	shr    $0x3f,%r10
    ff5d:	c1 ea 1f             	shr    $0x1f,%edx
    ff60:	83 f2 01             	xor    $0x1,%edx
    ff63:	44 09 d2             	or     %r10d,%edx
    ff66:	44 8d 5e fd          	lea    -0x3(%rsi),%r11d
    ff6a:	09 da                	or     %ebx,%edx
    ff6c:	41 29 c3             	sub    %eax,%r11d
    ff6f:	89 d0                	mov    %edx,%eax
    ff71:	44 89 db             	mov    %r11d,%ebx
    ff74:	f7 d8                	neg    %eax
    ff76:	44 31 c3             	xor    %r8d,%ebx
    ff79:	09 d0                	or     %edx,%eax
    ff7b:	c1 f8 1f             	sar    $0x1f,%eax
    ff7e:	21 c3                	and    %eax,%ebx
    ff80:	44 31 db             	xor    %r11d,%ebx
    ff83:	41 89 d9             	mov    %ebx,%r9d
    ff86:	4c 89 c3             	mov    %r8,%rbx
    ff89:	4c 29 cb             	sub    %r9,%rbx
    ff8c:	4d 89 cb             	mov    %r9,%r11
    ff8f:	49 89 d9             	mov    %rbx,%r9
    ff92:	48 c1 eb 3f          	shr    $0x3f,%rbx
    ff96:	49 c1 f9 3f          	sar    $0x3f,%r9
    ff9a:	41 09 d9             	or     %ebx,%r9d
    ff9d:	09 d3                	or     %edx,%ebx
    ff9f:	41 c1 f9 1f          	sar    $0x1f,%r9d
    ffa3:	89 da                	mov    %ebx,%edx
    ffa5:	45 89 ca             	mov    %r9d,%r10d
    ffa8:	f7 da                	neg    %edx
    ffaa:	41 81 e2 00 44 00 00 	and    $0x4400,%r10d
    ffb1:	09 da                	or     %ebx,%edx
    ffb3:	45 89 d4             	mov    %r10d,%r12d
    ffb6:	c1 fa 1f             	sar    $0x1f,%edx
    ffb9:	41 81 f4 00 41 00 00 	xor    $0x4100,%r12d
    ffc0:	f7 d2                	not    %edx
    ffc2:	41 21 c4             	and    %eax,%r12d
    ffc5:	48 8d 47 0b          	lea    0xb(%rdi),%rax
    ffc9:	45 31 d4             	xor    %r10d,%r12d
    ffcc:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
    ffd0:	41 f7 dc             	neg    %r12d
    ffd3:	48 83 fe 0b          	cmp    $0xb,%rsi
    ffd7:	76 12                	jbe    ffeb <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x11b>
    ffd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ffe0:	20 10                	and    %dl,(%rax)
    ffe2:	48 83 c0 01          	add    $0x1,%rax
    ffe6:	49 39 c2             	cmp    %rax,%r10
    ffe9:	75 f5                	jne    ffe0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x110>
    ffeb:	44 89 db             	mov    %r11d,%ebx
    ffee:	4c 29 c6             	sub    %r8,%rsi
    fff1:	44 31 c3             	xor    %r8d,%ebx
    fff4:	48 8d 2c 37          	lea    (%rdi,%rsi,1),%rbp
    fff8:	44 21 cb             	and    %r9d,%ebx
    fffb:	44 31 db             	xor    %r11d,%ebx
    fffe:	4d 85 c0             	test   %r8,%r8
   10001:	74 6e                	je     10071 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a1>
   10003:	4d 8d 70 ff          	lea    -0x1(%r8),%r14
   10007:	49 89 d9             	mov    %rbx,%r9
   1000a:	4d 89 c7             	mov    %r8,%r15
   1000d:	4e 8d 54 35 00       	lea    0x0(%rbp,%r14,1),%r10
   10012:	49 f7 d9             	neg    %r9
   10015:	49 29 df             	sub    %rbx,%r15
   10018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1001f:	00 
   10020:	4c 89 ce             	mov    %r9,%rsi
   10023:	4c 89 c8             	mov    %r9,%rax
   10026:	48 89 ea             	mov    %rbp,%rdx
   10029:	48 c1 fe 3f          	sar    $0x3f,%rsi
   1002d:	48 c1 e8 3f          	shr    $0x3f,%rax
   10031:	48 89 f7             	mov    %rsi,%rdi
   10034:	09 c7                	or     %eax,%edi
   10036:	c1 ff 1f             	sar    $0x1f,%edi
   10039:	4d 85 f6             	test   %r14,%r14
   1003c:	74 21                	je     1005f <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x18f>
   1003e:	66 90                	xchg   %ax,%ax
   10040:	0f b6 02             	movzbl (%rdx),%eax
   10043:	49 89 d3             	mov    %rdx,%r11
   10046:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
   1004a:	48 83 c2 01          	add    $0x1,%rdx
   1004e:	31 f0                	xor    %esi,%eax
   10050:	0f b6 c0             	movzbl %al,%eax
   10053:	21 f8                	and    %edi,%eax
   10055:	31 c6                	xor    %eax,%esi
   10057:	41 88 33             	mov    %sil,(%r11)
   1005a:	49 39 d2             	cmp    %rdx,%r10
   1005d:	75 e1                	jne    10040 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x170>
   1005f:	41 0f b6 02          	movzbl (%r10),%eax
   10063:	49 83 c1 01          	add    $0x1,%r9
   10067:	21 c7                	and    %eax,%edi
   10069:	41 88 3a             	mov    %dil,(%r10)
   1006c:	4d 39 cf             	cmp    %r9,%r15
   1006f:	75 af                	jne    10020 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x150>
   10071:	48 85 c9             	test   %rcx,%rcx
   10074:	75 1a                	jne    10090 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1c0>
   10076:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   1007a:	48 83 c4 18          	add    $0x18,%rsp
   1007e:	44 89 e0             	mov    %r12d,%eax
   10081:	5b                   	pop    %rbx
   10082:	5d                   	pop    %rbp
   10083:	41 5c                	pop    %r12
   10085:	41 5d                	pop    %r13
   10087:	41 5e                	pop    %r14
   10089:	41 5f                	pop    %r15
   1008b:	c3                   	retq   
   1008c:	0f 1f 40 00          	nopl   0x0(%rax)
   10090:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   10095:	4c 89 c2             	mov    %r8,%rdx
   10098:	48 89 ee             	mov    %rbp,%rsi
   1009b:	e8 80 32 ff ff       	callq  3320 <memcpy@plt>
   100a0:	eb d4                	jmp    10076 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a6>
   100a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   100a8:	ba 01 00 00 00       	mov    $0x1,%edx
   100ad:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   100b3:	31 c0                	xor    %eax,%eax
   100b5:	e9 a9 fe ff ff       	jmpq   ff63 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x93>
   100ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000100c0 <mbedtls_hash_info_get_size>:
   100c0:	f3 0f 1e fa          	endbr64 
   100c4:	83 ff 01             	cmp    $0x1,%edi
   100c7:	74 37                	je     10100 <mbedtls_hash_info_get_size+0x40>
   100c9:	b8 07 00 00 00       	mov    $0x7,%eax
   100ce:	48 8d 0d eb 8d 00 00 	lea    0x8deb(%rip),%rcx        # 18ec0 <hash_table>
   100d5:	eb 13                	jmp    100ea <mbedtls_hash_info_get_size+0x2a>
   100d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   100de:	00 00 
   100e0:	85 c0                	test   %eax,%eax
   100e2:	74 0e                	je     100f2 <mbedtls_hash_info_get_size+0x32>
   100e4:	8b 42 10             	mov    0x10(%rdx),%eax
   100e7:	48 89 d1             	mov    %rdx,%rcx
   100ea:	48 8d 51 0c          	lea    0xc(%rcx),%rdx
   100ee:	39 c7                	cmp    %eax,%edi
   100f0:	75 ee                	jne    100e0 <mbedtls_hash_info_get_size+0x20>
   100f2:	0f b6 41 14          	movzbl 0x14(%rcx),%eax
   100f6:	c3                   	retq   
   100f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   100fe:	00 00 
   10100:	b8 10 00 00 00       	mov    $0x10,%eax
   10105:	c3                   	retq   
   10106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1010d:	00 00 00 

0000000000010110 <mbedtls_hash_info_get_block_size>:
   10110:	f3 0f 1e fa          	endbr64 
   10114:	83 ff 01             	cmp    $0x1,%edi
   10117:	74 37                	je     10150 <mbedtls_hash_info_get_block_size+0x40>
   10119:	b8 07 00 00 00       	mov    $0x7,%eax
   1011e:	48 8d 0d 9b 8d 00 00 	lea    0x8d9b(%rip),%rcx        # 18ec0 <hash_table>
   10125:	eb 13                	jmp    1013a <mbedtls_hash_info_get_block_size+0x2a>
   10127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1012e:	00 00 
   10130:	85 c0                	test   %eax,%eax
   10132:	74 0e                	je     10142 <mbedtls_hash_info_get_block_size+0x32>
   10134:	8b 42 10             	mov    0x10(%rdx),%eax
   10137:	48 89 d1             	mov    %rdx,%rcx
   1013a:	48 8d 51 0c          	lea    0xc(%rcx),%rdx
   1013e:	39 c7                	cmp    %eax,%edi
   10140:	75 ee                	jne    10130 <mbedtls_hash_info_get_block_size+0x20>
   10142:	0f b6 41 15          	movzbl 0x15(%rcx),%eax
   10146:	c3                   	retq   
   10147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1014e:	00 00 
   10150:	b8 40 00 00 00       	mov    $0x40,%eax
   10155:	c3                   	retq   
   10156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1015d:	00 00 00 

0000000000010160 <mbedtls_hash_info_psa_from_md>:
   10160:	f3 0f 1e fa          	endbr64 
   10164:	83 ff 01             	cmp    $0x1,%edi
   10167:	74 37                	je     101a0 <mbedtls_hash_info_psa_from_md+0x40>
   10169:	b8 07 00 00 00       	mov    $0x7,%eax
   1016e:	48 8d 0d 4b 8d 00 00 	lea    0x8d4b(%rip),%rcx        # 18ec0 <hash_table>
   10175:	eb 13                	jmp    1018a <mbedtls_hash_info_psa_from_md+0x2a>
   10177:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1017e:	00 00 
   10180:	85 c0                	test   %eax,%eax
   10182:	74 0e                	je     10192 <mbedtls_hash_info_psa_from_md+0x32>
   10184:	8b 42 10             	mov    0x10(%rdx),%eax
   10187:	48 89 d1             	mov    %rdx,%rcx
   1018a:	48 8d 51 0c          	lea    0xc(%rcx),%rdx
   1018e:	39 c7                	cmp    %eax,%edi
   10190:	75 ee                	jne    10180 <mbedtls_hash_info_psa_from_md+0x20>
   10192:	8b 41 0c             	mov    0xc(%rcx),%eax
   10195:	c3                   	retq   
   10196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1019d:	00 00 00 
   101a0:	b8 03 00 00 02       	mov    $0x2000003,%eax
   101a5:	c3                   	retq   
   101a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   101ad:	00 00 00 

00000000000101b0 <mbedtls_hash_info_md_from_psa>:
   101b0:	f3 0f 1e fa          	endbr64 
   101b4:	ba 03 00 00 02       	mov    $0x2000003,%edx
   101b9:	48 8d 05 00 8d 00 00 	lea    0x8d00(%rip),%rax        # 18ec0 <hash_table>
   101c0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   101c6:	eb 17                	jmp    101df <mbedtls_hash_info_md_from_psa+0x2f>
   101c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   101cf:	00 
   101d0:	44 8b 40 10          	mov    0x10(%rax),%r8d
   101d4:	48 83 c0 0c          	add    $0xc,%rax
   101d8:	45 85 c0             	test   %r8d,%r8d
   101db:	74 06                	je     101e3 <mbedtls_hash_info_md_from_psa+0x33>
   101dd:	8b 10                	mov    (%rax),%edx
   101df:	39 d7                	cmp    %edx,%edi
   101e1:	75 ed                	jne    101d0 <mbedtls_hash_info_md_from_psa+0x20>
   101e3:	44 89 c0             	mov    %r8d,%eax
   101e6:	c3                   	retq   
   101e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   101ee:	00 00 

00000000000101f0 <mbedtls_md_error_from_psa>:
   101f0:	f3 0f 1e fa          	endbr64 
   101f4:	81 ff 7a ff ff ff    	cmp    $0xffffff7a,%edi
   101fa:	74 3c                	je     10238 <mbedtls_md_error_from_psa+0x48>
   101fc:	81 ff 7b ff ff ff    	cmp    $0xffffff7b,%edi
   10202:	7d 24                	jge    10228 <mbedtls_md_error_from_psa+0x38>
   10204:	b8 80 ae ff ff       	mov    $0xffffae80,%eax
   10209:	81 ff 73 ff ff ff    	cmp    $0xffffff73,%edi
   1020f:	74 2c                	je     1023d <mbedtls_md_error_from_psa+0x4d>
   10211:	81 ff 79 ff ff ff    	cmp    $0xffffff79,%edi
   10217:	ba 00 af ff ff       	mov    $0xffffaf00,%edx
   1021c:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
   10221:	0f 44 c2             	cmove  %edx,%eax
   10224:	c3                   	retq   
   10225:	0f 1f 00             	nopl   (%rax)
   10228:	83 ff 01             	cmp    $0x1,%edi
   1022b:	19 c0                	sbb    %eax,%eax
   1022d:	f7 d0                	not    %eax
   1022f:	83 e0 90             	and    $0xffffff90,%eax
   10232:	c3                   	retq   
   10233:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10238:	b8 80 af ff ff       	mov    $0xffffaf80,%eax
   1023d:	c3                   	retq   
   1023e:	66 90                	xchg   %ax,%ax

0000000000010240 <mbedtls_md_info_from_type>:
   10240:	f3 0f 1e fa          	endbr64 
   10244:	83 ff 07             	cmp    $0x7,%edi
   10247:	77 7f                	ja     102c8 <mbedtls_md_info_from_type+0x88>
   10249:	48 8d 15 d0 8c 00 00 	lea    0x8cd0(%rip),%rdx        # 18f20 <hash_table+0x60>
   10250:	89 ff                	mov    %edi,%edi
   10252:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
   10256:	48 01 d0             	add    %rdx,%rax
   10259:	3e ff e0             	notrack jmpq *%rax
   1025c:	0f 1f 40 00          	nopl   0x0(%rax)
   10260:	48 8d 05 e9 fc 00 00 	lea    0xfce9(%rip),%rax        # 1ff50 <mbedtls_ripemd160_info>
   10267:	c3                   	retq   
   10268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1026f:	00 
   10270:	48 8d 05 e9 fc 00 00 	lea    0xfce9(%rip),%rax        # 1ff60 <mbedtls_md5_info>
   10277:	c3                   	retq   
   10278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1027f:	00 
   10280:	48 8d 05 b9 fc 00 00 	lea    0xfcb9(%rip),%rax        # 1ff40 <mbedtls_sha1_info>
   10287:	c3                   	retq   
   10288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1028f:	00 
   10290:	48 8d 05 99 fc 00 00 	lea    0xfc99(%rip),%rax        # 1ff30 <mbedtls_sha224_info>
   10297:	c3                   	retq   
   10298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1029f:	00 
   102a0:	48 8d 05 69 fc 00 00 	lea    0xfc69(%rip),%rax        # 1ff10 <mbedtls_sha384_info>
   102a7:	c3                   	retq   
   102a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   102af:	00 
   102b0:	48 8d 05 49 fc 00 00 	lea    0xfc49(%rip),%rax        # 1ff00 <mbedtls_sha512_info>
   102b7:	c3                   	retq   
   102b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   102bf:	00 
   102c0:	48 8d 05 59 fc 00 00 	lea    0xfc59(%rip),%rax        # 1ff20 <mbedtls_sha256_info>
   102c7:	c3                   	retq   
   102c8:	31 c0                	xor    %eax,%eax
   102ca:	c3                   	retq   
   102cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000102d0 <mbedtls_md_init>:
   102d0:	f3 0f 1e fa          	endbr64 
   102d4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   102d8:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   102df:	00 
   102e0:	0f 11 07             	movups %xmm0,(%rdi)
   102e3:	c3                   	retq   
   102e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   102eb:	00 00 00 00 
   102ef:	90                   	nop

00000000000102f0 <mbedtls_md_free>:
   102f0:	f3 0f 1e fa          	endbr64 
   102f4:	48 85 ff             	test   %rdi,%rdi
   102f7:	0f 84 c3 00 00 00    	je     103c0 <mbedtls_md_free+0xd0>
   102fd:	55                   	push   %rbp
   102fe:	48 8b 07             	mov    (%rdi),%rax
   10301:	48 89 fd             	mov    %rdi,%rbp
   10304:	48 85 c0             	test   %rax,%rax
   10307:	74 67                	je     10370 <mbedtls_md_free+0x80>
   10309:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1030d:	48 85 ff             	test   %rdi,%rdi
   10310:	74 2c                	je     1033e <mbedtls_md_free+0x4e>
   10312:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   10316:	77 21                	ja     10339 <mbedtls_md_free+0x49>
   10318:	8b 40 08             	mov    0x8(%rax),%eax
   1031b:	48 8d 15 1e 8c 00 00 	lea    0x8c1e(%rip),%rdx        # 18f40 <hash_table+0x80>
   10322:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   10326:	48 01 d0             	add    %rdx,%rax
   10329:	3e ff e0             	notrack jmpq *%rax
   1032c:	0f 1f 40 00          	nopl   0x0(%rax)
   10330:	e8 1b 0e 00 00       	callq  11150 <mbedtls_md5_free>
   10335:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   10339:	e8 c2 2e ff ff       	callq  3200 <free@plt>
   1033e:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   10342:	48 85 ff             	test   %rdi,%rdi
   10345:	74 1b                	je     10362 <mbedtls_md_free+0x72>
   10347:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1034b:	0f b6 70 0d          	movzbl 0xd(%rax),%esi
   1034f:	01 f6                	add    %esi,%esi
   10351:	48 63 f6             	movslq %esi,%rsi
   10354:	e8 d7 25 00 00       	callq  12930 <mbedtls_platform_zeroize>
   10359:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1035d:	e8 9e 2e ff ff       	callq  3200 <free@plt>
   10362:	48 89 ef             	mov    %rbp,%rdi
   10365:	be 18 00 00 00       	mov    $0x18,%esi
   1036a:	5d                   	pop    %rbp
   1036b:	e9 c0 25 00 00       	jmpq   12930 <mbedtls_platform_zeroize>
   10370:	5d                   	pop    %rbp
   10371:	c3                   	retq   
   10372:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10378:	e8 e3 5c 00 00       	callq  16060 <mbedtls_sha512_free>
   1037d:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   10381:	e8 7a 2e ff ff       	callq  3200 <free@plt>
   10386:	eb b6                	jmp    1033e <mbedtls_md_free+0x4e>
   10388:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1038f:	00 
   10390:	e8 0b 79 ff ff       	callq  7ca0 <mbedtls_sha256_free>
   10395:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   10399:	e8 62 2e ff ff       	callq  3200 <free@plt>
   1039e:	eb 9e                	jmp    1033e <mbedtls_md_free+0x4e>
   103a0:	e8 7b 26 00 00       	callq  12a20 <mbedtls_ripemd160_free>
   103a5:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   103a9:	eb 8e                	jmp    10339 <mbedtls_md_free+0x49>
   103ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   103b0:	e8 fb 42 00 00       	callq  146b0 <mbedtls_sha1_free>
   103b5:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   103b9:	e9 7b ff ff ff       	jmpq   10339 <mbedtls_md_free+0x49>
   103be:	66 90                	xchg   %ax,%ax
   103c0:	c3                   	retq   
   103c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   103c8:	00 00 00 00 
   103cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000103d0 <mbedtls_md_clone>:
   103d0:	f3 0f 1e fa          	endbr64 
   103d4:	48 85 ff             	test   %rdi,%rdi
   103d7:	0f 84 cb 00 00 00    	je     104a8 <mbedtls_md_clone+0xd8>
   103dd:	48 8b 17             	mov    (%rdi),%rdx
   103e0:	48 85 d2             	test   %rdx,%rdx
   103e3:	0f 84 bf 00 00 00    	je     104a8 <mbedtls_md_clone+0xd8>
   103e9:	48 85 f6             	test   %rsi,%rsi
   103ec:	0f 84 b6 00 00 00    	je     104a8 <mbedtls_md_clone+0xd8>
   103f2:	48 8b 06             	mov    (%rsi),%rax
   103f5:	48 39 c2             	cmp    %rax,%rdx
   103f8:	0f 85 aa 00 00 00    	jne    104a8 <mbedtls_md_clone+0xd8>
   103fe:	48 85 c0             	test   %rax,%rax
   10401:	0f 84 a1 00 00 00    	je     104a8 <mbedtls_md_clone+0xd8>
   10407:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   1040b:	0f 87 97 00 00 00    	ja     104a8 <mbedtls_md_clone+0xd8>
   10411:	48 83 ec 08          	sub    $0x8,%rsp
   10415:	8b 40 08             	mov    0x8(%rax),%eax
   10418:	48 8d 15 41 8b 00 00 	lea    0x8b41(%rip),%rdx        # 18f60 <hash_table+0xa0>
   1041f:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   10423:	48 01 d0             	add    %rdx,%rax
   10426:	3e ff e0             	notrack jmpq *%rax
   10429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10430:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   10434:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10438:	e8 43 5c 00 00       	callq  16080 <mbedtls_sha512_clone>
   1043d:	31 c0                	xor    %eax,%eax
   1043f:	48 83 c4 08          	add    $0x8,%rsp
   10443:	c3                   	retq   
   10444:	0f 1f 40 00          	nopl   0x0(%rax)
   10448:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   1044c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10450:	e8 6b 78 ff ff       	callq  7cc0 <mbedtls_sha256_clone>
   10455:	31 c0                	xor    %eax,%eax
   10457:	48 83 c4 08          	add    $0x8,%rsp
   1045b:	c3                   	retq   
   1045c:	0f 1f 40 00          	nopl   0x0(%rax)
   10460:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   10464:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10468:	e8 63 42 00 00       	callq  146d0 <mbedtls_sha1_clone>
   1046d:	31 c0                	xor    %eax,%eax
   1046f:	48 83 c4 08          	add    $0x8,%rsp
   10473:	c3                   	retq   
   10474:	0f 1f 40 00          	nopl   0x0(%rax)
   10478:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   1047c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10480:	e8 bb 25 00 00       	callq  12a40 <mbedtls_ripemd160_clone>
   10485:	31 c0                	xor    %eax,%eax
   10487:	48 83 c4 08          	add    $0x8,%rsp
   1048b:	c3                   	retq   
   1048c:	0f 1f 40 00          	nopl   0x0(%rax)
   10490:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   10494:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10498:	e8 d3 0c 00 00       	callq  11170 <mbedtls_md5_clone>
   1049d:	31 c0                	xor    %eax,%eax
   1049f:	48 83 c4 08          	add    $0x8,%rsp
   104a3:	c3                   	retq   
   104a4:	0f 1f 40 00          	nopl   0x0(%rax)
   104a8:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   104ad:	c3                   	retq   
   104ae:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   104b3:	eb 8a                	jmp    1043f <mbedtls_md_clone+0x6f>
   104b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   104bc:	00 00 00 00 

00000000000104c0 <mbedtls_md_setup>:
   104c0:	f3 0f 1e fa          	endbr64 
   104c4:	48 85 f6             	test   %rsi,%rsi
   104c7:	0f 84 4e 01 00 00    	je     1061b <mbedtls_md_setup+0x15b>
   104cd:	41 54                	push   %r12
   104cf:	55                   	push   %rbp
   104d0:	48 89 fd             	mov    %rdi,%rbp
   104d3:	53                   	push   %rbx
   104d4:	48 85 ff             	test   %rdi,%rdi
   104d7:	0f 84 34 01 00 00    	je     10611 <mbedtls_md_setup+0x151>
   104dd:	83 7e 08 07          	cmpl   $0x7,0x8(%rsi)
   104e1:	48 89 37             	mov    %rsi,(%rdi)
   104e4:	48 89 f3             	mov    %rsi,%rbx
   104e7:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   104ee:	00 
   104ef:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   104f6:	00 
   104f7:	0f 87 14 01 00 00    	ja     10611 <mbedtls_md_setup+0x151>
   104fd:	8b 46 08             	mov    0x8(%rsi),%eax
   10500:	41 89 d4             	mov    %edx,%r12d
   10503:	48 8d 15 76 8a 00 00 	lea    0x8a76(%rip),%rdx        # 18f80 <hash_table+0xc0>
   1050a:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1050e:	48 01 d0             	add    %rdx,%rax
   10511:	3e ff e0             	notrack jmpq *%rax
   10514:	0f 1f 40 00          	nopl   0x0(%rax)
   10518:	bf 01 00 00 00       	mov    $0x1,%edi
   1051d:	be d8 00 00 00       	mov    $0xd8,%esi
   10522:	e8 b9 2d ff ff       	callq  32e0 <calloc@plt>
   10527:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1052b:	48 89 c7             	mov    %rax,%rdi
   1052e:	48 85 c0             	test   %rax,%rax
   10531:	74 34                	je     10567 <mbedtls_md_setup+0xa7>
   10533:	e8 e8 5a 00 00       	callq  16020 <mbedtls_sha512_init>
   10538:	45 85 e4             	test   %r12d,%r12d
   1053b:	75 0b                	jne    10548 <mbedtls_md_setup+0x88>
   1053d:	31 c0                	xor    %eax,%eax
   1053f:	5b                   	pop    %rbx
   10540:	5d                   	pop    %rbp
   10541:	41 5c                	pop    %r12
   10543:	c3                   	retq   
   10544:	0f 1f 40 00          	nopl   0x0(%rax)
   10548:	0f b6 73 0d          	movzbl 0xd(%rbx),%esi
   1054c:	bf 02 00 00 00       	mov    $0x2,%edi
   10551:	e8 8a 2d ff ff       	callq  32e0 <calloc@plt>
   10556:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1055a:	48 85 c0             	test   %rax,%rax
   1055d:	75 de                	jne    1053d <mbedtls_md_setup+0x7d>
   1055f:	48 89 ef             	mov    %rbp,%rdi
   10562:	e8 89 fd ff ff       	callq  102f0 <mbedtls_md_free>
   10567:	b8 80 ae ff ff       	mov    $0xffffae80,%eax
   1056c:	eb d1                	jmp    1053f <mbedtls_md_setup+0x7f>
   1056e:	66 90                	xchg   %ax,%ax
   10570:	bf 01 00 00 00       	mov    $0x1,%edi
   10575:	be 6c 00 00 00       	mov    $0x6c,%esi
   1057a:	e8 61 2d ff ff       	callq  32e0 <calloc@plt>
   1057f:	48 89 45 08          	mov    %rax,0x8(%rbp)
   10583:	48 89 c7             	mov    %rax,%rdi
   10586:	48 85 c0             	test   %rax,%rax
   10589:	74 dc                	je     10567 <mbedtls_md_setup+0xa7>
   1058b:	e8 e0 76 ff ff       	callq  7c70 <mbedtls_sha256_init>
   10590:	eb a6                	jmp    10538 <mbedtls_md_setup+0x78>
   10592:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10598:	bf 01 00 00 00       	mov    $0x1,%edi
   1059d:	be 5c 00 00 00       	mov    $0x5c,%esi
   105a2:	e8 39 2d ff ff       	callq  32e0 <calloc@plt>
   105a7:	48 89 45 08          	mov    %rax,0x8(%rbp)
   105ab:	48 89 c7             	mov    %rax,%rdi
   105ae:	48 85 c0             	test   %rax,%rax
   105b1:	74 b4                	je     10567 <mbedtls_md_setup+0xa7>
   105b3:	e8 38 24 00 00       	callq  129f0 <mbedtls_ripemd160_init>
   105b8:	e9 7b ff ff ff       	jmpq   10538 <mbedtls_md_setup+0x78>
   105bd:	0f 1f 00             	nopl   (%rax)
   105c0:	bf 01 00 00 00       	mov    $0x1,%edi
   105c5:	be 58 00 00 00       	mov    $0x58,%esi
   105ca:	e8 11 2d ff ff       	callq  32e0 <calloc@plt>
   105cf:	48 89 45 08          	mov    %rax,0x8(%rbp)
   105d3:	48 89 c7             	mov    %rax,%rdi
   105d6:	48 85 c0             	test   %rax,%rax
   105d9:	74 8c                	je     10567 <mbedtls_md_setup+0xa7>
   105db:	e8 40 0b 00 00       	callq  11120 <mbedtls_md5_init>
   105e0:	e9 53 ff ff ff       	jmpq   10538 <mbedtls_md_setup+0x78>
   105e5:	0f 1f 00             	nopl   (%rax)
   105e8:	bf 01 00 00 00       	mov    $0x1,%edi
   105ed:	be 5c 00 00 00       	mov    $0x5c,%esi
   105f2:	e8 e9 2c ff ff       	callq  32e0 <calloc@plt>
   105f7:	48 89 45 08          	mov    %rax,0x8(%rbp)
   105fb:	48 89 c7             	mov    %rax,%rdi
   105fe:	48 85 c0             	test   %rax,%rax
   10601:	0f 84 60 ff ff ff    	je     10567 <mbedtls_md_setup+0xa7>
   10607:	e8 74 40 00 00       	callq  14680 <mbedtls_sha1_init>
   1060c:	e9 27 ff ff ff       	jmpq   10538 <mbedtls_md_setup+0x78>
   10611:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   10616:	e9 24 ff ff ff       	jmpq   1053f <mbedtls_md_setup+0x7f>
   1061b:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   10620:	c3                   	retq   
   10621:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10628:	00 00 00 00 
   1062c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010630 <mbedtls_md_starts>:
   10630:	f3 0f 1e fa          	endbr64 
   10634:	48 85 ff             	test   %rdi,%rdi
   10637:	0f 84 9e 00 00 00    	je     106db <mbedtls_md_starts+0xab>
   1063d:	48 8b 07             	mov    (%rdi),%rax
   10640:	48 85 c0             	test   %rax,%rax
   10643:	0f 84 92 00 00 00    	je     106db <mbedtls_md_starts+0xab>
   10649:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   1064d:	0f 87 88 00 00 00    	ja     106db <mbedtls_md_starts+0xab>
   10653:	8b 40 08             	mov    0x8(%rax),%eax
   10656:	48 8d 15 43 89 00 00 	lea    0x8943(%rip),%rdx        # 18fa0 <hash_table+0xe0>
   1065d:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   10661:	48 01 d0             	add    %rdx,%rax
   10664:	3e ff e0             	notrack jmpq *%rax
   10667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1066e:	00 00 
   10670:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10674:	e9 07 24 00 00       	jmpq   12a80 <mbedtls_ripemd160_starts>
   10679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10680:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10684:	e9 27 0b 00 00       	jmpq   111b0 <mbedtls_md5_starts>
   10689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10690:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10694:	e9 77 40 00 00       	jmpq   14710 <mbedtls_sha1_starts>
   10699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   106a0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   106a4:	be 01 00 00 00       	mov    $0x1,%esi
   106a9:	e9 62 76 ff ff       	jmpq   7d10 <mbedtls_sha256_starts>
   106ae:	66 90                	xchg   %ax,%ax
   106b0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   106b4:	31 f6                	xor    %esi,%esi
   106b6:	e9 55 76 ff ff       	jmpq   7d10 <mbedtls_sha256_starts>
   106bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   106c0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   106c4:	be 01 00 00 00       	mov    $0x1,%esi
   106c9:	e9 62 5a 00 00       	jmpq   16130 <mbedtls_sha512_starts>
   106ce:	66 90                	xchg   %ax,%ax
   106d0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   106d4:	31 f6                	xor    %esi,%esi
   106d6:	e9 55 5a 00 00       	jmpq   16130 <mbedtls_sha512_starts>
   106db:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   106e0:	c3                   	retq   
   106e1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   106e8:	00 00 00 00 
   106ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000106f0 <mbedtls_md_update>:
   106f0:	f3 0f 1e fa          	endbr64 
   106f4:	48 85 ff             	test   %rdi,%rdi
   106f7:	74 70                	je     10769 <mbedtls_md_update+0x79>
   106f9:	48 8b 07             	mov    (%rdi),%rax
   106fc:	48 85 c0             	test   %rax,%rax
   106ff:	74 68                	je     10769 <mbedtls_md_update+0x79>
   10701:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   10705:	77 62                	ja     10769 <mbedtls_md_update+0x79>
   10707:	8b 40 08             	mov    0x8(%rax),%eax
   1070a:	48 8d 0d af 88 00 00 	lea    0x88af(%rip),%rcx        # 18fc0 <hash_table+0x100>
   10711:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   10715:	48 01 c8             	add    %rcx,%rax
   10718:	3e ff e0             	notrack jmpq *%rax
   1071b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10720:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10724:	e9 f7 62 00 00       	jmpq   16a20 <mbedtls_sha512_update>
   10729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10730:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10734:	e9 b7 83 ff ff       	jmpq   8af0 <mbedtls_sha256_update>
   10739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10740:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10744:	e9 67 54 00 00       	jmpq   15bb0 <mbedtls_sha1_update>
   10749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10750:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10754:	e9 07 3c 00 00       	jmpq   14360 <mbedtls_ripemd160_update>
   10759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10760:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   10764:	e9 67 14 00 00       	jmpq   11bd0 <mbedtls_md5_update>
   10769:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   1076e:	c3                   	retq   
   1076f:	90                   	nop

0000000000010770 <mbedtls_md_finish>:
   10770:	f3 0f 1e fa          	endbr64 
   10774:	48 85 ff             	test   %rdi,%rdi
   10777:	74 70                	je     107e9 <mbedtls_md_finish+0x79>
   10779:	48 8b 07             	mov    (%rdi),%rax
   1077c:	48 85 c0             	test   %rax,%rax
   1077f:	74 68                	je     107e9 <mbedtls_md_finish+0x79>
   10781:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   10785:	77 62                	ja     107e9 <mbedtls_md_finish+0x79>
   10787:	8b 40 08             	mov    0x8(%rax),%eax
   1078a:	48 8d 15 4f 88 00 00 	lea    0x884f(%rip),%rdx        # 18fe0 <hash_table+0x120>
   10791:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   10795:	48 01 d0             	add    %rdx,%rax
   10798:	3e ff e0             	notrack jmpq *%rax
   1079b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   107a0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   107a4:	e9 97 62 00 00       	jmpq   16a40 <mbedtls_sha512_finish>
   107a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   107b0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   107b4:	e9 57 83 ff ff       	jmpq   8b10 <mbedtls_sha256_finish>
   107b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   107c0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   107c4:	e9 07 54 00 00       	jmpq   15bd0 <mbedtls_sha1_finish>
   107c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   107d0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   107d4:	e9 a7 3b 00 00       	jmpq   14380 <mbedtls_ripemd160_finish>
   107d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   107e0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   107e4:	e9 07 14 00 00       	jmpq   11bf0 <mbedtls_md5_finish>
   107e9:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   107ee:	c3                   	retq   
   107ef:	90                   	nop

00000000000107f0 <mbedtls_md>:
   107f0:	f3 0f 1e fa          	endbr64 
   107f4:	49 89 f0             	mov    %rsi,%r8
   107f7:	48 89 d6             	mov    %rdx,%rsi
   107fa:	48 89 ca             	mov    %rcx,%rdx
   107fd:	48 85 ff             	test   %rdi,%rdi
   10800:	0f 84 84 00 00 00    	je     1088a <mbedtls_md+0x9a>
   10806:	83 7f 08 07          	cmpl   $0x7,0x8(%rdi)
   1080a:	77 7e                	ja     1088a <mbedtls_md+0x9a>
   1080c:	8b 47 08             	mov    0x8(%rdi),%eax
   1080f:	48 8d 0d ea 87 00 00 	lea    0x87ea(%rip),%rcx        # 19000 <hash_table+0x140>
   10816:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   1081a:	48 01 c8             	add    %rcx,%rax
   1081d:	3e ff e0             	notrack jmpq *%rax
   10820:	4c 89 c7             	mov    %r8,%rdi
   10823:	e9 28 3c 00 00       	jmpq   14450 <mbedtls_ripemd160>
   10828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1082f:	00 
   10830:	4c 89 c7             	mov    %r8,%rdi
   10833:	e9 08 15 00 00       	jmpq   11d40 <mbedtls_md5>
   10838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1083f:	00 
   10840:	4c 89 c7             	mov    %r8,%rdi
   10843:	e9 e8 54 00 00       	jmpq   15d30 <mbedtls_sha1>
   10848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1084f:	00 
   10850:	b9 01 00 00 00       	mov    $0x1,%ecx
   10855:	4c 89 c7             	mov    %r8,%rdi
   10858:	e9 73 87 ff ff       	jmpq   8fd0 <mbedtls_sha256>
   1085d:	0f 1f 00             	nopl   (%rax)
   10860:	31 c9                	xor    %ecx,%ecx
   10862:	4c 89 c7             	mov    %r8,%rdi
   10865:	e9 66 87 ff ff       	jmpq   8fd0 <mbedtls_sha256>
   1086a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10870:	b9 01 00 00 00       	mov    $0x1,%ecx
   10875:	4c 89 c7             	mov    %r8,%rdi
   10878:	e9 93 67 00 00       	jmpq   17010 <mbedtls_sha512>
   1087d:	0f 1f 00             	nopl   (%rax)
   10880:	31 c9                	xor    %ecx,%ecx
   10882:	4c 89 c7             	mov    %r8,%rdi
   10885:	e9 86 67 00 00       	jmpq   17010 <mbedtls_sha512>
   1088a:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   1088f:	c3                   	retq   

0000000000010890 <mbedtls_md_get_size>:
   10890:	f3 0f 1e fa          	endbr64 
   10894:	48 85 ff             	test   %rdi,%rdi
   10897:	74 07                	je     108a0 <mbedtls_md_get_size+0x10>
   10899:	0f b6 47 0c          	movzbl 0xc(%rdi),%eax
   1089d:	c3                   	retq   
   1089e:	66 90                	xchg   %ax,%ax
   108a0:	31 c0                	xor    %eax,%eax
   108a2:	c3                   	retq   
   108a3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   108aa:	00 00 00 00 
   108ae:	66 90                	xchg   %ax,%ax

00000000000108b0 <mbedtls_md_get_type>:
   108b0:	f3 0f 1e fa          	endbr64 
   108b4:	48 85 ff             	test   %rdi,%rdi
   108b7:	74 07                	je     108c0 <mbedtls_md_get_type+0x10>
   108b9:	8b 47 08             	mov    0x8(%rdi),%eax
   108bc:	c3                   	retq   
   108bd:	0f 1f 00             	nopl   (%rax)
   108c0:	31 c0                	xor    %eax,%eax
   108c2:	c3                   	retq   
   108c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   108ca:	00 00 00 00 
   108ce:	66 90                	xchg   %ax,%ax

00000000000108d0 <mbedtls_md_list>:
   108d0:	f3 0f 1e fa          	endbr64 
   108d4:	48 8d 05 45 87 00 00 	lea    0x8745(%rip),%rax        # 19020 <supported_digests>
   108db:	c3                   	retq   
   108dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000108e0 <mbedtls_md_info_from_string>:
   108e0:	f3 0f 1e fa          	endbr64 
   108e4:	48 89 f8             	mov    %rdi,%rax
   108e7:	48 85 ff             	test   %rdi,%rdi
   108ea:	0f 84 20 01 00 00    	je     10a10 <mbedtls_md_info_from_string+0x130>
   108f0:	b9 04 00 00 00       	mov    $0x4,%ecx
   108f5:	48 8d 35 b7 8d 00 00 	lea    0x8db7(%rip),%rsi        # 196b3 <md5_test_buf+0x573>
   108fc:	4c 8d 05 5d f6 00 00 	lea    0xf65d(%rip),%r8        # 1ff60 <mbedtls_md5_info>
   10903:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   10905:	0f 97 c2             	seta   %dl
   10908:	80 da 00             	sbb    $0x0,%dl
   1090b:	84 d2                	test   %dl,%dl
   1090d:	0f 84 f9 00 00 00    	je     10a0c <mbedtls_md_info_from_string+0x12c>
   10913:	b9 0a 00 00 00       	mov    $0xa,%ecx
   10918:	48 8d 35 21 87 00 00 	lea    0x8721(%rip),%rsi        # 19040 <supported_digests+0x20>
   1091f:	48 89 c7             	mov    %rax,%rdi
   10922:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   10924:	4c 8d 05 25 f6 00 00 	lea    0xf625(%rip),%r8        # 1ff50 <mbedtls_ripemd160_info>
   1092b:	0f 97 c2             	seta   %dl
   1092e:	80 da 00             	sbb    $0x0,%dl
   10931:	84 d2                	test   %dl,%dl
   10933:	0f 84 d3 00 00 00    	je     10a0c <mbedtls_md_info_from_string+0x12c>
   10939:	b9 05 00 00 00       	mov    $0x5,%ecx
   1093e:	48 8d 35 96 8e 00 00 	lea    0x8e96(%rip),%rsi        # 197db <md5_test_buf+0x69b>
   10945:	48 89 c7             	mov    %rax,%rdi
   10948:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1094a:	4c 8d 05 ef f5 00 00 	lea    0xf5ef(%rip),%r8        # 1ff40 <mbedtls_sha1_info>
   10951:	0f 97 c2             	seta   %dl
   10954:	80 da 00             	sbb    $0x0,%dl
   10957:	84 d2                	test   %dl,%dl
   10959:	0f 84 ad 00 00 00    	je     10a0c <mbedtls_md_info_from_string+0x12c>
   1095f:	b9 04 00 00 00       	mov    $0x4,%ecx
   10964:	48 8d 35 df 86 00 00 	lea    0x86df(%rip),%rsi        # 1904a <supported_digests+0x2a>
   1096b:	48 89 c7             	mov    %rax,%rdi
   1096e:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   10970:	0f 97 c2             	seta   %dl
   10973:	80 da 00             	sbb    $0x0,%dl
   10976:	84 d2                	test   %dl,%dl
   10978:	0f 84 8e 00 00 00    	je     10a0c <mbedtls_md_info_from_string+0x12c>
   1097e:	b9 07 00 00 00       	mov    $0x7,%ecx
   10983:	48 8d 35 7c 8e 00 00 	lea    0x8e7c(%rip),%rsi        # 19806 <md5_test_buf+0x6c6>
   1098a:	48 89 c7             	mov    %rax,%rdi
   1098d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1098f:	4c 8d 05 9a f5 00 00 	lea    0xf59a(%rip),%r8        # 1ff30 <mbedtls_sha224_info>
   10996:	0f 97 c2             	seta   %dl
   10999:	80 da 00             	sbb    $0x0,%dl
   1099c:	84 d2                	test   %dl,%dl
   1099e:	74 6c                	je     10a0c <mbedtls_md_info_from_string+0x12c>
   109a0:	b9 07 00 00 00       	mov    $0x7,%ecx
   109a5:	48 8d 35 87 8e 00 00 	lea    0x8e87(%rip),%rsi        # 19833 <md5_test_buf+0x6f3>
   109ac:	48 89 c7             	mov    %rax,%rdi
   109af:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   109b1:	4c 8d 05 68 f5 00 00 	lea    0xf568(%rip),%r8        # 1ff20 <mbedtls_sha256_info>
   109b8:	0f 97 c2             	seta   %dl
   109bb:	80 da 00             	sbb    $0x0,%dl
   109be:	84 d2                	test   %dl,%dl
   109c0:	74 4a                	je     10a0c <mbedtls_md_info_from_string+0x12c>
   109c2:	b9 07 00 00 00       	mov    $0x7,%ecx
   109c7:	48 8d 35 92 8e 00 00 	lea    0x8e92(%rip),%rsi        # 19860 <md5_test_buf+0x720>
   109ce:	48 89 c7             	mov    %rax,%rdi
   109d1:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   109d3:	4c 8d 05 36 f5 00 00 	lea    0xf536(%rip),%r8        # 1ff10 <mbedtls_sha384_info>
   109da:	0f 97 c2             	seta   %dl
   109dd:	80 da 00             	sbb    $0x0,%dl
   109e0:	84 d2                	test   %dl,%dl
   109e2:	74 28                	je     10a0c <mbedtls_md_info_from_string+0x12c>
   109e4:	48 89 c7             	mov    %rax,%rdi
   109e7:	b9 07 00 00 00       	mov    $0x7,%ecx
   109ec:	48 8d 35 9a 8e 00 00 	lea    0x8e9a(%rip),%rsi        # 1988d <md5_test_buf+0x74d>
   109f3:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   109f5:	4c 8d 05 04 f5 00 00 	lea    0xf504(%rip),%r8        # 1ff00 <mbedtls_sha512_info>
   109fc:	0f 97 c0             	seta   %al
   109ff:	1c 00                	sbb    $0x0,%al
   10a01:	84 c0                	test   %al,%al
   10a03:	b8 00 00 00 00       	mov    $0x0,%eax
   10a08:	4c 0f 45 c0          	cmovne %rax,%r8
   10a0c:	4c 89 c0             	mov    %r8,%rax
   10a0f:	c3                   	retq   
   10a10:	45 31 c0             	xor    %r8d,%r8d
   10a13:	eb f7                	jmp    10a0c <mbedtls_md_info_from_string+0x12c>
   10a15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10a1c:	00 00 00 00 

0000000000010a20 <mbedtls_md_info_from_ctx>:
   10a20:	f3 0f 1e fa          	endbr64 
   10a24:	48 85 ff             	test   %rdi,%rdi
   10a27:	74 07                	je     10a30 <mbedtls_md_info_from_ctx+0x10>
   10a29:	48 8b 07             	mov    (%rdi),%rax
   10a2c:	c3                   	retq   
   10a2d:	0f 1f 00             	nopl   (%rax)
   10a30:	31 c0                	xor    %eax,%eax
   10a32:	c3                   	retq   
   10a33:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10a3a:	00 00 00 00 
   10a3e:	66 90                	xchg   %ax,%ax

0000000000010a40 <mbedtls_md_file>:
   10a40:	f3 0f 1e fa          	endbr64 
   10a44:	41 57                	push   %r15
   10a46:	41 56                	push   %r14
   10a48:	41 55                	push   %r13
   10a4a:	41 54                	push   %r12
   10a4c:	49 89 fc             	mov    %rdi,%r12
   10a4f:	55                   	push   %rbp
   10a50:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
   10a57:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10a5e:	00 00 
   10a60:	48 89 84 24 28 04 00 	mov    %rax,0x428(%rsp)
   10a67:	00 
   10a68:	31 c0                	xor    %eax,%eax
   10a6a:	48 85 ff             	test   %rdi,%rdi
   10a6d:	0f 84 0d 01 00 00    	je     10b80 <mbedtls_md_file+0x140>
   10a73:	48 89 f7             	mov    %rsi,%rdi
   10a76:	48 8d 35 d1 85 00 00 	lea    0x85d1(%rip),%rsi        # 1904e <supported_digests+0x2e>
   10a7d:	49 89 d6             	mov    %rdx,%r14
   10a80:	e8 7b 28 ff ff       	callq  3300 <fopen64@plt>
   10a85:	48 89 c5             	mov    %rax,%rbp
   10a88:	48 85 c0             	test   %rax,%rax
   10a8b:	0f 84 fa 00 00 00    	je     10b8b <mbedtls_md_file+0x14b>
   10a91:	48 89 c7             	mov    %rax,%rdi
   10a94:	31 f6                	xor    %esi,%esi
   10a96:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   10a9b:	49 89 e5             	mov    %rsp,%r13
   10a9e:	e8 ed 27 ff ff       	callq  3290 <setbuf@plt>
   10aa3:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10aa7:	4c 89 e6             	mov    %r12,%rsi
   10aaa:	31 d2                	xor    %edx,%edx
   10aac:	4c 89 ef             	mov    %r13,%rdi
   10aaf:	0f 29 04 24          	movaps %xmm0,(%rsp)
   10ab3:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   10aba:	00 00 
   10abc:	e8 ff f9 ff ff       	callq  104c0 <mbedtls_md_setup>
   10ac1:	41 89 c4             	mov    %eax,%r12d
   10ac4:	85 c0                	test   %eax,%eax
   10ac6:	74 48                	je     10b10 <mbedtls_md_file+0xd0>
   10ac8:	be 00 04 00 00       	mov    $0x400,%esi
   10acd:	4c 89 ff             	mov    %r15,%rdi
   10ad0:	e8 5b 1e 00 00       	callq  12930 <mbedtls_platform_zeroize>
   10ad5:	48 89 ef             	mov    %rbp,%rdi
   10ad8:	e8 83 27 ff ff       	callq  3260 <fclose@plt>
   10add:	4c 89 ef             	mov    %r13,%rdi
   10ae0:	e8 0b f8 ff ff       	callq  102f0 <mbedtls_md_free>
   10ae5:	48 8b 84 24 28 04 00 	mov    0x428(%rsp),%rax
   10aec:	00 
   10aed:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10af4:	00 00 
   10af6:	0f 85 9a 00 00 00    	jne    10b96 <mbedtls_md_file+0x156>
   10afc:	48 81 c4 30 04 00 00 	add    $0x430,%rsp
   10b03:	44 89 e0             	mov    %r12d,%eax
   10b06:	5d                   	pop    %rbp
   10b07:	41 5c                	pop    %r12
   10b09:	41 5d                	pop    %r13
   10b0b:	41 5e                	pop    %r14
   10b0d:	41 5f                	pop    %r15
   10b0f:	c3                   	retq   
   10b10:	4c 89 ef             	mov    %r13,%rdi
   10b13:	e8 18 fb ff ff       	callq  10630 <mbedtls_md_starts>
   10b18:	41 89 c4             	mov    %eax,%r12d
   10b1b:	85 c0                	test   %eax,%eax
   10b1d:	74 1b                	je     10b3a <mbedtls_md_file+0xfa>
   10b1f:	eb a7                	jmp    10ac8 <mbedtls_md_file+0x88>
   10b21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b28:	4c 89 fe             	mov    %r15,%rsi
   10b2b:	4c 89 ef             	mov    %r13,%rdi
   10b2e:	e8 bd fb ff ff       	callq  106f0 <mbedtls_md_update>
   10b33:	41 89 c4             	mov    %eax,%r12d
   10b36:	85 c0                	test   %eax,%eax
   10b38:	75 8e                	jne    10ac8 <mbedtls_md_file+0x88>
   10b3a:	ba 00 04 00 00       	mov    $0x400,%edx
   10b3f:	48 89 e9             	mov    %rbp,%rcx
   10b42:	be 01 00 00 00       	mov    $0x1,%esi
   10b47:	4c 89 ff             	mov    %r15,%rdi
   10b4a:	e8 f1 26 ff ff       	callq  3240 <fread@plt>
   10b4f:	48 89 c2             	mov    %rax,%rdx
   10b52:	48 85 c0             	test   %rax,%rax
   10b55:	75 d1                	jne    10b28 <mbedtls_md_file+0xe8>
   10b57:	48 89 ef             	mov    %rbp,%rdi
   10b5a:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
   10b60:	e8 cb 26 ff ff       	callq  3230 <ferror@plt>
   10b65:	85 c0                	test   %eax,%eax
   10b67:	0f 85 5b ff ff ff    	jne    10ac8 <mbedtls_md_file+0x88>
   10b6d:	4c 89 f6             	mov    %r14,%rsi
   10b70:	4c 89 ef             	mov    %r13,%rdi
   10b73:	e8 f8 fb ff ff       	callq  10770 <mbedtls_md_finish>
   10b78:	41 89 c4             	mov    %eax,%r12d
   10b7b:	e9 48 ff ff ff       	jmpq   10ac8 <mbedtls_md_file+0x88>
   10b80:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
   10b86:	e9 5a ff ff ff       	jmpq   10ae5 <mbedtls_md_file+0xa5>
   10b8b:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
   10b91:	e9 4f ff ff ff       	jmpq   10ae5 <mbedtls_md_file+0xa5>
   10b96:	e8 e5 26 ff ff       	callq  3280 <__stack_chk_fail@plt>
   10b9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010ba0 <mbedtls_md_hmac_starts>:
   10ba0:	f3 0f 1e fa          	endbr64 
   10ba4:	41 57                	push   %r15
   10ba6:	41 56                	push   %r14
   10ba8:	41 55                	push   %r13
   10baa:	41 54                	push   %r12
   10bac:	55                   	push   %rbp
   10bad:	53                   	push   %rbx
   10bae:	48 83 ec 58          	sub    $0x58,%rsp
   10bb2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10bb9:	00 00 
   10bbb:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   10bc0:	31 c0                	xor    %eax,%eax
   10bc2:	48 85 ff             	test   %rdi,%rdi
   10bc5:	0f 84 9d 02 00 00    	je     10e68 <mbedtls_md_hmac_starts+0x2c8>
   10bcb:	48 89 fd             	mov    %rdi,%rbp
   10bce:	48 8b 3f             	mov    (%rdi),%rdi
   10bd1:	48 85 ff             	test   %rdi,%rdi
   10bd4:	0f 84 8e 02 00 00    	je     10e68 <mbedtls_md_hmac_starts+0x2c8>
   10bda:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
   10bde:	4d 85 ed             	test   %r13,%r13
   10be1:	0f 84 81 02 00 00    	je     10e68 <mbedtls_md_hmac_starts+0x2c8>
   10be7:	49 89 d4             	mov    %rdx,%r12
   10bea:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
   10bee:	48 89 f3             	mov    %rsi,%rbx
   10bf1:	49 89 e7             	mov    %rsp,%r15
   10bf4:	4c 39 e2             	cmp    %r12,%rdx
   10bf7:	73 5f                	jae    10c58 <mbedtls_md_hmac_starts+0xb8>
   10bf9:	48 89 ef             	mov    %rbp,%rdi
   10bfc:	49 89 e7             	mov    %rsp,%r15
   10bff:	e8 2c fa ff ff       	callq  10630 <mbedtls_md_starts>
   10c04:	41 89 c6             	mov    %eax,%r14d
   10c07:	85 c0                	test   %eax,%eax
   10c09:	0f 85 4f 01 00 00    	jne    10d5e <mbedtls_md_hmac_starts+0x1be>
   10c0f:	4c 89 e2             	mov    %r12,%rdx
   10c12:	48 89 de             	mov    %rbx,%rsi
   10c15:	48 89 ef             	mov    %rbp,%rdi
   10c18:	e8 d3 fa ff ff       	callq  106f0 <mbedtls_md_update>
   10c1d:	41 89 c6             	mov    %eax,%r14d
   10c20:	85 c0                	test   %eax,%eax
   10c22:	0f 85 36 01 00 00    	jne    10d5e <mbedtls_md_hmac_starts+0x1be>
   10c28:	4c 89 fe             	mov    %r15,%rsi
   10c2b:	48 89 ef             	mov    %rbp,%rdi
   10c2e:	e8 3d fb ff ff       	callq  10770 <mbedtls_md_finish>
   10c33:	41 89 c6             	mov    %eax,%r14d
   10c36:	85 c0                	test   %eax,%eax
   10c38:	0f 85 20 01 00 00    	jne    10d5e <mbedtls_md_hmac_starts+0x1be>
   10c3e:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   10c42:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
   10c46:	4c 89 fb             	mov    %r15,%rbx
   10c49:	44 0f b6 67 0c       	movzbl 0xc(%rdi),%r12d
   10c4e:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
   10c52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c58:	49 8d 74 15 00       	lea    0x0(%r13,%rdx,1),%rsi
   10c5d:	89 d1                	mov    %edx,%ecx
   10c5f:	48 b8 36 36 36 36 36 	movabs $0x3636363636363636,%rax
   10c66:	36 36 36 
   10c69:	83 fa 08             	cmp    $0x8,%edx
   10c6c:	0f 82 26 01 00 00    	jb     10d98 <mbedtls_md_hmac_starts+0x1f8>
   10c72:	49 8d 7d 08          	lea    0x8(%r13),%rdi
   10c76:	4c 89 e9             	mov    %r13,%rcx
   10c79:	49 89 45 00          	mov    %rax,0x0(%r13)
   10c7d:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   10c81:	49 89 44 15 f8       	mov    %rax,-0x8(%r13,%rdx,1)
   10c86:	48 29 f9             	sub    %rdi,%rcx
   10c89:	01 d1                	add    %edx,%ecx
   10c8b:	c1 e9 03             	shr    $0x3,%ecx
   10c8e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10c91:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   10c95:	48 b8 5c 5c 5c 5c 5c 	movabs $0x5c5c5c5c5c5c5c5c,%rax
   10c9c:	5c 5c 5c 
   10c9f:	0f b6 4f 0d          	movzbl 0xd(%rdi),%ecx
   10ca3:	83 f9 08             	cmp    $0x8,%ecx
   10ca6:	0f 83 24 01 00 00    	jae    10dd0 <mbedtls_md_hmac_starts+0x230>
   10cac:	f6 c1 04             	test   $0x4,%cl
   10caf:	0f 85 9b 01 00 00    	jne    10e50 <mbedtls_md_hmac_starts+0x2b0>
   10cb5:	85 c9                	test   %ecx,%ecx
   10cb7:	0f 85 3b 01 00 00    	jne    10df8 <mbedtls_md_hmac_starts+0x258>
   10cbd:	49 83 fc 03          	cmp    $0x3,%r12
   10cc1:	0f 86 51 01 00 00    	jbe    10e18 <mbedtls_md_hmac_starts+0x278>
   10cc7:	ba 04 00 00 00       	mov    $0x4,%edx
   10ccc:	0f 1f 40 00          	nopl   0x0(%rax)
   10cd0:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
   10cd4:	41 31 44 15 fc       	xor    %eax,-0x4(%r13,%rdx,1)
   10cd9:	48 89 d0             	mov    %rdx,%rax
   10cdc:	48 8d 52 04          	lea    0x4(%rdx),%rdx
   10ce0:	49 39 d4             	cmp    %rdx,%r12
   10ce3:	73 eb                	jae    10cd0 <mbedtls_md_hmac_starts+0x130>
   10ce5:	49 39 c4             	cmp    %rax,%r12
   10ce8:	76 1a                	jbe    10d04 <mbedtls_md_hmac_starts+0x164>
   10cea:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
   10cee:	41 30 54 05 00       	xor    %dl,0x0(%r13,%rax,1)
   10cf3:	48 83 c0 01          	add    $0x1,%rax
   10cf7:	49 39 c4             	cmp    %rax,%r12
   10cfa:	77 ee                	ja     10cea <mbedtls_md_hmac_starts+0x14a>
   10cfc:	31 c0                	xor    %eax,%eax
   10cfe:	49 83 fc 03          	cmp    $0x3,%r12
   10d02:	76 25                	jbe    10d29 <mbedtls_md_hmac_starts+0x189>
   10d04:	ba 04 00 00 00       	mov    $0x4,%edx
   10d09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d10:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
   10d14:	31 44 16 fc          	xor    %eax,-0x4(%rsi,%rdx,1)
   10d18:	48 89 d0             	mov    %rdx,%rax
   10d1b:	48 8d 52 04          	lea    0x4(%rdx),%rdx
   10d1f:	49 39 d4             	cmp    %rdx,%r12
   10d22:	73 ec                	jae    10d10 <mbedtls_md_hmac_starts+0x170>
   10d24:	49 39 c4             	cmp    %rax,%r12
   10d27:	76 10                	jbe    10d39 <mbedtls_md_hmac_starts+0x199>
   10d29:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
   10d2d:	30 14 06             	xor    %dl,(%rsi,%rax,1)
   10d30:	48 83 c0 01          	add    $0x1,%rax
   10d34:	49 39 c4             	cmp    %rax,%r12
   10d37:	77 f0                	ja     10d29 <mbedtls_md_hmac_starts+0x189>
   10d39:	48 89 ef             	mov    %rbp,%rdi
   10d3c:	e8 ef f8 ff ff       	callq  10630 <mbedtls_md_starts>
   10d41:	41 89 c6             	mov    %eax,%r14d
   10d44:	85 c0                	test   %eax,%eax
   10d46:	75 16                	jne    10d5e <mbedtls_md_hmac_starts+0x1be>
   10d48:	48 8b 45 00          	mov    0x0(%rbp),%rax
   10d4c:	4c 89 ee             	mov    %r13,%rsi
   10d4f:	48 89 ef             	mov    %rbp,%rdi
   10d52:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
   10d56:	e8 95 f9 ff ff       	callq  106f0 <mbedtls_md_update>
   10d5b:	41 89 c6             	mov    %eax,%r14d
   10d5e:	be 40 00 00 00       	mov    $0x40,%esi
   10d63:	4c 89 ff             	mov    %r15,%rdi
   10d66:	e8 c5 1b 00 00       	callq  12930 <mbedtls_platform_zeroize>
   10d6b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   10d70:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10d77:	00 00 
   10d79:	0f 85 f4 00 00 00    	jne    10e73 <mbedtls_md_hmac_starts+0x2d3>
   10d7f:	48 83 c4 58          	add    $0x58,%rsp
   10d83:	44 89 f0             	mov    %r14d,%eax
   10d86:	5b                   	pop    %rbx
   10d87:	5d                   	pop    %rbp
   10d88:	41 5c                	pop    %r12
   10d8a:	41 5d                	pop    %r13
   10d8c:	41 5e                	pop    %r14
   10d8e:	41 5f                	pop    %r15
   10d90:	c3                   	retq   
   10d91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d98:	83 e2 04             	and    $0x4,%edx
   10d9b:	0f 85 8f 00 00 00    	jne    10e30 <mbedtls_md_hmac_starts+0x290>
   10da1:	85 c9                	test   %ecx,%ecx
   10da3:	0f 84 ec fe ff ff    	je     10c95 <mbedtls_md_hmac_starts+0xf5>
   10da9:	41 c6 45 00 36       	movb   $0x36,0x0(%r13)
   10dae:	f6 c1 02             	test   $0x2,%cl
   10db1:	0f 84 da fe ff ff    	je     10c91 <mbedtls_md_hmac_starts+0xf1>
   10db7:	ba 36 36 00 00       	mov    $0x3636,%edx
   10dbc:	66 41 89 54 0d fe    	mov    %dx,-0x2(%r13,%rcx,1)
   10dc2:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   10dc6:	e9 ca fe ff ff       	jmpq   10c95 <mbedtls_md_hmac_starts+0xf5>
   10dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10dd0:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   10dd4:	48 89 f2             	mov    %rsi,%rdx
   10dd7:	48 89 06             	mov    %rax,(%rsi)
   10dda:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   10dde:	48 89 44 0e f8       	mov    %rax,-0x8(%rsi,%rcx,1)
   10de3:	48 29 fa             	sub    %rdi,%rdx
   10de6:	01 d1                	add    %edx,%ecx
   10de8:	c1 e9 03             	shr    $0x3,%ecx
   10deb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10dee:	e9 ca fe ff ff       	jmpq   10cbd <mbedtls_md_hmac_starts+0x11d>
   10df3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10df8:	c6 06 5c             	movb   $0x5c,(%rsi)
   10dfb:	f6 c1 02             	test   $0x2,%cl
   10dfe:	0f 84 b9 fe ff ff    	je     10cbd <mbedtls_md_hmac_starts+0x11d>
   10e04:	b8 5c 5c 00 00       	mov    $0x5c5c,%eax
   10e09:	66 89 44 0e fe       	mov    %ax,-0x2(%rsi,%rcx,1)
   10e0e:	e9 aa fe ff ff       	jmpq   10cbd <mbedtls_md_hmac_starts+0x11d>
   10e13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e18:	31 c0                	xor    %eax,%eax
   10e1a:	4d 85 e4             	test   %r12,%r12
   10e1d:	0f 85 c7 fe ff ff    	jne    10cea <mbedtls_md_hmac_starts+0x14a>
   10e23:	e9 11 ff ff ff       	jmpq   10d39 <mbedtls_md_hmac_starts+0x199>
   10e28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10e2f:	00 
   10e30:	41 c7 45 00 36 36 36 	movl   $0x36363636,0x0(%r13)
   10e37:	36 
   10e38:	41 c7 44 0d fc 36 36 	movl   $0x36363636,-0x4(%r13,%rcx,1)
   10e3f:	36 36 
   10e41:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   10e45:	e9 4b fe ff ff       	jmpq   10c95 <mbedtls_md_hmac_starts+0xf5>
   10e4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10e50:	c7 06 5c 5c 5c 5c    	movl   $0x5c5c5c5c,(%rsi)
   10e56:	c7 44 0e fc 5c 5c 5c 	movl   $0x5c5c5c5c,-0x4(%rsi,%rcx,1)
   10e5d:	5c 
   10e5e:	e9 5a fe ff ff       	jmpq   10cbd <mbedtls_md_hmac_starts+0x11d>
   10e63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e68:	41 be 00 af ff ff    	mov    $0xffffaf00,%r14d
   10e6e:	e9 f8 fe ff ff       	jmpq   10d6b <mbedtls_md_hmac_starts+0x1cb>
   10e73:	e8 08 24 ff ff       	callq  3280 <__stack_chk_fail@plt>
   10e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10e7f:	00 

0000000000010e80 <mbedtls_md_hmac_update>:
   10e80:	f3 0f 1e fa          	endbr64 
   10e84:	48 85 ff             	test   %rdi,%rdi
   10e87:	74 17                	je     10ea0 <mbedtls_md_hmac_update+0x20>
   10e89:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   10e8d:	74 11                	je     10ea0 <mbedtls_md_hmac_update+0x20>
   10e8f:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
   10e94:	74 0a                	je     10ea0 <mbedtls_md_hmac_update+0x20>
   10e96:	e9 55 f8 ff ff       	jmpq   106f0 <mbedtls_md_update>
   10e9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10ea0:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   10ea5:	c3                   	retq   
   10ea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10ead:	00 00 00 

0000000000010eb0 <mbedtls_md_hmac_finish>:
   10eb0:	f3 0f 1e fa          	endbr64 
   10eb4:	41 56                	push   %r14
   10eb6:	41 55                	push   %r13
   10eb8:	41 54                	push   %r12
   10eba:	55                   	push   %rbp
   10ebb:	53                   	push   %rbx
   10ebc:	48 83 ec 50          	sub    $0x50,%rsp
   10ec0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10ec7:	00 00 
   10ec9:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   10ece:	31 c0                	xor    %eax,%eax
   10ed0:	48 85 ff             	test   %rdi,%rdi
   10ed3:	0f 84 a7 00 00 00    	je     10f80 <mbedtls_md_hmac_finish+0xd0>
   10ed9:	48 8b 07             	mov    (%rdi),%rax
   10edc:	49 89 fe             	mov    %rdi,%r14
   10edf:	48 85 c0             	test   %rax,%rax
   10ee2:	0f 84 98 00 00 00    	je     10f80 <mbedtls_md_hmac_finish+0xd0>
   10ee8:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   10eec:	48 85 db             	test   %rbx,%rbx
   10eef:	0f 84 8b 00 00 00    	je     10f80 <mbedtls_md_hmac_finish+0xd0>
   10ef5:	49 89 e4             	mov    %rsp,%r12
   10ef8:	48 89 f5             	mov    %rsi,%rbp
   10efb:	44 0f b6 68 0d       	movzbl 0xd(%rax),%r13d
   10f00:	4c 89 e6             	mov    %r12,%rsi
   10f03:	e8 68 f8 ff ff       	callq  10770 <mbedtls_md_finish>
   10f08:	85 c0                	test   %eax,%eax
   10f0a:	74 24                	je     10f30 <mbedtls_md_hmac_finish+0x80>
   10f0c:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   10f11:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   10f18:	00 00 
   10f1a:	75 6b                	jne    10f87 <mbedtls_md_hmac_finish+0xd7>
   10f1c:	48 83 c4 50          	add    $0x50,%rsp
   10f20:	5b                   	pop    %rbx
   10f21:	5d                   	pop    %rbp
   10f22:	41 5c                	pop    %r12
   10f24:	41 5d                	pop    %r13
   10f26:	41 5e                	pop    %r14
   10f28:	c3                   	retq   
   10f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10f30:	4c 89 f7             	mov    %r14,%rdi
   10f33:	e8 f8 f6 ff ff       	callq  10630 <mbedtls_md_starts>
   10f38:	85 c0                	test   %eax,%eax
   10f3a:	75 d0                	jne    10f0c <mbedtls_md_hmac_finish+0x5c>
   10f3c:	49 8b 06             	mov    (%r14),%rax
   10f3f:	41 0f b6 f5          	movzbl %r13b,%esi
   10f43:	4c 89 f7             	mov    %r14,%rdi
   10f46:	48 01 de             	add    %rbx,%rsi
   10f49:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
   10f4d:	e8 9e f7 ff ff       	callq  106f0 <mbedtls_md_update>
   10f52:	85 c0                	test   %eax,%eax
   10f54:	75 b6                	jne    10f0c <mbedtls_md_hmac_finish+0x5c>
   10f56:	49 8b 06             	mov    (%r14),%rax
   10f59:	4c 89 e6             	mov    %r12,%rsi
   10f5c:	4c 89 f7             	mov    %r14,%rdi
   10f5f:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
   10f63:	e8 88 f7 ff ff       	callq  106f0 <mbedtls_md_update>
   10f68:	85 c0                	test   %eax,%eax
   10f6a:	75 a0                	jne    10f0c <mbedtls_md_hmac_finish+0x5c>
   10f6c:	48 89 ee             	mov    %rbp,%rsi
   10f6f:	4c 89 f7             	mov    %r14,%rdi
   10f72:	e8 f9 f7 ff ff       	callq  10770 <mbedtls_md_finish>
   10f77:	eb 93                	jmp    10f0c <mbedtls_md_hmac_finish+0x5c>
   10f79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10f80:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   10f85:	eb 85                	jmp    10f0c <mbedtls_md_hmac_finish+0x5c>
   10f87:	e8 f4 22 ff ff       	callq  3280 <__stack_chk_fail@plt>
   10f8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010f90 <mbedtls_md_hmac_reset>:
   10f90:	f3 0f 1e fa          	endbr64 
   10f94:	48 85 ff             	test   %rdi,%rdi
   10f97:	74 56                	je     10fef <mbedtls_md_hmac_reset+0x5f>
   10f99:	41 54                	push   %r12
   10f9b:	55                   	push   %rbp
   10f9c:	48 89 fd             	mov    %rdi,%rbp
   10f9f:	48 83 ec 08          	sub    $0x8,%rsp
   10fa3:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   10fa7:	74 3f                	je     10fe8 <mbedtls_md_hmac_reset+0x58>
   10fa9:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10fad:	4d 85 e4             	test   %r12,%r12
   10fb0:	74 36                	je     10fe8 <mbedtls_md_hmac_reset+0x58>
   10fb2:	e8 79 f6 ff ff       	callq  10630 <mbedtls_md_starts>
   10fb7:	85 c0                	test   %eax,%eax
   10fb9:	74 0d                	je     10fc8 <mbedtls_md_hmac_reset+0x38>
   10fbb:	48 83 c4 08          	add    $0x8,%rsp
   10fbf:	5d                   	pop    %rbp
   10fc0:	41 5c                	pop    %r12
   10fc2:	c3                   	retq   
   10fc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10fc8:	48 8b 45 00          	mov    0x0(%rbp),%rax
   10fcc:	4c 89 e6             	mov    %r12,%rsi
   10fcf:	48 89 ef             	mov    %rbp,%rdi
   10fd2:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
   10fd6:	48 83 c4 08          	add    $0x8,%rsp
   10fda:	5d                   	pop    %rbp
   10fdb:	41 5c                	pop    %r12
   10fdd:	e9 0e f7 ff ff       	jmpq   106f0 <mbedtls_md_update>
   10fe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10fe8:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   10fed:	eb cc                	jmp    10fbb <mbedtls_md_hmac_reset+0x2b>
   10fef:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   10ff4:	c3                   	retq   
   10ff5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10ffc:	00 00 00 00 

0000000000011000 <mbedtls_md_hmac>:
   11000:	f3 0f 1e fa          	endbr64 
   11004:	41 57                	push   %r15
   11006:	41 56                	push   %r14
   11008:	41 55                	push   %r13
   1100a:	41 54                	push   %r12
   1100c:	55                   	push   %rbp
   1100d:	53                   	push   %rbx
   1100e:	48 83 ec 38          	sub    $0x38,%rsp
   11012:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   11017:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1101e:	00 00 
   11020:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   11025:	31 c0                	xor    %eax,%eax
   11027:	48 85 ff             	test   %rdi,%rdi
   1102a:	0f 84 b4 00 00 00    	je     110e4 <mbedtls_md_hmac+0xe4>
   11030:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   11035:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11039:	48 89 f5             	mov    %rsi,%rbp
   1103c:	49 89 d5             	mov    %rdx,%r13
   1103f:	48 89 fe             	mov    %rdi,%rsi
   11042:	ba 01 00 00 00       	mov    $0x1,%edx
   11047:	4c 89 f7             	mov    %r14,%rdi
   1104a:	48 89 cb             	mov    %rcx,%rbx
   1104d:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   11054:	00 00 
   11056:	4d 89 c7             	mov    %r8,%r15
   11059:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1105e:	e8 5d f4 ff ff       	callq  104c0 <mbedtls_md_setup>
   11063:	41 89 c4             	mov    %eax,%r12d
   11066:	85 c0                	test   %eax,%eax
   11068:	74 2e                	je     11098 <mbedtls_md_hmac+0x98>
   1106a:	4c 89 f7             	mov    %r14,%rdi
   1106d:	e8 7e f2 ff ff       	callq  102f0 <mbedtls_md_free>
   11072:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   11077:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1107e:	00 00 
   11080:	75 75                	jne    110f7 <mbedtls_md_hmac+0xf7>
   11082:	48 83 c4 38          	add    $0x38,%rsp
   11086:	44 89 e0             	mov    %r12d,%eax
   11089:	5b                   	pop    %rbx
   1108a:	5d                   	pop    %rbp
   1108b:	41 5c                	pop    %r12
   1108d:	41 5d                	pop    %r13
   1108f:	41 5e                	pop    %r14
   11091:	41 5f                	pop    %r15
   11093:	c3                   	retq   
   11094:	0f 1f 40 00          	nopl   0x0(%rax)
   11098:	4c 89 ea             	mov    %r13,%rdx
   1109b:	48 89 ee             	mov    %rbp,%rsi
   1109e:	4c 89 f7             	mov    %r14,%rdi
   110a1:	e8 fa fa ff ff       	callq  10ba0 <mbedtls_md_hmac_starts>
   110a6:	41 89 c4             	mov    %eax,%r12d
   110a9:	85 c0                	test   %eax,%eax
   110ab:	75 bd                	jne    1106a <mbedtls_md_hmac+0x6a>
   110ad:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   110b3:	74 37                	je     110ec <mbedtls_md_hmac+0xec>
   110b5:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   110bb:	74 2f                	je     110ec <mbedtls_md_hmac+0xec>
   110bd:	4c 89 fa             	mov    %r15,%rdx
   110c0:	48 89 de             	mov    %rbx,%rsi
   110c3:	4c 89 f7             	mov    %r14,%rdi
   110c6:	e8 25 f6 ff ff       	callq  106f0 <mbedtls_md_update>
   110cb:	41 89 c4             	mov    %eax,%r12d
   110ce:	85 c0                	test   %eax,%eax
   110d0:	75 98                	jne    1106a <mbedtls_md_hmac+0x6a>
   110d2:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   110d7:	4c 89 f7             	mov    %r14,%rdi
   110da:	e8 d1 fd ff ff       	callq  10eb0 <mbedtls_md_hmac_finish>
   110df:	41 89 c4             	mov    %eax,%r12d
   110e2:	eb 86                	jmp    1106a <mbedtls_md_hmac+0x6a>
   110e4:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
   110ea:	eb 86                	jmp    11072 <mbedtls_md_hmac+0x72>
   110ec:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
   110f2:	e9 73 ff ff ff       	jmpq   1106a <mbedtls_md_hmac+0x6a>
   110f7:	e8 84 21 ff ff       	callq  3280 <__stack_chk_fail@plt>
   110fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011100 <mbedtls_md_get_name>:
   11100:	f3 0f 1e fa          	endbr64 
   11104:	48 85 ff             	test   %rdi,%rdi
   11107:	74 07                	je     11110 <mbedtls_md_get_name+0x10>
   11109:	48 8b 07             	mov    (%rdi),%rax
   1110c:	c3                   	retq   
   1110d:	0f 1f 00             	nopl   (%rax)
   11110:	31 c0                	xor    %eax,%eax
   11112:	c3                   	retq   
   11113:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1111a:	00 00 00 
   1111d:	0f 1f 00             	nopl   (%rax)

0000000000011120 <mbedtls_md5_init>:
   11120:	f3 0f 1e fa          	endbr64 
   11124:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1112b:	48 89 f9             	mov    %rdi,%rcx
   1112e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   11132:	31 c0                	xor    %eax,%eax
   11134:	48 c7 47 48 00 00 00 	movq   $0x0,0x48(%rdi)
   1113b:	00 
   1113c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11140:	48 29 f9             	sub    %rdi,%rcx
   11143:	83 c1 58             	add    $0x58,%ecx
   11146:	c1 e9 03             	shr    $0x3,%ecx
   11149:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1114c:	c3                   	retq   
   1114d:	0f 1f 00             	nopl   (%rax)

0000000000011150 <mbedtls_md5_free>:
   11150:	f3 0f 1e fa          	endbr64 
   11154:	48 85 ff             	test   %rdi,%rdi
   11157:	74 0f                	je     11168 <mbedtls_md5_free+0x18>
   11159:	be 58 00 00 00       	mov    $0x58,%esi
   1115e:	e9 cd 17 00 00       	jmpq   12930 <mbedtls_platform_zeroize>
   11163:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11168:	c3                   	retq   
   11169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011170 <mbedtls_md5_clone>:
   11170:	f3 0f 1e fa          	endbr64 
   11174:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   11178:	0f 11 07             	movups %xmm0,(%rdi)
   1117b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   11180:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   11184:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   11189:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   1118d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   11192:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   11196:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   1119b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   1119f:	48 8b 46 50          	mov    0x50(%rsi),%rax
   111a3:	48 89 47 50          	mov    %rax,0x50(%rdi)
   111a7:	c3                   	retq   
   111a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   111af:	00 

00000000000111b0 <mbedtls_md5_starts>:
   111b0:	f3 0f 1e fa          	endbr64 
   111b4:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   111bb:	ab cd ef 
   111be:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   111c5:	48 89 47 08          	mov    %rax,0x8(%rdi)
   111c9:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   111d0:	54 32 10 
   111d3:	48 89 47 10          	mov    %rax,0x10(%rdi)
   111d7:	31 c0                	xor    %eax,%eax
   111d9:	c3                   	retq   
   111da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000111e0 <mbedtls_internal_md5_process>:
   111e0:	f3 0f 1e fa          	endbr64 
   111e4:	41 57                	push   %r15
   111e6:	41 56                	push   %r14
   111e8:	41 55                	push   %r13
   111ea:	41 54                	push   %r12
   111ec:	55                   	push   %rbp
   111ed:	53                   	push   %rbx
   111ee:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   111f5:	44 8b 36             	mov    (%rsi),%r14d
   111f8:	44 8b 4e 04          	mov    0x4(%rsi),%r9d
   111fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11203:	00 00 
   11205:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1120a:	31 c0                	xor    %eax,%eax
   1120c:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
   11210:	8b 6e 14             	mov    0x14(%rsi),%ebp
   11213:	44 8b 6e 1c          	mov    0x1c(%rsi),%r13d
   11217:	44 8b 7e 08          	mov    0x8(%rsi),%r15d
   1121b:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
   11220:	8b 46 10             	mov    0x10(%rsi),%eax
   11223:	8b 5e 18             	mov    0x18(%rsi),%ebx
   11226:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
   1122b:	8b 4e 20             	mov    0x20(%rsi),%ecx
   1122e:	8b 56 24             	mov    0x24(%rsi),%edx
   11231:	44 89 7c 24 28       	mov    %r15d,0x28(%rsp)
   11236:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   1123b:	89 04 24             	mov    %eax,(%rsp)
   1123e:	89 44 24 30          	mov    %eax,0x30(%rsp)
   11242:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
   11246:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
   1124a:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
   1124e:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   11252:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   11256:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   1125a:	44 89 6c 24 3c       	mov    %r13d,0x3c(%rsp)
   1125f:	89 54 24 44          	mov    %edx,0x44(%rsp)
   11263:	44 8b 66 34          	mov    0x34(%rsi),%r12d
   11267:	44 8b 56 28          	mov    0x28(%rsi),%r10d
   1126b:	8b 5e 30             	mov    0x30(%rsi),%ebx
   1126e:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   11273:	44 8b 46 2c          	mov    0x2c(%rsi),%r8d
   11277:	8b 47 08             	mov    0x8(%rdi),%eax
   1127a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
   1127f:	8b 57 0c             	mov    0xc(%rdi),%edx
   11282:	33 57 10             	xor    0x10(%rdi),%edx
   11285:	44 89 64 24 54       	mov    %r12d,0x54(%rsp)
   1128a:	44 8b 66 38          	mov    0x38(%rsi),%r12d
   1128e:	8b 76 3c             	mov    0x3c(%rsi),%esi
   11291:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   11296:	42 8d 84 30 78 a4 6a 	lea    -0x28955b88(%rax,%r14,1),%eax
   1129d:	d7 
   1129e:	8b 4f 10             	mov    0x10(%rdi),%ecx
   112a1:	44 89 44 24 4c       	mov    %r8d,0x4c(%rsp)
   112a6:	89 74 24 18          	mov    %esi,0x18(%rsp)
   112aa:	89 74 24 5c          	mov    %esi,0x5c(%rsp)
   112ae:	8b 77 10             	mov    0x10(%rdi),%esi
   112b1:	42 8d 8c 39 db 70 20 	lea    0x242070db(%rcx,%r15,1),%ecx
   112b8:	24 
   112b9:	33 77 14             	xor    0x14(%rdi),%esi
   112bc:	23 77 0c             	and    0xc(%rdi),%esi
   112bf:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
   112c4:	33 77 14             	xor    0x14(%rdi),%esi
   112c7:	44 8b 3c 24          	mov    (%rsp),%r15d
   112cb:	89 5c 24 50          	mov    %ebx,0x50(%rsp)
   112cf:	01 c6                	add    %eax,%esi
   112d1:	8b 47 14             	mov    0x14(%rdi),%eax
   112d4:	44 89 64 24 58       	mov    %r12d,0x58(%rsp)
   112d9:	c1 c6 07             	rol    $0x7,%esi
   112dc:	03 77 0c             	add    0xc(%rdi),%esi
   112df:	21 f2                	and    %esi,%edx
   112e1:	42 8d 84 08 56 b7 c7 	lea    -0x173848aa(%rax,%r9,1),%eax
   112e8:	e8 
   112e9:	33 57 10             	xor    0x10(%rdi),%edx
   112ec:	01 c2                	add    %eax,%edx
   112ee:	8b 47 0c             	mov    0xc(%rdi),%eax
   112f1:	c1 c2 0c             	rol    $0xc,%edx
   112f4:	01 f2                	add    %esi,%edx
   112f6:	31 f0                	xor    %esi,%eax
   112f8:	21 d0                	and    %edx,%eax
   112fa:	33 47 0c             	xor    0xc(%rdi),%eax
   112fd:	01 c8                	add    %ecx,%eax
   112ff:	89 f1                	mov    %esi,%ecx
   11301:	31 d1                	xor    %edx,%ecx
   11303:	c1 c8 0f             	ror    $0xf,%eax
   11306:	01 d0                	add    %edx,%eax
   11308:	41 89 c8             	mov    %ecx,%r8d
   1130b:	8b 4f 0c             	mov    0xc(%rdi),%ecx
   1130e:	41 21 c0             	and    %eax,%r8d
   11311:	41 31 f0             	xor    %esi,%r8d
   11314:	42 8d 8c 19 ee ce bd 	lea    -0x3e423112(%rcx,%r11,1),%ecx
   1131b:	c1 
   1131c:	42 8d b4 3e af 0f 7c 	lea    -0xa83f051(%rsi,%r15,1),%esi
   11323:	f5 
   11324:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
   11329:	41 01 c8             	add    %ecx,%r8d
   1132c:	89 d1                	mov    %edx,%ecx
   1132e:	41 c1 c8 0a          	ror    $0xa,%r8d
   11332:	31 c1                	xor    %eax,%ecx
   11334:	41 01 c0             	add    %eax,%r8d
   11337:	44 21 c1             	and    %r8d,%ecx
   1133a:	31 d1                	xor    %edx,%ecx
   1133c:	8d 94 2a 2a c6 87 47 	lea    0x4787c62a(%rdx,%rbp,1),%edx
   11343:	01 f1                	add    %esi,%ecx
   11345:	89 c6                	mov    %eax,%esi
   11347:	c1 c1 07             	rol    $0x7,%ecx
   1134a:	44 01 c1             	add    %r8d,%ecx
   1134d:	44 31 c6             	xor    %r8d,%esi
   11350:	21 ce                	and    %ecx,%esi
   11352:	31 c6                	xor    %eax,%esi
   11354:	42 8d 84 38 13 46 30 	lea    -0x57cfb9ed(%rax,%r15,1),%eax
   1135b:	a8 
   1135c:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
   11361:	01 d6                	add    %edx,%esi
   11363:	44 89 c2             	mov    %r8d,%edx
   11366:	c1 c6 0c             	rol    $0xc,%esi
   11369:	31 ca                	xor    %ecx,%edx
   1136b:	01 ce                	add    %ecx,%esi
   1136d:	21 f2                	and    %esi,%edx
   1136f:	44 31 c2             	xor    %r8d,%edx
   11372:	47 8d 84 28 01 95 46 	lea    -0x2b96aff(%r8,%r13,1),%r8d
   11379:	fd 
   1137a:	01 c2                	add    %eax,%edx
   1137c:	89 c8                	mov    %ecx,%eax
   1137e:	c1 ca 0f             	ror    $0xf,%edx
   11381:	31 f0                	xor    %esi,%eax
   11383:	01 f2                	add    %esi,%edx
   11385:	21 d0                	and    %edx,%eax
   11387:	31 c8                	xor    %ecx,%eax
   11389:	42 8d 8c 39 d8 98 80 	lea    0x698098d8(%rcx,%r15,1),%ecx
   11390:	69 
   11391:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
   11396:	44 01 c0             	add    %r8d,%eax
   11399:	41 89 f0             	mov    %esi,%r8d
   1139c:	c1 c8 0a             	ror    $0xa,%eax
   1139f:	41 31 d0             	xor    %edx,%r8d
   113a2:	01 d0                	add    %edx,%eax
   113a4:	41 21 c0             	and    %eax,%r8d
   113a7:	41 31 f0             	xor    %esi,%r8d
   113aa:	42 8d b4 3e af f7 44 	lea    -0x74bb0851(%rsi,%r15,1),%esi
   113b1:	8b 
   113b2:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   113b7:	41 01 c8             	add    %ecx,%r8d
   113ba:	89 d1                	mov    %edx,%ecx
   113bc:	41 c1 c0 07          	rol    $0x7,%r8d
   113c0:	31 c1                	xor    %eax,%ecx
   113c2:	41 01 c0             	add    %eax,%r8d
   113c5:	44 21 c1             	and    %r8d,%ecx
   113c8:	31 d1                	xor    %edx,%ecx
   113ca:	42 8d 94 12 b1 5b ff 	lea    -0xa44f(%rdx,%r10,1),%edx
   113d1:	ff 
   113d2:	01 f1                	add    %esi,%ecx
   113d4:	89 c6                	mov    %eax,%esi
   113d6:	c1 c1 0c             	rol    $0xc,%ecx
   113d9:	44 31 c6             	xor    %r8d,%esi
   113dc:	44 01 c1             	add    %r8d,%ecx
   113df:	21 ce                	and    %ecx,%esi
   113e1:	31 c6                	xor    %eax,%esi
   113e3:	42 8d 84 38 be d7 5c 	lea    -0x76a32842(%rax,%r15,1),%eax
   113ea:	89 
   113eb:	01 d6                	add    %edx,%esi
   113ed:	44 89 c2             	mov    %r8d,%edx
   113f0:	c1 ce 0f             	ror    $0xf,%esi
   113f3:	31 ca                	xor    %ecx,%edx
   113f5:	01 ce                	add    %ecx,%esi
   113f7:	21 f2                	and    %esi,%edx
   113f9:	44 31 c2             	xor    %r8d,%edx
   113fc:	45 8d 84 18 22 11 90 	lea    0x6b901122(%r8,%rbx,1),%r8d
   11403:	6b 
   11404:	01 c2                	add    %eax,%edx
   11406:	89 c8                	mov    %ecx,%eax
   11408:	c1 ca 0a             	ror    $0xa,%edx
   1140b:	31 f0                	xor    %esi,%eax
   1140d:	01 f2                	add    %esi,%edx
   1140f:	21 d0                	and    %edx,%eax
   11411:	31 c8                	xor    %ecx,%eax
   11413:	44 01 c0             	add    %r8d,%eax
   11416:	41 89 f0             	mov    %esi,%r8d
   11419:	41 31 d0             	xor    %edx,%r8d
   1141c:	c1 c0 07             	rol    $0x7,%eax
   1141f:	01 d0                	add    %edx,%eax
   11421:	45 89 c7             	mov    %r8d,%r15d
   11424:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   11429:	41 21 c7             	and    %eax,%r15d
   1142c:	41 31 f7             	xor    %esi,%r15d
   1142f:	42 8d 8c 01 93 71 98 	lea    -0x2678e6d(%rcx,%r8,1),%ecx
   11436:	fd 
   11437:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
   1143c:	42 8d b4 26 8e 43 79 	lea    -0x5986bc72(%rsi,%r12,1),%esi
   11443:	a6 
   11444:	41 01 cf             	add    %ecx,%r15d
   11447:	89 d1                	mov    %edx,%ecx
   11449:	41 c1 c7 0c          	rol    $0xc,%r15d
   1144d:	31 c1                	xor    %eax,%ecx
   1144f:	41 01 c7             	add    %eax,%r15d
   11452:	44 21 f9             	and    %r15d,%ecx
   11455:	31 d1                	xor    %edx,%ecx
   11457:	42 8d 94 02 21 08 b4 	lea    0x49b40821(%rdx,%r8,1),%edx
   1145e:	49 
   1145f:	01 f1                	add    %esi,%ecx
   11461:	89 c6                	mov    %eax,%esi
   11463:	c1 c9 0f             	ror    $0xf,%ecx
   11466:	44 31 fe             	xor    %r15d,%esi
   11469:	44 01 f9             	add    %r15d,%ecx
   1146c:	21 ce                	and    %ecx,%esi
   1146e:	31 c6                	xor    %eax,%esi
   11470:	42 8d 84 08 62 25 1e 	lea    -0x9e1da9e(%rax,%r9,1),%eax
   11477:	f6 
   11478:	01 d6                	add    %edx,%esi
   1147a:	89 ca                	mov    %ecx,%edx
   1147c:	c1 ce 0a             	ror    $0xa,%esi
   1147f:	01 ce                	add    %ecx,%esi
   11481:	31 f2                	xor    %esi,%edx
   11483:	41 89 d0             	mov    %edx,%r8d
   11486:	89 f2                	mov    %esi,%edx
   11488:	45 21 f8             	and    %r15d,%r8d
   1148b:	41 31 c8             	xor    %ecx,%r8d
   1148e:	41 01 c0             	add    %eax,%r8d
   11491:	8b 44 24 04          	mov    0x4(%rsp),%eax
   11495:	41 c1 c0 05          	rol    $0x5,%r8d
   11499:	41 01 f0             	add    %esi,%r8d
   1149c:	41 8d 84 07 40 b3 40 	lea    -0x3fbf4cc0(%r15,%rax,1),%eax
   114a3:	c0 
   114a4:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   114a9:	44 31 c2             	xor    %r8d,%edx
   114ac:	21 ca                	and    %ecx,%edx
   114ae:	42 8d 8c 39 51 5a 5e 	lea    0x265e5a51(%rcx,%r15,1),%ecx
   114b5:	26 
   114b6:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
   114bb:	31 f2                	xor    %esi,%edx
   114bd:	01 c2                	add    %eax,%edx
   114bf:	44 89 c0             	mov    %r8d,%eax
   114c2:	c1 c2 09             	rol    $0x9,%edx
   114c5:	44 01 c2             	add    %r8d,%edx
   114c8:	31 d0                	xor    %edx,%eax
   114ca:	21 f0                	and    %esi,%eax
   114cc:	42 8d b4 36 aa c7 b6 	lea    -0x16493856(%rsi,%r14,1),%esi
   114d3:	e9 
   114d4:	44 31 c0             	xor    %r8d,%eax
   114d7:	01 c8                	add    %ecx,%eax
   114d9:	89 d1                	mov    %edx,%ecx
   114db:	c1 c0 0e             	rol    $0xe,%eax
   114de:	01 d0                	add    %edx,%eax
   114e0:	31 c1                	xor    %eax,%ecx
   114e2:	44 21 c1             	and    %r8d,%ecx
   114e5:	45 8d 84 28 5d 10 2f 	lea    -0x29d0efa3(%r8,%rbp,1),%r8d
   114ec:	d6 
   114ed:	31 d1                	xor    %edx,%ecx
   114ef:	01 f1                	add    %esi,%ecx
   114f1:	89 c6                	mov    %eax,%esi
   114f3:	c1 c9 0c             	ror    $0xc,%ecx
   114f6:	01 c1                	add    %eax,%ecx
   114f8:	31 ce                	xor    %ecx,%esi
   114fa:	21 d6                	and    %edx,%esi
   114fc:	42 8d 94 12 53 14 44 	lea    0x2441453(%rdx,%r10,1),%edx
   11503:	02 
   11504:	31 c6                	xor    %eax,%esi
   11506:	44 01 c6             	add    %r8d,%esi
   11509:	41 89 c8             	mov    %ecx,%r8d
   1150c:	c1 c6 05             	rol    $0x5,%esi
   1150f:	01 ce                	add    %ecx,%esi
   11511:	41 31 f0             	xor    %esi,%r8d
   11514:	41 21 c0             	and    %eax,%r8d
   11517:	42 8d 84 38 81 e6 a1 	lea    -0x275e197f(%rax,%r15,1),%eax
   1151e:	d8 
   1151f:	44 8b 3c 24          	mov    (%rsp),%r15d
   11523:	41 31 c8             	xor    %ecx,%r8d
   11526:	41 01 d0             	add    %edx,%r8d
   11529:	89 f2                	mov    %esi,%edx
   1152b:	41 c1 c0 09          	rol    $0x9,%r8d
   1152f:	41 01 f0             	add    %esi,%r8d
   11532:	44 31 c2             	xor    %r8d,%edx
   11535:	21 ca                	and    %ecx,%edx
   11537:	42 8d 8c 39 c8 fb d3 	lea    -0x182c0438(%rcx,%r15,1),%ecx
   1153e:	e7 
   1153f:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
   11544:	31 f2                	xor    %esi,%edx
   11546:	01 c2                	add    %eax,%edx
   11548:	44 89 c0             	mov    %r8d,%eax
   1154b:	c1 c2 0e             	rol    $0xe,%edx
   1154e:	44 01 c2             	add    %r8d,%edx
   11551:	31 d0                	xor    %edx,%eax
   11553:	21 f0                	and    %esi,%eax
   11555:	42 8d b4 3e e6 cd e1 	lea    0x21e1cde6(%rsi,%r15,1),%esi
   1155c:	21 
   1155d:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
   11562:	44 31 c0             	xor    %r8d,%eax
   11565:	01 c8                	add    %ecx,%eax
   11567:	89 d1                	mov    %edx,%ecx
   11569:	c1 c8 0c             	ror    $0xc,%eax
   1156c:	01 d0                	add    %edx,%eax
   1156e:	31 c1                	xor    %eax,%ecx
   11570:	44 21 c1             	and    %r8d,%ecx
   11573:	47 8d 84 20 d6 07 37 	lea    -0x3cc8f82a(%r8,%r12,1),%r8d
   1157a:	c3 
   1157b:	31 d1                	xor    %edx,%ecx
   1157d:	01 f1                	add    %esi,%ecx
   1157f:	89 c6                	mov    %eax,%esi
   11581:	c1 c1 05             	rol    $0x5,%ecx
   11584:	01 c1                	add    %eax,%ecx
   11586:	31 ce                	xor    %ecx,%esi
   11588:	21 d6                	and    %edx,%esi
   1158a:	42 8d 94 1a 87 0d d5 	lea    -0xb2af279(%rdx,%r11,1),%edx
   11591:	f4 
   11592:	31 c6                	xor    %eax,%esi
   11594:	44 01 c6             	add    %r8d,%esi
   11597:	41 89 c8             	mov    %ecx,%r8d
   1159a:	c1 c6 09             	rol    $0x9,%esi
   1159d:	01 ce                	add    %ecx,%esi
   1159f:	41 31 f0             	xor    %esi,%r8d
   115a2:	41 21 c0             	and    %eax,%r8d
   115a5:	42 8d 84 38 ed 14 5a 	lea    0x455a14ed(%rax,%r15,1),%eax
   115ac:	45 
   115ad:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
   115b2:	41 31 c8             	xor    %ecx,%r8d
   115b5:	41 01 d0             	add    %edx,%r8d
   115b8:	89 f2                	mov    %esi,%edx
   115ba:	41 c1 c0 0e          	rol    $0xe,%r8d
   115be:	41 01 f0             	add    %esi,%r8d
   115c1:	44 31 c2             	xor    %r8d,%edx
   115c4:	21 ca                	and    %ecx,%edx
   115c6:	42 8d 8c 39 05 e9 e3 	lea    -0x561c16fb(%rcx,%r15,1),%ecx
   115cd:	a9 
   115ce:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   115d3:	31 f2                	xor    %esi,%edx
   115d5:	01 c2                	add    %eax,%edx
   115d7:	44 89 c0             	mov    %r8d,%eax
   115da:	c1 ca 0c             	ror    $0xc,%edx
   115dd:	44 01 c2             	add    %r8d,%edx
   115e0:	31 d0                	xor    %edx,%eax
   115e2:	21 f0                	and    %esi,%eax
   115e4:	42 8d b4 3e f8 a3 ef 	lea    -0x3105c08(%rsi,%r15,1),%esi
   115eb:	fc 
   115ec:	44 31 c0             	xor    %r8d,%eax
   115ef:	01 c8                	add    %ecx,%eax
   115f1:	89 d1                	mov    %edx,%ecx
   115f3:	c1 c0 05             	rol    $0x5,%eax
   115f6:	01 d0                	add    %edx,%eax
   115f8:	31 c1                	xor    %eax,%ecx
   115fa:	44 21 c1             	and    %r8d,%ecx
   115fd:	47 8d 84 28 d9 02 6f 	lea    0x676f02d9(%r8,%r13,1),%r8d
   11604:	67 
   11605:	31 d1                	xor    %edx,%ecx
   11607:	01 f1                	add    %esi,%ecx
   11609:	89 c6                	mov    %eax,%esi
   1160b:	c1 c1 09             	rol    $0x9,%ecx
   1160e:	01 c1                	add    %eax,%ecx
   11610:	31 ce                	xor    %ecx,%esi
   11612:	21 d6                	and    %edx,%esi
   11614:	8d 94 1a 8a 4c 2a 8d 	lea    -0x72d5b376(%rdx,%rbx,1),%edx
   1161b:	31 c6                	xor    %eax,%esi
   1161d:	44 01 c6             	add    %r8d,%esi
   11620:	41 89 c8             	mov    %ecx,%r8d
   11623:	c1 c6 0e             	rol    $0xe,%esi
   11626:	01 ce                	add    %ecx,%esi
   11628:	41 31 f0             	xor    %esi,%r8d
   1162b:	45 89 c7             	mov    %r8d,%r15d
   1162e:	41 89 c0             	mov    %eax,%r8d
   11631:	8d 84 28 42 39 fa ff 	lea    -0x5c6be(%rax,%rbp,1),%eax
   11638:	45 21 f8             	and    %r15d,%r8d
   1163b:	41 31 c8             	xor    %ecx,%r8d
   1163e:	41 01 d0             	add    %edx,%r8d
   11641:	89 f2                	mov    %esi,%edx
   11643:	41 c1 c8 0c          	ror    $0xc,%r8d
   11647:	41 01 f0             	add    %esi,%r8d
   1164a:	45 31 c7             	xor    %r8d,%r15d
   1164d:	44 31 c2             	xor    %r8d,%edx
   11650:	41 01 c7             	add    %eax,%r15d
   11653:	8b 44 24 08          	mov    0x8(%rsp),%eax
   11657:	41 c1 c7 04          	rol    $0x4,%r15d
   1165b:	45 01 c7             	add    %r8d,%r15d
   1165e:	8d 84 01 81 f6 71 87 	lea    -0x788e097f(%rcx,%rax,1),%eax
   11665:	44 89 c1             	mov    %r8d,%ecx
   11668:	44 31 fa             	xor    %r15d,%edx
   1166b:	44 31 f9             	xor    %r15d,%ecx
   1166e:	01 c2                	add    %eax,%edx
   11670:	8b 44 24 10          	mov    0x10(%rsp),%eax
   11674:	c1 c2 0b             	rol    $0xb,%edx
   11677:	44 01 fa             	add    %r15d,%edx
   1167a:	8d 84 06 22 61 9d 6d 	lea    0x6d9d6122(%rsi,%rax,1),%eax
   11681:	44 89 fe             	mov    %r15d,%esi
   11684:	31 d1                	xor    %edx,%ecx
   11686:	31 d6                	xor    %edx,%esi
   11688:	01 c1                	add    %eax,%ecx
   1168a:	89 f0                	mov    %esi,%eax
   1168c:	43 8d b4 20 0c 38 e5 	lea    -0x21ac7f4(%r8,%r12,1),%esi
   11693:	fd 
   11694:	c1 c1 10             	rol    $0x10,%ecx
   11697:	47 8d 84 0f 44 ea be 	lea    -0x5b4115bc(%r15,%r9,1),%r8d
   1169e:	a4 
   1169f:	44 8b 3c 24          	mov    (%rsp),%r15d
   116a3:	01 d1                	add    %edx,%ecx
   116a5:	31 c8                	xor    %ecx,%eax
   116a7:	01 f0                	add    %esi,%eax
   116a9:	89 d6                	mov    %edx,%esi
   116ab:	42 8d 94 3a a9 cf de 	lea    0x4bdecfa9(%rdx,%r15,1),%edx
   116b2:	4b 
   116b3:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
   116b8:	c1 c8 09             	ror    $0x9,%eax
   116bb:	31 ce                	xor    %ecx,%esi
   116bd:	01 c8                	add    %ecx,%eax
   116bf:	31 c6                	xor    %eax,%esi
   116c1:	44 01 c6             	add    %r8d,%esi
   116c4:	41 89 c8             	mov    %ecx,%r8d
   116c7:	42 8d 8c 29 60 4b bb 	lea    -0x944b4a0(%rcx,%r13,1),%ecx
   116ce:	f6 
   116cf:	c1 c6 04             	rol    $0x4,%esi
   116d2:	41 31 c0             	xor    %eax,%r8d
   116d5:	01 c6                	add    %eax,%esi
   116d7:	41 31 f0             	xor    %esi,%r8d
   116da:	41 01 d0             	add    %edx,%r8d
   116dd:	89 c2                	mov    %eax,%edx
   116df:	42 8d 84 10 70 bc bf 	lea    -0x41404390(%rax,%r10,1),%eax
   116e6:	be 
   116e7:	41 c1 c0 0b          	rol    $0xb,%r8d
   116eb:	31 f2                	xor    %esi,%edx
   116ed:	41 01 f0             	add    %esi,%r8d
   116f0:	44 31 c2             	xor    %r8d,%edx
   116f3:	01 ca                	add    %ecx,%edx
   116f5:	89 f1                	mov    %esi,%ecx
   116f7:	42 8d b4 3e c6 7e 9b 	lea    0x289b7ec6(%rsi,%r15,1),%esi
   116fe:	28 
   116ff:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
   11704:	c1 c2 10             	rol    $0x10,%edx
   11707:	44 31 c1             	xor    %r8d,%ecx
   1170a:	44 01 c2             	add    %r8d,%edx
   1170d:	31 d1                	xor    %edx,%ecx
   1170f:	01 c1                	add    %eax,%ecx
   11711:	44 89 c0             	mov    %r8d,%eax
   11714:	47 8d 84 30 fa 27 a1 	lea    -0x155ed806(%r8,%r14,1),%r8d
   1171b:	ea 
   1171c:	c1 c9 09             	ror    $0x9,%ecx
   1171f:	31 d0                	xor    %edx,%eax
   11721:	01 d1                	add    %edx,%ecx
   11723:	31 c8                	xor    %ecx,%eax
   11725:	01 c6                	add    %eax,%esi
   11727:	89 d0                	mov    %edx,%eax
   11729:	42 8d 94 1a 85 30 ef 	lea    -0x2b10cf7b(%rdx,%r11,1),%edx
   11730:	d4 
   11731:	c1 c6 04             	rol    $0x4,%esi
   11734:	31 c8                	xor    %ecx,%eax
   11736:	01 ce                	add    %ecx,%esi
   11738:	31 f0                	xor    %esi,%eax
   1173a:	44 01 c0             	add    %r8d,%eax
   1173d:	41 89 c8             	mov    %ecx,%r8d
   11740:	42 8d 8c 39 05 1d 88 	lea    0x4881d05(%rcx,%r15,1),%ecx
   11747:	04 
   11748:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
   1174d:	c1 c0 0b             	rol    $0xb,%eax
   11750:	41 31 f0             	xor    %esi,%r8d
   11753:	01 f0                	add    %esi,%eax
   11755:	41 31 c0             	xor    %eax,%r8d
   11758:	41 01 d0             	add    %edx,%r8d
   1175b:	89 f2                	mov    %esi,%edx
   1175d:	42 8d b4 3e 39 d0 d4 	lea    -0x262b2fc7(%rsi,%r15,1),%esi
   11764:	d9 
   11765:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
   1176a:	41 c1 c0 10          	rol    $0x10,%r8d
   1176e:	31 c2                	xor    %eax,%edx
   11770:	41 01 c0             	add    %eax,%r8d
   11773:	44 31 c2             	xor    %r8d,%edx
   11776:	01 d1                	add    %edx,%ecx
   11778:	89 c2                	mov    %eax,%edx
   1177a:	8d 84 18 e5 99 db e6 	lea    -0x1924661b(%rax,%rbx,1),%eax
   11781:	c1 c9 09             	ror    $0x9,%ecx
   11784:	44 31 c2             	xor    %r8d,%edx
   11787:	44 01 c1             	add    %r8d,%ecx
   1178a:	31 ca                	xor    %ecx,%edx
   1178c:	01 f2                	add    %esi,%edx
   1178e:	44 89 c6             	mov    %r8d,%esi
   11791:	47 8d 84 38 f8 7c a2 	lea    0x1fa27cf8(%r8,%r15,1),%r8d
   11798:	1f 
   11799:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1179e:	c1 c2 04             	rol    $0x4,%edx
   117a1:	31 ce                	xor    %ecx,%esi
   117a3:	01 ca                	add    %ecx,%edx
   117a5:	31 d6                	xor    %edx,%esi
   117a7:	01 c6                	add    %eax,%esi
   117a9:	89 c8                	mov    %ecx,%eax
   117ab:	42 8d 8c 39 65 56 ac 	lea    -0x3b53a99b(%rcx,%r15,1),%ecx
   117b2:	c4 
   117b3:	c1 c6 0b             	rol    $0xb,%esi
   117b6:	31 d0                	xor    %edx,%eax
   117b8:	01 d6                	add    %edx,%esi
   117ba:	31 f0                	xor    %esi,%eax
   117bc:	41 01 c0             	add    %eax,%r8d
   117bf:	89 d0                	mov    %edx,%eax
   117c1:	42 8d 94 32 44 22 29 	lea    -0xbd6ddbc(%rdx,%r14,1),%edx
   117c8:	f4 
   117c9:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   117ce:	41 c1 c0 10          	rol    $0x10,%r8d
   117d2:	31 f0                	xor    %esi,%eax
   117d4:	41 01 f0             	add    %esi,%r8d
   117d7:	44 31 c0             	xor    %r8d,%eax
   117da:	01 c1                	add    %eax,%ecx
   117dc:	89 f0                	mov    %esi,%eax
   117de:	42 8d b4 2e 97 ff 2a 	lea    0x432aff97(%rsi,%r13,1),%esi
   117e5:	43 
   117e6:	c1 c9 09             	ror    $0x9,%ecx
   117e9:	f7 d0                	not    %eax
   117eb:	44 01 c1             	add    %r8d,%ecx
   117ee:	09 c8                	or     %ecx,%eax
   117f0:	44 31 c0             	xor    %r8d,%eax
   117f3:	01 d0                	add    %edx,%eax
   117f5:	44 89 c2             	mov    %r8d,%edx
   117f8:	47 8d 84 20 a7 23 94 	lea    -0x546bdc59(%r8,%r12,1),%r8d
   117ff:	ab 
   11800:	c1 c0 06             	rol    $0x6,%eax
   11803:	f7 d2                	not    %edx
   11805:	01 c8                	add    %ecx,%eax
   11807:	09 c2                	or     %eax,%edx
   11809:	31 ca                	xor    %ecx,%edx
   1180b:	01 f2                	add    %esi,%edx
   1180d:	89 ce                	mov    %ecx,%esi
   1180f:	8d 8c 29 39 a0 93 fc 	lea    -0x36c5fc7(%rcx,%rbp,1),%ecx
   11816:	c1 c2 0a             	rol    $0xa,%edx
   11819:	f7 d6                	not    %esi
   1181b:	01 c2                	add    %eax,%edx
   1181d:	09 d6                	or     %edx,%esi
   1181f:	31 c6                	xor    %eax,%esi
   11821:	44 01 c6             	add    %r8d,%esi
   11824:	41 89 c0             	mov    %eax,%r8d
   11827:	8d 84 18 c3 59 5b 65 	lea    0x655b59c3(%rax,%rbx,1),%eax
   1182e:	8b 1c 24             	mov    (%rsp),%ebx
   11831:	c1 c6 0f             	rol    $0xf,%esi
   11834:	41 f7 d0             	not    %r8d
   11837:	01 d6                	add    %edx,%esi
   11839:	41 09 f0             	or     %esi,%r8d
   1183c:	89 f5                	mov    %esi,%ebp
   1183e:	41 31 d0             	xor    %edx,%r8d
   11841:	f7 d5                	not    %ebp
   11843:	41 01 c8             	add    %ecx,%r8d
   11846:	89 d1                	mov    %edx,%ecx
   11848:	42 8d 94 1a 92 cc 0c 	lea    -0x70f3336e(%rdx,%r11,1),%edx
   1184f:	8f 
   11850:	44 8b 5c 24 14       	mov    0x14(%rsp),%r11d
   11855:	41 c1 c8 0b          	ror    $0xb,%r8d
   11859:	f7 d1                	not    %ecx
   1185b:	41 01 f0             	add    %esi,%r8d
   1185e:	44 09 c1             	or     %r8d,%ecx
   11861:	31 f1                	xor    %esi,%ecx
   11863:	42 8d b4 16 7d f4 ef 	lea    -0x100b83(%rsi,%r10,1),%esi
   1186a:	ff 
   1186b:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
   11870:	01 c1                	add    %eax,%ecx
   11872:	89 e8                	mov    %ebp,%eax
   11874:	c1 c1 06             	rol    $0x6,%ecx
   11877:	44 01 c1             	add    %r8d,%ecx
   1187a:	09 c8                	or     %ecx,%eax
   1187c:	44 31 c0             	xor    %r8d,%eax
   1187f:	01 d0                	add    %edx,%eax
   11881:	44 89 c2             	mov    %r8d,%edx
   11884:	47 8d 84 08 d1 5d 84 	lea    -0x7a7ba22f(%r8,%r9,1),%r8d
   1188b:	85 
   1188c:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
   11891:	c1 c0 0a             	rol    $0xa,%eax
   11894:	f7 d2                	not    %edx
   11896:	01 c8                	add    %ecx,%eax
   11898:	09 c2                	or     %eax,%edx
   1189a:	31 ca                	xor    %ecx,%edx
   1189c:	01 f2                	add    %esi,%edx
   1189e:	89 ce                	mov    %ecx,%esi
   118a0:	42 8d 8c 11 4f 7e a8 	lea    0x6fa87e4f(%rcx,%r10,1),%ecx
   118a7:	6f 
   118a8:	c1 c2 0f             	rol    $0xf,%edx
   118ab:	f7 d6                	not    %esi
   118ad:	01 c2                	add    %eax,%edx
   118af:	09 d6                	or     %edx,%esi
   118b1:	31 c6                	xor    %eax,%esi
   118b3:	44 01 c6             	add    %r8d,%esi
   118b6:	41 89 c0             	mov    %eax,%r8d
   118b9:	42 8d 84 30 e0 e6 2c 	lea    -0x1d31920(%rax,%r14,1),%eax
   118c0:	fe 
   118c1:	c1 ce 0b             	ror    $0xb,%esi
   118c4:	41 f7 d0             	not    %r8d
   118c7:	01 d6                	add    %edx,%esi
   118c9:	41 09 f0             	or     %esi,%r8d
   118cc:	41 31 d0             	xor    %edx,%r8d
   118cf:	41 01 c8             	add    %ecx,%r8d
   118d2:	89 d1                	mov    %edx,%ecx
   118d4:	42 8d 94 0a 14 43 01 	lea    -0x5cfebcec(%rdx,%r9,1),%edx
   118db:	a3 
   118dc:	41 c1 c0 06          	rol    $0x6,%r8d
   118e0:	f7 d1                	not    %ecx
   118e2:	41 01 f0             	add    %esi,%r8d
   118e5:	44 09 c1             	or     %r8d,%ecx
   118e8:	31 f1                	xor    %esi,%ecx
   118ea:	01 c1                	add    %eax,%ecx
   118ec:	89 f0                	mov    %esi,%eax
   118ee:	42 8d b4 1e a1 11 08 	lea    0x4e0811a1(%rsi,%r11,1),%esi
   118f5:	4e 
   118f6:	c1 c1 0a             	rol    $0xa,%ecx
   118f9:	f7 d0                	not    %eax
   118fb:	44 01 c1             	add    %r8d,%ecx
   118fe:	09 c8                	or     %ecx,%eax
   11900:	44 31 c0             	xor    %r8d,%eax
   11903:	01 d0                	add    %edx,%eax
   11905:	44 89 c2             	mov    %r8d,%edx
   11908:	45 8d 84 18 82 7e 53 	lea    -0x8ac817e(%r8,%rbx,1),%r8d
   1190f:	f7 
   11910:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   11914:	c1 c0 0f             	rol    $0xf,%eax
   11917:	f7 d2                	not    %edx
   11919:	01 c8                	add    %ecx,%eax
   1191b:	09 c2                	or     %eax,%edx
   1191d:	31 ca                	xor    %ecx,%edx
   1191f:	01 d6                	add    %edx,%esi
   11921:	89 ca                	mov    %ecx,%edx
   11923:	8d 8c 19 35 f2 3a bd 	lea    -0x42c50dcb(%rcx,%rbx,1),%ecx
   1192a:	c1 ce 0b             	ror    $0xb,%esi
   1192d:	f7 d2                	not    %edx
   1192f:	01 c6                	add    %eax,%esi
   11931:	09 f2                	or     %esi,%edx
   11933:	31 c2                	xor    %eax,%edx
   11935:	44 01 c2             	add    %r8d,%edx
   11938:	41 89 c0             	mov    %eax,%r8d
   1193b:	42 8d 84 38 bb d2 d7 	lea    0x2ad7d2bb(%rax,%r15,1),%eax
   11942:	2a 
   11943:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
   11948:	c1 c2 06             	rol    $0x6,%edx
   1194b:	41 f7 d0             	not    %r8d
   1194e:	01 f2                	add    %esi,%edx
   11950:	41 09 d0             	or     %edx,%r8d
   11953:	89 54 24 60          	mov    %edx,0x60(%rsp)
   11957:	41 31 f0             	xor    %esi,%r8d
   1195a:	44 01 c1             	add    %r8d,%ecx
   1195d:	41 89 f0             	mov    %esi,%r8d
   11960:	42 8d b4 3e 91 d3 86 	lea    -0x14792c6f(%rsi,%r15,1),%esi
   11967:	eb 
   11968:	c1 c1 0a             	rol    $0xa,%ecx
   1196b:	41 f7 d0             	not    %r8d
   1196e:	01 d1                	add    %edx,%ecx
   11970:	41 09 c8             	or     %ecx,%r8d
   11973:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
   11977:	41 31 d0             	xor    %edx,%r8d
   1197a:	44 01 c0             	add    %r8d,%eax
   1197d:	41 89 d0             	mov    %edx,%r8d
   11980:	c1 c0 0f             	rol    $0xf,%eax
   11983:	41 f7 d0             	not    %r8d
   11986:	01 c8                	add    %ecx,%eax
   11988:	41 09 c0             	or     %eax,%r8d
   1198b:	89 44 24 68          	mov    %eax,0x68(%rsp)
   1198f:	41 31 c8             	xor    %ecx,%r8d
   11992:	44 01 c6             	add    %r8d,%esi
   11995:	c1 ce 0b             	ror    $0xb,%esi
   11998:	01 c6                	add    %eax,%esi
   1199a:	89 74 24 64          	mov    %esi,0x64(%rsp)
   1199e:	03 57 08             	add    0x8(%rdi),%edx
   119a1:	03 77 0c             	add    0xc(%rdi),%esi
   119a4:	03 47 10             	add    0x10(%rdi),%eax
   119a7:	89 57 08             	mov    %edx,0x8(%rdi)
   119aa:	03 4f 14             	add    0x14(%rdi),%ecx
   119ad:	89 77 0c             	mov    %esi,0xc(%rdi)
   119b0:	be 50 00 00 00       	mov    $0x50,%esi
   119b5:	89 47 10             	mov    %eax,0x10(%rdi)
   119b8:	89 4f 14             	mov    %ecx,0x14(%rdi)
   119bb:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   119c0:	e8 6b 0f 00 00       	callq  12930 <mbedtls_platform_zeroize>
   119c5:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   119ca:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   119d1:	00 00 
   119d3:	75 14                	jne    119e9 <mbedtls_internal_md5_process+0x809>
   119d5:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   119dc:	31 c0                	xor    %eax,%eax
   119de:	5b                   	pop    %rbx
   119df:	5d                   	pop    %rbp
   119e0:	41 5c                	pop    %r12
   119e2:	41 5d                	pop    %r13
   119e4:	41 5e                	pop    %r14
   119e6:	41 5f                	pop    %r15
   119e8:	c3                   	retq   
   119e9:	e8 92 18 ff ff       	callq  3280 <__stack_chk_fail@plt>
   119ee:	66 90                	xchg   %ax,%ax

00000000000119f0 <mbedtls_md5_update.part.0>:
   119f0:	41 56                	push   %r14
   119f2:	41 55                	push   %r13
   119f4:	41 54                	push   %r12
   119f6:	49 89 fc             	mov    %rdi,%r12
   119f9:	55                   	push   %rbp
   119fa:	48 89 f5             	mov    %rsi,%rbp
   119fd:	53                   	push   %rbx
   119fe:	8b 07                	mov    (%rdi),%eax
   11a00:	48 89 d3             	mov    %rdx,%rbx
   11a03:	ba 40 00 00 00       	mov    $0x40,%edx
   11a08:	41 89 c5             	mov    %eax,%r13d
   11a0b:	41 83 e5 3f          	and    $0x3f,%r13d
   11a0f:	44 29 ea             	sub    %r13d,%edx
   11a12:	01 d8                	add    %ebx,%eax
   11a14:	89 07                	mov    %eax,(%rdi)
   11a16:	41 89 d6             	mov    %edx,%r14d
   11a19:	73 04                	jae    11a1f <mbedtls_md5_update.part.0+0x2f>
   11a1b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   11a1f:	45 85 ed             	test   %r13d,%r13d
   11a22:	74 05                	je     11a29 <mbedtls_md5_update.part.0+0x39>
   11a24:	49 39 de             	cmp    %rbx,%r14
   11a27:	76 37                	jbe    11a60 <mbedtls_md5_update.part.0+0x70>
   11a29:	48 83 fb 3f          	cmp    $0x3f,%rbx
   11a2d:	77 17                	ja     11a46 <mbedtls_md5_update.part.0+0x56>
   11a2f:	eb 7f                	jmp    11ab0 <mbedtls_md5_update.part.0+0xc0>
   11a31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11a38:	48 83 eb 40          	sub    $0x40,%rbx
   11a3c:	48 83 c5 40          	add    $0x40,%rbp
   11a40:	48 83 fb 3f          	cmp    $0x3f,%rbx
   11a44:	76 6a                	jbe    11ab0 <mbedtls_md5_update.part.0+0xc0>
   11a46:	48 89 ee             	mov    %rbp,%rsi
   11a49:	4c 89 e7             	mov    %r12,%rdi
   11a4c:	e8 8f f7 ff ff       	callq  111e0 <mbedtls_internal_md5_process>
   11a51:	85 c0                	test   %eax,%eax
   11a53:	74 e3                	je     11a38 <mbedtls_md5_update.part.0+0x48>
   11a55:	5b                   	pop    %rbx
   11a56:	5d                   	pop    %rbp
   11a57:	41 5c                	pop    %r12
   11a59:	41 5d                	pop    %r13
   11a5b:	41 5e                	pop    %r14
   11a5d:	c3                   	retq   
   11a5e:	66 90                	xchg   %ax,%ax
   11a60:	4d 8d 44 24 18       	lea    0x18(%r12),%r8
   11a65:	4d 01 c5             	add    %r8,%r13
   11a68:	83 fa 08             	cmp    $0x8,%edx
   11a6b:	0f 83 87 00 00 00    	jae    11af8 <mbedtls_md5_update.part.0+0x108>
   11a71:	f6 c2 04             	test   $0x4,%dl
   11a74:	0f 85 19 01 00 00    	jne    11b93 <mbedtls_md5_update.part.0+0x1a3>
   11a7a:	85 d2                	test   %edx,%edx
   11a7c:	74 11                	je     11a8f <mbedtls_md5_update.part.0+0x9f>
   11a7e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   11a82:	83 e2 02             	and    $0x2,%edx
   11a85:	41 88 45 00          	mov    %al,0x0(%r13)
   11a89:	0f 85 30 01 00 00    	jne    11bbf <mbedtls_md5_update.part.0+0x1cf>
   11a8f:	4c 89 c6             	mov    %r8,%rsi
   11a92:	4c 89 e7             	mov    %r12,%rdi
   11a95:	e8 46 f7 ff ff       	callq  111e0 <mbedtls_internal_md5_process>
   11a9a:	85 c0                	test   %eax,%eax
   11a9c:	75 b7                	jne    11a55 <mbedtls_md5_update.part.0+0x65>
   11a9e:	4c 01 f5             	add    %r14,%rbp
   11aa1:	4c 29 f3             	sub    %r14,%rbx
   11aa4:	45 31 ed             	xor    %r13d,%r13d
   11aa7:	eb 80                	jmp    11a29 <mbedtls_md5_update.part.0+0x39>
   11aa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11ab0:	31 c0                	xor    %eax,%eax
   11ab2:	48 85 db             	test   %rbx,%rbx
   11ab5:	74 9e                	je     11a55 <mbedtls_md5_update.part.0+0x65>
   11ab7:	4b 8d 4c 2c 18       	lea    0x18(%r12,%r13,1),%rcx
   11abc:	89 d8                	mov    %ebx,%eax
   11abe:	83 fb 08             	cmp    $0x8,%ebx
   11ac1:	0f 83 7e 00 00 00    	jae    11b45 <mbedtls_md5_update.part.0+0x155>
   11ac7:	83 e3 04             	and    $0x4,%ebx
   11aca:	0f 85 d9 00 00 00    	jne    11ba9 <mbedtls_md5_update.part.0+0x1b9>
   11ad0:	85 c0                	test   %eax,%eax
   11ad2:	74 16                	je     11aea <mbedtls_md5_update.part.0+0xfa>
   11ad4:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   11ad8:	88 11                	mov    %dl,(%rcx)
   11ada:	a8 02                	test   $0x2,%al
   11adc:	74 0c                	je     11aea <mbedtls_md5_update.part.0+0xfa>
   11ade:	89 c2                	mov    %eax,%edx
   11ae0:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   11ae5:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   11aea:	31 c0                	xor    %eax,%eax
   11aec:	5b                   	pop    %rbx
   11aed:	5d                   	pop    %rbp
   11aee:	41 5c                	pop    %r12
   11af0:	41 5d                	pop    %r13
   11af2:	41 5e                	pop    %r14
   11af4:	c3                   	retq   
   11af5:	0f 1f 00             	nopl   (%rax)
   11af8:	48 8b 45 00          	mov    0x0(%rbp),%rax
   11afc:	49 8d 75 08          	lea    0x8(%r13),%rsi
   11b00:	49 89 e9             	mov    %rbp,%r9
   11b03:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   11b07:	49 89 45 00          	mov    %rax,0x0(%r13)
   11b0b:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
   11b10:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
   11b15:	49 29 f5             	sub    %rsi,%r13
   11b18:	44 01 ea             	add    %r13d,%edx
   11b1b:	4d 29 e9             	sub    %r13,%r9
   11b1e:	83 e2 f8             	and    $0xfffffff8,%edx
   11b21:	83 fa 08             	cmp    $0x8,%edx
   11b24:	0f 82 65 ff ff ff    	jb     11a8f <mbedtls_md5_update.part.0+0x9f>
   11b2a:	83 e2 f8             	and    $0xfffffff8,%edx
   11b2d:	31 c0                	xor    %eax,%eax
   11b2f:	89 c1                	mov    %eax,%ecx
   11b31:	83 c0 08             	add    $0x8,%eax
   11b34:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   11b38:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   11b3c:	39 d0                	cmp    %edx,%eax
   11b3e:	72 ef                	jb     11b2f <mbedtls_md5_update.part.0+0x13f>
   11b40:	e9 4a ff ff ff       	jmpq   11a8f <mbedtls_md5_update.part.0+0x9f>
   11b45:	48 8b 45 00          	mov    0x0(%rbp),%rax
   11b49:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   11b4d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   11b51:	48 89 01             	mov    %rax,(%rcx)
   11b54:	89 d8                	mov    %ebx,%eax
   11b56:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
   11b5b:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   11b60:	48 29 f1             	sub    %rsi,%rcx
   11b63:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   11b66:	48 29 cd             	sub    %rcx,%rbp
   11b69:	83 e0 f8             	and    $0xfffffff8,%eax
   11b6c:	83 f8 08             	cmp    $0x8,%eax
   11b6f:	0f 82 75 ff ff ff    	jb     11aea <mbedtls_md5_update.part.0+0xfa>
   11b75:	83 e0 f8             	and    $0xfffffff8,%eax
   11b78:	31 d2                	xor    %edx,%edx
   11b7a:	89 d1                	mov    %edx,%ecx
   11b7c:	83 c2 08             	add    $0x8,%edx
   11b7f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   11b84:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   11b88:	39 c2                	cmp    %eax,%edx
   11b8a:	72 ee                	jb     11b7a <mbedtls_md5_update.part.0+0x18a>
   11b8c:	31 c0                	xor    %eax,%eax
   11b8e:	e9 59 ff ff ff       	jmpq   11aec <mbedtls_md5_update.part.0+0xfc>
   11b93:	8b 45 00             	mov    0x0(%rbp),%eax
   11b96:	41 89 45 00          	mov    %eax,0x0(%r13)
   11b9a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
   11b9f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
   11ba4:	e9 e6 fe ff ff       	jmpq   11a8f <mbedtls_md5_update.part.0+0x9f>
   11ba9:	8b 55 00             	mov    0x0(%rbp),%edx
   11bac:	89 11                	mov    %edx,(%rcx)
   11bae:	89 c2                	mov    %eax,%edx
   11bb0:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   11bb4:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   11bb8:	31 c0                	xor    %eax,%eax
   11bba:	e9 2d ff ff ff       	jmpq   11aec <mbedtls_md5_update.part.0+0xfc>
   11bbf:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
   11bc5:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
   11bcb:	e9 bf fe ff ff       	jmpq   11a8f <mbedtls_md5_update.part.0+0x9f>

0000000000011bd0 <mbedtls_md5_update>:
   11bd0:	f3 0f 1e fa          	endbr64 
   11bd4:	48 85 d2             	test   %rdx,%rdx
   11bd7:	74 07                	je     11be0 <mbedtls_md5_update+0x10>
   11bd9:	e9 12 fe ff ff       	jmpq   119f0 <mbedtls_md5_update.part.0>
   11bde:	66 90                	xchg   %ax,%ax
   11be0:	31 c0                	xor    %eax,%eax
   11be2:	c3                   	retq   
   11be3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   11bea:	00 00 00 00 
   11bee:	66 90                	xchg   %ax,%ax

0000000000011bf0 <mbedtls_md5_finish>:
   11bf0:	f3 0f 1e fa          	endbr64 
   11bf4:	41 54                	push   %r12
   11bf6:	4c 8d 67 18          	lea    0x18(%rdi),%r12
   11bfa:	55                   	push   %rbp
   11bfb:	48 89 f5             	mov    %rsi,%rbp
   11bfe:	53                   	push   %rbx
   11bff:	8b 07                	mov    (%rdi),%eax
   11c01:	48 89 fb             	mov    %rdi,%rbx
   11c04:	83 e0 3f             	and    $0x3f,%eax
   11c07:	8d 48 01             	lea    0x1(%rax),%ecx
   11c0a:	c6 44 07 18 80       	movb   $0x80,0x18(%rdi,%rax,1)
   11c0f:	89 c8                	mov    %ecx,%eax
   11c11:	4c 01 e0             	add    %r12,%rax
   11c14:	83 f9 38             	cmp    $0x38,%ecx
   11c17:	77 57                	ja     11c70 <mbedtls_md5_finish+0x80>
   11c19:	ba 38 00 00 00       	mov    $0x38,%edx
   11c1e:	31 ff                	xor    %edi,%edi
   11c20:	29 ca                	sub    %ecx,%edx
   11c22:	83 fa 08             	cmp    $0x8,%edx
   11c25:	72 79                	jb     11ca0 <mbedtls_md5_finish+0xb0>
   11c27:	89 d1                	mov    %edx,%ecx
   11c29:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   11c30:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   11c37:	00 00 
   11c39:	48 8d 48 08          	lea    0x8(%rax),%rcx
   11c3d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   11c41:	48 29 c8             	sub    %rcx,%rax
   11c44:	01 c2                	add    %eax,%edx
   11c46:	83 e2 f8             	and    $0xfffffff8,%edx
   11c49:	83 fa 08             	cmp    $0x8,%edx
   11c4c:	0f 82 8b 00 00 00    	jb     11cdd <mbedtls_md5_finish+0xed>
   11c52:	83 e2 f8             	and    $0xfffffff8,%edx
   11c55:	31 c0                	xor    %eax,%eax
   11c57:	89 c6                	mov    %eax,%esi
   11c59:	83 c0 08             	add    $0x8,%eax
   11c5c:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   11c60:	39 d0                	cmp    %edx,%eax
   11c62:	72 f3                	jb     11c57 <mbedtls_md5_finish+0x67>
   11c64:	eb 77                	jmp    11cdd <mbedtls_md5_finish+0xed>
   11c66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11c6d:	00 00 00 
   11c70:	ba 40 00 00 00       	mov    $0x40,%edx
   11c75:	29 ca                	sub    %ecx,%edx
   11c77:	89 d1                	mov    %edx,%ecx
   11c79:	74 0f                	je     11c8a <mbedtls_md5_finish+0x9a>
   11c7b:	31 d2                	xor    %edx,%edx
   11c7d:	89 d6                	mov    %edx,%esi
   11c7f:	83 c2 01             	add    $0x1,%edx
   11c82:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   11c86:	39 ca                	cmp    %ecx,%edx
   11c88:	72 f3                	jb     11c7d <mbedtls_md5_finish+0x8d>
   11c8a:	4c 89 e6             	mov    %r12,%rsi
   11c8d:	48 89 df             	mov    %rbx,%rdi
   11c90:	e8 4b f5 ff ff       	callq  111e0 <mbedtls_internal_md5_process>
   11c95:	85 c0                	test   %eax,%eax
   11c97:	74 27                	je     11cc0 <mbedtls_md5_finish+0xd0>
   11c99:	5b                   	pop    %rbx
   11c9a:	5d                   	pop    %rbp
   11c9b:	41 5c                	pop    %r12
   11c9d:	c3                   	retq   
   11c9e:	66 90                	xchg   %ax,%ax
   11ca0:	f6 c2 04             	test   $0x4,%dl
   11ca3:	0f 85 7f 00 00 00    	jne    11d28 <mbedtls_md5_finish+0x138>
   11ca9:	85 d2                	test   %edx,%edx
   11cab:	74 30                	je     11cdd <mbedtls_md5_finish+0xed>
   11cad:	c6 00 00             	movb   $0x0,(%rax)
   11cb0:	f6 c2 02             	test   $0x2,%dl
   11cb3:	74 28                	je     11cdd <mbedtls_md5_finish+0xed>
   11cb5:	31 c9                	xor    %ecx,%ecx
   11cb7:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   11cbc:	eb 1f                	jmp    11cdd <mbedtls_md5_finish+0xed>
   11cbe:	66 90                	xchg   %ax,%ax
   11cc0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11cc4:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
   11cc8:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   11ccf:	00 00 
   11cd1:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   11cd7:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   11cdd:	8b 13                	mov    (%rbx),%edx
   11cdf:	8b 43 04             	mov    0x4(%rbx),%eax
   11ce2:	4c 89 e6             	mov    %r12,%rsi
   11ce5:	48 89 df             	mov    %rbx,%rdi
   11ce8:	89 d1                	mov    %edx,%ecx
   11cea:	c1 e0 03             	shl    $0x3,%eax
   11ced:	c1 e9 1d             	shr    $0x1d,%ecx
   11cf0:	c1 e2 03             	shl    $0x3,%edx
   11cf3:	09 c8                	or     %ecx,%eax
   11cf5:	89 53 50             	mov    %edx,0x50(%rbx)
   11cf8:	89 43 54             	mov    %eax,0x54(%rbx)
   11cfb:	e8 e0 f4 ff ff       	callq  111e0 <mbedtls_internal_md5_process>
   11d00:	85 c0                	test   %eax,%eax
   11d02:	75 95                	jne    11c99 <mbedtls_md5_finish+0xa9>
   11d04:	8b 53 08             	mov    0x8(%rbx),%edx
   11d07:	89 55 00             	mov    %edx,0x0(%rbp)
   11d0a:	8b 53 0c             	mov    0xc(%rbx),%edx
   11d0d:	89 55 04             	mov    %edx,0x4(%rbp)
   11d10:	8b 53 10             	mov    0x10(%rbx),%edx
   11d13:	89 55 08             	mov    %edx,0x8(%rbp)
   11d16:	8b 53 14             	mov    0x14(%rbx),%edx
   11d19:	5b                   	pop    %rbx
   11d1a:	89 55 0c             	mov    %edx,0xc(%rbp)
   11d1d:	5d                   	pop    %rbp
   11d1e:	41 5c                	pop    %r12
   11d20:	c3                   	retq   
   11d21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11d28:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   11d2e:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   11d35:	00 
   11d36:	eb a5                	jmp    11cdd <mbedtls_md5_finish+0xed>
   11d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11d3f:	00 

0000000000011d40 <mbedtls_md5>:
   11d40:	f3 0f 1e fa          	endbr64 
   11d44:	41 55                	push   %r13
   11d46:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11d4a:	41 54                	push   %r12
   11d4c:	55                   	push   %rbp
   11d4d:	48 89 d5             	mov    %rdx,%rbp
   11d50:	48 83 ec 60          	sub    $0x60,%rsp
   11d54:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11d5b:	00 00 
   11d5d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   11d62:	31 c0                	xor    %eax,%eax
   11d64:	49 89 e5             	mov    %rsp,%r13
   11d67:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   11d6e:	00 
   11d6f:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   11d76:	ab cd ef 
   11d79:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11d7e:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   11d85:	54 32 10 
   11d88:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   11d8d:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   11d92:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   11d97:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   11d9c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   11da1:	48 85 f6             	test   %rsi,%rsi
   11da4:	74 15                	je     11dbb <mbedtls_md5+0x7b>
   11da6:	48 89 f2             	mov    %rsi,%rdx
   11da9:	48 89 fe             	mov    %rdi,%rsi
   11dac:	4c 89 ef             	mov    %r13,%rdi
   11daf:	e8 3c fc ff ff       	callq  119f0 <mbedtls_md5_update.part.0>
   11db4:	41 89 c4             	mov    %eax,%r12d
   11db7:	85 c0                	test   %eax,%eax
   11db9:	75 0e                	jne    11dc9 <mbedtls_md5+0x89>
   11dbb:	48 89 ee             	mov    %rbp,%rsi
   11dbe:	4c 89 ef             	mov    %r13,%rdi
   11dc1:	e8 2a fe ff ff       	callq  11bf0 <mbedtls_md5_finish>
   11dc6:	41 89 c4             	mov    %eax,%r12d
   11dc9:	be 58 00 00 00       	mov    $0x58,%esi
   11dce:	4c 89 ef             	mov    %r13,%rdi
   11dd1:	e8 5a 0b 00 00       	callq  12930 <mbedtls_platform_zeroize>
   11dd6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   11ddb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   11de2:	00 00 
   11de4:	75 0d                	jne    11df3 <mbedtls_md5+0xb3>
   11de6:	48 83 c4 60          	add    $0x60,%rsp
   11dea:	44 89 e0             	mov    %r12d,%eax
   11ded:	5d                   	pop    %rbp
   11dee:	41 5c                	pop    %r12
   11df0:	41 5d                	pop    %r13
   11df2:	c3                   	retq   
   11df3:	e8 88 14 ff ff       	callq  3280 <__stack_chk_fail@plt>
   11df8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11dff:	00 

0000000000011e00 <mbedtls_md5_self_test>:
   11e00:	f3 0f 1e fa          	endbr64 
   11e04:	41 57                	push   %r15
   11e06:	41 56                	push   %r14
   11e08:	45 31 f6             	xor    %r14d,%r14d
   11e0b:	41 55                	push   %r13
   11e0d:	4c 8d 2d 2c 73 00 00 	lea    0x732c(%rip),%r13        # 19140 <md5_test_buf>
   11e14:	41 54                	push   %r12
   11e16:	4c 8d 25 63 72 00 00 	lea    0x7263(%rip),%r12        # 19080 <md5_test_sum>
   11e1d:	55                   	push   %rbp
   11e1e:	89 fd                	mov    %edi,%ebp
   11e20:	53                   	push   %rbx
   11e21:	31 db                	xor    %ebx,%ebx
   11e23:	48 83 ec 28          	sub    $0x28,%rsp
   11e27:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11e2e:	00 00 
   11e30:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11e35:	31 c0                	xor    %eax,%eax
   11e37:	49 89 e7             	mov    %rsp,%r15
   11e3a:	85 ed                	test   %ebp,%ebp
   11e3c:	75 61                	jne    11e9f <mbedtls_md5_self_test+0x9f>
   11e3e:	66 90                	xchg   %ax,%ax
   11e40:	4c 89 f6             	mov    %r14,%rsi
   11e43:	4c 89 fa             	mov    %r15,%rdx
   11e46:	4c 89 ef             	mov    %r13,%rdi
   11e49:	e8 f2 fe ff ff       	callq  11d40 <mbedtls_md5>
   11e4e:	41 89 c6             	mov    %eax,%r14d
   11e51:	85 c0                	test   %eax,%eax
   11e53:	75 71                	jne    11ec6 <mbedtls_md5_self_test+0xc6>
   11e55:	48 89 d8             	mov    %rbx,%rax
   11e58:	49 8b 17             	mov    (%r15),%rdx
   11e5b:	49 8b 77 08          	mov    0x8(%r15),%rsi
   11e5f:	48 c1 e0 04          	shl    $0x4,%rax
   11e63:	4c 01 e0             	add    %r12,%rax
   11e66:	48 33 70 08          	xor    0x8(%rax),%rsi
   11e6a:	48 33 10             	xor    (%rax),%rdx
   11e6d:	48 09 d6             	or     %rdx,%rsi
   11e70:	75 4e                	jne    11ec0 <mbedtls_md5_self_test+0xc0>
   11e72:	85 ed                	test   %ebp,%ebp
   11e74:	74 0c                	je     11e82 <mbedtls_md5_self_test+0x82>
   11e76:	48 8d 3d 51 65 00 00 	lea    0x6551(%rip),%rdi        # 183ce <bits+0x34e>
   11e7d:	e8 9e 13 ff ff       	callq  3220 <puts@plt>
   11e82:	48 83 c3 01          	add    $0x1,%rbx
   11e86:	49 83 c5 51          	add    $0x51,%r13
   11e8a:	48 83 fb 07          	cmp    $0x7,%rbx
   11e8e:	74 60                	je     11ef0 <mbedtls_md5_self_test+0xf0>
   11e90:	48 8d 05 69 72 00 00 	lea    0x7269(%rip),%rax        # 19100 <md5_test_buflen>
   11e97:	4c 8b 34 d8          	mov    (%rax,%rbx,8),%r14
   11e9b:	85 ed                	test   %ebp,%ebp
   11e9d:	74 a1                	je     11e40 <mbedtls_md5_self_test+0x40>
   11e9f:	8d 53 01             	lea    0x1(%rbx),%edx
   11ea2:	48 8d 35 a8 71 00 00 	lea    0x71a8(%rip),%rsi        # 19051 <supported_digests+0x31>
   11ea9:	bf 01 00 00 00       	mov    $0x1,%edi
   11eae:	31 c0                	xor    %eax,%eax
   11eb0:	e8 9b 14 ff ff       	callq  3350 <__printf_chk@plt>
   11eb5:	eb 89                	jmp    11e40 <mbedtls_md5_self_test+0x40>
   11eb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11ebe:	00 00 
   11ec0:	41 be 01 00 00 00    	mov    $0x1,%r14d
   11ec6:	85 ed                	test   %ebp,%ebp
   11ec8:	75 46                	jne    11f10 <mbedtls_md5_self_test+0x110>
   11eca:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   11ecf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   11ed6:	00 00 
   11ed8:	75 44                	jne    11f1e <mbedtls_md5_self_test+0x11e>
   11eda:	48 83 c4 28          	add    $0x28,%rsp
   11ede:	44 89 f0             	mov    %r14d,%eax
   11ee1:	5b                   	pop    %rbx
   11ee2:	5d                   	pop    %rbp
   11ee3:	41 5c                	pop    %r12
   11ee5:	41 5d                	pop    %r13
   11ee7:	41 5e                	pop    %r14
   11ee9:	41 5f                	pop    %r15
   11eeb:	c3                   	retq   
   11eec:	0f 1f 40 00          	nopl   0x0(%rax)
   11ef0:	85 ed                	test   %ebp,%ebp
   11ef2:	75 0c                	jne    11f00 <mbedtls_md5_self_test+0x100>
   11ef4:	45 31 f6             	xor    %r14d,%r14d
   11ef7:	eb d1                	jmp    11eca <mbedtls_md5_self_test+0xca>
   11ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11f00:	bf 0a 00 00 00       	mov    $0xa,%edi
   11f05:	e8 06 13 ff ff       	callq  3210 <putchar@plt>
   11f0a:	eb be                	jmp    11eca <mbedtls_md5_self_test+0xca>
   11f0c:	0f 1f 40 00          	nopl   0x0(%rax)
   11f10:	48 8d 3d 8b 65 00 00 	lea    0x658b(%rip),%rdi        # 184a2 <bits+0x422>
   11f17:	e8 04 13 ff ff       	callq  3220 <puts@plt>
   11f1c:	eb ac                	jmp    11eca <mbedtls_md5_self_test+0xca>
   11f1e:	e8 5d 13 ff ff       	callq  3280 <__stack_chk_fail@plt>
   11f23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11f2a:	00 00 00 
   11f2d:	0f 1f 00             	nopl   (%rax)

0000000000011f30 <oid_sig_alg_from_asn1.part.0>:
   11f30:	41 54                	push   %r12
   11f32:	b8 09 00 00 00       	mov    $0x9,%eax
   11f37:	49 89 fc             	mov    %rdi,%r12
   11f3a:	55                   	push   %rbp
   11f3b:	53                   	push   %rbx
   11f3c:	48 8d 1d fd e5 00 00 	lea    0xe5fd(%rip),%rbx        # 20540 <oid_sig_alg>
   11f43:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
   11f47:	48 8d 3d 29 74 00 00 	lea    0x7429(%rip),%rdi        # 19377 <md5_test_buf+0x237>
   11f4e:	eb 11                	jmp    11f61 <oid_sig_alg_from_asn1.part.0+0x31>
   11f50:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   11f54:	48 83 c3 28          	add    $0x28,%rbx
   11f58:	48 85 ff             	test   %rdi,%rdi
   11f5b:	74 1d                	je     11f7a <oid_sig_alg_from_asn1.part.0+0x4a>
   11f5d:	48 8b 43 08          	mov    0x8(%rbx),%rax
   11f61:	48 39 c5             	cmp    %rax,%rbp
   11f64:	75 ea                	jne    11f50 <oid_sig_alg_from_asn1.part.0+0x20>
   11f66:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   11f6b:	48 89 ea             	mov    %rbp,%rdx
   11f6e:	e8 4d 13 ff ff       	callq  32c0 <memcmp@plt>
   11f73:	85 c0                	test   %eax,%eax
   11f75:	75 d9                	jne    11f50 <oid_sig_alg_from_asn1.part.0+0x20>
   11f77:	48 89 df             	mov    %rbx,%rdi
   11f7a:	5b                   	pop    %rbx
   11f7b:	48 89 f8             	mov    %rdi,%rax
   11f7e:	5d                   	pop    %rbp
   11f7f:	41 5c                	pop    %r12
   11f81:	c3                   	retq   
   11f82:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   11f89:	00 00 00 00 
   11f8d:	0f 1f 00             	nopl   (%rax)

0000000000011f90 <mbedtls_oid_get_attr_short_name>:
   11f90:	f3 0f 1e fa          	endbr64 
   11f94:	48 85 ff             	test   %rdi,%rdi
   11f97:	0f 84 83 00 00 00    	je     12020 <mbedtls_oid_get_attr_short_name+0x90>
   11f9d:	41 55                	push   %r13
   11f9f:	b8 03 00 00 00       	mov    $0x3,%eax
   11fa4:	41 54                	push   %r12
   11fa6:	49 89 f4             	mov    %rsi,%r12
   11fa9:	55                   	push   %rbp
   11faa:	48 8d 2d ef e9 00 00 	lea    0xe9ef(%rip),%rbp        # 209a0 <oid_x520_attr_type>
   11fb1:	53                   	push   %rbx
   11fb2:	48 89 fb             	mov    %rdi,%rbx
   11fb5:	48 83 ec 08          	sub    $0x8,%rsp
   11fb9:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   11fbd:	48 8d 3d bd 73 00 00 	lea    0x73bd(%rip),%rdi        # 19381 <md5_test_buf+0x241>
   11fc4:	eb 1b                	jmp    11fe1 <mbedtls_oid_get_attr_short_name+0x51>
   11fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11fcd:	00 00 00 
   11fd0:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   11fd4:	48 83 c5 28          	add    $0x28,%rbp
   11fd8:	48 85 ff             	test   %rdi,%rdi
   11fdb:	74 33                	je     12010 <mbedtls_oid_get_attr_short_name+0x80>
   11fdd:	48 8b 45 08          	mov    0x8(%rbp),%rax
   11fe1:	49 39 c5             	cmp    %rax,%r13
   11fe4:	75 ea                	jne    11fd0 <mbedtls_oid_get_attr_short_name+0x40>
   11fe6:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   11fea:	4c 89 ea             	mov    %r13,%rdx
   11fed:	e8 ce 12 ff ff       	callq  32c0 <memcmp@plt>
   11ff2:	85 c0                	test   %eax,%eax
   11ff4:	75 da                	jne    11fd0 <mbedtls_oid_get_attr_short_name+0x40>
   11ff6:	48 8b 55 20          	mov    0x20(%rbp),%rdx
   11ffa:	49 89 14 24          	mov    %rdx,(%r12)
   11ffe:	48 83 c4 08          	add    $0x8,%rsp
   12002:	5b                   	pop    %rbx
   12003:	5d                   	pop    %rbp
   12004:	41 5c                	pop    %r12
   12006:	41 5d                	pop    %r13
   12008:	c3                   	retq   
   12009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12010:	48 83 c4 08          	add    $0x8,%rsp
   12014:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12019:	5b                   	pop    %rbx
   1201a:	5d                   	pop    %rbp
   1201b:	41 5c                	pop    %r12
   1201d:	41 5d                	pop    %r13
   1201f:	c3                   	retq   
   12020:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12025:	c3                   	retq   
   12026:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1202d:	00 00 00 

0000000000012030 <mbedtls_oid_get_x509_ext_type>:
   12030:	f3 0f 1e fa          	endbr64 
   12034:	48 85 ff             	test   %rdi,%rdi
   12037:	74 77                	je     120b0 <mbedtls_oid_get_x509_ext_type+0x80>
   12039:	41 55                	push   %r13
   1203b:	b8 03 00 00 00       	mov    $0x3,%eax
   12040:	41 54                	push   %r12
   12042:	49 89 f4             	mov    %rsi,%r12
   12045:	55                   	push   %rbp
   12046:	48 8d 2d 33 e8 00 00 	lea    0xe833(%rip),%rbp        # 20880 <oid_x509_ext>
   1204d:	53                   	push   %rbx
   1204e:	48 89 fb             	mov    %rdi,%rbx
   12051:	48 83 ec 08          	sub    $0x8,%rsp
   12055:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   12059:	48 8d 3d 25 73 00 00 	lea    0x7325(%rip),%rdi        # 19385 <md5_test_buf+0x245>
   12060:	eb 17                	jmp    12079 <mbedtls_oid_get_x509_ext_type+0x49>
   12062:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12068:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   1206c:	48 83 c5 28          	add    $0x28,%rbp
   12070:	48 85 ff             	test   %rdi,%rdi
   12073:	74 2b                	je     120a0 <mbedtls_oid_get_x509_ext_type+0x70>
   12075:	48 8b 45 08          	mov    0x8(%rbp),%rax
   12079:	49 39 c5             	cmp    %rax,%r13
   1207c:	75 ea                	jne    12068 <mbedtls_oid_get_x509_ext_type+0x38>
   1207e:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12082:	4c 89 ea             	mov    %r13,%rdx
   12085:	e8 36 12 ff ff       	callq  32c0 <memcmp@plt>
   1208a:	85 c0                	test   %eax,%eax
   1208c:	75 da                	jne    12068 <mbedtls_oid_get_x509_ext_type+0x38>
   1208e:	8b 55 20             	mov    0x20(%rbp),%edx
   12091:	41 89 14 24          	mov    %edx,(%r12)
   12095:	48 83 c4 08          	add    $0x8,%rsp
   12099:	5b                   	pop    %rbx
   1209a:	5d                   	pop    %rbp
   1209b:	41 5c                	pop    %r12
   1209d:	41 5d                	pop    %r13
   1209f:	c3                   	retq   
   120a0:	48 83 c4 08          	add    $0x8,%rsp
   120a4:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   120a9:	5b                   	pop    %rbx
   120aa:	5d                   	pop    %rbp
   120ab:	41 5c                	pop    %r12
   120ad:	41 5d                	pop    %r13
   120af:	c3                   	retq   
   120b0:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   120b5:	c3                   	retq   
   120b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   120bd:	00 00 00 

00000000000120c0 <mbedtls_oid_get_extended_key_usage>:
   120c0:	f3 0f 1e fa          	endbr64 
   120c4:	48 85 ff             	test   %rdi,%rdi
   120c7:	0f 84 83 00 00 00    	je     12150 <mbedtls_oid_get_extended_key_usage+0x90>
   120cd:	41 55                	push   %r13
   120cf:	b8 08 00 00 00       	mov    $0x8,%eax
   120d4:	41 54                	push   %r12
   120d6:	49 89 f4             	mov    %rsi,%r12
   120d9:	55                   	push   %rbp
   120da:	48 8d 2d 9f e6 00 00 	lea    0xe69f(%rip),%rbp        # 20780 <oid_ext_key_usage>
   120e1:	53                   	push   %rbx
   120e2:	48 89 fb             	mov    %rdi,%rbx
   120e5:	48 83 ec 08          	sub    $0x8,%rsp
   120e9:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   120ed:	48 8d 3d 95 72 00 00 	lea    0x7295(%rip),%rdi        # 19389 <md5_test_buf+0x249>
   120f4:	eb 1b                	jmp    12111 <mbedtls_oid_get_extended_key_usage+0x51>
   120f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   120fd:	00 00 00 
   12100:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   12104:	48 83 c5 20          	add    $0x20,%rbp
   12108:	48 85 ff             	test   %rdi,%rdi
   1210b:	74 33                	je     12140 <mbedtls_oid_get_extended_key_usage+0x80>
   1210d:	48 8b 45 08          	mov    0x8(%rbp),%rax
   12111:	49 39 c5             	cmp    %rax,%r13
   12114:	75 ea                	jne    12100 <mbedtls_oid_get_extended_key_usage+0x40>
   12116:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1211a:	4c 89 ea             	mov    %r13,%rdx
   1211d:	e8 9e 11 ff ff       	callq  32c0 <memcmp@plt>
   12122:	85 c0                	test   %eax,%eax
   12124:	75 da                	jne    12100 <mbedtls_oid_get_extended_key_usage+0x40>
   12126:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   1212a:	49 89 14 24          	mov    %rdx,(%r12)
   1212e:	48 83 c4 08          	add    $0x8,%rsp
   12132:	5b                   	pop    %rbx
   12133:	5d                   	pop    %rbp
   12134:	41 5c                	pop    %r12
   12136:	41 5d                	pop    %r13
   12138:	c3                   	retq   
   12139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12140:	48 83 c4 08          	add    $0x8,%rsp
   12144:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12149:	5b                   	pop    %rbx
   1214a:	5d                   	pop    %rbp
   1214b:	41 5c                	pop    %r12
   1214d:	41 5d                	pop    %r13
   1214f:	c3                   	retq   
   12150:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12155:	c3                   	retq   
   12156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1215d:	00 00 00 

0000000000012160 <mbedtls_oid_get_certificate_policies>:
   12160:	f3 0f 1e fa          	endbr64 
   12164:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12169:	48 85 ff             	test   %rdi,%rdi
   1216c:	74 32                	je     121a0 <mbedtls_oid_get_certificate_policies+0x40>
   1216e:	48 83 7f 08 04       	cmpq   $0x4,0x8(%rdi)
   12173:	74 0b                	je     12180 <mbedtls_oid_get_certificate_policies+0x20>
   12175:	c3                   	retq   
   12176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1217d:	00 00 00 
   12180:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   12184:	81 3a 55 1d 20 00    	cmpl   $0x201d55,(%rdx)
   1218a:	75 e9                	jne    12175 <mbedtls_oid_get_certificate_policies+0x15>
   1218c:	48 8d 05 ff 71 00 00 	lea    0x71ff(%rip),%rax        # 19392 <md5_test_buf+0x252>
   12193:	48 89 06             	mov    %rax,(%rsi)
   12196:	31 c0                	xor    %eax,%eax
   12198:	c3                   	retq   
   12199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   121a0:	c3                   	retq   
   121a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   121a8:	00 00 00 00 
   121ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000121b0 <mbedtls_oid_get_sig_alg_desc>:
   121b0:	f3 0f 1e fa          	endbr64 
   121b4:	48 85 ff             	test   %rdi,%rdi
   121b7:	74 1f                	je     121d8 <mbedtls_oid_get_sig_alg_desc+0x28>
   121b9:	53                   	push   %rbx
   121ba:	48 89 f3             	mov    %rsi,%rbx
   121bd:	e8 6e fd ff ff       	callq  11f30 <oid_sig_alg_from_asn1.part.0>
   121c2:	48 85 c0             	test   %rax,%rax
   121c5:	74 17                	je     121de <mbedtls_oid_get_sig_alg_desc+0x2e>
   121c7:	48 8b 40 18          	mov    0x18(%rax),%rax
   121cb:	48 89 03             	mov    %rax,(%rbx)
   121ce:	31 c0                	xor    %eax,%eax
   121d0:	5b                   	pop    %rbx
   121d1:	c3                   	retq   
   121d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   121d8:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   121dd:	c3                   	retq   
   121de:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   121e3:	5b                   	pop    %rbx
   121e4:	c3                   	retq   
   121e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   121ec:	00 00 00 00 

00000000000121f0 <mbedtls_oid_get_sig_alg>:
   121f0:	f3 0f 1e fa          	endbr64 
   121f4:	48 85 ff             	test   %rdi,%rdi
   121f7:	74 2f                	je     12228 <mbedtls_oid_get_sig_alg+0x38>
   121f9:	55                   	push   %rbp
   121fa:	48 89 f5             	mov    %rsi,%rbp
   121fd:	53                   	push   %rbx
   121fe:	48 89 d3             	mov    %rdx,%rbx
   12201:	48 83 ec 08          	sub    $0x8,%rsp
   12205:	e8 26 fd ff ff       	callq  11f30 <oid_sig_alg_from_asn1.part.0>
   1220a:	48 85 c0             	test   %rax,%rax
   1220d:	74 1f                	je     1222e <mbedtls_oid_get_sig_alg+0x3e>
   1220f:	8b 50 20             	mov    0x20(%rax),%edx
   12212:	89 55 00             	mov    %edx,0x0(%rbp)
   12215:	8b 40 24             	mov    0x24(%rax),%eax
   12218:	89 03                	mov    %eax,(%rbx)
   1221a:	31 c0                	xor    %eax,%eax
   1221c:	48 83 c4 08          	add    $0x8,%rsp
   12220:	5b                   	pop    %rbx
   12221:	5d                   	pop    %rbp
   12222:	c3                   	retq   
   12223:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12228:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   1222d:	c3                   	retq   
   1222e:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12233:	eb e7                	jmp    1221c <mbedtls_oid_get_sig_alg+0x2c>
   12235:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1223c:	00 00 00 00 

0000000000012240 <mbedtls_oid_get_oid_by_sig_alg>:
   12240:	f3 0f 1e fa          	endbr64 
   12244:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1224a:	48 8d 05 ef e2 00 00 	lea    0xe2ef(%rip),%rax        # 20540 <oid_sig_alg>
   12251:	4c 8d 05 1f 71 00 00 	lea    0x711f(%rip),%r8        # 19377 <md5_test_buf+0x237>
   12258:	eb 17                	jmp    12271 <mbedtls_oid_get_oid_by_sig_alg+0x31>
   1225a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12260:	4c 8b 40 28          	mov    0x28(%rax),%r8
   12264:	48 83 c0 28          	add    $0x28,%rax
   12268:	4d 85 c0             	test   %r8,%r8
   1226b:	74 23                	je     12290 <mbedtls_oid_get_oid_by_sig_alg+0x50>
   1226d:	44 8b 48 24          	mov    0x24(%rax),%r9d
   12271:	41 39 f9             	cmp    %edi,%r9d
   12274:	75 ea                	jne    12260 <mbedtls_oid_get_oid_by_sig_alg+0x20>
   12276:	39 70 20             	cmp    %esi,0x20(%rax)
   12279:	75 e5                	jne    12260 <mbedtls_oid_get_oid_by_sig_alg+0x20>
   1227b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1227f:	4c 89 02             	mov    %r8,(%rdx)
   12282:	48 89 01             	mov    %rax,(%rcx)
   12285:	31 c0                	xor    %eax,%eax
   12287:	c3                   	retq   
   12288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1228f:	00 
   12290:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12295:	c3                   	retq   
   12296:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1229d:	00 00 00 

00000000000122a0 <mbedtls_oid_get_pk_alg>:
   122a0:	f3 0f 1e fa          	endbr64 
   122a4:	48 85 ff             	test   %rdi,%rdi
   122a7:	74 77                	je     12320 <mbedtls_oid_get_pk_alg+0x80>
   122a9:	41 55                	push   %r13
   122ab:	b8 09 00 00 00       	mov    $0x9,%eax
   122b0:	41 54                	push   %r12
   122b2:	49 89 f4             	mov    %rsi,%r12
   122b5:	55                   	push   %rbp
   122b6:	48 8d 2d e3 e1 00 00 	lea    0xe1e3(%rip),%rbp        # 204a0 <oid_pk_alg>
   122bd:	53                   	push   %rbx
   122be:	48 89 fb             	mov    %rdi,%rbx
   122c1:	48 83 ec 08          	sub    $0x8,%rsp
   122c5:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   122c9:	48 8d 3d cd 70 00 00 	lea    0x70cd(%rip),%rdi        # 1939d <md5_test_buf+0x25d>
   122d0:	eb 17                	jmp    122e9 <mbedtls_oid_get_pk_alg+0x49>
   122d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   122d8:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   122dc:	48 83 c5 28          	add    $0x28,%rbp
   122e0:	48 85 ff             	test   %rdi,%rdi
   122e3:	74 2b                	je     12310 <mbedtls_oid_get_pk_alg+0x70>
   122e5:	48 8b 45 08          	mov    0x8(%rbp),%rax
   122e9:	49 39 c5             	cmp    %rax,%r13
   122ec:	75 ea                	jne    122d8 <mbedtls_oid_get_pk_alg+0x38>
   122ee:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   122f2:	4c 89 ea             	mov    %r13,%rdx
   122f5:	e8 c6 0f ff ff       	callq  32c0 <memcmp@plt>
   122fa:	85 c0                	test   %eax,%eax
   122fc:	75 da                	jne    122d8 <mbedtls_oid_get_pk_alg+0x38>
   122fe:	8b 55 20             	mov    0x20(%rbp),%edx
   12301:	41 89 14 24          	mov    %edx,(%r12)
   12305:	48 83 c4 08          	add    $0x8,%rsp
   12309:	5b                   	pop    %rbx
   1230a:	5d                   	pop    %rbp
   1230b:	41 5c                	pop    %r12
   1230d:	41 5d                	pop    %r13
   1230f:	c3                   	retq   
   12310:	48 83 c4 08          	add    $0x8,%rsp
   12314:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12319:	5b                   	pop    %rbx
   1231a:	5d                   	pop    %rbp
   1231b:	41 5c                	pop    %r12
   1231d:	41 5d                	pop    %r13
   1231f:	c3                   	retq   
   12320:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12325:	c3                   	retq   
   12326:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1232d:	00 00 00 

0000000000012330 <mbedtls_oid_get_oid_by_pk_alg>:
   12330:	f3 0f 1e fa          	endbr64 
   12334:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1233a:	48 8d 05 5f e1 00 00 	lea    0xe15f(%rip),%rax        # 204a0 <oid_pk_alg>
   12341:	48 8d 0d 55 70 00 00 	lea    0x7055(%rip),%rcx        # 1939d <md5_test_buf+0x25d>
   12348:	eb 17                	jmp    12361 <mbedtls_oid_get_oid_by_pk_alg+0x31>
   1234a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12350:	48 8b 48 28          	mov    0x28(%rax),%rcx
   12354:	48 83 c0 28          	add    $0x28,%rax
   12358:	48 85 c9             	test   %rcx,%rcx
   1235b:	74 1b                	je     12378 <mbedtls_oid_get_oid_by_pk_alg+0x48>
   1235d:	44 8b 40 20          	mov    0x20(%rax),%r8d
   12361:	41 39 f8             	cmp    %edi,%r8d
   12364:	75 ea                	jne    12350 <mbedtls_oid_get_oid_by_pk_alg+0x20>
   12366:	48 8b 40 08          	mov    0x8(%rax),%rax
   1236a:	48 89 0e             	mov    %rcx,(%rsi)
   1236d:	48 89 02             	mov    %rax,(%rdx)
   12370:	31 c0                	xor    %eax,%eax
   12372:	c3                   	retq   
   12373:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12378:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   1237d:	c3                   	retq   
   1237e:	66 90                	xchg   %ax,%ax

0000000000012380 <mbedtls_oid_get_ec_grp>:
   12380:	f3 0f 1e fa          	endbr64 
   12384:	48 85 ff             	test   %rdi,%rdi
   12387:	74 77                	je     12400 <mbedtls_oid_get_ec_grp+0x80>
   12389:	41 55                	push   %r13
   1238b:	b8 08 00 00 00       	mov    $0x8,%eax
   12390:	41 54                	push   %r12
   12392:	49 89 f4             	mov    %rsi,%r12
   12395:	55                   	push   %rbp
   12396:	48 8d 2d 23 df 00 00 	lea    0xdf23(%rip),%rbp        # 202c0 <oid_ecp_grp>
   1239d:	53                   	push   %rbx
   1239e:	48 89 fb             	mov    %rdi,%rbx
   123a1:	48 83 ec 08          	sub    $0x8,%rsp
   123a5:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   123a9:	48 8d 3d f7 6f 00 00 	lea    0x6ff7(%rip),%rdi        # 193a7 <md5_test_buf+0x267>
   123b0:	eb 17                	jmp    123c9 <mbedtls_oid_get_ec_grp+0x49>
   123b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   123b8:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   123bc:	48 83 c5 28          	add    $0x28,%rbp
   123c0:	48 85 ff             	test   %rdi,%rdi
   123c3:	74 2b                	je     123f0 <mbedtls_oid_get_ec_grp+0x70>
   123c5:	48 8b 45 08          	mov    0x8(%rbp),%rax
   123c9:	49 39 c5             	cmp    %rax,%r13
   123cc:	75 ea                	jne    123b8 <mbedtls_oid_get_ec_grp+0x38>
   123ce:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   123d2:	4c 89 ea             	mov    %r13,%rdx
   123d5:	e8 e6 0e ff ff       	callq  32c0 <memcmp@plt>
   123da:	85 c0                	test   %eax,%eax
   123dc:	75 da                	jne    123b8 <mbedtls_oid_get_ec_grp+0x38>
   123de:	8b 55 20             	mov    0x20(%rbp),%edx
   123e1:	41 89 14 24          	mov    %edx,(%r12)
   123e5:	48 83 c4 08          	add    $0x8,%rsp
   123e9:	5b                   	pop    %rbx
   123ea:	5d                   	pop    %rbp
   123eb:	41 5c                	pop    %r12
   123ed:	41 5d                	pop    %r13
   123ef:	c3                   	retq   
   123f0:	48 83 c4 08          	add    $0x8,%rsp
   123f4:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   123f9:	5b                   	pop    %rbx
   123fa:	5d                   	pop    %rbp
   123fb:	41 5c                	pop    %r12
   123fd:	41 5d                	pop    %r13
   123ff:	c3                   	retq   
   12400:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12405:	c3                   	retq   
   12406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1240d:	00 00 00 

0000000000012410 <mbedtls_oid_get_oid_by_ec_grp>:
   12410:	f3 0f 1e fa          	endbr64 
   12414:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1241a:	48 8d 05 9f de 00 00 	lea    0xde9f(%rip),%rax        # 202c0 <oid_ecp_grp>
   12421:	48 8d 0d 7f 6f 00 00 	lea    0x6f7f(%rip),%rcx        # 193a7 <md5_test_buf+0x267>
   12428:	eb 17                	jmp    12441 <mbedtls_oid_get_oid_by_ec_grp+0x31>
   1242a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12430:	48 8b 48 28          	mov    0x28(%rax),%rcx
   12434:	48 83 c0 28          	add    $0x28,%rax
   12438:	48 85 c9             	test   %rcx,%rcx
   1243b:	74 1b                	je     12458 <mbedtls_oid_get_oid_by_ec_grp+0x48>
   1243d:	44 8b 40 20          	mov    0x20(%rax),%r8d
   12441:	41 39 f8             	cmp    %edi,%r8d
   12444:	75 ea                	jne    12430 <mbedtls_oid_get_oid_by_ec_grp+0x20>
   12446:	48 8b 40 08          	mov    0x8(%rax),%rax
   1244a:	48 89 0e             	mov    %rcx,(%rsi)
   1244d:	48 89 02             	mov    %rax,(%rdx)
   12450:	31 c0                	xor    %eax,%eax
   12452:	c3                   	retq   
   12453:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12458:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   1245d:	c3                   	retq   
   1245e:	66 90                	xchg   %ax,%ax

0000000000012460 <mbedtls_oid_get_cipher_alg>:
   12460:	f3 0f 1e fa          	endbr64 
   12464:	48 85 ff             	test   %rdi,%rdi
   12467:	74 77                	je     124e0 <mbedtls_oid_get_cipher_alg+0x80>
   12469:	41 55                	push   %r13
   1246b:	b8 05 00 00 00       	mov    $0x5,%eax
   12470:	41 54                	push   %r12
   12472:	49 89 f4             	mov    %rsi,%r12
   12475:	55                   	push   %rbp
   12476:	48 8d 2d c3 dd 00 00 	lea    0xddc3(%rip),%rbp        # 20240 <oid_cipher_alg>
   1247d:	53                   	push   %rbx
   1247e:	48 89 fb             	mov    %rdi,%rbx
   12481:	48 83 ec 08          	sub    $0x8,%rsp
   12485:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   12489:	48 8d 3d 20 6f 00 00 	lea    0x6f20(%rip),%rdi        # 193b0 <md5_test_buf+0x270>
   12490:	eb 17                	jmp    124a9 <mbedtls_oid_get_cipher_alg+0x49>
   12492:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12498:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   1249c:	48 83 c5 28          	add    $0x28,%rbp
   124a0:	48 85 ff             	test   %rdi,%rdi
   124a3:	74 2b                	je     124d0 <mbedtls_oid_get_cipher_alg+0x70>
   124a5:	48 8b 45 08          	mov    0x8(%rbp),%rax
   124a9:	49 39 c5             	cmp    %rax,%r13
   124ac:	75 ea                	jne    12498 <mbedtls_oid_get_cipher_alg+0x38>
   124ae:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   124b2:	4c 89 ea             	mov    %r13,%rdx
   124b5:	e8 06 0e ff ff       	callq  32c0 <memcmp@plt>
   124ba:	85 c0                	test   %eax,%eax
   124bc:	75 da                	jne    12498 <mbedtls_oid_get_cipher_alg+0x38>
   124be:	8b 55 20             	mov    0x20(%rbp),%edx
   124c1:	41 89 14 24          	mov    %edx,(%r12)
   124c5:	48 83 c4 08          	add    $0x8,%rsp
   124c9:	5b                   	pop    %rbx
   124ca:	5d                   	pop    %rbp
   124cb:	41 5c                	pop    %r12
   124cd:	41 5d                	pop    %r13
   124cf:	c3                   	retq   
   124d0:	48 83 c4 08          	add    $0x8,%rsp
   124d4:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   124d9:	5b                   	pop    %rbx
   124da:	5d                   	pop    %rbp
   124db:	41 5c                	pop    %r12
   124dd:	41 5d                	pop    %r13
   124df:	c3                   	retq   
   124e0:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   124e5:	c3                   	retq   
   124e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   124ed:	00 00 00 

00000000000124f0 <mbedtls_oid_get_md_alg>:
   124f0:	f3 0f 1e fa          	endbr64 
   124f4:	48 85 ff             	test   %rdi,%rdi
   124f7:	74 77                	je     12570 <mbedtls_oid_get_md_alg+0x80>
   124f9:	41 55                	push   %r13
   124fb:	b8 08 00 00 00       	mov    $0x8,%eax
   12500:	41 54                	push   %r12
   12502:	49 89 f4             	mov    %rsi,%r12
   12505:	55                   	push   %rbp
   12506:	48 8d 2d f3 db 00 00 	lea    0xdbf3(%rip),%rbp        # 20100 <oid_md_alg>
   1250d:	53                   	push   %rbx
   1250e:	48 89 fb             	mov    %rdi,%rbx
   12511:	48 83 ec 08          	sub    $0x8,%rsp
   12515:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   12519:	48 8d 3d 96 6e 00 00 	lea    0x6e96(%rip),%rdi        # 193b6 <md5_test_buf+0x276>
   12520:	eb 17                	jmp    12539 <mbedtls_oid_get_md_alg+0x49>
   12522:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12528:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   1252c:	48 83 c5 28          	add    $0x28,%rbp
   12530:	48 85 ff             	test   %rdi,%rdi
   12533:	74 2b                	je     12560 <mbedtls_oid_get_md_alg+0x70>
   12535:	48 8b 45 08          	mov    0x8(%rbp),%rax
   12539:	49 39 c5             	cmp    %rax,%r13
   1253c:	75 ea                	jne    12528 <mbedtls_oid_get_md_alg+0x38>
   1253e:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12542:	4c 89 ea             	mov    %r13,%rdx
   12545:	e8 76 0d ff ff       	callq  32c0 <memcmp@plt>
   1254a:	85 c0                	test   %eax,%eax
   1254c:	75 da                	jne    12528 <mbedtls_oid_get_md_alg+0x38>
   1254e:	8b 55 20             	mov    0x20(%rbp),%edx
   12551:	41 89 14 24          	mov    %edx,(%r12)
   12555:	48 83 c4 08          	add    $0x8,%rsp
   12559:	5b                   	pop    %rbx
   1255a:	5d                   	pop    %rbp
   1255b:	41 5c                	pop    %r12
   1255d:	41 5d                	pop    %r13
   1255f:	c3                   	retq   
   12560:	48 83 c4 08          	add    $0x8,%rsp
   12564:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12569:	5b                   	pop    %rbx
   1256a:	5d                   	pop    %rbp
   1256b:	41 5c                	pop    %r12
   1256d:	41 5d                	pop    %r13
   1256f:	c3                   	retq   
   12570:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12575:	c3                   	retq   
   12576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1257d:	00 00 00 

0000000000012580 <mbedtls_oid_get_oid_by_md>:
   12580:	f3 0f 1e fa          	endbr64 
   12584:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1258a:	48 8d 05 6f db 00 00 	lea    0xdb6f(%rip),%rax        # 20100 <oid_md_alg>
   12591:	48 8d 0d 1e 6e 00 00 	lea    0x6e1e(%rip),%rcx        # 193b6 <md5_test_buf+0x276>
   12598:	eb 17                	jmp    125b1 <mbedtls_oid_get_oid_by_md+0x31>
   1259a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   125a0:	48 8b 48 28          	mov    0x28(%rax),%rcx
   125a4:	48 83 c0 28          	add    $0x28,%rax
   125a8:	48 85 c9             	test   %rcx,%rcx
   125ab:	74 1b                	je     125c8 <mbedtls_oid_get_oid_by_md+0x48>
   125ad:	44 8b 40 20          	mov    0x20(%rax),%r8d
   125b1:	41 39 f8             	cmp    %edi,%r8d
   125b4:	75 ea                	jne    125a0 <mbedtls_oid_get_oid_by_md+0x20>
   125b6:	48 8b 40 08          	mov    0x8(%rax),%rax
   125ba:	48 89 0e             	mov    %rcx,(%rsi)
   125bd:	48 89 02             	mov    %rax,(%rdx)
   125c0:	31 c0                	xor    %eax,%eax
   125c2:	c3                   	retq   
   125c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   125c8:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   125cd:	c3                   	retq   
   125ce:	66 90                	xchg   %ax,%ax

00000000000125d0 <mbedtls_oid_get_md_hmac>:
   125d0:	f3 0f 1e fa          	endbr64 
   125d4:	48 85 ff             	test   %rdi,%rdi
   125d7:	74 77                	je     12650 <mbedtls_oid_get_md_hmac+0x80>
   125d9:	41 55                	push   %r13
   125db:	b8 08 00 00 00       	mov    $0x8,%eax
   125e0:	41 54                	push   %r12
   125e2:	49 89 f4             	mov    %rsi,%r12
   125e5:	55                   	push   %rbp
   125e6:	48 8d 2d 13 da 00 00 	lea    0xda13(%rip),%rbp        # 20000 <oid_md_hmac>
   125ed:	53                   	push   %rbx
   125ee:	48 89 fb             	mov    %rdi,%rbx
   125f1:	48 83 ec 08          	sub    $0x8,%rsp
   125f5:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   125f9:	48 8d 3d bf 6d 00 00 	lea    0x6dbf(%rip),%rdi        # 193bf <md5_test_buf+0x27f>
   12600:	eb 17                	jmp    12619 <mbedtls_oid_get_md_hmac+0x49>
   12602:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12608:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   1260c:	48 83 c5 28          	add    $0x28,%rbp
   12610:	48 85 ff             	test   %rdi,%rdi
   12613:	74 2b                	je     12640 <mbedtls_oid_get_md_hmac+0x70>
   12615:	48 8b 45 08          	mov    0x8(%rbp),%rax
   12619:	49 39 c5             	cmp    %rax,%r13
   1261c:	75 ea                	jne    12608 <mbedtls_oid_get_md_hmac+0x38>
   1261e:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12622:	4c 89 ea             	mov    %r13,%rdx
   12625:	e8 96 0c ff ff       	callq  32c0 <memcmp@plt>
   1262a:	85 c0                	test   %eax,%eax
   1262c:	75 da                	jne    12608 <mbedtls_oid_get_md_hmac+0x38>
   1262e:	8b 55 20             	mov    0x20(%rbp),%edx
   12631:	41 89 14 24          	mov    %edx,(%r12)
   12635:	48 83 c4 08          	add    $0x8,%rsp
   12639:	5b                   	pop    %rbx
   1263a:	5d                   	pop    %rbp
   1263b:	41 5c                	pop    %r12
   1263d:	41 5d                	pop    %r13
   1263f:	c3                   	retq   
   12640:	48 83 c4 08          	add    $0x8,%rsp
   12644:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12649:	5b                   	pop    %rbx
   1264a:	5d                   	pop    %rbp
   1264b:	41 5c                	pop    %r12
   1264d:	41 5d                	pop    %r13
   1264f:	c3                   	retq   
   12650:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   12655:	c3                   	retq   
   12656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1265d:	00 00 00 

0000000000012660 <mbedtls_oid_get_pkcs12_pbe_alg>:
   12660:	f3 0f 1e fa          	endbr64 
   12664:	48 85 ff             	test   %rdi,%rdi
   12667:	0f 84 83 00 00 00    	je     126f0 <mbedtls_oid_get_pkcs12_pbe_alg+0x90>
   1266d:	41 56                	push   %r14
   1266f:	b8 0a 00 00 00       	mov    $0xa,%eax
   12674:	41 55                	push   %r13
   12676:	49 89 f5             	mov    %rsi,%r13
   12679:	41 54                	push   %r12
   1267b:	49 89 d4             	mov    %rdx,%r12
   1267e:	55                   	push   %rbp
   1267f:	48 89 fd             	mov    %rdi,%rbp
   12682:	53                   	push   %rbx
   12683:	48 8d 1d f6 d8 00 00 	lea    0xd8f6(%rip),%rbx        # 1ff80 <oid_pkcs12_pbe_alg>
   1268a:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   1268e:	48 8d 3d 33 6d 00 00 	lea    0x6d33(%rip),%rdi        # 193c8 <md5_test_buf+0x288>
   12695:	eb 1a                	jmp    126b1 <mbedtls_oid_get_pkcs12_pbe_alg+0x51>
   12697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1269e:	00 00 
   126a0:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   126a4:	48 83 c3 28          	add    $0x28,%rbx
   126a8:	48 85 ff             	test   %rdi,%rdi
   126ab:	74 33                	je     126e0 <mbedtls_oid_get_pkcs12_pbe_alg+0x80>
   126ad:	48 8b 43 08          	mov    0x8(%rbx),%rax
   126b1:	49 39 c6             	cmp    %rax,%r14
   126b4:	75 ea                	jne    126a0 <mbedtls_oid_get_pkcs12_pbe_alg+0x40>
   126b6:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   126ba:	4c 89 f2             	mov    %r14,%rdx
   126bd:	e8 fe 0b ff ff       	callq  32c0 <memcmp@plt>
   126c2:	85 c0                	test   %eax,%eax
   126c4:	75 da                	jne    126a0 <mbedtls_oid_get_pkcs12_pbe_alg+0x40>
   126c6:	8b 53 20             	mov    0x20(%rbx),%edx
   126c9:	41 89 55 00          	mov    %edx,0x0(%r13)
   126cd:	8b 53 24             	mov    0x24(%rbx),%edx
   126d0:	41 89 14 24          	mov    %edx,(%r12)
   126d4:	5b                   	pop    %rbx
   126d5:	5d                   	pop    %rbp
   126d6:	41 5c                	pop    %r12
   126d8:	41 5d                	pop    %r13
   126da:	41 5e                	pop    %r14
   126dc:	c3                   	retq   
   126dd:	0f 1f 00             	nopl   (%rax)
   126e0:	5b                   	pop    %rbx
   126e1:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   126e6:	5d                   	pop    %rbp
   126e7:	41 5c                	pop    %r12
   126e9:	41 5d                	pop    %r13
   126eb:	41 5e                	pop    %r14
   126ed:	c3                   	retq   
   126ee:	66 90                	xchg   %ax,%ax
   126f0:	b8 d2 ff ff ff       	mov    $0xffffffd2,%eax
   126f5:	c3                   	retq   
   126f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   126fd:	00 00 00 

0000000000012700 <mbedtls_oid_get_numeric_string>:
   12700:	f3 0f 1e fa          	endbr64 
   12704:	48 81 fe ff ff ff 7f 	cmp    $0x7fffffff,%rsi
   1270b:	0f 87 59 01 00 00    	ja     1286a <mbedtls_oid_get_numeric_string+0x16a>
   12711:	41 56                	push   %r14
   12713:	41 55                	push   %r13
   12715:	49 89 d5             	mov    %rdx,%r13
   12718:	41 54                	push   %r12
   1271a:	55                   	push   %rbp
   1271b:	53                   	push   %rbx
   1271c:	48 83 7a 08 00       	cmpq   $0x0,0x8(%rdx)
   12721:	0f 84 39 01 00 00    	je     12860 <mbedtls_oid_get_numeric_string+0x160>
   12727:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   1272b:	49 89 fe             	mov    %rdi,%r14
   1272e:	48 89 f5             	mov    %rsi,%rbp
   12731:	49 89 f4             	mov    %rsi,%r12
   12734:	bb 01 00 00 00       	mov    $0x1,%ebx
   12739:	45 31 c9             	xor    %r9d,%r9d
   1273c:	eb 6f                	jmp    127ad <mbedtls_oid_get_numeric_string+0xad>
   1273e:	66 90                	xchg   %ax,%ax
   12740:	4c 39 e5             	cmp    %r12,%rbp
   12743:	0f 85 a7 00 00 00    	jne    127f0 <mbedtls_oid_get_numeric_string+0xf0>
   12749:	41 83 f9 4f          	cmp    $0x4f,%r9d
   1274d:	0f 86 dd 00 00 00    	jbe    12830 <mbedtls_oid_get_numeric_string+0x130>
   12753:	41 83 e9 50          	sub    $0x50,%r9d
   12757:	b8 32 00 00 00       	mov    $0x32,%eax
   1275c:	48 83 ec 08          	sub    $0x8,%rsp
   12760:	ba 01 00 00 00       	mov    $0x1,%edx
   12765:	4c 89 e6             	mov    %r12,%rsi
   12768:	4c 89 f7             	mov    %r14,%rdi
   1276b:	41 51                	push   %r9
   1276d:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   12774:	41 89 c1             	mov    %eax,%r9d
   12777:	4c 8d 05 55 6c 00 00 	lea    0x6c55(%rip),%r8        # 193d3 <md5_test_buf+0x293>
   1277e:	31 c0                	xor    %eax,%eax
   12780:	e8 6b 0a ff ff       	callq  31f0 <__snprintf_chk@plt>
   12785:	5a                   	pop    %rdx
   12786:	59                   	pop    %rcx
   12787:	48 98                	cltq   
   12789:	4c 39 e0             	cmp    %r12,%rax
   1278c:	0f 83 89 00 00 00    	jae    1281b <mbedtls_oid_get_numeric_string+0x11b>
   12792:	49 29 c4             	sub    %rax,%r12
   12795:	49 01 c6             	add    %rax,%r14
   12798:	49 39 5d 08          	cmp    %rbx,0x8(%r13)
   1279c:	0f 86 b0 00 00 00    	jbe    12852 <mbedtls_oid_get_numeric_string+0x152>
   127a2:	49 8b 4d 10          	mov    0x10(%r13),%rcx
   127a6:	45 31 c9             	xor    %r9d,%r9d
   127a9:	48 83 c3 01          	add    $0x1,%rbx
   127ad:	0f b6 44 19 ff       	movzbl -0x1(%rcx,%rbx,1),%eax
   127b2:	45 85 c9             	test   %r9d,%r9d
   127b5:	75 04                	jne    127bb <mbedtls_oid_get_numeric_string+0xbb>
   127b7:	3c 80                	cmp    $0x80,%al
   127b9:	74 23                	je     127de <mbedtls_oid_get_numeric_string+0xde>
   127bb:	89 c2                	mov    %eax,%edx
   127bd:	41 c1 e1 07          	shl    $0x7,%r9d
   127c1:	83 e2 7f             	and    $0x7f,%edx
   127c4:	41 09 d1             	or     %edx,%r9d
   127c7:	84 c0                	test   %al,%al
   127c9:	0f 89 71 ff ff ff    	jns    12740 <mbedtls_oid_get_numeric_string+0x40>
   127cf:	49 39 5d 08          	cmp    %rbx,0x8(%r13)
   127d3:	76 78                	jbe    1284d <mbedtls_oid_get_numeric_string+0x14d>
   127d5:	41 81 f9 ff ff ff 01 	cmp    $0x1ffffff,%r9d
   127dc:	76 cb                	jbe    127a9 <mbedtls_oid_get_numeric_string+0xa9>
   127de:	b8 98 ff ff ff       	mov    $0xffffff98,%eax
   127e3:	5b                   	pop    %rbx
   127e4:	5d                   	pop    %rbp
   127e5:	41 5c                	pop    %r12
   127e7:	41 5d                	pop    %r13
   127e9:	41 5e                	pop    %r14
   127eb:	c3                   	retq   
   127ec:	0f 1f 40 00          	nopl   0x0(%rax)
   127f0:	4c 8d 05 de 6b 00 00 	lea    0x6bde(%rip),%r8        # 193d5 <md5_test_buf+0x295>
   127f7:	4c 89 e6             	mov    %r12,%rsi
   127fa:	4c 89 f7             	mov    %r14,%rdi
   127fd:	31 c0                	xor    %eax,%eax
   127ff:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   12806:	ba 01 00 00 00       	mov    $0x1,%edx
   1280b:	e8 e0 09 ff ff       	callq  31f0 <__snprintf_chk@plt>
   12810:	48 98                	cltq   
   12812:	4c 39 e0             	cmp    %r12,%rax
   12815:	0f 82 77 ff ff ff    	jb     12792 <mbedtls_oid_get_numeric_string+0x92>
   1281b:	5b                   	pop    %rbx
   1281c:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
   12821:	5d                   	pop    %rbp
   12822:	41 5c                	pop    %r12
   12824:	41 5d                	pop    %r13
   12826:	41 5e                	pop    %r14
   12828:	c3                   	retq   
   12829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12830:	b8 30 00 00 00       	mov    $0x30,%eax
   12835:	41 83 f9 27          	cmp    $0x27,%r9d
   12839:	0f 86 1d ff ff ff    	jbe    1275c <mbedtls_oid_get_numeric_string+0x5c>
   1283f:	41 83 e9 28          	sub    $0x28,%r9d
   12843:	b8 31 00 00 00       	mov    $0x31,%eax
   12848:	e9 0f ff ff ff       	jmpq   1275c <mbedtls_oid_get_numeric_string+0x5c>
   1284d:	45 85 c9             	test   %r9d,%r9d
   12850:	75 0e                	jne    12860 <mbedtls_oid_get_numeric_string+0x160>
   12852:	89 e8                	mov    %ebp,%eax
   12854:	5b                   	pop    %rbx
   12855:	5d                   	pop    %rbp
   12856:	44 29 e0             	sub    %r12d,%eax
   12859:	41 5c                	pop    %r12
   1285b:	41 5d                	pop    %r13
   1285d:	41 5e                	pop    %r14
   1285f:	c3                   	retq   
   12860:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
   12865:	e9 79 ff ff ff       	jmpq   127e3 <mbedtls_oid_get_numeric_string+0xe3>
   1286a:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax
   1286f:	c3                   	retq   

0000000000012870 <mbedtls_get_unaligned_uint16>:
   12870:	f3 0f 1e fa          	endbr64 
   12874:	0f b7 07             	movzwl (%rdi),%eax
   12877:	c3                   	retq   
   12878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1287f:	00 

0000000000012880 <mbedtls_put_unaligned_uint16>:
   12880:	f3 0f 1e fa          	endbr64 
   12884:	66 89 37             	mov    %si,(%rdi)
   12887:	c3                   	retq   
   12888:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1288f:	00 

0000000000012890 <mbedtls_get_unaligned_uint32>:
   12890:	f3 0f 1e fa          	endbr64 
   12894:	8b 07                	mov    (%rdi),%eax
   12896:	c3                   	retq   
   12897:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1289e:	00 00 

00000000000128a0 <mbedtls_put_unaligned_uint32>:
   128a0:	f3 0f 1e fa          	endbr64 
   128a4:	89 37                	mov    %esi,(%rdi)
   128a6:	c3                   	retq   
   128a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   128ae:	00 00 

00000000000128b0 <mbedtls_get_unaligned_uint64>:
   128b0:	f3 0f 1e fa          	endbr64 
   128b4:	48 8b 07             	mov    (%rdi),%rax
   128b7:	c3                   	retq   
   128b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   128bf:	00 

00000000000128c0 <mbedtls_put_unaligned_uint64>:
   128c0:	f3 0f 1e fa          	endbr64 
   128c4:	48 89 37             	mov    %rsi,(%rdi)
   128c7:	c3                   	retq   
   128c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   128cf:	00 

00000000000128d0 <mbedtls_xor>:
   128d0:	f3 0f 1e fa          	endbr64 
   128d4:	48 83 f9 03          	cmp    $0x3,%rcx
   128d8:	76 46                	jbe    12920 <mbedtls_xor+0x50>
   128da:	b8 04 00 00 00       	mov    $0x4,%eax
   128df:	90                   	nop
   128e0:	44 8b 44 02 fc       	mov    -0x4(%rdx,%rax,1),%r8d
   128e5:	44 33 44 06 fc       	xor    -0x4(%rsi,%rax,1),%r8d
   128ea:	44 89 44 07 fc       	mov    %r8d,-0x4(%rdi,%rax,1)
   128ef:	49 89 c0             	mov    %rax,%r8
   128f2:	48 83 c0 04          	add    $0x4,%rax
   128f6:	48 39 c1             	cmp    %rax,%rcx
   128f9:	73 e5                	jae    128e0 <mbedtls_xor+0x10>
   128fb:	4c 39 c1             	cmp    %r8,%rcx
   128fe:	76 16                	jbe    12916 <mbedtls_xor+0x46>
   12900:	42 0f b6 04 06       	movzbl (%rsi,%r8,1),%eax
   12905:	42 32 04 02          	xor    (%rdx,%r8,1),%al
   12909:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
   1290d:	49 83 c0 01          	add    $0x1,%r8
   12911:	4c 39 c1             	cmp    %r8,%rcx
   12914:	75 ea                	jne    12900 <mbedtls_xor+0x30>
   12916:	c3                   	retq   
   12917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1291e:	00 00 
   12920:	45 31 c0             	xor    %r8d,%r8d
   12923:	eb d6                	jmp    128fb <mbedtls_xor+0x2b>
   12925:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1292c:	00 00 00 00 

0000000000012930 <mbedtls_platform_zeroize>:
   12930:	f3 0f 1e fa          	endbr64 
   12934:	48 85 f6             	test   %rsi,%rsi
   12937:	75 07                	jne    12940 <mbedtls_platform_zeroize+0x10>
   12939:	c3                   	retq   
   1293a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12940:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   12947:	e9 24 0a ff ff       	jmpq   3370 <__explicit_bzero_chk@plt>
   1294c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012950 <mbedtls_platform_gmtime_r>:
   12950:	f3 0f 1e fa          	endbr64 
   12954:	e9 47 09 ff ff       	jmpq   32a0 <gmtime_r@plt>
   12959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000012960 <mbedtls_ms_time>:
   12960:	f3 0f 1e fa          	endbr64 
   12964:	48 83 ec 28          	sub    $0x28,%rsp
   12968:	bf 01 00 00 00       	mov    $0x1,%edi
   1296d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12974:	00 00 
   12976:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1297b:	31 c0                	xor    %eax,%eax
   1297d:	48 89 e6             	mov    %rsp,%rsi
   12980:	e8 cb 08 ff ff       	callq  3250 <clock_gettime@plt>
   12985:	85 c0                	test   %eax,%eax
   12987:	75 47                	jne    129d0 <mbedtls_ms_time+0x70>
   12989:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1298e:	48 69 0c 24 e8 03 00 	imul   $0x3e8,(%rsp),%rcx
   12995:	00 
   12996:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
   1299d:	de 1b 43 
   129a0:	48 89 f0             	mov    %rsi,%rax
   129a3:	48 c1 fe 3f          	sar    $0x3f,%rsi
   129a7:	48 f7 ea             	imul   %rdx
   129aa:	48 c1 fa 12          	sar    $0x12,%rdx
   129ae:	48 29 f2             	sub    %rsi,%rdx
   129b1:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
   129b5:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   129ba:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   129c1:	00 00 
   129c3:	75 1b                	jne    129e0 <mbedtls_ms_time+0x80>
   129c5:	48 83 c4 28          	add    $0x28,%rsp
   129c9:	c3                   	retq   
   129ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   129d0:	31 ff                	xor    %edi,%edi
   129d2:	e8 59 09 ff ff       	callq  3330 <time@plt>
   129d7:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
   129de:	eb d5                	jmp    129b5 <mbedtls_ms_time+0x55>
   129e0:	e8 9b 08 ff ff       	callq  3280 <__stack_chk_fail@plt>
   129e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   129ec:	00 00 00 
   129ef:	90                   	nop

00000000000129f0 <mbedtls_ripemd160_init>:
   129f0:	f3 0f 1e fa          	endbr64 
   129f4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   129fb:	48 89 f9             	mov    %rdi,%rcx
   129fe:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   12a02:	31 c0                	xor    %eax,%eax
   12a04:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
   12a0b:	00 
   12a0c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   12a10:	48 29 f9             	sub    %rdi,%rcx
   12a13:	83 c1 5c             	add    $0x5c,%ecx
   12a16:	c1 e9 03             	shr    $0x3,%ecx
   12a19:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   12a1c:	c3                   	retq   
   12a1d:	0f 1f 00             	nopl   (%rax)

0000000000012a20 <mbedtls_ripemd160_free>:
   12a20:	f3 0f 1e fa          	endbr64 
   12a24:	48 85 ff             	test   %rdi,%rdi
   12a27:	74 0f                	je     12a38 <mbedtls_ripemd160_free+0x18>
   12a29:	be 5c 00 00 00       	mov    $0x5c,%esi
   12a2e:	e9 fd fe ff ff       	jmpq   12930 <mbedtls_platform_zeroize>
   12a33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12a38:	c3                   	retq   
   12a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000012a40 <mbedtls_ripemd160_clone>:
   12a40:	f3 0f 1e fa          	endbr64 
   12a44:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   12a48:	0f 11 07             	movups %xmm0,(%rdi)
   12a4b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   12a50:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   12a54:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   12a59:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   12a5d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   12a62:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   12a66:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   12a6b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   12a6f:	48 8b 46 50          	mov    0x50(%rsi),%rax
   12a73:	48 89 47 50          	mov    %rax,0x50(%rdi)
   12a77:	8b 46 58             	mov    0x58(%rsi),%eax
   12a7a:	89 47 58             	mov    %eax,0x58(%rdi)
   12a7d:	c3                   	retq   
   12a7e:	66 90                	xchg   %ax,%ax

0000000000012a80 <mbedtls_ripemd160_starts>:
   12a80:	f3 0f 1e fa          	endbr64 
   12a84:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   12a8b:	ab cd ef 
   12a8e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   12a95:	48 89 47 08          	mov    %rax,0x8(%rdi)
   12a99:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   12aa0:	54 32 10 
   12aa3:	48 89 47 10          	mov    %rax,0x10(%rdi)
   12aa7:	31 c0                	xor    %eax,%eax
   12aa9:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
   12ab0:	c3                   	retq   
   12ab1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12ab8:	00 00 00 00 
   12abc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012ac0 <mbedtls_internal_ripemd160_process>:
   12ac0:	f3 0f 1e fa          	endbr64 
   12ac4:	41 57                	push   %r15
   12ac6:	41 56                	push   %r14
   12ac8:	41 55                	push   %r13
   12aca:	41 54                	push   %r12
   12acc:	55                   	push   %rbp
   12acd:	53                   	push   %rbx
   12ace:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   12ad5:	44 8b 66 08          	mov    0x8(%rsi),%r12d
   12ad9:	8b 56 10             	mov    0x10(%rsi),%edx
   12adc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12ae3:	00 00 
   12ae5:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   12aec:	00 
   12aed:	31 c0                	xor    %eax,%eax
   12aef:	8b 46 0c             	mov    0xc(%rsi),%eax
   12af2:	44 8b 1e             	mov    (%rsi),%r11d
   12af5:	44 8b 6e 04          	mov    0x4(%rsi),%r13d
   12af9:	8b 5e 1c             	mov    0x1c(%rsi),%ebx
   12afc:	44 89 24 24          	mov    %r12d,(%rsp)
   12b00:	44 89 64 24 70       	mov    %r12d,0x70(%rsp)
   12b05:	44 8b 66 18          	mov    0x18(%rsi),%r12d
   12b09:	89 44 24 24          	mov    %eax,0x24(%rsp)
   12b0d:	89 44 24 74          	mov    %eax,0x74(%rsp)
   12b11:	8b 46 14             	mov    0x14(%rsi),%eax
   12b14:	89 54 24 04          	mov    %edx,0x4(%rsp)
   12b18:	89 54 24 78          	mov    %edx,0x78(%rsp)
   12b1c:	8b 56 20             	mov    0x20(%rsi),%edx
   12b1f:	44 89 5c 24 68       	mov    %r11d,0x68(%rsp)
   12b24:	44 89 6c 24 6c       	mov    %r13d,0x6c(%rsp)
   12b29:	89 44 24 08          	mov    %eax,0x8(%rsp)
   12b2d:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
   12b31:	44 89 a4 24 80 00 00 	mov    %r12d,0x80(%rsp)
   12b38:	00 
   12b39:	89 9c 24 84 00 00 00 	mov    %ebx,0x84(%rsp)
   12b40:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   12b44:	89 94 24 88 00 00 00 	mov    %edx,0x88(%rsp)
   12b4b:	44 8b 76 24          	mov    0x24(%rsi),%r14d
   12b4f:	44 8b 7e 2c          	mov    0x2c(%rsi),%r15d
   12b53:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
   12b57:	44 33 57 10          	xor    0x10(%rdi),%r10d
   12b5b:	8b 4e 28             	mov    0x28(%rsi),%ecx
   12b5e:	44 89 b4 24 8c 00 00 	mov    %r14d,0x8c(%rsp)
   12b65:	00 
   12b66:	8b 47 08             	mov    0x8(%rdi),%eax
   12b69:	8b 6e 38             	mov    0x38(%rsi),%ebp
   12b6c:	44 89 7c 24 14       	mov    %r15d,0x14(%rsp)
   12b71:	44 8b 46 30          	mov    0x30(%rsi),%r8d
   12b75:	44 8b 4e 34          	mov    0x34(%rsi),%r9d
   12b79:	44 89 bc 24 94 00 00 	mov    %r15d,0x94(%rsp)
   12b80:	00 
   12b81:	44 8b 7f 14          	mov    0x14(%rdi),%r15d
   12b85:	44 01 d8             	add    %r11d,%eax
   12b88:	8b 76 3c             	mov    0x3c(%rsi),%esi
   12b8b:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   12b8f:	89 8c 24 90 00 00 00 	mov    %ecx,0x90(%rsp)
   12b96:	8b 4f 10             	mov    0x10(%rdi),%ecx
   12b99:	45 31 d7             	xor    %r10d,%r15d
   12b9c:	44 8b 57 10          	mov    0x10(%rdi),%r10d
   12ba0:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
   12ba5:	41 01 c7             	add    %eax,%r15d
   12ba8:	8b 44 24 08          	mov    0x8(%rsp),%eax
   12bac:	44 89 84 24 98 00 00 	mov    %r8d,0x98(%rsp)
   12bb3:	00 
   12bb4:	41 c1 c2 0a          	rol    $0xa,%r10d
   12bb8:	44 89 4c 24 1c       	mov    %r9d,0x1c(%rsp)
   12bbd:	41 c1 c7 0b          	rol    $0xb,%r15d
   12bc1:	44 03 7f 18          	add    0x18(%rdi),%r15d
   12bc5:	44 89 d2             	mov    %r10d,%edx
   12bc8:	44 8b 57 14          	mov    0x14(%rdi),%r10d
   12bcc:	44 89 8c 24 9c 00 00 	mov    %r9d,0x9c(%rsp)
   12bd3:	00 
   12bd4:	89 ac 24 a0 00 00 00 	mov    %ebp,0xa0(%rsp)
   12bdb:	41 f7 d2             	not    %r10d
   12bde:	89 74 24 20          	mov    %esi,0x20(%rsp)
   12be2:	44 09 d1             	or     %r10d,%ecx
   12be5:	44 8b 57 08          	mov    0x8(%rdi),%r10d
   12be9:	33 4f 0c             	xor    0xc(%rdi),%ecx
   12bec:	89 b4 24 a4 00 00 00 	mov    %esi,0xa4(%rsp)
   12bf3:	41 8d 84 02 e6 8b a2 	lea    0x50a28be6(%r10,%rax,1),%eax
   12bfa:	50 
   12bfb:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
   12bff:	01 c1                	add    %eax,%ecx
   12c01:	41 31 d2             	xor    %edx,%r10d
   12c04:	c1 c1 08             	rol    $0x8,%ecx
   12c07:	03 4f 18             	add    0x18(%rdi),%ecx
   12c0a:	44 89 6c 24 34       	mov    %r13d,0x34(%rsp)
   12c0f:	45 89 d0             	mov    %r10d,%r8d
   12c12:	8b 47 18             	mov    0x18(%rdi),%eax
   12c15:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
   12c19:	89 6c 24 28          	mov    %ebp,0x28(%rsp)
   12c1d:	45 31 f8             	xor    %r15d,%r8d
   12c20:	89 5c 24 30          	mov    %ebx,0x30(%rsp)
   12c24:	44 01 e8             	add    %r13d,%eax
   12c27:	41 c1 c2 0a          	rol    $0xa,%r10d
   12c2b:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   12c30:	44 8b 2c 24          	mov    (%rsp),%r13d
   12c34:	45 89 d1             	mov    %r10d,%r9d
   12c37:	41 01 c0             	add    %eax,%r8d
   12c3a:	41 89 d2             	mov    %edx,%r10d
   12c3d:	8b 47 0c             	mov    0xc(%rdi),%eax
   12c40:	41 f7 d2             	not    %r10d
   12c43:	41 c1 c0 0e          	rol    $0xe,%r8d
   12c47:	44 03 47 14          	add    0x14(%rdi),%r8d
   12c4b:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   12c50:	44 09 d0             	or     %r10d,%eax
   12c53:	44 8b 57 18          	mov    0x18(%rdi),%r10d
   12c57:	31 c8                	xor    %ecx,%eax
   12c59:	41 8d b4 2a e6 8b a2 	lea    0x50a28be6(%r10,%rbp,1),%esi
   12c60:	50 
   12c61:	45 89 fa             	mov    %r15d,%r10d
   12c64:	45 31 ca             	xor    %r9d,%r10d
   12c67:	01 f0                	add    %esi,%eax
   12c69:	44 89 d5             	mov    %r10d,%ebp
   12c6c:	44 8b 14 24          	mov    (%rsp),%r10d
   12c70:	44 03 57 14          	add    0x14(%rdi),%r10d
   12c74:	c1 c0 09             	rol    $0x9,%eax
   12c77:	44 31 c5             	xor    %r8d,%ebp
   12c7a:	03 47 14             	add    0x14(%rdi),%eax
   12c7d:	44 01 d5             	add    %r10d,%ebp
   12c80:	45 89 ca             	mov    %r9d,%r10d
   12c83:	41 f7 d2             	not    %r10d
   12c86:	c1 c5 0f             	rol    $0xf,%ebp
   12c89:	44 89 d6             	mov    %r10d,%esi
   12c8c:	44 8b 57 14          	mov    0x14(%rdi),%r10d
   12c90:	01 d5                	add    %edx,%ebp
   12c92:	41 c1 c7 0a          	rol    $0xa,%r15d
   12c96:	09 ce                	or     %ecx,%esi
   12c98:	c1 c1 0a             	rol    $0xa,%ecx
   12c9b:	31 c6                	xor    %eax,%esi
   12c9d:	45 8d 94 1a e6 8b a2 	lea    0x50a28be6(%r10,%rbx,1),%r10d
   12ca4:	50 
   12ca5:	44 01 d6             	add    %r10d,%esi
   12ca8:	45 89 c2             	mov    %r8d,%r10d
   12cab:	41 c1 c0 0a          	rol    $0xa,%r8d
   12caf:	45 31 fa             	xor    %r15d,%r10d
   12cb2:	c1 c6 09             	rol    $0x9,%esi
   12cb5:	44 89 d3             	mov    %r10d,%ebx
   12cb8:	44 8b 54 24 24       	mov    0x24(%rsp),%r10d
   12cbd:	01 d6                	add    %edx,%esi
   12cbf:	31 eb                	xor    %ebp,%ebx
   12cc1:	41 01 d2             	add    %edx,%r10d
   12cc4:	42 8d 94 1a e6 8b a2 	lea    0x50a28be6(%rdx,%r11,1),%edx
   12ccb:	50 
   12ccc:	41 89 eb             	mov    %ebp,%r11d
   12ccf:	c1 c5 0a             	rol    $0xa,%ebp
   12cd2:	44 01 d3             	add    %r10d,%ebx
   12cd5:	41 89 ca             	mov    %ecx,%r10d
   12cd8:	45 31 c3             	xor    %r8d,%r11d
   12cdb:	41 f7 d2             	not    %r10d
   12cde:	c1 c3 0c             	rol    $0xc,%ebx
   12ce1:	41 09 c2             	or     %eax,%r10d
   12ce4:	44 01 cb             	add    %r9d,%ebx
   12ce7:	c1 c0 0a             	rol    $0xa,%eax
   12cea:	41 31 f2             	xor    %esi,%r10d
   12ced:	41 31 db             	xor    %ebx,%r11d
   12cf0:	41 01 d2             	add    %edx,%r10d
   12cf3:	8b 54 24 04          	mov    0x4(%rsp),%edx
   12cf7:	41 c1 c2 0b          	rol    $0xb,%r10d
   12cfb:	44 01 ca             	add    %r9d,%edx
   12cfe:	45 01 ca             	add    %r9d,%r10d
   12d01:	47 8d 8c 31 e6 8b a2 	lea    0x50a28be6(%r9,%r14,1),%r9d
   12d08:	50 
   12d09:	41 01 d3             	add    %edx,%r11d
   12d0c:	89 c2                	mov    %eax,%edx
   12d0e:	f7 d2                	not    %edx
   12d10:	41 c1 c3 05          	rol    $0x5,%r11d
   12d14:	09 f2                	or     %esi,%edx
   12d16:	45 01 fb             	add    %r15d,%r11d
   12d19:	44 31 d2             	xor    %r10d,%edx
   12d1c:	44 01 ca             	add    %r9d,%edx
   12d1f:	41 89 d9             	mov    %ebx,%r9d
   12d22:	c1 c2 0d             	rol    $0xd,%edx
   12d25:	01 ca                	add    %ecx,%edx
   12d27:	c1 c6 0a             	rol    $0xa,%esi
   12d2a:	41 31 e9             	xor    %ebp,%r9d
   12d2d:	44 03 7c 24 08       	add    0x8(%rsp),%r15d
   12d32:	45 31 d9             	xor    %r11d,%r9d
   12d35:	42 8d 8c 29 e6 8b a2 	lea    0x50a28be6(%rcx,%r13,1),%ecx
   12d3c:	50 
   12d3d:	c1 c3 0a             	rol    $0xa,%ebx
   12d40:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
   12d45:	45 01 f9             	add    %r15d,%r9d
   12d48:	41 89 f7             	mov    %esi,%r15d
   12d4b:	41 f7 d7             	not    %r15d
   12d4e:	41 c1 c1 08          	rol    $0x8,%r9d
   12d52:	45 09 d7             	or     %r10d,%r15d
   12d55:	45 01 c1             	add    %r8d,%r9d
   12d58:	41 c1 c2 0a          	rol    $0xa,%r10d
   12d5c:	45 01 e0             	add    %r12d,%r8d
   12d5f:	41 31 d7             	xor    %edx,%r15d
   12d62:	41 01 cf             	add    %ecx,%r15d
   12d65:	44 89 d9             	mov    %r11d,%ecx
   12d68:	41 c1 c3 0a          	rol    $0xa,%r11d
   12d6c:	31 d9                	xor    %ebx,%ecx
   12d6e:	41 c1 c7 0f          	rol    $0xf,%r15d
   12d72:	44 31 c9             	xor    %r9d,%ecx
   12d75:	41 01 c7             	add    %eax,%r15d
   12d78:	42 8d 84 28 e6 8b a2 	lea    0x50a28be6(%rax,%r13,1),%eax
   12d7f:	50 
   12d80:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
   12d85:	44 01 c1             	add    %r8d,%ecx
   12d88:	45 89 d0             	mov    %r10d,%r8d
   12d8b:	41 f7 d0             	not    %r8d
   12d8e:	c1 c1 07             	rol    $0x7,%ecx
   12d91:	41 09 d0             	or     %edx,%r8d
   12d94:	01 e9                	add    %ebp,%ecx
   12d96:	c1 c2 0a             	rol    $0xa,%edx
   12d99:	03 6c 24 30          	add    0x30(%rsp),%ebp
   12d9d:	45 31 f8             	xor    %r15d,%r8d
   12da0:	41 01 c0             	add    %eax,%r8d
   12da3:	44 89 c8             	mov    %r9d,%eax
   12da6:	44 31 d8             	xor    %r11d,%eax
   12da9:	41 c1 c0 0f          	rol    $0xf,%r8d
   12dad:	31 c8                	xor    %ecx,%eax
   12daf:	41 01 f0             	add    %esi,%r8d
   12db2:	42 8d b4 2e e6 8b a2 	lea    0x50a28be6(%rsi,%r13,1),%esi
   12db9:	50 
   12dba:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   12dbf:	01 e8                	add    %ebp,%eax
   12dc1:	89 d5                	mov    %edx,%ebp
   12dc3:	c1 c0 09             	rol    $0x9,%eax
   12dc6:	f7 d5                	not    %ebp
   12dc8:	01 d8                	add    %ebx,%eax
   12dca:	44 09 fd             	or     %r15d,%ebp
   12dcd:	41 c1 c1 0a          	rol    $0xa,%r9d
   12dd1:	03 5c 24 0c          	add    0xc(%rsp),%ebx
   12dd5:	44 31 c5             	xor    %r8d,%ebp
   12dd8:	41 c1 c7 0a          	rol    $0xa,%r15d
   12ddc:	01 f5                	add    %esi,%ebp
   12dde:	89 ce                	mov    %ecx,%esi
   12de0:	c1 c1 0a             	rol    $0xa,%ecx
   12de3:	44 31 ce             	xor    %r9d,%esi
   12de6:	c1 c5 05             	rol    $0x5,%ebp
   12de9:	31 c6                	xor    %eax,%esi
   12deb:	44 01 d5             	add    %r10d,%ebp
   12dee:	47 8d 94 2a e6 8b a2 	lea    0x50a28be6(%r10,%r13,1),%r10d
   12df5:	50 
   12df6:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   12dfb:	01 de                	add    %ebx,%esi
   12dfd:	44 89 fb             	mov    %r15d,%ebx
   12e00:	f7 d3                	not    %ebx
   12e02:	c1 c6 0b             	rol    $0xb,%esi
   12e05:	44 09 c3             	or     %r8d,%ebx
   12e08:	44 01 de             	add    %r11d,%esi
   12e0b:	41 c1 c0 0a          	rol    $0xa,%r8d
   12e0f:	45 01 f3             	add    %r14d,%r11d
   12e12:	31 eb                	xor    %ebp,%ebx
   12e14:	44 01 d3             	add    %r10d,%ebx
   12e17:	41 89 c2             	mov    %eax,%r10d
   12e1a:	c1 c0 0a             	rol    $0xa,%eax
   12e1d:	41 31 ca             	xor    %ecx,%r10d
   12e20:	c1 c3 07             	rol    $0x7,%ebx
   12e23:	41 31 f2             	xor    %esi,%r10d
   12e26:	01 d3                	add    %edx,%ebx
   12e28:	42 8d 94 22 e6 8b a2 	lea    0x50a28be6(%rdx,%r12,1),%edx
   12e2f:	50 
   12e30:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   12e35:	45 01 da             	add    %r11d,%r10d
   12e38:	45 89 c3             	mov    %r8d,%r11d
   12e3b:	41 f7 d3             	not    %r11d
   12e3e:	41 c1 c2 0d          	rol    $0xd,%r10d
   12e42:	41 09 eb             	or     %ebp,%r11d
   12e45:	45 01 ca             	add    %r9d,%r10d
   12e48:	41 31 db             	xor    %ebx,%r11d
   12e4b:	41 01 d3             	add    %edx,%r11d
   12e4e:	89 f2                	mov    %esi,%edx
   12e50:	41 c1 c3 07          	rol    $0x7,%r11d
   12e54:	45 01 fb             	add    %r15d,%r11d
   12e57:	31 c2                	xor    %eax,%edx
   12e59:	c1 c5 0a             	rol    $0xa,%ebp
   12e5c:	44 03 4c 24 10       	add    0x10(%rsp),%r9d
   12e61:	44 31 d2             	xor    %r10d,%edx
   12e64:	47 8d bc 2f e6 8b a2 	lea    0x50a28be6(%r15,%r13,1),%r15d
   12e6b:	50 
   12e6c:	c1 c6 0a             	rol    $0xa,%esi
   12e6f:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   12e74:	44 01 ca             	add    %r9d,%edx
   12e77:	41 89 e9             	mov    %ebp,%r9d
   12e7a:	41 f7 d1             	not    %r9d
   12e7d:	c1 c2 0e             	rol    $0xe,%edx
   12e80:	41 09 d9             	or     %ebx,%r9d
   12e83:	01 ca                	add    %ecx,%edx
   12e85:	c1 c3 0a             	rol    $0xa,%ebx
   12e88:	03 4c 24 14          	add    0x14(%rsp),%ecx
   12e8c:	45 31 d9             	xor    %r11d,%r9d
   12e8f:	45 01 f9             	add    %r15d,%r9d
   12e92:	45 89 d7             	mov    %r10d,%r15d
   12e95:	41 c1 c2 0a          	rol    $0xa,%r10d
   12e99:	41 31 f7             	xor    %esi,%r15d
   12e9c:	41 c1 c1 08          	rol    $0x8,%r9d
   12ea0:	41 31 d7             	xor    %edx,%r15d
   12ea3:	45 01 c1             	add    %r8d,%r9d
   12ea6:	47 8d 84 20 e6 8b a2 	lea    0x50a28be6(%r8,%r12,1),%r8d
   12ead:	50 
   12eae:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   12eb3:	41 01 cf             	add    %ecx,%r15d
   12eb6:	89 d9                	mov    %ebx,%ecx
   12eb8:	f7 d1                	not    %ecx
   12eba:	41 c1 c7 0f          	rol    $0xf,%r15d
   12ebe:	44 09 d9             	or     %r11d,%ecx
   12ec1:	41 01 c7             	add    %eax,%r15d
   12ec4:	41 c1 c3 0a          	rol    $0xa,%r11d
   12ec8:	03 44 24 18          	add    0x18(%rsp),%eax
   12ecc:	44 31 c9             	xor    %r9d,%ecx
   12ecf:	44 01 c1             	add    %r8d,%ecx
   12ed2:	41 89 d0             	mov    %edx,%r8d
   12ed5:	45 31 d0             	xor    %r10d,%r8d
   12ed8:	c1 c1 0b             	rol    $0xb,%ecx
   12edb:	45 31 f8             	xor    %r15d,%r8d
   12ede:	01 e9                	add    %ebp,%ecx
   12ee0:	42 8d ac 2d e6 8b a2 	lea    0x50a28be6(%rbp,%r13,1),%ebp
   12ee7:	50 
   12ee8:	41 01 c0             	add    %eax,%r8d
   12eeb:	44 89 d8             	mov    %r11d,%eax
   12eee:	f7 d0                	not    %eax
   12ef0:	41 c1 c0 06          	rol    $0x6,%r8d
   12ef4:	44 09 c8             	or     %r9d,%eax
   12ef7:	c1 c2 0a             	rol    $0xa,%edx
   12efa:	41 01 f0             	add    %esi,%r8d
   12efd:	03 74 24 1c          	add    0x1c(%rsp),%esi
   12f01:	31 c8                	xor    %ecx,%eax
   12f03:	41 c1 c1 0a          	rol    $0xa,%r9d
   12f07:	01 e8                	add    %ebp,%eax
   12f09:	44 89 fd             	mov    %r15d,%ebp
   12f0c:	41 c1 c7 0a          	rol    $0xa,%r15d
   12f10:	31 d5                	xor    %edx,%ebp
   12f12:	c1 c0 0e             	rol    $0xe,%eax
   12f15:	44 31 c5             	xor    %r8d,%ebp
   12f18:	01 d8                	add    %ebx,%eax
   12f1a:	42 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%rbx,%r12,1),%ebx
   12f21:	50 
   12f22:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   12f27:	01 f5                	add    %esi,%ebp
   12f29:	44 89 ce             	mov    %r9d,%esi
   12f2c:	f7 d6                	not    %esi
   12f2e:	c1 c5 07             	rol    $0x7,%ebp
   12f31:	09 ce                	or     %ecx,%esi
   12f33:	44 01 d5             	add    %r10d,%ebp
   12f36:	c1 c1 0a             	rol    $0xa,%ecx
   12f39:	44 03 54 24 28       	add    0x28(%rsp),%r10d
   12f3e:	31 c6                	xor    %eax,%esi
   12f40:	01 de                	add    %ebx,%esi
   12f42:	44 89 c3             	mov    %r8d,%ebx
   12f45:	41 c1 c0 0a          	rol    $0xa,%r8d
   12f49:	44 31 fb             	xor    %r15d,%ebx
   12f4c:	c1 c6 0e             	rol    $0xe,%esi
   12f4f:	31 eb                	xor    %ebp,%ebx
   12f51:	44 01 de             	add    %r11d,%esi
   12f54:	47 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%r11,%r12,1),%r11d
   12f5b:	50 
   12f5c:	44 01 d3             	add    %r10d,%ebx
   12f5f:	41 89 ca             	mov    %ecx,%r10d
   12f62:	41 f7 d2             	not    %r10d
   12f65:	c1 c3 09             	rol    $0x9,%ebx
   12f68:	41 09 c2             	or     %eax,%r10d
   12f6b:	01 d3                	add    %edx,%ebx
   12f6d:	41 31 f2             	xor    %esi,%r10d
   12f70:	45 01 da             	add    %r11d,%r10d
   12f73:	41 89 eb             	mov    %ebp,%r11d
   12f76:	41 c1 c2 0c          	rol    $0xc,%r10d
   12f7a:	45 31 c3             	xor    %r8d,%r11d
   12f7d:	03 54 24 20          	add    0x20(%rsp),%edx
   12f81:	c1 c0 0a             	rol    $0xa,%eax
   12f84:	41 31 db             	xor    %ebx,%r11d
   12f87:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
   12f8c:	45 01 ca             	add    %r9d,%r10d
   12f8f:	c1 c5 0a             	rol    $0xa,%ebp
   12f92:	41 01 d3             	add    %edx,%r11d
   12f95:	89 c2                	mov    %eax,%edx
   12f97:	f7 d2                	not    %edx
   12f99:	47 8d 8c 21 e6 8b a2 	lea    0x50a28be6(%r9,%r12,1),%r9d
   12fa0:	50 
   12fa1:	41 c1 c3 08          	rol    $0x8,%r11d
   12fa5:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   12faa:	09 f2                	or     %esi,%edx
   12fac:	45 01 fb             	add    %r15d,%r11d
   12faf:	c1 c6 0a             	rol    $0xa,%esi
   12fb2:	44 31 d2             	xor    %r10d,%edx
   12fb5:	47 8d bc 27 99 79 82 	lea    0x5a827999(%r15,%r12,1),%r15d
   12fbc:	5a 
   12fbd:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   12fc2:	44 01 ca             	add    %r9d,%edx
   12fc5:	41 89 d9             	mov    %ebx,%r9d
   12fc8:	c1 c3 0a             	rol    $0xa,%ebx
   12fcb:	41 31 e9             	xor    %ebp,%r9d
   12fce:	c1 c2 06             	rol    $0x6,%edx
   12fd1:	45 21 d9             	and    %r11d,%r9d
   12fd4:	01 ca                	add    %ecx,%edx
   12fd6:	42 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%rcx,%r12,1),%ecx
   12fdd:	5c 
   12fde:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   12fe3:	41 31 e9             	xor    %ebp,%r9d
   12fe6:	45 01 f9             	add    %r15d,%r9d
   12fe9:	45 89 d7             	mov    %r10d,%r15d
   12fec:	41 31 d7             	xor    %edx,%r15d
   12fef:	41 c1 c1 07          	rol    $0x7,%r9d
   12ff3:	41 21 f7             	and    %esi,%r15d
   12ff6:	45 01 c1             	add    %r8d,%r9d
   12ff9:	47 8d 84 20 99 79 82 	lea    0x5a827999(%r8,%r12,1),%r8d
   13000:	5a 
   13001:	44 8b 64 24 14       	mov    0x14(%rsp),%r12d
   13006:	45 31 d7             	xor    %r10d,%r15d
   13009:	41 c1 c2 0a          	rol    $0xa,%r10d
   1300d:	41 01 cf             	add    %ecx,%r15d
   13010:	44 89 d9             	mov    %r11d,%ecx
   13013:	31 d9                	xor    %ebx,%ecx
   13015:	41 c1 c7 09          	rol    $0x9,%r15d
   13019:	44 21 c9             	and    %r9d,%ecx
   1301c:	41 01 c7             	add    %eax,%r15d
   1301f:	42 8d 84 20 24 d1 4d 	lea    0x5c4dd124(%rax,%r12,1),%eax
   13026:	5c 
   13027:	44 8b 64 24 1c       	mov    0x1c(%rsp),%r12d
   1302c:	31 d9                	xor    %ebx,%ecx
   1302e:	41 c1 c3 0a          	rol    $0xa,%r11d
   13032:	44 01 c1             	add    %r8d,%ecx
   13035:	41 89 d0             	mov    %edx,%r8d
   13038:	45 31 f8             	xor    %r15d,%r8d
   1303b:	c1 c1 06             	rol    $0x6,%ecx
   1303e:	45 21 d0             	and    %r10d,%r8d
   13041:	01 e9                	add    %ebp,%ecx
   13043:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
   1304a:	5a 
   1304b:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   13050:	41 31 d0             	xor    %edx,%r8d
   13053:	c1 c2 0a             	rol    $0xa,%edx
   13056:	41 01 c0             	add    %eax,%r8d
   13059:	44 89 c8             	mov    %r9d,%eax
   1305c:	41 c1 c1 0a          	rol    $0xa,%r9d
   13060:	44 31 d8             	xor    %r11d,%eax
   13063:	41 c1 c0 0d          	rol    $0xd,%r8d
   13067:	21 c8                	and    %ecx,%eax
   13069:	41 01 f0             	add    %esi,%r8d
   1306c:	42 8d b4 26 24 d1 4d 	lea    0x5c4dd124(%rsi,%r12,1),%esi
   13073:	5c 
   13074:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   13079:	44 31 d8             	xor    %r11d,%eax
   1307c:	01 c5                	add    %eax,%ebp
   1307e:	44 89 f8             	mov    %r15d,%eax
   13081:	44 31 c0             	xor    %r8d,%eax
   13084:	c1 c5 08             	rol    $0x8,%ebp
   13087:	21 d0                	and    %edx,%eax
   13089:	01 dd                	add    %ebx,%ebp
   1308b:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
   13092:	5a 
   13093:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
   13098:	44 31 f8             	xor    %r15d,%eax
   1309b:	41 c1 c7 0a          	rol    $0xa,%r15d
   1309f:	01 f0                	add    %esi,%eax
   130a1:	89 ce                	mov    %ecx,%esi
   130a3:	44 31 ce             	xor    %r9d,%esi
   130a6:	c1 c0 0f             	rol    $0xf,%eax
   130a9:	21 ee                	and    %ebp,%esi
   130ab:	44 01 d0             	add    %r10d,%eax
   130ae:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
   130b5:	5c 
   130b6:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
   130bb:	44 31 ce             	xor    %r9d,%esi
   130be:	01 de                	add    %ebx,%esi
   130c0:	44 89 c3             	mov    %r8d,%ebx
   130c3:	c1 c6 0d             	rol    $0xd,%esi
   130c6:	44 01 de             	add    %r11d,%esi
   130c9:	c1 c1 0a             	rol    $0xa,%ecx
   130cc:	31 c3                	xor    %eax,%ebx
   130ce:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
   130d5:	5a 
   130d6:	44 21 fb             	and    %r15d,%ebx
   130d9:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   130de:	44 31 c3             	xor    %r8d,%ebx
   130e1:	41 c1 c0 0a          	rol    $0xa,%r8d
   130e5:	44 01 d3             	add    %r10d,%ebx
   130e8:	41 89 ea             	mov    %ebp,%r10d
   130eb:	c1 c5 0a             	rol    $0xa,%ebp
   130ee:	41 31 ca             	xor    %ecx,%r10d
   130f1:	c1 c3 07             	rol    $0x7,%ebx
   130f4:	41 21 f2             	and    %esi,%r10d
   130f7:	01 d3                	add    %edx,%ebx
   130f9:	42 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%rdx,%r13,1),%edx
   13100:	5c 
   13101:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   13106:	41 31 ca             	xor    %ecx,%r10d
   13109:	45 01 d3             	add    %r10d,%r11d
   1310c:	41 89 c2             	mov    %eax,%r10d
   1310f:	41 31 da             	xor    %ebx,%r10d
   13112:	41 c1 c3 0b          	rol    $0xb,%r11d
   13116:	45 21 c2             	and    %r8d,%r10d
   13119:	45 01 cb             	add    %r9d,%r11d
   1311c:	47 8d 8c 21 99 79 82 	lea    0x5a827999(%r9,%r12,1),%r9d
   13123:	5a 
   13124:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   13129:	41 31 c2             	xor    %eax,%r10d
   1312c:	c1 c0 0a             	rol    $0xa,%eax
   1312f:	41 01 d2             	add    %edx,%r10d
   13132:	89 f2                	mov    %esi,%edx
   13134:	c1 c6 0a             	rol    $0xa,%esi
   13137:	31 ea                	xor    %ebp,%edx
   13139:	41 c1 c2 0c          	rol    $0xc,%r10d
   1313d:	44 21 da             	and    %r11d,%edx
   13140:	45 01 fa             	add    %r15d,%r10d
   13143:	47 8d bc 2f 24 d1 4d 	lea    0x5c4dd124(%r15,%r13,1),%r15d
   1314a:	5c 
   1314b:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   13150:	31 ea                	xor    %ebp,%edx
   13152:	44 01 ca             	add    %r9d,%edx
   13155:	41 89 d9             	mov    %ebx,%r9d
   13158:	45 31 d1             	xor    %r10d,%r9d
   1315b:	c1 c2 09             	rol    $0x9,%edx
   1315e:	41 21 c1             	and    %eax,%r9d
   13161:	01 ca                	add    %ecx,%edx
   13163:	42 8d 8c 29 99 79 82 	lea    0x5a827999(%rcx,%r13,1),%ecx
   1316a:	5a 
   1316b:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   13170:	41 31 d9             	xor    %ebx,%r9d
   13173:	45 01 f9             	add    %r15d,%r9d
   13176:	45 89 df             	mov    %r11d,%r15d
   13179:	c1 c3 0a             	rol    $0xa,%ebx
   1317c:	41 c1 c1 08          	rol    $0x8,%r9d
   13180:	41 31 f7             	xor    %esi,%r15d
   13183:	41 c1 c3 0a          	rol    $0xa,%r11d
   13187:	41 21 d7             	and    %edx,%r15d
   1318a:	45 01 c1             	add    %r8d,%r9d
   1318d:	47 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%r8,%r13,1),%r8d
   13194:	5c 
   13195:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
   1319a:	41 31 f7             	xor    %esi,%r15d
   1319d:	41 01 cf             	add    %ecx,%r15d
   131a0:	44 89 d1             	mov    %r10d,%ecx
   131a3:	44 31 c9             	xor    %r9d,%ecx
   131a6:	41 c1 c7 07          	rol    $0x7,%r15d
   131aa:	21 d9                	and    %ebx,%ecx
   131ac:	41 01 ef             	add    %ebp,%r15d
   131af:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
   131b6:	5a 
   131b7:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
   131bc:	44 31 d1             	xor    %r10d,%ecx
   131bf:	41 c1 c2 0a          	rol    $0xa,%r10d
   131c3:	44 01 c1             	add    %r8d,%ecx
   131c6:	41 89 d0             	mov    %edx,%r8d
   131c9:	c1 c2 0a             	rol    $0xa,%edx
   131cc:	45 31 d8             	xor    %r11d,%r8d
   131cf:	c1 c1 09             	rol    $0x9,%ecx
   131d2:	45 21 f8             	and    %r15d,%r8d
   131d5:	01 c1                	add    %eax,%ecx
   131d7:	42 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%rax,%r13,1),%eax
   131de:	5c 
   131df:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   131e4:	45 31 d8             	xor    %r11d,%r8d
   131e7:	41 01 e8             	add    %ebp,%r8d
   131ea:	44 89 cd             	mov    %r9d,%ebp
   131ed:	31 cd                	xor    %ecx,%ebp
   131ef:	41 c1 c0 0f          	rol    $0xf,%r8d
   131f3:	44 21 d5             	and    %r10d,%ebp
   131f6:	41 01 f0             	add    %esi,%r8d
   131f9:	42 8d b4 2e 99 79 82 	lea    0x5a827999(%rsi,%r13,1),%esi
   13200:	5a 
   13201:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   13206:	44 31 cd             	xor    %r9d,%ebp
   13209:	41 c1 c1 0a          	rol    $0xa,%r9d
   1320d:	01 c5                	add    %eax,%ebp
   1320f:	44 89 f8             	mov    %r15d,%eax
   13212:	c1 c5 0b             	rol    $0xb,%ebp
   13215:	01 dd                	add    %ebx,%ebp
   13217:	31 d0                	xor    %edx,%eax
   13219:	42 8d 9c 23 24 d1 4d 	lea    0x5c4dd124(%rbx,%r12,1),%ebx
   13220:	5c 
   13221:	41 c1 c7 0a          	rol    $0xa,%r15d
   13225:	44 21 c0             	and    %r8d,%eax
   13228:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   1322d:	31 d0                	xor    %edx,%eax
   1322f:	01 f0                	add    %esi,%eax
   13231:	89 ce                	mov    %ecx,%esi
   13233:	31 ee                	xor    %ebp,%esi
   13235:	c1 c0 07             	rol    $0x7,%eax
   13238:	44 21 ce             	and    %r9d,%esi
   1323b:	44 01 d8             	add    %r11d,%eax
   1323e:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
   13245:	5a 
   13246:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   1324b:	31 ce                	xor    %ecx,%esi
   1324d:	c1 c1 0a             	rol    $0xa,%ecx
   13250:	01 de                	add    %ebx,%esi
   13252:	44 89 c3             	mov    %r8d,%ebx
   13255:	41 c1 c0 0a          	rol    $0xa,%r8d
   13259:	44 31 fb             	xor    %r15d,%ebx
   1325c:	c1 c6 07             	rol    $0x7,%esi
   1325f:	21 c3                	and    %eax,%ebx
   13261:	44 01 d6             	add    %r10d,%esi
   13264:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
   1326b:	5c 
   1326c:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   13271:	44 31 fb             	xor    %r15d,%ebx
   13274:	44 01 db             	add    %r11d,%ebx
   13277:	41 89 eb             	mov    %ebp,%r11d
   1327a:	41 31 f3             	xor    %esi,%r11d
   1327d:	c1 c3 0c             	rol    $0xc,%ebx
   13280:	41 21 cb             	and    %ecx,%r11d
   13283:	01 d3                	add    %edx,%ebx
   13285:	42 8d 94 32 99 79 82 	lea    0x5a827999(%rdx,%r14,1),%edx
   1328c:	5a 
   1328d:	41 31 eb             	xor    %ebp,%r11d
   13290:	c1 c5 0a             	rol    $0xa,%ebp
   13293:	45 01 d3             	add    %r10d,%r11d
   13296:	41 89 c2             	mov    %eax,%r10d
   13299:	45 31 c2             	xor    %r8d,%r10d
   1329c:	41 c1 c3 07          	rol    $0x7,%r11d
   132a0:	41 21 da             	and    %ebx,%r10d
   132a3:	45 01 cb             	add    %r9d,%r11d
   132a6:	47 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%r9,%r12,1),%r9d
   132ad:	5c 
   132ae:	45 31 c2             	xor    %r8d,%r10d
   132b1:	41 01 d2             	add    %edx,%r10d
   132b4:	89 f2                	mov    %esi,%edx
   132b6:	41 c1 c2 0f          	rol    $0xf,%r10d
   132ba:	44 31 da             	xor    %r11d,%edx
   132bd:	c1 c0 0a             	rol    $0xa,%eax
   132c0:	21 ea                	and    %ebp,%edx
   132c2:	45 01 fa             	add    %r15d,%r10d
   132c5:	47 8d bc 2f 99 79 82 	lea    0x5a827999(%r15,%r13,1),%r15d
   132cc:	5a 
   132cd:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   132d2:	31 f2                	xor    %esi,%edx
   132d4:	c1 c6 0a             	rol    $0xa,%esi
   132d7:	44 01 ca             	add    %r9d,%edx
   132da:	41 89 d9             	mov    %ebx,%r9d
   132dd:	c1 c3 0a             	rol    $0xa,%ebx
   132e0:	41 31 c1             	xor    %eax,%r9d
   132e3:	c1 c2 0c             	rol    $0xc,%edx
   132e6:	45 21 d1             	and    %r10d,%r9d
   132e9:	01 ca                	add    %ecx,%edx
   132eb:	42 8d 8c 29 24 d1 4d 	lea    0x5c4dd124(%rcx,%r13,1),%ecx
   132f2:	5c 
   132f3:	44 8b 2c 24          	mov    (%rsp),%r13d
   132f7:	41 31 c1             	xor    %eax,%r9d
   132fa:	45 01 f9             	add    %r15d,%r9d
   132fd:	45 89 df             	mov    %r11d,%r15d
   13300:	41 31 d7             	xor    %edx,%r15d
   13303:	41 c1 c1 09          	rol    $0x9,%r9d
   13307:	41 21 f7             	and    %esi,%r15d
   1330a:	45 01 c1             	add    %r8d,%r9d
   1330d:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
   13314:	5a 
   13315:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
   1331a:	45 31 df             	xor    %r11d,%r15d
   1331d:	41 c1 c3 0a          	rol    $0xa,%r11d
   13321:	41 01 cf             	add    %ecx,%r15d
   13324:	44 89 d1             	mov    %r10d,%ecx
   13327:	41 c1 c2 0a          	rol    $0xa,%r10d
   1332b:	31 d9                	xor    %ebx,%ecx
   1332d:	41 c1 c7 07          	rol    $0x7,%r15d
   13331:	44 21 c9             	and    %r9d,%ecx
   13334:	41 01 ef             	add    %ebp,%r15d
   13337:	42 8d ac 2d 24 d1 4d 	lea    0x5c4dd124(%rbp,%r13,1),%ebp
   1333e:	5c 
   1333f:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
   13344:	31 d9                	xor    %ebx,%ecx
   13346:	44 01 c1             	add    %r8d,%ecx
   13349:	41 89 d0             	mov    %edx,%r8d
   1334c:	c1 c1 0b             	rol    $0xb,%ecx
   1334f:	45 31 f8             	xor    %r15d,%r8d
   13352:	01 c1                	add    %eax,%ecx
   13354:	45 21 d8             	and    %r11d,%r8d
   13357:	42 8d 84 28 99 79 82 	lea    0x5a827999(%rax,%r13,1),%eax
   1335e:	5a 
   1335f:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
   13364:	41 31 d0             	xor    %edx,%r8d
   13367:	c1 c2 0a             	rol    $0xa,%edx
   1336a:	41 01 e8             	add    %ebp,%r8d
   1336d:	44 89 cd             	mov    %r9d,%ebp
   13370:	41 c1 c1 0a          	rol    $0xa,%r9d
   13374:	44 31 d5             	xor    %r10d,%ebp
   13377:	41 c1 c0 06          	rol    $0x6,%r8d
   1337b:	21 cd                	and    %ecx,%ebp
   1337d:	41 01 f0             	add    %esi,%r8d
   13380:	42 8d b4 36 24 d1 4d 	lea    0x5c4dd124(%rsi,%r14,1),%esi
   13387:	5c 
   13388:	44 31 d5             	xor    %r10d,%ebp
   1338b:	01 c5                	add    %eax,%ebp
   1338d:	44 89 f8             	mov    %r15d,%eax
   13390:	44 31 c0             	xor    %r8d,%eax
   13393:	c1 c5 07             	rol    $0x7,%ebp
   13396:	21 d0                	and    %edx,%eax
   13398:	01 dd                	add    %ebx,%ebp
   1339a:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
   133a1:	5a 
   133a2:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   133a7:	44 31 f8             	xor    %r15d,%eax
   133aa:	41 c1 c7 0a          	rol    $0xa,%r15d
   133ae:	01 f0                	add    %esi,%eax
   133b0:	89 ce                	mov    %ecx,%esi
   133b2:	c1 c1 0a             	rol    $0xa,%ecx
   133b5:	44 31 ce             	xor    %r9d,%esi
   133b8:	c1 c0 0f             	rol    $0xf,%eax
   133bb:	21 ee                	and    %ebp,%esi
   133bd:	44 01 d8             	add    %r11d,%eax
   133c0:	47 8d 9c 2b 24 d1 4d 	lea    0x5c4dd124(%r11,%r13,1),%r11d
   133c7:	5c 
   133c8:	44 31 ce             	xor    %r9d,%esi
   133cb:	01 de                	add    %ebx,%esi
   133cd:	44 89 c3             	mov    %r8d,%ebx
   133d0:	31 c3                	xor    %eax,%ebx
   133d2:	c1 c6 0d             	rol    $0xd,%esi
   133d5:	44 21 fb             	and    %r15d,%ebx
   133d8:	44 01 d6             	add    %r10d,%esi
   133db:	47 8d 94 22 99 79 82 	lea    0x5a827999(%r10,%r12,1),%r10d
   133e2:	5a 
   133e3:	44 8b 24 24          	mov    (%rsp),%r12d
   133e7:	44 31 c3             	xor    %r8d,%ebx
   133ea:	44 01 db             	add    %r11d,%ebx
   133ed:	41 89 eb             	mov    %ebp,%r11d
   133f0:	c1 c3 0d             	rol    $0xd,%ebx
   133f3:	01 d3                	add    %edx,%ebx
   133f5:	41 31 cb             	xor    %ecx,%r11d
   133f8:	42 8d 94 22 24 d1 4d 	lea    0x5c4dd124(%rdx,%r12,1),%edx
   133ff:	5c 
   13400:	c1 c5 0a             	rol    $0xa,%ebp
   13403:	41 21 f3             	and    %esi,%r11d
   13406:	41 c1 c0 0a          	rol    $0xa,%r8d
   1340a:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   1340f:	41 31 cb             	xor    %ecx,%r11d
   13412:	45 01 d3             	add    %r10d,%r11d
   13415:	41 89 c2             	mov    %eax,%r10d
   13418:	41 31 da             	xor    %ebx,%r10d
   1341b:	41 c1 c3 0c          	rol    $0xc,%r11d
   1341f:	45 21 c2             	and    %r8d,%r10d
   13422:	45 01 cb             	add    %r9d,%r11d
   13425:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
   1342c:	6e 
   1342d:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   13432:	41 31 c2             	xor    %eax,%r10d
   13435:	c1 c0 0a             	rol    $0xa,%eax
   13438:	41 01 d2             	add    %edx,%r10d
   1343b:	89 f2                	mov    %esi,%edx
   1343d:	c1 c6 0a             	rol    $0xa,%esi
   13440:	f7 d2                	not    %edx
   13442:	41 c1 c2 0b          	rol    $0xb,%r10d
   13446:	44 09 da             	or     %r11d,%edx
   13449:	45 01 fa             	add    %r15d,%r10d
   1344c:	47 8d bc 27 f3 3e 70 	lea    0x6d703ef3(%r15,%r12,1),%r15d
   13453:	6d 
   13454:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   13459:	31 ea                	xor    %ebp,%edx
   1345b:	44 89 74 24 3c       	mov    %r14d,0x3c(%rsp)
   13460:	44 01 ca             	add    %r9d,%edx
   13463:	41 89 d9             	mov    %ebx,%r9d
   13466:	c1 c3 0a             	rol    $0xa,%ebx
   13469:	41 f7 d1             	not    %r9d
   1346c:	c1 c2 0b             	rol    $0xb,%edx
   1346f:	45 09 d1             	or     %r10d,%r9d
   13472:	01 ca                	add    %ecx,%edx
   13474:	42 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r12,1),%ecx
   1347b:	6e 
   1347c:	44 8b 64 24 08       	mov    0x8(%rsp),%r12d
   13481:	41 31 c1             	xor    %eax,%r9d
   13484:	45 01 f9             	add    %r15d,%r9d
   13487:	45 89 df             	mov    %r11d,%r15d
   1348a:	41 f7 d7             	not    %r15d
   1348d:	41 c1 c1 09          	rol    $0x9,%r9d
   13491:	41 09 d7             	or     %edx,%r15d
   13494:	45 01 c1             	add    %r8d,%r9d
   13497:	47 8d 84 20 f3 3e 70 	lea    0x6d703ef3(%r8,%r12,1),%r8d
   1349e:	6d 
   1349f:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
   134a4:	41 31 f7             	xor    %esi,%r15d
   134a7:	41 01 cf             	add    %ecx,%r15d
   134aa:	44 89 d1             	mov    %r10d,%ecx
   134ad:	41 c1 c7 0d          	rol    $0xd,%r15d
   134b1:	f7 d1                	not    %ecx
   134b3:	41 01 ef             	add    %ebp,%r15d
   134b6:	44 09 c9             	or     %r9d,%ecx
   134b9:	41 c1 c3 0a          	rol    $0xa,%r11d
   134bd:	42 8d ac 25 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r12,1),%ebp
   134c4:	6e 
   134c5:	31 d9                	xor    %ebx,%ecx
   134c7:	41 c1 c2 0a          	rol    $0xa,%r10d
   134cb:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   134d0:	44 01 c1             	add    %r8d,%ecx
   134d3:	41 89 d0             	mov    %edx,%r8d
   134d6:	c1 c2 0a             	rol    $0xa,%edx
   134d9:	41 f7 d0             	not    %r8d
   134dc:	c1 c1 07             	rol    $0x7,%ecx
   134df:	45 09 f8             	or     %r15d,%r8d
   134e2:	01 c1                	add    %eax,%ecx
   134e4:	42 8d 84 28 f3 3e 70 	lea    0x6d703ef3(%rax,%r13,1),%eax
   134eb:	6d 
   134ec:	45 31 d8             	xor    %r11d,%r8d
   134ef:	41 01 e8             	add    %ebp,%r8d
   134f2:	44 89 cd             	mov    %r9d,%ebp
   134f5:	41 c1 c1 0a          	rol    $0xa,%r9d
   134f9:	f7 d5                	not    %ebp
   134fb:	41 c1 c0 06          	rol    $0x6,%r8d
   134ff:	09 cd                	or     %ecx,%ebp
   13501:	41 01 f0             	add    %esi,%r8d
   13504:	42 8d b4 26 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r12,1),%esi
   1350b:	6e 
   1350c:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   13511:	44 31 d5             	xor    %r10d,%ebp
   13514:	01 c5                	add    %eax,%ebp
   13516:	44 89 f8             	mov    %r15d,%eax
   13519:	f7 d0                	not    %eax
   1351b:	c1 c5 0f             	rol    $0xf,%ebp
   1351e:	44 09 c0             	or     %r8d,%eax
   13521:	01 dd                	add    %ebx,%ebp
   13523:	42 8d 9c 23 f3 3e 70 	lea    0x6d703ef3(%rbx,%r12,1),%ebx
   1352a:	6d 
   1352b:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   13530:	31 d0                	xor    %edx,%eax
   13532:	01 c6                	add    %eax,%esi
   13534:	44 89 f8             	mov    %r15d,%eax
   13537:	41 89 cf             	mov    %ecx,%r15d
   1353a:	c1 c1 0a             	rol    $0xa,%ecx
   1353d:	c1 c6 07             	rol    $0x7,%esi
   13540:	41 f7 d7             	not    %r15d
   13543:	c1 c0 0a             	rol    $0xa,%eax
   13546:	41 09 ef             	or     %ebp,%r15d
   13549:	44 01 de             	add    %r11d,%esi
   1354c:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
   13553:	6e 
   13554:	45 31 cf             	xor    %r9d,%r15d
   13557:	41 01 df             	add    %ebx,%r15d
   1355a:	44 89 c3             	mov    %r8d,%ebx
   1355d:	41 c1 c7 0b          	rol    $0xb,%r15d
   13561:	f7 d3                	not    %ebx
   13563:	45 01 d7             	add    %r10d,%r15d
   13566:	09 f3                	or     %esi,%ebx
   13568:	47 8d 94 22 f3 3e 70 	lea    0x6d703ef3(%r10,%r12,1),%r10d
   1356f:	6d 
   13570:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   13575:	31 c3                	xor    %eax,%ebx
   13577:	41 c1 c0 0a          	rol    $0xa,%r8d
   1357b:	44 01 db             	add    %r11d,%ebx
   1357e:	41 89 eb             	mov    %ebp,%r11d
   13581:	c1 c5 0a             	rol    $0xa,%ebp
   13584:	41 f7 d3             	not    %r11d
   13587:	c1 c3 0e             	rol    $0xe,%ebx
   1358a:	45 09 fb             	or     %r15d,%r11d
   1358d:	01 d3                	add    %edx,%ebx
   1358f:	42 8d 94 22 a1 eb d9 	lea    0x6ed9eba1(%rdx,%r12,1),%edx
   13596:	6e 
   13597:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
   1359c:	41 31 cb             	xor    %ecx,%r11d
   1359f:	45 01 d3             	add    %r10d,%r11d
   135a2:	41 89 f2             	mov    %esi,%r10d
   135a5:	c1 c6 0a             	rol    $0xa,%esi
   135a8:	41 f7 d2             	not    %r10d
   135ab:	41 c1 c3 08          	rol    $0x8,%r11d
   135af:	41 09 da             	or     %ebx,%r10d
   135b2:	45 01 cb             	add    %r9d,%r11d
   135b5:	47 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%r9,%r12,1),%r9d
   135bc:	6d 
   135bd:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   135c2:	45 31 c2             	xor    %r8d,%r10d
   135c5:	41 01 d2             	add    %edx,%r10d
   135c8:	44 89 fa             	mov    %r15d,%edx
   135cb:	41 c1 c7 0a          	rol    $0xa,%r15d
   135cf:	f7 d2                	not    %edx
   135d1:	41 c1 c2 09          	rol    $0x9,%r10d
   135d5:	44 09 da             	or     %r11d,%edx
   135d8:	41 01 c2             	add    %eax,%r10d
   135db:	42 8d 84 20 a1 eb d9 	lea    0x6ed9eba1(%rax,%r12,1),%eax
   135e2:	6e 
   135e3:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   135e8:	31 ea                	xor    %ebp,%edx
   135ea:	44 01 ca             	add    %r9d,%edx
   135ed:	41 89 d9             	mov    %ebx,%r9d
   135f0:	c1 c3 0a             	rol    $0xa,%ebx
   135f3:	41 f7 d1             	not    %r9d
   135f6:	c1 c2 06             	rol    $0x6,%edx
   135f9:	45 09 d1             	or     %r10d,%r9d
   135fc:	01 ca                	add    %ecx,%edx
   135fe:	42 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%rcx,%r12,1),%ecx
   13605:	6d 
   13606:	41 31 f1             	xor    %esi,%r9d
   13609:	41 01 c1             	add    %eax,%r9d
   1360c:	44 89 d8             	mov    %r11d,%eax
   1360f:	f7 d0                	not    %eax
   13611:	41 c1 c1 0d          	rol    $0xd,%r9d
   13615:	09 d0                	or     %edx,%eax
   13617:	45 01 c1             	add    %r8d,%r9d
   1361a:	47 8d 84 28 a1 eb d9 	lea    0x6ed9eba1(%r8,%r13,1),%r8d
   13621:	6e 
   13622:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
   13627:	44 31 f8             	xor    %r15d,%eax
   1362a:	01 c8                	add    %ecx,%eax
   1362c:	44 89 d1             	mov    %r10d,%ecx
   1362f:	41 c1 c3 0a          	rol    $0xa,%r11d
   13633:	c1 c0 06             	rol    $0x6,%eax
   13636:	f7 d1                	not    %ecx
   13638:	41 c1 c2 0a          	rol    $0xa,%r10d
   1363c:	44 09 c9             	or     %r9d,%ecx
   1363f:	01 e8                	add    %ebp,%eax
   13641:	42 8d ac 35 f3 3e 70 	lea    0x6d703ef3(%rbp,%r14,1),%ebp
   13648:	6d 
   13649:	44 8b 34 24          	mov    (%rsp),%r14d
   1364d:	31 d9                	xor    %ebx,%ecx
   1364f:	44 01 c1             	add    %r8d,%ecx
   13652:	41 89 d0             	mov    %edx,%r8d
   13655:	c1 c2 0a             	rol    $0xa,%edx
   13658:	41 f7 d0             	not    %r8d
   1365b:	c1 c1 0f             	rol    $0xf,%ecx
   1365e:	41 09 c0             	or     %eax,%r8d
   13661:	01 f1                	add    %esi,%ecx
   13663:	42 8d b4 36 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r14,1),%esi
   1366a:	6e 
   1366b:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   13670:	45 31 d8             	xor    %r11d,%r8d
   13673:	41 01 e8             	add    %ebp,%r8d
   13676:	44 89 cd             	mov    %r9d,%ebp
   13679:	41 c1 c1 0a          	rol    $0xa,%r9d
   1367d:	f7 d5                	not    %ebp
   1367f:	41 c1 c0 0e          	rol    $0xe,%r8d
   13683:	09 cd                	or     %ecx,%ebp
   13685:	45 01 f8             	add    %r15d,%r8d
   13688:	47 8d bc 37 f3 3e 70 	lea    0x6d703ef3(%r15,%r14,1),%r15d
   1368f:	6d 
   13690:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   13695:	44 31 d5             	xor    %r10d,%ebp
   13698:	01 f5                	add    %esi,%ebp
   1369a:	89 c6                	mov    %eax,%esi
   1369c:	c1 c0 0a             	rol    $0xa,%eax
   1369f:	f7 d6                	not    %esi
   136a1:	c1 c5 0e             	rol    $0xe,%ebp
   136a4:	44 09 c6             	or     %r8d,%esi
   136a7:	01 dd                	add    %ebx,%ebp
   136a9:	42 8d 9c 2b a1 eb d9 	lea    0x6ed9eba1(%rbx,%r13,1),%ebx
   136b0:	6e 
   136b1:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   136b6:	31 d6                	xor    %edx,%esi
   136b8:	44 01 fe             	add    %r15d,%esi
   136bb:	41 89 cf             	mov    %ecx,%r15d
   136be:	41 f7 d7             	not    %r15d
   136c1:	c1 c6 0c             	rol    $0xc,%esi
   136c4:	41 09 ef             	or     %ebp,%r15d
   136c7:	44 01 de             	add    %r11d,%esi
   136ca:	47 8d 9c 2b f3 3e 70 	lea    0x6d703ef3(%r11,%r13,1),%r11d
   136d1:	6d 
   136d2:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   136d7:	45 31 cf             	xor    %r9d,%r15d
   136da:	41 01 df             	add    %ebx,%r15d
   136dd:	44 89 c3             	mov    %r8d,%ebx
   136e0:	41 c1 c7 08          	rol    $0x8,%r15d
   136e4:	f7 d3                	not    %ebx
   136e6:	45 01 d7             	add    %r10d,%r15d
   136e9:	09 f3                	or     %esi,%ebx
   136eb:	c1 c1 0a             	rol    $0xa,%ecx
   136ee:	47 8d 94 2a a1 eb d9 	lea    0x6ed9eba1(%r10,%r13,1),%r10d
   136f5:	6e 
   136f6:	31 c3                	xor    %eax,%ebx
   136f8:	41 c1 c0 0a          	rol    $0xa,%r8d
   136fc:	44 01 db             	add    %r11d,%ebx
   136ff:	41 89 eb             	mov    %ebp,%r11d
   13702:	c1 c5 0a             	rol    $0xa,%ebp
   13705:	41 f7 d3             	not    %r11d
   13708:	c1 c3 0d             	rol    $0xd,%ebx
   1370b:	45 09 fb             	or     %r15d,%r11d
   1370e:	01 d3                	add    %edx,%ebx
   13710:	42 8d 94 32 f3 3e 70 	lea    0x6d703ef3(%rdx,%r14,1),%edx
   13717:	6d 
   13718:	44 8b 34 24          	mov    (%rsp),%r14d
   1371c:	41 31 cb             	xor    %ecx,%r11d
   1371f:	45 01 d3             	add    %r10d,%r11d
   13722:	41 89 f2             	mov    %esi,%r10d
   13725:	c1 c6 0a             	rol    $0xa,%esi
   13728:	41 f7 d2             	not    %r10d
   1372b:	41 c1 c3 0d          	rol    $0xd,%r11d
   1372f:	41 09 da             	or     %ebx,%r10d
   13732:	45 01 cb             	add    %r9d,%r11d
   13735:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
   1373c:	6e 
   1373d:	45 31 c2             	xor    %r8d,%r10d
   13740:	41 01 d2             	add    %edx,%r10d
   13743:	44 89 fa             	mov    %r15d,%edx
   13746:	41 c1 c7 0a          	rol    $0xa,%r15d
   1374a:	f7 d2                	not    %edx
   1374c:	41 c1 c2 05          	rol    $0x5,%r10d
   13750:	44 09 da             	or     %r11d,%edx
   13753:	41 01 c2             	add    %eax,%r10d
   13756:	42 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%rax,%r14,1),%eax
   1375d:	6d 
   1375e:	44 8b 74 24 1c       	mov    0x1c(%rsp),%r14d
   13763:	31 ea                	xor    %ebp,%edx
   13765:	44 01 ca             	add    %r9d,%edx
   13768:	41 89 d9             	mov    %ebx,%r9d
   1376b:	c1 c3 0a             	rol    $0xa,%ebx
   1376e:	41 f7 d1             	not    %r9d
   13771:	c1 c2 06             	rol    $0x6,%edx
   13774:	45 09 d1             	or     %r10d,%r9d
   13777:	01 ca                	add    %ecx,%edx
   13779:	42 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r14,1),%ecx
   13780:	6e 
   13781:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   13786:	41 31 f1             	xor    %esi,%r9d
   13789:	41 01 c1             	add    %eax,%r9d
   1378c:	44 89 d8             	mov    %r11d,%eax
   1378f:	41 c1 c1 0e          	rol    $0xe,%r9d
   13793:	f7 d0                	not    %eax
   13795:	45 01 c1             	add    %r8d,%r9d
   13798:	09 d0                	or     %edx,%eax
   1379a:	47 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%r8,%r14,1),%r8d
   137a1:	6d 
   137a2:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   137a7:	44 31 f8             	xor    %r15d,%eax
   137aa:	41 c1 c3 0a          	rol    $0xa,%r11d
   137ae:	01 c8                	add    %ecx,%eax
   137b0:	44 89 d1             	mov    %r10d,%ecx
   137b3:	41 c1 c2 0a          	rol    $0xa,%r10d
   137b7:	f7 d1                	not    %ecx
   137b9:	c1 c0 05             	rol    $0x5,%eax
   137bc:	44 09 c9             	or     %r9d,%ecx
   137bf:	01 e8                	add    %ebp,%eax
   137c1:	42 8d ac 35 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r14,1),%ebp
   137c8:	6e 
   137c9:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
   137ce:	31 d9                	xor    %ebx,%ecx
   137d0:	44 01 c1             	add    %r8d,%ecx
   137d3:	41 89 d0             	mov    %edx,%r8d
   137d6:	c1 c2 0a             	rol    $0xa,%edx
   137d9:	41 f7 d0             	not    %r8d
   137dc:	c1 c1 0d             	rol    $0xd,%ecx
   137df:	41 09 c0             	or     %eax,%r8d
   137e2:	01 f1                	add    %esi,%ecx
   137e4:	42 8d b4 2e f3 3e 70 	lea    0x6d703ef3(%rsi,%r13,1),%esi
   137eb:	6d 
   137ec:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   137f1:	45 31 d8             	xor    %r11d,%r8d
   137f4:	41 01 e8             	add    %ebp,%r8d
   137f7:	44 89 cd             	mov    %r9d,%ebp
   137fa:	41 c1 c1 0a          	rol    $0xa,%r9d
   137fe:	f7 d5                	not    %ebp
   13800:	41 c1 c0 0c          	rol    $0xc,%r8d
   13804:	09 cd                	or     %ecx,%ebp
   13806:	45 01 f8             	add    %r15d,%r8d
   13809:	47 8d bc 2f a1 eb d9 	lea    0x6ed9eba1(%r15,%r13,1),%r15d
   13810:	6e 
   13811:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   13816:	44 31 d5             	xor    %r10d,%ebp
   13819:	01 f5                	add    %esi,%ebp
   1381b:	89 c6                	mov    %eax,%esi
   1381d:	c1 c0 0a             	rol    $0xa,%eax
   13820:	f7 d6                	not    %esi
   13822:	c1 c5 0d             	rol    $0xd,%ebp
   13825:	44 09 c6             	or     %r8d,%esi
   13828:	01 dd                	add    %ebx,%ebp
   1382a:	42 8d 9c 33 f3 3e 70 	lea    0x6d703ef3(%rbx,%r14,1),%ebx
   13831:	6d 
   13832:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   13837:	31 d6                	xor    %edx,%esi
   13839:	44 01 fe             	add    %r15d,%esi
   1383c:	41 89 cf             	mov    %ecx,%r15d
   1383f:	41 f7 d7             	not    %r15d
   13842:	c1 c6 07             	rol    $0x7,%esi
   13845:	41 09 ef             	or     %ebp,%r15d
   13848:	44 01 de             	add    %r11d,%esi
   1384b:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
   13852:	6e 
   13853:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
   13858:	45 31 cf             	xor    %r9d,%r15d
   1385b:	41 01 df             	add    %ebx,%r15d
   1385e:	44 89 c3             	mov    %r8d,%ebx
   13861:	c1 c1 0a             	rol    $0xa,%ecx
   13864:	41 c1 c7 07          	rol    $0x7,%r15d
   13868:	f7 d3                	not    %ebx
   1386a:	41 c1 c0 0a          	rol    $0xa,%r8d
   1386e:	09 f3                	or     %esi,%ebx
   13870:	45 01 d7             	add    %r10d,%r15d
   13873:	47 8d 94 2a f3 3e 70 	lea    0x6d703ef3(%r10,%r13,1),%r10d
   1387a:	6d 
   1387b:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   13880:	31 c3                	xor    %eax,%ebx
   13882:	44 01 db             	add    %r11d,%ebx
   13885:	41 89 eb             	mov    %ebp,%r11d
   13888:	c1 c5 0a             	rol    $0xa,%ebp
   1388b:	41 f7 d3             	not    %r11d
   1388e:	c1 c3 05             	rol    $0x5,%ebx
   13891:	45 09 fb             	or     %r15d,%r11d
   13894:	01 d3                	add    %edx,%ebx
   13896:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
   1389d:	8f 
   1389e:	41 31 cb             	xor    %ecx,%r11d
   138a1:	45 01 d3             	add    %r10d,%r11d
   138a4:	41 89 f2             	mov    %esi,%r10d
   138a7:	41 31 da             	xor    %ebx,%r10d
   138aa:	41 c1 c3 05          	rol    $0x5,%r11d
   138ae:	45 21 c2             	and    %r8d,%r10d
   138b1:	45 01 cb             	add    %r9d,%r11d
   138b4:	47 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%r9,%r14,1),%r9d
   138bb:	7a 
   138bc:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   138c1:	41 31 f2             	xor    %esi,%r10d
   138c4:	c1 c6 0a             	rol    $0xa,%esi
   138c7:	41 01 d2             	add    %edx,%r10d
   138ca:	44 89 fa             	mov    %r15d,%edx
   138cd:	41 c1 c7 0a          	rol    $0xa,%r15d
   138d1:	31 ea                	xor    %ebp,%edx
   138d3:	41 c1 c2 0b          	rol    $0xb,%r10d
   138d7:	44 21 da             	and    %r11d,%edx
   138da:	41 01 c2             	add    %eax,%r10d
   138dd:	42 8d 84 30 dc bc 1b 	lea    -0x70e44324(%rax,%r14,1),%eax
   138e4:	8f 
   138e5:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   138ea:	31 ea                	xor    %ebp,%edx
   138ec:	44 01 ca             	add    %r9d,%edx
   138ef:	41 89 d9             	mov    %ebx,%r9d
   138f2:	45 31 d1             	xor    %r10d,%r9d
   138f5:	c1 c2 0f             	rol    $0xf,%edx
   138f8:	41 21 f1             	and    %esi,%r9d
   138fb:	01 ca                	add    %ecx,%edx
   138fd:	42 8d 8c 21 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r12,1),%ecx
   13904:	7a 
   13905:	41 31 d9             	xor    %ebx,%r9d
   13908:	c1 c3 0a             	rol    $0xa,%ebx
   1390b:	41 01 c1             	add    %eax,%r9d
   1390e:	44 89 d8             	mov    %r11d,%eax
   13911:	41 c1 c3 0a          	rol    $0xa,%r11d
   13915:	44 31 f8             	xor    %r15d,%eax
   13918:	41 c1 c1 0c          	rol    $0xc,%r9d
   1391c:	21 d0                	and    %edx,%eax
   1391e:	45 01 c1             	add    %r8d,%r9d
   13921:	47 8d 84 30 dc bc 1b 	lea    -0x70e44324(%r8,%r14,1),%r8d
   13928:	8f 
   13929:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
   1392e:	44 31 f8             	xor    %r15d,%eax
   13931:	01 c8                	add    %ecx,%eax
   13933:	44 89 d1             	mov    %r10d,%ecx
   13936:	44 31 c9             	xor    %r9d,%ecx
   13939:	c1 c0 05             	rol    $0x5,%eax
   1393c:	21 d9                	and    %ebx,%ecx
   1393e:	01 e8                	add    %ebp,%eax
   13940:	42 8d ac 35 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r14,1),%ebp
   13947:	7a 
   13948:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   1394d:	44 31 d1             	xor    %r10d,%ecx
   13950:	41 c1 c2 0a          	rol    $0xa,%r10d
   13954:	44 01 c1             	add    %r8d,%ecx
   13957:	41 89 d0             	mov    %edx,%r8d
   1395a:	c1 c2 0a             	rol    $0xa,%edx
   1395d:	45 31 d8             	xor    %r11d,%r8d
   13960:	c1 c1 0e             	rol    $0xe,%ecx
   13963:	41 21 c0             	and    %eax,%r8d
   13966:	01 f1                	add    %esi,%ecx
   13968:	42 8d b4 36 dc bc 1b 	lea    -0x70e44324(%rsi,%r14,1),%esi
   1396f:	8f 
   13970:	45 31 d8             	xor    %r11d,%r8d
   13973:	41 01 e8             	add    %ebp,%r8d
   13976:	44 89 cd             	mov    %r9d,%ebp
   13979:	31 cd                	xor    %ecx,%ebp
   1397b:	41 c1 c0 08          	rol    $0x8,%r8d
   1397f:	44 21 d5             	and    %r10d,%ebp
   13982:	45 01 f8             	add    %r15d,%r8d
   13985:	47 8d bc 2f e9 76 6d 	lea    0x7a6d76e9(%r15,%r13,1),%r15d
   1398c:	7a 
   1398d:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   13992:	44 31 cd             	xor    %r9d,%ebp
   13995:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   1399a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
   1399f:	01 f5                	add    %esi,%ebp
   139a1:	89 c6                	mov    %eax,%esi
   139a3:	c1 c5 0f             	rol    $0xf,%ebp
   139a6:	01 dd                	add    %ebx,%ebp
   139a8:	41 c1 c1 0a          	rol    $0xa,%r9d
   139ac:	31 d6                	xor    %edx,%esi
   139ae:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
   139b5:	8f 
   139b6:	44 21 c6             	and    %r8d,%esi
   139b9:	c1 c0 0a             	rol    $0xa,%eax
   139bc:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   139c1:	31 d6                	xor    %edx,%esi
   139c3:	44 01 fe             	add    %r15d,%esi
   139c6:	41 89 cf             	mov    %ecx,%r15d
   139c9:	41 31 ef             	xor    %ebp,%r15d
   139cc:	c1 c6 0b             	rol    $0xb,%esi
   139cf:	45 21 cf             	and    %r9d,%r15d
   139d2:	44 01 de             	add    %r11d,%esi
   139d5:	47 8d 9c 23 e9 76 6d 	lea    0x7a6d76e9(%r11,%r12,1),%r11d
   139dc:	7a 
   139dd:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   139e2:	41 31 cf             	xor    %ecx,%r15d
   139e5:	c1 c1 0a             	rol    $0xa,%ecx
   139e8:	41 01 df             	add    %ebx,%r15d
   139eb:	44 89 c3             	mov    %r8d,%ebx
   139ee:	41 c1 c0 0a          	rol    $0xa,%r8d
   139f2:	31 c3                	xor    %eax,%ebx
   139f4:	41 c1 c7 0e          	rol    $0xe,%r15d
   139f8:	21 f3                	and    %esi,%ebx
   139fa:	45 01 d7             	add    %r10d,%r15d
   139fd:	47 8d 94 32 dc bc 1b 	lea    -0x70e44324(%r10,%r14,1),%r10d
   13a04:	8f 
   13a05:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   13a0a:	31 c3                	xor    %eax,%ebx
   13a0c:	44 01 db             	add    %r11d,%ebx
   13a0f:	41 89 eb             	mov    %ebp,%r11d
   13a12:	45 31 fb             	xor    %r15d,%r11d
   13a15:	c1 c3 0e             	rol    $0xe,%ebx
   13a18:	41 21 cb             	and    %ecx,%r11d
   13a1b:	01 d3                	add    %edx,%ebx
   13a1d:	42 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%rdx,%r14,1),%edx
   13a24:	7a 
   13a25:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   13a2a:	41 31 eb             	xor    %ebp,%r11d
   13a2d:	c1 c5 0a             	rol    $0xa,%ebp
   13a30:	45 01 d3             	add    %r10d,%r11d
   13a33:	41 89 f2             	mov    %esi,%r10d
   13a36:	45 31 c2             	xor    %r8d,%r10d
   13a39:	41 c1 c3 0f          	rol    $0xf,%r11d
   13a3d:	41 21 da             	and    %ebx,%r10d
   13a40:	45 01 cb             	add    %r9d,%r11d
   13a43:	47 8d 8c 31 dc bc 1b 	lea    -0x70e44324(%r9,%r14,1),%r9d
   13a4a:	8f 
   13a4b:	45 31 c2             	xor    %r8d,%r10d
   13a4e:	41 01 d2             	add    %edx,%r10d
   13a51:	44 89 fa             	mov    %r15d,%edx
   13a54:	c1 c6 0a             	rol    $0xa,%esi
   13a57:	44 31 da             	xor    %r11d,%edx
   13a5a:	41 c1 c2 0e          	rol    $0xe,%r10d
   13a5e:	21 ea                	and    %ebp,%edx
   13a60:	41 01 c2             	add    %eax,%r10d
   13a63:	42 8d 84 20 e9 76 6d 	lea    0x7a6d76e9(%rax,%r12,1),%eax
   13a6a:	7a 
   13a6b:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   13a70:	44 31 fa             	xor    %r15d,%edx
   13a73:	41 c1 c7 0a          	rol    $0xa,%r15d
   13a77:	44 01 ca             	add    %r9d,%edx
   13a7a:	41 89 d9             	mov    %ebx,%r9d
   13a7d:	c1 c3 0a             	rol    $0xa,%ebx
   13a80:	41 31 f1             	xor    %esi,%r9d
   13a83:	c1 c2 09             	rol    $0x9,%edx
   13a86:	45 21 d1             	and    %r10d,%r9d
   13a89:	01 ca                	add    %ecx,%edx
   13a8b:	42 8d 8c 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%ecx
   13a92:	8f 
   13a93:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   13a98:	41 31 f1             	xor    %esi,%r9d
   13a9b:	41 01 c1             	add    %eax,%r9d
   13a9e:	44 89 d8             	mov    %r11d,%eax
   13aa1:	31 d0                	xor    %edx,%eax
   13aa3:	41 c1 c1 06          	rol    $0x6,%r9d
   13aa7:	44 21 f8             	and    %r15d,%eax
   13aaa:	45 01 c1             	add    %r8d,%r9d
   13aad:	47 8d 84 28 e9 76 6d 	lea    0x7a6d76e9(%r8,%r13,1),%r8d
   13ab4:	7a 
   13ab5:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   13aba:	44 31 d8             	xor    %r11d,%eax
   13abd:	41 c1 c3 0a          	rol    $0xa,%r11d
   13ac1:	01 c8                	add    %ecx,%eax
   13ac3:	44 89 d1             	mov    %r10d,%ecx
   13ac6:	41 c1 c2 0a          	rol    $0xa,%r10d
   13aca:	31 d9                	xor    %ebx,%ecx
   13acc:	c1 c0 08             	rol    $0x8,%eax
   13acf:	44 21 c9             	and    %r9d,%ecx
   13ad2:	01 e8                	add    %ebp,%eax
   13ad4:	42 8d ac 2d dc bc 1b 	lea    -0x70e44324(%rbp,%r13,1),%ebp
   13adb:	8f 
   13adc:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   13ae1:	31 d9                	xor    %ebx,%ecx
   13ae3:	44 01 c1             	add    %r8d,%ecx
   13ae6:	41 89 d0             	mov    %edx,%r8d
   13ae9:	c1 c1 0e             	rol    $0xe,%ecx
   13aec:	01 f1                	add    %esi,%ecx
   13aee:	41 31 c0             	xor    %eax,%r8d
   13af1:	42 8d b4 2e e9 76 6d 	lea    0x7a6d76e9(%rsi,%r13,1),%esi
   13af8:	7a 
   13af9:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   13afe:	45 21 d8             	and    %r11d,%r8d
   13b01:	41 31 d0             	xor    %edx,%r8d
   13b04:	c1 c2 0a             	rol    $0xa,%edx
   13b07:	41 01 e8             	add    %ebp,%r8d
   13b0a:	44 89 cd             	mov    %r9d,%ebp
   13b0d:	41 c1 c1 0a          	rol    $0xa,%r9d
   13b11:	44 31 d5             	xor    %r10d,%ebp
   13b14:	41 c1 c0 09          	rol    $0x9,%r8d
   13b18:	21 cd                	and    %ecx,%ebp
   13b1a:	45 01 f8             	add    %r15d,%r8d
   13b1d:	47 8d bc 27 dc bc 1b 	lea    -0x70e44324(%r15,%r12,1),%r15d
   13b24:	8f 
   13b25:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   13b2a:	44 31 d5             	xor    %r10d,%ebp
   13b2d:	01 f5                	add    %esi,%ebp
   13b2f:	89 c6                	mov    %eax,%esi
   13b31:	44 31 c6             	xor    %r8d,%esi
   13b34:	c1 c5 06             	rol    $0x6,%ebp
   13b37:	21 d6                	and    %edx,%esi
   13b39:	01 dd                	add    %ebx,%ebp
   13b3b:	42 8d 9c 33 e9 76 6d 	lea    0x7a6d76e9(%rbx,%r14,1),%ebx
   13b42:	7a 
   13b43:	44 8b 34 24          	mov    (%rsp),%r14d
   13b47:	31 c6                	xor    %eax,%esi
   13b49:	c1 c0 0a             	rol    $0xa,%eax
   13b4c:	44 01 fe             	add    %r15d,%esi
   13b4f:	41 89 cf             	mov    %ecx,%r15d
   13b52:	c1 c1 0a             	rol    $0xa,%ecx
   13b55:	45 31 cf             	xor    %r9d,%r15d
   13b58:	c1 c6 0e             	rol    $0xe,%esi
   13b5b:	41 21 ef             	and    %ebp,%r15d
   13b5e:	44 01 de             	add    %r11d,%esi
   13b61:	47 8d 9c 23 dc bc 1b 	lea    -0x70e44324(%r11,%r12,1),%r11d
   13b68:	8f 
   13b69:	45 31 cf             	xor    %r9d,%r15d
   13b6c:	41 01 df             	add    %ebx,%r15d
   13b6f:	44 89 c3             	mov    %r8d,%ebx
   13b72:	31 f3                	xor    %esi,%ebx
   13b74:	41 c1 c7 09          	rol    $0x9,%r15d
   13b78:	21 c3                	and    %eax,%ebx
   13b7a:	45 01 d7             	add    %r10d,%r15d
   13b7d:	47 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%r10,%r14,1),%r10d
   13b84:	7a 
   13b85:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   13b8a:	44 31 c3             	xor    %r8d,%ebx
   13b8d:	44 01 db             	add    %r11d,%ebx
   13b90:	41 89 eb             	mov    %ebp,%r11d
   13b93:	c1 c3 05             	rol    $0x5,%ebx
   13b96:	41 31 cb             	xor    %ecx,%r11d
   13b99:	41 c1 c0 0a          	rol    $0xa,%r8d
   13b9d:	45 21 fb             	and    %r15d,%r11d
   13ba0:	01 d3                	add    %edx,%ebx
   13ba2:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
   13ba9:	8f 
   13baa:	c1 c5 0a             	rol    $0xa,%ebp
   13bad:	41 31 cb             	xor    %ecx,%r11d
   13bb0:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   13bb5:	45 01 d3             	add    %r10d,%r11d
   13bb8:	41 89 f2             	mov    %esi,%r10d
   13bbb:	41 31 da             	xor    %ebx,%r10d
   13bbe:	41 c1 c3 0c          	rol    $0xc,%r11d
   13bc2:	45 21 c2             	and    %r8d,%r10d
   13bc5:	45 01 cb             	add    %r9d,%r11d
   13bc8:	47 8d 8c 29 e9 76 6d 	lea    0x7a6d76e9(%r9,%r13,1),%r9d
   13bcf:	7a 
   13bd0:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
   13bd5:	41 31 f2             	xor    %esi,%r10d
   13bd8:	c1 c6 0a             	rol    $0xa,%esi
   13bdb:	41 01 d2             	add    %edx,%r10d
   13bde:	44 89 fa             	mov    %r15d,%edx
   13be1:	41 c1 c7 0a          	rol    $0xa,%r15d
   13be5:	31 ea                	xor    %ebp,%edx
   13be7:	41 c1 c2 06          	rol    $0x6,%r10d
   13beb:	44 21 da             	and    %r11d,%edx
   13bee:	41 01 c2             	add    %eax,%r10d
   13bf1:	42 8d 84 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%eax
   13bf8:	8f 
   13bf9:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   13bfe:	31 ea                	xor    %ebp,%edx
   13c00:	44 01 ca             	add    %r9d,%edx
   13c03:	41 89 d9             	mov    %ebx,%r9d
   13c06:	45 31 d1             	xor    %r10d,%r9d
   13c09:	c1 c2 09             	rol    $0x9,%edx
   13c0c:	41 21 f1             	and    %esi,%r9d
   13c0f:	01 ca                	add    %ecx,%edx
   13c11:	42 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r14,1),%ecx
   13c18:	7a 
   13c19:	41 31 d9             	xor    %ebx,%r9d
   13c1c:	c1 c3 0a             	rol    $0xa,%ebx
   13c1f:	41 01 c1             	add    %eax,%r9d
   13c22:	44 89 d8             	mov    %r11d,%eax
   13c25:	41 c1 c1 08          	rol    $0x8,%r9d
   13c29:	44 31 f8             	xor    %r15d,%eax
   13c2c:	45 01 c1             	add    %r8d,%r9d
   13c2f:	21 d0                	and    %edx,%eax
   13c31:	47 8d 84 28 dc bc 1b 	lea    -0x70e44324(%r8,%r13,1),%r8d
   13c38:	8f 
   13c39:	41 c1 c3 0a          	rol    $0xa,%r11d
   13c3d:	44 31 f8             	xor    %r15d,%eax
   13c40:	44 8b 2c 24          	mov    (%rsp),%r13d
   13c44:	01 c8                	add    %ecx,%eax
   13c46:	44 89 d1             	mov    %r10d,%ecx
   13c49:	44 31 c9             	xor    %r9d,%ecx
   13c4c:	c1 c0 0c             	rol    $0xc,%eax
   13c4f:	21 d9                	and    %ebx,%ecx
   13c51:	01 e8                	add    %ebp,%eax
   13c53:	42 8d ac 25 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r12,1),%ebp
   13c5a:	7a 
   13c5b:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   13c60:	44 31 d1             	xor    %r10d,%ecx
   13c63:	41 c1 c2 0a          	rol    $0xa,%r10d
   13c67:	44 01 c1             	add    %r8d,%ecx
   13c6a:	41 89 d0             	mov    %edx,%r8d
   13c6d:	c1 c2 0a             	rol    $0xa,%edx
   13c70:	45 31 d8             	xor    %r11d,%r8d
   13c73:	c1 c1 06             	rol    $0x6,%ecx
   13c76:	41 21 c0             	and    %eax,%r8d
   13c79:	01 f1                	add    %esi,%ecx
   13c7b:	42 8d b4 26 dc bc 1b 	lea    -0x70e44324(%rsi,%r12,1),%esi
   13c82:	8f 
   13c83:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   13c88:	45 31 d8             	xor    %r11d,%r8d
   13c8b:	41 01 e8             	add    %ebp,%r8d
   13c8e:	44 89 cd             	mov    %r9d,%ebp
   13c91:	31 cd                	xor    %ecx,%ebp
   13c93:	41 c1 c0 05          	rol    $0x5,%r8d
   13c97:	44 21 d5             	and    %r10d,%ebp
   13c9a:	45 01 f8             	add    %r15d,%r8d
   13c9d:	47 8d bc 27 e9 76 6d 	lea    0x7a6d76e9(%r15,%r12,1),%r15d
   13ca4:	7a 
   13ca5:	44 31 cd             	xor    %r9d,%ebp
   13ca8:	41 c1 c1 0a          	rol    $0xa,%r9d
   13cac:	01 f5                	add    %esi,%ebp
   13cae:	89 c6                	mov    %eax,%esi
   13cb0:	31 d6                	xor    %edx,%esi
   13cb2:	c1 c5 05             	rol    $0x5,%ebp
   13cb5:	44 21 c6             	and    %r8d,%esi
   13cb8:	01 dd                	add    %ebx,%ebp
   13cba:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
   13cc1:	8f 
   13cc2:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
   13cc7:	31 d6                	xor    %edx,%esi
   13cc9:	44 01 fe             	add    %r15d,%esi
   13ccc:	41 89 cf             	mov    %ecx,%r15d
   13ccf:	c1 c6 0f             	rol    $0xf,%esi
   13cd2:	44 01 de             	add    %r11d,%esi
   13cd5:	41 31 ef             	xor    %ebp,%r15d
   13cd8:	c1 c0 0a             	rol    $0xa,%eax
   13cdb:	47 8d 9c 2b e9 76 6d 	lea    0x7a6d76e9(%r11,%r13,1),%r11d
   13ce2:	7a 
   13ce3:	45 21 cf             	and    %r9d,%r15d
   13ce6:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
   13ceb:	41 31 cf             	xor    %ecx,%r15d
   13cee:	c1 c1 0a             	rol    $0xa,%ecx
   13cf1:	44 01 fb             	add    %r15d,%ebx
   13cf4:	41 89 cf             	mov    %ecx,%r15d
   13cf7:	44 89 c1             	mov    %r8d,%ecx
   13cfa:	41 c1 c0 0a          	rol    $0xa,%r8d
   13cfe:	31 c1                	xor    %eax,%ecx
   13d00:	c1 c3 0c             	rol    $0xc,%ebx
   13d03:	21 f1                	and    %esi,%ecx
   13d05:	44 01 d3             	add    %r10d,%ebx
   13d08:	47 8d 94 2a 4e fd 53 	lea    -0x56ac02b2(%r10,%r13,1),%r10d
   13d0f:	a9 
   13d10:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   13d15:	31 c1                	xor    %eax,%ecx
   13d17:	44 01 d9             	add    %r11d,%ecx
   13d1a:	45 89 fb             	mov    %r15d,%r11d
   13d1d:	41 f7 d3             	not    %r11d
   13d20:	c1 c1 08             	rol    $0x8,%ecx
   13d23:	41 09 eb             	or     %ebp,%r11d
   13d26:	01 d1                	add    %edx,%ecx
   13d28:	c1 c5 0a             	rol    $0xa,%ebp
   13d2b:	03 54 24 18          	add    0x18(%rsp),%edx
   13d2f:	41 31 db             	xor    %ebx,%r11d
   13d32:	45 01 da             	add    %r11d,%r10d
   13d35:	41 89 f3             	mov    %esi,%r11d
   13d38:	c1 c6 0a             	rol    $0xa,%esi
   13d3b:	45 31 c3             	xor    %r8d,%r11d
   13d3e:	41 c1 c2 09          	rol    $0x9,%r10d
   13d42:	41 31 cb             	xor    %ecx,%r11d
   13d45:	45 01 ca             	add    %r9d,%r10d
   13d48:	47 8d 8c 29 4e fd 53 	lea    -0x56ac02b2(%r9,%r13,1),%r9d
   13d4f:	a9 
   13d50:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   13d55:	44 01 da             	add    %r11d,%edx
   13d58:	41 89 eb             	mov    %ebp,%r11d
   13d5b:	41 f7 d3             	not    %r11d
   13d5e:	c1 c2 08             	rol    $0x8,%edx
   13d61:	41 09 db             	or     %ebx,%r11d
   13d64:	01 c2                	add    %eax,%edx
   13d66:	45 31 d3             	xor    %r10d,%r11d
   13d69:	45 01 d9             	add    %r11d,%r9d
   13d6c:	41 89 cb             	mov    %ecx,%r11d
   13d6f:	41 c1 c1 0f          	rol    $0xf,%r9d
   13d73:	41 31 f3             	xor    %esi,%r11d
   13d76:	c1 c3 0a             	rol    $0xa,%ebx
   13d79:	03 44 24 20          	add    0x20(%rsp),%eax
   13d7d:	41 31 d3             	xor    %edx,%r11d
   13d80:	45 01 f9             	add    %r15d,%r9d
   13d83:	47 8d bc 2f 4e fd 53 	lea    -0x56ac02b2(%r15,%r13,1),%r15d
   13d8a:	a9 
   13d8b:	c1 c1 0a             	rol    $0xa,%ecx
   13d8e:	41 01 c3             	add    %eax,%r11d
   13d91:	89 d8                	mov    %ebx,%eax
   13d93:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   13d98:	f7 d0                	not    %eax
   13d9a:	41 c1 c3 05          	rol    $0x5,%r11d
   13d9e:	44 09 d0             	or     %r10d,%eax
   13da1:	45 01 c3             	add    %r8d,%r11d
   13da4:	41 c1 c2 0a          	rol    $0xa,%r10d
   13da8:	45 01 e0             	add    %r12d,%r8d
   13dab:	44 31 c8             	xor    %r9d,%eax
   13dae:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   13db3:	41 01 c7             	add    %eax,%r15d
   13db6:	89 d0                	mov    %edx,%eax
   13db8:	c1 c2 0a             	rol    $0xa,%edx
   13dbb:	31 c8                	xor    %ecx,%eax
   13dbd:	41 c1 c7 05          	rol    $0x5,%r15d
   13dc1:	44 31 d8             	xor    %r11d,%eax
   13dc4:	41 01 ef             	add    %ebp,%r15d
   13dc7:	42 8d ac 35 4e fd 53 	lea    -0x56ac02b2(%rbp,%r14,1),%ebp
   13dce:	a9 
   13dcf:	41 01 c0             	add    %eax,%r8d
   13dd2:	44 89 d0             	mov    %r10d,%eax
   13dd5:	f7 d0                	not    %eax
   13dd7:	41 c1 c0 0c          	rol    $0xc,%r8d
   13ddb:	44 09 c8             	or     %r9d,%eax
   13dde:	41 01 f0             	add    %esi,%r8d
   13de1:	41 c1 c1 0a          	rol    $0xa,%r9d
   13de5:	03 74 24 04          	add    0x4(%rsp),%esi
   13de9:	44 31 f8             	xor    %r15d,%eax
   13dec:	01 c5                	add    %eax,%ebp
   13dee:	44 89 d8             	mov    %r11d,%eax
   13df1:	31 d0                	xor    %edx,%eax
   13df3:	c1 c5 0b             	rol    $0xb,%ebp
   13df6:	44 31 c0             	xor    %r8d,%eax
   13df9:	01 dd                	add    %ebx,%ebp
   13dfb:	01 c6                	add    %eax,%esi
   13dfd:	44 89 c8             	mov    %r9d,%eax
   13e00:	41 c1 c3 0a          	rol    $0xa,%r11d
   13e04:	f7 d0                	not    %eax
   13e06:	c1 c6 09             	rol    $0x9,%esi
   13e09:	41 89 c6             	mov    %eax,%r14d
   13e0c:	42 8d 84 23 4e fd 53 	lea    -0x56ac02b2(%rbx,%r12,1),%eax
   13e13:	a9 
   13e14:	44 89 c3             	mov    %r8d,%ebx
   13e17:	01 ce                	add    %ecx,%esi
   13e19:	45 09 fe             	or     %r15d,%r14d
   13e1c:	44 31 db             	xor    %r11d,%ebx
   13e1f:	41 c1 c7 0a          	rol    $0xa,%r15d
   13e23:	44 01 e9             	add    %r13d,%ecx
   13e26:	41 31 ee             	xor    %ebp,%r14d
   13e29:	41 c1 c0 0a          	rol    $0xa,%r8d
   13e2d:	41 01 c6             	add    %eax,%r14d
   13e30:	89 d8                	mov    %ebx,%eax
   13e32:	44 89 fb             	mov    %r15d,%ebx
   13e35:	31 f0                	xor    %esi,%eax
   13e37:	41 c1 c6 06          	rol    $0x6,%r14d
   13e3b:	f7 d3                	not    %ebx
   13e3d:	01 c1                	add    %eax,%ecx
   13e3f:	8b 44 24 18          	mov    0x18(%rsp),%eax
   13e43:	45 01 d6             	add    %r10d,%r14d
   13e46:	09 eb                	or     %ebp,%ebx
   13e48:	c1 c1 0c             	rol    $0xc,%ecx
   13e4b:	44 31 f3             	xor    %r14d,%ebx
   13e4e:	c1 c5 0a             	rol    $0xa,%ebp
   13e51:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
   13e58:	a9 
   13e59:	41 89 f2             	mov    %esi,%r10d
   13e5c:	01 d1                	add    %edx,%ecx
   13e5e:	c1 c6 0a             	rol    $0xa,%esi
   13e61:	45 31 c2             	xor    %r8d,%r10d
   13e64:	01 c3                	add    %eax,%ebx
   13e66:	03 54 24 08          	add    0x8(%rsp),%edx
   13e6a:	44 89 d0             	mov    %r10d,%eax
   13e6d:	41 89 ea             	mov    %ebp,%r10d
   13e70:	c1 c3 08             	rol    $0x8,%ebx
   13e73:	31 c8                	xor    %ecx,%eax
   13e75:	41 f7 d2             	not    %r10d
   13e78:	44 01 cb             	add    %r9d,%ebx
   13e7b:	01 c2                	add    %eax,%edx
   13e7d:	8b 04 24             	mov    (%rsp),%eax
   13e80:	45 09 f2             	or     %r14d,%r10d
   13e83:	c1 c2 05             	rol    $0x5,%edx
   13e86:	41 31 da             	xor    %ebx,%r10d
   13e89:	41 8d 84 01 4e fd 53 	lea    -0x56ac02b2(%r9,%rax,1),%eax
   13e90:	a9 
   13e91:	41 89 c9             	mov    %ecx,%r9d
   13e94:	44 01 da             	add    %r11d,%edx
   13e97:	41 01 c2             	add    %eax,%r10d
   13e9a:	41 31 f1             	xor    %esi,%r9d
   13e9d:	41 c1 c6 0a          	rol    $0xa,%r14d
   13ea1:	44 03 5c 24 0c       	add    0xc(%rsp),%r11d
   13ea6:	41 c1 c2 0d          	rol    $0xd,%r10d
   13eaa:	44 89 c8             	mov    %r9d,%eax
   13ead:	45 89 f1             	mov    %r14d,%r9d
   13eb0:	c1 c1 0a             	rol    $0xa,%ecx
   13eb3:	31 d0                	xor    %edx,%eax
   13eb5:	41 f7 d1             	not    %r9d
   13eb8:	45 01 fa             	add    %r15d,%r10d
   13ebb:	41 01 c3             	add    %eax,%r11d
   13ebe:	8b 44 24 10          	mov    0x10(%rsp),%eax
   13ec2:	41 09 d9             	or     %ebx,%r9d
   13ec5:	c1 c3 0a             	rol    $0xa,%ebx
   13ec8:	45 31 d1             	xor    %r10d,%r9d
   13ecb:	41 c1 c3 0e          	rol    $0xe,%r11d
   13ecf:	41 8d 84 07 4e fd 53 	lea    -0x56ac02b2(%r15,%rax,1),%eax
   13ed6:	a9 
   13ed7:	41 89 df             	mov    %ebx,%r15d
   13eda:	45 01 c3             	add    %r8d,%r11d
   13edd:	45 01 e0             	add    %r12d,%r8d
   13ee0:	41 01 c1             	add    %eax,%r9d
   13ee3:	41 f7 d7             	not    %r15d
   13ee6:	89 d0                	mov    %edx,%eax
   13ee8:	c1 c2 0a             	rol    $0xa,%edx
   13eeb:	31 c8                	xor    %ecx,%eax
   13eed:	41 c1 c1 0c          	rol    $0xc,%r9d
   13ef1:	45 89 fc             	mov    %r15d,%r12d
   13ef4:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
   13ef9:	41 01 e9             	add    %ebp,%r9d
   13efc:	44 31 d8             	xor    %r11d,%eax
   13eff:	45 09 d4             	or     %r10d,%r12d
   13f02:	41 c1 c2 0a          	rol    $0xa,%r10d
   13f06:	41 01 c0             	add    %eax,%r8d
   13f09:	45 31 cc             	xor    %r9d,%r12d
   13f0c:	42 8d 84 3d 4e fd 53 	lea    -0x56ac02b2(%rbp,%r15,1),%eax
   13f13:	a9 
   13f14:	44 89 dd             	mov    %r11d,%ebp
   13f17:	41 01 c4             	add    %eax,%r12d
   13f1a:	41 c1 c0 06          	rol    $0x6,%r8d
   13f1e:	31 d5                	xor    %edx,%ebp
   13f20:	44 8b 7c 24 38       	mov    0x38(%rsp),%r15d
   13f25:	41 01 f0             	add    %esi,%r8d
   13f28:	41 c1 c4 05          	rol    $0x5,%r12d
   13f2c:	43 8d 84 2e 4e fd 53 	lea    -0x56ac02b2(%r14,%r13,1),%eax
   13f33:	a9 
   13f34:	45 01 f4             	add    %r14d,%r12d
   13f37:	44 31 c5             	xor    %r8d,%ebp
   13f3a:	03 74 24 38          	add    0x38(%rsp),%esi
   13f3e:	41 c1 c3 0a          	rol    $0xa,%r11d
   13f42:	01 ee                	add    %ebp,%esi
   13f44:	44 89 d5             	mov    %r10d,%ebp
   13f47:	44 8b 74 24 24       	mov    0x24(%rsp),%r14d
   13f4c:	f7 d5                	not    %ebp
   13f4e:	c1 c6 08             	rol    $0x8,%esi
   13f51:	44 09 cd             	or     %r9d,%ebp
   13f54:	01 ce                	add    %ecx,%esi
   13f56:	41 c1 c1 0a          	rol    $0xa,%r9d
   13f5a:	03 0c 24             	add    (%rsp),%ecx
   13f5d:	44 31 e5             	xor    %r12d,%ebp
   13f60:	01 c5                	add    %eax,%ebp
   13f62:	44 89 c0             	mov    %r8d,%eax
   13f65:	41 c1 c0 0a          	rol    $0xa,%r8d
   13f69:	44 31 d8             	xor    %r11d,%eax
   13f6c:	c1 c5 0c             	rol    $0xc,%ebp
   13f6f:	31 f0                	xor    %esi,%eax
   13f71:	01 dd                	add    %ebx,%ebp
   13f73:	01 c1                	add    %eax,%ecx
   13f75:	44 89 c8             	mov    %r9d,%eax
   13f78:	f7 d0                	not    %eax
   13f7a:	c1 c1 0d             	rol    $0xd,%ecx
   13f7d:	41 89 c5             	mov    %eax,%r13d
   13f80:	42 8d 84 33 4e fd 53 	lea    -0x56ac02b2(%rbx,%r14,1),%eax
   13f87:	a9 
   13f88:	89 f3                	mov    %esi,%ebx
   13f8a:	01 d1                	add    %edx,%ecx
   13f8c:	45 09 e5             	or     %r12d,%r13d
   13f8f:	44 31 c3             	xor    %r8d,%ebx
   13f92:	41 c1 c4 0a          	rol    $0xa,%r12d
   13f96:	03 54 24 1c          	add    0x1c(%rsp),%edx
   13f9a:	31 cb                	xor    %ecx,%ebx
   13f9c:	41 31 ed             	xor    %ebp,%r13d
   13f9f:	c1 c6 0a             	rol    $0xa,%esi
   13fa2:	41 01 c5             	add    %eax,%r13d
   13fa5:	01 da                	add    %ebx,%edx
   13fa7:	44 89 e3             	mov    %r12d,%ebx
   13faa:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13fae:	41 c1 c5 0d          	rol    $0xd,%r13d
   13fb2:	f7 d3                	not    %ebx
   13fb4:	c1 c2 06             	rol    $0x6,%edx
   13fb7:	45 01 d5             	add    %r10d,%r13d
   13fba:	09 eb                	or     %ebp,%ebx
   13fbc:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
   13fc3:	a9 
   13fc4:	44 01 da             	add    %r11d,%edx
   13fc7:	44 31 eb             	xor    %r13d,%ebx
   13fca:	c1 c5 0a             	rol    $0xa,%ebp
   13fcd:	44 03 5c 24 28       	add    0x28(%rsp),%r11d
   13fd2:	01 c3                	add    %eax,%ebx
   13fd4:	89 c8                	mov    %ecx,%eax
   13fd6:	41 89 ea             	mov    %ebp,%r10d
   13fd9:	c1 c1 0a             	rol    $0xa,%ecx
   13fdc:	31 f0                	xor    %esi,%eax
   13fde:	41 f7 d2             	not    %r10d
   13fe1:	c1 c3 0e             	rol    $0xe,%ebx
   13fe4:	31 d0                	xor    %edx,%eax
   13fe6:	44 01 cb             	add    %r9d,%ebx
   13fe9:	41 01 c3             	add    %eax,%r11d
   13fec:	44 89 d0             	mov    %r10d,%eax
   13fef:	44 8b 54 24 14       	mov    0x14(%rsp),%r10d
   13ff4:	44 09 e8             	or     %r13d,%eax
   13ff7:	41 c1 c5 0a          	rol    $0xa,%r13d
   13ffb:	31 d8                	xor    %ebx,%eax
   13ffd:	47 8d 8c 11 4e fd 53 	lea    -0x56ac02b2(%r9,%r10,1),%r9d
   14004:	a9 
   14005:	41 c1 c3 05          	rol    $0x5,%r11d
   14009:	41 89 d2             	mov    %edx,%r10d
   1400c:	41 01 c1             	add    %eax,%r9d
   1400f:	44 89 e8             	mov    %r13d,%eax
   14012:	45 01 c3             	add    %r8d,%r11d
   14015:	41 31 ca             	xor    %ecx,%r10d
   14018:	41 c1 c1 0b          	rol    $0xb,%r9d
   1401c:	f7 d0                	not    %eax
   1401e:	44 03 44 24 2c       	add    0x2c(%rsp),%r8d
   14023:	45 31 da             	xor    %r11d,%r10d
   14026:	45 01 e1             	add    %r12d,%r9d
   14029:	09 d8                	or     %ebx,%eax
   1402b:	45 01 c2             	add    %r8d,%r10d
   1402e:	c1 c2 0a             	rol    $0xa,%edx
   14031:	41 c1 c2 0f          	rol    $0xf,%r10d
   14035:	44 31 c8             	xor    %r9d,%eax
   14038:	45 89 d8             	mov    %r11d,%r8d
   1403b:	c1 c3 0a             	rol    $0xa,%ebx
   1403e:	47 8d a4 3c 4e fd 53 	lea    -0x56ac02b2(%r12,%r15,1),%r12d
   14045:	a9 
   14046:	41 01 f2             	add    %esi,%r10d
   14049:	41 31 d0             	xor    %edx,%r8d
   1404c:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   14051:	41 01 c4             	add    %eax,%r12d
   14054:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   14058:	41 c1 c4 08          	rol    $0x8,%r12d
   1405c:	41 01 ec             	add    %ebp,%r12d
   1405f:	45 31 d0             	xor    %r10d,%r8d
   14062:	44 01 f6             	add    %r14d,%esi
   14065:	41 c1 c3 0a          	rol    $0xa,%r11d
   14069:	44 01 c6             	add    %r8d,%esi
   1406c:	41 89 d8             	mov    %ebx,%r8d
   1406f:	44 89 5c 24 54       	mov    %r11d,0x54(%rsp)
   14074:	41 f7 d0             	not    %r8d
   14077:	c1 c6 0d             	rol    $0xd,%esi
   1407a:	45 89 c6             	mov    %r8d,%r14d
   1407d:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
   14082:	01 ce                	add    %ecx,%esi
   14084:	03 4c 24 3c          	add    0x3c(%rsp),%ecx
   14088:	45 09 ce             	or     %r9d,%r14d
   1408b:	41 c1 c1 0a          	rol    $0xa,%r9d
   1408f:	42 8d 84 05 4e fd 53 	lea    -0x56ac02b2(%rbp,%r8,1),%eax
   14096:	a9 
   14097:	45 89 d0             	mov    %r10d,%r8d
   1409a:	45 31 e6             	xor    %r12d,%r14d
   1409d:	41 c1 c2 0a          	rol    $0xa,%r10d
   140a1:	45 31 d8             	xor    %r11d,%r8d
   140a4:	41 01 c6             	add    %eax,%r14d
   140a7:	44 89 c8             	mov    %r9d,%eax
   140aa:	44 89 54 24 64       	mov    %r10d,0x64(%rsp)
   140af:	41 31 f0             	xor    %esi,%r8d
   140b2:	41 c1 c6 05          	rol    $0x5,%r14d
   140b6:	f7 d0                	not    %eax
   140b8:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
   140bd:	44 01 c1             	add    %r8d,%ecx
   140c0:	41 89 f0             	mov    %esi,%r8d
   140c3:	45 01 ee             	add    %r13d,%r14d
   140c6:	44 09 e0             	or     %r12d,%eax
   140c9:	c1 c1 0b             	rol    $0xb,%ecx
   140cc:	45 31 d0             	xor    %r10d,%r8d
   140cf:	44 31 f0             	xor    %r14d,%eax
   140d2:	c1 c6 0a             	rol    $0xa,%esi
   140d5:	01 d1                	add    %edx,%ecx
   140d7:	03 54 24 14          	add    0x14(%rsp),%edx
   140db:	41 c1 c4 0a          	rol    $0xa,%r12d
   140df:	89 74 24 60          	mov    %esi,0x60(%rsp)
   140e3:	41 31 c8             	xor    %ecx,%r8d
   140e6:	43 8d ac 3d 4e fd 53 	lea    -0x56ac02b2(%r13,%r15,1),%ebp
   140ed:	a9 
   140ee:	44 89 64 24 4c       	mov    %r12d,0x4c(%rsp)
   140f3:	01 c5                	add    %eax,%ebp
   140f5:	44 01 c2             	add    %r8d,%edx
   140f8:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
   140fc:	c1 c5 06             	rol    $0x6,%ebp
   140ff:	c1 c2 0b             	rol    $0xb,%edx
   14102:	01 dd                	add    %ebx,%ebp
   14104:	44 01 da             	add    %r11d,%edx
   14107:	03 77 0c             	add    0xc(%rdi),%esi
   1410a:	44 03 57 10          	add    0x10(%rdi),%r10d
   1410e:	44 03 5f 14          	add    0x14(%rdi),%r11d
   14112:	03 5f 18             	add    0x18(%rdi),%ebx
   14115:	41 01 f6             	add    %esi,%r14d
   14118:	45 01 d4             	add    %r10d,%r12d
   1411b:	45 01 d9             	add    %r11d,%r9d
   1411e:	89 54 24 58          	mov    %edx,0x58(%rsp)
   14122:	01 da                	add    %ebx,%edx
   14124:	be 68 00 00 00       	mov    $0x68,%esi
   14129:	44 89 4f 10          	mov    %r9d,0x10(%rdi)
   1412d:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
   14131:	44 89 67 0c          	mov    %r12d,0xc(%rdi)
   14135:	44 89 74 24 48       	mov    %r14d,0x48(%rsp)
   1413a:	89 57 14             	mov    %edx,0x14(%rdi)
   1413d:	03 4f 08             	add    0x8(%rdi),%ecx
   14140:	01 cd                	add    %ecx,%ebp
   14142:	44 89 77 08          	mov    %r14d,0x8(%rdi)
   14146:	89 6f 18             	mov    %ebp,0x18(%rdi)
   14149:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1414e:	e8 dd e7 ff ff       	callq  12930 <mbedtls_platform_zeroize>
   14153:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   1415a:	00 
   1415b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14162:	00 00 
   14164:	75 14                	jne    1417a <mbedtls_internal_ripemd160_process+0x16ba>
   14166:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1416d:	31 c0                	xor    %eax,%eax
   1416f:	5b                   	pop    %rbx
   14170:	5d                   	pop    %rbp
   14171:	41 5c                	pop    %r12
   14173:	41 5d                	pop    %r13
   14175:	41 5e                	pop    %r14
   14177:	41 5f                	pop    %r15
   14179:	c3                   	retq   
   1417a:	e8 01 f1 fe ff       	callq  3280 <__stack_chk_fail@plt>
   1417f:	90                   	nop

0000000000014180 <mbedtls_ripemd160_update.part.0>:
   14180:	41 56                	push   %r14
   14182:	41 55                	push   %r13
   14184:	41 54                	push   %r12
   14186:	49 89 fc             	mov    %rdi,%r12
   14189:	55                   	push   %rbp
   1418a:	48 89 f5             	mov    %rsi,%rbp
   1418d:	53                   	push   %rbx
   1418e:	8b 07                	mov    (%rdi),%eax
   14190:	48 89 d3             	mov    %rdx,%rbx
   14193:	ba 40 00 00 00       	mov    $0x40,%edx
   14198:	41 89 c5             	mov    %eax,%r13d
   1419b:	41 83 e5 3f          	and    $0x3f,%r13d
   1419f:	44 29 ea             	sub    %r13d,%edx
   141a2:	01 d8                	add    %ebx,%eax
   141a4:	89 07                	mov    %eax,(%rdi)
   141a6:	41 89 d6             	mov    %edx,%r14d
   141a9:	73 04                	jae    141af <mbedtls_ripemd160_update.part.0+0x2f>
   141ab:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   141af:	45 85 ed             	test   %r13d,%r13d
   141b2:	74 05                	je     141b9 <mbedtls_ripemd160_update.part.0+0x39>
   141b4:	49 39 de             	cmp    %rbx,%r14
   141b7:	76 37                	jbe    141f0 <mbedtls_ripemd160_update.part.0+0x70>
   141b9:	48 83 fb 3f          	cmp    $0x3f,%rbx
   141bd:	77 17                	ja     141d6 <mbedtls_ripemd160_update.part.0+0x56>
   141bf:	eb 7f                	jmp    14240 <mbedtls_ripemd160_update.part.0+0xc0>
   141c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   141c8:	48 83 eb 40          	sub    $0x40,%rbx
   141cc:	48 83 c5 40          	add    $0x40,%rbp
   141d0:	48 83 fb 3f          	cmp    $0x3f,%rbx
   141d4:	76 6a                	jbe    14240 <mbedtls_ripemd160_update.part.0+0xc0>
   141d6:	48 89 ee             	mov    %rbp,%rsi
   141d9:	4c 89 e7             	mov    %r12,%rdi
   141dc:	e8 df e8 ff ff       	callq  12ac0 <mbedtls_internal_ripemd160_process>
   141e1:	85 c0                	test   %eax,%eax
   141e3:	74 e3                	je     141c8 <mbedtls_ripemd160_update.part.0+0x48>
   141e5:	5b                   	pop    %rbx
   141e6:	5d                   	pop    %rbp
   141e7:	41 5c                	pop    %r12
   141e9:	41 5d                	pop    %r13
   141eb:	41 5e                	pop    %r14
   141ed:	c3                   	retq   
   141ee:	66 90                	xchg   %ax,%ax
   141f0:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
   141f5:	4d 01 c5             	add    %r8,%r13
   141f8:	83 fa 08             	cmp    $0x8,%edx
   141fb:	0f 83 87 00 00 00    	jae    14288 <mbedtls_ripemd160_update.part.0+0x108>
   14201:	f6 c2 04             	test   $0x4,%dl
   14204:	0f 85 19 01 00 00    	jne    14323 <mbedtls_ripemd160_update.part.0+0x1a3>
   1420a:	85 d2                	test   %edx,%edx
   1420c:	74 11                	je     1421f <mbedtls_ripemd160_update.part.0+0x9f>
   1420e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   14212:	83 e2 02             	and    $0x2,%edx
   14215:	41 88 45 00          	mov    %al,0x0(%r13)
   14219:	0f 85 30 01 00 00    	jne    1434f <mbedtls_ripemd160_update.part.0+0x1cf>
   1421f:	4c 89 c6             	mov    %r8,%rsi
   14222:	4c 89 e7             	mov    %r12,%rdi
   14225:	e8 96 e8 ff ff       	callq  12ac0 <mbedtls_internal_ripemd160_process>
   1422a:	85 c0                	test   %eax,%eax
   1422c:	75 b7                	jne    141e5 <mbedtls_ripemd160_update.part.0+0x65>
   1422e:	4c 01 f5             	add    %r14,%rbp
   14231:	4c 29 f3             	sub    %r14,%rbx
   14234:	45 31 ed             	xor    %r13d,%r13d
   14237:	eb 80                	jmp    141b9 <mbedtls_ripemd160_update.part.0+0x39>
   14239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14240:	31 c0                	xor    %eax,%eax
   14242:	48 85 db             	test   %rbx,%rbx
   14245:	74 9e                	je     141e5 <mbedtls_ripemd160_update.part.0+0x65>
   14247:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
   1424c:	89 d8                	mov    %ebx,%eax
   1424e:	83 fb 08             	cmp    $0x8,%ebx
   14251:	0f 83 7e 00 00 00    	jae    142d5 <mbedtls_ripemd160_update.part.0+0x155>
   14257:	83 e3 04             	and    $0x4,%ebx
   1425a:	0f 85 d9 00 00 00    	jne    14339 <mbedtls_ripemd160_update.part.0+0x1b9>
   14260:	85 c0                	test   %eax,%eax
   14262:	74 16                	je     1427a <mbedtls_ripemd160_update.part.0+0xfa>
   14264:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   14268:	88 11                	mov    %dl,(%rcx)
   1426a:	a8 02                	test   $0x2,%al
   1426c:	74 0c                	je     1427a <mbedtls_ripemd160_update.part.0+0xfa>
   1426e:	89 c2                	mov    %eax,%edx
   14270:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   14275:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   1427a:	31 c0                	xor    %eax,%eax
   1427c:	5b                   	pop    %rbx
   1427d:	5d                   	pop    %rbp
   1427e:	41 5c                	pop    %r12
   14280:	41 5d                	pop    %r13
   14282:	41 5e                	pop    %r14
   14284:	c3                   	retq   
   14285:	0f 1f 00             	nopl   (%rax)
   14288:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1428c:	49 8d 75 08          	lea    0x8(%r13),%rsi
   14290:	49 89 e9             	mov    %rbp,%r9
   14293:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   14297:	49 89 45 00          	mov    %rax,0x0(%r13)
   1429b:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
   142a0:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
   142a5:	49 29 f5             	sub    %rsi,%r13
   142a8:	44 01 ea             	add    %r13d,%edx
   142ab:	4d 29 e9             	sub    %r13,%r9
   142ae:	83 e2 f8             	and    $0xfffffff8,%edx
   142b1:	83 fa 08             	cmp    $0x8,%edx
   142b4:	0f 82 65 ff ff ff    	jb     1421f <mbedtls_ripemd160_update.part.0+0x9f>
   142ba:	83 e2 f8             	and    $0xfffffff8,%edx
   142bd:	31 c0                	xor    %eax,%eax
   142bf:	89 c1                	mov    %eax,%ecx
   142c1:	83 c0 08             	add    $0x8,%eax
   142c4:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   142c8:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   142cc:	39 d0                	cmp    %edx,%eax
   142ce:	72 ef                	jb     142bf <mbedtls_ripemd160_update.part.0+0x13f>
   142d0:	e9 4a ff ff ff       	jmpq   1421f <mbedtls_ripemd160_update.part.0+0x9f>
   142d5:	48 8b 45 00          	mov    0x0(%rbp),%rax
   142d9:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   142dd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   142e1:	48 89 01             	mov    %rax,(%rcx)
   142e4:	89 d8                	mov    %ebx,%eax
   142e6:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
   142eb:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   142f0:	48 29 f1             	sub    %rsi,%rcx
   142f3:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   142f6:	48 29 cd             	sub    %rcx,%rbp
   142f9:	83 e0 f8             	and    $0xfffffff8,%eax
   142fc:	83 f8 08             	cmp    $0x8,%eax
   142ff:	0f 82 75 ff ff ff    	jb     1427a <mbedtls_ripemd160_update.part.0+0xfa>
   14305:	83 e0 f8             	and    $0xfffffff8,%eax
   14308:	31 d2                	xor    %edx,%edx
   1430a:	89 d1                	mov    %edx,%ecx
   1430c:	83 c2 08             	add    $0x8,%edx
   1430f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   14314:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   14318:	39 c2                	cmp    %eax,%edx
   1431a:	72 ee                	jb     1430a <mbedtls_ripemd160_update.part.0+0x18a>
   1431c:	31 c0                	xor    %eax,%eax
   1431e:	e9 59 ff ff ff       	jmpq   1427c <mbedtls_ripemd160_update.part.0+0xfc>
   14323:	8b 45 00             	mov    0x0(%rbp),%eax
   14326:	41 89 45 00          	mov    %eax,0x0(%r13)
   1432a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
   1432f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
   14334:	e9 e6 fe ff ff       	jmpq   1421f <mbedtls_ripemd160_update.part.0+0x9f>
   14339:	8b 55 00             	mov    0x0(%rbp),%edx
   1433c:	89 11                	mov    %edx,(%rcx)
   1433e:	89 c2                	mov    %eax,%edx
   14340:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   14344:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   14348:	31 c0                	xor    %eax,%eax
   1434a:	e9 2d ff ff ff       	jmpq   1427c <mbedtls_ripemd160_update.part.0+0xfc>
   1434f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
   14355:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
   1435b:	e9 bf fe ff ff       	jmpq   1421f <mbedtls_ripemd160_update.part.0+0x9f>

0000000000014360 <mbedtls_ripemd160_update>:
   14360:	f3 0f 1e fa          	endbr64 
   14364:	48 85 d2             	test   %rdx,%rdx
   14367:	74 07                	je     14370 <mbedtls_ripemd160_update+0x10>
   14369:	e9 12 fe ff ff       	jmpq   14180 <mbedtls_ripemd160_update.part.0>
   1436e:	66 90                	xchg   %ax,%ax
   14370:	31 c0                	xor    %eax,%eax
   14372:	c3                   	retq   
   14373:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1437a:	00 00 00 00 
   1437e:	66 90                	xchg   %ax,%ax

0000000000014380 <mbedtls_ripemd160_finish>:
   14380:	f3 0f 1e fa          	endbr64 
   14384:	55                   	push   %rbp
   14385:	48 89 f5             	mov    %rsi,%rbp
   14388:	53                   	push   %rbx
   14389:	48 89 fb             	mov    %rdi,%rbx
   1438c:	48 83 ec 18          	sub    $0x18,%rsp
   14390:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14397:	00 00 
   14399:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1439e:	31 c0                	xor    %eax,%eax
   143a0:	8b 07                	mov    (%rdi),%eax
   143a2:	8b 7f 04             	mov    0x4(%rdi),%edi
   143a5:	89 c1                	mov    %eax,%ecx
   143a7:	8d 14 fd 00 00 00 00 	lea    0x0(,%rdi,8),%edx
   143ae:	c1 e9 1d             	shr    $0x1d,%ecx
   143b1:	09 ca                	or     %ecx,%edx
   143b3:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
   143ba:	83 e0 3f             	and    $0x3f,%eax
   143bd:	89 0c 24             	mov    %ecx,(%rsp)
   143c0:	89 54 24 04          	mov    %edx,0x4(%rsp)
   143c4:	83 f8 37             	cmp    $0x37,%eax
   143c7:	77 37                	ja     14400 <mbedtls_ripemd160_finish+0x80>
   143c9:	ba 38 00 00 00       	mov    $0x38,%edx
   143ce:	29 c2                	sub    %eax,%edx
   143d0:	48 8d 35 09 5e 00 00 	lea    0x5e09(%rip),%rsi        # 1a1e0 <ripemd160_padding>
   143d7:	48 89 df             	mov    %rbx,%rdi
   143da:	e8 a1 fd ff ff       	callq  14180 <mbedtls_ripemd160_update.part.0>
   143df:	85 c0                	test   %eax,%eax
   143e1:	74 2d                	je     14410 <mbedtls_ripemd160_finish+0x90>
   143e3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   143e8:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   143ef:	00 00 
   143f1:	75 51                	jne    14444 <mbedtls_ripemd160_finish+0xc4>
   143f3:	48 83 c4 18          	add    $0x18,%rsp
   143f7:	5b                   	pop    %rbx
   143f8:	5d                   	pop    %rbp
   143f9:	c3                   	retq   
   143fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14400:	ba 78 00 00 00       	mov    $0x78,%edx
   14405:	29 c2                	sub    %eax,%edx
   14407:	eb c7                	jmp    143d0 <mbedtls_ripemd160_finish+0x50>
   14409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14410:	48 89 e6             	mov    %rsp,%rsi
   14413:	ba 08 00 00 00       	mov    $0x8,%edx
   14418:	48 89 df             	mov    %rbx,%rdi
   1441b:	e8 60 fd ff ff       	callq  14180 <mbedtls_ripemd160_update.part.0>
   14420:	85 c0                	test   %eax,%eax
   14422:	75 bf                	jne    143e3 <mbedtls_ripemd160_finish+0x63>
   14424:	8b 53 08             	mov    0x8(%rbx),%edx
   14427:	89 55 00             	mov    %edx,0x0(%rbp)
   1442a:	8b 53 0c             	mov    0xc(%rbx),%edx
   1442d:	89 55 04             	mov    %edx,0x4(%rbp)
   14430:	8b 53 10             	mov    0x10(%rbx),%edx
   14433:	89 55 08             	mov    %edx,0x8(%rbp)
   14436:	8b 53 14             	mov    0x14(%rbx),%edx
   14439:	89 55 0c             	mov    %edx,0xc(%rbp)
   1443c:	8b 53 18             	mov    0x18(%rbx),%edx
   1443f:	89 55 10             	mov    %edx,0x10(%rbp)
   14442:	eb 9f                	jmp    143e3 <mbedtls_ripemd160_finish+0x63>
   14444:	e8 37 ee fe ff       	callq  3280 <__stack_chk_fail@plt>
   14449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014450 <mbedtls_ripemd160>:
   14450:	f3 0f 1e fa          	endbr64 
   14454:	41 55                	push   %r13
   14456:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1445a:	41 54                	push   %r12
   1445c:	55                   	push   %rbp
   1445d:	48 89 d5             	mov    %rdx,%rbp
   14460:	48 83 ec 70          	sub    $0x70,%rsp
   14464:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1446b:	00 00 
   1446d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   14472:	31 c0                	xor    %eax,%eax
   14474:	49 89 e5             	mov    %rsp,%r13
   14477:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1447c:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   14483:	ab cd ef 
   14486:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1448b:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   14492:	54 32 10 
   14495:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
   1449c:	00 
   1449d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   144a4:	00 
   144a5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   144aa:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
   144b1:	c3 
   144b2:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   144b7:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   144bc:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   144c1:	48 85 f6             	test   %rsi,%rsi
   144c4:	74 15                	je     144db <mbedtls_ripemd160+0x8b>
   144c6:	48 89 f2             	mov    %rsi,%rdx
   144c9:	48 89 fe             	mov    %rdi,%rsi
   144cc:	4c 89 ef             	mov    %r13,%rdi
   144cf:	e8 ac fc ff ff       	callq  14180 <mbedtls_ripemd160_update.part.0>
   144d4:	41 89 c4             	mov    %eax,%r12d
   144d7:	85 c0                	test   %eax,%eax
   144d9:	75 0e                	jne    144e9 <mbedtls_ripemd160+0x99>
   144db:	48 89 ee             	mov    %rbp,%rsi
   144de:	4c 89 ef             	mov    %r13,%rdi
   144e1:	e8 9a fe ff ff       	callq  14380 <mbedtls_ripemd160_finish>
   144e6:	41 89 c4             	mov    %eax,%r12d
   144e9:	be 5c 00 00 00       	mov    $0x5c,%esi
   144ee:	4c 89 ef             	mov    %r13,%rdi
   144f1:	e8 3a e4 ff ff       	callq  12930 <mbedtls_platform_zeroize>
   144f6:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   144fb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14502:	00 00 
   14504:	75 0d                	jne    14513 <mbedtls_ripemd160+0xc3>
   14506:	48 83 c4 70          	add    $0x70,%rsp
   1450a:	44 89 e0             	mov    %r12d,%eax
   1450d:	5d                   	pop    %rbp
   1450e:	41 5c                	pop    %r12
   14510:	41 5d                	pop    %r13
   14512:	c3                   	retq   
   14513:	e8 68 ed fe ff       	callq  3280 <__stack_chk_fail@plt>
   14518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1451f:	00 

0000000000014520 <mbedtls_ripemd160_self_test>:
   14520:	f3 0f 1e fa          	endbr64 
   14524:	41 57                	push   %r15
   14526:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1452a:	41 56                	push   %r14
   1452c:	4c 8d 35 0d 5a 00 00 	lea    0x5a0d(%rip),%r14        # 19f40 <ripemd160_test_str>
   14533:	41 55                	push   %r13
   14535:	41 89 fd             	mov    %edi,%r13d
   14538:	41 54                	push   %r12
   1453a:	45 31 e4             	xor    %r12d,%r12d
   1453d:	55                   	push   %rbp
   1453e:	bd 01 00 00 00       	mov    $0x1,%ebp
   14543:	53                   	push   %rbx
   14544:	48 8d 1d 15 59 00 00 	lea    0x5915(%rip),%rbx        # 19e60 <ripemd160_test_md>
   1454b:	48 83 ec 28          	sub    $0x28,%rsp
   1454f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14556:	00 00 
   14558:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1455d:	31 c0                	xor    %eax,%eax
   1455f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   14566:	00 
   14567:	49 89 e7             	mov    %rsp,%r15
   1456a:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1456e:	66 90                	xchg   %ax,%ax
   14570:	45 85 ed             	test   %r13d,%r13d
   14573:	75 6b                	jne    145e0 <mbedtls_ripemd160_self_test+0xc0>
   14575:	4c 89 e6             	mov    %r12,%rsi
   14578:	4c 89 fa             	mov    %r15,%rdx
   1457b:	4c 89 f7             	mov    %r14,%rdi
   1457e:	e8 cd fe ff ff       	callq  14450 <mbedtls_ripemd160>
   14583:	41 89 c4             	mov    %eax,%r12d
   14586:	85 c0                	test   %eax,%eax
   14588:	75 22                	jne    145ac <mbedtls_ripemd160_self_test+0x8c>
   1458a:	49 8b 07             	mov    (%r15),%rax
   1458d:	49 8b 57 08          	mov    0x8(%r15),%rdx
   14591:	48 33 03             	xor    (%rbx),%rax
   14594:	48 33 53 08          	xor    0x8(%rbx),%rdx
   14598:	48 09 c2             	or     %rax,%rdx
   1459b:	75 09                	jne    145a6 <mbedtls_ripemd160_self_test+0x86>
   1459d:	8b 43 10             	mov    0x10(%rbx),%eax
   145a0:	41 39 47 10          	cmp    %eax,0x10(%r15)
   145a4:	74 5a                	je     14600 <mbedtls_ripemd160_self_test+0xe0>
   145a6:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   145ac:	45 85 ed             	test   %r13d,%r13d
   145af:	0f 85 ab 00 00 00    	jne    14660 <mbedtls_ripemd160_self_test+0x140>
   145b5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   145ba:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   145c1:	00 00 
   145c3:	0f 85 a8 00 00 00    	jne    14671 <mbedtls_ripemd160_self_test+0x151>
   145c9:	48 83 c4 28          	add    $0x28,%rsp
   145cd:	44 89 e0             	mov    %r12d,%eax
   145d0:	5b                   	pop    %rbx
   145d1:	5d                   	pop    %rbp
   145d2:	41 5c                	pop    %r12
   145d4:	41 5d                	pop    %r13
   145d6:	41 5e                	pop    %r14
   145d8:	41 5f                	pop    %r15
   145da:	c3                   	retq   
   145db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   145e0:	89 ea                	mov    %ebp,%edx
   145e2:	48 8d 35 4c 58 00 00 	lea    0x584c(%rip),%rsi        # 19e35 <md5_test_buf+0xcf5>
   145e9:	bf 01 00 00 00       	mov    $0x1,%edi
   145ee:	31 c0                	xor    %eax,%eax
   145f0:	e8 5b ed fe ff       	callq  3350 <__printf_chk@plt>
   145f5:	e9 7b ff ff ff       	jmpq   14575 <mbedtls_ripemd160_self_test+0x55>
   145fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14600:	45 85 ed             	test   %r13d,%r13d
   14603:	74 0c                	je     14611 <mbedtls_ripemd160_self_test+0xf1>
   14605:	48 8d 3d c2 3d 00 00 	lea    0x3dc2(%rip),%rdi        # 183ce <bits+0x34e>
   1460c:	e8 0f ec fe ff       	callq  3220 <puts@plt>
   14611:	48 83 c3 14          	add    $0x14,%rbx
   14615:	49 83 c6 51          	add    $0x51,%r14
   14619:	48 83 fd 08          	cmp    $0x8,%rbp
   1461d:	74 19                	je     14638 <mbedtls_ripemd160_self_test+0x118>
   1461f:	48 8d 05 da 58 00 00 	lea    0x58da(%rip),%rax        # 19f00 <ripemd160_test_strlen>
   14626:	4c 8b 24 e8          	mov    (%rax,%rbp,8),%r12
   1462a:	48 83 c5 01          	add    $0x1,%rbp
   1462e:	e9 3d ff ff ff       	jmpq   14570 <mbedtls_ripemd160_self_test+0x50>
   14633:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14638:	45 85 ed             	test   %r13d,%r13d
   1463b:	75 0b                	jne    14648 <mbedtls_ripemd160_self_test+0x128>
   1463d:	45 31 e4             	xor    %r12d,%r12d
   14640:	e9 70 ff ff ff       	jmpq   145b5 <mbedtls_ripemd160_self_test+0x95>
   14645:	0f 1f 00             	nopl   (%rax)
   14648:	bf 0a 00 00 00       	mov    $0xa,%edi
   1464d:	e8 be eb fe ff       	callq  3210 <putchar@plt>
   14652:	e9 5e ff ff ff       	jmpq   145b5 <mbedtls_ripemd160_self_test+0x95>
   14657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1465e:	00 00 
   14660:	48 8d 3d 3b 3e 00 00 	lea    0x3e3b(%rip),%rdi        # 184a2 <bits+0x422>
   14667:	e8 b4 eb fe ff       	callq  3220 <puts@plt>
   1466c:	e9 44 ff ff ff       	jmpq   145b5 <mbedtls_ripemd160_self_test+0x95>
   14671:	e8 0a ec fe ff       	callq  3280 <__stack_chk_fail@plt>
   14676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1467d:	00 00 00 

0000000000014680 <mbedtls_sha1_init>:
   14680:	f3 0f 1e fa          	endbr64 
   14684:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1468b:	48 89 f9             	mov    %rdi,%rcx
   1468e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   14692:	31 c0                	xor    %eax,%eax
   14694:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
   1469b:	00 
   1469c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   146a0:	48 29 f9             	sub    %rdi,%rcx
   146a3:	83 c1 5c             	add    $0x5c,%ecx
   146a6:	c1 e9 03             	shr    $0x3,%ecx
   146a9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   146ac:	c3                   	retq   
   146ad:	0f 1f 00             	nopl   (%rax)

00000000000146b0 <mbedtls_sha1_free>:
   146b0:	f3 0f 1e fa          	endbr64 
   146b4:	48 85 ff             	test   %rdi,%rdi
   146b7:	74 0f                	je     146c8 <mbedtls_sha1_free+0x18>
   146b9:	be 5c 00 00 00       	mov    $0x5c,%esi
   146be:	e9 6d e2 ff ff       	jmpq   12930 <mbedtls_platform_zeroize>
   146c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   146c8:	c3                   	retq   
   146c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000146d0 <mbedtls_sha1_clone>:
   146d0:	f3 0f 1e fa          	endbr64 
   146d4:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   146d8:	0f 11 07             	movups %xmm0,(%rdi)
   146db:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   146e0:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   146e4:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   146e9:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   146ed:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   146f2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   146f6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   146fb:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   146ff:	48 8b 46 50          	mov    0x50(%rsi),%rax
   14703:	48 89 47 50          	mov    %rax,0x50(%rdi)
   14707:	8b 46 58             	mov    0x58(%rsi),%eax
   1470a:	89 47 58             	mov    %eax,0x58(%rdi)
   1470d:	c3                   	retq   
   1470e:	66 90                	xchg   %ax,%ax

0000000000014710 <mbedtls_sha1_starts>:
   14710:	f3 0f 1e fa          	endbr64 
   14714:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   1471b:	ab cd ef 
   1471e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   14725:	48 89 47 08          	mov    %rax,0x8(%rdi)
   14729:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   14730:	54 32 10 
   14733:	48 89 47 10          	mov    %rax,0x10(%rdi)
   14737:	31 c0                	xor    %eax,%eax
   14739:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
   14740:	c3                   	retq   
   14741:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   14748:	00 00 00 00 
   1474c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014750 <mbedtls_internal_sha1_process>:
   14750:	f3 0f 1e fa          	endbr64 
   14754:	41 57                	push   %r15
   14756:	41 56                	push   %r14
   14758:	41 55                	push   %r13
   1475a:	41 54                	push   %r12
   1475c:	49 89 f4             	mov    %rsi,%r12
   1475f:	55                   	push   %rbp
   14760:	53                   	push   %rbx
   14761:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   14768:	45 8b 44 24 24       	mov    0x24(%r12),%r8d
   1476d:	44 8b 56 04          	mov    0x4(%rsi),%r10d
   14771:	41 8b 5c 24 38       	mov    0x38(%r12),%ebx
   14776:	45 8b 5c 24 18       	mov    0x18(%r12),%r11d
   1477b:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   14780:	45 89 c7             	mov    %r8d,%r15d
   14783:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
   14788:	45 8b 6c 24 2c       	mov    0x2c(%r12),%r13d
   1478d:	45 89 d6             	mov    %r10d,%r14d
   14790:	41 0f cb             	bswap  %r11d
   14793:	44 8b 0e             	mov    (%rsi),%r9d
   14796:	8b 7e 08             	mov    0x8(%rsi),%edi
   14799:	41 0f ce             	bswap  %r14d
   1479c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   147a3:	00 00 
   147a5:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   147ac:	00 
   147ad:	31 c0                	xor    %eax,%eax
   147af:	41 8b 44 24 20       	mov    0x20(%r12),%eax
   147b4:	45 8b 54 24 1c       	mov    0x1c(%r12),%r10d
   147b9:	44 89 5c 24 14       	mov    %r11d,0x14(%rsp)
   147be:	41 8b 6c 24 34       	mov    0x34(%r12),%ebp
   147c3:	41 89 db             	mov    %ebx,%r11d
   147c6:	8b 76 0c             	mov    0xc(%rsi),%esi
   147c9:	41 0f cd             	bswap  %r13d
   147cc:	0f c8                	bswap  %eax
   147ce:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   147d2:	44 89 c0             	mov    %r8d,%eax
   147d5:	41 0f ca             	bswap  %r10d
   147d8:	45 8b 44 24 30       	mov    0x30(%r12),%r8d
   147dd:	41 8b 4c 24 10       	mov    0x10(%r12),%ecx
   147e2:	0f cd                	bswap  %ebp
   147e4:	41 0f cb             	bswap  %r11d
   147e7:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   147eb:	41 0f c9             	bswap  %r9d
   147ee:	0f cf                	bswap  %edi
   147f0:	0f ce                	bswap  %esi
   147f2:	41 8b 54 24 14       	mov    0x14(%r12),%edx
   147f7:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
   147fc:	41 0f c8             	bswap  %r8d
   147ff:	0f c9                	bswap  %ecx
   14801:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
   14806:	41 0f cf             	bswap  %r15d
   14809:	0f c8                	bswap  %eax
   1480b:	44 89 1c 24          	mov    %r11d,(%rsp)
   1480f:	0f ca                	bswap  %edx
   14811:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   14816:	45 8b 44 24 3c       	mov    0x3c(%r12),%r8d
   1481b:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   14820:	89 44 24 28          	mov    %eax,0x28(%rsp)
   14824:	41 0f c8             	bswap  %r8d
   14827:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
   1482c:	44 8b 53 14          	mov    0x14(%rbx),%r10d
   14830:	44 8b 63 10          	mov    0x10(%rbx),%r12d
   14834:	44 8b 5b 08          	mov    0x8(%rbx),%r11d
   14838:	8b 6b 0c             	mov    0xc(%rbx),%ebp
   1483b:	45 89 d5             	mov    %r10d,%r13d
   1483e:	44 8b 53 18          	mov    0x18(%rbx),%r10d
   14842:	44 89 6c 24 4c       	mov    %r13d,0x4c(%rsp)
   14847:	44 89 54 24 38       	mov    %r10d,0x38(%rsp)
   1484c:	45 89 e2             	mov    %r12d,%r10d
   1484f:	8b 5c 24 38          	mov    0x38(%rsp),%ebx
   14853:	45 31 ea             	xor    %r13d,%r10d
   14856:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
   1485a:	45 89 d0             	mov    %r10d,%r8d
   1485d:	45 89 da             	mov    %r11d,%r10d
   14860:	41 21 e8             	and    %ebp,%r8d
   14863:	41 c1 c2 05          	rol    $0x5,%r10d
   14867:	45 31 e8             	xor    %r13d,%r8d
   1486a:	46 8d 94 13 99 79 82 	lea    0x5a827999(%rbx,%r10,1),%r10d
   14871:	5a 
   14872:	89 eb                	mov    %ebp,%ebx
   14874:	44 89 dd             	mov    %r11d,%ebp
   14877:	c1 cb 02             	ror    $0x2,%ebx
   1487a:	45 01 d0             	add    %r10d,%r8d
   1487d:	45 89 e2             	mov    %r12d,%r10d
   14880:	89 6c 24 40          	mov    %ebp,0x40(%rsp)
   14884:	41 31 da             	xor    %ebx,%r10d
   14887:	45 01 c8             	add    %r9d,%r8d
   1488a:	45 21 da             	and    %r11d,%r10d
   1488d:	45 89 e3             	mov    %r12d,%r11d
   14890:	45 31 e2             	xor    %r12d,%r10d
   14893:	41 89 dc             	mov    %ebx,%r12d
   14896:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   1489b:	46 8d 9c 1f 99 79 82 	lea    0x5a827999(%rdi,%r11,1),%r11d
   148a2:	5a 
   148a3:	47 8d ac 15 99 79 82 	lea    0x5a827999(%r13,%r10,1),%r13d
   148aa:	5a 
   148ab:	45 89 c2             	mov    %r8d,%r10d
   148ae:	45 01 f5             	add    %r14d,%r13d
   148b1:	41 c1 c2 05          	rol    $0x5,%r10d
   148b5:	45 01 d5             	add    %r10d,%r13d
   148b8:	41 89 ea             	mov    %ebp,%r10d
   148bb:	41 c1 ca 02          	ror    $0x2,%r10d
   148bf:	45 31 d4             	xor    %r10d,%r12d
   148c2:	45 21 c4             	and    %r8d,%r12d
   148c5:	41 c1 c8 02          	ror    $0x2,%r8d
   148c9:	41 31 dc             	xor    %ebx,%r12d
   148cc:	44 89 c5             	mov    %r8d,%ebp
   148cf:	8d 9c 1e 99 79 82 5a 	lea    0x5a827999(%rsi,%rbx,1),%ebx
   148d6:	45 01 dc             	add    %r11d,%r12d
   148d9:	45 89 eb             	mov    %r13d,%r11d
   148dc:	41 c1 c3 05          	rol    $0x5,%r11d
   148e0:	45 01 dc             	add    %r11d,%r12d
   148e3:	45 89 d3             	mov    %r10d,%r11d
   148e6:	45 31 c3             	xor    %r8d,%r11d
   148e9:	45 21 eb             	and    %r13d,%r11d
   148ec:	41 c1 cd 02          	ror    $0x2,%r13d
   148f0:	45 31 d3             	xor    %r10d,%r11d
   148f3:	44 31 ed             	xor    %r13d,%ebp
   148f6:	46 8d 94 11 99 79 82 	lea    0x5a827999(%rcx,%r10,1),%r10d
   148fd:	5a 
   148fe:	41 01 db             	add    %ebx,%r11d
   14901:	44 89 e3             	mov    %r12d,%ebx
   14904:	44 21 e5             	and    %r12d,%ebp
   14907:	c1 c3 05             	rol    $0x5,%ebx
   1490a:	41 01 db             	add    %ebx,%r11d
   1490d:	44 31 c5             	xor    %r8d,%ebp
   14910:	41 c1 cc 02          	ror    $0x2,%r12d
   14914:	46 8d 84 02 99 79 82 	lea    0x5a827999(%rdx,%r8,1),%r8d
   1491b:	5a 
   1491c:	44 01 d5             	add    %r10d,%ebp
   1491f:	45 89 da             	mov    %r11d,%r10d
   14922:	41 c1 c2 05          	rol    $0x5,%r10d
   14926:	44 01 d5             	add    %r10d,%ebp
   14929:	45 89 ea             	mov    %r13d,%r10d
   1492c:	45 31 e2             	xor    %r12d,%r10d
   1492f:	45 21 da             	and    %r11d,%r10d
   14932:	41 c1 cb 02          	ror    $0x2,%r11d
   14936:	45 31 ea             	xor    %r13d,%r10d
   14939:	45 01 c2             	add    %r8d,%r10d
   1493c:	41 89 e8             	mov    %ebp,%r8d
   1493f:	41 c1 c0 05          	rol    $0x5,%r8d
   14943:	45 01 c2             	add    %r8d,%r10d
   14946:	45 89 e0             	mov    %r12d,%r8d
   14949:	45 31 d8             	xor    %r11d,%r8d
   1494c:	44 89 c3             	mov    %r8d,%ebx
   1494f:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   14954:	21 eb                	and    %ebp,%ebx
   14956:	c1 cd 02             	ror    $0x2,%ebp
   14959:	44 31 e3             	xor    %r12d,%ebx
   1495c:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
   14963:	5a 
   14964:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   14969:	44 01 c3             	add    %r8d,%ebx
   1496c:	45 89 d0             	mov    %r10d,%r8d
   1496f:	41 c1 c0 05          	rol    $0x5,%r8d
   14973:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
   1497a:	5a 
   1497b:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   14980:	44 01 c3             	add    %r8d,%ebx
   14983:	45 89 d8             	mov    %r11d,%r8d
   14986:	41 31 e8             	xor    %ebp,%r8d
   14989:	45 21 d0             	and    %r10d,%r8d
   1498c:	41 c1 ca 02          	ror    $0x2,%r10d
   14990:	45 31 d8             	xor    %r11d,%r8d
   14993:	47 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%r11,1),%r11d
   1499a:	5a 
   1499b:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   149a0:	45 01 e0             	add    %r12d,%r8d
   149a3:	41 89 dc             	mov    %ebx,%r12d
   149a6:	41 c1 c4 05          	rol    $0x5,%r12d
   149aa:	45 01 e0             	add    %r12d,%r8d
   149ad:	41 89 ec             	mov    %ebp,%r12d
   149b0:	45 31 d4             	xor    %r10d,%r12d
   149b3:	41 21 dc             	and    %ebx,%r12d
   149b6:	41 31 ec             	xor    %ebp,%r12d
   149b9:	41 8d ac 2f 99 79 82 	lea    0x5a827999(%r15,%rbp,1),%ebp
   149c0:	5a 
   149c1:	45 01 dc             	add    %r11d,%r12d
   149c4:	45 89 c3             	mov    %r8d,%r11d
   149c7:	41 c1 c3 05          	rol    $0x5,%r11d
   149cb:	45 01 dc             	add    %r11d,%r12d
   149ce:	c1 cb 02             	ror    $0x2,%ebx
   149d1:	45 89 d3             	mov    %r10d,%r11d
   149d4:	41 31 db             	xor    %ebx,%r11d
   149d7:	45 21 c3             	and    %r8d,%r11d
   149da:	41 c1 c8 02          	ror    $0x2,%r8d
   149de:	45 31 d3             	xor    %r10d,%r11d
   149e1:	46 8d 94 10 99 79 82 	lea    0x5a827999(%rax,%r10,1),%r10d
   149e8:	5a 
   149e9:	41 01 eb             	add    %ebp,%r11d
   149ec:	44 89 e5             	mov    %r12d,%ebp
   149ef:	c1 c5 05             	rol    $0x5,%ebp
   149f2:	41 01 eb             	add    %ebp,%r11d
   149f5:	89 dd                	mov    %ebx,%ebp
   149f7:	44 31 c5             	xor    %r8d,%ebp
   149fa:	44 21 e5             	and    %r12d,%ebp
   149fd:	41 c1 cc 02          	ror    $0x2,%r12d
   14a01:	31 dd                	xor    %ebx,%ebp
   14a03:	41 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%rbx,1),%ebx
   14a0a:	5a 
   14a0b:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   14a10:	44 01 d5             	add    %r10d,%ebp
   14a13:	45 89 da             	mov    %r11d,%r10d
   14a16:	41 c1 c2 05          	rol    $0x5,%r10d
   14a1a:	44 01 d5             	add    %r10d,%ebp
   14a1d:	45 89 c2             	mov    %r8d,%r10d
   14a20:	45 31 e2             	xor    %r12d,%r10d
   14a23:	89 e8                	mov    %ebp,%eax
   14a25:	45 21 da             	and    %r11d,%r10d
   14a28:	c1 c0 05             	rol    $0x5,%eax
   14a2b:	45 31 c2             	xor    %r8d,%r10d
   14a2e:	41 c1 cb 02          	ror    $0x2,%r11d
   14a32:	47 8d 84 05 99 79 82 	lea    0x5a827999(%r13,%r8,1),%r8d
   14a39:	5a 
   14a3a:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
   14a3f:	41 01 da             	add    %ebx,%r10d
   14a42:	41 01 c2             	add    %eax,%r10d
   14a45:	44 89 e0             	mov    %r12d,%eax
   14a48:	44 31 d8             	xor    %r11d,%eax
   14a4b:	89 c3                	mov    %eax,%ebx
   14a4d:	8b 04 24             	mov    (%rsp),%eax
   14a50:	21 eb                	and    %ebp,%ebx
   14a52:	c1 cd 02             	ror    $0x2,%ebp
   14a55:	44 31 e3             	xor    %r12d,%ebx
   14a58:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
   14a5f:	5a 
   14a60:	44 01 c3             	add    %r8d,%ebx
   14a63:	45 89 d0             	mov    %r10d,%r8d
   14a66:	41 c1 c0 05          	rol    $0x5,%r8d
   14a6a:	44 01 c3             	add    %r8d,%ebx
   14a6d:	45 89 d8             	mov    %r11d,%r8d
   14a70:	41 31 e8             	xor    %ebp,%r8d
   14a73:	45 21 d0             	and    %r10d,%r8d
   14a76:	45 31 d8             	xor    %r11d,%r8d
   14a79:	46 8d 9c 18 99 79 82 	lea    0x5a827999(%rax,%r11,1),%r11d
   14a80:	5a 
   14a81:	8b 44 24 04          	mov    0x4(%rsp),%eax
   14a85:	45 01 e0             	add    %r12d,%r8d
   14a88:	41 89 dc             	mov    %ebx,%r12d
   14a8b:	41 c1 ca 02          	ror    $0x2,%r10d
   14a8f:	41 31 f9             	xor    %edi,%r9d
   14a92:	41 c1 c4 05          	rol    $0x5,%r12d
   14a96:	44 33 4c 24 1c       	xor    0x1c(%rsp),%r9d
   14a9b:	41 31 f6             	xor    %esi,%r14d
   14a9e:	45 01 e0             	add    %r12d,%r8d
   14aa1:	41 89 ec             	mov    %ebp,%r12d
   14aa4:	45 31 e9             	xor    %r13d,%r9d
   14aa7:	45 31 d4             	xor    %r10d,%r12d
   14aaa:	41 d1 c1             	rol    %r9d
   14aad:	41 21 dc             	and    %ebx,%r12d
   14ab0:	c1 cb 02             	ror    $0x2,%ebx
   14ab3:	41 31 ec             	xor    %ebp,%r12d
   14ab6:	8d ac 28 99 79 82 5a 	lea    0x5a827999(%rax,%rbp,1),%ebp
   14abd:	45 01 dc             	add    %r11d,%r12d
   14ac0:	45 89 c3             	mov    %r8d,%r11d
   14ac3:	41 c1 c3 05          	rol    $0x5,%r11d
   14ac7:	45 01 dc             	add    %r11d,%r12d
   14aca:	45 89 d3             	mov    %r10d,%r11d
   14acd:	41 31 db             	xor    %ebx,%r11d
   14ad0:	45 21 c3             	and    %r8d,%r11d
   14ad3:	41 c1 c8 02          	ror    $0x2,%r8d
   14ad7:	45 31 d3             	xor    %r10d,%r11d
   14ada:	47 8d 94 0a 99 79 82 	lea    0x5a827999(%r10,%r9,1),%r10d
   14ae1:	5a 
   14ae2:	41 01 eb             	add    %ebp,%r11d
   14ae5:	44 89 e5             	mov    %r12d,%ebp
   14ae8:	c1 c5 05             	rol    $0x5,%ebp
   14aeb:	41 01 eb             	add    %ebp,%r11d
   14aee:	89 dd                	mov    %ebx,%ebp
   14af0:	44 31 c5             	xor    %r8d,%ebp
   14af3:	44 21 e5             	and    %r12d,%ebp
   14af6:	41 c1 cc 02          	ror    $0x2,%r12d
   14afa:	31 dd                	xor    %ebx,%ebp
   14afc:	44 01 d5             	add    %r10d,%ebp
   14aff:	45 89 da             	mov    %r11d,%r10d
   14b02:	41 c1 c2 05          	rol    $0x5,%r10d
   14b06:	44 01 d5             	add    %r10d,%ebp
   14b09:	45 89 f2             	mov    %r14d,%r10d
   14b0c:	45 31 fa             	xor    %r15d,%r10d
   14b0f:	44 33 14 24          	xor    (%rsp),%r10d
   14b13:	45 89 d6             	mov    %r10d,%r14d
   14b16:	45 89 c2             	mov    %r8d,%r10d
   14b19:	41 d1 c6             	rol    %r14d
   14b1c:	45 31 e2             	xor    %r12d,%r10d
   14b1f:	31 cf                	xor    %ecx,%edi
   14b21:	33 7c 24 28          	xor    0x28(%rsp),%edi
   14b25:	45 21 da             	and    %r11d,%r10d
   14b28:	44 89 f0             	mov    %r14d,%eax
   14b2b:	42 8d 9c 33 99 79 82 	lea    0x5a827999(%rbx,%r14,1),%ebx
   14b32:	5a 
   14b33:	31 d6                	xor    %edx,%esi
   14b35:	45 31 c2             	xor    %r8d,%r10d
   14b38:	41 89 ee             	mov    %ebp,%r14d
   14b3b:	41 c1 cb 02          	ror    $0x2,%r11d
   14b3f:	33 7c 24 04          	xor    0x4(%rsp),%edi
   14b43:	41 01 da             	add    %ebx,%r10d
   14b46:	41 c1 c6 05          	rol    $0x5,%r14d
   14b4a:	33 74 24 08          	xor    0x8(%rsp),%esi
   14b4e:	33 4c 24 14          	xor    0x14(%rsp),%ecx
   14b52:	45 01 f2             	add    %r14d,%r10d
   14b55:	45 89 e6             	mov    %r12d,%r14d
   14b58:	d1 c7                	rol    %edi
   14b5a:	44 31 ce             	xor    %r9d,%esi
   14b5d:	45 31 de             	xor    %r11d,%r14d
   14b60:	d1 c6                	rol    %esi
   14b62:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   14b66:	89 44 24 20          	mov    %eax,0x20(%rsp)
   14b6a:	44 89 f3             	mov    %r14d,%ebx
   14b6d:	45 8d 84 38 99 79 82 	lea    0x5a827999(%r8,%rdi,1),%r8d
   14b74:	5a 
   14b75:	45 89 d6             	mov    %r10d,%r14d
   14b78:	21 eb                	and    %ebp,%ebx
   14b7a:	41 c1 c6 05          	rol    $0x5,%r14d
   14b7e:	44 31 e3             	xor    %r12d,%ebx
   14b81:	c1 cd 02             	ror    $0x2,%ebp
   14b84:	45 8d a4 34 99 79 82 	lea    0x5a827999(%r12,%rsi,1),%r12d
   14b8b:	5a 
   14b8c:	44 01 c3             	add    %r8d,%ebx
   14b8f:	44 01 f3             	add    %r14d,%ebx
   14b92:	45 89 de             	mov    %r11d,%r14d
   14b95:	41 31 ee             	xor    %ebp,%r14d
   14b98:	45 89 f0             	mov    %r14d,%r8d
   14b9b:	41 89 ee             	mov    %ebp,%r14d
   14b9e:	45 21 d0             	and    %r10d,%r8d
   14ba1:	41 c1 ca 02          	ror    $0x2,%r10d
   14ba5:	45 31 d8             	xor    %r11d,%r8d
   14ba8:	45 01 e0             	add    %r12d,%r8d
   14bab:	41 89 dc             	mov    %ebx,%r12d
   14bae:	41 c1 c4 05          	rol    $0x5,%r12d
   14bb2:	45 01 e0             	add    %r12d,%r8d
   14bb5:	31 c1                	xor    %eax,%ecx
   14bb7:	33 54 24 18          	xor    0x18(%rsp),%edx
   14bbb:	45 31 d6             	xor    %r10d,%r14d
   14bbe:	44 31 ea             	xor    %r13d,%edx
   14bc1:	d1 c1                	rol    %ecx
   14bc3:	41 31 de             	xor    %ebx,%r14d
   14bc6:	31 fa                	xor    %edi,%edx
   14bc8:	45 8d 9c 0b a1 eb d9 	lea    0x6ed9eba1(%r11,%rcx,1),%r11d
   14bcf:	6e 
   14bd0:	c1 cb 02             	ror    $0x2,%ebx
   14bd3:	d1 c2                	rol    %edx
   14bd5:	45 01 de             	add    %r11d,%r14d
   14bd8:	45 89 c3             	mov    %r8d,%r11d
   14bdb:	89 d0                	mov    %edx,%eax
   14bdd:	44 89 d2             	mov    %r10d,%edx
   14be0:	41 c1 c3 05          	rol    $0x5,%r11d
   14be4:	31 da                	xor    %ebx,%edx
   14be6:	45 01 de             	add    %r11d,%r14d
   14be9:	44 8d 9c 05 a1 eb d9 	lea    0x6ed9eba1(%rbp,%rax,1),%r11d
   14bf0:	6e 
   14bf1:	89 44 24 24          	mov    %eax,0x24(%rsp)
   14bf5:	41 89 d5             	mov    %edx,%r13d
   14bf8:	44 89 f2             	mov    %r14d,%edx
   14bfb:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   14bff:	45 31 c5             	xor    %r8d,%r13d
   14c02:	c1 c2 05             	rol    $0x5,%edx
   14c05:	45 01 dd             	add    %r11d,%r13d
   14c08:	44 8b 1c 24          	mov    (%rsp),%r11d
   14c0c:	41 c1 c8 02          	ror    $0x2,%r8d
   14c10:	41 01 d5             	add    %edx,%r13d
   14c13:	8b 54 24 14          	mov    0x14(%rsp),%edx
   14c17:	31 c2                	xor    %eax,%edx
   14c19:	41 31 d3             	xor    %edx,%r11d
   14c1c:	89 da                	mov    %ebx,%edx
   14c1e:	44 31 c2             	xor    %r8d,%edx
   14c21:	41 31 f3             	xor    %esi,%r11d
   14c24:	41 d1 c3             	rol    %r11d
   14c27:	41 89 d4             	mov    %edx,%r12d
   14c2a:	44 89 ea             	mov    %r13d,%edx
   14c2d:	45 31 f4             	xor    %r14d,%r12d
   14c30:	47 8d 94 1a a1 eb d9 	lea    0x6ed9eba1(%r10,%r11,1),%r10d
   14c37:	6e 
   14c38:	c1 c2 05             	rol    $0x5,%edx
   14c3b:	45 01 d4             	add    %r10d,%r12d
   14c3e:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
   14c43:	41 c1 ce 02          	ror    $0x2,%r14d
   14c47:	41 01 d4             	add    %edx,%r12d
   14c4a:	44 89 c2             	mov    %r8d,%edx
   14c4d:	45 31 fa             	xor    %r15d,%r10d
   14c50:	44 33 54 24 04       	xor    0x4(%rsp),%r10d
   14c55:	41 31 ca             	xor    %ecx,%r10d
   14c58:	41 d1 c2             	rol    %r10d
   14c5b:	44 31 f2             	xor    %r14d,%edx
   14c5e:	44 33 7c 24 08       	xor    0x8(%rsp),%r15d
   14c63:	89 d5                	mov    %edx,%ebp
   14c65:	42 8d 9c 13 a1 eb d9 	lea    0x6ed9eba1(%rbx,%r10,1),%ebx
   14c6c:	6e 
   14c6d:	44 89 e2             	mov    %r12d,%edx
   14c70:	44 31 ed             	xor    %r13d,%ebp
   14c73:	c1 c2 05             	rol    $0x5,%edx
   14c76:	01 dd                	add    %ebx,%ebp
   14c78:	41 c1 cd 02          	ror    $0x2,%r13d
   14c7c:	44 89 f3             	mov    %r14d,%ebx
   14c7f:	01 d5                	add    %edx,%ebp
   14c81:	8b 54 24 28          	mov    0x28(%rsp),%edx
   14c85:	44 31 eb             	xor    %r13d,%ebx
   14c88:	44 31 e3             	xor    %r12d,%ebx
   14c8b:	41 c1 cc 02          	ror    $0x2,%r12d
   14c8f:	31 d0                	xor    %edx,%eax
   14c91:	33 54 24 0c          	xor    0xc(%rsp),%edx
   14c95:	44 31 c8             	xor    %r9d,%eax
   14c98:	33 44 24 24          	xor    0x24(%rsp),%eax
   14c9c:	d1 c0                	rol    %eax
   14c9e:	45 8d 84 00 a1 eb d9 	lea    0x6ed9eba1(%r8,%rax,1),%r8d
   14ca5:	6e 
   14ca6:	44 01 c3             	add    %r8d,%ebx
   14ca9:	41 89 e8             	mov    %ebp,%r8d
   14cac:	41 c1 c0 05          	rol    $0x5,%r8d
   14cb0:	44 01 c3             	add    %r8d,%ebx
   14cb3:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
   14cb8:	45 31 f8             	xor    %r15d,%r8d
   14cbb:	45 89 ef             	mov    %r13d,%r15d
   14cbe:	45 31 d8             	xor    %r11d,%r8d
   14cc1:	45 31 e7             	xor    %r12d,%r15d
   14cc4:	41 d1 c0             	rol    %r8d
   14cc7:	41 31 ef             	xor    %ebp,%r15d
   14cca:	c1 cd 02             	ror    $0x2,%ebp
   14ccd:	47 8d b4 06 a1 eb d9 	lea    0x6ed9eba1(%r14,%r8,1),%r14d
   14cd4:	6e 
   14cd5:	45 01 f7             	add    %r14d,%r15d
   14cd8:	41 89 de             	mov    %ebx,%r14d
   14cdb:	41 c1 c6 05          	rol    $0x5,%r14d
   14cdf:	45 01 f7             	add    %r14d,%r15d
   14ce2:	41 89 d6             	mov    %edx,%r14d
   14ce5:	41 31 fe             	xor    %edi,%r14d
   14ce8:	45 31 d6             	xor    %r10d,%r14d
   14ceb:	41 d1 c6             	rol    %r14d
   14cee:	44 89 f2             	mov    %r14d,%edx
   14cf1:	45 89 e6             	mov    %r12d,%r14d
   14cf4:	41 31 ee             	xor    %ebp,%r14d
   14cf7:	45 8d ac 15 a1 eb d9 	lea    0x6ed9eba1(%r13,%rdx,1),%r13d
   14cfe:	6e 
   14cff:	89 54 24 14          	mov    %edx,0x14(%rsp)
   14d03:	8b 54 24 08          	mov    0x8(%rsp),%edx
   14d07:	41 31 de             	xor    %ebx,%r14d
   14d0a:	45 01 ee             	add    %r13d,%r14d
   14d0d:	45 89 fd             	mov    %r15d,%r13d
   14d10:	33 54 24 10          	xor    0x10(%rsp),%edx
   14d14:	c1 cb 02             	ror    $0x2,%ebx
   14d17:	41 c1 c5 05          	rol    $0x5,%r13d
   14d1b:	45 01 ee             	add    %r13d,%r14d
   14d1e:	41 89 d5             	mov    %edx,%r13d
   14d21:	41 31 f5             	xor    %esi,%r13d
   14d24:	41 31 c5             	xor    %eax,%r13d
   14d27:	44 89 ea             	mov    %r13d,%edx
   14d2a:	41 89 ed             	mov    %ebp,%r13d
   14d2d:	d1 c2                	rol    %edx
   14d2f:	41 31 dd             	xor    %ebx,%r13d
   14d32:	45 31 fd             	xor    %r15d,%r13d
   14d35:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
   14d3c:	6e 
   14d3d:	89 54 24 08          	mov    %edx,0x8(%rsp)
   14d41:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   14d45:	45 01 e5             	add    %r12d,%r13d
   14d48:	45 89 f4             	mov    %r14d,%r12d
   14d4b:	33 14 24             	xor    (%rsp),%edx
   14d4e:	41 c1 cf 02          	ror    $0x2,%r15d
   14d52:	41 c1 c4 05          	rol    $0x5,%r12d
   14d56:	45 01 e5             	add    %r12d,%r13d
   14d59:	41 89 d4             	mov    %edx,%r12d
   14d5c:	41 31 cc             	xor    %ecx,%r12d
   14d5f:	45 31 c4             	xor    %r8d,%r12d
   14d62:	41 d1 c4             	rol    %r12d
   14d65:	44 89 e2             	mov    %r12d,%edx
   14d68:	41 89 dc             	mov    %ebx,%r12d
   14d6b:	45 31 fc             	xor    %r15d,%r12d
   14d6e:	8d ac 15 a1 eb d9 6e 	lea    0x6ed9eba1(%rbp,%rdx,1),%ebp
   14d75:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   14d79:	45 31 f4             	xor    %r14d,%r12d
   14d7c:	41 c1 ce 02          	ror    $0x2,%r14d
   14d80:	41 01 ec             	add    %ebp,%r12d
   14d83:	44 89 ed             	mov    %r13d,%ebp
   14d86:	c1 c5 05             	rol    $0x5,%ebp
   14d89:	41 01 ec             	add    %ebp,%r12d
   14d8c:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
   14d90:	33 6c 24 04          	xor    0x4(%rsp),%ebp
   14d94:	33 6c 24 24          	xor    0x24(%rsp),%ebp
   14d98:	33 6c 24 14          	xor    0x14(%rsp),%ebp
   14d9c:	d1 c5                	rol    %ebp
   14d9e:	89 ea                	mov    %ebp,%edx
   14da0:	44 89 fd             	mov    %r15d,%ebp
   14da3:	44 31 f5             	xor    %r14d,%ebp
   14da6:	8d 9c 13 a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rdx,1),%ebx
   14dad:	89 54 24 28          	mov    %edx,0x28(%rsp)
   14db1:	44 31 ed             	xor    %r13d,%ebp
   14db4:	01 dd                	add    %ebx,%ebp
   14db6:	44 89 e3             	mov    %r12d,%ebx
   14db9:	c1 c3 05             	rol    $0x5,%ebx
   14dbc:	01 dd                	add    %ebx,%ebp
   14dbe:	8b 1c 24             	mov    (%rsp),%ebx
   14dc1:	41 c1 cd 02          	ror    $0x2,%r13d
   14dc5:	44 31 cb             	xor    %r9d,%ebx
   14dc8:	41 31 f9             	xor    %edi,%r9d
   14dcb:	44 31 db             	xor    %r11d,%ebx
   14dce:	33 5c 24 08          	xor    0x8(%rsp),%ebx
   14dd2:	41 31 c1             	xor    %eax,%r9d
   14dd5:	44 33 4c 24 28       	xor    0x28(%rsp),%r9d
   14dda:	d1 c3                	rol    %ebx
   14ddc:	89 da                	mov    %ebx,%edx
   14dde:	44 89 f3             	mov    %r14d,%ebx
   14de1:	44 31 eb             	xor    %r13d,%ebx
   14de4:	45 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%r15,%rdx,1),%r15d
   14deb:	6e 
   14dec:	89 14 24             	mov    %edx,(%rsp)
   14def:	44 31 e3             	xor    %r12d,%ebx
   14df2:	41 c1 cc 02          	ror    $0x2,%r12d
   14df6:	44 01 fb             	add    %r15d,%ebx
   14df9:	41 89 ef             	mov    %ebp,%r15d
   14dfc:	41 c1 c7 05          	rol    $0x5,%r15d
   14e00:	44 01 fb             	add    %r15d,%ebx
   14e03:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
   14e08:	44 33 7c 24 20       	xor    0x20(%rsp),%r15d
   14e0d:	45 31 d7             	xor    %r10d,%r15d
   14e10:	44 33 7c 24 0c       	xor    0xc(%rsp),%r15d
   14e15:	41 d1 c7             	rol    %r15d
   14e18:	44 89 fa             	mov    %r15d,%edx
   14e1b:	45 89 ef             	mov    %r13d,%r15d
   14e1e:	45 31 e7             	xor    %r12d,%r15d
   14e21:	45 8d b4 16 a1 eb d9 	lea    0x6ed9eba1(%r14,%rdx,1),%r14d
   14e28:	6e 
   14e29:	89 54 24 10          	mov    %edx,0x10(%rsp)
   14e2d:	41 31 ef             	xor    %ebp,%r15d
   14e30:	c1 cd 02             	ror    $0x2,%ebp
   14e33:	45 01 f7             	add    %r14d,%r15d
   14e36:	41 89 de             	mov    %ebx,%r14d
   14e39:	41 c1 c6 05          	rol    $0x5,%r14d
   14e3d:	45 01 fe             	add    %r15d,%r14d
   14e40:	45 89 cf             	mov    %r9d,%r15d
   14e43:	45 89 e1             	mov    %r12d,%r9d
   14e46:	41 d1 c7             	rol    %r15d
   14e49:	41 31 e9             	xor    %ebp,%r9d
   14e4c:	41 31 d9             	xor    %ebx,%r9d
   14e4f:	47 8d ac 3d a1 eb d9 	lea    0x6ed9eba1(%r13,%r15,1),%r13d
   14e56:	6e 
   14e57:	c1 cb 02             	ror    $0x2,%ebx
   14e5a:	45 01 cd             	add    %r9d,%r13d
   14e5d:	45 89 f1             	mov    %r14d,%r9d
   14e60:	41 c1 c1 05          	rol    $0x5,%r9d
   14e64:	45 01 e9             	add    %r13d,%r9d
   14e67:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   14e6c:	41 31 f5             	xor    %esi,%r13d
   14e6f:	31 cf                	xor    %ecx,%edi
   14e71:	44 31 d9             	xor    %r11d,%ecx
   14e74:	45 31 c5             	xor    %r8d,%r13d
   14e77:	44 33 2c 24          	xor    (%rsp),%r13d
   14e7b:	41 d1 c5             	rol    %r13d
   14e7e:	44 89 ea             	mov    %r13d,%edx
   14e81:	41 89 ed             	mov    %ebp,%r13d
   14e84:	41 31 dd             	xor    %ebx,%r13d
   14e87:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
   14e8e:	6e 
   14e8f:	89 54 24 18          	mov    %edx,0x18(%rsp)
   14e93:	33 7c 24 14          	xor    0x14(%rsp),%edi
   14e97:	45 31 f5             	xor    %r14d,%r13d
   14e9a:	33 7c 24 10          	xor    0x10(%rsp),%edi
   14e9e:	41 c1 ce 02          	ror    $0x2,%r14d
   14ea2:	8b 54 24 24          	mov    0x24(%rsp),%edx
   14ea6:	45 01 e5             	add    %r12d,%r13d
   14ea9:	45 89 cc             	mov    %r9d,%r12d
   14eac:	d1 c7                	rol    %edi
   14eae:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   14eb2:	41 c1 c4 05          	rol    $0x5,%r12d
   14eb6:	31 d6                	xor    %edx,%esi
   14eb8:	33 74 24 08          	xor    0x8(%rsp),%esi
   14ebc:	45 01 ec             	add    %r13d,%r12d
   14ebf:	41 89 fd             	mov    %edi,%r13d
   14ec2:	89 df                	mov    %ebx,%edi
   14ec4:	44 31 fe             	xor    %r15d,%esi
   14ec7:	44 31 f7             	xor    %r14d,%edi
   14eca:	42 8d ac 2d a1 eb d9 	lea    0x6ed9eba1(%rbp,%r13,1),%ebp
   14ed1:	6e 
   14ed2:	d1 c6                	rol    %esi
   14ed4:	44 31 cf             	xor    %r9d,%edi
   14ed7:	41 c1 c9 02          	ror    $0x2,%r9d
   14edb:	01 fd                	add    %edi,%ebp
   14edd:	44 89 e7             	mov    %r12d,%edi
   14ee0:	c1 c7 05             	rol    $0x5,%edi
   14ee3:	01 ef                	add    %ebp,%edi
   14ee5:	89 f5                	mov    %esi,%ebp
   14ee7:	44 89 f6             	mov    %r14d,%esi
   14eea:	44 31 ce             	xor    %r9d,%esi
   14eed:	8d 9c 2b a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rbp,1),%ebx
   14ef4:	44 31 e6             	xor    %r12d,%esi
   14ef7:	41 c1 cc 02          	ror    $0x2,%r12d
   14efb:	01 f3                	add    %esi,%ebx
   14efd:	89 fe                	mov    %edi,%esi
   14eff:	c1 c6 05             	rol    $0x5,%esi
   14f02:	01 de                	add    %ebx,%esi
   14f04:	33 4c 24 18          	xor    0x18(%rsp),%ecx
   14f08:	44 89 cb             	mov    %r9d,%ebx
   14f0b:	44 31 d2             	xor    %r10d,%edx
   14f0e:	d1 c1                	rol    %ecx
   14f10:	44 31 e3             	xor    %r12d,%ebx
   14f13:	41 31 c3             	xor    %eax,%r11d
   14f16:	44 33 1c 24          	xor    (%rsp),%r11d
   14f1a:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   14f1e:	31 fb                	xor    %edi,%ebx
   14f20:	c1 cf 02             	ror    $0x2,%edi
   14f23:	41 31 eb             	xor    %ebp,%r11d
   14f26:	41 8d 8c 0e a1 eb d9 	lea    0x6ed9eba1(%r14,%rcx,1),%ecx
   14f2d:	6e 
   14f2e:	41 89 f6             	mov    %esi,%r14d
   14f31:	45 31 c2             	xor    %r8d,%r10d
   14f34:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
   14f39:	41 c1 c6 05          	rol    $0x5,%r14d
   14f3d:	01 cb                	add    %ecx,%ebx
   14f3f:	44 33 54 24 1c       	xor    0x1c(%rsp),%r10d
   14f44:	44 89 f1             	mov    %r14d,%ecx
   14f47:	41 d1 c2             	rol    %r10d
   14f4a:	01 d9                	add    %ebx,%ecx
   14f4c:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   14f50:	44 89 54 24 2c       	mov    %r10d,0x2c(%rsp)
   14f55:	31 da                	xor    %ebx,%edx
   14f57:	44 31 ea             	xor    %r13d,%edx
   14f5a:	41 89 d6             	mov    %edx,%r14d
   14f5d:	44 89 e2             	mov    %r12d,%edx
   14f60:	41 d1 c6             	rol    %r14d
   14f63:	31 fa                	xor    %edi,%edx
   14f65:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
   14f6a:	47 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%r9,%r14,1),%r9d
   14f71:	6e 
   14f72:	41 89 ce             	mov    %ecx,%r14d
   14f75:	31 f2                	xor    %esi,%edx
   14f77:	41 c1 c6 05          	rol    $0x5,%r14d
   14f7b:	41 01 d1             	add    %edx,%r9d
   14f7e:	c1 ce 02             	ror    $0x2,%esi
   14f81:	44 89 f2             	mov    %r14d,%edx
   14f84:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   14f89:	44 01 ca             	add    %r9d,%edx
   14f8c:	45 89 d9             	mov    %r11d,%r9d
   14f8f:	41 89 fb             	mov    %edi,%r11d
   14f92:	41 d1 c1             	rol    %r9d
   14f95:	41 31 f3             	xor    %esi,%r11d
   14f98:	42 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%rdi,%r10,1),%edi
   14f9f:	6e 
   14fa0:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
   14fa5:	41 31 cb             	xor    %ecx,%r11d
   14fa8:	47 8d 8c 0c a1 eb d9 	lea    0x6ed9eba1(%r12,%r9,1),%r9d
   14faf:	6e 
   14fb0:	41 89 d4             	mov    %edx,%r12d
   14fb3:	41 c1 c4 05          	rol    $0x5,%r12d
   14fb7:	45 01 cb             	add    %r9d,%r11d
   14fba:	c1 c9 02             	ror    $0x2,%ecx
   14fbd:	45 01 e3             	add    %r12d,%r11d
   14fc0:	41 89 f4             	mov    %esi,%r12d
   14fc3:	41 31 cc             	xor    %ecx,%r12d
   14fc6:	44 31 f0             	xor    %r14d,%eax
   14fc9:	45 89 e1             	mov    %r12d,%r9d
   14fcc:	45 89 dc             	mov    %r11d,%r12d
   14fcf:	44 31 f8             	xor    %r15d,%eax
   14fd2:	33 44 24 20          	xor    0x20(%rsp),%eax
   14fd6:	41 c1 c4 05          	rol    $0x5,%r12d
   14fda:	41 31 d1             	xor    %edx,%r9d
   14fdd:	d1 c0                	rol    %eax
   14fdf:	44 01 cf             	add    %r9d,%edi
   14fe2:	89 44 24 14          	mov    %eax,0x14(%rsp)
   14fe6:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
   14feb:	c1 ca 02             	ror    $0x2,%edx
   14fee:	44 01 e7             	add    %r12d,%edi
   14ff1:	8d b4 06 dc bc 1b 8f 	lea    -0x70e44324(%rsi,%rax,1),%esi
   14ff8:	45 89 dc             	mov    %r11d,%r12d
   14ffb:	89 f8                	mov    %edi,%eax
   14ffd:	45 31 c8             	xor    %r9d,%r8d
   15000:	44 33 44 24 18       	xor    0x18(%rsp),%r8d
   15005:	44 33 44 24 04       	xor    0x4(%rsp),%r8d
   1500a:	c1 c0 05             	rol    $0x5,%eax
   1500d:	41 21 d4             	and    %edx,%r12d
   15010:	41 d1 c0             	rol    %r8d
   15013:	01 c6                	add    %eax,%esi
   15015:	44 89 d8             	mov    %r11d,%eax
   15018:	41 c1 cb 02          	ror    $0x2,%r11d
   1501c:	09 d0                	or     %edx,%eax
   1501e:	21 c8                	and    %ecx,%eax
   15020:	44 09 e0             	or     %r12d,%eax
   15023:	45 89 c4             	mov    %r8d,%r12d
   15026:	41 89 f8             	mov    %edi,%r8d
   15029:	01 c6                	add    %eax,%esi
   1502b:	45 09 d8             	or     %r11d,%r8d
   1502e:	89 f8                	mov    %edi,%eax
   15030:	44 89 64 24 08       	mov    %r12d,0x8(%rsp)
   15035:	41 21 d0             	and    %edx,%r8d
   15038:	44 21 d8             	and    %r11d,%eax
   1503b:	c1 cf 02             	ror    $0x2,%edi
   1503e:	44 09 c0             	or     %r8d,%eax
   15041:	46 8d 84 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%r8d
   15048:	8f 
   15049:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   1504e:	89 f1                	mov    %esi,%ecx
   15050:	41 01 c0             	add    %eax,%r8d
   15053:	c1 c1 05             	rol    $0x5,%ecx
   15056:	45 31 e6             	xor    %r12d,%r14d
   15059:	41 01 c8             	add    %ecx,%r8d
   1505c:	45 31 ee             	xor    %r13d,%r14d
   1505f:	44 89 c1             	mov    %r8d,%ecx
   15062:	45 31 d6             	xor    %r10d,%r14d
   15065:	c1 c1 05             	rol    $0x5,%ecx
   15068:	41 31 d9             	xor    %ebx,%r9d
   1506b:	44 33 24 24          	xor    (%rsp),%r12d
   1506f:	41 d1 c6             	rol    %r14d
   15072:	89 c8                	mov    %ecx,%eax
   15074:	89 f1                	mov    %esi,%ecx
   15076:	45 89 ca             	mov    %r9d,%r10d
   15079:	42 8d 94 32 dc bc 1b 	lea    -0x70e44324(%rdx,%r14,1),%edx
   15080:	8f 
   15081:	21 f9                	and    %edi,%ecx
   15083:	41 31 ea             	xor    %ebp,%r10d
   15086:	41 89 d9             	mov    %ebx,%r9d
   15089:	01 d0                	add    %edx,%eax
   1508b:	89 f2                	mov    %esi,%edx
   1508d:	c1 ce 02             	ror    $0x2,%esi
   15090:	44 33 54 24 14       	xor    0x14(%rsp),%r10d
   15095:	09 fa                	or     %edi,%edx
   15097:	41 d1 c2             	rol    %r10d
   1509a:	44 33 64 24 1c       	xor    0x1c(%rsp),%r12d
   1509f:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
   150a4:	44 21 da             	and    %r11d,%edx
   150a7:	44 89 54 24 0c       	mov    %r10d,0xc(%rsp)
   150ac:	41 d1 c4             	rol    %r12d
   150af:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   150b3:	09 ca                	or     %ecx,%edx
   150b5:	44 89 c1             	mov    %r8d,%ecx
   150b8:	47 8d 94 13 dc bc 1b 	lea    -0x70e44324(%r11,%r10,1),%r10d
   150bf:	8f 
   150c0:	01 c2                	add    %eax,%edx
   150c2:	09 f1                	or     %esi,%ecx
   150c4:	46 8d 9c 27 dc bc 1b 	lea    -0x70e44324(%rdi,%r12,1),%r11d
   150cb:	8f 
   150cc:	44 89 c0             	mov    %r8d,%eax
   150cf:	21 f9                	and    %edi,%ecx
   150d1:	21 f0                	and    %esi,%eax
   150d3:	41 c1 c8 02          	ror    $0x2,%r8d
   150d7:	09 c8                	or     %ecx,%eax
   150d9:	8b 0c 24             	mov    (%rsp),%ecx
   150dc:	41 01 c2             	add    %eax,%r10d
   150df:	89 d0                	mov    %edx,%eax
   150e1:	c1 c0 05             	rol    $0x5,%eax
   150e4:	41 01 c2             	add    %eax,%r10d
   150e7:	44 89 d7             	mov    %r10d,%edi
   150ea:	c1 c7 05             	rol    $0x5,%edi
   150ed:	89 f8                	mov    %edi,%eax
   150ef:	89 d7                	mov    %edx,%edi
   150f1:	44 09 c7             	or     %r8d,%edi
   150f4:	44 01 d8             	add    %r11d,%eax
   150f7:	41 89 fb             	mov    %edi,%r11d
   150fa:	89 d7                	mov    %edx,%edi
   150fc:	44 21 c7             	and    %r8d,%edi
   150ff:	41 21 f3             	and    %esi,%r11d
   15102:	41 09 fb             	or     %edi,%r11d
   15105:	41 01 c3             	add    %eax,%r11d
   15108:	41 31 d9             	xor    %ebx,%r9d
   1510b:	44 33 4c 24 20       	xor    0x20(%rsp),%r9d
   15110:	c1 ca 02             	ror    $0x2,%edx
   15113:	45 31 f1             	xor    %r14d,%r9d
   15116:	44 31 f9             	xor    %r15d,%ecx
   15119:	33 4c 24 04          	xor    0x4(%rsp),%ecx
   1511d:	44 89 cf             	mov    %r9d,%edi
   15120:	d1 c7                	rol    %edi
   15122:	41 89 f9             	mov    %edi,%r9d
   15125:	44 89 d7             	mov    %r10d,%edi
   15128:	09 d7                	or     %edx,%edi
   1512a:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   1512f:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   15133:	89 f8                	mov    %edi,%eax
   15135:	44 89 d7             	mov    %r10d,%edi
   15138:	41 c1 ca 02          	ror    $0x2,%r10d
   1513c:	44 21 c0             	and    %r8d,%eax
   1513f:	21 d7                	and    %edx,%edi
   15141:	09 c7                	or     %eax,%edi
   15143:	42 8d 84 0e dc bc 1b 	lea    -0x70e44324(%rsi,%r9,1),%eax
   1514a:	8f 
   1514b:	44 89 de             	mov    %r11d,%esi
   1514e:	44 8b 4c 24 18       	mov    0x18(%rsp),%r9d
   15153:	01 c7                	add    %eax,%edi
   15155:	c1 c6 05             	rol    $0x5,%esi
   15158:	01 f7                	add    %esi,%edi
   1515a:	89 ce                	mov    %ecx,%esi
   1515c:	d1 c6                	rol    %esi
   1515e:	89 74 24 24          	mov    %esi,0x24(%rsp)
   15162:	41 8d b4 30 dc bc 1b 	lea    -0x70e44324(%r8,%rsi,1),%esi
   15169:	8f 
   1516a:	41 89 f8             	mov    %edi,%r8d
   1516d:	41 c1 c0 05          	rol    $0x5,%r8d
   15171:	44 89 c0             	mov    %r8d,%eax
   15174:	45 89 d8             	mov    %r11d,%r8d
   15177:	45 09 d0             	or     %r10d,%r8d
   1517a:	01 f0                	add    %esi,%eax
   1517c:	44 89 c1             	mov    %r8d,%ecx
   1517f:	45 89 d8             	mov    %r11d,%r8d
   15182:	41 c1 cb 02          	ror    $0x2,%r11d
   15186:	45 21 d0             	and    %r10d,%r8d
   15189:	21 d1                	and    %edx,%ecx
   1518b:	44 89 c6             	mov    %r8d,%esi
   1518e:	09 ce                	or     %ecx,%esi
   15190:	89 f9                	mov    %edi,%ecx
   15192:	01 c6                	add    %eax,%esi
   15194:	89 d8                	mov    %ebx,%eax
   15196:	44 09 d9             	or     %r11d,%ecx
   15199:	44 31 c8             	xor    %r9d,%eax
   1519c:	33 44 24 2c          	xor    0x2c(%rsp),%eax
   151a0:	44 21 d1             	and    %r10d,%ecx
   151a3:	44 31 e0             	xor    %r12d,%eax
   151a6:	41 89 c0             	mov    %eax,%r8d
   151a9:	89 f8                	mov    %edi,%eax
   151ab:	41 d1 c0             	rol    %r8d
   151ae:	44 21 d8             	and    %r11d,%eax
   151b1:	45 31 ef             	xor    %r13d,%r15d
   151b4:	c1 cf 02             	ror    $0x2,%edi
   151b7:	09 c8                	or     %ecx,%eax
   151b9:	42 8d 94 02 dc bc 1b 	lea    -0x70e44324(%rdx,%r8,1),%edx
   151c0:	8f 
   151c1:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
   151c5:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
   151ca:	01 c2                	add    %eax,%edx
   151cc:	89 f0                	mov    %esi,%eax
   151ce:	41 89 f8             	mov    %edi,%r8d
   151d1:	89 f7                	mov    %esi,%edi
   151d3:	c1 c0 05             	rol    $0x5,%eax
   151d6:	44 31 f9             	xor    %r15d,%ecx
   151d9:	33 4c 24 10          	xor    0x10(%rsp),%ecx
   151dd:	44 09 c7             	or     %r8d,%edi
   151e0:	01 c2                	add    %eax,%edx
   151e2:	d1 c1                	rol    %ecx
   151e4:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   151e9:	89 d0                	mov    %edx,%eax
   151eb:	41 8d 9c 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%ebx
   151f2:	8f 
   151f3:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
   151f7:	89 f1                	mov    %esi,%ecx
   151f9:	c1 c0 05             	rol    $0x5,%eax
   151fc:	44 21 c1             	and    %r8d,%ecx
   151ff:	01 d8                	add    %ebx,%eax
   15201:	89 fb                	mov    %edi,%ebx
   15203:	89 d7                	mov    %edx,%edi
   15205:	44 21 db             	and    %r11d,%ebx
   15208:	09 cb                	or     %ecx,%ebx
   1520a:	89 f1                	mov    %esi,%ecx
   1520c:	01 c3                	add    %eax,%ebx
   1520e:	44 89 c8             	mov    %r9d,%eax
   15211:	c1 c9 02             	ror    $0x2,%ecx
   15214:	31 e8                	xor    %ebp,%eax
   15216:	33 44 24 08          	xor    0x8(%rsp),%eax
   1521a:	33 44 24 24          	xor    0x24(%rsp),%eax
   1521e:	21 cf                	and    %ecx,%edi
   15220:	41 89 c1             	mov    %eax,%r9d
   15223:	89 d0                	mov    %edx,%eax
   15225:	41 89 fa             	mov    %edi,%r10d
   15228:	c1 ca 02             	ror    $0x2,%edx
   1522b:	09 c8                	or     %ecx,%eax
   1522d:	41 d1 c1             	rol    %r9d
   15230:	44 21 c0             	and    %r8d,%eax
   15233:	44 89 0c 24          	mov    %r9d,(%rsp)
   15237:	41 09 c2             	or     %eax,%r10d
   1523a:	43 8d 84 0b dc bc 1b 	lea    -0x70e44324(%r11,%r9,1),%eax
   15241:	8f 
   15242:	41 01 c2             	add    %eax,%r10d
   15245:	89 d8                	mov    %ebx,%eax
   15247:	c1 c0 05             	rol    $0x5,%eax
   1524a:	41 01 c2             	add    %eax,%r10d
   1524d:	44 89 e8             	mov    %r13d,%eax
   15250:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   15255:	44 31 f8             	xor    %r15d,%eax
   15258:	41 89 c1             	mov    %eax,%r9d
   1525b:	45 31 f1             	xor    %r14d,%r9d
   1525e:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
   15263:	44 31 ed             	xor    %r13d,%ebp
   15266:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
   1526a:	45 89 cb             	mov    %r9d,%r11d
   1526d:	44 33 7c 24 04       	xor    0x4(%rsp),%r15d
   15272:	41 d1 c3             	rol    %r11d
   15275:	44 89 ff             	mov    %r15d,%edi
   15278:	43 8d b4 18 dc bc 1b 	lea    -0x70e44324(%r8,%r11,1),%esi
   1527f:	8f 
   15280:	45 89 d0             	mov    %r10d,%r8d
   15283:	44 31 e7             	xor    %r12d,%edi
   15286:	33 3c 24             	xor    (%rsp),%edi
   15289:	41 c1 c0 05          	rol    $0x5,%r8d
   1528d:	41 89 ff             	mov    %edi,%r15d
   15290:	44 01 c6             	add    %r8d,%esi
   15293:	41 89 d8             	mov    %ebx,%r8d
   15296:	41 d1 c7             	rol    %r15d
   15299:	41 09 d0             	or     %edx,%r8d
   1529c:	46 8d 8c 3a dc bc 1b 	lea    -0x70e44324(%rdx,%r15,1),%r9d
   152a3:	8f 
   152a4:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   152a9:	44 89 c0             	mov    %r8d,%eax
   152ac:	41 89 d8             	mov    %ebx,%r8d
   152af:	c1 cb 02             	ror    $0x2,%ebx
   152b2:	41 21 d0             	and    %edx,%r8d
   152b5:	21 c8                	and    %ecx,%eax
   152b7:	44 09 c0             	or     %r8d,%eax
   152ba:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
   152bf:	01 f0                	add    %esi,%eax
   152c1:	44 89 d6             	mov    %r10d,%esi
   152c4:	41 31 e8             	xor    %ebp,%r8d
   152c7:	09 de                	or     %ebx,%esi
   152c9:	41 d1 c0             	rol    %r8d
   152cc:	21 d6                	and    %edx,%esi
   152ce:	44 89 c5             	mov    %r8d,%ebp
   152d1:	45 89 d0             	mov    %r10d,%r8d
   152d4:	41 c1 ca 02          	ror    $0x2,%r10d
   152d8:	41 21 d8             	and    %ebx,%r8d
   152db:	41 09 f0             	or     %esi,%r8d
   152de:	8d b4 29 dc bc 1b 8f 	lea    -0x70e44324(%rcx,%rbp,1),%esi
   152e5:	89 c1                	mov    %eax,%ecx
   152e7:	41 01 f0             	add    %esi,%r8d
   152ea:	c1 c1 05             	rol    $0x5,%ecx
   152ed:	44 89 ee             	mov    %r13d,%esi
   152f0:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   152f5:	41 01 c8             	add    %ecx,%r8d
   152f8:	89 c1                	mov    %eax,%ecx
   152fa:	44 89 c2             	mov    %r8d,%edx
   152fd:	44 21 d1             	and    %r10d,%ecx
   15300:	44 89 c7             	mov    %r8d,%edi
   15303:	c1 c2 05             	rol    $0x5,%edx
   15306:	44 01 ca             	add    %r9d,%edx
   15309:	41 89 c1             	mov    %eax,%r9d
   1530c:	45 09 d1             	or     %r10d,%r9d
   1530f:	41 21 d9             	and    %ebx,%r9d
   15312:	41 09 c9             	or     %ecx,%r9d
   15315:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   15319:	41 01 d1             	add    %edx,%r9d
   1531c:	44 31 ee             	xor    %r13d,%esi
   1531f:	33 74 24 10          	xor    0x10(%rsp),%esi
   15323:	c1 c8 02             	ror    $0x2,%eax
   15326:	44 31 de             	xor    %r11d,%esi
   15329:	21 c7                	and    %eax,%edi
   1532b:	89 f2                	mov    %esi,%edx
   1532d:	d1 c2                	rol    %edx
   1532f:	41 89 d7             	mov    %edx,%r15d
   15332:	44 89 c2             	mov    %r8d,%edx
   15335:	41 c1 c8 02          	ror    $0x2,%r8d
   15339:	09 c2                	or     %eax,%edx
   1533b:	44 21 d2             	and    %r10d,%edx
   1533e:	09 d7                	or     %edx,%edi
   15340:	42 8d 94 3b dc bc 1b 	lea    -0x70e44324(%rbx,%r15,1),%edx
   15347:	8f 
   15348:	8b 5c 24 14          	mov    0x14(%rsp),%ebx
   1534c:	01 d7                	add    %edx,%edi
   1534e:	44 89 ca             	mov    %r9d,%edx
   15351:	c1 c2 05             	rol    $0x5,%edx
   15354:	31 d9                	xor    %ebx,%ecx
   15356:	33 4c 24 24          	xor    0x24(%rsp),%ecx
   1535a:	01 d7                	add    %edx,%edi
   1535c:	31 e9                	xor    %ebp,%ecx
   1535e:	d1 c1                	rol    %ecx
   15360:	89 fa                	mov    %edi,%edx
   15362:	41 8d b4 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%esi
   15369:	8f 
   1536a:	c1 c2 05             	rol    $0x5,%edx
   1536d:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   15371:	44 89 c9             	mov    %r9d,%ecx
   15374:	01 f2                	add    %esi,%edx
   15376:	44 89 ce             	mov    %r9d,%esi
   15379:	44 21 c1             	and    %r8d,%ecx
   1537c:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
   15381:	44 09 c6             	or     %r8d,%esi
   15384:	41 c1 c9 02          	ror    $0x2,%r9d
   15388:	21 c6                	and    %eax,%esi
   1538a:	09 ce                	or     %ecx,%esi
   1538c:	89 f9                	mov    %edi,%ecx
   1538e:	01 d6                	add    %edx,%esi
   15390:	44 89 ea             	mov    %r13d,%edx
   15393:	44 31 d2             	xor    %r10d,%edx
   15396:	33 54 24 18          	xor    0x18(%rsp),%edx
   1539a:	33 54 24 1c          	xor    0x1c(%rsp),%edx
   1539e:	d1 c2                	rol    %edx
   153a0:	41 89 d5             	mov    %edx,%r13d
   153a3:	89 fa                	mov    %edi,%edx
   153a5:	44 09 ca             	or     %r9d,%edx
   153a8:	44 89 6c 24 2c       	mov    %r13d,0x2c(%rsp)
   153ad:	44 21 c2             	and    %r8d,%edx
   153b0:	44 21 c9             	and    %r9d,%ecx
   153b3:	c1 cf 02             	ror    $0x2,%edi
   153b6:	09 d1                	or     %edx,%ecx
   153b8:	42 8d 94 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%edx
   153bf:	8f 
   153c0:	89 f0                	mov    %esi,%eax
   153c2:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   153c7:	01 d1                	add    %edx,%ecx
   153c9:	c1 c0 05             	rol    $0x5,%eax
   153cc:	01 c1                	add    %eax,%ecx
   153ce:	89 d8                	mov    %ebx,%eax
   153d0:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   153d4:	44 31 f0             	xor    %r14d,%eax
   153d7:	31 c3                	xor    %eax,%ebx
   153d9:	44 31 fb             	xor    %r15d,%ebx
   153dc:	89 d8                	mov    %ebx,%eax
   153de:	d1 c0                	rol    %eax
   153e0:	41 8d 94 00 dc bc 1b 	lea    -0x70e44324(%r8,%rax,1),%edx
   153e7:	8f 
   153e8:	41 89 c8             	mov    %ecx,%r8d
   153eb:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   153ef:	8b 1c 24             	mov    (%rsp),%ebx
   153f2:	41 c1 c0 05          	rol    $0x5,%r8d
   153f6:	44 89 c0             	mov    %r8d,%eax
   153f9:	41 89 f0             	mov    %esi,%r8d
   153fc:	01 d0                	add    %edx,%eax
   153fe:	89 f2                	mov    %esi,%edx
   15400:	41 21 f8             	and    %edi,%r8d
   15403:	c1 ce 02             	ror    $0x2,%esi
   15406:	09 fa                	or     %edi,%edx
   15408:	44 21 ca             	and    %r9d,%edx
   1540b:	44 09 c2             	or     %r8d,%edx
   1540e:	45 89 d0             	mov    %r10d,%r8d
   15411:	45 31 e8             	xor    %r13d,%r8d
   15414:	01 c2                	add    %eax,%edx
   15416:	89 c8                	mov    %ecx,%eax
   15418:	41 31 d8             	xor    %ebx,%r8d
   1541b:	44 33 44 24 20       	xor    0x20(%rsp),%r8d
   15420:	21 f0                	and    %esi,%eax
   15422:	41 d1 c0             	rol    %r8d
   15425:	45 89 c2             	mov    %r8d,%r10d
   15428:	41 89 c8             	mov    %ecx,%r8d
   1542b:	c1 c9 02             	ror    $0x2,%ecx
   1542e:	41 09 f0             	or     %esi,%r8d
   15431:	44 89 14 24          	mov    %r10d,(%rsp)
   15435:	41 21 f8             	and    %edi,%r8d
   15438:	44 09 c0             	or     %r8d,%eax
   1543b:	47 8d 84 11 dc bc 1b 	lea    -0x70e44324(%r9,%r10,1),%r8d
   15442:	8f 
   15443:	41 89 d1             	mov    %edx,%r9d
   15446:	44 01 c0             	add    %r8d,%eax
   15449:	41 c1 c1 05          	rol    $0x5,%r9d
   1544d:	41 89 d0             	mov    %edx,%r8d
   15450:	44 01 c8             	add    %r9d,%eax
   15453:	45 89 f1             	mov    %r14d,%r9d
   15456:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   1545b:	45 31 e1             	xor    %r12d,%r9d
   1545e:	45 31 d9             	xor    %r11d,%r9d
   15461:	44 33 4c 24 2c       	xor    0x2c(%rsp),%r9d
   15466:	41 21 c8             	and    %ecx,%r8d
   15469:	41 d1 c1             	rol    %r9d
   1546c:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
   15471:	46 8d 94 0f dc bc 1b 	lea    -0x70e44324(%rdi,%r9,1),%r10d
   15478:	8f 
   15479:	89 c7                	mov    %eax,%edi
   1547b:	41 89 d1             	mov    %edx,%r9d
   1547e:	c1 c7 05             	rol    $0x5,%edi
   15481:	41 09 c9             	or     %ecx,%r9d
   15484:	c1 ca 02             	ror    $0x2,%edx
   15487:	44 01 d7             	add    %r10d,%edi
   1548a:	45 89 ca             	mov    %r9d,%r10d
   1548d:	41 21 f2             	and    %esi,%r10d
   15490:	45 09 c2             	or     %r8d,%r10d
   15493:	45 89 e8             	mov    %r13d,%r8d
   15496:	45 31 f0             	xor    %r14d,%r8d
   15499:	41 01 fa             	add    %edi,%r10d
   1549c:	41 31 e8             	xor    %ebp,%r8d
   1549f:	44 33 44 24 3c       	xor    0x3c(%rsp),%r8d
   154a4:	44 89 c7             	mov    %r8d,%edi
   154a7:	d1 c7                	rol    %edi
   154a9:	41 89 fd             	mov    %edi,%r13d
   154ac:	89 c7                	mov    %eax,%edi
   154ae:	09 d7                	or     %edx,%edi
   154b0:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
   154b5:	41 89 f8             	mov    %edi,%r8d
   154b8:	89 c7                	mov    %eax,%edi
   154ba:	c1 c8 02             	ror    $0x2,%eax
   154bd:	41 21 c8             	and    %ecx,%r8d
   154c0:	21 d7                	and    %edx,%edi
   154c2:	44 09 c7             	or     %r8d,%edi
   154c5:	46 8d 84 2e dc bc 1b 	lea    -0x70e44324(%rsi,%r13,1),%r8d
   154cc:	8f 
   154cd:	44 89 d6             	mov    %r10d,%esi
   154d0:	44 8b 6c 24 24       	mov    0x24(%rsp),%r13d
   154d5:	44 01 c7             	add    %r8d,%edi
   154d8:	c1 c6 05             	rol    $0x5,%esi
   154db:	41 89 c0             	mov    %eax,%r8d
   154de:	01 f7                	add    %esi,%edi
   154e0:	44 89 e6             	mov    %r12d,%esi
   154e3:	44 31 ee             	xor    %r13d,%esi
   154e6:	33 74 24 1c          	xor    0x1c(%rsp),%esi
   154ea:	33 34 24             	xor    (%rsp),%esi
   154ed:	d1 c6                	rol    %esi
   154ef:	41 89 f4             	mov    %esi,%r12d
   154f2:	89 d6                	mov    %edx,%esi
   154f4:	31 c6                	xor    %eax,%esi
   154f6:	42 8d 8c 21 d6 c1 62 	lea    -0x359d3e2a(%rcx,%r12,1),%ecx
   154fd:	ca 
   154fe:	44 89 64 24 0c       	mov    %r12d,0xc(%rsp)
   15503:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
   15508:	44 31 d6             	xor    %r10d,%esi
   1550b:	41 c1 ca 02          	ror    $0x2,%r10d
   1550f:	01 ce                	add    %ecx,%esi
   15511:	89 f9                	mov    %edi,%ecx
   15513:	c1 c1 05             	rol    $0x5,%ecx
   15516:	01 ce                	add    %ecx,%esi
   15518:	45 31 e6             	xor    %r12d,%r14d
   1551b:	45 31 d0             	xor    %r10d,%r8d
   1551e:	44 89 e9             	mov    %r13d,%ecx
   15521:	45 89 f1             	mov    %r14d,%r9d
   15524:	41 31 f8             	xor    %edi,%r8d
   15527:	c1 cf 02             	ror    $0x2,%edi
   1552a:	45 31 f9             	xor    %r15d,%r9d
   1552d:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
   15532:	45 89 ce             	mov    %r9d,%r14d
   15535:	41 89 d9             	mov    %ebx,%r9d
   15538:	41 d1 c6             	rol    %r14d
   1553b:	44 89 74 24 10       	mov    %r14d,0x10(%rsp)
   15540:	42 8d 94 32 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r14,1),%edx
   15547:	ca 
   15548:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
   1554d:	41 01 d0             	add    %edx,%r8d
   15550:	89 f2                	mov    %esi,%edx
   15552:	c1 c2 05             	rol    $0x5,%edx
   15555:	44 31 f1             	xor    %r14d,%ecx
   15558:	33 4c 24 20          	xor    0x20(%rsp),%ecx
   1555c:	33 4c 24 08          	xor    0x8(%rsp),%ecx
   15560:	41 01 d0             	add    %edx,%r8d
   15563:	41 89 cd             	mov    %ecx,%r13d
   15566:	44 89 d2             	mov    %r10d,%edx
   15569:	89 f9                	mov    %edi,%ecx
   1556b:	41 d1 c5             	rol    %r13d
   1556e:	31 fa                	xor    %edi,%edx
   15570:	31 f2                	xor    %esi,%edx
   15572:	42 8d 84 28 d6 c1 62 	lea    -0x359d3e2a(%rax,%r13,1),%eax
   15579:	ca 
   1557a:	c1 ce 02             	ror    $0x2,%esi
   1557d:	44 89 6c 24 14       	mov    %r13d,0x14(%rsp)
   15582:	01 c2                	add    %eax,%edx
   15584:	44 89 c0             	mov    %r8d,%eax
   15587:	31 f1                	xor    %esi,%ecx
   15589:	c1 c0 05             	rol    $0x5,%eax
   1558c:	41 89 cd             	mov    %ecx,%r13d
   1558f:	44 89 f1             	mov    %r14d,%ecx
   15592:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   15597:	01 c2                	add    %eax,%edx
   15599:	44 89 e0             	mov    %r12d,%eax
   1559c:	45 31 c5             	xor    %r8d,%r13d
   1559f:	44 31 d9             	xor    %r11d,%ecx
   155a2:	31 d8                	xor    %ebx,%eax
   155a4:	33 44 24 2c          	xor    0x2c(%rsp),%eax
   155a8:	33 44 24 0c          	xor    0xc(%rsp),%eax
   155ac:	41 c1 c8 02          	ror    $0x2,%r8d
   155b0:	d1 c0                	rol    %eax
   155b2:	44 31 f1             	xor    %r14d,%ecx
   155b5:	41 89 f4             	mov    %esi,%r12d
   155b8:	89 44 24 18          	mov    %eax,0x18(%rsp)
   155bc:	41 8d 84 02 d6 c1 62 	lea    -0x359d3e2a(%r10,%rax,1),%eax
   155c3:	ca 
   155c4:	41 01 c5             	add    %eax,%r13d
   155c7:	89 d0                	mov    %edx,%eax
   155c9:	c1 c0 05             	rol    $0x5,%eax
   155cc:	41 01 c5             	add    %eax,%r13d
   155cf:	33 4c 24 10          	xor    0x10(%rsp),%ecx
   155d3:	45 31 c4             	xor    %r8d,%r12d
   155d6:	89 cb                	mov    %ecx,%ebx
   155d8:	41 31 d4             	xor    %edx,%r12d
   155db:	c1 ca 02             	ror    $0x2,%edx
   155de:	d1 c3                	rol    %ebx
   155e0:	41 89 d2             	mov    %edx,%r10d
   155e3:	8d 84 1f d6 c1 62 ca 	lea    -0x359d3e2a(%rdi,%rbx,1),%eax
   155ea:	44 89 ef             	mov    %r13d,%edi
   155ed:	89 5c 24 54          	mov    %ebx,0x54(%rsp)
   155f1:	41 01 c4             	add    %eax,%r12d
   155f4:	c1 c7 05             	rol    $0x5,%edi
   155f7:	44 89 c8             	mov    %r9d,%eax
   155fa:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
   155fe:	41 01 fc             	add    %edi,%r12d
   15601:	44 89 c7             	mov    %r8d,%edi
   15604:	31 e8                	xor    %ebp,%eax
   15606:	33 04 24             	xor    (%rsp),%eax
   15609:	31 d7                	xor    %edx,%edi
   1560b:	33 44 24 14          	xor    0x14(%rsp),%eax
   1560f:	45 89 d9             	mov    %r11d,%r9d
   15612:	d1 c0                	rol    %eax
   15614:	89 fb                	mov    %edi,%ebx
   15616:	8d 8c 06 d6 c1 62 ca 	lea    -0x359d3e2a(%rsi,%rax,1),%ecx
   1561d:	44 31 eb             	xor    %r13d,%ebx
   15620:	44 89 e6             	mov    %r12d,%esi
   15623:	41 c1 cd 02          	ror    $0x2,%r13d
   15627:	01 cb                	add    %ecx,%ebx
   15629:	c1 c6 05             	rol    $0x5,%esi
   1562c:	45 31 ea             	xor    %r13d,%r10d
   1562f:	89 44 24 58          	mov    %eax,0x58(%rsp)
   15633:	01 f3                	add    %esi,%ebx
   15635:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   15639:	45 31 e2             	xor    %r12d,%r10d
   1563c:	45 89 eb             	mov    %r13d,%r11d
   1563f:	41 c1 cc 02          	ror    $0x2,%r12d
   15643:	41 31 f1             	xor    %esi,%r9d
   15646:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
   1564b:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
   15650:	41 d1 c1             	rol    %r9d
   15653:	43 8d 8c 08 d6 c1 62 	lea    -0x359d3e2a(%r8,%r9,1),%ecx
   1565a:	ca 
   1565b:	41 89 d8             	mov    %ebx,%r8d
   1565e:	44 89 4c 24 5c       	mov    %r9d,0x5c(%rsp)
   15663:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   15667:	41 01 ca             	add    %ecx,%r10d
   1566a:	41 c1 c0 05          	rol    $0x5,%r8d
   1566e:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   15672:	45 01 c2             	add    %r8d,%r10d
   15675:	41 89 e8             	mov    %ebp,%r8d
   15678:	45 31 f8             	xor    %r15d,%r8d
   1567b:	44 33 44 24 08       	xor    0x8(%rsp),%r8d
   15680:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
   15685:	41 d1 c0             	rol    %r8d
   15688:	45 31 e3             	xor    %r12d,%r11d
   1568b:	31 ce                	xor    %ecx,%esi
   1568d:	44 31 f1             	xor    %r14d,%ecx
   15690:	41 31 db             	xor    %ebx,%r11d
   15693:	42 8d 94 02 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r8,1),%edx
   1569a:	ca 
   1569b:	31 f7                	xor    %esi,%edi
   1569d:	c1 cb 02             	ror    $0x2,%ebx
   156a0:	41 01 d3             	add    %edx,%r11d
   156a3:	44 89 d2             	mov    %r10d,%edx
   156a6:	31 c7                	xor    %eax,%edi
   156a8:	8b 74 24 10          	mov    0x10(%rsp),%esi
   156ac:	c1 c2 05             	rol    $0x5,%edx
   156af:	d1 c7                	rol    %edi
   156b1:	33 4c 24 14          	xor    0x14(%rsp),%ecx
   156b5:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
   156ba:	41 01 d3             	add    %edx,%r11d
   156bd:	44 89 e2             	mov    %r12d,%edx
   156c0:	44 31 c1             	xor    %r8d,%ecx
   156c3:	89 7c 24 64          	mov    %edi,0x64(%rsp)
   156c7:	31 da                	xor    %ebx,%edx
   156c9:	d1 c1                	rol    %ecx
   156cb:	89 d5                	mov    %edx,%ebp
   156cd:	41 8d 94 3d d6 c1 62 	lea    -0x359d3e2a(%r13,%rdi,1),%edx
   156d4:	ca 
   156d5:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   156da:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
   156de:	44 31 d5             	xor    %r10d,%ebp
   156e1:	41 c1 ca 02          	ror    $0x2,%r10d
   156e5:	45 31 ef             	xor    %r13d,%r15d
   156e8:	01 d5                	add    %edx,%ebp
   156ea:	44 89 da             	mov    %r11d,%edx
   156ed:	44 31 fe             	xor    %r15d,%esi
   156f0:	41 89 df             	mov    %ebx,%r15d
   156f3:	c1 c2 05             	rol    $0x5,%edx
   156f6:	44 31 ce             	xor    %r9d,%esi
   156f9:	45 31 d7             	xor    %r10d,%r15d
   156fc:	01 d5                	add    %edx,%ebp
   156fe:	d1 c6                	rol    %esi
   15700:	45 31 df             	xor    %r11d,%r15d
   15703:	41 c1 cb 02          	ror    $0x2,%r11d
   15707:	41 8d 94 34 d6 c1 62 	lea    -0x359d3e2a(%r12,%rsi,1),%edx
   1570e:	ca 
   1570f:	45 89 f4             	mov    %r14d,%r12d
   15712:	45 89 d6             	mov    %r10d,%r14d
   15715:	89 74 24 68          	mov    %esi,0x68(%rsp)
   15719:	41 01 d7             	add    %edx,%r15d
   1571c:	89 ea                	mov    %ebp,%edx
   1571e:	45 31 de             	xor    %r11d,%r14d
   15721:	c1 c2 05             	rol    $0x5,%edx
   15724:	41 31 ee             	xor    %ebp,%r14d
   15727:	41 01 d7             	add    %edx,%r15d
   1572a:	8d 94 0b d6 c1 62 ca 	lea    -0x359d3e2a(%rbx,%rcx,1),%edx
   15731:	8b 5c 24 24          	mov    0x24(%rsp),%ebx
   15735:	41 01 d6             	add    %edx,%r14d
   15738:	44 89 fa             	mov    %r15d,%edx
   1573b:	c1 cd 02             	ror    $0x2,%ebp
   1573e:	44 33 64 24 04       	xor    0x4(%rsp),%r12d
   15743:	c1 c2 05             	rol    $0x5,%edx
   15746:	44 31 e3             	xor    %r12d,%ebx
   15749:	44 8b 24 24          	mov    (%rsp),%r12d
   1574d:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
   15752:	41 01 d6             	add    %edx,%r14d
   15755:	8b 14 24             	mov    (%rsp),%edx
   15758:	31 f3                	xor    %esi,%ebx
   1575a:	d1 c3                	rol    %ebx
   1575c:	44 31 ea             	xor    %r13d,%edx
   1575f:	33 54 24 18          	xor    0x18(%rsp),%edx
   15763:	45 89 dd             	mov    %r11d,%r13d
   15766:	89 5c 24 74          	mov    %ebx,0x74(%rsp)
   1576a:	31 fa                	xor    %edi,%edx
   1576c:	41 31 ed             	xor    %ebp,%r13d
   1576f:	45 8d 9c 1b d6 c1 62 	lea    -0x359d3e2a(%r11,%rbx,1),%r11d
   15776:	ca 
   15777:	d1 c2                	rol    %edx
   15779:	45 31 fd             	xor    %r15d,%r13d
   1577c:	41 c1 cf 02          	ror    $0x2,%r15d
   15780:	45 8d 94 12 d6 c1 62 	lea    -0x359d3e2a(%r10,%rdx,1),%r10d
   15787:	ca 
   15788:	89 54 24 70          	mov    %edx,0x70(%rsp)
   1578c:	45 01 d5             	add    %r10d,%r13d
   1578f:	45 89 f2             	mov    %r14d,%r10d
   15792:	41 c1 c2 05          	rol    $0x5,%r10d
   15796:	45 01 d5             	add    %r10d,%r13d
   15799:	41 89 ea             	mov    %ebp,%r10d
   1579c:	45 31 fa             	xor    %r15d,%r10d
   1579f:	45 31 f2             	xor    %r14d,%r10d
   157a2:	41 c1 ce 02          	ror    $0x2,%r14d
   157a6:	45 01 da             	add    %r11d,%r10d
   157a9:	45 89 eb             	mov    %r13d,%r11d
   157ac:	41 c1 c3 05          	rol    $0x5,%r11d
   157b0:	45 01 da             	add    %r11d,%r10d
   157b3:	45 89 e3             	mov    %r12d,%r11d
   157b6:	45 89 fc             	mov    %r15d,%r12d
   157b9:	41 31 c3             	xor    %eax,%r11d
   157bc:	45 31 f4             	xor    %r14d,%r12d
   157bf:	41 31 cb             	xor    %ecx,%r11d
   157c2:	45 31 ec             	xor    %r13d,%r12d
   157c5:	41 d1 c3             	rol    %r11d
   157c8:	42 8d ac 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%ebp
   157cf:	ca 
   157d0:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   157d5:	41 01 ec             	add    %ebp,%r12d
   157d8:	44 89 d5             	mov    %r10d,%ebp
   157db:	c1 c5 05             	rol    $0x5,%ebp
   157de:	41 01 ec             	add    %ebp,%r12d
   157e1:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
   157e5:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
   157e9:	41 c1 cd 02          	ror    $0x2,%r13d
   157ed:	41 31 e9             	xor    %ebp,%r9d
   157f0:	44 89 f5             	mov    %r14d,%ebp
   157f3:	41 31 d1             	xor    %edx,%r9d
   157f6:	44 31 ed             	xor    %r13d,%ebp
   157f9:	41 d1 c1             	rol    %r9d
   157fc:	44 31 d5             	xor    %r10d,%ebp
   157ff:	47 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%r15d
   15806:	ca 
   15807:	44 89 4c 24 7c       	mov    %r9d,0x7c(%rsp)
   1580c:	44 01 fd             	add    %r15d,%ebp
   1580f:	45 89 e7             	mov    %r12d,%r15d
   15812:	41 c1 c7 05          	rol    $0x5,%r15d
   15816:	44 01 fd             	add    %r15d,%ebp
   15819:	45 89 d7             	mov    %r10d,%r15d
   1581c:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
   15821:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
   15826:	45 31 d0             	xor    %r10d,%r8d
   15829:	41 c1 cf 02          	ror    $0x2,%r15d
   1582d:	44 31 c3             	xor    %r8d,%ebx
   15830:	45 89 e8             	mov    %r13d,%r8d
   15833:	d1 c3                	rol    %ebx
   15835:	45 31 f8             	xor    %r15d,%r8d
   15838:	45 31 e0             	xor    %r12d,%r8d
   1583b:	45 8d b4 1e d6 c1 62 	lea    -0x359d3e2a(%r14,%rbx,1),%r14d
   15842:	ca 
   15843:	41 c1 cc 02          	ror    $0x2,%r12d
   15847:	89 9c 24 80 00 00 00 	mov    %ebx,0x80(%rsp)
   1584e:	45 01 f0             	add    %r14d,%r8d
   15851:	41 89 ee             	mov    %ebp,%r14d
   15854:	41 c1 c6 05          	rol    $0x5,%r14d
   15858:	45 01 c6             	add    %r8d,%r14d
   1585b:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   15860:	44 33 44 24 14       	xor    0x14(%rsp),%r8d
   15865:	44 31 c7             	xor    %r8d,%edi
   15868:	45 89 f0             	mov    %r14d,%r8d
   1586b:	41 31 fb             	xor    %edi,%r11d
   1586e:	44 89 ff             	mov    %r15d,%edi
   15871:	41 c1 c0 05          	rol    $0x5,%r8d
   15875:	41 d1 c3             	rol    %r11d
   15878:	44 31 e7             	xor    %r12d,%edi
   1587b:	47 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%r13,%r11,1),%r10d
   15882:	ca 
   15883:	31 ef                	xor    %ebp,%edi
   15885:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   1588a:	c1 cd 02             	ror    $0x2,%ebp
   1588d:	44 01 d7             	add    %r10d,%edi
   15890:	45 89 c2             	mov    %r8d,%r10d
   15893:	44 89 9c 24 84 00 00 	mov    %r11d,0x84(%rsp)
   1589a:	00 
   1589b:	41 01 fa             	add    %edi,%r10d
   1589e:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   158a2:	44 31 ef             	xor    %r13d,%edi
   158a5:	44 31 e8             	xor    %r13d,%eax
   158a8:	31 fe                	xor    %edi,%esi
   158aa:	31 c2                	xor    %eax,%edx
   158ac:	41 31 f1             	xor    %esi,%r9d
   158af:	44 89 e6             	mov    %r12d,%esi
   158b2:	41 31 d3             	xor    %edx,%r11d
   158b5:	31 ee                	xor    %ebp,%esi
   158b7:	41 d1 c1             	rol    %r9d
   158ba:	44 31 f6             	xor    %r14d,%esi
   158bd:	41 c1 ce 02          	ror    $0x2,%r14d
   158c1:	44 89 8c 24 88 00 00 	mov    %r9d,0x88(%rsp)
   158c8:	00 
   158c9:	43 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%edi
   158d0:	ca 
   158d1:	44 89 b4 24 a4 00 00 	mov    %r14d,0xa4(%rsp)
   158d8:	00 
   158d9:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   158de:	01 fe                	add    %edi,%esi
   158e0:	44 89 d7             	mov    %r10d,%edi
   158e3:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
   158e8:	c1 c7 05             	rol    $0x5,%edi
   158eb:	44 89 f0             	mov    %r14d,%eax
   158ee:	44 89 5c 24 50       	mov    %r11d,0x50(%rsp)
   158f3:	44 31 c1             	xor    %r8d,%ecx
   158f6:	01 fe                	add    %edi,%esi
   158f8:	41 d1 c3             	rol    %r11d
   158fb:	31 cb                	xor    %ecx,%ebx
   158fd:	89 e9                	mov    %ebp,%ecx
   158ff:	42 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%edx
   15906:	ca 
   15907:	44 89 9c 24 90 00 00 	mov    %r11d,0x90(%rsp)
   1590e:	00 
   1590f:	d1 c3                	rol    %ebx
   15911:	44 31 f1             	xor    %r14d,%ecx
   15914:	44 31 d1             	xor    %r10d,%ecx
   15917:	41 8d bc 1c d6 c1 62 	lea    -0x359d3e2a(%r12,%rbx,1),%edi
   1591e:	ca 
   1591f:	41 c1 ca 02          	ror    $0x2,%r10d
   15923:	89 9c 24 8c 00 00 00 	mov    %ebx,0x8c(%rsp)
   1592a:	01 f9                	add    %edi,%ecx
   1592c:	89 f7                	mov    %esi,%edi
   1592e:	44 31 d0             	xor    %r10d,%eax
   15931:	44 89 94 24 a0 00 00 	mov    %r10d,0xa0(%rsp)
   15938:	00 
   15939:	c1 c7 05             	rol    $0x5,%edi
   1593c:	31 f0                	xor    %esi,%eax
   1593e:	c1 ce 02             	ror    $0x2,%esi
   15941:	01 f9                	add    %edi,%ecx
   15943:	01 d0                	add    %edx,%eax
   15945:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1594a:	89 b4 24 9c 00 00 00 	mov    %esi,0x9c(%rsp)
   15951:	89 ca                	mov    %ecx,%edx
   15953:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%rsp)
   1595a:	03 4c 24 44          	add    0x44(%rsp),%ecx
   1595e:	c1 c2 05             	rol    $0x5,%edx
   15961:	89 4f 0c             	mov    %ecx,0xc(%rdi)
   15964:	01 d0                	add    %edx,%eax
   15966:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
   1596d:	03 44 24 40          	add    0x40(%rsp),%eax
   15971:	03 74 24 48          	add    0x48(%rsp),%esi
   15975:	44 03 54 24 4c       	add    0x4c(%rsp),%r10d
   1597a:	89 47 08             	mov    %eax,0x8(%rdi)
   1597d:	44 03 74 24 38       	add    0x38(%rsp),%r14d
   15982:	89 77 10             	mov    %esi,0x10(%rdi)
   15985:	be 58 00 00 00       	mov    $0x58,%esi
   1598a:	44 89 57 14          	mov    %r10d,0x14(%rdi)
   1598e:	44 89 77 18          	mov    %r14d,0x18(%rdi)
   15992:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   15997:	e8 94 cf ff ff       	callq  12930 <mbedtls_platform_zeroize>
   1599c:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   159a3:	00 
   159a4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   159ab:	00 00 
   159ad:	75 14                	jne    159c3 <mbedtls_internal_sha1_process+0x1273>
   159af:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   159b6:	31 c0                	xor    %eax,%eax
   159b8:	5b                   	pop    %rbx
   159b9:	5d                   	pop    %rbp
   159ba:	41 5c                	pop    %r12
   159bc:	41 5d                	pop    %r13
   159be:	41 5e                	pop    %r14
   159c0:	41 5f                	pop    %r15
   159c2:	c3                   	retq   
   159c3:	e8 b8 d8 fe ff       	callq  3280 <__stack_chk_fail@plt>
   159c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   159cf:	00 

00000000000159d0 <mbedtls_sha1_update.part.0>:
   159d0:	41 56                	push   %r14
   159d2:	41 55                	push   %r13
   159d4:	41 54                	push   %r12
   159d6:	49 89 fc             	mov    %rdi,%r12
   159d9:	55                   	push   %rbp
   159da:	48 89 f5             	mov    %rsi,%rbp
   159dd:	53                   	push   %rbx
   159de:	8b 07                	mov    (%rdi),%eax
   159e0:	48 89 d3             	mov    %rdx,%rbx
   159e3:	ba 40 00 00 00       	mov    $0x40,%edx
   159e8:	41 89 c5             	mov    %eax,%r13d
   159eb:	41 83 e5 3f          	and    $0x3f,%r13d
   159ef:	44 29 ea             	sub    %r13d,%edx
   159f2:	01 d8                	add    %ebx,%eax
   159f4:	89 07                	mov    %eax,(%rdi)
   159f6:	41 89 d6             	mov    %edx,%r14d
   159f9:	73 04                	jae    159ff <mbedtls_sha1_update.part.0+0x2f>
   159fb:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   159ff:	45 85 ed             	test   %r13d,%r13d
   15a02:	74 05                	je     15a09 <mbedtls_sha1_update.part.0+0x39>
   15a04:	49 39 de             	cmp    %rbx,%r14
   15a07:	76 37                	jbe    15a40 <mbedtls_sha1_update.part.0+0x70>
   15a09:	48 83 fb 3f          	cmp    $0x3f,%rbx
   15a0d:	77 17                	ja     15a26 <mbedtls_sha1_update.part.0+0x56>
   15a0f:	eb 7f                	jmp    15a90 <mbedtls_sha1_update.part.0+0xc0>
   15a11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15a18:	48 83 eb 40          	sub    $0x40,%rbx
   15a1c:	48 83 c5 40          	add    $0x40,%rbp
   15a20:	48 83 fb 3f          	cmp    $0x3f,%rbx
   15a24:	76 6a                	jbe    15a90 <mbedtls_sha1_update.part.0+0xc0>
   15a26:	48 89 ee             	mov    %rbp,%rsi
   15a29:	4c 89 e7             	mov    %r12,%rdi
   15a2c:	e8 1f ed ff ff       	callq  14750 <mbedtls_internal_sha1_process>
   15a31:	85 c0                	test   %eax,%eax
   15a33:	74 e3                	je     15a18 <mbedtls_sha1_update.part.0+0x48>
   15a35:	5b                   	pop    %rbx
   15a36:	5d                   	pop    %rbp
   15a37:	41 5c                	pop    %r12
   15a39:	41 5d                	pop    %r13
   15a3b:	41 5e                	pop    %r14
   15a3d:	c3                   	retq   
   15a3e:	66 90                	xchg   %ax,%ax
   15a40:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
   15a45:	4d 01 c5             	add    %r8,%r13
   15a48:	83 fa 08             	cmp    $0x8,%edx
   15a4b:	0f 83 87 00 00 00    	jae    15ad8 <mbedtls_sha1_update.part.0+0x108>
   15a51:	f6 c2 04             	test   $0x4,%dl
   15a54:	0f 85 19 01 00 00    	jne    15b73 <mbedtls_sha1_update.part.0+0x1a3>
   15a5a:	85 d2                	test   %edx,%edx
   15a5c:	74 11                	je     15a6f <mbedtls_sha1_update.part.0+0x9f>
   15a5e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   15a62:	83 e2 02             	and    $0x2,%edx
   15a65:	41 88 45 00          	mov    %al,0x0(%r13)
   15a69:	0f 85 30 01 00 00    	jne    15b9f <mbedtls_sha1_update.part.0+0x1cf>
   15a6f:	4c 89 c6             	mov    %r8,%rsi
   15a72:	4c 89 e7             	mov    %r12,%rdi
   15a75:	e8 d6 ec ff ff       	callq  14750 <mbedtls_internal_sha1_process>
   15a7a:	85 c0                	test   %eax,%eax
   15a7c:	75 b7                	jne    15a35 <mbedtls_sha1_update.part.0+0x65>
   15a7e:	4c 01 f5             	add    %r14,%rbp
   15a81:	4c 29 f3             	sub    %r14,%rbx
   15a84:	45 31 ed             	xor    %r13d,%r13d
   15a87:	eb 80                	jmp    15a09 <mbedtls_sha1_update.part.0+0x39>
   15a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15a90:	31 c0                	xor    %eax,%eax
   15a92:	48 85 db             	test   %rbx,%rbx
   15a95:	74 9e                	je     15a35 <mbedtls_sha1_update.part.0+0x65>
   15a97:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
   15a9c:	89 d8                	mov    %ebx,%eax
   15a9e:	83 fb 08             	cmp    $0x8,%ebx
   15aa1:	0f 83 7e 00 00 00    	jae    15b25 <mbedtls_sha1_update.part.0+0x155>
   15aa7:	83 e3 04             	and    $0x4,%ebx
   15aaa:	0f 85 d9 00 00 00    	jne    15b89 <mbedtls_sha1_update.part.0+0x1b9>
   15ab0:	85 c0                	test   %eax,%eax
   15ab2:	74 16                	je     15aca <mbedtls_sha1_update.part.0+0xfa>
   15ab4:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   15ab8:	88 11                	mov    %dl,(%rcx)
   15aba:	a8 02                	test   $0x2,%al
   15abc:	74 0c                	je     15aca <mbedtls_sha1_update.part.0+0xfa>
   15abe:	89 c2                	mov    %eax,%edx
   15ac0:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   15ac5:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   15aca:	31 c0                	xor    %eax,%eax
   15acc:	5b                   	pop    %rbx
   15acd:	5d                   	pop    %rbp
   15ace:	41 5c                	pop    %r12
   15ad0:	41 5d                	pop    %r13
   15ad2:	41 5e                	pop    %r14
   15ad4:	c3                   	retq   
   15ad5:	0f 1f 00             	nopl   (%rax)
   15ad8:	48 8b 45 00          	mov    0x0(%rbp),%rax
   15adc:	49 8d 75 08          	lea    0x8(%r13),%rsi
   15ae0:	49 89 e9             	mov    %rbp,%r9
   15ae3:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   15ae7:	49 89 45 00          	mov    %rax,0x0(%r13)
   15aeb:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
   15af0:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
   15af5:	49 29 f5             	sub    %rsi,%r13
   15af8:	44 01 ea             	add    %r13d,%edx
   15afb:	4d 29 e9             	sub    %r13,%r9
   15afe:	83 e2 f8             	and    $0xfffffff8,%edx
   15b01:	83 fa 08             	cmp    $0x8,%edx
   15b04:	0f 82 65 ff ff ff    	jb     15a6f <mbedtls_sha1_update.part.0+0x9f>
   15b0a:	83 e2 f8             	and    $0xfffffff8,%edx
   15b0d:	31 c0                	xor    %eax,%eax
   15b0f:	89 c1                	mov    %eax,%ecx
   15b11:	83 c0 08             	add    $0x8,%eax
   15b14:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   15b18:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   15b1c:	39 d0                	cmp    %edx,%eax
   15b1e:	72 ef                	jb     15b0f <mbedtls_sha1_update.part.0+0x13f>
   15b20:	e9 4a ff ff ff       	jmpq   15a6f <mbedtls_sha1_update.part.0+0x9f>
   15b25:	48 8b 45 00          	mov    0x0(%rbp),%rax
   15b29:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   15b2d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   15b31:	48 89 01             	mov    %rax,(%rcx)
   15b34:	89 d8                	mov    %ebx,%eax
   15b36:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
   15b3b:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   15b40:	48 29 f1             	sub    %rsi,%rcx
   15b43:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   15b46:	48 29 cd             	sub    %rcx,%rbp
   15b49:	83 e0 f8             	and    $0xfffffff8,%eax
   15b4c:	83 f8 08             	cmp    $0x8,%eax
   15b4f:	0f 82 75 ff ff ff    	jb     15aca <mbedtls_sha1_update.part.0+0xfa>
   15b55:	83 e0 f8             	and    $0xfffffff8,%eax
   15b58:	31 d2                	xor    %edx,%edx
   15b5a:	89 d1                	mov    %edx,%ecx
   15b5c:	83 c2 08             	add    $0x8,%edx
   15b5f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   15b64:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   15b68:	39 c2                	cmp    %eax,%edx
   15b6a:	72 ee                	jb     15b5a <mbedtls_sha1_update.part.0+0x18a>
   15b6c:	31 c0                	xor    %eax,%eax
   15b6e:	e9 59 ff ff ff       	jmpq   15acc <mbedtls_sha1_update.part.0+0xfc>
   15b73:	8b 45 00             	mov    0x0(%rbp),%eax
   15b76:	41 89 45 00          	mov    %eax,0x0(%r13)
   15b7a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
   15b7f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
   15b84:	e9 e6 fe ff ff       	jmpq   15a6f <mbedtls_sha1_update.part.0+0x9f>
   15b89:	8b 55 00             	mov    0x0(%rbp),%edx
   15b8c:	89 11                	mov    %edx,(%rcx)
   15b8e:	89 c2                	mov    %eax,%edx
   15b90:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   15b94:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   15b98:	31 c0                	xor    %eax,%eax
   15b9a:	e9 2d ff ff ff       	jmpq   15acc <mbedtls_sha1_update.part.0+0xfc>
   15b9f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
   15ba5:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
   15bab:	e9 bf fe ff ff       	jmpq   15a6f <mbedtls_sha1_update.part.0+0x9f>

0000000000015bb0 <mbedtls_sha1_update>:
   15bb0:	f3 0f 1e fa          	endbr64 
   15bb4:	48 85 d2             	test   %rdx,%rdx
   15bb7:	74 07                	je     15bc0 <mbedtls_sha1_update+0x10>
   15bb9:	e9 12 fe ff ff       	jmpq   159d0 <mbedtls_sha1_update.part.0>
   15bbe:	66 90                	xchg   %ax,%ax
   15bc0:	31 c0                	xor    %eax,%eax
   15bc2:	c3                   	retq   
   15bc3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15bca:	00 00 00 00 
   15bce:	66 90                	xchg   %ax,%ax

0000000000015bd0 <mbedtls_sha1_finish>:
   15bd0:	f3 0f 1e fa          	endbr64 
   15bd4:	41 54                	push   %r12
   15bd6:	4c 8d 67 1c          	lea    0x1c(%rdi),%r12
   15bda:	55                   	push   %rbp
   15bdb:	48 89 f5             	mov    %rsi,%rbp
   15bde:	53                   	push   %rbx
   15bdf:	8b 07                	mov    (%rdi),%eax
   15be1:	48 89 fb             	mov    %rdi,%rbx
   15be4:	83 e0 3f             	and    $0x3f,%eax
   15be7:	8d 48 01             	lea    0x1(%rax),%ecx
   15bea:	c6 44 07 1c 80       	movb   $0x80,0x1c(%rdi,%rax,1)
   15bef:	89 c8                	mov    %ecx,%eax
   15bf1:	4c 01 e0             	add    %r12,%rax
   15bf4:	83 f9 38             	cmp    $0x38,%ecx
   15bf7:	77 57                	ja     15c50 <mbedtls_sha1_finish+0x80>
   15bf9:	ba 38 00 00 00       	mov    $0x38,%edx
   15bfe:	31 ff                	xor    %edi,%edi
   15c00:	29 ca                	sub    %ecx,%edx
   15c02:	83 fa 08             	cmp    $0x8,%edx
   15c05:	72 79                	jb     15c80 <mbedtls_sha1_finish+0xb0>
   15c07:	89 d1                	mov    %edx,%ecx
   15c09:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15c10:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   15c17:	00 00 
   15c19:	48 8d 48 08          	lea    0x8(%rax),%rcx
   15c1d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   15c21:	48 29 c8             	sub    %rcx,%rax
   15c24:	01 c2                	add    %eax,%edx
   15c26:	83 e2 f8             	and    $0xfffffff8,%edx
   15c29:	83 fa 08             	cmp    $0x8,%edx
   15c2c:	0f 82 8b 00 00 00    	jb     15cbd <mbedtls_sha1_finish+0xed>
   15c32:	83 e2 f8             	and    $0xfffffff8,%edx
   15c35:	31 c0                	xor    %eax,%eax
   15c37:	89 c6                	mov    %eax,%esi
   15c39:	83 c0 08             	add    $0x8,%eax
   15c3c:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   15c40:	39 d0                	cmp    %edx,%eax
   15c42:	72 f3                	jb     15c37 <mbedtls_sha1_finish+0x67>
   15c44:	eb 77                	jmp    15cbd <mbedtls_sha1_finish+0xed>
   15c46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15c4d:	00 00 00 
   15c50:	ba 40 00 00 00       	mov    $0x40,%edx
   15c55:	29 ca                	sub    %ecx,%edx
   15c57:	89 d1                	mov    %edx,%ecx
   15c59:	74 0f                	je     15c6a <mbedtls_sha1_finish+0x9a>
   15c5b:	31 d2                	xor    %edx,%edx
   15c5d:	89 d6                	mov    %edx,%esi
   15c5f:	83 c2 01             	add    $0x1,%edx
   15c62:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   15c66:	39 ca                	cmp    %ecx,%edx
   15c68:	72 f3                	jb     15c5d <mbedtls_sha1_finish+0x8d>
   15c6a:	4c 89 e6             	mov    %r12,%rsi
   15c6d:	48 89 df             	mov    %rbx,%rdi
   15c70:	e8 db ea ff ff       	callq  14750 <mbedtls_internal_sha1_process>
   15c75:	85 c0                	test   %eax,%eax
   15c77:	74 27                	je     15ca0 <mbedtls_sha1_finish+0xd0>
   15c79:	5b                   	pop    %rbx
   15c7a:	5d                   	pop    %rbp
   15c7b:	41 5c                	pop    %r12
   15c7d:	c3                   	retq   
   15c7e:	66 90                	xchg   %ax,%ax
   15c80:	f6 c2 04             	test   $0x4,%dl
   15c83:	0f 85 8f 00 00 00    	jne    15d18 <mbedtls_sha1_finish+0x148>
   15c89:	85 d2                	test   %edx,%edx
   15c8b:	74 30                	je     15cbd <mbedtls_sha1_finish+0xed>
   15c8d:	c6 00 00             	movb   $0x0,(%rax)
   15c90:	f6 c2 02             	test   $0x2,%dl
   15c93:	74 28                	je     15cbd <mbedtls_sha1_finish+0xed>
   15c95:	31 c9                	xor    %ecx,%ecx
   15c97:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   15c9c:	eb 1f                	jmp    15cbd <mbedtls_sha1_finish+0xed>
   15c9e:	66 90                	xchg   %ax,%ax
   15ca0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   15ca4:	0f 11 43 1c          	movups %xmm0,0x1c(%rbx)
   15ca8:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   15caf:	00 00 
   15cb1:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   15cb7:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   15cbd:	8b 13                	mov    (%rbx),%edx
   15cbf:	8b 43 04             	mov    0x4(%rbx),%eax
   15cc2:	4c 89 e6             	mov    %r12,%rsi
   15cc5:	48 89 df             	mov    %rbx,%rdi
   15cc8:	89 d1                	mov    %edx,%ecx
   15cca:	c1 e0 03             	shl    $0x3,%eax
   15ccd:	c1 e9 1d             	shr    $0x1d,%ecx
   15cd0:	c1 e2 03             	shl    $0x3,%edx
   15cd3:	09 c8                	or     %ecx,%eax
   15cd5:	0f ca                	bswap  %edx
   15cd7:	89 53 58             	mov    %edx,0x58(%rbx)
   15cda:	0f c8                	bswap  %eax
   15cdc:	89 43 54             	mov    %eax,0x54(%rbx)
   15cdf:	e8 6c ea ff ff       	callq  14750 <mbedtls_internal_sha1_process>
   15ce4:	85 c0                	test   %eax,%eax
   15ce6:	75 91                	jne    15c79 <mbedtls_sha1_finish+0xa9>
   15ce8:	8b 53 08             	mov    0x8(%rbx),%edx
   15ceb:	0f ca                	bswap  %edx
   15ced:	89 55 00             	mov    %edx,0x0(%rbp)
   15cf0:	8b 53 0c             	mov    0xc(%rbx),%edx
   15cf3:	0f ca                	bswap  %edx
   15cf5:	89 55 04             	mov    %edx,0x4(%rbp)
   15cf8:	8b 53 10             	mov    0x10(%rbx),%edx
   15cfb:	0f ca                	bswap  %edx
   15cfd:	89 55 08             	mov    %edx,0x8(%rbp)
   15d00:	8b 53 14             	mov    0x14(%rbx),%edx
   15d03:	0f ca                	bswap  %edx
   15d05:	89 55 0c             	mov    %edx,0xc(%rbp)
   15d08:	8b 53 18             	mov    0x18(%rbx),%edx
   15d0b:	5b                   	pop    %rbx
   15d0c:	0f ca                	bswap  %edx
   15d0e:	89 55 10             	mov    %edx,0x10(%rbp)
   15d11:	5d                   	pop    %rbp
   15d12:	41 5c                	pop    %r12
   15d14:	c3                   	retq   
   15d15:	0f 1f 00             	nopl   (%rax)
   15d18:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   15d1e:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   15d25:	00 
   15d26:	eb 95                	jmp    15cbd <mbedtls_sha1_finish+0xed>
   15d28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15d2f:	00 

0000000000015d30 <mbedtls_sha1>:
   15d30:	f3 0f 1e fa          	endbr64 
   15d34:	41 55                	push   %r13
   15d36:	66 0f ef c0          	pxor   %xmm0,%xmm0
   15d3a:	41 54                	push   %r12
   15d3c:	55                   	push   %rbp
   15d3d:	48 89 d5             	mov    %rdx,%rbp
   15d40:	48 83 ec 70          	sub    $0x70,%rsp
   15d44:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15d4b:	00 00 
   15d4d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   15d52:	31 c0                	xor    %eax,%eax
   15d54:	49 89 e5             	mov    %rsp,%r13
   15d57:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   15d5c:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   15d63:	ab cd ef 
   15d66:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   15d6b:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   15d72:	54 32 10 
   15d75:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
   15d7c:	00 
   15d7d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   15d84:	00 
   15d85:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15d8a:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
   15d91:	c3 
   15d92:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   15d97:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   15d9c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   15da1:	48 85 f6             	test   %rsi,%rsi
   15da4:	74 15                	je     15dbb <mbedtls_sha1+0x8b>
   15da6:	48 89 f2             	mov    %rsi,%rdx
   15da9:	48 89 fe             	mov    %rdi,%rsi
   15dac:	4c 89 ef             	mov    %r13,%rdi
   15daf:	e8 1c fc ff ff       	callq  159d0 <mbedtls_sha1_update.part.0>
   15db4:	41 89 c4             	mov    %eax,%r12d
   15db7:	85 c0                	test   %eax,%eax
   15db9:	75 0e                	jne    15dc9 <mbedtls_sha1+0x99>
   15dbb:	48 89 ee             	mov    %rbp,%rsi
   15dbe:	4c 89 ef             	mov    %r13,%rdi
   15dc1:	e8 0a fe ff ff       	callq  15bd0 <mbedtls_sha1_finish>
   15dc6:	41 89 c4             	mov    %eax,%r12d
   15dc9:	be 5c 00 00 00       	mov    $0x5c,%esi
   15dce:	4c 89 ef             	mov    %r13,%rdi
   15dd1:	e8 5a cb ff ff       	callq  12930 <mbedtls_platform_zeroize>
   15dd6:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   15ddb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   15de2:	00 00 
   15de4:	75 0d                	jne    15df3 <mbedtls_sha1+0xc3>
   15de6:	48 83 c4 70          	add    $0x70,%rsp
   15dea:	44 89 e0             	mov    %r12d,%eax
   15ded:	5d                   	pop    %rbp
   15dee:	41 5c                	pop    %r12
   15df0:	41 5d                	pop    %r13
   15df2:	c3                   	retq   
   15df3:	e8 88 d4 fe ff       	callq  3280 <__stack_chk_fail@plt>
   15df8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15dff:	00 

0000000000015e00 <mbedtls_sha1_self_test>:
   15e00:	f3 0f 1e fa          	endbr64 
   15e04:	41 57                	push   %r15
   15e06:	b9 0b 00 00 00       	mov    $0xb,%ecx
   15e0b:	41 56                	push   %r14
   15e0d:	4c 8d 35 8c 44 00 00 	lea    0x448c(%rip),%r14        # 1a2a0 <sha1_test_buf>
   15e14:	41 55                	push   %r13
   15e16:	41 89 fd             	mov    %edi,%r13d
   15e19:	41 54                	push   %r12
   15e1b:	55                   	push   %rbp
   15e1c:	48 8d 2d 1d 44 00 00 	lea    0x441d(%rip),%rbp        # 1a240 <sha1_test_sum>
   15e23:	53                   	push   %rbx
   15e24:	31 db                	xor    %ebx,%ebx
   15e26:	48 81 ec a8 04 00 00 	sub    $0x4a8,%rsp
   15e2d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15e34:	00 00 
   15e36:	48 89 84 24 98 04 00 	mov    %rax,0x498(%rsp)
   15e3d:	00 
   15e3e:	31 c0                	xor    %eax,%eax
   15e40:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   15e45:	4c 89 e7             	mov    %r12,%rdi
   15e48:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   15e4b:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   15e51:	45 85 ed             	test   %r13d,%r13d
   15e54:	0f 85 a6 00 00 00    	jne    15f00 <mbedtls_sha1_self_test+0x100>
   15e5a:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   15e61:	ab cd ef 
   15e64:	c7 44 24 28 f0 e1 d2 	movl   $0xc3d2e1f0,0x28(%rsp)
   15e6b:	c3 
   15e6c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15e71:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   15e78:	54 32 10 
   15e7b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   15e82:	00 00 
   15e84:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   15e89:	48 83 fb 02          	cmp    $0x2,%rbx
   15e8d:	0f 84 2d 01 00 00    	je     15fc0 <mbedtls_sha1_self_test+0x1c0>
   15e93:	48 8d 05 e6 43 00 00 	lea    0x43e6(%rip),%rax        # 1a280 <sha1_test_buflen>
   15e9a:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   15e9e:	48 85 d2             	test   %rdx,%rdx
   15ea1:	74 11                	je     15eb4 <mbedtls_sha1_self_test+0xb4>
   15ea3:	4c 89 f6             	mov    %r14,%rsi
   15ea6:	4c 89 e7             	mov    %r12,%rdi
   15ea9:	e8 22 fb ff ff       	callq  159d0 <mbedtls_sha1_update.part.0>
   15eae:	89 c2                	mov    %eax,%edx
   15eb0:	85 c0                	test   %eax,%eax
   15eb2:	75 3b                	jne    15eef <mbedtls_sha1_self_test+0xef>
   15eb4:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
   15eb9:	4c 89 e7             	mov    %r12,%rdi
   15ebc:	4c 89 fe             	mov    %r15,%rsi
   15ebf:	e8 0c fd ff ff       	callq  15bd0 <mbedtls_sha1_finish>
   15ec4:	89 c2                	mov    %eax,%edx
   15ec6:	85 c0                	test   %eax,%eax
   15ec8:	75 25                	jne    15eef <mbedtls_sha1_self_test+0xef>
   15eca:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   15ecf:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   15ed4:	48 33 55 08          	xor    0x8(%rbp),%rdx
   15ed8:	48 33 45 00          	xor    0x0(%rbp),%rax
   15edc:	48 09 c2             	or     %rax,%rdx
   15edf:	75 09                	jne    15eea <mbedtls_sha1_self_test+0xea>
   15ee1:	8b 45 10             	mov    0x10(%rbp),%eax
   15ee4:	41 39 47 10          	cmp    %eax,0x10(%r15)
   15ee8:	74 36                	je     15f20 <mbedtls_sha1_self_test+0x120>
   15eea:	ba 01 00 00 00       	mov    $0x1,%edx
   15eef:	45 85 ed             	test   %r13d,%r13d
   15ef2:	0f 85 a8 00 00 00    	jne    15fa0 <mbedtls_sha1_self_test+0x1a0>
   15ef8:	41 89 d5             	mov    %edx,%r13d
   15efb:	eb 4f                	jmp    15f4c <mbedtls_sha1_self_test+0x14c>
   15efd:	0f 1f 00             	nopl   (%rax)
   15f00:	8d 53 01             	lea    0x1(%rbx),%edx
   15f03:	48 8d 35 16 43 00 00 	lea    0x4316(%rip),%rsi        # 1a220 <ripemd160_padding+0x40>
   15f0a:	bf 01 00 00 00       	mov    $0x1,%edi
   15f0f:	31 c0                	xor    %eax,%eax
   15f11:	e8 3a d4 fe ff       	callq  3350 <__printf_chk@plt>
   15f16:	e9 3f ff ff ff       	jmpq   15e5a <mbedtls_sha1_self_test+0x5a>
   15f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15f20:	45 85 ed             	test   %r13d,%r13d
   15f23:	74 0c                	je     15f31 <mbedtls_sha1_self_test+0x131>
   15f25:	48 8d 3d a2 24 00 00 	lea    0x24a2(%rip),%rdi        # 183ce <bits+0x34e>
   15f2c:	e8 ef d2 fe ff       	callq  3220 <puts@plt>
   15f31:	48 83 c3 01          	add    $0x1,%rbx
   15f35:	48 83 c5 14          	add    $0x14,%rbp
   15f39:	49 83 c6 39          	add    $0x39,%r14
   15f3d:	48 83 fb 03          	cmp    $0x3,%rbx
   15f41:	0f 85 0a ff ff ff    	jne    15e51 <mbedtls_sha1_self_test+0x51>
   15f47:	45 85 ed             	test   %r13d,%r13d
   15f4a:	75 3c                	jne    15f88 <mbedtls_sha1_self_test+0x188>
   15f4c:	be 5c 00 00 00       	mov    $0x5c,%esi
   15f51:	4c 89 e7             	mov    %r12,%rdi
   15f54:	e8 d7 c9 ff ff       	callq  12930 <mbedtls_platform_zeroize>
   15f59:	48 8b 84 24 98 04 00 	mov    0x498(%rsp),%rax
   15f60:	00 
   15f61:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   15f68:	00 00 
   15f6a:	0f 85 a6 00 00 00    	jne    16016 <mbedtls_sha1_self_test+0x216>
   15f70:	48 81 c4 a8 04 00 00 	add    $0x4a8,%rsp
   15f77:	44 89 e8             	mov    %r13d,%eax
   15f7a:	5b                   	pop    %rbx
   15f7b:	5d                   	pop    %rbp
   15f7c:	41 5c                	pop    %r12
   15f7e:	41 5d                	pop    %r13
   15f80:	41 5e                	pop    %r14
   15f82:	41 5f                	pop    %r15
   15f84:	c3                   	retq   
   15f85:	0f 1f 00             	nopl   (%rax)
   15f88:	bf 0a 00 00 00       	mov    $0xa,%edi
   15f8d:	45 31 ed             	xor    %r13d,%r13d
   15f90:	e8 7b d2 fe ff       	callq  3210 <putchar@plt>
   15f95:	eb b5                	jmp    15f4c <mbedtls_sha1_self_test+0x14c>
   15f97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15f9e:	00 00 
   15fa0:	48 8d 3d fb 24 00 00 	lea    0x24fb(%rip),%rdi        # 184a2 <bits+0x422>
   15fa7:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   15fab:	e8 70 d2 fe ff       	callq  3220 <puts@plt>
   15fb0:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   15fb4:	41 89 d5             	mov    %edx,%r13d
   15fb7:	eb 93                	jmp    15f4c <mbedtls_sha1_self_test+0x14c>
   15fb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15fc0:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   15fc7:	00 
   15fc8:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   15fcd:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   15fd4:	61 61 61 
   15fd7:	c7 44 24 0c e8 03 00 	movl   $0x3e8,0xc(%rsp)
   15fde:	00 
   15fdf:	4c 89 ff             	mov    %r15,%rdi
   15fe2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   15fe5:	eb 14                	jmp    15ffb <mbedtls_sha1_self_test+0x1fb>
   15fe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15fee:	00 00 
   15ff0:	83 6c 24 0c 01       	subl   $0x1,0xc(%rsp)
   15ff5:	0f 84 b9 fe ff ff    	je     15eb4 <mbedtls_sha1_self_test+0xb4>
   15ffb:	ba e8 03 00 00       	mov    $0x3e8,%edx
   16000:	4c 89 fe             	mov    %r15,%rsi
   16003:	4c 89 e7             	mov    %r12,%rdi
   16006:	e8 c5 f9 ff ff       	callq  159d0 <mbedtls_sha1_update.part.0>
   1600b:	89 c2                	mov    %eax,%edx
   1600d:	85 c0                	test   %eax,%eax
   1600f:	74 df                	je     15ff0 <mbedtls_sha1_self_test+0x1f0>
   16011:	e9 d9 fe ff ff       	jmpq   15eef <mbedtls_sha1_self_test+0xef>
   16016:	e8 65 d2 fe ff       	callq  3280 <__stack_chk_fail@plt>
   1601b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016020 <mbedtls_sha512_init>:
   16020:	f3 0f 1e fa          	endbr64 
   16024:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1602b:	48 89 f9             	mov    %rdi,%rcx
   1602e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   16032:	31 c0                	xor    %eax,%eax
   16034:	48 c7 87 c8 00 00 00 	movq   $0x0,0xc8(%rdi)
   1603b:	00 00 00 00 
   1603f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   16043:	48 29 f9             	sub    %rdi,%rcx
   16046:	81 c1 d8 00 00 00    	add    $0xd8,%ecx
   1604c:	c1 e9 03             	shr    $0x3,%ecx
   1604f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   16052:	c3                   	retq   
   16053:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1605a:	00 00 00 00 
   1605e:	66 90                	xchg   %ax,%ax

0000000000016060 <mbedtls_sha512_free>:
   16060:	f3 0f 1e fa          	endbr64 
   16064:	48 85 ff             	test   %rdi,%rdi
   16067:	74 0f                	je     16078 <mbedtls_sha512_free+0x18>
   16069:	be d8 00 00 00       	mov    $0xd8,%esi
   1606e:	e9 bd c8 ff ff       	jmpq   12930 <mbedtls_platform_zeroize>
   16073:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16078:	c3                   	retq   
   16079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016080 <mbedtls_sha512_clone>:
   16080:	f3 0f 1e fa          	endbr64 
   16084:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   16088:	0f 11 07             	movups %xmm0,(%rdi)
   1608b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   16090:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   16094:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   16099:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   1609d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   160a2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   160a6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   160ab:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   160af:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   160b4:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
   160b8:	f3 0f 6f 76 60       	movdqu 0x60(%rsi),%xmm6
   160bd:	0f 11 77 60          	movups %xmm6,0x60(%rdi)
   160c1:	f3 0f 6f 7e 70       	movdqu 0x70(%rsi),%xmm7
   160c6:	0f 11 7f 70          	movups %xmm7,0x70(%rdi)
   160ca:	f3 0f 6f 86 80 00 00 	movdqu 0x80(%rsi),%xmm0
   160d1:	00 
   160d2:	0f 11 87 80 00 00 00 	movups %xmm0,0x80(%rdi)
   160d9:	f3 0f 6f 8e 90 00 00 	movdqu 0x90(%rsi),%xmm1
   160e0:	00 
   160e1:	0f 11 8f 90 00 00 00 	movups %xmm1,0x90(%rdi)
   160e8:	f3 0f 6f 96 a0 00 00 	movdqu 0xa0(%rsi),%xmm2
   160ef:	00 
   160f0:	0f 11 97 a0 00 00 00 	movups %xmm2,0xa0(%rdi)
   160f7:	f3 0f 6f 9e b0 00 00 	movdqu 0xb0(%rsi),%xmm3
   160fe:	00 
   160ff:	0f 11 9f b0 00 00 00 	movups %xmm3,0xb0(%rdi)
   16106:	f3 0f 6f a6 c0 00 00 	movdqu 0xc0(%rsi),%xmm4
   1610d:	00 
   1610e:	0f 11 a7 c0 00 00 00 	movups %xmm4,0xc0(%rdi)
   16115:	48 8b 86 d0 00 00 00 	mov    0xd0(%rsi),%rax
   1611c:	48 89 87 d0 00 00 00 	mov    %rax,0xd0(%rdi)
   16123:	c3                   	retq   
   16124:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1612b:	00 00 00 00 
   1612f:	90                   	nop

0000000000016130 <mbedtls_sha512_starts>:
   16130:	f3 0f 1e fa          	endbr64 
   16134:	83 fe 01             	cmp    $0x1,%esi
   16137:	0f 87 13 01 00 00    	ja     16250 <mbedtls_sha512_starts+0x120>
   1613d:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   16144:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   1614b:	00 
   1614c:	85 f6                	test   %esi,%esi
   1614e:	0f 84 7c 00 00 00    	je     161d0 <mbedtls_sha512_starts+0xa0>
   16154:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   1615b:	9d bb cb 
   1615e:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   16164:	48 89 47 10          	mov    %rax,0x10(%rdi)
   16168:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   1616f:	29 9a 62 
   16172:	48 89 47 18          	mov    %rax,0x18(%rdi)
   16176:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   1617d:	01 59 91 
   16180:	48 89 47 20          	mov    %rax,0x20(%rdi)
   16184:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   1618b:	ec 2f 15 
   1618e:	48 89 47 28          	mov    %rax,0x28(%rdi)
   16192:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   16199:	26 33 67 
   1619c:	48 89 47 30          	mov    %rax,0x30(%rdi)
   161a0:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   161a7:	4a b4 8e 
   161aa:	48 89 47 38          	mov    %rax,0x38(%rdi)
   161ae:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   161b5:	2e 0c db 
   161b8:	48 89 47 40          	mov    %rax,0x40(%rdi)
   161bc:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   161c3:	48 b5 47 
   161c6:	48 89 47 48          	mov    %rax,0x48(%rdi)
   161ca:	31 c0                	xor    %eax,%eax
   161cc:	c3                   	retq   
   161cd:	0f 1f 00             	nopl   (%rax)
   161d0:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   161d7:	e6 09 6a 
   161da:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   161e0:	48 89 47 10          	mov    %rax,0x10(%rdi)
   161e4:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   161eb:	ae 67 bb 
   161ee:	48 89 47 18          	mov    %rax,0x18(%rdi)
   161f2:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   161f9:	f3 6e 3c 
   161fc:	48 89 47 20          	mov    %rax,0x20(%rdi)
   16200:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   16207:	f5 4f a5 
   1620a:	48 89 47 28          	mov    %rax,0x28(%rdi)
   1620e:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   16215:	52 0e 51 
   16218:	48 89 47 30          	mov    %rax,0x30(%rdi)
   1621c:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   16223:	68 05 9b 
   16226:	48 89 47 38          	mov    %rax,0x38(%rdi)
   1622a:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   16231:	d9 83 1f 
   16234:	48 89 47 40          	mov    %rax,0x40(%rdi)
   16238:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   1623f:	cd e0 5b 
   16242:	48 89 47 48          	mov    %rax,0x48(%rdi)
   16246:	31 c0                	xor    %eax,%eax
   16248:	c3                   	retq   
   16249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16250:	b8 8b ff ff ff       	mov    $0xffffff8b,%eax
   16255:	c3                   	retq   
   16256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1625d:	00 00 00 

0000000000016260 <mbedtls_internal_sha512_process>:
   16260:	f3 0f 1e fa          	endbr64 
   16264:	41 57                	push   %r15
   16266:	48 89 f9             	mov    %rdi,%rcx
   16269:	41 56                	push   %r14
   1626b:	41 55                	push   %r13
   1626d:	41 54                	push   %r12
   1626f:	55                   	push   %rbp
   16270:	53                   	push   %rbx
   16271:	48 81 ec 28 03 00 00 	sub    $0x328,%rsp
   16278:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   1627d:	48 8d 9c 24 d0 02 00 	lea    0x2d0(%rsp),%rbx
   16284:	00 
   16285:	48 89 df             	mov    %rbx,%rdi
   16288:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1628f:	00 00 
   16291:	48 89 84 24 18 03 00 	mov    %rax,0x318(%rsp)
   16298:	00 
   16299:	31 c0                	xor    %eax,%eax
   1629b:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   162a0:	48 8b 54 01 10       	mov    0x10(%rcx,%rax,1),%rdx
   162a5:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   162a9:	48 83 c0 08          	add    $0x8,%rax
   162ad:	48 83 f8 40          	cmp    $0x40,%rax
   162b1:	75 ed                	jne    162a0 <mbedtls_internal_sha512_process+0x40>
   162b3:	31 c0                	xor    %eax,%eax
   162b5:	4c 8d 54 24 50       	lea    0x50(%rsp),%r10
   162ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   162c0:	48 8b 14 06          	mov    (%rsi,%rax,1),%rdx
   162c4:	48 0f ca             	bswap  %rdx
   162c7:	49 89 14 02          	mov    %rdx,(%r10,%rax,1)
   162cb:	48 83 c0 08          	add    $0x8,%rax
   162cf:	48 3d 80 00 00 00    	cmp    $0x80,%rax
   162d5:	75 e9                	jne    162c0 <mbedtls_internal_sha512_process+0x60>
   162d7:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   162de:	00 
   162df:	4c 89 d1             	mov    %r10,%rcx
   162e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   162e8:	48 8b 41 70          	mov    0x70(%rcx),%rax
   162ec:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   162f0:	48 83 c1 08          	add    $0x8,%rcx
   162f4:	48 89 c2             	mov    %rax,%rdx
   162f7:	49 89 c0             	mov    %rax,%r8
   162fa:	48 c1 e8 06          	shr    $0x6,%rax
   162fe:	49 c1 c0 03          	rol    $0x3,%r8
   16302:	48 c1 ca 13          	ror    $0x13,%rdx
   16306:	4c 31 c2             	xor    %r8,%rdx
   16309:	49 89 f0             	mov    %rsi,%r8
   1630c:	48 31 c2             	xor    %rax,%rdx
   1630f:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
   16313:	48 03 41 40          	add    0x40(%rcx),%rax
   16317:	49 c1 c8 08          	ror    $0x8,%r8
   1631b:	48 01 c2             	add    %rax,%rdx
   1631e:	48 89 f0             	mov    %rsi,%rax
   16321:	48 c1 ee 07          	shr    $0x7,%rsi
   16325:	48 d1 c8             	ror    %rax
   16328:	4c 31 c0             	xor    %r8,%rax
   1632b:	48 31 f0             	xor    %rsi,%rax
   1632e:	48 01 d0             	add    %rdx,%rax
   16331:	48 89 41 78          	mov    %rax,0x78(%rcx)
   16335:	48 39 cf             	cmp    %rcx,%rdi
   16338:	75 ae                	jne    162e8 <mbedtls_internal_sha512_process+0x88>
   1633a:	48 8b 8c 24 d8 02 00 	mov    0x2d8(%rsp),%rcx
   16341:	00 
   16342:	48 8b 94 24 e0 02 00 	mov    0x2e0(%rsp),%rdx
   16349:	00 
   1634a:	49 bf 18 81 6d da d5 	movabs $0xab1c5ed5da6d8118,%r15
   16351:	5e 1c ab 
   16354:	48 8d 1d 45 43 00 00 	lea    0x4345(%rip),%rbx        # 1a6a0 <K+0x40>
   1635b:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   16360:	4c 8b 8c 24 08 03 00 	mov    0x308(%rsp),%r9
   16367:	00 
   16368:	49 bf 9b 4f 19 af a4 	movabs $0x923f82a4af194f9b,%r15
   1636f:	82 3f 92 
   16372:	48 bd 2f 3b 4d ec cf 	movabs $0xb5c0fbcfec4d3b2f,%rbp
   16379:	fb c0 b5 
   1637c:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   16381:	4c 8b 84 24 f0 02 00 	mov    0x2f0(%rsp),%r8
   16388:	00 
   16389:	49 bf 19 d0 05 b6 f1 	movabs $0x59f111f1b605d019,%r15
   16390:	11 f1 59 
   16393:	49 bd cd 65 ef 23 91 	movabs $0x7137449123ef65cd,%r13
   1639a:	44 37 71 
   1639d:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   163a2:	48 8b bc 24 00 03 00 	mov    0x300(%rsp),%rdi
   163a9:	00 
   163aa:	49 bf 38 b5 48 f3 5b 	movabs $0x3956c25bf348b538,%r15
   163b1:	c2 56 39 
   163b4:	49 bc 22 ae 28 d7 98 	movabs $0x428a2f98d728ae22,%r12
   163bb:	2f 8a 42 
   163be:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   163c3:	48 8b b4 24 f8 02 00 	mov    0x2f8(%rsp),%rsi
   163ca:	00 
   163cb:	49 89 d6             	mov    %rdx,%r14
   163ce:	49 bf bc db 89 81 a5 	movabs $0xe9b5dba58189dbbc,%r15
   163d5:	db b5 e9 
   163d8:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   163dd:	4c 8b 9c 24 d0 02 00 	mov    0x2d0(%rsp),%r11
   163e4:	00 
   163e5:	49 89 df             	mov    %rbx,%r15
   163e8:	48 89 cb             	mov    %rcx,%rbx
   163eb:	48 8b 84 24 e8 02 00 	mov    0x2e8(%rsp),%rax
   163f2:	00 
   163f3:	eb 3f                	jmp    16434 <mbedtls_internal_sha512_process+0x1d4>
   163f5:	0f 1f 00             	nopl   (%rax)
   163f8:	49 8b 4f 18          	mov    0x18(%r15),%rcx
   163fc:	4d 8b 27             	mov    (%r15),%r12
   163ff:	49 83 c7 40          	add    $0x40,%r15
   16403:	4d 8b 6f c8          	mov    -0x38(%r15),%r13
   16407:	49 8b 6f d0          	mov    -0x30(%r15),%rbp
   1640b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   16410:	49 8b 4f e0          	mov    -0x20(%r15),%rcx
   16414:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   16419:	49 8b 4f e8          	mov    -0x18(%r15),%rcx
   1641d:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   16422:	49 8b 4f f0          	mov    -0x10(%r15),%rcx
   16426:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1642b:	49 8b 4f f8          	mov    -0x8(%r15),%rcx
   1642f:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   16434:	4c 89 c1             	mov    %r8,%rcx
   16437:	4c 89 c2             	mov    %r8,%rdx
   1643a:	48 c1 c9 0e          	ror    $0xe,%rcx
   1643e:	48 c1 ca 12          	ror    $0x12,%rdx
   16442:	48 31 ca             	xor    %rcx,%rdx
   16445:	4c 89 c1             	mov    %r8,%rcx
   16448:	48 c1 c1 17          	rol    $0x17,%rcx
   1644c:	48 31 ca             	xor    %rcx,%rdx
   1644f:	48 89 f9             	mov    %rdi,%rcx
   16452:	48 31 f1             	xor    %rsi,%rcx
   16455:	4c 21 c1             	and    %r8,%rcx
   16458:	48 31 f9             	xor    %rdi,%rcx
   1645b:	49 03 7a 08          	add    0x8(%r10),%rdi
   1645f:	48 01 d1             	add    %rdx,%rcx
   16462:	49 03 0a             	add    (%r10),%rcx
   16465:	4c 89 da             	mov    %r11,%rdx
   16468:	49 01 c9             	add    %rcx,%r9
   1646b:	48 c1 c2 1e          	rol    $0x1e,%rdx
   1646f:	4b 8d 0c 21          	lea    (%r9,%r12,1),%rcx
   16473:	4d 89 d9             	mov    %r11,%r9
   16476:	4d 89 dc             	mov    %r11,%r12
   16479:	49 c1 c9 1c          	ror    $0x1c,%r9
   1647d:	49 21 dc             	and    %rbx,%r12
   16480:	48 01 c8             	add    %rcx,%rax
   16483:	4c 31 ca             	xor    %r9,%rdx
   16486:	4d 89 d9             	mov    %r11,%r9
   16489:	49 c1 c1 19          	rol    $0x19,%r9
   1648d:	4c 31 ca             	xor    %r9,%rdx
   16490:	4d 89 d9             	mov    %r11,%r9
   16493:	49 09 d9             	or     %rbx,%r9
   16496:	4d 21 f1             	and    %r14,%r9
   16499:	4d 09 e1             	or     %r12,%r9
   1649c:	49 01 d1             	add    %rdx,%r9
   1649f:	48 89 c2             	mov    %rax,%rdx
   164a2:	49 01 c9             	add    %rcx,%r9
   164a5:	4c 89 c1             	mov    %r8,%rcx
   164a8:	48 c1 ca 12          	ror    $0x12,%rdx
   164ac:	48 31 f1             	xor    %rsi,%rcx
   164af:	48 21 c1             	and    %rax,%rcx
   164b2:	48 31 f1             	xor    %rsi,%rcx
   164b5:	48 01 cf             	add    %rcx,%rdi
   164b8:	48 89 c1             	mov    %rax,%rcx
   164bb:	48 c1 c9 0e          	ror    $0xe,%rcx
   164bf:	48 31 ca             	xor    %rcx,%rdx
   164c2:	48 89 c1             	mov    %rax,%rcx
   164c5:	48 c1 c1 17          	rol    $0x17,%rcx
   164c9:	48 31 ca             	xor    %rcx,%rdx
   164cc:	4c 89 c9             	mov    %r9,%rcx
   164cf:	49 03 72 10          	add    0x10(%r10),%rsi
   164d3:	48 01 fa             	add    %rdi,%rdx
   164d6:	48 c1 c1 1e          	rol    $0x1e,%rcx
   164da:	4c 89 cf             	mov    %r9,%rdi
   164dd:	49 01 d5             	add    %rdx,%r13
   164e0:	4c 89 ca             	mov    %r9,%rdx
   164e3:	4c 21 df             	and    %r11,%rdi
   164e6:	48 c1 ca 1c          	ror    $0x1c,%rdx
   164ea:	4d 01 ee             	add    %r13,%r14
   164ed:	48 31 d1             	xor    %rdx,%rcx
   164f0:	4c 89 ca             	mov    %r9,%rdx
   164f3:	48 c1 c2 19          	rol    $0x19,%rdx
   164f7:	48 31 d1             	xor    %rdx,%rcx
   164fa:	4c 89 ca             	mov    %r9,%rdx
   164fd:	4c 09 da             	or     %r11,%rdx
   16500:	48 21 da             	and    %rbx,%rdx
   16503:	48 09 fa             	or     %rdi,%rdx
   16506:	4c 89 c7             	mov    %r8,%rdi
   16509:	48 31 c7             	xor    %rax,%rdi
   1650c:	48 01 ca             	add    %rcx,%rdx
   1650f:	4c 89 f1             	mov    %r14,%rcx
   16512:	4c 21 f7             	and    %r14,%rdi
   16515:	48 c1 c9 12          	ror    $0x12,%rcx
   16519:	4c 01 ea             	add    %r13,%rdx
   1651c:	4c 31 c7             	xor    %r8,%rdi
   1651f:	48 01 fe             	add    %rdi,%rsi
   16522:	4c 89 f7             	mov    %r14,%rdi
   16525:	48 c1 cf 0e          	ror    $0xe,%rdi
   16529:	48 31 f9             	xor    %rdi,%rcx
   1652c:	4c 89 f7             	mov    %r14,%rdi
   1652f:	48 c1 c7 17          	rol    $0x17,%rdi
   16533:	48 31 f9             	xor    %rdi,%rcx
   16536:	4c 89 cf             	mov    %r9,%rdi
   16539:	48 01 f1             	add    %rsi,%rcx
   1653c:	48 89 d6             	mov    %rdx,%rsi
   1653f:	48 01 cd             	add    %rcx,%rbp
   16542:	48 89 d1             	mov    %rdx,%rcx
   16545:	48 c1 c6 1e          	rol    $0x1e,%rsi
   16549:	48 c1 c9 1c          	ror    $0x1c,%rcx
   1654d:	48 01 eb             	add    %rbp,%rbx
   16550:	48 31 ce             	xor    %rcx,%rsi
   16553:	48 89 d1             	mov    %rdx,%rcx
   16556:	48 c1 c1 19          	rol    $0x19,%rcx
   1655a:	48 31 ce             	xor    %rcx,%rsi
   1655d:	4c 89 c9             	mov    %r9,%rcx
   16560:	48 21 d7             	and    %rdx,%rdi
   16563:	4d 03 42 18          	add    0x18(%r10),%r8
   16567:	48 09 d1             	or     %rdx,%rcx
   1656a:	4c 21 d9             	and    %r11,%rcx
   1656d:	48 09 f9             	or     %rdi,%rcx
   16570:	48 89 c7             	mov    %rax,%rdi
   16573:	4c 31 f7             	xor    %r14,%rdi
   16576:	48 01 f1             	add    %rsi,%rcx
   16579:	48 89 de             	mov    %rbx,%rsi
   1657c:	48 21 df             	and    %rbx,%rdi
   1657f:	48 c1 ce 12          	ror    $0x12,%rsi
   16583:	48 01 e9             	add    %rbp,%rcx
   16586:	48 89 d5             	mov    %rdx,%rbp
   16589:	48 31 c7             	xor    %rax,%rdi
   1658c:	48 21 cd             	and    %rcx,%rbp
   1658f:	4c 01 c7             	add    %r8,%rdi
   16592:	49 89 d8             	mov    %rbx,%r8
   16595:	49 c1 c8 0e          	ror    $0xe,%r8
   16599:	4c 31 c6             	xor    %r8,%rsi
   1659c:	49 89 d8             	mov    %rbx,%r8
   1659f:	49 c1 c0 17          	rol    $0x17,%r8
   165a3:	4c 31 c6             	xor    %r8,%rsi
   165a6:	49 89 c8             	mov    %rcx,%r8
   165a9:	48 01 fe             	add    %rdi,%rsi
   165ac:	48 89 cf             	mov    %rcx,%rdi
   165af:	49 c1 c8 1c          	ror    $0x1c,%r8
   165b3:	48 03 74 24 08       	add    0x8(%rsp),%rsi
   165b8:	48 c1 c7 1e          	rol    $0x1e,%rdi
   165bc:	49 01 f3             	add    %rsi,%r11
   165bf:	4c 31 c7             	xor    %r8,%rdi
   165c2:	49 89 c8             	mov    %rcx,%r8
   165c5:	49 c1 c0 19          	rol    $0x19,%r8
   165c9:	4c 31 c7             	xor    %r8,%rdi
   165cc:	49 89 d0             	mov    %rdx,%r8
   165cf:	49 09 c8             	or     %rcx,%r8
   165d2:	4d 21 c8             	and    %r9,%r8
   165d5:	49 09 e8             	or     %rbp,%r8
   165d8:	48 89 cd             	mov    %rcx,%rbp
   165db:	49 01 f8             	add    %rdi,%r8
   165de:	4c 89 f7             	mov    %r14,%rdi
   165e1:	48 31 df             	xor    %rbx,%rdi
   165e4:	49 01 f0             	add    %rsi,%r8
   165e7:	4c 89 de             	mov    %r11,%rsi
   165ea:	4c 21 df             	and    %r11,%rdi
   165ed:	49 03 42 20          	add    0x20(%r10),%rax
   165f1:	48 c1 ce 0e          	ror    $0xe,%rsi
   165f5:	4c 21 c5             	and    %r8,%rbp
   165f8:	4c 31 f7             	xor    %r14,%rdi
   165fb:	4d 03 72 28          	add    0x28(%r10),%r14
   165ff:	48 01 c7             	add    %rax,%rdi
   16602:	4c 89 d8             	mov    %r11,%rax
   16605:	48 c1 c8 12          	ror    $0x12,%rax
   16609:	48 31 f0             	xor    %rsi,%rax
   1660c:	4c 89 de             	mov    %r11,%rsi
   1660f:	48 c1 c6 17          	rol    $0x17,%rsi
   16613:	48 31 f0             	xor    %rsi,%rax
   16616:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1661b:	48 01 f8             	add    %rdi,%rax
   1661e:	4c 89 c7             	mov    %r8,%rdi
   16621:	48 01 c6             	add    %rax,%rsi
   16624:	4c 89 c0             	mov    %r8,%rax
   16627:	48 c1 cf 1c          	ror    $0x1c,%rdi
   1662b:	48 c1 c0 1e          	rol    $0x1e,%rax
   1662f:	49 01 f1             	add    %rsi,%r9
   16632:	48 31 c7             	xor    %rax,%rdi
   16635:	4c 89 c0             	mov    %r8,%rax
   16638:	48 c1 c0 19          	rol    $0x19,%rax
   1663c:	48 31 c7             	xor    %rax,%rdi
   1663f:	48 89 c8             	mov    %rcx,%rax
   16642:	4c 09 c0             	or     %r8,%rax
   16645:	48 21 d0             	and    %rdx,%rax
   16648:	48 09 e8             	or     %rbp,%rax
   1664b:	4c 89 c5             	mov    %r8,%rbp
   1664e:	48 01 f8             	add    %rdi,%rax
   16651:	4c 89 cf             	mov    %r9,%rdi
   16654:	48 01 f0             	add    %rsi,%rax
   16657:	48 89 de             	mov    %rbx,%rsi
   1665a:	48 c1 cf 12          	ror    $0x12,%rdi
   1665e:	4c 31 de             	xor    %r11,%rsi
   16661:	4c 21 ce             	and    %r9,%rsi
   16664:	48 31 de             	xor    %rbx,%rsi
   16667:	49 01 f6             	add    %rsi,%r14
   1666a:	4c 89 ce             	mov    %r9,%rsi
   1666d:	48 c1 ce 0e          	ror    $0xe,%rsi
   16671:	48 31 fe             	xor    %rdi,%rsi
   16674:	4c 89 cf             	mov    %r9,%rdi
   16677:	48 c1 c7 17          	rol    $0x17,%rdi
   1667b:	48 31 fe             	xor    %rdi,%rsi
   1667e:	48 21 c5             	and    %rax,%rbp
   16681:	49 03 5a 30          	add    0x30(%r10),%rbx
   16685:	49 01 f6             	add    %rsi,%r14
   16688:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1668d:	4c 01 f6             	add    %r14,%rsi
   16690:	49 89 c6             	mov    %rax,%r14
   16693:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   16697:	48 89 c2             	mov    %rax,%rdx
   1669a:	49 c1 c6 1e          	rol    $0x1e,%r14
   1669e:	48 c1 ca 1c          	ror    $0x1c,%rdx
   166a2:	4c 31 f2             	xor    %r14,%rdx
   166a5:	49 89 c6             	mov    %rax,%r14
   166a8:	49 c1 c6 19          	rol    $0x19,%r14
   166ac:	4c 31 f2             	xor    %r14,%rdx
   166af:	4d 89 c6             	mov    %r8,%r14
   166b2:	49 09 c6             	or     %rax,%r14
   166b5:	49 21 ce             	and    %rcx,%r14
   166b8:	49 09 ee             	or     %rbp,%r14
   166bb:	48 89 c5             	mov    %rax,%rbp
   166be:	49 01 d6             	add    %rdx,%r14
   166c1:	4c 89 da             	mov    %r11,%rdx
   166c4:	4c 31 ca             	xor    %r9,%rdx
   166c7:	49 01 f6             	add    %rsi,%r14
   166ca:	48 89 fe             	mov    %rdi,%rsi
   166cd:	48 21 fa             	and    %rdi,%rdx
   166d0:	48 c1 ce 12          	ror    $0x12,%rsi
   166d4:	4c 31 da             	xor    %r11,%rdx
   166d7:	48 01 d3             	add    %rdx,%rbx
   166da:	48 89 fa             	mov    %rdi,%rdx
   166dd:	48 c1 ca 0e          	ror    $0xe,%rdx
   166e1:	48 31 f2             	xor    %rsi,%rdx
   166e4:	48 89 fe             	mov    %rdi,%rsi
   166e7:	48 c1 c6 17          	rol    $0x17,%rsi
   166eb:	48 31 f2             	xor    %rsi,%rdx
   166ee:	48 01 da             	add    %rbx,%rdx
   166f1:	48 03 54 24 20       	add    0x20(%rsp),%rdx
   166f6:	4c 89 f3             	mov    %r14,%rbx
   166f9:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
   166fd:	4c 89 f1             	mov    %r14,%rcx
   16700:	48 c1 cb 1c          	ror    $0x1c,%rbx
   16704:	48 c1 c1 1e          	rol    $0x1e,%rcx
   16708:	48 31 cb             	xor    %rcx,%rbx
   1670b:	4c 89 f1             	mov    %r14,%rcx
   1670e:	48 c1 c1 19          	rol    $0x19,%rcx
   16712:	48 31 cb             	xor    %rcx,%rbx
   16715:	48 89 c1             	mov    %rax,%rcx
   16718:	4c 09 f1             	or     %r14,%rcx
   1671b:	4c 21 c1             	and    %r8,%rcx
   1671e:	4c 21 f5             	and    %r14,%rbp
   16721:	4d 03 5a 38          	add    0x38(%r10),%r11
   16725:	49 83 c2 40          	add    $0x40,%r10
   16729:	48 09 e9             	or     %rbp,%rcx
   1672c:	4c 89 cd             	mov    %r9,%rbp
   1672f:	48 31 fd             	xor    %rdi,%rbp
   16732:	48 01 cb             	add    %rcx,%rbx
   16735:	4c 89 f1             	mov    %r14,%rcx
   16738:	48 21 f5             	and    %rsi,%rbp
   1673b:	48 01 d3             	add    %rdx,%rbx
   1673e:	48 89 f2             	mov    %rsi,%rdx
   16741:	4c 31 cd             	xor    %r9,%rbp
   16744:	48 c1 ca 12          	ror    $0x12,%rdx
   16748:	49 89 dc             	mov    %rbx,%r12
   1674b:	48 21 d9             	and    %rbx,%rcx
   1674e:	49 01 eb             	add    %rbp,%r11
   16751:	48 89 f5             	mov    %rsi,%rbp
   16754:	49 c1 cc 1c          	ror    $0x1c,%r12
   16758:	48 c1 cd 0e          	ror    $0xe,%rbp
   1675c:	48 31 d5             	xor    %rdx,%rbp
   1675f:	48 89 f2             	mov    %rsi,%rdx
   16762:	48 c1 c2 17          	rol    $0x17,%rdx
   16766:	48 31 d5             	xor    %rdx,%rbp
   16769:	48 89 da             	mov    %rbx,%rdx
   1676c:	48 c1 c2 1e          	rol    $0x1e,%rdx
   16770:	4c 01 dd             	add    %r11,%rbp
   16773:	48 03 6c 24 28       	add    0x28(%rsp),%rbp
   16778:	49 31 d4             	xor    %rdx,%r12
   1677b:	48 89 da             	mov    %rbx,%rdx
   1677e:	49 01 e8             	add    %rbp,%r8
   16781:	48 c1 c2 19          	rol    $0x19,%rdx
   16785:	4c 31 e2             	xor    %r12,%rdx
   16788:	4d 89 f4             	mov    %r14,%r12
   1678b:	49 09 dc             	or     %rbx,%r12
   1678e:	49 21 c4             	and    %rax,%r12
   16791:	49 09 cc             	or     %rcx,%r12
   16794:	48 8d 0d 45 41 00 00 	lea    0x4145(%rip),%rcx        # 1a8e0 <__GNU_EH_FRAME_HDR>
   1679b:	49 01 d4             	add    %rdx,%r12
   1679e:	4e 8d 5c 25 00       	lea    0x0(%rbp,%r12,1),%r11
   167a3:	4c 39 f9             	cmp    %r15,%rcx
   167a6:	0f 85 4c fc ff ff    	jne    163f8 <mbedtls_internal_sha512_process+0x198>
   167ac:	48 89 84 24 e8 02 00 	mov    %rax,0x2e8(%rsp)
   167b3:	00 
   167b4:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   167b9:	31 c0                	xor    %eax,%eax
   167bb:	4c 89 8c 24 08 03 00 	mov    %r9,0x308(%rsp)
   167c2:	00 
   167c3:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   167c8:	4c 89 84 24 f0 02 00 	mov    %r8,0x2f0(%rsp)
   167cf:	00 
   167d0:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
   167d7:	00 
   167d8:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
   167df:	00 
   167e0:	4c 89 9c 24 d0 02 00 	mov    %r11,0x2d0(%rsp)
   167e7:	00 
   167e8:	48 89 9c 24 d8 02 00 	mov    %rbx,0x2d8(%rsp)
   167ef:	00 
   167f0:	4c 89 b4 24 e0 02 00 	mov    %r14,0x2e0(%rsp)
   167f7:	00 
   167f8:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   167fd:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   16802:	eb 08                	jmp    1680c <mbedtls_internal_sha512_process+0x5ac>
   16804:	0f 1f 40 00          	nopl   0x0(%rax)
   16808:	4c 8b 1c 01          	mov    (%rcx,%rax,1),%r11
   1680c:	4c 01 5c 02 10       	add    %r11,0x10(%rdx,%rax,1)
   16811:	48 83 c0 08          	add    $0x8,%rax
   16815:	48 83 f8 40          	cmp    $0x40,%rax
   16819:	75 ed                	jne    16808 <mbedtls_internal_sha512_process+0x5a8>
   1681b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   16820:	be d0 02 00 00       	mov    $0x2d0,%esi
   16825:	e8 06 c1 ff ff       	callq  12930 <mbedtls_platform_zeroize>
   1682a:	48 8b 84 24 18 03 00 	mov    0x318(%rsp),%rax
   16831:	00 
   16832:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   16839:	00 00 
   1683b:	75 14                	jne    16851 <mbedtls_internal_sha512_process+0x5f1>
   1683d:	48 81 c4 28 03 00 00 	add    $0x328,%rsp
   16844:	31 c0                	xor    %eax,%eax
   16846:	5b                   	pop    %rbx
   16847:	5d                   	pop    %rbp
   16848:	41 5c                	pop    %r12
   1684a:	41 5d                	pop    %r13
   1684c:	41 5e                	pop    %r14
   1684e:	41 5f                	pop    %r15
   16850:	c3                   	retq   
   16851:	e8 2a ca fe ff       	callq  3280 <__stack_chk_fail@plt>
   16856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1685d:	00 00 00 

0000000000016860 <mbedtls_sha512_update.part.0>:
   16860:	41 56                	push   %r14
   16862:	41 55                	push   %r13
   16864:	49 89 d5             	mov    %rdx,%r13
   16867:	ba 80 00 00 00       	mov    $0x80,%edx
   1686c:	41 54                	push   %r12
   1686e:	49 89 fc             	mov    %rdi,%r12
   16871:	55                   	push   %rbp
   16872:	48 89 f5             	mov    %rsi,%rbp
   16875:	53                   	push   %rbx
   16876:	48 8b 07             	mov    (%rdi),%rax
   16879:	41 89 c6             	mov    %eax,%r14d
   1687c:	41 83 e6 7f          	and    $0x7f,%r14d
   16880:	44 29 f2             	sub    %r14d,%edx
   16883:	4c 01 e8             	add    %r13,%rax
   16886:	48 89 07             	mov    %rax,(%rdi)
   16889:	89 d3                	mov    %edx,%ebx
   1688b:	73 05                	jae    16892 <mbedtls_sha512_update.part.0+0x32>
   1688d:	48 83 47 08 01       	addq   $0x1,0x8(%rdi)
   16892:	45 85 f6             	test   %r14d,%r14d
   16895:	74 05                	je     1689c <mbedtls_sha512_update.part.0+0x3c>
   16897:	4c 39 eb             	cmp    %r13,%rbx
   1689a:	76 6e                	jbe    1690a <mbedtls_sha512_update.part.0+0xaa>
   1689c:	31 db                	xor    %ebx,%ebx
   1689e:	49 83 fd 7f          	cmp    $0x7f,%r13
   168a2:	0f 86 3e 01 00 00    	jbe    169e6 <mbedtls_sha512_update.part.0+0x186>
   168a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   168af:	00 
   168b0:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   168b5:	4c 89 e7             	mov    %r12,%rdi
   168b8:	e8 a3 f9 ff ff       	callq  16260 <mbedtls_internal_sha512_process>
   168bd:	85 c0                	test   %eax,%eax
   168bf:	75 37                	jne    168f8 <mbedtls_sha512_update.part.0+0x98>
   168c1:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
   168c5:	4c 89 e8             	mov    %r13,%rax
   168c8:	48 29 d8             	sub    %rbx,%rax
   168cb:	48 83 f8 7f          	cmp    $0x7f,%rax
   168cf:	77 df                	ja     168b0 <mbedtls_sha512_update.part.0+0x50>
   168d1:	48 83 fb 7f          	cmp    $0x7f,%rbx
   168d5:	76 21                	jbe    168f8 <mbedtls_sha512_update.part.0+0x98>
   168d7:	48 01 dd             	add    %rbx,%rbp
   168da:	45 31 c0             	xor    %r8d,%r8d
   168dd:	48 85 c0             	test   %rax,%rax
   168e0:	0f 85 9c 00 00 00    	jne    16982 <mbedtls_sha512_update.part.0+0x122>
   168e6:	5b                   	pop    %rbx
   168e7:	44 89 c0             	mov    %r8d,%eax
   168ea:	5d                   	pop    %rbp
   168eb:	41 5c                	pop    %r12
   168ed:	41 5d                	pop    %r13
   168ef:	41 5e                	pop    %r14
   168f1:	c3                   	retq   
   168f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   168f8:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   168fe:	5b                   	pop    %rbx
   168ff:	5d                   	pop    %rbp
   16900:	44 89 c0             	mov    %r8d,%eax
   16903:	41 5c                	pop    %r12
   16905:	41 5d                	pop    %r13
   16907:	41 5e                	pop    %r14
   16909:	c3                   	retq   
   1690a:	4d 8d 44 24 50       	lea    0x50(%r12),%r8
   1690f:	44 89 f1             	mov    %r14d,%ecx
   16912:	4c 01 c1             	add    %r8,%rcx
   16915:	83 fa 08             	cmp    $0x8,%edx
   16918:	73 3c                	jae    16956 <mbedtls_sha512_update.part.0+0xf6>
   1691a:	f6 c2 04             	test   $0x4,%dl
   1691d:	0f 85 cb 00 00 00    	jne    169ee <mbedtls_sha512_update.part.0+0x18e>
   16923:	85 d2                	test   %edx,%edx
   16925:	74 0f                	je     16936 <mbedtls_sha512_update.part.0+0xd6>
   16927:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1692b:	83 e2 02             	and    $0x2,%edx
   1692e:	88 01                	mov    %al,(%rcx)
   16930:	0f 85 d9 00 00 00    	jne    16a0f <mbedtls_sha512_update.part.0+0x1af>
   16936:	4c 89 c6             	mov    %r8,%rsi
   16939:	4c 89 e7             	mov    %r12,%rdi
   1693c:	e8 1f f9 ff ff       	callq  16260 <mbedtls_internal_sha512_process>
   16941:	41 89 c0             	mov    %eax,%r8d
   16944:	85 c0                	test   %eax,%eax
   16946:	75 9e                	jne    168e6 <mbedtls_sha512_update.part.0+0x86>
   16948:	48 01 dd             	add    %rbx,%rbp
   1694b:	49 29 dd             	sub    %rbx,%r13
   1694e:	45 31 f6             	xor    %r14d,%r14d
   16951:	e9 46 ff ff ff       	jmpq   1689c <mbedtls_sha512_update.part.0+0x3c>
   16956:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1695a:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   1695e:	48 89 ee             	mov    %rbp,%rsi
   16961:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   16965:	48 89 01             	mov    %rax,(%rcx)
   16968:	48 8b 44 1d f8       	mov    -0x8(%rbp,%rbx,1),%rax
   1696d:	48 89 44 19 f8       	mov    %rax,-0x8(%rcx,%rbx,1)
   16972:	48 29 f9             	sub    %rdi,%rcx
   16975:	48 29 ce             	sub    %rcx,%rsi
   16978:	01 d1                	add    %edx,%ecx
   1697a:	c1 e9 03             	shr    $0x3,%ecx
   1697d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   16980:	eb b4                	jmp    16936 <mbedtls_sha512_update.part.0+0xd6>
   16982:	4b 8d 4c 34 50       	lea    0x50(%r12,%r14,1),%rcx
   16987:	89 c2                	mov    %eax,%edx
   16989:	83 f8 08             	cmp    $0x8,%eax
   1698c:	73 25                	jae    169b3 <mbedtls_sha512_update.part.0+0x153>
   1698e:	a8 04                	test   $0x4,%al
   16990:	75 6e                	jne    16a00 <mbedtls_sha512_update.part.0+0x1a0>
   16992:	85 d2                	test   %edx,%edx
   16994:	74 15                	je     169ab <mbedtls_sha512_update.part.0+0x14b>
   16996:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1699a:	88 01                	mov    %al,(%rcx)
   1699c:	f6 c2 02             	test   $0x2,%dl
   1699f:	74 0a                	je     169ab <mbedtls_sha512_update.part.0+0x14b>
   169a1:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   169a6:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   169ab:	45 31 c0             	xor    %r8d,%r8d
   169ae:	e9 33 ff ff ff       	jmpq   168e6 <mbedtls_sha512_update.part.0+0x86>
   169b3:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   169b7:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   169bb:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   169bf:	48 89 11             	mov    %rdx,(%rcx)
   169c2:	89 c2                	mov    %eax,%edx
   169c4:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   169c9:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   169ce:	48 29 f9             	sub    %rdi,%rcx
   169d1:	48 89 ee             	mov    %rbp,%rsi
   169d4:	48 89 ca             	mov    %rcx,%rdx
   169d7:	48 29 ce             	sub    %rcx,%rsi
   169da:	01 c2                	add    %eax,%edx
   169dc:	c1 ea 03             	shr    $0x3,%edx
   169df:	89 d1                	mov    %edx,%ecx
   169e1:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   169e4:	eb c5                	jmp    169ab <mbedtls_sha512_update.part.0+0x14b>
   169e6:	4c 89 e8             	mov    %r13,%rax
   169e9:	e9 ec fe ff ff       	jmpq   168da <mbedtls_sha512_update.part.0+0x7a>
   169ee:	8b 45 00             	mov    0x0(%rbp),%eax
   169f1:	89 01                	mov    %eax,(%rcx)
   169f3:	8b 44 1d fc          	mov    -0x4(%rbp,%rbx,1),%eax
   169f7:	89 44 19 fc          	mov    %eax,-0x4(%rcx,%rbx,1)
   169fb:	e9 36 ff ff ff       	jmpq   16936 <mbedtls_sha512_update.part.0+0xd6>
   16a00:	8b 45 00             	mov    0x0(%rbp),%eax
   16a03:	89 01                	mov    %eax,(%rcx)
   16a05:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   16a09:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   16a0d:	eb 9c                	jmp    169ab <mbedtls_sha512_update.part.0+0x14b>
   16a0f:	0f b7 44 1d fe       	movzwl -0x2(%rbp,%rbx,1),%eax
   16a14:	66 89 44 19 fe       	mov    %ax,-0x2(%rcx,%rbx,1)
   16a19:	e9 18 ff ff ff       	jmpq   16936 <mbedtls_sha512_update.part.0+0xd6>
   16a1e:	66 90                	xchg   %ax,%ax

0000000000016a20 <mbedtls_sha512_update>:
   16a20:	f3 0f 1e fa          	endbr64 
   16a24:	48 85 d2             	test   %rdx,%rdx
   16a27:	74 07                	je     16a30 <mbedtls_sha512_update+0x10>
   16a29:	e9 32 fe ff ff       	jmpq   16860 <mbedtls_sha512_update.part.0>
   16a2e:	66 90                	xchg   %ax,%ax
   16a30:	31 c0                	xor    %eax,%eax
   16a32:	c3                   	retq   
   16a33:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16a3a:	00 00 00 00 
   16a3e:	66 90                	xchg   %ax,%ax

0000000000016a40 <mbedtls_sha512_finish>:
   16a40:	f3 0f 1e fa          	endbr64 
   16a44:	41 54                	push   %r12
   16a46:	4c 8d 67 50          	lea    0x50(%rdi),%r12
   16a4a:	55                   	push   %rbp
   16a4b:	48 89 f5             	mov    %rsi,%rbp
   16a4e:	53                   	push   %rbx
   16a4f:	8b 07                	mov    (%rdi),%eax
   16a51:	48 89 fb             	mov    %rdi,%rbx
   16a54:	83 e0 7f             	and    $0x7f,%eax
   16a57:	8d 48 01             	lea    0x1(%rax),%ecx
   16a5a:	c6 44 07 50 80       	movb   $0x80,0x50(%rdi,%rax,1)
   16a5f:	89 c8                	mov    %ecx,%eax
   16a61:	4c 01 e0             	add    %r12,%rax
   16a64:	83 f9 70             	cmp    $0x70,%ecx
   16a67:	0f 87 d3 00 00 00    	ja     16b40 <mbedtls_sha512_finish+0x100>
   16a6d:	ba 70 00 00 00       	mov    $0x70,%edx
   16a72:	29 ca                	sub    %ecx,%edx
   16a74:	83 fa 08             	cmp    $0x8,%edx
   16a77:	0f 82 73 01 00 00    	jb     16bf0 <mbedtls_sha512_finish+0x1b0>
   16a7d:	48 8d 78 08          	lea    0x8(%rax),%rdi
   16a81:	89 d1                	mov    %edx,%ecx
   16a83:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16a8a:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   16a91:	00 00 
   16a93:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   16a97:	48 29 f8             	sub    %rdi,%rax
   16a9a:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
   16a9d:	31 c0                	xor    %eax,%eax
   16a9f:	c1 e9 03             	shr    $0x3,%ecx
   16aa2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   16aa5:	48 8b 13             	mov    (%rbx),%rdx
   16aa8:	48 8b 43 08          	mov    0x8(%rbx),%rax
   16aac:	4c 89 e6             	mov    %r12,%rsi
   16aaf:	48 89 df             	mov    %rbx,%rdi
   16ab2:	48 89 d1             	mov    %rdx,%rcx
   16ab5:	48 c1 e0 03          	shl    $0x3,%rax
   16ab9:	48 c1 e9 3d          	shr    $0x3d,%rcx
   16abd:	48 c1 e2 03          	shl    $0x3,%rdx
   16ac1:	48 09 c8             	or     %rcx,%rax
   16ac4:	48 0f ca             	bswap  %rdx
   16ac7:	48 89 93 c8 00 00 00 	mov    %rdx,0xc8(%rbx)
   16ace:	48 0f c8             	bswap  %rax
   16ad1:	48 89 83 c0 00 00 00 	mov    %rax,0xc0(%rbx)
   16ad8:	e8 83 f7 ff ff       	callq  16260 <mbedtls_internal_sha512_process>
   16add:	85 c0                	test   %eax,%eax
   16adf:	75 50                	jne    16b31 <mbedtls_sha512_finish+0xf1>
   16ae1:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   16ae5:	48 0f ca             	bswap  %rdx
   16ae8:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   16aec:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   16af0:	48 0f ca             	bswap  %rdx
   16af3:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   16af7:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   16afb:	48 0f ca             	bswap  %rdx
   16afe:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   16b02:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   16b06:	48 0f ca             	bswap  %rdx
   16b09:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   16b0d:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   16b11:	48 0f ca             	bswap  %rdx
   16b14:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   16b18:	48 8b 53 38          	mov    0x38(%rbx),%rdx
   16b1c:	48 0f ca             	bswap  %rdx
   16b1f:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   16b23:	8b 93 d0 00 00 00    	mov    0xd0(%rbx),%edx
   16b29:	85 d2                	test   %edx,%edx
   16b2b:	0f 84 e7 00 00 00    	je     16c18 <mbedtls_sha512_finish+0x1d8>
   16b31:	5b                   	pop    %rbx
   16b32:	5d                   	pop    %rbp
   16b33:	41 5c                	pop    %r12
   16b35:	c3                   	retq   
   16b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16b3d:	00 00 00 
   16b40:	ba 80 00 00 00       	mov    $0x80,%edx
   16b45:	31 ff                	xor    %edi,%edi
   16b47:	29 ca                	sub    %ecx,%edx
   16b49:	83 fa 08             	cmp    $0x8,%edx
   16b4c:	0f 82 7e 00 00 00    	jb     16bd0 <mbedtls_sha512_finish+0x190>
   16b52:	89 d1                	mov    %edx,%ecx
   16b54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16b5b:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   16b62:	00 00 
   16b64:	48 8d 48 08          	lea    0x8(%rax),%rcx
   16b68:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   16b6c:	48 29 c8             	sub    %rcx,%rax
   16b6f:	01 c2                	add    %eax,%edx
   16b71:	83 e2 f8             	and    $0xfffffff8,%edx
   16b74:	83 fa 08             	cmp    $0x8,%edx
   16b77:	72 12                	jb     16b8b <mbedtls_sha512_finish+0x14b>
   16b79:	83 e2 f8             	and    $0xfffffff8,%edx
   16b7c:	31 c0                	xor    %eax,%eax
   16b7e:	89 c6                	mov    %eax,%esi
   16b80:	83 c0 08             	add    $0x8,%eax
   16b83:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   16b87:	39 d0                	cmp    %edx,%eax
   16b89:	72 f3                	jb     16b7e <mbedtls_sha512_finish+0x13e>
   16b8b:	4c 89 e6             	mov    %r12,%rsi
   16b8e:	48 89 df             	mov    %rbx,%rdi
   16b91:	e8 ca f6 ff ff       	callq  16260 <mbedtls_internal_sha512_process>
   16b96:	85 c0                	test   %eax,%eax
   16b98:	75 97                	jne    16b31 <mbedtls_sha512_finish+0xf1>
   16b9a:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
   16b9f:	4c 89 e1             	mov    %r12,%rcx
   16ba2:	31 c0                	xor    %eax,%eax
   16ba4:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
   16bab:	00 
   16bac:	49 c7 44 24 68 00 00 	movq   $0x0,0x68(%r12)
   16bb3:	00 00 
   16bb5:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   16bb9:	48 29 f9             	sub    %rdi,%rcx
   16bbc:	83 c1 70             	add    $0x70,%ecx
   16bbf:	c1 e9 03             	shr    $0x3,%ecx
   16bc2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   16bc5:	e9 db fe ff ff       	jmpq   16aa5 <mbedtls_sha512_finish+0x65>
   16bca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16bd0:	f6 c2 04             	test   $0x4,%dl
   16bd3:	75 63                	jne    16c38 <mbedtls_sha512_finish+0x1f8>
   16bd5:	85 d2                	test   %edx,%edx
   16bd7:	74 b2                	je     16b8b <mbedtls_sha512_finish+0x14b>
   16bd9:	c6 00 00             	movb   $0x0,(%rax)
   16bdc:	f6 c2 02             	test   $0x2,%dl
   16bdf:	74 aa                	je     16b8b <mbedtls_sha512_finish+0x14b>
   16be1:	31 c9                	xor    %ecx,%ecx
   16be3:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   16be8:	eb a1                	jmp    16b8b <mbedtls_sha512_finish+0x14b>
   16bea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16bf0:	f6 c2 04             	test   $0x4,%dl
   16bf3:	75 5b                	jne    16c50 <mbedtls_sha512_finish+0x210>
   16bf5:	85 d2                	test   %edx,%edx
   16bf7:	0f 84 a8 fe ff ff    	je     16aa5 <mbedtls_sha512_finish+0x65>
   16bfd:	c6 00 00             	movb   $0x0,(%rax)
   16c00:	f6 c2 02             	test   $0x2,%dl
   16c03:	0f 84 9c fe ff ff    	je     16aa5 <mbedtls_sha512_finish+0x65>
   16c09:	31 f6                	xor    %esi,%esi
   16c0b:	66 89 74 10 fe       	mov    %si,-0x2(%rax,%rdx,1)
   16c10:	e9 90 fe ff ff       	jmpq   16aa5 <mbedtls_sha512_finish+0x65>
   16c15:	0f 1f 00             	nopl   (%rax)
   16c18:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   16c1c:	48 0f ca             	bswap  %rdx
   16c1f:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   16c23:	48 8b 53 48          	mov    0x48(%rbx),%rdx
   16c27:	5b                   	pop    %rbx
   16c28:	48 0f ca             	bswap  %rdx
   16c2b:	48 89 55 38          	mov    %rdx,0x38(%rbp)
   16c2f:	5d                   	pop    %rbp
   16c30:	41 5c                	pop    %r12
   16c32:	c3                   	retq   
   16c33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16c38:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   16c3e:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   16c45:	00 
   16c46:	e9 40 ff ff ff       	jmpq   16b8b <mbedtls_sha512_finish+0x14b>
   16c4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16c50:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   16c56:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   16c5d:	00 
   16c5e:	e9 42 fe ff ff       	jmpq   16aa5 <mbedtls_sha512_finish+0x65>
   16c63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16c6a:	00 00 00 00 
   16c6e:	66 90                	xchg   %ax,%ax

0000000000016c70 <mbedtls_sha512_common_self_test>:
   16c70:	41 57                	push   %r15
   16c72:	41 56                	push   %r14
   16c74:	41 55                	push   %r13
   16c76:	41 89 f5             	mov    %esi,%r13d
   16c79:	41 54                	push   %r12
   16c7b:	41 89 fc             	mov    %edi,%r12d
   16c7e:	bf 00 04 00 00       	mov    $0x400,%edi
   16c83:	55                   	push   %rbp
   16c84:	48 8d 2d 95 37 00 00 	lea    0x3795(%rip),%rbp        # 1a420 <sha384_test_sum>
   16c8b:	53                   	push   %rbx
   16c8c:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   16c93:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16c9a:	00 00 
   16c9c:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   16ca3:	00 
   16ca4:	31 c0                	xor    %eax,%eax
   16ca6:	85 f6                	test   %esi,%esi
   16ca8:	48 8d 05 b1 36 00 00 	lea    0x36b1(%rip),%rax        # 1a360 <sha512_test_sum>
   16caf:	be 01 00 00 00       	mov    $0x1,%esi
   16cb4:	48 0f 44 e8          	cmove  %rax,%rbp
   16cb8:	e8 23 c6 fe ff       	callq  32e0 <calloc@plt>
   16cbd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   16cc2:	48 85 c0             	test   %rax,%rax
   16cc5:	0f 84 19 03 00 00    	je     16fe4 <mbedtls_sha512_common_self_test+0x374>
   16ccb:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   16cd0:	31 c0                	xor    %eax,%eax
   16cd2:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   16cd7:	31 db                	xor    %ebx,%ebx
   16cd9:	4c 89 f7             	mov    %r14,%rdi
   16cdc:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   16cdf:	b8 04 00 00 00       	mov    $0x4,%eax
   16ce4:	44 29 e8             	sub    %r13d,%eax
   16ce7:	89 c1                	mov    %eax,%ecx
   16ce9:	c1 e0 04             	shl    $0x4,%eax
   16cec:	c1 e1 07             	shl    $0x7,%ecx
   16cef:	48 89 04 24          	mov    %rax,(%rsp)
   16cf3:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   16cf7:	45 85 e4             	test   %r12d,%r12d
   16cfa:	0f 85 58 02 00 00    	jne    16f58 <mbedtls_sha512_common_self_test+0x2e8>
   16d00:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   16d07:	00 00 
   16d09:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   16d10:	00 00 
   16d12:	45 85 ed             	test   %r13d,%r13d
   16d15:	0f 85 55 01 00 00    	jne    16e70 <mbedtls_sha512_common_self_test+0x200>
   16d1b:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   16d22:	e6 09 6a 
   16d25:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   16d2c:	00 
   16d2d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   16d32:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   16d39:	ae 67 bb 
   16d3c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   16d41:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   16d48:	f3 6e 3c 
   16d4b:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   16d50:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   16d57:	f5 4f a5 
   16d5a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   16d5f:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   16d66:	52 0e 51 
   16d69:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   16d6e:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   16d75:	68 05 9b 
   16d78:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   16d7d:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   16d84:	d9 83 1f 
   16d87:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   16d8c:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   16d93:	cd e0 5b 
   16d96:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   16d9b:	48 83 fb 02          	cmp    $0x2,%rbx
   16d9f:	0f 84 55 01 00 00    	je     16efa <mbedtls_sha512_common_self_test+0x28a>
   16da5:	48 8d 05 34 37 00 00 	lea    0x3734(%rip),%rax        # 1a4e0 <sha_test_buflen>
   16dac:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   16db0:	48 85 d2             	test   %rdx,%rdx
   16db3:	74 1e                	je     16dd3 <mbedtls_sha512_common_self_test+0x163>
   16db5:	48 6b f3 71          	imul   $0x71,%rbx,%rsi
   16db9:	48 8d 05 40 37 00 00 	lea    0x3740(%rip),%rax        # 1a500 <sha_test_buf>
   16dc0:	4c 89 f7             	mov    %r14,%rdi
   16dc3:	48 01 c6             	add    %rax,%rsi
   16dc6:	e8 95 fa ff ff       	callq  16860 <mbedtls_sha512_update.part.0>
   16dcb:	85 c0                	test   %eax,%eax
   16dcd:	0f 85 73 01 00 00    	jne    16f46 <mbedtls_sha512_common_self_test+0x2d6>
   16dd3:	4c 8d bc 24 00 01 00 	lea    0x100(%rsp),%r15
   16dda:	00 
   16ddb:	4c 89 f7             	mov    %r14,%rdi
   16dde:	4c 89 fe             	mov    %r15,%rsi
   16de1:	e8 5a fc ff ff       	callq  16a40 <mbedtls_sha512_finish>
   16de6:	85 c0                	test   %eax,%eax
   16de8:	0f 85 58 01 00 00    	jne    16f46 <mbedtls_sha512_common_self_test+0x2d6>
   16dee:	48 8b 14 24          	mov    (%rsp),%rdx
   16df2:	48 89 ee             	mov    %rbp,%rsi
   16df5:	4c 89 ff             	mov    %r15,%rdi
   16df8:	e8 c3 c4 fe ff       	callq  32c0 <memcmp@plt>
   16dfd:	85 c0                	test   %eax,%eax
   16dff:	0f 85 cb 01 00 00    	jne    16fd0 <mbedtls_sha512_common_self_test+0x360>
   16e05:	45 85 e4             	test   %r12d,%r12d
   16e08:	0f 85 72 01 00 00    	jne    16f80 <mbedtls_sha512_common_self_test+0x310>
   16e0e:	48 83 c3 01          	add    $0x1,%rbx
   16e12:	48 83 c5 40          	add    $0x40,%rbp
   16e16:	48 83 fb 03          	cmp    $0x3,%rbx
   16e1a:	0f 85 d7 fe ff ff    	jne    16cf7 <mbedtls_sha512_common_self_test+0x87>
   16e20:	45 85 e4             	test   %r12d,%r12d
   16e23:	0f 85 6f 01 00 00    	jne    16f98 <mbedtls_sha512_common_self_test+0x328>
   16e29:	be d8 00 00 00       	mov    $0xd8,%esi
   16e2e:	4c 89 f7             	mov    %r14,%rdi
   16e31:	45 89 e5             	mov    %r12d,%r13d
   16e34:	e8 f7 ba ff ff       	callq  12930 <mbedtls_platform_zeroize>
   16e39:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   16e3e:	e8 bd c3 fe ff       	callq  3200 <free@plt>
   16e43:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   16e4a:	00 
   16e4b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   16e52:	00 00 
   16e54:	0f 85 aa 01 00 00    	jne    17004 <mbedtls_sha512_common_self_test+0x394>
   16e5a:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   16e61:	44 89 e8             	mov    %r13d,%eax
   16e64:	5b                   	pop    %rbx
   16e65:	5d                   	pop    %rbp
   16e66:	41 5c                	pop    %r12
   16e68:	41 5d                	pop    %r13
   16e6a:	41 5e                	pop    %r14
   16e6c:	41 5f                	pop    %r15
   16e6e:	c3                   	retq   
   16e6f:	90                   	nop
   16e70:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   16e77:	9d bb cb 
   16e7a:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   16e81:	00 
   16e82:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   16e87:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   16e8e:	29 9a 62 
   16e91:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   16e96:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   16e9d:	01 59 91 
   16ea0:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   16ea5:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   16eac:	ec 2f 15 
   16eaf:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   16eb4:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   16ebb:	26 33 67 
   16ebe:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   16ec3:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   16eca:	4a b4 8e 
   16ecd:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   16ed2:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   16ed9:	2e 0c db 
   16edc:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   16ee1:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   16ee8:	48 b5 47 
   16eeb:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   16ef0:	48 83 fb 02          	cmp    $0x2,%rbx
   16ef4:	0f 85 ab fe ff ff    	jne    16da5 <mbedtls_sha512_common_self_test+0x135>
   16efa:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   16eff:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   16f04:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   16f09:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   16f10:	61 61 61 
   16f13:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   16f18:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   16f1e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   16f21:	eb 0f                	jmp    16f32 <mbedtls_sha512_common_self_test+0x2c2>
   16f23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16f28:	41 83 ef 01          	sub    $0x1,%r15d
   16f2c:	0f 84 a8 00 00 00    	je     16fda <mbedtls_sha512_common_self_test+0x36a>
   16f32:	ba e8 03 00 00       	mov    $0x3e8,%edx
   16f37:	48 89 de             	mov    %rbx,%rsi
   16f3a:	4c 89 f7             	mov    %r14,%rdi
   16f3d:	e8 1e f9 ff ff       	callq  16860 <mbedtls_sha512_update.part.0>
   16f42:	85 c0                	test   %eax,%eax
   16f44:	74 e2                	je     16f28 <mbedtls_sha512_common_self_test+0x2b8>
   16f46:	89 c2                	mov    %eax,%edx
   16f48:	45 85 e4             	test   %r12d,%r12d
   16f4b:	75 63                	jne    16fb0 <mbedtls_sha512_common_self_test+0x340>
   16f4d:	41 89 d4             	mov    %edx,%r12d
   16f50:	e9 d4 fe ff ff       	jmpq   16e29 <mbedtls_sha512_common_self_test+0x1b9>
   16f55:	0f 1f 00             	nopl   (%rax)
   16f58:	8b 54 24 14          	mov    0x14(%rsp),%edx
   16f5c:	8d 4b 01             	lea    0x1(%rbx),%ecx
   16f5f:	48 8d 35 43 15 00 00 	lea    0x1543(%rip),%rsi        # 184a9 <bits+0x429>
   16f66:	31 c0                	xor    %eax,%eax
   16f68:	bf 01 00 00 00       	mov    $0x1,%edi
   16f6d:	e8 de c3 fe ff       	callq  3350 <__printf_chk@plt>
   16f72:	e9 89 fd ff ff       	jmpq   16d00 <mbedtls_sha512_common_self_test+0x90>
   16f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16f7e:	00 00 
   16f80:	48 8d 3d 47 14 00 00 	lea    0x1447(%rip),%rdi        # 183ce <bits+0x34e>
   16f87:	e8 94 c2 fe ff       	callq  3220 <puts@plt>
   16f8c:	e9 7d fe ff ff       	jmpq   16e0e <mbedtls_sha512_common_self_test+0x19e>
   16f91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16f98:	bf 0a 00 00 00       	mov    $0xa,%edi
   16f9d:	45 31 e4             	xor    %r12d,%r12d
   16fa0:	e8 6b c2 fe ff       	callq  3210 <putchar@plt>
   16fa5:	e9 7f fe ff ff       	jmpq   16e29 <mbedtls_sha512_common_self_test+0x1b9>
   16faa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16fb0:	48 8d 3d eb 14 00 00 	lea    0x14eb(%rip),%rdi        # 184a2 <bits+0x422>
   16fb7:	89 14 24             	mov    %edx,(%rsp)
   16fba:	e8 61 c2 fe ff       	callq  3220 <puts@plt>
   16fbf:	8b 14 24             	mov    (%rsp),%edx
   16fc2:	41 89 d4             	mov    %edx,%r12d
   16fc5:	e9 5f fe ff ff       	jmpq   16e29 <mbedtls_sha512_common_self_test+0x1b9>
   16fca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16fd0:	ba 01 00 00 00       	mov    $0x1,%edx
   16fd5:	e9 6e ff ff ff       	jmpq   16f48 <mbedtls_sha512_common_self_test+0x2d8>
   16fda:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   16fdf:	e9 ef fd ff ff       	jmpq   16dd3 <mbedtls_sha512_common_self_test+0x163>
   16fe4:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   16fea:	45 85 e4             	test   %r12d,%r12d
   16fed:	0f 84 50 fe ff ff    	je     16e43 <mbedtls_sha512_common_self_test+0x1d3>
   16ff3:	48 8d 3d 96 14 00 00 	lea    0x1496(%rip),%rdi        # 18490 <bits+0x410>
   16ffa:	e8 21 c2 fe ff       	callq  3220 <puts@plt>
   16fff:	e9 3f fe ff ff       	jmpq   16e43 <mbedtls_sha512_common_self_test+0x1d3>
   17004:	e8 77 c2 fe ff       	callq  3280 <__stack_chk_fail@plt>
   17009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000017010 <mbedtls_sha512>:
   17010:	f3 0f 1e fa          	endbr64 
   17014:	41 55                	push   %r13
   17016:	41 54                	push   %r12
   17018:	55                   	push   %rbp
   17019:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   17020:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17027:	00 00 
   17029:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   17030:	00 
   17031:	31 c0                	xor    %eax,%eax
   17033:	83 f9 01             	cmp    $0x1,%ecx
   17036:	0f 87 94 01 00 00    	ja     171d0 <mbedtls_sha512+0x1c0>
   1703c:	49 89 f0             	mov    %rsi,%r8
   1703f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   17044:	49 89 f9             	mov    %rdi,%r9
   17047:	49 89 d5             	mov    %rdx,%r13
   1704a:	48 89 f7             	mov    %rsi,%rdi
   1704d:	89 ca                	mov    %ecx,%edx
   1704f:	b9 19 00 00 00       	mov    $0x19,%ecx
   17054:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1705b:	00 
   1705c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1705f:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   17066:	00 00 
   17068:	85 d2                	test   %edx,%edx
   1706a:	0f 84 e0 00 00 00    	je     17150 <mbedtls_sha512+0x140>
   17070:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   17077:	9d bb cb 
   1707a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1707f:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   17086:	29 9a 62 
   17089:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1708e:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   17095:	01 59 91 
   17098:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1709d:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   170a4:	ec 2f 15 
   170a7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   170ac:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   170b3:	26 33 67 
   170b6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   170bb:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   170c2:	4a b4 8e 
   170c5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   170ca:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   170d1:	2e 0c db 
   170d4:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   170d9:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   170e0:	48 b5 47 
   170e3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   170e8:	89 94 24 d0 00 00 00 	mov    %edx,0xd0(%rsp)
   170ef:	48 89 e5             	mov    %rsp,%rbp
   170f2:	4d 85 c0             	test   %r8,%r8
   170f5:	74 15                	je     1710c <mbedtls_sha512+0xfc>
   170f7:	4c 89 c2             	mov    %r8,%rdx
   170fa:	4c 89 ce             	mov    %r9,%rsi
   170fd:	48 89 ef             	mov    %rbp,%rdi
   17100:	e8 5b f7 ff ff       	callq  16860 <mbedtls_sha512_update.part.0>
   17105:	41 89 c4             	mov    %eax,%r12d
   17108:	85 c0                	test   %eax,%eax
   1710a:	75 0e                	jne    1711a <mbedtls_sha512+0x10a>
   1710c:	4c 89 ee             	mov    %r13,%rsi
   1710f:	48 89 ef             	mov    %rbp,%rdi
   17112:	e8 29 f9 ff ff       	callq  16a40 <mbedtls_sha512_finish>
   17117:	41 89 c4             	mov    %eax,%r12d
   1711a:	be d8 00 00 00       	mov    $0xd8,%esi
   1711f:	48 89 ef             	mov    %rbp,%rdi
   17122:	e8 09 b8 ff ff       	callq  12930 <mbedtls_platform_zeroize>
   17127:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   1712e:	00 
   1712f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   17136:	00 00 
   17138:	0f 85 9d 00 00 00    	jne    171db <mbedtls_sha512+0x1cb>
   1713e:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   17145:	44 89 e0             	mov    %r12d,%eax
   17148:	5d                   	pop    %rbp
   17149:	41 5c                	pop    %r12
   1714b:	41 5d                	pop    %r13
   1714d:	c3                   	retq   
   1714e:	66 90                	xchg   %ax,%ax
   17150:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   17157:	e6 09 6a 
   1715a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1715f:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   17166:	ae 67 bb 
   17169:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1716e:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   17175:	f3 6e 3c 
   17178:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1717d:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   17184:	f5 4f a5 
   17187:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1718c:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   17193:	52 0e 51 
   17196:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1719b:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   171a2:	68 05 9b 
   171a5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   171aa:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   171b1:	d9 83 1f 
   171b4:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   171b9:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   171c0:	cd e0 5b 
   171c3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   171c8:	e9 1b ff ff ff       	jmpq   170e8 <mbedtls_sha512+0xd8>
   171cd:	0f 1f 00             	nopl   (%rax)
   171d0:	41 bc 8b ff ff ff    	mov    $0xffffff8b,%r12d
   171d6:	e9 4c ff ff ff       	jmpq   17127 <mbedtls_sha512+0x117>
   171db:	e8 a0 c0 fe ff       	callq  3280 <__stack_chk_fail@plt>

00000000000171e0 <mbedtls_sha512_self_test>:
   171e0:	f3 0f 1e fa          	endbr64 
   171e4:	31 f6                	xor    %esi,%esi
   171e6:	e9 85 fa ff ff       	jmpq   16c70 <mbedtls_sha512_common_self_test>
   171eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000171f0 <mbedtls_sha384_self_test>:
   171f0:	f3 0f 1e fa          	endbr64 
   171f4:	be 01 00 00 00       	mov    $0x1,%esi
   171f9:	e9 72 fa ff ff       	jmpq   16c70 <mbedtls_sha512_common_self_test>
   171fe:	66 90                	xchg   %ax,%ax

0000000000017200 <__udivti3>:
   17200:	f3 0f 1e fa          	endbr64 
   17204:	49 89 d0             	mov    %rdx,%r8
   17207:	48 89 ca             	mov    %rcx,%rdx
   1720a:	48 85 c9             	test   %rcx,%rcx
   1720d:	75 11                	jne    17220 <__udivti3+0x20>
   1720f:	49 39 f0             	cmp    %rsi,%r8
   17212:	76 44                	jbe    17258 <__udivti3+0x58>
   17214:	48 89 f8             	mov    %rdi,%rax
   17217:	48 89 f2             	mov    %rsi,%rdx
   1721a:	49 f7 f0             	div    %r8
   1721d:	31 d2                	xor    %edx,%edx
   1721f:	c3                   	retq   
   17220:	48 39 f1             	cmp    %rsi,%rcx
   17223:	76 0b                	jbe    17230 <__udivti3+0x30>
   17225:	31 d2                	xor    %edx,%edx
   17227:	31 c0                	xor    %eax,%eax
   17229:	c3                   	retq   
   1722a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17230:	48 0f bd c1          	bsr    %rcx,%rax
   17234:	48 83 f0 3f          	xor    $0x3f,%rax
   17238:	41 89 c2             	mov    %eax,%r10d
   1723b:	85 c0                	test   %eax,%eax
   1723d:	75 49                	jne    17288 <__udivti3+0x88>
   1723f:	48 39 f1             	cmp    %rsi,%rcx
   17242:	72 09                	jb     1724d <__udivti3+0x4d>
   17244:	31 d2                	xor    %edx,%edx
   17246:	31 c0                	xor    %eax,%eax
   17248:	49 39 f8             	cmp    %rdi,%r8
   1724b:	77 d2                	ja     1721f <__udivti3+0x1f>
   1724d:	31 d2                	xor    %edx,%edx
   1724f:	b8 01 00 00 00       	mov    $0x1,%eax
   17254:	c3                   	retq   
   17255:	0f 1f 00             	nopl   (%rax)
   17258:	4c 89 c1             	mov    %r8,%rcx
   1725b:	4d 85 c0             	test   %r8,%r8
   1725e:	75 0d                	jne    1726d <__udivti3+0x6d>
   17260:	b8 01 00 00 00       	mov    $0x1,%eax
   17265:	31 d2                	xor    %edx,%edx
   17267:	49 f7 f0             	div    %r8
   1726a:	48 89 c1             	mov    %rax,%rcx
   1726d:	31 d2                	xor    %edx,%edx
   1726f:	48 89 f0             	mov    %rsi,%rax
   17272:	48 f7 f1             	div    %rcx
   17275:	48 89 c6             	mov    %rax,%rsi
   17278:	48 89 f8             	mov    %rdi,%rax
   1727b:	48 f7 f1             	div    %rcx
   1727e:	48 89 f2             	mov    %rsi,%rdx
   17281:	c3                   	retq   
   17282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17288:	89 c1                	mov    %eax,%ecx
   1728a:	53                   	push   %rbx
   1728b:	bb 40 00 00 00       	mov    $0x40,%ebx
   17290:	4d 89 c3             	mov    %r8,%r11
   17293:	48 d3 e2             	shl    %cl,%rdx
   17296:	48 63 c8             	movslq %eax,%rcx
   17299:	49 89 f1             	mov    %rsi,%r9
   1729c:	48 29 cb             	sub    %rcx,%rbx
   1729f:	89 d9                	mov    %ebx,%ecx
   172a1:	49 d3 eb             	shr    %cl,%r11
   172a4:	89 c1                	mov    %eax,%ecx
   172a6:	49 d3 e0             	shl    %cl,%r8
   172a9:	89 d9                	mov    %ebx,%ecx
   172ab:	49 09 d3             	or     %rdx,%r11
   172ae:	49 d3 e9             	shr    %cl,%r9
   172b1:	89 c1                	mov    %eax,%ecx
   172b3:	48 89 f8             	mov    %rdi,%rax
   172b6:	48 d3 e6             	shl    %cl,%rsi
   172b9:	89 d9                	mov    %ebx,%ecx
   172bb:	4c 89 ca             	mov    %r9,%rdx
   172be:	48 d3 e8             	shr    %cl,%rax
   172c1:	48 09 f0             	or     %rsi,%rax
   172c4:	49 f7 f3             	div    %r11
   172c7:	49 89 d1             	mov    %rdx,%r9
   172ca:	48 89 c6             	mov    %rax,%rsi
   172cd:	49 f7 e0             	mul    %r8
   172d0:	49 39 d1             	cmp    %rdx,%r9
   172d3:	72 1b                	jb     172f0 <__udivti3+0xf0>
   172d5:	44 89 d1             	mov    %r10d,%ecx
   172d8:	48 d3 e7             	shl    %cl,%rdi
   172db:	48 39 c7             	cmp    %rax,%rdi
   172de:	73 05                	jae    172e5 <__udivti3+0xe5>
   172e0:	49 39 d1             	cmp    %rdx,%r9
   172e3:	74 0b                	je     172f0 <__udivti3+0xf0>
   172e5:	48 89 f0             	mov    %rsi,%rax
   172e8:	31 d2                	xor    %edx,%edx
   172ea:	5b                   	pop    %rbx
   172eb:	c3                   	retq   
   172ec:	0f 1f 40 00          	nopl   0x0(%rax)
   172f0:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   172f4:	31 d2                	xor    %edx,%edx
   172f6:	5b                   	pop    %rbx
   172f7:	c3                   	retq   
   172f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   172ff:	00 

0000000000017300 <__libc_csu_init>:
   17300:	f3 0f 1e fa          	endbr64 
   17304:	41 57                	push   %r15
   17306:	4c 8d 3d e3 8b 00 00 	lea    0x8be3(%rip),%r15        # 1fef0 <__frame_dummy_init_array_entry>
   1730d:	41 56                	push   %r14
   1730f:	49 89 d6             	mov    %rdx,%r14
   17312:	41 55                	push   %r13
   17314:	49 89 f5             	mov    %rsi,%r13
   17317:	41 54                	push   %r12
   17319:	41 89 fc             	mov    %edi,%r12d
   1731c:	55                   	push   %rbp
   1731d:	48 8d 2d d4 8b 00 00 	lea    0x8bd4(%rip),%rbp        # 1fef8 <__do_global_dtors_aux_fini_array_entry>
   17324:	53                   	push   %rbx
   17325:	4c 29 fd             	sub    %r15,%rbp
   17328:	48 83 ec 08          	sub    $0x8,%rsp
   1732c:	e8 cf bc fe ff       	callq  3000 <_init>
   17331:	48 c1 fd 03          	sar    $0x3,%rbp
   17335:	74 1f                	je     17356 <__libc_csu_init+0x56>
   17337:	31 db                	xor    %ebx,%ebx
   17339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17340:	4c 89 f2             	mov    %r14,%rdx
   17343:	4c 89 ee             	mov    %r13,%rsi
   17346:	44 89 e7             	mov    %r12d,%edi
   17349:	41 ff 14 df          	callq  *(%r15,%rbx,8)
   1734d:	48 83 c3 01          	add    $0x1,%rbx
   17351:	48 39 dd             	cmp    %rbx,%rbp
   17354:	75 ea                	jne    17340 <__libc_csu_init+0x40>
   17356:	48 83 c4 08          	add    $0x8,%rsp
   1735a:	5b                   	pop    %rbx
   1735b:	5d                   	pop    %rbp
   1735c:	41 5c                	pop    %r12
   1735e:	41 5d                	pop    %r13
   17360:	41 5e                	pop    %r14
   17362:	41 5f                	pop    %r15
   17364:	c3                   	retq   
   17365:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1736c:	00 00 00 00 

0000000000017370 <__libc_csu_fini>:
   17370:	f3 0f 1e fa          	endbr64 
   17374:	c3                   	retq   

Disassembly of section .fini:

0000000000017378 <_fini>:
   17378:	f3 0f 1e fa          	endbr64 
   1737c:	48 83 ec 08          	sub    $0x8,%rsp
   17380:	48 83 c4 08          	add    $0x8,%rsp
   17384:	c3                   	retq   
