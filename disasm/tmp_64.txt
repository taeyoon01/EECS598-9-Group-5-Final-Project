
./examples/mbedtls/ecdh/instr-fast-aesrng/app.instr:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	f3 0f 1e fa          	endbr64 
    4004:	48 83 ec 08          	sub    $0x8,%rsp
    4008:	48 8b 05 d1 9f 02 00 	mov    0x29fd1(%rip),%rax        # 2dfe0 <__gmon_start__>
    400f:	48 85 c0             	test   %rax,%rax
    4012:	74 02                	je     4016 <_init+0x16>
    4014:	ff d0                	callq  *%rax
    4016:	48 83 c4 08          	add    $0x8,%rsp
    401a:	c3                   	retq   

Disassembly of section .plt:

0000000000004020 <.plt>:
    4020:	ff 35 c2 9e 02 00    	pushq  0x29ec2(%rip)        # 2dee8 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	f2 ff 25 c3 9e 02 00 	bnd jmpq *0x29ec3(%rip)        # 2def0 <_GLOBAL_OFFSET_TABLE_+0x10>
    402d:	0f 1f 00             	nopl   (%rax)
    4030:	f3 0f 1e fa          	endbr64 
    4034:	68 00 00 00 00       	pushq  $0x0
    4039:	f2 e9 e1 ff ff ff    	bnd jmpq 4020 <.plt>
    403f:	90                   	nop
    4040:	f3 0f 1e fa          	endbr64 
    4044:	68 01 00 00 00       	pushq  $0x1
    4049:	f2 e9 d1 ff ff ff    	bnd jmpq 4020 <.plt>
    404f:	90                   	nop
    4050:	f3 0f 1e fa          	endbr64 
    4054:	68 02 00 00 00       	pushq  $0x2
    4059:	f2 e9 c1 ff ff ff    	bnd jmpq 4020 <.plt>
    405f:	90                   	nop
    4060:	f3 0f 1e fa          	endbr64 
    4064:	68 03 00 00 00       	pushq  $0x3
    4069:	f2 e9 b1 ff ff ff    	bnd jmpq 4020 <.plt>
    406f:	90                   	nop
    4070:	f3 0f 1e fa          	endbr64 
    4074:	68 04 00 00 00       	pushq  $0x4
    4079:	f2 e9 a1 ff ff ff    	bnd jmpq 4020 <.plt>
    407f:	90                   	nop
    4080:	f3 0f 1e fa          	endbr64 
    4084:	68 05 00 00 00       	pushq  $0x5
    4089:	f2 e9 91 ff ff ff    	bnd jmpq 4020 <.plt>
    408f:	90                   	nop
    4090:	f3 0f 1e fa          	endbr64 
    4094:	68 06 00 00 00       	pushq  $0x6
    4099:	f2 e9 81 ff ff ff    	bnd jmpq 4020 <.plt>
    409f:	90                   	nop
    40a0:	f3 0f 1e fa          	endbr64 
    40a4:	68 07 00 00 00       	pushq  $0x7
    40a9:	f2 e9 71 ff ff ff    	bnd jmpq 4020 <.plt>
    40af:	90                   	nop
    40b0:	f3 0f 1e fa          	endbr64 
    40b4:	68 08 00 00 00       	pushq  $0x8
    40b9:	f2 e9 61 ff ff ff    	bnd jmpq 4020 <.plt>
    40bf:	90                   	nop
    40c0:	f3 0f 1e fa          	endbr64 
    40c4:	68 09 00 00 00       	pushq  $0x9
    40c9:	f2 e9 51 ff ff ff    	bnd jmpq 4020 <.plt>
    40cf:	90                   	nop
    40d0:	f3 0f 1e fa          	endbr64 
    40d4:	68 0a 00 00 00       	pushq  $0xa
    40d9:	f2 e9 41 ff ff ff    	bnd jmpq 4020 <.plt>
    40df:	90                   	nop
    40e0:	f3 0f 1e fa          	endbr64 
    40e4:	68 0b 00 00 00       	pushq  $0xb
    40e9:	f2 e9 31 ff ff ff    	bnd jmpq 4020 <.plt>
    40ef:	90                   	nop
    40f0:	f3 0f 1e fa          	endbr64 
    40f4:	68 0c 00 00 00       	pushq  $0xc
    40f9:	f2 e9 21 ff ff ff    	bnd jmpq 4020 <.plt>
    40ff:	90                   	nop
    4100:	f3 0f 1e fa          	endbr64 
    4104:	68 0d 00 00 00       	pushq  $0xd
    4109:	f2 e9 11 ff ff ff    	bnd jmpq 4020 <.plt>
    410f:	90                   	nop
    4110:	f3 0f 1e fa          	endbr64 
    4114:	68 0e 00 00 00       	pushq  $0xe
    4119:	f2 e9 01 ff ff ff    	bnd jmpq 4020 <.plt>
    411f:	90                   	nop
    4120:	f3 0f 1e fa          	endbr64 
    4124:	68 0f 00 00 00       	pushq  $0xf
    4129:	f2 e9 f1 fe ff ff    	bnd jmpq 4020 <.plt>
    412f:	90                   	nop
    4130:	f3 0f 1e fa          	endbr64 
    4134:	68 10 00 00 00       	pushq  $0x10
    4139:	f2 e9 e1 fe ff ff    	bnd jmpq 4020 <.plt>
    413f:	90                   	nop
    4140:	f3 0f 1e fa          	endbr64 
    4144:	68 11 00 00 00       	pushq  $0x11
    4149:	f2 e9 d1 fe ff ff    	bnd jmpq 4020 <.plt>
    414f:	90                   	nop
    4150:	f3 0f 1e fa          	endbr64 
    4154:	68 12 00 00 00       	pushq  $0x12
    4159:	f2 e9 c1 fe ff ff    	bnd jmpq 4020 <.plt>
    415f:	90                   	nop
    4160:	f3 0f 1e fa          	endbr64 
    4164:	68 13 00 00 00       	pushq  $0x13
    4169:	f2 e9 b1 fe ff ff    	bnd jmpq 4020 <.plt>
    416f:	90                   	nop
    4170:	f3 0f 1e fa          	endbr64 
    4174:	68 14 00 00 00       	pushq  $0x14
    4179:	f2 e9 a1 fe ff ff    	bnd jmpq 4020 <.plt>
    417f:	90                   	nop
    4180:	f3 0f 1e fa          	endbr64 
    4184:	68 15 00 00 00       	pushq  $0x15
    4189:	f2 e9 91 fe ff ff    	bnd jmpq 4020 <.plt>
    418f:	90                   	nop
    4190:	f3 0f 1e fa          	endbr64 
    4194:	68 16 00 00 00       	pushq  $0x16
    4199:	f2 e9 81 fe ff ff    	bnd jmpq 4020 <.plt>
    419f:	90                   	nop
    41a0:	f3 0f 1e fa          	endbr64 
    41a4:	68 17 00 00 00       	pushq  $0x17
    41a9:	f2 e9 71 fe ff ff    	bnd jmpq 4020 <.plt>
    41af:	90                   	nop
    41b0:	f3 0f 1e fa          	endbr64 
    41b4:	68 18 00 00 00       	pushq  $0x18
    41b9:	f2 e9 61 fe ff ff    	bnd jmpq 4020 <.plt>
    41bf:	90                   	nop
    41c0:	f3 0f 1e fa          	endbr64 
    41c4:	68 19 00 00 00       	pushq  $0x19
    41c9:	f2 e9 51 fe ff ff    	bnd jmpq 4020 <.plt>
    41cf:	90                   	nop
    41d0:	f3 0f 1e fa          	endbr64 
    41d4:	68 1a 00 00 00       	pushq  $0x1a
    41d9:	f2 e9 41 fe ff ff    	bnd jmpq 4020 <.plt>
    41df:	90                   	nop

Disassembly of section .plt.got:

00000000000041e0 <__cxa_finalize@plt>:
    41e0:	f3 0f 1e fa          	endbr64 
    41e4:	f2 ff 25 05 9e 02 00 	bnd jmpq *0x29e05(%rip)        # 2dff0 <__cxa_finalize@GLIBC_2.2.5>
    41eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000041f0 <free@plt>:
    41f0:	f3 0f 1e fa          	endbr64 
    41f4:	f2 ff 25 fd 9c 02 00 	bnd jmpq *0x29cfd(%rip)        # 2def8 <free@GLIBC_2.2.5>
    41fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004200 <putchar@plt>:
    4200:	f3 0f 1e fa          	endbr64 
    4204:	f2 ff 25 f5 9c 02 00 	bnd jmpq *0x29cf5(%rip)        # 2df00 <putchar@GLIBC_2.2.5>
    420b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004210 <puts@plt>:
    4210:	f3 0f 1e fa          	endbr64 
    4214:	f2 ff 25 ed 9c 02 00 	bnd jmpq *0x29ced(%rip)        # 2df08 <puts@GLIBC_2.2.5>
    421b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004220 <ferror@plt>:
    4220:	f3 0f 1e fa          	endbr64 
    4224:	f2 ff 25 e5 9c 02 00 	bnd jmpq *0x29ce5(%rip)        # 2df10 <ferror@GLIBC_2.2.5>
    422b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004230 <fread@plt>:
    4230:	f3 0f 1e fa          	endbr64 
    4234:	f2 ff 25 dd 9c 02 00 	bnd jmpq *0x29cdd(%rip)        # 2df18 <fread@GLIBC_2.2.5>
    423b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004240 <clock_gettime@plt>:
    4240:	f3 0f 1e fa          	endbr64 
    4244:	f2 ff 25 d5 9c 02 00 	bnd jmpq *0x29cd5(%rip)        # 2df20 <clock_gettime@GLIBC_2.17>
    424b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004250 <fclose@plt>:
    4250:	f3 0f 1e fa          	endbr64 
    4254:	f2 ff 25 cd 9c 02 00 	bnd jmpq *0x29ccd(%rip)        # 2df28 <fclose@GLIBC_2.2.5>
    425b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004260 <strlen@plt>:
    4260:	f3 0f 1e fa          	endbr64 
    4264:	f2 ff 25 c5 9c 02 00 	bnd jmpq *0x29cc5(%rip)        # 2df30 <strlen@GLIBC_2.2.5>
    426b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004270 <__stack_chk_fail@plt>:
    4270:	f3 0f 1e fa          	endbr64 
    4274:	f2 ff 25 bd 9c 02 00 	bnd jmpq *0x29cbd(%rip)        # 2df38 <__stack_chk_fail@GLIBC_2.4>
    427b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004280 <setbuf@plt>:
    4280:	f3 0f 1e fa          	endbr64 
    4284:	f2 ff 25 b5 9c 02 00 	bnd jmpq *0x29cb5(%rip)        # 2df40 <setbuf@GLIBC_2.2.5>
    428b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004290 <gmtime_r@plt>:
    4290:	f3 0f 1e fa          	endbr64 
    4294:	f2 ff 25 ad 9c 02 00 	bnd jmpq *0x29cad(%rip)        # 2df48 <gmtime_r@GLIBC_2.2.5>
    429b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042a0 <memset@plt>:
    42a0:	f3 0f 1e fa          	endbr64 
    42a4:	f2 ff 25 a5 9c 02 00 	bnd jmpq *0x29ca5(%rip)        # 2df50 <memset@GLIBC_2.2.5>
    42ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042b0 <memcmp@plt>:
    42b0:	f3 0f 1e fa          	endbr64 
    42b4:	f2 ff 25 9d 9c 02 00 	bnd jmpq *0x29c9d(%rip)        # 2df58 <memcmp@GLIBC_2.2.5>
    42bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042c0 <fgets@plt>:
    42c0:	f3 0f 1e fa          	endbr64 
    42c4:	f2 ff 25 95 9c 02 00 	bnd jmpq *0x29c95(%rip)        # 2df60 <fgets@GLIBC_2.2.5>
    42cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042d0 <calloc@plt>:
    42d0:	f3 0f 1e fa          	endbr64 
    42d4:	f2 ff 25 8d 9c 02 00 	bnd jmpq *0x29c8d(%rip)        # 2df68 <calloc@GLIBC_2.2.5>
    42db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042e0 <strcmp@plt>:
    42e0:	f3 0f 1e fa          	endbr64 
    42e4:	f2 ff 25 85 9c 02 00 	bnd jmpq *0x29c85(%rip)        # 2df70 <strcmp@GLIBC_2.2.5>
    42eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042f0 <__memcpy_chk@plt>:
    42f0:	f3 0f 1e fa          	endbr64 
    42f4:	f2 ff 25 7d 9c 02 00 	bnd jmpq *0x29c7d(%rip)        # 2df78 <__memcpy_chk@GLIBC_2.3.4>
    42fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004300 <fopen64@plt>:
    4300:	f3 0f 1e fa          	endbr64 
    4304:	f2 ff 25 75 9c 02 00 	bnd jmpq *0x29c75(%rip)        # 2df80 <fopen64@GLIBC_2.2.5>
    430b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004310 <strtol@plt>:
    4310:	f3 0f 1e fa          	endbr64 
    4314:	f2 ff 25 6d 9c 02 00 	bnd jmpq *0x29c6d(%rip)        # 2df88 <strtol@GLIBC_2.2.5>
    431b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004320 <memcpy@plt>:
    4320:	f3 0f 1e fa          	endbr64 
    4324:	f2 ff 25 65 9c 02 00 	bnd jmpq *0x29c65(%rip)        # 2df90 <memcpy@GLIBC_2.14>
    432b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004330 <time@plt>:
    4330:	f3 0f 1e fa          	endbr64 
    4334:	f2 ff 25 5d 9c 02 00 	bnd jmpq *0x29c5d(%rip)        # 2df98 <time@GLIBC_2.2.5>
    433b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004340 <malloc@plt>:
    4340:	f3 0f 1e fa          	endbr64 
    4344:	f2 ff 25 55 9c 02 00 	bnd jmpq *0x29c55(%rip)        # 2dfa0 <malloc@GLIBC_2.2.5>
    434b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004350 <__printf_chk@plt>:
    4350:	f3 0f 1e fa          	endbr64 
    4354:	f2 ff 25 4d 9c 02 00 	bnd jmpq *0x29c4d(%rip)        # 2dfa8 <__printf_chk@GLIBC_2.3.4>
    435b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004360 <memmove@plt>:
    4360:	f3 0f 1e fa          	endbr64 
    4364:	f2 ff 25 45 9c 02 00 	bnd jmpq *0x29c45(%rip)        # 2dfb0 <memmove@GLIBC_2.2.5>
    436b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004370 <__explicit_bzero_chk@plt>:
    4370:	f3 0f 1e fa          	endbr64 
    4374:	f2 ff 25 3d 9c 02 00 	bnd jmpq *0x29c3d(%rip)        # 2dfb8 <__explicit_bzero_chk@GLIBC_2.25>
    437b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004380 <__memset_chk@plt>:
    4380:	f3 0f 1e fa          	endbr64 
    4384:	f2 ff 25 35 9c 02 00 	bnd jmpq *0x29c35(%rip)        # 2dfc0 <__memset_chk@GLIBC_2.3.4>
    438b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004390 <fwrite@plt>:
    4390:	f3 0f 1e fa          	endbr64 
    4394:	f2 ff 25 2d 9c 02 00 	bnd jmpq *0x29c2d(%rip)        # 2dfc8 <fwrite@GLIBC_2.2.5>
    439b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000043a0 <main>:
    43a0:	e9 1b b4 02 00       	jmpq   2f7c0 <.instr.bb_43a0>
    43a5:	55                   	push   %rbp
    43a6:	49 89 f5             	mov    %rsi,%r13
    43a9:	41 54                	push   %r12
    43ab:	41 89 fc             	mov    %edi,%r12d
    43ae:	bf 01 00 00 00       	mov    $0x1,%edi
    43b3:	53                   	push   %rbx
    43b4:	48 83 ec 40          	sub    $0x40,%rsp
    43b8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    43bf:	00 00 
    43c1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    43c6:	31 c0                	xor    %eax,%eax
    43c8:	48 89 e6             	mov    %rsp,%rsi
    43cb:	e8 70 fe ff ff       	callq  4240 <clock_gettime@plt>
    43d0:	e9 40 b4 02 00       	jmpq   2f815 <instr.bb_43d0>
    43d5:	00 00                	add    %al,(%rax)
    43d7:	e9 40 b4 02 00       	jmpq   2f81c <instr.bb_43d7>
    43dc:	8f                   	(bad)  
    43dd:	38 01                	cmp    %al,(%rcx)
    43df:	00 00                	add    %al,(%rax)
    43e1:	e9 40 b4 02 00       	jmpq   2f826 <instr.bb_43e1>
    43e6:	e9 6f b4 02 00       	jmpq   2f85a <instr.bb_43e6>
    43eb:	bf 01 00 00 00       	mov    $0x1,%edi
    43f0:	e8 4b fe ff ff       	callq  4240 <clock_gettime@plt>
    43f5:	e9 6f b4 02 00       	jmpq   2f869 <instr.bb_43f5>
    43fa:	e8 01 05 00 00       	callq  4900 <cf_run_target>
    43ff:	e9 9e b4 02 00       	jmpq   2f8a2 <instr.bb_43ff>
    4404:	e9 9e b4 02 00       	jmpq   2f8a7 <instr.bb_4404>
    4409:	e9 cd b4 02 00       	jmpq   2f8db <instr.bb_4409>
    440e:	bf 01 00 00 00       	mov    $0x1,%edi
    4413:	e8 28 fe ff ff       	callq  4240 <clock_gettime@plt>
    4418:	e9 cd b4 02 00       	jmpq   2f8ea <instr.bb_4418>
    441d:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    4422:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    4429:	9b c4 20 
    442c:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    4431:	4c 89 c7             	mov    %r8,%rdi
    4434:	48 2b 7c 24 08       	sub    0x8(%rsp),%rdi
    4439:	49 89 cd             	mov    %rcx,%r13
    443c:	4c 2b 2c 24          	sub    (%rsp),%r13
    4440:	48 89 f8             	mov    %rdi,%rax
    4443:	48 c1 ff 3f          	sar    $0x3f,%rdi
    4447:	4d 69 ed 40 42 0f 00 	imul   $0xf4240,%r13,%r13
    444e:	49 29 cc             	sub    %rcx,%r12
    4451:	48 f7 ee             	imul   %rsi
    4454:	49 69 cc 40 42 0f 00 	imul   $0xf4240,%r12,%rcx
    445b:	48 c1 fa 07          	sar    $0x7,%rdx
    445f:	48 29 fa             	sub    %rdi,%rdx
    4462:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    4467:	49 01 d5             	add    %rdx,%r13
    446a:	4c 29 c7             	sub    %r8,%rdi
    446d:	48 89 f8             	mov    %rdi,%rax
    4470:	48 c1 ff 3f          	sar    $0x3f,%rdi
    4474:	48 f7 ee             	imul   %rsi
    4477:	48 89 d6             	mov    %rdx,%rsi
    447a:	48 c1 fe 07          	sar    $0x7,%rsi
    447e:	48 29 fe             	sub    %rdi,%rsi
    4481:	bf 0a 00 00 00       	mov    $0xa,%edi
    4486:	4c 8d 24 31          	lea    (%rcx,%rsi,1),%r12
    448a:	e8 71 fd ff ff       	callq  4200 <putchar@plt>
    448f:	e9 cd b4 02 00       	jmpq   2f961 <instr.bb_448f>
    4494:	00 4c 89 e9          	add    %cl,-0x17(%rcx,%rcx,4)
    4498:	ba 09 00 00 00       	mov    $0x9,%edx
    449d:	48 8d 35 9c 6b 01 00 	lea    0x16b9c(%rip),%rsi        # 1b040 <_IO_stdin_used+0x40>
    44a4:	bf 01 00 00 00       	mov    $0x1,%edi
    44a9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    44ad:	b8 01 00 00 00       	mov    $0x1,%eax
    44b2:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    44b7:	f2 0f 5e 05 c9 6b 01 	divsd  0x16bc9(%rip),%xmm0        # 1b088 <_IO_stdin_used+0x88>
    44be:	00 
    44bf:	e8 8c fe ff ff       	callq  4350 <__printf_chk@plt>
    44c4:	e9 cd b4 02 00       	jmpq   2f996 <instr.bb_44c4>
    44c9:	b8 09 00 00 00       	mov    $0x9,%eax
    44ce:	4c 89 e1             	mov    %r12,%rcx
    44d1:	ba 09 00 00 00       	mov    $0x9,%edx
    44d6:	bf 01 00 00 00       	mov    $0x1,%edi
    44db:	b8 01 00 00 00       	mov    $0x1,%eax
    44e0:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
    44e5:	48 8d 35 74 6b 01 00 	lea    0x16b74(%rip),%rsi        # 1b060 <_IO_stdin_used+0x60>
    44ec:	f2 0f 5e 05 94 6b 01 	divsd  0x16b94(%rip),%xmm0        # 1b088 <_IO_stdin_used+0x88>
    44f3:	00 
    44f4:	e8 57 fe ff ff       	callq  4350 <__printf_chk@plt>
    44f9:	e9 cd b4 02 00       	jmpq   2f9cb <instr.bb_44f9>
    44fe:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4505:	00 00 
    4507:	0f 85 b8 00 00 00    	jne    45c5 <main+0x225>
    450d:	e9 cd b4 02 00       	jmpq   2f9df <instr.bb_450d>
    4512:	c0 5b 41 5c          	rcrb   $0x5c,0x41(%rbx)
    4516:	41 5d                	pop    %r13
    4518:	c3                   	retq   
    4519:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    451d:	31 f6                	xor    %esi,%esi
    451f:	ba 0a 00 00 00       	mov    $0xa,%edx
    4524:	e8 e7 fd ff ff       	callq  4310 <strtol@plt>
    4529:	48 8d 35 e3 6a 01 00 	lea    0x16ae3(%rip),%rsi        # 1b013 <_IO_stdin_used+0x13>
    4530:	bf 01 00 00 00       	mov    $0x1,%edi
    4535:	48 89 c3             	mov    %rax,%rbx
    4538:	89 c2                	mov    %eax,%edx
    453a:	31 c0                	xor    %eax,%eax
    453c:	e8 0f fe ff ff       	callq  4350 <__printf_chk@plt>
    4541:	41 83 fc 02          	cmp    $0x2,%r12d
    4545:	0f 84 7f 00 00 00    	je     45ca <main+0x22a>
    454b:	49 8b 7d 10          	mov    0x10(%r13),%rdi
    454f:	48 8d 35 d0 6a 01 00 	lea    0x16ad0(%rip),%rsi        # 1b026 <_IO_stdin_used+0x26>
    4556:	45 31 e4             	xor    %r12d,%r12d
    4559:	e8 82 fd ff ff       	callq  42e0 <strcmp@plt>
    455e:	85 c0                	test   %eax,%eax
    4560:	74 4f                	je     45b1 <main+0x211>
    4562:	e8 59 03 00 00       	callq  48c0 <cf_init_target>
    4567:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    456c:	bf 01 00 00 00       	mov    $0x1,%edi
    4571:	e8 ca fc ff ff       	callq  4240 <clock_gettime@plt>
    4576:	85 db                	test   %ebx,%ebx
    4578:	0f 8e 8b fe ff ff    	jle    4409 <main+0x69>
    457e:	83 eb 01             	sub    $0x1,%ebx
    4581:	41 83 f4 01          	xor    $0x1,%r12d
    4585:	0f 1f 00             	nopl   (%rax)
    4588:	85 db                	test   %ebx,%ebx
    458a:	40 0f 94 c7          	sete   %dil
    458e:	83 eb 01             	sub    $0x1,%ebx
    4591:	44 09 e7             	or     %r12d,%edi
    4594:	40 0f b6 ff          	movzbl %dil,%edi
    4598:	e8 63 03 00 00       	callq  4900 <cf_run_target>
    459d:	e8 5e 01 00 00       	callq  4700 <drop_taint>
    45a2:	e8 99 04 00 00       	callq  4a40 <cf_prepare_next>
    45a7:	83 fb ff             	cmp    $0xffffffff,%ebx
    45aa:	75 dc                	jne    4588 <main+0x1e8>
    45ac:	e9 58 fe ff ff       	jmpq   4409 <main+0x69>
    45b1:	48 8d 3d 73 6a 01 00 	lea    0x16a73(%rip),%rdi        # 1b02b <_IO_stdin_used+0x2b>
    45b8:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    45be:	e8 4d fc ff ff       	callq  4210 <puts@plt>
    45c3:	eb 9d                	jmp    4562 <main+0x1c2>
    45c5:	e8 a6 fc ff ff       	callq  4270 <__stack_chk_fail@plt>
    45ca:	45 31 e4             	xor    %r12d,%r12d
    45cd:	eb 93                	jmp    4562 <main+0x1c2>
    45cf:	90                   	nop

00000000000045d0 <_start>:
    45d0:	f3 0f 1e fa          	endbr64 
    45d4:	31 ed                	xor    %ebp,%ebp
    45d6:	49 89 d1             	mov    %rdx,%r9
    45d9:	5e                   	pop    %rsi
    45da:	48 89 e2             	mov    %rsp,%rdx
    45dd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    45e1:	50                   	push   %rax
    45e2:	54                   	push   %rsp
    45e3:	4c 8d 05 96 65 01 00 	lea    0x16596(%rip),%r8        # 1ab80 <__libc_csu_fini>
    45ea:	48 8d 0d 1f 65 01 00 	lea    0x1651f(%rip),%rcx        # 1ab10 <__libc_csu_init>
    45f1:	48 8d 3d a8 fd ff ff 	lea    -0x258(%rip),%rdi        # 43a0 <main>
    45f8:	90                   	nop
    45f9:	e9 02 aa 02 00       	jmpq   2f000 <instrument_entrypoint>
    45fe:	f4                   	hlt    
    45ff:	90                   	nop

0000000000004600 <deregister_tm_clones>:
    4600:	e9 eb b3 02 00       	jmpq   2f9f0 <deregister_tm_clones.instr.bb_4600>
    4605:	e9 0f b4 02 00       	jmpq   2fa19 <instr.bb_461f>
    460a:	7a 9a                	jp     45a6 <main+0x206>
    460c:	02 00                	add    (%rax),%al
    460e:	48 39 f8             	cmp    %rdi,%rax
    4611:	74 15                	je     4628 <deregister_tm_clones+0x28>
    4613:	e9 f1 b3 02 00       	jmpq   2fa09 <instr.bb_4613>
    4618:	02 00                	add    (%rax),%al
    461a:	48 85 c0             	test   %rax,%rax
    461d:	74 09                	je     4628 <deregister_tm_clones+0x28>
    461f:	eb e4                	jmp    4605 <deregister_tm_clones+0x5>
    4621:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4628:	c3                   	retq   
    4629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004630 <register_tm_clones>:
    4630:	48 8d 3d 51 9a 02 00 	lea    0x29a51(%rip),%rdi        # 2e088 <__TMC_END__>
    4637:	48 8d 35 4a 9a 02 00 	lea    0x29a4a(%rip),%rsi        # 2e088 <__TMC_END__>
    463e:	48 29 fe             	sub    %rdi,%rsi
    4641:	48 89 f0             	mov    %rsi,%rax
    4644:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4648:	48 c1 f8 03          	sar    $0x3,%rax
    464c:	48 01 c6             	add    %rax,%rsi
    464f:	48 d1 fe             	sar    %rsi
    4652:	74 14                	je     4668 <register_tm_clones+0x38>
    4654:	48 8b 05 8d 99 02 00 	mov    0x2998d(%rip),%rax        # 2dfe8 <_ITM_registerTMCloneTable>
    465b:	48 85 c0             	test   %rax,%rax
    465e:	74 08                	je     4668 <register_tm_clones+0x38>
    4660:	ff e0                	jmpq   *%rax
    4662:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4668:	c3                   	retq   
    4669:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004670 <__do_global_dtors_aux>:
    4670:	e9 ab b3 02 00       	jmpq   2fa20 <__do_global_dtors_aux.instr.bb_4670>
    4675:	3d 25 9a 02 00       	cmp    $0x29a25,%eax
    467a:	00 75 2b             	add    %dh,0x2b(%rbp)
    467d:	e9 b9 b3 02 00       	jmpq   2fa3b <instr.bb_467d>
    4682:	99                   	cltd   
    4683:	02 00                	add    (%rax),%al
    4685:	00 48 89             	add    %cl,-0x77(%rax)
    4688:	e5 74                	in     $0x74,%eax
    468a:	0c e9                	or     $0xe9,%al
    468c:	bd b3 02 00 02       	mov    $0x20002b3,%ebp
    4691:	00 e8                	add    %ch,%al
    4693:	49 fb                	rex.WB sti 
    4695:	ff                   	(bad)  
    4696:	ff                   	(bad)  
    4697:	e9 bd b3 02 00       	jmpq   2fa59 <instr.bb_4697>
    469c:	e9 bd b3 02 00       	jmpq   2fa5e <instr.bb_469c>
    46a1:	00 01                	add    %al,(%rcx)
    46a3:	5d                   	pop    %rbp
    46a4:	c3                   	retq   
    46a5:	0f 1f 00             	nopl   (%rax)
    46a8:	c3                   	retq   
    46a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000046b0 <frame_dummy>:
    46b0:	f3 0f 1e fa          	endbr64 
    46b4:	e9 77 ff ff ff       	jmpq   4630 <register_tm_clones>
    46b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000046c0 <classify>:
    46c0:	e9 ab b3 02 00       	jmpq   2fa70 <classify.instr.bb_46c0>
    46c5:	48 89 e5             	mov    %rsp,%rbp
    46c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46cc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    46cf:	90                   	nop
    46d0:	5d                   	pop    %rbp
    46d1:	c3                   	retq   
    46d2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    46d9:	00 00 00 00 
    46dd:	0f 1f 00             	nopl   (%rax)

00000000000046e0 <declassify>:
    46e0:	e9 cb b3 02 00       	jmpq   2fab0 <declassify.instr.bb_46e0>
    46e5:	48 89 e5             	mov    %rsp,%rbp
    46e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46ec:	89 75 f4             	mov    %esi,-0xc(%rbp)
    46ef:	90                   	nop
    46f0:	5d                   	pop    %rbp
    46f1:	c3                   	retq   
    46f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    46f9:	00 00 00 00 
    46fd:	0f 1f 00             	nopl   (%rax)

0000000000004700 <drop_taint>:
    4700:	e9 eb b3 02 00       	jmpq   2faf0 <drop_taint.instr.bb_4700>
    4705:	48 89 e5             	mov    %rsp,%rbp
    4708:	90                   	nop
    4709:	5d                   	pop    %rbp
    470a:	c3                   	retq   
    470b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004710 <dump_secret>:
    4710:	e9 fb b3 02 00       	jmpq   2fb10 <dump_secret.instr.bb_4710>
    4715:	57                   	push   %rdi
    4716:	49 89 ff             	mov    %rdi,%r15
    4719:	41 56                	push   %r14
    471b:	49 89 d6             	mov    %rdx,%r14
    471e:	48 63 d6             	movslq %esi,%rdx
    4721:	41 55                	push   %r13
    4723:	48 89 d7             	mov    %rdx,%rdi
    4726:	41 54                	push   %r12
    4728:	53                   	push   %rbx
    4729:	89 f3                	mov    %esi,%ebx
    472b:	48 83 ec 10          	sub    $0x10,%rsp
    472f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    4734:	e8 07 fc ff ff       	callq  4340 <malloc@plt>
    4739:	e9 6b b4 02 00       	jmpq   2fba9 <instr.bb_4739>
    473e:	49 89 c5             	mov    %rax,%r13
    4741:	e8 fa fb ff ff       	callq  4340 <malloc@plt>
    4746:	e9 a1 b4 02 00       	jmpq   2fbec <instr.bb_4746>
    474b:	4c 89 fe             	mov    %r15,%rsi
    474e:	4c 89 ef             	mov    %r13,%rdi
    4751:	49 89 c4             	mov    %rax,%r12
    4754:	e8 c7 fb ff ff       	callq  4320 <memcpy@plt>
    4759:	e9 a1 b4 02 00       	jmpq   2fbff <instr.bb_4759>
    475e:	4c 89 e7             	mov    %r12,%rdi
    4761:	41 89 1c 24          	mov    %ebx,(%r12)
    4765:	e8 76 ff ff ff       	callq  46e0 <declassify>
    476a:	e9 a1 b4 02 00       	jmpq   2fc10 <instr.bb_476a>
    476f:	89 ef                	mov    %ebp,%edi
    4771:	e8 6a ff ff ff       	callq  46e0 <declassify>
    4776:	e9 a1 b4 02 00       	jmpq   2fc1c <instr.bb_4776>
    477b:	e9 a5 b4 02 00       	jmpq   2fc25 <instr.bb_477b>
    4780:	35 83 68 01 00       	xor    $0x16883,%eax
    4785:	bf 01 00 00 00       	mov    $0x1,%edi
    478a:	31 c0                	xor    %eax,%eax
    478c:	e8 bf fb ff ff       	callq  4350 <__printf_chk@plt>
    4791:	e9 da b4 02 00       	jmpq   2fc70 <instr.bb_4791>
    4796:	c0 7e 2e e9          	sarb   $0xe9,0x2e(%rsi)
    479a:	de b4 02 00 6b 68 01 	fidivs 0x1686b00(%rdx,%rax,1)
    47a1:	00 66 0f             	add    %ah,0xf(%rsi)
    47a4:	1f                   	(bad)  
    47a5:	44 00 00             	add    %r8b,(%rax)
    47a8:	e9 db b4 02 00       	jmpq   2fc88 <instr.bb_47a8>
    47ad:	00 4c 89 f6          	add    %cl,-0xa(%rcx,%rcx,4)
    47b1:	bf 01 00 00 00       	mov    $0x1,%edi
    47b6:	31 c0                	xor    %eax,%eax
    47b8:	48 83 c3 01          	add    $0x1,%rbx
    47bc:	e8 8f fb ff ff       	callq  4350 <__printf_chk@plt>
    47c1:	e9 db b4 02 00       	jmpq   2fca1 <instr.bb_47c1>
    47c6:	e1 e9                	loope  47b1 <dump_secret+0xa1>
    47c8:	df b4 02 00 e8 2f fa 	fbstp  -0x5d01800(%rdx,%rax,1)
    47cf:	ff                   	(bad)  
    47d0:	ff                   	(bad)  
    47d1:	e9 df b4 02 00       	jmpq   2fcb5 <instr.bb_47d1>
    47d6:	fa                   	cli    
    47d7:	ff                   	(bad)  
    47d8:	ff                   	(bad)  
    47d9:	e9 df b4 02 00       	jmpq   2fcbd <instr.bb_47d9>
    47de:	41 5c                	pop    %r12
    47e0:	41 5d                	pop    %r13
    47e2:	41 5e                	pop    %r14
    47e4:	41 5f                	pop    %r15
    47e6:	c3                   	retq   
    47e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    47ee:	00 00 

00000000000047f0 <foo>:
    47f0:	e9 db b4 02 00       	jmpq   2fcd0 <foo.instr.bb_47f0>
    47f5:	e9 16 b5 02 00       	jmpq   2fd10 <instr.bb_4816>
    47fa:	ec                   	in     (%dx),%al
    47fb:	10 bf 04 00 00 00    	adc    %bh,0x4(%rdi)
    4801:	e8 3a fb ff ff       	callq  4340 <malloc@plt>
    4806:	e9 f5 b4 02 00       	jmpq   2fd00 <instr.bb_4806>
    480b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    480e:	48 89 c7             	mov    %rax,%rdi
    4811:	e8 da f9 ff ff       	callq  41f0 <free@plt>
    4816:	eb dd                	jmp    47f5 <foo+0x5>
    4818:	c3                   	retq   
    4819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004820 <myrng>:
    4820:	e9 fb b4 02 00       	jmpq   2fd20 <myrng.instr.bb_4820>
    4825:	85 d2                	test   %edx,%edx
    4827:	0f 84 8c 00 00 00    	je     48b9 <myrng+0x99>
    482d:	e9 25 b5 02 00       	jmpq   2fd57 <instr.bb_482d>
    4832:	41 56                	push   %r14
    4834:	49 89 f6             	mov    %rsi,%r14
    4837:	41 55                	push   %r13
    4839:	49 89 d5             	mov    %rdx,%r13
    483c:	41 54                	push   %r12
    483e:	4c 8d 25 5b 99 02 00 	lea    0x2995b(%rip),%r12        # 2e1a0 <rngCtx>
    4845:	53                   	push   %rbx
    4846:	31 db                	xor    %ebx,%ebx
    4848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    484f:	00 
    4850:	e9 2b b5 02 00       	jmpq   2fd80 <instr.bb_4850>
    4855:	e8 a6 3b 01 00       	callq  18400 <mbedtls_sha256_starts>
    485a:	e9 2b b5 02 00       	jmpq   2fd8a <instr.bb_485a>
    485f:	02 00                	add    (%rax),%al
    4861:	4c 89 e7             	mov    %r12,%rdi
    4864:	ba 20 00 00 00       	mov    $0x20,%edx
    4869:	e8 72 49 01 00       	callq  191e0 <mbedtls_sha256_update>
    486e:	e9 2b b5 02 00       	jmpq   2fd9e <instr.bb_486e>
    4873:	02 00                	add    (%rax),%al
    4875:	4c 89 e7             	mov    %r12,%rdi
    4878:	e8 83 49 01 00       	callq  19200 <mbedtls_sha256_finish>
    487d:	e9 2b b5 02 00       	jmpq   2fdad <instr.bb_487d>
    4882:	e9 2f b5 02 00       	jmpq   2fdb6 <instr.bb_4882>
    4887:	02 00                	add    (%rax),%al
    4889:	48 89 d8             	mov    %rbx,%rax
    488c:	48 29 d9             	sub    %rbx,%rcx
    488f:	90                   	nop
    4890:	e9 3b b5 02 00       	jmpq   2fdd0 <instr.bb_4890>
    4895:	88 14 06             	mov    %dl,(%rsi,%rax,1)
    4898:	48 83 c0 01          	add    $0x1,%rax
    489c:	49 39 c5             	cmp    %rax,%r13
    489f:	75 ef                	jne    4890 <myrng+0x70>
    48a1:	e9 3f b5 02 00       	jmpq   2fde5 <instr.bb_48a1>
    48a6:	63 df                	movslq %edi,%ebx
    48a8:	4c 39 eb             	cmp    %r13,%rbx
    48ab:	72 a3                	jb     4850 <myrng+0x30>
    48ad:	e9 43 b5 02 00       	jmpq   2fdf5 <instr.bb_48ad>
    48b2:	41 5d                	pop    %r13
    48b4:	41 5e                	pop    %r14
    48b6:	41 5f                	pop    %r15
    48b8:	c3                   	retq   
    48b9:	31 c0                	xor    %eax,%eax
    48bb:	c3                   	retq   
    48bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000048c0 <cf_init_target>:
    48c0:	e9 4b b5 02 00       	jmpq   2fe10 <cf_init_target.instr.bb_48c0>
    48c5:	e9 f0 b5 02 00       	jmpq   2feba <instr.bb_48fb>
    48ca:	98                   	cwtl   
    48cb:	02 00                	add    (%rax),%al
    48cd:	e8 8e 3a 01 00       	callq  18360 <mbedtls_sha256_init>
    48d2:	e9 55 b5 02 00       	jmpq   2fe2c <instr.bb_48d2>
    48d7:	e8 64 fa ff ff       	callq  4340 <malloc@plt>
    48dc:	e9 8b b5 02 00       	jmpq   2fe6c <instr.bb_48dc>
    48e1:	31 ff                	xor    %edi,%edi
    48e3:	49 89 c4             	mov    %rax,%r12
    48e6:	48 89 c6             	mov    %rax,%rsi
    48e9:	e8 32 ff ff ff       	callq  4820 <myrng>
    48ee:	e9 8b b5 02 00       	jmpq   2fe7e <instr.bb_48ee>
    48f3:	f8                   	clc    
    48f4:	ff                   	(bad)  
    48f5:	ff                   	(bad)  
    48f6:	e9 8b b5 02 00       	jmpq   2fe86 <instr.bb_48f6>
    48fb:	eb c8                	jmp    48c5 <cf_init_target+0x5>
    48fd:	c3                   	retq   
    48fe:	66 90                	xchg   %ax,%ax

0000000000004900 <cf_run_target>:
    4900:	e9 bb b5 02 00       	jmpq   2fec0 <cf_run_target.instr.bb_4900>
    4905:	57                   	push   %rdi
    4906:	be 20 00 00 00       	mov    $0x20,%esi
    490b:	41 56                	push   %r14
    490d:	41 89 fe             	mov    %edi,%r14d
    4910:	48 8d 3d 09 97 02 00 	lea    0x29709(%rip),%rdi        # 2e020 <ecdhOurD>
    4917:	41 55                	push   %r13
    4919:	41 54                	push   %r12
    491b:	53                   	push   %rbx
    491c:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    4923:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    492a:	00 00 
    492c:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    4933:	00 
    4934:	31 c0                	xor    %eax,%eax
    4936:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
    493b:	48 89 e3             	mov    %rsp,%rbx
    493e:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    4943:	e8 78 fd ff ff       	callq  46c0 <classify>
    4948:	e9 42 b6 02 00       	jmpq   2ff8f <instr.bb_4948>
    494d:	00 00                	add    %al,(%rax)
    494f:	00 4c 89 e7          	add    %cl,-0x19(%rcx,%rcx,4)
    4953:	e8 68 8e 00 00       	callq  d7c0 <mbedtls_ecp_group_init>
    4958:	e9 42 b6 02 00       	jmpq   2ff9f <instr.bb_4958>
    495d:	4c 89 e7             	mov    %r12,%rdi
    4960:	e8 4b d7 00 00       	callq  120b0 <mbedtls_ecp_group_load>
    4965:	e9 71 b6 02 00       	jmpq   2ffdb <instr.bb_4965>
    496a:	8e 00                	mov    (%rax),%es
    496c:	00 e9                	add    %ch,%cl
    496e:	71 b6                	jno    4926 <cf_run_target+0x26>
    4970:	02 00                	add    (%rax),%al
    4972:	4c 89 fe             	mov    %r15,%rsi
    4975:	4c 89 e7             	mov    %r12,%rdi
    4978:	48 8d 15 01 98 02 00 	lea    0x29801(%rip),%rdx        # 2e180 <ecdhTheirQ>
    497f:	e8 1c 9b 00 00       	callq  e4a0 <mbedtls_ecp_point_read_binary>
    4984:	e9 a0 b6 02 00       	jmpq   30029 <instr.bb_4984>
    4989:	01 00                	add    %eax,(%rax)
    498b:	00 e9                	add    %ch,%cl
    498d:	a0 b6 02 00 48 8d 35 	movabs 0x9688358d480002b6,%al
    4994:	88 96 
    4996:	02 00                	add    (%rax),%al
    4998:	48 89 df             	mov    %rbx,%rdi
    499b:	e8 20 08 00 00       	callq  51c0 <mbedtls_mpi_read_binary>
    49a0:	e9 cf b6 02 00       	jmpq   30074 <instr.bb_49a0>
    49a5:	01 00                	add    %eax,(%rax)
    49a7:	00 e9                	add    %ch,%cl
    49a9:	cf                   	iret   
    49aa:	b6 02                	mov    $0x2,%dh
    49ac:	00 d9                	add    %bl,%cl
    49ae:	4c 89 fa             	mov    %r15,%rdx
    49b1:	4c 89 ee             	mov    %r13,%rsi
    49b4:	4c 8d 05 65 fe ff ff 	lea    -0x19b(%rip),%r8        # 4820 <myrng>
    49bb:	4c 89 e7             	mov    %r12,%rdi
    49be:	e8 1d 72 00 00       	callq  bbe0 <mbedtls_ecdh_compute_shared>
    49c3:	e9 fe b6 02 00       	jmpq   300c6 <instr.bb_49c3>
    49c8:	07                   	(bad)  
    49c9:	00 00                	add    %al,(%rax)
    49cb:	e9 fe b6 02 00       	jmpq   300ce <instr.bb_49cb>
    49d0:	c3                   	retq   
    49d1:	e8 6a f9 ff ff       	callq  4340 <malloc@plt>
    49d6:	e9 34 b7 02 00       	jmpq   3010f <instr.bb_49d6>
    49db:	ef                   	out    %eax,(%dx)
    49dc:	48 89 c6             	mov    %rax,%rsi
    49df:	49 89 c4             	mov    %rax,%r12
    49e2:	e8 49 08 00 00       	callq  5230 <mbedtls_mpi_write_binary>
    49e7:	e9 34 b7 02 00       	jmpq   30120 <instr.bb_49e7>
    49ec:	e9 38 b7 02 00       	jmpq   30129 <instr.bb_49ec>
    49f1:	f7 ff                	idiv   %edi
    49f3:	ff                   	(bad)  
    49f4:	e9 38 b7 02 00       	jmpq   30131 <instr.bb_49f4>
    49f9:	01 00                	add    %eax,(%rax)
    49fb:	00 64 48 33          	add    %ah,0x33(%rax,%rcx,2)
    49ff:	04 25                	add    $0x25,%al
    4a01:	28 00                	sub    %al,(%rax)
    4a03:	00 00                	add    %al,(%rax)
    4a05:	75 2c                	jne    4a33 <cf_run_target+0x133>
    4a07:	e9 3c b7 02 00       	jmpq   30148 <instr.bb_4a07>
    4a0c:	00 00                	add    %al,(%rax)
    4a0e:	5b                   	pop    %rbx
    4a0f:	41 5c                	pop    %r12
    4a11:	41 5d                	pop    %r13
    4a13:	41 5e                	pop    %r14
    4a15:	41 5f                	pop    %r15
    4a17:	c3                   	retq   
    4a18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4a1f:	00 
    4a20:	e9 3b b7 02 00       	jmpq   30160 <instr.bb_4a20>
    4a25:	e9 76 b7 02 00       	jmpq   301a0 <instr.bb_4a31>
    4a2a:	89 e7                	mov    %esp,%edi
    4a2c:	e8 df fc ff ff       	callq  4710 <dump_secret>
    4a31:	eb f2                	jmp    4a25 <cf_run_target+0x125>
    4a33:	e8 38 f8 ff ff       	callq  4270 <__stack_chk_fail@plt>
    4a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4a3f:	00 

0000000000004a40 <cf_prepare_next>:
    4a40:	e9 6b b7 02 00       	jmpq   301b0 <cf_prepare_next.instr.bb_4a40>
    4a45:	56                   	push   %rsi
    4a46:	41 55                	push   %r13
    4a48:	41 54                	push   %r12
    4a4a:	48 81 ec 80 01 00 00 	sub    $0x180,%rsp
    4a51:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4a58:	00 00 
    4a5a:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
    4a61:	00 
    4a62:	31 c0                	xor    %eax,%eax
    4a64:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    4a69:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
    4a6e:	4c 8d a4 24 80 00 00 	lea    0x80(%rsp),%r12
    4a75:	00 
    4a76:	4c 89 e7             	mov    %r12,%rdi
    4a79:	e8 42 8d 00 00       	callq  d7c0 <mbedtls_ecp_group_init>
    4a7e:	e9 e9 b7 02 00       	jmpq   3026c <instr.bb_4a7e>
    4a83:	4c 89 e7             	mov    %r12,%rdi
    4a86:	e8 25 d6 00 00       	callq  120b0 <mbedtls_ecp_group_load>
    4a8b:	e9 18 b8 02 00       	jmpq   302a8 <instr.bb_4a8b>
    4a90:	00 00                	add    %al,(%rax)
    4a92:	00 e9                	add    %ch,%cl
    4a94:	18 b8 02 00 8d 00    	sbb    %bh,0x8d0002(%rax)
    4a9a:	00 e9                	add    %ch,%cl
    4a9c:	18 b8 02 00 ea 4c    	sbb    %bh,0x4cea0002(%rax)
    4aa2:	89 f6                	mov    %esi,%esi
    4aa4:	48 8d 0d 75 fd ff ff 	lea    -0x28b(%rip),%rcx        # 4820 <myrng>
    4aab:	4c 89 e7             	mov    %r12,%rdi
    4aae:	e8 1d 71 00 00       	callq  bbd0 <mbedtls_ecdh_gen_public>
    4ab3:	e9 47 b8 02 00       	jmpq   302ff <instr.bb_4ab3>
    4ab8:	48 8d 35 a1 96 02 00 	lea    0x296a1(%rip),%rsi        # 2e160 <ecdhTheirD>
    4abf:	4c 89 f7             	mov    %r14,%rdi
    4ac2:	e8 69 07 00 00       	callq  5230 <mbedtls_mpi_write_binary>
    4ac7:	e9 47 b8 02 00       	jmpq   30313 <instr.bb_4ac7>
    4acc:	4c 89 ee             	mov    %r13,%rsi
    4acf:	4c 89 e7             	mov    %r12,%rdi
    4ad2:	41 b9 20 00 00 00    	mov    $0x20,%r9d
    4ad8:	4c 8d 05 a1 96 02 00 	lea    0x296a1(%rip),%r8        # 2e180 <ecdhTheirQ>
    4adf:	ba 01 00 00 00       	mov    $0x1,%edx
    4ae4:	e8 17 98 00 00       	callq  e300 <mbedtls_ecp_point_write_binary>
    4ae9:	e9 47 b8 02 00       	jmpq   30335 <instr.bb_4ae9>
    4aee:	01 00                	add    %eax,(%rax)
    4af0:	00 64 48 33          	add    %ah,0x33(%rax,%rcx,2)
    4af4:	04 25                	add    $0x25,%al
    4af6:	28 00                	sub    %al,(%rax)
    4af8:	00 00                	add    %al,(%rax)
    4afa:	75 0e                	jne    4b0a <cf_prepare_next+0xca>
    4afc:	e9 4b b8 02 00       	jmpq   3034c <instr.bb_4afc>
    4b01:	00 00                	add    %al,(%rax)
    4b03:	41 5c                	pop    %r12
    4b05:	41 5d                	pop    %r13
    4b07:	41 5e                	pop    %r14
    4b09:	c3                   	retq   
    4b0a:	e8 61 f7 ff ff       	callq  4270 <__stack_chk_fail@plt>
    4b0f:	90                   	nop

0000000000004b10 <mpi_select>:
    4b10:	41 56                	push   %r14
    4b12:	45 31 f6             	xor    %r14d,%r14d
    4b15:	41 55                	push   %r13
    4b17:	49 89 d5             	mov    %rdx,%r13
    4b1a:	41 54                	push   %r12
    4b1c:	49 89 fc             	mov    %rdi,%r12
    4b1f:	55                   	push   %rbp
    4b20:	48 89 cd             	mov    %rcx,%rbp
    4b23:	53                   	push   %rbx
    4b24:	48 89 f3             	mov    %rsi,%rbx
    4b27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4b2e:	00 00 
    4b30:	48 89 ee             	mov    %rbp,%rsi
    4b33:	4c 89 f7             	mov    %r14,%rdi
    4b36:	e8 35 65 00 00       	callq  b070 <mbedtls_ct_size_bool_eq>
    4b3b:	48 89 de             	mov    %rbx,%rsi
    4b3e:	4c 89 e7             	mov    %r12,%rdi
    4b41:	0f b6 d0             	movzbl %al,%edx
    4b44:	e8 87 6a 00 00       	callq  b5d0 <mbedtls_mpi_safe_cond_assign>
    4b49:	85 c0                	test   %eax,%eax
    4b4b:	75 0d                	jne    4b5a <mpi_select+0x4a>
    4b4d:	49 83 c6 01          	add    $0x1,%r14
    4b51:	48 83 c3 18          	add    $0x18,%rbx
    4b55:	4d 39 f5             	cmp    %r14,%r13
    4b58:	75 d6                	jne    4b30 <mpi_select+0x20>
    4b5a:	5b                   	pop    %rbx
    4b5b:	5d                   	pop    %rbp
    4b5c:	41 5c                	pop    %r12
    4b5e:	41 5d                	pop    %r13
    4b60:	41 5e                	pop    %r14
    4b62:	c3                   	retq   
    4b63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4b6a:	00 00 00 00 
    4b6e:	66 90                	xchg   %ax,%ax

0000000000004b70 <mbedtls_mpi_init>:
    4b70:	e9 eb b7 02 00       	jmpq   30360 <mbedtls_mpi_init.instr.bb_4b70>
    4b75:	07                   	(bad)  
    4b76:	01 00                	add    %eax,(%rax)
    4b78:	00 00                	add    %al,(%rax)
    4b7a:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    4b81:	00 
    4b82:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    4b89:	00 
    4b8a:	c3                   	retq   
    4b8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004b90 <mbedtls_mpi_free>:
    4b90:	e9 0b b8 02 00       	jmpq   303a0 <mbedtls_mpi_free.instr.bb_4b90>
    4b95:	85 ff                	test   %edi,%edi
    4b97:	74 47                	je     4be0 <mbedtls_mpi_free+0x50>
    4b99:	e9 19 b8 02 00       	jmpq   303b7 <instr.bb_4b99>
    4b9e:	8b 7f 10             	mov    0x10(%rdi),%edi
    4ba1:	48 85 ff             	test   %rdi,%rdi
    4ba4:	74 1a                	je     4bc0 <mbedtls_mpi_free+0x30>
    4ba6:	e9 1d b8 02 00       	jmpq   303c8 <instr.bb_4ba6>
    4bab:	8d 34 c5 00 00 00 00 	lea    0x0(,%rax,8),%esi
    4bb2:	e8 b9 00 01 00       	callq  14c70 <mbedtls_platform_zeroize>
    4bb7:	e9 1d b8 02 00       	jmpq   303d9 <instr.bb_4bb7>
    4bbc:	30 f6                	xor    %dh,%dh
    4bbe:	ff                   	(bad)  
    4bbf:	ff                   	(bad)  
    4bc0:	e9 1d b8 02 00       	jmpq   303e2 <instr.bb_4bc0>
    4bc5:	00 48 c7             	add    %cl,-0x39(%rax)
    4bc8:	43 08 00             	rex.XB or %al,(%r8)
    4bcb:	00 00                	add    %al,(%rax)
    4bcd:	00 48 c7             	add    %cl,-0x39(%rax)
    4bd0:	43 10 00             	rex.XB adc %al,(%r8)
    4bd3:	00 00                	add    %al,(%rax)
    4bd5:	00 5b c3             	add    %bl,-0x3d(%rbx)
    4bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4bdf:	00 
    4be0:	c3                   	retq   
    4be1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4be8:	00 00 00 00 
    4bec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004bf0 <mbedtls_mpi_grow>:
    4bf0:	e9 2b b8 02 00       	jmpq   30420 <mbedtls_mpi_grow.instr.bb_4bf0>
    4bf5:	81 fe 10 27 00 00    	cmp    $0x2710,%esi
    4bfb:	0f 87 85 00 00 00    	ja     4c86 <mbedtls_mpi_grow+0x96>
    4c01:	e9 89 b8 02 00       	jmpq   3048f <instr.bb_4c01>
    4c06:	55                   	push   %rbp
    4c07:	41 54                	push   %r12
    4c09:	55                   	push   %rbp
    4c0a:	48 89 fd             	mov    %rdi,%rbp
    4c0d:	53                   	push   %rbx
    4c0e:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    4c12:	48 89 f3             	mov    %rsi,%rbx
    4c15:	49 39 f4             	cmp    %rsi,%r12
    4c18:	72 0e                	jb     4c28 <mbedtls_mpi_grow+0x38>
    4c1a:	e9 d7 b8 02 00       	jmpq   304f6 <instr.bb_4c1a>
    4c1f:	5d                   	pop    %rbp
    4c20:	41 5e                	pop    %r14
    4c22:	c3                   	retq   
    4c23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4c28:	e9 f3 b8 02 00       	jmpq   30520 <instr.bb_4c28>
    4c2d:	48 89 df             	mov    %rbx,%rdi
    4c30:	e8 9b f6 ff ff       	callq  42d0 <calloc@plt>
    4c35:	e9 29 b9 02 00       	jmpq   30563 <instr.bb_4c35>
    4c3a:	c0 74 42 e9 2d       	shlb   $0x2d,-0x17(%rdx,%rax,2)
    4c3f:	b9 02 00 85 f6       	mov    $0xf6850002,%ecx
    4c44:	74 26                	je     4c6c <mbedtls_mpi_grow+0x7c>
    4c46:	e9 31 b9 02 00       	jmpq   3057c <instr.bb_4c46>
    4c4b:	89 f6                	mov    %esi,%esi
    4c4d:	48 89 c7             	mov    %rax,%rdi
    4c50:	4c 89 e2             	mov    %r12,%rdx
    4c53:	e8 c8 f6 ff ff       	callq  4320 <memcpy@plt>
    4c58:	e9 31 b9 02 00       	jmpq   3058e <instr.bb_4c58>
    4c5d:	e6 e8                	out    %al,$0xe8
    4c5f:	0d 00 01 00 e9       	or     $0xe9000100,%eax
    4c64:	31 b9 02 00 84 f5    	xor    %edi,-0xa7bfffe(%rcx)
    4c6a:	ff                   	(bad)  
    4c6b:	ff                   	(bad)  
    4c6c:	e9 31 b9 02 00       	jmpq   305a2 <instr.bb_4c6c>
    4c71:	c0 4c 89 6d 10       	rorb   $0x10,0x6d(%rcx,%rcx,4)
    4c76:	5b                   	pop    %rbx
    4c77:	5d                   	pop    %rbp
    4c78:	41 5c                	pop    %r12
    4c7a:	41 5d                	pop    %r13
    4c7c:	41 5e                	pop    %r14
    4c7e:	c3                   	retq   
    4c7f:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    4c84:	eb 94                	jmp    4c1a <mbedtls_mpi_grow+0x2a>
    4c86:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    4c8b:	c3                   	retq   
    4c8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004c90 <mbedtls_mpi_resize_clear>:
    4c90:	e9 4b b9 02 00       	jmpq   305e0 <mbedtls_mpi_resize_clear.instr.bb_4c90>
    4c95:	55                   	push   %rbp
    4c96:	48 83 ec 08          	sub    $0x8,%rsp
    4c9a:	48 85 f6             	test   %rsi,%rsi
    4c9d:	74 49                	je     4ce8 <mbedtls_mpi_resize_clear+0x58>
    4c9f:	e9 69 b9 02 00       	jmpq   3060d <instr.bb_4c9f>
    4ca4:	77 08                	ja     4cae <mbedtls_mpi_resize_clear+0x1e>
    4ca6:	74 18                	je     4cc0 <mbedtls_mpi_resize_clear+0x30>
    4ca8:	e9 6d b9 02 00       	jmpq   3061a <instr.bb_4ca8>
    4cad:	e9 6d b9 02 00       	jmpq   3061f <instr.bb_4cad>
    4cb2:	89 ee                	mov    %ebp,%esi
    4cb4:	4c 89 e7             	mov    %r12,%rdi
    4cb7:	5d                   	pop    %rbp
    4cb8:	41 5c                	pop    %r12
    4cba:	e9 31 ff ff ff       	jmpq   4bf0 <mbedtls_mpi_grow>
    4cbf:	90                   	nop
    4cc0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    4cc4:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
    4ccb:	00 
    4ccc:	31 f6                	xor    %esi,%esi
    4cce:	e8 cd f5 ff ff       	callq  42a0 <memset@plt>
    4cd3:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
    4cda:	00 
    4cdb:	31 c0                	xor    %eax,%eax
    4cdd:	48 83 c4 08          	add    $0x8,%rsp
    4ce1:	5d                   	pop    %rbp
    4ce2:	41 5c                	pop    %r12
    4ce4:	c3                   	retq   
    4ce5:	0f 1f 00             	nopl   (%rax)
    4ce8:	e8 a3 fe ff ff       	callq  4b90 <mbedtls_mpi_free>
    4ced:	48 83 c4 08          	add    $0x8,%rsp
    4cf1:	31 c0                	xor    %eax,%eax
    4cf3:	5d                   	pop    %rbp
    4cf4:	41 5c                	pop    %r12
    4cf6:	c3                   	retq   
    4cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4cfe:	00 00 

0000000000004d00 <mbedtls_mpi_shrink>:
    4d00:	f3 0f 1e fa          	endbr64 
    4d04:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
    4d0b:	0f 87 06 01 00 00    	ja     4e17 <mbedtls_mpi_shrink+0x117>
    4d11:	41 56                	push   %r14
    4d13:	41 55                	push   %r13
    4d15:	41 54                	push   %r12
    4d17:	55                   	push   %rbp
    4d18:	48 89 fd             	mov    %rdi,%rbp
    4d1b:	53                   	push   %rbx
    4d1c:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    4d20:	49 39 f4             	cmp    %rsi,%r12
    4d23:	0f 86 a7 00 00 00    	jbe    4dd0 <mbedtls_mpi_shrink+0xd0>
    4d29:	4c 89 e0             	mov    %r12,%rax
    4d2c:	48 83 e8 01          	sub    $0x1,%rax
    4d30:	0f 84 a7 00 00 00    	je     4ddd <mbedtls_mpi_shrink+0xdd>
    4d36:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    4d3a:	eb 0a                	jmp    4d46 <mbedtls_mpi_shrink+0x46>
    4d3c:	0f 1f 40 00          	nopl   0x0(%rax)
    4d40:	48 83 e8 01          	sub    $0x1,%rax
    4d44:	74 7a                	je     4dc0 <mbedtls_mpi_shrink+0xc0>
    4d46:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
    4d4b:	74 f3                	je     4d40 <mbedtls_mpi_shrink+0x40>
    4d4d:	48 83 c0 01          	add    $0x1,%rax
    4d51:	48 39 f0             	cmp    %rsi,%rax
    4d54:	48 89 f3             	mov    %rsi,%rbx
    4d57:	be 08 00 00 00       	mov    $0x8,%esi
    4d5c:	48 0f 43 d8          	cmovae %rax,%rbx
    4d60:	48 89 df             	mov    %rbx,%rdi
    4d63:	e8 68 f5 ff ff       	callq  42d0 <calloc@plt>
    4d68:	49 89 c5             	mov    %rax,%r13
    4d6b:	48 85 c0             	test   %rax,%rax
    4d6e:	0f 84 9c 00 00 00    	je     4e10 <mbedtls_mpi_shrink+0x110>
    4d74:	4c 8b 75 10          	mov    0x10(%rbp),%r14
    4d78:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    4d7f:	00 
    4d80:	4c 89 f6             	mov    %r14,%rsi
    4d83:	4c 89 ef             	mov    %r13,%rdi
    4d86:	e8 95 f5 ff ff       	callq  4320 <memcpy@plt>
    4d8b:	4c 89 f7             	mov    %r14,%rdi
    4d8e:	4a 8d 34 e5 00 00 00 	lea    0x0(,%r12,8),%rsi
    4d95:	00 
    4d96:	e8 d5 fe 00 00       	callq  14c70 <mbedtls_platform_zeroize>
    4d9b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    4d9f:	e8 4c f4 ff ff       	callq  41f0 <free@plt>
    4da4:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
    4da8:	31 c0                	xor    %eax,%eax
    4daa:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    4dae:	5b                   	pop    %rbx
    4daf:	5d                   	pop    %rbp
    4db0:	41 5c                	pop    %r12
    4db2:	41 5d                	pop    %r13
    4db4:	41 5e                	pop    %r14
    4db6:	c3                   	retq   
    4db7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4dbe:	00 00 
    4dc0:	b8 01 00 00 00       	mov    $0x1,%eax
    4dc5:	eb 8a                	jmp    4d51 <mbedtls_mpi_shrink+0x51>
    4dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4dce:	00 00 
    4dd0:	5b                   	pop    %rbx
    4dd1:	5d                   	pop    %rbp
    4dd2:	41 5c                	pop    %r12
    4dd4:	41 5d                	pop    %r13
    4dd6:	41 5e                	pop    %r14
    4dd8:	e9 13 fe ff ff       	jmpq   4bf0 <mbedtls_mpi_grow>
    4ddd:	48 85 f6             	test   %rsi,%rsi
    4de0:	b8 01 00 00 00       	mov    $0x1,%eax
    4de5:	48 0f 45 c6          	cmovne %rsi,%rax
    4de9:	be 08 00 00 00       	mov    $0x8,%esi
    4dee:	48 89 c7             	mov    %rax,%rdi
    4df1:	48 89 c3             	mov    %rax,%rbx
    4df4:	e8 d7 f4 ff ff       	callq  42d0 <calloc@plt>
    4df9:	49 89 c5             	mov    %rax,%r13
    4dfc:	48 85 c0             	test   %rax,%rax
    4dff:	74 0f                	je     4e10 <mbedtls_mpi_shrink+0x110>
    4e01:	4c 8b 75 10          	mov    0x10(%rbp),%r14
    4e05:	4d 85 f6             	test   %r14,%r14
    4e08:	74 9a                	je     4da4 <mbedtls_mpi_shrink+0xa4>
    4e0a:	e9 69 ff ff ff       	jmpq   4d78 <mbedtls_mpi_shrink+0x78>
    4e0f:	90                   	nop
    4e10:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    4e15:	eb 97                	jmp    4dae <mbedtls_mpi_shrink+0xae>
    4e17:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    4e1c:	c3                   	retq   
    4e1d:	0f 1f 00             	nopl   (%rax)

0000000000004e20 <mbedtls_mpi_copy>:
    4e20:	e9 1b b8 02 00       	jmpq   30640 <mbedtls_mpi_copy.instr.bb_4e20>
    4e25:	55                   	push   %rbp
    4e26:	41 54                	push   %r12
    4e28:	55                   	push   %rbp
    4e29:	53                   	push   %rbx
    4e2a:	48 83 ec 08          	sub    $0x8,%rsp
    4e2e:	48 39 f7             	cmp    %rsi,%rdi
    4e31:	0f 84 d9 00 00 00    	je     4f10 <mbedtls_mpi_copy+0xf0>
    4e37:	e9 45 b8 02 00       	jmpq   30681 <instr.bb_4e37>
    4e3c:	8b 57 08             	mov    0x8(%rdi),%edx
    4e3f:	48 89 fd             	mov    %rdi,%rbp
    4e42:	49 89 f4             	mov    %rsi,%r12
    4e45:	48 85 c0             	test   %rax,%rax
    4e48:	0f 84 92 00 00 00    	je     4ee0 <mbedtls_mpi_copy+0xc0>
    4e4e:	e9 45 b8 02 00       	jmpq   30698 <instr.bb_4e4e>
    4e53:	84 a8 00 00 00 e9    	test   %ch,-0x17000000(%rax)
    4e59:	45 b8 02 00 0c 66    	rex.RB mov $0x660c0002,%r8d
    4e5f:	90                   	nop
    4e60:	e9 4b b8 02 00       	jmpq   306b0 <instr.bb_4e60>
    4e65:	e9 5b b8 02 00       	jmpq   306c5 <instr.bb_4e71>
    4e6a:	e9 4b b8 02 00       	jmpq   306ba <instr.bb_4e6a>
    4e6f:	74 ef                	je     4e60 <mbedtls_mpi_copy+0x40>
    4e71:	eb f2                	jmp    4e65 <mbedtls_mpi_copy+0x45>
    4e73:	58                   	pop    %rax
    4e74:	01 e9                	add    %ebp,%ecx
    4e76:	4f b8 02 00 45 00 48 	rex.WRXB movabs $0x73da394800450002,%r8
    4e7d:	39 da 73 
    4e80:	1f                   	(bad)  
    4e81:	e9 7b b8 02 00       	jmpq   30701 <instr.bb_4e81>
    4e86:	ef                   	out    %eax,(%dx)
    4e87:	e8 64 fd ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    4e8c:	e9 aa b8 02 00       	jmpq   3073b <instr.bb_4e8c>
    4e91:	75 3e                	jne    4ed1 <mbedtls_mpi_copy+0xb1>
    4e93:	e9 ae b8 02 00       	jmpq   30746 <instr.bb_4e93>
    4e98:	00 00                	add    %al,(%rax)
    4e9a:	00 eb                	add    %ch,%bl
    4e9c:	20 0f                	and    %cl,(%rdi)
    4e9e:	1f                   	(bad)  
    4e9f:	00 48 8b             	add    %cl,-0x75(%rax)
    4ea2:	7d 10                	jge    4eb4 <mbedtls_mpi_copy+0x94>
    4ea4:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
    4eab:	00 
    4eac:	48 29 da             	sub    %rbx,%rdx
    4eaf:	31 f6                	xor    %esi,%esi
    4eb1:	48 c1 e2 03          	shl    $0x3,%rdx
    4eb5:	4c 01 ef             	add    %r13,%rdi
    4eb8:	e8 e3 f3 ff ff       	callq  42a0 <memset@plt>
    4ebd:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    4ec1:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    4ec6:	4c 89 ea             	mov    %r13,%rdx
    4ec9:	45 31 ed             	xor    %r13d,%r13d
    4ecc:	e8 4f f4 ff ff       	callq  4320 <memcpy@plt>
    4ed1:	48 83 c4 08          	add    $0x8,%rsp
    4ed5:	44 89 e8             	mov    %r13d,%eax
    4ed8:	5b                   	pop    %rbx
    4ed9:	5d                   	pop    %rbp
    4eda:	41 5c                	pop    %r12
    4edc:	41 5d                	pop    %r13
    4ede:	c3                   	retq   
    4edf:	90                   	nop
    4ee0:	45 31 ed             	xor    %r13d,%r13d
    4ee3:	48 85 d2             	test   %rdx,%rdx
    4ee6:	74 e9                	je     4ed1 <mbedtls_mpi_copy+0xb1>
    4ee8:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
    4eee:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    4ef2:	48 c1 e2 03          	shl    $0x3,%rdx
    4ef6:	31 f6                	xor    %esi,%esi
    4ef8:	e8 a3 f3 ff ff       	callq  42a0 <memset@plt>
    4efd:	eb d2                	jmp    4ed1 <mbedtls_mpi_copy+0xb1>
    4eff:	90                   	nop
    4f00:	bb 01 00 00 00       	mov    $0x1,%ebx
    4f05:	e9 6b ff ff ff       	jmpq   4e75 <mbedtls_mpi_copy+0x55>
    4f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4f10:	48 83 c4 08          	add    $0x8,%rsp
    4f14:	45 31 ed             	xor    %r13d,%r13d
    4f17:	5b                   	pop    %rbx
    4f18:	44 89 e8             	mov    %r13d,%eax
    4f1b:	5d                   	pop    %rbp
    4f1c:	41 5c                	pop    %r12
    4f1e:	41 5d                	pop    %r13
    4f20:	c3                   	retq   
    4f21:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4f28:	00 00 00 00 
    4f2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004f30 <mbedtls_mpi_swap>:
    4f30:	f3 0f 1e fa          	endbr64 
    4f34:	48 83 ec 28          	sub    $0x28,%rsp
    4f38:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
    4f3c:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
    4f40:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4f47:	00 00 
    4f49:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4f4e:	31 c0                	xor    %eax,%eax
    4f50:	48 8b 47 10          	mov    0x10(%rdi),%rax
    4f54:	0f 11 0f             	movups %xmm1,(%rdi)
    4f57:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    4f5b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4f60:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    4f64:	48 89 46 10          	mov    %rax,0x10(%rsi)
    4f68:	0f 29 04 24          	movaps %xmm0,(%rsp)
    4f6c:	0f 11 06             	movups %xmm0,(%rsi)
    4f6f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4f74:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4f7b:	00 00 
    4f7d:	75 05                	jne    4f84 <mbedtls_mpi_swap+0x54>
    4f7f:	48 83 c4 28          	add    $0x28,%rsp
    4f83:	c3                   	retq   
    4f84:	e8 e7 f2 ff ff       	callq  4270 <__stack_chk_fail@plt>
    4f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004f90 <mbedtls_mpi_lset>:
    4f90:	e9 cb b7 02 00       	jmpq   30760 <mbedtls_mpi_lset.instr.bb_4f90>
    4f95:	54                   	push   %rsp
    4f96:	55                   	push   %rbp
    4f97:	48 89 f5             	mov    %rsi,%rbp
    4f9a:	be 01 00 00 00       	mov    $0x1,%esi
    4f9f:	53                   	push   %rbx
    4fa0:	48 89 fb             	mov    %rdi,%rbx
    4fa3:	e8 48 fc ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    4fa8:	e9 14 b8 02 00       	jmpq   307c1 <instr.bb_4fa8>
    4fad:	74 11                	je     4fc0 <mbedtls_mpi_lset+0x30>
    4faf:	e9 18 b8 02 00       	jmpq   307cc <instr.bb_4faf>
    4fb4:	41 5c                	pop    %r12
    4fb6:	c3                   	retq   
    4fb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4fbe:	00 00 
    4fc0:	e9 1b b8 02 00       	jmpq   307e0 <instr.bb_4fc0>
    4fc5:	8b 7b 10             	mov    0x10(%rbx),%edi
    4fc8:	31 f6                	xor    %esi,%esi
    4fca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4fd1:	00 
    4fd2:	e8 c9 f2 ff ff       	callq  42a0 <memset@plt>
    4fd7:	e9 1b b8 02 00       	jmpq   307f7 <instr.bb_4fd7>
    4fdc:	89 ee                	mov    %ebp,%esi
    4fde:	b8 01 00 00 00       	mov    $0x1,%eax
    4fe3:	48 85 ed             	test   %rbp,%rbp
    4fe6:	79 08                	jns    4ff0 <mbedtls_mpi_lset+0x60>
    4fe8:	e9 1f b8 02 00       	jmpq   3080c <instr.bb_4fe8>
    4fed:	ff                   	(bad)  
    4fee:	ff                   	(bad)  
    4fef:	ff                   	(bad)  
    4ff0:	e9 1f b8 02 00       	jmpq   30814 <instr.bb_4ff0>
    4ff5:	89 32                	mov    %esi,(%rdx)
    4ff7:	89 03                	mov    %eax,(%rbx)
    4ff9:	44 89 e0             	mov    %r12d,%eax
    4ffc:	5b                   	pop    %rbx
    4ffd:	5d                   	pop    %rbp
    4ffe:	41 5c                	pop    %r12
    5000:	c3                   	retq   
    5001:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5008:	00 00 00 00 
    500c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005010 <mbedtls_mpi_get_bit>:
    5010:	e9 3b b8 02 00       	jmpq   30850 <mbedtls_mpi_get_bit.instr.bb_5010>
    5015:	8b 57 08             	mov    0x8(%rdi),%edx
    5018:	31 c0                	xor    %eax,%eax
    501a:	48 c1 e2 06          	shl    $0x6,%rdx
    501e:	48 39 f2             	cmp    %rsi,%rdx
    5021:	76 17                	jbe    503a <mbedtls_mpi_get_bit+0x2a>
    5023:	e9 41 b8 02 00       	jmpq   30869 <instr.bb_5023>
    5028:	89 f2                	mov    %esi,%edx
    502a:	89 f1                	mov    %esi,%ecx
    502c:	48 c1 ea 06          	shr    $0x6,%rdx
    5030:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    5034:	48 d3 e8             	shr    %cl,%rax
    5037:	83 e0 01             	and    $0x1,%eax
    503a:	c3                   	retq   
    503b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005040 <mbedtls_mpi_set_bit>:
    5040:	e9 4b b8 02 00       	jmpq   30890 <mbedtls_mpi_set_bit.instr.bb_5040>
    5045:	55                   	push   %rbp
    5046:	49 89 f5             	mov    %rsi,%r13
    5049:	41 54                	push   %r12
    504b:	49 c1 ed 06          	shr    $0x6,%r13
    504f:	55                   	push   %rbp
    5050:	53                   	push   %rbx
    5051:	48 83 ec 08          	sub    $0x8,%rsp
    5055:	80 fa 01             	cmp    $0x1,%dl
    5058:	77 66                	ja     50c0 <mbedtls_mpi_set_bit+0x80>
    505a:	e9 79 b8 02 00       	jmpq   308d8 <instr.bb_505a>
    505f:	89 fd                	mov    %edi,%ebp
    5061:	48 89 f3             	mov    %rsi,%rbx
    5064:	41 89 d4             	mov    %edx,%r12d
    5067:	48 c1 e1 06          	shl    $0x6,%rcx
    506b:	48 39 f1             	cmp    %rsi,%rcx
    506e:	77 13                	ja     5083 <mbedtls_mpi_set_bit+0x43>
    5070:	e9 7d b8 02 00       	jmpq   308f2 <instr.bb_5070>
    5075:	37                   	(bad)  
    5076:	49 8d 75 01          	lea    0x1(%r13),%rsi
    507a:	e8 71 fb ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    507f:	85 c0                	test   %eax,%eax
    5081:	75 2a                	jne    50ad <mbedtls_mpi_set_bit+0x6d>
    5083:	48 8b 45 10          	mov    0x10(%rbp),%rax
    5087:	83 e3 3f             	and    $0x3f,%ebx
    508a:	41 0f b6 d4          	movzbl %r12b,%edx
    508e:	48 89 d9             	mov    %rbx,%rcx
    5091:	4a 8d 3c e8          	lea    (%rax,%r13,8),%rdi
    5095:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    509c:	48 d3 e2             	shl    %cl,%rdx
    509f:	48 d3 c0             	rol    %cl,%rax
    50a2:	48 23 07             	and    (%rdi),%rax
    50a5:	48 09 d0             	or     %rdx,%rax
    50a8:	48 89 07             	mov    %rax,(%rdi)
    50ab:	31 c0                	xor    %eax,%eax
    50ad:	48 83 c4 08          	add    $0x8,%rsp
    50b1:	5b                   	pop    %rbx
    50b2:	5d                   	pop    %rbp
    50b3:	41 5c                	pop    %r12
    50b5:	41 5d                	pop    %r13
    50b7:	c3                   	retq   
    50b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    50bf:	00 
    50c0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    50c5:	eb e6                	jmp    50ad <mbedtls_mpi_set_bit+0x6d>
    50c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    50ce:	00 00 

00000000000050d0 <mbedtls_mpi_lsb>:
    50d0:	f3 0f 1e fa          	endbr64 
    50d4:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    50d8:	48 85 f6             	test   %rsi,%rsi
    50db:	74 3c                	je     5119 <mbedtls_mpi_lsb+0x49>
    50dd:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    50e1:	45 31 c0             	xor    %r8d,%r8d
    50e4:	31 c9                	xor    %ecx,%ecx
    50e6:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
    50ea:	31 c0                	xor    %eax,%eax
    50ec:	eb 10                	jmp    50fe <mbedtls_mpi_lsb+0x2e>
    50ee:	66 90                	xchg   %ax,%ax
    50f0:	48 83 c0 01          	add    $0x1,%rax
    50f4:	49 83 c0 01          	add    $0x1,%r8
    50f8:	48 83 f8 40          	cmp    $0x40,%rax
    50fc:	74 12                	je     5110 <mbedtls_mpi_lsb+0x40>
    50fe:	48 0f a3 c2          	bt     %rax,%rdx
    5102:	73 ec                	jae    50f0 <mbedtls_mpi_lsb+0x20>
    5104:	4c 89 c0             	mov    %r8,%rax
    5107:	c3                   	retq   
    5108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    510f:	00 
    5110:	48 83 c1 01          	add    $0x1,%rcx
    5114:	48 39 ce             	cmp    %rcx,%rsi
    5117:	75 cd                	jne    50e6 <mbedtls_mpi_lsb+0x16>
    5119:	45 31 c0             	xor    %r8d,%r8d
    511c:	eb e6                	jmp    5104 <mbedtls_mpi_lsb+0x34>
    511e:	66 90                	xchg   %ax,%ax

0000000000005120 <mbedtls_mpi_bitlen>:
    5120:	e9 eb b7 02 00       	jmpq   30910 <mbedtls_mpi_bitlen.instr.bb_5120>
    5125:	8b 77 08             	mov    0x8(%rdi),%esi
    5128:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    512c:	e9 0f 4e 00 00       	jmpq   9f40 <mbedtls_mpi_core_bitlen>
    5131:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5138:	00 00 00 00 
    513c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005140 <mbedtls_mpi_size>:
    5140:	e9 eb b7 02 00       	jmpq   30930 <mbedtls_mpi_size.instr.bb_5140>
    5145:	83 ec 08             	sub    $0x8,%esp
    5148:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    514c:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    5150:	e8 eb 4d 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    5155:	e9 f5 b7 02 00       	jmpq   3094f <instr.bb_5155>
    515a:	83 c0 07             	add    $0x7,%eax
    515d:	48 c1 e8 03          	shr    $0x3,%rax
    5161:	c3                   	retq   
    5162:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5169:	00 00 00 00 
    516d:	0f 1f 00             	nopl   (%rax)

0000000000005170 <mbedtls_mpi_read_binary_le>:
    5170:	e9 eb b7 02 00       	jmpq   30960 <mbedtls_mpi_read_binary_le.instr.bb_5170>
    5175:	e9 59 b8 02 00       	jmpq   309d3 <instr.bb_519a>
    517a:	89 f5                	mov    %esi,%ebp
    517c:	31 f6                	xor    %esi,%esi
    517e:	41 54                	push   %r12
    5180:	f6 c2 07             	test   $0x7,%dl
    5183:	49 89 d4             	mov    %rdx,%r12
    5186:	53                   	push   %rbx
    5187:	40 0f 95 c6          	setne  %sil
    518b:	48 c1 e8 03          	shr    $0x3,%rax
    518f:	48 89 fb             	mov    %rdi,%rbx
    5192:	48 01 c6             	add    %rax,%rsi
    5195:	e8 f6 fa ff ff       	callq  4c90 <mbedtls_mpi_resize_clear>
    519a:	eb d9                	jmp    5175 <mbedtls_mpi_read_binary_le+0x5>
    519c:	74 0a                	je     51a8 <mbedtls_mpi_read_binary_le+0x38>
    519e:	e9 38 b8 02 00       	jmpq   309db <instr.bb_519e>
    51a3:	c3                   	retq   
    51a4:	0f 1f 40 00          	nopl   0x0(%rax)
    51a8:	e9 43 b8 02 00       	jmpq   309f0 <instr.bb_51a8>
    51ad:	e9 c9 b8 02 00       	jmpq   30a7b <instr.bb_51ea>
    51b2:	e1 4c                	loope  5200 <mbedtls_mpi_read_binary+0x40>
    51b4:	89 ea                	mov    %ebp,%edx
    51b6:	5b                   	pop    %rbx
    51b7:	41 5c                	pop    %r12
    51b9:	41 5d                	pop    %r13
    51bb:	e9 d0 4e 00 00       	jmpq   a090 <mbedtls_mpi_core_read_le>

00000000000051c0 <mbedtls_mpi_read_binary>:
    51c0:	e9 43 b8 02 00       	jmpq   30a08 <mbedtls_mpi_read_binary.instr.bb_51c0>
    51c5:	55                   	push   %rbp
    51c6:	48 89 d0             	mov    %rdx,%rax
    51c9:	49 89 f5             	mov    %rsi,%r13
    51cc:	31 f6                	xor    %esi,%esi
    51ce:	41 54                	push   %r12
    51d0:	f6 c2 07             	test   $0x7,%dl
    51d3:	49 89 d4             	mov    %rdx,%r12
    51d6:	53                   	push   %rbx
    51d7:	40 0f 95 c6          	setne  %sil
    51db:	48 c1 e8 03          	shr    $0x3,%rax
    51df:	48 89 fb             	mov    %rdi,%rbx
    51e2:	48 01 c6             	add    %rax,%rsi
    51e5:	e8 a6 fa ff ff       	callq  4c90 <mbedtls_mpi_resize_clear>
    51ea:	eb c1                	jmp    51ad <mbedtls_mpi_read_binary_le+0x3d>
    51ec:	74 0a                	je     51f8 <mbedtls_mpi_read_binary+0x38>
    51ee:	e9 90 b8 02 00       	jmpq   30a83 <instr.bb_51ee>
    51f3:	c3                   	retq   
    51f4:	0f 1f 40 00          	nopl   0x0(%rax)
    51f8:	e9 93 b8 02 00       	jmpq   30a90 <instr.bb_51f8>
    51fd:	8b 7b 10             	mov    0x10(%rbx),%edi
    5200:	4c 89 e1             	mov    %r12,%rcx
    5203:	4c 89 ea             	mov    %r13,%rdx
    5206:	5b                   	pop    %rbx
    5207:	41 5c                	pop    %r12
    5209:	41 5d                	pop    %r13
    520b:	e9 00 4f 00 00       	jmpq   a110 <mbedtls_mpi_core_read_be>

0000000000005210 <mbedtls_mpi_write_binary_le>:
    5210:	e9 93 b8 02 00       	jmpq   30aa8 <mbedtls_mpi_write_binary_le.instr.bb_5210>
    5215:	89 f0                	mov    %esi,%eax
    5217:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    521b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    521f:	48 89 d1             	mov    %rdx,%rcx
    5222:	4c 89 c2             	mov    %r8,%rdx
    5225:	e9 86 4f 00 00       	jmpq   a1b0 <mbedtls_mpi_core_write_le>
    522a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005230 <mbedtls_mpi_write_binary>:
    5230:	e9 9b b8 02 00       	jmpq   30ad0 <mbedtls_mpi_write_binary.instr.bb_5230>
    5235:	89 f0                	mov    %esi,%eax
    5237:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    523b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    523f:	48 89 d1             	mov    %rdx,%rcx
    5242:	4c 89 c2             	mov    %r8,%rdx
    5245:	e9 36 50 00 00       	jmpq   a280 <mbedtls_mpi_core_write_be>
    524a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005250 <mbedtls_mpi_shift_l>:
    5250:	e9 9b b8 02 00       	jmpq   30af0 <mbedtls_mpi_shift_l.instr.bb_5250>
    5255:	55                   	push   %rbp
    5256:	49 89 f5             	mov    %rsi,%r13
    5259:	41 54                	push   %r12
    525b:	49 89 f4             	mov    %rsi,%r12
    525e:	55                   	push   %rbp
    525f:	48 89 fd             	mov    %rdi,%rbp
    5262:	41 83 e4 3f          	and    $0x3f,%r12d
    5266:	53                   	push   %rbx
    5267:	48 89 f3             	mov    %rsi,%rbx
    526a:	48 c1 eb 06          	shr    $0x6,%rbx
    526e:	48 83 ec 08          	sub    $0x8,%rsp
    5272:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    5276:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    527a:	e8 c1 4c 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    527f:	e9 c5 b8 02 00       	jmpq   30b49 <instr.bb_527f>
    5284:	01 e8                	add    %ebp,%eax
    5286:	48 c1 e2 06          	shl    $0x6,%rdx
    528a:	48 39 c2             	cmp    %rax,%rdx
    528d:	0f 82 b5 00 00 00    	jb     5348 <mbedtls_mpi_shift_l+0xf8>
    5293:	e9 c5 b8 02 00       	jmpq   30b5d <instr.bb_5293>
    5298:	56                   	push   %rsi
    5299:	e9 c9 b8 02 00       	jmpq   30b67 <instr.bb_5299>
    529e:	39 c3                	cmp    %eax,%ebx
    52a0:	73 32                	jae    52d4 <mbedtls_mpi_shift_l+0x84>
    52a2:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    52a6:	48 89 d9             	mov    %rbx,%rcx
    52a9:	48 f7 d9             	neg    %rcx
    52ac:	48 8d 44 c2 f8       	lea    -0x8(%rdx,%rax,8),%rax
    52b1:	48 8d 74 da f8       	lea    -0x8(%rdx,%rbx,8),%rsi
    52b6:	48 c1 e1 03          	shl    $0x3,%rcx
    52ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    52c0:	48 8b 14 08          	mov    (%rax,%rcx,1),%rdx
    52c4:	48 83 e8 08          	sub    $0x8,%rax
    52c8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    52cc:	48 39 c6             	cmp    %rax,%rsi
    52cf:	75 ef                	jne    52c0 <mbedtls_mpi_shift_l+0x70>
    52d1:	48 89 d8             	mov    %rbx,%rax
    52d4:	48 85 c0             	test   %rax,%rax
    52d7:	74 16                	je     52ef <mbedtls_mpi_shift_l+0x9f>
    52d9:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    52dd:	0f 1f 00             	nopl   (%rax)
    52e0:	48 c7 44 c2 f8 00 00 	movq   $0x0,-0x8(%rdx,%rax,8)
    52e7:	00 00 
    52e9:	48 83 e8 01          	sub    $0x1,%rax
    52ed:	75 f1                	jne    52e0 <mbedtls_mpi_shift_l+0x90>
    52ef:	4d 85 e4             	test   %r12,%r12
    52f2:	74 43                	je     5337 <mbedtls_mpi_shift_l+0xe7>
    52f4:	48 3b 5d 08          	cmp    0x8(%rbp),%rbx
    52f8:	73 3d                	jae    5337 <mbedtls_mpi_shift_l+0xe7>
    52fa:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    5300:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    5304:	45 89 e1             	mov    %r12d,%r9d
    5307:	31 d2                	xor    %edx,%edx
    5309:	45 29 e0             	sub    %r12d,%r8d
    530c:	0f 1f 40 00          	nopl   0x0(%rax)
    5310:	48 8b 04 de          	mov    (%rsi,%rbx,8),%rax
    5314:	48 89 d7             	mov    %rdx,%rdi
    5317:	44 89 c1             	mov    %r8d,%ecx
    531a:	48 89 c2             	mov    %rax,%rdx
    531d:	48 d3 ea             	shr    %cl,%rdx
    5320:	44 89 c9             	mov    %r9d,%ecx
    5323:	48 d3 e0             	shl    %cl,%rax
    5326:	48 09 f8             	or     %rdi,%rax
    5329:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
    532d:	48 83 c3 01          	add    $0x1,%rbx
    5331:	48 39 5d 08          	cmp    %rbx,0x8(%rbp)
    5335:	77 d9                	ja     5310 <mbedtls_mpi_shift_l+0xc0>
    5337:	48 83 c4 08          	add    $0x8,%rsp
    533b:	31 c0                	xor    %eax,%eax
    533d:	5b                   	pop    %rbx
    533e:	5d                   	pop    %rbp
    533f:	41 5c                	pop    %r12
    5341:	41 5d                	pop    %r13
    5343:	c3                   	retq   
    5344:	0f 1f 40 00          	nopl   0x0(%rax)
    5348:	31 f6                	xor    %esi,%esi
    534a:	a8 3f                	test   $0x3f,%al
    534c:	48 89 ef             	mov    %rbp,%rdi
    534f:	40 0f 95 c6          	setne  %sil
    5353:	48 c1 e8 06          	shr    $0x6,%rax
    5357:	48 01 c6             	add    %rax,%rsi
    535a:	e8 91 f8 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    535f:	85 c0                	test   %eax,%eax
    5361:	0f 84 2c ff ff ff    	je     5293 <mbedtls_mpi_shift_l+0x43>
    5367:	48 83 c4 08          	add    $0x8,%rsp
    536b:	5b                   	pop    %rbx
    536c:	5d                   	pop    %rbp
    536d:	41 5c                	pop    %r12
    536f:	41 5d                	pop    %r13
    5371:	c3                   	retq   
    5372:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5379:	00 00 00 00 
    537d:	0f 1f 00             	nopl   (%rax)

0000000000005380 <mbedtls_mpi_shift_r>:
    5380:	e9 fb b7 02 00       	jmpq   30b80 <mbedtls_mpi_shift_r.instr.bb_5380>
    5385:	e9 11 b8 02 00       	jmpq   30b9b <instr.bb_538d>
    538a:	c0 75 03 eb          	shlb   $0xeb,0x3(%rbp)
    538e:	f6 c3 e9             	test   $0xe9,%bl
    5391:	09 b8 02 00 8b 7f    	or     %edi,0x7f8b0002(%rax)
    5397:	10 48 89             	adc    %cl,-0x77(%rax)
    539a:	f2 4c 89 c6          	repnz mov %r8,%rsi
    539e:	e8 bd 4f 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    53a3:	e9 09 b8 02 00       	jmpq   30bb1 <instr.bb_53a3>
    53a8:	08 c3                	or     %al,%bl
    53aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000053b0 <mbedtls_mpi_cmp_abs>:
    53b0:	e9 0b b8 02 00       	jmpq   30bc0 <mbedtls_mpi_cmp_abs.instr.bb_53b0>
    53b5:	8b 47 08             	mov    0x8(%rdi),%eax
    53b8:	48 85 c0             	test   %rax,%rax
    53bb:	0f 84 7f 00 00 00    	je     5440 <mbedtls_mpi_cmp_abs+0x90>
    53c1:	e9 0d b8 02 00       	jmpq   30bd3 <instr.bb_53c1>
    53c6:	0f 66 0f             	pcmpgtd (%rdi),%mm1
    53c9:	1f                   	(bad)  
    53ca:	84 00                	test   %al,(%rax)
    53cc:	00 00                	add    %al,(%rax)
    53ce:	00 00                	add    %al,(%rax)
    53d0:	e9 0b b8 02 00       	jmpq   30be0 <instr.bb_53d0>
    53d5:	6a e9                	pushq  $0xffffffffffffffe9
    53d7:	0f b8                	(bad)  
    53d9:	02 00                	add    (%rax),%al
    53db:	00 74 f2 e9          	add    %dh,-0x17(%rdx,%rsi,8)
    53df:	15 b8 02 00 85       	adc    $0x850002b8,%eax
    53e4:	d2 74 4d e9          	shlb   %cl,-0x17(%rbp,%rcx,2)
    53e8:	19 b8 02 00 09 0f    	sbb    %edi,0xf090002(%rax)
    53ee:	1f                   	(bad)  
    53ef:	00 e9                	add    %ch,%cl
    53f1:	1b b8 02 00 62 e9    	sbb    -0x169dfffe(%rax),%edi
    53f7:	1f                   	(bad)  
    53f8:	b8 02 00 00 74       	mov    $0x74000002,%eax
    53fd:	f2 e9 25 b8 02 00    	bnd jmpq 30c28 <instr.bb_53fe>
    5403:	00 48 39             	add    %cl,0x39(%rax)
    5406:	c2 72 31             	retq   $0x3172
    5409:	e9 29 b8 02 00       	jmpq   30c37 <instr.bb_5409>
    540e:	ff 77 29             	pushq  0x29(%rdi)
    5411:	e9 2d b8 02 00       	jmpq   30c43 <instr.bb_5411>
    5416:	e9 31 b8 02 00       	jmpq   30c4c <instr.bb_5416>
    541b:	0c 0f                	or     $0xf,%al
    541d:	1f                   	(bad)  
    541e:	40 00 eb             	add    %bpl,%bl
    5421:	0b e9                	or     %ecx,%ebp
    5423:	3f                   	(bad)  
    5424:	b8 02 00 23 e9       	mov    $0xe9230002,%eax
    5429:	43 b8 02 00 e9 2e    	rex.XB mov $0x2ee90002,%r8d
    542f:	b8 02 00 76 ec       	mov    $0xec760002,%eax
    5434:	e9 49 b8 02 00       	jmpq   30c82 <instr.bb_5434>
    5439:	00 cc                	add    %cl,%ah
    543b:	89 c0                	mov    %eax,%eax
    543d:	c3                   	retq   
    543e:	66 90                	xchg   %ax,%ax
    5440:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    5444:	31 c0                	xor    %eax,%eax
    5446:	48 85 d2             	test   %rdx,%rdx
    5449:	75 9c                	jne    53e7 <mbedtls_mpi_cmp_abs+0x37>
    544b:	45 31 c0             	xor    %r8d,%r8d
    544e:	44 89 c0             	mov    %r8d,%eax
    5451:	c3                   	retq   
    5452:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5458:	45 31 c0             	xor    %r8d,%r8d
    545b:	48 85 c0             	test   %rax,%rax
    545e:	75 9e                	jne    53fe <mbedtls_mpi_cmp_abs+0x4e>
    5460:	44 89 c0             	mov    %r8d,%eax
    5463:	c3                   	retq   
    5464:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    546a:	eb ce                	jmp    543a <mbedtls_mpi_cmp_abs+0x8a>
    546c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005470 <mbedtls_mpi_cmp_mpi>:
    5470:	e9 1b b8 02 00       	jmpq   30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>
    5475:	8b 47 08             	mov    0x8(%rdi),%eax
    5478:	48 85 c0             	test   %rax,%rax
    547b:	0f 84 7f 00 00 00    	je     5500 <mbedtls_mpi_cmp_mpi+0x90>
    5481:	e9 1d b8 02 00       	jmpq   30ca3 <instr.bb_5481>
    5486:	0f 66 0f             	pcmpgtd (%rdi),%mm1
    5489:	1f                   	(bad)  
    548a:	84 00                	test   %al,(%rax)
    548c:	00 00                	add    %al,(%rax)
    548e:	00 00                	add    %al,(%rax)
    5490:	e9 1b b8 02 00       	jmpq   30cb0 <instr.bb_5490>
    5495:	6a e9                	pushq  $0xffffffffffffffe9
    5497:	1f                   	(bad)  
    5498:	b8 02 00 00 74       	mov    $0x74000002,%eax
    549d:	f2 e9 25 b8 02 00    	bnd jmpq 30cc8 <instr.bb_549e>
    54a3:	85 d2                	test   %edx,%edx
    54a5:	74 71                	je     5518 <mbedtls_mpi_cmp_mpi+0xa8>
    54a7:	e9 29 b8 02 00       	jmpq   30cd5 <instr.bb_54a7>
    54ac:	09 0f                	or     %ecx,(%rdi)
    54ae:	1f                   	(bad)  
    54af:	00 e9                	add    %ch,%cl
    54b1:	2b b8 02 00 6a e9    	sub    -0x1695fffe(%rax),%edi
    54b7:	2f                   	(bad)  
    54b8:	b8 02 00 00 74       	mov    $0x74000002,%eax
    54bd:	f2 e9 36 b8 02 00    	bnd jmpq 30cf9 <instr.bb_54be>
    54c3:	cc                   	int3   
    54c4:	16                   	(bad)  
    54c5:	77 79                	ja     5540 <mbedtls_mpi_cmp_mpi+0xd0>
    54c7:	e9 3e b8 02 00       	jmpq   30d0a <instr.bb_54c7>
    54cc:	c0 7e 61 cc          	sarb   $0xcc,0x61(%rsi)
    54d0:	d2 78 76             	sarb   %cl,0x76(%rax)
    54d3:	e9 4d b8 02 00       	jmpq   30d25 <instr.bb_54d3>
    54d8:	e9 51 b8 02 00       	jmpq   30d2e <instr.bb_54d8>
    54dd:	08 66 90             	or     %ah,-0x70(%rsi)
    54e0:	e9 5b b8 02 00       	jmpq   30d40 <instr.bb_54e0>
    54e5:	25 e9 5f b8 02       	and    $0x2b85fe9,%eax
    54ea:	00 e9                	add    %ch,%cl
    54ec:	6d                   	insl   (%dx),%es:(%rdi)
    54ed:	b8 02 00 77 29       	mov    $0x29770002,%eax
    54f2:	eb f7                	jmp    54eb <mbedtls_mpi_cmp_mpi+0x7b>
    54f4:	e9 6a b8 02 00       	jmpq   30d63 <instr.bb_54f4>
    54f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5500:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    5504:	31 c0                	xor    %eax,%eax
    5506:	48 85 d2             	test   %rdx,%rdx
    5509:	75 9c                	jne    54a7 <mbedtls_mpi_cmp_mpi+0x37>
    550b:	45 31 c0             	xor    %r8d,%r8d
    550e:	44 89 c0             	mov    %r8d,%eax
    5511:	c3                   	retq   
    5512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5518:	cc                   	int3   
    5519:	8b 07                	mov    (%rdi),%eax
    551b:	cc                   	int3   
    551c:	89 c0                	mov    %eax,%eax
    551e:	c3                   	retq   
    551f:	90                   	nop
    5520:	45 31 c0             	xor    %r8d,%r8d
    5523:	48 85 c0             	test   %rax,%rax
    5526:	75 96                	jne    54be <mbedtls_mpi_cmp_mpi+0x4e>
    5528:	44 89 c0             	mov    %r8d,%eax
    552b:	c3                   	retq   
    552c:	0f 1f 40 00          	nopl   0x0(%rax)
    5530:	79 a1                	jns    54d3 <mbedtls_mpi_cmp_mpi+0x63>
    5532:	85 d2                	test   %edx,%edx
    5534:	7e 9d                	jle    54d3 <mbedtls_mpi_cmp_mpi+0x63>
    5536:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    553c:	eb dd                	jmp    551b <mbedtls_mpi_cmp_mpi+0xab>
    553e:	66 90                	xchg   %ax,%ax
    5540:	f7 da                	neg    %edx
    5542:	41 89 d0             	mov    %edx,%r8d
    5545:	44 89 c0             	mov    %r8d,%eax
    5548:	c3                   	retq   
    5549:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    554f:	eb ca                	jmp    551b <mbedtls_mpi_cmp_mpi+0xab>
    5551:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5558:	00 00 00 00 
    555c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005560 <mbedtls_mpi_cmp_int>:
    5560:	e9 1b b8 02 00       	jmpq   30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>
    5565:	83 ec 38             	sub    $0x38,%esp
    5568:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    556f:	00 00 
    5571:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5576:	31 c0                	xor    %eax,%eax
    5578:	b8 01 00 00 00       	mov    $0x1,%eax
    557d:	48 85 f6             	test   %rsi,%rsi
    5580:	79 08                	jns    558a <mbedtls_mpi_cmp_int+0x2a>
    5582:	e9 59 b8 02 00       	jmpq   30de0 <instr.bb_5582>
    5587:	ff                   	(bad)  
    5588:	ff                   	(bad)  
    5589:	ff                   	(bad)  
    558a:	e9 59 b8 02 00       	jmpq   30de8 <instr.bb_558a>
    558f:	48 89 e6             	mov    %rsp,%rsi
    5592:	89 04 24             	mov    %eax,(%rsp)
    5595:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    559a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    55a1:	00 00 
    55a3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    55a8:	e8 c3 fe ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    55ad:	e9 59 b8 02 00       	jmpq   30e0b <instr.bb_55ad>
    55b2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    55b9:	00 00 
    55bb:	75 05                	jne    55c2 <mbedtls_mpi_cmp_int+0x62>
    55bd:	e9 5d b8 02 00       	jmpq   30e1f <instr.bb_55bd>
    55c2:	e8 a9 ec ff ff       	callq  4270 <__stack_chk_fail@plt>
    55c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    55ce:	00 00 

00000000000055d0 <mbedtls_mpi_add_abs>:
    55d0:	e9 5b b8 02 00       	jmpq   30e30 <mbedtls_mpi_add_abs.instr.bb_55d0>
    55d5:	e9 5a b9 02 00       	jmpq   30f34 <instr.bb_55f4>
    55da:	e9 5d b9 02 00       	jmpq   30f3c <instr.bb_55f8>
    55df:	89 f5                	mov    %esi,%ebp
    55e1:	53                   	push   %rbx
    55e2:	48 39 d7             	cmp    %rdx,%rdi
    55e5:	74 14                	je     55fb <mbedtls_mpi_add_abs+0x2b>
    55e7:	e9 08 b9 02 00       	jmpq   30ef4 <instr.bb_55e7>
    55ec:	f7 74 09 e9          	divl   -0x17(%rcx,%rcx,1)
    55f0:	0c b9                	or     $0xb9,%al
    55f2:	02 00                	add    (%rax),%al
    55f4:	eb df                	jmp    55d5 <mbedtls_mpi_add_abs+0x5>
    55f6:	75 45                	jne    563d <mbedtls_mpi_add_abs+0x6d>
    55f8:	eb e0                	jmp    55da <mbedtls_mpi_add_abs+0xa>
    55fa:	dd e9                	fucomp %st(1)
    55fc:	3f                   	(bad)  
    55fd:	b9 02 00 c7 45       	mov    $0x45c70002,%ecx
    5602:	00 01                	add    %al,(%rcx)
    5604:	00 00                	add    %al,(%rax)
    5606:	00 48 85             	add    %cl,-0x7b(%rax)
    5609:	db 74 44 e9          	(bad)  -0x17(%rsp,%rax,2)
    560d:	62                   	(bad)  
    560e:	b9 02 00 0c 66       	mov    $0x660c0002,%ecx
    5613:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5618:	e9 63 b9 02 00       	jmpq   30f80 <instr.bb_5618>
    561d:	32 e9                	xor    %cl,%ch
    561f:	67 b9 02 00 e9 b0    	addr32 mov $0xb0e90002,%ecx
    5625:	b9 02 00 00 00       	mov    $0x2,%ecx
    562a:	00 00                	add    %al,(%rax)
    562c:	74 ea                	je     5618 <mbedtls_mpi_add_abs+0x48>
    562e:	e9 6b b9 02 00       	jmpq   30f9e <instr.bb_562e>
    5633:	ef                   	out    %eax,(%dx)
    5634:	e8 b7 f5 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    5639:	eb e8                	jmp    5623 <mbedtls_mpi_add_abs+0x53>
    563b:	74 23                	je     5660 <mbedtls_mpi_add_abs+0x90>
    563d:	e9 9e b9 02 00       	jmpq   30fe0 <instr.bb_563d>
    5642:	5d                   	pop    %rbp
    5643:	41 5e                	pop    %r14
    5645:	c3                   	retq   
    5646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    564d:	00 00 00 
    5650:	e9 9b b9 02 00       	jmpq   30ff0 <instr.bb_5650>
    5655:	5c                   	pop    %rsp
    5656:	41 5d                	pop    %r13
    5658:	41 5e                	pop    %r14
    565a:	c3                   	retq   
    565b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5660:	4d 8b 65 10          	mov    0x10(%r13),%r12
    5664:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    5668:	48 89 d9             	mov    %rbx,%rcx
    566b:	4c 89 e6             	mov    %r12,%rsi
    566e:	4c 89 e7             	mov    %r12,%rdi
    5671:	e8 da 4d 00 00       	callq  a450 <mbedtls_mpi_core_add>
    5676:	48 89 c5             	mov    %rax,%rbp
    5679:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
    567d:	48 85 ed             	test   %rbp,%rbp
    5680:	75 1f                	jne    56a1 <mbedtls_mpi_add_abs+0xd1>
    5682:	eb cc                	jmp    5650 <mbedtls_mpi_add_abs+0x80>
    5684:	0f 1f 40 00          	nopl   0x0(%rax)
    5688:	e9 93 b9 02 00       	jmpq   31020 <instr.bb_5688>
    568d:	e9 f6 b9 02 00       	jmpq   31088 <instr.bb_56b9>
    5692:	28 48 83             	sub    %cl,-0x7d(%rax)
    5695:	c0 08 bd             	rorb   $0xbd,(%rax)
    5698:	01 00                	add    %eax,(%rax)
    569a:	00 00                	add    %al,(%rax)
    569c:	48 85 d2             	test   %rdx,%rdx
    569f:	74 af                	je     5650 <mbedtls_mpi_add_abs+0x80>
    56a1:	e9 97 b9 02 00       	jmpq   3103d <instr.bb_56a1>
    56a6:	c3                   	retq   
    56a7:	01 4d 39             	add    %ecx,0x39(%rbp)
    56aa:	65 08 77 da          	or     %dh,%gs:-0x26(%rdi)
    56ae:	e9 9b b9 02 00       	jmpq   3104e <instr.bb_56ae>
    56b3:	ef                   	out    %eax,(%dx)
    56b4:	e8 37 f5 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    56b9:	eb d2                	jmp    568d <mbedtls_mpi_add_abs+0xbd>
    56bb:	75 80                	jne    563d <mbedtls_mpi_add_abs+0x6d>
    56bd:	e9 ce b9 02 00       	jmpq   31090 <instr.bb_56bd>
    56c2:	8d 04 e0             	lea    (%rax,%riz,8),%eax
    56c5:	eb c1                	jmp    5688 <mbedtls_mpi_add_abs+0xb8>
    56c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    56ce:	00 00 

00000000000056d0 <mbedtls_mpi_sub_abs>:
    56d0:	e9 cb b9 02 00       	jmpq   310a0 <mbedtls_mpi_sub_abs.instr.bb_56d0>
    56d5:	56                   	push   %rsi
    56d6:	41 55                	push   %r13
    56d8:	49 89 d5             	mov    %rdx,%r13
    56db:	41 54                	push   %r12
    56dd:	49 89 f4             	mov    %rsi,%r12
    56e0:	55                   	push   %rbp
    56e1:	48 89 fd             	mov    %rdi,%rbp
    56e4:	53                   	push   %rbx
    56e5:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
    56e9:	48 85 db             	test   %rbx,%rbx
    56ec:	74 32                	je     5720 <mbedtls_mpi_sub_abs+0x50>
    56ee:	e9 78 ba 02 00       	jmpq   3116b <instr.bb_56ee>
    56f3:	0a 0f                	or     (%rdi),%cl
    56f5:	1f                   	(bad)  
    56f6:	40 00 48 83          	add    %cl,-0x7d(%rax)
    56fa:	eb 01                	jmp    56fd <mbedtls_mpi_sub_abs+0x2d>
    56fc:	74 22                	je     5720 <mbedtls_mpi_sub_abs+0x50>
    56fe:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
    5704:	74 f2                	je     56f8 <mbedtls_mpi_sub_abs+0x28>
    5706:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
    570b:	48 39 de             	cmp    %rbx,%rsi
    570e:	73 17                	jae    5727 <mbedtls_mpi_sub_abs+0x57>
    5710:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
    5716:	eb 5b                	jmp    5773 <mbedtls_mpi_sub_abs+0xa3>
    5718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    571f:	00 
    5720:	e9 5b ba 02 00       	jmpq   31180 <instr.bb_5720>
    5725:	31 db                	xor    %ebx,%ebx
    5727:	e9 5b ba 02 00       	jmpq   31187 <instr.bb_5727>
    572c:	f4                   	hlt    
    572d:	ff                   	(bad)  
    572e:	ff                   	(bad)  
    572f:	e9 8a ba 02 00       	jmpq   311be <instr.bb_572f>
    5734:	75 3d                	jne    5773 <mbedtls_mpi_sub_abs+0xa3>
    5736:	e9 8e ba 02 00       	jmpq   311c9 <instr.bb_5736>
    573b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    573f:	48 39 da             	cmp    %rbx,%rdx
    5742:	76 09                	jbe    574d <mbedtls_mpi_sub_abs+0x7d>
    5744:	e9 92 ba 02 00       	jmpq   311db <instr.bb_5744>
    5749:	83 00 00             	addl   $0x0,(%rax)
    574c:	00 e9                	add    %ch,%cl
    574e:	92                   	xchg   %eax,%edx
    574f:	ba 02 00 39 d0       	mov    $0xd0390002,%edx
    5754:	77 52                	ja     57a8 <mbedtls_mpi_sub_abs+0xd8>
    5756:	e9 96 ba 02 00       	jmpq   311f1 <instr.bb_5756>
    575b:	8b 74 24 10          	mov    0x10(%rsp),%esi
    575f:	48 89 d9             	mov    %rbx,%rcx
    5762:	e8 a9 4d 00 00       	callq  a510 <mbedtls_mpi_core_sub>
    5767:	e9 96 ba 02 00       	jmpq   31202 <instr.bb_5767>
    576c:	e9 9a ba 02 00       	jmpq   3120b <instr.bb_576c>
    5771:	00 00                	add    %al,(%rax)
    5773:	5b                   	pop    %rbx
    5774:	44 89 f0             	mov    %r14d,%eax
    5777:	5d                   	pop    %rbp
    5778:	41 5c                	pop    %r12
    577a:	41 5d                	pop    %r13
    577c:	41 5e                	pop    %r14
    577e:	c3                   	retq   
    577f:	90                   	nop
    5780:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    5784:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
    5788:	48 8d 3c da          	lea    (%rdx,%rbx,8),%rdi
    578c:	48 29 d9             	sub    %rbx,%rcx
    578f:	48 89 c2             	mov    %rax,%rdx
    5792:	48 89 fe             	mov    %rdi,%rsi
    5795:	e8 26 57 00 00       	callq  aec0 <mbedtls_mpi_core_sub_int>
    579a:	48 85 c0             	test   %rax,%rax
    579d:	74 cd                	je     576c <mbedtls_mpi_sub_abs+0x9c>
    579f:	e9 6c ff ff ff       	jmpq   5710 <mbedtls_mpi_sub_abs+0x40>
    57a4:	0f 1f 40 00          	nopl   0x0(%rax)
    57a8:	48 29 d0             	sub    %rdx,%rax
    57ab:	48 8d 3c d7          	lea    (%rdi,%rdx,8),%rdi
    57af:	31 f6                	xor    %esi,%esi
    57b1:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
    57b8:	00 
    57b9:	4c 89 c2             	mov    %r8,%rdx
    57bc:	e8 df ea ff ff       	callq  42a0 <memset@plt>
    57c1:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    57c5:	eb 8f                	jmp    5756 <mbedtls_mpi_sub_abs+0x86>
    57c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    57ce:	00 00 
    57d0:	48 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%rsi
    57d7:	00 
    57d8:	48 29 da             	sub    %rbx,%rdx
    57db:	48 01 f7             	add    %rsi,%rdi
    57de:	48 c1 e2 03          	shl    $0x3,%rdx
    57e2:	49 03 74 24 10       	add    0x10(%r12),%rsi
    57e7:	e8 34 eb ff ff       	callq  4320 <memcpy@plt>
    57ec:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    57f1:	48 8b 45 08          	mov    0x8(%rbp),%rax
    57f5:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    57f9:	48 39 d0             	cmp    %rdx,%rax
    57fc:	0f 86 54 ff ff ff    	jbe    5756 <mbedtls_mpi_sub_abs+0x86>
    5802:	eb a4                	jmp    57a8 <mbedtls_mpi_sub_abs+0xd8>
    5804:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    580b:	00 00 00 00 
    580f:	90                   	nop

0000000000005810 <add_sub_mpi>:
    5810:	e9 4b ba 02 00       	jmpq   31260 <add_sub_mpi.instr.bb_5810>
    5815:	e9 e3 ba 02 00       	jmpq   312fd <instr.bb_584f>
    581a:	d2 55 48             	rclb   %cl,0x48(%rbp)
    581d:	89 fd                	mov    %edi,%ebp
    581f:	53                   	push   %rbx
    5820:	8b 1e                	mov    (%rsi),%ebx
    5822:	8b 0a                	mov    (%rdx),%ecx
    5824:	0f af cb             	imul   %ebx,%ecx
    5827:	41 0f af c8          	imul   %r8d,%ecx
    582b:	85 c9                	test   %ecx,%ecx
    582d:	79 61                	jns    5890 <add_sub_mpi+0x80>
    582f:	e9 76 ba 02 00       	jmpq   312aa <instr.bb_582f>
    5834:	cf                   	iret   
    5835:	e8 76 fb ff ff       	callq  53b0 <mbedtls_mpi_cmp_abs>
    583a:	e9 76 ba 02 00       	jmpq   312b5 <instr.bb_583a>
    583f:	78 2f                	js     5870 <add_sub_mpi+0x60>
    5841:	e9 7a ba 02 00       	jmpq   312c0 <instr.bb_5841>
    5846:	ce                   	(bad)  
    5847:	48 89 ef             	mov    %rbp,%rdi
    584a:	e8 81 fe ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    584f:	eb c4                	jmp    5815 <add_sub_mpi+0x5>
    5851:	75 0e                	jne    5861 <add_sub_mpi+0x51>
    5853:	e9 ad ba 02 00       	jmpq   31305 <instr.bb_5853>
    5858:	00 00                	add    %al,(%rax)
    585a:	00 0f                	add    %cl,(%rdi)
    585c:	44 da 89 5d 00 5b 5d 	rex.R fimull 0x5d5b005d(%rcx)
    5863:	41 5c                	pop    %r12
    5865:	c3                   	retq   
    5866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    586d:	00 00 00 
    5870:	e9 cb ba 02 00       	jmpq   31340 <instr.bb_5870>
    5875:	e9 03 bb 02 00       	jmpq   3137d <instr.bb_587e>
    587a:	52                   	push   %rdx
    587b:	fe                   	(bad)  
    587c:	ff                   	(bad)  
    587d:	ff                   	(bad)  
    587e:	eb f5                	jmp    5875 <add_sub_mpi+0x65>
    5880:	75 df                	jne    5861 <add_sub_mpi+0x51>
    5882:	e9 fe ba 02 00       	jmpq   31385 <instr.bb_5882>
    5887:	5b                   	pop    %rbx
    5888:	5d                   	pop    %rbp
    5889:	41 5c                	pop    %r12
    588b:	c3                   	retq   
    588c:	0f 1f 40 00          	nopl   0x0(%rax)
    5890:	e9 1b bb 02 00       	jmpq   313b0 <instr.bb_5890>
    5895:	eb 07                	jmp    589e <add_sub_mpi+0x8e>
    5897:	75 c8                	jne    5861 <add_sub_mpi+0x51>
    5899:	e9 4e bb 02 00       	jmpq   313ec <instr.bb_5899>
    589e:	e9 41 bb 02 00       	jmpq   313e4 <instr.bb_5895>
    58a3:	5c                   	pop    %rsp
    58a4:	c3                   	retq   
    58a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    58ac:	00 00 00 00 

00000000000058b0 <mbedtls_mpi_add_mpi>:
    58b0:	e9 6b bb 02 00       	jmpq   31420 <mbedtls_mpi_add_mpi.instr.bb_58b0>
    58b5:	01 00                	add    %eax,(%rax)
    58b7:	00 00                	add    %al,(%rax)
    58b9:	e9 52 ff ff ff       	jmpq   5810 <add_sub_mpi>
    58be:	66 90                	xchg   %ax,%ax

00000000000058c0 <mbedtls_mpi_sub_mpi>:
    58c0:	e9 6b bb 02 00       	jmpq   31430 <mbedtls_mpi_sub_mpi.instr.bb_58c0>
    58c5:	ff                   	(bad)  
    58c6:	ff                   	(bad)  
    58c7:	ff                   	(bad)  
    58c8:	ff                   	(bad)  
    58c9:	e9 42 ff ff ff       	jmpq   5810 <add_sub_mpi>
    58ce:	66 90                	xchg   %ax,%ax

00000000000058d0 <mbedtls_mpi_add_int>:
    58d0:	e9 6b bb 02 00       	jmpq   31440 <mbedtls_mpi_add_int.instr.bb_58d0>
    58d5:	83 ec 38             	sub    $0x38,%esp
    58d8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    58df:	00 00 
    58e1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    58e6:	31 c0                	xor    %eax,%eax
    58e8:	b8 01 00 00 00       	mov    $0x1,%eax
    58ed:	48 85 d2             	test   %rdx,%rdx
    58f0:	79 08                	jns    58fa <mbedtls_mpi_add_int+0x2a>
    58f2:	e9 a9 bb 02 00       	jmpq   314a0 <instr.bb_58f2>
    58f7:	ff                   	(bad)  
    58f8:	ff                   	(bad)  
    58f9:	ff                   	(bad)  
    58fa:	e9 a9 bb 02 00       	jmpq   314a8 <instr.bb_58fa>
    58ff:	b9 01 00 00 00       	mov    $0x1,%ecx
    5904:	48 89 e2             	mov    %rsp,%rdx
    5907:	89 04 24             	mov    %eax,(%rsp)
    590a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    590f:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    5916:	00 00 
    5918:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    591d:	e8 ee fe ff ff       	callq  5810 <add_sub_mpi>
    5922:	e9 a9 bb 02 00       	jmpq   314d0 <instr.bb_5922>
    5927:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    592e:	00 00 
    5930:	75 05                	jne    5937 <mbedtls_mpi_add_int+0x67>
    5932:	e9 ad bb 02 00       	jmpq   314e4 <instr.bb_5932>
    5937:	e8 34 e9 ff ff       	callq  4270 <__stack_chk_fail@plt>
    593c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005940 <mbedtls_mpi_sub_int>:
    5940:	f3 0f 1e fa          	endbr64 
    5944:	48 83 ec 38          	sub    $0x38,%rsp
    5948:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    594f:	00 00 
    5951:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5956:	31 c0                	xor    %eax,%eax
    5958:	b8 01 00 00 00       	mov    $0x1,%eax
    595d:	48 85 d2             	test   %rdx,%rdx
    5960:	79 08                	jns    596a <mbedtls_mpi_sub_int+0x2a>
    5962:	48 f7 da             	neg    %rdx
    5965:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    596a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    596f:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    5974:	48 89 e2             	mov    %rsp,%rdx
    5977:	89 04 24             	mov    %eax,(%rsp)
    597a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    597f:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    5986:	00 00 
    5988:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    598d:	e8 7e fe ff ff       	callq  5810 <add_sub_mpi>
    5992:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    5997:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    599e:	00 00 
    59a0:	75 05                	jne    59a7 <mbedtls_mpi_sub_int+0x67>
    59a2:	48 83 c4 38          	add    $0x38,%rsp
    59a6:	c3                   	retq   
    59a7:	e8 c4 e8 ff ff       	callq  4270 <__stack_chk_fail@plt>
    59ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000059b0 <mbedtls_mpi_mul_mpi>:
    59b0:	e9 3b bb 02 00       	jmpq   314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
    59b5:	57                   	push   %rdi
    59b6:	49 89 ff             	mov    %rdi,%r15
    59b9:	41 56                	push   %r14
    59bb:	49 89 d6             	mov    %rdx,%r14
    59be:	41 55                	push   %r13
    59c0:	49 89 f5             	mov    %rsi,%r13
    59c3:	41 54                	push   %r12
    59c5:	55                   	push   %rbp
    59c6:	53                   	push   %rbx
    59c7:	48 83 ec 58          	sub    $0x58,%rsp
    59cb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    59d2:	00 00 
    59d4:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    59d9:	31 c0                	xor    %eax,%eax
    59db:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
    59e0:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    59e7:	00 
    59e8:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    59ef:	00 00 
    59f1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    59f8:	00 00 
    59fa:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    5a01:	00 
    5a02:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    5a09:	00 00 
    5a0b:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    5a12:	00 00 
    5a14:	48 89 04 24          	mov    %rax,(%rsp)
    5a18:	48 39 f7             	cmp    %rsi,%rdi
    5a1b:	0f 84 2f 01 00 00    	je     5b50 <mbedtls_mpi_mul_mpi+0x1a0>
    5a21:	e9 f3 bb 02 00       	jmpq   31619 <instr.bb_5a21>
    5a26:	4d 39 f7             	cmp    %r14,%r15
    5a29:	0f 84 51 01 00 00    	je     5b80 <mbedtls_mpi_mul_mpi+0x1d0>
    5a2f:	e9 f3 bb 02 00       	jmpq   31627 <instr.bb_5a2f>
    5a34:	85 e4                	test   %esp,%esp
    5a36:	0f 84 f4 00 00 00    	je     5b30 <mbedtls_mpi_mul_mpi+0x180>
    5a3c:	e9 f3 bb 02 00       	jmpq   31634 <instr.bb_5a3c>
    5a41:	10 66 0f             	adc    %ah,0xf(%rsi)
    5a44:	1f                   	(bad)  
    5a45:	44 00 00             	add    %r8b,(%rax)
    5a48:	49 83 ec 01          	sub    $0x1,%r12
    5a4c:	0f 84 de 00 00 00    	je     5b30 <mbedtls_mpi_mul_mpi+0x180>
    5a52:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
    5a58:	74 ee                	je     5a48 <mbedtls_mpi_mul_mpi+0x98>
    5a5a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
    5a61:	00 
    5a62:	49 8b 5e 08          	mov    0x8(%r14),%rbx
    5a66:	48 85 db             	test   %rbx,%rbx
    5a69:	0f 84 b1 00 00 00    	je     5b20 <mbedtls_mpi_mul_mpi+0x170>
    5a6f:	49 8b 46 10          	mov    0x10(%r14),%rax
    5a73:	eb 0d                	jmp    5a82 <mbedtls_mpi_mul_mpi+0xd2>
    5a75:	0f 1f 00             	nopl   (%rax)
    5a78:	e9 c3 bb 02 00       	jmpq   31640 <instr.bb_5a78>
    5a7d:	e9 0f bc 02 00       	jmpq   31691 <instr.bb_5a96>
    5a82:	e9 c3 bb 02 00       	jmpq   3164a <instr.bb_5a82>
    5a87:	00 74 ee e9          	add    %dh,-0x17(%rsi,%rbp,8)
    5a8b:	c7                   	(bad)  
    5a8c:	bb 02 00 e9 0f       	mov    $0xfe90002,%ebx
    5a91:	bc 02 00 ff ff       	mov    $0xffff0002,%esp
    5a96:	eb e5                	jmp    5a7d <mbedtls_mpi_mul_mpi+0xcd>
    5a98:	75 46                	jne    5ae0 <mbedtls_mpi_mul_mpi+0x130>
    5a9a:	e9 fa bb 02 00       	jmpq   31699 <instr.bb_5a9a>
    5a9f:	e8 ec f4 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    5aa4:	eb e9                	jmp    5a8f <mbedtls_mpi_mul_mpi+0xdf>
    5aa6:	75 38                	jne    5ae0 <mbedtls_mpi_mul_mpi+0x130>
    5aa8:	e9 fe bb 02 00       	jmpq   316ab <instr.bb_5aa8>
    5aad:	8b 75 10             	mov    0x10(%rbp),%esi
    5ab0:	49 89 d8             	mov    %rbx,%r8
    5ab3:	4c 89 e2             	mov    %r12,%rdx
    5ab6:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    5aba:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    5abe:	e8 4d 4c 00 00       	callq  a710 <mbedtls_mpi_core_mul>
    5ac3:	e9 fe bb 02 00       	jmpq   316c6 <instr.bb_5ac3>
    5ac8:	c0 8b 44 24 0c 74 71 	rorb   $0x71,0x740c2444(%rbx)
    5acf:	e9 02 bc 02 00       	jmpq   316d6 <instr.bb_5acf>
    5ad4:	00 00                	add    %al,(%rax)
    5ad6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5add:	00 00 00 
    5ae0:	e9 fb bb 02 00       	jmpq   316e0 <instr.bb_5ae0>
    5ae5:	24 08                	and    $0x8,%al
    5ae7:	e8 a4 f0 ff ff       	callq  4b90 <mbedtls_mpi_free>
    5aec:	e9 fb bb 02 00       	jmpq   316ec <instr.bb_5aec>
    5af1:	9b                   	fwait
    5af2:	f0 ff                	lock (bad) 
    5af4:	ff                   	(bad)  
    5af5:	e9 fb bb 02 00       	jmpq   316f5 <instr.bb_5af5>
    5afa:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5b01:	00 00 
    5b03:	8b 44 24 08          	mov    0x8(%rsp),%eax
    5b07:	0f 85 8e 00 00 00    	jne    5b9b <mbedtls_mpi_mul_mpi+0x1eb>
    5b0d:	e9 fb bb 02 00       	jmpq   3170d <instr.bb_5b0d>
    5b12:	5d                   	pop    %rbp
    5b13:	41 5c                	pop    %r12
    5b15:	41 5d                	pop    %r13
    5b17:	41 5e                	pop    %r14
    5b19:	41 5f                	pop    %r15
    5b1b:	c3                   	retq   
    5b1c:	0f 1f 40 00          	nopl   0x0(%rax)
    5b20:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
    5b27:	00 
    5b28:	4c 89 e6             	mov    %r12,%rsi
    5b2b:	e9 5e ff ff ff       	jmpq   5a8e <mbedtls_mpi_mul_mpi+0xde>
    5b30:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
    5b37:	00 
    5b38:	e9 25 ff ff ff       	jmpq   5a62 <mbedtls_mpi_mul_mpi+0xb2>
    5b3d:	0f 1f 00             	nopl   (%rax)
    5b40:	e9 eb bb 02 00       	jmpq   31730 <instr.bb_5b40>
    5b45:	0f af 16             	imul   (%rsi),%edx
    5b48:	41 89 17             	mov    %edx,(%r15)
    5b4b:	eb 93                	jmp    5ae0 <mbedtls_mpi_mul_mpi+0x130>
    5b4d:	0f 1f 00             	nopl   (%rax)
    5b50:	e9 2b bc 02 00       	jmpq   31780 <instr.bb_5b50>
    5b55:	c7                   	(bad)  
    5b56:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    5b5b:	49 89 c5             	mov    %rax,%r13
    5b5e:	e8 bd f2 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    5b63:	e9 5a bc 02 00       	jmpq   317c2 <instr.bb_5b63>
    5b68:	ff                   	(bad)  
    5b69:	ff                   	(bad)  
    5b6a:	ff                   	(bad)  
    5b6b:	e9 5a bc 02 00       	jmpq   317ca <instr.bb_5b6b>
    5b70:	4d 39 f7             	cmp    %r14,%r15
    5b73:	0f 85 b6 fe ff ff    	jne    5a2f <mbedtls_mpi_mul_mpi+0x7f>
    5b79:	e9 5a bc 02 00       	jmpq   317d8 <instr.bb_5b79>
    5b7e:	00 00                	add    %al,(%rax)
    5b80:	e9 5b bc 02 00       	jmpq   317e0 <instr.bb_5b80>
    5b85:	ef                   	out    %eax,(%dx)
    5b86:	e8 95 f2 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    5b8b:	e9 8a bc 02 00       	jmpq   3181a <instr.bb_5b8b>
    5b90:	ff                   	(bad)  
    5b91:	ff                   	(bad)  
    5b92:	ff                   	(bad)  
    5b93:	e9 8a bc 02 00       	jmpq   31822 <instr.bb_5b93>
    5b98:	fe                   	(bad)  
    5b99:	ff                   	(bad)  
    5b9a:	ff                   	(bad)  
    5b9b:	e8 d0 e6 ff ff       	callq  4270 <__stack_chk_fail@plt>

0000000000005ba0 <mbedtls_mpi_mul_int>:
    5ba0:	f3 0f 1e fa          	endbr64 
    5ba4:	41 56                	push   %r14
    5ba6:	41 55                	push   %r13
    5ba8:	41 54                	push   %r12
    5baa:	55                   	push   %rbp
    5bab:	48 89 fd             	mov    %rdi,%rbp
    5bae:	53                   	push   %rbx
    5baf:	4c 8b 66 08          	mov    0x8(%rsi),%r12
    5bb3:	4d 85 e4             	test   %r12,%r12
    5bb6:	0f 84 84 00 00 00    	je     5c40 <mbedtls_mpi_mul_int+0xa0>
    5bbc:	48 8b 46 10          	mov    0x10(%rsi),%rax
    5bc0:	48 89 f3             	mov    %rsi,%rbx
    5bc3:	49 89 d6             	mov    %rdx,%r14
    5bc6:	eb 0e                	jmp    5bd6 <mbedtls_mpi_mul_int+0x36>
    5bc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5bcf:	00 
    5bd0:	49 83 ec 01          	sub    $0x1,%r12
    5bd4:	74 6a                	je     5c40 <mbedtls_mpi_mul_int+0xa0>
    5bd6:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
    5bdc:	74 f2                	je     5bd0 <mbedtls_mpi_mul_int+0x30>
    5bde:	4d 85 f6             	test   %r14,%r14
    5be1:	74 5d                	je     5c40 <mbedtls_mpi_mul_int+0xa0>
    5be3:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
    5be8:	48 89 ef             	mov    %rbp,%rdi
    5beb:	e8 00 f0 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    5bf0:	41 89 c5             	mov    %eax,%r13d
    5bf3:	85 c0                	test   %eax,%eax
    5bf5:	74 11                	je     5c08 <mbedtls_mpi_mul_int+0x68>
    5bf7:	5b                   	pop    %rbx
    5bf8:	44 89 e8             	mov    %r13d,%eax
    5bfb:	5d                   	pop    %rbp
    5bfc:	41 5c                	pop    %r12
    5bfe:	41 5d                	pop    %r13
    5c00:	41 5e                	pop    %r14
    5c02:	c3                   	retq   
    5c03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5c08:	48 89 de             	mov    %rbx,%rsi
    5c0b:	48 89 ef             	mov    %rbp,%rdi
    5c0e:	e8 0d f2 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    5c13:	41 89 c5             	mov    %eax,%r13d
    5c16:	85 c0                	test   %eax,%eax
    5c18:	75 dd                	jne    5bf7 <mbedtls_mpi_mul_int+0x57>
    5c1a:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    5c1e:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    5c22:	4d 8d 46 ff          	lea    -0x1(%r14),%r8
    5c26:	4c 89 e1             	mov    %r12,%rcx
    5c29:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    5c2d:	e8 2e 49 00 00       	callq  a560 <mbedtls_mpi_core_mla>
    5c32:	5b                   	pop    %rbx
    5c33:	44 89 e8             	mov    %r13d,%eax
    5c36:	5d                   	pop    %rbp
    5c37:	41 5c                	pop    %r12
    5c39:	41 5d                	pop    %r13
    5c3b:	41 5e                	pop    %r14
    5c3d:	c3                   	retq   
    5c3e:	66 90                	xchg   %ax,%ax
    5c40:	5b                   	pop    %rbx
    5c41:	48 89 ef             	mov    %rbp,%rdi
    5c44:	31 f6                	xor    %esi,%esi
    5c46:	5d                   	pop    %rbp
    5c47:	41 5c                	pop    %r12
    5c49:	41 5d                	pop    %r13
    5c4b:	41 5e                	pop    %r14
    5c4d:	e9 3e f3 ff ff       	jmpq   4f90 <mbedtls_mpi_lset>
    5c52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5c59:	00 00 00 00 
    5c5d:	0f 1f 00             	nopl   (%rax)

0000000000005c60 <mbedtls_mpi_read_string>:
    5c60:	f3 0f 1e fa          	endbr64 
    5c64:	41 57                	push   %r15
    5c66:	41 56                	push   %r14
    5c68:	41 55                	push   %r13
    5c6a:	41 54                	push   %r12
    5c6c:	55                   	push   %rbp
    5c6d:	48 63 ee             	movslq %esi,%rbp
    5c70:	53                   	push   %rbx
    5c71:	48 83 ec 38          	sub    $0x38,%rsp
    5c75:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5c7c:	00 00 
    5c7e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5c83:	31 c0                	xor    %eax,%eax
    5c85:	8d 45 fe             	lea    -0x2(%rbp),%eax
    5c88:	83 f8 0e             	cmp    $0xe,%eax
    5c8b:	0f 87 4f 02 00 00    	ja     5ee0 <mbedtls_mpi_read_string+0x280>
    5c91:	0f b6 02             	movzbl (%rdx),%eax
    5c94:	49 89 ff             	mov    %rdi,%r15
    5c97:	48 89 d3             	mov    %rdx,%rbx
    5c9a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    5ca1:	00 
    5ca2:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    5ca9:	00 00 
    5cab:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    5cb2:	00 00 
    5cb4:	84 c0                	test   %al,%al
    5cb6:	0f 84 9c 01 00 00    	je     5e58 <mbedtls_mpi_read_string+0x1f8>
    5cbc:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
    5cc3:	00 
    5cc4:	3c 2d                	cmp    $0x2d,%al
    5cc6:	75 0c                	jne    5cd4 <mbedtls_mpi_read_string+0x74>
    5cc8:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%rsp)
    5ccf:	ff 
    5cd0:	48 83 c3 01          	add    $0x1,%rbx
    5cd4:	48 89 df             	mov    %rbx,%rdi
    5cd7:	e8 84 e5 ff ff       	callq  4260 <strlen@plt>
    5cdc:	49 89 c6             	mov    %rax,%r14
    5cdf:	49 89 c5             	mov    %rax,%r13
    5ce2:	83 fd 10             	cmp    $0x10,%ebp
    5ce5:	75 79                	jne    5d60 <mbedtls_mpi_read_string+0x100>
    5ce7:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    5cee:	ff ff 3f 
    5cf1:	49 39 c6             	cmp    %rax,%r14
    5cf4:	0f 87 e6 01 00 00    	ja     5ee0 <mbedtls_mpi_read_string+0x280>
    5cfa:	4a 8d 34 b5 00 00 00 	lea    0x0(,%r14,4),%rsi
    5d01:	00 
    5d02:	31 c0                	xor    %eax,%eax
    5d04:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    5d09:	4c 89 ff             	mov    %r15,%rdi
    5d0c:	40 f6 c6 3c          	test   $0x3c,%sil
    5d10:	0f 95 c0             	setne  %al
    5d13:	48 c1 ee 06          	shr    $0x6,%rsi
    5d17:	48 01 c6             	add    %rax,%rsi
    5d1a:	e8 d1 ee ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    5d1f:	85 c0                	test   %eax,%eax
    5d21:	0f 84 d9 00 00 00    	je     5e00 <mbedtls_mpi_read_string+0x1a0>
    5d27:	4c 89 e7             	mov    %r12,%rdi
    5d2a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    5d2e:	e8 5d ee ff ff       	callq  4b90 <mbedtls_mpi_free>
    5d33:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    5d37:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    5d3c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    5d43:	00 00 
    5d45:	0f 85 9f 01 00 00    	jne    5eea <mbedtls_mpi_read_string+0x28a>
    5d4b:	48 83 c4 38          	add    $0x38,%rsp
    5d4f:	5b                   	pop    %rbx
    5d50:	5d                   	pop    %rbp
    5d51:	41 5c                	pop    %r12
    5d53:	41 5d                	pop    %r13
    5d55:	41 5e                	pop    %r14
    5d57:	41 5f                	pop    %r15
    5d59:	c3                   	retq   
    5d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5d60:	31 f6                	xor    %esi,%esi
    5d62:	4c 89 ff             	mov    %r15,%rdi
    5d65:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    5d6a:	e8 21 f2 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    5d6f:	85 c0                	test   %eax,%eax
    5d71:	75 b4                	jne    5d27 <mbedtls_mpi_read_string+0xc7>
    5d73:	4d 85 f6             	test   %r14,%r14
    5d76:	0f 84 1b 01 00 00    	je     5e97 <mbedtls_mpi_read_string+0x237>
    5d7c:	4e 8d 2c 33          	lea    (%rbx,%r14,1),%r13
    5d80:	eb 4f                	jmp    5dd1 <mbedtls_mpi_read_string+0x171>
    5d82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5d88:	41 83 e8 30          	sub    $0x30,%r8d
    5d8c:	4d 63 f0             	movslq %r8d,%r14
    5d8f:	49 39 ee             	cmp    %rbp,%r14
    5d92:	0f 83 b0 00 00 00    	jae    5e48 <mbedtls_mpi_read_string+0x1e8>
    5d98:	48 89 ea             	mov    %rbp,%rdx
    5d9b:	4c 89 fe             	mov    %r15,%rsi
    5d9e:	4c 89 e7             	mov    %r12,%rdi
    5da1:	e8 fa fd ff ff       	callq  5ba0 <mbedtls_mpi_mul_int>
    5da6:	85 c0                	test   %eax,%eax
    5da8:	0f 85 79 ff ff ff    	jne    5d27 <mbedtls_mpi_read_string+0xc7>
    5dae:	4c 89 f2             	mov    %r14,%rdx
    5db1:	4c 89 e6             	mov    %r12,%rsi
    5db4:	4c 89 ff             	mov    %r15,%rdi
    5db7:	e8 14 fb ff ff       	callq  58d0 <mbedtls_mpi_add_int>
    5dbc:	85 c0                	test   %eax,%eax
    5dbe:	0f 85 63 ff ff ff    	jne    5d27 <mbedtls_mpi_read_string+0xc7>
    5dc4:	48 83 c3 01          	add    $0x1,%rbx
    5dc8:	49 39 dd             	cmp    %rbx,%r13
    5dcb:	0f 84 c6 00 00 00    	je     5e97 <mbedtls_mpi_read_string+0x237>
    5dd1:	44 0f be 03          	movsbl (%rbx),%r8d
    5dd5:	41 8d 50 d0          	lea    -0x30(%r8),%edx
    5dd9:	44 89 c0             	mov    %r8d,%eax
    5ddc:	80 fa 09             	cmp    $0x9,%dl
    5ddf:	76 a7                	jbe    5d88 <mbedtls_mpi_read_string+0x128>
    5de1:	41 8d 50 bf          	lea    -0x41(%r8),%edx
    5de5:	80 fa 05             	cmp    $0x5,%dl
    5de8:	0f 87 01 01 00 00    	ja     5eef <mbedtls_mpi_read_string+0x28f>
    5dee:	41 83 e8 37          	sub    $0x37,%r8d
    5df2:	4d 63 f0             	movslq %r8d,%r14
    5df5:	eb 98                	jmp    5d8f <mbedtls_mpi_read_string+0x12f>
    5df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5dfe:	00 00 
    5e00:	31 f6                	xor    %esi,%esi
    5e02:	4c 89 ff             	mov    %r15,%rdi
    5e05:	e8 86 f1 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    5e0a:	85 c0                	test   %eax,%eax
    5e0c:	0f 85 15 ff ff ff    	jne    5d27 <mbedtls_mpi_read_string+0xc7>
    5e12:	31 f6                	xor    %esi,%esi
    5e14:	4d 85 f6             	test   %r14,%r14
    5e17:	74 7e                	je     5e97 <mbedtls_mpi_read_string+0x237>
    5e19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5e20:	49 83 ed 01          	sub    $0x1,%r13
    5e24:	42 0f be 04 2b       	movsbl (%rbx,%r13,1),%eax
    5e29:	8d 48 d0             	lea    -0x30(%rax),%ecx
    5e2c:	89 c2                	mov    %eax,%edx
    5e2e:	80 f9 09             	cmp    $0x9,%cl
    5e31:	76 35                	jbe    5e68 <mbedtls_mpi_read_string+0x208>
    5e33:	8d 48 bf             	lea    -0x41(%rax),%ecx
    5e36:	80 f9 05             	cmp    $0x5,%cl
    5e39:	76 75                	jbe    5eb0 <mbedtls_mpi_read_string+0x250>
    5e3b:	83 ea 61             	sub    $0x61,%edx
    5e3e:	80 fa 05             	cmp    $0x5,%dl
    5e41:	76 65                	jbe    5ea8 <mbedtls_mpi_read_string+0x248>
    5e43:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    5e48:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
    5e4d:	e9 d5 fe ff ff       	jmpq   5d27 <mbedtls_mpi_read_string+0xc7>
    5e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e58:	e8 33 ed ff ff       	callq  4b90 <mbedtls_mpi_free>
    5e5d:	31 c0                	xor    %eax,%eax
    5e5f:	e9 d3 fe ff ff       	jmpq   5d37 <mbedtls_mpi_read_string+0xd7>
    5e64:	0f 1f 40 00          	nopl   0x0(%rax)
    5e68:	83 e8 30             	sub    $0x30,%eax
    5e6b:	48 98                	cltq   
    5e6d:	48 89 f7             	mov    %rsi,%rdi
    5e70:	8d 0c b5 00 00 00 00 	lea    0x0(,%rsi,4),%ecx
    5e77:	49 8b 57 10          	mov    0x10(%r15),%rdx
    5e7b:	48 83 c6 01          	add    $0x1,%rsi
    5e7f:	48 c1 ef 04          	shr    $0x4,%rdi
    5e83:	83 e1 3c             	and    $0x3c,%ecx
    5e86:	48 d3 e0             	shl    %cl,%rax
    5e89:	48 09 04 fa          	or     %rax,(%rdx,%rdi,8)
    5e8d:	4d 85 ed             	test   %r13,%r13
    5e90:	75 8e                	jne    5e20 <mbedtls_mpi_read_string+0x1c0>
    5e92:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    5e97:	83 7c 24 0c ff       	cmpl   $0xffffffff,0xc(%rsp)
    5e9c:	74 22                	je     5ec0 <mbedtls_mpi_read_string+0x260>
    5e9e:	31 c0                	xor    %eax,%eax
    5ea0:	e9 82 fe ff ff       	jmpq   5d27 <mbedtls_mpi_read_string+0xc7>
    5ea5:	0f 1f 00             	nopl   (%rax)
    5ea8:	83 e8 57             	sub    $0x57,%eax
    5eab:	48 98                	cltq   
    5ead:	eb be                	jmp    5e6d <mbedtls_mpi_read_string+0x20d>
    5eaf:	90                   	nop
    5eb0:	83 e8 37             	sub    $0x37,%eax
    5eb3:	48 98                	cltq   
    5eb5:	eb b6                	jmp    5e6d <mbedtls_mpi_read_string+0x20d>
    5eb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5ebe:	00 00 
    5ec0:	49 8b 77 08          	mov    0x8(%r15),%rsi
    5ec4:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    5ec8:	e8 73 40 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    5ecd:	48 85 c0             	test   %rax,%rax
    5ed0:	74 cc                	je     5e9e <mbedtls_mpi_read_string+0x23e>
    5ed2:	41 c7 07 ff ff ff ff 	movl   $0xffffffff,(%r15)
    5ed9:	31 c0                	xor    %eax,%eax
    5edb:	e9 47 fe ff ff       	jmpq   5d27 <mbedtls_mpi_read_string+0xc7>
    5ee0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    5ee5:	e9 4d fe ff ff       	jmpq   5d37 <mbedtls_mpi_read_string+0xd7>
    5eea:	e8 81 e3 ff ff       	callq  4270 <__stack_chk_fail@plt>
    5eef:	83 e8 61             	sub    $0x61,%eax
    5ef2:	3c 05                	cmp    $0x5,%al
    5ef4:	0f 87 4e ff ff ff    	ja     5e48 <mbedtls_mpi_read_string+0x1e8>
    5efa:	41 83 e8 57          	sub    $0x57,%r8d
    5efe:	4d 63 f0             	movslq %r8d,%r14
    5f01:	e9 89 fe ff ff       	jmpq   5d8f <mbedtls_mpi_read_string+0x12f>
    5f06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5f0d:	00 00 00 

0000000000005f10 <mbedtls_mpi_read_file>:
    5f10:	f3 0f 1e fa          	endbr64 
    5f14:	41 55                	push   %r13
    5f16:	41 54                	push   %r12
    5f18:	55                   	push   %rbp
    5f19:	48 81 ec c0 09 00 00 	sub    $0x9c0,%rsp
    5f20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5f27:	00 00 
    5f29:	48 89 84 24 b8 09 00 	mov    %rax,0x9b8(%rsp)
    5f30:	00 
    5f31:	31 c0                	xor    %eax,%eax
    5f33:	8d 46 fe             	lea    -0x2(%rsi),%eax
    5f36:	83 f8 0e             	cmp    $0xe,%eax
    5f39:	0f 87 4f 01 00 00    	ja     608e <mbedtls_mpi_read_file+0x17e>
    5f3f:	48 89 e5             	mov    %rsp,%rbp
    5f42:	31 c0                	xor    %eax,%eax
    5f44:	49 89 fd             	mov    %rdi,%r13
    5f47:	b9 36 01 00 00       	mov    $0x136,%ecx
    5f4c:	48 89 ef             	mov    %rbp,%rdi
    5f4f:	41 89 f4             	mov    %esi,%r12d
    5f52:	be b3 09 00 00       	mov    $0x9b3,%esi
    5f57:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5f5a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    5f60:	48 89 ef             	mov    %rbp,%rdi
    5f63:	e8 58 e3 ff ff       	callq  42c0 <fgets@plt>
    5f68:	48 85 c0             	test   %rax,%rax
    5f6b:	0f 84 2b 01 00 00    	je     609c <mbedtls_mpi_read_file+0x18c>
    5f71:	48 89 ea             	mov    %rbp,%rdx
    5f74:	8b 0a                	mov    (%rdx),%ecx
    5f76:	48 83 c2 04          	add    $0x4,%rdx
    5f7a:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    5f80:	f7 d1                	not    %ecx
    5f82:	21 c8                	and    %ecx,%eax
    5f84:	25 80 80 80 80       	and    $0x80808080,%eax
    5f89:	74 e9                	je     5f74 <mbedtls_mpi_read_file+0x64>
    5f8b:	89 c1                	mov    %eax,%ecx
    5f8d:	c1 e9 10             	shr    $0x10,%ecx
    5f90:	a9 80 80 00 00       	test   $0x8080,%eax
    5f95:	0f 44 c1             	cmove  %ecx,%eax
    5f98:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    5f9c:	48 0f 44 d1          	cmove  %rcx,%rdx
    5fa0:	89 c7                	mov    %eax,%edi
    5fa2:	40 00 c7             	add    %al,%dil
    5fa5:	48 83 da 03          	sbb    $0x3,%rdx
    5fa9:	48 29 ea             	sub    %rbp,%rdx
    5fac:	48 81 fa b2 09 00 00 	cmp    $0x9b2,%rdx
    5fb3:	0f 84 dc 00 00 00    	je     6095 <mbedtls_mpi_read_file+0x185>
    5fb9:	48 85 d2             	test   %rdx,%rdx
    5fbc:	0f 85 7e 00 00 00    	jne    6040 <mbedtls_mpi_read_file+0x130>
    5fc2:	48 89 ea             	mov    %rbp,%rdx
    5fc5:	49 63 fc             	movslq %r12d,%rdi
    5fc8:	eb 14                	jmp    5fde <mbedtls_mpi_read_file+0xce>
    5fca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5fd0:	83 e8 30             	sub    $0x30,%eax
    5fd3:	48 98                	cltq   
    5fd5:	48 83 ea 01          	sub    $0x1,%rdx
    5fd9:	48 39 c7             	cmp    %rax,%rdi
    5fdc:	76 32                	jbe    6010 <mbedtls_mpi_read_file+0x100>
    5fde:	49 89 d0             	mov    %rdx,%r8
    5fe1:	48 39 ea             	cmp    %rbp,%rdx
    5fe4:	76 2a                	jbe    6010 <mbedtls_mpi_read_file+0x100>
    5fe6:	0f be 42 ff          	movsbl -0x1(%rdx),%eax
    5fea:	8d 70 d0             	lea    -0x30(%rax),%esi
    5fed:	89 c1                	mov    %eax,%ecx
    5fef:	40 80 fe 09          	cmp    $0x9,%sil
    5ff3:	76 db                	jbe    5fd0 <mbedtls_mpi_read_file+0xc0>
    5ff5:	8d 70 bf             	lea    -0x41(%rax),%esi
    5ff8:	40 80 fe 05          	cmp    $0x5,%sil
    5ffc:	0f 87 a9 00 00 00    	ja     60ab <mbedtls_mpi_read_file+0x19b>
    6002:	83 e8 37             	sub    $0x37,%eax
    6005:	48 83 ea 01          	sub    $0x1,%rdx
    6009:	48 98                	cltq   
    600b:	48 39 c7             	cmp    %rax,%rdi
    600e:	77 ce                	ja     5fde <mbedtls_mpi_read_file+0xce>
    6010:	4c 89 c2             	mov    %r8,%rdx
    6013:	44 89 e6             	mov    %r12d,%esi
    6016:	4c 89 ef             	mov    %r13,%rdi
    6019:	e8 42 fc ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    601e:	48 8b bc 24 b8 09 00 	mov    0x9b8(%rsp),%rdi
    6025:	00 
    6026:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    602d:	00 00 
    602f:	75 75                	jne    60a6 <mbedtls_mpi_read_file+0x196>
    6031:	48 81 c4 c0 09 00 00 	add    $0x9c0,%rsp
    6038:	5d                   	pop    %rbp
    6039:	41 5c                	pop    %r12
    603b:	41 5d                	pop    %r13
    603d:	c3                   	retq   
    603e:	66 90                	xchg   %ax,%ax
    6040:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    6044:	0f b6 0c 04          	movzbl (%rsp,%rax,1),%ecx
    6048:	80 f9 0a             	cmp    $0xa,%cl
    604b:	74 23                	je     6070 <mbedtls_mpi_read_file+0x160>
    604d:	48 01 ea             	add    %rbp,%rdx
    6050:	80 f9 0d             	cmp    $0xd,%cl
    6053:	0f 85 6c ff ff ff    	jne    5fc5 <mbedtls_mpi_read_file+0xb5>
    6059:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
    605d:	48 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%rdx
    6062:	e9 5e ff ff ff       	jmpq   5fc5 <mbedtls_mpi_read_file+0xb5>
    6067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    606e:	00 00 
    6070:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
    6074:	48 85 c0             	test   %rax,%rax
    6077:	0f 84 45 ff ff ff    	je     5fc2 <mbedtls_mpi_read_file+0xb2>
    607d:	48 8d 72 fe          	lea    -0x2(%rdx),%rsi
    6081:	0f b6 4c 14 fe       	movzbl -0x2(%rsp,%rdx,1),%ecx
    6086:	48 89 c2             	mov    %rax,%rdx
    6089:	48 89 f0             	mov    %rsi,%rax
    608c:	eb bf                	jmp    604d <mbedtls_mpi_read_file+0x13d>
    608e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    6093:	eb 89                	jmp    601e <mbedtls_mpi_read_file+0x10e>
    6095:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    609a:	eb 82                	jmp    601e <mbedtls_mpi_read_file+0x10e>
    609c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    60a1:	e9 78 ff ff ff       	jmpq   601e <mbedtls_mpi_read_file+0x10e>
    60a6:	e8 c5 e1 ff ff       	callq  4270 <__stack_chk_fail@plt>
    60ab:	83 e9 61             	sub    $0x61,%ecx
    60ae:	80 f9 05             	cmp    $0x5,%cl
    60b1:	0f 87 59 ff ff ff    	ja     6010 <mbedtls_mpi_read_file+0x100>
    60b7:	83 e8 57             	sub    $0x57,%eax
    60ba:	48 98                	cltq   
    60bc:	e9 14 ff ff ff       	jmpq   5fd5 <mbedtls_mpi_read_file+0xc5>
    60c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    60c8:	00 00 00 00 
    60cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000060d0 <mbedtls_mpi_div_mpi>:
    60d0:	e9 5b b7 02 00       	jmpq   31830 <mbedtls_mpi_div_mpi.instr.bb_60d0>
    60d5:	57                   	push   %rdi
    60d6:	49 89 fb             	mov    %rdi,%r11
    60d9:	41 56                	push   %r14
    60db:	41 55                	push   %r13
    60dd:	41 54                	push   %r12
    60df:	55                   	push   %rbp
    60e0:	48 89 d5             	mov    %rdx,%rbp
    60e3:	53                   	push   %rbx
    60e4:	48 89 cb             	mov    %rcx,%rbx
    60e7:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
    60ee:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    60f3:	4c 8d bc 24 30 01 00 	lea    0x130(%rsp),%r15
    60fa:	00 
    60fb:	48 89 cf             	mov    %rcx,%rdi
    60fe:	4c 8d ac 24 50 01 00 	lea    0x150(%rsp),%r13
    6105:	00 
    6106:	48 89 34 24          	mov    %rsi,(%rsp)
    610a:	4c 89 fe             	mov    %r15,%rsi
    610d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6114:	00 00 
    6116:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
    611d:	00 
    611e:	31 c0                	xor    %eax,%eax
    6120:	4c 89 ac 24 40 01 00 	mov    %r13,0x140(%rsp)
    6127:	00 
    6128:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
    612f:	00 00 00 00 00 
    6134:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
    613b:	01 00 00 00 
    613f:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    6146:	00 01 00 00 00 
    614b:	e8 20 f3 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    6150:	e9 e2 b7 02 00       	jmpq   31937 <instr.bb_6150>
    6155:	05 00 00 e9 e2       	add    $0xe2e90000,%eax
    615a:	b7 02                	mov    $0x2,%bh
    615c:	00 ef                	add    %ch,%bh
    615e:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    6165:	01 00 00 00 
    6169:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
    6170:	00 00 00 00 00 
    6175:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    617c:	00 00 00 00 00 
    6181:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
    6188:	01 00 00 00 
    618c:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
    6193:	00 00 00 00 00 
    6198:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
    619f:	00 00 00 00 00 
    61a4:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
    61ab:	01 00 00 00 
    61af:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
    61b6:	00 00 00 00 00 
    61bb:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
    61c2:	00 00 00 00 00 
    61c7:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
    61ce:	01 00 00 00 
    61d2:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
    61d9:	00 00 00 00 00 
    61de:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
    61e5:	00 00 00 00 00 
    61ea:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
    61f1:	01 00 00 00 
    61f5:	48 c7 84 24 18 01 00 	movq   $0x3,0x118(%rsp)
    61fc:	00 03 00 00 00 
    6201:	4c 89 ac 24 20 01 00 	mov    %r13,0x120(%rsp)
    6208:	00 
    6209:	e8 a2 f1 ff ff       	callq  53b0 <mbedtls_mpi_cmp_abs>
    620e:	e9 e2 b7 02 00       	jmpq   319f5 <instr.bb_620e>
    6213:	00 00                	add    %al,(%rax)
    6215:	00 e9                	add    %ch,%cl
    6217:	e2 b7                	loop   61d0 <mbedtls_mpi_div_mpi+0x100>
    6219:	02 00                	add    (%rax),%al
    621b:	e9 e6 b7 02 00       	jmpq   31a06 <instr.bb_621b>
    6220:	31 f6                	xor    %esi,%esi
    6222:	e8 69 ed ff ff       	callq  4f90 <mbedtls_mpi_lset>
    6227:	41 89 c4             	mov    %eax,%r12d
    622a:	85 c0                	test   %eax,%eax
    622c:	75 1a                	jne    6248 <mbedtls_mpi_div_mpi+0x178>
    622e:	e9 ed b7 02 00       	jmpq   31a20 <instr.bb_622e>
    6233:	74 73                	je     62a8 <mbedtls_mpi_div_mpi+0x1d8>
    6235:	e9 f1 b7 02 00       	jmpq   31a2b <instr.bb_6235>
    623a:	89 ee                	mov    %ebp,%esi
    623c:	e8 df eb ff ff       	callq  4e20 <mbedtls_mpi_copy>
    6241:	e9 20 b8 02 00       	jmpq   31a66 <instr.bb_6241>
    6246:	74 60                	je     62a8 <mbedtls_mpi_div_mpi+0x1d8>
    6248:	e9 24 b8 02 00       	jmpq   31a71 <instr.bb_6248>
    624d:	00 00                	add    %al,(%rax)
    624f:	00 48 8d             	add    %cl,-0x73(%rax)
    6252:	84 24 d0             	test   %ah,(%rax,%rdx,8)
    6255:	00 00                	add    %al,(%rax)
    6257:	00 4c 8d b4          	add    %cl,-0x4c(%rbp,%rcx,4)
    625b:	24 b0                	and    $0xb0,%al
    625d:	00 00                	add    %al,(%rax)
    625f:	00 48 89             	add    %cl,-0x77(%rax)
    6262:	44 24 08             	rex.R and $0x8,%al
    6265:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    626c:	00 
    626d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6272:	4c 89 c7             	mov    %r8,%rdi
    6275:	e8 16 e9 ff ff       	callq  4b90 <mbedtls_mpi_free>
    627a:	4c 89 f7             	mov    %r14,%rdi
    627d:	e8 0e e9 ff ff       	callq  4b90 <mbedtls_mpi_free>
    6282:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6287:	e8 04 e9 ff ff       	callq  4b90 <mbedtls_mpi_free>
    628c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6291:	e8 fa e8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    6296:	be 18 00 00 00       	mov    $0x18,%esi
    629b:	4c 89 ef             	mov    %r13,%rdi
    629e:	e8 cd e9 00 00       	callq  14c70 <mbedtls_platform_zeroize>
    62a3:	eb 06                	jmp    62ab <mbedtls_mpi_div_mpi+0x1db>
    62a5:	0f 1f 00             	nopl   (%rax)
    62a8:	45 31 e4             	xor    %r12d,%r12d
    62ab:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
    62b2:	00 
    62b3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    62ba:	00 00 
    62bc:	0f 85 5d 06 00 00    	jne    691f <mbedtls_mpi_div_mpi+0x84f>
    62c2:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
    62c9:	44 89 e0             	mov    %r12d,%eax
    62cc:	5b                   	pop    %rbx
    62cd:	5d                   	pop    %rbp
    62ce:	41 5c                	pop    %r12
    62d0:	41 5d                	pop    %r13
    62d2:	41 5e                	pop    %r14
    62d4:	41 5f                	pop    %r15
    62d6:	c3                   	retq   
    62d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    62de:	00 00 
    62e0:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
    62e7:	00 
    62e8:	48 89 ee             	mov    %rbp,%rsi
    62eb:	4c 89 c7             	mov    %r8,%rdi
    62ee:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    62f3:	e8 28 eb ff ff       	callq  4e20 <mbedtls_mpi_copy>
    62f8:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    62fd:	85 c0                	test   %eax,%eax
    62ff:	41 89 c4             	mov    %eax,%r12d
    6302:	0f 85 48 ff ff ff    	jne    6250 <mbedtls_mpi_div_mpi+0x180>
    6308:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
    630f:	00 
    6310:	48 89 de             	mov    %rbx,%rsi
    6313:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    6318:	4c 89 f7             	mov    %r14,%rdi
    631b:	e8 00 eb ff ff       	callq  4e20 <mbedtls_mpi_copy>
    6320:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    6325:	85 c0                	test   %eax,%eax
    6327:	41 89 c4             	mov    %eax,%r12d
    632a:	74 24                	je     6350 <mbedtls_mpi_div_mpi+0x280>
    632c:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    6333:	00 
    6334:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6339:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    6340:	00 
    6341:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6346:	e9 27 ff ff ff       	jmpq   6272 <mbedtls_mpi_div_mpi+0x1a2>
    634b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6350:	48 8b 45 08          	mov    0x8(%rbp),%rax
    6354:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    6359:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
    6360:	01 00 00 00 
    6364:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    636b:	01 00 00 00 
    636f:	48 8d 70 02          	lea    0x2(%rax),%rsi
    6373:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    637a:	00 
    637b:	48 89 c7             	mov    %rax,%rdi
    637e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6383:	e8 68 e8 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    6388:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
    638f:	00 
    6390:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    6395:	85 c0                	test   %eax,%eax
    6397:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    639c:	41 89 c4             	mov    %eax,%r12d
    639f:	0f 85 cd fe ff ff    	jne    6272 <mbedtls_mpi_div_mpi+0x1a2>
    63a5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    63aa:	31 f6                	xor    %esi,%esi
    63ac:	e8 df eb ff ff       	callq  4f90 <mbedtls_mpi_lset>
    63b1:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    63b6:	85 c0                	test   %eax,%eax
    63b8:	41 89 c4             	mov    %eax,%r12d
    63bb:	0f 85 b1 fe ff ff    	jne    6272 <mbedtls_mpi_div_mpi+0x1a2>
    63c1:	48 8b 45 08          	mov    0x8(%rbp),%rax
    63c5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    63ca:	48 8d 70 02          	lea    0x2(%rax),%rsi
    63ce:	e8 1d e8 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    63d3:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    63d8:	85 c0                	test   %eax,%eax
    63da:	41 89 c4             	mov    %eax,%r12d
    63dd:	0f 85 8f fe ff ff    	jne    6272 <mbedtls_mpi_div_mpi+0x1a2>
    63e3:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    63ea:	00 
    63eb:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
    63f2:	00 
    63f3:	e8 48 3b 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    63f8:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    63fd:	83 e0 3f             	and    $0x3f,%eax
    6400:	48 83 f8 3f          	cmp    $0x3f,%rax
    6404:	0f 84 c1 02 00 00    	je     66cb <mbedtls_mpi_div_mpi+0x5fb>
    640a:	ba 3f 00 00 00       	mov    $0x3f,%edx
    640f:	4c 89 c7             	mov    %r8,%rdi
    6412:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    6417:	48 29 c2             	sub    %rax,%rdx
    641a:	48 89 d6             	mov    %rdx,%rsi
    641d:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    6422:	e8 29 ee ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    6427:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    642c:	85 c0                	test   %eax,%eax
    642e:	41 89 c4             	mov    %eax,%r12d
    6431:	0f 85 3b fe ff ff    	jne    6272 <mbedtls_mpi_div_mpi+0x1a2>
    6437:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    643c:	4c 89 f7             	mov    %r14,%rdi
    643f:	e8 0c ee ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    6444:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    6449:	85 c0                	test   %eax,%eax
    644b:	41 89 c4             	mov    %eax,%r12d
    644e:	0f 85 1e fe ff ff    	jne    6272 <mbedtls_mpi_div_mpi+0x1a2>
    6454:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
    645b:	00 
    645c:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    6463:	00 
    6464:	4c 89 f7             	mov    %r14,%rdi
    6467:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    646c:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    6471:	48 29 c2             	sub    %rax,%rdx
    6474:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    6479:	48 89 d0             	mov    %rdx,%rax
    647c:	48 c1 e0 06          	shl    $0x6,%rax
    6480:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    6485:	48 89 c6             	mov    %rax,%rsi
    6488:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    648d:	e8 be ed ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    6492:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    6497:	85 c0                	test   %eax,%eax
    6499:	41 89 c4             	mov    %eax,%r12d
    649c:	0f 85 d0 fd ff ff    	jne    6272 <mbedtls_mpi_div_mpi+0x1a2>
    64a2:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    64a7:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
    64ac:	4c 89 c3             	mov    %r8,%rbx
    64af:	44 89 64 24 30       	mov    %r12d,0x30(%rsp)
    64b4:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    64bb:	00 
    64bc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    64c1:	49 89 c4             	mov    %rax,%r12
    64c4:	eb 34                	jmp    64fa <mbedtls_mpi_div_mpi+0x42a>
    64c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    64cd:	00 00 00 
    64d0:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    64d5:	4c 89 f2             	mov    %r14,%rdx
    64d8:	48 89 de             	mov    %rbx,%rsi
    64db:	48 89 df             	mov    %rbx,%rdi
    64de:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    64e5:	00 
    64e6:	4c 01 e0             	add    %r12,%rax
    64e9:	48 83 00 01          	addq   $0x1,(%rax)
    64ed:	e8 1e f3 ff ff       	callq  5810 <add_sub_mpi>
    64f2:	85 c0                	test   %eax,%eax
    64f4:	0f 85 df 01 00 00    	jne    66d9 <mbedtls_mpi_div_mpi+0x609>
    64fa:	4c 89 f6             	mov    %r14,%rsi
    64fd:	48 89 df             	mov    %rbx,%rdi
    6500:	e8 6b ef ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    6505:	85 c0                	test   %eax,%eax
    6507:	79 c7                	jns    64d0 <mbedtls_mpi_div_mpi+0x400>
    6509:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    6510:	00 
    6511:	49 89 d8             	mov    %rbx,%r8
    6514:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    6519:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    651e:	48 85 f6             	test   %rsi,%rsi
    6521:	0f 85 d7 03 00 00    	jne    68fe <mbedtls_mpi_div_mpi+0x82e>
    6527:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    652c:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    6531:	48 83 e8 01          	sub    $0x1,%rax
    6535:	48 83 e9 01          	sub    $0x1,%rcx
    6539:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    653e:	48 39 c8             	cmp    %rcx,%rax
    6541:	0f 86 de 02 00 00    	jbe    6825 <mbedtls_mpi_div_mpi+0x755>
    6547:	48 89 c8             	mov    %rcx,%rax
    654a:	48 8d 14 cd 00 00 00 	lea    0x0(,%rcx,8),%rdx
    6551:	00 
    6552:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    6557:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
    655e:	00 
    655f:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
    6564:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    6569:	48 83 e9 08          	sub    $0x8,%rcx
    656d:	44 89 64 24 5c       	mov    %r12d,0x5c(%rsp)
    6572:	49 89 c4             	mov    %rax,%r12
    6575:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
    657a:	48 89 d5             	mov    %rdx,%rbp
    657d:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)
    6582:	48 89 cb             	mov    %rcx,%rbx
    6585:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
    658a:	4d 89 c7             	mov    %r8,%r15
    658d:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
    6592:	49 89 f5             	mov    %rsi,%r13
    6595:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
    659c:	00 
    659d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    65a2:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
    65a9:	00 
    65aa:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
    65b1:	00 
    65b2:	49 89 cb             	mov    %rcx,%r11
    65b5:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
    65bc:	00 
    65bd:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
    65c2:	49 01 fb             	add    %rdi,%r11
    65c5:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    65ca:	4c 8d 44 39 f8       	lea    -0x8(%rcx,%rdi,1),%r8
    65cf:	4d 8d 14 19          	lea    (%r9,%rbx,1),%r10
    65d3:	49 8b 33             	mov    (%r11),%rsi
    65d6:	48 8b 14 28          	mov    (%rax,%rbp,1),%rdx
    65da:	48 39 d6             	cmp    %rdx,%rsi
    65dd:	0f 82 01 01 00 00    	jb     66e4 <mbedtls_mpi_div_mpi+0x614>
    65e3:	49 c7 02 ff ff ff ff 	movq   $0xffffffffffffffff,(%r10)
    65ea:	31 c0                	xor    %eax,%eax
    65ec:	48 83 7c 24 30 01    	cmpq   $0x1,0x30(%rsp)
    65f2:	74 0f                	je     6603 <mbedtls_mpi_div_mpi+0x533>
    65f4:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    65f9:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    65fe:	48 8b 44 08 f0       	mov    -0x10(%rax,%rcx,1),%rax
    6603:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
    660a:	00 
    660b:	49 8b 00             	mov    (%r8),%rax
    660e:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
    6615:	00 
    6616:	49 8b 03             	mov    (%r11),%rax
    6619:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
    6620:	00 
    6621:	49 8b 02             	mov    (%r10),%rax
    6624:	48 8d 50 01          	lea    0x1(%rax),%rdx
    6628:	49 89 12             	mov    %rdx,(%r10)
    662b:	eb 64                	jmp    6691 <mbedtls_mpi_div_mpi+0x5c1>
    662d:	0f 1f 00             	nopl   (%rax)
    6630:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
    6637:	00 
    6638:	31 c9                	xor    %ecx,%ecx
    663a:	4d 85 e4             	test   %r12,%r12
    663d:	74 05                	je     6644 <mbedtls_mpi_div_mpi+0x574>
    663f:	48 8b 4c 2a f8       	mov    -0x8(%rdx,%rbp,1),%rcx
    6644:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
    664b:	00 
    664c:	4c 89 f6             	mov    %r14,%rsi
    664f:	4c 89 f7             	mov    %r14,%rdi
    6652:	48 89 08             	mov    %rcx,(%rax)
    6655:	48 8b 14 2a          	mov    (%rdx,%rbp,1),%rdx
    6659:	48 89 50 08          	mov    %rdx,0x8(%rax)
    665d:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    6664:	00 
    6665:	48 8b 14 18          	mov    (%rax,%rbx,1),%rdx
    6669:	e8 32 f5 ff ff       	callq  5ba0 <mbedtls_mpi_mul_int>
    666e:	85 c0                	test   %eax,%eax
    6670:	75 35                	jne    66a7 <mbedtls_mpi_div_mpi+0x5d7>
    6672:	4c 89 ee             	mov    %r13,%rsi
    6675:	4c 89 f7             	mov    %r14,%rdi
    6678:	e8 f3 ed ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    667d:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
    6684:	00 
    6685:	49 8b 14 19          	mov    (%r9,%rbx,1),%rdx
    6689:	85 c0                	test   %eax,%eax
    668b:	0f 8e c8 00 00 00    	jle    6759 <mbedtls_mpi_div_mpi+0x689>
    6691:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    6695:	31 f6                	xor    %esi,%esi
    6697:	4c 89 f7             	mov    %r14,%rdi
    669a:	49 89 04 19          	mov    %rax,(%r9,%rbx,1)
    669e:	e8 ed e8 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    66a3:	85 c0                	test   %eax,%eax
    66a5:	74 89                	je     6630 <mbedtls_mpi_div_mpi+0x560>
    66a7:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    66ac:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    66b1:	4d 89 f8             	mov    %r15,%r8
    66b4:	41 89 c4             	mov    %eax,%r12d
    66b7:	e9 b6 fb ff ff       	jmpq   6272 <mbedtls_mpi_div_mpi+0x1a2>
    66bc:	0f 1f 40 00          	nopl   0x0(%rax)
    66c0:	41 bc f4 ff ff ff    	mov    $0xfffffff4,%r12d
    66c6:	e9 e0 fb ff ff       	jmpq   62ab <mbedtls_mpi_div_mpi+0x1db>
    66cb:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    66d2:	00 00 
    66d4:	e9 7b fd ff ff       	jmpq   6454 <mbedtls_mpi_div_mpi+0x384>
    66d9:	49 89 d8             	mov    %rbx,%r8
    66dc:	41 89 c4             	mov    %eax,%r12d
    66df:	e9 8e fb ff ff       	jmpq   6272 <mbedtls_mpi_div_mpi+0x1a2>
    66e4:	49 8b 38             	mov    (%r8),%rdi
    66e7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    66ee:	48 85 d2             	test   %rdx,%rdx
    66f1:	74 5e                	je     6751 <mbedtls_mpi_div_mpi+0x681>
    66f3:	31 c9                	xor    %ecx,%ecx
    66f5:	4c 89 8c 24 88 00 00 	mov    %r9,0x88(%rsp)
    66fc:	00 
    66fd:	4c 89 94 24 80 00 00 	mov    %r10,0x80(%rsp)
    6704:	00 
    6705:	4c 89 5c 24 78       	mov    %r11,0x78(%rsp)
    670a:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
    670f:	e8 fc 42 01 00       	callq  1aa10 <__udivti3>
    6714:	b9 00 00 00 00       	mov    $0x0,%ecx
    6719:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    6720:	4c 8b 8c 24 88 00 00 	mov    0x88(%rsp),%r9
    6727:	00 
    6728:	48 89 d7             	mov    %rdx,%rdi
    672b:	48 39 c6             	cmp    %rax,%rsi
    672e:	48 89 c2             	mov    %rax,%rdx
    6731:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    6738:	48 19 f9             	sbb    %rdi,%rcx
    673b:	4c 8b 5c 24 78       	mov    0x78(%rsp),%r11
    6740:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    6745:	48 0f 43 c2          	cmovae %rdx,%rax
    6749:	4c 8b 94 24 80 00 00 	mov    0x80(%rsp),%r10
    6750:	00 
    6751:	49 89 02             	mov    %rax,(%r10)
    6754:	e9 91 fe ff ff       	jmpq   65ea <mbedtls_mpi_div_mpi+0x51a>
    6759:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    675e:	e8 3d f4 ff ff       	callq  5ba0 <mbedtls_mpi_mul_int>
    6763:	85 c0                	test   %eax,%eax
    6765:	0f 85 3c ff ff ff    	jne    66a7 <mbedtls_mpi_div_mpi+0x5d7>
    676b:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    6772:	00 
    6773:	4c 89 f7             	mov    %r14,%rdi
    6776:	48 89 c6             	mov    %rax,%rsi
    6779:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    677e:	e8 cd ea ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    6783:	85 c0                	test   %eax,%eax
    6785:	0f 85 1c ff ff ff    	jne    66a7 <mbedtls_mpi_div_mpi+0x5d7>
    678b:	83 c9 ff             	or     $0xffffffff,%ecx
    678e:	4c 89 f2             	mov    %r14,%rdx
    6791:	4c 89 fe             	mov    %r15,%rsi
    6794:	4c 89 ff             	mov    %r15,%rdi
    6797:	e8 74 f0 ff ff       	callq  5810 <add_sub_mpi>
    679c:	85 c0                	test   %eax,%eax
    679e:	0f 85 03 ff ff ff    	jne    66a7 <mbedtls_mpi_div_mpi+0x5d7>
    67a4:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    67a9:	4c 89 ff             	mov    %r15,%rdi
    67ac:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
    67b3:	00 
    67b4:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
    67bb:	00 00 00 00 00 
    67c0:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
    67c7:	01 00 00 00 
    67cb:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    67d2:	00 01 00 00 00 
    67d7:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
    67de:	00 
    67df:	e8 8c ec ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    67e4:	85 c0                	test   %eax,%eax
    67e6:	0f 88 38 01 00 00    	js     6924 <mbedtls_mpi_div_mpi+0x854>
    67ec:	48 83 6c 24 30 01    	subq   $0x1,0x30(%rsp)
    67f2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    67f7:	48 83 eb 08          	sub    $0x8,%rbx
    67fb:	49 39 c4             	cmp    %rax,%r12
    67fe:	0f 82 91 fd ff ff    	jb     6595 <mbedtls_mpi_div_mpi+0x4c5>
    6804:	4d 89 f8             	mov    %r15,%r8
    6807:	44 8b 64 24 5c       	mov    0x5c(%rsp),%r12d
    680c:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
    6811:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    6816:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    681b:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    6820:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    6825:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    682b:	74 2e                	je     685b <mbedtls_mpi_div_mpi+0x78b>
    682d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6832:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    6837:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    683c:	e8 df e5 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    6841:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    6846:	85 c0                	test   %eax,%eax
    6848:	0f 85 50 01 00 00    	jne    699e <mbedtls_mpi_div_mpi+0x8ce>
    684e:	8b 45 00             	mov    0x0(%rbp),%eax
    6851:	0f af 03             	imul   (%rbx),%eax
    6854:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6859:	89 01                	mov    %eax,(%rcx)
    685b:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    6860:	0f 84 0c fa ff ff    	je     6272 <mbedtls_mpi_div_mpi+0x1a2>
    6866:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
    686d:	00 
    686e:	48 85 f6             	test   %rsi,%rsi
    6871:	0f 85 06 01 00 00    	jne    697d <mbedtls_mpi_div_mpi+0x8ad>
    6877:	48 8b 1c 24          	mov    (%rsp),%rbx
    687b:	8b 45 00             	mov    0x0(%rbp),%eax
    687e:	4c 89 c6             	mov    %r8,%rsi
    6881:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    6886:	48 89 df             	mov    %rbx,%rdi
    6889:	89 84 24 90 00 00 00 	mov    %eax,0x90(%rsp)
    6890:	e8 8b e5 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    6895:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    689a:	85 c0                	test   %eax,%eax
    689c:	0f 85 fc 00 00 00    	jne    699e <mbedtls_mpi_div_mpi+0x8ce>
    68a2:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
    68a9:	00 
    68aa:	4c 89 fe             	mov    %r15,%rsi
    68ad:	48 89 df             	mov    %rbx,%rdi
    68b0:	4c 89 04 24          	mov    %r8,(%rsp)
    68b4:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
    68bb:	00 00 00 00 00 
    68c0:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
    68c7:	01 00 00 00 
    68cb:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    68d2:	00 01 00 00 00 
    68d7:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
    68de:	00 
    68df:	e8 8c eb ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    68e4:	4c 8b 04 24          	mov    (%rsp),%r8
    68e8:	85 c0                	test   %eax,%eax
    68ea:	0f 85 82 f9 ff ff    	jne    6272 <mbedtls_mpi_div_mpi+0x1a2>
    68f0:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    68f6:	45 31 e4             	xor    %r12d,%r12d
    68f9:	e9 74 f9 ff ff       	jmpq   6272 <mbedtls_mpi_div_mpi+0x1a2>
    68fe:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
    6903:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    6908:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
    690f:	00 
    6910:	e8 4b 3a 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    6915:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    691a:	e9 08 fc ff ff       	jmpq   6527 <mbedtls_mpi_div_mpi+0x457>
    691f:	e8 4c d9 ff ff       	callq  4270 <__stack_chk_fail@plt>
    6924:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6929:	4c 89 f7             	mov    %r14,%rdi
    692c:	e8 ef e4 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    6931:	85 c0                	test   %eax,%eax
    6933:	0f 85 6e fd ff ff    	jne    66a7 <mbedtls_mpi_div_mpi+0x5d7>
    6939:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    693e:	4c 89 f7             	mov    %r14,%rdi
    6941:	e8 0a e9 ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    6946:	85 c0                	test   %eax,%eax
    6948:	0f 85 59 fd ff ff    	jne    66a7 <mbedtls_mpi_div_mpi+0x5d7>
    694e:	b9 01 00 00 00       	mov    $0x1,%ecx
    6953:	4c 89 f2             	mov    %r14,%rdx
    6956:	4c 89 fe             	mov    %r15,%rsi
    6959:	4c 89 ff             	mov    %r15,%rdi
    695c:	e8 af ee ff ff       	callq  5810 <add_sub_mpi>
    6961:	85 c0                	test   %eax,%eax
    6963:	0f 85 3e fd ff ff    	jne    66a7 <mbedtls_mpi_div_mpi+0x5d7>
    6969:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    6970:	00 
    6971:	48 01 d8             	add    %rbx,%rax
    6974:	48 83 28 01          	subq   $0x1,(%rax)
    6978:	e9 6f fe ff ff       	jmpq   67ec <mbedtls_mpi_div_mpi+0x71c>
    697d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    6982:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
    6989:	00 
    698a:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    698f:	e8 cc 39 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    6994:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6999:	e9 d9 fe ff ff       	jmpq   6877 <mbedtls_mpi_div_mpi+0x7a7>
    699e:	41 89 c4             	mov    %eax,%r12d
    69a1:	e9 cc f8 ff ff       	jmpq   6272 <mbedtls_mpi_div_mpi+0x1a2>
    69a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    69ad:	00 00 00 

00000000000069b0 <mbedtls_mpi_div_int>:
    69b0:	f3 0f 1e fa          	endbr64 
    69b4:	48 83 ec 38          	sub    $0x38,%rsp
    69b8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    69bf:	00 00 
    69c1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    69c6:	31 c0                	xor    %eax,%eax
    69c8:	b8 01 00 00 00       	mov    $0x1,%eax
    69cd:	48 85 c9             	test   %rcx,%rcx
    69d0:	79 08                	jns    69da <mbedtls_mpi_div_int+0x2a>
    69d2:	48 f7 d9             	neg    %rcx
    69d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    69da:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    69df:	48 89 e1             	mov    %rsp,%rcx
    69e2:	89 04 24             	mov    %eax,(%rsp)
    69e5:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    69ea:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    69f1:	00 00 
    69f3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    69f8:	e8 d3 f6 ff ff       	callq  60d0 <mbedtls_mpi_div_mpi>
    69fd:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6a02:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    6a09:	00 00 
    6a0b:	75 05                	jne    6a12 <mbedtls_mpi_div_int+0x62>
    6a0d:	48 83 c4 38          	add    $0x38,%rsp
    6a11:	c3                   	retq   
    6a12:	e8 59 d8 ff ff       	callq  4270 <__stack_chk_fail@plt>
    6a17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a1e:	00 00 

0000000000006a20 <mbedtls_mpi_mod_mpi>:
    6a20:	e9 8b b0 02 00       	jmpq   31ab0 <mbedtls_mpi_mod_mpi.instr.bb_6a20>
    6a25:	56                   	push   %rsi
    6a26:	49 89 f1             	mov    %rsi,%r9
    6a29:	41 55                	push   %r13
    6a2b:	41 54                	push   %r12
    6a2d:	55                   	push   %rbp
    6a2e:	48 89 d5             	mov    %rdx,%rbp
    6a31:	53                   	push   %rbx
    6a32:	48 89 fb             	mov    %rdi,%rbx
    6a35:	48 89 d7             	mov    %rdx,%rdi
    6a38:	48 83 ec 30          	sub    $0x30,%rsp
    6a3c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6a43:	00 00 
    6a45:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6a4a:	31 c0                	xor    %eax,%eax
    6a4c:	49 89 e4             	mov    %rsp,%r12
    6a4f:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    6a54:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6a5b:	00 00 
    6a5d:	4c 89 e6             	mov    %r12,%rsi
    6a60:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    6a67:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    6a6e:	00 00 
    6a70:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    6a75:	e8 f6 e9 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    6a7a:	e9 af b0 02 00       	jmpq   31b2e <instr.bb_6a7a>
    6a7f:	00 00                	add    %al,(%rax)
    6a81:	00 e9                	add    %ch,%cl
    6a83:	af                   	scas   %es:(%rdi),%eax
    6a84:	b0 02                	mov    $0x2,%al
    6a86:	00 ca                	add    %cl,%dl
    6a88:	48 89 de             	mov    %rbx,%rsi
    6a8b:	31 ff                	xor    %edi,%edi
    6a8d:	e8 3e f6 ff ff       	callq  60d0 <mbedtls_mpi_div_mpi>
    6a92:	e9 de b0 02 00       	jmpq   31b75 <instr.bb_6a92>
    6a97:	74 22                	je     6abb <mbedtls_mpi_mod_mpi+0x9b>
    6a99:	e9 e2 b0 02 00       	jmpq   31b80 <instr.bb_6a99>
    6a9e:	66 90                	xchg   %ax,%ax
    6aa0:	b9 01 00 00 00       	mov    $0x1,%ecx
    6aa5:	48 89 ea             	mov    %rbp,%rdx
    6aa8:	48 89 de             	mov    %rbx,%rsi
    6aab:	48 89 df             	mov    %rbx,%rdi
    6aae:	e8 5d ed ff ff       	callq  5810 <add_sub_mpi>
    6ab3:	85 c0                	test   %eax,%eax
    6ab5:	0f 85 85 00 00 00    	jne    6b40 <mbedtls_mpi_mod_mpi+0x120>
    6abb:	4c 89 e6             	mov    %r12,%rsi
    6abe:	48 89 df             	mov    %rbx,%rdi
    6ac1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6ac8:	00 00 
    6aca:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    6ad1:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
    6ad8:	00 00 
    6ada:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    6adf:	e8 8c e9 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    6ae4:	85 c0                	test   %eax,%eax
    6ae6:	78 b8                	js     6aa0 <mbedtls_mpi_mod_mpi+0x80>
    6ae8:	eb 1d                	jmp    6b07 <mbedtls_mpi_mod_mpi+0xe7>
    6aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6af0:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    6af5:	48 89 ea             	mov    %rbp,%rdx
    6af8:	48 89 de             	mov    %rbx,%rsi
    6afb:	48 89 df             	mov    %rbx,%rdi
    6afe:	e8 0d ed ff ff       	callq  5810 <add_sub_mpi>
    6b03:	85 c0                	test   %eax,%eax
    6b05:	75 39                	jne    6b40 <mbedtls_mpi_mod_mpi+0x120>
    6b07:	48 89 ee             	mov    %rbp,%rsi
    6b0a:	48 89 df             	mov    %rbx,%rdi
    6b0d:	e8 5e e9 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    6b12:	85 c0                	test   %eax,%eax
    6b14:	79 da                	jns    6af0 <mbedtls_mpi_mod_mpi+0xd0>
    6b16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6b1d:	00 00 00 
    6b20:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6b25:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    6b2c:	00 00 
    6b2e:	75 1d                	jne    6b4d <mbedtls_mpi_mod_mpi+0x12d>
    6b30:	48 83 c4 30          	add    $0x30,%rsp
    6b34:	44 89 f0             	mov    %r14d,%eax
    6b37:	5b                   	pop    %rbx
    6b38:	5d                   	pop    %rbp
    6b39:	41 5c                	pop    %r12
    6b3b:	41 5d                	pop    %r13
    6b3d:	41 5e                	pop    %r14
    6b3f:	c3                   	retq   
    6b40:	41 89 c6             	mov    %eax,%r14d
    6b43:	eb db                	jmp    6b20 <mbedtls_mpi_mod_mpi+0x100>
    6b45:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
    6b4b:	eb d3                	jmp    6b20 <mbedtls_mpi_mod_mpi+0x100>
    6b4d:	e8 1e d7 ff ff       	callq  4270 <__stack_chk_fail@plt>
    6b52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6b59:	00 00 00 00 
    6b5d:	0f 1f 00             	nopl   (%rax)

0000000000006b60 <mbedtls_mpi_mod_int>:
    6b60:	f3 0f 1e fa          	endbr64 
    6b64:	49 89 d0             	mov    %rdx,%r8
    6b67:	48 85 d2             	test   %rdx,%rdx
    6b6a:	0f 84 8c 00 00 00    	je     6bfc <mbedtls_mpi_mod_int+0x9c>
    6b70:	0f 88 8c 00 00 00    	js     6c02 <mbedtls_mpi_mod_int+0xa2>
    6b76:	48 83 fa 01          	cmp    $0x1,%rdx
    6b7a:	74 64                	je     6be0 <mbedtls_mpi_mod_int+0x80>
    6b7c:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    6b80:	4d 85 c9             	test   %r9,%r9
    6b83:	74 5b                	je     6be0 <mbedtls_mpi_mod_int+0x80>
    6b85:	4c 8b 56 10          	mov    0x10(%rsi),%r10
    6b89:	31 d2                	xor    %edx,%edx
    6b8b:	49 83 f8 02          	cmp    $0x2,%r8
    6b8f:	74 5f                	je     6bf0 <mbedtls_mpi_mod_int+0x90>
    6b91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b98:	4b 8b 4c ca f8       	mov    -0x8(%r10,%r9,8),%rcx
    6b9d:	48 c1 e2 20          	shl    $0x20,%rdx
    6ba1:	48 89 c8             	mov    %rcx,%rax
    6ba4:	48 c1 e8 20          	shr    $0x20,%rax
    6ba8:	48 09 d0             	or     %rdx,%rax
    6bab:	31 d2                	xor    %edx,%edx
    6bad:	49 f7 f0             	div    %r8
    6bb0:	89 c8                	mov    %ecx,%eax
    6bb2:	48 c1 e2 20          	shl    $0x20,%rdx
    6bb6:	48 09 d0             	or     %rdx,%rax
    6bb9:	31 d2                	xor    %edx,%edx
    6bbb:	49 f7 f0             	div    %r8
    6bbe:	49 83 e9 01          	sub    $0x1,%r9
    6bc2:	75 d4                	jne    6b98 <mbedtls_mpi_mod_int+0x38>
    6bc4:	8b 06                	mov    (%rsi),%eax
    6bc6:	85 c0                	test   %eax,%eax
    6bc8:	79 0a                	jns    6bd4 <mbedtls_mpi_mod_int+0x74>
    6bca:	49 29 d0             	sub    %rdx,%r8
    6bcd:	48 85 d2             	test   %rdx,%rdx
    6bd0:	49 0f 45 d0          	cmovne %r8,%rdx
    6bd4:	48 89 17             	mov    %rdx,(%rdi)
    6bd7:	31 c0                	xor    %eax,%eax
    6bd9:	c3                   	retq   
    6bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6be0:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    6be7:	31 c0                	xor    %eax,%eax
    6be9:	c3                   	retq   
    6bea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6bf0:	49 8b 02             	mov    (%r10),%rax
    6bf3:	83 e0 01             	and    $0x1,%eax
    6bf6:	48 89 07             	mov    %rax,(%rdi)
    6bf9:	31 c0                	xor    %eax,%eax
    6bfb:	c3                   	retq   
    6bfc:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    6c01:	c3                   	retq   
    6c02:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    6c07:	c3                   	retq   
    6c08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6c0f:	00 

0000000000006c10 <mbedtls_mpi_write_string>:
    6c10:	f3 0f 1e fa          	endbr64 
    6c14:	41 57                	push   %r15
    6c16:	41 56                	push   %r14
    6c18:	41 55                	push   %r13
    6c1a:	4c 63 ee             	movslq %esi,%r13
    6c1d:	41 54                	push   %r12
    6c1f:	55                   	push   %rbp
    6c20:	53                   	push   %rbx
    6c21:	48 83 ec 78          	sub    $0x78,%rsp
    6c25:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    6c2a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6c31:	00 00 
    6c33:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    6c38:	31 c0                	xor    %eax,%eax
    6c3a:	41 8d 45 fe          	lea    -0x2(%r13),%eax
    6c3e:	83 f8 0e             	cmp    $0xe,%eax
    6c41:	0f 87 48 02 00 00    	ja     6e8f <mbedtls_mpi_write_string+0x27f>
    6c47:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6c4b:	48 89 fd             	mov    %rdi,%rbp
    6c4e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    6c52:	48 89 d3             	mov    %rdx,%rbx
    6c55:	49 89 ce             	mov    %rcx,%r14
    6c58:	e8 e3 32 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    6c5d:	48 89 c2             	mov    %rax,%rdx
    6c60:	48 d1 ea             	shr    %rdx
    6c63:	41 83 fd 03          	cmp    $0x3,%r13d
    6c67:	48 0f 4f c2          	cmovg  %rdx,%rax
    6c6b:	48 89 c2             	mov    %rax,%rdx
    6c6e:	48 d1 ea             	shr    %rdx
    6c71:	41 83 fd 10          	cmp    $0x10,%r13d
    6c75:	48 0f 44 c2          	cmove  %rdx,%rax
    6c79:	48 83 c0 04          	add    $0x4,%rax
    6c7d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    6c81:	4c 39 f0             	cmp    %r14,%rax
    6c84:	0f 87 0f 02 00 00    	ja     6e99 <mbedtls_mpi_write_string+0x289>
    6c8a:	83 7d 00 ff          	cmpl   $0xffffffff,0x0(%rbp)
    6c8e:	49 89 df             	mov    %rbx,%r15
    6c91:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
    6c98:	00 
    6c99:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    6ca0:	00 00 
    6ca2:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    6ca9:	00 00 
    6cab:	75 0b                	jne    6cb8 <mbedtls_mpi_write_string+0xa8>
    6cad:	c6 03 2d             	movb   $0x2d,(%rbx)
    6cb0:	4c 8d 7b 01          	lea    0x1(%rbx),%r15
    6cb4:	49 83 ee 01          	sub    $0x1,%r14
    6cb8:	41 83 fd 10          	cmp    $0x10,%r13d
    6cbc:	0f 85 ee 00 00 00    	jne    6db0 <mbedtls_mpi_write_string+0x1a0>
    6cc2:	4c 8b 5d 08          	mov    0x8(%rbp),%r11
    6cc6:	4d 85 db             	test   %r11,%r11
    6cc9:	0f 84 8b 00 00 00    	je     6d5a <mbedtls_mpi_write_string+0x14a>
    6ccf:	4e 8d 0c dd f8 ff ff 	lea    -0x8(,%r11,8),%r9
    6cd6:	ff 
    6cd7:	45 31 ed             	xor    %r13d,%r13d
    6cda:	48 8d 3d af 43 01 00 	lea    0x143af(%rip),%rdi        # 1b090 <_IO_stdin_used+0x90>
    6ce1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6ce8:	be 07 00 00 00       	mov    $0x7,%esi
    6ced:	4d 8d 53 01          	lea    0x1(%r11),%r10
    6cf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6cf8:	48 8b 45 10          	mov    0x10(%rbp),%rax
    6cfc:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    6d03:	4a 8b 04 08          	mov    (%rax,%r9,1),%rax
    6d07:	48 d3 e8             	shr    %cl,%rax
    6d0a:	89 c2                	mov    %eax,%edx
    6d0c:	81 e2 ff 00 00 00    	and    $0xff,%edx
    6d12:	75 0f                	jne    6d23 <mbedtls_mpi_write_string+0x113>
    6d14:	4d 85 ed             	test   %r13,%r13
    6d17:	75 0a                	jne    6d23 <mbedtls_mpi_write_string+0x113>
    6d19:	49 8d 0c 32          	lea    (%r10,%rsi,1),%rcx
    6d1d:	48 83 f9 02          	cmp    $0x2,%rcx
    6d21:	75 23                	jne    6d46 <mbedtls_mpi_write_string+0x136>
    6d23:	c1 fa 04             	sar    $0x4,%edx
    6d26:	83 e0 0f             	and    $0xf,%eax
    6d29:	49 83 c7 02          	add    $0x2,%r15
    6d2d:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    6d33:	48 63 d2             	movslq %edx,%rdx
    6d36:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
    6d3a:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
    6d3e:	41 88 47 ff          	mov    %al,-0x1(%r15)
    6d42:	41 88 57 fe          	mov    %dl,-0x2(%r15)
    6d46:	48 83 ee 01          	sub    $0x1,%rsi
    6d4a:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
    6d4e:	75 a8                	jne    6cf8 <mbedtls_mpi_write_string+0xe8>
    6d50:	49 83 e9 08          	sub    $0x8,%r9
    6d54:	49 83 eb 01          	sub    $0x1,%r11
    6d58:	75 8e                	jne    6ce8 <mbedtls_mpi_write_string+0xd8>
    6d5a:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
    6d5f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6d64:	4d 8d 47 01          	lea    0x1(%r15),%r8
    6d68:	41 c6 07 00          	movb   $0x0,(%r15)
    6d6c:	49 29 d8             	sub    %rbx,%r8
    6d6f:	4c 89 00             	mov    %r8,(%rax)
    6d72:	31 c0                	xor    %eax,%eax
    6d74:	4c 89 e7             	mov    %r12,%rdi
    6d77:	89 44 24 08          	mov    %eax,0x8(%rsp)
    6d7b:	e8 10 de ff ff       	callq  4b90 <mbedtls_mpi_free>
    6d80:	8b 44 24 08          	mov    0x8(%rsp),%eax
    6d84:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    6d89:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    6d90:	00 00 
    6d92:	0f 85 13 01 00 00    	jne    6eab <mbedtls_mpi_write_string+0x29b>
    6d98:	48 83 c4 78          	add    $0x78,%rsp
    6d9c:	5b                   	pop    %rbx
    6d9d:	5d                   	pop    %rbp
    6d9e:	41 5c                	pop    %r12
    6da0:	41 5d                	pop    %r13
    6da2:	41 5e                	pop    %r14
    6da4:	41 5f                	pop    %r15
    6da6:	c3                   	retq   
    6da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6dae:	00 00 
    6db0:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
    6db5:	48 89 ee             	mov    %rbp,%rsi
    6db8:	4c 89 e7             	mov    %r12,%rdi
    6dbb:	e8 60 e0 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    6dc0:	85 c0                	test   %eax,%eax
    6dc2:	75 b0                	jne    6d74 <mbedtls_mpi_write_string+0x164>
    6dc4:	83 7c 24 20 ff       	cmpl   $0xffffffff,0x20(%rsp)
    6dc9:	75 08                	jne    6dd3 <mbedtls_mpi_write_string+0x1c3>
    6dcb:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
    6dd2:	00 
    6dd3:	4d 01 fe             	add    %r15,%r14
    6dd6:	4c 89 f5             	mov    %r14,%rbp
    6dd9:	e9 85 00 00 00       	jmpq   6e63 <mbedtls_mpi_write_string+0x253>
    6dde:	66 90                	xchg   %ax,%ax
    6de0:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    6de5:	4c 89 ea             	mov    %r13,%rdx
    6de8:	4c 89 e6             	mov    %r12,%rsi
    6deb:	e8 70 fd ff ff       	callq  6b60 <mbedtls_mpi_mod_int>
    6df0:	85 c0                	test   %eax,%eax
    6df2:	75 80                	jne    6d74 <mbedtls_mpi_write_string+0x164>
    6df4:	31 f6                	xor    %esi,%esi
    6df6:	4c 89 e9             	mov    %r13,%rcx
    6df9:	4c 89 e2             	mov    %r12,%rdx
    6dfc:	4c 89 e7             	mov    %r12,%rdi
    6dff:	e8 ac fb ff ff       	callq  69b0 <mbedtls_mpi_div_int>
    6e04:	85 c0                	test   %eax,%eax
    6e06:	0f 85 68 ff ff ff    	jne    6d74 <mbedtls_mpi_write_string+0x164>
    6e0c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6e11:	48 83 ed 01          	sub    $0x1,%rbp
    6e15:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    6e1a:	4c 89 e7             	mov    %r12,%rdi
    6e1d:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    6e24:	00 00 
    6e26:	48 83 fa 09          	cmp    $0x9,%rdx
    6e2a:	8d 4a 30             	lea    0x30(%rdx),%ecx
    6e2d:	8d 42 37             	lea    0x37(%rdx),%eax
    6e30:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
    6e37:	00 
    6e38:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
    6e3f:	00 00 
    6e41:	0f 46 c1             	cmovbe %ecx,%eax
    6e44:	88 45 00             	mov    %al,0x0(%rbp)
    6e47:	4c 89 f0             	mov    %r14,%rax
    6e4a:	48 29 e8             	sub    %rbp,%rax
    6e4d:	49 89 c3             	mov    %rax,%r11
    6e50:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    6e55:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    6e5a:	e8 11 e6 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    6e5f:	85 c0                	test   %eax,%eax
    6e61:	74 13                	je     6e76 <mbedtls_mpi_write_string+0x266>
    6e63:	4c 39 fd             	cmp    %r15,%rbp
    6e66:	0f 85 74 ff ff ff    	jne    6de0 <mbedtls_mpi_write_string+0x1d0>
    6e6c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    6e71:	e9 fe fe ff ff       	jmpq   6d74 <mbedtls_mpi_write_string+0x164>
    6e76:	4d 89 de             	mov    %r11,%r14
    6e79:	4c 89 ff             	mov    %r15,%rdi
    6e7c:	4c 89 da             	mov    %r11,%rdx
    6e7f:	48 89 ee             	mov    %rbp,%rsi
    6e82:	e8 d9 d4 ff ff       	callq  4360 <memmove@plt>
    6e87:	4d 01 f7             	add    %r14,%r15
    6e8a:	e9 d0 fe ff ff       	jmpq   6d5f <mbedtls_mpi_write_string+0x14f>
    6e8f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    6e94:	e9 eb fe ff ff       	jmpq   6d84 <mbedtls_mpi_write_string+0x174>
    6e99:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    6e9e:	48 89 03             	mov    %rax,(%rbx)
    6ea1:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    6ea6:	e9 d9 fe ff ff       	jmpq   6d84 <mbedtls_mpi_write_string+0x174>
    6eab:	e8 c0 d3 ff ff       	callq  4270 <__stack_chk_fail@plt>

0000000000006eb0 <mbedtls_mpi_write_file>:
    6eb0:	f3 0f 1e fa          	endbr64 
    6eb4:	41 57                	push   %r15
    6eb6:	41 56                	push   %r14
    6eb8:	41 55                	push   %r13
    6eba:	41 54                	push   %r12
    6ebc:	55                   	push   %rbp
    6ebd:	53                   	push   %rbx
    6ebe:	48 81 ec d8 09 00 00 	sub    $0x9d8,%rsp
    6ec5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6ecc:	00 00 
    6ece:	48 89 84 24 c8 09 00 	mov    %rax,0x9c8(%rsp)
    6ed5:	00 
    6ed6:	31 c0                	xor    %eax,%eax
    6ed8:	8d 42 fe             	lea    -0x2(%rdx),%eax
    6edb:	83 f8 0e             	cmp    $0xe,%eax
    6ede:	0f 87 3c 01 00 00    	ja     7020 <mbedtls_mpi_write_file+0x170>
    6ee4:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    6ee9:	31 c0                	xor    %eax,%eax
    6eeb:	49 89 fe             	mov    %rdi,%r14
    6eee:	49 89 cc             	mov    %rcx,%r12
    6ef1:	48 89 ef             	mov    %rbp,%rdi
    6ef4:	b9 36 01 00 00       	mov    $0x136,%ecx
    6ef9:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
    6efe:	49 89 f1             	mov    %rsi,%r9
    6f01:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    6f04:	89 d6                	mov    %edx,%esi
    6f06:	b9 b2 09 00 00       	mov    $0x9b2,%ecx
    6f0b:	48 89 ea             	mov    %rbp,%rdx
    6f0e:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    6f14:	4c 89 cf             	mov    %r9,%rdi
    6f17:	e8 f4 fc ff ff       	callq  6c10 <mbedtls_mpi_write_string>
    6f1c:	41 89 c5             	mov    %eax,%r13d
    6f1f:	85 c0                	test   %eax,%eax
    6f21:	0f 85 91 00 00 00    	jne    6fb8 <mbedtls_mpi_write_file+0x108>
    6f27:	4d 85 f6             	test   %r14,%r14
    6f2a:	0f 84 b0 00 00 00    	je     6fe0 <mbedtls_mpi_write_file+0x130>
    6f30:	4c 89 f7             	mov    %r14,%rdi
    6f33:	e8 28 d3 ff ff       	callq  4260 <strlen@plt>
    6f38:	49 89 c7             	mov    %rax,%r15
    6f3b:	48 89 eb             	mov    %rbp,%rbx
    6f3e:	8b 13                	mov    (%rbx),%edx
    6f40:	48 83 c3 04          	add    $0x4,%rbx
    6f44:	8d 82 ff fe fe fe    	lea    -0x1010101(%rdx),%eax
    6f4a:	f7 d2                	not    %edx
    6f4c:	21 d0                	and    %edx,%eax
    6f4e:	25 80 80 80 80       	and    $0x80808080,%eax
    6f53:	74 e9                	je     6f3e <mbedtls_mpi_write_file+0x8e>
    6f55:	89 c2                	mov    %eax,%edx
    6f57:	c1 ea 10             	shr    $0x10,%edx
    6f5a:	a9 80 80 00 00       	test   $0x8080,%eax
    6f5f:	0f 44 c2             	cmove  %edx,%eax
    6f62:	48 8d 53 02          	lea    0x2(%rbx),%rdx
    6f66:	48 0f 44 da          	cmove  %rdx,%rbx
    6f6a:	89 c1                	mov    %eax,%ecx
    6f6c:	00 c1                	add    %al,%cl
    6f6e:	48 83 db 03          	sbb    $0x3,%rbx
    6f72:	48 29 eb             	sub    %rbp,%rbx
    6f75:	c6 44 1c 10 0d       	movb   $0xd,0x10(%rsp,%rbx,1)
    6f7a:	c6 44 1c 11 0a       	movb   $0xa,0x11(%rsp,%rbx,1)
    6f7f:	4d 85 e4             	test   %r12,%r12
    6f82:	74 6c                	je     6ff0 <mbedtls_mpi_write_file+0x140>
    6f84:	4c 89 e1             	mov    %r12,%rcx
    6f87:	4c 89 fa             	mov    %r15,%rdx
    6f8a:	be 01 00 00 00       	mov    $0x1,%esi
    6f8f:	4c 89 f7             	mov    %r14,%rdi
    6f92:	e8 f9 d3 ff ff       	callq  4390 <fwrite@plt>
    6f97:	4c 39 f8             	cmp    %r15,%rax
    6f9a:	75 74                	jne    7010 <mbedtls_mpi_write_file+0x160>
    6f9c:	48 83 c3 02          	add    $0x2,%rbx
    6fa0:	4c 89 e1             	mov    %r12,%rcx
    6fa3:	be 01 00 00 00       	mov    $0x1,%esi
    6fa8:	48 89 ef             	mov    %rbp,%rdi
    6fab:	48 89 da             	mov    %rbx,%rdx
    6fae:	e8 dd d3 ff ff       	callq  4390 <fwrite@plt>
    6fb3:	48 39 d8             	cmp    %rbx,%rax
    6fb6:	75 58                	jne    7010 <mbedtls_mpi_write_file+0x160>
    6fb8:	48 8b 84 24 c8 09 00 	mov    0x9c8(%rsp),%rax
    6fbf:	00 
    6fc0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    6fc7:	00 00 
    6fc9:	75 5d                	jne    7028 <mbedtls_mpi_write_file+0x178>
    6fcb:	48 81 c4 d8 09 00 00 	add    $0x9d8,%rsp
    6fd2:	44 89 e8             	mov    %r13d,%eax
    6fd5:	5b                   	pop    %rbx
    6fd6:	5d                   	pop    %rbp
    6fd7:	41 5c                	pop    %r12
    6fd9:	41 5d                	pop    %r13
    6fdb:	41 5e                	pop    %r14
    6fdd:	41 5f                	pop    %r15
    6fdf:	c3                   	retq   
    6fe0:	45 31 ff             	xor    %r15d,%r15d
    6fe3:	4c 8d 35 2c 48 01 00 	lea    0x1482c(%rip),%r14        # 1b816 <small_prime+0x2b6>
    6fea:	e9 4c ff ff ff       	jmpq   6f3b <mbedtls_mpi_write_file+0x8b>
    6fef:	90                   	nop
    6ff0:	48 89 e9             	mov    %rbp,%rcx
    6ff3:	4c 89 f2             	mov    %r14,%rdx
    6ff6:	48 8d 35 a4 40 01 00 	lea    0x140a4(%rip),%rsi        # 1b0a1 <_IO_stdin_used+0xa1>
    6ffd:	31 c0                	xor    %eax,%eax
    6fff:	bf 01 00 00 00       	mov    $0x1,%edi
    7004:	e8 47 d3 ff ff       	callq  4350 <__printf_chk@plt>
    7009:	eb ad                	jmp    6fb8 <mbedtls_mpi_write_file+0x108>
    700b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7010:	41 bd fe ff ff ff    	mov    $0xfffffffe,%r13d
    7016:	eb a0                	jmp    6fb8 <mbedtls_mpi_write_file+0x108>
    7018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    701f:	00 
    7020:	41 bd fc ff ff ff    	mov    $0xfffffffc,%r13d
    7026:	eb 90                	jmp    6fb8 <mbedtls_mpi_write_file+0x108>
    7028:	e8 43 d2 ff ff       	callq  4270 <__stack_chk_fail@plt>
    702d:	0f 1f 00             	nopl   (%rax)

0000000000007030 <mpi_check_small_factors.part.0>:
    7030:	41 55                	push   %r13
    7032:	41 54                	push   %r12
    7034:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    703a:	55                   	push   %rbp
    703b:	48 89 fd             	mov    %rdi,%rbp
    703e:	53                   	push   %rbx
    703f:	48 8d 1d 1e 45 01 00 	lea    0x1451e(%rip),%rbx        # 1b564 <small_prime+0x4>
    7046:	48 83 ec 18          	sub    $0x18,%rsp
    704a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7051:	00 00 
    7053:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7058:	31 c0                	xor    %eax,%eax
    705a:	49 89 e5             	mov    %rsp,%r13
    705d:	eb 26                	jmp    7085 <mpi_check_small_factors.part.0+0x55>
    705f:	90                   	nop
    7060:	4c 89 e2             	mov    %r12,%rdx
    7063:	48 89 ee             	mov    %rbp,%rsi
    7066:	4c 89 ef             	mov    %r13,%rdi
    7069:	e8 f2 fa ff ff       	callq  6b60 <mbedtls_mpi_mod_int>
    706e:	85 c0                	test   %eax,%eax
    7070:	75 27                	jne    7099 <mpi_check_small_factors.part.0+0x69>
    7072:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7077:	74 3f                	je     70b8 <mpi_check_small_factors.part.0+0x88>
    7079:	4c 63 23             	movslq (%rbx),%r12
    707c:	48 83 c3 04          	add    $0x4,%rbx
    7080:	45 85 e4             	test   %r12d,%r12d
    7083:	7e 14                	jle    7099 <mpi_check_small_factors.part.0+0x69>
    7085:	4c 89 e6             	mov    %r12,%rsi
    7088:	48 89 ef             	mov    %rbp,%rdi
    708b:	e8 d0 e4 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    7090:	85 c0                	test   %eax,%eax
    7092:	7f cc                	jg     7060 <mpi_check_small_factors.part.0+0x30>
    7094:	b8 01 00 00 00       	mov    $0x1,%eax
    7099:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    709e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    70a5:	00 00 
    70a7:	75 16                	jne    70bf <mpi_check_small_factors.part.0+0x8f>
    70a9:	48 83 c4 18          	add    $0x18,%rsp
    70ad:	5b                   	pop    %rbx
    70ae:	5d                   	pop    %rbp
    70af:	41 5c                	pop    %r12
    70b1:	41 5d                	pop    %r13
    70b3:	c3                   	retq   
    70b4:	0f 1f 40 00          	nopl   0x0(%rax)
    70b8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    70bd:	eb da                	jmp    7099 <mpi_check_small_factors.part.0+0x69>
    70bf:	e8 ac d1 ff ff       	callq  4270 <__stack_chk_fail@plt>
    70c4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    70cb:	00 00 00 00 
    70cf:	90                   	nop

00000000000070d0 <mbedtls_mpi_exp_mod>:
    70d0:	f3 0f 1e fa          	endbr64 
    70d4:	41 57                	push   %r15
    70d6:	41 56                	push   %r14
    70d8:	41 55                	push   %r13
    70da:	49 89 d5             	mov    %rdx,%r13
    70dd:	41 54                	push   %r12
    70df:	55                   	push   %rbp
    70e0:	48 89 cd             	mov    %rcx,%rbp
    70e3:	53                   	push   %rbx
    70e4:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
    70eb:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    70f0:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
    70f7:	00 
    70f8:	48 89 cf             	mov    %rcx,%rdi
    70fb:	4c 8d b4 24 30 01 00 	lea    0x130(%rsp),%r14
    7102:	00 
    7103:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
    7108:	4c 89 fe             	mov    %r15,%rsi
    710b:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    7110:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7117:	00 00 
    7119:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
    7120:	00 
    7121:	31 c0                	xor    %eax,%eax
    7123:	4c 89 b4 24 20 01 00 	mov    %r14,0x120(%rsp)
    712a:	00 
    712b:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
    7132:	00 00 00 00 00 
    7137:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
    713e:	01 00 00 00 
    7142:	48 c7 84 24 18 01 00 	movq   $0x1,0x118(%rsp)
    7149:	00 01 00 00 00 
    714e:	e8 1d e3 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    7153:	85 c0                	test   %eax,%eax
    7155:	0f 8e b5 05 00 00    	jle    7710 <mbedtls_mpi_exp_mod+0x640>
    715b:	48 8b 45 10          	mov    0x10(%rbp),%rax
    715f:	48 8b 00             	mov    (%rax),%rax
    7162:	83 e0 01             	and    $0x1,%eax
    7165:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    716a:	49 89 c4             	mov    %rax,%r12
    716d:	0f 84 9d 05 00 00    	je     7710 <mbedtls_mpi_exp_mod+0x640>
    7173:	4c 89 fe             	mov    %r15,%rsi
    7176:	4c 89 ef             	mov    %r13,%rdi
    7179:	e8 f2 e2 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    717e:	85 c0                	test   %eax,%eax
    7180:	0f 88 8a 05 00 00    	js     7710 <mbedtls_mpi_exp_mod+0x640>
    7186:	49 8b 75 08          	mov    0x8(%r13),%rsi
    718a:	49 8b 7d 10          	mov    0x10(%r13),%rdi
    718e:	e8 ad 2d 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    7193:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    7199:	0f 87 71 05 00 00    	ja     7710 <mbedtls_mpi_exp_mod+0x640>
    719f:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    71a3:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    71a7:	e8 94 2d 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    71ac:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    71b2:	0f 87 58 05 00 00    	ja     7710 <mbedtls_mpi_exp_mod+0x640>
    71b8:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    71bc:	bb 02 00 00 00       	mov    $0x2,%ebx
    71c1:	e8 ba 35 00 00       	callq  a780 <mbedtls_mpi_core_montmul_init>
    71c6:	b9 0c 00 00 00       	mov    $0xc,%ecx
    71cb:	4c 89 f7             	mov    %r14,%rdi
    71ce:	49 8b 75 08          	mov    0x8(%r13),%rsi
    71d2:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    71d7:	31 c0                	xor    %eax,%eax
    71d9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    71dc:	49 8b 7d 10          	mov    0x10(%r13),%rdi
    71e0:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
    71e7:	01 00 00 00 
    71eb:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
    71f2:	00 00 00 00 00 
    71f7:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
    71fe:	00 00 00 00 00 
    7203:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
    720a:	01 00 00 00 
    720e:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
    7215:	00 00 00 00 00 
    721a:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
    7221:	00 00 00 00 00 
    7226:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
    722d:	01 00 00 00 
    7231:	48 c7 84 24 18 01 00 	movq   $0x0,0x118(%rsp)
    7238:	00 00 00 00 00 
    723d:	48 c7 84 24 20 01 00 	movq   $0x0,0x120(%rsp)
    7244:	00 00 00 00 00 
    7249:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
    7250:	01 00 00 00 
    7254:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
    725b:	00 00 00 00 00 
    7260:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
    7267:	00 00 00 00 00 
    726c:	e8 cf 2c 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    7271:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    7276:	4c 89 f7             	mov    %r14,%rdi
    7279:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
    7280:	01 00 00 00 
    7284:	48 c7 84 24 38 01 00 	movq   $0x0,0x138(%rsp)
    728b:	00 00 00 00 00 
    7290:	48 83 f8 17          	cmp    $0x17,%rax
    7294:	48 c7 84 24 40 01 00 	movq   $0x0,0x140(%rsp)
    729b:	00 00 00 00 00 
    72a0:	49 0f 46 dc          	cmovbe %r12,%rbx
    72a4:	48 83 f8 18          	cmp    $0x18,%rax
    72a8:	19 d2                	sbb    %edx,%edx
    72aa:	83 c2 02             	add    $0x2,%edx
    72ad:	48 83 f8 18          	cmp    $0x18,%rax
    72b1:	4d 19 e4             	sbb    %r12,%r12
    72b4:	89 54 24 58          	mov    %edx,0x58(%rsp)
    72b8:	e8 63 db ff ff       	callq  4e20 <mbedtls_mpi_copy>
    72bd:	48 8b 45 08          	mov    0x8(%rbp),%rax
    72c1:	4c 89 f7             	mov    %r14,%rdi
    72c4:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
    72c8:	49 83 c4 04          	add    $0x4,%r12
    72cc:	48 8d 70 01          	lea    0x1(%rax),%rsi
    72d0:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    72d5:	e8 16 d9 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    72da:	89 04 24             	mov    %eax,(%rsp)
    72dd:	85 c0                	test   %eax,%eax
    72df:	0f 84 bb 00 00 00    	je     73a0 <mbedtls_mpi_exp_mod+0x2d0>
    72e5:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
    72ec:	00 
    72ed:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    72f2:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    72f9:	00 
    72fa:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    72ff:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    7306:	00 
    7307:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    730c:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
    7310:	49 8d 2c c6          	lea    (%r14,%rax,8),%rbp
    7314:	48 89 ef             	mov    %rbp,%rdi
    7317:	48 83 c3 01          	add    $0x1,%rbx
    731b:	48 83 c5 18          	add    $0x18,%rbp
    731f:	e8 6c d8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    7324:	4c 39 e3             	cmp    %r12,%rbx
    7327:	72 eb                	jb     7314 <mbedtls_mpi_exp_mod+0x244>
    7329:	4c 89 f7             	mov    %r14,%rdi
    732c:	e8 5f d8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    7331:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    7336:	e8 55 d8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    733b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    7340:	e8 4b d8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    7345:	4c 89 ff             	mov    %r15,%rdi
    7348:	e8 43 d8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    734d:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    7352:	e8 39 d8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    7357:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    735c:	48 85 c0             	test   %rax,%rax
    735f:	0f 84 8b 00 00 00    	je     73f0 <mbedtls_mpi_exp_mod+0x320>
    7365:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    736a:	0f 84 80 00 00 00    	je     73f0 <mbedtls_mpi_exp_mod+0x320>
    7370:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
    7377:	00 
    7378:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    737f:	00 00 
    7381:	0f 85 de 07 00 00    	jne    7b65 <mbedtls_mpi_exp_mod+0xa95>
    7387:	8b 04 24             	mov    (%rsp),%eax
    738a:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
    7391:	5b                   	pop    %rbx
    7392:	5d                   	pop    %rbp
    7393:	41 5c                	pop    %r12
    7395:	41 5d                	pop    %r13
    7397:	41 5e                	pop    %r14
    7399:	41 5f                	pop    %r15
    739b:	c3                   	retq   
    739c:	0f 1f 40 00          	nopl   0x0(%rax)
    73a0:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    73a5:	48 8d bc 24 48 01 00 	lea    0x148(%rsp),%rdi
    73ac:	00 
    73ad:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    73b2:	e8 39 d8 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    73b7:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    73bc:	85 c0                	test   %eax,%eax
    73be:	89 04 24             	mov    %eax,(%rsp)
    73c1:	74 45                	je     7408 <mbedtls_mpi_exp_mod+0x338>
    73c3:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    73ca:	00 
    73cb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    73d0:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    73d7:	00 
    73d8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    73dd:	4c 39 e3             	cmp    %r12,%rbx
    73e0:	0f 83 43 ff ff ff    	jae    7329 <mbedtls_mpi_exp_mod+0x259>
    73e6:	e9 21 ff ff ff       	jmpq   730c <mbedtls_mpi_exp_mod+0x23c>
    73eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    73f0:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
    73f7:	00 
    73f8:	e8 93 d7 ff ff       	callq  4b90 <mbedtls_mpi_free>
    73fd:	e9 6e ff ff ff       	jmpq   7370 <mbedtls_mpi_exp_mod+0x2a0>
    7402:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7408:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    740f:	00 
    7410:	48 01 f6             	add    %rsi,%rsi
    7413:	48 89 c7             	mov    %rax,%rdi
    7416:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    741b:	e8 d0 d7 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    7420:	89 04 24             	mov    %eax,(%rsp)
    7423:	85 c0                	test   %eax,%eax
    7425:	0f 85 2d 02 00 00    	jne    7658 <mbedtls_mpi_exp_mod+0x588>
    742b:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    7430:	8b 00                	mov    (%rax),%eax
    7432:	89 44 24 64          	mov    %eax,0x64(%rsp)
    7436:	83 f8 ff             	cmp    $0xffffffff,%eax
    7439:	0f 84 fe 02 00 00    	je     773d <mbedtls_mpi_exp_mod+0x66d>
    743f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    7444:	48 85 c0             	test   %rax,%rax
    7447:	0f 84 23 02 00 00    	je     7670 <mbedtls_mpi_exp_mod+0x5a0>
    744d:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    7452:	0f 84 18 02 00 00    	je     7670 <mbedtls_mpi_exp_mod+0x5a0>
    7458:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    745d:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    7461:	48 8b 40 10          	mov    0x10(%rax),%rax
    7465:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    746c:	00 
    746d:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7471:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
    7478:	00 
    7479:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    747e:	48 89 ee             	mov    %rbp,%rsi
    7481:	e8 ea df ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    7486:	85 c0                	test   %eax,%eax
    7488:	0f 88 aa 01 00 00    	js     7638 <mbedtls_mpi_exp_mod+0x568>
    748e:	48 89 fe             	mov    %rdi,%rsi
    7491:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    7496:	48 89 ea             	mov    %rbp,%rdx
    7499:	e8 82 f5 ff ff       	callq  6a20 <mbedtls_mpi_mod_mpi>
    749e:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
    74a5:	00 
    74a6:	89 04 24             	mov    %eax,(%rsp)
    74a9:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    74ae:	85 c0                	test   %eax,%eax
    74b0:	0f 85 27 ff ff ff    	jne    73dd <mbedtls_mpi_exp_mod+0x30d>
    74b6:	48 8b 45 08          	mov    0x8(%rbp),%rax
    74ba:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    74bf:	48 8d 70 01          	lea    0x1(%rax),%rsi
    74c3:	e8 28 d7 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    74c8:	89 04 24             	mov    %eax,(%rsp)
    74cb:	85 c0                	test   %eax,%eax
    74cd:	0f 85 0a ff ff ff    	jne    73dd <mbedtls_mpi_exp_mod+0x30d>
    74d3:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
    74da:	00 
    74db:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    74e2:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    74e6:	ff 74 24 58          	pushq  0x58(%rsp)
    74ea:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
    74f1:	00 
    74f2:	48 89 fe             	mov    %rdi,%rsi
    74f5:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
    74fc:	00 
    74fd:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    7501:	e8 ba 32 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    7506:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
    750d:	00 
    750e:	4c 89 f7             	mov    %r14,%rdi
    7511:	e8 0a d9 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7516:	89 44 24 10          	mov    %eax,0x10(%rsp)
    751a:	41 5b                	pop    %r11
    751c:	5a                   	pop    %rdx
    751d:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
    7524:	00 
    7525:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    752a:	85 c0                	test   %eax,%eax
    752c:	0f 85 ab fe ff ff    	jne    73dd <mbedtls_mpi_exp_mod+0x30d>
    7532:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
    7539:	00 
    753a:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    7541:	00 
    7542:	b9 01 00 00 00       	mov    $0x1,%ecx
    7547:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
    754e:	00 01 00 00 00 
    7553:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    755a:	00 
    755b:	48 89 c2             	mov    %rax,%rdx
    755e:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    7565:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    7569:	48 89 fe             	mov    %rdi,%rsi
    756c:	ff 74 24 58          	pushq  0x58(%rsp)
    7570:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    7574:	e8 47 32 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    7579:	41 59                	pop    %r9
    757b:	41 5a                	pop    %r10
    757d:	48 83 fb 02          	cmp    $0x2,%rbx
    7581:	0f 84 4f 03 00 00    	je     78d6 <mbedtls_mpi_exp_mod+0x806>
    7587:	49 8b 45 08          	mov    0x8(%r13),%rax
    758b:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
    7592:	00 
    7593:	31 c9                	xor    %ecx,%ecx
    7595:	31 d2                	xor    %edx,%edx
    7597:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    759e:	00 00 
    75a0:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    75a5:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    75ac:	00 
    75ad:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    75b4:	00 00 
    75b6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    75bb:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    75c0:	48 89 cb             	mov    %rcx,%rbx
    75c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    75c8:	48 85 db             	test   %rbx,%rbx
    75cb:	0f 84 4b 01 00 00    	je     771c <mbedtls_mpi_exp_mod+0x64c>
    75d1:	48 83 eb 01          	sub    $0x1,%rbx
    75d5:	89 d9                	mov    %ebx,%ecx
    75d7:	49 8b 45 10          	mov    0x10(%r13),%rax
    75db:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    75e0:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
    75e4:	48 d3 e8             	shr    %cl,%rax
    75e7:	48 89 d1             	mov    %rdx,%rcx
    75ea:	83 e0 01             	and    $0x1,%eax
    75ed:	48 09 c1             	or     %rax,%rcx
    75f0:	0f 84 98 02 00 00    	je     788e <mbedtls_mpi_exp_mod+0x7be>
    75f6:	48 85 c0             	test   %rax,%rax
    75f9:	0f 85 6b 01 00 00    	jne    776a <mbedtls_mpi_exp_mod+0x69a>
    75ff:	48 83 fa 01          	cmp    $0x1,%rdx
    7603:	0f 85 61 01 00 00    	jne    776a <mbedtls_mpi_exp_mod+0x69a>
    7609:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    760e:	31 c9                	xor    %ecx,%ecx
    7610:	4c 89 e2             	mov    %r12,%rdx
    7613:	4c 89 f6             	mov    %r14,%rsi
    7616:	e8 f5 d4 ff ff       	callq  4b10 <mpi_select>
    761b:	85 c0                	test   %eax,%eax
    761d:	0f 84 72 02 00 00    	je     7895 <mbedtls_mpi_exp_mod+0x7c5>
    7623:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    7628:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    762f:	00 
    7630:	89 04 24             	mov    %eax,(%rsp)
    7633:	e9 a5 fd ff ff       	jmpq   73dd <mbedtls_mpi_exp_mod+0x30d>
    7638:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    763d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    7642:	e8 d9 d7 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7647:	89 04 24             	mov    %eax,(%rsp)
    764a:	85 c0                	test   %eax,%eax
    764c:	0f 84 81 fe ff ff    	je     74d3 <mbedtls_mpi_exp_mod+0x403>
    7652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7658:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    765f:	00 
    7660:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    7665:	e9 73 fd ff ff       	jmpq   73dd <mbedtls_mpi_exp_mod+0x30d>
    766a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7670:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
    7677:	00 
    7678:	be 01 00 00 00       	mov    $0x1,%esi
    767d:	48 89 cf             	mov    %rcx,%rdi
    7680:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    7685:	e8 06 d9 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    768a:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
    7691:	00 
    7692:	89 04 24             	mov    %eax,(%rsp)
    7695:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    769a:	85 c0                	test   %eax,%eax
    769c:	0f 85 3b fd ff ff    	jne    73dd <mbedtls_mpi_exp_mod+0x30d>
    76a2:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    76a6:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    76ab:	48 c1 e6 07          	shl    $0x7,%rsi
    76af:	48 89 cf             	mov    %rcx,%rdi
    76b2:	e8 99 db ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    76b7:	89 04 24             	mov    %eax,(%rsp)
    76ba:	85 c0                	test   %eax,%eax
    76bc:	0f 85 1b fd ff ff    	jne    73dd <mbedtls_mpi_exp_mod+0x30d>
    76c2:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    76c7:	48 89 ea             	mov    %rbp,%rdx
    76ca:	48 89 ce             	mov    %rcx,%rsi
    76cd:	48 89 cf             	mov    %rcx,%rdi
    76d0:	e8 4b f3 ff ff       	callq  6a20 <mbedtls_mpi_mod_mpi>
    76d5:	89 04 24             	mov    %eax,(%rsp)
    76d8:	85 c0                	test   %eax,%eax
    76da:	0f 85 fd fc ff ff    	jne    73dd <mbedtls_mpi_exp_mod+0x30d>
    76e0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    76e5:	48 85 d2             	test   %rdx,%rdx
    76e8:	0f 84 8b fd ff ff    	je     7479 <mbedtls_mpi_exp_mod+0x3a9>
    76ee:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    76f3:	66 0f 6f 11          	movdqa (%rcx),%xmm2
    76f7:	48 8b 41 10          	mov    0x10(%rcx),%rax
    76fb:	0f 11 12             	movups %xmm2,(%rdx)
    76fe:	48 89 42 10          	mov    %rax,0x10(%rdx)
    7702:	e9 72 fd ff ff       	jmpq   7479 <mbedtls_mpi_exp_mod+0x3a9>
    7707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    770e:	00 00 
    7710:	c7 04 24 fc ff ff ff 	movl   $0xfffffffc,(%rsp)
    7717:	e9 54 fc ff ff       	jmpq   7370 <mbedtls_mpi_exp_mod+0x2a0>
    771c:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
    7722:	0f 84 eb 01 00 00    	je     7913 <mbedtls_mpi_exp_mod+0x843>
    7728:	48 83 6c 24 68 01    	subq   $0x1,0x68(%rsp)
    772e:	bb 3f 00 00 00       	mov    $0x3f,%ebx
    7733:	b9 3f 00 00 00       	mov    $0x3f,%ecx
    7738:	e9 9a fe ff ff       	jmpq   75d7 <mbedtls_mpi_exp_mod+0x507>
    773d:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    7742:	4c 89 ff             	mov    %r15,%rdi
    7745:	e8 d6 d6 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    774a:	89 04 24             	mov    %eax,(%rsp)
    774d:	85 c0                	test   %eax,%eax
    774f:	0f 85 03 ff ff ff    	jne    7658 <mbedtls_mpi_exp_mod+0x588>
    7755:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
    775c:	01 00 00 00 
    7760:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
    7765:	e9 d5 fc ff ff       	jmpq   743f <mbedtls_mpi_exp_mod+0x36f>
    776a:	48 83 44 24 40 01    	addq   $0x1,0x40(%rsp)
    7770:	8b 4c 24 58          	mov    0x58(%rsp),%ecx
    7774:	ba 02 00 00 00       	mov    $0x2,%edx
    7779:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    777e:	29 f1                	sub    %esi,%ecx
    7780:	48 d3 e0             	shl    %cl,%rax
    7783:	48 09 44 24 78       	or     %rax,0x78(%rsp)
    7788:	48 39 74 24 70       	cmp    %rsi,0x70(%rsp)
    778d:	0f 85 35 fe ff ff    	jne    75c8 <mbedtls_mpi_exp_mod+0x4f8>
    7793:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
    779a:	00 
    779b:	45 31 ff             	xor    %r15d,%r15d
    779e:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    77a3:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
    77aa:	00 
    77ab:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
    77b0:	eb 05                	jmp    77b7 <mbedtls_mpi_exp_mod+0x6e7>
    77b2:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    77b7:	31 c9                	xor    %ecx,%ecx
    77b9:	4c 89 e2             	mov    %r12,%rdx
    77bc:	4c 89 f6             	mov    %r14,%rsi
    77bf:	48 89 df             	mov    %rbx,%rdi
    77c2:	e8 49 d3 ff ff       	callq  4b10 <mpi_select>
    77c7:	85 c0                	test   %eax,%eax
    77c9:	0f 85 54 fe ff ff    	jne    7623 <mbedtls_mpi_exp_mod+0x553>
    77cf:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    77d6:	00 
    77d7:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    77de:	49 83 c7 01          	add    $0x1,%r15
    77e2:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    77e6:	41 55                	push   %r13
    77e8:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    77ef:	00 
    77f0:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    77f7:	00 
    77f8:	48 89 fe             	mov    %rdi,%rsi
    77fb:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    77ff:	e8 bc 2f 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    7804:	41 59                	pop    %r9
    7806:	41 5a                	pop    %r10
    7808:	4c 39 7c 24 40       	cmp    %r15,0x40(%rsp)
    780d:	77 a3                	ja     77b2 <mbedtls_mpi_exp_mod+0x6e2>
    780f:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    7814:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    7819:	4c 89 e2             	mov    %r12,%rdx
    781c:	4c 89 f6             	mov    %r14,%rsi
    781f:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
    7826:	00 
    7827:	4c 8b ac 24 98 00 00 	mov    0x98(%rsp),%r13
    782e:	00 
    782f:	e8 dc d2 ff ff       	callq  4b10 <mpi_select>
    7834:	85 c0                	test   %eax,%eax
    7836:	0f 85 e7 fd ff ff    	jne    7623 <mbedtls_mpi_exp_mod+0x553>
    783c:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    7843:	00 
    7844:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    784b:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    784f:	ff 74 24 58          	pushq  0x58(%rsp)
    7853:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    785a:	00 
    785b:	48 89 fe             	mov    %rdi,%rsi
    785e:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    7865:	00 
    7866:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    786a:	e8 51 2f 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    786f:	5f                   	pop    %rdi
    7870:	41 58                	pop    %r8
    7872:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    7879:	00 00 
    787b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    7880:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    7887:	00 00 
    7889:	e9 3a fd ff ff       	jmpq   75c8 <mbedtls_mpi_exp_mod+0x4f8>
    788e:	31 d2                	xor    %edx,%edx
    7890:	e9 33 fd ff ff       	jmpq   75c8 <mbedtls_mpi_exp_mod+0x4f8>
    7895:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    789c:	00 
    789d:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    78a4:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    78a8:	ff 74 24 58          	pushq  0x58(%rsp)
    78ac:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    78b3:	00 
    78b4:	48 89 fe             	mov    %rdi,%rsi
    78b7:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    78be:	00 
    78bf:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    78c3:	e8 f8 2e 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    78c8:	41 5b                	pop    %r11
    78ca:	41 5f                	pop    %r15
    78cc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    78d1:	e9 f2 fc ff ff       	jmpq   75c8 <mbedtls_mpi_exp_mod+0x4f8>
    78d6:	48 8b 45 08          	mov    0x8(%rbp),%rax
    78da:	48 8d bc 24 60 01 00 	lea    0x160(%rsp),%rdi
    78e1:	00 
    78e2:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
    78e7:	48 8d 70 01          	lea    0x1(%rax),%rsi
    78eb:	e8 00 d3 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    78f0:	85 c0                	test   %eax,%eax
    78f2:	75 17                	jne    790b <mbedtls_mpi_exp_mod+0x83b>
    78f4:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    78f9:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    78fe:	e8 1d d5 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7903:	85 c0                	test   %eax,%eax
    7905:	0f 84 83 01 00 00    	je     7a8e <mbedtls_mpi_exp_mod+0x9be>
    790b:	89 04 24             	mov    %eax,(%rsp)
    790e:	e9 ca fa ff ff       	jmpq   73dd <mbedtls_mpi_exp_mod+0x30d>
    7913:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    7919:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    791e:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    7925:	00 
    7926:	0f 84 f7 00 00 00    	je     7a23 <mbedtls_mpi_exp_mod+0x953>
    792c:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    7931:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    7936:	4c 89 7c 24 58       	mov    %r15,0x58(%rsp)
    793b:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    7940:	4c 89 6c 24 68       	mov    %r13,0x68(%rsp)
    7945:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
    794a:	eb 13                	jmp    795f <mbedtls_mpi_exp_mod+0x88f>
    794c:	0f 1f 40 00          	nopl   0x0(%rax)
    7950:	48 83 c3 01          	add    $0x1,%rbx
    7954:	48 39 5c 24 40       	cmp    %rbx,0x40(%rsp)
    7959:	0f 84 b5 00 00 00    	je     7a14 <mbedtls_mpi_exp_mod+0x944>
    795f:	31 c9                	xor    %ecx,%ecx
    7961:	4c 89 e2             	mov    %r12,%rdx
    7964:	4c 89 f6             	mov    %r14,%rsi
    7967:	4c 89 ff             	mov    %r15,%rdi
    796a:	e8 a1 d1 ff ff       	callq  4b10 <mpi_select>
    796f:	85 c0                	test   %eax,%eax
    7971:	0f 85 8e 00 00 00    	jne    7a05 <mbedtls_mpi_exp_mod+0x935>
    7977:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    797e:	00 
    797f:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    7986:	4d 01 ed             	add    %r13,%r13
    7989:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    798d:	ff 74 24 58          	pushq  0x58(%rsp)
    7991:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    7998:	00 
    7999:	48 89 fe             	mov    %rdi,%rsi
    799c:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    79a3:	00 
    79a4:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    79a8:	e8 13 2e 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    79ad:	59                   	pop    %rcx
    79ae:	5e                   	pop    %rsi
    79af:	4d 85 e5             	test   %r12,%r13
    79b2:	74 9c                	je     7950 <mbedtls_mpi_exp_mod+0x880>
    79b4:	b9 01 00 00 00       	mov    $0x1,%ecx
    79b9:	4c 89 e2             	mov    %r12,%rdx
    79bc:	4c 89 f6             	mov    %r14,%rsi
    79bf:	4c 89 ff             	mov    %r15,%rdi
    79c2:	e8 49 d1 ff ff       	callq  4b10 <mpi_select>
    79c7:	85 c0                	test   %eax,%eax
    79c9:	75 3a                	jne    7a05 <mbedtls_mpi_exp_mod+0x935>
    79cb:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    79d2:	00 
    79d3:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    79da:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    79de:	ff 74 24 58          	pushq  0x58(%rsp)
    79e2:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
    79e9:	00 
    79ea:	48 89 fe             	mov    %rdi,%rsi
    79ed:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
    79f4:	00 
    79f5:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    79f9:	e8 c2 2d 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    79fe:	58                   	pop    %rax
    79ff:	5a                   	pop    %rdx
    7a00:	e9 4b ff ff ff       	jmpq   7950 <mbedtls_mpi_exp_mod+0x880>
    7a05:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    7a0a:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
    7a0f:	e9 f7 fe ff ff       	jmpq   790b <mbedtls_mpi_exp_mod+0x83b>
    7a14:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    7a19:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
    7a1e:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
    7a23:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    7a2a:	00 
    7a2b:	b9 01 00 00 00       	mov    $0x1,%ecx
    7a30:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
    7a37:	00 01 00 00 00 
    7a3c:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    7a43:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    7a47:	ff 74 24 58          	pushq  0x58(%rsp)
    7a4b:	48 89 fe             	mov    %rdi,%rsi
    7a4e:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    7a55:	00 
    7a56:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    7a5a:	e8 61 2d 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    7a5f:	58                   	pop    %rax
    7a60:	5a                   	pop    %rdx
    7a61:	83 7c 24 64 ff       	cmpl   $0xffffffff,0x64(%rsp)
    7a66:	75 14                	jne    7a7c <mbedtls_mpi_exp_mod+0x9ac>
    7a68:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
    7a6d:	74 0d                	je     7a7c <mbedtls_mpi_exp_mod+0x9ac>
    7a6f:	49 8b 45 10          	mov    0x10(%r13),%rax
    7a73:	f6 00 01             	testb  $0x1,(%rax)
    7a76:	0f 85 fb 00 00 00    	jne    7b77 <mbedtls_mpi_exp_mod+0xaa7>
    7a7c:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    7a81:	4c 89 f6             	mov    %r14,%rsi
    7a84:	e8 97 d3 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7a89:	e9 4f f9 ff ff       	jmpq   73dd <mbedtls_mpi_exp_mod+0x30d>
    7a8e:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
    7a95:	00 
    7a96:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    7a9d:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    7aa1:	ff 74 24 58          	pushq  0x58(%rsp)
    7aa5:	48 8b 8c 24 78 01 00 	mov    0x178(%rsp),%rcx
    7aac:	00 
    7aad:	48 89 fa             	mov    %rdi,%rdx
    7ab0:	48 89 fe             	mov    %rdi,%rsi
    7ab3:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
    7ab7:	e8 04 2d 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    7abc:	5f                   	pop    %rdi
    7abd:	41 58                	pop    %r8
    7abf:	49 83 fc 04          	cmp    $0x4,%r12
    7ac3:	0f 85 be fa ff ff    	jne    7587 <mbedtls_mpi_exp_mod+0x4b7>
    7ac9:	4c 8d 94 24 78 01 00 	lea    0x178(%rsp),%r10
    7ad0:	00 
    7ad1:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
    7ad8:	00 
    7ad9:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
    7ade:	48 89 eb             	mov    %rbp,%rbx
    7ae1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    7ae6:	4c 89 d5             	mov    %r10,%rbp
    7ae9:	eb 4c                	jmp    7b37 <mbedtls_mpi_exp_mod+0xa67>
    7aeb:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
    7aef:	48 89 ef             	mov    %rbp,%rdi
    7af2:	e8 29 d3 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7af7:	85 c0                	test   %eax,%eax
    7af9:	75 50                	jne    7b4b <mbedtls_mpi_exp_mod+0xa7b>
    7afb:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    7aff:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
    7b06:	48 83 c5 18          	add    $0x18,%rbp
    7b0a:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    7b0e:	ff 74 24 58          	pushq  0x58(%rsp)
    7b12:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
    7b19:	00 
    7b1a:	48 89 fe             	mov    %rdi,%rsi
    7b1d:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
    7b24:	00 
    7b25:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
    7b29:	e8 92 2c 00 00       	callq  a7c0 <mbedtls_mpi_core_montmul>
    7b2e:	59                   	pop    %rcx
    7b2f:	5e                   	pop    %rsi
    7b30:	48 39 6c 24 40       	cmp    %rbp,0x40(%rsp)
    7b35:	74 33                	je     7b6a <mbedtls_mpi_exp_mod+0xa9a>
    7b37:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7b3b:	48 89 ef             	mov    %rbp,%rdi
    7b3e:	48 8d 70 01          	lea    0x1(%rax),%rsi
    7b42:	e8 a9 d0 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    7b47:	85 c0                	test   %eax,%eax
    7b49:	74 a0                	je     7aeb <mbedtls_mpi_exp_mod+0xa1b>
    7b4b:	89 04 24             	mov    %eax,(%rsp)
    7b4e:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
    7b55:	00 
    7b56:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    7b5b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    7b60:	e9 a7 f7 ff ff       	jmpq   730c <mbedtls_mpi_exp_mod+0x23c>
    7b65:	e8 06 c7 ff ff       	callq  4270 <__stack_chk_fail@plt>
    7b6a:	48 89 dd             	mov    %rbx,%rbp
    7b6d:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    7b72:	e9 10 fa ff ff       	jmpq   7587 <mbedtls_mpi_exp_mod+0x4b7>
    7b77:	b9 01 00 00 00       	mov    $0x1,%ecx
    7b7c:	4c 89 f2             	mov    %r14,%rdx
    7b7f:	48 89 ee             	mov    %rbp,%rsi
    7b82:	4c 89 f7             	mov    %r14,%rdi
    7b85:	c7 84 24 30 01 00 00 	movl   $0xffffffff,0x130(%rsp)
    7b8c:	ff ff ff ff 
    7b90:	e8 7b dc ff ff       	callq  5810 <add_sub_mpi>
    7b95:	85 c0                	test   %eax,%eax
    7b97:	0f 84 df fe ff ff    	je     7a7c <mbedtls_mpi_exp_mod+0x9ac>
    7b9d:	e9 69 fd ff ff       	jmpq   790b <mbedtls_mpi_exp_mod+0x83b>
    7ba2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7ba9:	00 00 00 00 
    7bad:	0f 1f 00             	nopl   (%rax)

0000000000007bb0 <mbedtls_mpi_gcd>:
    7bb0:	e9 db 9f 02 00       	jmpq   31b90 <mbedtls_mpi_gcd.instr.bb_7bb0>
    7bb5:	e9 b8 a0 02 00       	jmpq   31c72 <instr.bb_7c24>
    7bba:	90                   	nop
    7bbb:	90                   	nop
    7bbc:	90                   	nop
    7bbd:	90                   	nop
    7bbe:	90                   	nop
    7bbf:	90                   	nop
    7bc0:	90                   	nop
    7bc1:	90                   	nop
    7bc2:	90                   	nop
    7bc3:	90                   	nop
    7bc4:	90                   	nop
    7bc5:	90                   	nop
    7bc6:	90                   	nop
    7bc7:	90                   	nop
    7bc8:	90                   	nop
    7bc9:	90                   	nop
    7bca:	90                   	nop
    7bcb:	90                   	nop
    7bcc:	90                   	nop
    7bcd:	90                   	nop
    7bce:	90                   	nop
    7bcf:	90                   	nop
    7bd0:	90                   	nop
    7bd1:	90                   	nop
    7bd2:	90                   	nop
    7bd3:	90                   	nop
    7bd4:	90                   	nop
    7bd5:	90                   	nop
    7bd6:	90                   	nop
    7bd7:	90                   	nop
    7bd8:	90                   	nop
    7bd9:	90                   	nop
    7bda:	90                   	nop
    7bdb:	90                   	nop
    7bdc:	90                   	nop
    7bdd:	90                   	nop
    7bde:	90                   	nop
    7bdf:	90                   	nop
    7be0:	90                   	nop
    7be1:	90                   	nop
    7be2:	90                   	nop
    7be3:	90                   	nop
    7be4:	90                   	nop
    7be5:	90                   	nop
    7be6:	90                   	nop
    7be7:	90                   	nop
    7be8:	90                   	nop
    7be9:	90                   	nop
    7bea:	90                   	nop
    7beb:	90                   	nop
    7bec:	90                   	nop
    7bed:	90                   	nop
    7bee:	90                   	nop
    7bef:	90                   	nop
    7bf0:	90                   	nop
    7bf1:	90                   	nop
    7bf2:	90                   	nop
    7bf3:	e9 fa a0 02 00       	jmpq   31cf2 <instr.bb_7c71>
    7bf8:	00 00                	add    %al,(%rax)
    7bfa:	00 48 c7             	add    %cl,-0x39(%rax)
    7bfd:	44 24 18             	rex.R and $0x18,%al
    7c00:	00 00                	add    %al,(%rax)
    7c02:	00 00                	add    %al,(%rax)
    7c04:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    7c0b:	00 00 
    7c0d:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    7c14:	00 00 
    7c16:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    7c1d:	00 00 
    7c1f:	e8 fc d1 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7c24:	eb 8f                	jmp    7bb5 <mbedtls_mpi_gcd+0x5>
    7c26:	74 3e                	je     7c66 <mbedtls_mpi_gcd+0xb6>
    7c28:	e9 4d a0 02 00       	jmpq   31c7a <instr.bb_7c28>
    7c2d:	24 0c                	and    $0xc,%al
    7c2f:	e8 5c cf ff ff       	callq  4b90 <mbedtls_mpi_free>
    7c34:	e9 4d a0 02 00       	jmpq   31c86 <instr.bb_7c34>
    7c39:	cf                   	iret   
    7c3a:	ff                   	(bad)  
    7c3b:	ff                   	(bad)  
    7c3c:	e9 4d a0 02 00       	jmpq   31c8e <instr.bb_7c3c>
    7c41:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7c48:	00 00 
    7c4a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    7c4e:	0f 85 90 02 00 00    	jne    7ee4 <mbedtls_mpi_gcd+0x334>
    7c54:	e9 4d a0 02 00       	jmpq   31ca6 <instr.bb_7c54>
    7c59:	00 00                	add    %al,(%rax)
    7c5b:	5b                   	pop    %rbx
    7c5c:	5d                   	pop    %rbp
    7c5d:	41 5c                	pop    %r12
    7c5f:	41 5d                	pop    %r13
    7c61:	41 5e                	pop    %r14
    7c63:	41 5f                	pop    %r15
    7c65:	c3                   	retq   
    7c66:	e9 4d a0 02 00       	jmpq   31cb8 <instr.bb_7c66>
    7c6b:	ef                   	out    %eax,(%dx)
    7c6c:	e8 af d1 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7c71:	eb 80                	jmp    7bf3 <mbedtls_mpi_gcd+0x43>
    7c73:	75 b3                	jne    7c28 <mbedtls_mpi_gcd+0x78>
    7c75:	e9 80 a0 02 00       	jmpq   31cfa <instr.bb_7c75>
    7c7a:	48 85 f6             	test   %rsi,%rsi
    7c7d:	0f 84 59 02 00 00    	je     7edc <mbedtls_mpi_gcd+0x32c>
    7c83:	e9 80 a0 02 00       	jmpq   31d08 <instr.bb_7c83>
    7c88:	45 31 e4             	xor    %r12d,%r12d
    7c8b:	31 c9                	xor    %ecx,%ecx
    7c8d:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
    7c91:	31 c0                	xor    %eax,%eax
    7c93:	eb 15                	jmp    7caa <mbedtls_mpi_gcd+0xfa>
    7c95:	0f 1f 00             	nopl   (%rax)
    7c98:	48 83 c0 01          	add    $0x1,%rax
    7c9c:	49 83 c4 01          	add    $0x1,%r12
    7ca0:	48 83 f8 40          	cmp    $0x40,%rax
    7ca4:	0f 84 25 02 00 00    	je     7ecf <mbedtls_mpi_gcd+0x31f>
    7caa:	48 0f a3 c2          	bt     %rax,%rdx
    7cae:	73 e8                	jae    7c98 <mbedtls_mpi_gcd+0xe8>
    7cb0:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    7cb5:	48 85 f6             	test   %rsi,%rsi
    7cb8:	0f 84 6e 01 00 00    	je     7e2c <mbedtls_mpi_gcd+0x27c>
    7cbe:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
    7cc3:	31 d2                	xor    %edx,%edx
    7cc5:	31 ff                	xor    %edi,%edi
    7cc7:	49 8b 0c f8          	mov    (%r8,%rdi,8),%rcx
    7ccb:	31 c0                	xor    %eax,%eax
    7ccd:	eb 13                	jmp    7ce2 <mbedtls_mpi_gcd+0x132>
    7ccf:	90                   	nop
    7cd0:	48 83 c0 01          	add    $0x1,%rax
    7cd4:	48 83 c2 01          	add    $0x1,%rdx
    7cd8:	48 83 f8 40          	cmp    $0x40,%rax
    7cdc:	0f 84 2a 01 00 00    	je     7e0c <mbedtls_mpi_gcd+0x25c>
    7ce2:	48 0f a3 c1          	bt     %rax,%rcx
    7ce6:	73 e8                	jae    7cd0 <mbedtls_mpi_gcd+0x120>
    7ce8:	48 85 d2             	test   %rdx,%rdx
    7ceb:	0f 84 28 01 00 00    	je     7e19 <mbedtls_mpi_gcd+0x269>
    7cf1:	49 39 d4             	cmp    %rdx,%r12
    7cf4:	4c 0f 47 e2          	cmova  %rdx,%r12
    7cf8:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    7cff:	00 
    7d00:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
    7d05:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
    7d0a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    7d11:	00 
    7d12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7d18:	48 89 de             	mov    %rbx,%rsi
    7d1b:	48 89 ef             	mov    %rbp,%rdi
    7d1e:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
    7d25:	00 00 
    7d27:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    7d2e:	00 
    7d2f:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
    7d36:	00 00 
    7d38:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
    7d3d:	e8 2e d7 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    7d42:	85 c0                	test   %eax,%eax
    7d44:	0f 84 62 01 00 00    	je     7eac <mbedtls_mpi_gcd+0x2fc>
    7d4a:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    7d4f:	4d 85 c0             	test   %r8,%r8
    7d52:	74 34                	je     7d88 <mbedtls_mpi_gcd+0x1d8>
    7d54:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    7d59:	31 d2                	xor    %edx,%edx
    7d5b:	31 f6                	xor    %esi,%esi
    7d5d:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
    7d61:	31 c0                	xor    %eax,%eax
    7d63:	eb 15                	jmp    7d7a <mbedtls_mpi_gcd+0x1ca>
    7d65:	0f 1f 00             	nopl   (%rax)
    7d68:	48 83 c0 01          	add    $0x1,%rax
    7d6c:	48 83 c2 01          	add    $0x1,%rdx
    7d70:	48 83 f8 40          	cmp    $0x40,%rax
    7d74:	0f 84 06 01 00 00    	je     7e80 <mbedtls_mpi_gcd+0x2d0>
    7d7a:	48 0f a3 c1          	bt     %rax,%rcx
    7d7e:	73 e8                	jae    7d68 <mbedtls_mpi_gcd+0x1b8>
    7d80:	4c 89 c6             	mov    %r8,%rsi
    7d83:	e8 d8 25 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    7d88:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
    7d8d:	4d 85 c0             	test   %r8,%r8
    7d90:	74 36                	je     7dc8 <mbedtls_mpi_gcd+0x218>
    7d92:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    7d97:	31 d2                	xor    %edx,%edx
    7d99:	31 f6                	xor    %esi,%esi
    7d9b:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
    7d9f:	31 c0                	xor    %eax,%eax
    7da1:	eb 17                	jmp    7dba <mbedtls_mpi_gcd+0x20a>
    7da3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7da8:	48 83 c0 01          	add    $0x1,%rax
    7dac:	48 83 c2 01          	add    $0x1,%rdx
    7db0:	48 83 f8 40          	cmp    $0x40,%rax
    7db4:	0f 84 de 00 00 00    	je     7e98 <mbedtls_mpi_gcd+0x2e8>
    7dba:	48 0f a3 c1          	bt     %rax,%rcx
    7dbe:	73 e8                	jae    7da8 <mbedtls_mpi_gcd+0x1f8>
    7dc0:	4c 89 c6             	mov    %r8,%rsi
    7dc3:	e8 98 25 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    7dc8:	4c 89 ee             	mov    %r13,%rsi
    7dcb:	48 89 ef             	mov    %rbp,%rdi
    7dce:	e8 9d d6 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    7dd3:	85 c0                	test   %eax,%eax
    7dd5:	78 69                	js     7e40 <mbedtls_mpi_gcd+0x290>
    7dd7:	4c 89 ea             	mov    %r13,%rdx
    7dda:	48 89 ee             	mov    %rbp,%rsi
    7ddd:	e8 ee d8 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    7de2:	85 c0                	test   %eax,%eax
    7de4:	0f 85 3e fe ff ff    	jne    7c28 <mbedtls_mpi_gcd+0x78>
    7dea:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    7def:	48 85 f6             	test   %rsi,%rsi
    7df2:	0f 84 20 ff ff ff    	je     7d18 <mbedtls_mpi_gcd+0x168>
    7df8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    7dfd:	ba 01 00 00 00       	mov    $0x1,%edx
    7e02:	e8 59 25 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    7e07:	e9 0c ff ff ff       	jmpq   7d18 <mbedtls_mpi_gcd+0x168>
    7e0c:	48 83 c7 01          	add    $0x1,%rdi
    7e10:	48 39 f7             	cmp    %rsi,%rdi
    7e13:	0f 85 ae fe ff ff    	jne    7cc7 <mbedtls_mpi_gcd+0x117>
    7e19:	48 c1 e6 06          	shl    $0x6,%rsi
    7e1d:	74 0d                	je     7e2c <mbedtls_mpi_gcd+0x27c>
    7e1f:	45 31 e4             	xor    %r12d,%r12d
    7e22:	41 f6 00 01          	testb  $0x1,(%r8)
    7e26:	0f 85 cc fe ff ff    	jne    7cf8 <mbedtls_mpi_gcd+0x148>
    7e2c:	4c 89 f6             	mov    %r14,%rsi
    7e2f:	4c 89 ff             	mov    %r15,%rdi
    7e32:	e8 e9 cf ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7e37:	e9 ec fd ff ff       	jmpq   7c28 <mbedtls_mpi_gcd+0x78>
    7e3c:	0f 1f 40 00          	nopl   0x0(%rax)
    7e40:	48 89 ea             	mov    %rbp,%rdx
    7e43:	4c 89 ee             	mov    %r13,%rsi
    7e46:	4c 89 ef             	mov    %r13,%rdi
    7e49:	e8 82 d8 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    7e4e:	85 c0                	test   %eax,%eax
    7e50:	0f 85 d2 fd ff ff    	jne    7c28 <mbedtls_mpi_gcd+0x78>
    7e56:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    7e5b:	48 85 f6             	test   %rsi,%rsi
    7e5e:	0f 84 b4 fe ff ff    	je     7d18 <mbedtls_mpi_gcd+0x168>
    7e64:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    7e69:	ba 01 00 00 00       	mov    $0x1,%edx
    7e6e:	e8 ed 24 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    7e73:	e9 a0 fe ff ff       	jmpq   7d18 <mbedtls_mpi_gcd+0x168>
    7e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7e7f:	00 
    7e80:	48 83 c6 01          	add    $0x1,%rsi
    7e84:	4c 39 c6             	cmp    %r8,%rsi
    7e87:	0f 85 d0 fe ff ff    	jne    7d5d <mbedtls_mpi_gcd+0x1ad>
    7e8d:	31 d2                	xor    %edx,%edx
    7e8f:	e9 ec fe ff ff       	jmpq   7d80 <mbedtls_mpi_gcd+0x1d0>
    7e94:	0f 1f 40 00          	nopl   0x0(%rax)
    7e98:	48 83 c6 01          	add    $0x1,%rsi
    7e9c:	4c 39 c6             	cmp    %r8,%rsi
    7e9f:	0f 85 f6 fe ff ff    	jne    7d9b <mbedtls_mpi_gcd+0x1eb>
    7ea5:	31 d2                	xor    %edx,%edx
    7ea7:	e9 14 ff ff ff       	jmpq   7dc0 <mbedtls_mpi_gcd+0x210>
    7eac:	e9 6f 9e 02 00       	jmpq   31d20 <instr.bb_7eac>
    7eb1:	ef                   	out    %eax,(%dx)
    7eb2:	e8 99 d3 ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    7eb7:	e9 6f 9e 02 00       	jmpq   31d2b <instr.bb_7eb7>
    7ebc:	fd                   	std    
    7ebd:	ff                   	(bad)  
    7ebe:	ff                   	(bad)  
    7ebf:	e9 6f 9e 02 00       	jmpq   31d33 <instr.bb_7ebf>
    7ec4:	ff                   	(bad)  
    7ec5:	e8 56 cf ff ff       	callq  4e20 <mbedtls_mpi_copy>
    7eca:	e9 9e 9e 02 00       	jmpq   31d6d <instr.bb_7eca>
    7ecf:	48 83 c1 01          	add    $0x1,%rcx
    7ed3:	48 39 f1             	cmp    %rsi,%rcx
    7ed6:	0f 85 b1 fd ff ff    	jne    7c8d <mbedtls_mpi_gcd+0xdd>
    7edc:	45 31 e4             	xor    %r12d,%r12d
    7edf:	e9 cc fd ff ff       	jmpq   7cb0 <mbedtls_mpi_gcd+0x100>
    7ee4:	e8 87 c3 ff ff       	callq  4270 <__stack_chk_fail@plt>
    7ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007ef0 <mbedtls_mpi_fill_random>:
    7ef0:	e9 8b 9e 02 00       	jmpq   31d80 <mbedtls_mpi_fill_random.instr.bb_7ef0>
    7ef5:	e9 14 9f 02 00       	jmpq   31e0e <instr.bb_7f24>
    7efa:	54                   	push   %rsp
    7efb:	49 89 f4             	mov    %rsi,%r12
    7efe:	55                   	push   %rbp
    7eff:	4c 89 e0             	mov    %r12,%rax
    7f02:	48 89 cd             	mov    %rcx,%rbp
    7f05:	53                   	push   %rbx
    7f06:	48 89 fb             	mov    %rdi,%rbx
    7f09:	48 83 ec 08          	sub    $0x8,%rsp
    7f0d:	83 e6 07             	and    $0x7,%esi
    7f10:	40 0f 95 c6          	setne  %sil
    7f14:	48 c1 e8 03          	shr    $0x3,%rax
    7f18:	40 0f b6 f6          	movzbl %sil,%esi
    7f1c:	48 01 c6             	add    %rax,%rsi
    7f1f:	e8 6c cd ff ff       	callq  4c90 <mbedtls_mpi_resize_clear>
    7f24:	eb cf                	jmp    7ef5 <mbedtls_mpi_fill_random+0x5>
    7f26:	75 05                	jne    7f2d <mbedtls_mpi_fill_random+0x3d>
    7f28:	e9 e9 9e 02 00       	jmpq   31e16 <instr.bb_7f28>
    7f2d:	e9 ed 9e 02 00       	jmpq   31e1f <instr.bb_7f2d>
    7f32:	5d                   	pop    %rbp
    7f33:	41 5c                	pop    %r12
    7f35:	41 5d                	pop    %r13
    7f37:	c3                   	retq   
    7f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7f3f:	00 
    7f40:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    7f44:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    7f48:	48 83 c4 08          	add    $0x8,%rsp
    7f4c:	49 89 e8             	mov    %rbp,%r8
    7f4f:	5b                   	pop    %rbx
    7f50:	4c 89 e9             	mov    %r13,%rcx
    7f53:	5d                   	pop    %rbp
    7f54:	4c 89 e2             	mov    %r12,%rdx
    7f57:	41 5c                	pop    %r12
    7f59:	41 5d                	pop    %r13
    7f5b:	e9 10 2a 00 00       	jmpq   a970 <mbedtls_mpi_core_fill_random>

0000000000007f60 <mpi_miller_rabin>:
    7f60:	41 57                	push   %r15
    7f62:	41 56                	push   %r14
    7f64:	49 89 fe             	mov    %rdi,%r14
    7f67:	41 55                	push   %r13
    7f69:	41 54                	push   %r12
    7f6b:	49 89 d4             	mov    %rdx,%r12
    7f6e:	55                   	push   %rbp
    7f6f:	53                   	push   %rbx
    7f70:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    7f77:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
    7f7c:	4c 8d 7c 24 60       	lea    0x60(%rsp),%r15
    7f81:	48 89 fe             	mov    %rdi,%rsi
    7f84:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    7f89:	4c 89 ff             	mov    %r15,%rdi
    7f8c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    7f91:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7f98:	00 00 
    7f9a:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    7fa1:	00 
    7fa2:	31 c0                	xor    %eax,%eax
    7fa4:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
    7fab:	00 
    7fac:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
    7fb3:	00 
    7fb4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    7fb9:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    7fc0:	00 
    7fc1:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    7fc8:	00 
    7fc9:	48 89 c2             	mov    %rax,%rdx
    7fcc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    7fd1:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
    7fd8:	00 00 
    7fda:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
    7fe1:	00 00 
    7fe3:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
    7fea:	01 00 00 00 
    7fee:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
    7ff5:	00 00 00 00 00 
    7ffa:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    8001:	00 00 00 00 00 
    8006:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
    800d:	01 00 00 00 
    8011:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
    8018:	00 00 00 00 00 
    801d:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
    8024:	00 00 00 00 00 
    8029:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
    8030:	01 00 00 00 
    8034:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
    803b:	00 00 00 00 00 
    8040:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
    8047:	00 00 00 00 00 
    804c:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
    8053:	01 00 00 00 
    8057:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
    805e:	00 00 00 00 00 
    8063:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
    806a:	00 00 00 00 00 
    806f:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    8076:	00 01 00 00 00 
    807b:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    8082:	01 00 00 00 
    8086:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    808d:	00 01 00 00 00 
    8092:	e8 79 d7 ff ff       	callq  5810 <add_sub_mpi>
    8097:	89 44 24 24          	mov    %eax,0x24(%rsp)
    809b:	85 c0                	test   %eax,%eax
    809d:	0f 85 25 02 00 00    	jne    82c8 <mpi_miller_rabin+0x368>
    80a3:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    80a8:	48 85 f6             	test   %rsi,%rsi
    80ab:	0f 84 ec 02 00 00    	je     839d <mpi_miller_rabin+0x43d>
    80b1:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
    80b6:	31 ed                	xor    %ebp,%ebp
    80b8:	31 c9                	xor    %ecx,%ecx
    80ba:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
    80be:	31 c0                	xor    %eax,%eax
    80c0:	eb 18                	jmp    80da <mpi_miller_rabin+0x17a>
    80c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    80c8:	48 83 c0 01          	add    $0x1,%rax
    80cc:	48 83 c5 01          	add    $0x1,%rbp
    80d0:	48 83 f8 40          	cmp    $0x40,%rax
    80d4:	0f 84 b6 02 00 00    	je     8390 <mpi_miller_rabin+0x430>
    80da:	48 0f a3 c2          	bt     %rax,%rdx
    80de:	73 e8                	jae    80c8 <mpi_miller_rabin+0x168>
    80e0:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    80e7:	00 
    80e8:	4c 89 fe             	mov    %r15,%rsi
    80eb:	48 89 c7             	mov    %rax,%rdi
    80ee:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    80f3:	e8 28 cd ff ff       	callq  4e20 <mbedtls_mpi_copy>
    80f8:	89 44 24 24          	mov    %eax,0x24(%rsp)
    80fc:	85 c0                	test   %eax,%eax
    80fe:	0f 85 d1 01 00 00    	jne    82d5 <mpi_miller_rabin+0x375>
    8104:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    810b:	00 
    810c:	48 85 f6             	test   %rsi,%rsi
    810f:	0f 85 93 02 00 00    	jne    83a8 <mpi_miller_rabin+0x448>
    8115:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    811b:	0f 84 b4 01 00 00    	je     82d5 <mpi_miller_rabin+0x375>
    8121:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    8128:	00 
    8129:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
    812e:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
    8135:	00 
    8136:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    813b:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    8142:	00 
    8143:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    814a:	00 00 
    814c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    8151:	bd 20 00 00 00       	mov    $0x20,%ebp
    8156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    815d:	00 00 00 
    8160:	49 8b 46 08          	mov    0x8(%r14),%rax
    8164:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    8169:	4c 89 e2             	mov    %r12,%rdx
    816c:	4c 89 ef             	mov    %r13,%rdi
    816f:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    8176:	00 
    8177:	e8 74 fd ff ff       	callq  7ef0 <mbedtls_mpi_fill_random>
    817c:	85 c0                	test   %eax,%eax
    817e:	0f 85 d4 01 00 00    	jne    8358 <mpi_miller_rabin+0x3f8>
    8184:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
    818b:	00 
    818c:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
    8193:	00 
    8194:	e8 a7 1d 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    8199:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    819e:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
    81a3:	48 89 c3             	mov    %rax,%rbx
    81a6:	e8 95 1d 00 00       	callq  9f40 <mbedtls_mpi_core_bitlen>
    81ab:	48 39 d8             	cmp    %rbx,%rax
    81ae:	73 2d                	jae    81dd <mpi_miller_rabin+0x27d>
    81b0:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
    81b7:	00 
    81b8:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
    81bf:	00 
    81c0:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    81c4:	c1 e1 06             	shl    $0x6,%ecx
    81c7:	f7 d1                	not    %ecx
    81c9:	01 c1                	add    %eax,%ecx
    81cb:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    81d2:	48 d3 e0             	shl    %cl,%rax
    81d5:	48 f7 d0             	not    %rax
    81d8:	48 21 44 d6 f8       	and    %rax,-0x8(%rsi,%rdx,8)
    81dd:	83 ed 01             	sub    $0x1,%ebp
    81e0:	0f 84 9a 01 00 00    	je     8380 <mpi_miller_rabin+0x420>
    81e6:	4c 89 fe             	mov    %r15,%rsi
    81e9:	4c 89 ef             	mov    %r13,%rdi
    81ec:	e8 7f d2 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    81f1:	85 c0                	test   %eax,%eax
    81f3:	0f 89 67 ff ff ff    	jns    8160 <mpi_miller_rabin+0x200>
    81f9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    81fe:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    8203:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    820a:	00 01 00 00 00 
    820f:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    8216:	01 00 00 00 
    821a:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    8221:	00 01 00 00 00 
    8226:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    822d:	00 
    822e:	e8 3d d2 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8233:	85 c0                	test   %eax,%eax
    8235:	0f 8e 25 ff ff ff    	jle    8160 <mpi_miller_rabin+0x200>
    823b:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    8240:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    8245:	4c 89 f1             	mov    %r14,%rcx
    8248:	4c 89 ee             	mov    %r13,%rsi
    824b:	e8 80 ee ff ff       	callq  70d0 <mbedtls_mpi_exp_mod>
    8250:	85 c0                	test   %eax,%eax
    8252:	0f 85 00 01 00 00    	jne    8358 <mpi_miller_rabin+0x3f8>
    8258:	4c 89 fe             	mov    %r15,%rsi
    825b:	4c 89 ef             	mov    %r13,%rdi
    825e:	e8 0d d2 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8263:	85 c0                	test   %eax,%eax
    8265:	74 42                	je     82a9 <mpi_miller_rabin+0x349>
    8267:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    826c:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    8271:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    8278:	00 01 00 00 00 
    827d:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    8284:	01 00 00 00 
    8288:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    828f:	00 01 00 00 00 
    8294:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    829b:	00 
    829c:	e8 cf d1 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    82a1:	85 c0                	test   %eax,%eax
    82a3:	0f 85 14 01 00 00    	jne    83bd <mpi_miller_rabin+0x45d>
    82a9:	48 83 44 24 50 01    	addq   $0x1,0x50(%rsp)
    82af:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    82b4:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
    82b9:	0f 85 92 fe ff ff    	jne    8151 <mpi_miller_rabin+0x1f1>
    82bf:	eb 36                	jmp    82f7 <mpi_miller_rabin+0x397>
    82c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    82c8:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    82cf:	00 
    82d0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    82d5:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    82dc:	00 
    82dd:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
    82e4:	00 
    82e5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    82ea:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    82f1:	00 
    82f2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    82f7:	4c 89 ff             	mov    %r15,%rdi
    82fa:	e8 91 c8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    82ff:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    8304:	e8 87 c8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    8309:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    830e:	e8 7d c8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    8313:	4c 89 ef             	mov    %r13,%rdi
    8316:	e8 75 c8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    831b:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    8320:	e8 6b c8 ff ff       	callq  4b90 <mbedtls_mpi_free>
    8325:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
    832c:	00 
    832d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8334:	00 00 
    8336:	0f 85 84 01 00 00    	jne    84c0 <mpi_miller_rabin+0x560>
    833c:	8b 44 24 24          	mov    0x24(%rsp),%eax
    8340:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
    8347:	5b                   	pop    %rbx
    8348:	5d                   	pop    %rbp
    8349:	41 5c                	pop    %r12
    834b:	41 5d                	pop    %r13
    834d:	41 5e                	pop    %r14
    834f:	41 5f                	pop    %r15
    8351:	c3                   	retq   
    8352:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8358:	89 44 24 24          	mov    %eax,0x24(%rsp)
    835c:	eb 99                	jmp    82f7 <mpi_miller_rabin+0x397>
    835e:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
    8363:	4c 89 fe             	mov    %r15,%rsi
    8366:	4c 89 ef             	mov    %r13,%rdi
    8369:	e8 02 d1 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    836e:	85 c0                	test   %eax,%eax
    8370:	0f 84 00 01 00 00    	je     8476 <mpi_miller_rabin+0x516>
    8376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    837d:	00 00 00 
    8380:	c7 44 24 24 f2 ff ff 	movl   $0xfffffff2,0x24(%rsp)
    8387:	ff 
    8388:	e9 6a ff ff ff       	jmpq   82f7 <mpi_miller_rabin+0x397>
    838d:	0f 1f 00             	nopl   (%rax)
    8390:	48 83 c1 01          	add    $0x1,%rcx
    8394:	48 39 ce             	cmp    %rcx,%rsi
    8397:	0f 85 1d fd ff ff    	jne    80ba <mpi_miller_rabin+0x15a>
    839d:	31 ed                	xor    %ebp,%ebp
    839f:	e9 3c fd ff ff       	jmpq   80e0 <mpi_miller_rabin+0x180>
    83a4:	0f 1f 40 00          	nopl   0x0(%rax)
    83a8:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    83af:	00 
    83b0:	48 89 ea             	mov    %rbp,%rdx
    83b3:	e8 a8 1f 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    83b8:	e9 58 fd ff ff       	jmpq   8115 <mpi_miller_rabin+0x1b5>
    83bd:	48 83 7c 24 48 01    	cmpq   $0x1,0x48(%rsp)
    83c3:	bb 01 00 00 00       	mov    $0x1,%ebx
    83c8:	76 99                	jbe    8363 <mpi_miller_rabin+0x403>
    83ca:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
    83cf:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
    83d4:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    83d9:	e9 80 00 00 00       	jmpq   845e <mpi_miller_rabin+0x4fe>
    83de:	66 90                	xchg   %ax,%ax
    83e0:	4c 89 ea             	mov    %r13,%rdx
    83e3:	4c 89 ee             	mov    %r13,%rsi
    83e6:	48 89 ef             	mov    %rbp,%rdi
    83e9:	e8 c2 d5 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    83ee:	85 c0                	test   %eax,%eax
    83f0:	0f 85 62 ff ff ff    	jne    8358 <mpi_miller_rabin+0x3f8>
    83f6:	4c 89 f2             	mov    %r14,%rdx
    83f9:	48 89 ee             	mov    %rbp,%rsi
    83fc:	4c 89 ef             	mov    %r13,%rdi
    83ff:	e8 1c e6 ff ff       	callq  6a20 <mbedtls_mpi_mod_mpi>
    8404:	85 c0                	test   %eax,%eax
    8406:	0f 85 4c ff ff ff    	jne    8358 <mpi_miller_rabin+0x3f8>
    840c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8411:	4c 89 e6             	mov    %r12,%rsi
    8414:	4c 89 ef             	mov    %r13,%rdi
    8417:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    841e:	00 01 00 00 00 
    8423:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    842a:	01 00 00 00 
    842e:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    8435:	00 01 00 00 00 
    843a:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    8441:	00 
    8442:	e8 29 d0 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8447:	85 c0                	test   %eax,%eax
    8449:	0f 84 0f ff ff ff    	je     835e <mpi_miller_rabin+0x3fe>
    844f:	48 83 c3 01          	add    $0x1,%rbx
    8453:	48 3b 5c 24 48       	cmp    0x48(%rsp),%rbx
    8458:	0f 84 00 ff ff ff    	je     835e <mpi_miller_rabin+0x3fe>
    845e:	4c 89 fe             	mov    %r15,%rsi
    8461:	4c 89 ef             	mov    %r13,%rdi
    8464:	e8 07 d0 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8469:	85 c0                	test   %eax,%eax
    846b:	0f 85 6f ff ff ff    	jne    83e0 <mpi_miller_rabin+0x480>
    8471:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
    8476:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    847b:	4c 89 ef             	mov    %r13,%rdi
    847e:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    8483:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
    848a:	00 01 00 00 00 
    848f:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    8496:	01 00 00 00 
    849a:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
    84a1:	00 01 00 00 00 
    84a6:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    84ad:	00 
    84ae:	e8 bd cf ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    84b3:	85 c0                	test   %eax,%eax
    84b5:	0f 85 ee fd ff ff    	jne    82a9 <mpi_miller_rabin+0x349>
    84bb:	e9 c0 fe ff ff       	jmpq   8380 <mpi_miller_rabin+0x420>
    84c0:	e8 ab bd ff ff       	callq  4270 <__stack_chk_fail@plt>
    84c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    84cc:	00 00 00 00 

00000000000084d0 <mbedtls_mpi_random>:
    84d0:	e9 5b 99 02 00       	jmpq   31e30 <mbedtls_mpi_random.instr.bb_84d0>
    84d5:	85 f6                	test   %esi,%esi
    84d7:	78 6e                	js     8547 <mbedtls_mpi_random+0x77>
    84d9:	e9 8a 99 02 00       	jmpq   31e68 <instr.bb_84d9>
    84de:	e9 a4 99 02 00       	jmpq   31e87 <instr.bb_84f8>
    84e3:	e9 e2 99 02 00       	jmpq   31eca <instr.bb_8508>
    84e8:	48 89 d7             	mov    %rdx,%rdi
    84eb:	55                   	push   %rbp
    84ec:	48 89 f5             	mov    %rsi,%rbp
    84ef:	53                   	push   %rbx
    84f0:	48 89 d3             	mov    %rdx,%rbx
    84f3:	e8 68 d0 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    84f8:	eb e4                	jmp    84de <mbedtls_mpi_random+0xe>
    84fa:	7e 44                	jle    8540 <mbedtls_mpi_random+0x70>
    84fc:	e9 8e 99 02 00       	jmpq   31e8f <instr.bb_84fc>
    8501:	89 e7                	mov    %esp,%edi
    8503:	e8 88 c7 ff ff       	callq  4c90 <mbedtls_mpi_resize_clear>
    8508:	eb d9                	jmp    84e3 <mbedtls_mpi_random+0x13>
    850a:	74 0c                	je     8518 <mbedtls_mpi_random+0x48>
    850c:	e9 c1 99 02 00       	jmpq   31ed2 <instr.bb_850c>
    8511:	5d                   	pop    %rbp
    8512:	41 5e                	pop    %r14
    8514:	c3                   	retq   
    8515:	0f 1f 00             	nopl   (%rax)
    8518:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
    851d:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    8521:	4d 89 f1             	mov    %r14,%r9
    8524:	4d 89 e8             	mov    %r13,%r8
    8527:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    852c:	5b                   	pop    %rbx
    852d:	48 89 ee             	mov    %rbp,%rsi
    8530:	5d                   	pop    %rbp
    8531:	41 5c                	pop    %r12
    8533:	41 5d                	pop    %r13
    8535:	41 5e                	pop    %r14
    8537:	e9 f4 24 00 00       	jmpq   aa30 <mbedtls_mpi_core_random>
    853c:	0f 1f 40 00          	nopl   0x0(%rax)
    8540:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    8545:	eb c5                	jmp    850c <mbedtls_mpi_random+0x3c>
    8547:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    854c:	c3                   	retq   
    854d:	0f 1f 00             	nopl   (%rax)

0000000000008550 <mbedtls_mpi_inv_mod>:
    8550:	e9 8b 99 02 00       	jmpq   31ee0 <mbedtls_mpi_inv_mod.instr.bb_8550>
    8555:	57                   	push   %rdi
    8556:	41 56                	push   %r14
    8558:	49 89 f6             	mov    %rsi,%r14
    855b:	41 55                	push   %r13
    855d:	41 54                	push   %r12
    855f:	55                   	push   %rbp
    8560:	53                   	push   %rbx
    8561:	48 89 d3             	mov    %rdx,%rbx
    8564:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
    856b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    8570:	4c 8d a4 24 60 01 00 	lea    0x160(%rsp),%r12
    8577:	00 
    8578:	48 89 d7             	mov    %rdx,%rdi
    857b:	4c 89 e6             	mov    %r12,%rsi
    857e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8585:	00 00 
    8587:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    858e:	00 
    858f:	31 c0                	xor    %eax,%eax
    8591:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
    8598:	00 
    8599:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
    85a0:	00 01 00 00 00 
    85a5:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
    85ac:	01 00 00 00 
    85b0:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
    85b7:	00 01 00 00 00 
    85bc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    85c1:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    85c8:	00 
    85c9:	e8 a2 ce ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    85ce:	e9 1b 9a 02 00       	jmpq   31fee <instr.bb_85ce>
    85d3:	05 00 00 e9 1b       	add    $0x1be90000,%eax
    85d8:	9a                   	(bad)  
    85d9:	02 00                	add    (%rax),%al
    85db:	90                   	nop
    85dc:	90                   	nop
    85dd:	90                   	nop
    85de:	90                   	nop
    85df:	90                   	nop
    85e0:	90                   	nop
    85e1:	90                   	nop
    85e2:	90                   	nop
    85e3:	90                   	nop
    85e4:	90                   	nop
    85e5:	90                   	nop
    85e6:	90                   	nop
    85e7:	90                   	nop
    85e8:	90                   	nop
    85e9:	90                   	nop
    85ea:	90                   	nop
    85eb:	90                   	nop
    85ec:	90                   	nop
    85ed:	90                   	nop
    85ee:	90                   	nop
    85ef:	90                   	nop
    85f0:	90                   	nop
    85f1:	90                   	nop
    85f2:	90                   	nop
    85f3:	90                   	nop
    85f4:	90                   	nop
    85f5:	90                   	nop
    85f6:	90                   	nop
    85f7:	90                   	nop
    85f8:	90                   	nop
    85f9:	90                   	nop
    85fa:	90                   	nop
    85fb:	90                   	nop
    85fc:	90                   	nop
    85fd:	90                   	nop
    85fe:	90                   	nop
    85ff:	90                   	nop
    8600:	90                   	nop
    8601:	90                   	nop
    8602:	90                   	nop
    8603:	90                   	nop
    8604:	90                   	nop
    8605:	90                   	nop
    8606:	90                   	nop
    8607:	90                   	nop
    8608:	90                   	nop
    8609:	90                   	nop
    860a:	90                   	nop
    860b:	90                   	nop
    860c:	90                   	nop
    860d:	90                   	nop
    860e:	90                   	nop
    860f:	90                   	nop
    8610:	90                   	nop
    8611:	90                   	nop
    8612:	90                   	nop
    8613:	90                   	nop
    8614:	90                   	nop
    8615:	90                   	nop
    8616:	90                   	nop
    8617:	90                   	nop
    8618:	90                   	nop
    8619:	90                   	nop
    861a:	90                   	nop
    861b:	90                   	nop
    861c:	90                   	nop
    861d:	90                   	nop
    861e:	90                   	nop
    861f:	90                   	nop
    8620:	90                   	nop
    8621:	90                   	nop
    8622:	90                   	nop
    8623:	90                   	nop
    8624:	90                   	nop
    8625:	90                   	nop
    8626:	90                   	nop
    8627:	90                   	nop
    8628:	90                   	nop
    8629:	90                   	nop
    862a:	90                   	nop
    862b:	90                   	nop
    862c:	90                   	nop
    862d:	90                   	nop
    862e:	90                   	nop
    862f:	90                   	nop
    8630:	90                   	nop
    8631:	90                   	nop
    8632:	90                   	nop
    8633:	90                   	nop
    8634:	90                   	nop
    8635:	90                   	nop
    8636:	90                   	nop
    8637:	90                   	nop
    8638:	90                   	nop
    8639:	90                   	nop
    863a:	90                   	nop
    863b:	90                   	nop
    863c:	90                   	nop
    863d:	90                   	nop
    863e:	90                   	nop
    863f:	90                   	nop
    8640:	90                   	nop
    8641:	90                   	nop
    8642:	90                   	nop
    8643:	90                   	nop
    8644:	90                   	nop
    8645:	90                   	nop
    8646:	90                   	nop
    8647:	90                   	nop
    8648:	90                   	nop
    8649:	90                   	nop
    864a:	90                   	nop
    864b:	90                   	nop
    864c:	90                   	nop
    864d:	90                   	nop
    864e:	90                   	nop
    864f:	90                   	nop
    8650:	90                   	nop
    8651:	90                   	nop
    8652:	90                   	nop
    8653:	90                   	nop
    8654:	90                   	nop
    8655:	90                   	nop
    8656:	90                   	nop
    8657:	90                   	nop
    8658:	90                   	nop
    8659:	90                   	nop
    865a:	90                   	nop
    865b:	90                   	nop
    865c:	90                   	nop
    865d:	90                   	nop
    865e:	90                   	nop
    865f:	90                   	nop
    8660:	90                   	nop
    8661:	90                   	nop
    8662:	90                   	nop
    8663:	90                   	nop
    8664:	90                   	nop
    8665:	90                   	nop
    8666:	90                   	nop
    8667:	90                   	nop
    8668:	90                   	nop
    8669:	90                   	nop
    866a:	90                   	nop
    866b:	90                   	nop
    866c:	90                   	nop
    866d:	90                   	nop
    866e:	90                   	nop
    866f:	90                   	nop
    8670:	90                   	nop
    8671:	90                   	nop
    8672:	90                   	nop
    8673:	90                   	nop
    8674:	90                   	nop
    8675:	90                   	nop
    8676:	90                   	nop
    8677:	90                   	nop
    8678:	90                   	nop
    8679:	90                   	nop
    867a:	90                   	nop
    867b:	90                   	nop
    867c:	90                   	nop
    867d:	90                   	nop
    867e:	90                   	nop
    867f:	90                   	nop
    8680:	90                   	nop
    8681:	90                   	nop
    8682:	90                   	nop
    8683:	90                   	nop
    8684:	90                   	nop
    8685:	90                   	nop
    8686:	90                   	nop
    8687:	90                   	nop
    8688:	90                   	nop
    8689:	90                   	nop
    868a:	90                   	nop
    868b:	90                   	nop
    868c:	90                   	nop
    868d:	90                   	nop
    868e:	90                   	nop
    868f:	90                   	nop
    8690:	90                   	nop
    8691:	90                   	nop
    8692:	90                   	nop
    8693:	90                   	nop
    8694:	e9 c8 9a 02 00       	jmpq   32161 <instr.bb_8712>
    8699:	c7 84 24 f0 00 00 00 	movl   $0x0,0xf0(%rsp)
    86a0:	00 00 00 00 
    86a4:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
    86ab:	01 00 00 00 
    86af:	48 c7 84 24 08 01 00 	movq   $0x0,0x108(%rsp)
    86b6:	00 00 00 00 00 
    86bb:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
    86c2:	00 00 00 00 00 
    86c7:	c7 84 24 20 01 00 00 	movl   $0x1,0x120(%rsp)
    86ce:	01 00 00 00 
    86d2:	48 c7 84 24 28 01 00 	movq   $0x0,0x128(%rsp)
    86d9:	00 00 00 00 00 
    86de:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
    86e5:	00 00 00 00 00 
    86ea:	c7 84 24 40 01 00 00 	movl   $0x1,0x140(%rsp)
    86f1:	01 00 00 00 
    86f5:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
    86fc:	00 00 00 00 00 
    8701:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
    8708:	00 00 00 00 00 
    870d:	e8 9e f4 ff ff       	callq  7bb0 <mbedtls_mpi_gcd>
    8712:	eb 80                	jmp    8694 <mbedtls_mpi_inv_mod+0x144>
    8714:	75 48                	jne    875e <mbedtls_mpi_inv_mod+0x20e>
    8716:	e9 4e 9a 02 00       	jmpq   32169 <instr.bb_8716>
    871b:	4c 89 e6             	mov    %r12,%rsi
    871e:	48 89 ef             	mov    %rbp,%rdi
    8721:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
    8728:	00 01 00 00 00 
    872d:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
    8734:	01 00 00 00 
    8738:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
    873f:	00 01 00 00 00 
    8744:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    874b:	00 
    874c:	e8 1f cd ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8751:	e9 4e 9a 02 00       	jmpq   321a4 <instr.bb_8751>
    8756:	00 00                	add    %al,(%rax)
    8758:	00 e9                	add    %ch,%cl
    875a:	4e 9a                	rex.WRX (bad) 
    875c:	02 00                	add    (%rax),%al
    875e:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
    8763:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
    876a:	00 
    876b:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
    8772:	00 
    8773:	48 8d 8c 24 00 01 00 	lea    0x100(%rsp),%rcx
    877a:	00 
    877b:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
    8782:	00 
    8783:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    8788:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
    878f:	00 
    8790:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
    8797:	00 
    8798:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
    879f:	00 
    87a0:	e9 4e 9a 02 00       	jmpq   321f3 <instr.bb_87a0>
    87a5:	24 10                	and    $0x10,%al
    87a7:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    87ac:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    87b1:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    87b6:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
    87bb:	e8 d0 c3 ff ff       	callq  4b90 <mbedtls_mpi_free>
    87c0:	e9 4e 9a 02 00       	jmpq   32213 <instr.bb_87c0>
    87c5:	c3                   	retq   
    87c6:	ff                   	(bad)  
    87c7:	ff                   	(bad)  
    87c8:	e9 4e 9a 02 00       	jmpq   3221b <instr.bb_87c8>
    87cd:	4c 89 df             	mov    %r11,%rdi
    87d0:	e8 bb c3 ff ff       	callq  4b90 <mbedtls_mpi_free>
    87d5:	e9 4e 9a 02 00       	jmpq   32228 <instr.bb_87d5>
    87da:	4c 89 d7             	mov    %r10,%rdi
    87dd:	e8 ae c3 ff ff       	callq  4b90 <mbedtls_mpi_free>
    87e2:	e9 4e 9a 02 00       	jmpq   32235 <instr.bb_87e2>
    87e7:	c3                   	retq   
    87e8:	ff                   	(bad)  
    87e9:	ff                   	(bad)  
    87ea:	e9 4e 9a 02 00       	jmpq   3223d <instr.bb_87ea>
    87ef:	c3                   	retq   
    87f0:	ff                   	(bad)  
    87f1:	ff                   	(bad)  
    87f2:	e9 4e 9a 02 00       	jmpq   32245 <instr.bb_87f2>
    87f7:	e8 94 c3 ff ff       	callq  4b90 <mbedtls_mpi_free>
    87fc:	e9 4e 9a 02 00       	jmpq   3224f <instr.bb_87fc>
    8801:	4c 89 c7             	mov    %r8,%rdi
    8804:	e8 87 c3 ff ff       	callq  4b90 <mbedtls_mpi_free>
    8809:	e9 4e 9a 02 00       	jmpq   3225c <instr.bb_8809>
    880e:	4c 89 cf             	mov    %r9,%rdi
    8811:	e8 7a c3 ff ff       	callq  4b90 <mbedtls_mpi_free>
    8816:	e9 4e 9a 02 00       	jmpq   32269 <instr.bb_8816>
    881b:	8b 8c 24 88 01 00 00 	mov    0x188(%rsp),%ecx
    8822:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8829:	00 00 
    882b:	0f 85 3e 05 00 00    	jne    8d6f <mbedtls_mpi_inv_mod+0x81f>
    8831:	e9 4e 9a 02 00       	jmpq   32284 <instr.bb_8831>
    8836:	00 00                	add    %al,(%rax)
    8838:	5b                   	pop    %rbx
    8839:	5d                   	pop    %rbp
    883a:	41 5c                	pop    %r12
    883c:	41 5d                	pop    %r13
    883e:	41 5e                	pop    %r14
    8840:	41 5f                	pop    %r15
    8842:	c3                   	retq   
    8843:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8848:	e9 53 9a 02 00       	jmpq   322a0 <instr.bb_8848>
    884d:	4c 89 f6             	mov    %r14,%rsi
    8850:	48 89 da             	mov    %rbx,%rdx
    8853:	4c 89 ef             	mov    %r13,%rdi
    8856:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
    885d:	00 
    885e:	e8 bd e1 ff ff       	callq  6a20 <mbedtls_mpi_mod_mpi>
    8863:	e9 82 9a 02 00       	jmpq   322ea <instr.bb_8863>
    8868:	ff                   	(bad)  
    8869:	ff                   	(bad)  
    886a:	ff                   	(bad)  
    886b:	e9 82 9a 02 00       	jmpq   322f2 <instr.bb_886b>
    8870:	f7 4c 8d bc 24 e0 00 	testl  $0xe024,-0x44(%rbp,%rcx,4)
    8877:	00 
    8878:	00 e8                	add    %ch,%al
    887a:	a2 c5 ff ff e9 b1 9a 	movabs %al,0x29ab1e9ffffc5
    8881:	02 00 
    8883:	fe                   	(bad)  
    8884:	ff                   	(bad)  
    8885:	ff                   	(bad)  
    8886:	e9 b1 9a 02 00       	jmpq   3233c <instr.bb_8886>
    888b:	ff                   	(bad)  
    888c:	e8 8f c5 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    8891:	e9 e0 9a 02 00       	jmpq   32376 <instr.bb_8891>
    8896:	fe                   	(bad)  
    8897:	ff                   	(bad)  
    8898:	ff                   	(bad)  
    8899:	e9 e0 9a 02 00       	jmpq   3237e <instr.bb_8899>
    889e:	01 00                	add    %eax,(%rax)
    88a0:	00 48 89             	add    %cl,-0x77(%rax)
    88a3:	de 48 89             	fimuls -0x77(%rax)
    88a6:	c7                   	(bad)  
    88a7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    88ac:	e8 6f c5 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    88b1:	e9 0f 9b 02 00       	jmpq   323c5 <instr.bb_88b1>
    88b6:	00 00                	add    %al,(%rax)
    88b8:	00 85 c0 0f 85 c7    	add    %al,-0x387af040(%rbp)
    88be:	fe                   	(bad)  
    88bf:	ff                   	(bad)  
    88c0:	ff                   	(bad)  
    88c1:	e9 0f 9b 02 00       	jmpq   323d5 <instr.bb_88c1>
    88c6:	00 00                	add    %al,(%rax)
    88c8:	00 4c 89 5c          	add    %cl,0x5c(%rcx,%rcx,4)
    88cc:	24 20                	and    $0x20,%al
    88ce:	e8 bd c6 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    88d3:	e9 3e 9b 02 00       	jmpq   32416 <instr.bb_88d3>
    88d8:	85 c0                	test   %eax,%eax
    88da:	0f 85 a8 fe ff ff    	jne    8788 <mbedtls_mpi_inv_mod+0x238>
    88e0:	e9 3e 9b 02 00       	jmpq   32423 <instr.bb_88e0>
    88e5:	00 00                	add    %al,(%rax)
    88e7:	00 31                	add    %dh,(%rcx)
    88e9:	f6 4c 89 5c 24       	testb  $0x24,0x5c(%rcx,%rcx,4)
    88ee:	28 4c 89 d7          	sub    %cl,-0x29(%rcx,%rcx,4)
    88f2:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    88f7:	e8 94 c6 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    88fc:	e9 6d 9b 02 00       	jmpq   3246e <instr.bb_88fc>
    8901:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    8906:	85 c0                	test   %eax,%eax
    8908:	0f 85 82 fe ff ff    	jne    8790 <mbedtls_mpi_inv_mod+0x240>
    890e:	e9 6d 9b 02 00       	jmpq   32480 <instr.bb_890e>
    8913:	01 00                	add    %eax,(%rax)
    8915:	00 31                	add    %dh,(%rcx)
    8917:	f6 4c 89 5c 24       	testb  $0x24,0x5c(%rcx,%rcx,4)
    891c:	30 4c 89 c7          	xor    %cl,-0x39(%rcx,%rcx,4)
    8920:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
    8925:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    892a:	e8 61 c6 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    892f:	e9 9c 9b 02 00       	jmpq   324d0 <instr.bb_892f>
    8934:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    8939:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
    8940:	00 
    8941:	85 c0                	test   %eax,%eax
    8943:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    8948:	0f 85 52 fe ff ff    	jne    87a0 <mbedtls_mpi_inv_mod+0x250>
    894e:	e9 9c 9b 02 00       	jmpq   324ef <instr.bb_894e>
    8953:	00 00                	add    %al,(%rax)
    8955:	00 4c 89 5c          	add    %cl,0x5c(%rcx,%rcx,4)
    8959:	24 38                	and    $0x38,%al
    895b:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
    8960:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    8965:	e8 26 c6 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    896a:	e9 cb 9b 02 00       	jmpq   3253a <instr.bb_896a>
    896f:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    8974:	85 c0                	test   %eax,%eax
    8976:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    897b:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
    8980:	0f 85 1a fe ff ff    	jne    87a0 <mbedtls_mpi_inv_mod+0x250>
    8986:	e9 cb 9b 02 00       	jmpq   32556 <instr.bb_8986>
    898b:	4c 89 c3             	mov    %r8,%rbx
    898e:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
    8993:	4c 89 cd             	mov    %r9,%rbp
    8996:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
    899b:	4d 89 d4             	mov    %r10,%r12
    899e:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
    89a3:	4d 89 de             	mov    %r11,%r14
    89a6:	e9 cb 9b 02 00       	jmpq   32576 <instr.bb_89a6>
    89ab:	00 00                	add    %al,(%rax)
    89ad:	00 f6                	add    %dh,%dh
    89af:	07                   	(bad)  
    89b0:	01 0f                	add    %ecx,(%rdi)
    89b2:	85 b3 00 00 00 e9    	test   %esi,-0x17000000(%rbx)
    89b8:	cb                   	lret   
    89b9:	9b                   	fwait
    89ba:	02 00                	add    (%rax),%al
    89bc:	00 00                	add    %al,(%rax)
    89be:	00 48 85             	add    %cl,-0x7b(%rax)
    89c1:	f6 0f 85             	testb  $0x85,(%rdi)
    89c4:	6c                   	insb   (%dx),%es:(%rdi)
    89c5:	01 00                	add    %eax,(%rax)
    89c7:	00 e9                	add    %ch,%cl
    89c9:	cb                   	lret   
    89ca:	9b                   	fwait
    89cb:	02 00                	add    (%rax),%al
    89cd:	00 00                	add    %al,(%rax)
    89cf:	00 f6                	add    %dh,%dh
    89d1:	00 01                	add    %al,(%rcx)
    89d3:	75 0d                	jne    89e2 <mbedtls_mpi_inv_mod+0x492>
    89d5:	e9 cf 9b 02 00       	jmpq   325a9 <instr.bb_89d5>
    89da:	00 00                	add    %al,(%rax)
    89dc:	00 f6                	add    %dh,%dh
    89de:	00 01                	add    %al,(%rcx)
    89e0:	74 36                	je     8a18 <mbedtls_mpi_inv_mod+0x4c8>
    89e2:	e9 d3 9b 02 00       	jmpq   325ba <instr.bb_89e2>
    89e7:	4c 89 fa             	mov    %r15,%rdx
    89ea:	4c 89 f6             	mov    %r14,%rsi
    89ed:	4c 89 f7             	mov    %r14,%rdi
    89f0:	e8 1b ce ff ff       	callq  5810 <add_sub_mpi>
    89f5:	e9 02 9c 02 00       	jmpq   325fc <instr.bb_89f5>
    89fa:	01 00                	add    %eax,(%rax)
    89fc:	00 e9                	add    %ch,%cl
    89fe:	02 9c 02 00 4c 89 ea 	add    -0x1576b400(%rdx,%rax,1),%bl
    8a05:	4c 89 e6             	mov    %r12,%rsi
    8a08:	4c 89 e7             	mov    %r12,%rdi
    8a0b:	e8 00 ce ff ff       	callq  5810 <add_sub_mpi>
    8a10:	e9 31 9c 02 00       	jmpq   32646 <instr.bb_8a10>
    8a15:	01 00                	add    %eax,(%rax)
    8a17:	00 e9                	add    %ch,%cl
    8a19:	31 9c 02 00 00 00 00 	xor    %ebx,0x0(%rdx,%rax,1)
    8a20:	48 85 f6             	test   %rsi,%rsi
    8a23:	0f 85 1a 01 00 00    	jne    8b43 <mbedtls_mpi_inv_mod+0x5f3>
    8a29:	e9 31 9c 02 00       	jmpq   3265f <instr.bb_8a29>
    8a2e:	00 00                	add    %al,(%rax)
    8a30:	00 48 85             	add    %cl,-0x7b(%rax)
    8a33:	f6 0f 84             	testb  $0x84,(%rdi)
    8a36:	6c                   	insb   (%dx),%es:(%rdi)
    8a37:	ff                   	(bad)  
    8a38:	ff                   	(bad)  
    8a39:	ff                   	(bad)  
    8a3a:	e9 31 9c 02 00       	jmpq   32670 <instr.bb_8a3a>
    8a3f:	00 00                	add    %al,(%rax)
    8a41:	00 ba 01 00 00 00    	add    %bh,0x1(%rdx)
    8a47:	e8 14 19 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    8a4c:	e9 31 9c 02 00       	jmpq   32682 <instr.bb_8a4c>
    8a51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8a58:	e9 33 9c 02 00       	jmpq   32690 <instr.bb_8a58>
    8a5d:	01 00                	add    %eax,(%rax)
    8a5f:	00 ba 01 00 00 00    	add    %bh,0x1(%rdx)
    8a65:	e8 f6 18 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    8a6a:	e9 33 9c 02 00       	jmpq   326a2 <instr.bb_8a6a>
    8a6f:	01 00                	add    %eax,(%rax)
    8a71:	00 f6                	add    %dh,%dh
    8a73:	07                   	(bad)  
    8a74:	01 0f                	add    %ecx,(%rdi)
    8a76:	85 3a                	test   %edi,(%rdx)
    8a78:	01 00                	add    %eax,(%rax)
    8a7a:	00 e9                	add    %ch,%cl
    8a7c:	33 9c 02 00 01 00 00 	xor    0x100(%rdx,%rax,1),%ebx
    8a83:	48 85 f6             	test   %rsi,%rsi
    8a86:	0f 85 84 00 00 00    	jne    8b10 <mbedtls_mpi_inv_mod+0x5c0>
    8a8c:	e9 33 9c 02 00       	jmpq   326c4 <instr.bb_8a8c>
    8a91:	01 00                	add    %eax,(%rax)
    8a93:	00 f6                	add    %dh,%dh
    8a95:	00 01                	add    %al,(%rcx)
    8a97:	75 0d                	jne    8aa6 <mbedtls_mpi_inv_mod+0x556>
    8a99:	e9 37 9c 02 00       	jmpq   326d5 <instr.bb_8a99>
    8a9e:	01 00                	add    %eax,(%rax)
    8aa0:	00 f6                	add    %dh,%dh
    8aa2:	00 01                	add    %al,(%rcx)
    8aa4:	74 36                	je     8adc <mbedtls_mpi_inv_mod+0x58c>
    8aa6:	e9 3b 9c 02 00       	jmpq   326e6 <instr.bb_8aa6>
    8aab:	4c 89 fa             	mov    %r15,%rdx
    8aae:	48 89 de             	mov    %rbx,%rsi
    8ab1:	48 89 df             	mov    %rbx,%rdi
    8ab4:	e8 57 cd ff ff       	callq  5810 <add_sub_mpi>
    8ab9:	e9 6a 9c 02 00       	jmpq   32728 <instr.bb_8ab9>
    8abe:	00 00                	add    %al,(%rax)
    8ac0:	00 e9                	add    %ch,%cl
    8ac2:	6a 9c                	pushq  $0xffffffffffffff9c
    8ac4:	02 00                	add    (%rax),%al
    8ac6:	4c 89 ea             	mov    %r13,%rdx
    8ac9:	48 89 ee             	mov    %rbp,%rsi
    8acc:	48 89 ef             	mov    %rbp,%rdi
    8acf:	e8 3c cd ff ff       	callq  5810 <add_sub_mpi>
    8ad4:	e9 99 9c 02 00       	jmpq   32772 <instr.bb_8ad4>
    8ad9:	00 00                	add    %al,(%rax)
    8adb:	00 e9                	add    %ch,%cl
    8add:	99                   	cltd   
    8ade:	9c                   	pushfq 
    8adf:	02 00                	add    (%rax),%al
    8ae1:	01 00                	add    %eax,(%rax)
    8ae3:	00 48 85             	add    %cl,-0x7b(%rax)
    8ae6:	f6 75 37             	divb   0x37(%rbp)
    8ae9:	e9 9d 9c 02 00       	jmpq   3278b <instr.bb_8ae9>
    8aee:	01 00                	add    %eax,(%rax)
    8af0:	00 48 85             	add    %cl,-0x7b(%rax)
    8af3:	f6 0f 84             	testb  $0x84,(%rdi)
    8af6:	70 ff                	jo     8af7 <mbedtls_mpi_inv_mod+0x5a7>
    8af8:	ff                   	(bad)  
    8af9:	ff                   	(bad)  
    8afa:	e9 9d 9c 02 00       	jmpq   3279c <instr.bb_8afa>
    8aff:	90                   	nop
    8b00:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    8b05:	e9 10 fd ff ff       	jmpq   881a <mbedtls_mpi_inv_mod+0x2ca>
    8b0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8b10:	ba 01 00 00 00       	mov    $0x1,%edx
    8b15:	e8 46 18 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    8b1a:	e9 6d ff ff ff       	jmpq   8a8c <mbedtls_mpi_inv_mod+0x53c>
    8b1f:	90                   	nop
    8b20:	e9 8b 9c 02 00       	jmpq   327b0 <instr.bb_8b20>
    8b25:	e9 98 9c 02 00       	jmpq   327c2 <instr.bb_8b32>
    8b2a:	e9 d0 9c 02 00       	jmpq   327ff <instr.bb_8b6c>
    8b2f:	18 00                	sbb    %al,(%rax)
    8b31:	00 eb                	add    %ch,%bl
    8b33:	f1                   	icebp  
    8b34:	e9 8e 9c 02 00       	jmpq   327c7 <instr.bb_8b34>
    8b39:	e9 09 9d 02 00       	jmpq   32847 <instr.bb_8b81>
    8b3e:	e9 8e 9c 02 00       	jmpq   327d1 <instr.bb_8b3e>
    8b43:	e9 8e 9c 02 00       	jmpq   327d6 <instr.bb_8b43>
    8b48:	e9 42 9d 02 00       	jmpq   3288f <instr.bb_8b96>
    8b4d:	00 00                	add    %al,(%rax)
    8b4f:	00 e8                	add    %ch,%al
    8b51:	0b 18                	or     (%rax),%ebx
    8b53:	00 00                	add    %al,(%rax)
    8b55:	e9 8e 9c 02 00       	jmpq   327e8 <instr.bb_8b55>
    8b5a:	e9 8e 9c 02 00       	jmpq   327ed <instr.bb_8b5a>
    8b5f:	e9 76 9d 02 00       	jmpq   328da <instr.bb_8bd9>
    8b64:	48 89 f7             	mov    %rsi,%rdi
    8b67:	e8 a4 cc ff ff       	callq  5810 <add_sub_mpi>
    8b6c:	eb bc                	jmp    8b2a <mbedtls_mpi_inv_mod+0x5da>
    8b6e:	75 2a                	jne    8b9a <mbedtls_mpi_inv_mod+0x64a>
    8b70:	e9 92 9c 02 00       	jmpq   32807 <instr.bb_8b70>
    8b75:	e9 a8 9d 02 00       	jmpq   32922 <instr.bb_8bee>
    8b7a:	89 df                	mov    %ebx,%edi
    8b7c:	e8 8f cc ff ff       	callq  5810 <add_sub_mpi>
    8b81:	eb b6                	jmp    8b39 <mbedtls_mpi_inv_mod+0x5e9>
    8b83:	75 15                	jne    8b9a <mbedtls_mpi_inv_mod+0x64a>
    8b85:	e9 c5 9c 02 00       	jmpq   3284f <instr.bb_8b85>
    8b8a:	e9 db 9d 02 00       	jmpq   3296a <instr.bb_8c03>
    8b8f:	89 ef                	mov    %ebp,%edi
    8b91:	e8 7a cc ff ff       	callq  5810 <add_sub_mpi>
    8b96:	eb b0                	jmp    8b48 <mbedtls_mpi_inv_mod+0x5f8>
    8b98:	74 6d                	je     8c07 <mbedtls_mpi_inv_mod+0x6b7>
    8b9a:	e9 f8 9c 02 00       	jmpq   32897 <instr.bb_8b9a>
    8b9f:	e9 4c 8b 74 24       	jmpq   247516f0 <.instr.bb_1ab88+0x2471bc20>
    8ba4:	20 48 8b             	and    %cl,-0x75(%rax)
    8ba7:	6c                   	insb   (%dx),%es:(%rdi)
    8ba8:	24 28                	and    $0x28,%al
    8baa:	4d 89 e2             	mov    %r12,%r10
    8bad:	49 89 d8             	mov    %rbx,%r8
    8bb0:	e9 eb fb ff ff       	jmpq   87a0 <mbedtls_mpi_inv_mod+0x250>
    8bb5:	e9 f8 9c 02 00       	jmpq   328b2 <instr.bb_8bb5>
    8bba:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    8bbf:	4c 89 ce             	mov    %r9,%rsi
    8bc2:	e8 a9 c8 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8bc7:	e9 f8 9c 02 00       	jmpq   328c4 <instr.bb_8bc7>
    8bcc:	78 8c                	js     8b5a <mbedtls_mpi_inv_mod+0x60a>
    8bce:	e9 fc 9c 02 00       	jmpq   328cf <instr.bb_8bce>
    8bd3:	fe                   	(bad)  
    8bd4:	e8 37 cc ff ff       	callq  5810 <add_sub_mpi>
    8bd9:	eb 84                	jmp    8b5f <mbedtls_mpi_inv_mod+0x60f>
    8bdb:	75 bd                	jne    8b9a <mbedtls_mpi_inv_mod+0x64a>
    8bdd:	e9 00 9d 02 00       	jmpq   328e2 <instr.bb_8bdd>
    8be2:	da 4c 89 f6          	fimull -0xa(%rcx,%rcx,4)
    8be6:	4c 89 f7             	mov    %r14,%rdi
    8be9:	e8 22 cc ff ff       	callq  5810 <add_sub_mpi>
    8bee:	eb 85                	jmp    8b75 <mbedtls_mpi_inv_mod+0x625>
    8bf0:	75 a8                	jne    8b9a <mbedtls_mpi_inv_mod+0x64a>
    8bf2:	e9 33 9d 02 00       	jmpq   3292a <instr.bb_8bf2>
    8bf7:	ea                   	(bad)  
    8bf8:	4c 89 e6             	mov    %r12,%rsi
    8bfb:	4c 89 e7             	mov    %r12,%rdi
    8bfe:	e8 0d cc ff ff       	callq  5810 <add_sub_mpi>
    8c03:	eb 85                	jmp    8b8a <mbedtls_mpi_inv_mod+0x63a>
    8c05:	75 93                	jne    8b9a <mbedtls_mpi_inv_mod+0x64a>
    8c07:	e9 66 9d 02 00       	jmpq   32972 <instr.bb_8c07>
    8c0c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    8c11:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
    8c18:	00 00 00 00 00 
    8c1d:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
    8c24:	01 00 00 00 
    8c28:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    8c2d:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
    8c34:	00 01 00 00 00 
    8c39:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    8c40:	00 
    8c41:	e8 2a c8 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8c46:	e9 66 9d 02 00       	jmpq   329b1 <instr.bb_8c46>
    8c4b:	fd                   	std    
    8c4c:	ff                   	(bad)  
    8c4d:	ff                   	(bad)  
    8c4e:	e9 66 9d 02 00       	jmpq   329b9 <instr.bb_8c4e>
    8c53:	d8 4d 89             	fmuls  -0x77(%rbp)
    8c56:	f3 49 89 e9          	repz mov %rbp,%r9
    8c5a:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
    8c5f:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    8c64:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
    8c69:	4c 89 c5             	mov    %r8,%rbp
    8c6c:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    8c71:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
    8c76:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    8c7b:	eb 1b                	jmp    8c98 <mbedtls_mpi_inv_mod+0x748>
    8c7d:	b9 01 00 00 00       	mov    $0x1,%ecx
    8c82:	48 89 da             	mov    %rbx,%rdx
    8c85:	48 89 ee             	mov    %rbp,%rsi
    8c88:	48 89 ef             	mov    %rbp,%rdi
    8c8b:	e8 80 cb ff ff       	callq  5810 <add_sub_mpi>
    8c90:	85 c0                	test   %eax,%eax
    8c92:	0f 85 dc 00 00 00    	jne    8d74 <mbedtls_mpi_inv_mod+0x824>
    8c98:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8c9d:	4c 89 e6             	mov    %r12,%rsi
    8ca0:	48 89 ef             	mov    %rbp,%rdi
    8ca3:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
    8caa:	00 00 00 00 00 
    8caf:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
    8cb6:	01 00 00 00 
    8cba:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
    8cc1:	00 01 00 00 00 
    8cc6:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    8ccd:	00 
    8cce:	e8 9d c7 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8cd3:	85 c0                	test   %eax,%eax
    8cd5:	78 a6                	js     8c7d <mbedtls_mpi_inv_mod+0x72d>
    8cd7:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    8cdc:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    8ce1:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    8ce6:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    8ceb:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
    8cf0:	48 89 fd             	mov    %rdi,%rbp
    8cf3:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    8cf8:	4d 89 dc             	mov    %r11,%r12
    8cfb:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    8d00:	eb 15                	jmp    8d17 <mbedtls_mpi_inv_mod+0x7c7>
    8d02:	83 c9 ff             	or     $0xffffffff,%ecx
    8d05:	48 89 da             	mov    %rbx,%rdx
    8d08:	48 89 ee             	mov    %rbp,%rsi
    8d0b:	48 89 ef             	mov    %rbp,%rdi
    8d0e:	e8 fd ca ff ff       	callq  5810 <add_sub_mpi>
    8d13:	85 c0                	test   %eax,%eax
    8d15:	75 79                	jne    8d90 <mbedtls_mpi_inv_mod+0x840>
    8d17:	48 89 de             	mov    %rbx,%rsi
    8d1a:	48 89 ef             	mov    %rbp,%rdi
    8d1d:	e8 4e c7 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8d22:	85 c0                	test   %eax,%eax
    8d24:	79 dc                	jns    8d02 <mbedtls_mpi_inv_mod+0x7b2>
    8d26:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    8d2b:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    8d30:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    8d35:	48 89 fe             	mov    %rdi,%rsi
    8d38:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    8d3d:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    8d42:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
    8d47:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
    8d4c:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    8d51:	e8 ca c0 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    8d56:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    8d5b:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    8d60:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    8d65:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    8d6a:	e9 31 fa ff ff       	jmpq   87a0 <mbedtls_mpi_inv_mod+0x250>
    8d6f:	e8 fc b4 ff ff       	callq  4270 <__stack_chk_fail@plt>
    8d74:	49 89 e8             	mov    %rbp,%r8
    8d77:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    8d7c:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    8d81:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    8d86:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    8d8b:	e9 10 fa ff ff       	jmpq   87a0 <mbedtls_mpi_inv_mod+0x250>
    8d90:	49 89 e8             	mov    %rbp,%r8
    8d93:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    8d98:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    8d9d:	4d 89 e3             	mov    %r12,%r11
    8da0:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    8da5:	e9 f6 f9 ff ff       	jmpq   87a0 <mbedtls_mpi_inv_mod+0x250>
    8daa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008db0 <mbedtls_mpi_is_prime_ext>:
    8db0:	f3 0f 1e fa          	endbr64 
    8db4:	41 55                	push   %r13
    8db6:	49 89 cd             	mov    %rcx,%r13
    8db9:	41 54                	push   %r12
    8dbb:	49 89 d4             	mov    %rdx,%r12
    8dbe:	55                   	push   %rbp
    8dbf:	53                   	push   %rbx
    8dc0:	89 f3                	mov    %esi,%ebx
    8dc2:	48 83 ec 58          	sub    $0x58,%rsp
    8dc6:	4c 8b 57 10          	mov    0x10(%rdi),%r10
    8dca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8dd1:	00 00 
    8dd3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    8dd8:	31 c0                	xor    %eax,%eax
    8dda:	48 8b 47 08          	mov    0x8(%rdi),%rax
    8dde:	4c 8d 4c 24 20       	lea    0x20(%rsp),%r9
    8de3:	48 89 e5             	mov    %rsp,%rbp
    8de6:	4c 89 ce             	mov    %r9,%rsi
    8de9:	48 89 ef             	mov    %rbp,%rdi
    8dec:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    8df3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8df8:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    8dfd:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    8e02:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    8e09:	00 00 
    8e0b:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
    8e12:	00 
    8e13:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
    8e1a:	00 00 
    8e1c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    8e21:	e8 4a c6 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8e26:	85 c0                	test   %eax,%eax
    8e28:	74 7e                	je     8ea8 <mbedtls_mpi_is_prime_ext+0xf8>
    8e2a:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
    8e31:	00 00 
    8e33:	4c 89 ce             	mov    %r9,%rsi
    8e36:	e8 35 c6 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8e3b:	85 c0                	test   %eax,%eax
    8e3d:	74 69                	je     8ea8 <mbedtls_mpi_is_prime_ext+0xf8>
    8e3f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
    8e46:	00 00 
    8e48:	4c 89 ce             	mov    %r9,%rsi
    8e4b:	e8 20 c6 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    8e50:	85 c0                	test   %eax,%eax
    8e52:	74 4c                	je     8ea0 <mbedtls_mpi_is_prime_ext+0xf0>
    8e54:	41 f6 02 01          	testb  $0x1,(%r10)
    8e58:	74 4e                	je     8ea8 <mbedtls_mpi_is_prime_ext+0xf8>
    8e5a:	e8 d1 e1 ff ff       	callq  7030 <mpi_check_small_factors.part.0>
    8e5f:	85 c0                	test   %eax,%eax
    8e61:	74 25                	je     8e88 <mbedtls_mpi_is_prime_ext+0xd8>
    8e63:	83 f8 01             	cmp    $0x1,%eax
    8e66:	74 38                	je     8ea0 <mbedtls_mpi_is_prime_ext+0xf0>
    8e68:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    8e6d:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    8e74:	00 00 
    8e76:	75 37                	jne    8eaf <mbedtls_mpi_is_prime_ext+0xff>
    8e78:	48 83 c4 58          	add    $0x58,%rsp
    8e7c:	5b                   	pop    %rbx
    8e7d:	5d                   	pop    %rbp
    8e7e:	41 5c                	pop    %r12
    8e80:	41 5d                	pop    %r13
    8e82:	c3                   	retq   
    8e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8e88:	48 63 f3             	movslq %ebx,%rsi
    8e8b:	4c 89 e9             	mov    %r13,%rcx
    8e8e:	4c 89 e2             	mov    %r12,%rdx
    8e91:	48 89 ef             	mov    %rbp,%rdi
    8e94:	e8 c7 f0 ff ff       	callq  7f60 <mpi_miller_rabin>
    8e99:	eb cd                	jmp    8e68 <mbedtls_mpi_is_prime_ext+0xb8>
    8e9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8ea0:	31 c0                	xor    %eax,%eax
    8ea2:	eb c4                	jmp    8e68 <mbedtls_mpi_is_prime_ext+0xb8>
    8ea4:	0f 1f 40 00          	nopl   0x0(%rax)
    8ea8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8ead:	eb b9                	jmp    8e68 <mbedtls_mpi_is_prime_ext+0xb8>
    8eaf:	e8 bc b3 ff ff       	callq  4270 <__stack_chk_fail@plt>
    8eb4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    8ebb:	00 00 00 00 
    8ebf:	90                   	nop

0000000000008ec0 <mbedtls_mpi_gen_prime>:
    8ec0:	f3 0f 1e fa          	endbr64 
    8ec4:	41 57                	push   %r15
    8ec6:	41 56                	push   %r14
    8ec8:	41 55                	push   %r13
    8eca:	41 54                	push   %r12
    8ecc:	55                   	push   %rbp
    8ecd:	53                   	push   %rbx
    8ece:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    8ed5:	48 89 34 24          	mov    %rsi,(%rsp)
    8ed9:	89 54 24 14          	mov    %edx,0x14(%rsp)
    8edd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8ee4:	00 00 
    8ee6:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    8eeb:	31 c0                	xor    %eax,%eax
    8eed:	48 8d 46 fd          	lea    -0x3(%rsi),%rax
    8ef1:	48 3d fd 1f 00 00    	cmp    $0x1ffd,%rax
    8ef7:	0f 87 3f 04 00 00    	ja     933c <mbedtls_mpi_gen_prime+0x47c>
    8efd:	31 c0                	xor    %eax,%eax
    8eff:	40 f6 c6 3f          	test   $0x3f,%sil
    8f03:	49 89 ff             	mov    %rdi,%r15
    8f06:	48 89 cb             	mov    %rcx,%rbx
    8f09:	0f 95 c0             	setne  %al
    8f0c:	89 d7                	mov    %edx,%edi
    8f0e:	48 89 f1             	mov    %rsi,%rcx
    8f11:	48 c1 ee 06          	shr    $0x6,%rsi
    8f15:	48 01 f0             	add    %rsi,%rax
    8f18:	83 e7 02             	and    $0x2,%edi
    8f1b:	4c 89 c5             	mov    %r8,%rbp
    8f1e:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    8f25:	00 
    8f26:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    8f2d:	00 00 
    8f2f:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    8f36:	00 00 
    8f38:	0f 85 02 01 00 00    	jne    9040 <mbedtls_mpi_gen_prime+0x180>
    8f3e:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%rsp)
    8f45:	00 
    8f46:	48 81 f9 13 05 00 00 	cmp    $0x513,%rcx
    8f4d:	77 19                	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    8f4f:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%rsp)
    8f56:	00 
    8f57:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
    8f5e:	0f 86 1c 03 00 00    	jbe    9280 <mbedtls_mpi_gen_prime+0x3c0>
    8f64:	0f 1f 40 00          	nopl   0x0(%rax)
    8f68:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
    8f6f:	00 
    8f70:	48 c1 e0 06          	shl    $0x6,%rax
    8f74:	49 bd 84 64 de f9 33 	movabs $0xb504f333f9de6484,%r13
    8f7b:	f3 04 b5 
    8f7e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8f83:	48 2b 04 24          	sub    (%rsp),%rax
    8f87:	4d 8d 74 24 f8       	lea    -0x8(%r12),%r14
    8f8c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8f91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8f98:	48 89 e9             	mov    %rbp,%rcx
    8f9b:	48 89 da             	mov    %rbx,%rdx
    8f9e:	4c 89 e6             	mov    %r12,%rsi
    8fa1:	4c 89 ff             	mov    %r15,%rdi
    8fa4:	e8 47 ef ff ff       	callq  7ef0 <mbedtls_mpi_fill_random>
    8fa9:	85 c0                	test   %eax,%eax
    8fab:	75 51                	jne    8ffe <mbedtls_mpi_gen_prime+0x13e>
    8fad:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    8fb1:	4e 39 2c 37          	cmp    %r13,(%rdi,%r14,1)
    8fb5:	76 e1                	jbe    8f98 <mbedtls_mpi_gen_prime+0xd8>
    8fb7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    8fbc:	48 39 0c 24          	cmp    %rcx,(%rsp)
    8fc0:	73 0d                	jae    8fcf <mbedtls_mpi_gen_prime+0x10f>
    8fc2:	49 8b 77 08          	mov    0x8(%r15),%rsi
    8fc6:	48 85 f6             	test   %rsi,%rsi
    8fc9:	0f 85 21 01 00 00    	jne    90f0 <mbedtls_mpi_gen_prime+0x230>
    8fcf:	48 8b 07             	mov    (%rdi),%rax
    8fd2:	48 89 c2             	mov    %rax,%rdx
    8fd5:	48 83 ca 01          	or     $0x1,%rdx
    8fd9:	48 89 17             	mov    %rdx,(%rdi)
    8fdc:	f6 44 24 14 01       	testb  $0x1,0x14(%rsp)
    8fe1:	0f 85 21 01 00 00    	jne    9108 <mbedtls_mpi_gen_prime+0x248>
    8fe7:	8b 74 24 10          	mov    0x10(%rsp),%esi
    8feb:	48 89 e9             	mov    %rbp,%rcx
    8fee:	48 89 da             	mov    %rbx,%rdx
    8ff1:	4c 89 ff             	mov    %r15,%rdi
    8ff4:	e8 b7 fd ff ff       	callq  8db0 <mbedtls_mpi_is_prime_ext>
    8ff9:	83 f8 f2             	cmp    $0xfffffff2,%eax
    8ffc:	74 9a                	je     8f98 <mbedtls_mpi_gen_prime+0xd8>
    8ffe:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    9003:	4c 89 e7             	mov    %r12,%rdi
    9006:	89 04 24             	mov    %eax,(%rsp)
    9009:	e8 82 bb ff ff       	callq  4b90 <mbedtls_mpi_free>
    900e:	8b 04 24             	mov    (%rsp),%eax
    9011:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
    9016:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    901d:	00 00 
    901f:	0f 85 21 03 00 00    	jne    9346 <mbedtls_mpi_gen_prime+0x486>
    9025:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    902c:	5b                   	pop    %rbx
    902d:	5d                   	pop    %rbp
    902e:	41 5c                	pop    %r12
    9030:	41 5d                	pop    %r13
    9032:	41 5e                	pop    %r14
    9034:	41 5f                	pop    %r15
    9036:	c3                   	retq   
    9037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    903e:	00 00 
    9040:	48 8b 0c 24          	mov    (%rsp),%rcx
    9044:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
    904b:	00 
    904c:	48 81 f9 a9 05 00 00 	cmp    $0x5a9,%rcx
    9053:	0f 87 0f ff ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    9059:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%rsp)
    9060:	00 
    9061:	48 81 f9 7d 04 00 00 	cmp    $0x47d,%rcx
    9068:	0f 87 fa fe ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    906e:	c7 44 24 10 06 00 00 	movl   $0x6,0x10(%rsp)
    9075:	00 
    9076:	48 81 f9 e7 03 00 00 	cmp    $0x3e7,%rcx
    907d:	0f 87 e5 fe ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    9083:	c7 44 24 10 07 00 00 	movl   $0x7,0x10(%rsp)
    908a:	00 
    908b:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
    9092:	0f 87 d0 fe ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    9098:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
    909f:	00 
    90a0:	48 81 f9 ed 02 00 00 	cmp    $0x2ed,%rcx
    90a7:	0f 87 bb fe ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    90ad:	c7 44 24 10 0d 00 00 	movl   $0xd,0x10(%rsp)
    90b4:	00 
    90b5:	48 81 f9 f3 01 00 00 	cmp    $0x1f3,%rcx
    90bc:	0f 87 a6 fe ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    90c2:	c7 44 24 10 1c 00 00 	movl   $0x1c,0x10(%rsp)
    90c9:	00 
    90ca:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
    90d1:	0f 87 91 fe ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    90d7:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
    90de:	19 c9                	sbb    %ecx,%ecx
    90e0:	83 e1 0b             	and    $0xb,%ecx
    90e3:	83 c1 28             	add    $0x28,%ecx
    90e6:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    90ea:	e9 79 fe ff ff       	jmpq   8f68 <mbedtls_mpi_gen_prime+0xa8>
    90ef:	90                   	nop
    90f0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    90f5:	e8 66 12 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    90fa:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    90fe:	e9 cc fe ff ff       	jmpq   8fcf <mbedtls_mpi_gen_prime+0x10f>
    9103:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9108:	48 83 c8 03          	or     $0x3,%rax
    910c:	ba 03 00 00 00       	mov    $0x3,%edx
    9111:	4c 89 fe             	mov    %r15,%rsi
    9114:	48 89 07             	mov    %rax,(%rdi)
    9117:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    911c:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    9121:	e8 3a da ff ff       	callq  6b60 <mbedtls_mpi_mod_int>
    9126:	85 c0                	test   %eax,%eax
    9128:	0f 85 d5 fe ff ff    	jne    9003 <mbedtls_mpi_gen_prime+0x143>
    912e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    9133:	48 85 c0             	test   %rax,%rax
    9136:	0f 84 9b 01 00 00    	je     92d7 <mbedtls_mpi_gen_prime+0x417>
    913c:	48 83 f8 01          	cmp    $0x1,%rax
    9140:	0f 84 eb 01 00 00    	je     9331 <mbedtls_mpi_gen_prime+0x471>
    9146:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    914b:	4c 89 fe             	mov    %r15,%rsi
    914e:	4c 89 e7             	mov    %r12,%rdi
    9151:	e8 ca bc ff ff       	callq  4e20 <mbedtls_mpi_copy>
    9156:	85 c0                	test   %eax,%eax
    9158:	0f 85 a5 fe ff ff    	jne    9003 <mbedtls_mpi_gen_prime+0x143>
    915e:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    9163:	48 85 f6             	test   %rsi,%rsi
    9166:	0f 85 b1 01 00 00    	jne    931d <mbedtls_mpi_gen_prime+0x45d>
    916c:	48 63 44 24 10       	movslq 0x10(%rsp),%rax
    9171:	48 89 04 24          	mov    %rax,(%rsp)
    9175:	e9 8d 00 00 00       	jmpq   9207 <mbedtls_mpi_gen_prime+0x347>
    917a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9180:	83 f8 f2             	cmp    $0xfffffff2,%eax
    9183:	0f 85 7a fe ff ff    	jne    9003 <mbedtls_mpi_gen_prime+0x143>
    9189:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
    918e:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
    9193:	4c 89 fe             	mov    %r15,%rsi
    9196:	4c 89 ff             	mov    %r15,%rdi
    9199:	b9 01 00 00 00       	mov    $0x1,%ecx
    919e:	4c 89 ea             	mov    %r13,%rdx
    91a1:	48 c7 44 24 70 0c 00 	movq   $0xc,0x70(%rsp)
    91a8:	00 00 
    91aa:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    91b1:	00 
    91b2:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
    91b9:	00 00 
    91bb:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
    91c0:	e8 4b c6 ff ff       	callq  5810 <add_sub_mpi>
    91c5:	85 c0                	test   %eax,%eax
    91c7:	0f 85 36 fe ff ff    	jne    9003 <mbedtls_mpi_gen_prime+0x143>
    91cd:	b9 01 00 00 00       	mov    $0x1,%ecx
    91d2:	4c 89 ea             	mov    %r13,%rdx
    91d5:	4c 89 e6             	mov    %r12,%rsi
    91d8:	4c 89 e7             	mov    %r12,%rdi
    91db:	48 c7 44 24 70 06 00 	movq   $0x6,0x70(%rsp)
    91e2:	00 00 
    91e4:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    91eb:	00 
    91ec:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
    91f3:	00 00 
    91f5:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
    91fa:	e8 11 c6 ff ff       	callq  5810 <add_sub_mpi>
    91ff:	85 c0                	test   %eax,%eax
    9201:	0f 85 fc fd ff ff    	jne    9003 <mbedtls_mpi_gen_prime+0x143>
    9207:	49 8b 47 10          	mov    0x10(%r15),%rax
    920b:	f6 00 01             	testb  $0x1,(%rax)
    920e:	0f 84 75 ff ff ff    	je     9189 <mbedtls_mpi_gen_prime+0x2c9>
    9214:	4c 89 ff             	mov    %r15,%rdi
    9217:	e8 14 de ff ff       	callq  7030 <mpi_check_small_factors.part.0>
    921c:	85 c0                	test   %eax,%eax
    921e:	0f 85 5c ff ff ff    	jne    9180 <mbedtls_mpi_gen_prime+0x2c0>
    9224:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    9229:	f6 00 01             	testb  $0x1,(%rax)
    922c:	0f 84 57 ff ff ff    	je     9189 <mbedtls_mpi_gen_prime+0x2c9>
    9232:	4c 89 e7             	mov    %r12,%rdi
    9235:	e8 f6 dd ff ff       	callq  7030 <mpi_check_small_factors.part.0>
    923a:	85 c0                	test   %eax,%eax
    923c:	0f 85 3e ff ff ff    	jne    9180 <mbedtls_mpi_gen_prime+0x2c0>
    9242:	48 8b 34 24          	mov    (%rsp),%rsi
    9246:	48 89 e9             	mov    %rbp,%rcx
    9249:	48 89 da             	mov    %rbx,%rdx
    924c:	4c 89 ff             	mov    %r15,%rdi
    924f:	e8 0c ed ff ff       	callq  7f60 <mpi_miller_rabin>
    9254:	85 c0                	test   %eax,%eax
    9256:	0f 85 24 ff ff ff    	jne    9180 <mbedtls_mpi_gen_prime+0x2c0>
    925c:	48 8b 34 24          	mov    (%rsp),%rsi
    9260:	48 89 e9             	mov    %rbp,%rcx
    9263:	48 89 da             	mov    %rbx,%rdx
    9266:	4c 89 e7             	mov    %r12,%rdi
    9269:	e8 f2 ec ff ff       	callq  7f60 <mpi_miller_rabin>
    926e:	85 c0                	test   %eax,%eax
    9270:	0f 85 0a ff ff ff    	jne    9180 <mbedtls_mpi_gen_prime+0x2c0>
    9276:	e9 88 fd ff ff       	jmpq   9003 <mbedtls_mpi_gen_prime+0x143>
    927b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9280:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
    9287:	00 
    9288:	48 81 f9 89 02 00 00 	cmp    $0x289,%rcx
    928f:	0f 87 d3 fc ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    9295:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
    929c:	00 
    929d:	48 81 f9 5d 01 00 00 	cmp    $0x15d,%rcx
    92a4:	0f 87 be fc ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    92aa:	c7 44 24 10 0c 00 00 	movl   $0xc,0x10(%rsp)
    92b1:	00 
    92b2:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
    92b9:	0f 87 a9 fc ff ff    	ja     8f68 <mbedtls_mpi_gen_prime+0xa8>
    92bf:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
    92c6:	19 c9                	sbb    %ecx,%ecx
    92c8:	83 e1 09             	and    $0x9,%ecx
    92cb:	83 c1 12             	add    $0x12,%ecx
    92ce:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    92d2:	e9 91 fc ff ff       	jmpq   8f68 <mbedtls_mpi_gen_prime+0xa8>
    92d7:	48 c7 44 24 70 08 00 	movq   $0x8,0x70(%rsp)
    92de:	00 00 
    92e0:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
    92e5:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
    92ea:	4c 89 fe             	mov    %r15,%rsi
    92ed:	4c 89 ff             	mov    %r15,%rdi
    92f0:	b9 01 00 00 00       	mov    $0x1,%ecx
    92f5:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    92fc:	00 
    92fd:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
    9304:	00 00 
    9306:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    930b:	e8 00 c5 ff ff       	callq  5810 <add_sub_mpi>
    9310:	85 c0                	test   %eax,%eax
    9312:	0f 84 2e fe ff ff    	je     9146 <mbedtls_mpi_gen_prime+0x286>
    9318:	e9 e6 fc ff ff       	jmpq   9003 <mbedtls_mpi_gen_prime+0x143>
    931d:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    9322:	ba 01 00 00 00       	mov    $0x1,%edx
    9327:	e8 34 10 00 00       	callq  a360 <mbedtls_mpi_core_shift_r>
    932c:	e9 3b fe ff ff       	jmpq   916c <mbedtls_mpi_gen_prime+0x2ac>
    9331:	48 c7 44 24 70 04 00 	movq   $0x4,0x70(%rsp)
    9338:	00 00 
    933a:	eb a4                	jmp    92e0 <mbedtls_mpi_gen_prime+0x420>
    933c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    9341:	e9 cb fc ff ff       	jmpq   9011 <mbedtls_mpi_gen_prime+0x151>
    9346:	e8 25 af ff ff       	callq  4270 <__stack_chk_fail@plt>
    934b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009350 <mbedtls_mpi_self_test>:
    9350:	f3 0f 1e fa          	endbr64 
    9354:	41 57                	push   %r15
    9356:	48 8d 15 e3 1d 01 00 	lea    0x11de3(%rip),%rdx        # 1b140 <_IO_stdin_used+0x140>
    935d:	be 10 00 00 00       	mov    $0x10,%esi
    9362:	41 56                	push   %r14
    9364:	41 55                	push   %r13
    9366:	41 54                	push   %r12
    9368:	55                   	push   %rbp
    9369:	53                   	push   %rbx
    936a:	89 fb                	mov    %edi,%ebx
    936c:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    9373:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    937a:	00 00 
    937c:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    9383:	00 
    9384:	31 c0                	xor    %eax,%eax
    9386:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    938b:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    9392:	00 
    9393:	48 89 ef             	mov    %rbp,%rdi
    9396:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    939d:	00 
    939e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    93a5:	00 00 
    93a7:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    93ae:	00 00 
    93b0:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    93b7:	00 00 
    93b9:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    93c0:	00 00 
    93c2:	c7 44 24 70 01 00 00 	movl   $0x1,0x70(%rsp)
    93c9:	00 
    93ca:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    93d1:	00 00 
    93d3:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
    93da:	00 00 00 00 00 
    93df:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    93e6:	01 00 00 00 
    93ea:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
    93f1:	00 00 00 00 00 
    93f6:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    93fd:	00 00 00 00 00 
    9402:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
    9409:	01 00 00 00 
    940d:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
    9414:	00 00 00 00 00 
    9419:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
    9420:	00 00 00 00 00 
    9425:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
    942c:	01 00 00 00 
    9430:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
    9437:	00 00 00 00 00 
    943c:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
    9443:	00 00 00 00 00 
    9448:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
    944f:	01 00 00 00 
    9453:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
    945a:	00 00 00 00 00 
    945f:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
    9466:	00 00 00 00 00 
    946b:	e8 f0 c7 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    9470:	85 c0                	test   %eax,%eax
    9472:	0f 84 b8 00 00 00    	je     9530 <mbedtls_mpi_self_test+0x1e0>
    9478:	41 89 c7             	mov    %eax,%r15d
    947b:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
    9480:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
    9485:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
    948c:	00 
    948d:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
    9494:	00 
    9495:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    949c:	00 
    949d:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    94a4:	00 
    94a5:	85 db                	test   %ebx,%ebx
    94a7:	0f 85 d4 00 00 00    	jne    9581 <mbedtls_mpi_self_test+0x231>
    94ad:	48 89 ef             	mov    %rbp,%rdi
    94b0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    94b5:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    94ba:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    94bf:	e8 cc b6 ff ff       	callq  4b90 <mbedtls_mpi_free>
    94c4:	4c 89 e7             	mov    %r12,%rdi
    94c7:	e8 c4 b6 ff ff       	callq  4b90 <mbedtls_mpi_free>
    94cc:	4c 89 ef             	mov    %r13,%rdi
    94cf:	e8 bc b6 ff ff       	callq  4b90 <mbedtls_mpi_free>
    94d4:	4c 89 f7             	mov    %r14,%rdi
    94d7:	e8 b4 b6 ff ff       	callq  4b90 <mbedtls_mpi_free>
    94dc:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    94e1:	4c 89 d7             	mov    %r10,%rdi
    94e4:	e8 a7 b6 ff ff       	callq  4b90 <mbedtls_mpi_free>
    94e9:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    94ee:	4c 89 cf             	mov    %r9,%rdi
    94f1:	e8 9a b6 ff ff       	callq  4b90 <mbedtls_mpi_free>
    94f6:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    94fb:	4c 89 df             	mov    %r11,%rdi
    94fe:	e8 8d b6 ff ff       	callq  4b90 <mbedtls_mpi_free>
    9503:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    950a:	00 
    950b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9512:	00 00 
    9514:	0f 85 f1 08 00 00    	jne    9e0b <mbedtls_mpi_self_test+0xabb>
    951a:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    9521:	44 89 f8             	mov    %r15d,%eax
    9524:	5b                   	pop    %rbx
    9525:	5d                   	pop    %rbp
    9526:	41 5c                	pop    %r12
    9528:	41 5d                	pop    %r13
    952a:	41 5e                	pop    %r14
    952c:	41 5f                	pop    %r15
    952e:	c3                   	retq   
    952f:	90                   	nop
    9530:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
    9535:	be 10 00 00 00       	mov    $0x10,%esi
    953a:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
    953f:	48 8d 15 82 1c 01 00 	lea    0x11c82(%rip),%rdx        # 1b1c8 <_IO_stdin_used+0x1c8>
    9546:	4c 89 e7             	mov    %r12,%rdi
    9549:	e8 12 c7 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    954e:	41 89 c7             	mov    %eax,%r15d
    9551:	85 c0                	test   %eax,%eax
    9553:	0f 84 a7 00 00 00    	je     9600 <mbedtls_mpi_self_test+0x2b0>
    9559:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
    9560:	00 
    9561:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
    9568:	00 
    9569:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    9570:	00 
    9571:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    9578:	00 
    9579:	85 db                	test   %ebx,%ebx
    957b:	0f 84 2c ff ff ff    	je     94ad <mbedtls_mpi_self_test+0x15d>
    9581:	44 89 fa             	mov    %r15d,%edx
    9584:	48 8d 35 0d 1e 01 00 	lea    0x11e0d(%rip),%rsi        # 1b398 <_IO_stdin_used+0x398>
    958b:	bf 01 00 00 00       	mov    $0x1,%edi
    9590:	31 c0                	xor    %eax,%eax
    9592:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9597:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    959c:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    95a1:	e8 aa ad ff ff       	callq  4350 <__printf_chk@plt>
    95a6:	48 89 ef             	mov    %rbp,%rdi
    95a9:	e8 e2 b5 ff ff       	callq  4b90 <mbedtls_mpi_free>
    95ae:	4c 89 e7             	mov    %r12,%rdi
    95b1:	e8 da b5 ff ff       	callq  4b90 <mbedtls_mpi_free>
    95b6:	4c 89 ef             	mov    %r13,%rdi
    95b9:	e8 d2 b5 ff ff       	callq  4b90 <mbedtls_mpi_free>
    95be:	4c 89 f7             	mov    %r14,%rdi
    95c1:	e8 ca b5 ff ff       	callq  4b90 <mbedtls_mpi_free>
    95c6:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    95cb:	4c 89 d7             	mov    %r10,%rdi
    95ce:	e8 bd b5 ff ff       	callq  4b90 <mbedtls_mpi_free>
    95d3:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    95d8:	4c 89 cf             	mov    %r9,%rdi
    95db:	e8 b0 b5 ff ff       	callq  4b90 <mbedtls_mpi_free>
    95e0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    95e5:	4c 89 df             	mov    %r11,%rdi
    95e8:	e8 a3 b5 ff ff       	callq  4b90 <mbedtls_mpi_free>
    95ed:	bf 0a 00 00 00       	mov    $0xa,%edi
    95f2:	e8 09 ac ff ff       	callq  4200 <putchar@plt>
    95f7:	e9 07 ff ff ff       	jmpq   9503 <mbedtls_mpi_self_test+0x1b3>
    95fc:	0f 1f 40 00          	nopl   0x0(%rax)
    9600:	48 8d 15 49 1c 01 00 	lea    0x11c49(%rip),%rdx        # 1b250 <_IO_stdin_used+0x250>
    9607:	be 10 00 00 00       	mov    $0x10,%esi
    960c:	4c 89 ef             	mov    %r13,%rdi
    960f:	e8 4c c6 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    9614:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
    961b:	00 
    961c:	41 89 c7             	mov    %eax,%r15d
    961f:	85 c0                	test   %eax,%eax
    9621:	74 1d                	je     9640 <mbedtls_mpi_self_test+0x2f0>
    9623:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
    962a:	00 
    962b:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    9632:	00 
    9633:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    963a:	00 
    963b:	e9 65 fe ff ff       	jmpq   94a5 <mbedtls_mpi_self_test+0x155>
    9640:	4c 89 ea             	mov    %r13,%rdx
    9643:	48 89 ee             	mov    %rbp,%rsi
    9646:	4c 89 f7             	mov    %r14,%rdi
    9649:	e8 62 c3 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    964e:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
    9655:	00 
    9656:	41 89 c7             	mov    %eax,%r15d
    9659:	85 c0                	test   %eax,%eax
    965b:	0f 85 cf 03 00 00    	jne    9a30 <mbedtls_mpi_self_test+0x6e0>
    9661:	4c 89 cf             	mov    %r9,%rdi
    9664:	be 10 00 00 00       	mov    $0x10,%esi
    9669:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    966e:	48 8d 15 43 1c 01 00 	lea    0x11c43(%rip),%rdx        # 1b2b8 <_IO_stdin_used+0x2b8>
    9675:	e8 e6 c5 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    967a:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    967f:	85 c0                	test   %eax,%eax
    9681:	41 89 c7             	mov    %eax,%r15d
    9684:	0f 85 a6 03 00 00    	jne    9a30 <mbedtls_mpi_self_test+0x6e0>
    968a:	85 db                	test   %ebx,%ebx
    968c:	0f 85 c6 03 00 00    	jne    9a58 <mbedtls_mpi_self_test+0x708>
    9692:	4c 89 ce             	mov    %r9,%rsi
    9695:	4c 89 f7             	mov    %r14,%rdi
    9698:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    969d:	e8 ce bd ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    96a2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    96a7:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    96ae:	00 
    96af:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    96b6:	00 
    96b7:	85 c0                	test   %eax,%eax
    96b9:	0f 85 21 04 00 00    	jne    9ae0 <mbedtls_mpi_self_test+0x790>
    96bf:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    96c6:	00 
    96c7:	4c 89 e9             	mov    %r13,%rcx
    96ca:	48 89 ea             	mov    %rbp,%rdx
    96cd:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    96d2:	4c 89 d6             	mov    %r10,%rsi
    96d5:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    96da:	e8 f1 c9 ff ff       	callq  60d0 <mbedtls_mpi_div_mpi>
    96df:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    96e4:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    96e9:	85 c0                	test   %eax,%eax
    96eb:	41 89 c7             	mov    %eax,%r15d
    96ee:	0f 85 54 03 00 00    	jne    9a48 <mbedtls_mpi_self_test+0x6f8>
    96f4:	4c 89 cf             	mov    %r9,%rdi
    96f7:	be 10 00 00 00       	mov    $0x10,%esi
    96fc:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9701:	48 8d 15 80 1d 01 00 	lea    0x11d80(%rip),%rdx        # 1b488 <_IO_stdin_used+0x488>
    9708:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    970d:	e8 4e c5 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    9712:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9717:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    971c:	85 c0                	test   %eax,%eax
    971e:	41 89 c7             	mov    %eax,%r15d
    9721:	0f 85 21 03 00 00    	jne    9a48 <mbedtls_mpi_self_test+0x6f8>
    9727:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    972e:	00 
    972f:	be 10 00 00 00       	mov    $0x10,%esi
    9734:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    9739:	48 8d 15 70 1d 01 00 	lea    0x11d70(%rip),%rdx        # 1b4b0 <_IO_stdin_used+0x4b0>
    9740:	4c 89 df             	mov    %r11,%rdi
    9743:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9748:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    974d:	e8 0e c5 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    9752:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    9757:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    975c:	85 c0                	test   %eax,%eax
    975e:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    9763:	0f 85 08 04 00 00    	jne    9b71 <mbedtls_mpi_self_test+0x821>
    9769:	4c 89 ce             	mov    %r9,%rsi
    976c:	4c 89 f7             	mov    %r14,%rdi
    976f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9774:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9779:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    977e:	e8 ed bc ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    9783:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9788:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    978d:	85 c0                	test   %eax,%eax
    978f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9794:	0f 85 46 03 00 00    	jne    9ae0 <mbedtls_mpi_self_test+0x790>
    979a:	4c 89 de             	mov    %r11,%rsi
    979d:	4c 89 d7             	mov    %r10,%rdi
    97a0:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    97a5:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    97aa:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    97af:	e8 bc bc ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    97b4:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    97b9:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    97be:	85 c0                	test   %eax,%eax
    97c0:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    97c5:	0f 85 15 03 00 00    	jne    9ae0 <mbedtls_mpi_self_test+0x790>
    97cb:	45 31 c0             	xor    %r8d,%r8d
    97ce:	4c 89 e9             	mov    %r13,%rcx
    97d1:	4c 89 e2             	mov    %r12,%rdx
    97d4:	48 89 ee             	mov    %rbp,%rsi
    97d7:	4c 89 f7             	mov    %r14,%rdi
    97da:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    97df:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    97e4:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    97e9:	e8 e2 d8 ff ff       	callq  70d0 <mbedtls_mpi_exp_mod>
    97ee:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    97f3:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    97f8:	85 c0                	test   %eax,%eax
    97fa:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    97ff:	41 89 c7             	mov    %eax,%r15d
    9802:	0f 85 a5 fc ff ff    	jne    94ad <mbedtls_mpi_self_test+0x15d>
    9808:	4c 89 cf             	mov    %r9,%rdi
    980b:	be 10 00 00 00       	mov    $0x10,%esi
    9810:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9815:	48 8d 15 0c 1c 01 00 	lea    0x11c0c(%rip),%rdx        # 1b428 <_IO_stdin_used+0x428>
    981c:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9821:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9826:	e8 35 c4 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    982b:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9830:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9835:	85 c0                	test   %eax,%eax
    9837:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    983c:	41 89 c7             	mov    %eax,%r15d
    983f:	0f 85 68 fc ff ff    	jne    94ad <mbedtls_mpi_self_test+0x15d>
    9845:	4c 89 ce             	mov    %r9,%rsi
    9848:	4c 89 f7             	mov    %r14,%rdi
    984b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9850:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9855:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    985a:	e8 11 bc ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    985f:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9864:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9869:	85 c0                	test   %eax,%eax
    986b:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9870:	0f 85 6a 02 00 00    	jne    9ae0 <mbedtls_mpi_self_test+0x790>
    9876:	4c 89 ea             	mov    %r13,%rdx
    9879:	48 89 ee             	mov    %rbp,%rsi
    987c:	4c 89 f7             	mov    %r14,%rdi
    987f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9884:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    9889:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    988e:	e8 bd ec ff ff       	callq  8550 <mbedtls_mpi_inv_mod>
    9893:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9898:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    989d:	85 c0                	test   %eax,%eax
    989f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    98a4:	41 89 c7             	mov    %eax,%r15d
    98a7:	0f 85 00 fc ff ff    	jne    94ad <mbedtls_mpi_self_test+0x15d>
    98ad:	4c 89 cf             	mov    %r9,%rdi
    98b0:	be 10 00 00 00       	mov    $0x10,%esi
    98b5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    98ba:	48 8d 15 ff 1a 01 00 	lea    0x11aff(%rip),%rdx        # 1b3c0 <_IO_stdin_used+0x3c0>
    98c1:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    98c6:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    98cb:	e8 90 c3 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    98d0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    98d5:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    98da:	85 c0                	test   %eax,%eax
    98dc:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    98e1:	41 89 c0             	mov    %eax,%r8d
    98e4:	0f 85 39 05 00 00    	jne    9e23 <mbedtls_mpi_self_test+0xad3>
    98ea:	4c 89 ce             	mov    %r9,%rsi
    98ed:	4c 89 f7             	mov    %r14,%rdi
    98f0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    98f5:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    98fa:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    98ff:	e8 6c bb ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    9904:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9909:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    990e:	85 c0                	test   %eax,%eax
    9910:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9915:	0f 85 c5 01 00 00    	jne    9ae0 <mbedtls_mpi_self_test+0x790>
    991b:	48 8d 05 fe 1b 01 00 	lea    0x11bfe(%rip),%rax        # 1b520 <gcd_pairs>
    9922:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
    9929:	00 
    992a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    992f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9934:	4c 89 f7             	mov    %r14,%rdi
    9937:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
    993c:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    9941:	48 63 30             	movslq (%rax),%rsi
    9944:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    9949:	e8 42 b6 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    994e:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    9953:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    9958:	85 c0                	test   %eax,%eax
    995a:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    995f:	41 89 c7             	mov    %eax,%r15d
    9962:	0f 85 3d fb ff ff    	jne    94a5 <mbedtls_mpi_self_test+0x155>
    9968:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    996d:	4c 89 d7             	mov    %r10,%rdi
    9970:	48 63 70 04          	movslq 0x4(%rax),%rsi
    9974:	e8 17 b6 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    9979:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    997e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    9983:	85 c0                	test   %eax,%eax
    9985:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    998a:	41 89 c7             	mov    %eax,%r15d
    998d:	0f 85 12 fb ff ff    	jne    94a5 <mbedtls_mpi_self_test+0x155>
    9993:	4c 89 d2             	mov    %r10,%rdx
    9996:	4c 89 f6             	mov    %r14,%rsi
    9999:	48 89 ef             	mov    %rbp,%rdi
    999c:	e8 0f e2 ff ff       	callq  7bb0 <mbedtls_mpi_gcd>
    99a1:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    99a6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    99ab:	85 c0                	test   %eax,%eax
    99ad:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    99b2:	41 89 c7             	mov    %eax,%r15d
    99b5:	0f 85 ea fa ff ff    	jne    94a5 <mbedtls_mpi_self_test+0x155>
    99bb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    99c0:	48 89 ef             	mov    %rbp,%rdi
    99c3:	48 63 70 08          	movslq 0x8(%rax),%rsi
    99c7:	e8 94 bb ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    99cc:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    99d1:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    99d6:	85 c0                	test   %eax,%eax
    99d8:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    99dd:	41 89 c7             	mov    %eax,%r15d
    99e0:	0f 85 45 04 00 00    	jne    9e2b <mbedtls_mpi_self_test+0xadb>
    99e6:	83 44 24 08 01       	addl   $0x1,0x8(%rsp)
    99eb:	8b 44 24 08          	mov    0x8(%rsp),%eax
    99ef:	48 83 44 24 10 0c    	addq   $0xc,0x10(%rsp)
    99f5:	83 f8 03             	cmp    $0x3,%eax
    99f8:	0f 85 31 ff ff ff    	jne    992f <mbedtls_mpi_self_test+0x5df>
    99fe:	85 db                	test   %ebx,%ebx
    9a00:	0f 84 a7 fa ff ff    	je     94ad <mbedtls_mpi_self_test+0x15d>
    9a06:	48 8d 3d f5 16 01 00 	lea    0x116f5(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
    9a0d:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9a12:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    9a17:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9a1c:	e8 ef a7 ff ff       	callq  4210 <puts@plt>
    9a21:	e9 80 fb ff ff       	jmpq   95a6 <mbedtls_mpi_self_test+0x256>
    9a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9a2d:	00 00 00 
    9a30:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    9a37:	00 
    9a38:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    9a3f:	00 
    9a40:	e9 60 fa ff ff       	jmpq   94a5 <mbedtls_mpi_self_test+0x155>
    9a45:	0f 1f 00             	nopl   (%rax)
    9a48:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    9a4f:	00 
    9a50:	e9 58 fa ff ff       	jmpq   94ad <mbedtls_mpi_self_test+0x15d>
    9a55:	0f 1f 00             	nopl   (%rax)
    9a58:	48 8d 35 47 16 01 00 	lea    0x11647(%rip),%rsi        # 1b0a6 <_IO_stdin_used+0xa6>
    9a5f:	bf 01 00 00 00       	mov    $0x1,%edi
    9a64:	31 c0                	xor    %eax,%eax
    9a66:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9a6b:	e8 e0 a8 ff ff       	callq  4350 <__printf_chk@plt>
    9a70:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9a75:	4c 89 f7             	mov    %r14,%rdi
    9a78:	4c 89 ce             	mov    %r9,%rsi
    9a7b:	e8 f0 b9 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    9a80:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9a85:	85 c0                	test   %eax,%eax
    9a87:	75 62                	jne    9aeb <mbedtls_mpi_self_test+0x79b>
    9a89:	48 8d 3d 72 16 01 00 	lea    0x11672(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
    9a90:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    9a95:	e8 76 a7 ff ff       	callq  4210 <puts@plt>
    9a9a:	48 89 ea             	mov    %rbp,%rdx
    9a9d:	4c 89 e9             	mov    %r13,%rcx
    9aa0:	4c 89 f7             	mov    %r14,%rdi
    9aa3:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    9aaa:	00 
    9aab:	4c 89 d6             	mov    %r10,%rsi
    9aae:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9ab3:	e8 18 c6 ff ff       	callq  60d0 <mbedtls_mpi_div_mpi>
    9ab8:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9abd:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    9ac2:	85 c0                	test   %eax,%eax
    9ac4:	89 c2                	mov    %eax,%edx
    9ac6:	74 6d                	je     9b35 <mbedtls_mpi_self_test+0x7e5>
    9ac8:	41 89 c7             	mov    %eax,%r15d
    9acb:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    9ad2:	00 
    9ad3:	e9 ac fa ff ff       	jmpq   9584 <mbedtls_mpi_self_test+0x234>
    9ad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9adf:	00 
    9ae0:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    9ae6:	e9 c2 f9 ff ff       	jmpq   94ad <mbedtls_mpi_self_test+0x15d>
    9aeb:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    9af2:	00 
    9af3:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
    9afa:	00 
    9afb:	48 8d 3d bb 9a 01 00 	lea    0x19abb(%rip),%rdi        # 235bd <sha1_test_buf+0xbd>
    9b02:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9b07:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    9b0d:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    9b12:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9b17:	e8 f4 a6 ff ff       	callq  4210 <puts@plt>
    9b1c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9b21:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    9b26:	ba 01 00 00 00       	mov    $0x1,%edx
    9b2b:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9b30:	e9 4f fa ff ff       	jmpq   9584 <mbedtls_mpi_self_test+0x234>
    9b35:	4c 89 cf             	mov    %r9,%rdi
    9b38:	be 10 00 00 00       	mov    $0x10,%esi
    9b3d:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9b42:	48 8d 15 3f 19 01 00 	lea    0x1193f(%rip),%rdx        # 1b488 <_IO_stdin_used+0x488>
    9b49:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9b4e:	e8 0d c1 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    9b53:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9b58:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9b5d:	85 c0                	test   %eax,%eax
    9b5f:	74 18                	je     9b79 <mbedtls_mpi_self_test+0x829>
    9b61:	41 89 c7             	mov    %eax,%r15d
    9b64:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    9b6b:	00 
    9b6c:	e9 10 fa ff ff       	jmpq   9581 <mbedtls_mpi_self_test+0x231>
    9b71:	41 89 c7             	mov    %eax,%r15d
    9b74:	e9 2c f9 ff ff       	jmpq   94a5 <mbedtls_mpi_self_test+0x155>
    9b79:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
    9b80:	00 
    9b81:	be 10 00 00 00       	mov    $0x10,%esi
    9b86:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    9b8b:	48 8d 15 1e 19 01 00 	lea    0x1191e(%rip),%rdx        # 1b4b0 <_IO_stdin_used+0x4b0>
    9b92:	4c 89 df             	mov    %r11,%rdi
    9b95:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9b9a:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    9b9f:	e8 bc c0 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    9ba4:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    9ba9:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9bae:	85 c0                	test   %eax,%eax
    9bb0:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    9bb5:	75 ba                	jne    9b71 <mbedtls_mpi_self_test+0x821>
    9bb7:	48 8d 35 02 15 01 00 	lea    0x11502(%rip),%rsi        # 1b0c0 <_IO_stdin_used+0xc0>
    9bbe:	bf 01 00 00 00       	mov    $0x1,%edi
    9bc3:	31 c0                	xor    %eax,%eax
    9bc5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9bca:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9bcf:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9bd4:	e8 77 a7 ff ff       	callq  4350 <__printf_chk@plt>
    9bd9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9bde:	4c 89 f7             	mov    %r14,%rdi
    9be1:	4c 89 ce             	mov    %r9,%rsi
    9be4:	e8 87 b8 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    9be9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9bee:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9bf3:	85 c0                	test   %eax,%eax
    9bf5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9bfa:	0f 85 fb fe ff ff    	jne    9afb <mbedtls_mpi_self_test+0x7ab>
    9c00:	4c 89 de             	mov    %r11,%rsi
    9c03:	4c 89 d7             	mov    %r10,%rdi
    9c06:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    9c0b:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    9c10:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9c15:	e8 56 b8 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    9c1a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9c1f:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    9c24:	85 c0                	test   %eax,%eax
    9c26:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    9c2b:	0f 85 ca fe ff ff    	jne    9afb <mbedtls_mpi_self_test+0x7ab>
    9c31:	48 8d 3d ca 14 01 00 	lea    0x114ca(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
    9c38:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9c3d:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    9c42:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9c47:	e8 c4 a5 ff ff       	callq  4210 <puts@plt>
    9c4c:	45 31 c0             	xor    %r8d,%r8d
    9c4f:	4c 89 e9             	mov    %r13,%rcx
    9c52:	4c 89 e2             	mov    %r12,%rdx
    9c55:	48 89 ee             	mov    %rbp,%rsi
    9c58:	4c 89 f7             	mov    %r14,%rdi
    9c5b:	e8 70 d4 ff ff       	callq  70d0 <mbedtls_mpi_exp_mod>
    9c60:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9c65:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    9c6a:	85 c0                	test   %eax,%eax
    9c6c:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9c71:	41 89 c0             	mov    %eax,%r8d
    9c74:	0f 85 96 01 00 00    	jne    9e10 <mbedtls_mpi_self_test+0xac0>
    9c7a:	4c 89 cf             	mov    %r9,%rdi
    9c7d:	be 10 00 00 00       	mov    $0x10,%esi
    9c82:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9c87:	48 8d 15 9a 17 01 00 	lea    0x1179a(%rip),%rdx        # 1b428 <_IO_stdin_used+0x428>
    9c8e:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9c93:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9c98:	e8 c3 bf ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    9c9d:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9ca2:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9ca7:	85 c0                	test   %eax,%eax
    9ca9:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9cae:	41 89 c0             	mov    %eax,%r8d
    9cb1:	0f 85 64 01 00 00    	jne    9e1b <mbedtls_mpi_self_test+0xacb>
    9cb7:	48 8d 35 68 14 01 00 	lea    0x11468(%rip),%rsi        # 1b126 <_IO_stdin_used+0x126>
    9cbe:	bf 01 00 00 00       	mov    $0x1,%edi
    9cc3:	31 c0                	xor    %eax,%eax
    9cc5:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9cca:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9ccf:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9cd4:	e8 77 a6 ff ff       	callq  4350 <__printf_chk@plt>
    9cd9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9cde:	4c 89 f7             	mov    %r14,%rdi
    9ce1:	4c 89 ce             	mov    %r9,%rsi
    9ce4:	e8 87 b7 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    9ce9:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9cee:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9cf3:	85 c0                	test   %eax,%eax
    9cf5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9cfa:	0f 85 fb fd ff ff    	jne    9afb <mbedtls_mpi_self_test+0x7ab>
    9d00:	48 8d 3d fb 13 01 00 	lea    0x113fb(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
    9d07:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9d0c:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    9d11:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9d16:	e8 f5 a4 ff ff       	callq  4210 <puts@plt>
    9d1b:	4c 89 ea             	mov    %r13,%rdx
    9d1e:	48 89 ee             	mov    %rbp,%rsi
    9d21:	4c 89 f7             	mov    %r14,%rdi
    9d24:	e8 27 e8 ff ff       	callq  8550 <mbedtls_mpi_inv_mod>
    9d29:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9d2e:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    9d33:	85 c0                	test   %eax,%eax
    9d35:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9d3a:	41 89 c0             	mov    %eax,%r8d
    9d3d:	0f 85 cd 00 00 00    	jne    9e10 <mbedtls_mpi_self_test+0xac0>
    9d43:	4c 89 cf             	mov    %r9,%rdi
    9d46:	be 10 00 00 00       	mov    $0x10,%esi
    9d4b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9d50:	48 8d 15 69 16 01 00 	lea    0x11669(%rip),%rdx        # 1b3c0 <_IO_stdin_used+0x3c0>
    9d57:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9d5c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9d61:	e8 fa be ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    9d66:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9d6b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9d70:	85 c0                	test   %eax,%eax
    9d72:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9d77:	41 89 c0             	mov    %eax,%r8d
    9d7a:	0f 85 9b 00 00 00    	jne    9e1b <mbedtls_mpi_self_test+0xacb>
    9d80:	48 8d 35 53 13 01 00 	lea    0x11353(%rip),%rsi        # 1b0da <_IO_stdin_used+0xda>
    9d87:	bf 01 00 00 00       	mov    $0x1,%edi
    9d8c:	31 c0                	xor    %eax,%eax
    9d8e:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9d93:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9d98:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    9d9d:	e8 ae a5 ff ff       	callq  4350 <__printf_chk@plt>
    9da2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9da7:	4c 89 f7             	mov    %r14,%rdi
    9daa:	4c 89 ce             	mov    %r9,%rsi
    9dad:	e8 be b6 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    9db2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    9db7:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9dbc:	85 c0                	test   %eax,%eax
    9dbe:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9dc3:	0f 85 32 fd ff ff    	jne    9afb <mbedtls_mpi_self_test+0x7ab>
    9dc9:	48 8d 3d 32 13 01 00 	lea    0x11332(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
    9dd0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9dd5:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    9dda:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9ddf:	e8 2c a4 ff ff       	callq  4210 <puts@plt>
    9de4:	48 8d 35 1e 13 01 00 	lea    0x1131e(%rip),%rsi        # 1b109 <_IO_stdin_used+0x109>
    9deb:	bf 01 00 00 00       	mov    $0x1,%edi
    9df0:	31 c0                	xor    %eax,%eax
    9df2:	e8 59 a5 ff ff       	callq  4350 <__printf_chk@plt>
    9df7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9dfc:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    9e01:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9e06:	e9 10 fb ff ff       	jmpq   991b <mbedtls_mpi_self_test+0x5cb>
    9e0b:	e8 60 a4 ff ff       	callq  4270 <__stack_chk_fail@plt>
    9e10:	45 89 c7             	mov    %r8d,%r15d
    9e13:	44 89 c2             	mov    %r8d,%edx
    9e16:	e9 69 f7 ff ff       	jmpq   9584 <mbedtls_mpi_self_test+0x234>
    9e1b:	45 89 c7             	mov    %r8d,%r15d
    9e1e:	e9 5e f7 ff ff       	jmpq   9581 <mbedtls_mpi_self_test+0x231>
    9e23:	45 89 c7             	mov    %r8d,%r15d
    9e26:	e9 82 f6 ff ff       	jmpq   94ad <mbedtls_mpi_self_test+0x15d>
    9e2b:	85 db                	test   %ebx,%ebx
    9e2d:	0f 84 ad fc ff ff    	je     9ae0 <mbedtls_mpi_self_test+0x790>
    9e33:	8b 54 24 08          	mov    0x8(%rsp),%edx
    9e37:	bf 01 00 00 00       	mov    $0x1,%edi
    9e3c:	31 c0                	xor    %eax,%eax
    9e3e:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
    9e43:	48 8d 35 aa 12 01 00 	lea    0x112aa(%rip),%rsi        # 1b0f4 <_IO_stdin_used+0xf4>
    9e4a:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    9e4f:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    9e55:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    9e5a:	e8 f1 a4 ff ff       	callq  4350 <__printf_chk@plt>
    9e5f:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    9e64:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    9e69:	ba 01 00 00 00       	mov    $0x1,%edx
    9e6e:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    9e73:	e9 0c f7 ff ff       	jmpq   9584 <mbedtls_mpi_self_test+0x234>
    9e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9e7f:	00 

0000000000009e80 <mbedtls_mpi_core_bitlen.part.0>:
    9e80:	e9 6b 8b 02 00       	jmpq   329f0 <mbedtls_mpi_core_bitlen.part.0.instr.bb_9e80>
    9e85:	3a e9                	cmp    %cl,%ch
    9e87:	71 8b                	jno    9e14 <mbedtls_mpi_self_test+0xac4>
    9e89:	02 00                	add    (%rax),%al
    9e8b:	85 c0                	test   %eax,%eax
    9e8d:	74 f1                	je     9e80 <mbedtls_mpi_core_bitlen.part.0>
    9e8f:	e9 7d 8b 02 00       	jmpq   32a11 <instr.bb_9e8f>
    9e94:	c1 e0 06             	shl    $0x6,%eax
    9e97:	e9 7d 8b 02 00       	jmpq   32a19 <instr.bb_9e97>
    9e9c:	00 00                	add    %al,(%rax)
    9e9e:	00 00                	add    %al,(%rax)
    9ea0:	80 31 d2             	xorb   $0xd2,(%rcx)
    9ea3:	eb 10                	jmp    9eb5 <mbedtls_mpi_core_bitlen.part.0+0x35>
    9ea5:	0f 1f 00             	nopl   (%rax)
    9ea8:	e9 83 8b 02 00       	jmpq   32a30 <instr.bb_9ea8>
    9ead:	e9 9a 8b 02 00       	jmpq   32a4c <instr.bb_9eba>
    9eb2:	40 74 05             	rex je 9eba <mbedtls_mpi_core_bitlen.part.0+0x3a>
    9eb5:	e9 87 8b 02 00       	jmpq   32a41 <instr.bb_9eb5>
    9eba:	eb f1                	jmp    9ead <mbedtls_mpi_core_bitlen.part.0+0x2d>
    9ebc:	d0 c3                	rol    %bl
    9ebe:	66 90                	xchg   %ax,%ax
    9ec0:	4c 8b 07             	mov    (%rdi),%r8
    9ec3:	b8 40 00 00 00       	mov    $0x40,%eax
    9ec8:	eb cd                	jmp    9e97 <mbedtls_mpi_core_bitlen.part.0+0x17>
    9eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000009ed0 <mbedtls_mpi_core_bigendian_to_host.part.0>:
    9ed0:	e9 7b 8b 02 00       	jmpq   32a50 <mbedtls_mpi_core_bigendian_to_host.part.0.instr.bb_9ed0>
    9ed5:	48 39 c7             	cmp    %rax,%rdi
    9ed8:	77 27                	ja     9f01 <mbedtls_mpi_core_bigendian_to_host.part.0+0x31>
    9eda:	e9 81 8b 02 00       	jmpq   32a60 <instr.bb_9ee0>
    9edf:	00 e9                	add    %ch,%cl
    9ee1:	7b 8b                	jnp    9e6e <mbedtls_mpi_self_test+0xb1e>
    9ee3:	02 00                	add    (%rax),%al
    9ee5:	08 48 83             	or     %cl,-0x7d(%rax)
    9ee8:	c7                   	(bad)  
    9ee9:	08 48 83             	or     %cl,-0x7d(%rax)
    9eec:	e8 08 48 0f ca       	callq  ffffffffca0fe6f9 <.instr.bb_1ab88+0xffffffffca0c8c29>
    9ef1:	48 0f c9             	bswap  %rcx
    9ef4:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
    9ef8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9efc:	48 39 c7             	cmp    %rax,%rdi
    9eff:	76 df                	jbe    9ee0 <mbedtls_mpi_core_bigendian_to_host.part.0+0x10>
    9f01:	c3                   	retq   
    9f02:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9f09:	00 00 00 00 
    9f0d:	0f 1f 00             	nopl   (%rax)

0000000000009f10 <mbedtls_mpi_core_clz>:
    9f10:	f3 0f 1e fa          	endbr64 
    9f14:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
    9f1b:	00 00 80 
    9f1e:	31 c0                	xor    %eax,%eax
    9f20:	eb 13                	jmp    9f35 <mbedtls_mpi_core_clz+0x25>
    9f22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9f28:	48 83 c0 01          	add    $0x1,%rax
    9f2c:	48 d1 ea             	shr    %rdx
    9f2f:	48 83 f8 40          	cmp    $0x40,%rax
    9f33:	74 05                	je     9f3a <mbedtls_mpi_core_clz+0x2a>
    9f35:	48 85 d7             	test   %rdx,%rdi
    9f38:	74 ee                	je     9f28 <mbedtls_mpi_core_clz+0x18>
    9f3a:	c3                   	retq   
    9f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009f40 <mbedtls_mpi_core_bitlen>:
    9f40:	e9 9b 8b 02 00       	jmpq   32ae0 <mbedtls_mpi_core_bitlen.instr.bb_9f40>
    9f45:	85 f6                	test   %esi,%esi
    9f47:	74 07                	je     9f50 <mbedtls_mpi_core_bitlen+0x10>
    9f49:	e9 a1 8b 02 00       	jmpq   32aef <instr.bb_9f49>
    9f4e:	66 90                	xchg   %ax,%ax
    9f50:	31 c0                	xor    %eax,%eax
    9f52:	c3                   	retq   
    9f53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9f5a:	00 00 00 00 
    9f5e:	66 90                	xchg   %ax,%ax

0000000000009f60 <mbedtls_mpi_core_bigendian_to_host>:
    9f60:	f3 0f 1e fa          	endbr64 
    9f64:	48 85 f6             	test   %rsi,%rsi
    9f67:	74 07                	je     9f70 <mbedtls_mpi_core_bigendian_to_host+0x10>
    9f69:	e9 62 ff ff ff       	jmpq   9ed0 <mbedtls_mpi_core_bigendian_to_host.part.0>
    9f6e:	66 90                	xchg   %ax,%ax
    9f70:	c3                   	retq   
    9f71:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9f78:	00 00 00 00 
    9f7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009f80 <mbedtls_mpi_core_uint_le_mpi>:
    9f80:	e9 7b 8b 02 00       	jmpq   32b00 <mbedtls_mpi_core_uint_le_mpi.instr.bb_9f80>
    9f85:	54                   	push   %rsp
    9f86:	49 89 d4             	mov    %rdx,%r12
    9f89:	55                   	push   %rbp
    9f8a:	48 89 f5             	mov    %rsi,%rbp
    9f8d:	48 89 fe             	mov    %rdi,%rsi
    9f90:	53                   	push   %rbx
    9f91:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    9f95:	e8 f6 10 00 00       	callq  b090 <mbedtls_ct_mpi_uint_lt>
    9f9a:	e9 95 8b 02 00       	jmpq   32b34 <instr.bb_9f9a>
    9f9f:	49 83 fc 01          	cmp    $0x1,%r12
    9fa3:	76 2b                	jbe    9fd0 <mbedtls_mpi_core_uint_le_mpi+0x50>
    9fa5:	e9 99 8b 02 00       	jmpq   32b43 <instr.bb_9fa5>
    9faa:	8d 54 e5 00          	lea    0x0(%rbp,%riz,8),%edx
    9fae:	31 ff                	xor    %edi,%edi
    9fb0:	e9 99 8b 02 00       	jmpq   32b4e <instr.bb_9fb0>
    9fb5:	c0 08 48             	rorb   $0x48,(%rax)
    9fb8:	39 d0                	cmp    %edx,%eax
    9fba:	75 f4                	jne    9fb0 <mbedtls_mpi_core_uint_le_mpi+0x30>
    9fbc:	e9 9d 8b 02 00       	jmpq   32b5e <instr.bb_9fbc>
    9fc1:	e9 9d 8b 02 00       	jmpq   32b63 <instr.bb_9fc1>
    9fc6:	5b                   	pop    %rbx
    9fc7:	5d                   	pop    %rbp
    9fc8:	41 5c                	pop    %r12
    9fca:	c3                   	retq   
    9fcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9fd0:	31 ff                	xor    %edi,%edi
    9fd2:	e8 59 10 00 00       	callq  b030 <mbedtls_ct_mpi_uint_mask>
    9fd7:	83 e0 01             	and    $0x1,%eax
    9fda:	09 d8                	or     %ebx,%eax
    9fdc:	5b                   	pop    %rbx
    9fdd:	5d                   	pop    %rbp
    9fde:	41 5c                	pop    %r12
    9fe0:	c3                   	retq   
    9fe1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9fe8:	00 00 00 00 
    9fec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009ff0 <mbedtls_mpi_core_cond_assign>:
    9ff0:	f3 0f 1e fa          	endbr64 
    9ff4:	49 89 f8             	mov    %rdi,%r8
    9ff7:	48 89 d7             	mov    %rdx,%rdi
    9ffa:	49 39 f0             	cmp    %rsi,%r8
    9ffd:	74 11                	je     a010 <mbedtls_mpi_core_cond_assign+0x20>
    9fff:	48 89 f2             	mov    %rsi,%rdx
    a002:	0f b6 c9             	movzbl %cl,%ecx
    a005:	4c 89 c6             	mov    %r8,%rsi
    a008:	e9 c3 10 00 00       	jmpq   b0d0 <mbedtls_ct_mpi_uint_cond_assign>
    a00d:	0f 1f 00             	nopl   (%rax)
    a010:	c3                   	retq   
    a011:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a018:	00 00 00 00 
    a01c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a020 <mbedtls_mpi_core_cond_swap>:
    a020:	e9 4b 8b 02 00       	jmpq   32b70 <mbedtls_mpi_core_cond_swap.instr.bb_a020>
    a025:	39 f7                	cmp    %esi,%edi
    a027:	74 57                	je     a080 <mbedtls_mpi_core_cond_swap+0x60>
    a029:	e9 8d 8b 02 00       	jmpq   32bbb <instr.bb_a029>
    a02e:	55                   	push   %rbp
    a02f:	48 89 fd             	mov    %rdi,%rbp
    a032:	0f b6 f9             	movzbl %cl,%edi
    a035:	53                   	push   %rbx
    a036:	48 89 f3             	mov    %rsi,%rbx
    a039:	e8 f2 0f 00 00       	callq  b030 <mbedtls_ct_mpi_uint_mask>
    a03e:	e9 b3 8b 02 00       	jmpq   32bf6 <instr.bb_a03e>
    a043:	e9 b7 8b 02 00       	jmpq   32bff <instr.bb_a043>
    a048:	e9 bb 8b 02 00       	jmpq   32c08 <instr.bb_a048>
    a04d:	4c 8b 04 fb          	mov    (%rbx,%rdi,8),%r8
    a051:	49 31 c8             	xor    %rcx,%r8
    a054:	49 21 c0             	and    %rax,%r8
    a057:	49 31 c8             	xor    %rcx,%r8
    a05a:	4c 89 44 fd 00       	mov    %r8,0x0(%rbp,%rdi,8)
    a05f:	48 8b 34 fb          	mov    (%rbx,%rdi,8),%rsi
    a063:	48 31 f1             	xor    %rsi,%rcx
    a066:	48 21 c1             	and    %rax,%rcx
    a069:	48 31 f1             	xor    %rsi,%rcx
    a06c:	48 89 0c fb          	mov    %rcx,(%rbx,%rdi,8)
    a070:	48 83 c7 01          	add    $0x1,%rdi
    a074:	49 39 fc             	cmp    %rdi,%r12
    a077:	75 cf                	jne    a048 <mbedtls_mpi_core_cond_swap+0x28>
    a079:	e9 bf 8b 02 00       	jmpq   32c3d <instr.bb_a079>
    a07e:	66 90                	xchg   %ax,%ax
    a080:	c3                   	retq   
    a081:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a088:	00 00 00 00 
    a08c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a090 <mbedtls_mpi_core_read_le>:
    a090:	e9 bb 8b 02 00       	jmpq   32c50 <mbedtls_mpi_core_read_le.instr.bb_a090>
    a095:	31 c0                	xor    %eax,%eax
    a097:	48 89 d5             	mov    %rdx,%rbp
    a09a:	48 89 ca             	mov    %rcx,%rdx
    a09d:	53                   	push   %rbx
    a09e:	48 83 ec 08          	sub    $0x8,%rsp
    a0a2:	f6 c1 07             	test   $0x7,%cl
    a0a5:	0f 95 c0             	setne  %al
    a0a8:	48 c1 ea 03          	shr    $0x3,%rdx
    a0ac:	48 01 d0             	add    %rdx,%rax
    a0af:	48 39 f0             	cmp    %rsi,%rax
    a0b2:	77 54                	ja     a108 <mbedtls_mpi_core_read_le+0x78>
    a0b4:	e9 da 8b 02 00       	jmpq   32c93 <instr.bb_a0b4>
    a0b9:	e9 de 8b 02 00       	jmpq   32c9c <instr.bb_a0b9>
    a0be:	00 00                	add    %al,(%rax)
    a0c0:	00 31                	add    %dh,(%rcx)
    a0c2:	f6 48 89 cb          	testb  $0xcb,-0x77(%rax)
    a0c6:	e8 d5 a1 ff ff       	callq  42a0 <memset@plt>
    a0cb:	e9 de 8b 02 00       	jmpq   32cae <instr.bb_a0cb>
    a0d0:	db 74 2c e9          	(bad)  -0x17(%rsp,%rbp,1)
    a0d4:	e2 8b                	loop   a061 <mbedtls_mpi_core_cond_swap+0x41>
    a0d6:	02 00                	add    (%rax),%al
    a0d8:	e9 e3 8b 02 00       	jmpq   32cc0 <instr.bb_a0d8>
    a0dd:	48 89 c6             	mov    %rax,%rsi
    a0e0:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    a0e7:	00 
    a0e8:	48 83 c0 01          	add    $0x1,%rax
    a0ec:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    a0f0:	83 e1 38             	and    $0x38,%ecx
    a0f3:	48 d3 e2             	shl    %cl,%rdx
    a0f6:	48 09 14 37          	or     %rdx,(%rdi,%rsi,1)
    a0fa:	48 39 c3             	cmp    %rax,%rbx
    a0fd:	75 d9                	jne    a0d8 <mbedtls_mpi_core_read_le+0x48>
    a0ff:	e9 e7 8b 02 00       	jmpq   32ceb <instr.bb_a0ff>
    a104:	08 5b 5d             	or     %bl,0x5d(%rbx)
    a107:	c3                   	retq   
    a108:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    a10d:	eb f2                	jmp    a101 <mbedtls_mpi_core_read_le+0x71>
    a10f:	90                   	nop

000000000000a110 <mbedtls_mpi_core_read_be>:
    a110:	e9 eb 8b 02 00       	jmpq   32d00 <mbedtls_mpi_core_read_be.instr.bb_a110>
    a115:	56                   	push   %rsi
    a116:	31 c0                	xor    %eax,%eax
    a118:	49 89 d6             	mov    %rdx,%r14
    a11b:	f6 c1 07             	test   $0x7,%cl
    a11e:	48 89 ca             	mov    %rcx,%rdx
    a121:	0f 95 c0             	setne  %al
    a124:	41 55                	push   %r13
    a126:	48 c1 ea 03          	shr    $0x3,%rdx
    a12a:	41 54                	push   %r12
    a12c:	48 01 d0             	add    %rdx,%rax
    a12f:	55                   	push   %rbp
    a130:	53                   	push   %rbx
    a131:	48 39 f0             	cmp    %rsi,%rax
    a134:	77 6a                	ja     a1a0 <mbedtls_mpi_core_read_be+0x90>
    a136:	e9 1a 8c 02 00       	jmpq   32d55 <instr.bb_a136>
    a13b:	48 85 f6             	test   %rsi,%rsi
    a13e:	75 10                	jne    a150 <mbedtls_mpi_core_read_be+0x40>
    a140:	e9 1e 8c 02 00       	jmpq   32d63 <instr.bb_a140>
    a145:	5d                   	pop    %rbp
    a146:	41 5e                	pop    %r14
    a148:	c3                   	retq   
    a149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a150:	48 8d 1c f5 00 00 00 	lea    0x0(,%rsi,8),%rbx
    a157:	00 
    a158:	49 89 cc             	mov    %rcx,%r12
    a15b:	31 f6                	xor    %esi,%esi
    a15d:	49 89 fd             	mov    %rdi,%r13
    a160:	48 89 da             	mov    %rbx,%rdx
    a163:	e8 38 a1 ff ff       	callq  42a0 <memset@plt>
    a168:	4d 85 e4             	test   %r12,%r12
    a16b:	75 1b                	jne    a188 <mbedtls_mpi_core_read_be+0x78>
    a16d:	48 89 ee             	mov    %rbp,%rsi
    a170:	4c 89 ef             	mov    %r13,%rdi
    a173:	e8 58 fd ff ff       	callq  9ed0 <mbedtls_mpi_core_bigendian_to_host.part.0>
    a178:	5b                   	pop    %rbx
    a179:	31 c0                	xor    %eax,%eax
    a17b:	5d                   	pop    %rbp
    a17c:	41 5c                	pop    %r12
    a17e:	41 5d                	pop    %r13
    a180:	41 5e                	pop    %r14
    a182:	c3                   	retq   
    a183:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a188:	4c 29 e3             	sub    %r12,%rbx
    a18b:	4c 89 e2             	mov    %r12,%rdx
    a18e:	4c 89 f6             	mov    %r14,%rsi
    a191:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
    a196:	e8 85 a1 ff ff       	callq  4320 <memcpy@plt>
    a19b:	eb d0                	jmp    a16d <mbedtls_mpi_core_read_be+0x5d>
    a19d:	0f 1f 00             	nopl   (%rax)
    a1a0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    a1a5:	eb 99                	jmp    a140 <mbedtls_mpi_core_read_be+0x30>
    a1a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a1ae:	00 00 

000000000000a1b0 <mbedtls_mpi_core_write_le>:
    a1b0:	e9 bb 8b 02 00       	jmpq   32d70 <mbedtls_mpi_core_write_le.instr.bb_a1b0>
    a1b5:	e9 cc 8b 02 00       	jmpq   32d86 <instr.bb_a1c4>
    a1ba:	c9                   	leaveq 
    a1bb:	48 39 ce             	cmp    %rcx,%rsi
    a1be:	0f 82 8c 00 00 00    	jb     a250 <mbedtls_mpi_core_write_le+0xa0>
    a1c4:	eb ef                	jmp    a1b5 <mbedtls_mpi_core_write_le+0x5>
    a1c6:	e9 c1 8b 02 00       	jmpq   32d8c <instr.bb_a1c6>
    a1cb:	07                   	(bad)  
    a1cc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a1d0:	c1 e1 03             	shl    $0x3,%ecx
    a1d3:	48 8b 04 07          	mov    (%rdi,%rax,1),%rax
    a1d7:	48 d3 e8             	shr    %cl,%rax
    a1da:	84 c0                	test   %al,%al
    a1dc:	0f 85 96 00 00 00    	jne    a278 <mbedtls_mpi_core_write_le+0xc8>
    a1e2:	e9 c1 8b 02 00       	jmpq   32da8 <instr.bb_a1e2>
    a1e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a1ee:	00 00 
    a1f0:	e9 bb 8b 02 00       	jmpq   32db0 <instr.bb_a1f0>
    a1f5:	e9 f0 8b 02 00       	jmpq   32dea <instr.bb_a21c>
    a1fa:	e9 21 8c 02 00       	jmpq   32e20 <instr.bb_a248>
    a1ff:	07                   	(bad)  
    a200:	c1 e1 03             	shl    $0x3,%ecx
    a203:	49 d3 e8             	shr    %cl,%r8
    a206:	45 84 c0             	test   %r8b,%r8b
    a209:	75 6d                	jne    a278 <mbedtls_mpi_core_write_le+0xc8>
    a20b:	e9 bf 8b 02 00       	jmpq   32dcf <instr.bb_a20b>
    a210:	39 c6                	cmp    %eax,%esi
    a212:	75 dc                	jne    a1f0 <mbedtls_mpi_core_write_le+0x40>
    a214:	e9 c5 8b 02 00       	jmpq   32dde <instr.bb_a214>
    a219:	c9                   	leaveq 
    a21a:	74 2c                	je     a248 <mbedtls_mpi_core_write_le+0x98>
    a21c:	eb d7                	jmp    a1f5 <mbedtls_mpi_core_write_le+0x45>
    a21e:	66 90                	xchg   %ax,%ax
    a220:	e9 cb 8b 02 00       	jmpq   32df0 <instr.bb_a220>
    a225:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    a229:	83 e1 07             	and    $0x7,%ecx
    a22c:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
    a230:	c1 e1 03             	shl    $0x3,%ecx
    a233:	49 d3 e8             	shr    %cl,%r8
    a236:	44 88 04 02          	mov    %r8b,(%rdx,%rax,1)
    a23a:	48 83 c0 01          	add    $0x1,%rax
    a23e:	4c 39 d0             	cmp    %r10,%rax
    a241:	72 dd                	jb     a220 <mbedtls_mpi_core_write_le+0x70>
    a243:	e9 cf 8b 02 00       	jmpq   32e17 <instr.bb_a243>
    a248:	eb b0                	jmp    a1fa <mbedtls_mpi_core_write_le+0x4a>
    a24a:	c3                   	retq   
    a24b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a250:	49 89 f2             	mov    %rsi,%r10
    a253:	48 85 f6             	test   %rsi,%rsi
    a256:	75 c4                	jne    a21c <mbedtls_mpi_core_write_le+0x6c>
    a258:	49 29 f1             	sub    %rsi,%r9
    a25b:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    a25f:	48 83 ec 08          	sub    $0x8,%rsp
    a263:	31 f6                	xor    %esi,%esi
    a265:	4c 89 ca             	mov    %r9,%rdx
    a268:	e8 33 a0 ff ff       	callq  42a0 <memset@plt>
    a26d:	31 c0                	xor    %eax,%eax
    a26f:	48 83 c4 08          	add    $0x8,%rsp
    a273:	c3                   	retq   
    a274:	0f 1f 40 00          	nopl   0x0(%rax)
    a278:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    a27d:	c3                   	retq   
    a27e:	66 90                	xchg   %ax,%ax

000000000000a280 <mbedtls_mpi_core_write_be>:
    a280:	e9 ab 8b 02 00       	jmpq   32e30 <mbedtls_mpi_core_write_be.instr.bb_a280>
    a285:	e9 e3 8b 02 00       	jmpq   32e6d <instr.bb_a2a2>
    a28a:	f5                   	cmc    
    a28b:	00 00                	add    %al,(%rax)
    a28d:	00 00                	add    %al,(%rax)
    a28f:	53                   	push   %rbx
    a290:	48 89 fb             	mov    %rdi,%rbx
    a293:	48 89 d7             	mov    %rdx,%rdi
    a296:	48 89 ca             	mov    %rcx,%rdx
    a299:	48 39 cd             	cmp    %rcx,%rbp
    a29c:	0f 82 8e 00 00 00    	jb     a330 <mbedtls_mpi_core_write_be+0xb0>
    a2a2:	eb e1                	jmp    a285 <mbedtls_mpi_core_write_be+0x5>
    a2a4:	e9 ca 8b 02 00       	jmpq   32e73 <instr.bb_a2a4>
    a2a9:	07                   	(bad)  
    a2aa:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a2ae:	c1 e1 03             	shl    $0x3,%ecx
    a2b1:	48 8b 04 03          	mov    (%rbx,%rax,1),%rax
    a2b5:	48 d3 e8             	shr    %cl,%rax
    a2b8:	84 c0                	test   %al,%al
    a2ba:	0f 85 90 00 00 00    	jne    a350 <mbedtls_mpi_core_write_be+0xd0>
    a2c0:	48 89 d0             	mov    %rdx,%rax
    a2c3:	eb 1e                	jmp    a2e3 <mbedtls_mpi_core_write_be+0x63>
    a2c5:	0f 1f 00             	nopl   (%rax)
    a2c8:	48 89 c6             	mov    %rax,%rsi
    a2cb:	89 c1                	mov    %eax,%ecx
    a2cd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    a2d1:	83 e1 07             	and    $0x7,%ecx
    a2d4:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
    a2d8:	c1 e1 03             	shl    $0x3,%ecx
    a2db:	48 d3 ee             	shr    %cl,%rsi
    a2de:	40 84 f6             	test   %sil,%sil
    a2e1:	75 6d                	jne    a350 <mbedtls_mpi_core_write_be+0xd0>
    a2e3:	48 83 c0 01          	add    $0x1,%rax
    a2e7:	48 39 c5             	cmp    %rax,%rbp
    a2ea:	75 dc                	jne    a2c8 <mbedtls_mpi_core_write_be+0x48>
    a2ec:	48 8d 7c 17 ff       	lea    -0x1(%rdi,%rdx,1),%rdi
    a2f1:	31 c0                	xor    %eax,%eax
    a2f3:	48 85 d2             	test   %rdx,%rdx
    a2f6:	74 2f                	je     a327 <mbedtls_mpi_core_write_be+0xa7>
    a2f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a2ff:	00 
    a300:	48 89 c6             	mov    %rax,%rsi
    a303:	89 c1                	mov    %eax,%ecx
    a305:	48 83 c0 01          	add    $0x1,%rax
    a309:	48 83 ef 01          	sub    $0x1,%rdi
    a30d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    a311:	83 e1 07             	and    $0x7,%ecx
    a314:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
    a318:	c1 e1 03             	shl    $0x3,%ecx
    a31b:	48 d3 ee             	shr    %cl,%rsi
    a31e:	40 88 77 01          	mov    %sil,0x1(%rdi)
    a322:	48 39 c2             	cmp    %rax,%rdx
    a325:	75 d9                	jne    a300 <mbedtls_mpi_core_write_be+0x80>
    a327:	5b                   	pop    %rbx
    a328:	31 c0                	xor    %eax,%eax
    a32a:	5d                   	pop    %rbp
    a32b:	41 5c                	pop    %r12
    a32d:	c3                   	retq   
    a32e:	66 90                	xchg   %ax,%ax
    a330:	48 29 ea             	sub    %rbp,%rdx
    a333:	31 f6                	xor    %esi,%esi
    a335:	4c 8d 24 17          	lea    (%rdi,%rdx,1),%r12
    a339:	e8 62 9f ff ff       	callq  42a0 <memset@plt>
    a33e:	4c 89 e7             	mov    %r12,%rdi
    a341:	48 89 ea             	mov    %rbp,%rdx
    a344:	eb a6                	jmp    a2ec <mbedtls_mpi_core_write_be+0x6c>
    a346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a34d:	00 00 00 
    a350:	5b                   	pop    %rbx
    a351:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    a356:	5d                   	pop    %rbp
    a357:	41 5c                	pop    %r12
    a359:	c3                   	retq   
    a35a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a360 <mbedtls_mpi_core_shift_r>:
    a360:	e9 3b 8b 02 00       	jmpq   32ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>
    a365:	e9 53 8b 02 00       	jmpq   32ebd <instr.bb_a377>
    a36a:	48 c1 e9 06          	shr    $0x6,%rcx
    a36e:	41 83 e0 3f          	and    $0x3f,%r8d
    a372:	48 39 f1             	cmp    %rsi,%rcx
    a375:	77 07                	ja     a37e <mbedtls_mpi_core_shift_r+0x1e>
    a377:	eb ec                	jmp    a365 <mbedtls_mpi_core_shift_r+0x5>
    a379:	e9 45 8b 02 00       	jmpq   32ec3 <instr.bb_a379>
    a37e:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
    a385:	00 
    a386:	31 f6                	xor    %esi,%esi
    a388:	e9 13 9f ff ff       	jmpq   42a0 <memset@plt>
    a38d:	0f 1f 00             	nopl   (%rax)
    a390:	48 83 fa 3f          	cmp    $0x3f,%rdx
    a394:	0f 86 a6 00 00 00    	jbe    a440 <mbedtls_mpi_core_shift_r+0xe0>
    a39a:	49 89 f2             	mov    %rsi,%r10
    a39d:	49 29 ca             	sub    %rcx,%r10
    a3a0:	74 27                	je     a3c9 <mbedtls_mpi_core_shift_r+0x69>
    a3a2:	48 8d 04 cf          	lea    (%rdi,%rcx,8),%rax
    a3a6:	48 f7 d9             	neg    %rcx
    a3a9:	4c 8d 0c f7          	lea    (%rdi,%rsi,8),%r9
    a3ad:	48 c1 e1 03          	shl    $0x3,%rcx
    a3b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a3b8:	48 8b 10             	mov    (%rax),%rdx
    a3bb:	48 83 c0 08          	add    $0x8,%rax
    a3bf:	48 89 54 08 f8       	mov    %rdx,-0x8(%rax,%rcx,1)
    a3c4:	4c 39 c8             	cmp    %r9,%rax
    a3c7:	75 ef                	jne    a3b8 <mbedtls_mpi_core_shift_r+0x58>
    a3c9:	4c 39 d6             	cmp    %r10,%rsi
    a3cc:	76 72                	jbe    a440 <mbedtls_mpi_core_shift_r+0xe0>
    a3ce:	4a 8d 04 d7          	lea    (%rdi,%r10,8),%rax
    a3d2:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
    a3d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a3dd:	00 00 00 
    a3e0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a3e7:	48 83 c0 08          	add    $0x8,%rax
    a3eb:	48 39 c2             	cmp    %rax,%rdx
    a3ee:	75 f0                	jne    a3e0 <mbedtls_mpi_core_shift_r+0x80>
    a3f0:	4d 85 c0             	test   %r8,%r8
    a3f3:	74 55                	je     a44a <mbedtls_mpi_core_shift_r+0xea>
    a3f5:	41 ba 40 00 00 00    	mov    $0x40,%r10d
    a3fb:	48 8d 54 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rdx
    a400:	45 89 c3             	mov    %r8d,%r11d
    a403:	31 f6                	xor    %esi,%esi
    a405:	45 29 c2             	sub    %r8d,%r10d
    a408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a40f:	00 
    a410:	48 8b 02             	mov    (%rdx),%rax
    a413:	49 89 f1             	mov    %rsi,%r9
    a416:	44 89 d1             	mov    %r10d,%ecx
    a419:	49 89 d0             	mov    %rdx,%r8
    a41c:	48 83 ea 08          	sub    $0x8,%rdx
    a420:	48 89 c6             	mov    %rax,%rsi
    a423:	48 d3 e6             	shl    %cl,%rsi
    a426:	44 89 d9             	mov    %r11d,%ecx
    a429:	48 d3 e8             	shr    %cl,%rax
    a42c:	4c 09 c8             	or     %r9,%rax
    a42f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    a433:	49 39 f8             	cmp    %rdi,%r8
    a436:	75 d8                	jne    a410 <mbedtls_mpi_core_shift_r+0xb0>
    a438:	c3                   	retq   
    a439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a440:	4d 85 c0             	test   %r8,%r8
    a443:	74 05                	je     a44a <mbedtls_mpi_core_shift_r+0xea>
    a445:	48 85 f6             	test   %rsi,%rsi
    a448:	75 ab                	jne    a3f5 <mbedtls_mpi_core_shift_r+0x95>
    a44a:	c3                   	retq   
    a44b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a450 <mbedtls_mpi_core_add>:
    a450:	e9 8b 8a 02 00       	jmpq   32ee0 <mbedtls_mpi_core_add.instr.bb_a450>
    a455:	85 c9                	test   %ecx,%ecx
    a457:	74 37                	je     a490 <mbedtls_mpi_core_add+0x40>
    a459:	e9 91 8a 02 00       	jmpq   32eef <instr.bb_a459>
    a45e:	66 90                	xchg   %ax,%ax
    a460:	e9 9b 8a 02 00       	jmpq   32f00 <instr.bb_a460>
    a465:	04 c6                	add    $0xc6,%al
    a467:	41 0f 92 c2          	setb   %r10b
    a46b:	4a 03 04 c2          	add    (%rdx,%r8,8),%rax
    a46f:	49 89 c1             	mov    %rax,%r9
    a472:	4c 89 d0             	mov    %r10,%rax
    a475:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
    a479:	48 83 d0 00          	adc    $0x0,%rax
    a47d:	49 83 c0 01          	add    $0x1,%r8
    a481:	4c 39 c1             	cmp    %r8,%rcx
    a484:	75 da                	jne    a460 <mbedtls_mpi_core_add+0x10>
    a486:	c3                   	retq   
    a487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a48e:	00 00 
    a490:	31 c0                	xor    %eax,%eax
    a492:	c3                   	retq   
    a493:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a49a:	00 00 00 00 
    a49e:	66 90                	xchg   %ax,%ax

000000000000a4a0 <mbedtls_mpi_core_add_if>:
    a4a0:	f3 0f 1e fa          	endbr64 
    a4a4:	41 54                	push   %r12
    a4a6:	49 89 f4             	mov    %rsi,%r12
    a4a9:	55                   	push   %rbp
    a4aa:	48 89 d5             	mov    %rdx,%rbp
    a4ad:	53                   	push   %rbx
    a4ae:	48 89 fb             	mov    %rdi,%rbx
    a4b1:	89 cf                	mov    %ecx,%edi
    a4b3:	e8 78 0b 00 00       	callq  b030 <mbedtls_ct_mpi_uint_mask>
    a4b8:	48 85 ed             	test   %rbp,%rbp
    a4bb:	74 43                	je     a500 <mbedtls_mpi_core_add_if+0x60>
    a4bd:	48 89 c2             	mov    %rax,%rdx
    a4c0:	31 c9                	xor    %ecx,%ecx
    a4c2:	31 c0                	xor    %eax,%eax
    a4c4:	0f 1f 40 00          	nopl   0x0(%rax)
    a4c8:	49 8b 3c cc          	mov    (%r12,%rcx,8),%rdi
    a4cc:	45 31 c0             	xor    %r8d,%r8d
    a4cf:	48 21 d7             	and    %rdx,%rdi
    a4d2:	48 03 04 cb          	add    (%rbx,%rcx,8),%rax
    a4d6:	41 0f 92 c0          	setb   %r8b
    a4da:	48 01 c7             	add    %rax,%rdi
    a4dd:	4c 89 c0             	mov    %r8,%rax
    a4e0:	48 89 3c cb          	mov    %rdi,(%rbx,%rcx,8)
    a4e4:	48 83 d0 00          	adc    $0x0,%rax
    a4e8:	48 83 c1 01          	add    $0x1,%rcx
    a4ec:	48 39 cd             	cmp    %rcx,%rbp
    a4ef:	75 d7                	jne    a4c8 <mbedtls_mpi_core_add_if+0x28>
    a4f1:	5b                   	pop    %rbx
    a4f2:	5d                   	pop    %rbp
    a4f3:	41 5c                	pop    %r12
    a4f5:	c3                   	retq   
    a4f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a4fd:	00 00 00 
    a500:	5b                   	pop    %rbx
    a501:	31 c0                	xor    %eax,%eax
    a503:	5d                   	pop    %rbp
    a504:	41 5c                	pop    %r12
    a506:	c3                   	retq   
    a507:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a50e:	00 00 

000000000000a510 <mbedtls_mpi_core_sub>:
    a510:	e9 1b 8a 02 00       	jmpq   32f30 <mbedtls_mpi_core_sub.instr.bb_a510>
    a515:	85 c9                	test   %ecx,%ecx
    a517:	74 3f                	je     a558 <mbedtls_mpi_core_sub+0x48>
    a519:	e9 22 8a 02 00       	jmpq   32f40 <instr.bb_a519>
    a51e:	66 90                	xchg   %ax,%ax
    a520:	e9 2b 8a 02 00       	jmpq   32f50 <instr.bb_a520>
    a525:	8b 14 ca             	mov    (%rdx,%rcx,8),%edx
    a528:	45 31 db             	xor    %r11d,%r11d
    a52b:	49 39 c0             	cmp    %rax,%r8
    a52e:	41 0f 92 c3          	setb   %r11b
    a532:	49 29 c0             	sub    %rax,%r8
    a535:	31 c0                	xor    %eax,%eax
    a537:	4d 39 c2             	cmp    %r8,%r10
    a53a:	0f 97 c0             	seta   %al
    a53d:	4d 29 d0             	sub    %r10,%r8
    a540:	4e 89 04 cf          	mov    %r8,(%rdi,%r9,8)
    a544:	49 83 c1 01          	add    $0x1,%r9
    a548:	4c 01 d8             	add    %r11,%rax
    a54b:	4c 39 c9             	cmp    %r9,%rcx
    a54e:	75 d0                	jne    a520 <mbedtls_mpi_core_sub+0x10>
    a550:	c3                   	retq   
    a551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a558:	31 c0                	xor    %eax,%eax
    a55a:	c3                   	retq   
    a55b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a560 <mbedtls_mpi_core_mla>:
    a560:	e9 2b 8a 02 00       	jmpq   32f90 <mbedtls_mpi_core_mla.instr.bb_a560>
    a565:	89 f1                	mov    %esi,%ecx
    a567:	49 89 cb             	mov    %rcx,%r11
    a56a:	53                   	push   %rbx
    a56b:	48 89 d6             	mov    %rdx,%rsi
    a56e:	49 39 c9             	cmp    %rcx,%r9
    a571:	4c 89 c3             	mov    %r8,%rbx
    a574:	4d 0f 46 d9          	cmovbe %r9,%r11
    a578:	4c 89 d9             	mov    %r11,%rcx
    a57b:	4d 29 d9             	sub    %r11,%r9
    a57e:	41 83 e3 07          	and    $0x7,%r11d
    a582:	48 c1 e9 03          	shr    $0x3,%rcx
    a586:	48 85 c9             	test   %rcx,%rcx
    a589:	0f 84 12 01 00 00    	je     a6a1 <mbedtls_mpi_core_mla+0x141>
    a58f:	e9 36 8a 02 00       	jmpq   32fca <instr.bb_a58f>
    a594:	c9                   	leaveq 
    a595:	0f 1f 00             	nopl   (%rax)
    a598:	49 83 ea 01          	sub    $0x1,%r10
    a59c:	4d 31 c0             	xor    %r8,%r8
    a59f:	48 8b 06             	mov    (%rsi),%rax
    a5a2:	48 f7 e3             	mul    %rbx
    a5a5:	48 83 c6 08          	add    $0x8,%rsi
    a5a9:	48 01 c8             	add    %rcx,%rax
    a5ac:	4c 89 c1             	mov    %r8,%rcx
    a5af:	48 83 d2 00          	adc    $0x0,%rdx
    a5b3:	90                   	nop
    a5b4:	48 01 07             	add    %rax,(%rdi)
    a5b7:	48 11 d1             	adc    %rdx,%rcx
    a5ba:	48 83 c7 08          	add    $0x8,%rdi
    a5be:	48 8b 06             	mov    (%rsi),%rax
    a5c1:	48 f7 e3             	mul    %rbx
    a5c4:	48 83 c6 08          	add    $0x8,%rsi
    a5c8:	48 01 c8             	add    %rcx,%rax
    a5cb:	4c 89 c1             	mov    %r8,%rcx
    a5ce:	48 83 d2 00          	adc    $0x0,%rdx
    a5d2:	90                   	nop
    a5d3:	48 01 07             	add    %rax,(%rdi)
    a5d6:	48 11 d1             	adc    %rdx,%rcx
    a5d9:	48 83 c7 08          	add    $0x8,%rdi
    a5dd:	48 8b 06             	mov    (%rsi),%rax
    a5e0:	48 f7 e3             	mul    %rbx
    a5e3:	48 83 c6 08          	add    $0x8,%rsi
    a5e7:	48 01 c8             	add    %rcx,%rax
    a5ea:	4c 89 c1             	mov    %r8,%rcx
    a5ed:	48 83 d2 00          	adc    $0x0,%rdx
    a5f1:	90                   	nop
    a5f2:	48 01 07             	add    %rax,(%rdi)
    a5f5:	48 11 d1             	adc    %rdx,%rcx
    a5f8:	48 83 c7 08          	add    $0x8,%rdi
    a5fc:	48 8b 06             	mov    (%rsi),%rax
    a5ff:	48 f7 e3             	mul    %rbx
    a602:	48 83 c6 08          	add    $0x8,%rsi
    a606:	48 01 c8             	add    %rcx,%rax
    a609:	4c 89 c1             	mov    %r8,%rcx
    a60c:	48 83 d2 00          	adc    $0x0,%rdx
    a610:	90                   	nop
    a611:	48 01 07             	add    %rax,(%rdi)
    a614:	48 11 d1             	adc    %rdx,%rcx
    a617:	48 83 c7 08          	add    $0x8,%rdi
    a61b:	48 8b 06             	mov    (%rsi),%rax
    a61e:	48 f7 e3             	mul    %rbx
    a621:	48 83 c6 08          	add    $0x8,%rsi
    a625:	48 01 c8             	add    %rcx,%rax
    a628:	4c 89 c1             	mov    %r8,%rcx
    a62b:	48 83 d2 00          	adc    $0x0,%rdx
    a62f:	90                   	nop
    a630:	48 01 07             	add    %rax,(%rdi)
    a633:	48 11 d1             	adc    %rdx,%rcx
    a636:	48 83 c7 08          	add    $0x8,%rdi
    a63a:	48 8b 06             	mov    (%rsi),%rax
    a63d:	48 f7 e3             	mul    %rbx
    a640:	48 83 c6 08          	add    $0x8,%rsi
    a644:	48 01 c8             	add    %rcx,%rax
    a647:	4c 89 c1             	mov    %r8,%rcx
    a64a:	48 83 d2 00          	adc    $0x0,%rdx
    a64e:	90                   	nop
    a64f:	48 01 07             	add    %rax,(%rdi)
    a652:	48 11 d1             	adc    %rdx,%rcx
    a655:	48 83 c7 08          	add    $0x8,%rdi
    a659:	48 8b 06             	mov    (%rsi),%rax
    a65c:	48 f7 e3             	mul    %rbx
    a65f:	48 83 c6 08          	add    $0x8,%rsi
    a663:	48 01 c8             	add    %rcx,%rax
    a666:	4c 89 c1             	mov    %r8,%rcx
    a669:	48 83 d2 00          	adc    $0x0,%rdx
    a66d:	90                   	nop
    a66e:	48 01 07             	add    %rax,(%rdi)
    a671:	48 11 d1             	adc    %rdx,%rcx
    a674:	48 83 c7 08          	add    $0x8,%rdi
    a678:	48 8b 06             	mov    (%rsi),%rax
    a67b:	48 f7 e3             	mul    %rbx
    a67e:	48 83 c6 08          	add    $0x8,%rsi
    a682:	48 01 c8             	add    %rcx,%rax
    a685:	4c 89 c1             	mov    %r8,%rcx
    a688:	48 83 d2 00          	adc    $0x0,%rdx
    a68c:	90                   	nop
    a68d:	48 01 07             	add    %rax,(%rdi)
    a690:	48 11 d1             	adc    %rdx,%rcx
    a693:	48 83 c7 08          	add    $0x8,%rdi
    a697:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
    a69b:	0f 85 f7 fe ff ff    	jne    a598 <mbedtls_mpi_core_mla+0x38>
    a6a1:	4d 8d 53 ff          	lea    -0x1(%r11),%r10
    a6a5:	4d 85 db             	test   %r11,%r11
    a6a8:	74 32                	je     a6dc <mbedtls_mpi_core_mla+0x17c>
    a6aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a6b0:	49 83 ea 01          	sub    $0x1,%r10
    a6b4:	4d 31 c0             	xor    %r8,%r8
    a6b7:	48 8b 06             	mov    (%rsi),%rax
    a6ba:	48 f7 e3             	mul    %rbx
    a6bd:	48 83 c6 08          	add    $0x8,%rsi
    a6c1:	48 01 c8             	add    %rcx,%rax
    a6c4:	4c 89 c1             	mov    %r8,%rcx
    a6c7:	48 83 d2 00          	adc    $0x0,%rdx
    a6cb:	90                   	nop
    a6cc:	48 01 07             	add    %rax,(%rdi)
    a6cf:	48 11 d1             	adc    %rdx,%rcx
    a6d2:	48 83 c7 08          	add    $0x8,%rdi
    a6d6:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
    a6da:	75 d4                	jne    a6b0 <mbedtls_mpi_core_mla+0x150>
    a6dc:	49 8d 41 ff          	lea    -0x1(%r9),%rax
    a6e0:	4d 85 c9             	test   %r9,%r9
    a6e3:	74 1d                	je     a702 <mbedtls_mpi_core_mla+0x1a2>
    a6e5:	0f 1f 00             	nopl   (%rax)
    a6e8:	48 03 0f             	add    (%rdi),%rcx
    a6eb:	48 89 0f             	mov    %rcx,(%rdi)
    a6ee:	0f 92 c1             	setb   %cl
    a6f1:	48 83 e8 01          	sub    $0x1,%rax
    a6f5:	48 83 c7 08          	add    $0x8,%rdi
    a6f9:	0f b6 c9             	movzbl %cl,%ecx
    a6fc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    a700:	75 e6                	jne    a6e8 <mbedtls_mpi_core_mla+0x188>
    a702:	48 89 c8             	mov    %rcx,%rax
    a705:	5b                   	pop    %rbx
    a706:	c3                   	retq   
    a707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a70e:	00 00 

000000000000a710 <mbedtls_mpi_core_mul>:
    a710:	e9 7b 89 02 00       	jmpq   33090 <mbedtls_mpi_core_mul.instr.bb_a710>
    a715:	57                   	push   %rdi
    a716:	4d 89 c7             	mov    %r8,%r15
    a719:	41 56                	push   %r14
    a71b:	41 55                	push   %r13
    a71d:	49 89 f5             	mov    %rsi,%r13
    a720:	31 f6                	xor    %esi,%esi
    a722:	41 54                	push   %r12
    a724:	49 89 d4             	mov    %rdx,%r12
    a727:	4c 01 c2             	add    %r8,%rdx
    a72a:	55                   	push   %rbp
    a72b:	48 c1 e2 03          	shl    $0x3,%rdx
    a72f:	48 89 fd             	mov    %rdi,%rbp
    a732:	53                   	push   %rbx
    a733:	48 89 cb             	mov    %rcx,%rbx
    a736:	48 83 ec 08          	sub    $0x8,%rsp
    a73a:	e8 61 9b ff ff       	callq  42a0 <memset@plt>
    a73f:	e9 b6 89 02 00       	jmpq   330fa <instr.bb_a73f>
    a744:	e9 ba 89 02 00       	jmpq   33103 <instr.bb_a744>
    a749:	4e 8d 3c fb          	lea    (%rbx,%r15,8),%r15
    a74d:	0f 1f 00             	nopl   (%rax)
    a750:	e9 bb 89 02 00       	jmpq   33110 <instr.bb_a750>
    a755:	ef                   	out    %eax,(%dx)
    a756:	4c 89 e1             	mov    %r12,%rcx
    a759:	4c 89 ea             	mov    %r13,%rdx
    a75c:	4c 89 f6             	mov    %r14,%rsi
    a75f:	48 83 c3 08          	add    $0x8,%rbx
    a763:	48 83 c5 08          	add    $0x8,%rbp
    a767:	e8 f4 fd ff ff       	callq  a560 <mbedtls_mpi_core_mla>
    a76c:	e9 bb 89 02 00       	jmpq   3312c <instr.bb_a76c>
    a771:	e9 bf 89 02 00       	jmpq   33135 <instr.bb_a771>
    a776:	5d                   	pop    %rbp
    a777:	41 5c                	pop    %r12
    a779:	41 5d                	pop    %r13
    a77b:	41 5e                	pop    %r14
    a77d:	41 5f                	pop    %r15
    a77f:	c3                   	retq   

000000000000a780 <mbedtls_mpi_core_montmul_init>:
    a780:	f3 0f 1e fa          	endbr64 
    a784:	48 8b 37             	mov    (%rdi),%rsi
    a787:	ba 04 00 00 00       	mov    $0x4,%edx
    a78c:	bf 02 00 00 00       	mov    $0x2,%edi
    a791:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
    a796:	83 e0 08             	and    $0x8,%eax
    a799:	48 01 f0             	add    %rsi,%rax
    a79c:	48 89 f1             	mov    %rsi,%rcx
    a79f:	49 89 f8             	mov    %rdi,%r8
    a7a2:	48 0f af c8          	imul   %rax,%rcx
    a7a6:	49 29 c8             	sub    %rcx,%r8
    a7a9:	49 0f af c0          	imul   %r8,%rax
    a7ad:	83 ea 01             	sub    $0x1,%edx
    a7b0:	75 ea                	jne    a79c <mbedtls_mpi_core_montmul_init+0x1c>
    a7b2:	48 f7 d8             	neg    %rax
    a7b5:	c3                   	retq   
    a7b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a7bd:	00 00 00 

000000000000a7c0 <mbedtls_mpi_core_montmul>:
    a7c0:	f3 0f 1e fa          	endbr64 
    a7c4:	41 57                	push   %r15
    a7c6:	41 56                	push   %r14
    a7c8:	41 55                	push   %r13
    a7ca:	41 54                	push   %r12
    a7cc:	4d 89 c4             	mov    %r8,%r12
    a7cf:	55                   	push   %rbp
    a7d0:	4c 89 cd             	mov    %r9,%rbp
    a7d3:	53                   	push   %rbx
    a7d4:	48 89 f3             	mov    %rsi,%rbx
    a7d7:	31 f6                	xor    %esi,%esi
    a7d9:	48 83 ec 38          	sub    $0x38,%rsp
    a7dd:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
    a7e2:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    a7e7:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    a7ec:	4c 89 ca             	mov    %r9,%rdx
    a7ef:	48 c1 e2 04          	shl    $0x4,%rdx
    a7f3:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    a7f8:	48 83 c2 08          	add    $0x8,%rdx
    a7fc:	4c 89 ff             	mov    %r15,%rdi
    a7ff:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    a804:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    a809:	e8 92 9a ff ff       	callq  42a0 <memset@plt>
    a80e:	48 85 ed             	test   %rbp,%rbp
    a811:	0f 84 e9 00 00 00    	je     a900 <mbedtls_mpi_core_montmul+0x140>
    a817:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    a81c:	4c 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%r11
    a823:	00 
    a824:	49 89 d9             	mov    %rbx,%r9
    a827:	4c 8d 6d 02          	lea    0x2(%rbp),%r13
    a82b:	4f 8d 34 1f          	lea    (%r15,%r11,1),%r14
    a82f:	4c 89 fb             	mov    %r15,%rbx
    a832:	4d 89 cf             	mov    %r9,%r15
    a835:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    a83a:	4d 89 d6             	mov    %r10,%r14
    a83d:	0f 1f 00             	nopl   (%rax)
    a840:	4d 8b 07             	mov    (%r15),%r8
    a843:	4d 8b 1e             	mov    (%r14),%r11
    a846:	48 89 df             	mov    %rbx,%rdi
    a849:	4c 89 f2             	mov    %r14,%rdx
    a84c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    a851:	4c 89 ee             	mov    %r13,%rsi
    a854:	49 83 c7 08          	add    $0x8,%r15
    a858:	4d 0f af d8          	imul   %r8,%r11
    a85c:	4c 03 1b             	add    (%rbx),%r11
    a85f:	4c 0f af 5c 24 20    	imul   0x20(%rsp),%r11
    a865:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    a86a:	e8 f1 fc ff ff       	callq  a560 <mbedtls_mpi_core_mla>
    a86f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    a874:	48 89 df             	mov    %rbx,%rdi
    a877:	48 89 e9             	mov    %rbp,%rcx
    a87a:	4c 89 e2             	mov    %r12,%rdx
    a87d:	4c 89 ee             	mov    %r13,%rsi
    a880:	48 83 c3 08          	add    $0x8,%rbx
    a884:	4d 89 d8             	mov    %r11,%r8
    a887:	e8 d4 fc ff ff       	callq  a560 <mbedtls_mpi_core_mla>
    a88c:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
    a891:	75 ad                	jne    a840 <mbedtls_mpi_core_montmul+0x80>
    a893:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    a898:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    a89d:	31 c9                	xor    %ecx,%ecx
    a89f:	31 d2                	xor    %edx,%edx
    a8a1:	4d 8b 04 ee          	mov    (%r14,%rbp,8),%r8
    a8a5:	0f 1f 00             	nopl   (%rax)
    a8a8:	49 8b 04 d6          	mov    (%r14,%rdx,8),%rax
    a8ac:	49 8b 34 d4          	mov    (%r12,%rdx,8),%rsi
    a8b0:	31 ff                	xor    %edi,%edi
    a8b2:	48 39 c8             	cmp    %rcx,%rax
    a8b5:	40 0f 92 c7          	setb   %dil
    a8b9:	48 29 c8             	sub    %rcx,%rax
    a8bc:	48 39 f0             	cmp    %rsi,%rax
    a8bf:	48 83 d7 00          	adc    $0x0,%rdi
    a8c3:	48 29 f0             	sub    %rsi,%rax
    a8c6:	49 89 04 d1          	mov    %rax,(%r9,%rdx,8)
    a8ca:	48 83 c2 01          	add    $0x1,%rdx
    a8ce:	48 89 f9             	mov    %rdi,%rcx
    a8d1:	48 39 d5             	cmp    %rdx,%rbp
    a8d4:	75 d2                	jne    a8a8 <mbedtls_mpi_core_montmul+0xe8>
    a8d6:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    a8db:	44 31 c1             	xor    %r8d,%ecx
    a8de:	48 83 c4 38          	add    $0x38,%rsp
    a8e2:	4c 89 f2             	mov    %r14,%rdx
    a8e5:	5b                   	pop    %rbx
    a8e6:	48 89 ef             	mov    %rbp,%rdi
    a8e9:	0f b6 c9             	movzbl %cl,%ecx
    a8ec:	5d                   	pop    %rbp
    a8ed:	41 5c                	pop    %r12
    a8ef:	41 5d                	pop    %r13
    a8f1:	41 5e                	pop    %r14
    a8f3:	41 5f                	pop    %r15
    a8f5:	e9 d6 07 00 00       	jmpq   b0d0 <mbedtls_ct_mpi_uint_cond_assign>
    a8fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a900:	4d 8b 07             	mov    (%r15),%r8
    a903:	4d 89 fe             	mov    %r15,%r14
    a906:	31 c9                	xor    %ecx,%ecx
    a908:	eb cc                	jmp    a8d6 <mbedtls_mpi_core_montmul+0x116>
    a90a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a910 <mbedtls_mpi_core_get_mont_r2_unsafe>:
    a910:	f3 0f 1e fa          	endbr64 
    a914:	55                   	push   %rbp
    a915:	48 89 fd             	mov    %rdi,%rbp
    a918:	53                   	push   %rbx
    a919:	48 89 f3             	mov    %rsi,%rbx
    a91c:	be 01 00 00 00       	mov    $0x1,%esi
    a921:	48 83 ec 08          	sub    $0x8,%rsp
    a925:	e8 66 a6 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    a92a:	85 c0                	test   %eax,%eax
    a92c:	74 0a                	je     a938 <mbedtls_mpi_core_get_mont_r2_unsafe+0x28>
    a92e:	48 83 c4 08          	add    $0x8,%rsp
    a932:	5b                   	pop    %rbx
    a933:	5d                   	pop    %rbp
    a934:	c3                   	retq   
    a935:	0f 1f 00             	nopl   (%rax)
    a938:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    a93c:	48 89 ef             	mov    %rbp,%rdi
    a93f:	48 c1 e6 07          	shl    $0x7,%rsi
    a943:	e8 08 a9 ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    a948:	85 c0                	test   %eax,%eax
    a94a:	75 e2                	jne    a92e <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
    a94c:	48 89 da             	mov    %rbx,%rdx
    a94f:	48 89 ee             	mov    %rbp,%rsi
    a952:	48 89 ef             	mov    %rbp,%rdi
    a955:	e8 c6 c0 ff ff       	callq  6a20 <mbedtls_mpi_mod_mpi>
    a95a:	85 c0                	test   %eax,%eax
    a95c:	75 d0                	jne    a92e <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
    a95e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    a962:	48 83 c4 08          	add    $0x8,%rsp
    a966:	48 89 ef             	mov    %rbp,%rdi
    a969:	5b                   	pop    %rbx
    a96a:	5d                   	pop    %rbp
    a96b:	e9 90 a3 ff ff       	jmpq   4d00 <mbedtls_mpi_shrink>

000000000000a970 <mbedtls_mpi_core_fill_random>:
    a970:	e9 db 87 02 00       	jmpq   33150 <mbedtls_mpi_core_fill_random.instr.bb_a970>
    a975:	57                   	push   %rdi
    a976:	48 89 d0             	mov    %rdx,%rax
    a979:	41 56                	push   %r14
    a97b:	41 55                	push   %r13
    a97d:	41 54                	push   %r12
    a97f:	55                   	push   %rbp
    a980:	31 ed                	xor    %ebp,%ebp
    a982:	53                   	push   %rbx
    a983:	48 83 ec 18          	sub    $0x18,%rsp
    a987:	f6 c2 07             	test   $0x7,%dl
    a98a:	40 0f 95 c5          	setne  %bpl
    a98e:	48 c1 e8 03          	shr    $0x3,%rax
    a992:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    a997:	48 01 c5             	add    %rax,%rbp
    a99a:	4c 89 04 24          	mov    %r8,(%rsp)
    a99e:	4c 8d 34 ed 00 00 00 	lea    0x0(,%rbp,8),%r14
    a9a5:	00 
    a9a6:	4d 89 f7             	mov    %r14,%r15
    a9a9:	49 29 d7             	sub    %rdx,%r15
    a9ac:	48 39 f5             	cmp    %rsi,%rbp
    a9af:	77 6f                	ja     aa20 <mbedtls_mpi_core_fill_random+0xb0>
    a9b1:	e9 03 88 02 00       	jmpq   331b9 <instr.bb_a9b1>
    a9b6:	fd                   	std    
    a9b7:	49 89 d4             	mov    %rdx,%r12
    a9ba:	31 f6                	xor    %esi,%esi
    a9bc:	4c 89 fa             	mov    %r15,%rdx
    a9bf:	48 29 eb             	sub    %rbp,%rbx
    a9c2:	e8 d9 98 ff ff       	callq  42a0 <memset@plt>
    a9c7:	e9 03 88 02 00       	jmpq   331cf <instr.bb_a9c7>
    a9cc:	00 00                	add    %al,(%rax)
    a9ce:	00 4b 8d             	add    %cl,-0x73(%rbx)
    a9d1:	7c 35                	jl     aa08 <mbedtls_mpi_core_fill_random+0x98>
    a9d3:	00 31                	add    %dh,(%rcx)
    a9d5:	f6 e8                	imul   %al
    a9d7:	c5 98 ff             	(bad)
    a9da:	ff                   	(bad)  
    a9db:	e9 03 88 02 00       	jmpq   331e3 <instr.bb_a9db>
    a9e0:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    a9e4:	4c 89 e2             	mov    %r12,%rdx
    a9e7:	4b 8d 74 3d 00       	lea    0x0(%r13,%r15,1),%rsi
    a9ec:	4c 89 c7             	mov    %r8,%rdi
    a9ef:	ff d1                	callq  *%rcx
    a9f1:	e9 03 88 02 00       	jmpq   331f9 <instr.bb_a9f1>
    a9f6:	75 10                	jne    aa08 <mbedtls_mpi_core_fill_random+0x98>
    a9f8:	e9 07 88 02 00       	jmpq   33204 <instr.bb_a9f8>
    a9fd:	e9 0b 88 02 00       	jmpq   3320d <instr.bb_a9fd>
    aa02:	ef                   	out    %eax,(%dx)
    aa03:	e8 c8 f4 ff ff       	callq  9ed0 <mbedtls_mpi_core_bigendian_to_host.part.0>
    aa08:	e9 0b 88 02 00       	jmpq   33218 <instr.bb_aa08>
    aa0d:	89 c0                	mov    %eax,%eax
    aa0f:	5b                   	pop    %rbx
    aa10:	5d                   	pop    %rbp
    aa11:	41 5c                	pop    %r12
    aa13:	41 5d                	pop    %r13
    aa15:	41 5e                	pop    %r14
    aa17:	41 5f                	pop    %r15
    aa19:	c3                   	retq   
    aa1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    aa20:	41 b8 fc ff ff ff    	mov    $0xfffffffc,%r8d
    aa26:	eb e0                	jmp    aa08 <mbedtls_mpi_core_fill_random+0x98>
    aa28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    aa2f:	00 

000000000000aa30 <mbedtls_mpi_core_random>:
    aa30:	e9 fb 87 02 00       	jmpq   33230 <mbedtls_mpi_core_random.instr.bb_aa30>
    aa35:	57                   	push   %rdi
    aa36:	4d 89 cf             	mov    %r9,%r15
    aa39:	41 56                	push   %r14
    aa3b:	41 55                	push   %r13
    aa3d:	41 54                	push   %r12
    aa3f:	55                   	push   %rbp
    aa40:	48 89 fd             	mov    %rdi,%rbp
    aa43:	53                   	push   %rbx
    aa44:	48 89 cb             	mov    %rcx,%rbx
    aa47:	48 83 ec 38          	sub    $0x38,%rsp
    aa4b:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    aa50:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    aa55:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    aa5a:	48 85 c9             	test   %rcx,%rcx
    aa5d:	0f 84 bd 00 00 00    	je     ab20 <mbedtls_mpi_core_random+0xf0>
    aa63:	e9 28 88 02 00       	jmpq   33290 <instr.bb_aa63>
    aa68:	d7                   	xlat   %ds:(%rbx)
    aa69:	e8 12 f4 ff ff       	callq  9e80 <mbedtls_mpi_core_bitlen.part.0>
    aa6e:	e9 28 88 02 00       	jmpq   3329b <instr.bb_aa6e>
    aa73:	90                   	nop
    aa74:	90                   	nop
    aa75:	90                   	nop
    aa76:	90                   	nop
    aa77:	90                   	nop
    aa78:	90                   	nop
    aa79:	90                   	nop
    aa7a:	90                   	nop
    aa7b:	90                   	nop
    aa7c:	90                   	nop
    aa7d:	90                   	nop
    aa7e:	90                   	nop
    aa7f:	90                   	nop
    aa80:	90                   	nop
    aa81:	90                   	nop
    aa82:	90                   	nop
    aa83:	e9 b5 88 02 00       	jmpq   3333d <instr.bb_ab01>
    aa88:	24 41                	and    $0x41,%al
    aa8a:	81 e5 dc 00 00 00    	and    $0xdc,%ebp
    aa90:	41 83 c5 1e          	add    $0x1e,%r13d
    aa94:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    aa98:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    aa9d:	0f 1f 00             	nopl   (%rax)
    aaa0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    aaa5:	48 8b 14 24          	mov    (%rsp),%rdx
    aaa9:	4d 89 f8             	mov    %r15,%r8
    aaac:	48 89 de             	mov    %rbx,%rsi
    aaaf:	48 89 ef             	mov    %rbp,%rdi
    aab2:	e8 b9 fe ff ff       	callq  a970 <mbedtls_mpi_core_fill_random>
    aab7:	e9 2b 88 02 00       	jmpq   332e7 <instr.bb_aab7>
    aabc:	75 47                	jne    ab05 <mbedtls_mpi_core_random+0xd5>
    aabe:	e9 2f 88 02 00       	jmpq   332f2 <instr.bb_aabe>
    aac3:	48 89 de             	mov    %rbx,%rsi
    aac6:	48 2b 54 24 10       	sub    0x10(%rsp),%rdx
    aacb:	48 89 ef             	mov    %rbp,%rdi
    aace:	e8 8d f8 ff ff       	callq  a360 <mbedtls_mpi_core_shift_r>
    aad3:	e9 2f 88 02 00       	jmpq   33307 <instr.bb_aad3>
    aad8:	6f                   	outsl  %ds:(%rsi),(%dx)
    aad9:	e9 33 88 02 00       	jmpq   33311 <instr.bb_aad9>
    aade:	48 89 da             	mov    %rbx,%rdx
    aae1:	48 89 ee             	mov    %rbp,%rsi
    aae4:	e8 97 f4 ff ff       	callq  9f80 <mbedtls_mpi_core_uint_le_mpi>
    aae9:	e9 33 88 02 00       	jmpq   33321 <instr.bb_aae9>
    aaee:	48 89 da             	mov    %rbx,%rdx
    aaf1:	48 89 ef             	mov    %rbp,%rdi
    aaf4:	41 89 c6             	mov    %eax,%r14d
    aaf7:	e8 34 0c 00 00       	callq  b730 <mbedtls_mpi_core_lt_ct>
    aafc:	e9 33 88 02 00       	jmpq   33334 <instr.bb_aafc>
    ab01:	eb 80                	jmp    aa83 <mbedtls_mpi_core_random+0x53>
    ab03:	74 9b                	je     aaa0 <mbedtls_mpi_core_random+0x70>
    ab05:	e9 3b 88 02 00       	jmpq   33345 <instr.bb_ab05>
    ab0a:	89 e0                	mov    %esp,%eax
    ab0c:	5b                   	pop    %rbx
    ab0d:	5d                   	pop    %rbp
    ab0e:	41 5c                	pop    %r12
    ab10:	41 5d                	pop    %r13
    ab12:	41 5e                	pop    %r14
    ab14:	41 5f                	pop    %r15
    ab16:	c3                   	retq   
    ab17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ab1e:	00 00 
    ab20:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    ab27:	00 00 
    ab29:	b8 07 00 00 00       	mov    $0x7,%eax
    ab2e:	41 bd fa 00 00 00    	mov    $0xfa,%r13d
    ab34:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ab3b:	00 
    ab3c:	e9 53 ff ff ff       	jmpq   aa94 <mbedtls_mpi_core_random+0x64>
    ab41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ab48:	f3 0f 1e fa          	endbr64 
    ab4c:	41 bc f2 ff ff ff    	mov    $0xfffffff2,%r12d
    ab52:	eb b1                	jmp    ab05 <mbedtls_mpi_core_random+0xd5>
    ab54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    ab5b:	00 00 00 00 
    ab5f:	90                   	nop

000000000000ab60 <mbedtls_mpi_core_exp_mod_working_limbs>:
    ab60:	f3 0f 1e fa          	endbr64 
    ab64:	48 c1 e6 06          	shl    $0x6,%rsi
    ab68:	49 89 f8             	mov    %rdi,%r8
    ab6b:	48 83 fe 50          	cmp    $0x50,%rsi
    ab6f:	48 19 ff             	sbb    %rdi,%rdi
    ab72:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
    ab76:	48 83 c7 07          	add    $0x7,%rdi
    ab7a:	49 0f af f8          	imul   %r8,%rdi
    ab7e:	48 8d 47 01          	lea    0x1(%rdi),%rax
    ab82:	c3                   	retq   
    ab83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    ab8a:	00 00 00 00 
    ab8e:	66 90                	xchg   %ax,%ax

000000000000ab90 <mbedtls_mpi_core_exp_mod>:
    ab90:	f3 0f 1e fa          	endbr64 
    ab94:	41 57                	push   %r15
    ab96:	4c 89 c8             	mov    %r9,%rax
    ab99:	49 89 cf             	mov    %rcx,%r15
    ab9c:	41 56                	push   %r14
    ab9e:	48 c1 e0 06          	shl    $0x6,%rax
    aba2:	49 89 d6             	mov    %rdx,%r14
    aba5:	41 55                	push   %r13
    aba7:	4d 89 cd             	mov    %r9,%r13
    abaa:	41 54                	push   %r12
    abac:	49 89 f4             	mov    %rsi,%r12
    abaf:	55                   	push   %rbp
    abb0:	48 89 fd             	mov    %rdi,%rbp
    abb3:	4a 8d 3c fd 00 00 00 	lea    0x0(,%r15,8),%rdi
    abba:	00 
    abbb:	53                   	push   %rbx
    abbc:	48 83 ec 68          	sub    $0x68,%rsp
    abc0:	48 83 f8 50          	cmp    $0x50,%rax
    abc4:	48 19 f6             	sbb    %rsi,%rsi
    abc7:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
    abcc:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    abd0:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    abd5:	48 83 c6 04          	add    $0x4,%rsi
    abd9:	48 83 f8 50          	cmp    $0x50,%rax
    abdd:	19 c9                	sbb    %ecx,%ecx
    abdf:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    abe4:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
    abeb:	00 
    abec:	83 c1 02             	add    $0x2,%ecx
    abef:	48 83 f8 50          	cmp    $0x50,%rax
    abf3:	48 19 c0             	sbb    %rax,%rax
    abf6:	48 83 c0 02          	add    $0x2,%rax
    abfa:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    abff:	4c 89 f8             	mov    %r15,%rax
    ac02:	48 d3 e0             	shl    %cl,%rax
    ac05:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    ac09:	48 8b 32             	mov    (%rdx),%rsi
    ac0c:	ba 04 00 00 00       	mov    $0x4,%edx
    ac11:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    ac16:	48 01 f8             	add    %rdi,%rax
    ac19:	bf 02 00 00 00       	mov    $0x2,%edi
    ac1e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    ac23:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
    ac28:	83 e0 08             	and    $0x8,%eax
    ac2b:	48 01 f0             	add    %rsi,%rax
    ac2e:	48 89 f1             	mov    %rsi,%rcx
    ac31:	48 89 fb             	mov    %rdi,%rbx
    ac34:	48 0f af c8          	imul   %rax,%rcx
    ac38:	48 29 cb             	sub    %rcx,%rbx
    ac3b:	48 0f af c3          	imul   %rbx,%rax
    ac3f:	83 ea 01             	sub    $0x1,%edx
    ac42:	75 ea                	jne    ac2e <mbedtls_mpi_core_exp_mod+0x9e>
    ac44:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    ac49:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
    ac50:	00 
    ac51:	48 f7 d8             	neg    %rax
    ac54:	31 f6                	xor    %esi,%esi
    ac56:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    ac5b:	48 89 da             	mov    %rbx,%rdx
    ac5e:	e8 3d 96 ff ff       	callq  42a0 <memset@plt>
    ac63:	4d 89 f9             	mov    %r15,%r9
    ac66:	4d 89 f0             	mov    %r14,%r8
    ac69:	4c 89 f9             	mov    %r15,%rcx
    ac6c:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
    ac73:	00 
    ac74:	48 c7 06 01 00 00 00 	movq   $0x1,(%rsi)
    ac7b:	ff 74 24 10          	pushq  0x10(%rsp)
    ac7f:	ff 74 24 30          	pushq  0x30(%rsp)
    ac83:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    ac8a:	00 
    ac8b:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
    ac92:	00 
    ac93:	48 89 f7             	mov    %rsi,%rdi
    ac96:	e8 25 fb ff ff       	callq  a7c0 <mbedtls_mpi_core_montmul>
    ac9b:	48 89 da             	mov    %rbx,%rdx
    ac9e:	48 03 9c 24 b8 00 00 	add    0xb8(%rsp),%rbx
    aca5:	00 
    aca6:	4c 89 e6             	mov    %r12,%rsi
    aca9:	48 89 df             	mov    %rbx,%rdi
    acac:	49 89 dc             	mov    %rbx,%r12
    acaf:	e8 6c 96 ff ff       	callq  4320 <memcpy@plt>
    acb4:	41 59                	pop    %r9
    acb6:	41 5a                	pop    %r10
    acb8:	b8 02 00 00 00       	mov    $0x2,%eax
    acbd:	48 83 7c 24 20 02    	cmpq   $0x2,0x20(%rsp)
    acc3:	74 58                	je     ad1d <mbedtls_mpi_core_exp_mod+0x18d>
    acc5:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
    acca:	4d 89 e5             	mov    %r12,%r13
    accd:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    acd2:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    acd7:	48 89 dd             	mov    %rbx,%rbp
    acda:	4c 89 fb             	mov    %r15,%rbx
    acdd:	49 89 c7             	mov    %rax,%r15
    ace0:	4c 89 ee             	mov    %r13,%rsi
    ace3:	4c 03 6c 24 18       	add    0x18(%rsp),%r13
    ace8:	ff 74 24 10          	pushq  0x10(%rsp)
    acec:	4d 89 f0             	mov    %r14,%r8
    acef:	41 54                	push   %r12
    acf1:	4c 89 ef             	mov    %r13,%rdi
    acf4:	49 89 d9             	mov    %rbx,%r9
    acf7:	48 89 d9             	mov    %rbx,%rcx
    acfa:	48 89 ea             	mov    %rbp,%rdx
    acfd:	49 83 c7 01          	add    $0x1,%r15
    ad01:	e8 ba fa ff ff       	callq  a7c0 <mbedtls_mpi_core_montmul>
    ad06:	5f                   	pop    %rdi
    ad07:	41 58                	pop    %r8
    ad09:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
    ad0e:	75 d0                	jne    ace0 <mbedtls_mpi_core_exp_mod+0x150>
    ad10:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    ad15:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
    ad1a:	49 89 df             	mov    %rbx,%r15
    ad1d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    ad22:	48 89 ef             	mov    %rbp,%rdi
    ad25:	49 89 ec             	mov    %rbp,%r12
    ad28:	31 db                	xor    %ebx,%ebx
    ad2a:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
    ad31:	00 
    ad32:	4c 89 fd             	mov    %r15,%rbp
    ad35:	e8 e6 95 ff ff       	callq  4320 <memcpy@plt>
    ad3a:	31 c0                	xor    %eax,%eax
    ad3c:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
    ad41:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    ad48:	00 00 
    ad4a:	49 89 c6             	mov    %rax,%r14
    ad4d:	0f 1f 00             	nopl   (%rax)
    ad50:	ff 74 24 10          	pushq  0x10(%rsp)
    ad54:	48 89 e9             	mov    %rbp,%rcx
    ad57:	4c 89 e6             	mov    %r12,%rsi
    ad5a:	49 89 e9             	mov    %rbp,%r9
    ad5d:	ff 74 24 30          	pushq  0x30(%rsp)
    ad61:	4c 89 e2             	mov    %r12,%rdx
    ad64:	4c 89 e7             	mov    %r12,%rdi
    ad67:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
    ad6c:	e8 4f fa ff ff       	callq  a7c0 <mbedtls_mpi_core_montmul>
    ad71:	59                   	pop    %rcx
    ad72:	5e                   	pop    %rsi
    ad73:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    ad79:	0f 85 d1 00 00 00    	jne    ae50 <mbedtls_mpi_core_exp_mod+0x2c0>
    ad7f:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    ad84:	49 83 ed 01          	sub    $0x1,%r13
    ad88:	48 01 db             	add    %rbx,%rbx
    ad8b:	49 83 c6 01          	add    $0x1,%r14
    ad8f:	4a 8b 04 e8          	mov    (%rax,%r13,8),%rax
    ad93:	48 89 c2             	mov    %rax,%rdx
    ad96:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ad9b:	4c 89 e8             	mov    %r13,%rax
    ad9e:	48 c1 ea 3f          	shr    $0x3f,%rdx
    ada2:	48 83 c8 3f          	or     $0x3f,%rax
    ada6:	48 c7 44 24 08 3f 00 	movq   $0x3f,0x8(%rsp)
    adad:	00 00 
    adaf:	48 09 d3             	or     %rdx,%rbx
    adb2:	4c 39 74 24 50       	cmp    %r14,0x50(%rsp)
    adb7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    adbc:	75 92                	jne    ad50 <mbedtls_mpi_core_exp_mod+0x1c0>
    adbe:	66 90                	xchg   %ax,%ax
    adc0:	4c 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%r15
    adc7:	00 
    adc8:	45 31 f6             	xor    %r14d,%r14d
    adcb:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
    add0:	4d 89 fc             	mov    %r15,%r12
    add3:	4d 89 f7             	mov    %r14,%r15
    add6:	49 89 de             	mov    %rbx,%r14
    add9:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    adde:	66 90                	xchg   %ax,%ax
    ade0:	4c 89 f6             	mov    %r14,%rsi
    ade3:	4c 89 ff             	mov    %r15,%rdi
    ade6:	e8 85 02 00 00       	callq  b070 <mbedtls_ct_size_bool_eq>
    adeb:	4c 39 e3             	cmp    %r12,%rbx
    adee:	74 11                	je     ae01 <mbedtls_mpi_core_exp_mod+0x271>
    adf0:	0f b6 c8             	movzbl %al,%ecx
    adf3:	4c 89 e2             	mov    %r12,%rdx
    adf6:	48 89 de             	mov    %rbx,%rsi
    adf9:	48 89 ef             	mov    %rbp,%rdi
    adfc:	e8 cf 02 00 00       	callq  b0d0 <mbedtls_ct_mpi_uint_cond_assign>
    ae01:	49 83 c7 01          	add    $0x1,%r15
    ae05:	4c 03 64 24 18       	add    0x18(%rsp),%r12
    ae0a:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
    ae0f:	75 cf                	jne    ade0 <mbedtls_mpi_core_exp_mod+0x250>
    ae11:	4c 8b 64 24 48       	mov    0x48(%rsp),%r12
    ae16:	ff 74 24 10          	pushq  0x10(%rsp)
    ae1a:	49 89 e9             	mov    %rbp,%r9
    ae1d:	48 89 e9             	mov    %rbp,%rcx
    ae20:	ff 74 24 30          	pushq  0x30(%rsp)
    ae24:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
    ae29:	4c 89 e6             	mov    %r12,%rsi
    ae2c:	4c 89 e7             	mov    %r12,%rdi
    ae2f:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    ae34:	e8 87 f9 ff ff       	callq  a7c0 <mbedtls_mpi_core_montmul>
    ae39:	58                   	pop    %rax
    ae3a:	5a                   	pop    %rdx
    ae3b:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
    ae41:	74 6d                	je     aeb0 <mbedtls_mpi_core_exp_mod+0x320>
    ae43:	31 db                	xor    %ebx,%ebx
    ae45:	45 31 f6             	xor    %r14d,%r14d
    ae48:	e9 03 ff ff ff       	jmpq   ad50 <mbedtls_mpi_core_exp_mod+0x1c0>
    ae4d:	0f 1f 00             	nopl   (%rax)
    ae50:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    ae55:	48 83 6c 24 08 01    	subq   $0x1,0x8(%rsp)
    ae5b:	48 01 db             	add    %rbx,%rbx
    ae5e:	49 83 c6 01          	add    $0x1,%r14
    ae62:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ae67:	4a 8b 3c ef          	mov    (%rdi,%r13,8),%rdi
    ae6b:	89 c1                	mov    %eax,%ecx
    ae6d:	4c 09 e8             	or     %r13,%rax
    ae70:	48 89 fa             	mov    %rdi,%rdx
    ae73:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    ae78:	48 d3 ea             	shr    %cl,%rdx
    ae7b:	83 e2 01             	and    $0x1,%edx
    ae7e:	48 09 d3             	or     %rdx,%rbx
    ae81:	4c 3b 74 24 50       	cmp    0x50(%rsp),%r14
    ae86:	0f 84 34 ff ff ff    	je     adc0 <mbedtls_mpi_core_exp_mod+0x230>
    ae8c:	48 85 c0             	test   %rax,%rax
    ae8f:	0f 85 bb fe ff ff    	jne    ad50 <mbedtls_mpi_core_exp_mod+0x1c0>
    ae95:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    ae9c:	00 00 
    ae9e:	45 31 ed             	xor    %r13d,%r13d
    aea1:	e9 1a ff ff ff       	jmpq   adc0 <mbedtls_mpi_core_exp_mod+0x230>
    aea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    aead:	00 00 00 
    aeb0:	48 83 c4 68          	add    $0x68,%rsp
    aeb4:	5b                   	pop    %rbx
    aeb5:	5d                   	pop    %rbp
    aeb6:	41 5c                	pop    %r12
    aeb8:	41 5d                	pop    %r13
    aeba:	41 5e                	pop    %r14
    aebc:	41 5f                	pop    %r15
    aebe:	c3                   	retq   
    aebf:	90                   	nop

000000000000aec0 <mbedtls_mpi_core_sub_int>:
    aec0:	e9 9b 84 02 00       	jmpq   33360 <mbedtls_mpi_core_sub_int.instr.bb_aec0>
    aec5:	e9 a8 84 02 00       	jmpq   33372 <instr.bb_aecc>
    aeca:	74 21                	je     aeed <mbedtls_mpi_core_sub_int+0x2d>
    aecc:	eb f7                	jmp    aec5 <mbedtls_mpi_core_sub_int+0x5>
    aece:	c0 90 e9 ab 84 02 00 	rclb   $0x0,0x284abe9(%rax)
    aed5:	89 d1                	mov    %edx,%ecx
    aed7:	49 29 c1             	sub    %rax,%r9
    aeda:	0f 92 c0             	setb   %al
    aedd:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
    aee1:	49 83 c0 01          	add    $0x1,%r8
    aee5:	0f b6 c0             	movzbl %al,%eax
    aee8:	4c 39 c1             	cmp    %r8,%rcx
    aeeb:	75 e3                	jne    aed0 <mbedtls_mpi_core_sub_int+0x10>
    aeed:	c3                   	retq   
    aeee:	66 90                	xchg   %ax,%ax

000000000000aef0 <mbedtls_mpi_core_check_zero_ct>:
    aef0:	f3 0f 1e fa          	endbr64 
    aef4:	48 85 f6             	test   %rsi,%rsi
    aef7:	74 17                	je     af10 <mbedtls_mpi_core_check_zero_ct+0x20>
    aef9:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
    aefd:	31 c0                	xor    %eax,%eax
    aeff:	90                   	nop
    af00:	48 0b 07             	or     (%rdi),%rax
    af03:	48 83 c7 08          	add    $0x8,%rdi
    af07:	48 39 d7             	cmp    %rdx,%rdi
    af0a:	75 f4                	jne    af00 <mbedtls_mpi_core_check_zero_ct+0x10>
    af0c:	c3                   	retq   
    af0d:	0f 1f 00             	nopl   (%rax)
    af10:	31 c0                	xor    %eax,%eax
    af12:	c3                   	retq   
    af13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    af1a:	00 00 00 00 
    af1e:	66 90                	xchg   %ax,%ax

000000000000af20 <mbedtls_mpi_core_to_mont_rep>:
    af20:	f3 0f 1e fa          	endbr64 
    af24:	48 83 ec 08          	sub    $0x8,%rsp
    af28:	49 89 d2             	mov    %rdx,%r10
    af2b:	4c 89 ca             	mov    %r9,%rdx
    af2e:	49 89 c9             	mov    %rcx,%r9
    af31:	ff 74 24 10          	pushq  0x10(%rsp)
    af35:	41 50                	push   %r8
    af37:	4d 89 d0             	mov    %r10,%r8
    af3a:	e8 81 f8 ff ff       	callq  a7c0 <mbedtls_mpi_core_montmul>
    af3f:	48 83 c4 18          	add    $0x18,%rsp
    af43:	c3                   	retq   
    af44:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    af4b:	00 00 00 00 
    af4f:	90                   	nop

000000000000af50 <mbedtls_mpi_core_from_mont_rep>:
    af50:	f3 0f 1e fa          	endbr64 
    af54:	48 83 ec 18          	sub    $0x18,%rsp
    af58:	49 89 d2             	mov    %rdx,%r10
    af5b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    af62:	00 00 
    af64:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    af69:	31 c0                	xor    %eax,%eax
    af6b:	48 89 e2             	mov    %rsp,%rdx
    af6e:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
    af75:	00 
    af76:	41 51                	push   %r9
    af78:	49 89 c9             	mov    %rcx,%r9
    af7b:	b9 01 00 00 00       	mov    $0x1,%ecx
    af80:	41 50                	push   %r8
    af82:	4d 89 d0             	mov    %r10,%r8
    af85:	e8 36 f8 ff ff       	callq  a7c0 <mbedtls_mpi_core_montmul>
    af8a:	58                   	pop    %rax
    af8b:	5a                   	pop    %rdx
    af8c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    af91:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    af98:	00 00 
    af9a:	75 05                	jne    afa1 <mbedtls_mpi_core_from_mont_rep+0x51>
    af9c:	48 83 c4 18          	add    $0x18,%rsp
    afa0:	c3                   	retq   
    afa1:	e8 ca 92 ff ff       	callq  4270 <__stack_chk_fail@plt>
    afa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    afad:	00 00 00 

000000000000afb0 <mbedtls_ct_memcmp>:
    afb0:	f3 0f 1e fa          	endbr64 
    afb4:	48 85 d2             	test   %rdx,%rdx
    afb7:	74 27                	je     afe0 <mbedtls_ct_memcmp+0x30>
    afb9:	4c 8d 04 17          	lea    (%rdi,%rdx,1),%r8
    afbd:	31 c0                	xor    %eax,%eax
    afbf:	90                   	nop
    afc0:	0f b6 17             	movzbl (%rdi),%edx
    afc3:	0f b6 0e             	movzbl (%rsi),%ecx
    afc6:	48 83 c7 01          	add    $0x1,%rdi
    afca:	48 83 c6 01          	add    $0x1,%rsi
    afce:	31 ca                	xor    %ecx,%edx
    afd0:	0f b6 d2             	movzbl %dl,%edx
    afd3:	09 d0                	or     %edx,%eax
    afd5:	4c 39 c7             	cmp    %r8,%rdi
    afd8:	75 e6                	jne    afc0 <mbedtls_ct_memcmp+0x10>
    afda:	c3                   	retq   
    afdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    afe0:	31 c0                	xor    %eax,%eax
    afe2:	c3                   	retq   
    afe3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    afea:	00 00 00 00 
    afee:	66 90                	xchg   %ax,%ax

000000000000aff0 <mbedtls_ct_uint_mask>:
    aff0:	f3 0f 1e fa          	endbr64 
    aff4:	41 89 f8             	mov    %edi,%r8d
    aff7:	f7 df                	neg    %edi
    aff9:	44 09 c7             	or     %r8d,%edi
    affc:	89 f8                	mov    %edi,%eax
    affe:	c1 f8 1f             	sar    $0x1f,%eax
    b001:	c3                   	retq   
    b002:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b009:	00 00 00 00 
    b00d:	0f 1f 00             	nopl   (%rax)

000000000000b010 <mbedtls_ct_size_mask>:
    b010:	f3 0f 1e fa          	endbr64 
    b014:	49 89 f8             	mov    %rdi,%r8
    b017:	48 f7 df             	neg    %rdi
    b01a:	4c 09 c7             	or     %r8,%rdi
    b01d:	48 89 f8             	mov    %rdi,%rax
    b020:	48 c1 f8 3f          	sar    $0x3f,%rax
    b024:	c3                   	retq   
    b025:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b02c:	00 00 00 00 

000000000000b030 <mbedtls_ct_mpi_uint_mask>:
    b030:	e9 7b 83 02 00       	jmpq   333b0 <mbedtls_ct_mpi_uint_mask.instr.bb_b030>
    b035:	89 f8                	mov    %edi,%eax
    b037:	48 f7 df             	neg    %rdi
    b03a:	4c 09 c7             	or     %r8,%rdi
    b03d:	48 89 f8             	mov    %rdi,%rax
    b040:	48 c1 f8 3f          	sar    $0x3f,%rax
    b044:	c3                   	retq   
    b045:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b04c:	00 00 00 00 

000000000000b050 <mbedtls_ct_size_mask_ge>:
    b050:	f3 0f 1e fa          	endbr64 
    b054:	48 89 f8             	mov    %rdi,%rax
    b057:	48 29 f0             	sub    %rsi,%rax
    b05a:	48 c1 f8 3f          	sar    $0x3f,%rax
    b05e:	48 f7 d0             	not    %rax
    b061:	c3                   	retq   
    b062:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b069:	00 00 00 00 
    b06d:	0f 1f 00             	nopl   (%rax)

000000000000b070 <mbedtls_ct_size_bool_eq>:
    b070:	f3 0f 1e fa          	endbr64 
    b074:	48 31 fe             	xor    %rdi,%rsi
    b077:	48 89 f0             	mov    %rsi,%rax
    b07a:	48 f7 d8             	neg    %rax
    b07d:	48 09 f0             	or     %rsi,%rax
    b080:	48 c1 e8 3f          	shr    $0x3f,%rax
    b084:	83 f0 01             	xor    $0x1,%eax
    b087:	c3                   	retq   
    b088:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b08f:	00 

000000000000b090 <mbedtls_ct_mpi_uint_lt>:
    b090:	e9 3b 83 02 00       	jmpq   333d0 <mbedtls_ct_mpi_uint_lt.instr.bb_b090>
    b095:	89 fa                	mov    %edi,%edx
    b097:	48 89 f0             	mov    %rsi,%rax
    b09a:	48 31 f7             	xor    %rsi,%rdi
    b09d:	48 29 f2             	sub    %rsi,%rdx
    b0a0:	48 31 d0             	xor    %rdx,%rax
    b0a3:	48 21 f8             	and    %rdi,%rax
    b0a6:	48 31 d0             	xor    %rdx,%rax
    b0a9:	48 c1 e8 3f          	shr    $0x3f,%rax
    b0ad:	c3                   	retq   
    b0ae:	66 90                	xchg   %ax,%ax

000000000000b0b0 <mbedtls_ct_uint_if>:
    b0b0:	f3 0f 1e fa          	endbr64 
    b0b4:	41 89 f8             	mov    %edi,%r8d
    b0b7:	f7 df                	neg    %edi
    b0b9:	31 d6                	xor    %edx,%esi
    b0bb:	89 d0                	mov    %edx,%eax
    b0bd:	44 09 c7             	or     %r8d,%edi
    b0c0:	c1 ff 1f             	sar    $0x1f,%edi
    b0c3:	21 f7                	and    %esi,%edi
    b0c5:	31 f8                	xor    %edi,%eax
    b0c7:	c3                   	retq   
    b0c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b0cf:	00 

000000000000b0d0 <mbedtls_ct_mpi_uint_cond_assign>:
    b0d0:	f3 0f 1e fa          	endbr64 
    b0d4:	0f b6 c9             	movzbl %cl,%ecx
    b0d7:	31 c0                	xor    %eax,%eax
    b0d9:	41 89 ca             	mov    %ecx,%r10d
    b0dc:	83 e9 01             	sub    $0x1,%ecx
    b0df:	41 f7 da             	neg    %r10d
    b0e2:	4c 63 c9             	movslq %ecx,%r9
    b0e5:	4d 63 d2             	movslq %r10d,%r10
    b0e8:	48 85 ff             	test   %rdi,%rdi
    b0eb:	74 21                	je     b10e <mbedtls_ct_mpi_uint_cond_assign+0x3e>
    b0ed:	0f 1f 00             	nopl   (%rax)
    b0f0:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    b0f4:	4c 8b 04 c6          	mov    (%rsi,%rax,8),%r8
    b0f8:	4c 21 d1             	and    %r10,%rcx
    b0fb:	4d 21 c8             	and    %r9,%r8
    b0fe:	4c 09 c1             	or     %r8,%rcx
    b101:	48 89 0c c6          	mov    %rcx,(%rsi,%rax,8)
    b105:	48 83 c0 01          	add    $0x1,%rax
    b109:	48 39 c7             	cmp    %rax,%rdi
    b10c:	75 e2                	jne    b0f0 <mbedtls_ct_mpi_uint_cond_assign+0x20>
    b10e:	c3                   	retq   
    b10f:	90                   	nop

000000000000b110 <mbedtls_ct_base64_enc_char>:
    b110:	f3 0f 1e fa          	endbr64 
    b114:	40 0f b6 ff          	movzbl %dil,%edi
    b118:	ba 3e 00 00 00       	mov    $0x3e,%edx
    b11d:	29 fa                	sub    %edi,%edx
    b11f:	8d 47 c2             	lea    -0x3e(%rdi),%eax
    b122:	8d 4f 41             	lea    0x41(%rdi),%ecx
    b125:	c1 ea 08             	shr    $0x8,%edx
    b128:	c1 e8 08             	shr    $0x8,%eax
    b12b:	09 d0                	or     %edx,%eax
    b12d:	f7 d0                	not    %eax
    b12f:	83 e0 2b             	and    $0x2b,%eax
    b132:	89 c2                	mov    %eax,%edx
    b134:	b8 19 00 00 00       	mov    $0x19,%eax
    b139:	29 f8                	sub    %edi,%eax
    b13b:	c1 e8 08             	shr    $0x8,%eax
    b13e:	f7 d0                	not    %eax
    b140:	21 c8                	and    %ecx,%eax
    b142:	b9 3f 00 00 00       	mov    $0x3f,%ecx
    b147:	09 d0                	or     %edx,%eax
    b149:	29 f9                	sub    %edi,%ecx
    b14b:	8d 57 c1             	lea    -0x3f(%rdi),%edx
    b14e:	c1 e9 08             	shr    $0x8,%ecx
    b151:	c1 ea 08             	shr    $0x8,%edx
    b154:	09 ca                	or     %ecx,%edx
    b156:	b9 33 00 00 00       	mov    $0x33,%ecx
    b15b:	f7 d2                	not    %edx
    b15d:	29 f9                	sub    %edi,%ecx
    b15f:	83 e2 2f             	and    $0x2f,%edx
    b162:	c1 e9 08             	shr    $0x8,%ecx
    b165:	09 d0                	or     %edx,%eax
    b167:	8d 57 e6             	lea    -0x1a(%rdi),%edx
    b16a:	c1 ea 08             	shr    $0x8,%edx
    b16d:	09 ca                	or     %ecx,%edx
    b16f:	8d 4f 47             	lea    0x47(%rdi),%ecx
    b172:	f7 d2                	not    %edx
    b174:	21 ca                	and    %ecx,%edx
    b176:	b9 3d 00 00 00       	mov    $0x3d,%ecx
    b17b:	09 c2                	or     %eax,%edx
    b17d:	29 f9                	sub    %edi,%ecx
    b17f:	8d 47 cc             	lea    -0x34(%rdi),%eax
    b182:	83 ef 04             	sub    $0x4,%edi
    b185:	c1 e8 08             	shr    $0x8,%eax
    b188:	c1 e9 08             	shr    $0x8,%ecx
    b18b:	09 c8                	or     %ecx,%eax
    b18d:	f7 d0                	not    %eax
    b18f:	21 c7                	and    %eax,%edi
    b191:	89 f8                	mov    %edi,%eax
    b193:	09 d0                	or     %edx,%eax
    b195:	c3                   	retq   
    b196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b19d:	00 00 00 

000000000000b1a0 <mbedtls_ct_base64_dec_value>:
    b1a0:	f3 0f 1e fa          	endbr64 
    b1a4:	40 0f b6 ff          	movzbl %dil,%edi
    b1a8:	ba 5a 00 00 00       	mov    $0x5a,%edx
    b1ad:	b9 7a 00 00 00       	mov    $0x7a,%ecx
    b1b2:	29 fa                	sub    %edi,%edx
    b1b4:	8d 47 bf             	lea    -0x41(%rdi),%eax
    b1b7:	29 f9                	sub    %edi,%ecx
    b1b9:	c1 ea 08             	shr    $0x8,%edx
    b1bc:	c1 e8 08             	shr    $0x8,%eax
    b1bf:	09 d0                	or     %edx,%eax
    b1c1:	8d 57 c0             	lea    -0x40(%rdi),%edx
    b1c4:	c1 e9 08             	shr    $0x8,%ecx
    b1c7:	f7 d0                	not    %eax
    b1c9:	21 c2                	and    %eax,%edx
    b1cb:	8d 47 9f             	lea    -0x61(%rdi),%eax
    b1ce:	c1 e8 08             	shr    $0x8,%eax
    b1d1:	09 c8                	or     %ecx,%eax
    b1d3:	8d 4f ba             	lea    -0x46(%rdi),%ecx
    b1d6:	f7 d0                	not    %eax
    b1d8:	21 c8                	and    %ecx,%eax
    b1da:	b9 39 00 00 00       	mov    $0x39,%ecx
    b1df:	09 d0                	or     %edx,%eax
    b1e1:	29 f9                	sub    %edi,%ecx
    b1e3:	8d 57 d0             	lea    -0x30(%rdi),%edx
    b1e6:	c1 e9 08             	shr    $0x8,%ecx
    b1e9:	c1 ea 08             	shr    $0x8,%edx
    b1ec:	09 ca                	or     %ecx,%edx
    b1ee:	8d 4f 05             	lea    0x5(%rdi),%ecx
    b1f1:	f7 d2                	not    %edx
    b1f3:	21 ca                	and    %ecx,%edx
    b1f5:	b9 2b 00 00 00       	mov    $0x2b,%ecx
    b1fa:	09 d0                	or     %edx,%eax
    b1fc:	29 f9                	sub    %edi,%ecx
    b1fe:	8d 57 d5             	lea    -0x2b(%rdi),%edx
    b201:	c1 e9 08             	shr    $0x8,%ecx
    b204:	c1 ea 08             	shr    $0x8,%edx
    b207:	09 ca                	or     %ecx,%edx
    b209:	8d 4f 14             	lea    0x14(%rdi),%ecx
    b20c:	f7 d2                	not    %edx
    b20e:	21 ca                	and    %ecx,%edx
    b210:	b9 2f 00 00 00       	mov    $0x2f,%ecx
    b215:	09 c2                	or     %eax,%edx
    b217:	29 f9                	sub    %edi,%ecx
    b219:	8d 47 d1             	lea    -0x2f(%rdi),%eax
    b21c:	83 c7 11             	add    $0x11,%edi
    b21f:	c1 e8 08             	shr    $0x8,%eax
    b222:	c1 e9 08             	shr    $0x8,%ecx
    b225:	09 c8                	or     %ecx,%eax
    b227:	f7 d0                	not    %eax
    b229:	21 c7                	and    %eax,%edi
    b22b:	09 d7                	or     %edx,%edi
    b22d:	8d 47 ff             	lea    -0x1(%rdi),%eax
    b230:	c3                   	retq   
    b231:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b238:	00 00 00 00 
    b23c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b240 <mbedtls_ct_memcpy_if_eq>:
    b240:	f3 0f 1e fa          	endbr64 
    b244:	4c 31 c1             	xor    %r8,%rcx
    b247:	48 89 c8             	mov    %rcx,%rax
    b24a:	48 f7 d8             	neg    %rax
    b24d:	48 09 c8             	or     %rcx,%rax
    b250:	48 c1 e8 3f          	shr    $0x3f,%rax
    b254:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
    b258:	45 89 ca             	mov    %r9d,%r10d
    b25b:	45 89 cb             	mov    %r9d,%r11d
    b25e:	48 83 fa 03          	cmp    $0x3,%rdx
    b262:	76 5c                	jbe    b2c0 <mbedtls_ct_memcpy_if_eq+0x80>
    b264:	b8 04 00 00 00       	mov    $0x4,%eax
    b269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b270:	44 8b 44 07 fc       	mov    -0x4(%rdi,%rax,1),%r8d
    b275:	8b 4c 06 fc          	mov    -0x4(%rsi,%rax,1),%ecx
    b279:	44 31 c1             	xor    %r8d,%ecx
    b27c:	44 21 d1             	and    %r10d,%ecx
    b27f:	44 31 c1             	xor    %r8d,%ecx
    b282:	89 4c 07 fc          	mov    %ecx,-0x4(%rdi,%rax,1)
    b286:	48 89 c1             	mov    %rax,%rcx
    b289:	48 83 c0 04          	add    $0x4,%rax
    b28d:	48 39 c2             	cmp    %rax,%rdx
    b290:	73 de                	jae    b270 <mbedtls_ct_memcpy_if_eq+0x30>
    b292:	44 89 c8             	mov    %r9d,%eax
    b295:	f7 d0                	not    %eax
    b297:	48 39 ca             	cmp    %rcx,%rdx
    b29a:	76 20                	jbe    b2bc <mbedtls_ct_memcpy_if_eq+0x7c>
    b29c:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
    b2a1:	44 0f b6 0c 0f       	movzbl (%rdi,%rcx,1),%r9d
    b2a6:	45 21 d8             	and    %r11d,%r8d
    b2a9:	41 21 c1             	and    %eax,%r9d
    b2ac:	45 09 c8             	or     %r9d,%r8d
    b2af:	44 88 04 0f          	mov    %r8b,(%rdi,%rcx,1)
    b2b3:	48 83 c1 01          	add    $0x1,%rcx
    b2b7:	48 39 ca             	cmp    %rcx,%rdx
    b2ba:	75 e0                	jne    b29c <mbedtls_ct_memcpy_if_eq+0x5c>
    b2bc:	c3                   	retq   
    b2bd:	0f 1f 00             	nopl   (%rax)
    b2c0:	31 c9                	xor    %ecx,%ecx
    b2c2:	eb ce                	jmp    b292 <mbedtls_ct_memcpy_if_eq+0x52>
    b2c4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b2cb:	00 00 00 00 
    b2cf:	90                   	nop

000000000000b2d0 <mbedtls_ct_memcpy_offset>:
    b2d0:	f3 0f 1e fa          	endbr64 
    b2d4:	4c 39 c1             	cmp    %r8,%rcx
    b2d7:	77 37                	ja     b310 <mbedtls_ct_memcpy_offset+0x40>
    b2d9:	41 55                	push   %r13
    b2db:	49 89 f5             	mov    %rsi,%r13
    b2de:	41 54                	push   %r12
    b2e0:	49 89 d4             	mov    %rdx,%r12
    b2e3:	4c 89 ca             	mov    %r9,%rdx
    b2e6:	55                   	push   %rbp
    b2e7:	4c 89 c5             	mov    %r8,%rbp
    b2ea:	53                   	push   %rbx
    b2eb:	48 89 cb             	mov    %rcx,%rbx
    b2ee:	66 90                	xchg   %ax,%ax
    b2f0:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    b2f5:	48 89 d9             	mov    %rbx,%rcx
    b2f8:	4d 89 e0             	mov    %r12,%r8
    b2fb:	48 83 c3 01          	add    $0x1,%rbx
    b2ff:	e8 3c ff ff ff       	callq  b240 <mbedtls_ct_memcpy_if_eq>
    b304:	48 39 dd             	cmp    %rbx,%rbp
    b307:	73 e7                	jae    b2f0 <mbedtls_ct_memcpy_offset+0x20>
    b309:	5b                   	pop    %rbx
    b30a:	5d                   	pop    %rbp
    b30b:	41 5c                	pop    %r12
    b30d:	41 5d                	pop    %r13
    b30f:	c3                   	retq   
    b310:	c3                   	retq   
    b311:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b318:	00 00 00 00 
    b31c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b320 <mbedtls_ct_hmac>:
    b320:	f3 0f 1e fa          	endbr64 
    b324:	41 57                	push   %r15
    b326:	49 89 d7             	mov    %rdx,%r15
    b329:	41 56                	push   %r14
    b32b:	41 55                	push   %r13
    b32d:	49 89 f5             	mov    %rsi,%r13
    b330:	41 54                	push   %r12
    b332:	55                   	push   %rbp
    b333:	48 89 fd             	mov    %rdi,%rbp
    b336:	53                   	push   %rbx
    b337:	4c 89 cb             	mov    %r9,%rbx
    b33a:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    b341:	48 8b 3f             	mov    (%rdi),%rdi
    b344:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    b349:	4c 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%r14
    b350:	00 
    b351:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    b356:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    b35b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b362:	00 00 
    b364:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    b36b:	00 
    b36c:	31 c0                	xor    %eax,%eax
    b36e:	e8 bd 81 00 00       	callq  13530 <mbedtls_md_get_type>
    b373:	ba 80 00 00 00       	mov    $0x80,%edx
    b378:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    b37c:	83 f8 05             	cmp    $0x5,%eax
    b37f:	b8 40 00 00 00       	mov    $0x40,%eax
    b384:	48 0f 44 c2          	cmove  %rdx,%rax
    b388:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b38d:	48 8b 45 10          	mov    0x10(%rbp),%rax
    b391:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    b396:	e8 75 81 00 00       	callq  13510 <mbedtls_md_get_size>
    b39b:	4c 89 e7             	mov    %r12,%rdi
    b39e:	88 44 24 18          	mov    %al,0x18(%rsp)
    b3a2:	e8 a9 7b 00 00       	callq  12f50 <mbedtls_md_init>
    b3a7:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    b3ab:	31 d2                	xor    %edx,%edx
    b3ad:	4c 89 e7             	mov    %r12,%rdi
    b3b0:	e8 8b 7d 00 00       	callq  13140 <mbedtls_md_setup>
    b3b5:	85 c0                	test   %eax,%eax
    b3b7:	74 3f                	je     b3f8 <mbedtls_ct_hmac+0xd8>
    b3b9:	4c 89 e7             	mov    %r12,%rdi
    b3bc:	89 44 24 08          	mov    %eax,0x8(%rsp)
    b3c0:	e8 ab 7b 00 00       	callq  12f70 <mbedtls_md_free>
    b3c5:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    b3cc:	00 
    b3cd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b3d4:	00 00 
    b3d6:	8b 44 24 08          	mov    0x8(%rsp),%eax
    b3da:	0f 85 dd 01 00 00    	jne    b5bd <mbedtls_ct_hmac+0x29d>
    b3e0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    b3e7:	5b                   	pop    %rbx
    b3e8:	5d                   	pop    %rbp
    b3e9:	41 5c                	pop    %r12
    b3eb:	41 5d                	pop    %r13
    b3ed:	41 5e                	pop    %r14
    b3ef:	41 5f                	pop    %r15
    b3f1:	c3                   	retq   
    b3f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b3f8:	4c 89 fa             	mov    %r15,%rdx
    b3fb:	4c 89 ee             	mov    %r13,%rsi
    b3fe:	48 89 ef             	mov    %rbp,%rdi
    b401:	e8 6a 7f 00 00       	callq  13370 <mbedtls_md_update>
    b406:	85 c0                	test   %eax,%eax
    b408:	75 af                	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b40a:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    b40f:	48 89 da             	mov    %rbx,%rdx
    b412:	48 89 ef             	mov    %rbp,%rdi
    b415:	e8 56 7f 00 00       	callq  13370 <mbedtls_md_update>
    b41a:	85 c0                	test   %eax,%eax
    b41c:	75 9b                	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b41e:	48 b8 21 21 21 21 21 	movabs $0x2121212121212121,%rax
    b425:	21 21 21 
    b428:	44 0f b6 7c 24 18    	movzbl 0x18(%rsp),%r15d
    b42e:	41 83 ff 08          	cmp    $0x8,%r15d
    b432:	0f 83 a8 00 00 00    	jae    b4e0 <mbedtls_ct_hmac+0x1c0>
    b438:	41 f6 c7 04          	test   $0x4,%r15b
    b43c:	0f 85 66 01 00 00    	jne    b5a8 <mbedtls_ct_hmac+0x288>
    b442:	45 85 ff             	test   %r15d,%r15d
    b445:	0f 85 bd 00 00 00    	jne    b508 <mbedtls_ct_hmac+0x1e8>
    b44b:	48 3b 9c 24 e0 00 00 	cmp    0xe0(%rsp),%rbx
    b452:	00 
    b453:	0f 87 cd 00 00 00    	ja     b526 <mbedtls_ct_hmac+0x206>
    b459:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
    b45e:	eb 12                	jmp    b472 <mbedtls_ct_hmac+0x152>
    b460:	48 83 c3 01          	add    $0x1,%rbx
    b464:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
    b46b:	00 
    b46c:	0f 82 be 00 00 00    	jb     b530 <mbedtls_ct_hmac+0x210>
    b472:	48 89 ee             	mov    %rbp,%rsi
    b475:	4c 89 e7             	mov    %r12,%rdi
    b478:	e8 d3 7b 00 00       	callq  13050 <mbedtls_md_clone>
    b47d:	85 c0                	test   %eax,%eax
    b47f:	0f 85 34 ff ff ff    	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b485:	4c 89 ee             	mov    %r13,%rsi
    b488:	4c 89 e7             	mov    %r12,%rdi
    b48b:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    b490:	e8 5b 7f 00 00       	callq  133f0 <mbedtls_md_finish>
    b495:	85 c0                	test   %eax,%eax
    b497:	0f 85 1c ff ff ff    	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b49d:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    b4a2:	48 89 d9             	mov    %rbx,%rcx
    b4a5:	4c 89 fa             	mov    %r15,%rdx
    b4a8:	4c 89 ee             	mov    %r13,%rsi
    b4ab:	4c 89 f7             	mov    %r14,%rdi
    b4ae:	e8 8d fd ff ff       	callq  b240 <mbedtls_ct_memcpy_if_eq>
    b4b3:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
    b4ba:	00 
    b4bb:	76 a3                	jbe    b460 <mbedtls_ct_hmac+0x140>
    b4bd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    b4c2:	ba 01 00 00 00       	mov    $0x1,%edx
    b4c7:	48 89 ef             	mov    %rbp,%rdi
    b4ca:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
    b4ce:	e8 9d 7e 00 00       	callq  13370 <mbedtls_md_update>
    b4d3:	85 c0                	test   %eax,%eax
    b4d5:	74 89                	je     b460 <mbedtls_ct_hmac+0x140>
    b4d7:	e9 dd fe ff ff       	jmpq   b3b9 <mbedtls_ct_hmac+0x99>
    b4dc:	0f 1f 40 00          	nopl   0x0(%rax)
    b4e0:	49 8d 7e 08          	lea    0x8(%r14),%rdi
    b4e4:	4c 89 f1             	mov    %r14,%rcx
    b4e7:	49 89 06             	mov    %rax,(%r14)
    b4ea:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    b4ee:	4b 89 44 3e f8       	mov    %rax,-0x8(%r14,%r15,1)
    b4f3:	48 29 f9             	sub    %rdi,%rcx
    b4f6:	44 01 f9             	add    %r15d,%ecx
    b4f9:	c1 e9 03             	shr    $0x3,%ecx
    b4fc:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    b4ff:	e9 47 ff ff ff       	jmpq   b44b <mbedtls_ct_hmac+0x12b>
    b504:	0f 1f 40 00          	nopl   0x0(%rax)
    b508:	41 c6 06 21          	movb   $0x21,(%r14)
    b50c:	41 f6 c7 02          	test   $0x2,%r15b
    b510:	0f 84 35 ff ff ff    	je     b44b <mbedtls_ct_hmac+0x12b>
    b516:	b8 21 21 00 00       	mov    $0x2121,%eax
    b51b:	66 43 89 44 3e fe    	mov    %ax,-0x2(%r14,%r15,1)
    b521:	e9 25 ff ff ff       	jmpq   b44b <mbedtls_ct_hmac+0x12b>
    b526:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    b52b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b530:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    b535:	48 89 ef             	mov    %rbp,%rdi
    b538:	e8 b3 7e 00 00       	callq  133f0 <mbedtls_md_finish>
    b53d:	85 c0                	test   %eax,%eax
    b53f:	0f 85 74 fe ff ff    	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b545:	48 89 ef             	mov    %rbp,%rdi
    b548:	e8 63 7d 00 00       	callq  132b0 <mbedtls_md_starts>
    b54d:	85 c0                	test   %eax,%eax
    b54f:	0f 85 64 fe ff ff    	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b555:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    b55a:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b55f:	48 89 ef             	mov    %rbp,%rdi
    b562:	48 01 d6             	add    %rdx,%rsi
    b565:	e8 06 7e 00 00       	callq  13370 <mbedtls_md_update>
    b56a:	85 c0                	test   %eax,%eax
    b56c:	0f 85 47 fe ff ff    	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b572:	4c 89 fa             	mov    %r15,%rdx
    b575:	4c 89 f6             	mov    %r14,%rsi
    b578:	48 89 ef             	mov    %rbp,%rdi
    b57b:	e8 f0 7d 00 00       	callq  13370 <mbedtls_md_update>
    b580:	85 c0                	test   %eax,%eax
    b582:	0f 85 31 fe ff ff    	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b588:	4c 89 f6             	mov    %r14,%rsi
    b58b:	48 89 ef             	mov    %rbp,%rdi
    b58e:	e8 5d 7e 00 00       	callq  133f0 <mbedtls_md_finish>
    b593:	85 c0                	test   %eax,%eax
    b595:	0f 85 1e fe ff ff    	jne    b3b9 <mbedtls_ct_hmac+0x99>
    b59b:	48 89 ef             	mov    %rbp,%rdi
    b59e:	e8 6d 86 00 00       	callq  13c10 <mbedtls_md_hmac_reset>
    b5a3:	e9 11 fe ff ff       	jmpq   b3b9 <mbedtls_ct_hmac+0x99>
    b5a8:	41 c7 06 21 21 21 21 	movl   $0x21212121,(%r14)
    b5af:	43 c7 44 3e fc 21 21 	movl   $0x21212121,-0x4(%r14,%r15,1)
    b5b6:	21 21 
    b5b8:	e9 8e fe ff ff       	jmpq   b44b <mbedtls_ct_hmac+0x12b>
    b5bd:	e8 ae 8c ff ff       	callq  4270 <__stack_chk_fail@plt>
    b5c2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b5c9:	00 00 00 00 
    b5cd:	0f 1f 00             	nopl   (%rax)

000000000000b5d0 <mbedtls_mpi_safe_cond_assign>:
    b5d0:	f3 0f 1e fa          	endbr64 
    b5d4:	41 56                	push   %r14
    b5d6:	44 0f b6 f2          	movzbl %dl,%r14d
    b5da:	41 55                	push   %r13
    b5dc:	41 54                	push   %r12
    b5de:	41 89 d4             	mov    %edx,%r12d
    b5e1:	55                   	push   %rbp
    b5e2:	48 89 f5             	mov    %rsi,%rbp
    b5e5:	53                   	push   %rbx
    b5e6:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    b5ea:	48 89 fb             	mov    %rdi,%rbx
    b5ed:	e8 fe 95 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    b5f2:	41 89 c5             	mov    %eax,%r13d
    b5f5:	85 c0                	test   %eax,%eax
    b5f7:	74 0f                	je     b608 <mbedtls_mpi_safe_cond_assign+0x38>
    b5f9:	5b                   	pop    %rbx
    b5fa:	44 89 e8             	mov    %r13d,%eax
    b5fd:	5d                   	pop    %rbp
    b5fe:	41 5c                	pop    %r12
    b600:	41 5d                	pop    %r13
    b602:	41 5e                	pop    %r14
    b604:	c3                   	retq   
    b605:	0f 1f 00             	nopl   (%rax)
    b608:	8b 03                	mov    (%rbx),%eax
    b60a:	41 0f b6 cc          	movzbl %r12b,%ecx
    b60e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    b612:	8d 34 09             	lea    (%rcx,%rcx,1),%esi
    b615:	8d 50 01             	lea    0x1(%rax),%edx
    b618:	8b 45 00             	mov    0x0(%rbp),%eax
    b61b:	83 c0 01             	add    $0x1,%eax
    b61e:	31 d0                	xor    %edx,%eax
    b620:	21 f0                	and    %esi,%eax
    b622:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    b626:	31 d0                	xor    %edx,%eax
    b628:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    b62c:	83 e8 01             	sub    $0x1,%eax
    b62f:	89 03                	mov    %eax,(%rbx)
    b631:	e8 ba e9 ff ff       	callq  9ff0 <mbedtls_mpi_core_cond_assign>
    b636:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    b63a:	48 3b 53 08          	cmp    0x8(%rbx),%rdx
    b63e:	73 b9                	jae    b5f9 <mbedtls_mpi_safe_cond_assign+0x29>
    b640:	4c 89 f6             	mov    %r14,%rsi
    b643:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    b647:	48 f7 de             	neg    %rsi
    b64a:	4c 09 f6             	or     %r14,%rsi
    b64d:	48 c1 fe 3f          	sar    $0x3f,%rsi
    b651:	48 f7 d6             	not    %rsi
    b654:	0f 1f 40 00          	nopl   0x0(%rax)
    b658:	48 21 34 d1          	and    %rsi,(%rcx,%rdx,8)
    b65c:	48 83 c2 01          	add    $0x1,%rdx
    b660:	48 39 53 08          	cmp    %rdx,0x8(%rbx)
    b664:	77 f2                	ja     b658 <mbedtls_mpi_safe_cond_assign+0x88>
    b666:	5b                   	pop    %rbx
    b667:	44 89 e8             	mov    %r13d,%eax
    b66a:	5d                   	pop    %rbp
    b66b:	41 5c                	pop    %r12
    b66d:	41 5d                	pop    %r13
    b66f:	41 5e                	pop    %r14
    b671:	c3                   	retq   
    b672:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b679:	00 00 00 00 
    b67d:	0f 1f 00             	nopl   (%rax)

000000000000b680 <mbedtls_mpi_safe_cond_swap>:
    b680:	e9 6b 7d 02 00       	jmpq   333f0 <mbedtls_mpi_safe_cond_swap.instr.bb_b680>
    b685:	e9 e8 7d 02 00       	jmpq   33472 <instr.bb_b6a9>
    b68a:	84 99 00 00 00 e9    	test   %bl,-0x17000000(%rcx)
    b690:	95                   	xchg   %eax,%ebp
    b691:	7d 02                	jge    b695 <mbedtls_mpi_safe_cond_swap+0x15>
    b693:	00 55 48             	add    %dl,0x48(%rbp)
    b696:	89 f5                	mov    %esi,%ebp
    b698:	53                   	push   %rbx
    b699:	48 89 fb             	mov    %rdi,%rbx
    b69c:	48 83 ec 10          	sub    $0x10,%rsp
    b6a0:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    b6a4:	e8 47 95 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
    b6a9:	eb da                	jmp    b685 <mbedtls_mpi_safe_cond_swap+0x5>
    b6ab:	74 13                	je     b6c0 <mbedtls_mpi_safe_cond_swap+0x40>
    b6ad:	e9 c8 7d 02 00       	jmpq   3347a <instr.bb_b6ad>
    b6b2:	5d                   	pop    %rbp
    b6b3:	41 5c                	pop    %r12
    b6b5:	c3                   	retq   
    b6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b6bd:	00 00 00 
    b6c0:	e9 cb 7d 02 00       	jmpq   33490 <instr.bb_b6c0>
    b6c5:	e9 d2 7d 02 00       	jmpq   3349c <instr.bb_b6cc>
    b6ca:	ff                   	(bad)  
    b6cb:	ff                   	(bad)  
    b6cc:	eb f7                	jmp    b6c5 <mbedtls_mpi_safe_cond_swap+0x45>
    b6ce:	75 dd                	jne    b6ad <mbedtls_mpi_safe_cond_swap+0x2d>
    b6d0:	e9 cf 7d 02 00       	jmpq   334a4 <instr.bb_b6d0>
    b6d5:	03 41 0f             	add    0xf(%rcx),%eax
    b6d8:	b6 cc                	mov    $0xcc,%dh
    b6da:	8d 3c 09             	lea    (%rcx,%rcx,1),%edi
    b6dd:	8d 50 01             	lea    0x1(%rax),%edx
    b6e0:	8b 45 00             	mov    0x0(%rbp),%eax
    b6e3:	8d 70 01             	lea    0x1(%rax),%esi
    b6e6:	31 d6                	xor    %edx,%esi
    b6e8:	21 fe                	and    %edi,%esi
    b6ea:	31 d6                	xor    %edx,%esi
    b6ec:	83 ee 01             	sub    $0x1,%esi
    b6ef:	89 33                	mov    %esi,(%rbx)
    b6f1:	8b 45 00             	mov    0x0(%rbp),%eax
    b6f4:	8d 70 01             	lea    0x1(%rax),%esi
    b6f7:	31 f2                	xor    %esi,%edx
    b6f9:	21 fa                	and    %edi,%edx
    b6fb:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    b6ff:	31 f2                	xor    %esi,%edx
    b701:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    b705:	83 ea 01             	sub    $0x1,%edx
    b708:	89 55 00             	mov    %edx,0x0(%rbp)
    b70b:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    b70f:	e8 0c e9 ff ff       	callq  a020 <mbedtls_mpi_core_cond_swap>
    b714:	e9 2b 7e 02 00       	jmpq   33544 <instr.bb_b714>
    b719:	83 c4 10             	add    $0x10,%esp
    b71c:	5b                   	pop    %rbx
    b71d:	5d                   	pop    %rbp
    b71e:	41 5c                	pop    %r12
    b720:	c3                   	retq   
    b721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b728:	c3                   	retq   
    b729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b730 <mbedtls_mpi_core_lt_ct>:
    b730:	e9 2b 7e 02 00       	jmpq   33560 <mbedtls_mpi_core_lt_ct.instr.bb_b730>
    b735:	85 d2                	test   %edx,%edx
    b737:	74 6f                	je     b7a8 <mbedtls_mpi_core_lt_ct+0x78>
    b739:	e9 41 7e 02 00       	jmpq   3357f <instr.bb_b739>
    b73e:	ba 01 00 00 00       	mov    $0x1,%edx
    b743:	53                   	push   %rbx
    b744:	31 db                	xor    %ebx,%ebx
    b746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b74d:	00 00 00 
    b750:	e9 3b 7e 02 00       	jmpq   33590 <instr.bb_b750>
    b755:	48 8b 4c d7 f8       	mov    -0x8(%rdi,%rdx,8),%rcx
    b75a:	48 89 c5             	mov    %rax,%rbp
    b75d:	49 89 cb             	mov    %rcx,%r11
    b760:	49 89 c8             	mov    %rcx,%r8
    b763:	48 29 cd             	sub    %rcx,%rbp
    b766:	49 31 c3             	xor    %rax,%r11
    b769:	48 29 c1             	sub    %rax,%rcx
    b76c:	49 31 e8             	xor    %rbp,%r8
    b76f:	48 31 c8             	xor    %rcx,%rax
    b772:	4d 21 d8             	and    %r11,%r8
    b775:	4c 21 d8             	and    %r11,%rax
    b778:	49 31 e8             	xor    %rbp,%r8
    b77b:	48 31 c8             	xor    %rcx,%rax
    b77e:	44 89 d1             	mov    %r10d,%ecx
    b781:	49 c1 e8 3f          	shr    $0x3f,%r8
    b785:	48 c1 e8 3f          	shr    $0x3f,%rax
    b789:	41 09 d8             	or     %ebx,%r8d
    b78c:	44 29 c1             	sub    %r8d,%ecx
    b78f:	44 89 c3             	mov    %r8d,%ebx
    b792:	21 c1                	and    %eax,%ecx
    b794:	09 c3                	or     %eax,%ebx
    b796:	41 09 c9             	or     %ecx,%r9d
    b799:	48 83 ea 01          	sub    $0x1,%rdx
    b79d:	75 b1                	jne    b750 <mbedtls_mpi_core_lt_ct+0x20>
    b79f:	e9 3f 7e 02 00       	jmpq   335e3 <instr.bb_b79f>
    b7a4:	c3                   	retq   
    b7a5:	0f 1f 00             	nopl   (%rax)
    b7a8:	45 31 c9             	xor    %r9d,%r9d
    b7ab:	44 89 c8             	mov    %r9d,%eax
    b7ae:	c3                   	retq   
    b7af:	90                   	nop

000000000000b7b0 <mbedtls_mpi_lt_mpi_ct>:
    b7b0:	f3 0f 1e fa          	endbr64 
    b7b4:	4c 8b 47 08          	mov    0x8(%rdi),%r8
    b7b8:	4c 3b 46 08          	cmp    0x8(%rsi),%r8
    b7bc:	0f 85 d1 00 00 00    	jne    b893 <mbedtls_mpi_lt_mpi_ct+0xe3>
    b7c2:	8b 07                	mov    (%rdi),%eax
    b7c4:	44 8b 0e             	mov    (%rsi),%r9d
    b7c7:	d1 f8                	sar    %eax
    b7c9:	41 d1 f9             	sar    %r9d
    b7cc:	41 89 c3             	mov    %eax,%r11d
    b7cf:	41 31 c1             	xor    %eax,%r9d
    b7d2:	41 83 e3 01          	and    $0x1,%r11d
    b7d6:	45 89 ca             	mov    %r9d,%r10d
    b7d9:	45 21 d9             	and    %r11d,%r9d
    b7dc:	41 83 e2 01          	and    $0x1,%r10d
    b7e0:	44 89 0a             	mov    %r9d,(%rdx)
    b7e3:	4d 85 c0             	test   %r8,%r8
    b7e6:	0f 84 a4 00 00 00    	je     b890 <mbedtls_mpi_lt_mpi_ct+0xe0>
    b7ec:	41 56                	push   %r14
    b7ee:	41 55                	push   %r13
    b7f0:	41 54                	push   %r12
    b7f2:	55                   	push   %rbp
    b7f3:	53                   	push   %rbx
    b7f4:	bb 01 00 00 00       	mov    $0x1,%ebx
    b7f9:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
    b7fd:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    b801:	44 29 db             	sub    %r11d,%ebx
    b804:	bf 01 00 00 00       	mov    $0x1,%edi
    b809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b810:	4a 8b 44 c5 f8       	mov    -0x8(%rbp,%r8,8),%rax
    b815:	4f 8b 6c c4 f8       	mov    -0x8(%r12,%r8,8),%r13
    b81a:	48 89 c6             	mov    %rax,%rsi
    b81d:	4d 89 ee             	mov    %r13,%r14
    b820:	4c 89 e9             	mov    %r13,%rcx
    b823:	4c 29 ee             	sub    %r13,%rsi
    b826:	49 29 c5             	sub    %rax,%r13
    b829:	49 31 c6             	xor    %rax,%r14
    b82c:	48 31 f1             	xor    %rsi,%rcx
    b82f:	4c 31 e8             	xor    %r13,%rax
    b832:	4c 21 f1             	and    %r14,%rcx
    b835:	4c 21 f0             	and    %r14,%rax
    b838:	41 89 fe             	mov    %edi,%r14d
    b83b:	45 29 d6             	sub    %r10d,%r14d
    b83e:	48 31 f1             	xor    %rsi,%rcx
    b841:	44 89 d6             	mov    %r10d,%esi
    b844:	4c 31 e8             	xor    %r13,%rax
    b847:	48 c1 e9 3f          	shr    $0x3f,%rcx
    b84b:	45 89 f2             	mov    %r14d,%r10d
    b84e:	48 c1 e8 3f          	shr    $0x3f,%rax
    b852:	41 89 dd             	mov    %ebx,%r13d
    b855:	45 21 da             	and    %r11d,%r10d
    b858:	09 ce                	or     %ecx,%esi
    b85a:	41 21 c5             	and    %eax,%r13d
    b85d:	44 21 d1             	and    %r10d,%ecx
    b860:	41 89 fa             	mov    %edi,%r10d
    b863:	41 29 f2             	sub    %esi,%r10d
    b866:	09 c6                	or     %eax,%esi
    b868:	45 21 ea             	and    %r13d,%r10d
    b86b:	44 09 d1             	or     %r10d,%ecx
    b86e:	41 89 f2             	mov    %esi,%r10d
    b871:	41 09 c9             	or     %ecx,%r9d
    b874:	49 83 e8 01          	sub    $0x1,%r8
    b878:	75 96                	jne    b810 <mbedtls_mpi_lt_mpi_ct+0x60>
    b87a:	5b                   	pop    %rbx
    b87b:	31 c0                	xor    %eax,%eax
    b87d:	5d                   	pop    %rbp
    b87e:	44 89 0a             	mov    %r9d,(%rdx)
    b881:	41 5c                	pop    %r12
    b883:	41 5d                	pop    %r13
    b885:	41 5e                	pop    %r14
    b887:	c3                   	retq   
    b888:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b88f:	00 
    b890:	31 c0                	xor    %eax,%eax
    b892:	c3                   	retq   
    b893:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    b898:	c3                   	retq   
    b899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b8a0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding>:
    b8a0:	f3 0f 1e fa          	endbr64 
    b8a4:	41 57                	push   %r15
    b8a6:	41 56                	push   %r14
    b8a8:	41 55                	push   %r13
    b8aa:	4d 89 c5             	mov    %r8,%r13
    b8ad:	4c 8d 46 f5          	lea    -0xb(%rsi),%r8
    b8b1:	41 54                	push   %r12
    b8b3:	55                   	push   %rbp
    b8b4:	53                   	push   %rbx
    b8b5:	48 83 ec 18          	sub    $0x18,%rsp
    b8b9:	0f b6 5f 01          	movzbl 0x1(%rdi),%ebx
    b8bd:	49 39 c8             	cmp    %rcx,%r8
    b8c0:	4c 0f 47 c1          	cmova  %rcx,%r8
    b8c4:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    b8c9:	83 f3 02             	xor    $0x2,%ebx
    b8cc:	0a 1f                	or     (%rdi),%bl
    b8ce:	0f b6 db             	movzbl %bl,%ebx
    b8d1:	48 83 fe 02          	cmp    $0x2,%rsi
    b8d5:	0f 86 9d 01 00 00    	jbe    ba78 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1d8>
    b8db:	4c 8d 4f 02          	lea    0x2(%rdi),%r9
    b8df:	4c 8d 1c 37          	lea    (%rdi,%rsi,1),%r11
    b8e3:	31 d2                	xor    %edx,%edx
    b8e5:	45 31 d2             	xor    %r10d,%r10d
    b8e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b8ef:	00 
    b8f0:	41 0f b6 29          	movzbl (%r9),%ebp
    b8f4:	49 83 c1 01          	add    $0x1,%r9
    b8f8:	89 e8                	mov    %ebp,%eax
    b8fa:	f7 d8                	neg    %eax
    b8fc:	09 e8                	or     %ebp,%eax
    b8fe:	c0 e8 07             	shr    $0x7,%al
    b901:	83 f0 01             	xor    $0x1,%eax
    b904:	09 c2                	or     %eax,%edx
    b906:	89 d0                	mov    %edx,%eax
    b908:	f7 d8                	neg    %eax
    b90a:	09 d0                	or     %edx,%eax
    b90c:	c0 e8 07             	shr    $0x7,%al
    b90f:	83 f0 01             	xor    $0x1,%eax
    b912:	0f b6 c0             	movzbl %al,%eax
    b915:	49 01 c2             	add    %rax,%r10
    b918:	4d 39 cb             	cmp    %r9,%r11
    b91b:	75 d3                	jne    b8f0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x50>
    b91d:	0f b6 d2             	movzbl %dl,%edx
    b920:	44 89 d0             	mov    %r10d,%eax
    b923:	49 83 ea 08          	sub    $0x8,%r10
    b927:	f7 da                	neg    %edx
    b929:	49 c1 ea 3f          	shr    $0x3f,%r10
    b92d:	c1 ea 1f             	shr    $0x1f,%edx
    b930:	83 f2 01             	xor    $0x1,%edx
    b933:	44 09 d2             	or     %r10d,%edx
    b936:	44 8d 5e fd          	lea    -0x3(%rsi),%r11d
    b93a:	09 da                	or     %ebx,%edx
    b93c:	41 29 c3             	sub    %eax,%r11d
    b93f:	89 d0                	mov    %edx,%eax
    b941:	44 89 db             	mov    %r11d,%ebx
    b944:	f7 d8                	neg    %eax
    b946:	44 31 c3             	xor    %r8d,%ebx
    b949:	09 d0                	or     %edx,%eax
    b94b:	c1 f8 1f             	sar    $0x1f,%eax
    b94e:	21 c3                	and    %eax,%ebx
    b950:	44 31 db             	xor    %r11d,%ebx
    b953:	41 89 d9             	mov    %ebx,%r9d
    b956:	4c 89 c3             	mov    %r8,%rbx
    b959:	4c 29 cb             	sub    %r9,%rbx
    b95c:	4d 89 cb             	mov    %r9,%r11
    b95f:	49 89 d9             	mov    %rbx,%r9
    b962:	48 c1 eb 3f          	shr    $0x3f,%rbx
    b966:	49 c1 f9 3f          	sar    $0x3f,%r9
    b96a:	41 09 d9             	or     %ebx,%r9d
    b96d:	09 d3                	or     %edx,%ebx
    b96f:	41 c1 f9 1f          	sar    $0x1f,%r9d
    b973:	89 da                	mov    %ebx,%edx
    b975:	45 89 ca             	mov    %r9d,%r10d
    b978:	f7 da                	neg    %edx
    b97a:	41 81 e2 00 44 00 00 	and    $0x4400,%r10d
    b981:	09 da                	or     %ebx,%edx
    b983:	45 89 d4             	mov    %r10d,%r12d
    b986:	c1 fa 1f             	sar    $0x1f,%edx
    b989:	41 81 f4 00 41 00 00 	xor    $0x4100,%r12d
    b990:	f7 d2                	not    %edx
    b992:	41 21 c4             	and    %eax,%r12d
    b995:	48 8d 47 0b          	lea    0xb(%rdi),%rax
    b999:	45 31 d4             	xor    %r10d,%r12d
    b99c:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
    b9a0:	41 f7 dc             	neg    %r12d
    b9a3:	48 83 fe 0b          	cmp    $0xb,%rsi
    b9a7:	76 12                	jbe    b9bb <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x11b>
    b9a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b9b0:	20 10                	and    %dl,(%rax)
    b9b2:	48 83 c0 01          	add    $0x1,%rax
    b9b6:	49 39 c2             	cmp    %rax,%r10
    b9b9:	75 f5                	jne    b9b0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x110>
    b9bb:	44 89 db             	mov    %r11d,%ebx
    b9be:	4c 29 c6             	sub    %r8,%rsi
    b9c1:	44 31 c3             	xor    %r8d,%ebx
    b9c4:	48 8d 2c 37          	lea    (%rdi,%rsi,1),%rbp
    b9c8:	44 21 cb             	and    %r9d,%ebx
    b9cb:	44 31 db             	xor    %r11d,%ebx
    b9ce:	4d 85 c0             	test   %r8,%r8
    b9d1:	74 6e                	je     ba41 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a1>
    b9d3:	4d 8d 70 ff          	lea    -0x1(%r8),%r14
    b9d7:	49 89 d9             	mov    %rbx,%r9
    b9da:	4d 89 c7             	mov    %r8,%r15
    b9dd:	4e 8d 54 35 00       	lea    0x0(%rbp,%r14,1),%r10
    b9e2:	49 f7 d9             	neg    %r9
    b9e5:	49 29 df             	sub    %rbx,%r15
    b9e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b9ef:	00 
    b9f0:	4c 89 ce             	mov    %r9,%rsi
    b9f3:	4c 89 c8             	mov    %r9,%rax
    b9f6:	48 89 ea             	mov    %rbp,%rdx
    b9f9:	48 c1 fe 3f          	sar    $0x3f,%rsi
    b9fd:	48 c1 e8 3f          	shr    $0x3f,%rax
    ba01:	48 89 f7             	mov    %rsi,%rdi
    ba04:	09 c7                	or     %eax,%edi
    ba06:	c1 ff 1f             	sar    $0x1f,%edi
    ba09:	4d 85 f6             	test   %r14,%r14
    ba0c:	74 21                	je     ba2f <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x18f>
    ba0e:	66 90                	xchg   %ax,%ax
    ba10:	0f b6 02             	movzbl (%rdx),%eax
    ba13:	49 89 d3             	mov    %rdx,%r11
    ba16:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
    ba1a:	48 83 c2 01          	add    $0x1,%rdx
    ba1e:	31 f0                	xor    %esi,%eax
    ba20:	0f b6 c0             	movzbl %al,%eax
    ba23:	21 f8                	and    %edi,%eax
    ba25:	31 c6                	xor    %eax,%esi
    ba27:	41 88 33             	mov    %sil,(%r11)
    ba2a:	49 39 d2             	cmp    %rdx,%r10
    ba2d:	75 e1                	jne    ba10 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x170>
    ba2f:	41 0f b6 02          	movzbl (%r10),%eax
    ba33:	49 83 c1 01          	add    $0x1,%r9
    ba37:	21 c7                	and    %eax,%edi
    ba39:	41 88 3a             	mov    %dil,(%r10)
    ba3c:	4d 39 cf             	cmp    %r9,%r15
    ba3f:	75 af                	jne    b9f0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x150>
    ba41:	48 85 c9             	test   %rcx,%rcx
    ba44:	75 1a                	jne    ba60 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1c0>
    ba46:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    ba4a:	48 83 c4 18          	add    $0x18,%rsp
    ba4e:	44 89 e0             	mov    %r12d,%eax
    ba51:	5b                   	pop    %rbx
    ba52:	5d                   	pop    %rbp
    ba53:	41 5c                	pop    %r12
    ba55:	41 5d                	pop    %r13
    ba57:	41 5e                	pop    %r14
    ba59:	41 5f                	pop    %r15
    ba5b:	c3                   	retq   
    ba5c:	0f 1f 40 00          	nopl   0x0(%rax)
    ba60:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    ba65:	4c 89 c2             	mov    %r8,%rdx
    ba68:	48 89 ee             	mov    %rbp,%rsi
    ba6b:	e8 b0 88 ff ff       	callq  4320 <memcpy@plt>
    ba70:	eb d4                	jmp    ba46 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a6>
    ba72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ba78:	ba 01 00 00 00       	mov    $0x1,%edx
    ba7d:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    ba83:	31 c0                	xor    %eax,%eax
    ba85:	e9 a9 fe ff ff       	jmpq   b933 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x93>
    ba8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ba90 <ecdh_compute_shared_restartable.constprop.0>:
    ba90:	e9 5b 7b 02 00       	jmpq   335f0 <ecdh_compute_shared_restartable.constprop.0.instr.bb_ba90>
    ba95:	41 56                	push   %r14
    ba97:	49 89 f6             	mov    %rsi,%r14
    ba9a:	41 55                	push   %r13
    ba9c:	49 89 cd             	mov    %rcx,%r13
    ba9f:	41 54                	push   %r12
    baa1:	49 89 fc             	mov    %rdi,%r12
    baa4:	55                   	push   %rbp
    baa5:	53                   	push   %rbx
    baa6:	4c 89 c3             	mov    %r8,%rbx
    baa9:	48 83 ec 68          	sub    $0x68,%rsp
    baad:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    bab2:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    bab7:	48 89 ef             	mov    %rbp,%rdi
    baba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bac1:	00 00 
    bac3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    bac8:	31 c0                	xor    %eax,%eax
    baca:	e8 d1 1c 00 00       	callq  d7a0 <mbedtls_ecp_point_init>
    bacf:	e9 b4 7b 02 00       	jmpq   33688 <instr.bb_bacf>
    bad4:	89 f9                	mov    %edi,%ecx
    bad6:	4c 89 ea             	mov    %r13,%rdx
    bad9:	6a 00                	pushq  $0x0
    badb:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    bae0:	4c 89 e7             	mov    %r12,%rdi
    bae3:	49 89 d8             	mov    %rbx,%r8
    bae6:	48 89 ee             	mov    %rbp,%rsi
    bae9:	e8 52 3f 00 00       	callq  fa40 <mbedtls_ecp_mul_restartable>
    baee:	e9 e3 7b 02 00       	jmpq   336d6 <instr.bb_baee>
    baf3:	85 c0                	test   %eax,%eax
    baf5:	74 31                	je     bb28 <ecdh_compute_shared_restartable.constprop.0+0x98>
    baf7:	e9 e7 7b 02 00       	jmpq   336e3 <instr.bb_baf7>
    bafc:	1d 00 00 e9 e7       	sbb    $0xe7e90000,%eax
    bb01:	7b 02                	jnp    bb05 <ecdh_compute_shared_restartable.constprop.0+0x75>
    bb03:	00 64 48 33          	add    %ah,0x33(%rax,%rcx,2)
    bb07:	04 25                	add    $0x25,%al
    bb09:	28 00                	sub    %al,(%rax)
    bb0b:	00 00                	add    %al,(%rax)
    bb0d:	75 41                	jne    bb50 <ecdh_compute_shared_restartable.constprop.0+0xc0>
    bb0f:	e9 eb 7b 02 00       	jmpq   336ff <instr.bb_bb0f>
    bb14:	89 e0                	mov    %esp,%eax
    bb16:	5b                   	pop    %rbx
    bb17:	5d                   	pop    %rbp
    bb18:	41 5c                	pop    %r12
    bb1a:	41 5d                	pop    %r13
    bb1c:	41 5e                	pop    %r14
    bb1e:	41 5f                	pop    %r15
    bb20:	c3                   	retq   
    bb21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bb28:	e9 f3 7b 02 00       	jmpq   33720 <instr.bb_bb28>
    bb2d:	27                   	(bad)  
    bb2e:	00 00                	add    %al,(%rax)
    bb30:	eb 07                	jmp    bb39 <ecdh_compute_shared_restartable.constprop.0+0xa9>
    bb32:	75 14                	jne    bb48 <ecdh_compute_shared_restartable.constprop.0+0xb8>
    bb34:	e9 f7 7b 02 00       	jmpq   33730 <instr.bb_bb34>
    bb39:	e9 ea 7b 02 00       	jmpq   33728 <instr.bb_bb30>
    bb3e:	ff                   	(bad)  
    bb3f:	e9 26 7c 02 00       	jmpq   3376a <instr.bb_bb3f>
    bb44:	0f 1f 40 00          	nopl   0x0(%rax)
    bb48:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    bb4e:	eb a7                	jmp    baf7 <ecdh_compute_shared_restartable.constprop.0+0x67>
    bb50:	e8 1b 87 ff ff       	callq  4270 <__stack_chk_fail@plt>
    bb55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    bb5c:	00 00 00 00 

000000000000bb60 <ecdh_gen_public_restartable.constprop.0>:
    bb60:	e9 1b 7c 02 00       	jmpq   33780 <ecdh_gen_public_restartable.constprop.0.instr.bb_bb60>
    bb65:	e9 a2 7c 02 00       	jmpq   3380c <instr.bb_bb82>
    bb6a:	41 54                	push   %r12
    bb6c:	49 89 f4             	mov    %rsi,%r12
    bb6f:	55                   	push   %rbp
    bb70:	48 89 fd             	mov    %rdi,%rbp
    bb73:	53                   	push   %rbx
    bb74:	48 89 cb             	mov    %rcx,%rbx
    bb77:	4c 89 c1             	mov    %r8,%rcx
    bb7a:	48 89 da             	mov    %rbx,%rdx
    bb7d:	e8 1e 44 00 00       	callq  ffa0 <mbedtls_ecp_gen_privkey>
    bb82:	eb e1                	jmp    bb65 <ecdh_gen_public_restartable.constprop.0+0x5>
    bb84:	75 24                	jne    bbaa <ecdh_gen_public_restartable.constprop.0+0x4a>
    bb86:	e9 89 7c 02 00       	jmpq   33814 <instr.bb_bb86>
    bb8b:	8d 4d 50             	lea    0x50(%rbp),%ecx
    bb8e:	4c 89 e2             	mov    %r12,%rdx
    bb91:	4d 89 f1             	mov    %r14,%r9
    bb94:	6a 00                	pushq  $0x0
    bb96:	49 89 d8             	mov    %rbx,%r8
    bb99:	4c 89 ee             	mov    %r13,%rsi
    bb9c:	48 89 ef             	mov    %rbp,%rdi
    bb9f:	e8 9c 3e 00 00       	callq  fa40 <mbedtls_ecp_mul_restartable>
    bba4:	e9 b8 7c 02 00       	jmpq   33861 <instr.bb_bba4>
    bba9:	fa                   	cli    
    bbaa:	5b                   	pop    %rbx
    bbab:	5d                   	pop    %rbp
    bbac:	41 5c                	pop    %r12
    bbae:	41 5d                	pop    %r13
    bbb0:	41 5e                	pop    %r14
    bbb2:	c3                   	retq   
    bbb3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    bbba:	00 00 00 00 
    bbbe:	66 90                	xchg   %ax,%ax

000000000000bbc0 <mbedtls_ecdh_can_do>:
    bbc0:	f3 0f 1e fa          	endbr64 
    bbc4:	b8 01 00 00 00       	mov    $0x1,%eax
    bbc9:	c3                   	retq   
    bbca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000bbd0 <mbedtls_ecdh_gen_public>:
    bbd0:	e9 9b 7c 02 00       	jmpq   33870 <mbedtls_ecdh_gen_public.instr.bb_bbd0>
    bbd5:	8a 66 2e             	mov    0x2e(%rsi),%ah
    bbd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bbdf:	00 

000000000000bbe0 <mbedtls_ecdh_compute_shared>:
    bbe0:	e9 9b 7c 02 00       	jmpq   33880 <mbedtls_ecdh_compute_shared.instr.bb_bbe0>
    bbe5:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    bbe6:	fe                   	(bad)  
    bbe7:	ff                   	(bad)  
    bbe8:	ff 0f                	decl   (%rdi)
    bbea:	1f                   	(bad)  
    bbeb:	80 00 00             	addb   $0x0,(%rax)
	...

000000000000bbf0 <mbedtls_ecdh_init>:
    bbf0:	f3 0f 1e fa          	endbr64 
    bbf4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    bbfb:	48 89 fa             	mov    %rdi,%rdx
    bbfe:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    bc02:	31 c0                	xor    %eax,%eax
    bc04:	48 c7 87 b8 01 00 00 	movq   $0x0,0x1b8(%rdi)
    bc0b:	00 00 00 00 
    bc0f:	48 89 d1             	mov    %rdx,%rcx
    bc12:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    bc16:	48 29 f9             	sub    %rdi,%rcx
    bc19:	81 c1 c8 01 00 00    	add    $0x1c8,%ecx
    bc1f:	c1 e9 03             	shr    $0x3,%ecx
    bc22:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    bc25:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%rdx)
    bc2c:	c6 02 00             	movb   $0x0,(%rdx)
    bc2f:	c3                   	retq   

000000000000bc30 <mbedtls_ecdh_setup>:
    bc30:	f3 0f 1e fa          	endbr64 
    bc34:	41 54                	push   %r12
    bc36:	4c 8d 67 10          	lea    0x10(%rdi),%r12
    bc3a:	55                   	push   %rbp
    bc3b:	89 f5                	mov    %esi,%ebp
    bc3d:	53                   	push   %rbx
    bc3e:	48 89 fb             	mov    %rdi,%rbx
    bc41:	89 77 04             	mov    %esi,0x4(%rdi)
    bc44:	c6 07 00             	movb   $0x0,(%rdi)
    bc47:	c7 47 08 01 00 00 00 	movl   $0x1,0x8(%rdi)
    bc4e:	4c 89 e7             	mov    %r12,%rdi
    bc51:	e8 6a 1b 00 00       	callq  d7c0 <mbedtls_ecp_group_init>
    bc56:	48 8d bb 08 01 00 00 	lea    0x108(%rbx),%rdi
    bc5d:	e8 0e 8f ff ff       	callq  4b70 <mbedtls_mpi_init>
    bc62:	48 8d bb 20 01 00 00 	lea    0x120(%rbx),%rdi
    bc69:	e8 32 1b 00 00       	callq  d7a0 <mbedtls_ecp_point_init>
    bc6e:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
    bc75:	e8 26 1b 00 00       	callq  d7a0 <mbedtls_ecp_point_init>
    bc7a:	48 8d bb b0 01 00 00 	lea    0x1b0(%rbx),%rdi
    bc81:	e8 ea 8e ff ff       	callq  4b70 <mbedtls_mpi_init>
    bc86:	89 ee                	mov    %ebp,%esi
    bc88:	4c 89 e7             	mov    %r12,%rdi
    bc8b:	e8 20 64 00 00       	callq  120b0 <mbedtls_ecp_group_load>
    bc90:	85 c0                	test   %eax,%eax
    bc92:	75 0c                	jne    bca0 <mbedtls_ecdh_setup+0x70>
    bc94:	5b                   	pop    %rbx
    bc95:	5d                   	pop    %rbp
    bc96:	41 5c                	pop    %r12
    bc98:	c3                   	retq   
    bc99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bca0:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    bca5:	eb ed                	jmp    bc94 <mbedtls_ecdh_setup+0x64>
    bca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bcae:	00 00 

000000000000bcb0 <mbedtls_ecdh_free>:
    bcb0:	f3 0f 1e fa          	endbr64 
    bcb4:	48 85 ff             	test   %rdi,%rdi
    bcb7:	74 17                	je     bcd0 <mbedtls_ecdh_free+0x20>
    bcb9:	53                   	push   %rbx
    bcba:	83 7f 08 01          	cmpl   $0x1,0x8(%rdi)
    bcbe:	48 89 fb             	mov    %rdi,%rbx
    bcc1:	74 15                	je     bcd8 <mbedtls_ecdh_free+0x28>
    bcc3:	c6 03 00             	movb   $0x0,(%rbx)
    bcc6:	48 c7 43 04 00 00 00 	movq   $0x0,0x4(%rbx)
    bccd:	00 
    bcce:	5b                   	pop    %rbx
    bccf:	c3                   	retq   
    bcd0:	c3                   	retq   
    bcd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bcd8:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
    bcdc:	e8 df 1b 00 00       	callq  d8c0 <mbedtls_ecp_group_free>
    bce1:	48 8d bb 08 01 00 00 	lea    0x108(%rbx),%rdi
    bce8:	e8 a3 8e ff ff       	callq  4b90 <mbedtls_mpi_free>
    bced:	48 8d bb 20 01 00 00 	lea    0x120(%rbx),%rdi
    bcf4:	e8 a7 1b 00 00       	callq  d8a0 <mbedtls_ecp_point_free>
    bcf9:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
    bd00:	e8 9b 1b 00 00       	callq  d8a0 <mbedtls_ecp_point_free>
    bd05:	48 8d bb b0 01 00 00 	lea    0x1b0(%rbx),%rdi
    bd0c:	e8 7f 8e ff ff       	callq  4b90 <mbedtls_mpi_free>
    bd11:	c6 03 00             	movb   $0x0,(%rbx)
    bd14:	48 c7 43 04 00 00 00 	movq   $0x0,0x4(%rbx)
    bd1b:	00 
    bd1c:	5b                   	pop    %rbx
    bd1d:	c3                   	retq   
    bd1e:	66 90                	xchg   %ax,%ax

000000000000bd20 <mbedtls_ecdh_make_params>:
    bd20:	f3 0f 1e fa          	endbr64 
    bd24:	41 57                	push   %r15
    bd26:	41 56                	push   %r14
    bd28:	41 55                	push   %r13
    bd2a:	41 54                	push   %r12
    bd2c:	55                   	push   %rbp
    bd2d:	53                   	push   %rbx
    bd2e:	48 83 ec 28          	sub    $0x28,%rsp
    bd32:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bd39:	00 00 
    bd3b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bd40:	31 c0                	xor    %eax,%eax
    bd42:	83 7f 08 01          	cmpl   $0x1,0x8(%rdi)
    bd46:	0f 85 b4 00 00 00    	jne    be00 <mbedtls_ecdh_make_params+0xe0>
    bd4c:	48 83 bf c0 00 00 00 	cmpq   $0x0,0xc0(%rdi)
    bd53:	00 
    bd54:	44 0f b6 2f          	movzbl (%rdi),%r13d
    bd58:	0f 84 a2 00 00 00    	je     be00 <mbedtls_ecdh_make_params+0xe0>
    bd5e:	4c 8d b7 20 01 00 00 	lea    0x120(%rdi),%r14
    bd65:	49 89 f4             	mov    %rsi,%r12
    bd68:	48 89 d3             	mov    %rdx,%rbx
    bd6b:	48 89 cd             	mov    %rcx,%rbp
    bd6e:	4c 8d 7f 10          	lea    0x10(%rdi),%r15
    bd72:	4c 89 c1             	mov    %r8,%rcx
    bd75:	48 8d b7 08 01 00 00 	lea    0x108(%rdi),%rsi
    bd7c:	4d 89 c8             	mov    %r9,%r8
    bd7f:	4c 89 f2             	mov    %r14,%rdx
    bd82:	4c 89 ff             	mov    %r15,%rdi
    bd85:	e8 d6 fd ff ff       	callq  bb60 <ecdh_gen_public_restartable.constprop.0>
    bd8a:	85 c0                	test   %eax,%eax
    bd8c:	74 22                	je     bdb0 <mbedtls_ecdh_make_params+0x90>
    bd8e:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    bd93:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    bd9a:	00 00 
    bd9c:	75 69                	jne    be07 <mbedtls_ecdh_make_params+0xe7>
    bd9e:	48 83 c4 28          	add    $0x28,%rsp
    bda2:	5b                   	pop    %rbx
    bda3:	5d                   	pop    %rbp
    bda4:	41 5c                	pop    %r12
    bda6:	41 5d                	pop    %r13
    bda8:	41 5e                	pop    %r14
    bdaa:	41 5f                	pop    %r15
    bdac:	c3                   	retq   
    bdad:	0f 1f 00             	nopl   (%rax)
    bdb0:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    bdb5:	48 89 e9             	mov    %rbp,%rcx
    bdb8:	48 89 da             	mov    %rbx,%rdx
    bdbb:	4c 89 ff             	mov    %r15,%rdi
    bdbe:	e8 3d 2b 00 00       	callq  e900 <mbedtls_ecp_tls_write_group>
    bdc3:	85 c0                	test   %eax,%eax
    bdc5:	75 c7                	jne    bd8e <mbedtls_ecdh_make_params+0x6e>
    bdc7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    bdcc:	49 89 e9             	mov    %rbp,%r9
    bdcf:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    bdd4:	4c 89 f6             	mov    %r14,%rsi
    bdd7:	41 0f b6 d5          	movzbl %r13b,%edx
    bddb:	4c 89 ff             	mov    %r15,%rdi
    bdde:	49 29 c1             	sub    %rax,%r9
    bde1:	4c 8d 04 03          	lea    (%rbx,%rax,1),%r8
    bde5:	e8 f6 29 00 00       	callq  e7e0 <mbedtls_ecp_tls_write_point>
    bdea:	85 c0                	test   %eax,%eax
    bdec:	75 a0                	jne    bd8e <mbedtls_ecdh_make_params+0x6e>
    bdee:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    bdf3:	48 03 54 24 08       	add    0x8(%rsp),%rdx
    bdf8:	49 89 14 24          	mov    %rdx,(%r12)
    bdfc:	eb 90                	jmp    bd8e <mbedtls_ecdh_make_params+0x6e>
    bdfe:	66 90                	xchg   %ax,%ax
    be00:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    be05:	eb 87                	jmp    bd8e <mbedtls_ecdh_make_params+0x6e>
    be07:	e8 64 84 ff ff       	callq  4270 <__stack_chk_fail@plt>
    be0c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000be10 <mbedtls_ecdh_read_params>:
    be10:	f3 0f 1e fa          	endbr64 
    be14:	41 54                	push   %r12
    be16:	49 89 f4             	mov    %rsi,%r12
    be19:	55                   	push   %rbp
    be1a:	48 89 d5             	mov    %rdx,%rbp
    be1d:	53                   	push   %rbx
    be1e:	48 89 fb             	mov    %rdi,%rbx
    be21:	48 83 ec 10          	sub    $0x10,%rsp
    be25:	48 2b 16             	sub    (%rsi),%rdx
    be28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    be2f:	00 00 
    be31:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    be36:	31 c0                	xor    %eax,%eax
    be38:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    be3d:	e8 ee 29 00 00       	callq  e830 <mbedtls_ecp_tls_read_group_id>
    be42:	85 c0                	test   %eax,%eax
    be44:	74 1a                	je     be60 <mbedtls_ecdh_read_params+0x50>
    be46:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    be4b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    be52:	00 00 
    be54:	75 49                	jne    be9f <mbedtls_ecdh_read_params+0x8f>
    be56:	48 83 c4 10          	add    $0x10,%rsp
    be5a:	5b                   	pop    %rbx
    be5b:	5d                   	pop    %rbp
    be5c:	41 5c                	pop    %r12
    be5e:	c3                   	retq   
    be5f:	90                   	nop
    be60:	8b 74 24 04          	mov    0x4(%rsp),%esi
    be64:	48 89 df             	mov    %rbx,%rdi
    be67:	e8 c4 fd ff ff       	callq  bc30 <mbedtls_ecdh_setup>
    be6c:	85 c0                	test   %eax,%eax
    be6e:	75 d6                	jne    be46 <mbedtls_ecdh_read_params+0x36>
    be70:	83 7b 08 01          	cmpl   $0x1,0x8(%rbx)
    be74:	75 22                	jne    be98 <mbedtls_ecdh_read_params+0x88>
    be76:	48 89 e9             	mov    %rbp,%rcx
    be79:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    be7d:	49 2b 0c 24          	sub    (%r12),%rcx
    be81:	4c 89 e2             	mov    %r12,%rdx
    be84:	48 8d b3 68 01 00 00 	lea    0x168(%rbx),%rsi
    be8b:	e8 00 29 00 00       	callq  e790 <mbedtls_ecp_tls_read_point>
    be90:	eb b4                	jmp    be46 <mbedtls_ecdh_read_params+0x36>
    be92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    be98:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    be9d:	eb a7                	jmp    be46 <mbedtls_ecdh_read_params+0x36>
    be9f:	e8 cc 83 ff ff       	callq  4270 <__stack_chk_fail@plt>
    bea4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    beab:	00 00 00 00 
    beaf:	90                   	nop

000000000000beb0 <mbedtls_ecdh_get_params>:
    beb0:	f3 0f 1e fa          	endbr64 
    beb4:	83 fa 01             	cmp    $0x1,%edx
    beb7:	0f 87 93 00 00 00    	ja     bf50 <mbedtls_ecdh_get_params+0xa0>
    bebd:	41 54                	push   %r12
    bebf:	41 89 d4             	mov    %edx,%r12d
    bec2:	55                   	push   %rbp
    bec3:	48 89 f5             	mov    %rsi,%rbp
    bec6:	53                   	push   %rbx
    bec7:	8b 47 04             	mov    0x4(%rdi),%eax
    beca:	48 89 fb             	mov    %rdi,%rbx
    becd:	8b 36                	mov    (%rsi),%esi
    becf:	85 c0                	test   %eax,%eax
    bed1:	74 4d                	je     bf20 <mbedtls_ecdh_get_params+0x70>
    bed3:	39 f0                	cmp    %esi,%eax
    bed5:	75 69                	jne    bf40 <mbedtls_ecdh_get_params+0x90>
    bed7:	83 7b 08 01          	cmpl   $0x1,0x8(%rbx)
    bedb:	75 63                	jne    bf40 <mbedtls_ecdh_get_params+0x90>
    bedd:	48 8d b5 10 01 00 00 	lea    0x110(%rbp),%rsi
    bee4:	41 83 fc 01          	cmp    $0x1,%r12d
    bee8:	74 46                	je     bf30 <mbedtls_ecdh_get_params+0x80>
    beea:	48 8d bb 20 01 00 00 	lea    0x120(%rbx),%rdi
    bef1:	e8 ca 1a 00 00       	callq  d9c0 <mbedtls_ecp_copy>
    bef6:	85 c0                	test   %eax,%eax
    bef8:	74 06                	je     bf00 <mbedtls_ecdh_get_params+0x50>
    befa:	5b                   	pop    %rbx
    befb:	5d                   	pop    %rbp
    befc:	41 5c                	pop    %r12
    befe:	c3                   	retq   
    beff:	90                   	nop
    bf00:	48 8d b5 f8 00 00 00 	lea    0xf8(%rbp),%rsi
    bf07:	48 8d bb 08 01 00 00 	lea    0x108(%rbx),%rdi
    bf0e:	5b                   	pop    %rbx
    bf0f:	5d                   	pop    %rbp
    bf10:	41 5c                	pop    %r12
    bf12:	e9 09 8f ff ff       	jmpq   4e20 <mbedtls_mpi_copy>
    bf17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bf1e:	00 00 
    bf20:	e8 0b fd ff ff       	callq  bc30 <mbedtls_ecdh_setup>
    bf25:	85 c0                	test   %eax,%eax
    bf27:	74 ae                	je     bed7 <mbedtls_ecdh_get_params+0x27>
    bf29:	5b                   	pop    %rbx
    bf2a:	5d                   	pop    %rbp
    bf2b:	41 5c                	pop    %r12
    bf2d:	c3                   	retq   
    bf2e:	66 90                	xchg   %ax,%ax
    bf30:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
    bf37:	5b                   	pop    %rbx
    bf38:	5d                   	pop    %rbp
    bf39:	41 5c                	pop    %r12
    bf3b:	e9 80 1a 00 00       	jmpq   d9c0 <mbedtls_ecp_copy>
    bf40:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    bf45:	eb b3                	jmp    befa <mbedtls_ecdh_get_params+0x4a>
    bf47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bf4e:	00 00 
    bf50:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    bf55:	c3                   	retq   
    bf56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bf5d:	00 00 00 

000000000000bf60 <mbedtls_ecdh_make_public>:
    bf60:	f3 0f 1e fa          	endbr64 
    bf64:	83 7f 08 01          	cmpl   $0x1,0x8(%rdi)
    bf68:	0f 85 92 00 00 00    	jne    c000 <mbedtls_ecdh_make_public+0xa0>
    bf6e:	41 57                	push   %r15
    bf70:	41 56                	push   %r14
    bf72:	41 55                	push   %r13
    bf74:	41 54                	push   %r12
    bf76:	55                   	push   %rbp
    bf77:	53                   	push   %rbx
    bf78:	48 83 ec 08          	sub    $0x8,%rsp
    bf7c:	48 83 bf c0 00 00 00 	cmpq   $0x0,0xc0(%rdi)
    bf83:	00 
    bf84:	44 0f b6 2f          	movzbl (%rdi),%r13d
    bf88:	0f 84 82 00 00 00    	je     c010 <mbedtls_ecdh_make_public+0xb0>
    bf8e:	4c 8d b7 20 01 00 00 	lea    0x120(%rdi),%r14
    bf95:	49 89 f4             	mov    %rsi,%r12
    bf98:	48 89 d3             	mov    %rdx,%rbx
    bf9b:	48 89 cd             	mov    %rcx,%rbp
    bf9e:	4c 8d 7f 10          	lea    0x10(%rdi),%r15
    bfa2:	4c 89 c1             	mov    %r8,%rcx
    bfa5:	48 8d b7 08 01 00 00 	lea    0x108(%rdi),%rsi
    bfac:	4d 89 c8             	mov    %r9,%r8
    bfaf:	4c 89 f2             	mov    %r14,%rdx
    bfb2:	4c 89 ff             	mov    %r15,%rdi
    bfb5:	e8 a6 fb ff ff       	callq  bb60 <ecdh_gen_public_restartable.constprop.0>
    bfba:	85 c0                	test   %eax,%eax
    bfbc:	74 12                	je     bfd0 <mbedtls_ecdh_make_public+0x70>
    bfbe:	48 83 c4 08          	add    $0x8,%rsp
    bfc2:	5b                   	pop    %rbx
    bfc3:	5d                   	pop    %rbp
    bfc4:	41 5c                	pop    %r12
    bfc6:	41 5d                	pop    %r13
    bfc8:	41 5e                	pop    %r14
    bfca:	41 5f                	pop    %r15
    bfcc:	c3                   	retq   
    bfcd:	0f 1f 00             	nopl   (%rax)
    bfd0:	48 83 c4 08          	add    $0x8,%rsp
    bfd4:	41 0f b6 d5          	movzbl %r13b,%edx
    bfd8:	49 89 e9             	mov    %rbp,%r9
    bfdb:	49 89 d8             	mov    %rbx,%r8
    bfde:	4c 89 e1             	mov    %r12,%rcx
    bfe1:	5b                   	pop    %rbx
    bfe2:	4c 89 f6             	mov    %r14,%rsi
    bfe5:	5d                   	pop    %rbp
    bfe6:	4c 89 ff             	mov    %r15,%rdi
    bfe9:	41 5c                	pop    %r12
    bfeb:	41 5d                	pop    %r13
    bfed:	41 5e                	pop    %r14
    bfef:	41 5f                	pop    %r15
    bff1:	e9 ea 27 00 00       	jmpq   e7e0 <mbedtls_ecp_tls_write_point>
    bff6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bffd:	00 00 00 
    c000:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    c005:	c3                   	retq   
    c006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c00d:	00 00 00 
    c010:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    c015:	eb a7                	jmp    bfbe <mbedtls_ecdh_make_public+0x5e>
    c017:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c01e:	00 00 

000000000000c020 <mbedtls_ecdh_read_public>:
    c020:	f3 0f 1e fa          	endbr64 
    c024:	55                   	push   %rbp
    c025:	53                   	push   %rbx
    c026:	48 83 ec 18          	sub    $0x18,%rsp
    c02a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c031:	00 00 
    c033:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c038:	31 c0                	xor    %eax,%eax
    c03a:	83 7f 08 01          	cmpl   $0x1,0x8(%rdi)
    c03e:	75 50                	jne    c090 <mbedtls_ecdh_read_public+0x70>
    c040:	48 89 d3             	mov    %rdx,%rbx
    c043:	4c 8d 47 10          	lea    0x10(%rdi),%r8
    c047:	48 89 34 24          	mov    %rsi,(%rsp)
    c04b:	48 89 f5             	mov    %rsi,%rbp
    c04e:	48 89 e2             	mov    %rsp,%rdx
    c051:	48 8d b7 68 01 00 00 	lea    0x168(%rdi),%rsi
    c058:	48 89 d9             	mov    %rbx,%rcx
    c05b:	4c 89 c7             	mov    %r8,%rdi
    c05e:	e8 2d 27 00 00       	callq  e790 <mbedtls_ecp_tls_read_point>
    c063:	85 c0                	test   %eax,%eax
    c065:	75 12                	jne    c079 <mbedtls_ecdh_read_public+0x59>
    c067:	48 8b 14 24          	mov    (%rsp),%rdx
    c06b:	48 29 ea             	sub    %rbp,%rdx
    c06e:	48 39 da             	cmp    %rbx,%rdx
    c071:	ba 80 b0 ff ff       	mov    $0xffffb080,%edx
    c076:	0f 45 c2             	cmovne %edx,%eax
    c079:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    c07e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    c085:	00 00 
    c087:	75 0e                	jne    c097 <mbedtls_ecdh_read_public+0x77>
    c089:	48 83 c4 18          	add    $0x18,%rsp
    c08d:	5b                   	pop    %rbx
    c08e:	5d                   	pop    %rbp
    c08f:	c3                   	retq   
    c090:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    c095:	eb e2                	jmp    c079 <mbedtls_ecdh_read_public+0x59>
    c097:	e8 d4 81 ff ff       	callq  4270 <__stack_chk_fail@plt>
    c09c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c0a0 <mbedtls_ecdh_calc_secret>:
    c0a0:	f3 0f 1e fa          	endbr64 
    c0a4:	83 7f 08 01          	cmpl   $0x1,0x8(%rdi)
    c0a8:	0f 85 da 00 00 00    	jne    c188 <mbedtls_ecdh_calc_secret+0xe8>
    c0ae:	41 57                	push   %r15
    c0b0:	4c 8d 7f 10          	lea    0x10(%rdi),%r15
    c0b4:	41 56                	push   %r14
    c0b6:	41 55                	push   %r13
    c0b8:	41 54                	push   %r12
    c0ba:	55                   	push   %rbp
    c0bb:	53                   	push   %rbx
    c0bc:	48 89 fb             	mov    %rdi,%rbx
    c0bf:	48 83 ec 08          	sub    $0x8,%rsp
    c0c3:	48 83 bf c0 00 00 00 	cmpq   $0x0,0xc0(%rdi)
    c0ca:	00 
    c0cb:	0f 84 8f 00 00 00    	je     c160 <mbedtls_ecdh_calc_secret+0xc0>
    c0d1:	4c 8d b7 b0 01 00 00 	lea    0x1b0(%rdi),%r14
    c0d8:	48 89 f5             	mov    %rsi,%rbp
    c0db:	49 89 d5             	mov    %rdx,%r13
    c0de:	49 89 cc             	mov    %rcx,%r12
    c0e1:	48 8d 97 68 01 00 00 	lea    0x168(%rdi),%rdx
    c0e8:	48 8d 8f 08 01 00 00 	lea    0x108(%rdi),%rcx
    c0ef:	4c 89 f6             	mov    %r14,%rsi
    c0f2:	4c 89 ff             	mov    %r15,%rdi
    c0f5:	e8 96 f9 ff ff       	callq  ba90 <ecdh_compute_shared_restartable.constprop.0>
    c0fa:	85 c0                	test   %eax,%eax
    c0fc:	74 12                	je     c110 <mbedtls_ecdh_calc_secret+0x70>
    c0fe:	48 83 c4 08          	add    $0x8,%rsp
    c102:	5b                   	pop    %rbx
    c103:	5d                   	pop    %rbp
    c104:	41 5c                	pop    %r12
    c106:	41 5d                	pop    %r13
    c108:	41 5e                	pop    %r14
    c10a:	41 5f                	pop    %r15
    c10c:	c3                   	retq   
    c10d:	0f 1f 00             	nopl   (%rax)
    c110:	4c 89 f7             	mov    %r14,%rdi
    c113:	e8 28 90 ff ff       	callq  5140 <mbedtls_mpi_size>
    c118:	49 39 c4             	cmp    %rax,%r12
    c11b:	72 43                	jb     c160 <mbedtls_ecdh_calc_secret+0xc0>
    c11d:	48 8b 83 c0 00 00 00 	mov    0xc0(%rbx),%rax
    c124:	31 d2                	xor    %edx,%edx
    c126:	4c 89 ff             	mov    %r15,%rdi
    c129:	a8 07                	test   $0x7,%al
    c12b:	0f 95 c2             	setne  %dl
    c12e:	48 c1 e8 03          	shr    $0x3,%rax
    c132:	48 01 d0             	add    %rdx,%rax
    c135:	48 89 45 00          	mov    %rax,0x0(%rbp)
    c139:	e8 32 16 00 00       	callq  d770 <mbedtls_ecp_get_type>
    c13e:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    c142:	4c 89 ee             	mov    %r13,%rsi
    c145:	4c 89 f7             	mov    %r14,%rdi
    c148:	83 f8 02             	cmp    $0x2,%eax
    c14b:	74 23                	je     c170 <mbedtls_ecdh_calc_secret+0xd0>
    c14d:	48 83 c4 08          	add    $0x8,%rsp
    c151:	5b                   	pop    %rbx
    c152:	5d                   	pop    %rbp
    c153:	41 5c                	pop    %r12
    c155:	41 5d                	pop    %r13
    c157:	41 5e                	pop    %r14
    c159:	41 5f                	pop    %r15
    c15b:	e9 d0 90 ff ff       	jmpq   5230 <mbedtls_mpi_write_binary>
    c160:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    c165:	eb 97                	jmp    c0fe <mbedtls_ecdh_calc_secret+0x5e>
    c167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c16e:	00 00 
    c170:	48 83 c4 08          	add    $0x8,%rsp
    c174:	5b                   	pop    %rbx
    c175:	5d                   	pop    %rbp
    c176:	41 5c                	pop    %r12
    c178:	41 5d                	pop    %r13
    c17a:	41 5e                	pop    %r14
    c17c:	41 5f                	pop    %r15
    c17e:	e9 8d 90 ff ff       	jmpq   5210 <mbedtls_mpi_write_binary_le>
    c183:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c188:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    c18d:	c3                   	retq   
    c18e:	66 90                	xchg   %ax,%ax

000000000000c190 <self_test_rng>:
    c190:	f3 0f 1e fa          	endbr64 
    c194:	48 85 d2             	test   %rdx,%rdx
    c197:	74 2c                	je     c1c5 <self_test_rng+0x35>
    c199:	8b 05 c1 1e 02 00    	mov    0x21ec1(%rip),%eax        # 2e060 <state.4967>
    c19f:	48 01 f2             	add    %rsi,%rdx
    c1a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c1a8:	69 c0 0d 66 19 00    	imul   $0x19660d,%eax,%eax
    c1ae:	48 83 c6 01          	add    $0x1,%rsi
    c1b2:	05 5f f3 6e 3c       	add    $0x3c6ef35f,%eax
    c1b7:	88 46 ff             	mov    %al,-0x1(%rsi)
    c1ba:	48 39 f2             	cmp    %rsi,%rdx
    c1bd:	75 e9                	jne    c1a8 <self_test_rng+0x18>
    c1bf:	89 05 9b 1e 02 00    	mov    %eax,0x21e9b(%rip)        # 2e060 <state.4967>
    c1c5:	31 c0                	xor    %eax,%eax
    c1c7:	c3                   	retq   
    c1c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c1cf:	00 

000000000000c1d0 <ecp_modp>:
    c1d0:	e9 bb 76 02 00       	jmpq   33890 <ecp_modp.instr.bb_c1d0>
    c1d5:	e9 2e 77 02 00       	jmpq   33908 <instr.bb_c224>
    c1da:	c8 00 00 00          	enterq $0x0,$0x0
    c1de:	00 48 89             	add    %cl,-0x77(%rax)
    c1e1:	f3 0f 84 e8 00 00 00 	repz je c2d0 <ecp_modp+0x100>
    c1e8:	e9 d5 76 02 00       	jmpq   338c2 <instr.bb_c1e8>
    c1ed:	88 be 00 00 00 e9    	mov    %bh,-0x17000000(%rsi)
    c1f3:	db 76 02             	(bad)  0x2(%rsi)
    c1f6:	00 8f ff ff e9 db    	add    %cl,-0x24160001(%rdi)
    c1fc:	76 02                	jbe    c200 <ecp_modp+0x30>
    c1fe:	00 83 b0 00 00 00    	add    %al,0xb0(%rbx)
    c204:	48 01 c0             	add    %rax,%rax
    c207:	49 39 c0             	cmp    %rax,%r8
    c20a:	0f 87 af 00 00 00    	ja     c2bf <ecp_modp+0xef>
    c210:	e9 db 76 02 00       	jmpq   338f0 <instr.bb_c210>
    c215:	c8 00 00 00          	enterq $0x0,$0x0
    c219:	e9 db 76 02 00       	jmpq   338f9 <instr.bb_c219>
    c21e:	89 c4                	mov    %eax,%esp
    c220:	85 c0                	test   %eax,%eax
    c222:	74 2c                	je     c250 <ecp_modp+0x80>
    c224:	eb af                	jmp    c1d5 <ecp_modp+0x5>
    c226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c22d:	00 00 00 
    c230:	31 f6                	xor    %esi,%esi
    c232:	48 89 ef             	mov    %rbp,%rdi
    c235:	e8 26 93 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    c23a:	85 c0                	test   %eax,%eax
    c23c:	74 44                	je     c282 <ecp_modp+0xb2>
    c23e:	48 89 da             	mov    %rbx,%rdx
    c241:	48 89 ee             	mov    %rbp,%rsi
    c244:	48 89 ef             	mov    %rbp,%rdi
    c247:	e8 64 96 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    c24c:	85 c0                	test   %eax,%eax
    c24e:	75 50                	jne    c2a0 <ecp_modp+0xd0>
    c250:	e9 bb 76 02 00       	jmpq   33910 <instr.bb_c250>
    c255:	78 d9                	js     c230 <ecp_modp+0x60>
    c257:	e9 c5 76 02 00       	jmpq   33921 <instr.bb_c257>
    c25c:	e9 cb 76 02 00       	jmpq   3392c <instr.bb_c262>
    c261:	ff                   	(bad)  
    c262:	eb f8                	jmp    c25c <ecp_modp+0x8c>
    c264:	78 2b                	js     c291 <ecp_modp+0xc1>
    c266:	e9 c9 76 02 00       	jmpq   33934 <instr.bb_c266>
    c26b:	e9 de 76 02 00       	jmpq   3394e <instr.bb_c27e>
    c270:	e9 cb 76 02 00       	jmpq   33940 <instr.bb_c270>
    c275:	e9 e7 76 02 00       	jmpq   33961 <instr.bb_c28d>
    c27a:	52                   	push   %rdx
    c27b:	94                   	xchg   %eax,%esp
    c27c:	ff                   	(bad)  
    c27d:	ff                   	(bad)  
    c27e:	eb eb                	jmp    c26b <ecp_modp+0x9b>
    c280:	75 1e                	jne    c2a0 <ecp_modp+0xd0>
    c282:	e9 cf 76 02 00       	jmpq   33956 <instr.bb_c282>
    c287:	ef                   	out    %eax,(%dx)
    c288:	e8 e3 91 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    c28d:	eb e6                	jmp    c275 <ecp_modp+0xa5>
    c28f:	79 df                	jns    c270 <ecp_modp+0xa0>
    c291:	e9 d3 76 02 00       	jmpq   33969 <instr.bb_c291>
    c296:	41 5c                	pop    %r12
    c298:	c3                   	retq   
    c299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c2a0:	41 89 c4             	mov    %eax,%r12d
    c2a3:	5b                   	pop    %rbx
    c2a4:	5d                   	pop    %rbp
    c2a5:	44 89 e0             	mov    %r12d,%eax
    c2a8:	41 5c                	pop    %r12
    c2aa:	c3                   	retq   
    c2ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c2b0:	31 f6                	xor    %esi,%esi
    c2b2:	e8 a9 92 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    c2b7:	85 c0                	test   %eax,%eax
    c2b9:	0f 84 33 ff ff ff    	je     c1f2 <ecp_modp+0x22>
    c2bf:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    c2c5:	eb ca                	jmp    c291 <ecp_modp+0xc1>
    c2c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c2ce:	00 00 
    c2d0:	5b                   	pop    %rbx
    c2d1:	48 8d 56 08          	lea    0x8(%rsi),%rdx
    c2d5:	5d                   	pop    %rbp
    c2d6:	48 89 fe             	mov    %rdi,%rsi
    c2d9:	41 5c                	pop    %r12
    c2db:	e9 40 a7 ff ff       	jmpq   6a20 <mbedtls_mpi_mod_mpi>

000000000000c2e0 <ecp_safe_invert_jac>:
    c2e0:	41 56                	push   %r14
    c2e2:	41 55                	push   %r13
    c2e4:	41 54                	push   %r12
    c2e6:	49 89 fc             	mov    %rdi,%r12
    c2e9:	55                   	push   %rbp
    c2ea:	48 89 f5             	mov    %rsi,%rbp
    c2ed:	53                   	push   %rbx
    c2ee:	48 83 c5 18          	add    $0x18,%rbp
    c2f2:	89 d3                	mov    %edx,%ebx
    c2f4:	48 83 ec 20          	sub    $0x20,%rsp
    c2f8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c2ff:	00 00 
    c301:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c306:	31 c0                	xor    %eax,%eax
    c308:	49 89 e6             	mov    %rsp,%r14
    c30b:	4c 89 f7             	mov    %r14,%rdi
    c30e:	e8 5d 88 ff ff       	callq  4b70 <mbedtls_mpi_init>
    c313:	31 f6                	xor    %esi,%esi
    c315:	48 89 ef             	mov    %rbp,%rdi
    c318:	e8 43 92 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    c31d:	49 8d 74 24 08       	lea    0x8(%r12),%rsi
    c322:	48 89 ea             	mov    %rbp,%rdx
    c325:	4c 89 f7             	mov    %r14,%rdi
    c328:	41 89 c5             	mov    %eax,%r13d
    c32b:	e8 90 95 ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    c330:	41 89 c4             	mov    %eax,%r12d
    c333:	85 c0                	test   %eax,%eax
    c335:	75 18                	jne    c34f <ecp_safe_invert_jac+0x6f>
    c337:	31 d2                	xor    %edx,%edx
    c339:	45 85 ed             	test   %r13d,%r13d
    c33c:	4c 89 f6             	mov    %r14,%rsi
    c33f:	48 89 ef             	mov    %rbp,%rdi
    c342:	0f 95 c2             	setne  %dl
    c345:	21 da                	and    %ebx,%edx
    c347:	e8 84 f2 ff ff       	callq  b5d0 <mbedtls_mpi_safe_cond_assign>
    c34c:	41 89 c4             	mov    %eax,%r12d
    c34f:	4c 89 f7             	mov    %r14,%rdi
    c352:	e8 39 88 ff ff       	callq  4b90 <mbedtls_mpi_free>
    c357:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c35c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    c363:	00 00 
    c365:	75 10                	jne    c377 <ecp_safe_invert_jac+0x97>
    c367:	48 83 c4 20          	add    $0x20,%rsp
    c36b:	44 89 e0             	mov    %r12d,%eax
    c36e:	5b                   	pop    %rbx
    c36f:	5d                   	pop    %rbp
    c370:	41 5c                	pop    %r12
    c372:	41 5d                	pop    %r13
    c374:	41 5e                	pop    %r14
    c376:	c3                   	retq   
    c377:	e8 f4 7e ff ff       	callq  4270 <__stack_chk_fail@plt>
    c37c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c380 <mbedtls_mpi_sub_mod>:
    c380:	e9 fb 75 02 00       	jmpq   33980 <mbedtls_mpi_sub_mod.instr.bb_c380>
    c385:	e9 38 76 02 00       	jmpq   339c2 <instr.bb_c3a3>
    c38a:	48 89 d6             	mov    %rdx,%rsi
    c38d:	48 89 ca             	mov    %rcx,%rdx
    c390:	48 89 df             	mov    %rbx,%rdi
    c393:	48 83 c5 08          	add    $0x8,%rbp
    c397:	e8 24 95 ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    c39c:	e9 16 76 02 00       	jmpq   339b7 <instr.bb_c39c>
    c3a1:	74 25                	je     c3c8 <mbedtls_mpi_sub_mod+0x48>
    c3a3:	eb e0                	jmp    c385 <mbedtls_mpi_sub_mod+0x5>
    c3a5:	0f 1f 00             	nopl   (%rax)
    c3a8:	e9 23 76 02 00       	jmpq   339d0 <instr.bb_c3a8>
    c3ad:	e9 28 76 02 00       	jmpq   339da <instr.bb_c3b2>
    c3b2:	eb f9                	jmp    c3ad <mbedtls_mpi_sub_mod+0x2d>
    c3b4:	74 18                	je     c3ce <mbedtls_mpi_sub_mod+0x4e>
    c3b6:	e9 27 76 02 00       	jmpq   339e2 <instr.bb_c3b6>
    c3bb:	e9 30 76 02 00       	jmpq   339f0 <instr.bb_c3c4>
    c3c0:	ec                   	in     (%dx),%al
    c3c1:	94                   	xchg   %eax,%esp
    c3c2:	ff                   	(bad)  
    c3c3:	ff                   	(bad)  
    c3c4:	eb f5                	jmp    c3bb <mbedtls_mpi_sub_mod+0x3b>
    c3c6:	75 18                	jne    c3e0 <mbedtls_mpi_sub_mod+0x60>
    c3c8:	e9 2b 76 02 00       	jmpq   339f8 <instr.bb_c3c8>
    c3cd:	da e9                	fucompp 
    c3cf:	35 76 02 00 41       	xor    $0x41000276,%eax
    c3d4:	5c                   	pop    %rsp
    c3d5:	c3                   	retq   
    c3d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c3dd:	00 00 00 
    c3e0:	f3 0f 1e fa          	endbr64 
    c3e4:	41 89 c4             	mov    %eax,%r12d
    c3e7:	5b                   	pop    %rbx
    c3e8:	5d                   	pop    %rbp
    c3e9:	44 89 e0             	mov    %r12d,%eax
    c3ec:	41 5c                	pop    %r12
    c3ee:	c3                   	retq   
    c3ef:	90                   	nop

000000000000c3f0 <mbedtls_mpi_mul_mod>:
    c3f0:	e9 1b 76 02 00       	jmpq   33a10 <mbedtls_mpi_mul_mod.instr.bb_c3f0>
    c3f5:	e9 7b 76 02 00       	jmpq   33a75 <instr.bb_c40b>
    c3fa:	89 d6                	mov    %edx,%esi
    c3fc:	48 89 ca             	mov    %rcx,%rdx
    c3ff:	48 89 ef             	mov    %rbp,%rdi
    c402:	48 83 ec 08          	sub    $0x8,%rsp
    c406:	e8 a5 95 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    c40b:	eb e8                	jmp    c3f5 <mbedtls_mpi_mul_mod+0x5>
    c40d:	74 11                	je     c420 <mbedtls_mpi_mul_mod+0x30>
    c40f:	e9 69 76 02 00       	jmpq   33a7d <instr.bb_c40f>
    c414:	41 5c                	pop    %r12
    c416:	c3                   	retq   
    c417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c41e:	00 00 
    c420:	4c 89 e6             	mov    %r12,%rsi
    c423:	48 89 ef             	mov    %rbp,%rdi
    c426:	e8 a5 fd ff ff       	callq  c1d0 <ecp_modp>
    c42b:	85 c0                	test   %eax,%eax
    c42d:	75 e0                	jne    c40f <mbedtls_mpi_mul_mod+0x1f>
    c42f:	f3 0f 1e fa          	endbr64 
    c433:	48 83 05 fd 1c 02 00 	addq   $0x1,0x21cfd(%rip)        # 2e138 <mul_count>
    c43a:	01 
    c43b:	48 83 c4 08          	add    $0x8,%rsp
    c43f:	5d                   	pop    %rbp
    c440:	41 5c                	pop    %r12
    c442:	c3                   	retq   
    c443:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    c44a:	00 00 00 00 
    c44e:	66 90                	xchg   %ax,%ax

000000000000c450 <ecp_select_comb>:
    c450:	41 57                	push   %r15
    c452:	49 89 d7             	mov    %rdx,%r15
    c455:	41 56                	push   %r14
    c457:	41 55                	push   %r13
    c459:	4c 8d 6e 18          	lea    0x18(%rsi),%r13
    c45d:	41 54                	push   %r12
    c45f:	45 89 c4             	mov    %r8d,%r12d
    c462:	55                   	push   %rbp
    c463:	41 d0 ec             	shr    %r12b
    c466:	48 89 f5             	mov    %rsi,%rbp
    c469:	53                   	push   %rbx
    c46a:	41 83 e4 3f          	and    $0x3f,%r12d
    c46e:	31 db                	xor    %ebx,%ebx
    c470:	48 83 ec 18          	sub    $0x18,%rsp
    c474:	48 89 3c 24          	mov    %rdi,(%rsp)
    c478:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    c47d:	88 4c 24 0b          	mov    %cl,0xb(%rsp)
    c481:	84 c9                	test   %cl,%cl
    c483:	75 2b                	jne    c4b0 <ecp_select_comb+0x60>
    c485:	eb 59                	jmp    c4e0 <ecp_select_comb+0x90>
    c487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c48e:	00 00 
    c490:	49 8d 77 18          	lea    0x18(%r15),%rsi
    c494:	44 89 f2             	mov    %r14d,%edx
    c497:	4c 89 ef             	mov    %r13,%rdi
    c49a:	e8 31 f1 ff ff       	callq  b5d0 <mbedtls_mpi_safe_cond_assign>
    c49f:	85 c0                	test   %eax,%eax
    c4a1:	75 29                	jne    c4cc <ecp_select_comb+0x7c>
    c4a3:	83 c3 01             	add    $0x1,%ebx
    c4a6:	49 83 c7 48          	add    $0x48,%r15
    c4aa:	38 5c 24 0b          	cmp    %bl,0xb(%rsp)
    c4ae:	74 30                	je     c4e0 <ecp_select_comb+0x90>
    c4b0:	45 31 f6             	xor    %r14d,%r14d
    c4b3:	44 38 e3             	cmp    %r12b,%bl
    c4b6:	4c 89 fe             	mov    %r15,%rsi
    c4b9:	48 89 ef             	mov    %rbp,%rdi
    c4bc:	41 0f 94 c6          	sete   %r14b
    c4c0:	44 89 f2             	mov    %r14d,%edx
    c4c3:	e8 08 f1 ff ff       	callq  b5d0 <mbedtls_mpi_safe_cond_assign>
    c4c8:	85 c0                	test   %eax,%eax
    c4ca:	74 c4                	je     c490 <ecp_select_comb+0x40>
    c4cc:	48 83 c4 18          	add    $0x18,%rsp
    c4d0:	5b                   	pop    %rbx
    c4d1:	5d                   	pop    %rbp
    c4d2:	41 5c                	pop    %r12
    c4d4:	41 5d                	pop    %r13
    c4d6:	41 5e                	pop    %r14
    c4d8:	41 5f                	pop    %r15
    c4da:	c3                   	retq   
    c4db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c4e0:	44 0f b6 7c 24 0c    	movzbl 0xc(%rsp),%r15d
    c4e6:	48 8b 3c 24          	mov    (%rsp),%rdi
    c4ea:	48 89 ee             	mov    %rbp,%rsi
    c4ed:	41 c0 ef 07          	shr    $0x7,%r15b
    c4f1:	41 0f b6 d7          	movzbl %r15b,%edx
    c4f5:	e8 e6 fd ff ff       	callq  c2e0 <ecp_safe_invert_jac>
    c4fa:	85 c0                	test   %eax,%eax
    c4fc:	75 ce                	jne    c4cc <ecp_select_comb+0x7c>
    c4fe:	48 83 c4 18          	add    $0x18,%rsp
    c502:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    c506:	be 01 00 00 00       	mov    $0x1,%esi
    c50b:	5b                   	pop    %rbx
    c50c:	5d                   	pop    %rbp
    c50d:	41 5c                	pop    %r12
    c50f:	41 5d                	pop    %r13
    c511:	41 5e                	pop    %r14
    c513:	41 5f                	pop    %r15
    c515:	e9 76 8a ff ff       	jmpq   4f90 <mbedtls_mpi_lset>
    c51a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000c520 <mbedtls_ecp_point_free.part.0>:
    c520:	e9 6b 75 02 00       	jmpq   33a90 <mbedtls_ecp_point_free.part.0.instr.bb_c520>
    c525:	67 86 ff             	addr32 xchg %bh,%bh
    c528:	ff                   	(bad)  
    c529:	e9 75 75 02 00       	jmpq   33aa3 <instr.bb_c529>
    c52e:	5e                   	pop    %rsi
    c52f:	86 ff                	xchg   %bh,%bh
    c531:	ff                   	(bad)  
    c532:	e9 75 75 02 00       	jmpq   33aac <instr.bb_c532>
    c537:	e9 54 86 ff ff       	jmpq   4b90 <mbedtls_mpi_free>
    c53c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c540 <mbedtls_mpi_shift_l_mod.constprop.0>:
    c540:	41 54                	push   %r12
    c542:	55                   	push   %rbp
    c543:	48 89 fd             	mov    %rdi,%rbp
    c546:	53                   	push   %rbx
    c547:	48 89 f3             	mov    %rsi,%rbx
    c54a:	be 01 00 00 00       	mov    $0x1,%esi
    c54f:	48 83 c5 08          	add    $0x8,%rbp
    c553:	48 89 df             	mov    %rbx,%rdi
    c556:	e8 f5 8c ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    c55b:	41 89 c4             	mov    %eax,%r12d
    c55e:	85 c0                	test   %eax,%eax
    c560:	74 18                	je     c57a <mbedtls_mpi_shift_l_mod.constprop.0+0x3a>
    c562:	eb 25                	jmp    c589 <mbedtls_mpi_shift_l_mod.constprop.0+0x49>
    c564:	0f 1f 40 00          	nopl   0x0(%rax)
    c568:	48 89 ea             	mov    %rbp,%rdx
    c56b:	48 89 de             	mov    %rbx,%rsi
    c56e:	48 89 df             	mov    %rbx,%rdi
    c571:	e8 5a 91 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    c576:	85 c0                	test   %eax,%eax
    c578:	75 1e                	jne    c598 <mbedtls_mpi_shift_l_mod.constprop.0+0x58>
    c57a:	48 89 ee             	mov    %rbp,%rsi
    c57d:	48 89 df             	mov    %rbx,%rdi
    c580:	e8 eb 8e ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    c585:	85 c0                	test   %eax,%eax
    c587:	79 df                	jns    c568 <mbedtls_mpi_shift_l_mod.constprop.0+0x28>
    c589:	44 89 e0             	mov    %r12d,%eax
    c58c:	5b                   	pop    %rbx
    c58d:	5d                   	pop    %rbp
    c58e:	41 5c                	pop    %r12
    c590:	c3                   	retq   
    c591:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c598:	f3 0f 1e fa          	endbr64 
    c59c:	41 89 c4             	mov    %eax,%r12d
    c59f:	5b                   	pop    %rbx
    c5a0:	5d                   	pop    %rbp
    c5a1:	44 89 e0             	mov    %r12d,%eax
    c5a4:	41 5c                	pop    %r12
    c5a6:	c3                   	retq   
    c5a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c5ae:	00 00 

000000000000c5b0 <mbedtls_mpi_add_mod>:
    c5b0:	e9 0b 75 02 00       	jmpq   33ac0 <mbedtls_mpi_add_mod.instr.bb_c5b0>
    c5b5:	e9 48 75 02 00       	jmpq   33b02 <instr.bb_c5d3>
    c5ba:	48 89 d6             	mov    %rdx,%rsi
    c5bd:	48 89 ca             	mov    %rcx,%rdx
    c5c0:	48 89 df             	mov    %rbx,%rdi
    c5c3:	48 83 c5 08          	add    $0x8,%rbp
    c5c7:	e8 e4 92 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    c5cc:	e9 26 75 02 00       	jmpq   33af7 <instr.bb_c5cc>
    c5d1:	74 17                	je     c5ea <mbedtls_mpi_add_mod+0x3a>
    c5d3:	eb e0                	jmp    c5b5 <mbedtls_mpi_add_mod+0x5>
    c5d5:	0f 1f 00             	nopl   (%rax)
    c5d8:	48 89 ea             	mov    %rbp,%rdx
    c5db:	48 89 de             	mov    %rbx,%rsi
    c5de:	48 89 df             	mov    %rbx,%rdi
    c5e1:	e8 ea 90 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    c5e6:	85 c0                	test   %eax,%eax
    c5e8:	75 1e                	jne    c608 <mbedtls_mpi_add_mod+0x58>
    c5ea:	48 89 ee             	mov    %rbp,%rsi
    c5ed:	48 89 df             	mov    %rbx,%rdi
    c5f0:	e8 7b 8e ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    c5f5:	85 c0                	test   %eax,%eax
    c5f7:	79 df                	jns    c5d8 <mbedtls_mpi_add_mod+0x28>
    c5f9:	44 89 e0             	mov    %r12d,%eax
    c5fc:	5b                   	pop    %rbx
    c5fd:	5d                   	pop    %rbp
    c5fe:	41 5c                	pop    %r12
    c600:	c3                   	retq   
    c601:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c608:	f3 0f 1e fa          	endbr64 
    c60c:	41 89 c4             	mov    %eax,%r12d
    c60f:	5b                   	pop    %rbx
    c610:	5d                   	pop    %rbp
    c611:	44 89 e0             	mov    %r12d,%eax
    c614:	41 5c                	pop    %r12
    c616:	c3                   	retq   
    c617:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c61e:	00 00 

000000000000c620 <ecp_sw_rhs>:
    c620:	41 56                	push   %r14
    c622:	41 55                	push   %r13
    c624:	49 89 d5             	mov    %rdx,%r13
    c627:	41 54                	push   %r12
    c629:	55                   	push   %rbp
    c62a:	48 89 f5             	mov    %rsi,%rbp
    c62d:	48 89 d6             	mov    %rdx,%rsi
    c630:	53                   	push   %rbx
    c631:	48 89 fb             	mov    %rdi,%rbx
    c634:	48 89 ef             	mov    %rbp,%rdi
    c637:	e8 74 93 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    c63c:	41 89 c4             	mov    %eax,%r12d
    c63f:	85 c0                	test   %eax,%eax
    c641:	74 0d                	je     c650 <ecp_sw_rhs+0x30>
    c643:	5b                   	pop    %rbx
    c644:	44 89 e0             	mov    %r12d,%eax
    c647:	5d                   	pop    %rbp
    c648:	41 5c                	pop    %r12
    c64a:	41 5d                	pop    %r13
    c64c:	41 5e                	pop    %r14
    c64e:	c3                   	retq   
    c64f:	90                   	nop
    c650:	48 89 de             	mov    %rbx,%rsi
    c653:	48 89 ef             	mov    %rbp,%rdi
    c656:	e8 75 fb ff ff       	callq  c1d0 <ecp_modp>
    c65b:	41 89 c4             	mov    %eax,%r12d
    c65e:	85 c0                	test   %eax,%eax
    c660:	75 e1                	jne    c643 <ecp_sw_rhs+0x23>
    c662:	48 83 05 ce 1a 02 00 	addq   $0x1,0x21ace(%rip)        # 2e138 <mul_count>
    c669:	01 
    c66a:	48 83 7b 30 00       	cmpq   $0x0,0x30(%rbx)
    c66f:	0f 84 db 00 00 00    	je     c750 <ecp_sw_rhs+0x130>
    c675:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    c679:	48 89 ee             	mov    %rbp,%rsi
    c67c:	4c 8d 73 08          	lea    0x8(%rbx),%r14
    c680:	48 89 ef             	mov    %rbp,%rdi
    c683:	e8 28 92 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    c688:	41 89 c4             	mov    %eax,%r12d
    c68b:	85 c0                	test   %eax,%eax
    c68d:	74 1e                	je     c6ad <ecp_sw_rhs+0x8d>
    c68f:	eb b2                	jmp    c643 <ecp_sw_rhs+0x23>
    c691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c698:	4c 89 f2             	mov    %r14,%rdx
    c69b:	48 89 ee             	mov    %rbp,%rsi
    c69e:	48 89 ef             	mov    %rbp,%rdi
    c6a1:	e8 2a 90 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    c6a6:	41 89 c4             	mov    %eax,%r12d
    c6a9:	85 c0                	test   %eax,%eax
    c6ab:	75 96                	jne    c643 <ecp_sw_rhs+0x23>
    c6ad:	4c 89 f6             	mov    %r14,%rsi
    c6b0:	48 89 ef             	mov    %rbp,%rdi
    c6b3:	e8 b8 8d ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    c6b8:	85 c0                	test   %eax,%eax
    c6ba:	79 dc                	jns    c698 <ecp_sw_rhs+0x78>
    c6bc:	4c 89 ea             	mov    %r13,%rdx
    c6bf:	48 89 ee             	mov    %rbp,%rsi
    c6c2:	48 89 ef             	mov    %rbp,%rdi
    c6c5:	e8 e6 92 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    c6ca:	41 89 c4             	mov    %eax,%r12d
    c6cd:	85 c0                	test   %eax,%eax
    c6cf:	0f 85 6e ff ff ff    	jne    c643 <ecp_sw_rhs+0x23>
    c6d5:	48 89 de             	mov    %rbx,%rsi
    c6d8:	48 89 ef             	mov    %rbp,%rdi
    c6db:	e8 f0 fa ff ff       	callq  c1d0 <ecp_modp>
    c6e0:	41 89 c4             	mov    %eax,%r12d
    c6e3:	85 c0                	test   %eax,%eax
    c6e5:	0f 85 58 ff ff ff    	jne    c643 <ecp_sw_rhs+0x23>
    c6eb:	48 8d 53 38          	lea    0x38(%rbx),%rdx
    c6ef:	48 89 ee             	mov    %rbp,%rsi
    c6f2:	48 89 ef             	mov    %rbp,%rdi
    c6f5:	48 83 05 3b 1a 02 00 	addq   $0x1,0x21a3b(%rip)        # 2e138 <mul_count>
    c6fc:	01 
    c6fd:	e8 ae 91 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    c702:	48 83 c3 08          	add    $0x8,%rbx
    c706:	41 89 c4             	mov    %eax,%r12d
    c709:	85 c0                	test   %eax,%eax
    c70b:	0f 85 32 ff ff ff    	jne    c643 <ecp_sw_rhs+0x23>
    c711:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c718:	48 89 de             	mov    %rbx,%rsi
    c71b:	48 89 ef             	mov    %rbp,%rdi
    c71e:	e8 4d 8d ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    c723:	85 c0                	test   %eax,%eax
    c725:	0f 88 18 ff ff ff    	js     c643 <ecp_sw_rhs+0x23>
    c72b:	48 89 da             	mov    %rbx,%rdx
    c72e:	48 89 ee             	mov    %rbp,%rsi
    c731:	48 89 ef             	mov    %rbp,%rdi
    c734:	e8 97 8f ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    c739:	85 c0                	test   %eax,%eax
    c73b:	74 db                	je     c718 <ecp_sw_rhs+0xf8>
    c73d:	f3 0f 1e fa          	endbr64 
    c741:	41 89 c4             	mov    %eax,%r12d
    c744:	e9 fa fe ff ff       	jmpq   c643 <ecp_sw_rhs+0x23>
    c749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c750:	ba 03 00 00 00       	mov    $0x3,%edx
    c755:	48 89 ee             	mov    %rbp,%rsi
    c758:	4c 8d 73 08          	lea    0x8(%rbx),%r14
    c75c:	48 89 ef             	mov    %rbp,%rdi
    c75f:	e8 dc 91 ff ff       	callq  5940 <mbedtls_mpi_sub_int>
    c764:	41 89 c4             	mov    %eax,%r12d
    c767:	85 c0                	test   %eax,%eax
    c769:	74 30                	je     c79b <ecp_sw_rhs+0x17b>
    c76b:	e9 d3 fe ff ff       	jmpq   c643 <ecp_sw_rhs+0x23>
    c770:	31 f6                	xor    %esi,%esi
    c772:	48 89 ef             	mov    %rbp,%rdi
    c775:	e8 e6 8d ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    c77a:	85 c0                	test   %eax,%eax
    c77c:	0f 84 3a ff ff ff    	je     c6bc <ecp_sw_rhs+0x9c>
    c782:	4c 89 f2             	mov    %r14,%rdx
    c785:	48 89 ee             	mov    %rbp,%rsi
    c788:	48 89 ef             	mov    %rbp,%rdi
    c78b:	e8 20 91 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    c790:	41 89 c4             	mov    %eax,%r12d
    c793:	85 c0                	test   %eax,%eax
    c795:	0f 85 a8 fe ff ff    	jne    c643 <ecp_sw_rhs+0x23>
    c79b:	8b 45 00             	mov    0x0(%rbp),%eax
    c79e:	85 c0                	test   %eax,%eax
    c7a0:	78 ce                	js     c770 <ecp_sw_rhs+0x150>
    c7a2:	e9 15 ff ff ff       	jmpq   c6bc <ecp_sw_rhs+0x9c>
    c7a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c7ae:	00 00 

000000000000c7b0 <ecp_randomize_mxz>:
    c7b0:	e9 5b 73 02 00       	jmpq   33b10 <ecp_randomize_mxz.instr.bb_c7b0>
    c7b5:	41 55                	push   %r13
    c7b7:	41 54                	push   %r12
    c7b9:	49 89 d4             	mov    %rdx,%r12
    c7bc:	55                   	push   %rbp
    c7bd:	48 89 fd             	mov    %rdi,%rbp
    c7c0:	53                   	push   %rbx
    c7c1:	48 89 f3             	mov    %rsi,%rbx
    c7c4:	48 83 ec 20          	sub    $0x20,%rsp
    c7c8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c7cf:	00 00 
    c7d1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c7d6:	31 c0                	xor    %eax,%eax
    c7d8:	49 89 e5             	mov    %rsp,%r13
    c7db:	4c 89 ef             	mov    %r13,%rdi
    c7de:	e8 8d 83 ff ff       	callq  4b70 <mbedtls_mpi_init>
    c7e3:	e9 7f 73 02 00       	jmpq   33b67 <instr.bb_c7e3>
    c7e8:	55                   	push   %rbp
    c7e9:	08 4d 89             	or     %cl,-0x77(%rbp)
    c7ec:	f0 be 02 00 00 00    	lock mov $0x2,%esi
    c7f2:	4c 89 ef             	mov    %r13,%rdi
    c7f5:	e8 d6 bc ff ff       	callq  84d0 <mbedtls_mpi_random>
    c7fa:	e9 ae 73 02 00       	jmpq   33bad <instr.bb_c7fa>
    c7ff:	74 3f                	je     c840 <ecp_randomize_mxz+0x90>
    c801:	e9 b2 73 02 00       	jmpq   33bb8 <instr.bb_c801>
    c806:	83 ff ff             	cmp    $0xffffffff,%edi
    c809:	41 83 fc f2          	cmp    $0xfffffff2,%r12d
    c80d:	0f 84 ad 00 00 00    	je     c8c0 <ecp_randomize_mxz+0x110>
    c813:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c818:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    c81f:	00 00 
    c821:	0f 85 a4 00 00 00    	jne    c8cb <ecp_randomize_mxz+0x11b>
    c827:	48 83 c4 20          	add    $0x20,%rsp
    c82b:	44 89 e0             	mov    %r12d,%eax
    c82e:	5b                   	pop    %rbx
    c82f:	5d                   	pop    %rbp
    c830:	41 5c                	pop    %r12
    c832:	41 5d                	pop    %r13
    c834:	41 5e                	pop    %r14
    c836:	c3                   	retq   
    c837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c83e:	00 00 
    c840:	e9 8b 73 02 00       	jmpq   33bd0 <instr.bb_c840>
    c845:	de 48 89             	fimuls -0x77(%rax)
    c848:	df e8                	fucomip %st(0),%st
    c84a:	62 91 ff ff e9       	(bad)  {%k7}{z}
    c84f:	ba 73 02 00 75       	mov    $0x75000273,%edx
    c854:	ac                   	lods   %ds:(%rsi),%al
    c855:	e9 be 73 02 00       	jmpq   33c18 <instr.bb_c855>
    c85a:	df e8                	fucomip %st(0),%st
    c85c:	70 f9                	jo     c857 <ecp_randomize_mxz+0xa7>
    c85e:	ff                   	(bad)  
    c85f:	ff                   	(bad)  
    c860:	e9 be 73 02 00       	jmpq   33c23 <instr.bb_c860>
    c865:	75 9a                	jne    c801 <ecp_randomize_mxz+0x51>
    c867:	e9 c2 73 02 00       	jmpq   33c2e <instr.bb_c867>
    c86c:	89 ea                	mov    %ebp,%edx
    c86e:	48 83 05 c2 18 02 00 	addq   $0x1,0x218c2(%rip)        # 2e138 <mul_count>
    c875:	01 
    c876:	4c 89 f6             	mov    %r14,%rsi
    c879:	4c 89 f7             	mov    %r14,%rdi
    c87c:	e8 2f 91 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    c881:	e9 f1 73 02 00       	jmpq   33c77 <instr.bb_c881>
    c886:	0f 85 75 ff ff ff    	jne    c801 <ecp_randomize_mxz+0x51>
    c88c:	e9 f1 73 02 00       	jmpq   33c82 <instr.bb_c88c>
    c891:	f7 e8                	imul   %eax
    c893:	39 f9                	cmp    %edi,%ecx
    c895:	ff                   	(bad)  
    c896:	ff                   	(bad)  
    c897:	e9 f1 73 02 00       	jmpq   33c8d <instr.bb_c897>
    c89c:	0f 85 5f ff ff ff    	jne    c801 <ecp_randomize_mxz+0x51>
    c8a2:	e9 f1 73 02 00       	jmpq   33c98 <instr.bb_c8a2>
    c8a7:	05 8b 18 02 00       	add    $0x2188b,%eax
    c8ac:	01 e8                	add    %ebp,%eax
    c8ae:	de 82 ff ff e9 f1    	fiadds -0xe160001(%rdx)
    c8b4:	73 02                	jae    c8b8 <ecp_randomize_mxz+0x108>
    c8b6:	00 66 0f             	add    %ah,0xf(%rsi)
    c8b9:	1f                   	(bad)  
    c8ba:	84 00                	test   %al,(%rax)
    c8bc:	00 00                	add    %al,(%rax)
    c8be:	00 00                	add    %al,(%rax)
    c8c0:	41 bc 00 b3 ff ff    	mov    $0xffffb300,%r12d
    c8c6:	e9 48 ff ff ff       	jmpq   c813 <ecp_randomize_mxz+0x63>
    c8cb:	e8 a0 79 ff ff       	callq  4270 <__stack_chk_fail@plt>

000000000000c8d0 <ecp_randomize_jac>:
    c8d0:	41 57                	push   %r15
    c8d2:	49 89 cf             	mov    %rcx,%r15
    c8d5:	41 56                	push   %r14
    c8d7:	41 55                	push   %r13
    c8d9:	49 89 f5             	mov    %rsi,%r13
    c8dc:	41 54                	push   %r12
    c8de:	49 89 d4             	mov    %rdx,%r12
    c8e1:	55                   	push   %rbp
    c8e2:	48 89 fd             	mov    %rdi,%rbp
    c8e5:	48 83 ec 20          	sub    $0x20,%rsp
    c8e9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c8f0:	00 00 
    c8f2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c8f7:	31 c0                	xor    %eax,%eax
    c8f9:	49 89 e6             	mov    %rsp,%r14
    c8fc:	4c 89 f7             	mov    %r14,%rdi
    c8ff:	e8 6c 82 ff ff       	callq  4b70 <mbedtls_mpi_init>
    c904:	4c 89 e1             	mov    %r12,%rcx
    c907:	48 8d 55 08          	lea    0x8(%rbp),%rdx
    c90b:	4d 89 f8             	mov    %r15,%r8
    c90e:	be 02 00 00 00       	mov    $0x2,%esi
    c913:	4c 89 f7             	mov    %r14,%rdi
    c916:	e8 b5 bb ff ff       	callq  84d0 <mbedtls_mpi_random>
    c91b:	41 89 c4             	mov    %eax,%r12d
    c91e:	85 c0                	test   %eax,%eax
    c920:	74 3e                	je     c960 <ecp_randomize_jac+0x90>
    c922:	4c 89 f7             	mov    %r14,%rdi
    c925:	e8 66 82 ff ff       	callq  4b90 <mbedtls_mpi_free>
    c92a:	41 83 fc f2          	cmp    $0xfffffff2,%r12d
    c92e:	0f 84 4c 01 00 00    	je     ca80 <ecp_randomize_jac+0x1b0>
    c934:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c939:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    c940:	00 00 
    c942:	0f 85 43 01 00 00    	jne    ca8b <ecp_randomize_jac+0x1bb>
    c948:	48 83 c4 20          	add    $0x20,%rsp
    c94c:	44 89 e0             	mov    %r12d,%eax
    c94f:	5d                   	pop    %rbp
    c950:	41 5c                	pop    %r12
    c952:	41 5d                	pop    %r13
    c954:	41 5e                	pop    %r14
    c956:	41 5f                	pop    %r15
    c958:	c3                   	retq   
    c959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c960:	4d 8d 7d 30          	lea    0x30(%r13),%r15
    c964:	4c 89 f2             	mov    %r14,%rdx
    c967:	4c 89 fe             	mov    %r15,%rsi
    c96a:	4c 89 ff             	mov    %r15,%rdi
    c96d:	e8 3e 90 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    c972:	41 89 c4             	mov    %eax,%r12d
    c975:	85 c0                	test   %eax,%eax
    c977:	75 a9                	jne    c922 <ecp_randomize_jac+0x52>
    c979:	48 89 ee             	mov    %rbp,%rsi
    c97c:	4c 89 ff             	mov    %r15,%rdi
    c97f:	e8 4c f8 ff ff       	callq  c1d0 <ecp_modp>
    c984:	41 89 c4             	mov    %eax,%r12d
    c987:	85 c0                	test   %eax,%eax
    c989:	75 97                	jne    c922 <ecp_randomize_jac+0x52>
    c98b:	4d 8d 7d 18          	lea    0x18(%r13),%r15
    c98f:	4c 89 f2             	mov    %r14,%rdx
    c992:	48 83 05 9e 17 02 00 	addq   $0x1,0x2179e(%rip)        # 2e138 <mul_count>
    c999:	01 
    c99a:	4c 89 fe             	mov    %r15,%rsi
    c99d:	4c 89 ff             	mov    %r15,%rdi
    c9a0:	e8 0b 90 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    c9a5:	41 89 c4             	mov    %eax,%r12d
    c9a8:	85 c0                	test   %eax,%eax
    c9aa:	0f 85 72 ff ff ff    	jne    c922 <ecp_randomize_jac+0x52>
    c9b0:	48 89 ee             	mov    %rbp,%rsi
    c9b3:	4c 89 ff             	mov    %r15,%rdi
    c9b6:	e8 15 f8 ff ff       	callq  c1d0 <ecp_modp>
    c9bb:	41 89 c4             	mov    %eax,%r12d
    c9be:	85 c0                	test   %eax,%eax
    c9c0:	0f 85 5c ff ff ff    	jne    c922 <ecp_randomize_jac+0x52>
    c9c6:	4c 89 f2             	mov    %r14,%rdx
    c9c9:	4c 89 f6             	mov    %r14,%rsi
    c9cc:	4c 89 f7             	mov    %r14,%rdi
    c9cf:	48 83 05 61 17 02 00 	addq   $0x1,0x21761(%rip)        # 2e138 <mul_count>
    c9d6:	01 
    c9d7:	e8 d4 8f ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    c9dc:	41 89 c4             	mov    %eax,%r12d
    c9df:	85 c0                	test   %eax,%eax
    c9e1:	0f 85 3b ff ff ff    	jne    c922 <ecp_randomize_jac+0x52>
    c9e7:	48 89 ee             	mov    %rbp,%rsi
    c9ea:	4c 89 f7             	mov    %r14,%rdi
    c9ed:	e8 de f7 ff ff       	callq  c1d0 <ecp_modp>
    c9f2:	41 89 c4             	mov    %eax,%r12d
    c9f5:	85 c0                	test   %eax,%eax
    c9f7:	0f 85 25 ff ff ff    	jne    c922 <ecp_randomize_jac+0x52>
    c9fd:	4c 89 f2             	mov    %r14,%rdx
    ca00:	4c 89 ee             	mov    %r13,%rsi
    ca03:	4c 89 ef             	mov    %r13,%rdi
    ca06:	48 83 05 2a 17 02 00 	addq   $0x1,0x2172a(%rip)        # 2e138 <mul_count>
    ca0d:	01 
    ca0e:	e8 9d 8f ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    ca13:	41 89 c4             	mov    %eax,%r12d
    ca16:	85 c0                	test   %eax,%eax
    ca18:	0f 85 04 ff ff ff    	jne    c922 <ecp_randomize_jac+0x52>
    ca1e:	48 89 ee             	mov    %rbp,%rsi
    ca21:	4c 89 ef             	mov    %r13,%rdi
    ca24:	e8 a7 f7 ff ff       	callq  c1d0 <ecp_modp>
    ca29:	41 89 c4             	mov    %eax,%r12d
    ca2c:	85 c0                	test   %eax,%eax
    ca2e:	0f 85 ee fe ff ff    	jne    c922 <ecp_randomize_jac+0x52>
    ca34:	4c 89 f2             	mov    %r14,%rdx
    ca37:	4c 89 fe             	mov    %r15,%rsi
    ca3a:	4c 89 ff             	mov    %r15,%rdi
    ca3d:	48 83 05 f3 16 02 00 	addq   $0x1,0x216f3(%rip)        # 2e138 <mul_count>
    ca44:	01 
    ca45:	e8 66 8f ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    ca4a:	41 89 c4             	mov    %eax,%r12d
    ca4d:	85 c0                	test   %eax,%eax
    ca4f:	0f 85 cd fe ff ff    	jne    c922 <ecp_randomize_jac+0x52>
    ca55:	48 89 ee             	mov    %rbp,%rsi
    ca58:	4c 89 ff             	mov    %r15,%rdi
    ca5b:	e8 70 f7 ff ff       	callq  c1d0 <ecp_modp>
    ca60:	41 89 c4             	mov    %eax,%r12d
    ca63:	85 c0                	test   %eax,%eax
    ca65:	0f 85 b7 fe ff ff    	jne    c922 <ecp_randomize_jac+0x52>
    ca6b:	4c 89 f7             	mov    %r14,%rdi
    ca6e:	48 83 05 c2 16 02 00 	addq   $0x1,0x216c2(%rip)        # 2e138 <mul_count>
    ca75:	01 
    ca76:	e8 15 81 ff ff       	callq  4b90 <mbedtls_mpi_free>
    ca7b:	e9 b4 fe ff ff       	jmpq   c934 <ecp_randomize_jac+0x64>
    ca80:	41 bc 00 b3 ff ff    	mov    $0xffffb300,%r12d
    ca86:	e9 a9 fe ff ff       	jmpq   c934 <ecp_randomize_jac+0x64>
    ca8b:	e8 e0 77 ff ff       	callq  4270 <__stack_chk_fail@plt>

000000000000ca90 <ecp_normalize_jac>:
    ca90:	41 57                	push   %r15
    ca92:	41 56                	push   %r14
    ca94:	4c 8d 76 30          	lea    0x30(%rsi),%r14
    ca98:	41 55                	push   %r13
    ca9a:	49 89 fd             	mov    %rdi,%r13
    ca9d:	4c 89 f7             	mov    %r14,%rdi
    caa0:	41 54                	push   %r12
    caa2:	55                   	push   %rbp
    caa3:	48 89 f5             	mov    %rsi,%rbp
    caa6:	31 f6                	xor    %esi,%esi
    caa8:	48 83 ec 30          	sub    $0x30,%rsp
    caac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cab3:	00 00 
    cab5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    caba:	31 c0                	xor    %eax,%eax
    cabc:	e8 9f 8a ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    cac1:	85 c0                	test   %eax,%eax
    cac3:	75 2b                	jne    caf0 <ecp_normalize_jac+0x60>
    cac5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    caca:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    cad1:	00 00 
    cad3:	0f 85 13 01 00 00    	jne    cbec <ecp_normalize_jac+0x15c>
    cad9:	48 83 c4 30          	add    $0x30,%rsp
    cadd:	5d                   	pop    %rbp
    cade:	41 5c                	pop    %r12
    cae0:	41 5d                	pop    %r13
    cae2:	41 5e                	pop    %r14
    cae4:	41 5f                	pop    %r15
    cae6:	c3                   	retq   
    cae7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    caee:	00 00 
    caf0:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    caf5:	4c 89 ff             	mov    %r15,%rdi
    caf8:	e8 73 80 ff ff       	callq  4b70 <mbedtls_mpi_init>
    cafd:	49 8d 55 08          	lea    0x8(%r13),%rdx
    cb01:	4c 89 f6             	mov    %r14,%rsi
    cb04:	4c 89 ff             	mov    %r15,%rdi
    cb07:	e8 44 ba ff ff       	callq  8550 <mbedtls_mpi_inv_mod>
    cb0c:	85 c0                	test   %eax,%eax
    cb0e:	75 16                	jne    cb26 <ecp_normalize_jac+0x96>
    cb10:	4c 8d 65 18          	lea    0x18(%rbp),%r12
    cb14:	4c 89 fa             	mov    %r15,%rdx
    cb17:	4c 89 e6             	mov    %r12,%rsi
    cb1a:	4c 89 e7             	mov    %r12,%rdi
    cb1d:	e8 8e 8e ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    cb22:	85 c0                	test   %eax,%eax
    cb24:	74 1a                	je     cb40 <ecp_normalize_jac+0xb0>
    cb26:	4c 89 ff             	mov    %r15,%rdi
    cb29:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    cb2d:	e8 5e 80 ff ff       	callq  4b90 <mbedtls_mpi_free>
    cb32:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    cb36:	eb 8d                	jmp    cac5 <ecp_normalize_jac+0x35>
    cb38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb3f:	00 
    cb40:	4c 89 ee             	mov    %r13,%rsi
    cb43:	4c 89 e7             	mov    %r12,%rdi
    cb46:	e8 85 f6 ff ff       	callq  c1d0 <ecp_modp>
    cb4b:	85 c0                	test   %eax,%eax
    cb4d:	75 d7                	jne    cb26 <ecp_normalize_jac+0x96>
    cb4f:	4c 89 fa             	mov    %r15,%rdx
    cb52:	4c 89 fe             	mov    %r15,%rsi
    cb55:	4c 89 ff             	mov    %r15,%rdi
    cb58:	48 83 05 d8 15 02 00 	addq   $0x1,0x215d8(%rip)        # 2e138 <mul_count>
    cb5f:	01 
    cb60:	e8 4b 8e ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    cb65:	85 c0                	test   %eax,%eax
    cb67:	75 bd                	jne    cb26 <ecp_normalize_jac+0x96>
    cb69:	4c 89 ee             	mov    %r13,%rsi
    cb6c:	4c 89 ff             	mov    %r15,%rdi
    cb6f:	e8 5c f6 ff ff       	callq  c1d0 <ecp_modp>
    cb74:	85 c0                	test   %eax,%eax
    cb76:	75 ae                	jne    cb26 <ecp_normalize_jac+0x96>
    cb78:	4c 89 fa             	mov    %r15,%rdx
    cb7b:	48 89 ee             	mov    %rbp,%rsi
    cb7e:	48 89 ef             	mov    %rbp,%rdi
    cb81:	48 83 05 af 15 02 00 	addq   $0x1,0x215af(%rip)        # 2e138 <mul_count>
    cb88:	01 
    cb89:	e8 22 8e ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    cb8e:	85 c0                	test   %eax,%eax
    cb90:	75 94                	jne    cb26 <ecp_normalize_jac+0x96>
    cb92:	4c 89 ee             	mov    %r13,%rsi
    cb95:	48 89 ef             	mov    %rbp,%rdi
    cb98:	e8 33 f6 ff ff       	callq  c1d0 <ecp_modp>
    cb9d:	85 c0                	test   %eax,%eax
    cb9f:	75 85                	jne    cb26 <ecp_normalize_jac+0x96>
    cba1:	4c 89 fa             	mov    %r15,%rdx
    cba4:	4c 89 e6             	mov    %r12,%rsi
    cba7:	4c 89 e7             	mov    %r12,%rdi
    cbaa:	48 83 05 86 15 02 00 	addq   $0x1,0x21586(%rip)        # 2e138 <mul_count>
    cbb1:	01 
    cbb2:	e8 f9 8d ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    cbb7:	85 c0                	test   %eax,%eax
    cbb9:	0f 85 67 ff ff ff    	jne    cb26 <ecp_normalize_jac+0x96>
    cbbf:	4c 89 ee             	mov    %r13,%rsi
    cbc2:	4c 89 e7             	mov    %r12,%rdi
    cbc5:	e8 06 f6 ff ff       	callq  c1d0 <ecp_modp>
    cbca:	85 c0                	test   %eax,%eax
    cbcc:	0f 85 54 ff ff ff    	jne    cb26 <ecp_normalize_jac+0x96>
    cbd2:	be 01 00 00 00       	mov    $0x1,%esi
    cbd7:	4c 89 f7             	mov    %r14,%rdi
    cbda:	48 83 05 56 15 02 00 	addq   $0x1,0x21556(%rip)        # 2e138 <mul_count>
    cbe1:	01 
    cbe2:	e8 a9 83 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    cbe7:	e9 3a ff ff ff       	jmpq   cb26 <ecp_normalize_jac+0x96>
    cbec:	e8 7f 76 ff ff       	callq  4270 <__stack_chk_fail@plt>
    cbf1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cbf8:	00 00 00 00 
    cbfc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000cc00 <ecp_normalize_jac_many>:
    cc00:	41 57                	push   %r15
    cc02:	41 56                	push   %r14
    cc04:	41 55                	push   %r13
    cc06:	41 54                	push   %r12
    cc08:	55                   	push   %rbp
    cc09:	48 89 fd             	mov    %rdi,%rbp
    cc0c:	53                   	push   %rbx
    cc0d:	48 83 ec 58          	sub    $0x58,%rsp
    cc11:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    cc16:	48 89 14 24          	mov    %rdx,(%rsp)
    cc1a:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    cc21:	00 00 
    cc23:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    cc28:	31 c9                	xor    %ecx,%ecx
    cc2a:	48 83 fa 01          	cmp    $0x1,%rdx
    cc2e:	0f 86 3c 01 00 00    	jbe    cd70 <ecp_normalize_jac_many+0x170>
    cc34:	4c 8b 34 24          	mov    (%rsp),%r14
    cc38:	be 18 00 00 00       	mov    $0x18,%esi
    cc3d:	4c 89 f7             	mov    %r14,%rdi
    cc40:	e8 8b 76 ff ff       	callq  42d0 <calloc@plt>
    cc45:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    cc4a:	49 89 c5             	mov    %rax,%r13
    cc4d:	48 89 c3             	mov    %rax,%rbx
    cc50:	48 85 c0             	test   %rax,%rax
    cc53:	0f 84 7e 03 00 00    	je     cfd7 <ecp_normalize_jac_many+0x3d7>
    cc59:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    cc5e:	4c 89 e7             	mov    %r12,%rdi
    cc61:	e8 0a 7f ff ff       	callq  4b70 <mbedtls_mpi_init>
    cc66:	49 8d 46 ff          	lea    -0x1(%r14),%rax
    cc6a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    cc6f:	4b 8d 04 76          	lea    (%r14,%r14,2),%rax
    cc73:	48 c1 e0 03          	shl    $0x3,%rax
    cc77:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    cc7c:	48 01 c3             	add    %rax,%rbx
    cc7f:	90                   	nop
    cc80:	4c 89 ef             	mov    %r13,%rdi
    cc83:	49 83 c5 18          	add    $0x18,%r13
    cc87:	e8 e4 7e ff ff       	callq  4b70 <mbedtls_mpi_init>
    cc8c:	49 39 dd             	cmp    %rbx,%r13
    cc8f:	75 ef                	jne    cc80 <ecp_normalize_jac_many+0x80>
    cc91:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    cc96:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    cc9b:	49 8b 06             	mov    (%r14),%rax
    cc9e:	4c 89 ef             	mov    %r13,%rdi
    cca1:	48 8d 70 30          	lea    0x30(%rax),%rsi
    cca5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    ccaa:	e8 71 81 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    ccaf:	41 89 c7             	mov    %eax,%r15d
    ccb2:	85 c0                	test   %eax,%eax
    ccb4:	75 5f                	jne    cd15 <ecp_normalize_jac_many+0x115>
    ccb6:	48 8b 0c 24          	mov    (%rsp),%rcx
    ccba:	4c 89 f0             	mov    %r14,%rax
    ccbd:	4d 8d 76 08          	lea    0x8(%r14),%r14
    ccc1:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
    ccc5:	48 89 04 24          	mov    %rax,(%rsp)
    ccc9:	eb 2d                	jmp    ccf8 <ecp_normalize_jac_many+0xf8>
    cccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ccd0:	48 89 ee             	mov    %rbp,%rsi
    ccd3:	4c 89 ef             	mov    %r13,%rdi
    ccd6:	e8 f5 f4 ff ff       	callq  c1d0 <ecp_modp>
    ccdb:	41 89 c7             	mov    %eax,%r15d
    ccde:	85 c0                	test   %eax,%eax
    cce0:	75 33                	jne    cd15 <ecp_normalize_jac_many+0x115>
    cce2:	48 83 05 4e 14 02 00 	addq   $0x1,0x2144e(%rip)        # 2e138 <mul_count>
    cce9:	01 
    ccea:	49 83 c6 08          	add    $0x8,%r14
    ccee:	4c 3b 34 24          	cmp    (%rsp),%r14
    ccf2:	0f 84 88 00 00 00    	je     cd80 <ecp_normalize_jac_many+0x180>
    ccf8:	49 8b 06             	mov    (%r14),%rax
    ccfb:	4c 89 ee             	mov    %r13,%rsi
    ccfe:	49 83 c5 18          	add    $0x18,%r13
    cd02:	4c 89 ef             	mov    %r13,%rdi
    cd05:	48 8d 50 30          	lea    0x30(%rax),%rdx
    cd09:	e8 a2 8c ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    cd0e:	41 89 c7             	mov    %eax,%r15d
    cd11:	85 c0                	test   %eax,%eax
    cd13:	74 bb                	je     ccd0 <ecp_normalize_jac_many+0xd0>
    cd15:	4c 89 e7             	mov    %r12,%rdi
    cd18:	e8 73 7e ff ff       	callq  4b90 <mbedtls_mpi_free>
    cd1d:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    cd22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cd28:	48 89 ef             	mov    %rbp,%rdi
    cd2b:	48 83 c5 18          	add    $0x18,%rbp
    cd2f:	e8 5c 7e ff ff       	callq  4b90 <mbedtls_mpi_free>
    cd34:	48 39 dd             	cmp    %rbx,%rbp
    cd37:	75 ef                	jne    cd28 <ecp_normalize_jac_many+0x128>
    cd39:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    cd3e:	e8 ad 74 ff ff       	callq  41f0 <free@plt>
    cd43:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    cd48:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    cd4f:	00 00 
    cd51:	0f 85 7b 02 00 00    	jne    cfd2 <ecp_normalize_jac_many+0x3d2>
    cd57:	48 83 c4 58          	add    $0x58,%rsp
    cd5b:	44 89 f8             	mov    %r15d,%eax
    cd5e:	5b                   	pop    %rbx
    cd5f:	5d                   	pop    %rbp
    cd60:	41 5c                	pop    %r12
    cd62:	41 5d                	pop    %r13
    cd64:	41 5e                	pop    %r14
    cd66:	41 5f                	pop    %r15
    cd68:	c3                   	retq   
    cd69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd70:	48 8b 36             	mov    (%rsi),%rsi
    cd73:	e8 18 fd ff ff       	callq  ca90 <ecp_normalize_jac>
    cd78:	41 89 c7             	mov    %eax,%r15d
    cd7b:	eb c6                	jmp    cd43 <ecp_normalize_jac_many+0x143>
    cd7d:	0f 1f 00             	nopl   (%rax)
    cd80:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    cd85:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    cd8a:	48 8d 55 08          	lea    0x8(%rbp),%rdx
    cd8e:	49 8d 7c 05 e8       	lea    -0x18(%r13,%rax,1),%rdi
    cd93:	48 89 fe             	mov    %rdi,%rsi
    cd96:	e8 b5 b7 ff ff       	callq  8550 <mbedtls_mpi_inv_mod>
    cd9b:	41 89 c7             	mov    %eax,%r15d
    cd9e:	85 c0                	test   %eax,%eax
    cda0:	0f 85 6f ff ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cda6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    cdab:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    cdb0:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    cdb5:	49 8d 44 05 d0       	lea    -0x30(%r13,%rax,1),%rax
    cdba:	48 89 04 24          	mov    %rax,(%rsp)
    cdbe:	4c 8d 34 d1          	lea    (%rcx,%rdx,8),%r14
    cdc2:	e9 e2 01 00 00       	jmpq   cfa9 <ecp_normalize_jac_many+0x3a9>
    cdc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cdce:	00 00 
    cdd0:	48 8b 04 24          	mov    (%rsp),%rax
    cdd4:	4c 89 e7             	mov    %r12,%rdi
    cdd7:	4c 8d 68 18          	lea    0x18(%rax),%r13
    cddb:	48 89 c2             	mov    %rax,%rdx
    cdde:	4c 89 ee             	mov    %r13,%rsi
    cde1:	e8 ca 8b ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    cde6:	41 89 c7             	mov    %eax,%r15d
    cde9:	85 c0                	test   %eax,%eax
    cdeb:	0f 85 24 ff ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cdf1:	48 89 ee             	mov    %rbp,%rsi
    cdf4:	4c 89 e7             	mov    %r12,%rdi
    cdf7:	e8 d4 f3 ff ff       	callq  c1d0 <ecp_modp>
    cdfc:	41 89 c7             	mov    %eax,%r15d
    cdff:	85 c0                	test   %eax,%eax
    ce01:	0f 85 0e ff ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    ce07:	49 8b 0e             	mov    (%r14),%rcx
    ce0a:	4c 89 ee             	mov    %r13,%rsi
    ce0d:	4c 8b 2c 24          	mov    (%rsp),%r13
    ce11:	48 83 05 1f 13 02 00 	addq   $0x1,0x2131f(%rip)        # 2e138 <mul_count>
    ce18:	01 
    ce19:	48 8d 51 30          	lea    0x30(%rcx),%rdx
    ce1d:	4c 89 ef             	mov    %r13,%rdi
    ce20:	e8 8b 8b ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    ce25:	41 89 c7             	mov    %eax,%r15d
    ce28:	85 c0                	test   %eax,%eax
    ce2a:	0f 85 e5 fe ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    ce30:	48 89 ee             	mov    %rbp,%rsi
    ce33:	4c 89 ef             	mov    %r13,%rdi
    ce36:	e8 95 f3 ff ff       	callq  c1d0 <ecp_modp>
    ce3b:	41 89 c7             	mov    %eax,%r15d
    ce3e:	85 c0                	test   %eax,%eax
    ce40:	0f 85 cf fe ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    ce46:	48 83 05 ea 12 02 00 	addq   $0x1,0x212ea(%rip)        # 2e138 <mul_count>
    ce4d:	01 
    ce4e:	49 8b 06             	mov    (%r14),%rax
    ce51:	4c 89 e2             	mov    %r12,%rdx
    ce54:	4c 8d 68 18          	lea    0x18(%rax),%r13
    ce58:	4c 89 ee             	mov    %r13,%rsi
    ce5b:	4c 89 ef             	mov    %r13,%rdi
    ce5e:	e8 4d 8b ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    ce63:	41 89 c7             	mov    %eax,%r15d
    ce66:	85 c0                	test   %eax,%eax
    ce68:	0f 85 a7 fe ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    ce6e:	48 89 ee             	mov    %rbp,%rsi
    ce71:	4c 89 ef             	mov    %r13,%rdi
    ce74:	e8 57 f3 ff ff       	callq  c1d0 <ecp_modp>
    ce79:	41 89 c7             	mov    %eax,%r15d
    ce7c:	85 c0                	test   %eax,%eax
    ce7e:	0f 85 91 fe ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    ce84:	4c 89 e2             	mov    %r12,%rdx
    ce87:	4c 89 e6             	mov    %r12,%rsi
    ce8a:	4c 89 e7             	mov    %r12,%rdi
    ce8d:	48 83 05 a3 12 02 00 	addq   $0x1,0x212a3(%rip)        # 2e138 <mul_count>
    ce94:	01 
    ce95:	e8 16 8b ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    ce9a:	41 89 c7             	mov    %eax,%r15d
    ce9d:	85 c0                	test   %eax,%eax
    ce9f:	0f 85 70 fe ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cea5:	48 89 ee             	mov    %rbp,%rsi
    cea8:	4c 89 e7             	mov    %r12,%rdi
    ceab:	e8 20 f3 ff ff       	callq  c1d0 <ecp_modp>
    ceb0:	41 89 c7             	mov    %eax,%r15d
    ceb3:	85 c0                	test   %eax,%eax
    ceb5:	0f 85 5a fe ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cebb:	4d 8b 2e             	mov    (%r14),%r13
    cebe:	4c 89 e2             	mov    %r12,%rdx
    cec1:	48 83 05 6f 12 02 00 	addq   $0x1,0x2126f(%rip)        # 2e138 <mul_count>
    cec8:	01 
    cec9:	4c 89 ee             	mov    %r13,%rsi
    cecc:	4c 89 ef             	mov    %r13,%rdi
    cecf:	e8 dc 8a ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    ced4:	41 89 c7             	mov    %eax,%r15d
    ced7:	85 c0                	test   %eax,%eax
    ced9:	0f 85 36 fe ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cedf:	48 89 ee             	mov    %rbp,%rsi
    cee2:	4c 89 ef             	mov    %r13,%rdi
    cee5:	e8 e6 f2 ff ff       	callq  c1d0 <ecp_modp>
    ceea:	41 89 c7             	mov    %eax,%r15d
    ceed:	85 c0                	test   %eax,%eax
    ceef:	0f 85 20 fe ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cef5:	49 8b 06             	mov    (%r14),%rax
    cef8:	4c 89 e2             	mov    %r12,%rdx
    cefb:	48 83 05 35 12 02 00 	addq   $0x1,0x21235(%rip)        # 2e138 <mul_count>
    cf02:	01 
    cf03:	4c 8d 68 18          	lea    0x18(%rax),%r13
    cf07:	4c 89 ee             	mov    %r13,%rsi
    cf0a:	4c 89 ef             	mov    %r13,%rdi
    cf0d:	e8 9e 8a ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    cf12:	41 89 c7             	mov    %eax,%r15d
    cf15:	85 c0                	test   %eax,%eax
    cf17:	0f 85 f8 fd ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cf1d:	48 89 ee             	mov    %rbp,%rsi
    cf20:	4c 89 ef             	mov    %r13,%rdi
    cf23:	e8 a8 f2 ff ff       	callq  c1d0 <ecp_modp>
    cf28:	41 89 c7             	mov    %eax,%r15d
    cf2b:	85 c0                	test   %eax,%eax
    cf2d:	0f 85 e2 fd ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cf33:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    cf37:	49 8b 3e             	mov    (%r14),%rdi
    cf3a:	48 83 05 f6 11 02 00 	addq   $0x1,0x211f6(%rip)        # 2e138 <mul_count>
    cf41:	01 
    cf42:	e8 b9 7d ff ff       	callq  4d00 <mbedtls_mpi_shrink>
    cf47:	41 89 c7             	mov    %eax,%r15d
    cf4a:	85 c0                	test   %eax,%eax
    cf4c:	0f 85 c3 fd ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cf52:	49 8b 06             	mov    (%r14),%rax
    cf55:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    cf59:	48 8d 78 18          	lea    0x18(%rax),%rdi
    cf5d:	e8 9e 7d ff ff       	callq  4d00 <mbedtls_mpi_shrink>
    cf62:	41 89 c7             	mov    %eax,%r15d
    cf65:	85 c0                	test   %eax,%eax
    cf67:	0f 85 a8 fd ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cf6d:	49 8b 06             	mov    (%r14),%rax
    cf70:	be 01 00 00 00       	mov    $0x1,%esi
    cf75:	48 8d 78 30          	lea    0x30(%rax),%rdi
    cf79:	e8 12 80 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    cf7e:	41 89 c7             	mov    %eax,%r15d
    cf81:	85 c0                	test   %eax,%eax
    cf83:	0f 85 8c fd ff ff    	jne    cd15 <ecp_normalize_jac_many+0x115>
    cf89:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    cf8e:	48 83 2c 24 18       	subq   $0x18,(%rsp)
    cf93:	49 83 ee 08          	sub    $0x8,%r14
    cf97:	48 85 c0             	test   %rax,%rax
    cf9a:	0f 84 75 fd ff ff    	je     cd15 <ecp_normalize_jac_many+0x115>
    cfa0:	48 83 e8 01          	sub    $0x1,%rax
    cfa4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    cfa9:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    cfaf:	0f 85 1b fe ff ff    	jne    cdd0 <ecp_normalize_jac_many+0x1d0>
    cfb5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    cfba:	4c 89 e7             	mov    %r12,%rdi
    cfbd:	e8 5e 7e ff ff       	callq  4e20 <mbedtls_mpi_copy>
    cfc2:	41 89 c7             	mov    %eax,%r15d
    cfc5:	85 c0                	test   %eax,%eax
    cfc7:	0f 84 81 fe ff ff    	je     ce4e <ecp_normalize_jac_many+0x24e>
    cfcd:	e9 43 fd ff ff       	jmpq   cd15 <ecp_normalize_jac_many+0x115>
    cfd2:	e8 99 72 ff ff       	callq  4270 <__stack_chk_fail@plt>
    cfd7:	41 bf 80 b2 ff ff    	mov    $0xffffb280,%r15d
    cfdd:	e9 61 fd ff ff       	jmpq   cd43 <ecp_normalize_jac_many+0x143>
    cfe2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cfe9:	00 00 00 00 
    cfed:	0f 1f 00             	nopl   (%rax)

000000000000cff0 <ecp_double_jac>:
    cff0:	41 57                	push   %r15
    cff2:	4c 8d 79 18          	lea    0x18(%rcx),%r15
    cff6:	41 56                	push   %r14
    cff8:	41 55                	push   %r13
    cffa:	49 89 fd             	mov    %rdi,%r13
    cffd:	41 54                	push   %r12
    cfff:	49 89 cc             	mov    %rcx,%r12
    d002:	55                   	push   %rbp
    d003:	48 89 d5             	mov    %rdx,%rbp
    d006:	53                   	push   %rbx
    d007:	48 83 ec 28          	sub    $0x28,%rsp
    d00b:	48 83 05 2d 11 02 00 	addq   $0x1,0x2112d(%rip)        # 2e140 <dbl_count>
    d012:	01 
    d013:	48 83 7f 30 00       	cmpq   $0x0,0x30(%rdi)
    d018:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    d01d:	0f 84 f5 00 00 00    	je     d118 <ecp_double_jac+0x128>
    d023:	48 89 d6             	mov    %rdx,%rsi
    d026:	4c 89 ff             	mov    %r15,%rdi
    d029:	e8 82 89 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d02e:	85 c0                	test   %eax,%eax
    d030:	74 16                	je     d048 <ecp_double_jac+0x58>
    d032:	48 83 c4 28          	add    $0x28,%rsp
    d036:	5b                   	pop    %rbx
    d037:	5d                   	pop    %rbp
    d038:	41 5c                	pop    %r12
    d03a:	41 5d                	pop    %r13
    d03c:	41 5e                	pop    %r14
    d03e:	41 5f                	pop    %r15
    d040:	c3                   	retq   
    d041:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d048:	4c 89 ee             	mov    %r13,%rsi
    d04b:	4c 89 ff             	mov    %r15,%rdi
    d04e:	e8 7d f1 ff ff       	callq  c1d0 <ecp_modp>
    d053:	85 c0                	test   %eax,%eax
    d055:	75 db                	jne    d032 <ecp_double_jac+0x42>
    d057:	ba 03 00 00 00       	mov    $0x3,%edx
    d05c:	4c 89 fe             	mov    %r15,%rsi
    d05f:	49 8d 5d 08          	lea    0x8(%r13),%rbx
    d063:	4c 89 e7             	mov    %r12,%rdi
    d066:	48 83 05 ca 10 02 00 	addq   $0x1,0x210ca(%rip)        # 2e138 <mul_count>
    d06d:	01 
    d06e:	e8 2d 8b ff ff       	callq  5ba0 <mbedtls_mpi_mul_int>
    d073:	85 c0                	test   %eax,%eax
    d075:	74 1b                	je     d092 <ecp_double_jac+0xa2>
    d077:	eb b9                	jmp    d032 <ecp_double_jac+0x42>
    d079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d080:	48 89 da             	mov    %rbx,%rdx
    d083:	4c 89 e6             	mov    %r12,%rsi
    d086:	4c 89 e7             	mov    %r12,%rdi
    d089:	e8 42 86 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    d08e:	85 c0                	test   %eax,%eax
    d090:	75 a0                	jne    d032 <ecp_double_jac+0x42>
    d092:	48 89 de             	mov    %rbx,%rsi
    d095:	4c 89 e7             	mov    %r12,%rdi
    d098:	e8 d3 83 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    d09d:	85 c0                	test   %eax,%eax
    d09f:	79 df                	jns    d080 <ecp_double_jac+0x90>
    d0a1:	4d 8d 75 20          	lea    0x20(%r13),%r14
    d0a5:	31 f6                	xor    %esi,%esi
    d0a7:	4c 89 f7             	mov    %r14,%rdi
    d0aa:	e8 b1 84 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    d0af:	85 c0                	test   %eax,%eax
    d0b1:	0f 85 41 04 00 00    	jne    d4f8 <ecp_double_jac+0x508>
    d0b7:	49 8d 4c 24 30       	lea    0x30(%r12),%rcx
    d0bc:	49 89 ce             	mov    %rcx,%r14
    d0bf:	48 8d 45 18          	lea    0x18(%rbp),%rax
    d0c3:	4c 89 f7             	mov    %r14,%rdi
    d0c6:	48 89 c2             	mov    %rax,%rdx
    d0c9:	48 89 c6             	mov    %rax,%rsi
    d0cc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    d0d1:	e8 da 88 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d0d6:	85 c0                	test   %eax,%eax
    d0d8:	0f 85 54 ff ff ff    	jne    d032 <ecp_double_jac+0x42>
    d0de:	4c 89 ee             	mov    %r13,%rsi
    d0e1:	4c 89 f7             	mov    %r14,%rdi
    d0e4:	e8 e7 f0 ff ff       	callq  c1d0 <ecp_modp>
    d0e9:	85 c0                	test   %eax,%eax
    d0eb:	0f 85 41 ff ff ff    	jne    d032 <ecp_double_jac+0x42>
    d0f1:	be 01 00 00 00       	mov    $0x1,%esi
    d0f6:	4c 89 f7             	mov    %r14,%rdi
    d0f9:	48 83 05 37 10 02 00 	addq   $0x1,0x21037(%rip)        # 2e138 <mul_count>
    d100:	01 
    d101:	e8 4a 81 ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    d106:	85 c0                	test   %eax,%eax
    d108:	0f 84 88 01 00 00    	je     d296 <ecp_double_jac+0x2a6>
    d10e:	e9 1f ff ff ff       	jmpq   d032 <ecp_double_jac+0x42>
    d113:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d118:	48 8d 72 30          	lea    0x30(%rdx),%rsi
    d11c:	4c 89 ff             	mov    %r15,%rdi
    d11f:	48 89 f2             	mov    %rsi,%rdx
    d122:	e8 89 88 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d127:	85 c0                	test   %eax,%eax
    d129:	0f 85 03 ff ff ff    	jne    d032 <ecp_double_jac+0x42>
    d12f:	4c 89 ee             	mov    %r13,%rsi
    d132:	4c 89 ff             	mov    %r15,%rdi
    d135:	e8 96 f0 ff ff       	callq  c1d0 <ecp_modp>
    d13a:	85 c0                	test   %eax,%eax
    d13c:	0f 85 f0 fe ff ff    	jne    d032 <ecp_double_jac+0x42>
    d142:	4d 8d 74 24 30       	lea    0x30(%r12),%r14
    d147:	4c 89 fa             	mov    %r15,%rdx
    d14a:	49 8d 5d 08          	lea    0x8(%r13),%rbx
    d14e:	48 89 ee             	mov    %rbp,%rsi
    d151:	4c 89 f7             	mov    %r14,%rdi
    d154:	48 83 05 dc 0f 02 00 	addq   $0x1,0x20fdc(%rip)        # 2e138 <mul_count>
    d15b:	01 
    d15c:	e8 4f 87 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    d161:	85 c0                	test   %eax,%eax
    d163:	74 21                	je     d186 <ecp_double_jac+0x196>
    d165:	e9 c8 fe ff ff       	jmpq   d032 <ecp_double_jac+0x42>
    d16a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d170:	48 89 da             	mov    %rbx,%rdx
    d173:	4c 89 f6             	mov    %r14,%rsi
    d176:	4c 89 f7             	mov    %r14,%rdi
    d179:	e8 52 85 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    d17e:	85 c0                	test   %eax,%eax
    d180:	0f 85 ac fe ff ff    	jne    d032 <ecp_double_jac+0x42>
    d186:	48 89 de             	mov    %rbx,%rsi
    d189:	4c 89 f7             	mov    %r14,%rdi
    d18c:	e8 df 82 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    d191:	85 c0                	test   %eax,%eax
    d193:	79 db                	jns    d170 <ecp_double_jac+0x180>
    d195:	4d 8d 44 24 48       	lea    0x48(%r12),%r8
    d19a:	4c 89 fa             	mov    %r15,%rdx
    d19d:	48 89 ee             	mov    %rbp,%rsi
    d1a0:	4c 89 c7             	mov    %r8,%rdi
    d1a3:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    d1a8:	e8 13 87 ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    d1ad:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    d1b2:	85 c0                	test   %eax,%eax
    d1b4:	74 42                	je     d1f8 <ecp_double_jac+0x208>
    d1b6:	e9 77 fe ff ff       	jmpq   d032 <ecp_double_jac+0x42>
    d1bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d1c0:	31 f6                	xor    %esi,%esi
    d1c2:	4c 89 c7             	mov    %r8,%rdi
    d1c5:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    d1ca:	e8 91 83 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    d1cf:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    d1d4:	85 c0                	test   %eax,%eax
    d1d6:	74 29                	je     d201 <ecp_double_jac+0x211>
    d1d8:	4c 89 c6             	mov    %r8,%rsi
    d1db:	4c 89 c7             	mov    %r8,%rdi
    d1de:	48 89 da             	mov    %rbx,%rdx
    d1e1:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    d1e6:	e8 c5 86 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    d1eb:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    d1f0:	85 c0                	test   %eax,%eax
    d1f2:	0f 85 3a fe ff ff    	jne    d032 <ecp_double_jac+0x42>
    d1f8:	41 8b 44 24 48       	mov    0x48(%r12),%eax
    d1fd:	85 c0                	test   %eax,%eax
    d1ff:	78 bf                	js     d1c0 <ecp_double_jac+0x1d0>
    d201:	4c 89 c2             	mov    %r8,%rdx
    d204:	4c 89 f6             	mov    %r14,%rsi
    d207:	4c 89 ff             	mov    %r15,%rdi
    d20a:	e8 a1 87 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d20f:	85 c0                	test   %eax,%eax
    d211:	0f 85 1b fe ff ff    	jne    d032 <ecp_double_jac+0x42>
    d217:	4c 89 ee             	mov    %r13,%rsi
    d21a:	4c 89 ff             	mov    %r15,%rdi
    d21d:	e8 ae ef ff ff       	callq  c1d0 <ecp_modp>
    d222:	85 c0                	test   %eax,%eax
    d224:	0f 85 08 fe ff ff    	jne    d032 <ecp_double_jac+0x42>
    d22a:	ba 03 00 00 00       	mov    $0x3,%edx
    d22f:	4c 89 fe             	mov    %r15,%rsi
    d232:	4c 89 e7             	mov    %r12,%rdi
    d235:	48 83 05 fb 0e 02 00 	addq   $0x1,0x20efb(%rip)        # 2e138 <mul_count>
    d23c:	01 
    d23d:	e8 5e 89 ff ff       	callq  5ba0 <mbedtls_mpi_mul_int>
    d242:	85 c0                	test   %eax,%eax
    d244:	0f 85 e8 fd ff ff    	jne    d032 <ecp_double_jac+0x42>
    d24a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d250:	48 89 de             	mov    %rbx,%rsi
    d253:	4c 89 e7             	mov    %r12,%rdi
    d256:	e8 15 82 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    d25b:	85 c0                	test   %eax,%eax
    d25d:	0f 88 5c fe ff ff    	js     d0bf <ecp_double_jac+0xcf>
    d263:	48 89 da             	mov    %rbx,%rdx
    d266:	4c 89 e6             	mov    %r12,%rsi
    d269:	4c 89 e7             	mov    %r12,%rdi
    d26c:	e8 5f 84 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    d271:	85 c0                	test   %eax,%eax
    d273:	74 db                	je     d250 <ecp_double_jac+0x260>
    d275:	e9 b8 fd ff ff       	jmpq   d032 <ecp_double_jac+0x42>
    d27a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d280:	48 89 da             	mov    %rbx,%rdx
    d283:	4c 89 f6             	mov    %r14,%rsi
    d286:	4c 89 f7             	mov    %r14,%rdi
    d289:	e8 42 84 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    d28e:	85 c0                	test   %eax,%eax
    d290:	0f 85 9c fd ff ff    	jne    d032 <ecp_double_jac+0x42>
    d296:	48 89 de             	mov    %rbx,%rsi
    d299:	4c 89 f7             	mov    %r14,%rdi
    d29c:	e8 cf 81 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    d2a1:	85 c0                	test   %eax,%eax
    d2a3:	79 db                	jns    d280 <ecp_double_jac+0x290>
    d2a5:	4c 89 f2             	mov    %r14,%rdx
    d2a8:	48 89 ee             	mov    %rbp,%rsi
    d2ab:	4c 89 ff             	mov    %r15,%rdi
    d2ae:	e8 fd 86 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d2b3:	85 c0                	test   %eax,%eax
    d2b5:	0f 85 77 fd ff ff    	jne    d032 <ecp_double_jac+0x42>
    d2bb:	4c 89 ee             	mov    %r13,%rsi
    d2be:	4c 89 ff             	mov    %r15,%rdi
    d2c1:	e8 0a ef ff ff       	callq  c1d0 <ecp_modp>
    d2c6:	85 c0                	test   %eax,%eax
    d2c8:	0f 85 64 fd ff ff    	jne    d032 <ecp_double_jac+0x42>
    d2ce:	be 01 00 00 00       	mov    $0x1,%esi
    d2d3:	4c 89 ff             	mov    %r15,%rdi
    d2d6:	48 83 05 5a 0e 02 00 	addq   $0x1,0x20e5a(%rip)        # 2e138 <mul_count>
    d2dd:	01 
    d2de:	e8 6d 7f ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    d2e3:	85 c0                	test   %eax,%eax
    d2e5:	74 1f                	je     d306 <ecp_double_jac+0x316>
    d2e7:	e9 46 fd ff ff       	jmpq   d032 <ecp_double_jac+0x42>
    d2ec:	0f 1f 40 00          	nopl   0x0(%rax)
    d2f0:	48 89 da             	mov    %rbx,%rdx
    d2f3:	4c 89 fe             	mov    %r15,%rsi
    d2f6:	4c 89 ff             	mov    %r15,%rdi
    d2f9:	e8 d2 83 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    d2fe:	85 c0                	test   %eax,%eax
    d300:	0f 85 2c fd ff ff    	jne    d032 <ecp_double_jac+0x42>
    d306:	48 89 de             	mov    %rbx,%rsi
    d309:	4c 89 ff             	mov    %r15,%rdi
    d30c:	e8 5f 81 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    d311:	85 c0                	test   %eax,%eax
    d313:	79 db                	jns    d2f0 <ecp_double_jac+0x300>
    d315:	4d 8d 44 24 48       	lea    0x48(%r12),%r8
    d31a:	4c 89 f2             	mov    %r14,%rdx
    d31d:	4c 89 f6             	mov    %r14,%rsi
    d320:	4c 89 c7             	mov    %r8,%rdi
    d323:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    d328:	e8 83 86 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d32d:	85 c0                	test   %eax,%eax
    d32f:	0f 85 fd fc ff ff    	jne    d032 <ecp_double_jac+0x42>
    d335:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    d33a:	4c 89 ee             	mov    %r13,%rsi
    d33d:	4c 89 c7             	mov    %r8,%rdi
    d340:	e8 8b ee ff ff       	callq  c1d0 <ecp_modp>
    d345:	85 c0                	test   %eax,%eax
    d347:	0f 85 e5 fc ff ff    	jne    d032 <ecp_double_jac+0x42>
    d34d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    d352:	be 01 00 00 00       	mov    $0x1,%esi
    d357:	48 83 05 d9 0d 02 00 	addq   $0x1,0x20dd9(%rip)        # 2e138 <mul_count>
    d35e:	01 
    d35f:	4c 89 c7             	mov    %r8,%rdi
    d362:	e8 e9 7e ff ff       	callq  5250 <mbedtls_mpi_shift_l>
    d367:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    d36c:	85 c0                	test   %eax,%eax
    d36e:	74 28                	je     d398 <ecp_double_jac+0x3a8>
    d370:	e9 bd fc ff ff       	jmpq   d032 <ecp_double_jac+0x42>
    d375:	0f 1f 00             	nopl   (%rax)
    d378:	4c 89 c6             	mov    %r8,%rsi
    d37b:	4c 89 c7             	mov    %r8,%rdi
    d37e:	48 89 da             	mov    %rbx,%rdx
    d381:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    d386:	e8 45 83 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    d38b:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    d390:	85 c0                	test   %eax,%eax
    d392:	0f 85 9a fc ff ff    	jne    d032 <ecp_double_jac+0x42>
    d398:	4c 89 c7             	mov    %r8,%rdi
    d39b:	48 89 de             	mov    %rbx,%rsi
    d39e:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    d3a3:	e8 c8 80 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    d3a8:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    d3ad:	85 c0                	test   %eax,%eax
    d3af:	79 c7                	jns    d378 <ecp_double_jac+0x388>
    d3b1:	4c 89 e2             	mov    %r12,%rdx
    d3b4:	4c 89 e6             	mov    %r12,%rsi
    d3b7:	4c 89 f7             	mov    %r14,%rdi
    d3ba:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    d3bf:	e8 ec 85 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d3c4:	85 c0                	test   %eax,%eax
    d3c6:	0f 85 66 fc ff ff    	jne    d032 <ecp_double_jac+0x42>
    d3cc:	4c 89 ee             	mov    %r13,%rsi
    d3cf:	4c 89 f7             	mov    %r14,%rdi
    d3d2:	e8 f9 ed ff ff       	callq  c1d0 <ecp_modp>
    d3d7:	85 c0                	test   %eax,%eax
    d3d9:	0f 85 53 fc ff ff    	jne    d032 <ecp_double_jac+0x42>
    d3df:	4c 89 f9             	mov    %r15,%rcx
    d3e2:	4c 89 f2             	mov    %r14,%rdx
    d3e5:	4c 89 f6             	mov    %r14,%rsi
    d3e8:	4c 89 ef             	mov    %r13,%rdi
    d3eb:	48 83 05 45 0d 02 00 	addq   $0x1,0x20d45(%rip)        # 2e138 <mul_count>
    d3f2:	01 
    d3f3:	e8 88 ef ff ff       	callq  c380 <mbedtls_mpi_sub_mod>
    d3f8:	85 c0                	test   %eax,%eax
    d3fa:	0f 85 32 fc ff ff    	jne    d032 <ecp_double_jac+0x42>
    d400:	4c 89 f9             	mov    %r15,%rcx
    d403:	4c 89 f2             	mov    %r14,%rdx
    d406:	4c 89 f6             	mov    %r14,%rsi
    d409:	4c 89 ef             	mov    %r13,%rdi
    d40c:	e8 6f ef ff ff       	callq  c380 <mbedtls_mpi_sub_mod>
    d411:	85 c0                	test   %eax,%eax
    d413:	0f 85 19 fc ff ff    	jne    d032 <ecp_double_jac+0x42>
    d419:	4c 89 f1             	mov    %r14,%rcx
    d41c:	4c 89 fa             	mov    %r15,%rdx
    d41f:	4c 89 fe             	mov    %r15,%rsi
    d422:	4c 89 ef             	mov    %r13,%rdi
    d425:	e8 56 ef ff ff       	callq  c380 <mbedtls_mpi_sub_mod>
    d42a:	85 c0                	test   %eax,%eax
    d42c:	0f 85 00 fc ff ff    	jne    d032 <ecp_double_jac+0x42>
    d432:	4c 89 e1             	mov    %r12,%rcx
    d435:	4c 89 fa             	mov    %r15,%rdx
    d438:	4c 89 fe             	mov    %r15,%rsi
    d43b:	4c 89 ef             	mov    %r13,%rdi
    d43e:	e8 ad ef ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    d443:	85 c0                	test   %eax,%eax
    d445:	0f 85 e7 fb ff ff    	jne    d032 <ecp_double_jac+0x42>
    d44b:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    d450:	4c 89 fa             	mov    %r15,%rdx
    d453:	4c 89 fe             	mov    %r15,%rsi
    d456:	4c 89 ef             	mov    %r13,%rdi
    d459:	4c 89 c1             	mov    %r8,%rcx
    d45c:	e8 1f ef ff ff       	callq  c380 <mbedtls_mpi_sub_mod>
    d461:	85 c0                	test   %eax,%eax
    d463:	0f 85 c9 fb ff ff    	jne    d032 <ecp_double_jac+0x42>
    d469:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    d46e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    d473:	48 8d 4d 30          	lea    0x30(%rbp),%rcx
    d477:	4c 89 ef             	mov    %r13,%rdi
    d47a:	4c 89 c6             	mov    %r8,%rsi
    d47d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    d482:	e8 69 ef ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    d487:	85 c0                	test   %eax,%eax
    d489:	0f 85 a3 fb ff ff    	jne    d032 <ecp_double_jac+0x42>
    d48f:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    d494:	4c 89 ef             	mov    %r13,%rdi
    d497:	4c 89 c6             	mov    %r8,%rsi
    d49a:	e8 a1 f0 ff ff       	callq  c540 <mbedtls_mpi_shift_l_mod.constprop.0>
    d49f:	85 c0                	test   %eax,%eax
    d4a1:	0f 85 8b fb ff ff    	jne    d032 <ecp_double_jac+0x42>
    d4a7:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    d4ac:	4c 89 f6             	mov    %r14,%rsi
    d4af:	48 89 df             	mov    %rbx,%rdi
    d4b2:	e8 69 79 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    d4b7:	85 c0                	test   %eax,%eax
    d4b9:	0f 85 73 fb ff ff    	jne    d032 <ecp_double_jac+0x42>
    d4bf:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    d4c3:	4c 89 fe             	mov    %r15,%rsi
    d4c6:	e8 55 79 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    d4cb:	85 c0                	test   %eax,%eax
    d4cd:	0f 85 5f fb ff ff    	jne    d032 <ecp_double_jac+0x42>
    d4d3:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    d4d8:	48 83 c3 30          	add    $0x30,%rbx
    d4dc:	48 83 c4 28          	add    $0x28,%rsp
    d4e0:	48 89 df             	mov    %rbx,%rdi
    d4e3:	5b                   	pop    %rbx
    d4e4:	5d                   	pop    %rbp
    d4e5:	4c 89 c6             	mov    %r8,%rsi
    d4e8:	41 5c                	pop    %r12
    d4ea:	41 5d                	pop    %r13
    d4ec:	41 5e                	pop    %r14
    d4ee:	41 5f                	pop    %r15
    d4f0:	e9 2b 79 ff ff       	jmpq   4e20 <mbedtls_mpi_copy>
    d4f5:	0f 1f 00             	nopl   (%rax)
    d4f8:	48 8d 75 30          	lea    0x30(%rbp),%rsi
    d4fc:	4c 89 ff             	mov    %r15,%rdi
    d4ff:	48 89 f2             	mov    %rsi,%rdx
    d502:	e8 a9 84 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d507:	85 c0                	test   %eax,%eax
    d509:	0f 85 23 fb ff ff    	jne    d032 <ecp_double_jac+0x42>
    d50f:	4c 89 ee             	mov    %r13,%rsi
    d512:	4c 89 ff             	mov    %r15,%rdi
    d515:	e8 b6 ec ff ff       	callq  c1d0 <ecp_modp>
    d51a:	85 c0                	test   %eax,%eax
    d51c:	0f 85 10 fb ff ff    	jne    d032 <ecp_double_jac+0x42>
    d522:	49 8d 4c 24 30       	lea    0x30(%r12),%rcx
    d527:	4c 89 fa             	mov    %r15,%rdx
    d52a:	4c 89 fe             	mov    %r15,%rsi
    d52d:	48 83 05 03 0c 02 00 	addq   $0x1,0x20c03(%rip)        # 2e138 <mul_count>
    d534:	01 
    d535:	48 89 cf             	mov    %rcx,%rdi
    d538:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    d53d:	e8 6e 84 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d542:	85 c0                	test   %eax,%eax
    d544:	0f 85 e8 fa ff ff    	jne    d032 <ecp_double_jac+0x42>
    d54a:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    d54f:	4c 89 ee             	mov    %r13,%rsi
    d552:	48 89 cf             	mov    %rcx,%rdi
    d555:	e8 76 ec ff ff       	callq  c1d0 <ecp_modp>
    d55a:	85 c0                	test   %eax,%eax
    d55c:	0f 85 d0 fa ff ff    	jne    d032 <ecp_double_jac+0x42>
    d562:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    d567:	4c 89 f2             	mov    %r14,%rdx
    d56a:	4c 89 ff             	mov    %r15,%rdi
    d56d:	48 83 05 c3 0b 02 00 	addq   $0x1,0x20bc3(%rip)        # 2e138 <mul_count>
    d574:	01 
    d575:	48 89 ce             	mov    %rcx,%rsi
    d578:	e8 33 84 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    d57d:	85 c0                	test   %eax,%eax
    d57f:	0f 85 ad fa ff ff    	jne    d032 <ecp_double_jac+0x42>
    d585:	4c 89 ee             	mov    %r13,%rsi
    d588:	4c 89 ff             	mov    %r15,%rdi
    d58b:	e8 40 ec ff ff       	callq  c1d0 <ecp_modp>
    d590:	85 c0                	test   %eax,%eax
    d592:	0f 85 9a fa ff ff    	jne    d032 <ecp_double_jac+0x42>
    d598:	4c 89 fa             	mov    %r15,%rdx
    d59b:	4c 89 e6             	mov    %r12,%rsi
    d59e:	4c 89 e7             	mov    %r12,%rdi
    d5a1:	48 83 05 8f 0b 02 00 	addq   $0x1,0x20b8f(%rip)        # 2e138 <mul_count>
    d5a8:	01 
    d5a9:	e8 02 83 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    d5ae:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    d5b3:	85 c0                	test   %eax,%eax
    d5b5:	0f 85 77 fa ff ff    	jne    d032 <ecp_double_jac+0x42>
    d5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d5c0:	48 89 de             	mov    %rbx,%rsi
    d5c3:	4c 89 e7             	mov    %r12,%rdi
    d5c6:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    d5cb:	e8 a0 7e ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    d5d0:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    d5d5:	85 c0                	test   %eax,%eax
    d5d7:	0f 88 df fa ff ff    	js     d0bc <ecp_double_jac+0xcc>
    d5dd:	48 89 da             	mov    %rbx,%rdx
    d5e0:	4c 89 e6             	mov    %r12,%rsi
    d5e3:	4c 89 e7             	mov    %r12,%rdi
    d5e6:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    d5eb:	e8 e0 80 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    d5f0:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    d5f5:	85 c0                	test   %eax,%eax
    d5f7:	74 c7                	je     d5c0 <ecp_double_jac+0x5d0>
    d5f9:	e9 34 fa ff ff       	jmpq   d032 <ecp_double_jac+0x42>
    d5fe:	66 90                	xchg   %ax,%ax

000000000000d600 <mbedtls_ecp_curve_list>:
    d600:	f3 0f 1e fa          	endbr64 
    d604:	48 8d 05 15 c2 01 00 	lea    0x1c215(%rip),%rax        # 29820 <ecp_supported_curves>
    d60b:	c3                   	retq   
    d60c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d610 <mbedtls_ecp_grp_id_list>:
    d610:	f3 0f 1e fa          	endbr64 
    d614:	8b 05 c6 0a 02 00    	mov    0x20ac6(%rip),%eax        # 2e0e0 <init_done.4245>
    d61a:	85 c0                	test   %eax,%eax
    d61c:	75 4e                	jne    d66c <mbedtls_ecp_grp_id_list+0x5c>
    d61e:	b9 08 00 00 00       	mov    $0x8,%ecx
    d623:	48 8d 15 f6 c1 01 00 	lea    0x1c1f6(%rip),%rdx        # 29820 <ecp_supported_curves>
    d62a:	31 c0                	xor    %eax,%eax
    d62c:	be 05 00 00 00       	mov    $0x5,%esi
    d631:	48 8d 3d c4 0a 02 00 	lea    0x20ac4(%rip),%rdi        # 2e0fc <init_done.4245+0x1c>
    d638:	eb 0b                	jmp    d645 <mbedtls_ecp_grp_id_list+0x35>
    d63a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d640:	89 ce                	mov    %ecx,%esi
    d642:	8b 4a 10             	mov    0x10(%rdx),%ecx
    d645:	48 83 c0 01          	add    $0x1,%rax
    d649:	48 83 c2 10          	add    $0x10,%rdx
    d64d:	89 34 87             	mov    %esi,(%rdi,%rax,4)
    d650:	85 c9                	test   %ecx,%ecx
    d652:	75 ec                	jne    d640 <mbedtls_ecp_grp_id_list+0x30>
    d654:	48 8d 15 a5 0a 02 00 	lea    0x20aa5(%rip),%rdx        # 2e100 <ecp_supported_grp_id>
    d65b:	c7 05 7b 0a 02 00 01 	movl   $0x1,0x20a7b(%rip)        # 2e0e0 <init_done.4245>
    d662:	00 00 00 
    d665:	c7 04 82 00 00 00 00 	movl   $0x0,(%rdx,%rax,4)
    d66c:	48 8d 05 8d 0a 02 00 	lea    0x20a8d(%rip),%rax        # 2e100 <ecp_supported_grp_id>
    d673:	c3                   	retq   
    d674:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d67b:	00 00 00 00 
    d67f:	90                   	nop

000000000000d680 <mbedtls_ecp_curve_info_from_grp_id>:
    d680:	f3 0f 1e fa          	endbr64 
    d684:	48 8d 05 95 c1 01 00 	lea    0x1c195(%rip),%rax        # 29820 <ecp_supported_curves>
    d68b:	ba 05 00 00 00       	mov    $0x5,%edx
    d690:	eb 11                	jmp    d6a3 <mbedtls_ecp_curve_info_from_grp_id+0x23>
    d692:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d698:	8b 50 10             	mov    0x10(%rax),%edx
    d69b:	48 83 c0 10          	add    $0x10,%rax
    d69f:	85 d2                	test   %edx,%edx
    d6a1:	74 0d                	je     d6b0 <mbedtls_ecp_curve_info_from_grp_id+0x30>
    d6a3:	39 d7                	cmp    %edx,%edi
    d6a5:	75 f1                	jne    d698 <mbedtls_ecp_curve_info_from_grp_id+0x18>
    d6a7:	c3                   	retq   
    d6a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d6af:	00 
    d6b0:	31 c0                	xor    %eax,%eax
    d6b2:	c3                   	retq   
    d6b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d6ba:	00 00 00 00 
    d6be:	66 90                	xchg   %ax,%ax

000000000000d6c0 <mbedtls_ecp_curve_info_from_tls_id>:
    d6c0:	f3 0f 1e fa          	endbr64 
    d6c4:	ba 19 00 00 00       	mov    $0x19,%edx
    d6c9:	48 8d 05 50 c1 01 00 	lea    0x1c150(%rip),%rax        # 29820 <ecp_supported_curves>
    d6d0:	eb 15                	jmp    d6e7 <mbedtls_ecp_curve_info_from_tls_id+0x27>
    d6d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d6d8:	8b 50 10             	mov    0x10(%rax),%edx
    d6db:	48 83 c0 10          	add    $0x10,%rax
    d6df:	85 d2                	test   %edx,%edx
    d6e1:	74 0d                	je     d6f0 <mbedtls_ecp_curve_info_from_tls_id+0x30>
    d6e3:	0f b7 50 04          	movzwl 0x4(%rax),%edx
    d6e7:	66 39 d7             	cmp    %dx,%di
    d6ea:	75 ec                	jne    d6d8 <mbedtls_ecp_curve_info_from_tls_id+0x18>
    d6ec:	c3                   	retq   
    d6ed:	0f 1f 00             	nopl   (%rax)
    d6f0:	31 c0                	xor    %eax,%eax
    d6f2:	c3                   	retq   
    d6f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d6fa:	00 00 00 00 
    d6fe:	66 90                	xchg   %ax,%ax

000000000000d700 <mbedtls_ecp_curve_info_from_name>:
    d700:	f3 0f 1e fa          	endbr64 
    d704:	41 54                	push   %r12
    d706:	53                   	push   %rbx
    d707:	48 83 ec 08          	sub    $0x8,%rsp
    d70b:	48 85 ff             	test   %rdi,%rdi
    d70e:	74 48                	je     d758 <mbedtls_ecp_curve_info_from_name+0x58>
    d710:	48 89 fb             	mov    %rdi,%rbx
    d713:	4c 8d 25 06 c1 01 00 	lea    0x1c106(%rip),%r12        # 29820 <ecp_supported_curves>
    d71a:	48 8d 3d df e0 00 00 	lea    0xe0df(%rip),%rdi        # 1b800 <small_prime+0x2a0>
    d721:	eb 17                	jmp    d73a <mbedtls_ecp_curve_info_from_name+0x3a>
    d723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d728:	41 8b 44 24 10       	mov    0x10(%r12),%eax
    d72d:	49 83 c4 10          	add    $0x10,%r12
    d731:	85 c0                	test   %eax,%eax
    d733:	74 23                	je     d758 <mbedtls_ecp_curve_info_from_name+0x58>
    d735:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    d73a:	48 89 de             	mov    %rbx,%rsi
    d73d:	e8 9e 6b ff ff       	callq  42e0 <strcmp@plt>
    d742:	85 c0                	test   %eax,%eax
    d744:	75 e2                	jne    d728 <mbedtls_ecp_curve_info_from_name+0x28>
    d746:	48 83 c4 08          	add    $0x8,%rsp
    d74a:	4c 89 e0             	mov    %r12,%rax
    d74d:	5b                   	pop    %rbx
    d74e:	41 5c                	pop    %r12
    d750:	c3                   	retq   
    d751:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d758:	45 31 e4             	xor    %r12d,%r12d
    d75b:	48 83 c4 08          	add    $0x8,%rsp
    d75f:	4c 89 e0             	mov    %r12,%rax
    d762:	5b                   	pop    %rbx
    d763:	41 5c                	pop    %r12
    d765:	c3                   	retq   
    d766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d76d:	00 00 00 

000000000000d770 <mbedtls_ecp_get_type>:
    d770:	f3 0f 1e fa          	endbr64 
    d774:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    d779:	74 15                	je     d790 <mbedtls_ecp_get_type+0x20>
    d77b:	31 c0                	xor    %eax,%eax
    d77d:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    d782:	0f 94 c0             	sete   %al
    d785:	83 c0 01             	add    $0x1,%eax
    d788:	c3                   	retq   
    d789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d790:	31 c0                	xor    %eax,%eax
    d792:	c3                   	retq   
    d793:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d79a:	00 00 00 00 
    d79e:	66 90                	xchg   %ax,%ax

000000000000d7a0 <mbedtls_ecp_point_init>:
    d7a0:	e9 0b 65 02 00       	jmpq   33cb0 <mbedtls_ecp_point_init.instr.bb_d7a0>
    d7a5:	48 89 fb             	mov    %rdi,%rbx
    d7a8:	e8 c3 73 ff ff       	callq  4b70 <mbedtls_mpi_init>
    d7ad:	e9 15 65 02 00       	jmpq   33cc7 <instr.bb_d7ad>
    d7b2:	ba 73 ff ff e9       	mov    $0xe9ffff73,%edx
    d7b7:	15 65 02 00 e9       	adc    $0xe9000265,%eax
    d7bc:	b0 73                	mov    $0x73,%al
    d7be:	ff                   	(bad)  
    d7bf:	ff                   	.byte 0xff

000000000000d7c0 <mbedtls_ecp_group_init>:
    d7c0:	e9 15 65 02 00       	jmpq   33cda <mbedtls_ecp_group_init.instr.bb_d7c0>
    d7c5:	48 89 fb             	mov    %rdi,%rbx
    d7c8:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    d7cc:	c7 47 f8 00 00 00 00 	movl   $0x0,-0x8(%rdi)
    d7d3:	e8 98 73 ff ff       	callq  4b70 <mbedtls_mpi_init>
    d7d8:	e9 1f 65 02 00       	jmpq   33cfc <instr.bb_d7d8>
    d7dd:	8f                   	(bad)  
    d7de:	73 ff                	jae    d7df <mbedtls_ecp_group_init+0x1f>
    d7e0:	ff                   	(bad)  
    d7e1:	e9 1f 65 02 00       	jmpq   33d05 <instr.bb_d7e1>
    d7e6:	86 73 ff             	xchg   %dh,-0x1(%rbx)
    d7e9:	ff                   	(bad)  
    d7ea:	e9 1f 65 02 00       	jmpq   33d0e <instr.bb_d7ea>
    d7ef:	ad                   	lods   %ds:(%rsi),%eax
    d7f0:	ff                   	(bad)  
    d7f1:	ff                   	(bad)  
    d7f2:	ff                   	(bad)  
    d7f3:	e9 1f 65 02 00       	jmpq   33d17 <instr.bb_d7f3>
    d7f8:	00 00                	add    %al,(%rax)
    d7fa:	e8 71 73 ff ff       	callq  4b70 <mbedtls_mpi_init>
    d7ff:	e9 1f 65 02 00       	jmpq   33d23 <instr.bb_d7ff>
    d804:	00 00                	add    %al,(%rax)
    d806:	00 00                	add    %al,(%rax)
    d808:	00 00                	add    %al,(%rax)
    d80a:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
    d811:	00 00 00 00 
    d815:	c7 83 c0 00 00 00 00 	movl   $0x0,0xc0(%rbx)
    d81c:	00 00 00 
    d81f:	48 c7 83 c8 00 00 00 	movq   $0x0,0xc8(%rbx)
    d826:	00 00 00 00 
    d82a:	48 c7 83 d0 00 00 00 	movq   $0x0,0xd0(%rbx)
    d831:	00 00 00 00 
    d835:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
    d83c:	00 00 00 00 
    d840:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
    d847:	00 00 00 00 
    d84b:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
    d852:	00 00 00 00 
    d856:	48 c7 83 f0 00 00 00 	movq   $0x0,0xf0(%rbx)
    d85d:	00 00 00 00 
    d861:	5b                   	pop    %rbx
    d862:	c3                   	retq   
    d863:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d86a:	00 00 00 00 
    d86e:	66 90                	xchg   %ax,%ax

000000000000d870 <mbedtls_ecp_keypair_init>:
    d870:	f3 0f 1e fa          	endbr64 
    d874:	53                   	push   %rbx
    d875:	48 89 fb             	mov    %rdi,%rbx
    d878:	e8 43 ff ff ff       	callq  d7c0 <mbedtls_ecp_group_init>
    d87d:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
    d884:	e8 e7 72 ff ff       	callq  4b70 <mbedtls_mpi_init>
    d889:	48 8d bb 10 01 00 00 	lea    0x110(%rbx),%rdi
    d890:	5b                   	pop    %rbx
    d891:	e9 0a ff ff ff       	jmpq   d7a0 <mbedtls_ecp_point_init>
    d896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d89d:	00 00 00 

000000000000d8a0 <mbedtls_ecp_point_free>:
    d8a0:	e9 eb 64 02 00       	jmpq   33d90 <mbedtls_ecp_point_free.instr.bb_d8a0>
    d8a5:	85 ff                	test   %edi,%edi
    d8a7:	74 07                	je     d8b0 <mbedtls_ecp_point_free+0x10>
    d8a9:	e9 f1 64 02 00       	jmpq   33d9f <instr.bb_d8a9>
    d8ae:	66 90                	xchg   %ax,%ax
    d8b0:	c3                   	retq   
    d8b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d8b8:	00 00 00 00 
    d8bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d8c0 <mbedtls_ecp_group_free>:
    d8c0:	e9 eb 64 02 00       	jmpq   33db0 <mbedtls_ecp_group_free.instr.bb_d8c0>
    d8c5:	85 ff                	test   %edi,%edi
    d8c7:	0f 84 a3 00 00 00    	je     d970 <mbedtls_ecp_group_free+0xb0>
    d8cd:	e9 05 65 02 00       	jmpq   33dd7 <instr.bb_d8cd>
    d8d2:	48 83 ec 08          	sub    $0x8,%rsp
    d8d6:	83 bf c0 00 00 00 01 	cmpl   $0x1,0xc0(%rdi)
    d8dd:	75 69                	jne    d948 <mbedtls_ecp_group_free+0x88>
    d8df:	e9 09 65 02 00       	jmpq   33ded <instr.bb_d8df>
    d8e4:	00 00                	add    %al,(%rax)
    d8e6:	4d 85 c0             	test   %r8,%r8
    d8e9:	74 43                	je     d92e <mbedtls_ecp_group_free+0x6e>
    d8eb:	e9 0d 65 02 00       	jmpq   33dfd <instr.bb_d8eb>
    d8f0:	00 00                	add    %al,(%rax)
    d8f2:	00 74 39 e9          	add    %dh,-0x17(%rcx,%rdi,1)
    d8f6:	11 65 02             	adc    %esp,0x2(%rbp)
    d8f9:	00 84 00 00 00 00 00 	add    %al,0x0(%rax,%rax,1)
    d900:	48 8d 04 db          	lea    (%rbx,%rbx,8),%rax
    d904:	49 8d 3c c0          	lea    (%r8,%rax,8),%rdi
    d908:	48 85 ff             	test   %rdi,%rdi
    d90b:	74 0c                	je     d919 <mbedtls_ecp_group_free+0x59>
    d90d:	e8 0e ec ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
    d912:	4c 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%r8
    d919:	48 83 c3 01          	add    $0x1,%rbx
    d91d:	48 39 9d f0 00 00 00 	cmp    %rbx,0xf0(%rbp)
    d924:	77 da                	ja     d900 <mbedtls_ecp_group_free+0x40>
    d926:	4c 89 c7             	mov    %r8,%rdi
    d929:	e8 c2 68 ff ff       	callq  41f0 <free@plt>
    d92e:	48 83 c4 08          	add    $0x8,%rsp
    d932:	48 89 ef             	mov    %rbp,%rdi
    d935:	be f8 00 00 00       	mov    $0xf8,%esi
    d93a:	5b                   	pop    %rbx
    d93b:	5d                   	pop    %rbp
    d93c:	e9 2f 73 00 00       	jmpq   14c70 <mbedtls_platform_zeroize>
    d941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d948:	48 8d 7f 20          	lea    0x20(%rdi),%rdi
    d94c:	e8 3f 72 ff ff       	callq  4b90 <mbedtls_mpi_free>
    d951:	48 8d 7d 38          	lea    0x38(%rbp),%rdi
    d955:	e8 36 72 ff ff       	callq  4b90 <mbedtls_mpi_free>
    d95a:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    d95e:	e8 bd eb ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
    d963:	e9 77 ff ff ff       	jmpq   d8df <mbedtls_ecp_group_free+0x1f>
    d968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d96f:	00 
    d970:	c3                   	retq   
    d971:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d978:	00 00 00 00 
    d97c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d980 <mbedtls_ecp_keypair_free>:
    d980:	f3 0f 1e fa          	endbr64 
    d984:	48 85 ff             	test   %rdi,%rdi
    d987:	74 27                	je     d9b0 <mbedtls_ecp_keypair_free+0x30>
    d989:	53                   	push   %rbx
    d98a:	48 89 fb             	mov    %rdi,%rbx
    d98d:	e8 2e ff ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
    d992:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
    d999:	e8 f2 71 ff ff       	callq  4b90 <mbedtls_mpi_free>
    d99e:	48 8d bb 10 01 00 00 	lea    0x110(%rbx),%rdi
    d9a5:	5b                   	pop    %rbx
    d9a6:	e9 75 eb ff ff       	jmpq   c520 <mbedtls_ecp_point_free.part.0>
    d9ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d9b0:	c3                   	retq   
    d9b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d9b8:	00 00 00 00 
    d9bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d9c0 <mbedtls_ecp_copy>:
    d9c0:	e9 6b 64 02 00       	jmpq   33e30 <mbedtls_ecp_copy.instr.bb_d9c0>
    d9c5:	e9 c4 64 02 00       	jmpq   33e8e <instr.bb_d9d5>
    d9ca:	e9 db 64 02 00       	jmpq   33eaa <instr.bb_d9ed>
    d9cf:	08 e8                	or     %ch,%al
    d9d1:	4b 74 ff             	rex.WXB je d9d3 <mbedtls_ecp_copy+0x13>
    d9d4:	ff                   	(bad)  
    d9d5:	eb ee                	jmp    d9c5 <mbedtls_ecp_copy+0x5>
    d9d7:	74 07                	je     d9e0 <mbedtls_ecp_copy+0x20>
    d9d9:	e9 b8 64 02 00       	jmpq   33e96 <instr.bb_d9d9>
    d9de:	5d                   	pop    %rbp
    d9df:	c3                   	retq   
    d9e0:	e9 b8 64 02 00       	jmpq   33e9d <instr.bb_d9e0>
    d9e5:	8d 7b 18             	lea    0x18(%rbx),%edi
    d9e8:	e8 33 74 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    d9ed:	eb db                	jmp    d9ca <mbedtls_ecp_copy+0xa>
    d9ef:	75 e8                	jne    d9d9 <mbedtls_ecp_copy+0x19>
    d9f1:	e9 bc 64 02 00       	jmpq   33eb2 <instr.bb_d9f1>
    d9f6:	8d 75 30             	lea    0x30(%rbp),%esi
    d9f9:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    d9fd:	5b                   	pop    %rbx
    d9fe:	5d                   	pop    %rbp
    d9ff:	e9 1c 74 ff ff       	jmpq   4e20 <mbedtls_mpi_copy>
    da04:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    da0b:	00 00 00 00 
    da0f:	90                   	nop

000000000000da10 <mbedtls_ecp_group_copy>:
    da10:	f3 0f 1e fa          	endbr64 
    da14:	8b 36                	mov    (%rsi),%esi
    da16:	e9 95 46 00 00       	jmpq   120b0 <mbedtls_ecp_group_load>
    da1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000da20 <mbedtls_ecp_set_zero>:
    da20:	f3 0f 1e fa          	endbr64 
    da24:	53                   	push   %rbx
    da25:	be 01 00 00 00       	mov    $0x1,%esi
    da2a:	48 89 fb             	mov    %rdi,%rbx
    da2d:	e8 5e 75 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    da32:	85 c0                	test   %eax,%eax
    da34:	74 0a                	je     da40 <mbedtls_ecp_set_zero+0x20>
    da36:	5b                   	pop    %rbx
    da37:	c3                   	retq   
    da38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    da3f:	00 
    da40:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    da44:	be 01 00 00 00       	mov    $0x1,%esi
    da49:	e8 42 75 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    da4e:	85 c0                	test   %eax,%eax
    da50:	75 e4                	jne    da36 <mbedtls_ecp_set_zero+0x16>
    da52:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    da56:	31 f6                	xor    %esi,%esi
    da58:	5b                   	pop    %rbx
    da59:	e9 32 75 ff ff       	jmpq   4f90 <mbedtls_mpi_lset>
    da5e:	66 90                	xchg   %ax,%ax

000000000000da60 <ecp_add_mixed>:
    da60:	48 83 05 e0 06 02 00 	addq   $0x1,0x206e0(%rip)        # 2e148 <add_count>
    da67:	01 
    da68:	48 83 79 40 00       	cmpq   $0x0,0x40(%rcx)
    da6d:	0f 84 e3 03 00 00    	je     de56 <ecp_add_mixed+0x3f6>
    da73:	41 57                	push   %r15
    da75:	49 89 ff             	mov    %rdi,%r15
    da78:	41 56                	push   %r14
    da7a:	49 89 f6             	mov    %rsi,%r14
    da7d:	31 f6                	xor    %esi,%esi
    da7f:	41 55                	push   %r13
    da81:	49 89 d5             	mov    %rdx,%r13
    da84:	41 54                	push   %r12
    da86:	4d 89 c4             	mov    %r8,%r12
    da89:	55                   	push   %rbp
    da8a:	48 89 cd             	mov    %rcx,%rbp
    da8d:	53                   	push   %rbx
    da8e:	48 8d 5a 30          	lea    0x30(%rdx),%rbx
    da92:	48 89 df             	mov    %rbx,%rdi
    da95:	48 83 ec 18          	sub    $0x18,%rsp
    da99:	e8 c2 7a ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    da9e:	48 89 ee             	mov    %rbp,%rsi
    daa1:	85 c0                	test   %eax,%eax
    daa3:	0f 84 82 00 00 00    	je     db2b <ecp_add_mixed+0xcb>
    daa9:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    daad:	31 f6                	xor    %esi,%esi
    daaf:	48 89 3c 24          	mov    %rdi,(%rsp)
    dab3:	e8 a8 7a ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    dab8:	48 8b 3c 24          	mov    (%rsp),%rdi
    dabc:	85 c0                	test   %eax,%eax
    dabe:	74 68                	je     db28 <ecp_add_mixed+0xc8>
    dac0:	be 01 00 00 00       	mov    $0x1,%esi
    dac5:	e8 96 7a ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    daca:	85 c0                	test   %eax,%eax
    dacc:	0f 85 de 01 00 00    	jne    dcb0 <ecp_add_mixed+0x250>
    dad2:	48 89 da             	mov    %rbx,%rdx
    dad5:	48 89 de             	mov    %rbx,%rsi
    dad8:	4c 89 e7             	mov    %r12,%rdi
    dadb:	e8 d0 7e ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    dae0:	85 c0                	test   %eax,%eax
    dae2:	75 32                	jne    db16 <ecp_add_mixed+0xb6>
    dae4:	4c 89 fe             	mov    %r15,%rsi
    dae7:	4c 89 e7             	mov    %r12,%rdi
    daea:	e8 e1 e6 ff ff       	callq  c1d0 <ecp_modp>
    daef:	85 c0                	test   %eax,%eax
    daf1:	75 23                	jne    db16 <ecp_add_mixed+0xb6>
    daf3:	49 8d 44 24 18       	lea    0x18(%r12),%rax
    daf8:	48 89 da             	mov    %rbx,%rdx
    dafb:	4c 89 e6             	mov    %r12,%rsi
    dafe:	48 83 05 32 06 02 00 	addq   $0x1,0x20632(%rip)        # 2e138 <mul_count>
    db05:	01 
    db06:	48 89 c7             	mov    %rax,%rdi
    db09:	48 89 04 24          	mov    %rax,(%rsp)
    db0d:	e8 9e 7e ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    db12:	85 c0                	test   %eax,%eax
    db14:	74 32                	je     db48 <ecp_add_mixed+0xe8>
    db16:	48 83 c4 18          	add    $0x18,%rsp
    db1a:	5b                   	pop    %rbx
    db1b:	5d                   	pop    %rbp
    db1c:	41 5c                	pop    %r12
    db1e:	41 5d                	pop    %r13
    db20:	41 5e                	pop    %r14
    db22:	41 5f                	pop    %r15
    db24:	c3                   	retq   
    db25:	0f 1f 00             	nopl   (%rax)
    db28:	4c 89 ee             	mov    %r13,%rsi
    db2b:	48 83 c4 18          	add    $0x18,%rsp
    db2f:	4c 89 f7             	mov    %r14,%rdi
    db32:	5b                   	pop    %rbx
    db33:	5d                   	pop    %rbp
    db34:	41 5c                	pop    %r12
    db36:	41 5d                	pop    %r13
    db38:	41 5e                	pop    %r14
    db3a:	41 5f                	pop    %r15
    db3c:	e9 7f fe ff ff       	jmpq   d9c0 <mbedtls_ecp_copy>
    db41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    db48:	48 8b 3c 24          	mov    (%rsp),%rdi
    db4c:	4c 89 fe             	mov    %r15,%rsi
    db4f:	e8 7c e6 ff ff       	callq  c1d0 <ecp_modp>
    db54:	85 c0                	test   %eax,%eax
    db56:	75 be                	jne    db16 <ecp_add_mixed+0xb6>
    db58:	48 89 ea             	mov    %rbp,%rdx
    db5b:	4c 89 e6             	mov    %r12,%rsi
    db5e:	4c 89 e7             	mov    %r12,%rdi
    db61:	48 83 05 cf 05 02 00 	addq   $0x1,0x205cf(%rip)        # 2e138 <mul_count>
    db68:	01 
    db69:	e8 42 7e ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    db6e:	85 c0                	test   %eax,%eax
    db70:	75 a4                	jne    db16 <ecp_add_mixed+0xb6>
    db72:	4c 89 fe             	mov    %r15,%rsi
    db75:	4c 89 e7             	mov    %r12,%rdi
    db78:	e8 53 e6 ff ff       	callq  c1d0 <ecp_modp>
    db7d:	85 c0                	test   %eax,%eax
    db7f:	75 95                	jne    db16 <ecp_add_mixed+0xb6>
    db81:	48 8d 55 18          	lea    0x18(%rbp),%rdx
    db85:	48 8b 2c 24          	mov    (%rsp),%rbp
    db89:	48 83 05 a7 05 02 00 	addq   $0x1,0x205a7(%rip)        # 2e138 <mul_count>
    db90:	01 
    db91:	48 89 ee             	mov    %rbp,%rsi
    db94:	48 89 ef             	mov    %rbp,%rdi
    db97:	e8 14 7e ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    db9c:	85 c0                	test   %eax,%eax
    db9e:	0f 85 72 ff ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dba4:	4c 89 fe             	mov    %r15,%rsi
    dba7:	48 89 ef             	mov    %rbp,%rdi
    dbaa:	e8 21 e6 ff ff       	callq  c1d0 <ecp_modp>
    dbaf:	85 c0                	test   %eax,%eax
    dbb1:	0f 85 5f ff ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dbb7:	4c 89 ea             	mov    %r13,%rdx
    dbba:	4c 89 e6             	mov    %r12,%rsi
    dbbd:	49 8d 6f 08          	lea    0x8(%r15),%rbp
    dbc1:	4c 89 e7             	mov    %r12,%rdi
    dbc4:	48 83 05 6c 05 02 00 	addq   $0x1,0x2056c(%rip)        # 2e138 <mul_count>
    dbcb:	01 
    dbcc:	e8 ef 7c ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    dbd1:	85 c0                	test   %eax,%eax
    dbd3:	74 2f                	je     dc04 <ecp_add_mixed+0x1a4>
    dbd5:	e9 3c ff ff ff       	jmpq   db16 <ecp_add_mixed+0xb6>
    dbda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dbe0:	31 f6                	xor    %esi,%esi
    dbe2:	4c 89 e7             	mov    %r12,%rdi
    dbe5:	e8 76 79 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    dbea:	85 c0                	test   %eax,%eax
    dbec:	74 1e                	je     dc0c <ecp_add_mixed+0x1ac>
    dbee:	48 89 ea             	mov    %rbp,%rdx
    dbf1:	4c 89 e6             	mov    %r12,%rsi
    dbf4:	4c 89 e7             	mov    %r12,%rdi
    dbf7:	e8 b4 7c ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    dbfc:	85 c0                	test   %eax,%eax
    dbfe:	0f 85 12 ff ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dc04:	41 8b 14 24          	mov    (%r12),%edx
    dc08:	85 d2                	test   %edx,%edx
    dc0a:	78 d4                	js     dbe0 <ecp_add_mixed+0x180>
    dc0c:	48 8b 34 24          	mov    (%rsp),%rsi
    dc10:	49 8d 45 18          	lea    0x18(%r13),%rax
    dc14:	49 8d 6f 08          	lea    0x8(%r15),%rbp
    dc18:	48 89 c2             	mov    %rax,%rdx
    dc1b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    dc20:	48 89 f7             	mov    %rsi,%rdi
    dc23:	e8 98 7c ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    dc28:	85 c0                	test   %eax,%eax
    dc2a:	74 32                	je     dc5e <ecp_add_mixed+0x1fe>
    dc2c:	e9 e5 fe ff ff       	jmpq   db16 <ecp_add_mixed+0xb6>
    dc31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dc38:	48 8b 3c 24          	mov    (%rsp),%rdi
    dc3c:	31 f6                	xor    %esi,%esi
    dc3e:	e8 1d 79 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    dc43:	85 c0                	test   %eax,%eax
    dc45:	74 20                	je     dc67 <ecp_add_mixed+0x207>
    dc47:	48 8b 34 24          	mov    (%rsp),%rsi
    dc4b:	48 89 ea             	mov    %rbp,%rdx
    dc4e:	48 89 f7             	mov    %rsi,%rdi
    dc51:	e8 5a 7c ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    dc56:	85 c0                	test   %eax,%eax
    dc58:	0f 85 b8 fe ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dc5e:	41 8b 44 24 18       	mov    0x18(%r12),%eax
    dc63:	85 c0                	test   %eax,%eax
    dc65:	78 d1                	js     dc38 <ecp_add_mixed+0x1d8>
    dc67:	31 f6                	xor    %esi,%esi
    dc69:	4c 89 e7             	mov    %r12,%rdi
    dc6c:	e8 ef 78 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    dc71:	85 c0                	test   %eax,%eax
    dc73:	75 45                	jne    dcba <ecp_add_mixed+0x25a>
    dc75:	48 8b 3c 24          	mov    (%rsp),%rdi
    dc79:	31 f6                	xor    %esi,%esi
    dc7b:	e8 e0 78 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    dc80:	85 c0                	test   %eax,%eax
    dc82:	0f 85 b8 01 00 00    	jne    de40 <ecp_add_mixed+0x3e0>
    dc88:	48 83 c4 18          	add    $0x18,%rsp
    dc8c:	4c 89 e1             	mov    %r12,%rcx
    dc8f:	4c 89 ea             	mov    %r13,%rdx
    dc92:	4c 89 f6             	mov    %r14,%rsi
    dc95:	5b                   	pop    %rbx
    dc96:	4c 89 ff             	mov    %r15,%rdi
    dc99:	5d                   	pop    %rbp
    dc9a:	41 5c                	pop    %r12
    dc9c:	41 5d                	pop    %r13
    dc9e:	41 5e                	pop    %r14
    dca0:	41 5f                	pop    %r15
    dca2:	e9 49 f3 ff ff       	jmpq   cff0 <ecp_double_jac>
    dca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dcae:	00 00 
    dcb0:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    dcb5:	e9 5c fe ff ff       	jmpq   db16 <ecp_add_mixed+0xb6>
    dcba:	49 8d 6e 30          	lea    0x30(%r14),%rbp
    dcbe:	4c 89 e2             	mov    %r12,%rdx
    dcc1:	48 89 de             	mov    %rbx,%rsi
    dcc4:	48 89 ef             	mov    %rbp,%rdi
    dcc7:	e8 e4 7c ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    dccc:	85 c0                	test   %eax,%eax
    dcce:	0f 85 42 fe ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dcd4:	4c 89 fe             	mov    %r15,%rsi
    dcd7:	48 89 ef             	mov    %rbp,%rdi
    dcda:	e8 f1 e4 ff ff       	callq  c1d0 <ecp_modp>
    dcdf:	85 c0                	test   %eax,%eax
    dce1:	0f 85 2f fe ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dce7:	49 8d 5c 24 30       	lea    0x30(%r12),%rbx
    dcec:	4c 89 e2             	mov    %r12,%rdx
    dcef:	4c 89 e6             	mov    %r12,%rsi
    dcf2:	48 83 05 3e 04 02 00 	addq   $0x1,0x2043e(%rip)        # 2e138 <mul_count>
    dcf9:	01 
    dcfa:	48 89 df             	mov    %rbx,%rdi
    dcfd:	e8 ae 7c ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    dd02:	85 c0                	test   %eax,%eax
    dd04:	0f 85 0c fe ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dd0a:	4c 89 fe             	mov    %r15,%rsi
    dd0d:	48 89 df             	mov    %rbx,%rdi
    dd10:	e8 bb e4 ff ff       	callq  c1d0 <ecp_modp>
    dd15:	85 c0                	test   %eax,%eax
    dd17:	0f 85 f9 fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dd1d:	49 8d 6c 24 48       	lea    0x48(%r12),%rbp
    dd22:	4c 89 e1             	mov    %r12,%rcx
    dd25:	48 89 da             	mov    %rbx,%rdx
    dd28:	4c 89 ff             	mov    %r15,%rdi
    dd2b:	48 89 ee             	mov    %rbp,%rsi
    dd2e:	48 83 05 02 04 02 00 	addq   $0x1,0x20402(%rip)        # 2e138 <mul_count>
    dd35:	01 
    dd36:	e8 b5 e6 ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    dd3b:	85 c0                	test   %eax,%eax
    dd3d:	0f 85 d3 fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dd43:	4c 89 e9             	mov    %r13,%rcx
    dd46:	48 89 da             	mov    %rbx,%rdx
    dd49:	48 89 de             	mov    %rbx,%rsi
    dd4c:	4c 89 ff             	mov    %r15,%rdi
    dd4f:	e8 9c e6 ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    dd54:	85 c0                	test   %eax,%eax
    dd56:	0f 85 ba fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dd5c:	48 89 de             	mov    %rbx,%rsi
    dd5f:	4c 89 e7             	mov    %r12,%rdi
    dd62:	e8 b9 70 ff ff       	callq  4e20 <mbedtls_mpi_copy>
    dd67:	85 c0                	test   %eax,%eax
    dd69:	0f 85 a7 fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dd6f:	4c 89 e6             	mov    %r12,%rsi
    dd72:	4c 89 ff             	mov    %r15,%rdi
    dd75:	e8 c6 e7 ff ff       	callq  c540 <mbedtls_mpi_shift_l_mod.constprop.0>
    dd7a:	85 c0                	test   %eax,%eax
    dd7c:	0f 85 94 fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dd82:	4c 8b 2c 24          	mov    (%rsp),%r13
    dd86:	4c 89 f6             	mov    %r14,%rsi
    dd89:	4c 89 ff             	mov    %r15,%rdi
    dd8c:	4c 89 e9             	mov    %r13,%rcx
    dd8f:	4c 89 ea             	mov    %r13,%rdx
    dd92:	e8 59 e6 ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    dd97:	85 c0                	test   %eax,%eax
    dd99:	0f 85 77 fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    dd9f:	4c 89 e1             	mov    %r12,%rcx
    dda2:	4c 89 f2             	mov    %r14,%rdx
    dda5:	4c 89 f6             	mov    %r14,%rsi
    dda8:	4c 89 ff             	mov    %r15,%rdi
    ddab:	e8 d0 e5 ff ff       	callq  c380 <mbedtls_mpi_sub_mod>
    ddb0:	85 c0                	test   %eax,%eax
    ddb2:	0f 85 5e fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    ddb8:	48 89 e9             	mov    %rbp,%rcx
    ddbb:	4c 89 f2             	mov    %r14,%rdx
    ddbe:	4c 89 f6             	mov    %r14,%rsi
    ddc1:	4c 89 ff             	mov    %r15,%rdi
    ddc4:	e8 b7 e5 ff ff       	callq  c380 <mbedtls_mpi_sub_mod>
    ddc9:	85 c0                	test   %eax,%eax
    ddcb:	0f 85 45 fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    ddd1:	4c 89 f1             	mov    %r14,%rcx
    ddd4:	48 89 da             	mov    %rbx,%rdx
    ddd7:	48 89 de             	mov    %rbx,%rsi
    ddda:	4c 89 ff             	mov    %r15,%rdi
    dddd:	e8 9e e5 ff ff       	callq  c380 <mbedtls_mpi_sub_mod>
    dde2:	85 c0                	test   %eax,%eax
    dde4:	0f 85 2c fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    ddea:	4c 89 e9             	mov    %r13,%rcx
    dded:	48 89 da             	mov    %rbx,%rdx
    ddf0:	48 89 de             	mov    %rbx,%rsi
    ddf3:	4c 89 ff             	mov    %r15,%rdi
    ddf6:	e8 f5 e5 ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    ddfb:	85 c0                	test   %eax,%eax
    ddfd:	0f 85 13 fd ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    de03:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    de08:	48 89 ea             	mov    %rbp,%rdx
    de0b:	48 89 ee             	mov    %rbp,%rsi
    de0e:	4c 89 ff             	mov    %r15,%rdi
    de11:	e8 da e5 ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    de16:	85 c0                	test   %eax,%eax
    de18:	0f 85 f8 fc ff ff    	jne    db16 <ecp_add_mixed+0xb6>
    de1e:	48 83 c4 18          	add    $0x18,%rsp
    de22:	49 8d 76 18          	lea    0x18(%r14),%rsi
    de26:	48 89 e9             	mov    %rbp,%rcx
    de29:	48 89 da             	mov    %rbx,%rdx
    de2c:	4c 89 ff             	mov    %r15,%rdi
    de2f:	5b                   	pop    %rbx
    de30:	5d                   	pop    %rbp
    de31:	41 5c                	pop    %r12
    de33:	41 5d                	pop    %r13
    de35:	41 5e                	pop    %r14
    de37:	41 5f                	pop    %r15
    de39:	e9 42 e5 ff ff       	jmpq   c380 <mbedtls_mpi_sub_mod>
    de3e:	66 90                	xchg   %ax,%ax
    de40:	48 83 c4 18          	add    $0x18,%rsp
    de44:	4c 89 f7             	mov    %r14,%rdi
    de47:	5b                   	pop    %rbx
    de48:	5d                   	pop    %rbp
    de49:	41 5c                	pop    %r12
    de4b:	41 5d                	pop    %r13
    de4d:	41 5e                	pop    %r14
    de4f:	41 5f                	pop    %r15
    de51:	e9 ca fb ff ff       	jmpq   da20 <mbedtls_ecp_set_zero>
    de56:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    de5b:	c3                   	retq   
    de5c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000de60 <ecp_mul_comb_after_precomp>:
    de60:	41 57                	push   %r15
    de62:	41 56                	push   %r14
    de64:	49 89 f6             	mov    %rsi,%r14
    de67:	41 55                	push   %r13
    de69:	49 89 d5             	mov    %rdx,%r13
    de6c:	41 54                	push   %r12
    de6e:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    de74:	55                   	push   %rbp
    de75:	53                   	push   %rbx
    de76:	48 89 fb             	mov    %rdi,%rbx
    de79:	48 81 c3 98 00 00 00 	add    $0x98,%rbx
    de80:	48 81 ec 38 02 00 00 	sub    $0x238,%rsp
    de87:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    de8c:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
    de91:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
    de96:	48 8b 84 24 78 02 00 	mov    0x278(%rsp),%rax
    de9d:	00 
    de9e:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
    dea3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    dea8:	48 8b 84 24 80 02 00 	mov    0x280(%rsp),%rax
    deaf:	00 
    deb0:	44 88 4c 24 30       	mov    %r9b,0x30(%rsp)
    deb5:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    deba:	48 89 ef             	mov    %rbp,%rdi
    debd:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    dec2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dec9:	00 00 
    decb:	48 89 84 24 28 02 00 	mov    %rax,0x228(%rsp)
    ded2:	00 
    ded3:	31 c0                	xor    %eax,%eax
    ded5:	e8 96 6c ff ff       	callq  4b70 <mbedtls_mpi_init>
    deda:	4c 89 ff             	mov    %r15,%rdi
    dedd:	e8 8e 6c ff ff       	callq  4b70 <mbedtls_mpi_init>
    dee2:	31 f6                	xor    %esi,%esi
    dee4:	48 89 df             	mov    %rbx,%rdi
    dee7:	e8 24 71 ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    deec:	83 f8 01             	cmp    $0x1,%eax
    deef:	75 30                	jne    df21 <ecp_mul_comb_after_precomp+0xc1>
    def1:	31 f6                	xor    %esi,%esi
    def3:	4c 89 ef             	mov    %r13,%rdi
    def6:	e8 15 71 ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    defb:	4c 89 ee             	mov    %r13,%rsi
    defe:	48 89 ef             	mov    %rbp,%rdi
    df01:	89 44 24 08          	mov    %eax,0x8(%rsp)
    df05:	e8 16 6f ff ff       	callq  4e20 <mbedtls_mpi_copy>
    df0a:	41 89 c4             	mov    %eax,%r12d
    df0d:	85 c0                	test   %eax,%eax
    df0f:	74 3f                	je     df50 <ecp_mul_comb_after_precomp+0xf0>
    df11:	4c 89 ff             	mov    %r15,%rdi
    df14:	e8 77 6c ff ff       	callq  4b90 <mbedtls_mpi_free>
    df19:	48 89 ef             	mov    %rbp,%rdi
    df1c:	e8 6f 6c ff ff       	callq  4b90 <mbedtls_mpi_free>
    df21:	48 8b 84 24 28 02 00 	mov    0x228(%rsp),%rax
    df28:	00 
    df29:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    df30:	00 00 
    df32:	0f 85 f0 02 00 00    	jne    e228 <ecp_mul_comb_after_precomp+0x3c8>
    df38:	48 81 c4 38 02 00 00 	add    $0x238,%rsp
    df3f:	44 89 e0             	mov    %r12d,%eax
    df42:	5b                   	pop    %rbx
    df43:	5d                   	pop    %rbp
    df44:	41 5c                	pop    %r12
    df46:	41 5d                	pop    %r13
    df48:	41 5e                	pop    %r14
    df4a:	41 5f                	pop    %r15
    df4c:	c3                   	retq   
    df4d:	0f 1f 00             	nopl   (%rax)
    df50:	4c 89 ea             	mov    %r13,%rdx
    df53:	48 89 de             	mov    %rbx,%rsi
    df56:	4c 89 ff             	mov    %r15,%rdi
    df59:	e8 62 79 ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    df5e:	41 89 c4             	mov    %eax,%r12d
    df61:	85 c0                	test   %eax,%eax
    df63:	75 ac                	jne    df11 <ecp_mul_comb_after_precomp+0xb1>
    df65:	8b 54 24 08          	mov    0x8(%rsp),%edx
    df69:	31 c0                	xor    %eax,%eax
    df6b:	4c 89 fe             	mov    %r15,%rsi
    df6e:	48 89 ef             	mov    %rbp,%rdi
    df71:	85 d2                	test   %edx,%edx
    df73:	0f 94 c0             	sete   %al
    df76:	89 c2                	mov    %eax,%edx
    df78:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    df7c:	e8 4f d6 ff ff       	callq  b5d0 <mbedtls_mpi_safe_cond_assign>
    df81:	41 89 c4             	mov    %eax,%r12d
    df84:	85 c0                	test   %eax,%eax
    df86:	75 89                	jne    df11 <ecp_mul_comb_after_precomp+0xb1>
    df88:	48 8b 84 24 70 02 00 	mov    0x270(%rsp),%rax
    df8f:	00 
    df90:	48 8d 9c 24 20 01 00 	lea    0x120(%rsp),%rbx
    df97:	00 
    df98:	31 f6                	xor    %esi,%esi
    df9a:	b9 06 01 00 00       	mov    $0x106,%ecx
    df9f:	48 89 df             	mov    %rbx,%rdi
    dfa2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    dfa7:	48 8d 50 01          	lea    0x1(%rax),%rdx
    dfab:	e8 d0 63 ff ff       	callq  4380 <__memset_chk@plt>
    dfb0:	48 83 bc 24 70 02 00 	cmpq   $0x0,0x270(%rsp)
    dfb7:	00 00 
    dfb9:	0f 84 c2 00 00 00    	je     e081 <ecp_mul_comb_after_precomp+0x221>
    dfbf:	0f b6 44 24 30       	movzbl 0x30(%rsp),%eax
    dfc4:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
    dfc9:	45 31 e4             	xor    %r12d,%r12d
    dfcc:	4c 8b ac 24 70 02 00 	mov    0x270(%rsp),%r13
    dfd3:	00 
    dfd4:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
    dfd9:	4d 89 e6             	mov    %r12,%r14
    dfdc:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    dfe1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dfe8:	4d 89 f4             	mov    %r14,%r12
    dfeb:	45 31 ff             	xor    %r15d,%r15d
    dfee:	66 90                	xchg   %ax,%ax
    dff0:	4c 89 e6             	mov    %r12,%rsi
    dff3:	48 89 ef             	mov    %rbp,%rdi
    dff6:	4d 01 ec             	add    %r13,%r12
    dff9:	e8 12 70 ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    dffe:	44 89 f9             	mov    %r15d,%ecx
    e001:	49 83 c7 01          	add    $0x1,%r15
    e005:	d3 e0                	shl    %cl,%eax
    e007:	42 08 04 33          	or     %al,(%rbx,%r14,1)
    e00b:	4c 3b 7c 24 30       	cmp    0x30(%rsp),%r15
    e010:	75 de                	jne    dff0 <ecp_mul_comb_after_precomp+0x190>
    e012:	49 83 c6 01          	add    $0x1,%r14
    e016:	4d 39 f5             	cmp    %r14,%r13
    e019:	75 cd                	jne    dfe8 <ecp_mul_comb_after_precomp+0x188>
    e01b:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    e020:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    e025:	31 c9                	xor    %ecx,%ecx
    e027:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    e02c:	4c 89 ce             	mov    %r9,%rsi
    e02f:	4c 03 8c 24 70 02 00 	add    0x270(%rsp),%r9
    e036:	00 
    e037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e03e:	00 00 
    e040:	44 0f b6 56 01       	movzbl 0x1(%rsi),%r10d
    e045:	44 0f b6 06          	movzbl (%rsi),%r8d
    e049:	48 83 c6 01          	add    $0x1,%rsi
    e04d:	44 89 d7             	mov    %r10d,%edi
    e050:	31 cf                	xor    %ecx,%edi
    e052:	44 21 d1             	and    %r10d,%ecx
    e055:	89 fa                	mov    %edi,%edx
    e057:	41 89 fb             	mov    %edi,%r11d
    e05a:	f7 d2                	not    %edx
    e05c:	83 e2 01             	and    $0x1,%edx
    e05f:	89 d0                	mov    %edx,%eax
    e061:	0f b6 d2             	movzbl %dl,%edx
    e064:	41 0f af c0          	imul   %r8d,%eax
    e068:	c1 e2 07             	shl    $0x7,%edx
    e06b:	44 09 c2             	or     %r8d,%edx
    e06e:	88 56 ff             	mov    %dl,-0x1(%rsi)
    e071:	31 c7                	xor    %eax,%edi
    e073:	41 21 c3             	and    %eax,%r11d
    e076:	40 88 3e             	mov    %dil,(%rsi)
    e079:	44 09 d9             	or     %r11d,%ecx
    e07c:	49 39 f1             	cmp    %rsi,%r9
    e07f:	75 bf                	jne    e040 <ecp_mul_comb_after_precomp+0x1e0>
    e081:	4c 89 ff             	mov    %r15,%rdi
    e084:	48 8d 9c 24 c0 00 00 	lea    0xc0(%rsp),%rbx
    e08b:	00 
    e08c:	e8 ff 6a ff ff       	callq  4b90 <mbedtls_mpi_free>
    e091:	48 89 ef             	mov    %rbp,%rdi
    e094:	48 89 dd             	mov    %rbx,%rbp
    e097:	e8 f4 6a ff ff       	callq  4b90 <mbedtls_mpi_free>
    e09c:	4c 89 ff             	mov    %r15,%rdi
    e09f:	44 0f b6 6c 24 38    	movzbl 0x38(%rsp),%r13d
    e0a5:	e8 f6 f6 ff ff       	callq  d7a0 <mbedtls_ecp_point_init>
    e0aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e0b0:	48 89 ef             	mov    %rbp,%rdi
    e0b3:	48 83 c5 18          	add    $0x18,%rbp
    e0b7:	e8 b4 6a ff ff       	callq  4b70 <mbedtls_mpi_init>
    e0bc:	48 3b 6c 24 08       	cmp    0x8(%rsp),%rbp
    e0c1:	75 ed                	jne    e0b0 <ecp_mul_comb_after_precomp+0x250>
    e0c3:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    e0c8:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    e0cd:	44 89 e9             	mov    %r13d,%ecx
    e0d0:	4c 89 f6             	mov    %r14,%rsi
    e0d3:	48 03 ac 24 70 02 00 	add    0x270(%rsp),%rbp
    e0da:	00 
    e0db:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e0e0:	44 0f b6 45 00       	movzbl 0x0(%rbp),%r8d
    e0e5:	e8 66 e3 ff ff       	callq  c450 <ecp_select_comb>
    e0ea:	41 89 c4             	mov    %eax,%r12d
    e0ed:	85 c0                	test   %eax,%eax
    e0ef:	0f 85 a3 00 00 00    	jne    e198 <ecp_mul_comb_after_precomp+0x338>
    e0f5:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    e0fa:	48 85 c0             	test   %rax,%rax
    e0fd:	74 1d                	je     e11c <ecp_mul_comb_after_precomp+0x2bc>
    e0ff:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    e104:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e109:	48 89 c2             	mov    %rax,%rdx
    e10c:	4c 89 f6             	mov    %r14,%rsi
    e10f:	e8 bc e7 ff ff       	callq  c8d0 <ecp_randomize_jac>
    e114:	85 c0                	test   %eax,%eax
    e116:	0f 85 04 01 00 00    	jne    e220 <ecp_mul_comb_after_precomp+0x3c0>
    e11c:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
    e121:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    e126:	eb 61                	jmp    e189 <ecp_mul_comb_after_precomp+0x329>
    e128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e12f:	00 
    e130:	48 89 d9             	mov    %rbx,%rcx
    e133:	4c 89 f2             	mov    %r14,%rdx
    e136:	4c 89 f6             	mov    %r14,%rsi
    e139:	4c 89 e7             	mov    %r12,%rdi
    e13c:	e8 af ee ff ff       	callq  cff0 <ecp_double_jac>
    e141:	85 c0                	test   %eax,%eax
    e143:	0f 85 d7 00 00 00    	jne    e220 <ecp_mul_comb_after_precomp+0x3c0>
    e149:	44 0f b6 45 ff       	movzbl -0x1(%rbp),%r8d
    e14e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    e153:	44 89 e9             	mov    %r13d,%ecx
    e156:	4c 89 fe             	mov    %r15,%rsi
    e159:	4c 89 e7             	mov    %r12,%rdi
    e15c:	e8 ef e2 ff ff       	callq  c450 <ecp_select_comb>
    e161:	85 c0                	test   %eax,%eax
    e163:	0f 85 b7 00 00 00    	jne    e220 <ecp_mul_comb_after_precomp+0x3c0>
    e169:	49 89 d8             	mov    %rbx,%r8
    e16c:	4c 89 f9             	mov    %r15,%rcx
    e16f:	4c 89 f2             	mov    %r14,%rdx
    e172:	4c 89 f6             	mov    %r14,%rsi
    e175:	4c 89 e7             	mov    %r12,%rdi
    e178:	48 83 ed 01          	sub    $0x1,%rbp
    e17c:	e8 df f8 ff ff       	callq  da60 <ecp_add_mixed>
    e181:	85 c0                	test   %eax,%eax
    e183:	0f 85 97 00 00 00    	jne    e220 <ecp_mul_comb_after_precomp+0x3c0>
    e189:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
    e18e:	75 a0                	jne    e130 <ecp_mul_comb_after_precomp+0x2d0>
    e190:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    e195:	0f 1f 00             	nopl   (%rax)
    e198:	4c 89 ff             	mov    %r15,%rdi
    e19b:	e8 80 e3 ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
    e1a0:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    e1a5:	0f 1f 00             	nopl   (%rax)
    e1a8:	48 89 df             	mov    %rbx,%rdi
    e1ab:	48 83 c3 18          	add    $0x18,%rbx
    e1af:	e8 dc 69 ff ff       	callq  4b90 <mbedtls_mpi_free>
    e1b4:	48 39 eb             	cmp    %rbp,%rbx
    e1b7:	75 ef                	jne    e1a8 <ecp_mul_comb_after_precomp+0x348>
    e1b9:	45 85 e4             	test   %r12d,%r12d
    e1bc:	0f 85 5f fd ff ff    	jne    df21 <ecp_mul_comb_after_precomp+0xc1>
    e1c2:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
    e1c6:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e1cb:	4c 89 f6             	mov    %r14,%rsi
    e1ce:	e8 0d e1 ff ff       	callq  c2e0 <ecp_safe_invert_jac>
    e1d3:	41 89 c4             	mov    %eax,%r12d
    e1d6:	85 c0                	test   %eax,%eax
    e1d8:	0f 85 43 fd ff ff    	jne    df21 <ecp_mul_comb_after_precomp+0xc1>
    e1de:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    e1e4:	74 22                	je     e208 <ecp_mul_comb_after_precomp+0x3a8>
    e1e6:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    e1eb:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    e1f0:	4c 89 f6             	mov    %r14,%rsi
    e1f3:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e1f8:	e8 d3 e6 ff ff       	callq  c8d0 <ecp_randomize_jac>
    e1fd:	41 89 c4             	mov    %eax,%r12d
    e200:	85 c0                	test   %eax,%eax
    e202:	0f 85 19 fd ff ff    	jne    df21 <ecp_mul_comb_after_precomp+0xc1>
    e208:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e20d:	4c 89 f6             	mov    %r14,%rsi
    e210:	e8 7b e8 ff ff       	callq  ca90 <ecp_normalize_jac>
    e215:	41 89 c4             	mov    %eax,%r12d
    e218:	e9 04 fd ff ff       	jmpq   df21 <ecp_mul_comb_after_precomp+0xc1>
    e21d:	0f 1f 00             	nopl   (%rax)
    e220:	41 89 c4             	mov    %eax,%r12d
    e223:	e9 70 ff ff ff       	jmpq   e198 <ecp_mul_comb_after_precomp+0x338>
    e228:	e8 43 60 ff ff       	callq  4270 <__stack_chk_fail@plt>
    e22d:	0f 1f 00             	nopl   (%rax)

000000000000e230 <mbedtls_ecp_is_zero>:
    e230:	e9 9b 5c 02 00       	jmpq   33ed0 <mbedtls_ecp_is_zero.instr.bb_e230>
    e235:	83 ec 08             	sub    $0x8,%esp
    e238:	48 83 c7 30          	add    $0x30,%rdi
    e23c:	31 f6                	xor    %esi,%esi
    e23e:	e8 1d 73 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    e243:	e9 a5 5c 02 00       	jmpq   33eed <instr.bb_e243>
    e248:	48 83 c4 08          	add    $0x8,%rsp
    e24c:	0f b6 c0             	movzbl %al,%eax
    e24f:	c3                   	retq   

000000000000e250 <mbedtls_ecp_point_cmp>:
    e250:	f3 0f 1e fa          	endbr64 
    e254:	55                   	push   %rbp
    e255:	48 89 f5             	mov    %rsi,%rbp
    e258:	53                   	push   %rbx
    e259:	48 89 fb             	mov    %rdi,%rbx
    e25c:	48 83 ec 08          	sub    $0x8,%rsp
    e260:	e8 0b 72 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    e265:	85 c0                	test   %eax,%eax
    e267:	75 2f                	jne    e298 <mbedtls_ecp_point_cmp+0x48>
    e269:	48 8d 75 18          	lea    0x18(%rbp),%rsi
    e26d:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    e271:	e8 fa 71 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    e276:	85 c0                	test   %eax,%eax
    e278:	75 1e                	jne    e298 <mbedtls_ecp_point_cmp+0x48>
    e27a:	48 8d 75 30          	lea    0x30(%rbp),%rsi
    e27e:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    e282:	e8 e9 71 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    e287:	85 c0                	test   %eax,%eax
    e289:	75 0d                	jne    e298 <mbedtls_ecp_point_cmp+0x48>
    e28b:	48 83 c4 08          	add    $0x8,%rsp
    e28f:	5b                   	pop    %rbx
    e290:	5d                   	pop    %rbp
    e291:	c3                   	retq   
    e292:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e298:	48 83 c4 08          	add    $0x8,%rsp
    e29c:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    e2a1:	5b                   	pop    %rbx
    e2a2:	5d                   	pop    %rbp
    e2a3:	c3                   	retq   
    e2a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e2ab:	00 00 00 00 
    e2af:	90                   	nop

000000000000e2b0 <mbedtls_ecp_point_read_string>:
    e2b0:	f3 0f 1e fa          	endbr64 
    e2b4:	41 54                	push   %r12
    e2b6:	49 89 cc             	mov    %rcx,%r12
    e2b9:	55                   	push   %rbp
    e2ba:	89 f5                	mov    %esi,%ebp
    e2bc:	53                   	push   %rbx
    e2bd:	48 89 fb             	mov    %rdi,%rbx
    e2c0:	e8 9b 79 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    e2c5:	85 c0                	test   %eax,%eax
    e2c7:	74 07                	je     e2d0 <mbedtls_ecp_point_read_string+0x20>
    e2c9:	5b                   	pop    %rbx
    e2ca:	5d                   	pop    %rbp
    e2cb:	41 5c                	pop    %r12
    e2cd:	c3                   	retq   
    e2ce:	66 90                	xchg   %ax,%ax
    e2d0:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    e2d4:	4c 89 e2             	mov    %r12,%rdx
    e2d7:	89 ee                	mov    %ebp,%esi
    e2d9:	e8 82 79 ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    e2de:	85 c0                	test   %eax,%eax
    e2e0:	75 e7                	jne    e2c9 <mbedtls_ecp_point_read_string+0x19>
    e2e2:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    e2e6:	be 01 00 00 00       	mov    $0x1,%esi
    e2eb:	5b                   	pop    %rbx
    e2ec:	5d                   	pop    %rbp
    e2ed:	41 5c                	pop    %r12
    e2ef:	e9 9c 6c ff ff       	jmpq   4f90 <mbedtls_mpi_lset>
    e2f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e2fb:	00 00 00 00 
    e2ff:	90                   	nop

000000000000e300 <mbedtls_ecp_point_write_binary>:
    e300:	e9 fb 5b 02 00       	jmpq   33f00 <mbedtls_ecp_point_write_binary.instr.bb_e300>
    e305:	57                   	push   %rdi
    e306:	41 56                	push   %r14
    e308:	41 55                	push   %r13
    e30a:	41 54                	push   %r12
    e30c:	55                   	push   %rbp
    e30d:	53                   	push   %rbx
    e30e:	48 83 ec 18          	sub    $0x18,%rsp
    e312:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    e317:	83 fa 01             	cmp    $0x1,%edx
    e31a:	0f 87 58 01 00 00    	ja     e478 <mbedtls_ecp_point_write_binary+0x178>
    e320:	e9 20 5c 02 00       	jmpq   33f45 <instr.bb_e320>
    e325:	7f 08                	jg     e32f <mbedtls_ecp_point_write_binary+0x2f>
    e327:	48 89 f5             	mov    %rsi,%rbp
    e32a:	41 89 d5             	mov    %edx,%r13d
    e32d:	49 89 cf             	mov    %rcx,%r15
    e330:	4d 89 c4             	mov    %r8,%r12
    e333:	e8 08 6e ff ff       	callq  5140 <mbedtls_mpi_size>
    e338:	e9 20 5c 02 00       	jmpq   33f5d <instr.bb_e338>
    e33d:	49 89 c6             	mov    %rax,%r14
    e340:	0f 84 d2 00 00 00    	je     e418 <mbedtls_ecp_point_write_binary+0x118>
    e346:	e9 20 5c 02 00       	jmpq   33f6b <instr.bb_e346>
    e34b:	0f 84 df 00 00 00    	je     e430 <mbedtls_ecp_point_write_binary+0x130>
    e351:	e9 20 5c 02 00       	jmpq   33f76 <instr.bb_e351>
    e356:	30 e8                	xor    %ch,%al
    e358:	04 72                	add    $0x72,%al
    e35a:	ff                   	(bad)  
    e35b:	ff 85 c0 75 30 48    	incl   0x483075c0(%rbp)
    e361:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
    e366:	0f 84 1c 01 00 00    	je     e488 <mbedtls_ecp_point_write_binary+0x188>
    e36c:	41 c6 04 24 00       	movb   $0x0,(%r12)
    e371:	49 c7 07 01 00 00 00 	movq   $0x1,(%r15)
    e378:	48 83 c4 18          	add    $0x18,%rsp
    e37c:	5b                   	pop    %rbx
    e37d:	5d                   	pop    %rbp
    e37e:	41 5c                	pop    %r12
    e380:	41 5d                	pop    %r13
    e382:	41 5e                	pop    %r14
    e384:	41 5f                	pop    %r15
    e386:	c3                   	retq   
    e387:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e38e:	00 00 
    e390:	45 85 ed             	test   %r13d,%r13d
    e393:	75 3b                	jne    e3d0 <mbedtls_ecp_point_write_binary+0xd0>
    e395:	4b 8d 44 36 01       	lea    0x1(%r14,%r14,1),%rax
    e39a:	49 89 07             	mov    %rax,(%r15)
    e39d:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    e3a2:	0f 87 e0 00 00 00    	ja     e488 <mbedtls_ecp_point_write_binary+0x188>
    e3a8:	41 c6 04 24 04       	movb   $0x4,(%r12)
    e3ad:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
    e3b2:	4c 89 f2             	mov    %r14,%rdx
    e3b5:	48 89 ef             	mov    %rbp,%rdi
    e3b8:	e8 73 6e ff ff       	callq  5230 <mbedtls_mpi_write_binary>
    e3bd:	85 c0                	test   %eax,%eax
    e3bf:	75 b7                	jne    e378 <mbedtls_ecp_point_write_binary+0x78>
    e3c1:	4b 8d 74 34 01       	lea    0x1(%r12,%r14,1),%rsi
    e3c6:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    e3ca:	4c 89 f2             	mov    %r14,%rdx
    e3cd:	eb 30                	jmp    e3ff <mbedtls_ecp_point_write_binary+0xff>
    e3cf:	90                   	nop
    e3d0:	49 8d 46 01          	lea    0x1(%r14),%rax
    e3d4:	49 89 07             	mov    %rax,(%r15)
    e3d7:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    e3dc:	0f 87 a6 00 00 00    	ja     e488 <mbedtls_ecp_point_write_binary+0x188>
    e3e2:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    e3e6:	31 f6                	xor    %esi,%esi
    e3e8:	e8 23 6c ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    e3ed:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
    e3f2:	4c 89 f2             	mov    %r14,%rdx
    e3f5:	48 89 ef             	mov    %rbp,%rdi
    e3f8:	83 c0 02             	add    $0x2,%eax
    e3fb:	41 88 04 24          	mov    %al,(%r12)
    e3ff:	48 83 c4 18          	add    $0x18,%rsp
    e403:	5b                   	pop    %rbx
    e404:	5d                   	pop    %rbp
    e405:	41 5c                	pop    %r12
    e407:	41 5d                	pop    %r13
    e409:	41 5e                	pop    %r14
    e40b:	41 5f                	pop    %r15
    e40d:	e9 1e 6e ff ff       	jmpq   5230 <mbedtls_mpi_write_binary>
    e412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e418:	48 83 c4 18          	add    $0x18,%rsp
    e41c:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    e421:	5b                   	pop    %rbx
    e422:	5d                   	pop    %rbp
    e423:	41 5c                	pop    %r12
    e425:	41 5d                	pop    %r13
    e427:	41 5e                	pop    %r14
    e429:	41 5f                	pop    %r15
    e42b:	c3                   	retq   
    e42c:	0f 1f 40 00          	nopl   0x0(%rax)
    e430:	49 89 07             	mov    %rax,(%r15)
    e433:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    e438:	77 4e                	ja     e488 <mbedtls_ecp_point_write_binary+0x188>
    e43a:	48 89 c2             	mov    %rax,%rdx
    e43d:	4c 89 e6             	mov    %r12,%rsi
    e440:	48 89 ef             	mov    %rbp,%rdi
    e443:	e8 c8 6d ff ff       	callq  5210 <mbedtls_mpi_write_binary_le>
    e448:	85 c0                	test   %eax,%eax
    e44a:	0f 85 28 ff ff ff    	jne    e378 <mbedtls_ecp_point_write_binary+0x78>
    e450:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
    e455:	0f 84 1d ff ff ff    	je     e378 <mbedtls_ecp_point_write_binary+0x78>
    e45b:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
    e460:	0f 85 eb fe ff ff    	jne    e351 <mbedtls_ecp_point_write_binary+0x51>
    e466:	48 83 c4 18          	add    $0x18,%rsp
    e46a:	5b                   	pop    %rbx
    e46b:	5d                   	pop    %rbp
    e46c:	41 5c                	pop    %r12
    e46e:	41 5d                	pop    %r13
    e470:	41 5e                	pop    %r14
    e472:	41 5f                	pop    %r15
    e474:	c3                   	retq   
    e475:	0f 1f 00             	nopl   (%rax)
    e478:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    e47d:	e9 f6 fe ff ff       	jmpq   e378 <mbedtls_ecp_point_write_binary+0x78>
    e482:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e488:	b8 00 b1 ff ff       	mov    $0xffffb100,%eax
    e48d:	e9 e6 fe ff ff       	jmpq   e378 <mbedtls_ecp_point_write_binary+0x78>
    e492:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e499:	00 00 00 00 
    e49d:	0f 1f 00             	nopl   (%rax)

000000000000e4a0 <mbedtls_ecp_point_read_binary>:
    e4a0:	e9 eb 5a 02 00       	jmpq   33f90 <mbedtls_ecp_point_read_binary.instr.bb_e4a0>
    e4a5:	57                   	push   %rdi
    e4a6:	41 56                	push   %r14
    e4a8:	41 55                	push   %r13
    e4aa:	41 54                	push   %r12
    e4ac:	55                   	push   %rbp
    e4ad:	53                   	push   %rbx
    e4ae:	48 83 ec 38          	sub    $0x38,%rsp
    e4b2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e4b9:	00 00 
    e4bb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    e4c0:	31 c0                	xor    %eax,%eax
    e4c2:	48 85 c9             	test   %rcx,%rcx
    e4c5:	0f 84 c5 01 00 00    	je     e690 <mbedtls_ecp_point_read_binary+0x1f0>
    e4cb:	e9 18 5b 02 00       	jmpq   33fe8 <instr.bb_e4cb>
    e4d0:	89 ff                	mov    %edi,%edi
    e4d2:	49 89 f4             	mov    %rsi,%r12
    e4d5:	48 89 d5             	mov    %rdx,%rbp
    e4d8:	4c 89 ef             	mov    %r13,%rdi
    e4db:	48 89 cb             	mov    %rcx,%rbx
    e4de:	e8 5d 6c ff ff       	callq  5140 <mbedtls_mpi_size>
    e4e3:	e9 18 5b 02 00       	jmpq   34000 <instr.bb_e4e3>
    e4e8:	49 89 c6             	mov    %rax,%r14
    e4eb:	0f 84 1f 01 00 00    	je     e610 <mbedtls_ecp_point_read_binary+0x170>
    e4f1:	e9 18 5b 02 00       	jmpq   3400e <instr.bb_e4f1>
    e4f6:	0f 84 24 01 00 00    	je     e620 <mbedtls_ecp_point_read_binary+0x180>
    e4fc:	e9 18 5b 02 00       	jmpq   34019 <instr.bb_e4fc>
    e501:	3e 48 83 fb 01       	ds cmp $0x1,%rbx
    e506:	0f 85 84 01 00 00    	jne    e690 <mbedtls_ecp_point_read_binary+0x1f0>
    e50c:	4c 89 e7             	mov    %r12,%rdi
    e50f:	e8 0c f5 ff ff       	callq  da20 <mbedtls_ecp_set_zero>
    e514:	41 89 c1             	mov    %eax,%r9d
    e517:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    e51c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    e523:	00 00 
    e525:	0f 85 57 02 00 00    	jne    e782 <mbedtls_ecp_point_read_binary+0x2e2>
    e52b:	48 83 c4 38          	add    $0x38,%rsp
    e52f:	44 89 c8             	mov    %r9d,%eax
    e532:	5b                   	pop    %rbx
    e533:	5d                   	pop    %rbp
    e534:	41 5c                	pop    %r12
    e536:	41 5d                	pop    %r13
    e538:	41 5e                	pop    %r14
    e53a:	41 5f                	pop    %r15
    e53c:	c3                   	retq   
    e53d:	0f 1f 00             	nopl   (%rax)
    e540:	49 8d 46 01          	lea    0x1(%r14),%rax
    e544:	48 89 04 24          	mov    %rax,(%rsp)
    e548:	48 39 d8             	cmp    %rbx,%rax
    e54b:	0f 87 3f 01 00 00    	ja     e690 <mbedtls_ecp_point_read_binary+0x1f0>
    e551:	48 8d 75 01          	lea    0x1(%rbp),%rsi
    e555:	4c 89 f2             	mov    %r14,%rdx
    e558:	4c 89 e7             	mov    %r12,%rdi
    e55b:	e8 60 6c ff ff       	callq  51c0 <mbedtls_mpi_read_binary>
    e560:	41 89 c1             	mov    %eax,%r9d
    e563:	85 c0                	test   %eax,%eax
    e565:	75 b0                	jne    e517 <mbedtls_ecp_point_read_binary+0x77>
    e567:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    e56c:	be 01 00 00 00       	mov    $0x1,%esi
    e571:	e8 1a 6a ff ff       	callq  4f90 <mbedtls_mpi_lset>
    e576:	41 89 c1             	mov    %eax,%r9d
    e579:	85 c0                	test   %eax,%eax
    e57b:	75 9a                	jne    e517 <mbedtls_ecp_point_read_binary+0x77>
    e57d:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    e581:	88 44 24 0c          	mov    %al,0xc(%rsp)
    e585:	3c 04                	cmp    $0x4,%al
    e587:	0f 84 cb 01 00 00    	je     e758 <mbedtls_ecp_point_read_binary+0x2b8>
    e58d:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
    e592:	83 e8 02             	sub    $0x2,%eax
    e595:	3c 01                	cmp    $0x1,%al
    e597:	0f 87 f3 00 00 00    	ja     e690 <mbedtls_ecp_point_read_binary+0x1f0>
    e59d:	48 39 1c 24          	cmp    %rbx,(%rsp)
    e5a1:	0f 85 e9 00 00 00    	jne    e690 <mbedtls_ecp_point_read_binary+0x1f0>
    e5a7:	31 f6                	xor    %esi,%esi
    e5a9:	4c 89 ef             	mov    %r13,%rdi
    e5ac:	49 8d 6c 24 18       	lea    0x18(%r12),%rbp
    e5b1:	e8 5a 6a ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    e5b6:	83 f8 01             	cmp    $0x1,%eax
    e5b9:	75 55                	jne    e610 <mbedtls_ecp_point_read_binary+0x170>
    e5bb:	be 01 00 00 00       	mov    $0x1,%esi
    e5c0:	4c 89 ef             	mov    %r13,%rdi
    e5c3:	e8 48 6a ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    e5c8:	83 f8 01             	cmp    $0x1,%eax
    e5cb:	75 43                	jne    e610 <mbedtls_ecp_point_read_binary+0x170>
    e5cd:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    e5d2:	4c 89 f7             	mov    %r14,%rdi
    e5d5:	e8 96 65 ff ff       	callq  4b70 <mbedtls_mpi_init>
    e5da:	4c 89 e2             	mov    %r12,%rdx
    e5dd:	48 89 ee             	mov    %rbp,%rsi
    e5e0:	4c 89 ff             	mov    %r15,%rdi
    e5e3:	e8 38 e0 ff ff       	callq  c620 <ecp_sw_rhs>
    e5e8:	41 89 c1             	mov    %eax,%r9d
    e5eb:	85 c0                	test   %eax,%eax
    e5ed:	0f 84 ad 00 00 00    	je     e6a0 <mbedtls_ecp_point_read_binary+0x200>
    e5f3:	4c 89 f7             	mov    %r14,%rdi
    e5f6:	44 89 0c 24          	mov    %r9d,(%rsp)
    e5fa:	e8 91 65 ff ff       	callq  4b90 <mbedtls_mpi_free>
    e5ff:	44 8b 0c 24          	mov    (%rsp),%r9d
    e603:	e9 0f ff ff ff       	jmpq   e517 <mbedtls_ecp_point_read_binary+0x77>
    e608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e60f:	00 
    e610:	41 b9 80 b1 ff ff    	mov    $0xffffb180,%r9d
    e616:	e9 fc fe ff ff       	jmpq   e517 <mbedtls_ecp_point_read_binary+0x77>
    e61b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e620:	e9 0b 5a 02 00       	jmpq   34030 <instr.bb_e620>
    e625:	e9 0f 5a 02 00       	jmpq   34039 <instr.bb_e625>
    e62a:	ee                   	out    %al,(%dx)
    e62b:	4c 89 e7             	mov    %r12,%rdi
    e62e:	e8 3d 6b ff ff       	callq  5170 <mbedtls_mpi_read_binary_le>
    e633:	e9 3e 5a 02 00       	jmpq   34076 <instr.bb_e633>
    e638:	0f 85 d9 fe ff ff    	jne    e517 <mbedtls_ecp_point_read_binary+0x77>
    e63e:	e9 3e 5a 02 00       	jmpq   34081 <instr.bb_e63e>
    e643:	e8 48 65 ff ff       	callq  4b90 <mbedtls_mpi_free>
    e648:	e9 3e 5a 02 00       	jmpq   3408b <instr.bb_e648>
    e64d:	84 de                	test   %bl,%dh
    e64f:	00 00                	add    %al,(%rax)
    e651:	00 e9                	add    %ch,%cl
    e653:	3e 5a                	ds pop %rdx
    e655:	02 00                	add    (%rax),%al
    e657:	be 01 00 00 00       	mov    $0x1,%esi
    e65c:	e8 2f 69 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    e661:	e9 6d 5a 02 00       	jmpq   340d3 <instr.bb_e661>
    e666:	0f 85 ab fe ff ff    	jne    e517 <mbedtls_ecp_point_read_binary+0x77>
    e66c:	e9 6d 5a 02 00       	jmpq   340de <instr.bb_e66c>
    e671:	0f 84 a0 fe ff ff    	je     e517 <mbedtls_ecp_point_read_binary+0x77>
    e677:	e9 6d 5a 02 00       	jmpq   340e9 <instr.bb_e677>
    e67c:	0f 84 95 fe ff ff    	je     e517 <mbedtls_ecp_point_read_binary+0x77>
    e682:	e9 75 fe ff ff       	jmpq   e4fc <mbedtls_ecp_point_read_binary+0x5c>
    e687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e68e:	00 00 
    e690:	41 b9 80 b0 ff ff    	mov    $0xffffb080,%r9d
    e696:	e9 7c fe ff ff       	jmpq   e517 <mbedtls_ecp_point_read_binary+0x77>
    e69b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e6a0:	ba 01 00 00 00       	mov    $0x1,%edx
    e6a5:	4c 89 ee             	mov    %r13,%rsi
    e6a8:	4c 89 f7             	mov    %r14,%rdi
    e6ab:	e8 20 72 ff ff       	callq  58d0 <mbedtls_mpi_add_int>
    e6b0:	41 89 c1             	mov    %eax,%r9d
    e6b3:	85 c0                	test   %eax,%eax
    e6b5:	0f 85 38 ff ff ff    	jne    e5f3 <mbedtls_ecp_point_read_binary+0x153>
    e6bb:	be 02 00 00 00       	mov    $0x2,%esi
    e6c0:	4c 89 f7             	mov    %r14,%rdi
    e6c3:	e8 b8 6c ff ff       	callq  5380 <mbedtls_mpi_shift_r>
    e6c8:	41 89 c1             	mov    %eax,%r9d
    e6cb:	85 c0                	test   %eax,%eax
    e6cd:	0f 85 20 ff ff ff    	jne    e5f3 <mbedtls_ecp_point_read_binary+0x153>
    e6d3:	45 31 c0             	xor    %r8d,%r8d
    e6d6:	4c 89 e9             	mov    %r13,%rcx
    e6d9:	4c 89 f2             	mov    %r14,%rdx
    e6dc:	48 89 ee             	mov    %rbp,%rsi
    e6df:	48 89 ef             	mov    %rbp,%rdi
    e6e2:	e8 e9 89 ff ff       	callq  70d0 <mbedtls_mpi_exp_mod>
    e6e7:	41 89 c1             	mov    %eax,%r9d
    e6ea:	85 c0                	test   %eax,%eax
    e6ec:	0f 85 01 ff ff ff    	jne    e5f3 <mbedtls_ecp_point_read_binary+0x153>
    e6f2:	31 f6                	xor    %esi,%esi
    e6f4:	48 89 ef             	mov    %rbp,%rdi
    e6f7:	89 04 24             	mov    %eax,(%rsp)
    e6fa:	e8 11 69 ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    e6ff:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    e704:	44 8b 0c 24          	mov    (%rsp),%r9d
    e708:	41 83 e7 01          	and    $0x1,%r15d
    e70c:	41 39 c7             	cmp    %eax,%r15d
    e70f:	0f 84 de fe ff ff    	je     e5f3 <mbedtls_ecp_point_read_binary+0x153>
    e715:	48 89 ea             	mov    %rbp,%rdx
    e718:	4c 89 ee             	mov    %r13,%rsi
    e71b:	48 89 ef             	mov    %rbp,%rdi
    e71e:	e8 9d 71 ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    e723:	41 89 c1             	mov    %eax,%r9d
    e726:	e9 c8 fe ff ff       	jmpq   e5f3 <mbedtls_ecp_point_read_binary+0x153>
    e72b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e730:	48 8d 34 dd ff ff ff 	lea    -0x1(,%rbx,8),%rsi
    e737:	ff 
    e738:	31 d2                	xor    %edx,%edx
    e73a:	4c 89 e7             	mov    %r12,%rdi
    e73d:	e8 fe 68 ff ff       	callq  5040 <mbedtls_mpi_set_bit>
    e742:	41 89 c1             	mov    %eax,%r9d
    e745:	85 c0                	test   %eax,%eax
    e747:	0f 84 05 ff ff ff    	je     e652 <mbedtls_ecp_point_read_binary+0x1b2>
    e74d:	e9 c5 fd ff ff       	jmpq   e517 <mbedtls_ecp_point_read_binary+0x77>
    e752:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e758:	4b 8d 44 36 01       	lea    0x1(%r14,%r14,1),%rax
    e75d:	48 39 d8             	cmp    %rbx,%rax
    e760:	0f 85 2a ff ff ff    	jne    e690 <mbedtls_ecp_point_read_binary+0x1f0>
    e766:	48 8b 34 24          	mov    (%rsp),%rsi
    e76a:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
    e76f:	4c 89 f2             	mov    %r14,%rdx
    e772:	48 01 ee             	add    %rbp,%rsi
    e775:	e8 46 6a ff ff       	callq  51c0 <mbedtls_mpi_read_binary>
    e77a:	41 89 c1             	mov    %eax,%r9d
    e77d:	e9 95 fd ff ff       	jmpq   e517 <mbedtls_ecp_point_read_binary+0x77>
    e782:	e8 e9 5a ff ff       	callq  4270 <__stack_chk_fail@plt>
    e787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e78e:	00 00 

000000000000e790 <mbedtls_ecp_tls_read_point>:
    e790:	f3 0f 1e fa          	endbr64 
    e794:	48 83 f9 01          	cmp    $0x1,%rcx
    e798:	76 36                	jbe    e7d0 <mbedtls_ecp_tls_read_point+0x40>
    e79a:	48 8b 02             	mov    (%rdx),%rax
    e79d:	4c 8d 48 01          	lea    0x1(%rax),%r9
    e7a1:	4c 89 0a             	mov    %r9,(%rdx)
    e7a4:	44 0f b6 00          	movzbl (%rax),%r8d
    e7a8:	45 84 c0             	test   %r8b,%r8b
    e7ab:	74 23                	je     e7d0 <mbedtls_ecp_tls_read_point+0x40>
    e7ad:	48 83 e9 01          	sub    $0x1,%rcx
    e7b1:	49 39 c8             	cmp    %rcx,%r8
    e7b4:	77 1a                	ja     e7d0 <mbedtls_ecp_tls_read_point+0x40>
    e7b6:	4b 8d 04 01          	lea    (%r9,%r8,1),%rax
    e7ba:	4c 89 c1             	mov    %r8,%rcx
    e7bd:	48 89 02             	mov    %rax,(%rdx)
    e7c0:	4c 89 ca             	mov    %r9,%rdx
    e7c3:	e9 d8 fc ff ff       	jmpq   e4a0 <mbedtls_ecp_point_read_binary>
    e7c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e7cf:	00 
    e7d0:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    e7d5:	c3                   	retq   
    e7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e7dd:	00 00 00 

000000000000e7e0 <mbedtls_ecp_tls_write_point>:
    e7e0:	f3 0f 1e fa          	endbr64 
    e7e4:	4d 85 c9             	test   %r9,%r9
    e7e7:	74 37                	je     e820 <mbedtls_ecp_tls_write_point+0x40>
    e7e9:	83 fa 01             	cmp    $0x1,%edx
    e7ec:	77 32                	ja     e820 <mbedtls_ecp_tls_write_point+0x40>
    e7ee:	55                   	push   %rbp
    e7ef:	49 83 e9 01          	sub    $0x1,%r9
    e7f3:	4c 89 c5             	mov    %r8,%rbp
    e7f6:	4d 8d 40 01          	lea    0x1(%r8),%r8
    e7fa:	53                   	push   %rbx
    e7fb:	48 89 cb             	mov    %rcx,%rbx
    e7fe:	48 83 ec 08          	sub    $0x8,%rsp
    e802:	e8 f9 fa ff ff       	callq  e300 <mbedtls_ecp_point_write_binary>
    e807:	85 c0                	test   %eax,%eax
    e809:	75 0a                	jne    e815 <mbedtls_ecp_tls_write_point+0x35>
    e80b:	48 8b 13             	mov    (%rbx),%rdx
    e80e:	88 55 00             	mov    %dl,0x0(%rbp)
    e811:	48 83 03 01          	addq   $0x1,(%rbx)
    e815:	48 83 c4 08          	add    $0x8,%rsp
    e819:	5b                   	pop    %rbx
    e81a:	5d                   	pop    %rbp
    e81b:	c3                   	retq   
    e81c:	0f 1f 40 00          	nopl   0x0(%rax)
    e820:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    e825:	c3                   	retq   
    e826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e82d:	00 00 00 

000000000000e830 <mbedtls_ecp_tls_read_group_id>:
    e830:	f3 0f 1e fa          	endbr64 
    e834:	48 83 fa 02          	cmp    $0x2,%rdx
    e838:	76 64                	jbe    e89e <mbedtls_ecp_tls_read_group_id+0x6e>
    e83a:	48 8b 06             	mov    (%rsi),%rax
    e83d:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e841:	48 89 16             	mov    %rdx,(%rsi)
    e844:	80 38 03             	cmpb   $0x3,(%rax)
    e847:	75 55                	jne    e89e <mbedtls_ecp_tls_read_group_id+0x6e>
    e849:	48 8d 50 02          	lea    0x2(%rax),%rdx
    e84d:	48 89 16             	mov    %rdx,(%rsi)
    e850:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    e854:	c1 e1 08             	shl    $0x8,%ecx
    e857:	89 ca                	mov    %ecx,%edx
    e859:	48 8d 48 03          	lea    0x3(%rax),%rcx
    e85d:	48 89 0e             	mov    %rcx,(%rsi)
    e860:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
    e864:	48 8d 05 b5 af 01 00 	lea    0x1afb5(%rip),%rax        # 29820 <ecp_supported_curves>
    e86b:	09 d1                	or     %edx,%ecx
    e86d:	ba 19 00 00 00       	mov    $0x19,%edx
    e872:	eb 13                	jmp    e887 <mbedtls_ecp_tls_read_group_id+0x57>
    e874:	0f 1f 40 00          	nopl   0x0(%rax)
    e878:	8b 50 10             	mov    0x10(%rax),%edx
    e87b:	48 83 c0 10          	add    $0x10,%rax
    e87f:	85 d2                	test   %edx,%edx
    e881:	74 15                	je     e898 <mbedtls_ecp_tls_read_group_id+0x68>
    e883:	0f b7 50 04          	movzwl 0x4(%rax),%edx
    e887:	66 39 d1             	cmp    %dx,%cx
    e88a:	75 ec                	jne    e878 <mbedtls_ecp_tls_read_group_id+0x48>
    e88c:	8b 00                	mov    (%rax),%eax
    e88e:	89 07                	mov    %eax,(%rdi)
    e890:	31 c0                	xor    %eax,%eax
    e892:	c3                   	retq   
    e893:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e898:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    e89d:	c3                   	retq   
    e89e:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    e8a3:	c3                   	retq   
    e8a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e8ab:	00 00 00 00 
    e8af:	90                   	nop

000000000000e8b0 <mbedtls_ecp_tls_read_group>:
    e8b0:	f3 0f 1e fa          	endbr64 
    e8b4:	48 83 ec 18          	sub    $0x18,%rsp
    e8b8:	49 89 f8             	mov    %rdi,%r8
    e8bb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e8c2:	00 00 
    e8c4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    e8c9:	31 c0                	xor    %eax,%eax
    e8cb:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    e8d0:	e8 5b ff ff ff       	callq  e830 <mbedtls_ecp_tls_read_group_id>
    e8d5:	85 c0                	test   %eax,%eax
    e8d7:	75 0c                	jne    e8e5 <mbedtls_ecp_tls_read_group+0x35>
    e8d9:	8b 74 24 04          	mov    0x4(%rsp),%esi
    e8dd:	4c 89 c7             	mov    %r8,%rdi
    e8e0:	e8 cb 37 00 00       	callq  120b0 <mbedtls_ecp_group_load>
    e8e5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e8ea:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    e8f1:	00 00 
    e8f3:	75 05                	jne    e8fa <mbedtls_ecp_tls_read_group+0x4a>
    e8f5:	48 83 c4 18          	add    $0x18,%rsp
    e8f9:	c3                   	retq   
    e8fa:	e8 71 59 ff ff       	callq  4270 <__stack_chk_fail@plt>
    e8ff:	90                   	nop

000000000000e900 <mbedtls_ecp_tls_write_group>:
    e900:	f3 0f 1e fa          	endbr64 
    e904:	44 8b 07             	mov    (%rdi),%r8d
    e907:	48 8d 05 12 af 01 00 	lea    0x1af12(%rip),%rax        # 29820 <ecp_supported_curves>
    e90e:	bf 05 00 00 00       	mov    $0x5,%edi
    e913:	eb 0e                	jmp    e923 <mbedtls_ecp_tls_write_group+0x23>
    e915:	0f 1f 00             	nopl   (%rax)
    e918:	8b 78 10             	mov    0x10(%rax),%edi
    e91b:	48 83 c0 10          	add    $0x10,%rax
    e91f:	85 ff                	test   %edi,%edi
    e921:	74 2d                	je     e950 <mbedtls_ecp_tls_write_group+0x50>
    e923:	41 39 f8             	cmp    %edi,%r8d
    e926:	75 f0                	jne    e918 <mbedtls_ecp_tls_write_group+0x18>
    e928:	48 c7 06 03 00 00 00 	movq   $0x3,(%rsi)
    e92f:	48 83 f9 02          	cmp    $0x2,%rcx
    e933:	76 21                	jbe    e956 <mbedtls_ecp_tls_write_group+0x56>
    e935:	c6 02 03             	movb   $0x3,(%rdx)
    e938:	0f b7 40 04          	movzwl 0x4(%rax),%eax
    e93c:	66 c1 c0 08          	rol    $0x8,%ax
    e940:	66 89 42 01          	mov    %ax,0x1(%rdx)
    e944:	31 c0                	xor    %eax,%eax
    e946:	c3                   	retq   
    e947:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e94e:	00 00 
    e950:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    e955:	c3                   	retq   
    e956:	b8 00 b1 ff ff       	mov    $0xffffb100,%eax
    e95b:	c3                   	retq   
    e95c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e960 <mbedtls_ecp_check_pubkey>:
    e960:	e9 9b 57 02 00       	jmpq   34100 <mbedtls_ecp_check_pubkey.instr.bb_e960>
    e965:	57                   	push   %rdi
    e966:	41 56                	push   %r14
    e968:	41 55                	push   %r13
    e96a:	49 89 f5             	mov    %rsi,%r13
    e96d:	41 54                	push   %r12
    e96f:	55                   	push   %rbp
    e970:	48 89 fd             	mov    %rdi,%rbp
    e973:	48 8d 7e 30          	lea    0x30(%rsi),%rdi
    e977:	be 01 00 00 00       	mov    $0x1,%esi
    e97c:	53                   	push   %rbx
    e97d:	48 83 ec 48          	sub    $0x48,%rsp
    e981:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e988:	00 00 
    e98a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    e98f:	31 c0                	xor    %eax,%eax
    e991:	e8 ca 6b ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    e996:	e9 c8 57 02 00       	jmpq   34163 <instr.bb_e996>
    e99b:	02 00                	add    (%rax),%al
    e99d:	00 e9                	add    %ch,%cl
    e99f:	c8 57 02 00          	enterq $0x257,$0x0
    e9a3:	0f 84 17 01 00 00    	je     eac0 <mbedtls_ecp_check_pubkey+0x160>
    e9a9:	e9 c8 57 02 00       	jmpq   34176 <instr.bb_e9a9>
    e9ae:	0f 84 1c 01 00 00    	je     ead0 <mbedtls_ecp_check_pubkey+0x170>
    e9b4:	31 f6                	xor    %esi,%esi
    e9b6:	4c 89 ef             	mov    %r13,%rdi
    e9b9:	e8 a2 6b ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    e9be:	85 c0                	test   %eax,%eax
    e9c0:	0f 88 ea 01 00 00    	js     ebb0 <mbedtls_ecp_check_pubkey+0x250>
    e9c6:	4d 8d 65 18          	lea    0x18(%r13),%r12
    e9ca:	31 f6                	xor    %esi,%esi
    e9cc:	4c 89 e7             	mov    %r12,%rdi
    e9cf:	e8 8c 6b ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    e9d4:	85 c0                	test   %eax,%eax
    e9d6:	0f 88 d4 01 00 00    	js     ebb0 <mbedtls_ecp_check_pubkey+0x250>
    e9dc:	4c 8d 75 08          	lea    0x8(%rbp),%r14
    e9e0:	4c 89 ef             	mov    %r13,%rdi
    e9e3:	4c 89 f6             	mov    %r14,%rsi
    e9e6:	e8 85 6a ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    e9eb:	85 c0                	test   %eax,%eax
    e9ed:	0f 89 bd 01 00 00    	jns    ebb0 <mbedtls_ecp_check_pubkey+0x250>
    e9f3:	4c 89 f6             	mov    %r14,%rsi
    e9f6:	4c 89 e7             	mov    %r12,%rdi
    e9f9:	e8 72 6a ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    e9fe:	85 c0                	test   %eax,%eax
    ea00:	0f 89 aa 01 00 00    	jns    ebb0 <mbedtls_ecp_check_pubkey+0x250>
    ea06:	49 89 e7             	mov    %rsp,%r15
    ea09:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    ea0e:	4c 89 ff             	mov    %r15,%rdi
    ea11:	e8 5a 61 ff ff       	callq  4b70 <mbedtls_mpi_init>
    ea16:	4c 89 f7             	mov    %r14,%rdi
    ea19:	e8 52 61 ff ff       	callq  4b70 <mbedtls_mpi_init>
    ea1e:	4c 89 e2             	mov    %r12,%rdx
    ea21:	4c 89 e6             	mov    %r12,%rsi
    ea24:	4c 89 ff             	mov    %r15,%rdi
    ea27:	e8 84 6f ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    ea2c:	41 89 c4             	mov    %eax,%r12d
    ea2f:	85 c0                	test   %eax,%eax
    ea31:	74 3d                	je     ea70 <mbedtls_ecp_check_pubkey+0x110>
    ea33:	4c 89 ff             	mov    %r15,%rdi
    ea36:	e8 55 61 ff ff       	callq  4b90 <mbedtls_mpi_free>
    ea3b:	4c 89 f7             	mov    %r14,%rdi
    ea3e:	e8 4d 61 ff ff       	callq  4b90 <mbedtls_mpi_free>
    ea43:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    ea48:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ea4f:	00 00 
    ea51:	0f 85 91 01 00 00    	jne    ebe8 <mbedtls_ecp_check_pubkey+0x288>
    ea57:	48 83 c4 48          	add    $0x48,%rsp
    ea5b:	44 89 e0             	mov    %r12d,%eax
    ea5e:	5b                   	pop    %rbx
    ea5f:	5d                   	pop    %rbp
    ea60:	41 5c                	pop    %r12
    ea62:	41 5d                	pop    %r13
    ea64:	41 5e                	pop    %r14
    ea66:	41 5f                	pop    %r15
    ea68:	c3                   	retq   
    ea69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ea70:	48 89 ee             	mov    %rbp,%rsi
    ea73:	4c 89 ff             	mov    %r15,%rdi
    ea76:	e8 55 d7 ff ff       	callq  c1d0 <ecp_modp>
    ea7b:	41 89 c4             	mov    %eax,%r12d
    ea7e:	85 c0                	test   %eax,%eax
    ea80:	75 b1                	jne    ea33 <mbedtls_ecp_check_pubkey+0xd3>
    ea82:	4c 89 ea             	mov    %r13,%rdx
    ea85:	4c 89 f6             	mov    %r14,%rsi
    ea88:	48 89 ef             	mov    %rbp,%rdi
    ea8b:	48 83 05 a5 f6 01 00 	addq   $0x1,0x1f6a5(%rip)        # 2e138 <mul_count>
    ea92:	01 
    ea93:	e8 88 db ff ff       	callq  c620 <ecp_sw_rhs>
    ea98:	41 89 c4             	mov    %eax,%r12d
    ea9b:	85 c0                	test   %eax,%eax
    ea9d:	75 94                	jne    ea33 <mbedtls_ecp_check_pubkey+0xd3>
    ea9f:	4c 89 f6             	mov    %r14,%rsi
    eaa2:	4c 89 ff             	mov    %r15,%rdi
    eaa5:	e8 c6 69 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    eaaa:	41 89 c4             	mov    %eax,%r12d
    eaad:	85 c0                	test   %eax,%eax
    eaaf:	b8 80 b3 ff ff       	mov    $0xffffb380,%eax
    eab4:	44 0f 45 e0          	cmovne %eax,%r12d
    eab8:	e9 76 ff ff ff       	jmpq   ea33 <mbedtls_ecp_check_pubkey+0xd3>
    eabd:	0f 1f 00             	nopl   (%rax)
    eac0:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    eac6:	e9 78 ff ff ff       	jmpq   ea43 <mbedtls_ecp_check_pubkey+0xe3>
    eacb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ead0:	e9 bb 56 02 00       	jmpq   34190 <instr.bb_ead0>
    ead5:	66 ff                	data16 (bad) 
    ead7:	ff                   	(bad)  
    ead8:	e9 bb 56 02 00       	jmpq   34198 <instr.bb_ead8>
    eadd:	85 b8 00 00 00 48    	test   %edi,0x48000000(%rax)
    eae3:	83 c0 07             	add    $0x7,%eax
    eae6:	48 c1 e8 03          	shr    $0x3,%rax
    eaea:	49 39 c0             	cmp    %rax,%r8
    eaed:	0f 87 bd 00 00 00    	ja     ebb0 <mbedtls_ecp_check_pubkey+0x250>
    eaf3:	e9 bb 56 02 00       	jmpq   341b3 <instr.bb_eaf3>
    eaf8:	e8 63 6a ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    eafd:	e9 bb 56 02 00       	jmpq   341bd <instr.bb_eafd>
    eb02:	00 00                	add    %al,(%rax)
    eb04:	00 e9                	add    %ch,%cl
    eb06:	bb 56 02 00 8b       	mov    $0x8b000256,%ebx
    eb0b:	5d                   	pop    %rbp
    eb0c:	00 48 83             	add    %cl,-0x7d(%rax)
    eb0f:	c5 08 4c             	(bad)
    eb12:	89 f7                	mov    %esi,%edi
    eb14:	e8 57 60 ff ff       	callq  4b70 <mbedtls_mpi_init>
    eb19:	e9 bb 56 02 00       	jmpq   341d9 <instr.bb_eb19>
    eb1e:	f7 e8                	imul   %eax
    eb20:	fc                   	cld    
    eb21:	62                   	(bad)  
    eb22:	ff                   	(bad)  
    eb23:	ff                   	(bad)  
    eb24:	e9 ea 56 02 00       	jmpq   34213 <instr.bb_eb24>
    eb29:	74 1e                	je     eb49 <mbedtls_ecp_check_pubkey+0x1e9>
    eb2b:	e9 ee 56 02 00       	jmpq   3421e <instr.bb_eb2b>
    eb30:	48 89 ea             	mov    %rbp,%rdx
    eb33:	4c 89 f6             	mov    %r14,%rsi
    eb36:	4c 89 f7             	mov    %r14,%rdi
    eb39:	e8 82 6d ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    eb3e:	41 89 c4             	mov    %eax,%r12d
    eb41:	85 c0                	test   %eax,%eax
    eb43:	0f 85 f2 fe ff ff    	jne    ea3b <mbedtls_ecp_check_pubkey+0xdb>
    eb49:	48 89 ee             	mov    %rbp,%rsi
    eb4c:	4c 89 f7             	mov    %r14,%rdi
    eb4f:	e8 1c 69 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    eb54:	85 c0                	test   %eax,%eax
    eb56:	79 d8                	jns    eb30 <mbedtls_ecp_check_pubkey+0x1d0>
    eb58:	be 01 00 00 00       	mov    $0x1,%esi
    eb5d:	4c 89 f7             	mov    %r14,%rdi
    eb60:	e8 fb 69 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    eb65:	85 c0                	test   %eax,%eax
    eb67:	7e 33                	jle    eb9c <mbedtls_ecp_check_pubkey+0x23c>
    eb69:	83 fb 09             	cmp    $0x9,%ebx
    eb6c:	74 52                	je     ebc0 <mbedtls_ecp_check_pubkey+0x260>
    eb6e:	ba 01 00 00 00       	mov    $0x1,%edx
    eb73:	4c 89 f6             	mov    %r14,%rsi
    eb76:	4c 89 f7             	mov    %r14,%rdi
    eb79:	e8 52 6d ff ff       	callq  58d0 <mbedtls_mpi_add_int>
    eb7e:	41 89 c4             	mov    %eax,%r12d
    eb81:	85 c0                	test   %eax,%eax
    eb83:	0f 85 b2 fe ff ff    	jne    ea3b <mbedtls_ecp_check_pubkey+0xdb>
    eb89:	48 89 ee             	mov    %rbp,%rsi
    eb8c:	4c 89 f7             	mov    %r14,%rdi
    eb8f:	e8 dc 68 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    eb94:	85 c0                	test   %eax,%eax
    eb96:	0f 85 9f fe ff ff    	jne    ea3b <mbedtls_ecp_check_pubkey+0xdb>
    eb9c:	41 bc 80 b3 ff ff    	mov    $0xffffb380,%r12d
    eba2:	e9 94 fe ff ff       	jmpq   ea3b <mbedtls_ecp_check_pubkey+0xdb>
    eba7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ebae:	00 00 
    ebb0:	41 bc 80 b3 ff ff    	mov    $0xffffb380,%r12d
    ebb6:	e9 88 fe ff ff       	jmpq   ea43 <mbedtls_ecp_check_pubkey+0xe3>
    ebbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ebc0:	48 8d 35 39 ac 01 00 	lea    0x1ac39(%rip),%rsi        # 29800 <ecp_x25519_bad_point_1>
    ebc7:	4c 89 f7             	mov    %r14,%rdi
    ebca:	e8 a1 68 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    ebcf:	85 c0                	test   %eax,%eax
    ebd1:	74 c9                	je     eb9c <mbedtls_ecp_check_pubkey+0x23c>
    ebd3:	48 8d 35 06 ac 01 00 	lea    0x1ac06(%rip),%rsi        # 297e0 <ecp_x25519_bad_point_2>
    ebda:	4c 89 f7             	mov    %r14,%rdi
    ebdd:	e8 8e 68 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    ebe2:	85 c0                	test   %eax,%eax
    ebe4:	75 88                	jne    eb6e <mbedtls_ecp_check_pubkey+0x20e>
    ebe6:	eb b4                	jmp    eb9c <mbedtls_ecp_check_pubkey+0x23c>
    ebe8:	e8 83 56 ff ff       	callq  4270 <__stack_chk_fail@plt>
    ebed:	0f 1f 00             	nopl   (%rax)

000000000000ebf0 <mbedtls_ecp_check_privkey>:
    ebf0:	e9 3b 56 02 00       	jmpq   34230 <mbedtls_ecp_check_privkey.instr.bb_ebf0>
    ebf5:	83 7f 60 00          	cmpl   $0x0,0x60(%rdi)
    ebf9:	74 45                	je     ec40 <mbedtls_ecp_check_privkey+0x50>
    ebfb:	e9 59 56 02 00       	jmpq   34259 <instr.bb_ebfb>
    ec00:	48 89 fb             	mov    %rdi,%rbx
    ec03:	48 83 ec 08          	sub    $0x8,%rsp
    ec07:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    ec0c:	74 42                	je     ec50 <mbedtls_ecp_check_privkey+0x60>
    ec0e:	e9 5d 56 02 00       	jmpq   34270 <instr.bb_ec0e>
    ec13:	48 89 ef             	mov    %rbp,%rdi
    ec16:	e8 45 69 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    ec1b:	85 c0                	test   %eax,%eax
    ec1d:	0f 88 7d 00 00 00    	js     eca0 <mbedtls_ecp_check_privkey+0xb0>
    ec23:	48 8d b3 98 00 00 00 	lea    0x98(%rbx),%rsi
    ec2a:	48 89 ef             	mov    %rbp,%rdi
    ec2d:	e8 3e 68 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    ec32:	85 c0                	test   %eax,%eax
    ec34:	79 6a                	jns    eca0 <mbedtls_ecp_check_privkey+0xb0>
    ec36:	31 c0                	xor    %eax,%eax
    ec38:	48 83 c4 08          	add    $0x8,%rsp
    ec3c:	5b                   	pop    %rbx
    ec3d:	5d                   	pop    %rbp
    ec3e:	c3                   	retq   
    ec3f:	90                   	nop
    ec40:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    ec45:	c3                   	retq   
    ec46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ec4d:	00 00 00 
    ec50:	31 f6                	xor    %esi,%esi
    ec52:	48 89 ef             	mov    %rbp,%rdi
    ec55:	e8 b6 63 ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    ec5a:	85 c0                	test   %eax,%eax
    ec5c:	75 42                	jne    eca0 <mbedtls_ecp_check_privkey+0xb0>
    ec5e:	be 01 00 00 00       	mov    $0x1,%esi
    ec63:	48 89 ef             	mov    %rbp,%rdi
    ec66:	e8 a5 63 ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    ec6b:	85 c0                	test   %eax,%eax
    ec6d:	75 31                	jne    eca0 <mbedtls_ecp_check_privkey+0xb0>
    ec6f:	48 89 ef             	mov    %rbp,%rdi
    ec72:	e8 a9 64 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
    ec77:	48 83 e8 01          	sub    $0x1,%rax
    ec7b:	48 3b 83 b8 00 00 00 	cmp    0xb8(%rbx),%rax
    ec82:	75 1c                	jne    eca0 <mbedtls_ecp_check_privkey+0xb0>
    ec84:	48 3d fe 00 00 00    	cmp    $0xfe,%rax
    ec8a:	75 aa                	jne    ec36 <mbedtls_ecp_check_privkey+0x46>
    ec8c:	be 02 00 00 00       	mov    $0x2,%esi
    ec91:	48 89 ef             	mov    %rbp,%rdi
    ec94:	e8 77 63 ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    ec99:	85 c0                	test   %eax,%eax
    ec9b:	74 99                	je     ec36 <mbedtls_ecp_check_privkey+0x46>
    ec9d:	0f 1f 00             	nopl   (%rax)
    eca0:	b8 80 b3 ff ff       	mov    $0xffffb380,%eax
    eca5:	eb 91                	jmp    ec38 <mbedtls_ecp_check_privkey+0x48>
    eca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ecae:	00 00 

000000000000ecb0 <ecp_mul_restartable_internal>:
    ecb0:	e9 db 55 02 00       	jmpq   34290 <ecp_mul_restartable_internal.instr.bb_ecb0>
    ecb5:	55                   	push   %rbp
    ecb6:	49 89 cd             	mov    %rcx,%r13
    ecb9:	41 54                	push   %r12
    ecbb:	55                   	push   %rbp
    ecbc:	53                   	push   %rbx
    ecbd:	48 89 fb             	mov    %rdi,%rbx
    ecc0:	48 81 ec b8 01 00 00 	sub    $0x1b8,%rsp
    ecc7:	48 8b 84 24 f0 01 00 	mov    0x1f0(%rsp),%rax
    ecce:	00 
    eccf:	48 89 34 24          	mov    %rsi,(%rsp)
    ecd3:	48 89 d6             	mov    %rdx,%rsi
    ecd6:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    ecdb:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    ece0:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    ece5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    ecea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ecf1:	00 00 
    ecf3:	48 89 84 24 a8 01 00 	mov    %rax,0x1a8(%rsp)
    ecfa:	00 
    ecfb:	31 c0                	xor    %eax,%eax
    ecfd:	e8 ee fe ff ff       	callq  ebf0 <mbedtls_ecp_check_privkey>
    ed02:	e9 ae 56 02 00       	jmpq   343b5 <instr.bb_ed02>
    ed07:	74 2f                	je     ed38 <ecp_mul_restartable_internal+0x88>
    ed09:	e9 b2 56 02 00       	jmpq   343c0 <instr.bb_ed09>
    ed0e:	01 00                	add    %eax,(%rax)
    ed10:	00 64 48 33          	add    %ah,0x33(%rax,%rcx,2)
    ed14:	04 25                	add    $0x25,%al
    ed16:	28 00                	sub    %al,(%rax)
    ed18:	00 00                	add    %al,(%rax)
    ed1a:	0f 85 ee 0b 00 00    	jne    f90e <ecp_mul_restartable_internal+0xc5e>
    ed20:	e9 b2 56 02 00       	jmpq   343d7 <instr.bb_ed20>
    ed25:	00 00                	add    %al,(%rax)
    ed27:	44 89 e0             	mov    %r12d,%eax
    ed2a:	5b                   	pop    %rbx
    ed2b:	5d                   	pop    %rbp
    ed2c:	41 5c                	pop    %r12
    ed2e:	41 5d                	pop    %r13
    ed30:	41 5e                	pop    %r14
    ed32:	41 5f                	pop    %r15
    ed34:	c3                   	retq   
    ed35:	0f 1f 00             	nopl   (%rax)
    ed38:	e9 b3 56 02 00       	jmpq   343f0 <instr.bb_ed38>
    ed3d:	df e8                	fucomip %st(0),%st
    ed3f:	1d fc ff ff e9       	sbb    $0xe9fffffc,%eax
    ed44:	e2 56                	loop   ed9c <ecp_mul_restartable_internal+0xec>
    ed46:	02 00                	add    (%rax),%al
    ed48:	75 bf                	jne    ed09 <ecp_mul_restartable_internal+0x59>
    ed4a:	e9 e6 56 02 00       	jmpq   34435 <instr.bb_ed4a>
    ed4f:	0f 84 5b 03 00 00    	je     f0b0 <ecp_mul_restartable_internal+0x400>
    ed55:	e9 e6 56 02 00       	jmpq   34440 <instr.bb_ed55>
    ed5a:	0f 84 a8 03 00 00    	je     f108 <ecp_mul_restartable_internal+0x458>
    ed60:	48 8d 73 68          	lea    0x68(%rbx),%rsi
    ed64:	49 8d 7d 18          	lea    0x18(%r13),%rdi
    ed68:	e8 03 67 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    ed6d:	85 c0                	test   %eax,%eax
    ed6f:	0f 84 7b 02 00 00    	je     eff0 <ecp_mul_restartable_internal+0x340>
    ed75:	48 8b 93 b8 00 00 00 	mov    0xb8(%rbx),%rdx
    ed7c:	48 81 fa 7f 01 00 00 	cmp    $0x17f,%rdx
    ed83:	77 0a                	ja     ed8f <ecp_mul_restartable_internal+0xdf>
    ed85:	48 83 fa 04          	cmp    $0x4,%rdx
    ed89:	0f 86 6f 0c 00 00    	jbe    f9fe <ecp_mul_restartable_internal+0xd4e>
    ed8f:	48 8d 42 03          	lea    0x3(%rdx),%rax
    ed93:	c6 44 24 38 08       	movb   $0x8,0x38(%rsp)
    ed98:	48 c1 e8 02          	shr    $0x2,%rax
    ed9c:	c7 44 24 30 08 00 00 	movl   $0x8,0x30(%rsp)
    eda3:	00 
    eda4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    eda9:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
    edb0:	00 00 00 00 
    edb4:	c7 44 24 60 03 00 00 	movl   $0x3,0x60(%rsp)
    edbb:	00 
    edbc:	c7 44 24 48 04 00 00 	movl   $0x4,0x48(%rsp)
    edc3:	00 
    edc4:	8b 44 24 30          	mov    0x30(%rsp),%eax
    edc8:	be 48 00 00 00       	mov    $0x48,%esi
    edcd:	48 89 c7             	mov    %rax,%rdi
    edd0:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    edd5:	e8 f6 54 ff ff       	callq  42d0 <calloc@plt>
    edda:	48 89 c5             	mov    %rax,%rbp
    eddd:	48 85 c0             	test   %rax,%rax
    ede0:	0f 84 0d 0c 00 00    	je     f9f3 <ecp_mul_restartable_internal+0xd43>
    ede6:	0f b6 44 24 38       	movzbl 0x38(%rsp),%eax
    edeb:	49 89 ef             	mov    %rbp,%r15
    edee:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    edf3:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    edf7:	48 c1 e0 03          	shl    $0x3,%rax
    edfb:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    ee00:	4c 8d 74 05 00       	lea    0x0(%rbp,%rax,1),%r14
    ee05:	0f 1f 00             	nopl   (%rax)
    ee08:	4c 89 ff             	mov    %r15,%rdi
    ee0b:	49 83 c7 48          	add    $0x48,%r15
    ee0f:	e8 8c e9 ff ff       	callq  d7a0 <mbedtls_ecp_point_init>
    ee14:	4d 39 f7             	cmp    %r14,%r15
    ee17:	75 ef                	jne    ee08 <ecp_mul_restartable_internal+0x158>
    ee19:	48 8d 84 24 40 01 00 	lea    0x140(%rsp),%rax
    ee20:	00 
    ee21:	4c 8d bc 24 a0 01 00 	lea    0x1a0(%rsp),%r15
    ee28:	00 
    ee29:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee2d:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
    ee34:	00 00 00 00 00 
    ee39:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    ee3e:	49 89 c6             	mov    %rax,%r14
    ee41:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
    ee46:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
    ee4d:	00 
    ee4e:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    ee55:	00 
    ee56:	0f 29 84 24 20 01 00 	movaps %xmm0,0x120(%rsp)
    ee5d:	00 
    ee5e:	66 90                	xchg   %ax,%ax
    ee60:	4c 89 f7             	mov    %r14,%rdi
    ee63:	49 83 c6 18          	add    $0x18,%r14
    ee67:	e8 04 5d ff ff       	callq  4b70 <mbedtls_mpi_init>
    ee6c:	4d 39 fe             	cmp    %r15,%r14
    ee6f:	75 ef                	jne    ee60 <ecp_mul_restartable_internal+0x1b0>
    ee71:	4c 89 ee             	mov    %r13,%rsi
    ee74:	48 89 ef             	mov    %rbp,%rdi
    ee77:	e8 44 eb ff ff       	callq  d9c0 <mbedtls_ecp_copy>
    ee7c:	41 89 c6             	mov    %eax,%r14d
    ee7f:	85 c0                	test   %eax,%eax
    ee81:	0f 85 94 00 00 00    	jne    ef1b <ecp_mul_restartable_internal+0x26b>
    ee87:	4c 63 6c 24 60       	movslq 0x60(%rsp),%r13
    ee8c:	4c 0f af 6c 24 08    	imul   0x8(%rsp),%r13
    ee92:	45 31 ff             	xor    %r15d,%r15d
    ee95:	4d 85 ed             	test   %r13,%r13
    ee98:	0f 84 bf 08 00 00    	je     f75d <ecp_mul_restartable_internal+0xaad>
    ee9e:	44 89 64 24 60       	mov    %r12d,0x60(%rsp)
    eea3:	4d 89 fc             	mov    %r15,%r12
    eea6:	4d 89 ef             	mov    %r13,%r15
    eea9:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
    eeae:	eb 0d                	jmp    eebd <ecp_mul_restartable_internal+0x20d>
    eeb0:	49 83 c4 01          	add    $0x1,%r12
    eeb4:	4d 39 fc             	cmp    %r15,%r12
    eeb7:	0f 84 9b 08 00 00    	je     f758 <ecp_mul_restartable_internal+0xaa8>
    eebd:	4c 89 e0             	mov    %r12,%rax
    eec0:	31 d2                	xor    %edx,%edx
    eec2:	be 01 00 00 00       	mov    $0x1,%esi
    eec7:	48 f7 74 24 08       	divq   0x8(%rsp)
    eecc:	89 c1                	mov    %eax,%ecx
    eece:	d3 e6                	shl    %cl,%esi
    eed0:	40 0f b6 ce          	movzbl %sil,%ecx
    eed4:	89 f0                	mov    %esi,%eax
    eed6:	48 8d 0c c9          	lea    (%rcx,%rcx,8),%rcx
    eeda:	4c 8d 74 cd 00       	lea    0x0(%rbp,%rcx,8),%r14
    eedf:	48 85 d2             	test   %rdx,%rdx
    eee2:	75 1a                	jne    eefe <ecp_mul_restartable_internal+0x24e>
    eee4:	d0 e8                	shr    %al
    eee6:	4c 89 f7             	mov    %r14,%rdi
    eee9:	0f b6 c0             	movzbl %al,%eax
    eeec:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    eef0:	48 8d 74 c5 00       	lea    0x0(%rbp,%rax,8),%rsi
    eef5:	e8 c6 ea ff ff       	callq  d9c0 <mbedtls_ecp_copy>
    eefa:	85 c0                	test   %eax,%eax
    eefc:	75 15                	jne    ef13 <ecp_mul_restartable_internal+0x263>
    eefe:	4c 89 e9             	mov    %r13,%rcx
    ef01:	4c 89 f2             	mov    %r14,%rdx
    ef04:	4c 89 f6             	mov    %r14,%rsi
    ef07:	48 89 df             	mov    %rbx,%rdi
    ef0a:	e8 e1 e0 ff ff       	callq  cff0 <ecp_double_jac>
    ef0f:	85 c0                	test   %eax,%eax
    ef11:	74 9d                	je     eeb0 <ecp_mul_restartable_internal+0x200>
    ef13:	44 8b 64 24 60       	mov    0x60(%rsp),%r12d
    ef18:	41 89 c6             	mov    %eax,%r14d
    ef1b:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
    ef20:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    ef25:	0f 1f 00             	nopl   (%rax)
    ef28:	4c 89 ef             	mov    %r13,%rdi
    ef2b:	49 83 c5 18          	add    $0x18,%r13
    ef2f:	e8 5c 5c ff ff       	callq  4b90 <mbedtls_mpi_free>
    ef34:	4d 39 fd             	cmp    %r15,%r13
    ef37:	75 ef                	jne    ef28 <ecp_mul_restartable_internal+0x278>
    ef39:	45 85 f6             	test   %r14d,%r14d
    ef3c:	0f 85 fe 07 00 00    	jne    f740 <ecp_mul_restartable_internal+0xa90>
    ef42:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
    ef49:	85 c0                	test   %eax,%eax
    ef4b:	0f 85 6f 01 00 00    	jne    f0c0 <ecp_mul_restartable_internal+0x410>
    ef51:	ff 74 24 28          	pushq  0x28(%rsp)
    ef55:	48 89 e9             	mov    %rbp,%rcx
    ef58:	48 89 df             	mov    %rbx,%rdi
    ef5b:	ff 74 24 28          	pushq  0x28(%rsp)
    ef5f:	ff 74 24 20          	pushq  0x20(%rsp)
    ef63:	ff 74 24 20          	pushq  0x20(%rsp)
    ef67:	44 8b 4c 24 68       	mov    0x68(%rsp),%r9d
    ef6c:	44 8b 44 24 50       	mov    0x50(%rsp),%r8d
    ef71:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    ef76:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    ef7b:	e8 e0 ee ff ff       	callq  de60 <ecp_mul_comb_after_precomp>
    ef80:	48 83 c4 20          	add    $0x20,%rsp
    ef84:	41 89 c6             	mov    %eax,%r14d
    ef87:	48 3b ab e8 00 00 00 	cmp    0xe8(%rbx),%rbp
    ef8e:	74 39                	je     efc9 <ecp_mul_restartable_internal+0x319>
    ef90:	0f b6 44 24 38       	movzbl 0x38(%rsp),%eax
    ef95:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    ef9a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    ef9f:	48 89 eb             	mov    %rbp,%rbx
    efa2:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    efa6:	4c 8d 6c d5 00       	lea    0x0(%rbp,%rdx,8),%r13
    efab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    efb0:	48 89 df             	mov    %rbx,%rdi
    efb3:	48 83 c3 48          	add    $0x48,%rbx
    efb7:	e8 64 d5 ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
    efbc:	49 39 dd             	cmp    %rbx,%r13
    efbf:	75 ef                	jne    efb0 <ecp_mul_restartable_internal+0x300>
    efc1:	48 89 ef             	mov    %rbp,%rdi
    efc4:	e8 27 52 ff ff       	callq  41f0 <free@plt>
    efc9:	45 85 f6             	test   %r14d,%r14d
    efcc:	0f 84 37 fd ff ff    	je     ed09 <ecp_mul_restartable_internal+0x59>
    efd2:	f3 0f 1e fa          	endbr64 
    efd6:	48 8b 3c 24          	mov    (%rsp),%rdi
    efda:	45 89 f4             	mov    %r14d,%r12d
    efdd:	48 85 ff             	test   %rdi,%rdi
    efe0:	0f 84 23 fd ff ff    	je     ed09 <ecp_mul_restartable_internal+0x59>
    efe6:	e8 35 d5 ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
    efeb:	e9 19 fd ff ff       	jmpq   ed09 <ecp_mul_restartable_internal+0x59>
    eff0:	48 8d 73 50          	lea    0x50(%rbx),%rsi
    eff4:	4c 89 ef             	mov    %r13,%rdi
    eff7:	e8 74 64 ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
    effc:	31 d2                	xor    %edx,%edx
    effe:	85 c0                	test   %eax,%eax
    f000:	0f 94 c2             	sete   %dl
    f003:	89 94 24 88 00 00 00 	mov    %edx,0x88(%rsp)
    f00a:	48 8b 93 b8 00 00 00 	mov    0xb8(%rbx),%rdx
    f011:	48 81 fa 7f 01 00 00 	cmp    $0x17f,%rdx
    f018:	0f 87 c2 00 00 00    	ja     f0e0 <ecp_mul_restartable_internal+0x430>
    f01e:	85 c0                	test   %eax,%eax
    f020:	0f 85 5f fd ff ff    	jne    ed85 <ecp_mul_restartable_internal+0xd5>
    f026:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
    f02d:	b8 05 00 00 00       	mov    $0x5,%eax
    f032:	48 89 fd             	mov    %rdi,%rbp
    f035:	48 85 ff             	test   %rdi,%rdi
    f038:	0f 84 a2 06 00 00    	je     f6e0 <ecp_mul_restartable_internal+0xa30>
    f03e:	48 83 bb f0 00 00 00 	cmpq   $0x0,0xf0(%rbx)
    f045:	00 
    f046:	0f 85 9f 06 00 00    	jne    f6eb <ecp_mul_restartable_internal+0xa3b>
    f04c:	0f b6 f0             	movzbl %al,%esi
    f04f:	48 39 f2             	cmp    %rsi,%rdx
    f052:	0f 86 88 08 00 00    	jbe    f8e0 <ecp_mul_restartable_internal+0xc30>
    f058:	8d 48 ff             	lea    -0x1(%rax),%ecx
    f05b:	89 44 24 48          	mov    %eax,0x48(%rsp)
    f05f:	b8 01 00 00 00       	mov    $0x1,%eax
    f064:	d3 e0                	shl    %cl,%eax
    f066:	89 4c 24 60          	mov    %ecx,0x60(%rsp)
    f06a:	89 44 24 30          	mov    %eax,0x30(%rsp)
    f06e:	88 44 24 38          	mov    %al,0x38(%rsp)
    f072:	48 8d 44 16 ff       	lea    -0x1(%rsi,%rdx,1),%rax
    f077:	31 d2                	xor    %edx,%edx
    f079:	48 f7 f6             	div    %rsi
    f07c:	8b 94 24 88 00 00 00 	mov    0x88(%rsp),%edx
    f083:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f088:	85 d2                	test   %edx,%edx
    f08a:	0f 84 34 fd ff ff    	je     edc4 <ecp_mul_restartable_internal+0x114>
    f090:	48 89 fd             	mov    %rdi,%rbp
    f093:	48 85 ff             	test   %rdi,%rdi
    f096:	0f 85 b5 fe ff ff    	jne    ef51 <ecp_mul_restartable_internal+0x2a1>
    f09c:	c7 84 24 88 00 00 00 	movl   $0x1,0x88(%rsp)
    f0a3:	01 00 00 00 
    f0a7:	e9 18 fd ff ff       	jmpq   edc4 <ecp_mul_restartable_internal+0x114>
    f0ac:	0f 1f 40 00          	nopl   0x0(%rax)
    f0b0:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
    f0b6:	e9 4e fc ff ff       	jmpq   ed09 <ecp_mul_restartable_internal+0x59>
    f0bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f0c0:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    f0c5:	48 89 ab e8 00 00 00 	mov    %rbp,0xe8(%rbx)
    f0cc:	48 89 83 f0 00 00 00 	mov    %rax,0xf0(%rbx)
    f0d3:	e9 79 fe ff ff       	jmpq   ef51 <ecp_mul_restartable_internal+0x2a1>
    f0d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f0df:	00 
    f0e0:	85 c0                	test   %eax,%eax
    f0e2:	0f 85 a7 fc ff ff    	jne    ed8f <ecp_mul_restartable_internal+0xdf>
    f0e8:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
    f0ef:	48 89 fd             	mov    %rdi,%rbp
    f0f2:	48 85 ff             	test   %rdi,%rdi
    f0f5:	0f 84 c9 08 00 00    	je     f9c4 <ecp_mul_restartable_internal+0xd14>
    f0fb:	b8 06 00 00 00       	mov    $0x6,%eax
    f100:	e9 39 ff ff ff       	jmpq   f03e <ecp_mul_restartable_internal+0x38e>
    f105:	0f 1f 00             	nopl   (%rax)
    f108:	e9 43 53 02 00       	jmpq   34450 <instr.bb_f108>
    f10d:	00 00                	add    %al,(%rax)
    f10f:	00 4c 8d b4          	add    %cl,-0x4c(%rbp,%rcx,4)
    f113:	24 a0                	and    $0xa0,%al
    f115:	01 00                	add    %eax,(%rax)
    f117:	00 4c 89 ff          	add    %cl,-0x1(%rcx,%rcx,4)
    f11b:	e8 80 e6 ff ff       	callq  d7a0 <mbedtls_ecp_point_init>
    f120:	e9 43 53 02 00       	jmpq   34468 <instr.bb_f120>
    f125:	00 00                	add    %al,(%rax)
    f127:	00 48 89             	add    %cl,-0x77(%rax)
    f12a:	7c 24                	jl     f150 <ecp_mul_restartable_internal+0x4a0>
    f12c:	08 e8                	or     %ch,%al
    f12e:	3e 5a                	ds pop %rdx
    f130:	ff                   	(bad)  
    f131:	ff                   	(bad)  
    f132:	e9 43 53 02 00       	jmpq   3447a <instr.bb_f132>
    f137:	01 00                	add    %eax,(%rax)
    f139:	00 4c 89 74          	add    %cl,0x74(%rcx,%rcx,4)
    f13d:	24 50                	and    $0x50,%al
    f13f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    f144:	48 89 c5             	mov    %rax,%rbp
    f147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f14e:	00 00 
    f150:	e9 3b 53 02 00       	jmpq   34490 <instr.bb_f150>
    f155:	c5 18 e8             	(bad)
    f158:	14 5a                	adc    $0x5a,%al
    f15a:	ff                   	(bad)  
    f15b:	ff                   	(bad)  
    f15c:	e9 3b 53 02 00       	jmpq   3449c <instr.bb_f15c>
    f161:	e9 3f 53 02 00       	jmpq   344a5 <instr.bb_f161>
    f166:	e9 77 54 02 00       	jmpq   345e2 <instr.bb_f1e2>
    f16b:	ff                   	(bad)  
    f16c:	ff                   	(bad)  
    f16d:	e9 3f 53 02 00       	jmpq   344b1 <instr.bb_f16d>
    f172:	4c 89 ee             	mov    %r13,%rsi
    f175:	e8 a6 5c ff ff       	callq  4e20 <mbedtls_mpi_copy>
    f17a:	e9 6e 53 02 00       	jmpq   344ed <instr.bb_f17a>
    f17f:	0f 85 fb 04 00 00    	jne    f680 <ecp_mul_restartable_internal+0x9d0>
    f185:	e9 6e 53 02 00       	jmpq   344f8 <instr.bb_f185>
    f18a:	ff                   	(bad)  
    f18b:	e8 30 e8 ff ff       	callq  d9c0 <mbedtls_ecp_copy>
    f190:	e9 9d 53 02 00       	jmpq   34532 <instr.bb_f190>
    f195:	0f 85 e5 04 00 00    	jne    f680 <ecp_mul_restartable_internal+0x9d0>
    f19b:	e9 9d 53 02 00       	jmpq   3453d <instr.bb_f19b>
    f1a0:	01 00                	add    %eax,(%rax)
    f1a2:	00 00                	add    %al,(%rax)
    f1a4:	48 89 ef             	mov    %rbp,%rdi
    f1a7:	e8 e4 5d ff ff       	callq  4f90 <mbedtls_mpi_lset>
    f1ac:	e9 cc 53 02 00       	jmpq   3457d <instr.bb_f1ac>
    f1b1:	0f 85 c9 04 00 00    	jne    f680 <ecp_mul_restartable_internal+0x9d0>
    f1b7:	e9 cc 53 02 00       	jmpq   34588 <instr.bb_f1b7>
    f1bc:	f6 48 89 c7          	testb  $0xc7,-0x77(%rax)
    f1c0:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    f1c5:	e8 c6 5d ff ff       	callq  4f90 <mbedtls_mpi_lset>
    f1ca:	e9 fb 53 02 00       	jmpq   345ca <instr.bb_f1ca>
    f1cf:	0f 85 ab 04 00 00    	jne    f680 <ecp_mul_restartable_internal+0x9d0>
    f1d5:	e9 fb 53 02 00       	jmpq   345d5 <instr.bb_f1d5>
    f1da:	8d 6b 08             	lea    0x8(%rbx),%ebp
    f1dd:	e8 ae 59 ff ff       	callq  4b90 <mbedtls_mpi_free>
    f1e2:	eb 82                	jmp    f166 <ecp_mul_restartable_internal+0x4b6>
    f1e4:	0f 1f 40 00          	nopl   0x0(%rax)
    f1e8:	48 89 ea             	mov    %rbp,%rdx
    f1eb:	4c 89 fe             	mov    %r15,%rsi
    f1ee:	4c 89 ff             	mov    %r15,%rdi
    f1f1:	e8 da 64 ff ff       	callq  56d0 <mbedtls_mpi_sub_abs>
    f1f6:	85 c0                	test   %eax,%eax
    f1f8:	0f 85 08 07 00 00    	jne    f906 <ecp_mul_restartable_internal+0xc56>
    f1fe:	e9 ed 53 02 00       	jmpq   345f0 <instr.bb_f1fe>
    f203:	e9 f3 53 02 00       	jmpq   345fb <instr.bb_f209>
    f208:	ff                   	(bad)  
    f209:	eb f8                	jmp    f203 <ecp_mul_restartable_internal+0x553>
    f20b:	79 db                	jns    f1e8 <ecp_mul_restartable_internal+0x538>
    f20d:	e9 f1 53 02 00       	jmpq   34603 <instr.bb_f20d>
    f212:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    f217:	4c 89 fe             	mov    %r15,%rsi
    f21a:	48 89 df             	mov    %rbx,%rdi
    f21d:	e8 8e d5 ff ff       	callq  c7b0 <ecp_randomize_mxz>
    f222:	e9 20 54 02 00       	jmpq   34647 <instr.bb_f222>
    f227:	0f 85 53 04 00 00    	jne    f680 <ecp_mul_restartable_internal+0x9d0>
    f22d:	e9 20 54 02 00       	jmpq   34652 <instr.bb_f22d>
    f232:	90                   	nop
    f233:	90                   	nop
    f234:	90                   	nop
    f235:	90                   	nop
    f236:	90                   	nop
    f237:	90                   	nop
    f238:	90                   	nop
    f239:	90                   	nop
    f23a:	90                   	nop
    f23b:	90                   	nop
    f23c:	90                   	nop
    f23d:	90                   	nop
    f23e:	90                   	nop
    f23f:	90                   	nop
    f240:	90                   	nop
    f241:	90                   	nop
    f242:	90                   	nop
    f243:	90                   	nop
    f244:	90                   	nop
    f245:	90                   	nop
    f246:	90                   	nop
    f247:	90                   	nop
    f248:	90                   	nop
    f249:	90                   	nop
    f24a:	e9 2b 55 02 00       	jmpq   3477a <instr.bb_f2c8>
    f24f:	89 44 24 60          	mov    %eax,0x60(%rsp)
    f253:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    f258:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    f25d:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
    f262:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15
    f267:	e9 20 54 02 00       	jmpq   3468c <instr.bb_f267>
    f26c:	ff 0f                	decl   (%rdi)
    f26e:	84 a0 06 00 00 e9    	test   %ah,-0x16fffffa(%rax)
    f274:	20 54 02 00          	and    %dl,0x0(%rdx,%rax,1)
    f278:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    f27d:	e8 8e 5d ff ff       	callq  5010 <mbedtls_mpi_get_bit>
    f282:	e9 20 54 02 00       	jmpq   346a7 <instr.bb_f282>
    f287:	8b 74 24 30          	mov    0x30(%rsp),%esi
    f28b:	44 0f b6 e8          	movzbl %al,%r13d
    f28f:	44 89 ea             	mov    %r13d,%edx
    f292:	4c 89 f7             	mov    %r14,%rdi
    f295:	e8 e6 c3 ff ff       	callq  b680 <mbedtls_mpi_safe_cond_swap>
    f29a:	e9 4f 54 02 00       	jmpq   346ee <instr.bb_f29a>
    f29f:	03 00                	add    (%rax),%eax
    f2a1:	00 e9                	add    %ch,%cl
    f2a3:	4f 54                	rex.WRXB push %r12
    f2a5:	02 00                	add    (%rax),%al
    f2a7:	44 89 ea             	mov    %r13d,%edx
    f2aa:	4c 89 ff             	mov    %r15,%rdi
    f2ad:	e8 ce c3 ff ff       	callq  b680 <mbedtls_mpi_safe_cond_swap>
    f2b2:	e9 7e 54 02 00       	jmpq   34735 <instr.bb_f2b2>
    f2b7:	03 00                	add    (%rax),%eax
    f2b9:	00 e9                	add    %ch,%cl
    f2bb:	7e 54                	jle    f311 <ecp_mul_restartable_internal+0x661>
    f2bd:	02 00                	add    (%rax),%al
    f2bf:	f6 48 89 df          	testb  $0xdf,-0x77(%rax)
    f2c3:	e8 e8 65 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    f2c8:	eb 80                	jmp    f24a <ecp_mul_restartable_internal+0x59a>
    f2ca:	74 22                	je     f2ee <ecp_mul_restartable_internal+0x63e>
    f2cc:	e9 b1 54 02 00       	jmpq   34782 <instr.bb_f2cc>
    f2d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f2d8:	e9 b3 54 02 00       	jmpq   34790 <instr.bb_f2d8>
    f2dd:	e9 cf 54 02 00       	jmpq   347b1 <instr.bb_f2f9>
    f2e2:	ea                   	(bad)  
    f2e3:	63 ff                	movslq %edi,%edi
    f2e5:	ff                   	(bad)  
    f2e6:	e9 b3 54 02 00       	jmpq   3479e <instr.bb_f2e6>
    f2eb:	03 00                	add    (%rax),%eax
    f2ed:	00 e9                	add    %ch,%cl
    f2ef:	b3 54                	mov    $0x54,%bl
    f2f1:	02 00                	add    (%rax),%al
    f2f3:	e9 07 55 02 00       	jmpq   347ff <instr.bb_f314>
    f2f8:	ff                   	(bad)  
    f2f9:	eb e2                	jmp    f2dd <ecp_mul_restartable_internal+0x62d>
    f2fb:	79 db                	jns    f2d8 <ecp_mul_restartable_internal+0x628>
    f2fd:	e9 b7 54 02 00       	jmpq   347b9 <instr.bb_f2fd>
    f302:	01 00                	add    %eax,(%rax)
    f304:	00 48 8b             	add    %cl,-0x75(%rax)
    f307:	34 24                	xor    $0x24,%al
    f309:	4c 89 fa             	mov    %r15,%rdx
    f30c:	4c 89 e7             	mov    %r12,%rdi
    f30f:	e8 ac 65 ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    f314:	eb dd                	jmp    f2f3 <ecp_mul_restartable_internal+0x643>
    f316:	74 2c                	je     f344 <ecp_mul_restartable_internal+0x694>
    f318:	e9 ea 54 02 00       	jmpq   34807 <instr.bb_f318>
    f31d:	0f 1f 00             	nopl   (%rax)
    f320:	e9 eb 54 02 00       	jmpq   34810 <instr.bb_f320>
    f325:	e9 f0 54 02 00       	jmpq   3481a <instr.bb_f32a>
    f32a:	eb f9                	jmp    f325 <ecp_mul_restartable_internal+0x675>
    f32c:	74 21                	je     f34f <ecp_mul_restartable_internal+0x69f>
    f32e:	e9 ef 54 02 00       	jmpq   34822 <instr.bb_f32e>
    f333:	e9 5f 55 02 00       	jmpq   34897 <instr.bb_f369>
    f338:	74 65                	je     f39f <ecp_mul_restartable_internal+0x6ef>
    f33a:	ff                   	(bad)  
    f33b:	ff                   	(bad)  
    f33c:	e9 ef 54 02 00       	jmpq   34830 <instr.bb_f33c>
    f341:	03 00                	add    (%rax),%eax
    f343:	00 e9                	add    %ch,%cl
    f345:	ef                   	out    %eax,(%dx)
    f346:	54                   	push   %rsp
    f347:	02 00                	add    (%rax),%al
    f349:	00 00                	add    %al,(%rax)
    f34b:	85 f6                	test   %esi,%esi
    f34d:	78 d1                	js     f320 <ecp_mul_restartable_internal+0x670>
    f34f:	e9 fa 54 02 00       	jmpq   3484e <instr.bb_f34f>
    f354:	01 00                	add    %eax,(%rax)
    f356:	00 48 8b             	add    %cl,-0x75(%rax)
    f359:	54                   	push   %rsp
    f35a:	24 60                	and    $0x60,%al
    f35c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    f361:	4c 89 f7             	mov    %r14,%rdi
    f364:	e8 47 65 ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
    f369:	eb c8                	jmp    f333 <ecp_mul_restartable_internal+0x683>
    f36b:	74 21                	je     f38e <ecp_mul_restartable_internal+0x6de>
    f36d:	e9 2d 55 02 00       	jmpq   3489f <instr.bb_f36d>
    f372:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f378:	e9 33 55 02 00       	jmpq   348b0 <instr.bb_f378>
    f37d:	e9 4f 55 02 00       	jmpq   348d1 <instr.bb_f399>
    f382:	4a 63 ff             	rex.WX movslq %edi,%rdi
    f385:	ff                   	(bad)  
    f386:	e9 33 55 02 00       	jmpq   348be <instr.bb_f386>
    f38b:	02 00                	add    (%rax),%al
    f38d:	00 e9                	add    %ch,%cl
    f38f:	33 55 02             	xor    0x2(%rbp),%edx
    f392:	00 e9                	add    %ch,%cl
    f394:	b0 55                	mov    $0x55,%al
    f396:	02 00                	add    (%rax),%al
    f398:	ff                   	(bad)  
    f399:	eb e2                	jmp    f37d <ecp_mul_restartable_internal+0x6cd>
    f39b:	79 db                	jns    f378 <ecp_mul_restartable_internal+0x6c8>
    f39d:	e9 37 55 02 00       	jmpq   348d9 <instr.bb_f39d>
    f3a2:	01 00                	add    %eax,(%rax)
    f3a4:	00 48 8b             	add    %cl,-0x75(%rax)
    f3a7:	54                   	push   %rsp
    f3a8:	24 60                	and    $0x60,%al
    f3aa:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    f3af:	48 89 c7             	mov    %rax,%rdi
    f3b2:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    f3b7:	e8 04 65 ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    f3bc:	e9 66 55 02 00       	jmpq   34927 <instr.bb_f3bc>
    f3c1:	02 00                	add    (%rax),%al
    f3c3:	00 e9                	add    %ch,%cl
    f3c5:	66 55                	push   %bp
    f3c7:	02 00                	add    (%rax),%al
    f3c9:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    f3ce:	eb 24                	jmp    f3f4 <ecp_mul_restartable_internal+0x744>
    f3d0:	e9 69 55 02 00       	jmpq   3493e <instr.bb_f3d0>
    f3d5:	e8 86 61 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    f3da:	eb b7                	jmp    f393 <ecp_mul_restartable_internal+0x6e3>
    f3dc:	74 21                	je     f3ff <ecp_mul_restartable_internal+0x74f>
    f3de:	e9 6d 55 02 00       	jmpq   34950 <instr.bb_f3de>
    f3e3:	de 48 89             	fimuls -0x77(%rax)
    f3e6:	df e8                	fucomip %st(0),%st
    f3e8:	c4                   	(bad)  
    f3e9:	64 ff                	fs (bad) 
    f3eb:	ff                   	(bad)  
    f3ec:	e9 6d 55 02 00       	jmpq   3495e <instr.bb_f3ec>
    f3f1:	05 00 00 e9 6d       	add    $0x6de90000,%eax
    f3f6:	55                   	push   %rbp
    f3f7:	02 00                	add    (%rax),%al
    f3f9:	00 00                	add    %al,(%rax)
    f3fb:	85 c9                	test   %ecx,%ecx
    f3fd:	78 d1                	js     f3d0 <ecp_mul_restartable_internal+0x720>
    f3ff:	e9 78 55 02 00       	jmpq   3497c <instr.bb_f3ff>
    f404:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
    f409:	48 89 da             	mov    %rbx,%rdx
    f40c:	48 89 f7             	mov    %rsi,%rdi
    f40f:	e8 9c 65 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    f414:	e9 a7 55 02 00       	jmpq   349c0 <instr.bb_f414>
    f419:	02 00                	add    (%rax),%al
    f41b:	00 e9                	add    %ch,%cl
    f41d:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    f41e:	55                   	push   %rbp
    f41f:	02 00                	add    (%rax),%al
    f421:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
    f426:	e8 a5 cd ff ff       	callq  c1d0 <ecp_modp>
    f42b:	e9 a7 55 02 00       	jmpq   349d7 <instr.bb_f42b>
    f430:	02 00                	add    (%rax),%al
    f432:	00 e9                	add    %ch,%cl
    f434:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    f435:	55                   	push   %rbp
    f436:	02 00                	add    (%rax),%al
    f438:	f6 4c 89 f7 48       	testb  $0x48,-0x9(%rcx,%rcx,4)
    f43d:	83 05 f4 ec 01 00 01 	addl   $0x1,0x1ecf4(%rip)        # 2e138 <mul_count>
    f444:	e8 67 65 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    f449:	e9 d6 55 02 00       	jmpq   34a24 <instr.bb_f449>
    f44e:	02 00                	add    (%rax),%al
    f450:	00 e9                	add    %ch,%cl
    f452:	d6                   	(bad)  
    f453:	55                   	push   %rbp
    f454:	02 00                	add    (%rax),%al
    f456:	4c 89 f7             	mov    %r14,%rdi
    f459:	e8 72 cd ff ff       	callq  c1d0 <ecp_modp>
    f45e:	e9 d6 55 02 00       	jmpq   34a39 <instr.bb_f45e>
    f463:	01 00                	add    %eax,(%rax)
    f465:	00 e9                	add    %ch,%cl
    f467:	d6                   	(bad)  
    f468:	55                   	push   %rbp
    f469:	02 00                	add    (%rax),%al
    f46b:	de 48 89             	fimuls -0x77(%rax)
    f46e:	df 48 83             	fisttps -0x7d(%rax)
    f471:	05 c1 ec 01 00       	add    $0x1ecc1,%eax
    f476:	01 e8                	add    %ebp,%eax
    f478:	34 65                	xor    $0x65,%al
    f47a:	ff                   	(bad)  
    f47b:	ff                   	(bad)  
    f47c:	e9 05 56 02 00       	jmpq   34a86 <instr.bb_f47c>
    f481:	01 00                	add    %eax,(%rax)
    f483:	00 e9                	add    %ch,%cl
    f485:	05 56 02 00 48       	add    $0x48000256,%eax
    f48a:	89 df                	mov    %ebx,%edi
    f48c:	e8 3f cd ff ff       	callq  c1d0 <ecp_modp>
    f491:	e9 05 56 02 00       	jmpq   34a9b <instr.bb_f491>
    f496:	01 00                	add    %eax,(%rax)
    f498:	00 e9                	add    %ch,%cl
    f49a:	05 56 02 00 e9       	add    $0xe9000256,%eax
    f49f:	dc 56 02             	fcoml  0x2(%rsi)
    f4a2:	00 83 05 8e ec 01    	add    %al,0x1ec8e05(%rbx)
    f4a8:	00 01                	add    %al,(%rcx)
    f4aa:	e8 01 65 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    f4af:	e9 34 56 02 00       	jmpq   34ae8 <instr.bb_f4af>
    f4b4:	01 00                	add    %eax,(%rax)
    f4b6:	00 e9                	add    %ch,%cl
    f4b8:	34 56                	xor    $0x56,%al
    f4ba:	02 00                	add    (%rax),%al
    f4bc:	e9 d5 56 02 00       	jmpq   34b96 <instr.bb_f52a>
    f4c1:	cd ff                	int    $0xff
    f4c3:	ff                   	(bad)  
    f4c4:	e9 34 56 02 00       	jmpq   34afd <instr.bb_f4c4>
    f4c9:	01 00                	add    %eax,(%rax)
    f4cb:	00 e9                	add    %ch,%cl
    f4cd:	34 56                	xor    $0x56,%al
    f4cf:	02 00                	add    (%rax),%al
    f4d1:	89 e2                	mov    %esp,%edx
    f4d3:	48 89 de             	mov    %rbx,%rsi
    f4d6:	48 83 05 5a ec 01 00 	addq   $0x1,0x1ec5a(%rip)        # 2e138 <mul_count>
    f4dd:	01 
    f4de:	e8 cd 64 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
    f4e3:	e9 63 56 02 00       	jmpq   34b4b <instr.bb_f4e3>
    f4e8:	01 00                	add    %eax,(%rax)
    f4ea:	00 e9                	add    %ch,%cl
    f4ec:	63 56 02             	movslq 0x2(%rsi),%edx
    f4ef:	00 48 8b             	add    %cl,-0x75(%rax)
    f4f2:	3c 24                	cmp    $0x24,%al
    f4f4:	e8 d7 cc ff ff       	callq  c1d0 <ecp_modp>
    f4f9:	e9 63 56 02 00       	jmpq   34b61 <instr.bb_f4f9>
    f4fe:	01 00                	add    %eax,(%rax)
    f500:	00 e9                	add    %ch,%cl
    f502:	63 56 02             	movslq 0x2(%rsi),%edx
    f505:	00 de                	add    %bl,%dh
    f507:	48 89 df             	mov    %rbx,%rdi
    f50a:	48 83 05 26 ec 01 00 	addq   $0x1,0x1ec26(%rip)        # 2e138 <mul_count>
    f511:	01 
    f512:	e8 a9 63 ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    f517:	eb 85                	jmp    f49e <ecp_mul_restartable_internal+0x7ee>
    f519:	74 29                	je     f544 <ecp_mul_restartable_internal+0x894>
    f51b:	e9 67 56 02 00       	jmpq   34b87 <instr.bb_f51b>
    f520:	e9 67 56 02 00       	jmpq   34b8c <instr.bb_f520>
    f525:	e8 36 60 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    f52a:	eb 90                	jmp    f4bc <ecp_mul_restartable_internal+0x80c>
    f52c:	74 20                	je     f54e <ecp_mul_restartable_internal+0x89e>
    f52e:	e9 6b 56 02 00       	jmpq   34b9e <instr.bb_f52e>
    f533:	de 48 89             	fimuls -0x77(%rax)
    f536:	df e8                	fucomip %st(0),%st
    f538:	74 63                	je     f59d <ecp_mul_restartable_internal+0x8ed>
    f53a:	ff                   	(bad)  
    f53b:	ff                   	(bad)  
    f53c:	e9 6b 56 02 00       	jmpq   34bac <instr.bb_f53c>
    f541:	01 00                	add    %eax,(%rax)
    f543:	00 e9                	add    %ch,%cl
    f545:	6b 56 02 00          	imul   $0x0,0x2(%rsi),%edx
    f549:	00 00                	add    %al,(%rax)
    f54b:	00 78 d2             	add    %bh,-0x2e(%rax)
    f54e:	e9 78 56 02 00       	jmpq   34bcb <instr.bb_f54e>
    f553:	48 89 d9             	mov    %rbx,%rcx
    f556:	4c 89 fe             	mov    %r15,%rsi
    f559:	48 8d 57 20          	lea    0x20(%rdi),%rdx
    f55d:	e8 8e ce ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    f562:	e9 78 56 02 00       	jmpq   34bdf <instr.bb_f562>
    f567:	00 00                	add    %al,(%rax)
    f569:	00 e9                	add    %ch,%cl
    f56b:	78 56                	js     f5c3 <ecp_mul_restartable_internal+0x913>
    f56d:	02 00                	add    (%rax),%al
    f56f:	90                   	nop
    f570:	90                   	nop
    f571:	90                   	nop
    f572:	90                   	nop
    f573:	90                   	nop
    f574:	90                   	nop
    f575:	90                   	nop
    f576:	90                   	nop
    f577:	90                   	nop
    f578:	90                   	nop
    f579:	90                   	nop
    f57a:	90                   	nop
    f57b:	e9 54 57 02 00       	jmpq   34cd4 <instr.bb_f5f9>
    f580:	e9 78 56 02 00       	jmpq   34bfd <instr.bb_f580>
    f585:	00 00                	add    %al,(%rax)
    f587:	00 e9                	add    %ch,%cl
    f589:	78 56                	js     f5e1 <ecp_mul_restartable_internal+0x931>
    f58b:	02 00                	add    (%rax),%al
    f58d:	90                   	nop
    f58e:	90                   	nop
    f58f:	90                   	nop
    f590:	90                   	nop
    f591:	90                   	nop
    f592:	e9 87 57 02 00       	jmpq   34d1e <instr.bb_f610>
    f597:	e7 e8                	out    %eax,$0xe8
    f599:	13 d0                	adc    %eax,%edx
    f59b:	ff                   	(bad)  
    f59c:	ff                   	(bad)  
    f59d:	e9 78 56 02 00       	jmpq   34c1a <instr.bb_f59d>
    f5a2:	00 00                	add    %al,(%rax)
    f5a4:	00 e9                	add    %ch,%cl
    f5a6:	78 56                	js     f5fe <ecp_mul_restartable_internal+0x94e>
    f5a8:	02 00                	add    (%rax),%al
    f5aa:	e9 b7 57 02 00       	jmpq   34d66 <instr.bb_f625>
    f5af:	c1 48 89 c2          	rorl   $0xc2,-0x77(%rax)
    f5b3:	48 89 c6             	mov    %rax,%rsi
    f5b6:	e8 35 ce ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    f5bb:	e9 a7 56 02 00       	jmpq   34c67 <instr.bb_f5bb>
    f5c0:	00 00                	add    %al,(%rax)
    f5c2:	00 e9                	add    %ch,%cl
    f5c4:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    f5c5:	56                   	push   %rsi
    f5c6:	02 00                	add    (%rax),%al
    f5c8:	e9 b2 57 02 00       	jmpq   34d7f <instr.bb_f63a>
    f5cd:	4c 89 f1             	mov    %r14,%rcx
    f5d0:	4c 89 e7             	mov    %r12,%rdi
    f5d3:	4d 89 e6             	mov    %r12,%r14
    f5d6:	e8 a5 cd ff ff       	callq  c380 <mbedtls_mpi_sub_mod>
    f5db:	e9 a7 56 02 00       	jmpq   34c87 <instr.bb_f5db>
    f5e0:	00 00                	add    %al,(%rax)
    f5e2:	00 e9                	add    %ch,%cl
    f5e4:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    f5e5:	56                   	push   %rsi
    f5e6:	02 00                	add    (%rax),%al
    f5e8:	4c 89 f7             	mov    %r14,%rdi
    f5eb:	4c 89 e1             	mov    %r12,%rcx
    f5ee:	4c 89 e2             	mov    %r12,%rdx
    f5f1:	4c 89 e6             	mov    %r12,%rsi
    f5f4:	e8 f7 cd ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    f5f9:	eb 80                	jmp    f57b <ecp_mul_restartable_internal+0x8cb>
    f5fb:	75 63                	jne    f660 <ecp_mul_restartable_internal+0x9b0>
    f5fd:	e9 da 56 02 00       	jmpq   34cdc <instr.bb_f5fd>
    f602:	4c 89 e1             	mov    %r12,%rcx
    f605:	4c 89 e6             	mov    %r12,%rsi
    f608:	4c 89 f7             	mov    %r14,%rdi
    f60b:	e8 e0 cd ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    f610:	eb 80                	jmp    f592 <ecp_mul_restartable_internal+0x8e2>
    f612:	75 4c                	jne    f660 <ecp_mul_restartable_internal+0x9b0>
    f614:	e9 0d 57 02 00       	jmpq   34d26 <instr.bb_f614>
    f619:	da 4c 89 fe          	fimull -0x2(%rcx,%rcx,4)
    f61d:	4c 89 f7             	mov    %r14,%rdi
    f620:	e8 cb cd ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    f625:	eb 83                	jmp    f5aa <ecp_mul_restartable_internal+0x8fa>
    f627:	75 37                	jne    f660 <ecp_mul_restartable_internal+0x9b0>
    f629:	e9 40 57 02 00       	jmpq   34d6e <instr.bb_f629>
    f62e:	48 8b 3c 24          	mov    (%rsp),%rdi
    f632:	44 89 ea             	mov    %r13d,%edx
    f635:	e8 46 c0 ff ff       	callq  b680 <mbedtls_mpi_safe_cond_swap>
    f63a:	eb 8c                	jmp    f5c8 <ecp_mul_restartable_internal+0x918>
    f63c:	75 22                	jne    f660 <ecp_mul_restartable_internal+0x9b0>
    f63e:	e9 44 57 02 00       	jmpq   34d87 <instr.bb_f63e>
    f643:	e6 4c                	out    %al,$0x4c
    f645:	89 ff                	mov    %edi,%edi
    f647:	e8 34 c0 ff ff       	callq  b680 <mbedtls_mpi_safe_cond_swap>
    f64c:	e9 44 57 02 00       	jmpq   34d95 <instr.bb_f64c>
    f651:	01 85 c0 0f 84 0d    	add    %eax,0xd840fc0(%rbp)
    f657:	fc                   	cld    
    f658:	ff                   	(bad)  
    f659:	ff                   	(bad)  
    f65a:	e9 44 57 02 00       	jmpq   34da3 <instr.bb_f65a>
    f65f:	00 44 8b a4          	add    %al,-0x5c(%rbx,%rcx,4)
    f663:	24 88                	and    $0x88,%al
    f665:	00 00                	add    %al,(%rax)
    f667:	00 48 8b             	add    %cl,-0x75(%rax)
    f66a:	5c                   	pop    %rsp
    f66b:	24 38                	and    $0x38,%al
    f66d:	41 89 c6             	mov    %eax,%r14d
    f670:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    f675:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    f67a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f680:	e9 4b 57 02 00       	jmpq   34dd0 <instr.bb_f680>
    f685:	ce                   	(bad)  
    f686:	ff                   	(bad)  
    f687:	ff                   	(bad)  
    f688:	e9 4b 57 02 00       	jmpq   34dd8 <instr.bb_f688>
    f68d:	e8 fe 54 ff ff       	callq  4b90 <mbedtls_mpi_free>
    f692:	e9 4b 57 02 00       	jmpq   34de2 <instr.bb_f692>
    f697:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    f69c:	0f 1f 40 00          	nopl   0x0(%rax)
    f6a0:	e9 4b 57 02 00       	jmpq   34df0 <instr.bb_f6a0>
    f6a5:	c5 18 e8             	(bad)
    f6a8:	e4 54                	in     $0x54,%al
    f6aa:	ff                   	(bad)  
    f6ab:	ff                   	(bad)  
    f6ac:	e9 4b 57 02 00       	jmpq   34dfc <instr.bb_f6ac>
    f6b1:	e9 4f 57 02 00       	jmpq   34e05 <instr.bb_f6b1>
    f6b6:	1e                   	(bad)  
    f6b7:	02 00                	add    (%rax),%al
    f6b9:	00 e9                	add    %ch,%cl
    f6bb:	4f 57                	rex.WRXB push %r15
    f6bd:	02 00                	add    (%rax),%al
    f6bf:	0f 84 44 f6 ff ff    	je     ed09 <ecp_mul_restartable_internal+0x59>
    f6c5:	e9 4f 57 02 00       	jmpq   34e19 <instr.bb_f6c5>
    f6ca:	0f 85 90 f6 ff ff    	jne    ed60 <ecp_mul_restartable_internal+0xb0>
    f6d0:	e9 4f 57 02 00       	jmpq   34e24 <instr.bb_f6d0>
    f6d5:	f6 ff                	idiv   %bh
    f6d7:	ff 0f                	decl   (%rdi)
    f6d9:	1f                   	(bad)  
    f6da:	84 00                	test   %al,(%rax)
    f6dc:	00 00                	add    %al,(%rax)
    f6de:	00 00                	add    %al,(%rax)
    f6e0:	c7 84 24 88 00 00 00 	movl   $0x1,0x88(%rsp)
    f6e7:	01 00 00 00 
    f6eb:	48 83 fa 05          	cmp    $0x5,%rdx
    f6ef:	48 19 f6             	sbb    %rsi,%rsi
    f6f2:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    f6f6:	48 83 c6 04          	add    $0x4,%rsi
    f6fa:	48 83 fa 05          	cmp    $0x5,%rdx
    f6fe:	19 c0                	sbb    %eax,%eax
    f700:	83 e0 fa             	and    $0xfffffffa,%eax
    f703:	83 c0 08             	add    $0x8,%eax
    f706:	48 83 fa 05          	cmp    $0x5,%rdx
    f70a:	88 44 24 38          	mov    %al,0x38(%rsp)
    f70e:	19 c0                	sbb    %eax,%eax
    f710:	83 e0 fa             	and    $0xfffffffa,%eax
    f713:	83 c0 08             	add    $0x8,%eax
    f716:	48 83 fa 05          	cmp    $0x5,%rdx
    f71a:	89 44 24 30          	mov    %eax,0x30(%rsp)
    f71e:	19 c0                	sbb    %eax,%eax
    f720:	83 e0 fe             	and    $0xfffffffe,%eax
    f723:	83 c0 03             	add    $0x3,%eax
    f726:	48 83 fa 05          	cmp    $0x5,%rdx
    f72a:	89 44 24 60          	mov    %eax,0x60(%rsp)
    f72e:	19 c0                	sbb    %eax,%eax
    f730:	83 e0 fe             	and    $0xfffffffe,%eax
    f733:	83 c0 04             	add    $0x4,%eax
    f736:	89 44 24 48          	mov    %eax,0x48(%rsp)
    f73a:	e9 33 f9 ff ff       	jmpq   f072 <ecp_mul_restartable_internal+0x3c2>
    f73f:	90                   	nop
    f740:	48 3b ab e8 00 00 00 	cmp    0xe8(%rbx),%rbp
    f747:	0f 85 4d f8 ff ff    	jne    ef9a <ecp_mul_restartable_internal+0x2ea>
    f74d:	e9 80 f8 ff ff       	jmpq   efd2 <ecp_mul_restartable_internal+0x322>
    f752:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f758:	44 8b 64 24 60       	mov    0x60(%rsp),%r12d
    f75d:	48 8d bc 24 00 01 00 	lea    0x100(%rsp),%rdi
    f764:	00 
    f765:	0f b6 74 24 38       	movzbl 0x38(%rsp),%esi
    f76a:	31 d2                	xor    %edx,%edx
    f76c:	b8 01 00 00 00       	mov    $0x1,%eax
    f771:	48 89 bc 24 80 00 00 	mov    %rdi,0x80(%rsp)
    f778:	00 
    f779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f780:	0f b6 c8             	movzbl %al,%ecx
    f783:	48 83 c2 01          	add    $0x1,%rdx
    f787:	01 c0                	add    %eax,%eax
    f789:	48 8d 0c c9          	lea    (%rcx,%rcx,8),%rcx
    f78d:	48 8d 4c cd 00       	lea    0x0(%rbp,%rcx,8),%rcx
    f792:	48 89 4c d7 f8       	mov    %rcx,-0x8(%rdi,%rdx,8)
    f797:	40 38 f0             	cmp    %sil,%al
    f79a:	72 e4                	jb     f780 <ecp_mul_restartable_internal+0xad0>
    f79c:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
    f7a3:	00 
    f7a4:	48 89 df             	mov    %rbx,%rdi
    f7a7:	e8 54 d4 ff ff       	callq  cc00 <ecp_normalize_jac_many>
    f7ac:	41 89 c6             	mov    %eax,%r14d
    f7af:	85 c0                	test   %eax,%eax
    f7b1:	0f 85 64 f7 ff ff    	jne    ef1b <ecp_mul_restartable_internal+0x26b>
    f7b7:	c6 44 24 60 01       	movb   $0x1,0x60(%rsp)
    f7bc:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    f7c1:	48 89 6c 24 78       	mov    %rbp,0x78(%rsp)
    f7c6:	44 89 a4 24 8c 00 00 	mov    %r12d,0x8c(%rsp)
    f7cd:	00 
    f7ce:	44 0f b6 64 24 60    	movzbl 0x60(%rsp),%r12d
    f7d4:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    f7d9:	4f 8d 2c e4          	lea    (%r12,%r12,8),%r13
    f7dd:	49 c1 e5 03          	shl    $0x3,%r13
    f7e1:	4e 8d 3c 28          	lea    (%rax,%r13,1),%r15
    f7e5:	4a 8d 6c 28 b8       	lea    -0x48(%rax,%r13,1),%rbp
    f7ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f7f0:	49 8d 74 2d 00       	lea    0x0(%r13,%rbp,1),%rsi
    f7f5:	4d 89 f0             	mov    %r14,%r8
    f7f8:	4c 89 f9             	mov    %r15,%rcx
    f7fb:	48 89 ea             	mov    %rbp,%rdx
    f7fe:	48 89 df             	mov    %rbx,%rdi
    f801:	e8 5a e2 ff ff       	callq  da60 <ecp_add_mixed>
    f806:	85 c0                	test   %eax,%eax
    f808:	0f 85 b2 00 00 00    	jne    f8c0 <ecp_mul_restartable_internal+0xc10>
    f80e:	48 83 ed 48          	sub    $0x48,%rbp
    f812:	49 83 ec 01          	sub    $0x1,%r12
    f816:	75 d8                	jne    f7f0 <ecp_mul_restartable_internal+0xb40>
    f818:	d0 64 24 60          	shlb   0x60(%rsp)
    f81c:	0f b6 44 24 60       	movzbl 0x60(%rsp),%eax
    f821:	3a 44 24 38          	cmp    0x38(%rsp),%al
    f825:	72 a7                	jb     f7ce <ecp_mul_restartable_internal+0xb1e>
    f827:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
    f82c:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    f831:	b8 01 00 00 00       	mov    $0x1,%eax
    f836:	44 8b a4 24 8c 00 00 	mov    0x8c(%rsp),%r12d
    f83d:	00 
    f83e:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
    f845:	00 
    f846:	48 8d 55 48          	lea    0x48(%rbp),%rdx
    f84a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f850:	48 89 54 c1 f8       	mov    %rdx,-0x8(%rcx,%rax,8)
    f855:	48 83 c0 01          	add    $0x1,%rax
    f859:	48 83 c2 48          	add    $0x48,%rdx
    f85d:	48 39 f0             	cmp    %rsi,%rax
    f860:	72 ee                	jb     f850 <ecp_mul_restartable_internal+0xba0>
    f862:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    f867:	80 7c 24 38 01       	cmpb   $0x1,0x38(%rsp)
    f86c:	48 89 df             	mov    %rbx,%rdi
    f86f:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
    f876:	00 
    f877:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    f87b:	b8 01 00 00 00       	mov    $0x1,%eax
    f880:	48 0f 46 d0          	cmovbe %rax,%rdx
    f884:	e8 77 d3 ff ff       	callq  cc00 <ecp_normalize_jac_many>
    f889:	41 89 c6             	mov    %eax,%r14d
    f88c:	85 c0                	test   %eax,%eax
    f88e:	0f 85 87 f6 ff ff    	jne    ef1b <ecp_mul_restartable_internal+0x26b>
    f894:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
    f899:	4c 8d 7d 30          	lea    0x30(%rbp),%r15
    f89d:	4d 01 fd             	add    %r15,%r13
    f8a0:	4c 89 ff             	mov    %r15,%rdi
    f8a3:	49 83 c7 48          	add    $0x48,%r15
    f8a7:	e8 e4 52 ff ff       	callq  4b90 <mbedtls_mpi_free>
    f8ac:	4d 39 fd             	cmp    %r15,%r13
    f8af:	75 ef                	jne    f8a0 <ecp_mul_restartable_internal+0xbf0>
    f8b1:	e9 65 f6 ff ff       	jmpq   ef1b <ecp_mul_restartable_internal+0x26b>
    f8b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f8bd:	00 00 00 
    f8c0:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
    f8c5:	44 8b a4 24 8c 00 00 	mov    0x8c(%rsp),%r12d
    f8cc:	00 
    f8cd:	41 89 c6             	mov    %eax,%r14d
    f8d0:	e9 46 f6 ff ff       	jmpq   ef1b <ecp_mul_restartable_internal+0x26b>
    f8d5:	0f 1f 00             	nopl   (%rax)
    f8d8:	45 89 f4             	mov    %r14d,%r12d
    f8db:	e9 29 f4 ff ff       	jmpq   ed09 <ecp_mul_restartable_internal+0x59>
    f8e0:	48 8d 42 01          	lea    0x1(%rdx),%rax
    f8e4:	c6 44 24 38 02       	movb   $0x2,0x38(%rsp)
    f8e9:	48 d1 e8             	shr    %rax
    f8ec:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
    f8f3:	00 
    f8f4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f8f9:	c7 44 24 48 02 00 00 	movl   $0x2,0x48(%rsp)
    f900:	00 
    f901:	e9 4b f6 ff ff       	jmpq   ef51 <ecp_mul_restartable_internal+0x2a1>
    f906:	41 89 c6             	mov    %eax,%r14d
    f909:	e9 72 fd ff ff       	jmpq   f680 <ecp_mul_restartable_internal+0x9d0>
    f90e:	e8 5d 49 ff ff       	callq  4270 <__stack_chk_fail@plt>
    f913:	e9 18 55 02 00       	jmpq   34e30 <instr.bb_f913>
    f918:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    f91d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    f922:	48 8b 34 24          	mov    (%rsp),%rsi
    f926:	48 89 df             	mov    %rbx,%rdi
    f929:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    f92e:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    f933:	44 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12d
    f93a:	00 
    f93b:	e8 70 ce ff ff       	callq  c7b0 <ecp_randomize_mxz>
    f940:	e9 47 55 02 00       	jmpq   34e8c <instr.bb_f940>
    f945:	0f 85 35 fd ff ff    	jne    f680 <ecp_mul_restartable_internal+0x9d0>
    f94b:	e9 47 55 02 00       	jmpq   34e97 <instr.bb_f94b>
    f950:	6c                   	insb   (%dx),%es:(%rdi)
    f951:	24 68                	and    $0x68,%al
    f953:	48 89 ee             	mov    %rbp,%rsi
    f956:	48 89 ef             	mov    %rbp,%rdi
    f959:	e8 f2 8b ff ff       	callq  8550 <mbedtls_mpi_inv_mod>
    f95e:	e9 76 55 02 00       	jmpq   34ed9 <instr.bb_f95e>
    f963:	0f 85 17 fd ff ff    	jne    f680 <ecp_mul_restartable_internal+0x9d0>
    f969:	e9 76 55 02 00       	jmpq   34ee4 <instr.bb_f969>
    f96e:	89 e9                	mov    %ebp,%ecx
    f970:	48 89 df             	mov    %rbx,%rdi
    f973:	48 89 d6             	mov    %rdx,%rsi
    f976:	e8 75 ca ff ff       	callq  c3f0 <mbedtls_mpi_mul_mod>
    f97b:	e9 a5 55 02 00       	jmpq   34f25 <instr.bb_f97b>
    f980:	0f 85 fa fc ff ff    	jne    f680 <ecp_mul_restartable_internal+0x9d0>
    f986:	e9 a5 55 02 00       	jmpq   34f30 <instr.bb_f986>
    f98b:	48 89 ef             	mov    %rbp,%rdi
    f98e:	e8 fd 55 ff ff       	callq  4f90 <mbedtls_mpi_lset>
    f993:	e9 a5 55 02 00       	jmpq   34f3d <instr.bb_f993>
    f998:	fc                   	cld    
    f999:	ff                   	(bad)  
    f99a:	ff 41 89             	incl   -0x77(%rcx)
    f99d:	c6                   	(bad)  
    f99e:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    f9a3:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    f9a8:	44 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12d
    f9af:	00 
    f9b0:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    f9b5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    f9ba:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    f9bf:	e9 bc fc ff ff       	jmpq   f680 <ecp_mul_restartable_internal+0x9d0>
    f9c4:	48 83 c2 03          	add    $0x3,%rdx
    f9c8:	c7 44 24 48 04 00 00 	movl   $0x4,0x48(%rsp)
    f9cf:	00 
    f9d0:	48 c1 ea 02          	shr    $0x2,%rdx
    f9d4:	c7 44 24 60 03 00 00 	movl   $0x3,0x60(%rsp)
    f9db:	00 
    f9dc:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    f9e1:	c7 44 24 30 08 00 00 	movl   $0x8,0x30(%rsp)
    f9e8:	00 
    f9e9:	c6 44 24 38 08       	movb   $0x8,0x38(%rsp)
    f9ee:	e9 9d f6 ff ff       	jmpq   f090 <ecp_mul_restartable_internal+0x3e0>
    f9f3:	41 be 80 b2 ff ff    	mov    $0xffffb280,%r14d
    f9f9:	e9 d4 f5 ff ff       	jmpq   efd2 <ecp_mul_restartable_internal+0x322>
    f9fe:	48 83 c2 01          	add    $0x1,%rdx
    fa02:	c6 44 24 38 02       	movb   $0x2,0x38(%rsp)
    fa07:	48 d1 ea             	shr    %rdx
    fa0a:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
    fa11:	00 
    fa12:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    fa17:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
    fa1e:	00 00 00 00 
    fa22:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
    fa29:	00 
    fa2a:	c7 44 24 48 02 00 00 	movl   $0x2,0x48(%rsp)
    fa31:	00 
    fa32:	e9 8d f3 ff ff       	jmpq   edc4 <ecp_mul_restartable_internal+0x114>
    fa37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fa3e:	00 00 

000000000000fa40 <mbedtls_ecp_mul_restartable>:
    fa40:	e9 0b 55 02 00       	jmpq   34f50 <mbedtls_ecp_mul_restartable.instr.bb_fa40>
    fa45:	85 c0                	test   %eax,%eax
    fa47:	74 05                	je     fa4e <mbedtls_ecp_mul_restartable+0xe>
    fa49:	e9 12 55 02 00       	jmpq   34f60 <instr.bb_fa49>
    fa4e:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    fa53:	c3                   	retq   
    fa54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    fa5b:	00 00 00 00 
    fa5f:	90                   	nop

000000000000fa60 <mbedtls_ecp_mul>:
    fa60:	f3 0f 1e fa          	endbr64 
    fa64:	4d 85 c0             	test   %r8,%r8
    fa67:	74 10                	je     fa79 <mbedtls_ecp_mul+0x19>
    fa69:	48 83 ec 10          	sub    $0x10,%rsp
    fa6d:	6a 00                	pushq  $0x0
    fa6f:	e8 3c f2 ff ff       	callq  ecb0 <ecp_mul_restartable_internal>
    fa74:	48 83 c4 18          	add    $0x18,%rsp
    fa78:	c3                   	retq   
    fa79:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    fa7e:	c3                   	retq   
    fa7f:	90                   	nop

000000000000fa80 <mbedtls_ecp_mul_shortcuts>:
    fa80:	41 57                	push   %r15
    fa82:	49 89 ff             	mov    %rdi,%r15
    fa85:	41 56                	push   %r14
    fa87:	49 89 ce             	mov    %rcx,%r14
    fa8a:	41 55                	push   %r13
    fa8c:	49 89 f5             	mov    %rsi,%r13
    fa8f:	41 54                	push   %r12
    fa91:	49 89 d4             	mov    %rdx,%r12
    fa94:	55                   	push   %rbp
    fa95:	53                   	push   %rbx
    fa96:	4c 89 c3             	mov    %r8,%rbx
    fa99:	48 83 ec 28          	sub    $0x28,%rsp
    fa9d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    faa4:	00 00 
    faa6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    faab:	31 c0                	xor    %eax,%eax
    faad:	48 89 e5             	mov    %rsp,%rbp
    fab0:	48 89 ef             	mov    %rbp,%rdi
    fab3:	e8 b8 50 ff ff       	callq  4b70 <mbedtls_mpi_init>
    fab8:	31 f6                	xor    %esi,%esi
    faba:	4c 89 e7             	mov    %r12,%rdi
    fabd:	e8 9e 5a ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    fac2:	85 c0                	test   %eax,%eax
    fac4:	75 4a                	jne    fb10 <mbedtls_ecp_mul_shortcuts+0x90>
    fac6:	4c 89 f6             	mov    %r14,%rsi
    fac9:	4c 89 ff             	mov    %r15,%rdi
    facc:	e8 8f ee ff ff       	callq  e960 <mbedtls_ecp_check_pubkey>
    fad1:	41 89 c4             	mov    %eax,%r12d
    fad4:	85 c0                	test   %eax,%eax
    fad6:	0f 84 f4 00 00 00    	je     fbd0 <mbedtls_ecp_mul_shortcuts+0x150>
    fadc:	48 89 ef             	mov    %rbp,%rdi
    fadf:	e8 ac 50 ff ff       	callq  4b90 <mbedtls_mpi_free>
    fae4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fae9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    faf0:	00 00 
    faf2:	0f 85 0e 01 00 00    	jne    fc06 <mbedtls_ecp_mul_shortcuts+0x186>
    faf8:	48 83 c4 28          	add    $0x28,%rsp
    fafc:	44 89 e0             	mov    %r12d,%eax
    faff:	5b                   	pop    %rbx
    fb00:	5d                   	pop    %rbp
    fb01:	41 5c                	pop    %r12
    fb03:	41 5d                	pop    %r13
    fb05:	41 5e                	pop    %r14
    fb07:	41 5f                	pop    %r15
    fb09:	c3                   	retq   
    fb0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fb10:	be 01 00 00 00       	mov    $0x1,%esi
    fb15:	4c 89 e7             	mov    %r12,%rdi
    fb18:	e8 43 5a ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    fb1d:	85 c0                	test   %eax,%eax
    fb1f:	75 27                	jne    fb48 <mbedtls_ecp_mul_shortcuts+0xc8>
    fb21:	4c 89 f6             	mov    %r14,%rsi
    fb24:	4c 89 ff             	mov    %r15,%rdi
    fb27:	e8 34 ee ff ff       	callq  e960 <mbedtls_ecp_check_pubkey>
    fb2c:	41 89 c4             	mov    %eax,%r12d
    fb2f:	85 c0                	test   %eax,%eax
    fb31:	75 a9                	jne    fadc <mbedtls_ecp_mul_shortcuts+0x5c>
    fb33:	4c 89 f6             	mov    %r14,%rsi
    fb36:	4c 89 ef             	mov    %r13,%rdi
    fb39:	e8 82 de ff ff       	callq  d9c0 <mbedtls_ecp_copy>
    fb3e:	41 89 c4             	mov    %eax,%r12d
    fb41:	eb 99                	jmp    fadc <mbedtls_ecp_mul_shortcuts+0x5c>
    fb43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fb48:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    fb4f:	4c 89 e7             	mov    %r12,%rdi
    fb52:	e8 09 5a ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    fb57:	85 c0                	test   %eax,%eax
    fb59:	0f 85 81 00 00 00    	jne    fbe0 <mbedtls_ecp_mul_shortcuts+0x160>
    fb5f:	4c 89 f6             	mov    %r14,%rsi
    fb62:	4c 89 ff             	mov    %r15,%rdi
    fb65:	e8 f6 ed ff ff       	callq  e960 <mbedtls_ecp_check_pubkey>
    fb6a:	41 89 c4             	mov    %eax,%r12d
    fb6d:	85 c0                	test   %eax,%eax
    fb6f:	0f 85 67 ff ff ff    	jne    fadc <mbedtls_ecp_mul_shortcuts+0x5c>
    fb75:	4c 89 f6             	mov    %r14,%rsi
    fb78:	4c 89 ef             	mov    %r13,%rdi
    fb7b:	e8 40 de ff ff       	callq  d9c0 <mbedtls_ecp_copy>
    fb80:	41 89 c4             	mov    %eax,%r12d
    fb83:	85 c0                	test   %eax,%eax
    fb85:	0f 85 51 ff ff ff    	jne    fadc <mbedtls_ecp_mul_shortcuts+0x5c>
    fb8b:	49 83 c5 18          	add    $0x18,%r13
    fb8f:	31 f6                	xor    %esi,%esi
    fb91:	4c 89 ef             	mov    %r13,%rdi
    fb94:	e8 c7 59 ff ff       	callq  5560 <mbedtls_mpi_cmp_int>
    fb99:	49 8d 77 08          	lea    0x8(%r15),%rsi
    fb9d:	4c 89 ea             	mov    %r13,%rdx
    fba0:	48 89 ef             	mov    %rbp,%rdi
    fba3:	89 c3                	mov    %eax,%ebx
    fba5:	e8 16 5d ff ff       	callq  58c0 <mbedtls_mpi_sub_mpi>
    fbaa:	41 89 c4             	mov    %eax,%r12d
    fbad:	85 c0                	test   %eax,%eax
    fbaf:	0f 85 27 ff ff ff    	jne    fadc <mbedtls_ecp_mul_shortcuts+0x5c>
    fbb5:	31 d2                	xor    %edx,%edx
    fbb7:	85 db                	test   %ebx,%ebx
    fbb9:	48 89 ee             	mov    %rbp,%rsi
    fbbc:	4c 89 ef             	mov    %r13,%rdi
    fbbf:	0f 95 c2             	setne  %dl
    fbc2:	e8 09 ba ff ff       	callq  b5d0 <mbedtls_mpi_safe_cond_assign>
    fbc7:	41 89 c4             	mov    %eax,%r12d
    fbca:	e9 0d ff ff ff       	jmpq   fadc <mbedtls_ecp_mul_shortcuts+0x5c>
    fbcf:	90                   	nop
    fbd0:	4c 89 ef             	mov    %r13,%rdi
    fbd3:	e8 48 de ff ff       	callq  da20 <mbedtls_ecp_set_zero>
    fbd8:	41 89 c4             	mov    %eax,%r12d
    fbdb:	e9 fc fe ff ff       	jmpq   fadc <mbedtls_ecp_mul_shortcuts+0x5c>
    fbe0:	48 83 ec 08          	sub    $0x8,%rsp
    fbe4:	4c 89 e2             	mov    %r12,%rdx
    fbe7:	45 31 c9             	xor    %r9d,%r9d
    fbea:	45 31 c0             	xor    %r8d,%r8d
    fbed:	53                   	push   %rbx
    fbee:	4c 89 f1             	mov    %r14,%rcx
    fbf1:	4c 89 ee             	mov    %r13,%rsi
    fbf4:	4c 89 ff             	mov    %r15,%rdi
    fbf7:	e8 b4 f0 ff ff       	callq  ecb0 <ecp_mul_restartable_internal>
    fbfc:	41 89 c4             	mov    %eax,%r12d
    fbff:	58                   	pop    %rax
    fc00:	5a                   	pop    %rdx
    fc01:	e9 d6 fe ff ff       	jmpq   fadc <mbedtls_ecp_mul_shortcuts+0x5c>
    fc06:	e8 65 46 ff ff       	callq  4270 <__stack_chk_fail@plt>
    fc0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc10 <mbedtls_ecp_muladd_restartable.part.0>:
    fc10:	41 57                	push   %r15
    fc12:	41 56                	push   %r14
    fc14:	41 55                	push   %r13
    fc16:	49 89 fd             	mov    %rdi,%r13
    fc19:	41 54                	push   %r12
    fc1b:	55                   	push   %rbp
    fc1c:	53                   	push   %rbx
    fc1d:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    fc24:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    fc29:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
    fc2e:	48 8d 9c 24 80 00 00 	lea    0x80(%rsp),%rbx
    fc35:	00 
    fc36:	4c 8b bc 24 30 01 00 	mov    0x130(%rsp),%r15
    fc3d:	00 
    fc3e:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    fc43:	4c 89 f7             	mov    %r14,%rdi
    fc46:	49 89 dc             	mov    %rbx,%r12
    fc49:	48 8d ac 24 e0 00 00 	lea    0xe0(%rsp),%rbp
    fc50:	00 
    fc51:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    fc56:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    fc5b:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    fc60:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fc67:	00 00 
    fc69:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
    fc70:	00 
    fc71:	31 c0                	xor    %eax,%eax
    fc73:	e8 28 db ff ff       	callq  d7a0 <mbedtls_ecp_point_init>
    fc78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fc7f:	00 
    fc80:	4c 89 e7             	mov    %r12,%rdi
    fc83:	49 83 c4 18          	add    $0x18,%r12
    fc87:	e8 e4 4e ff ff       	callq  4b70 <mbedtls_mpi_init>
    fc8c:	49 39 ec             	cmp    %rbp,%r12
    fc8f:	75 ef                	jne    fc80 <mbedtls_ecp_muladd_restartable.part.0+0x70>
    fc91:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    fc96:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    fc9b:	4d 89 f8             	mov    %r15,%r8
    fc9e:	4c 89 f6             	mov    %r14,%rsi
    fca1:	4c 89 ef             	mov    %r13,%rdi
    fca4:	e8 d7 fd ff ff       	callq  fa80 <mbedtls_ecp_mul_shortcuts>
    fca9:	41 89 c4             	mov    %eax,%r12d
    fcac:	85 c0                	test   %eax,%eax
    fcae:	74 48                	je     fcf8 <mbedtls_ecp_muladd_restartable.part.0+0xe8>
    fcb0:	48 89 df             	mov    %rbx,%rdi
    fcb3:	48 83 c3 18          	add    $0x18,%rbx
    fcb7:	e8 d4 4e ff ff       	callq  4b90 <mbedtls_mpi_free>
    fcbc:	48 39 eb             	cmp    %rbp,%rbx
    fcbf:	75 ef                	jne    fcb0 <mbedtls_ecp_muladd_restartable.part.0+0xa0>
    fcc1:	4c 89 f7             	mov    %r14,%rdi
    fcc4:	e8 57 c8 ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
    fcc9:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
    fcd0:	00 
    fcd1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fcd8:	00 00 
    fcda:	75 72                	jne    fd4e <mbedtls_ecp_muladd_restartable.part.0+0x13e>
    fcdc:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
    fce3:	44 89 e0             	mov    %r12d,%eax
    fce6:	5b                   	pop    %rbx
    fce7:	5d                   	pop    %rbp
    fce8:	41 5c                	pop    %r12
    fcea:	41 5d                	pop    %r13
    fcec:	41 5e                	pop    %r14
    fcee:	41 5f                	pop    %r15
    fcf0:	c3                   	retq   
    fcf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fcf8:	4d 89 f8             	mov    %r15,%r8
    fcfb:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
    fd00:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    fd05:	4c 89 ef             	mov    %r13,%rdi
    fd08:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    fd0d:	4c 89 fe             	mov    %r15,%rsi
    fd10:	e8 6b fd ff ff       	callq  fa80 <mbedtls_ecp_mul_shortcuts>
    fd15:	41 89 c4             	mov    %eax,%r12d
    fd18:	85 c0                	test   %eax,%eax
    fd1a:	75 94                	jne    fcb0 <mbedtls_ecp_muladd_restartable.part.0+0xa0>
    fd1c:	49 89 d8             	mov    %rbx,%r8
    fd1f:	4c 89 f9             	mov    %r15,%rcx
    fd22:	4c 89 f2             	mov    %r14,%rdx
    fd25:	4c 89 fe             	mov    %r15,%rsi
    fd28:	4c 89 ef             	mov    %r13,%rdi
    fd2b:	e8 30 dd ff ff       	callq  da60 <ecp_add_mixed>
    fd30:	41 89 c4             	mov    %eax,%r12d
    fd33:	85 c0                	test   %eax,%eax
    fd35:	0f 85 75 ff ff ff    	jne    fcb0 <mbedtls_ecp_muladd_restartable.part.0+0xa0>
    fd3b:	4c 89 fe             	mov    %r15,%rsi
    fd3e:	4c 89 ef             	mov    %r13,%rdi
    fd41:	e8 4a cd ff ff       	callq  ca90 <ecp_normalize_jac>
    fd46:	41 89 c4             	mov    %eax,%r12d
    fd49:	e9 62 ff ff ff       	jmpq   fcb0 <mbedtls_ecp_muladd_restartable.part.0+0xa0>
    fd4e:	e8 1d 45 ff ff       	callq  4270 <__stack_chk_fail@plt>
    fd53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    fd5a:	00 00 00 00 
    fd5e:	66 90                	xchg   %ax,%ax

000000000000fd60 <mbedtls_ecp_muladd_restartable>:
    fd60:	f3 0f 1e fa          	endbr64 
    fd64:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    fd69:	74 15                	je     fd80 <mbedtls_ecp_muladd_restartable+0x20>
    fd6b:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    fd70:	74 0e                	je     fd80 <mbedtls_ecp_muladd_restartable+0x20>
    fd72:	e9 99 fe ff ff       	jmpq   fc10 <mbedtls_ecp_muladd_restartable.part.0>
    fd77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fd7e:	00 00 
    fd80:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    fd85:	c3                   	retq   
    fd86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fd8d:	00 00 00 

000000000000fd90 <mbedtls_ecp_muladd>:
    fd90:	f3 0f 1e fa          	endbr64 
    fd94:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    fd99:	74 1d                	je     fdb8 <mbedtls_ecp_muladd+0x28>
    fd9b:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    fda0:	74 16                	je     fdb8 <mbedtls_ecp_muladd+0x28>
    fda2:	48 83 ec 10          	sub    $0x10,%rsp
    fda6:	6a 00                	pushq  $0x0
    fda8:	e8 63 fe ff ff       	callq  fc10 <mbedtls_ecp_muladd_restartable.part.0>
    fdad:	48 83 c4 18          	add    $0x18,%rsp
    fdb1:	c3                   	retq   
    fdb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fdb8:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
    fdbd:	c3                   	retq   
    fdbe:	66 90                	xchg   %ax,%ax

000000000000fdc0 <self_test_point.constprop.0>:
    fdc0:	41 57                	push   %r15
    fdc2:	45 31 ff             	xor    %r15d,%r15d
    fdc5:	41 56                	push   %r14
    fdc7:	4d 89 c6             	mov    %r8,%r14
    fdca:	41 55                	push   %r13
    fdcc:	49 89 d5             	mov    %rdx,%r13
    fdcf:	41 54                	push   %r12
    fdd1:	49 89 f4             	mov    %rsi,%r12
    fdd4:	be 10 00 00 00       	mov    $0x10,%esi
    fdd9:	55                   	push   %rbp
    fdda:	4c 89 cd             	mov    %r9,%rbp
    fddd:	53                   	push   %rbx
    fdde:	48 89 cb             	mov    %rcx,%rbx
    fde1:	48 83 ec 28          	sub    $0x28,%rsp
    fde5:	49 8b 11             	mov    (%r9),%rdx
    fde8:	48 c7 05 55 e3 01 00 	movq   $0x0,0x1e355(%rip)        # 2e148 <add_count>
    fdef:	00 00 00 00 
    fdf3:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    fdf7:	48 89 cf             	mov    %rcx,%rdi
    fdfa:	48 c7 05 3b e3 01 00 	movq   $0x0,0x1e33b(%rip)        # 2e140 <dbl_count>
    fe01:	00 00 00 00 
    fe05:	48 c7 05 28 e3 01 00 	movq   $0x0,0x1e328(%rip)        # 2e138 <mul_count>
    fe0c:	00 00 00 00 
    fe10:	e8 4b 5e ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    fe15:	41 89 c0             	mov    %eax,%r8d
    fe18:	85 c0                	test   %eax,%eax
    fe1a:	74 24                	je     fe40 <self_test_point.constprop.0+0x80>
    fe1c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    fe20:	85 c0                	test   %eax,%eax
    fe22:	0f 85 38 01 00 00    	jne    ff60 <self_test_point.constprop.0+0x1a0>
    fe28:	48 83 c4 28          	add    $0x28,%rsp
    fe2c:	44 89 c0             	mov    %r8d,%eax
    fe2f:	5b                   	pop    %rbx
    fe30:	5d                   	pop    %rbp
    fe31:	41 5c                	pop    %r12
    fe33:	41 5d                	pop    %r13
    fe35:	41 5e                	pop    %r14
    fe37:	41 5f                	pop    %r15
    fe39:	c3                   	retq   
    fe3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fe40:	48 83 ec 08          	sub    $0x8,%rsp
    fe44:	45 31 c9             	xor    %r9d,%r9d
    fe47:	4c 89 e7             	mov    %r12,%rdi
    fe4a:	4c 89 f1             	mov    %r14,%rcx
    fe4d:	6a 00                	pushq  $0x0
    fe4f:	4c 8d 05 3a c3 ff ff 	lea    -0x3cc6(%rip),%r8        # c190 <self_test_rng>
    fe56:	48 89 da             	mov    %rbx,%rdx
    fe59:	4c 89 ee             	mov    %r13,%rsi
    fe5c:	e8 4f ee ff ff       	callq  ecb0 <ecp_mul_restartable_internal>
    fe61:	5f                   	pop    %rdi
    fe62:	41 59                	pop    %r9
    fe64:	41 89 c0             	mov    %eax,%r8d
    fe67:	85 c0                	test   %eax,%eax
    fe69:	75 b1                	jne    fe1c <self_test_point.constprop.0+0x5c>
    fe6b:	48 8b 05 d6 e2 01 00 	mov    0x1e2d6(%rip),%rax        # 2e148 <add_count>
    fe72:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    fe78:	48 89 04 24          	mov    %rax,(%rsp)
    fe7c:	48 8b 05 bd e2 01 00 	mov    0x1e2bd(%rip),%rax        # 2e140 <dbl_count>
    fe83:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    fe88:	48 8b 05 a9 e2 01 00 	mov    0x1e2a9(%rip),%rax        # 2e138 <mul_count>
    fe8f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fe94:	0f 1f 40 00          	nopl   0x0(%rax)
    fe98:	4a 8b 54 fd 00       	mov    0x0(%rbp,%r15,8),%rdx
    fe9d:	be 10 00 00 00       	mov    $0x10,%esi
    fea2:	48 89 df             	mov    %rbx,%rdi
    fea5:	48 c7 05 98 e2 01 00 	movq   $0x0,0x1e298(%rip)        # 2e148 <add_count>
    feac:	00 00 00 00 
    feb0:	48 c7 05 85 e2 01 00 	movq   $0x0,0x1e285(%rip)        # 2e140 <dbl_count>
    feb7:	00 00 00 00 
    febb:	48 c7 05 72 e2 01 00 	movq   $0x0,0x1e272(%rip)        # 2e138 <mul_count>
    fec2:	00 00 00 00 
    fec6:	e8 95 5d ff ff       	callq  5c60 <mbedtls_mpi_read_string>
    fecb:	85 c0                	test   %eax,%eax
    fecd:	0f 85 c5 00 00 00    	jne    ff98 <self_test_point.constprop.0+0x1d8>
    fed3:	48 83 ec 08          	sub    $0x8,%rsp
    fed7:	4c 89 f1             	mov    %r14,%rcx
    feda:	4c 89 ee             	mov    %r13,%rsi
    fedd:	45 31 c9             	xor    %r9d,%r9d
    fee0:	6a 00                	pushq  $0x0
    fee2:	4c 8d 05 a7 c2 ff ff 	lea    -0x3d59(%rip),%r8        # c190 <self_test_rng>
    fee9:	48 89 da             	mov    %rbx,%rdx
    feec:	4c 89 e7             	mov    %r12,%rdi
    feef:	e8 bc ed ff ff       	callq  ecb0 <ecp_mul_restartable_internal>
    fef4:	59                   	pop    %rcx
    fef5:	5e                   	pop    %rsi
    fef6:	85 c0                	test   %eax,%eax
    fef8:	0f 85 9a 00 00 00    	jne    ff98 <self_test_point.constprop.0+0x1d8>
    fefe:	48 8b 0c 24          	mov    (%rsp),%rcx
    ff02:	48 39 0d 3f e2 01 00 	cmp    %rcx,0x1e23f(%rip)        # 2e148 <add_count>
    ff09:	75 7d                	jne    ff88 <self_test_point.constprop.0+0x1c8>
    ff0b:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    ff10:	48 3b 35 29 e2 01 00 	cmp    0x1e229(%rip),%rsi        # 2e140 <dbl_count>
    ff17:	75 6f                	jne    ff88 <self_test_point.constprop.0+0x1c8>
    ff19:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    ff1e:	48 39 3d 13 e2 01 00 	cmp    %rdi,0x1e213(%rip)        # 2e138 <mul_count>
    ff25:	75 61                	jne    ff88 <self_test_point.constprop.0+0x1c8>
    ff27:	49 83 c7 01          	add    $0x1,%r15
    ff2b:	49 83 ff 06          	cmp    $0x6,%r15
    ff2f:	0f 85 63 ff ff ff    	jne    fe98 <self_test_point.constprop.0+0xd8>
    ff35:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    ff39:	41 89 c0             	mov    %eax,%r8d
    ff3c:	85 d2                	test   %edx,%edx
    ff3e:	0f 84 e4 fe ff ff    	je     fe28 <self_test_point.constprop.0+0x68>
    ff44:	48 8d 3d b7 b1 00 00 	lea    0xb1b7(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
    ff4b:	44 89 04 24          	mov    %r8d,(%rsp)
    ff4f:	e8 bc 42 ff ff       	callq  4210 <puts@plt>
    ff54:	44 8b 04 24          	mov    (%rsp),%r8d
    ff58:	e9 cb fe ff ff       	jmpq   fe28 <self_test_point.constprop.0+0x68>
    ff5d:	0f 1f 00             	nopl   (%rax)
    ff60:	44 89 fa             	mov    %r15d,%edx
    ff63:	48 8d 35 a0 b8 00 00 	lea    0xb8a0(%rip),%rsi        # 1b80a <small_prime+0x2aa>
    ff6a:	31 c0                	xor    %eax,%eax
    ff6c:	44 89 04 24          	mov    %r8d,(%rsp)
    ff70:	bf 01 00 00 00       	mov    $0x1,%edi
    ff75:	e8 d6 43 ff ff       	callq  4350 <__printf_chk@plt>
    ff7a:	44 8b 04 24          	mov    (%rsp),%r8d
    ff7e:	e9 a5 fe ff ff       	jmpq   fe28 <self_test_point.constprop.0+0x68>
    ff83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ff88:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ff8e:	e9 89 fe ff ff       	jmpq   fe1c <self_test_point.constprop.0+0x5c>
    ff93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ff98:	41 89 c0             	mov    %eax,%r8d
    ff9b:	e9 7c fe ff ff       	jmpq   fe1c <self_test_point.constprop.0+0x5c>

000000000000ffa0 <mbedtls_ecp_gen_privkey>:
    ffa0:	e9 cb 4f 02 00       	jmpq   34f70 <mbedtls_ecp_gen_privkey.instr.bb_ffa0>
    ffa5:	83 7f 60 00          	cmpl   $0x0,0x60(%rdi)
    ffa9:	74 3d                	je     ffe8 <mbedtls_ecp_gen_privkey+0x48>
    ffab:	e9 ea 4f 02 00       	jmpq   34f9a <instr.bb_ffab>
    ffb0:	49 89 c8             	mov    %rcx,%r8
    ffb3:	55                   	push   %rbp
    ffb4:	48 89 f5             	mov    %rsi,%rbp
    ffb7:	53                   	push   %rbx
    ffb8:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    ffbd:	74 31                	je     fff0 <mbedtls_ecp_gen_privkey+0x50>
    ffbf:	e9 ee 4f 02 00       	jmpq   34fb2 <instr.bb_ffbf>
    ffc4:	00 00                	add    %al,(%rax)
    ffc6:	4c 89 c9             	mov    %r9,%rcx
    ffc9:	be 01 00 00 00       	mov    $0x1,%esi
    ffce:	48 89 ef             	mov    %rbp,%rdi
    ffd1:	e8 fa 84 ff ff       	callq  84d0 <mbedtls_mpi_random>
    ffd6:	83 f8 f2             	cmp    $0xfffffff2,%eax
    ffd9:	0f 84 a3 00 00 00    	je     10082 <mbedtls_ecp_gen_privkey+0xe2>
    ffdf:	5b                   	pop    %rbx
    ffe0:	5d                   	pop    %rbp
    ffe1:	41 5c                	pop    %r12
    ffe3:	c3                   	retq   
    ffe4:	0f 1f 40 00          	nopl   0x0(%rax)
    ffe8:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
    ffed:	c3                   	retq   
    ffee:	66 90                	xchg   %ax,%ax
    fff0:	e9 db 4f 02 00       	jmpq   34fd0 <instr.bb_fff0>
    fff5:	e9 22 50 02 00       	jmpq   3501c <instr.bb_1000d>
    fffa:	e9 37 50 02 00       	jmpq   35036 <instr.bb_10023>
    ffff:	e9 4a 50 02 00       	jmpq   3504e <instr.bb_10037>
   10004:	e9 59 50 02 00       	jmpq   35062 <instr.bb_10047>
   10009:	e3 7e                	jrcxz  10089 <mbedtls_ecp_gen_privkey+0xe9>
   1000b:	ff                   	(bad)  
   1000c:	ff                   	(bad)  
   1000d:	eb e6                	jmp    fff5 <mbedtls_ecp_gen_privkey+0x55>
   1000f:	75 ce                	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>
   10011:	e9 0e 50 02 00       	jmpq   35024 <instr.bb_10011>
   10016:	ef                   	out    %eax,(%dx)
   10017:	48 f7 d0             	not    %rax
   1001a:	4a 8d 34 e0          	lea    (%rax,%r12,8),%rsi
   1001e:	e8 5d 53 ff ff       	callq  5380 <mbedtls_mpi_shift_r>
   10023:	eb d5                	jmp    fffa <mbedtls_ecp_gen_privkey+0x5a>
   10025:	75 b8                	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>
   10027:	e9 12 50 02 00       	jmpq   3503e <instr.bb_10027>
   1002c:	48 89 de             	mov    %rbx,%rsi
   1002f:	48 89 ef             	mov    %rbp,%rdi
   10032:	e8 09 50 ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   10037:	eb c6                	jmp    ffff <mbedtls_ecp_gen_privkey+0x5f>
   10039:	75 a4                	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>
   1003b:	e9 16 50 02 00       	jmpq   35056 <instr.bb_1003b>
   10040:	89 ef                	mov    %ebp,%edi
   10042:	e8 f9 4f ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   10047:	eb bb                	jmp    10004 <mbedtls_ecp_gen_privkey+0x64>
   10049:	75 94                	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>
   1004b:	e9 1a 50 02 00       	jmpq   3506a <instr.bb_1004b>
   10050:	00 00                	add    %al,(%rax)
   10052:	48 89 ef             	mov    %rbp,%rdi
   10055:	e8 e6 4f ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   1005a:	e9 1a 50 02 00       	jmpq   35079 <instr.bb_1005a>
   1005f:	ff                   	(bad)  
   10060:	ff                   	(bad)  
   10061:	ff                   	(bad)  
   10062:	e9 1a 50 02 00       	jmpq   35081 <instr.bb_10062>
   10067:	00 00                	add    %al,(%rax)
   10069:	0f 85 70 ff ff ff    	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>
   1006f:	e9 1a 50 02 00       	jmpq   3508e <instr.bb_1006f>
   10074:	d2 5d be             	rcrb   %cl,-0x42(%rbp)
   10077:	02 00                	add    (%rax),%al
   10079:	00 00                	add    %al,(%rax)
   1007b:	41 5c                	pop    %r12
   1007d:	e9 be 4f ff ff       	jmpq   5040 <mbedtls_mpi_set_bit>
   10082:	b8 00 b3 ff ff       	mov    $0xffffb300,%eax
   10087:	e9 53 ff ff ff       	jmpq   ffdf <mbedtls_ecp_gen_privkey+0x3f>
   1008c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010090 <mbedtls_ecp_gen_keypair_base>:
   10090:	f3 0f 1e fa          	endbr64 
   10094:	41 57                	push   %r15
   10096:	4d 89 cf             	mov    %r9,%r15
   10099:	41 56                	push   %r14
   1009b:	49 89 f6             	mov    %rsi,%r14
   1009e:	41 55                	push   %r13
   100a0:	49 89 cd             	mov    %rcx,%r13
   100a3:	4c 89 c9             	mov    %r9,%rcx
   100a6:	41 54                	push   %r12
   100a8:	49 89 d4             	mov    %rdx,%r12
   100ab:	4c 89 c2             	mov    %r8,%rdx
   100ae:	55                   	push   %rbp
   100af:	4c 89 e6             	mov    %r12,%rsi
   100b2:	48 89 fd             	mov    %rdi,%rbp
   100b5:	53                   	push   %rbx
   100b6:	4c 89 c3             	mov    %r8,%rbx
   100b9:	48 83 ec 08          	sub    $0x8,%rsp
   100bd:	e8 de fe ff ff       	callq  ffa0 <mbedtls_ecp_gen_privkey>
   100c2:	85 c0                	test   %eax,%eax
   100c4:	75 24                	jne    100ea <mbedtls_ecp_gen_keypair_base+0x5a>
   100c6:	48 85 db             	test   %rbx,%rbx
   100c9:	74 2e                	je     100f9 <mbedtls_ecp_gen_keypair_base+0x69>
   100cb:	48 83 ec 08          	sub    $0x8,%rsp
   100cf:	4c 89 f1             	mov    %r14,%rcx
   100d2:	4c 89 e2             	mov    %r12,%rdx
   100d5:	4d 89 f9             	mov    %r15,%r9
   100d8:	6a 00                	pushq  $0x0
   100da:	49 89 d8             	mov    %rbx,%r8
   100dd:	4c 89 ee             	mov    %r13,%rsi
   100e0:	48 89 ef             	mov    %rbp,%rdi
   100e3:	e8 c8 eb ff ff       	callq  ecb0 <ecp_mul_restartable_internal>
   100e8:	5a                   	pop    %rdx
   100e9:	59                   	pop    %rcx
   100ea:	48 83 c4 08          	add    $0x8,%rsp
   100ee:	5b                   	pop    %rbx
   100ef:	5d                   	pop    %rbp
   100f0:	41 5c                	pop    %r12
   100f2:	41 5d                	pop    %r13
   100f4:	41 5e                	pop    %r14
   100f6:	41 5f                	pop    %r15
   100f8:	c3                   	retq   
   100f9:	f3 0f 1e fa          	endbr64 
   100fd:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
   10102:	eb e6                	jmp    100ea <mbedtls_ecp_gen_keypair_base+0x5a>
   10104:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1010b:	00 00 00 00 
   1010f:	90                   	nop

0000000000010110 <mbedtls_ecp_gen_keypair>:
   10110:	f3 0f 1e fa          	endbr64 
   10114:	49 89 f2             	mov    %rsi,%r10
   10117:	4d 89 c1             	mov    %r8,%r9
   1011a:	48 8d 77 50          	lea    0x50(%rdi),%rsi
   1011e:	49 89 c8             	mov    %rcx,%r8
   10121:	48 89 d1             	mov    %rdx,%rcx
   10124:	4c 89 d2             	mov    %r10,%rdx
   10127:	e9 64 ff ff ff       	jmpq   10090 <mbedtls_ecp_gen_keypair_base>
   1012c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010130 <mbedtls_ecp_gen_key>:
   10130:	f3 0f 1e fa          	endbr64 
   10134:	41 54                	push   %r12
   10136:	49 89 d4             	mov    %rdx,%r12
   10139:	55                   	push   %rbp
   1013a:	48 89 f5             	mov    %rsi,%rbp
   1013d:	89 fe                	mov    %edi,%esi
   1013f:	53                   	push   %rbx
   10140:	48 89 ef             	mov    %rbp,%rdi
   10143:	48 89 cb             	mov    %rcx,%rbx
   10146:	e8 65 1f 00 00       	callq  120b0 <mbedtls_ecp_group_load>
   1014b:	85 c0                	test   %eax,%eax
   1014d:	74 09                	je     10158 <mbedtls_ecp_gen_key+0x28>
   1014f:	5b                   	pop    %rbx
   10150:	5d                   	pop    %rbp
   10151:	41 5c                	pop    %r12
   10153:	c3                   	retq   
   10154:	0f 1f 40 00          	nopl   0x0(%rax)
   10158:	48 8d 8d 10 01 00 00 	lea    0x110(%rbp),%rcx
   1015f:	49 89 d9             	mov    %rbx,%r9
   10162:	48 8d 75 50          	lea    0x50(%rbp),%rsi
   10166:	5b                   	pop    %rbx
   10167:	48 8d 95 f8 00 00 00 	lea    0xf8(%rbp),%rdx
   1016e:	4d 89 e0             	mov    %r12,%r8
   10171:	48 89 ef             	mov    %rbp,%rdi
   10174:	5d                   	pop    %rbp
   10175:	41 5c                	pop    %r12
   10177:	e9 14 ff ff ff       	jmpq   10090 <mbedtls_ecp_gen_keypair_base>
   1017c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010180 <mbedtls_ecp_read_key>:
   10180:	f3 0f 1e fa          	endbr64 
   10184:	41 57                	push   %r15
   10186:	41 56                	push   %r14
   10188:	49 89 d6             	mov    %rdx,%r14
   1018b:	41 55                	push   %r13
   1018d:	41 89 fd             	mov    %edi,%r13d
   10190:	41 54                	push   %r12
   10192:	55                   	push   %rbp
   10193:	48 89 f5             	mov    %rsi,%rbp
   10196:	89 fe                	mov    %edi,%esi
   10198:	53                   	push   %rbx
   10199:	48 89 ef             	mov    %rbp,%rdi
   1019c:	48 83 ec 18          	sub    $0x18,%rsp
   101a0:	48 89 0c 24          	mov    %rcx,(%rsp)
   101a4:	e8 07 1f 00 00       	callq  120b0 <mbedtls_ecp_group_load>
   101a9:	41 89 c4             	mov    %eax,%r12d
   101ac:	85 c0                	test   %eax,%eax
   101ae:	75 3a                	jne    101ea <mbedtls_ecp_read_key+0x6a>
   101b0:	48 83 7d 60 00       	cmpq   $0x0,0x60(%rbp)
   101b5:	4c 8d bd f8 00 00 00 	lea    0xf8(%rbp),%r15
   101bc:	bb 80 b1 ff ff       	mov    $0xffffb180,%ebx
   101c1:	74 1c                	je     101df <mbedtls_ecp_read_key+0x5f>
   101c3:	48 83 7d 78 00       	cmpq   $0x0,0x78(%rbp)
   101c8:	74 4e                	je     10218 <mbedtls_ecp_read_key+0x98>
   101ca:	48 8b 14 24          	mov    (%rsp),%rdx
   101ce:	4c 89 f6             	mov    %r14,%rsi
   101d1:	4c 89 ff             	mov    %r15,%rdi
   101d4:	e8 e7 4f ff ff       	callq  51c0 <mbedtls_mpi_read_binary>
   101d9:	89 c3                	mov    %eax,%ebx
   101db:	85 c0                	test   %eax,%eax
   101dd:	74 21                	je     10200 <mbedtls_ecp_read_key+0x80>
   101df:	4c 89 ff             	mov    %r15,%rdi
   101e2:	41 89 dc             	mov    %ebx,%r12d
   101e5:	e8 a6 49 ff ff       	callq  4b90 <mbedtls_mpi_free>
   101ea:	48 83 c4 18          	add    $0x18,%rsp
   101ee:	44 89 e0             	mov    %r12d,%eax
   101f1:	5b                   	pop    %rbx
   101f2:	5d                   	pop    %rbp
   101f3:	41 5c                	pop    %r12
   101f5:	41 5d                	pop    %r13
   101f7:	41 5e                	pop    %r14
   101f9:	41 5f                	pop    %r15
   101fb:	c3                   	retq   
   101fc:	0f 1f 40 00          	nopl   0x0(%rax)
   10200:	4c 89 fe             	mov    %r15,%rsi
   10203:	48 89 ef             	mov    %rbp,%rdi
   10206:	e8 e5 e9 ff ff       	callq  ebf0 <mbedtls_ecp_check_privkey>
   1020b:	89 c3                	mov    %eax,%ebx
   1020d:	85 c0                	test   %eax,%eax
   1020f:	74 d9                	je     101ea <mbedtls_ecp_read_key+0x6a>
   10211:	eb cc                	jmp    101df <mbedtls_ecp_read_key+0x5f>
   10213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10218:	41 83 fd 09          	cmp    $0x9,%r13d
   1021c:	0f 84 ae 00 00 00    	je     102d0 <mbedtls_ecp_read_key+0x150>
   10222:	bb 80 b1 ff ff       	mov    $0xffffb180,%ebx
   10227:	41 83 fd 0d          	cmp    $0xd,%r13d
   1022b:	75 b2                	jne    101df <mbedtls_ecp_read_key+0x5f>
   1022d:	48 83 3c 24 38       	cmpq   $0x38,(%rsp)
   10232:	0f 85 46 01 00 00    	jne    1037e <mbedtls_ecp_read_key+0x1fe>
   10238:	ba 38 00 00 00       	mov    $0x38,%edx
   1023d:	4c 89 f6             	mov    %r14,%rsi
   10240:	4c 89 ff             	mov    %r15,%rdi
   10243:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   10248:	e8 23 4f ff ff       	callq  5170 <mbedtls_mpi_read_binary_le>
   1024d:	89 c3                	mov    %eax,%ebx
   1024f:	85 c0                	test   %eax,%eax
   10251:	75 8c                	jne    101df <mbedtls_ecp_read_key+0x5f>
   10253:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   10258:	31 d2                	xor    %edx,%edx
   1025a:	31 f6                	xor    %esi,%esi
   1025c:	48 89 cf             	mov    %rcx,%rdi
   1025f:	e8 dc 4d ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   10264:	89 c3                	mov    %eax,%ebx
   10266:	85 c0                	test   %eax,%eax
   10268:	0f 85 71 ff ff ff    	jne    101df <mbedtls_ecp_read_key+0x5f>
   1026e:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   10273:	31 d2                	xor    %edx,%edx
   10275:	be 01 00 00 00       	mov    $0x1,%esi
   1027a:	48 89 cf             	mov    %rcx,%rdi
   1027d:	e8 be 4d ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   10282:	89 c3                	mov    %eax,%ebx
   10284:	85 c0                	test   %eax,%eax
   10286:	0f 85 53 ff ff ff    	jne    101df <mbedtls_ecp_read_key+0x5f>
   1028c:	ba 01 00 00 00       	mov    $0x1,%edx
   10291:	be bf 01 00 00       	mov    $0x1bf,%esi
   10296:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1029b:	48 89 cf             	mov    %rcx,%rdi
   1029e:	e8 9d 4d ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   102a3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   102a8:	85 c0                	test   %eax,%eax
   102aa:	89 c3                	mov    %eax,%ebx
   102ac:	0f 85 2d ff ff ff    	jne    101df <mbedtls_ecp_read_key+0x5f>
   102b2:	48 83 7d 60 00       	cmpq   $0x0,0x60(%rbp)
   102b7:	0f 84 2d ff ff ff    	je     101ea <mbedtls_ecp_read_key+0x6a>
   102bd:	48 83 7d 78 00       	cmpq   $0x0,0x78(%rbp)
   102c2:	0f 84 22 ff ff ff    	je     101ea <mbedtls_ecp_read_key+0x6a>
   102c8:	49 89 cf             	mov    %rcx,%r15
   102cb:	e9 fa fe ff ff       	jmpq   101ca <mbedtls_ecp_read_key+0x4a>
   102d0:	48 83 3c 24 20       	cmpq   $0x20,(%rsp)
   102d5:	0f 85 a3 00 00 00    	jne    1037e <mbedtls_ecp_read_key+0x1fe>
   102db:	ba 20 00 00 00       	mov    $0x20,%edx
   102e0:	4c 89 f6             	mov    %r14,%rsi
   102e3:	4c 89 ff             	mov    %r15,%rdi
   102e6:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   102eb:	e8 80 4e ff ff       	callq  5170 <mbedtls_mpi_read_binary_le>
   102f0:	89 c3                	mov    %eax,%ebx
   102f2:	85 c0                	test   %eax,%eax
   102f4:	0f 85 e5 fe ff ff    	jne    101df <mbedtls_ecp_read_key+0x5f>
   102fa:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   102ff:	31 d2                	xor    %edx,%edx
   10301:	31 f6                	xor    %esi,%esi
   10303:	48 89 cf             	mov    %rcx,%rdi
   10306:	e8 35 4d ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   1030b:	89 c3                	mov    %eax,%ebx
   1030d:	85 c0                	test   %eax,%eax
   1030f:	0f 85 ca fe ff ff    	jne    101df <mbedtls_ecp_read_key+0x5f>
   10315:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1031a:	31 d2                	xor    %edx,%edx
   1031c:	be 01 00 00 00       	mov    $0x1,%esi
   10321:	48 89 cf             	mov    %rcx,%rdi
   10324:	e8 17 4d ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   10329:	89 c3                	mov    %eax,%ebx
   1032b:	85 c0                	test   %eax,%eax
   1032d:	0f 85 ac fe ff ff    	jne    101df <mbedtls_ecp_read_key+0x5f>
   10333:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   10338:	31 d2                	xor    %edx,%edx
   1033a:	be 02 00 00 00       	mov    $0x2,%esi
   1033f:	48 89 cf             	mov    %rcx,%rdi
   10342:	e8 f9 4c ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   10347:	89 c3                	mov    %eax,%ebx
   10349:	85 c0                	test   %eax,%eax
   1034b:	0f 85 8e fe ff ff    	jne    101df <mbedtls_ecp_read_key+0x5f>
   10351:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   10356:	31 d2                	xor    %edx,%edx
   10358:	be ff 00 00 00       	mov    $0xff,%esi
   1035d:	48 89 cf             	mov    %rcx,%rdi
   10360:	e8 db 4c ff ff       	callq  5040 <mbedtls_mpi_set_bit>
   10365:	89 c3                	mov    %eax,%ebx
   10367:	85 c0                	test   %eax,%eax
   10369:	0f 85 70 fe ff ff    	jne    101df <mbedtls_ecp_read_key+0x5f>
   1036f:	ba 01 00 00 00       	mov    $0x1,%edx
   10374:	be fe 00 00 00       	mov    $0xfe,%esi
   10379:	e9 18 ff ff ff       	jmpq   10296 <mbedtls_ecp_read_key+0x116>
   1037e:	41 bc 80 b3 ff ff    	mov    $0xffffb380,%r12d
   10384:	e9 61 fe ff ff       	jmpq   101ea <mbedtls_ecp_read_key+0x6a>
   10389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010390 <mbedtls_ecp_write_key>:
   10390:	f3 0f 1e fa          	endbr64 
   10394:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
   10399:	74 25                	je     103c0 <mbedtls_ecp_write_key+0x30>
   1039b:	53                   	push   %rbx
   1039c:	48 89 fb             	mov    %rdi,%rbx
   1039f:	48 8d bf f8 00 00 00 	lea    0xf8(%rdi),%rdi
   103a6:	48 83 ec 20          	sub    $0x20,%rsp
   103aa:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
   103af:	74 1f                	je     103d0 <mbedtls_ecp_write_key+0x40>
   103b1:	48 83 c4 20          	add    $0x20,%rsp
   103b5:	5b                   	pop    %rbx
   103b6:	e9 75 4e ff ff       	jmpq   5230 <mbedtls_mpi_write_binary>
   103bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   103c0:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
   103c5:	c3                   	retq   
   103c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   103cd:	00 00 00 
   103d0:	8b 03                	mov    (%rbx),%eax
   103d2:	83 f8 09             	cmp    $0x9,%eax
   103d5:	74 51                	je     10428 <mbedtls_ecp_write_key+0x98>
   103d7:	48 83 fa 37          	cmp    $0x37,%rdx
   103db:	77 05                	ja     103e2 <mbedtls_ecp_write_key+0x52>
   103dd:	83 f8 0d             	cmp    $0xd,%eax
   103e0:	74 4c                	je     1042e <mbedtls_ecp_write_key+0x9e>
   103e2:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
   103e9:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   103ee:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   103f3:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   103f8:	e8 13 4e ff ff       	callq  5210 <mbedtls_mpi_write_binary_le>
   103fd:	85 c0                	test   %eax,%eax
   103ff:	75 1d                	jne    1041e <mbedtls_ecp_write_key+0x8e>
   10401:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
   10406:	74 16                	je     1041e <mbedtls_ecp_write_key+0x8e>
   10408:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
   1040d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   10412:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   10417:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1041c:	75 93                	jne    103b1 <mbedtls_ecp_write_key+0x21>
   1041e:	48 83 c4 20          	add    $0x20,%rsp
   10422:	5b                   	pop    %rbx
   10423:	c3                   	retq   
   10424:	0f 1f 40 00          	nopl   0x0(%rax)
   10428:	48 83 fa 1f          	cmp    $0x1f,%rdx
   1042c:	77 b4                	ja     103e2 <mbedtls_ecp_write_key+0x52>
   1042e:	b8 00 b1 ff ff       	mov    $0xffffb100,%eax
   10433:	eb e9                	jmp    1041e <mbedtls_ecp_write_key+0x8e>
   10435:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1043c:	00 00 00 00 

0000000000010440 <mbedtls_ecp_check_pub_priv>:
   10440:	f3 0f 1e fa          	endbr64 
   10444:	41 57                	push   %r15
   10446:	41 56                	push   %r14
   10448:	41 55                	push   %r13
   1044a:	41 54                	push   %r12
   1044c:	55                   	push   %rbp
   1044d:	53                   	push   %rbx
   1044e:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
   10455:	48 89 0c 24          	mov    %rcx,(%rsp)
   10459:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10460:	00 00 
   10462:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   10469:	00 
   1046a:	31 c0                	xor    %eax,%eax
   1046c:	8b 07                	mov    (%rdi),%eax
   1046e:	85 c0                	test   %eax,%eax
   10470:	0f 84 4a 01 00 00    	je     105c0 <mbedtls_ecp_check_pub_priv+0x180>
   10476:	48 89 f3             	mov    %rsi,%rbx
   10479:	3b 06                	cmp    (%rsi),%eax
   1047b:	0f 85 3f 01 00 00    	jne    105c0 <mbedtls_ecp_check_pub_priv+0x180>
   10481:	4c 8d ae 10 01 00 00 	lea    0x110(%rsi),%r13
   10488:	49 89 fc             	mov    %rdi,%r12
   1048b:	48 89 d5             	mov    %rdx,%rbp
   1048e:	48 8d bf 10 01 00 00 	lea    0x110(%rdi),%rdi
   10495:	4c 89 ee             	mov    %r13,%rsi
   10498:	e8 d3 4f ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
   1049d:	85 c0                	test   %eax,%eax
   1049f:	0f 85 1b 01 00 00    	jne    105c0 <mbedtls_ecp_check_pub_priv+0x180>
   104a5:	4c 8d b3 28 01 00 00 	lea    0x128(%rbx),%r14
   104ac:	49 8d bc 24 28 01 00 	lea    0x128(%r12),%rdi
   104b3:	00 
   104b4:	4c 89 f6             	mov    %r14,%rsi
   104b7:	e8 b4 4f ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
   104bc:	85 c0                	test   %eax,%eax
   104be:	0f 85 fc 00 00 00    	jne    105c0 <mbedtls_ecp_check_pub_priv+0x180>
   104c4:	48 8d 83 40 01 00 00 	lea    0x140(%rbx),%rax
   104cb:	49 8d bc 24 40 01 00 	lea    0x140(%r12),%rdi
   104d2:	00 
   104d3:	48 89 c6             	mov    %rax,%rsi
   104d6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   104db:	e8 90 4f ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
   104e0:	85 c0                	test   %eax,%eax
   104e2:	0f 85 d8 00 00 00    	jne    105c0 <mbedtls_ecp_check_pub_priv+0x180>
   104e8:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   104ed:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
   104f2:	4c 89 ff             	mov    %r15,%rdi
   104f5:	e8 a6 d2 ff ff       	callq  d7a0 <mbedtls_ecp_point_init>
   104fa:	4c 89 e7             	mov    %r12,%rdi
   104fd:	e8 be d2 ff ff       	callq  d7c0 <mbedtls_ecp_group_init>
   10502:	8b 33                	mov    (%rbx),%esi
   10504:	4c 89 e7             	mov    %r12,%rdi
   10507:	e8 a4 1b 00 00       	callq  120b0 <mbedtls_ecp_group_load>
   1050c:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
   10510:	48 8d 93 f8 00 00 00 	lea    0xf8(%rbx),%rdx
   10517:	48 85 ed             	test   %rbp,%rbp
   1051a:	74 7c                	je     10598 <mbedtls_ecp_check_pub_priv+0x158>
   1051c:	48 83 ec 08          	sub    $0x8,%rsp
   10520:	49 89 e8             	mov    %rbp,%r8
   10523:	4c 89 fe             	mov    %r15,%rsi
   10526:	4c 89 e7             	mov    %r12,%rdi
   10529:	6a 00                	pushq  $0x0
   1052b:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   10530:	e8 7b e7 ff ff       	callq  ecb0 <ecp_mul_restartable_internal>
   10535:	89 c3                	mov    %eax,%ebx
   10537:	58                   	pop    %rax
   10538:	5a                   	pop    %rdx
   10539:	85 db                	test   %ebx,%ebx
   1053b:	74 3b                	je     10578 <mbedtls_ecp_check_pub_priv+0x138>
   1053d:	4c 89 ff             	mov    %r15,%rdi
   10540:	e8 db bf ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   10545:	4c 89 e7             	mov    %r12,%rdi
   10548:	e8 73 d3 ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
   1054d:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
   10554:	00 
   10555:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1055c:	00 00 
   1055e:	75 67                	jne    105c7 <mbedtls_ecp_check_pub_priv+0x187>
   10560:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
   10567:	89 d8                	mov    %ebx,%eax
   10569:	5b                   	pop    %rbx
   1056a:	5d                   	pop    %rbp
   1056b:	41 5c                	pop    %r12
   1056d:	41 5d                	pop    %r13
   1056f:	41 5e                	pop    %r14
   10571:	41 5f                	pop    %r15
   10573:	c3                   	retq   
   10574:	0f 1f 40 00          	nopl   0x0(%rax)
   10578:	4c 89 ee             	mov    %r13,%rsi
   1057b:	4c 89 ff             	mov    %r15,%rdi
   1057e:	e8 ed 4e ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
   10583:	85 c0                	test   %eax,%eax
   10585:	75 11                	jne    10598 <mbedtls_ecp_check_pub_priv+0x158>
   10587:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1058c:	4c 89 f6             	mov    %r14,%rsi
   1058f:	e8 dc 4e ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
   10594:	85 c0                	test   %eax,%eax
   10596:	74 08                	je     105a0 <mbedtls_ecp_check_pub_priv+0x160>
   10598:	bb 80 b0 ff ff       	mov    $0xffffb080,%ebx
   1059d:	eb 9e                	jmp    1053d <mbedtls_ecp_check_pub_priv+0xfd>
   1059f:	90                   	nop
   105a0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   105a5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   105aa:	e8 c1 4e ff ff       	callq  5470 <mbedtls_mpi_cmp_mpi>
   105af:	89 c3                	mov    %eax,%ebx
   105b1:	85 c0                	test   %eax,%eax
   105b3:	74 88                	je     1053d <mbedtls_ecp_check_pub_priv+0xfd>
   105b5:	eb e1                	jmp    10598 <mbedtls_ecp_check_pub_priv+0x158>
   105b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   105be:	00 00 
   105c0:	bb 80 b0 ff ff       	mov    $0xffffb080,%ebx
   105c5:	eb 86                	jmp    1054d <mbedtls_ecp_check_pub_priv+0x10d>
   105c7:	e8 a4 3c ff ff       	callq  4270 <__stack_chk_fail@plt>
   105cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000105d0 <mbedtls_ecp_export>:
   105d0:	f3 0f 1e fa          	endbr64 
   105d4:	41 54                	push   %r12
   105d6:	49 89 d4             	mov    %rdx,%r12
   105d9:	55                   	push   %rbp
   105da:	48 89 cd             	mov    %rcx,%rbp
   105dd:	53                   	push   %rbx
   105de:	48 89 fb             	mov    %rdi,%rbx
   105e1:	48 89 f7             	mov    %rsi,%rdi
   105e4:	8b 33                	mov    (%rbx),%esi
   105e6:	e8 c5 1a 00 00       	callq  120b0 <mbedtls_ecp_group_load>
   105eb:	85 c0                	test   %eax,%eax
   105ed:	74 09                	je     105f8 <mbedtls_ecp_export+0x28>
   105ef:	5b                   	pop    %rbx
   105f0:	5d                   	pop    %rbp
   105f1:	41 5c                	pop    %r12
   105f3:	c3                   	retq   
   105f4:	0f 1f 40 00          	nopl   0x0(%rax)
   105f8:	48 8d b3 f8 00 00 00 	lea    0xf8(%rbx),%rsi
   105ff:	4c 89 e7             	mov    %r12,%rdi
   10602:	e8 19 48 ff ff       	callq  4e20 <mbedtls_mpi_copy>
   10607:	85 c0                	test   %eax,%eax
   10609:	75 e4                	jne    105ef <mbedtls_ecp_export+0x1f>
   1060b:	48 8d b3 10 01 00 00 	lea    0x110(%rbx),%rsi
   10612:	48 89 ef             	mov    %rbp,%rdi
   10615:	5b                   	pop    %rbx
   10616:	5d                   	pop    %rbp
   10617:	41 5c                	pop    %r12
   10619:	e9 a2 d3 ff ff       	jmpq   d9c0 <mbedtls_ecp_copy>
   1061e:	66 90                	xchg   %ax,%ax

0000000000010620 <mbedtls_ecp_self_test>:
   10620:	f3 0f 1e fa          	endbr64 
   10624:	41 57                	push   %r15
   10626:	41 56                	push   %r14
   10628:	41 55                	push   %r13
   1062a:	41 54                	push   %r12
   1062c:	55                   	push   %rbp
   1062d:	53                   	push   %rbx
   1062e:	89 fb                	mov    %edi,%ebx
   10630:	48 81 ec 48 02 00 00 	sub    $0x248,%rsp
   10637:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1063e:	00 00 
   10640:	48 89 84 24 38 02 00 	mov    %rax,0x238(%rsp)
   10647:	00 
   10648:	31 c0                	xor    %eax,%eax
   1064a:	48 8d 05 4f b2 00 00 	lea    0xb24f(%rip),%rax        # 1b8a0 <small_prime+0x340>
   10651:	48 8d ac 24 d0 00 00 	lea    0xd0(%rsp),%rbp
   10658:	00 
   10659:	48 89 84 24 d0 01 00 	mov    %rax,0x1d0(%rsp)
   10660:	00 
   10661:	48 89 ef             	mov    %rbp,%rdi
   10664:	48 8d 05 6d b2 00 00 	lea    0xb26d(%rip),%rax        # 1b8d8 <small_prime+0x378>
   1066b:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
   10670:	48 89 84 24 d8 01 00 	mov    %rax,0x1d8(%rsp)
   10677:	00 
   10678:	48 8d 05 91 b2 00 00 	lea    0xb291(%rip),%rax        # 1b910 <small_prime+0x3b0>
   1067f:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   10684:	48 89 84 24 e0 01 00 	mov    %rax,0x1e0(%rsp)
   1068b:	00 
   1068c:	48 8d 05 b5 b2 00 00 	lea    0xb2b5(%rip),%rax        # 1b948 <small_prime+0x3e8>
   10693:	4c 8d ac 24 80 00 00 	lea    0x80(%rsp),%r13
   1069a:	00 
   1069b:	48 89 84 24 e8 01 00 	mov    %rax,0x1e8(%rsp)
   106a2:	00 
   106a3:	48 8d 05 d6 b2 00 00 	lea    0xb2d6(%rip),%rax        # 1b980 <small_prime+0x420>
   106aa:	48 89 84 24 f0 01 00 	mov    %rax,0x1f0(%rsp)
   106b1:	00 
   106b2:	48 8d 05 ff b2 00 00 	lea    0xb2ff(%rip),%rax        # 1b9b8 <small_prime+0x458>
   106b9:	48 89 84 24 f8 01 00 	mov    %rax,0x1f8(%rsp)
   106c0:	00 
   106c1:	48 8d 05 28 b3 00 00 	lea    0xb328(%rip),%rax        # 1b9f0 <small_prime+0x490>
   106c8:	48 89 84 24 00 02 00 	mov    %rax,0x200(%rsp)
   106cf:	00 
   106d0:	48 8d 05 61 b3 00 00 	lea    0xb361(%rip),%rax        # 1ba38 <small_prime+0x4d8>
   106d7:	48 89 84 24 08 02 00 	mov    %rax,0x208(%rsp)
   106de:	00 
   106df:	48 8d 05 9a b3 00 00 	lea    0xb39a(%rip),%rax        # 1ba80 <small_prime+0x520>
   106e6:	48 89 84 24 10 02 00 	mov    %rax,0x210(%rsp)
   106ed:	00 
   106ee:	48 8d 05 d3 b3 00 00 	lea    0xb3d3(%rip),%rax        # 1bac8 <small_prime+0x568>
   106f5:	48 89 84 24 18 02 00 	mov    %rax,0x218(%rsp)
   106fc:	00 
   106fd:	48 8d 05 0c b4 00 00 	lea    0xb40c(%rip),%rax        # 1bb10 <small_prime+0x5b0>
   10704:	48 89 84 24 20 02 00 	mov    %rax,0x220(%rsp)
   1070b:	00 
   1070c:	48 8d 05 45 b4 00 00 	lea    0xb445(%rip),%rax        # 1bb58 <small_prime+0x5f8>
   10713:	48 89 84 24 28 02 00 	mov    %rax,0x228(%rsp)
   1071a:	00 
   1071b:	e8 a0 d0 ff ff       	callq  d7c0 <mbedtls_ecp_group_init>
   10720:	4c 89 f7             	mov    %r14,%rdi
   10723:	e8 78 d0 ff ff       	callq  d7a0 <mbedtls_ecp_point_init>
   10728:	4c 89 ef             	mov    %r13,%rdi
   1072b:	e8 70 d0 ff ff       	callq  d7a0 <mbedtls_ecp_point_init>
   10730:	4c 89 e7             	mov    %r12,%rdi
   10733:	e8 38 44 ff ff       	callq  4b70 <mbedtls_mpi_init>
   10738:	be 01 00 00 00       	mov    $0x1,%esi
   1073d:	48 89 ef             	mov    %rbp,%rdi
   10740:	e8 6b 19 00 00       	callq  120b0 <mbedtls_ecp_group_load>
   10745:	41 89 c7             	mov    %eax,%r15d
   10748:	85 c0                	test   %eax,%eax
   1074a:	0f 85 c0 01 00 00    	jne    10910 <mbedtls_ecp_self_test+0x2f0>
   10750:	85 db                	test   %ebx,%ebx
   10752:	0f 85 a0 00 00 00    	jne    107f8 <mbedtls_ecp_self_test+0x1d8>
   10758:	be 02 00 00 00       	mov    $0x2,%esi
   1075d:	4c 89 e7             	mov    %r12,%rdi
   10760:	e8 2b 48 ff ff       	callq  4f90 <mbedtls_mpi_lset>
   10765:	41 89 c7             	mov    %eax,%r15d
   10768:	85 c0                	test   %eax,%eax
   1076a:	75 3c                	jne    107a8 <mbedtls_ecp_self_test+0x188>
   1076c:	4c 89 e2             	mov    %r12,%rdx
   1076f:	45 31 c9             	xor    %r9d,%r9d
   10772:	4c 8d 05 17 ba ff ff 	lea    -0x45e9(%rip),%r8        # c190 <self_test_rng>
   10779:	4c 89 ee             	mov    %r13,%rsi
   1077c:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
   10783:	00 
   10784:	48 83 ec 08          	sub    $0x8,%rsp
   10788:	48 89 ef             	mov    %rbp,%rdi
   1078b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10790:	48 89 c1             	mov    %rax,%rcx
   10793:	6a 00                	pushq  $0x0
   10795:	e8 16 e5 ff ff       	callq  ecb0 <ecp_mul_restartable_internal>
   1079a:	41 89 c7             	mov    %eax,%r15d
   1079d:	58                   	pop    %rax
   1079e:	5a                   	pop    %rdx
   1079f:	45 85 ff             	test   %r15d,%r15d
   107a2:	0f 84 d0 00 00 00    	je     10878 <mbedtls_ecp_self_test+0x258>
   107a8:	48 89 ef             	mov    %rbp,%rdi
   107ab:	e8 10 d1 ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
   107b0:	4c 89 f7             	mov    %r14,%rdi
   107b3:	e8 68 bd ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   107b8:	4c 89 ef             	mov    %r13,%rdi
   107bb:	e8 60 bd ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   107c0:	4c 89 e7             	mov    %r12,%rdi
   107c3:	e8 c8 43 ff ff       	callq  4b90 <mbedtls_mpi_free>
   107c8:	48 8b 84 24 38 02 00 	mov    0x238(%rsp),%rax
   107cf:	00 
   107d0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   107d7:	00 00 
   107d9:	0f 85 61 02 00 00    	jne    10a40 <mbedtls_ecp_self_test+0x420>
   107df:	48 81 c4 48 02 00 00 	add    $0x248,%rsp
   107e6:	44 89 f8             	mov    %r15d,%eax
   107e9:	5b                   	pop    %rbx
   107ea:	5d                   	pop    %rbp
   107eb:	41 5c                	pop    %r12
   107ed:	41 5d                	pop    %r13
   107ef:	41 5e                	pop    %r14
   107f1:	41 5f                	pop    %r15
   107f3:	c3                   	retq   
   107f4:	0f 1f 40 00          	nopl   0x0(%rax)
   107f8:	48 8d 35 a1 b3 00 00 	lea    0xb3a1(%rip),%rsi        # 1bba0 <small_prime+0x640>
   107ff:	bf 01 00 00 00       	mov    $0x1,%edi
   10804:	31 c0                	xor    %eax,%eax
   10806:	e8 45 3b ff ff       	callq  4350 <__printf_chk@plt>
   1080b:	be 02 00 00 00       	mov    $0x2,%esi
   10810:	4c 89 e7             	mov    %r12,%rdi
   10813:	e8 78 47 ff ff       	callq  4f90 <mbedtls_mpi_lset>
   10818:	41 89 c7             	mov    %eax,%r15d
   1081b:	85 c0                	test   %eax,%eax
   1081d:	0f 84 2d 01 00 00    	je     10950 <mbedtls_ecp_self_test+0x330>
   10823:	45 85 ff             	test   %r15d,%r15d
   10826:	79 1a                	jns    10842 <mbedtls_ecp_self_test+0x222>
   10828:	85 db                	test   %ebx,%ebx
   1082a:	74 16                	je     10842 <mbedtls_ecp_self_test+0x222>
   1082c:	44 89 fa             	mov    %r15d,%edx
   1082f:	48 8d 35 62 ab 00 00 	lea    0xab62(%rip),%rsi        # 1b398 <_IO_stdin_used+0x398>
   10836:	bf 01 00 00 00       	mov    $0x1,%edi
   1083b:	31 c0                	xor    %eax,%eax
   1083d:	e8 0e 3b ff ff       	callq  4350 <__printf_chk@plt>
   10842:	48 89 ef             	mov    %rbp,%rdi
   10845:	e8 76 d0 ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
   1084a:	4c 89 f7             	mov    %r14,%rdi
   1084d:	e8 ce bc ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   10852:	4c 89 ef             	mov    %r13,%rdi
   10855:	e8 c6 bc ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   1085a:	4c 89 e7             	mov    %r12,%rdi
   1085d:	e8 2e 43 ff ff       	callq  4b90 <mbedtls_mpi_free>
   10862:	bf 0a 00 00 00       	mov    $0xa,%edi
   10867:	e8 94 39 ff ff       	callq  4200 <putchar@plt>
   1086c:	e9 57 ff ff ff       	jmpq   107c8 <mbedtls_ecp_self_test+0x1a8>
   10871:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10878:	4c 8b 04 24          	mov    (%rsp),%r8
   1087c:	31 ff                	xor    %edi,%edi
   1087e:	4c 89 e1             	mov    %r12,%rcx
   10881:	4c 89 f2             	mov    %r14,%rdx
   10884:	4c 8d 8c 24 d0 01 00 	lea    0x1d0(%rsp),%r9
   1088b:	00 
   1088c:	48 89 ee             	mov    %rbp,%rsi
   1088f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   10894:	e8 27 f5 ff ff       	callq  fdc0 <self_test_point.constprop.0>
   10899:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1089e:	85 c0                	test   %eax,%eax
   108a0:	41 89 c7             	mov    %eax,%r15d
   108a3:	75 6b                	jne    10910 <mbedtls_ecp_self_test+0x2f0>
   108a5:	4d 89 e8             	mov    %r13,%r8
   108a8:	4c 89 e1             	mov    %r12,%rcx
   108ab:	4c 89 f2             	mov    %r14,%rdx
   108ae:	48 89 ee             	mov    %rbp,%rsi
   108b1:	31 ff                	xor    %edi,%edi
   108b3:	e8 08 f5 ff ff       	callq  fdc0 <self_test_point.constprop.0>
   108b8:	41 89 c7             	mov    %eax,%r15d
   108bb:	85 c0                	test   %eax,%eax
   108bd:	0f 85 e5 fe ff ff    	jne    107a8 <mbedtls_ecp_self_test+0x188>
   108c3:	48 89 ef             	mov    %rbp,%rdi
   108c6:	e8 f5 cf ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
   108cb:	4c 89 f7             	mov    %r14,%rdi
   108ce:	e8 4d bc ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   108d3:	be 09 00 00 00       	mov    $0x9,%esi
   108d8:	48 89 ef             	mov    %rbp,%rdi
   108db:	e8 d0 17 00 00       	callq  120b0 <mbedtls_ecp_group_load>
   108e0:	41 89 c7             	mov    %eax,%r15d
   108e3:	85 c0                	test   %eax,%eax
   108e5:	0f 85 bd fe ff ff    	jne    107a8 <mbedtls_ecp_self_test+0x188>
   108eb:	4c 8b 04 24          	mov    (%rsp),%r8
   108ef:	4c 89 e1             	mov    %r12,%rcx
   108f2:	4c 89 f2             	mov    %r14,%rdx
   108f5:	48 89 ee             	mov    %rbp,%rsi
   108f8:	4c 8d 8c 24 00 02 00 	lea    0x200(%rsp),%r9
   108ff:	00 
   10900:	89 df                	mov    %ebx,%edi
   10902:	e8 b9 f4 ff ff       	callq  fdc0 <self_test_point.constprop.0>
   10907:	41 89 c7             	mov    %eax,%r15d
   1090a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10910:	45 85 ff             	test   %r15d,%r15d
   10913:	79 08                	jns    1091d <mbedtls_ecp_self_test+0x2fd>
   10915:	85 db                	test   %ebx,%ebx
   10917:	0f 85 0f ff ff ff    	jne    1082c <mbedtls_ecp_self_test+0x20c>
   1091d:	48 89 ef             	mov    %rbp,%rdi
   10920:	e8 9b cf ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
   10925:	4c 89 f7             	mov    %r14,%rdi
   10928:	e8 f3 bb ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   1092d:	4c 89 ef             	mov    %r13,%rdi
   10930:	e8 eb bb ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   10935:	4c 89 e7             	mov    %r12,%rdi
   10938:	e8 53 42 ff ff       	callq  4b90 <mbedtls_mpi_free>
   1093d:	85 db                	test   %ebx,%ebx
   1093f:	0f 84 83 fe ff ff    	je     107c8 <mbedtls_ecp_self_test+0x1a8>
   10945:	e9 18 ff ff ff       	jmpq   10862 <mbedtls_ecp_self_test+0x242>
   1094a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10950:	4c 89 ee             	mov    %r13,%rsi
   10953:	45 31 c9             	xor    %r9d,%r9d
   10956:	4c 8d 05 33 b8 ff ff 	lea    -0x47cd(%rip),%r8        # c190 <self_test_rng>
   1095d:	4c 89 e2             	mov    %r12,%rdx
   10960:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
   10967:	00 
   10968:	48 83 ec 08          	sub    $0x8,%rsp
   1096c:	48 89 ef             	mov    %rbp,%rdi
   1096f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10974:	48 89 c1             	mov    %rax,%rcx
   10977:	6a 00                	pushq  $0x0
   10979:	e8 32 e3 ff ff       	callq  ecb0 <ecp_mul_restartable_internal>
   1097e:	59                   	pop    %rcx
   1097f:	5e                   	pop    %rsi
   10980:	41 89 c7             	mov    %eax,%r15d
   10983:	85 c0                	test   %eax,%eax
   10985:	0f 85 98 fe ff ff    	jne    10823 <mbedtls_ecp_self_test+0x203>
   1098b:	4c 8b 04 24          	mov    (%rsp),%r8
   1098f:	4c 89 e1             	mov    %r12,%rcx
   10992:	4c 89 f2             	mov    %r14,%rdx
   10995:	48 89 ee             	mov    %rbp,%rsi
   10998:	4c 8d 8c 24 d0 01 00 	lea    0x1d0(%rsp),%r9
   1099f:	00 
   109a0:	89 df                	mov    %ebx,%edi
   109a2:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   109a7:	e8 14 f4 ff ff       	callq  fdc0 <self_test_point.constprop.0>
   109ac:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   109b1:	85 c0                	test   %eax,%eax
   109b3:	41 89 c7             	mov    %eax,%r15d
   109b6:	0f 85 54 ff ff ff    	jne    10910 <mbedtls_ecp_self_test+0x2f0>
   109bc:	48 8d 35 15 b2 00 00 	lea    0xb215(%rip),%rsi        # 1bbd8 <small_prime+0x678>
   109c3:	bf 01 00 00 00       	mov    $0x1,%edi
   109c8:	31 c0                	xor    %eax,%eax
   109ca:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   109cf:	e8 7c 39 ff ff       	callq  4350 <__printf_chk@plt>
   109d4:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   109d9:	4d 89 e8             	mov    %r13,%r8
   109dc:	4c 89 e1             	mov    %r12,%rcx
   109df:	4c 89 f2             	mov    %r14,%rdx
   109e2:	48 89 ee             	mov    %rbp,%rsi
   109e5:	89 df                	mov    %ebx,%edi
   109e7:	e8 d4 f3 ff ff       	callq  fdc0 <self_test_point.constprop.0>
   109ec:	41 89 c7             	mov    %eax,%r15d
   109ef:	85 c0                	test   %eax,%eax
   109f1:	74 0d                	je     10a00 <mbedtls_ecp_self_test+0x3e0>
   109f3:	0f 88 33 fe ff ff    	js     1082c <mbedtls_ecp_self_test+0x20c>
   109f9:	e9 44 fe ff ff       	jmpq   10842 <mbedtls_ecp_self_test+0x222>
   109fe:	66 90                	xchg   %ax,%ax
   10a00:	48 89 ef             	mov    %rbp,%rdi
   10a03:	e8 b8 ce ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
   10a08:	4c 89 f7             	mov    %r14,%rdi
   10a0b:	e8 10 bb ff ff       	callq  c520 <mbedtls_ecp_point_free.part.0>
   10a10:	48 8d 35 f9 b1 00 00 	lea    0xb1f9(%rip),%rsi        # 1bc10 <small_prime+0x6b0>
   10a17:	bf 01 00 00 00       	mov    $0x1,%edi
   10a1c:	31 c0                	xor    %eax,%eax
   10a1e:	e8 2d 39 ff ff       	callq  4350 <__printf_chk@plt>
   10a23:	be 09 00 00 00       	mov    $0x9,%esi
   10a28:	48 89 ef             	mov    %rbp,%rdi
   10a2b:	e8 80 16 00 00       	callq  120b0 <mbedtls_ecp_group_load>
   10a30:	41 89 c7             	mov    %eax,%r15d
   10a33:	85 c0                	test   %eax,%eax
   10a35:	0f 85 e8 fd ff ff    	jne    10823 <mbedtls_ecp_self_test+0x203>
   10a3b:	e9 ab fe ff ff       	jmpq   108eb <mbedtls_ecp_self_test+0x2cb>
   10a40:	e8 2b 38 ff ff       	callq  4270 <__stack_chk_fail@plt>
   10a45:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10a4c:	00 00 00 
   10a4f:	90                   	nop

0000000000010a50 <ecp_mod_p255>:
   10a50:	e9 5b 46 02 00       	jmpq   350b0 <ecp_mod_p255.instr.bb_10a50>
   10a55:	56                   	push   %rsi
   10a56:	41 55                	push   %r13
   10a58:	41 54                	push   %r12
   10a5a:	55                   	push   %rbp
   10a5b:	53                   	push   %rbx
   10a5c:	48 83 ec 30          	sub    $0x30,%rsp
   10a60:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   10a64:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10a6b:	00 00 
   10a6d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10a72:	31 c0                	xor    %eax,%eax
   10a74:	49 83 fd 04          	cmp    $0x4,%r13
   10a78:	0f 86 95 00 00 00    	jbe    10b13 <ecp_mod_p255+0xc3>
   10a7e:	e9 b5 46 02 00       	jmpq   35138 <instr.bb_10a7e>
   10a83:	83 fd 04             	cmp    $0x4,%ebp
   10a86:	0f 87 a4 00 00 00    	ja     10b30 <ecp_mod_p255+0xe0>
   10a8c:	e9 b5 46 02 00       	jmpq   35146 <instr.bb_10a8c>
   10a91:	89 e1                	mov    %esp,%ecx
   10a93:	49 89 fc             	mov    %rdi,%r12
   10a96:	b9 20 00 00 00       	mov    $0x20,%ecx
   10a9b:	4a 8d 1c ed 00 00 00 	lea    0x0(,%r13,8),%rbx
   10aa2:	00 
   10aa3:	4c 89 cf             	mov    %r9,%rdi
   10aa6:	4c 8d 75 20          	lea    0x20(%rbp),%r14
   10aaa:	48 89 da             	mov    %rbx,%rdx
   10aad:	4c 89 f6             	mov    %r14,%rsi
   10ab0:	e8 3b 38 ff ff       	callq  42f0 <__memcpy_chk@plt>
   10ab5:	e9 b5 46 02 00       	jmpq   3516f <instr.bb_10ab5>
   10aba:	c7 45 20 00 00 00 00 	movl   $0x0,0x20(%rbp)
   10ac1:	31 ff                	xor    %edi,%edi
   10ac3:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   10ac7:	49 89 c1             	mov    %rax,%r9
   10aca:	89 d8                	mov    %ebx,%eax
   10acc:	48 c7 44 05 18 00 00 	movq   $0x0,0x18(%rbp,%rax,1)
   10ad3:	00 00 
   10ad5:	49 29 d6             	sub    %rdx,%r14
   10ad8:	42 8d 04 33          	lea    (%rbx,%r14,1),%eax
   10adc:	83 e0 f8             	and    $0xfffffff8,%eax
   10adf:	83 f8 08             	cmp    $0x8,%eax
   10ae2:	72 12                	jb     10af6 <ecp_mod_p255+0xa6>
   10ae4:	e9 b9 46 02 00       	jmpq   351a2 <instr.bb_10ae4>
   10ae9:	e9 b9 46 02 00       	jmpq   351a7 <instr.bb_10ae9>
   10aee:	48 89 3c 32          	mov    %rdi,(%rdx,%rsi,1)
   10af2:	39 c1                	cmp    %eax,%ecx
   10af4:	72 f3                	jb     10ae9 <ecp_mod_p255+0x99>
   10af6:	e9 bd 46 02 00       	jmpq   351b8 <instr.bb_10af6>
   10afb:	4c 89 e9             	mov    %r13,%rcx
   10afe:	4c 89 ca             	mov    %r9,%rdx
   10b01:	be 05 00 00 00       	mov    $0x5,%esi
   10b06:	41 b8 26 00 00 00    	mov    $0x26,%r8d
   10b0c:	e8 4f 9a ff ff       	callq  a560 <mbedtls_mpi_core_mla>
   10b11:	e9 bd 46 02 00       	jmpq   351d3 <instr.bb_10b11>
   10b16:	24 28                	and    $0x28,%al
   10b18:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   10b1f:	00 00 
   10b21:	75 14                	jne    10b37 <ecp_mod_p255+0xe7>
   10b23:	e9 c1 46 02 00       	jmpq   351e9 <instr.bb_10b23>
   10b28:	5d                   	pop    %rbp
   10b29:	41 5c                	pop    %r12
   10b2b:	41 5d                	pop    %r13
   10b2d:	41 5e                	pop    %r14
   10b2f:	c3                   	retq   
   10b30:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
   10b35:	eb dc                	jmp    10b13 <ecp_mod_p255+0xc3>
   10b37:	e8 34 37 ff ff       	callq  4270 <__stack_chk_fail@plt>
   10b3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010b40 <ecp_mod_p448>:
   10b40:	f3 0f 1e fa          	endbr64 
   10b44:	41 55                	push   %r13
   10b46:	41 54                	push   %r12
   10b48:	55                   	push   %rbp
   10b49:	53                   	push   %rbx
   10b4a:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   10b51:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   10b55:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10b5c:	00 00 
   10b5e:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   10b65:	00 
   10b66:	31 c0                	xor    %eax,%eax
   10b68:	48 83 fa 07          	cmp    $0x7,%rdx
   10b6c:	0f 86 95 00 00 00    	jbe    10c07 <ecp_mod_p448+0xc7>
   10b72:	48 83 ea 07          	sub    $0x7,%rdx
   10b76:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   10b7d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10b82:	48 83 fa 07          	cmp    $0x7,%rdx
   10b86:	0f 87 9a 01 00 00    	ja     10d26 <ecp_mod_p448+0x1e6>
   10b8c:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10b90:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10b94:	48 89 fd             	mov    %rdi,%rbp
   10b97:	48 c1 e2 03          	shl    $0x3,%rdx
   10b9b:	48 8d 9c 24 80 00 00 	lea    0x80(%rsp),%rbx
   10ba2:	00 
   10ba3:	b9 40 00 00 00       	mov    $0x40,%ecx
   10ba8:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   10baf:	00 
   10bb0:	49 8d 74 24 38       	lea    0x38(%r12),%rsi
   10bb5:	48 89 df             	mov    %rbx,%rdi
   10bb8:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   10bbd:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   10bc4:	00 
   10bc5:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   10bcc:	00 
   10bcd:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   10bd4:	00 
   10bd5:	e8 16 37 ff ff       	callq  42f0 <__memcpy_chk@plt>
   10bda:	b8 07 00 00 00       	mov    $0x7,%eax
   10bdf:	90                   	nop
   10be0:	49 c7 04 c4 00 00 00 	movq   $0x0,(%r12,%rax,8)
   10be7:	00 
   10be8:	48 83 c0 01          	add    $0x1,%rax
   10bec:	48 39 45 08          	cmp    %rax,0x8(%rbp)
   10bf0:	77 ee                	ja     10be0 <ecp_mod_p448+0xa0>
   10bf2:	49 89 e4             	mov    %rsp,%r12
   10bf5:	48 89 ee             	mov    %rbp,%rsi
   10bf8:	48 89 ef             	mov    %rbp,%rdi
   10bfb:	4c 89 e2             	mov    %r12,%rdx
   10bfe:	e8 ad 4c ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
   10c03:	85 c0                	test   %eax,%eax
   10c05:	74 29                	je     10c30 <ecp_mod_p448+0xf0>
   10c07:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   10c0e:	00 
   10c0f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   10c16:	00 00 
   10c18:	0f 85 12 01 00 00    	jne    10d30 <ecp_mod_p448+0x1f0>
   10c1e:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   10c25:	5b                   	pop    %rbx
   10c26:	5d                   	pop    %rbp
   10c27:	41 5c                	pop    %r12
   10c29:	41 5d                	pop    %r13
   10c2b:	c3                   	retq   
   10c2c:	0f 1f 40 00          	nopl   0x0(%rax)
   10c30:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   10c35:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
   10c3a:	66 0f 6f 94 24 80 00 	movdqa 0x80(%rsp),%xmm2
   10c41:	00 00 
   10c43:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   10c48:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10c4d:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   10c54:	00 
   10c55:	be e0 00 00 00       	mov    $0xe0,%esi
   10c5a:	4c 89 ef             	mov    %r13,%rdi
   10c5d:	66 0f 6f 9c 24 90 00 	movdqa 0x90(%rsp),%xmm3
   10c64:	00 00 
   10c66:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   10c6b:	66 0f 6f a4 24 a0 00 	movdqa 0xa0(%rsp),%xmm4
   10c72:	00 00 
   10c74:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   10c79:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   10c7e:	0f 29 5c 24 50       	movaps %xmm3,0x50(%rsp)
   10c83:	0f 29 64 24 60       	movaps %xmm4,0x60(%rsp)
   10c88:	e8 f3 46 ff ff       	callq  5380 <mbedtls_mpi_shift_r>
   10c8d:	85 c0                	test   %eax,%eax
   10c8f:	0f 85 72 ff ff ff    	jne    10c07 <ecp_mod_p448+0xc7>
   10c95:	4c 89 ea             	mov    %r13,%rdx
   10c98:	48 89 ee             	mov    %rbp,%rsi
   10c9b:	48 89 ef             	mov    %rbp,%rdi
   10c9e:	e8 0d 4c ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
   10ca3:	85 c0                	test   %eax,%eax
   10ca5:	0f 85 5c ff ff ff    	jne    10c07 <ecp_mod_p448+0xc7>
   10cab:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10cb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10cb5:	48 21 84 24 98 00 00 	and    %rax,0x98(%rsp)
   10cbc:	00 
   10cbd:	48 83 fa 04          	cmp    $0x4,%rdx
   10cc1:	76 1c                	jbe    10cdf <ecp_mod_p448+0x19f>
   10cc3:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   10cca:	00 
   10ccb:	48 8d 14 d3          	lea    (%rbx,%rdx,8),%rdx
   10ccf:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   10cd6:	48 83 c0 08          	add    $0x8,%rax
   10cda:	48 39 c2             	cmp    %rax,%rdx
   10cdd:	75 f0                	jne    10ccf <ecp_mod_p448+0x18f>
   10cdf:	4c 89 ea             	mov    %r13,%rdx
   10ce2:	4c 89 e6             	mov    %r12,%rsi
   10ce5:	4c 89 e7             	mov    %r12,%rdi
   10ce8:	e8 c3 4b ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
   10ced:	85 c0                	test   %eax,%eax
   10cef:	0f 85 12 ff ff ff    	jne    10c07 <ecp_mod_p448+0xc7>
   10cf5:	be e0 00 00 00       	mov    $0xe0,%esi
   10cfa:	4c 89 e7             	mov    %r12,%rdi
   10cfd:	48 c7 44 24 08 08 00 	movq   $0x8,0x8(%rsp)
   10d04:	00 00 
   10d06:	e8 45 45 ff ff       	callq  5250 <mbedtls_mpi_shift_l>
   10d0b:	85 c0                	test   %eax,%eax
   10d0d:	0f 85 f4 fe ff ff    	jne    10c07 <ecp_mod_p448+0xc7>
   10d13:	4c 89 e2             	mov    %r12,%rdx
   10d16:	48 89 ee             	mov    %rbp,%rsi
   10d19:	48 89 ef             	mov    %rbp,%rdi
   10d1c:	e8 8f 4b ff ff       	callq  58b0 <mbedtls_mpi_add_mpi>
   10d21:	e9 e1 fe ff ff       	jmpq   10c07 <ecp_mod_p448+0xc7>
   10d26:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
   10d2b:	e9 d7 fe ff ff       	jmpq   10c07 <ecp_mod_p448+0xc7>
   10d30:	e8 3b 35 ff ff       	callq  4270 <__stack_chk_fail@plt>
   10d35:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10d3c:	00 00 00 00 

0000000000010d40 <ecp_mod_p224k1>:
   10d40:	f3 0f 1e fa          	endbr64 
   10d44:	41 56                	push   %r14
   10d46:	41 55                	push   %r13
   10d48:	41 54                	push   %r12
   10d4a:	55                   	push   %rbp
   10d4b:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   10d52:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   10d56:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10d5d:	00 00 
   10d5f:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   10d64:	31 c0                	xor    %eax,%eax
   10d66:	48 83 fa 03          	cmp    $0x3,%rdx
   10d6a:	0f 86 98 01 00 00    	jbe    10f08 <ecp_mod_p224k1+0x1c8>
   10d70:	48 8d 05 f9 d2 01 00 	lea    0x1d2f9(%rip),%rax        # 2e070 <Rp.5158>
   10d77:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
   10d7c:	48 83 ea 03          	sub    $0x3,%rdx
   10d80:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   10d87:	00 
   10d88:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10d8d:	48 89 fd             	mov    %rdi,%rbp
   10d90:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   10d97:	00 00 
   10d99:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   10da0:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   10da5:	48 83 fa 05          	cmp    $0x5,%rdx
   10da9:	0f 87 81 01 00 00    	ja     10f30 <ecp_mod_p224k1+0x1f0>
   10daf:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10db4:	48 c1 e2 03          	shl    $0x3,%rdx
   10db8:	48 8b 45 10          	mov    0x10(%rbp),%rax
   10dbc:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10dc0:	4c 89 ef             	mov    %r13,%rdi
   10dc3:	b9 30 00 00 00       	mov    $0x30,%ecx
   10dc8:	49 89 e6             	mov    %rsp,%r14
   10dcb:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   10dd0:	48 8d 70 18          	lea    0x18(%rax),%rsi
   10dd4:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   10dd9:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   10dde:	e8 0d 35 ff ff       	callq  42f0 <__memcpy_chk@plt>
   10de3:	be 20 00 00 00       	mov    $0x20,%esi
   10de8:	4c 89 f7             	mov    %r14,%rdi
   10deb:	e8 90 45 ff ff       	callq  5380 <mbedtls_mpi_shift_r>
   10df0:	85 c0                	test   %eax,%eax
   10df2:	0f 85 10 01 00 00    	jne    10f08 <ecp_mod_p224k1+0x1c8>
   10df8:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   10dfc:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   10e01:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   10e06:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10e0b:	48 21 42 18          	and    %rax,0x18(%rdx)
   10e0f:	48 83 7d 08 04       	cmpq   $0x4,0x8(%rbp)
   10e14:	b8 04 00 00 00       	mov    $0x4,%eax
   10e19:	76 17                	jbe    10e32 <ecp_mod_p224k1+0xf2>
   10e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e20:	48 c7 04 c2 00 00 00 	movq   $0x0,(%rdx,%rax,8)
   10e27:	00 
   10e28:	48 83 c0 01          	add    $0x1,%rax
   10e2c:	48 3b 45 08          	cmp    0x8(%rbp),%rax
   10e30:	72 ee                	jb     10e20 <ecp_mod_p224k1+0xe0>
   10e32:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   10e37:	4c 89 f6             	mov    %r14,%rsi
   10e3a:	4c 89 f7             	mov    %r14,%rdi
   10e3d:	4c 89 e2             	mov    %r12,%rdx
   10e40:	e8 6b 4b ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
   10e45:	85 c0                	test   %eax,%eax
   10e47:	0f 85 bb 00 00 00    	jne    10f08 <ecp_mod_p224k1+0x1c8>
   10e4d:	4c 89 f2             	mov    %r14,%rdx
   10e50:	48 89 ee             	mov    %rbp,%rsi
   10e53:	48 89 ef             	mov    %rbp,%rdi
   10e56:	e8 75 47 ff ff       	callq  55d0 <mbedtls_mpi_add_abs>
   10e5b:	85 c0                	test   %eax,%eax
   10e5d:	0f 85 a5 00 00 00    	jne    10f08 <ecp_mod_p224k1+0x1c8>
   10e63:	48 8b 45 08          	mov    0x8(%rbp),%rax
   10e67:	48 8d 50 fd          	lea    -0x3(%rax),%rdx
   10e6b:	48 83 fa 05          	cmp    $0x5,%rdx
   10e6f:	0f 87 d3 00 00 00    	ja     10f48 <ecp_mod_p224k1+0x208>
   10e75:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10e7a:	48 c1 e2 03          	shl    $0x3,%rdx
   10e7e:	48 8b 45 10          	mov    0x10(%rbp),%rax
   10e82:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10e86:	4c 89 ef             	mov    %r13,%rdi
   10e89:	b9 30 00 00 00       	mov    $0x30,%ecx
   10e8e:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   10e93:	48 8d 70 18          	lea    0x18(%rax),%rsi
   10e97:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   10e9c:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   10ea1:	e8 4a 34 ff ff       	callq  42f0 <__memcpy_chk@plt>
   10ea6:	be 20 00 00 00       	mov    $0x20,%esi
   10eab:	4c 89 f7             	mov    %r14,%rdi
   10eae:	e8 cd 44 ff ff       	callq  5380 <mbedtls_mpi_shift_r>
   10eb3:	85 c0                	test   %eax,%eax
   10eb5:	75 51                	jne    10f08 <ecp_mod_p224k1+0x1c8>
   10eb7:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   10ebb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   10ec0:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   10ec5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10eca:	48 21 42 18          	and    %rax,0x18(%rdx)
   10ece:	48 83 7d 08 04       	cmpq   $0x4,0x8(%rbp)
   10ed3:	b8 04 00 00 00       	mov    $0x4,%eax
   10ed8:	76 18                	jbe    10ef2 <ecp_mod_p224k1+0x1b2>
   10eda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10ee0:	48 c7 04 c2 00 00 00 	movq   $0x0,(%rdx,%rax,8)
   10ee7:	00 
   10ee8:	48 83 c0 01          	add    $0x1,%rax
   10eec:	48 3b 45 08          	cmp    0x8(%rbp),%rax
   10ef0:	72 ee                	jb     10ee0 <ecp_mod_p224k1+0x1a0>
   10ef2:	4c 89 e2             	mov    %r12,%rdx
   10ef5:	4c 89 f6             	mov    %r14,%rsi
   10ef8:	4c 89 f7             	mov    %r14,%rdi
   10efb:	e8 b0 4a ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
   10f00:	85 c0                	test   %eax,%eax
   10f02:	74 5c                	je     10f60 <ecp_mod_p224k1+0x220>
   10f04:	0f 1f 40 00          	nopl   0x0(%rax)
   10f08:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   10f0d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   10f14:	00 00 
   10f16:	75 58                	jne    10f70 <ecp_mod_p224k1+0x230>
   10f18:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   10f1f:	5d                   	pop    %rbp
   10f20:	41 5c                	pop    %r12
   10f22:	41 5d                	pop    %r13
   10f24:	41 5e                	pop    %r14
   10f26:	c3                   	retq   
   10f27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10f2e:	00 00 
   10f30:	48 c7 44 24 08 05 00 	movq   $0x5,0x8(%rsp)
   10f37:	00 00 
   10f39:	ba 28 00 00 00       	mov    $0x28,%edx
   10f3e:	e9 75 fe ff ff       	jmpq   10db8 <ecp_mod_p224k1+0x78>
   10f43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10f48:	48 c7 44 24 08 05 00 	movq   $0x5,0x8(%rsp)
   10f4f:	00 00 
   10f51:	ba 28 00 00 00       	mov    $0x28,%edx
   10f56:	e9 23 ff ff ff       	jmpq   10e7e <ecp_mod_p224k1+0x13e>
   10f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10f60:	4c 89 f2             	mov    %r14,%rdx
   10f63:	48 89 ee             	mov    %rbp,%rsi
   10f66:	48 89 ef             	mov    %rbp,%rdi
   10f69:	e8 62 46 ff ff       	callq  55d0 <mbedtls_mpi_add_abs>
   10f6e:	eb 98                	jmp    10f08 <ecp_mod_p224k1+0x1c8>
   10f70:	e8 fb 32 ff ff       	callq  4270 <__stack_chk_fail@plt>
   10f75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10f7c:	00 00 00 00 

0000000000010f80 <ecp_mod_p521>:
   10f80:	f3 0f 1e fa          	endbr64 
   10f84:	41 55                	push   %r13
   10f86:	be 12 00 00 00       	mov    $0x12,%esi
   10f8b:	41 54                	push   %r12
   10f8d:	53                   	push   %rbx
   10f8e:	48 89 fb             	mov    %rdi,%rbx
   10f91:	e8 5a 3c ff ff       	callq  4bf0 <mbedtls_mpi_grow>
   10f96:	41 89 c4             	mov    %eax,%r12d
   10f99:	85 c0                	test   %eax,%eax
   10f9b:	74 13                	je     10fb0 <ecp_mod_p521+0x30>
   10f9d:	44 89 e0             	mov    %r12d,%eax
   10fa0:	5b                   	pop    %rbx
   10fa1:	41 5c                	pop    %r12
   10fa3:	41 5d                	pop    %r13
   10fa5:	c3                   	retq   
   10fa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10fad:	00 00 00 
   10fb0:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   10fb4:	48 83 bb 88 00 00 00 	cmpq   $0x0,0x88(%rbx)
   10fbb:	00 
   10fbc:	0f 85 8e 00 00 00    	jne    11050 <ecp_mod_p521+0xd0>
   10fc2:	4c 8d 6b 48          	lea    0x48(%rbx),%r13
   10fc6:	48 89 df             	mov    %rbx,%rdi
   10fc9:	b9 09 00 00 00       	mov    $0x9,%ecx
   10fce:	49 b8 00 00 00 00 00 	movabs $0x80000000000000,%r8
   10fd5:	00 80 00 
   10fd8:	4c 89 ea             	mov    %r13,%rdx
   10fdb:	be 09 00 00 00       	mov    $0x9,%esi
   10fe0:	e8 7b 95 ff ff       	callq  a560 <mbedtls_mpi_core_mla>
   10fe5:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   10fe9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10fed:	48 89 de             	mov    %rbx,%rsi
   10ff0:	48 c1 e0 37          	shl    $0x37,%rax
   10ff4:	0f 11 43 48          	movups %xmm0,0x48(%rbx)
   10ff8:	48 89 df             	mov    %rbx,%rdi
   10ffb:	48 89 d1             	mov    %rdx,%rcx
   10ffe:	48 c1 ea 09          	shr    $0x9,%rdx
   11002:	0f 11 43 58          	movups %xmm0,0x58(%rbx)
   11006:	48 01 c2             	add    %rax,%rdx
   11009:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
   1100f:	0f 11 43 68          	movups %xmm0,0x68(%rbx)
   11013:	48 89 4b 40          	mov    %rcx,0x40(%rbx)
   11017:	b9 09 00 00 00       	mov    $0x9,%ecx
   1101c:	48 89 53 48          	mov    %rdx,0x48(%rbx)
   11020:	4c 89 ea             	mov    %r13,%rdx
   11023:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
   1102a:	00 00 00 00 
   1102e:	0f 11 43 78          	movups %xmm0,0x78(%rbx)
   11032:	e8 19 94 ff ff       	callq  a450 <mbedtls_mpi_core_add>
   11037:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   1103e:	00 
   1103f:	44 89 e0             	mov    %r12d,%eax
   11042:	5b                   	pop    %rbx
   11043:	41 5c                	pop    %r12
   11045:	41 5d                	pop    %r13
   11047:	c3                   	retq   
   11048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1104f:	00 
   11050:	f3 0f 1e fa          	endbr64 
   11054:	41 bc 80 b0 ff ff    	mov    $0xffffb080,%r12d
   1105a:	e9 3e ff ff ff       	jmpq   10f9d <ecp_mod_p521+0x1d>
   1105f:	90                   	nop

0000000000011060 <ecp_mod_p384>:
   11060:	f3 0f 1e fa          	endbr64 
   11064:	41 57                	push   %r15
   11066:	be 0c 00 00 00       	mov    $0xc,%esi
   1106b:	41 56                	push   %r14
   1106d:	41 55                	push   %r13
   1106f:	41 54                	push   %r12
   11071:	55                   	push   %rbp
   11072:	53                   	push   %rbx
   11073:	48 89 fb             	mov    %rdi,%rbx
   11076:	48 83 ec 58          	sub    $0x58,%rsp
   1107a:	e8 71 3b ff ff       	callq  4bf0 <mbedtls_mpi_grow>
   1107f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   11083:	85 c0                	test   %eax,%eax
   11085:	74 19                	je     110a0 <ecp_mod_p384+0x40>
   11087:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1108b:	48 83 c4 58          	add    $0x58,%rsp
   1108f:	5b                   	pop    %rbx
   11090:	5d                   	pop    %rbp
   11091:	41 5c                	pop    %r12
   11093:	41 5d                	pop    %r13
   11095:	41 5e                	pop    %r14
   11097:	41 5f                	pop    %r15
   11099:	c3                   	retq   
   1109a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   110a0:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
   110a7:	ff ff ff 
   110aa:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   110ae:	48 8b 0a             	mov    (%rdx),%rcx
   110b1:	48 8b 5a 30          	mov    0x30(%rdx),%rbx
   110b5:	48 8b 7a 50          	mov    0x50(%rdx),%rdi
   110b9:	4c 8b 5a 58          	mov    0x58(%rdx),%r11
   110bd:	41 89 d9             	mov    %ebx,%r9d
   110c0:	89 ce                	mov    %ecx,%esi
   110c2:	48 c1 e9 20          	shr    $0x20,%rcx
   110c6:	49 89 fc             	mov    %rdi,%r12
   110c9:	4c 01 ce             	add    %r9,%rsi
   110cc:	89 ff                	mov    %edi,%edi
   110ce:	4d 89 d8             	mov    %r11,%r8
   110d1:	49 c1 ec 20          	shr    $0x20,%r12
   110d5:	49 c1 e8 20          	shr    $0x20,%r8
   110d9:	45 89 db             	mov    %r11d,%r11d
   110dc:	4c 01 e6             	add    %r12,%rsi
   110df:	48 c1 eb 20          	shr    $0x20,%rbx
   110e3:	48 01 fe             	add    %rdi,%rsi
   110e6:	4c 29 c6             	sub    %r8,%rsi
   110e9:	49 89 f6             	mov    %rsi,%r14
   110ec:	89 f6                	mov    %esi,%esi
   110ee:	49 c1 fe 20          	sar    $0x20,%r14
   110f2:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   110f7:	49 01 ce             	add    %rcx,%r14
   110fa:	49 01 de             	add    %rbx,%r14
   110fd:	4d 01 de             	add    %r11,%r14
   11100:	4d 01 c6             	add    %r8,%r14
   11103:	4d 29 ce             	sub    %r9,%r14
   11106:	49 29 fe             	sub    %rdi,%r14
   11109:	4c 89 f1             	mov    %r14,%rcx
   1110c:	49 c1 e6 20          	shl    $0x20,%r14
   11110:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   11115:	4c 8b 72 08          	mov    0x8(%rdx),%r14
   11119:	48 c1 f9 20          	sar    $0x20,%rcx
   1111d:	45 89 f5             	mov    %r14d,%r13d
   11120:	49 21 c6             	and    %rax,%r14
   11123:	49 01 cd             	add    %rcx,%r13
   11126:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
   1112a:	4c 89 f6             	mov    %r14,%rsi
   1112d:	45 89 f7             	mov    %r14d,%r15d
   11130:	48 c1 ee 20          	shr    $0x20,%rsi
   11134:	41 89 ca             	mov    %ecx,%r10d
   11137:	48 c1 e9 20          	shr    $0x20,%rcx
   1113b:	4d 01 d5             	add    %r10,%r13
   1113e:	4d 01 c5             	add    %r8,%r13
   11141:	49 29 dd             	sub    %rbx,%r13
   11144:	4d 29 e5             	sub    %r12,%r13
   11147:	4c 89 ed             	mov    %r13,%rbp
   1114a:	48 c1 fd 20          	sar    $0x20,%rbp
   1114e:	48 01 ee             	add    %rbp,%rsi
   11151:	48 01 ce             	add    %rcx,%rsi
   11154:	4c 01 ce             	add    %r9,%rsi
   11157:	48 01 fe             	add    %rdi,%rsi
   1115a:	4c 01 e6             	add    %r12,%rsi
   1115d:	4c 29 d6             	sub    %r10,%rsi
   11160:	4c 29 de             	sub    %r11,%rsi
   11163:	45 09 ef             	or     %r13d,%r15d
   11166:	4c 8b 6a 10          	mov    0x10(%rdx),%r13
   1116a:	4c 29 c6             	sub    %r8,%rsi
   1116d:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   11172:	4c 8b 7a 40          	mov    0x40(%rdx),%r15
   11176:	48 89 f5             	mov    %rsi,%rbp
   11179:	48 c1 e6 20          	shl    $0x20,%rsi
   1117d:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   11182:	48 c1 fd 20          	sar    $0x20,%rbp
   11186:	44 89 ee             	mov    %r13d,%esi
   11189:	49 21 c5             	and    %rax,%r13
   1118c:	48 01 f5             	add    %rsi,%rbp
   1118f:	4a 8d 74 65 00       	lea    0x0(%rbp,%r12,2),%rsi
   11194:	44 89 fd             	mov    %r15d,%ebp
   11197:	48 01 ee             	add    %rbp,%rsi
   1119a:	48 01 de             	add    %rbx,%rsi
   1119d:	4c 01 ce             	add    %r9,%rsi
   111a0:	48 01 fe             	add    %rdi,%rsi
   111a3:	4c 01 de             	add    %r11,%rsi
   111a6:	48 29 ce             	sub    %rcx,%rsi
   111a9:	4c 29 c6             	sub    %r8,%rsi
   111ac:	4c 29 c6             	sub    %r8,%rsi
   111af:	49 89 f1             	mov    %rsi,%r9
   111b2:	49 c1 f9 20          	sar    $0x20,%r9
   111b6:	4d 89 ce             	mov    %r9,%r14
   111b9:	4d 89 e9             	mov    %r13,%r9
   111bc:	49 c1 e9 20          	shr    $0x20,%r9
   111c0:	4d 01 f1             	add    %r14,%r9
   111c3:	4f 8d 34 59          	lea    (%r9,%r11,2),%r14
   111c7:	4d 89 f9             	mov    %r15,%r9
   111ca:	49 c1 e9 20          	shr    $0x20,%r9
   111ce:	4d 01 ce             	add    %r9,%r14
   111d1:	4d 01 d6             	add    %r10,%r14
   111d4:	4c 01 f3             	add    %r14,%rbx
   111d7:	45 89 ee             	mov    %r13d,%r14d
   111da:	4c 01 e3             	add    %r12,%rbx
   111dd:	41 09 f6             	or     %esi,%r14d
   111e0:	4c 01 c3             	add    %r8,%rbx
   111e3:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   111e8:	4c 8b 72 18          	mov    0x18(%rdx),%r14
   111ec:	48 29 eb             	sub    %rbp,%rbx
   111ef:	49 89 df             	mov    %rbx,%r15
   111f2:	44 89 f6             	mov    %r14d,%esi
   111f5:	48 c1 e3 20          	shl    $0x20,%rbx
   111f9:	49 c1 ff 20          	sar    $0x20,%r15
   111fd:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   11202:	49 01 f7             	add    %rsi,%r15
   11205:	48 8b 72 48          	mov    0x48(%rdx),%rsi
   11209:	4f 8d 2c 47          	lea    (%r15,%r8,2),%r13
   1120d:	89 f3                	mov    %esi,%ebx
   1120f:	49 01 dd             	add    %rbx,%r13
   11212:	49 01 cd             	add    %rcx,%r13
   11215:	4d 01 ea             	add    %r13,%r10
   11218:	4d 01 da             	add    %r11,%r10
   1121b:	49 21 c6             	and    %rax,%r14
   1121e:	48 c1 ee 20          	shr    $0x20,%rsi
   11222:	4d 29 ca             	sub    %r9,%r10
   11225:	4d 89 f5             	mov    %r14,%r13
   11228:	4d 89 d7             	mov    %r10,%r15
   1122b:	49 c1 ed 20          	shr    $0x20,%r13
   1122f:	45 09 f2             	or     %r14d,%r10d
   11232:	49 c1 ff 20          	sar    $0x20,%r15
   11236:	4d 01 fd             	add    %r15,%r13
   11239:	49 01 f5             	add    %rsi,%r13
   1123c:	49 01 ed             	add    %rbp,%r13
   1123f:	4c 01 e9             	add    %r13,%rcx
   11242:	4c 01 c1             	add    %r8,%rcx
   11245:	48 29 d9             	sub    %rbx,%rcx
   11248:	49 89 cd             	mov    %rcx,%r13
   1124b:	48 c1 e1 20          	shl    $0x20,%rcx
   1124f:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   11254:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
   11258:	49 c1 fd 20          	sar    $0x20,%r13
   1125c:	41 89 ce             	mov    %ecx,%r14d
   1125f:	4d 01 f5             	add    %r14,%r13
   11262:	49 01 fd             	add    %rdi,%r13
   11265:	4d 01 cd             	add    %r9,%r13
   11268:	4c 01 ed             	add    %r13,%rbp
   1126b:	48 29 f5             	sub    %rsi,%rbp
   1126e:	49 89 ed             	mov    %rbp,%r13
   11271:	48 c1 fd 20          	sar    $0x20,%rbp
   11275:	49 89 ee             	mov    %rbp,%r14
   11278:	48 89 cd             	mov    %rcx,%rbp
   1127b:	48 21 c5             	and    %rax,%rbp
   1127e:	49 89 ef             	mov    %rbp,%r15
   11281:	44 09 ed             	or     %r13d,%ebp
   11284:	49 c1 ef 20          	shr    $0x20,%r15
   11288:	4d 01 fe             	add    %r15,%r14
   1128b:	4d 01 e6             	add    %r12,%r14
   1128e:	49 01 de             	add    %rbx,%r14
   11291:	4d 01 f1             	add    %r14,%r9
   11294:	4c 8b 72 28          	mov    0x28(%rdx),%r14
   11298:	49 29 f9             	sub    %rdi,%r9
   1129b:	4d 89 cf             	mov    %r9,%r15
   1129e:	49 c1 e1 20          	shl    $0x20,%r9
   112a2:	49 c1 ff 20          	sar    $0x20,%r15
   112a6:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   112ab:	45 89 f1             	mov    %r14d,%r9d
   112ae:	4c 89 f9             	mov    %r15,%rcx
   112b1:	4c 01 c9             	add    %r9,%rcx
   112b4:	4c 01 d9             	add    %r11,%rcx
   112b7:	48 01 f1             	add    %rsi,%rcx
   112ba:	4c 8d 2c 0b          	lea    (%rbx,%rcx,1),%r13
   112be:	4d 29 e5             	sub    %r12,%r13
   112c1:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
   112c6:	4c 89 e9             	mov    %r13,%rcx
   112c9:	49 c1 fd 20          	sar    $0x20,%r13
   112cd:	4d 89 e9             	mov    %r13,%r9
   112d0:	4d 89 f5             	mov    %r14,%r13
   112d3:	49 21 c5             	and    %rax,%r13
   112d6:	4c 89 eb             	mov    %r13,%rbx
   112d9:	41 09 cd             	or     %ecx,%r13d
   112dc:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   112e1:	48 c1 eb 20          	shr    $0x20,%rbx
   112e5:	49 01 d9             	add    %rbx,%r9
   112e8:	4d 01 c1             	add    %r8,%r9
   112eb:	49 01 f9             	add    %rdi,%r9
   112ee:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   112f3:	4e 8d 04 0e          	lea    (%rsi,%r9,1),%r8
   112f7:	4d 29 d8             	sub    %r11,%r8
   112fa:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   112ff:	4c 89 c3             	mov    %r8,%rbx
   11302:	48 c1 fb 20          	sar    $0x20,%rbx
   11306:	49 09 fb             	or     %rdi,%r11
   11309:	49 89 d9             	mov    %rbx,%r9
   1130c:	4c 89 c3             	mov    %r8,%rbx
   1130f:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   11314:	49 21 c3             	and    %rax,%r11
   11317:	48 c1 e3 20          	shl    $0x20,%rbx
   1131b:	4c 09 c1             	or     %r8,%rcx
   1131e:	4b 8d 34 08          	lea    (%r8,%r9,1),%rsi
   11322:	49 89 ce             	mov    %rcx,%r14
   11325:	49 89 f0             	mov    %rsi,%r8
   11328:	49 21 c6             	and    %rax,%r14
   1132b:	49 c1 f8 20          	sar    $0x20,%r8
   1132f:	4d 89 f7             	mov    %r14,%r15
   11332:	41 09 f6             	or     %esi,%r14d
   11335:	49 c1 ef 20          	shr    $0x20,%r15
   11339:	4d 01 c7             	add    %r8,%r15
   1133c:	4d 29 cf             	sub    %r9,%r15
   1133f:	4d 89 f8             	mov    %r15,%r8
   11342:	49 c1 e7 20          	shl    $0x20,%r15
   11346:	49 c1 f8 20          	sar    $0x20,%r8
   1134a:	4c 01 c7             	add    %r8,%rdi
   1134d:	4d 89 d8             	mov    %r11,%r8
   11350:	49 c1 e8 20          	shr    $0x20,%r8
   11354:	48 89 fe             	mov    %rdi,%rsi
   11357:	41 09 fb             	or     %edi,%r11d
   1135a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1135f:	48 c1 fe 20          	sar    $0x20,%rsi
   11363:	4c 89 c1             	mov    %r8,%rcx
   11366:	48 01 f1             	add    %rsi,%rcx
   11369:	4c 01 c9             	add    %r9,%rcx
   1136c:	48 89 ce             	mov    %rcx,%rsi
   1136f:	49 89 c8             	mov    %rcx,%r8
   11372:	48 c1 fe 20          	sar    $0x20,%rsi
   11376:	49 c1 e0 20          	shl    $0x20,%r8
   1137a:	49 09 fc             	or     %rdi,%r12
   1137d:	4c 09 eb             	or     %r13,%rbx
   11380:	48 8d 0c 37          	lea    (%rdi,%rsi,1),%rcx
   11384:	49 21 c4             	and    %rax,%r12
   11387:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   1138c:	49 01 c9             	add    %rcx,%r9
   1138f:	4c 89 e6             	mov    %r12,%rsi
   11392:	4c 89 cf             	mov    %r9,%rdi
   11395:	48 c1 ee 20          	shr    $0x20,%rsi
   11399:	45 09 cc             	or     %r9d,%r12d
   1139c:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
   113a1:	48 c1 ff 20          	sar    $0x20,%rdi
   113a5:	48 89 f9             	mov    %rdi,%rcx
   113a8:	49 09 e9             	or     %rbp,%r9
   113ab:	48 01 f1             	add    %rsi,%rcx
   113ae:	49 21 c1             	and    %rax,%r9
   113b1:	48 89 ce             	mov    %rcx,%rsi
   113b4:	48 89 cf             	mov    %rcx,%rdi
   113b7:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   113bc:	48 c1 fe 20          	sar    $0x20,%rsi
   113c0:	48 c1 e7 20          	shl    $0x20,%rdi
   113c4:	4c 09 d1             	or     %r10,%rcx
   113c7:	4d 8d 04 32          	lea    (%r10,%rsi,1),%r8
   113cb:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   113d0:	48 21 c1             	and    %rax,%rcx
   113d3:	4c 89 c6             	mov    %r8,%rsi
   113d6:	48 89 cf             	mov    %rcx,%rdi
   113d9:	48 c1 fe 20          	sar    $0x20,%rsi
   113dd:	49 89 ca             	mov    %rcx,%r10
   113e0:	48 c1 ef 20          	shr    $0x20,%rdi
   113e4:	45 09 c2             	or     %r8d,%r10d
   113e7:	48 01 f7             	add    %rsi,%rdi
   113ea:	48 89 fe             	mov    %rdi,%rsi
   113ed:	48 c1 e7 20          	shl    $0x20,%rdi
   113f1:	48 c1 fe 20          	sar    $0x20,%rsi
   113f5:	4c 8d 44 35 00       	lea    0x0(%rbp,%rsi,1),%r8
   113fa:	4c 89 ce             	mov    %r9,%rsi
   113fd:	4c 89 c1             	mov    %r8,%rcx
   11400:	48 c1 ee 20          	shr    $0x20,%rsi
   11404:	45 09 c1             	or     %r8d,%r9d
   11407:	49 89 d8             	mov    %rbx,%r8
   1140a:	48 c1 f9 20          	sar    $0x20,%rcx
   1140e:	49 21 c0             	and    %rax,%r8
   11411:	48 01 ce             	add    %rcx,%rsi
   11414:	4c 89 c5             	mov    %r8,%rbp
   11417:	48 89 f1             	mov    %rsi,%rcx
   1141a:	48 c1 ed 20          	shr    $0x20,%rbp
   1141e:	48 c1 f9 20          	sar    $0x20,%rcx
   11422:	48 c1 e6 20          	shl    $0x20,%rsi
   11426:	49 8d 5c 0d 00       	lea    0x0(%r13,%rcx,1),%rbx
   1142b:	48 89 d9             	mov    %rbx,%rcx
   1142e:	41 09 d8             	or     %ebx,%r8d
   11431:	48 c1 f9 20          	sar    $0x20,%rcx
   11435:	48 01 e9             	add    %rbp,%rcx
   11438:	49 89 cd             	mov    %rcx,%r13
   1143b:	49 c1 fd 20          	sar    $0x20,%r13
   1143f:	48 c1 e1 20          	shl    $0x20,%rcx
   11443:	4d 09 f7             	or     %r14,%r15
   11446:	4c 89 fb             	mov    %r15,%rbx
   11449:	4d 01 ee             	add    %r13,%r14
   1144c:	48 21 c3             	and    %rax,%rbx
   1144f:	4d 89 f7             	mov    %r14,%r15
   11452:	48 89 dd             	mov    %rbx,%rbp
   11455:	49 c1 ff 20          	sar    $0x20,%r15
   11459:	44 09 f3             	or     %r14d,%ebx
   1145c:	48 c1 ed 20          	shr    $0x20,%rbp
   11460:	4c 01 fd             	add    %r15,%rbp
   11463:	4c 29 ed             	sub    %r13,%rbp
   11466:	49 89 ef             	mov    %rbp,%r15
   11469:	48 c1 e5 20          	shl    $0x20,%rbp
   1146d:	48 09 eb             	or     %rbp,%rbx
   11470:	49 c1 ff 20          	sar    $0x20,%r15
   11474:	48 89 1a             	mov    %rbx,(%rdx)
   11477:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   1147c:	4b 8d 2c 3b          	lea    (%r11,%r15,1),%rbp
   11480:	4c 09 db             	or     %r11,%rbx
   11483:	49 89 eb             	mov    %rbp,%r11
   11486:	48 21 c3             	and    %rax,%rbx
   11489:	49 c1 fb 20          	sar    $0x20,%r11
   1148d:	49 89 de             	mov    %rbx,%r14
   11490:	09 eb                	or     %ebp,%ebx
   11492:	49 c1 ee 20          	shr    $0x20,%r14
   11496:	4d 01 f3             	add    %r14,%r11
   11499:	4d 01 eb             	add    %r13,%r11
   1149c:	4d 89 de             	mov    %r11,%r14
   1149f:	49 c1 e3 20          	shl    $0x20,%r11
   114a3:	4c 09 db             	or     %r11,%rbx
   114a6:	49 c1 fe 20          	sar    $0x20,%r14
   114aa:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   114af:	4b 8d 2c 34          	lea    (%r12,%r14,1),%rbp
   114b3:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
   114b7:	4c 01 ed             	add    %r13,%rbp
   114ba:	4d 09 e3             	or     %r12,%r11
   114bd:	49 21 c3             	and    %rax,%r11
   114c0:	48 89 eb             	mov    %rbp,%rbx
   114c3:	48 c1 fb 20          	sar    $0x20,%rbx
   114c7:	4d 89 dd             	mov    %r11,%r13
   114ca:	49 c1 eb 20          	shr    $0x20,%r11
   114ce:	49 01 db             	add    %rbx,%r11
   114d1:	41 09 ed             	or     %ebp,%r13d
   114d4:	4c 89 db             	mov    %r11,%rbx
   114d7:	49 c1 e3 20          	shl    $0x20,%r11
   114db:	48 c1 fb 20          	sar    $0x20,%rbx
   114df:	4d 09 dd             	or     %r11,%r13
   114e2:	4c 09 d7             	or     %r10,%rdi
   114e5:	4c 09 ce             	or     %r9,%rsi
   114e8:	4d 8d 1c 1a          	lea    (%r10,%rbx,1),%r11
   114ec:	48 21 c7             	and    %rax,%rdi
   114ef:	48 21 c6             	and    %rax,%rsi
   114f2:	4c 09 c1             	or     %r8,%rcx
   114f5:	49 89 fa             	mov    %rdi,%r10
   114f8:	4c 89 db             	mov    %r11,%rbx
   114fb:	44 09 df             	or     %r11d,%edi
   114fe:	48 21 c1             	and    %rax,%rcx
   11501:	48 c1 fb 20          	sar    $0x20,%rbx
   11505:	49 c1 ea 20          	shr    $0x20,%r10
   11509:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
   1150d:	49 01 da             	add    %rbx,%r10
   11510:	4c 89 d3             	mov    %r10,%rbx
   11513:	49 c1 e2 20          	shl    $0x20,%r10
   11517:	48 c1 fb 20          	sar    $0x20,%rbx
   1151b:	4c 09 d7             	or     %r10,%rdi
   1151e:	49 01 d9             	add    %rbx,%r9
   11521:	48 89 7a 18          	mov    %rdi,0x18(%rdx)
   11525:	48 89 f7             	mov    %rsi,%rdi
   11528:	4d 89 ca             	mov    %r9,%r10
   1152b:	48 c1 ef 20          	shr    $0x20,%rdi
   1152f:	44 09 ce             	or     %r9d,%esi
   11532:	49 c1 fa 20          	sar    $0x20,%r10
   11536:	4c 01 d7             	add    %r10,%rdi
   11539:	49 89 fa             	mov    %rdi,%r10
   1153c:	48 c1 e7 20          	shl    $0x20,%rdi
   11540:	49 c1 fa 20          	sar    $0x20,%r10
   11544:	48 09 fe             	or     %rdi,%rsi
   11547:	4b 8d 3c 10          	lea    (%r8,%r10,1),%rdi
   1154b:	48 89 72 20          	mov    %rsi,0x20(%rdx)
   1154f:	48 89 ce             	mov    %rcx,%rsi
   11552:	49 89 f8             	mov    %rdi,%r8
   11555:	48 c1 ee 20          	shr    $0x20,%rsi
   11559:	09 f9                	or     %edi,%ecx
   1155b:	49 c1 f8 20          	sar    $0x20,%r8
   1155f:	4c 01 c6             	add    %r8,%rsi
   11562:	48 89 f7             	mov    %rsi,%rdi
   11565:	48 c1 e7 20          	shl    $0x20,%rdi
   11569:	48 09 f9             	or     %rdi,%rcx
   1156c:	48 c1 ee 20          	shr    $0x20,%rsi
   11570:	48 89 4a 28          	mov    %rcx,0x28(%rdx)
   11574:	75 39                	jne    115af <ecp_mod_p384+0x54f>
   11576:	be 0c 00 00 00       	mov    $0xc,%esi
   1157b:	eb 17                	jmp    11594 <ecp_mod_p384+0x534>
   1157d:	0f 1f 00             	nopl   (%rax)
   11580:	83 e1 ff             	and    $0xffffffff,%ecx
   11583:	48 89 0f             	mov    %rcx,(%rdi)
   11586:	48 83 c6 01          	add    $0x1,%rsi
   1158a:	48 83 fe 18          	cmp    $0x18,%rsi
   1158e:	0f 84 f3 fa ff ff    	je     11087 <ecp_mod_p384+0x27>
   11594:	48 89 f1             	mov    %rsi,%rcx
   11597:	48 d1 e9             	shr    %rcx
   1159a:	48 8d 3c ca          	lea    (%rdx,%rcx,8),%rdi
   1159e:	48 8b 0f             	mov    (%rdi),%rcx
   115a1:	40 f6 c6 01          	test   $0x1,%sil
   115a5:	75 d9                	jne    11580 <ecp_mod_p384+0x520>
   115a7:	48 21 c1             	and    %rax,%rcx
   115aa:	48 89 0f             	mov    %rcx,(%rdi)
   115ad:	eb d7                	jmp    11586 <ecp_mod_p384+0x526>
   115af:	f3 0f 1e fa          	endbr64 
   115b3:	c7 44 24 0c 80 b0 ff 	movl   $0xffffb080,0xc(%rsp)
   115ba:	ff 
   115bb:	e9 c7 fa ff ff       	jmpq   11087 <ecp_mod_p384+0x27>

00000000000115c0 <ecp_mod_p256>:
   115c0:	f3 0f 1e fa          	endbr64 
   115c4:	41 57                	push   %r15
   115c6:	be 08 00 00 00       	mov    $0x8,%esi
   115cb:	41 56                	push   %r14
   115cd:	41 55                	push   %r13
   115cf:	41 54                	push   %r12
   115d1:	55                   	push   %rbp
   115d2:	53                   	push   %rbx
   115d3:	48 89 fb             	mov    %rdi,%rbx
   115d6:	48 83 ec 28          	sub    $0x28,%rsp
   115da:	e8 11 36 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
   115df:	85 c0                	test   %eax,%eax
   115e1:	74 15                	je     115f8 <ecp_mod_p256+0x38>
   115e3:	48 83 c4 28          	add    $0x28,%rsp
   115e7:	5b                   	pop    %rbx
   115e8:	5d                   	pop    %rbp
   115e9:	41 5c                	pop    %r12
   115eb:	41 5d                	pop    %r13
   115ed:	41 5e                	pop    %r14
   115ef:	41 5f                	pop    %r15
   115f1:	c3                   	retq   
   115f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   115f8:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
   115ff:	ff ff ff 
   11602:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
   11606:	49 8b 39             	mov    (%r9),%rdi
   11609:	49 8b 71 20          	mov    0x20(%r9),%rsi
   1160d:	49 8b 69 28          	mov    0x28(%r9),%rbp
   11611:	4d 8b 59 30          	mov    0x30(%r9),%r11
   11615:	89 f2                	mov    %esi,%edx
   11617:	41 89 fe             	mov    %edi,%r14d
   1161a:	48 c1 ee 20          	shr    $0x20,%rsi
   1161e:	4d 8b 51 38          	mov    0x38(%r9),%r10
   11622:	49 01 d6             	add    %rdx,%r14
   11625:	49 89 ed             	mov    %rbp,%r13
   11628:	45 89 dc             	mov    %r11d,%r12d
   1162b:	49 c1 eb 20          	shr    $0x20,%r11
   1162f:	49 c1 ed 20          	shr    $0x20,%r13
   11633:	49 01 f6             	add    %rsi,%r14
   11636:	44 89 d1             	mov    %r10d,%ecx
   11639:	48 c1 ef 20          	shr    $0x20,%rdi
   1163d:	4d 29 ee             	sub    %r13,%r14
   11640:	89 ed                	mov    %ebp,%ebp
   11642:	49 c1 ea 20          	shr    $0x20,%r10
   11646:	4d 29 e6             	sub    %r12,%r14
   11649:	4d 29 de             	sub    %r11,%r14
   1164c:	49 29 ce             	sub    %rcx,%r14
   1164f:	4c 89 f3             	mov    %r14,%rbx
   11652:	45 89 f7             	mov    %r14d,%r15d
   11655:	48 c1 fb 20          	sar    $0x20,%rbx
   11659:	4c 89 3c 24          	mov    %r15,(%rsp)
   1165d:	4d 8b 79 08          	mov    0x8(%r9),%r15
   11661:	48 01 df             	add    %rbx,%rdi
   11664:	48 01 f7             	add    %rsi,%rdi
   11667:	48 01 ef             	add    %rbp,%rdi
   1166a:	4c 29 e7             	sub    %r12,%rdi
   1166d:	4c 29 df             	sub    %r11,%rdi
   11670:	48 29 cf             	sub    %rcx,%rdi
   11673:	4c 29 d7             	sub    %r10,%rdi
   11676:	48 89 fb             	mov    %rdi,%rbx
   11679:	48 c1 e7 20          	shl    $0x20,%rdi
   1167d:	48 c1 fb 20          	sar    $0x20,%rbx
   11681:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   11686:	44 89 ff             	mov    %r15d,%edi
   11689:	4d 21 c7             	and    %r8,%r15
   1168c:	48 01 df             	add    %rbx,%rdi
   1168f:	4c 89 fb             	mov    %r15,%rbx
   11692:	48 01 ef             	add    %rbp,%rdi
   11695:	48 c1 eb 20          	shr    $0x20,%rbx
   11699:	4c 01 ef             	add    %r13,%rdi
   1169c:	4c 29 df             	sub    %r11,%rdi
   1169f:	48 29 cf             	sub    %rcx,%rdi
   116a2:	4c 29 d7             	sub    %r10,%rdi
   116a5:	49 89 fe             	mov    %rdi,%r14
   116a8:	49 c1 fe 20          	sar    $0x20,%r14
   116ac:	4c 01 f3             	add    %r14,%rbx
   116af:	4a 8d 1c 6b          	lea    (%rbx,%r13,2),%rbx
   116b3:	4a 8d 1c 63          	lea    (%rbx,%r12,2),%rbx
   116b7:	4c 01 db             	add    %r11,%rbx
   116ba:	4c 29 d3             	sub    %r10,%rbx
   116bd:	41 09 ff             	or     %edi,%r15d
   116c0:	48 29 d3             	sub    %rdx,%rbx
   116c3:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   116c8:	48 29 f3             	sub    %rsi,%rbx
   116cb:	49 89 de             	mov    %rbx,%r14
   116ce:	48 c1 e3 20          	shl    $0x20,%rbx
   116d2:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   116d7:	49 8b 59 10          	mov    0x10(%r9),%rbx
   116db:	49 c1 fe 20          	sar    $0x20,%r14
   116df:	89 df                	mov    %ebx,%edi
   116e1:	4c 21 c3             	and    %r8,%rbx
   116e4:	49 01 fe             	add    %rdi,%r14
   116e7:	4b 8d 3c 66          	lea    (%r14,%r12,2),%rdi
   116eb:	4e 8d 3c 5f          	lea    (%rdi,%r11,2),%r15
   116ef:	48 89 df             	mov    %rbx,%rdi
   116f2:	49 01 cf             	add    %rcx,%r15
   116f5:	48 c1 ef 20          	shr    $0x20,%rdi
   116f9:	49 29 f7             	sub    %rsi,%r15
   116fc:	49 29 ef             	sub    %rbp,%r15
   116ff:	4d 89 fe             	mov    %r15,%r14
   11702:	44 09 fb             	or     %r15d,%ebx
   11705:	45 8b 79 18          	mov    0x18(%r9),%r15d
   11709:	49 c1 fe 20          	sar    $0x20,%r14
   1170d:	4c 01 f7             	add    %r14,%rdi
   11710:	4a 8d 3c 5f          	lea    (%rdi,%r11,2),%rdi
   11714:	48 8d 3c 4f          	lea    (%rdi,%rcx,2),%rdi
   11718:	4c 01 d7             	add    %r10,%rdi
   1171b:	48 29 ef             	sub    %rbp,%rdi
   1171e:	4c 29 ef             	sub    %r13,%rdi
   11721:	49 89 fe             	mov    %rdi,%r14
   11724:	48 c1 e7 20          	shl    $0x20,%rdi
   11728:	49 c1 fe 20          	sar    $0x20,%r14
   1172c:	4d 01 fe             	add    %r15,%r14
   1172f:	4d 8d 34 4e          	lea    (%r14,%rcx,2),%r14
   11733:	4f 8d 34 56          	lea    (%r14,%r10,2),%r14
   11737:	4c 01 f1             	add    %r14,%rcx
   1173a:	4c 01 d9             	add    %r11,%rcx
   1173d:	48 29 d1             	sub    %rdx,%rcx
   11740:	48 29 f1             	sub    %rsi,%rcx
   11743:	49 8b 71 18          	mov    0x18(%r9),%rsi
   11747:	49 89 ce             	mov    %rcx,%r14
   1174a:	4c 21 c6             	and    %r8,%rsi
   1174d:	49 c1 fe 20          	sar    $0x20,%r14
   11751:	4d 89 f7             	mov    %r14,%r15
   11754:	49 89 f6             	mov    %rsi,%r14
   11757:	49 c1 ee 20          	shr    $0x20,%r14
   1175b:	4d 01 fe             	add    %r15,%r14
   1175e:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   11763:	4f 8d 34 56          	lea    (%r14,%r10,2),%r14
   11767:	4d 01 f2             	add    %r14,%r10
   1176a:	49 01 d2             	add    %rdx,%r10
   1176d:	48 8b 14 24          	mov    (%rsp),%rdx
   11771:	49 29 ea             	sub    %rbp,%r10
   11774:	4d 29 ea             	sub    %r13,%r10
   11777:	09 f1                	or     %esi,%ecx
   11779:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1177e:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   11783:	4d 29 e2             	sub    %r12,%r10
   11786:	48 09 df             	or     %rbx,%rdi
   11789:	4d 29 da             	sub    %r11,%r10
   1178c:	48 09 d6             	or     %rdx,%rsi
   1178f:	4d 09 fd             	or     %r15,%r13
   11792:	4c 21 c7             	and    %r8,%rdi
   11795:	4d 89 d3             	mov    %r10,%r11
   11798:	4c 21 c6             	and    %r8,%rsi
   1179b:	4d 21 c5             	and    %r8,%r13
   1179e:	49 c1 e2 20          	shl    $0x20,%r10
   117a2:	49 c1 fb 20          	sar    $0x20,%r11
   117a6:	49 89 f4             	mov    %rsi,%r12
   117a9:	49 09 ca             	or     %rcx,%r10
   117ac:	4a 8d 2c 1a          	lea    (%rdx,%r11,1),%rbp
   117b0:	49 c1 ec 20          	shr    $0x20,%r12
   117b4:	48 89 ea             	mov    %rbp,%rdx
   117b7:	09 ee                	or     %ebp,%esi
   117b9:	4c 89 ed             	mov    %r13,%rbp
   117bc:	48 c1 fa 20          	sar    $0x20,%rdx
   117c0:	48 c1 ed 20          	shr    $0x20,%rbp
   117c4:	49 01 d4             	add    %rdx,%r12
   117c7:	4c 89 e2             	mov    %r12,%rdx
   117ca:	49 c1 e4 20          	shl    $0x20,%r12
   117ce:	48 c1 fa 20          	sar    $0x20,%rdx
   117d2:	4d 8d 34 17          	lea    (%r15,%rdx,1),%r14
   117d6:	4c 89 f2             	mov    %r14,%rdx
   117d9:	45 09 f5             	or     %r14d,%r13d
   117dc:	48 c1 fa 20          	sar    $0x20,%rdx
   117e0:	48 01 d5             	add    %rdx,%rbp
   117e3:	4c 29 dd             	sub    %r11,%rbp
   117e6:	48 89 ea             	mov    %rbp,%rdx
   117e9:	48 c1 e5 20          	shl    $0x20,%rbp
   117ed:	48 c1 fa 20          	sar    $0x20,%rdx
   117f1:	4c 8d 34 13          	lea    (%rbx,%rdx,1),%r14
   117f5:	48 89 fa             	mov    %rdi,%rdx
   117f8:	4c 89 f3             	mov    %r14,%rbx
   117fb:	48 c1 ea 20          	shr    $0x20,%rdx
   117ff:	44 09 f7             	or     %r14d,%edi
   11802:	48 c1 fb 20          	sar    $0x20,%rbx
   11806:	48 01 da             	add    %rbx,%rdx
   11809:	48 89 d3             	mov    %rdx,%rbx
   1180c:	48 c1 e2 20          	shl    $0x20,%rdx
   11810:	48 c1 fb 20          	sar    $0x20,%rbx
   11814:	48 01 cb             	add    %rcx,%rbx
   11817:	4d 21 c2             	and    %r8,%r10
   1181a:	49 09 f4             	or     %rsi,%r12
   1181d:	4c 09 ed             	or     %r13,%rbp
   11820:	4c 29 db             	sub    %r11,%rbx
   11823:	4c 89 d1             	mov    %r10,%rcx
   11826:	4d 21 c4             	and    %r8,%r12
   11829:	4c 21 c5             	and    %r8,%rbp
   1182c:	49 89 de             	mov    %rbx,%r14
   1182f:	48 c1 e9 20          	shr    $0x20,%rcx
   11833:	41 09 da             	or     %ebx,%r10d
   11836:	4c 89 e3             	mov    %r12,%rbx
   11839:	49 c1 fe 20          	sar    $0x20,%r14
   1183d:	48 c1 eb 20          	shr    $0x20,%rbx
   11841:	48 09 fa             	or     %rdi,%rdx
   11844:	4c 01 f1             	add    %r14,%rcx
   11847:	49 01 cb             	add    %rcx,%r11
   1184a:	4c 89 d9             	mov    %r11,%rcx
   1184d:	49 c1 e3 20          	shl    $0x20,%r11
   11851:	48 c1 f9 20          	sar    $0x20,%rcx
   11855:	4c 8d 34 0e          	lea    (%rsi,%rcx,1),%r14
   11859:	4c 89 f6             	mov    %r14,%rsi
   1185c:	45 09 f4             	or     %r14d,%r12d
   1185f:	48 c1 fe 20          	sar    $0x20,%rsi
   11863:	48 01 f3             	add    %rsi,%rbx
   11866:	48 89 de             	mov    %rbx,%rsi
   11869:	48 c1 e3 20          	shl    $0x20,%rbx
   1186d:	49 09 dc             	or     %rbx,%r12
   11870:	48 c1 fe 20          	sar    $0x20,%rsi
   11874:	4d 89 21             	mov    %r12,(%r9)
   11877:	4d 8d 64 35 00       	lea    0x0(%r13,%rsi,1),%r12
   1187c:	48 89 ee             	mov    %rbp,%rsi
   1187f:	4c 89 e3             	mov    %r12,%rbx
   11882:	48 c1 ee 20          	shr    $0x20,%rsi
   11886:	44 09 e5             	or     %r12d,%ebp
   11889:	48 c1 fb 20          	sar    $0x20,%rbx
   1188d:	48 01 de             	add    %rbx,%rsi
   11890:	48 29 ce             	sub    %rcx,%rsi
   11893:	48 89 f3             	mov    %rsi,%rbx
   11896:	48 c1 e6 20          	shl    $0x20,%rsi
   1189a:	48 c1 fb 20          	sar    $0x20,%rbx
   1189e:	48 09 f5             	or     %rsi,%rbp
   118a1:	48 01 df             	add    %rbx,%rdi
   118a4:	49 89 69 08          	mov    %rbp,0x8(%r9)
   118a8:	48 89 fb             	mov    %rdi,%rbx
   118ab:	48 c1 fb 20          	sar    $0x20,%rbx
   118af:	4c 21 c2             	and    %r8,%rdx
   118b2:	48 89 d6             	mov    %rdx,%rsi
   118b5:	09 fa                	or     %edi,%edx
   118b7:	48 c1 ee 20          	shr    $0x20,%rsi
   118bb:	48 01 de             	add    %rbx,%rsi
   118be:	48 89 f3             	mov    %rsi,%rbx
   118c1:	48 c1 e6 20          	shl    $0x20,%rsi
   118c5:	48 09 f2             	or     %rsi,%rdx
   118c8:	48 c1 fb 20          	sar    $0x20,%rbx
   118cc:	49 89 51 10          	mov    %rdx,0x10(%r9)
   118d0:	4c 89 da             	mov    %r11,%rdx
   118d3:	4d 8d 1c 1a          	lea    (%r10,%rbx,1),%r11
   118d7:	4c 89 de             	mov    %r11,%rsi
   118da:	4c 09 d2             	or     %r10,%rdx
   118dd:	48 29 ce             	sub    %rcx,%rsi
   118e0:	4c 21 c2             	and    %r8,%rdx
   118e3:	48 89 f7             	mov    %rsi,%rdi
   118e6:	49 89 d3             	mov    %rdx,%r11
   118e9:	48 c1 ea 20          	shr    $0x20,%rdx
   118ed:	48 c1 ff 20          	sar    $0x20,%rdi
   118f1:	41 09 f3             	or     %esi,%r11d
   118f4:	48 01 fa             	add    %rdi,%rdx
   118f7:	48 01 d1             	add    %rdx,%rcx
   118fa:	48 89 ca             	mov    %rcx,%rdx
   118fd:	48 c1 e2 20          	shl    $0x20,%rdx
   11901:	49 09 d3             	or     %rdx,%r11
   11904:	48 c1 e9 20          	shr    $0x20,%rcx
   11908:	4d 89 59 18          	mov    %r11,0x18(%r9)
   1190c:	75 38                	jne    11946 <ecp_mod_p256+0x386>
   1190e:	b9 08 00 00 00       	mov    $0x8,%ecx
   11913:	eb 17                	jmp    1192c <ecp_mod_p256+0x36c>
   11915:	0f 1f 00             	nopl   (%rax)
   11918:	83 e2 ff             	and    $0xffffffff,%edx
   1191b:	48 89 16             	mov    %rdx,(%rsi)
   1191e:	48 83 c1 01          	add    $0x1,%rcx
   11922:	48 83 f9 10          	cmp    $0x10,%rcx
   11926:	0f 84 b7 fc ff ff    	je     115e3 <ecp_mod_p256+0x23>
   1192c:	48 89 ca             	mov    %rcx,%rdx
   1192f:	48 d1 ea             	shr    %rdx
   11932:	49 8d 34 d1          	lea    (%r9,%rdx,8),%rsi
   11936:	48 8b 16             	mov    (%rsi),%rdx
   11939:	f6 c1 01             	test   $0x1,%cl
   1193c:	75 da                	jne    11918 <ecp_mod_p256+0x358>
   1193e:	4c 21 c2             	and    %r8,%rdx
   11941:	48 89 16             	mov    %rdx,(%rsi)
   11944:	eb d8                	jmp    1191e <ecp_mod_p256+0x35e>
   11946:	f3 0f 1e fa          	endbr64 
   1194a:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
   1194f:	e9 8f fc ff ff       	jmpq   115e3 <ecp_mod_p256+0x23>
   11954:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1195b:	00 00 00 00 
   1195f:	90                   	nop

0000000000011960 <ecp_mod_p224>:
   11960:	f3 0f 1e fa          	endbr64 
   11964:	41 57                	push   %r15
   11966:	be 07 00 00 00       	mov    $0x7,%esi
   1196b:	41 56                	push   %r14
   1196d:	41 55                	push   %r13
   1196f:	41 54                	push   %r12
   11971:	55                   	push   %rbp
   11972:	53                   	push   %rbx
   11973:	48 89 fb             	mov    %rdi,%rbx
   11976:	48 83 ec 18          	sub    $0x18,%rsp
   1197a:	e8 71 32 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
   1197f:	85 c0                	test   %eax,%eax
   11981:	74 15                	je     11998 <ecp_mod_p224+0x38>
   11983:	48 83 c4 18          	add    $0x18,%rsp
   11987:	5b                   	pop    %rbx
   11988:	5d                   	pop    %rbp
   11989:	41 5c                	pop    %r12
   1198b:	41 5d                	pop    %r13
   1198d:	41 5e                	pop    %r14
   1198f:	41 5f                	pop    %r15
   11991:	c3                   	retq   
   11992:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11998:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
   1199f:	ff ff ff 
   119a2:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   119a6:	48 8b 11             	mov    (%rcx),%rdx
   119a9:	4c 8b 79 28          	mov    0x28(%rcx),%r15
   119ad:	4c 8b 61 18          	mov    0x18(%rcx),%r12
   119b1:	48 8b 69 30          	mov    0x30(%rcx),%rbp
   119b5:	89 d7                	mov    %edx,%edi
   119b7:	4d 89 fe             	mov    %r15,%r14
   119ba:	48 c1 ea 20          	shr    $0x20,%rdx
   119be:	4c 8b 59 08          	mov    0x8(%rcx),%r11
   119c2:	49 c1 ec 20          	shr    $0x20,%r12
   119c6:	49 c1 ee 20          	shr    $0x20,%r14
   119ca:	41 89 ed             	mov    %ebp,%r13d
   119cd:	4c 29 e7             	sub    %r12,%rdi
   119d0:	45 89 da             	mov    %r11d,%r10d
   119d3:	48 c1 ed 20          	shr    $0x20,%rbp
   119d7:	4d 21 c3             	and    %r8,%r11
   119da:	4c 29 f7             	sub    %r14,%rdi
   119dd:	49 89 f9             	mov    %rdi,%r9
   119e0:	89 ff                	mov    %edi,%edi
   119e2:	49 c1 f9 20          	sar    $0x20,%r9
   119e6:	49 01 d1             	add    %rdx,%r9
   119e9:	48 8b 51 20          	mov    0x20(%rcx),%rdx
   119ed:	89 d3                	mov    %edx,%ebx
   119ef:	48 c1 ea 20          	shr    $0x20,%rdx
   119f3:	49 29 d9             	sub    %rbx,%r9
   119f6:	4d 29 e9             	sub    %r13,%r9
   119f9:	4c 89 ce             	mov    %r9,%rsi
   119fc:	49 c1 e1 20          	shl    $0x20,%r9
   11a00:	48 c1 fe 20          	sar    $0x20,%rsi
   11a04:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   11a09:	49 01 f2             	add    %rsi,%r10
   11a0c:	49 29 d2             	sub    %rdx,%r10
   11a0f:	49 29 ea             	sub    %rbp,%r10
   11a12:	4c 89 d6             	mov    %r10,%rsi
   11a15:	48 c1 fe 20          	sar    $0x20,%rsi
   11a19:	49 89 f1             	mov    %rsi,%r9
   11a1c:	4c 89 de             	mov    %r11,%rsi
   11a1f:	45 09 d3             	or     %r10d,%r11d
   11a22:	4c 8b 51 10          	mov    0x10(%rcx),%r10
   11a26:	48 c1 ee 20          	shr    $0x20,%rsi
   11a2a:	4c 01 ce             	add    %r9,%rsi
   11a2d:	45 89 f9             	mov    %r15d,%r9d
   11a30:	4c 29 ce             	sub    %r9,%rsi
   11a33:	4c 01 e6             	add    %r12,%rsi
   11a36:	45 89 d4             	mov    %r10d,%r12d
   11a39:	4d 21 c2             	and    %r8,%r10
   11a3c:	4c 01 f6             	add    %r14,%rsi
   11a3f:	49 89 f7             	mov    %rsi,%r15
   11a42:	48 c1 e6 20          	shl    $0x20,%rsi
   11a46:	49 c1 ff 20          	sar    $0x20,%r15
   11a4a:	4d 01 fc             	add    %r15,%r12
   11a4d:	4d 29 f4             	sub    %r14,%r12
   11a50:	4d 89 d6             	mov    %r10,%r14
   11a53:	4c 01 e3             	add    %r12,%rbx
   11a56:	4c 01 eb             	add    %r13,%rbx
   11a59:	49 89 dc             	mov    %rbx,%r12
   11a5c:	49 c1 fc 20          	sar    $0x20,%r12
   11a60:	49 c1 ee 20          	shr    $0x20,%r14
   11a64:	41 09 da             	or     %ebx,%r10d
   11a67:	8b 59 18             	mov    0x18(%rcx),%ebx
   11a6a:	4d 01 f4             	add    %r14,%r12
   11a6d:	4c 09 de             	or     %r11,%rsi
   11a70:	4d 29 ec             	sub    %r13,%r12
   11a73:	4c 21 c6             	and    %r8,%rsi
   11a76:	4c 01 e2             	add    %r12,%rdx
   11a79:	4c 8b 61 18          	mov    0x18(%rcx),%r12
   11a7d:	48 01 ea             	add    %rbp,%rdx
   11a80:	49 89 d5             	mov    %rdx,%r13
   11a83:	4d 21 c4             	and    %r8,%r12
   11a86:	48 c1 e2 20          	shl    $0x20,%rdx
   11a8a:	49 c1 fd 20          	sar    $0x20,%r13
   11a8e:	49 01 dd             	add    %rbx,%r13
   11a91:	49 29 ed             	sub    %rbp,%r13
   11a94:	4b 8d 1c 29          	lea    (%r9,%r13,1),%rbx
   11a98:	48 89 dd             	mov    %rbx,%rbp
   11a9b:	41 89 d9             	mov    %ebx,%r9d
   11a9e:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   11aa3:	48 c1 fd 20          	sar    $0x20,%rbp
   11aa7:	4d 09 e1             	or     %r12,%r9
   11aaa:	48 09 fb             	or     %rdi,%rbx
   11aad:	48 29 ef             	sub    %rbp,%rdi
   11ab0:	4c 21 c3             	and    %r8,%rbx
   11ab3:	49 89 fd             	mov    %rdi,%r13
   11ab6:	49 89 dc             	mov    %rbx,%r12
   11ab9:	49 c1 fd 20          	sar    $0x20,%r13
   11abd:	09 fb                	or     %edi,%ebx
   11abf:	48 89 f7             	mov    %rsi,%rdi
   11ac2:	49 c1 ec 20          	shr    $0x20,%r12
   11ac6:	48 c1 ef 20          	shr    $0x20,%rdi
   11aca:	4d 01 ec             	add    %r13,%r12
   11acd:	4d 89 e5             	mov    %r12,%r13
   11ad0:	49 c1 e4 20          	shl    $0x20,%r12
   11ad4:	49 c1 fd 20          	sar    $0x20,%r13
   11ad8:	4c 09 e3             	or     %r12,%rbx
   11adb:	4d 01 eb             	add    %r13,%r11
   11ade:	48 89 19             	mov    %rbx,(%rcx)
   11ae1:	4c 89 db             	mov    %r11,%rbx
   11ae4:	44 09 de             	or     %r11d,%esi
   11ae7:	48 c1 fb 20          	sar    $0x20,%rbx
   11aeb:	48 01 df             	add    %rbx,%rdi
   11aee:	48 01 fd             	add    %rdi,%rbp
   11af1:	48 89 ef             	mov    %rbp,%rdi
   11af4:	48 c1 ff 20          	sar    $0x20,%rdi
   11af8:	48 c1 e5 20          	shl    $0x20,%rbp
   11afc:	4c 09 d2             	or     %r10,%rdx
   11aff:	48 09 ee             	or     %rbp,%rsi
   11b02:	4c 01 d7             	add    %r10,%rdi
   11b05:	4c 21 c2             	and    %r8,%rdx
   11b08:	48 89 71 08          	mov    %rsi,0x8(%rcx)
   11b0c:	49 89 fa             	mov    %rdi,%r10
   11b0f:	48 89 d6             	mov    %rdx,%rsi
   11b12:	09 fa                	or     %edi,%edx
   11b14:	49 c1 fa 20          	sar    $0x20,%r10
   11b18:	48 c1 ee 20          	shr    $0x20,%rsi
   11b1c:	4c 01 d6             	add    %r10,%rsi
   11b1f:	49 89 f2             	mov    %rsi,%r10
   11b22:	48 c1 e6 20          	shl    $0x20,%rsi
   11b26:	48 09 f2             	or     %rsi,%rdx
   11b29:	49 c1 fa 20          	sar    $0x20,%r10
   11b2d:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   11b31:	44 89 ca             	mov    %r9d,%edx
   11b34:	4d 21 c1             	and    %r8,%r9
   11b37:	4c 01 d2             	add    %r10,%rdx
   11b3a:	89 d6                	mov    %edx,%esi
   11b3c:	49 09 f1             	or     %rsi,%r9
   11b3f:	48 c1 ea 20          	shr    $0x20,%rdx
   11b43:	4c 89 49 18          	mov    %r9,0x18(%rcx)
   11b47:	75 32                	jne    11b7b <ecp_mod_p224+0x21b>
   11b49:	be 07 00 00 00       	mov    $0x7,%esi
   11b4e:	eb 15                	jmp    11b65 <ecp_mod_p224+0x205>
   11b50:	8b 1c 11             	mov    (%rcx,%rdx,1),%ebx
   11b53:	48 89 1c 11          	mov    %rbx,(%rcx,%rdx,1)
   11b57:	48 83 c6 01          	add    $0x1,%rsi
   11b5b:	48 83 fe 0e          	cmp    $0xe,%rsi
   11b5f:	0f 84 1e fe ff ff    	je     11983 <ecp_mod_p224+0x23>
   11b65:	48 89 f2             	mov    %rsi,%rdx
   11b68:	48 d1 ea             	shr    %rdx
   11b6b:	48 c1 e2 03          	shl    $0x3,%rdx
   11b6f:	40 f6 c6 01          	test   $0x1,%sil
   11b73:	75 db                	jne    11b50 <ecp_mod_p224+0x1f0>
   11b75:	4c 21 04 11          	and    %r8,(%rcx,%rdx,1)
   11b79:	eb dc                	jmp    11b57 <ecp_mod_p224+0x1f7>
   11b7b:	f3 0f 1e fa          	endbr64 
   11b7f:	b8 80 b0 ff ff       	mov    $0xffffb080,%eax
   11b84:	e9 fa fd ff ff       	jmpq   11983 <ecp_mod_p224+0x23>
   11b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011b90 <ecp_mod_p192>:
   11b90:	f3 0f 1e fa          	endbr64 
   11b94:	53                   	push   %rbx
   11b95:	be 06 00 00 00       	mov    $0x6,%esi
   11b9a:	48 89 fb             	mov    %rdi,%rbx
   11b9d:	e8 4e 30 ff ff       	callq  4bf0 <mbedtls_mpi_grow>
   11ba2:	85 c0                	test   %eax,%eax
   11ba4:	74 0a                	je     11bb0 <ecp_mod_p192+0x20>
   11ba6:	5b                   	pop    %rbx
   11ba7:	c3                   	retq   
   11ba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11baf:	00 
   11bb0:	f3 0f 1e fa          	endbr64 
   11bb4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   11bb8:	31 f6                	xor    %esi,%esi
   11bba:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   11bbe:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   11bc2:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
   11bc9:	00 
   11bca:	4c 8b 5f 20          	mov    0x20(%rdi),%r11
   11bce:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
   11bd5:	00 
   11bd6:	49 89 d0             	mov    %rdx,%r8
   11bd9:	4c 03 07             	add    (%rdi),%r8
   11bdc:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   11be3:	00 
   11be4:	40 0f 92 c6          	setb   %sil
   11be8:	49 01 c8             	add    %rcx,%r8
   11beb:	48 83 d6 00          	adc    $0x0,%rsi
   11bef:	45 31 d2             	xor    %r10d,%r10d
   11bf2:	48 03 77 08          	add    0x8(%rdi),%rsi
   11bf6:	41 0f 92 c2          	setb   %r10b
   11bfa:	48 01 f2             	add    %rsi,%rdx
   11bfd:	49 83 d2 00          	adc    $0x0,%r10
   11c01:	4c 01 da             	add    %r11,%rdx
   11c04:	49 83 d2 00          	adc    $0x0,%r10
   11c08:	48 89 d6             	mov    %rdx,%rsi
   11c0b:	48 01 ce             	add    %rcx,%rsi
   11c0e:	4c 89 d2             	mov    %r10,%rdx
   11c11:	48 83 d2 00          	adc    $0x0,%rdx
   11c15:	48 03 57 10          	add    0x10(%rdi),%rdx
   11c19:	49 89 d1             	mov    %rdx,%r9
   11c1c:	0f 92 c2             	setb   %dl
   11c1f:	0f b6 d2             	movzbl %dl,%edx
   11c22:	4d 01 d9             	add    %r11,%r9
   11c25:	48 83 d2 00          	adc    $0x0,%rdx
   11c29:	4c 01 c9             	add    %r9,%rcx
   11c2c:	48 83 d2 00          	adc    $0x0,%rdx
   11c30:	45 31 c9             	xor    %r9d,%r9d
   11c33:	49 01 d0             	add    %rdx,%r8
   11c36:	41 0f 92 c1          	setb   %r9b
   11c3a:	4c 01 ce             	add    %r9,%rsi
   11c3d:	41 0f 92 c1          	setb   %r9b
   11c41:	48 01 f2             	add    %rsi,%rdx
   11c44:	45 0f b6 c9          	movzbl %r9b,%r9d
   11c48:	4c 89 ce             	mov    %r9,%rsi
   11c4b:	48 83 d6 00          	adc    $0x0,%rsi
   11c4f:	48 01 f1             	add    %rsi,%rcx
   11c52:	40 0f 92 c6          	setb   %sil
   11c56:	40 0f b6 f6          	movzbl %sil,%esi
   11c5a:	49 01 f0             	add    %rsi,%r8
   11c5d:	4c 89 07             	mov    %r8,(%rdi)
   11c60:	41 0f 92 c0          	setb   %r8b
   11c64:	45 0f b6 c0          	movzbl %r8b,%r8d
   11c68:	4c 01 c2             	add    %r8,%rdx
   11c6b:	41 0f 92 c0          	setb   %r8b
   11c6f:	48 01 f2             	add    %rsi,%rdx
   11c72:	40 0f 92 c6          	setb   %sil
   11c76:	45 0f b6 c0          	movzbl %r8b,%r8d
   11c7a:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   11c7e:	40 0f b6 f6          	movzbl %sil,%esi
   11c82:	4c 01 c1             	add    %r8,%rcx
   11c85:	48 01 f1             	add    %rsi,%rcx
   11c88:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   11c8c:	5b                   	pop    %rbx
   11c8d:	c3                   	retq   
   11c8e:	66 90                	xchg   %ax,%ax

0000000000011c90 <ecp_mod_p192k1>:
   11c90:	f3 0f 1e fa          	endbr64 
   11c94:	41 57                	push   %r15
   11c96:	41 56                	push   %r14
   11c98:	41 55                	push   %r13
   11c9a:	41 54                	push   %r12
   11c9c:	55                   	push   %rbp
   11c9d:	53                   	push   %rbx
   11c9e:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   11ca5:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   11ca9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11cb0:	00 00 
   11cb2:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   11cb9:	00 
   11cba:	31 c0                	xor    %eax,%eax
   11cbc:	49 83 fd 02          	cmp    $0x2,%r13
   11cc0:	0f 86 72 01 00 00    	jbe    11e38 <ecp_mod_p192k1+0x1a8>
   11cc6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11cca:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   11ccf:	49 8d 55 fd          	lea    -0x3(%r13),%rdx
   11cd3:	48 89 fd             	mov    %rdi,%rbp
   11cd6:	48 8d 05 8b c3 01 00 	lea    0x1c38b(%rip),%rax        # 2e068 <Rp.5154>
   11cdd:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   11ce4:	00 
   11ce5:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   11ce9:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   11cee:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
   11cf5:	00 00 
   11cf7:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   11cfe:	00 
   11cff:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   11d04:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   11d09:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   11d0e:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   11d13:	48 83 fa 03          	cmp    $0x3,%rdx
   11d17:	0f 87 43 01 00 00    	ja     11e60 <ecp_mod_p192k1+0x1d0>
   11d1d:	48 c1 e2 03          	shl    $0x3,%rdx
   11d21:	49 8d 76 18          	lea    0x18(%r14),%rsi
   11d25:	b9 30 00 00 00       	mov    $0x30,%ecx
   11d2a:	4c 89 e7             	mov    %r12,%rdi
   11d2d:	e8 be 25 ff ff       	callq  42f0 <__memcpy_chk@plt>
   11d32:	49 8d 45 fe          	lea    -0x2(%r13),%rax
   11d36:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11d3b:	49 83 fd 03          	cmp    $0x3,%r13
   11d3f:	74 21                	je     11d62 <ecp_mod_p192k1+0xd2>
   11d41:	b8 03 00 00 00       	mov    $0x3,%eax
   11d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11d4d:	00 00 00 
   11d50:	49 c7 04 c6 00 00 00 	movq   $0x0,(%r14,%rax,8)
   11d57:	00 
   11d58:	48 83 c0 01          	add    $0x1,%rax
   11d5c:	48 3b 45 08          	cmp    0x8(%rbp),%rax
   11d60:	72 ee                	jb     11d50 <ecp_mod_p192k1+0xc0>
   11d62:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   11d67:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   11d6c:	4c 89 ea             	mov    %r13,%rdx
   11d6f:	4c 89 f6             	mov    %r14,%rsi
   11d72:	4c 89 f7             	mov    %r14,%rdi
   11d75:	e8 36 3c ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
   11d7a:	85 c0                	test   %eax,%eax
   11d7c:	0f 85 b6 00 00 00    	jne    11e38 <ecp_mod_p192k1+0x1a8>
   11d82:	4c 89 f2             	mov    %r14,%rdx
   11d85:	48 89 ee             	mov    %rbp,%rsi
   11d88:	48 89 ef             	mov    %rbp,%rdi
   11d8b:	e8 40 38 ff ff       	callq  55d0 <mbedtls_mpi_add_abs>
   11d90:	85 c0                	test   %eax,%eax
   11d92:	0f 85 a0 00 00 00    	jne    11e38 <ecp_mod_p192k1+0x1a8>
   11d98:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   11d9c:	4d 8d 78 fd          	lea    -0x3(%r8),%r15
   11da0:	49 83 ff 03          	cmp    $0x3,%r15
   11da4:	0f 87 de 00 00 00    	ja     11e88 <ecp_mod_p192k1+0x1f8>
   11daa:	4a 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%rdx
   11db1:	00 
   11db2:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
   11db6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11dba:	b9 30 00 00 00       	mov    $0x30,%ecx
   11dbf:	4c 89 e7             	mov    %r12,%rdi
   11dc2:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   11dc7:	48 8d 73 18          	lea    0x18(%rbx),%rsi
   11dcb:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   11dd0:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   11dd5:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   11dda:	e8 11 25 ff ff       	callq  42f0 <__memcpy_chk@plt>
   11ddf:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   11de4:	4c 03 7c 24 38       	add    0x38(%rsp),%r15
   11de9:	b8 03 00 00 00       	mov    $0x3,%eax
   11dee:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   11df3:	49 83 f8 03          	cmp    $0x3,%r8
   11df7:	76 19                	jbe    11e12 <ecp_mod_p192k1+0x182>
   11df9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11e00:	48 c7 04 c3 00 00 00 	movq   $0x0,(%rbx,%rax,8)
   11e07:	00 
   11e08:	48 83 c0 01          	add    $0x1,%rax
   11e0c:	48 3b 45 08          	cmp    0x8(%rbp),%rax
   11e10:	72 ee                	jb     11e00 <ecp_mod_p192k1+0x170>
   11e12:	4c 89 ea             	mov    %r13,%rdx
   11e15:	4c 89 f6             	mov    %r14,%rsi
   11e18:	4c 89 f7             	mov    %r14,%rdi
   11e1b:	e8 90 3b ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
   11e20:	85 c0                	test   %eax,%eax
   11e22:	75 14                	jne    11e38 <ecp_mod_p192k1+0x1a8>
   11e24:	4c 89 f2             	mov    %r14,%rdx
   11e27:	48 89 ee             	mov    %rbp,%rsi
   11e2a:	48 89 ef             	mov    %rbp,%rdi
   11e2d:	e8 9e 37 ff ff       	callq  55d0 <mbedtls_mpi_add_abs>
   11e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11e38:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   11e3f:	00 
   11e40:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   11e47:	00 00 
   11e49:	75 4d                	jne    11e98 <ecp_mod_p192k1+0x208>
   11e4b:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   11e52:	5b                   	pop    %rbx
   11e53:	5d                   	pop    %rbp
   11e54:	41 5c                	pop    %r12
   11e56:	41 5d                	pop    %r13
   11e58:	41 5e                	pop    %r14
   11e5a:	41 5f                	pop    %r15
   11e5c:	c3                   	retq   
   11e5d:	0f 1f 00             	nopl   (%rax)
   11e60:	f3 41 0f 6f 4e 18    	movdqu 0x18(%r14),%xmm1
   11e66:	48 c7 44 24 18 04 00 	movq   $0x4,0x18(%rsp)
   11e6d:	00 00 
   11e6f:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   11e74:	49 8b 46 28          	mov    0x28(%r14),%rax
   11e78:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   11e7d:	e9 bf fe ff ff       	jmpq   11d41 <ecp_mod_p192k1+0xb1>
   11e82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11e88:	ba 18 00 00 00       	mov    $0x18,%edx
   11e8d:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   11e93:	e9 1a ff ff ff       	jmpq   11db2 <ecp_mod_p192k1+0x122>
   11e98:	e8 d3 23 ff ff       	callq  4270 <__stack_chk_fail@plt>
   11e9d:	0f 1f 00             	nopl   (%rax)

0000000000011ea0 <ecp_mod_p256k1>:
   11ea0:	f3 0f 1e fa          	endbr64 
   11ea4:	41 57                	push   %r15
   11ea6:	41 56                	push   %r14
   11ea8:	41 55                	push   %r13
   11eaa:	41 54                	push   %r12
   11eac:	55                   	push   %rbp
   11ead:	53                   	push   %rbx
   11eae:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   11eb5:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   11eb9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11ec0:	00 00 
   11ec2:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   11ec9:	00 
   11eca:	31 c0                	xor    %eax,%eax
   11ecc:	49 83 fd 03          	cmp    $0x3,%r13
   11ed0:	0f 86 72 01 00 00    	jbe    12048 <ecp_mod_p256k1+0x1a8>
   11ed6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11eda:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   11edf:	49 8d 55 fc          	lea    -0x4(%r13),%rdx
   11ee3:	48 89 fd             	mov    %rdi,%rbp
   11ee6:	48 8d 05 8b c1 01 00 	lea    0x1c18b(%rip),%rax        # 2e078 <Rp.5162>
   11eed:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   11ef4:	00 
   11ef5:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   11ef9:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   11efe:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
   11f05:	00 00 
   11f07:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   11f0e:	00 
   11f0f:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   11f14:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   11f19:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   11f1e:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   11f23:	48 83 fa 04          	cmp    $0x4,%rdx
   11f27:	0f 87 43 01 00 00    	ja     12070 <ecp_mod_p256k1+0x1d0>
   11f2d:	48 c1 e2 03          	shl    $0x3,%rdx
   11f31:	49 8d 76 20          	lea    0x20(%r14),%rsi
   11f35:	b9 30 00 00 00       	mov    $0x30,%ecx
   11f3a:	4c 89 e7             	mov    %r12,%rdi
   11f3d:	e8 ae 23 ff ff       	callq  42f0 <__memcpy_chk@plt>
   11f42:	49 8d 45 fd          	lea    -0x3(%r13),%rax
   11f46:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11f4b:	49 83 fd 04          	cmp    $0x4,%r13
   11f4f:	74 21                	je     11f72 <ecp_mod_p256k1+0xd2>
   11f51:	b8 04 00 00 00       	mov    $0x4,%eax
   11f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11f5d:	00 00 00 
   11f60:	49 c7 04 c6 00 00 00 	movq   $0x0,(%r14,%rax,8)
   11f67:	00 
   11f68:	48 83 c0 01          	add    $0x1,%rax
   11f6c:	48 3b 45 08          	cmp    0x8(%rbp),%rax
   11f70:	72 ee                	jb     11f60 <ecp_mod_p256k1+0xc0>
   11f72:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   11f77:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   11f7c:	4c 89 ea             	mov    %r13,%rdx
   11f7f:	4c 89 f6             	mov    %r14,%rsi
   11f82:	4c 89 f7             	mov    %r14,%rdi
   11f85:	e8 26 3a ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
   11f8a:	85 c0                	test   %eax,%eax
   11f8c:	0f 85 b6 00 00 00    	jne    12048 <ecp_mod_p256k1+0x1a8>
   11f92:	4c 89 f2             	mov    %r14,%rdx
   11f95:	48 89 ee             	mov    %rbp,%rsi
   11f98:	48 89 ef             	mov    %rbp,%rdi
   11f9b:	e8 30 36 ff ff       	callq  55d0 <mbedtls_mpi_add_abs>
   11fa0:	85 c0                	test   %eax,%eax
   11fa2:	0f 85 a0 00 00 00    	jne    12048 <ecp_mod_p256k1+0x1a8>
   11fa8:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   11fac:	4d 8d 78 fc          	lea    -0x4(%r8),%r15
   11fb0:	49 83 ff 04          	cmp    $0x4,%r15
   11fb4:	0f 87 de 00 00 00    	ja     12098 <ecp_mod_p256k1+0x1f8>
   11fba:	4a 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%rdx
   11fc1:	00 
   11fc2:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
   11fc6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11fca:	b9 30 00 00 00       	mov    $0x30,%ecx
   11fcf:	4c 89 e7             	mov    %r12,%rdi
   11fd2:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   11fd7:	48 8d 73 20          	lea    0x20(%rbx),%rsi
   11fdb:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   11fe0:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   11fe5:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   11fea:	e8 01 23 ff ff       	callq  42f0 <__memcpy_chk@plt>
   11fef:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   11ff4:	4c 03 7c 24 38       	add    0x38(%rsp),%r15
   11ff9:	b8 04 00 00 00       	mov    $0x4,%eax
   11ffe:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   12003:	49 83 f8 04          	cmp    $0x4,%r8
   12007:	76 19                	jbe    12022 <ecp_mod_p256k1+0x182>
   12009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12010:	48 c7 04 c3 00 00 00 	movq   $0x0,(%rbx,%rax,8)
   12017:	00 
   12018:	48 83 c0 01          	add    $0x1,%rax
   1201c:	48 3b 45 08          	cmp    0x8(%rbp),%rax
   12020:	72 ee                	jb     12010 <ecp_mod_p256k1+0x170>
   12022:	4c 89 ea             	mov    %r13,%rdx
   12025:	4c 89 f6             	mov    %r14,%rsi
   12028:	4c 89 f7             	mov    %r14,%rdi
   1202b:	e8 80 39 ff ff       	callq  59b0 <mbedtls_mpi_mul_mpi>
   12030:	85 c0                	test   %eax,%eax
   12032:	75 14                	jne    12048 <ecp_mod_p256k1+0x1a8>
   12034:	4c 89 f2             	mov    %r14,%rdx
   12037:	48 89 ee             	mov    %rbp,%rsi
   1203a:	48 89 ef             	mov    %rbp,%rdi
   1203d:	e8 8e 35 ff ff       	callq  55d0 <mbedtls_mpi_add_abs>
   12042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12048:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   1204f:	00 
   12050:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   12057:	00 00 
   12059:	75 4d                	jne    120a8 <ecp_mod_p256k1+0x208>
   1205b:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   12062:	5b                   	pop    %rbx
   12063:	5d                   	pop    %rbp
   12064:	41 5c                	pop    %r12
   12066:	41 5d                	pop    %r13
   12068:	41 5e                	pop    %r14
   1206a:	41 5f                	pop    %r15
   1206c:	c3                   	retq   
   1206d:	0f 1f 00             	nopl   (%rax)
   12070:	f3 41 0f 6f 4e 20    	movdqu 0x20(%r14),%xmm1
   12076:	48 c7 44 24 18 05 00 	movq   $0x5,0x18(%rsp)
   1207d:	00 00 
   1207f:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   12084:	f3 41 0f 6f 56 30    	movdqu 0x30(%r14),%xmm2
   1208a:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   1208f:	e9 bd fe ff ff       	jmpq   11f51 <ecp_mod_p256k1+0xb1>
   12094:	0f 1f 40 00          	nopl   0x0(%rax)
   12098:	ba 20 00 00 00       	mov    $0x20,%edx
   1209d:	41 bf 04 00 00 00    	mov    $0x4,%r15d
   120a3:	e9 1a ff ff ff       	jmpq   11fc2 <ecp_mod_p256k1+0x122>
   120a8:	e8 c3 21 ff ff       	callq  4270 <__stack_chk_fail@plt>
   120ad:	0f 1f 00             	nopl   (%rax)

00000000000120b0 <mbedtls_ecp_group_load>:
   120b0:	e9 5b 31 02 00       	jmpq   35210 <mbedtls_ecp_group_load.instr.bb_120b0>
   120b5:	48 89 fd             	mov    %rdi,%rbp
   120b8:	53                   	push   %rbx
   120b9:	89 f3                	mov    %esi,%ebx
   120bb:	48 83 ec 18          	sub    $0x18,%rsp
   120bf:	e8 fc b7 ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
   120c4:	e9 85 31 02 00       	jmpq   3524e <instr.bb_120c4>
   120c9:	b6 ff                	mov    $0xff,%dh
   120cb:	ff                   	(bad)  
   120cc:	e9 85 31 02 00       	jmpq   35256 <instr.bb_120cc>
   120d1:	0d 0f 87 2b 0d       	or     $0xd2b870f,%eax
   120d6:	00 00                	add    %al,(%rax)
   120d8:	e9 85 31 02 00       	jmpq   35262 <instr.bb_120d8>
   120dd:	00 00                	add    %al,(%rax)
   120df:	48 63 04 9a          	movslq (%rdx,%rbx,4),%rax
   120e3:	48 01 d0             	add    %rdx,%rax
   120e6:	3e ff e0             	notrack jmpq *%rax
   120e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   120f0:	48 8d 05 49 ea ff ff 	lea    -0x15b7(%rip),%rax        # 10b40 <ecp_mod_p448>
   120f7:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   120fb:	be aa 98 00 00       	mov    $0x98aa,%esi
   12100:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12107:	e8 84 2e ff ff       	callq  4f90 <mbedtls_mpi_lset>
   1210c:	85 c0                	test   %eax,%eax
   1210e:	0f 84 04 0d 00 00    	je     12e18 <mbedtls_ecp_group_load+0xd68>
   12114:	48 89 ef             	mov    %rbp,%rdi
   12117:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1211b:	e8 a0 b7 ff ff       	callq  d8c0 <mbedtls_ecp_group_free>
   12120:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   12124:	e9 0b 01 00 00       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12130:	48 8d 05 59 fa ff ff 	lea    -0x5a7(%rip),%rax        # 11b90 <ecp_mod_p192>
   12137:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   1213e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12142:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12149:	48 8d 05 b0 0a 01 00 	lea    0x10ab0(%rip),%rax        # 22c00 <secp192r1_p>
   12150:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12154:	48 8d 05 85 0a 01 00 	lea    0x10a85(%rip),%rax        # 22be0 <secp192r1_b>
   1215b:	48 89 45 48          	mov    %rax,0x48(%rbp)
   1215f:	48 8d 05 1a 0a 01 00 	lea    0x10a1a(%rip),%rax        # 22b80 <secp192r1_n>
   12166:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   1216d:	48 8d 05 4c 0a 01 00 	lea    0x10a4c(%rip),%rax        # 22bc0 <secp192r1_gx>
   12174:	48 89 45 60          	mov    %rax,0x60(%rbp)
   12178:	48 8d 05 21 0a 01 00 	lea    0x10a21(%rip),%rax        # 22ba0 <secp192r1_gy>
   1217f:	48 89 45 78          	mov    %rax,0x78(%rbp)
   12183:	48 8d 05 f6 be 01 00 	lea    0x1bef6(%rip),%rax        # 2e080 <mpi_one>
   1218a:	48 c7 45 10 03 00 00 	movq   $0x3,0x10(%rbp)
   12191:	00 
   12192:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   12199:	48 c7 45 40 03 00 00 	movq   $0x3,0x40(%rbp)
   121a0:	00 
   121a1:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   121a8:	00 00 00 
   121ab:	48 c7 85 a0 00 00 00 	movq   $0x3,0xa0(%rbp)
   121b2:	03 00 00 00 
   121b6:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   121bd:	48 c7 45 58 03 00 00 	movq   $0x3,0x58(%rbp)
   121c4:	00 
   121c5:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   121cc:	48 c7 45 70 03 00 00 	movq   $0x3,0x70(%rbp)
   121d3:	00 
   121d4:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   121db:	00 00 00 
   121de:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   121e5:	01 00 00 00 
   121e9:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   121f0:	e8 2b 2f ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   121f5:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   121fc:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12203:	e8 18 2f ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12208:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   1220f:	00 00 00 
   12212:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   12219:	00 00 00 00 
   1221d:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12224:	48 8d 05 d5 b5 01 00 	lea    0x1b5d5(%rip),%rax        # 2d800 <secp192r1_T>
   1222b:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12232:	31 c0                	xor    %eax,%eax
   12234:	48 83 c4 18          	add    $0x18,%rsp
   12238:	5b                   	pop    %rbx
   12239:	5d                   	pop    %rbp
   1223a:	c3                   	retq   
   1223b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12240:	48 8d 05 19 f7 ff ff 	lea    -0x8e7(%rip),%rax        # 11960 <ecp_mod_p224>
   12247:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   1224e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12252:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12259:	48 8d 05 00 05 01 00 	lea    0x10500(%rip),%rax        # 22760 <secp224r1_p>
   12260:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12264:	48 8d 05 d5 04 01 00 	lea    0x104d5(%rip),%rax        # 22740 <secp224r1_b>
   1226b:	48 89 45 48          	mov    %rax,0x48(%rbp)
   1226f:	48 8d 05 6a 04 01 00 	lea    0x1046a(%rip),%rax        # 226e0 <secp224r1_n>
   12276:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   1227d:	48 8d 05 9c 04 01 00 	lea    0x1049c(%rip),%rax        # 22720 <secp224r1_gx>
   12284:	48 89 45 60          	mov    %rax,0x60(%rbp)
   12288:	48 8d 05 71 04 01 00 	lea    0x10471(%rip),%rax        # 22700 <secp224r1_gy>
   1228f:	48 89 45 78          	mov    %rax,0x78(%rbp)
   12293:	48 8d 05 e6 bd 01 00 	lea    0x1bde6(%rip),%rax        # 2e080 <mpi_one>
   1229a:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
   122a1:	00 
   122a2:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   122a9:	48 c7 45 40 04 00 00 	movq   $0x4,0x40(%rbp)
   122b0:	00 
   122b1:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   122b8:	00 00 00 
   122bb:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
   122c2:	04 00 00 00 
   122c6:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   122cd:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
   122d4:	00 
   122d5:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   122dc:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
   122e3:	00 
   122e4:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   122eb:	00 00 00 
   122ee:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   122f5:	01 00 00 00 
   122f9:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   12300:	e8 1b 2e ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12305:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   1230c:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12313:	e8 08 2e ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12318:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   1231f:	00 00 00 
   12322:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12329:	48 8d 05 50 b0 01 00 	lea    0x1b050(%rip),%rax        # 2d380 <secp224r1_T>
   12330:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12337:	31 c0                	xor    %eax,%eax
   12339:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   12340:	00 00 00 00 
   12344:	e9 eb fe ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12350:	48 8d 05 69 f2 ff ff 	lea    -0xd97(%rip),%rax        # 115c0 <ecp_mod_p256>
   12357:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   1235e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12362:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12369:	48 8d 05 50 ff 00 00 	lea    0xff50(%rip),%rax        # 222c0 <secp256r1_p>
   12370:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12374:	48 8d 05 25 ff 00 00 	lea    0xff25(%rip),%rax        # 222a0 <secp256r1_b>
   1237b:	48 89 45 48          	mov    %rax,0x48(%rbp)
   1237f:	48 8d 05 ba fe 00 00 	lea    0xfeba(%rip),%rax        # 22240 <secp256r1_n>
   12386:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   1238d:	48 8d 05 ec fe 00 00 	lea    0xfeec(%rip),%rax        # 22280 <secp256r1_gx>
   12394:	48 89 45 60          	mov    %rax,0x60(%rbp)
   12398:	48 8d 05 c1 fe 00 00 	lea    0xfec1(%rip),%rax        # 22260 <secp256r1_gy>
   1239f:	48 89 45 78          	mov    %rax,0x78(%rbp)
   123a3:	48 8d 05 d6 bc 01 00 	lea    0x1bcd6(%rip),%rax        # 2e080 <mpi_one>
   123aa:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
   123b1:	00 
   123b2:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   123b9:	48 c7 45 40 04 00 00 	movq   $0x4,0x40(%rbp)
   123c0:	00 
   123c1:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   123c8:	00 00 00 
   123cb:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
   123d2:	04 00 00 00 
   123d6:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   123dd:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
   123e4:	00 
   123e5:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   123ec:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
   123f3:	00 
   123f4:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   123fb:	00 00 00 
   123fe:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12405:	01 00 00 00 
   12409:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   12410:	e8 0b 2d ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12415:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   1241c:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12423:	e8 f8 2c ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12428:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   1242f:	00 00 00 
   12432:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12439:	48 8d 05 c0 aa 01 00 	lea    0x1aac0(%rip),%rax        # 2cf00 <secp256r1_T>
   12440:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12447:	31 c0                	xor    %eax,%eax
   12449:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   12450:	00 00 00 00 
   12454:	e9 db fd ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12460:	48 8d 05 f9 eb ff ff 	lea    -0x1407(%rip),%rax        # 11060 <ecp_mod_p384>
   12467:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   1246e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12472:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12479:	48 8d 05 80 f9 00 00 	lea    0xf980(%rip),%rax        # 21e00 <secp384r1_p>
   12480:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12484:	48 8d 05 35 f9 00 00 	lea    0xf935(%rip),%rax        # 21dc0 <secp384r1_b>
   1248b:	48 89 45 48          	mov    %rax,0x48(%rbp)
   1248f:	48 8d 05 6a f8 00 00 	lea    0xf86a(%rip),%rax        # 21d00 <secp384r1_n>
   12496:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   1249d:	48 8d 05 dc f8 00 00 	lea    0xf8dc(%rip),%rax        # 21d80 <secp384r1_gx>
   124a4:	48 89 45 60          	mov    %rax,0x60(%rbp)
   124a8:	48 8d 05 91 f8 00 00 	lea    0xf891(%rip),%rax        # 21d40 <secp384r1_gy>
   124af:	48 89 45 78          	mov    %rax,0x78(%rbp)
   124b3:	48 8d 05 c6 bb 01 00 	lea    0x1bbc6(%rip),%rax        # 2e080 <mpi_one>
   124ba:	48 c7 45 10 06 00 00 	movq   $0x6,0x10(%rbp)
   124c1:	00 
   124c2:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   124c9:	48 c7 45 40 06 00 00 	movq   $0x6,0x40(%rbp)
   124d0:	00 
   124d1:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   124d8:	00 00 00 
   124db:	48 c7 85 a0 00 00 00 	movq   $0x6,0xa0(%rbp)
   124e2:	06 00 00 00 
   124e6:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   124ed:	48 c7 45 58 06 00 00 	movq   $0x6,0x58(%rbp)
   124f4:	00 
   124f5:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   124fc:	48 c7 45 70 06 00 00 	movq   $0x6,0x70(%rbp)
   12503:	00 
   12504:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   1250b:	00 00 00 
   1250e:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12515:	01 00 00 00 
   12519:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   12520:	e8 fb 2b ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12525:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   1252c:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12533:	e8 e8 2b ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12538:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   1253f:	00 00 00 
   12542:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12549:	48 8d 05 b0 a0 01 00 	lea    0x1a0b0(%rip),%rax        # 2c600 <secp384r1_T>
   12550:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12557:	31 c0                	xor    %eax,%eax
   12559:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   12560:	00 00 00 00 
   12564:	e9 cb fc ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12570:	48 8d 05 09 ea ff ff 	lea    -0x15f7(%rip),%rax        # 10f80 <ecp_mod_p521>
   12577:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   1257e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12582:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12589:	48 8d 05 10 e7 00 00 	lea    0xe710(%rip),%rax        # 20ca0 <secp521r1_p>
   12590:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12594:	48 8d 05 a5 e6 00 00 	lea    0xe6a5(%rip),%rax        # 20c40 <secp521r1_b>
   1259b:	48 89 45 48          	mov    %rax,0x48(%rbp)
   1259f:	48 8d 05 7a e5 00 00 	lea    0xe57a(%rip),%rax        # 20b20 <secp521r1_n>
   125a6:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   125ad:	48 8d 05 2c e6 00 00 	lea    0xe62c(%rip),%rax        # 20be0 <secp521r1_gx>
   125b4:	48 89 45 60          	mov    %rax,0x60(%rbp)
   125b8:	48 8d 05 c1 e5 00 00 	lea    0xe5c1(%rip),%rax        # 20b80 <secp521r1_gy>
   125bf:	48 89 45 78          	mov    %rax,0x78(%rbp)
   125c3:	48 8d 05 b6 ba 01 00 	lea    0x1bab6(%rip),%rax        # 2e080 <mpi_one>
   125ca:	48 c7 45 10 09 00 00 	movq   $0x9,0x10(%rbp)
   125d1:	00 
   125d2:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   125d9:	48 c7 45 40 09 00 00 	movq   $0x9,0x40(%rbp)
   125e0:	00 
   125e1:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   125e8:	00 00 00 
   125eb:	48 c7 85 a0 00 00 00 	movq   $0x9,0xa0(%rbp)
   125f2:	09 00 00 00 
   125f6:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   125fd:	48 c7 45 58 09 00 00 	movq   $0x9,0x58(%rbp)
   12604:	00 
   12605:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   1260c:	48 c7 45 70 09 00 00 	movq   $0x9,0x70(%rbp)
   12613:	00 
   12614:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   1261b:	00 00 00 
   1261e:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12625:	01 00 00 00 
   12629:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   12630:	e8 eb 2a ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12635:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   1263c:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12643:	e8 d8 2a ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12648:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   1264f:	00 00 00 
   12652:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12659:	48 8d 05 a0 96 01 00 	lea    0x196a0(%rip),%rax        # 2bd00 <secp521r1_T>
   12660:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12667:	31 c0                	xor    %eax,%eax
   12669:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   12670:	00 00 00 00 
   12674:	e9 bb fb ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12680:	48 8d 05 99 be 00 00 	lea    0xbe99(%rip),%rax        # 1e520 <brainpoolP256r1_p>
   12687:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   1268e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12692:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12696:	48 8d 05 63 be 00 00 	lea    0xbe63(%rip),%rax        # 1e500 <brainpoolP256r1_a>
   1269d:	48 89 45 30          	mov    %rax,0x30(%rbp)
   126a1:	48 8d 05 38 be 00 00 	lea    0xbe38(%rip),%rax        # 1e4e0 <brainpoolP256r1_b>
   126a8:	48 89 45 48          	mov    %rax,0x48(%rbp)
   126ac:	48 8d 05 cd bd 00 00 	lea    0xbdcd(%rip),%rax        # 1e480 <brainpoolP256r1_n>
   126b3:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   126ba:	48 8d 05 ff bd 00 00 	lea    0xbdff(%rip),%rax        # 1e4c0 <brainpoolP256r1_gx>
   126c1:	48 89 45 60          	mov    %rax,0x60(%rbp)
   126c5:	48 8d 05 d4 bd 00 00 	lea    0xbdd4(%rip),%rax        # 1e4a0 <brainpoolP256r1_gy>
   126cc:	48 89 45 78          	mov    %rax,0x78(%rbp)
   126d0:	48 8d 05 a9 b9 01 00 	lea    0x1b9a9(%rip),%rax        # 2e080 <mpi_one>
   126d7:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
   126de:	00 
   126df:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
   126e6:	48 c7 45 28 04 00 00 	movq   $0x4,0x28(%rbp)
   126ed:	00 
   126ee:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   126f5:	48 c7 45 40 04 00 00 	movq   $0x4,0x40(%rbp)
   126fc:	00 
   126fd:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   12704:	00 00 00 
   12707:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
   1270e:	04 00 00 00 
   12712:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   12719:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
   12720:	00 
   12721:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   12728:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
   1272f:	00 
   12730:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   12737:	00 00 00 
   1273a:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12741:	01 00 00 00 
   12745:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   1274c:	e8 cf 29 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12751:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   12758:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   1275f:	e8 bc 29 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12764:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   1276b:	00 00 00 
   1276e:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12775:	48 8d 05 84 83 01 00 	lea    0x18384(%rip),%rax        # 2ab00 <brainpoolP256r1_T>
   1277c:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12783:	31 c0                	xor    %eax,%eax
   12785:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   1278c:	00 00 00 00 
   12790:	e9 9f fa ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12795:	0f 1f 00             	nopl   (%rax)
   12798:	48 8d 05 a1 b8 00 00 	lea    0xb8a1(%rip),%rax        # 1e040 <brainpoolP384r1_p>
   1279f:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   127a6:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   127aa:	48 89 45 18          	mov    %rax,0x18(%rbp)
   127ae:	48 8d 05 4b b8 00 00 	lea    0xb84b(%rip),%rax        # 1e000 <brainpoolP384r1_a>
   127b5:	48 89 45 30          	mov    %rax,0x30(%rbp)
   127b9:	48 8d 05 00 b8 00 00 	lea    0xb800(%rip),%rax        # 1dfc0 <brainpoolP384r1_b>
   127c0:	48 89 45 48          	mov    %rax,0x48(%rbp)
   127c4:	48 8d 05 35 b7 00 00 	lea    0xb735(%rip),%rax        # 1df00 <brainpoolP384r1_n>
   127cb:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   127d2:	48 8d 05 a7 b7 00 00 	lea    0xb7a7(%rip),%rax        # 1df80 <brainpoolP384r1_gx>
   127d9:	48 89 45 60          	mov    %rax,0x60(%rbp)
   127dd:	48 8d 05 5c b7 00 00 	lea    0xb75c(%rip),%rax        # 1df40 <brainpoolP384r1_gy>
   127e4:	48 89 45 78          	mov    %rax,0x78(%rbp)
   127e8:	48 8d 05 91 b8 01 00 	lea    0x1b891(%rip),%rax        # 2e080 <mpi_one>
   127ef:	48 c7 45 10 06 00 00 	movq   $0x6,0x10(%rbp)
   127f6:	00 
   127f7:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
   127fe:	48 c7 45 28 06 00 00 	movq   $0x6,0x28(%rbp)
   12805:	00 
   12806:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   1280d:	48 c7 45 40 06 00 00 	movq   $0x6,0x40(%rbp)
   12814:	00 
   12815:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   1281c:	00 00 00 
   1281f:	48 c7 85 a0 00 00 00 	movq   $0x6,0xa0(%rbp)
   12826:	06 00 00 00 
   1282a:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   12831:	48 c7 45 58 06 00 00 	movq   $0x6,0x58(%rbp)
   12838:	00 
   12839:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   12840:	48 c7 45 70 06 00 00 	movq   $0x6,0x70(%rbp)
   12847:	00 
   12848:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   1284f:	00 00 00 
   12852:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12859:	01 00 00 00 
   1285d:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   12864:	e8 b7 28 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12869:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   12870:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12877:	e8 a4 28 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   1287c:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   12883:	00 00 00 
   12886:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   1288d:	48 8d 05 6c 79 01 00 	lea    0x1796c(%rip),%rax        # 2a200 <brainpoolP384r1_T>
   12894:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   1289b:	31 c0                	xor    %eax,%eax
   1289d:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   128a4:	00 00 00 00 
   128a8:	e9 87 f9 ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   128ad:	0f 1f 00             	nopl   (%rax)
   128b0:	48 8d 05 09 a6 00 00 	lea    0xa609(%rip),%rax        # 1cec0 <brainpoolP512r1_p>
   128b7:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   128be:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   128c2:	48 89 45 18          	mov    %rax,0x18(%rbp)
   128c6:	48 8d 05 b3 a5 00 00 	lea    0xa5b3(%rip),%rax        # 1ce80 <brainpoolP512r1_a>
   128cd:	48 89 45 30          	mov    %rax,0x30(%rbp)
   128d1:	48 8d 05 68 a5 00 00 	lea    0xa568(%rip),%rax        # 1ce40 <brainpoolP512r1_b>
   128d8:	48 89 45 48          	mov    %rax,0x48(%rbp)
   128dc:	48 8d 05 9d a4 00 00 	lea    0xa49d(%rip),%rax        # 1cd80 <brainpoolP512r1_n>
   128e3:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   128ea:	48 8d 05 0f a5 00 00 	lea    0xa50f(%rip),%rax        # 1ce00 <brainpoolP512r1_gx>
   128f1:	48 89 45 60          	mov    %rax,0x60(%rbp)
   128f5:	48 8d 05 c4 a4 00 00 	lea    0xa4c4(%rip),%rax        # 1cdc0 <brainpoolP512r1_gy>
   128fc:	48 89 45 78          	mov    %rax,0x78(%rbp)
   12900:	48 8d 05 79 b7 01 00 	lea    0x1b779(%rip),%rax        # 2e080 <mpi_one>
   12907:	48 c7 45 10 08 00 00 	movq   $0x8,0x10(%rbp)
   1290e:	00 
   1290f:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
   12916:	48 c7 45 28 08 00 00 	movq   $0x8,0x28(%rbp)
   1291d:	00 
   1291e:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   12925:	48 c7 45 40 08 00 00 	movq   $0x8,0x40(%rbp)
   1292c:	00 
   1292d:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   12934:	00 00 00 
   12937:	48 c7 85 a0 00 00 00 	movq   $0x8,0xa0(%rbp)
   1293e:	08 00 00 00 
   12942:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   12949:	48 c7 45 58 08 00 00 	movq   $0x8,0x58(%rbp)
   12950:	00 
   12951:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   12958:	48 c7 45 70 08 00 00 	movq   $0x8,0x70(%rbp)
   1295f:	00 
   12960:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   12967:	00 00 00 
   1296a:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12971:	01 00 00 00 
   12975:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   1297c:	e8 9f 27 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12981:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   12988:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   1298f:	e8 8c 27 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12994:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   1299b:	00 00 00 
   1299e:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   129a5:	48 8d 05 54 6f 01 00 	lea    0x16f54(%rip),%rax        # 29900 <brainpoolP512r1_T>
   129ac:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   129b3:	31 c0                	xor    %eax,%eax
   129b5:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   129bc:	00 00 00 00 
   129c0:	e9 6f f8 ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   129c5:	0f 1f 00             	nopl   (%rax)
   129c8:	e9 b3 28 02 00       	jmpq   35280 <instr.bb_129c8>
   129cd:	ff                   	(bad)  
   129ce:	ff 48 8d             	decl   -0x73(%rax)
   129d1:	7d 20                	jge    129f3 <mbedtls_ecp_group_load+0x943>
   129d3:	be 42 db 01 00       	mov    $0x1db42,%esi
   129d8:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   129df:	e8 ac 25 ff ff       	callq  4f90 <mbedtls_mpi_lset>
   129e4:	e9 e2 28 02 00       	jmpq   352cb <instr.bb_129e4>
   129e9:	f7 ff                	idiv   %edi
   129eb:	ff                   	(bad)  
   129ec:	e9 e2 28 02 00       	jmpq   352d3 <instr.bb_129ec>
   129f1:	00 00                	add    %al,(%rax)
   129f3:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   129fa:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   129fe:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
   12a05:	00 
   12a06:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12a0a:	e8 11 27 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12a0f:	e9 e2 28 02 00       	jmpq   352f6 <instr.bb_12a0f>
   12a14:	09 00                	or     %eax,(%rax)
   12a16:	00 00                	add    %al,(%rax)
   12a18:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   12a1f:	00 00 00 
   12a22:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12a29:	48 8d 05 10 93 00 00 	lea    0x9310(%rip),%rax        # 1bd40 <curve25519_n>
   12a30:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
   12a37:	04 00 00 00 
   12a3b:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   12a42:	e8 49 25 ff ff       	callq  4f90 <mbedtls_mpi_lset>
   12a47:	e9 11 29 02 00       	jmpq   3535d <instr.bb_12a47>
   12a4c:	f6 ff                	idiv   %bh
   12a4e:	ff                   	(bad)  
   12a4f:	e9 11 29 02 00       	jmpq   35365 <instr.bb_12a4f>
   12a54:	00 00                	add    %al,(%rax)
   12a56:	be 01 00 00 00       	mov    $0x1,%esi
   12a5b:	e8 30 25 ff ff       	callq  4f90 <mbedtls_mpi_lset>
   12a60:	e9 40 29 02 00       	jmpq   353a5 <instr.bb_12a60>
   12a65:	f6 ff                	idiv   %bh
   12a67:	ff                   	(bad)  
   12a68:	e9 40 29 02 00       	jmpq   353ad <instr.bb_12a68>
   12a6d:	44 24 0c             	rex.R and $0xc,%al
   12a70:	e8 1b 21 ff ff       	callq  4b90 <mbedtls_mpi_free>
   12a75:	e9 40 29 02 00       	jmpq   353ba <instr.bb_12a75>
   12a7a:	c7 85 b8 00 00 00 fe 	movl   $0xfe,0xb8(%rbp)
   12a81:	00 00 00 
   12a84:	e9 ab f7 ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12a90:	48 8d 05 f9 f1 ff ff 	lea    -0xe07(%rip),%rax        # 11c90 <ecp_mod_p192k1>
   12a97:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   12a9e:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12aa2:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12aa9:	48 8d 05 40 c8 00 00 	lea    0xc840(%rip),%rax        # 1f2f0 <secp192k1_p>
   12ab0:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12ab4:	48 8d 05 25 c8 00 00 	lea    0xc825(%rip),%rax        # 1f2e0 <secp192k1_a>
   12abb:	48 89 45 30          	mov    %rax,0x30(%rbp)
   12abf:	48 8d 05 12 c8 00 00 	lea    0xc812(%rip),%rax        # 1f2d8 <secp192k1_b>
   12ac6:	48 89 45 48          	mov    %rax,0x48(%rbp)
   12aca:	48 8d 05 af c7 00 00 	lea    0xc7af(%rip),%rax        # 1f280 <secp192k1_n>
   12ad1:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   12ad8:	48 8d 05 e1 c7 00 00 	lea    0xc7e1(%rip),%rax        # 1f2c0 <secp192k1_gx>
   12adf:	48 89 45 60          	mov    %rax,0x60(%rbp)
   12ae3:	48 8d 05 b6 c7 00 00 	lea    0xc7b6(%rip),%rax        # 1f2a0 <secp192k1_gy>
   12aea:	48 89 45 78          	mov    %rax,0x78(%rbp)
   12aee:	48 8d 05 8b b5 01 00 	lea    0x1b58b(%rip),%rax        # 2e080 <mpi_one>
   12af5:	48 c7 45 10 03 00 00 	movq   $0x3,0x10(%rbp)
   12afc:	00 
   12afd:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
   12b04:	48 c7 45 28 01 00 00 	movq   $0x1,0x28(%rbp)
   12b0b:	00 
   12b0c:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   12b13:	48 c7 45 40 01 00 00 	movq   $0x1,0x40(%rbp)
   12b1a:	00 
   12b1b:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   12b22:	00 00 00 
   12b25:	48 c7 85 a0 00 00 00 	movq   $0x3,0xa0(%rbp)
   12b2c:	03 00 00 00 
   12b30:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   12b37:	48 c7 45 58 03 00 00 	movq   $0x3,0x58(%rbp)
   12b3e:	00 
   12b3f:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   12b46:	48 c7 45 70 03 00 00 	movq   $0x3,0x70(%rbp)
   12b4d:	00 
   12b4e:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   12b55:	00 00 00 
   12b58:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12b5f:	01 00 00 00 
   12b63:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   12b6a:	e8 b1 25 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12b6f:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   12b76:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12b7d:	e8 9e 25 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12b82:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   12b89:	00 00 00 
   12b8c:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12b93:	48 8d 05 e6 8c 01 00 	lea    0x18ce6(%rip),%rax        # 2b880 <secp192k1_T>
   12b9a:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12ba1:	31 c0                	xor    %eax,%eax
   12ba3:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   12baa:	00 00 00 00 
   12bae:	e9 81 f6 ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12bb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12bb8:	48 8d 05 81 e1 ff ff 	lea    -0x1e7f(%rip),%rax        # 10d40 <ecp_mod_p224k1>
   12bbf:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   12bc6:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12bca:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12bd1:	48 8d 05 88 c2 00 00 	lea    0xc288(%rip),%rax        # 1ee60 <secp224k1_p>
   12bd8:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12bdc:	48 8d 05 65 c2 00 00 	lea    0xc265(%rip),%rax        # 1ee48 <secp224k1_a>
   12be3:	48 89 45 30          	mov    %rax,0x30(%rbp)
   12be7:	48 8d 05 52 c2 00 00 	lea    0xc252(%rip),%rax        # 1ee40 <secp224k1_b>
   12bee:	48 89 45 48          	mov    %rax,0x48(%rbp)
   12bf2:	48 8d 05 e7 c1 00 00 	lea    0xc1e7(%rip),%rax        # 1ede0 <secp224k1_n>
   12bf9:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   12c00:	48 8d 05 19 c2 00 00 	lea    0xc219(%rip),%rax        # 1ee20 <secp224k1_gx>
   12c07:	48 89 45 60          	mov    %rax,0x60(%rbp)
   12c0b:	48 8d 05 ee c1 00 00 	lea    0xc1ee(%rip),%rax        # 1ee00 <secp224k1_gy>
   12c12:	48 89 45 78          	mov    %rax,0x78(%rbp)
   12c16:	48 8d 05 63 b4 01 00 	lea    0x1b463(%rip),%rax        # 2e080 <mpi_one>
   12c1d:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
   12c24:	00 
   12c25:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
   12c2c:	48 c7 45 28 01 00 00 	movq   $0x1,0x28(%rbp)
   12c33:	00 
   12c34:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   12c3b:	48 c7 45 40 01 00 00 	movq   $0x1,0x40(%rbp)
   12c42:	00 
   12c43:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   12c4a:	00 00 00 
   12c4d:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
   12c54:	04 00 00 00 
   12c58:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   12c5f:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
   12c66:	00 
   12c67:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   12c6e:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
   12c75:	00 
   12c76:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   12c7d:	00 00 00 
   12c80:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12c87:	01 00 00 00 
   12c8b:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   12c92:	e8 89 24 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12c97:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   12c9e:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12ca5:	e8 76 24 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12caa:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   12cb1:	00 00 00 
   12cb4:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12cbb:	48 8d 05 3e 87 01 00 	lea    0x1873e(%rip),%rax        # 2b400 <secp224k1_T>
   12cc2:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12cc9:	31 c0                	xor    %eax,%eax
   12ccb:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   12cd2:	00 00 00 00 
   12cd6:	e9 59 f5 ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12cdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12ce0:	48 8d 05 b9 f1 ff ff 	lea    -0xe47(%rip),%rax        # 11ea0 <ecp_mod_p256k1>
   12ce7:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   12cee:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12cf2:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   12cf9:	48 8d 05 c0 bc 00 00 	lea    0xbcc0(%rip),%rax        # 1e9c0 <secp256k1_p>
   12d00:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12d04:	48 8d 05 9d bc 00 00 	lea    0xbc9d(%rip),%rax        # 1e9a8 <secp256k1_a>
   12d0b:	48 89 45 30          	mov    %rax,0x30(%rbp)
   12d0f:	48 8d 05 8a bc 00 00 	lea    0xbc8a(%rip),%rax        # 1e9a0 <secp256k1_b>
   12d16:	48 89 45 48          	mov    %rax,0x48(%rbp)
   12d1a:	48 8d 05 1f bc 00 00 	lea    0xbc1f(%rip),%rax        # 1e940 <secp256k1_n>
   12d21:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   12d28:	48 8d 05 51 bc 00 00 	lea    0xbc51(%rip),%rax        # 1e980 <secp256k1_gx>
   12d2f:	48 89 45 60          	mov    %rax,0x60(%rbp)
   12d33:	48 8d 05 26 bc 00 00 	lea    0xbc26(%rip),%rax        # 1e960 <secp256k1_gy>
   12d3a:	48 89 45 78          	mov    %rax,0x78(%rbp)
   12d3e:	48 8d 05 3b b3 01 00 	lea    0x1b33b(%rip),%rax        # 2e080 <mpi_one>
   12d45:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
   12d4c:	00 
   12d4d:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
   12d54:	48 c7 45 28 01 00 00 	movq   $0x1,0x28(%rbp)
   12d5b:	00 
   12d5c:	c7 45 38 01 00 00 00 	movl   $0x1,0x38(%rbp)
   12d63:	48 c7 45 40 01 00 00 	movq   $0x1,0x40(%rbp)
   12d6a:	00 
   12d6b:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   12d72:	00 00 00 
   12d75:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
   12d7c:	04 00 00 00 
   12d80:	c7 45 50 01 00 00 00 	movl   $0x1,0x50(%rbp)
   12d87:	48 c7 45 58 04 00 00 	movq   $0x4,0x58(%rbp)
   12d8e:	00 
   12d8f:	c7 45 68 01 00 00 00 	movl   $0x1,0x68(%rbp)
   12d96:	48 c7 45 70 04 00 00 	movq   $0x4,0x70(%rbp)
   12d9d:	00 
   12d9e:	c7 85 80 00 00 00 01 	movl   $0x1,0x80(%rbp)
   12da5:	00 00 00 
   12da8:	48 c7 85 88 00 00 00 	movq   $0x1,0x88(%rbp)
   12daf:	01 00 00 00 
   12db3:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   12dba:	e8 61 23 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12dbf:	48 8d bd 98 00 00 00 	lea    0x98(%rbp),%rdi
   12dc6:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12dcd:	e8 4e 23 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12dd2:	c7 85 c0 00 00 00 01 	movl   $0x1,0xc0(%rbp)
   12dd9:	00 00 00 
   12ddc:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   12de3:	48 8d 05 96 81 01 00 	lea    0x18196(%rip),%rax        # 2af80 <secp256k1_T>
   12dea:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   12df1:	31 c0                	xor    %eax,%eax
   12df3:	48 c7 85 f0 00 00 00 	movq   $0x0,0xf0(%rbp)
   12dfa:	00 00 00 00 
   12dfe:	e9 31 f4 ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12e03:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   12e0a:	b8 80 b1 ff ff       	mov    $0xffffb180,%eax
   12e0f:	e9 20 f4 ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12e14:	0f 1f 40 00          	nopl   0x0(%rax)
   12e18:	48 8d 05 e1 8e 00 00 	lea    0x8ee1(%rip),%rax        # 1bd00 <curve448_p>
   12e1f:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   12e26:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   12e2a:	48 c7 45 10 08 00 00 	movq   $0x8,0x10(%rbp)
   12e31:	00 
   12e32:	48 89 45 18          	mov    %rax,0x18(%rbp)
   12e36:	e8 e5 22 ff ff       	callq  5120 <mbedtls_mpi_bitlen>
   12e3b:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
   12e3f:	be 05 00 00 00       	mov    $0x5,%esi
   12e44:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   12e4b:	e8 40 21 ff ff       	callq  4f90 <mbedtls_mpi_lset>
   12e50:	85 c0                	test   %eax,%eax
   12e52:	0f 85 bc f2 ff ff    	jne    12114 <mbedtls_ecp_group_load+0x64>
   12e58:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
   12e5f:	be 01 00 00 00       	mov    $0x1,%esi
   12e64:	e8 27 21 ff ff       	callq  4f90 <mbedtls_mpi_lset>
   12e69:	85 c0                	test   %eax,%eax
   12e6b:	0f 85 a3 f2 ff ff    	jne    12114 <mbedtls_ecp_group_load+0x64>
   12e71:	48 8d 7d 68          	lea    0x68(%rbp),%rdi
   12e75:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   12e79:	e8 12 1d ff ff       	callq  4b90 <mbedtls_mpi_free>
   12e7e:	48 8d 05 3b 8e 00 00 	lea    0x8e3b(%rip),%rax        # 1bcc0 <curve448_n>
   12e85:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   12e8c:	00 00 00 
   12e8f:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   12e96:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   12e9a:	48 c7 85 a0 00 00 00 	movq   $0x8,0xa0(%rbp)
   12ea1:	08 00 00 00 
   12ea5:	48 c7 85 b8 00 00 00 	movq   $0x1bf,0xb8(%rbp)
   12eac:	bf 01 00 00 
   12eb0:	e9 7f f3 ff ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   12eb5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12ebc:	00 00 00 
   12ebf:	90                   	nop

0000000000012ec0 <mbedtls_md_info_from_type>:
   12ec0:	f3 0f 1e fa          	endbr64 
   12ec4:	83 ff 07             	cmp    $0x7,%edi
   12ec7:	77 7f                	ja     12f48 <mbedtls_md_info_from_type+0x88>
   12ec9:	48 8d 15 50 fd 00 00 	lea    0xfd50(%rip),%rdx        # 22c20 <secp192r1_p+0x20>
   12ed0:	89 ff                	mov    %edi,%edi
   12ed2:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
   12ed6:	48 01 d0             	add    %rdx,%rax
   12ed9:	3e ff e0             	notrack jmpq *%rax
   12edc:	0f 1f 40 00          	nopl   0x0(%rax)
   12ee0:	48 8d 05 e9 ad 01 00 	lea    0x1ade9(%rip),%rax        # 2dcd0 <mbedtls_ripemd160_info>
   12ee7:	c3                   	retq   
   12ee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12eef:	00 
   12ef0:	48 8d 05 e9 ad 01 00 	lea    0x1ade9(%rip),%rax        # 2dce0 <mbedtls_md5_info>
   12ef7:	c3                   	retq   
   12ef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12eff:	00 
   12f00:	48 8d 05 b9 ad 01 00 	lea    0x1adb9(%rip),%rax        # 2dcc0 <mbedtls_sha1_info>
   12f07:	c3                   	retq   
   12f08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12f0f:	00 
   12f10:	48 8d 05 99 ad 01 00 	lea    0x1ad99(%rip),%rax        # 2dcb0 <mbedtls_sha224_info>
   12f17:	c3                   	retq   
   12f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12f1f:	00 
   12f20:	48 8d 05 69 ad 01 00 	lea    0x1ad69(%rip),%rax        # 2dc90 <mbedtls_sha384_info>
   12f27:	c3                   	retq   
   12f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12f2f:	00 
   12f30:	48 8d 05 49 ad 01 00 	lea    0x1ad49(%rip),%rax        # 2dc80 <mbedtls_sha512_info>
   12f37:	c3                   	retq   
   12f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12f3f:	00 
   12f40:	48 8d 05 59 ad 01 00 	lea    0x1ad59(%rip),%rax        # 2dca0 <mbedtls_sha256_info>
   12f47:	c3                   	retq   
   12f48:	31 c0                	xor    %eax,%eax
   12f4a:	c3                   	retq   
   12f4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000012f50 <mbedtls_md_init>:
   12f50:	f3 0f 1e fa          	endbr64 
   12f54:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12f58:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   12f5f:	00 
   12f60:	0f 11 07             	movups %xmm0,(%rdi)
   12f63:	c3                   	retq   
   12f64:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12f6b:	00 00 00 00 
   12f6f:	90                   	nop

0000000000012f70 <mbedtls_md_free>:
   12f70:	f3 0f 1e fa          	endbr64 
   12f74:	48 85 ff             	test   %rdi,%rdi
   12f77:	0f 84 c3 00 00 00    	je     13040 <mbedtls_md_free+0xd0>
   12f7d:	55                   	push   %rbp
   12f7e:	48 8b 07             	mov    (%rdi),%rax
   12f81:	48 89 fd             	mov    %rdi,%rbp
   12f84:	48 85 c0             	test   %rax,%rax
   12f87:	74 67                	je     12ff0 <mbedtls_md_free+0x80>
   12f89:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   12f8d:	48 85 ff             	test   %rdi,%rdi
   12f90:	74 2c                	je     12fbe <mbedtls_md_free+0x4e>
   12f92:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   12f96:	77 21                	ja     12fb9 <mbedtls_md_free+0x49>
   12f98:	8b 40 08             	mov    0x8(%rax),%eax
   12f9b:	48 8d 15 9e fc 00 00 	lea    0xfc9e(%rip),%rdx        # 22c40 <secp192r1_p+0x40>
   12fa2:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   12fa6:	48 01 d0             	add    %rdx,%rax
   12fa9:	3e ff e0             	notrack jmpq *%rax
   12fac:	0f 1f 40 00          	nopl   0x0(%rax)
   12fb0:	e8 1b 0e 00 00       	callq  13dd0 <mbedtls_md5_free>
   12fb5:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   12fb9:	e8 32 12 ff ff       	callq  41f0 <free@plt>
   12fbe:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   12fc2:	48 85 ff             	test   %rdi,%rdi
   12fc5:	74 1b                	je     12fe2 <mbedtls_md_free+0x72>
   12fc7:	48 8b 45 00          	mov    0x0(%rbp),%rax
   12fcb:	0f b6 70 0d          	movzbl 0xd(%rax),%esi
   12fcf:	01 f6                	add    %esi,%esi
   12fd1:	48 63 f6             	movslq %esi,%rsi
   12fd4:	e8 97 1c 00 00       	callq  14c70 <mbedtls_platform_zeroize>
   12fd9:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   12fdd:	e8 0e 12 ff ff       	callq  41f0 <free@plt>
   12fe2:	48 89 ef             	mov    %rbp,%rdi
   12fe5:	be 18 00 00 00       	mov    $0x18,%esi
   12fea:	5d                   	pop    %rbp
   12feb:	e9 80 1c 00 00       	jmpq   14c70 <mbedtls_platform_zeroize>
   12ff0:	5d                   	pop    %rbp
   12ff1:	c3                   	retq   
   12ff2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12ff8:	e8 73 68 00 00       	callq  19870 <mbedtls_sha512_free>
   12ffd:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   13001:	e8 ea 11 ff ff       	callq  41f0 <free@plt>
   13006:	eb b6                	jmp    12fbe <mbedtls_md_free+0x4e>
   13008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1300f:	00 
   13010:	e8 7b 53 00 00       	callq  18390 <mbedtls_sha256_free>
   13015:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   13019:	e8 d2 11 ff ff       	callq  41f0 <free@plt>
   1301e:	eb 9e                	jmp    12fbe <mbedtls_md_free+0x4e>
   13020:	e8 3b 1d 00 00       	callq  14d60 <mbedtls_ripemd160_free>
   13025:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   13029:	eb 8e                	jmp    12fb9 <mbedtls_md_free+0x49>
   1302b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13030:	e8 bb 39 00 00       	callq  169f0 <mbedtls_sha1_free>
   13035:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   13039:	e9 7b ff ff ff       	jmpq   12fb9 <mbedtls_md_free+0x49>
   1303e:	66 90                	xchg   %ax,%ax
   13040:	c3                   	retq   
   13041:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   13048:	00 00 00 00 
   1304c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013050 <mbedtls_md_clone>:
   13050:	f3 0f 1e fa          	endbr64 
   13054:	48 85 ff             	test   %rdi,%rdi
   13057:	0f 84 cb 00 00 00    	je     13128 <mbedtls_md_clone+0xd8>
   1305d:	48 8b 17             	mov    (%rdi),%rdx
   13060:	48 85 d2             	test   %rdx,%rdx
   13063:	0f 84 bf 00 00 00    	je     13128 <mbedtls_md_clone+0xd8>
   13069:	48 85 f6             	test   %rsi,%rsi
   1306c:	0f 84 b6 00 00 00    	je     13128 <mbedtls_md_clone+0xd8>
   13072:	48 8b 06             	mov    (%rsi),%rax
   13075:	48 39 c2             	cmp    %rax,%rdx
   13078:	0f 85 aa 00 00 00    	jne    13128 <mbedtls_md_clone+0xd8>
   1307e:	48 85 c0             	test   %rax,%rax
   13081:	0f 84 a1 00 00 00    	je     13128 <mbedtls_md_clone+0xd8>
   13087:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   1308b:	0f 87 97 00 00 00    	ja     13128 <mbedtls_md_clone+0xd8>
   13091:	48 83 ec 08          	sub    $0x8,%rsp
   13095:	8b 40 08             	mov    0x8(%rax),%eax
   13098:	48 8d 15 c1 fb 00 00 	lea    0xfbc1(%rip),%rdx        # 22c60 <secp192r1_p+0x60>
   1309f:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   130a3:	48 01 d0             	add    %rdx,%rax
   130a6:	3e ff e0             	notrack jmpq *%rax
   130a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   130b0:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   130b4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   130b8:	e8 d3 67 00 00       	callq  19890 <mbedtls_sha512_clone>
   130bd:	31 c0                	xor    %eax,%eax
   130bf:	48 83 c4 08          	add    $0x8,%rsp
   130c3:	c3                   	retq   
   130c4:	0f 1f 40 00          	nopl   0x0(%rax)
   130c8:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   130cc:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   130d0:	e8 db 52 00 00       	callq  183b0 <mbedtls_sha256_clone>
   130d5:	31 c0                	xor    %eax,%eax
   130d7:	48 83 c4 08          	add    $0x8,%rsp
   130db:	c3                   	retq   
   130dc:	0f 1f 40 00          	nopl   0x0(%rax)
   130e0:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   130e4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   130e8:	e8 23 39 00 00       	callq  16a10 <mbedtls_sha1_clone>
   130ed:	31 c0                	xor    %eax,%eax
   130ef:	48 83 c4 08          	add    $0x8,%rsp
   130f3:	c3                   	retq   
   130f4:	0f 1f 40 00          	nopl   0x0(%rax)
   130f8:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   130fc:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13100:	e8 7b 1c 00 00       	callq  14d80 <mbedtls_ripemd160_clone>
   13105:	31 c0                	xor    %eax,%eax
   13107:	48 83 c4 08          	add    $0x8,%rsp
   1310b:	c3                   	retq   
   1310c:	0f 1f 40 00          	nopl   0x0(%rax)
   13110:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   13114:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13118:	e8 d3 0c 00 00       	callq  13df0 <mbedtls_md5_clone>
   1311d:	31 c0                	xor    %eax,%eax
   1311f:	48 83 c4 08          	add    $0x8,%rsp
   13123:	c3                   	retq   
   13124:	0f 1f 40 00          	nopl   0x0(%rax)
   13128:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   1312d:	c3                   	retq   
   1312e:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   13133:	eb 8a                	jmp    130bf <mbedtls_md_clone+0x6f>
   13135:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1313c:	00 00 00 00 

0000000000013140 <mbedtls_md_setup>:
   13140:	f3 0f 1e fa          	endbr64 
   13144:	48 85 f6             	test   %rsi,%rsi
   13147:	0f 84 4e 01 00 00    	je     1329b <mbedtls_md_setup+0x15b>
   1314d:	41 54                	push   %r12
   1314f:	55                   	push   %rbp
   13150:	48 89 fd             	mov    %rdi,%rbp
   13153:	53                   	push   %rbx
   13154:	48 85 ff             	test   %rdi,%rdi
   13157:	0f 84 34 01 00 00    	je     13291 <mbedtls_md_setup+0x151>
   1315d:	83 7e 08 07          	cmpl   $0x7,0x8(%rsi)
   13161:	48 89 37             	mov    %rsi,(%rdi)
   13164:	48 89 f3             	mov    %rsi,%rbx
   13167:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   1316e:	00 
   1316f:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   13176:	00 
   13177:	0f 87 14 01 00 00    	ja     13291 <mbedtls_md_setup+0x151>
   1317d:	8b 46 08             	mov    0x8(%rsi),%eax
   13180:	41 89 d4             	mov    %edx,%r12d
   13183:	48 8d 15 f6 fa 00 00 	lea    0xfaf6(%rip),%rdx        # 22c80 <secp192r1_p+0x80>
   1318a:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1318e:	48 01 d0             	add    %rdx,%rax
   13191:	3e ff e0             	notrack jmpq *%rax
   13194:	0f 1f 40 00          	nopl   0x0(%rax)
   13198:	bf 01 00 00 00       	mov    $0x1,%edi
   1319d:	be d8 00 00 00       	mov    $0xd8,%esi
   131a2:	e8 29 11 ff ff       	callq  42d0 <calloc@plt>
   131a7:	48 89 45 08          	mov    %rax,0x8(%rbp)
   131ab:	48 89 c7             	mov    %rax,%rdi
   131ae:	48 85 c0             	test   %rax,%rax
   131b1:	74 34                	je     131e7 <mbedtls_md_setup+0xa7>
   131b3:	e8 78 66 00 00       	callq  19830 <mbedtls_sha512_init>
   131b8:	45 85 e4             	test   %r12d,%r12d
   131bb:	75 0b                	jne    131c8 <mbedtls_md_setup+0x88>
   131bd:	31 c0                	xor    %eax,%eax
   131bf:	5b                   	pop    %rbx
   131c0:	5d                   	pop    %rbp
   131c1:	41 5c                	pop    %r12
   131c3:	c3                   	retq   
   131c4:	0f 1f 40 00          	nopl   0x0(%rax)
   131c8:	0f b6 73 0d          	movzbl 0xd(%rbx),%esi
   131cc:	bf 02 00 00 00       	mov    $0x2,%edi
   131d1:	e8 fa 10 ff ff       	callq  42d0 <calloc@plt>
   131d6:	48 89 45 10          	mov    %rax,0x10(%rbp)
   131da:	48 85 c0             	test   %rax,%rax
   131dd:	75 de                	jne    131bd <mbedtls_md_setup+0x7d>
   131df:	48 89 ef             	mov    %rbp,%rdi
   131e2:	e8 89 fd ff ff       	callq  12f70 <mbedtls_md_free>
   131e7:	b8 80 ae ff ff       	mov    $0xffffae80,%eax
   131ec:	eb d1                	jmp    131bf <mbedtls_md_setup+0x7f>
   131ee:	66 90                	xchg   %ax,%ax
   131f0:	bf 01 00 00 00       	mov    $0x1,%edi
   131f5:	be 6c 00 00 00       	mov    $0x6c,%esi
   131fa:	e8 d1 10 ff ff       	callq  42d0 <calloc@plt>
   131ff:	48 89 45 08          	mov    %rax,0x8(%rbp)
   13203:	48 89 c7             	mov    %rax,%rdi
   13206:	48 85 c0             	test   %rax,%rax
   13209:	74 dc                	je     131e7 <mbedtls_md_setup+0xa7>
   1320b:	e8 50 51 00 00       	callq  18360 <mbedtls_sha256_init>
   13210:	eb a6                	jmp    131b8 <mbedtls_md_setup+0x78>
   13212:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13218:	bf 01 00 00 00       	mov    $0x1,%edi
   1321d:	be 5c 00 00 00       	mov    $0x5c,%esi
   13222:	e8 a9 10 ff ff       	callq  42d0 <calloc@plt>
   13227:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1322b:	48 89 c7             	mov    %rax,%rdi
   1322e:	48 85 c0             	test   %rax,%rax
   13231:	74 b4                	je     131e7 <mbedtls_md_setup+0xa7>
   13233:	e8 f8 1a 00 00       	callq  14d30 <mbedtls_ripemd160_init>
   13238:	e9 7b ff ff ff       	jmpq   131b8 <mbedtls_md_setup+0x78>
   1323d:	0f 1f 00             	nopl   (%rax)
   13240:	bf 01 00 00 00       	mov    $0x1,%edi
   13245:	be 58 00 00 00       	mov    $0x58,%esi
   1324a:	e8 81 10 ff ff       	callq  42d0 <calloc@plt>
   1324f:	48 89 45 08          	mov    %rax,0x8(%rbp)
   13253:	48 89 c7             	mov    %rax,%rdi
   13256:	48 85 c0             	test   %rax,%rax
   13259:	74 8c                	je     131e7 <mbedtls_md_setup+0xa7>
   1325b:	e8 40 0b 00 00       	callq  13da0 <mbedtls_md5_init>
   13260:	e9 53 ff ff ff       	jmpq   131b8 <mbedtls_md_setup+0x78>
   13265:	0f 1f 00             	nopl   (%rax)
   13268:	bf 01 00 00 00       	mov    $0x1,%edi
   1326d:	be 5c 00 00 00       	mov    $0x5c,%esi
   13272:	e8 59 10 ff ff       	callq  42d0 <calloc@plt>
   13277:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1327b:	48 89 c7             	mov    %rax,%rdi
   1327e:	48 85 c0             	test   %rax,%rax
   13281:	0f 84 60 ff ff ff    	je     131e7 <mbedtls_md_setup+0xa7>
   13287:	e8 34 37 00 00       	callq  169c0 <mbedtls_sha1_init>
   1328c:	e9 27 ff ff ff       	jmpq   131b8 <mbedtls_md_setup+0x78>
   13291:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   13296:	e9 24 ff ff ff       	jmpq   131bf <mbedtls_md_setup+0x7f>
   1329b:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   132a0:	c3                   	retq   
   132a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   132a8:	00 00 00 00 
   132ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000132b0 <mbedtls_md_starts>:
   132b0:	f3 0f 1e fa          	endbr64 
   132b4:	48 85 ff             	test   %rdi,%rdi
   132b7:	0f 84 9e 00 00 00    	je     1335b <mbedtls_md_starts+0xab>
   132bd:	48 8b 07             	mov    (%rdi),%rax
   132c0:	48 85 c0             	test   %rax,%rax
   132c3:	0f 84 92 00 00 00    	je     1335b <mbedtls_md_starts+0xab>
   132c9:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   132cd:	0f 87 88 00 00 00    	ja     1335b <mbedtls_md_starts+0xab>
   132d3:	8b 40 08             	mov    0x8(%rax),%eax
   132d6:	48 8d 15 c3 f9 00 00 	lea    0xf9c3(%rip),%rdx        # 22ca0 <secp192r1_p+0xa0>
   132dd:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   132e1:	48 01 d0             	add    %rdx,%rax
   132e4:	3e ff e0             	notrack jmpq *%rax
   132e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   132ee:	00 00 
   132f0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   132f4:	e9 c7 1a 00 00       	jmpq   14dc0 <mbedtls_ripemd160_starts>
   132f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13300:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13304:	e9 27 0b 00 00       	jmpq   13e30 <mbedtls_md5_starts>
   13309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13310:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13314:	e9 37 37 00 00       	jmpq   16a50 <mbedtls_sha1_starts>
   13319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13320:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13324:	be 01 00 00 00       	mov    $0x1,%esi
   13329:	e9 d2 50 00 00       	jmpq   18400 <mbedtls_sha256_starts>
   1332e:	66 90                	xchg   %ax,%ax
   13330:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13334:	31 f6                	xor    %esi,%esi
   13336:	e9 c5 50 00 00       	jmpq   18400 <mbedtls_sha256_starts>
   1333b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13340:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13344:	be 01 00 00 00       	mov    $0x1,%esi
   13349:	e9 f2 65 00 00       	jmpq   19940 <mbedtls_sha512_starts>
   1334e:	66 90                	xchg   %ax,%ax
   13350:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13354:	31 f6                	xor    %esi,%esi
   13356:	e9 e5 65 00 00       	jmpq   19940 <mbedtls_sha512_starts>
   1335b:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   13360:	c3                   	retq   
   13361:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   13368:	00 00 00 00 
   1336c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013370 <mbedtls_md_update>:
   13370:	f3 0f 1e fa          	endbr64 
   13374:	48 85 ff             	test   %rdi,%rdi
   13377:	74 70                	je     133e9 <mbedtls_md_update+0x79>
   13379:	48 8b 07             	mov    (%rdi),%rax
   1337c:	48 85 c0             	test   %rax,%rax
   1337f:	74 68                	je     133e9 <mbedtls_md_update+0x79>
   13381:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   13385:	77 62                	ja     133e9 <mbedtls_md_update+0x79>
   13387:	8b 40 08             	mov    0x8(%rax),%eax
   1338a:	48 8d 0d 2f f9 00 00 	lea    0xf92f(%rip),%rcx        # 22cc0 <secp192r1_p+0xc0>
   13391:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   13395:	48 01 c8             	add    %rcx,%rax
   13398:	3e ff e0             	notrack jmpq *%rax
   1339b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   133a0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   133a4:	e9 87 6e 00 00       	jmpq   1a230 <mbedtls_sha512_update>
   133a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   133b0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   133b4:	e9 27 5e 00 00       	jmpq   191e0 <mbedtls_sha256_update>
   133b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   133c0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   133c4:	e9 27 4b 00 00       	jmpq   17ef0 <mbedtls_sha1_update>
   133c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   133d0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   133d4:	e9 c7 32 00 00       	jmpq   166a0 <mbedtls_ripemd160_update>
   133d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   133e0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   133e4:	e9 67 14 00 00       	jmpq   14850 <mbedtls_md5_update>
   133e9:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   133ee:	c3                   	retq   
   133ef:	90                   	nop

00000000000133f0 <mbedtls_md_finish>:
   133f0:	f3 0f 1e fa          	endbr64 
   133f4:	48 85 ff             	test   %rdi,%rdi
   133f7:	74 70                	je     13469 <mbedtls_md_finish+0x79>
   133f9:	48 8b 07             	mov    (%rdi),%rax
   133fc:	48 85 c0             	test   %rax,%rax
   133ff:	74 68                	je     13469 <mbedtls_md_finish+0x79>
   13401:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
   13405:	77 62                	ja     13469 <mbedtls_md_finish+0x79>
   13407:	8b 40 08             	mov    0x8(%rax),%eax
   1340a:	48 8d 15 cf f8 00 00 	lea    0xf8cf(%rip),%rdx        # 22ce0 <secp192r1_p+0xe0>
   13411:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   13415:	48 01 d0             	add    %rdx,%rax
   13418:	3e ff e0             	notrack jmpq *%rax
   1341b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13420:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13424:	e9 27 6e 00 00       	jmpq   1a250 <mbedtls_sha512_finish>
   13429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13430:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13434:	e9 c7 5d 00 00       	jmpq   19200 <mbedtls_sha256_finish>
   13439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13440:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13444:	e9 c7 4a 00 00       	jmpq   17f10 <mbedtls_sha1_finish>
   13449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13450:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13454:	e9 67 32 00 00       	jmpq   166c0 <mbedtls_ripemd160_finish>
   13459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13460:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   13464:	e9 07 14 00 00       	jmpq   14870 <mbedtls_md5_finish>
   13469:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   1346e:	c3                   	retq   
   1346f:	90                   	nop

0000000000013470 <mbedtls_md>:
   13470:	f3 0f 1e fa          	endbr64 
   13474:	49 89 f0             	mov    %rsi,%r8
   13477:	48 89 d6             	mov    %rdx,%rsi
   1347a:	48 89 ca             	mov    %rcx,%rdx
   1347d:	48 85 ff             	test   %rdi,%rdi
   13480:	0f 84 84 00 00 00    	je     1350a <mbedtls_md+0x9a>
   13486:	83 7f 08 07          	cmpl   $0x7,0x8(%rdi)
   1348a:	77 7e                	ja     1350a <mbedtls_md+0x9a>
   1348c:	8b 47 08             	mov    0x8(%rdi),%eax
   1348f:	48 8d 0d 6a f8 00 00 	lea    0xf86a(%rip),%rcx        # 22d00 <secp192r1_p+0x100>
   13496:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   1349a:	48 01 c8             	add    %rcx,%rax
   1349d:	3e ff e0             	notrack jmpq *%rax
   134a0:	4c 89 c7             	mov    %r8,%rdi
   134a3:	e9 e8 32 00 00       	jmpq   16790 <mbedtls_ripemd160>
   134a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   134af:	00 
   134b0:	4c 89 c7             	mov    %r8,%rdi
   134b3:	e9 08 15 00 00       	jmpq   149c0 <mbedtls_md5>
   134b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   134bf:	00 
   134c0:	4c 89 c7             	mov    %r8,%rdi
   134c3:	e9 a8 4b 00 00       	jmpq   18070 <mbedtls_sha1>
   134c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   134cf:	00 
   134d0:	b9 01 00 00 00       	mov    $0x1,%ecx
   134d5:	4c 89 c7             	mov    %r8,%rdi
   134d8:	e9 e3 61 00 00       	jmpq   196c0 <mbedtls_sha256>
   134dd:	0f 1f 00             	nopl   (%rax)
   134e0:	31 c9                	xor    %ecx,%ecx
   134e2:	4c 89 c7             	mov    %r8,%rdi
   134e5:	e9 d6 61 00 00       	jmpq   196c0 <mbedtls_sha256>
   134ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   134f0:	b9 01 00 00 00       	mov    $0x1,%ecx
   134f5:	4c 89 c7             	mov    %r8,%rdi
   134f8:	e9 23 73 00 00       	jmpq   1a820 <mbedtls_sha512>
   134fd:	0f 1f 00             	nopl   (%rax)
   13500:	31 c9                	xor    %ecx,%ecx
   13502:	4c 89 c7             	mov    %r8,%rdi
   13505:	e9 16 73 00 00       	jmpq   1a820 <mbedtls_sha512>
   1350a:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   1350f:	c3                   	retq   

0000000000013510 <mbedtls_md_get_size>:
   13510:	f3 0f 1e fa          	endbr64 
   13514:	48 85 ff             	test   %rdi,%rdi
   13517:	74 07                	je     13520 <mbedtls_md_get_size+0x10>
   13519:	0f b6 47 0c          	movzbl 0xc(%rdi),%eax
   1351d:	c3                   	retq   
   1351e:	66 90                	xchg   %ax,%ax
   13520:	31 c0                	xor    %eax,%eax
   13522:	c3                   	retq   
   13523:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1352a:	00 00 00 00 
   1352e:	66 90                	xchg   %ax,%ax

0000000000013530 <mbedtls_md_get_type>:
   13530:	f3 0f 1e fa          	endbr64 
   13534:	48 85 ff             	test   %rdi,%rdi
   13537:	74 07                	je     13540 <mbedtls_md_get_type+0x10>
   13539:	8b 47 08             	mov    0x8(%rdi),%eax
   1353c:	c3                   	retq   
   1353d:	0f 1f 00             	nopl   (%rax)
   13540:	31 c0                	xor    %eax,%eax
   13542:	c3                   	retq   
   13543:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1354a:	00 00 00 00 
   1354e:	66 90                	xchg   %ax,%ax

0000000000013550 <mbedtls_md_list>:
   13550:	f3 0f 1e fa          	endbr64 
   13554:	48 8d 05 c5 f7 00 00 	lea    0xf7c5(%rip),%rax        # 22d20 <supported_digests>
   1355b:	c3                   	retq   
   1355c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013560 <mbedtls_md_info_from_string>:
   13560:	f3 0f 1e fa          	endbr64 
   13564:	48 89 f8             	mov    %rdi,%rax
   13567:	48 85 ff             	test   %rdi,%rdi
   1356a:	0f 84 20 01 00 00    	je     13690 <mbedtls_md_info_from_string+0x130>
   13570:	b9 04 00 00 00       	mov    $0x4,%ecx
   13575:	48 8d 35 c4 f7 00 00 	lea    0xf7c4(%rip),%rsi        # 22d40 <supported_digests+0x20>
   1357c:	4c 8d 05 5d a7 01 00 	lea    0x1a75d(%rip),%r8        # 2dce0 <mbedtls_md5_info>
   13583:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   13585:	0f 97 c2             	seta   %dl
   13588:	80 da 00             	sbb    $0x0,%dl
   1358b:	84 d2                	test   %dl,%dl
   1358d:	0f 84 f9 00 00 00    	je     1368c <mbedtls_md_info_from_string+0x12c>
   13593:	b9 0a 00 00 00       	mov    $0xa,%ecx
   13598:	48 8d 35 a5 f7 00 00 	lea    0xf7a5(%rip),%rsi        # 22d44 <supported_digests+0x24>
   1359f:	48 89 c7             	mov    %rax,%rdi
   135a2:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   135a4:	4c 8d 05 25 a7 01 00 	lea    0x1a725(%rip),%r8        # 2dcd0 <mbedtls_ripemd160_info>
   135ab:	0f 97 c2             	seta   %dl
   135ae:	80 da 00             	sbb    $0x0,%dl
   135b1:	84 d2                	test   %dl,%dl
   135b3:	0f 84 d3 00 00 00    	je     1368c <mbedtls_md_info_from_string+0x12c>
   135b9:	b9 05 00 00 00       	mov    $0x5,%ecx
   135be:	48 8d 35 89 f7 00 00 	lea    0xf789(%rip),%rsi        # 22d4e <supported_digests+0x2e>
   135c5:	48 89 c7             	mov    %rax,%rdi
   135c8:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   135ca:	4c 8d 05 ef a6 01 00 	lea    0x1a6ef(%rip),%r8        # 2dcc0 <mbedtls_sha1_info>
   135d1:	0f 97 c2             	seta   %dl
   135d4:	80 da 00             	sbb    $0x0,%dl
   135d7:	84 d2                	test   %dl,%dl
   135d9:	0f 84 ad 00 00 00    	je     1368c <mbedtls_md_info_from_string+0x12c>
   135df:	b9 04 00 00 00       	mov    $0x4,%ecx
   135e4:	48 8d 35 68 f7 00 00 	lea    0xf768(%rip),%rsi        # 22d53 <supported_digests+0x33>
   135eb:	48 89 c7             	mov    %rax,%rdi
   135ee:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   135f0:	0f 97 c2             	seta   %dl
   135f3:	80 da 00             	sbb    $0x0,%dl
   135f6:	84 d2                	test   %dl,%dl
   135f8:	0f 84 8e 00 00 00    	je     1368c <mbedtls_md_info_from_string+0x12c>
   135fe:	b9 07 00 00 00       	mov    $0x7,%ecx
   13603:	48 8d 35 4d f7 00 00 	lea    0xf74d(%rip),%rsi        # 22d57 <supported_digests+0x37>
   1360a:	48 89 c7             	mov    %rax,%rdi
   1360d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1360f:	4c 8d 05 9a a6 01 00 	lea    0x1a69a(%rip),%r8        # 2dcb0 <mbedtls_sha224_info>
   13616:	0f 97 c2             	seta   %dl
   13619:	80 da 00             	sbb    $0x0,%dl
   1361c:	84 d2                	test   %dl,%dl
   1361e:	74 6c                	je     1368c <mbedtls_md_info_from_string+0x12c>
   13620:	b9 07 00 00 00       	mov    $0x7,%ecx
   13625:	48 8d 35 32 f7 00 00 	lea    0xf732(%rip),%rsi        # 22d5e <supported_digests+0x3e>
   1362c:	48 89 c7             	mov    %rax,%rdi
   1362f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   13631:	4c 8d 05 68 a6 01 00 	lea    0x1a668(%rip),%r8        # 2dca0 <mbedtls_sha256_info>
   13638:	0f 97 c2             	seta   %dl
   1363b:	80 da 00             	sbb    $0x0,%dl
   1363e:	84 d2                	test   %dl,%dl
   13640:	74 4a                	je     1368c <mbedtls_md_info_from_string+0x12c>
   13642:	b9 07 00 00 00       	mov    $0x7,%ecx
   13647:	48 8d 35 17 f7 00 00 	lea    0xf717(%rip),%rsi        # 22d65 <supported_digests+0x45>
   1364e:	48 89 c7             	mov    %rax,%rdi
   13651:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   13653:	4c 8d 05 36 a6 01 00 	lea    0x1a636(%rip),%r8        # 2dc90 <mbedtls_sha384_info>
   1365a:	0f 97 c2             	seta   %dl
   1365d:	80 da 00             	sbb    $0x0,%dl
   13660:	84 d2                	test   %dl,%dl
   13662:	74 28                	je     1368c <mbedtls_md_info_from_string+0x12c>
   13664:	48 89 c7             	mov    %rax,%rdi
   13667:	b9 07 00 00 00       	mov    $0x7,%ecx
   1366c:	48 8d 35 f9 f6 00 00 	lea    0xf6f9(%rip),%rsi        # 22d6c <supported_digests+0x4c>
   13673:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   13675:	4c 8d 05 04 a6 01 00 	lea    0x1a604(%rip),%r8        # 2dc80 <mbedtls_sha512_info>
   1367c:	0f 97 c0             	seta   %al
   1367f:	1c 00                	sbb    $0x0,%al
   13681:	84 c0                	test   %al,%al
   13683:	b8 00 00 00 00       	mov    $0x0,%eax
   13688:	4c 0f 45 c0          	cmovne %rax,%r8
   1368c:	4c 89 c0             	mov    %r8,%rax
   1368f:	c3                   	retq   
   13690:	45 31 c0             	xor    %r8d,%r8d
   13693:	eb f7                	jmp    1368c <mbedtls_md_info_from_string+0x12c>
   13695:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1369c:	00 00 00 00 

00000000000136a0 <mbedtls_md_info_from_ctx>:
   136a0:	f3 0f 1e fa          	endbr64 
   136a4:	48 85 ff             	test   %rdi,%rdi
   136a7:	74 07                	je     136b0 <mbedtls_md_info_from_ctx+0x10>
   136a9:	48 8b 07             	mov    (%rdi),%rax
   136ac:	c3                   	retq   
   136ad:	0f 1f 00             	nopl   (%rax)
   136b0:	31 c0                	xor    %eax,%eax
   136b2:	c3                   	retq   
   136b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   136ba:	00 00 00 00 
   136be:	66 90                	xchg   %ax,%ax

00000000000136c0 <mbedtls_md_file>:
   136c0:	f3 0f 1e fa          	endbr64 
   136c4:	41 57                	push   %r15
   136c6:	41 56                	push   %r14
   136c8:	41 55                	push   %r13
   136ca:	41 54                	push   %r12
   136cc:	49 89 fc             	mov    %rdi,%r12
   136cf:	55                   	push   %rbp
   136d0:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
   136d7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   136de:	00 00 
   136e0:	48 89 84 24 28 04 00 	mov    %rax,0x428(%rsp)
   136e7:	00 
   136e8:	31 c0                	xor    %eax,%eax
   136ea:	48 85 ff             	test   %rdi,%rdi
   136ed:	0f 84 0d 01 00 00    	je     13800 <mbedtls_md_file+0x140>
   136f3:	48 89 f7             	mov    %rsi,%rdi
   136f6:	48 8d 35 76 f6 00 00 	lea    0xf676(%rip),%rsi        # 22d73 <supported_digests+0x53>
   136fd:	49 89 d6             	mov    %rdx,%r14
   13700:	e8 fb 0b ff ff       	callq  4300 <fopen64@plt>
   13705:	48 89 c5             	mov    %rax,%rbp
   13708:	48 85 c0             	test   %rax,%rax
   1370b:	0f 84 fa 00 00 00    	je     1380b <mbedtls_md_file+0x14b>
   13711:	48 89 c7             	mov    %rax,%rdi
   13714:	31 f6                	xor    %esi,%esi
   13716:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1371b:	49 89 e5             	mov    %rsp,%r13
   1371e:	e8 5d 0b ff ff       	callq  4280 <setbuf@plt>
   13723:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13727:	4c 89 e6             	mov    %r12,%rsi
   1372a:	31 d2                	xor    %edx,%edx
   1372c:	4c 89 ef             	mov    %r13,%rdi
   1372f:	0f 29 04 24          	movaps %xmm0,(%rsp)
   13733:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1373a:	00 00 
   1373c:	e8 ff f9 ff ff       	callq  13140 <mbedtls_md_setup>
   13741:	41 89 c4             	mov    %eax,%r12d
   13744:	85 c0                	test   %eax,%eax
   13746:	74 48                	je     13790 <mbedtls_md_file+0xd0>
   13748:	be 00 04 00 00       	mov    $0x400,%esi
   1374d:	4c 89 ff             	mov    %r15,%rdi
   13750:	e8 1b 15 00 00       	callq  14c70 <mbedtls_platform_zeroize>
   13755:	48 89 ef             	mov    %rbp,%rdi
   13758:	e8 f3 0a ff ff       	callq  4250 <fclose@plt>
   1375d:	4c 89 ef             	mov    %r13,%rdi
   13760:	e8 0b f8 ff ff       	callq  12f70 <mbedtls_md_free>
   13765:	48 8b 84 24 28 04 00 	mov    0x428(%rsp),%rax
   1376c:	00 
   1376d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13774:	00 00 
   13776:	0f 85 9a 00 00 00    	jne    13816 <mbedtls_md_file+0x156>
   1377c:	48 81 c4 30 04 00 00 	add    $0x430,%rsp
   13783:	44 89 e0             	mov    %r12d,%eax
   13786:	5d                   	pop    %rbp
   13787:	41 5c                	pop    %r12
   13789:	41 5d                	pop    %r13
   1378b:	41 5e                	pop    %r14
   1378d:	41 5f                	pop    %r15
   1378f:	c3                   	retq   
   13790:	4c 89 ef             	mov    %r13,%rdi
   13793:	e8 18 fb ff ff       	callq  132b0 <mbedtls_md_starts>
   13798:	41 89 c4             	mov    %eax,%r12d
   1379b:	85 c0                	test   %eax,%eax
   1379d:	74 1b                	je     137ba <mbedtls_md_file+0xfa>
   1379f:	eb a7                	jmp    13748 <mbedtls_md_file+0x88>
   137a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   137a8:	4c 89 fe             	mov    %r15,%rsi
   137ab:	4c 89 ef             	mov    %r13,%rdi
   137ae:	e8 bd fb ff ff       	callq  13370 <mbedtls_md_update>
   137b3:	41 89 c4             	mov    %eax,%r12d
   137b6:	85 c0                	test   %eax,%eax
   137b8:	75 8e                	jne    13748 <mbedtls_md_file+0x88>
   137ba:	ba 00 04 00 00       	mov    $0x400,%edx
   137bf:	48 89 e9             	mov    %rbp,%rcx
   137c2:	be 01 00 00 00       	mov    $0x1,%esi
   137c7:	4c 89 ff             	mov    %r15,%rdi
   137ca:	e8 61 0a ff ff       	callq  4230 <fread@plt>
   137cf:	48 89 c2             	mov    %rax,%rdx
   137d2:	48 85 c0             	test   %rax,%rax
   137d5:	75 d1                	jne    137a8 <mbedtls_md_file+0xe8>
   137d7:	48 89 ef             	mov    %rbp,%rdi
   137da:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
   137e0:	e8 3b 0a ff ff       	callq  4220 <ferror@plt>
   137e5:	85 c0                	test   %eax,%eax
   137e7:	0f 85 5b ff ff ff    	jne    13748 <mbedtls_md_file+0x88>
   137ed:	4c 89 f6             	mov    %r14,%rsi
   137f0:	4c 89 ef             	mov    %r13,%rdi
   137f3:	e8 f8 fb ff ff       	callq  133f0 <mbedtls_md_finish>
   137f8:	41 89 c4             	mov    %eax,%r12d
   137fb:	e9 48 ff ff ff       	jmpq   13748 <mbedtls_md_file+0x88>
   13800:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
   13806:	e9 5a ff ff ff       	jmpq   13765 <mbedtls_md_file+0xa5>
   1380b:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
   13811:	e9 4f ff ff ff       	jmpq   13765 <mbedtls_md_file+0xa5>
   13816:	e8 55 0a ff ff       	callq  4270 <__stack_chk_fail@plt>
   1381b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000013820 <mbedtls_md_hmac_starts>:
   13820:	f3 0f 1e fa          	endbr64 
   13824:	41 57                	push   %r15
   13826:	41 56                	push   %r14
   13828:	41 55                	push   %r13
   1382a:	41 54                	push   %r12
   1382c:	55                   	push   %rbp
   1382d:	53                   	push   %rbx
   1382e:	48 83 ec 58          	sub    $0x58,%rsp
   13832:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13839:	00 00 
   1383b:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   13840:	31 c0                	xor    %eax,%eax
   13842:	48 85 ff             	test   %rdi,%rdi
   13845:	0f 84 9d 02 00 00    	je     13ae8 <mbedtls_md_hmac_starts+0x2c8>
   1384b:	48 89 fd             	mov    %rdi,%rbp
   1384e:	48 8b 3f             	mov    (%rdi),%rdi
   13851:	48 85 ff             	test   %rdi,%rdi
   13854:	0f 84 8e 02 00 00    	je     13ae8 <mbedtls_md_hmac_starts+0x2c8>
   1385a:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
   1385e:	4d 85 ed             	test   %r13,%r13
   13861:	0f 84 81 02 00 00    	je     13ae8 <mbedtls_md_hmac_starts+0x2c8>
   13867:	49 89 d4             	mov    %rdx,%r12
   1386a:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
   1386e:	48 89 f3             	mov    %rsi,%rbx
   13871:	49 89 e7             	mov    %rsp,%r15
   13874:	4c 39 e2             	cmp    %r12,%rdx
   13877:	73 5f                	jae    138d8 <mbedtls_md_hmac_starts+0xb8>
   13879:	48 89 ef             	mov    %rbp,%rdi
   1387c:	49 89 e7             	mov    %rsp,%r15
   1387f:	e8 2c fa ff ff       	callq  132b0 <mbedtls_md_starts>
   13884:	41 89 c6             	mov    %eax,%r14d
   13887:	85 c0                	test   %eax,%eax
   13889:	0f 85 4f 01 00 00    	jne    139de <mbedtls_md_hmac_starts+0x1be>
   1388f:	4c 89 e2             	mov    %r12,%rdx
   13892:	48 89 de             	mov    %rbx,%rsi
   13895:	48 89 ef             	mov    %rbp,%rdi
   13898:	e8 d3 fa ff ff       	callq  13370 <mbedtls_md_update>
   1389d:	41 89 c6             	mov    %eax,%r14d
   138a0:	85 c0                	test   %eax,%eax
   138a2:	0f 85 36 01 00 00    	jne    139de <mbedtls_md_hmac_starts+0x1be>
   138a8:	4c 89 fe             	mov    %r15,%rsi
   138ab:	48 89 ef             	mov    %rbp,%rdi
   138ae:	e8 3d fb ff ff       	callq  133f0 <mbedtls_md_finish>
   138b3:	41 89 c6             	mov    %eax,%r14d
   138b6:	85 c0                	test   %eax,%eax
   138b8:	0f 85 20 01 00 00    	jne    139de <mbedtls_md_hmac_starts+0x1be>
   138be:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   138c2:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
   138c6:	4c 89 fb             	mov    %r15,%rbx
   138c9:	44 0f b6 67 0c       	movzbl 0xc(%rdi),%r12d
   138ce:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
   138d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   138d8:	49 8d 74 15 00       	lea    0x0(%r13,%rdx,1),%rsi
   138dd:	89 d1                	mov    %edx,%ecx
   138df:	48 b8 36 36 36 36 36 	movabs $0x3636363636363636,%rax
   138e6:	36 36 36 
   138e9:	83 fa 08             	cmp    $0x8,%edx
   138ec:	0f 82 26 01 00 00    	jb     13a18 <mbedtls_md_hmac_starts+0x1f8>
   138f2:	49 8d 7d 08          	lea    0x8(%r13),%rdi
   138f6:	4c 89 e9             	mov    %r13,%rcx
   138f9:	49 89 45 00          	mov    %rax,0x0(%r13)
   138fd:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   13901:	49 89 44 15 f8       	mov    %rax,-0x8(%r13,%rdx,1)
   13906:	48 29 f9             	sub    %rdi,%rcx
   13909:	01 d1                	add    %edx,%ecx
   1390b:	c1 e9 03             	shr    $0x3,%ecx
   1390e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13911:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   13915:	48 b8 5c 5c 5c 5c 5c 	movabs $0x5c5c5c5c5c5c5c5c,%rax
   1391c:	5c 5c 5c 
   1391f:	0f b6 4f 0d          	movzbl 0xd(%rdi),%ecx
   13923:	83 f9 08             	cmp    $0x8,%ecx
   13926:	0f 83 24 01 00 00    	jae    13a50 <mbedtls_md_hmac_starts+0x230>
   1392c:	f6 c1 04             	test   $0x4,%cl
   1392f:	0f 85 9b 01 00 00    	jne    13ad0 <mbedtls_md_hmac_starts+0x2b0>
   13935:	85 c9                	test   %ecx,%ecx
   13937:	0f 85 3b 01 00 00    	jne    13a78 <mbedtls_md_hmac_starts+0x258>
   1393d:	49 83 fc 03          	cmp    $0x3,%r12
   13941:	0f 86 51 01 00 00    	jbe    13a98 <mbedtls_md_hmac_starts+0x278>
   13947:	ba 04 00 00 00       	mov    $0x4,%edx
   1394c:	0f 1f 40 00          	nopl   0x0(%rax)
   13950:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
   13954:	41 31 44 15 fc       	xor    %eax,-0x4(%r13,%rdx,1)
   13959:	48 89 d0             	mov    %rdx,%rax
   1395c:	48 8d 52 04          	lea    0x4(%rdx),%rdx
   13960:	49 39 d4             	cmp    %rdx,%r12
   13963:	73 eb                	jae    13950 <mbedtls_md_hmac_starts+0x130>
   13965:	49 39 c4             	cmp    %rax,%r12
   13968:	76 1a                	jbe    13984 <mbedtls_md_hmac_starts+0x164>
   1396a:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
   1396e:	41 30 54 05 00       	xor    %dl,0x0(%r13,%rax,1)
   13973:	48 83 c0 01          	add    $0x1,%rax
   13977:	49 39 c4             	cmp    %rax,%r12
   1397a:	77 ee                	ja     1396a <mbedtls_md_hmac_starts+0x14a>
   1397c:	31 c0                	xor    %eax,%eax
   1397e:	49 83 fc 03          	cmp    $0x3,%r12
   13982:	76 25                	jbe    139a9 <mbedtls_md_hmac_starts+0x189>
   13984:	ba 04 00 00 00       	mov    $0x4,%edx
   13989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13990:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
   13994:	31 44 16 fc          	xor    %eax,-0x4(%rsi,%rdx,1)
   13998:	48 89 d0             	mov    %rdx,%rax
   1399b:	48 8d 52 04          	lea    0x4(%rdx),%rdx
   1399f:	49 39 d4             	cmp    %rdx,%r12
   139a2:	73 ec                	jae    13990 <mbedtls_md_hmac_starts+0x170>
   139a4:	49 39 c4             	cmp    %rax,%r12
   139a7:	76 10                	jbe    139b9 <mbedtls_md_hmac_starts+0x199>
   139a9:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
   139ad:	30 14 06             	xor    %dl,(%rsi,%rax,1)
   139b0:	48 83 c0 01          	add    $0x1,%rax
   139b4:	49 39 c4             	cmp    %rax,%r12
   139b7:	77 f0                	ja     139a9 <mbedtls_md_hmac_starts+0x189>
   139b9:	48 89 ef             	mov    %rbp,%rdi
   139bc:	e8 ef f8 ff ff       	callq  132b0 <mbedtls_md_starts>
   139c1:	41 89 c6             	mov    %eax,%r14d
   139c4:	85 c0                	test   %eax,%eax
   139c6:	75 16                	jne    139de <mbedtls_md_hmac_starts+0x1be>
   139c8:	48 8b 45 00          	mov    0x0(%rbp),%rax
   139cc:	4c 89 ee             	mov    %r13,%rsi
   139cf:	48 89 ef             	mov    %rbp,%rdi
   139d2:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
   139d6:	e8 95 f9 ff ff       	callq  13370 <mbedtls_md_update>
   139db:	41 89 c6             	mov    %eax,%r14d
   139de:	be 40 00 00 00       	mov    $0x40,%esi
   139e3:	4c 89 ff             	mov    %r15,%rdi
   139e6:	e8 85 12 00 00       	callq  14c70 <mbedtls_platform_zeroize>
   139eb:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   139f0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   139f7:	00 00 
   139f9:	0f 85 f4 00 00 00    	jne    13af3 <mbedtls_md_hmac_starts+0x2d3>
   139ff:	48 83 c4 58          	add    $0x58,%rsp
   13a03:	44 89 f0             	mov    %r14d,%eax
   13a06:	5b                   	pop    %rbx
   13a07:	5d                   	pop    %rbp
   13a08:	41 5c                	pop    %r12
   13a0a:	41 5d                	pop    %r13
   13a0c:	41 5e                	pop    %r14
   13a0e:	41 5f                	pop    %r15
   13a10:	c3                   	retq   
   13a11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13a18:	83 e2 04             	and    $0x4,%edx
   13a1b:	0f 85 8f 00 00 00    	jne    13ab0 <mbedtls_md_hmac_starts+0x290>
   13a21:	85 c9                	test   %ecx,%ecx
   13a23:	0f 84 ec fe ff ff    	je     13915 <mbedtls_md_hmac_starts+0xf5>
   13a29:	41 c6 45 00 36       	movb   $0x36,0x0(%r13)
   13a2e:	f6 c1 02             	test   $0x2,%cl
   13a31:	0f 84 da fe ff ff    	je     13911 <mbedtls_md_hmac_starts+0xf1>
   13a37:	ba 36 36 00 00       	mov    $0x3636,%edx
   13a3c:	66 41 89 54 0d fe    	mov    %dx,-0x2(%r13,%rcx,1)
   13a42:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   13a46:	e9 ca fe ff ff       	jmpq   13915 <mbedtls_md_hmac_starts+0xf5>
   13a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13a50:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   13a54:	48 89 f2             	mov    %rsi,%rdx
   13a57:	48 89 06             	mov    %rax,(%rsi)
   13a5a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   13a5e:	48 89 44 0e f8       	mov    %rax,-0x8(%rsi,%rcx,1)
   13a63:	48 29 fa             	sub    %rdi,%rdx
   13a66:	01 d1                	add    %edx,%ecx
   13a68:	c1 e9 03             	shr    $0x3,%ecx
   13a6b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13a6e:	e9 ca fe ff ff       	jmpq   1393d <mbedtls_md_hmac_starts+0x11d>
   13a73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13a78:	c6 06 5c             	movb   $0x5c,(%rsi)
   13a7b:	f6 c1 02             	test   $0x2,%cl
   13a7e:	0f 84 b9 fe ff ff    	je     1393d <mbedtls_md_hmac_starts+0x11d>
   13a84:	b8 5c 5c 00 00       	mov    $0x5c5c,%eax
   13a89:	66 89 44 0e fe       	mov    %ax,-0x2(%rsi,%rcx,1)
   13a8e:	e9 aa fe ff ff       	jmpq   1393d <mbedtls_md_hmac_starts+0x11d>
   13a93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13a98:	31 c0                	xor    %eax,%eax
   13a9a:	4d 85 e4             	test   %r12,%r12
   13a9d:	0f 85 c7 fe ff ff    	jne    1396a <mbedtls_md_hmac_starts+0x14a>
   13aa3:	e9 11 ff ff ff       	jmpq   139b9 <mbedtls_md_hmac_starts+0x199>
   13aa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13aaf:	00 
   13ab0:	41 c7 45 00 36 36 36 	movl   $0x36363636,0x0(%r13)
   13ab7:	36 
   13ab8:	41 c7 44 0d fc 36 36 	movl   $0x36363636,-0x4(%r13,%rcx,1)
   13abf:	36 36 
   13ac1:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   13ac5:	e9 4b fe ff ff       	jmpq   13915 <mbedtls_md_hmac_starts+0xf5>
   13aca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13ad0:	c7 06 5c 5c 5c 5c    	movl   $0x5c5c5c5c,(%rsi)
   13ad6:	c7 44 0e fc 5c 5c 5c 	movl   $0x5c5c5c5c,-0x4(%rsi,%rcx,1)
   13add:	5c 
   13ade:	e9 5a fe ff ff       	jmpq   1393d <mbedtls_md_hmac_starts+0x11d>
   13ae3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13ae8:	41 be 00 af ff ff    	mov    $0xffffaf00,%r14d
   13aee:	e9 f8 fe ff ff       	jmpq   139eb <mbedtls_md_hmac_starts+0x1cb>
   13af3:	e8 78 07 ff ff       	callq  4270 <__stack_chk_fail@plt>
   13af8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13aff:	00 

0000000000013b00 <mbedtls_md_hmac_update>:
   13b00:	f3 0f 1e fa          	endbr64 
   13b04:	48 85 ff             	test   %rdi,%rdi
   13b07:	74 17                	je     13b20 <mbedtls_md_hmac_update+0x20>
   13b09:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   13b0d:	74 11                	je     13b20 <mbedtls_md_hmac_update+0x20>
   13b0f:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
   13b14:	74 0a                	je     13b20 <mbedtls_md_hmac_update+0x20>
   13b16:	e9 55 f8 ff ff       	jmpq   13370 <mbedtls_md_update>
   13b1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13b20:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   13b25:	c3                   	retq   
   13b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13b2d:	00 00 00 

0000000000013b30 <mbedtls_md_hmac_finish>:
   13b30:	f3 0f 1e fa          	endbr64 
   13b34:	41 56                	push   %r14
   13b36:	41 55                	push   %r13
   13b38:	41 54                	push   %r12
   13b3a:	55                   	push   %rbp
   13b3b:	53                   	push   %rbx
   13b3c:	48 83 ec 50          	sub    $0x50,%rsp
   13b40:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13b47:	00 00 
   13b49:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   13b4e:	31 c0                	xor    %eax,%eax
   13b50:	48 85 ff             	test   %rdi,%rdi
   13b53:	0f 84 a7 00 00 00    	je     13c00 <mbedtls_md_hmac_finish+0xd0>
   13b59:	48 8b 07             	mov    (%rdi),%rax
   13b5c:	49 89 fe             	mov    %rdi,%r14
   13b5f:	48 85 c0             	test   %rax,%rax
   13b62:	0f 84 98 00 00 00    	je     13c00 <mbedtls_md_hmac_finish+0xd0>
   13b68:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   13b6c:	48 85 db             	test   %rbx,%rbx
   13b6f:	0f 84 8b 00 00 00    	je     13c00 <mbedtls_md_hmac_finish+0xd0>
   13b75:	49 89 e4             	mov    %rsp,%r12
   13b78:	48 89 f5             	mov    %rsi,%rbp
   13b7b:	44 0f b6 68 0d       	movzbl 0xd(%rax),%r13d
   13b80:	4c 89 e6             	mov    %r12,%rsi
   13b83:	e8 68 f8 ff ff       	callq  133f0 <mbedtls_md_finish>
   13b88:	85 c0                	test   %eax,%eax
   13b8a:	74 24                	je     13bb0 <mbedtls_md_hmac_finish+0x80>
   13b8c:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   13b91:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13b98:	00 00 
   13b9a:	75 6b                	jne    13c07 <mbedtls_md_hmac_finish+0xd7>
   13b9c:	48 83 c4 50          	add    $0x50,%rsp
   13ba0:	5b                   	pop    %rbx
   13ba1:	5d                   	pop    %rbp
   13ba2:	41 5c                	pop    %r12
   13ba4:	41 5d                	pop    %r13
   13ba6:	41 5e                	pop    %r14
   13ba8:	c3                   	retq   
   13ba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13bb0:	4c 89 f7             	mov    %r14,%rdi
   13bb3:	e8 f8 f6 ff ff       	callq  132b0 <mbedtls_md_starts>
   13bb8:	85 c0                	test   %eax,%eax
   13bba:	75 d0                	jne    13b8c <mbedtls_md_hmac_finish+0x5c>
   13bbc:	49 8b 06             	mov    (%r14),%rax
   13bbf:	41 0f b6 f5          	movzbl %r13b,%esi
   13bc3:	4c 89 f7             	mov    %r14,%rdi
   13bc6:	48 01 de             	add    %rbx,%rsi
   13bc9:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
   13bcd:	e8 9e f7 ff ff       	callq  13370 <mbedtls_md_update>
   13bd2:	85 c0                	test   %eax,%eax
   13bd4:	75 b6                	jne    13b8c <mbedtls_md_hmac_finish+0x5c>
   13bd6:	49 8b 06             	mov    (%r14),%rax
   13bd9:	4c 89 e6             	mov    %r12,%rsi
   13bdc:	4c 89 f7             	mov    %r14,%rdi
   13bdf:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
   13be3:	e8 88 f7 ff ff       	callq  13370 <mbedtls_md_update>
   13be8:	85 c0                	test   %eax,%eax
   13bea:	75 a0                	jne    13b8c <mbedtls_md_hmac_finish+0x5c>
   13bec:	48 89 ee             	mov    %rbp,%rsi
   13bef:	4c 89 f7             	mov    %r14,%rdi
   13bf2:	e8 f9 f7 ff ff       	callq  133f0 <mbedtls_md_finish>
   13bf7:	eb 93                	jmp    13b8c <mbedtls_md_hmac_finish+0x5c>
   13bf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13c00:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   13c05:	eb 85                	jmp    13b8c <mbedtls_md_hmac_finish+0x5c>
   13c07:	e8 64 06 ff ff       	callq  4270 <__stack_chk_fail@plt>
   13c0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013c10 <mbedtls_md_hmac_reset>:
   13c10:	f3 0f 1e fa          	endbr64 
   13c14:	48 85 ff             	test   %rdi,%rdi
   13c17:	74 56                	je     13c6f <mbedtls_md_hmac_reset+0x5f>
   13c19:	41 54                	push   %r12
   13c1b:	55                   	push   %rbp
   13c1c:	48 89 fd             	mov    %rdi,%rbp
   13c1f:	48 83 ec 08          	sub    $0x8,%rsp
   13c23:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   13c27:	74 3f                	je     13c68 <mbedtls_md_hmac_reset+0x58>
   13c29:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   13c2d:	4d 85 e4             	test   %r12,%r12
   13c30:	74 36                	je     13c68 <mbedtls_md_hmac_reset+0x58>
   13c32:	e8 79 f6 ff ff       	callq  132b0 <mbedtls_md_starts>
   13c37:	85 c0                	test   %eax,%eax
   13c39:	74 0d                	je     13c48 <mbedtls_md_hmac_reset+0x38>
   13c3b:	48 83 c4 08          	add    $0x8,%rsp
   13c3f:	5d                   	pop    %rbp
   13c40:	41 5c                	pop    %r12
   13c42:	c3                   	retq   
   13c43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13c48:	48 8b 45 00          	mov    0x0(%rbp),%rax
   13c4c:	4c 89 e6             	mov    %r12,%rsi
   13c4f:	48 89 ef             	mov    %rbp,%rdi
   13c52:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
   13c56:	48 83 c4 08          	add    $0x8,%rsp
   13c5a:	5d                   	pop    %rbp
   13c5b:	41 5c                	pop    %r12
   13c5d:	e9 0e f7 ff ff       	jmpq   13370 <mbedtls_md_update>
   13c62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13c68:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   13c6d:	eb cc                	jmp    13c3b <mbedtls_md_hmac_reset+0x2b>
   13c6f:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
   13c74:	c3                   	retq   
   13c75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   13c7c:	00 00 00 00 

0000000000013c80 <mbedtls_md_hmac>:
   13c80:	f3 0f 1e fa          	endbr64 
   13c84:	41 57                	push   %r15
   13c86:	41 56                	push   %r14
   13c88:	41 55                	push   %r13
   13c8a:	41 54                	push   %r12
   13c8c:	55                   	push   %rbp
   13c8d:	53                   	push   %rbx
   13c8e:	48 83 ec 38          	sub    $0x38,%rsp
   13c92:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   13c97:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13c9e:	00 00 
   13ca0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13ca5:	31 c0                	xor    %eax,%eax
   13ca7:	48 85 ff             	test   %rdi,%rdi
   13caa:	0f 84 b4 00 00 00    	je     13d64 <mbedtls_md_hmac+0xe4>
   13cb0:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   13cb5:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13cb9:	48 89 f5             	mov    %rsi,%rbp
   13cbc:	49 89 d5             	mov    %rdx,%r13
   13cbf:	48 89 fe             	mov    %rdi,%rsi
   13cc2:	ba 01 00 00 00       	mov    $0x1,%edx
   13cc7:	4c 89 f7             	mov    %r14,%rdi
   13cca:	48 89 cb             	mov    %rcx,%rbx
   13ccd:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   13cd4:	00 00 
   13cd6:	4d 89 c7             	mov    %r8,%r15
   13cd9:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   13cde:	e8 5d f4 ff ff       	callq  13140 <mbedtls_md_setup>
   13ce3:	41 89 c4             	mov    %eax,%r12d
   13ce6:	85 c0                	test   %eax,%eax
   13ce8:	74 2e                	je     13d18 <mbedtls_md_hmac+0x98>
   13cea:	4c 89 f7             	mov    %r14,%rdi
   13ced:	e8 7e f2 ff ff       	callq  12f70 <mbedtls_md_free>
   13cf2:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13cf7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13cfe:	00 00 
   13d00:	75 75                	jne    13d77 <mbedtls_md_hmac+0xf7>
   13d02:	48 83 c4 38          	add    $0x38,%rsp
   13d06:	44 89 e0             	mov    %r12d,%eax
   13d09:	5b                   	pop    %rbx
   13d0a:	5d                   	pop    %rbp
   13d0b:	41 5c                	pop    %r12
   13d0d:	41 5d                	pop    %r13
   13d0f:	41 5e                	pop    %r14
   13d11:	41 5f                	pop    %r15
   13d13:	c3                   	retq   
   13d14:	0f 1f 40 00          	nopl   0x0(%rax)
   13d18:	4c 89 ea             	mov    %r13,%rdx
   13d1b:	48 89 ee             	mov    %rbp,%rsi
   13d1e:	4c 89 f7             	mov    %r14,%rdi
   13d21:	e8 fa fa ff ff       	callq  13820 <mbedtls_md_hmac_starts>
   13d26:	41 89 c4             	mov    %eax,%r12d
   13d29:	85 c0                	test   %eax,%eax
   13d2b:	75 bd                	jne    13cea <mbedtls_md_hmac+0x6a>
   13d2d:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   13d33:	74 37                	je     13d6c <mbedtls_md_hmac+0xec>
   13d35:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   13d3b:	74 2f                	je     13d6c <mbedtls_md_hmac+0xec>
   13d3d:	4c 89 fa             	mov    %r15,%rdx
   13d40:	48 89 de             	mov    %rbx,%rsi
   13d43:	4c 89 f7             	mov    %r14,%rdi
   13d46:	e8 25 f6 ff ff       	callq  13370 <mbedtls_md_update>
   13d4b:	41 89 c4             	mov    %eax,%r12d
   13d4e:	85 c0                	test   %eax,%eax
   13d50:	75 98                	jne    13cea <mbedtls_md_hmac+0x6a>
   13d52:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   13d57:	4c 89 f7             	mov    %r14,%rdi
   13d5a:	e8 d1 fd ff ff       	callq  13b30 <mbedtls_md_hmac_finish>
   13d5f:	41 89 c4             	mov    %eax,%r12d
   13d62:	eb 86                	jmp    13cea <mbedtls_md_hmac+0x6a>
   13d64:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
   13d6a:	eb 86                	jmp    13cf2 <mbedtls_md_hmac+0x72>
   13d6c:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
   13d72:	e9 73 ff ff ff       	jmpq   13cea <mbedtls_md_hmac+0x6a>
   13d77:	e8 f4 04 ff ff       	callq  4270 <__stack_chk_fail@plt>
   13d7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013d80 <mbedtls_md_get_name>:
   13d80:	f3 0f 1e fa          	endbr64 
   13d84:	48 85 ff             	test   %rdi,%rdi
   13d87:	74 07                	je     13d90 <mbedtls_md_get_name+0x10>
   13d89:	48 8b 07             	mov    (%rdi),%rax
   13d8c:	c3                   	retq   
   13d8d:	0f 1f 00             	nopl   (%rax)
   13d90:	31 c0                	xor    %eax,%eax
   13d92:	c3                   	retq   
   13d93:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13d9a:	00 00 00 
   13d9d:	0f 1f 00             	nopl   (%rax)

0000000000013da0 <mbedtls_md5_init>:
   13da0:	f3 0f 1e fa          	endbr64 
   13da4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   13dab:	48 89 f9             	mov    %rdi,%rcx
   13dae:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   13db2:	31 c0                	xor    %eax,%eax
   13db4:	48 c7 47 48 00 00 00 	movq   $0x0,0x48(%rdi)
   13dbb:	00 
   13dbc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   13dc0:	48 29 f9             	sub    %rdi,%rcx
   13dc3:	83 c1 58             	add    $0x58,%ecx
   13dc6:	c1 e9 03             	shr    $0x3,%ecx
   13dc9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13dcc:	c3                   	retq   
   13dcd:	0f 1f 00             	nopl   (%rax)

0000000000013dd0 <mbedtls_md5_free>:
   13dd0:	f3 0f 1e fa          	endbr64 
   13dd4:	48 85 ff             	test   %rdi,%rdi
   13dd7:	74 0f                	je     13de8 <mbedtls_md5_free+0x18>
   13dd9:	be 58 00 00 00       	mov    $0x58,%esi
   13dde:	e9 8d 0e 00 00       	jmpq   14c70 <mbedtls_platform_zeroize>
   13de3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13de8:	c3                   	retq   
   13de9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013df0 <mbedtls_md5_clone>:
   13df0:	f3 0f 1e fa          	endbr64 
   13df4:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   13df8:	0f 11 07             	movups %xmm0,(%rdi)
   13dfb:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   13e00:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   13e04:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   13e09:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   13e0d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   13e12:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   13e16:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   13e1b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   13e1f:	48 8b 46 50          	mov    0x50(%rsi),%rax
   13e23:	48 89 47 50          	mov    %rax,0x50(%rdi)
   13e27:	c3                   	retq   
   13e28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13e2f:	00 

0000000000013e30 <mbedtls_md5_starts>:
   13e30:	f3 0f 1e fa          	endbr64 
   13e34:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   13e3b:	ab cd ef 
   13e3e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   13e45:	48 89 47 08          	mov    %rax,0x8(%rdi)
   13e49:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   13e50:	54 32 10 
   13e53:	48 89 47 10          	mov    %rax,0x10(%rdi)
   13e57:	31 c0                	xor    %eax,%eax
   13e59:	c3                   	retq   
   13e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000013e60 <mbedtls_internal_md5_process>:
   13e60:	f3 0f 1e fa          	endbr64 
   13e64:	41 57                	push   %r15
   13e66:	41 56                	push   %r14
   13e68:	41 55                	push   %r13
   13e6a:	41 54                	push   %r12
   13e6c:	55                   	push   %rbp
   13e6d:	53                   	push   %rbx
   13e6e:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   13e75:	44 8b 36             	mov    (%rsi),%r14d
   13e78:	44 8b 4e 04          	mov    0x4(%rsi),%r9d
   13e7c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13e83:	00 00 
   13e85:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   13e8a:	31 c0                	xor    %eax,%eax
   13e8c:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
   13e90:	8b 6e 14             	mov    0x14(%rsi),%ebp
   13e93:	44 8b 6e 1c          	mov    0x1c(%rsi),%r13d
   13e97:	44 8b 7e 08          	mov    0x8(%rsi),%r15d
   13e9b:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
   13ea0:	8b 46 10             	mov    0x10(%rsi),%eax
   13ea3:	8b 5e 18             	mov    0x18(%rsi),%ebx
   13ea6:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
   13eab:	8b 4e 20             	mov    0x20(%rsi),%ecx
   13eae:	8b 56 24             	mov    0x24(%rsi),%edx
   13eb1:	44 89 7c 24 28       	mov    %r15d,0x28(%rsp)
   13eb6:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   13ebb:	89 04 24             	mov    %eax,(%rsp)
   13ebe:	89 44 24 30          	mov    %eax,0x30(%rsp)
   13ec2:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
   13ec6:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
   13eca:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
   13ece:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   13ed2:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   13ed6:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   13eda:	44 89 6c 24 3c       	mov    %r13d,0x3c(%rsp)
   13edf:	89 54 24 44          	mov    %edx,0x44(%rsp)
   13ee3:	44 8b 66 34          	mov    0x34(%rsi),%r12d
   13ee7:	44 8b 56 28          	mov    0x28(%rsi),%r10d
   13eeb:	8b 5e 30             	mov    0x30(%rsi),%ebx
   13eee:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   13ef3:	44 8b 46 2c          	mov    0x2c(%rsi),%r8d
   13ef7:	8b 47 08             	mov    0x8(%rdi),%eax
   13efa:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
   13eff:	8b 57 0c             	mov    0xc(%rdi),%edx
   13f02:	33 57 10             	xor    0x10(%rdi),%edx
   13f05:	44 89 64 24 54       	mov    %r12d,0x54(%rsp)
   13f0a:	44 8b 66 38          	mov    0x38(%rsi),%r12d
   13f0e:	8b 76 3c             	mov    0x3c(%rsi),%esi
   13f11:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   13f16:	42 8d 84 30 78 a4 6a 	lea    -0x28955b88(%rax,%r14,1),%eax
   13f1d:	d7 
   13f1e:	8b 4f 10             	mov    0x10(%rdi),%ecx
   13f21:	44 89 44 24 4c       	mov    %r8d,0x4c(%rsp)
   13f26:	89 74 24 18          	mov    %esi,0x18(%rsp)
   13f2a:	89 74 24 5c          	mov    %esi,0x5c(%rsp)
   13f2e:	8b 77 10             	mov    0x10(%rdi),%esi
   13f31:	42 8d 8c 39 db 70 20 	lea    0x242070db(%rcx,%r15,1),%ecx
   13f38:	24 
   13f39:	33 77 14             	xor    0x14(%rdi),%esi
   13f3c:	23 77 0c             	and    0xc(%rdi),%esi
   13f3f:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
   13f44:	33 77 14             	xor    0x14(%rdi),%esi
   13f47:	44 8b 3c 24          	mov    (%rsp),%r15d
   13f4b:	89 5c 24 50          	mov    %ebx,0x50(%rsp)
   13f4f:	01 c6                	add    %eax,%esi
   13f51:	8b 47 14             	mov    0x14(%rdi),%eax
   13f54:	44 89 64 24 58       	mov    %r12d,0x58(%rsp)
   13f59:	c1 c6 07             	rol    $0x7,%esi
   13f5c:	03 77 0c             	add    0xc(%rdi),%esi
   13f5f:	21 f2                	and    %esi,%edx
   13f61:	42 8d 84 08 56 b7 c7 	lea    -0x173848aa(%rax,%r9,1),%eax
   13f68:	e8 
   13f69:	33 57 10             	xor    0x10(%rdi),%edx
   13f6c:	01 c2                	add    %eax,%edx
   13f6e:	8b 47 0c             	mov    0xc(%rdi),%eax
   13f71:	c1 c2 0c             	rol    $0xc,%edx
   13f74:	01 f2                	add    %esi,%edx
   13f76:	31 f0                	xor    %esi,%eax
   13f78:	21 d0                	and    %edx,%eax
   13f7a:	33 47 0c             	xor    0xc(%rdi),%eax
   13f7d:	01 c8                	add    %ecx,%eax
   13f7f:	89 f1                	mov    %esi,%ecx
   13f81:	31 d1                	xor    %edx,%ecx
   13f83:	c1 c8 0f             	ror    $0xf,%eax
   13f86:	01 d0                	add    %edx,%eax
   13f88:	41 89 c8             	mov    %ecx,%r8d
   13f8b:	8b 4f 0c             	mov    0xc(%rdi),%ecx
   13f8e:	41 21 c0             	and    %eax,%r8d
   13f91:	41 31 f0             	xor    %esi,%r8d
   13f94:	42 8d 8c 19 ee ce bd 	lea    -0x3e423112(%rcx,%r11,1),%ecx
   13f9b:	c1 
   13f9c:	42 8d b4 3e af 0f 7c 	lea    -0xa83f051(%rsi,%r15,1),%esi
   13fa3:	f5 
   13fa4:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
   13fa9:	41 01 c8             	add    %ecx,%r8d
   13fac:	89 d1                	mov    %edx,%ecx
   13fae:	41 c1 c8 0a          	ror    $0xa,%r8d
   13fb2:	31 c1                	xor    %eax,%ecx
   13fb4:	41 01 c0             	add    %eax,%r8d
   13fb7:	44 21 c1             	and    %r8d,%ecx
   13fba:	31 d1                	xor    %edx,%ecx
   13fbc:	8d 94 2a 2a c6 87 47 	lea    0x4787c62a(%rdx,%rbp,1),%edx
   13fc3:	01 f1                	add    %esi,%ecx
   13fc5:	89 c6                	mov    %eax,%esi
   13fc7:	c1 c1 07             	rol    $0x7,%ecx
   13fca:	44 01 c1             	add    %r8d,%ecx
   13fcd:	44 31 c6             	xor    %r8d,%esi
   13fd0:	21 ce                	and    %ecx,%esi
   13fd2:	31 c6                	xor    %eax,%esi
   13fd4:	42 8d 84 38 13 46 30 	lea    -0x57cfb9ed(%rax,%r15,1),%eax
   13fdb:	a8 
   13fdc:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
   13fe1:	01 d6                	add    %edx,%esi
   13fe3:	44 89 c2             	mov    %r8d,%edx
   13fe6:	c1 c6 0c             	rol    $0xc,%esi
   13fe9:	31 ca                	xor    %ecx,%edx
   13feb:	01 ce                	add    %ecx,%esi
   13fed:	21 f2                	and    %esi,%edx
   13fef:	44 31 c2             	xor    %r8d,%edx
   13ff2:	47 8d 84 28 01 95 46 	lea    -0x2b96aff(%r8,%r13,1),%r8d
   13ff9:	fd 
   13ffa:	01 c2                	add    %eax,%edx
   13ffc:	89 c8                	mov    %ecx,%eax
   13ffe:	c1 ca 0f             	ror    $0xf,%edx
   14001:	31 f0                	xor    %esi,%eax
   14003:	01 f2                	add    %esi,%edx
   14005:	21 d0                	and    %edx,%eax
   14007:	31 c8                	xor    %ecx,%eax
   14009:	42 8d 8c 39 d8 98 80 	lea    0x698098d8(%rcx,%r15,1),%ecx
   14010:	69 
   14011:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
   14016:	44 01 c0             	add    %r8d,%eax
   14019:	41 89 f0             	mov    %esi,%r8d
   1401c:	c1 c8 0a             	ror    $0xa,%eax
   1401f:	41 31 d0             	xor    %edx,%r8d
   14022:	01 d0                	add    %edx,%eax
   14024:	41 21 c0             	and    %eax,%r8d
   14027:	41 31 f0             	xor    %esi,%r8d
   1402a:	42 8d b4 3e af f7 44 	lea    -0x74bb0851(%rsi,%r15,1),%esi
   14031:	8b 
   14032:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   14037:	41 01 c8             	add    %ecx,%r8d
   1403a:	89 d1                	mov    %edx,%ecx
   1403c:	41 c1 c0 07          	rol    $0x7,%r8d
   14040:	31 c1                	xor    %eax,%ecx
   14042:	41 01 c0             	add    %eax,%r8d
   14045:	44 21 c1             	and    %r8d,%ecx
   14048:	31 d1                	xor    %edx,%ecx
   1404a:	42 8d 94 12 b1 5b ff 	lea    -0xa44f(%rdx,%r10,1),%edx
   14051:	ff 
   14052:	01 f1                	add    %esi,%ecx
   14054:	89 c6                	mov    %eax,%esi
   14056:	c1 c1 0c             	rol    $0xc,%ecx
   14059:	44 31 c6             	xor    %r8d,%esi
   1405c:	44 01 c1             	add    %r8d,%ecx
   1405f:	21 ce                	and    %ecx,%esi
   14061:	31 c6                	xor    %eax,%esi
   14063:	42 8d 84 38 be d7 5c 	lea    -0x76a32842(%rax,%r15,1),%eax
   1406a:	89 
   1406b:	01 d6                	add    %edx,%esi
   1406d:	44 89 c2             	mov    %r8d,%edx
   14070:	c1 ce 0f             	ror    $0xf,%esi
   14073:	31 ca                	xor    %ecx,%edx
   14075:	01 ce                	add    %ecx,%esi
   14077:	21 f2                	and    %esi,%edx
   14079:	44 31 c2             	xor    %r8d,%edx
   1407c:	45 8d 84 18 22 11 90 	lea    0x6b901122(%r8,%rbx,1),%r8d
   14083:	6b 
   14084:	01 c2                	add    %eax,%edx
   14086:	89 c8                	mov    %ecx,%eax
   14088:	c1 ca 0a             	ror    $0xa,%edx
   1408b:	31 f0                	xor    %esi,%eax
   1408d:	01 f2                	add    %esi,%edx
   1408f:	21 d0                	and    %edx,%eax
   14091:	31 c8                	xor    %ecx,%eax
   14093:	44 01 c0             	add    %r8d,%eax
   14096:	41 89 f0             	mov    %esi,%r8d
   14099:	41 31 d0             	xor    %edx,%r8d
   1409c:	c1 c0 07             	rol    $0x7,%eax
   1409f:	01 d0                	add    %edx,%eax
   140a1:	45 89 c7             	mov    %r8d,%r15d
   140a4:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   140a9:	41 21 c7             	and    %eax,%r15d
   140ac:	41 31 f7             	xor    %esi,%r15d
   140af:	42 8d 8c 01 93 71 98 	lea    -0x2678e6d(%rcx,%r8,1),%ecx
   140b6:	fd 
   140b7:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
   140bc:	42 8d b4 26 8e 43 79 	lea    -0x5986bc72(%rsi,%r12,1),%esi
   140c3:	a6 
   140c4:	41 01 cf             	add    %ecx,%r15d
   140c7:	89 d1                	mov    %edx,%ecx
   140c9:	41 c1 c7 0c          	rol    $0xc,%r15d
   140cd:	31 c1                	xor    %eax,%ecx
   140cf:	41 01 c7             	add    %eax,%r15d
   140d2:	44 21 f9             	and    %r15d,%ecx
   140d5:	31 d1                	xor    %edx,%ecx
   140d7:	42 8d 94 02 21 08 b4 	lea    0x49b40821(%rdx,%r8,1),%edx
   140de:	49 
   140df:	01 f1                	add    %esi,%ecx
   140e1:	89 c6                	mov    %eax,%esi
   140e3:	c1 c9 0f             	ror    $0xf,%ecx
   140e6:	44 31 fe             	xor    %r15d,%esi
   140e9:	44 01 f9             	add    %r15d,%ecx
   140ec:	21 ce                	and    %ecx,%esi
   140ee:	31 c6                	xor    %eax,%esi
   140f0:	42 8d 84 08 62 25 1e 	lea    -0x9e1da9e(%rax,%r9,1),%eax
   140f7:	f6 
   140f8:	01 d6                	add    %edx,%esi
   140fa:	89 ca                	mov    %ecx,%edx
   140fc:	c1 ce 0a             	ror    $0xa,%esi
   140ff:	01 ce                	add    %ecx,%esi
   14101:	31 f2                	xor    %esi,%edx
   14103:	41 89 d0             	mov    %edx,%r8d
   14106:	89 f2                	mov    %esi,%edx
   14108:	45 21 f8             	and    %r15d,%r8d
   1410b:	41 31 c8             	xor    %ecx,%r8d
   1410e:	41 01 c0             	add    %eax,%r8d
   14111:	8b 44 24 04          	mov    0x4(%rsp),%eax
   14115:	41 c1 c0 05          	rol    $0x5,%r8d
   14119:	41 01 f0             	add    %esi,%r8d
   1411c:	41 8d 84 07 40 b3 40 	lea    -0x3fbf4cc0(%r15,%rax,1),%eax
   14123:	c0 
   14124:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   14129:	44 31 c2             	xor    %r8d,%edx
   1412c:	21 ca                	and    %ecx,%edx
   1412e:	42 8d 8c 39 51 5a 5e 	lea    0x265e5a51(%rcx,%r15,1),%ecx
   14135:	26 
   14136:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
   1413b:	31 f2                	xor    %esi,%edx
   1413d:	01 c2                	add    %eax,%edx
   1413f:	44 89 c0             	mov    %r8d,%eax
   14142:	c1 c2 09             	rol    $0x9,%edx
   14145:	44 01 c2             	add    %r8d,%edx
   14148:	31 d0                	xor    %edx,%eax
   1414a:	21 f0                	and    %esi,%eax
   1414c:	42 8d b4 36 aa c7 b6 	lea    -0x16493856(%rsi,%r14,1),%esi
   14153:	e9 
   14154:	44 31 c0             	xor    %r8d,%eax
   14157:	01 c8                	add    %ecx,%eax
   14159:	89 d1                	mov    %edx,%ecx
   1415b:	c1 c0 0e             	rol    $0xe,%eax
   1415e:	01 d0                	add    %edx,%eax
   14160:	31 c1                	xor    %eax,%ecx
   14162:	44 21 c1             	and    %r8d,%ecx
   14165:	45 8d 84 28 5d 10 2f 	lea    -0x29d0efa3(%r8,%rbp,1),%r8d
   1416c:	d6 
   1416d:	31 d1                	xor    %edx,%ecx
   1416f:	01 f1                	add    %esi,%ecx
   14171:	89 c6                	mov    %eax,%esi
   14173:	c1 c9 0c             	ror    $0xc,%ecx
   14176:	01 c1                	add    %eax,%ecx
   14178:	31 ce                	xor    %ecx,%esi
   1417a:	21 d6                	and    %edx,%esi
   1417c:	42 8d 94 12 53 14 44 	lea    0x2441453(%rdx,%r10,1),%edx
   14183:	02 
   14184:	31 c6                	xor    %eax,%esi
   14186:	44 01 c6             	add    %r8d,%esi
   14189:	41 89 c8             	mov    %ecx,%r8d
   1418c:	c1 c6 05             	rol    $0x5,%esi
   1418f:	01 ce                	add    %ecx,%esi
   14191:	41 31 f0             	xor    %esi,%r8d
   14194:	41 21 c0             	and    %eax,%r8d
   14197:	42 8d 84 38 81 e6 a1 	lea    -0x275e197f(%rax,%r15,1),%eax
   1419e:	d8 
   1419f:	44 8b 3c 24          	mov    (%rsp),%r15d
   141a3:	41 31 c8             	xor    %ecx,%r8d
   141a6:	41 01 d0             	add    %edx,%r8d
   141a9:	89 f2                	mov    %esi,%edx
   141ab:	41 c1 c0 09          	rol    $0x9,%r8d
   141af:	41 01 f0             	add    %esi,%r8d
   141b2:	44 31 c2             	xor    %r8d,%edx
   141b5:	21 ca                	and    %ecx,%edx
   141b7:	42 8d 8c 39 c8 fb d3 	lea    -0x182c0438(%rcx,%r15,1),%ecx
   141be:	e7 
   141bf:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
   141c4:	31 f2                	xor    %esi,%edx
   141c6:	01 c2                	add    %eax,%edx
   141c8:	44 89 c0             	mov    %r8d,%eax
   141cb:	c1 c2 0e             	rol    $0xe,%edx
   141ce:	44 01 c2             	add    %r8d,%edx
   141d1:	31 d0                	xor    %edx,%eax
   141d3:	21 f0                	and    %esi,%eax
   141d5:	42 8d b4 3e e6 cd e1 	lea    0x21e1cde6(%rsi,%r15,1),%esi
   141dc:	21 
   141dd:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
   141e2:	44 31 c0             	xor    %r8d,%eax
   141e5:	01 c8                	add    %ecx,%eax
   141e7:	89 d1                	mov    %edx,%ecx
   141e9:	c1 c8 0c             	ror    $0xc,%eax
   141ec:	01 d0                	add    %edx,%eax
   141ee:	31 c1                	xor    %eax,%ecx
   141f0:	44 21 c1             	and    %r8d,%ecx
   141f3:	47 8d 84 20 d6 07 37 	lea    -0x3cc8f82a(%r8,%r12,1),%r8d
   141fa:	c3 
   141fb:	31 d1                	xor    %edx,%ecx
   141fd:	01 f1                	add    %esi,%ecx
   141ff:	89 c6                	mov    %eax,%esi
   14201:	c1 c1 05             	rol    $0x5,%ecx
   14204:	01 c1                	add    %eax,%ecx
   14206:	31 ce                	xor    %ecx,%esi
   14208:	21 d6                	and    %edx,%esi
   1420a:	42 8d 94 1a 87 0d d5 	lea    -0xb2af279(%rdx,%r11,1),%edx
   14211:	f4 
   14212:	31 c6                	xor    %eax,%esi
   14214:	44 01 c6             	add    %r8d,%esi
   14217:	41 89 c8             	mov    %ecx,%r8d
   1421a:	c1 c6 09             	rol    $0x9,%esi
   1421d:	01 ce                	add    %ecx,%esi
   1421f:	41 31 f0             	xor    %esi,%r8d
   14222:	41 21 c0             	and    %eax,%r8d
   14225:	42 8d 84 38 ed 14 5a 	lea    0x455a14ed(%rax,%r15,1),%eax
   1422c:	45 
   1422d:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
   14232:	41 31 c8             	xor    %ecx,%r8d
   14235:	41 01 d0             	add    %edx,%r8d
   14238:	89 f2                	mov    %esi,%edx
   1423a:	41 c1 c0 0e          	rol    $0xe,%r8d
   1423e:	41 01 f0             	add    %esi,%r8d
   14241:	44 31 c2             	xor    %r8d,%edx
   14244:	21 ca                	and    %ecx,%edx
   14246:	42 8d 8c 39 05 e9 e3 	lea    -0x561c16fb(%rcx,%r15,1),%ecx
   1424d:	a9 
   1424e:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   14253:	31 f2                	xor    %esi,%edx
   14255:	01 c2                	add    %eax,%edx
   14257:	44 89 c0             	mov    %r8d,%eax
   1425a:	c1 ca 0c             	ror    $0xc,%edx
   1425d:	44 01 c2             	add    %r8d,%edx
   14260:	31 d0                	xor    %edx,%eax
   14262:	21 f0                	and    %esi,%eax
   14264:	42 8d b4 3e f8 a3 ef 	lea    -0x3105c08(%rsi,%r15,1),%esi
   1426b:	fc 
   1426c:	44 31 c0             	xor    %r8d,%eax
   1426f:	01 c8                	add    %ecx,%eax
   14271:	89 d1                	mov    %edx,%ecx
   14273:	c1 c0 05             	rol    $0x5,%eax
   14276:	01 d0                	add    %edx,%eax
   14278:	31 c1                	xor    %eax,%ecx
   1427a:	44 21 c1             	and    %r8d,%ecx
   1427d:	47 8d 84 28 d9 02 6f 	lea    0x676f02d9(%r8,%r13,1),%r8d
   14284:	67 
   14285:	31 d1                	xor    %edx,%ecx
   14287:	01 f1                	add    %esi,%ecx
   14289:	89 c6                	mov    %eax,%esi
   1428b:	c1 c1 09             	rol    $0x9,%ecx
   1428e:	01 c1                	add    %eax,%ecx
   14290:	31 ce                	xor    %ecx,%esi
   14292:	21 d6                	and    %edx,%esi
   14294:	8d 94 1a 8a 4c 2a 8d 	lea    -0x72d5b376(%rdx,%rbx,1),%edx
   1429b:	31 c6                	xor    %eax,%esi
   1429d:	44 01 c6             	add    %r8d,%esi
   142a0:	41 89 c8             	mov    %ecx,%r8d
   142a3:	c1 c6 0e             	rol    $0xe,%esi
   142a6:	01 ce                	add    %ecx,%esi
   142a8:	41 31 f0             	xor    %esi,%r8d
   142ab:	45 89 c7             	mov    %r8d,%r15d
   142ae:	41 89 c0             	mov    %eax,%r8d
   142b1:	8d 84 28 42 39 fa ff 	lea    -0x5c6be(%rax,%rbp,1),%eax
   142b8:	45 21 f8             	and    %r15d,%r8d
   142bb:	41 31 c8             	xor    %ecx,%r8d
   142be:	41 01 d0             	add    %edx,%r8d
   142c1:	89 f2                	mov    %esi,%edx
   142c3:	41 c1 c8 0c          	ror    $0xc,%r8d
   142c7:	41 01 f0             	add    %esi,%r8d
   142ca:	45 31 c7             	xor    %r8d,%r15d
   142cd:	44 31 c2             	xor    %r8d,%edx
   142d0:	41 01 c7             	add    %eax,%r15d
   142d3:	8b 44 24 08          	mov    0x8(%rsp),%eax
   142d7:	41 c1 c7 04          	rol    $0x4,%r15d
   142db:	45 01 c7             	add    %r8d,%r15d
   142de:	8d 84 01 81 f6 71 87 	lea    -0x788e097f(%rcx,%rax,1),%eax
   142e5:	44 89 c1             	mov    %r8d,%ecx
   142e8:	44 31 fa             	xor    %r15d,%edx
   142eb:	44 31 f9             	xor    %r15d,%ecx
   142ee:	01 c2                	add    %eax,%edx
   142f0:	8b 44 24 10          	mov    0x10(%rsp),%eax
   142f4:	c1 c2 0b             	rol    $0xb,%edx
   142f7:	44 01 fa             	add    %r15d,%edx
   142fa:	8d 84 06 22 61 9d 6d 	lea    0x6d9d6122(%rsi,%rax,1),%eax
   14301:	44 89 fe             	mov    %r15d,%esi
   14304:	31 d1                	xor    %edx,%ecx
   14306:	31 d6                	xor    %edx,%esi
   14308:	01 c1                	add    %eax,%ecx
   1430a:	89 f0                	mov    %esi,%eax
   1430c:	43 8d b4 20 0c 38 e5 	lea    -0x21ac7f4(%r8,%r12,1),%esi
   14313:	fd 
   14314:	c1 c1 10             	rol    $0x10,%ecx
   14317:	47 8d 84 0f 44 ea be 	lea    -0x5b4115bc(%r15,%r9,1),%r8d
   1431e:	a4 
   1431f:	44 8b 3c 24          	mov    (%rsp),%r15d
   14323:	01 d1                	add    %edx,%ecx
   14325:	31 c8                	xor    %ecx,%eax
   14327:	01 f0                	add    %esi,%eax
   14329:	89 d6                	mov    %edx,%esi
   1432b:	42 8d 94 3a a9 cf de 	lea    0x4bdecfa9(%rdx,%r15,1),%edx
   14332:	4b 
   14333:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
   14338:	c1 c8 09             	ror    $0x9,%eax
   1433b:	31 ce                	xor    %ecx,%esi
   1433d:	01 c8                	add    %ecx,%eax
   1433f:	31 c6                	xor    %eax,%esi
   14341:	44 01 c6             	add    %r8d,%esi
   14344:	41 89 c8             	mov    %ecx,%r8d
   14347:	42 8d 8c 29 60 4b bb 	lea    -0x944b4a0(%rcx,%r13,1),%ecx
   1434e:	f6 
   1434f:	c1 c6 04             	rol    $0x4,%esi
   14352:	41 31 c0             	xor    %eax,%r8d
   14355:	01 c6                	add    %eax,%esi
   14357:	41 31 f0             	xor    %esi,%r8d
   1435a:	41 01 d0             	add    %edx,%r8d
   1435d:	89 c2                	mov    %eax,%edx
   1435f:	42 8d 84 10 70 bc bf 	lea    -0x41404390(%rax,%r10,1),%eax
   14366:	be 
   14367:	41 c1 c0 0b          	rol    $0xb,%r8d
   1436b:	31 f2                	xor    %esi,%edx
   1436d:	41 01 f0             	add    %esi,%r8d
   14370:	44 31 c2             	xor    %r8d,%edx
   14373:	01 ca                	add    %ecx,%edx
   14375:	89 f1                	mov    %esi,%ecx
   14377:	42 8d b4 3e c6 7e 9b 	lea    0x289b7ec6(%rsi,%r15,1),%esi
   1437e:	28 
   1437f:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
   14384:	c1 c2 10             	rol    $0x10,%edx
   14387:	44 31 c1             	xor    %r8d,%ecx
   1438a:	44 01 c2             	add    %r8d,%edx
   1438d:	31 d1                	xor    %edx,%ecx
   1438f:	01 c1                	add    %eax,%ecx
   14391:	44 89 c0             	mov    %r8d,%eax
   14394:	47 8d 84 30 fa 27 a1 	lea    -0x155ed806(%r8,%r14,1),%r8d
   1439b:	ea 
   1439c:	c1 c9 09             	ror    $0x9,%ecx
   1439f:	31 d0                	xor    %edx,%eax
   143a1:	01 d1                	add    %edx,%ecx
   143a3:	31 c8                	xor    %ecx,%eax
   143a5:	01 c6                	add    %eax,%esi
   143a7:	89 d0                	mov    %edx,%eax
   143a9:	42 8d 94 1a 85 30 ef 	lea    -0x2b10cf7b(%rdx,%r11,1),%edx
   143b0:	d4 
   143b1:	c1 c6 04             	rol    $0x4,%esi
   143b4:	31 c8                	xor    %ecx,%eax
   143b6:	01 ce                	add    %ecx,%esi
   143b8:	31 f0                	xor    %esi,%eax
   143ba:	44 01 c0             	add    %r8d,%eax
   143bd:	41 89 c8             	mov    %ecx,%r8d
   143c0:	42 8d 8c 39 05 1d 88 	lea    0x4881d05(%rcx,%r15,1),%ecx
   143c7:	04 
   143c8:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
   143cd:	c1 c0 0b             	rol    $0xb,%eax
   143d0:	41 31 f0             	xor    %esi,%r8d
   143d3:	01 f0                	add    %esi,%eax
   143d5:	41 31 c0             	xor    %eax,%r8d
   143d8:	41 01 d0             	add    %edx,%r8d
   143db:	89 f2                	mov    %esi,%edx
   143dd:	42 8d b4 3e 39 d0 d4 	lea    -0x262b2fc7(%rsi,%r15,1),%esi
   143e4:	d9 
   143e5:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
   143ea:	41 c1 c0 10          	rol    $0x10,%r8d
   143ee:	31 c2                	xor    %eax,%edx
   143f0:	41 01 c0             	add    %eax,%r8d
   143f3:	44 31 c2             	xor    %r8d,%edx
   143f6:	01 d1                	add    %edx,%ecx
   143f8:	89 c2                	mov    %eax,%edx
   143fa:	8d 84 18 e5 99 db e6 	lea    -0x1924661b(%rax,%rbx,1),%eax
   14401:	c1 c9 09             	ror    $0x9,%ecx
   14404:	44 31 c2             	xor    %r8d,%edx
   14407:	44 01 c1             	add    %r8d,%ecx
   1440a:	31 ca                	xor    %ecx,%edx
   1440c:	01 f2                	add    %esi,%edx
   1440e:	44 89 c6             	mov    %r8d,%esi
   14411:	47 8d 84 38 f8 7c a2 	lea    0x1fa27cf8(%r8,%r15,1),%r8d
   14418:	1f 
   14419:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1441e:	c1 c2 04             	rol    $0x4,%edx
   14421:	31 ce                	xor    %ecx,%esi
   14423:	01 ca                	add    %ecx,%edx
   14425:	31 d6                	xor    %edx,%esi
   14427:	01 c6                	add    %eax,%esi
   14429:	89 c8                	mov    %ecx,%eax
   1442b:	42 8d 8c 39 65 56 ac 	lea    -0x3b53a99b(%rcx,%r15,1),%ecx
   14432:	c4 
   14433:	c1 c6 0b             	rol    $0xb,%esi
   14436:	31 d0                	xor    %edx,%eax
   14438:	01 d6                	add    %edx,%esi
   1443a:	31 f0                	xor    %esi,%eax
   1443c:	41 01 c0             	add    %eax,%r8d
   1443f:	89 d0                	mov    %edx,%eax
   14441:	42 8d 94 32 44 22 29 	lea    -0xbd6ddbc(%rdx,%r14,1),%edx
   14448:	f4 
   14449:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   1444e:	41 c1 c0 10          	rol    $0x10,%r8d
   14452:	31 f0                	xor    %esi,%eax
   14454:	41 01 f0             	add    %esi,%r8d
   14457:	44 31 c0             	xor    %r8d,%eax
   1445a:	01 c1                	add    %eax,%ecx
   1445c:	89 f0                	mov    %esi,%eax
   1445e:	42 8d b4 2e 97 ff 2a 	lea    0x432aff97(%rsi,%r13,1),%esi
   14465:	43 
   14466:	c1 c9 09             	ror    $0x9,%ecx
   14469:	f7 d0                	not    %eax
   1446b:	44 01 c1             	add    %r8d,%ecx
   1446e:	09 c8                	or     %ecx,%eax
   14470:	44 31 c0             	xor    %r8d,%eax
   14473:	01 d0                	add    %edx,%eax
   14475:	44 89 c2             	mov    %r8d,%edx
   14478:	47 8d 84 20 a7 23 94 	lea    -0x546bdc59(%r8,%r12,1),%r8d
   1447f:	ab 
   14480:	c1 c0 06             	rol    $0x6,%eax
   14483:	f7 d2                	not    %edx
   14485:	01 c8                	add    %ecx,%eax
   14487:	09 c2                	or     %eax,%edx
   14489:	31 ca                	xor    %ecx,%edx
   1448b:	01 f2                	add    %esi,%edx
   1448d:	89 ce                	mov    %ecx,%esi
   1448f:	8d 8c 29 39 a0 93 fc 	lea    -0x36c5fc7(%rcx,%rbp,1),%ecx
   14496:	c1 c2 0a             	rol    $0xa,%edx
   14499:	f7 d6                	not    %esi
   1449b:	01 c2                	add    %eax,%edx
   1449d:	09 d6                	or     %edx,%esi
   1449f:	31 c6                	xor    %eax,%esi
   144a1:	44 01 c6             	add    %r8d,%esi
   144a4:	41 89 c0             	mov    %eax,%r8d
   144a7:	8d 84 18 c3 59 5b 65 	lea    0x655b59c3(%rax,%rbx,1),%eax
   144ae:	8b 1c 24             	mov    (%rsp),%ebx
   144b1:	c1 c6 0f             	rol    $0xf,%esi
   144b4:	41 f7 d0             	not    %r8d
   144b7:	01 d6                	add    %edx,%esi
   144b9:	41 09 f0             	or     %esi,%r8d
   144bc:	89 f5                	mov    %esi,%ebp
   144be:	41 31 d0             	xor    %edx,%r8d
   144c1:	f7 d5                	not    %ebp
   144c3:	41 01 c8             	add    %ecx,%r8d
   144c6:	89 d1                	mov    %edx,%ecx
   144c8:	42 8d 94 1a 92 cc 0c 	lea    -0x70f3336e(%rdx,%r11,1),%edx
   144cf:	8f 
   144d0:	44 8b 5c 24 14       	mov    0x14(%rsp),%r11d
   144d5:	41 c1 c8 0b          	ror    $0xb,%r8d
   144d9:	f7 d1                	not    %ecx
   144db:	41 01 f0             	add    %esi,%r8d
   144de:	44 09 c1             	or     %r8d,%ecx
   144e1:	31 f1                	xor    %esi,%ecx
   144e3:	42 8d b4 16 7d f4 ef 	lea    -0x100b83(%rsi,%r10,1),%esi
   144ea:	ff 
   144eb:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
   144f0:	01 c1                	add    %eax,%ecx
   144f2:	89 e8                	mov    %ebp,%eax
   144f4:	c1 c1 06             	rol    $0x6,%ecx
   144f7:	44 01 c1             	add    %r8d,%ecx
   144fa:	09 c8                	or     %ecx,%eax
   144fc:	44 31 c0             	xor    %r8d,%eax
   144ff:	01 d0                	add    %edx,%eax
   14501:	44 89 c2             	mov    %r8d,%edx
   14504:	47 8d 84 08 d1 5d 84 	lea    -0x7a7ba22f(%r8,%r9,1),%r8d
   1450b:	85 
   1450c:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
   14511:	c1 c0 0a             	rol    $0xa,%eax
   14514:	f7 d2                	not    %edx
   14516:	01 c8                	add    %ecx,%eax
   14518:	09 c2                	or     %eax,%edx
   1451a:	31 ca                	xor    %ecx,%edx
   1451c:	01 f2                	add    %esi,%edx
   1451e:	89 ce                	mov    %ecx,%esi
   14520:	42 8d 8c 11 4f 7e a8 	lea    0x6fa87e4f(%rcx,%r10,1),%ecx
   14527:	6f 
   14528:	c1 c2 0f             	rol    $0xf,%edx
   1452b:	f7 d6                	not    %esi
   1452d:	01 c2                	add    %eax,%edx
   1452f:	09 d6                	or     %edx,%esi
   14531:	31 c6                	xor    %eax,%esi
   14533:	44 01 c6             	add    %r8d,%esi
   14536:	41 89 c0             	mov    %eax,%r8d
   14539:	42 8d 84 30 e0 e6 2c 	lea    -0x1d31920(%rax,%r14,1),%eax
   14540:	fe 
   14541:	c1 ce 0b             	ror    $0xb,%esi
   14544:	41 f7 d0             	not    %r8d
   14547:	01 d6                	add    %edx,%esi
   14549:	41 09 f0             	or     %esi,%r8d
   1454c:	41 31 d0             	xor    %edx,%r8d
   1454f:	41 01 c8             	add    %ecx,%r8d
   14552:	89 d1                	mov    %edx,%ecx
   14554:	42 8d 94 0a 14 43 01 	lea    -0x5cfebcec(%rdx,%r9,1),%edx
   1455b:	a3 
   1455c:	41 c1 c0 06          	rol    $0x6,%r8d
   14560:	f7 d1                	not    %ecx
   14562:	41 01 f0             	add    %esi,%r8d
   14565:	44 09 c1             	or     %r8d,%ecx
   14568:	31 f1                	xor    %esi,%ecx
   1456a:	01 c1                	add    %eax,%ecx
   1456c:	89 f0                	mov    %esi,%eax
   1456e:	42 8d b4 1e a1 11 08 	lea    0x4e0811a1(%rsi,%r11,1),%esi
   14575:	4e 
   14576:	c1 c1 0a             	rol    $0xa,%ecx
   14579:	f7 d0                	not    %eax
   1457b:	44 01 c1             	add    %r8d,%ecx
   1457e:	09 c8                	or     %ecx,%eax
   14580:	44 31 c0             	xor    %r8d,%eax
   14583:	01 d0                	add    %edx,%eax
   14585:	44 89 c2             	mov    %r8d,%edx
   14588:	45 8d 84 18 82 7e 53 	lea    -0x8ac817e(%r8,%rbx,1),%r8d
   1458f:	f7 
   14590:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   14594:	c1 c0 0f             	rol    $0xf,%eax
   14597:	f7 d2                	not    %edx
   14599:	01 c8                	add    %ecx,%eax
   1459b:	09 c2                	or     %eax,%edx
   1459d:	31 ca                	xor    %ecx,%edx
   1459f:	01 d6                	add    %edx,%esi
   145a1:	89 ca                	mov    %ecx,%edx
   145a3:	8d 8c 19 35 f2 3a bd 	lea    -0x42c50dcb(%rcx,%rbx,1),%ecx
   145aa:	c1 ce 0b             	ror    $0xb,%esi
   145ad:	f7 d2                	not    %edx
   145af:	01 c6                	add    %eax,%esi
   145b1:	09 f2                	or     %esi,%edx
   145b3:	31 c2                	xor    %eax,%edx
   145b5:	44 01 c2             	add    %r8d,%edx
   145b8:	41 89 c0             	mov    %eax,%r8d
   145bb:	42 8d 84 38 bb d2 d7 	lea    0x2ad7d2bb(%rax,%r15,1),%eax
   145c2:	2a 
   145c3:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
   145c8:	c1 c2 06             	rol    $0x6,%edx
   145cb:	41 f7 d0             	not    %r8d
   145ce:	01 f2                	add    %esi,%edx
   145d0:	41 09 d0             	or     %edx,%r8d
   145d3:	89 54 24 60          	mov    %edx,0x60(%rsp)
   145d7:	41 31 f0             	xor    %esi,%r8d
   145da:	44 01 c1             	add    %r8d,%ecx
   145dd:	41 89 f0             	mov    %esi,%r8d
   145e0:	42 8d b4 3e 91 d3 86 	lea    -0x14792c6f(%rsi,%r15,1),%esi
   145e7:	eb 
   145e8:	c1 c1 0a             	rol    $0xa,%ecx
   145eb:	41 f7 d0             	not    %r8d
   145ee:	01 d1                	add    %edx,%ecx
   145f0:	41 09 c8             	or     %ecx,%r8d
   145f3:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
   145f7:	41 31 d0             	xor    %edx,%r8d
   145fa:	44 01 c0             	add    %r8d,%eax
   145fd:	41 89 d0             	mov    %edx,%r8d
   14600:	c1 c0 0f             	rol    $0xf,%eax
   14603:	41 f7 d0             	not    %r8d
   14606:	01 c8                	add    %ecx,%eax
   14608:	41 09 c0             	or     %eax,%r8d
   1460b:	89 44 24 68          	mov    %eax,0x68(%rsp)
   1460f:	41 31 c8             	xor    %ecx,%r8d
   14612:	44 01 c6             	add    %r8d,%esi
   14615:	c1 ce 0b             	ror    $0xb,%esi
   14618:	01 c6                	add    %eax,%esi
   1461a:	89 74 24 64          	mov    %esi,0x64(%rsp)
   1461e:	03 57 08             	add    0x8(%rdi),%edx
   14621:	03 77 0c             	add    0xc(%rdi),%esi
   14624:	03 47 10             	add    0x10(%rdi),%eax
   14627:	89 57 08             	mov    %edx,0x8(%rdi)
   1462a:	03 4f 14             	add    0x14(%rdi),%ecx
   1462d:	89 77 0c             	mov    %esi,0xc(%rdi)
   14630:	be 50 00 00 00       	mov    $0x50,%esi
   14635:	89 47 10             	mov    %eax,0x10(%rdi)
   14638:	89 4f 14             	mov    %ecx,0x14(%rdi)
   1463b:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   14640:	e8 2b 06 00 00       	callq  14c70 <mbedtls_platform_zeroize>
   14645:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1464a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14651:	00 00 
   14653:	75 14                	jne    14669 <mbedtls_internal_md5_process+0x809>
   14655:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1465c:	31 c0                	xor    %eax,%eax
   1465e:	5b                   	pop    %rbx
   1465f:	5d                   	pop    %rbp
   14660:	41 5c                	pop    %r12
   14662:	41 5d                	pop    %r13
   14664:	41 5e                	pop    %r14
   14666:	41 5f                	pop    %r15
   14668:	c3                   	retq   
   14669:	e8 02 fc fe ff       	callq  4270 <__stack_chk_fail@plt>
   1466e:	66 90                	xchg   %ax,%ax

0000000000014670 <mbedtls_md5_update.part.0>:
   14670:	41 56                	push   %r14
   14672:	41 55                	push   %r13
   14674:	41 54                	push   %r12
   14676:	49 89 fc             	mov    %rdi,%r12
   14679:	55                   	push   %rbp
   1467a:	48 89 f5             	mov    %rsi,%rbp
   1467d:	53                   	push   %rbx
   1467e:	8b 07                	mov    (%rdi),%eax
   14680:	48 89 d3             	mov    %rdx,%rbx
   14683:	ba 40 00 00 00       	mov    $0x40,%edx
   14688:	41 89 c5             	mov    %eax,%r13d
   1468b:	41 83 e5 3f          	and    $0x3f,%r13d
   1468f:	44 29 ea             	sub    %r13d,%edx
   14692:	01 d8                	add    %ebx,%eax
   14694:	89 07                	mov    %eax,(%rdi)
   14696:	41 89 d6             	mov    %edx,%r14d
   14699:	73 04                	jae    1469f <mbedtls_md5_update.part.0+0x2f>
   1469b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   1469f:	45 85 ed             	test   %r13d,%r13d
   146a2:	74 05                	je     146a9 <mbedtls_md5_update.part.0+0x39>
   146a4:	49 39 de             	cmp    %rbx,%r14
   146a7:	76 37                	jbe    146e0 <mbedtls_md5_update.part.0+0x70>
   146a9:	48 83 fb 3f          	cmp    $0x3f,%rbx
   146ad:	77 17                	ja     146c6 <mbedtls_md5_update.part.0+0x56>
   146af:	eb 7f                	jmp    14730 <mbedtls_md5_update.part.0+0xc0>
   146b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   146b8:	48 83 eb 40          	sub    $0x40,%rbx
   146bc:	48 83 c5 40          	add    $0x40,%rbp
   146c0:	48 83 fb 3f          	cmp    $0x3f,%rbx
   146c4:	76 6a                	jbe    14730 <mbedtls_md5_update.part.0+0xc0>
   146c6:	48 89 ee             	mov    %rbp,%rsi
   146c9:	4c 89 e7             	mov    %r12,%rdi
   146cc:	e8 8f f7 ff ff       	callq  13e60 <mbedtls_internal_md5_process>
   146d1:	85 c0                	test   %eax,%eax
   146d3:	74 e3                	je     146b8 <mbedtls_md5_update.part.0+0x48>
   146d5:	5b                   	pop    %rbx
   146d6:	5d                   	pop    %rbp
   146d7:	41 5c                	pop    %r12
   146d9:	41 5d                	pop    %r13
   146db:	41 5e                	pop    %r14
   146dd:	c3                   	retq   
   146de:	66 90                	xchg   %ax,%ax
   146e0:	4d 8d 44 24 18       	lea    0x18(%r12),%r8
   146e5:	4d 01 c5             	add    %r8,%r13
   146e8:	83 fa 08             	cmp    $0x8,%edx
   146eb:	0f 83 87 00 00 00    	jae    14778 <mbedtls_md5_update.part.0+0x108>
   146f1:	f6 c2 04             	test   $0x4,%dl
   146f4:	0f 85 19 01 00 00    	jne    14813 <mbedtls_md5_update.part.0+0x1a3>
   146fa:	85 d2                	test   %edx,%edx
   146fc:	74 11                	je     1470f <mbedtls_md5_update.part.0+0x9f>
   146fe:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   14702:	83 e2 02             	and    $0x2,%edx
   14705:	41 88 45 00          	mov    %al,0x0(%r13)
   14709:	0f 85 30 01 00 00    	jne    1483f <mbedtls_md5_update.part.0+0x1cf>
   1470f:	4c 89 c6             	mov    %r8,%rsi
   14712:	4c 89 e7             	mov    %r12,%rdi
   14715:	e8 46 f7 ff ff       	callq  13e60 <mbedtls_internal_md5_process>
   1471a:	85 c0                	test   %eax,%eax
   1471c:	75 b7                	jne    146d5 <mbedtls_md5_update.part.0+0x65>
   1471e:	4c 01 f5             	add    %r14,%rbp
   14721:	4c 29 f3             	sub    %r14,%rbx
   14724:	45 31 ed             	xor    %r13d,%r13d
   14727:	eb 80                	jmp    146a9 <mbedtls_md5_update.part.0+0x39>
   14729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14730:	31 c0                	xor    %eax,%eax
   14732:	48 85 db             	test   %rbx,%rbx
   14735:	74 9e                	je     146d5 <mbedtls_md5_update.part.0+0x65>
   14737:	4b 8d 4c 2c 18       	lea    0x18(%r12,%r13,1),%rcx
   1473c:	89 d8                	mov    %ebx,%eax
   1473e:	83 fb 08             	cmp    $0x8,%ebx
   14741:	0f 83 7e 00 00 00    	jae    147c5 <mbedtls_md5_update.part.0+0x155>
   14747:	83 e3 04             	and    $0x4,%ebx
   1474a:	0f 85 d9 00 00 00    	jne    14829 <mbedtls_md5_update.part.0+0x1b9>
   14750:	85 c0                	test   %eax,%eax
   14752:	74 16                	je     1476a <mbedtls_md5_update.part.0+0xfa>
   14754:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   14758:	88 11                	mov    %dl,(%rcx)
   1475a:	a8 02                	test   $0x2,%al
   1475c:	74 0c                	je     1476a <mbedtls_md5_update.part.0+0xfa>
   1475e:	89 c2                	mov    %eax,%edx
   14760:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   14765:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   1476a:	31 c0                	xor    %eax,%eax
   1476c:	5b                   	pop    %rbx
   1476d:	5d                   	pop    %rbp
   1476e:	41 5c                	pop    %r12
   14770:	41 5d                	pop    %r13
   14772:	41 5e                	pop    %r14
   14774:	c3                   	retq   
   14775:	0f 1f 00             	nopl   (%rax)
   14778:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1477c:	49 8d 75 08          	lea    0x8(%r13),%rsi
   14780:	49 89 e9             	mov    %rbp,%r9
   14783:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   14787:	49 89 45 00          	mov    %rax,0x0(%r13)
   1478b:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
   14790:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
   14795:	49 29 f5             	sub    %rsi,%r13
   14798:	44 01 ea             	add    %r13d,%edx
   1479b:	4d 29 e9             	sub    %r13,%r9
   1479e:	83 e2 f8             	and    $0xfffffff8,%edx
   147a1:	83 fa 08             	cmp    $0x8,%edx
   147a4:	0f 82 65 ff ff ff    	jb     1470f <mbedtls_md5_update.part.0+0x9f>
   147aa:	83 e2 f8             	and    $0xfffffff8,%edx
   147ad:	31 c0                	xor    %eax,%eax
   147af:	89 c1                	mov    %eax,%ecx
   147b1:	83 c0 08             	add    $0x8,%eax
   147b4:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   147b8:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   147bc:	39 d0                	cmp    %edx,%eax
   147be:	72 ef                	jb     147af <mbedtls_md5_update.part.0+0x13f>
   147c0:	e9 4a ff ff ff       	jmpq   1470f <mbedtls_md5_update.part.0+0x9f>
   147c5:	48 8b 45 00          	mov    0x0(%rbp),%rax
   147c9:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   147cd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   147d1:	48 89 01             	mov    %rax,(%rcx)
   147d4:	89 d8                	mov    %ebx,%eax
   147d6:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
   147db:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   147e0:	48 29 f1             	sub    %rsi,%rcx
   147e3:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   147e6:	48 29 cd             	sub    %rcx,%rbp
   147e9:	83 e0 f8             	and    $0xfffffff8,%eax
   147ec:	83 f8 08             	cmp    $0x8,%eax
   147ef:	0f 82 75 ff ff ff    	jb     1476a <mbedtls_md5_update.part.0+0xfa>
   147f5:	83 e0 f8             	and    $0xfffffff8,%eax
   147f8:	31 d2                	xor    %edx,%edx
   147fa:	89 d1                	mov    %edx,%ecx
   147fc:	83 c2 08             	add    $0x8,%edx
   147ff:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   14804:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   14808:	39 c2                	cmp    %eax,%edx
   1480a:	72 ee                	jb     147fa <mbedtls_md5_update.part.0+0x18a>
   1480c:	31 c0                	xor    %eax,%eax
   1480e:	e9 59 ff ff ff       	jmpq   1476c <mbedtls_md5_update.part.0+0xfc>
   14813:	8b 45 00             	mov    0x0(%rbp),%eax
   14816:	41 89 45 00          	mov    %eax,0x0(%r13)
   1481a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
   1481f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
   14824:	e9 e6 fe ff ff       	jmpq   1470f <mbedtls_md5_update.part.0+0x9f>
   14829:	8b 55 00             	mov    0x0(%rbp),%edx
   1482c:	89 11                	mov    %edx,(%rcx)
   1482e:	89 c2                	mov    %eax,%edx
   14830:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   14834:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   14838:	31 c0                	xor    %eax,%eax
   1483a:	e9 2d ff ff ff       	jmpq   1476c <mbedtls_md5_update.part.0+0xfc>
   1483f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
   14845:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
   1484b:	e9 bf fe ff ff       	jmpq   1470f <mbedtls_md5_update.part.0+0x9f>

0000000000014850 <mbedtls_md5_update>:
   14850:	f3 0f 1e fa          	endbr64 
   14854:	48 85 d2             	test   %rdx,%rdx
   14857:	74 07                	je     14860 <mbedtls_md5_update+0x10>
   14859:	e9 12 fe ff ff       	jmpq   14670 <mbedtls_md5_update.part.0>
   1485e:	66 90                	xchg   %ax,%ax
   14860:	31 c0                	xor    %eax,%eax
   14862:	c3                   	retq   
   14863:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1486a:	00 00 00 00 
   1486e:	66 90                	xchg   %ax,%ax

0000000000014870 <mbedtls_md5_finish>:
   14870:	f3 0f 1e fa          	endbr64 
   14874:	41 54                	push   %r12
   14876:	4c 8d 67 18          	lea    0x18(%rdi),%r12
   1487a:	55                   	push   %rbp
   1487b:	48 89 f5             	mov    %rsi,%rbp
   1487e:	53                   	push   %rbx
   1487f:	8b 07                	mov    (%rdi),%eax
   14881:	48 89 fb             	mov    %rdi,%rbx
   14884:	83 e0 3f             	and    $0x3f,%eax
   14887:	8d 48 01             	lea    0x1(%rax),%ecx
   1488a:	c6 44 07 18 80       	movb   $0x80,0x18(%rdi,%rax,1)
   1488f:	89 c8                	mov    %ecx,%eax
   14891:	4c 01 e0             	add    %r12,%rax
   14894:	83 f9 38             	cmp    $0x38,%ecx
   14897:	77 57                	ja     148f0 <mbedtls_md5_finish+0x80>
   14899:	ba 38 00 00 00       	mov    $0x38,%edx
   1489e:	31 ff                	xor    %edi,%edi
   148a0:	29 ca                	sub    %ecx,%edx
   148a2:	83 fa 08             	cmp    $0x8,%edx
   148a5:	72 79                	jb     14920 <mbedtls_md5_finish+0xb0>
   148a7:	89 d1                	mov    %edx,%ecx
   148a9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   148b0:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   148b7:	00 00 
   148b9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   148bd:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   148c1:	48 29 c8             	sub    %rcx,%rax
   148c4:	01 c2                	add    %eax,%edx
   148c6:	83 e2 f8             	and    $0xfffffff8,%edx
   148c9:	83 fa 08             	cmp    $0x8,%edx
   148cc:	0f 82 8b 00 00 00    	jb     1495d <mbedtls_md5_finish+0xed>
   148d2:	83 e2 f8             	and    $0xfffffff8,%edx
   148d5:	31 c0                	xor    %eax,%eax
   148d7:	89 c6                	mov    %eax,%esi
   148d9:	83 c0 08             	add    $0x8,%eax
   148dc:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   148e0:	39 d0                	cmp    %edx,%eax
   148e2:	72 f3                	jb     148d7 <mbedtls_md5_finish+0x67>
   148e4:	eb 77                	jmp    1495d <mbedtls_md5_finish+0xed>
   148e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   148ed:	00 00 00 
   148f0:	ba 40 00 00 00       	mov    $0x40,%edx
   148f5:	29 ca                	sub    %ecx,%edx
   148f7:	89 d1                	mov    %edx,%ecx
   148f9:	74 0f                	je     1490a <mbedtls_md5_finish+0x9a>
   148fb:	31 d2                	xor    %edx,%edx
   148fd:	89 d6                	mov    %edx,%esi
   148ff:	83 c2 01             	add    $0x1,%edx
   14902:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   14906:	39 ca                	cmp    %ecx,%edx
   14908:	72 f3                	jb     148fd <mbedtls_md5_finish+0x8d>
   1490a:	4c 89 e6             	mov    %r12,%rsi
   1490d:	48 89 df             	mov    %rbx,%rdi
   14910:	e8 4b f5 ff ff       	callq  13e60 <mbedtls_internal_md5_process>
   14915:	85 c0                	test   %eax,%eax
   14917:	74 27                	je     14940 <mbedtls_md5_finish+0xd0>
   14919:	5b                   	pop    %rbx
   1491a:	5d                   	pop    %rbp
   1491b:	41 5c                	pop    %r12
   1491d:	c3                   	retq   
   1491e:	66 90                	xchg   %ax,%ax
   14920:	f6 c2 04             	test   $0x4,%dl
   14923:	0f 85 7f 00 00 00    	jne    149a8 <mbedtls_md5_finish+0x138>
   14929:	85 d2                	test   %edx,%edx
   1492b:	74 30                	je     1495d <mbedtls_md5_finish+0xed>
   1492d:	c6 00 00             	movb   $0x0,(%rax)
   14930:	f6 c2 02             	test   $0x2,%dl
   14933:	74 28                	je     1495d <mbedtls_md5_finish+0xed>
   14935:	31 c9                	xor    %ecx,%ecx
   14937:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   1493c:	eb 1f                	jmp    1495d <mbedtls_md5_finish+0xed>
   1493e:	66 90                	xchg   %ax,%ax
   14940:	66 0f ef c0          	pxor   %xmm0,%xmm0
   14944:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
   14948:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   1494f:	00 00 
   14951:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   14957:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   1495d:	8b 13                	mov    (%rbx),%edx
   1495f:	8b 43 04             	mov    0x4(%rbx),%eax
   14962:	4c 89 e6             	mov    %r12,%rsi
   14965:	48 89 df             	mov    %rbx,%rdi
   14968:	89 d1                	mov    %edx,%ecx
   1496a:	c1 e0 03             	shl    $0x3,%eax
   1496d:	c1 e9 1d             	shr    $0x1d,%ecx
   14970:	c1 e2 03             	shl    $0x3,%edx
   14973:	09 c8                	or     %ecx,%eax
   14975:	89 53 50             	mov    %edx,0x50(%rbx)
   14978:	89 43 54             	mov    %eax,0x54(%rbx)
   1497b:	e8 e0 f4 ff ff       	callq  13e60 <mbedtls_internal_md5_process>
   14980:	85 c0                	test   %eax,%eax
   14982:	75 95                	jne    14919 <mbedtls_md5_finish+0xa9>
   14984:	8b 53 08             	mov    0x8(%rbx),%edx
   14987:	89 55 00             	mov    %edx,0x0(%rbp)
   1498a:	8b 53 0c             	mov    0xc(%rbx),%edx
   1498d:	89 55 04             	mov    %edx,0x4(%rbp)
   14990:	8b 53 10             	mov    0x10(%rbx),%edx
   14993:	89 55 08             	mov    %edx,0x8(%rbp)
   14996:	8b 53 14             	mov    0x14(%rbx),%edx
   14999:	5b                   	pop    %rbx
   1499a:	89 55 0c             	mov    %edx,0xc(%rbp)
   1499d:	5d                   	pop    %rbp
   1499e:	41 5c                	pop    %r12
   149a0:	c3                   	retq   
   149a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   149a8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   149ae:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   149b5:	00 
   149b6:	eb a5                	jmp    1495d <mbedtls_md5_finish+0xed>
   149b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   149bf:	00 

00000000000149c0 <mbedtls_md5>:
   149c0:	f3 0f 1e fa          	endbr64 
   149c4:	41 55                	push   %r13
   149c6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   149ca:	41 54                	push   %r12
   149cc:	55                   	push   %rbp
   149cd:	48 89 d5             	mov    %rdx,%rbp
   149d0:	48 83 ec 60          	sub    $0x60,%rsp
   149d4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   149db:	00 00 
   149dd:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   149e2:	31 c0                	xor    %eax,%eax
   149e4:	49 89 e5             	mov    %rsp,%r13
   149e7:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   149ee:	00 
   149ef:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   149f6:	ab cd ef 
   149f9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   149fe:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   14a05:	54 32 10 
   14a08:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   14a0d:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   14a12:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   14a17:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   14a1c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   14a21:	48 85 f6             	test   %rsi,%rsi
   14a24:	74 15                	je     14a3b <mbedtls_md5+0x7b>
   14a26:	48 89 f2             	mov    %rsi,%rdx
   14a29:	48 89 fe             	mov    %rdi,%rsi
   14a2c:	4c 89 ef             	mov    %r13,%rdi
   14a2f:	e8 3c fc ff ff       	callq  14670 <mbedtls_md5_update.part.0>
   14a34:	41 89 c4             	mov    %eax,%r12d
   14a37:	85 c0                	test   %eax,%eax
   14a39:	75 0e                	jne    14a49 <mbedtls_md5+0x89>
   14a3b:	48 89 ee             	mov    %rbp,%rsi
   14a3e:	4c 89 ef             	mov    %r13,%rdi
   14a41:	e8 2a fe ff ff       	callq  14870 <mbedtls_md5_finish>
   14a46:	41 89 c4             	mov    %eax,%r12d
   14a49:	be 58 00 00 00       	mov    $0x58,%esi
   14a4e:	4c 89 ef             	mov    %r13,%rdi
   14a51:	e8 1a 02 00 00       	callq  14c70 <mbedtls_platform_zeroize>
   14a56:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   14a5b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14a62:	00 00 
   14a64:	75 0d                	jne    14a73 <mbedtls_md5+0xb3>
   14a66:	48 83 c4 60          	add    $0x60,%rsp
   14a6a:	44 89 e0             	mov    %r12d,%eax
   14a6d:	5d                   	pop    %rbp
   14a6e:	41 5c                	pop    %r12
   14a70:	41 5d                	pop    %r13
   14a72:	c3                   	retq   
   14a73:	e8 f8 f7 fe ff       	callq  4270 <__stack_chk_fail@plt>
   14a78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14a7f:	00 

0000000000014a80 <mbedtls_md5_self_test>:
   14a80:	f3 0f 1e fa          	endbr64 
   14a84:	41 57                	push   %r15
   14a86:	41 56                	push   %r14
   14a88:	45 31 f6             	xor    %r14d,%r14d
   14a8b:	41 55                	push   %r13
   14a8d:	4c 8d 2d cc e3 00 00 	lea    0xe3cc(%rip),%r13        # 22e60 <md5_test_buf>
   14a94:	41 54                	push   %r12
   14a96:	4c 8d 25 03 e3 00 00 	lea    0xe303(%rip),%r12        # 22da0 <md5_test_sum>
   14a9d:	55                   	push   %rbp
   14a9e:	89 fd                	mov    %edi,%ebp
   14aa0:	53                   	push   %rbx
   14aa1:	31 db                	xor    %ebx,%ebx
   14aa3:	48 83 ec 28          	sub    $0x28,%rsp
   14aa7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14aae:	00 00 
   14ab0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14ab5:	31 c0                	xor    %eax,%eax
   14ab7:	49 89 e7             	mov    %rsp,%r15
   14aba:	85 ed                	test   %ebp,%ebp
   14abc:	75 61                	jne    14b1f <mbedtls_md5_self_test+0x9f>
   14abe:	66 90                	xchg   %ax,%ax
   14ac0:	4c 89 f6             	mov    %r14,%rsi
   14ac3:	4c 89 fa             	mov    %r15,%rdx
   14ac6:	4c 89 ef             	mov    %r13,%rdi
   14ac9:	e8 f2 fe ff ff       	callq  149c0 <mbedtls_md5>
   14ace:	41 89 c6             	mov    %eax,%r14d
   14ad1:	85 c0                	test   %eax,%eax
   14ad3:	75 71                	jne    14b46 <mbedtls_md5_self_test+0xc6>
   14ad5:	48 89 d8             	mov    %rbx,%rax
   14ad8:	49 8b 17             	mov    (%r15),%rdx
   14adb:	49 8b 77 08          	mov    0x8(%r15),%rsi
   14adf:	48 c1 e0 04          	shl    $0x4,%rax
   14ae3:	4c 01 e0             	add    %r12,%rax
   14ae6:	48 33 70 08          	xor    0x8(%rax),%rsi
   14aea:	48 33 10             	xor    (%rax),%rdx
   14aed:	48 09 d6             	or     %rdx,%rsi
   14af0:	75 4e                	jne    14b40 <mbedtls_md5_self_test+0xc0>
   14af2:	85 ed                	test   %ebp,%ebp
   14af4:	74 0c                	je     14b02 <mbedtls_md5_self_test+0x82>
   14af6:	48 8d 3d 05 66 00 00 	lea    0x6605(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
   14afd:	e8 0e f7 fe ff       	callq  4210 <puts@plt>
   14b02:	48 83 c3 01          	add    $0x1,%rbx
   14b06:	49 83 c5 51          	add    $0x51,%r13
   14b0a:	48 83 fb 07          	cmp    $0x7,%rbx
   14b0e:	74 60                	je     14b70 <mbedtls_md5_self_test+0xf0>
   14b10:	48 8d 05 09 e3 00 00 	lea    0xe309(%rip),%rax        # 22e20 <md5_test_buflen>
   14b17:	4c 8b 34 d8          	mov    (%rax,%rbx,8),%r14
   14b1b:	85 ed                	test   %ebp,%ebp
   14b1d:	74 a1                	je     14ac0 <mbedtls_md5_self_test+0x40>
   14b1f:	8d 53 01             	lea    0x1(%rbx),%edx
   14b22:	48 8d 35 4d e2 00 00 	lea    0xe24d(%rip),%rsi        # 22d76 <supported_digests+0x56>
   14b29:	bf 01 00 00 00       	mov    $0x1,%edi
   14b2e:	31 c0                	xor    %eax,%eax
   14b30:	e8 1b f8 fe ff       	callq  4350 <__printf_chk@plt>
   14b35:	eb 89                	jmp    14ac0 <mbedtls_md5_self_test+0x40>
   14b37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14b3e:	00 00 
   14b40:	41 be 01 00 00 00    	mov    $0x1,%r14d
   14b46:	85 ed                	test   %ebp,%ebp
   14b48:	75 46                	jne    14b90 <mbedtls_md5_self_test+0x110>
   14b4a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14b4f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14b56:	00 00 
   14b58:	75 44                	jne    14b9e <mbedtls_md5_self_test+0x11e>
   14b5a:	48 83 c4 28          	add    $0x28,%rsp
   14b5e:	44 89 f0             	mov    %r14d,%eax
   14b61:	5b                   	pop    %rbx
   14b62:	5d                   	pop    %rbp
   14b63:	41 5c                	pop    %r12
   14b65:	41 5d                	pop    %r13
   14b67:	41 5e                	pop    %r14
   14b69:	41 5f                	pop    %r15
   14b6b:	c3                   	retq   
   14b6c:	0f 1f 40 00          	nopl   0x0(%rax)
   14b70:	85 ed                	test   %ebp,%ebp
   14b72:	75 0c                	jne    14b80 <mbedtls_md5_self_test+0x100>
   14b74:	45 31 f6             	xor    %r14d,%r14d
   14b77:	eb d1                	jmp    14b4a <mbedtls_md5_self_test+0xca>
   14b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14b80:	bf 0a 00 00 00       	mov    $0xa,%edi
   14b85:	e8 76 f6 fe ff       	callq  4200 <putchar@plt>
   14b8a:	eb be                	jmp    14b4a <mbedtls_md5_self_test+0xca>
   14b8c:	0f 1f 40 00          	nopl   0x0(%rax)
   14b90:	48 8d 3d 26 ea 00 00 	lea    0xea26(%rip),%rdi        # 235bd <sha1_test_buf+0xbd>
   14b97:	e8 74 f6 fe ff       	callq  4210 <puts@plt>
   14b9c:	eb ac                	jmp    14b4a <mbedtls_md5_self_test+0xca>
   14b9e:	e8 cd f6 fe ff       	callq  4270 <__stack_chk_fail@plt>
   14ba3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14baa:	00 00 00 
   14bad:	0f 1f 00             	nopl   (%rax)

0000000000014bb0 <mbedtls_get_unaligned_uint16>:
   14bb0:	f3 0f 1e fa          	endbr64 
   14bb4:	0f b7 07             	movzwl (%rdi),%eax
   14bb7:	c3                   	retq   
   14bb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14bbf:	00 

0000000000014bc0 <mbedtls_put_unaligned_uint16>:
   14bc0:	f3 0f 1e fa          	endbr64 
   14bc4:	66 89 37             	mov    %si,(%rdi)
   14bc7:	c3                   	retq   
   14bc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14bcf:	00 

0000000000014bd0 <mbedtls_get_unaligned_uint32>:
   14bd0:	f3 0f 1e fa          	endbr64 
   14bd4:	8b 07                	mov    (%rdi),%eax
   14bd6:	c3                   	retq   
   14bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14bde:	00 00 

0000000000014be0 <mbedtls_put_unaligned_uint32>:
   14be0:	f3 0f 1e fa          	endbr64 
   14be4:	89 37                	mov    %esi,(%rdi)
   14be6:	c3                   	retq   
   14be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14bee:	00 00 

0000000000014bf0 <mbedtls_get_unaligned_uint64>:
   14bf0:	f3 0f 1e fa          	endbr64 
   14bf4:	48 8b 07             	mov    (%rdi),%rax
   14bf7:	c3                   	retq   
   14bf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14bff:	00 

0000000000014c00 <mbedtls_put_unaligned_uint64>:
   14c00:	f3 0f 1e fa          	endbr64 
   14c04:	48 89 37             	mov    %rsi,(%rdi)
   14c07:	c3                   	retq   
   14c08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14c0f:	00 

0000000000014c10 <mbedtls_xor>:
   14c10:	f3 0f 1e fa          	endbr64 
   14c14:	48 83 f9 03          	cmp    $0x3,%rcx
   14c18:	76 46                	jbe    14c60 <mbedtls_xor+0x50>
   14c1a:	b8 04 00 00 00       	mov    $0x4,%eax
   14c1f:	90                   	nop
   14c20:	44 8b 44 02 fc       	mov    -0x4(%rdx,%rax,1),%r8d
   14c25:	44 33 44 06 fc       	xor    -0x4(%rsi,%rax,1),%r8d
   14c2a:	44 89 44 07 fc       	mov    %r8d,-0x4(%rdi,%rax,1)
   14c2f:	49 89 c0             	mov    %rax,%r8
   14c32:	48 83 c0 04          	add    $0x4,%rax
   14c36:	48 39 c1             	cmp    %rax,%rcx
   14c39:	73 e5                	jae    14c20 <mbedtls_xor+0x10>
   14c3b:	4c 39 c1             	cmp    %r8,%rcx
   14c3e:	76 16                	jbe    14c56 <mbedtls_xor+0x46>
   14c40:	42 0f b6 04 06       	movzbl (%rsi,%r8,1),%eax
   14c45:	42 32 04 02          	xor    (%rdx,%r8,1),%al
   14c49:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
   14c4d:	49 83 c0 01          	add    $0x1,%r8
   14c51:	4c 39 c1             	cmp    %r8,%rcx
   14c54:	75 ea                	jne    14c40 <mbedtls_xor+0x30>
   14c56:	c3                   	retq   
   14c57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14c5e:	00 00 
   14c60:	45 31 c0             	xor    %r8d,%r8d
   14c63:	eb d6                	jmp    14c3b <mbedtls_xor+0x2b>
   14c65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   14c6c:	00 00 00 00 

0000000000014c70 <mbedtls_platform_zeroize>:
   14c70:	e9 5b 07 02 00       	jmpq   353d0 <mbedtls_platform_zeroize.instr.bb_14c70>
   14c75:	85 f6                	test   %esi,%esi
   14c77:	75 07                	jne    14c80 <mbedtls_platform_zeroize+0x10>
   14c79:	c3                   	retq   
   14c7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14c80:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   14c87:	e9 e4 f6 fe ff       	jmpq   4370 <__explicit_bzero_chk@plt>
   14c8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014c90 <mbedtls_platform_gmtime_r>:
   14c90:	f3 0f 1e fa          	endbr64 
   14c94:	e9 f7 f5 fe ff       	jmpq   4290 <gmtime_r@plt>
   14c99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014ca0 <mbedtls_ms_time>:
   14ca0:	f3 0f 1e fa          	endbr64 
   14ca4:	48 83 ec 28          	sub    $0x28,%rsp
   14ca8:	bf 01 00 00 00       	mov    $0x1,%edi
   14cad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14cb4:	00 00 
   14cb6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14cbb:	31 c0                	xor    %eax,%eax
   14cbd:	48 89 e6             	mov    %rsp,%rsi
   14cc0:	e8 7b f5 fe ff       	callq  4240 <clock_gettime@plt>
   14cc5:	85 c0                	test   %eax,%eax
   14cc7:	75 47                	jne    14d10 <mbedtls_ms_time+0x70>
   14cc9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   14cce:	48 69 0c 24 e8 03 00 	imul   $0x3e8,(%rsp),%rcx
   14cd5:	00 
   14cd6:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
   14cdd:	de 1b 43 
   14ce0:	48 89 f0             	mov    %rsi,%rax
   14ce3:	48 c1 fe 3f          	sar    $0x3f,%rsi
   14ce7:	48 f7 ea             	imul   %rdx
   14cea:	48 c1 fa 12          	sar    $0x12,%rdx
   14cee:	48 29 f2             	sub    %rsi,%rdx
   14cf1:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
   14cf5:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   14cfa:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   14d01:	00 00 
   14d03:	75 1b                	jne    14d20 <mbedtls_ms_time+0x80>
   14d05:	48 83 c4 28          	add    $0x28,%rsp
   14d09:	c3                   	retq   
   14d0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14d10:	31 ff                	xor    %edi,%edi
   14d12:	e8 19 f6 fe ff       	callq  4330 <time@plt>
   14d17:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
   14d1e:	eb d5                	jmp    14cf5 <mbedtls_ms_time+0x55>
   14d20:	e8 4b f5 fe ff       	callq  4270 <__stack_chk_fail@plt>
   14d25:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14d2c:	00 00 00 
   14d2f:	90                   	nop

0000000000014d30 <mbedtls_ripemd160_init>:
   14d30:	f3 0f 1e fa          	endbr64 
   14d34:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   14d3b:	48 89 f9             	mov    %rdi,%rcx
   14d3e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   14d42:	31 c0                	xor    %eax,%eax
   14d44:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
   14d4b:	00 
   14d4c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   14d50:	48 29 f9             	sub    %rdi,%rcx
   14d53:	83 c1 5c             	add    $0x5c,%ecx
   14d56:	c1 e9 03             	shr    $0x3,%ecx
   14d59:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   14d5c:	c3                   	retq   
   14d5d:	0f 1f 00             	nopl   (%rax)

0000000000014d60 <mbedtls_ripemd160_free>:
   14d60:	f3 0f 1e fa          	endbr64 
   14d64:	48 85 ff             	test   %rdi,%rdi
   14d67:	74 0f                	je     14d78 <mbedtls_ripemd160_free+0x18>
   14d69:	be 5c 00 00 00       	mov    $0x5c,%esi
   14d6e:	e9 fd fe ff ff       	jmpq   14c70 <mbedtls_platform_zeroize>
   14d73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14d78:	c3                   	retq   
   14d79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014d80 <mbedtls_ripemd160_clone>:
   14d80:	f3 0f 1e fa          	endbr64 
   14d84:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   14d88:	0f 11 07             	movups %xmm0,(%rdi)
   14d8b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   14d90:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   14d94:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   14d99:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   14d9d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   14da2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   14da6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   14dab:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   14daf:	48 8b 46 50          	mov    0x50(%rsi),%rax
   14db3:	48 89 47 50          	mov    %rax,0x50(%rdi)
   14db7:	8b 46 58             	mov    0x58(%rsi),%eax
   14dba:	89 47 58             	mov    %eax,0x58(%rdi)
   14dbd:	c3                   	retq   
   14dbe:	66 90                	xchg   %ax,%ax

0000000000014dc0 <mbedtls_ripemd160_starts>:
   14dc0:	f3 0f 1e fa          	endbr64 
   14dc4:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   14dcb:	ab cd ef 
   14dce:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   14dd5:	48 89 47 08          	mov    %rax,0x8(%rdi)
   14dd9:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   14de0:	54 32 10 
   14de3:	48 89 47 10          	mov    %rax,0x10(%rdi)
   14de7:	31 c0                	xor    %eax,%eax
   14de9:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
   14df0:	c3                   	retq   
   14df1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   14df8:	00 00 00 00 
   14dfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014e00 <mbedtls_internal_ripemd160_process>:
   14e00:	f3 0f 1e fa          	endbr64 
   14e04:	41 57                	push   %r15
   14e06:	41 56                	push   %r14
   14e08:	41 55                	push   %r13
   14e0a:	41 54                	push   %r12
   14e0c:	55                   	push   %rbp
   14e0d:	53                   	push   %rbx
   14e0e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   14e15:	44 8b 66 08          	mov    0x8(%rsi),%r12d
   14e19:	8b 56 10             	mov    0x10(%rsi),%edx
   14e1c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14e23:	00 00 
   14e25:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   14e2c:	00 
   14e2d:	31 c0                	xor    %eax,%eax
   14e2f:	8b 46 0c             	mov    0xc(%rsi),%eax
   14e32:	44 8b 1e             	mov    (%rsi),%r11d
   14e35:	44 8b 6e 04          	mov    0x4(%rsi),%r13d
   14e39:	8b 5e 1c             	mov    0x1c(%rsi),%ebx
   14e3c:	44 89 24 24          	mov    %r12d,(%rsp)
   14e40:	44 89 64 24 70       	mov    %r12d,0x70(%rsp)
   14e45:	44 8b 66 18          	mov    0x18(%rsi),%r12d
   14e49:	89 44 24 24          	mov    %eax,0x24(%rsp)
   14e4d:	89 44 24 74          	mov    %eax,0x74(%rsp)
   14e51:	8b 46 14             	mov    0x14(%rsi),%eax
   14e54:	89 54 24 04          	mov    %edx,0x4(%rsp)
   14e58:	89 54 24 78          	mov    %edx,0x78(%rsp)
   14e5c:	8b 56 20             	mov    0x20(%rsi),%edx
   14e5f:	44 89 5c 24 68       	mov    %r11d,0x68(%rsp)
   14e64:	44 89 6c 24 6c       	mov    %r13d,0x6c(%rsp)
   14e69:	89 44 24 08          	mov    %eax,0x8(%rsp)
   14e6d:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
   14e71:	44 89 a4 24 80 00 00 	mov    %r12d,0x80(%rsp)
   14e78:	00 
   14e79:	89 9c 24 84 00 00 00 	mov    %ebx,0x84(%rsp)
   14e80:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   14e84:	89 94 24 88 00 00 00 	mov    %edx,0x88(%rsp)
   14e8b:	44 8b 76 24          	mov    0x24(%rsi),%r14d
   14e8f:	44 8b 7e 2c          	mov    0x2c(%rsi),%r15d
   14e93:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
   14e97:	44 33 57 10          	xor    0x10(%rdi),%r10d
   14e9b:	8b 4e 28             	mov    0x28(%rsi),%ecx
   14e9e:	44 89 b4 24 8c 00 00 	mov    %r14d,0x8c(%rsp)
   14ea5:	00 
   14ea6:	8b 47 08             	mov    0x8(%rdi),%eax
   14ea9:	8b 6e 38             	mov    0x38(%rsi),%ebp
   14eac:	44 89 7c 24 14       	mov    %r15d,0x14(%rsp)
   14eb1:	44 8b 46 30          	mov    0x30(%rsi),%r8d
   14eb5:	44 8b 4e 34          	mov    0x34(%rsi),%r9d
   14eb9:	44 89 bc 24 94 00 00 	mov    %r15d,0x94(%rsp)
   14ec0:	00 
   14ec1:	44 8b 7f 14          	mov    0x14(%rdi),%r15d
   14ec5:	44 01 d8             	add    %r11d,%eax
   14ec8:	8b 76 3c             	mov    0x3c(%rsi),%esi
   14ecb:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   14ecf:	89 8c 24 90 00 00 00 	mov    %ecx,0x90(%rsp)
   14ed6:	8b 4f 10             	mov    0x10(%rdi),%ecx
   14ed9:	45 31 d7             	xor    %r10d,%r15d
   14edc:	44 8b 57 10          	mov    0x10(%rdi),%r10d
   14ee0:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
   14ee5:	41 01 c7             	add    %eax,%r15d
   14ee8:	8b 44 24 08          	mov    0x8(%rsp),%eax
   14eec:	44 89 84 24 98 00 00 	mov    %r8d,0x98(%rsp)
   14ef3:	00 
   14ef4:	41 c1 c2 0a          	rol    $0xa,%r10d
   14ef8:	44 89 4c 24 1c       	mov    %r9d,0x1c(%rsp)
   14efd:	41 c1 c7 0b          	rol    $0xb,%r15d
   14f01:	44 03 7f 18          	add    0x18(%rdi),%r15d
   14f05:	44 89 d2             	mov    %r10d,%edx
   14f08:	44 8b 57 14          	mov    0x14(%rdi),%r10d
   14f0c:	44 89 8c 24 9c 00 00 	mov    %r9d,0x9c(%rsp)
   14f13:	00 
   14f14:	89 ac 24 a0 00 00 00 	mov    %ebp,0xa0(%rsp)
   14f1b:	41 f7 d2             	not    %r10d
   14f1e:	89 74 24 20          	mov    %esi,0x20(%rsp)
   14f22:	44 09 d1             	or     %r10d,%ecx
   14f25:	44 8b 57 08          	mov    0x8(%rdi),%r10d
   14f29:	33 4f 0c             	xor    0xc(%rdi),%ecx
   14f2c:	89 b4 24 a4 00 00 00 	mov    %esi,0xa4(%rsp)
   14f33:	41 8d 84 02 e6 8b a2 	lea    0x50a28be6(%r10,%rax,1),%eax
   14f3a:	50 
   14f3b:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
   14f3f:	01 c1                	add    %eax,%ecx
   14f41:	41 31 d2             	xor    %edx,%r10d
   14f44:	c1 c1 08             	rol    $0x8,%ecx
   14f47:	03 4f 18             	add    0x18(%rdi),%ecx
   14f4a:	44 89 6c 24 34       	mov    %r13d,0x34(%rsp)
   14f4f:	45 89 d0             	mov    %r10d,%r8d
   14f52:	8b 47 18             	mov    0x18(%rdi),%eax
   14f55:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
   14f59:	89 6c 24 28          	mov    %ebp,0x28(%rsp)
   14f5d:	45 31 f8             	xor    %r15d,%r8d
   14f60:	89 5c 24 30          	mov    %ebx,0x30(%rsp)
   14f64:	44 01 e8             	add    %r13d,%eax
   14f67:	41 c1 c2 0a          	rol    $0xa,%r10d
   14f6b:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   14f70:	44 8b 2c 24          	mov    (%rsp),%r13d
   14f74:	45 89 d1             	mov    %r10d,%r9d
   14f77:	41 01 c0             	add    %eax,%r8d
   14f7a:	41 89 d2             	mov    %edx,%r10d
   14f7d:	8b 47 0c             	mov    0xc(%rdi),%eax
   14f80:	41 f7 d2             	not    %r10d
   14f83:	41 c1 c0 0e          	rol    $0xe,%r8d
   14f87:	44 03 47 14          	add    0x14(%rdi),%r8d
   14f8b:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   14f90:	44 09 d0             	or     %r10d,%eax
   14f93:	44 8b 57 18          	mov    0x18(%rdi),%r10d
   14f97:	31 c8                	xor    %ecx,%eax
   14f99:	41 8d b4 2a e6 8b a2 	lea    0x50a28be6(%r10,%rbp,1),%esi
   14fa0:	50 
   14fa1:	45 89 fa             	mov    %r15d,%r10d
   14fa4:	45 31 ca             	xor    %r9d,%r10d
   14fa7:	01 f0                	add    %esi,%eax
   14fa9:	44 89 d5             	mov    %r10d,%ebp
   14fac:	44 8b 14 24          	mov    (%rsp),%r10d
   14fb0:	44 03 57 14          	add    0x14(%rdi),%r10d
   14fb4:	c1 c0 09             	rol    $0x9,%eax
   14fb7:	44 31 c5             	xor    %r8d,%ebp
   14fba:	03 47 14             	add    0x14(%rdi),%eax
   14fbd:	44 01 d5             	add    %r10d,%ebp
   14fc0:	45 89 ca             	mov    %r9d,%r10d
   14fc3:	41 f7 d2             	not    %r10d
   14fc6:	c1 c5 0f             	rol    $0xf,%ebp
   14fc9:	44 89 d6             	mov    %r10d,%esi
   14fcc:	44 8b 57 14          	mov    0x14(%rdi),%r10d
   14fd0:	01 d5                	add    %edx,%ebp
   14fd2:	41 c1 c7 0a          	rol    $0xa,%r15d
   14fd6:	09 ce                	or     %ecx,%esi
   14fd8:	c1 c1 0a             	rol    $0xa,%ecx
   14fdb:	31 c6                	xor    %eax,%esi
   14fdd:	45 8d 94 1a e6 8b a2 	lea    0x50a28be6(%r10,%rbx,1),%r10d
   14fe4:	50 
   14fe5:	44 01 d6             	add    %r10d,%esi
   14fe8:	45 89 c2             	mov    %r8d,%r10d
   14feb:	41 c1 c0 0a          	rol    $0xa,%r8d
   14fef:	45 31 fa             	xor    %r15d,%r10d
   14ff2:	c1 c6 09             	rol    $0x9,%esi
   14ff5:	44 89 d3             	mov    %r10d,%ebx
   14ff8:	44 8b 54 24 24       	mov    0x24(%rsp),%r10d
   14ffd:	01 d6                	add    %edx,%esi
   14fff:	31 eb                	xor    %ebp,%ebx
   15001:	41 01 d2             	add    %edx,%r10d
   15004:	42 8d 94 1a e6 8b a2 	lea    0x50a28be6(%rdx,%r11,1),%edx
   1500b:	50 
   1500c:	41 89 eb             	mov    %ebp,%r11d
   1500f:	c1 c5 0a             	rol    $0xa,%ebp
   15012:	44 01 d3             	add    %r10d,%ebx
   15015:	41 89 ca             	mov    %ecx,%r10d
   15018:	45 31 c3             	xor    %r8d,%r11d
   1501b:	41 f7 d2             	not    %r10d
   1501e:	c1 c3 0c             	rol    $0xc,%ebx
   15021:	41 09 c2             	or     %eax,%r10d
   15024:	44 01 cb             	add    %r9d,%ebx
   15027:	c1 c0 0a             	rol    $0xa,%eax
   1502a:	41 31 f2             	xor    %esi,%r10d
   1502d:	41 31 db             	xor    %ebx,%r11d
   15030:	41 01 d2             	add    %edx,%r10d
   15033:	8b 54 24 04          	mov    0x4(%rsp),%edx
   15037:	41 c1 c2 0b          	rol    $0xb,%r10d
   1503b:	44 01 ca             	add    %r9d,%edx
   1503e:	45 01 ca             	add    %r9d,%r10d
   15041:	47 8d 8c 31 e6 8b a2 	lea    0x50a28be6(%r9,%r14,1),%r9d
   15048:	50 
   15049:	41 01 d3             	add    %edx,%r11d
   1504c:	89 c2                	mov    %eax,%edx
   1504e:	f7 d2                	not    %edx
   15050:	41 c1 c3 05          	rol    $0x5,%r11d
   15054:	09 f2                	or     %esi,%edx
   15056:	45 01 fb             	add    %r15d,%r11d
   15059:	44 31 d2             	xor    %r10d,%edx
   1505c:	44 01 ca             	add    %r9d,%edx
   1505f:	41 89 d9             	mov    %ebx,%r9d
   15062:	c1 c2 0d             	rol    $0xd,%edx
   15065:	01 ca                	add    %ecx,%edx
   15067:	c1 c6 0a             	rol    $0xa,%esi
   1506a:	41 31 e9             	xor    %ebp,%r9d
   1506d:	44 03 7c 24 08       	add    0x8(%rsp),%r15d
   15072:	45 31 d9             	xor    %r11d,%r9d
   15075:	42 8d 8c 29 e6 8b a2 	lea    0x50a28be6(%rcx,%r13,1),%ecx
   1507c:	50 
   1507d:	c1 c3 0a             	rol    $0xa,%ebx
   15080:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
   15085:	45 01 f9             	add    %r15d,%r9d
   15088:	41 89 f7             	mov    %esi,%r15d
   1508b:	41 f7 d7             	not    %r15d
   1508e:	41 c1 c1 08          	rol    $0x8,%r9d
   15092:	45 09 d7             	or     %r10d,%r15d
   15095:	45 01 c1             	add    %r8d,%r9d
   15098:	41 c1 c2 0a          	rol    $0xa,%r10d
   1509c:	45 01 e0             	add    %r12d,%r8d
   1509f:	41 31 d7             	xor    %edx,%r15d
   150a2:	41 01 cf             	add    %ecx,%r15d
   150a5:	44 89 d9             	mov    %r11d,%ecx
   150a8:	41 c1 c3 0a          	rol    $0xa,%r11d
   150ac:	31 d9                	xor    %ebx,%ecx
   150ae:	41 c1 c7 0f          	rol    $0xf,%r15d
   150b2:	44 31 c9             	xor    %r9d,%ecx
   150b5:	41 01 c7             	add    %eax,%r15d
   150b8:	42 8d 84 28 e6 8b a2 	lea    0x50a28be6(%rax,%r13,1),%eax
   150bf:	50 
   150c0:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
   150c5:	44 01 c1             	add    %r8d,%ecx
   150c8:	45 89 d0             	mov    %r10d,%r8d
   150cb:	41 f7 d0             	not    %r8d
   150ce:	c1 c1 07             	rol    $0x7,%ecx
   150d1:	41 09 d0             	or     %edx,%r8d
   150d4:	01 e9                	add    %ebp,%ecx
   150d6:	c1 c2 0a             	rol    $0xa,%edx
   150d9:	03 6c 24 30          	add    0x30(%rsp),%ebp
   150dd:	45 31 f8             	xor    %r15d,%r8d
   150e0:	41 01 c0             	add    %eax,%r8d
   150e3:	44 89 c8             	mov    %r9d,%eax
   150e6:	44 31 d8             	xor    %r11d,%eax
   150e9:	41 c1 c0 0f          	rol    $0xf,%r8d
   150ed:	31 c8                	xor    %ecx,%eax
   150ef:	41 01 f0             	add    %esi,%r8d
   150f2:	42 8d b4 2e e6 8b a2 	lea    0x50a28be6(%rsi,%r13,1),%esi
   150f9:	50 
   150fa:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   150ff:	01 e8                	add    %ebp,%eax
   15101:	89 d5                	mov    %edx,%ebp
   15103:	c1 c0 09             	rol    $0x9,%eax
   15106:	f7 d5                	not    %ebp
   15108:	01 d8                	add    %ebx,%eax
   1510a:	44 09 fd             	or     %r15d,%ebp
   1510d:	41 c1 c1 0a          	rol    $0xa,%r9d
   15111:	03 5c 24 0c          	add    0xc(%rsp),%ebx
   15115:	44 31 c5             	xor    %r8d,%ebp
   15118:	41 c1 c7 0a          	rol    $0xa,%r15d
   1511c:	01 f5                	add    %esi,%ebp
   1511e:	89 ce                	mov    %ecx,%esi
   15120:	c1 c1 0a             	rol    $0xa,%ecx
   15123:	44 31 ce             	xor    %r9d,%esi
   15126:	c1 c5 05             	rol    $0x5,%ebp
   15129:	31 c6                	xor    %eax,%esi
   1512b:	44 01 d5             	add    %r10d,%ebp
   1512e:	47 8d 94 2a e6 8b a2 	lea    0x50a28be6(%r10,%r13,1),%r10d
   15135:	50 
   15136:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   1513b:	01 de                	add    %ebx,%esi
   1513d:	44 89 fb             	mov    %r15d,%ebx
   15140:	f7 d3                	not    %ebx
   15142:	c1 c6 0b             	rol    $0xb,%esi
   15145:	44 09 c3             	or     %r8d,%ebx
   15148:	44 01 de             	add    %r11d,%esi
   1514b:	41 c1 c0 0a          	rol    $0xa,%r8d
   1514f:	45 01 f3             	add    %r14d,%r11d
   15152:	31 eb                	xor    %ebp,%ebx
   15154:	44 01 d3             	add    %r10d,%ebx
   15157:	41 89 c2             	mov    %eax,%r10d
   1515a:	c1 c0 0a             	rol    $0xa,%eax
   1515d:	41 31 ca             	xor    %ecx,%r10d
   15160:	c1 c3 07             	rol    $0x7,%ebx
   15163:	41 31 f2             	xor    %esi,%r10d
   15166:	01 d3                	add    %edx,%ebx
   15168:	42 8d 94 22 e6 8b a2 	lea    0x50a28be6(%rdx,%r12,1),%edx
   1516f:	50 
   15170:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   15175:	45 01 da             	add    %r11d,%r10d
   15178:	45 89 c3             	mov    %r8d,%r11d
   1517b:	41 f7 d3             	not    %r11d
   1517e:	41 c1 c2 0d          	rol    $0xd,%r10d
   15182:	41 09 eb             	or     %ebp,%r11d
   15185:	45 01 ca             	add    %r9d,%r10d
   15188:	41 31 db             	xor    %ebx,%r11d
   1518b:	41 01 d3             	add    %edx,%r11d
   1518e:	89 f2                	mov    %esi,%edx
   15190:	41 c1 c3 07          	rol    $0x7,%r11d
   15194:	45 01 fb             	add    %r15d,%r11d
   15197:	31 c2                	xor    %eax,%edx
   15199:	c1 c5 0a             	rol    $0xa,%ebp
   1519c:	44 03 4c 24 10       	add    0x10(%rsp),%r9d
   151a1:	44 31 d2             	xor    %r10d,%edx
   151a4:	47 8d bc 2f e6 8b a2 	lea    0x50a28be6(%r15,%r13,1),%r15d
   151ab:	50 
   151ac:	c1 c6 0a             	rol    $0xa,%esi
   151af:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   151b4:	44 01 ca             	add    %r9d,%edx
   151b7:	41 89 e9             	mov    %ebp,%r9d
   151ba:	41 f7 d1             	not    %r9d
   151bd:	c1 c2 0e             	rol    $0xe,%edx
   151c0:	41 09 d9             	or     %ebx,%r9d
   151c3:	01 ca                	add    %ecx,%edx
   151c5:	c1 c3 0a             	rol    $0xa,%ebx
   151c8:	03 4c 24 14          	add    0x14(%rsp),%ecx
   151cc:	45 31 d9             	xor    %r11d,%r9d
   151cf:	45 01 f9             	add    %r15d,%r9d
   151d2:	45 89 d7             	mov    %r10d,%r15d
   151d5:	41 c1 c2 0a          	rol    $0xa,%r10d
   151d9:	41 31 f7             	xor    %esi,%r15d
   151dc:	41 c1 c1 08          	rol    $0x8,%r9d
   151e0:	41 31 d7             	xor    %edx,%r15d
   151e3:	45 01 c1             	add    %r8d,%r9d
   151e6:	47 8d 84 20 e6 8b a2 	lea    0x50a28be6(%r8,%r12,1),%r8d
   151ed:	50 
   151ee:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   151f3:	41 01 cf             	add    %ecx,%r15d
   151f6:	89 d9                	mov    %ebx,%ecx
   151f8:	f7 d1                	not    %ecx
   151fa:	41 c1 c7 0f          	rol    $0xf,%r15d
   151fe:	44 09 d9             	or     %r11d,%ecx
   15201:	41 01 c7             	add    %eax,%r15d
   15204:	41 c1 c3 0a          	rol    $0xa,%r11d
   15208:	03 44 24 18          	add    0x18(%rsp),%eax
   1520c:	44 31 c9             	xor    %r9d,%ecx
   1520f:	44 01 c1             	add    %r8d,%ecx
   15212:	41 89 d0             	mov    %edx,%r8d
   15215:	45 31 d0             	xor    %r10d,%r8d
   15218:	c1 c1 0b             	rol    $0xb,%ecx
   1521b:	45 31 f8             	xor    %r15d,%r8d
   1521e:	01 e9                	add    %ebp,%ecx
   15220:	42 8d ac 2d e6 8b a2 	lea    0x50a28be6(%rbp,%r13,1),%ebp
   15227:	50 
   15228:	41 01 c0             	add    %eax,%r8d
   1522b:	44 89 d8             	mov    %r11d,%eax
   1522e:	f7 d0                	not    %eax
   15230:	41 c1 c0 06          	rol    $0x6,%r8d
   15234:	44 09 c8             	or     %r9d,%eax
   15237:	c1 c2 0a             	rol    $0xa,%edx
   1523a:	41 01 f0             	add    %esi,%r8d
   1523d:	03 74 24 1c          	add    0x1c(%rsp),%esi
   15241:	31 c8                	xor    %ecx,%eax
   15243:	41 c1 c1 0a          	rol    $0xa,%r9d
   15247:	01 e8                	add    %ebp,%eax
   15249:	44 89 fd             	mov    %r15d,%ebp
   1524c:	41 c1 c7 0a          	rol    $0xa,%r15d
   15250:	31 d5                	xor    %edx,%ebp
   15252:	c1 c0 0e             	rol    $0xe,%eax
   15255:	44 31 c5             	xor    %r8d,%ebp
   15258:	01 d8                	add    %ebx,%eax
   1525a:	42 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%rbx,%r12,1),%ebx
   15261:	50 
   15262:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   15267:	01 f5                	add    %esi,%ebp
   15269:	44 89 ce             	mov    %r9d,%esi
   1526c:	f7 d6                	not    %esi
   1526e:	c1 c5 07             	rol    $0x7,%ebp
   15271:	09 ce                	or     %ecx,%esi
   15273:	44 01 d5             	add    %r10d,%ebp
   15276:	c1 c1 0a             	rol    $0xa,%ecx
   15279:	44 03 54 24 28       	add    0x28(%rsp),%r10d
   1527e:	31 c6                	xor    %eax,%esi
   15280:	01 de                	add    %ebx,%esi
   15282:	44 89 c3             	mov    %r8d,%ebx
   15285:	41 c1 c0 0a          	rol    $0xa,%r8d
   15289:	44 31 fb             	xor    %r15d,%ebx
   1528c:	c1 c6 0e             	rol    $0xe,%esi
   1528f:	31 eb                	xor    %ebp,%ebx
   15291:	44 01 de             	add    %r11d,%esi
   15294:	47 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%r11,%r12,1),%r11d
   1529b:	50 
   1529c:	44 01 d3             	add    %r10d,%ebx
   1529f:	41 89 ca             	mov    %ecx,%r10d
   152a2:	41 f7 d2             	not    %r10d
   152a5:	c1 c3 09             	rol    $0x9,%ebx
   152a8:	41 09 c2             	or     %eax,%r10d
   152ab:	01 d3                	add    %edx,%ebx
   152ad:	41 31 f2             	xor    %esi,%r10d
   152b0:	45 01 da             	add    %r11d,%r10d
   152b3:	41 89 eb             	mov    %ebp,%r11d
   152b6:	41 c1 c2 0c          	rol    $0xc,%r10d
   152ba:	45 31 c3             	xor    %r8d,%r11d
   152bd:	03 54 24 20          	add    0x20(%rsp),%edx
   152c1:	c1 c0 0a             	rol    $0xa,%eax
   152c4:	41 31 db             	xor    %ebx,%r11d
   152c7:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
   152cc:	45 01 ca             	add    %r9d,%r10d
   152cf:	c1 c5 0a             	rol    $0xa,%ebp
   152d2:	41 01 d3             	add    %edx,%r11d
   152d5:	89 c2                	mov    %eax,%edx
   152d7:	f7 d2                	not    %edx
   152d9:	47 8d 8c 21 e6 8b a2 	lea    0x50a28be6(%r9,%r12,1),%r9d
   152e0:	50 
   152e1:	41 c1 c3 08          	rol    $0x8,%r11d
   152e5:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   152ea:	09 f2                	or     %esi,%edx
   152ec:	45 01 fb             	add    %r15d,%r11d
   152ef:	c1 c6 0a             	rol    $0xa,%esi
   152f2:	44 31 d2             	xor    %r10d,%edx
   152f5:	47 8d bc 27 99 79 82 	lea    0x5a827999(%r15,%r12,1),%r15d
   152fc:	5a 
   152fd:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   15302:	44 01 ca             	add    %r9d,%edx
   15305:	41 89 d9             	mov    %ebx,%r9d
   15308:	c1 c3 0a             	rol    $0xa,%ebx
   1530b:	41 31 e9             	xor    %ebp,%r9d
   1530e:	c1 c2 06             	rol    $0x6,%edx
   15311:	45 21 d9             	and    %r11d,%r9d
   15314:	01 ca                	add    %ecx,%edx
   15316:	42 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%rcx,%r12,1),%ecx
   1531d:	5c 
   1531e:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   15323:	41 31 e9             	xor    %ebp,%r9d
   15326:	45 01 f9             	add    %r15d,%r9d
   15329:	45 89 d7             	mov    %r10d,%r15d
   1532c:	41 31 d7             	xor    %edx,%r15d
   1532f:	41 c1 c1 07          	rol    $0x7,%r9d
   15333:	41 21 f7             	and    %esi,%r15d
   15336:	45 01 c1             	add    %r8d,%r9d
   15339:	47 8d 84 20 99 79 82 	lea    0x5a827999(%r8,%r12,1),%r8d
   15340:	5a 
   15341:	44 8b 64 24 14       	mov    0x14(%rsp),%r12d
   15346:	45 31 d7             	xor    %r10d,%r15d
   15349:	41 c1 c2 0a          	rol    $0xa,%r10d
   1534d:	41 01 cf             	add    %ecx,%r15d
   15350:	44 89 d9             	mov    %r11d,%ecx
   15353:	31 d9                	xor    %ebx,%ecx
   15355:	41 c1 c7 09          	rol    $0x9,%r15d
   15359:	44 21 c9             	and    %r9d,%ecx
   1535c:	41 01 c7             	add    %eax,%r15d
   1535f:	42 8d 84 20 24 d1 4d 	lea    0x5c4dd124(%rax,%r12,1),%eax
   15366:	5c 
   15367:	44 8b 64 24 1c       	mov    0x1c(%rsp),%r12d
   1536c:	31 d9                	xor    %ebx,%ecx
   1536e:	41 c1 c3 0a          	rol    $0xa,%r11d
   15372:	44 01 c1             	add    %r8d,%ecx
   15375:	41 89 d0             	mov    %edx,%r8d
   15378:	45 31 f8             	xor    %r15d,%r8d
   1537b:	c1 c1 06             	rol    $0x6,%ecx
   1537e:	45 21 d0             	and    %r10d,%r8d
   15381:	01 e9                	add    %ebp,%ecx
   15383:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
   1538a:	5a 
   1538b:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   15390:	41 31 d0             	xor    %edx,%r8d
   15393:	c1 c2 0a             	rol    $0xa,%edx
   15396:	41 01 c0             	add    %eax,%r8d
   15399:	44 89 c8             	mov    %r9d,%eax
   1539c:	41 c1 c1 0a          	rol    $0xa,%r9d
   153a0:	44 31 d8             	xor    %r11d,%eax
   153a3:	41 c1 c0 0d          	rol    $0xd,%r8d
   153a7:	21 c8                	and    %ecx,%eax
   153a9:	41 01 f0             	add    %esi,%r8d
   153ac:	42 8d b4 26 24 d1 4d 	lea    0x5c4dd124(%rsi,%r12,1),%esi
   153b3:	5c 
   153b4:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   153b9:	44 31 d8             	xor    %r11d,%eax
   153bc:	01 c5                	add    %eax,%ebp
   153be:	44 89 f8             	mov    %r15d,%eax
   153c1:	44 31 c0             	xor    %r8d,%eax
   153c4:	c1 c5 08             	rol    $0x8,%ebp
   153c7:	21 d0                	and    %edx,%eax
   153c9:	01 dd                	add    %ebx,%ebp
   153cb:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
   153d2:	5a 
   153d3:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
   153d8:	44 31 f8             	xor    %r15d,%eax
   153db:	41 c1 c7 0a          	rol    $0xa,%r15d
   153df:	01 f0                	add    %esi,%eax
   153e1:	89 ce                	mov    %ecx,%esi
   153e3:	44 31 ce             	xor    %r9d,%esi
   153e6:	c1 c0 0f             	rol    $0xf,%eax
   153e9:	21 ee                	and    %ebp,%esi
   153eb:	44 01 d0             	add    %r10d,%eax
   153ee:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
   153f5:	5c 
   153f6:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
   153fb:	44 31 ce             	xor    %r9d,%esi
   153fe:	01 de                	add    %ebx,%esi
   15400:	44 89 c3             	mov    %r8d,%ebx
   15403:	c1 c6 0d             	rol    $0xd,%esi
   15406:	44 01 de             	add    %r11d,%esi
   15409:	c1 c1 0a             	rol    $0xa,%ecx
   1540c:	31 c3                	xor    %eax,%ebx
   1540e:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
   15415:	5a 
   15416:	44 21 fb             	and    %r15d,%ebx
   15419:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   1541e:	44 31 c3             	xor    %r8d,%ebx
   15421:	41 c1 c0 0a          	rol    $0xa,%r8d
   15425:	44 01 d3             	add    %r10d,%ebx
   15428:	41 89 ea             	mov    %ebp,%r10d
   1542b:	c1 c5 0a             	rol    $0xa,%ebp
   1542e:	41 31 ca             	xor    %ecx,%r10d
   15431:	c1 c3 07             	rol    $0x7,%ebx
   15434:	41 21 f2             	and    %esi,%r10d
   15437:	01 d3                	add    %edx,%ebx
   15439:	42 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%rdx,%r13,1),%edx
   15440:	5c 
   15441:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   15446:	41 31 ca             	xor    %ecx,%r10d
   15449:	45 01 d3             	add    %r10d,%r11d
   1544c:	41 89 c2             	mov    %eax,%r10d
   1544f:	41 31 da             	xor    %ebx,%r10d
   15452:	41 c1 c3 0b          	rol    $0xb,%r11d
   15456:	45 21 c2             	and    %r8d,%r10d
   15459:	45 01 cb             	add    %r9d,%r11d
   1545c:	47 8d 8c 21 99 79 82 	lea    0x5a827999(%r9,%r12,1),%r9d
   15463:	5a 
   15464:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   15469:	41 31 c2             	xor    %eax,%r10d
   1546c:	c1 c0 0a             	rol    $0xa,%eax
   1546f:	41 01 d2             	add    %edx,%r10d
   15472:	89 f2                	mov    %esi,%edx
   15474:	c1 c6 0a             	rol    $0xa,%esi
   15477:	31 ea                	xor    %ebp,%edx
   15479:	41 c1 c2 0c          	rol    $0xc,%r10d
   1547d:	44 21 da             	and    %r11d,%edx
   15480:	45 01 fa             	add    %r15d,%r10d
   15483:	47 8d bc 2f 24 d1 4d 	lea    0x5c4dd124(%r15,%r13,1),%r15d
   1548a:	5c 
   1548b:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   15490:	31 ea                	xor    %ebp,%edx
   15492:	44 01 ca             	add    %r9d,%edx
   15495:	41 89 d9             	mov    %ebx,%r9d
   15498:	45 31 d1             	xor    %r10d,%r9d
   1549b:	c1 c2 09             	rol    $0x9,%edx
   1549e:	41 21 c1             	and    %eax,%r9d
   154a1:	01 ca                	add    %ecx,%edx
   154a3:	42 8d 8c 29 99 79 82 	lea    0x5a827999(%rcx,%r13,1),%ecx
   154aa:	5a 
   154ab:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   154b0:	41 31 d9             	xor    %ebx,%r9d
   154b3:	45 01 f9             	add    %r15d,%r9d
   154b6:	45 89 df             	mov    %r11d,%r15d
   154b9:	c1 c3 0a             	rol    $0xa,%ebx
   154bc:	41 c1 c1 08          	rol    $0x8,%r9d
   154c0:	41 31 f7             	xor    %esi,%r15d
   154c3:	41 c1 c3 0a          	rol    $0xa,%r11d
   154c7:	41 21 d7             	and    %edx,%r15d
   154ca:	45 01 c1             	add    %r8d,%r9d
   154cd:	47 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%r8,%r13,1),%r8d
   154d4:	5c 
   154d5:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
   154da:	41 31 f7             	xor    %esi,%r15d
   154dd:	41 01 cf             	add    %ecx,%r15d
   154e0:	44 89 d1             	mov    %r10d,%ecx
   154e3:	44 31 c9             	xor    %r9d,%ecx
   154e6:	41 c1 c7 07          	rol    $0x7,%r15d
   154ea:	21 d9                	and    %ebx,%ecx
   154ec:	41 01 ef             	add    %ebp,%r15d
   154ef:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
   154f6:	5a 
   154f7:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
   154fc:	44 31 d1             	xor    %r10d,%ecx
   154ff:	41 c1 c2 0a          	rol    $0xa,%r10d
   15503:	44 01 c1             	add    %r8d,%ecx
   15506:	41 89 d0             	mov    %edx,%r8d
   15509:	c1 c2 0a             	rol    $0xa,%edx
   1550c:	45 31 d8             	xor    %r11d,%r8d
   1550f:	c1 c1 09             	rol    $0x9,%ecx
   15512:	45 21 f8             	and    %r15d,%r8d
   15515:	01 c1                	add    %eax,%ecx
   15517:	42 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%rax,%r13,1),%eax
   1551e:	5c 
   1551f:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   15524:	45 31 d8             	xor    %r11d,%r8d
   15527:	41 01 e8             	add    %ebp,%r8d
   1552a:	44 89 cd             	mov    %r9d,%ebp
   1552d:	31 cd                	xor    %ecx,%ebp
   1552f:	41 c1 c0 0f          	rol    $0xf,%r8d
   15533:	44 21 d5             	and    %r10d,%ebp
   15536:	41 01 f0             	add    %esi,%r8d
   15539:	42 8d b4 2e 99 79 82 	lea    0x5a827999(%rsi,%r13,1),%esi
   15540:	5a 
   15541:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   15546:	44 31 cd             	xor    %r9d,%ebp
   15549:	41 c1 c1 0a          	rol    $0xa,%r9d
   1554d:	01 c5                	add    %eax,%ebp
   1554f:	44 89 f8             	mov    %r15d,%eax
   15552:	c1 c5 0b             	rol    $0xb,%ebp
   15555:	01 dd                	add    %ebx,%ebp
   15557:	31 d0                	xor    %edx,%eax
   15559:	42 8d 9c 23 24 d1 4d 	lea    0x5c4dd124(%rbx,%r12,1),%ebx
   15560:	5c 
   15561:	41 c1 c7 0a          	rol    $0xa,%r15d
   15565:	44 21 c0             	and    %r8d,%eax
   15568:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   1556d:	31 d0                	xor    %edx,%eax
   1556f:	01 f0                	add    %esi,%eax
   15571:	89 ce                	mov    %ecx,%esi
   15573:	31 ee                	xor    %ebp,%esi
   15575:	c1 c0 07             	rol    $0x7,%eax
   15578:	44 21 ce             	and    %r9d,%esi
   1557b:	44 01 d8             	add    %r11d,%eax
   1557e:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
   15585:	5a 
   15586:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   1558b:	31 ce                	xor    %ecx,%esi
   1558d:	c1 c1 0a             	rol    $0xa,%ecx
   15590:	01 de                	add    %ebx,%esi
   15592:	44 89 c3             	mov    %r8d,%ebx
   15595:	41 c1 c0 0a          	rol    $0xa,%r8d
   15599:	44 31 fb             	xor    %r15d,%ebx
   1559c:	c1 c6 07             	rol    $0x7,%esi
   1559f:	21 c3                	and    %eax,%ebx
   155a1:	44 01 d6             	add    %r10d,%esi
   155a4:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
   155ab:	5c 
   155ac:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   155b1:	44 31 fb             	xor    %r15d,%ebx
   155b4:	44 01 db             	add    %r11d,%ebx
   155b7:	41 89 eb             	mov    %ebp,%r11d
   155ba:	41 31 f3             	xor    %esi,%r11d
   155bd:	c1 c3 0c             	rol    $0xc,%ebx
   155c0:	41 21 cb             	and    %ecx,%r11d
   155c3:	01 d3                	add    %edx,%ebx
   155c5:	42 8d 94 32 99 79 82 	lea    0x5a827999(%rdx,%r14,1),%edx
   155cc:	5a 
   155cd:	41 31 eb             	xor    %ebp,%r11d
   155d0:	c1 c5 0a             	rol    $0xa,%ebp
   155d3:	45 01 d3             	add    %r10d,%r11d
   155d6:	41 89 c2             	mov    %eax,%r10d
   155d9:	45 31 c2             	xor    %r8d,%r10d
   155dc:	41 c1 c3 07          	rol    $0x7,%r11d
   155e0:	41 21 da             	and    %ebx,%r10d
   155e3:	45 01 cb             	add    %r9d,%r11d
   155e6:	47 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%r9,%r12,1),%r9d
   155ed:	5c 
   155ee:	45 31 c2             	xor    %r8d,%r10d
   155f1:	41 01 d2             	add    %edx,%r10d
   155f4:	89 f2                	mov    %esi,%edx
   155f6:	41 c1 c2 0f          	rol    $0xf,%r10d
   155fa:	44 31 da             	xor    %r11d,%edx
   155fd:	c1 c0 0a             	rol    $0xa,%eax
   15600:	21 ea                	and    %ebp,%edx
   15602:	45 01 fa             	add    %r15d,%r10d
   15605:	47 8d bc 2f 99 79 82 	lea    0x5a827999(%r15,%r13,1),%r15d
   1560c:	5a 
   1560d:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   15612:	31 f2                	xor    %esi,%edx
   15614:	c1 c6 0a             	rol    $0xa,%esi
   15617:	44 01 ca             	add    %r9d,%edx
   1561a:	41 89 d9             	mov    %ebx,%r9d
   1561d:	c1 c3 0a             	rol    $0xa,%ebx
   15620:	41 31 c1             	xor    %eax,%r9d
   15623:	c1 c2 0c             	rol    $0xc,%edx
   15626:	45 21 d1             	and    %r10d,%r9d
   15629:	01 ca                	add    %ecx,%edx
   1562b:	42 8d 8c 29 24 d1 4d 	lea    0x5c4dd124(%rcx,%r13,1),%ecx
   15632:	5c 
   15633:	44 8b 2c 24          	mov    (%rsp),%r13d
   15637:	41 31 c1             	xor    %eax,%r9d
   1563a:	45 01 f9             	add    %r15d,%r9d
   1563d:	45 89 df             	mov    %r11d,%r15d
   15640:	41 31 d7             	xor    %edx,%r15d
   15643:	41 c1 c1 09          	rol    $0x9,%r9d
   15647:	41 21 f7             	and    %esi,%r15d
   1564a:	45 01 c1             	add    %r8d,%r9d
   1564d:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
   15654:	5a 
   15655:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
   1565a:	45 31 df             	xor    %r11d,%r15d
   1565d:	41 c1 c3 0a          	rol    $0xa,%r11d
   15661:	41 01 cf             	add    %ecx,%r15d
   15664:	44 89 d1             	mov    %r10d,%ecx
   15667:	41 c1 c2 0a          	rol    $0xa,%r10d
   1566b:	31 d9                	xor    %ebx,%ecx
   1566d:	41 c1 c7 07          	rol    $0x7,%r15d
   15671:	44 21 c9             	and    %r9d,%ecx
   15674:	41 01 ef             	add    %ebp,%r15d
   15677:	42 8d ac 2d 24 d1 4d 	lea    0x5c4dd124(%rbp,%r13,1),%ebp
   1567e:	5c 
   1567f:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
   15684:	31 d9                	xor    %ebx,%ecx
   15686:	44 01 c1             	add    %r8d,%ecx
   15689:	41 89 d0             	mov    %edx,%r8d
   1568c:	c1 c1 0b             	rol    $0xb,%ecx
   1568f:	45 31 f8             	xor    %r15d,%r8d
   15692:	01 c1                	add    %eax,%ecx
   15694:	45 21 d8             	and    %r11d,%r8d
   15697:	42 8d 84 28 99 79 82 	lea    0x5a827999(%rax,%r13,1),%eax
   1569e:	5a 
   1569f:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
   156a4:	41 31 d0             	xor    %edx,%r8d
   156a7:	c1 c2 0a             	rol    $0xa,%edx
   156aa:	41 01 e8             	add    %ebp,%r8d
   156ad:	44 89 cd             	mov    %r9d,%ebp
   156b0:	41 c1 c1 0a          	rol    $0xa,%r9d
   156b4:	44 31 d5             	xor    %r10d,%ebp
   156b7:	41 c1 c0 06          	rol    $0x6,%r8d
   156bb:	21 cd                	and    %ecx,%ebp
   156bd:	41 01 f0             	add    %esi,%r8d
   156c0:	42 8d b4 36 24 d1 4d 	lea    0x5c4dd124(%rsi,%r14,1),%esi
   156c7:	5c 
   156c8:	44 31 d5             	xor    %r10d,%ebp
   156cb:	01 c5                	add    %eax,%ebp
   156cd:	44 89 f8             	mov    %r15d,%eax
   156d0:	44 31 c0             	xor    %r8d,%eax
   156d3:	c1 c5 07             	rol    $0x7,%ebp
   156d6:	21 d0                	and    %edx,%eax
   156d8:	01 dd                	add    %ebx,%ebp
   156da:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
   156e1:	5a 
   156e2:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   156e7:	44 31 f8             	xor    %r15d,%eax
   156ea:	41 c1 c7 0a          	rol    $0xa,%r15d
   156ee:	01 f0                	add    %esi,%eax
   156f0:	89 ce                	mov    %ecx,%esi
   156f2:	c1 c1 0a             	rol    $0xa,%ecx
   156f5:	44 31 ce             	xor    %r9d,%esi
   156f8:	c1 c0 0f             	rol    $0xf,%eax
   156fb:	21 ee                	and    %ebp,%esi
   156fd:	44 01 d8             	add    %r11d,%eax
   15700:	47 8d 9c 2b 24 d1 4d 	lea    0x5c4dd124(%r11,%r13,1),%r11d
   15707:	5c 
   15708:	44 31 ce             	xor    %r9d,%esi
   1570b:	01 de                	add    %ebx,%esi
   1570d:	44 89 c3             	mov    %r8d,%ebx
   15710:	31 c3                	xor    %eax,%ebx
   15712:	c1 c6 0d             	rol    $0xd,%esi
   15715:	44 21 fb             	and    %r15d,%ebx
   15718:	44 01 d6             	add    %r10d,%esi
   1571b:	47 8d 94 22 99 79 82 	lea    0x5a827999(%r10,%r12,1),%r10d
   15722:	5a 
   15723:	44 8b 24 24          	mov    (%rsp),%r12d
   15727:	44 31 c3             	xor    %r8d,%ebx
   1572a:	44 01 db             	add    %r11d,%ebx
   1572d:	41 89 eb             	mov    %ebp,%r11d
   15730:	c1 c3 0d             	rol    $0xd,%ebx
   15733:	01 d3                	add    %edx,%ebx
   15735:	41 31 cb             	xor    %ecx,%r11d
   15738:	42 8d 94 22 24 d1 4d 	lea    0x5c4dd124(%rdx,%r12,1),%edx
   1573f:	5c 
   15740:	c1 c5 0a             	rol    $0xa,%ebp
   15743:	41 21 f3             	and    %esi,%r11d
   15746:	41 c1 c0 0a          	rol    $0xa,%r8d
   1574a:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   1574f:	41 31 cb             	xor    %ecx,%r11d
   15752:	45 01 d3             	add    %r10d,%r11d
   15755:	41 89 c2             	mov    %eax,%r10d
   15758:	41 31 da             	xor    %ebx,%r10d
   1575b:	41 c1 c3 0c          	rol    $0xc,%r11d
   1575f:	45 21 c2             	and    %r8d,%r10d
   15762:	45 01 cb             	add    %r9d,%r11d
   15765:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
   1576c:	6e 
   1576d:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   15772:	41 31 c2             	xor    %eax,%r10d
   15775:	c1 c0 0a             	rol    $0xa,%eax
   15778:	41 01 d2             	add    %edx,%r10d
   1577b:	89 f2                	mov    %esi,%edx
   1577d:	c1 c6 0a             	rol    $0xa,%esi
   15780:	f7 d2                	not    %edx
   15782:	41 c1 c2 0b          	rol    $0xb,%r10d
   15786:	44 09 da             	or     %r11d,%edx
   15789:	45 01 fa             	add    %r15d,%r10d
   1578c:	47 8d bc 27 f3 3e 70 	lea    0x6d703ef3(%r15,%r12,1),%r15d
   15793:	6d 
   15794:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   15799:	31 ea                	xor    %ebp,%edx
   1579b:	44 89 74 24 3c       	mov    %r14d,0x3c(%rsp)
   157a0:	44 01 ca             	add    %r9d,%edx
   157a3:	41 89 d9             	mov    %ebx,%r9d
   157a6:	c1 c3 0a             	rol    $0xa,%ebx
   157a9:	41 f7 d1             	not    %r9d
   157ac:	c1 c2 0b             	rol    $0xb,%edx
   157af:	45 09 d1             	or     %r10d,%r9d
   157b2:	01 ca                	add    %ecx,%edx
   157b4:	42 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r12,1),%ecx
   157bb:	6e 
   157bc:	44 8b 64 24 08       	mov    0x8(%rsp),%r12d
   157c1:	41 31 c1             	xor    %eax,%r9d
   157c4:	45 01 f9             	add    %r15d,%r9d
   157c7:	45 89 df             	mov    %r11d,%r15d
   157ca:	41 f7 d7             	not    %r15d
   157cd:	41 c1 c1 09          	rol    $0x9,%r9d
   157d1:	41 09 d7             	or     %edx,%r15d
   157d4:	45 01 c1             	add    %r8d,%r9d
   157d7:	47 8d 84 20 f3 3e 70 	lea    0x6d703ef3(%r8,%r12,1),%r8d
   157de:	6d 
   157df:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
   157e4:	41 31 f7             	xor    %esi,%r15d
   157e7:	41 01 cf             	add    %ecx,%r15d
   157ea:	44 89 d1             	mov    %r10d,%ecx
   157ed:	41 c1 c7 0d          	rol    $0xd,%r15d
   157f1:	f7 d1                	not    %ecx
   157f3:	41 01 ef             	add    %ebp,%r15d
   157f6:	44 09 c9             	or     %r9d,%ecx
   157f9:	41 c1 c3 0a          	rol    $0xa,%r11d
   157fd:	42 8d ac 25 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r12,1),%ebp
   15804:	6e 
   15805:	31 d9                	xor    %ebx,%ecx
   15807:	41 c1 c2 0a          	rol    $0xa,%r10d
   1580b:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   15810:	44 01 c1             	add    %r8d,%ecx
   15813:	41 89 d0             	mov    %edx,%r8d
   15816:	c1 c2 0a             	rol    $0xa,%edx
   15819:	41 f7 d0             	not    %r8d
   1581c:	c1 c1 07             	rol    $0x7,%ecx
   1581f:	45 09 f8             	or     %r15d,%r8d
   15822:	01 c1                	add    %eax,%ecx
   15824:	42 8d 84 28 f3 3e 70 	lea    0x6d703ef3(%rax,%r13,1),%eax
   1582b:	6d 
   1582c:	45 31 d8             	xor    %r11d,%r8d
   1582f:	41 01 e8             	add    %ebp,%r8d
   15832:	44 89 cd             	mov    %r9d,%ebp
   15835:	41 c1 c1 0a          	rol    $0xa,%r9d
   15839:	f7 d5                	not    %ebp
   1583b:	41 c1 c0 06          	rol    $0x6,%r8d
   1583f:	09 cd                	or     %ecx,%ebp
   15841:	41 01 f0             	add    %esi,%r8d
   15844:	42 8d b4 26 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r12,1),%esi
   1584b:	6e 
   1584c:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   15851:	44 31 d5             	xor    %r10d,%ebp
   15854:	01 c5                	add    %eax,%ebp
   15856:	44 89 f8             	mov    %r15d,%eax
   15859:	f7 d0                	not    %eax
   1585b:	c1 c5 0f             	rol    $0xf,%ebp
   1585e:	44 09 c0             	or     %r8d,%eax
   15861:	01 dd                	add    %ebx,%ebp
   15863:	42 8d 9c 23 f3 3e 70 	lea    0x6d703ef3(%rbx,%r12,1),%ebx
   1586a:	6d 
   1586b:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   15870:	31 d0                	xor    %edx,%eax
   15872:	01 c6                	add    %eax,%esi
   15874:	44 89 f8             	mov    %r15d,%eax
   15877:	41 89 cf             	mov    %ecx,%r15d
   1587a:	c1 c1 0a             	rol    $0xa,%ecx
   1587d:	c1 c6 07             	rol    $0x7,%esi
   15880:	41 f7 d7             	not    %r15d
   15883:	c1 c0 0a             	rol    $0xa,%eax
   15886:	41 09 ef             	or     %ebp,%r15d
   15889:	44 01 de             	add    %r11d,%esi
   1588c:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
   15893:	6e 
   15894:	45 31 cf             	xor    %r9d,%r15d
   15897:	41 01 df             	add    %ebx,%r15d
   1589a:	44 89 c3             	mov    %r8d,%ebx
   1589d:	41 c1 c7 0b          	rol    $0xb,%r15d
   158a1:	f7 d3                	not    %ebx
   158a3:	45 01 d7             	add    %r10d,%r15d
   158a6:	09 f3                	or     %esi,%ebx
   158a8:	47 8d 94 22 f3 3e 70 	lea    0x6d703ef3(%r10,%r12,1),%r10d
   158af:	6d 
   158b0:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   158b5:	31 c3                	xor    %eax,%ebx
   158b7:	41 c1 c0 0a          	rol    $0xa,%r8d
   158bb:	44 01 db             	add    %r11d,%ebx
   158be:	41 89 eb             	mov    %ebp,%r11d
   158c1:	c1 c5 0a             	rol    $0xa,%ebp
   158c4:	41 f7 d3             	not    %r11d
   158c7:	c1 c3 0e             	rol    $0xe,%ebx
   158ca:	45 09 fb             	or     %r15d,%r11d
   158cd:	01 d3                	add    %edx,%ebx
   158cf:	42 8d 94 22 a1 eb d9 	lea    0x6ed9eba1(%rdx,%r12,1),%edx
   158d6:	6e 
   158d7:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
   158dc:	41 31 cb             	xor    %ecx,%r11d
   158df:	45 01 d3             	add    %r10d,%r11d
   158e2:	41 89 f2             	mov    %esi,%r10d
   158e5:	c1 c6 0a             	rol    $0xa,%esi
   158e8:	41 f7 d2             	not    %r10d
   158eb:	41 c1 c3 08          	rol    $0x8,%r11d
   158ef:	41 09 da             	or     %ebx,%r10d
   158f2:	45 01 cb             	add    %r9d,%r11d
   158f5:	47 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%r9,%r12,1),%r9d
   158fc:	6d 
   158fd:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   15902:	45 31 c2             	xor    %r8d,%r10d
   15905:	41 01 d2             	add    %edx,%r10d
   15908:	44 89 fa             	mov    %r15d,%edx
   1590b:	41 c1 c7 0a          	rol    $0xa,%r15d
   1590f:	f7 d2                	not    %edx
   15911:	41 c1 c2 09          	rol    $0x9,%r10d
   15915:	44 09 da             	or     %r11d,%edx
   15918:	41 01 c2             	add    %eax,%r10d
   1591b:	42 8d 84 20 a1 eb d9 	lea    0x6ed9eba1(%rax,%r12,1),%eax
   15922:	6e 
   15923:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   15928:	31 ea                	xor    %ebp,%edx
   1592a:	44 01 ca             	add    %r9d,%edx
   1592d:	41 89 d9             	mov    %ebx,%r9d
   15930:	c1 c3 0a             	rol    $0xa,%ebx
   15933:	41 f7 d1             	not    %r9d
   15936:	c1 c2 06             	rol    $0x6,%edx
   15939:	45 09 d1             	or     %r10d,%r9d
   1593c:	01 ca                	add    %ecx,%edx
   1593e:	42 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%rcx,%r12,1),%ecx
   15945:	6d 
   15946:	41 31 f1             	xor    %esi,%r9d
   15949:	41 01 c1             	add    %eax,%r9d
   1594c:	44 89 d8             	mov    %r11d,%eax
   1594f:	f7 d0                	not    %eax
   15951:	41 c1 c1 0d          	rol    $0xd,%r9d
   15955:	09 d0                	or     %edx,%eax
   15957:	45 01 c1             	add    %r8d,%r9d
   1595a:	47 8d 84 28 a1 eb d9 	lea    0x6ed9eba1(%r8,%r13,1),%r8d
   15961:	6e 
   15962:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
   15967:	44 31 f8             	xor    %r15d,%eax
   1596a:	01 c8                	add    %ecx,%eax
   1596c:	44 89 d1             	mov    %r10d,%ecx
   1596f:	41 c1 c3 0a          	rol    $0xa,%r11d
   15973:	c1 c0 06             	rol    $0x6,%eax
   15976:	f7 d1                	not    %ecx
   15978:	41 c1 c2 0a          	rol    $0xa,%r10d
   1597c:	44 09 c9             	or     %r9d,%ecx
   1597f:	01 e8                	add    %ebp,%eax
   15981:	42 8d ac 35 f3 3e 70 	lea    0x6d703ef3(%rbp,%r14,1),%ebp
   15988:	6d 
   15989:	44 8b 34 24          	mov    (%rsp),%r14d
   1598d:	31 d9                	xor    %ebx,%ecx
   1598f:	44 01 c1             	add    %r8d,%ecx
   15992:	41 89 d0             	mov    %edx,%r8d
   15995:	c1 c2 0a             	rol    $0xa,%edx
   15998:	41 f7 d0             	not    %r8d
   1599b:	c1 c1 0f             	rol    $0xf,%ecx
   1599e:	41 09 c0             	or     %eax,%r8d
   159a1:	01 f1                	add    %esi,%ecx
   159a3:	42 8d b4 36 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r14,1),%esi
   159aa:	6e 
   159ab:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   159b0:	45 31 d8             	xor    %r11d,%r8d
   159b3:	41 01 e8             	add    %ebp,%r8d
   159b6:	44 89 cd             	mov    %r9d,%ebp
   159b9:	41 c1 c1 0a          	rol    $0xa,%r9d
   159bd:	f7 d5                	not    %ebp
   159bf:	41 c1 c0 0e          	rol    $0xe,%r8d
   159c3:	09 cd                	or     %ecx,%ebp
   159c5:	45 01 f8             	add    %r15d,%r8d
   159c8:	47 8d bc 37 f3 3e 70 	lea    0x6d703ef3(%r15,%r14,1),%r15d
   159cf:	6d 
   159d0:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   159d5:	44 31 d5             	xor    %r10d,%ebp
   159d8:	01 f5                	add    %esi,%ebp
   159da:	89 c6                	mov    %eax,%esi
   159dc:	c1 c0 0a             	rol    $0xa,%eax
   159df:	f7 d6                	not    %esi
   159e1:	c1 c5 0e             	rol    $0xe,%ebp
   159e4:	44 09 c6             	or     %r8d,%esi
   159e7:	01 dd                	add    %ebx,%ebp
   159e9:	42 8d 9c 2b a1 eb d9 	lea    0x6ed9eba1(%rbx,%r13,1),%ebx
   159f0:	6e 
   159f1:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   159f6:	31 d6                	xor    %edx,%esi
   159f8:	44 01 fe             	add    %r15d,%esi
   159fb:	41 89 cf             	mov    %ecx,%r15d
   159fe:	41 f7 d7             	not    %r15d
   15a01:	c1 c6 0c             	rol    $0xc,%esi
   15a04:	41 09 ef             	or     %ebp,%r15d
   15a07:	44 01 de             	add    %r11d,%esi
   15a0a:	47 8d 9c 2b f3 3e 70 	lea    0x6d703ef3(%r11,%r13,1),%r11d
   15a11:	6d 
   15a12:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   15a17:	45 31 cf             	xor    %r9d,%r15d
   15a1a:	41 01 df             	add    %ebx,%r15d
   15a1d:	44 89 c3             	mov    %r8d,%ebx
   15a20:	41 c1 c7 08          	rol    $0x8,%r15d
   15a24:	f7 d3                	not    %ebx
   15a26:	45 01 d7             	add    %r10d,%r15d
   15a29:	09 f3                	or     %esi,%ebx
   15a2b:	c1 c1 0a             	rol    $0xa,%ecx
   15a2e:	47 8d 94 2a a1 eb d9 	lea    0x6ed9eba1(%r10,%r13,1),%r10d
   15a35:	6e 
   15a36:	31 c3                	xor    %eax,%ebx
   15a38:	41 c1 c0 0a          	rol    $0xa,%r8d
   15a3c:	44 01 db             	add    %r11d,%ebx
   15a3f:	41 89 eb             	mov    %ebp,%r11d
   15a42:	c1 c5 0a             	rol    $0xa,%ebp
   15a45:	41 f7 d3             	not    %r11d
   15a48:	c1 c3 0d             	rol    $0xd,%ebx
   15a4b:	45 09 fb             	or     %r15d,%r11d
   15a4e:	01 d3                	add    %edx,%ebx
   15a50:	42 8d 94 32 f3 3e 70 	lea    0x6d703ef3(%rdx,%r14,1),%edx
   15a57:	6d 
   15a58:	44 8b 34 24          	mov    (%rsp),%r14d
   15a5c:	41 31 cb             	xor    %ecx,%r11d
   15a5f:	45 01 d3             	add    %r10d,%r11d
   15a62:	41 89 f2             	mov    %esi,%r10d
   15a65:	c1 c6 0a             	rol    $0xa,%esi
   15a68:	41 f7 d2             	not    %r10d
   15a6b:	41 c1 c3 0d          	rol    $0xd,%r11d
   15a6f:	41 09 da             	or     %ebx,%r10d
   15a72:	45 01 cb             	add    %r9d,%r11d
   15a75:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
   15a7c:	6e 
   15a7d:	45 31 c2             	xor    %r8d,%r10d
   15a80:	41 01 d2             	add    %edx,%r10d
   15a83:	44 89 fa             	mov    %r15d,%edx
   15a86:	41 c1 c7 0a          	rol    $0xa,%r15d
   15a8a:	f7 d2                	not    %edx
   15a8c:	41 c1 c2 05          	rol    $0x5,%r10d
   15a90:	44 09 da             	or     %r11d,%edx
   15a93:	41 01 c2             	add    %eax,%r10d
   15a96:	42 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%rax,%r14,1),%eax
   15a9d:	6d 
   15a9e:	44 8b 74 24 1c       	mov    0x1c(%rsp),%r14d
   15aa3:	31 ea                	xor    %ebp,%edx
   15aa5:	44 01 ca             	add    %r9d,%edx
   15aa8:	41 89 d9             	mov    %ebx,%r9d
   15aab:	c1 c3 0a             	rol    $0xa,%ebx
   15aae:	41 f7 d1             	not    %r9d
   15ab1:	c1 c2 06             	rol    $0x6,%edx
   15ab4:	45 09 d1             	or     %r10d,%r9d
   15ab7:	01 ca                	add    %ecx,%edx
   15ab9:	42 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r14,1),%ecx
   15ac0:	6e 
   15ac1:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   15ac6:	41 31 f1             	xor    %esi,%r9d
   15ac9:	41 01 c1             	add    %eax,%r9d
   15acc:	44 89 d8             	mov    %r11d,%eax
   15acf:	41 c1 c1 0e          	rol    $0xe,%r9d
   15ad3:	f7 d0                	not    %eax
   15ad5:	45 01 c1             	add    %r8d,%r9d
   15ad8:	09 d0                	or     %edx,%eax
   15ada:	47 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%r8,%r14,1),%r8d
   15ae1:	6d 
   15ae2:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   15ae7:	44 31 f8             	xor    %r15d,%eax
   15aea:	41 c1 c3 0a          	rol    $0xa,%r11d
   15aee:	01 c8                	add    %ecx,%eax
   15af0:	44 89 d1             	mov    %r10d,%ecx
   15af3:	41 c1 c2 0a          	rol    $0xa,%r10d
   15af7:	f7 d1                	not    %ecx
   15af9:	c1 c0 05             	rol    $0x5,%eax
   15afc:	44 09 c9             	or     %r9d,%ecx
   15aff:	01 e8                	add    %ebp,%eax
   15b01:	42 8d ac 35 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r14,1),%ebp
   15b08:	6e 
   15b09:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
   15b0e:	31 d9                	xor    %ebx,%ecx
   15b10:	44 01 c1             	add    %r8d,%ecx
   15b13:	41 89 d0             	mov    %edx,%r8d
   15b16:	c1 c2 0a             	rol    $0xa,%edx
   15b19:	41 f7 d0             	not    %r8d
   15b1c:	c1 c1 0d             	rol    $0xd,%ecx
   15b1f:	41 09 c0             	or     %eax,%r8d
   15b22:	01 f1                	add    %esi,%ecx
   15b24:	42 8d b4 2e f3 3e 70 	lea    0x6d703ef3(%rsi,%r13,1),%esi
   15b2b:	6d 
   15b2c:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   15b31:	45 31 d8             	xor    %r11d,%r8d
   15b34:	41 01 e8             	add    %ebp,%r8d
   15b37:	44 89 cd             	mov    %r9d,%ebp
   15b3a:	41 c1 c1 0a          	rol    $0xa,%r9d
   15b3e:	f7 d5                	not    %ebp
   15b40:	41 c1 c0 0c          	rol    $0xc,%r8d
   15b44:	09 cd                	or     %ecx,%ebp
   15b46:	45 01 f8             	add    %r15d,%r8d
   15b49:	47 8d bc 2f a1 eb d9 	lea    0x6ed9eba1(%r15,%r13,1),%r15d
   15b50:	6e 
   15b51:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   15b56:	44 31 d5             	xor    %r10d,%ebp
   15b59:	01 f5                	add    %esi,%ebp
   15b5b:	89 c6                	mov    %eax,%esi
   15b5d:	c1 c0 0a             	rol    $0xa,%eax
   15b60:	f7 d6                	not    %esi
   15b62:	c1 c5 0d             	rol    $0xd,%ebp
   15b65:	44 09 c6             	or     %r8d,%esi
   15b68:	01 dd                	add    %ebx,%ebp
   15b6a:	42 8d 9c 33 f3 3e 70 	lea    0x6d703ef3(%rbx,%r14,1),%ebx
   15b71:	6d 
   15b72:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   15b77:	31 d6                	xor    %edx,%esi
   15b79:	44 01 fe             	add    %r15d,%esi
   15b7c:	41 89 cf             	mov    %ecx,%r15d
   15b7f:	41 f7 d7             	not    %r15d
   15b82:	c1 c6 07             	rol    $0x7,%esi
   15b85:	41 09 ef             	or     %ebp,%r15d
   15b88:	44 01 de             	add    %r11d,%esi
   15b8b:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
   15b92:	6e 
   15b93:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
   15b98:	45 31 cf             	xor    %r9d,%r15d
   15b9b:	41 01 df             	add    %ebx,%r15d
   15b9e:	44 89 c3             	mov    %r8d,%ebx
   15ba1:	c1 c1 0a             	rol    $0xa,%ecx
   15ba4:	41 c1 c7 07          	rol    $0x7,%r15d
   15ba8:	f7 d3                	not    %ebx
   15baa:	41 c1 c0 0a          	rol    $0xa,%r8d
   15bae:	09 f3                	or     %esi,%ebx
   15bb0:	45 01 d7             	add    %r10d,%r15d
   15bb3:	47 8d 94 2a f3 3e 70 	lea    0x6d703ef3(%r10,%r13,1),%r10d
   15bba:	6d 
   15bbb:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   15bc0:	31 c3                	xor    %eax,%ebx
   15bc2:	44 01 db             	add    %r11d,%ebx
   15bc5:	41 89 eb             	mov    %ebp,%r11d
   15bc8:	c1 c5 0a             	rol    $0xa,%ebp
   15bcb:	41 f7 d3             	not    %r11d
   15bce:	c1 c3 05             	rol    $0x5,%ebx
   15bd1:	45 09 fb             	or     %r15d,%r11d
   15bd4:	01 d3                	add    %edx,%ebx
   15bd6:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
   15bdd:	8f 
   15bde:	41 31 cb             	xor    %ecx,%r11d
   15be1:	45 01 d3             	add    %r10d,%r11d
   15be4:	41 89 f2             	mov    %esi,%r10d
   15be7:	41 31 da             	xor    %ebx,%r10d
   15bea:	41 c1 c3 05          	rol    $0x5,%r11d
   15bee:	45 21 c2             	and    %r8d,%r10d
   15bf1:	45 01 cb             	add    %r9d,%r11d
   15bf4:	47 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%r9,%r14,1),%r9d
   15bfb:	7a 
   15bfc:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   15c01:	41 31 f2             	xor    %esi,%r10d
   15c04:	c1 c6 0a             	rol    $0xa,%esi
   15c07:	41 01 d2             	add    %edx,%r10d
   15c0a:	44 89 fa             	mov    %r15d,%edx
   15c0d:	41 c1 c7 0a          	rol    $0xa,%r15d
   15c11:	31 ea                	xor    %ebp,%edx
   15c13:	41 c1 c2 0b          	rol    $0xb,%r10d
   15c17:	44 21 da             	and    %r11d,%edx
   15c1a:	41 01 c2             	add    %eax,%r10d
   15c1d:	42 8d 84 30 dc bc 1b 	lea    -0x70e44324(%rax,%r14,1),%eax
   15c24:	8f 
   15c25:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   15c2a:	31 ea                	xor    %ebp,%edx
   15c2c:	44 01 ca             	add    %r9d,%edx
   15c2f:	41 89 d9             	mov    %ebx,%r9d
   15c32:	45 31 d1             	xor    %r10d,%r9d
   15c35:	c1 c2 0f             	rol    $0xf,%edx
   15c38:	41 21 f1             	and    %esi,%r9d
   15c3b:	01 ca                	add    %ecx,%edx
   15c3d:	42 8d 8c 21 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r12,1),%ecx
   15c44:	7a 
   15c45:	41 31 d9             	xor    %ebx,%r9d
   15c48:	c1 c3 0a             	rol    $0xa,%ebx
   15c4b:	41 01 c1             	add    %eax,%r9d
   15c4e:	44 89 d8             	mov    %r11d,%eax
   15c51:	41 c1 c3 0a          	rol    $0xa,%r11d
   15c55:	44 31 f8             	xor    %r15d,%eax
   15c58:	41 c1 c1 0c          	rol    $0xc,%r9d
   15c5c:	21 d0                	and    %edx,%eax
   15c5e:	45 01 c1             	add    %r8d,%r9d
   15c61:	47 8d 84 30 dc bc 1b 	lea    -0x70e44324(%r8,%r14,1),%r8d
   15c68:	8f 
   15c69:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
   15c6e:	44 31 f8             	xor    %r15d,%eax
   15c71:	01 c8                	add    %ecx,%eax
   15c73:	44 89 d1             	mov    %r10d,%ecx
   15c76:	44 31 c9             	xor    %r9d,%ecx
   15c79:	c1 c0 05             	rol    $0x5,%eax
   15c7c:	21 d9                	and    %ebx,%ecx
   15c7e:	01 e8                	add    %ebp,%eax
   15c80:	42 8d ac 35 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r14,1),%ebp
   15c87:	7a 
   15c88:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   15c8d:	44 31 d1             	xor    %r10d,%ecx
   15c90:	41 c1 c2 0a          	rol    $0xa,%r10d
   15c94:	44 01 c1             	add    %r8d,%ecx
   15c97:	41 89 d0             	mov    %edx,%r8d
   15c9a:	c1 c2 0a             	rol    $0xa,%edx
   15c9d:	45 31 d8             	xor    %r11d,%r8d
   15ca0:	c1 c1 0e             	rol    $0xe,%ecx
   15ca3:	41 21 c0             	and    %eax,%r8d
   15ca6:	01 f1                	add    %esi,%ecx
   15ca8:	42 8d b4 36 dc bc 1b 	lea    -0x70e44324(%rsi,%r14,1),%esi
   15caf:	8f 
   15cb0:	45 31 d8             	xor    %r11d,%r8d
   15cb3:	41 01 e8             	add    %ebp,%r8d
   15cb6:	44 89 cd             	mov    %r9d,%ebp
   15cb9:	31 cd                	xor    %ecx,%ebp
   15cbb:	41 c1 c0 08          	rol    $0x8,%r8d
   15cbf:	44 21 d5             	and    %r10d,%ebp
   15cc2:	45 01 f8             	add    %r15d,%r8d
   15cc5:	47 8d bc 2f e9 76 6d 	lea    0x7a6d76e9(%r15,%r13,1),%r15d
   15ccc:	7a 
   15ccd:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   15cd2:	44 31 cd             	xor    %r9d,%ebp
   15cd5:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   15cda:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
   15cdf:	01 f5                	add    %esi,%ebp
   15ce1:	89 c6                	mov    %eax,%esi
   15ce3:	c1 c5 0f             	rol    $0xf,%ebp
   15ce6:	01 dd                	add    %ebx,%ebp
   15ce8:	41 c1 c1 0a          	rol    $0xa,%r9d
   15cec:	31 d6                	xor    %edx,%esi
   15cee:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
   15cf5:	8f 
   15cf6:	44 21 c6             	and    %r8d,%esi
   15cf9:	c1 c0 0a             	rol    $0xa,%eax
   15cfc:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   15d01:	31 d6                	xor    %edx,%esi
   15d03:	44 01 fe             	add    %r15d,%esi
   15d06:	41 89 cf             	mov    %ecx,%r15d
   15d09:	41 31 ef             	xor    %ebp,%r15d
   15d0c:	c1 c6 0b             	rol    $0xb,%esi
   15d0f:	45 21 cf             	and    %r9d,%r15d
   15d12:	44 01 de             	add    %r11d,%esi
   15d15:	47 8d 9c 23 e9 76 6d 	lea    0x7a6d76e9(%r11,%r12,1),%r11d
   15d1c:	7a 
   15d1d:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
   15d22:	41 31 cf             	xor    %ecx,%r15d
   15d25:	c1 c1 0a             	rol    $0xa,%ecx
   15d28:	41 01 df             	add    %ebx,%r15d
   15d2b:	44 89 c3             	mov    %r8d,%ebx
   15d2e:	41 c1 c0 0a          	rol    $0xa,%r8d
   15d32:	31 c3                	xor    %eax,%ebx
   15d34:	41 c1 c7 0e          	rol    $0xe,%r15d
   15d38:	21 f3                	and    %esi,%ebx
   15d3a:	45 01 d7             	add    %r10d,%r15d
   15d3d:	47 8d 94 32 dc bc 1b 	lea    -0x70e44324(%r10,%r14,1),%r10d
   15d44:	8f 
   15d45:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   15d4a:	31 c3                	xor    %eax,%ebx
   15d4c:	44 01 db             	add    %r11d,%ebx
   15d4f:	41 89 eb             	mov    %ebp,%r11d
   15d52:	45 31 fb             	xor    %r15d,%r11d
   15d55:	c1 c3 0e             	rol    $0xe,%ebx
   15d58:	41 21 cb             	and    %ecx,%r11d
   15d5b:	01 d3                	add    %edx,%ebx
   15d5d:	42 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%rdx,%r14,1),%edx
   15d64:	7a 
   15d65:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
   15d6a:	41 31 eb             	xor    %ebp,%r11d
   15d6d:	c1 c5 0a             	rol    $0xa,%ebp
   15d70:	45 01 d3             	add    %r10d,%r11d
   15d73:	41 89 f2             	mov    %esi,%r10d
   15d76:	45 31 c2             	xor    %r8d,%r10d
   15d79:	41 c1 c3 0f          	rol    $0xf,%r11d
   15d7d:	41 21 da             	and    %ebx,%r10d
   15d80:	45 01 cb             	add    %r9d,%r11d
   15d83:	47 8d 8c 31 dc bc 1b 	lea    -0x70e44324(%r9,%r14,1),%r9d
   15d8a:	8f 
   15d8b:	45 31 c2             	xor    %r8d,%r10d
   15d8e:	41 01 d2             	add    %edx,%r10d
   15d91:	44 89 fa             	mov    %r15d,%edx
   15d94:	c1 c6 0a             	rol    $0xa,%esi
   15d97:	44 31 da             	xor    %r11d,%edx
   15d9a:	41 c1 c2 0e          	rol    $0xe,%r10d
   15d9e:	21 ea                	and    %ebp,%edx
   15da0:	41 01 c2             	add    %eax,%r10d
   15da3:	42 8d 84 20 e9 76 6d 	lea    0x7a6d76e9(%rax,%r12,1),%eax
   15daa:	7a 
   15dab:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   15db0:	44 31 fa             	xor    %r15d,%edx
   15db3:	41 c1 c7 0a          	rol    $0xa,%r15d
   15db7:	44 01 ca             	add    %r9d,%edx
   15dba:	41 89 d9             	mov    %ebx,%r9d
   15dbd:	c1 c3 0a             	rol    $0xa,%ebx
   15dc0:	41 31 f1             	xor    %esi,%r9d
   15dc3:	c1 c2 09             	rol    $0x9,%edx
   15dc6:	45 21 d1             	and    %r10d,%r9d
   15dc9:	01 ca                	add    %ecx,%edx
   15dcb:	42 8d 8c 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%ecx
   15dd2:	8f 
   15dd3:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
   15dd8:	41 31 f1             	xor    %esi,%r9d
   15ddb:	41 01 c1             	add    %eax,%r9d
   15dde:	44 89 d8             	mov    %r11d,%eax
   15de1:	31 d0                	xor    %edx,%eax
   15de3:	41 c1 c1 06          	rol    $0x6,%r9d
   15de7:	44 21 f8             	and    %r15d,%eax
   15dea:	45 01 c1             	add    %r8d,%r9d
   15ded:	47 8d 84 28 e9 76 6d 	lea    0x7a6d76e9(%r8,%r13,1),%r8d
   15df4:	7a 
   15df5:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   15dfa:	44 31 d8             	xor    %r11d,%eax
   15dfd:	41 c1 c3 0a          	rol    $0xa,%r11d
   15e01:	01 c8                	add    %ecx,%eax
   15e03:	44 89 d1             	mov    %r10d,%ecx
   15e06:	41 c1 c2 0a          	rol    $0xa,%r10d
   15e0a:	31 d9                	xor    %ebx,%ecx
   15e0c:	c1 c0 08             	rol    $0x8,%eax
   15e0f:	44 21 c9             	and    %r9d,%ecx
   15e12:	01 e8                	add    %ebp,%eax
   15e14:	42 8d ac 2d dc bc 1b 	lea    -0x70e44324(%rbp,%r13,1),%ebp
   15e1b:	8f 
   15e1c:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   15e21:	31 d9                	xor    %ebx,%ecx
   15e23:	44 01 c1             	add    %r8d,%ecx
   15e26:	41 89 d0             	mov    %edx,%r8d
   15e29:	c1 c1 0e             	rol    $0xe,%ecx
   15e2c:	01 f1                	add    %esi,%ecx
   15e2e:	41 31 c0             	xor    %eax,%r8d
   15e31:	42 8d b4 2e e9 76 6d 	lea    0x7a6d76e9(%rsi,%r13,1),%esi
   15e38:	7a 
   15e39:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   15e3e:	45 21 d8             	and    %r11d,%r8d
   15e41:	41 31 d0             	xor    %edx,%r8d
   15e44:	c1 c2 0a             	rol    $0xa,%edx
   15e47:	41 01 e8             	add    %ebp,%r8d
   15e4a:	44 89 cd             	mov    %r9d,%ebp
   15e4d:	41 c1 c1 0a          	rol    $0xa,%r9d
   15e51:	44 31 d5             	xor    %r10d,%ebp
   15e54:	41 c1 c0 09          	rol    $0x9,%r8d
   15e58:	21 cd                	and    %ecx,%ebp
   15e5a:	45 01 f8             	add    %r15d,%r8d
   15e5d:	47 8d bc 27 dc bc 1b 	lea    -0x70e44324(%r15,%r12,1),%r15d
   15e64:	8f 
   15e65:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   15e6a:	44 31 d5             	xor    %r10d,%ebp
   15e6d:	01 f5                	add    %esi,%ebp
   15e6f:	89 c6                	mov    %eax,%esi
   15e71:	44 31 c6             	xor    %r8d,%esi
   15e74:	c1 c5 06             	rol    $0x6,%ebp
   15e77:	21 d6                	and    %edx,%esi
   15e79:	01 dd                	add    %ebx,%ebp
   15e7b:	42 8d 9c 33 e9 76 6d 	lea    0x7a6d76e9(%rbx,%r14,1),%ebx
   15e82:	7a 
   15e83:	44 8b 34 24          	mov    (%rsp),%r14d
   15e87:	31 c6                	xor    %eax,%esi
   15e89:	c1 c0 0a             	rol    $0xa,%eax
   15e8c:	44 01 fe             	add    %r15d,%esi
   15e8f:	41 89 cf             	mov    %ecx,%r15d
   15e92:	c1 c1 0a             	rol    $0xa,%ecx
   15e95:	45 31 cf             	xor    %r9d,%r15d
   15e98:	c1 c6 0e             	rol    $0xe,%esi
   15e9b:	41 21 ef             	and    %ebp,%r15d
   15e9e:	44 01 de             	add    %r11d,%esi
   15ea1:	47 8d 9c 23 dc bc 1b 	lea    -0x70e44324(%r11,%r12,1),%r11d
   15ea8:	8f 
   15ea9:	45 31 cf             	xor    %r9d,%r15d
   15eac:	41 01 df             	add    %ebx,%r15d
   15eaf:	44 89 c3             	mov    %r8d,%ebx
   15eb2:	31 f3                	xor    %esi,%ebx
   15eb4:	41 c1 c7 09          	rol    $0x9,%r15d
   15eb8:	21 c3                	and    %eax,%ebx
   15eba:	45 01 d7             	add    %r10d,%r15d
   15ebd:	47 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%r10,%r14,1),%r10d
   15ec4:	7a 
   15ec5:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   15eca:	44 31 c3             	xor    %r8d,%ebx
   15ecd:	44 01 db             	add    %r11d,%ebx
   15ed0:	41 89 eb             	mov    %ebp,%r11d
   15ed3:	c1 c3 05             	rol    $0x5,%ebx
   15ed6:	41 31 cb             	xor    %ecx,%r11d
   15ed9:	41 c1 c0 0a          	rol    $0xa,%r8d
   15edd:	45 21 fb             	and    %r15d,%r11d
   15ee0:	01 d3                	add    %edx,%ebx
   15ee2:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
   15ee9:	8f 
   15eea:	c1 c5 0a             	rol    $0xa,%ebp
   15eed:	41 31 cb             	xor    %ecx,%r11d
   15ef0:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   15ef5:	45 01 d3             	add    %r10d,%r11d
   15ef8:	41 89 f2             	mov    %esi,%r10d
   15efb:	41 31 da             	xor    %ebx,%r10d
   15efe:	41 c1 c3 0c          	rol    $0xc,%r11d
   15f02:	45 21 c2             	and    %r8d,%r10d
   15f05:	45 01 cb             	add    %r9d,%r11d
   15f08:	47 8d 8c 29 e9 76 6d 	lea    0x7a6d76e9(%r9,%r13,1),%r9d
   15f0f:	7a 
   15f10:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
   15f15:	41 31 f2             	xor    %esi,%r10d
   15f18:	c1 c6 0a             	rol    $0xa,%esi
   15f1b:	41 01 d2             	add    %edx,%r10d
   15f1e:	44 89 fa             	mov    %r15d,%edx
   15f21:	41 c1 c7 0a          	rol    $0xa,%r15d
   15f25:	31 ea                	xor    %ebp,%edx
   15f27:	41 c1 c2 06          	rol    $0x6,%r10d
   15f2b:	44 21 da             	and    %r11d,%edx
   15f2e:	41 01 c2             	add    %eax,%r10d
   15f31:	42 8d 84 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%eax
   15f38:	8f 
   15f39:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   15f3e:	31 ea                	xor    %ebp,%edx
   15f40:	44 01 ca             	add    %r9d,%edx
   15f43:	41 89 d9             	mov    %ebx,%r9d
   15f46:	45 31 d1             	xor    %r10d,%r9d
   15f49:	c1 c2 09             	rol    $0x9,%edx
   15f4c:	41 21 f1             	and    %esi,%r9d
   15f4f:	01 ca                	add    %ecx,%edx
   15f51:	42 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r14,1),%ecx
   15f58:	7a 
   15f59:	41 31 d9             	xor    %ebx,%r9d
   15f5c:	c1 c3 0a             	rol    $0xa,%ebx
   15f5f:	41 01 c1             	add    %eax,%r9d
   15f62:	44 89 d8             	mov    %r11d,%eax
   15f65:	41 c1 c1 08          	rol    $0x8,%r9d
   15f69:	44 31 f8             	xor    %r15d,%eax
   15f6c:	45 01 c1             	add    %r8d,%r9d
   15f6f:	21 d0                	and    %edx,%eax
   15f71:	47 8d 84 28 dc bc 1b 	lea    -0x70e44324(%r8,%r13,1),%r8d
   15f78:	8f 
   15f79:	41 c1 c3 0a          	rol    $0xa,%r11d
   15f7d:	44 31 f8             	xor    %r15d,%eax
   15f80:	44 8b 2c 24          	mov    (%rsp),%r13d
   15f84:	01 c8                	add    %ecx,%eax
   15f86:	44 89 d1             	mov    %r10d,%ecx
   15f89:	44 31 c9             	xor    %r9d,%ecx
   15f8c:	c1 c0 0c             	rol    $0xc,%eax
   15f8f:	21 d9                	and    %ebx,%ecx
   15f91:	01 e8                	add    %ebp,%eax
   15f93:	42 8d ac 25 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r12,1),%ebp
   15f9a:	7a 
   15f9b:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
   15fa0:	44 31 d1             	xor    %r10d,%ecx
   15fa3:	41 c1 c2 0a          	rol    $0xa,%r10d
   15fa7:	44 01 c1             	add    %r8d,%ecx
   15faa:	41 89 d0             	mov    %edx,%r8d
   15fad:	c1 c2 0a             	rol    $0xa,%edx
   15fb0:	45 31 d8             	xor    %r11d,%r8d
   15fb3:	c1 c1 06             	rol    $0x6,%ecx
   15fb6:	41 21 c0             	and    %eax,%r8d
   15fb9:	01 f1                	add    %esi,%ecx
   15fbb:	42 8d b4 26 dc bc 1b 	lea    -0x70e44324(%rsi,%r12,1),%esi
   15fc2:	8f 
   15fc3:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   15fc8:	45 31 d8             	xor    %r11d,%r8d
   15fcb:	41 01 e8             	add    %ebp,%r8d
   15fce:	44 89 cd             	mov    %r9d,%ebp
   15fd1:	31 cd                	xor    %ecx,%ebp
   15fd3:	41 c1 c0 05          	rol    $0x5,%r8d
   15fd7:	44 21 d5             	and    %r10d,%ebp
   15fda:	45 01 f8             	add    %r15d,%r8d
   15fdd:	47 8d bc 27 e9 76 6d 	lea    0x7a6d76e9(%r15,%r12,1),%r15d
   15fe4:	7a 
   15fe5:	44 31 cd             	xor    %r9d,%ebp
   15fe8:	41 c1 c1 0a          	rol    $0xa,%r9d
   15fec:	01 f5                	add    %esi,%ebp
   15fee:	89 c6                	mov    %eax,%esi
   15ff0:	31 d6                	xor    %edx,%esi
   15ff2:	c1 c5 05             	rol    $0x5,%ebp
   15ff5:	44 21 c6             	and    %r8d,%esi
   15ff8:	01 dd                	add    %ebx,%ebp
   15ffa:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
   16001:	8f 
   16002:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
   16007:	31 d6                	xor    %edx,%esi
   16009:	44 01 fe             	add    %r15d,%esi
   1600c:	41 89 cf             	mov    %ecx,%r15d
   1600f:	c1 c6 0f             	rol    $0xf,%esi
   16012:	44 01 de             	add    %r11d,%esi
   16015:	41 31 ef             	xor    %ebp,%r15d
   16018:	c1 c0 0a             	rol    $0xa,%eax
   1601b:	47 8d 9c 2b e9 76 6d 	lea    0x7a6d76e9(%r11,%r13,1),%r11d
   16022:	7a 
   16023:	45 21 cf             	and    %r9d,%r15d
   16026:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
   1602b:	41 31 cf             	xor    %ecx,%r15d
   1602e:	c1 c1 0a             	rol    $0xa,%ecx
   16031:	44 01 fb             	add    %r15d,%ebx
   16034:	41 89 cf             	mov    %ecx,%r15d
   16037:	44 89 c1             	mov    %r8d,%ecx
   1603a:	41 c1 c0 0a          	rol    $0xa,%r8d
   1603e:	31 c1                	xor    %eax,%ecx
   16040:	c1 c3 0c             	rol    $0xc,%ebx
   16043:	21 f1                	and    %esi,%ecx
   16045:	44 01 d3             	add    %r10d,%ebx
   16048:	47 8d 94 2a 4e fd 53 	lea    -0x56ac02b2(%r10,%r13,1),%r10d
   1604f:	a9 
   16050:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   16055:	31 c1                	xor    %eax,%ecx
   16057:	44 01 d9             	add    %r11d,%ecx
   1605a:	45 89 fb             	mov    %r15d,%r11d
   1605d:	41 f7 d3             	not    %r11d
   16060:	c1 c1 08             	rol    $0x8,%ecx
   16063:	41 09 eb             	or     %ebp,%r11d
   16066:	01 d1                	add    %edx,%ecx
   16068:	c1 c5 0a             	rol    $0xa,%ebp
   1606b:	03 54 24 18          	add    0x18(%rsp),%edx
   1606f:	41 31 db             	xor    %ebx,%r11d
   16072:	45 01 da             	add    %r11d,%r10d
   16075:	41 89 f3             	mov    %esi,%r11d
   16078:	c1 c6 0a             	rol    $0xa,%esi
   1607b:	45 31 c3             	xor    %r8d,%r11d
   1607e:	41 c1 c2 09          	rol    $0x9,%r10d
   16082:	41 31 cb             	xor    %ecx,%r11d
   16085:	45 01 ca             	add    %r9d,%r10d
   16088:	47 8d 8c 29 4e fd 53 	lea    -0x56ac02b2(%r9,%r13,1),%r9d
   1608f:	a9 
   16090:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   16095:	44 01 da             	add    %r11d,%edx
   16098:	41 89 eb             	mov    %ebp,%r11d
   1609b:	41 f7 d3             	not    %r11d
   1609e:	c1 c2 08             	rol    $0x8,%edx
   160a1:	41 09 db             	or     %ebx,%r11d
   160a4:	01 c2                	add    %eax,%edx
   160a6:	45 31 d3             	xor    %r10d,%r11d
   160a9:	45 01 d9             	add    %r11d,%r9d
   160ac:	41 89 cb             	mov    %ecx,%r11d
   160af:	41 c1 c1 0f          	rol    $0xf,%r9d
   160b3:	41 31 f3             	xor    %esi,%r11d
   160b6:	c1 c3 0a             	rol    $0xa,%ebx
   160b9:	03 44 24 20          	add    0x20(%rsp),%eax
   160bd:	41 31 d3             	xor    %edx,%r11d
   160c0:	45 01 f9             	add    %r15d,%r9d
   160c3:	47 8d bc 2f 4e fd 53 	lea    -0x56ac02b2(%r15,%r13,1),%r15d
   160ca:	a9 
   160cb:	c1 c1 0a             	rol    $0xa,%ecx
   160ce:	41 01 c3             	add    %eax,%r11d
   160d1:	89 d8                	mov    %ebx,%eax
   160d3:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
   160d8:	f7 d0                	not    %eax
   160da:	41 c1 c3 05          	rol    $0x5,%r11d
   160de:	44 09 d0             	or     %r10d,%eax
   160e1:	45 01 c3             	add    %r8d,%r11d
   160e4:	41 c1 c2 0a          	rol    $0xa,%r10d
   160e8:	45 01 e0             	add    %r12d,%r8d
   160eb:	44 31 c8             	xor    %r9d,%eax
   160ee:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   160f3:	41 01 c7             	add    %eax,%r15d
   160f6:	89 d0                	mov    %edx,%eax
   160f8:	c1 c2 0a             	rol    $0xa,%edx
   160fb:	31 c8                	xor    %ecx,%eax
   160fd:	41 c1 c7 05          	rol    $0x5,%r15d
   16101:	44 31 d8             	xor    %r11d,%eax
   16104:	41 01 ef             	add    %ebp,%r15d
   16107:	42 8d ac 35 4e fd 53 	lea    -0x56ac02b2(%rbp,%r14,1),%ebp
   1610e:	a9 
   1610f:	41 01 c0             	add    %eax,%r8d
   16112:	44 89 d0             	mov    %r10d,%eax
   16115:	f7 d0                	not    %eax
   16117:	41 c1 c0 0c          	rol    $0xc,%r8d
   1611b:	44 09 c8             	or     %r9d,%eax
   1611e:	41 01 f0             	add    %esi,%r8d
   16121:	41 c1 c1 0a          	rol    $0xa,%r9d
   16125:	03 74 24 04          	add    0x4(%rsp),%esi
   16129:	44 31 f8             	xor    %r15d,%eax
   1612c:	01 c5                	add    %eax,%ebp
   1612e:	44 89 d8             	mov    %r11d,%eax
   16131:	31 d0                	xor    %edx,%eax
   16133:	c1 c5 0b             	rol    $0xb,%ebp
   16136:	44 31 c0             	xor    %r8d,%eax
   16139:	01 dd                	add    %ebx,%ebp
   1613b:	01 c6                	add    %eax,%esi
   1613d:	44 89 c8             	mov    %r9d,%eax
   16140:	41 c1 c3 0a          	rol    $0xa,%r11d
   16144:	f7 d0                	not    %eax
   16146:	c1 c6 09             	rol    $0x9,%esi
   16149:	41 89 c6             	mov    %eax,%r14d
   1614c:	42 8d 84 23 4e fd 53 	lea    -0x56ac02b2(%rbx,%r12,1),%eax
   16153:	a9 
   16154:	44 89 c3             	mov    %r8d,%ebx
   16157:	01 ce                	add    %ecx,%esi
   16159:	45 09 fe             	or     %r15d,%r14d
   1615c:	44 31 db             	xor    %r11d,%ebx
   1615f:	41 c1 c7 0a          	rol    $0xa,%r15d
   16163:	44 01 e9             	add    %r13d,%ecx
   16166:	41 31 ee             	xor    %ebp,%r14d
   16169:	41 c1 c0 0a          	rol    $0xa,%r8d
   1616d:	41 01 c6             	add    %eax,%r14d
   16170:	89 d8                	mov    %ebx,%eax
   16172:	44 89 fb             	mov    %r15d,%ebx
   16175:	31 f0                	xor    %esi,%eax
   16177:	41 c1 c6 06          	rol    $0x6,%r14d
   1617b:	f7 d3                	not    %ebx
   1617d:	01 c1                	add    %eax,%ecx
   1617f:	8b 44 24 18          	mov    0x18(%rsp),%eax
   16183:	45 01 d6             	add    %r10d,%r14d
   16186:	09 eb                	or     %ebp,%ebx
   16188:	c1 c1 0c             	rol    $0xc,%ecx
   1618b:	44 31 f3             	xor    %r14d,%ebx
   1618e:	c1 c5 0a             	rol    $0xa,%ebp
   16191:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
   16198:	a9 
   16199:	41 89 f2             	mov    %esi,%r10d
   1619c:	01 d1                	add    %edx,%ecx
   1619e:	c1 c6 0a             	rol    $0xa,%esi
   161a1:	45 31 c2             	xor    %r8d,%r10d
   161a4:	01 c3                	add    %eax,%ebx
   161a6:	03 54 24 08          	add    0x8(%rsp),%edx
   161aa:	44 89 d0             	mov    %r10d,%eax
   161ad:	41 89 ea             	mov    %ebp,%r10d
   161b0:	c1 c3 08             	rol    $0x8,%ebx
   161b3:	31 c8                	xor    %ecx,%eax
   161b5:	41 f7 d2             	not    %r10d
   161b8:	44 01 cb             	add    %r9d,%ebx
   161bb:	01 c2                	add    %eax,%edx
   161bd:	8b 04 24             	mov    (%rsp),%eax
   161c0:	45 09 f2             	or     %r14d,%r10d
   161c3:	c1 c2 05             	rol    $0x5,%edx
   161c6:	41 31 da             	xor    %ebx,%r10d
   161c9:	41 8d 84 01 4e fd 53 	lea    -0x56ac02b2(%r9,%rax,1),%eax
   161d0:	a9 
   161d1:	41 89 c9             	mov    %ecx,%r9d
   161d4:	44 01 da             	add    %r11d,%edx
   161d7:	41 01 c2             	add    %eax,%r10d
   161da:	41 31 f1             	xor    %esi,%r9d
   161dd:	41 c1 c6 0a          	rol    $0xa,%r14d
   161e1:	44 03 5c 24 0c       	add    0xc(%rsp),%r11d
   161e6:	41 c1 c2 0d          	rol    $0xd,%r10d
   161ea:	44 89 c8             	mov    %r9d,%eax
   161ed:	45 89 f1             	mov    %r14d,%r9d
   161f0:	c1 c1 0a             	rol    $0xa,%ecx
   161f3:	31 d0                	xor    %edx,%eax
   161f5:	41 f7 d1             	not    %r9d
   161f8:	45 01 fa             	add    %r15d,%r10d
   161fb:	41 01 c3             	add    %eax,%r11d
   161fe:	8b 44 24 10          	mov    0x10(%rsp),%eax
   16202:	41 09 d9             	or     %ebx,%r9d
   16205:	c1 c3 0a             	rol    $0xa,%ebx
   16208:	45 31 d1             	xor    %r10d,%r9d
   1620b:	41 c1 c3 0e          	rol    $0xe,%r11d
   1620f:	41 8d 84 07 4e fd 53 	lea    -0x56ac02b2(%r15,%rax,1),%eax
   16216:	a9 
   16217:	41 89 df             	mov    %ebx,%r15d
   1621a:	45 01 c3             	add    %r8d,%r11d
   1621d:	45 01 e0             	add    %r12d,%r8d
   16220:	41 01 c1             	add    %eax,%r9d
   16223:	41 f7 d7             	not    %r15d
   16226:	89 d0                	mov    %edx,%eax
   16228:	c1 c2 0a             	rol    $0xa,%edx
   1622b:	31 c8                	xor    %ecx,%eax
   1622d:	41 c1 c1 0c          	rol    $0xc,%r9d
   16231:	45 89 fc             	mov    %r15d,%r12d
   16234:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
   16239:	41 01 e9             	add    %ebp,%r9d
   1623c:	44 31 d8             	xor    %r11d,%eax
   1623f:	45 09 d4             	or     %r10d,%r12d
   16242:	41 c1 c2 0a          	rol    $0xa,%r10d
   16246:	41 01 c0             	add    %eax,%r8d
   16249:	45 31 cc             	xor    %r9d,%r12d
   1624c:	42 8d 84 3d 4e fd 53 	lea    -0x56ac02b2(%rbp,%r15,1),%eax
   16253:	a9 
   16254:	44 89 dd             	mov    %r11d,%ebp
   16257:	41 01 c4             	add    %eax,%r12d
   1625a:	41 c1 c0 06          	rol    $0x6,%r8d
   1625e:	31 d5                	xor    %edx,%ebp
   16260:	44 8b 7c 24 38       	mov    0x38(%rsp),%r15d
   16265:	41 01 f0             	add    %esi,%r8d
   16268:	41 c1 c4 05          	rol    $0x5,%r12d
   1626c:	43 8d 84 2e 4e fd 53 	lea    -0x56ac02b2(%r14,%r13,1),%eax
   16273:	a9 
   16274:	45 01 f4             	add    %r14d,%r12d
   16277:	44 31 c5             	xor    %r8d,%ebp
   1627a:	03 74 24 38          	add    0x38(%rsp),%esi
   1627e:	41 c1 c3 0a          	rol    $0xa,%r11d
   16282:	01 ee                	add    %ebp,%esi
   16284:	44 89 d5             	mov    %r10d,%ebp
   16287:	44 8b 74 24 24       	mov    0x24(%rsp),%r14d
   1628c:	f7 d5                	not    %ebp
   1628e:	c1 c6 08             	rol    $0x8,%esi
   16291:	44 09 cd             	or     %r9d,%ebp
   16294:	01 ce                	add    %ecx,%esi
   16296:	41 c1 c1 0a          	rol    $0xa,%r9d
   1629a:	03 0c 24             	add    (%rsp),%ecx
   1629d:	44 31 e5             	xor    %r12d,%ebp
   162a0:	01 c5                	add    %eax,%ebp
   162a2:	44 89 c0             	mov    %r8d,%eax
   162a5:	41 c1 c0 0a          	rol    $0xa,%r8d
   162a9:	44 31 d8             	xor    %r11d,%eax
   162ac:	c1 c5 0c             	rol    $0xc,%ebp
   162af:	31 f0                	xor    %esi,%eax
   162b1:	01 dd                	add    %ebx,%ebp
   162b3:	01 c1                	add    %eax,%ecx
   162b5:	44 89 c8             	mov    %r9d,%eax
   162b8:	f7 d0                	not    %eax
   162ba:	c1 c1 0d             	rol    $0xd,%ecx
   162bd:	41 89 c5             	mov    %eax,%r13d
   162c0:	42 8d 84 33 4e fd 53 	lea    -0x56ac02b2(%rbx,%r14,1),%eax
   162c7:	a9 
   162c8:	89 f3                	mov    %esi,%ebx
   162ca:	01 d1                	add    %edx,%ecx
   162cc:	45 09 e5             	or     %r12d,%r13d
   162cf:	44 31 c3             	xor    %r8d,%ebx
   162d2:	41 c1 c4 0a          	rol    $0xa,%r12d
   162d6:	03 54 24 1c          	add    0x1c(%rsp),%edx
   162da:	31 cb                	xor    %ecx,%ebx
   162dc:	41 31 ed             	xor    %ebp,%r13d
   162df:	c1 c6 0a             	rol    $0xa,%esi
   162e2:	41 01 c5             	add    %eax,%r13d
   162e5:	01 da                	add    %ebx,%edx
   162e7:	44 89 e3             	mov    %r12d,%ebx
   162ea:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   162ee:	41 c1 c5 0d          	rol    $0xd,%r13d
   162f2:	f7 d3                	not    %ebx
   162f4:	c1 c2 06             	rol    $0x6,%edx
   162f7:	45 01 d5             	add    %r10d,%r13d
   162fa:	09 eb                	or     %ebp,%ebx
   162fc:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
   16303:	a9 
   16304:	44 01 da             	add    %r11d,%edx
   16307:	44 31 eb             	xor    %r13d,%ebx
   1630a:	c1 c5 0a             	rol    $0xa,%ebp
   1630d:	44 03 5c 24 28       	add    0x28(%rsp),%r11d
   16312:	01 c3                	add    %eax,%ebx
   16314:	89 c8                	mov    %ecx,%eax
   16316:	41 89 ea             	mov    %ebp,%r10d
   16319:	c1 c1 0a             	rol    $0xa,%ecx
   1631c:	31 f0                	xor    %esi,%eax
   1631e:	41 f7 d2             	not    %r10d
   16321:	c1 c3 0e             	rol    $0xe,%ebx
   16324:	31 d0                	xor    %edx,%eax
   16326:	44 01 cb             	add    %r9d,%ebx
   16329:	41 01 c3             	add    %eax,%r11d
   1632c:	44 89 d0             	mov    %r10d,%eax
   1632f:	44 8b 54 24 14       	mov    0x14(%rsp),%r10d
   16334:	44 09 e8             	or     %r13d,%eax
   16337:	41 c1 c5 0a          	rol    $0xa,%r13d
   1633b:	31 d8                	xor    %ebx,%eax
   1633d:	47 8d 8c 11 4e fd 53 	lea    -0x56ac02b2(%r9,%r10,1),%r9d
   16344:	a9 
   16345:	41 c1 c3 05          	rol    $0x5,%r11d
   16349:	41 89 d2             	mov    %edx,%r10d
   1634c:	41 01 c1             	add    %eax,%r9d
   1634f:	44 89 e8             	mov    %r13d,%eax
   16352:	45 01 c3             	add    %r8d,%r11d
   16355:	41 31 ca             	xor    %ecx,%r10d
   16358:	41 c1 c1 0b          	rol    $0xb,%r9d
   1635c:	f7 d0                	not    %eax
   1635e:	44 03 44 24 2c       	add    0x2c(%rsp),%r8d
   16363:	45 31 da             	xor    %r11d,%r10d
   16366:	45 01 e1             	add    %r12d,%r9d
   16369:	09 d8                	or     %ebx,%eax
   1636b:	45 01 c2             	add    %r8d,%r10d
   1636e:	c1 c2 0a             	rol    $0xa,%edx
   16371:	41 c1 c2 0f          	rol    $0xf,%r10d
   16375:	44 31 c8             	xor    %r9d,%eax
   16378:	45 89 d8             	mov    %r11d,%r8d
   1637b:	c1 c3 0a             	rol    $0xa,%ebx
   1637e:	47 8d a4 3c 4e fd 53 	lea    -0x56ac02b2(%r12,%r15,1),%r12d
   16385:	a9 
   16386:	41 01 f2             	add    %esi,%r10d
   16389:	41 31 d0             	xor    %edx,%r8d
   1638c:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   16391:	41 01 c4             	add    %eax,%r12d
   16394:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   16398:	41 c1 c4 08          	rol    $0x8,%r12d
   1639c:	41 01 ec             	add    %ebp,%r12d
   1639f:	45 31 d0             	xor    %r10d,%r8d
   163a2:	44 01 f6             	add    %r14d,%esi
   163a5:	41 c1 c3 0a          	rol    $0xa,%r11d
   163a9:	44 01 c6             	add    %r8d,%esi
   163ac:	41 89 d8             	mov    %ebx,%r8d
   163af:	44 89 5c 24 54       	mov    %r11d,0x54(%rsp)
   163b4:	41 f7 d0             	not    %r8d
   163b7:	c1 c6 0d             	rol    $0xd,%esi
   163ba:	45 89 c6             	mov    %r8d,%r14d
   163bd:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
   163c2:	01 ce                	add    %ecx,%esi
   163c4:	03 4c 24 3c          	add    0x3c(%rsp),%ecx
   163c8:	45 09 ce             	or     %r9d,%r14d
   163cb:	41 c1 c1 0a          	rol    $0xa,%r9d
   163cf:	42 8d 84 05 4e fd 53 	lea    -0x56ac02b2(%rbp,%r8,1),%eax
   163d6:	a9 
   163d7:	45 89 d0             	mov    %r10d,%r8d
   163da:	45 31 e6             	xor    %r12d,%r14d
   163dd:	41 c1 c2 0a          	rol    $0xa,%r10d
   163e1:	45 31 d8             	xor    %r11d,%r8d
   163e4:	41 01 c6             	add    %eax,%r14d
   163e7:	44 89 c8             	mov    %r9d,%eax
   163ea:	44 89 54 24 64       	mov    %r10d,0x64(%rsp)
   163ef:	41 31 f0             	xor    %esi,%r8d
   163f2:	41 c1 c6 05          	rol    $0x5,%r14d
   163f6:	f7 d0                	not    %eax
   163f8:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
   163fd:	44 01 c1             	add    %r8d,%ecx
   16400:	41 89 f0             	mov    %esi,%r8d
   16403:	45 01 ee             	add    %r13d,%r14d
   16406:	44 09 e0             	or     %r12d,%eax
   16409:	c1 c1 0b             	rol    $0xb,%ecx
   1640c:	45 31 d0             	xor    %r10d,%r8d
   1640f:	44 31 f0             	xor    %r14d,%eax
   16412:	c1 c6 0a             	rol    $0xa,%esi
   16415:	01 d1                	add    %edx,%ecx
   16417:	03 54 24 14          	add    0x14(%rsp),%edx
   1641b:	41 c1 c4 0a          	rol    $0xa,%r12d
   1641f:	89 74 24 60          	mov    %esi,0x60(%rsp)
   16423:	41 31 c8             	xor    %ecx,%r8d
   16426:	43 8d ac 3d 4e fd 53 	lea    -0x56ac02b2(%r13,%r15,1),%ebp
   1642d:	a9 
   1642e:	44 89 64 24 4c       	mov    %r12d,0x4c(%rsp)
   16433:	01 c5                	add    %eax,%ebp
   16435:	44 01 c2             	add    %r8d,%edx
   16438:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
   1643c:	c1 c5 06             	rol    $0x6,%ebp
   1643f:	c1 c2 0b             	rol    $0xb,%edx
   16442:	01 dd                	add    %ebx,%ebp
   16444:	44 01 da             	add    %r11d,%edx
   16447:	03 77 0c             	add    0xc(%rdi),%esi
   1644a:	44 03 57 10          	add    0x10(%rdi),%r10d
   1644e:	44 03 5f 14          	add    0x14(%rdi),%r11d
   16452:	03 5f 18             	add    0x18(%rdi),%ebx
   16455:	41 01 f6             	add    %esi,%r14d
   16458:	45 01 d4             	add    %r10d,%r12d
   1645b:	45 01 d9             	add    %r11d,%r9d
   1645e:	89 54 24 58          	mov    %edx,0x58(%rsp)
   16462:	01 da                	add    %ebx,%edx
   16464:	be 68 00 00 00       	mov    $0x68,%esi
   16469:	44 89 4f 10          	mov    %r9d,0x10(%rdi)
   1646d:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
   16471:	44 89 67 0c          	mov    %r12d,0xc(%rdi)
   16475:	44 89 74 24 48       	mov    %r14d,0x48(%rsp)
   1647a:	89 57 14             	mov    %edx,0x14(%rdi)
   1647d:	03 4f 08             	add    0x8(%rdi),%ecx
   16480:	01 cd                	add    %ecx,%ebp
   16482:	44 89 77 08          	mov    %r14d,0x8(%rdi)
   16486:	89 6f 18             	mov    %ebp,0x18(%rdi)
   16489:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1648e:	e8 dd e7 ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   16493:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   1649a:	00 
   1649b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   164a2:	00 00 
   164a4:	75 14                	jne    164ba <mbedtls_internal_ripemd160_process+0x16ba>
   164a6:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   164ad:	31 c0                	xor    %eax,%eax
   164af:	5b                   	pop    %rbx
   164b0:	5d                   	pop    %rbp
   164b1:	41 5c                	pop    %r12
   164b3:	41 5d                	pop    %r13
   164b5:	41 5e                	pop    %r14
   164b7:	41 5f                	pop    %r15
   164b9:	c3                   	retq   
   164ba:	e8 b1 dd fe ff       	callq  4270 <__stack_chk_fail@plt>
   164bf:	90                   	nop

00000000000164c0 <mbedtls_ripemd160_update.part.0>:
   164c0:	41 56                	push   %r14
   164c2:	41 55                	push   %r13
   164c4:	41 54                	push   %r12
   164c6:	49 89 fc             	mov    %rdi,%r12
   164c9:	55                   	push   %rbp
   164ca:	48 89 f5             	mov    %rsi,%rbp
   164cd:	53                   	push   %rbx
   164ce:	8b 07                	mov    (%rdi),%eax
   164d0:	48 89 d3             	mov    %rdx,%rbx
   164d3:	ba 40 00 00 00       	mov    $0x40,%edx
   164d8:	41 89 c5             	mov    %eax,%r13d
   164db:	41 83 e5 3f          	and    $0x3f,%r13d
   164df:	44 29 ea             	sub    %r13d,%edx
   164e2:	01 d8                	add    %ebx,%eax
   164e4:	89 07                	mov    %eax,(%rdi)
   164e6:	41 89 d6             	mov    %edx,%r14d
   164e9:	73 04                	jae    164ef <mbedtls_ripemd160_update.part.0+0x2f>
   164eb:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   164ef:	45 85 ed             	test   %r13d,%r13d
   164f2:	74 05                	je     164f9 <mbedtls_ripemd160_update.part.0+0x39>
   164f4:	49 39 de             	cmp    %rbx,%r14
   164f7:	76 37                	jbe    16530 <mbedtls_ripemd160_update.part.0+0x70>
   164f9:	48 83 fb 3f          	cmp    $0x3f,%rbx
   164fd:	77 17                	ja     16516 <mbedtls_ripemd160_update.part.0+0x56>
   164ff:	eb 7f                	jmp    16580 <mbedtls_ripemd160_update.part.0+0xc0>
   16501:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16508:	48 83 eb 40          	sub    $0x40,%rbx
   1650c:	48 83 c5 40          	add    $0x40,%rbp
   16510:	48 83 fb 3f          	cmp    $0x3f,%rbx
   16514:	76 6a                	jbe    16580 <mbedtls_ripemd160_update.part.0+0xc0>
   16516:	48 89 ee             	mov    %rbp,%rsi
   16519:	4c 89 e7             	mov    %r12,%rdi
   1651c:	e8 df e8 ff ff       	callq  14e00 <mbedtls_internal_ripemd160_process>
   16521:	85 c0                	test   %eax,%eax
   16523:	74 e3                	je     16508 <mbedtls_ripemd160_update.part.0+0x48>
   16525:	5b                   	pop    %rbx
   16526:	5d                   	pop    %rbp
   16527:	41 5c                	pop    %r12
   16529:	41 5d                	pop    %r13
   1652b:	41 5e                	pop    %r14
   1652d:	c3                   	retq   
   1652e:	66 90                	xchg   %ax,%ax
   16530:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
   16535:	4d 01 c5             	add    %r8,%r13
   16538:	83 fa 08             	cmp    $0x8,%edx
   1653b:	0f 83 87 00 00 00    	jae    165c8 <mbedtls_ripemd160_update.part.0+0x108>
   16541:	f6 c2 04             	test   $0x4,%dl
   16544:	0f 85 19 01 00 00    	jne    16663 <mbedtls_ripemd160_update.part.0+0x1a3>
   1654a:	85 d2                	test   %edx,%edx
   1654c:	74 11                	je     1655f <mbedtls_ripemd160_update.part.0+0x9f>
   1654e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   16552:	83 e2 02             	and    $0x2,%edx
   16555:	41 88 45 00          	mov    %al,0x0(%r13)
   16559:	0f 85 30 01 00 00    	jne    1668f <mbedtls_ripemd160_update.part.0+0x1cf>
   1655f:	4c 89 c6             	mov    %r8,%rsi
   16562:	4c 89 e7             	mov    %r12,%rdi
   16565:	e8 96 e8 ff ff       	callq  14e00 <mbedtls_internal_ripemd160_process>
   1656a:	85 c0                	test   %eax,%eax
   1656c:	75 b7                	jne    16525 <mbedtls_ripemd160_update.part.0+0x65>
   1656e:	4c 01 f5             	add    %r14,%rbp
   16571:	4c 29 f3             	sub    %r14,%rbx
   16574:	45 31 ed             	xor    %r13d,%r13d
   16577:	eb 80                	jmp    164f9 <mbedtls_ripemd160_update.part.0+0x39>
   16579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16580:	31 c0                	xor    %eax,%eax
   16582:	48 85 db             	test   %rbx,%rbx
   16585:	74 9e                	je     16525 <mbedtls_ripemd160_update.part.0+0x65>
   16587:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
   1658c:	89 d8                	mov    %ebx,%eax
   1658e:	83 fb 08             	cmp    $0x8,%ebx
   16591:	0f 83 7e 00 00 00    	jae    16615 <mbedtls_ripemd160_update.part.0+0x155>
   16597:	83 e3 04             	and    $0x4,%ebx
   1659a:	0f 85 d9 00 00 00    	jne    16679 <mbedtls_ripemd160_update.part.0+0x1b9>
   165a0:	85 c0                	test   %eax,%eax
   165a2:	74 16                	je     165ba <mbedtls_ripemd160_update.part.0+0xfa>
   165a4:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   165a8:	88 11                	mov    %dl,(%rcx)
   165aa:	a8 02                	test   $0x2,%al
   165ac:	74 0c                	je     165ba <mbedtls_ripemd160_update.part.0+0xfa>
   165ae:	89 c2                	mov    %eax,%edx
   165b0:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   165b5:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   165ba:	31 c0                	xor    %eax,%eax
   165bc:	5b                   	pop    %rbx
   165bd:	5d                   	pop    %rbp
   165be:	41 5c                	pop    %r12
   165c0:	41 5d                	pop    %r13
   165c2:	41 5e                	pop    %r14
   165c4:	c3                   	retq   
   165c5:	0f 1f 00             	nopl   (%rax)
   165c8:	48 8b 45 00          	mov    0x0(%rbp),%rax
   165cc:	49 8d 75 08          	lea    0x8(%r13),%rsi
   165d0:	49 89 e9             	mov    %rbp,%r9
   165d3:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   165d7:	49 89 45 00          	mov    %rax,0x0(%r13)
   165db:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
   165e0:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
   165e5:	49 29 f5             	sub    %rsi,%r13
   165e8:	44 01 ea             	add    %r13d,%edx
   165eb:	4d 29 e9             	sub    %r13,%r9
   165ee:	83 e2 f8             	and    $0xfffffff8,%edx
   165f1:	83 fa 08             	cmp    $0x8,%edx
   165f4:	0f 82 65 ff ff ff    	jb     1655f <mbedtls_ripemd160_update.part.0+0x9f>
   165fa:	83 e2 f8             	and    $0xfffffff8,%edx
   165fd:	31 c0                	xor    %eax,%eax
   165ff:	89 c1                	mov    %eax,%ecx
   16601:	83 c0 08             	add    $0x8,%eax
   16604:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   16608:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   1660c:	39 d0                	cmp    %edx,%eax
   1660e:	72 ef                	jb     165ff <mbedtls_ripemd160_update.part.0+0x13f>
   16610:	e9 4a ff ff ff       	jmpq   1655f <mbedtls_ripemd160_update.part.0+0x9f>
   16615:	48 8b 45 00          	mov    0x0(%rbp),%rax
   16619:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   1661d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   16621:	48 89 01             	mov    %rax,(%rcx)
   16624:	89 d8                	mov    %ebx,%eax
   16626:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
   1662b:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   16630:	48 29 f1             	sub    %rsi,%rcx
   16633:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   16636:	48 29 cd             	sub    %rcx,%rbp
   16639:	83 e0 f8             	and    $0xfffffff8,%eax
   1663c:	83 f8 08             	cmp    $0x8,%eax
   1663f:	0f 82 75 ff ff ff    	jb     165ba <mbedtls_ripemd160_update.part.0+0xfa>
   16645:	83 e0 f8             	and    $0xfffffff8,%eax
   16648:	31 d2                	xor    %edx,%edx
   1664a:	89 d1                	mov    %edx,%ecx
   1664c:	83 c2 08             	add    $0x8,%edx
   1664f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   16654:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   16658:	39 c2                	cmp    %eax,%edx
   1665a:	72 ee                	jb     1664a <mbedtls_ripemd160_update.part.0+0x18a>
   1665c:	31 c0                	xor    %eax,%eax
   1665e:	e9 59 ff ff ff       	jmpq   165bc <mbedtls_ripemd160_update.part.0+0xfc>
   16663:	8b 45 00             	mov    0x0(%rbp),%eax
   16666:	41 89 45 00          	mov    %eax,0x0(%r13)
   1666a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
   1666f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
   16674:	e9 e6 fe ff ff       	jmpq   1655f <mbedtls_ripemd160_update.part.0+0x9f>
   16679:	8b 55 00             	mov    0x0(%rbp),%edx
   1667c:	89 11                	mov    %edx,(%rcx)
   1667e:	89 c2                	mov    %eax,%edx
   16680:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   16684:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   16688:	31 c0                	xor    %eax,%eax
   1668a:	e9 2d ff ff ff       	jmpq   165bc <mbedtls_ripemd160_update.part.0+0xfc>
   1668f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
   16695:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
   1669b:	e9 bf fe ff ff       	jmpq   1655f <mbedtls_ripemd160_update.part.0+0x9f>

00000000000166a0 <mbedtls_ripemd160_update>:
   166a0:	f3 0f 1e fa          	endbr64 
   166a4:	48 85 d2             	test   %rdx,%rdx
   166a7:	74 07                	je     166b0 <mbedtls_ripemd160_update+0x10>
   166a9:	e9 12 fe ff ff       	jmpq   164c0 <mbedtls_ripemd160_update.part.0>
   166ae:	66 90                	xchg   %ax,%ax
   166b0:	31 c0                	xor    %eax,%eax
   166b2:	c3                   	retq   
   166b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   166ba:	00 00 00 00 
   166be:	66 90                	xchg   %ax,%ax

00000000000166c0 <mbedtls_ripemd160_finish>:
   166c0:	f3 0f 1e fa          	endbr64 
   166c4:	55                   	push   %rbp
   166c5:	48 89 f5             	mov    %rsi,%rbp
   166c8:	53                   	push   %rbx
   166c9:	48 89 fb             	mov    %rdi,%rbx
   166cc:	48 83 ec 18          	sub    $0x18,%rsp
   166d0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   166d7:	00 00 
   166d9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   166de:	31 c0                	xor    %eax,%eax
   166e0:	8b 07                	mov    (%rdi),%eax
   166e2:	8b 7f 04             	mov    0x4(%rdi),%edi
   166e5:	89 c1                	mov    %eax,%ecx
   166e7:	8d 14 fd 00 00 00 00 	lea    0x0(,%rdi,8),%edx
   166ee:	c1 e9 1d             	shr    $0x1d,%ecx
   166f1:	09 ca                	or     %ecx,%edx
   166f3:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
   166fa:	83 e0 3f             	and    $0x3f,%eax
   166fd:	89 0c 24             	mov    %ecx,(%rsp)
   16700:	89 54 24 04          	mov    %edx,0x4(%rsp)
   16704:	83 f8 37             	cmp    $0x37,%eax
   16707:	77 37                	ja     16740 <mbedtls_ripemd160_finish+0x80>
   16709:	ba 38 00 00 00       	mov    $0x38,%edx
   1670e:	29 c2                	sub    %eax,%edx
   16710:	48 8d 35 29 cd 00 00 	lea    0xcd29(%rip),%rsi        # 23440 <ripemd160_padding>
   16717:	48 89 df             	mov    %rbx,%rdi
   1671a:	e8 a1 fd ff ff       	callq  164c0 <mbedtls_ripemd160_update.part.0>
   1671f:	85 c0                	test   %eax,%eax
   16721:	74 2d                	je     16750 <mbedtls_ripemd160_finish+0x90>
   16723:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   16728:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1672f:	00 00 
   16731:	75 51                	jne    16784 <mbedtls_ripemd160_finish+0xc4>
   16733:	48 83 c4 18          	add    $0x18,%rsp
   16737:	5b                   	pop    %rbx
   16738:	5d                   	pop    %rbp
   16739:	c3                   	retq   
   1673a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16740:	ba 78 00 00 00       	mov    $0x78,%edx
   16745:	29 c2                	sub    %eax,%edx
   16747:	eb c7                	jmp    16710 <mbedtls_ripemd160_finish+0x50>
   16749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16750:	48 89 e6             	mov    %rsp,%rsi
   16753:	ba 08 00 00 00       	mov    $0x8,%edx
   16758:	48 89 df             	mov    %rbx,%rdi
   1675b:	e8 60 fd ff ff       	callq  164c0 <mbedtls_ripemd160_update.part.0>
   16760:	85 c0                	test   %eax,%eax
   16762:	75 bf                	jne    16723 <mbedtls_ripemd160_finish+0x63>
   16764:	8b 53 08             	mov    0x8(%rbx),%edx
   16767:	89 55 00             	mov    %edx,0x0(%rbp)
   1676a:	8b 53 0c             	mov    0xc(%rbx),%edx
   1676d:	89 55 04             	mov    %edx,0x4(%rbp)
   16770:	8b 53 10             	mov    0x10(%rbx),%edx
   16773:	89 55 08             	mov    %edx,0x8(%rbp)
   16776:	8b 53 14             	mov    0x14(%rbx),%edx
   16779:	89 55 0c             	mov    %edx,0xc(%rbp)
   1677c:	8b 53 18             	mov    0x18(%rbx),%edx
   1677f:	89 55 10             	mov    %edx,0x10(%rbp)
   16782:	eb 9f                	jmp    16723 <mbedtls_ripemd160_finish+0x63>
   16784:	e8 e7 da fe ff       	callq  4270 <__stack_chk_fail@plt>
   16789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016790 <mbedtls_ripemd160>:
   16790:	f3 0f 1e fa          	endbr64 
   16794:	41 55                	push   %r13
   16796:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1679a:	41 54                	push   %r12
   1679c:	55                   	push   %rbp
   1679d:	48 89 d5             	mov    %rdx,%rbp
   167a0:	48 83 ec 70          	sub    $0x70,%rsp
   167a4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   167ab:	00 00 
   167ad:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   167b2:	31 c0                	xor    %eax,%eax
   167b4:	49 89 e5             	mov    %rsp,%r13
   167b7:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   167bc:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   167c3:	ab cd ef 
   167c6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   167cb:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   167d2:	54 32 10 
   167d5:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
   167dc:	00 
   167dd:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   167e4:	00 
   167e5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   167ea:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
   167f1:	c3 
   167f2:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   167f7:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   167fc:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   16801:	48 85 f6             	test   %rsi,%rsi
   16804:	74 15                	je     1681b <mbedtls_ripemd160+0x8b>
   16806:	48 89 f2             	mov    %rsi,%rdx
   16809:	48 89 fe             	mov    %rdi,%rsi
   1680c:	4c 89 ef             	mov    %r13,%rdi
   1680f:	e8 ac fc ff ff       	callq  164c0 <mbedtls_ripemd160_update.part.0>
   16814:	41 89 c4             	mov    %eax,%r12d
   16817:	85 c0                	test   %eax,%eax
   16819:	75 0e                	jne    16829 <mbedtls_ripemd160+0x99>
   1681b:	48 89 ee             	mov    %rbp,%rsi
   1681e:	4c 89 ef             	mov    %r13,%rdi
   16821:	e8 9a fe ff ff       	callq  166c0 <mbedtls_ripemd160_finish>
   16826:	41 89 c4             	mov    %eax,%r12d
   16829:	be 5c 00 00 00       	mov    $0x5c,%esi
   1682e:	4c 89 ef             	mov    %r13,%rdi
   16831:	e8 3a e4 ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   16836:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1683b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   16842:	00 00 
   16844:	75 0d                	jne    16853 <mbedtls_ripemd160+0xc3>
   16846:	48 83 c4 70          	add    $0x70,%rsp
   1684a:	44 89 e0             	mov    %r12d,%eax
   1684d:	5d                   	pop    %rbp
   1684e:	41 5c                	pop    %r12
   16850:	41 5d                	pop    %r13
   16852:	c3                   	retq   
   16853:	e8 18 da fe ff       	callq  4270 <__stack_chk_fail@plt>
   16858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1685f:	00 

0000000000016860 <mbedtls_ripemd160_self_test>:
   16860:	f3 0f 1e fa          	endbr64 
   16864:	41 57                	push   %r15
   16866:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1686a:	41 56                	push   %r14
   1686c:	4c 8d 35 2d c9 00 00 	lea    0xc92d(%rip),%r14        # 231a0 <ripemd160_test_str>
   16873:	41 55                	push   %r13
   16875:	41 89 fd             	mov    %edi,%r13d
   16878:	41 54                	push   %r12
   1687a:	45 31 e4             	xor    %r12d,%r12d
   1687d:	55                   	push   %rbp
   1687e:	bd 01 00 00 00       	mov    $0x1,%ebp
   16883:	53                   	push   %rbx
   16884:	48 8d 1d 35 c8 00 00 	lea    0xc835(%rip),%rbx        # 230c0 <ripemd160_test_md>
   1688b:	48 83 ec 28          	sub    $0x28,%rsp
   1688f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16896:	00 00 
   16898:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1689d:	31 c0                	xor    %eax,%eax
   1689f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   168a6:	00 
   168a7:	49 89 e7             	mov    %rsp,%r15
   168aa:	0f 29 04 24          	movaps %xmm0,(%rsp)
   168ae:	66 90                	xchg   %ax,%ax
   168b0:	45 85 ed             	test   %r13d,%r13d
   168b3:	75 6b                	jne    16920 <mbedtls_ripemd160_self_test+0xc0>
   168b5:	4c 89 e6             	mov    %r12,%rsi
   168b8:	4c 89 fa             	mov    %r15,%rdx
   168bb:	4c 89 f7             	mov    %r14,%rdi
   168be:	e8 cd fe ff ff       	callq  16790 <mbedtls_ripemd160>
   168c3:	41 89 c4             	mov    %eax,%r12d
   168c6:	85 c0                	test   %eax,%eax
   168c8:	75 22                	jne    168ec <mbedtls_ripemd160_self_test+0x8c>
   168ca:	49 8b 07             	mov    (%r15),%rax
   168cd:	49 8b 57 08          	mov    0x8(%r15),%rdx
   168d1:	48 33 03             	xor    (%rbx),%rax
   168d4:	48 33 53 08          	xor    0x8(%rbx),%rdx
   168d8:	48 09 c2             	or     %rax,%rdx
   168db:	75 09                	jne    168e6 <mbedtls_ripemd160_self_test+0x86>
   168dd:	8b 43 10             	mov    0x10(%rbx),%eax
   168e0:	41 39 47 10          	cmp    %eax,0x10(%r15)
   168e4:	74 5a                	je     16940 <mbedtls_ripemd160_self_test+0xe0>
   168e6:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   168ec:	45 85 ed             	test   %r13d,%r13d
   168ef:	0f 85 ab 00 00 00    	jne    169a0 <mbedtls_ripemd160_self_test+0x140>
   168f5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   168fa:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   16901:	00 00 
   16903:	0f 85 a8 00 00 00    	jne    169b1 <mbedtls_ripemd160_self_test+0x151>
   16909:	48 83 c4 28          	add    $0x28,%rsp
   1690d:	44 89 e0             	mov    %r12d,%eax
   16910:	5b                   	pop    %rbx
   16911:	5d                   	pop    %rbp
   16912:	41 5c                	pop    %r12
   16914:	41 5d                	pop    %r13
   16916:	41 5e                	pop    %r14
   16918:	41 5f                	pop    %r15
   1691a:	c3                   	retq   
   1691b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16920:	89 ea                	mov    %ebp,%edx
   16922:	48 8d 35 6e c7 00 00 	lea    0xc76e(%rip),%rsi        # 23097 <md5_test_buf+0x237>
   16929:	bf 01 00 00 00       	mov    $0x1,%edi
   1692e:	31 c0                	xor    %eax,%eax
   16930:	e8 1b da fe ff       	callq  4350 <__printf_chk@plt>
   16935:	e9 7b ff ff ff       	jmpq   168b5 <mbedtls_ripemd160_self_test+0x55>
   1693a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16940:	45 85 ed             	test   %r13d,%r13d
   16943:	74 0c                	je     16951 <mbedtls_ripemd160_self_test+0xf1>
   16945:	48 8d 3d b6 47 00 00 	lea    0x47b6(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
   1694c:	e8 bf d8 fe ff       	callq  4210 <puts@plt>
   16951:	48 83 c3 14          	add    $0x14,%rbx
   16955:	49 83 c6 51          	add    $0x51,%r14
   16959:	48 83 fd 08          	cmp    $0x8,%rbp
   1695d:	74 19                	je     16978 <mbedtls_ripemd160_self_test+0x118>
   1695f:	48 8d 05 fa c7 00 00 	lea    0xc7fa(%rip),%rax        # 23160 <ripemd160_test_strlen>
   16966:	4c 8b 24 e8          	mov    (%rax,%rbp,8),%r12
   1696a:	48 83 c5 01          	add    $0x1,%rbp
   1696e:	e9 3d ff ff ff       	jmpq   168b0 <mbedtls_ripemd160_self_test+0x50>
   16973:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16978:	45 85 ed             	test   %r13d,%r13d
   1697b:	75 0b                	jne    16988 <mbedtls_ripemd160_self_test+0x128>
   1697d:	45 31 e4             	xor    %r12d,%r12d
   16980:	e9 70 ff ff ff       	jmpq   168f5 <mbedtls_ripemd160_self_test+0x95>
   16985:	0f 1f 00             	nopl   (%rax)
   16988:	bf 0a 00 00 00       	mov    $0xa,%edi
   1698d:	e8 6e d8 fe ff       	callq  4200 <putchar@plt>
   16992:	e9 5e ff ff ff       	jmpq   168f5 <mbedtls_ripemd160_self_test+0x95>
   16997:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1699e:	00 00 
   169a0:	48 8d 3d 16 cc 00 00 	lea    0xcc16(%rip),%rdi        # 235bd <sha1_test_buf+0xbd>
   169a7:	e8 64 d8 fe ff       	callq  4210 <puts@plt>
   169ac:	e9 44 ff ff ff       	jmpq   168f5 <mbedtls_ripemd160_self_test+0x95>
   169b1:	e8 ba d8 fe ff       	callq  4270 <__stack_chk_fail@plt>
   169b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   169bd:	00 00 00 

00000000000169c0 <mbedtls_sha1_init>:
   169c0:	f3 0f 1e fa          	endbr64 
   169c4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   169cb:	48 89 f9             	mov    %rdi,%rcx
   169ce:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   169d2:	31 c0                	xor    %eax,%eax
   169d4:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
   169db:	00 
   169dc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   169e0:	48 29 f9             	sub    %rdi,%rcx
   169e3:	83 c1 5c             	add    $0x5c,%ecx
   169e6:	c1 e9 03             	shr    $0x3,%ecx
   169e9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   169ec:	c3                   	retq   
   169ed:	0f 1f 00             	nopl   (%rax)

00000000000169f0 <mbedtls_sha1_free>:
   169f0:	f3 0f 1e fa          	endbr64 
   169f4:	48 85 ff             	test   %rdi,%rdi
   169f7:	74 0f                	je     16a08 <mbedtls_sha1_free+0x18>
   169f9:	be 5c 00 00 00       	mov    $0x5c,%esi
   169fe:	e9 6d e2 ff ff       	jmpq   14c70 <mbedtls_platform_zeroize>
   16a03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16a08:	c3                   	retq   
   16a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016a10 <mbedtls_sha1_clone>:
   16a10:	f3 0f 1e fa          	endbr64 
   16a14:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   16a18:	0f 11 07             	movups %xmm0,(%rdi)
   16a1b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   16a20:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   16a24:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   16a29:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   16a2d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   16a32:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   16a36:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   16a3b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   16a3f:	48 8b 46 50          	mov    0x50(%rsi),%rax
   16a43:	48 89 47 50          	mov    %rax,0x50(%rdi)
   16a47:	8b 46 58             	mov    0x58(%rsi),%eax
   16a4a:	89 47 58             	mov    %eax,0x58(%rdi)
   16a4d:	c3                   	retq   
   16a4e:	66 90                	xchg   %ax,%ax

0000000000016a50 <mbedtls_sha1_starts>:
   16a50:	f3 0f 1e fa          	endbr64 
   16a54:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   16a5b:	ab cd ef 
   16a5e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   16a65:	48 89 47 08          	mov    %rax,0x8(%rdi)
   16a69:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   16a70:	54 32 10 
   16a73:	48 89 47 10          	mov    %rax,0x10(%rdi)
   16a77:	31 c0                	xor    %eax,%eax
   16a79:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
   16a80:	c3                   	retq   
   16a81:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16a88:	00 00 00 00 
   16a8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016a90 <mbedtls_internal_sha1_process>:
   16a90:	f3 0f 1e fa          	endbr64 
   16a94:	41 57                	push   %r15
   16a96:	41 56                	push   %r14
   16a98:	41 55                	push   %r13
   16a9a:	41 54                	push   %r12
   16a9c:	49 89 f4             	mov    %rsi,%r12
   16a9f:	55                   	push   %rbp
   16aa0:	53                   	push   %rbx
   16aa1:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   16aa8:	45 8b 44 24 24       	mov    0x24(%r12),%r8d
   16aad:	44 8b 56 04          	mov    0x4(%rsi),%r10d
   16ab1:	41 8b 5c 24 38       	mov    0x38(%r12),%ebx
   16ab6:	45 8b 5c 24 18       	mov    0x18(%r12),%r11d
   16abb:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   16ac0:	45 89 c7             	mov    %r8d,%r15d
   16ac3:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
   16ac8:	45 8b 6c 24 2c       	mov    0x2c(%r12),%r13d
   16acd:	45 89 d6             	mov    %r10d,%r14d
   16ad0:	41 0f cb             	bswap  %r11d
   16ad3:	44 8b 0e             	mov    (%rsi),%r9d
   16ad6:	8b 7e 08             	mov    0x8(%rsi),%edi
   16ad9:	41 0f ce             	bswap  %r14d
   16adc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16ae3:	00 00 
   16ae5:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   16aec:	00 
   16aed:	31 c0                	xor    %eax,%eax
   16aef:	41 8b 44 24 20       	mov    0x20(%r12),%eax
   16af4:	45 8b 54 24 1c       	mov    0x1c(%r12),%r10d
   16af9:	44 89 5c 24 14       	mov    %r11d,0x14(%rsp)
   16afe:	41 8b 6c 24 34       	mov    0x34(%r12),%ebp
   16b03:	41 89 db             	mov    %ebx,%r11d
   16b06:	8b 76 0c             	mov    0xc(%rsi),%esi
   16b09:	41 0f cd             	bswap  %r13d
   16b0c:	0f c8                	bswap  %eax
   16b0e:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   16b12:	44 89 c0             	mov    %r8d,%eax
   16b15:	41 0f ca             	bswap  %r10d
   16b18:	45 8b 44 24 30       	mov    0x30(%r12),%r8d
   16b1d:	41 8b 4c 24 10       	mov    0x10(%r12),%ecx
   16b22:	0f cd                	bswap  %ebp
   16b24:	41 0f cb             	bswap  %r11d
   16b27:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   16b2b:	41 0f c9             	bswap  %r9d
   16b2e:	0f cf                	bswap  %edi
   16b30:	0f ce                	bswap  %esi
   16b32:	41 8b 54 24 14       	mov    0x14(%r12),%edx
   16b37:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
   16b3c:	41 0f c8             	bswap  %r8d
   16b3f:	0f c9                	bswap  %ecx
   16b41:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
   16b46:	41 0f cf             	bswap  %r15d
   16b49:	0f c8                	bswap  %eax
   16b4b:	44 89 1c 24          	mov    %r11d,(%rsp)
   16b4f:	0f ca                	bswap  %edx
   16b51:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   16b56:	45 8b 44 24 3c       	mov    0x3c(%r12),%r8d
   16b5b:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   16b60:	89 44 24 28          	mov    %eax,0x28(%rsp)
   16b64:	41 0f c8             	bswap  %r8d
   16b67:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
   16b6c:	44 8b 53 14          	mov    0x14(%rbx),%r10d
   16b70:	44 8b 63 10          	mov    0x10(%rbx),%r12d
   16b74:	44 8b 5b 08          	mov    0x8(%rbx),%r11d
   16b78:	8b 6b 0c             	mov    0xc(%rbx),%ebp
   16b7b:	45 89 d5             	mov    %r10d,%r13d
   16b7e:	44 8b 53 18          	mov    0x18(%rbx),%r10d
   16b82:	44 89 6c 24 4c       	mov    %r13d,0x4c(%rsp)
   16b87:	44 89 54 24 38       	mov    %r10d,0x38(%rsp)
   16b8c:	45 89 e2             	mov    %r12d,%r10d
   16b8f:	8b 5c 24 38          	mov    0x38(%rsp),%ebx
   16b93:	45 31 ea             	xor    %r13d,%r10d
   16b96:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
   16b9a:	45 89 d0             	mov    %r10d,%r8d
   16b9d:	45 89 da             	mov    %r11d,%r10d
   16ba0:	41 21 e8             	and    %ebp,%r8d
   16ba3:	41 c1 c2 05          	rol    $0x5,%r10d
   16ba7:	45 31 e8             	xor    %r13d,%r8d
   16baa:	46 8d 94 13 99 79 82 	lea    0x5a827999(%rbx,%r10,1),%r10d
   16bb1:	5a 
   16bb2:	89 eb                	mov    %ebp,%ebx
   16bb4:	44 89 dd             	mov    %r11d,%ebp
   16bb7:	c1 cb 02             	ror    $0x2,%ebx
   16bba:	45 01 d0             	add    %r10d,%r8d
   16bbd:	45 89 e2             	mov    %r12d,%r10d
   16bc0:	89 6c 24 40          	mov    %ebp,0x40(%rsp)
   16bc4:	41 31 da             	xor    %ebx,%r10d
   16bc7:	45 01 c8             	add    %r9d,%r8d
   16bca:	45 21 da             	and    %r11d,%r10d
   16bcd:	45 89 e3             	mov    %r12d,%r11d
   16bd0:	45 31 e2             	xor    %r12d,%r10d
   16bd3:	41 89 dc             	mov    %ebx,%r12d
   16bd6:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   16bdb:	46 8d 9c 1f 99 79 82 	lea    0x5a827999(%rdi,%r11,1),%r11d
   16be2:	5a 
   16be3:	47 8d ac 15 99 79 82 	lea    0x5a827999(%r13,%r10,1),%r13d
   16bea:	5a 
   16beb:	45 89 c2             	mov    %r8d,%r10d
   16bee:	45 01 f5             	add    %r14d,%r13d
   16bf1:	41 c1 c2 05          	rol    $0x5,%r10d
   16bf5:	45 01 d5             	add    %r10d,%r13d
   16bf8:	41 89 ea             	mov    %ebp,%r10d
   16bfb:	41 c1 ca 02          	ror    $0x2,%r10d
   16bff:	45 31 d4             	xor    %r10d,%r12d
   16c02:	45 21 c4             	and    %r8d,%r12d
   16c05:	41 c1 c8 02          	ror    $0x2,%r8d
   16c09:	41 31 dc             	xor    %ebx,%r12d
   16c0c:	44 89 c5             	mov    %r8d,%ebp
   16c0f:	8d 9c 1e 99 79 82 5a 	lea    0x5a827999(%rsi,%rbx,1),%ebx
   16c16:	45 01 dc             	add    %r11d,%r12d
   16c19:	45 89 eb             	mov    %r13d,%r11d
   16c1c:	41 c1 c3 05          	rol    $0x5,%r11d
   16c20:	45 01 dc             	add    %r11d,%r12d
   16c23:	45 89 d3             	mov    %r10d,%r11d
   16c26:	45 31 c3             	xor    %r8d,%r11d
   16c29:	45 21 eb             	and    %r13d,%r11d
   16c2c:	41 c1 cd 02          	ror    $0x2,%r13d
   16c30:	45 31 d3             	xor    %r10d,%r11d
   16c33:	44 31 ed             	xor    %r13d,%ebp
   16c36:	46 8d 94 11 99 79 82 	lea    0x5a827999(%rcx,%r10,1),%r10d
   16c3d:	5a 
   16c3e:	41 01 db             	add    %ebx,%r11d
   16c41:	44 89 e3             	mov    %r12d,%ebx
   16c44:	44 21 e5             	and    %r12d,%ebp
   16c47:	c1 c3 05             	rol    $0x5,%ebx
   16c4a:	41 01 db             	add    %ebx,%r11d
   16c4d:	44 31 c5             	xor    %r8d,%ebp
   16c50:	41 c1 cc 02          	ror    $0x2,%r12d
   16c54:	46 8d 84 02 99 79 82 	lea    0x5a827999(%rdx,%r8,1),%r8d
   16c5b:	5a 
   16c5c:	44 01 d5             	add    %r10d,%ebp
   16c5f:	45 89 da             	mov    %r11d,%r10d
   16c62:	41 c1 c2 05          	rol    $0x5,%r10d
   16c66:	44 01 d5             	add    %r10d,%ebp
   16c69:	45 89 ea             	mov    %r13d,%r10d
   16c6c:	45 31 e2             	xor    %r12d,%r10d
   16c6f:	45 21 da             	and    %r11d,%r10d
   16c72:	41 c1 cb 02          	ror    $0x2,%r11d
   16c76:	45 31 ea             	xor    %r13d,%r10d
   16c79:	45 01 c2             	add    %r8d,%r10d
   16c7c:	41 89 e8             	mov    %ebp,%r8d
   16c7f:	41 c1 c0 05          	rol    $0x5,%r8d
   16c83:	45 01 c2             	add    %r8d,%r10d
   16c86:	45 89 e0             	mov    %r12d,%r8d
   16c89:	45 31 d8             	xor    %r11d,%r8d
   16c8c:	44 89 c3             	mov    %r8d,%ebx
   16c8f:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   16c94:	21 eb                	and    %ebp,%ebx
   16c96:	c1 cd 02             	ror    $0x2,%ebp
   16c99:	44 31 e3             	xor    %r12d,%ebx
   16c9c:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
   16ca3:	5a 
   16ca4:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   16ca9:	44 01 c3             	add    %r8d,%ebx
   16cac:	45 89 d0             	mov    %r10d,%r8d
   16caf:	41 c1 c0 05          	rol    $0x5,%r8d
   16cb3:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
   16cba:	5a 
   16cbb:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   16cc0:	44 01 c3             	add    %r8d,%ebx
   16cc3:	45 89 d8             	mov    %r11d,%r8d
   16cc6:	41 31 e8             	xor    %ebp,%r8d
   16cc9:	45 21 d0             	and    %r10d,%r8d
   16ccc:	41 c1 ca 02          	ror    $0x2,%r10d
   16cd0:	45 31 d8             	xor    %r11d,%r8d
   16cd3:	47 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%r11,1),%r11d
   16cda:	5a 
   16cdb:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   16ce0:	45 01 e0             	add    %r12d,%r8d
   16ce3:	41 89 dc             	mov    %ebx,%r12d
   16ce6:	41 c1 c4 05          	rol    $0x5,%r12d
   16cea:	45 01 e0             	add    %r12d,%r8d
   16ced:	41 89 ec             	mov    %ebp,%r12d
   16cf0:	45 31 d4             	xor    %r10d,%r12d
   16cf3:	41 21 dc             	and    %ebx,%r12d
   16cf6:	41 31 ec             	xor    %ebp,%r12d
   16cf9:	41 8d ac 2f 99 79 82 	lea    0x5a827999(%r15,%rbp,1),%ebp
   16d00:	5a 
   16d01:	45 01 dc             	add    %r11d,%r12d
   16d04:	45 89 c3             	mov    %r8d,%r11d
   16d07:	41 c1 c3 05          	rol    $0x5,%r11d
   16d0b:	45 01 dc             	add    %r11d,%r12d
   16d0e:	c1 cb 02             	ror    $0x2,%ebx
   16d11:	45 89 d3             	mov    %r10d,%r11d
   16d14:	41 31 db             	xor    %ebx,%r11d
   16d17:	45 21 c3             	and    %r8d,%r11d
   16d1a:	41 c1 c8 02          	ror    $0x2,%r8d
   16d1e:	45 31 d3             	xor    %r10d,%r11d
   16d21:	46 8d 94 10 99 79 82 	lea    0x5a827999(%rax,%r10,1),%r10d
   16d28:	5a 
   16d29:	41 01 eb             	add    %ebp,%r11d
   16d2c:	44 89 e5             	mov    %r12d,%ebp
   16d2f:	c1 c5 05             	rol    $0x5,%ebp
   16d32:	41 01 eb             	add    %ebp,%r11d
   16d35:	89 dd                	mov    %ebx,%ebp
   16d37:	44 31 c5             	xor    %r8d,%ebp
   16d3a:	44 21 e5             	and    %r12d,%ebp
   16d3d:	41 c1 cc 02          	ror    $0x2,%r12d
   16d41:	31 dd                	xor    %ebx,%ebp
   16d43:	41 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%rbx,1),%ebx
   16d4a:	5a 
   16d4b:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   16d50:	44 01 d5             	add    %r10d,%ebp
   16d53:	45 89 da             	mov    %r11d,%r10d
   16d56:	41 c1 c2 05          	rol    $0x5,%r10d
   16d5a:	44 01 d5             	add    %r10d,%ebp
   16d5d:	45 89 c2             	mov    %r8d,%r10d
   16d60:	45 31 e2             	xor    %r12d,%r10d
   16d63:	89 e8                	mov    %ebp,%eax
   16d65:	45 21 da             	and    %r11d,%r10d
   16d68:	c1 c0 05             	rol    $0x5,%eax
   16d6b:	45 31 c2             	xor    %r8d,%r10d
   16d6e:	41 c1 cb 02          	ror    $0x2,%r11d
   16d72:	47 8d 84 05 99 79 82 	lea    0x5a827999(%r13,%r8,1),%r8d
   16d79:	5a 
   16d7a:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
   16d7f:	41 01 da             	add    %ebx,%r10d
   16d82:	41 01 c2             	add    %eax,%r10d
   16d85:	44 89 e0             	mov    %r12d,%eax
   16d88:	44 31 d8             	xor    %r11d,%eax
   16d8b:	89 c3                	mov    %eax,%ebx
   16d8d:	8b 04 24             	mov    (%rsp),%eax
   16d90:	21 eb                	and    %ebp,%ebx
   16d92:	c1 cd 02             	ror    $0x2,%ebp
   16d95:	44 31 e3             	xor    %r12d,%ebx
   16d98:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
   16d9f:	5a 
   16da0:	44 01 c3             	add    %r8d,%ebx
   16da3:	45 89 d0             	mov    %r10d,%r8d
   16da6:	41 c1 c0 05          	rol    $0x5,%r8d
   16daa:	44 01 c3             	add    %r8d,%ebx
   16dad:	45 89 d8             	mov    %r11d,%r8d
   16db0:	41 31 e8             	xor    %ebp,%r8d
   16db3:	45 21 d0             	and    %r10d,%r8d
   16db6:	45 31 d8             	xor    %r11d,%r8d
   16db9:	46 8d 9c 18 99 79 82 	lea    0x5a827999(%rax,%r11,1),%r11d
   16dc0:	5a 
   16dc1:	8b 44 24 04          	mov    0x4(%rsp),%eax
   16dc5:	45 01 e0             	add    %r12d,%r8d
   16dc8:	41 89 dc             	mov    %ebx,%r12d
   16dcb:	41 c1 ca 02          	ror    $0x2,%r10d
   16dcf:	41 31 f9             	xor    %edi,%r9d
   16dd2:	41 c1 c4 05          	rol    $0x5,%r12d
   16dd6:	44 33 4c 24 1c       	xor    0x1c(%rsp),%r9d
   16ddb:	41 31 f6             	xor    %esi,%r14d
   16dde:	45 01 e0             	add    %r12d,%r8d
   16de1:	41 89 ec             	mov    %ebp,%r12d
   16de4:	45 31 e9             	xor    %r13d,%r9d
   16de7:	45 31 d4             	xor    %r10d,%r12d
   16dea:	41 d1 c1             	rol    %r9d
   16ded:	41 21 dc             	and    %ebx,%r12d
   16df0:	c1 cb 02             	ror    $0x2,%ebx
   16df3:	41 31 ec             	xor    %ebp,%r12d
   16df6:	8d ac 28 99 79 82 5a 	lea    0x5a827999(%rax,%rbp,1),%ebp
   16dfd:	45 01 dc             	add    %r11d,%r12d
   16e00:	45 89 c3             	mov    %r8d,%r11d
   16e03:	41 c1 c3 05          	rol    $0x5,%r11d
   16e07:	45 01 dc             	add    %r11d,%r12d
   16e0a:	45 89 d3             	mov    %r10d,%r11d
   16e0d:	41 31 db             	xor    %ebx,%r11d
   16e10:	45 21 c3             	and    %r8d,%r11d
   16e13:	41 c1 c8 02          	ror    $0x2,%r8d
   16e17:	45 31 d3             	xor    %r10d,%r11d
   16e1a:	47 8d 94 0a 99 79 82 	lea    0x5a827999(%r10,%r9,1),%r10d
   16e21:	5a 
   16e22:	41 01 eb             	add    %ebp,%r11d
   16e25:	44 89 e5             	mov    %r12d,%ebp
   16e28:	c1 c5 05             	rol    $0x5,%ebp
   16e2b:	41 01 eb             	add    %ebp,%r11d
   16e2e:	89 dd                	mov    %ebx,%ebp
   16e30:	44 31 c5             	xor    %r8d,%ebp
   16e33:	44 21 e5             	and    %r12d,%ebp
   16e36:	41 c1 cc 02          	ror    $0x2,%r12d
   16e3a:	31 dd                	xor    %ebx,%ebp
   16e3c:	44 01 d5             	add    %r10d,%ebp
   16e3f:	45 89 da             	mov    %r11d,%r10d
   16e42:	41 c1 c2 05          	rol    $0x5,%r10d
   16e46:	44 01 d5             	add    %r10d,%ebp
   16e49:	45 89 f2             	mov    %r14d,%r10d
   16e4c:	45 31 fa             	xor    %r15d,%r10d
   16e4f:	44 33 14 24          	xor    (%rsp),%r10d
   16e53:	45 89 d6             	mov    %r10d,%r14d
   16e56:	45 89 c2             	mov    %r8d,%r10d
   16e59:	41 d1 c6             	rol    %r14d
   16e5c:	45 31 e2             	xor    %r12d,%r10d
   16e5f:	31 cf                	xor    %ecx,%edi
   16e61:	33 7c 24 28          	xor    0x28(%rsp),%edi
   16e65:	45 21 da             	and    %r11d,%r10d
   16e68:	44 89 f0             	mov    %r14d,%eax
   16e6b:	42 8d 9c 33 99 79 82 	lea    0x5a827999(%rbx,%r14,1),%ebx
   16e72:	5a 
   16e73:	31 d6                	xor    %edx,%esi
   16e75:	45 31 c2             	xor    %r8d,%r10d
   16e78:	41 89 ee             	mov    %ebp,%r14d
   16e7b:	41 c1 cb 02          	ror    $0x2,%r11d
   16e7f:	33 7c 24 04          	xor    0x4(%rsp),%edi
   16e83:	41 01 da             	add    %ebx,%r10d
   16e86:	41 c1 c6 05          	rol    $0x5,%r14d
   16e8a:	33 74 24 08          	xor    0x8(%rsp),%esi
   16e8e:	33 4c 24 14          	xor    0x14(%rsp),%ecx
   16e92:	45 01 f2             	add    %r14d,%r10d
   16e95:	45 89 e6             	mov    %r12d,%r14d
   16e98:	d1 c7                	rol    %edi
   16e9a:	44 31 ce             	xor    %r9d,%esi
   16e9d:	45 31 de             	xor    %r11d,%r14d
   16ea0:	d1 c6                	rol    %esi
   16ea2:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   16ea6:	89 44 24 20          	mov    %eax,0x20(%rsp)
   16eaa:	44 89 f3             	mov    %r14d,%ebx
   16ead:	45 8d 84 38 99 79 82 	lea    0x5a827999(%r8,%rdi,1),%r8d
   16eb4:	5a 
   16eb5:	45 89 d6             	mov    %r10d,%r14d
   16eb8:	21 eb                	and    %ebp,%ebx
   16eba:	41 c1 c6 05          	rol    $0x5,%r14d
   16ebe:	44 31 e3             	xor    %r12d,%ebx
   16ec1:	c1 cd 02             	ror    $0x2,%ebp
   16ec4:	45 8d a4 34 99 79 82 	lea    0x5a827999(%r12,%rsi,1),%r12d
   16ecb:	5a 
   16ecc:	44 01 c3             	add    %r8d,%ebx
   16ecf:	44 01 f3             	add    %r14d,%ebx
   16ed2:	45 89 de             	mov    %r11d,%r14d
   16ed5:	41 31 ee             	xor    %ebp,%r14d
   16ed8:	45 89 f0             	mov    %r14d,%r8d
   16edb:	41 89 ee             	mov    %ebp,%r14d
   16ede:	45 21 d0             	and    %r10d,%r8d
   16ee1:	41 c1 ca 02          	ror    $0x2,%r10d
   16ee5:	45 31 d8             	xor    %r11d,%r8d
   16ee8:	45 01 e0             	add    %r12d,%r8d
   16eeb:	41 89 dc             	mov    %ebx,%r12d
   16eee:	41 c1 c4 05          	rol    $0x5,%r12d
   16ef2:	45 01 e0             	add    %r12d,%r8d
   16ef5:	31 c1                	xor    %eax,%ecx
   16ef7:	33 54 24 18          	xor    0x18(%rsp),%edx
   16efb:	45 31 d6             	xor    %r10d,%r14d
   16efe:	44 31 ea             	xor    %r13d,%edx
   16f01:	d1 c1                	rol    %ecx
   16f03:	41 31 de             	xor    %ebx,%r14d
   16f06:	31 fa                	xor    %edi,%edx
   16f08:	45 8d 9c 0b a1 eb d9 	lea    0x6ed9eba1(%r11,%rcx,1),%r11d
   16f0f:	6e 
   16f10:	c1 cb 02             	ror    $0x2,%ebx
   16f13:	d1 c2                	rol    %edx
   16f15:	45 01 de             	add    %r11d,%r14d
   16f18:	45 89 c3             	mov    %r8d,%r11d
   16f1b:	89 d0                	mov    %edx,%eax
   16f1d:	44 89 d2             	mov    %r10d,%edx
   16f20:	41 c1 c3 05          	rol    $0x5,%r11d
   16f24:	31 da                	xor    %ebx,%edx
   16f26:	45 01 de             	add    %r11d,%r14d
   16f29:	44 8d 9c 05 a1 eb d9 	lea    0x6ed9eba1(%rbp,%rax,1),%r11d
   16f30:	6e 
   16f31:	89 44 24 24          	mov    %eax,0x24(%rsp)
   16f35:	41 89 d5             	mov    %edx,%r13d
   16f38:	44 89 f2             	mov    %r14d,%edx
   16f3b:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   16f3f:	45 31 c5             	xor    %r8d,%r13d
   16f42:	c1 c2 05             	rol    $0x5,%edx
   16f45:	45 01 dd             	add    %r11d,%r13d
   16f48:	44 8b 1c 24          	mov    (%rsp),%r11d
   16f4c:	41 c1 c8 02          	ror    $0x2,%r8d
   16f50:	41 01 d5             	add    %edx,%r13d
   16f53:	8b 54 24 14          	mov    0x14(%rsp),%edx
   16f57:	31 c2                	xor    %eax,%edx
   16f59:	41 31 d3             	xor    %edx,%r11d
   16f5c:	89 da                	mov    %ebx,%edx
   16f5e:	44 31 c2             	xor    %r8d,%edx
   16f61:	41 31 f3             	xor    %esi,%r11d
   16f64:	41 d1 c3             	rol    %r11d
   16f67:	41 89 d4             	mov    %edx,%r12d
   16f6a:	44 89 ea             	mov    %r13d,%edx
   16f6d:	45 31 f4             	xor    %r14d,%r12d
   16f70:	47 8d 94 1a a1 eb d9 	lea    0x6ed9eba1(%r10,%r11,1),%r10d
   16f77:	6e 
   16f78:	c1 c2 05             	rol    $0x5,%edx
   16f7b:	45 01 d4             	add    %r10d,%r12d
   16f7e:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
   16f83:	41 c1 ce 02          	ror    $0x2,%r14d
   16f87:	41 01 d4             	add    %edx,%r12d
   16f8a:	44 89 c2             	mov    %r8d,%edx
   16f8d:	45 31 fa             	xor    %r15d,%r10d
   16f90:	44 33 54 24 04       	xor    0x4(%rsp),%r10d
   16f95:	41 31 ca             	xor    %ecx,%r10d
   16f98:	41 d1 c2             	rol    %r10d
   16f9b:	44 31 f2             	xor    %r14d,%edx
   16f9e:	44 33 7c 24 08       	xor    0x8(%rsp),%r15d
   16fa3:	89 d5                	mov    %edx,%ebp
   16fa5:	42 8d 9c 13 a1 eb d9 	lea    0x6ed9eba1(%rbx,%r10,1),%ebx
   16fac:	6e 
   16fad:	44 89 e2             	mov    %r12d,%edx
   16fb0:	44 31 ed             	xor    %r13d,%ebp
   16fb3:	c1 c2 05             	rol    $0x5,%edx
   16fb6:	01 dd                	add    %ebx,%ebp
   16fb8:	41 c1 cd 02          	ror    $0x2,%r13d
   16fbc:	44 89 f3             	mov    %r14d,%ebx
   16fbf:	01 d5                	add    %edx,%ebp
   16fc1:	8b 54 24 28          	mov    0x28(%rsp),%edx
   16fc5:	44 31 eb             	xor    %r13d,%ebx
   16fc8:	44 31 e3             	xor    %r12d,%ebx
   16fcb:	41 c1 cc 02          	ror    $0x2,%r12d
   16fcf:	31 d0                	xor    %edx,%eax
   16fd1:	33 54 24 0c          	xor    0xc(%rsp),%edx
   16fd5:	44 31 c8             	xor    %r9d,%eax
   16fd8:	33 44 24 24          	xor    0x24(%rsp),%eax
   16fdc:	d1 c0                	rol    %eax
   16fde:	45 8d 84 00 a1 eb d9 	lea    0x6ed9eba1(%r8,%rax,1),%r8d
   16fe5:	6e 
   16fe6:	44 01 c3             	add    %r8d,%ebx
   16fe9:	41 89 e8             	mov    %ebp,%r8d
   16fec:	41 c1 c0 05          	rol    $0x5,%r8d
   16ff0:	44 01 c3             	add    %r8d,%ebx
   16ff3:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
   16ff8:	45 31 f8             	xor    %r15d,%r8d
   16ffb:	45 89 ef             	mov    %r13d,%r15d
   16ffe:	45 31 d8             	xor    %r11d,%r8d
   17001:	45 31 e7             	xor    %r12d,%r15d
   17004:	41 d1 c0             	rol    %r8d
   17007:	41 31 ef             	xor    %ebp,%r15d
   1700a:	c1 cd 02             	ror    $0x2,%ebp
   1700d:	47 8d b4 06 a1 eb d9 	lea    0x6ed9eba1(%r14,%r8,1),%r14d
   17014:	6e 
   17015:	45 01 f7             	add    %r14d,%r15d
   17018:	41 89 de             	mov    %ebx,%r14d
   1701b:	41 c1 c6 05          	rol    $0x5,%r14d
   1701f:	45 01 f7             	add    %r14d,%r15d
   17022:	41 89 d6             	mov    %edx,%r14d
   17025:	41 31 fe             	xor    %edi,%r14d
   17028:	45 31 d6             	xor    %r10d,%r14d
   1702b:	41 d1 c6             	rol    %r14d
   1702e:	44 89 f2             	mov    %r14d,%edx
   17031:	45 89 e6             	mov    %r12d,%r14d
   17034:	41 31 ee             	xor    %ebp,%r14d
   17037:	45 8d ac 15 a1 eb d9 	lea    0x6ed9eba1(%r13,%rdx,1),%r13d
   1703e:	6e 
   1703f:	89 54 24 14          	mov    %edx,0x14(%rsp)
   17043:	8b 54 24 08          	mov    0x8(%rsp),%edx
   17047:	41 31 de             	xor    %ebx,%r14d
   1704a:	45 01 ee             	add    %r13d,%r14d
   1704d:	45 89 fd             	mov    %r15d,%r13d
   17050:	33 54 24 10          	xor    0x10(%rsp),%edx
   17054:	c1 cb 02             	ror    $0x2,%ebx
   17057:	41 c1 c5 05          	rol    $0x5,%r13d
   1705b:	45 01 ee             	add    %r13d,%r14d
   1705e:	41 89 d5             	mov    %edx,%r13d
   17061:	41 31 f5             	xor    %esi,%r13d
   17064:	41 31 c5             	xor    %eax,%r13d
   17067:	44 89 ea             	mov    %r13d,%edx
   1706a:	41 89 ed             	mov    %ebp,%r13d
   1706d:	d1 c2                	rol    %edx
   1706f:	41 31 dd             	xor    %ebx,%r13d
   17072:	45 31 fd             	xor    %r15d,%r13d
   17075:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
   1707c:	6e 
   1707d:	89 54 24 08          	mov    %edx,0x8(%rsp)
   17081:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   17085:	45 01 e5             	add    %r12d,%r13d
   17088:	45 89 f4             	mov    %r14d,%r12d
   1708b:	33 14 24             	xor    (%rsp),%edx
   1708e:	41 c1 cf 02          	ror    $0x2,%r15d
   17092:	41 c1 c4 05          	rol    $0x5,%r12d
   17096:	45 01 e5             	add    %r12d,%r13d
   17099:	41 89 d4             	mov    %edx,%r12d
   1709c:	41 31 cc             	xor    %ecx,%r12d
   1709f:	45 31 c4             	xor    %r8d,%r12d
   170a2:	41 d1 c4             	rol    %r12d
   170a5:	44 89 e2             	mov    %r12d,%edx
   170a8:	41 89 dc             	mov    %ebx,%r12d
   170ab:	45 31 fc             	xor    %r15d,%r12d
   170ae:	8d ac 15 a1 eb d9 6e 	lea    0x6ed9eba1(%rbp,%rdx,1),%ebp
   170b5:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   170b9:	45 31 f4             	xor    %r14d,%r12d
   170bc:	41 c1 ce 02          	ror    $0x2,%r14d
   170c0:	41 01 ec             	add    %ebp,%r12d
   170c3:	44 89 ed             	mov    %r13d,%ebp
   170c6:	c1 c5 05             	rol    $0x5,%ebp
   170c9:	41 01 ec             	add    %ebp,%r12d
   170cc:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
   170d0:	33 6c 24 04          	xor    0x4(%rsp),%ebp
   170d4:	33 6c 24 24          	xor    0x24(%rsp),%ebp
   170d8:	33 6c 24 14          	xor    0x14(%rsp),%ebp
   170dc:	d1 c5                	rol    %ebp
   170de:	89 ea                	mov    %ebp,%edx
   170e0:	44 89 fd             	mov    %r15d,%ebp
   170e3:	44 31 f5             	xor    %r14d,%ebp
   170e6:	8d 9c 13 a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rdx,1),%ebx
   170ed:	89 54 24 28          	mov    %edx,0x28(%rsp)
   170f1:	44 31 ed             	xor    %r13d,%ebp
   170f4:	01 dd                	add    %ebx,%ebp
   170f6:	44 89 e3             	mov    %r12d,%ebx
   170f9:	c1 c3 05             	rol    $0x5,%ebx
   170fc:	01 dd                	add    %ebx,%ebp
   170fe:	8b 1c 24             	mov    (%rsp),%ebx
   17101:	41 c1 cd 02          	ror    $0x2,%r13d
   17105:	44 31 cb             	xor    %r9d,%ebx
   17108:	41 31 f9             	xor    %edi,%r9d
   1710b:	44 31 db             	xor    %r11d,%ebx
   1710e:	33 5c 24 08          	xor    0x8(%rsp),%ebx
   17112:	41 31 c1             	xor    %eax,%r9d
   17115:	44 33 4c 24 28       	xor    0x28(%rsp),%r9d
   1711a:	d1 c3                	rol    %ebx
   1711c:	89 da                	mov    %ebx,%edx
   1711e:	44 89 f3             	mov    %r14d,%ebx
   17121:	44 31 eb             	xor    %r13d,%ebx
   17124:	45 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%r15,%rdx,1),%r15d
   1712b:	6e 
   1712c:	89 14 24             	mov    %edx,(%rsp)
   1712f:	44 31 e3             	xor    %r12d,%ebx
   17132:	41 c1 cc 02          	ror    $0x2,%r12d
   17136:	44 01 fb             	add    %r15d,%ebx
   17139:	41 89 ef             	mov    %ebp,%r15d
   1713c:	41 c1 c7 05          	rol    $0x5,%r15d
   17140:	44 01 fb             	add    %r15d,%ebx
   17143:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
   17148:	44 33 7c 24 20       	xor    0x20(%rsp),%r15d
   1714d:	45 31 d7             	xor    %r10d,%r15d
   17150:	44 33 7c 24 0c       	xor    0xc(%rsp),%r15d
   17155:	41 d1 c7             	rol    %r15d
   17158:	44 89 fa             	mov    %r15d,%edx
   1715b:	45 89 ef             	mov    %r13d,%r15d
   1715e:	45 31 e7             	xor    %r12d,%r15d
   17161:	45 8d b4 16 a1 eb d9 	lea    0x6ed9eba1(%r14,%rdx,1),%r14d
   17168:	6e 
   17169:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1716d:	41 31 ef             	xor    %ebp,%r15d
   17170:	c1 cd 02             	ror    $0x2,%ebp
   17173:	45 01 f7             	add    %r14d,%r15d
   17176:	41 89 de             	mov    %ebx,%r14d
   17179:	41 c1 c6 05          	rol    $0x5,%r14d
   1717d:	45 01 fe             	add    %r15d,%r14d
   17180:	45 89 cf             	mov    %r9d,%r15d
   17183:	45 89 e1             	mov    %r12d,%r9d
   17186:	41 d1 c7             	rol    %r15d
   17189:	41 31 e9             	xor    %ebp,%r9d
   1718c:	41 31 d9             	xor    %ebx,%r9d
   1718f:	47 8d ac 3d a1 eb d9 	lea    0x6ed9eba1(%r13,%r15,1),%r13d
   17196:	6e 
   17197:	c1 cb 02             	ror    $0x2,%ebx
   1719a:	45 01 cd             	add    %r9d,%r13d
   1719d:	45 89 f1             	mov    %r14d,%r9d
   171a0:	41 c1 c1 05          	rol    $0x5,%r9d
   171a4:	45 01 e9             	add    %r13d,%r9d
   171a7:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   171ac:	41 31 f5             	xor    %esi,%r13d
   171af:	31 cf                	xor    %ecx,%edi
   171b1:	44 31 d9             	xor    %r11d,%ecx
   171b4:	45 31 c5             	xor    %r8d,%r13d
   171b7:	44 33 2c 24          	xor    (%rsp),%r13d
   171bb:	41 d1 c5             	rol    %r13d
   171be:	44 89 ea             	mov    %r13d,%edx
   171c1:	41 89 ed             	mov    %ebp,%r13d
   171c4:	41 31 dd             	xor    %ebx,%r13d
   171c7:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
   171ce:	6e 
   171cf:	89 54 24 18          	mov    %edx,0x18(%rsp)
   171d3:	33 7c 24 14          	xor    0x14(%rsp),%edi
   171d7:	45 31 f5             	xor    %r14d,%r13d
   171da:	33 7c 24 10          	xor    0x10(%rsp),%edi
   171de:	41 c1 ce 02          	ror    $0x2,%r14d
   171e2:	8b 54 24 24          	mov    0x24(%rsp),%edx
   171e6:	45 01 e5             	add    %r12d,%r13d
   171e9:	45 89 cc             	mov    %r9d,%r12d
   171ec:	d1 c7                	rol    %edi
   171ee:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   171f2:	41 c1 c4 05          	rol    $0x5,%r12d
   171f6:	31 d6                	xor    %edx,%esi
   171f8:	33 74 24 08          	xor    0x8(%rsp),%esi
   171fc:	45 01 ec             	add    %r13d,%r12d
   171ff:	41 89 fd             	mov    %edi,%r13d
   17202:	89 df                	mov    %ebx,%edi
   17204:	44 31 fe             	xor    %r15d,%esi
   17207:	44 31 f7             	xor    %r14d,%edi
   1720a:	42 8d ac 2d a1 eb d9 	lea    0x6ed9eba1(%rbp,%r13,1),%ebp
   17211:	6e 
   17212:	d1 c6                	rol    %esi
   17214:	44 31 cf             	xor    %r9d,%edi
   17217:	41 c1 c9 02          	ror    $0x2,%r9d
   1721b:	01 fd                	add    %edi,%ebp
   1721d:	44 89 e7             	mov    %r12d,%edi
   17220:	c1 c7 05             	rol    $0x5,%edi
   17223:	01 ef                	add    %ebp,%edi
   17225:	89 f5                	mov    %esi,%ebp
   17227:	44 89 f6             	mov    %r14d,%esi
   1722a:	44 31 ce             	xor    %r9d,%esi
   1722d:	8d 9c 2b a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rbp,1),%ebx
   17234:	44 31 e6             	xor    %r12d,%esi
   17237:	41 c1 cc 02          	ror    $0x2,%r12d
   1723b:	01 f3                	add    %esi,%ebx
   1723d:	89 fe                	mov    %edi,%esi
   1723f:	c1 c6 05             	rol    $0x5,%esi
   17242:	01 de                	add    %ebx,%esi
   17244:	33 4c 24 18          	xor    0x18(%rsp),%ecx
   17248:	44 89 cb             	mov    %r9d,%ebx
   1724b:	44 31 d2             	xor    %r10d,%edx
   1724e:	d1 c1                	rol    %ecx
   17250:	44 31 e3             	xor    %r12d,%ebx
   17253:	41 31 c3             	xor    %eax,%r11d
   17256:	44 33 1c 24          	xor    (%rsp),%r11d
   1725a:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   1725e:	31 fb                	xor    %edi,%ebx
   17260:	c1 cf 02             	ror    $0x2,%edi
   17263:	41 31 eb             	xor    %ebp,%r11d
   17266:	41 8d 8c 0e a1 eb d9 	lea    0x6ed9eba1(%r14,%rcx,1),%ecx
   1726d:	6e 
   1726e:	41 89 f6             	mov    %esi,%r14d
   17271:	45 31 c2             	xor    %r8d,%r10d
   17274:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
   17279:	41 c1 c6 05          	rol    $0x5,%r14d
   1727d:	01 cb                	add    %ecx,%ebx
   1727f:	44 33 54 24 1c       	xor    0x1c(%rsp),%r10d
   17284:	44 89 f1             	mov    %r14d,%ecx
   17287:	41 d1 c2             	rol    %r10d
   1728a:	01 d9                	add    %ebx,%ecx
   1728c:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   17290:	44 89 54 24 2c       	mov    %r10d,0x2c(%rsp)
   17295:	31 da                	xor    %ebx,%edx
   17297:	44 31 ea             	xor    %r13d,%edx
   1729a:	41 89 d6             	mov    %edx,%r14d
   1729d:	44 89 e2             	mov    %r12d,%edx
   172a0:	41 d1 c6             	rol    %r14d
   172a3:	31 fa                	xor    %edi,%edx
   172a5:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
   172aa:	47 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%r9,%r14,1),%r9d
   172b1:	6e 
   172b2:	41 89 ce             	mov    %ecx,%r14d
   172b5:	31 f2                	xor    %esi,%edx
   172b7:	41 c1 c6 05          	rol    $0x5,%r14d
   172bb:	41 01 d1             	add    %edx,%r9d
   172be:	c1 ce 02             	ror    $0x2,%esi
   172c1:	44 89 f2             	mov    %r14d,%edx
   172c4:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
   172c9:	44 01 ca             	add    %r9d,%edx
   172cc:	45 89 d9             	mov    %r11d,%r9d
   172cf:	41 89 fb             	mov    %edi,%r11d
   172d2:	41 d1 c1             	rol    %r9d
   172d5:	41 31 f3             	xor    %esi,%r11d
   172d8:	42 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%rdi,%r10,1),%edi
   172df:	6e 
   172e0:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
   172e5:	41 31 cb             	xor    %ecx,%r11d
   172e8:	47 8d 8c 0c a1 eb d9 	lea    0x6ed9eba1(%r12,%r9,1),%r9d
   172ef:	6e 
   172f0:	41 89 d4             	mov    %edx,%r12d
   172f3:	41 c1 c4 05          	rol    $0x5,%r12d
   172f7:	45 01 cb             	add    %r9d,%r11d
   172fa:	c1 c9 02             	ror    $0x2,%ecx
   172fd:	45 01 e3             	add    %r12d,%r11d
   17300:	41 89 f4             	mov    %esi,%r12d
   17303:	41 31 cc             	xor    %ecx,%r12d
   17306:	44 31 f0             	xor    %r14d,%eax
   17309:	45 89 e1             	mov    %r12d,%r9d
   1730c:	45 89 dc             	mov    %r11d,%r12d
   1730f:	44 31 f8             	xor    %r15d,%eax
   17312:	33 44 24 20          	xor    0x20(%rsp),%eax
   17316:	41 c1 c4 05          	rol    $0x5,%r12d
   1731a:	41 31 d1             	xor    %edx,%r9d
   1731d:	d1 c0                	rol    %eax
   1731f:	44 01 cf             	add    %r9d,%edi
   17322:	89 44 24 14          	mov    %eax,0x14(%rsp)
   17326:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
   1732b:	c1 ca 02             	ror    $0x2,%edx
   1732e:	44 01 e7             	add    %r12d,%edi
   17331:	8d b4 06 dc bc 1b 8f 	lea    -0x70e44324(%rsi,%rax,1),%esi
   17338:	45 89 dc             	mov    %r11d,%r12d
   1733b:	89 f8                	mov    %edi,%eax
   1733d:	45 31 c8             	xor    %r9d,%r8d
   17340:	44 33 44 24 18       	xor    0x18(%rsp),%r8d
   17345:	44 33 44 24 04       	xor    0x4(%rsp),%r8d
   1734a:	c1 c0 05             	rol    $0x5,%eax
   1734d:	41 21 d4             	and    %edx,%r12d
   17350:	41 d1 c0             	rol    %r8d
   17353:	01 c6                	add    %eax,%esi
   17355:	44 89 d8             	mov    %r11d,%eax
   17358:	41 c1 cb 02          	ror    $0x2,%r11d
   1735c:	09 d0                	or     %edx,%eax
   1735e:	21 c8                	and    %ecx,%eax
   17360:	44 09 e0             	or     %r12d,%eax
   17363:	45 89 c4             	mov    %r8d,%r12d
   17366:	41 89 f8             	mov    %edi,%r8d
   17369:	01 c6                	add    %eax,%esi
   1736b:	45 09 d8             	or     %r11d,%r8d
   1736e:	89 f8                	mov    %edi,%eax
   17370:	44 89 64 24 08       	mov    %r12d,0x8(%rsp)
   17375:	41 21 d0             	and    %edx,%r8d
   17378:	44 21 d8             	and    %r11d,%eax
   1737b:	c1 cf 02             	ror    $0x2,%edi
   1737e:	44 09 c0             	or     %r8d,%eax
   17381:	46 8d 84 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%r8d
   17388:	8f 
   17389:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   1738e:	89 f1                	mov    %esi,%ecx
   17390:	41 01 c0             	add    %eax,%r8d
   17393:	c1 c1 05             	rol    $0x5,%ecx
   17396:	45 31 e6             	xor    %r12d,%r14d
   17399:	41 01 c8             	add    %ecx,%r8d
   1739c:	45 31 ee             	xor    %r13d,%r14d
   1739f:	44 89 c1             	mov    %r8d,%ecx
   173a2:	45 31 d6             	xor    %r10d,%r14d
   173a5:	c1 c1 05             	rol    $0x5,%ecx
   173a8:	41 31 d9             	xor    %ebx,%r9d
   173ab:	44 33 24 24          	xor    (%rsp),%r12d
   173af:	41 d1 c6             	rol    %r14d
   173b2:	89 c8                	mov    %ecx,%eax
   173b4:	89 f1                	mov    %esi,%ecx
   173b6:	45 89 ca             	mov    %r9d,%r10d
   173b9:	42 8d 94 32 dc bc 1b 	lea    -0x70e44324(%rdx,%r14,1),%edx
   173c0:	8f 
   173c1:	21 f9                	and    %edi,%ecx
   173c3:	41 31 ea             	xor    %ebp,%r10d
   173c6:	41 89 d9             	mov    %ebx,%r9d
   173c9:	01 d0                	add    %edx,%eax
   173cb:	89 f2                	mov    %esi,%edx
   173cd:	c1 ce 02             	ror    $0x2,%esi
   173d0:	44 33 54 24 14       	xor    0x14(%rsp),%r10d
   173d5:	09 fa                	or     %edi,%edx
   173d7:	41 d1 c2             	rol    %r10d
   173da:	44 33 64 24 1c       	xor    0x1c(%rsp),%r12d
   173df:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
   173e4:	44 21 da             	and    %r11d,%edx
   173e7:	44 89 54 24 0c       	mov    %r10d,0xc(%rsp)
   173ec:	41 d1 c4             	rol    %r12d
   173ef:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   173f3:	09 ca                	or     %ecx,%edx
   173f5:	44 89 c1             	mov    %r8d,%ecx
   173f8:	47 8d 94 13 dc bc 1b 	lea    -0x70e44324(%r11,%r10,1),%r10d
   173ff:	8f 
   17400:	01 c2                	add    %eax,%edx
   17402:	09 f1                	or     %esi,%ecx
   17404:	46 8d 9c 27 dc bc 1b 	lea    -0x70e44324(%rdi,%r12,1),%r11d
   1740b:	8f 
   1740c:	44 89 c0             	mov    %r8d,%eax
   1740f:	21 f9                	and    %edi,%ecx
   17411:	21 f0                	and    %esi,%eax
   17413:	41 c1 c8 02          	ror    $0x2,%r8d
   17417:	09 c8                	or     %ecx,%eax
   17419:	8b 0c 24             	mov    (%rsp),%ecx
   1741c:	41 01 c2             	add    %eax,%r10d
   1741f:	89 d0                	mov    %edx,%eax
   17421:	c1 c0 05             	rol    $0x5,%eax
   17424:	41 01 c2             	add    %eax,%r10d
   17427:	44 89 d7             	mov    %r10d,%edi
   1742a:	c1 c7 05             	rol    $0x5,%edi
   1742d:	89 f8                	mov    %edi,%eax
   1742f:	89 d7                	mov    %edx,%edi
   17431:	44 09 c7             	or     %r8d,%edi
   17434:	44 01 d8             	add    %r11d,%eax
   17437:	41 89 fb             	mov    %edi,%r11d
   1743a:	89 d7                	mov    %edx,%edi
   1743c:	44 21 c7             	and    %r8d,%edi
   1743f:	41 21 f3             	and    %esi,%r11d
   17442:	41 09 fb             	or     %edi,%r11d
   17445:	41 01 c3             	add    %eax,%r11d
   17448:	41 31 d9             	xor    %ebx,%r9d
   1744b:	44 33 4c 24 20       	xor    0x20(%rsp),%r9d
   17450:	c1 ca 02             	ror    $0x2,%edx
   17453:	45 31 f1             	xor    %r14d,%r9d
   17456:	44 31 f9             	xor    %r15d,%ecx
   17459:	33 4c 24 04          	xor    0x4(%rsp),%ecx
   1745d:	44 89 cf             	mov    %r9d,%edi
   17460:	d1 c7                	rol    %edi
   17462:	41 89 f9             	mov    %edi,%r9d
   17465:	44 89 d7             	mov    %r10d,%edi
   17468:	09 d7                	or     %edx,%edi
   1746a:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   1746f:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
   17473:	89 f8                	mov    %edi,%eax
   17475:	44 89 d7             	mov    %r10d,%edi
   17478:	41 c1 ca 02          	ror    $0x2,%r10d
   1747c:	44 21 c0             	and    %r8d,%eax
   1747f:	21 d7                	and    %edx,%edi
   17481:	09 c7                	or     %eax,%edi
   17483:	42 8d 84 0e dc bc 1b 	lea    -0x70e44324(%rsi,%r9,1),%eax
   1748a:	8f 
   1748b:	44 89 de             	mov    %r11d,%esi
   1748e:	44 8b 4c 24 18       	mov    0x18(%rsp),%r9d
   17493:	01 c7                	add    %eax,%edi
   17495:	c1 c6 05             	rol    $0x5,%esi
   17498:	01 f7                	add    %esi,%edi
   1749a:	89 ce                	mov    %ecx,%esi
   1749c:	d1 c6                	rol    %esi
   1749e:	89 74 24 24          	mov    %esi,0x24(%rsp)
   174a2:	41 8d b4 30 dc bc 1b 	lea    -0x70e44324(%r8,%rsi,1),%esi
   174a9:	8f 
   174aa:	41 89 f8             	mov    %edi,%r8d
   174ad:	41 c1 c0 05          	rol    $0x5,%r8d
   174b1:	44 89 c0             	mov    %r8d,%eax
   174b4:	45 89 d8             	mov    %r11d,%r8d
   174b7:	45 09 d0             	or     %r10d,%r8d
   174ba:	01 f0                	add    %esi,%eax
   174bc:	44 89 c1             	mov    %r8d,%ecx
   174bf:	45 89 d8             	mov    %r11d,%r8d
   174c2:	41 c1 cb 02          	ror    $0x2,%r11d
   174c6:	45 21 d0             	and    %r10d,%r8d
   174c9:	21 d1                	and    %edx,%ecx
   174cb:	44 89 c6             	mov    %r8d,%esi
   174ce:	09 ce                	or     %ecx,%esi
   174d0:	89 f9                	mov    %edi,%ecx
   174d2:	01 c6                	add    %eax,%esi
   174d4:	89 d8                	mov    %ebx,%eax
   174d6:	44 09 d9             	or     %r11d,%ecx
   174d9:	44 31 c8             	xor    %r9d,%eax
   174dc:	33 44 24 2c          	xor    0x2c(%rsp),%eax
   174e0:	44 21 d1             	and    %r10d,%ecx
   174e3:	44 31 e0             	xor    %r12d,%eax
   174e6:	41 89 c0             	mov    %eax,%r8d
   174e9:	89 f8                	mov    %edi,%eax
   174eb:	41 d1 c0             	rol    %r8d
   174ee:	44 21 d8             	and    %r11d,%eax
   174f1:	45 31 ef             	xor    %r13d,%r15d
   174f4:	c1 cf 02             	ror    $0x2,%edi
   174f7:	09 c8                	or     %ecx,%eax
   174f9:	42 8d 94 02 dc bc 1b 	lea    -0x70e44324(%rdx,%r8,1),%edx
   17500:	8f 
   17501:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
   17505:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
   1750a:	01 c2                	add    %eax,%edx
   1750c:	89 f0                	mov    %esi,%eax
   1750e:	41 89 f8             	mov    %edi,%r8d
   17511:	89 f7                	mov    %esi,%edi
   17513:	c1 c0 05             	rol    $0x5,%eax
   17516:	44 31 f9             	xor    %r15d,%ecx
   17519:	33 4c 24 10          	xor    0x10(%rsp),%ecx
   1751d:	44 09 c7             	or     %r8d,%edi
   17520:	01 c2                	add    %eax,%edx
   17522:	d1 c1                	rol    %ecx
   17524:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   17529:	89 d0                	mov    %edx,%eax
   1752b:	41 8d 9c 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%ebx
   17532:	8f 
   17533:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
   17537:	89 f1                	mov    %esi,%ecx
   17539:	c1 c0 05             	rol    $0x5,%eax
   1753c:	44 21 c1             	and    %r8d,%ecx
   1753f:	01 d8                	add    %ebx,%eax
   17541:	89 fb                	mov    %edi,%ebx
   17543:	89 d7                	mov    %edx,%edi
   17545:	44 21 db             	and    %r11d,%ebx
   17548:	09 cb                	or     %ecx,%ebx
   1754a:	89 f1                	mov    %esi,%ecx
   1754c:	01 c3                	add    %eax,%ebx
   1754e:	44 89 c8             	mov    %r9d,%eax
   17551:	c1 c9 02             	ror    $0x2,%ecx
   17554:	31 e8                	xor    %ebp,%eax
   17556:	33 44 24 08          	xor    0x8(%rsp),%eax
   1755a:	33 44 24 24          	xor    0x24(%rsp),%eax
   1755e:	21 cf                	and    %ecx,%edi
   17560:	41 89 c1             	mov    %eax,%r9d
   17563:	89 d0                	mov    %edx,%eax
   17565:	41 89 fa             	mov    %edi,%r10d
   17568:	c1 ca 02             	ror    $0x2,%edx
   1756b:	09 c8                	or     %ecx,%eax
   1756d:	41 d1 c1             	rol    %r9d
   17570:	44 21 c0             	and    %r8d,%eax
   17573:	44 89 0c 24          	mov    %r9d,(%rsp)
   17577:	41 09 c2             	or     %eax,%r10d
   1757a:	43 8d 84 0b dc bc 1b 	lea    -0x70e44324(%r11,%r9,1),%eax
   17581:	8f 
   17582:	41 01 c2             	add    %eax,%r10d
   17585:	89 d8                	mov    %ebx,%eax
   17587:	c1 c0 05             	rol    $0x5,%eax
   1758a:	41 01 c2             	add    %eax,%r10d
   1758d:	44 89 e8             	mov    %r13d,%eax
   17590:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
   17595:	44 31 f8             	xor    %r15d,%eax
   17598:	41 89 c1             	mov    %eax,%r9d
   1759b:	45 31 f1             	xor    %r14d,%r9d
   1759e:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
   175a3:	44 31 ed             	xor    %r13d,%ebp
   175a6:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
   175aa:	45 89 cb             	mov    %r9d,%r11d
   175ad:	44 33 7c 24 04       	xor    0x4(%rsp),%r15d
   175b2:	41 d1 c3             	rol    %r11d
   175b5:	44 89 ff             	mov    %r15d,%edi
   175b8:	43 8d b4 18 dc bc 1b 	lea    -0x70e44324(%r8,%r11,1),%esi
   175bf:	8f 
   175c0:	45 89 d0             	mov    %r10d,%r8d
   175c3:	44 31 e7             	xor    %r12d,%edi
   175c6:	33 3c 24             	xor    (%rsp),%edi
   175c9:	41 c1 c0 05          	rol    $0x5,%r8d
   175cd:	41 89 ff             	mov    %edi,%r15d
   175d0:	44 01 c6             	add    %r8d,%esi
   175d3:	41 89 d8             	mov    %ebx,%r8d
   175d6:	41 d1 c7             	rol    %r15d
   175d9:	41 09 d0             	or     %edx,%r8d
   175dc:	46 8d 8c 3a dc bc 1b 	lea    -0x70e44324(%rdx,%r15,1),%r9d
   175e3:	8f 
   175e4:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   175e9:	44 89 c0             	mov    %r8d,%eax
   175ec:	41 89 d8             	mov    %ebx,%r8d
   175ef:	c1 cb 02             	ror    $0x2,%ebx
   175f2:	41 21 d0             	and    %edx,%r8d
   175f5:	21 c8                	and    %ecx,%eax
   175f7:	44 09 c0             	or     %r8d,%eax
   175fa:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
   175ff:	01 f0                	add    %esi,%eax
   17601:	44 89 d6             	mov    %r10d,%esi
   17604:	41 31 e8             	xor    %ebp,%r8d
   17607:	09 de                	or     %ebx,%esi
   17609:	41 d1 c0             	rol    %r8d
   1760c:	21 d6                	and    %edx,%esi
   1760e:	44 89 c5             	mov    %r8d,%ebp
   17611:	45 89 d0             	mov    %r10d,%r8d
   17614:	41 c1 ca 02          	ror    $0x2,%r10d
   17618:	41 21 d8             	and    %ebx,%r8d
   1761b:	41 09 f0             	or     %esi,%r8d
   1761e:	8d b4 29 dc bc 1b 8f 	lea    -0x70e44324(%rcx,%rbp,1),%esi
   17625:	89 c1                	mov    %eax,%ecx
   17627:	41 01 f0             	add    %esi,%r8d
   1762a:	c1 c1 05             	rol    $0x5,%ecx
   1762d:	44 89 ee             	mov    %r13d,%esi
   17630:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   17635:	41 01 c8             	add    %ecx,%r8d
   17638:	89 c1                	mov    %eax,%ecx
   1763a:	44 89 c2             	mov    %r8d,%edx
   1763d:	44 21 d1             	and    %r10d,%ecx
   17640:	44 89 c7             	mov    %r8d,%edi
   17643:	c1 c2 05             	rol    $0x5,%edx
   17646:	44 01 ca             	add    %r9d,%edx
   17649:	41 89 c1             	mov    %eax,%r9d
   1764c:	45 09 d1             	or     %r10d,%r9d
   1764f:	41 21 d9             	and    %ebx,%r9d
   17652:	41 09 c9             	or     %ecx,%r9d
   17655:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   17659:	41 01 d1             	add    %edx,%r9d
   1765c:	44 31 ee             	xor    %r13d,%esi
   1765f:	33 74 24 10          	xor    0x10(%rsp),%esi
   17663:	c1 c8 02             	ror    $0x2,%eax
   17666:	44 31 de             	xor    %r11d,%esi
   17669:	21 c7                	and    %eax,%edi
   1766b:	89 f2                	mov    %esi,%edx
   1766d:	d1 c2                	rol    %edx
   1766f:	41 89 d7             	mov    %edx,%r15d
   17672:	44 89 c2             	mov    %r8d,%edx
   17675:	41 c1 c8 02          	ror    $0x2,%r8d
   17679:	09 c2                	or     %eax,%edx
   1767b:	44 21 d2             	and    %r10d,%edx
   1767e:	09 d7                	or     %edx,%edi
   17680:	42 8d 94 3b dc bc 1b 	lea    -0x70e44324(%rbx,%r15,1),%edx
   17687:	8f 
   17688:	8b 5c 24 14          	mov    0x14(%rsp),%ebx
   1768c:	01 d7                	add    %edx,%edi
   1768e:	44 89 ca             	mov    %r9d,%edx
   17691:	c1 c2 05             	rol    $0x5,%edx
   17694:	31 d9                	xor    %ebx,%ecx
   17696:	33 4c 24 24          	xor    0x24(%rsp),%ecx
   1769a:	01 d7                	add    %edx,%edi
   1769c:	31 e9                	xor    %ebp,%ecx
   1769e:	d1 c1                	rol    %ecx
   176a0:	89 fa                	mov    %edi,%edx
   176a2:	41 8d b4 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%esi
   176a9:	8f 
   176aa:	c1 c2 05             	rol    $0x5,%edx
   176ad:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   176b1:	44 89 c9             	mov    %r9d,%ecx
   176b4:	01 f2                	add    %esi,%edx
   176b6:	44 89 ce             	mov    %r9d,%esi
   176b9:	44 21 c1             	and    %r8d,%ecx
   176bc:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
   176c1:	44 09 c6             	or     %r8d,%esi
   176c4:	41 c1 c9 02          	ror    $0x2,%r9d
   176c8:	21 c6                	and    %eax,%esi
   176ca:	09 ce                	or     %ecx,%esi
   176cc:	89 f9                	mov    %edi,%ecx
   176ce:	01 d6                	add    %edx,%esi
   176d0:	44 89 ea             	mov    %r13d,%edx
   176d3:	44 31 d2             	xor    %r10d,%edx
   176d6:	33 54 24 18          	xor    0x18(%rsp),%edx
   176da:	33 54 24 1c          	xor    0x1c(%rsp),%edx
   176de:	d1 c2                	rol    %edx
   176e0:	41 89 d5             	mov    %edx,%r13d
   176e3:	89 fa                	mov    %edi,%edx
   176e5:	44 09 ca             	or     %r9d,%edx
   176e8:	44 89 6c 24 2c       	mov    %r13d,0x2c(%rsp)
   176ed:	44 21 c2             	and    %r8d,%edx
   176f0:	44 21 c9             	and    %r9d,%ecx
   176f3:	c1 cf 02             	ror    $0x2,%edi
   176f6:	09 d1                	or     %edx,%ecx
   176f8:	42 8d 94 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%edx
   176ff:	8f 
   17700:	89 f0                	mov    %esi,%eax
   17702:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   17707:	01 d1                	add    %edx,%ecx
   17709:	c1 c0 05             	rol    $0x5,%eax
   1770c:	01 c1                	add    %eax,%ecx
   1770e:	89 d8                	mov    %ebx,%eax
   17710:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   17714:	44 31 f0             	xor    %r14d,%eax
   17717:	31 c3                	xor    %eax,%ebx
   17719:	44 31 fb             	xor    %r15d,%ebx
   1771c:	89 d8                	mov    %ebx,%eax
   1771e:	d1 c0                	rol    %eax
   17720:	41 8d 94 00 dc bc 1b 	lea    -0x70e44324(%r8,%rax,1),%edx
   17727:	8f 
   17728:	41 89 c8             	mov    %ecx,%r8d
   1772b:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   1772f:	8b 1c 24             	mov    (%rsp),%ebx
   17732:	41 c1 c0 05          	rol    $0x5,%r8d
   17736:	44 89 c0             	mov    %r8d,%eax
   17739:	41 89 f0             	mov    %esi,%r8d
   1773c:	01 d0                	add    %edx,%eax
   1773e:	89 f2                	mov    %esi,%edx
   17740:	41 21 f8             	and    %edi,%r8d
   17743:	c1 ce 02             	ror    $0x2,%esi
   17746:	09 fa                	or     %edi,%edx
   17748:	44 21 ca             	and    %r9d,%edx
   1774b:	44 09 c2             	or     %r8d,%edx
   1774e:	45 89 d0             	mov    %r10d,%r8d
   17751:	45 31 e8             	xor    %r13d,%r8d
   17754:	01 c2                	add    %eax,%edx
   17756:	89 c8                	mov    %ecx,%eax
   17758:	41 31 d8             	xor    %ebx,%r8d
   1775b:	44 33 44 24 20       	xor    0x20(%rsp),%r8d
   17760:	21 f0                	and    %esi,%eax
   17762:	41 d1 c0             	rol    %r8d
   17765:	45 89 c2             	mov    %r8d,%r10d
   17768:	41 89 c8             	mov    %ecx,%r8d
   1776b:	c1 c9 02             	ror    $0x2,%ecx
   1776e:	41 09 f0             	or     %esi,%r8d
   17771:	44 89 14 24          	mov    %r10d,(%rsp)
   17775:	41 21 f8             	and    %edi,%r8d
   17778:	44 09 c0             	or     %r8d,%eax
   1777b:	47 8d 84 11 dc bc 1b 	lea    -0x70e44324(%r9,%r10,1),%r8d
   17782:	8f 
   17783:	41 89 d1             	mov    %edx,%r9d
   17786:	44 01 c0             	add    %r8d,%eax
   17789:	41 c1 c1 05          	rol    $0x5,%r9d
   1778d:	41 89 d0             	mov    %edx,%r8d
   17790:	44 01 c8             	add    %r9d,%eax
   17793:	45 89 f1             	mov    %r14d,%r9d
   17796:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
   1779b:	45 31 e1             	xor    %r12d,%r9d
   1779e:	45 31 d9             	xor    %r11d,%r9d
   177a1:	44 33 4c 24 2c       	xor    0x2c(%rsp),%r9d
   177a6:	41 21 c8             	and    %ecx,%r8d
   177a9:	41 d1 c1             	rol    %r9d
   177ac:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
   177b1:	46 8d 94 0f dc bc 1b 	lea    -0x70e44324(%rdi,%r9,1),%r10d
   177b8:	8f 
   177b9:	89 c7                	mov    %eax,%edi
   177bb:	41 89 d1             	mov    %edx,%r9d
   177be:	c1 c7 05             	rol    $0x5,%edi
   177c1:	41 09 c9             	or     %ecx,%r9d
   177c4:	c1 ca 02             	ror    $0x2,%edx
   177c7:	44 01 d7             	add    %r10d,%edi
   177ca:	45 89 ca             	mov    %r9d,%r10d
   177cd:	41 21 f2             	and    %esi,%r10d
   177d0:	45 09 c2             	or     %r8d,%r10d
   177d3:	45 89 e8             	mov    %r13d,%r8d
   177d6:	45 31 f0             	xor    %r14d,%r8d
   177d9:	41 01 fa             	add    %edi,%r10d
   177dc:	41 31 e8             	xor    %ebp,%r8d
   177df:	44 33 44 24 3c       	xor    0x3c(%rsp),%r8d
   177e4:	44 89 c7             	mov    %r8d,%edi
   177e7:	d1 c7                	rol    %edi
   177e9:	41 89 fd             	mov    %edi,%r13d
   177ec:	89 c7                	mov    %eax,%edi
   177ee:	09 d7                	or     %edx,%edi
   177f0:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
   177f5:	41 89 f8             	mov    %edi,%r8d
   177f8:	89 c7                	mov    %eax,%edi
   177fa:	c1 c8 02             	ror    $0x2,%eax
   177fd:	41 21 c8             	and    %ecx,%r8d
   17800:	21 d7                	and    %edx,%edi
   17802:	44 09 c7             	or     %r8d,%edi
   17805:	46 8d 84 2e dc bc 1b 	lea    -0x70e44324(%rsi,%r13,1),%r8d
   1780c:	8f 
   1780d:	44 89 d6             	mov    %r10d,%esi
   17810:	44 8b 6c 24 24       	mov    0x24(%rsp),%r13d
   17815:	44 01 c7             	add    %r8d,%edi
   17818:	c1 c6 05             	rol    $0x5,%esi
   1781b:	41 89 c0             	mov    %eax,%r8d
   1781e:	01 f7                	add    %esi,%edi
   17820:	44 89 e6             	mov    %r12d,%esi
   17823:	44 31 ee             	xor    %r13d,%esi
   17826:	33 74 24 1c          	xor    0x1c(%rsp),%esi
   1782a:	33 34 24             	xor    (%rsp),%esi
   1782d:	d1 c6                	rol    %esi
   1782f:	41 89 f4             	mov    %esi,%r12d
   17832:	89 d6                	mov    %edx,%esi
   17834:	31 c6                	xor    %eax,%esi
   17836:	42 8d 8c 21 d6 c1 62 	lea    -0x359d3e2a(%rcx,%r12,1),%ecx
   1783d:	ca 
   1783e:	44 89 64 24 0c       	mov    %r12d,0xc(%rsp)
   17843:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
   17848:	44 31 d6             	xor    %r10d,%esi
   1784b:	41 c1 ca 02          	ror    $0x2,%r10d
   1784f:	01 ce                	add    %ecx,%esi
   17851:	89 f9                	mov    %edi,%ecx
   17853:	c1 c1 05             	rol    $0x5,%ecx
   17856:	01 ce                	add    %ecx,%esi
   17858:	45 31 e6             	xor    %r12d,%r14d
   1785b:	45 31 d0             	xor    %r10d,%r8d
   1785e:	44 89 e9             	mov    %r13d,%ecx
   17861:	45 89 f1             	mov    %r14d,%r9d
   17864:	41 31 f8             	xor    %edi,%r8d
   17867:	c1 cf 02             	ror    $0x2,%edi
   1786a:	45 31 f9             	xor    %r15d,%r9d
   1786d:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
   17872:	45 89 ce             	mov    %r9d,%r14d
   17875:	41 89 d9             	mov    %ebx,%r9d
   17878:	41 d1 c6             	rol    %r14d
   1787b:	44 89 74 24 10       	mov    %r14d,0x10(%rsp)
   17880:	42 8d 94 32 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r14,1),%edx
   17887:	ca 
   17888:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
   1788d:	41 01 d0             	add    %edx,%r8d
   17890:	89 f2                	mov    %esi,%edx
   17892:	c1 c2 05             	rol    $0x5,%edx
   17895:	44 31 f1             	xor    %r14d,%ecx
   17898:	33 4c 24 20          	xor    0x20(%rsp),%ecx
   1789c:	33 4c 24 08          	xor    0x8(%rsp),%ecx
   178a0:	41 01 d0             	add    %edx,%r8d
   178a3:	41 89 cd             	mov    %ecx,%r13d
   178a6:	44 89 d2             	mov    %r10d,%edx
   178a9:	89 f9                	mov    %edi,%ecx
   178ab:	41 d1 c5             	rol    %r13d
   178ae:	31 fa                	xor    %edi,%edx
   178b0:	31 f2                	xor    %esi,%edx
   178b2:	42 8d 84 28 d6 c1 62 	lea    -0x359d3e2a(%rax,%r13,1),%eax
   178b9:	ca 
   178ba:	c1 ce 02             	ror    $0x2,%esi
   178bd:	44 89 6c 24 14       	mov    %r13d,0x14(%rsp)
   178c2:	01 c2                	add    %eax,%edx
   178c4:	44 89 c0             	mov    %r8d,%eax
   178c7:	31 f1                	xor    %esi,%ecx
   178c9:	c1 c0 05             	rol    $0x5,%eax
   178cc:	41 89 cd             	mov    %ecx,%r13d
   178cf:	44 89 f1             	mov    %r14d,%ecx
   178d2:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   178d7:	01 c2                	add    %eax,%edx
   178d9:	44 89 e0             	mov    %r12d,%eax
   178dc:	45 31 c5             	xor    %r8d,%r13d
   178df:	44 31 d9             	xor    %r11d,%ecx
   178e2:	31 d8                	xor    %ebx,%eax
   178e4:	33 44 24 2c          	xor    0x2c(%rsp),%eax
   178e8:	33 44 24 0c          	xor    0xc(%rsp),%eax
   178ec:	41 c1 c8 02          	ror    $0x2,%r8d
   178f0:	d1 c0                	rol    %eax
   178f2:	44 31 f1             	xor    %r14d,%ecx
   178f5:	41 89 f4             	mov    %esi,%r12d
   178f8:	89 44 24 18          	mov    %eax,0x18(%rsp)
   178fc:	41 8d 84 02 d6 c1 62 	lea    -0x359d3e2a(%r10,%rax,1),%eax
   17903:	ca 
   17904:	41 01 c5             	add    %eax,%r13d
   17907:	89 d0                	mov    %edx,%eax
   17909:	c1 c0 05             	rol    $0x5,%eax
   1790c:	41 01 c5             	add    %eax,%r13d
   1790f:	33 4c 24 10          	xor    0x10(%rsp),%ecx
   17913:	45 31 c4             	xor    %r8d,%r12d
   17916:	89 cb                	mov    %ecx,%ebx
   17918:	41 31 d4             	xor    %edx,%r12d
   1791b:	c1 ca 02             	ror    $0x2,%edx
   1791e:	d1 c3                	rol    %ebx
   17920:	41 89 d2             	mov    %edx,%r10d
   17923:	8d 84 1f d6 c1 62 ca 	lea    -0x359d3e2a(%rdi,%rbx,1),%eax
   1792a:	44 89 ef             	mov    %r13d,%edi
   1792d:	89 5c 24 54          	mov    %ebx,0x54(%rsp)
   17931:	41 01 c4             	add    %eax,%r12d
   17934:	c1 c7 05             	rol    $0x5,%edi
   17937:	44 89 c8             	mov    %r9d,%eax
   1793a:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
   1793e:	41 01 fc             	add    %edi,%r12d
   17941:	44 89 c7             	mov    %r8d,%edi
   17944:	31 e8                	xor    %ebp,%eax
   17946:	33 04 24             	xor    (%rsp),%eax
   17949:	31 d7                	xor    %edx,%edi
   1794b:	33 44 24 14          	xor    0x14(%rsp),%eax
   1794f:	45 89 d9             	mov    %r11d,%r9d
   17952:	d1 c0                	rol    %eax
   17954:	89 fb                	mov    %edi,%ebx
   17956:	8d 8c 06 d6 c1 62 ca 	lea    -0x359d3e2a(%rsi,%rax,1),%ecx
   1795d:	44 31 eb             	xor    %r13d,%ebx
   17960:	44 89 e6             	mov    %r12d,%esi
   17963:	41 c1 cd 02          	ror    $0x2,%r13d
   17967:	01 cb                	add    %ecx,%ebx
   17969:	c1 c6 05             	rol    $0x5,%esi
   1796c:	45 31 ea             	xor    %r13d,%r10d
   1796f:	89 44 24 58          	mov    %eax,0x58(%rsp)
   17973:	01 f3                	add    %esi,%ebx
   17975:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   17979:	45 31 e2             	xor    %r12d,%r10d
   1797c:	45 89 eb             	mov    %r13d,%r11d
   1797f:	41 c1 cc 02          	ror    $0x2,%r12d
   17983:	41 31 f1             	xor    %esi,%r9d
   17986:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
   1798b:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
   17990:	41 d1 c1             	rol    %r9d
   17993:	43 8d 8c 08 d6 c1 62 	lea    -0x359d3e2a(%r8,%r9,1),%ecx
   1799a:	ca 
   1799b:	41 89 d8             	mov    %ebx,%r8d
   1799e:	44 89 4c 24 5c       	mov    %r9d,0x5c(%rsp)
   179a3:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   179a7:	41 01 ca             	add    %ecx,%r10d
   179aa:	41 c1 c0 05          	rol    $0x5,%r8d
   179ae:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   179b2:	45 01 c2             	add    %r8d,%r10d
   179b5:	41 89 e8             	mov    %ebp,%r8d
   179b8:	45 31 f8             	xor    %r15d,%r8d
   179bb:	44 33 44 24 08       	xor    0x8(%rsp),%r8d
   179c0:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
   179c5:	41 d1 c0             	rol    %r8d
   179c8:	45 31 e3             	xor    %r12d,%r11d
   179cb:	31 ce                	xor    %ecx,%esi
   179cd:	44 31 f1             	xor    %r14d,%ecx
   179d0:	41 31 db             	xor    %ebx,%r11d
   179d3:	42 8d 94 02 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r8,1),%edx
   179da:	ca 
   179db:	31 f7                	xor    %esi,%edi
   179dd:	c1 cb 02             	ror    $0x2,%ebx
   179e0:	41 01 d3             	add    %edx,%r11d
   179e3:	44 89 d2             	mov    %r10d,%edx
   179e6:	31 c7                	xor    %eax,%edi
   179e8:	8b 74 24 10          	mov    0x10(%rsp),%esi
   179ec:	c1 c2 05             	rol    $0x5,%edx
   179ef:	d1 c7                	rol    %edi
   179f1:	33 4c 24 14          	xor    0x14(%rsp),%ecx
   179f5:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
   179fa:	41 01 d3             	add    %edx,%r11d
   179fd:	44 89 e2             	mov    %r12d,%edx
   17a00:	44 31 c1             	xor    %r8d,%ecx
   17a03:	89 7c 24 64          	mov    %edi,0x64(%rsp)
   17a07:	31 da                	xor    %ebx,%edx
   17a09:	d1 c1                	rol    %ecx
   17a0b:	89 d5                	mov    %edx,%ebp
   17a0d:	41 8d 94 3d d6 c1 62 	lea    -0x359d3e2a(%r13,%rdi,1),%edx
   17a14:	ca 
   17a15:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   17a1a:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
   17a1e:	44 31 d5             	xor    %r10d,%ebp
   17a21:	41 c1 ca 02          	ror    $0x2,%r10d
   17a25:	45 31 ef             	xor    %r13d,%r15d
   17a28:	01 d5                	add    %edx,%ebp
   17a2a:	44 89 da             	mov    %r11d,%edx
   17a2d:	44 31 fe             	xor    %r15d,%esi
   17a30:	41 89 df             	mov    %ebx,%r15d
   17a33:	c1 c2 05             	rol    $0x5,%edx
   17a36:	44 31 ce             	xor    %r9d,%esi
   17a39:	45 31 d7             	xor    %r10d,%r15d
   17a3c:	01 d5                	add    %edx,%ebp
   17a3e:	d1 c6                	rol    %esi
   17a40:	45 31 df             	xor    %r11d,%r15d
   17a43:	41 c1 cb 02          	ror    $0x2,%r11d
   17a47:	41 8d 94 34 d6 c1 62 	lea    -0x359d3e2a(%r12,%rsi,1),%edx
   17a4e:	ca 
   17a4f:	45 89 f4             	mov    %r14d,%r12d
   17a52:	45 89 d6             	mov    %r10d,%r14d
   17a55:	89 74 24 68          	mov    %esi,0x68(%rsp)
   17a59:	41 01 d7             	add    %edx,%r15d
   17a5c:	89 ea                	mov    %ebp,%edx
   17a5e:	45 31 de             	xor    %r11d,%r14d
   17a61:	c1 c2 05             	rol    $0x5,%edx
   17a64:	41 31 ee             	xor    %ebp,%r14d
   17a67:	41 01 d7             	add    %edx,%r15d
   17a6a:	8d 94 0b d6 c1 62 ca 	lea    -0x359d3e2a(%rbx,%rcx,1),%edx
   17a71:	8b 5c 24 24          	mov    0x24(%rsp),%ebx
   17a75:	41 01 d6             	add    %edx,%r14d
   17a78:	44 89 fa             	mov    %r15d,%edx
   17a7b:	c1 cd 02             	ror    $0x2,%ebp
   17a7e:	44 33 64 24 04       	xor    0x4(%rsp),%r12d
   17a83:	c1 c2 05             	rol    $0x5,%edx
   17a86:	44 31 e3             	xor    %r12d,%ebx
   17a89:	44 8b 24 24          	mov    (%rsp),%r12d
   17a8d:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
   17a92:	41 01 d6             	add    %edx,%r14d
   17a95:	8b 14 24             	mov    (%rsp),%edx
   17a98:	31 f3                	xor    %esi,%ebx
   17a9a:	d1 c3                	rol    %ebx
   17a9c:	44 31 ea             	xor    %r13d,%edx
   17a9f:	33 54 24 18          	xor    0x18(%rsp),%edx
   17aa3:	45 89 dd             	mov    %r11d,%r13d
   17aa6:	89 5c 24 74          	mov    %ebx,0x74(%rsp)
   17aaa:	31 fa                	xor    %edi,%edx
   17aac:	41 31 ed             	xor    %ebp,%r13d
   17aaf:	45 8d 9c 1b d6 c1 62 	lea    -0x359d3e2a(%r11,%rbx,1),%r11d
   17ab6:	ca 
   17ab7:	d1 c2                	rol    %edx
   17ab9:	45 31 fd             	xor    %r15d,%r13d
   17abc:	41 c1 cf 02          	ror    $0x2,%r15d
   17ac0:	45 8d 94 12 d6 c1 62 	lea    -0x359d3e2a(%r10,%rdx,1),%r10d
   17ac7:	ca 
   17ac8:	89 54 24 70          	mov    %edx,0x70(%rsp)
   17acc:	45 01 d5             	add    %r10d,%r13d
   17acf:	45 89 f2             	mov    %r14d,%r10d
   17ad2:	41 c1 c2 05          	rol    $0x5,%r10d
   17ad6:	45 01 d5             	add    %r10d,%r13d
   17ad9:	41 89 ea             	mov    %ebp,%r10d
   17adc:	45 31 fa             	xor    %r15d,%r10d
   17adf:	45 31 f2             	xor    %r14d,%r10d
   17ae2:	41 c1 ce 02          	ror    $0x2,%r14d
   17ae6:	45 01 da             	add    %r11d,%r10d
   17ae9:	45 89 eb             	mov    %r13d,%r11d
   17aec:	41 c1 c3 05          	rol    $0x5,%r11d
   17af0:	45 01 da             	add    %r11d,%r10d
   17af3:	45 89 e3             	mov    %r12d,%r11d
   17af6:	45 89 fc             	mov    %r15d,%r12d
   17af9:	41 31 c3             	xor    %eax,%r11d
   17afc:	45 31 f4             	xor    %r14d,%r12d
   17aff:	41 31 cb             	xor    %ecx,%r11d
   17b02:	45 31 ec             	xor    %r13d,%r12d
   17b05:	41 d1 c3             	rol    %r11d
   17b08:	42 8d ac 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%ebp
   17b0f:	ca 
   17b10:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   17b15:	41 01 ec             	add    %ebp,%r12d
   17b18:	44 89 d5             	mov    %r10d,%ebp
   17b1b:	c1 c5 05             	rol    $0x5,%ebp
   17b1e:	41 01 ec             	add    %ebp,%r12d
   17b21:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
   17b25:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
   17b29:	41 c1 cd 02          	ror    $0x2,%r13d
   17b2d:	41 31 e9             	xor    %ebp,%r9d
   17b30:	44 89 f5             	mov    %r14d,%ebp
   17b33:	41 31 d1             	xor    %edx,%r9d
   17b36:	44 31 ed             	xor    %r13d,%ebp
   17b39:	41 d1 c1             	rol    %r9d
   17b3c:	44 31 d5             	xor    %r10d,%ebp
   17b3f:	47 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%r15d
   17b46:	ca 
   17b47:	44 89 4c 24 7c       	mov    %r9d,0x7c(%rsp)
   17b4c:	44 01 fd             	add    %r15d,%ebp
   17b4f:	45 89 e7             	mov    %r12d,%r15d
   17b52:	41 c1 c7 05          	rol    $0x5,%r15d
   17b56:	44 01 fd             	add    %r15d,%ebp
   17b59:	45 89 d7             	mov    %r10d,%r15d
   17b5c:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
   17b61:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
   17b66:	45 31 d0             	xor    %r10d,%r8d
   17b69:	41 c1 cf 02          	ror    $0x2,%r15d
   17b6d:	44 31 c3             	xor    %r8d,%ebx
   17b70:	45 89 e8             	mov    %r13d,%r8d
   17b73:	d1 c3                	rol    %ebx
   17b75:	45 31 f8             	xor    %r15d,%r8d
   17b78:	45 31 e0             	xor    %r12d,%r8d
   17b7b:	45 8d b4 1e d6 c1 62 	lea    -0x359d3e2a(%r14,%rbx,1),%r14d
   17b82:	ca 
   17b83:	41 c1 cc 02          	ror    $0x2,%r12d
   17b87:	89 9c 24 80 00 00 00 	mov    %ebx,0x80(%rsp)
   17b8e:	45 01 f0             	add    %r14d,%r8d
   17b91:	41 89 ee             	mov    %ebp,%r14d
   17b94:	41 c1 c6 05          	rol    $0x5,%r14d
   17b98:	45 01 c6             	add    %r8d,%r14d
   17b9b:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   17ba0:	44 33 44 24 14       	xor    0x14(%rsp),%r8d
   17ba5:	44 31 c7             	xor    %r8d,%edi
   17ba8:	45 89 f0             	mov    %r14d,%r8d
   17bab:	41 31 fb             	xor    %edi,%r11d
   17bae:	44 89 ff             	mov    %r15d,%edi
   17bb1:	41 c1 c0 05          	rol    $0x5,%r8d
   17bb5:	41 d1 c3             	rol    %r11d
   17bb8:	44 31 e7             	xor    %r12d,%edi
   17bbb:	47 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%r13,%r11,1),%r10d
   17bc2:	ca 
   17bc3:	31 ef                	xor    %ebp,%edi
   17bc5:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   17bca:	c1 cd 02             	ror    $0x2,%ebp
   17bcd:	44 01 d7             	add    %r10d,%edi
   17bd0:	45 89 c2             	mov    %r8d,%r10d
   17bd3:	44 89 9c 24 84 00 00 	mov    %r11d,0x84(%rsp)
   17bda:	00 
   17bdb:	41 01 fa             	add    %edi,%r10d
   17bde:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   17be2:	44 31 ef             	xor    %r13d,%edi
   17be5:	44 31 e8             	xor    %r13d,%eax
   17be8:	31 fe                	xor    %edi,%esi
   17bea:	31 c2                	xor    %eax,%edx
   17bec:	41 31 f1             	xor    %esi,%r9d
   17bef:	44 89 e6             	mov    %r12d,%esi
   17bf2:	41 31 d3             	xor    %edx,%r11d
   17bf5:	31 ee                	xor    %ebp,%esi
   17bf7:	41 d1 c1             	rol    %r9d
   17bfa:	44 31 f6             	xor    %r14d,%esi
   17bfd:	41 c1 ce 02          	ror    $0x2,%r14d
   17c01:	44 89 8c 24 88 00 00 	mov    %r9d,0x88(%rsp)
   17c08:	00 
   17c09:	43 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%edi
   17c10:	ca 
   17c11:	44 89 b4 24 a4 00 00 	mov    %r14d,0xa4(%rsp)
   17c18:	00 
   17c19:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   17c1e:	01 fe                	add    %edi,%esi
   17c20:	44 89 d7             	mov    %r10d,%edi
   17c23:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
   17c28:	c1 c7 05             	rol    $0x5,%edi
   17c2b:	44 89 f0             	mov    %r14d,%eax
   17c2e:	44 89 5c 24 50       	mov    %r11d,0x50(%rsp)
   17c33:	44 31 c1             	xor    %r8d,%ecx
   17c36:	01 fe                	add    %edi,%esi
   17c38:	41 d1 c3             	rol    %r11d
   17c3b:	31 cb                	xor    %ecx,%ebx
   17c3d:	89 e9                	mov    %ebp,%ecx
   17c3f:	42 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%edx
   17c46:	ca 
   17c47:	44 89 9c 24 90 00 00 	mov    %r11d,0x90(%rsp)
   17c4e:	00 
   17c4f:	d1 c3                	rol    %ebx
   17c51:	44 31 f1             	xor    %r14d,%ecx
   17c54:	44 31 d1             	xor    %r10d,%ecx
   17c57:	41 8d bc 1c d6 c1 62 	lea    -0x359d3e2a(%r12,%rbx,1),%edi
   17c5e:	ca 
   17c5f:	41 c1 ca 02          	ror    $0x2,%r10d
   17c63:	89 9c 24 8c 00 00 00 	mov    %ebx,0x8c(%rsp)
   17c6a:	01 f9                	add    %edi,%ecx
   17c6c:	89 f7                	mov    %esi,%edi
   17c6e:	44 31 d0             	xor    %r10d,%eax
   17c71:	44 89 94 24 a0 00 00 	mov    %r10d,0xa0(%rsp)
   17c78:	00 
   17c79:	c1 c7 05             	rol    $0x5,%edi
   17c7c:	31 f0                	xor    %esi,%eax
   17c7e:	c1 ce 02             	ror    $0x2,%esi
   17c81:	01 f9                	add    %edi,%ecx
   17c83:	01 d0                	add    %edx,%eax
   17c85:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17c8a:	89 b4 24 9c 00 00 00 	mov    %esi,0x9c(%rsp)
   17c91:	89 ca                	mov    %ecx,%edx
   17c93:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%rsp)
   17c9a:	03 4c 24 44          	add    0x44(%rsp),%ecx
   17c9e:	c1 c2 05             	rol    $0x5,%edx
   17ca1:	89 4f 0c             	mov    %ecx,0xc(%rdi)
   17ca4:	01 d0                	add    %edx,%eax
   17ca6:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
   17cad:	03 44 24 40          	add    0x40(%rsp),%eax
   17cb1:	03 74 24 48          	add    0x48(%rsp),%esi
   17cb5:	44 03 54 24 4c       	add    0x4c(%rsp),%r10d
   17cba:	89 47 08             	mov    %eax,0x8(%rdi)
   17cbd:	44 03 74 24 38       	add    0x38(%rsp),%r14d
   17cc2:	89 77 10             	mov    %esi,0x10(%rdi)
   17cc5:	be 58 00 00 00       	mov    $0x58,%esi
   17cca:	44 89 57 14          	mov    %r10d,0x14(%rdi)
   17cce:	44 89 77 18          	mov    %r14d,0x18(%rdi)
   17cd2:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   17cd7:	e8 94 cf ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   17cdc:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   17ce3:	00 
   17ce4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   17ceb:	00 00 
   17ced:	75 14                	jne    17d03 <mbedtls_internal_sha1_process+0x1273>
   17cef:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   17cf6:	31 c0                	xor    %eax,%eax
   17cf8:	5b                   	pop    %rbx
   17cf9:	5d                   	pop    %rbp
   17cfa:	41 5c                	pop    %r12
   17cfc:	41 5d                	pop    %r13
   17cfe:	41 5e                	pop    %r14
   17d00:	41 5f                	pop    %r15
   17d02:	c3                   	retq   
   17d03:	e8 68 c5 fe ff       	callq  4270 <__stack_chk_fail@plt>
   17d08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17d0f:	00 

0000000000017d10 <mbedtls_sha1_update.part.0>:
   17d10:	41 56                	push   %r14
   17d12:	41 55                	push   %r13
   17d14:	41 54                	push   %r12
   17d16:	49 89 fc             	mov    %rdi,%r12
   17d19:	55                   	push   %rbp
   17d1a:	48 89 f5             	mov    %rsi,%rbp
   17d1d:	53                   	push   %rbx
   17d1e:	8b 07                	mov    (%rdi),%eax
   17d20:	48 89 d3             	mov    %rdx,%rbx
   17d23:	ba 40 00 00 00       	mov    $0x40,%edx
   17d28:	41 89 c5             	mov    %eax,%r13d
   17d2b:	41 83 e5 3f          	and    $0x3f,%r13d
   17d2f:	44 29 ea             	sub    %r13d,%edx
   17d32:	01 d8                	add    %ebx,%eax
   17d34:	89 07                	mov    %eax,(%rdi)
   17d36:	41 89 d6             	mov    %edx,%r14d
   17d39:	73 04                	jae    17d3f <mbedtls_sha1_update.part.0+0x2f>
   17d3b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   17d3f:	45 85 ed             	test   %r13d,%r13d
   17d42:	74 05                	je     17d49 <mbedtls_sha1_update.part.0+0x39>
   17d44:	49 39 de             	cmp    %rbx,%r14
   17d47:	76 37                	jbe    17d80 <mbedtls_sha1_update.part.0+0x70>
   17d49:	48 83 fb 3f          	cmp    $0x3f,%rbx
   17d4d:	77 17                	ja     17d66 <mbedtls_sha1_update.part.0+0x56>
   17d4f:	eb 7f                	jmp    17dd0 <mbedtls_sha1_update.part.0+0xc0>
   17d51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17d58:	48 83 eb 40          	sub    $0x40,%rbx
   17d5c:	48 83 c5 40          	add    $0x40,%rbp
   17d60:	48 83 fb 3f          	cmp    $0x3f,%rbx
   17d64:	76 6a                	jbe    17dd0 <mbedtls_sha1_update.part.0+0xc0>
   17d66:	48 89 ee             	mov    %rbp,%rsi
   17d69:	4c 89 e7             	mov    %r12,%rdi
   17d6c:	e8 1f ed ff ff       	callq  16a90 <mbedtls_internal_sha1_process>
   17d71:	85 c0                	test   %eax,%eax
   17d73:	74 e3                	je     17d58 <mbedtls_sha1_update.part.0+0x48>
   17d75:	5b                   	pop    %rbx
   17d76:	5d                   	pop    %rbp
   17d77:	41 5c                	pop    %r12
   17d79:	41 5d                	pop    %r13
   17d7b:	41 5e                	pop    %r14
   17d7d:	c3                   	retq   
   17d7e:	66 90                	xchg   %ax,%ax
   17d80:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
   17d85:	4d 01 c5             	add    %r8,%r13
   17d88:	83 fa 08             	cmp    $0x8,%edx
   17d8b:	0f 83 87 00 00 00    	jae    17e18 <mbedtls_sha1_update.part.0+0x108>
   17d91:	f6 c2 04             	test   $0x4,%dl
   17d94:	0f 85 19 01 00 00    	jne    17eb3 <mbedtls_sha1_update.part.0+0x1a3>
   17d9a:	85 d2                	test   %edx,%edx
   17d9c:	74 11                	je     17daf <mbedtls_sha1_update.part.0+0x9f>
   17d9e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   17da2:	83 e2 02             	and    $0x2,%edx
   17da5:	41 88 45 00          	mov    %al,0x0(%r13)
   17da9:	0f 85 30 01 00 00    	jne    17edf <mbedtls_sha1_update.part.0+0x1cf>
   17daf:	4c 89 c6             	mov    %r8,%rsi
   17db2:	4c 89 e7             	mov    %r12,%rdi
   17db5:	e8 d6 ec ff ff       	callq  16a90 <mbedtls_internal_sha1_process>
   17dba:	85 c0                	test   %eax,%eax
   17dbc:	75 b7                	jne    17d75 <mbedtls_sha1_update.part.0+0x65>
   17dbe:	4c 01 f5             	add    %r14,%rbp
   17dc1:	4c 29 f3             	sub    %r14,%rbx
   17dc4:	45 31 ed             	xor    %r13d,%r13d
   17dc7:	eb 80                	jmp    17d49 <mbedtls_sha1_update.part.0+0x39>
   17dc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17dd0:	31 c0                	xor    %eax,%eax
   17dd2:	48 85 db             	test   %rbx,%rbx
   17dd5:	74 9e                	je     17d75 <mbedtls_sha1_update.part.0+0x65>
   17dd7:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
   17ddc:	89 d8                	mov    %ebx,%eax
   17dde:	83 fb 08             	cmp    $0x8,%ebx
   17de1:	0f 83 7e 00 00 00    	jae    17e65 <mbedtls_sha1_update.part.0+0x155>
   17de7:	83 e3 04             	and    $0x4,%ebx
   17dea:	0f 85 d9 00 00 00    	jne    17ec9 <mbedtls_sha1_update.part.0+0x1b9>
   17df0:	85 c0                	test   %eax,%eax
   17df2:	74 16                	je     17e0a <mbedtls_sha1_update.part.0+0xfa>
   17df4:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   17df8:	88 11                	mov    %dl,(%rcx)
   17dfa:	a8 02                	test   $0x2,%al
   17dfc:	74 0c                	je     17e0a <mbedtls_sha1_update.part.0+0xfa>
   17dfe:	89 c2                	mov    %eax,%edx
   17e00:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   17e05:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   17e0a:	31 c0                	xor    %eax,%eax
   17e0c:	5b                   	pop    %rbx
   17e0d:	5d                   	pop    %rbp
   17e0e:	41 5c                	pop    %r12
   17e10:	41 5d                	pop    %r13
   17e12:	41 5e                	pop    %r14
   17e14:	c3                   	retq   
   17e15:	0f 1f 00             	nopl   (%rax)
   17e18:	48 8b 45 00          	mov    0x0(%rbp),%rax
   17e1c:	49 8d 75 08          	lea    0x8(%r13),%rsi
   17e20:	49 89 e9             	mov    %rbp,%r9
   17e23:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   17e27:	49 89 45 00          	mov    %rax,0x0(%r13)
   17e2b:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
   17e30:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
   17e35:	49 29 f5             	sub    %rsi,%r13
   17e38:	44 01 ea             	add    %r13d,%edx
   17e3b:	4d 29 e9             	sub    %r13,%r9
   17e3e:	83 e2 f8             	and    $0xfffffff8,%edx
   17e41:	83 fa 08             	cmp    $0x8,%edx
   17e44:	0f 82 65 ff ff ff    	jb     17daf <mbedtls_sha1_update.part.0+0x9f>
   17e4a:	83 e2 f8             	and    $0xfffffff8,%edx
   17e4d:	31 c0                	xor    %eax,%eax
   17e4f:	89 c1                	mov    %eax,%ecx
   17e51:	83 c0 08             	add    $0x8,%eax
   17e54:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   17e58:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   17e5c:	39 d0                	cmp    %edx,%eax
   17e5e:	72 ef                	jb     17e4f <mbedtls_sha1_update.part.0+0x13f>
   17e60:	e9 4a ff ff ff       	jmpq   17daf <mbedtls_sha1_update.part.0+0x9f>
   17e65:	48 8b 45 00          	mov    0x0(%rbp),%rax
   17e69:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   17e6d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   17e71:	48 89 01             	mov    %rax,(%rcx)
   17e74:	89 d8                	mov    %ebx,%eax
   17e76:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
   17e7b:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   17e80:	48 29 f1             	sub    %rsi,%rcx
   17e83:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   17e86:	48 29 cd             	sub    %rcx,%rbp
   17e89:	83 e0 f8             	and    $0xfffffff8,%eax
   17e8c:	83 f8 08             	cmp    $0x8,%eax
   17e8f:	0f 82 75 ff ff ff    	jb     17e0a <mbedtls_sha1_update.part.0+0xfa>
   17e95:	83 e0 f8             	and    $0xfffffff8,%eax
   17e98:	31 d2                	xor    %edx,%edx
   17e9a:	89 d1                	mov    %edx,%ecx
   17e9c:	83 c2 08             	add    $0x8,%edx
   17e9f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   17ea4:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   17ea8:	39 c2                	cmp    %eax,%edx
   17eaa:	72 ee                	jb     17e9a <mbedtls_sha1_update.part.0+0x18a>
   17eac:	31 c0                	xor    %eax,%eax
   17eae:	e9 59 ff ff ff       	jmpq   17e0c <mbedtls_sha1_update.part.0+0xfc>
   17eb3:	8b 45 00             	mov    0x0(%rbp),%eax
   17eb6:	41 89 45 00          	mov    %eax,0x0(%r13)
   17eba:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
   17ebf:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
   17ec4:	e9 e6 fe ff ff       	jmpq   17daf <mbedtls_sha1_update.part.0+0x9f>
   17ec9:	8b 55 00             	mov    0x0(%rbp),%edx
   17ecc:	89 11                	mov    %edx,(%rcx)
   17ece:	89 c2                	mov    %eax,%edx
   17ed0:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   17ed4:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   17ed8:	31 c0                	xor    %eax,%eax
   17eda:	e9 2d ff ff ff       	jmpq   17e0c <mbedtls_sha1_update.part.0+0xfc>
   17edf:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
   17ee5:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
   17eeb:	e9 bf fe ff ff       	jmpq   17daf <mbedtls_sha1_update.part.0+0x9f>

0000000000017ef0 <mbedtls_sha1_update>:
   17ef0:	f3 0f 1e fa          	endbr64 
   17ef4:	48 85 d2             	test   %rdx,%rdx
   17ef7:	74 07                	je     17f00 <mbedtls_sha1_update+0x10>
   17ef9:	e9 12 fe ff ff       	jmpq   17d10 <mbedtls_sha1_update.part.0>
   17efe:	66 90                	xchg   %ax,%ax
   17f00:	31 c0                	xor    %eax,%eax
   17f02:	c3                   	retq   
   17f03:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17f0a:	00 00 00 00 
   17f0e:	66 90                	xchg   %ax,%ax

0000000000017f10 <mbedtls_sha1_finish>:
   17f10:	f3 0f 1e fa          	endbr64 
   17f14:	41 54                	push   %r12
   17f16:	4c 8d 67 1c          	lea    0x1c(%rdi),%r12
   17f1a:	55                   	push   %rbp
   17f1b:	48 89 f5             	mov    %rsi,%rbp
   17f1e:	53                   	push   %rbx
   17f1f:	8b 07                	mov    (%rdi),%eax
   17f21:	48 89 fb             	mov    %rdi,%rbx
   17f24:	83 e0 3f             	and    $0x3f,%eax
   17f27:	8d 48 01             	lea    0x1(%rax),%ecx
   17f2a:	c6 44 07 1c 80       	movb   $0x80,0x1c(%rdi,%rax,1)
   17f2f:	89 c8                	mov    %ecx,%eax
   17f31:	4c 01 e0             	add    %r12,%rax
   17f34:	83 f9 38             	cmp    $0x38,%ecx
   17f37:	77 57                	ja     17f90 <mbedtls_sha1_finish+0x80>
   17f39:	ba 38 00 00 00       	mov    $0x38,%edx
   17f3e:	31 ff                	xor    %edi,%edi
   17f40:	29 ca                	sub    %ecx,%edx
   17f42:	83 fa 08             	cmp    $0x8,%edx
   17f45:	72 79                	jb     17fc0 <mbedtls_sha1_finish+0xb0>
   17f47:	89 d1                	mov    %edx,%ecx
   17f49:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17f50:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   17f57:	00 00 
   17f59:	48 8d 48 08          	lea    0x8(%rax),%rcx
   17f5d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   17f61:	48 29 c8             	sub    %rcx,%rax
   17f64:	01 c2                	add    %eax,%edx
   17f66:	83 e2 f8             	and    $0xfffffff8,%edx
   17f69:	83 fa 08             	cmp    $0x8,%edx
   17f6c:	0f 82 8b 00 00 00    	jb     17ffd <mbedtls_sha1_finish+0xed>
   17f72:	83 e2 f8             	and    $0xfffffff8,%edx
   17f75:	31 c0                	xor    %eax,%eax
   17f77:	89 c6                	mov    %eax,%esi
   17f79:	83 c0 08             	add    $0x8,%eax
   17f7c:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   17f80:	39 d0                	cmp    %edx,%eax
   17f82:	72 f3                	jb     17f77 <mbedtls_sha1_finish+0x67>
   17f84:	eb 77                	jmp    17ffd <mbedtls_sha1_finish+0xed>
   17f86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17f8d:	00 00 00 
   17f90:	ba 40 00 00 00       	mov    $0x40,%edx
   17f95:	29 ca                	sub    %ecx,%edx
   17f97:	89 d1                	mov    %edx,%ecx
   17f99:	74 0f                	je     17faa <mbedtls_sha1_finish+0x9a>
   17f9b:	31 d2                	xor    %edx,%edx
   17f9d:	89 d6                	mov    %edx,%esi
   17f9f:	83 c2 01             	add    $0x1,%edx
   17fa2:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   17fa6:	39 ca                	cmp    %ecx,%edx
   17fa8:	72 f3                	jb     17f9d <mbedtls_sha1_finish+0x8d>
   17faa:	4c 89 e6             	mov    %r12,%rsi
   17fad:	48 89 df             	mov    %rbx,%rdi
   17fb0:	e8 db ea ff ff       	callq  16a90 <mbedtls_internal_sha1_process>
   17fb5:	85 c0                	test   %eax,%eax
   17fb7:	74 27                	je     17fe0 <mbedtls_sha1_finish+0xd0>
   17fb9:	5b                   	pop    %rbx
   17fba:	5d                   	pop    %rbp
   17fbb:	41 5c                	pop    %r12
   17fbd:	c3                   	retq   
   17fbe:	66 90                	xchg   %ax,%ax
   17fc0:	f6 c2 04             	test   $0x4,%dl
   17fc3:	0f 85 8f 00 00 00    	jne    18058 <mbedtls_sha1_finish+0x148>
   17fc9:	85 d2                	test   %edx,%edx
   17fcb:	74 30                	je     17ffd <mbedtls_sha1_finish+0xed>
   17fcd:	c6 00 00             	movb   $0x0,(%rax)
   17fd0:	f6 c2 02             	test   $0x2,%dl
   17fd3:	74 28                	je     17ffd <mbedtls_sha1_finish+0xed>
   17fd5:	31 c9                	xor    %ecx,%ecx
   17fd7:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   17fdc:	eb 1f                	jmp    17ffd <mbedtls_sha1_finish+0xed>
   17fde:	66 90                	xchg   %ax,%ax
   17fe0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   17fe4:	0f 11 43 1c          	movups %xmm0,0x1c(%rbx)
   17fe8:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   17fef:	00 00 
   17ff1:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   17ff7:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   17ffd:	8b 13                	mov    (%rbx),%edx
   17fff:	8b 43 04             	mov    0x4(%rbx),%eax
   18002:	4c 89 e6             	mov    %r12,%rsi
   18005:	48 89 df             	mov    %rbx,%rdi
   18008:	89 d1                	mov    %edx,%ecx
   1800a:	c1 e0 03             	shl    $0x3,%eax
   1800d:	c1 e9 1d             	shr    $0x1d,%ecx
   18010:	c1 e2 03             	shl    $0x3,%edx
   18013:	09 c8                	or     %ecx,%eax
   18015:	0f ca                	bswap  %edx
   18017:	89 53 58             	mov    %edx,0x58(%rbx)
   1801a:	0f c8                	bswap  %eax
   1801c:	89 43 54             	mov    %eax,0x54(%rbx)
   1801f:	e8 6c ea ff ff       	callq  16a90 <mbedtls_internal_sha1_process>
   18024:	85 c0                	test   %eax,%eax
   18026:	75 91                	jne    17fb9 <mbedtls_sha1_finish+0xa9>
   18028:	8b 53 08             	mov    0x8(%rbx),%edx
   1802b:	0f ca                	bswap  %edx
   1802d:	89 55 00             	mov    %edx,0x0(%rbp)
   18030:	8b 53 0c             	mov    0xc(%rbx),%edx
   18033:	0f ca                	bswap  %edx
   18035:	89 55 04             	mov    %edx,0x4(%rbp)
   18038:	8b 53 10             	mov    0x10(%rbx),%edx
   1803b:	0f ca                	bswap  %edx
   1803d:	89 55 08             	mov    %edx,0x8(%rbp)
   18040:	8b 53 14             	mov    0x14(%rbx),%edx
   18043:	0f ca                	bswap  %edx
   18045:	89 55 0c             	mov    %edx,0xc(%rbp)
   18048:	8b 53 18             	mov    0x18(%rbx),%edx
   1804b:	5b                   	pop    %rbx
   1804c:	0f ca                	bswap  %edx
   1804e:	89 55 10             	mov    %edx,0x10(%rbp)
   18051:	5d                   	pop    %rbp
   18052:	41 5c                	pop    %r12
   18054:	c3                   	retq   
   18055:	0f 1f 00             	nopl   (%rax)
   18058:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1805e:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   18065:	00 
   18066:	eb 95                	jmp    17ffd <mbedtls_sha1_finish+0xed>
   18068:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1806f:	00 

0000000000018070 <mbedtls_sha1>:
   18070:	f3 0f 1e fa          	endbr64 
   18074:	41 55                	push   %r13
   18076:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1807a:	41 54                	push   %r12
   1807c:	55                   	push   %rbp
   1807d:	48 89 d5             	mov    %rdx,%rbp
   18080:	48 83 ec 70          	sub    $0x70,%rsp
   18084:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1808b:	00 00 
   1808d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   18092:	31 c0                	xor    %eax,%eax
   18094:	49 89 e5             	mov    %rsp,%r13
   18097:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1809c:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   180a3:	ab cd ef 
   180a6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   180ab:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   180b2:	54 32 10 
   180b5:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
   180bc:	00 
   180bd:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   180c4:	00 
   180c5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   180ca:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
   180d1:	c3 
   180d2:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   180d7:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   180dc:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   180e1:	48 85 f6             	test   %rsi,%rsi
   180e4:	74 15                	je     180fb <mbedtls_sha1+0x8b>
   180e6:	48 89 f2             	mov    %rsi,%rdx
   180e9:	48 89 fe             	mov    %rdi,%rsi
   180ec:	4c 89 ef             	mov    %r13,%rdi
   180ef:	e8 1c fc ff ff       	callq  17d10 <mbedtls_sha1_update.part.0>
   180f4:	41 89 c4             	mov    %eax,%r12d
   180f7:	85 c0                	test   %eax,%eax
   180f9:	75 0e                	jne    18109 <mbedtls_sha1+0x99>
   180fb:	48 89 ee             	mov    %rbp,%rsi
   180fe:	4c 89 ef             	mov    %r13,%rdi
   18101:	e8 0a fe ff ff       	callq  17f10 <mbedtls_sha1_finish>
   18106:	41 89 c4             	mov    %eax,%r12d
   18109:	be 5c 00 00 00       	mov    $0x5c,%esi
   1810e:	4c 89 ef             	mov    %r13,%rdi
   18111:	e8 5a cb ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   18116:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1811b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   18122:	00 00 
   18124:	75 0d                	jne    18133 <mbedtls_sha1+0xc3>
   18126:	48 83 c4 70          	add    $0x70,%rsp
   1812a:	44 89 e0             	mov    %r12d,%eax
   1812d:	5d                   	pop    %rbp
   1812e:	41 5c                	pop    %r12
   18130:	41 5d                	pop    %r13
   18132:	c3                   	retq   
   18133:	e8 38 c1 fe ff       	callq  4270 <__stack_chk_fail@plt>
   18138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1813f:	00 

0000000000018140 <mbedtls_sha1_self_test>:
   18140:	f3 0f 1e fa          	endbr64 
   18144:	41 57                	push   %r15
   18146:	b9 0b 00 00 00       	mov    $0xb,%ecx
   1814b:	41 56                	push   %r14
   1814d:	4c 8d 35 ac b3 00 00 	lea    0xb3ac(%rip),%r14        # 23500 <sha1_test_buf>
   18154:	41 55                	push   %r13
   18156:	41 89 fd             	mov    %edi,%r13d
   18159:	41 54                	push   %r12
   1815b:	55                   	push   %rbp
   1815c:	48 8d 2d 3d b3 00 00 	lea    0xb33d(%rip),%rbp        # 234a0 <sha1_test_sum>
   18163:	53                   	push   %rbx
   18164:	31 db                	xor    %ebx,%ebx
   18166:	48 81 ec a8 04 00 00 	sub    $0x4a8,%rsp
   1816d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18174:	00 00 
   18176:	48 89 84 24 98 04 00 	mov    %rax,0x498(%rsp)
   1817d:	00 
   1817e:	31 c0                	xor    %eax,%eax
   18180:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   18185:	4c 89 e7             	mov    %r12,%rdi
   18188:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1818b:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   18191:	45 85 ed             	test   %r13d,%r13d
   18194:	0f 85 a6 00 00 00    	jne    18240 <mbedtls_sha1_self_test+0x100>
   1819a:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   181a1:	ab cd ef 
   181a4:	c7 44 24 28 f0 e1 d2 	movl   $0xc3d2e1f0,0x28(%rsp)
   181ab:	c3 
   181ac:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   181b1:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   181b8:	54 32 10 
   181bb:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   181c2:	00 00 
   181c4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   181c9:	48 83 fb 02          	cmp    $0x2,%rbx
   181cd:	0f 84 2d 01 00 00    	je     18300 <mbedtls_sha1_self_test+0x1c0>
   181d3:	48 8d 05 06 b3 00 00 	lea    0xb306(%rip),%rax        # 234e0 <sha1_test_buflen>
   181da:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   181de:	48 85 d2             	test   %rdx,%rdx
   181e1:	74 11                	je     181f4 <mbedtls_sha1_self_test+0xb4>
   181e3:	4c 89 f6             	mov    %r14,%rsi
   181e6:	4c 89 e7             	mov    %r12,%rdi
   181e9:	e8 22 fb ff ff       	callq  17d10 <mbedtls_sha1_update.part.0>
   181ee:	89 c2                	mov    %eax,%edx
   181f0:	85 c0                	test   %eax,%eax
   181f2:	75 3b                	jne    1822f <mbedtls_sha1_self_test+0xef>
   181f4:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
   181f9:	4c 89 e7             	mov    %r12,%rdi
   181fc:	4c 89 fe             	mov    %r15,%rsi
   181ff:	e8 0c fd ff ff       	callq  17f10 <mbedtls_sha1_finish>
   18204:	89 c2                	mov    %eax,%edx
   18206:	85 c0                	test   %eax,%eax
   18208:	75 25                	jne    1822f <mbedtls_sha1_self_test+0xef>
   1820a:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   1820f:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   18214:	48 33 55 08          	xor    0x8(%rbp),%rdx
   18218:	48 33 45 00          	xor    0x0(%rbp),%rax
   1821c:	48 09 c2             	or     %rax,%rdx
   1821f:	75 09                	jne    1822a <mbedtls_sha1_self_test+0xea>
   18221:	8b 45 10             	mov    0x10(%rbp),%eax
   18224:	41 39 47 10          	cmp    %eax,0x10(%r15)
   18228:	74 36                	je     18260 <mbedtls_sha1_self_test+0x120>
   1822a:	ba 01 00 00 00       	mov    $0x1,%edx
   1822f:	45 85 ed             	test   %r13d,%r13d
   18232:	0f 85 a8 00 00 00    	jne    182e0 <mbedtls_sha1_self_test+0x1a0>
   18238:	41 89 d5             	mov    %edx,%r13d
   1823b:	eb 4f                	jmp    1828c <mbedtls_sha1_self_test+0x14c>
   1823d:	0f 1f 00             	nopl   (%rax)
   18240:	8d 53 01             	lea    0x1(%rbx),%edx
   18243:	48 8d 35 36 b2 00 00 	lea    0xb236(%rip),%rsi        # 23480 <ripemd160_padding+0x40>
   1824a:	bf 01 00 00 00       	mov    $0x1,%edi
   1824f:	31 c0                	xor    %eax,%eax
   18251:	e8 fa c0 fe ff       	callq  4350 <__printf_chk@plt>
   18256:	e9 3f ff ff ff       	jmpq   1819a <mbedtls_sha1_self_test+0x5a>
   1825b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18260:	45 85 ed             	test   %r13d,%r13d
   18263:	74 0c                	je     18271 <mbedtls_sha1_self_test+0x131>
   18265:	48 8d 3d 96 2e 00 00 	lea    0x2e96(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
   1826c:	e8 9f bf fe ff       	callq  4210 <puts@plt>
   18271:	48 83 c3 01          	add    $0x1,%rbx
   18275:	48 83 c5 14          	add    $0x14,%rbp
   18279:	49 83 c6 39          	add    $0x39,%r14
   1827d:	48 83 fb 03          	cmp    $0x3,%rbx
   18281:	0f 85 0a ff ff ff    	jne    18191 <mbedtls_sha1_self_test+0x51>
   18287:	45 85 ed             	test   %r13d,%r13d
   1828a:	75 3c                	jne    182c8 <mbedtls_sha1_self_test+0x188>
   1828c:	be 5c 00 00 00       	mov    $0x5c,%esi
   18291:	4c 89 e7             	mov    %r12,%rdi
   18294:	e8 d7 c9 ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   18299:	48 8b 84 24 98 04 00 	mov    0x498(%rsp),%rax
   182a0:	00 
   182a1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   182a8:	00 00 
   182aa:	0f 85 a6 00 00 00    	jne    18356 <mbedtls_sha1_self_test+0x216>
   182b0:	48 81 c4 a8 04 00 00 	add    $0x4a8,%rsp
   182b7:	44 89 e8             	mov    %r13d,%eax
   182ba:	5b                   	pop    %rbx
   182bb:	5d                   	pop    %rbp
   182bc:	41 5c                	pop    %r12
   182be:	41 5d                	pop    %r13
   182c0:	41 5e                	pop    %r14
   182c2:	41 5f                	pop    %r15
   182c4:	c3                   	retq   
   182c5:	0f 1f 00             	nopl   (%rax)
   182c8:	bf 0a 00 00 00       	mov    $0xa,%edi
   182cd:	45 31 ed             	xor    %r13d,%r13d
   182d0:	e8 2b bf fe ff       	callq  4200 <putchar@plt>
   182d5:	eb b5                	jmp    1828c <mbedtls_sha1_self_test+0x14c>
   182d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   182de:	00 00 
   182e0:	48 8d 3d d6 b2 00 00 	lea    0xb2d6(%rip),%rdi        # 235bd <sha1_test_buf+0xbd>
   182e7:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   182eb:	e8 20 bf fe ff       	callq  4210 <puts@plt>
   182f0:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   182f4:	41 89 d5             	mov    %edx,%r13d
   182f7:	eb 93                	jmp    1828c <mbedtls_sha1_self_test+0x14c>
   182f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18300:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   18307:	00 
   18308:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   1830d:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   18314:	61 61 61 
   18317:	c7 44 24 0c e8 03 00 	movl   $0x3e8,0xc(%rsp)
   1831e:	00 
   1831f:	4c 89 ff             	mov    %r15,%rdi
   18322:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   18325:	eb 14                	jmp    1833b <mbedtls_sha1_self_test+0x1fb>
   18327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1832e:	00 00 
   18330:	83 6c 24 0c 01       	subl   $0x1,0xc(%rsp)
   18335:	0f 84 b9 fe ff ff    	je     181f4 <mbedtls_sha1_self_test+0xb4>
   1833b:	ba e8 03 00 00       	mov    $0x3e8,%edx
   18340:	4c 89 fe             	mov    %r15,%rsi
   18343:	4c 89 e7             	mov    %r12,%rdi
   18346:	e8 c5 f9 ff ff       	callq  17d10 <mbedtls_sha1_update.part.0>
   1834b:	89 c2                	mov    %eax,%edx
   1834d:	85 c0                	test   %eax,%eax
   1834f:	74 df                	je     18330 <mbedtls_sha1_self_test+0x1f0>
   18351:	e9 d9 fe ff ff       	jmpq   1822f <mbedtls_sha1_self_test+0xef>
   18356:	e8 15 bf fe ff       	callq  4270 <__stack_chk_fail@plt>
   1835b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018360 <mbedtls_sha256_init>:
   18360:	e9 7b d0 01 00       	jmpq   353e0 <mbedtls_sha256_init.instr.bb_18360>
   18365:	e9 a1 d0 01 00       	jmpq   3540b <instr.bb_18389>
   1836a:	00 48 89             	add    %cl,-0x77(%rax)
   1836d:	f9                   	stc    
   1836e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   18372:	31 c0                	xor    %eax,%eax
   18374:	48 c7 47 5c 00 00 00 	movq   $0x0,0x5c(%rdi)
   1837b:	00 
   1837c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   18380:	48 29 f9             	sub    %rdi,%rcx
   18383:	83 c1 6c             	add    $0x6c,%ecx
   18386:	c1 e9 03             	shr    $0x3,%ecx
   18389:	eb da                	jmp    18365 <mbedtls_sha256_init+0x5>
   1838b:	ab                   	stos   %eax,%es:(%rdi)
   1838c:	c3                   	retq   
   1838d:	0f 1f 00             	nopl   (%rax)

0000000000018390 <mbedtls_sha256_free>:
   18390:	f3 0f 1e fa          	endbr64 
   18394:	48 85 ff             	test   %rdi,%rdi
   18397:	74 0f                	je     183a8 <mbedtls_sha256_free+0x18>
   18399:	be 6c 00 00 00       	mov    $0x6c,%esi
   1839e:	e9 cd c8 ff ff       	jmpq   14c70 <mbedtls_platform_zeroize>
   183a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   183a8:	c3                   	retq   
   183a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000183b0 <mbedtls_sha256_clone>:
   183b0:	f3 0f 1e fa          	endbr64 
   183b4:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   183b8:	0f 11 07             	movups %xmm0,(%rdi)
   183bb:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   183c0:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   183c4:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   183c9:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   183cd:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   183d2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   183d6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   183db:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   183df:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   183e4:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
   183e8:	48 8b 46 60          	mov    0x60(%rsi),%rax
   183ec:	48 89 47 60          	mov    %rax,0x60(%rdi)
   183f0:	8b 46 68             	mov    0x68(%rsi),%eax
   183f3:	89 47 68             	mov    %eax,0x68(%rdi)
   183f6:	c3                   	retq   
   183f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   183fe:	00 00 

0000000000018400 <mbedtls_sha256_starts>:
   18400:	e9 0b d0 01 00       	jmpq   35410 <mbedtls_sha256_starts.instr.bb_18400>
   18405:	fe 01                	incb   (%rcx)
   18407:	0f 87 93 00 00 00    	ja     184a0 <mbedtls_sha256_starts+0xa0>
   1840d:	e9 0d d0 01 00       	jmpq   3541f <instr.bb_1840d>
   18412:	00 00                	add    %al,(%rax)
   18414:	85 f6                	test   %esi,%esi
   18416:	74 48                	je     18460 <mbedtls_sha256_starts+0x60>
   18418:	e9 11 d0 01 00       	jmpq   3542e <instr.bb_18418>
   1841d:	c1 07 d5             	roll   $0xd5,(%rdi)
   18420:	7c 36                	jl     18458 <mbedtls_sha256_starts+0x58>
   18422:	89 77 68             	mov    %esi,0x68(%rdi)
   18425:	48 89 47 08          	mov    %rax,0x8(%rdi)
   18429:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   18430:	59 0e f7 
   18433:	48 89 47 10          	mov    %rax,0x10(%rdi)
   18437:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   1843e:	15 58 68 
   18441:	48 89 47 18          	mov    %rax,0x18(%rdi)
   18445:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   1844c:	4f fa be 
   1844f:	48 89 47 20          	mov    %rax,0x20(%rdi)
   18453:	31 c0                	xor    %eax,%eax
   18455:	c3                   	retq   
   18456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1845d:	00 00 00 
   18460:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   18467:	ae 67 bb 
   1846a:	89 77 68             	mov    %esi,0x68(%rdi)
   1846d:	48 89 47 08          	mov    %rax,0x8(%rdi)
   18471:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   18478:	f5 4f a5 
   1847b:	48 89 47 10          	mov    %rax,0x10(%rdi)
   1847f:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   18486:	68 05 9b 
   18489:	48 89 47 18          	mov    %rax,0x18(%rdi)
   1848d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   18494:	cd e0 5b 
   18497:	48 89 47 20          	mov    %rax,0x20(%rdi)
   1849b:	31 c0                	xor    %eax,%eax
   1849d:	c3                   	retq   
   1849e:	66 90                	xchg   %ax,%ax
   184a0:	b8 8c ff ff ff       	mov    $0xffffff8c,%eax
   184a5:	c3                   	retq   
   184a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   184ad:	00 00 00 

00000000000184b0 <mbedtls_internal_sha256_process>:
   184b0:	e9 bb cf 01 00       	jmpq   35470 <mbedtls_internal_sha256_process.instr.bb_184b0>
   184b5:	57                   	push   %rdi
   184b6:	48 89 f9             	mov    %rdi,%rcx
   184b9:	41 56                	push   %r14
   184bb:	41 55                	push   %r13
   184bd:	41 54                	push   %r12
   184bf:	55                   	push   %rbp
   184c0:	53                   	push   %rbx
   184c1:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
   184c8:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   184cd:	48 8d 9c 24 58 01 00 	lea    0x158(%rsp),%rbx
   184d4:	00 
   184d5:	48 89 df             	mov    %rbx,%rdi
   184d8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   184df:	00 00 
   184e1:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   184e8:	00 
   184e9:	31 c0                	xor    %eax,%eax
   184eb:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   184f0:	e9 42 d0 01 00       	jmpq   35537 <instr.bb_184f0>
   184f5:	14 07                	adc    $0x7,%al
   184f7:	48 83 c0 04          	add    $0x4,%rax
   184fb:	48 83 f8 20          	cmp    $0x20,%rax
   184ff:	75 ef                	jne    184f0 <mbedtls_internal_sha256_process+0x40>
   18501:	e9 46 d0 01 00       	jmpq   3554c <instr.bb_18501>
   18506:	31 c0                	xor    %eax,%eax
   18508:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
   1850d:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   18512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18518:	e9 43 d0 01 00       	jmpq   35560 <instr.bb_18518>
   1851d:	89 14 01             	mov    %edx,(%rcx,%rax,1)
   18520:	48 83 c0 04          	add    $0x4,%rax
   18524:	48 83 f8 40          	cmp    $0x40,%rax
   18528:	75 ee                	jne    18518 <mbedtls_internal_sha256_process+0x68>
   1852a:	e9 47 d0 01 00       	jmpq   35576 <instr.bb_1852a>
   1852f:	48 8d 05 4a b2 00 00 	lea    0xb24a(%rip),%rax        # 23780 <K>
   18536:	c7 44 24 1c d5 5e 1c 	movl   $0xab1c5ed5,0x1c(%rsp)
   1853d:	ab 
   1853e:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
   18545:	00 
   18546:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1854b:	8b ac 24 74 01 00 00 	mov    0x174(%rsp),%ebp
   18552:	41 ba a5 db b5 e9    	mov    $0xe9b5dba5,%r10d
   18558:	41 b9 cf fb c0 b5    	mov    $0xb5c0fbcf,%r9d
   1855e:	48 89 04 24          	mov    %rax,(%rsp)
   18562:	8b b4 24 68 01 00 00 	mov    0x168(%rsp),%esi
   18569:	41 b8 98 2f 8a 42    	mov    $0x428a2f98,%r8d
   1856f:	c7 44 24 18 a4 82 3f 	movl   $0x923f82a4,0x18(%rsp)
   18576:	92 
   18577:	44 8b bc 24 70 01 00 	mov    0x170(%rsp),%r15d
   1857e:	00 
   1857f:	c7 44 24 14 f1 11 f1 	movl   $0x59f111f1,0x14(%rsp)
   18586:	59 
   18587:	44 8b b4 24 6c 01 00 	mov    0x16c(%rsp),%r14d
   1858e:	00 
   1858f:	c7 44 24 10 5b c2 56 	movl   $0x3956c25b,0x10(%rsp)
   18596:	39 
   18597:	44 8b ac 24 58 01 00 	mov    0x158(%rsp),%r13d
   1859e:	00 
   1859f:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   185a4:	44 8b 9c 24 5c 01 00 	mov    0x15c(%rsp),%r11d
   185ab:	00 
   185ac:	8b 9c 24 60 01 00 00 	mov    0x160(%rsp),%ebx
   185b3:	8b 8c 24 64 01 00 00 	mov    0x164(%rsp),%ecx
   185ba:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   185bf:	ba 91 44 37 71       	mov    $0x71374491,%edx
   185c4:	e9 47 d0 01 00       	jmpq   35610 <instr.bb_185c4>
   185c9:	41 c1 cc 06          	ror    $0x6,%r12d
   185cd:	c1 c8 0b             	ror    $0xb,%eax
   185d0:	44 31 e0             	xor    %r12d,%eax
   185d3:	41 89 f4             	mov    %esi,%r12d
   185d6:	41 c1 c4 07          	rol    $0x7,%r12d
   185da:	44 31 e0             	xor    %r12d,%eax
   185dd:	45 89 fc             	mov    %r15d,%r12d
   185e0:	45 31 f4             	xor    %r14d,%r12d
   185e3:	41 21 f4             	and    %esi,%r12d
   185e6:	45 31 fc             	xor    %r15d,%r12d
   185e9:	44 03 7f 0c          	add    0xc(%rdi),%r15d
   185ed:	44 01 e0             	add    %r12d,%eax
   185f0:	03 47 08             	add    0x8(%rdi),%eax
   185f3:	45 89 ec             	mov    %r13d,%r12d
   185f6:	01 c5                	add    %eax,%ebp
   185f8:	44 89 e8             	mov    %r13d,%eax
   185fb:	45 21 dc             	and    %r11d,%r12d
   185fe:	44 01 c5             	add    %r8d,%ebp
   18601:	45 89 e8             	mov    %r13d,%r8d
   18604:	c1 c8 0d             	ror    $0xd,%eax
   18607:	41 c1 c8 02          	ror    $0x2,%r8d
   1860b:	01 e9                	add    %ebp,%ecx
   1860d:	44 31 c0             	xor    %r8d,%eax
   18610:	45 89 e8             	mov    %r13d,%r8d
   18613:	41 c1 c0 0a          	rol    $0xa,%r8d
   18617:	44 31 c0             	xor    %r8d,%eax
   1861a:	45 89 e8             	mov    %r13d,%r8d
   1861d:	45 09 d8             	or     %r11d,%r8d
   18620:	41 21 d8             	and    %ebx,%r8d
   18623:	45 09 e0             	or     %r12d,%r8d
   18626:	41 01 c0             	add    %eax,%r8d
   18629:	89 c8                	mov    %ecx,%eax
   1862b:	41 01 e8             	add    %ebp,%r8d
   1862e:	89 f5                	mov    %esi,%ebp
   18630:	c1 c8 0b             	ror    $0xb,%eax
   18633:	44 31 f5             	xor    %r14d,%ebp
   18636:	45 89 c4             	mov    %r8d,%r12d
   18639:	21 cd                	and    %ecx,%ebp
   1863b:	44 31 f5             	xor    %r14d,%ebp
   1863e:	e9 47 d0 01 00       	jmpq   3568a <instr.bb_1863e>
   18643:	c1 cd 06             	ror    $0x6,%ebp
   18646:	31 e8                	xor    %ebp,%eax
   18648:	89 cd                	mov    %ecx,%ebp
   1864a:	c1 c5 07             	rol    $0x7,%ebp
   1864d:	45 21 ec             	and    %r13d,%r12d
   18650:	44 03 77 10          	add    0x10(%rdi),%r14d
   18654:	31 e8                	xor    %ebp,%eax
   18656:	44 89 c5             	mov    %r8d,%ebp
   18659:	44 01 f8             	add    %r15d,%eax
   1865c:	c1 cd 0d             	ror    $0xd,%ebp
   1865f:	01 c2                	add    %eax,%edx
   18661:	44 89 c0             	mov    %r8d,%eax
   18664:	c1 c8 02             	ror    $0x2,%eax
   18667:	01 d3                	add    %edx,%ebx
   18669:	31 c5                	xor    %eax,%ebp
   1866b:	44 89 c0             	mov    %r8d,%eax
   1866e:	c1 c0 0a             	rol    $0xa,%eax
   18671:	31 c5                	xor    %eax,%ebp
   18673:	44 89 c0             	mov    %r8d,%eax
   18676:	44 09 e8             	or     %r13d,%eax
   18679:	44 21 d8             	and    %r11d,%eax
   1867c:	44 09 e0             	or     %r12d,%eax
   1867f:	45 89 c4             	mov    %r8d,%r12d
   18682:	01 e8                	add    %ebp,%eax
   18684:	89 cd                	mov    %ecx,%ebp
   18686:	31 f5                	xor    %esi,%ebp
   18688:	01 d0                	add    %edx,%eax
   1868a:	e9 47 d0 01 00       	jmpq   356d6 <instr.bb_1868a>
   1868f:	ca 0b 31             	lret   $0x310b
   18692:	f5                   	cmc    
   18693:	41 01 ee             	add    %ebp,%r14d
   18696:	89 dd                	mov    %ebx,%ebp
   18698:	c1 cd 06             	ror    $0x6,%ebp
   1869b:	31 ea                	xor    %ebp,%edx
   1869d:	89 dd                	mov    %ebx,%ebp
   1869f:	c1 c5 07             	rol    $0x7,%ebp
   186a2:	31 ea                	xor    %ebp,%edx
   186a4:	89 c5                	mov    %eax,%ebp
   186a6:	44 01 f2             	add    %r14d,%edx
   186a9:	c1 cd 0d             	ror    $0xd,%ebp
   186ac:	41 01 d1             	add    %edx,%r9d
   186af:	89 c2                	mov    %eax,%edx
   186b1:	c1 ca 02             	ror    $0x2,%edx
   186b4:	45 01 cb             	add    %r9d,%r11d
   186b7:	31 d5                	xor    %edx,%ebp
   186b9:	89 c2                	mov    %eax,%edx
   186bb:	c1 c2 0a             	rol    $0xa,%edx
   186be:	41 21 c4             	and    %eax,%r12d
   186c1:	03 77 14             	add    0x14(%rdi),%esi
   186c4:	31 d5                	xor    %edx,%ebp
   186c6:	44 89 c2             	mov    %r8d,%edx
   186c9:	09 c2                	or     %eax,%edx
   186cb:	44 21 ea             	and    %r13d,%edx
   186ce:	44 09 e2             	or     %r12d,%edx
   186d1:	01 ea                	add    %ebp,%edx
   186d3:	44 89 dd             	mov    %r11d,%ebp
   186d6:	44 01 ca             	add    %r9d,%edx
   186d9:	41 89 c9             	mov    %ecx,%r9d
   186dc:	c1 cd 06             	ror    $0x6,%ebp
   186df:	41 31 d9             	xor    %ebx,%r9d
   186e2:	45 21 d9             	and    %r11d,%r9d
   186e5:	41 31 c9             	xor    %ecx,%r9d
   186e8:	44 01 ce             	add    %r9d,%esi
   186eb:	45 89 d9             	mov    %r11d,%r9d
   186ee:	41 c1 c9 0b          	ror    $0xb,%r9d
   186f2:	41 31 e9             	xor    %ebp,%r9d
   186f5:	44 89 dd             	mov    %r11d,%ebp
   186f8:	e9 47 d0 01 00       	jmpq   35744 <instr.bb_186f8>
   186fd:	e9 89 c5 44 01       	jmpq   1464c8b <.instr.bb_1ab88+0x142f1bb>
   18702:	ce                   	(bad)  
   18703:	41 89 d1             	mov    %edx,%r9d
   18706:	21 d5                	and    %edx,%ebp
   18708:	41 01 f2             	add    %esi,%r10d
   1870b:	89 d6                	mov    %edx,%esi
   1870d:	41 c1 c9 0d          	ror    $0xd,%r9d
   18711:	c1 ce 02             	ror    $0x2,%esi
   18714:	45 01 d5             	add    %r10d,%r13d
   18717:	41 31 f1             	xor    %esi,%r9d
   1871a:	89 d6                	mov    %edx,%esi
   1871c:	c1 c6 0a             	rol    $0xa,%esi
   1871f:	41 31 f1             	xor    %esi,%r9d
   18722:	89 c6                	mov    %eax,%esi
   18724:	09 d6                	or     %edx,%esi
   18726:	44 21 c6             	and    %r8d,%esi
   18729:	09 ee                	or     %ebp,%esi
   1872b:	44 01 ce             	add    %r9d,%esi
   1872e:	45 89 e9             	mov    %r13d,%r9d
   18731:	44 01 d6             	add    %r10d,%esi
   18734:	41 89 da             	mov    %ebx,%r10d
   18737:	45 31 da             	xor    %r11d,%r10d
   1873a:	03 4f 18             	add    0x18(%rdi),%ecx
   1873d:	41 c1 c9 06          	ror    $0x6,%r9d
   18741:	45 21 ea             	and    %r13d,%r10d
   18744:	41 31 da             	xor    %ebx,%r10d
   18747:	03 5f 1c             	add    0x1c(%rdi),%ebx
   1874a:	e9 47 d0 01 00       	jmpq   35796 <instr.bb_1874a>
   1874f:	e9 c1 c9 0b 44       	jmpq   440d5115 <.instr.bb_1ab88+0x4409f645>
   18754:	31 c9                	xor    %ecx,%ecx
   18756:	45 89 e9             	mov    %r13d,%r9d
   18759:	41 c1 c1 07          	rol    $0x7,%r9d
   1875d:	44 31 c9             	xor    %r9d,%ecx
   18760:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   18765:	44 01 d1             	add    %r10d,%ecx
   18768:	41 89 d2             	mov    %edx,%r10d
   1876b:	41 01 c9             	add    %ecx,%r9d
   1876e:	89 f1                	mov    %esi,%ecx
   18770:	41 21 f2             	and    %esi,%r10d
   18773:	43 8d 2c 08          	lea    (%r8,%r9,1),%ebp
   18777:	41 89 f0             	mov    %esi,%r8d
   1877a:	c1 c9 02             	ror    $0x2,%ecx
   1877d:	41 c1 c8 0d          	ror    $0xd,%r8d
   18781:	41 31 c8             	xor    %ecx,%r8d
   18784:	89 f1                	mov    %esi,%ecx
   18786:	c1 c1 0a             	rol    $0xa,%ecx
   18789:	41 31 c8             	xor    %ecx,%r8d
   1878c:	89 d1                	mov    %edx,%ecx
   1878e:	09 f1                	or     %esi,%ecx
   18790:	21 c1                	and    %eax,%ecx
   18792:	44 09 d1             	or     %r10d,%ecx
   18795:	44 01 c1             	add    %r8d,%ecx
   18798:	41 89 e8             	mov    %ebp,%r8d
   1879b:	44 01 c9             	add    %r9d,%ecx
   1879e:	45 89 d9             	mov    %r11d,%r9d
   187a1:	41 c1 c8 0b          	ror    $0xb,%r8d
   187a5:	45 31 e9             	xor    %r13d,%r9d
   187a8:	41 21 e9             	and    %ebp,%r9d
   187ab:	45 31 d9             	xor    %r11d,%r9d
   187ae:	41 01 d9             	add    %ebx,%r9d
   187b1:	89 eb                	mov    %ebp,%ebx
   187b3:	c1 cb 06             	ror    $0x6,%ebx
   187b6:	41 31 d8             	xor    %ebx,%r8d
   187b9:	89 eb                	mov    %ebp,%ebx
   187bb:	c1 c3 07             	rol    $0x7,%ebx
   187be:	41 31 d8             	xor    %ebx,%r8d
   187c1:	89 cb                	mov    %ecx,%ebx
   187c3:	e9 47 d0 01 00       	jmpq   3580f <instr.bb_187c3>
   187c8:	01 c8                	add    %ecx,%eax
   187ca:	44 03 44 24 14       	add    0x14(%rsp),%r8d
   187cf:	c1 cb 02             	ror    $0x2,%ebx
   187d2:	41 89 f1             	mov    %esi,%r9d
   187d5:	46 8d 3c 00          	lea    (%rax,%r8,1),%r15d
   187d9:	89 c8                	mov    %ecx,%eax
   187db:	41 21 c9             	and    %ecx,%r9d
   187de:	c1 c8 0d             	ror    $0xd,%eax
   187e1:	31 d8                	xor    %ebx,%eax
   187e3:	89 cb                	mov    %ecx,%ebx
   187e5:	c1 c3 0a             	rol    $0xa,%ebx
   187e8:	31 d8                	xor    %ebx,%eax
   187ea:	89 f3                	mov    %esi,%ebx
   187ec:	09 cb                	or     %ecx,%ebx
   187ee:	21 d3                	and    %edx,%ebx
   187f0:	44 09 cb             	or     %r9d,%ebx
   187f3:	01 c3                	add    %eax,%ebx
   187f5:	44 89 f8             	mov    %r15d,%eax
   187f8:	44 01 c3             	add    %r8d,%ebx
   187fb:	45 89 e8             	mov    %r13d,%r8d
   187fe:	c1 c8 0b             	ror    $0xb,%eax
   18801:	41 31 e8             	xor    %ebp,%r8d
   18804:	41 89 d9             	mov    %ebx,%r9d
   18807:	45 21 f8             	and    %r15d,%r8d
   1880a:	45 31 e8             	xor    %r13d,%r8d
   1880d:	45 01 d8             	add    %r11d,%r8d
   18810:	45 89 fb             	mov    %r15d,%r11d
   18813:	41 c1 cb 06          	ror    $0x6,%r11d
   18817:	e9 47 d0 01 00       	jmpq   35863 <instr.bb_18817>
   1881c:	fb                   	sti    
   1881d:	41 c1 c3 07          	rol    $0x7,%r11d
   18821:	44 31 d8             	xor    %r11d,%eax
   18824:	45 8d 1c 00          	lea    (%r8,%rax,1),%r11d
   18828:	8b 44 24 18          	mov    0x18(%rsp),%eax
   1882c:	41 89 c8             	mov    %ecx,%r8d
   1882f:	44 01 d8             	add    %r11d,%eax
   18832:	41 89 db             	mov    %ebx,%r11d
   18835:	44 8d 34 02          	lea    (%rdx,%rax,1),%r14d
   18839:	89 da                	mov    %ebx,%edx
   1883b:	41 c1 cb 0d          	ror    $0xd,%r11d
   1883f:	c1 ca 02             	ror    $0x2,%edx
   18842:	44 31 da             	xor    %r11d,%edx
   18845:	41 89 db             	mov    %ebx,%r11d
   18848:	41 c1 c3 0a          	rol    $0xa,%r11d
   1884c:	44 31 da             	xor    %r11d,%edx
   1884f:	41 89 cb             	mov    %ecx,%r11d
   18852:	41 09 db             	or     %ebx,%r11d
   18855:	41 21 f3             	and    %esi,%r11d
   18858:	41 21 d8             	and    %ebx,%r8d
   1885b:	44 03 6f 24          	add    0x24(%rdi),%r13d
   1885f:	48 83 04 24 20       	addq   $0x20,(%rsp)
   18864:	45 09 c3             	or     %r8d,%r11d
   18867:	48 83 c7 20          	add    $0x20,%rdi
   1886b:	41 01 d3             	add    %edx,%r11d
   1886e:	44 89 f2             	mov    %r14d,%edx
   18871:	41 01 c3             	add    %eax,%r11d
   18874:	89 e8                	mov    %ebp,%eax
   18876:	c1 ca 0b             	ror    $0xb,%edx
   18879:	44 31 f8             	xor    %r15d,%eax
   1887c:	45 89 d8             	mov    %r11d,%r8d
   1887f:	45 21 d9             	and    %r11d,%r9d
   18882:	44 21 f0             	and    %r14d,%eax
   18885:	41 c1 c8 0d          	ror    $0xd,%r8d
   18889:	31 e8                	xor    %ebp,%eax
   1888b:	41 01 c5             	add    %eax,%r13d
   1888e:	44 89 f0             	mov    %r14d,%eax
   18891:	c1 c8 06             	ror    $0x6,%eax
   18894:	31 d0                	xor    %edx,%eax
   18896:	44 89 f2             	mov    %r14d,%edx
   18899:	e9 47 d0 01 00       	jmpq   358e5 <instr.bb_18899>
   1889e:	44 89 da             	mov    %r11d,%edx
   188a1:	c1 ca 02             	ror    $0x2,%edx
   188a4:	41 01 c5             	add    %eax,%r13d
   188a7:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   188ab:	44 31 c2             	xor    %r8d,%edx
   188ae:	45 89 d8             	mov    %r11d,%r8d
   188b1:	41 c1 c0 0a          	rol    $0xa,%r8d
   188b5:	44 01 e8             	add    %r13d,%eax
   188b8:	44 31 c2             	xor    %r8d,%edx
   188bb:	41 89 d8             	mov    %ebx,%r8d
   188be:	01 c6                	add    %eax,%esi
   188c0:	45 09 d8             	or     %r11d,%r8d
   188c3:	41 21 c8             	and    %ecx,%r8d
   188c6:	45 09 c8             	or     %r9d,%r8d
   188c9:	4c 8b 0c 24          	mov    (%rsp),%r9
   188cd:	44 01 c2             	add    %r8d,%edx
   188d0:	44 8d 2c 10          	lea    (%rax,%rdx,1),%r13d
   188d4:	48 39 7c 24 20       	cmp    %rdi,0x20(%rsp)
   188d9:	74 3d                	je     18918 <mbedtls_internal_sha256_process+0x468>
   188db:	e9 4b d0 01 00       	jmpq   3592b <instr.bb_188db>
   188e0:	01 41 8b             	add    %eax,-0x75(%rcx)
   188e3:	51                   	push   %rcx
   188e4:	04 44                	add    $0x44,%al
   188e6:	8b 60 10             	mov    0x10(%rax),%esp
   188e9:	44 8b 50 0c          	mov    0xc(%rax),%r10d
   188ed:	45 8b 49 08          	mov    0x8(%r9),%r9d
   188f1:	44 89 64 24 10       	mov    %r12d,0x10(%rsp)
   188f6:	44 8b 60 14          	mov    0x14(%rax),%r12d
   188fa:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
   188ff:	44 8b 60 18          	mov    0x18(%rax),%r12d
   18903:	8b 40 1c             	mov    0x1c(%rax),%eax
   18906:	44 89 64 24 18       	mov    %r12d,0x18(%rsp)
   1890b:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1890f:	e9 b0 fc ff ff       	jmpq   185c4 <mbedtls_internal_sha256_process+0x114>
   18914:	0f 1f 40 00          	nopl   0x0(%rax)
   18918:	89 44 24 50          	mov    %eax,0x50(%rsp)
   1891c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   18921:	41 b9 86 47 be ef    	mov    $0xefbe4786,%r9d
   18927:	41 b8 c1 69 9b e4    	mov    $0xe49b69c1,%r8d
   1892d:	89 b4 24 68 01 00 00 	mov    %esi,0x168(%rsp)
   18934:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   18939:	48 05 c0 00 00 00    	add    $0xc0,%rax
   1893f:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
   18946:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1894b:	89 f0                	mov    %esi,%eax
   1894d:	89 ce                	mov    %ecx,%esi
   1894f:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
   18956:	00 
   18957:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
   1895e:	00 
   1895f:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
   18966:	00 
   18967:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
   1896e:	00 
   1896f:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
   18976:	89 8c 24 64 01 00 00 	mov    %ecx,0x164(%rsp)
   1897d:	89 54 24 54          	mov    %edx,0x54(%rsp)
   18981:	c7 44 24 28 da 88 f9 	movl   $0x76f988da,0x28(%rsp)
   18988:	76 
   18989:	c7 44 24 20 dc a9 b0 	movl   $0x5cb0a9dc,0x20(%rsp)
   18990:	5c 
   18991:	c7 44 24 1c aa 84 74 	movl   $0x4a7484aa,0x1c(%rsp)
   18998:	4a 
   18999:	c7 44 24 18 6f 2c e9 	movl   $0x2de92c6f,0x18(%rsp)
   189a0:	2d 
   189a1:	c7 44 24 14 cc a1 0c 	movl   $0x240ca1cc,0x14(%rsp)
   189a8:	24 
   189a9:	c7 44 24 10 c6 9d c1 	movl   $0xfc19dc6,0x10(%rsp)
   189b0:	0f 
   189b1:	eb 37                	jmp    189ea <mbedtls_internal_sha256_process+0x53a>
   189b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   189b8:	8b 57 48             	mov    0x48(%rdi),%edx
   189bb:	44 8b 47 40          	mov    0x40(%rdi),%r8d
   189bf:	44 8b 4f 44          	mov    0x44(%rdi),%r9d
   189c3:	89 54 24 10          	mov    %edx,0x10(%rsp)
   189c7:	8b 57 4c             	mov    0x4c(%rdi),%edx
   189ca:	89 54 24 14          	mov    %edx,0x14(%rsp)
   189ce:	8b 57 50             	mov    0x50(%rdi),%edx
   189d1:	89 54 24 18          	mov    %edx,0x18(%rsp)
   189d5:	8b 57 54             	mov    0x54(%rdi),%edx
   189d8:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
   189dc:	8b 57 58             	mov    0x58(%rdi),%edx
   189df:	8b 7f 5c             	mov    0x5c(%rdi),%edi
   189e2:	89 54 24 20          	mov    %edx,0x20(%rsp)
   189e6:	89 7c 24 28          	mov    %edi,0x28(%rsp)
   189ea:	41 8b 54 24 40       	mov    0x40(%r12),%edx
   189ef:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
   189f4:	41 8b 7c 24 0c       	mov    0xc(%r12),%edi
   189f9:	45 8b 54 24 08       	mov    0x8(%r12),%r10d
   189fe:	c1 c1 0d             	rol    $0xd,%ecx
   18a01:	c1 c2 0f             	rol    $0xf,%edx
   18a04:	45 03 54 24 2c       	add    0x2c(%r12),%r10d
   18a09:	31 ca                	xor    %ecx,%edx
   18a0b:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
   18a10:	c1 e9 0a             	shr    $0xa,%ecx
   18a13:	31 d1                	xor    %edx,%ecx
   18a15:	89 fa                	mov    %edi,%edx
   18a17:	44 01 d1             	add    %r10d,%ecx
   18a1a:	41 89 fa             	mov    %edi,%r10d
   18a1d:	c1 c2 0e             	rol    $0xe,%edx
   18a20:	41 c1 ca 07          	ror    $0x7,%r10d
   18a24:	44 31 d2             	xor    %r10d,%edx
   18a27:	41 89 fa             	mov    %edi,%r10d
   18a2a:	41 c1 ea 03          	shr    $0x3,%r10d
   18a2e:	44 31 d2             	xor    %r10d,%edx
   18a31:	44 8d 14 11          	lea    (%rcx,%rdx,1),%r10d
   18a35:	89 c1                	mov    %eax,%ecx
   18a37:	89 c2                	mov    %eax,%edx
   18a39:	c1 c9 06             	ror    $0x6,%ecx
   18a3c:	c1 ca 0b             	ror    $0xb,%edx
   18a3f:	45 89 54 24 48       	mov    %r10d,0x48(%r12)
   18a44:	31 ca                	xor    %ecx,%edx
   18a46:	89 c1                	mov    %eax,%ecx
   18a48:	44 89 14 24          	mov    %r10d,(%rsp)
   18a4c:	c1 c1 07             	rol    $0x7,%ecx
   18a4f:	31 ca                	xor    %ecx,%edx
   18a51:	44 89 f9             	mov    %r15d,%ecx
   18a54:	44 31 f1             	xor    %r14d,%ecx
   18a57:	21 c1                	and    %eax,%ecx
   18a59:	44 31 f9             	xor    %r15d,%ecx
   18a5c:	01 ca                	add    %ecx,%edx
   18a5e:	44 89 e9             	mov    %r13d,%ecx
   18a61:	44 01 d2             	add    %r10d,%edx
   18a64:	44 21 d9             	and    %r11d,%ecx
   18a67:	01 d5                	add    %edx,%ebp
   18a69:	44 89 ea             	mov    %r13d,%edx
   18a6c:	41 01 e8             	add    %ebp,%r8d
   18a6f:	44 89 ed             	mov    %r13d,%ebp
   18a72:	c1 ca 0d             	ror    $0xd,%edx
   18a75:	c1 cd 02             	ror    $0x2,%ebp
   18a78:	46 8d 14 06          	lea    (%rsi,%r8,1),%r10d
   18a7c:	89 c6                	mov    %eax,%esi
   18a7e:	31 ea                	xor    %ebp,%edx
   18a80:	44 89 ed             	mov    %r13d,%ebp
   18a83:	c1 c5 0a             	rol    $0xa,%ebp
   18a86:	31 ea                	xor    %ebp,%edx
   18a88:	44 89 ed             	mov    %r13d,%ebp
   18a8b:	44 09 dd             	or     %r11d,%ebp
   18a8e:	21 dd                	and    %ebx,%ebp
   18a90:	09 cd                	or     %ecx,%ebp
   18a92:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
   18a97:	41 03 7c 24 30       	add    0x30(%r12),%edi
   18a9c:	44 31 f6             	xor    %r14d,%esi
   18a9f:	01 d5                	add    %edx,%ebp
   18aa1:	41 8b 54 24 44       	mov    0x44(%r12),%edx
   18aa6:	44 21 d6             	and    %r10d,%esi
   18aa9:	c1 c1 0f             	rol    $0xf,%ecx
   18aac:	44 01 c5             	add    %r8d,%ebp
   18aaf:	45 8b 44 24 10       	mov    0x10(%r12),%r8d
   18ab4:	44 31 f6             	xor    %r14d,%esi
   18ab7:	c1 c2 0d             	rol    $0xd,%edx
   18aba:	31 ca                	xor    %ecx,%edx
   18abc:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
   18ac1:	c1 e9 0a             	shr    $0xa,%ecx
   18ac4:	31 d1                	xor    %edx,%ecx
   18ac6:	44 89 c2             	mov    %r8d,%edx
   18ac9:	01 cf                	add    %ecx,%edi
   18acb:	44 89 c1             	mov    %r8d,%ecx
   18ace:	c1 ca 07             	ror    $0x7,%edx
   18ad1:	c1 c1 0e             	rol    $0xe,%ecx
   18ad4:	31 d1                	xor    %edx,%ecx
   18ad6:	44 89 c2             	mov    %r8d,%edx
   18ad9:	c1 ea 03             	shr    $0x3,%edx
   18adc:	31 d1                	xor    %edx,%ecx
   18ade:	44 89 d2             	mov    %r10d,%edx
   18ae1:	01 f9                	add    %edi,%ecx
   18ae3:	c1 ca 0b             	ror    $0xb,%edx
   18ae6:	44 89 ef             	mov    %r13d,%edi
   18ae9:	41 01 cf             	add    %ecx,%r15d
   18aec:	41 89 4c 24 4c       	mov    %ecx,0x4c(%r12)
   18af1:	41 01 f7             	add    %esi,%r15d
   18af4:	44 89 d6             	mov    %r10d,%esi
   18af7:	c1 ce 06             	ror    $0x6,%esi
   18afa:	31 f2                	xor    %esi,%edx
   18afc:	44 89 d6             	mov    %r10d,%esi
   18aff:	c1 c6 07             	rol    $0x7,%esi
   18b02:	31 f2                	xor    %esi,%edx
   18b04:	89 ee                	mov    %ebp,%esi
   18b06:	44 01 fa             	add    %r15d,%edx
   18b09:	c1 ce 0d             	ror    $0xd,%esi
   18b0c:	44 8b 3c 24          	mov    (%rsp),%r15d
   18b10:	41 01 d1             	add    %edx,%r9d
   18b13:	89 ea                	mov    %ebp,%edx
   18b15:	c1 ca 02             	ror    $0x2,%edx
   18b18:	44 01 cb             	add    %r9d,%ebx
   18b1b:	31 d6                	xor    %edx,%esi
   18b1d:	89 ea                	mov    %ebp,%edx
   18b1f:	c1 c2 0a             	rol    $0xa,%edx
   18b22:	21 ef                	and    %ebp,%edi
   18b24:	45 03 44 24 34       	add    0x34(%r12),%r8d
   18b29:	31 d6                	xor    %edx,%esi
   18b2b:	44 89 ea             	mov    %r13d,%edx
   18b2e:	09 ea                	or     %ebp,%edx
   18b30:	44 21 da             	and    %r11d,%edx
   18b33:	09 fa                	or     %edi,%edx
   18b35:	44 89 ff             	mov    %r15d,%edi
   18b38:	01 f2                	add    %esi,%edx
   18b3a:	44 89 fe             	mov    %r15d,%esi
   18b3d:	c1 c7 0d             	rol    $0xd,%edi
   18b40:	c1 c6 0f             	rol    $0xf,%esi
   18b43:	44 01 ca             	add    %r9d,%edx
   18b46:	45 8b 4c 24 14       	mov    0x14(%r12),%r9d
   18b4b:	31 f7                	xor    %esi,%edi
   18b4d:	44 89 fe             	mov    %r15d,%esi
   18b50:	41 89 ef             	mov    %ebp,%r15d
   18b53:	c1 ee 0a             	shr    $0xa,%esi
   18b56:	31 fe                	xor    %edi,%esi
   18b58:	44 89 cf             	mov    %r9d,%edi
   18b5b:	41 01 f0             	add    %esi,%r8d
   18b5e:	44 89 ce             	mov    %r9d,%esi
   18b61:	c1 cf 07             	ror    $0x7,%edi
   18b64:	c1 c6 0e             	rol    $0xe,%esi
   18b67:	31 fe                	xor    %edi,%esi
   18b69:	44 89 cf             	mov    %r9d,%edi
   18b6c:	c1 ef 03             	shr    $0x3,%edi
   18b6f:	31 fe                	xor    %edi,%esi
   18b71:	44 01 c6             	add    %r8d,%esi
   18b74:	41 89 c0             	mov    %eax,%r8d
   18b77:	45 31 d0             	xor    %r10d,%r8d
   18b7a:	41 89 74 24 50       	mov    %esi,0x50(%r12)
   18b7f:	41 21 d8             	and    %ebx,%r8d
   18b82:	44 89 c7             	mov    %r8d,%edi
   18b85:	45 8d 04 36          	lea    (%r14,%rsi,1),%r8d
   18b89:	41 89 de             	mov    %ebx,%r14d
   18b8c:	31 c7                	xor    %eax,%edi
   18b8e:	41 c1 ce 0b          	ror    $0xb,%r14d
   18b92:	41 01 f8             	add    %edi,%r8d
   18b95:	89 df                	mov    %ebx,%edi
   18b97:	c1 cf 06             	ror    $0x6,%edi
   18b9a:	41 31 fe             	xor    %edi,%r14d
   18b9d:	89 df                	mov    %ebx,%edi
   18b9f:	c1 c7 07             	rol    $0x7,%edi
   18ba2:	41 31 fe             	xor    %edi,%r14d
   18ba5:	89 d7                	mov    %edx,%edi
   18ba7:	45 01 c6             	add    %r8d,%r14d
   18baa:	41 89 d0             	mov    %edx,%r8d
   18bad:	44 03 74 24 10       	add    0x10(%rsp),%r14d
   18bb2:	45 01 f3             	add    %r14d,%r11d
   18bb5:	41 c1 c8 02          	ror    $0x2,%r8d
   18bb9:	41 21 d7             	and    %edx,%r15d
   18bbc:	c1 cf 0d             	ror    $0xd,%edi
   18bbf:	44 31 c7             	xor    %r8d,%edi
   18bc2:	41 89 d0             	mov    %edx,%r8d
   18bc5:	41 c1 c0 0a          	rol    $0xa,%r8d
   18bc9:	44 31 c7             	xor    %r8d,%edi
   18bcc:	41 89 e8             	mov    %ebp,%r8d
   18bcf:	41 09 d0             	or     %edx,%r8d
   18bd2:	45 21 e8             	and    %r13d,%r8d
   18bd5:	45 09 f8             	or     %r15d,%r8d
   18bd8:	41 01 f8             	add    %edi,%r8d
   18bdb:	89 cf                	mov    %ecx,%edi
   18bdd:	c1 c7 0f             	rol    $0xf,%edi
   18be0:	45 01 f0             	add    %r14d,%r8d
   18be3:	45 8b 74 24 18       	mov    0x18(%r12),%r14d
   18be8:	41 89 ff             	mov    %edi,%r15d
   18beb:	89 cf                	mov    %ecx,%edi
   18bed:	c1 e9 0a             	shr    $0xa,%ecx
   18bf0:	c1 c7 0d             	rol    $0xd,%edi
   18bf3:	44 31 ff             	xor    %r15d,%edi
   18bf6:	41 89 d7             	mov    %edx,%r15d
   18bf9:	31 cf                	xor    %ecx,%edi
   18bfb:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
   18c00:	44 01 c9             	add    %r9d,%ecx
   18c03:	45 89 f1             	mov    %r14d,%r9d
   18c06:	01 f9                	add    %edi,%ecx
   18c08:	44 89 f7             	mov    %r14d,%edi
   18c0b:	41 c1 c9 07          	ror    $0x7,%r9d
   18c0f:	c1 c7 0e             	rol    $0xe,%edi
   18c12:	44 31 cf             	xor    %r9d,%edi
   18c15:	45 89 f1             	mov    %r14d,%r9d
   18c18:	41 c1 e9 03          	shr    $0x3,%r9d
   18c1c:	44 31 cf             	xor    %r9d,%edi
   18c1f:	45 89 d9             	mov    %r11d,%r9d
   18c22:	01 cf                	add    %ecx,%edi
   18c24:	44 89 d1             	mov    %r10d,%ecx
   18c27:	41 c1 c9 06          	ror    $0x6,%r9d
   18c2b:	31 d9                	xor    %ebx,%ecx
   18c2d:	01 f8                	add    %edi,%eax
   18c2f:	41 89 7c 24 54       	mov    %edi,0x54(%r12)
   18c34:	44 21 d9             	and    %r11d,%ecx
   18c37:	44 31 d1             	xor    %r10d,%ecx
   18c3a:	01 c8                	add    %ecx,%eax
   18c3c:	44 89 d9             	mov    %r11d,%ecx
   18c3f:	c1 c9 0b             	ror    $0xb,%ecx
   18c42:	44 31 c9             	xor    %r9d,%ecx
   18c45:	45 89 d9             	mov    %r11d,%r9d
   18c48:	45 21 c7             	and    %r8d,%r15d
   18c4b:	45 03 74 24 3c       	add    0x3c(%r12),%r14d
   18c50:	41 c1 c1 07          	rol    $0x7,%r9d
   18c54:	44 31 c9             	xor    %r9d,%ecx
   18c57:	01 c1                	add    %eax,%ecx
   18c59:	03 4c 24 14          	add    0x14(%rsp),%ecx
   18c5d:	44 89 c0             	mov    %r8d,%eax
   18c60:	45 8d 4c 0d 00       	lea    0x0(%r13,%rcx,1),%r9d
   18c65:	45 89 c5             	mov    %r8d,%r13d
   18c68:	c1 c8 02             	ror    $0x2,%eax
   18c6b:	41 c1 cd 0d          	ror    $0xd,%r13d
   18c6f:	41 31 c5             	xor    %eax,%r13d
   18c72:	44 89 c0             	mov    %r8d,%eax
   18c75:	c1 c0 0a             	rol    $0xa,%eax
   18c78:	41 31 c5             	xor    %eax,%r13d
   18c7b:	89 d0                	mov    %edx,%eax
   18c7d:	44 09 c0             	or     %r8d,%eax
   18c80:	21 e8                	and    %ebp,%eax
   18c82:	44 09 f8             	or     %r15d,%eax
   18c85:	44 01 e8             	add    %r13d,%eax
   18c88:	45 8b 6c 24 1c       	mov    0x1c(%r12),%r13d
   18c8d:	01 c8                	add    %ecx,%eax
   18c8f:	89 f1                	mov    %esi,%ecx
   18c91:	c1 c1 0f             	rol    $0xf,%ecx
   18c94:	41 89 cf             	mov    %ecx,%r15d
   18c97:	89 f1                	mov    %esi,%ecx
   18c99:	c1 ee 0a             	shr    $0xa,%esi
   18c9c:	c1 c1 0d             	rol    $0xd,%ecx
   18c9f:	44 31 f9             	xor    %r15d,%ecx
   18ca2:	45 89 c7             	mov    %r8d,%r15d
   18ca5:	31 f1                	xor    %esi,%ecx
   18ca7:	44 89 f6             	mov    %r14d,%esi
   18caa:	45 89 ee             	mov    %r13d,%r14d
   18cad:	01 ce                	add    %ecx,%esi
   18caf:	44 89 e9             	mov    %r13d,%ecx
   18cb2:	41 c1 ce 07          	ror    $0x7,%r14d
   18cb6:	c1 c1 0e             	rol    $0xe,%ecx
   18cb9:	44 31 f1             	xor    %r14d,%ecx
   18cbc:	45 89 ee             	mov    %r13d,%r14d
   18cbf:	41 c1 ee 03          	shr    $0x3,%r14d
   18cc3:	44 31 f1             	xor    %r14d,%ecx
   18cc6:	01 f1                	add    %esi,%ecx
   18cc8:	89 de                	mov    %ebx,%esi
   18cca:	44 31 de             	xor    %r11d,%esi
   18ccd:	41 89 4c 24 58       	mov    %ecx,0x58(%r12)
   18cd2:	44 21 ce             	and    %r9d,%esi
   18cd5:	41 89 f6             	mov    %esi,%r14d
   18cd8:	41 8d 34 0a          	lea    (%r10,%rcx,1),%esi
   18cdc:	45 89 ca             	mov    %r9d,%r10d
   18cdf:	41 31 de             	xor    %ebx,%r14d
   18ce2:	44 01 f6             	add    %r14d,%esi
   18ce5:	45 89 ce             	mov    %r9d,%r14d
   18ce8:	41 c1 ca 0b          	ror    $0xb,%r10d
   18cec:	41 21 c7             	and    %eax,%r15d
   18cef:	41 c1 ce 06          	ror    $0x6,%r14d
   18cf3:	45 31 f2             	xor    %r14d,%r10d
   18cf6:	45 89 ce             	mov    %r9d,%r14d
   18cf9:	41 c1 c6 07          	rol    $0x7,%r14d
   18cfd:	45 31 f2             	xor    %r14d,%r10d
   18d00:	41 89 c6             	mov    %eax,%r14d
   18d03:	41 01 f2             	add    %esi,%r10d
   18d06:	89 c6                	mov    %eax,%esi
   18d08:	41 c1 ce 0d          	ror    $0xd,%r14d
   18d0c:	44 03 54 24 18       	add    0x18(%rsp),%r10d
   18d11:	c1 ce 02             	ror    $0x2,%esi
   18d14:	44 01 d5             	add    %r10d,%ebp
   18d17:	41 31 f6             	xor    %esi,%r14d
   18d1a:	89 c6                	mov    %eax,%esi
   18d1c:	c1 c6 0a             	rol    $0xa,%esi
   18d1f:	41 31 f6             	xor    %esi,%r14d
   18d22:	44 89 c6             	mov    %r8d,%esi
   18d25:	09 c6                	or     %eax,%esi
   18d27:	21 d6                	and    %edx,%esi
   18d29:	44 09 fe             	or     %r15d,%esi
   18d2c:	41 89 ff             	mov    %edi,%r15d
   18d2f:	44 01 f6             	add    %r14d,%esi
   18d32:	41 89 fe             	mov    %edi,%r14d
   18d35:	41 c1 c7 0f          	rol    $0xf,%r15d
   18d39:	41 c1 c6 0d          	rol    $0xd,%r14d
   18d3d:	c1 ef 0a             	shr    $0xa,%edi
   18d40:	44 01 d6             	add    %r10d,%esi
   18d43:	45 8b 54 24 20       	mov    0x20(%r12),%r10d
   18d48:	45 31 fe             	xor    %r15d,%r14d
   18d4b:	41 31 fe             	xor    %edi,%r14d
   18d4e:	41 8b 7c 24 40       	mov    0x40(%r12),%edi
   18d53:	44 01 ef             	add    %r13d,%edi
   18d56:	45 89 d5             	mov    %r10d,%r13d
   18d59:	41 01 fe             	add    %edi,%r14d
   18d5c:	44 89 d7             	mov    %r10d,%edi
   18d5f:	41 c1 cd 07          	ror    $0x7,%r13d
   18d63:	c1 c7 0e             	rol    $0xe,%edi
   18d66:	44 31 ef             	xor    %r13d,%edi
   18d69:	45 89 d5             	mov    %r10d,%r13d
   18d6c:	41 c1 ed 03          	shr    $0x3,%r13d
   18d70:	44 31 ef             	xor    %r13d,%edi
   18d73:	41 89 ed             	mov    %ebp,%r13d
   18d76:	44 01 f7             	add    %r14d,%edi
   18d79:	41 89 ee             	mov    %ebp,%r14d
   18d7c:	41 c1 cd 0b          	ror    $0xb,%r13d
   18d80:	41 c1 ce 06          	ror    $0x6,%r14d
   18d84:	01 fb                	add    %edi,%ebx
   18d86:	41 89 7c 24 5c       	mov    %edi,0x5c(%r12)
   18d8b:	45 31 f5             	xor    %r14d,%r13d
   18d8e:	41 89 ee             	mov    %ebp,%r14d
   18d91:	41 c1 c6 07          	rol    $0x7,%r14d
   18d95:	45 31 f5             	xor    %r14d,%r13d
   18d98:	45 89 de             	mov    %r11d,%r14d
   18d9b:	45 31 ce             	xor    %r9d,%r14d
   18d9e:	41 21 ee             	and    %ebp,%r14d
   18da1:	45 31 de             	xor    %r11d,%r14d
   18da4:	44 01 f3             	add    %r14d,%ebx
   18da7:	41 89 c6             	mov    %eax,%r14d
   18daa:	44 01 eb             	add    %r13d,%ebx
   18dad:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   18db2:	41 21 f6             	and    %esi,%r14d
   18db5:	41 01 dd             	add    %ebx,%r13d
   18db8:	89 f3                	mov    %esi,%ebx
   18dba:	46 8d 3c 2a          	lea    (%rdx,%r13,1),%r15d
   18dbe:	89 f2                	mov    %esi,%edx
   18dc0:	c1 cb 02             	ror    $0x2,%ebx
   18dc3:	c1 ca 0d             	ror    $0xd,%edx
   18dc6:	31 da                	xor    %ebx,%edx
   18dc8:	89 f3                	mov    %esi,%ebx
   18dca:	c1 c3 0a             	rol    $0xa,%ebx
   18dcd:	31 da                	xor    %ebx,%edx
   18dcf:	89 c3                	mov    %eax,%ebx
   18dd1:	09 f3                	or     %esi,%ebx
   18dd3:	44 21 c3             	and    %r8d,%ebx
   18dd6:	44 09 f3             	or     %r14d,%ebx
   18dd9:	41 89 ce             	mov    %ecx,%r14d
   18ddc:	01 d3                	add    %edx,%ebx
   18dde:	41 c1 c6 0f          	rol    $0xf,%r14d
   18de2:	41 8b 54 24 24       	mov    0x24(%r12),%edx
   18de7:	45 03 54 24 44       	add    0x44(%r12),%r10d
   18dec:	44 01 eb             	add    %r13d,%ebx
   18def:	41 89 cd             	mov    %ecx,%r13d
   18df2:	c1 e9 0a             	shr    $0xa,%ecx
   18df5:	41 c1 c5 0d          	rol    $0xd,%r13d
   18df9:	45 31 f5             	xor    %r14d,%r13d
   18dfc:	41 31 cd             	xor    %ecx,%r13d
   18dff:	89 d1                	mov    %edx,%ecx
   18e01:	45 01 d5             	add    %r10d,%r13d
   18e04:	41 89 d2             	mov    %edx,%r10d
   18e07:	c1 c9 07             	ror    $0x7,%ecx
   18e0a:	41 c1 c2 0e          	rol    $0xe,%r10d
   18e0e:	41 31 ca             	xor    %ecx,%r10d
   18e11:	89 d1                	mov    %edx,%ecx
   18e13:	c1 e9 03             	shr    $0x3,%ecx
   18e16:	41 31 ca             	xor    %ecx,%r10d
   18e19:	44 89 f9             	mov    %r15d,%ecx
   18e1c:	45 01 ea             	add    %r13d,%r10d
   18e1f:	45 89 fd             	mov    %r15d,%r13d
   18e22:	c1 c9 0b             	ror    $0xb,%ecx
   18e25:	41 c1 cd 06          	ror    $0x6,%r13d
   18e29:	45 01 d3             	add    %r10d,%r11d
   18e2c:	45 89 54 24 60       	mov    %r10d,0x60(%r12)
   18e31:	41 89 f2             	mov    %esi,%r10d
   18e34:	44 31 e9             	xor    %r13d,%ecx
   18e37:	45 89 fd             	mov    %r15d,%r13d
   18e3a:	41 21 da             	and    %ebx,%r10d
   18e3d:	41 c1 c5 07          	rol    $0x7,%r13d
   18e41:	44 31 e9             	xor    %r13d,%ecx
   18e44:	45 89 cd             	mov    %r9d,%r13d
   18e47:	41 31 ed             	xor    %ebp,%r13d
   18e4a:	45 21 fd             	and    %r15d,%r13d
   18e4d:	45 31 cd             	xor    %r9d,%r13d
   18e50:	45 01 eb             	add    %r13d,%r11d
   18e53:	41 01 cb             	add    %ecx,%r11d
   18e56:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   18e5a:	44 01 d9             	add    %r11d,%ecx
   18e5d:	41 89 db             	mov    %ebx,%r11d
   18e60:	45 8d 34 08          	lea    (%r8,%rcx,1),%r14d
   18e64:	41 89 d8             	mov    %ebx,%r8d
   18e67:	41 c1 cb 02          	ror    $0x2,%r11d
   18e6b:	41 c1 c8 0d          	ror    $0xd,%r8d
   18e6f:	45 89 f5             	mov    %r14d,%r13d
   18e72:	45 31 d8             	xor    %r11d,%r8d
   18e75:	41 89 db             	mov    %ebx,%r11d
   18e78:	41 c1 c3 0a          	rol    $0xa,%r11d
   18e7c:	45 31 d8             	xor    %r11d,%r8d
   18e7f:	41 89 f3             	mov    %esi,%r11d
   18e82:	41 09 db             	or     %ebx,%r11d
   18e85:	41 21 c3             	and    %eax,%r11d
   18e88:	45 09 d3             	or     %r10d,%r11d
   18e8b:	41 89 fa             	mov    %edi,%r10d
   18e8e:	45 01 c3             	add    %r8d,%r11d
   18e91:	41 c1 c2 0f          	rol    $0xf,%r10d
   18e95:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
   18e9a:	41 01 cb             	add    %ecx,%r11d
   18e9d:	89 f9                	mov    %edi,%ecx
   18e9f:	c1 ef 0a             	shr    $0xa,%edi
   18ea2:	c1 c1 0d             	rol    $0xd,%ecx
   18ea5:	44 31 d1             	xor    %r10d,%ecx
   18ea8:	41 89 ea             	mov    %ebp,%r10d
   18eab:	31 f9                	xor    %edi,%ecx
   18ead:	03 14 24             	add    (%rsp),%edx
   18eb0:	44 89 c7             	mov    %r8d,%edi
   18eb3:	41 c1 cd 06          	ror    $0x6,%r13d
   18eb7:	01 d1                	add    %edx,%ecx
   18eb9:	44 89 c2             	mov    %r8d,%edx
   18ebc:	c1 c7 0e             	rol    $0xe,%edi
   18ebf:	45 31 fa             	xor    %r15d,%r10d
   18ec2:	c1 ca 07             	ror    $0x7,%edx
   18ec5:	41 c1 e8 03          	shr    $0x3,%r8d
   18ec9:	45 21 f2             	and    %r14d,%r10d
   18ecc:	31 d7                	xor    %edx,%edi
   18ece:	44 89 f2             	mov    %r14d,%edx
   18ed1:	41 31 ea             	xor    %ebp,%r10d
   18ed4:	c1 ca 0b             	ror    $0xb,%edx
   18ed7:	44 31 c7             	xor    %r8d,%edi
   18eda:	41 31 d5             	xor    %edx,%r13d
   18edd:	44 89 f2             	mov    %r14d,%edx
   18ee0:	01 f9                	add    %edi,%ecx
   18ee2:	89 df                	mov    %ebx,%edi
   18ee4:	c1 c2 07             	rol    $0x7,%edx
   18ee7:	41 89 4c 24 64       	mov    %ecx,0x64(%r12)
   18eec:	41 01 c9             	add    %ecx,%r9d
   18eef:	44 89 d9             	mov    %r11d,%ecx
   18ef2:	41 31 d5             	xor    %edx,%r13d
   18ef5:	44 89 da             	mov    %r11d,%edx
   18ef8:	c1 c9 0d             	ror    $0xd,%ecx
   18efb:	44 21 df             	and    %r11d,%edi
   18efe:	c1 ca 02             	ror    $0x2,%edx
   18f01:	45 01 d1             	add    %r10d,%r9d
   18f04:	31 ca                	xor    %ecx,%edx
   18f06:	44 89 d9             	mov    %r11d,%ecx
   18f09:	45 01 e9             	add    %r13d,%r9d
   18f0c:	44 03 4c 24 28       	add    0x28(%rsp),%r9d
   18f11:	c1 c1 0a             	rol    $0xa,%ecx
   18f14:	44 01 c8             	add    %r9d,%eax
   18f17:	31 d1                	xor    %edx,%ecx
   18f19:	89 da                	mov    %ebx,%edx
   18f1b:	44 09 da             	or     %r11d,%edx
   18f1e:	21 f2                	and    %esi,%edx
   18f20:	09 fa                	or     %edi,%edx
   18f22:	01 ca                	add    %ecx,%edx
   18f24:	49 83 c4 20          	add    $0x20,%r12
   18f28:	48 83 44 24 08 20    	addq   $0x20,0x8(%rsp)
   18f2e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18f33:	45 8d 2c 11          	lea    (%r9,%rdx,1),%r13d
   18f37:	4c 39 64 24 30       	cmp    %r12,0x30(%rsp)
   18f3c:	0f 85 76 fa ff ff    	jne    189b8 <mbedtls_internal_sha256_process+0x508>
   18f42:	89 84 24 68 01 00 00 	mov    %eax,0x168(%rsp)
   18f49:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   18f4e:	31 c0                	xor    %eax,%eax
   18f50:	89 54 24 54          	mov    %edx,0x54(%rsp)
   18f54:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   18f59:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
   18f60:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
   18f67:	00 
   18f68:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
   18f6f:	00 
   18f70:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
   18f77:	00 
   18f78:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
   18f7f:	00 
   18f80:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
   18f87:	89 b4 24 64 01 00 00 	mov    %esi,0x164(%rsp)
   18f8e:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
   18f93:	eb 07                	jmp    18f9c <mbedtls_internal_sha256_process+0xaec>
   18f95:	0f 1f 00             	nopl   (%rax)
   18f98:	44 8b 2c 01          	mov    (%rcx,%rax,1),%r13d
   18f9c:	44 01 6c 02 08       	add    %r13d,0x8(%rdx,%rax,1)
   18fa1:	48 83 c0 04          	add    $0x4,%rax
   18fa5:	48 83 f8 20          	cmp    $0x20,%rax
   18fa9:	75 ed                	jne    18f98 <mbedtls_internal_sha256_process+0xae8>
   18fab:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   18fb0:	be 28 01 00 00       	mov    $0x128,%esi
   18fb5:	e8 b6 bc ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   18fba:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   18fc1:	00 
   18fc2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   18fc9:	00 00 
   18fcb:	75 14                	jne    18fe1 <mbedtls_internal_sha256_process+0xb31>
   18fcd:	48 81 c4 88 01 00 00 	add    $0x188,%rsp
   18fd4:	31 c0                	xor    %eax,%eax
   18fd6:	5b                   	pop    %rbx
   18fd7:	5d                   	pop    %rbp
   18fd8:	41 5c                	pop    %r12
   18fda:	41 5d                	pop    %r13
   18fdc:	41 5e                	pop    %r14
   18fde:	41 5f                	pop    %r15
   18fe0:	c3                   	retq   
   18fe1:	e8 8a b2 fe ff       	callq  4270 <__stack_chk_fail@plt>
   18fe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18fed:	00 00 00 

0000000000018ff0 <mbedtls_sha256_update.part.0>:
   18ff0:	e9 7b c9 01 00       	jmpq   35970 <mbedtls_sha256_update.part.0.instr.bb_18ff0>
   18ff5:	e9 cf c9 01 00       	jmpq   359c9 <instr.bb_1901b>
   18ffa:	00 00                	add    %al,(%rax)
   18ffc:	41 54                	push   %r12
   18ffe:	49 89 fc             	mov    %rdi,%r12
   19001:	55                   	push   %rbp
   19002:	48 89 f5             	mov    %rsi,%rbp
   19005:	53                   	push   %rbx
   19006:	8b 07                	mov    (%rdi),%eax
   19008:	41 89 c6             	mov    %eax,%r14d
   1900b:	41 83 e6 3f          	and    $0x3f,%r14d
   1900f:	44 29 f2             	sub    %r14d,%edx
   19012:	44 01 e8             	add    %r13d,%eax
   19015:	89 07                	mov    %eax,(%rdi)
   19017:	89 d3                	mov    %edx,%ebx
   19019:	73 04                	jae    1901f <mbedtls_sha256_update.part.0+0x2f>
   1901b:	eb d8                	jmp    18ff5 <mbedtls_sha256_update.part.0+0x5>
   1901d:	04 01                	add    $0x1,%al
   1901f:	e9 a9 c9 01 00       	jmpq   359cd <instr.bb_1901f>
   19024:	e9 ad c9 01 00       	jmpq   359d6 <instr.bb_19024>
   19029:	e9 b1 c9 01 00       	jmpq   359df <instr.bb_19029>
   1902e:	3f                   	(bad)  
   1902f:	0f 86 69 01 00 00    	jbe    1919e <mbedtls_sha256_update.part.0+0x1ae>
   19035:	e9 b1 c9 01 00       	jmpq   359eb <instr.bb_19035>
   1903a:	74 1d                	je     19059 <mbedtls_sha256_update.part.0+0x69>
   1903c:	00 4c 89 e7          	add    %cl,-0x19(%rcx,%rcx,4)
   19040:	e8 6b f4 ff ff       	callq  184b0 <mbedtls_internal_sha256_process>
   19045:	85 c0                	test   %eax,%eax
   19047:	75 37                	jne    19080 <mbedtls_sha256_update.part.0+0x90>
   19049:	48 83 c3 40          	add    $0x40,%rbx
   1904d:	4c 89 e8             	mov    %r13,%rax
   19050:	48 29 d8             	sub    %rbx,%rax
   19053:	48 83 f8 3f          	cmp    $0x3f,%rax
   19057:	77 df                	ja     19038 <mbedtls_sha256_update.part.0+0x48>
   19059:	48 83 fb 3f          	cmp    $0x3f,%rbx
   1905d:	76 21                	jbe    19080 <mbedtls_sha256_update.part.0+0x90>
   1905f:	48 01 dd             	add    %rbx,%rbp
   19062:	45 31 c0             	xor    %r8d,%r8d
   19065:	48 85 c0             	test   %rax,%rax
   19068:	0f 85 b4 00 00 00    	jne    19122 <mbedtls_sha256_update.part.0+0x132>
   1906e:	5b                   	pop    %rbx
   1906f:	44 89 c0             	mov    %r8d,%eax
   19072:	5d                   	pop    %rbp
   19073:	41 5c                	pop    %r12
   19075:	41 5d                	pop    %r13
   19077:	41 5e                	pop    %r14
   19079:	c3                   	retq   
   1907a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19080:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   19086:	5b                   	pop    %rbx
   19087:	5d                   	pop    %rbp
   19088:	44 89 c0             	mov    %r8d,%eax
   1908b:	41 5c                	pop    %r12
   1908d:	41 5d                	pop    %r13
   1908f:	41 5e                	pop    %r14
   19091:	c3                   	retq   
   19092:	4d 8d 44 24 28       	lea    0x28(%r12),%r8
   19097:	44 89 f0             	mov    %r14d,%eax
   1909a:	4c 01 c0             	add    %r8,%rax
   1909d:	83 fa 08             	cmp    $0x8,%edx
   190a0:	73 3c                	jae    190de <mbedtls_sha256_update.part.0+0xee>
   190a2:	f6 c2 04             	test   $0x4,%dl
   190a5:	0f 85 fb 00 00 00    	jne    191a6 <mbedtls_sha256_update.part.0+0x1b6>
   190ab:	85 d2                	test   %edx,%edx
   190ad:	74 0f                	je     190be <mbedtls_sha256_update.part.0+0xce>
   190af:	0f b6 4d 00          	movzbl 0x0(%rbp),%ecx
   190b3:	83 e2 02             	and    $0x2,%edx
   190b6:	88 08                	mov    %cl,(%rax)
   190b8:	0f 85 09 01 00 00    	jne    191c7 <mbedtls_sha256_update.part.0+0x1d7>
   190be:	4c 89 c6             	mov    %r8,%rsi
   190c1:	4c 89 e7             	mov    %r12,%rdi
   190c4:	e8 e7 f3 ff ff       	callq  184b0 <mbedtls_internal_sha256_process>
   190c9:	41 89 c0             	mov    %eax,%r8d
   190cc:	85 c0                	test   %eax,%eax
   190ce:	75 9e                	jne    1906e <mbedtls_sha256_update.part.0+0x7e>
   190d0:	48 01 dd             	add    %rbx,%rbp
   190d3:	49 29 dd             	sub    %rbx,%r13
   190d6:	45 31 f6             	xor    %r14d,%r14d
   190d9:	e9 4b ff ff ff       	jmpq   19029 <mbedtls_sha256_update.part.0+0x39>
   190de:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   190e2:	48 8d 70 08          	lea    0x8(%rax),%rsi
   190e6:	49 89 e9             	mov    %rbp,%r9
   190e9:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   190ed:	48 89 08             	mov    %rcx,(%rax)
   190f0:	48 8b 4c 1d f8       	mov    -0x8(%rbp,%rbx,1),%rcx
   190f5:	48 89 4c 18 f8       	mov    %rcx,-0x8(%rax,%rbx,1)
   190fa:	48 29 f0             	sub    %rsi,%rax
   190fd:	01 c2                	add    %eax,%edx
   190ff:	49 29 c1             	sub    %rax,%r9
   19102:	83 e2 f8             	and    $0xfffffff8,%edx
   19105:	83 fa 08             	cmp    $0x8,%edx
   19108:	72 b4                	jb     190be <mbedtls_sha256_update.part.0+0xce>
   1910a:	83 e2 f8             	and    $0xfffffff8,%edx
   1910d:	31 c0                	xor    %eax,%eax
   1910f:	89 c1                	mov    %eax,%ecx
   19111:	83 c0 08             	add    $0x8,%eax
   19114:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   19118:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   1911c:	39 d0                	cmp    %edx,%eax
   1911e:	72 ef                	jb     1910f <mbedtls_sha256_update.part.0+0x11f>
   19120:	eb 9c                	jmp    190be <mbedtls_sha256_update.part.0+0xce>
   19122:	4b 8d 4c 34 28       	lea    0x28(%r12,%r14,1),%rcx
   19127:	89 c2                	mov    %eax,%edx
   19129:	83 f8 08             	cmp    $0x8,%eax
   1912c:	73 29                	jae    19157 <mbedtls_sha256_update.part.0+0x167>
   1912e:	a8 04                	test   $0x4,%al
   19130:	0f 85 82 00 00 00    	jne    191b8 <mbedtls_sha256_update.part.0+0x1c8>
   19136:	85 d2                	test   %edx,%edx
   19138:	74 15                	je     1914f <mbedtls_sha256_update.part.0+0x15f>
   1913a:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1913e:	88 01                	mov    %al,(%rcx)
   19140:	f6 c2 02             	test   $0x2,%dl
   19143:	74 0a                	je     1914f <mbedtls_sha256_update.part.0+0x15f>
   19145:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   1914a:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   1914f:	45 31 c0             	xor    %r8d,%r8d
   19152:	e9 17 ff ff ff       	jmpq   1906e <mbedtls_sha256_update.part.0+0x7e>
   19157:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1915b:	48 89 11             	mov    %rdx,(%rcx)
   1915e:	89 c2                	mov    %eax,%edx
   19160:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   19165:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   1916a:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   1916e:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   19172:	48 29 f1             	sub    %rsi,%rcx
   19175:	48 89 ca             	mov    %rcx,%rdx
   19178:	48 29 cd             	sub    %rcx,%rbp
   1917b:	01 c2                	add    %eax,%edx
   1917d:	83 e2 f8             	and    $0xfffffff8,%edx
   19180:	83 fa 08             	cmp    $0x8,%edx
   19183:	72 ca                	jb     1914f <mbedtls_sha256_update.part.0+0x15f>
   19185:	83 e2 f8             	and    $0xfffffff8,%edx
   19188:	31 c0                	xor    %eax,%eax
   1918a:	89 c1                	mov    %eax,%ecx
   1918c:	83 c0 08             	add    $0x8,%eax
   1918f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   19194:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   19198:	39 d0                	cmp    %edx,%eax
   1919a:	72 ee                	jb     1918a <mbedtls_sha256_update.part.0+0x19a>
   1919c:	eb b1                	jmp    1914f <mbedtls_sha256_update.part.0+0x15f>
   1919e:	4c 89 e8             	mov    %r13,%rax
   191a1:	e9 bc fe ff ff       	jmpq   19062 <mbedtls_sha256_update.part.0+0x72>
   191a6:	8b 55 00             	mov    0x0(%rbp),%edx
   191a9:	89 10                	mov    %edx,(%rax)
   191ab:	8b 54 1d fc          	mov    -0x4(%rbp,%rbx,1),%edx
   191af:	89 54 18 fc          	mov    %edx,-0x4(%rax,%rbx,1)
   191b3:	e9 06 ff ff ff       	jmpq   190be <mbedtls_sha256_update.part.0+0xce>
   191b8:	8b 45 00             	mov    0x0(%rbp),%eax
   191bb:	89 01                	mov    %eax,(%rcx)
   191bd:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   191c1:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   191c5:	eb 88                	jmp    1914f <mbedtls_sha256_update.part.0+0x15f>
   191c7:	0f b7 54 1d fe       	movzwl -0x2(%rbp,%rbx,1),%edx
   191cc:	66 89 54 18 fe       	mov    %dx,-0x2(%rax,%rbx,1)
   191d1:	e9 e8 fe ff ff       	jmpq   190be <mbedtls_sha256_update.part.0+0xce>
   191d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   191dd:	00 00 00 

00000000000191e0 <mbedtls_sha256_update>:
   191e0:	e9 2b c8 01 00       	jmpq   35a10 <mbedtls_sha256_update.instr.bb_191e0>
   191e5:	85 d2                	test   %edx,%edx
   191e7:	74 07                	je     191f0 <mbedtls_sha256_update+0x10>
   191e9:	e9 31 c8 01 00       	jmpq   35a1f <instr.bb_191e9>
   191ee:	66 90                	xchg   %ax,%ax
   191f0:	31 c0                	xor    %eax,%eax
   191f2:	c3                   	retq   
   191f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   191fa:	00 00 00 00 
   191fe:	66 90                	xchg   %ax,%ax

0000000000019200 <mbedtls_sha256_finish>:
   19200:	e9 2b c8 01 00       	jmpq   35a30 <mbedtls_sha256_finish.instr.bb_19200>
   19205:	e9 c0 c8 01 00       	jmpq   35aca <instr.bb_19274>
   1920a:	55                   	push   %rbp
   1920b:	48 89 f5             	mov    %rsi,%rbp
   1920e:	53                   	push   %rbx
   1920f:	8b 07                	mov    (%rdi),%eax
   19211:	48 89 fb             	mov    %rdi,%rbx
   19214:	83 e0 3f             	and    $0x3f,%eax
   19217:	8d 48 01             	lea    0x1(%rax),%ecx
   1921a:	c6 44 07 28 80       	movb   $0x80,0x28(%rdi,%rax,1)
   1921f:	89 c8                	mov    %ecx,%eax
   19221:	4c 01 e0             	add    %r12,%rax
   19224:	83 f9 38             	cmp    $0x38,%ecx
   19227:	77 57                	ja     19280 <mbedtls_sha256_finish+0x80>
   19229:	e9 49 c8 01 00       	jmpq   35a77 <instr.bb_19229>
   1922e:	31 ff                	xor    %edi,%edi
   19230:	29 ca                	sub    %ecx,%edx
   19232:	83 fa 08             	cmp    $0x8,%edx
   19235:	72 79                	jb     192b0 <mbedtls_sha256_finish+0xb0>
   19237:	e9 4d c8 01 00       	jmpq   35a89 <instr.bb_19237>
   1923c:	00 00                	add    %al,(%rax)
   1923e:	00 00                	add    %al,(%rax)
   19240:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   19247:	00 00 
   19249:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1924d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   19251:	48 29 c8             	sub    %rcx,%rax
   19254:	01 c2                	add    %eax,%edx
   19256:	83 e2 f8             	and    $0xfffffff8,%edx
   19259:	83 fa 08             	cmp    $0x8,%edx
   1925c:	0f 82 8b 00 00 00    	jb     192ed <mbedtls_sha256_finish+0xed>
   19262:	e9 4d c8 01 00       	jmpq   35ab4 <instr.bb_19262>
   19267:	e9 4d c8 01 00       	jmpq   35ab9 <instr.bb_19267>
   1926c:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   19270:	39 d0                	cmp    %edx,%eax
   19272:	72 f3                	jb     19267 <mbedtls_sha256_finish+0x67>
   19274:	eb 8f                	jmp    19205 <mbedtls_sha256_finish+0x5>
   19276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1927d:	00 00 00 
   19280:	ba 40 00 00 00       	mov    $0x40,%edx
   19285:	29 ca                	sub    %ecx,%edx
   19287:	89 d1                	mov    %edx,%ecx
   19289:	74 0f                	je     1929a <mbedtls_sha256_finish+0x9a>
   1928b:	31 d2                	xor    %edx,%edx
   1928d:	89 d6                	mov    %edx,%esi
   1928f:	83 c2 01             	add    $0x1,%edx
   19292:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   19296:	39 ca                	cmp    %ecx,%edx
   19298:	72 f3                	jb     1928d <mbedtls_sha256_finish+0x8d>
   1929a:	4c 89 e6             	mov    %r12,%rsi
   1929d:	48 89 df             	mov    %rbx,%rdi
   192a0:	e8 0b f2 ff ff       	callq  184b0 <mbedtls_internal_sha256_process>
   192a5:	85 c0                	test   %eax,%eax
   192a7:	74 27                	je     192d0 <mbedtls_sha256_finish+0xd0>
   192a9:	5b                   	pop    %rbx
   192aa:	5d                   	pop    %rbp
   192ab:	41 5c                	pop    %r12
   192ad:	c3                   	retq   
   192ae:	66 90                	xchg   %ax,%ax
   192b0:	f6 c2 04             	test   $0x4,%dl
   192b3:	0f 85 b7 00 00 00    	jne    19370 <mbedtls_sha256_finish+0x170>
   192b9:	85 d2                	test   %edx,%edx
   192bb:	74 30                	je     192ed <mbedtls_sha256_finish+0xed>
   192bd:	c6 00 00             	movb   $0x0,(%rax)
   192c0:	f6 c2 02             	test   $0x2,%dl
   192c3:	74 28                	je     192ed <mbedtls_sha256_finish+0xed>
   192c5:	31 c9                	xor    %ecx,%ecx
   192c7:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   192cc:	eb 1f                	jmp    192ed <mbedtls_sha256_finish+0xed>
   192ce:	66 90                	xchg   %ax,%ax
   192d0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   192d4:	0f 11 43 28          	movups %xmm0,0x28(%rbx)
   192d8:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   192df:	00 00 
   192e1:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   192e7:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   192ed:	8b 13                	mov    (%rbx),%edx
   192ef:	8b 43 04             	mov    0x4(%rbx),%eax
   192f2:	4c 89 e6             	mov    %r12,%rsi
   192f5:	48 89 df             	mov    %rbx,%rdi
   192f8:	89 d1                	mov    %edx,%ecx
   192fa:	c1 e0 03             	shl    $0x3,%eax
   192fd:	c1 e9 1d             	shr    $0x1d,%ecx
   19300:	c1 e2 03             	shl    $0x3,%edx
   19303:	09 c8                	or     %ecx,%eax
   19305:	0f ca                	bswap  %edx
   19307:	89 53 64             	mov    %edx,0x64(%rbx)
   1930a:	0f c8                	bswap  %eax
   1930c:	89 43 60             	mov    %eax,0x60(%rbx)
   1930f:	e8 9c f1 ff ff       	callq  184b0 <mbedtls_internal_sha256_process>
   19314:	85 c0                	test   %eax,%eax
   19316:	75 91                	jne    192a9 <mbedtls_sha256_finish+0xa9>
   19318:	8b 53 08             	mov    0x8(%rbx),%edx
   1931b:	0f ca                	bswap  %edx
   1931d:	89 55 00             	mov    %edx,0x0(%rbp)
   19320:	8b 53 0c             	mov    0xc(%rbx),%edx
   19323:	0f ca                	bswap  %edx
   19325:	89 55 04             	mov    %edx,0x4(%rbp)
   19328:	8b 53 10             	mov    0x10(%rbx),%edx
   1932b:	0f ca                	bswap  %edx
   1932d:	89 55 08             	mov    %edx,0x8(%rbp)
   19330:	8b 53 14             	mov    0x14(%rbx),%edx
   19333:	0f ca                	bswap  %edx
   19335:	89 55 0c             	mov    %edx,0xc(%rbp)
   19338:	8b 53 18             	mov    0x18(%rbx),%edx
   1933b:	0f ca                	bswap  %edx
   1933d:	89 55 10             	mov    %edx,0x10(%rbp)
   19340:	8b 53 1c             	mov    0x1c(%rbx),%edx
   19343:	0f ca                	bswap  %edx
   19345:	89 55 14             	mov    %edx,0x14(%rbp)
   19348:	8b 53 20             	mov    0x20(%rbx),%edx
   1934b:	0f ca                	bswap  %edx
   1934d:	89 55 18             	mov    %edx,0x18(%rbp)
   19350:	8b 53 68             	mov    0x68(%rbx),%edx
   19353:	85 d2                	test   %edx,%edx
   19355:	0f 85 4e ff ff ff    	jne    192a9 <mbedtls_sha256_finish+0xa9>
   1935b:	8b 53 24             	mov    0x24(%rbx),%edx
   1935e:	5b                   	pop    %rbx
   1935f:	0f ca                	bswap  %edx
   19361:	89 55 1c             	mov    %edx,0x1c(%rbp)
   19364:	5d                   	pop    %rbp
   19365:	41 5c                	pop    %r12
   19367:	c3                   	retq   
   19368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1936f:	00 
   19370:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   19376:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   1937d:	00 
   1937e:	e9 6a ff ff ff       	jmpq   192ed <mbedtls_sha256_finish+0xed>
   19383:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1938a:	00 00 00 00 
   1938e:	66 90                	xchg   %ax,%ax

0000000000019390 <mbedtls_sha256_common_self_test>:
   19390:	41 57                	push   %r15
   19392:	41 56                	push   %r14
   19394:	41 55                	push   %r13
   19396:	41 89 f5             	mov    %esi,%r13d
   19399:	41 54                	push   %r12
   1939b:	41 89 fc             	mov    %edi,%r12d
   1939e:	bf 00 04 00 00       	mov    $0x400,%edi
   193a3:	55                   	push   %rbp
   193a4:	48 8d 2d 95 a2 00 00 	lea    0xa295(%rip),%rbp        # 23640 <sha224_test_sum>
   193ab:	53                   	push   %rbx
   193ac:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   193b3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   193ba:	00 00 
   193bc:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   193c3:	00 
   193c4:	31 c0                	xor    %eax,%eax
   193c6:	85 f6                	test   %esi,%esi
   193c8:	48 8d 05 11 a2 00 00 	lea    0xa211(%rip),%rax        # 235e0 <sha256_test_sum>
   193cf:	be 01 00 00 00       	mov    $0x1,%esi
   193d4:	48 0f 44 e8          	cmove  %rax,%rbp
   193d8:	e8 f3 ae fe ff       	callq  42d0 <calloc@plt>
   193dd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   193e2:	48 85 c0             	test   %rax,%rax
   193e5:	0f 84 a9 02 00 00    	je     19694 <mbedtls_sha256_common_self_test+0x304>
   193eb:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   193f0:	31 c0                	xor    %eax,%eax
   193f2:	b9 0d 00 00 00       	mov    $0xd,%ecx
   193f7:	31 db                	xor    %ebx,%ebx
   193f9:	4c 89 f7             	mov    %r14,%rdi
   193fc:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   193ff:	b8 08 00 00 00       	mov    $0x8,%eax
   19404:	44 29 e8             	sub    %r13d,%eax
   19407:	89 c1                	mov    %eax,%ecx
   19409:	c1 e0 02             	shl    $0x2,%eax
   1940c:	c1 e1 05             	shl    $0x5,%ecx
   1940f:	48 89 04 24          	mov    %rax,(%rsp)
   19413:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   19417:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1941d:	45 85 e4             	test   %r12d,%r12d
   19420:	0f 85 ea 01 00 00    	jne    19610 <mbedtls_sha256_common_self_test+0x280>
   19426:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1942d:	00 00 
   1942f:	45 85 ed             	test   %r13d,%r13d
   19432:	0f 85 28 01 00 00    	jne    19560 <mbedtls_sha256_common_self_test+0x1d0>
   19438:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   1943f:	ae 67 bb 
   19442:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
   19449:	00 
   1944a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1944f:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   19456:	f5 4f a5 
   19459:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1945e:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   19465:	68 05 9b 
   19468:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1946d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   19474:	cd e0 5b 
   19477:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1947c:	48 83 fb 02          	cmp    $0x2,%rbx
   19480:	0f 84 28 01 00 00    	je     195ae <mbedtls_sha256_common_self_test+0x21e>
   19486:	48 8d 05 13 a2 00 00 	lea    0xa213(%rip),%rax        # 236a0 <sha_test_buflen>
   1948d:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   19491:	48 85 d2             	test   %rdx,%rdx
   19494:	74 29                	je     194bf <mbedtls_sha256_common_self_test+0x12f>
   19496:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   1949d:	00 
   1949e:	4c 89 f7             	mov    %r14,%rdi
   194a1:	48 29 d8             	sub    %rbx,%rax
   194a4:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
   194a8:	48 8d 05 11 a2 00 00 	lea    0xa211(%rip),%rax        # 236c0 <sha_test_buf>
   194af:	48 01 c6             	add    %rax,%rsi
   194b2:	e8 39 fb ff ff       	callq  18ff0 <mbedtls_sha256_update.part.0>
   194b7:	85 c0                	test   %eax,%eax
   194b9:	0f 85 3f 01 00 00    	jne    195fe <mbedtls_sha256_common_self_test+0x26e>
   194bf:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   194c6:	00 
   194c7:	4c 89 f7             	mov    %r14,%rdi
   194ca:	4c 89 fe             	mov    %r15,%rsi
   194cd:	e8 2e fd ff ff       	callq  19200 <mbedtls_sha256_finish>
   194d2:	85 c0                	test   %eax,%eax
   194d4:	0f 85 24 01 00 00    	jne    195fe <mbedtls_sha256_common_self_test+0x26e>
   194da:	48 8b 14 24          	mov    (%rsp),%rdx
   194de:	48 89 ee             	mov    %rbp,%rsi
   194e1:	4c 89 ff             	mov    %r15,%rdi
   194e4:	e8 c7 ad fe ff       	callq  42b0 <memcmp@plt>
   194e9:	85 c0                	test   %eax,%eax
   194eb:	0f 85 8f 01 00 00    	jne    19680 <mbedtls_sha256_common_self_test+0x2f0>
   194f1:	45 85 e4             	test   %r12d,%r12d
   194f4:	0f 85 36 01 00 00    	jne    19630 <mbedtls_sha256_common_self_test+0x2a0>
   194fa:	48 83 c3 01          	add    $0x1,%rbx
   194fe:	48 83 c5 20          	add    $0x20,%rbp
   19502:	48 83 fb 03          	cmp    $0x3,%rbx
   19506:	0f 85 11 ff ff ff    	jne    1941d <mbedtls_sha256_common_self_test+0x8d>
   1950c:	45 85 e4             	test   %r12d,%r12d
   1950f:	0f 85 33 01 00 00    	jne    19648 <mbedtls_sha256_common_self_test+0x2b8>
   19515:	be 6c 00 00 00       	mov    $0x6c,%esi
   1951a:	4c 89 f7             	mov    %r14,%rdi
   1951d:	45 89 e5             	mov    %r12d,%r13d
   19520:	e8 4b b7 ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   19525:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1952a:	e8 c1 ac fe ff       	callq  41f0 <free@plt>
   1952f:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   19536:	00 
   19537:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1953e:	00 00 
   19540:	0f 85 6e 01 00 00    	jne    196b4 <mbedtls_sha256_common_self_test+0x324>
   19546:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   1954d:	44 89 e8             	mov    %r13d,%eax
   19550:	5b                   	pop    %rbx
   19551:	5d                   	pop    %rbp
   19552:	41 5c                	pop    %r12
   19554:	41 5d                	pop    %r13
   19556:	41 5e                	pop    %r14
   19558:	41 5f                	pop    %r15
   1955a:	c3                   	retq   
   1955b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19560:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   19567:	d5 7c 36 
   1956a:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
   19571:	00 
   19572:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19577:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   1957e:	59 0e f7 
   19581:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19586:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   1958d:	15 58 68 
   19590:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19595:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   1959c:	4f fa be 
   1959f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   195a4:	48 83 fb 02          	cmp    $0x2,%rbx
   195a8:	0f 85 d8 fe ff ff    	jne    19486 <mbedtls_sha256_common_self_test+0xf6>
   195ae:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   195b3:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   195b8:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   195bd:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   195c4:	61 61 61 
   195c7:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   195cc:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   195d2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   195d5:	eb 13                	jmp    195ea <mbedtls_sha256_common_self_test+0x25a>
   195d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   195de:	00 00 
   195e0:	41 83 ef 01          	sub    $0x1,%r15d
   195e4:	0f 84 a0 00 00 00    	je     1968a <mbedtls_sha256_common_self_test+0x2fa>
   195ea:	ba e8 03 00 00       	mov    $0x3e8,%edx
   195ef:	48 89 de             	mov    %rbx,%rsi
   195f2:	4c 89 f7             	mov    %r14,%rdi
   195f5:	e8 f6 f9 ff ff       	callq  18ff0 <mbedtls_sha256_update.part.0>
   195fa:	85 c0                	test   %eax,%eax
   195fc:	74 e2                	je     195e0 <mbedtls_sha256_common_self_test+0x250>
   195fe:	89 c2                	mov    %eax,%edx
   19600:	45 85 e4             	test   %r12d,%r12d
   19603:	75 5b                	jne    19660 <mbedtls_sha256_common_self_test+0x2d0>
   19605:	41 89 d4             	mov    %edx,%r12d
   19608:	e9 08 ff ff ff       	jmpq   19515 <mbedtls_sha256_common_self_test+0x185>
   1960d:	0f 1f 00             	nopl   (%rax)
   19610:	8b 54 24 14          	mov    0x14(%rsp),%edx
   19614:	8d 4b 01             	lea    0x1(%rbx),%ecx
   19617:	48 8d 35 a6 9f 00 00 	lea    0x9fa6(%rip),%rsi        # 235c4 <sha1_test_buf+0xc4>
   1961e:	31 c0                	xor    %eax,%eax
   19620:	bf 01 00 00 00       	mov    $0x1,%edi
   19625:	e8 26 ad fe ff       	callq  4350 <__printf_chk@plt>
   1962a:	e9 f7 fd ff ff       	jmpq   19426 <mbedtls_sha256_common_self_test+0x96>
   1962f:	90                   	nop
   19630:	48 8d 3d cb 1a 00 00 	lea    0x1acb(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
   19637:	e8 d4 ab fe ff       	callq  4210 <puts@plt>
   1963c:	e9 b9 fe ff ff       	jmpq   194fa <mbedtls_sha256_common_self_test+0x16a>
   19641:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19648:	bf 0a 00 00 00       	mov    $0xa,%edi
   1964d:	45 31 e4             	xor    %r12d,%r12d
   19650:	e8 ab ab fe ff       	callq  4200 <putchar@plt>
   19655:	e9 bb fe ff ff       	jmpq   19515 <mbedtls_sha256_common_self_test+0x185>
   1965a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19660:	48 8d 3d 56 9f 00 00 	lea    0x9f56(%rip),%rdi        # 235bd <sha1_test_buf+0xbd>
   19667:	89 14 24             	mov    %edx,(%rsp)
   1966a:	e8 a1 ab fe ff       	callq  4210 <puts@plt>
   1966f:	8b 14 24             	mov    (%rsp),%edx
   19672:	41 89 d4             	mov    %edx,%r12d
   19675:	e9 9b fe ff ff       	jmpq   19515 <mbedtls_sha256_common_self_test+0x185>
   1967a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19680:	ba 01 00 00 00       	mov    $0x1,%edx
   19685:	e9 76 ff ff ff       	jmpq   19600 <mbedtls_sha256_common_self_test+0x270>
   1968a:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1968f:	e9 2b fe ff ff       	jmpq   194bf <mbedtls_sha256_common_self_test+0x12f>
   19694:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1969a:	45 85 e4             	test   %r12d,%r12d
   1969d:	0f 84 8c fe ff ff    	je     1952f <mbedtls_sha256_common_self_test+0x19f>
   196a3:	48 8d 3d 01 9f 00 00 	lea    0x9f01(%rip),%rdi        # 235ab <sha1_test_buf+0xab>
   196aa:	e8 61 ab fe ff       	callq  4210 <puts@plt>
   196af:	e9 7b fe ff ff       	jmpq   1952f <mbedtls_sha256_common_self_test+0x19f>
   196b4:	e8 b7 ab fe ff       	callq  4270 <__stack_chk_fail@plt>
   196b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000196c0 <mbedtls_sha256>:
   196c0:	f3 0f 1e fa          	endbr64 
   196c4:	41 55                	push   %r13
   196c6:	41 54                	push   %r12
   196c8:	55                   	push   %rbp
   196c9:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   196cd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   196d4:	00 00 
   196d6:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   196db:	31 c0                	xor    %eax,%eax
   196dd:	83 f9 01             	cmp    $0x1,%ecx
   196e0:	0f 87 12 01 00 00    	ja     197f8 <mbedtls_sha256+0x138>
   196e6:	49 89 f0             	mov    %rsi,%r8
   196e9:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   196ee:	49 89 f9             	mov    %rdi,%r9
   196f1:	49 89 d5             	mov    %rdx,%r13
   196f4:	48 89 f7             	mov    %rsi,%rdi
   196f7:	89 ca                	mov    %ecx,%edx
   196f9:	b9 0c 00 00 00       	mov    $0xc,%ecx
   196fe:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   19705:	00 
   19706:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   19709:	85 d2                	test   %edx,%edx
   1970b:	0f 84 9f 00 00 00    	je     197b0 <mbedtls_sha256+0xf0>
   19711:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   19718:	d5 7c 36 
   1971b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19720:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   19727:	59 0e f7 
   1972a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1972f:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   19736:	15 58 68 
   19739:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1973e:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   19745:	4f fa be 
   19748:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1974d:	89 54 24 68          	mov    %edx,0x68(%rsp)
   19751:	48 89 e5             	mov    %rsp,%rbp
   19754:	4d 85 c0             	test   %r8,%r8
   19757:	74 15                	je     1976e <mbedtls_sha256+0xae>
   19759:	4c 89 c2             	mov    %r8,%rdx
   1975c:	4c 89 ce             	mov    %r9,%rsi
   1975f:	48 89 ef             	mov    %rbp,%rdi
   19762:	e8 89 f8 ff ff       	callq  18ff0 <mbedtls_sha256_update.part.0>
   19767:	41 89 c4             	mov    %eax,%r12d
   1976a:	85 c0                	test   %eax,%eax
   1976c:	75 0e                	jne    1977c <mbedtls_sha256+0xbc>
   1976e:	4c 89 ee             	mov    %r13,%rsi
   19771:	48 89 ef             	mov    %rbp,%rdi
   19774:	e8 87 fa ff ff       	callq  19200 <mbedtls_sha256_finish>
   19779:	41 89 c4             	mov    %eax,%r12d
   1977c:	be 6c 00 00 00       	mov    $0x6c,%esi
   19781:	48 89 ef             	mov    %rbp,%rdi
   19784:	e8 e7 b4 ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   19789:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1978e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19795:	00 00 
   19797:	75 67                	jne    19800 <mbedtls_sha256+0x140>
   19799:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   1979d:	44 89 e0             	mov    %r12d,%eax
   197a0:	5d                   	pop    %rbp
   197a1:	41 5c                	pop    %r12
   197a3:	41 5d                	pop    %r13
   197a5:	c3                   	retq   
   197a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   197ad:	00 00 00 
   197b0:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   197b7:	ae 67 bb 
   197ba:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   197bf:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   197c6:	f5 4f a5 
   197c9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   197ce:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   197d5:	68 05 9b 
   197d8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   197dd:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   197e4:	cd e0 5b 
   197e7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   197ec:	e9 5c ff ff ff       	jmpq   1974d <mbedtls_sha256+0x8d>
   197f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   197f8:	41 bc 8c ff ff ff    	mov    $0xffffff8c,%r12d
   197fe:	eb 89                	jmp    19789 <mbedtls_sha256+0xc9>
   19800:	e8 6b aa fe ff       	callq  4270 <__stack_chk_fail@plt>
   19805:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1980c:	00 00 00 00 

0000000000019810 <mbedtls_sha256_self_test>:
   19810:	f3 0f 1e fa          	endbr64 
   19814:	31 f6                	xor    %esi,%esi
   19816:	e9 75 fb ff ff       	jmpq   19390 <mbedtls_sha256_common_self_test>
   1981b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019820 <mbedtls_sha224_self_test>:
   19820:	f3 0f 1e fa          	endbr64 
   19824:	be 01 00 00 00       	mov    $0x1,%esi
   19829:	e9 62 fb ff ff       	jmpq   19390 <mbedtls_sha256_common_self_test>
   1982e:	66 90                	xchg   %ax,%ax

0000000000019830 <mbedtls_sha512_init>:
   19830:	f3 0f 1e fa          	endbr64 
   19834:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1983b:	48 89 f9             	mov    %rdi,%rcx
   1983e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   19842:	31 c0                	xor    %eax,%eax
   19844:	48 c7 87 c8 00 00 00 	movq   $0x0,0xc8(%rdi)
   1984b:	00 00 00 00 
   1984f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   19853:	48 29 f9             	sub    %rdi,%rcx
   19856:	81 c1 d8 00 00 00    	add    $0xd8,%ecx
   1985c:	c1 e9 03             	shr    $0x3,%ecx
   1985f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   19862:	c3                   	retq   
   19863:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1986a:	00 00 00 00 
   1986e:	66 90                	xchg   %ax,%ax

0000000000019870 <mbedtls_sha512_free>:
   19870:	f3 0f 1e fa          	endbr64 
   19874:	48 85 ff             	test   %rdi,%rdi
   19877:	74 0f                	je     19888 <mbedtls_sha512_free+0x18>
   19879:	be d8 00 00 00       	mov    $0xd8,%esi
   1987e:	e9 ed b3 ff ff       	jmpq   14c70 <mbedtls_platform_zeroize>
   19883:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19888:	c3                   	retq   
   19889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000019890 <mbedtls_sha512_clone>:
   19890:	f3 0f 1e fa          	endbr64 
   19894:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   19898:	0f 11 07             	movups %xmm0,(%rdi)
   1989b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   198a0:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   198a4:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   198a9:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   198ad:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   198b2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   198b6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   198bb:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   198bf:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   198c4:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
   198c8:	f3 0f 6f 76 60       	movdqu 0x60(%rsi),%xmm6
   198cd:	0f 11 77 60          	movups %xmm6,0x60(%rdi)
   198d1:	f3 0f 6f 7e 70       	movdqu 0x70(%rsi),%xmm7
   198d6:	0f 11 7f 70          	movups %xmm7,0x70(%rdi)
   198da:	f3 0f 6f 86 80 00 00 	movdqu 0x80(%rsi),%xmm0
   198e1:	00 
   198e2:	0f 11 87 80 00 00 00 	movups %xmm0,0x80(%rdi)
   198e9:	f3 0f 6f 8e 90 00 00 	movdqu 0x90(%rsi),%xmm1
   198f0:	00 
   198f1:	0f 11 8f 90 00 00 00 	movups %xmm1,0x90(%rdi)
   198f8:	f3 0f 6f 96 a0 00 00 	movdqu 0xa0(%rsi),%xmm2
   198ff:	00 
   19900:	0f 11 97 a0 00 00 00 	movups %xmm2,0xa0(%rdi)
   19907:	f3 0f 6f 9e b0 00 00 	movdqu 0xb0(%rsi),%xmm3
   1990e:	00 
   1990f:	0f 11 9f b0 00 00 00 	movups %xmm3,0xb0(%rdi)
   19916:	f3 0f 6f a6 c0 00 00 	movdqu 0xc0(%rsi),%xmm4
   1991d:	00 
   1991e:	0f 11 a7 c0 00 00 00 	movups %xmm4,0xc0(%rdi)
   19925:	48 8b 86 d0 00 00 00 	mov    0xd0(%rsi),%rax
   1992c:	48 89 87 d0 00 00 00 	mov    %rax,0xd0(%rdi)
   19933:	c3                   	retq   
   19934:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1993b:	00 00 00 00 
   1993f:	90                   	nop

0000000000019940 <mbedtls_sha512_starts>:
   19940:	f3 0f 1e fa          	endbr64 
   19944:	83 fe 01             	cmp    $0x1,%esi
   19947:	0f 87 13 01 00 00    	ja     19a60 <mbedtls_sha512_starts+0x120>
   1994d:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   19954:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   1995b:	00 
   1995c:	85 f6                	test   %esi,%esi
   1995e:	0f 84 7c 00 00 00    	je     199e0 <mbedtls_sha512_starts+0xa0>
   19964:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   1996b:	9d bb cb 
   1996e:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   19974:	48 89 47 10          	mov    %rax,0x10(%rdi)
   19978:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   1997f:	29 9a 62 
   19982:	48 89 47 18          	mov    %rax,0x18(%rdi)
   19986:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   1998d:	01 59 91 
   19990:	48 89 47 20          	mov    %rax,0x20(%rdi)
   19994:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   1999b:	ec 2f 15 
   1999e:	48 89 47 28          	mov    %rax,0x28(%rdi)
   199a2:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   199a9:	26 33 67 
   199ac:	48 89 47 30          	mov    %rax,0x30(%rdi)
   199b0:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   199b7:	4a b4 8e 
   199ba:	48 89 47 38          	mov    %rax,0x38(%rdi)
   199be:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   199c5:	2e 0c db 
   199c8:	48 89 47 40          	mov    %rax,0x40(%rdi)
   199cc:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   199d3:	48 b5 47 
   199d6:	48 89 47 48          	mov    %rax,0x48(%rdi)
   199da:	31 c0                	xor    %eax,%eax
   199dc:	c3                   	retq   
   199dd:	0f 1f 00             	nopl   (%rax)
   199e0:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   199e7:	e6 09 6a 
   199ea:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   199f0:	48 89 47 10          	mov    %rax,0x10(%rdi)
   199f4:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   199fb:	ae 67 bb 
   199fe:	48 89 47 18          	mov    %rax,0x18(%rdi)
   19a02:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   19a09:	f3 6e 3c 
   19a0c:	48 89 47 20          	mov    %rax,0x20(%rdi)
   19a10:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   19a17:	f5 4f a5 
   19a1a:	48 89 47 28          	mov    %rax,0x28(%rdi)
   19a1e:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   19a25:	52 0e 51 
   19a28:	48 89 47 30          	mov    %rax,0x30(%rdi)
   19a2c:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   19a33:	68 05 9b 
   19a36:	48 89 47 38          	mov    %rax,0x38(%rdi)
   19a3a:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   19a41:	d9 83 1f 
   19a44:	48 89 47 40          	mov    %rax,0x40(%rdi)
   19a48:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   19a4f:	cd e0 5b 
   19a52:	48 89 47 48          	mov    %rax,0x48(%rdi)
   19a56:	31 c0                	xor    %eax,%eax
   19a58:	c3                   	retq   
   19a59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19a60:	b8 8b ff ff ff       	mov    $0xffffff8b,%eax
   19a65:	c3                   	retq   
   19a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19a6d:	00 00 00 

0000000000019a70 <mbedtls_internal_sha512_process>:
   19a70:	f3 0f 1e fa          	endbr64 
   19a74:	41 57                	push   %r15
   19a76:	48 89 f9             	mov    %rdi,%rcx
   19a79:	41 56                	push   %r14
   19a7b:	41 55                	push   %r13
   19a7d:	41 54                	push   %r12
   19a7f:	55                   	push   %rbp
   19a80:	53                   	push   %rbx
   19a81:	48 81 ec 28 03 00 00 	sub    $0x328,%rsp
   19a88:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   19a8d:	48 8d 9c 24 d0 02 00 	lea    0x2d0(%rsp),%rbx
   19a94:	00 
   19a95:	48 89 df             	mov    %rbx,%rdi
   19a98:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19a9f:	00 00 
   19aa1:	48 89 84 24 18 03 00 	mov    %rax,0x318(%rsp)
   19aa8:	00 
   19aa9:	31 c0                	xor    %eax,%eax
   19aab:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   19ab0:	48 8b 54 01 10       	mov    0x10(%rcx,%rax,1),%rdx
   19ab5:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   19ab9:	48 83 c0 08          	add    $0x8,%rax
   19abd:	48 83 f8 40          	cmp    $0x40,%rax
   19ac1:	75 ed                	jne    19ab0 <mbedtls_internal_sha512_process+0x40>
   19ac3:	31 c0                	xor    %eax,%eax
   19ac5:	4c 8d 54 24 50       	lea    0x50(%rsp),%r10
   19aca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19ad0:	48 8b 14 06          	mov    (%rsi,%rax,1),%rdx
   19ad4:	48 0f ca             	bswap  %rdx
   19ad7:	49 89 14 02          	mov    %rdx,(%r10,%rax,1)
   19adb:	48 83 c0 08          	add    $0x8,%rax
   19adf:	48 3d 80 00 00 00    	cmp    $0x80,%rax
   19ae5:	75 e9                	jne    19ad0 <mbedtls_internal_sha512_process+0x60>
   19ae7:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   19aee:	00 
   19aef:	4c 89 d1             	mov    %r10,%rcx
   19af2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19af8:	48 8b 41 70          	mov    0x70(%rcx),%rax
   19afc:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   19b00:	48 83 c1 08          	add    $0x8,%rcx
   19b04:	48 89 c2             	mov    %rax,%rdx
   19b07:	49 89 c0             	mov    %rax,%r8
   19b0a:	48 c1 e8 06          	shr    $0x6,%rax
   19b0e:	49 c1 c0 03          	rol    $0x3,%r8
   19b12:	48 c1 ca 13          	ror    $0x13,%rdx
   19b16:	4c 31 c2             	xor    %r8,%rdx
   19b19:	49 89 f0             	mov    %rsi,%r8
   19b1c:	48 31 c2             	xor    %rax,%rdx
   19b1f:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
   19b23:	48 03 41 40          	add    0x40(%rcx),%rax
   19b27:	49 c1 c8 08          	ror    $0x8,%r8
   19b2b:	48 01 c2             	add    %rax,%rdx
   19b2e:	48 89 f0             	mov    %rsi,%rax
   19b31:	48 c1 ee 07          	shr    $0x7,%rsi
   19b35:	48 d1 c8             	ror    %rax
   19b38:	4c 31 c0             	xor    %r8,%rax
   19b3b:	48 31 f0             	xor    %rsi,%rax
   19b3e:	48 01 d0             	add    %rdx,%rax
   19b41:	48 89 41 78          	mov    %rax,0x78(%rcx)
   19b45:	48 39 cf             	cmp    %rcx,%rdi
   19b48:	75 ae                	jne    19af8 <mbedtls_internal_sha512_process+0x88>
   19b4a:	48 8b 8c 24 d8 02 00 	mov    0x2d8(%rsp),%rcx
   19b51:	00 
   19b52:	48 8b 94 24 e0 02 00 	mov    0x2e0(%rsp),%rdx
   19b59:	00 
   19b5a:	49 bf 18 81 6d da d5 	movabs $0xab1c5ed5da6d8118,%r15
   19b61:	5e 1c ab 
   19b64:	48 8d 1d 55 a0 00 00 	lea    0xa055(%rip),%rbx        # 23bc0 <K+0x40>
   19b6b:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   19b70:	4c 8b 8c 24 08 03 00 	mov    0x308(%rsp),%r9
   19b77:	00 
   19b78:	49 bf 9b 4f 19 af a4 	movabs $0x923f82a4af194f9b,%r15
   19b7f:	82 3f 92 
   19b82:	48 bd 2f 3b 4d ec cf 	movabs $0xb5c0fbcfec4d3b2f,%rbp
   19b89:	fb c0 b5 
   19b8c:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   19b91:	4c 8b 84 24 f0 02 00 	mov    0x2f0(%rsp),%r8
   19b98:	00 
   19b99:	49 bf 19 d0 05 b6 f1 	movabs $0x59f111f1b605d019,%r15
   19ba0:	11 f1 59 
   19ba3:	49 bd cd 65 ef 23 91 	movabs $0x7137449123ef65cd,%r13
   19baa:	44 37 71 
   19bad:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   19bb2:	48 8b bc 24 00 03 00 	mov    0x300(%rsp),%rdi
   19bb9:	00 
   19bba:	49 bf 38 b5 48 f3 5b 	movabs $0x3956c25bf348b538,%r15
   19bc1:	c2 56 39 
   19bc4:	49 bc 22 ae 28 d7 98 	movabs $0x428a2f98d728ae22,%r12
   19bcb:	2f 8a 42 
   19bce:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   19bd3:	48 8b b4 24 f8 02 00 	mov    0x2f8(%rsp),%rsi
   19bda:	00 
   19bdb:	49 89 d6             	mov    %rdx,%r14
   19bde:	49 bf bc db 89 81 a5 	movabs $0xe9b5dba58189dbbc,%r15
   19be5:	db b5 e9 
   19be8:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   19bed:	4c 8b 9c 24 d0 02 00 	mov    0x2d0(%rsp),%r11
   19bf4:	00 
   19bf5:	49 89 df             	mov    %rbx,%r15
   19bf8:	48 89 cb             	mov    %rcx,%rbx
   19bfb:	48 8b 84 24 e8 02 00 	mov    0x2e8(%rsp),%rax
   19c02:	00 
   19c03:	eb 3f                	jmp    19c44 <mbedtls_internal_sha512_process+0x1d4>
   19c05:	0f 1f 00             	nopl   (%rax)
   19c08:	49 8b 4f 18          	mov    0x18(%r15),%rcx
   19c0c:	4d 8b 27             	mov    (%r15),%r12
   19c0f:	49 83 c7 40          	add    $0x40,%r15
   19c13:	4d 8b 6f c8          	mov    -0x38(%r15),%r13
   19c17:	49 8b 6f d0          	mov    -0x30(%r15),%rbp
   19c1b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   19c20:	49 8b 4f e0          	mov    -0x20(%r15),%rcx
   19c24:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   19c29:	49 8b 4f e8          	mov    -0x18(%r15),%rcx
   19c2d:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   19c32:	49 8b 4f f0          	mov    -0x10(%r15),%rcx
   19c36:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   19c3b:	49 8b 4f f8          	mov    -0x8(%r15),%rcx
   19c3f:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   19c44:	4c 89 c1             	mov    %r8,%rcx
   19c47:	4c 89 c2             	mov    %r8,%rdx
   19c4a:	48 c1 c9 0e          	ror    $0xe,%rcx
   19c4e:	48 c1 ca 12          	ror    $0x12,%rdx
   19c52:	48 31 ca             	xor    %rcx,%rdx
   19c55:	4c 89 c1             	mov    %r8,%rcx
   19c58:	48 c1 c1 17          	rol    $0x17,%rcx
   19c5c:	48 31 ca             	xor    %rcx,%rdx
   19c5f:	48 89 f9             	mov    %rdi,%rcx
   19c62:	48 31 f1             	xor    %rsi,%rcx
   19c65:	4c 21 c1             	and    %r8,%rcx
   19c68:	48 31 f9             	xor    %rdi,%rcx
   19c6b:	49 03 7a 08          	add    0x8(%r10),%rdi
   19c6f:	48 01 d1             	add    %rdx,%rcx
   19c72:	49 03 0a             	add    (%r10),%rcx
   19c75:	4c 89 da             	mov    %r11,%rdx
   19c78:	49 01 c9             	add    %rcx,%r9
   19c7b:	48 c1 c2 1e          	rol    $0x1e,%rdx
   19c7f:	4b 8d 0c 21          	lea    (%r9,%r12,1),%rcx
   19c83:	4d 89 d9             	mov    %r11,%r9
   19c86:	4d 89 dc             	mov    %r11,%r12
   19c89:	49 c1 c9 1c          	ror    $0x1c,%r9
   19c8d:	49 21 dc             	and    %rbx,%r12
   19c90:	48 01 c8             	add    %rcx,%rax
   19c93:	4c 31 ca             	xor    %r9,%rdx
   19c96:	4d 89 d9             	mov    %r11,%r9
   19c99:	49 c1 c1 19          	rol    $0x19,%r9
   19c9d:	4c 31 ca             	xor    %r9,%rdx
   19ca0:	4d 89 d9             	mov    %r11,%r9
   19ca3:	49 09 d9             	or     %rbx,%r9
   19ca6:	4d 21 f1             	and    %r14,%r9
   19ca9:	4d 09 e1             	or     %r12,%r9
   19cac:	49 01 d1             	add    %rdx,%r9
   19caf:	48 89 c2             	mov    %rax,%rdx
   19cb2:	49 01 c9             	add    %rcx,%r9
   19cb5:	4c 89 c1             	mov    %r8,%rcx
   19cb8:	48 c1 ca 12          	ror    $0x12,%rdx
   19cbc:	48 31 f1             	xor    %rsi,%rcx
   19cbf:	48 21 c1             	and    %rax,%rcx
   19cc2:	48 31 f1             	xor    %rsi,%rcx
   19cc5:	48 01 cf             	add    %rcx,%rdi
   19cc8:	48 89 c1             	mov    %rax,%rcx
   19ccb:	48 c1 c9 0e          	ror    $0xe,%rcx
   19ccf:	48 31 ca             	xor    %rcx,%rdx
   19cd2:	48 89 c1             	mov    %rax,%rcx
   19cd5:	48 c1 c1 17          	rol    $0x17,%rcx
   19cd9:	48 31 ca             	xor    %rcx,%rdx
   19cdc:	4c 89 c9             	mov    %r9,%rcx
   19cdf:	49 03 72 10          	add    0x10(%r10),%rsi
   19ce3:	48 01 fa             	add    %rdi,%rdx
   19ce6:	48 c1 c1 1e          	rol    $0x1e,%rcx
   19cea:	4c 89 cf             	mov    %r9,%rdi
   19ced:	49 01 d5             	add    %rdx,%r13
   19cf0:	4c 89 ca             	mov    %r9,%rdx
   19cf3:	4c 21 df             	and    %r11,%rdi
   19cf6:	48 c1 ca 1c          	ror    $0x1c,%rdx
   19cfa:	4d 01 ee             	add    %r13,%r14
   19cfd:	48 31 d1             	xor    %rdx,%rcx
   19d00:	4c 89 ca             	mov    %r9,%rdx
   19d03:	48 c1 c2 19          	rol    $0x19,%rdx
   19d07:	48 31 d1             	xor    %rdx,%rcx
   19d0a:	4c 89 ca             	mov    %r9,%rdx
   19d0d:	4c 09 da             	or     %r11,%rdx
   19d10:	48 21 da             	and    %rbx,%rdx
   19d13:	48 09 fa             	or     %rdi,%rdx
   19d16:	4c 89 c7             	mov    %r8,%rdi
   19d19:	48 31 c7             	xor    %rax,%rdi
   19d1c:	48 01 ca             	add    %rcx,%rdx
   19d1f:	4c 89 f1             	mov    %r14,%rcx
   19d22:	4c 21 f7             	and    %r14,%rdi
   19d25:	48 c1 c9 12          	ror    $0x12,%rcx
   19d29:	4c 01 ea             	add    %r13,%rdx
   19d2c:	4c 31 c7             	xor    %r8,%rdi
   19d2f:	48 01 fe             	add    %rdi,%rsi
   19d32:	4c 89 f7             	mov    %r14,%rdi
   19d35:	48 c1 cf 0e          	ror    $0xe,%rdi
   19d39:	48 31 f9             	xor    %rdi,%rcx
   19d3c:	4c 89 f7             	mov    %r14,%rdi
   19d3f:	48 c1 c7 17          	rol    $0x17,%rdi
   19d43:	48 31 f9             	xor    %rdi,%rcx
   19d46:	4c 89 cf             	mov    %r9,%rdi
   19d49:	48 01 f1             	add    %rsi,%rcx
   19d4c:	48 89 d6             	mov    %rdx,%rsi
   19d4f:	48 01 cd             	add    %rcx,%rbp
   19d52:	48 89 d1             	mov    %rdx,%rcx
   19d55:	48 c1 c6 1e          	rol    $0x1e,%rsi
   19d59:	48 c1 c9 1c          	ror    $0x1c,%rcx
   19d5d:	48 01 eb             	add    %rbp,%rbx
   19d60:	48 31 ce             	xor    %rcx,%rsi
   19d63:	48 89 d1             	mov    %rdx,%rcx
   19d66:	48 c1 c1 19          	rol    $0x19,%rcx
   19d6a:	48 31 ce             	xor    %rcx,%rsi
   19d6d:	4c 89 c9             	mov    %r9,%rcx
   19d70:	48 21 d7             	and    %rdx,%rdi
   19d73:	4d 03 42 18          	add    0x18(%r10),%r8
   19d77:	48 09 d1             	or     %rdx,%rcx
   19d7a:	4c 21 d9             	and    %r11,%rcx
   19d7d:	48 09 f9             	or     %rdi,%rcx
   19d80:	48 89 c7             	mov    %rax,%rdi
   19d83:	4c 31 f7             	xor    %r14,%rdi
   19d86:	48 01 f1             	add    %rsi,%rcx
   19d89:	48 89 de             	mov    %rbx,%rsi
   19d8c:	48 21 df             	and    %rbx,%rdi
   19d8f:	48 c1 ce 12          	ror    $0x12,%rsi
   19d93:	48 01 e9             	add    %rbp,%rcx
   19d96:	48 89 d5             	mov    %rdx,%rbp
   19d99:	48 31 c7             	xor    %rax,%rdi
   19d9c:	48 21 cd             	and    %rcx,%rbp
   19d9f:	4c 01 c7             	add    %r8,%rdi
   19da2:	49 89 d8             	mov    %rbx,%r8
   19da5:	49 c1 c8 0e          	ror    $0xe,%r8
   19da9:	4c 31 c6             	xor    %r8,%rsi
   19dac:	49 89 d8             	mov    %rbx,%r8
   19daf:	49 c1 c0 17          	rol    $0x17,%r8
   19db3:	4c 31 c6             	xor    %r8,%rsi
   19db6:	49 89 c8             	mov    %rcx,%r8
   19db9:	48 01 fe             	add    %rdi,%rsi
   19dbc:	48 89 cf             	mov    %rcx,%rdi
   19dbf:	49 c1 c8 1c          	ror    $0x1c,%r8
   19dc3:	48 03 74 24 08       	add    0x8(%rsp),%rsi
   19dc8:	48 c1 c7 1e          	rol    $0x1e,%rdi
   19dcc:	49 01 f3             	add    %rsi,%r11
   19dcf:	4c 31 c7             	xor    %r8,%rdi
   19dd2:	49 89 c8             	mov    %rcx,%r8
   19dd5:	49 c1 c0 19          	rol    $0x19,%r8
   19dd9:	4c 31 c7             	xor    %r8,%rdi
   19ddc:	49 89 d0             	mov    %rdx,%r8
   19ddf:	49 09 c8             	or     %rcx,%r8
   19de2:	4d 21 c8             	and    %r9,%r8
   19de5:	49 09 e8             	or     %rbp,%r8
   19de8:	48 89 cd             	mov    %rcx,%rbp
   19deb:	49 01 f8             	add    %rdi,%r8
   19dee:	4c 89 f7             	mov    %r14,%rdi
   19df1:	48 31 df             	xor    %rbx,%rdi
   19df4:	49 01 f0             	add    %rsi,%r8
   19df7:	4c 89 de             	mov    %r11,%rsi
   19dfa:	4c 21 df             	and    %r11,%rdi
   19dfd:	49 03 42 20          	add    0x20(%r10),%rax
   19e01:	48 c1 ce 0e          	ror    $0xe,%rsi
   19e05:	4c 21 c5             	and    %r8,%rbp
   19e08:	4c 31 f7             	xor    %r14,%rdi
   19e0b:	4d 03 72 28          	add    0x28(%r10),%r14
   19e0f:	48 01 c7             	add    %rax,%rdi
   19e12:	4c 89 d8             	mov    %r11,%rax
   19e15:	48 c1 c8 12          	ror    $0x12,%rax
   19e19:	48 31 f0             	xor    %rsi,%rax
   19e1c:	4c 89 de             	mov    %r11,%rsi
   19e1f:	48 c1 c6 17          	rol    $0x17,%rsi
   19e23:	48 31 f0             	xor    %rsi,%rax
   19e26:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   19e2b:	48 01 f8             	add    %rdi,%rax
   19e2e:	4c 89 c7             	mov    %r8,%rdi
   19e31:	48 01 c6             	add    %rax,%rsi
   19e34:	4c 89 c0             	mov    %r8,%rax
   19e37:	48 c1 cf 1c          	ror    $0x1c,%rdi
   19e3b:	48 c1 c0 1e          	rol    $0x1e,%rax
   19e3f:	49 01 f1             	add    %rsi,%r9
   19e42:	48 31 c7             	xor    %rax,%rdi
   19e45:	4c 89 c0             	mov    %r8,%rax
   19e48:	48 c1 c0 19          	rol    $0x19,%rax
   19e4c:	48 31 c7             	xor    %rax,%rdi
   19e4f:	48 89 c8             	mov    %rcx,%rax
   19e52:	4c 09 c0             	or     %r8,%rax
   19e55:	48 21 d0             	and    %rdx,%rax
   19e58:	48 09 e8             	or     %rbp,%rax
   19e5b:	4c 89 c5             	mov    %r8,%rbp
   19e5e:	48 01 f8             	add    %rdi,%rax
   19e61:	4c 89 cf             	mov    %r9,%rdi
   19e64:	48 01 f0             	add    %rsi,%rax
   19e67:	48 89 de             	mov    %rbx,%rsi
   19e6a:	48 c1 cf 12          	ror    $0x12,%rdi
   19e6e:	4c 31 de             	xor    %r11,%rsi
   19e71:	4c 21 ce             	and    %r9,%rsi
   19e74:	48 31 de             	xor    %rbx,%rsi
   19e77:	49 01 f6             	add    %rsi,%r14
   19e7a:	4c 89 ce             	mov    %r9,%rsi
   19e7d:	48 c1 ce 0e          	ror    $0xe,%rsi
   19e81:	48 31 fe             	xor    %rdi,%rsi
   19e84:	4c 89 cf             	mov    %r9,%rdi
   19e87:	48 c1 c7 17          	rol    $0x17,%rdi
   19e8b:	48 31 fe             	xor    %rdi,%rsi
   19e8e:	48 21 c5             	and    %rax,%rbp
   19e91:	49 03 5a 30          	add    0x30(%r10),%rbx
   19e95:	49 01 f6             	add    %rsi,%r14
   19e98:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19e9d:	4c 01 f6             	add    %r14,%rsi
   19ea0:	49 89 c6             	mov    %rax,%r14
   19ea3:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   19ea7:	48 89 c2             	mov    %rax,%rdx
   19eaa:	49 c1 c6 1e          	rol    $0x1e,%r14
   19eae:	48 c1 ca 1c          	ror    $0x1c,%rdx
   19eb2:	4c 31 f2             	xor    %r14,%rdx
   19eb5:	49 89 c6             	mov    %rax,%r14
   19eb8:	49 c1 c6 19          	rol    $0x19,%r14
   19ebc:	4c 31 f2             	xor    %r14,%rdx
   19ebf:	4d 89 c6             	mov    %r8,%r14
   19ec2:	49 09 c6             	or     %rax,%r14
   19ec5:	49 21 ce             	and    %rcx,%r14
   19ec8:	49 09 ee             	or     %rbp,%r14
   19ecb:	48 89 c5             	mov    %rax,%rbp
   19ece:	49 01 d6             	add    %rdx,%r14
   19ed1:	4c 89 da             	mov    %r11,%rdx
   19ed4:	4c 31 ca             	xor    %r9,%rdx
   19ed7:	49 01 f6             	add    %rsi,%r14
   19eda:	48 89 fe             	mov    %rdi,%rsi
   19edd:	48 21 fa             	and    %rdi,%rdx
   19ee0:	48 c1 ce 12          	ror    $0x12,%rsi
   19ee4:	4c 31 da             	xor    %r11,%rdx
   19ee7:	48 01 d3             	add    %rdx,%rbx
   19eea:	48 89 fa             	mov    %rdi,%rdx
   19eed:	48 c1 ca 0e          	ror    $0xe,%rdx
   19ef1:	48 31 f2             	xor    %rsi,%rdx
   19ef4:	48 89 fe             	mov    %rdi,%rsi
   19ef7:	48 c1 c6 17          	rol    $0x17,%rsi
   19efb:	48 31 f2             	xor    %rsi,%rdx
   19efe:	48 01 da             	add    %rbx,%rdx
   19f01:	48 03 54 24 20       	add    0x20(%rsp),%rdx
   19f06:	4c 89 f3             	mov    %r14,%rbx
   19f09:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
   19f0d:	4c 89 f1             	mov    %r14,%rcx
   19f10:	48 c1 cb 1c          	ror    $0x1c,%rbx
   19f14:	48 c1 c1 1e          	rol    $0x1e,%rcx
   19f18:	48 31 cb             	xor    %rcx,%rbx
   19f1b:	4c 89 f1             	mov    %r14,%rcx
   19f1e:	48 c1 c1 19          	rol    $0x19,%rcx
   19f22:	48 31 cb             	xor    %rcx,%rbx
   19f25:	48 89 c1             	mov    %rax,%rcx
   19f28:	4c 09 f1             	or     %r14,%rcx
   19f2b:	4c 21 c1             	and    %r8,%rcx
   19f2e:	4c 21 f5             	and    %r14,%rbp
   19f31:	4d 03 5a 38          	add    0x38(%r10),%r11
   19f35:	49 83 c2 40          	add    $0x40,%r10
   19f39:	48 09 e9             	or     %rbp,%rcx
   19f3c:	4c 89 cd             	mov    %r9,%rbp
   19f3f:	48 31 fd             	xor    %rdi,%rbp
   19f42:	48 01 cb             	add    %rcx,%rbx
   19f45:	4c 89 f1             	mov    %r14,%rcx
   19f48:	48 21 f5             	and    %rsi,%rbp
   19f4b:	48 01 d3             	add    %rdx,%rbx
   19f4e:	48 89 f2             	mov    %rsi,%rdx
   19f51:	4c 31 cd             	xor    %r9,%rbp
   19f54:	48 c1 ca 12          	ror    $0x12,%rdx
   19f58:	49 89 dc             	mov    %rbx,%r12
   19f5b:	48 21 d9             	and    %rbx,%rcx
   19f5e:	49 01 eb             	add    %rbp,%r11
   19f61:	48 89 f5             	mov    %rsi,%rbp
   19f64:	49 c1 cc 1c          	ror    $0x1c,%r12
   19f68:	48 c1 cd 0e          	ror    $0xe,%rbp
   19f6c:	48 31 d5             	xor    %rdx,%rbp
   19f6f:	48 89 f2             	mov    %rsi,%rdx
   19f72:	48 c1 c2 17          	rol    $0x17,%rdx
   19f76:	48 31 d5             	xor    %rdx,%rbp
   19f79:	48 89 da             	mov    %rbx,%rdx
   19f7c:	48 c1 c2 1e          	rol    $0x1e,%rdx
   19f80:	4c 01 dd             	add    %r11,%rbp
   19f83:	48 03 6c 24 28       	add    0x28(%rsp),%rbp
   19f88:	49 31 d4             	xor    %rdx,%r12
   19f8b:	48 89 da             	mov    %rbx,%rdx
   19f8e:	49 01 e8             	add    %rbp,%r8
   19f91:	48 c1 c2 19          	rol    $0x19,%rdx
   19f95:	4c 31 e2             	xor    %r12,%rdx
   19f98:	4d 89 f4             	mov    %r14,%r12
   19f9b:	49 09 dc             	or     %rbx,%r12
   19f9e:	49 21 c4             	and    %rax,%r12
   19fa1:	49 09 cc             	or     %rcx,%r12
   19fa4:	48 8d 0d 55 9e 00 00 	lea    0x9e55(%rip),%rcx        # 23e00 <__GNU_EH_FRAME_HDR>
   19fab:	49 01 d4             	add    %rdx,%r12
   19fae:	4e 8d 5c 25 00       	lea    0x0(%rbp,%r12,1),%r11
   19fb3:	4c 39 f9             	cmp    %r15,%rcx
   19fb6:	0f 85 4c fc ff ff    	jne    19c08 <mbedtls_internal_sha512_process+0x198>
   19fbc:	48 89 84 24 e8 02 00 	mov    %rax,0x2e8(%rsp)
   19fc3:	00 
   19fc4:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   19fc9:	31 c0                	xor    %eax,%eax
   19fcb:	4c 89 8c 24 08 03 00 	mov    %r9,0x308(%rsp)
   19fd2:	00 
   19fd3:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   19fd8:	4c 89 84 24 f0 02 00 	mov    %r8,0x2f0(%rsp)
   19fdf:	00 
   19fe0:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
   19fe7:	00 
   19fe8:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
   19fef:	00 
   19ff0:	4c 89 9c 24 d0 02 00 	mov    %r11,0x2d0(%rsp)
   19ff7:	00 
   19ff8:	48 89 9c 24 d8 02 00 	mov    %rbx,0x2d8(%rsp)
   19fff:	00 
   1a000:	4c 89 b4 24 e0 02 00 	mov    %r14,0x2e0(%rsp)
   1a007:	00 
   1a008:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1a00d:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   1a012:	eb 08                	jmp    1a01c <mbedtls_internal_sha512_process+0x5ac>
   1a014:	0f 1f 40 00          	nopl   0x0(%rax)
   1a018:	4c 8b 1c 01          	mov    (%rcx,%rax,1),%r11
   1a01c:	4c 01 5c 02 10       	add    %r11,0x10(%rdx,%rax,1)
   1a021:	48 83 c0 08          	add    $0x8,%rax
   1a025:	48 83 f8 40          	cmp    $0x40,%rax
   1a029:	75 ed                	jne    1a018 <mbedtls_internal_sha512_process+0x5a8>
   1a02b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1a030:	be d0 02 00 00       	mov    $0x2d0,%esi
   1a035:	e8 36 ac ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   1a03a:	48 8b 84 24 18 03 00 	mov    0x318(%rsp),%rax
   1a041:	00 
   1a042:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1a049:	00 00 
   1a04b:	75 14                	jne    1a061 <mbedtls_internal_sha512_process+0x5f1>
   1a04d:	48 81 c4 28 03 00 00 	add    $0x328,%rsp
   1a054:	31 c0                	xor    %eax,%eax
   1a056:	5b                   	pop    %rbx
   1a057:	5d                   	pop    %rbp
   1a058:	41 5c                	pop    %r12
   1a05a:	41 5d                	pop    %r13
   1a05c:	41 5e                	pop    %r14
   1a05e:	41 5f                	pop    %r15
   1a060:	c3                   	retq   
   1a061:	e8 0a a2 fe ff       	callq  4270 <__stack_chk_fail@plt>
   1a066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a06d:	00 00 00 

000000000001a070 <mbedtls_sha512_update.part.0>:
   1a070:	41 56                	push   %r14
   1a072:	41 55                	push   %r13
   1a074:	49 89 d5             	mov    %rdx,%r13
   1a077:	ba 80 00 00 00       	mov    $0x80,%edx
   1a07c:	41 54                	push   %r12
   1a07e:	49 89 fc             	mov    %rdi,%r12
   1a081:	55                   	push   %rbp
   1a082:	48 89 f5             	mov    %rsi,%rbp
   1a085:	53                   	push   %rbx
   1a086:	48 8b 07             	mov    (%rdi),%rax
   1a089:	41 89 c6             	mov    %eax,%r14d
   1a08c:	41 83 e6 7f          	and    $0x7f,%r14d
   1a090:	44 29 f2             	sub    %r14d,%edx
   1a093:	4c 01 e8             	add    %r13,%rax
   1a096:	48 89 07             	mov    %rax,(%rdi)
   1a099:	89 d3                	mov    %edx,%ebx
   1a09b:	73 05                	jae    1a0a2 <mbedtls_sha512_update.part.0+0x32>
   1a09d:	48 83 47 08 01       	addq   $0x1,0x8(%rdi)
   1a0a2:	45 85 f6             	test   %r14d,%r14d
   1a0a5:	74 05                	je     1a0ac <mbedtls_sha512_update.part.0+0x3c>
   1a0a7:	4c 39 eb             	cmp    %r13,%rbx
   1a0aa:	76 6e                	jbe    1a11a <mbedtls_sha512_update.part.0+0xaa>
   1a0ac:	31 db                	xor    %ebx,%ebx
   1a0ae:	49 83 fd 7f          	cmp    $0x7f,%r13
   1a0b2:	0f 86 3e 01 00 00    	jbe    1a1f6 <mbedtls_sha512_update.part.0+0x186>
   1a0b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a0bf:	00 
   1a0c0:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   1a0c5:	4c 89 e7             	mov    %r12,%rdi
   1a0c8:	e8 a3 f9 ff ff       	callq  19a70 <mbedtls_internal_sha512_process>
   1a0cd:	85 c0                	test   %eax,%eax
   1a0cf:	75 37                	jne    1a108 <mbedtls_sha512_update.part.0+0x98>
   1a0d1:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
   1a0d5:	4c 89 e8             	mov    %r13,%rax
   1a0d8:	48 29 d8             	sub    %rbx,%rax
   1a0db:	48 83 f8 7f          	cmp    $0x7f,%rax
   1a0df:	77 df                	ja     1a0c0 <mbedtls_sha512_update.part.0+0x50>
   1a0e1:	48 83 fb 7f          	cmp    $0x7f,%rbx
   1a0e5:	76 21                	jbe    1a108 <mbedtls_sha512_update.part.0+0x98>
   1a0e7:	48 01 dd             	add    %rbx,%rbp
   1a0ea:	45 31 c0             	xor    %r8d,%r8d
   1a0ed:	48 85 c0             	test   %rax,%rax
   1a0f0:	0f 85 9c 00 00 00    	jne    1a192 <mbedtls_sha512_update.part.0+0x122>
   1a0f6:	5b                   	pop    %rbx
   1a0f7:	44 89 c0             	mov    %r8d,%eax
   1a0fa:	5d                   	pop    %rbp
   1a0fb:	41 5c                	pop    %r12
   1a0fd:	41 5d                	pop    %r13
   1a0ff:	41 5e                	pop    %r14
   1a101:	c3                   	retq   
   1a102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a108:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   1a10e:	5b                   	pop    %rbx
   1a10f:	5d                   	pop    %rbp
   1a110:	44 89 c0             	mov    %r8d,%eax
   1a113:	41 5c                	pop    %r12
   1a115:	41 5d                	pop    %r13
   1a117:	41 5e                	pop    %r14
   1a119:	c3                   	retq   
   1a11a:	4d 8d 44 24 50       	lea    0x50(%r12),%r8
   1a11f:	44 89 f1             	mov    %r14d,%ecx
   1a122:	4c 01 c1             	add    %r8,%rcx
   1a125:	83 fa 08             	cmp    $0x8,%edx
   1a128:	73 3c                	jae    1a166 <mbedtls_sha512_update.part.0+0xf6>
   1a12a:	f6 c2 04             	test   $0x4,%dl
   1a12d:	0f 85 cb 00 00 00    	jne    1a1fe <mbedtls_sha512_update.part.0+0x18e>
   1a133:	85 d2                	test   %edx,%edx
   1a135:	74 0f                	je     1a146 <mbedtls_sha512_update.part.0+0xd6>
   1a137:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1a13b:	83 e2 02             	and    $0x2,%edx
   1a13e:	88 01                	mov    %al,(%rcx)
   1a140:	0f 85 d9 00 00 00    	jne    1a21f <mbedtls_sha512_update.part.0+0x1af>
   1a146:	4c 89 c6             	mov    %r8,%rsi
   1a149:	4c 89 e7             	mov    %r12,%rdi
   1a14c:	e8 1f f9 ff ff       	callq  19a70 <mbedtls_internal_sha512_process>
   1a151:	41 89 c0             	mov    %eax,%r8d
   1a154:	85 c0                	test   %eax,%eax
   1a156:	75 9e                	jne    1a0f6 <mbedtls_sha512_update.part.0+0x86>
   1a158:	48 01 dd             	add    %rbx,%rbp
   1a15b:	49 29 dd             	sub    %rbx,%r13
   1a15e:	45 31 f6             	xor    %r14d,%r14d
   1a161:	e9 46 ff ff ff       	jmpq   1a0ac <mbedtls_sha512_update.part.0+0x3c>
   1a166:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1a16a:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   1a16e:	48 89 ee             	mov    %rbp,%rsi
   1a171:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1a175:	48 89 01             	mov    %rax,(%rcx)
   1a178:	48 8b 44 1d f8       	mov    -0x8(%rbp,%rbx,1),%rax
   1a17d:	48 89 44 19 f8       	mov    %rax,-0x8(%rcx,%rbx,1)
   1a182:	48 29 f9             	sub    %rdi,%rcx
   1a185:	48 29 ce             	sub    %rcx,%rsi
   1a188:	01 d1                	add    %edx,%ecx
   1a18a:	c1 e9 03             	shr    $0x3,%ecx
   1a18d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1a190:	eb b4                	jmp    1a146 <mbedtls_sha512_update.part.0+0xd6>
   1a192:	4b 8d 4c 34 50       	lea    0x50(%r12,%r14,1),%rcx
   1a197:	89 c2                	mov    %eax,%edx
   1a199:	83 f8 08             	cmp    $0x8,%eax
   1a19c:	73 25                	jae    1a1c3 <mbedtls_sha512_update.part.0+0x153>
   1a19e:	a8 04                	test   $0x4,%al
   1a1a0:	75 6e                	jne    1a210 <mbedtls_sha512_update.part.0+0x1a0>
   1a1a2:	85 d2                	test   %edx,%edx
   1a1a4:	74 15                	je     1a1bb <mbedtls_sha512_update.part.0+0x14b>
   1a1a6:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1a1aa:	88 01                	mov    %al,(%rcx)
   1a1ac:	f6 c2 02             	test   $0x2,%dl
   1a1af:	74 0a                	je     1a1bb <mbedtls_sha512_update.part.0+0x14b>
   1a1b1:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   1a1b6:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   1a1bb:	45 31 c0             	xor    %r8d,%r8d
   1a1be:	e9 33 ff ff ff       	jmpq   1a0f6 <mbedtls_sha512_update.part.0+0x86>
   1a1c3:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1a1c7:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   1a1cb:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1a1cf:	48 89 11             	mov    %rdx,(%rcx)
   1a1d2:	89 c2                	mov    %eax,%edx
   1a1d4:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   1a1d9:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   1a1de:	48 29 f9             	sub    %rdi,%rcx
   1a1e1:	48 89 ee             	mov    %rbp,%rsi
   1a1e4:	48 89 ca             	mov    %rcx,%rdx
   1a1e7:	48 29 ce             	sub    %rcx,%rsi
   1a1ea:	01 c2                	add    %eax,%edx
   1a1ec:	c1 ea 03             	shr    $0x3,%edx
   1a1ef:	89 d1                	mov    %edx,%ecx
   1a1f1:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1a1f4:	eb c5                	jmp    1a1bb <mbedtls_sha512_update.part.0+0x14b>
   1a1f6:	4c 89 e8             	mov    %r13,%rax
   1a1f9:	e9 ec fe ff ff       	jmpq   1a0ea <mbedtls_sha512_update.part.0+0x7a>
   1a1fe:	8b 45 00             	mov    0x0(%rbp),%eax
   1a201:	89 01                	mov    %eax,(%rcx)
   1a203:	8b 44 1d fc          	mov    -0x4(%rbp,%rbx,1),%eax
   1a207:	89 44 19 fc          	mov    %eax,-0x4(%rcx,%rbx,1)
   1a20b:	e9 36 ff ff ff       	jmpq   1a146 <mbedtls_sha512_update.part.0+0xd6>
   1a210:	8b 45 00             	mov    0x0(%rbp),%eax
   1a213:	89 01                	mov    %eax,(%rcx)
   1a215:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   1a219:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   1a21d:	eb 9c                	jmp    1a1bb <mbedtls_sha512_update.part.0+0x14b>
   1a21f:	0f b7 44 1d fe       	movzwl -0x2(%rbp,%rbx,1),%eax
   1a224:	66 89 44 19 fe       	mov    %ax,-0x2(%rcx,%rbx,1)
   1a229:	e9 18 ff ff ff       	jmpq   1a146 <mbedtls_sha512_update.part.0+0xd6>
   1a22e:	66 90                	xchg   %ax,%ax

000000000001a230 <mbedtls_sha512_update>:
   1a230:	f3 0f 1e fa          	endbr64 
   1a234:	48 85 d2             	test   %rdx,%rdx
   1a237:	74 07                	je     1a240 <mbedtls_sha512_update+0x10>
   1a239:	e9 32 fe ff ff       	jmpq   1a070 <mbedtls_sha512_update.part.0>
   1a23e:	66 90                	xchg   %ax,%ax
   1a240:	31 c0                	xor    %eax,%eax
   1a242:	c3                   	retq   
   1a243:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a24a:	00 00 00 00 
   1a24e:	66 90                	xchg   %ax,%ax

000000000001a250 <mbedtls_sha512_finish>:
   1a250:	f3 0f 1e fa          	endbr64 
   1a254:	41 54                	push   %r12
   1a256:	4c 8d 67 50          	lea    0x50(%rdi),%r12
   1a25a:	55                   	push   %rbp
   1a25b:	48 89 f5             	mov    %rsi,%rbp
   1a25e:	53                   	push   %rbx
   1a25f:	8b 07                	mov    (%rdi),%eax
   1a261:	48 89 fb             	mov    %rdi,%rbx
   1a264:	83 e0 7f             	and    $0x7f,%eax
   1a267:	8d 48 01             	lea    0x1(%rax),%ecx
   1a26a:	c6 44 07 50 80       	movb   $0x80,0x50(%rdi,%rax,1)
   1a26f:	89 c8                	mov    %ecx,%eax
   1a271:	4c 01 e0             	add    %r12,%rax
   1a274:	83 f9 70             	cmp    $0x70,%ecx
   1a277:	0f 87 d3 00 00 00    	ja     1a350 <mbedtls_sha512_finish+0x100>
   1a27d:	ba 70 00 00 00       	mov    $0x70,%edx
   1a282:	29 ca                	sub    %ecx,%edx
   1a284:	83 fa 08             	cmp    $0x8,%edx
   1a287:	0f 82 73 01 00 00    	jb     1a400 <mbedtls_sha512_finish+0x1b0>
   1a28d:	48 8d 78 08          	lea    0x8(%rax),%rdi
   1a291:	89 d1                	mov    %edx,%ecx
   1a293:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1a29a:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   1a2a1:	00 00 
   1a2a3:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1a2a7:	48 29 f8             	sub    %rdi,%rax
   1a2aa:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
   1a2ad:	31 c0                	xor    %eax,%eax
   1a2af:	c1 e9 03             	shr    $0x3,%ecx
   1a2b2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1a2b5:	48 8b 13             	mov    (%rbx),%rdx
   1a2b8:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1a2bc:	4c 89 e6             	mov    %r12,%rsi
   1a2bf:	48 89 df             	mov    %rbx,%rdi
   1a2c2:	48 89 d1             	mov    %rdx,%rcx
   1a2c5:	48 c1 e0 03          	shl    $0x3,%rax
   1a2c9:	48 c1 e9 3d          	shr    $0x3d,%rcx
   1a2cd:	48 c1 e2 03          	shl    $0x3,%rdx
   1a2d1:	48 09 c8             	or     %rcx,%rax
   1a2d4:	48 0f ca             	bswap  %rdx
   1a2d7:	48 89 93 c8 00 00 00 	mov    %rdx,0xc8(%rbx)
   1a2de:	48 0f c8             	bswap  %rax
   1a2e1:	48 89 83 c0 00 00 00 	mov    %rax,0xc0(%rbx)
   1a2e8:	e8 83 f7 ff ff       	callq  19a70 <mbedtls_internal_sha512_process>
   1a2ed:	85 c0                	test   %eax,%eax
   1a2ef:	75 50                	jne    1a341 <mbedtls_sha512_finish+0xf1>
   1a2f1:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1a2f5:	48 0f ca             	bswap  %rdx
   1a2f8:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   1a2fc:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1a300:	48 0f ca             	bswap  %rdx
   1a303:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   1a307:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   1a30b:	48 0f ca             	bswap  %rdx
   1a30e:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   1a312:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   1a316:	48 0f ca             	bswap  %rdx
   1a319:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   1a31d:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   1a321:	48 0f ca             	bswap  %rdx
   1a324:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1a328:	48 8b 53 38          	mov    0x38(%rbx),%rdx
   1a32c:	48 0f ca             	bswap  %rdx
   1a32f:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   1a333:	8b 93 d0 00 00 00    	mov    0xd0(%rbx),%edx
   1a339:	85 d2                	test   %edx,%edx
   1a33b:	0f 84 e7 00 00 00    	je     1a428 <mbedtls_sha512_finish+0x1d8>
   1a341:	5b                   	pop    %rbx
   1a342:	5d                   	pop    %rbp
   1a343:	41 5c                	pop    %r12
   1a345:	c3                   	retq   
   1a346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a34d:	00 00 00 
   1a350:	ba 80 00 00 00       	mov    $0x80,%edx
   1a355:	31 ff                	xor    %edi,%edi
   1a357:	29 ca                	sub    %ecx,%edx
   1a359:	83 fa 08             	cmp    $0x8,%edx
   1a35c:	0f 82 7e 00 00 00    	jb     1a3e0 <mbedtls_sha512_finish+0x190>
   1a362:	89 d1                	mov    %edx,%ecx
   1a364:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1a36b:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   1a372:	00 00 
   1a374:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1a378:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   1a37c:	48 29 c8             	sub    %rcx,%rax
   1a37f:	01 c2                	add    %eax,%edx
   1a381:	83 e2 f8             	and    $0xfffffff8,%edx
   1a384:	83 fa 08             	cmp    $0x8,%edx
   1a387:	72 12                	jb     1a39b <mbedtls_sha512_finish+0x14b>
   1a389:	83 e2 f8             	and    $0xfffffff8,%edx
   1a38c:	31 c0                	xor    %eax,%eax
   1a38e:	89 c6                	mov    %eax,%esi
   1a390:	83 c0 08             	add    $0x8,%eax
   1a393:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   1a397:	39 d0                	cmp    %edx,%eax
   1a399:	72 f3                	jb     1a38e <mbedtls_sha512_finish+0x13e>
   1a39b:	4c 89 e6             	mov    %r12,%rsi
   1a39e:	48 89 df             	mov    %rbx,%rdi
   1a3a1:	e8 ca f6 ff ff       	callq  19a70 <mbedtls_internal_sha512_process>
   1a3a6:	85 c0                	test   %eax,%eax
   1a3a8:	75 97                	jne    1a341 <mbedtls_sha512_finish+0xf1>
   1a3aa:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
   1a3af:	4c 89 e1             	mov    %r12,%rcx
   1a3b2:	31 c0                	xor    %eax,%eax
   1a3b4:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
   1a3bb:	00 
   1a3bc:	49 c7 44 24 68 00 00 	movq   $0x0,0x68(%r12)
   1a3c3:	00 00 
   1a3c5:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1a3c9:	48 29 f9             	sub    %rdi,%rcx
   1a3cc:	83 c1 70             	add    $0x70,%ecx
   1a3cf:	c1 e9 03             	shr    $0x3,%ecx
   1a3d2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1a3d5:	e9 db fe ff ff       	jmpq   1a2b5 <mbedtls_sha512_finish+0x65>
   1a3da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a3e0:	f6 c2 04             	test   $0x4,%dl
   1a3e3:	75 63                	jne    1a448 <mbedtls_sha512_finish+0x1f8>
   1a3e5:	85 d2                	test   %edx,%edx
   1a3e7:	74 b2                	je     1a39b <mbedtls_sha512_finish+0x14b>
   1a3e9:	c6 00 00             	movb   $0x0,(%rax)
   1a3ec:	f6 c2 02             	test   $0x2,%dl
   1a3ef:	74 aa                	je     1a39b <mbedtls_sha512_finish+0x14b>
   1a3f1:	31 c9                	xor    %ecx,%ecx
   1a3f3:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   1a3f8:	eb a1                	jmp    1a39b <mbedtls_sha512_finish+0x14b>
   1a3fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a400:	f6 c2 04             	test   $0x4,%dl
   1a403:	75 5b                	jne    1a460 <mbedtls_sha512_finish+0x210>
   1a405:	85 d2                	test   %edx,%edx
   1a407:	0f 84 a8 fe ff ff    	je     1a2b5 <mbedtls_sha512_finish+0x65>
   1a40d:	c6 00 00             	movb   $0x0,(%rax)
   1a410:	f6 c2 02             	test   $0x2,%dl
   1a413:	0f 84 9c fe ff ff    	je     1a2b5 <mbedtls_sha512_finish+0x65>
   1a419:	31 f6                	xor    %esi,%esi
   1a41b:	66 89 74 10 fe       	mov    %si,-0x2(%rax,%rdx,1)
   1a420:	e9 90 fe ff ff       	jmpq   1a2b5 <mbedtls_sha512_finish+0x65>
   1a425:	0f 1f 00             	nopl   (%rax)
   1a428:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   1a42c:	48 0f ca             	bswap  %rdx
   1a42f:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   1a433:	48 8b 53 48          	mov    0x48(%rbx),%rdx
   1a437:	5b                   	pop    %rbx
   1a438:	48 0f ca             	bswap  %rdx
   1a43b:	48 89 55 38          	mov    %rdx,0x38(%rbp)
   1a43f:	5d                   	pop    %rbp
   1a440:	41 5c                	pop    %r12
   1a442:	c3                   	retq   
   1a443:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a448:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1a44e:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   1a455:	00 
   1a456:	e9 40 ff ff ff       	jmpq   1a39b <mbedtls_sha512_finish+0x14b>
   1a45b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a460:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1a466:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   1a46d:	00 
   1a46e:	e9 42 fe ff ff       	jmpq   1a2b5 <mbedtls_sha512_finish+0x65>
   1a473:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a47a:	00 00 00 00 
   1a47e:	66 90                	xchg   %ax,%ax

000000000001a480 <mbedtls_sha512_common_self_test>:
   1a480:	41 57                	push   %r15
   1a482:	41 56                	push   %r14
   1a484:	41 55                	push   %r13
   1a486:	41 89 f5             	mov    %esi,%r13d
   1a489:	41 54                	push   %r12
   1a48b:	41 89 fc             	mov    %edi,%r12d
   1a48e:	bf 00 04 00 00       	mov    $0x400,%edi
   1a493:	55                   	push   %rbp
   1a494:	48 8d 2d a5 94 00 00 	lea    0x94a5(%rip),%rbp        # 23940 <sha384_test_sum>
   1a49b:	53                   	push   %rbx
   1a49c:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   1a4a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a4aa:	00 00 
   1a4ac:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   1a4b3:	00 
   1a4b4:	31 c0                	xor    %eax,%eax
   1a4b6:	85 f6                	test   %esi,%esi
   1a4b8:	48 8d 05 c1 93 00 00 	lea    0x93c1(%rip),%rax        # 23880 <sha512_test_sum>
   1a4bf:	be 01 00 00 00       	mov    $0x1,%esi
   1a4c4:	48 0f 44 e8          	cmove  %rax,%rbp
   1a4c8:	e8 03 9e fe ff       	callq  42d0 <calloc@plt>
   1a4cd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a4d2:	48 85 c0             	test   %rax,%rax
   1a4d5:	0f 84 19 03 00 00    	je     1a7f4 <mbedtls_sha512_common_self_test+0x374>
   1a4db:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   1a4e0:	31 c0                	xor    %eax,%eax
   1a4e2:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   1a4e7:	31 db                	xor    %ebx,%ebx
   1a4e9:	4c 89 f7             	mov    %r14,%rdi
   1a4ec:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1a4ef:	b8 04 00 00 00       	mov    $0x4,%eax
   1a4f4:	44 29 e8             	sub    %r13d,%eax
   1a4f7:	89 c1                	mov    %eax,%ecx
   1a4f9:	c1 e0 04             	shl    $0x4,%eax
   1a4fc:	c1 e1 07             	shl    $0x7,%ecx
   1a4ff:	48 89 04 24          	mov    %rax,(%rsp)
   1a503:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   1a507:	45 85 e4             	test   %r12d,%r12d
   1a50a:	0f 85 58 02 00 00    	jne    1a768 <mbedtls_sha512_common_self_test+0x2e8>
   1a510:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1a517:	00 00 
   1a519:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1a520:	00 00 
   1a522:	45 85 ed             	test   %r13d,%r13d
   1a525:	0f 85 55 01 00 00    	jne    1a680 <mbedtls_sha512_common_self_test+0x200>
   1a52b:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   1a532:	e6 09 6a 
   1a535:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   1a53c:	00 
   1a53d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a542:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   1a549:	ae 67 bb 
   1a54c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1a551:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   1a558:	f3 6e 3c 
   1a55b:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1a560:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   1a567:	f5 4f a5 
   1a56a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a56f:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   1a576:	52 0e 51 
   1a579:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1a57e:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   1a585:	68 05 9b 
   1a588:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1a58d:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   1a594:	d9 83 1f 
   1a597:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1a59c:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   1a5a3:	cd e0 5b 
   1a5a6:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1a5ab:	48 83 fb 02          	cmp    $0x2,%rbx
   1a5af:	0f 84 55 01 00 00    	je     1a70a <mbedtls_sha512_common_self_test+0x28a>
   1a5b5:	48 8d 05 44 94 00 00 	lea    0x9444(%rip),%rax        # 23a00 <sha_test_buflen>
   1a5bc:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   1a5c0:	48 85 d2             	test   %rdx,%rdx
   1a5c3:	74 1e                	je     1a5e3 <mbedtls_sha512_common_self_test+0x163>
   1a5c5:	48 6b f3 71          	imul   $0x71,%rbx,%rsi
   1a5c9:	48 8d 05 50 94 00 00 	lea    0x9450(%rip),%rax        # 23a20 <sha_test_buf>
   1a5d0:	4c 89 f7             	mov    %r14,%rdi
   1a5d3:	48 01 c6             	add    %rax,%rsi
   1a5d6:	e8 95 fa ff ff       	callq  1a070 <mbedtls_sha512_update.part.0>
   1a5db:	85 c0                	test   %eax,%eax
   1a5dd:	0f 85 73 01 00 00    	jne    1a756 <mbedtls_sha512_common_self_test+0x2d6>
   1a5e3:	4c 8d bc 24 00 01 00 	lea    0x100(%rsp),%r15
   1a5ea:	00 
   1a5eb:	4c 89 f7             	mov    %r14,%rdi
   1a5ee:	4c 89 fe             	mov    %r15,%rsi
   1a5f1:	e8 5a fc ff ff       	callq  1a250 <mbedtls_sha512_finish>
   1a5f6:	85 c0                	test   %eax,%eax
   1a5f8:	0f 85 58 01 00 00    	jne    1a756 <mbedtls_sha512_common_self_test+0x2d6>
   1a5fe:	48 8b 14 24          	mov    (%rsp),%rdx
   1a602:	48 89 ee             	mov    %rbp,%rsi
   1a605:	4c 89 ff             	mov    %r15,%rdi
   1a608:	e8 a3 9c fe ff       	callq  42b0 <memcmp@plt>
   1a60d:	85 c0                	test   %eax,%eax
   1a60f:	0f 85 cb 01 00 00    	jne    1a7e0 <mbedtls_sha512_common_self_test+0x360>
   1a615:	45 85 e4             	test   %r12d,%r12d
   1a618:	0f 85 72 01 00 00    	jne    1a790 <mbedtls_sha512_common_self_test+0x310>
   1a61e:	48 83 c3 01          	add    $0x1,%rbx
   1a622:	48 83 c5 40          	add    $0x40,%rbp
   1a626:	48 83 fb 03          	cmp    $0x3,%rbx
   1a62a:	0f 85 d7 fe ff ff    	jne    1a507 <mbedtls_sha512_common_self_test+0x87>
   1a630:	45 85 e4             	test   %r12d,%r12d
   1a633:	0f 85 6f 01 00 00    	jne    1a7a8 <mbedtls_sha512_common_self_test+0x328>
   1a639:	be d8 00 00 00       	mov    $0xd8,%esi
   1a63e:	4c 89 f7             	mov    %r14,%rdi
   1a641:	45 89 e5             	mov    %r12d,%r13d
   1a644:	e8 27 a6 ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   1a649:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a64e:	e8 9d 9b fe ff       	callq  41f0 <free@plt>
   1a653:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   1a65a:	00 
   1a65b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1a662:	00 00 
   1a664:	0f 85 aa 01 00 00    	jne    1a814 <mbedtls_sha512_common_self_test+0x394>
   1a66a:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   1a671:	44 89 e8             	mov    %r13d,%eax
   1a674:	5b                   	pop    %rbx
   1a675:	5d                   	pop    %rbp
   1a676:	41 5c                	pop    %r12
   1a678:	41 5d                	pop    %r13
   1a67a:	41 5e                	pop    %r14
   1a67c:	41 5f                	pop    %r15
   1a67e:	c3                   	retq   
   1a67f:	90                   	nop
   1a680:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   1a687:	9d bb cb 
   1a68a:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   1a691:	00 
   1a692:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a697:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   1a69e:	29 9a 62 
   1a6a1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1a6a6:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   1a6ad:	01 59 91 
   1a6b0:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1a6b5:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   1a6bc:	ec 2f 15 
   1a6bf:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a6c4:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   1a6cb:	26 33 67 
   1a6ce:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1a6d3:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   1a6da:	4a b4 8e 
   1a6dd:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1a6e2:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   1a6e9:	2e 0c db 
   1a6ec:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1a6f1:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   1a6f8:	48 b5 47 
   1a6fb:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1a700:	48 83 fb 02          	cmp    $0x2,%rbx
   1a704:	0f 85 ab fe ff ff    	jne    1a5b5 <mbedtls_sha512_common_self_test+0x135>
   1a70a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a70f:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   1a714:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1a719:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   1a720:	61 61 61 
   1a723:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1a728:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   1a72e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1a731:	eb 0f                	jmp    1a742 <mbedtls_sha512_common_self_test+0x2c2>
   1a733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a738:	41 83 ef 01          	sub    $0x1,%r15d
   1a73c:	0f 84 a8 00 00 00    	je     1a7ea <mbedtls_sha512_common_self_test+0x36a>
   1a742:	ba e8 03 00 00       	mov    $0x3e8,%edx
   1a747:	48 89 de             	mov    %rbx,%rsi
   1a74a:	4c 89 f7             	mov    %r14,%rdi
   1a74d:	e8 1e f9 ff ff       	callq  1a070 <mbedtls_sha512_update.part.0>
   1a752:	85 c0                	test   %eax,%eax
   1a754:	74 e2                	je     1a738 <mbedtls_sha512_common_self_test+0x2b8>
   1a756:	89 c2                	mov    %eax,%edx
   1a758:	45 85 e4             	test   %r12d,%r12d
   1a75b:	75 63                	jne    1a7c0 <mbedtls_sha512_common_self_test+0x340>
   1a75d:	41 89 d4             	mov    %edx,%r12d
   1a760:	e9 d4 fe ff ff       	jmpq   1a639 <mbedtls_sha512_common_self_test+0x1b9>
   1a765:	0f 1f 00             	nopl   (%rax)
   1a768:	8b 54 24 14          	mov    0x14(%rsp),%edx
   1a76c:	8d 4b 01             	lea    0x1(%rbx),%ecx
   1a76f:	48 8d 35 4e 8e 00 00 	lea    0x8e4e(%rip),%rsi        # 235c4 <sha1_test_buf+0xc4>
   1a776:	31 c0                	xor    %eax,%eax
   1a778:	bf 01 00 00 00       	mov    $0x1,%edi
   1a77d:	e8 ce 9b fe ff       	callq  4350 <__printf_chk@plt>
   1a782:	e9 89 fd ff ff       	jmpq   1a510 <mbedtls_sha512_common_self_test+0x90>
   1a787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a78e:	00 00 
   1a790:	48 8d 3d 6b 09 00 00 	lea    0x96b(%rip),%rdi        # 1b102 <_IO_stdin_used+0x102>
   1a797:	e8 74 9a fe ff       	callq  4210 <puts@plt>
   1a79c:	e9 7d fe ff ff       	jmpq   1a61e <mbedtls_sha512_common_self_test+0x19e>
   1a7a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a7a8:	bf 0a 00 00 00       	mov    $0xa,%edi
   1a7ad:	45 31 e4             	xor    %r12d,%r12d
   1a7b0:	e8 4b 9a fe ff       	callq  4200 <putchar@plt>
   1a7b5:	e9 7f fe ff ff       	jmpq   1a639 <mbedtls_sha512_common_self_test+0x1b9>
   1a7ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a7c0:	48 8d 3d f6 8d 00 00 	lea    0x8df6(%rip),%rdi        # 235bd <sha1_test_buf+0xbd>
   1a7c7:	89 14 24             	mov    %edx,(%rsp)
   1a7ca:	e8 41 9a fe ff       	callq  4210 <puts@plt>
   1a7cf:	8b 14 24             	mov    (%rsp),%edx
   1a7d2:	41 89 d4             	mov    %edx,%r12d
   1a7d5:	e9 5f fe ff ff       	jmpq   1a639 <mbedtls_sha512_common_self_test+0x1b9>
   1a7da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a7e0:	ba 01 00 00 00       	mov    $0x1,%edx
   1a7e5:	e9 6e ff ff ff       	jmpq   1a758 <mbedtls_sha512_common_self_test+0x2d8>
   1a7ea:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1a7ef:	e9 ef fd ff ff       	jmpq   1a5e3 <mbedtls_sha512_common_self_test+0x163>
   1a7f4:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1a7fa:	45 85 e4             	test   %r12d,%r12d
   1a7fd:	0f 84 50 fe ff ff    	je     1a653 <mbedtls_sha512_common_self_test+0x1d3>
   1a803:	48 8d 3d a1 8d 00 00 	lea    0x8da1(%rip),%rdi        # 235ab <sha1_test_buf+0xab>
   1a80a:	e8 01 9a fe ff       	callq  4210 <puts@plt>
   1a80f:	e9 3f fe ff ff       	jmpq   1a653 <mbedtls_sha512_common_self_test+0x1d3>
   1a814:	e8 57 9a fe ff       	callq  4270 <__stack_chk_fail@plt>
   1a819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001a820 <mbedtls_sha512>:
   1a820:	f3 0f 1e fa          	endbr64 
   1a824:	41 55                	push   %r13
   1a826:	41 54                	push   %r12
   1a828:	55                   	push   %rbp
   1a829:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   1a830:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a837:	00 00 
   1a839:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   1a840:	00 
   1a841:	31 c0                	xor    %eax,%eax
   1a843:	83 f9 01             	cmp    $0x1,%ecx
   1a846:	0f 87 94 01 00 00    	ja     1a9e0 <mbedtls_sha512+0x1c0>
   1a84c:	49 89 f0             	mov    %rsi,%r8
   1a84f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1a854:	49 89 f9             	mov    %rdi,%r9
   1a857:	49 89 d5             	mov    %rdx,%r13
   1a85a:	48 89 f7             	mov    %rsi,%rdi
   1a85d:	89 ca                	mov    %ecx,%edx
   1a85f:	b9 19 00 00 00       	mov    $0x19,%ecx
   1a864:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1a86b:	00 
   1a86c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1a86f:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1a876:	00 00 
   1a878:	85 d2                	test   %edx,%edx
   1a87a:	0f 84 e0 00 00 00    	je     1a960 <mbedtls_sha512+0x140>
   1a880:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   1a887:	9d bb cb 
   1a88a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1a88f:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   1a896:	29 9a 62 
   1a899:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a89e:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   1a8a5:	01 59 91 
   1a8a8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1a8ad:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   1a8b4:	ec 2f 15 
   1a8b7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a8bc:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   1a8c3:	26 33 67 
   1a8c6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a8cb:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   1a8d2:	4a b4 8e 
   1a8d5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1a8da:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   1a8e1:	2e 0c db 
   1a8e4:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1a8e9:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   1a8f0:	48 b5 47 
   1a8f3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a8f8:	89 94 24 d0 00 00 00 	mov    %edx,0xd0(%rsp)
   1a8ff:	48 89 e5             	mov    %rsp,%rbp
   1a902:	4d 85 c0             	test   %r8,%r8
   1a905:	74 15                	je     1a91c <mbedtls_sha512+0xfc>
   1a907:	4c 89 c2             	mov    %r8,%rdx
   1a90a:	4c 89 ce             	mov    %r9,%rsi
   1a90d:	48 89 ef             	mov    %rbp,%rdi
   1a910:	e8 5b f7 ff ff       	callq  1a070 <mbedtls_sha512_update.part.0>
   1a915:	41 89 c4             	mov    %eax,%r12d
   1a918:	85 c0                	test   %eax,%eax
   1a91a:	75 0e                	jne    1a92a <mbedtls_sha512+0x10a>
   1a91c:	4c 89 ee             	mov    %r13,%rsi
   1a91f:	48 89 ef             	mov    %rbp,%rdi
   1a922:	e8 29 f9 ff ff       	callq  1a250 <mbedtls_sha512_finish>
   1a927:	41 89 c4             	mov    %eax,%r12d
   1a92a:	be d8 00 00 00       	mov    $0xd8,%esi
   1a92f:	48 89 ef             	mov    %rbp,%rdi
   1a932:	e8 39 a3 ff ff       	callq  14c70 <mbedtls_platform_zeroize>
   1a937:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   1a93e:	00 
   1a93f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1a946:	00 00 
   1a948:	0f 85 9d 00 00 00    	jne    1a9eb <mbedtls_sha512+0x1cb>
   1a94e:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   1a955:	44 89 e0             	mov    %r12d,%eax
   1a958:	5d                   	pop    %rbp
   1a959:	41 5c                	pop    %r12
   1a95b:	41 5d                	pop    %r13
   1a95d:	c3                   	retq   
   1a95e:	66 90                	xchg   %ax,%ax
   1a960:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   1a967:	e6 09 6a 
   1a96a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1a96f:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   1a976:	ae 67 bb 
   1a979:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a97e:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   1a985:	f3 6e 3c 
   1a988:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1a98d:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   1a994:	f5 4f a5 
   1a997:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a99c:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   1a9a3:	52 0e 51 
   1a9a6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a9ab:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   1a9b2:	68 05 9b 
   1a9b5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1a9ba:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   1a9c1:	d9 83 1f 
   1a9c4:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1a9c9:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   1a9d0:	cd e0 5b 
   1a9d3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a9d8:	e9 1b ff ff ff       	jmpq   1a8f8 <mbedtls_sha512+0xd8>
   1a9dd:	0f 1f 00             	nopl   (%rax)
   1a9e0:	41 bc 8b ff ff ff    	mov    $0xffffff8b,%r12d
   1a9e6:	e9 4c ff ff ff       	jmpq   1a937 <mbedtls_sha512+0x117>
   1a9eb:	e8 80 98 fe ff       	callq  4270 <__stack_chk_fail@plt>

000000000001a9f0 <mbedtls_sha512_self_test>:
   1a9f0:	f3 0f 1e fa          	endbr64 
   1a9f4:	31 f6                	xor    %esi,%esi
   1a9f6:	e9 85 fa ff ff       	jmpq   1a480 <mbedtls_sha512_common_self_test>
   1a9fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001aa00 <mbedtls_sha384_self_test>:
   1aa00:	f3 0f 1e fa          	endbr64 
   1aa04:	be 01 00 00 00       	mov    $0x1,%esi
   1aa09:	e9 72 fa ff ff       	jmpq   1a480 <mbedtls_sha512_common_self_test>
   1aa0e:	66 90                	xchg   %ax,%ax

000000000001aa10 <__udivti3>:
   1aa10:	f3 0f 1e fa          	endbr64 
   1aa14:	49 89 d0             	mov    %rdx,%r8
   1aa17:	48 89 ca             	mov    %rcx,%rdx
   1aa1a:	48 85 c9             	test   %rcx,%rcx
   1aa1d:	75 11                	jne    1aa30 <__udivti3+0x20>
   1aa1f:	49 39 f0             	cmp    %rsi,%r8
   1aa22:	76 44                	jbe    1aa68 <__udivti3+0x58>
   1aa24:	48 89 f8             	mov    %rdi,%rax
   1aa27:	48 89 f2             	mov    %rsi,%rdx
   1aa2a:	49 f7 f0             	div    %r8
   1aa2d:	31 d2                	xor    %edx,%edx
   1aa2f:	c3                   	retq   
   1aa30:	48 39 f1             	cmp    %rsi,%rcx
   1aa33:	76 0b                	jbe    1aa40 <__udivti3+0x30>
   1aa35:	31 d2                	xor    %edx,%edx
   1aa37:	31 c0                	xor    %eax,%eax
   1aa39:	c3                   	retq   
   1aa3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1aa40:	48 0f bd c1          	bsr    %rcx,%rax
   1aa44:	48 83 f0 3f          	xor    $0x3f,%rax
   1aa48:	41 89 c2             	mov    %eax,%r10d
   1aa4b:	85 c0                	test   %eax,%eax
   1aa4d:	75 49                	jne    1aa98 <__udivti3+0x88>
   1aa4f:	48 39 f1             	cmp    %rsi,%rcx
   1aa52:	72 09                	jb     1aa5d <__udivti3+0x4d>
   1aa54:	31 d2                	xor    %edx,%edx
   1aa56:	31 c0                	xor    %eax,%eax
   1aa58:	49 39 f8             	cmp    %rdi,%r8
   1aa5b:	77 d2                	ja     1aa2f <__udivti3+0x1f>
   1aa5d:	31 d2                	xor    %edx,%edx
   1aa5f:	b8 01 00 00 00       	mov    $0x1,%eax
   1aa64:	c3                   	retq   
   1aa65:	0f 1f 00             	nopl   (%rax)
   1aa68:	4c 89 c1             	mov    %r8,%rcx
   1aa6b:	4d 85 c0             	test   %r8,%r8
   1aa6e:	75 0d                	jne    1aa7d <__udivti3+0x6d>
   1aa70:	b8 01 00 00 00       	mov    $0x1,%eax
   1aa75:	31 d2                	xor    %edx,%edx
   1aa77:	49 f7 f0             	div    %r8
   1aa7a:	48 89 c1             	mov    %rax,%rcx
   1aa7d:	31 d2                	xor    %edx,%edx
   1aa7f:	48 89 f0             	mov    %rsi,%rax
   1aa82:	48 f7 f1             	div    %rcx
   1aa85:	48 89 c6             	mov    %rax,%rsi
   1aa88:	48 89 f8             	mov    %rdi,%rax
   1aa8b:	48 f7 f1             	div    %rcx
   1aa8e:	48 89 f2             	mov    %rsi,%rdx
   1aa91:	c3                   	retq   
   1aa92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1aa98:	89 c1                	mov    %eax,%ecx
   1aa9a:	53                   	push   %rbx
   1aa9b:	bb 40 00 00 00       	mov    $0x40,%ebx
   1aaa0:	4d 89 c3             	mov    %r8,%r11
   1aaa3:	48 d3 e2             	shl    %cl,%rdx
   1aaa6:	48 63 c8             	movslq %eax,%rcx
   1aaa9:	49 89 f1             	mov    %rsi,%r9
   1aaac:	48 29 cb             	sub    %rcx,%rbx
   1aaaf:	89 d9                	mov    %ebx,%ecx
   1aab1:	49 d3 eb             	shr    %cl,%r11
   1aab4:	89 c1                	mov    %eax,%ecx
   1aab6:	49 d3 e0             	shl    %cl,%r8
   1aab9:	89 d9                	mov    %ebx,%ecx
   1aabb:	49 09 d3             	or     %rdx,%r11
   1aabe:	49 d3 e9             	shr    %cl,%r9
   1aac1:	89 c1                	mov    %eax,%ecx
   1aac3:	48 89 f8             	mov    %rdi,%rax
   1aac6:	48 d3 e6             	shl    %cl,%rsi
   1aac9:	89 d9                	mov    %ebx,%ecx
   1aacb:	4c 89 ca             	mov    %r9,%rdx
   1aace:	48 d3 e8             	shr    %cl,%rax
   1aad1:	48 09 f0             	or     %rsi,%rax
   1aad4:	49 f7 f3             	div    %r11
   1aad7:	49 89 d1             	mov    %rdx,%r9
   1aada:	48 89 c6             	mov    %rax,%rsi
   1aadd:	49 f7 e0             	mul    %r8
   1aae0:	49 39 d1             	cmp    %rdx,%r9
   1aae3:	72 1b                	jb     1ab00 <__udivti3+0xf0>
   1aae5:	44 89 d1             	mov    %r10d,%ecx
   1aae8:	48 d3 e7             	shl    %cl,%rdi
   1aaeb:	48 39 c7             	cmp    %rax,%rdi
   1aaee:	73 05                	jae    1aaf5 <__udivti3+0xe5>
   1aaf0:	49 39 d1             	cmp    %rdx,%r9
   1aaf3:	74 0b                	je     1ab00 <__udivti3+0xf0>
   1aaf5:	48 89 f0             	mov    %rsi,%rax
   1aaf8:	31 d2                	xor    %edx,%edx
   1aafa:	5b                   	pop    %rbx
   1aafb:	c3                   	retq   
   1aafc:	0f 1f 40 00          	nopl   0x0(%rax)
   1ab00:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   1ab04:	31 d2                	xor    %edx,%edx
   1ab06:	5b                   	pop    %rbx
   1ab07:	c3                   	retq   
   1ab08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ab0f:	00 

000000000001ab10 <__libc_csu_init>:
   1ab10:	f3 0f 1e fa          	endbr64 
   1ab14:	41 57                	push   %r15
   1ab16:	4c 8d 3d b3 ec 00 00 	lea    0xecb3(%rip),%r15        # 297d0 <__frame_dummy_init_array_entry>
   1ab1d:	41 56                	push   %r14
   1ab1f:	49 89 d6             	mov    %rdx,%r14
   1ab22:	41 55                	push   %r13
   1ab24:	49 89 f5             	mov    %rsi,%r13
   1ab27:	41 54                	push   %r12
   1ab29:	41 89 fc             	mov    %edi,%r12d
   1ab2c:	55                   	push   %rbp
   1ab2d:	48 8d 2d a4 ec 00 00 	lea    0xeca4(%rip),%rbp        # 297d8 <__do_global_dtors_aux_fini_array_entry>
   1ab34:	53                   	push   %rbx
   1ab35:	4c 29 fd             	sub    %r15,%rbp
   1ab38:	48 83 ec 08          	sub    $0x8,%rsp
   1ab3c:	e8 bf 94 fe ff       	callq  4000 <_init>
   1ab41:	48 c1 fd 03          	sar    $0x3,%rbp
   1ab45:	74 1f                	je     1ab66 <__libc_csu_init+0x56>
   1ab47:	31 db                	xor    %ebx,%ebx
   1ab49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ab50:	4c 89 f2             	mov    %r14,%rdx
   1ab53:	4c 89 ee             	mov    %r13,%rsi
   1ab56:	44 89 e7             	mov    %r12d,%edi
   1ab59:	41 ff 14 df          	callq  *(%r15,%rbx,8)
   1ab5d:	48 83 c3 01          	add    $0x1,%rbx
   1ab61:	48 39 dd             	cmp    %rbx,%rbp
   1ab64:	75 ea                	jne    1ab50 <__libc_csu_init+0x40>
   1ab66:	48 83 c4 08          	add    $0x8,%rsp
   1ab6a:	5b                   	pop    %rbx
   1ab6b:	5d                   	pop    %rbp
   1ab6c:	41 5c                	pop    %r12
   1ab6e:	41 5d                	pop    %r13
   1ab70:	41 5e                	pop    %r14
   1ab72:	41 5f                	pop    %r15
   1ab74:	c3                   	retq   
   1ab75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ab7c:	00 00 00 00 

000000000001ab80 <__libc_csu_fini>:
   1ab80:	f3 0f 1e fa          	endbr64 
   1ab84:	c3                   	retq   

Disassembly of section .fini:

000000000001ab88 <_fini>:
   1ab88:	e9 43 af 01 00       	jmpq   35ad0 <.instr.bb_1ab88>
   1ab8d:	83 ec 08             	sub    $0x8,%esp
   1ab90:	48 83 c4 08          	add    $0x8,%rsp
   1ab94:	c3                   	retq   

Disassembly of section .instr.text:

000000000002f000 <instrument_entrypoint>:
   2f000:	57                   	push   %rdi
   2f001:	56                   	push   %rsi
   2f002:	52                   	push   %rdx
   2f003:	51                   	push   %rcx
   2f004:	41 50                	push   %r8
   2f006:	41 51                	push   %r9
   2f008:	41 52                	push   %r10
   2f00a:	41 53                	push   %r11
   2f00c:	e8 51 00 00 00       	callq  2f062 <register_management_object>
   2f011:	e8 45 02 00 00       	callq  2f25b <allocate_data_block_masks>
   2f016:	41 5b                	pop    %r11
   2f018:	41 5a                	pop    %r10
   2f01a:	41 59                	pop    %r9
   2f01c:	41 58                	pop    %r8
   2f01e:	59                   	pop    %rcx
   2f01f:	5a                   	pop    %rdx
   2f020:	5e                   	pop    %rsi
   2f021:	5f                   	pop    %rdi

000000000002f022 <instrument_entrypoint_main_call>:
   2f022:	ff 15 b0 ef ff ff    	callq  *-0x1050(%rip)        # 2dfd8 <__libc_start_main@GLIBC_2.2.5>
   2f028:	00 00                	add    %al,(%rax)
	...

000000000002f02c <library_init>:
   2f02c:	41 57                	push   %r15
   2f02e:	41 56                	push   %r14
   2f030:	41 53                	push   %r11
   2f032:	41 52                	push   %r10
   2f034:	41 51                	push   %r9
   2f036:	41 50                	push   %r8
   2f038:	56                   	push   %rsi
   2f039:	57                   	push   %rdi
   2f03a:	52                   	push   %rdx
   2f03b:	51                   	push   %rcx
   2f03c:	50                   	push   %rax
   2f03d:	e8 20 00 00 00       	callq  2f062 <register_management_object>
   2f042:	e8 14 02 00 00       	callq  2f25b <allocate_data_block_masks>
   2f047:	58                   	pop    %rax
   2f048:	59                   	pop    %rcx
   2f049:	5a                   	pop    %rdx
   2f04a:	5f                   	pop    %rdi
   2f04b:	5e                   	pop    %rsi
   2f04c:	41 58                	pop    %r8
   2f04e:	41 59                	pop    %r9
   2f050:	41 5a                	pop    %r10
   2f052:	41 5b                	pop    %r11
   2f054:	41 5e                	pop    %r14
   2f056:	41 5f                	pop    %r15

000000000002f058 <library_init.constructor_jump>:
   2f058:	c3                   	retq   
   2f059:	f4                   	hlt    
   2f05a:	f4                   	hlt    
   2f05b:	f4                   	hlt    
   2f05c:	f4                   	hlt    
   2f05d:	00 00                	add    %al,(%rax)
   2f05f:	00 00                	add    %al,(%rax)
	...

000000000002f062 <register_management_object>:
   2f062:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   2f069:	b8 09 00 00 00       	mov    $0x9,%eax
   2f06e:	48 bf 00 00 00 00 00 	movabs $0x700000000000,%rdi
   2f075:	70 00 00 
   2f078:	be 00 10 00 00       	mov    $0x1000,%esi
   2f07d:	ba 03 00 00 00       	mov    $0x3,%edx
   2f082:	41 ba 22 00 10 00    	mov    $0x100022,%r10d
   2f088:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   2f08f:	45 31 c9             	xor    %r9d,%r9d
   2f092:	0f 05                	syscall 
   2f094:	48 85 c0             	test   %rax,%rax
   2f097:	79 0f                	jns    2f0a8 <register_management_object.init>
   2f099:	48 83 f8 ef          	cmp    $0xffffffffffffffef,%rax
   2f09d:	0f 84 cf 00 00 00    	je     2f172 <register_management_object.register_library>
   2f0a3:	e8 09 07 00 00       	callq  2f7b1 <instrument_error>

000000000002f0a8 <register_management_object.init>:
   2f0a8:	48 b8 00 00 00 00 00 	movabs $0x700000000000,%rax
   2f0af:	70 00 00 
   2f0b2:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx
   2f0b9:	31 ff                	xor    %edi,%edi

000000000002f0bb <register_management_object.clear_loop>:
   2f0bb:	48 89 38             	mov    %rdi,(%rax)
   2f0be:	48 83 c0 08          	add    $0x8,%rax
   2f0c2:	48 39 d0             	cmp    %rdx,%rax
   2f0c5:	75 f4                	jne    2f0bb <register_management_object.clear_loop>
   2f0c7:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2f0ce:	70 00 00 
   2f0d1:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
   2f0d8:	b8 20 00 00 00       	mov    $0x20,%eax

000000000002f0dd <register_management_object.rng_loop>:
   2f0dd:	48 0f c7 f7          	rdrand %rdi
   2f0e1:	73 fa                	jae    2f0dd <register_management_object.rng_loop>
   2f0e3:	48 c1 e7 03          	shl    $0x3,%rdi
   2f0e7:	48 89 7c c4 f8       	mov    %rdi,-0x8(%rsp,%rax,8)
   2f0ec:	48 ff c8             	dec    %rax
   2f0ef:	75 ec                	jne    2f0dd <register_management_object.rng_loop>
   2f0f1:	c5 fa 6f 04 24       	vmovdqu (%rsp),%xmm0
   2f0f6:	c5 fa 6f 4c 24 10    	vmovdqu 0x10(%rsp),%xmm1
   2f0fc:	c5 fa 6f 54 24 20    	vmovdqu 0x20(%rsp),%xmm2
   2f102:	c5 fa 6f 5c 24 30    	vmovdqu 0x30(%rsp),%xmm3
   2f108:	c5 fa 6f 64 24 40    	vmovdqu 0x40(%rsp),%xmm4
   2f10e:	c5 fa 6f 6c 24 50    	vmovdqu 0x50(%rsp),%xmm5
   2f114:	c5 fa 6f 74 24 60    	vmovdqu 0x60(%rsp),%xmm6
   2f11a:	c5 fa 6f 7c 24 70    	vmovdqu 0x70(%rsp),%xmm7
   2f120:	c5 7a 6f 84 24 80 00 	vmovdqu 0x80(%rsp),%xmm8
   2f127:	00 00 
   2f129:	c5 7a 6f 8c 24 90 00 	vmovdqu 0x90(%rsp),%xmm9
   2f130:	00 00 
   2f132:	c5 7a 6f 94 24 a0 00 	vmovdqu 0xa0(%rsp),%xmm10
   2f139:	00 00 
   2f13b:	c5 7a 6f 9c 24 b0 00 	vmovdqu 0xb0(%rsp),%xmm11
   2f142:	00 00 
   2f144:	c5 7a 6f a4 24 c0 00 	vmovdqu 0xc0(%rsp),%xmm12
   2f14b:	00 00 
   2f14d:	c5 7a 6f ac 24 d0 00 	vmovdqu 0xd0(%rsp),%xmm13
   2f154:	00 00 
   2f156:	c5 7a 6f b4 24 e0 00 	vmovdqu 0xe0(%rsp),%xmm14
   2f15d:	00 00 
   2f15f:	c5 7a 6f bc 24 f0 00 	vmovdqu 0xf0(%rsp),%xmm15
   2f166:	00 00 
   2f168:	e8 45 00 00 00       	callq  2f1b2 <set_up_signal_handler>
   2f16d:	e8 92 00 00 00       	callq  2f204 <allocate_stack_mask>

000000000002f172 <register_management_object.register_library>:
   2f172:	48 b8 00 00 00 00 00 	movabs $0x700000000000,%rax
   2f179:	70 00 00 
   2f17c:	31 c9                	xor    %ecx,%ecx

000000000002f17e <register_management_object.next_table_entry>:
   2f17e:	48 83 3c c8 00       	cmpq   $0x0,(%rax,%rcx,8)
   2f183:	74 05                	je     2f18a <register_management_object.store_hash_table>
   2f185:	48 ff c1             	inc    %rcx
   2f188:	eb f4                	jmp    2f17e <register_management_object.next_table_entry>

000000000002f18a <register_management_object.store_hash_table>:
   2f18a:	48 8d 15 ef 01 00 00 	lea    0x1ef(%rip),%rdx        # 2f380 <instrument_signal_handler_hash_table>
   2f191:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
   2f195:	48 b8 80 00 00 00 00 	movabs $0x700000000080,%rax
   2f19c:	70 00 00 
   2f19f:	48 8d 15 5a fe ff ff 	lea    -0x1a6(%rip),%rdx        # 2f000 <instrument_entrypoint>
   2f1a6:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
   2f1aa:	48 81 c4 00 01 00 00 	add    $0x100,%rsp
   2f1b1:	c3                   	retq   

000000000002f1b2 <set_up_signal_handler>:
   2f1b2:	48 83 ec 28          	sub    $0x28,%rsp
   2f1b6:	48 8d 05 43 01 00 00 	lea    0x143(%rip),%rax        # 2f300 <instrument_signal_handler>
   2f1bd:	48 89 04 24          	mov    %rax,(%rsp)
   2f1c1:	b8 04 00 00 04       	mov    $0x4000004,%eax
   2f1c6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f1cb:	48 8d 05 2e 02 00 00 	lea    0x22e(%rip),%rax        # 2f400 <instrument_signal_restorer>
   2f1d2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2f1d7:	31 c0                	xor    %eax,%eax
   2f1d9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f1de:	b8 0d 00 00 00       	mov    $0xd,%eax
   2f1e3:	bf 05 00 00 00       	mov    $0x5,%edi
   2f1e8:	48 89 e6             	mov    %rsp,%rsi
   2f1eb:	31 d2                	xor    %edx,%edx
   2f1ed:	41 ba 08 00 00 00    	mov    $0x8,%r10d
   2f1f3:	0f 05                	syscall 
   2f1f5:	48 85 c0             	test   %rax,%rax
   2f1f8:	79 05                	jns    2f1ff <set_up_signal_handler.done>
   2f1fa:	e8 b2 05 00 00       	callq  2f7b1 <instrument_error>

000000000002f1ff <set_up_signal_handler.done>:
   2f1ff:	48 83 c4 28          	add    $0x28,%rsp
   2f203:	c3                   	retq   

000000000002f204 <allocate_stack_mask>:
   2f204:	48 83 ec 10          	sub    $0x10,%rsp
   2f208:	b8 61 00 00 00       	mov    $0x61,%eax
   2f20d:	bf 03 00 00 00       	mov    $0x3,%edi
   2f212:	48 89 e6             	mov    %rsp,%rsi
   2f215:	0f 05                	syscall 
   2f217:	48 85 c0             	test   %rax,%rax
   2f21a:	79 05                	jns    2f221 <allocate_stack_mask.allocate_stack_mask_buffer>
   2f21c:	e8 90 05 00 00       	callq  2f7b1 <instrument_error>

000000000002f221 <allocate_stack_mask.allocate_stack_mask_buffer>:
   2f221:	48 89 e7             	mov    %rsp,%rdi
   2f224:	48 8b 34 24          	mov    (%rsp),%rsi
   2f228:	48 29 f7             	sub    %rsi,%rdi
   2f22b:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
   2f232:	48 81 c6 00 20 00 00 	add    $0x2000,%rsi
   2f239:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   2f240:	56                   	push   %rsi
   2f241:	e8 f9 04 00 00       	callq  2f73f <allocate_mask_buffer>
   2f246:	5e                   	pop    %rsi
   2f247:	48 89 c7             	mov    %rax,%rdi
   2f24a:	48 c1 ee 03          	shr    $0x3,%rsi
   2f24e:	48 89 f1             	mov    %rsi,%rcx
   2f251:	31 c0                	xor    %eax,%eax
   2f253:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   2f256:	48 83 c4 10          	add    $0x10,%rsp
   2f25a:	c3                   	retq   

000000000002f25b <allocate_data_block_masks>:
   2f25b:	41 57                	push   %r15
   2f25d:	41 56                	push   %r14
   2f25f:	4c 8d 3d 9a fd ff ff 	lea    -0x266(%rip),%r15        # 2f000 <instrument_entrypoint>
   2f266:	4c 8b 35 7e 00 00 00 	mov    0x7e(%rip),%r14        # 2f2eb <segments_pointer>
   2f26d:	4d 01 fe             	add    %r15,%r14

000000000002f270 <allocate_data_block_masks.next_segment>:
   2f270:	49 8b 3e             	mov    (%r14),%rdi
   2f273:	48 85 ff             	test   %rdi,%rdi
   2f276:	74 12                	je     2f28a <allocate_data_block_masks.segments_done>
   2f278:	4c 01 ff             	add    %r15,%rdi
   2f27b:	41 8b 76 08          	mov    0x8(%r14),%esi
   2f27f:	e8 bb 04 00 00       	callq  2f73f <allocate_mask_buffer>
   2f284:	49 83 c6 10          	add    $0x10,%r14
   2f288:	eb e6                	jmp    2f270 <allocate_data_block_masks.next_segment>

000000000002f28a <allocate_data_block_masks.segments_done>:
   2f28a:	4c 8b 35 62 00 00 00 	mov    0x62(%rip),%r14        # 2f2f3 <private_data_blocks_pointer>
   2f291:	4d 01 fe             	add    %r15,%r14

000000000002f294 <allocate_data_block_masks.next_block>:
   2f294:	49 8b 3e             	mov    (%r14),%rdi
   2f297:	48 85 ff             	test   %rdi,%rdi
   2f29a:	74 4a                	je     2f2e6 <allocate_data_block_masks.end>
   2f29c:	4c 01 ff             	add    %r15,%rdi
   2f29f:	48 81 c7 00 10 00 c0 	add    $0xffffffffc0001000,%rdi
   2f2a6:	41 8a 56 0c          	mov    0xc(%r14),%dl
   2f2aa:	84 d2                	test   %dl,%dl
   2f2ac:	75 0a                	jne    2f2b8 <allocate_data_block_masks.randomize_mask_buffer>
   2f2ae:	41 8b 4e 08          	mov    0x8(%r14),%ecx
   2f2b2:	31 c0                	xor    %eax,%eax
   2f2b4:	f3 aa                	rep stos %al,%es:(%rdi)
   2f2b6:	eb 2e                	jmp    2f2e6 <allocate_data_block_masks.end>

000000000002f2b8 <allocate_data_block_masks.randomize_mask_buffer>:
   2f2b8:	41 8b 76 08          	mov    0x8(%r14),%esi
   2f2bc:	e8 cf 04 00 00       	callq  2f790 <get_random_bytes>
   2f2c1:	49 8b 3e             	mov    (%r14),%rdi
   2f2c4:	4c 01 ff             	add    %r15,%rdi
   2f2c7:	41 8b 76 08          	mov    0x8(%r14),%esi
   2f2cb:	48 01 fe             	add    %rdi,%rsi

000000000002f2ce <allocate_data_block_masks.mask_loop>:
   2f2ce:	48 39 f7             	cmp    %rsi,%rdi
   2f2d1:	74 0d                	je     2f2e0 <allocate_data_block_masks.mask_loop_end>
   2f2d3:	8a 87 00 10 00 c0    	mov    -0x3ffff000(%rdi),%al
   2f2d9:	30 07                	xor    %al,(%rdi)
   2f2db:	48 ff c7             	inc    %rdi
   2f2de:	eb ee                	jmp    2f2ce <allocate_data_block_masks.mask_loop>

000000000002f2e0 <allocate_data_block_masks.mask_loop_end>:
   2f2e0:	49 83 c6 10          	add    $0x10,%r14
   2f2e4:	eb ae                	jmp    2f294 <allocate_data_block_masks.next_block>

000000000002f2e6 <allocate_data_block_masks.end>:
   2f2e6:	41 5e                	pop    %r14
   2f2e8:	41 5f                	pop    %r15
   2f2ea:	c3                   	retq   

000000000002f2eb <segments_pointer>:
   2f2eb:	50                   	push   %rax
   2f2ec:	6c                   	insb   (%dx),%es:(%rdi)
   2f2ed:	00 00                	add    %al,(%rax)
   2f2ef:	00 00                	add    %al,(%rax)
	...

000000000002f2f3 <private_data_blocks_pointer>:
   2f2f3:	80 6c 00 00 00       	subb   $0x0,0x0(%rax,%rax,1)
   2f2f8:	00 00                	add    %al,(%rax)
   2f2fa:	00 90 90 90 90 90    	add    %dl,-0x6f6f6f70(%rax)

000000000002f300 <instrument_signal_handler>:
   2f300:	48 8b 82 a8 00 00 00 	mov    0xa8(%rdx),%rax
   2f307:	49 ba 00 00 00 00 00 	movabs $0x700000000000,%r10
   2f30e:	70 00 00 
   2f311:	41 bb 10 00 00 00    	mov    $0x10,%r11d

000000000002f317 <instrument_signal_handler.loop_hash_table>:
   2f317:	4b 8b 4c da f8       	mov    -0x8(%r10,%r11,8),%rcx
   2f31c:	48 85 c9             	test   %rcx,%rcx
   2f31f:	74 2c                	je     2f34d <instrument_signal_handler.list_end>
   2f321:	4f 8b 4c da 78       	mov    0x78(%r10,%r11,8),%r9
   2f326:	49 89 c4             	mov    %rax,%r12
   2f329:	4d 29 cc             	sub    %r9,%r12
   2f32c:	4d 89 e0             	mov    %r12,%r8
   2f32f:	41 83 e0 78          	and    $0x78,%r8d
   2f333:	4a 8b 0c 01          	mov    (%rcx,%r8,1),%rcx
   2f337:	4c 01 c9             	add    %r9,%rcx

000000000002f33a <instrument_signal_handler.loop>:
   2f33a:	48 8b 31             	mov    (%rcx),%rsi
   2f33d:	48 85 f6             	test   %rsi,%rsi
   2f340:	74 0b                	je     2f34d <instrument_signal_handler.list_end>
   2f342:	49 39 f4             	cmp    %rsi,%r12
   2f345:	74 10                	je     2f357 <instrument_signal_handler.found>
   2f347:	48 83 c1 10          	add    $0x10,%rcx
   2f34b:	eb ed                	jmp    2f33a <instrument_signal_handler.loop>

000000000002f34d <instrument_signal_handler.list_end>:
   2f34d:	49 ff cb             	dec    %r11
   2f350:	75 c5                	jne    2f317 <instrument_signal_handler.loop_hash_table>
   2f352:	e8 5a 04 00 00       	callq  2f7b1 <instrument_error>

000000000002f357 <instrument_signal_handler.found>:
   2f357:	4c 03 49 08          	add    0x8(%rcx),%r9
   2f35b:	4c 89 8a a8 00 00 00 	mov    %r9,0xa8(%rdx)
   2f362:	c3                   	retq   
   2f363:	90                   	nop
   2f364:	90                   	nop
   2f365:	90                   	nop
   2f366:	90                   	nop
   2f367:	90                   	nop
   2f368:	90                   	nop
   2f369:	90                   	nop
   2f36a:	90                   	nop
   2f36b:	90                   	nop
   2f36c:	90                   	nop
   2f36d:	90                   	nop
   2f36e:	90                   	nop
   2f36f:	90                   	nop
   2f370:	90                   	nop
   2f371:	90                   	nop
   2f372:	90                   	nop
   2f373:	90                   	nop
   2f374:	90                   	nop
   2f375:	90                   	nop
   2f376:	90                   	nop
   2f377:	90                   	nop
   2f378:	90                   	nop
   2f379:	90                   	nop
   2f37a:	90                   	nop
   2f37b:	90                   	nop
   2f37c:	90                   	nop
   2f37d:	90                   	nop
   2f37e:	90                   	nop
   2f37f:	90                   	nop

000000000002f380 <instrument_signal_handler_hash_table>:
   2f380:	00 6b 00             	add    %ch,0x0(%rbx)
   2f383:	00 00                	add    %al,(%rax)
   2f385:	00 00                	add    %al,(%rax)
   2f387:	00 10                	add    %dl,(%rax)
   2f389:	6b 00 00             	imul   $0x0,(%rax),%eax
   2f38c:	00 00                	add    %al,(%rax)
   2f38e:	00 00                	add    %al,(%rax)
   2f390:	20 6b 00             	and    %ch,0x0(%rbx)
   2f393:	00 00                	add    %al,(%rax)
   2f395:	00 00                	add    %al,(%rax)
   2f397:	00 30                	add    %dh,(%rax)
   2f399:	6b 00 00             	imul   $0x0,(%rax),%eax
   2f39c:	00 00                	add    %al,(%rax)
   2f39e:	00 00                	add    %al,(%rax)
   2f3a0:	60                   	(bad)  
   2f3a1:	6b 00 00             	imul   $0x0,(%rax),%eax
   2f3a4:	00 00                	add    %al,(%rax)
   2f3a6:	00 00                	add    %al,(%rax)
   2f3a8:	70 6b                	jo     2f415 <handle_system_call+0x9>
   2f3aa:	00 00                	add    %al,(%rax)
   2f3ac:	00 00                	add    %al,(%rax)
   2f3ae:	00 00                	add    %al,(%rax)
   2f3b0:	80 6b 00 00          	subb   $0x0,0x0(%rbx)
   2f3b4:	00 00                	add    %al,(%rax)
   2f3b6:	00 00                	add    %al,(%rax)
   2f3b8:	90                   	nop
   2f3b9:	6b 00 00             	imul   $0x0,(%rax),%eax
   2f3bc:	00 00                	add    %al,(%rax)
   2f3be:	00 00                	add    %al,(%rax)
   2f3c0:	b0 6b                	mov    $0x6b,%al
   2f3c2:	00 00                	add    %al,(%rax)
   2f3c4:	00 00                	add    %al,(%rax)
   2f3c6:	00 00                	add    %al,(%rax)
   2f3c8:	d0 6b 00             	shrb   0x0(%rbx)
   2f3cb:	00 00                	add    %al,(%rax)
   2f3cd:	00 00                	add    %al,(%rax)
   2f3cf:	00 e0                	add    %ah,%al
   2f3d1:	6b 00 00             	imul   $0x0,(%rax),%eax
   2f3d4:	00 00                	add    %al,(%rax)
   2f3d6:	00 00                	add    %al,(%rax)
   2f3d8:	00 6c 00 00          	add    %ch,0x0(%rax,%rax,1)
   2f3dc:	00 00                	add    %al,(%rax)
   2f3de:	00 00                	add    %al,(%rax)
   2f3e0:	10 6c 00 00          	adc    %ch,0x0(%rax,%rax,1)
   2f3e4:	00 00                	add    %al,(%rax)
   2f3e6:	00 00                	add    %al,(%rax)
   2f3e8:	20 6c 00 00          	and    %ch,0x0(%rax,%rax,1)
   2f3ec:	00 00                	add    %al,(%rax)
   2f3ee:	00 00                	add    %al,(%rax)
   2f3f0:	30 6c 00 00          	xor    %ch,0x0(%rax,%rax,1)
   2f3f4:	00 00                	add    %al,(%rax)
   2f3f6:	00 00                	add    %al,(%rax)
   2f3f8:	40 6c                	rex insb (%dx),%es:(%rdi)
   2f3fa:	00 00                	add    %al,(%rax)
   2f3fc:	00 00                	add    %al,(%rax)
	...

000000000002f400 <instrument_signal_restorer>:
   2f400:	b8 0f 00 00 00       	mov    $0xf,%eax
   2f405:	0f 05                	syscall 
   2f407:	e8 a5 03 00 00       	callq  2f7b1 <instrument_error>

000000000002f40c <handle_system_call>:
   2f40c:	83 f8 09             	cmp    $0x9,%eax
   2f40f:	74 14                	je     2f425 <handle_system_call.handle_mmap>
   2f411:	83 f8 0b             	cmp    $0xb,%eax
   2f414:	74 34                	je     2f44a <handle_system_call.handle_munmap>
   2f416:	83 f8 19             	cmp    $0x19,%eax
   2f419:	74 36                	je     2f451 <handle_system_call.handle_mremap>
   2f41b:	83 f8 0c             	cmp    $0xc,%eax
   2f41e:	74 38                	je     2f458 <handle_system_call.handle_brk>
   2f420:	e9 80 00 00 00       	jmpq   2f4a5 <handle_system_call.end>

000000000002f425 <handle_system_call.handle_mmap>:
   2f425:	0f 05                	syscall 
   2f427:	48 85 c0             	test   %rax,%rax
   2f42a:	78 79                	js     2f4a5 <handle_system_call.end>
   2f42c:	41 52                	push   %r10
   2f42e:	41 51                	push   %r9
   2f430:	41 50                	push   %r8
   2f432:	56                   	push   %rsi
   2f433:	57                   	push   %rdi
   2f434:	52                   	push   %rdx
   2f435:	50                   	push   %rax
   2f436:	48 89 c7             	mov    %rax,%rdi
   2f439:	e8 01 03 00 00       	callq  2f73f <allocate_mask_buffer>
   2f43e:	58                   	pop    %rax
   2f43f:	5a                   	pop    %rdx
   2f440:	5f                   	pop    %rdi
   2f441:	5e                   	pop    %rsi
   2f442:	41 58                	pop    %r8
   2f444:	41 59                	pop    %r9
   2f446:	41 5a                	pop    %r10
   2f448:	eb 5b                	jmp    2f4a5 <handle_system_call.end>

000000000002f44a <handle_system_call.handle_munmap>:
   2f44a:	e8 62 03 00 00       	callq  2f7b1 <instrument_error>
   2f44f:	eb 54                	jmp    2f4a5 <handle_system_call.end>

000000000002f451 <handle_system_call.handle_mremap>:
   2f451:	e8 5b 03 00 00       	callq  2f7b1 <instrument_error>
   2f456:	eb 4d                	jmp    2f4a5 <handle_system_call.end>

000000000002f458 <handle_system_call.handle_brk>:
   2f458:	48 85 ff             	test   %rdi,%rdi
   2f45b:	74 46                	je     2f4a3 <handle_system_call.handle_others>
   2f45d:	41 52                	push   %r10
   2f45f:	41 51                	push   %r9
   2f461:	41 50                	push   %r8
   2f463:	56                   	push   %rsi
   2f464:	57                   	push   %rdi
   2f465:	52                   	push   %rdx
   2f466:	48 89 fe             	mov    %rdi,%rsi
   2f469:	31 ff                	xor    %edi,%edi
   2f46b:	0f 05                	syscall 
   2f46d:	48 89 f7             	mov    %rsi,%rdi
   2f470:	48 89 c6             	mov    %rax,%rsi
   2f473:	b8 0c 00 00 00       	mov    $0xc,%eax
   2f478:	0f 05                	syscall 
   2f47a:	50                   	push   %rax
   2f47b:	48 39 f0             	cmp    %rsi,%rax
   2f47e:	72 12                	jb     2f492 <handle_system_call.handle_brk.dealloc>
   2f480:	74 15                	je     2f497 <handle_system_call.handle_brk.end>

000000000002f482 <handle_system_call.handle_brk.alloc>:
   2f482:	48 89 f7             	mov    %rsi,%rdi
   2f485:	48 89 c6             	mov    %rax,%rsi
   2f488:	48 29 fe             	sub    %rdi,%rsi
   2f48b:	e8 af 02 00 00       	callq  2f73f <allocate_mask_buffer>
   2f490:	eb 05                	jmp    2f497 <handle_system_call.handle_brk.end>

000000000002f492 <handle_system_call.handle_brk.dealloc>:
   2f492:	e8 1a 03 00 00       	callq  2f7b1 <instrument_error>

000000000002f497 <handle_system_call.handle_brk.end>:
   2f497:	58                   	pop    %rax
   2f498:	5a                   	pop    %rdx
   2f499:	5f                   	pop    %rdi
   2f49a:	5e                   	pop    %rsi
   2f49b:	41 58                	pop    %r8
   2f49d:	41 59                	pop    %r9
   2f49f:	41 5a                	pop    %r10
   2f4a1:	eb 02                	jmp    2f4a5 <handle_system_call.end>

000000000002f4a3 <handle_system_call.handle_others>:
   2f4a3:	0f 05                	syscall 

000000000002f4a5 <handle_system_call.end>:
   2f4a5:	c3                   	retq   

000000000002f4a6 <handle_malloc>:
   2f4a6:	41 57                	push   %r15
   2f4a8:	41 56                	push   %r14
   2f4aa:	41 55                	push   %r13
   2f4ac:	49 89 ff             	mov    %rdi,%r15

000000000002f4af <handle_malloc.continue_malloc>:
   2f4af:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   2f4b6:	70 00 00 
   2f4b9:	4d 8b 75 00          	mov    0x0(%r13),%r14
   2f4bd:	49 c7 45 00 02 00 00 	movq   $0x2,0x0(%r13)
   2f4c4:	00 
   2f4c5:	ff d0                	callq  *%rax
   2f4c7:	48 85 c0             	test   %rax,%rax
   2f4ca:	74 2c                	je     2f4f8 <handle_malloc.end>
   2f4cc:	49 89 c5             	mov    %rax,%r13
   2f4cf:	48 8d b8 00 10 00 c0 	lea    -0x3ffff000(%rax),%rdi
   2f4d6:	4d 85 f6             	test   %r14,%r14
   2f4d9:	74 13                	je     2f4ee <handle_malloc.init_zero_mask>
   2f4db:	49 8d 46 01          	lea    0x1(%r14),%rax
   2f4df:	4c 21 f0             	and    %r14,%rax
   2f4e2:	75 0a                	jne    2f4ee <handle_malloc.init_zero_mask>

000000000002f4e4 <handle_malloc.init_random_mask>:
   2f4e4:	4c 89 fe             	mov    %r15,%rsi
   2f4e7:	e8 a4 02 00 00       	callq  2f790 <get_random_bytes>
   2f4ec:	eb 07                	jmp    2f4f5 <handle_malloc.mask_init_done>

000000000002f4ee <handle_malloc.init_zero_mask>:
   2f4ee:	31 c0                	xor    %eax,%eax
   2f4f0:	4c 89 f9             	mov    %r15,%rcx
   2f4f3:	f3 aa                	rep stos %al,%es:(%rdi)

000000000002f4f5 <handle_malloc.mask_init_done>:
   2f4f5:	4c 89 e8             	mov    %r13,%rax

000000000002f4f8 <handle_malloc.end>:
   2f4f8:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   2f4ff:	70 00 00 
   2f502:	4d 89 75 00          	mov    %r14,0x0(%r13)
   2f506:	41 5d                	pop    %r13
   2f508:	41 5e                	pop    %r14
   2f50a:	41 5f                	pop    %r15
   2f50c:	c3                   	retq   

000000000002f50d <handle_calloc>:
   2f50d:	41 57                	push   %r15
   2f50f:	41 56                	push   %r14
   2f511:	41 55                	push   %r13
   2f513:	49 89 ff             	mov    %rdi,%r15
   2f516:	4c 0f af fe          	imul   %rsi,%r15
   2f51a:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   2f521:	70 00 00 
   2f524:	4d 8b 75 00          	mov    0x0(%r13),%r14
   2f528:	49 c7 45 00 02 00 00 	movq   $0x2,0x0(%r13)
   2f52f:	00 
   2f530:	ff d0                	callq  *%rax
   2f532:	48 85 c0             	test   %rax,%rax
   2f535:	74 3b                	je     2f572 <handle_calloc.end>
   2f537:	49 89 c5             	mov    %rax,%r13
   2f53a:	48 8d b8 00 10 00 c0 	lea    -0x3ffff000(%rax),%rdi
   2f541:	4d 85 f6             	test   %r14,%r14
   2f544:	74 22                	je     2f568 <handle_calloc.init_zero_mask>
   2f546:	49 8d 46 01          	lea    0x1(%r14),%rax
   2f54a:	4c 21 f0             	and    %r14,%rax
   2f54d:	75 19                	jne    2f568 <handle_calloc.init_zero_mask>

000000000002f54f <handle_calloc.init_random_mask>:
   2f54f:	4c 89 fe             	mov    %r15,%rsi
   2f552:	e8 39 02 00 00       	callq  2f790 <get_random_bytes>
   2f557:	49 8d b5 00 10 00 c0 	lea    -0x3ffff000(%r13),%rsi
   2f55e:	4c 89 ef             	mov    %r13,%rdi
   2f561:	4c 89 f9             	mov    %r15,%rcx
   2f564:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   2f566:	eb 07                	jmp    2f56f <handle_calloc.mask_init_done>

000000000002f568 <handle_calloc.init_zero_mask>:
   2f568:	31 c0                	xor    %eax,%eax
   2f56a:	4c 89 f9             	mov    %r15,%rcx
   2f56d:	f3 aa                	rep stos %al,%es:(%rdi)

000000000002f56f <handle_calloc.mask_init_done>:
   2f56f:	4c 89 e8             	mov    %r13,%rax

000000000002f572 <handle_calloc.end>:
   2f572:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   2f579:	70 00 00 
   2f57c:	4d 89 75 00          	mov    %r14,0x0(%r13)
   2f580:	41 5d                	pop    %r13
   2f582:	41 5e                	pop    %r14
   2f584:	41 5f                	pop    %r15
   2f586:	c3                   	retq   

000000000002f587 <handle_realloc>:
   2f587:	48 85 ff             	test   %rdi,%rdi
   2f58a:	75 0e                	jne    2f59a <handle_realloc.continue_realloc>
   2f58c:	41 57                	push   %r15
   2f58e:	41 56                	push   %r14
   2f590:	41 55                	push   %r13
   2f592:	49 89 f7             	mov    %rsi,%r15
   2f595:	e9 15 ff ff ff       	jmpq   2f4af <handle_malloc.continue_malloc>

000000000002f59a <handle_realloc.continue_realloc>:
   2f59a:	41 57                	push   %r15
   2f59c:	41 56                	push   %r14
   2f59e:	41 55                	push   %r13
   2f5a0:	41 54                	push   %r12
   2f5a2:	55                   	push   %rbp
   2f5a3:	53                   	push   %rbx
   2f5a4:	48 83 ec 08          	sub    $0x8,%rsp
   2f5a8:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   2f5af:	70 00 00 
   2f5b2:	4d 8b 5d 00          	mov    0x0(%r13),%r11
   2f5b6:	49 c7 45 00 02 00 00 	movq   $0x2,0x0(%r13)
   2f5bd:	00 
   2f5be:	49 89 ff             	mov    %rdi,%r15
   2f5c1:	49 89 f5             	mov    %rsi,%r13
   2f5c4:	48 89 c3             	mov    %rax,%rbx
   2f5c7:	4c 8b 77 f8          	mov    -0x8(%rdi),%r14
   2f5cb:	49 83 e6 f8          	and    $0xfffffffffffffff8,%r14

000000000002f5cf <handle_realloc.allocate_secondary_data>:
   2f5cf:	41 53                	push   %r11
   2f5d1:	41 51                	push   %r9
   2f5d3:	41 50                	push   %r8
   2f5d5:	51                   	push   %rcx
   2f5d6:	52                   	push   %rdx
   2f5d7:	56                   	push   %rsi
   2f5d8:	57                   	push   %rdi
   2f5d9:	4c 89 f6             	mov    %r14,%rsi
   2f5dc:	48 81 c6 00 10 00 00 	add    $0x1000,%rsi
   2f5e3:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   2f5ea:	b8 09 00 00 00       	mov    $0x9,%eax
   2f5ef:	31 ff                	xor    %edi,%edi
   2f5f1:	ba 03 00 00 00       	mov    $0x3,%edx
   2f5f6:	41 ba 22 00 00 00    	mov    $0x22,%r10d
   2f5fc:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   2f603:	45 31 c9             	xor    %r9d,%r9d
   2f606:	0f 05                	syscall 
   2f608:	48 85 c0             	test   %rax,%rax
   2f60b:	79 05                	jns    2f612 <handle_realloc.allocate_secondary_mask>
   2f60d:	e8 9f 01 00 00       	callq  2f7b1 <instrument_error>

000000000002f612 <handle_realloc.allocate_secondary_mask>:
   2f612:	49 89 c4             	mov    %rax,%r12
   2f615:	b8 09 00 00 00       	mov    $0x9,%eax
   2f61a:	0f 05                	syscall 
   2f61c:	48 85 c0             	test   %rax,%rax
   2f61f:	79 05                	jns    2f626 <handle_realloc.copy_old_to_secondary>
   2f621:	e8 8b 01 00 00       	callq  2f7b1 <instrument_error>

000000000002f626 <handle_realloc.copy_old_to_secondary>:
   2f626:	48 89 c5             	mov    %rax,%rbp
   2f629:	4c 89 fe             	mov    %r15,%rsi
   2f62c:	4c 89 e7             	mov    %r12,%rdi
   2f62f:	4c 89 f1             	mov    %r14,%rcx
   2f632:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   2f634:	49 8d b7 00 10 00 c0 	lea    -0x3ffff000(%r15),%rsi
   2f63b:	48 89 ef             	mov    %rbp,%rdi
   2f63e:	4c 89 f1             	mov    %r14,%rcx
   2f641:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   2f643:	5f                   	pop    %rdi
   2f644:	5e                   	pop    %rsi
   2f645:	5a                   	pop    %rdx
   2f646:	59                   	pop    %rcx
   2f647:	41 58                	pop    %r8
   2f649:	41 59                	pop    %r9
   2f64b:	41 5b                	pop    %r11

000000000002f64d <handle_realloc.call_realloc>:
   2f64d:	48 89 d8             	mov    %rbx,%rax
   2f650:	4c 89 db             	mov    %r11,%rbx
   2f653:	ff d0                	callq  *%rax
   2f655:	49 89 db             	mov    %rbx,%r11
   2f658:	48 85 c0             	test   %rax,%rax
   2f65b:	0f 84 c1 00 00 00    	je     2f722 <handle_realloc.end>
   2f661:	48 89 c3             	mov    %rax,%rbx

000000000002f664 <handle_realloc.new_mask>:
   2f664:	4d 85 db             	test   %r11,%r11
   2f667:	74 47                	je     2f6b0 <handle_realloc.copy_with_zero_mask>
   2f669:	49 8d 43 01          	lea    0x1(%r11),%rax
   2f66d:	4c 21 d8             	and    %r11,%rax
   2f670:	75 3e                	jne    2f6b0 <handle_realloc.copy_with_zero_mask>

000000000002f672 <handle_realloc.copy_with_random_mask>:
   2f672:	48 8d bb 00 10 00 c0 	lea    -0x3ffff000(%rbx),%rdi
   2f679:	4c 89 ee             	mov    %r13,%rsi
   2f67c:	e8 0f 01 00 00       	callq  2f790 <get_random_bytes>
   2f681:	48 8d b3 00 10 00 c0 	lea    -0x3ffff000(%rbx),%rsi
   2f688:	31 c9                	xor    %ecx,%ecx
   2f68a:	4d 39 ee             	cmp    %r13,%r14
   2f68d:	4c 89 ea             	mov    %r13,%rdx
   2f690:	49 0f 46 d6          	cmovbe %r14,%rdx

000000000002f694 <handle_realloc.copy_with_random_mask_loop>:
   2f694:	48 39 d1             	cmp    %rdx,%rcx
   2f697:	73 49                	jae    2f6e2 <handle_realloc.unmap_secondary_data>
   2f699:	49 8b 04 0c          	mov    (%r12,%rcx,1),%rax
   2f69d:	48 33 44 0d 00       	xor    0x0(%rbp,%rcx,1),%rax
   2f6a2:	48 33 04 0e          	xor    (%rsi,%rcx,1),%rax
   2f6a6:	48 89 04 0b          	mov    %rax,(%rbx,%rcx,1)
   2f6aa:	48 83 c1 08          	add    $0x8,%rcx
   2f6ae:	eb e4                	jmp    2f694 <handle_realloc.copy_with_random_mask_loop>

000000000002f6b0 <handle_realloc.copy_with_zero_mask>:
   2f6b0:	48 8d bb 00 10 00 c0 	lea    -0x3ffff000(%rbx),%rdi
   2f6b7:	31 c0                	xor    %eax,%eax
   2f6b9:	4c 89 e9             	mov    %r13,%rcx
   2f6bc:	f3 aa                	rep stos %al,%es:(%rdi)
   2f6be:	31 c9                	xor    %ecx,%ecx
   2f6c0:	4d 39 ee             	cmp    %r13,%r14
   2f6c3:	4c 89 ea             	mov    %r13,%rdx
   2f6c6:	49 0f 46 d6          	cmovbe %r14,%rdx

000000000002f6ca <handle_realloc.copy_with_zero_mask_loop>:
   2f6ca:	48 39 d1             	cmp    %rdx,%rcx
   2f6cd:	73 13                	jae    2f6e2 <handle_realloc.unmap_secondary_data>
   2f6cf:	49 8b 04 0c          	mov    (%r12,%rcx,1),%rax
   2f6d3:	48 33 44 0d 00       	xor    0x0(%rbp,%rcx,1),%rax
   2f6d8:	48 89 04 0b          	mov    %rax,(%rbx,%rcx,1)
   2f6dc:	48 83 c1 08          	add    $0x8,%rcx
   2f6e0:	eb e8                	jmp    2f6ca <handle_realloc.copy_with_zero_mask_loop>

000000000002f6e2 <handle_realloc.unmap_secondary_data>:
   2f6e2:	41 53                	push   %r11
   2f6e4:	4c 89 f6             	mov    %r14,%rsi
   2f6e7:	48 81 c6 00 10 00 00 	add    $0x1000,%rsi
   2f6ee:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   2f6f5:	b8 0b 00 00 00       	mov    $0xb,%eax
   2f6fa:	4c 89 e7             	mov    %r12,%rdi
   2f6fd:	0f 05                	syscall 
   2f6ff:	48 85 c0             	test   %rax,%rax
   2f702:	79 05                	jns    2f709 <handle_realloc.unmap_secondary_mask>
   2f704:	e8 a8 00 00 00       	callq  2f7b1 <instrument_error>

000000000002f709 <handle_realloc.unmap_secondary_mask>:
   2f709:	b8 0b 00 00 00       	mov    $0xb,%eax
   2f70e:	48 89 ef             	mov    %rbp,%rdi
   2f711:	0f 05                	syscall 
   2f713:	48 85 c0             	test   %rax,%rax
   2f716:	79 05                	jns    2f71d <handle_realloc.restore_return_address>
   2f718:	e8 94 00 00 00       	callq  2f7b1 <instrument_error>

000000000002f71d <handle_realloc.restore_return_address>:
   2f71d:	41 5b                	pop    %r11
   2f71f:	48 89 d8             	mov    %rbx,%rax

000000000002f722 <handle_realloc.end>:
   2f722:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   2f729:	70 00 00 
   2f72c:	4d 89 5d 00          	mov    %r11,0x0(%r13)
   2f730:	48 83 c4 08          	add    $0x8,%rsp
   2f734:	5b                   	pop    %rbx
   2f735:	5d                   	pop    %rbp
   2f736:	41 5c                	pop    %r12
   2f738:	41 5d                	pop    %r13
   2f73a:	41 5e                	pop    %r14
   2f73c:	41 5f                	pop    %r15
   2f73e:	c3                   	retq   

000000000002f73f <allocate_mask_buffer>:
   2f73f:	55                   	push   %rbp
   2f740:	53                   	push   %rbx
   2f741:	41 57                	push   %r15
   2f743:	41 56                	push   %r14
   2f745:	48 85 f6             	test   %rsi,%rsi
   2f748:	74 3c                	je     2f786 <allocate_mask_buffer.done>
   2f74a:	48 89 fd             	mov    %rdi,%rbp
   2f74d:	48 89 f3             	mov    %rsi,%rbx
   2f750:	49 89 d6             	mov    %rdx,%r14
   2f753:	4c 8d bf 00 10 00 c0 	lea    -0x3ffff000(%rdi),%r15
   2f75a:	b8 09 00 00 00       	mov    $0x9,%eax
   2f75f:	4c 89 ff             	mov    %r15,%rdi
   2f762:	48 89 de             	mov    %rbx,%rsi
   2f765:	ba 03 00 00 00       	mov    $0x3,%edx
   2f76a:	41 ba 32 00 00 00    	mov    $0x32,%r10d
   2f770:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   2f777:	45 31 c9             	xor    %r9d,%r9d
   2f77a:	0f 05                	syscall 
   2f77c:	48 85 c0             	test   %rax,%rax
   2f77f:	79 05                	jns    2f786 <allocate_mask_buffer.done>
   2f781:	e8 2b 00 00 00       	callq  2f7b1 <instrument_error>

000000000002f786 <allocate_mask_buffer.done>:
   2f786:	4c 89 f8             	mov    %r15,%rax
   2f789:	41 5e                	pop    %r14
   2f78b:	41 5f                	pop    %r15
   2f78d:	5b                   	pop    %rbx
   2f78e:	5d                   	pop    %rbp
   2f78f:	c3                   	retq   

000000000002f790 <get_random_bytes>:
   2f790:	48 8d 46 08          	lea    0x8(%rsi),%rax
   2f794:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   2f798:	40 f6 c6 07          	test   $0x7,%sil
   2f79c:	48 0f 45 f0          	cmovne %rax,%rsi

000000000002f7a0 <get_random_bytes.get_random_number>:
   2f7a0:	48 0f c7 f0          	rdrand %rax
   2f7a4:	73 fa                	jae    2f7a0 <get_random_bytes.get_random_number>
   2f7a6:	48 89 f1             	mov    %rsi,%rcx
   2f7a9:	48 c1 e9 03          	shr    $0x3,%rcx
   2f7ad:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   2f7b0:	c3                   	retq   

000000000002f7b1 <instrument_error>:
   2f7b1:	48 a3 00 00 00 00 00 	movabs %rax,0x0
   2f7b8:	00 00 00 

000000000002f7bb <instrument_header_end>:
   2f7bb:	00 00                	add    %al,(%rax)
   2f7bd:	00 00                	add    %al,(%rax)
	...

000000000002f7c0 <.instr.bb_43a0>:
   2f7c0:	c4 41 3d ef c0       	vpxor  %ymm8,%ymm8,%ymm8
   2f7c5:	c5 7e 7f 84 24 a8 0f 	vmovdqu %ymm8,-0x3ffff058(%rsp)
   2f7cc:	00 c0 
   2f7ce:	c5 7e 7f 84 24 c8 0f 	vmovdqu %ymm8,-0x3ffff038(%rsp)
   2f7d5:	00 c0 
   2f7d7:	c5 7e 7f 84 24 e8 0f 	vmovdqu %ymm8,-0x3ffff018(%rsp)
   2f7de:	00 c0 
   2f7e0:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   2f7e5:	f3 0f 1e fa          	endbr64 
   2f7e9:	41 55                	push   %r13
   2f7eb:	49 89 f5             	mov    %rsi,%r13
   2f7ee:	41 54                	push   %r12
   2f7f0:	41 89 fc             	mov    %edi,%r12d
   2f7f3:	bf 01 00 00 00       	mov    $0x1,%edi
   2f7f8:	53                   	push   %rbx
   2f7f9:	48 83 ec 40          	sub    $0x40,%rsp
   2f7fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2f804:	00 00 
   2f806:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f80b:	31 c0                	xor    %eax,%eax
   2f80d:	48 89 e6             	mov    %rsp,%rsi
   2f810:	e8 2b 4a fd ff       	callq  4240 <clock_gettime@plt>

000000000002f815 <instr.bb_43d0>:
   2f815:	31 c0                	xor    %eax,%eax
   2f817:	e8 b4 04 00 00       	callq  2fcd0 <foo.instr.bb_47f0>

000000000002f81c <instr.bb_43d7>:
   2f81c:	41 83 fc 01          	cmp    $0x1,%r12d
   2f820:	0f 8f f3 4c fd ff    	jg     4519 <main+0x179>

000000000002f826 <instr.bb_43e1>:
   2f826:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2f82d:	70 00 00 
   2f830:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   2f837:	00 
   2f838:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2f83f:	70 00 00 
   2f842:	e8 c9 05 00 00       	callq  2fe10 <cf_init_target.instr.bb_48c0>
   2f847:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2f84e:	70 00 00 
   2f851:	48 8b 37             	mov    (%rdi),%rsi
   2f854:	48 d1 ee             	shr    %rsi
   2f857:	48 89 37             	mov    %rsi,(%rdi)

000000000002f85a <instr.bb_43e6>:
   2f85a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2f85f:	bf 01 00 00 00       	mov    $0x1,%edi
   2f864:	e8 d7 49 fd ff       	callq  4240 <clock_gettime@plt>

000000000002f869 <instr.bb_43f5>:
   2f869:	bf 01 00 00 00       	mov    $0x1,%edi
   2f86e:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2f875:	70 00 00 
   2f878:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   2f87f:	00 
   2f880:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2f887:	70 00 00 
   2f88a:	e8 31 06 00 00       	callq  2fec0 <cf_run_target.instr.bb_4900>
   2f88f:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2f896:	70 00 00 
   2f899:	48 8b 37             	mov    (%rdi),%rsi
   2f89c:	48 d1 ee             	shr    %rsi
   2f89f:	48 89 37             	mov    %rsi,(%rdi)

000000000002f8a2 <instr.bb_43ff>:
   2f8a2:	e8 49 02 00 00       	callq  2faf0 <drop_taint.instr.bb_4700>

000000000002f8a7 <instr.bb_4404>:
   2f8a7:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2f8ae:	70 00 00 
   2f8b1:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   2f8b8:	00 
   2f8b9:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2f8c0:	70 00 00 
   2f8c3:	e8 e8 08 00 00       	callq  301b0 <cf_prepare_next.instr.bb_4a40>
   2f8c8:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2f8cf:	70 00 00 
   2f8d2:	48 8b 37             	mov    (%rdi),%rsi
   2f8d5:	48 d1 ee             	shr    %rsi
   2f8d8:	48 89 37             	mov    %rsi,(%rdi)

000000000002f8db <instr.bb_4409>:
   2f8db:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   2f8e0:	bf 01 00 00 00       	mov    $0x1,%edi
   2f8e5:	e8 56 49 fd ff       	callq  4240 <clock_gettime@plt>

000000000002f8ea <instr.bb_4418>:
   2f8ea:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   2f8ef:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   2f8f4:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
   2f8fb:	9b c4 20 
   2f8fe:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   2f903:	4c 89 c7             	mov    %r8,%rdi
   2f906:	48 2b 7c 24 08       	sub    0x8(%rsp),%rdi
   2f90b:	49 89 cd             	mov    %rcx,%r13
   2f90e:	4c 2b 2c 24          	sub    (%rsp),%r13
   2f912:	48 89 f8             	mov    %rdi,%rax
   2f915:	48 c1 ff 3f          	sar    $0x3f,%rdi
   2f919:	4d 69 ed 40 42 0f 00 	imul   $0xf4240,%r13,%r13
   2f920:	49 29 cc             	sub    %rcx,%r12
   2f923:	48 f7 ee             	imul   %rsi
   2f926:	49 69 cc 40 42 0f 00 	imul   $0xf4240,%r12,%rcx
   2f92d:	48 c1 fa 07          	sar    $0x7,%rdx
   2f931:	48 29 fa             	sub    %rdi,%rdx
   2f934:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   2f939:	49 01 d5             	add    %rdx,%r13
   2f93c:	4c 29 c7             	sub    %r8,%rdi
   2f93f:	48 89 f8             	mov    %rdi,%rax
   2f942:	48 c1 ff 3f          	sar    $0x3f,%rdi
   2f946:	48 f7 ee             	imul   %rsi
   2f949:	48 89 d6             	mov    %rdx,%rsi
   2f94c:	48 c1 fe 07          	sar    $0x7,%rsi
   2f950:	48 29 fe             	sub    %rdi,%rsi
   2f953:	bf 0a 00 00 00       	mov    $0xa,%edi
   2f958:	4c 8d 24 31          	lea    (%rcx,%rsi,1),%r12
   2f95c:	e8 9f 48 fd ff       	callq  4200 <putchar@plt>

000000000002f961 <instr.bb_448f>:
   2f961:	41 b8 09 00 00 00    	mov    $0x9,%r8d
   2f967:	4c 89 e9             	mov    %r13,%rcx
   2f96a:	ba 09 00 00 00       	mov    $0x9,%edx
   2f96f:	48 8d 35 ca b6 fe ff 	lea    -0x14936(%rip),%rsi        # 1b040 <_IO_stdin_used+0x40>
   2f976:	bf 01 00 00 00       	mov    $0x1,%edi
   2f97b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2f97f:	b8 01 00 00 00       	mov    $0x1,%eax
   2f984:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
   2f989:	f2 0f 5e 05 f7 b6 fe 	divsd  -0x14909(%rip),%xmm0        # 1b088 <_IO_stdin_used+0x88>
   2f990:	ff 
   2f991:	e8 ba 49 fd ff       	callq  4350 <__printf_chk@plt>

000000000002f996 <instr.bb_44c4>:
   2f996:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2f99a:	41 b8 09 00 00 00    	mov    $0x9,%r8d
   2f9a0:	4c 89 e1             	mov    %r12,%rcx
   2f9a3:	ba 09 00 00 00       	mov    $0x9,%edx
   2f9a8:	bf 01 00 00 00       	mov    $0x1,%edi
   2f9ad:	b8 01 00 00 00       	mov    $0x1,%eax
   2f9b2:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
   2f9b7:	48 8d 35 a2 b6 fe ff 	lea    -0x1495e(%rip),%rsi        # 1b060 <_IO_stdin_used+0x60>
   2f9be:	f2 0f 5e 05 c2 b6 fe 	divsd  -0x1493e(%rip),%xmm0        # 1b088 <_IO_stdin_used+0x88>
   2f9c5:	ff 
   2f9c6:	e8 85 49 fd ff       	callq  4350 <__printf_chk@plt>

000000000002f9cb <instr.bb_44f9>:
   2f9cb:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2f9d0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2f9d7:	00 00 
   2f9d9:	0f 85 e6 4b fd ff    	jne    45c5 <main+0x225>

000000000002f9df <instr.bb_450d>:
   2f9df:	48 83 c4 40          	add    $0x40,%rsp
   2f9e3:	31 c0                	xor    %eax,%eax
   2f9e5:	5b                   	pop    %rbx
   2f9e6:	41 5c                	pop    %r12
   2f9e8:	41 5d                	pop    %r13
   2f9ea:	c3                   	retq   
   2f9eb:	90                   	nop
   2f9ec:	90                   	nop
   2f9ed:	90                   	nop
   2f9ee:	90                   	nop
   2f9ef:	90                   	nop

000000000002f9f0 <deregister_tm_clones.instr.bb_4600>:
   2f9f0:	31 c9                	xor    %ecx,%ecx
   2f9f2:	48 8d 3d 8f e6 ff ff 	lea    -0x1971(%rip),%rdi        # 2e088 <__TMC_END__>
   2f9f9:	48 8d 05 88 e6 ff ff 	lea    -0x1978(%rip),%rax        # 2e088 <__TMC_END__>
   2fa00:	48 39 f8             	cmp    %rdi,%rax
   2fa03:	0f 84 1f 4c fd ff    	je     4628 <deregister_tm_clones+0x28>

000000000002fa09 <instr.bb_4613>:
   2fa09:	48 8b 05 c0 e5 ff ff 	mov    -0x1a40(%rip),%rax        # 2dfd0 <_ITM_deregisterTMCloneTable>
   2fa10:	48 85 c0             	test   %rax,%rax
   2fa13:	0f 84 0f 4c fd ff    	je     4628 <deregister_tm_clones+0x28>

000000000002fa19 <instr.bb_461f>:
   2fa19:	ff e0                	jmpq   *%rax
   2fa1b:	90                   	nop
   2fa1c:	90                   	nop
   2fa1d:	90                   	nop
   2fa1e:	90                   	nop
   2fa1f:	90                   	nop

000000000002fa20 <__do_global_dtors_aux.instr.bb_4670>:
   2fa20:	31 c9                	xor    %ecx,%ecx
   2fa22:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   2fa29:	c0 
   2fa2a:	f3 0f 1e fa          	endbr64 
   2fa2e:	80 3d 6b e6 ff ff 00 	cmpb   $0x0,-0x1995(%rip)        # 2e0a0 <completed.8061>
   2fa35:	0f 85 6d 4c fd ff    	jne    46a8 <__do_global_dtors_aux+0x38>

000000000002fa3b <instr.bb_467d>:
   2fa3b:	55                   	push   %rbp
   2fa3c:	48 83 3d ac e5 ff ff 	cmpq   $0x0,-0x1a54(%rip)        # 2dff0 <__cxa_finalize@GLIBC_2.2.5>
   2fa43:	00 
   2fa44:	48 89 e5             	mov    %rsp,%rbp
   2fa47:	0f 84 0c 00 00 00    	je     2fa59 <instr.bb_4697>

000000000002fa4d <instr.bb_468b>:
   2fa4d:	48 8b 3d b4 e5 ff ff 	mov    -0x1a4c(%rip),%rdi        # 2e008 <__dso_handle>
   2fa54:	e8 87 47 fd ff       	callq  41e0 <__cxa_finalize@plt>

000000000002fa59 <instr.bb_4697>:
   2fa59:	e8 92 ff ff ff       	callq  2f9f0 <deregister_tm_clones.instr.bb_4600>

000000000002fa5e <instr.bb_469c>:
   2fa5e:	c6 05 3b e6 ff ff 01 	movb   $0x1,-0x19c5(%rip)        # 2e0a0 <completed.8061>
   2fa65:	5d                   	pop    %rbp
   2fa66:	c3                   	retq   
   2fa67:	90                   	nop
   2fa68:	90                   	nop
   2fa69:	90                   	nop
   2fa6a:	90                   	nop
   2fa6b:	90                   	nop
   2fa6c:	90                   	nop
   2fa6d:	90                   	nop
   2fa6e:	90                   	nop
   2fa6f:	90                   	nop

000000000002fa70 <classify.instr.bb_46c0>:
   2fa70:	31 c9                	xor    %ecx,%ecx
   2fa72:	89 8c 24 ec 0f 00 c0 	mov    %ecx,-0x3ffff014(%rsp)
   2fa79:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   2fa80:	c0 
   2fa81:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   2fa88:	c0 
   2fa89:	f3 0f 1e fa          	endbr64 
   2fa8d:	55                   	push   %rbp
   2fa8e:	48 89 e5             	mov    %rsp,%rbp
   2fa91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2fa95:	89 75 f4             	mov    %esi,-0xc(%rbp)
   2fa98:	90                   	nop
   2fa99:	90                   	nop
   2fa9a:	90                   	nop
   2fa9b:	90                   	nop
   2fa9c:	90                   	nop
   2fa9d:	90                   	nop
   2fa9e:	90                   	nop
   2fa9f:	90                   	nop
   2faa0:	5d                   	pop    %rbp
   2faa1:	c3                   	retq   
   2faa2:	90                   	nop
   2faa3:	90                   	nop
   2faa4:	90                   	nop
   2faa5:	90                   	nop
   2faa6:	90                   	nop
   2faa7:	90                   	nop
   2faa8:	90                   	nop
   2faa9:	90                   	nop
   2faaa:	90                   	nop
   2faab:	90                   	nop
   2faac:	90                   	nop
   2faad:	90                   	nop
   2faae:	90                   	nop
   2faaf:	90                   	nop

000000000002fab0 <declassify.instr.bb_46e0>:
   2fab0:	45 31 d2             	xor    %r10d,%r10d
   2fab3:	44 89 94 24 ec 0f 00 	mov    %r10d,-0x3ffff014(%rsp)
   2faba:	c0 
   2fabb:	4c 89 94 24 f0 0f 00 	mov    %r10,-0x3ffff010(%rsp)
   2fac2:	c0 
   2fac3:	4c 89 94 24 f8 0f 00 	mov    %r10,-0x3ffff008(%rsp)
   2faca:	c0 
   2facb:	f3 0f 1e fa          	endbr64 
   2facf:	55                   	push   %rbp
   2fad0:	48 89 e5             	mov    %rsp,%rbp
   2fad3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2fad7:	89 75 f4             	mov    %esi,-0xc(%rbp)
   2fada:	90                   	nop
   2fadb:	90                   	nop
   2fadc:	90                   	nop
   2fadd:	90                   	nop
   2fade:	90                   	nop
   2fadf:	90                   	nop
   2fae0:	5d                   	pop    %rbp
   2fae1:	c3                   	retq   
   2fae2:	90                   	nop
   2fae3:	90                   	nop
   2fae4:	90                   	nop
   2fae5:	90                   	nop
   2fae6:	90                   	nop
   2fae7:	90                   	nop
   2fae8:	90                   	nop
   2fae9:	90                   	nop
   2faea:	90                   	nop
   2faeb:	90                   	nop
   2faec:	90                   	nop
   2faed:	90                   	nop
   2faee:	90                   	nop
   2faef:	90                   	nop

000000000002faf0 <drop_taint.instr.bb_4700>:
   2faf0:	31 c9                	xor    %ecx,%ecx
   2faf2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   2faf9:	c0 
   2fafa:	f3 0f 1e fa          	endbr64 
   2fafe:	55                   	push   %rbp
   2faff:	48 89 e5             	mov    %rsp,%rbp
   2fb02:	5d                   	pop    %rbp
   2fb03:	c3                   	retq   
   2fb04:	90                   	nop
   2fb05:	90                   	nop
   2fb06:	90                   	nop
   2fb07:	90                   	nop
   2fb08:	90                   	nop
   2fb09:	90                   	nop
   2fb0a:	90                   	nop
   2fb0b:	90                   	nop
   2fb0c:	90                   	nop
   2fb0d:	90                   	nop
   2fb0e:	90                   	nop
   2fb0f:	90                   	nop

000000000002fb10 <dump_secret.instr.bb_4710>:
   2fb10:	31 c9                	xor    %ecx,%ecx
   2fb12:	48 89 8c 24 c8 0f 00 	mov    %rcx,-0x3ffff038(%rsp)
   2fb19:	c0 
   2fb1a:	48 89 8c 24 d0 0f 00 	mov    %rcx,-0x3ffff030(%rsp)
   2fb21:	c0 
   2fb22:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   2fb29:	c0 
   2fb2a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   2fb31:	c0 
   2fb32:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   2fb39:	c0 
   2fb3a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   2fb41:	c0 
   2fb42:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   2fb49:	c0 
   2fb4a:	f3 0f 1e fa          	endbr64 
   2fb4e:	41 57                	push   %r15
   2fb50:	49 89 ff             	mov    %rdi,%r15
   2fb53:	41 56                	push   %r14
   2fb55:	49 89 d6             	mov    %rdx,%r14
   2fb58:	48 63 d6             	movslq %esi,%rdx
   2fb5b:	41 55                	push   %r13
   2fb5d:	48 89 d7             	mov    %rdx,%rdi
   2fb60:	41 54                	push   %r12
   2fb62:	53                   	push   %rbx
   2fb63:	89 f3                	mov    %esi,%ebx
   2fb65:	48 83 ec 10          	sub    $0x10,%rsp
   2fb69:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   2fb6e:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2fb75:	70 00 00 
   2fb78:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   2fb7f:	00 
   2fb80:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2fb87:	70 00 00 
   2fb8a:	48 8d 05 af 47 fd ff 	lea    -0x2b851(%rip),%rax        # 4340 <malloc@plt>
   2fb91:	e8 10 f9 ff ff       	callq  2f4a6 <handle_malloc>
   2fb96:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2fb9d:	70 00 00 
   2fba0:	48 8b 37             	mov    (%rdi),%rsi
   2fba3:	48 d1 ee             	shr    %rsi
   2fba6:	48 89 37             	mov    %rsi,(%rdi)

000000000002fba9 <instr.bb_4739>:
   2fba9:	bf 04 00 00 00       	mov    $0x4,%edi
   2fbae:	49 89 c5             	mov    %rax,%r13
   2fbb1:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2fbb8:	70 00 00 
   2fbbb:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   2fbc2:	00 
   2fbc3:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2fbca:	70 00 00 
   2fbcd:	48 8d 05 6c 47 fd ff 	lea    -0x2b894(%rip),%rax        # 4340 <malloc@plt>
   2fbd4:	e8 cd f8 ff ff       	callq  2f4a6 <handle_malloc>
   2fbd9:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2fbe0:	70 00 00 
   2fbe3:	48 8b 37             	mov    (%rdi),%rsi
   2fbe6:	48 d1 ee             	shr    %rsi
   2fbe9:	48 89 37             	mov    %rsi,(%rdi)

000000000002fbec <instr.bb_4746>:
   2fbec:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2fbf1:	4c 89 fe             	mov    %r15,%rsi
   2fbf4:	4c 89 ef             	mov    %r13,%rdi
   2fbf7:	49 89 c4             	mov    %rax,%r12
   2fbfa:	e8 21 47 fd ff       	callq  4320 <memcpy@plt>

000000000002fbff <instr.bb_4759>:
   2fbff:	be 04 00 00 00       	mov    $0x4,%esi
   2fc04:	4c 89 e7             	mov    %r12,%rdi
   2fc07:	41 89 1c 24          	mov    %ebx,(%r12)
   2fc0b:	e8 a0 fe ff ff       	callq  2fab0 <declassify.instr.bb_46e0>

000000000002fc10 <instr.bb_476a>:
   2fc10:	41 8b 34 24          	mov    (%r12),%esi
   2fc14:	4c 89 ef             	mov    %r13,%rdi
   2fc17:	e8 94 fe ff ff       	callq  2fab0 <declassify.instr.bb_46e0>

000000000002fc1c <instr.bb_4776>:
   2fc1c:	4d 85 f6             	test   %r14,%r14
   2fc1f:	0f 84 4b 00 00 00    	je     2fc70 <instr.bb_4791>

000000000002fc25 <instr.bb_477b>:
   2fc25:	4c 89 f2             	mov    %r14,%rdx
   2fc28:	48 8d 35 d9 b3 fe ff 	lea    -0x14c27(%rip),%rsi        # 1b008 <_IO_stdin_used+0x8>
   2fc2f:	bf 01 00 00 00       	mov    $0x1,%edi
   2fc34:	31 c0                	xor    %eax,%eax
   2fc36:	49 89 c2             	mov    %rax,%r10
   2fc39:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2fc40:	70 00 00 
   2fc43:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   2fc4a:	00 
   2fc4b:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2fc52:	70 00 00 
   2fc55:	4c 89 d0             	mov    %r10,%rax
   2fc58:	e8 f3 46 fd ff       	callq  4350 <__printf_chk@plt>
   2fc5d:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2fc64:	70 00 00 
   2fc67:	48 8b 37             	mov    (%rdi),%rsi
   2fc6a:	48 d1 ee             	shr    %rsi
   2fc6d:	48 89 37             	mov    %rsi,(%rdi)

000000000002fc70 <instr.bb_4791>:
   2fc70:	41 8b 04 24          	mov    (%r12),%eax
   2fc74:	85 c0                	test   %eax,%eax
   2fc76:	0f 8e 2f 00 00 00    	jle    2fcab <instr.bb_47c7>

000000000002fc7c <instr.bb_4799>:
   2fc7c:	31 db                	xor    %ebx,%ebx
   2fc7e:	4c 8d 35 88 b3 fe ff 	lea    -0x14c78(%rip),%r14        # 1b00d <_IO_stdin_used+0xd>
   2fc85:	90                   	nop
   2fc86:	90                   	nop
   2fc87:	90                   	nop

000000000002fc88 <instr.bb_47a8>:
   2fc88:	41 0f b6 54 1d 00    	movzbl 0x0(%r13,%rbx,1),%edx
   2fc8e:	4c 89 f6             	mov    %r14,%rsi
   2fc91:	bf 01 00 00 00       	mov    $0x1,%edi
   2fc96:	31 c0                	xor    %eax,%eax
   2fc98:	48 83 c3 01          	add    $0x1,%rbx
   2fc9c:	e8 af 46 fd ff       	callq  4350 <__printf_chk@plt>

000000000002fca1 <instr.bb_47c1>:
   2fca1:	41 39 1c 24          	cmp    %ebx,(%r12)
   2fca5:	0f 8f dd ff ff ff    	jg     2fc88 <instr.bb_47a8>

000000000002fcab <instr.bb_47c7>:
   2fcab:	bf 0a 00 00 00       	mov    $0xa,%edi
   2fcb0:	e8 4b 45 fd ff       	callq  4200 <putchar@plt>

000000000002fcb5 <instr.bb_47d1>:
   2fcb5:	4c 89 ef             	mov    %r13,%rdi
   2fcb8:	e8 33 45 fd ff       	callq  41f0 <free@plt>

000000000002fcbd <instr.bb_47d9>:
   2fcbd:	48 83 c4 10          	add    $0x10,%rsp
   2fcc1:	5b                   	pop    %rbx
   2fcc2:	41 5c                	pop    %r12
   2fcc4:	41 5d                	pop    %r13
   2fcc6:	41 5e                	pop    %r14
   2fcc8:	41 5f                	pop    %r15
   2fcca:	c3                   	retq   
   2fccb:	90                   	nop
   2fccc:	90                   	nop
   2fccd:	90                   	nop
   2fcce:	90                   	nop
   2fccf:	90                   	nop

000000000002fcd0 <foo.instr.bb_47f0>:
   2fcd0:	31 c9                	xor    %ecx,%ecx
   2fcd2:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   2fcd9:	c0 
   2fcda:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   2fce1:	c0 
   2fce2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   2fce9:	c0 
   2fcea:	f3 0f 1e fa          	endbr64 
   2fcee:	55                   	push   %rbp
   2fcef:	48 89 e5             	mov    %rsp,%rbp
   2fcf2:	48 83 ec 10          	sub    $0x10,%rsp
   2fcf6:	bf 04 00 00 00       	mov    $0x4,%edi
   2fcfb:	e8 40 46 fd ff       	callq  4340 <malloc@plt>

000000000002fd00 <instr.bb_4806>:
   2fd00:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2fd04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2fd08:	48 89 c7             	mov    %rax,%rdi
   2fd0b:	e8 e0 44 fd ff       	callq  41f0 <free@plt>

000000000002fd10 <instr.bb_4816>:
   2fd10:	c9                   	leaveq 
   2fd11:	c3                   	retq   
   2fd12:	90                   	nop
   2fd13:	90                   	nop
   2fd14:	90                   	nop
   2fd15:	90                   	nop
   2fd16:	90                   	nop
   2fd17:	90                   	nop
   2fd18:	90                   	nop
   2fd19:	90                   	nop
   2fd1a:	90                   	nop
   2fd1b:	90                   	nop
   2fd1c:	90                   	nop
   2fd1d:	90                   	nop
   2fd1e:	90                   	nop
   2fd1f:	90                   	nop

000000000002fd20 <myrng.instr.bb_4820>:
   2fd20:	31 c9                	xor    %ecx,%ecx
   2fd22:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   2fd29:	c0 
   2fd2a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   2fd31:	c0 
   2fd32:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   2fd39:	c0 
   2fd3a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   2fd41:	c0 
   2fd42:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   2fd49:	c0 
   2fd4a:	f3 0f 1e fa          	endbr64 
   2fd4e:	48 85 d2             	test   %rdx,%rdx
   2fd51:	0f 84 62 4b fd ff    	je     48b9 <myrng+0x99>

000000000002fd57 <instr.bb_482d>:
   2fd57:	41 57                	push   %r15
   2fd59:	45 31 ff             	xor    %r15d,%r15d
   2fd5c:	41 56                	push   %r14
   2fd5e:	49 89 f6             	mov    %rsi,%r14
   2fd61:	41 55                	push   %r13
   2fd63:	49 89 d5             	mov    %rdx,%r13
   2fd66:	41 54                	push   %r12
   2fd68:	4c 8d 25 31 e4 ff ff 	lea    -0x1bcf(%rip),%r12        # 2e1a0 <rngCtx>
   2fd6f:	53                   	push   %rbx
   2fd70:	31 db                	xor    %ebx,%ebx
   2fd72:	90                   	nop
   2fd73:	90                   	nop
   2fd74:	90                   	nop
   2fd75:	90                   	nop
   2fd76:	90                   	nop
   2fd77:	90                   	nop
   2fd78:	90                   	nop
   2fd79:	90                   	nop
   2fd7a:	90                   	nop
   2fd7b:	90                   	nop
   2fd7c:	90                   	nop
   2fd7d:	90                   	nop
   2fd7e:	90                   	nop
   2fd7f:	90                   	nop

000000000002fd80 <instr.bb_4850>:
   2fd80:	31 f6                	xor    %esi,%esi
   2fd82:	4c 89 e7             	mov    %r12,%rdi
   2fd85:	e8 86 56 00 00       	callq  35410 <mbedtls_sha256_starts.instr.bb_18400>

000000000002fd8a <instr.bb_485a>:
   2fd8a:	48 8d 35 2f e3 ff ff 	lea    -0x1cd1(%rip),%rsi        # 2e0c0 <rngState>
   2fd91:	4c 89 e7             	mov    %r12,%rdi
   2fd94:	ba 20 00 00 00       	mov    $0x20,%edx
   2fd99:	e8 72 5c 00 00       	callq  35a10 <mbedtls_sha256_update.instr.bb_191e0>

000000000002fd9e <instr.bb_486e>:
   2fd9e:	48 8d 35 1b e3 ff ff 	lea    -0x1ce5(%rip),%rsi        # 2e0c0 <rngState>
   2fda5:	4c 89 e7             	mov    %r12,%rdi
   2fda8:	e8 83 5c 00 00       	callq  35a30 <mbedtls_sha256_finish.instr.bb_19200>

000000000002fdad <instr.bb_487d>:
   2fdad:	49 39 dd             	cmp    %rbx,%r13
   2fdb0:	0f 86 2f 00 00 00    	jbe    2fde5 <instr.bb_48a1>

000000000002fdb6 <instr.bb_4882>:
   2fdb6:	48 8d 0d 03 e3 ff ff 	lea    -0x1cfd(%rip),%rcx        # 2e0c0 <rngState>
   2fdbd:	48 89 d8             	mov    %rbx,%rax
   2fdc0:	48 29 d9             	sub    %rbx,%rcx
   2fdc3:	90                   	nop
   2fdc4:	90                   	nop
   2fdc5:	90                   	nop
   2fdc6:	90                   	nop
   2fdc7:	90                   	nop
   2fdc8:	90                   	nop
   2fdc9:	90                   	nop
   2fdca:	90                   	nop
   2fdcb:	90                   	nop
   2fdcc:	90                   	nop
   2fdcd:	90                   	nop
   2fdce:	90                   	nop
   2fdcf:	90                   	nop

000000000002fdd0 <instr.bb_4890>:
   2fdd0:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   2fdd4:	41 88 14 06          	mov    %dl,(%r14,%rax,1)
   2fdd8:	48 83 c0 01          	add    $0x1,%rax
   2fddc:	49 39 c5             	cmp    %rax,%r13
   2fddf:	0f 85 eb ff ff ff    	jne    2fdd0 <instr.bb_4890>

000000000002fde5 <instr.bb_48a1>:
   2fde5:	41 83 c7 20          	add    $0x20,%r15d
   2fde9:	49 63 df             	movslq %r15d,%rbx
   2fdec:	4c 39 eb             	cmp    %r13,%rbx
   2fdef:	0f 82 8b ff ff ff    	jb     2fd80 <instr.bb_4850>

000000000002fdf5 <instr.bb_48ad>:
   2fdf5:	5b                   	pop    %rbx
   2fdf6:	31 c0                	xor    %eax,%eax
   2fdf8:	41 5c                	pop    %r12
   2fdfa:	41 5d                	pop    %r13
   2fdfc:	41 5e                	pop    %r14
   2fdfe:	41 5f                	pop    %r15
   2fe00:	c3                   	retq   
   2fe01:	90                   	nop
   2fe02:	90                   	nop
   2fe03:	90                   	nop
   2fe04:	90                   	nop
   2fe05:	90                   	nop
   2fe06:	90                   	nop
   2fe07:	90                   	nop
   2fe08:	90                   	nop
   2fe09:	90                   	nop
   2fe0a:	90                   	nop
   2fe0b:	90                   	nop
   2fe0c:	90                   	nop
   2fe0d:	90                   	nop
   2fe0e:	90                   	nop
   2fe0f:	90                   	nop

000000000002fe10 <cf_init_target.instr.bb_48c0>:
   2fe10:	31 c9                	xor    %ecx,%ecx
   2fe12:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   2fe19:	c0 
   2fe1a:	f3 0f 1e fa          	endbr64 
   2fe1e:	41 54                	push   %r12
   2fe20:	48 8d 3d 79 e3 ff ff 	lea    -0x1c87(%rip),%rdi        # 2e1a0 <rngCtx>
   2fe27:	e8 b4 55 00 00       	callq  353e0 <mbedtls_sha256_init.instr.bb_18360>

000000000002fe2c <instr.bb_48d2>:
   2fe2c:	bf 00 04 00 00       	mov    $0x400,%edi
   2fe31:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2fe38:	70 00 00 
   2fe3b:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   2fe42:	00 
   2fe43:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2fe4a:	70 00 00 
   2fe4d:	48 8d 05 ec 44 fd ff 	lea    -0x2bb14(%rip),%rax        # 4340 <malloc@plt>
   2fe54:	e8 4d f6 ff ff       	callq  2f4a6 <handle_malloc>
   2fe59:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2fe60:	70 00 00 
   2fe63:	48 8b 37             	mov    (%rdi),%rsi
   2fe66:	48 d1 ee             	shr    %rsi
   2fe69:	48 89 37             	mov    %rsi,(%rdi)

000000000002fe6c <instr.bb_48dc>:
   2fe6c:	ba 00 04 00 00       	mov    $0x400,%edx
   2fe71:	31 ff                	xor    %edi,%edi
   2fe73:	49 89 c4             	mov    %rax,%r12
   2fe76:	48 89 c6             	mov    %rax,%rsi
   2fe79:	e8 a2 fe ff ff       	callq  2fd20 <myrng.instr.bb_4820>

000000000002fe7e <instr.bb_48ee>:
   2fe7e:	4c 89 e7             	mov    %r12,%rdi
   2fe81:	e8 6a 43 fd ff       	callq  41f0 <free@plt>

000000000002fe86 <instr.bb_48f6>:
   2fe86:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2fe8d:	70 00 00 
   2fe90:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   2fe97:	00 
   2fe98:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2fe9f:	70 00 00 
   2fea2:	e8 09 03 00 00       	callq  301b0 <cf_prepare_next.instr.bb_4a40>
   2fea7:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2feae:	70 00 00 
   2feb1:	48 8b 37             	mov    (%rdi),%rsi
   2feb4:	48 d1 ee             	shr    %rsi
   2feb7:	48 89 37             	mov    %rsi,(%rdi)

000000000002feba <instr.bb_48fb>:
   2feba:	41 5c                	pop    %r12
   2febc:	c3                   	retq   
   2febd:	90                   	nop
   2febe:	90                   	nop
   2febf:	90                   	nop

000000000002fec0 <cf_run_target.instr.bb_4900>:
   2fec0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   2fec4:	c5 fe 7f 8c 24 48 0e 	vmovdqu %ymm1,-0x3ffff1b8(%rsp)
   2fecb:	00 c0 
   2fecd:	c5 fe 7f 8c 24 68 0e 	vmovdqu %ymm1,-0x3ffff198(%rsp)
   2fed4:	00 c0 
   2fed6:	c5 fe 7f 8c 24 88 0e 	vmovdqu %ymm1,-0x3ffff178(%rsp)
   2fedd:	00 c0 
   2fedf:	c5 fe 7f 8c 24 a8 0e 	vmovdqu %ymm1,-0x3ffff158(%rsp)
   2fee6:	00 c0 
   2fee8:	c5 fe 7f 8c 24 c8 0e 	vmovdqu %ymm1,-0x3ffff138(%rsp)
   2feef:	00 c0 
   2fef1:	c5 fe 7f 8c 24 e8 0e 	vmovdqu %ymm1,-0x3ffff118(%rsp)
   2fef8:	00 c0 
   2fefa:	c5 fe 7f 8c 24 08 0f 	vmovdqu %ymm1,-0x3ffff0f8(%rsp)
   2ff01:	00 c0 
   2ff03:	c5 fe 7f 8c 24 28 0f 	vmovdqu %ymm1,-0x3ffff0d8(%rsp)
   2ff0a:	00 c0 
   2ff0c:	c5 fe 7f 8c 24 48 0f 	vmovdqu %ymm1,-0x3ffff0b8(%rsp)
   2ff13:	00 c0 
   2ff15:	c5 fe 7f 8c 24 68 0f 	vmovdqu %ymm1,-0x3ffff098(%rsp)
   2ff1c:	00 c0 
   2ff1e:	c5 fe 7f 8c 24 88 0f 	vmovdqu %ymm1,-0x3ffff078(%rsp)
   2ff25:	00 c0 
   2ff27:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   2ff2e:	00 c0 
   2ff30:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   2ff37:	00 c0 
   2ff39:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   2ff40:	00 c0 
   2ff42:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   2ff47:	f3 0f 1e fa          	endbr64 
   2ff4b:	41 57                	push   %r15
   2ff4d:	be 20 00 00 00       	mov    $0x20,%esi
   2ff52:	41 56                	push   %r14
   2ff54:	41 89 fe             	mov    %edi,%r14d
   2ff57:	48 8d 3d c2 e0 ff ff 	lea    -0x1f3e(%rip),%rdi        # 2e020 <ecdhOurD>
   2ff5e:	41 55                	push   %r13
   2ff60:	41 54                	push   %r12
   2ff62:	53                   	push   %rbx
   2ff63:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
   2ff6a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2ff71:	00 00 
   2ff73:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   2ff7a:	00 
   2ff7b:	31 c0                	xor    %eax,%eax
   2ff7d:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
   2ff82:	48 89 e3             	mov    %rsp,%rbx
   2ff85:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   2ff8a:	e8 e1 fa ff ff       	callq  2fa70 <classify.instr.bb_46c0>

000000000002ff8f <instr.bb_4948>:
   2ff8f:	4c 8d a4 24 90 00 00 	lea    0x90(%rsp),%r12
   2ff96:	00 
   2ff97:	4c 89 e7             	mov    %r12,%rdi
   2ff9a:	e8 3b 3d 00 00       	callq  33cda <mbedtls_ecp_group_init.instr.bb_d7c0>

000000000002ff9f <instr.bb_4958>:
   2ff9f:	be 09 00 00 00       	mov    $0x9,%esi
   2ffa4:	4c 89 e7             	mov    %r12,%rdi
   2ffa7:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2ffae:	70 00 00 
   2ffb1:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   2ffb8:	00 
   2ffb9:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   2ffc0:	70 00 00 
   2ffc3:	e8 48 52 00 00       	callq  35210 <mbedtls_ecp_group_load.instr.bb_120b0>
   2ffc8:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   2ffcf:	70 00 00 
   2ffd2:	48 8b 37             	mov    (%rdi),%rsi
   2ffd5:	48 d1 ee             	shr    %rsi
   2ffd8:	48 89 37             	mov    %rsi,(%rdi)

000000000002ffdb <instr.bb_4965>:
   2ffdb:	4c 89 ff             	mov    %r15,%rdi
   2ffde:	e8 cd 3c 00 00       	callq  33cb0 <mbedtls_ecp_point_init.instr.bb_d7a0>

000000000002ffe3 <instr.bb_496d>:
   2ffe3:	b9 20 00 00 00       	mov    $0x20,%ecx
   2ffe8:	4c 89 fe             	mov    %r15,%rsi
   2ffeb:	4c 89 e7             	mov    %r12,%rdi
   2ffee:	48 8d 15 8b e1 ff ff 	lea    -0x1e75(%rip),%rdx        # 2e180 <ecdhTheirQ>
   2fff5:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   2fffc:	70 00 00 
   2ffff:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   30006:	00 
   30007:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3000e:	70 00 00 
   30011:	e8 7a 3f 00 00       	callq  33f90 <mbedtls_ecp_point_read_binary.instr.bb_e4a0>
   30016:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3001d:	70 00 00 
   30020:	48 8b 37             	mov    (%rdi),%rsi
   30023:	48 d1 ee             	shr    %rsi
   30026:	48 89 37             	mov    %rsi,(%rdi)

0000000000030029 <instr.bb_4984>:
   30029:	48 89 df             	mov    %rbx,%rdi
   3002c:	e8 2f 03 00 00       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000030031 <instr.bb_498c>:
   30031:	ba 20 00 00 00       	mov    $0x20,%edx
   30036:	48 8d 35 e3 df ff ff 	lea    -0x201d(%rip),%rsi        # 2e020 <ecdhOurD>
   3003d:	48 89 df             	mov    %rbx,%rdi
   30040:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   30047:	70 00 00 
   3004a:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   30051:	00 
   30052:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   30059:	70 00 00 
   3005c:	e8 a7 09 00 00       	callq  30a08 <mbedtls_mpi_read_binary.instr.bb_51c0>
   30061:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   30068:	70 00 00 
   3006b:	48 8b 37             	mov    (%rdi),%rsi
   3006e:	48 d1 ee             	shr    %rsi
   30071:	48 89 37             	mov    %rsi,(%rdi)

0000000000030074 <instr.bb_49a0>:
   30074:	4c 89 ef             	mov    %r13,%rdi
   30077:	e8 e4 02 00 00       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

000000000003007c <instr.bb_49a8>:
   3007c:	45 31 c9             	xor    %r9d,%r9d
   3007f:	48 89 d9             	mov    %rbx,%rcx
   30082:	4c 89 fa             	mov    %r15,%rdx
   30085:	4c 89 ee             	mov    %r13,%rsi
   30088:	4c 8d 05 91 47 fd ff 	lea    -0x2b86f(%rip),%r8        # 4820 <myrng>
   3008f:	4c 89 e7             	mov    %r12,%rdi
   30092:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   30099:	70 00 00 
   3009c:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   300a3:	00 
   300a4:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   300ab:	70 00 00 
   300ae:	e8 cd 37 00 00       	callq  33880 <mbedtls_ecdh_compute_shared.instr.bb_bbe0>
   300b3:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   300ba:	70 00 00 
   300bd:	48 8b 37             	mov    (%rdi),%rsi
   300c0:	48 d1 ee             	shr    %rsi
   300c3:	48 89 37             	mov    %rsi,(%rdi)

00000000000300c6 <instr.bb_49c3>:
   300c6:	4c 89 ef             	mov    %r13,%rdi
   300c9:	e8 62 08 00 00       	callq  30930 <mbedtls_mpi_size.instr.bb_5140>

00000000000300ce <instr.bb_49cb>:
   300ce:	48 89 c7             	mov    %rax,%rdi
   300d1:	48 89 c3             	mov    %rax,%rbx
   300d4:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   300db:	70 00 00 
   300de:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   300e5:	00 
   300e6:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   300ed:	70 00 00 
   300f0:	48 8d 05 49 42 fd ff 	lea    -0x2bdb7(%rip),%rax        # 4340 <malloc@plt>
   300f7:	e8 aa f3 ff ff       	callq  2f4a6 <handle_malloc>
   300fc:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   30103:	70 00 00 
   30106:	48 8b 37             	mov    (%rdi),%rsi
   30109:	48 d1 ee             	shr    %rsi
   3010c:	48 89 37             	mov    %rsi,(%rdi)

000000000003010f <instr.bb_49d6>:
   3010f:	48 89 da             	mov    %rbx,%rdx
   30112:	4c 89 ef             	mov    %r13,%rdi
   30115:	48 89 c6             	mov    %rax,%rsi
   30118:	49 89 c4             	mov    %rax,%r12
   3011b:	e8 b0 09 00 00       	callq  30ad0 <mbedtls_mpi_write_binary.instr.bb_5230>

0000000000030120 <instr.bb_49e7>:
   30120:	45 84 f6             	test   %r14b,%r14b
   30123:	0f 85 37 00 00 00    	jne    30160 <instr.bb_4a20>

0000000000030129 <instr.bb_49ec>:
   30129:	4c 89 e7             	mov    %r12,%rdi
   3012c:	e8 bf 40 fd ff       	callq  41f0 <free@plt>

0000000000030131 <instr.bb_49f4>:
   30131:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   30138:	00 
   30139:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   30140:	00 00 
   30142:	0f 85 eb 48 fd ff    	jne    4a33 <cf_run_target+0x133>

0000000000030148 <instr.bb_4a07>:
   30148:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
   3014f:	5b                   	pop    %rbx
   30150:	41 5c                	pop    %r12
   30152:	41 5d                	pop    %r13
   30154:	41 5e                	pop    %r14
   30156:	41 5f                	pop    %r15
   30158:	c3                   	retq   
   30159:	90                   	nop
   3015a:	90                   	nop
   3015b:	90                   	nop
   3015c:	90                   	nop
   3015d:	90                   	nop
   3015e:	90                   	nop
   3015f:	90                   	nop

0000000000030160 <instr.bb_4a20>:
   30160:	48 8d 15 19 af fe ff 	lea    -0x150e7(%rip),%rdx        # 1b080 <_IO_stdin_used+0x80>
   30167:	89 de                	mov    %ebx,%esi
   30169:	4c 89 e7             	mov    %r12,%rdi
   3016c:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   30173:	70 00 00 
   30176:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3017d:	00 
   3017e:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   30185:	70 00 00 
   30188:	e8 83 f9 ff ff       	callq  2fb10 <dump_secret.instr.bb_4710>
   3018d:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   30194:	70 00 00 
   30197:	48 8b 37             	mov    (%rdi),%rsi
   3019a:	48 d1 ee             	shr    %rsi
   3019d:	48 89 37             	mov    %rsi,(%rdi)

00000000000301a0 <instr.bb_4a31>:
   301a0:	e9 84 ff ff ff       	jmpq   30129 <instr.bb_49ec>
   301a5:	90                   	nop
   301a6:	90                   	nop
   301a7:	90                   	nop
   301a8:	90                   	nop
   301a9:	90                   	nop
   301aa:	90                   	nop
   301ab:	90                   	nop
   301ac:	90                   	nop
   301ad:	90                   	nop
   301ae:	90                   	nop
   301af:	90                   	nop

00000000000301b0 <cf_prepare_next.instr.bb_4a40>:
   301b0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   301b4:	c5 fe 7f 8c 24 68 0e 	vmovdqu %ymm1,-0x3ffff198(%rsp)
   301bb:	00 c0 
   301bd:	c5 fe 7f 8c 24 88 0e 	vmovdqu %ymm1,-0x3ffff178(%rsp)
   301c4:	00 c0 
   301c6:	c5 fe 7f 8c 24 a8 0e 	vmovdqu %ymm1,-0x3ffff158(%rsp)
   301cd:	00 c0 
   301cf:	c5 fe 7f 8c 24 c8 0e 	vmovdqu %ymm1,-0x3ffff138(%rsp)
   301d6:	00 c0 
   301d8:	c5 fe 7f 8c 24 e8 0e 	vmovdqu %ymm1,-0x3ffff118(%rsp)
   301df:	00 c0 
   301e1:	c5 fe 7f 8c 24 08 0f 	vmovdqu %ymm1,-0x3ffff0f8(%rsp)
   301e8:	00 c0 
   301ea:	c5 fe 7f 8c 24 28 0f 	vmovdqu %ymm1,-0x3ffff0d8(%rsp)
   301f1:	00 c0 
   301f3:	c5 fe 7f 8c 24 48 0f 	vmovdqu %ymm1,-0x3ffff0b8(%rsp)
   301fa:	00 c0 
   301fc:	c5 fe 7f 8c 24 68 0f 	vmovdqu %ymm1,-0x3ffff098(%rsp)
   30203:	00 c0 
   30205:	c5 fe 7f 8c 24 88 0f 	vmovdqu %ymm1,-0x3ffff078(%rsp)
   3020c:	00 c0 
   3020e:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   30215:	00 c0 
   30217:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   3021e:	00 c0 
   30220:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   30227:	00 c0 
   30229:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   3022e:	f3 0f 1e fa          	endbr64 
   30232:	41 56                	push   %r14
   30234:	41 55                	push   %r13
   30236:	41 54                	push   %r12
   30238:	48 81 ec 80 01 00 00 	sub    $0x180,%rsp
   3023f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   30246:	00 00 
   30248:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   3024f:	00 
   30250:	31 c0                	xor    %eax,%eax
   30252:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   30257:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   3025c:	4c 8d a4 24 80 00 00 	lea    0x80(%rsp),%r12
   30263:	00 
   30264:	4c 89 e7             	mov    %r12,%rdi
   30267:	e8 6e 3a 00 00       	callq  33cda <mbedtls_ecp_group_init.instr.bb_d7c0>

000000000003026c <instr.bb_4a7e>:
   3026c:	be 09 00 00 00       	mov    $0x9,%esi
   30271:	4c 89 e7             	mov    %r12,%rdi
   30274:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3027b:	70 00 00 
   3027e:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   30285:	00 
   30286:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3028d:	70 00 00 
   30290:	e8 7b 4f 00 00       	callq  35210 <mbedtls_ecp_group_load.instr.bb_120b0>
   30295:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3029c:	70 00 00 
   3029f:	48 8b 37             	mov    (%rdi),%rsi
   302a2:	48 d1 ee             	shr    %rsi
   302a5:	48 89 37             	mov    %rsi,(%rdi)

00000000000302a8 <instr.bb_4a8b>:
   302a8:	4c 89 f7             	mov    %r14,%rdi
   302ab:	e8 b0 00 00 00       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

00000000000302b0 <instr.bb_4a93>:
   302b0:	4c 89 ef             	mov    %r13,%rdi
   302b3:	e8 f8 39 00 00       	callq  33cb0 <mbedtls_ecp_point_init.instr.bb_d7a0>

00000000000302b8 <instr.bb_4a9b>:
   302b8:	45 31 c0             	xor    %r8d,%r8d
   302bb:	4c 89 ea             	mov    %r13,%rdx
   302be:	4c 89 f6             	mov    %r14,%rsi
   302c1:	48 8d 0d 58 45 fd ff 	lea    -0x2baa8(%rip),%rcx        # 4820 <myrng>
   302c8:	4c 89 e7             	mov    %r12,%rdi
   302cb:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   302d2:	70 00 00 
   302d5:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   302dc:	00 
   302dd:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   302e4:	70 00 00 
   302e7:	e8 84 35 00 00       	callq  33870 <mbedtls_ecdh_gen_public.instr.bb_bbd0>
   302ec:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   302f3:	70 00 00 
   302f6:	48 8b 37             	mov    (%rdi),%rsi
   302f9:	48 d1 ee             	shr    %rsi
   302fc:	48 89 37             	mov    %rsi,(%rdi)

00000000000302ff <instr.bb_4ab3>:
   302ff:	ba 20 00 00 00       	mov    $0x20,%edx
   30304:	48 8d 35 55 de ff ff 	lea    -0x21ab(%rip),%rsi        # 2e160 <ecdhTheirD>
   3030b:	4c 89 f7             	mov    %r14,%rdi
   3030e:	e8 bd 07 00 00       	callq  30ad0 <mbedtls_mpi_write_binary.instr.bb_5230>

0000000000030313 <instr.bb_4ac7>:
   30313:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   30318:	4c 89 ee             	mov    %r13,%rsi
   3031b:	4c 89 e7             	mov    %r12,%rdi
   3031e:	41 b9 20 00 00 00    	mov    $0x20,%r9d
   30324:	4c 8d 05 55 de ff ff 	lea    -0x21ab(%rip),%r8        # 2e180 <ecdhTheirQ>
   3032b:	ba 01 00 00 00       	mov    $0x1,%edx
   30330:	e8 cb 3b 00 00       	callq  33f00 <mbedtls_ecp_point_write_binary.instr.bb_e300>

0000000000030335 <instr.bb_4ae9>:
   30335:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   3033c:	00 
   3033d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   30344:	00 00 
   30346:	0f 85 be 47 fd ff    	jne    4b0a <cf_prepare_next+0xca>

000000000003034c <instr.bb_4afc>:
   3034c:	48 81 c4 80 01 00 00 	add    $0x180,%rsp
   30353:	41 5c                	pop    %r12
   30355:	41 5d                	pop    %r13
   30357:	41 5e                	pop    %r14
   30359:	c3                   	retq   
   3035a:	90                   	nop
   3035b:	90                   	nop
   3035c:	90                   	nop
   3035d:	90                   	nop
   3035e:	90                   	nop
   3035f:	90                   	nop

0000000000030360 <mbedtls_mpi_init.instr.bb_4b70>:
   30360:	31 c9                	xor    %ecx,%ecx
   30362:	f3 0f 1e fa          	endbr64 
   30366:	8b 8f 00 10 00 c0    	mov    -0x3ffff000(%rdi),%ecx
   3036c:	85 c9                	test   %ecx,%ecx
   3036e:	0f 84 10 00 00 00    	je     30384 <mbedtls_mpi_init.instr.bb_4b70+0x24>
   30374:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   30379:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3037e:	89 8f 00 10 00 c0    	mov    %ecx,-0x3ffff000(%rdi)
   30384:	83 f1 01             	xor    $0x1,%ecx
   30387:	89 0f                	mov    %ecx,(%rdi)
   30389:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   30390:	00 
   30391:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   30398:	00 
   30399:	c3                   	retq   
   3039a:	90                   	nop
   3039b:	90                   	nop
   3039c:	90                   	nop
   3039d:	90                   	nop
   3039e:	90                   	nop
   3039f:	90                   	nop

00000000000303a0 <mbedtls_mpi_free.instr.bb_4b90>:
   303a0:	31 c9                	xor    %ecx,%ecx
   303a2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   303a9:	c0 
   303aa:	f3 0f 1e fa          	endbr64 
   303ae:	48 85 ff             	test   %rdi,%rdi
   303b1:	0f 84 29 48 fd ff    	je     4be0 <mbedtls_mpi_free+0x50>

00000000000303b7 <instr.bb_4b99>:
   303b7:	53                   	push   %rbx
   303b8:	48 89 fb             	mov    %rdi,%rbx
   303bb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   303bf:	48 85 ff             	test   %rdi,%rdi
   303c2:	0f 84 1a 00 00 00    	je     303e2 <instr.bb_4bc0>

00000000000303c8 <instr.bb_4ba6>:
   303c8:	48 8b 43 08          	mov    0x8(%rbx),%rax
   303cc:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   303d3:	00 
   303d4:	e8 f7 4f 00 00       	callq  353d0 <mbedtls_platform_zeroize.instr.bb_14c70>

00000000000303d9 <instr.bb_4bb7>:
   303d9:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   303dd:	e8 0e 3e fd ff       	callq  41f0 <free@plt>

00000000000303e2 <instr.bb_4bc0>:
   303e2:	8b 8b 00 10 00 c0    	mov    -0x3ffff000(%rbx),%ecx
   303e8:	85 c9                	test   %ecx,%ecx
   303ea:	0f 84 10 00 00 00    	je     30400 <instr.bb_4bc0+0x1e>
   303f0:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   303f5:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   303fa:	89 8b 00 10 00 c0    	mov    %ecx,-0x3ffff000(%rbx)
   30400:	83 f1 01             	xor    $0x1,%ecx
   30403:	89 0b                	mov    %ecx,(%rbx)
   30405:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   3040c:	00 
   3040d:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   30414:	00 
   30415:	5b                   	pop    %rbx
   30416:	c3                   	retq   
   30417:	90                   	nop
   30418:	90                   	nop
   30419:	90                   	nop
   3041a:	90                   	nop
   3041b:	90                   	nop
   3041c:	90                   	nop
   3041d:	90                   	nop
   3041e:	90                   	nop
   3041f:	90                   	nop

0000000000030420 <mbedtls_mpi_grow.instr.bb_4bf0>:
   30420:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   30425:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3042a:	88 8c 24 e8 0f 00 c0 	mov    %cl,-0x3ffff018(%rsp)
   30431:	88 8c 24 f0 0f 00 c0 	mov    %cl,-0x3ffff010(%rsp)
   30438:	31 c9                	xor    %ecx,%ecx
   3043a:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   30441:	c0 
   30442:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   30449:	c0 
   3044a:	88 8c 24 e9 0f 00 c0 	mov    %cl,-0x3ffff017(%rsp)
   30451:	66 89 8c 24 ea 0f 00 	mov    %cx,-0x3ffff016(%rsp)
   30458:	c0 
   30459:	89 8c 24 ec 0f 00 c0 	mov    %ecx,-0x3ffff014(%rsp)
   30460:	88 8c 24 f1 0f 00 c0 	mov    %cl,-0x3ffff00f(%rsp)
   30467:	66 89 8c 24 f2 0f 00 	mov    %cx,-0x3ffff00e(%rsp)
   3046e:	c0 
   3046f:	89 8c 24 f4 0f 00 c0 	mov    %ecx,-0x3ffff00c(%rsp)
   30476:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   3047d:	c0 
   3047e:	f3 0f 1e fa          	endbr64 
   30482:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
   30489:	0f 87 f7 47 fd ff    	ja     4c86 <mbedtls_mpi_grow+0x96>

000000000003048f <instr.bb_4c01>:
   3048f:	41 56                	push   %r14
   30491:	31 c0                	xor    %eax,%eax
   30493:	48 8b 8c 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%rcx
   3049a:	c0 
   3049b:	48 85 c9             	test   %rcx,%rcx
   3049e:	0f 84 12 00 00 00    	je     304b6 <instr.bb_4c01+0x27>
   304a4:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   304a9:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   304ae:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   304b5:	c0 
   304b6:	4c 31 e9             	xor    %r13,%rcx
   304b9:	51                   	push   %rcx
   304ba:	48 8b 8c 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%rcx
   304c1:	c0 
   304c2:	48 85 c9             	test   %rcx,%rcx
   304c5:	0f 84 12 00 00 00    	je     304dd <instr.bb_4c01+0x4e>
   304cb:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   304d0:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   304d5:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   304dc:	c0 
   304dd:	4c 31 e1             	xor    %r12,%rcx
   304e0:	51                   	push   %rcx
   304e1:	55                   	push   %rbp
   304e2:	48 89 fd             	mov    %rdi,%rbp
   304e5:	53                   	push   %rbx
   304e6:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   304ea:	48 89 f3             	mov    %rsi,%rbx
   304ed:	49 39 f4             	cmp    %rsi,%r12
   304f0:	0f 82 2a 00 00 00    	jb     30520 <instr.bb_4c28>

00000000000304f6 <instr.bb_4c1a>:
   304f6:	5b                   	pop    %rbx
   304f7:	5d                   	pop    %rbp
   304f8:	4c 8b a4 24 00 10 00 	mov    -0x3ffff000(%rsp),%r12
   304ff:	c0 
   30500:	4c 33 24 24          	xor    (%rsp),%r12
   30504:	48 83 c4 08          	add    $0x8,%rsp
   30508:	4c 8b ac 24 00 10 00 	mov    -0x3ffff000(%rsp),%r13
   3050f:	c0 
   30510:	4c 33 2c 24          	xor    (%rsp),%r13
   30514:	48 83 c4 08          	add    $0x8,%rsp
   30518:	41 5e                	pop    %r14
   3051a:	c3                   	retq   
   3051b:	90                   	nop
   3051c:	90                   	nop
   3051d:	90                   	nop
   3051e:	90                   	nop
   3051f:	90                   	nop

0000000000030520 <instr.bb_4c28>:
   30520:	be 08 00 00 00       	mov    $0x8,%esi
   30525:	48 89 df             	mov    %rbx,%rdi
   30528:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3052f:	70 00 00 
   30532:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   30539:	00 
   3053a:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   30541:	70 00 00 
   30544:	48 8d 05 85 3d fd ff 	lea    -0x2c27b(%rip),%rax        # 42d0 <calloc@plt>
   3054b:	e8 bd ef ff ff       	callq  2f50d <handle_calloc>
   30550:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   30557:	70 00 00 
   3055a:	48 8b 37             	mov    (%rdi),%rsi
   3055d:	48 d1 ee             	shr    %rsi
   30560:	48 89 37             	mov    %rsi,(%rdi)

0000000000030563 <instr.bb_4c35>:
   30563:	49 89 c5             	mov    %rax,%r13
   30566:	48 85 c0             	test   %rax,%rax
   30569:	0f 84 10 47 fd ff    	je     4c7f <mbedtls_mpi_grow+0x8f>

000000000003056f <instr.bb_4c3d>:
   3056f:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   30573:	4d 85 f6             	test   %r14,%r14
   30576:	0f 84 26 00 00 00    	je     305a2 <instr.bb_4c6c>

000000000003057c <instr.bb_4c46>:
   3057c:	49 c1 e4 03          	shl    $0x3,%r12
   30580:	4c 89 f6             	mov    %r14,%rsi
   30583:	48 89 c7             	mov    %rax,%rdi
   30586:	4c 89 e2             	mov    %r12,%rdx
   30589:	e8 92 3d fd ff       	callq  4320 <memcpy@plt>

000000000003058e <instr.bb_4c58>:
   3058e:	4c 89 f7             	mov    %r14,%rdi
   30591:	4c 89 e6             	mov    %r12,%rsi
   30594:	e8 37 4e 00 00       	callq  353d0 <mbedtls_platform_zeroize.instr.bb_14c70>

0000000000030599 <instr.bb_4c63>:
   30599:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   3059d:	e8 4e 3c fd ff       	callq  41f0 <free@plt>

00000000000305a2 <instr.bb_4c6c>:
   305a2:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   305a6:	31 c0                	xor    %eax,%eax
   305a8:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   305ac:	5b                   	pop    %rbx
   305ad:	5d                   	pop    %rbp
   305ae:	4c 8b a4 24 00 10 00 	mov    -0x3ffff000(%rsp),%r12
   305b5:	c0 
   305b6:	4c 33 24 24          	xor    (%rsp),%r12
   305ba:	48 83 c4 08          	add    $0x8,%rsp
   305be:	4c 8b ac 24 00 10 00 	mov    -0x3ffff000(%rsp),%r13
   305c5:	c0 
   305c6:	4c 33 2c 24          	xor    (%rsp),%r13
   305ca:	48 83 c4 08          	add    $0x8,%rsp
   305ce:	41 5e                	pop    %r14
   305d0:	c3                   	retq   
   305d1:	90                   	nop
   305d2:	90                   	nop
   305d3:	90                   	nop
   305d4:	90                   	nop
   305d5:	90                   	nop
   305d6:	90                   	nop
   305d7:	90                   	nop
   305d8:	90                   	nop
   305d9:	90                   	nop
   305da:	90                   	nop
   305db:	90                   	nop
   305dc:	90                   	nop
   305dd:	90                   	nop
   305de:	90                   	nop
   305df:	90                   	nop

00000000000305e0 <mbedtls_mpi_resize_clear.instr.bb_4c90>:
   305e0:	31 c9                	xor    %ecx,%ecx
   305e2:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   305e9:	c0 
   305ea:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   305f1:	c0 
   305f2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   305f9:	c0 
   305fa:	41 54                	push   %r12
   305fc:	49 89 fc             	mov    %rdi,%r12
   305ff:	55                   	push   %rbp
   30600:	48 83 ec 08          	sub    $0x8,%rsp
   30604:	48 85 f6             	test   %rsi,%rsi
   30607:	0f 84 db 46 fd ff    	je     4ce8 <mbedtls_mpi_resize_clear+0x58>

000000000003060d <instr.bb_4c9f>:
   3060d:	48 89 f5             	mov    %rsi,%rbp
   30610:	48 39 77 08          	cmp    %rsi,0x8(%rdi)
   30614:	0f 84 a6 46 fd ff    	je     4cc0 <mbedtls_mpi_resize_clear+0x30>

000000000003061a <instr.bb_4ca8>:
   3061a:	e8 81 fd ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

000000000003061f <instr.bb_4cad>:
   3061f:	48 83 c4 08          	add    $0x8,%rsp
   30623:	48 89 ee             	mov    %rbp,%rsi
   30626:	4c 89 e7             	mov    %r12,%rdi
   30629:	5d                   	pop    %rbp
   3062a:	41 5c                	pop    %r12
   3062c:	e9 ef fd ff ff       	jmpq   30420 <mbedtls_mpi_grow.instr.bb_4bf0>
   30631:	90                   	nop
   30632:	90                   	nop
   30633:	90                   	nop
   30634:	90                   	nop
   30635:	90                   	nop
   30636:	90                   	nop
   30637:	90                   	nop
   30638:	90                   	nop
   30639:	90                   	nop
   3063a:	90                   	nop
   3063b:	90                   	nop
   3063c:	90                   	nop
   3063d:	90                   	nop
   3063e:	90                   	nop
   3063f:	90                   	nop

0000000000030640 <mbedtls_mpi_copy.instr.bb_4e20>:
   30640:	31 c9                	xor    %ecx,%ecx
   30642:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   30649:	c0 
   3064a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   30651:	c0 
   30652:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   30659:	c0 
   3065a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   30661:	c0 
   30662:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30669:	c0 
   3066a:	f3 0f 1e fa          	endbr64 
   3066e:	41 55                	push   %r13
   30670:	41 54                	push   %r12
   30672:	55                   	push   %rbp
   30673:	53                   	push   %rbx
   30674:	48 83 ec 08          	sub    $0x8,%rsp
   30678:	48 39 f7             	cmp    %rsi,%rdi
   3067b:	0f 84 8f 48 fd ff    	je     4f10 <mbedtls_mpi_copy+0xf0>

0000000000030681 <instr.bb_4e37>:
   30681:	48 8b 46 08          	mov    0x8(%rsi),%rax
   30685:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   30689:	48 89 fd             	mov    %rdi,%rbp
   3068c:	49 89 f4             	mov    %rsi,%r12
   3068f:	48 85 c0             	test   %rax,%rax
   30692:	0f 84 48 48 fd ff    	je     4ee0 <mbedtls_mpi_copy+0xc0>

0000000000030698 <instr.bb_4e4e>:
   30698:	48 83 e8 01          	sub    $0x1,%rax
   3069c:	0f 84 5e 48 fd ff    	je     4f00 <mbedtls_mpi_copy+0xe0>

00000000000306a2 <instr.bb_4e58>:
   306a2:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   306a6:	e9 0f 00 00 00       	jmpq   306ba <instr.bb_4e6a>
   306ab:	90                   	nop
   306ac:	90                   	nop
   306ad:	90                   	nop
   306ae:	90                   	nop
   306af:	90                   	nop

00000000000306b0 <instr.bb_4e60>:
   306b0:	48 83 e8 01          	sub    $0x1,%rax
   306b4:	0f 84 46 48 fd ff    	je     4f00 <mbedtls_mpi_copy+0xe0>

00000000000306ba <instr.bb_4e6a>:
   306ba:	48 83 3c c1 00       	cmpq   $0x0,(%rcx,%rax,8)
   306bf:	0f 84 eb ff ff ff    	je     306b0 <instr.bb_4e60>

00000000000306c5 <instr.bb_4e71>:
   306c5:	48 8d 58 01          	lea    0x1(%rax),%rbx

00000000000306c9 <instr.bb_4e75>:
   306c9:	41 8b 84 24 00 10 00 	mov    -0x3ffff000(%r12),%eax
   306d0:	c0 
   306d1:	41 33 04 24          	xor    (%r12),%eax
   306d5:	8b 8d 00 10 00 c0    	mov    -0x3ffff000(%rbp),%ecx
   306db:	85 c9                	test   %ecx,%ecx
   306dd:	0f 84 10 00 00 00    	je     306f3 <instr.bb_4e75+0x2a>
   306e3:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   306e8:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   306ed:	89 8d 00 10 00 c0    	mov    %ecx,-0x3ffff000(%rbp)
   306f3:	31 c1                	xor    %eax,%ecx
   306f5:	89 4d 00             	mov    %ecx,0x0(%rbp)
   306f8:	48 39 da             	cmp    %rbx,%rdx
   306fb:	0f 83 9f 47 fd ff    	jae    4ea0 <mbedtls_mpi_copy+0x80>

0000000000030701 <instr.bb_4e81>:
   30701:	48 89 de             	mov    %rbx,%rsi
   30704:	48 89 ef             	mov    %rbp,%rdi
   30707:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3070e:	70 00 00 
   30711:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   30718:	00 
   30719:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   30720:	70 00 00 
   30723:	e8 f8 fc ff ff       	callq  30420 <mbedtls_mpi_grow.instr.bb_4bf0>
   30728:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3072f:	70 00 00 
   30732:	48 8b 37             	mov    (%rdi),%rsi
   30735:	48 d1 ee             	shr    %rsi
   30738:	48 89 37             	mov    %rsi,(%rdi)

000000000003073b <instr.bb_4e8c>:
   3073b:	41 89 c5             	mov    %eax,%r13d
   3073e:	85 c0                	test   %eax,%eax
   30740:	0f 85 8b 47 fd ff    	jne    4ed1 <mbedtls_mpi_copy+0xb1>

0000000000030746 <instr.bb_4e93>:
   30746:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
   3074d:	00 
   3074e:	e9 6a 47 fd ff       	jmpq   4ebd <mbedtls_mpi_copy+0x9d>
   30753:	90                   	nop
   30754:	90                   	nop
   30755:	90                   	nop
   30756:	90                   	nop
   30757:	90                   	nop
   30758:	90                   	nop
   30759:	90                   	nop
   3075a:	90                   	nop
   3075b:	90                   	nop
   3075c:	90                   	nop
   3075d:	90                   	nop
   3075e:	90                   	nop
   3075f:	90                   	nop

0000000000030760 <mbedtls_mpi_lset.instr.bb_4f90>:
   30760:	31 c9                	xor    %ecx,%ecx
   30762:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   30769:	c0 
   3076a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   30771:	c0 
   30772:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30779:	c0 
   3077a:	f3 0f 1e fa          	endbr64 
   3077e:	41 54                	push   %r12
   30780:	55                   	push   %rbp
   30781:	48 89 f5             	mov    %rsi,%rbp
   30784:	be 01 00 00 00       	mov    $0x1,%esi
   30789:	53                   	push   %rbx
   3078a:	48 89 fb             	mov    %rdi,%rbx
   3078d:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   30794:	70 00 00 
   30797:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3079e:	00 
   3079f:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   307a6:	70 00 00 
   307a9:	e8 72 fc ff ff       	callq  30420 <mbedtls_mpi_grow.instr.bb_4bf0>
   307ae:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   307b5:	70 00 00 
   307b8:	48 8b 37             	mov    (%rdi),%rsi
   307bb:	48 d1 ee             	shr    %rsi
   307be:	48 89 37             	mov    %rsi,(%rdi)

00000000000307c1 <instr.bb_4fa8>:
   307c1:	41 89 c4             	mov    %eax,%r12d
   307c4:	85 c0                	test   %eax,%eax
   307c6:	0f 84 14 00 00 00    	je     307e0 <instr.bb_4fc0>

00000000000307cc <instr.bb_4faf>:
   307cc:	44 89 e0             	mov    %r12d,%eax
   307cf:	5b                   	pop    %rbx
   307d0:	5d                   	pop    %rbp
   307d1:	41 5c                	pop    %r12
   307d3:	c3                   	retq   
   307d4:	90                   	nop
   307d5:	90                   	nop
   307d6:	90                   	nop
   307d7:	90                   	nop
   307d8:	90                   	nop
   307d9:	90                   	nop
   307da:	90                   	nop
   307db:	90                   	nop
   307dc:	90                   	nop
   307dd:	90                   	nop
   307de:	90                   	nop
   307df:	90                   	nop

00000000000307e0 <instr.bb_4fc0>:
   307e0:	48 8b 43 08          	mov    0x8(%rbx),%rax
   307e4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   307e8:	31 f6                	xor    %esi,%esi
   307ea:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   307f1:	00 
   307f2:	e8 a9 3a fd ff       	callq  42a0 <memset@plt>

00000000000307f7 <instr.bb_4fd7>:
   307f7:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   307fb:	48 89 ee             	mov    %rbp,%rsi
   307fe:	b8 01 00 00 00       	mov    $0x1,%eax
   30803:	48 85 ed             	test   %rbp,%rbp
   30806:	0f 89 08 00 00 00    	jns    30814 <instr.bb_4ff0>

000000000003080c <instr.bb_4fe8>:
   3080c:	48 f7 de             	neg    %rsi
   3080f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax

0000000000030814 <instr.bb_4ff0>:
   30814:	f3 0f 1e fa          	endbr64 
   30818:	48 89 32             	mov    %rsi,(%rdx)
   3081b:	8b 8b 00 10 00 c0    	mov    -0x3ffff000(%rbx),%ecx
   30821:	85 c9                	test   %ecx,%ecx
   30823:	0f 84 10 00 00 00    	je     30839 <instr.bb_4ff0+0x25>
   30829:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   3082e:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   30833:	89 8b 00 10 00 c0    	mov    %ecx,-0x3ffff000(%rbx)
   30839:	31 c1                	xor    %eax,%ecx
   3083b:	89 0b                	mov    %ecx,(%rbx)
   3083d:	44 89 e0             	mov    %r12d,%eax
   30840:	5b                   	pop    %rbx
   30841:	5d                   	pop    %rbp
   30842:	41 5c                	pop    %r12
   30844:	c3                   	retq   
   30845:	90                   	nop
   30846:	90                   	nop
   30847:	90                   	nop
   30848:	90                   	nop
   30849:	90                   	nop
   3084a:	90                   	nop
   3084b:	90                   	nop
   3084c:	90                   	nop
   3084d:	90                   	nop
   3084e:	90                   	nop
   3084f:	90                   	nop

0000000000030850 <mbedtls_mpi_get_bit.instr.bb_5010>:
   30850:	31 c9                	xor    %ecx,%ecx
   30852:	f3 0f 1e fa          	endbr64 
   30856:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   3085a:	31 c0                	xor    %eax,%eax
   3085c:	48 c1 e2 06          	shl    $0x6,%rdx
   30860:	48 39 f2             	cmp    %rsi,%rdx
   30863:	0f 86 22 00 00 00    	jbe    3088b <instr.bb_5023+0x22>

0000000000030869 <instr.bb_5023>:
   30869:	48 8b 47 10          	mov    0x10(%rdi),%rax
   3086d:	48 89 f2             	mov    %rsi,%rdx
   30870:	89 f1                	mov    %esi,%ecx
   30872:	48 c1 ea 06          	shr    $0x6,%rdx
   30876:	48 89 c7             	mov    %rax,%rdi
   30879:	48 8b 84 d7 00 10 00 	mov    -0x3ffff000(%rdi,%rdx,8),%rax
   30880:	c0 
   30881:	48 33 04 d7          	xor    (%rdi,%rdx,8),%rax
   30885:	48 d3 e8             	shr    %cl,%rax
   30888:	83 e0 01             	and    $0x1,%eax
   3088b:	c3                   	retq   
   3088c:	90                   	nop
   3088d:	90                   	nop
   3088e:	90                   	nop
   3088f:	90                   	nop

0000000000030890 <mbedtls_mpi_set_bit.instr.bb_5040>:
   30890:	31 c9                	xor    %ecx,%ecx
   30892:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   30899:	c0 
   3089a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   308a1:	c0 
   308a2:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   308a9:	c0 
   308aa:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   308b1:	c0 
   308b2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   308b9:	c0 
   308ba:	f3 0f 1e fa          	endbr64 
   308be:	41 55                	push   %r13
   308c0:	49 89 f5             	mov    %rsi,%r13
   308c3:	41 54                	push   %r12
   308c5:	49 c1 ed 06          	shr    $0x6,%r13
   308c9:	55                   	push   %rbp
   308ca:	53                   	push   %rbx
   308cb:	48 83 ec 08          	sub    $0x8,%rsp
   308cf:	80 fa 01             	cmp    $0x1,%dl
   308d2:	0f 87 e8 47 fd ff    	ja     50c0 <mbedtls_mpi_set_bit+0x80>

00000000000308d8 <instr.bb_505a>:
   308d8:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   308dc:	48 89 fd             	mov    %rdi,%rbp
   308df:	48 89 f3             	mov    %rsi,%rbx
   308e2:	41 89 d4             	mov    %edx,%r12d
   308e5:	48 c1 e1 06          	shl    $0x6,%rcx
   308e9:	48 39 f1             	cmp    %rsi,%rcx
   308ec:	0f 87 91 47 fd ff    	ja     5083 <mbedtls_mpi_set_bit+0x43>

00000000000308f2 <instr.bb_5070>:
   308f2:	31 c0                	xor    %eax,%eax
   308f4:	84 d2                	test   %dl,%dl
   308f6:	0f 84 b1 47 fd ff    	je     50ad <mbedtls_mpi_set_bit+0x6d>
   308fc:	e9 75 47 fd ff       	jmpq   5076 <mbedtls_mpi_set_bit+0x36>
   30901:	90                   	nop
   30902:	90                   	nop
   30903:	90                   	nop
   30904:	90                   	nop
   30905:	90                   	nop
   30906:	90                   	nop
   30907:	90                   	nop
   30908:	90                   	nop
   30909:	90                   	nop
   3090a:	90                   	nop
   3090b:	90                   	nop
   3090c:	90                   	nop
   3090d:	90                   	nop
   3090e:	90                   	nop
   3090f:	90                   	nop

0000000000030910 <mbedtls_mpi_bitlen.instr.bb_5120>:
   30910:	31 c9                	xor    %ecx,%ecx
   30912:	f3 0f 1e fa          	endbr64 
   30916:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   3091a:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   3091e:	e9 bd 21 00 00       	jmpq   32ae0 <mbedtls_mpi_core_bitlen.instr.bb_9f40>
   30923:	90                   	nop
   30924:	90                   	nop
   30925:	90                   	nop
   30926:	90                   	nop
   30927:	90                   	nop
   30928:	90                   	nop
   30929:	90                   	nop
   3092a:	90                   	nop
   3092b:	90                   	nop
   3092c:	90                   	nop
   3092d:	90                   	nop
   3092e:	90                   	nop
   3092f:	90                   	nop

0000000000030930 <mbedtls_mpi_size.instr.bb_5140>:
   30930:	31 c9                	xor    %ecx,%ecx
   30932:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30939:	c0 
   3093a:	f3 0f 1e fa          	endbr64 
   3093e:	48 83 ec 08          	sub    $0x8,%rsp
   30942:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   30946:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   3094a:	e8 91 21 00 00       	callq  32ae0 <mbedtls_mpi_core_bitlen.instr.bb_9f40>

000000000003094f <instr.bb_5155>:
   3094f:	48 83 c4 08          	add    $0x8,%rsp
   30953:	48 83 c0 07          	add    $0x7,%rax
   30957:	48 c1 e8 03          	shr    $0x3,%rax
   3095b:	c3                   	retq   
   3095c:	90                   	nop
   3095d:	90                   	nop
   3095e:	90                   	nop
   3095f:	90                   	nop

0000000000030960 <mbedtls_mpi_read_binary_le.instr.bb_5170>:
   30960:	31 c9                	xor    %ecx,%ecx
   30962:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   30969:	c0 
   3096a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   30971:	c0 
   30972:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30979:	c0 
   3097a:	f3 0f 1e fa          	endbr64 
   3097e:	41 55                	push   %r13
   30980:	48 89 d0             	mov    %rdx,%rax
   30983:	49 89 f5             	mov    %rsi,%r13
   30986:	31 f6                	xor    %esi,%esi
   30988:	41 54                	push   %r12
   3098a:	f6 c2 07             	test   $0x7,%dl
   3098d:	49 89 d4             	mov    %rdx,%r12
   30990:	53                   	push   %rbx
   30991:	40 0f 95 c6          	setne  %sil
   30995:	48 c1 e8 03          	shr    $0x3,%rax
   30999:	48 89 fb             	mov    %rdi,%rbx
   3099c:	48 01 c6             	add    %rax,%rsi
   3099f:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   309a6:	70 00 00 
   309a9:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   309b0:	00 
   309b1:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   309b8:	70 00 00 
   309bb:	e8 20 fc ff ff       	callq  305e0 <mbedtls_mpi_resize_clear.instr.bb_4c90>
   309c0:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   309c7:	70 00 00 
   309ca:	48 8b 37             	mov    (%rdi),%rsi
   309cd:	48 d1 ee             	shr    %rsi
   309d0:	48 89 37             	mov    %rsi,(%rdi)

00000000000309d3 <instr.bb_519a>:
   309d3:	85 c0                	test   %eax,%eax
   309d5:	0f 84 15 00 00 00    	je     309f0 <instr.bb_51a8>

00000000000309db <instr.bb_519e>:
   309db:	5b                   	pop    %rbx
   309dc:	41 5c                	pop    %r12
   309de:	41 5d                	pop    %r13
   309e0:	c3                   	retq   
   309e1:	90                   	nop
   309e2:	90                   	nop
   309e3:	90                   	nop
   309e4:	90                   	nop
   309e5:	90                   	nop
   309e6:	90                   	nop
   309e7:	90                   	nop
   309e8:	90                   	nop
   309e9:	90                   	nop
   309ea:	90                   	nop
   309eb:	90                   	nop
   309ec:	90                   	nop
   309ed:	90                   	nop
   309ee:	90                   	nop
   309ef:	90                   	nop

00000000000309f0 <instr.bb_51a8>:
   309f0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   309f4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   309f8:	4c 89 e1             	mov    %r12,%rcx
   309fb:	4c 89 ea             	mov    %r13,%rdx
   309fe:	5b                   	pop    %rbx
   309ff:	41 5c                	pop    %r12
   30a01:	41 5d                	pop    %r13
   30a03:	e9 48 22 00 00       	jmpq   32c50 <mbedtls_mpi_core_read_le.instr.bb_a090>

0000000000030a08 <mbedtls_mpi_read_binary.instr.bb_51c0>:
   30a08:	31 c9                	xor    %ecx,%ecx
   30a0a:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   30a11:	c0 
   30a12:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   30a19:	c0 
   30a1a:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30a21:	c0 
   30a22:	f3 0f 1e fa          	endbr64 
   30a26:	41 55                	push   %r13
   30a28:	48 89 d0             	mov    %rdx,%rax
   30a2b:	49 89 f5             	mov    %rsi,%r13
   30a2e:	31 f6                	xor    %esi,%esi
   30a30:	41 54                	push   %r12
   30a32:	f6 c2 07             	test   $0x7,%dl
   30a35:	49 89 d4             	mov    %rdx,%r12
   30a38:	53                   	push   %rbx
   30a39:	40 0f 95 c6          	setne  %sil
   30a3d:	48 c1 e8 03          	shr    $0x3,%rax
   30a41:	48 89 fb             	mov    %rdi,%rbx
   30a44:	48 01 c6             	add    %rax,%rsi
   30a47:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   30a4e:	70 00 00 
   30a51:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   30a58:	00 
   30a59:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   30a60:	70 00 00 
   30a63:	e8 78 fb ff ff       	callq  305e0 <mbedtls_mpi_resize_clear.instr.bb_4c90>
   30a68:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   30a6f:	70 00 00 
   30a72:	48 8b 37             	mov    (%rdi),%rsi
   30a75:	48 d1 ee             	shr    %rsi
   30a78:	48 89 37             	mov    %rsi,(%rdi)

0000000000030a7b <instr.bb_51ea>:
   30a7b:	85 c0                	test   %eax,%eax
   30a7d:	0f 84 0d 00 00 00    	je     30a90 <instr.bb_51f8>

0000000000030a83 <instr.bb_51ee>:
   30a83:	5b                   	pop    %rbx
   30a84:	41 5c                	pop    %r12
   30a86:	41 5d                	pop    %r13
   30a88:	c3                   	retq   
   30a89:	90                   	nop
   30a8a:	90                   	nop
   30a8b:	90                   	nop
   30a8c:	90                   	nop
   30a8d:	90                   	nop
   30a8e:	90                   	nop
   30a8f:	90                   	nop

0000000000030a90 <instr.bb_51f8>:
   30a90:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   30a94:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   30a98:	4c 89 e1             	mov    %r12,%rcx
   30a9b:	4c 89 ea             	mov    %r13,%rdx
   30a9e:	5b                   	pop    %rbx
   30a9f:	41 5c                	pop    %r12
   30aa1:	41 5d                	pop    %r13
   30aa3:	e9 58 22 00 00       	jmpq   32d00 <mbedtls_mpi_core_read_be.instr.bb_a110>

0000000000030aa8 <mbedtls_mpi_write_binary_le.instr.bb_5210>:
   30aa8:	31 c9                	xor    %ecx,%ecx
   30aaa:	f3 0f 1e fa          	endbr64 
   30aae:	49 89 f0             	mov    %rsi,%r8
   30ab1:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   30ab5:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   30ab9:	48 89 d1             	mov    %rdx,%rcx
   30abc:	4c 89 c2             	mov    %r8,%rdx
   30abf:	e9 ac 22 00 00       	jmpq   32d70 <mbedtls_mpi_core_write_le.instr.bb_a1b0>
   30ac4:	90                   	nop
   30ac5:	90                   	nop
   30ac6:	90                   	nop
   30ac7:	90                   	nop
   30ac8:	90                   	nop
   30ac9:	90                   	nop
   30aca:	90                   	nop
   30acb:	90                   	nop
   30acc:	90                   	nop
   30acd:	90                   	nop
   30ace:	90                   	nop
   30acf:	90                   	nop

0000000000030ad0 <mbedtls_mpi_write_binary.instr.bb_5230>:
   30ad0:	31 c9                	xor    %ecx,%ecx
   30ad2:	f3 0f 1e fa          	endbr64 
   30ad6:	49 89 f0             	mov    %rsi,%r8
   30ad9:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   30add:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   30ae1:	48 89 d1             	mov    %rdx,%rcx
   30ae4:	4c 89 c2             	mov    %r8,%rdx
   30ae7:	e9 44 23 00 00       	jmpq   32e30 <mbedtls_mpi_core_write_be.instr.bb_a280>
   30aec:	90                   	nop
   30aed:	90                   	nop
   30aee:	90                   	nop
   30aef:	90                   	nop

0000000000030af0 <mbedtls_mpi_shift_l.instr.bb_5250>:
   30af0:	31 c9                	xor    %ecx,%ecx
   30af2:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   30af9:	c0 
   30afa:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   30b01:	c0 
   30b02:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   30b09:	c0 
   30b0a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   30b11:	c0 
   30b12:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30b19:	c0 
   30b1a:	f3 0f 1e fa          	endbr64 
   30b1e:	41 55                	push   %r13
   30b20:	49 89 f5             	mov    %rsi,%r13
   30b23:	41 54                	push   %r12
   30b25:	49 89 f4             	mov    %rsi,%r12
   30b28:	55                   	push   %rbp
   30b29:	48 89 fd             	mov    %rdi,%rbp
   30b2c:	41 83 e4 3f          	and    $0x3f,%r12d
   30b30:	53                   	push   %rbx
   30b31:	48 89 f3             	mov    %rsi,%rbx
   30b34:	48 c1 eb 06          	shr    $0x6,%rbx
   30b38:	48 83 ec 08          	sub    $0x8,%rsp
   30b3c:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   30b40:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   30b44:	e8 97 1f 00 00       	callq  32ae0 <mbedtls_mpi_core_bitlen.instr.bb_9f40>

0000000000030b49 <instr.bb_527f>:
   30b49:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   30b4d:	4c 01 e8             	add    %r13,%rax
   30b50:	48 c1 e2 06          	shl    $0x6,%rdx
   30b54:	48 39 c2             	cmp    %rax,%rdx
   30b57:	0f 82 eb 47 fd ff    	jb     5348 <mbedtls_mpi_shift_l+0xf8>

0000000000030b5d <instr.bb_5293>:
   30b5d:	49 83 fd 3f          	cmp    $0x3f,%r13
   30b61:	0f 86 88 47 fd ff    	jbe    52ef <mbedtls_mpi_shift_l+0x9f>

0000000000030b67 <instr.bb_5299>:
   30b67:	48 8b 45 08          	mov    0x8(%rbp),%rax
   30b6b:	48 39 c3             	cmp    %rax,%rbx
   30b6e:	0f 83 60 47 fd ff    	jae    52d4 <mbedtls_mpi_shift_l+0x84>
   30b74:	e9 29 47 fd ff       	jmpq   52a2 <mbedtls_mpi_shift_l+0x52>
   30b79:	90                   	nop
   30b7a:	90                   	nop
   30b7b:	90                   	nop
   30b7c:	90                   	nop
   30b7d:	90                   	nop
   30b7e:	90                   	nop
   30b7f:	90                   	nop

0000000000030b80 <mbedtls_mpi_shift_r.instr.bb_5380>:
   30b80:	31 c9                	xor    %ecx,%ecx
   30b82:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30b89:	c0 
   30b8a:	f3 0f 1e fa          	endbr64 
   30b8e:	4c 8b 47 08          	mov    0x8(%rdi),%r8
   30b92:	4d 85 c0             	test   %r8,%r8
   30b95:	0f 85 03 00 00 00    	jne    30b9e <instr.bb_5390>

0000000000030b9b <instr.bb_538d>:
   30b9b:	31 c0                	xor    %eax,%eax
   30b9d:	c3                   	retq   

0000000000030b9e <instr.bb_5390>:
   30b9e:	48 83 ec 08          	sub    $0x8,%rsp
   30ba2:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   30ba6:	48 89 f2             	mov    %rsi,%rdx
   30ba9:	4c 89 c6             	mov    %r8,%rsi
   30bac:	e8 ef 22 00 00       	callq  32ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>

0000000000030bb1 <instr.bb_53a3>:
   30bb1:	31 c0                	xor    %eax,%eax
   30bb3:	48 83 c4 08          	add    $0x8,%rsp
   30bb7:	c3                   	retq   
   30bb8:	90                   	nop
   30bb9:	90                   	nop
   30bba:	90                   	nop
   30bbb:	90                   	nop
   30bbc:	90                   	nop
   30bbd:	90                   	nop
   30bbe:	90                   	nop
   30bbf:	90                   	nop

0000000000030bc0 <mbedtls_mpi_cmp_abs.instr.bb_53b0>:
   30bc0:	31 c9                	xor    %ecx,%ecx
   30bc2:	f3 0f 1e fa          	endbr64 
   30bc6:	48 8b 47 08          	mov    0x8(%rdi),%rax
   30bca:	48 85 c0             	test   %rax,%rax
   30bcd:	0f 84 6d 48 fd ff    	je     5440 <mbedtls_mpi_cmp_abs+0x90>

0000000000030bd3 <instr.bb_53c1>:
   30bd3:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   30bd7:	e9 0e 00 00 00       	jmpq   30bea <instr.bb_53d6>
   30bdc:	90                   	nop
   30bdd:	90                   	nop
   30bde:	90                   	nop
   30bdf:	90                   	nop

0000000000030be0 <instr.bb_53d0>:
   30be0:	48 83 e8 01          	sub    $0x1,%rax
   30be4:	0f 84 56 48 fd ff    	je     5440 <mbedtls_mpi_cmp_abs+0x90>

0000000000030bea <instr.bb_53d6>:
   30bea:	31 c9                	xor    %ecx,%ecx
   30bec:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
   30bf2:	0f 84 e8 ff ff ff    	je     30be0 <instr.bb_53d0>

0000000000030bf8 <instr.bb_53de>:
   30bf8:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   30bfc:	48 85 d2             	test   %rdx,%rdx
   30bff:	0f 84 7d 00 00 00    	je     30c82 <instr.bb_5434>

0000000000030c05 <instr.bb_53e7>:
   30c05:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   30c09:	e9 0c 00 00 00       	jmpq   30c1a <instr.bb_53f6>
   30c0e:	90                   	nop
   30c0f:	90                   	nop

0000000000030c10 <instr.bb_53f0>:
   30c10:	48 83 ea 01          	sub    $0x1,%rdx
   30c14:	0f 84 3e 48 fd ff    	je     5458 <mbedtls_mpi_cmp_abs+0xa8>

0000000000030c1a <instr.bb_53f6>:
   30c1a:	31 f6                	xor    %esi,%esi
   30c1c:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
   30c22:	0f 84 e8 ff ff ff    	je     30c10 <instr.bb_53f0>

0000000000030c28 <instr.bb_53fe>:
   30c28:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   30c2e:	48 39 c2             	cmp    %rax,%rdx
   30c31:	0f 82 51 00 00 00    	jb     30c88 <instr.bb_543a>

0000000000030c37 <instr.bb_5409>:
   30c37:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   30c3d:	0f 87 45 00 00 00    	ja     30c88 <instr.bb_543a>

0000000000030c43 <instr.bb_5411>:
   30c43:	48 85 c0             	test   %rax,%rax
   30c46:	0f 84 ff 47 fd ff    	je     544b <mbedtls_mpi_cmp_abs+0x9b>

0000000000030c4c <instr.bb_5416>:
   30c4c:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   30c50:	e9 1b 00 00 00       	jmpq   30c70 <instr.bb_5428>
   30c55:	90                   	nop
   30c56:	90                   	nop
   30c57:	90                   	nop
   30c58:	90                   	nop
   30c59:	90                   	nop
   30c5a:	90                   	nop
   30c5b:	90                   	nop
   30c5c:	90                   	nop
   30c5d:	90                   	nop
   30c5e:	90                   	nop
   30c5f:	90                   	nop

0000000000030c60 <instr.bb_5420>:
   30c60:	0f 82 fe 47 fd ff    	jb     5464 <mbedtls_mpi_cmp_abs+0xb4>

0000000000030c66 <instr.bb_5422>:
   30c66:	48 83 e8 01          	sub    $0x1,%rax
   30c6a:	0f 84 db 47 fd ff    	je     544b <mbedtls_mpi_cmp_abs+0x9b>

0000000000030c70 <instr.bb_5428>:
   30c70:	31 ff                	xor    %edi,%edi
   30c72:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
   30c77:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
   30c7c:	0f 86 de ff ff ff    	jbe    30c60 <instr.bb_5420>

0000000000030c82 <instr.bb_5434>:
   30c82:	41 b8 01 00 00 00    	mov    $0x1,%r8d

0000000000030c88 <instr.bb_543a>:
   30c88:	31 c9                	xor    %ecx,%ecx
   30c8a:	44 89 c0             	mov    %r8d,%eax
   30c8d:	c3                   	retq   
   30c8e:	90                   	nop
   30c8f:	90                   	nop

0000000000030c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>:
   30c90:	31 c9                	xor    %ecx,%ecx
   30c92:	f3 0f 1e fa          	endbr64 
   30c96:	48 8b 47 08          	mov    0x8(%rdi),%rax
   30c9a:	48 85 c0             	test   %rax,%rax
   30c9d:	0f 84 5d 48 fd ff    	je     5500 <mbedtls_mpi_cmp_mpi+0x90>

0000000000030ca3 <instr.bb_5481>:
   30ca3:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   30ca7:	e9 0e 00 00 00       	jmpq   30cba <instr.bb_5496>
   30cac:	90                   	nop
   30cad:	90                   	nop
   30cae:	90                   	nop
   30caf:	90                   	nop

0000000000030cb0 <instr.bb_5490>:
   30cb0:	48 83 e8 01          	sub    $0x1,%rax
   30cb4:	0f 84 46 48 fd ff    	je     5500 <mbedtls_mpi_cmp_mpi+0x90>

0000000000030cba <instr.bb_5496>:
   30cba:	31 c9                	xor    %ecx,%ecx
   30cbc:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
   30cc2:	0f 84 e8 ff ff ff    	je     30cb0 <instr.bb_5490>

0000000000030cc8 <instr.bb_549e>:
   30cc8:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   30ccc:	48 85 d2             	test   %rdx,%rdx
   30ccf:	0f 84 9b 00 00 00    	je     30d70 <instr.bb_5518>

0000000000030cd5 <instr.bb_54a7>:
   30cd5:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   30cd9:	e9 0c 00 00 00       	jmpq   30cea <instr.bb_54b6>
   30cde:	90                   	nop
   30cdf:	90                   	nop

0000000000030ce0 <instr.bb_54b0>:
   30ce0:	48 83 ea 01          	sub    $0x1,%rdx
   30ce4:	0f 84 36 48 fd ff    	je     5520 <mbedtls_mpi_cmp_mpi+0xb0>

0000000000030cea <instr.bb_54b6>:
   30cea:	45 31 c0             	xor    %r8d,%r8d
   30ced:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
   30cf3:	0f 84 e7 ff ff ff    	je     30ce0 <instr.bb_54b0>

0000000000030cf9 <instr.bb_54be>:
   30cf9:	48 39 c2             	cmp    %rax,%rdx
   30cfc:	0f 82 6e 00 00 00    	jb     30d70 <instr.bb_5518>

0000000000030d02 <instr.bb_54c3>:
   30d02:	8b 16                	mov    (%rsi),%edx
   30d04:	0f 87 36 48 fd ff    	ja     5540 <mbedtls_mpi_cmp_mpi+0xd0>

0000000000030d0a <instr.bb_54c7>:
   30d0a:	44 8b 87 00 10 00 c0 	mov    -0x3ffff000(%rdi),%r8d
   30d11:	44 33 07             	xor    (%rdi),%r8d
   30d14:	45 85 c0             	test   %r8d,%r8d
   30d17:	0f 8e 13 48 fd ff    	jle    5530 <mbedtls_mpi_cmp_mpi+0xc0>

0000000000030d1d <instr.bb_54cf>:
   30d1d:	85 d2                	test   %edx,%edx
   30d1f:	0f 88 24 48 fd ff    	js     5549 <mbedtls_mpi_cmp_mpi+0xd9>

0000000000030d25 <instr.bb_54d3>:
   30d25:	48 85 c0             	test   %rax,%rax
   30d28:	0f 84 dd 47 fd ff    	je     550b <mbedtls_mpi_cmp_mpi+0x9b>

0000000000030d2e <instr.bb_54d8>:
   30d2e:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   30d32:	e9 13 00 00 00       	jmpq   30d4a <instr.bb_54e6>
   30d37:	90                   	nop
   30d38:	90                   	nop
   30d39:	90                   	nop
   30d3a:	90                   	nop
   30d3b:	90                   	nop
   30d3c:	90                   	nop
   30d3d:	90                   	nop
   30d3e:	90                   	nop
   30d3f:	90                   	nop

0000000000030d40 <instr.bb_54e0>:
   30d40:	48 83 e8 01          	sub    $0x1,%rax
   30d44:	0f 84 c1 47 fd ff    	je     550b <mbedtls_mpi_cmp_mpi+0x9b>

0000000000030d4a <instr.bb_54e6>:
   30d4a:	45 31 d2             	xor    %r10d,%r10d
   30d4d:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
   30d52:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
   30d57:	0f 87 1d 00 00 00    	ja     30d7a <instr.bb_551b>

0000000000030d5d <instr.bb_54f2>:
   30d5d:	0f 83 dd ff ff ff    	jae    30d40 <instr.bb_54e0>

0000000000030d63 <instr.bb_54f4>:
   30d63:	41 f7 d8             	neg    %r8d
   30d66:	e9 0f 00 00 00       	jmpq   30d7a <instr.bb_551b>
   30d6b:	90                   	nop
   30d6c:	90                   	nop
   30d6d:	90                   	nop
   30d6e:	90                   	nop
   30d6f:	90                   	nop

0000000000030d70 <instr.bb_5518>:
   30d70:	44 8b 87 00 10 00 c0 	mov    -0x3ffff000(%rdi),%r8d
   30d77:	44 33 07             	xor    (%rdi),%r8d

0000000000030d7a <instr.bb_551b>:
   30d7a:	31 f6                	xor    %esi,%esi
   30d7c:	44 89 c0             	mov    %r8d,%eax
   30d7f:	c3                   	retq   

0000000000030d80 <mbedtls_mpi_cmp_int.instr.bb_5560>:
   30d80:	31 c9                	xor    %ecx,%ecx
   30d82:	48 89 8c 24 c8 0f 00 	mov    %rcx,-0x3ffff038(%rsp)
   30d89:	c0 
   30d8a:	48 89 8c 24 d0 0f 00 	mov    %rcx,-0x3ffff030(%rsp)
   30d91:	c0 
   30d92:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   30d99:	c0 
   30d9a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   30da1:	c0 
   30da2:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   30da9:	c0 
   30daa:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   30db1:	c0 
   30db2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30db9:	c0 
   30dba:	f3 0f 1e fa          	endbr64 
   30dbe:	48 83 ec 38          	sub    $0x38,%rsp
   30dc2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   30dc9:	00 00 
   30dcb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   30dd0:	31 c0                	xor    %eax,%eax
   30dd2:	b8 01 00 00 00       	mov    $0x1,%eax
   30dd7:	48 85 f6             	test   %rsi,%rsi
   30dda:	0f 89 08 00 00 00    	jns    30de8 <instr.bb_558a>

0000000000030de0 <instr.bb_5582>:
   30de0:	48 f7 de             	neg    %rsi
   30de3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax

0000000000030de8 <instr.bb_558a>:
   30de8:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   30ded:	48 89 e6             	mov    %rsp,%rsi
   30df0:	89 04 24             	mov    %eax,(%rsp)
   30df3:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   30df8:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   30dff:	00 00 
   30e01:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   30e06:	e8 85 fe ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

0000000000030e0b <instr.bb_55ad>:
   30e0b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   30e10:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   30e17:	00 00 
   30e19:	0f 85 a3 47 fd ff    	jne    55c2 <mbedtls_mpi_cmp_int+0x62>

0000000000030e1f <instr.bb_55bd>:
   30e1f:	48 83 c4 38          	add    $0x38,%rsp
   30e23:	c3                   	retq   
   30e24:	90                   	nop
   30e25:	90                   	nop
   30e26:	90                   	nop
   30e27:	90                   	nop
   30e28:	90                   	nop
   30e29:	90                   	nop
   30e2a:	90                   	nop
   30e2b:	90                   	nop
   30e2c:	90                   	nop
   30e2d:	90                   	nop
   30e2e:	90                   	nop
   30e2f:	90                   	nop

0000000000030e30 <mbedtls_mpi_add_abs.instr.bb_55d0>:
   30e30:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   30e35:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   30e3a:	88 8c 24 d8 0f 00 c0 	mov    %cl,-0x3ffff028(%rsp)
   30e41:	88 8c 24 f0 0f 00 c0 	mov    %cl,-0x3ffff010(%rsp)
   30e48:	31 c9                	xor    %ecx,%ecx
   30e4a:	88 8c 24 d9 0f 00 c0 	mov    %cl,-0x3ffff027(%rsp)
   30e51:	66 89 8c 24 da 0f 00 	mov    %cx,-0x3ffff026(%rsp)
   30e58:	c0 
   30e59:	89 8c 24 dc 0f 00 c0 	mov    %ecx,-0x3ffff024(%rsp)
   30e60:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   30e67:	c0 
   30e68:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   30e6f:	c0 
   30e70:	88 8c 24 f1 0f 00 c0 	mov    %cl,-0x3ffff00f(%rsp)
   30e77:	66 89 8c 24 f2 0f 00 	mov    %cx,-0x3ffff00e(%rsp)
   30e7e:	c0 
   30e7f:	89 8c 24 f4 0f 00 c0 	mov    %ecx,-0x3ffff00c(%rsp)
   30e86:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30e8d:	c0 
   30e8e:	f3 0f 1e fa          	endbr64 
   30e92:	41 56                	push   %r14
   30e94:	48 8b 8c 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%rcx
   30e9b:	c0 
   30e9c:	48 85 c9             	test   %rcx,%rcx
   30e9f:	0f 84 12 00 00 00    	je     30eb7 <mbedtls_mpi_add_abs.instr.bb_55d0+0x87>
   30ea5:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   30eaa:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   30eaf:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30eb6:	c0 
   30eb7:	4c 31 e9             	xor    %r13,%rcx
   30eba:	51                   	push   %rcx
   30ebb:	49 89 fd             	mov    %rdi,%r13
   30ebe:	41 54                	push   %r12
   30ec0:	55                   	push   %rbp
   30ec1:	48 89 f5             	mov    %rsi,%rbp
   30ec4:	48 8b 8c 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%rcx
   30ecb:	c0 
   30ecc:	48 85 c9             	test   %rcx,%rcx
   30ecf:	0f 84 12 00 00 00    	je     30ee7 <mbedtls_mpi_add_abs.instr.bb_55d0+0xb7>
   30ed5:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   30eda:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   30edf:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   30ee6:	c0 
   30ee7:	48 31 d9             	xor    %rbx,%rcx
   30eea:	51                   	push   %rcx
   30eeb:	48 39 d7             	cmp    %rdx,%rdi
   30eee:	0f 84 4b 00 00 00    	je     30f3f <instr.bb_55fb>

0000000000030ef4 <instr.bb_55e7>:
   30ef4:	48 89 d3             	mov    %rdx,%rbx
   30ef7:	48 39 f7             	cmp    %rsi,%rdi
   30efa:	0f 84 3c 00 00 00    	je     30f3c <instr.bb_55f8>

0000000000030f00 <instr.bb_55ef>:
   30f00:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   30f07:	70 00 00 
   30f0a:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   30f11:	00 
   30f12:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   30f19:	70 00 00 
   30f1c:	e8 1f f7 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   30f21:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   30f28:	70 00 00 
   30f2b:	48 8b 37             	mov    (%rdi),%rsi
   30f2e:	48 d1 ee             	shr    %rsi
   30f31:	48 89 37             	mov    %rsi,(%rdi)

0000000000030f34 <instr.bb_55f4>:
   30f34:	85 c0                	test   %eax,%eax
   30f36:	0f 85 a4 00 00 00    	jne    30fe0 <instr.bb_563d>

0000000000030f3c <instr.bb_55f8>:
   30f3c:	48 89 dd             	mov    %rbx,%rbp

0000000000030f3f <instr.bb_55fb>:
   30f3f:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
   30f43:	41 8b 8d 00 10 00 c0 	mov    -0x3ffff000(%r13),%ecx
   30f4a:	85 c9                	test   %ecx,%ecx
   30f4c:	0f 84 11 00 00 00    	je     30f63 <instr.bb_55fb+0x24>
   30f52:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   30f57:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   30f5c:	41 89 8d 00 10 00 c0 	mov    %ecx,-0x3ffff000(%r13)
   30f63:	83 f1 01             	xor    $0x1,%ecx
   30f66:	41 89 4d 00          	mov    %ecx,0x0(%r13)
   30f6a:	48 85 db             	test   %rbx,%rbx
   30f6d:	0f 84 7d 00 00 00    	je     30ff0 <instr.bb_5650>

0000000000030f73 <instr.bb_560c>:
   30f73:	48 8b 45 10          	mov    0x10(%rbp),%rax
   30f77:	e9 0e 00 00 00       	jmpq   30f8a <instr.bb_561e>
   30f7c:	90                   	nop
   30f7d:	90                   	nop
   30f7e:	90                   	nop
   30f7f:	90                   	nop

0000000000030f80 <instr.bb_5618>:
   30f80:	48 83 eb 01          	sub    $0x1,%rbx
   30f84:	0f 84 66 00 00 00    	je     30ff0 <instr.bb_5650>

0000000000030f8a <instr.bb_561e>:
   30f8a:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   30f90:	4c 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%r14
   30f97:	00 
   30f98:	0f 84 e2 ff ff ff    	je     30f80 <instr.bb_5618>

0000000000030f9e <instr.bb_562e>:
   30f9e:	48 89 de             	mov    %rbx,%rsi
   30fa1:	4c 89 ef             	mov    %r13,%rdi
   30fa4:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   30fab:	70 00 00 
   30fae:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   30fb5:	00 
   30fb6:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   30fbd:	70 00 00 
   30fc0:	e8 5b f4 ff ff       	callq  30420 <mbedtls_mpi_grow.instr.bb_4bf0>
   30fc5:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   30fcc:	70 00 00 
   30fcf:	48 8b 37             	mov    (%rdi),%rsi
   30fd2:	48 d1 ee             	shr    %rsi
   30fd5:	48 89 37             	mov    %rsi,(%rdi)

0000000000030fd8 <instr.bb_5639>:
   30fd8:	85 c0                	test   %eax,%eax
   30fda:	0f 84 80 46 fd ff    	je     5660 <mbedtls_mpi_add_abs+0x90>

0000000000030fe0 <instr.bb_563d>:
   30fe0:	5b                   	pop    %rbx
   30fe1:	5d                   	pop    %rbp
   30fe2:	41 5c                	pop    %r12
   30fe4:	41 5d                	pop    %r13
   30fe6:	41 5e                	pop    %r14
   30fe8:	c3                   	retq   
   30fe9:	90                   	nop
   30fea:	90                   	nop
   30feb:	90                   	nop
   30fec:	90                   	nop
   30fed:	90                   	nop
   30fee:	90                   	nop
   30fef:	90                   	nop

0000000000030ff0 <instr.bb_5650>:
   30ff0:	48 8b 9c 24 00 10 00 	mov    -0x3ffff000(%rsp),%rbx
   30ff7:	c0 
   30ff8:	48 33 1c 24          	xor    (%rsp),%rbx
   30ffc:	48 83 c4 08          	add    $0x8,%rsp
   31000:	31 c0                	xor    %eax,%eax
   31002:	5d                   	pop    %rbp
   31003:	41 5c                	pop    %r12
   31005:	4c 8b ac 24 00 10 00 	mov    -0x3ffff000(%rsp),%r13
   3100c:	c0 
   3100d:	4c 33 2c 24          	xor    (%rsp),%r13
   31011:	48 83 c4 08          	add    $0x8,%rsp
   31015:	41 5e                	pop    %r14
   31017:	c3                   	retq   
   31018:	90                   	nop
   31019:	90                   	nop
   3101a:	90                   	nop
   3101b:	90                   	nop
   3101c:	90                   	nop
   3101d:	90                   	nop
   3101e:	90                   	nop
   3101f:	90                   	nop

0000000000031020 <instr.bb_5688>:
   31020:	31 d2                	xor    %edx,%edx
   31022:	48 03 28             	add    (%rax),%rbp
   31025:	0f 92 c2             	setb   %dl
   31028:	48 89 28             	mov    %rbp,(%rax)
   3102b:	48 83 c0 08          	add    $0x8,%rax
   3102f:	bd 01 00 00 00       	mov    $0x1,%ebp
   31034:	48 85 d2             	test   %rdx,%rdx
   31037:	0f 84 b3 ff ff ff    	je     30ff0 <instr.bb_5650>

000000000003103d <instr.bb_56a1>:
   3103d:	49 89 dc             	mov    %rbx,%r12
   31040:	48 83 c3 01          	add    $0x1,%rbx
   31044:	4d 39 65 08          	cmp    %r12,0x8(%r13)
   31048:	0f 87 d2 ff ff ff    	ja     31020 <instr.bb_5688>

000000000003104e <instr.bb_56ae>:
   3104e:	48 89 de             	mov    %rbx,%rsi
   31051:	4c 89 ef             	mov    %r13,%rdi
   31054:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3105b:	70 00 00 
   3105e:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   31065:	00 
   31066:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3106d:	70 00 00 
   31070:	e8 ab f3 ff ff       	callq  30420 <mbedtls_mpi_grow.instr.bb_4bf0>
   31075:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3107c:	70 00 00 
   3107f:	48 8b 37             	mov    (%rdi),%rsi
   31082:	48 d1 ee             	shr    %rsi
   31085:	48 89 37             	mov    %rsi,(%rdi)

0000000000031088 <instr.bb_56b9>:
   31088:	85 c0                	test   %eax,%eax
   3108a:	0f 85 50 ff ff ff    	jne    30fe0 <instr.bb_563d>

0000000000031090 <instr.bb_56bd>:
   31090:	49 8b 45 10          	mov    0x10(%r13),%rax
   31094:	4a 8d 04 e0          	lea    (%rax,%r12,8),%rax
   31098:	e9 83 ff ff ff       	jmpq   31020 <instr.bb_5688>
   3109d:	90                   	nop
   3109e:	90                   	nop
   3109f:	90                   	nop

00000000000310a0 <mbedtls_mpi_sub_abs.instr.bb_56d0>:
   310a0:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   310a5:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   310aa:	88 8c 24 d8 0f 00 c0 	mov    %cl,-0x3ffff028(%rsp)
   310b1:	88 8c 24 f0 0f 00 c0 	mov    %cl,-0x3ffff010(%rsp)
   310b8:	31 c9                	xor    %ecx,%ecx
   310ba:	88 8c 24 d9 0f 00 c0 	mov    %cl,-0x3ffff027(%rsp)
   310c1:	66 89 8c 24 da 0f 00 	mov    %cx,-0x3ffff026(%rsp)
   310c8:	c0 
   310c9:	89 8c 24 dc 0f 00 c0 	mov    %ecx,-0x3ffff024(%rsp)
   310d0:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   310d7:	c0 
   310d8:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   310df:	c0 
   310e0:	88 8c 24 f1 0f 00 c0 	mov    %cl,-0x3ffff00f(%rsp)
   310e7:	66 89 8c 24 f2 0f 00 	mov    %cx,-0x3ffff00e(%rsp)
   310ee:	c0 
   310ef:	89 8c 24 f4 0f 00 c0 	mov    %ecx,-0x3ffff00c(%rsp)
   310f6:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   310fd:	c0 
   310fe:	f3 0f 1e fa          	endbr64 
   31102:	41 56                	push   %r14
   31104:	48 8b 8c 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%rcx
   3110b:	c0 
   3110c:	48 85 c9             	test   %rcx,%rcx
   3110f:	0f 84 12 00 00 00    	je     31127 <mbedtls_mpi_sub_abs.instr.bb_56d0+0x87>
   31115:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   3111a:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3111f:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   31126:	c0 
   31127:	4c 31 e9             	xor    %r13,%rcx
   3112a:	51                   	push   %rcx
   3112b:	49 89 d5             	mov    %rdx,%r13
   3112e:	41 54                	push   %r12
   31130:	49 89 f4             	mov    %rsi,%r12
   31133:	55                   	push   %rbp
   31134:	48 89 fd             	mov    %rdi,%rbp
   31137:	48 8b 8c 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%rcx
   3113e:	c0 
   3113f:	48 85 c9             	test   %rcx,%rcx
   31142:	0f 84 12 00 00 00    	je     3115a <mbedtls_mpi_sub_abs.instr.bb_56d0+0xba>
   31148:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   3114d:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   31152:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   31159:	c0 
   3115a:	48 31 d9             	xor    %rbx,%rcx
   3115d:	51                   	push   %rcx
   3115e:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
   31162:	48 85 db             	test   %rbx,%rbx
   31165:	0f 84 15 00 00 00    	je     31180 <instr.bb_5720>

000000000003116b <instr.bb_56ee>:
   3116b:	48 8b 42 10          	mov    0x10(%rdx),%rax
   3116f:	e9 8a 45 fd ff       	jmpq   56fe <mbedtls_mpi_sub_abs+0x2e>
   31174:	90                   	nop
   31175:	90                   	nop
   31176:	90                   	nop
   31177:	90                   	nop
   31178:	90                   	nop
   31179:	90                   	nop
   3117a:	90                   	nop
   3117b:	90                   	nop
   3117c:	90                   	nop
   3117d:	90                   	nop
   3117e:	90                   	nop
   3117f:	90                   	nop

0000000000031180 <instr.bb_5720>:
   31180:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   31185:	31 db                	xor    %ebx,%ebx

0000000000031187 <instr.bb_5727>:
   31187:	48 89 ef             	mov    %rbp,%rdi
   3118a:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31191:	70 00 00 
   31194:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3119b:	00 
   3119c:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   311a3:	70 00 00 
   311a6:	e8 75 f2 ff ff       	callq  30420 <mbedtls_mpi_grow.instr.bb_4bf0>
   311ab:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   311b2:	70 00 00 
   311b5:	48 8b 37             	mov    (%rdi),%rsi
   311b8:	48 d1 ee             	shr    %rsi
   311bb:	48 89 37             	mov    %rsi,(%rdi)

00000000000311be <instr.bb_572f>:
   311be:	41 89 c6             	mov    %eax,%r14d
   311c1:	85 c0                	test   %eax,%eax
   311c3:	0f 85 66 00 00 00    	jne    3122f <instr.bb_576c+0x24>

00000000000311c9 <instr.bb_5736>:
   311c9:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   311ce:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   311d2:	48 39 da             	cmp    %rbx,%rdx
   311d5:	0f 86 09 00 00 00    	jbe    311e4 <instr.bb_574d>

00000000000311db <instr.bb_5744>:
   311db:	49 39 ec             	cmp    %rbp,%r12
   311de:	0f 85 ec 45 fd ff    	jne    57d0 <mbedtls_mpi_sub_abs+0x100>

00000000000311e4 <instr.bb_574d>:
   311e4:	48 8b 45 08          	mov    0x8(%rbp),%rax
   311e8:	48 39 d0             	cmp    %rdx,%rax
   311eb:	0f 87 b7 45 fd ff    	ja     57a8 <mbedtls_mpi_sub_abs+0xd8>

00000000000311f1 <instr.bb_5756>:
   311f1:	49 8b 55 10          	mov    0x10(%r13),%rdx
   311f5:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   311fa:	48 89 d9             	mov    %rbx,%rcx
   311fd:	e8 2e 1d 00 00       	callq  32f30 <mbedtls_mpi_core_sub.instr.bb_a510>

0000000000031202 <instr.bb_5767>:
   31202:	48 85 c0             	test   %rax,%rax
   31205:	0f 85 75 45 fd ff    	jne    5780 <mbedtls_mpi_sub_abs+0xb0>

000000000003120b <instr.bb_576c>:
   3120b:	8b 9d 00 10 00 c0    	mov    -0x3ffff000(%rbp),%ebx
   31211:	85 db                	test   %ebx,%ebx
   31213:	0f 84 10 00 00 00    	je     31229 <instr.bb_576c+0x1e>
   31219:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   3121e:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   31223:	89 9d 00 10 00 c0    	mov    %ebx,-0x3ffff000(%rbp)
   31229:	83 f3 01             	xor    $0x1,%ebx
   3122c:	89 5d 00             	mov    %ebx,0x0(%rbp)
   3122f:	48 8b 9c 24 00 10 00 	mov    -0x3ffff000(%rsp),%rbx
   31236:	c0 
   31237:	48 33 1c 24          	xor    (%rsp),%rbx
   3123b:	48 83 c4 08          	add    $0x8,%rsp
   3123f:	44 89 f0             	mov    %r14d,%eax
   31242:	5d                   	pop    %rbp
   31243:	41 5c                	pop    %r12
   31245:	4c 8b ac 24 00 10 00 	mov    -0x3ffff000(%rsp),%r13
   3124c:	c0 
   3124d:	4c 33 2c 24          	xor    (%rsp),%r13
   31251:	48 83 c4 08          	add    $0x8,%rsp
   31255:	41 5e                	pop    %r14
   31257:	c3                   	retq   
   31258:	90                   	nop
   31259:	90                   	nop
   3125a:	90                   	nop
   3125b:	90                   	nop
   3125c:	90                   	nop
   3125d:	90                   	nop
   3125e:	90                   	nop
   3125f:	90                   	nop

0000000000031260 <add_sub_mpi.instr.bb_5810>:
   31260:	45 31 c0             	xor    %r8d,%r8d
   31263:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   3126a:	c0 
   3126b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   31272:	c0 
   31273:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   3127a:	c0 
   3127b:	41 54                	push   %r12
   3127d:	41 89 c8             	mov    %ecx,%r8d
   31280:	49 89 f1             	mov    %rsi,%r9
   31283:	49 89 d2             	mov    %rdx,%r10
   31286:	55                   	push   %rbp
   31287:	48 89 fd             	mov    %rdi,%rbp
   3128a:	53                   	push   %rbx
   3128b:	8b 9e 00 10 00 c0    	mov    -0x3ffff000(%rsi),%ebx
   31291:	33 1e                	xor    (%rsi),%ebx
   31293:	8b 8a 00 10 00 c0    	mov    -0x3ffff000(%rdx),%ecx
   31299:	33 0a                	xor    (%rdx),%ecx
   3129b:	0f af cb             	imul   %ebx,%ecx
   3129e:	41 0f af c8          	imul   %r8d,%ecx
   312a2:	85 c9                	test   %ecx,%ecx
   312a4:	0f 89 06 01 00 00    	jns    313b0 <instr.bb_5890>

00000000000312aa <instr.bb_582f>:
   312aa:	48 89 d6             	mov    %rdx,%rsi
   312ad:	4c 89 cf             	mov    %r9,%rdi
   312b0:	e8 0b f9 ff ff       	callq  30bc0 <mbedtls_mpi_cmp_abs.instr.bb_53b0>

00000000000312b5 <instr.bb_583a>:
   312b5:	41 89 c4             	mov    %eax,%r12d
   312b8:	85 c0                	test   %eax,%eax
   312ba:	0f 88 80 00 00 00    	js     31340 <instr.bb_5870>

00000000000312c0 <instr.bb_5841>:
   312c0:	4c 89 d2             	mov    %r10,%rdx
   312c3:	4c 89 ce             	mov    %r9,%rsi
   312c6:	48 89 ef             	mov    %rbp,%rdi
   312c9:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   312d0:	70 00 00 
   312d3:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   312da:	00 
   312db:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   312e2:	70 00 00 
   312e5:	e8 b6 fd ff ff       	callq  310a0 <mbedtls_mpi_sub_abs.instr.bb_56d0>
   312ea:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   312f1:	70 00 00 
   312f4:	48 8b 37             	mov    (%rdi),%rsi
   312f7:	48 d1 ee             	shr    %rsi
   312fa:	48 89 37             	mov    %rsi,(%rdi)

00000000000312fd <instr.bb_584f>:
   312fd:	85 c0                	test   %eax,%eax
   312ff:	0f 85 2e 00 00 00    	jne    31333 <instr.bb_5853+0x2e>

0000000000031305 <instr.bb_5853>:
   31305:	45 85 e4             	test   %r12d,%r12d
   31308:	ba 01 00 00 00       	mov    $0x1,%edx
   3130d:	0f 44 da             	cmove  %edx,%ebx
   31310:	8b bd 00 10 00 c0    	mov    -0x3ffff000(%rbp),%edi
   31316:	85 ff                	test   %edi,%edi
   31318:	0f 84 10 00 00 00    	je     3132e <instr.bb_5853+0x29>
   3131e:	c4 61 f9 7e f7       	vmovq  %xmm14,%rdi
   31323:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   31328:	89 bd 00 10 00 c0    	mov    %edi,-0x3ffff000(%rbp)
   3132e:	31 df                	xor    %ebx,%edi
   31330:	89 7d 00             	mov    %edi,0x0(%rbp)
   31333:	5b                   	pop    %rbx
   31334:	5d                   	pop    %rbp
   31335:	41 5c                	pop    %r12
   31337:	c3                   	retq   
   31338:	90                   	nop
   31339:	90                   	nop
   3133a:	90                   	nop
   3133b:	90                   	nop
   3133c:	90                   	nop
   3133d:	90                   	nop
   3133e:	90                   	nop
   3133f:	90                   	nop

0000000000031340 <instr.bb_5870>:
   31340:	4c 89 ca             	mov    %r9,%rdx
   31343:	4c 89 d6             	mov    %r10,%rsi
   31346:	48 89 ef             	mov    %rbp,%rdi
   31349:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31350:	70 00 00 
   31353:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3135a:	00 
   3135b:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31362:	70 00 00 
   31365:	e8 36 fd ff ff       	callq  310a0 <mbedtls_mpi_sub_abs.instr.bb_56d0>
   3136a:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31371:	70 00 00 
   31374:	48 8b 37             	mov    (%rdi),%rsi
   31377:	48 d1 ee             	shr    %rsi
   3137a:	48 89 37             	mov    %rsi,(%rdi)

000000000003137d <instr.bb_587e>:
   3137d:	85 c0                	test   %eax,%eax
   3137f:	0f 85 ae ff ff ff    	jne    31333 <instr.bb_5853+0x2e>

0000000000031385 <instr.bb_5882>:
   31385:	f7 db                	neg    %ebx
   31387:	8b bd 00 10 00 c0    	mov    -0x3ffff000(%rbp),%edi
   3138d:	85 ff                	test   %edi,%edi
   3138f:	0f 84 10 00 00 00    	je     313a5 <instr.bb_5882+0x20>
   31395:	c4 61 f9 7e f7       	vmovq  %xmm14,%rdi
   3139a:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3139f:	89 bd 00 10 00 c0    	mov    %edi,-0x3ffff000(%rbp)
   313a5:	31 df                	xor    %ebx,%edi
   313a7:	89 7d 00             	mov    %edi,0x0(%rbp)
   313aa:	5b                   	pop    %rbx
   313ab:	5d                   	pop    %rbp
   313ac:	41 5c                	pop    %r12
   313ae:	c3                   	retq   
   313af:	90                   	nop

00000000000313b0 <instr.bb_5890>:
   313b0:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   313b7:	70 00 00 
   313ba:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   313c1:	00 
   313c2:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   313c9:	70 00 00 
   313cc:	e8 5f fa ff ff       	callq  30e30 <mbedtls_mpi_add_abs.instr.bb_55d0>
   313d1:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   313d8:	70 00 00 
   313db:	48 8b 37             	mov    (%rdi),%rsi
   313de:	48 d1 ee             	shr    %rsi
   313e1:	48 89 37             	mov    %rsi,(%rdi)

00000000000313e4 <instr.bb_5895>:
   313e4:	85 c0                	test   %eax,%eax
   313e6:	0f 85 47 ff ff ff    	jne    31333 <instr.bb_5853+0x2e>

00000000000313ec <instr.bb_5899>:
   313ec:	f3 0f 1e fa          	endbr64 
   313f0:	8b bd 00 10 00 c0    	mov    -0x3ffff000(%rbp),%edi
   313f6:	85 ff                	test   %edi,%edi
   313f8:	0f 84 10 00 00 00    	je     3140e <instr.bb_5899+0x22>
   313fe:	c4 61 f9 7e f7       	vmovq  %xmm14,%rdi
   31403:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   31408:	89 bd 00 10 00 c0    	mov    %edi,-0x3ffff000(%rbp)
   3140e:	31 df                	xor    %ebx,%edi
   31410:	89 7d 00             	mov    %edi,0x0(%rbp)
   31413:	5b                   	pop    %rbx
   31414:	5d                   	pop    %rbp
   31415:	41 5c                	pop    %r12
   31417:	c3                   	retq   
   31418:	90                   	nop
   31419:	90                   	nop
   3141a:	90                   	nop
   3141b:	90                   	nop
   3141c:	90                   	nop
   3141d:	90                   	nop
   3141e:	90                   	nop
   3141f:	90                   	nop

0000000000031420 <mbedtls_mpi_add_mpi.instr.bb_58b0>:
   31420:	31 c9                	xor    %ecx,%ecx
   31422:	f3 0f 1e fa          	endbr64 
   31426:	b9 01 00 00 00       	mov    $0x1,%ecx
   3142b:	e9 30 fe ff ff       	jmpq   31260 <add_sub_mpi.instr.bb_5810>

0000000000031430 <mbedtls_mpi_sub_mpi.instr.bb_58c0>:
   31430:	31 c9                	xor    %ecx,%ecx
   31432:	f3 0f 1e fa          	endbr64 
   31436:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   3143b:	e9 20 fe ff ff       	jmpq   31260 <add_sub_mpi.instr.bb_5810>

0000000000031440 <mbedtls_mpi_add_int.instr.bb_58d0>:
   31440:	31 c9                	xor    %ecx,%ecx
   31442:	48 89 8c 24 c8 0f 00 	mov    %rcx,-0x3ffff038(%rsp)
   31449:	c0 
   3144a:	48 89 8c 24 d0 0f 00 	mov    %rcx,-0x3ffff030(%rsp)
   31451:	c0 
   31452:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   31459:	c0 
   3145a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   31461:	c0 
   31462:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   31469:	c0 
   3146a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   31471:	c0 
   31472:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   31479:	c0 
   3147a:	f3 0f 1e fa          	endbr64 
   3147e:	48 83 ec 38          	sub    $0x38,%rsp
   31482:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   31489:	00 00 
   3148b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   31490:	31 c0                	xor    %eax,%eax
   31492:	b8 01 00 00 00       	mov    $0x1,%eax
   31497:	48 85 d2             	test   %rdx,%rdx
   3149a:	0f 89 08 00 00 00    	jns    314a8 <instr.bb_58fa>

00000000000314a0 <instr.bb_58f2>:
   314a0:	48 f7 da             	neg    %rdx
   314a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax

00000000000314a8 <instr.bb_58fa>:
   314a8:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   314ad:	b9 01 00 00 00       	mov    $0x1,%ecx
   314b2:	48 89 e2             	mov    %rsp,%rdx
   314b5:	89 04 24             	mov    %eax,(%rsp)
   314b8:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   314bd:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   314c4:	00 00 
   314c6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   314cb:	e8 90 fd ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>

00000000000314d0 <instr.bb_5922>:
   314d0:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   314d5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   314dc:	00 00 
   314de:	0f 85 53 44 fd ff    	jne    5937 <mbedtls_mpi_add_int+0x67>

00000000000314e4 <instr.bb_5932>:
   314e4:	48 83 c4 38          	add    $0x38,%rsp
   314e8:	c3                   	retq   
   314e9:	90                   	nop
   314ea:	90                   	nop
   314eb:	90                   	nop
   314ec:	90                   	nop
   314ed:	90                   	nop
   314ee:	90                   	nop
   314ef:	90                   	nop

00000000000314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>:
   314f0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   314f4:	c4 c2 7d 59 c6       	vpbroadcastq %xmm14,%ymm0
   314f9:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   314fe:	c5 fe 7f 8c 24 78 0f 	vmovdqu %ymm1,-0x3ffff088(%rsp)
   31505:	00 c0 
   31507:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   3150e:	00 c0 
   31510:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   31517:	00 c0 
   31519:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   31520:	00 c0 
   31522:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   31529:	00 c0 
   3152b:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   31530:	88 8c 24 88 0f 00 c0 	mov    %cl,-0x3ffff078(%rsp)
   31537:	88 8c 24 a8 0f 00 c0 	mov    %cl,-0x3ffff058(%rsp)
   3153e:	88 8c 24 e8 0f 00 c0 	mov    %cl,-0x3ffff018(%rsp)
   31545:	f3 0f 1e fa          	endbr64 
   31549:	41 57                	push   %r15
   3154b:	49 89 ff             	mov    %rdi,%r15
   3154e:	41 56                	push   %r14
   31550:	49 89 d6             	mov    %rdx,%r14
   31553:	48 8b 8c 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%rcx
   3155a:	c0 
   3155b:	48 85 c9             	test   %rcx,%rcx
   3155e:	0f 84 12 00 00 00    	je     31576 <mbedtls_mpi_mul_mpi.instr.bb_59b0+0x86>
   31564:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   31569:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3156e:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   31575:	c0 
   31576:	4c 31 e9             	xor    %r13,%rcx
   31579:	51                   	push   %rcx
   3157a:	49 89 f5             	mov    %rsi,%r13
   3157d:	41 54                	push   %r12
   3157f:	55                   	push   %rbp
   31580:	53                   	push   %rbx
   31581:	48 83 ec 58          	sub    $0x58,%rsp
   31585:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3158c:	00 00 
   3158e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   31593:	31 c0                	xor    %eax,%eax
   31595:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   3159a:	8b 8c 24 10 10 00 c0 	mov    -0x3fffeff0(%rsp),%ecx
   315a1:	85 c9                	test   %ecx,%ecx
   315a3:	0f 84 11 00 00 00    	je     315ba <mbedtls_mpi_mul_mpi.instr.bb_59b0+0xca>
   315a9:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   315ae:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   315b3:	89 8c 24 10 10 00 c0 	mov    %ecx,-0x3fffeff0(%rsp)
   315ba:	83 f1 01             	xor    $0x1,%ecx
   315bd:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   315c1:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   315c8:	00 00 
   315ca:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   315d1:	00 00 
   315d3:	8b 8c 24 30 10 00 c0 	mov    -0x3fffefd0(%rsp),%ecx
   315da:	85 c9                	test   %ecx,%ecx
   315dc:	0f 84 11 00 00 00    	je     315f3 <mbedtls_mpi_mul_mpi.instr.bb_59b0+0x103>
   315e2:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   315e7:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   315ec:	89 8c 24 30 10 00 c0 	mov    %ecx,-0x3fffefd0(%rsp)
   315f3:	83 f1 01             	xor    $0x1,%ecx
   315f6:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
   315fa:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   31601:	00 00 
   31603:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   3160a:	00 00 
   3160c:	48 89 04 24          	mov    %rax,(%rsp)
   31610:	48 39 f7             	cmp    %rsi,%rdi
   31613:	0f 84 67 01 00 00    	je     31780 <instr.bb_5b50>

0000000000031619 <instr.bb_5a21>:
   31619:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   3161e:	4d 39 f7             	cmp    %r14,%r15
   31621:	0f 84 b9 01 00 00    	je     317e0 <instr.bb_5b80>

0000000000031627 <instr.bb_5a2f>:
   31627:	4d 8b 65 08          	mov    0x8(%r13),%r12
   3162b:	4d 85 e4             	test   %r12,%r12
   3162e:	0f 84 fc 44 fd ff    	je     5b30 <mbedtls_mpi_mul_mpi+0x180>

0000000000031634 <instr.bb_5a3c>:
   31634:	49 8b 45 10          	mov    0x10(%r13),%rax
   31638:	e9 15 44 fd ff       	jmpq   5a52 <mbedtls_mpi_mul_mpi+0xa2>
   3163d:	90                   	nop
   3163e:	90                   	nop
   3163f:	90                   	nop

0000000000031640 <instr.bb_5a78>:
   31640:	48 83 eb 01          	sub    $0x1,%rbx
   31644:	0f 84 d6 44 fd ff    	je     5b20 <mbedtls_mpi_mul_mpi+0x170>

000000000003164a <instr.bb_5a82>:
   3164a:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   31650:	0f 84 ea ff ff ff    	je     31640 <instr.bb_5a78>

0000000000031656 <instr.bb_5a8a>:
   31656:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
   3165a:	4c 89 ff             	mov    %r15,%rdi
   3165d:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31664:	70 00 00 
   31667:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3166e:	00 
   3166f:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31676:	70 00 00 
   31679:	e8 a2 ed ff ff       	callq  30420 <mbedtls_mpi_grow.instr.bb_4bf0>
   3167e:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31685:	70 00 00 
   31688:	48 8b 37             	mov    (%rdi),%rsi
   3168b:	48 d1 ee             	shr    %rsi
   3168e:	48 89 37             	mov    %rsi,(%rdi)

0000000000031691 <instr.bb_5a96>:
   31691:	85 c0                	test   %eax,%eax
   31693:	0f 85 47 00 00 00    	jne    316e0 <instr.bb_5ae0>

0000000000031699 <instr.bb_5a9a>:
   31699:	31 f6                	xor    %esi,%esi
   3169b:	4c 89 ff             	mov    %r15,%rdi
   3169e:	e8 bd f0 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>

00000000000316a3 <instr.bb_5aa4>:
   316a3:	85 c0                	test   %eax,%eax
   316a5:	0f 85 35 00 00 00    	jne    316e0 <instr.bb_5ae0>

00000000000316ab <instr.bb_5aa8>:
   316ab:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   316af:	49 8b 75 10          	mov    0x10(%r13),%rsi
   316b3:	49 89 d8             	mov    %rbx,%r8
   316b6:	4c 89 e2             	mov    %r12,%rdx
   316b9:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   316bd:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   316c1:	e8 ca 19 00 00       	callq  33090 <mbedtls_mpi_core_mul.instr.bb_a710>

00000000000316c6 <instr.bb_5ac3>:
   316c6:	8b 44 24 08          	mov    0x8(%rsp),%eax
   316ca:	85 c0                	test   %eax,%eax
   316cc:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   316d0:	0f 84 5a 00 00 00    	je     31730 <instr.bb_5b40>

00000000000316d6 <instr.bb_5acf>:
   316d6:	41 c7 07 01 00 00 00 	movl   $0x1,(%r15)
   316dd:	90                   	nop
   316de:	90                   	nop
   316df:	90                   	nop

00000000000316e0 <instr.bb_5ae0>:
   316e0:	48 89 ef             	mov    %rbp,%rdi
   316e3:	89 44 24 08          	mov    %eax,0x8(%rsp)
   316e7:	e8 b4 ec ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

00000000000316ec <instr.bb_5aec>:
   316ec:	48 8b 3c 24          	mov    (%rsp),%rdi
   316f0:	e8 ab ec ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

00000000000316f5 <instr.bb_5af5>:
   316f5:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   316fa:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   31701:	00 00 
   31703:	8b 44 24 08          	mov    0x8(%rsp),%eax
   31707:	0f 85 8e 44 fd ff    	jne    5b9b <mbedtls_mpi_mul_mpi+0x1eb>

000000000003170d <instr.bb_5b0d>:
   3170d:	48 83 c4 58          	add    $0x58,%rsp
   31711:	5b                   	pop    %rbx
   31712:	5d                   	pop    %rbp
   31713:	41 5c                	pop    %r12
   31715:	4c 8b ac 24 00 10 00 	mov    -0x3ffff000(%rsp),%r13
   3171c:	c0 
   3171d:	4c 33 2c 24          	xor    (%rsp),%r13
   31721:	48 83 c4 08          	add    $0x8,%rsp
   31725:	41 5e                	pop    %r14
   31727:	41 5f                	pop    %r15
   31729:	c3                   	retq   
   3172a:	90                   	nop
   3172b:	90                   	nop
   3172c:	90                   	nop
   3172d:	90                   	nop
   3172e:	90                   	nop
   3172f:	90                   	nop

0000000000031730 <instr.bb_5b40>:
   31730:	41 8b 95 00 10 00 c0 	mov    -0x3ffff000(%r13),%edx
   31737:	41 33 55 00          	xor    0x0(%r13),%edx
   3173b:	41 8b 8e 00 10 00 c0 	mov    -0x3ffff000(%r14),%ecx
   31742:	41 33 0e             	xor    (%r14),%ecx
   31745:	0f af d1             	imul   %ecx,%edx
   31748:	41 8b 8f 00 10 00 c0 	mov    -0x3ffff000(%r15),%ecx
   3174f:	85 c9                	test   %ecx,%ecx
   31751:	0f 84 11 00 00 00    	je     31768 <instr.bb_5b40+0x38>
   31757:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   3175c:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   31761:	41 89 8f 00 10 00 c0 	mov    %ecx,-0x3ffff000(%r15)
   31768:	31 d1                	xor    %edx,%ecx
   3176a:	41 89 0f             	mov    %ecx,(%r15)
   3176d:	e9 6e ff ff ff       	jmpq   316e0 <instr.bb_5ae0>
   31772:	90                   	nop
   31773:	90                   	nop
   31774:	90                   	nop
   31775:	90                   	nop
   31776:	90                   	nop
   31777:	90                   	nop
   31778:	90                   	nop
   31779:	90                   	nop
   3177a:	90                   	nop
   3177b:	90                   	nop
   3177c:	90                   	nop
   3177d:	90                   	nop
   3177e:	90                   	nop
   3177f:	90                   	nop

0000000000031780 <instr.bb_5b50>:
   31780:	48 89 fe             	mov    %rdi,%rsi
   31783:	48 89 c7             	mov    %rax,%rdi
   31786:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   3178b:	49 89 c5             	mov    %rax,%r13
   3178e:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31795:	70 00 00 
   31798:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3179f:	00 
   317a0:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   317a7:	70 00 00 
   317aa:	e8 91 ee ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   317af:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   317b6:	70 00 00 
   317b9:	48 8b 37             	mov    (%rdi),%rsi
   317bc:	48 d1 ee             	shr    %rsi
   317bf:	48 89 37             	mov    %rsi,(%rdi)

00000000000317c2 <instr.bb_5b63>:
   317c2:	85 c0                	test   %eax,%eax
   317c4:	0f 85 16 ff ff ff    	jne    316e0 <instr.bb_5ae0>

00000000000317ca <instr.bb_5b6b>:
   317ca:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   317cf:	4d 39 f7             	cmp    %r14,%r15
   317d2:	0f 85 4f fe ff ff    	jne    31627 <instr.bb_5a2f>

00000000000317d8 <instr.bb_5b79>:
   317d8:	90                   	nop
   317d9:	90                   	nop
   317da:	90                   	nop
   317db:	90                   	nop
   317dc:	90                   	nop
   317dd:	90                   	nop
   317de:	90                   	nop
   317df:	90                   	nop

00000000000317e0 <instr.bb_5b80>:
   317e0:	4c 89 fe             	mov    %r15,%rsi
   317e3:	48 89 ef             	mov    %rbp,%rdi
   317e6:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   317ed:	70 00 00 
   317f0:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   317f7:	00 
   317f8:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   317ff:	70 00 00 
   31802:	e8 39 ee ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   31807:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3180e:	70 00 00 
   31811:	48 8b 37             	mov    (%rdi),%rsi
   31814:	48 d1 ee             	shr    %rsi
   31817:	48 89 37             	mov    %rsi,(%rdi)

000000000003181a <instr.bb_5b8b>:
   3181a:	85 c0                	test   %eax,%eax
   3181c:	0f 85 be fe ff ff    	jne    316e0 <instr.bb_5ae0>

0000000000031822 <instr.bb_5b93>:
   31822:	49 89 ee             	mov    %rbp,%r14
   31825:	e9 fd fd ff ff       	jmpq   31627 <instr.bb_5a2f>
   3182a:	90                   	nop
   3182b:	90                   	nop
   3182c:	90                   	nop
   3182d:	90                   	nop
   3182e:	90                   	nop
   3182f:	90                   	nop

0000000000031830 <mbedtls_mpi_div_mpi.instr.bb_60d0>:
   31830:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   31834:	c5 fe 7f 8c 24 58 0e 	vmovdqu %ymm1,-0x3ffff1a8(%rsp)
   3183b:	00 c0 
   3183d:	c5 fe 7f 8c 24 78 0e 	vmovdqu %ymm1,-0x3ffff188(%rsp)
   31844:	00 c0 
   31846:	c5 fe 7f 8c 24 98 0e 	vmovdqu %ymm1,-0x3ffff168(%rsp)
   3184d:	00 c0 
   3184f:	c5 fe 7f 8c 24 b8 0e 	vmovdqu %ymm1,-0x3ffff148(%rsp)
   31856:	00 c0 
   31858:	c5 fe 7f 8c 24 d8 0e 	vmovdqu %ymm1,-0x3ffff128(%rsp)
   3185f:	00 c0 
   31861:	c5 fe 7f 8c 24 f8 0e 	vmovdqu %ymm1,-0x3ffff108(%rsp)
   31868:	00 c0 
   3186a:	c5 fe 7f 8c 24 18 0f 	vmovdqu %ymm1,-0x3ffff0e8(%rsp)
   31871:	00 c0 
   31873:	c5 fe 7f 8c 24 38 0f 	vmovdqu %ymm1,-0x3ffff0c8(%rsp)
   3187a:	00 c0 
   3187c:	c5 fe 7f 8c 24 58 0f 	vmovdqu %ymm1,-0x3ffff0a8(%rsp)
   31883:	00 c0 
   31885:	c5 fe 7f 8c 24 78 0f 	vmovdqu %ymm1,-0x3ffff088(%rsp)
   3188c:	00 c0 
   3188e:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   31895:	00 c0 
   31897:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   3189e:	00 c0 
   318a0:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   318a7:	00 c0 
   318a9:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   318b0:	00 c0 
   318b2:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
   318b7:	f3 0f 1e fa          	endbr64 
   318bb:	41 57                	push   %r15
   318bd:	49 89 fb             	mov    %rdi,%r11
   318c0:	41 56                	push   %r14
   318c2:	41 55                	push   %r13
   318c4:	41 54                	push   %r12
   318c6:	55                   	push   %rbp
   318c7:	48 89 d5             	mov    %rdx,%rbp
   318ca:	53                   	push   %rbx
   318cb:	48 89 cb             	mov    %rcx,%rbx
   318ce:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
   318d5:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   318da:	4c 8d bc 24 30 01 00 	lea    0x130(%rsp),%r15
   318e1:	00 
   318e2:	48 89 cf             	mov    %rcx,%rdi
   318e5:	4c 8d ac 24 50 01 00 	lea    0x150(%rsp),%r13
   318ec:	00 
   318ed:	48 89 34 24          	mov    %rsi,(%rsp)
   318f1:	4c 89 fe             	mov    %r15,%rsi
   318f4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   318fb:	00 00 
   318fd:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   31904:	00 
   31905:	31 c0                	xor    %eax,%eax
   31907:	4c 89 ac 24 40 01 00 	mov    %r13,0x140(%rsp)
   3190e:	00 
   3190f:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
   31916:	00 00 00 00 00 
   3191b:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   31922:	01 00 00 00 
   31926:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   3192d:	00 01 00 00 00 
   31932:	e8 59 f3 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

0000000000031937 <instr.bb_6150>:
   31937:	85 c0                	test   %eax,%eax
   31939:	0f 84 81 4d fd ff    	je     66c0 <mbedtls_mpi_div_mpi+0x5f0>

000000000003193f <instr.bb_6158>:
   3193f:	48 89 de             	mov    %rbx,%rsi
   31942:	48 89 ef             	mov    %rbp,%rdi
   31945:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   3194c:	01 00 00 00 
   31950:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   31957:	00 00 00 00 00 
   3195c:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   31963:	00 00 00 00 00 
   31968:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   3196f:	01 00 00 00 
   31973:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   3197a:	00 00 00 00 00 
   3197f:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   31986:	00 00 00 00 00 
   3198b:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   31992:	01 00 00 00 
   31996:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   3199d:	00 00 00 00 00 
   319a2:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   319a9:	00 00 00 00 00 
   319ae:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   319b5:	01 00 00 00 
   319b9:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   319c0:	00 00 00 00 00 
   319c5:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   319cc:	00 00 00 00 00 
   319d1:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   319d8:	01 00 00 00 
   319dc:	48 c7 84 24 18 01 00 	movq   $0x3,0x118(%rsp)
   319e3:	00 03 00 00 00 
   319e8:	4c 89 ac 24 20 01 00 	mov    %r13,0x120(%rsp)
   319ef:	00 
   319f0:	e8 cb f1 ff ff       	callq  30bc0 <mbedtls_mpi_cmp_abs.instr.bb_53b0>

00000000000319f5 <instr.bb_620e>:
   319f5:	85 c0                	test   %eax,%eax
   319f7:	0f 89 e3 48 fd ff    	jns    62e0 <mbedtls_mpi_div_mpi+0x210>

00000000000319fd <instr.bb_6216>:
   319fd:	4d 85 db             	test   %r11,%r11
   31a00:	0f 84 1a 00 00 00    	je     31a20 <instr.bb_622e>

0000000000031a06 <instr.bb_621b>:
   31a06:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   31a0b:	31 f6                	xor    %esi,%esi
   31a0d:	e8 4e ed ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   31a12:	e9 10 48 fd ff       	jmpq   6227 <mbedtls_mpi_div_mpi+0x157>
   31a17:	90                   	nop
   31a18:	90                   	nop
   31a19:	90                   	nop
   31a1a:	90                   	nop
   31a1b:	90                   	nop
   31a1c:	90                   	nop
   31a1d:	90                   	nop
   31a1e:	90                   	nop
   31a1f:	90                   	nop

0000000000031a20 <instr.bb_622e>:
   31a20:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   31a25:	0f 84 7d 48 fd ff    	je     62a8 <mbedtls_mpi_div_mpi+0x1d8>

0000000000031a2b <instr.bb_6235>:
   31a2b:	48 8b 3c 24          	mov    (%rsp),%rdi
   31a2f:	48 89 ee             	mov    %rbp,%rsi
   31a32:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31a39:	70 00 00 
   31a3c:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   31a43:	00 
   31a44:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31a4b:	70 00 00 
   31a4e:	e8 ed eb ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   31a53:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31a5a:	70 00 00 
   31a5d:	48 8b 37             	mov    (%rdi),%rsi
   31a60:	48 d1 ee             	shr    %rsi
   31a63:	48 89 37             	mov    %rsi,(%rdi)

0000000000031a66 <instr.bb_6241>:
   31a66:	41 89 c4             	mov    %eax,%r12d
   31a69:	85 c0                	test   %eax,%eax
   31a6b:	0f 84 37 48 fd ff    	je     62a8 <mbedtls_mpi_div_mpi+0x1d8>

0000000000031a71 <instr.bb_6248>:
   31a71:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   31a78:	00 
   31a79:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   31a80:	00 
   31a81:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
   31a88:	00 
   31a89:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   31a8e:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   31a95:	00 
   31a96:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   31a9b:	4c 89 c7             	mov    %r8,%rdi
   31a9e:	e8 fd e8 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>
   31aa3:	e9 d2 47 fd ff       	jmpq   627a <mbedtls_mpi_div_mpi+0x1aa>
   31aa8:	90                   	nop
   31aa9:	90                   	nop
   31aaa:	90                   	nop
   31aab:	90                   	nop
   31aac:	90                   	nop
   31aad:	90                   	nop
   31aae:	90                   	nop
   31aaf:	90                   	nop

0000000000031ab0 <mbedtls_mpi_mod_mpi.instr.bb_6a20>:
   31ab0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   31ab4:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   31abb:	00 c0 
   31abd:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   31ac4:	00 c0 
   31ac6:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   31acd:	00 c0 
   31acf:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   31ad4:	f3 0f 1e fa          	endbr64 
   31ad8:	41 56                	push   %r14
   31ada:	49 89 f1             	mov    %rsi,%r9
   31add:	41 55                	push   %r13
   31adf:	41 54                	push   %r12
   31ae1:	55                   	push   %rbp
   31ae2:	48 89 d5             	mov    %rdx,%rbp
   31ae5:	53                   	push   %rbx
   31ae6:	48 89 fb             	mov    %rdi,%rbx
   31ae9:	48 89 d7             	mov    %rdx,%rdi
   31aec:	48 83 ec 30          	sub    $0x30,%rsp
   31af0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   31af7:	00 00 
   31af9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   31afe:	31 c0                	xor    %eax,%eax
   31b00:	49 89 e4             	mov    %rsp,%r12
   31b03:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   31b08:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   31b0f:	00 00 
   31b11:	4c 89 e6             	mov    %r12,%rsi
   31b14:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   31b1b:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   31b22:	00 00 
   31b24:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   31b29:	e8 62 f1 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

0000000000031b2e <instr.bb_6a7a>:
   31b2e:	85 c0                	test   %eax,%eax
   31b30:	0f 88 0f 50 fd ff    	js     6b45 <mbedtls_mpi_mod_mpi+0x125>

0000000000031b36 <instr.bb_6a82>:
   31b36:	48 89 e9             	mov    %rbp,%rcx
   31b39:	4c 89 ca             	mov    %r9,%rdx
   31b3c:	48 89 de             	mov    %rbx,%rsi
   31b3f:	31 ff                	xor    %edi,%edi
   31b41:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31b48:	70 00 00 
   31b4b:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   31b52:	00 
   31b53:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31b5a:	70 00 00 
   31b5d:	e8 ce fc ff ff       	callq  31830 <mbedtls_mpi_div_mpi.instr.bb_60d0>
   31b62:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31b69:	70 00 00 
   31b6c:	48 8b 37             	mov    (%rdi),%rsi
   31b6f:	48 d1 ee             	shr    %rsi
   31b72:	48 89 37             	mov    %rsi,(%rdi)

0000000000031b75 <instr.bb_6a92>:
   31b75:	41 89 c6             	mov    %eax,%r14d
   31b78:	85 c0                	test   %eax,%eax
   31b7a:	0f 84 3b 4f fd ff    	je     6abb <mbedtls_mpi_mod_mpi+0x9b>

0000000000031b80 <instr.bb_6a99>:
   31b80:	e9 9b 4f fd ff       	jmpq   6b20 <mbedtls_mpi_mod_mpi+0x100>
   31b85:	90                   	nop
   31b86:	90                   	nop
   31b87:	90                   	nop
   31b88:	90                   	nop
   31b89:	90                   	nop
   31b8a:	90                   	nop
   31b8b:	90                   	nop
   31b8c:	90                   	nop
   31b8d:	90                   	nop
   31b8e:	90                   	nop
   31b8f:	90                   	nop

0000000000031b90 <mbedtls_mpi_gcd.instr.bb_7bb0>:
   31b90:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   31b94:	c5 fe 7f 8c 24 48 0f 	vmovdqu %ymm1,-0x3ffff0b8(%rsp)
   31b9b:	00 c0 
   31b9d:	c5 fe 7f 8c 24 68 0f 	vmovdqu %ymm1,-0x3ffff098(%rsp)
   31ba4:	00 c0 
   31ba6:	c5 fe 7f 8c 24 88 0f 	vmovdqu %ymm1,-0x3ffff078(%rsp)
   31bad:	00 c0 
   31baf:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   31bb6:	00 c0 
   31bb8:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   31bbf:	00 c0 
   31bc1:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   31bc8:	00 c0 
   31bca:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   31bcf:	f3 0f 1e fa          	endbr64 
   31bd3:	41 57                	push   %r15
   31bd5:	49 89 ff             	mov    %rdi,%r15
   31bd8:	41 56                	push   %r14
   31bda:	49 89 f6             	mov    %rsi,%r14
   31bdd:	41 55                	push   %r13
   31bdf:	41 54                	push   %r12
   31be1:	49 89 d4             	mov    %rdx,%r12
   31be4:	55                   	push   %rbp
   31be5:	53                   	push   %rbx
   31be6:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   31bed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   31bf4:	00 00 
   31bf6:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   31bfb:	31 c0                	xor    %eax,%eax
   31bfd:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   31c02:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   31c09:	00 
   31c0a:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   31c0f:	48 89 ef             	mov    %rbp,%rdi
   31c12:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   31c19:	00 
   31c1a:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   31c21:	00 00 
   31c23:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   31c2a:	00 00 
   31c2c:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   31c33:	00 00 
   31c35:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   31c3c:	00 00 
   31c3e:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31c45:	70 00 00 
   31c48:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   31c4f:	00 
   31c50:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31c57:	70 00 00 
   31c5a:	e8 e1 e9 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   31c5f:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31c66:	70 00 00 
   31c69:	48 8b 37             	mov    (%rdi),%rsi
   31c6c:	48 d1 ee             	shr    %rsi
   31c6f:	48 89 37             	mov    %rsi,(%rdi)

0000000000031c72 <instr.bb_7c24>:
   31c72:	85 c0                	test   %eax,%eax
   31c74:	0f 84 3e 00 00 00    	je     31cb8 <instr.bb_7c66>

0000000000031c7a <instr.bb_7c28>:
   31c7a:	48 89 ef             	mov    %rbp,%rdi
   31c7d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   31c81:	e8 1a e7 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000031c86 <instr.bb_7c34>:
   31c86:	4c 89 ef             	mov    %r13,%rdi
   31c89:	e8 12 e7 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000031c8e <instr.bb_7c3c>:
   31c8e:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   31c93:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   31c9a:	00 00 
   31c9c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   31ca0:	0f 85 3e 62 fd ff    	jne    7ee4 <mbedtls_mpi_gcd+0x334>

0000000000031ca6 <instr.bb_7c54>:
   31ca6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   31cad:	5b                   	pop    %rbx
   31cae:	5d                   	pop    %rbp
   31caf:	41 5c                	pop    %r12
   31cb1:	41 5d                	pop    %r13
   31cb3:	41 5e                	pop    %r14
   31cb5:	41 5f                	pop    %r15
   31cb7:	c3                   	retq   

0000000000031cb8 <instr.bb_7c66>:
   31cb8:	4c 89 e6             	mov    %r12,%rsi
   31cbb:	4c 89 ef             	mov    %r13,%rdi
   31cbe:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31cc5:	70 00 00 
   31cc8:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   31ccf:	00 
   31cd0:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31cd7:	70 00 00 
   31cda:	e8 61 e9 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   31cdf:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31ce6:	70 00 00 
   31ce9:	48 8b 37             	mov    (%rdi),%rsi
   31cec:	48 d1 ee             	shr    %rsi
   31cef:	48 89 37             	mov    %rsi,(%rdi)

0000000000031cf2 <instr.bb_7c71>:
   31cf2:	85 c0                	test   %eax,%eax
   31cf4:	0f 85 80 ff ff ff    	jne    31c7a <instr.bb_7c28>

0000000000031cfa <instr.bb_7c75>:
   31cfa:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   31cff:	48 85 f6             	test   %rsi,%rsi
   31d02:	0f 84 d4 61 fd ff    	je     7edc <mbedtls_mpi_gcd+0x32c>

0000000000031d08 <instr.bb_7c83>:
   31d08:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   31d0d:	45 31 e4             	xor    %r12d,%r12d
   31d10:	31 c9                	xor    %ecx,%ecx
   31d12:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   31d16:	31 c0                	xor    %eax,%eax
   31d18:	e9 8d 5f fd ff       	jmpq   7caa <mbedtls_mpi_gcd+0xfa>
   31d1d:	90                   	nop
   31d1e:	90                   	nop
   31d1f:	90                   	nop

0000000000031d20 <instr.bb_7eac>:
   31d20:	4c 89 e6             	mov    %r12,%rsi
   31d23:	4c 89 ef             	mov    %r13,%rdi
   31d26:	e8 c5 ed ff ff       	callq  30af0 <mbedtls_mpi_shift_l.instr.bb_5250>

0000000000031d2b <instr.bb_7eb7>:
   31d2b:	85 c0                	test   %eax,%eax
   31d2d:	0f 85 47 ff ff ff    	jne    31c7a <instr.bb_7c28>

0000000000031d33 <instr.bb_7ebf>:
   31d33:	4c 89 ee             	mov    %r13,%rsi
   31d36:	4c 89 ff             	mov    %r15,%rdi
   31d39:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31d40:	70 00 00 
   31d43:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   31d4a:	00 
   31d4b:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31d52:	70 00 00 
   31d55:	e8 e6 e8 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   31d5a:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31d61:	70 00 00 
   31d64:	48 8b 37             	mov    (%rdi),%rsi
   31d67:	48 d1 ee             	shr    %rsi
   31d6a:	48 89 37             	mov    %rsi,(%rdi)

0000000000031d6d <instr.bb_7eca>:
   31d6d:	e9 08 ff ff ff       	jmpq   31c7a <instr.bb_7c28>
   31d72:	90                   	nop
   31d73:	90                   	nop
   31d74:	90                   	nop
   31d75:	90                   	nop
   31d76:	90                   	nop
   31d77:	90                   	nop
   31d78:	90                   	nop
   31d79:	90                   	nop
   31d7a:	90                   	nop
   31d7b:	90                   	nop
   31d7c:	90                   	nop
   31d7d:	90                   	nop
   31d7e:	90                   	nop
   31d7f:	90                   	nop

0000000000031d80 <mbedtls_mpi_fill_random.instr.bb_7ef0>:
   31d80:	45 31 c0             	xor    %r8d,%r8d
   31d83:	4c 89 84 24 d8 0f 00 	mov    %r8,-0x3ffff028(%rsp)
   31d8a:	c0 
   31d8b:	4c 89 84 24 e0 0f 00 	mov    %r8,-0x3ffff020(%rsp)
   31d92:	c0 
   31d93:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   31d9a:	c0 
   31d9b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   31da2:	c0 
   31da3:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   31daa:	c0 
   31dab:	f3 0f 1e fa          	endbr64 
   31daf:	41 55                	push   %r13
   31db1:	49 89 d5             	mov    %rdx,%r13
   31db4:	41 54                	push   %r12
   31db6:	49 89 f4             	mov    %rsi,%r12
   31db9:	55                   	push   %rbp
   31dba:	4c 89 e0             	mov    %r12,%rax
   31dbd:	48 89 cd             	mov    %rcx,%rbp
   31dc0:	53                   	push   %rbx
   31dc1:	48 89 fb             	mov    %rdi,%rbx
   31dc4:	48 83 ec 08          	sub    $0x8,%rsp
   31dc8:	83 e6 07             	and    $0x7,%esi
   31dcb:	40 0f 95 c6          	setne  %sil
   31dcf:	48 c1 e8 03          	shr    $0x3,%rax
   31dd3:	40 0f b6 f6          	movzbl %sil,%esi
   31dd7:	48 01 c6             	add    %rax,%rsi
   31dda:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31de1:	70 00 00 
   31de4:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   31deb:	00 
   31dec:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31df3:	70 00 00 
   31df6:	e8 e5 e7 ff ff       	callq  305e0 <mbedtls_mpi_resize_clear.instr.bb_4c90>
   31dfb:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31e02:	70 00 00 
   31e05:	48 8b 37             	mov    (%rdi),%rsi
   31e08:	48 d1 ee             	shr    %rsi
   31e0b:	48 89 37             	mov    %rsi,(%rdi)

0000000000031e0e <instr.bb_7f24>:
   31e0e:	85 c0                	test   %eax,%eax
   31e10:	0f 85 09 00 00 00    	jne    31e1f <instr.bb_7f2d>

0000000000031e16 <instr.bb_7f28>:
   31e16:	4d 85 e4             	test   %r12,%r12
   31e19:	0f 85 21 61 fd ff    	jne    7f40 <mbedtls_mpi_fill_random+0x50>

0000000000031e1f <instr.bb_7f2d>:
   31e1f:	48 83 c4 08          	add    $0x8,%rsp
   31e23:	5b                   	pop    %rbx
   31e24:	5d                   	pop    %rbp
   31e25:	41 5c                	pop    %r12
   31e27:	41 5d                	pop    %r13
   31e29:	c3                   	retq   
   31e2a:	90                   	nop
   31e2b:	90                   	nop
   31e2c:	90                   	nop
   31e2d:	90                   	nop
   31e2e:	90                   	nop
   31e2f:	90                   	nop

0000000000031e30 <mbedtls_mpi_random.instr.bb_84d0>:
   31e30:	45 31 c9             	xor    %r9d,%r9d
   31e33:	4c 89 8c 24 d8 0f 00 	mov    %r9,-0x3ffff028(%rsp)
   31e3a:	c0 
   31e3b:	4c 89 8c 24 e0 0f 00 	mov    %r9,-0x3ffff020(%rsp)
   31e42:	c0 
   31e43:	4c 89 8c 24 e8 0f 00 	mov    %r9,-0x3ffff018(%rsp)
   31e4a:	c0 
   31e4b:	4c 89 8c 24 f0 0f 00 	mov    %r9,-0x3ffff010(%rsp)
   31e52:	c0 
   31e53:	4c 89 8c 24 f8 0f 00 	mov    %r9,-0x3ffff008(%rsp)
   31e5a:	c0 
   31e5b:	f3 0f 1e fa          	endbr64 
   31e5f:	48 85 f6             	test   %rsi,%rsi
   31e62:	0f 88 df 66 fd ff    	js     8547 <mbedtls_mpi_random+0x77>

0000000000031e68 <instr.bb_84d9>:
   31e68:	41 56                	push   %r14
   31e6a:	4d 89 c6             	mov    %r8,%r14
   31e6d:	41 55                	push   %r13
   31e6f:	49 89 cd             	mov    %rcx,%r13
   31e72:	41 54                	push   %r12
   31e74:	49 89 fc             	mov    %rdi,%r12
   31e77:	48 89 d7             	mov    %rdx,%rdi
   31e7a:	55                   	push   %rbp
   31e7b:	48 89 f5             	mov    %rsi,%rbp
   31e7e:	53                   	push   %rbx
   31e7f:	48 89 d3             	mov    %rdx,%rbx
   31e82:	e8 f9 ee ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>

0000000000031e87 <instr.bb_84f8>:
   31e87:	85 c0                	test   %eax,%eax
   31e89:	0f 8e b1 66 fd ff    	jle    8540 <mbedtls_mpi_random+0x70>

0000000000031e8f <instr.bb_84fc>:
   31e8f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   31e93:	4c 89 e7             	mov    %r12,%rdi
   31e96:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   31e9d:	70 00 00 
   31ea0:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   31ea7:	00 
   31ea8:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   31eaf:	70 00 00 
   31eb2:	e8 29 e7 ff ff       	callq  305e0 <mbedtls_mpi_resize_clear.instr.bb_4c90>
   31eb7:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   31ebe:	70 00 00 
   31ec1:	48 8b 37             	mov    (%rdi),%rsi
   31ec4:	48 d1 ee             	shr    %rsi
   31ec7:	48 89 37             	mov    %rsi,(%rdi)

0000000000031eca <instr.bb_8508>:
   31eca:	85 c0                	test   %eax,%eax
   31ecc:	0f 84 46 66 fd ff    	je     8518 <mbedtls_mpi_random+0x48>

0000000000031ed2 <instr.bb_850c>:
   31ed2:	5b                   	pop    %rbx
   31ed3:	5d                   	pop    %rbp
   31ed4:	41 5c                	pop    %r12
   31ed6:	41 5d                	pop    %r13
   31ed8:	41 5e                	pop    %r14
   31eda:	c3                   	retq   
   31edb:	90                   	nop
   31edc:	90                   	nop
   31edd:	90                   	nop
   31ede:	90                   	nop
   31edf:	90                   	nop

0000000000031ee0 <mbedtls_mpi_inv_mod.instr.bb_8550>:
   31ee0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   31ee4:	c5 fe 7f 8c 24 38 0e 	vmovdqu %ymm1,-0x3ffff1c8(%rsp)
   31eeb:	00 c0 
   31eed:	c5 fe 7f 8c 24 58 0e 	vmovdqu %ymm1,-0x3ffff1a8(%rsp)
   31ef4:	00 c0 
   31ef6:	c5 fe 7f 8c 24 78 0e 	vmovdqu %ymm1,-0x3ffff188(%rsp)
   31efd:	00 c0 
   31eff:	c5 fe 7f 8c 24 98 0e 	vmovdqu %ymm1,-0x3ffff168(%rsp)
   31f06:	00 c0 
   31f08:	c5 fe 7f 8c 24 b8 0e 	vmovdqu %ymm1,-0x3ffff148(%rsp)
   31f0f:	00 c0 
   31f11:	c5 fe 7f 8c 24 d8 0e 	vmovdqu %ymm1,-0x3ffff128(%rsp)
   31f18:	00 c0 
   31f1a:	c5 fe 7f 8c 24 f8 0e 	vmovdqu %ymm1,-0x3ffff108(%rsp)
   31f21:	00 c0 
   31f23:	c5 fe 7f 8c 24 18 0f 	vmovdqu %ymm1,-0x3ffff0e8(%rsp)
   31f2a:	00 c0 
   31f2c:	c5 fe 7f 8c 24 38 0f 	vmovdqu %ymm1,-0x3ffff0c8(%rsp)
   31f33:	00 c0 
   31f35:	c5 fe 7f 8c 24 58 0f 	vmovdqu %ymm1,-0x3ffff0a8(%rsp)
   31f3c:	00 c0 
   31f3e:	c5 fe 7f 8c 24 78 0f 	vmovdqu %ymm1,-0x3ffff088(%rsp)
   31f45:	00 c0 
   31f47:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   31f4e:	00 c0 
   31f50:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   31f57:	00 c0 
   31f59:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   31f60:	00 c0 
   31f62:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   31f69:	00 c0 
   31f6b:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   31f70:	f3 0f 1e fa          	endbr64 
   31f74:	41 57                	push   %r15
   31f76:	41 56                	push   %r14
   31f78:	49 89 f6             	mov    %rsi,%r14
   31f7b:	41 55                	push   %r13
   31f7d:	41 54                	push   %r12
   31f7f:	55                   	push   %rbp
   31f80:	53                   	push   %rbx
   31f81:	48 89 d3             	mov    %rdx,%rbx
   31f84:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   31f8b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   31f90:	4c 8d a4 24 60 01 00 	lea    0x160(%rsp),%r12
   31f97:	00 
   31f98:	48 89 d7             	mov    %rdx,%rdi
   31f9b:	4c 89 e6             	mov    %r12,%rsi
   31f9e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   31fa5:	00 00 
   31fa7:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   31fae:	00 
   31faf:	31 c0                	xor    %eax,%eax
   31fb1:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   31fb8:	00 
   31fb9:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
   31fc0:	00 01 00 00 00 
   31fc5:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   31fcc:	01 00 00 00 
   31fd0:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   31fd7:	00 01 00 00 00 
   31fdc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   31fe1:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   31fe8:	00 
   31fe9:	e8 a2 ec ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

0000000000031fee <instr.bb_85ce>:
   31fee:	85 c0                	test   %eax,%eax
   31ff0:	0f 8e 0a 6b fd ff    	jle    8b00 <mbedtls_mpi_inv_mod+0x5b0>

0000000000031ff6 <instr.bb_85d6>:
   31ff6:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   31ffb:	48 89 da             	mov    %rbx,%rdx
   31ffe:	4c 89 f6             	mov    %r14,%rsi
   32001:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   32008:	00 
   32009:	48 89 ef             	mov    %rbp,%rdi
   3200c:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   32013:	00 00 
   32015:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   3201c:	00 00 
   3201e:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
   32025:	01 00 00 00 
   32029:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
   32030:	00 00 00 00 00 
   32035:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   3203c:	00 00 00 00 00 
   32041:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   32048:	01 00 00 00 
   3204c:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
   32053:	00 00 00 00 00 
   32058:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
   3205f:	00 00 00 00 00 
   32064:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
   3206b:	01 00 00 00 
   3206f:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   32076:	00 00 00 00 00 
   3207b:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   32082:	00 00 00 00 00 
   32087:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   3208e:	00 
   3208f:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   32096:	00 00 
   32098:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   3209f:	00 00 
   320a1:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
   320a8:	01 00 00 00 
   320ac:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   320b3:	00 00 00 00 00 
   320b8:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
   320bf:	00 00 00 00 00 
   320c4:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   320cb:	01 00 00 00 
   320cf:	48 c7 84 24 08 01 00 	movq   $0x0,0x108(%rsp)
   320d6:	00 00 00 00 00 
   320db:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
   320e2:	00 00 00 00 00 
   320e7:	c7 84 24 20 01 00 00 	movl   $0x1,0x120(%rsp)
   320ee:	01 00 00 00 
   320f2:	48 c7 84 24 28 01 00 	movq   $0x0,0x128(%rsp)
   320f9:	00 00 00 00 00 
   320fe:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   32105:	00 00 00 00 00 
   3210a:	c7 84 24 40 01 00 00 	movl   $0x1,0x140(%rsp)
   32111:	01 00 00 00 
   32115:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   3211c:	00 00 00 00 00 
   32121:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
   32128:	00 00 00 00 00 
   3212d:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   32134:	70 00 00 
   32137:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3213e:	00 
   3213f:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   32146:	70 00 00 
   32149:	e8 42 fa ff ff       	callq  31b90 <mbedtls_mpi_gcd.instr.bb_7bb0>
   3214e:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   32155:	70 00 00 
   32158:	48 8b 37             	mov    (%rdi),%rsi
   3215b:	48 d1 ee             	shr    %rsi
   3215e:	48 89 37             	mov    %rsi,(%rdi)

0000000000032161 <instr.bb_8712>:
   32161:	85 c0                	test   %eax,%eax
   32163:	0f 85 48 00 00 00    	jne    321b1 <instr.bb_8759+0x5>

0000000000032169 <instr.bb_8716>:
   32169:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   3216e:	4c 89 e6             	mov    %r12,%rsi
   32171:	48 89 ef             	mov    %rbp,%rdi
   32174:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
   3217b:	00 01 00 00 00 
   32180:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   32187:	01 00 00 00 
   3218b:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   32192:	00 01 00 00 00 
   32197:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   3219e:	00 
   3219f:	e8 ec ea ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

00000000000321a4 <instr.bb_8751>:
   321a4:	85 c0                	test   %eax,%eax
   321a6:	0f 84 f4 00 00 00    	je     322a0 <instr.bb_8848>

00000000000321ac <instr.bb_8759>:
   321ac:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   321b1:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   321b6:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   321bd:	00 
   321be:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   321c5:	00 
   321c6:	48 8d 8c 24 00 01 00 	lea    0x100(%rsp),%rcx
   321cd:	00 
   321ce:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
   321d5:	00 
   321d6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   321db:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
   321e2:	00 
   321e3:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
   321ea:	00 
   321eb:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
   321f2:	00 

00000000000321f3 <instr.bb_87a0>:
   321f3:	4c 89 ef             	mov    %r13,%rdi
   321f6:	89 44 24 10          	mov    %eax,0x10(%rsp)
   321fa:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
   321ff:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   32204:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   32209:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   3220e:	e8 8d e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000032213 <instr.bb_87c0>:
   32213:	4c 89 f7             	mov    %r14,%rdi
   32216:	e8 85 e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

000000000003221b <instr.bb_87c8>:
   3221b:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   32220:	4c 89 df             	mov    %r11,%rdi
   32223:	e8 78 e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000032228 <instr.bb_87d5>:
   32228:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   3222d:	4c 89 d7             	mov    %r10,%rdi
   32230:	e8 6b e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000032235 <instr.bb_87e2>:
   32235:	48 89 ef             	mov    %rbp,%rdi
   32238:	e8 63 e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

000000000003223d <instr.bb_87ea>:
   3223d:	4c 89 ff             	mov    %r15,%rdi
   32240:	e8 5b e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000032245 <instr.bb_87f2>:
   32245:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   3224a:	e8 51 e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

000000000003224f <instr.bb_87fc>:
   3224f:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   32254:	4c 89 c7             	mov    %r8,%rdi
   32257:	e8 44 e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

000000000003225c <instr.bb_8809>:
   3225c:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   32261:	4c 89 cf             	mov    %r9,%rdi
   32264:	e8 37 e1 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000032269 <instr.bb_8816>:
   32269:	8b 44 24 10          	mov    0x10(%rsp),%eax
   3226d:	48 8b 8c 24 88 01 00 	mov    0x188(%rsp),%rcx
   32274:	00 
   32275:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3227c:	00 00 
   3227e:	0f 85 eb 6a fd ff    	jne    8d6f <mbedtls_mpi_inv_mod+0x81f>

0000000000032284 <instr.bb_8831>:
   32284:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   3228b:	5b                   	pop    %rbx
   3228c:	5d                   	pop    %rbp
   3228d:	41 5c                	pop    %r12
   3228f:	41 5d                	pop    %r13
   32291:	41 5e                	pop    %r14
   32293:	41 5f                	pop    %r15
   32295:	c3                   	retq   
   32296:	90                   	nop
   32297:	90                   	nop
   32298:	90                   	nop
   32299:	90                   	nop
   3229a:	90                   	nop
   3229b:	90                   	nop
   3229c:	90                   	nop
   3229d:	90                   	nop
   3229e:	90                   	nop
   3229f:	90                   	nop

00000000000322a0 <instr.bb_8848>:
   322a0:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   322a5:	4c 89 f6             	mov    %r14,%rsi
   322a8:	48 89 da             	mov    %rbx,%rdx
   322ab:	4c 89 ef             	mov    %r13,%rdi
   322ae:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   322b5:	00 
   322b6:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   322bd:	70 00 00 
   322c0:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   322c7:	00 
   322c8:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   322cf:	70 00 00 
   322d2:	e8 d9 f7 ff ff       	callq  31ab0 <mbedtls_mpi_mod_mpi.instr.bb_6a20>
   322d7:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   322de:	70 00 00 
   322e1:	48 8b 37             	mov    (%rdi),%rsi
   322e4:	48 d1 ee             	shr    %rsi
   322e7:	48 89 37             	mov    %rsi,(%rdi)

00000000000322ea <instr.bb_8863>:
   322ea:	85 c0                	test   %eax,%eax
   322ec:	0f 85 cc fe ff ff    	jne    321be <instr.bb_8759+0x12>

00000000000322f2 <instr.bb_886b>:
   322f2:	4c 89 ee             	mov    %r13,%rsi
   322f5:	4c 89 f7             	mov    %r14,%rdi
   322f8:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   322ff:	00 
   32300:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   32307:	70 00 00 
   3230a:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   32311:	00 
   32312:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   32319:	70 00 00 
   3231c:	e8 1f e3 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   32321:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   32328:	70 00 00 
   3232b:	48 8b 37             	mov    (%rdi),%rsi
   3232e:	48 d1 ee             	shr    %rsi
   32331:	48 89 37             	mov    %rsi,(%rdi)

0000000000032334 <instr.bb_887e>:
   32334:	85 c0                	test   %eax,%eax
   32336:	0f 85 8a fe ff ff    	jne    321c6 <instr.bb_8759+0x1a>

000000000003233c <instr.bb_8886>:
   3233c:	48 89 de             	mov    %rbx,%rsi
   3233f:	4c 89 ff             	mov    %r15,%rdi
   32342:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   32349:	70 00 00 
   3234c:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   32353:	00 
   32354:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3235b:	70 00 00 
   3235e:	e8 dd e2 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   32363:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3236a:	70 00 00 
   3236d:	48 8b 37             	mov    (%rdi),%rsi
   32370:	48 d1 ee             	shr    %rsi
   32373:	48 89 37             	mov    %rsi,(%rdi)

0000000000032376 <instr.bb_8891>:
   32376:	85 c0                	test   %eax,%eax
   32378:	0f 85 48 fe ff ff    	jne    321c6 <instr.bb_8759+0x1a>

000000000003237e <instr.bb_8899>:
   3237e:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   32385:	00 
   32386:	48 89 de             	mov    %rbx,%rsi
   32389:	48 89 c7             	mov    %rax,%rdi
   3238c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   32391:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   32398:	70 00 00 
   3239b:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   323a2:	00 
   323a3:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   323aa:	70 00 00 
   323ad:	e8 8e e2 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   323b2:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   323b9:	70 00 00 
   323bc:	48 8b 37             	mov    (%rdi),%rsi
   323bf:	48 d1 ee             	shr    %rsi
   323c2:	48 89 37             	mov    %rsi,(%rdi)

00000000000323c5 <instr.bb_88b1>:
   323c5:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
   323cc:	00 
   323cd:	85 c0                	test   %eax,%eax
   323cf:	0f 85 06 fe ff ff    	jne    321db <instr.bb_8759+0x2f>

00000000000323d5 <instr.bb_88c1>:
   323d5:	4c 89 df             	mov    %r11,%rdi
   323d8:	be 01 00 00 00       	mov    $0x1,%esi
   323dd:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   323e2:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   323e9:	70 00 00 
   323ec:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   323f3:	00 
   323f4:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   323fb:	70 00 00 
   323fe:	e8 5d e3 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   32403:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3240a:	70 00 00 
   3240d:	48 8b 37             	mov    (%rdi),%rsi
   32410:	48 d1 ee             	shr    %rsi
   32413:	48 89 37             	mov    %rsi,(%rdi)

0000000000032416 <instr.bb_88d3>:
   32416:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   3241b:	85 c0                	test   %eax,%eax
   3241d:	0f 85 b8 fd ff ff    	jne    321db <instr.bb_8759+0x2f>

0000000000032423 <instr.bb_88e0>:
   32423:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
   3242a:	00 
   3242b:	31 f6                	xor    %esi,%esi
   3242d:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   32432:	4c 89 d7             	mov    %r10,%rdi
   32435:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   3243a:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   32441:	70 00 00 
   32444:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3244b:	00 
   3244c:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   32453:	70 00 00 
   32456:	e8 05 e3 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   3245b:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   32462:	70 00 00 
   32465:	48 8b 37             	mov    (%rdi),%rsi
   32468:	48 d1 ee             	shr    %rsi
   3246b:	48 89 37             	mov    %rsi,(%rdi)

000000000003246e <instr.bb_88fc>:
   3246e:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   32473:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   32478:	85 c0                	test   %eax,%eax
   3247a:	0f 85 63 fd ff ff    	jne    321e3 <instr.bb_8759+0x37>

0000000000032480 <instr.bb_890e>:
   32480:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
   32487:	00 
   32488:	31 f6                	xor    %esi,%esi
   3248a:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   3248f:	4c 89 c7             	mov    %r8,%rdi
   32492:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   32497:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   3249c:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   324a3:	70 00 00 
   324a6:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   324ad:	00 
   324ae:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   324b5:	70 00 00 
   324b8:	e8 a3 e2 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   324bd:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   324c4:	70 00 00 
   324c7:	48 8b 37             	mov    (%rdi),%rsi
   324ca:	48 d1 ee             	shr    %rsi
   324cd:	48 89 37             	mov    %rsi,(%rdi)

00000000000324d0 <instr.bb_892f>:
   324d0:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   324d5:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   324da:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
   324e1:	00 
   324e2:	85 c0                	test   %eax,%eax
   324e4:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   324e9:	0f 85 04 fd ff ff    	jne    321f3 <instr.bb_87a0>

00000000000324ef <instr.bb_894e>:
   324ef:	4c 89 cf             	mov    %r9,%rdi
   324f2:	be 01 00 00 00       	mov    $0x1,%esi
   324f7:	4c 89 5c 24 38       	mov    %r11,0x38(%rsp)
   324fc:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   32501:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   32506:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3250d:	70 00 00 
   32510:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   32517:	00 
   32518:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3251f:	70 00 00 
   32522:	e8 39 e2 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   32527:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3252e:	70 00 00 
   32531:	48 8b 37             	mov    (%rdi),%rsi
   32534:	48 d1 ee             	shr    %rsi
   32537:	48 89 37             	mov    %rsi,(%rdi)

000000000003253a <instr.bb_896a>:
   3253a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   3253f:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   32544:	85 c0                	test   %eax,%eax
   32546:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   3254b:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
   32550:	0f 85 9d fc ff ff    	jne    321f3 <instr.bb_87a0>

0000000000032556 <instr.bb_8986>:
   32556:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   3255b:	4c 89 c3             	mov    %r8,%rbx
   3255e:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   32563:	4c 89 cd             	mov    %r9,%rbp
   32566:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   3256b:	4d 89 d4             	mov    %r10,%r12
   3256e:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   32573:	4d 89 de             	mov    %r11,%r14

0000000000032576 <instr.bb_89a6>:
   32576:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   3257d:	00 
   3257e:	f6 07 01             	testb  $0x1,(%rdi)
   32581:	0f 85 1b 01 00 00    	jne    326a2 <instr.bb_8a6a>

0000000000032587 <instr.bb_89b7>:
   32587:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   3258e:	00 
   3258f:	48 85 f6             	test   %rsi,%rsi
   32592:	0f 85 2f 02 00 00    	jne    327c7 <instr.bb_8b34>

0000000000032598 <instr.bb_89c8>:
   32598:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   3259f:	00 
   325a0:	f6 00 01             	testb  $0x1,(%rax)
   325a3:	0f 85 11 00 00 00    	jne    325ba <instr.bb_89e2>

00000000000325a9 <instr.bb_89d5>:
   325a9:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   325b0:	00 
   325b1:	f6 00 01             	testb  $0x1,(%rax)
   325b4:	0f 84 94 00 00 00    	je     3264e <instr.bb_8a18>

00000000000325ba <instr.bb_89e2>:
   325ba:	b9 01 00 00 00       	mov    $0x1,%ecx
   325bf:	4c 89 fa             	mov    %r15,%rdx
   325c2:	4c 89 f6             	mov    %r14,%rsi
   325c5:	4c 89 f7             	mov    %r14,%rdi
   325c8:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   325cf:	70 00 00 
   325d2:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   325d9:	00 
   325da:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   325e1:	70 00 00 
   325e4:	e8 77 ec ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>
   325e9:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   325f0:	70 00 00 
   325f3:	48 8b 37             	mov    (%rdi),%rsi
   325f6:	48 d1 ee             	shr    %rsi
   325f9:	48 89 37             	mov    %rsi,(%rdi)

00000000000325fc <instr.bb_89f5>:
   325fc:	85 c0                	test   %eax,%eax
   325fe:	0f 85 93 02 00 00    	jne    32897 <instr.bb_8b9a>

0000000000032604 <instr.bb_89fd>:
   32604:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   32609:	4c 89 ea             	mov    %r13,%rdx
   3260c:	4c 89 e6             	mov    %r12,%rsi
   3260f:	4c 89 e7             	mov    %r12,%rdi
   32612:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   32619:	70 00 00 
   3261c:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   32623:	00 
   32624:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3262b:	70 00 00 
   3262e:	e8 2d ec ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>
   32633:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3263a:	70 00 00 
   3263d:	48 8b 37             	mov    (%rdi),%rsi
   32640:	48 d1 ee             	shr    %rsi
   32643:	48 89 37             	mov    %rsi,(%rdi)

0000000000032646 <instr.bb_8a10>:
   32646:	85 c0                	test   %eax,%eax
   32648:	0f 85 49 02 00 00    	jne    32897 <instr.bb_8b9a>

000000000003264e <instr.bb_8a18>:
   3264e:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   32655:	00 
   32656:	48 85 f6             	test   %rsi,%rsi
   32659:	0f 85 77 01 00 00    	jne    327d6 <instr.bb_8b43>

000000000003265f <instr.bb_8a29>:
   3265f:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   32666:	00 
   32667:	48 85 f6             	test   %rsi,%rsi
   3266a:	0f 84 06 ff ff ff    	je     32576 <instr.bb_89a6>

0000000000032670 <instr.bb_8a3a>:
   32670:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   32677:	00 
   32678:	ba 01 00 00 00       	mov    $0x1,%edx
   3267d:	e8 1e 08 00 00       	callq  32ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>

0000000000032682 <instr.bb_8a4c>:
   32682:	e9 ef fe ff ff       	jmpq   32576 <instr.bb_89a6>
   32687:	90                   	nop
   32688:	90                   	nop
   32689:	90                   	nop
   3268a:	90                   	nop
   3268b:	90                   	nop
   3268c:	90                   	nop
   3268d:	90                   	nop
   3268e:	90                   	nop
   3268f:	90                   	nop

0000000000032690 <instr.bb_8a58>:
   32690:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
   32697:	00 
   32698:	ba 01 00 00 00       	mov    $0x1,%edx
   3269d:	e8 fe 07 00 00       	callq  32ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>

00000000000326a2 <instr.bb_8a6a>:
   326a2:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
   326a9:	00 
   326aa:	f6 07 01             	testb  $0x1,(%rdi)
   326ad:	0f 85 ff 01 00 00    	jne    328b2 <instr.bb_8bb5>

00000000000326b3 <instr.bb_8a7b>:
   326b3:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
   326ba:	00 
   326bb:	48 85 f6             	test   %rsi,%rsi
   326be:	0f 85 4c 64 fd ff    	jne    8b10 <mbedtls_mpi_inv_mod+0x5c0>

00000000000326c4 <instr.bb_8a8c>:
   326c4:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   326cb:	00 
   326cc:	f6 00 01             	testb  $0x1,(%rax)
   326cf:	0f 85 11 00 00 00    	jne    326e6 <instr.bb_8aa6>

00000000000326d5 <instr.bb_8a99>:
   326d5:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
   326dc:	00 
   326dd:	f6 00 01             	testb  $0x1,(%rax)
   326e0:	0f 84 94 00 00 00    	je     3277a <instr.bb_8adc>

00000000000326e6 <instr.bb_8aa6>:
   326e6:	b9 01 00 00 00       	mov    $0x1,%ecx
   326eb:	4c 89 fa             	mov    %r15,%rdx
   326ee:	48 89 de             	mov    %rbx,%rsi
   326f1:	48 89 df             	mov    %rbx,%rdi
   326f4:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   326fb:	70 00 00 
   326fe:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   32705:	00 
   32706:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3270d:	70 00 00 
   32710:	e8 4b eb ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>
   32715:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3271c:	70 00 00 
   3271f:	48 8b 37             	mov    (%rdi),%rsi
   32722:	48 d1 ee             	shr    %rsi
   32725:	48 89 37             	mov    %rsi,(%rdi)

0000000000032728 <instr.bb_8ab9>:
   32728:	85 c0                	test   %eax,%eax
   3272a:	0f 85 67 01 00 00    	jne    32897 <instr.bb_8b9a>

0000000000032730 <instr.bb_8ac1>:
   32730:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   32735:	4c 89 ea             	mov    %r13,%rdx
   32738:	48 89 ee             	mov    %rbp,%rsi
   3273b:	48 89 ef             	mov    %rbp,%rdi
   3273e:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   32745:	70 00 00 
   32748:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3274f:	00 
   32750:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   32757:	70 00 00 
   3275a:	e8 01 eb ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>
   3275f:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   32766:	70 00 00 
   32769:	48 8b 37             	mov    (%rdi),%rsi
   3276c:	48 d1 ee             	shr    %rsi
   3276f:	48 89 37             	mov    %rsi,(%rdi)

0000000000032772 <instr.bb_8ad4>:
   32772:	85 c0                	test   %eax,%eax
   32774:	0f 85 1d 01 00 00    	jne    32897 <instr.bb_8b9a>

000000000003277a <instr.bb_8adc>:
   3277a:	48 8b b4 24 28 01 00 	mov    0x128(%rsp),%rsi
   32781:	00 
   32782:	48 85 f6             	test   %rsi,%rsi
   32785:	0f 85 25 00 00 00    	jne    327b0 <instr.bb_8b20>

000000000003278b <instr.bb_8ae9>:
   3278b:	48 8b b4 24 48 01 00 	mov    0x148(%rsp),%rsi
   32792:	00 
   32793:	48 85 f6             	test   %rsi,%rsi
   32796:	0f 84 06 ff ff ff    	je     326a2 <instr.bb_8a6a>

000000000003279c <instr.bb_8afa>:
   3279c:	e9 ef fe ff ff       	jmpq   32690 <instr.bb_8a58>
   327a1:	90                   	nop
   327a2:	90                   	nop
   327a3:	90                   	nop
   327a4:	90                   	nop
   327a5:	90                   	nop
   327a6:	90                   	nop
   327a7:	90                   	nop
   327a8:	90                   	nop
   327a9:	90                   	nop
   327aa:	90                   	nop
   327ab:	90                   	nop
   327ac:	90                   	nop
   327ad:	90                   	nop
   327ae:	90                   	nop
   327af:	90                   	nop

00000000000327b0 <instr.bb_8b20>:
   327b0:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
   327b7:	00 
   327b8:	ba 01 00 00 00       	mov    $0x1,%edx
   327bd:	e8 de 06 00 00       	callq  32ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>

00000000000327c2 <instr.bb_8b32>:
   327c2:	e9 c4 ff ff ff       	jmpq   3278b <instr.bb_8ae9>

00000000000327c7 <instr.bb_8b34>:
   327c7:	ba 01 00 00 00       	mov    $0x1,%edx
   327cc:	e8 cf 06 00 00       	callq  32ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>

00000000000327d1 <instr.bb_8b3e>:
   327d1:	e9 c2 fd ff ff       	jmpq   32598 <instr.bb_89c8>

00000000000327d6 <instr.bb_8b43>:
   327d6:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
   327dd:	00 
   327de:	ba 01 00 00 00       	mov    $0x1,%edx
   327e3:	e8 b8 06 00 00       	callq  32ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>

00000000000327e8 <instr.bb_8b55>:
   327e8:	e9 72 fe ff ff       	jmpq   3265f <instr.bb_8a29>

00000000000327ed <instr.bb_8b5a>:
   327ed:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   327f2:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   327f7:	48 89 f7             	mov    %rsi,%rdi
   327fa:	e8 61 ea ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>

00000000000327ff <instr.bb_8b6c>:
   327ff:	85 c0                	test   %eax,%eax
   32801:	0f 85 90 00 00 00    	jne    32897 <instr.bb_8b9a>

0000000000032807 <instr.bb_8b70>:
   32807:	83 c9 ff             	or     $0xffffffff,%ecx
   3280a:	4c 89 f2             	mov    %r14,%rdx
   3280d:	48 89 de             	mov    %rbx,%rsi
   32810:	48 89 df             	mov    %rbx,%rdi
   32813:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3281a:	70 00 00 
   3281d:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   32824:	00 
   32825:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3282c:	70 00 00 
   3282f:	e8 2c ea ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>
   32834:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3283b:	70 00 00 
   3283e:	48 8b 37             	mov    (%rdi),%rsi
   32841:	48 d1 ee             	shr    %rsi
   32844:	48 89 37             	mov    %rsi,(%rdi)

0000000000032847 <instr.bb_8b81>:
   32847:	85 c0                	test   %eax,%eax
   32849:	0f 85 48 00 00 00    	jne    32897 <instr.bb_8b9a>

000000000003284f <instr.bb_8b85>:
   3284f:	83 c9 ff             	or     $0xffffffff,%ecx
   32852:	4c 89 e2             	mov    %r12,%rdx
   32855:	48 89 ee             	mov    %rbp,%rsi
   32858:	48 89 ef             	mov    %rbp,%rdi
   3285b:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   32862:	70 00 00 
   32865:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3286c:	00 
   3286d:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   32874:	70 00 00 
   32877:	e8 e4 e9 ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>
   3287c:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   32883:	70 00 00 
   32886:	48 8b 37             	mov    (%rdi),%rsi
   32889:	48 d1 ee             	shr    %rsi
   3288c:	48 89 37             	mov    %rsi,(%rdi)

000000000003288f <instr.bb_8b96>:
   3288f:	85 c0                	test   %eax,%eax
   32891:	0f 84 db 00 00 00    	je     32972 <instr.bb_8c07>

0000000000032897 <instr.bb_8b9a>:
   32897:	4d 89 f3             	mov    %r14,%r11
   3289a:	49 89 e9             	mov    %rbp,%r9
   3289d:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   328a2:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   328a7:	4d 89 e2             	mov    %r12,%r10
   328aa:	49 89 d8             	mov    %rbx,%r8
   328ad:	e9 41 f9 ff ff       	jmpq   321f3 <instr.bb_87a0>

00000000000328b2 <instr.bb_8bb5>:
   328b2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   328b7:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   328bc:	4c 89 ce             	mov    %r9,%rsi
   328bf:	e8 cc e3 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

00000000000328c4 <instr.bb_8bc7>:
   328c4:	83 c9 ff             	or     $0xffffffff,%ecx
   328c7:	85 c0                	test   %eax,%eax
   328c9:	0f 88 1e ff ff ff    	js     327ed <instr.bb_8b5a>

00000000000328cf <instr.bb_8bce>:
   328cf:	4c 89 ca             	mov    %r9,%rdx
   328d2:	48 89 fe             	mov    %rdi,%rsi
   328d5:	e8 86 e9 ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>

00000000000328da <instr.bb_8bd9>:
   328da:	85 c0                	test   %eax,%eax
   328dc:	0f 85 b5 ff ff ff    	jne    32897 <instr.bb_8b9a>

00000000000328e2 <instr.bb_8bdd>:
   328e2:	83 c9 ff             	or     $0xffffffff,%ecx
   328e5:	48 89 da             	mov    %rbx,%rdx
   328e8:	4c 89 f6             	mov    %r14,%rsi
   328eb:	4c 89 f7             	mov    %r14,%rdi
   328ee:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   328f5:	70 00 00 
   328f8:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   328ff:	00 
   32900:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   32907:	70 00 00 
   3290a:	e8 51 e9 ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>
   3290f:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   32916:	70 00 00 
   32919:	48 8b 37             	mov    (%rdi),%rsi
   3291c:	48 d1 ee             	shr    %rsi
   3291f:	48 89 37             	mov    %rsi,(%rdi)

0000000000032922 <instr.bb_8bee>:
   32922:	85 c0                	test   %eax,%eax
   32924:	0f 85 6d ff ff ff    	jne    32897 <instr.bb_8b9a>

000000000003292a <instr.bb_8bf2>:
   3292a:	83 c9 ff             	or     $0xffffffff,%ecx
   3292d:	48 89 ea             	mov    %rbp,%rdx
   32930:	4c 89 e6             	mov    %r12,%rsi
   32933:	4c 89 e7             	mov    %r12,%rdi
   32936:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3293d:	70 00 00 
   32940:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   32947:	00 
   32948:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3294f:	70 00 00 
   32952:	e8 09 e9 ff ff       	callq  31260 <add_sub_mpi.instr.bb_5810>
   32957:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3295e:	70 00 00 
   32961:	48 8b 37             	mov    (%rdi),%rsi
   32964:	48 d1 ee             	shr    %rsi
   32967:	48 89 37             	mov    %rsi,(%rdi)

000000000003296a <instr.bb_8c03>:
   3296a:	85 c0                	test   %eax,%eax
   3296c:	0f 85 25 ff ff ff    	jne    32897 <instr.bb_8b9a>

0000000000032972 <instr.bb_8c07>:
   32972:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   32977:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   3297c:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   32983:	00 00 00 00 00 
   32988:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   3298f:	01 00 00 00 
   32993:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   32998:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   3299f:	00 01 00 00 00 
   329a4:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   329ab:	00 
   329ac:	e8 df e2 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

00000000000329b1 <instr.bb_8c46>:
   329b1:	85 c0                	test   %eax,%eax
   329b3:	0f 85 bd fb ff ff    	jne    32576 <instr.bb_89a6>

00000000000329b9 <instr.bb_8c4e>:
   329b9:	4d 89 e2             	mov    %r12,%r10
   329bc:	49 89 d8             	mov    %rbx,%r8
   329bf:	4d 89 f3             	mov    %r14,%r11
   329c2:	49 89 e9             	mov    %rbp,%r9
   329c5:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   329ca:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   329cf:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   329d4:	4c 89 c5             	mov    %r8,%rbp
   329d7:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   329dc:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   329e1:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   329e6:	e9 ad 62 fd ff       	jmpq   8c98 <mbedtls_mpi_inv_mod+0x748>
   329eb:	90                   	nop
   329ec:	90                   	nop
   329ed:	90                   	nop
   329ee:	90                   	nop
   329ef:	90                   	nop

00000000000329f0 <mbedtls_mpi_core_bitlen.part.0.instr.bb_9e80>:
   329f0:	31 c9                	xor    %ecx,%ecx
   329f2:	48 83 ee 01          	sub    $0x1,%rsi
   329f6:	0f 84 c4 74 fd ff    	je     9ec0 <mbedtls_mpi_core_bitlen.part.0+0x40>

00000000000329fc <instr.bb_9e86>:
   329fc:	4c 8b 84 f7 00 10 00 	mov    -0x3ffff000(%rdi,%rsi,8),%r8
   32a03:	c0 
   32a04:	4c 33 04 f7          	xor    (%rdi,%rsi,8),%r8
   32a08:	4d 85 c0             	test   %r8,%r8
   32a0b:	0f 84 df ff ff ff    	je     329f0 <mbedtls_mpi_core_bitlen.part.0.instr.bb_9e80>

0000000000032a11 <instr.bb_9e8f>:
   32a11:	48 8d 46 01          	lea    0x1(%rsi),%rax
   32a15:	48 c1 e0 06          	shl    $0x6,%rax

0000000000032a19 <instr.bb_9e97>:
   32a19:	31 d2                	xor    %edx,%edx
   32a1b:	48 b9 00 00 00 00 00 	movabs $0x8000000000000000,%rcx
   32a22:	00 00 80 
   32a25:	31 d2                	xor    %edx,%edx
   32a27:	e9 15 00 00 00       	jmpq   32a41 <instr.bb_9eb5>
   32a2c:	90                   	nop
   32a2d:	90                   	nop
   32a2e:	90                   	nop
   32a2f:	90                   	nop

0000000000032a30 <instr.bb_9ea8>:
   32a30:	48 83 c2 01          	add    $0x1,%rdx
   32a34:	48 d1 e9             	shr    %rcx
   32a37:	48 83 fa 40          	cmp    $0x40,%rdx
   32a3b:	0f 84 0b 00 00 00    	je     32a4c <instr.bb_9eba>

0000000000032a41 <instr.bb_9eb5>:
   32a41:	31 ff                	xor    %edi,%edi
   32a43:	4c 85 c1             	test   %r8,%rcx
   32a46:	0f 84 e4 ff ff ff    	je     32a30 <instr.bb_9ea8>

0000000000032a4c <instr.bb_9eba>:
   32a4c:	48 29 d0             	sub    %rdx,%rax
   32a4f:	c3                   	retq   

0000000000032a50 <mbedtls_mpi_core_bigendian_to_host.part.0.instr.bb_9ed0>:
   32a50:	31 db                	xor    %ebx,%ebx
   32a52:	48 8d 44 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rax
   32a57:	48 39 c7             	cmp    %rax,%rdi
   32a5a:	0f 87 7b 00 00 00    	ja     32adb <instr.bb_9f01>

0000000000032a60 <instr.bb_9ee0>:
   32a60:	48 8b 97 00 10 00 c0 	mov    -0x3ffff000(%rdi),%rdx
   32a67:	48 33 17             	xor    (%rdi),%rdx
   32a6a:	48 8b 88 00 10 00 c0 	mov    -0x3ffff000(%rax),%rcx
   32a71:	48 33 08             	xor    (%rax),%rcx
   32a74:	48 83 c7 08          	add    $0x8,%rdi
   32a78:	48 83 e8 08          	sub    $0x8,%rax
   32a7c:	48 0f ca             	bswap  %rdx
   32a7f:	48 0f c9             	bswap  %rcx
   32a82:	48 8b 9f f8 0f 00 c0 	mov    -0x3ffff008(%rdi),%rbx
   32a89:	48 85 db             	test   %rbx,%rbx
   32a8c:	0f 84 11 00 00 00    	je     32aa3 <instr.bb_9ee0+0x43>
   32a92:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   32a97:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   32a9c:	48 89 9f f8 0f 00 c0 	mov    %rbx,-0x3ffff008(%rdi)
   32aa3:	48 31 cb             	xor    %rcx,%rbx
   32aa6:	48 89 5f f8          	mov    %rbx,-0x8(%rdi)
   32aaa:	48 8b 98 08 10 00 c0 	mov    -0x3fffeff8(%rax),%rbx
   32ab1:	48 85 db             	test   %rbx,%rbx
   32ab4:	0f 84 11 00 00 00    	je     32acb <instr.bb_9ee0+0x6b>
   32aba:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   32abf:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   32ac4:	48 89 98 08 10 00 c0 	mov    %rbx,-0x3fffeff8(%rax)
   32acb:	48 31 d3             	xor    %rdx,%rbx
   32ace:	48 89 58 08          	mov    %rbx,0x8(%rax)
   32ad2:	48 39 c7             	cmp    %rax,%rdi
   32ad5:	0f 86 85 ff ff ff    	jbe    32a60 <instr.bb_9ee0>

0000000000032adb <instr.bb_9f01>:
   32adb:	c3                   	retq   
   32adc:	90                   	nop
   32add:	90                   	nop
   32ade:	90                   	nop
   32adf:	90                   	nop

0000000000032ae0 <mbedtls_mpi_core_bitlen.instr.bb_9f40>:
   32ae0:	31 c9                	xor    %ecx,%ecx
   32ae2:	f3 0f 1e fa          	endbr64 
   32ae6:	48 85 f6             	test   %rsi,%rsi
   32ae9:	0f 84 61 74 fd ff    	je     9f50 <mbedtls_mpi_core_bitlen+0x10>

0000000000032aef <instr.bb_9f49>:
   32aef:	e9 fc fe ff ff       	jmpq   329f0 <mbedtls_mpi_core_bitlen.part.0.instr.bb_9e80>
   32af4:	90                   	nop
   32af5:	90                   	nop
   32af6:	90                   	nop
   32af7:	90                   	nop
   32af8:	90                   	nop
   32af9:	90                   	nop
   32afa:	90                   	nop
   32afb:	90                   	nop
   32afc:	90                   	nop
   32afd:	90                   	nop
   32afe:	90                   	nop
   32aff:	90                   	nop

0000000000032b00 <mbedtls_mpi_core_uint_le_mpi.instr.bb_9f80>:
   32b00:	31 c9                	xor    %ecx,%ecx
   32b02:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   32b09:	c0 
   32b0a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   32b11:	c0 
   32b12:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   32b19:	c0 
   32b1a:	f3 0f 1e fa          	endbr64 
   32b1e:	41 54                	push   %r12
   32b20:	49 89 d4             	mov    %rdx,%r12
   32b23:	55                   	push   %rbp
   32b24:	48 89 f5             	mov    %rsi,%rbp
   32b27:	48 89 fe             	mov    %rdi,%rsi
   32b2a:	53                   	push   %rbx
   32b2b:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   32b2f:	e8 9c 08 00 00       	callq  333d0 <mbedtls_ct_mpi_uint_lt.instr.bb_b090>

0000000000032b34 <instr.bb_9f9a>:
   32b34:	83 f0 01             	xor    $0x1,%eax
   32b37:	89 c3                	mov    %eax,%ebx
   32b39:	49 83 fc 01          	cmp    $0x1,%r12
   32b3d:	0f 86 8d 74 fd ff    	jbe    9fd0 <mbedtls_mpi_core_uint_le_mpi+0x50>

0000000000032b43 <instr.bb_9fa5>:
   32b43:	48 8d 45 08          	lea    0x8(%rbp),%rax
   32b47:	4a 8d 54 e5 00       	lea    0x0(%rbp,%r12,8),%rdx
   32b4c:	31 ff                	xor    %edi,%edi

0000000000032b4e <instr.bb_9fb0>:
   32b4e:	48 0b 38             	or     (%rax),%rdi
   32b51:	48 83 c0 08          	add    $0x8,%rax
   32b55:	48 39 d0             	cmp    %rdx,%rax
   32b58:	0f 85 f0 ff ff ff    	jne    32b4e <instr.bb_9fb0>

0000000000032b5e <instr.bb_9fbc>:
   32b5e:	e8 4d 08 00 00       	callq  333b0 <mbedtls_ct_mpi_uint_mask.instr.bb_b030>

0000000000032b63 <instr.bb_9fc1>:
   32b63:	83 e0 01             	and    $0x1,%eax
   32b66:	09 d8                	or     %ebx,%eax
   32b68:	5b                   	pop    %rbx
   32b69:	5d                   	pop    %rbp
   32b6a:	41 5c                	pop    %r12
   32b6c:	c3                   	retq   
   32b6d:	90                   	nop
   32b6e:	90                   	nop
   32b6f:	90                   	nop

0000000000032b70 <mbedtls_mpi_core_cond_swap.instr.bb_a020>:
   32b70:	c4 41 f9 7e f0       	vmovq  %xmm14,%r8
   32b75:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   32b7a:	44 88 84 24 f8 0f 00 	mov    %r8b,-0x3ffff008(%rsp)
   32b81:	c0 
   32b82:	45 31 c0             	xor    %r8d,%r8d
   32b85:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   32b8c:	c0 
   32b8d:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   32b94:	c0 
   32b95:	44 88 84 24 f9 0f 00 	mov    %r8b,-0x3ffff007(%rsp)
   32b9c:	c0 
   32b9d:	66 44 89 84 24 fa 0f 	mov    %r8w,-0x3ffff006(%rsp)
   32ba4:	00 c0 
   32ba6:	44 89 84 24 fc 0f 00 	mov    %r8d,-0x3ffff004(%rsp)
   32bad:	c0 
   32bae:	f3 0f 1e fa          	endbr64 
   32bb2:	48 39 f7             	cmp    %rsi,%rdi
   32bb5:	0f 84 c5 74 fd ff    	je     a080 <mbedtls_mpi_core_cond_swap+0x60>

0000000000032bbb <instr.bb_a029>:
   32bbb:	4c 8b 84 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%r8
   32bc2:	c0 
   32bc3:	4d 85 c0             	test   %r8,%r8
   32bc6:	0f 84 12 00 00 00    	je     32bde <instr.bb_a029+0x23>
   32bcc:	c4 41 f9 7e f0       	vmovq  %xmm14,%r8
   32bd1:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   32bd6:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   32bdd:	c0 
   32bde:	4d 31 e0             	xor    %r12,%r8
   32be1:	41 50                	push   %r8
   32be3:	49 89 d4             	mov    %rdx,%r12
   32be6:	55                   	push   %rbp
   32be7:	48 89 fd             	mov    %rdi,%rbp
   32bea:	0f b6 f9             	movzbl %cl,%edi
   32bed:	53                   	push   %rbx
   32bee:	48 89 f3             	mov    %rsi,%rbx
   32bf1:	e8 ba 07 00 00       	callq  333b0 <mbedtls_ct_mpi_uint_mask.instr.bb_b030>

0000000000032bf6 <instr.bb_a03e>:
   32bf6:	4d 85 e4             	test   %r12,%r12
   32bf9:	0f 84 3e 00 00 00    	je     32c3d <instr.bb_a079>

0000000000032bff <instr.bb_a043>:
   32bff:	31 ff                	xor    %edi,%edi
   32c01:	90                   	nop
   32c02:	90                   	nop
   32c03:	90                   	nop
   32c04:	90                   	nop
   32c05:	90                   	nop
   32c06:	90                   	nop
   32c07:	90                   	nop

0000000000032c08 <instr.bb_a048>:
   32c08:	48 8b 4c fd 00       	mov    0x0(%rbp,%rdi,8),%rcx
   32c0d:	4c 8b 04 fb          	mov    (%rbx,%rdi,8),%r8
   32c11:	49 31 c8             	xor    %rcx,%r8
   32c14:	49 21 c0             	and    %rax,%r8
   32c17:	49 31 c8             	xor    %rcx,%r8
   32c1a:	4c 89 44 fd 00       	mov    %r8,0x0(%rbp,%rdi,8)
   32c1f:	48 8b 34 fb          	mov    (%rbx,%rdi,8),%rsi
   32c23:	48 31 f1             	xor    %rsi,%rcx
   32c26:	48 21 c1             	and    %rax,%rcx
   32c29:	48 31 f1             	xor    %rsi,%rcx
   32c2c:	48 89 0c fb          	mov    %rcx,(%rbx,%rdi,8)
   32c30:	48 83 c7 01          	add    $0x1,%rdi
   32c34:	49 39 fc             	cmp    %rdi,%r12
   32c37:	0f 85 cb ff ff ff    	jne    32c08 <instr.bb_a048>

0000000000032c3d <instr.bb_a079>:
   32c3d:	5b                   	pop    %rbx
   32c3e:	5d                   	pop    %rbp
   32c3f:	4c 8b a4 24 00 10 00 	mov    -0x3ffff000(%rsp),%r12
   32c46:	c0 
   32c47:	4c 33 24 24          	xor    (%rsp),%r12
   32c4b:	48 83 c4 08          	add    $0x8,%rsp
   32c4f:	c3                   	retq   

0000000000032c50 <mbedtls_mpi_core_read_le.instr.bb_a090>:
   32c50:	45 31 c0             	xor    %r8d,%r8d
   32c53:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   32c5a:	c0 
   32c5b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   32c62:	c0 
   32c63:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   32c6a:	c0 
   32c6b:	f3 0f 1e fa          	endbr64 
   32c6f:	55                   	push   %rbp
   32c70:	31 c0                	xor    %eax,%eax
   32c72:	48 89 d5             	mov    %rdx,%rbp
   32c75:	48 89 ca             	mov    %rcx,%rdx
   32c78:	53                   	push   %rbx
   32c79:	48 83 ec 08          	sub    $0x8,%rsp
   32c7d:	f6 c1 07             	test   $0x7,%cl
   32c80:	0f 95 c0             	setne  %al
   32c83:	48 c1 ea 03          	shr    $0x3,%rdx
   32c87:	48 01 d0             	add    %rdx,%rax
   32c8a:	48 39 f0             	cmp    %rsi,%rax
   32c8d:	0f 87 75 74 fd ff    	ja     a108 <mbedtls_mpi_core_read_le+0x78>

0000000000032c93 <instr.bb_a0b4>:
   32c93:	48 85 ff             	test   %rdi,%rdi
   32c96:	0f 84 4f 00 00 00    	je     32ceb <instr.bb_a0ff>

0000000000032c9c <instr.bb_a0b9>:
   32c9c:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   32ca3:	00 
   32ca4:	31 f6                	xor    %esi,%esi
   32ca6:	48 89 cb             	mov    %rcx,%rbx
   32ca9:	e8 f2 15 fd ff       	callq  42a0 <memset@plt>

0000000000032cae <instr.bb_a0cb>:
   32cae:	48 89 c7             	mov    %rax,%rdi
   32cb1:	48 85 db             	test   %rbx,%rbx
   32cb4:	0f 84 31 00 00 00    	je     32ceb <instr.bb_a0ff>

0000000000032cba <instr.bb_a0d3>:
   32cba:	31 c0                	xor    %eax,%eax
   32cbc:	90                   	nop
   32cbd:	90                   	nop
   32cbe:	90                   	nop
   32cbf:	90                   	nop

0000000000032cc0 <instr.bb_a0d8>:
   32cc0:	0f b6 54 05 00       	movzbl 0x0(%rbp,%rax,1),%edx
   32cc5:	48 89 c6             	mov    %rax,%rsi
   32cc8:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   32ccf:	00 
   32cd0:	48 83 c0 01          	add    $0x1,%rax
   32cd4:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   32cd8:	83 e1 38             	and    $0x38,%ecx
   32cdb:	48 d3 e2             	shl    %cl,%rdx
   32cde:	48 09 14 37          	or     %rdx,(%rdi,%rsi,1)
   32ce2:	48 39 c3             	cmp    %rax,%rbx
   32ce5:	0f 85 d5 ff ff ff    	jne    32cc0 <instr.bb_a0d8>

0000000000032ceb <instr.bb_a0ff>:
   32ceb:	31 c0                	xor    %eax,%eax
   32ced:	48 83 c4 08          	add    $0x8,%rsp
   32cf1:	5b                   	pop    %rbx
   32cf2:	5d                   	pop    %rbp
   32cf3:	c3                   	retq   
   32cf4:	90                   	nop
   32cf5:	90                   	nop
   32cf6:	90                   	nop
   32cf7:	90                   	nop
   32cf8:	90                   	nop
   32cf9:	90                   	nop
   32cfa:	90                   	nop
   32cfb:	90                   	nop
   32cfc:	90                   	nop
   32cfd:	90                   	nop
   32cfe:	90                   	nop
   32cff:	90                   	nop

0000000000032d00 <mbedtls_mpi_core_read_be.instr.bb_a110>:
   32d00:	45 31 c0             	xor    %r8d,%r8d
   32d03:	4c 89 84 24 d8 0f 00 	mov    %r8,-0x3ffff028(%rsp)
   32d0a:	c0 
   32d0b:	4c 89 84 24 e0 0f 00 	mov    %r8,-0x3ffff020(%rsp)
   32d12:	c0 
   32d13:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   32d1a:	c0 
   32d1b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   32d22:	c0 
   32d23:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   32d2a:	c0 
   32d2b:	f3 0f 1e fa          	endbr64 
   32d2f:	41 56                	push   %r14
   32d31:	31 c0                	xor    %eax,%eax
   32d33:	49 89 d6             	mov    %rdx,%r14
   32d36:	f6 c1 07             	test   $0x7,%cl
   32d39:	48 89 ca             	mov    %rcx,%rdx
   32d3c:	0f 95 c0             	setne  %al
   32d3f:	41 55                	push   %r13
   32d41:	48 c1 ea 03          	shr    $0x3,%rdx
   32d45:	41 54                	push   %r12
   32d47:	48 01 d0             	add    %rdx,%rax
   32d4a:	55                   	push   %rbp
   32d4b:	53                   	push   %rbx
   32d4c:	48 39 f0             	cmp    %rsi,%rax
   32d4f:	0f 87 4b 74 fd ff    	ja     a1a0 <mbedtls_mpi_core_read_be+0x90>

0000000000032d55 <instr.bb_a136>:
   32d55:	48 89 f5             	mov    %rsi,%rbp
   32d58:	31 c0                	xor    %eax,%eax
   32d5a:	48 85 f6             	test   %rsi,%rsi
   32d5d:	0f 85 ed 73 fd ff    	jne    a150 <mbedtls_mpi_core_read_be+0x40>

0000000000032d63 <instr.bb_a140>:
   32d63:	5b                   	pop    %rbx
   32d64:	5d                   	pop    %rbp
   32d65:	41 5c                	pop    %r12
   32d67:	41 5d                	pop    %r13
   32d69:	41 5e                	pop    %r14
   32d6b:	c3                   	retq   
   32d6c:	90                   	nop
   32d6d:	90                   	nop
   32d6e:	90                   	nop
   32d6f:	90                   	nop

0000000000032d70 <mbedtls_mpi_core_write_le.instr.bb_a1b0>:
   32d70:	31 ed                	xor    %ebp,%ebp
   32d72:	f3 0f 1e fa          	endbr64 
   32d76:	48 c1 e6 03          	shl    $0x3,%rsi
   32d7a:	49 89 c9             	mov    %rcx,%r9
   32d7d:	48 39 ce             	cmp    %rcx,%rsi
   32d80:	0f 82 ca 74 fd ff    	jb     a250 <mbedtls_mpi_core_write_le+0xa0>

0000000000032d86 <instr.bb_a1c4>:
   32d86:	0f 86 52 00 00 00    	jbe    32dde <instr.bb_a214>

0000000000032d8c <instr.bb_a1c6>:
   32d8c:	48 89 c8             	mov    %rcx,%rax
   32d8f:	83 e1 07             	and    $0x7,%ecx
   32d92:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   32d96:	c1 e1 03             	shl    $0x3,%ecx
   32d99:	48 8b 04 07          	mov    (%rdi,%rax,1),%rax
   32d9d:	48 d3 e8             	shr    %cl,%rax
   32da0:	84 c0                	test   %al,%al
   32da2:	0f 85 d0 74 fd ff    	jne    a278 <mbedtls_mpi_core_write_le+0xc8>

0000000000032da8 <instr.bb_a1e2>:
   32da8:	4c 89 c8             	mov    %r9,%rax
   32dab:	e9 1f 00 00 00       	jmpq   32dcf <instr.bb_a20b>

0000000000032db0 <instr.bb_a1f0>:
   32db0:	49 89 c0             	mov    %rax,%r8
   32db3:	89 c1                	mov    %eax,%ecx
   32db5:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   32db9:	83 e1 07             	and    $0x7,%ecx
   32dbc:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
   32dc0:	c1 e1 03             	shl    $0x3,%ecx
   32dc3:	49 d3 e8             	shr    %cl,%r8
   32dc6:	45 84 c0             	test   %r8b,%r8b
   32dc9:	0f 85 a9 74 fd ff    	jne    a278 <mbedtls_mpi_core_write_le+0xc8>

0000000000032dcf <instr.bb_a20b>:
   32dcf:	31 c9                	xor    %ecx,%ecx
   32dd1:	48 83 c0 01          	add    $0x1,%rax
   32dd5:	48 39 c6             	cmp    %rax,%rsi
   32dd8:	0f 85 d2 ff ff ff    	jne    32db0 <instr.bb_a1f0>

0000000000032dde <instr.bb_a214>:
   32dde:	4d 89 ca             	mov    %r9,%r10
   32de1:	4d 85 c9             	test   %r9,%r9
   32de4:	0f 84 36 00 00 00    	je     32e20 <instr.bb_a248>

0000000000032dea <instr.bb_a21c>:
   32dea:	31 c0                	xor    %eax,%eax
   32dec:	90                   	nop
   32ded:	90                   	nop
   32dee:	90                   	nop
   32def:	90                   	nop

0000000000032df0 <instr.bb_a220>:
   32df0:	49 89 c0             	mov    %rax,%r8
   32df3:	89 c1                	mov    %eax,%ecx
   32df5:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   32df9:	83 e1 07             	and    $0x7,%ecx
   32dfc:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
   32e00:	c1 e1 03             	shl    $0x3,%ecx
   32e03:	49 d3 e8             	shr    %cl,%r8
   32e06:	44 88 04 02          	mov    %r8b,(%rdx,%rax,1)
   32e0a:	48 83 c0 01          	add    $0x1,%rax
   32e0e:	4c 39 d0             	cmp    %r10,%rax
   32e11:	0f 82 d9 ff ff ff    	jb     32df0 <instr.bb_a220>

0000000000032e17 <instr.bb_a243>:
   32e17:	4c 39 ce             	cmp    %r9,%rsi
   32e1a:	0f 82 38 74 fd ff    	jb     a258 <mbedtls_mpi_core_write_le+0xa8>

0000000000032e20 <instr.bb_a248>:
   32e20:	31 c0                	xor    %eax,%eax
   32e22:	c3                   	retq   
   32e23:	90                   	nop
   32e24:	90                   	nop
   32e25:	90                   	nop
   32e26:	90                   	nop
   32e27:	90                   	nop
   32e28:	90                   	nop
   32e29:	90                   	nop
   32e2a:	90                   	nop
   32e2b:	90                   	nop
   32e2c:	90                   	nop
   32e2d:	90                   	nop
   32e2e:	90                   	nop
   32e2f:	90                   	nop

0000000000032e30 <mbedtls_mpi_core_write_be.instr.bb_a280>:
   32e30:	45 31 c0             	xor    %r8d,%r8d
   32e33:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   32e3a:	c0 
   32e3b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   32e42:	c0 
   32e43:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   32e4a:	c0 
   32e4b:	f3 0f 1e fa          	endbr64 
   32e4f:	41 54                	push   %r12
   32e51:	55                   	push   %rbp
   32e52:	48 8d 2c f5 00 00 00 	lea    0x0(,%rsi,8),%rbp
   32e59:	00 
   32e5a:	53                   	push   %rbx
   32e5b:	48 89 fb             	mov    %rdi,%rbx
   32e5e:	48 89 d7             	mov    %rdx,%rdi
   32e61:	48 89 ca             	mov    %rcx,%rdx
   32e64:	48 39 cd             	cmp    %rcx,%rbp
   32e67:	0f 82 c3 74 fd ff    	jb     a330 <mbedtls_mpi_core_write_be+0xb0>

0000000000032e6d <instr.bb_a2a2>:
   32e6d:	0f 86 79 74 fd ff    	jbe    a2ec <mbedtls_mpi_core_write_be+0x6c>

0000000000032e73 <instr.bb_a2a4>:
   32e73:	48 89 c8             	mov    %rcx,%rax
   32e76:	83 e1 07             	and    $0x7,%ecx
   32e79:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   32e7d:	c1 e1 03             	shl    $0x3,%ecx
   32e80:	48 8b 04 03          	mov    (%rbx,%rax,1),%rax
   32e84:	48 d3 e8             	shr    %cl,%rax
   32e87:	84 c0                	test   %al,%al
   32e89:	0f 85 c1 74 fd ff    	jne    a350 <mbedtls_mpi_core_write_be+0xd0>
   32e8f:	e9 2c 74 fd ff       	jmpq   a2c0 <mbedtls_mpi_core_write_be+0x40>
   32e94:	90                   	nop
   32e95:	90                   	nop
   32e96:	90                   	nop
   32e97:	90                   	nop
   32e98:	90                   	nop
   32e99:	90                   	nop
   32e9a:	90                   	nop
   32e9b:	90                   	nop
   32e9c:	90                   	nop
   32e9d:	90                   	nop
   32e9e:	90                   	nop
   32e9f:	90                   	nop

0000000000032ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>:
   32ea0:	31 c9                	xor    %ecx,%ecx
   32ea2:	f3 0f 1e fa          	endbr64 
   32ea6:	48 89 d1             	mov    %rdx,%rcx
   32ea9:	49 89 d0             	mov    %rdx,%r8
   32eac:	48 c1 e9 06          	shr    $0x6,%rcx
   32eb0:	41 83 e0 3f          	and    $0x3f,%r8d
   32eb4:	48 39 f1             	cmp    %rsi,%rcx
   32eb7:	0f 87 c1 74 fd ff    	ja     a37e <mbedtls_mpi_core_shift_r+0x1e>

0000000000032ebd <instr.bb_a377>:
   32ebd:	0f 85 cd 74 fd ff    	jne    a390 <mbedtls_mpi_core_shift_r+0x30>

0000000000032ec3 <instr.bb_a379>:
   32ec3:	4d 85 c0             	test   %r8,%r8
   32ec6:	0f 84 c4 74 fd ff    	je     a390 <mbedtls_mpi_core_shift_r+0x30>
   32ecc:	e9 ad 74 fd ff       	jmpq   a37e <mbedtls_mpi_core_shift_r+0x1e>
   32ed1:	90                   	nop
   32ed2:	90                   	nop
   32ed3:	90                   	nop
   32ed4:	90                   	nop
   32ed5:	90                   	nop
   32ed6:	90                   	nop
   32ed7:	90                   	nop
   32ed8:	90                   	nop
   32ed9:	90                   	nop
   32eda:	90                   	nop
   32edb:	90                   	nop
   32edc:	90                   	nop
   32edd:	90                   	nop
   32ede:	90                   	nop
   32edf:	90                   	nop

0000000000032ee0 <mbedtls_mpi_core_add.instr.bb_a450>:
   32ee0:	31 ed                	xor    %ebp,%ebp
   32ee2:	f3 0f 1e fa          	endbr64 
   32ee6:	48 85 c9             	test   %rcx,%rcx
   32ee9:	0f 84 a1 75 fd ff    	je     a490 <mbedtls_mpi_core_add+0x40>

0000000000032eef <instr.bb_a459>:
   32eef:	45 31 c0             	xor    %r8d,%r8d
   32ef2:	31 c0                	xor    %eax,%eax
   32ef4:	90                   	nop
   32ef5:	90                   	nop
   32ef6:	90                   	nop
   32ef7:	90                   	nop
   32ef8:	90                   	nop
   32ef9:	90                   	nop
   32efa:	90                   	nop
   32efb:	90                   	nop
   32efc:	90                   	nop
   32efd:	90                   	nop
   32efe:	90                   	nop
   32eff:	90                   	nop

0000000000032f00 <instr.bb_a460>:
   32f00:	45 31 d2             	xor    %r10d,%r10d
   32f03:	4a 03 04 c6          	add    (%rsi,%r8,8),%rax
   32f07:	41 0f 92 c2          	setb   %r10b
   32f0b:	4a 03 04 c2          	add    (%rdx,%r8,8),%rax
   32f0f:	49 89 c1             	mov    %rax,%r9
   32f12:	4c 89 d0             	mov    %r10,%rax
   32f15:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
   32f19:	48 83 d0 00          	adc    $0x0,%rax
   32f1d:	49 83 c0 01          	add    $0x1,%r8
   32f21:	4c 39 c1             	cmp    %r8,%rcx
   32f24:	0f 85 d6 ff ff ff    	jne    32f00 <instr.bb_a460>

0000000000032f2a <instr.bb_a486>:
   32f2a:	c3                   	retq   
   32f2b:	90                   	nop
   32f2c:	90                   	nop
   32f2d:	90                   	nop
   32f2e:	90                   	nop
   32f2f:	90                   	nop

0000000000032f30 <mbedtls_mpi_core_sub.instr.bb_a510>:
   32f30:	45 31 c0             	xor    %r8d,%r8d
   32f33:	f3 0f 1e fa          	endbr64 
   32f37:	48 85 c9             	test   %rcx,%rcx
   32f3a:	0f 84 18 76 fd ff    	je     a558 <mbedtls_mpi_core_sub+0x48>

0000000000032f40 <instr.bb_a519>:
   32f40:	45 31 c9             	xor    %r9d,%r9d
   32f43:	31 c0                	xor    %eax,%eax
   32f45:	90                   	nop
   32f46:	90                   	nop
   32f47:	90                   	nop
   32f48:	90                   	nop
   32f49:	90                   	nop
   32f4a:	90                   	nop
   32f4b:	90                   	nop
   32f4c:	90                   	nop
   32f4d:	90                   	nop
   32f4e:	90                   	nop
   32f4f:	90                   	nop

0000000000032f50 <instr.bb_a520>:
   32f50:	4e 8b 04 ce          	mov    (%rsi,%r9,8),%r8
   32f54:	4e 8b 14 ca          	mov    (%rdx,%r9,8),%r10
   32f58:	45 31 db             	xor    %r11d,%r11d
   32f5b:	49 39 c0             	cmp    %rax,%r8
   32f5e:	41 0f 92 c3          	setb   %r11b
   32f62:	49 29 c0             	sub    %rax,%r8
   32f65:	31 c0                	xor    %eax,%eax
   32f67:	4d 39 c2             	cmp    %r8,%r10
   32f6a:	0f 97 c0             	seta   %al
   32f6d:	4d 29 d0             	sub    %r10,%r8
   32f70:	4e 89 04 cf          	mov    %r8,(%rdi,%r9,8)
   32f74:	49 83 c1 01          	add    $0x1,%r9
   32f78:	4c 01 d8             	add    %r11,%rax
   32f7b:	4c 39 c9             	cmp    %r9,%rcx
   32f7e:	0f 85 cc ff ff ff    	jne    32f50 <instr.bb_a520>

0000000000032f84 <instr.bb_a550>:
   32f84:	c3                   	retq   
   32f85:	90                   	nop
   32f86:	90                   	nop
   32f87:	90                   	nop
   32f88:	90                   	nop
   32f89:	90                   	nop
   32f8a:	90                   	nop
   32f8b:	90                   	nop
   32f8c:	90                   	nop
   32f8d:	90                   	nop
   32f8e:	90                   	nop
   32f8f:	90                   	nop

0000000000032f90 <mbedtls_mpi_core_mla.instr.bb_a560>:
   32f90:	45 31 c9             	xor    %r9d,%r9d
   32f93:	4c 89 8c 24 f8 0f 00 	mov    %r9,-0x3ffff008(%rsp)
   32f9a:	c0 
   32f9b:	f3 0f 1e fa          	endbr64 
   32f9f:	49 89 f1             	mov    %rsi,%r9
   32fa2:	49 89 cb             	mov    %rcx,%r11
   32fa5:	53                   	push   %rbx
   32fa6:	48 89 d6             	mov    %rdx,%rsi
   32fa9:	49 39 c9             	cmp    %rcx,%r9
   32fac:	4c 89 c3             	mov    %r8,%rbx
   32faf:	4d 0f 46 d9          	cmovbe %r9,%r11
   32fb3:	4c 89 d9             	mov    %r11,%rcx
   32fb6:	4d 29 d9             	sub    %r11,%r9
   32fb9:	41 83 e3 07          	and    $0x7,%r11d
   32fbd:	48 c1 e9 03          	shr    $0x3,%rcx
   32fc1:	48 85 c9             	test   %rcx,%rcx
   32fc4:	0f 84 d7 76 fd ff    	je     a6a1 <mbedtls_mpi_core_mla+0x141>

0000000000032fca <instr.bb_a58f>:
   32fca:	4c 8d 51 ff          	lea    -0x1(%rcx),%r10
   32fce:	31 c9                	xor    %ecx,%ecx
   32fd0:	49 83 ea 01          	sub    $0x1,%r10
   32fd4:	4d 31 c0             	xor    %r8,%r8
   32fd7:	48 8b 06             	mov    (%rsi),%rax
   32fda:	48 f7 e3             	mul    %rbx
   32fdd:	48 83 c6 08          	add    $0x8,%rsi
   32fe1:	48 01 c8             	add    %rcx,%rax
   32fe4:	4c 89 c1             	mov    %r8,%rcx
   32fe7:	48 83 d2 00          	adc    $0x0,%rdx
   32feb:	90                   	nop
   32fec:	48 01 07             	add    %rax,(%rdi)
   32fef:	48 11 d1             	adc    %rdx,%rcx
   32ff2:	48 83 c7 08          	add    $0x8,%rdi
   32ff6:	48 8b 06             	mov    (%rsi),%rax
   32ff9:	48 f7 e3             	mul    %rbx
   32ffc:	48 83 c6 08          	add    $0x8,%rsi
   33000:	48 01 c8             	add    %rcx,%rax
   33003:	4c 89 c1             	mov    %r8,%rcx
   33006:	48 83 d2 00          	adc    $0x0,%rdx
   3300a:	48 01 07             	add    %rax,(%rdi)
   3300d:	48 11 d1             	adc    %rdx,%rcx
   33010:	48 83 c7 08          	add    $0x8,%rdi
   33014:	48 8b 06             	mov    (%rsi),%rax
   33017:	48 f7 e3             	mul    %rbx
   3301a:	48 83 c6 08          	add    $0x8,%rsi
   3301e:	48 01 c8             	add    %rcx,%rax
   33021:	4c 89 c1             	mov    %r8,%rcx
   33024:	48 83 d2 00          	adc    $0x0,%rdx
   33028:	48 01 07             	add    %rax,(%rdi)
   3302b:	48 11 d1             	adc    %rdx,%rcx
   3302e:	48 83 c7 08          	add    $0x8,%rdi
   33032:	48 8b 06             	mov    (%rsi),%rax
   33035:	48 f7 e3             	mul    %rbx
   33038:	48 83 c6 08          	add    $0x8,%rsi
   3303c:	48 01 c8             	add    %rcx,%rax
   3303f:	4c 89 c1             	mov    %r8,%rcx
   33042:	48 83 d2 00          	adc    $0x0,%rdx
   33046:	48 01 07             	add    %rax,(%rdi)
   33049:	48 11 d1             	adc    %rdx,%rcx
   3304c:	48 83 c7 08          	add    $0x8,%rdi
   33050:	48 8b 06             	mov    (%rsi),%rax
   33053:	48 f7 e3             	mul    %rbx
   33056:	48 83 c6 08          	add    $0x8,%rsi
   3305a:	48 01 c8             	add    %rcx,%rax
   3305d:	4c 89 c1             	mov    %r8,%rcx
   33060:	48 83 d2 00          	adc    $0x0,%rdx
   33064:	90                   	nop
   33065:	90                   	nop
   33066:	90                   	nop
   33067:	90                   	nop
   33068:	90                   	nop
   33069:	90                   	nop
   3306a:	90                   	nop
   3306b:	90                   	nop
   3306c:	90                   	nop
   3306d:	90                   	nop
   3306e:	90                   	nop
   3306f:	90                   	nop
   33070:	48 01 07             	add    %rax,(%rdi)
   33073:	48 11 d1             	adc    %rdx,%rcx
   33076:	48 83 c7 08          	add    $0x8,%rdi
   3307a:	48 8b 06             	mov    (%rsi),%rax
   3307d:	e9 bb 75 fd ff       	jmpq   a63d <mbedtls_mpi_core_mla+0xdd>
   33082:	90                   	nop
   33083:	90                   	nop
   33084:	90                   	nop
   33085:	90                   	nop
   33086:	90                   	nop
   33087:	90                   	nop
   33088:	90                   	nop
   33089:	90                   	nop
   3308a:	90                   	nop
   3308b:	90                   	nop
   3308c:	90                   	nop
   3308d:	90                   	nop
   3308e:	90                   	nop
   3308f:	90                   	nop

0000000000033090 <mbedtls_mpi_core_mul.instr.bb_a710>:
   33090:	45 31 c9             	xor    %r9d,%r9d
   33093:	4c 89 8c 24 c8 0f 00 	mov    %r9,-0x3ffff038(%rsp)
   3309a:	c0 
   3309b:	4c 89 8c 24 d0 0f 00 	mov    %r9,-0x3ffff030(%rsp)
   330a2:	c0 
   330a3:	4c 89 8c 24 d8 0f 00 	mov    %r9,-0x3ffff028(%rsp)
   330aa:	c0 
   330ab:	4c 89 8c 24 e0 0f 00 	mov    %r9,-0x3ffff020(%rsp)
   330b2:	c0 
   330b3:	4c 89 8c 24 e8 0f 00 	mov    %r9,-0x3ffff018(%rsp)
   330ba:	c0 
   330bb:	4c 89 8c 24 f0 0f 00 	mov    %r9,-0x3ffff010(%rsp)
   330c2:	c0 
   330c3:	4c 89 8c 24 f8 0f 00 	mov    %r9,-0x3ffff008(%rsp)
   330ca:	c0 
   330cb:	f3 0f 1e fa          	endbr64 
   330cf:	41 57                	push   %r15
   330d1:	4d 89 c7             	mov    %r8,%r15
   330d4:	41 56                	push   %r14
   330d6:	41 55                	push   %r13
   330d8:	49 89 f5             	mov    %rsi,%r13
   330db:	31 f6                	xor    %esi,%esi
   330dd:	41 54                	push   %r12
   330df:	49 89 d4             	mov    %rdx,%r12
   330e2:	4c 01 c2             	add    %r8,%rdx
   330e5:	55                   	push   %rbp
   330e6:	48 c1 e2 03          	shl    $0x3,%rdx
   330ea:	48 89 fd             	mov    %rdi,%rbp
   330ed:	53                   	push   %rbx
   330ee:	48 89 cb             	mov    %rcx,%rbx
   330f1:	48 83 ec 08          	sub    $0x8,%rsp
   330f5:	e8 a6 11 fd ff       	callq  42a0 <memset@plt>

00000000000330fa <instr.bb_a73f>:
   330fa:	4d 85 ff             	test   %r15,%r15
   330fd:	0f 84 32 00 00 00    	je     33135 <instr.bb_a771>

0000000000033103 <instr.bb_a744>:
   33103:	4d 8d 74 24 01       	lea    0x1(%r12),%r14
   33108:	4e 8d 3c fb          	lea    (%rbx,%r15,8),%r15
   3310c:	90                   	nop
   3310d:	90                   	nop
   3310e:	90                   	nop
   3310f:	90                   	nop

0000000000033110 <instr.bb_a750>:
   33110:	4c 8b 03             	mov    (%rbx),%r8
   33113:	48 89 ef             	mov    %rbp,%rdi
   33116:	4c 89 e1             	mov    %r12,%rcx
   33119:	4c 89 ea             	mov    %r13,%rdx
   3311c:	4c 89 f6             	mov    %r14,%rsi
   3311f:	48 83 c3 08          	add    $0x8,%rbx
   33123:	48 83 c5 08          	add    $0x8,%rbp
   33127:	e8 64 fe ff ff       	callq  32f90 <mbedtls_mpi_core_mla.instr.bb_a560>

000000000003312c <instr.bb_a76c>:
   3312c:	4c 39 fb             	cmp    %r15,%rbx
   3312f:	0f 85 db ff ff ff    	jne    33110 <instr.bb_a750>

0000000000033135 <instr.bb_a771>:
   33135:	48 83 c4 08          	add    $0x8,%rsp
   33139:	5b                   	pop    %rbx
   3313a:	5d                   	pop    %rbp
   3313b:	41 5c                	pop    %r12
   3313d:	41 5d                	pop    %r13
   3313f:	41 5e                	pop    %r14
   33141:	41 5f                	pop    %r15
   33143:	c3                   	retq   
   33144:	90                   	nop
   33145:	90                   	nop
   33146:	90                   	nop
   33147:	90                   	nop
   33148:	90                   	nop
   33149:	90                   	nop
   3314a:	90                   	nop
   3314b:	90                   	nop
   3314c:	90                   	nop
   3314d:	90                   	nop
   3314e:	90                   	nop
   3314f:	90                   	nop

0000000000033150 <mbedtls_mpi_core_fill_random.instr.bb_a970>:
   33150:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   33154:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   3315b:	00 c0 
   3315d:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   33164:	00 c0 
   33166:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   3316d:	00 c0 
   3316f:	c4 c1 f9 7e c1       	vmovq  %xmm0,%r9
   33174:	f3 0f 1e fa          	endbr64 
   33178:	41 57                	push   %r15
   3317a:	48 89 d0             	mov    %rdx,%rax
   3317d:	41 56                	push   %r14
   3317f:	41 55                	push   %r13
   33181:	41 54                	push   %r12
   33183:	55                   	push   %rbp
   33184:	31 ed                	xor    %ebp,%ebp
   33186:	53                   	push   %rbx
   33187:	48 83 ec 18          	sub    $0x18,%rsp
   3318b:	f6 c2 07             	test   $0x7,%dl
   3318e:	40 0f 95 c5          	setne  %bpl
   33192:	48 c1 e8 03          	shr    $0x3,%rax
   33196:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   3319b:	48 01 c5             	add    %rax,%rbp
   3319e:	4c 89 04 24          	mov    %r8,(%rsp)
   331a2:	4c 8d 34 ed 00 00 00 	lea    0x0(,%rbp,8),%r14
   331a9:	00 
   331aa:	4d 89 f7             	mov    %r14,%r15
   331ad:	49 29 d7             	sub    %rdx,%r15
   331b0:	48 39 f5             	cmp    %rsi,%rbp
   331b3:	0f 87 67 78 fd ff    	ja     aa20 <mbedtls_mpi_core_fill_random+0xb0>

00000000000331b9 <instr.bb_a9b1>:
   331b9:	48 89 f3             	mov    %rsi,%rbx
   331bc:	49 89 fd             	mov    %rdi,%r13
   331bf:	49 89 d4             	mov    %rdx,%r12
   331c2:	31 f6                	xor    %esi,%esi
   331c4:	4c 89 fa             	mov    %r15,%rdx
   331c7:	48 29 eb             	sub    %rbp,%rbx
   331ca:	e8 d1 10 fd ff       	callq  42a0 <memset@plt>

00000000000331cf <instr.bb_a9c7>:
   331cf:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   331d6:	00 
   331d7:	4b 8d 7c 35 00       	lea    0x0(%r13,%r14,1),%rdi
   331dc:	31 f6                	xor    %esi,%esi
   331de:	e8 bd 10 fd ff       	callq  42a0 <memset@plt>

00000000000331e3 <instr.bb_a9db>:
   331e3:	4c 8b 04 24          	mov    (%rsp),%r8
   331e7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   331ec:	4c 89 e2             	mov    %r12,%rdx
   331ef:	4b 8d 74 3d 00       	lea    0x0(%r13,%r15,1),%rsi
   331f4:	4c 89 c7             	mov    %r8,%rdi
   331f7:	ff d1                	callq  *%rcx

00000000000331f9 <instr.bb_a9f1>:
   331f9:	41 89 c0             	mov    %eax,%r8d
   331fc:	85 c0                	test   %eax,%eax
   331fe:	0f 85 14 00 00 00    	jne    33218 <instr.bb_aa08>

0000000000033204 <instr.bb_a9f8>:
   33204:	48 85 ed             	test   %rbp,%rbp
   33207:	0f 84 0b 00 00 00    	je     33218 <instr.bb_aa08>

000000000003320d <instr.bb_a9fd>:
   3320d:	48 89 ee             	mov    %rbp,%rsi
   33210:	4c 89 ef             	mov    %r13,%rdi
   33213:	e8 38 f8 ff ff       	callq  32a50 <mbedtls_mpi_core_bigendian_to_host.part.0.instr.bb_9ed0>

0000000000033218 <instr.bb_aa08>:
   33218:	48 83 c4 18          	add    $0x18,%rsp
   3321c:	44 89 c0             	mov    %r8d,%eax
   3321f:	5b                   	pop    %rbx
   33220:	5d                   	pop    %rbp
   33221:	41 5c                	pop    %r12
   33223:	41 5d                	pop    %r13
   33225:	41 5e                	pop    %r14
   33227:	41 5f                	pop    %r15
   33229:	c3                   	retq   
   3322a:	90                   	nop
   3322b:	90                   	nop
   3322c:	90                   	nop
   3322d:	90                   	nop
   3322e:	90                   	nop
   3322f:	90                   	nop

0000000000033230 <mbedtls_mpi_core_random.instr.bb_aa30>:
   33230:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   33234:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   3323b:	00 c0 
   3323d:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   33244:	00 c0 
   33246:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   3324d:	00 c0 
   3324f:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   33256:	00 c0 
   33258:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
   3325d:	f3 0f 1e fa          	endbr64 
   33261:	41 57                	push   %r15
   33263:	4d 89 cf             	mov    %r9,%r15
   33266:	41 56                	push   %r14
   33268:	41 55                	push   %r13
   3326a:	41 54                	push   %r12
   3326c:	55                   	push   %rbp
   3326d:	48 89 fd             	mov    %rdi,%rbp
   33270:	53                   	push   %rbx
   33271:	48 89 cb             	mov    %rcx,%rbx
   33274:	48 83 ec 38          	sub    $0x38,%rsp
   33278:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   3327d:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   33282:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   33287:	48 85 c9             	test   %rcx,%rcx
   3328a:	0f 84 90 78 fd ff    	je     ab20 <mbedtls_mpi_core_random+0xf0>

0000000000033290 <instr.bb_aa63>:
   33290:	48 89 ce             	mov    %rcx,%rsi
   33293:	48 89 d7             	mov    %rdx,%rdi
   33296:	e8 55 f7 ff ff       	callq  329f0 <mbedtls_mpi_core_bitlen.part.0.instr.bb_9e80>

000000000003329b <instr.bb_aa6e>:
   3329b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   332a0:	48 83 c0 07          	add    $0x7,%rax
   332a4:	48 89 c1             	mov    %rax,%rcx
   332a7:	48 c1 e9 03          	shr    $0x3,%rcx
   332ab:	48 83 f8 28          	cmp    $0x28,%rax
   332af:	45 19 ed             	sbb    %r13d,%r13d
   332b2:	48 89 0c 24          	mov    %rcx,(%rsp)
   332b6:	41 81 e5 dc 00 00 00 	and    $0xdc,%r13d
   332bd:	41 83 c5 1e          	add    $0x1e,%r13d
   332c1:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   332c5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   332ca:	90                   	nop
   332cb:	90                   	nop
   332cc:	90                   	nop
   332cd:	90                   	nop
   332ce:	90                   	nop
   332cf:	90                   	nop
   332d0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   332d5:	48 8b 14 24          	mov    (%rsp),%rdx
   332d9:	4d 89 f8             	mov    %r15,%r8
   332dc:	48 89 de             	mov    %rbx,%rsi
   332df:	48 89 ef             	mov    %rbp,%rdi
   332e2:	e8 69 fe ff ff       	callq  33150 <mbedtls_mpi_core_fill_random.instr.bb_a970>

00000000000332e7 <instr.bb_aab7>:
   332e7:	41 89 c4             	mov    %eax,%r12d
   332ea:	85 c0                	test   %eax,%eax
   332ec:	0f 85 53 00 00 00    	jne    33345 <instr.bb_ab05>

00000000000332f2 <instr.bb_aabe>:
   332f2:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   332f7:	48 89 de             	mov    %rbx,%rsi
   332fa:	48 2b 54 24 10       	sub    0x10(%rsp),%rdx
   332ff:	48 89 ef             	mov    %rbp,%rdi
   33302:	e8 99 fb ff ff       	callq  32ea0 <mbedtls_mpi_core_shift_r.instr.bb_a360>

0000000000033307 <instr.bb_aad3>:
   33307:	41 83 ed 01          	sub    $0x1,%r13d
   3330b:	0f 84 37 78 fd ff    	je     ab48 <mbedtls_mpi_core_random+0x118>

0000000000033311 <instr.bb_aad9>:
   33311:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   33316:	48 89 da             	mov    %rbx,%rdx
   33319:	48 89 ee             	mov    %rbp,%rsi
   3331c:	e8 df f7 ff ff       	callq  32b00 <mbedtls_mpi_core_uint_le_mpi.instr.bb_9f80>

0000000000033321 <instr.bb_aae9>:
   33321:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   33326:	48 89 da             	mov    %rbx,%rdx
   33329:	48 89 ef             	mov    %rbp,%rdi
   3332c:	41 89 c6             	mov    %eax,%r14d
   3332f:	e8 2c 02 00 00       	callq  33560 <mbedtls_mpi_core_lt_ct.instr.bb_b730>

0000000000033334 <instr.bb_aafc>:
   33334:	45 85 f6             	test   %r14d,%r14d
   33337:	0f 84 93 ff ff ff    	je     332d0 <instr.bb_aa6e+0x35>

000000000003333d <instr.bb_ab01>:
   3333d:	85 c0                	test   %eax,%eax
   3333f:	0f 84 8b ff ff ff    	je     332d0 <instr.bb_aa6e+0x35>

0000000000033345 <instr.bb_ab05>:
   33345:	48 83 c4 38          	add    $0x38,%rsp
   33349:	44 89 e0             	mov    %r12d,%eax
   3334c:	5b                   	pop    %rbx
   3334d:	5d                   	pop    %rbp
   3334e:	41 5c                	pop    %r12
   33350:	41 5d                	pop    %r13
   33352:	41 5e                	pop    %r14
   33354:	41 5f                	pop    %r15
   33356:	c3                   	retq   
   33357:	90                   	nop
   33358:	90                   	nop
   33359:	90                   	nop
   3335a:	90                   	nop
   3335b:	90                   	nop
   3335c:	90                   	nop
   3335d:	90                   	nop
   3335e:	90                   	nop
   3335f:	90                   	nop

0000000000033360 <mbedtls_mpi_core_sub_int.instr.bb_aec0>:
   33360:	31 db                	xor    %ebx,%ebx
   33362:	f3 0f 1e fa          	endbr64 
   33366:	48 89 d0             	mov    %rdx,%rax
   33369:	48 85 c9             	test   %rcx,%rcx
   3336c:	0f 84 2f 00 00 00    	je     333a1 <instr.bb_aeed>

0000000000033372 <instr.bb_aecc>:
   33372:	45 31 c0             	xor    %r8d,%r8d
   33375:	90                   	nop
   33376:	90                   	nop
   33377:	90                   	nop
   33378:	90                   	nop
   33379:	90                   	nop
   3337a:	90                   	nop
   3337b:	90                   	nop
   3337c:	90                   	nop
   3337d:	90                   	nop
   3337e:	90                   	nop
   3337f:	90                   	nop

0000000000033380 <instr.bb_aed0>:
   33380:	4a 8b 14 c6          	mov    (%rsi,%r8,8),%rdx
   33384:	49 89 d1             	mov    %rdx,%r9
   33387:	49 29 c1             	sub    %rax,%r9
   3338a:	0f 92 c0             	setb   %al
   3338d:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
   33391:	49 83 c0 01          	add    $0x1,%r8
   33395:	0f b6 c0             	movzbl %al,%eax
   33398:	4c 39 c1             	cmp    %r8,%rcx
   3339b:	0f 85 df ff ff ff    	jne    33380 <instr.bb_aed0>

00000000000333a1 <instr.bb_aeed>:
   333a1:	c3                   	retq   
   333a2:	90                   	nop
   333a3:	90                   	nop
   333a4:	90                   	nop
   333a5:	90                   	nop
   333a6:	90                   	nop
   333a7:	90                   	nop
   333a8:	90                   	nop
   333a9:	90                   	nop
   333aa:	90                   	nop
   333ab:	90                   	nop
   333ac:	90                   	nop
   333ad:	90                   	nop
   333ae:	90                   	nop
   333af:	90                   	nop

00000000000333b0 <mbedtls_ct_mpi_uint_mask.instr.bb_b030>:
   333b0:	31 c9                	xor    %ecx,%ecx
   333b2:	f3 0f 1e fa          	endbr64 
   333b6:	49 89 f8             	mov    %rdi,%r8
   333b9:	48 f7 df             	neg    %rdi
   333bc:	4c 09 c7             	or     %r8,%rdi
   333bf:	48 89 f8             	mov    %rdi,%rax
   333c2:	48 c1 f8 3f          	sar    $0x3f,%rax
   333c6:	c3                   	retq   
   333c7:	90                   	nop
   333c8:	90                   	nop
   333c9:	90                   	nop
   333ca:	90                   	nop
   333cb:	90                   	nop
   333cc:	90                   	nop
   333cd:	90                   	nop
   333ce:	90                   	nop
   333cf:	90                   	nop

00000000000333d0 <mbedtls_ct_mpi_uint_lt.instr.bb_b090>:
   333d0:	31 db                	xor    %ebx,%ebx
   333d2:	f3 0f 1e fa          	endbr64 
   333d6:	48 89 fa             	mov    %rdi,%rdx
   333d9:	48 89 f0             	mov    %rsi,%rax
   333dc:	48 31 f7             	xor    %rsi,%rdi
   333df:	48 29 f2             	sub    %rsi,%rdx
   333e2:	48 31 d0             	xor    %rdx,%rax
   333e5:	48 21 f8             	and    %rdi,%rax
   333e8:	48 31 d0             	xor    %rdx,%rax
   333eb:	48 c1 e8 3f          	shr    $0x3f,%rax
   333ef:	c3                   	retq   

00000000000333f0 <mbedtls_mpi_safe_cond_swap.instr.bb_b680>:
   333f0:	31 c9                	xor    %ecx,%ecx
   333f2:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   333f9:	c0 
   333fa:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   33401:	c0 
   33402:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   33409:	c0 
   3340a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   33411:	c0 
   33412:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33419:	c0 
   3341a:	f3 0f 1e fa          	endbr64 
   3341e:	31 c0                	xor    %eax,%eax
   33420:	48 39 f7             	cmp    %rsi,%rdi
   33423:	0f 84 ff 82 fd ff    	je     b728 <mbedtls_mpi_safe_cond_swap+0xa8>

0000000000033429 <instr.bb_b68f>:
   33429:	41 54                	push   %r12
   3342b:	41 89 d4             	mov    %edx,%r12d
   3342e:	55                   	push   %rbp
   3342f:	48 89 f5             	mov    %rsi,%rbp
   33432:	53                   	push   %rbx
   33433:	48 89 fb             	mov    %rdi,%rbx
   33436:	48 83 ec 10          	sub    $0x10,%rsp
   3343a:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   3343e:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33445:	70 00 00 
   33448:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3344f:	00 
   33450:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33457:	70 00 00 
   3345a:	e8 c1 cf ff ff       	callq  30420 <mbedtls_mpi_grow.instr.bb_4bf0>
   3345f:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33466:	70 00 00 
   33469:	48 8b 37             	mov    (%rdi),%rsi
   3346c:	48 d1 ee             	shr    %rsi
   3346f:	48 89 37             	mov    %rsi,(%rdi)

0000000000033472 <instr.bb_b6a9>:
   33472:	85 c0                	test   %eax,%eax
   33474:	0f 84 16 00 00 00    	je     33490 <instr.bb_b6c0>

000000000003347a <instr.bb_b6ad>:
   3347a:	48 83 c4 10          	add    $0x10,%rsp
   3347e:	5b                   	pop    %rbx
   3347f:	5d                   	pop    %rbp
   33480:	41 5c                	pop    %r12
   33482:	c3                   	retq   
   33483:	90                   	nop
   33484:	90                   	nop
   33485:	90                   	nop
   33486:	90                   	nop
   33487:	90                   	nop
   33488:	90                   	nop
   33489:	90                   	nop
   3348a:	90                   	nop
   3348b:	90                   	nop
   3348c:	90                   	nop
   3348d:	90                   	nop
   3348e:	90                   	nop
   3348f:	90                   	nop

0000000000033490 <instr.bb_b6c0>:
   33490:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   33494:	48 89 ef             	mov    %rbp,%rdi
   33497:	e8 84 cf ff ff       	callq  30420 <mbedtls_mpi_grow.instr.bb_4bf0>

000000000003349c <instr.bb_b6cc>:
   3349c:	85 c0                	test   %eax,%eax
   3349e:	0f 85 d6 ff ff ff    	jne    3347a <instr.bb_b6ad>

00000000000334a4 <instr.bb_b6d0>:
   334a4:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   334a8:	8b 83 00 10 00 c0    	mov    -0x3ffff000(%rbx),%eax
   334ae:	33 03                	xor    (%rbx),%eax
   334b0:	41 0f b6 cc          	movzbl %r12b,%ecx
   334b4:	8d 3c 09             	lea    (%rcx,%rcx,1),%edi
   334b7:	8d 50 01             	lea    0x1(%rax),%edx
   334ba:	8b 85 00 10 00 c0    	mov    -0x3ffff000(%rbp),%eax
   334c0:	33 45 00             	xor    0x0(%rbp),%eax
   334c3:	8d 70 01             	lea    0x1(%rax),%esi
   334c6:	31 d6                	xor    %edx,%esi
   334c8:	21 fe                	and    %edi,%esi
   334ca:	31 d6                	xor    %edx,%esi
   334cc:	83 ee 01             	sub    $0x1,%esi
   334cf:	44 8b 83 00 10 00 c0 	mov    -0x3ffff000(%rbx),%r8d
   334d6:	45 85 c0             	test   %r8d,%r8d
   334d9:	0f 84 11 00 00 00    	je     334f0 <instr.bb_b6d0+0x4c>
   334df:	c4 41 f9 7e f0       	vmovq  %xmm14,%r8
   334e4:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   334e9:	44 89 83 00 10 00 c0 	mov    %r8d,-0x3ffff000(%rbx)
   334f0:	41 31 f0             	xor    %esi,%r8d
   334f3:	44 89 03             	mov    %r8d,(%rbx)
   334f6:	8b 85 00 10 00 c0    	mov    -0x3ffff000(%rbp),%eax
   334fc:	33 45 00             	xor    0x0(%rbp),%eax
   334ff:	8d 70 01             	lea    0x1(%rax),%esi
   33502:	31 f2                	xor    %esi,%edx
   33504:	21 fa                	and    %edi,%edx
   33506:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   3350a:	31 f2                	xor    %esi,%edx
   3350c:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   33510:	83 ea 01             	sub    $0x1,%edx
   33513:	44 8b 85 00 10 00 c0 	mov    -0x3ffff000(%rbp),%r8d
   3351a:	45 85 c0             	test   %r8d,%r8d
   3351d:	0f 84 11 00 00 00    	je     33534 <instr.bb_b6d0+0x90>
   33523:	c4 41 f9 7e f0       	vmovq  %xmm14,%r8
   33528:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3352d:	44 89 85 00 10 00 c0 	mov    %r8d,-0x3ffff000(%rbp)
   33534:	41 31 d0             	xor    %edx,%r8d
   33537:	44 89 45 00          	mov    %r8d,0x0(%rbp)
   3353b:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   3353f:	e8 2c f6 ff ff       	callq  32b70 <mbedtls_mpi_core_cond_swap.instr.bb_a020>

0000000000033544 <instr.bb_b714>:
   33544:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   33548:	48 83 c4 10          	add    $0x10,%rsp
   3354c:	5b                   	pop    %rbx
   3354d:	5d                   	pop    %rbp
   3354e:	41 5c                	pop    %r12
   33550:	c3                   	retq   
   33551:	90                   	nop
   33552:	90                   	nop
   33553:	90                   	nop
   33554:	90                   	nop
   33555:	90                   	nop
   33556:	90                   	nop
   33557:	90                   	nop
   33558:	90                   	nop
   33559:	90                   	nop
   3355a:	90                   	nop
   3355b:	90                   	nop
   3355c:	90                   	nop
   3355d:	90                   	nop
   3355e:	90                   	nop
   3355f:	90                   	nop

0000000000033560 <mbedtls_mpi_core_lt_ct.instr.bb_b730>:
   33560:	31 c9                	xor    %ecx,%ecx
   33562:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   33569:	c0 
   3356a:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33571:	c0 
   33572:	f3 0f 1e fa          	endbr64 
   33576:	48 85 d2             	test   %rdx,%rdx
   33579:	0f 84 29 82 fd ff    	je     b7a8 <mbedtls_mpi_core_lt_ct+0x78>

000000000003357f <instr.bb_b739>:
   3357f:	55                   	push   %rbp
   33580:	45 31 c9             	xor    %r9d,%r9d
   33583:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   33589:	53                   	push   %rbx
   3358a:	31 db                	xor    %ebx,%ebx
   3358c:	90                   	nop
   3358d:	90                   	nop
   3358e:	90                   	nop
   3358f:	90                   	nop

0000000000033590 <instr.bb_b750>:
   33590:	48 8b 44 d6 f8       	mov    -0x8(%rsi,%rdx,8),%rax
   33595:	48 8b 4c d7 f8       	mov    -0x8(%rdi,%rdx,8),%rcx
   3359a:	48 89 c5             	mov    %rax,%rbp
   3359d:	49 89 cb             	mov    %rcx,%r11
   335a0:	49 89 c8             	mov    %rcx,%r8
   335a3:	48 29 cd             	sub    %rcx,%rbp
   335a6:	49 31 c3             	xor    %rax,%r11
   335a9:	48 29 c1             	sub    %rax,%rcx
   335ac:	49 31 e8             	xor    %rbp,%r8
   335af:	48 31 c8             	xor    %rcx,%rax
   335b2:	4d 21 d8             	and    %r11,%r8
   335b5:	4c 21 d8             	and    %r11,%rax
   335b8:	49 31 e8             	xor    %rbp,%r8
   335bb:	48 31 c8             	xor    %rcx,%rax
   335be:	44 89 d1             	mov    %r10d,%ecx
   335c1:	49 c1 e8 3f          	shr    $0x3f,%r8
   335c5:	48 c1 e8 3f          	shr    $0x3f,%rax
   335c9:	41 09 d8             	or     %ebx,%r8d
   335cc:	44 29 c1             	sub    %r8d,%ecx
   335cf:	44 89 c3             	mov    %r8d,%ebx
   335d2:	21 c1                	and    %eax,%ecx
   335d4:	09 c3                	or     %eax,%ebx
   335d6:	41 09 c9             	or     %ecx,%r9d
   335d9:	48 83 ea 01          	sub    $0x1,%rdx
   335dd:	0f 85 ad ff ff ff    	jne    33590 <instr.bb_b750>

00000000000335e3 <instr.bb_b79f>:
   335e3:	44 89 c8             	mov    %r9d,%eax
   335e6:	5b                   	pop    %rbx
   335e7:	5d                   	pop    %rbp
   335e8:	c3                   	retq   
   335e9:	90                   	nop
   335ea:	90                   	nop
   335eb:	90                   	nop
   335ec:	90                   	nop
   335ed:	90                   	nop
   335ee:	90                   	nop
   335ef:	90                   	nop

00000000000335f0 <ecdh_compute_shared_restartable.constprop.0.instr.bb_ba90>:
   335f0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   335f4:	c4 c2 7d 59 c6       	vpbroadcastq %xmm14,%ymm0
   335f9:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   335fe:	c5 fe 7f 8c 24 58 0f 	vmovdqu %ymm1,-0x3ffff0a8(%rsp)
   33605:	00 c0 
   33607:	c5 fe 7f 8c 24 78 0f 	vmovdqu %ymm1,-0x3ffff088(%rsp)
   3360e:	00 c0 
   33610:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   33617:	00 c0 
   33619:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   33620:	00 c0 
   33622:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   33629:	00 c0 
   3362b:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   33632:	00 c0 
   33634:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
   33639:	44 88 94 24 78 0f 00 	mov    %r10b,-0x3ffff088(%rsp)
   33640:	c0 
   33641:	44 88 94 24 a8 0f 00 	mov    %r10b,-0x3ffff058(%rsp)
   33648:	c0 
   33649:	41 57                	push   %r15
   3364b:	49 89 d7             	mov    %rdx,%r15
   3364e:	41 56                	push   %r14
   33650:	49 89 f6             	mov    %rsi,%r14
   33653:	41 55                	push   %r13
   33655:	49 89 cd             	mov    %rcx,%r13
   33658:	41 54                	push   %r12
   3365a:	49 89 fc             	mov    %rdi,%r12
   3365d:	55                   	push   %rbp
   3365e:	53                   	push   %rbx
   3365f:	4c 89 c3             	mov    %r8,%rbx
   33662:	48 83 ec 68          	sub    $0x68,%rsp
   33666:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   3366b:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   33670:	48 89 ef             	mov    %rbp,%rdi
   33673:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3367a:	00 00 
   3367c:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   33681:	31 c0                	xor    %eax,%eax
   33683:	e8 28 06 00 00       	callq  33cb0 <mbedtls_ecp_point_init.instr.bb_d7a0>

0000000000033688 <instr.bb_bacf>:
   33688:	48 83 ec 08          	sub    $0x8,%rsp
   3368c:	4c 89 f9             	mov    %r15,%rcx
   3368f:	4c 89 ea             	mov    %r13,%rdx
   33692:	6a 00                	pushq  $0x0
   33694:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   33699:	4c 89 e7             	mov    %r12,%rdi
   3369c:	49 89 d8             	mov    %rbx,%r8
   3369f:	48 89 ee             	mov    %rbp,%rsi
   336a2:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   336a9:	70 00 00 
   336ac:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   336b3:	00 
   336b4:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   336bb:	70 00 00 
   336be:	e8 8d 18 00 00       	callq  34f50 <mbedtls_ecp_mul_restartable.instr.bb_fa40>
   336c3:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   336ca:	70 00 00 
   336cd:	48 8b 37             	mov    (%rdi),%rsi
   336d0:	48 d1 ee             	shr    %rsi
   336d3:	48 89 37             	mov    %rsi,(%rdi)

00000000000336d6 <instr.bb_baee>:
   336d6:	5a                   	pop    %rdx
   336d7:	59                   	pop    %rcx
   336d8:	41 89 c4             	mov    %eax,%r12d
   336db:	85 c0                	test   %eax,%eax
   336dd:	0f 84 3d 00 00 00    	je     33720 <instr.bb_bb28>

00000000000336e3 <instr.bb_baf7>:
   336e3:	48 89 ef             	mov    %rbp,%rdi
   336e6:	e8 a5 06 00 00       	callq  33d90 <mbedtls_ecp_point_free.instr.bb_d8a0>

00000000000336eb <instr.bb_baff>:
   336eb:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   336f0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   336f7:	00 00 
   336f9:	0f 85 51 84 fd ff    	jne    bb50 <ecdh_compute_shared_restartable.constprop.0+0xc0>

00000000000336ff <instr.bb_bb0f>:
   336ff:	48 83 c4 68          	add    $0x68,%rsp
   33703:	44 89 e0             	mov    %r12d,%eax
   33706:	5b                   	pop    %rbx
   33707:	5d                   	pop    %rbp
   33708:	41 5c                	pop    %r12
   3370a:	41 5d                	pop    %r13
   3370c:	41 5e                	pop    %r14
   3370e:	41 5f                	pop    %r15
   33710:	c3                   	retq   
   33711:	90                   	nop
   33712:	90                   	nop
   33713:	90                   	nop
   33714:	90                   	nop
   33715:	90                   	nop
   33716:	90                   	nop
   33717:	90                   	nop
   33718:	90                   	nop
   33719:	90                   	nop
   3371a:	90                   	nop
   3371b:	90                   	nop
   3371c:	90                   	nop
   3371d:	90                   	nop
   3371e:	90                   	nop
   3371f:	90                   	nop

0000000000033720 <instr.bb_bb28>:
   33720:	48 89 ef             	mov    %rbp,%rdi
   33723:	e8 a8 07 00 00       	callq  33ed0 <mbedtls_ecp_is_zero.instr.bb_e230>

0000000000033728 <instr.bb_bb30>:
   33728:	85 c0                	test   %eax,%eax
   3372a:	0f 85 18 84 fd ff    	jne    bb48 <ecdh_compute_shared_restartable.constprop.0+0xb8>

0000000000033730 <instr.bb_bb34>:
   33730:	48 89 ee             	mov    %rbp,%rsi
   33733:	4c 89 f7             	mov    %r14,%rdi
   33736:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3373d:	70 00 00 
   33740:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33747:	00 
   33748:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3374f:	70 00 00 
   33752:	e8 e9 ce ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   33757:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3375e:	70 00 00 
   33761:	48 8b 37             	mov    (%rdi),%rsi
   33764:	48 d1 ee             	shr    %rsi
   33767:	48 89 37             	mov    %rsi,(%rdi)

000000000003376a <instr.bb_bb3f>:
   3376a:	41 89 c4             	mov    %eax,%r12d
   3376d:	e9 71 ff ff ff       	jmpq   336e3 <instr.bb_baf7>
   33772:	90                   	nop
   33773:	90                   	nop
   33774:	90                   	nop
   33775:	90                   	nop
   33776:	90                   	nop
   33777:	90                   	nop
   33778:	90                   	nop
   33779:	90                   	nop
   3377a:	90                   	nop
   3377b:	90                   	nop
   3377c:	90                   	nop
   3377d:	90                   	nop
   3377e:	90                   	nop
   3377f:	90                   	nop

0000000000033780 <ecdh_gen_public_restartable.constprop.0.instr.bb_bb60>:
   33780:	45 31 c9             	xor    %r9d,%r9d
   33783:	4c 89 8c 24 c8 0f 00 	mov    %r9,-0x3ffff038(%rsp)
   3378a:	c0 
   3378b:	4c 89 8c 24 d0 0f 00 	mov    %r9,-0x3ffff030(%rsp)
   33792:	c0 
   33793:	4c 89 8c 24 d8 0f 00 	mov    %r9,-0x3ffff028(%rsp)
   3379a:	c0 
   3379b:	4c 89 8c 24 e0 0f 00 	mov    %r9,-0x3ffff020(%rsp)
   337a2:	c0 
   337a3:	4c 89 8c 24 e8 0f 00 	mov    %r9,-0x3ffff018(%rsp)
   337aa:	c0 
   337ab:	4c 89 8c 24 f0 0f 00 	mov    %r9,-0x3ffff010(%rsp)
   337b2:	c0 
   337b3:	4c 89 8c 24 f8 0f 00 	mov    %r9,-0x3ffff008(%rsp)
   337ba:	c0 
   337bb:	41 56                	push   %r14
   337bd:	4d 89 c6             	mov    %r8,%r14
   337c0:	41 55                	push   %r13
   337c2:	49 89 d5             	mov    %rdx,%r13
   337c5:	41 54                	push   %r12
   337c7:	49 89 f4             	mov    %rsi,%r12
   337ca:	55                   	push   %rbp
   337cb:	48 89 fd             	mov    %rdi,%rbp
   337ce:	53                   	push   %rbx
   337cf:	48 89 cb             	mov    %rcx,%rbx
   337d2:	4c 89 c1             	mov    %r8,%rcx
   337d5:	48 89 da             	mov    %rbx,%rdx
   337d8:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   337df:	70 00 00 
   337e2:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   337e9:	00 
   337ea:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   337f1:	70 00 00 
   337f4:	e8 77 17 00 00       	callq  34f70 <mbedtls_ecp_gen_privkey.instr.bb_ffa0>
   337f9:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33800:	70 00 00 
   33803:	48 8b 37             	mov    (%rdi),%rsi
   33806:	48 d1 ee             	shr    %rsi
   33809:	48 89 37             	mov    %rsi,(%rdi)

000000000003380c <instr.bb_bb82>:
   3380c:	85 c0                	test   %eax,%eax
   3380e:	0f 85 53 00 00 00    	jne    33867 <instr.bb_bba4+0x6>

0000000000033814 <instr.bb_bb86>:
   33814:	48 83 ec 08          	sub    $0x8,%rsp
   33818:	48 8d 4d 50          	lea    0x50(%rbp),%rcx
   3381c:	4c 89 e2             	mov    %r12,%rdx
   3381f:	4d 89 f1             	mov    %r14,%r9
   33822:	6a 00                	pushq  $0x0
   33824:	49 89 d8             	mov    %rbx,%r8
   33827:	4c 89 ee             	mov    %r13,%rsi
   3382a:	48 89 ef             	mov    %rbp,%rdi
   3382d:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33834:	70 00 00 
   33837:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3383e:	00 
   3383f:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33846:	70 00 00 
   33849:	e8 02 17 00 00       	callq  34f50 <mbedtls_ecp_mul_restartable.instr.bb_fa40>
   3384e:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33855:	70 00 00 
   33858:	48 8b 37             	mov    (%rdi),%rsi
   3385b:	48 d1 ee             	shr    %rsi
   3385e:	48 89 37             	mov    %rsi,(%rdi)

0000000000033861 <instr.bb_bba4>:
   33861:	5a                   	pop    %rdx
   33862:	59                   	pop    %rcx
   33863:	f3 0f 1e fa          	endbr64 
   33867:	5b                   	pop    %rbx
   33868:	5d                   	pop    %rbp
   33869:	41 5c                	pop    %r12
   3386b:	41 5d                	pop    %r13
   3386d:	41 5e                	pop    %r14
   3386f:	c3                   	retq   

0000000000033870 <mbedtls_ecdh_gen_public.instr.bb_bbd0>:
   33870:	45 31 c9             	xor    %r9d,%r9d
   33873:	f3 0f 1e fa          	endbr64 
   33877:	e9 04 ff ff ff       	jmpq   33780 <ecdh_gen_public_restartable.constprop.0.instr.bb_bb60>
   3387c:	90                   	nop
   3387d:	90                   	nop
   3387e:	90                   	nop
   3387f:	90                   	nop

0000000000033880 <mbedtls_ecdh_compute_shared.instr.bb_bbe0>:
   33880:	45 31 d2             	xor    %r10d,%r10d
   33883:	f3 0f 1e fa          	endbr64 
   33887:	e9 64 fd ff ff       	jmpq   335f0 <ecdh_compute_shared_restartable.constprop.0.instr.bb_ba90>
   3388c:	90                   	nop
   3388d:	90                   	nop
   3388e:	90                   	nop
   3388f:	90                   	nop

0000000000033890 <ecp_modp.instr.bb_c1d0>:
   33890:	31 c9                	xor    %ecx,%ecx
   33892:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   33899:	c0 
   3389a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   338a1:	c0 
   338a2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   338a9:	c0 
   338aa:	41 54                	push   %r12
   338ac:	55                   	push   %rbp
   338ad:	48 89 fd             	mov    %rdi,%rbp
   338b0:	53                   	push   %rbx
   338b1:	48 83 be c8 00 00 00 	cmpq   $0x0,0xc8(%rsi)
   338b8:	00 
   338b9:	48 89 f3             	mov    %rsi,%rbx
   338bc:	0f 84 0e 8a fd ff    	je     c2d0 <ecp_modp+0x100>

00000000000338c2 <instr.bb_c1e8>:
   338c2:	8b 97 00 10 00 c0    	mov    -0x3ffff000(%rdi),%edx
   338c8:	33 17                	xor    (%rdi),%edx
   338ca:	85 d2                	test   %edx,%edx
   338cc:	0f 88 de 89 fd ff    	js     c2b0 <ecp_modp+0xe0>

00000000000338d2 <instr.bb_c1f2>:
   338d2:	48 89 ef             	mov    %rbp,%rdi
   338d5:	e8 36 d0 ff ff       	callq  30910 <mbedtls_mpi_bitlen.instr.bb_5120>

00000000000338da <instr.bb_c1fa>:
   338da:	49 89 c0             	mov    %rax,%r8
   338dd:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
   338e4:	48 01 c0             	add    %rax,%rax
   338e7:	49 39 c0             	cmp    %rax,%r8
   338ea:	0f 87 cf 89 fd ff    	ja     c2bf <ecp_modp+0xef>

00000000000338f0 <instr.bb_c210>:
   338f0:	48 89 ef             	mov    %rbp,%rdi
   338f3:	ff 93 c8 00 00 00    	callq  *0xc8(%rbx)

00000000000338f9 <instr.bb_c219>:
   338f9:	48 83 c3 08          	add    $0x8,%rbx
   338fd:	41 89 c4             	mov    %eax,%r12d
   33900:	85 c0                	test   %eax,%eax
   33902:	0f 84 08 00 00 00    	je     33910 <instr.bb_c250>

0000000000033908 <instr.bb_c224>:
   33908:	e9 5c 00 00 00       	jmpq   33969 <instr.bb_c291>
   3390d:	90                   	nop
   3390e:	90                   	nop
   3390f:	90                   	nop

0000000000033910 <instr.bb_c250>:
   33910:	8b 85 00 10 00 c0    	mov    -0x3ffff000(%rbp),%eax
   33916:	33 45 00             	xor    0x0(%rbp),%eax
   33919:	85 c0                	test   %eax,%eax
   3391b:	0f 88 0f 89 fd ff    	js     c230 <ecp_modp+0x60>

0000000000033921 <instr.bb_c257>:
   33921:	48 89 de             	mov    %rbx,%rsi
   33924:	48 89 ef             	mov    %rbp,%rdi
   33927:	e8 64 d3 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

000000000003392c <instr.bb_c262>:
   3392c:	85 c0                	test   %eax,%eax
   3392e:	0f 88 35 00 00 00    	js     33969 <instr.bb_c291>

0000000000033934 <instr.bb_c266>:
   33934:	90                   	nop
   33935:	90                   	nop
   33936:	90                   	nop
   33937:	90                   	nop
   33938:	90                   	nop
   33939:	90                   	nop
   3393a:	90                   	nop
   3393b:	90                   	nop
   3393c:	90                   	nop
   3393d:	90                   	nop
   3393e:	90                   	nop
   3393f:	90                   	nop

0000000000033940 <instr.bb_c270>:
   33940:	48 89 da             	mov    %rbx,%rdx
   33943:	48 89 ee             	mov    %rbp,%rsi
   33946:	48 89 ef             	mov    %rbp,%rdi
   33949:	e8 52 d7 ff ff       	callq  310a0 <mbedtls_mpi_sub_abs.instr.bb_56d0>

000000000003394e <instr.bb_c27e>:
   3394e:	85 c0                	test   %eax,%eax
   33950:	0f 85 4a 89 fd ff    	jne    c2a0 <ecp_modp+0xd0>

0000000000033956 <instr.bb_c282>:
   33956:	48 89 de             	mov    %rbx,%rsi
   33959:	48 89 ef             	mov    %rbp,%rdi
   3395c:	e8 2f d3 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

0000000000033961 <instr.bb_c28d>:
   33961:	85 c0                	test   %eax,%eax
   33963:	0f 89 d7 ff ff ff    	jns    33940 <instr.bb_c270>

0000000000033969 <instr.bb_c291>:
   33969:	44 89 e0             	mov    %r12d,%eax
   3396c:	5b                   	pop    %rbx
   3396d:	5d                   	pop    %rbp
   3396e:	41 5c                	pop    %r12
   33970:	c3                   	retq   
   33971:	90                   	nop
   33972:	90                   	nop
   33973:	90                   	nop
   33974:	90                   	nop
   33975:	90                   	nop
   33976:	90                   	nop
   33977:	90                   	nop
   33978:	90                   	nop
   33979:	90                   	nop
   3397a:	90                   	nop
   3397b:	90                   	nop
   3397c:	90                   	nop
   3397d:	90                   	nop
   3397e:	90                   	nop
   3397f:	90                   	nop

0000000000033980 <mbedtls_mpi_sub_mod.instr.bb_c380>:
   33980:	45 31 c0             	xor    %r8d,%r8d
   33983:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   3398a:	c0 
   3398b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   33992:	c0 
   33993:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   3399a:	c0 
   3399b:	41 54                	push   %r12
   3399d:	55                   	push   %rbp
   3399e:	48 89 fd             	mov    %rdi,%rbp
   339a1:	53                   	push   %rbx
   339a2:	48 89 f3             	mov    %rsi,%rbx
   339a5:	48 89 d6             	mov    %rdx,%rsi
   339a8:	48 89 ca             	mov    %rcx,%rdx
   339ab:	48 89 df             	mov    %rbx,%rdi
   339ae:	48 83 c5 08          	add    $0x8,%rbp
   339b2:	e8 79 da ff ff       	callq  31430 <mbedtls_mpi_sub_mpi.instr.bb_58c0>

00000000000339b7 <instr.bb_c39c>:
   339b7:	41 89 c4             	mov    %eax,%r12d
   339ba:	85 c0                	test   %eax,%eax
   339bc:	0f 84 36 00 00 00    	je     339f8 <instr.bb_c3c8>

00000000000339c2 <instr.bb_c3a3>:
   339c2:	e9 41 00 00 00       	jmpq   33a08 <instr.bb_c3ce>
   339c7:	90                   	nop
   339c8:	90                   	nop
   339c9:	90                   	nop
   339ca:	90                   	nop
   339cb:	90                   	nop
   339cc:	90                   	nop
   339cd:	90                   	nop
   339ce:	90                   	nop
   339cf:	90                   	nop

00000000000339d0 <instr.bb_c3a8>:
   339d0:	31 f6                	xor    %esi,%esi
   339d2:	48 89 df             	mov    %rbx,%rdi
   339d5:	e8 a6 d3 ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>

00000000000339da <instr.bb_c3b2>:
   339da:	85 c0                	test   %eax,%eax
   339dc:	0f 84 26 00 00 00    	je     33a08 <instr.bb_c3ce>

00000000000339e2 <instr.bb_c3b6>:
   339e2:	48 89 ea             	mov    %rbp,%rdx
   339e5:	48 89 de             	mov    %rbx,%rsi
   339e8:	48 89 df             	mov    %rbx,%rdi
   339eb:	e8 30 da ff ff       	callq  31420 <mbedtls_mpi_add_mpi.instr.bb_58b0>

00000000000339f0 <instr.bb_c3c4>:
   339f0:	85 c0                	test   %eax,%eax
   339f2:	0f 85 e8 89 fd ff    	jne    c3e0 <mbedtls_mpi_sub_mod+0x60>

00000000000339f8 <instr.bb_c3c8>:
   339f8:	8b 83 00 10 00 c0    	mov    -0x3ffff000(%rbx),%eax
   339fe:	33 03                	xor    (%rbx),%eax
   33a00:	85 c0                	test   %eax,%eax
   33a02:	0f 88 c8 ff ff ff    	js     339d0 <instr.bb_c3a8>

0000000000033a08 <instr.bb_c3ce>:
   33a08:	44 89 e0             	mov    %r12d,%eax
   33a0b:	5b                   	pop    %rbx
   33a0c:	5d                   	pop    %rbp
   33a0d:	41 5c                	pop    %r12
   33a0f:	c3                   	retq   

0000000000033a10 <mbedtls_mpi_mul_mod.instr.bb_c3f0>:
   33a10:	45 31 c0             	xor    %r8d,%r8d
   33a13:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   33a1a:	c0 
   33a1b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   33a22:	c0 
   33a23:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   33a2a:	c0 
   33a2b:	41 54                	push   %r12
   33a2d:	49 89 fc             	mov    %rdi,%r12
   33a30:	55                   	push   %rbp
   33a31:	48 89 f5             	mov    %rsi,%rbp
   33a34:	48 89 d6             	mov    %rdx,%rsi
   33a37:	48 89 ca             	mov    %rcx,%rdx
   33a3a:	48 89 ef             	mov    %rbp,%rdi
   33a3d:	48 83 ec 08          	sub    $0x8,%rsp
   33a41:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33a48:	70 00 00 
   33a4b:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33a52:	00 
   33a53:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33a5a:	70 00 00 
   33a5d:	e8 8e da ff ff       	callq  314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
   33a62:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33a69:	70 00 00 
   33a6c:	48 8b 37             	mov    (%rdi),%rsi
   33a6f:	48 d1 ee             	shr    %rsi
   33a72:	48 89 37             	mov    %rsi,(%rdi)

0000000000033a75 <instr.bb_c40b>:
   33a75:	85 c0                	test   %eax,%eax
   33a77:	0f 84 a3 89 fd ff    	je     c420 <mbedtls_mpi_mul_mod+0x30>

0000000000033a7d <instr.bb_c40f>:
   33a7d:	48 83 c4 08          	add    $0x8,%rsp
   33a81:	5d                   	pop    %rbp
   33a82:	41 5c                	pop    %r12
   33a84:	c3                   	retq   
   33a85:	90                   	nop
   33a86:	90                   	nop
   33a87:	90                   	nop
   33a88:	90                   	nop
   33a89:	90                   	nop
   33a8a:	90                   	nop
   33a8b:	90                   	nop
   33a8c:	90                   	nop
   33a8d:	90                   	nop
   33a8e:	90                   	nop
   33a8f:	90                   	nop

0000000000033a90 <mbedtls_ecp_point_free.part.0.instr.bb_c520>:
   33a90:	31 c9                	xor    %ecx,%ecx
   33a92:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33a99:	c0 
   33a9a:	53                   	push   %rbx
   33a9b:	48 89 fb             	mov    %rdi,%rbx
   33a9e:	e8 fd c8 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000033aa3 <instr.bb_c529>:
   33aa3:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   33aa7:	e8 f4 c8 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000033aac <instr.bb_c532>:
   33aac:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   33ab0:	5b                   	pop    %rbx
   33ab1:	e9 ea c8 ff ff       	jmpq   303a0 <mbedtls_mpi_free.instr.bb_4b90>
   33ab6:	90                   	nop
   33ab7:	90                   	nop
   33ab8:	90                   	nop
   33ab9:	90                   	nop
   33aba:	90                   	nop
   33abb:	90                   	nop
   33abc:	90                   	nop
   33abd:	90                   	nop
   33abe:	90                   	nop
   33abf:	90                   	nop

0000000000033ac0 <mbedtls_mpi_add_mod.instr.bb_c5b0>:
   33ac0:	45 31 c0             	xor    %r8d,%r8d
   33ac3:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   33aca:	c0 
   33acb:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   33ad2:	c0 
   33ad3:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   33ada:	c0 
   33adb:	41 54                	push   %r12
   33add:	55                   	push   %rbp
   33ade:	48 89 fd             	mov    %rdi,%rbp
   33ae1:	53                   	push   %rbx
   33ae2:	48 89 f3             	mov    %rsi,%rbx
   33ae5:	48 89 d6             	mov    %rdx,%rsi
   33ae8:	48 89 ca             	mov    %rcx,%rdx
   33aeb:	48 89 df             	mov    %rbx,%rdi
   33aee:	48 83 c5 08          	add    $0x8,%rbp
   33af2:	e8 29 d9 ff ff       	callq  31420 <mbedtls_mpi_add_mpi.instr.bb_58b0>

0000000000033af7 <instr.bb_c5cc>:
   33af7:	41 89 c4             	mov    %eax,%r12d
   33afa:	85 c0                	test   %eax,%eax
   33afc:	0f 84 e8 8a fd ff    	je     c5ea <mbedtls_mpi_add_mod+0x3a>

0000000000033b02 <instr.bb_c5d3>:
   33b02:	e9 f2 8a fd ff       	jmpq   c5f9 <mbedtls_mpi_add_mod+0x49>
   33b07:	90                   	nop
   33b08:	90                   	nop
   33b09:	90                   	nop
   33b0a:	90                   	nop
   33b0b:	90                   	nop
   33b0c:	90                   	nop
   33b0d:	90                   	nop
   33b0e:	90                   	nop
   33b0f:	90                   	nop

0000000000033b10 <ecp_randomize_mxz.instr.bb_c7b0>:
   33b10:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   33b14:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   33b1b:	00 c0 
   33b1d:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   33b24:	00 c0 
   33b26:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   33b2d:	00 c0 
   33b2f:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
   33b34:	41 56                	push   %r14
   33b36:	49 89 ce             	mov    %rcx,%r14
   33b39:	41 55                	push   %r13
   33b3b:	41 54                	push   %r12
   33b3d:	49 89 d4             	mov    %rdx,%r12
   33b40:	55                   	push   %rbp
   33b41:	48 89 fd             	mov    %rdi,%rbp
   33b44:	53                   	push   %rbx
   33b45:	48 89 f3             	mov    %rsi,%rbx
   33b48:	48 83 ec 20          	sub    $0x20,%rsp
   33b4c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   33b53:	00 00 
   33b55:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   33b5a:	31 c0                	xor    %eax,%eax
   33b5c:	49 89 e5             	mov    %rsp,%r13
   33b5f:	4c 89 ef             	mov    %r13,%rdi
   33b62:	e8 f9 c7 ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000033b67 <instr.bb_c7e3>:
   33b67:	4c 89 e1             	mov    %r12,%rcx
   33b6a:	48 8d 55 08          	lea    0x8(%rbp),%rdx
   33b6e:	4d 89 f0             	mov    %r14,%r8
   33b71:	be 02 00 00 00       	mov    $0x2,%esi
   33b76:	4c 89 ef             	mov    %r13,%rdi
   33b79:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33b80:	70 00 00 
   33b83:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33b8a:	00 
   33b8b:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33b92:	70 00 00 
   33b95:	e8 96 e2 ff ff       	callq  31e30 <mbedtls_mpi_random.instr.bb_84d0>
   33b9a:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33ba1:	70 00 00 
   33ba4:	48 8b 37             	mov    (%rdi),%rsi
   33ba7:	48 d1 ee             	shr    %rsi
   33baa:	48 89 37             	mov    %rsi,(%rdi)

0000000000033bad <instr.bb_c7fa>:
   33bad:	41 89 c4             	mov    %eax,%r12d
   33bb0:	85 c0                	test   %eax,%eax
   33bb2:	0f 84 18 00 00 00    	je     33bd0 <instr.bb_c840>

0000000000033bb8 <instr.bb_c801>:
   33bb8:	4c 89 ef             	mov    %r13,%rdi
   33bbb:	e8 e0 c7 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>
   33bc0:	e9 44 8c fd ff       	jmpq   c809 <ecp_randomize_mxz+0x59>
   33bc5:	90                   	nop
   33bc6:	90                   	nop
   33bc7:	90                   	nop
   33bc8:	90                   	nop
   33bc9:	90                   	nop
   33bca:	90                   	nop
   33bcb:	90                   	nop
   33bcc:	90                   	nop
   33bcd:	90                   	nop
   33bce:	90                   	nop
   33bcf:	90                   	nop

0000000000033bd0 <instr.bb_c840>:
   33bd0:	4c 89 ea             	mov    %r13,%rdx
   33bd3:	48 89 de             	mov    %rbx,%rsi
   33bd6:	48 89 df             	mov    %rbx,%rdi
   33bd9:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33be0:	70 00 00 
   33be3:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33bea:	00 
   33beb:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33bf2:	70 00 00 
   33bf5:	e8 f6 d8 ff ff       	callq  314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
   33bfa:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33c01:	70 00 00 
   33c04:	48 8b 37             	mov    (%rdi),%rsi
   33c07:	48 d1 ee             	shr    %rsi
   33c0a:	48 89 37             	mov    %rsi,(%rdi)

0000000000033c0d <instr.bb_c84e>:
   33c0d:	41 89 c4             	mov    %eax,%r12d
   33c10:	85 c0                	test   %eax,%eax
   33c12:	0f 85 a0 ff ff ff    	jne    33bb8 <instr.bb_c801>

0000000000033c18 <instr.bb_c855>:
   33c18:	48 89 ee             	mov    %rbp,%rsi
   33c1b:	48 89 df             	mov    %rbx,%rdi
   33c1e:	e8 6d fc ff ff       	callq  33890 <ecp_modp.instr.bb_c1d0>

0000000000033c23 <instr.bb_c860>:
   33c23:	41 89 c4             	mov    %eax,%r12d
   33c26:	85 c0                	test   %eax,%eax
   33c28:	0f 85 8a ff ff ff    	jne    33bb8 <instr.bb_c801>

0000000000033c2e <instr.bb_c867>:
   33c2e:	4c 8d 73 30          	lea    0x30(%rbx),%r14
   33c32:	4c 89 ea             	mov    %r13,%rdx
   33c35:	48 83 05 fb a4 ff ff 	addq   $0x1,-0x5b05(%rip)        # 2e138 <mul_count>
   33c3c:	01 
   33c3d:	4c 89 f6             	mov    %r14,%rsi
   33c40:	4c 89 f7             	mov    %r14,%rdi
   33c43:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33c4a:	70 00 00 
   33c4d:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33c54:	00 
   33c55:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33c5c:	70 00 00 
   33c5f:	e8 8c d8 ff ff       	callq  314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
   33c64:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33c6b:	70 00 00 
   33c6e:	48 8b 37             	mov    (%rdi),%rsi
   33c71:	48 d1 ee             	shr    %rsi
   33c74:	48 89 37             	mov    %rsi,(%rdi)

0000000000033c77 <instr.bb_c881>:
   33c77:	41 89 c4             	mov    %eax,%r12d
   33c7a:	85 c0                	test   %eax,%eax
   33c7c:	0f 85 36 ff ff ff    	jne    33bb8 <instr.bb_c801>

0000000000033c82 <instr.bb_c88c>:
   33c82:	48 89 ee             	mov    %rbp,%rsi
   33c85:	4c 89 f7             	mov    %r14,%rdi
   33c88:	e8 03 fc ff ff       	callq  33890 <ecp_modp.instr.bb_c1d0>

0000000000033c8d <instr.bb_c897>:
   33c8d:	41 89 c4             	mov    %eax,%r12d
   33c90:	85 c0                	test   %eax,%eax
   33c92:	0f 85 20 ff ff ff    	jne    33bb8 <instr.bb_c801>

0000000000033c98 <instr.bb_c8a2>:
   33c98:	4c 89 ef             	mov    %r13,%rdi
   33c9b:	48 83 05 95 a4 ff ff 	addq   $0x1,-0x5b6b(%rip)        # 2e138 <mul_count>
   33ca2:	01 
   33ca3:	e8 f8 c6 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000033ca8 <instr.bb_c8b2>:
   33ca8:	e9 66 8b fd ff       	jmpq   c813 <ecp_randomize_mxz+0x63>
   33cad:	90                   	nop
   33cae:	90                   	nop
   33caf:	90                   	nop

0000000000033cb0 <mbedtls_ecp_point_init.instr.bb_d7a0>:
   33cb0:	31 c9                	xor    %ecx,%ecx
   33cb2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33cb9:	c0 
   33cba:	f3 0f 1e fa          	endbr64 
   33cbe:	53                   	push   %rbx
   33cbf:	48 89 fb             	mov    %rdi,%rbx
   33cc2:	e8 99 c6 ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000033cc7 <instr.bb_d7ad>:
   33cc7:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   33ccb:	e8 90 c6 ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000033cd0 <instr.bb_d7b6>:
   33cd0:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   33cd4:	5b                   	pop    %rbx
   33cd5:	e9 86 c6 ff ff       	jmpq   30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000033cda <mbedtls_ecp_group_init.instr.bb_d7c0>:
   33cda:	31 c9                	xor    %ecx,%ecx
   33cdc:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33ce3:	c0 
   33ce4:	f3 0f 1e fa          	endbr64 
   33ce8:	53                   	push   %rbx
   33ce9:	48 89 fb             	mov    %rdi,%rbx
   33cec:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   33cf0:	c7 47 f8 00 00 00 00 	movl   $0x0,-0x8(%rdi)
   33cf7:	e8 64 c6 ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000033cfc <instr.bb_d7d8>:
   33cfc:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   33d00:	e8 5b c6 ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000033d05 <instr.bb_d7e1>:
   33d05:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   33d09:	e8 52 c6 ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000033d0e <instr.bb_d7ea>:
   33d0e:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
   33d12:	e8 99 ff ff ff       	callq  33cb0 <mbedtls_ecp_point_init.instr.bb_d7a0>

0000000000033d17 <instr.bb_d7f3>:
   33d17:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
   33d1e:	e8 3d c6 ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

0000000000033d23 <instr.bb_d7ff>:
   33d23:	48 c7 83 b0 00 00 00 	movq   $0x0,0xb0(%rbx)
   33d2a:	00 00 00 00 
   33d2e:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
   33d35:	00 00 00 00 
   33d39:	c7 83 c0 00 00 00 00 	movl   $0x0,0xc0(%rbx)
   33d40:	00 00 00 
   33d43:	48 c7 83 c8 00 00 00 	movq   $0x0,0xc8(%rbx)
   33d4a:	00 00 00 00 
   33d4e:	48 c7 83 d0 00 00 00 	movq   $0x0,0xd0(%rbx)
   33d55:	00 00 00 00 
   33d59:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   33d60:	00 00 00 00 
   33d64:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   33d6b:	00 00 00 00 
   33d6f:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
   33d76:	00 00 00 00 
   33d7a:	48 c7 83 f0 00 00 00 	movq   $0x0,0xf0(%rbx)
   33d81:	00 00 00 00 
   33d85:	5b                   	pop    %rbx
   33d86:	c3                   	retq   
   33d87:	90                   	nop
   33d88:	90                   	nop
   33d89:	90                   	nop
   33d8a:	90                   	nop
   33d8b:	90                   	nop
   33d8c:	90                   	nop
   33d8d:	90                   	nop
   33d8e:	90                   	nop
   33d8f:	90                   	nop

0000000000033d90 <mbedtls_ecp_point_free.instr.bb_d8a0>:
   33d90:	31 c9                	xor    %ecx,%ecx
   33d92:	f3 0f 1e fa          	endbr64 
   33d96:	48 85 ff             	test   %rdi,%rdi
   33d99:	0f 84 11 9b fd ff    	je     d8b0 <mbedtls_ecp_point_free+0x10>

0000000000033d9f <instr.bb_d8a9>:
   33d9f:	e9 ec fc ff ff       	jmpq   33a90 <mbedtls_ecp_point_free.part.0.instr.bb_c520>
   33da4:	90                   	nop
   33da5:	90                   	nop
   33da6:	90                   	nop
   33da7:	90                   	nop
   33da8:	90                   	nop
   33da9:	90                   	nop
   33daa:	90                   	nop
   33dab:	90                   	nop
   33dac:	90                   	nop
   33dad:	90                   	nop
   33dae:	90                   	nop
   33daf:	90                   	nop

0000000000033db0 <mbedtls_ecp_group_free.instr.bb_d8c0>:
   33db0:	31 c9                	xor    %ecx,%ecx
   33db2:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   33db9:	c0 
   33dba:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   33dc1:	c0 
   33dc2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33dc9:	c0 
   33dca:	f3 0f 1e fa          	endbr64 
   33dce:	48 85 ff             	test   %rdi,%rdi
   33dd1:	0f 84 99 9b fd ff    	je     d970 <mbedtls_ecp_group_free+0xb0>

0000000000033dd7 <instr.bb_d8cd>:
   33dd7:	55                   	push   %rbp
   33dd8:	48 89 fd             	mov    %rdi,%rbp
   33ddb:	53                   	push   %rbx
   33ddc:	48 83 ec 08          	sub    $0x8,%rsp
   33de0:	83 bf c0 00 00 00 01 	cmpl   $0x1,0xc0(%rdi)
   33de7:	0f 85 5b 9b fd ff    	jne    d948 <mbedtls_ecp_group_free+0x88>

0000000000033ded <instr.bb_d8df>:
   33ded:	4c 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%r8
   33df4:	4d 85 c0             	test   %r8,%r8
   33df7:	0f 84 31 9b fd ff    	je     d92e <mbedtls_ecp_group_free+0x6e>

0000000000033dfd <instr.bb_d8eb>:
   33dfd:	48 83 bd f0 00 00 00 	cmpq   $0x0,0xf0(%rbp)
   33e04:	00 
   33e05:	0f 84 23 9b fd ff    	je     d92e <mbedtls_ecp_group_free+0x6e>

0000000000033e0b <instr.bb_d8f5>:
   33e0b:	31 db                	xor    %ebx,%ebx
   33e0d:	90                   	nop
   33e0e:	90                   	nop
   33e0f:	90                   	nop
   33e10:	48 8d 04 db          	lea    (%rbx,%rbx,8),%rax
   33e14:	49 8d 3c c0          	lea    (%r8,%rax,8),%rdi
   33e18:	48 85 ff             	test   %rdi,%rdi
   33e1b:	0f 84 f8 9a fd ff    	je     d919 <mbedtls_ecp_group_free+0x59>
   33e21:	e9 e7 9a fd ff       	jmpq   d90d <mbedtls_ecp_group_free+0x4d>
   33e26:	90                   	nop
   33e27:	90                   	nop
   33e28:	90                   	nop
   33e29:	90                   	nop
   33e2a:	90                   	nop
   33e2b:	90                   	nop
   33e2c:	90                   	nop
   33e2d:	90                   	nop
   33e2e:	90                   	nop
   33e2f:	90                   	nop

0000000000033e30 <mbedtls_ecp_copy.instr.bb_d9c0>:
   33e30:	31 c9                	xor    %ecx,%ecx
   33e32:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   33e39:	c0 
   33e3a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   33e41:	c0 
   33e42:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33e49:	c0 
   33e4a:	f3 0f 1e fa          	endbr64 
   33e4e:	55                   	push   %rbp
   33e4f:	48 89 f5             	mov    %rsi,%rbp
   33e52:	53                   	push   %rbx
   33e53:	48 89 fb             	mov    %rdi,%rbx
   33e56:	48 83 ec 08          	sub    $0x8,%rsp
   33e5a:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33e61:	70 00 00 
   33e64:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33e6b:	00 
   33e6c:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33e73:	70 00 00 
   33e76:	e8 c5 c7 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   33e7b:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33e82:	70 00 00 
   33e85:	48 8b 37             	mov    (%rdi),%rsi
   33e88:	48 d1 ee             	shr    %rsi
   33e8b:	48 89 37             	mov    %rsi,(%rdi)

0000000000033e8e <instr.bb_d9d5>:
   33e8e:	85 c0                	test   %eax,%eax
   33e90:	0f 84 07 00 00 00    	je     33e9d <instr.bb_d9e0>

0000000000033e96 <instr.bb_d9d9>:
   33e96:	48 83 c4 08          	add    $0x8,%rsp
   33e9a:	5b                   	pop    %rbx
   33e9b:	5d                   	pop    %rbp
   33e9c:	c3                   	retq   

0000000000033e9d <instr.bb_d9e0>:
   33e9d:	48 8d 75 18          	lea    0x18(%rbp),%rsi
   33ea1:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   33ea5:	e8 96 c7 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>

0000000000033eaa <instr.bb_d9ed>:
   33eaa:	85 c0                	test   %eax,%eax
   33eac:	0f 85 e4 ff ff ff    	jne    33e96 <instr.bb_d9d9>

0000000000033eb2 <instr.bb_d9f1>:
   33eb2:	48 83 c4 08          	add    $0x8,%rsp
   33eb6:	48 8d 75 30          	lea    0x30(%rbp),%rsi
   33eba:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   33ebe:	5b                   	pop    %rbx
   33ebf:	5d                   	pop    %rbp
   33ec0:	e9 7b c7 ff ff       	jmpq   30640 <mbedtls_mpi_copy.instr.bb_4e20>
   33ec5:	90                   	nop
   33ec6:	90                   	nop
   33ec7:	90                   	nop
   33ec8:	90                   	nop
   33ec9:	90                   	nop
   33eca:	90                   	nop
   33ecb:	90                   	nop
   33ecc:	90                   	nop
   33ecd:	90                   	nop
   33ece:	90                   	nop
   33ecf:	90                   	nop

0000000000033ed0 <mbedtls_ecp_is_zero.instr.bb_e230>:
   33ed0:	31 c9                	xor    %ecx,%ecx
   33ed2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33ed9:	c0 
   33eda:	f3 0f 1e fa          	endbr64 
   33ede:	48 83 ec 08          	sub    $0x8,%rsp
   33ee2:	48 83 c7 30          	add    $0x30,%rdi
   33ee6:	31 f6                	xor    %esi,%esi
   33ee8:	e8 93 ce ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>

0000000000033eed <instr.bb_e243>:
   33eed:	85 c0                	test   %eax,%eax
   33eef:	0f 94 c0             	sete   %al
   33ef2:	48 83 c4 08          	add    $0x8,%rsp
   33ef6:	0f b6 c0             	movzbl %al,%eax
   33ef9:	c3                   	retq   
   33efa:	90                   	nop
   33efb:	90                   	nop
   33efc:	90                   	nop
   33efd:	90                   	nop
   33efe:	90                   	nop
   33eff:	90                   	nop

0000000000033f00 <mbedtls_ecp_point_write_binary.instr.bb_e300>:
   33f00:	c4 41 3d ef c0       	vpxor  %ymm8,%ymm8,%ymm8
   33f05:	c5 7e 7f 84 24 b8 0f 	vmovdqu %ymm8,-0x3ffff048(%rsp)
   33f0c:	00 c0 
   33f0e:	c5 7e 7f 84 24 d8 0f 	vmovdqu %ymm8,-0x3ffff028(%rsp)
   33f15:	00 c0 
   33f17:	c5 7a 7f 84 24 f8 0f 	vmovdqu %xmm8,-0x3ffff008(%rsp)
   33f1e:	00 c0 
   33f20:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
   33f25:	f3 0f 1e fa          	endbr64 
   33f29:	41 57                	push   %r15
   33f2b:	41 56                	push   %r14
   33f2d:	41 55                	push   %r13
   33f2f:	41 54                	push   %r12
   33f31:	55                   	push   %rbp
   33f32:	53                   	push   %rbx
   33f33:	48 83 ec 18          	sub    $0x18,%rsp
   33f37:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   33f3c:	83 fa 01             	cmp    $0x1,%edx
   33f3f:	0f 87 33 a5 fd ff    	ja     e478 <mbedtls_ecp_point_write_binary+0x178>

0000000000033f45 <instr.bb_e320>:
   33f45:	48 89 fb             	mov    %rdi,%rbx
   33f48:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   33f4c:	48 89 f5             	mov    %rsi,%rbp
   33f4f:	41 89 d5             	mov    %edx,%r13d
   33f52:	49 89 cf             	mov    %rcx,%r15
   33f55:	4d 89 c4             	mov    %r8,%r12
   33f58:	e8 d3 c9 ff ff       	callq  30930 <mbedtls_mpi_size.instr.bb_5140>

0000000000033f5d <instr.bb_e338>:
   33f5d:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
   33f62:	49 89 c6             	mov    %rax,%r14
   33f65:	0f 84 ad a4 fd ff    	je     e418 <mbedtls_ecp_point_write_binary+0x118>

0000000000033f6b <instr.bb_e346>:
   33f6b:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
   33f70:	0f 84 ba a4 fd ff    	je     e430 <mbedtls_ecp_point_write_binary+0x130>

0000000000033f76 <instr.bb_e351>:
   33f76:	31 f6                	xor    %esi,%esi
   33f78:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   33f7c:	e8 ff cd ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>
   33f81:	e9 d6 a3 fd ff       	jmpq   e35c <mbedtls_ecp_point_write_binary+0x5c>
   33f86:	90                   	nop
   33f87:	90                   	nop
   33f88:	90                   	nop
   33f89:	90                   	nop
   33f8a:	90                   	nop
   33f8b:	90                   	nop
   33f8c:	90                   	nop
   33f8d:	90                   	nop
   33f8e:	90                   	nop
   33f8f:	90                   	nop

0000000000033f90 <mbedtls_ecp_point_read_binary.instr.bb_e4a0>:
   33f90:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   33f94:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   33f9b:	00 c0 
   33f9d:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   33fa4:	00 c0 
   33fa6:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   33fad:	00 c0 
   33faf:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   33fb6:	00 c0 
   33fb8:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
   33fbd:	f3 0f 1e fa          	endbr64 
   33fc1:	41 57                	push   %r15
   33fc3:	41 56                	push   %r14
   33fc5:	41 55                	push   %r13
   33fc7:	41 54                	push   %r12
   33fc9:	55                   	push   %rbp
   33fca:	53                   	push   %rbx
   33fcb:	48 83 ec 38          	sub    $0x38,%rsp
   33fcf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   33fd6:	00 00 
   33fd8:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   33fdd:	31 c0                	xor    %eax,%eax
   33fdf:	48 85 c9             	test   %rcx,%rcx
   33fe2:	0f 84 a8 a6 fd ff    	je     e690 <mbedtls_ecp_point_read_binary+0x1f0>

0000000000033fe8 <instr.bb_e4cb>:
   33fe8:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
   33fec:	49 89 ff             	mov    %rdi,%r15
   33fef:	49 89 f4             	mov    %rsi,%r12
   33ff2:	48 89 d5             	mov    %rdx,%rbp
   33ff5:	4c 89 ef             	mov    %r13,%rdi
   33ff8:	48 89 cb             	mov    %rcx,%rbx
   33ffb:	e8 30 c9 ff ff       	callq  30930 <mbedtls_mpi_size.instr.bb_5140>

0000000000034000 <instr.bb_e4e3>:
   34000:	49 83 7f 60 00       	cmpq   $0x0,0x60(%r15)
   34005:	49 89 c6             	mov    %rax,%r14
   34008:	0f 84 02 a6 fd ff    	je     e610 <mbedtls_ecp_point_read_binary+0x170>

000000000003400e <instr.bb_e4f1>:
   3400e:	49 83 7f 78 00       	cmpq   $0x0,0x78(%r15)
   34013:	0f 84 17 00 00 00    	je     34030 <instr.bb_e620>

0000000000034019 <instr.bb_e4fc>:
   34019:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
   3401d:	0f 85 1d a5 fd ff    	jne    e540 <mbedtls_ecp_point_read_binary+0xa0>
   34023:	e9 da a4 fd ff       	jmpq   e502 <mbedtls_ecp_point_read_binary+0x62>
   34028:	90                   	nop
   34029:	90                   	nop
   3402a:	90                   	nop
   3402b:	90                   	nop
   3402c:	90                   	nop
   3402d:	90                   	nop
   3402e:	90                   	nop
   3402f:	90                   	nop

0000000000034030 <instr.bb_e620>:
   34030:	48 39 c3             	cmp    %rax,%rbx
   34033:	0f 85 57 a6 fd ff    	jne    e690 <mbedtls_ecp_point_read_binary+0x1f0>

0000000000034039 <instr.bb_e625>:
   34039:	48 89 da             	mov    %rbx,%rdx
   3403c:	48 89 ee             	mov    %rbp,%rsi
   3403f:	4c 89 e7             	mov    %r12,%rdi
   34042:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34049:	70 00 00 
   3404c:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34053:	00 
   34054:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3405b:	70 00 00 
   3405e:	e8 fd c8 ff ff       	callq  30960 <mbedtls_mpi_read_binary_le.instr.bb_5170>
   34063:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3406a:	70 00 00 
   3406d:	48 8b 37             	mov    (%rdi),%rsi
   34070:	48 d1 ee             	shr    %rsi
   34073:	48 89 37             	mov    %rsi,(%rdi)

0000000000034076 <instr.bb_e633>:
   34076:	41 89 c1             	mov    %eax,%r9d
   34079:	85 c0                	test   %eax,%eax
   3407b:	0f 85 96 a4 fd ff    	jne    e517 <mbedtls_ecp_point_read_binary+0x77>

0000000000034081 <instr.bb_e63e>:
   34081:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   34086:	e8 15 c3 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

000000000003408b <instr.bb_e648>:
   3408b:	41 83 3f 09          	cmpl   $0x9,(%r15)
   3408f:	0f 84 9b a6 fd ff    	je     e730 <mbedtls_ecp_point_read_binary+0x290>

0000000000034095 <instr.bb_e652>:
   34095:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
   3409a:	be 01 00 00 00       	mov    $0x1,%esi
   3409f:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   340a6:	70 00 00 
   340a9:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   340b0:	00 
   340b1:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   340b8:	70 00 00 
   340bb:	e8 a0 c6 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   340c0:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   340c7:	70 00 00 
   340ca:	48 8b 37             	mov    (%rdi),%rsi
   340cd:	48 d1 ee             	shr    %rsi
   340d0:	48 89 37             	mov    %rsi,(%rdi)

00000000000340d3 <instr.bb_e661>:
   340d3:	41 89 c1             	mov    %eax,%r9d
   340d6:	85 c0                	test   %eax,%eax
   340d8:	0f 85 39 a4 fd ff    	jne    e517 <mbedtls_ecp_point_read_binary+0x77>

00000000000340de <instr.bb_e66c>:
   340de:	49 83 7f 60 00       	cmpq   $0x0,0x60(%r15)
   340e3:	0f 84 2e a4 fd ff    	je     e517 <mbedtls_ecp_point_read_binary+0x77>

00000000000340e9 <instr.bb_e677>:
   340e9:	49 83 7f 78 00       	cmpq   $0x0,0x78(%r15)
   340ee:	0f 84 23 a4 fd ff    	je     e517 <mbedtls_ecp_point_read_binary+0x77>
   340f4:	e9 89 a5 fd ff       	jmpq   e682 <mbedtls_ecp_point_read_binary+0x1e2>
   340f9:	90                   	nop
   340fa:	90                   	nop
   340fb:	90                   	nop
   340fc:	90                   	nop
   340fd:	90                   	nop
   340fe:	90                   	nop
   340ff:	90                   	nop

0000000000034100 <mbedtls_ecp_check_pubkey.instr.bb_e960>:
   34100:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   34104:	c5 fe 7f 8c 24 88 0f 	vmovdqu %ymm1,-0x3ffff078(%rsp)
   3410b:	00 c0 
   3410d:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   34114:	00 c0 
   34116:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   3411d:	00 c0 
   3411f:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   34126:	00 c0 
   34128:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   3412d:	f3 0f 1e fa          	endbr64 
   34131:	41 57                	push   %r15
   34133:	41 56                	push   %r14
   34135:	41 55                	push   %r13
   34137:	49 89 f5             	mov    %rsi,%r13
   3413a:	41 54                	push   %r12
   3413c:	55                   	push   %rbp
   3413d:	48 89 fd             	mov    %rdi,%rbp
   34140:	48 8d 7e 30          	lea    0x30(%rsi),%rdi
   34144:	be 01 00 00 00       	mov    $0x1,%esi
   34149:	53                   	push   %rbx
   3414a:	48 83 ec 48          	sub    $0x48,%rsp
   3414e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   34155:	00 00 
   34157:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   3415c:	31 c0                	xor    %eax,%eax
   3415e:	e8 1d cc ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>

0000000000034163 <instr.bb_e996>:
   34163:	85 c0                	test   %eax,%eax
   34165:	0f 85 45 aa fd ff    	jne    ebb0 <mbedtls_ecp_check_pubkey+0x250>

000000000003416b <instr.bb_e99e>:
   3416b:	48 83 7d 60 00       	cmpq   $0x0,0x60(%rbp)
   34170:	0f 84 4a a9 fd ff    	je     eac0 <mbedtls_ecp_check_pubkey+0x160>

0000000000034176 <instr.bb_e9a9>:
   34176:	48 83 7d 78 00       	cmpq   $0x0,0x78(%rbp)
   3417b:	0f 84 0f 00 00 00    	je     34190 <instr.bb_ead0>
   34181:	e9 2e a8 fd ff       	jmpq   e9b4 <mbedtls_ecp_check_pubkey+0x54>
   34186:	90                   	nop
   34187:	90                   	nop
   34188:	90                   	nop
   34189:	90                   	nop
   3418a:	90                   	nop
   3418b:	90                   	nop
   3418c:	90                   	nop
   3418d:	90                   	nop
   3418e:	90                   	nop
   3418f:	90                   	nop

0000000000034190 <instr.bb_ead0>:
   34190:	4c 89 ef             	mov    %r13,%rdi
   34193:	e8 98 c7 ff ff       	callq  30930 <mbedtls_mpi_size.instr.bb_5140>

0000000000034198 <instr.bb_ead8>:
   34198:	49 89 c0             	mov    %rax,%r8
   3419b:	48 8b 85 b8 00 00 00 	mov    0xb8(%rbp),%rax
   341a2:	48 83 c0 07          	add    $0x7,%rax
   341a6:	48 c1 e8 03          	shr    $0x3,%rax
   341aa:	49 39 c0             	cmp    %rax,%r8
   341ad:	0f 87 fd a9 fd ff    	ja     ebb0 <mbedtls_ecp_check_pubkey+0x250>

00000000000341b3 <instr.bb_eaf3>:
   341b3:	31 f6                	xor    %esi,%esi
   341b5:	4c 89 ef             	mov    %r13,%rdi
   341b8:	e8 c3 cb ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>

00000000000341bd <instr.bb_eafd>:
   341bd:	85 c0                	test   %eax,%eax
   341bf:	0f 88 eb a9 fd ff    	js     ebb0 <mbedtls_ecp_check_pubkey+0x250>

00000000000341c5 <instr.bb_eb05>:
   341c5:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   341ca:	8b 5d 00             	mov    0x0(%rbp),%ebx
   341cd:	48 83 c5 08          	add    $0x8,%rbp
   341d1:	4c 89 f7             	mov    %r14,%rdi
   341d4:	e8 87 c1 ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

00000000000341d9 <instr.bb_eb19>:
   341d9:	4c 89 ee             	mov    %r13,%rsi
   341dc:	4c 89 f7             	mov    %r14,%rdi
   341df:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   341e6:	70 00 00 
   341e9:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   341f0:	00 
   341f1:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   341f8:	70 00 00 
   341fb:	e8 40 c4 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   34200:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34207:	70 00 00 
   3420a:	48 8b 37             	mov    (%rdi),%rsi
   3420d:	48 d1 ee             	shr    %rsi
   34210:	48 89 37             	mov    %rsi,(%rdi)

0000000000034213 <instr.bb_eb24>:
   34213:	41 89 c4             	mov    %eax,%r12d
   34216:	85 c0                	test   %eax,%eax
   34218:	0f 84 2b a9 fd ff    	je     eb49 <mbedtls_ecp_check_pubkey+0x1e9>

000000000003421e <instr.bb_eb2b>:
   3421e:	e9 18 a8 fd ff       	jmpq   ea3b <mbedtls_ecp_check_pubkey+0xdb>
   34223:	90                   	nop
   34224:	90                   	nop
   34225:	90                   	nop
   34226:	90                   	nop
   34227:	90                   	nop
   34228:	90                   	nop
   34229:	90                   	nop
   3422a:	90                   	nop
   3422b:	90                   	nop
   3422c:	90                   	nop
   3422d:	90                   	nop
   3422e:	90                   	nop
   3422f:	90                   	nop

0000000000034230 <mbedtls_ecp_check_privkey.instr.bb_ebf0>:
   34230:	31 c9                	xor    %ecx,%ecx
   34232:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   34239:	c0 
   3423a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   34241:	c0 
   34242:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   34249:	c0 
   3424a:	f3 0f 1e fa          	endbr64 
   3424e:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
   34253:	0f 84 e7 a9 fd ff    	je     ec40 <mbedtls_ecp_check_privkey+0x50>

0000000000034259 <instr.bb_ebfb>:
   34259:	55                   	push   %rbp
   3425a:	48 89 f5             	mov    %rsi,%rbp
   3425d:	53                   	push   %rbx
   3425e:	48 89 fb             	mov    %rdi,%rbx
   34261:	48 83 ec 08          	sub    $0x8,%rsp
   34265:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
   3426a:	0f 84 e0 a9 fd ff    	je     ec50 <mbedtls_ecp_check_privkey+0x60>

0000000000034270 <instr.bb_ec0e>:
   34270:	be 01 00 00 00       	mov    $0x1,%esi
   34275:	48 89 ef             	mov    %rbp,%rdi
   34278:	e8 03 cb ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>
   3427d:	e9 99 a9 fd ff       	jmpq   ec1b <mbedtls_ecp_check_privkey+0x2b>
   34282:	90                   	nop
   34283:	90                   	nop
   34284:	90                   	nop
   34285:	90                   	nop
   34286:	90                   	nop
   34287:	90                   	nop
   34288:	90                   	nop
   34289:	90                   	nop
   3428a:	90                   	nop
   3428b:	90                   	nop
   3428c:	90                   	nop
   3428d:	90                   	nop
   3428e:	90                   	nop
   3428f:	90                   	nop

0000000000034290 <ecp_mul_restartable_internal.instr.bb_ecb0>:
   34290:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   34294:	c4 c2 7d 59 c6       	vpbroadcastq %xmm14,%ymm0
   34299:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3429e:	c5 fe 7f 8c 24 18 0e 	vmovdqu %ymm1,-0x3ffff1e8(%rsp)
   342a5:	00 c0 
   342a7:	c5 fe 7f 8c 24 38 0e 	vmovdqu %ymm1,-0x3ffff1c8(%rsp)
   342ae:	00 c0 
   342b0:	c5 fe 7f 8c 24 58 0e 	vmovdqu %ymm1,-0x3ffff1a8(%rsp)
   342b7:	00 c0 
   342b9:	c5 fe 7f 8c 24 78 0e 	vmovdqu %ymm1,-0x3ffff188(%rsp)
   342c0:	00 c0 
   342c2:	c5 fe 7f 8c 24 98 0e 	vmovdqu %ymm1,-0x3ffff168(%rsp)
   342c9:	00 c0 
   342cb:	c5 fe 7f 8c 24 b8 0e 	vmovdqu %ymm1,-0x3ffff148(%rsp)
   342d2:	00 c0 
   342d4:	c5 fe 7f 8c 24 d8 0e 	vmovdqu %ymm1,-0x3ffff128(%rsp)
   342db:	00 c0 
   342dd:	c5 fe 7f 8c 24 f8 0e 	vmovdqu %ymm1,-0x3ffff108(%rsp)
   342e4:	00 c0 
   342e6:	c5 fe 7f 8c 24 18 0f 	vmovdqu %ymm1,-0x3ffff0e8(%rsp)
   342ed:	00 c0 
   342ef:	c5 fe 7f 8c 24 38 0f 	vmovdqu %ymm1,-0x3ffff0c8(%rsp)
   342f6:	00 c0 
   342f8:	c5 fe 7f 8c 24 58 0f 	vmovdqu %ymm1,-0x3ffff0a8(%rsp)
   342ff:	00 c0 
   34301:	c5 fe 7f 8c 24 78 0f 	vmovdqu %ymm1,-0x3ffff088(%rsp)
   34308:	00 c0 
   3430a:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   34311:	00 c0 
   34313:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   3431a:	00 c0 
   3431c:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   34323:	00 c0 
   34325:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   3432c:	00 c0 
   3432e:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
   34333:	44 88 94 24 c8 0e 00 	mov    %r10b,-0x3ffff138(%rsp)
   3433a:	c0 
   3433b:	44 88 94 24 f8 0e 00 	mov    %r10b,-0x3ffff108(%rsp)
   34342:	c0 
   34343:	44 88 94 24 58 0f 00 	mov    %r10b,-0x3ffff0a8(%rsp)
   3434a:	c0 
   3434b:	44 88 94 24 70 0f 00 	mov    %r10b,-0x3ffff090(%rsp)
   34352:	c0 
   34353:	44 88 94 24 88 0f 00 	mov    %r10b,-0x3ffff078(%rsp)
   3435a:	c0 
   3435b:	44 88 94 24 a0 0f 00 	mov    %r10b,-0x3ffff060(%rsp)
   34362:	c0 
   34363:	41 57                	push   %r15
   34365:	41 56                	push   %r14
   34367:	41 55                	push   %r13
   34369:	49 89 cd             	mov    %rcx,%r13
   3436c:	41 54                	push   %r12
   3436e:	55                   	push   %rbp
   3436f:	53                   	push   %rbx
   34370:	48 89 fb             	mov    %rdi,%rbx
   34373:	48 81 ec b8 01 00 00 	sub    $0x1b8,%rsp
   3437a:	48 8b 84 24 f0 01 00 	mov    0x1f0(%rsp),%rax
   34381:	00 
   34382:	48 89 34 24          	mov    %rsi,(%rsp)
   34386:	48 89 d6             	mov    %rdx,%rsi
   34389:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   3438e:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   34393:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   34398:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   3439d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   343a4:	00 00 
   343a6:	48 89 84 24 a8 01 00 	mov    %rax,0x1a8(%rsp)
   343ad:	00 
   343ae:	31 c0                	xor    %eax,%eax
   343b0:	e8 7b fe ff ff       	callq  34230 <mbedtls_ecp_check_privkey.instr.bb_ebf0>

00000000000343b5 <instr.bb_ed02>:
   343b5:	41 89 c4             	mov    %eax,%r12d
   343b8:	85 c0                	test   %eax,%eax
   343ba:	0f 84 30 00 00 00    	je     343f0 <instr.bb_ed38>

00000000000343c0 <instr.bb_ed09>:
   343c0:	48 8b 84 24 a8 01 00 	mov    0x1a8(%rsp),%rax
   343c7:	00 
   343c8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   343cf:	00 00 
   343d1:	0f 85 37 b5 fd ff    	jne    f90e <ecp_mul_restartable_internal+0xc5e>

00000000000343d7 <instr.bb_ed20>:
   343d7:	48 81 c4 b8 01 00 00 	add    $0x1b8,%rsp
   343de:	44 89 e0             	mov    %r12d,%eax
   343e1:	5b                   	pop    %rbx
   343e2:	5d                   	pop    %rbp
   343e3:	41 5c                	pop    %r12
   343e5:	41 5d                	pop    %r13
   343e7:	41 5e                	pop    %r14
   343e9:	41 5f                	pop    %r15
   343eb:	c3                   	retq   
   343ec:	90                   	nop
   343ed:	90                   	nop
   343ee:	90                   	nop
   343ef:	90                   	nop

00000000000343f0 <instr.bb_ed38>:
   343f0:	4c 89 ee             	mov    %r13,%rsi
   343f3:	48 89 df             	mov    %rbx,%rdi
   343f6:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   343fd:	70 00 00 
   34400:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34407:	00 
   34408:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3440f:	70 00 00 
   34412:	e8 e9 fc ff ff       	callq  34100 <mbedtls_ecp_check_pubkey.instr.bb_e960>
   34417:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3441e:	70 00 00 
   34421:	48 8b 37             	mov    (%rdi),%rsi
   34424:	48 d1 ee             	shr    %rsi
   34427:	48 89 37             	mov    %rsi,(%rdi)

000000000003442a <instr.bb_ed43>:
   3442a:	41 89 c4             	mov    %eax,%r12d
   3442d:	85 c0                	test   %eax,%eax
   3442f:	0f 85 8b ff ff ff    	jne    343c0 <instr.bb_ed09>

0000000000034435 <instr.bb_ed4a>:
   34435:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
   3443a:	0f 84 70 ac fd ff    	je     f0b0 <ecp_mul_restartable_internal+0x400>

0000000000034440 <instr.bb_ed55>:
   34440:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
   34445:	0f 84 05 00 00 00    	je     34450 <instr.bb_f108>
   3444b:	e9 10 a9 fd ff       	jmpq   ed60 <ecp_mul_restartable_internal+0xb0>

0000000000034450 <instr.bb_f108>:
   34450:	4c 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%r15
   34457:	00 
   34458:	4c 8d b4 24 a0 01 00 	lea    0x1a0(%rsp),%r14
   3445f:	00 
   34460:	4c 89 ff             	mov    %r15,%rdi
   34463:	e8 48 f8 ff ff       	callq  33cb0 <mbedtls_ecp_point_init.instr.bb_d7a0>

0000000000034468 <instr.bb_f120>:
   34468:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   3446f:	00 
   34470:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   34475:	e8 e6 be ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

000000000003447a <instr.bb_f132>:
   3447a:	48 8d 84 24 40 01 00 	lea    0x140(%rsp),%rax
   34481:	00 
   34482:	4c 89 74 24 50       	mov    %r14,0x50(%rsp)
   34487:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   3448c:	48 89 c5             	mov    %rax,%rbp
   3448f:	90                   	nop

0000000000034490 <instr.bb_f150>:
   34490:	48 89 ef             	mov    %rbp,%rdi
   34493:	48 83 c5 18          	add    $0x18,%rbp
   34497:	e8 c4 be ff ff       	callq  30360 <mbedtls_mpi_init.instr.bb_4b70>

000000000003449c <instr.bb_f15c>:
   3449c:	4c 39 f5             	cmp    %r14,%rbp
   3449f:	0f 85 eb ff ff ff    	jne    34490 <instr.bb_f150>

00000000000344a5 <instr.bb_f161>:
   344a5:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   344ab:	0f 84 ff ab fd ff    	je     f0b0 <ecp_mul_restartable_internal+0x400>

00000000000344b1 <instr.bb_f16d>:
   344b1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   344b6:	4c 89 ee             	mov    %r13,%rsi
   344b9:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   344c0:	70 00 00 
   344c3:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   344ca:	00 
   344cb:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   344d2:	70 00 00 
   344d5:	e8 66 c1 ff ff       	callq  30640 <mbedtls_mpi_copy.instr.bb_4e20>
   344da:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   344e1:	70 00 00 
   344e4:	48 8b 37             	mov    (%rdi),%rsi
   344e7:	48 d1 ee             	shr    %rsi
   344ea:	48 89 37             	mov    %rsi,(%rdi)

00000000000344ed <instr.bb_f17a>:
   344ed:	41 89 c6             	mov    %eax,%r14d
   344f0:	85 c0                	test   %eax,%eax
   344f2:	0f 85 d8 08 00 00    	jne    34dd0 <instr.bb_f680>

00000000000344f8 <instr.bb_f185>:
   344f8:	4c 89 ee             	mov    %r13,%rsi
   344fb:	4c 89 ff             	mov    %r15,%rdi
   344fe:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34505:	70 00 00 
   34508:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3450f:	00 
   34510:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34517:	70 00 00 
   3451a:	e8 11 f9 ff ff       	callq  33e30 <mbedtls_ecp_copy.instr.bb_d9c0>
   3451f:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34526:	70 00 00 
   34529:	48 8b 37             	mov    (%rdi),%rsi
   3452c:	48 d1 ee             	shr    %rsi
   3452f:	48 89 37             	mov    %rsi,(%rdi)

0000000000034532 <instr.bb_f190>:
   34532:	41 89 c6             	mov    %eax,%r14d
   34535:	85 c0                	test   %eax,%eax
   34537:	0f 85 93 08 00 00    	jne    34dd0 <instr.bb_f680>

000000000003453d <instr.bb_f19b>:
   3453d:	48 8b 2c 24          	mov    (%rsp),%rbp
   34541:	be 01 00 00 00       	mov    $0x1,%esi
   34546:	48 89 ef             	mov    %rbp,%rdi
   34549:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34550:	70 00 00 
   34553:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3455a:	00 
   3455b:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34562:	70 00 00 
   34565:	e8 f6 c1 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   3456a:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34571:	70 00 00 
   34574:	48 8b 37             	mov    (%rdi),%rsi
   34577:	48 d1 ee             	shr    %rsi
   3457a:	48 89 37             	mov    %rsi,(%rdi)

000000000003457d <instr.bb_f1ac>:
   3457d:	41 89 c6             	mov    %eax,%r14d
   34580:	85 c0                	test   %eax,%eax
   34582:	0f 85 48 08 00 00    	jne    34dd0 <instr.bb_f680>

0000000000034588 <instr.bb_f1b7>:
   34588:	48 8d 45 30          	lea    0x30(%rbp),%rax
   3458c:	31 f6                	xor    %esi,%esi
   3458e:	48 89 c7             	mov    %rax,%rdi
   34591:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   34596:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3459d:	70 00 00 
   345a0:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   345a7:	00 
   345a8:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   345af:	70 00 00 
   345b2:	e8 a9 c1 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   345b7:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   345be:	70 00 00 
   345c1:	48 8b 37             	mov    (%rdi),%rsi
   345c4:	48 d1 ee             	shr    %rsi
   345c7:	48 89 37             	mov    %rsi,(%rdi)

00000000000345ca <instr.bb_f1ca>:
   345ca:	41 89 c6             	mov    %eax,%r14d
   345cd:	85 c0                	test   %eax,%eax
   345cf:	0f 85 fb 07 00 00    	jne    34dd0 <instr.bb_f680>

00000000000345d5 <instr.bb_f1d5>:
   345d5:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   345d9:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   345dd:	e8 be bd ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

00000000000345e2 <instr.bb_f1e2>:
   345e2:	e9 09 00 00 00       	jmpq   345f0 <instr.bb_f1fe>
   345e7:	90                   	nop
   345e8:	90                   	nop
   345e9:	90                   	nop
   345ea:	90                   	nop
   345eb:	90                   	nop
   345ec:	90                   	nop
   345ed:	90                   	nop
   345ee:	90                   	nop
   345ef:	90                   	nop

00000000000345f0 <instr.bb_f1fe>:
   345f0:	48 89 ee             	mov    %rbp,%rsi
   345f3:	4c 89 ff             	mov    %r15,%rdi
   345f6:	e8 95 c6 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

00000000000345fb <instr.bb_f209>:
   345fb:	85 c0                	test   %eax,%eax
   345fd:	0f 89 e5 ab fd ff    	jns    f1e8 <ecp_mul_restartable_internal+0x538>

0000000000034603 <instr.bb_f20d>:
   34603:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   34608:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   3460d:	4c 89 fe             	mov    %r15,%rsi
   34610:	48 89 df             	mov    %rbx,%rdi
   34613:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3461a:	70 00 00 
   3461d:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34624:	00 
   34625:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3462c:	70 00 00 
   3462f:	e8 dc f4 ff ff       	callq  33b10 <ecp_randomize_mxz.instr.bb_c7b0>
   34634:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3463b:	70 00 00 
   3463e:	48 8b 37             	mov    (%rdi),%rsi
   34641:	48 d1 ee             	shr    %rsi
   34644:	48 89 37             	mov    %rsi,(%rdi)

0000000000034647 <instr.bb_f222>:
   34647:	41 89 c6             	mov    %eax,%r14d
   3464a:	85 c0                	test   %eax,%eax
   3464c:	0f 85 7e 07 00 00    	jne    34dd0 <instr.bb_f680>

0000000000034652 <instr.bb_f22d>:
   34652:	48 8b 83 b8 00 00 00 	mov    0xb8(%rbx),%rax
   34659:	44 89 a4 24 88 00 00 	mov    %r12d,0x88(%rsp)
   34660:	00 
   34661:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   34666:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   3466b:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   34672:	00 
   34673:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   34678:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   3467d:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
   34682:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
   34687:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15

000000000003468c <instr.bb_f267>:
   3468c:	48 83 7c 24 58 ff    	cmpq   $0xffffffffffffffff,0x58(%rsp)
   34692:	0f 84 98 07 00 00    	je     34e30 <instr.bb_f913>

0000000000034698 <instr.bb_f273>:
   34698:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   3469d:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   346a2:	e8 a9 c1 ff ff       	callq  30850 <mbedtls_mpi_get_bit.instr.bb_5010>

00000000000346a7 <instr.bb_f282>:
   346a7:	4c 8b 34 24          	mov    (%rsp),%r14
   346ab:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   346b0:	44 0f b6 e8          	movzbl %al,%r13d
   346b4:	44 89 ea             	mov    %r13d,%edx
   346b7:	4c 89 f7             	mov    %r14,%rdi
   346ba:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   346c1:	70 00 00 
   346c4:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   346cb:	00 
   346cc:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   346d3:	70 00 00 
   346d6:	e8 15 ed ff ff       	callq  333f0 <mbedtls_mpi_safe_cond_swap.instr.bb_b680>
   346db:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   346e2:	70 00 00 
   346e5:	48 8b 37             	mov    (%rdi),%rsi
   346e8:	48 d1 ee             	shr    %rsi
   346eb:	48 89 37             	mov    %rsi,(%rdi)

00000000000346ee <instr.bb_f29a>:
   346ee:	85 c0                	test   %eax,%eax
   346f0:	0f 85 ba 06 00 00    	jne    34db0 <instr.bb_f65a+0xd>

00000000000346f6 <instr.bb_f2a2>:
   346f6:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   346fb:	44 89 ea             	mov    %r13d,%edx
   346fe:	4c 89 ff             	mov    %r15,%rdi
   34701:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34708:	70 00 00 
   3470b:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34712:	00 
   34713:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3471a:	70 00 00 
   3471d:	e8 ce ec ff ff       	callq  333f0 <mbedtls_mpi_safe_cond_swap.instr.bb_b680>
   34722:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34729:	70 00 00 
   3472c:	48 8b 37             	mov    (%rdi),%rsi
   3472f:	48 d1 ee             	shr    %rsi
   34732:	48 89 37             	mov    %rsi,(%rdi)

0000000000034735 <instr.bb_f2b2>:
   34735:	85 c0                	test   %eax,%eax
   34737:	0f 85 73 06 00 00    	jne    34db0 <instr.bb_f65a+0xd>

000000000003473d <instr.bb_f2ba>:
   3473d:	4c 89 fa             	mov    %r15,%rdx
   34740:	4c 89 f6             	mov    %r14,%rsi
   34743:	48 89 df             	mov    %rbx,%rdi
   34746:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3474d:	70 00 00 
   34750:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34757:	00 
   34758:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3475f:	70 00 00 
   34762:	e8 b9 cc ff ff       	callq  31420 <mbedtls_mpi_add_mpi.instr.bb_58b0>
   34767:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3476e:	70 00 00 
   34771:	48 8b 37             	mov    (%rdi),%rsi
   34774:	48 d1 ee             	shr    %rsi
   34777:	48 89 37             	mov    %rsi,(%rdi)

000000000003477a <instr.bb_f2c8>:
   3477a:	85 c0                	test   %eax,%eax
   3477c:	0f 84 24 00 00 00    	je     347a6 <instr.bb_f2ee>

0000000000034782 <instr.bb_f2cc>:
   34782:	e9 29 06 00 00       	jmpq   34db0 <instr.bb_f65a+0xd>
   34787:	90                   	nop
   34788:	90                   	nop
   34789:	90                   	nop
   3478a:	90                   	nop
   3478b:	90                   	nop
   3478c:	90                   	nop
   3478d:	90                   	nop
   3478e:	90                   	nop
   3478f:	90                   	nop

0000000000034790 <instr.bb_f2d8>:
   34790:	48 89 ea             	mov    %rbp,%rdx
   34793:	48 89 de             	mov    %rbx,%rsi
   34796:	48 89 df             	mov    %rbx,%rdi
   34799:	e8 02 c9 ff ff       	callq  310a0 <mbedtls_mpi_sub_abs.instr.bb_56d0>

000000000003479e <instr.bb_f2e6>:
   3479e:	85 c0                	test   %eax,%eax
   347a0:	0f 85 0a 06 00 00    	jne    34db0 <instr.bb_f65a+0xd>

00000000000347a6 <instr.bb_f2ee>:
   347a6:	48 89 ee             	mov    %rbp,%rsi
   347a9:	48 89 df             	mov    %rbx,%rdi
   347ac:	e8 df c4 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

00000000000347b1 <instr.bb_f2f9>:
   347b1:	85 c0                	test   %eax,%eax
   347b3:	0f 89 d7 ff ff ff    	jns    34790 <instr.bb_f2d8>

00000000000347b9 <instr.bb_f2fd>:
   347b9:	4c 8d a4 24 58 01 00 	lea    0x158(%rsp),%r12
   347c0:	00 
   347c1:	48 8b 34 24          	mov    (%rsp),%rsi
   347c5:	4c 89 fa             	mov    %r15,%rdx
   347c8:	4c 89 e7             	mov    %r12,%rdi
   347cb:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   347d2:	70 00 00 
   347d5:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   347dc:	00 
   347dd:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   347e4:	70 00 00 
   347e7:	e8 44 cc ff ff       	callq  31430 <mbedtls_mpi_sub_mpi.instr.bb_58c0>
   347ec:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   347f3:	70 00 00 
   347f6:	48 8b 37             	mov    (%rdi),%rsi
   347f9:	48 d1 ee             	shr    %rsi
   347fc:	48 89 37             	mov    %rsi,(%rdi)

00000000000347ff <instr.bb_f314>:
   347ff:	85 c0                	test   %eax,%eax
   34801:	0f 84 31 00 00 00    	je     34838 <instr.bb_f344>

0000000000034807 <instr.bb_f318>:
   34807:	e9 a4 05 00 00       	jmpq   34db0 <instr.bb_f65a+0xd>
   3480c:	90                   	nop
   3480d:	90                   	nop
   3480e:	90                   	nop
   3480f:	90                   	nop

0000000000034810 <instr.bb_f320>:
   34810:	31 f6                	xor    %esi,%esi
   34812:	4c 89 e7             	mov    %r12,%rdi
   34815:	e8 66 c5 ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>

000000000003481a <instr.bb_f32a>:
   3481a:	85 c0                	test   %eax,%eax
   3481c:	0f 84 2c 00 00 00    	je     3484e <instr.bb_f34f>

0000000000034822 <instr.bb_f32e>:
   34822:	48 89 ea             	mov    %rbp,%rdx
   34825:	4c 89 e6             	mov    %r12,%rsi
   34828:	4c 89 e7             	mov    %r12,%rdi
   3482b:	e8 f0 cb ff ff       	callq  31420 <mbedtls_mpi_add_mpi.instr.bb_58b0>

0000000000034830 <instr.bb_f33c>:
   34830:	85 c0                	test   %eax,%eax
   34832:	0f 85 78 05 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034838 <instr.bb_f344>:
   34838:	8b b4 24 58 11 00 c0 	mov    -0x3fffeea8(%rsp),%esi
   3483f:	33 b4 24 58 01 00 00 	xor    0x158(%rsp),%esi
   34846:	85 f6                	test   %esi,%esi
   34848:	0f 88 c2 ff ff ff    	js     34810 <instr.bb_f320>

000000000003484e <instr.bb_f34f>:
   3484e:	4c 8d b4 24 70 01 00 	lea    0x170(%rsp),%r14
   34855:	00 
   34856:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   3485b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   34860:	4c 89 f7             	mov    %r14,%rdi
   34863:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3486a:	70 00 00 
   3486d:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34874:	00 
   34875:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3487c:	70 00 00 
   3487f:	e8 9c cb ff ff       	callq  31420 <mbedtls_mpi_add_mpi.instr.bb_58b0>
   34884:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3488b:	70 00 00 
   3488e:	48 8b 37             	mov    (%rdi),%rsi
   34891:	48 d1 ee             	shr    %rsi
   34894:	48 89 37             	mov    %rsi,(%rdi)

0000000000034897 <instr.bb_f369>:
   34897:	85 c0                	test   %eax,%eax
   34899:	0f 84 27 00 00 00    	je     348c6 <instr.bb_f38e>

000000000003489f <instr.bb_f36d>:
   3489f:	e9 0c 05 00 00       	jmpq   34db0 <instr.bb_f65a+0xd>
   348a4:	90                   	nop
   348a5:	90                   	nop
   348a6:	90                   	nop
   348a7:	90                   	nop
   348a8:	90                   	nop
   348a9:	90                   	nop
   348aa:	90                   	nop
   348ab:	90                   	nop
   348ac:	90                   	nop
   348ad:	90                   	nop
   348ae:	90                   	nop
   348af:	90                   	nop

00000000000348b0 <instr.bb_f378>:
   348b0:	48 89 ea             	mov    %rbp,%rdx
   348b3:	4c 89 f6             	mov    %r14,%rsi
   348b6:	4c 89 f7             	mov    %r14,%rdi
   348b9:	e8 e2 c7 ff ff       	callq  310a0 <mbedtls_mpi_sub_abs.instr.bb_56d0>

00000000000348be <instr.bb_f386>:
   348be:	85 c0                	test   %eax,%eax
   348c0:	0f 85 ea 04 00 00    	jne    34db0 <instr.bb_f65a+0xd>

00000000000348c6 <instr.bb_f38e>:
   348c6:	48 89 ee             	mov    %rbp,%rsi
   348c9:	4c 89 f7             	mov    %r14,%rdi
   348cc:	e8 bf c3 ff ff       	callq  30c90 <mbedtls_mpi_cmp_mpi.instr.bb_5470>

00000000000348d1 <instr.bb_f399>:
   348d1:	85 c0                	test   %eax,%eax
   348d3:	0f 89 d7 ff ff ff    	jns    348b0 <instr.bb_f378>

00000000000348d9 <instr.bb_f39d>:
   348d9:	48 8d 84 24 88 01 00 	lea    0x188(%rsp),%rax
   348e0:	00 
   348e1:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   348e6:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   348eb:	48 89 c7             	mov    %rax,%rdi
   348ee:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   348f3:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   348fa:	70 00 00 
   348fd:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34904:	00 
   34905:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3490c:	70 00 00 
   3490f:	e8 1c cb ff ff       	callq  31430 <mbedtls_mpi_sub_mpi.instr.bb_58c0>
   34914:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3491b:	70 00 00 
   3491e:	48 8b 37             	mov    (%rdi),%rsi
   34921:	48 d1 ee             	shr    %rsi
   34924:	48 89 37             	mov    %rsi,(%rdi)

0000000000034927 <instr.bb_f3bc>:
   34927:	85 c0                	test   %eax,%eax
   34929:	0f 85 81 04 00 00    	jne    34db0 <instr.bb_f65a+0xd>

000000000003492f <instr.bb_f3c4>:
   3492f:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
   34934:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   34939:	e9 28 00 00 00       	jmpq   34966 <instr.bb_f3f4>

000000000003493e <instr.bb_f3d0>:
   3493e:	31 f6                	xor    %esi,%esi
   34940:	48 89 df             	mov    %rbx,%rdi
   34943:	e8 38 c4 ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>

0000000000034948 <instr.bb_f3da>:
   34948:	85 c0                	test   %eax,%eax
   3494a:	0f 84 2c 00 00 00    	je     3497c <instr.bb_f3ff>

0000000000034950 <instr.bb_f3de>:
   34950:	48 89 ea             	mov    %rbp,%rdx
   34953:	48 89 de             	mov    %rbx,%rsi
   34956:	48 89 df             	mov    %rbx,%rdi
   34959:	e8 c2 ca ff ff       	callq  31420 <mbedtls_mpi_add_mpi.instr.bb_58b0>

000000000003495e <instr.bb_f3ec>:
   3495e:	85 c0                	test   %eax,%eax
   34960:	0f 85 35 b0 fd ff    	jne    f99b <ecp_mul_restartable_internal+0xceb>

0000000000034966 <instr.bb_f3f4>:
   34966:	8b 8c 24 88 11 00 c0 	mov    -0x3fffee78(%rsp),%ecx
   3496d:	33 8c 24 88 01 00 00 	xor    0x188(%rsp),%ecx
   34974:	85 c9                	test   %ecx,%ecx
   34976:	0f 88 c2 ff ff ff    	js     3493e <instr.bb_f3d0>

000000000003497c <instr.bb_f3ff>:
   3497c:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
   34981:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   34986:	48 89 da             	mov    %rbx,%rdx
   34989:	48 89 f7             	mov    %rsi,%rdi
   3498c:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34993:	70 00 00 
   34996:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3499d:	00 
   3499e:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   349a5:	70 00 00 
   349a8:	e8 43 cb ff ff       	callq  314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
   349ad:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   349b4:	70 00 00 
   349b7:	48 8b 37             	mov    (%rdi),%rsi
   349ba:	48 d1 ee             	shr    %rsi
   349bd:	48 89 37             	mov    %rsi,(%rdi)

00000000000349c0 <instr.bb_f414>:
   349c0:	85 c0                	test   %eax,%eax
   349c2:	0f 85 e8 03 00 00    	jne    34db0 <instr.bb_f65a+0xd>

00000000000349c8 <instr.bb_f41c>:
   349c8:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   349cd:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   349d2:	e8 b9 ee ff ff       	callq  33890 <ecp_modp.instr.bb_c1d0>

00000000000349d7 <instr.bb_f42b>:
   349d7:	85 c0                	test   %eax,%eax
   349d9:	0f 85 d1 03 00 00    	jne    34db0 <instr.bb_f65a+0xd>

00000000000349df <instr.bb_f433>:
   349df:	4c 89 e2             	mov    %r12,%rdx
   349e2:	4c 89 f6             	mov    %r14,%rsi
   349e5:	4c 89 f7             	mov    %r14,%rdi
   349e8:	48 83 05 48 97 ff ff 	addq   $0x1,-0x68b8(%rip)        # 2e138 <mul_count>
   349ef:	01 
   349f0:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   349f7:	70 00 00 
   349fa:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34a01:	00 
   34a02:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34a09:	70 00 00 
   34a0c:	e8 df ca ff ff       	callq  314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
   34a11:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34a18:	70 00 00 
   34a1b:	48 8b 37             	mov    (%rdi),%rsi
   34a1e:	48 d1 ee             	shr    %rsi
   34a21:	48 89 37             	mov    %rsi,(%rdi)

0000000000034a24 <instr.bb_f449>:
   34a24:	85 c0                	test   %eax,%eax
   34a26:	0f 85 84 03 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034a2c <instr.bb_f451>:
   34a2c:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   34a31:	4c 89 f7             	mov    %r14,%rdi
   34a34:	e8 57 ee ff ff       	callq  33890 <ecp_modp.instr.bb_c1d0>

0000000000034a39 <instr.bb_f45e>:
   34a39:	85 c0                	test   %eax,%eax
   34a3b:	0f 85 6f 03 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034a41 <instr.bb_f466>:
   34a41:	48 89 da             	mov    %rbx,%rdx
   34a44:	48 89 de             	mov    %rbx,%rsi
   34a47:	48 89 df             	mov    %rbx,%rdi
   34a4a:	48 83 05 e6 96 ff ff 	addq   $0x1,-0x691a(%rip)        # 2e138 <mul_count>
   34a51:	01 
   34a52:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34a59:	70 00 00 
   34a5c:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34a63:	00 
   34a64:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34a6b:	70 00 00 
   34a6e:	e8 7d ca ff ff       	callq  314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
   34a73:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34a7a:	70 00 00 
   34a7d:	48 8b 37             	mov    (%rdi),%rsi
   34a80:	48 d1 ee             	shr    %rsi
   34a83:	48 89 37             	mov    %rsi,(%rdi)

0000000000034a86 <instr.bb_f47c>:
   34a86:	85 c0                	test   %eax,%eax
   34a88:	0f 85 22 03 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034a8e <instr.bb_f484>:
   34a8e:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   34a93:	48 89 df             	mov    %rbx,%rdi
   34a96:	e8 f5 ed ff ff       	callq  33890 <ecp_modp.instr.bb_c1d0>

0000000000034a9b <instr.bb_f491>:
   34a9b:	85 c0                	test   %eax,%eax
   34a9d:	0f 85 0d 03 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034aa3 <instr.bb_f499>:
   34aa3:	4c 89 e2             	mov    %r12,%rdx
   34aa6:	4c 89 e6             	mov    %r12,%rsi
   34aa9:	4c 89 e7             	mov    %r12,%rdi
   34aac:	48 83 05 84 96 ff ff 	addq   $0x1,-0x697c(%rip)        # 2e138 <mul_count>
   34ab3:	01 
   34ab4:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34abb:	70 00 00 
   34abe:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34ac5:	00 
   34ac6:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34acd:	70 00 00 
   34ad0:	e8 1b ca ff ff       	callq  314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
   34ad5:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34adc:	70 00 00 
   34adf:	48 8b 37             	mov    (%rdi),%rsi
   34ae2:	48 d1 ee             	shr    %rsi
   34ae5:	48 89 37             	mov    %rsi,(%rdi)

0000000000034ae8 <instr.bb_f4af>:
   34ae8:	85 c0                	test   %eax,%eax
   34aea:	0f 85 c0 02 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034af0 <instr.bb_f4b7>:
   34af0:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   34af5:	4c 89 e7             	mov    %r12,%rdi
   34af8:	e8 93 ed ff ff       	callq  33890 <ecp_modp.instr.bb_c1d0>

0000000000034afd <instr.bb_f4c4>:
   34afd:	85 c0                	test   %eax,%eax
   34aff:	0f 85 ab 02 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034b05 <instr.bb_f4cc>:
   34b05:	48 8b 3c 24          	mov    (%rsp),%rdi
   34b09:	4c 89 e2             	mov    %r12,%rdx
   34b0c:	48 89 de             	mov    %rbx,%rsi
   34b0f:	48 83 05 21 96 ff ff 	addq   $0x1,-0x69df(%rip)        # 2e138 <mul_count>
   34b16:	01 
   34b17:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34b1e:	70 00 00 
   34b21:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34b28:	00 
   34b29:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34b30:	70 00 00 
   34b33:	e8 b8 c9 ff ff       	callq  314f0 <mbedtls_mpi_mul_mpi.instr.bb_59b0>
   34b38:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34b3f:	70 00 00 
   34b42:	48 8b 37             	mov    (%rdi),%rsi
   34b45:	48 d1 ee             	shr    %rsi
   34b48:	48 89 37             	mov    %rsi,(%rdi)

0000000000034b4b <instr.bb_f4e3>:
   34b4b:	85 c0                	test   %eax,%eax
   34b4d:	0f 85 5d 02 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034b53 <instr.bb_f4eb>:
   34b53:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   34b58:	48 8b 3c 24          	mov    (%rsp),%rdi
   34b5c:	e8 2f ed ff ff       	callq  33890 <ecp_modp.instr.bb_c1d0>

0000000000034b61 <instr.bb_f4f9>:
   34b61:	85 c0                	test   %eax,%eax
   34b63:	0f 85 47 02 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034b69 <instr.bb_f501>:
   34b69:	4c 89 e2             	mov    %r12,%rdx
   34b6c:	48 89 de             	mov    %rbx,%rsi
   34b6f:	48 89 df             	mov    %rbx,%rdi
   34b72:	48 83 05 be 95 ff ff 	addq   $0x1,-0x6a42(%rip)        # 2e138 <mul_count>
   34b79:	01 
   34b7a:	e8 b1 c8 ff ff       	callq  31430 <mbedtls_mpi_sub_mpi.instr.bb_58c0>

0000000000034b7f <instr.bb_f517>:
   34b7f:	85 c0                	test   %eax,%eax
   34b81:	0f 84 2d 00 00 00    	je     34bb4 <instr.bb_f544>

0000000000034b87 <instr.bb_f51b>:
   34b87:	e9 24 02 00 00       	jmpq   34db0 <instr.bb_f65a+0xd>

0000000000034b8c <instr.bb_f520>:
   34b8c:	31 f6                	xor    %esi,%esi
   34b8e:	48 89 df             	mov    %rbx,%rdi
   34b91:	e8 ea c1 ff ff       	callq  30d80 <mbedtls_mpi_cmp_int.instr.bb_5560>

0000000000034b96 <instr.bb_f52a>:
   34b96:	85 c0                	test   %eax,%eax
   34b98:	0f 84 2d 00 00 00    	je     34bcb <instr.bb_f54e>

0000000000034b9e <instr.bb_f52e>:
   34b9e:	48 89 ea             	mov    %rbp,%rdx
   34ba1:	48 89 de             	mov    %rbx,%rsi
   34ba4:	48 89 df             	mov    %rbx,%rdi
   34ba7:	e8 74 c8 ff ff       	callq  31420 <mbedtls_mpi_add_mpi.instr.bb_58b0>

0000000000034bac <instr.bb_f53c>:
   34bac:	85 c0                	test   %eax,%eax
   34bae:	0f 85 fc 01 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034bb4 <instr.bb_f544>:
   34bb4:	8b 8c 24 40 11 00 c0 	mov    -0x3fffeec0(%rsp),%ecx
   34bbb:	33 8c 24 40 01 00 00 	xor    0x140(%rsp),%ecx
   34bc2:	83 f9 00             	cmp    $0x0,%ecx
   34bc5:	0f 88 c1 ff ff ff    	js     34b8c <instr.bb_f520>

0000000000034bcb <instr.bb_f54e>:
   34bcb:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   34bd0:	48 89 d9             	mov    %rbx,%rcx
   34bd3:	4c 89 fe             	mov    %r15,%rsi
   34bd6:	48 8d 57 20          	lea    0x20(%rdi),%rdx
   34bda:	e8 31 ee ff ff       	callq  33a10 <mbedtls_mpi_mul_mod.instr.bb_c3f0>

0000000000034bdf <instr.bb_f562>:
   34bdf:	85 c0                	test   %eax,%eax
   34be1:	0f 85 c9 01 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034be7 <instr.bb_f56a>:
   34be7:	4c 89 e2             	mov    %r12,%rdx
   34bea:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
   34bef:	4c 89 f9             	mov    %r15,%rcx
   34bf2:	4c 89 fe             	mov    %r15,%rsi
   34bf5:	4c 89 e7             	mov    %r12,%rdi
   34bf8:	e8 c3 ee ff ff       	callq  33ac0 <mbedtls_mpi_add_mod.instr.bb_c5b0>

0000000000034bfd <instr.bb_f580>:
   34bfd:	85 c0                	test   %eax,%eax
   34bff:	0f 85 ab 01 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034c05 <instr.bb_f588>:
   34c05:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   34c0a:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   34c0f:	4c 89 f1             	mov    %r14,%rcx
   34c12:	4c 89 e7             	mov    %r12,%rdi
   34c15:	e8 a6 ee ff ff       	callq  33ac0 <mbedtls_mpi_add_mod.instr.bb_c5b0>

0000000000034c1a <instr.bb_f59d>:
   34c1a:	85 c0                	test   %eax,%eax
   34c1c:	0f 85 8e 01 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034c22 <instr.bb_f5a5>:
   34c22:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   34c27:	4c 89 e7             	mov    %r12,%rdi
   34c2a:	48 89 c1             	mov    %rax,%rcx
   34c2d:	48 89 c2             	mov    %rax,%rdx
   34c30:	48 89 c6             	mov    %rax,%rsi
   34c33:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34c3a:	70 00 00 
   34c3d:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34c44:	00 
   34c45:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34c4c:	70 00 00 
   34c4f:	e8 bc ed ff ff       	callq  33a10 <mbedtls_mpi_mul_mod.instr.bb_c3f0>
   34c54:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34c5b:	70 00 00 
   34c5e:	48 8b 37             	mov    (%rdi),%rsi
   34c61:	48 d1 ee             	shr    %rsi
   34c64:	48 89 37             	mov    %rsi,(%rdi)

0000000000034c67 <instr.bb_f5bb>:
   34c67:	85 c0                	test   %eax,%eax
   34c69:	0f 85 41 01 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034c6f <instr.bb_f5c3>:
   34c6f:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   34c74:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   34c79:	4c 89 f1             	mov    %r14,%rcx
   34c7c:	4c 89 e7             	mov    %r12,%rdi
   34c7f:	4d 89 e6             	mov    %r12,%r14
   34c82:	e8 f9 ec ff ff       	callq  33980 <mbedtls_mpi_sub_mod.instr.bb_c380>

0000000000034c87 <instr.bb_f5db>:
   34c87:	85 c0                	test   %eax,%eax
   34c89:	0f 85 21 01 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034c8f <instr.bb_f5e3>:
   34c8f:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
   34c94:	4c 89 f7             	mov    %r14,%rdi
   34c97:	4c 89 e1             	mov    %r12,%rcx
   34c9a:	4c 89 e2             	mov    %r12,%rdx
   34c9d:	4c 89 e6             	mov    %r12,%rsi
   34ca0:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34ca7:	70 00 00 
   34caa:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34cb1:	00 
   34cb2:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34cb9:	70 00 00 
   34cbc:	e8 4f ed ff ff       	callq  33a10 <mbedtls_mpi_mul_mod.instr.bb_c3f0>
   34cc1:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34cc8:	70 00 00 
   34ccb:	48 8b 37             	mov    (%rdi),%rsi
   34cce:	48 d1 ee             	shr    %rsi
   34cd1:	48 89 37             	mov    %rsi,(%rdi)

0000000000034cd4 <instr.bb_f5f9>:
   34cd4:	85 c0                	test   %eax,%eax
   34cd6:	0f 85 d4 00 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034cdc <instr.bb_f5fd>:
   34cdc:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   34ce1:	4c 89 e1             	mov    %r12,%rcx
   34ce4:	4c 89 e6             	mov    %r12,%rsi
   34ce7:	4c 89 f7             	mov    %r14,%rdi
   34cea:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34cf1:	70 00 00 
   34cf4:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34cfb:	00 
   34cfc:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34d03:	70 00 00 
   34d06:	e8 05 ed ff ff       	callq  33a10 <mbedtls_mpi_mul_mod.instr.bb_c3f0>
   34d0b:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34d12:	70 00 00 
   34d15:	48 8b 37             	mov    (%rdi),%rsi
   34d18:	48 d1 ee             	shr    %rsi
   34d1b:	48 89 37             	mov    %rsi,(%rdi)

0000000000034d1e <instr.bb_f610>:
   34d1e:	85 c0                	test   %eax,%eax
   34d20:	0f 85 8a 00 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034d26 <instr.bb_f614>:
   34d26:	4c 89 f9             	mov    %r15,%rcx
   34d29:	48 89 da             	mov    %rbx,%rdx
   34d2c:	4c 89 fe             	mov    %r15,%rsi
   34d2f:	4c 89 f7             	mov    %r14,%rdi
   34d32:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34d39:	70 00 00 
   34d3c:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34d43:	00 
   34d44:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34d4b:	70 00 00 
   34d4e:	e8 bd ec ff ff       	callq  33a10 <mbedtls_mpi_mul_mod.instr.bb_c3f0>
   34d53:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34d5a:	70 00 00 
   34d5d:	48 8b 37             	mov    (%rdi),%rsi
   34d60:	48 d1 ee             	shr    %rsi
   34d63:	48 89 37             	mov    %rsi,(%rdi)

0000000000034d66 <instr.bb_f625>:
   34d66:	85 c0                	test   %eax,%eax
   34d68:	0f 85 42 00 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034d6e <instr.bb_f629>:
   34d6e:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   34d73:	48 8b 3c 24          	mov    (%rsp),%rdi
   34d77:	44 89 ea             	mov    %r13d,%edx
   34d7a:	e8 71 e6 ff ff       	callq  333f0 <mbedtls_mpi_safe_cond_swap.instr.bb_b680>

0000000000034d7f <instr.bb_f63a>:
   34d7f:	85 c0                	test   %eax,%eax
   34d81:	0f 85 29 00 00 00    	jne    34db0 <instr.bb_f65a+0xd>

0000000000034d87 <instr.bb_f63e>:
   34d87:	44 89 ea             	mov    %r13d,%edx
   34d8a:	4c 89 e6             	mov    %r12,%rsi
   34d8d:	4c 89 ff             	mov    %r15,%rdi
   34d90:	e8 5b e6 ff ff       	callq  333f0 <mbedtls_mpi_safe_cond_swap.instr.bb_b680>

0000000000034d95 <instr.bb_f64c>:
   34d95:	48 83 6c 24 58 01    	subq   $0x1,0x58(%rsp)
   34d9b:	85 c0                	test   %eax,%eax
   34d9d:	0f 84 e9 f8 ff ff    	je     3468c <instr.bb_f267>

0000000000034da3 <instr.bb_f65a>:
   34da3:	90                   	nop
   34da4:	90                   	nop
   34da5:	90                   	nop
   34da6:	90                   	nop
   34da7:	90                   	nop
   34da8:	90                   	nop
   34da9:	90                   	nop
   34daa:	90                   	nop
   34dab:	90                   	nop
   34dac:	90                   	nop
   34dad:	90                   	nop
   34dae:	90                   	nop
   34daf:	90                   	nop
   34db0:	44 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12d
   34db7:	00 
   34db8:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   34dbd:	41 89 c6             	mov    %eax,%r14d
   34dc0:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   34dc5:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   34dca:	90                   	nop
   34dcb:	90                   	nop
   34dcc:	90                   	nop
   34dcd:	90                   	nop
   34dce:	90                   	nop
   34dcf:	90                   	nop

0000000000034dd0 <instr.bb_f680>:
   34dd0:	4c 89 ff             	mov    %r15,%rdi
   34dd3:	e8 b8 ec ff ff       	callq  33a90 <mbedtls_ecp_point_free.part.0.instr.bb_c520>

0000000000034dd8 <instr.bb_f688>:
   34dd8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   34ddd:	e8 be b5 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000034de2 <instr.bb_f692>:
   34de2:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   34de7:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   34dec:	90                   	nop
   34ded:	90                   	nop
   34dee:	90                   	nop
   34def:	90                   	nop

0000000000034df0 <instr.bb_f6a0>:
   34df0:	48 89 ef             	mov    %rbp,%rdi
   34df3:	48 83 c5 18          	add    $0x18,%rbp
   34df7:	e8 a4 b5 ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

0000000000034dfc <instr.bb_f6ac>:
   34dfc:	4c 39 fd             	cmp    %r15,%rbp
   34dff:	0f 85 eb ff ff ff    	jne    34df0 <instr.bb_f6a0>

0000000000034e05 <instr.bb_f6b1>:
   34e05:	45 85 f6             	test   %r14d,%r14d
   34e08:	0f 85 ca aa fd ff    	jne    f8d8 <ecp_mul_restartable_internal+0xc28>

0000000000034e0e <instr.bb_f6ba>:
   34e0e:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
   34e13:	0f 84 a7 f5 ff ff    	je     343c0 <instr.bb_ed09>

0000000000034e19 <instr.bb_f6c5>:
   34e19:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
   34e1e:	0f 85 3c 9f fd ff    	jne    ed60 <ecp_mul_restartable_internal+0xb0>

0000000000034e24 <instr.bb_f6d0>:
   34e24:	45 31 e4             	xor    %r12d,%r12d
   34e27:	e9 94 f5 ff ff       	jmpq   343c0 <instr.bb_ed09>
   34e2c:	90                   	nop
   34e2d:	90                   	nop
   34e2e:	90                   	nop
   34e2f:	90                   	nop

0000000000034e30 <instr.bb_f913>:
   34e30:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   34e35:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   34e3a:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   34e3f:	48 8b 34 24          	mov    (%rsp),%rsi
   34e43:	48 89 df             	mov    %rbx,%rdi
   34e46:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   34e4b:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   34e50:	44 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12d
   34e57:	00 
   34e58:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34e5f:	70 00 00 
   34e62:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34e69:	00 
   34e6a:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34e71:	70 00 00 
   34e74:	e8 97 ec ff ff       	callq  33b10 <ecp_randomize_mxz.instr.bb_c7b0>
   34e79:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34e80:	70 00 00 
   34e83:	48 8b 37             	mov    (%rdi),%rsi
   34e86:	48 d1 ee             	shr    %rsi
   34e89:	48 89 37             	mov    %rsi,(%rdi)

0000000000034e8c <instr.bb_f940>:
   34e8c:	41 89 c6             	mov    %eax,%r14d
   34e8f:	85 c0                	test   %eax,%eax
   34e91:	0f 85 39 ff ff ff    	jne    34dd0 <instr.bb_f680>

0000000000034e97 <instr.bb_f94b>:
   34e97:	48 89 ea             	mov    %rbp,%rdx
   34e9a:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
   34e9f:	48 89 ee             	mov    %rbp,%rsi
   34ea2:	48 89 ef             	mov    %rbp,%rdi
   34ea5:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34eac:	70 00 00 
   34eaf:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34eb6:	00 
   34eb7:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34ebe:	70 00 00 
   34ec1:	e8 1a d0 ff ff       	callq  31ee0 <mbedtls_mpi_inv_mod.instr.bb_8550>
   34ec6:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34ecd:	70 00 00 
   34ed0:	48 8b 37             	mov    (%rdi),%rsi
   34ed3:	48 d1 ee             	shr    %rsi
   34ed6:	48 89 37             	mov    %rsi,(%rdi)

0000000000034ed9 <instr.bb_f95e>:
   34ed9:	41 89 c6             	mov    %eax,%r14d
   34edc:	85 c0                	test   %eax,%eax
   34ede:	0f 85 ec fe ff ff    	jne    34dd0 <instr.bb_f680>

0000000000034ee4 <instr.bb_f969>:
   34ee4:	48 8b 14 24          	mov    (%rsp),%rdx
   34ee8:	48 89 e9             	mov    %rbp,%rcx
   34eeb:	48 89 df             	mov    %rbx,%rdi
   34eee:	48 89 d6             	mov    %rdx,%rsi
   34ef1:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34ef8:	70 00 00 
   34efb:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34f02:	00 
   34f03:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34f0a:	70 00 00 
   34f0d:	e8 fe ea ff ff       	callq  33a10 <mbedtls_mpi_mul_mod.instr.bb_c3f0>
   34f12:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34f19:	70 00 00 
   34f1c:	48 8b 37             	mov    (%rdi),%rsi
   34f1f:	48 d1 ee             	shr    %rsi
   34f22:	48 89 37             	mov    %rsi,(%rdi)

0000000000034f25 <instr.bb_f97b>:
   34f25:	41 89 c6             	mov    %eax,%r14d
   34f28:	85 c0                	test   %eax,%eax
   34f2a:	0f 85 a0 fe ff ff    	jne    34dd0 <instr.bb_f680>

0000000000034f30 <instr.bb_f986>:
   34f30:	be 01 00 00 00       	mov    $0x1,%esi
   34f35:	48 89 ef             	mov    %rbp,%rdi
   34f38:	e8 23 b8 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>

0000000000034f3d <instr.bb_f993>:
   34f3d:	41 89 c6             	mov    %eax,%r14d
   34f40:	e9 8b fe ff ff       	jmpq   34dd0 <instr.bb_f680>
   34f45:	90                   	nop
   34f46:	90                   	nop
   34f47:	90                   	nop
   34f48:	90                   	nop
   34f49:	90                   	nop
   34f4a:	90                   	nop
   34f4b:	90                   	nop
   34f4c:	90                   	nop
   34f4d:	90                   	nop
   34f4e:	90                   	nop
   34f4f:	90                   	nop

0000000000034f50 <mbedtls_ecp_mul_restartable.instr.bb_fa40>:
   34f50:	45 31 d2             	xor    %r10d,%r10d
   34f53:	f3 0f 1e fa          	endbr64 
   34f57:	4d 85 c0             	test   %r8,%r8
   34f5a:	0f 84 ee aa fd ff    	je     fa4e <mbedtls_ecp_mul_restartable+0xe>

0000000000034f60 <instr.bb_fa49>:
   34f60:	e9 2b f3 ff ff       	jmpq   34290 <ecp_mul_restartable_internal.instr.bb_ecb0>
   34f65:	90                   	nop
   34f66:	90                   	nop
   34f67:	90                   	nop
   34f68:	90                   	nop
   34f69:	90                   	nop
   34f6a:	90                   	nop
   34f6b:	90                   	nop
   34f6c:	90                   	nop
   34f6d:	90                   	nop
   34f6e:	90                   	nop
   34f6f:	90                   	nop

0000000000034f70 <mbedtls_ecp_gen_privkey.instr.bb_ffa0>:
   34f70:	45 31 c0             	xor    %r8d,%r8d
   34f73:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   34f7a:	c0 
   34f7b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   34f82:	c0 
   34f83:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   34f8a:	c0 
   34f8b:	f3 0f 1e fa          	endbr64 
   34f8f:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
   34f94:	0f 84 4e b0 fd ff    	je     ffe8 <mbedtls_ecp_gen_privkey+0x48>

0000000000034f9a <instr.bb_ffab>:
   34f9a:	41 54                	push   %r12
   34f9c:	49 89 d1             	mov    %rdx,%r9
   34f9f:	49 89 c8             	mov    %rcx,%r8
   34fa2:	55                   	push   %rbp
   34fa3:	48 89 f5             	mov    %rsi,%rbp
   34fa6:	53                   	push   %rbx
   34fa7:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
   34fac:	0f 84 1e 00 00 00    	je     34fd0 <instr.bb_fff0>

0000000000034fb2 <instr.bb_ffbf>:
   34fb2:	48 8d 97 98 00 00 00 	lea    0x98(%rdi),%rdx
   34fb9:	4c 89 c9             	mov    %r9,%rcx
   34fbc:	be 01 00 00 00       	mov    $0x1,%esi
   34fc1:	48 89 ef             	mov    %rbp,%rdi
   34fc4:	e8 67 ce ff ff       	callq  31e30 <mbedtls_mpi_random.instr.bb_84d0>
   34fc9:	e9 08 b0 fd ff       	jmpq   ffd6 <mbedtls_ecp_gen_privkey+0x36>
   34fce:	90                   	nop
   34fcf:	90                   	nop

0000000000034fd0 <instr.bb_fff0>:
   34fd0:	48 8b 9f b8 00 00 00 	mov    0xb8(%rdi),%rbx
   34fd7:	48 89 ef             	mov    %rbp,%rdi
   34fda:	49 89 dc             	mov    %rbx,%r12
   34fdd:	49 c1 ec 03          	shr    $0x3,%r12
   34fe1:	49 83 c4 01          	add    $0x1,%r12
   34fe5:	4c 89 e6             	mov    %r12,%rsi
   34fe8:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34fef:	70 00 00 
   34ff2:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   34ff9:	00 
   34ffa:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   35001:	70 00 00 
   35004:	e8 77 cd ff ff       	callq  31d80 <mbedtls_mpi_fill_random.instr.bb_7ef0>
   35009:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   35010:	70 00 00 
   35013:	48 8b 37             	mov    (%rdi),%rsi
   35016:	48 d1 ee             	shr    %rsi
   35019:	48 89 37             	mov    %rsi,(%rdi)

000000000003501c <instr.bb_1000d>:
   3501c:	85 c0                	test   %eax,%eax
   3501e:	0f 85 bb af fd ff    	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>

0000000000035024 <instr.bb_10011>:
   35024:	48 89 d8             	mov    %rbx,%rax
   35027:	48 89 ef             	mov    %rbp,%rdi
   3502a:	48 f7 d0             	not    %rax
   3502d:	4a 8d 34 e0          	lea    (%rax,%r12,8),%rsi
   35031:	e8 4a bb ff ff       	callq  30b80 <mbedtls_mpi_shift_r.instr.bb_5380>

0000000000035036 <instr.bb_10023>:
   35036:	85 c0                	test   %eax,%eax
   35038:	0f 85 a1 af fd ff    	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>

000000000003503e <instr.bb_10027>:
   3503e:	ba 01 00 00 00       	mov    $0x1,%edx
   35043:	48 89 de             	mov    %rbx,%rsi
   35046:	48 89 ef             	mov    %rbp,%rdi
   35049:	e8 42 b8 ff ff       	callq  30890 <mbedtls_mpi_set_bit.instr.bb_5040>

000000000003504e <instr.bb_10037>:
   3504e:	85 c0                	test   %eax,%eax
   35050:	0f 85 89 af fd ff    	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>

0000000000035056 <instr.bb_1003b>:
   35056:	31 d2                	xor    %edx,%edx
   35058:	31 f6                	xor    %esi,%esi
   3505a:	48 89 ef             	mov    %rbp,%rdi
   3505d:	e8 2e b8 ff ff       	callq  30890 <mbedtls_mpi_set_bit.instr.bb_5040>

0000000000035062 <instr.bb_10047>:
   35062:	85 c0                	test   %eax,%eax
   35064:	0f 85 75 af fd ff    	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>

000000000003506a <instr.bb_1004b>:
   3506a:	31 d2                	xor    %edx,%edx
   3506c:	be 01 00 00 00       	mov    $0x1,%esi
   35071:	48 89 ef             	mov    %rbp,%rdi
   35074:	e8 17 b8 ff ff       	callq  30890 <mbedtls_mpi_set_bit.instr.bb_5040>

0000000000035079 <instr.bb_1005a>:
   35079:	85 c0                	test   %eax,%eax
   3507b:	0f 85 5e af fd ff    	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>

0000000000035081 <instr.bb_10062>:
   35081:	48 81 fb fe 00 00 00 	cmp    $0xfe,%rbx
   35088:	0f 85 51 af fd ff    	jne    ffdf <mbedtls_ecp_gen_privkey+0x3f>

000000000003508e <instr.bb_1006f>:
   3508e:	5b                   	pop    %rbx
   3508f:	48 89 ef             	mov    %rbp,%rdi
   35092:	31 d2                	xor    %edx,%edx
   35094:	5d                   	pop    %rbp
   35095:	be 02 00 00 00       	mov    $0x2,%esi
   3509a:	41 5c                	pop    %r12
   3509c:	e9 ef b7 ff ff       	jmpq   30890 <mbedtls_mpi_set_bit.instr.bb_5040>
   350a1:	90                   	nop
   350a2:	90                   	nop
   350a3:	90                   	nop
   350a4:	90                   	nop
   350a5:	90                   	nop
   350a6:	90                   	nop
   350a7:	90                   	nop
   350a8:	90                   	nop
   350a9:	90                   	nop
   350aa:	90                   	nop
   350ab:	90                   	nop
   350ac:	90                   	nop
   350ad:	90                   	nop
   350ae:	90                   	nop
   350af:	90                   	nop

00000000000350b0 <ecp_mod_p255.instr.bb_10a50>:
   350b0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   350b4:	c4 c2 7d 59 c6       	vpbroadcastq %xmm14,%ymm0
   350b9:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   350be:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   350c5:	00 c0 
   350c7:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   350ce:	00 c0 
   350d0:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   350d7:	00 c0 
   350d9:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   350de:	88 8c 24 f0 0f 00 c0 	mov    %cl,-0x3ffff010(%rsp)
   350e5:	f3 0f 1e fa          	endbr64 
   350e9:	41 56                	push   %r14
   350eb:	48 8b 8c 24 f8 0f 00 	mov    -0x3ffff008(%rsp),%rcx
   350f2:	c0 
   350f3:	48 85 c9             	test   %rcx,%rcx
   350f6:	0f 84 12 00 00 00    	je     3510e <ecp_mod_p255.instr.bb_10a50+0x5e>
   350fc:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   35101:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35106:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   3510d:	c0 
   3510e:	4c 31 e9             	xor    %r13,%rcx
   35111:	51                   	push   %rcx
   35112:	41 54                	push   %r12
   35114:	55                   	push   %rbp
   35115:	53                   	push   %rbx
   35116:	48 83 ec 30          	sub    $0x30,%rsp
   3511a:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   3511e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   35125:	00 00 
   35127:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   3512c:	31 c0                	xor    %eax,%eax
   3512e:	49 83 fd 04          	cmp    $0x4,%r13
   35132:	0f 86 9d 00 00 00    	jbe    351d5 <instr.bb_10b11+0x2>

0000000000035138 <instr.bb_10a7e>:
   35138:	49 83 ed 04          	sub    $0x4,%r13
   3513c:	49 83 fd 04          	cmp    $0x4,%r13
   35140:	0f 87 ea b9 fd ff    	ja     10b30 <ecp_mod_p255+0xe0>

0000000000035146 <instr.bb_10a8c>:
   35146:	48 8b 6f 10          	mov    0x10(%rdi),%rbp
   3514a:	49 89 e1             	mov    %rsp,%r9
   3514d:	49 89 fc             	mov    %rdi,%r12
   35150:	b9 20 00 00 00       	mov    $0x20,%ecx
   35155:	4a 8d 1c ed 00 00 00 	lea    0x0(,%r13,8),%rbx
   3515c:	00 
   3515d:	4c 89 cf             	mov    %r9,%rdi
   35160:	4c 8d 75 20          	lea    0x20(%rbp),%r14
   35164:	48 89 da             	mov    %rbx,%rdx
   35167:	4c 89 f6             	mov    %r14,%rsi
   3516a:	e8 81 f1 fc ff       	callq  42f0 <__memcpy_chk@plt>

000000000003516f <instr.bb_10ab5>:
   3516f:	48 8d 55 28          	lea    0x28(%rbp),%rdx
   35173:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
   3517a:	00 
   3517b:	31 ff                	xor    %edi,%edi
   3517d:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   35181:	49 89 c1             	mov    %rax,%r9
   35184:	89 d8                	mov    %ebx,%eax
   35186:	48 c7 44 05 18 00 00 	movq   $0x0,0x18(%rbp,%rax,1)
   3518d:	00 00 
   3518f:	49 29 d6             	sub    %rdx,%r14
   35192:	42 8d 04 33          	lea    (%rbx,%r14,1),%eax
   35196:	83 e0 f8             	and    $0xfffffff8,%eax
   35199:	83 f8 08             	cmp    $0x8,%eax
   3519c:	0f 82 16 00 00 00    	jb     351b8 <instr.bb_10af6>

00000000000351a2 <instr.bb_10ae4>:
   351a2:	83 e0 f8             	and    $0xfffffff8,%eax
   351a5:	31 c9                	xor    %ecx,%ecx

00000000000351a7 <instr.bb_10ae9>:
   351a7:	89 ce                	mov    %ecx,%esi
   351a9:	83 c1 08             	add    $0x8,%ecx
   351ac:	48 89 3c 32          	mov    %rdi,(%rdx,%rsi,1)
   351b0:	39 c1                	cmp    %eax,%ecx
   351b2:	0f 82 ef ff ff ff    	jb     351a7 <instr.bb_10ae9>

00000000000351b8 <instr.bb_10af6>:
   351b8:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   351bd:	4c 89 e9             	mov    %r13,%rcx
   351c0:	4c 89 ca             	mov    %r9,%rdx
   351c3:	be 05 00 00 00       	mov    $0x5,%esi
   351c8:	41 b8 26 00 00 00    	mov    $0x26,%r8d
   351ce:	e8 bd dd ff ff       	callq  32f90 <mbedtls_mpi_core_mla.instr.bb_a560>

00000000000351d3 <instr.bb_10b11>:
   351d3:	31 c0                	xor    %eax,%eax
   351d5:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   351da:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   351e1:	00 00 
   351e3:	0f 85 4e b9 fd ff    	jne    10b37 <ecp_mod_p255+0xe7>

00000000000351e9 <instr.bb_10b23>:
   351e9:	48 83 c4 30          	add    $0x30,%rsp
   351ed:	5b                   	pop    %rbx
   351ee:	5d                   	pop    %rbp
   351ef:	41 5c                	pop    %r12
   351f1:	4c 8b ac 24 00 10 00 	mov    -0x3ffff000(%rsp),%r13
   351f8:	c0 
   351f9:	4c 33 2c 24          	xor    (%rsp),%r13
   351fd:	48 83 c4 08          	add    $0x8,%rsp
   35201:	41 5e                	pop    %r14
   35203:	c3                   	retq   
   35204:	90                   	nop
   35205:	90                   	nop
   35206:	90                   	nop
   35207:	90                   	nop
   35208:	90                   	nop
   35209:	90                   	nop
   3520a:	90                   	nop
   3520b:	90                   	nop
   3520c:	90                   	nop
   3520d:	90                   	nop
   3520e:	90                   	nop
   3520f:	90                   	nop

0000000000035210 <mbedtls_ecp_group_load.instr.bb_120b0>:
   35210:	31 c9                	xor    %ecx,%ecx
   35212:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   35219:	c0 
   3521a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   35221:	c0 
   35222:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   35229:	c0 
   3522a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   35231:	c0 
   35232:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   35239:	c0 
   3523a:	f3 0f 1e fa          	endbr64 
   3523e:	55                   	push   %rbp
   3523f:	48 89 fd             	mov    %rdi,%rbp
   35242:	53                   	push   %rbx
   35243:	89 f3                	mov    %esi,%ebx
   35245:	48 83 ec 18          	sub    $0x18,%rsp
   35249:	e8 62 eb ff ff       	callq  33db0 <mbedtls_ecp_group_free.instr.bb_d8c0>

000000000003524e <instr.bb_120c4>:
   3524e:	48 89 ef             	mov    %rbp,%rdi
   35251:	e8 84 ea ff ff       	callq  33cda <mbedtls_ecp_group_init.instr.bb_d7c0>

0000000000035256 <instr.bb_120cc>:
   35256:	89 5d 00             	mov    %ebx,0x0(%rbp)
   35259:	83 fb 0d             	cmp    $0xd,%ebx
   3525c:	0f 87 a1 db fd ff    	ja     12e03 <mbedtls_ecp_group_load+0xd53>

0000000000035262 <instr.bb_120d8>:
   35262:	48 8d 15 17 6a fe ff 	lea    -0x195e9(%rip),%rdx        # 1bc80 <x25519_bad_point_1+0x20>
   35269:	48 63 04 9a          	movslq (%rdx,%rbx,4),%rax
   3526d:	48 01 d0             	add    %rdx,%rax
   35270:	3e ff e0             	notrack jmpq *%rax
   35273:	90                   	nop
   35274:	90                   	nop
   35275:	90                   	nop
   35276:	90                   	nop
   35277:	90                   	nop
   35278:	90                   	nop
   35279:	90                   	nop
   3527a:	90                   	nop
   3527b:	90                   	nop
   3527c:	90                   	nop
   3527d:	90                   	nop
   3527e:	90                   	nop
   3527f:	90                   	nop

0000000000035280 <instr.bb_129c8>:
   35280:	48 8d 05 c9 b7 fd ff 	lea    -0x24837(%rip),%rax        # 10a50 <ecp_mod_p255>
   35287:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   3528b:	be 42 db 01 00       	mov    $0x1db42,%esi
   35290:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   35297:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3529e:	70 00 00 
   352a1:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   352a8:	00 
   352a9:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   352b0:	70 00 00 
   352b3:	e8 a8 b4 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   352b8:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   352bf:	70 00 00 
   352c2:	48 8b 37             	mov    (%rdi),%rsi
   352c5:	48 d1 ee             	shr    %rsi
   352c8:	48 89 37             	mov    %rsi,(%rdi)

00000000000352cb <instr.bb_129e4>:
   352cb:	85 c0                	test   %eax,%eax
   352cd:	0f 85 41 ce fd ff    	jne    12114 <mbedtls_ecp_group_load+0x64>

00000000000352d3 <instr.bb_129ec>:
   352d3:	48 8d 05 86 6a fe ff 	lea    -0x1957a(%rip),%rax        # 1bd60 <curve25519_p>
   352da:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%rbp)
   352e1:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
   352e5:	48 c7 45 10 04 00 00 	movq   $0x4,0x10(%rbp)
   352ec:	00 
   352ed:	48 89 45 18          	mov    %rax,0x18(%rbp)
   352f1:	e8 1a b6 ff ff       	callq  30910 <mbedtls_mpi_bitlen.instr.bb_5120>

00000000000352f6 <instr.bb_12a0f>:
   352f6:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
   352fa:	be 09 00 00 00       	mov    $0x9,%esi
   352ff:	c7 85 98 00 00 00 01 	movl   $0x1,0x98(%rbp)
   35306:	00 00 00 
   35309:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   35310:	48 8d 05 29 6a fe ff 	lea    -0x195d7(%rip),%rax        # 1bd40 <curve25519_n>
   35317:	48 c7 85 a0 00 00 00 	movq   $0x4,0xa0(%rbp)
   3531e:	04 00 00 00 
   35322:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   35329:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   35330:	70 00 00 
   35333:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   3533a:	00 
   3533b:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   35342:	70 00 00 
   35345:	e8 16 b4 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   3534a:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   35351:	70 00 00 
   35354:	48 8b 37             	mov    (%rdi),%rsi
   35357:	48 d1 ee             	shr    %rsi
   3535a:	48 89 37             	mov    %rsi,(%rdi)

000000000003535d <instr.bb_12a47>:
   3535d:	85 c0                	test   %eax,%eax
   3535f:	0f 85 af cd fd ff    	jne    12114 <mbedtls_ecp_group_load+0x64>

0000000000035365 <instr.bb_12a4f>:
   35365:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
   3536c:	be 01 00 00 00       	mov    $0x1,%esi
   35371:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   35378:	70 00 00 
   3537b:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   35382:	00 
   35383:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3538a:	70 00 00 
   3538d:	e8 ce b3 ff ff       	callq  30760 <mbedtls_mpi_lset.instr.bb_4f90>
   35392:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   35399:	70 00 00 
   3539c:	48 8b 37             	mov    (%rdi),%rsi
   3539f:	48 d1 ee             	shr    %rsi
   353a2:	48 89 37             	mov    %rsi,(%rdi)

00000000000353a5 <instr.bb_12a60>:
   353a5:	85 c0                	test   %eax,%eax
   353a7:	0f 85 67 cd fd ff    	jne    12114 <mbedtls_ecp_group_load+0x64>

00000000000353ad <instr.bb_12a68>:
   353ad:	48 8d 7d 68          	lea    0x68(%rbp),%rdi
   353b1:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   353b5:	e8 e6 af ff ff       	callq  303a0 <mbedtls_mpi_free.instr.bb_4b90>

00000000000353ba <instr.bb_12a75>:
   353ba:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   353be:	48 c7 85 b8 00 00 00 	movq   $0xfe,0xb8(%rbp)
   353c5:	fe 00 00 00 
   353c9:	e9 66 ce fd ff       	jmpq   12234 <mbedtls_ecp_group_load+0x184>
   353ce:	90                   	nop
   353cf:	90                   	nop

00000000000353d0 <mbedtls_platform_zeroize.instr.bb_14c70>:
   353d0:	31 c9                	xor    %ecx,%ecx
   353d2:	f3 0f 1e fa          	endbr64 
   353d6:	48 85 f6             	test   %rsi,%rsi
   353d9:	0f 85 a1 f8 fd ff    	jne    14c80 <mbedtls_platform_zeroize+0x10>

00000000000353df <instr.bb_14c79>:
   353df:	c3                   	retq   

00000000000353e0 <mbedtls_sha256_init.instr.bb_18360>:
   353e0:	31 c9                	xor    %ecx,%ecx
   353e2:	f3 0f 1e fa          	endbr64 
   353e6:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   353ed:	48 89 f9             	mov    %rdi,%rcx
   353f0:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   353f4:	31 c0                	xor    %eax,%eax
   353f6:	48 c7 47 5c 00 00 00 	movq   $0x0,0x5c(%rdi)
   353fd:	00 
   353fe:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   35402:	48 29 f9             	sub    %rdi,%rcx
   35405:	83 c1 6c             	add    $0x6c,%ecx
   35408:	c1 e9 03             	shr    $0x3,%ecx

000000000003540b <instr.bb_18389>:
   3540b:	f3 48 ab             	rep stos %rax,%es:(%rdi)

000000000003540e <instr.bb_1838c>:
   3540e:	c3                   	retq   
   3540f:	90                   	nop

0000000000035410 <mbedtls_sha256_starts.instr.bb_18400>:
   35410:	31 c9                	xor    %ecx,%ecx
   35412:	f3 0f 1e fa          	endbr64 
   35416:	83 fe 01             	cmp    $0x1,%esi
   35419:	0f 87 81 30 fe ff    	ja     184a0 <mbedtls_sha256_starts+0xa0>

000000000003541f <instr.bb_1840d>:
   3541f:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   35426:	85 f6                	test   %esi,%esi
   35428:	0f 84 32 30 fe ff    	je     18460 <mbedtls_sha256_starts+0x60>

000000000003542e <instr.bb_18418>:
   3542e:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   35435:	d5 7c 36 
   35438:	89 77 68             	mov    %esi,0x68(%rdi)
   3543b:	48 89 47 08          	mov    %rax,0x8(%rdi)
   3543f:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   35446:	59 0e f7 
   35449:	48 89 47 10          	mov    %rax,0x10(%rdi)
   3544d:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   35454:	15 58 68 
   35457:	48 89 47 18          	mov    %rax,0x18(%rdi)
   3545b:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   35462:	4f fa be 
   35465:	48 89 47 20          	mov    %rax,0x20(%rdi)
   35469:	31 c0                	xor    %eax,%eax
   3546b:	c3                   	retq   
   3546c:	90                   	nop
   3546d:	90                   	nop
   3546e:	90                   	nop
   3546f:	90                   	nop

0000000000035470 <mbedtls_internal_sha256_process.instr.bb_184b0>:
   35470:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   35474:	c5 fe 7f 8c 24 48 0e 	vmovdqu %ymm1,-0x3ffff1b8(%rsp)
   3547b:	00 c0 
   3547d:	c5 fe 7f 8c 24 68 0e 	vmovdqu %ymm1,-0x3ffff198(%rsp)
   35484:	00 c0 
   35486:	c5 fe 7f 8c 24 88 0e 	vmovdqu %ymm1,-0x3ffff178(%rsp)
   3548d:	00 c0 
   3548f:	c5 fe 7f 8c 24 a8 0e 	vmovdqu %ymm1,-0x3ffff158(%rsp)
   35496:	00 c0 
   35498:	c5 fe 7f 8c 24 c8 0e 	vmovdqu %ymm1,-0x3ffff138(%rsp)
   3549f:	00 c0 
   354a1:	c5 fe 7f 8c 24 e8 0e 	vmovdqu %ymm1,-0x3ffff118(%rsp)
   354a8:	00 c0 
   354aa:	c5 fe 7f 8c 24 08 0f 	vmovdqu %ymm1,-0x3ffff0f8(%rsp)
   354b1:	00 c0 
   354b3:	c5 fe 7f 8c 24 28 0f 	vmovdqu %ymm1,-0x3ffff0d8(%rsp)
   354ba:	00 c0 
   354bc:	c5 fe 7f 8c 24 48 0f 	vmovdqu %ymm1,-0x3ffff0b8(%rsp)
   354c3:	00 c0 
   354c5:	c5 fe 7f 8c 24 68 0f 	vmovdqu %ymm1,-0x3ffff098(%rsp)
   354cc:	00 c0 
   354ce:	c5 fe 7f 8c 24 88 0f 	vmovdqu %ymm1,-0x3ffff078(%rsp)
   354d5:	00 c0 
   354d7:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   354de:	00 c0 
   354e0:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   354e7:	00 c0 
   354e9:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   354f0:	00 c0 
   354f2:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   354f7:	f3 0f 1e fa          	endbr64 
   354fb:	41 57                	push   %r15
   354fd:	48 89 f9             	mov    %rdi,%rcx
   35500:	41 56                	push   %r14
   35502:	41 55                	push   %r13
   35504:	41 54                	push   %r12
   35506:	55                   	push   %rbp
   35507:	53                   	push   %rbx
   35508:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
   3550f:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   35514:	48 8d 9c 24 58 01 00 	lea    0x158(%rsp),%rbx
   3551b:	00 
   3551c:	48 89 df             	mov    %rbx,%rdi
   3551f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   35526:	00 00 
   35528:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   3552f:	00 
   35530:	31 c0                	xor    %eax,%eax
   35532:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)

0000000000035537 <instr.bb_184f0>:
   35537:	8b 54 01 08          	mov    0x8(%rcx,%rax,1),%edx
   3553b:	89 14 07             	mov    %edx,(%rdi,%rax,1)
   3553e:	48 83 c0 04          	add    $0x4,%rax
   35542:	48 83 f8 20          	cmp    $0x20,%rax
   35546:	0f 85 eb ff ff ff    	jne    35537 <instr.bb_184f0>

000000000003554c <instr.bb_18501>:
   3554c:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   35551:	31 c0                	xor    %eax,%eax
   35553:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
   35558:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   3555d:	90                   	nop
   3555e:	90                   	nop
   3555f:	90                   	nop

0000000000035560 <instr.bb_18518>:
   35560:	8b 14 06             	mov    (%rsi,%rax,1),%edx
   35563:	0f ca                	bswap  %edx
   35565:	89 14 01             	mov    %edx,(%rcx,%rax,1)
   35568:	48 83 c0 04          	add    $0x4,%rax
   3556c:	48 83 f8 40          	cmp    $0x40,%rax
   35570:	0f 85 ea ff ff ff    	jne    35560 <instr.bb_18518>

0000000000035576 <instr.bb_1852a>:
   35576:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   3557b:	48 8d 05 fe e1 fe ff 	lea    -0x11e02(%rip),%rax        # 23780 <K>
   35582:	c7 44 24 1c d5 5e 1c 	movl   $0xab1c5ed5,0x1c(%rsp)
   35589:	ab 
   3558a:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
   35591:	00 
   35592:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   35597:	8b ac 24 74 01 00 00 	mov    0x174(%rsp),%ebp
   3559e:	41 ba a5 db b5 e9    	mov    $0xe9b5dba5,%r10d
   355a4:	41 b9 cf fb c0 b5    	mov    $0xb5c0fbcf,%r9d
   355aa:	48 89 04 24          	mov    %rax,(%rsp)
   355ae:	8b b4 24 68 01 00 00 	mov    0x168(%rsp),%esi
   355b5:	41 b8 98 2f 8a 42    	mov    $0x428a2f98,%r8d
   355bb:	c7 44 24 18 a4 82 3f 	movl   $0x923f82a4,0x18(%rsp)
   355c2:	92 
   355c3:	44 8b bc 24 70 01 00 	mov    0x170(%rsp),%r15d
   355ca:	00 
   355cb:	c7 44 24 14 f1 11 f1 	movl   $0x59f111f1,0x14(%rsp)
   355d2:	59 
   355d3:	44 8b b4 24 6c 01 00 	mov    0x16c(%rsp),%r14d
   355da:	00 
   355db:	c7 44 24 10 5b c2 56 	movl   $0x3956c25b,0x10(%rsp)
   355e2:	39 
   355e3:	44 8b ac 24 58 01 00 	mov    0x158(%rsp),%r13d
   355ea:	00 
   355eb:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   355f0:	44 8b 9c 24 5c 01 00 	mov    0x15c(%rsp),%r11d
   355f7:	00 
   355f8:	8b 9c 24 60 01 00 00 	mov    0x160(%rsp),%ebx
   355ff:	8b 8c 24 64 01 00 00 	mov    0x164(%rsp),%ecx
   35606:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   3560b:	ba 91 44 37 71       	mov    $0x71374491,%edx

0000000000035610 <instr.bb_185c4>:
   35610:	41 89 f4             	mov    %esi,%r12d
   35613:	89 f0                	mov    %esi,%eax
   35615:	41 c1 cc 06          	ror    $0x6,%r12d
   35619:	c1 c8 0b             	ror    $0xb,%eax
   3561c:	44 31 e0             	xor    %r12d,%eax
   3561f:	41 89 f4             	mov    %esi,%r12d
   35622:	41 c1 c4 07          	rol    $0x7,%r12d
   35626:	44 31 e0             	xor    %r12d,%eax
   35629:	45 89 fc             	mov    %r15d,%r12d
   3562c:	45 31 f4             	xor    %r14d,%r12d
   3562f:	41 21 f4             	and    %esi,%r12d
   35632:	45 31 fc             	xor    %r15d,%r12d
   35635:	44 03 7f 0c          	add    0xc(%rdi),%r15d
   35639:	44 01 e0             	add    %r12d,%eax
   3563c:	03 47 08             	add    0x8(%rdi),%eax
   3563f:	45 89 ec             	mov    %r13d,%r12d
   35642:	01 c5                	add    %eax,%ebp
   35644:	44 89 e8             	mov    %r13d,%eax
   35647:	45 21 dc             	and    %r11d,%r12d
   3564a:	44 01 c5             	add    %r8d,%ebp
   3564d:	45 89 e8             	mov    %r13d,%r8d
   35650:	c1 c8 0d             	ror    $0xd,%eax
   35653:	41 c1 c8 02          	ror    $0x2,%r8d
   35657:	01 e9                	add    %ebp,%ecx
   35659:	44 31 c0             	xor    %r8d,%eax
   3565c:	45 89 e8             	mov    %r13d,%r8d
   3565f:	41 c1 c0 0a          	rol    $0xa,%r8d
   35663:	44 31 c0             	xor    %r8d,%eax
   35666:	45 89 e8             	mov    %r13d,%r8d
   35669:	45 09 d8             	or     %r11d,%r8d
   3566c:	41 21 d8             	and    %ebx,%r8d
   3566f:	45 09 e0             	or     %r12d,%r8d
   35672:	41 01 c0             	add    %eax,%r8d
   35675:	89 c8                	mov    %ecx,%eax
   35677:	41 01 e8             	add    %ebp,%r8d
   3567a:	89 f5                	mov    %esi,%ebp
   3567c:	c1 c8 0b             	ror    $0xb,%eax
   3567f:	44 31 f5             	xor    %r14d,%ebp
   35682:	45 89 c4             	mov    %r8d,%r12d
   35685:	21 cd                	and    %ecx,%ebp
   35687:	44 31 f5             	xor    %r14d,%ebp

000000000003568a <instr.bb_1863e>:
   3568a:	41 01 ef             	add    %ebp,%r15d
   3568d:	89 cd                	mov    %ecx,%ebp
   3568f:	c1 cd 06             	ror    $0x6,%ebp
   35692:	31 e8                	xor    %ebp,%eax
   35694:	89 cd                	mov    %ecx,%ebp
   35696:	c1 c5 07             	rol    $0x7,%ebp
   35699:	45 21 ec             	and    %r13d,%r12d
   3569c:	44 03 77 10          	add    0x10(%rdi),%r14d
   356a0:	31 e8                	xor    %ebp,%eax
   356a2:	44 89 c5             	mov    %r8d,%ebp
   356a5:	44 01 f8             	add    %r15d,%eax
   356a8:	c1 cd 0d             	ror    $0xd,%ebp
   356ab:	01 c2                	add    %eax,%edx
   356ad:	44 89 c0             	mov    %r8d,%eax
   356b0:	c1 c8 02             	ror    $0x2,%eax
   356b3:	01 d3                	add    %edx,%ebx
   356b5:	31 c5                	xor    %eax,%ebp
   356b7:	44 89 c0             	mov    %r8d,%eax
   356ba:	c1 c0 0a             	rol    $0xa,%eax
   356bd:	31 c5                	xor    %eax,%ebp
   356bf:	44 89 c0             	mov    %r8d,%eax
   356c2:	44 09 e8             	or     %r13d,%eax
   356c5:	44 21 d8             	and    %r11d,%eax
   356c8:	44 09 e0             	or     %r12d,%eax
   356cb:	45 89 c4             	mov    %r8d,%r12d
   356ce:	01 e8                	add    %ebp,%eax
   356d0:	89 cd                	mov    %ecx,%ebp
   356d2:	31 f5                	xor    %esi,%ebp
   356d4:	01 d0                	add    %edx,%eax

00000000000356d6 <instr.bb_1868a>:
   356d6:	89 da                	mov    %ebx,%edx
   356d8:	21 dd                	and    %ebx,%ebp
   356da:	c1 ca 0b             	ror    $0xb,%edx
   356dd:	31 f5                	xor    %esi,%ebp
   356df:	41 01 ee             	add    %ebp,%r14d
   356e2:	89 dd                	mov    %ebx,%ebp
   356e4:	c1 cd 06             	ror    $0x6,%ebp
   356e7:	31 ea                	xor    %ebp,%edx
   356e9:	89 dd                	mov    %ebx,%ebp
   356eb:	c1 c5 07             	rol    $0x7,%ebp
   356ee:	31 ea                	xor    %ebp,%edx
   356f0:	89 c5                	mov    %eax,%ebp
   356f2:	44 01 f2             	add    %r14d,%edx
   356f5:	c1 cd 0d             	ror    $0xd,%ebp
   356f8:	41 01 d1             	add    %edx,%r9d
   356fb:	89 c2                	mov    %eax,%edx
   356fd:	c1 ca 02             	ror    $0x2,%edx
   35700:	45 01 cb             	add    %r9d,%r11d
   35703:	31 d5                	xor    %edx,%ebp
   35705:	89 c2                	mov    %eax,%edx
   35707:	c1 c2 0a             	rol    $0xa,%edx
   3570a:	41 21 c4             	and    %eax,%r12d
   3570d:	03 77 14             	add    0x14(%rdi),%esi
   35710:	31 d5                	xor    %edx,%ebp
   35712:	44 89 c2             	mov    %r8d,%edx
   35715:	09 c2                	or     %eax,%edx
   35717:	44 21 ea             	and    %r13d,%edx
   3571a:	44 09 e2             	or     %r12d,%edx
   3571d:	01 ea                	add    %ebp,%edx
   3571f:	44 89 dd             	mov    %r11d,%ebp
   35722:	44 01 ca             	add    %r9d,%edx
   35725:	41 89 c9             	mov    %ecx,%r9d
   35728:	c1 cd 06             	ror    $0x6,%ebp
   3572b:	41 31 d9             	xor    %ebx,%r9d
   3572e:	45 21 d9             	and    %r11d,%r9d
   35731:	41 31 c9             	xor    %ecx,%r9d
   35734:	44 01 ce             	add    %r9d,%esi
   35737:	45 89 d9             	mov    %r11d,%r9d
   3573a:	41 c1 c9 0b          	ror    $0xb,%r9d
   3573e:	41 31 e9             	xor    %ebp,%r9d
   35741:	44 89 dd             	mov    %r11d,%ebp

0000000000035744 <instr.bb_186f8>:
   35744:	c1 c5 07             	rol    $0x7,%ebp
   35747:	41 31 e9             	xor    %ebp,%r9d
   3574a:	89 c5                	mov    %eax,%ebp
   3574c:	44 01 ce             	add    %r9d,%esi
   3574f:	41 89 d1             	mov    %edx,%r9d
   35752:	21 d5                	and    %edx,%ebp
   35754:	41 01 f2             	add    %esi,%r10d
   35757:	89 d6                	mov    %edx,%esi
   35759:	41 c1 c9 0d          	ror    $0xd,%r9d
   3575d:	c1 ce 02             	ror    $0x2,%esi
   35760:	45 01 d5             	add    %r10d,%r13d
   35763:	41 31 f1             	xor    %esi,%r9d
   35766:	89 d6                	mov    %edx,%esi
   35768:	c1 c6 0a             	rol    $0xa,%esi
   3576b:	41 31 f1             	xor    %esi,%r9d
   3576e:	89 c6                	mov    %eax,%esi
   35770:	09 d6                	or     %edx,%esi
   35772:	44 21 c6             	and    %r8d,%esi
   35775:	09 ee                	or     %ebp,%esi
   35777:	44 01 ce             	add    %r9d,%esi
   3577a:	45 89 e9             	mov    %r13d,%r9d
   3577d:	44 01 d6             	add    %r10d,%esi
   35780:	41 89 da             	mov    %ebx,%r10d
   35783:	45 31 da             	xor    %r11d,%r10d
   35786:	03 4f 18             	add    0x18(%rdi),%ecx
   35789:	41 c1 c9 06          	ror    $0x6,%r9d
   3578d:	45 21 ea             	and    %r13d,%r10d
   35790:	41 31 da             	xor    %ebx,%r10d
   35793:	03 5f 1c             	add    0x1c(%rdi),%ebx

0000000000035796 <instr.bb_1874a>:
   35796:	41 01 ca             	add    %ecx,%r10d
   35799:	44 89 e9             	mov    %r13d,%ecx
   3579c:	c1 c9 0b             	ror    $0xb,%ecx
   3579f:	44 31 c9             	xor    %r9d,%ecx
   357a2:	45 89 e9             	mov    %r13d,%r9d
   357a5:	41 c1 c1 07          	rol    $0x7,%r9d
   357a9:	44 31 c9             	xor    %r9d,%ecx
   357ac:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   357b1:	44 01 d1             	add    %r10d,%ecx
   357b4:	41 89 d2             	mov    %edx,%r10d
   357b7:	41 01 c9             	add    %ecx,%r9d
   357ba:	89 f1                	mov    %esi,%ecx
   357bc:	41 21 f2             	and    %esi,%r10d
   357bf:	43 8d 2c 08          	lea    (%r8,%r9,1),%ebp
   357c3:	41 89 f0             	mov    %esi,%r8d
   357c6:	c1 c9 02             	ror    $0x2,%ecx
   357c9:	41 c1 c8 0d          	ror    $0xd,%r8d
   357cd:	41 31 c8             	xor    %ecx,%r8d
   357d0:	89 f1                	mov    %esi,%ecx
   357d2:	c1 c1 0a             	rol    $0xa,%ecx
   357d5:	41 31 c8             	xor    %ecx,%r8d
   357d8:	89 d1                	mov    %edx,%ecx
   357da:	09 f1                	or     %esi,%ecx
   357dc:	21 c1                	and    %eax,%ecx
   357de:	44 09 d1             	or     %r10d,%ecx
   357e1:	44 01 c1             	add    %r8d,%ecx
   357e4:	41 89 e8             	mov    %ebp,%r8d
   357e7:	44 01 c9             	add    %r9d,%ecx
   357ea:	45 89 d9             	mov    %r11d,%r9d
   357ed:	41 c1 c8 0b          	ror    $0xb,%r8d
   357f1:	45 31 e9             	xor    %r13d,%r9d
   357f4:	41 21 e9             	and    %ebp,%r9d
   357f7:	45 31 d9             	xor    %r11d,%r9d
   357fa:	41 01 d9             	add    %ebx,%r9d
   357fd:	89 eb                	mov    %ebp,%ebx
   357ff:	c1 cb 06             	ror    $0x6,%ebx
   35802:	41 31 d8             	xor    %ebx,%r8d
   35805:	89 eb                	mov    %ebp,%ebx
   35807:	c1 c3 07             	rol    $0x7,%ebx
   3580a:	41 31 d8             	xor    %ebx,%r8d
   3580d:	89 cb                	mov    %ecx,%ebx

000000000003580f <instr.bb_187c3>:
   3580f:	44 03 5f 20          	add    0x20(%rdi),%r11d
   35813:	45 01 c8             	add    %r9d,%r8d
   35816:	44 03 44 24 14       	add    0x14(%rsp),%r8d
   3581b:	c1 cb 02             	ror    $0x2,%ebx
   3581e:	41 89 f1             	mov    %esi,%r9d
   35821:	46 8d 3c 00          	lea    (%rax,%r8,1),%r15d
   35825:	89 c8                	mov    %ecx,%eax
   35827:	41 21 c9             	and    %ecx,%r9d
   3582a:	c1 c8 0d             	ror    $0xd,%eax
   3582d:	31 d8                	xor    %ebx,%eax
   3582f:	89 cb                	mov    %ecx,%ebx
   35831:	c1 c3 0a             	rol    $0xa,%ebx
   35834:	31 d8                	xor    %ebx,%eax
   35836:	89 f3                	mov    %esi,%ebx
   35838:	09 cb                	or     %ecx,%ebx
   3583a:	21 d3                	and    %edx,%ebx
   3583c:	44 09 cb             	or     %r9d,%ebx
   3583f:	01 c3                	add    %eax,%ebx
   35841:	44 89 f8             	mov    %r15d,%eax
   35844:	44 01 c3             	add    %r8d,%ebx
   35847:	45 89 e8             	mov    %r13d,%r8d
   3584a:	c1 c8 0b             	ror    $0xb,%eax
   3584d:	41 31 e8             	xor    %ebp,%r8d
   35850:	41 89 d9             	mov    %ebx,%r9d
   35853:	45 21 f8             	and    %r15d,%r8d
   35856:	45 31 e8             	xor    %r13d,%r8d
   35859:	45 01 d8             	add    %r11d,%r8d
   3585c:	45 89 fb             	mov    %r15d,%r11d
   3585f:	41 c1 cb 06          	ror    $0x6,%r11d

0000000000035863 <instr.bb_18817>:
   35863:	44 31 d8             	xor    %r11d,%eax
   35866:	45 89 fb             	mov    %r15d,%r11d
   35869:	41 c1 c3 07          	rol    $0x7,%r11d
   3586d:	44 31 d8             	xor    %r11d,%eax
   35870:	45 8d 1c 00          	lea    (%r8,%rax,1),%r11d
   35874:	8b 44 24 18          	mov    0x18(%rsp),%eax
   35878:	41 89 c8             	mov    %ecx,%r8d
   3587b:	44 01 d8             	add    %r11d,%eax
   3587e:	41 89 db             	mov    %ebx,%r11d
   35881:	44 8d 34 02          	lea    (%rdx,%rax,1),%r14d
   35885:	89 da                	mov    %ebx,%edx
   35887:	41 c1 cb 0d          	ror    $0xd,%r11d
   3588b:	c1 ca 02             	ror    $0x2,%edx
   3588e:	44 31 da             	xor    %r11d,%edx
   35891:	41 89 db             	mov    %ebx,%r11d
   35894:	41 c1 c3 0a          	rol    $0xa,%r11d
   35898:	44 31 da             	xor    %r11d,%edx
   3589b:	41 89 cb             	mov    %ecx,%r11d
   3589e:	41 09 db             	or     %ebx,%r11d
   358a1:	41 21 f3             	and    %esi,%r11d
   358a4:	41 21 d8             	and    %ebx,%r8d
   358a7:	44 03 6f 24          	add    0x24(%rdi),%r13d
   358ab:	48 83 04 24 20       	addq   $0x20,(%rsp)
   358b0:	45 09 c3             	or     %r8d,%r11d
   358b3:	48 83 c7 20          	add    $0x20,%rdi
   358b7:	41 01 d3             	add    %edx,%r11d
   358ba:	44 89 f2             	mov    %r14d,%edx
   358bd:	41 01 c3             	add    %eax,%r11d
   358c0:	89 e8                	mov    %ebp,%eax
   358c2:	c1 ca 0b             	ror    $0xb,%edx
   358c5:	44 31 f8             	xor    %r15d,%eax
   358c8:	45 89 d8             	mov    %r11d,%r8d
   358cb:	45 21 d9             	and    %r11d,%r9d
   358ce:	44 21 f0             	and    %r14d,%eax
   358d1:	41 c1 c8 0d          	ror    $0xd,%r8d
   358d5:	31 e8                	xor    %ebp,%eax
   358d7:	41 01 c5             	add    %eax,%r13d
   358da:	44 89 f0             	mov    %r14d,%eax
   358dd:	c1 c8 06             	ror    $0x6,%eax
   358e0:	31 d0                	xor    %edx,%eax
   358e2:	44 89 f2             	mov    %r14d,%edx

00000000000358e5 <instr.bb_18899>:
   358e5:	c1 c2 07             	rol    $0x7,%edx
   358e8:	31 d0                	xor    %edx,%eax
   358ea:	44 89 da             	mov    %r11d,%edx
   358ed:	c1 ca 02             	ror    $0x2,%edx
   358f0:	41 01 c5             	add    %eax,%r13d
   358f3:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   358f7:	44 31 c2             	xor    %r8d,%edx
   358fa:	45 89 d8             	mov    %r11d,%r8d
   358fd:	41 c1 c0 0a          	rol    $0xa,%r8d
   35901:	44 01 e8             	add    %r13d,%eax
   35904:	44 31 c2             	xor    %r8d,%edx
   35907:	41 89 d8             	mov    %ebx,%r8d
   3590a:	01 c6                	add    %eax,%esi
   3590c:	45 09 d8             	or     %r11d,%r8d
   3590f:	41 21 c8             	and    %ecx,%r8d
   35912:	45 09 c8             	or     %r9d,%r8d
   35915:	4c 8b 0c 24          	mov    (%rsp),%r9
   35919:	44 01 c2             	add    %r8d,%edx
   3591c:	44 8d 2c 10          	lea    (%rax,%rdx,1),%r13d
   35920:	48 39 7c 24 20       	cmp    %rdi,0x20(%rsp)
   35925:	0f 84 ed 2f fe ff    	je     18918 <mbedtls_internal_sha256_process+0x468>

000000000003592b <instr.bb_188db>:
   3592b:	4c 89 c8             	mov    %r9,%rax
   3592e:	45 8b 01             	mov    (%r9),%r8d
   35931:	41 8b 51 04          	mov    0x4(%r9),%edx
   35935:	44 8b 60 10          	mov    0x10(%rax),%r12d
   35939:	44 8b 50 0c          	mov    0xc(%rax),%r10d
   3593d:	45 8b 49 08          	mov    0x8(%r9),%r9d
   35941:	44 89 64 24 10       	mov    %r12d,0x10(%rsp)
   35946:	44 8b 60 14          	mov    0x14(%rax),%r12d
   3594a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
   3594f:	44 8b 60 18          	mov    0x18(%rax),%r12d
   35953:	8b 40 1c             	mov    0x1c(%rax),%eax
   35956:	44 89 64 24 18       	mov    %r12d,0x18(%rsp)
   3595b:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   3595f:	e9 ac fc ff ff       	jmpq   35610 <instr.bb_185c4>
   35964:	90                   	nop
   35965:	90                   	nop
   35966:	90                   	nop
   35967:	90                   	nop
   35968:	90                   	nop
   35969:	90                   	nop
   3596a:	90                   	nop
   3596b:	90                   	nop
   3596c:	90                   	nop
   3596d:	90                   	nop
   3596e:	90                   	nop
   3596f:	90                   	nop

0000000000035970 <mbedtls_sha256_update.part.0.instr.bb_18ff0>:
   35970:	31 c9                	xor    %ecx,%ecx
   35972:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   35979:	c0 
   3597a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   35981:	c0 
   35982:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   35989:	c0 
   3598a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   35991:	c0 
   35992:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   35999:	c0 
   3599a:	41 56                	push   %r14
   3599c:	41 55                	push   %r13
   3599e:	49 89 d5             	mov    %rdx,%r13
   359a1:	ba 40 00 00 00       	mov    $0x40,%edx
   359a6:	41 54                	push   %r12
   359a8:	49 89 fc             	mov    %rdi,%r12
   359ab:	55                   	push   %rbp
   359ac:	48 89 f5             	mov    %rsi,%rbp
   359af:	53                   	push   %rbx
   359b0:	8b 07                	mov    (%rdi),%eax
   359b2:	41 89 c6             	mov    %eax,%r14d
   359b5:	41 83 e6 3f          	and    $0x3f,%r14d
   359b9:	44 29 f2             	sub    %r14d,%edx
   359bc:	44 01 e8             	add    %r13d,%eax
   359bf:	89 07                	mov    %eax,(%rdi)
   359c1:	89 d3                	mov    %edx,%ebx
   359c3:	0f 83 04 00 00 00    	jae    359cd <instr.bb_1901f>

00000000000359c9 <instr.bb_1901b>:
   359c9:	83 47 04 01          	addl   $0x1,0x4(%rdi)

00000000000359cd <instr.bb_1901f>:
   359cd:	45 85 f6             	test   %r14d,%r14d
   359d0:	0f 84 09 00 00 00    	je     359df <instr.bb_19029>

00000000000359d6 <instr.bb_19024>:
   359d6:	4c 39 eb             	cmp    %r13,%rbx
   359d9:	0f 86 b3 36 fe ff    	jbe    19092 <mbedtls_sha256_update.part.0+0xa2>

00000000000359df <instr.bb_19029>:
   359df:	31 db                	xor    %ebx,%ebx
   359e1:	49 83 fd 3f          	cmp    $0x3f,%r13
   359e5:	0f 86 b3 37 fe ff    	jbe    1919e <mbedtls_sha256_update.part.0+0x1ae>

00000000000359eb <instr.bb_19035>:
   359eb:	90                   	nop
   359ec:	90                   	nop
   359ed:	90                   	nop
   359ee:	90                   	nop
   359ef:	90                   	nop
   359f0:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   359f5:	4c 89 e7             	mov    %r12,%rdi
   359f8:	e8 73 fa ff ff       	callq  35470 <mbedtls_internal_sha256_process.instr.bb_184b0>
   359fd:	e9 43 36 fe ff       	jmpq   19045 <mbedtls_sha256_update.part.0+0x55>
   35a02:	90                   	nop
   35a03:	90                   	nop
   35a04:	90                   	nop
   35a05:	90                   	nop
   35a06:	90                   	nop
   35a07:	90                   	nop
   35a08:	90                   	nop
   35a09:	90                   	nop
   35a0a:	90                   	nop
   35a0b:	90                   	nop
   35a0c:	90                   	nop
   35a0d:	90                   	nop
   35a0e:	90                   	nop
   35a0f:	90                   	nop

0000000000035a10 <mbedtls_sha256_update.instr.bb_191e0>:
   35a10:	31 c9                	xor    %ecx,%ecx
   35a12:	f3 0f 1e fa          	endbr64 
   35a16:	48 85 d2             	test   %rdx,%rdx
   35a19:	0f 84 d1 37 fe ff    	je     191f0 <mbedtls_sha256_update+0x10>

0000000000035a1f <instr.bb_191e9>:
   35a1f:	e9 4c ff ff ff       	jmpq   35970 <mbedtls_sha256_update.part.0.instr.bb_18ff0>
   35a24:	90                   	nop
   35a25:	90                   	nop
   35a26:	90                   	nop
   35a27:	90                   	nop
   35a28:	90                   	nop
   35a29:	90                   	nop
   35a2a:	90                   	nop
   35a2b:	90                   	nop
   35a2c:	90                   	nop
   35a2d:	90                   	nop
   35a2e:	90                   	nop
   35a2f:	90                   	nop

0000000000035a30 <mbedtls_sha256_finish.instr.bb_19200>:
   35a30:	31 c9                	xor    %ecx,%ecx
   35a32:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   35a39:	c0 
   35a3a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   35a41:	c0 
   35a42:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   35a49:	c0 
   35a4a:	f3 0f 1e fa          	endbr64 
   35a4e:	41 54                	push   %r12
   35a50:	4c 8d 67 28          	lea    0x28(%rdi),%r12
   35a54:	55                   	push   %rbp
   35a55:	48 89 f5             	mov    %rsi,%rbp
   35a58:	53                   	push   %rbx
   35a59:	8b 07                	mov    (%rdi),%eax
   35a5b:	48 89 fb             	mov    %rdi,%rbx
   35a5e:	83 e0 3f             	and    $0x3f,%eax
   35a61:	8d 48 01             	lea    0x1(%rax),%ecx
   35a64:	c6 44 07 28 80       	movb   $0x80,0x28(%rdi,%rax,1)
   35a69:	89 c8                	mov    %ecx,%eax
   35a6b:	4c 01 e0             	add    %r12,%rax
   35a6e:	83 f9 38             	cmp    $0x38,%ecx
   35a71:	0f 87 09 38 fe ff    	ja     19280 <mbedtls_sha256_finish+0x80>

0000000000035a77 <instr.bb_19229>:
   35a77:	ba 38 00 00 00       	mov    $0x38,%edx
   35a7c:	31 ff                	xor    %edi,%edi
   35a7e:	29 ca                	sub    %ecx,%edx
   35a80:	83 fa 08             	cmp    $0x8,%edx
   35a83:	0f 82 27 38 fe ff    	jb     192b0 <mbedtls_sha256_finish+0xb0>

0000000000035a89 <instr.bb_19237>:
   35a89:	89 d1                	mov    %edx,%ecx
   35a8b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   35a92:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   35a99:	00 00 
   35a9b:	48 8d 48 08          	lea    0x8(%rax),%rcx
   35a9f:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   35aa3:	48 29 c8             	sub    %rcx,%rax
   35aa6:	01 c2                	add    %eax,%edx
   35aa8:	83 e2 f8             	and    $0xfffffff8,%edx
   35aab:	83 fa 08             	cmp    $0x8,%edx
   35aae:	0f 82 39 38 fe ff    	jb     192ed <mbedtls_sha256_finish+0xed>

0000000000035ab4 <instr.bb_19262>:
   35ab4:	83 e2 f8             	and    $0xfffffff8,%edx
   35ab7:	31 c0                	xor    %eax,%eax

0000000000035ab9 <instr.bb_19267>:
   35ab9:	89 c6                	mov    %eax,%esi
   35abb:	83 c0 08             	add    $0x8,%eax
   35abe:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   35ac2:	39 d0                	cmp    %edx,%eax
   35ac4:	0f 82 ef ff ff ff    	jb     35ab9 <instr.bb_19267>

0000000000035aca <instr.bb_19274>:
   35aca:	e9 1e 38 fe ff       	jmpq   192ed <mbedtls_sha256_finish+0xed>
   35acf:	90                   	nop

0000000000035ad0 <.instr.bb_1ab88>:
   35ad0:	31 c9                	xor    %ecx,%ecx
   35ad2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   35ad9:	c0 
   35ada:	f3 0f 1e fa          	endbr64 
   35ade:	48 83 ec 08          	sub    $0x8,%rsp
   35ae2:	48 83 c4 08          	add    $0x8,%rsp
   35ae6:	c3                   	retq   
   35ae7:	90                   	nop
   35ae8:	90                   	nop
   35ae9:	90                   	nop
   35aea:	90                   	nop
   35aeb:	90                   	nop
   35aec:	90                   	nop
   35aed:	90                   	nop
   35aee:	90                   	nop
   35aef:	90                   	nop
	...
   35b30:	19 65 fd             	sbb    %esp,-0x3(%rbp)
   35b33:	ff                   	(bad)  
   35b34:	ff                   	(bad)  
   35b35:	ff                   	(bad)  
   35b36:	ff                   	(bad)  
   35b37:	ff 70 1d             	pushq  0x1d(%rax)
   35b3a:	00 00                	add    %al,(%rax)
   35b3c:	00 00                	add    %al,(%rax)
   35b3e:	00 00                	add    %al,(%rax)
   35b40:	1c 65                	sbb    $0x65,%al
   35b42:	fd                   	std    
   35b43:	ff                   	(bad)  
   35b44:	ff                   	(bad)  
   35b45:	ff                   	(bad)  
   35b46:	ff                   	(bad)  
   35b47:	ff                   	(bad)  
   35b48:	7a 1d                	jp     35b67 <.instr.bb_1ab88+0x97>
	...
   35b8e:	00 00                	add    %al,(%rax)
   35b90:	3b 64 fd ff          	cmp    -0x1(%rbp,%rdi,8),%esp
   35b94:	ff                   	(bad)  
   35b95:	ff                   	(bad)  
   35b96:	ff                   	(bad)  
   35b97:	ff 88 1c 00 00 00    	decl   0x1c(%rax)
	...
   35bad:	00 00                	add    %al,(%rax)
   35baf:	00 c4                	add    %al,%ah
   35bb1:	64 fd                	fs std 
   35bb3:	ff                   	(bad)  
   35bb4:	ff                   	(bad)  
   35bb5:	ff                   	(bad)  
   35bb6:	ff                   	(bad)  
   35bb7:	ff 02                	incl   (%rdx)
   35bb9:	1d 00 00 00 00       	sbb    $0x0,%eax
	...
   35bde:	00 00                	add    %al,(%rax)
   35be0:	d0 64 fd ff          	shlb   -0x1(%rbp,%rdi,8)
   35be4:	ff                   	(bad)  
   35be5:	ff                   	(bad)  
   35be6:	ff                   	(bad)  
   35be7:	ff 1d 1d 00 00 00    	lcall  *0x1d(%rip)        # 35c0a <.instr.bb_1ab88+0x13a>
	...
   35c51:	10 fd                	adc    %bh,%ch
   35c53:	ff                   	(bad)  
   35c54:	ff                   	(bad)  
   35c55:	ff                   	(bad)  
   35c56:	ff                   	(bad)  
   35c57:	ff 00                	incl   (%rax)
   35c59:	80 02 00             	addb   $0x0,(%rdx)
   35c5c:	00 00                	add    %al,(%rax)
   35c5e:	00 00                	add    %al,(%rax)
   35c60:	00 b0 ff ff ff ff    	add    %dh,-0x1(%rax)
   35c66:	ff                   	(bad)  
   35c67:	ff 00                	incl   (%rax)
   35c69:	50                   	push   %rax
	...
   35c7e:	00 00                	add    %al,(%rax)
   35c80:	20 f0                	and    %dh,%al
   35c82:	ff                   	(bad)  
   35c83:	ff                   	(bad)  
   35c84:	ff                   	(bad)  
   35c85:	ff                   	(bad)  
   35c86:	ff                   	(bad)  
   35c87:	ff 20                	jmpq   *(%rax)
   35c89:	00 00                	add    %al,(%rax)
   35c8b:	00 01                	add    %al,(%rcx)
	...
