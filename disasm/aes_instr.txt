
examples/mbedtls/aes/instr-fast-aesrng/app.instr:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	f3 0f 1e fa          	endbr64 
    3004:	48 83 ec 08          	sub    $0x8,%rsp
    3008:	48 8b 05 c9 cf 02 00 	mov    0x2cfc9(%rip),%rax        # 2ffd8 <__gmon_start__>
    300f:	48 85 c0             	test   %rax,%rax
    3012:	74 02                	je     3016 <_init+0x16>
    3014:	ff d0                	callq  *%rax
    3016:	48 83 c4 08          	add    $0x8,%rsp
    301a:	c3                   	retq   

Disassembly of section .plt:

0000000000003020 <.plt>:
    3020:	ff 35 c2 ce 02 00    	pushq  0x2cec2(%rip)        # 2fee8 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	f2 ff 25 c3 ce 02 00 	bnd jmpq *0x2cec3(%rip)        # 2fef0 <_GLOBAL_OFFSET_TABLE_+0x10>
    302d:	0f 1f 00             	nopl   (%rax)
    3030:	f3 0f 1e fa          	endbr64 
    3034:	68 00 00 00 00       	pushq  $0x0
    3039:	f2 e9 e1 ff ff ff    	bnd jmpq 3020 <.plt>
    303f:	90                   	nop
    3040:	f3 0f 1e fa          	endbr64 
    3044:	68 01 00 00 00       	pushq  $0x1
    3049:	f2 e9 d1 ff ff ff    	bnd jmpq 3020 <.plt>
    304f:	90                   	nop
    3050:	f3 0f 1e fa          	endbr64 
    3054:	68 02 00 00 00       	pushq  $0x2
    3059:	f2 e9 c1 ff ff ff    	bnd jmpq 3020 <.plt>
    305f:	90                   	nop
    3060:	f3 0f 1e fa          	endbr64 
    3064:	68 03 00 00 00       	pushq  $0x3
    3069:	f2 e9 b1 ff ff ff    	bnd jmpq 3020 <.plt>
    306f:	90                   	nop
    3070:	f3 0f 1e fa          	endbr64 
    3074:	68 04 00 00 00       	pushq  $0x4
    3079:	f2 e9 a1 ff ff ff    	bnd jmpq 3020 <.plt>
    307f:	90                   	nop
    3080:	f3 0f 1e fa          	endbr64 
    3084:	68 05 00 00 00       	pushq  $0x5
    3089:	f2 e9 91 ff ff ff    	bnd jmpq 3020 <.plt>
    308f:	90                   	nop
    3090:	f3 0f 1e fa          	endbr64 
    3094:	68 06 00 00 00       	pushq  $0x6
    3099:	f2 e9 81 ff ff ff    	bnd jmpq 3020 <.plt>
    309f:	90                   	nop
    30a0:	f3 0f 1e fa          	endbr64 
    30a4:	68 07 00 00 00       	pushq  $0x7
    30a9:	f2 e9 71 ff ff ff    	bnd jmpq 3020 <.plt>
    30af:	90                   	nop
    30b0:	f3 0f 1e fa          	endbr64 
    30b4:	68 08 00 00 00       	pushq  $0x8
    30b9:	f2 e9 61 ff ff ff    	bnd jmpq 3020 <.plt>
    30bf:	90                   	nop
    30c0:	f3 0f 1e fa          	endbr64 
    30c4:	68 09 00 00 00       	pushq  $0x9
    30c9:	f2 e9 51 ff ff ff    	bnd jmpq 3020 <.plt>
    30cf:	90                   	nop
    30d0:	f3 0f 1e fa          	endbr64 
    30d4:	68 0a 00 00 00       	pushq  $0xa
    30d9:	f2 e9 41 ff ff ff    	bnd jmpq 3020 <.plt>
    30df:	90                   	nop
    30e0:	f3 0f 1e fa          	endbr64 
    30e4:	68 0b 00 00 00       	pushq  $0xb
    30e9:	f2 e9 31 ff ff ff    	bnd jmpq 3020 <.plt>
    30ef:	90                   	nop
    30f0:	f3 0f 1e fa          	endbr64 
    30f4:	68 0c 00 00 00       	pushq  $0xc
    30f9:	f2 e9 21 ff ff ff    	bnd jmpq 3020 <.plt>
    30ff:	90                   	nop
    3100:	f3 0f 1e fa          	endbr64 
    3104:	68 0d 00 00 00       	pushq  $0xd
    3109:	f2 e9 11 ff ff ff    	bnd jmpq 3020 <.plt>
    310f:	90                   	nop
    3110:	f3 0f 1e fa          	endbr64 
    3114:	68 0e 00 00 00       	pushq  $0xe
    3119:	f2 e9 01 ff ff ff    	bnd jmpq 3020 <.plt>
    311f:	90                   	nop
    3120:	f3 0f 1e fa          	endbr64 
    3124:	68 0f 00 00 00       	pushq  $0xf
    3129:	f2 e9 f1 fe ff ff    	bnd jmpq 3020 <.plt>
    312f:	90                   	nop
    3130:	f3 0f 1e fa          	endbr64 
    3134:	68 10 00 00 00       	pushq  $0x10
    3139:	f2 e9 e1 fe ff ff    	bnd jmpq 3020 <.plt>
    313f:	90                   	nop
    3140:	f3 0f 1e fa          	endbr64 
    3144:	68 11 00 00 00       	pushq  $0x11
    3149:	f2 e9 d1 fe ff ff    	bnd jmpq 3020 <.plt>
    314f:	90                   	nop
    3150:	f3 0f 1e fa          	endbr64 
    3154:	68 12 00 00 00       	pushq  $0x12
    3159:	f2 e9 c1 fe ff ff    	bnd jmpq 3020 <.plt>
    315f:	90                   	nop
    3160:	f3 0f 1e fa          	endbr64 
    3164:	68 13 00 00 00       	pushq  $0x13
    3169:	f2 e9 b1 fe ff ff    	bnd jmpq 3020 <.plt>
    316f:	90                   	nop
    3170:	f3 0f 1e fa          	endbr64 
    3174:	68 14 00 00 00       	pushq  $0x14
    3179:	f2 e9 a1 fe ff ff    	bnd jmpq 3020 <.plt>
    317f:	90                   	nop
    3180:	f3 0f 1e fa          	endbr64 
    3184:	68 15 00 00 00       	pushq  $0x15
    3189:	f2 e9 91 fe ff ff    	bnd jmpq 3020 <.plt>
    318f:	90                   	nop
    3190:	f3 0f 1e fa          	endbr64 
    3194:	68 16 00 00 00       	pushq  $0x16
    3199:	f2 e9 81 fe ff ff    	bnd jmpq 3020 <.plt>
    319f:	90                   	nop
    31a0:	f3 0f 1e fa          	endbr64 
    31a4:	68 17 00 00 00       	pushq  $0x17
    31a9:	f2 e9 71 fe ff ff    	bnd jmpq 3020 <.plt>
    31af:	90                   	nop
    31b0:	f3 0f 1e fa          	endbr64 
    31b4:	68 18 00 00 00       	pushq  $0x18
    31b9:	f2 e9 61 fe ff ff    	bnd jmpq 3020 <.plt>
    31bf:	90                   	nop
    31c0:	f3 0f 1e fa          	endbr64 
    31c4:	68 19 00 00 00       	pushq  $0x19
    31c9:	f2 e9 51 fe ff ff    	bnd jmpq 3020 <.plt>
    31cf:	90                   	nop

Disassembly of section .plt.got:

00000000000031d0 <__cxa_finalize@plt>:
    31d0:	f3 0f 1e fa          	endbr64 
    31d4:	f2 ff 25 0d ce 02 00 	bnd jmpq *0x2ce0d(%rip)        # 2ffe8 <__cxa_finalize@GLIBC_2.2.5>
    31db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000031e0 <free@plt>:
    31e0:	f3 0f 1e fa          	endbr64 
    31e4:	f2 ff 25 0d cd 02 00 	bnd jmpq *0x2cd0d(%rip)        # 2fef8 <free@GLIBC_2.2.5>
    31eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000031f0 <putchar@plt>:
    31f0:	f3 0f 1e fa          	endbr64 
    31f4:	f2 ff 25 05 cd 02 00 	bnd jmpq *0x2cd05(%rip)        # 2ff00 <putchar@GLIBC_2.2.5>
    31fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003200 <puts@plt>:
    3200:	f3 0f 1e fa          	endbr64 
    3204:	f2 ff 25 fd cc 02 00 	bnd jmpq *0x2ccfd(%rip)        # 2ff08 <puts@GLIBC_2.2.5>
    320b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003210 <ferror@plt>:
    3210:	f3 0f 1e fa          	endbr64 
    3214:	f2 ff 25 f5 cc 02 00 	bnd jmpq *0x2ccf5(%rip)        # 2ff10 <ferror@GLIBC_2.2.5>
    321b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003220 <fread@plt>:
    3220:	f3 0f 1e fa          	endbr64 
    3224:	f2 ff 25 ed cc 02 00 	bnd jmpq *0x2cced(%rip)        # 2ff18 <fread@GLIBC_2.2.5>
    322b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003230 <clock_gettime@plt>:
    3230:	f3 0f 1e fa          	endbr64 
    3234:	f2 ff 25 e5 cc 02 00 	bnd jmpq *0x2cce5(%rip)        # 2ff20 <clock_gettime@GLIBC_2.17>
    323b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003240 <fclose@plt>:
    3240:	f3 0f 1e fa          	endbr64 
    3244:	f2 ff 25 dd cc 02 00 	bnd jmpq *0x2ccdd(%rip)        # 2ff28 <fclose@GLIBC_2.2.5>
    324b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003250 <strlen@plt>:
    3250:	f3 0f 1e fa          	endbr64 
    3254:	f2 ff 25 d5 cc 02 00 	bnd jmpq *0x2ccd5(%rip)        # 2ff30 <strlen@GLIBC_2.2.5>
    325b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003260 <__stack_chk_fail@plt>:
    3260:	f3 0f 1e fa          	endbr64 
    3264:	f2 ff 25 cd cc 02 00 	bnd jmpq *0x2cccd(%rip)        # 2ff38 <__stack_chk_fail@GLIBC_2.4>
    326b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003270 <setbuf@plt>:
    3270:	f3 0f 1e fa          	endbr64 
    3274:	f2 ff 25 c5 cc 02 00 	bnd jmpq *0x2ccc5(%rip)        # 2ff40 <setbuf@GLIBC_2.2.5>
    327b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003280 <gmtime_r@plt>:
    3280:	f3 0f 1e fa          	endbr64 
    3284:	f2 ff 25 bd cc 02 00 	bnd jmpq *0x2ccbd(%rip)        # 2ff48 <gmtime_r@GLIBC_2.2.5>
    328b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003290 <memset@plt>:
    3290:	f3 0f 1e fa          	endbr64 
    3294:	f2 ff 25 b5 cc 02 00 	bnd jmpq *0x2ccb5(%rip)        # 2ff50 <memset@GLIBC_2.2.5>
    329b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032a0 <memcmp@plt>:
    32a0:	f3 0f 1e fa          	endbr64 
    32a4:	f2 ff 25 ad cc 02 00 	bnd jmpq *0x2ccad(%rip)        # 2ff58 <memcmp@GLIBC_2.2.5>
    32ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032b0 <fgets@plt>:
    32b0:	f3 0f 1e fa          	endbr64 
    32b4:	f2 ff 25 a5 cc 02 00 	bnd jmpq *0x2cca5(%rip)        # 2ff60 <fgets@GLIBC_2.2.5>
    32bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032c0 <calloc@plt>:
    32c0:	f3 0f 1e fa          	endbr64 
    32c4:	f2 ff 25 9d cc 02 00 	bnd jmpq *0x2cc9d(%rip)        # 2ff68 <calloc@GLIBC_2.2.5>
    32cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032d0 <strcmp@plt>:
    32d0:	f3 0f 1e fa          	endbr64 
    32d4:	f2 ff 25 95 cc 02 00 	bnd jmpq *0x2cc95(%rip)        # 2ff70 <strcmp@GLIBC_2.2.5>
    32db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032e0 <__memcpy_chk@plt>:
    32e0:	f3 0f 1e fa          	endbr64 
    32e4:	f2 ff 25 8d cc 02 00 	bnd jmpq *0x2cc8d(%rip)        # 2ff78 <__memcpy_chk@GLIBC_2.3.4>
    32eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032f0 <fopen64@plt>:
    32f0:	f3 0f 1e fa          	endbr64 
    32f4:	f2 ff 25 85 cc 02 00 	bnd jmpq *0x2cc85(%rip)        # 2ff80 <fopen64@GLIBC_2.2.5>
    32fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003300 <strtol@plt>:
    3300:	f3 0f 1e fa          	endbr64 
    3304:	f2 ff 25 7d cc 02 00 	bnd jmpq *0x2cc7d(%rip)        # 2ff88 <strtol@GLIBC_2.2.5>
    330b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003310 <memcpy@plt>:
    3310:	f3 0f 1e fa          	endbr64 
    3314:	f2 ff 25 75 cc 02 00 	bnd jmpq *0x2cc75(%rip)        # 2ff90 <memcpy@GLIBC_2.14>
    331b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003320 <time@plt>:
    3320:	f3 0f 1e fa          	endbr64 
    3324:	f2 ff 25 6d cc 02 00 	bnd jmpq *0x2cc6d(%rip)        # 2ff98 <time@GLIBC_2.2.5>
    332b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003330 <malloc@plt>:
    3330:	f3 0f 1e fa          	endbr64 
    3334:	f2 ff 25 65 cc 02 00 	bnd jmpq *0x2cc65(%rip)        # 2ffa0 <malloc@GLIBC_2.2.5>
    333b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003340 <__printf_chk@plt>:
    3340:	f3 0f 1e fa          	endbr64 
    3344:	f2 ff 25 5d cc 02 00 	bnd jmpq *0x2cc5d(%rip)        # 2ffa8 <__printf_chk@GLIBC_2.3.4>
    334b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003350 <memmove@plt>:
    3350:	f3 0f 1e fa          	endbr64 
    3354:	f2 ff 25 55 cc 02 00 	bnd jmpq *0x2cc55(%rip)        # 2ffb0 <memmove@GLIBC_2.2.5>
    335b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003360 <__explicit_bzero_chk@plt>:
    3360:	f3 0f 1e fa          	endbr64 
    3364:	f2 ff 25 4d cc 02 00 	bnd jmpq *0x2cc4d(%rip)        # 2ffb8 <__explicit_bzero_chk@GLIBC_2.25>
    336b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003370 <fwrite@plt>:
    3370:	f3 0f 1e fa          	endbr64 
    3374:	f2 ff 25 45 cc 02 00 	bnd jmpq *0x2cc45(%rip)        # 2ffc0 <fwrite@GLIBC_2.2.5>
    337b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000003380 <mbedtls_cipher_set_padding_mode.cold>:
    3380:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    3385:	c3                   	retq   
    3386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    338d:	00 00 00 

0000000000003390 <main>:
    3390:	e9 2b 04 03 00       	jmpq   337c0 <main.instr.bb_3390>
    3395:	56                   	push   %rsi
    3396:	41 55                	push   %r13
    3398:	41 54                	push   %r12
    339a:	49 89 f4             	mov    %rsi,%r12
    339d:	53                   	push   %rbx
    339e:	89 fb                	mov    %edi,%ebx
    33a0:	bf 01 00 00 00       	mov    $0x1,%edi
    33a5:	48 83 ec 48          	sub    $0x48,%rsp
    33a9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    33b0:	00 00 
    33b2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    33b7:	31 c0                	xor    %eax,%eax
    33b9:	48 89 e6             	mov    %rsp,%rsi
    33bc:	e8 6f fe ff ff       	callq  3230 <clock_gettime@plt>
    33c1:	e9 58 04 03 00       	jmpq   3381e <instr.bb_33c1>
    33c6:	00 00                	add    %al,(%rax)
    33c8:	e9 58 04 03 00       	jmpq   33825 <instr.bb_33c8>
    33cd:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    33ce:	01 00                	add    %eax,(%rax)
    33d0:	00 e9                	add    %ch,%cl
    33d2:	58                   	pop    %rax
    33d3:	04 03                	add    $0x3,%al
    33d5:	00 02                	add    %al,(%rdx)
    33d7:	00 45 31             	add    %al,0x31(%rbp)
    33da:	ed                   	in     (%dx),%eax
    33db:	45 31 e4             	xor    %r12d,%r12d
    33de:	e8 7d 09 00 00       	callq  3d60 <mbedtls_gcm_init>
    33e3:	e9 58 04 03 00       	jmpq   33840 <instr.bb_33e3>
    33e8:	bf 01 00 00 00       	mov    $0x1,%edi
    33ed:	e8 3e fe ff ff       	callq  3230 <clock_gettime@plt>
    33f2:	e9 58 04 03 00       	jmpq   3384f <instr.bb_33f2>
    33f7:	8d 1d 23 cc 02 00    	lea    0x2cc23(%rip),%ebx        # 30020 <__TMC_END__>
    33fd:	0f 1f 00             	nopl   (%rax)
    3400:	45 85 ed             	test   %r13d,%r13d
    3403:	40 0f 94 c7          	sete   %dil
    3407:	44 09 e7             	or     %r12d,%edi
    340a:	40 0f b6 ff          	movzbl %dil,%edi
    340e:	e8 3d 04 00 00       	callq  3850 <cf_run_target>
    3413:	e9 8a 04 03 00       	jmpq   338a2 <instr.bb_3413>
    3418:	e9 8a 04 03 00       	jmpq   338a7 <instr.bb_3418>
    341d:	02 00                	add    (%rax),%al
    341f:	90                   	nop
    3420:	80 02 01             	addb   $0x1,(%rdx)
    3423:	75 09                	jne    342e <main+0x9e>
    3425:	e9 b7 04 03 00       	jmpq   338e1 <instr.bb_3425>
    342a:	39 d3                	cmp    %edx,%ebx
    342c:	75 f2                	jne    3420 <main+0x90>
    342e:	e9 bb 04 03 00       	jmpq   338ee <instr.bb_342e>
    3433:	85 ed                	test   %ebp,%ebp
    3435:	7e 31                	jle    3468 <main+0xd8>
    3437:	e9 bf 04 03 00       	jmpq   338fb <instr.bb_3437>
    343c:	45 31 e4             	xor    %r12d,%r12d
    343f:	48 8d 3d 7a ee 02 00 	lea    0x2ee7a(%rip),%rdi        # 322c0 <aes>
    3446:	45 8d 6e ff          	lea    -0x1(%r14),%r13d
    344a:	e8 11 09 00 00       	callq  3d60 <mbedtls_gcm_init>
    344f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    3454:	bf 01 00 00 00       	mov    $0x1,%edi
    3459:	e8 d2 fd ff ff       	callq  3230 <clock_gettime@plt>
    345e:	45 85 f6             	test   %r14d,%r14d
    3461:	7f 8f                	jg     33f2 <main+0x62>
    3463:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3468:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    346d:	bf 01 00 00 00       	mov    $0x1,%edi
    3472:	e8 b9 fd ff ff       	callq  3230 <clock_gettime@plt>
    3477:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    347c:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    3481:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    3488:	9b c4 20 
    348b:	48 89 f9             	mov    %rdi,%rcx
    348e:	48 2b 4c 24 08       	sub    0x8(%rsp),%rcx
    3493:	4d 89 c5             	mov    %r8,%r13
    3496:	4c 2b 2c 24          	sub    (%rsp),%r13
    349a:	48 89 c8             	mov    %rcx,%rax
    349d:	4d 69 ed 40 42 0f 00 	imul   $0xf4240,%r13,%r13
    34a4:	48 c1 f9 3f          	sar    $0x3f,%rcx
    34a8:	48 f7 ee             	imul   %rsi
    34ab:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    34b0:	48 29 f8             	sub    %rdi,%rax
    34b3:	48 c1 fa 07          	sar    $0x7,%rdx
    34b7:	48 89 c7             	mov    %rax,%rdi
    34ba:	48 29 ca             	sub    %rcx,%rdx
    34bd:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    34c2:	48 c1 ff 3f          	sar    $0x3f,%rdi
    34c6:	49 01 d5             	add    %rdx,%r13
    34c9:	48 f7 ee             	imul   %rsi
    34cc:	4c 29 c1             	sub    %r8,%rcx
    34cf:	48 69 c9 40 42 0f 00 	imul   $0xf4240,%rcx,%rcx
    34d6:	48 89 d6             	mov    %rdx,%rsi
    34d9:	48 c1 fe 07          	sar    $0x7,%rsi
    34dd:	48 29 fe             	sub    %rdi,%rsi
    34e0:	bf 0a 00 00 00       	mov    $0xa,%edi
    34e5:	4c 8d 24 31          	lea    (%rcx,%rsi,1),%r12
    34e9:	e8 02 fd ff ff       	callq  31f0 <putchar@plt>
    34ee:	41 b8 09 00 00 00    	mov    $0x9,%r8d
    34f4:	4c 89 e9             	mov    %r13,%rcx
    34f7:	ba 09 00 00 00       	mov    $0x9,%edx
    34fc:	48 8d 35 3d db 01 00 	lea    0x1db3d(%rip),%rsi        # 21040 <_IO_stdin_used+0x40>
    3503:	bf 01 00 00 00       	mov    $0x1,%edi
    3508:	66 0f ef c0          	pxor   %xmm0,%xmm0
    350c:	b8 01 00 00 00       	mov    $0x1,%eax
    3511:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    3516:	f2 0f 5e 05 9a db 01 	divsd  0x1db9a(%rip),%xmm0        # 210b8 <_IO_stdin_used+0xb8>
    351d:	00 
    351e:	e8 1d fe ff ff       	callq  3340 <__printf_chk@plt>
    3523:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3527:	41 b8 09 00 00 00    	mov    $0x9,%r8d
    352d:	4c 89 e1             	mov    %r12,%rcx
    3530:	ba 09 00 00 00       	mov    $0x9,%edx
    3535:	bf 01 00 00 00       	mov    $0x1,%edi
    353a:	b8 01 00 00 00       	mov    $0x1,%eax
    353f:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
    3544:	48 8d 35 15 db 01 00 	lea    0x1db15(%rip),%rsi        # 21060 <_IO_stdin_used+0x60>
    354b:	f2 0f 5e 05 65 db 01 	divsd  0x1db65(%rip),%xmm0        # 210b8 <_IO_stdin_used+0xb8>
    3552:	00 
    3553:	e8 e8 fd ff ff       	callq  3340 <__printf_chk@plt>
    3558:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    355d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3564:	00 00 
    3566:	75 73                	jne    35db <main+0x24b>
    3568:	48 83 c4 48          	add    $0x48,%rsp
    356c:	31 c0                	xor    %eax,%eax
    356e:	5b                   	pop    %rbx
    356f:	41 5c                	pop    %r12
    3571:	41 5d                	pop    %r13
    3573:	41 5e                	pop    %r14
    3575:	c3                   	retq   
    3576:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    357b:	31 f6                	xor    %esi,%esi
    357d:	ba 0a 00 00 00       	mov    $0xa,%edx
    3582:	e8 79 fd ff ff       	callq  3300 <strtol@plt>
    3587:	48 8d 35 85 da 01 00 	lea    0x1da85(%rip),%rsi        # 21013 <_IO_stdin_used+0x13>
    358e:	bf 01 00 00 00       	mov    $0x1,%edi
    3593:	49 89 c6             	mov    %rax,%r14
    3596:	89 c2                	mov    %eax,%edx
    3598:	31 c0                	xor    %eax,%eax
    359a:	e8 a1 fd ff ff       	callq  3340 <__printf_chk@plt>
    359f:	83 fb 02             	cmp    $0x2,%ebx
    35a2:	0f 84 94 fe ff ff    	je     343c <main+0xac>
    35a8:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    35ad:	48 8d 35 72 da 01 00 	lea    0x1da72(%rip),%rsi        # 21026 <_IO_stdin_used+0x26>
    35b4:	45 31 e4             	xor    %r12d,%r12d
    35b7:	e8 14 fd ff ff       	callq  32d0 <strcmp@plt>
    35bc:	85 c0                	test   %eax,%eax
    35be:	0f 85 7b fe ff ff    	jne    343f <main+0xaf>
    35c4:	48 8d 3d 60 da 01 00 	lea    0x1da60(%rip),%rdi        # 2102b <_IO_stdin_used+0x2b>
    35cb:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    35d1:	e8 2a fc ff ff       	callq  3200 <puts@plt>
    35d6:	e9 64 fe ff ff       	jmpq   343f <main+0xaf>
    35db:	e8 80 fc ff ff       	callq  3260 <__stack_chk_fail@plt>

00000000000035e0 <_start>:
    35e0:	f3 0f 1e fa          	endbr64 
    35e4:	31 ed                	xor    %ebp,%ebp
    35e6:	49 89 d1             	mov    %rdx,%r9
    35e9:	5e                   	pop    %rsi
    35ea:	48 89 e2             	mov    %rsp,%rdx
    35ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    35f1:	50                   	push   %rax
    35f2:	54                   	push   %rsp
    35f3:	4c 8d 05 96 d2 01 00 	lea    0x1d296(%rip),%r8        # 20890 <__libc_csu_fini>
    35fa:	48 8d 0d 1f d2 01 00 	lea    0x1d21f(%rip),%rcx        # 20820 <__libc_csu_init>
    3601:	48 8d 3d 88 fd ff ff 	lea    -0x278(%rip),%rdi        # 3390 <main>
    3608:	90                   	nop
    3609:	e9 f2 f9 02 00       	jmpq   33000 <instrument_entrypoint>
    360e:	f4                   	hlt    
    360f:	90                   	nop

0000000000003610 <deregister_tm_clones>:
    3610:	e9 fb 02 03 00       	jmpq   33910 <deregister_tm_clones.instr.bb_3610>
    3615:	e9 1f 03 03 00       	jmpq   33939 <instr.bb_362f>
    361a:	02 ca                	add    %dl,%cl
    361c:	02 00                	add    (%rax),%al
    361e:	48 39 f8             	cmp    %rdi,%rax
    3621:	74 15                	je     3638 <deregister_tm_clones+0x28>
    3623:	e9 01 03 03 00       	jmpq   33929 <instr.bb_3623>
    3628:	02 00                	add    (%rax),%al
    362a:	48 85 c0             	test   %rax,%rax
    362d:	74 09                	je     3638 <deregister_tm_clones+0x28>
    362f:	eb e4                	jmp    3615 <deregister_tm_clones+0x5>
    3631:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3638:	c3                   	retq   
    3639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003640 <register_tm_clones>:
    3640:	48 8d 3d d9 c9 02 00 	lea    0x2c9d9(%rip),%rdi        # 30020 <__TMC_END__>
    3647:	48 8d 35 d2 c9 02 00 	lea    0x2c9d2(%rip),%rsi        # 30020 <__TMC_END__>
    364e:	48 29 fe             	sub    %rdi,%rsi
    3651:	48 89 f0             	mov    %rsi,%rax
    3654:	48 c1 ee 3f          	shr    $0x3f,%rsi
    3658:	48 c1 f8 03          	sar    $0x3,%rax
    365c:	48 01 c6             	add    %rax,%rsi
    365f:	48 d1 fe             	sar    %rsi
    3662:	74 14                	je     3678 <register_tm_clones+0x38>
    3664:	48 8b 05 75 c9 02 00 	mov    0x2c975(%rip),%rax        # 2ffe0 <_ITM_registerTMCloneTable>
    366b:	48 85 c0             	test   %rax,%rax
    366e:	74 08                	je     3678 <register_tm_clones+0x38>
    3670:	ff e0                	jmpq   *%rax
    3672:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3678:	c3                   	retq   
    3679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003680 <__do_global_dtors_aux>:
    3680:	e9 bb 02 03 00       	jmpq   33940 <__do_global_dtors_aux.instr.bb_3680>
    3685:	3d 95 c9 02 00       	cmp    $0x2c995,%eax
    368a:	00 75 2b             	add    %dh,0x2b(%rbp)
    368d:	e9 d2 02 03 00       	jmpq   33964 <instr.bb_368d>
    3692:	c9                   	leaveq 
    3693:	02 00                	add    (%rax),%al
    3695:	00 48 89             	add    %cl,-0x77(%rax)
    3698:	e5 74                	in     $0x74,%eax
    369a:	0c e9                	or     $0xe9,%al
    369c:	d6                   	(bad)  
    369d:	02 03                	add    (%rbx),%al
    369f:	00 02                	add    %al,(%rdx)
    36a1:	00 e8                	add    %ch,%al
    36a3:	29 fb                	sub    %edi,%ebx
    36a5:	ff                   	(bad)  
    36a6:	ff                   	(bad)  
    36a7:	e9 de 02 03 00       	jmpq   3398a <instr.bb_36a7>
    36ac:	e9 de 02 03 00       	jmpq   3398f <instr.bb_36ac>
    36b1:	00 01                	add    %al,(%rcx)
    36b3:	5d                   	pop    %rbp
    36b4:	c3                   	retq   
    36b5:	0f 1f 00             	nopl   (%rax)
    36b8:	c3                   	retq   
    36b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036c0 <frame_dummy>:
    36c0:	f3 0f 1e fa          	endbr64 
    36c4:	e9 77 ff ff ff       	jmpq   3640 <register_tm_clones>
    36c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036d0 <classify>:
    36d0:	e9 db 02 03 00       	jmpq   339b0 <classify.instr.bb_36d0>
    36d5:	48 89 e5             	mov    %rsp,%rbp
    36d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36dc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    36df:	90                   	nop
    36e0:	5d                   	pop    %rbp
    36e1:	c3                   	retq   
    36e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    36e9:	00 00 00 00 
    36ed:	0f 1f 00             	nopl   (%rax)

00000000000036f0 <declassify>:
    36f0:	e9 fb 02 03 00       	jmpq   339f0 <declassify.instr.bb_36f0>
    36f5:	48 89 e5             	mov    %rsp,%rbp
    36f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36fc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    36ff:	90                   	nop
    3700:	5d                   	pop    %rbp
    3701:	c3                   	retq   
    3702:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3709:	00 00 00 00 
    370d:	0f 1f 00             	nopl   (%rax)

0000000000003710 <drop_taint>:
    3710:	e9 1b 03 03 00       	jmpq   33a30 <drop_taint.instr.bb_3710>
    3715:	48 89 e5             	mov    %rsp,%rbp
    3718:	90                   	nop
    3719:	5d                   	pop    %rbp
    371a:	c3                   	retq   
    371b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003720 <dump_secret>:
    3720:	e9 2b 03 03 00       	jmpq   33a50 <dump_secret.instr.bb_3720>
    3725:	57                   	push   %rdi
    3726:	49 89 ff             	mov    %rdi,%r15
    3729:	41 56                	push   %r14
    372b:	49 89 d6             	mov    %rdx,%r14
    372e:	48 63 d6             	movslq %esi,%rdx
    3731:	41 55                	push   %r13
    3733:	48 89 d7             	mov    %rdx,%rdi
    3736:	41 54                	push   %r12
    3738:	53                   	push   %rbx
    3739:	89 f3                	mov    %esi,%ebx
    373b:	48 83 ec 10          	sub    $0x10,%rsp
    373f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3744:	e8 e7 fb ff ff       	callq  3330 <malloc@plt>
    3749:	e9 9b 03 03 00       	jmpq   33ae9 <instr.bb_3749>
    374e:	49 89 c5             	mov    %rax,%r13
    3751:	e8 da fb ff ff       	callq  3330 <malloc@plt>
    3756:	e9 d1 03 03 00       	jmpq   33b2c <instr.bb_3756>
    375b:	4c 89 fe             	mov    %r15,%rsi
    375e:	4c 89 ef             	mov    %r13,%rdi
    3761:	49 89 c4             	mov    %rax,%r12
    3764:	e8 a7 fb ff ff       	callq  3310 <memcpy@plt>
    3769:	e9 d1 03 03 00       	jmpq   33b3f <instr.bb_3769>
    376e:	4c 89 e7             	mov    %r12,%rdi
    3771:	41 89 1c 24          	mov    %ebx,(%r12)
    3775:	e8 76 ff ff ff       	callq  36f0 <declassify>
    377a:	e9 d1 03 03 00       	jmpq   33b50 <instr.bb_377a>
    377f:	89 ef                	mov    %ebp,%edi
    3781:	e8 6a ff ff ff       	callq  36f0 <declassify>
    3786:	e9 d1 03 03 00       	jmpq   33b5c <instr.bb_3786>
    378b:	e9 d5 03 03 00       	jmpq   33b65 <instr.bb_378b>
    3790:	35 73 d8 01 00       	xor    $0x1d873,%eax
    3795:	bf 01 00 00 00       	mov    $0x1,%edi
    379a:	31 c0                	xor    %eax,%eax
    379c:	e8 9f fb ff ff       	callq  3340 <__printf_chk@plt>
    37a1:	e9 0a 04 03 00       	jmpq   33bb0 <instr.bb_37a1>
    37a6:	c0 7e 2e e9          	sarb   $0xe9,0x2e(%rsi)
    37aa:	0e                   	(bad)  
    37ab:	04 03                	add    $0x3,%al
    37ad:	00 5b d8             	add    %bl,-0x28(%rbx)
    37b0:	01 00                	add    %eax,(%rax)
    37b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    37b8:	e9 0b 04 03 00       	jmpq   33bc8 <instr.bb_37b8>
    37bd:	00 4c 89 f6          	add    %cl,-0xa(%rcx,%rcx,4)
    37c1:	bf 01 00 00 00       	mov    $0x1,%edi
    37c6:	31 c0                	xor    %eax,%eax
    37c8:	48 83 c3 01          	add    $0x1,%rbx
    37cc:	e8 6f fb ff ff       	callq  3340 <__printf_chk@plt>
    37d1:	e9 0b 04 03 00       	jmpq   33be1 <instr.bb_37d1>
    37d6:	e1 e9                	loope  37c1 <dump_secret+0xa1>
    37d8:	0f 04                	(bad)  
    37da:	03 00                	add    (%rax),%eax
    37dc:	e8 0f fa ff ff       	callq  31f0 <putchar@plt>
    37e1:	e9 0f 04 03 00       	jmpq   33bf5 <instr.bb_37e1>
    37e6:	f9                   	stc    
    37e7:	ff                   	(bad)  
    37e8:	ff                   	(bad)  
    37e9:	e9 0f 04 03 00       	jmpq   33bfd <instr.bb_37e9>
    37ee:	41 5c                	pop    %r12
    37f0:	41 5d                	pop    %r13
    37f2:	41 5e                	pop    %r14
    37f4:	41 5f                	pop    %r15
    37f6:	c3                   	retq   
    37f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    37fe:	00 00 

0000000000003800 <foo>:
    3800:	e9 0b 04 03 00       	jmpq   33c10 <foo.instr.bb_3800>
    3805:	e9 46 04 03 00       	jmpq   33c50 <instr.bb_3826>
    380a:	ec                   	in     (%dx),%al
    380b:	10 bf 04 00 00 00    	adc    %bh,0x4(%rdi)
    3811:	e8 1a fb ff ff       	callq  3330 <malloc@plt>
    3816:	e9 25 04 03 00       	jmpq   33c40 <instr.bb_3816>
    381b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    381e:	48 89 c7             	mov    %rax,%rdi
    3821:	e8 ba f9 ff ff       	callq  31e0 <free@plt>
    3826:	eb dd                	jmp    3805 <foo+0x5>
    3828:	c3                   	retq   
    3829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003830 <cf_init_target>:
    3830:	f3 0f 1e fa          	endbr64 
    3834:	48 83 ec 08          	sub    $0x8,%rsp
    3838:	48 8d 3d 81 ea 02 00 	lea    0x2ea81(%rip),%rdi        # 322c0 <aes>
    383f:	e8 1c 05 00 00       	callq  3d60 <mbedtls_gcm_init>
    3844:	48 83 c4 08          	add    $0x8,%rsp
    3848:	c3                   	retq   
    3849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003850 <cf_run_target>:
    3850:	e9 0b 04 03 00       	jmpq   33c60 <cf_run_target.instr.bb_3850>
    3855:	55                   	push   %rbp
    3856:	be 10 00 00 00       	mov    $0x10,%esi
    385b:	41 54                	push   %r12
    385d:	53                   	push   %rbx
    385e:	89 fb                	mov    %edi,%ebx
    3860:	48 8d 3d c9 c7 02 00 	lea    0x2c7c9(%rip),%rdi        # 30030 <key>
    3867:	e8 64 fe ff ff       	callq  36d0 <classify>
    386c:	e9 2f 04 03 00       	jmpq   33ca0 <instr.bb_386c>
    3871:	48 8d 3d 98 c7 02 00 	lea    0x2c798(%rip),%rdi        # 30010 <m>
    3878:	e8 53 fe ff ff       	callq  36d0 <classify>
    387d:	e9 2f 04 03 00       	jmpq   33cb1 <instr.bb_387d>
    3882:	48 8d 15 a7 c7 02 00 	lea    0x2c7a7(%rip),%rdx        # 30030 <key>
    3889:	be 02 00 00 00       	mov    $0x2,%esi
    388e:	48 8d 3d 2b ea 02 00 	lea    0x2ea2b(%rip),%rdi        # 322c0 <aes>
    3895:	e8 06 05 00 00       	callq  3da0 <mbedtls_gcm_setkey>
    389a:	e9 5e 04 03 00       	jmpq   33cfd <instr.bb_389a>
    389f:	00 00                	add    %al,(%rax)
    38a1:	00 e9                	add    %ch,%cl
    38a3:	5e                   	pop    %rsi
    38a4:	04 03                	add    $0x3,%al
    38a6:	00 e9                	add    %ch,%cl
    38a8:	3c 05                	cmp    $0x5,%al
    38aa:	03 00                	add    (%rax),%eax
    38ac:	e9 94 04 03 00       	jmpq   33d45 <instr.bb_38ac>
    38b1:	49 89 c4             	mov    %rax,%r12
    38b4:	e8 77 fa ff ff       	callq  3330 <malloc@plt>
    38b9:	e9 ca 04 03 00       	jmpq   33d88 <instr.bb_38b9>
    38be:	31 c9                	xor    %ecx,%ecx
    38c0:	41 b8 10 00 00 00    	mov    $0x10,%r8d
    38c6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    38cb:	49 89 c5             	mov    %rax,%r13
    38ce:	ba 10 00 00 00       	mov    $0x10,%edx
    38d3:	48 8d 05 36 c7 02 00 	lea    0x2c736(%rip),%rax        # 30010 <m>
    38da:	48 c7 44 24 18 10 00 	movq   $0x10,0x18(%rsp)
    38e1:	00 00 
    38e3:	48 8d 0d 56 c7 02 00 	lea    0x2c756(%rip),%rcx        # 30040 <iv>
    38ea:	be 01 00 00 00       	mov    $0x1,%esi
    38ef:	48 8d 3d ca e9 02 00 	lea    0x2e9ca(%rip),%rdi        # 322c0 <aes>
    38f6:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    38fb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3900:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3907:	00 
    3908:	e8 53 0e 00 00       	callq  4760 <mbedtls_gcm_crypt_and_tag>
    390d:	e9 ca 04 03 00       	jmpq   33ddc <instr.bb_390d>
    3912:	c0 75 6b eb          	shlb   $0xeb,0x6b(%rbp)
    3916:	90                   	nop
    3917:	75 2f                	jne    3948 <cf_run_target+0xf8>
    3919:	e9 d2 04 03 00       	jmpq   33df0 <instr.bb_3919>
    391e:	f8                   	clc    
    391f:	ff                   	(bad)  
    3920:	ff 5b 41             	lcall  *0x41(%rbx)
    3923:	5c                   	pop    %rsp
    3924:	41 5d                	pop    %r13
    3926:	c3                   	retq   
    3927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    392e:	00 00 
    3930:	48 8d 3d 49 d7 01 00 	lea    0x1d749(%rip),%rdi        # 21080 <_IO_stdin_used+0x80>
    3937:	e8 c4 f8 ff ff       	callq  3200 <puts@plt>
    393c:	e9 61 ff ff ff       	jmpq   38a2 <cf_run_target+0x52>
    3941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3948:	e9 b3 04 03 00       	jmpq   33e00 <instr.bb_3948>
    394d:	15 52 d7 01 00       	adc    $0x1d752,%eax
    3952:	be 10 00 00 00       	mov    $0x10,%esi
    3957:	e8 c4 fd ff ff       	callq  3720 <dump_secret>
    395c:	e9 e2 04 03 00       	jmpq   33e43 <instr.bb_395c>
    3961:	00 00                	add    %al,(%rax)
    3963:	00 48 8d             	add    %cl,-0x73(%rax)
    3966:	15 44 d7 01 00       	adc    $0x1d744,%eax
    396b:	e8 b0 fd ff ff       	callq  3720 <dump_secret>
    3970:	e9 11 05 03 00       	jmpq   33e86 <instr.bb_3970>
    3975:	f8                   	clc    
    3976:	ff                   	(bad)  
    3977:	ff                   	(bad)  
    3978:	e9 11 05 03 00       	jmpq   33e8e <instr.bb_3978>
    397d:	c3                   	retq   
    397e:	66 90                	xchg   %ax,%ax
    3980:	48 8d 3d 0b d7 01 00 	lea    0x1d70b(%rip),%rdi        # 21092 <_IO_stdin_used+0x92>
    3987:	e8 74 f8 ff ff       	callq  3200 <puts@plt>
    398c:	eb 87                	jmp    3915 <cf_run_target+0xc5>
    398e:	66 90                	xchg   %ax,%ax

0000000000003990 <cf_prepare_next>:
    3990:	f3 0f 1e fa          	endbr64 
    3994:	48 8d 15 75 c6 02 00 	lea    0x2c675(%rip),%rdx        # 30010 <m>
    399b:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    399f:	90                   	nop
    39a0:	80 02 01             	addb   $0x1,(%rdx)
    39a3:	75 09                	jne    39ae <cf_prepare_next+0x1e>
    39a5:	48 83 c2 01          	add    $0x1,%rdx
    39a9:	48 39 ca             	cmp    %rcx,%rdx
    39ac:	75 f2                	jne    39a0 <cf_prepare_next+0x10>
    39ae:	c3                   	retq   
    39af:	90                   	nop

00000000000039b0 <gcm_mult>:
    39b0:	e9 eb 04 03 00       	jmpq   33ea0 <gcm_mult.instr.bb_39b0>
    39b5:	89 f4                	mov    %esi,%esp
    39b7:	55                   	push   %rbp
    39b8:	48 89 d5             	mov    %rdx,%rbp
    39bb:	53                   	push   %rbx
    39bc:	48 89 fb             	mov    %rdi,%rbx
    39bf:	bf 02 00 00 00       	mov    $0x2,%edi
    39c4:	48 83 ec 28          	sub    $0x28,%rsp
    39c8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    39cf:	00 00 
    39d1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    39d6:	31 c0                	xor    %eax,%eax
    39d8:	e8 03 19 00 00       	callq  52e0 <mbedtls_aesni_has_support>
    39dd:	e9 22 05 03 00       	jmpq   33f04 <instr.bb_39dd>
    39e2:	01 00                	add    %eax,(%rax)
    39e4:	00 e9                	add    %ch,%cl
    39e6:	22 05 03 00 0f 4c    	and    0x4c0f0003(%rip),%al        # 4c0f39ef <.instr.bb_20898+0x4c0bda1f>
    39ec:	8d 15 6e e3 01 00    	lea    0x1e36e(%rip),%edx        # 21d60 <last4>
    39f2:	41 b8 0e 00 00 00    	mov    $0xe,%r8d
    39f8:	48 89 f8             	mov    %rdi,%rax
    39fb:	40 c0 ef 04          	shr    $0x4,%dil
    39ff:	83 e0 0f             	and    $0xf,%eax
    3a02:	48 8d 14 c3          	lea    (%rbx,%rax,8),%rdx
    3a06:	48 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%rax
    3a0d:	48 8b 52 60          	mov    0x60(%rdx),%rdx
    3a11:	48 89 d1             	mov    %rdx,%rcx
    3a14:	83 e1 0f             	and    $0xf,%ecx
    3a17:	49 8b 0c ca          	mov    (%r10,%rcx,8),%rcx
    3a1b:	eb 6c                	jmp    3a89 <gcm_mult+0xd9>
    3a1d:	0f 1f 00             	nopl   (%rax)
    3a20:	48 89 d1             	mov    %rdx,%rcx
    3a23:	43 0f b6 3c 04       	movzbl (%r12,%r8,1),%edi
    3a28:	49 89 c1             	mov    %rax,%r9
    3a2b:	48 89 d6             	mov    %rdx,%rsi
    3a2e:	49 c1 e1 3c          	shl    $0x3c,%r9
    3a32:	83 e1 0f             	and    $0xf,%ecx
    3a35:	48 c1 ee 04          	shr    $0x4,%rsi
    3a39:	49 8b 0c ca          	mov    (%r10,%rcx,8),%rcx
    3a3d:	41 89 fb             	mov    %edi,%r11d
    3a40:	4c 09 ce             	or     %r9,%rsi
    3a43:	49 89 c1             	mov    %rax,%r9
    3a46:	40 c0 ef 04          	shr    $0x4,%dil
    3a4a:	41 83 e3 0f          	and    $0xf,%r11d
    3a4e:	49 c1 e9 04          	shr    $0x4,%r9
    3a52:	49 89 cd             	mov    %rcx,%r13
    3a55:	49 c1 e5 30          	shl    $0x30,%r13
    3a59:	41 83 f8 0f          	cmp    $0xf,%r8d
    3a5d:	74 26                	je     3a85 <gcm_mult+0xd5>
    3a5f:	45 0f b6 db          	movzbl %r11b,%r11d
    3a63:	4a 8d 14 db          	lea    (%rbx,%r11,8),%rdx
    3a67:	48 33 72 60          	xor    0x60(%rdx),%rsi
    3a6b:	48 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%rax
    3a72:	48 89 f1             	mov    %rsi,%rcx
    3a75:	48 89 f2             	mov    %rsi,%rdx
    3a78:	83 e1 0f             	and    $0xf,%ecx
    3a7b:	4c 31 c8             	xor    %r9,%rax
    3a7e:	49 8b 0c ca          	mov    (%r10,%rcx,8),%rcx
    3a82:	4c 31 e8             	xor    %r13,%rax
    3a85:	49 83 e8 01          	sub    $0x1,%r8
    3a89:	48 89 d6             	mov    %rdx,%rsi
    3a8c:	48 89 c2             	mov    %rax,%rdx
    3a8f:	40 0f b6 ff          	movzbl %dil,%edi
    3a93:	48 c1 e8 04          	shr    $0x4,%rax
    3a97:	48 c1 ee 04          	shr    $0x4,%rsi
    3a9b:	48 c1 e2 3c          	shl    $0x3c,%rdx
    3a9f:	48 09 f2             	or     %rsi,%rdx
    3aa2:	48 8d 34 fb          	lea    (%rbx,%rdi,8),%rsi
    3aa6:	48 c1 e1 30          	shl    $0x30,%rcx
    3aaa:	48 33 8e e0 00 00 00 	xor    0xe0(%rsi),%rcx
    3ab1:	48 33 56 60          	xor    0x60(%rsi),%rdx
    3ab5:	48 31 c8             	xor    %rcx,%rax
    3ab8:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    3abc:	0f 85 5e ff ff ff    	jne    3a20 <gcm_mult+0x70>
    3ac2:	48 89 c1             	mov    %rax,%rcx
    3ac5:	0f c8                	bswap  %eax
    3ac7:	89 45 04             	mov    %eax,0x4(%rbp)
    3aca:	48 89 d0             	mov    %rdx,%rax
    3acd:	48 c1 e9 20          	shr    $0x20,%rcx
    3ad1:	48 c1 e8 20          	shr    $0x20,%rax
    3ad5:	0f ca                	bswap  %edx
    3ad7:	89 55 0c             	mov    %edx,0xc(%rbp)
    3ada:	0f c9                	bswap  %ecx
    3adc:	0f c8                	bswap  %eax
    3ade:	89 4d 00             	mov    %ecx,0x0(%rbp)
    3ae1:	89 45 08             	mov    %eax,0x8(%rbp)
    3ae4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3ae9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3af0:	00 00 
    3af2:	75 4f                	jne    3b43 <gcm_mult+0x193>
    3af4:	48 83 c4 28          	add    $0x28,%rsp
    3af8:	5b                   	pop    %rbx
    3af9:	5d                   	pop    %rbp
    3afa:	41 5c                	pop    %r12
    3afc:	41 5d                	pop    %r13
    3afe:	c3                   	retq   
    3aff:	90                   	nop
    3b00:	e9 4b 04 03 00       	jmpq   33f50 <instr.bb_3b00>
    3b05:	e9 e1 04 03 00       	jmpq   33feb <instr.bb_3b41>
    3b0a:	48 89 ef             	mov    %rbp,%rdi
    3b0d:	48 89 c2             	mov    %rax,%rdx
    3b10:	0f c8                	bswap  %eax
    3b12:	89 44 24 04          	mov    %eax,0x4(%rsp)
    3b16:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
    3b1d:	48 c1 ea 20          	shr    $0x20,%rdx
    3b21:	0f ca                	bswap  %edx
    3b23:	89 14 24             	mov    %edx,(%rsp)
    3b26:	48 89 c2             	mov    %rax,%rdx
    3b29:	0f c8                	bswap  %eax
    3b2b:	48 c1 ea 20          	shr    $0x20,%rdx
    3b2f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3b33:	0f ca                	bswap  %edx
    3b35:	89 54 24 08          	mov    %edx,0x8(%rsp)
    3b39:	48 89 e2             	mov    %rsp,%rdx
    3b3c:	e8 5f 18 00 00       	callq  53a0 <mbedtls_aesni_gcm_mult>
    3b41:	eb c2                	jmp    3b05 <gcm_mult+0x155>
    3b43:	e8 18 f7 ff ff       	callq  3260 <__stack_chk_fail@plt>
    3b48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3b4f:	00 

0000000000003b50 <mbedtls_gcm_free.part.0>:
    3b50:	55                   	push   %rbp
    3b51:	48 89 fd             	mov    %rdi,%rbp
    3b54:	e8 f7 20 00 00       	callq  5c50 <mbedtls_cipher_free>
    3b59:	48 89 ef             	mov    %rbp,%rdi
    3b5c:	be a8 01 00 00       	mov    $0x1a8,%esi
    3b61:	5d                   	pop    %rbp
    3b62:	e9 b9 16 00 00       	jmpq   5220 <mbedtls_platform_zeroize>
    3b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3b6e:	00 00 

0000000000003b70 <gcm_mask>:
    3b70:	e9 7b 04 03 00       	jmpq   33ff0 <gcm_mask.instr.bb_3b70>
    3b75:	48 8d b7 80 01 00 00 	lea    0x180(%rdi),%rsi
    3b7c:	41 56                	push   %r14
    3b7e:	49 89 d6             	mov    %rdx,%r14
    3b81:	ba 10 00 00 00       	mov    $0x10,%edx
    3b86:	41 55                	push   %r13
    3b88:	4d 89 cd             	mov    %r9,%r13
    3b8b:	41 54                	push   %r12
    3b8d:	4d 89 c4             	mov    %r8,%r12
    3b90:	55                   	push   %rbp
    3b91:	48 89 fd             	mov    %rdi,%rbp
    3b94:	53                   	push   %rbx
    3b95:	48 89 cb             	mov    %rcx,%rbx
    3b98:	4c 89 f9             	mov    %r15,%rcx
    3b9b:	48 83 ec 28          	sub    $0x28,%rsp
    3b9f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3ba6:	00 00 
    3ba8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3bad:	31 c0                	xor    %eax,%eax
    3baf:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    3bb4:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    3bbb:	00 00 
    3bbd:	e8 8e 24 00 00       	callq  6050 <mbedtls_cipher_update>
    3bc2:	e9 9f 04 03 00       	jmpq   34066 <instr.bb_3bc2>
    3bc7:	00 00                	add    %al,(%rax)
    3bc9:	00 e9                	add    %ch,%cl
    3bcb:	9f                   	lahf   
    3bcc:	04 03                	add    $0x3,%al
    3bce:	00 00                	add    %al,(%rax)
    3bd0:	4d 01 f7             	add    %r14,%r15
    3bd3:	85 d2                	test   %edx,%edx
    3bd5:	0f 84 85 00 00 00    	je     3c60 <gcm_mask+0xf0>
    3bdb:	e9 a5 04 03 00       	jmpq   34085 <instr.bb_3bdb>
    3be0:	86 fb                	xchg   %bh,%bl
    3be2:	00 00                	add    %al,(%rax)
    3be4:	00 e9                	add    %ch,%cl
    3be6:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    3be7:	04 03                	add    $0x3,%al
    3be9:	00 66 0f             	add    %ah,0xf(%rsi)
    3bec:	1f                   	(bad)  
    3bed:	44 00 00             	add    %r8b,(%rax)
    3bf0:	e9 ab 04 03 00       	jmpq   340a0 <instr.bb_3bf0>
    3bf5:	41 33 54 0c fc       	xor    -0x4(%r12,%rcx,1),%edx
    3bfa:	41 89 54 0d fc       	mov    %edx,-0x4(%r13,%rcx,1)
    3bff:	48 89 ca             	mov    %rcx,%rdx
    3c02:	48 83 c1 04          	add    $0x4,%rcx
    3c06:	48 39 cb             	cmp    %rcx,%rbx
    3c09:	73 e5                	jae    3bf0 <gcm_mask+0x80>
    3c0b:	e9 d5 04 03 00       	jmpq   340e5 <instr.bb_3c0b>
    3c10:	e9 d9 04 03 00       	jmpq   340ee <instr.bb_3c10>
    3c15:	41 32 0c 14          	xor    (%r12,%rdx,1),%cl
    3c19:	41 88 4c 15 00       	mov    %cl,0x0(%r13,%rdx,1)
    3c1e:	48 83 c2 01          	add    $0x1,%rdx
    3c22:	48 39 d3             	cmp    %rdx,%rbx
    3c25:	77 e9                	ja     3c10 <gcm_mask+0xa0>
    3c27:	e9 dd 04 03 00       	jmpq   34109 <instr.bb_3c27>
    3c2c:	00 01                	add    %al,(%rcx)
    3c2e:	0f 84 bc 00 00 00    	je     3cf0 <gcm_mask+0x180>
    3c34:	e9 e5 04 03 00       	jmpq   3411e <instr.bb_3c34>
    3c39:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    3c40:	00 00 
    3c42:	0f 85 08 01 00 00    	jne    3d50 <gcm_mask+0x1e0>
    3c48:	e9 e5 04 03 00       	jmpq   34132 <instr.bb_3c48>
    3c4d:	5d                   	pop    %rbp
    3c4e:	41 5c                	pop    %r12
    3c50:	41 5d                	pop    %r13
    3c52:	41 5e                	pop    %r14
    3c54:	41 5f                	pop    %r15
    3c56:	c3                   	retq   
    3c57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3c5e:	00 00 
    3c60:	4a 8d b4 35 90 01 00 	lea    0x190(%rbp,%r14,1),%rsi
    3c67:	00 
    3c68:	48 83 fb 03          	cmp    $0x3,%rbx
    3c6c:	0f 86 ce 00 00 00    	jbe    3d40 <gcm_mask+0x1d0>
    3c72:	b9 04 00 00 00       	mov    $0x4,%ecx
    3c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3c7e:	00 00 
    3c80:	41 8b 54 0c fc       	mov    -0x4(%r12,%rcx,1),%edx
    3c85:	31 54 0e fc          	xor    %edx,-0x4(%rsi,%rcx,1)
    3c89:	48 89 ca             	mov    %rcx,%rdx
    3c8c:	48 8d 49 04          	lea    0x4(%rcx),%rcx
    3c90:	48 39 cb             	cmp    %rcx,%rbx
    3c93:	73 eb                	jae    3c80 <gcm_mask+0x110>
    3c95:	48 39 d3             	cmp    %rdx,%rbx
    3c98:	0f 86 47 ff ff ff    	jbe    3be5 <gcm_mask+0x75>
    3c9e:	41 0f b6 0c 14       	movzbl (%r12,%rdx,1),%ecx
    3ca3:	30 0c 16             	xor    %cl,(%rsi,%rdx,1)
    3ca6:	48 83 c2 01          	add    $0x1,%rdx
    3caa:	48 39 d3             	cmp    %rdx,%rbx
    3cad:	77 ef                	ja     3c9e <gcm_mask+0x12e>
    3caf:	31 d2                	xor    %edx,%edx
    3cb1:	48 83 fb 03          	cmp    $0x3,%rbx
    3cb5:	0f 87 2a ff ff ff    	ja     3be5 <gcm_mask+0x75>
    3cbb:	e9 50 ff ff ff       	jmpq   3c10 <gcm_mask+0xa0>
    3cc0:	be 10 00 00 00       	mov    $0x10,%esi
    3cc5:	4c 89 ff             	mov    %r15,%rdi
    3cc8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3ccc:	e8 4f 15 00 00       	callq  5220 <mbedtls_platform_zeroize>
    3cd1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3cd5:	e9 5a ff ff ff       	jmpq   3c34 <gcm_mask+0xc4>
    3cda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3ce0:	31 d2                	xor    %edx,%edx
    3ce2:	e9 24 ff ff ff       	jmpq   3c0b <gcm_mask+0x9b>
    3ce7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3cee:	00 00 
    3cf0:	e9 5b 04 03 00       	jmpq   34150 <instr.bb_3cf0>
    3cf5:	e9 6f 04 03 00       	jmpq   34169 <instr.bb_3d05>
    3cfa:	00 00                	add    %al,(%rax)
    3cfc:	00 31                	add    %dh,(%rcx)
    3cfe:	c9                   	leaveq 
    3cff:	48 83 fb 03          	cmp    $0x3,%rbx
    3d03:	76 18                	jbe    3d1d <gcm_mask+0x1ad>
    3d05:	eb ee                	jmp    3cf5 <gcm_mask+0x185>
    3d07:	00 e9                	add    %ch,%cl
    3d09:	63 04 03             	movslq (%rbx,%rax,1),%eax
    3d0c:	00 31                	add    %dh,(%rcx)
    3d0e:	4c 16                	rex.WR (bad) 
    3d10:	fc                   	cld    
    3d11:	48 89 d1             	mov    %rdx,%rcx
    3d14:	48 83 c2 04          	add    $0x4,%rdx
    3d18:	48 39 d3             	cmp    %rdx,%rbx
    3d1b:	73 eb                	jae    3d08 <gcm_mask+0x198>
    3d1d:	e9 91 04 03 00       	jmpq   341b3 <instr.bb_3d1d>
    3d22:	0e                   	(bad)  
    3d23:	ff                   	(bad)  
    3d24:	ff                   	(bad)  
    3d25:	ff                   	(bad)  
    3d26:	e9 91 04 03 00       	jmpq   341bc <instr.bb_3d26>
    3d2b:	00 30                	add    %dh,(%rax)
    3d2d:	14 0e                	adc    $0xe,%al
    3d2f:	48 83 c1 01          	add    $0x1,%rcx
    3d33:	48 39 cb             	cmp    %rcx,%rbx
    3d36:	75 ee                	jne    3d26 <gcm_mask+0x1b6>
    3d38:	e9 f7 fe ff ff       	jmpq   3c34 <gcm_mask+0xc4>
    3d3d:	0f 1f 00             	nopl   (%rax)
    3d40:	31 d2                	xor    %edx,%edx
    3d42:	48 85 db             	test   %rbx,%rbx
    3d45:	0f 85 53 ff ff ff    	jne    3c9e <gcm_mask+0x12e>
    3d4b:	e9 e4 fe ff ff       	jmpq   3c34 <gcm_mask+0xc4>
    3d50:	e8 0b f5 ff ff       	callq  3260 <__stack_chk_fail@plt>
    3d55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3d5c:	00 00 00 00 

0000000000003d60 <mbedtls_gcm_init>:
    3d60:	e9 7b 04 03 00       	jmpq   341e0 <mbedtls_gcm_init.instr.bb_3d60>
    3d65:	e9 c1 04 03 00       	jmpq   3422b <instr.bb_3d8f>
    3d6a:	00 48 89             	add    %cl,-0x77(%rax)
    3d6d:	f9                   	stc    
    3d6e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    3d72:	31 c0                	xor    %eax,%eax
    3d74:	48 c7 87 98 01 00 00 	movq   $0x0,0x198(%rdi)
    3d7b:	00 00 00 00 
    3d7f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    3d83:	48 29 f9             	sub    %rdi,%rcx
    3d86:	81 c1 a8 01 00 00    	add    $0x1a8,%ecx
    3d8c:	c1 e9 03             	shr    $0x3,%ecx
    3d8f:	eb d4                	jmp    3d65 <mbedtls_gcm_init+0x5>
    3d91:	ab                   	stos   %eax,%es:(%rdi)
    3d92:	c3                   	retq   
    3d93:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3d9a:	00 00 00 00 
    3d9e:	66 90                	xchg   %ax,%ax

0000000000003da0 <mbedtls_gcm_setkey>:
    3da0:	e9 cb 04 03 00       	jmpq   34270 <mbedtls_gcm_setkey.instr.bb_3da0>
    3da5:	55                   	push   %rbp
    3da6:	41 89 cd             	mov    %ecx,%r13d
    3da9:	41 54                	push   %r12
    3dab:	55                   	push   %rbp
    3dac:	48 89 d5             	mov    %rdx,%rbp
    3daf:	53                   	push   %rbx
    3db0:	48 89 fb             	mov    %rdi,%rbx
    3db3:	89 f7                	mov    %esi,%edi
    3db5:	48 83 ec 38          	sub    $0x38,%rsp
    3db9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3dc0:	00 00 
    3dc2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3dc7:	31 c0                	xor    %eax,%eax
    3dc9:	89 c8                	mov    %ecx,%eax
    3dcb:	83 e0 bf             	and    $0xffffffbf,%eax
    3dce:	3d 80 00 00 00       	cmp    $0x80,%eax
    3dd3:	74 0c                	je     3de1 <mbedtls_gcm_setkey+0x41>
    3dd5:	e9 06 05 03 00       	jmpq   342e0 <instr.bb_3dd5>
    3dda:	00 0f                	add    %cl,(%rdi)
    3ddc:	85 bf 01 00 00 e9    	test   %edi,-0x16ffffff(%rdi)
    3de2:	06                   	(bad)  
    3de3:	05 03 00 44 89       	add    $0x89440003,%eax
    3de8:	ee                   	out    %al,(%dx)
    3de9:	e8 e2 1d 00 00       	callq  5bd0 <mbedtls_cipher_info_from_values>
    3dee:	e9 06 05 03 00       	jmpq   342f9 <instr.bb_3dee>
    3df3:	c0 0f 84             	rorb   $0x84,(%rdi)
    3df6:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    3df7:	01 00                	add    %eax,(%rax)
    3df9:	00 e9                	add    %ch,%cl
    3dfb:	06                   	(bad)  
    3dfc:	05 03 00 85 9c       	add    $0x9c850003,%eax
    3e01:	01 00                	add    %eax,(%rax)
    3e03:	00 e9                	add    %ch,%cl
    3e05:	06                   	(bad)  
    3e06:	05 03 00 1e 00       	add    $0x1e0003,%eax
    3e0b:	00 e9                	add    %ch,%cl
    3e0d:	06                   	(bad)  
    3e0e:	05 03 00 df e8       	add    $0xe8df0003,%eax
    3e13:	99                   	cltd   
    3e14:	1e                   	(bad)  
    3e15:	00 00                	add    %al,(%rax)
    3e17:	e9 35 05 03 00       	jmpq   34351 <instr.bb_3e17>
    3e1c:	74 22                	je     3e40 <mbedtls_gcm_setkey+0xa0>
    3e1e:	e9 39 05 03 00       	jmpq   3435c <instr.bb_3e1e>
    3e23:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3e2a:	00 00 
    3e2c:	0f 85 79 01 00 00    	jne    3fab <mbedtls_gcm_setkey+0x20b>
    3e32:	e9 39 05 03 00       	jmpq   34370 <instr.bb_3e32>
    3e37:	89 e0                	mov    %esp,%eax
    3e39:	5b                   	pop    %rbx
    3e3a:	5d                   	pop    %rbp
    3e3b:	41 5c                	pop    %r12
    3e3d:	41 5d                	pop    %r13
    3e3f:	c3                   	retq   
    3e40:	e9 39 05 03 00       	jmpq   3437e <instr.bb_3e40>
    3e45:	44 89 ea             	mov    %r13d,%edx
    3e48:	48 89 ee             	mov    %rbp,%rsi
    3e4b:	48 89 df             	mov    %rbx,%rdi
    3e4e:	e8 fd 1e 00 00       	callq  5d50 <mbedtls_cipher_setkey>
    3e53:	e9 39 05 03 00       	jmpq   34391 <instr.bb_3e53>
    3e58:	75 c4                	jne    3e1e <mbedtls_gcm_setkey+0x7e>
    3e5a:	e9 3d 05 03 00       	jmpq   3439c <instr.bb_3e5a>
    3e5f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3e63:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
    3e68:	48 89 df             	mov    %rbx,%rdi
    3e6b:	48 89 f1             	mov    %rsi,%rcx
    3e6e:	ba 10 00 00 00       	mov    $0x10,%edx
    3e73:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    3e78:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    3e7f:	00 00 
    3e81:	e8 ca 21 00 00       	callq  6050 <mbedtls_cipher_update>
    3e86:	e9 6a 05 03 00       	jmpq   343f5 <instr.bb_3e86>
    3e8b:	75 91                	jne    3e1e <mbedtls_gcm_setkey+0x7e>
    3e8d:	e9 6e 05 03 00       	jmpq   34400 <instr.bb_3e8d>
    3e92:	54                   	push   %rsp
    3e93:	24 14                	and    $0x14,%al
    3e95:	bf 02 00 00 00       	mov    $0x2,%edi
    3e9a:	8b 6c 24 18          	mov    0x18(%rsp),%ebp
    3e9e:	0f c8                	bswap  %eax
    3ea0:	0f ca                	bswap  %edx
    3ea2:	48 c1 e0 20          	shl    $0x20,%rax
    3ea6:	89 d2                	mov    %edx,%edx
    3ea8:	48 09 d0             	or     %rdx,%rax
    3eab:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    3eaf:	0f cd                	bswap  %ebp
    3eb1:	48 c1 e5 20          	shl    $0x20,%rbp
    3eb5:	48 89 83 20 01 00 00 	mov    %rax,0x120(%rbx)
    3ebc:	49 89 c5             	mov    %rax,%r13
    3ebf:	0f ca                	bswap  %edx
    3ec1:	89 d2                	mov    %edx,%edx
    3ec3:	48 09 d5             	or     %rdx,%rbp
    3ec6:	48 89 ab a0 00 00 00 	mov    %rbp,0xa0(%rbx)
    3ecd:	e8 0e 14 00 00       	callq  52e0 <mbedtls_aesni_has_support>
    3ed2:	e9 b2 05 03 00       	jmpq   34489 <instr.bb_3ed2>
    3ed7:	ff                   	(bad)  
    3ed8:	ff                   	(bad)  
    3ed9:	ff                   	(bad)  
    3eda:	e9 b2 05 03 00       	jmpq   34491 <instr.bb_3eda>
    3edf:	00 00                	add    %al,(%rax)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	b9 03 00 00 00       	mov    $0x3,%ecx
    3eea:	ba 04 00 00 00       	mov    $0x4,%edx
    3eef:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
    3ef6:	00 
    3ef7:	89 e8                	mov    %ebp,%eax
    3ef9:	48 d1 ed             	shr    %rbp
    3efc:	83 e0 01             	and    $0x1,%eax
    3eff:	89 c6                	mov    %eax,%esi
    3f01:	c1 e6 05             	shl    $0x5,%esi
    3f04:	29 f0                	sub    %esi,%eax
    3f06:	4c 89 ee             	mov    %r13,%rsi
    3f09:	49 d1 ed             	shr    %r13
    3f0c:	c1 e0 18             	shl    $0x18,%eax
    3f0f:	48 c1 e6 3f          	shl    $0x3f,%rsi
    3f13:	48 c1 e0 20          	shl    $0x20,%rax
    3f17:	48 09 f5             	or     %rsi,%rbp
    3f1a:	49 31 c5             	xor    %rax,%r13
    3f1d:	48 63 c2             	movslq %edx,%rax
    3f20:	d1 fa                	sar    %edx
    3f22:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    3f26:	48 89 68 60          	mov    %rbp,0x60(%rax)
    3f2a:	4c 89 a8 e0 00 00 00 	mov    %r13,0xe0(%rax)
    3f31:	83 e9 01             	sub    $0x1,%ecx
    3f34:	75 c1                	jne    3ef7 <mbedtls_gcm_setkey+0x157>
    3f36:	e9 b6 05 03 00       	jmpq   344f1 <instr.bb_3f36>
    3f3b:	ba 03 00 00 00       	mov    $0x3,%edx
    3f40:	be 02 00 00 00       	mov    $0x2,%esi
    3f45:	4c 8d 9b e0 00 00 00 	lea    0xe0(%rbx),%r11
    3f4c:	48 63 d6             	movslq %esi,%rdx
    3f4f:	b8 01 00 00 00       	mov    $0x1,%eax
    3f54:	48 c1 e2 03          	shl    $0x3,%rdx
    3f58:	48 8d 7c 15 00       	lea    0x0(%rbp,%rdx,1),%rdi
    3f5d:	4c 01 da             	add    %r11,%rdx
    3f60:	4c 8b 0a             	mov    (%rdx),%r9
    3f63:	4c 8b 07             	mov    (%rdi),%r8
    3f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3f6d:	00 00 00 
    3f70:	48 8b 8c c3 e0 00 00 	mov    0xe0(%rbx,%rax,8),%rcx
    3f77:	00 
    3f78:	4c 31 c9             	xor    %r9,%rcx
    3f7b:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    3f7f:	48 8b 4c c3 60       	mov    0x60(%rbx,%rax,8),%rcx
    3f84:	4c 31 c1             	xor    %r8,%rcx
    3f87:	48 89 0c c7          	mov    %rcx,(%rdi,%rax,8)
    3f8b:	48 83 c0 01          	add    $0x1,%rax
    3f8f:	39 c6                	cmp    %eax,%esi
    3f91:	7f dd                	jg     3f70 <mbedtls_gcm_setkey+0x1d0>
    3f93:	01 f6                	add    %esi,%esi
    3f95:	41 83 ea 01          	sub    $0x1,%r10d
    3f99:	75 b1                	jne    3f4c <mbedtls_gcm_setkey+0x1ac>
    3f9b:	e9 7e fe ff ff       	jmpq   3e1e <mbedtls_gcm_setkey+0x7e>
    3fa0:	41 bc ec ff ff ff    	mov    $0xffffffec,%r12d
    3fa6:	e9 73 fe ff ff       	jmpq   3e1e <mbedtls_gcm_setkey+0x7e>
    3fab:	e8 b0 f2 ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000003fb0 <mbedtls_gcm_starts>:
    3fb0:	e9 ab 05 03 00       	jmpq   34560 <mbedtls_gcm_starts.instr.bb_3fb0>
    3fb5:	57                   	push   %rdi
    3fb6:	41 56                	push   %r14
    3fb8:	41 55                	push   %r13
    3fba:	41 54                	push   %r12
    3fbc:	55                   	push   %rbp
    3fbd:	53                   	push   %rbx
    3fbe:	48 83 ec 38          	sub    $0x38,%rsp
    3fc2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3fc9:	00 00 
    3fcb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3fd0:	31 c0                	xor    %eax,%eax
    3fd2:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    3fd9:	00 00 
    3fdb:	48 85 c9             	test   %rcx,%rcx
    3fde:	0f 84 76 01 00 00    	je     415a <mbedtls_gcm_starts+0x1aa>
    3fe4:	e9 d8 05 03 00       	jmpq   345c1 <instr.bb_3fe4>
    3fe9:	cb                   	lret   
    3fea:	48 c1 e8 3d          	shr    $0x3d,%rax
    3fee:	0f 85 66 01 00 00    	jne    415a <mbedtls_gcm_starts+0x1aa>
    3ff4:	e9 d8 05 03 00       	jmpq   345d1 <instr.bb_3ff4>
    3ff9:	b7 a0                	mov    $0xa0,%bh
    3ffb:	01 00                	add    %eax,(%rax)
    3ffd:	00 48 89             	add    %cl,-0x77(%rax)
    4000:	fd                   	std    
    4001:	49 89 d6             	mov    %rdx,%r14
    4004:	4c 8d bf 80 01 00 00 	lea    0x180(%rdi),%r15
    400b:	0f 11 87 80 01 00 00 	movups %xmm0,0x180(%rdi)
    4012:	48 c7 87 60 01 00 00 	movq   $0x0,0x160(%rdi)
    4019:	00 00 00 00 
    401d:	48 c7 87 68 01 00 00 	movq   $0x0,0x168(%rdi)
    4024:	00 00 00 00 
    4028:	0f 11 87 90 01 00 00 	movups %xmm0,0x190(%rdi)
    402f:	48 83 f9 0c          	cmp    $0xc,%rcx
    4033:	0f 84 07 01 00 00    	je     4140 <mbedtls_gcm_starts+0x190>
    4039:	e9 32 06 03 00       	jmpq   34670 <instr.bb_4039>
    403e:	90                   	nop
    403f:	90                   	nop
    4040:	90                   	nop
    4041:	90                   	nop
    4042:	90                   	nop
    4043:	90                   	nop
    4044:	90                   	nop
    4045:	90                   	nop
    4046:	90                   	nop
    4047:	90                   	nop
    4048:	90                   	nop
    4049:	90                   	nop
    404a:	e9 e6 06 03 00       	jmpq   34735 <instr.bb_40c8>
    404f:	00 48 0f             	add    %cl,0xf(%rax)
    4052:	c8 48 89 44          	enterq $0x8948,$0x44
    4056:	24 18                	and    $0x18,%al
    4058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    405f:	00 
    4060:	48 83 fb 10          	cmp    $0x10,%rbx
    4064:	4d 89 ec             	mov    %r13,%r12
    4067:	4c 0f 46 e3          	cmovbe %rbx,%r12
    406b:	48 83 fb 03          	cmp    $0x3,%rbx
    406f:	0f 86 bb 00 00 00    	jbe    4130 <mbedtls_gcm_starts+0x180>
    4075:	e9 2b 06 03 00       	jmpq   346a5 <instr.bb_4075>
    407a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4080:	e9 2b 06 03 00       	jmpq   346b0 <instr.bb_4080>
    4085:	31 84 15 7c 01 00 00 	xor    %eax,0x17c(%rbp,%rdx,1)
    408c:	48 89 d0             	mov    %rdx,%rax
    408f:	48 8d 52 04          	lea    0x4(%rdx),%rdx
    4093:	49 39 d4             	cmp    %rdx,%r12
    4096:	73 e8                	jae    4080 <mbedtls_gcm_starts+0xd0>
    4098:	e9 5c 06 03 00       	jmpq   346f9 <instr.bb_4098>
    409d:	e9 60 06 03 00       	jmpq   34702 <instr.bb_409d>
    40a2:	30 94 05 80 01 00 00 	xor    %dl,0x180(%rbp,%rax,1)
    40a9:	48 83 c0 01          	add    $0x1,%rax
    40ad:	49 39 c4             	cmp    %rax,%r12
    40b0:	77 eb                	ja     409d <mbedtls_gcm_starts+0xed>
    40b2:	e9 64 06 03 00       	jmpq   3471b <instr.bb_40b2>
    40b7:	fe 48 89             	decb   -0x77(%rax)
    40ba:	ef                   	out    %eax,(%dx)
    40bb:	4d 01 e6             	add    %r12,%r14
    40be:	e8 ed f8 ff ff       	callq  39b0 <gcm_mult>
    40c3:	e9 64 06 03 00       	jmpq   3472c <instr.bb_40c3>
    40c8:	eb 80                	jmp    404a <mbedtls_gcm_starts+0x9a>
    40ca:	eb 08                	jmp    40d4 <mbedtls_gcm_starts+0x124>
    40cc:	0f 1f 40 00          	nopl   0x0(%rax)
    40d0:	eb 52                	jmp    4124 <mbedtls_gcm_starts+0x174>
    40d2:	eb 42                	jmp    4116 <mbedtls_gcm_starts+0x166>
    40d4:	e9 6b 06 03 00       	jmpq   34744 <instr.bb_40d4>
    40d9:	e9 62 06 03 00       	jmpq   34740 <instr.bb_40d0>
    40de:	04 48                	add    $0x48,%al
    40e0:	83 fb 10             	cmp    $0x10,%ebx
    40e3:	75 eb                	jne    40d0 <mbedtls_gcm_starts+0x120>
    40e5:	e9 94 06 03 00       	jmpq   3477e <instr.bb_40e5>
    40ea:	e9 51 06 03 00       	jmpq   34740 <instr.bb_40d0>
    40ef:	bd f8 ff ff e9       	mov    $0xe9fffff8,%ebp
    40f4:	94                   	xchg   %eax,%esp
    40f5:	06                   	(bad)  
    40f6:	03 00                	add    (%rax),%eax
    40f8:	e9 43 06 03 00       	jmpq   34740 <instr.bb_40d0>
    40fd:	4c 89 fe             	mov    %r15,%rsi
    4100:	48 89 ef             	mov    %rbp,%rdi
    4103:	48 8d 8d 70 01 00 00 	lea    0x170(%rbp),%rcx
    410a:	e8 41 1f 00 00       	callq  6050 <mbedtls_cipher_update>
    410f:	e9 94 06 03 00       	jmpq   347a8 <instr.bb_410f>
    4114:	e9 27 06 03 00       	jmpq   34740 <instr.bb_40d0>
    4119:	28 00                	sub    %al,(%rax)
    411b:	00 00                	add    %al,(%rax)
    411d:	75 42                	jne    4161 <mbedtls_gcm_starts+0x1b1>
    411f:	e9 98 06 03 00       	jmpq   347bc <instr.bb_411f>
    4124:	e9 17 06 03 00       	jmpq   34740 <instr.bb_40d0>
    4129:	41 5e                	pop    %r14
    412b:	41 5f                	pop    %r15
    412d:	c3                   	retq   
    412e:	66 90                	xchg   %ax,%ax
    4130:	31 c0                	xor    %eax,%eax
    4132:	e9 66 ff ff ff       	jmpq   409d <mbedtls_gcm_starts+0xed>
    4137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    413e:	00 00 
    4140:	48 8b 02             	mov    (%rdx),%rax
    4143:	48 89 87 80 01 00 00 	mov    %rax,0x180(%rdi)
    414a:	8b 42 08             	mov    0x8(%rdx),%eax
    414d:	41 89 47 08          	mov    %eax,0x8(%r15)
    4151:	c6 87 8f 01 00 00 01 	movb   $0x1,0x18f(%rdi)
    4158:	eb 99                	jmp    40f3 <mbedtls_gcm_starts+0x143>
    415a:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
    415f:	eb ae                	jmp    410f <mbedtls_gcm_starts+0x15f>
    4161:	e8 fa f0 ff ff       	callq  3260 <__stack_chk_fail@plt>
    4166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    416d:	00 00 00 

0000000000004170 <mbedtls_gcm_update_ad>:
    4170:	e9 5b 06 03 00       	jmpq   347d0 <mbedtls_gcm_update_ad.instr.bb_4170>
    4175:	57                   	push   %rdi
    4176:	41 56                	push   %r14
    4178:	41 55                	push   %r13
    417a:	49 89 d5             	mov    %rdx,%r13
    417d:	41 54                	push   %r12
    417f:	55                   	push   %rbp
    4180:	53                   	push   %rbx
    4181:	48 83 ec 08          	sub    $0x8,%rsp
    4185:	49 c1 ed 3d          	shr    $0x3d,%r13
    4189:	0f 85 83 01 00 00    	jne    4312 <mbedtls_gcm_update_ad+0x1a2>
    418f:	e9 95 06 03 00       	jmpq   34829 <instr.bb_418f>
    4194:	00 00                	add    %al,(%rax)
    4196:	48 89 f3             	mov    %rsi,%rbx
    4199:	48 89 fd             	mov    %rdi,%rbp
    419c:	49 89 d4             	mov    %rdx,%r12
    419f:	48 89 c6             	mov    %rax,%rsi
    41a2:	83 e6 0f             	and    $0xf,%esi
    41a5:	0f 85 c5 00 00 00    	jne    4270 <mbedtls_gcm_update_ad+0x100>
    41ab:	e9 9c 06 03 00       	jmpq   3484c <instr.bb_41ab>
    41b0:	85 68 01             	test   %ebp,0x1(%rax)
    41b3:	00 00                	add    %al,(%rax)
    41b5:	49 83 fc 0f          	cmp    $0xf,%r12
    41b9:	0f 86 37 01 00 00    	jbe    42f6 <mbedtls_gcm_update_ad+0x186>
    41bf:	49 8d 44 24 f0       	lea    -0x10(%r12),%rax
    41c4:	4c 8d bd 90 01 00 00 	lea    0x190(%rbp),%r15
    41cb:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    41cf:	4c 8d 74 03 10       	lea    0x10(%rbx,%rax,1),%r14
    41d4:	0f 1f 40 00          	nopl   0x0(%rax)
    41d8:	31 c0                	xor    %eax,%eax
    41da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    41e0:	8b 14 03             	mov    (%rbx,%rax,1),%edx
    41e3:	31 94 05 90 01 00 00 	xor    %edx,0x190(%rbp,%rax,1)
    41ea:	48 83 c0 04          	add    $0x4,%rax
    41ee:	48 83 f8 10          	cmp    $0x10,%rax
    41f2:	75 ec                	jne    41e0 <mbedtls_gcm_update_ad+0x70>
    41f4:	4c 89 fa             	mov    %r15,%rdx
    41f7:	4c 89 fe             	mov    %r15,%rsi
    41fa:	48 89 ef             	mov    %rbp,%rdi
    41fd:	48 83 c3 10          	add    $0x10,%rbx
    4201:	e8 aa f7 ff ff       	callq  39b0 <gcm_mult>
    4206:	4c 39 f3             	cmp    %r14,%rbx
    4209:	75 cd                	jne    41d8 <mbedtls_gcm_update_ad+0x68>
    420b:	41 83 e4 0f          	and    $0xf,%r12d
    420f:	4d 85 e4             	test   %r12,%r12
    4212:	75 14                	jne    4228 <mbedtls_gcm_update_ad+0xb8>
    4214:	31 c0                	xor    %eax,%eax
    4216:	48 83 c4 08          	add    $0x8,%rsp
    421a:	5b                   	pop    %rbx
    421b:	5d                   	pop    %rbp
    421c:	41 5c                	pop    %r12
    421e:	41 5d                	pop    %r13
    4220:	41 5e                	pop    %r14
    4222:	41 5f                	pop    %r15
    4224:	c3                   	retq   
    4225:	0f 1f 00             	nopl   (%rax)
    4228:	49 83 fc 03          	cmp    $0x3,%r12
    422c:	76 27                	jbe    4255 <mbedtls_gcm_update_ad+0xe5>
    422e:	b8 04 00 00 00       	mov    $0x4,%eax
    4233:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4238:	41 8b 54 06 fc       	mov    -0x4(%r14,%rax,1),%edx
    423d:	49 89 c5             	mov    %rax,%r13
    4240:	31 94 05 8c 01 00 00 	xor    %edx,0x18c(%rbp,%rax,1)
    4247:	48 8d 40 04          	lea    0x4(%rax),%rax
    424b:	49 39 c4             	cmp    %rax,%r12
    424e:	73 e8                	jae    4238 <mbedtls_gcm_update_ad+0xc8>
    4250:	4d 39 ec             	cmp    %r13,%r12
    4253:	76 bf                	jbe    4214 <mbedtls_gcm_update_ad+0xa4>
    4255:	43 0f b6 04 2e       	movzbl (%r14,%r13,1),%eax
    425a:	42 30 84 2d 90 01 00 	xor    %al,0x190(%rbp,%r13,1)
    4261:	00 
    4262:	49 83 c5 01          	add    $0x1,%r13
    4266:	4d 39 e5             	cmp    %r12,%r13
    4269:	75 ea                	jne    4255 <mbedtls_gcm_update_ad+0xe5>
    426b:	eb a7                	jmp    4214 <mbedtls_gcm_update_ad+0xa4>
    426d:	0f 1f 00             	nopl   (%rax)
    4270:	41 be 10 00 00 00    	mov    $0x10,%r14d
    4276:	4c 8d 87 90 01 00 00 	lea    0x190(%rdi),%r8
    427d:	49 29 f6             	sub    %rsi,%r14
    4280:	49 8d 0c 30          	lea    (%r8,%rsi,1),%rcx
    4284:	4c 39 f2             	cmp    %r14,%rdx
    4287:	4c 0f 46 f2          	cmovbe %rdx,%r14
    428b:	49 83 fe 03          	cmp    $0x3,%r14
    428f:	76 7d                	jbe    430e <mbedtls_gcm_update_ad+0x19e>
    4291:	b8 04 00 00 00       	mov    $0x4,%eax
    4296:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    429d:	00 00 00 
    42a0:	8b 54 03 fc          	mov    -0x4(%rbx,%rax,1),%edx
    42a4:	31 54 01 fc          	xor    %edx,-0x4(%rcx,%rax,1)
    42a8:	48 89 c2             	mov    %rax,%rdx
    42ab:	48 83 c0 04          	add    $0x4,%rax
    42af:	49 39 c6             	cmp    %rax,%r14
    42b2:	73 ec                	jae    42a0 <mbedtls_gcm_update_ad+0x130>
    42b4:	49 39 d6             	cmp    %rdx,%r14
    42b7:	76 10                	jbe    42c9 <mbedtls_gcm_update_ad+0x159>
    42b9:	0f b6 04 13          	movzbl (%rbx,%rdx,1),%eax
    42bd:	30 04 11             	xor    %al,(%rcx,%rdx,1)
    42c0:	48 83 c2 01          	add    $0x1,%rdx
    42c4:	49 39 d6             	cmp    %rdx,%r14
    42c7:	75 f0                	jne    42b9 <mbedtls_gcm_update_ad+0x149>
    42c9:	4c 01 f6             	add    %r14,%rsi
    42cc:	48 83 fe 10          	cmp    $0x10,%rsi
    42d0:	74 2c                	je     42fe <mbedtls_gcm_update_ad+0x18e>
    42d2:	48 8b 85 68 01 00 00 	mov    0x168(%rbp),%rax
    42d9:	4d 29 f4             	sub    %r14,%r12
    42dc:	4c 01 f3             	add    %r14,%rbx
    42df:	4c 01 f0             	add    %r14,%rax
    42e2:	4c 01 e0             	add    %r12,%rax
    42e5:	48 89 85 68 01 00 00 	mov    %rax,0x168(%rbp)
    42ec:	49 83 fc 0f          	cmp    $0xf,%r12
    42f0:	0f 87 c9 fe ff ff    	ja     41bf <mbedtls_gcm_update_ad+0x4f>
    42f6:	49 89 de             	mov    %rbx,%r14
    42f9:	e9 11 ff ff ff       	jmpq   420f <mbedtls_gcm_update_ad+0x9f>
    42fe:	4c 89 c2             	mov    %r8,%rdx
    4301:	4c 89 c6             	mov    %r8,%rsi
    4304:	48 89 ef             	mov    %rbp,%rdi
    4307:	e8 a4 f6 ff ff       	callq  39b0 <gcm_mult>
    430c:	eb c4                	jmp    42d2 <mbedtls_gcm_update_ad+0x162>
    430e:	31 d2                	xor    %edx,%edx
    4310:	eb a2                	jmp    42b4 <mbedtls_gcm_update_ad+0x144>
    4312:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
    4317:	e9 fa fe ff ff       	jmpq   4216 <mbedtls_gcm_update_ad+0xa6>
    431c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004320 <mbedtls_gcm_update>:
    4320:	e9 5b 05 03 00       	jmpq   34880 <mbedtls_gcm_update.instr.bb_4320>
    4325:	57                   	push   %rdi
    4326:	66 0f ef c0          	pxor   %xmm0,%xmm0
    432a:	41 56                	push   %r14
    432c:	41 55                	push   %r13
    432e:	41 54                	push   %r12
    4330:	55                   	push   %rbp
    4331:	53                   	push   %rbx
    4332:	48 83 ec 38          	sub    $0x38,%rsp
    4336:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    433d:	00 00 
    433f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4344:	31 c0                	xor    %eax,%eax
    4346:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    434b:	49 39 d0             	cmp    %rdx,%r8
    434e:	0f 82 34 02 00 00    	jb     4588 <mbedtls_gcm_update+0x268>
    4354:	e9 c8 05 03 00       	jmpq   34921 <instr.bb_4354>
    4359:	d4                   	(bad)  
    435a:	48 85 d2             	test   %rdx,%rdx
    435d:	0f 84 20 01 00 00    	je     4483 <mbedtls_gcm_update+0x163>
    4363:	e9 c8 05 03 00       	jmpq   34930 <instr.bb_4363>
    4368:	f3 48 89 cd          	repz mov %rcx,%rbp
    436c:	48 39 ce             	cmp    %rcx,%rsi
    436f:	0f 82 3b 01 00 00    	jb     44b0 <mbedtls_gcm_update+0x190>
    4375:	e9 c8 05 03 00       	jmpq   34942 <instr.bb_4375>
    437a:	00 00                	add    %al,(%rax)
    437c:	31 d2                	xor    %edx,%edx
    437e:	48 b9 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rcx
    4385:	00 00 00 
    4388:	48 89 c6             	mov    %rax,%rsi
    438b:	4c 01 e6             	add    %r12,%rsi
    438e:	0f 92 c2             	setb   %dl
    4391:	48 39 ce             	cmp    %rcx,%rsi
    4394:	0f 87 25 01 00 00    	ja     44bf <mbedtls_gcm_update+0x19f>
    439a:	e9 cf 05 03 00       	jmpq   3496e <instr.bb_439a>
    439f:	1c 01                	sbb    $0x1,%al
    43a1:	00 00                	add    %al,(%rax)
    43a3:	e9 cf 05 03 00       	jmpq   34977 <instr.bb_43a3>
    43a8:	24 01                	and    $0x1,%al
    43aa:	00 00                	add    %al,(%rax)
    43ac:	49 89 c5             	mov    %rax,%r13
    43af:	41 83 e5 0f          	and    $0xf,%r13d
    43b3:	0f 85 4e 01 00 00    	jne    4507 <mbedtls_gcm_update+0x1e7>
    43b9:	4c 01 e0             	add    %r12,%rax
    43bc:	e9 cf 05 03 00       	jmpq   34990 <instr.bb_43bc>
    43c1:	e9 6c 06 03 00       	jmpq   34a32 <instr.bb_440a>
    43c6:	24 10                	and    $0x10,%al
    43c8:	49 83 fc 0f          	cmp    $0xf,%r12
    43cc:	76 65                	jbe    4433 <mbedtls_gcm_update+0x113>
    43ce:	e9 e7 05 03 00       	jmpq   349ba <instr.bb_43ce>
    43d3:	00 00                	add    %al,(%rax)
    43d5:	0f 1f 00             	nopl   (%rax)
    43d8:	b8 10 00 00 00       	mov    $0x10,%eax
    43dd:	48 83 e8 01          	sub    $0x1,%rax
    43e1:	41 80 84 07 80 01 00 	addb   $0x1,0x180(%r15,%rax,1)
    43e8:	00 01 
    43ea:	75 06                	jne    43f2 <mbedtls_gcm_update+0xd2>
    43ec:	e9 1f 06 03 00       	jmpq   34a10 <instr.bb_43ec>
    43f1:	eb e9                	jmp    43dc <mbedtls_gcm_update+0xbc>
    43f3:	23 06                	and    (%rsi),%eax
    43f5:	03 00                	add    (%rax),%eax
    43f7:	49 89 d8             	mov    %rbx,%r8
    43fa:	b9 10 00 00 00       	mov    $0x10,%ecx
    43ff:	4c 89 f6             	mov    %r14,%rsi
    4402:	4c 89 ff             	mov    %r15,%rdi
    4405:	e8 66 f7 ff ff       	callq  3b70 <gcm_mask>
    440a:	eb b5                	jmp    43c1 <mbedtls_gcm_update+0xa1>
    440c:	75 75                	jne    4483 <mbedtls_gcm_update+0x163>
    440e:	e9 27 06 03 00       	jmpq   34a3a <instr.bb_440e>
    4413:	ee                   	out    %al,(%dx)
    4414:	4c 89 ff             	mov    %r15,%rdi
    4417:	49 83 ec 10          	sub    $0x10,%r12
    441b:	e8 90 f5 ff ff       	callq  39b0 <gcm_mult>
    4420:	e9 27 06 03 00       	jmpq   34a4c <instr.bb_4420>
    4425:	83 c5 10             	add    $0x10,%ebp
    4428:	49 83 fc 0f          	cmp    $0xf,%r12
    442c:	77 aa                	ja     43d8 <mbedtls_gcm_update+0xb8>
    442e:	e9 2b 06 03 00       	jmpq   34a5e <instr.bb_442e>
    4433:	e9 2f 06 03 00       	jmpq   34a67 <instr.bb_4433>
    4438:	48 83 e8 01          	sub    $0x1,%rax
    443c:	41 0f b6 bc 07 80 01 	movzbl 0x180(%r15,%rax,1),%edi
    4443:	00 00 
    4445:	8d 57 01             	lea    0x1(%rdi),%edx
    4448:	41 88 94 07 80 01 00 	mov    %dl,0x180(%r15,%rax,1)
    444f:	00 
    4450:	48 83 f8 0c          	cmp    $0xc,%rax
    4454:	76 04                	jbe    445a <mbedtls_gcm_update+0x13a>
    4456:	84 d2                	test   %dl,%dl
    4458:	74 de                	je     4438 <mbedtls_gcm_update+0x118>
    445a:	31 d2                	xor    %edx,%edx
    445c:	49 89 e9             	mov    %rbp,%r9
    445f:	49 89 d8             	mov    %rbx,%r8
    4462:	4c 89 e1             	mov    %r12,%rcx
    4465:	4c 89 f6             	mov    %r14,%rsi
    4468:	4c 89 ff             	mov    %r15,%rdi
    446b:	e8 00 f7 ff ff       	callq  3b70 <gcm_mask>
    4470:	85 c0                	test   %eax,%eax
    4472:	75 0f                	jne    4483 <mbedtls_gcm_update+0x163>
    4474:	be 10 00 00 00       	mov    $0x10,%esi
    4479:	4c 89 f7             	mov    %r14,%rdi
    447c:	e8 9f 0d 00 00       	callq  5220 <mbedtls_platform_zeroize>
    4481:	31 c0                	xor    %eax,%eax
    4483:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    4488:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    448f:	00 00 
    4491:	0f 85 fb 00 00 00    	jne    4592 <mbedtls_gcm_update+0x272>
    4497:	48 83 c4 38          	add    $0x38,%rsp
    449b:	5b                   	pop    %rbx
    449c:	5d                   	pop    %rbp
    449d:	41 5c                	pop    %r12
    449f:	41 5d                	pop    %r13
    44a1:	41 5e                	pop    %r14
    44a3:	41 5f                	pop    %r15
    44a5:	c3                   	retq   
    44a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    44ad:	00 00 00 
    44b0:	48 89 c8             	mov    %rcx,%rax
    44b3:	48 29 f0             	sub    %rsi,%rax
    44b6:	48 39 d0             	cmp    %rdx,%rax
    44b9:	0f 83 b6 fe ff ff    	jae    4375 <mbedtls_gcm_update+0x55>
    44bf:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
    44c4:	eb bd                	jmp    4483 <mbedtls_gcm_update+0x163>
    44c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    44cd:	00 00 00 
    44d0:	e9 cb 05 03 00       	jmpq   34aa0 <instr.bb_44d0>
    44d5:	87 68 01             	xchg   %ebp,0x1(%rax)
    44d8:	00 00                	add    %al,(%rax)
    44da:	0f                   	(bad)  
    44db:	0f 84 db fe ff ff    	je     43bc <mbedtls_gcm_update+0x9c>
    44e1:	e9 d4 05 03 00       	jmpq   34aba <instr.bb_44e1>
    44e6:	00 00                	add    %al,(%rax)
    44e8:	4c 89 ff             	mov    %r15,%rdi
    44eb:	48 89 f2             	mov    %rsi,%rdx
    44ee:	e8 bd f4 ff ff       	callq  39b0 <gcm_mult>
    44f3:	49 8b 87 60 01 00 00 	mov    0x160(%r15),%rax
    44fa:	49 89 c5             	mov    %rax,%r13
    44fd:	41 83 e5 0f          	and    $0xf,%r13d
    4501:	0f 84 b2 fe ff ff    	je     43b9 <mbedtls_gcm_update+0x99>
    4507:	b9 10 00 00 00       	mov    $0x10,%ecx
    450c:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    4511:	49 89 e9             	mov    %rbp,%r9
    4514:	49 89 d8             	mov    %rbx,%r8
    4517:	4c 29 e9             	sub    %r13,%rcx
    451a:	4c 89 ea             	mov    %r13,%rdx
    451d:	4c 89 f6             	mov    %r14,%rsi
    4520:	4c 89 ff             	mov    %r15,%rdi
    4523:	49 39 cc             	cmp    %rcx,%r12
    4526:	49 0f 46 cc          	cmovbe %r12,%rcx
    452a:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    452f:	e8 3c f6 ff ff       	callq  3b70 <gcm_mask>
    4534:	85 c0                	test   %eax,%eax
    4536:	0f 85 47 ff ff ff    	jne    4483 <mbedtls_gcm_update+0x163>
    453c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4541:	49 01 cd             	add    %rcx,%r13
    4544:	49 83 fd 10          	cmp    $0x10,%r13
    4548:	74 25                	je     456f <mbedtls_gcm_update+0x24f>
    454a:	4c 89 e0             	mov    %r12,%rax
    454d:	4d 01 a7 60 01 00 00 	add    %r12,0x160(%r15)
    4554:	48 01 cb             	add    %rcx,%rbx
    4557:	48 01 cd             	add    %rcx,%rbp
    455a:	48 29 c8             	sub    %rcx,%rax
    455d:	49 89 c4             	mov    %rax,%r12
    4560:	48 83 f8 0f          	cmp    $0xf,%rax
    4564:	0f 87 64 fe ff ff    	ja     43ce <mbedtls_gcm_update+0xae>
    456a:	e9 bf fe ff ff       	jmpq   442e <mbedtls_gcm_update+0x10e>
    456f:	49 8d b7 90 01 00 00 	lea    0x190(%r15),%rsi
    4576:	4c 89 ff             	mov    %r15,%rdi
    4579:	48 89 f2             	mov    %rsi,%rdx
    457c:	e8 2f f4 ff ff       	callq  39b0 <gcm_mult>
    4581:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4586:	eb c2                	jmp    454a <mbedtls_gcm_update+0x22a>
    4588:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    458d:	e9 f1 fe ff ff       	jmpq   4483 <mbedtls_gcm_update+0x163>
    4592:	e8 c9 ec ff ff       	callq  3260 <__stack_chk_fail@plt>
    4597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    459e:	00 00 

00000000000045a0 <mbedtls_gcm_finish>:
    45a0:	e9 3b 05 03 00       	jmpq   34ae0 <mbedtls_gcm_finish.instr.bb_45a0>
    45a5:	57                   	push   %rdi
    45a6:	41 56                	push   %r14
    45a8:	41 55                	push   %r13
    45aa:	4d 89 cd             	mov    %r9,%r13
    45ad:	41 54                	push   %r12
    45af:	4d 8d 61 fc          	lea    -0x4(%r9),%r12
    45b3:	55                   	push   %rbp
    45b4:	4c 89 c5             	mov    %r8,%rbp
    45b7:	53                   	push   %rbx
    45b8:	48 89 fb             	mov    %rdi,%rbx
    45bb:	48 83 ec 28          	sub    $0x28,%rsp
    45bf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    45c6:	00 00 
    45c8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    45cd:	31 c0                	xor    %eax,%eax
    45cf:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    45d6:	48 8b 87 60 01 00 00 	mov    0x160(%rdi),%rax
    45dd:	48 8b 97 68 01 00 00 	mov    0x168(%rdi),%rdx
    45e4:	4c 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%r14
    45eb:	00 
    45ec:	4c 8d 3c d5 00 00 00 	lea    0x0(,%rdx,8),%r15
    45f3:	00 
    45f4:	48 85 c0             	test   %rax,%rax
    45f7:	75 66                	jne    465f <mbedtls_gcm_finish+0xbf>
    45f9:	e9 71 05 03 00       	jmpq   34b6f <instr.bb_45f9>
    45fe:	e9 75 05 03 00       	jmpq   34b78 <instr.bb_45fe>
    4603:	87 48 01             	xchg   %ecx,0x1(%rax)
    4606:	00 00                	add    %al,(%rax)
    4608:	e9 75 05 03 00       	jmpq   34b82 <instr.bb_4608>
    460d:	00 00                	add    %al,(%rax)
    460f:	4c 89 ea             	mov    %r13,%rdx
    4612:	48 89 ef             	mov    %rbp,%rdi
    4615:	e8 f6 ec ff ff       	callq  3310 <memcpy@plt>
    461a:	e9 75 05 03 00       	jmpq   34b94 <instr.bb_461a>
    461f:	f8                   	clc    
    4620:	75 6e                	jne    4690 <mbedtls_gcm_finish+0xf0>
    4622:	e9 79 05 03 00       	jmpq   34ba0 <instr.bb_4622>
    4627:	24 18                	and    $0x18,%al
    4629:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    4630:	00 00 
    4632:	0f 85 22 01 00 00    	jne    475a <mbedtls_gcm_finish+0x1ba>
    4638:	e9 79 05 03 00       	jmpq   34bb6 <instr.bb_4638>
    463d:	5d                   	pop    %rbp
    463e:	41 5c                	pop    %r12
    4640:	41 5d                	pop    %r13
    4642:	41 5e                	pop    %r14
    4644:	41 5f                	pop    %r15
    4646:	c3                   	retq   
    4647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    464e:	00 00 
    4650:	48 8d b7 90 01 00 00 	lea    0x190(%rdi),%rsi
    4657:	48 89 f2             	mov    %rsi,%rdx
    465a:	e8 51 f3 ff ff       	callq  39b0 <gcm_mult>
    465f:	e9 6c 05 03 00       	jmpq   34bd0 <instr.bb_465f>
    4664:	87 e7                	xchg   %esp,%edi
    4666:	00 00                	add    %al,(%rax)
    4668:	00 e9                	add    %ch,%cl
    466a:	6c                   	insb   (%dx),%es:(%rdi)
    466b:	05 03 00 00 0f       	add    $0xf000003,%eax
    4670:	74 96                	je     4608 <mbedtls_gcm_finish+0x68>
    4672:	e9 78 05 03 00       	jmpq   34bef <instr.bb_4672>
    4677:	00 00                	add    %al,(%rax)
    4679:	48 89 df             	mov    %rbx,%rdi
    467c:	48 89 f2             	mov    %rsi,%rdx
    467f:	e8 2c f3 ff ff       	callq  39b0 <gcm_mult>
    4684:	eb 82                	jmp    4608 <mbedtls_gcm_finish+0x68>
    4686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    468d:	00 00 00 
    4690:	4c 89 fa             	mov    %r15,%rdx
    4693:	4c 89 f0             	mov    %r14,%rax
    4696:	41 0f cf             	bswap  %r15d
    4699:	41 0f ce             	bswap  %r14d
    469c:	48 c1 ea 20          	shr    $0x20,%rdx
    46a0:	48 c1 e8 20          	shr    $0x20,%rax
    46a4:	44 89 7c 24 04       	mov    %r15d,0x4(%rsp)
    46a9:	48 8d b3 90 01 00 00 	lea    0x190(%rbx),%rsi
    46b0:	0f c8                	bswap  %eax
    46b2:	0f ca                	bswap  %edx
    46b4:	89 44 24 08          	mov    %eax,0x8(%rsp)
    46b8:	b8 04 00 00 00       	mov    $0x4,%eax
    46bd:	89 14 24             	mov    %edx,(%rsp)
    46c0:	44 89 74 24 0c       	mov    %r14d,0xc(%rsp)
    46c5:	eb 10                	jmp    46d7 <mbedtls_gcm_finish+0x137>
    46c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    46ce:	00 00 
    46d0:	e9 3b 05 03 00       	jmpq   34c10 <instr.bb_46d0>
    46d5:	c0 04 e9 3b          	rolb   $0x3b,(%rcx,%rbp,8)
    46d9:	05 03 00 00 00       	add    $0x3,%eax
    46de:	48 83 f8 10          	cmp    $0x10,%rax
    46e2:	75 ec                	jne    46d0 <mbedtls_gcm_finish+0x130>
    46e4:	e9 64 05 03 00       	jmpq   34c4d <instr.bb_46e4>
    46e9:	df e8                	fucomip %st(0),%st
    46eb:	c1 f2 ff             	shl    $0xff,%edx
    46ee:	ff                   	(bad)  
    46ef:	e9 64 05 03 00       	jmpq   34c58 <instr.bb_46ef>
    46f4:	0f 1f 40 00          	nopl   0x0(%rax)
    46f8:	e9 63 05 03 00       	jmpq   34c60 <instr.bb_46f8>
    46fd:	00 00                	add    %al,(%rax)
    46ff:	31 54 05 fc          	xor    %edx,-0x4(%rbp,%rax,1)
    4703:	48 83 c0 04          	add    $0x4,%rax
    4707:	49 39 c5             	cmp    %rax,%r13
    470a:	73 ec                	jae    46f8 <mbedtls_gcm_finish+0x158>
    470c:	e9 90 05 03 00       	jmpq   34ca1 <instr.bb_470c>
    4711:	8d 55 01             	lea    0x1(%rbp),%edx
    4714:	48 83 fa 04          	cmp    $0x4,%rdx
    4718:	49 8d 44 24 04       	lea    0x4(%r12),%rax
    471d:	ba 04 00 00 00       	mov    $0x4,%edx
    4722:	48 0f 46 c2          	cmovbe %rdx,%rax
    4726:	49 39 c5             	cmp    %rax,%r13
    4729:	0f 86 f3 fe ff ff    	jbe    4622 <mbedtls_gcm_finish+0x82>
    472f:	e9 90 05 03 00       	jmpq   34cc4 <instr.bb_472f>
    4734:	01 00                	add    %eax,(%rax)
    4736:	00 30                	add    %dh,(%rax)
    4738:	54                   	push   %rsp
    4739:	05 00 48 83 c0       	add    $0xc0834800,%eax
    473e:	01 49 39             	add    %ecx,0x39(%rcx)
    4741:	c5 75 eb e9          	vpor   %ymm1,%ymm1,%ymm13
    4745:	d9 fe                	fsin   
    4747:	ff                   	(bad)  
    4748:	ff 0f                	decl   (%rdi)
    474a:	1f                   	(bad)  
    474b:	80 00 00             	addb   $0x0,(%rax)
    474e:	00 00                	add    %al,(%rax)
    4750:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
    4755:	e9 ca fe ff ff       	jmpq   4624 <mbedtls_gcm_finish+0x84>
    475a:	e8 01 eb ff ff       	callq  3260 <__stack_chk_fail@plt>
    475f:	90                   	nop

0000000000004760 <mbedtls_gcm_crypt_and_tag>:
    4760:	e9 8b 05 03 00       	jmpq   34cf0 <mbedtls_gcm_crypt_and_tag.instr.bb_4760>
    4765:	e9 ef 05 03 00       	jmpq   34d59 <instr.bb_47a5>
    476a:	56                   	push   %rsi
    476b:	41 55                	push   %r13
    476d:	41 54                	push   %r12
    476f:	49 89 d4             	mov    %rdx,%r12
    4772:	48 89 ca             	mov    %rcx,%rdx
    4775:	4c 89 c1             	mov    %r8,%rcx
    4778:	55                   	push   %rbp
    4779:	4c 89 cd             	mov    %r9,%rbp
    477c:	53                   	push   %rbx
    477d:	48 83 ec 18          	sub    $0x18,%rsp
    4781:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4788:	00 00 
    478a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    478f:	31 c0                	xor    %eax,%eax
    4791:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
    4796:	4c 8b 74 24 60       	mov    0x60(%rsp),%r14
    479b:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    47a0:	e8 0b f8 ff ff       	callq  3fb0 <mbedtls_gcm_starts>
    47a5:	eb be                	jmp    4765 <mbedtls_gcm_crypt_and_tag+0x5>
    47a7:	74 27                	je     47d0 <mbedtls_gcm_crypt_and_tag+0x70>
    47a9:	e9 b3 05 03 00       	jmpq   34d61 <instr.bb_47a9>
    47ae:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    47b5:	00 00 
    47b7:	75 62                	jne    481b <mbedtls_gcm_crypt_and_tag+0xbb>
    47b9:	e9 b7 05 03 00       	jmpq   34d75 <instr.bb_47b9>
    47be:	5d                   	pop    %rbp
    47bf:	41 5c                	pop    %r12
    47c1:	41 5d                	pop    %r13
    47c3:	41 5e                	pop    %r14
    47c5:	41 5f                	pop    %r15
    47c7:	c3                   	retq   
    47c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    47cf:	00 
    47d0:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    47d5:	48 89 ee             	mov    %rbp,%rsi
    47d8:	4c 89 ff             	mov    %r15,%rdi
    47db:	e8 90 f9 ff ff       	callq  4170 <mbedtls_gcm_update_ad>
    47e0:	85 c0                	test   %eax,%eax
    47e2:	75 c5                	jne    47a9 <mbedtls_gcm_crypt_and_tag+0x49>
    47e4:	48 89 e5             	mov    %rsp,%rbp
    47e7:	4d 89 e0             	mov    %r12,%r8
    47ea:	4c 89 f1             	mov    %r14,%rcx
    47ed:	4c 89 e2             	mov    %r12,%rdx
    47f0:	49 89 e9             	mov    %rbp,%r9
    47f3:	4c 89 ee             	mov    %r13,%rsi
    47f6:	4c 89 ff             	mov    %r15,%rdi
    47f9:	e8 22 fb ff ff       	callq  4320 <mbedtls_gcm_update>
    47fe:	85 c0                	test   %eax,%eax
    4800:	75 a7                	jne    47a9 <mbedtls_gcm_crypt_and_tag+0x49>
    4802:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
    4807:	49 89 d8             	mov    %rbx,%r8
    480a:	48 89 e9             	mov    %rbp,%rcx
    480d:	31 d2                	xor    %edx,%edx
    480f:	31 f6                	xor    %esi,%esi
    4811:	4c 89 ff             	mov    %r15,%rdi
    4814:	e8 87 fd ff ff       	callq  45a0 <mbedtls_gcm_finish>
    4819:	eb 8e                	jmp    47a9 <mbedtls_gcm_crypt_and_tag+0x49>
    481b:	e8 40 ea ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000004820 <mbedtls_gcm_auth_decrypt>:
    4820:	f3 0f 1e fa          	endbr64 
    4824:	41 56                	push   %r14
    4826:	41 55                	push   %r13
    4828:	49 89 f5             	mov    %rsi,%r13
    482b:	41 54                	push   %r12
    482d:	55                   	push   %rbp
    482e:	53                   	push   %rbx
    482f:	48 83 ec 28          	sub    $0x28,%rsp
    4833:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
    4838:	4c 8b 74 24 70       	mov    0x70(%rsp),%r14
    483d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    4842:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4849:	00 00 
    484b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4850:	31 c0                	xor    %eax,%eax
    4852:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
    4857:	55                   	push   %rbp
    4858:	53                   	push   %rbx
    4859:	41 56                	push   %r14
    485b:	ff b4 24 80 00 00 00 	pushq  0x80(%rsp)
    4862:	41 51                	push   %r9
    4864:	4d 89 c1             	mov    %r8,%r9
    4867:	49 89 c8             	mov    %rcx,%r8
    486a:	48 89 d1             	mov    %rdx,%rcx
    486d:	48 89 f2             	mov    %rsi,%rdx
    4870:	31 f6                	xor    %esi,%esi
    4872:	e8 e9 fe ff ff       	callq  4760 <mbedtls_gcm_crypt_and_tag>
    4877:	48 83 c4 30          	add    $0x30,%rsp
    487b:	85 c0                	test   %eax,%eax
    487d:	75 2c                	jne    48ab <mbedtls_gcm_auth_decrypt+0x8b>
    487f:	48 85 db             	test   %rbx,%rbx
    4882:	74 27                	je     48ab <mbedtls_gcm_auth_decrypt+0x8b>
    4884:	31 c9                	xor    %ecx,%ecx
    4886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    488d:	00 00 00 
    4890:	41 0f b6 14 0c       	movzbl (%r12,%rcx,1),%edx
    4895:	32 54 0d 00          	xor    0x0(%rbp,%rcx,1),%dl
    4899:	48 83 c1 01          	add    $0x1,%rcx
    489d:	0f b6 d2             	movzbl %dl,%edx
    48a0:	09 d0                	or     %edx,%eax
    48a2:	48 39 cb             	cmp    %rcx,%rbx
    48a5:	75 e9                	jne    4890 <mbedtls_gcm_auth_decrypt+0x70>
    48a7:	85 c0                	test   %eax,%eax
    48a9:	75 1d                	jne    48c8 <mbedtls_gcm_auth_decrypt+0xa8>
    48ab:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    48b0:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    48b7:	00 00 
    48b9:	75 1f                	jne    48da <mbedtls_gcm_auth_decrypt+0xba>
    48bb:	48 83 c4 20          	add    $0x20,%rsp
    48bf:	5b                   	pop    %rbx
    48c0:	5d                   	pop    %rbp
    48c1:	41 5c                	pop    %r12
    48c3:	41 5d                	pop    %r13
    48c5:	41 5e                	pop    %r14
    48c7:	c3                   	retq   
    48c8:	4c 89 ee             	mov    %r13,%rsi
    48cb:	4c 89 f7             	mov    %r14,%rdi
    48ce:	e8 4d 09 00 00       	callq  5220 <mbedtls_platform_zeroize>
    48d3:	b8 ee ff ff ff       	mov    $0xffffffee,%eax
    48d8:	eb d1                	jmp    48ab <mbedtls_gcm_auth_decrypt+0x8b>
    48da:	e8 81 e9 ff ff       	callq  3260 <__stack_chk_fail@plt>
    48df:	90                   	nop

00000000000048e0 <mbedtls_gcm_free>:
    48e0:	f3 0f 1e fa          	endbr64 
    48e4:	48 85 ff             	test   %rdi,%rdi
    48e7:	74 07                	je     48f0 <mbedtls_gcm_free+0x10>
    48e9:	e9 62 f2 ff ff       	jmpq   3b50 <mbedtls_gcm_free.part.0>
    48ee:	66 90                	xchg   %ax,%ax
    48f0:	c3                   	retq   
    48f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    48f8:	00 00 00 00 
    48fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004900 <mbedtls_gcm_self_test>:
    4900:	f3 0f 1e fa          	endbr64 
    4904:	41 57                	push   %r15
    4906:	89 f8                	mov    %edi,%eax
    4908:	41 56                	push   %r14
    490a:	41 55                	push   %r13
    490c:	41 54                	push   %r12
    490e:	55                   	push   %rbp
    490f:	53                   	push   %rbx
    4910:	48 81 ec 98 02 00 00 	sub    $0x298,%rsp
    4917:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    491b:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
    4922:	00 00 
    4924:	48 89 bc 24 88 02 00 	mov    %rdi,0x288(%rsp)
    492b:	00 
    492c:	31 ff                	xor    %edi,%edi
    492e:	85 c0                	test   %eax,%eax
    4930:	0f 85 32 07 00 00    	jne    5068 <mbedtls_gcm_self_test+0x768>
    4936:	48 8d 05 23 c8 01 00 	lea    0x1c823(%rip),%rax        # 21160 <tag_test_data>
    493d:	c7 44 24 20 80 00 00 	movl   $0x80,0x20(%rsp)
    4944:	00 
    4945:	4c 8d ac 24 80 00 00 	lea    0x80(%rsp),%r13
    494c:	00 
    494d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    4952:	48 8d 05 27 c9 01 00 	lea    0x1c927(%rip),%rax        # 21280 <ct_test_data>
    4959:	4d 89 ef             	mov    %r13,%r15
    495c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    4961:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    4966:	81 7c 24 20 c0 00 00 	cmpl   $0xc0,0x20(%rsp)
    496d:	00 
    496e:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    4975:	00 00 
    4977:	0f 94 44 24 6f       	sete   0x6f(%rsp)
    497c:	45 31 e4             	xor    %r12d,%r12d
    497f:	48 89 04 24          	mov    %rax,(%rsp)
    4983:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    4988:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    498d:	8b 44 24 08          	mov    0x8(%rsp),%eax
    4991:	44 8b 4c 24 24       	mov    0x24(%rsp),%r9d
    4996:	b9 35 00 00 00       	mov    $0x35,%ecx
    499b:	4c 89 ff             	mov    %r15,%rdi
    499e:	89 44 24 68          	mov    %eax,0x68(%rsp)
    49a2:	31 c0                	xor    %eax,%eax
    49a4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    49a7:	45 85 c9             	test   %r9d,%r9d
    49aa:	0f 85 80 05 00 00    	jne    4f30 <mbedtls_gcm_self_test+0x630>
    49b0:	49 c1 e4 05          	shl    $0x5,%r12
    49b4:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    49b8:	be 02 00 00 00       	mov    $0x2,%esi
    49bd:	4c 89 ff             	mov    %r15,%rdi
    49c0:	48 8d 05 b9 d2 01 00 	lea    0x1d2b9(%rip),%rax        # 21c80 <key_test_data>
    49c7:	4c 01 e0             	add    %r12,%rax
    49ca:	48 89 c2             	mov    %rax,%rdx
    49cd:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    49d2:	e8 c9 f3 ff ff       	callq  3da0 <mbedtls_gcm_setkey>
    49d7:	41 89 c6             	mov    %eax,%r14d
    49da:	83 f8 8e             	cmp    $0xffffff8e,%eax
    49dd:	75 0b                	jne    49ea <mbedtls_gcm_self_test+0xea>
    49df:	80 7c 24 6f 00       	cmpb   $0x0,0x6f(%rsp)
    49e4:	0f 85 3e 07 00 00    	jne    5128 <mbedtls_gcm_self_test+0x828>
    49ea:	45 85 f6             	test   %r14d,%r14d
    49ed:	0f 85 e5 06 00 00    	jne    50d8 <mbedtls_gcm_self_test+0x7d8>
    49f3:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    49f8:	48 8d 05 41 d3 01 00 	lea    0x1d341(%rip),%rax        # 21d40 <key_index_test_data>
    49ff:	48 83 ec 08          	sub    $0x8,%rsp
    4a03:	48 8d 35 f6 cc 01 00 	lea    0x1ccf6(%rip),%rsi        # 21700 <pt_test_data>
    4a0a:	48 8d 15 af ce 01 00 	lea    0x1ceaf(%rip),%rdx        # 218c0 <additional_test_data>
    4a11:	48 63 04 98          	movslq (%rax,%rbx,4),%rax
    4a15:	48 c1 e0 06          	shl    $0x6,%rax
    4a19:	48 01 c6             	add    %rax,%rsi
    4a1c:	48 8d 05 3d d0 01 00 	lea    0x1d03d(%rip),%rax        # 21a60 <add_len_test_data>
    4a23:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    4a27:	48 8d 05 12 d0 01 00 	lea    0x1d012(%rip),%rax        # 21a40 <add_index_test_data>
    4a2e:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    4a33:	48 63 04 98          	movslq (%rax,%rbx,4),%rax
    4a37:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
    4a3c:	48 c1 e0 06          	shl    $0x6,%rax
    4a40:	4c 8d 0c 10          	lea    (%rax,%rdx,1),%r9
    4a44:	48 8d 05 f5 d1 01 00 	lea    0x1d1f5(%rip),%rax        # 21c40 <iv_len_test_data>
    4a4b:	4c 8b 04 d8          	mov    (%rax,%rbx,8),%r8
    4a4f:	48 8d 05 ca d1 01 00 	lea    0x1d1ca(%rip),%rax        # 21c20 <iv_index_test_data>
    4a56:	48 8d 15 43 d0 01 00 	lea    0x1d043(%rip),%rdx        # 21aa0 <iv_test_data>
    4a5d:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
    4a62:	48 63 04 98          	movslq (%rax,%rbx,4),%rax
    4a66:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    4a6b:	48 c1 e0 06          	shl    $0x6,%rax
    4a6f:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    4a73:	48 8d 05 06 ce 01 00 	lea    0x1ce06(%rip),%rax        # 21880 <pt_len_test_data>
    4a7a:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    4a7f:	4c 8b 24 d8          	mov    (%rax,%rbx,8),%r12
    4a83:	48 8d 9c 24 38 02 00 	lea    0x238(%rsp),%rbx
    4a8a:	00 
    4a8b:	53                   	push   %rbx
    4a8c:	6a 10                	pushq  $0x10
    4a8e:	4c 89 e2             	mov    %r12,%rdx
    4a91:	4c 8d ac 24 58 02 00 	lea    0x258(%rsp),%r13
    4a98:	00 
    4a99:	41 55                	push   %r13
    4a9b:	56                   	push   %rsi
    4a9c:	be 01 00 00 00       	mov    $0x1,%esi
    4aa1:	57                   	push   %rdi
    4aa2:	4c 89 ff             	mov    %r15,%rdi
    4aa5:	e8 b6 fc ff ff       	callq  4760 <mbedtls_gcm_crypt_and_tag>
    4aaa:	48 83 c4 30          	add    $0x30,%rsp
    4aae:	41 89 c6             	mov    %eax,%r14d
    4ab1:	85 c0                	test   %eax,%eax
    4ab3:	0f 85 1f 06 00 00    	jne    50d8 <mbedtls_gcm_self_test+0x7d8>
    4ab9:	48 8b 34 24          	mov    (%rsp),%rsi
    4abd:	4c 89 e2             	mov    %r12,%rdx
    4ac0:	4c 89 ef             	mov    %r13,%rdi
    4ac3:	e8 d8 e7 ff ff       	callq  32a0 <memcmp@plt>
    4ac8:	85 c0                	test   %eax,%eax
    4aca:	75 18                	jne    4ae4 <mbedtls_gcm_self_test+0x1e4>
    4acc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    4ad1:	48 8b 03             	mov    (%rbx),%rax
    4ad4:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    4ad8:	48 33 06             	xor    (%rsi),%rax
    4adb:	48 33 6e 08          	xor    0x8(%rsi),%rbp
    4adf:	48 09 c5             	or     %rax,%rbp
    4ae2:	74 4c                	je     4b30 <mbedtls_gcm_self_test+0x230>
    4ae4:	4d 89 fd             	mov    %r15,%r13
    4ae7:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    4aed:	8b 44 24 24          	mov    0x24(%rsp),%eax
    4af1:	85 c0                	test   %eax,%eax
    4af3:	0f 85 f1 05 00 00    	jne    50ea <mbedtls_gcm_self_test+0x7ea>
    4af9:	4c 89 ef             	mov    %r13,%rdi
    4afc:	e8 4f f0 ff ff       	callq  3b50 <mbedtls_gcm_free.part.0>
    4b01:	48 8b 84 24 88 02 00 	mov    0x288(%rsp),%rax
    4b08:	00 
    4b09:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4b10:	00 00 
    4b12:	0f 85 35 06 00 00    	jne    514d <mbedtls_gcm_self_test+0x84d>
    4b18:	48 81 c4 98 02 00 00 	add    $0x298,%rsp
    4b1f:	44 89 f8             	mov    %r15d,%eax
    4b22:	5b                   	pop    %rbx
    4b23:	5d                   	pop    %rbp
    4b24:	41 5c                	pop    %r12
    4b26:	41 5d                	pop    %r13
    4b28:	41 5e                	pop    %r14
    4b2a:	41 5f                	pop    %r15
    4b2c:	c3                   	retq   
    4b2d:	0f 1f 00             	nopl   (%rax)
    4b30:	4c 89 ff             	mov    %r15,%rdi
    4b33:	e8 18 f0 ff ff       	callq  3b50 <mbedtls_gcm_free.part.0>
    4b38:	44 8b 44 24 24       	mov    0x24(%rsp),%r8d
    4b3d:	45 85 c0             	test   %r8d,%r8d
    4b40:	0f 85 4a 04 00 00    	jne    4f90 <mbedtls_gcm_self_test+0x690>
    4b46:	b9 35 00 00 00       	mov    $0x35,%ecx
    4b4b:	4c 89 ff             	mov    %r15,%rdi
    4b4e:	48 89 e8             	mov    %rbp,%rax
    4b51:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4b54:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    4b58:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4b5d:	be 02 00 00 00       	mov    $0x2,%esi
    4b62:	4c 89 ff             	mov    %r15,%rdi
    4b65:	e8 36 f2 ff ff       	callq  3da0 <mbedtls_gcm_setkey>
    4b6a:	41 89 c6             	mov    %eax,%r14d
    4b6d:	85 c0                	test   %eax,%eax
    4b6f:	0f 85 63 05 00 00    	jne    50d8 <mbedtls_gcm_self_test+0x7d8>
    4b75:	48 83 ec 08          	sub    $0x8,%rsp
    4b79:	4c 89 e2             	mov    %r12,%rdx
    4b7c:	31 f6                	xor    %esi,%esi
    4b7e:	4c 89 ff             	mov    %r15,%rdi
    4b81:	53                   	push   %rbx
    4b82:	6a 10                	pushq  $0x10
    4b84:	41 55                	push   %r13
    4b86:	ff 74 24 20          	pushq  0x20(%rsp)
    4b8a:	ff 74 24 70          	pushq  0x70(%rsp)
    4b8e:	4c 8b 8c 24 80 00 00 	mov    0x80(%rsp),%r9
    4b95:	00 
    4b96:	4c 8b 44 24 68       	mov    0x68(%rsp),%r8
    4b9b:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    4ba0:	e8 bb fb ff ff       	callq  4760 <mbedtls_gcm_crypt_and_tag>
    4ba5:	48 83 c4 30          	add    $0x30,%rsp
    4ba9:	41 89 c6             	mov    %eax,%r14d
    4bac:	85 c0                	test   %eax,%eax
    4bae:	0f 85 24 05 00 00    	jne    50d8 <mbedtls_gcm_self_test+0x7d8>
    4bb4:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4bb9:	4c 89 e2             	mov    %r12,%rdx
    4bbc:	4c 89 ef             	mov    %r13,%rdi
    4bbf:	e8 dc e6 ff ff       	callq  32a0 <memcmp@plt>
    4bc4:	85 c0                	test   %eax,%eax
    4bc6:	0f 85 18 ff ff ff    	jne    4ae4 <mbedtls_gcm_self_test+0x1e4>
    4bcc:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    4bd1:	48 8b 03             	mov    (%rbx),%rax
    4bd4:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    4bd8:	48 33 01             	xor    (%rcx),%rax
    4bdb:	48 33 69 08          	xor    0x8(%rcx),%rbp
    4bdf:	48 09 c5             	or     %rax,%rbp
    4be2:	0f 85 fc fe ff ff    	jne    4ae4 <mbedtls_gcm_self_test+0x1e4>
    4be8:	4c 89 ff             	mov    %r15,%rdi
    4beb:	e8 60 ef ff ff       	callq  3b50 <mbedtls_gcm_free.part.0>
    4bf0:	8b 7c 24 24          	mov    0x24(%rsp),%edi
    4bf4:	85 ff                	test   %edi,%edi
    4bf6:	0f 85 dc 03 00 00    	jne    4fd8 <mbedtls_gcm_self_test+0x6d8>
    4bfc:	b9 35 00 00 00       	mov    $0x35,%ecx
    4c01:	4c 89 ff             	mov    %r15,%rdi
    4c04:	48 89 e8             	mov    %rbp,%rax
    4c07:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4c0a:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    4c0e:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4c13:	be 02 00 00 00       	mov    $0x2,%esi
    4c18:	4c 89 ff             	mov    %r15,%rdi
    4c1b:	e8 80 f1 ff ff       	callq  3da0 <mbedtls_gcm_setkey>
    4c20:	41 89 c6             	mov    %eax,%r14d
    4c23:	85 c0                	test   %eax,%eax
    4c25:	0f 85 ad 04 00 00    	jne    50d8 <mbedtls_gcm_self_test+0x7d8>
    4c2b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    4c30:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    4c35:	be 01 00 00 00       	mov    $0x1,%esi
    4c3a:	4c 89 ff             	mov    %r15,%rdi
    4c3d:	e8 6e f3 ff ff       	callq  3fb0 <mbedtls_gcm_starts>
    4c42:	41 89 c6             	mov    %eax,%r14d
    4c45:	85 c0                	test   %eax,%eax
    4c47:	0f 85 8b 04 00 00    	jne    50d8 <mbedtls_gcm_self_test+0x7d8>
    4c4d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    4c52:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    4c57:	4c 89 ff             	mov    %r15,%rdi
    4c5a:	e8 11 f5 ff ff       	callq  4170 <mbedtls_gcm_update_ad>
    4c5f:	41 89 c6             	mov    %eax,%r14d
    4c62:	85 c0                	test   %eax,%eax
    4c64:	0f 85 6e 04 00 00    	jne    50d8 <mbedtls_gcm_self_test+0x7d8>
    4c6a:	49 83 fc 20          	cmp    $0x20,%r12
    4c6e:	0f 86 6c 02 00 00    	jbe    4ee0 <mbedtls_gcm_self_test+0x5e0>
    4c74:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
    4c79:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4c7e:	4c 89 e9             	mov    %r13,%rcx
    4c81:	4c 89 ff             	mov    %r15,%rdi
    4c84:	49 89 c1             	mov    %rax,%r9
    4c87:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    4c8d:	ba 20 00 00 00       	mov    $0x20,%edx
    4c92:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4c97:	49 8d 6c 24 e0       	lea    -0x20(%r12),%rbp
    4c9c:	e8 7f f6 ff ff       	callq  4320 <mbedtls_gcm_update>
    4ca1:	85 c0                	test   %eax,%eax
    4ca3:	0f 85 6f 04 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4ca9:	48 83 7c 24 78 20    	cmpq   $0x20,0x78(%rsp)
    4caf:	0f 85 6b 02 00 00    	jne    4f20 <mbedtls_gcm_self_test+0x620>
    4cb5:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4cba:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4cbf:	48 89 ea             	mov    %rbp,%rdx
    4cc2:	4c 89 ff             	mov    %r15,%rdi
    4cc5:	48 8d 8c 24 60 02 00 	lea    0x260(%rsp),%rcx
    4ccc:	00 
    4ccd:	41 b8 20 00 00 00    	mov    $0x20,%r8d
    4cd3:	48 83 c6 20          	add    $0x20,%rsi
    4cd7:	e8 44 f6 ff ff       	callq  4320 <mbedtls_gcm_update>
    4cdc:	85 c0                	test   %eax,%eax
    4cde:	0f 85 34 04 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4ce4:	48 39 6c 24 78       	cmp    %rbp,0x78(%rsp)
    4ce9:	0f 85 31 02 00 00    	jne    4f20 <mbedtls_gcm_self_test+0x620>
    4cef:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    4cf4:	31 d2                	xor    %edx,%edx
    4cf6:	31 f6                	xor    %esi,%esi
    4cf8:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    4cfe:	49 89 d8             	mov    %rbx,%r8
    4d01:	4c 89 ff             	mov    %r15,%rdi
    4d04:	e8 97 f8 ff ff       	callq  45a0 <mbedtls_gcm_finish>
    4d09:	85 c0                	test   %eax,%eax
    4d0b:	0f 85 07 04 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4d11:	48 8b 34 24          	mov    (%rsp),%rsi
    4d15:	4c 89 e2             	mov    %r12,%rdx
    4d18:	4c 89 ef             	mov    %r13,%rdi
    4d1b:	e8 80 e5 ff ff       	callq  32a0 <memcmp@plt>
    4d20:	85 c0                	test   %eax,%eax
    4d22:	0f 85 bc fd ff ff    	jne    4ae4 <mbedtls_gcm_self_test+0x1e4>
    4d28:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    4d2d:	48 8b 03             	mov    (%rbx),%rax
    4d30:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    4d34:	48 33 02             	xor    (%rdx),%rax
    4d37:	48 33 6a 08          	xor    0x8(%rdx),%rbp
    4d3b:	48 09 c5             	or     %rax,%rbp
    4d3e:	0f 85 a0 fd ff ff    	jne    4ae4 <mbedtls_gcm_self_test+0x1e4>
    4d44:	4c 89 ff             	mov    %r15,%rdi
    4d47:	e8 04 ee ff ff       	callq  3b50 <mbedtls_gcm_free.part.0>
    4d4c:	8b 74 24 24          	mov    0x24(%rsp),%esi
    4d50:	85 f6                	test   %esi,%esi
    4d52:	0f 85 c8 02 00 00    	jne    5020 <mbedtls_gcm_self_test+0x720>
    4d58:	b9 35 00 00 00       	mov    $0x35,%ecx
    4d5d:	4c 89 ff             	mov    %r15,%rdi
    4d60:	48 89 e8             	mov    %rbp,%rax
    4d63:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4d66:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    4d6a:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    4d6f:	be 02 00 00 00       	mov    $0x2,%esi
    4d74:	4c 89 ff             	mov    %r15,%rdi
    4d77:	e8 24 f0 ff ff       	callq  3da0 <mbedtls_gcm_setkey>
    4d7c:	85 c0                	test   %eax,%eax
    4d7e:	0f 85 94 03 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4d84:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    4d89:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    4d8e:	31 f6                	xor    %esi,%esi
    4d90:	4c 89 ff             	mov    %r15,%rdi
    4d93:	e8 18 f2 ff ff       	callq  3fb0 <mbedtls_gcm_starts>
    4d98:	85 c0                	test   %eax,%eax
    4d9a:	0f 85 78 03 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4da0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    4da5:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    4daa:	4c 89 ff             	mov    %r15,%rdi
    4dad:	e8 be f3 ff ff       	callq  4170 <mbedtls_gcm_update_ad>
    4db2:	85 c0                	test   %eax,%eax
    4db4:	0f 85 5e 03 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4dba:	49 83 fc 20          	cmp    $0x20,%r12
    4dbe:	0f 86 94 01 00 00    	jbe    4f58 <mbedtls_gcm_self_test+0x658>
    4dc4:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4dc9:	48 8b 34 24          	mov    (%rsp),%rsi
    4dcd:	4c 89 e9             	mov    %r13,%rcx
    4dd0:	4c 89 ff             	mov    %r15,%rdi
    4dd3:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    4dd9:	ba 20 00 00 00       	mov    $0x20,%edx
    4dde:	49 8d 6c 24 e0       	lea    -0x20(%r12),%rbp
    4de3:	e8 38 f5 ff ff       	callq  4320 <mbedtls_gcm_update>
    4de8:	85 c0                	test   %eax,%eax
    4dea:	0f 85 28 03 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4df0:	48 83 7c 24 78 20    	cmpq   $0x20,0x78(%rsp)
    4df6:	0f 85 24 01 00 00    	jne    4f20 <mbedtls_gcm_self_test+0x620>
    4dfc:	48 8b 04 24          	mov    (%rsp),%rax
    4e00:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4e05:	48 89 ea             	mov    %rbp,%rdx
    4e08:	4c 89 ff             	mov    %r15,%rdi
    4e0b:	48 8d 8c 24 60 02 00 	lea    0x260(%rsp),%rcx
    4e12:	00 
    4e13:	41 b8 20 00 00 00    	mov    $0x20,%r8d
    4e19:	48 8d 70 20          	lea    0x20(%rax),%rsi
    4e1d:	e8 fe f4 ff ff       	callq  4320 <mbedtls_gcm_update>
    4e22:	85 c0                	test   %eax,%eax
    4e24:	0f 85 ee 02 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4e2a:	48 39 6c 24 78       	cmp    %rbp,0x78(%rsp)
    4e2f:	0f 85 eb 00 00 00    	jne    4f20 <mbedtls_gcm_self_test+0x620>
    4e35:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    4e3a:	31 d2                	xor    %edx,%edx
    4e3c:	31 f6                	xor    %esi,%esi
    4e3e:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    4e44:	49 89 d8             	mov    %rbx,%r8
    4e47:	4c 89 ff             	mov    %r15,%rdi
    4e4a:	e8 51 f7 ff ff       	callq  45a0 <mbedtls_gcm_finish>
    4e4f:	85 c0                	test   %eax,%eax
    4e51:	0f 85 c1 02 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4e57:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4e5c:	4c 89 e2             	mov    %r12,%rdx
    4e5f:	4c 89 ef             	mov    %r13,%rdi
    4e62:	e8 39 e4 ff ff       	callq  32a0 <memcmp@plt>
    4e67:	85 c0                	test   %eax,%eax
    4e69:	0f 85 75 fc ff ff    	jne    4ae4 <mbedtls_gcm_self_test+0x1e4>
    4e6f:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    4e74:	48 8b 03             	mov    (%rbx),%rax
    4e77:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    4e7b:	48 33 01             	xor    (%rcx),%rax
    4e7e:	48 33 51 08          	xor    0x8(%rcx),%rdx
    4e82:	48 09 c2             	or     %rax,%rdx
    4e85:	0f 85 59 fc ff ff    	jne    4ae4 <mbedtls_gcm_self_test+0x1e4>
    4e8b:	4c 89 ff             	mov    %r15,%rdi
    4e8e:	e8 bd ec ff ff       	callq  3b50 <mbedtls_gcm_free.part.0>
    4e93:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
    4e97:	85 c9                	test   %ecx,%ecx
    4e99:	74 0c                	je     4ea7 <mbedtls_gcm_self_test+0x5a7>
    4e9b:	48 8d 3d 40 e3 01 00 	lea    0x1e340(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    4ea2:	e8 59 e3 ff ff       	callq  3200 <puts@plt>
    4ea7:	48 83 44 24 08 01    	addq   $0x1,0x8(%rsp)
    4ead:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4eb2:	48 83 44 24 10 10    	addq   $0x10,0x10(%rsp)
    4eb8:	48 83 04 24 40       	addq   $0x40,(%rsp)
    4ebd:	48 89 c2             	mov    %rax,%rdx
    4ec0:	48 83 f8 06          	cmp    $0x6,%rax
    4ec4:	0f 84 c6 01 00 00    	je     5090 <mbedtls_gcm_self_test+0x790>
    4eca:	48 8d 05 6f ce 01 00 	lea    0x1ce6f(%rip),%rax        # 21d40 <key_index_test_data>
    4ed1:	4c 63 24 90          	movslq (%rax,%rdx,4),%r12
    4ed5:	e9 b3 fa ff ff       	jmpq   498d <mbedtls_gcm_self_test+0x8d>
    4eda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4ee0:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
    4ee5:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4eea:	4c 89 e9             	mov    %r13,%rcx
    4eed:	4c 89 e2             	mov    %r12,%rdx
    4ef0:	49 89 c1             	mov    %rax,%r9
    4ef3:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    4ef9:	4c 89 ff             	mov    %r15,%rdi
    4efc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4f01:	e8 1a f4 ff ff       	callq  4320 <mbedtls_gcm_update>
    4f06:	85 c0                	test   %eax,%eax
    4f08:	0f 85 0a 02 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4f0e:	4c 3b 64 24 78       	cmp    0x78(%rsp),%r12
    4f13:	0f 84 d6 fd ff ff    	je     4cef <mbedtls_gcm_self_test+0x3ef>
    4f19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4f20:	45 89 f7             	mov    %r14d,%r15d
    4f23:	e9 d9 fb ff ff       	jmpq   4b01 <mbedtls_gcm_self_test+0x201>
    4f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4f2f:	00 
    4f30:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    4f34:	8b 54 24 20          	mov    0x20(%rsp),%edx
    4f38:	4c 8d 05 9a c1 01 00 	lea    0x1c19a(%rip),%r8        # 210d9 <_IO_stdin_used+0xd9>
    4f3f:	48 8d 35 97 c1 01 00 	lea    0x1c197(%rip),%rsi        # 210dd <_IO_stdin_used+0xdd>
    4f46:	bf 01 00 00 00       	mov    $0x1,%edi
    4f4b:	e8 f0 e3 ff ff       	callq  3340 <__printf_chk@plt>
    4f50:	e9 5b fa ff ff       	jmpq   49b0 <mbedtls_gcm_self_test+0xb0>
    4f55:	0f 1f 00             	nopl   (%rax)
    4f58:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    4f5d:	48 8b 34 24          	mov    (%rsp),%rsi
    4f61:	4c 89 e9             	mov    %r13,%rcx
    4f64:	4c 89 e2             	mov    %r12,%rdx
    4f67:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    4f6d:	4c 89 ff             	mov    %r15,%rdi
    4f70:	e8 ab f3 ff ff       	callq  4320 <mbedtls_gcm_update>
    4f75:	85 c0                	test   %eax,%eax
    4f77:	0f 85 9b 01 00 00    	jne    5118 <mbedtls_gcm_self_test+0x818>
    4f7d:	4c 3b 64 24 78       	cmp    0x78(%rsp),%r12
    4f82:	0f 84 ad fe ff ff    	je     4e35 <mbedtls_gcm_self_test+0x535>
    4f88:	eb 96                	jmp    4f20 <mbedtls_gcm_self_test+0x620>
    4f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4f90:	48 8d 3d 4b e2 01 00 	lea    0x1e24b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    4f97:	e8 64 e2 ff ff       	callq  3200 <puts@plt>
    4f9c:	48 89 e8             	mov    %rbp,%rax
    4f9f:	4c 89 ff             	mov    %r15,%rdi
    4fa2:	b9 35 00 00 00       	mov    $0x35,%ecx
    4fa7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4faa:	8b 54 24 20          	mov    0x20(%rsp),%edx
    4fae:	31 c0                	xor    %eax,%eax
    4fb0:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
    4fb4:	4c 8d 05 43 c1 01 00 	lea    0x1c143(%rip),%r8        # 210fe <_IO_stdin_used+0xfe>
    4fbb:	48 8d 35 1b c1 01 00 	lea    0x1c11b(%rip),%rsi        # 210dd <_IO_stdin_used+0xdd>
    4fc2:	bf 01 00 00 00       	mov    $0x1,%edi
    4fc7:	e8 74 e3 ff ff       	callq  3340 <__printf_chk@plt>
    4fcc:	e9 83 fb ff ff       	jmpq   4b54 <mbedtls_gcm_self_test+0x254>
    4fd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4fd8:	48 8d 3d 03 e2 01 00 	lea    0x1e203(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    4fdf:	e8 1c e2 ff ff       	callq  3200 <puts@plt>
    4fe4:	48 89 e8             	mov    %rbp,%rax
    4fe7:	4c 89 ff             	mov    %r15,%rdi
    4fea:	b9 35 00 00 00       	mov    $0x35,%ecx
    4fef:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4ff2:	8b 54 24 20          	mov    0x20(%rsp),%edx
    4ff6:	31 c0                	xor    %eax,%eax
    4ff8:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
    4ffc:	4c 8d 05 d6 c0 01 00 	lea    0x1c0d6(%rip),%r8        # 210d9 <_IO_stdin_used+0xd9>
    5003:	48 8d 35 26 c1 01 00 	lea    0x1c126(%rip),%rsi        # 21130 <_IO_stdin_used+0x130>
    500a:	bf 01 00 00 00       	mov    $0x1,%edi
    500f:	e8 2c e3 ff ff       	callq  3340 <__printf_chk@plt>
    5014:	e9 f1 fb ff ff       	jmpq   4c0a <mbedtls_gcm_self_test+0x30a>
    5019:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5020:	48 8d 3d bb e1 01 00 	lea    0x1e1bb(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    5027:	e8 d4 e1 ff ff       	callq  3200 <puts@plt>
    502c:	48 89 e8             	mov    %rbp,%rax
    502f:	4c 89 ff             	mov    %r15,%rdi
    5032:	b9 35 00 00 00       	mov    $0x35,%ecx
    5037:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    503a:	8b 54 24 20          	mov    0x20(%rsp),%edx
    503e:	31 c0                	xor    %eax,%eax
    5040:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
    5044:	4c 8d 05 b3 c0 01 00 	lea    0x1c0b3(%rip),%r8        # 210fe <_IO_stdin_used+0xfe>
    504b:	48 8d 35 de c0 01 00 	lea    0x1c0de(%rip),%rsi        # 21130 <_IO_stdin_used+0x130>
    5052:	bf 01 00 00 00       	mov    $0x1,%edi
    5057:	e8 e4 e2 ff ff       	callq  3340 <__printf_chk@plt>
    505c:	e9 05 fd ff ff       	jmpq   4d66 <mbedtls_gcm_self_test+0x466>
    5061:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5068:	bf 02 00 00 00       	mov    $0x2,%edi
    506d:	e8 6e 02 00 00       	callq  52e0 <mbedtls_aesni_has_support>
    5072:	85 c0                	test   %eax,%eax
    5074:	0f 84 86 00 00 00    	je     5100 <mbedtls_gcm_self_test+0x800>
    507a:	48 8d 3d 3f c0 01 00 	lea    0x1c03f(%rip),%rdi        # 210c0 <_IO_stdin_used+0xc0>
    5081:	e8 7a e1 ff ff       	callq  3200 <puts@plt>
    5086:	e9 ab f8 ff ff       	jmpq   4936 <mbedtls_gcm_self_test+0x36>
    508b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5090:	83 44 24 20 40       	addl   $0x40,0x20(%rsp)
    5095:	8b 44 24 20          	mov    0x20(%rsp),%eax
    5099:	48 83 44 24 58 60    	addq   $0x60,0x58(%rsp)
    509f:	48 81 44 24 60 80 01 	addq   $0x180,0x60(%rsp)
    50a6:	00 00 
    50a8:	3d 40 01 00 00       	cmp    $0x140,%eax
    50ad:	0f 85 ae f8 ff ff    	jne    4961 <mbedtls_gcm_self_test+0x61>
    50b3:	8b 54 24 24          	mov    0x24(%rsp),%edx
    50b7:	45 89 f7             	mov    %r14d,%r15d
    50ba:	85 d2                	test   %edx,%edx
    50bc:	0f 84 3f fa ff ff    	je     4b01 <mbedtls_gcm_self_test+0x201>
    50c2:	bf 0a 00 00 00       	mov    $0xa,%edi
    50c7:	45 31 ff             	xor    %r15d,%r15d
    50ca:	e8 21 e1 ff ff       	callq  31f0 <putchar@plt>
    50cf:	e9 2d fa ff ff       	jmpq   4b01 <mbedtls_gcm_self_test+0x201>
    50d4:	0f 1f 40 00          	nopl   0x0(%rax)
    50d8:	8b 44 24 24          	mov    0x24(%rsp),%eax
    50dc:	4d 89 fd             	mov    %r15,%r13
    50df:	45 89 f7             	mov    %r14d,%r15d
    50e2:	85 c0                	test   %eax,%eax
    50e4:	0f 84 0f fa ff ff    	je     4af9 <mbedtls_gcm_self_test+0x1f9>
    50ea:	48 8d 3d cc e9 01 00 	lea    0x1e9cc(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    50f1:	e8 0a e1 ff ff       	callq  3200 <puts@plt>
    50f6:	e9 fe f9 ff ff       	jmpq   4af9 <mbedtls_gcm_self_test+0x1f9>
    50fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5100:	48 8d 3d 01 c0 01 00 	lea    0x1c001(%rip),%rdi        # 21108 <_IO_stdin_used+0x108>
    5107:	e8 f4 e0 ff ff       	callq  3200 <puts@plt>
    510c:	e9 25 f8 ff ff       	jmpq   4936 <mbedtls_gcm_self_test+0x36>
    5111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5118:	4d 89 fd             	mov    %r15,%r13
    511b:	41 89 c7             	mov    %eax,%r15d
    511e:	e9 ca f9 ff ff       	jmpq   4aed <mbedtls_gcm_self_test+0x1ed>
    5123:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5128:	48 8d 3d c7 bf 01 00 	lea    0x1bfc7(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
    512f:	e8 cc e0 ff ff       	callq  3200 <puts@plt>
    5134:	83 44 24 20 40       	addl   $0x40,0x20(%rsp)
    5139:	48 83 44 24 58 60    	addq   $0x60,0x58(%rsp)
    513f:	48 81 44 24 60 80 01 	addq   $0x180,0x60(%rsp)
    5146:	00 00 
    5148:	e9 14 f8 ff ff       	jmpq   4961 <mbedtls_gcm_self_test+0x61>
    514d:	e8 0e e1 ff ff       	callq  3260 <__stack_chk_fail@plt>
    5152:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5159:	00 00 00 
    515c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005160 <mbedtls_get_unaligned_uint16>:
    5160:	f3 0f 1e fa          	endbr64 
    5164:	0f b7 07             	movzwl (%rdi),%eax
    5167:	c3                   	retq   
    5168:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    516f:	00 

0000000000005170 <mbedtls_put_unaligned_uint16>:
    5170:	f3 0f 1e fa          	endbr64 
    5174:	66 89 37             	mov    %si,(%rdi)
    5177:	c3                   	retq   
    5178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    517f:	00 

0000000000005180 <mbedtls_get_unaligned_uint32>:
    5180:	f3 0f 1e fa          	endbr64 
    5184:	8b 07                	mov    (%rdi),%eax
    5186:	c3                   	retq   
    5187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    518e:	00 00 

0000000000005190 <mbedtls_put_unaligned_uint32>:
    5190:	f3 0f 1e fa          	endbr64 
    5194:	89 37                	mov    %esi,(%rdi)
    5196:	c3                   	retq   
    5197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    519e:	00 00 

00000000000051a0 <mbedtls_get_unaligned_uint64>:
    51a0:	f3 0f 1e fa          	endbr64 
    51a4:	48 8b 07             	mov    (%rdi),%rax
    51a7:	c3                   	retq   
    51a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    51af:	00 

00000000000051b0 <mbedtls_put_unaligned_uint64>:
    51b0:	f3 0f 1e fa          	endbr64 
    51b4:	48 89 37             	mov    %rsi,(%rdi)
    51b7:	c3                   	retq   
    51b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    51bf:	00 

00000000000051c0 <mbedtls_xor>:
    51c0:	f3 0f 1e fa          	endbr64 
    51c4:	48 83 f9 03          	cmp    $0x3,%rcx
    51c8:	76 46                	jbe    5210 <mbedtls_xor+0x50>
    51ca:	b8 04 00 00 00       	mov    $0x4,%eax
    51cf:	90                   	nop
    51d0:	44 8b 44 02 fc       	mov    -0x4(%rdx,%rax,1),%r8d
    51d5:	44 33 44 06 fc       	xor    -0x4(%rsi,%rax,1),%r8d
    51da:	44 89 44 07 fc       	mov    %r8d,-0x4(%rdi,%rax,1)
    51df:	49 89 c0             	mov    %rax,%r8
    51e2:	48 83 c0 04          	add    $0x4,%rax
    51e6:	48 39 c1             	cmp    %rax,%rcx
    51e9:	73 e5                	jae    51d0 <mbedtls_xor+0x10>
    51eb:	4c 39 c1             	cmp    %r8,%rcx
    51ee:	76 16                	jbe    5206 <mbedtls_xor+0x46>
    51f0:	42 0f b6 04 06       	movzbl (%rsi,%r8,1),%eax
    51f5:	42 32 04 02          	xor    (%rdx,%r8,1),%al
    51f9:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
    51fd:	49 83 c0 01          	add    $0x1,%r8
    5201:	4c 39 c1             	cmp    %r8,%rcx
    5204:	75 ea                	jne    51f0 <mbedtls_xor+0x30>
    5206:	c3                   	retq   
    5207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    520e:	00 00 
    5210:	45 31 c0             	xor    %r8d,%r8d
    5213:	eb d6                	jmp    51eb <mbedtls_xor+0x2b>
    5215:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    521c:	00 00 00 00 

0000000000005220 <mbedtls_platform_zeroize>:
    5220:	e9 6b fb 02 00       	jmpq   34d90 <mbedtls_platform_zeroize.instr.bb_5220>
    5225:	85 f6                	test   %esi,%esi
    5227:	75 07                	jne    5230 <mbedtls_platform_zeroize+0x10>
    5229:	c3                   	retq   
    522a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5230:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    5237:	e9 24 e1 ff ff       	jmpq   3360 <__explicit_bzero_chk@plt>
    523c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005240 <mbedtls_platform_gmtime_r>:
    5240:	f3 0f 1e fa          	endbr64 
    5244:	e9 37 e0 ff ff       	jmpq   3280 <gmtime_r@plt>
    5249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005250 <mbedtls_ms_time>:
    5250:	f3 0f 1e fa          	endbr64 
    5254:	48 83 ec 28          	sub    $0x28,%rsp
    5258:	bf 01 00 00 00       	mov    $0x1,%edi
    525d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5264:	00 00 
    5266:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    526b:	31 c0                	xor    %eax,%eax
    526d:	48 89 e6             	mov    %rsp,%rsi
    5270:	e8 bb df ff ff       	callq  3230 <clock_gettime@plt>
    5275:	85 c0                	test   %eax,%eax
    5277:	75 47                	jne    52c0 <mbedtls_ms_time+0x70>
    5279:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    527e:	48 69 0c 24 e8 03 00 	imul   $0x3e8,(%rsp),%rcx
    5285:	00 
    5286:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    528d:	de 1b 43 
    5290:	48 89 f0             	mov    %rsi,%rax
    5293:	48 c1 fe 3f          	sar    $0x3f,%rsi
    5297:	48 f7 ea             	imul   %rdx
    529a:	48 c1 fa 12          	sar    $0x12,%rdx
    529e:	48 29 f2             	sub    %rsi,%rdx
    52a1:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    52a5:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    52aa:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    52b1:	00 00 
    52b3:	75 1b                	jne    52d0 <mbedtls_ms_time+0x80>
    52b5:	48 83 c4 28          	add    $0x28,%rsp
    52b9:	c3                   	retq   
    52ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    52c0:	31 ff                	xor    %edi,%edi
    52c2:	e8 59 e0 ff ff       	callq  3320 <time@plt>
    52c7:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
    52ce:	eb d5                	jmp    52a5 <mbedtls_ms_time+0x55>
    52d0:	e8 8b df ff ff       	callq  3260 <__stack_chk_fail@plt>
    52d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    52dc:	00 00 00 
    52df:	90                   	nop

00000000000052e0 <mbedtls_aesni_has_support>:
    52e0:	e9 bb fa 02 00       	jmpq   34da0 <mbedtls_aesni_has_support.instr.bb_52e0>
    52e5:	05 6a ad 02 00       	add    $0x2ad6a,%eax
    52ea:	85 c0                	test   %eax,%eax
    52ec:	75 2a                	jne    5318 <mbedtls_aesni_has_support+0x38>
    52ee:	e9 d0 fa 02 00       	jmpq   34dc3 <instr.bb_52ee>
    52f3:	00 0f                	add    %cl,(%rdi)
    52f5:	a2 e9 d0 fa 02 00 ad 	movabs %al,0x2ad0002fad0e9
    52fc:	02 00 
    52fe:	85 3d 4c ad 02 00    	test   %edi,0x2ad4c(%rip)        # 30050 <c.3242>
    5304:	c7 05 46 ad 02 00 01 	movl   $0x1,0x2ad46(%rip)        # 30054 <done.3241>
    530b:	00 00 00 
    530e:	0f 95 c0             	setne  %al
    5311:	5b                   	pop    %rbx
    5312:	c3                   	retq   
    5313:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5318:	e9 03 fb 02 00       	jmpq   34e20 <instr.bb_5318>
    531d:	ad                   	lods   %ds:(%rsi),%eax
    531e:	02 00                	add    (%rax),%al
    5320:	0f 95 c0             	setne  %al
    5323:	c3                   	retq   
    5324:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    532b:	00 00 00 00 
    532f:	90                   	nop

0000000000005330 <mbedtls_aesni_crypt_ecb>:
    5330:	e9 0b fb 02 00       	jmpq   34e40 <mbedtls_aesni_crypt_ecb.instr.bb_5330>
    5335:	89 d0                	mov    %edx,%eax
    5337:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    533b:	8b 07                	mov    (%rdi),%eax
    533d:	48 8d 54 97 10       	lea    0x10(%rdi,%rdx,4),%rdx
    5342:	f3 41 0f 6f 00       	movdqu (%r8),%xmm0
    5347:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    534b:	66 0f ef c1          	pxor   %xmm1,%xmm0
    534f:	48 83 c2 10          	add    $0x10,%rdx
    5353:	83 e8 01             	sub    $0x1,%eax
    5356:	85 f6                	test   %esi,%esi
    5358:	74 1d                	je     5377 <mbedtls_aesni_crypt_ecb+0x47>
    535a:	e9 30 fb 02 00       	jmpq   34e8f <instr.bb_535a>
    535f:	0f 38 dc             	(bad)  
    5362:	c1 48 83 c2          	rorl   $0xc2,-0x7d(%rax)
    5366:	10 83 e8 01 75 ee    	adc    %al,-0x118afe18(%rbx)
    536c:	e9 3c fb 02 00       	jmpq   34ead <instr.bb_536c>
    5371:	0f 38 dd             	(bad)  
    5374:	c1 eb 1b             	shr    $0x1b,%ebx
    5377:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    537b:	66 0f 38 de c1       	aesdec %xmm1,%xmm0
    5380:	48 83 c2 10          	add    $0x10,%rdx
    5384:	83 e8 01             	sub    $0x1,%eax
    5387:	75 ee                	jne    5377 <mbedtls_aesni_crypt_ecb+0x47>
    5389:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    538d:	66 0f 38 df c1       	aesdeclast %xmm1,%xmm0
    5392:	e9 39 fb 02 00       	jmpq   34ed0 <instr.bb_5392>
    5397:	c0 c3 0f             	rol    $0xf,%bl
    539a:	1f                   	(bad)  
    539b:	80 00 00             	addb   $0x0,(%rax)
	...

00000000000053a0 <mbedtls_aesni_gcm_mult>:
    53a0:	e9 4b fb 02 00       	jmpq   34ef0 <mbedtls_aesni_gcm_mult.instr.bb_53a0>
    53a5:	83 ec 48             	sub    $0x48,%esp
    53a8:	31 c9                	xor    %ecx,%ecx
    53aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    53b1:	00 00 
    53b3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    53b8:	31 c0                	xor    %eax,%eax
    53ba:	49 89 e1             	mov    %rsp,%r9
    53bd:	b8 10 00 00 00       	mov    $0x10,%eax
    53c2:	4c 8d 54 24 10       	lea    0x10(%rsp),%r10
    53c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    53ce:	00 00 
    53d0:	e9 8b fb 02 00       	jmpq   34f60 <instr.bb_53d0>
    53d5:	ff 45 88             	incl   -0x78(%rbp)
    53d8:	04 09                	add    $0x9,%al
    53da:	44 0f b6 44 02 ff    	movzbl -0x1(%rdx,%rax,1),%r8d
    53e0:	45 88 04 0a          	mov    %r8b,(%r10,%rcx,1)
    53e4:	48 83 c1 01          	add    $0x1,%rcx
    53e8:	48 83 e8 01          	sub    $0x1,%rax
    53ec:	75 e2                	jne    53d0 <mbedtls_aesni_gcm_mult+0x30>
    53ee:	e9 db fb 02 00       	jmpq   34fce <instr.bb_53ee>
    53f3:	90                   	nop
    53f4:	90                   	nop
    53f5:	90                   	nop
    53f6:	90                   	nop
    53f7:	90                   	nop
    53f8:	90                   	nop
    53f9:	90                   	nop
    53fa:	90                   	nop
    53fb:	90                   	nop
    53fc:	90                   	nop
    53fd:	90                   	nop
    53fe:	90                   	nop
    53ff:	90                   	nop
    5400:	90                   	nop
    5401:	90                   	nop
    5402:	90                   	nop
    5403:	90                   	nop
    5404:	90                   	nop
    5405:	90                   	nop
    5406:	90                   	nop
    5407:	90                   	nop
    5408:	90                   	nop
    5409:	90                   	nop
    540a:	90                   	nop
    540b:	90                   	nop
    540c:	90                   	nop
    540d:	90                   	nop
    540e:	90                   	nop
    540f:	90                   	nop
    5410:	90                   	nop
    5411:	90                   	nop
    5412:	90                   	nop
    5413:	90                   	nop
    5414:	90                   	nop
    5415:	90                   	nop
    5416:	90                   	nop
    5417:	90                   	nop
    5418:	90                   	nop
    5419:	90                   	nop
    541a:	90                   	nop
    541b:	90                   	nop
    541c:	90                   	nop
    541d:	90                   	nop
    541e:	90                   	nop
    541f:	90                   	nop
    5420:	90                   	nop
    5421:	90                   	nop
    5422:	90                   	nop
    5423:	90                   	nop
    5424:	90                   	nop
    5425:	90                   	nop
    5426:	90                   	nop
    5427:	90                   	nop
    5428:	90                   	nop
    5429:	90                   	nop
    542a:	90                   	nop
    542b:	90                   	nop
    542c:	90                   	nop
    542d:	90                   	nop
    542e:	90                   	nop
    542f:	90                   	nop
    5430:	90                   	nop
    5431:	90                   	nop
    5432:	90                   	nop
    5433:	90                   	nop
    5434:	90                   	nop
    5435:	90                   	nop
    5436:	90                   	nop
    5437:	90                   	nop
    5438:	90                   	nop
    5439:	90                   	nop
    543a:	90                   	nop
    543b:	90                   	nop
    543c:	90                   	nop
    543d:	90                   	nop
    543e:	90                   	nop
    543f:	90                   	nop
    5440:	90                   	nop
    5441:	90                   	nop
    5442:	90                   	nop
    5443:	90                   	nop
    5444:	90                   	nop
    5445:	90                   	nop
    5446:	90                   	nop
    5447:	90                   	nop
    5448:	90                   	nop
    5449:	90                   	nop
    544a:	90                   	nop
    544b:	90                   	nop
    544c:	90                   	nop
    544d:	90                   	nop
    544e:	90                   	nop
    544f:	90                   	nop
    5450:	90                   	nop
    5451:	90                   	nop
    5452:	90                   	nop
    5453:	90                   	nop
    5454:	90                   	nop
    5455:	90                   	nop
    5456:	90                   	nop
    5457:	90                   	nop
    5458:	90                   	nop
    5459:	90                   	nop
    545a:	90                   	nop
    545b:	90                   	nop
    545c:	90                   	nop
    545d:	90                   	nop
    545e:	90                   	nop
    545f:	90                   	nop
    5460:	90                   	nop
    5461:	90                   	nop
    5462:	90                   	nop
    5463:	90                   	nop
    5464:	90                   	nop
    5465:	90                   	nop
    5466:	90                   	nop
    5467:	90                   	nop
    5468:	90                   	nop
    5469:	90                   	nop
    546a:	90                   	nop
    546b:	90                   	nop
    546c:	90                   	nop
    546d:	90                   	nop
    546e:	90                   	nop
    546f:	90                   	nop
    5470:	90                   	nop
    5471:	90                   	nop
    5472:	90                   	nop
    5473:	90                   	nop
    5474:	90                   	nop
    5475:	90                   	nop
    5476:	90                   	nop
    5477:	90                   	nop
    5478:	90                   	nop
    5479:	90                   	nop
    547a:	90                   	nop
    547b:	90                   	nop
    547c:	90                   	nop
    547d:	90                   	nop
    547e:	90                   	nop
    547f:	90                   	nop
    5480:	90                   	nop
    5481:	90                   	nop
    5482:	90                   	nop
    5483:	90                   	nop
    5484:	90                   	nop
    5485:	90                   	nop
    5486:	90                   	nop
    5487:	90                   	nop
    5488:	90                   	nop
    5489:	90                   	nop
    548a:	e9 81 fc 02 00       	jmpq   35110 <instr.bb_5508>
    548f:	f5                   	cmc    
    5490:	39 66 0f             	cmp    %esp,0xf(%rsi)
    5493:	ef                   	out    %eax,(%dx)
    5494:	dc 66 0f             	fsubl  0xf(%rsi)
    5497:	ef                   	out    %eax,(%dx)
    5498:	dd 66 0f             	frstor 0xf(%rsi)
    549b:	73 fb                	jae    5498 <mbedtls_aesni_gcm_mult+0xf8>
    549d:	08 66 0f             	or     %ah,0xf(%rsi)
    54a0:	ef                   	out    %eax,(%dx)
    54a1:	cb                   	lret   
    54a2:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    54a6:	66 0f 6f e1          	movdqa %xmm1,%xmm4
    54aa:	66 0f 6f e9          	movdqa %xmm1,%xmm5
    54ae:	66 0f 73 d0 01       	psrlq  $0x1,%xmm0
    54b3:	66 0f 73 d4 02       	psrlq  $0x2,%xmm4
    54b8:	66 0f 73 d5 07       	psrlq  $0x7,%xmm5
    54bd:	66 0f ef c4          	pxor   %xmm4,%xmm0
    54c1:	66 0f ef c5          	pxor   %xmm5,%xmm0
    54c5:	66 0f 6f d9          	movdqa %xmm1,%xmm3
    54c9:	66 0f 6f e1          	movdqa %xmm1,%xmm4
    54cd:	66 0f 6f e9          	movdqa %xmm1,%xmm5
    54d1:	66 0f 73 f3 3f       	psllq  $0x3f,%xmm3
    54d6:	66 0f 73 f4 3e       	psllq  $0x3e,%xmm4
    54db:	66 0f 73 f5 39       	psllq  $0x39,%xmm5
    54e0:	66 0f ef dc          	pxor   %xmm4,%xmm3
    54e4:	66 0f ef dd          	pxor   %xmm5,%xmm3
    54e8:	66 0f 73 db 08       	psrldq $0x8,%xmm3
    54ed:	66 0f ef c3          	pxor   %xmm3,%xmm0
    54f1:	66 0f ef c1          	pxor   %xmm1,%xmm0
    54f5:	66 0f ef c2          	pxor   %xmm2,%xmm0
    54f9:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
    54fd:	48 8d 44 24 2f       	lea    0x2f(%rsp),%rax
    5502:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5508:	eb 80                	jmp    548a <mbedtls_aesni_gcm_mult+0xea>
    550a:	10 e9                	adc    %ch,%cl
    550c:	0b fc                	or     %esp,%edi
    550e:	02 00                	add    (%rax),%al
    5510:	57                   	push   %rdi
    5511:	ff 48 89             	decl   -0x77(%rax)
    5514:	c2 48 83             	retq   $0x8348
    5517:	e8 01 48 39 ca       	callq  ffffffffca399d1d <.instr.bb_20898+0xffffffffca363d4d>
    551c:	75 ea                	jne    5508 <mbedtls_aesni_gcm_mult+0x168>
    551e:	e9 21 fc 02 00       	jmpq   35144 <instr.bb_551e>
    5523:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    552a:	00 00 
    552c:	75 05                	jne    5533 <mbedtls_aesni_gcm_mult+0x193>
    552e:	e9 25 fc 02 00       	jmpq   35158 <instr.bb_552e>
    5533:	e8 28 dd ff ff       	callq  3260 <__stack_chk_fail@plt>
    5538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    553f:	00 

0000000000005540 <mbedtls_aesni_inverse_key>:
    5540:	f3 0f 1e fa          	endbr64 
    5544:	89 d1                	mov    %edx,%ecx
    5546:	48 83 c7 10          	add    $0x10,%rdi
    554a:	c1 e1 04             	shl    $0x4,%ecx
    554d:	48 63 c9             	movslq %ecx,%rcx
    5550:	48 01 f1             	add    %rsi,%rcx
    5553:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
    5557:	4c 8d 41 f0          	lea    -0x10(%rcx),%r8
    555b:	0f 11 47 f0          	movups %xmm0,-0x10(%rdi)
    555f:	4c 39 c6             	cmp    %r8,%rsi
    5562:	73 49                	jae    55ad <mbedtls_aesni_inverse_key+0x6d>
    5564:	4c 89 c0             	mov    %r8,%rax
    5567:	48 89 fa             	mov    %rdi,%rdx
    556a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5570:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    5574:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
    5579:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
    557d:	48 83 e8 10          	sub    $0x10,%rax
    5581:	48 83 c2 10          	add    $0x10,%rdx
    5585:	48 39 c6             	cmp    %rax,%rsi
    5588:	72 e6                	jb     5570 <mbedtls_aesni_inverse_key+0x30>
    558a:	48 29 f1             	sub    %rsi,%rcx
    558d:	48 8d 41 ef          	lea    -0x11(%rcx),%rax
    5591:	48 c1 e8 04          	shr    $0x4,%rax
    5595:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5599:	48 f7 d0             	not    %rax
    559c:	48 c1 e0 04          	shl    $0x4,%rax
    55a0:	49 01 c0             	add    %rax,%r8
    55a3:	48 89 d0             	mov    %rdx,%rax
    55a6:	48 c1 e0 04          	shl    $0x4,%rax
    55aa:	48 01 c7             	add    %rax,%rdi
    55ad:	f3 41 0f 6f 08       	movdqu (%r8),%xmm1
    55b2:	0f 11 0f             	movups %xmm1,(%rdi)
    55b5:	c3                   	retq   
    55b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    55bd:	00 00 00 

00000000000055c0 <mbedtls_aesni_setkey_enc>:
    55c0:	e9 9b fb 02 00       	jmpq   35160 <mbedtls_aesni_setkey_enc.instr.bb_55c0>
    55c5:	81 fa c0 00 00 00    	cmp    $0xc0,%edx
    55cb:	0f 84 9f 01 00 00    	je     5770 <mbedtls_aesni_setkey_enc+0x1b0>
    55d1:	e9 9d fb 02 00       	jmpq   35173 <instr.bb_55d1>
    55d6:	00 00                	add    %al,(%rax)
    55d8:	0f 84 c2 00 00 00    	je     56a0 <mbedtls_aesni_setkey_enc+0xe0>
    55de:	e9 9d fb 02 00       	jmpq   35180 <instr.bb_55de>
    55e3:	48 81 fa 80 00 00 00 	cmp    $0x80,%rdx
    55ea:	74 04                	je     55f0 <mbedtls_aesni_setkey_enc+0x30>
    55ec:	c3                   	retq   
    55ed:	0f 1f 00             	nopl   (%rax)
    55f0:	e9 ab fb 02 00       	jmpq   351a0 <instr.bb_55f0>
    55f5:	0f 7f 07             	movq   %mm0,(%rdi)
    55f8:	eb 2d                	jmp    5627 <mbedtls_aesni_setkey_enc+0x67>
    55fa:	e9 cc fb 02 00       	jmpq   351cb <instr.bb_55fa>
    55ff:	90                   	nop
    5600:	90                   	nop
    5601:	90                   	nop
    5602:	90                   	nop
    5603:	90                   	nop
    5604:	90                   	nop
    5605:	90                   	nop
    5606:	90                   	nop
    5607:	90                   	nop
    5608:	90                   	nop
    5609:	90                   	nop
    560a:	90                   	nop
    560b:	90                   	nop
    560c:	90                   	nop
    560d:	90                   	nop
    560e:	90                   	nop
    560f:	90                   	nop
    5610:	90                   	nop
    5611:	90                   	nop
    5612:	90                   	nop
    5613:	90                   	nop
    5614:	90                   	nop
    5615:	90                   	nop
    5616:	90                   	nop
    5617:	e9 64 fc 02 00       	jmpq   35280 <instr.bb_5695>
    561c:	ef                   	out    %eax,(%dx)
    561d:	c1 48 83 c7          	rorl   $0xc7,-0x7d(%rax)
    5621:	10 f3                	adc    %dh,%bl
    5623:	0f 7f 07             	movq   %mm0,(%rdi)
    5626:	c3                   	retq   
    5627:	e9 e4 fb 02 00       	jmpq   35210 <instr.bb_5627>
    562c:	01 e8                	add    %ebp,%eax
    562e:	c8 ff ff ff          	enterq $0xffff,$0xff
    5632:	e9 e6 fb 02 00       	jmpq   3521d <instr.bb_5632>
    5637:	02 e8                	add    %al,%ch
    5639:	bd ff ff ff e9       	mov    $0xe9ffffff,%ebp
    563e:	e6 fb                	out    %al,$0xfb
    5640:	02 00                	add    (%rax),%al
    5642:	04 e8                	add    $0xe8,%al
    5644:	b2 ff                	mov    $0xff,%dl
    5646:	ff                   	(bad)  
    5647:	ff                   	(bad)  
    5648:	e9 e6 fb 02 00       	jmpq   35233 <instr.bb_5648>
    564d:	08 e8                	or     %ch,%al
    564f:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    5650:	ff                   	(bad)  
    5651:	ff                   	(bad)  
    5652:	ff                   	(bad)  
    5653:	e9 e6 fb 02 00       	jmpq   3523e <instr.bb_5653>
    5658:	10 e8                	adc    %ch,%al
    565a:	9c                   	pushfq 
    565b:	ff                   	(bad)  
    565c:	ff                   	(bad)  
    565d:	ff                   	(bad)  
    565e:	e9 e6 fb 02 00       	jmpq   35249 <instr.bb_565e>
    5663:	20 e8                	and    %ch,%al
    5665:	91                   	xchg   %eax,%ecx
    5666:	ff                   	(bad)  
    5667:	ff                   	(bad)  
    5668:	ff                   	(bad)  
    5669:	e9 e6 fb 02 00       	jmpq   35254 <instr.bb_5669>
    566e:	40 e8 86 ff ff ff    	rex callq 55fa <mbedtls_aesni_setkey_enc+0x3a>
    5674:	e9 e6 fb 02 00       	jmpq   3525f <instr.bb_5674>
    5679:	80 e8 7b             	sub    $0x7b,%al
    567c:	ff                   	(bad)  
    567d:	ff                   	(bad)  
    567e:	ff                   	(bad)  
    567f:	e9 e6 fb 02 00       	jmpq   3526a <instr.bb_567f>
    5684:	1b e8                	sbb    %eax,%ebp
    5686:	70 ff                	jo     5687 <mbedtls_aesni_setkey_enc+0xc7>
    5688:	ff                   	(bad)  
    5689:	ff                   	(bad)  
    568a:	e9 e6 fb 02 00       	jmpq   35275 <instr.bb_568a>
    568f:	36 e8 65 ff ff ff    	ss callq 55fa <mbedtls_aesni_setkey_enc+0x3a>
    5695:	eb 80                	jmp    5617 <mbedtls_aesni_setkey_enc+0x57>
    5697:	c3                   	retq   
    5698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    569f:	00 
    56a0:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    56a4:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    56a8:	48 83 c7 10          	add    $0x10,%rdi
    56ac:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    56b1:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
    56b5:	eb 5f                	jmp    5716 <mbedtls_aesni_setkey_enc+0x156>
    56b7:	66 0f 70 d2 ff       	pshufd $0xff,%xmm2,%xmm2
    56bc:	66 0f ef d0          	pxor   %xmm0,%xmm2
    56c0:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    56c5:	66 0f ef d0          	pxor   %xmm0,%xmm2
    56c9:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    56ce:	66 0f ef d0          	pxor   %xmm0,%xmm2
    56d2:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    56d7:	66 0f ef c2          	pxor   %xmm2,%xmm0
    56db:	48 83 c7 10          	add    $0x10,%rdi
    56df:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    56e3:	66 0f 3a df d0 00    	aeskeygenassist $0x0,%xmm0,%xmm2
    56e9:	66 0f 70 d2 aa       	pshufd $0xaa,%xmm2,%xmm2
    56ee:	66 0f ef d1          	pxor   %xmm1,%xmm2
    56f2:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
    56f7:	66 0f ef d1          	pxor   %xmm1,%xmm2
    56fb:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
    5700:	66 0f ef d1          	pxor   %xmm1,%xmm2
    5704:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
    5709:	66 0f ef ca          	pxor   %xmm2,%xmm1
    570d:	48 83 c7 10          	add    $0x10,%rdi
    5711:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
    5715:	c3                   	retq   
    5716:	66 0f 3a df d1 01    	aeskeygenassist $0x1,%xmm1,%xmm2
    571c:	e8 96 ff ff ff       	callq  56b7 <mbedtls_aesni_setkey_enc+0xf7>
    5721:	66 0f 3a df d1 02    	aeskeygenassist $0x2,%xmm1,%xmm2
    5727:	e8 8b ff ff ff       	callq  56b7 <mbedtls_aesni_setkey_enc+0xf7>
    572c:	66 0f 3a df d1 04    	aeskeygenassist $0x4,%xmm1,%xmm2
    5732:	e8 80 ff ff ff       	callq  56b7 <mbedtls_aesni_setkey_enc+0xf7>
    5737:	66 0f 3a df d1 08    	aeskeygenassist $0x8,%xmm1,%xmm2
    573d:	e8 75 ff ff ff       	callq  56b7 <mbedtls_aesni_setkey_enc+0xf7>
    5742:	66 0f 3a df d1 10    	aeskeygenassist $0x10,%xmm1,%xmm2
    5748:	e8 6a ff ff ff       	callq  56b7 <mbedtls_aesni_setkey_enc+0xf7>
    574d:	66 0f 3a df d1 20    	aeskeygenassist $0x20,%xmm1,%xmm2
    5753:	e8 5f ff ff ff       	callq  56b7 <mbedtls_aesni_setkey_enc+0xf7>
    5758:	66 0f 3a df d1 40    	aeskeygenassist $0x40,%xmm1,%xmm2
    575e:	e8 54 ff ff ff       	callq  56b7 <mbedtls_aesni_setkey_enc+0xf7>
    5763:	31 c0                	xor    %eax,%eax
    5765:	c3                   	retq   
    5766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    576d:	00 00 00 
    5770:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    5774:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    5778:	48 83 c7 10          	add    $0x10,%rdi
    577c:	f3 0f 7e 4e 10       	movq   0x10(%rsi),%xmm1
    5781:	66 0f d6 0f          	movq   %xmm1,(%rdi)
    5785:	48 83 c7 08          	add    $0x8,%rdi
    5789:	eb 47                	jmp    57d2 <mbedtls_aesni_setkey_enc+0x212>
    578b:	66 0f 70 d2 55       	pshufd $0x55,%xmm2,%xmm2
    5790:	66 0f ef d0          	pxor   %xmm0,%xmm2
    5794:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    5799:	66 0f ef d0          	pxor   %xmm0,%xmm2
    579d:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    57a2:	66 0f ef d0          	pxor   %xmm0,%xmm2
    57a6:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
    57ab:	66 0f ef c2          	pxor   %xmm2,%xmm0
    57af:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    57b3:	48 83 c7 10          	add    $0x10,%rdi
    57b7:	66 0f 70 d0 ff       	pshufd $0xff,%xmm0,%xmm2
    57bc:	66 0f ef d1          	pxor   %xmm1,%xmm2
    57c0:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
    57c5:	66 0f ef ca          	pxor   %xmm2,%xmm1
    57c9:	66 0f d6 0f          	movq   %xmm1,(%rdi)
    57cd:	48 83 c7 08          	add    $0x8,%rdi
    57d1:	c3                   	retq   
    57d2:	66 0f 3a df d1 01    	aeskeygenassist $0x1,%xmm1,%xmm2
    57d8:	e8 ae ff ff ff       	callq  578b <mbedtls_aesni_setkey_enc+0x1cb>
    57dd:	66 0f 3a df d1 02    	aeskeygenassist $0x2,%xmm1,%xmm2
    57e3:	e8 a3 ff ff ff       	callq  578b <mbedtls_aesni_setkey_enc+0x1cb>
    57e8:	66 0f 3a df d1 04    	aeskeygenassist $0x4,%xmm1,%xmm2
    57ee:	e8 98 ff ff ff       	callq  578b <mbedtls_aesni_setkey_enc+0x1cb>
    57f3:	66 0f 3a df d1 08    	aeskeygenassist $0x8,%xmm1,%xmm2
    57f9:	e8 8d ff ff ff       	callq  578b <mbedtls_aesni_setkey_enc+0x1cb>
    57fe:	66 0f 3a df d1 10    	aeskeygenassist $0x10,%xmm1,%xmm2
    5804:	e8 82 ff ff ff       	callq  578b <mbedtls_aesni_setkey_enc+0x1cb>
    5809:	66 0f 3a df d1 20    	aeskeygenassist $0x20,%xmm1,%xmm2
    580f:	e8 77 ff ff ff       	callq  578b <mbedtls_aesni_setkey_enc+0x1cb>
    5814:	66 0f 3a df d1 40    	aeskeygenassist $0x40,%xmm1,%xmm2
    581a:	e8 6c ff ff ff       	callq  578b <mbedtls_aesni_setkey_enc+0x1cb>
    581f:	66 0f 3a df d1 80    	aeskeygenassist $0x80,%xmm1,%xmm2
    5825:	e8 61 ff ff ff       	callq  578b <mbedtls_aesni_setkey_enc+0x1cb>
    582a:	31 c0                	xor    %eax,%eax
    582c:	c3                   	retq   
    582d:	0f 1f 00             	nopl   (%rax)

0000000000005830 <add_pkcs_padding>:
    5830:	f3 0f 1e fa          	endbr64 
    5834:	48 29 d6             	sub    %rdx,%rsi
    5837:	b9 00 00 00 00       	mov    $0x0,%ecx
    583c:	b8 00 00 00 00       	mov    $0x0,%eax
    5841:	41 89 f0             	mov    %esi,%r8d
    5844:	74 1c                	je     5862 <add_pkcs_padding+0x32>
    5846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    584d:	00 00 00 
    5850:	48 01 f8             	add    %rdi,%rax
    5853:	83 c1 01             	add    $0x1,%ecx
    5856:	44 88 04 10          	mov    %r8b,(%rax,%rdx,1)
    585a:	0f b6 c1             	movzbl %cl,%eax
    585d:	48 39 f0             	cmp    %rsi,%rax
    5860:	72 ee                	jb     5850 <add_pkcs_padding+0x20>
    5862:	c3                   	retq   
    5863:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    586a:	00 00 00 00 
    586e:	66 90                	xchg   %ax,%ax

0000000000005870 <get_pkcs_padding>:
    5870:	f3 0f 1e fa          	endbr64 
    5874:	48 85 ff             	test   %rdi,%rdi
    5877:	74 59                	je     58d2 <get_pkcs_padding+0x62>
    5879:	48 85 d2             	test   %rdx,%rdx
    587c:	74 54                	je     58d2 <get_pkcs_padding+0x62>
    587e:	0f b6 44 37 ff       	movzbl -0x1(%rdi,%rsi,1),%eax
    5883:	49 89 f2             	mov    %rsi,%r10
    5886:	49 29 c2             	sub    %rax,%r10
    5889:	48 39 f0             	cmp    %rsi,%rax
    588c:	49 89 c1             	mov    %rax,%r9
    588f:	0f 97 c1             	seta   %cl
    5892:	84 c0                	test   %al,%al
    5894:	4c 89 12             	mov    %r10,(%rdx)
    5897:	0f 94 c0             	sete   %al
    589a:	09 c1                	or     %eax,%ecx
    589c:	48 85 f6             	test   %rsi,%rsi
    589f:	74 24                	je     58c5 <get_pkcs_padding+0x55>
    58a1:	31 d2                	xor    %edx,%edx
    58a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    58a8:	0f b6 04 17          	movzbl (%rdi,%rdx,1),%eax
    58ac:	44 31 c8             	xor    %r9d,%eax
    58af:	49 39 d2             	cmp    %rdx,%r10
    58b2:	41 0f 96 c0          	setbe  %r8b
    58b6:	48 83 c2 01          	add    $0x1,%rdx
    58ba:	41 0f af c0          	imul   %r8d,%eax
    58be:	09 c1                	or     %eax,%ecx
    58c0:	48 39 d6             	cmp    %rdx,%rsi
    58c3:	75 e3                	jne    58a8 <get_pkcs_padding+0x38>
    58c5:	80 f9 01             	cmp    $0x1,%cl
    58c8:	19 c0                	sbb    %eax,%eax
    58ca:	f7 d0                	not    %eax
    58cc:	25 00 9e ff ff       	and    $0xffff9e00,%eax
    58d1:	c3                   	retq   
    58d2:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    58d7:	c3                   	retq   
    58d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    58df:	00 

00000000000058e0 <add_one_and_zeros_padding>:
    58e0:	f3 0f 1e fa          	endbr64 
    58e4:	48 29 d6             	sub    %rdx,%rsi
    58e7:	c6 04 17 80          	movb   $0x80,(%rdi,%rdx,1)
    58eb:	48 83 fe 01          	cmp    $0x1,%rsi
    58ef:	76 21                	jbe    5912 <add_one_and_zeros_padding+0x32>
    58f1:	b9 01 00 00 00       	mov    $0x1,%ecx
    58f6:	b8 01 00 00 00       	mov    $0x1,%eax
    58fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5900:	48 01 f8             	add    %rdi,%rax
    5903:	83 c1 01             	add    $0x1,%ecx
    5906:	c6 04 10 00          	movb   $0x0,(%rax,%rdx,1)
    590a:	0f b6 c1             	movzbl %cl,%eax
    590d:	48 39 f0             	cmp    %rsi,%rax
    5910:	72 ee                	jb     5900 <add_one_and_zeros_padding+0x20>
    5912:	c3                   	retq   
    5913:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    591a:	00 00 00 00 
    591e:	66 90                	xchg   %ax,%ax

0000000000005920 <add_zeros_and_len_padding>:
    5920:	f3 0f 1e fa          	endbr64 
    5924:	49 89 f0             	mov    %rsi,%r8
    5927:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    592b:	b8 01 00 00 00       	mov    $0x1,%eax
    5930:	49 29 d0             	sub    %rdx,%r8
    5933:	ba 01 00 00 00       	mov    $0x1,%edx
    5938:	49 83 f8 01          	cmp    $0x1,%r8
    593c:	76 14                	jbe    5952 <add_zeros_and_len_padding+0x32>
    593e:	66 90                	xchg   %ax,%ax
    5940:	48 01 f8             	add    %rdi,%rax
    5943:	83 c2 01             	add    $0x1,%edx
    5946:	c6 04 08 00          	movb   $0x0,(%rax,%rcx,1)
    594a:	0f b6 c2             	movzbl %dl,%eax
    594d:	4c 39 c0             	cmp    %r8,%rax
    5950:	72 ee                	jb     5940 <add_zeros_and_len_padding+0x20>
    5952:	44 88 44 37 ff       	mov    %r8b,-0x1(%rdi,%rsi,1)
    5957:	c3                   	retq   
    5958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    595f:	00 

0000000000005960 <get_zeros_and_len_padding>:
    5960:	f3 0f 1e fa          	endbr64 
    5964:	48 85 ff             	test   %rdi,%rdi
    5967:	74 50                	je     59b9 <get_zeros_and_len_padding+0x59>
    5969:	48 85 d2             	test   %rdx,%rdx
    596c:	74 4b                	je     59b9 <get_zeros_and_len_padding+0x59>
    596e:	0f b6 4c 37 ff       	movzbl -0x1(%rdi,%rsi,1),%ecx
    5973:	49 89 f0             	mov    %rsi,%r8
    5976:	48 89 c8             	mov    %rcx,%rax
    5979:	49 29 c8             	sub    %rcx,%r8
    597c:	48 39 f1             	cmp    %rsi,%rcx
    597f:	0f 97 c1             	seta   %cl
    5982:	84 c0                	test   %al,%al
    5984:	4c 89 02             	mov    %r8,(%rdx)
    5987:	0f 94 c0             	sete   %al
    598a:	09 c1                	or     %eax,%ecx
    598c:	48 83 ee 01          	sub    $0x1,%rsi
    5990:	74 1a                	je     59ac <get_zeros_and_len_padding+0x4c>
    5992:	31 d2                	xor    %edx,%edx
    5994:	0f 1f 40 00          	nopl   0x0(%rax)
    5998:	49 39 d0             	cmp    %rdx,%r8
    599b:	0f 96 c0             	setbe  %al
    599e:	f6 24 17             	mulb   (%rdi,%rdx,1)
    59a1:	48 83 c2 01          	add    $0x1,%rdx
    59a5:	09 c1                	or     %eax,%ecx
    59a7:	48 39 d6             	cmp    %rdx,%rsi
    59aa:	75 ec                	jne    5998 <get_zeros_and_len_padding+0x38>
    59ac:	80 f9 01             	cmp    $0x1,%cl
    59af:	19 c0                	sbb    %eax,%eax
    59b1:	f7 d0                	not    %eax
    59b3:	25 00 9e ff ff       	and    $0xffff9e00,%eax
    59b8:	c3                   	retq   
    59b9:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    59be:	c3                   	retq   
    59bf:	90                   	nop

00000000000059c0 <add_zeros_padding>:
    59c0:	f3 0f 1e fa          	endbr64 
    59c4:	48 39 f2             	cmp    %rsi,%rdx
    59c7:	73 13                	jae    59dc <add_zeros_padding+0x1c>
    59c9:	48 01 fa             	add    %rdi,%rdx
    59cc:	48 01 fe             	add    %rdi,%rsi
    59cf:	90                   	nop
    59d0:	c6 02 00             	movb   $0x0,(%rdx)
    59d3:	48 83 c2 01          	add    $0x1,%rdx
    59d7:	48 39 f2             	cmp    %rsi,%rdx
    59da:	75 f4                	jne    59d0 <add_zeros_padding+0x10>
    59dc:	c3                   	retq   
    59dd:	0f 1f 00             	nopl   (%rax)

00000000000059e0 <get_no_padding>:
    59e0:	f3 0f 1e fa          	endbr64 
    59e4:	48 85 ff             	test   %rdi,%rdi
    59e7:	74 0f                	je     59f8 <get_no_padding+0x18>
    59e9:	48 85 d2             	test   %rdx,%rdx
    59ec:	74 0a                	je     59f8 <get_no_padding+0x18>
    59ee:	48 89 32             	mov    %rsi,(%rdx)
    59f1:	31 c0                	xor    %eax,%eax
    59f3:	c3                   	retq   
    59f4:	0f 1f 40 00          	nopl   0x0(%rax)
    59f8:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    59fd:	c3                   	retq   
    59fe:	66 90                	xchg   %ax,%ax

0000000000005a00 <get_one_and_zeros_padding>:
    5a00:	f3 0f 1e fa          	endbr64 
    5a04:	48 85 ff             	test   %rdi,%rdi
    5a07:	74 5d                	je     5a66 <get_one_and_zeros_padding+0x66>
    5a09:	48 85 d2             	test   %rdx,%rdx
    5a0c:	74 58                	je     5a66 <get_one_and_zeros_padding+0x66>
    5a0e:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    5a15:	48 85 f6             	test   %rsi,%rsi
    5a18:	74 46                	je     5a60 <get_one_and_zeros_padding+0x60>
    5a1a:	45 31 c9             	xor    %r9d,%r9d
    5a1d:	41 ba 80 ff ff ff    	mov    $0xffffff80,%r10d
    5a23:	31 c9                	xor    %ecx,%ecx
    5a25:	0f 1f 00             	nopl   (%rax)
    5a28:	48 83 ee 01          	sub    $0x1,%rsi
    5a2c:	89 c8                	mov    %ecx,%eax
    5a2e:	80 3c 37 00          	cmpb   $0x0,(%rdi,%rsi,1)
    5a32:	41 0f 95 c0          	setne  %r8b
    5a36:	44 09 c1             	or     %r8d,%ecx
    5a39:	31 c8                	xor    %ecx,%eax
    5a3b:	44 0f b6 c0          	movzbl %al,%r8d
    5a3f:	4c 0f af c6          	imul   %rsi,%r8
    5a43:	4d 09 c1             	or     %r8,%r9
    5a46:	4c 89 0a             	mov    %r9,(%rdx)
    5a49:	f6 24 37             	mulb   (%rdi,%rsi,1)
    5a4c:	41 31 c2             	xor    %eax,%r10d
    5a4f:	48 85 f6             	test   %rsi,%rsi
    5a52:	75 d4                	jne    5a28 <get_one_and_zeros_padding+0x28>
    5a54:	45 84 d2             	test   %r10b,%r10b
    5a57:	75 07                	jne    5a60 <get_one_and_zeros_padding+0x60>
    5a59:	31 c0                	xor    %eax,%eax
    5a5b:	c3                   	retq   
    5a5c:	0f 1f 40 00          	nopl   0x0(%rax)
    5a60:	b8 00 9e ff ff       	mov    $0xffff9e00,%eax
    5a65:	c3                   	retq   
    5a66:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5a6b:	c3                   	retq   
    5a6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005a70 <get_zeros_padding>:
    5a70:	f3 0f 1e fa          	endbr64 
    5a74:	48 85 ff             	test   %rdi,%rdi
    5a77:	74 42                	je     5abb <get_zeros_padding+0x4b>
    5a79:	48 85 d2             	test   %rdx,%rdx
    5a7c:	74 3d                	je     5abb <get_zeros_padding+0x4b>
    5a7e:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    5a85:	45 31 c0             	xor    %r8d,%r8d
    5a88:	31 c9                	xor    %ecx,%ecx
    5a8a:	48 85 f6             	test   %rsi,%rsi
    5a8d:	74 29                	je     5ab8 <get_zeros_padding+0x48>
    5a8f:	90                   	nop
    5a90:	49 89 f1             	mov    %rsi,%r9
    5a93:	48 83 ee 01          	sub    $0x1,%rsi
    5a97:	89 c8                	mov    %ecx,%eax
    5a99:	80 3c 37 00          	cmpb   $0x0,(%rdi,%rsi,1)
    5a9d:	41 0f 95 c2          	setne  %r10b
    5aa1:	44 09 d1             	or     %r10d,%ecx
    5aa4:	31 c8                	xor    %ecx,%eax
    5aa6:	0f b6 c0             	movzbl %al,%eax
    5aa9:	49 0f af c1          	imul   %r9,%rax
    5aad:	49 09 c0             	or     %rax,%r8
    5ab0:	4c 89 02             	mov    %r8,(%rdx)
    5ab3:	48 85 f6             	test   %rsi,%rsi
    5ab6:	75 d8                	jne    5a90 <get_zeros_padding+0x20>
    5ab8:	31 c0                	xor    %eax,%eax
    5aba:	c3                   	retq   
    5abb:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5ac0:	c3                   	retq   
    5ac1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5ac8:	00 00 00 00 
    5acc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005ad0 <mbedtls_cipher_list>:
    5ad0:	f3 0f 1e fa          	endbr64 
    5ad4:	8b 05 7e a5 02 00    	mov    0x2a57e(%rip),%eax        # 30058 <supported_init>
    5ada:	85 c0                	test   %eax,%eax
    5adc:	75 42                	jne    5b20 <mbedtls_cipher_list+0x50>
    5ade:	8b 15 dc 81 02 00    	mov    0x281dc(%rip),%edx        # 2dcc0 <mbedtls_cipher_definitions>
    5ae4:	48 8d 05 95 c9 02 00 	lea    0x2c995(%rip),%rax        # 32480 <mbedtls_cipher_supported>
    5aeb:	85 d2                	test   %edx,%edx
    5aed:	74 21                	je     5b10 <mbedtls_cipher_list+0x40>
    5aef:	48 8d 0d ca 81 02 00 	lea    0x281ca(%rip),%rcx        # 2dcc0 <mbedtls_cipher_definitions>
    5af6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5afd:	00 00 00 
    5b00:	48 83 c1 10          	add    $0x10,%rcx
    5b04:	89 10                	mov    %edx,(%rax)
    5b06:	48 83 c0 04          	add    $0x4,%rax
    5b0a:	8b 11                	mov    (%rcx),%edx
    5b0c:	85 d2                	test   %edx,%edx
    5b0e:	75 f0                	jne    5b00 <mbedtls_cipher_list+0x30>
    5b10:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    5b16:	c7 05 38 a5 02 00 01 	movl   $0x1,0x2a538(%rip)        # 30058 <supported_init>
    5b1d:	00 00 00 
    5b20:	48 8d 05 59 c9 02 00 	lea    0x2c959(%rip),%rax        # 32480 <mbedtls_cipher_supported>
    5b27:	c3                   	retq   
    5b28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5b2f:	00 

0000000000005b30 <mbedtls_cipher_info_from_type>:
    5b30:	f3 0f 1e fa          	endbr64 
    5b34:	4c 8b 05 8d 81 02 00 	mov    0x2818d(%rip),%r8        # 2dcc8 <mbedtls_cipher_definitions+0x8>
    5b3b:	4d 85 c0             	test   %r8,%r8
    5b3e:	74 21                	je     5b61 <mbedtls_cipher_info_from_type+0x31>
    5b40:	48 8d 05 79 81 02 00 	lea    0x28179(%rip),%rax        # 2dcc0 <mbedtls_cipher_definitions>
    5b47:	eb 14                	jmp    5b5d <mbedtls_cipher_info_from_type+0x2d>
    5b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5b50:	4c 8b 40 18          	mov    0x18(%rax),%r8
    5b54:	48 83 c0 10          	add    $0x10,%rax
    5b58:	4d 85 c0             	test   %r8,%r8
    5b5b:	74 04                	je     5b61 <mbedtls_cipher_info_from_type+0x31>
    5b5d:	39 38                	cmp    %edi,(%rax)
    5b5f:	75 ef                	jne    5b50 <mbedtls_cipher_info_from_type+0x20>
    5b61:	4c 89 c0             	mov    %r8,%rax
    5b64:	c3                   	retq   
    5b65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5b6c:	00 00 00 00 

0000000000005b70 <mbedtls_cipher_info_from_string>:
    5b70:	f3 0f 1e fa          	endbr64 
    5b74:	41 54                	push   %r12
    5b76:	55                   	push   %rbp
    5b77:	53                   	push   %rbx
    5b78:	48 85 ff             	test   %rdi,%rdi
    5b7b:	74 41                	je     5bbe <mbedtls_cipher_info_from_string+0x4e>
    5b7d:	4c 8b 25 44 81 02 00 	mov    0x28144(%rip),%r12        # 2dcc8 <mbedtls_cipher_definitions+0x8>
    5b84:	4d 85 e4             	test   %r12,%r12
    5b87:	74 2d                	je     5bb6 <mbedtls_cipher_info_from_string+0x46>
    5b89:	48 89 fd             	mov    %rdi,%rbp
    5b8c:	48 8d 1d 2d 81 02 00 	lea    0x2812d(%rip),%rbx        # 2dcc0 <mbedtls_cipher_definitions>
    5b93:	eb 10                	jmp    5ba5 <mbedtls_cipher_info_from_string+0x35>
    5b95:	0f 1f 00             	nopl   (%rax)
    5b98:	4c 8b 63 18          	mov    0x18(%rbx),%r12
    5b9c:	48 83 c3 10          	add    $0x10,%rbx
    5ba0:	4d 85 e4             	test   %r12,%r12
    5ba3:	74 11                	je     5bb6 <mbedtls_cipher_info_from_string+0x46>
    5ba5:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    5baa:	48 89 ee             	mov    %rbp,%rsi
    5bad:	e8 1e d7 ff ff       	callq  32d0 <strcmp@plt>
    5bb2:	85 c0                	test   %eax,%eax
    5bb4:	75 e2                	jne    5b98 <mbedtls_cipher_info_from_string+0x28>
    5bb6:	4c 89 e0             	mov    %r12,%rax
    5bb9:	5b                   	pop    %rbx
    5bba:	5d                   	pop    %rbp
    5bbb:	41 5c                	pop    %r12
    5bbd:	c3                   	retq   
    5bbe:	45 31 e4             	xor    %r12d,%r12d
    5bc1:	eb f3                	jmp    5bb6 <mbedtls_cipher_info_from_string+0x46>
    5bc3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5bca:	00 00 00 00 
    5bce:	66 90                	xchg   %ax,%ax

0000000000005bd0 <mbedtls_cipher_info_from_values>:
    5bd0:	e9 bb f6 02 00       	jmpq   35290 <mbedtls_cipher_info_from_values.instr.bb_5bd0>
    5bd5:	8b 05 ed 80 02 00    	mov    0x280ed(%rip),%eax        # 2dcc8 <mbedtls_cipher_definitions+0x8>
    5bdb:	48 85 c0             	test   %rax,%rax
    5bde:	74 30                	je     5c10 <mbedtls_cipher_info_from_values+0x40>
    5be0:	e9 c1 f6 02 00       	jmpq   352a6 <instr.bb_5be0>
    5be5:	02 00                	add    (%rax),%al
    5be7:	eb 14                	jmp    5bfd <mbedtls_cipher_info_from_values+0x2d>
    5be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5bf0:	48 8b 41 18          	mov    0x18(%rcx),%rax
    5bf4:	48 83 c1 10          	add    $0x10,%rcx
    5bf8:	48 85 c0             	test   %rax,%rax
    5bfb:	74 13                	je     5c10 <mbedtls_cipher_info_from_values+0x40>
    5bfd:	e9 be f6 02 00       	jmpq   352c0 <instr.bb_5bfd>
    5c02:	39 38                	cmp    %edi,(%rax)
    5c04:	75 ea                	jne    5bf0 <mbedtls_cipher_info_from_values+0x20>
    5c06:	e9 c4 f6 02 00       	jmpq   352cf <instr.bb_5c06>
    5c0b:	e9 c8 f6 02 00       	jmpq   352d8 <instr.bb_5c0b>
    5c10:	c3                   	retq   
    5c11:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5c18:	00 00 00 00 
    5c1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005c20 <mbedtls_cipher_init>:
    5c20:	f3 0f 1e fa          	endbr64 
    5c24:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    5c2b:	48 89 f9             	mov    %rdi,%rcx
    5c2e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    5c32:	31 c0                	xor    %eax,%eax
    5c34:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
    5c3b:	00 
    5c3c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5c40:	48 29 f9             	sub    %rdi,%rcx
    5c43:	83 c1 60             	add    $0x60,%ecx
    5c46:	c1 e9 03             	shr    $0x3,%ecx
    5c49:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5c4c:	c3                   	retq   
    5c4d:	0f 1f 00             	nopl   (%rax)

0000000000005c50 <mbedtls_cipher_free>:
    5c50:	e9 9b f6 02 00       	jmpq   352f0 <mbedtls_cipher_free.instr.bb_5c50>
    5c55:	85 ff                	test   %edi,%edi
    5c57:	74 47                	je     5ca0 <mbedtls_cipher_free+0x50>
    5c59:	e9 a9 f6 02 00       	jmpq   35307 <instr.bb_5c59>
    5c5e:	8b 7f 58             	mov    0x58(%rdi),%edi
    5c61:	48 85 ff             	test   %rdi,%rdi
    5c64:	74 13                	je     5c79 <mbedtls_cipher_free+0x29>
    5c66:	e9 b7 f6 02 00       	jmpq   35322 <instr.bb_5c66>
    5c6b:	e8 b0 f5 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    5c70:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    5c74:	e8 67 d5 ff ff       	callq  31e0 <free@plt>
    5c79:	e9 c2 f6 02 00       	jmpq   35340 <instr.bb_5c79>
    5c7e:	85 ff                	test   %edi,%edi
    5c80:	74 0b                	je     5c8d <mbedtls_cipher_free+0x3d>
    5c82:	e9 cd f6 02 00       	jmpq   35354 <instr.bb_5c82>
    5c87:	8b 40 28             	mov    0x28(%rax),%eax
    5c8a:	ff 50 58             	callq  *0x58(%rax)
    5c8d:	e9 cd f6 02 00       	jmpq   3535f <instr.bb_5c8d>
    5c92:	00 00                	add    %al,(%rax)
    5c94:	00 5d e9             	add    %bl,-0x17(%rbp)
    5c97:	85 f5                	test   %esi,%ebp
    5c99:	ff                   	(bad)  
    5c9a:	ff 0f                	decl   (%rdi)
    5c9c:	1f                   	(bad)  
    5c9d:	44 00 00             	add    %r8b,(%rax)
    5ca0:	c3                   	retq   
    5ca1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5ca8:	00 00 00 00 
    5cac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005cb0 <mbedtls_cipher_setup>:
    5cb0:	e9 bb f6 02 00       	jmpq   35370 <mbedtls_cipher_setup.instr.bb_5cb0>
    5cb5:	85 f6                	test   %esi,%esi
    5cb7:	74 7b                	je     5d34 <mbedtls_cipher_setup+0x84>
    5cb9:	e9 d9 f6 02 00       	jmpq   35397 <instr.bb_5cb9>
    5cbe:	e9 20 f7 02 00       	jmpq   353e3 <instr.bb_5ceb>
    5cc3:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    5cc7:	48 89 d9             	mov    %rbx,%rcx
    5cca:	48 83 ec 08          	sub    $0x8,%rsp
    5cce:	48 c7 47 f8 00 00 00 	movq   $0x0,-0x8(%rdi)
    5cd5:	00 
    5cd6:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
    5cdd:	00 
    5cde:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5ce2:	48 29 f9             	sub    %rdi,%rcx
    5ce5:	83 c1 60             	add    $0x60,%ecx
    5ce8:	c1 e9 03             	shr    $0x3,%ecx
    5ceb:	eb d1                	jmp    5cbe <mbedtls_cipher_setup+0xe>
    5ced:	ab                   	stos   %eax,%es:(%rdi)
    5cee:	e9 2b f7 02 00       	jmpq   3541e <instr.bb_5cee>
    5cf3:	50                   	push   %rax
    5cf4:	50                   	push   %rax
    5cf5:	e9 60 f7 02 00       	jmpq   3545a <instr.bb_5cf5>
    5cfa:	85 c0                	test   %eax,%eax
    5cfc:	74 3c                	je     5d3a <mbedtls_cipher_setup+0x8a>
    5cfe:	e9 78 f7 02 00       	jmpq   3547b <instr.bb_5cfe>
    5d03:	89 2b                	mov    %ebp,(%rbx)
    5d05:	75 29                	jne    5d30 <mbedtls_cipher_setup+0x80>
    5d07:	e9 95 f7 02 00       	jmpq   354a1 <instr.bb_5d07>
    5d0c:	ff                   	(bad)  
    5d0d:	ff 48 89             	decl   -0x77(%rax)
    5d10:	43 10 48 8d          	rex.XB adc %cl,-0x73(%r8)
    5d14:	05 57 fb ff ff       	add    $0xfffffb57,%eax
    5d19:	48 89 43 18          	mov    %rax,0x18(%rbx)
    5d1d:	31 c0                	xor    %eax,%eax
    5d1f:	e9 95 f7 02 00       	jmpq   354b9 <instr.bb_5d1f>
    5d24:	5d                   	pop    %rbp
    5d25:	c3                   	retq   
    5d26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5d2d:	00 00 00 
    5d30:	31 c0                	xor    %eax,%eax
    5d32:	eb eb                	jmp    5d1f <mbedtls_cipher_setup+0x6f>
    5d34:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5d39:	c3                   	retq   
    5d3a:	b8 80 9e ff ff       	mov    $0xffff9e80,%eax
    5d3f:	eb de                	jmp    5d1f <mbedtls_cipher_setup+0x6f>
    5d41:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5d48:	00 00 00 00 
    5d4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005d50 <mbedtls_cipher_setkey>:
    5d50:	e9 6b f7 02 00       	jmpq   354c0 <mbedtls_cipher_setkey.instr.bb_5d50>
    5d55:	f9                   	stc    
    5d56:	01 77 3c             	add    %esi,0x3c(%rdi)
    5d59:	e9 72 f7 02 00       	jmpq   354d0 <instr.bb_5d59>
    5d5e:	c0 74 34 e9 7d       	shlb   $0x7d,-0x17(%rsp,%rsi,1)
    5d63:	f7 02 00 29 e9 81    	testl  $0x81e92900,(%rdx)
    5d69:	f7 02 00 e9 d6 f7    	testl  $0xf7d6e900,(%rdx)
    5d6f:	02 00                	add    (%rax),%al
    5d71:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    5d75:	83 f9 01             	cmp    $0x1,%ecx
    5d78:	74 0b                	je     5d85 <mbedtls_cipher_setkey+0x35>
    5d7a:	e9 b9 f7 02 00       	jmpq   35538 <instr.bb_5d7a>
    5d7f:	03 83 f8 02 77 1b    	add    0x1b7702f8(%rbx),%eax
    5d85:	eb e5                	jmp    5d6c <mbedtls_cipher_setkey+0x1c>
    5d87:	60                   	(bad)  
    5d88:	40 0f 1f 80 00 00 00 	rex nopl 0x0(%rax)
    5d8f:	00 
    5d90:	39 50 08             	cmp    %edx,0x8(%rax)
    5d93:	74 d2                	je     5d67 <mbedtls_cipher_setkey+0x17>
    5d95:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5d9a:	c3                   	retq   
    5d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5da0:	41 ff 60 48          	jmpq   *0x48(%r8)
    5da4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5dab:	00 00 00 00 
    5daf:	90                   	nop

0000000000005db0 <mbedtls_cipher_set_iv>:
    5db0:	f3 0f 1e fa          	endbr64 
    5db4:	48 8b 07             	mov    (%rdi),%rax
    5db7:	48 85 c0             	test   %rax,%rax
    5dba:	0f 84 ea 01 00 00    	je     5faa <mbedtls_cipher_set_iv+0x1fa>
    5dc0:	41 55                	push   %r13
    5dc2:	41 54                	push   %r12
    5dc4:	49 89 d4             	mov    %rdx,%r12
    5dc7:	55                   	push   %rbp
    5dc8:	53                   	push   %rbx
    5dc9:	48 83 ec 08          	sub    $0x8,%rsp
    5dcd:	48 83 fa 10          	cmp    $0x10,%rdx
    5dd1:	0f 87 c9 01 00 00    	ja     5fa0 <mbedtls_cipher_set_iv+0x1f0>
    5dd7:	48 89 fb             	mov    %rdi,%rbx
    5dda:	49 89 f5             	mov    %rsi,%r13
    5ddd:	f6 40 1c 01          	testb  $0x1,0x1c(%rax)
    5de1:	75 4d                	jne    5e30 <mbedtls_cipher_set_iv+0x80>
    5de3:	8b 68 18             	mov    0x18(%rax),%ebp
    5de6:	48 39 ea             	cmp    %rbp,%rdx
    5de9:	0f 82 79 01 00 00    	jb     5f68 <mbedtls_cipher_set_iv+0x1b8>
    5def:	8b 10                	mov    (%rax),%edx
    5df1:	83 fa 4c             	cmp    $0x4c,%edx
    5df4:	74 44                	je     5e3a <mbedtls_cipher_set_iv+0x8a>
    5df6:	49 83 fc 0c          	cmp    $0xc,%r12
    5dfa:	74 09                	je     5e05 <mbedtls_cipher_set_iv+0x55>
    5dfc:	83 fa 4d             	cmp    $0x4d,%edx
    5dff:	0f 84 63 01 00 00    	je     5f68 <mbedtls_cipher_set_iv+0x1b8>
    5e05:	8b 40 04             	mov    0x4(%rax),%eax
    5e08:	83 f8 06             	cmp    $0x6,%eax
    5e0b:	74 58                	je     5e65 <mbedtls_cipher_set_iv+0xb5>
    5e0d:	83 f8 09             	cmp    $0x9,%eax
    5e10:	0f 84 0a 01 00 00    	je     5f20 <mbedtls_cipher_set_iv+0x170>
    5e16:	31 c0                	xor    %eax,%eax
    5e18:	48 85 ed             	test   %rbp,%rbp
    5e1b:	75 6b                	jne    5e88 <mbedtls_cipher_set_iv+0xd8>
    5e1d:	48 83 c4 08          	add    $0x8,%rsp
    5e21:	5b                   	pop    %rbx
    5e22:	5d                   	pop    %rbp
    5e23:	41 5c                	pop    %r12
    5e25:	41 5d                	pop    %r13
    5e27:	c3                   	retq   
    5e28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5e2f:	00 
    5e30:	48 89 d5             	mov    %rdx,%rbp
    5e33:	8b 10                	mov    (%rax),%edx
    5e35:	83 fa 4c             	cmp    $0x4c,%edx
    5e38:	75 bc                	jne    5df6 <mbedtls_cipher_set_iv+0x46>
    5e3a:	49 83 fc 0c          	cmp    $0xc,%r12
    5e3e:	0f 85 24 01 00 00    	jne    5f68 <mbedtls_cipher_set_iv+0x1b8>
    5e44:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5e48:	31 d2                	xor    %edx,%edx
    5e4a:	4c 89 ee             	mov    %r13,%rsi
    5e4d:	e8 de 91 01 00       	callq  1f030 <mbedtls_chacha20_starts>
    5e52:	85 c0                	test   %eax,%eax
    5e54:	0f 85 0e 01 00 00    	jne    5f68 <mbedtls_cipher_set_iv+0x1b8>
    5e5a:	48 8b 03             	mov    (%rbx),%rax
    5e5d:	8b 40 04             	mov    0x4(%rax),%eax
    5e60:	83 f8 06             	cmp    $0x6,%eax
    5e63:	75 a8                	jne    5e0d <mbedtls_cipher_set_iv+0x5d>
    5e65:	8b 73 0c             	mov    0xc(%rbx),%esi
    5e68:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5e6c:	48 83 c4 08          	add    $0x8,%rsp
    5e70:	4c 89 e1             	mov    %r12,%rcx
    5e73:	5b                   	pop    %rbx
    5e74:	4c 89 ea             	mov    %r13,%rdx
    5e77:	5d                   	pop    %rbp
    5e78:	41 5c                	pop    %r12
    5e7a:	41 5d                	pop    %r13
    5e7c:	e9 2f e1 ff ff       	jmpq   3fb0 <mbedtls_gcm_starts>
    5e81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5e88:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    5e8c:	89 e8                	mov    %ebp,%eax
    5e8e:	83 fd 08             	cmp    $0x8,%ebp
    5e91:	72 5d                	jb     5ef0 <mbedtls_cipher_set_iv+0x140>
    5e93:	49 8b 45 00          	mov    0x0(%r13),%rax
    5e97:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    5e9b:	4c 89 ee             	mov    %r13,%rsi
    5e9e:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5ea2:	48 89 43 38          	mov    %rax,0x38(%rbx)
    5ea6:	89 e8                	mov    %ebp,%eax
    5ea8:	49 8b 54 05 f8       	mov    -0x8(%r13,%rax,1),%rdx
    5ead:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    5eb2:	48 29 f9             	sub    %rdi,%rcx
    5eb5:	8d 44 0d 00          	lea    0x0(%rbp,%rcx,1),%eax
    5eb9:	48 29 ce             	sub    %rcx,%rsi
    5ebc:	83 e0 f8             	and    $0xfffffff8,%eax
    5ebf:	83 f8 08             	cmp    $0x8,%eax
    5ec2:	72 16                	jb     5eda <mbedtls_cipher_set_iv+0x12a>
    5ec4:	83 e0 f8             	and    $0xfffffff8,%eax
    5ec7:	31 d2                	xor    %edx,%edx
    5ec9:	89 d1                	mov    %edx,%ecx
    5ecb:	83 c2 08             	add    $0x8,%edx
    5ece:	4c 8b 04 0e          	mov    (%rsi,%rcx,1),%r8
    5ed2:	4c 89 04 0f          	mov    %r8,(%rdi,%rcx,1)
    5ed6:	39 c2                	cmp    %eax,%edx
    5ed8:	72 ef                	jb     5ec9 <mbedtls_cipher_set_iv+0x119>
    5eda:	48 89 6b 48          	mov    %rbp,0x48(%rbx)
    5ede:	48 83 c4 08          	add    $0x8,%rsp
    5ee2:	31 c0                	xor    %eax,%eax
    5ee4:	5b                   	pop    %rbx
    5ee5:	5d                   	pop    %rbp
    5ee6:	41 5c                	pop    %r12
    5ee8:	41 5d                	pop    %r13
    5eea:	c3                   	retq   
    5eeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5ef0:	40 f6 c5 04          	test   $0x4,%bpl
    5ef4:	0f 85 86 00 00 00    	jne    5f80 <mbedtls_cipher_set_iv+0x1d0>
    5efa:	85 ed                	test   %ebp,%ebp
    5efc:	74 dc                	je     5eda <mbedtls_cipher_set_iv+0x12a>
    5efe:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
    5f03:	88 53 38             	mov    %dl,0x38(%rbx)
    5f06:	a8 02                	test   $0x2,%al
    5f08:	74 d0                	je     5eda <mbedtls_cipher_set_iv+0x12a>
    5f0a:	89 ea                	mov    %ebp,%edx
    5f0c:	41 0f b7 44 15 fe    	movzwl -0x2(%r13,%rdx,1),%eax
    5f12:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    5f17:	eb c1                	jmp    5eda <mbedtls_cipher_set_iv+0x12a>
    5f19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5f20:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5f24:	31 c9                	xor    %ecx,%ecx
    5f26:	31 d2                	xor    %edx,%edx
    5f28:	31 f6                	xor    %esi,%esi
    5f2a:	e8 81 80 01 00       	callq  1dfb0 <mbedtls_ccm_set_lengths>
    5f2f:	85 c0                	test   %eax,%eax
    5f31:	0f 85 e6 fe ff ff    	jne    5e1d <mbedtls_cipher_set_iv+0x6d>
    5f37:	8b 43 0c             	mov    0xc(%rbx),%eax
    5f3a:	85 c0                	test   %eax,%eax
    5f3c:	74 3a                	je     5f78 <mbedtls_cipher_set_iv+0x1c8>
    5f3e:	83 f8 01             	cmp    $0x1,%eax
    5f41:	75 25                	jne    5f68 <mbedtls_cipher_set_iv+0x1b8>
    5f43:	be 03 00 00 00       	mov    $0x3,%esi
    5f48:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5f4c:	48 83 c4 08          	add    $0x8,%rsp
    5f50:	4c 89 e1             	mov    %r12,%rcx
    5f53:	4c 89 ea             	mov    %r13,%rdx
    5f56:	5b                   	pop    %rbx
    5f57:	5d                   	pop    %rbp
    5f58:	41 5c                	pop    %r12
    5f5a:	41 5d                	pop    %r13
    5f5c:	e9 3f 7f 01 00       	jmpq   1dea0 <mbedtls_ccm_starts>
    5f61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5f68:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5f6d:	e9 ab fe ff ff       	jmpq   5e1d <mbedtls_cipher_set_iv+0x6d>
    5f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5f78:	be 02 00 00 00       	mov    $0x2,%esi
    5f7d:	eb c9                	jmp    5f48 <mbedtls_cipher_set_iv+0x198>
    5f7f:	90                   	nop
    5f80:	41 8b 55 00          	mov    0x0(%r13),%edx
    5f84:	89 53 38             	mov    %edx,0x38(%rbx)
    5f87:	89 ea                	mov    %ebp,%edx
    5f89:	41 8b 44 15 fc       	mov    -0x4(%r13,%rdx,1),%eax
    5f8e:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    5f92:	e9 43 ff ff ff       	jmpq   5eda <mbedtls_cipher_set_iv+0x12a>
    5f97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5f9e:	00 00 
    5fa0:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    5fa5:	e9 73 fe ff ff       	jmpq   5e1d <mbedtls_cipher_set_iv+0x6d>
    5faa:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5faf:	c3                   	retq   

0000000000005fb0 <mbedtls_cipher_reset>:
    5fb0:	f3 0f 1e fa          	endbr64 
    5fb4:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    5fb8:	74 0b                	je     5fc5 <mbedtls_cipher_reset+0x15>
    5fba:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
    5fc1:	00 
    5fc2:	31 c0                	xor    %eax,%eax
    5fc4:	c3                   	retq   
    5fc5:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    5fca:	c3                   	retq   
    5fcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005fd0 <mbedtls_cipher_update_ad>:
    5fd0:	f3 0f 1e fa          	endbr64 
    5fd4:	48 8b 07             	mov    (%rdi),%rax
    5fd7:	48 85 c0             	test   %rax,%rax
    5fda:	74 6b                	je     6047 <mbedtls_cipher_update_ad+0x77>
    5fdc:	41 54                	push   %r12
    5fde:	49 89 d4             	mov    %rdx,%r12
    5fe1:	55                   	push   %rbp
    5fe2:	48 89 f5             	mov    %rsi,%rbp
    5fe5:	53                   	push   %rbx
    5fe6:	83 78 04 06          	cmpl   $0x6,0x4(%rax)
    5fea:	48 89 fb             	mov    %rdi,%rbx
    5fed:	74 41                	je     6030 <mbedtls_cipher_update_ad+0x60>
    5fef:	83 38 4d             	cmpl   $0x4d,(%rax)
    5ff2:	75 4c                	jne    6040 <mbedtls_cipher_update_ad+0x70>
    5ff4:	31 d2                	xor    %edx,%edx
    5ff6:	48 8d 77 38          	lea    0x38(%rdi),%rsi
    5ffa:	83 7f 0c 01          	cmpl   $0x1,0xc(%rdi)
    5ffe:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6002:	0f 95 c2             	setne  %dl
    6005:	e8 e6 96 01 00       	callq  1f6f0 <mbedtls_chachapoly_starts>
    600a:	85 c0                	test   %eax,%eax
    600c:	74 0a                	je     6018 <mbedtls_cipher_update_ad+0x48>
    600e:	5b                   	pop    %rbx
    600f:	5d                   	pop    %rbp
    6010:	41 5c                	pop    %r12
    6012:	c3                   	retq   
    6013:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6018:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    601c:	4c 89 e2             	mov    %r12,%rdx
    601f:	5b                   	pop    %rbx
    6020:	48 89 ee             	mov    %rbp,%rsi
    6023:	5d                   	pop    %rbp
    6024:	41 5c                	pop    %r12
    6026:	e9 a5 97 01 00       	jmpq   1f7d0 <mbedtls_chachapoly_update_aad>
    602b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6030:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6034:	5b                   	pop    %rbx
    6035:	5d                   	pop    %rbp
    6036:	41 5c                	pop    %r12
    6038:	e9 33 e1 ff ff       	jmpq   4170 <mbedtls_gcm_update_ad>
    603d:	0f 1f 00             	nopl   (%rax)
    6040:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6045:	eb c7                	jmp    600e <mbedtls_cipher_update_ad+0x3e>
    6047:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    604c:	c3                   	retq   
    604d:	0f 1f 00             	nopl   (%rax)

0000000000006050 <mbedtls_cipher_update>:
    6050:	e9 fb f4 02 00       	jmpq   35550 <mbedtls_cipher_update.instr.bb_6050>
    6055:	57                   	push   %rdi
    6056:	41 56                	push   %r14
    6058:	49 89 ce             	mov    %rcx,%r14
    605b:	41 55                	push   %r13
    605d:	41 54                	push   %r12
    605f:	55                   	push   %rbp
    6060:	53                   	push   %rbx
    6061:	48 83 ec 18          	sub    $0x18,%rsp
    6065:	48 8b 0f             	mov    (%rdi),%rcx
    6068:	48 85 c9             	test   %rcx,%rcx
    606b:	0f 84 37 02 00 00    	je     62a8 <mbedtls_cipher_update+0x258>
    6071:	e9 26 f5 02 00       	jmpq   3559c <instr.bb_6071>
    6076:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    607c:	4c 89 c5             	mov    %r8,%rbp
    607f:	4d 85 ff             	test   %r15,%r15
    6082:	0f 84 a8 03 00 00    	je     6430 <mbedtls_cipher_update+0x3e0>
    6088:	e9 26 f5 02 00       	jmpq   355b3 <instr.bb_6088>
    608d:	04 48                	add    $0x48,%al
    608f:	89 fb                	mov    %edi,%ebx
    6091:	49 89 d4             	mov    %rdx,%r12
    6094:	83 fe 01             	cmp    $0x1,%esi
    6097:	74 77                	je     6110 <mbedtls_cipher_update+0xc0>
    6099:	83 fe 06             	cmp    $0x6,%esi
    609c:	0f 84 16 02 00 00    	je     62b8 <mbedtls_cipher_update+0x268>
    60a2:	83 fe 09             	cmp    $0x9,%esi
    60a5:	0f 84 35 02 00 00    	je     62e0 <mbedtls_cipher_update+0x290>
    60ab:	83 39 4d             	cmpl   $0x4d,(%rcx)
    60ae:	0f 84 dc 00 00 00    	je     6190 <mbedtls_cipher_update+0x140>
    60b4:	4d 39 f5             	cmp    %r14,%r13
    60b7:	0f 84 d3 01 00 00    	je     6290 <mbedtls_cipher_update+0x240>
    60bd:	83 fe 02             	cmp    $0x2,%esi
    60c0:	0f 84 f2 00 00 00    	je     61b8 <mbedtls_cipher_update+0x168>
    60c6:	83 fe 03             	cmp    $0x3,%esi
    60c9:	74 7d                	je     6148 <mbedtls_cipher_update+0xf8>
    60cb:	83 fe 04             	cmp    $0x4,%esi
    60ce:	0f 84 34 02 00 00    	je     6308 <mbedtls_cipher_update+0x2b8>
    60d4:	83 fe 05             	cmp    $0x5,%esi
    60d7:	0f 84 63 02 00 00    	je     6340 <mbedtls_cipher_update+0x2f0>
    60dd:	83 fe 0a             	cmp    $0xa,%esi
    60e0:	0f 84 02 03 00 00    	je     63e8 <mbedtls_cipher_update+0x398>
    60e6:	83 fe 07             	cmp    $0x7,%esi
    60e9:	0f 85 55 03 00 00    	jne    6444 <mbedtls_cipher_update+0x3f4>
    60ef:	48 8b 41 28          	mov    0x28(%rcx),%rax
    60f3:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    60f7:	4c 89 f1             	mov    %r14,%rcx
    60fa:	4c 89 ea             	mov    %r13,%rdx
    60fd:	4c 89 e6             	mov    %r12,%rsi
    6100:	ff 50 38             	callq  *0x38(%rax)
    6103:	85 c0                	test   %eax,%eax
    6105:	75 70                	jne    6177 <mbedtls_cipher_update+0x127>
    6107:	eb 6a                	jmp    6173 <mbedtls_cipher_update+0x123>
    6109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6110:	e9 bb f4 02 00       	jmpq   355d0 <instr.bb_6110>
    6115:	21 03                	and    %eax,(%rbx)
    6117:	00 00                	add    %al,(%rax)
    6119:	e9 bb f4 02 00       	jmpq   355d9 <instr.bb_6119>
    611e:	89 38                	mov    %edi,(%rax)
    6120:	4c 89 f1             	mov    %r14,%rcx
    6123:	4c 89 ea             	mov    %r13,%rdx
    6126:	8b 77 0c             	mov    0xc(%rdi),%esi
    6129:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    612d:	48 8b 40 08          	mov    0x8(%rax),%rax
    6131:	48 83 c4 18          	add    $0x18,%rsp
    6135:	5b                   	pop    %rbx
    6136:	5d                   	pop    %rbp
    6137:	41 5c                	pop    %r12
    6139:	41 5d                	pop    %r13
    613b:	41 5e                	pop    %r14
    613d:	41 5f                	pop    %r15
    613f:	ff e0                	jmpq   *%rax
    6141:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6148:	48 8b 41 28          	mov    0x28(%rcx),%rax
    614c:	48 83 ec 08          	sub    $0x8,%rsp
    6150:	4c 8d 53 30          	lea    0x30(%rbx),%r10
    6154:	8b 73 0c             	mov    0xc(%rbx),%esi
    6157:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    615b:	4d 89 e9             	mov    %r13,%r9
    615e:	41 56                	push   %r14
    6160:	4c 8d 43 38          	lea    0x38(%rbx),%r8
    6164:	4c 89 d1             	mov    %r10,%rcx
    6167:	4c 89 e2             	mov    %r12,%rdx
    616a:	ff 50 18             	callq  *0x18(%rax)
    616d:	5e                   	pop    %rsi
    616e:	5f                   	pop    %rdi
    616f:	85 c0                	test   %eax,%eax
    6171:	75 04                	jne    6177 <mbedtls_cipher_update+0x127>
    6173:	4c 89 65 00          	mov    %r12,0x0(%rbp)
    6177:	48 83 c4 18          	add    $0x18,%rsp
    617b:	5b                   	pop    %rbx
    617c:	5d                   	pop    %rbp
    617d:	41 5c                	pop    %r12
    617f:	41 5d                	pop    %r13
    6181:	41 5e                	pop    %r14
    6183:	41 5f                	pop    %r15
    6185:	c3                   	retq   
    6186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    618d:	00 00 00 
    6190:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    6194:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6198:	48 83 c4 18          	add    $0x18,%rsp
    619c:	4c 89 f1             	mov    %r14,%rcx
    619f:	5b                   	pop    %rbx
    61a0:	4c 89 ea             	mov    %r13,%rdx
    61a3:	5d                   	pop    %rbp
    61a4:	4c 89 e6             	mov    %r12,%rsi
    61a7:	41 5c                	pop    %r12
    61a9:	41 5d                	pop    %r13
    61ab:	41 5e                	pop    %r14
    61ad:	41 5f                	pop    %r15
    61af:	e9 4c 96 01 00       	jmpq   1f800 <mbedtls_chachapoly_update>
    61b4:	0f 1f 40 00          	nopl   0x0(%rax)
    61b8:	8b 43 0c             	mov    0xc(%rbx),%eax
    61bb:	4c 8b 53 30          	mov    0x30(%rbx),%r10
    61bf:	85 c0                	test   %eax,%eax
    61c1:	74 2d                	je     61f0 <mbedtls_cipher_update+0x1a0>
    61c3:	83 f8 01             	cmp    $0x1,%eax
    61c6:	75 3e                	jne    6206 <mbedtls_cipher_update+0x1b6>
    61c8:	4c 89 f8             	mov    %r15,%rax
    61cb:	4c 29 d0             	sub    %r10,%rax
    61ce:	4c 39 e0             	cmp    %r12,%rax
    61d1:	76 33                	jbe    6206 <mbedtls_cipher_update+0x1b6>
    61d3:	4a 8d 7c 13 20       	lea    0x20(%rbx,%r10,1),%rdi
    61d8:	4c 89 e2             	mov    %r12,%rdx
    61db:	4c 89 ee             	mov    %r13,%rsi
    61de:	e8 2d d1 ff ff       	callq  3310 <memcpy@plt>
    61e3:	4c 01 63 30          	add    %r12,0x30(%rbx)
    61e7:	31 c0                	xor    %eax,%eax
    61e9:	eb 8c                	jmp    6177 <mbedtls_cipher_update+0x127>
    61eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    61f0:	4c 89 f8             	mov    %r15,%rax
    61f3:	4c 29 d0             	sub    %r10,%rax
    61f6:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    61fb:	0f 84 1f 02 00 00    	je     6420 <mbedtls_cipher_update+0x3d0>
    6201:	49 39 c4             	cmp    %rax,%r12
    6204:	76 cd                	jbe    61d3 <mbedtls_cipher_update+0x183>
    6206:	4d 85 d2             	test   %r10,%r10
    6209:	0f 85 69 01 00 00    	jne    6378 <mbedtls_cipher_update+0x328>
    620f:	4d 85 e4             	test   %r12,%r12
    6212:	0f 84 20 01 00 00    	je     6338 <mbedtls_cipher_update+0x2e8>
    6218:	4c 89 e0             	mov    %r12,%rax
    621b:	31 d2                	xor    %edx,%edx
    621d:	49 f7 f7             	div    %r15
    6220:	48 85 d2             	test   %rdx,%rdx
    6223:	75 11                	jne    6236 <mbedtls_cipher_update+0x1e6>
    6225:	8b 73 0c             	mov    0xc(%rbx),%esi
    6228:	85 f6                	test   %esi,%esi
    622a:	75 33                	jne    625f <mbedtls_cipher_update+0x20f>
    622c:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    6231:	74 2c                	je     625f <mbedtls_cipher_update+0x20f>
    6233:	4c 89 fa             	mov    %r15,%rdx
    6236:	49 29 d4             	sub    %rdx,%r12
    6239:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    623d:	48 89 14 24          	mov    %rdx,(%rsp)
    6241:	4b 8d 74 25 00       	lea    0x0(%r13,%r12,1),%rsi
    6246:	e8 c5 d0 ff ff       	callq  3310 <memcpy@plt>
    624b:	48 8b 14 24          	mov    (%rsp),%rdx
    624f:	48 01 53 30          	add    %rdx,0x30(%rbx)
    6253:	4d 85 e4             	test   %r12,%r12
    6256:	0f 84 dc 00 00 00    	je     6338 <mbedtls_cipher_update+0x2e8>
    625c:	8b 73 0c             	mov    0xc(%rbx),%esi
    625f:	48 8b 03             	mov    (%rbx),%rax
    6262:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6266:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    626a:	4d 89 f1             	mov    %r14,%r9
    626d:	4d 89 e8             	mov    %r13,%r8
    6270:	4c 89 e2             	mov    %r12,%rdx
    6273:	48 8b 40 28          	mov    0x28(%rax),%rax
    6277:	ff 50 10             	callq  *0x10(%rax)
    627a:	85 c0                	test   %eax,%eax
    627c:	0f 85 f5 fe ff ff    	jne    6177 <mbedtls_cipher_update+0x127>
    6282:	4c 01 65 00          	add    %r12,0x0(%rbp)
    6286:	e9 ec fe ff ff       	jmpq   6177 <mbedtls_cipher_update+0x127>
    628b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6290:	48 83 7f 30 00       	cmpq   $0x0,0x30(%rdi)
    6295:	75 11                	jne    62a8 <mbedtls_cipher_update+0x258>
    6297:	48 89 d0             	mov    %rdx,%rax
    629a:	31 d2                	xor    %edx,%edx
    629c:	49 f7 f7             	div    %r15
    629f:	48 85 d2             	test   %rdx,%rdx
    62a2:	0f 84 15 fe ff ff    	je     60bd <mbedtls_cipher_update+0x6d>
    62a8:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    62ad:	e9 c5 fe ff ff       	jmpq   6177 <mbedtls_cipher_update+0x127>
    62b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    62b8:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    62bc:	48 83 c4 18          	add    $0x18,%rsp
    62c0:	4d 89 c1             	mov    %r8,%r9
    62c3:	4c 89 f1             	mov    %r14,%rcx
    62c6:	5b                   	pop    %rbx
    62c7:	4c 89 ee             	mov    %r13,%rsi
    62ca:	5d                   	pop    %rbp
    62cb:	49 89 d0             	mov    %rdx,%r8
    62ce:	41 5c                	pop    %r12
    62d0:	41 5d                	pop    %r13
    62d2:	41 5e                	pop    %r14
    62d4:	41 5f                	pop    %r15
    62d6:	e9 45 e0 ff ff       	jmpq   4320 <mbedtls_gcm_update>
    62db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    62e0:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    62e4:	48 83 c4 18          	add    $0x18,%rsp
    62e8:	4d 89 c1             	mov    %r8,%r9
    62eb:	4c 89 f1             	mov    %r14,%rcx
    62ee:	5b                   	pop    %rbx
    62ef:	4c 89 ee             	mov    %r13,%rsi
    62f2:	5d                   	pop    %rbp
    62f3:	49 89 d0             	mov    %rdx,%r8
    62f6:	41 5c                	pop    %r12
    62f8:	41 5d                	pop    %r13
    62fa:	41 5e                	pop    %r14
    62fc:	41 5f                	pop    %r15
    62fe:	e9 ed 7e 01 00       	jmpq   1e1f0 <mbedtls_ccm_update>
    6303:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6308:	48 8b 41 28          	mov    0x28(%rcx),%rax
    630c:	4c 8d 53 38          	lea    0x38(%rbx),%r10
    6310:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6314:	48 8d 53 30          	lea    0x30(%rbx),%rdx
    6318:	4d 89 f1             	mov    %r14,%r9
    631b:	4d 89 e8             	mov    %r13,%r8
    631e:	4c 89 d1             	mov    %r10,%rcx
    6321:	4c 89 e6             	mov    %r12,%rsi
    6324:	ff 50 20             	callq  *0x20(%rax)
    6327:	85 c0                	test   %eax,%eax
    6329:	0f 85 48 fe ff ff    	jne    6177 <mbedtls_cipher_update+0x127>
    632f:	e9 3f fe ff ff       	jmpq   6173 <mbedtls_cipher_update+0x123>
    6334:	0f 1f 40 00          	nopl   0x0(%rax)
    6338:	31 c0                	xor    %eax,%eax
    633a:	e9 38 fe ff ff       	jmpq   6177 <mbedtls_cipher_update+0x127>
    633f:	90                   	nop
    6340:	48 8b 41 28          	mov    0x28(%rcx),%rax
    6344:	48 83 ec 08          	sub    $0x8,%rsp
    6348:	4c 8d 53 38          	lea    0x38(%rbx),%r10
    634c:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6350:	48 8d 53 30          	lea    0x30(%rbx),%rdx
    6354:	41 56                	push   %r14
    6356:	4c 89 d1             	mov    %r10,%rcx
    6359:	4d 89 e9             	mov    %r13,%r9
    635c:	4c 8d 43 20          	lea    0x20(%rbx),%r8
    6360:	4c 89 e6             	mov    %r12,%rsi
    6363:	ff 50 28             	callq  *0x28(%rax)
    6366:	5a                   	pop    %rdx
    6367:	59                   	pop    %rcx
    6368:	85 c0                	test   %eax,%eax
    636a:	0f 85 07 fe ff ff    	jne    6177 <mbedtls_cipher_update+0x127>
    6370:	e9 fe fd ff ff       	jmpq   6173 <mbedtls_cipher_update+0x123>
    6375:	0f 1f 00             	nopl   (%rax)
    6378:	4d 89 fb             	mov    %r15,%r11
    637b:	4a 8d 7c 13 20       	lea    0x20(%rbx,%r10,1),%rdi
    6380:	4c 89 ee             	mov    %r13,%rsi
    6383:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    6388:	4d 29 d3             	sub    %r10,%r11
    638b:	4c 89 da             	mov    %r11,%rdx
    638e:	4c 89 1c 24          	mov    %r11,(%rsp)
    6392:	e8 79 cf ff ff       	callq  3310 <memcpy@plt>
    6397:	48 8b 03             	mov    (%rbx),%rax
    639a:	8b 73 0c             	mov    0xc(%rbx),%esi
    639d:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    63a1:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    63a5:	4d 89 f1             	mov    %r14,%r9
    63a8:	4c 8d 43 20          	lea    0x20(%rbx),%r8
    63ac:	4c 89 fa             	mov    %r15,%rdx
    63af:	48 8b 40 28          	mov    0x28(%rax),%rax
    63b3:	ff 50 10             	callq  *0x10(%rax)
    63b6:	85 c0                	test   %eax,%eax
    63b8:	0f 85 b9 fd ff ff    	jne    6177 <mbedtls_cipher_update+0x127>
    63be:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    63c3:	4c 8b 1c 24          	mov    (%rsp),%r11
    63c7:	4d 01 fe             	add    %r15,%r14
    63ca:	4c 01 7d 00          	add    %r15,0x0(%rbp)
    63ce:	4d 01 d4             	add    %r10,%r12
    63d1:	48 c7 43 30 00 00 00 	movq   $0x0,0x30(%rbx)
    63d8:	00 
    63d9:	4d 01 dd             	add    %r11,%r13
    63dc:	4d 29 fc             	sub    %r15,%r12
    63df:	e9 2b fe ff ff       	jmpq   620f <mbedtls_cipher_update+0x1bf>
    63e4:	0f 1f 40 00          	nopl   0x0(%rax)
    63e8:	48 83 7b 30 00       	cmpq   $0x0,0x30(%rbx)
    63ed:	75 55                	jne    6444 <mbedtls_cipher_update+0x3f4>
    63ef:	48 8b 41 28          	mov    0x28(%rcx),%rax
    63f3:	4c 8d 53 38          	lea    0x38(%rbx),%r10
    63f7:	8b 73 0c             	mov    0xc(%rbx),%esi
    63fa:	4d 89 f1             	mov    %r14,%r9
    63fd:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6401:	4d 89 e8             	mov    %r13,%r8
    6404:	4c 89 d1             	mov    %r10,%rcx
    6407:	4c 89 e2             	mov    %r12,%rdx
    640a:	ff 50 30             	callq  *0x30(%rax)
    640d:	85 c0                	test   %eax,%eax
    640f:	0f 85 62 fd ff ff    	jne    6177 <mbedtls_cipher_update+0x127>
    6415:	e9 59 fd ff ff       	jmpq   6173 <mbedtls_cipher_update+0x123>
    641a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6420:	49 39 c4             	cmp    %rax,%r12
    6423:	0f 83 dd fd ff ff    	jae    6206 <mbedtls_cipher_update+0x1b6>
    6429:	e9 a5 fd ff ff       	jmpq   61d3 <mbedtls_cipher_update+0x183>
    642e:	66 90                	xchg   %ax,%ax
    6430:	b8 80 9c ff ff       	mov    $0xffff9c80,%eax
    6435:	e9 3d fd ff ff       	jmpq   6177 <mbedtls_cipher_update+0x127>
    643a:	b8 80 9d ff ff       	mov    $0xffff9d80,%eax
    643f:	e9 33 fd ff ff       	jmpq   6177 <mbedtls_cipher_update+0x127>
    6444:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6449:	e9 29 fd ff ff       	jmpq   6177 <mbedtls_cipher_update+0x127>
    644e:	66 90                	xchg   %ax,%ax

0000000000006450 <mbedtls_cipher_finish>:
    6450:	f3 0f 1e fa          	endbr64 
    6454:	48 8b 07             	mov    (%rdi),%rax
    6457:	48 85 c0             	test   %rax,%rax
    645a:	0f 84 53 01 00 00    	je     65b3 <mbedtls_cipher_finish+0x163>
    6460:	41 55                	push   %r13
    6462:	41 54                	push   %r12
    6464:	49 89 d4             	mov    %rdx,%r12
    6467:	55                   	push   %rbp
    6468:	53                   	push   %rbx
    6469:	48 83 ec 08          	sub    $0x8,%rsp
    646d:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    6474:	8b 50 04             	mov    0x4(%rax),%edx
    6477:	8d 4a f7             	lea    -0x9(%rdx),%ecx
    647a:	83 f9 01             	cmp    $0x1,%ecx
    647d:	76 61                	jbe    64e0 <mbedtls_cipher_finish+0x90>
    647f:	8d 4a fd             	lea    -0x3(%rdx),%ecx
    6482:	83 f9 04             	cmp    $0x4,%ecx
    6485:	76 59                	jbe    64e0 <mbedtls_cipher_finish+0x90>
    6487:	48 89 fb             	mov    %rdi,%rbx
    648a:	8b 38                	mov    (%rax),%edi
    648c:	8d 4f b4             	lea    -0x4c(%rdi),%ecx
    648f:	83 f9 01             	cmp    $0x1,%ecx
    6492:	76 4c                	jbe    64e0 <mbedtls_cipher_finish+0x90>
    6494:	83 fa 01             	cmp    $0x1,%edx
    6497:	74 57                	je     64f0 <mbedtls_cipher_finish+0xa0>
    6499:	83 fa 02             	cmp    $0x2,%edx
    649c:	0f 85 ff 00 00 00    	jne    65a1 <mbedtls_cipher_finish+0x151>
    64a2:	48 89 f5             	mov    %rsi,%rbp
    64a5:	8b 73 0c             	mov    0xc(%rbx),%esi
    64a8:	48 8b 53 30          	mov    0x30(%rbx),%rdx
    64ac:	83 fe 01             	cmp    $0x1,%esi
    64af:	74 5f                	je     6510 <mbedtls_cipher_finish+0xc0>
    64b1:	8b 48 20             	mov    0x20(%rax),%ecx
    64b4:	48 39 d1             	cmp    %rdx,%rcx
    64b7:	0f 84 c3 00 00 00    	je     6580 <mbedtls_cipher_finish+0x130>
    64bd:	48 0b 53 10          	or     0x10(%rbx),%rdx
    64c1:	48 83 fa 01          	cmp    $0x1,%rdx
    64c5:	19 c0                	sbb    %eax,%eax
    64c7:	48 83 c4 08          	add    $0x8,%rsp
    64cb:	f7 d0                	not    %eax
    64cd:	5b                   	pop    %rbx
    64ce:	5d                   	pop    %rbp
    64cf:	25 80 9d ff ff       	and    $0xffff9d80,%eax
    64d4:	41 5c                	pop    %r12
    64d6:	41 5d                	pop    %r13
    64d8:	c3                   	retq   
    64d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    64e0:	31 c0                	xor    %eax,%eax
    64e2:	48 83 c4 08          	add    $0x8,%rsp
    64e6:	5b                   	pop    %rbx
    64e7:	5d                   	pop    %rbp
    64e8:	41 5c                	pop    %r12
    64ea:	41 5d                	pop    %r13
    64ec:	c3                   	retq   
    64ed:	0f 1f 00             	nopl   (%rax)
    64f0:	48 83 7b 30 01       	cmpq   $0x1,0x30(%rbx)
    64f5:	19 c0                	sbb    %eax,%eax
    64f7:	48 83 c4 08          	add    $0x8,%rsp
    64fb:	f7 d0                	not    %eax
    64fd:	5b                   	pop    %rbx
    64fe:	5d                   	pop    %rbp
    64ff:	25 80 9d ff ff       	and    $0xffff9d80,%eax
    6504:	41 5c                	pop    %r12
    6506:	41 5d                	pop    %r13
    6508:	c3                   	retq   
    6509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6510:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    6514:	48 85 c9             	test   %rcx,%rcx
    6517:	74 a8                	je     64c1 <mbedtls_cipher_finish+0x71>
    6519:	48 8b 73 48          	mov    0x48(%rbx),%rsi
    651d:	48 85 f6             	test   %rsi,%rsi
    6520:	75 03                	jne    6525 <mbedtls_cipher_finish+0xd5>
    6522:	8b 70 18             	mov    0x18(%rax),%esi
    6525:	4c 8d 6b 20          	lea    0x20(%rbx),%r13
    6529:	48 63 f6             	movslq %esi,%rsi
    652c:	4c 89 ef             	mov    %r13,%rdi
    652f:	ff d1                	callq  *%rcx
    6531:	48 8b 03             	mov    (%rbx),%rax
    6534:	8b 73 0c             	mov    0xc(%rbx),%esi
    6537:	8b 50 20             	mov    0x20(%rax),%edx
    653a:	48 8b 40 28          	mov    0x28(%rax),%rax
    653e:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    6542:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    6546:	49 89 e9             	mov    %rbp,%r9
    6549:	4d 89 e8             	mov    %r13,%r8
    654c:	ff 50 10             	callq  *0x10(%rax)
    654f:	85 c0                	test   %eax,%eax
    6551:	75 8f                	jne    64e2 <mbedtls_cipher_finish+0x92>
    6553:	8b 4b 0c             	mov    0xc(%rbx),%ecx
    6556:	48 8b 13             	mov    (%rbx),%rdx
    6559:	85 c9                	test   %ecx,%ecx
    655b:	75 33                	jne    6590 <mbedtls_cipher_finish+0x140>
    655d:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6561:	48 85 d2             	test   %rdx,%rdx
    6564:	74 45                	je     65ab <mbedtls_cipher_finish+0x15b>
    6566:	8b 72 20             	mov    0x20(%rdx),%esi
    6569:	48 83 c4 08          	add    $0x8,%rsp
    656d:	4c 89 e2             	mov    %r12,%rdx
    6570:	48 89 ef             	mov    %rbp,%rdi
    6573:	5b                   	pop    %rbx
    6574:	5d                   	pop    %rbp
    6575:	41 5c                	pop    %r12
    6577:	41 5d                	pop    %r13
    6579:	ff e0                	jmpq   *%rax
    657b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6580:	4c 8d 6b 20          	lea    0x20(%rbx),%r13
    6584:	eb b4                	jmp    653a <mbedtls_cipher_finish+0xea>
    6586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    658d:	00 00 00 
    6590:	48 85 d2             	test   %rdx,%rdx
    6593:	74 1a                	je     65af <mbedtls_cipher_finish+0x15f>
    6595:	8b 52 20             	mov    0x20(%rdx),%edx
    6598:	49 89 14 24          	mov    %rdx,(%r12)
    659c:	e9 41 ff ff ff       	jmpq   64e2 <mbedtls_cipher_finish+0x92>
    65a1:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    65a6:	e9 37 ff ff ff       	jmpq   64e2 <mbedtls_cipher_finish+0x92>
    65ab:	31 f6                	xor    %esi,%esi
    65ad:	eb ba                	jmp    6569 <mbedtls_cipher_finish+0x119>
    65af:	31 d2                	xor    %edx,%edx
    65b1:	eb e5                	jmp    6598 <mbedtls_cipher_finish+0x148>
    65b3:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    65b8:	c3                   	retq   
    65b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000065c0 <mbedtls_cipher_set_padding_mode>:
    65c0:	f3 0f 1e fa          	endbr64 
    65c4:	48 8b 07             	mov    (%rdi),%rax
    65c7:	48 85 c0             	test   %rax,%rax
    65ca:	0f 84 a6 00 00 00    	je     6676 <mbedtls_cipher_set_padding_mode+0xb6>
    65d0:	83 78 04 02          	cmpl   $0x2,0x4(%rax)
    65d4:	0f 85 96 00 00 00    	jne    6670 <mbedtls_cipher_set_padding_mode+0xb0>
    65da:	83 fe 04             	cmp    $0x4,%esi
    65dd:	0f 87 9d cd ff ff    	ja     3380 <mbedtls_cipher_set_padding_mode.cold>
    65e3:	48 8d 15 f6 b7 01 00 	lea    0x1b7f6(%rip),%rdx        # 21de0 <last4+0x80>
    65ea:	89 f6                	mov    %esi,%esi
    65ec:	48 63 04 b2          	movslq (%rdx,%rsi,4),%rax
    65f0:	48 01 d0             	add    %rdx,%rax
    65f3:	3e ff e0             	notrack jmpq *%rax
    65f6:	48 8d 05 c3 f3 ff ff 	lea    -0xc3d(%rip),%rax        # 59c0 <add_zeros_padding>
    65fd:	48 89 47 10          	mov    %rax,0x10(%rdi)
    6601:	48 8d 05 68 f4 ff ff 	lea    -0xb98(%rip),%rax        # 5a70 <get_zeros_padding>
    6608:	48 89 47 18          	mov    %rax,0x18(%rdi)
    660c:	31 c0                	xor    %eax,%eax
    660e:	c3                   	retq   
    660f:	48 8d 05 ca f3 ff ff 	lea    -0xc36(%rip),%rax        # 59e0 <get_no_padding>
    6616:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    661d:	00 
    661e:	48 89 47 18          	mov    %rax,0x18(%rdi)
    6622:	31 c0                	xor    %eax,%eax
    6624:	c3                   	retq   
    6625:	48 8d 05 04 f2 ff ff 	lea    -0xdfc(%rip),%rax        # 5830 <add_pkcs_padding>
    662c:	48 89 47 10          	mov    %rax,0x10(%rdi)
    6630:	48 8d 05 39 f2 ff ff 	lea    -0xdc7(%rip),%rax        # 5870 <get_pkcs_padding>
    6637:	48 89 47 18          	mov    %rax,0x18(%rdi)
    663b:	31 c0                	xor    %eax,%eax
    663d:	c3                   	retq   
    663e:	48 8d 05 9b f2 ff ff 	lea    -0xd65(%rip),%rax        # 58e0 <add_one_and_zeros_padding>
    6645:	48 89 47 10          	mov    %rax,0x10(%rdi)
    6649:	48 8d 05 b0 f3 ff ff 	lea    -0xc50(%rip),%rax        # 5a00 <get_one_and_zeros_padding>
    6650:	48 89 47 18          	mov    %rax,0x18(%rdi)
    6654:	31 c0                	xor    %eax,%eax
    6656:	c3                   	retq   
    6657:	48 8d 05 c2 f2 ff ff 	lea    -0xd3e(%rip),%rax        # 5920 <add_zeros_and_len_padding>
    665e:	48 89 47 10          	mov    %rax,0x10(%rdi)
    6662:	48 8d 05 f7 f2 ff ff 	lea    -0xd09(%rip),%rax        # 5960 <get_zeros_and_len_padding>
    6669:	48 89 47 18          	mov    %rax,0x18(%rdi)
    666d:	31 c0                	xor    %eax,%eax
    666f:	c3                   	retq   
    6670:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6675:	c3                   	retq   
    6676:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    667b:	c3                   	retq   
    667c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006680 <mbedtls_cipher_write_tag>:
    6680:	f3 0f 1e fa          	endbr64 
    6684:	48 83 ec 18          	sub    $0x18,%rsp
    6688:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    668f:	00 00 
    6691:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6696:	31 c0                	xor    %eax,%eax
    6698:	48 8b 07             	mov    (%rdi),%rax
    669b:	48 85 c0             	test   %rax,%rax
    669e:	74 50                	je     66f0 <mbedtls_cipher_write_tag+0x70>
    66a0:	83 7f 0c 01          	cmpl   $0x1,0xc(%rdi)
    66a4:	75 4a                	jne    66f0 <mbedtls_cipher_write_tag+0x70>
    66a6:	83 78 04 06          	cmpl   $0x6,0x4(%rax)
    66aa:	74 2c                	je     66d8 <mbedtls_cipher_write_tag+0x58>
    66ac:	83 38 4d             	cmpl   $0x4d,(%rax)
    66af:	75 4f                	jne    6700 <mbedtls_cipher_write_tag+0x80>
    66b1:	48 83 fa 10          	cmp    $0x10,%rdx
    66b5:	75 39                	jne    66f0 <mbedtls_cipher_write_tag+0x70>
    66b7:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    66bb:	e8 30 92 01 00       	callq  1f8f0 <mbedtls_chachapoly_finish>
    66c0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    66c5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    66cc:	00 00 
    66ce:	75 37                	jne    6707 <mbedtls_cipher_write_tag+0x87>
    66d0:	48 83 c4 18          	add    $0x18,%rsp
    66d4:	c3                   	retq   
    66d5:	0f 1f 00             	nopl   (%rax)
    66d8:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    66dc:	49 89 d1             	mov    %rdx,%r9
    66df:	49 89 f0             	mov    %rsi,%r8
    66e2:	48 89 e1             	mov    %rsp,%rcx
    66e5:	31 d2                	xor    %edx,%edx
    66e7:	31 f6                	xor    %esi,%esi
    66e9:	e8 b2 de ff ff       	callq  45a0 <mbedtls_gcm_finish>
    66ee:	eb d0                	jmp    66c0 <mbedtls_cipher_write_tag+0x40>
    66f0:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    66f5:	eb c9                	jmp    66c0 <mbedtls_cipher_write_tag+0x40>
    66f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    66fe:	00 00 
    6700:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6705:	eb b9                	jmp    66c0 <mbedtls_cipher_write_tag+0x40>
    6707:	e8 54 cb ff ff       	callq  3260 <__stack_chk_fail@plt>
    670c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006710 <mbedtls_cipher_check_tag>:
    6710:	f3 0f 1e fa          	endbr64 
    6714:	41 56                	push   %r14
    6716:	41 55                	push   %r13
    6718:	41 54                	push   %r12
    671a:	55                   	push   %rbp
    671b:	53                   	push   %rbx
    671c:	48 83 ec 30          	sub    $0x30,%rsp
    6720:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6727:	00 00 
    6729:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    672e:	31 c0                	xor    %eax,%eax
    6730:	48 8b 07             	mov    (%rdi),%rax
    6733:	48 85 c0             	test   %rax,%rax
    6736:	0f 84 04 01 00 00    	je     6840 <mbedtls_cipher_check_tag+0x130>
    673c:	8b 4f 0c             	mov    0xc(%rdi),%ecx
    673f:	48 89 fb             	mov    %rdi,%rbx
    6742:	85 c9                	test   %ecx,%ecx
    6744:	0f 85 f6 00 00 00    	jne    6840 <mbedtls_cipher_check_tag+0x130>
    674a:	83 78 04 06          	cmpl   $0x6,0x4(%rax)
    674e:	49 89 f5             	mov    %rsi,%r13
    6751:	48 89 d5             	mov    %rdx,%rbp
    6754:	41 bc 80 9f ff ff    	mov    $0xffff9f80,%r12d
    675a:	74 7c                	je     67d8 <mbedtls_cipher_check_tag+0xc8>
    675c:	83 38 4d             	cmpl   $0x4d,(%rax)
    675f:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    6764:	74 32                	je     6798 <mbedtls_cipher_check_tag+0x88>
    6766:	48 89 ee             	mov    %rbp,%rsi
    6769:	4c 89 f7             	mov    %r14,%rdi
    676c:	e8 af ea ff ff       	callq  5220 <mbedtls_platform_zeroize>
    6771:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6776:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    677d:	00 00 
    677f:	0f 85 c6 00 00 00    	jne    684b <mbedtls_cipher_check_tag+0x13b>
    6785:	48 83 c4 30          	add    $0x30,%rsp
    6789:	44 89 e0             	mov    %r12d,%eax
    678c:	5b                   	pop    %rbx
    678d:	5d                   	pop    %rbp
    678e:	41 5c                	pop    %r12
    6790:	41 5d                	pop    %r13
    6792:	41 5e                	pop    %r14
    6794:	c3                   	retq   
    6795:	0f 1f 00             	nopl   (%rax)
    6798:	48 83 fd 10          	cmp    $0x10,%rbp
    679c:	0f 85 9e 00 00 00    	jne    6840 <mbedtls_cipher_check_tag+0x130>
    67a2:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    67a6:	4c 89 f6             	mov    %r14,%rsi
    67a9:	e8 42 91 01 00       	callq  1f8f0 <mbedtls_chachapoly_finish>
    67ae:	41 89 c4             	mov    %eax,%r12d
    67b1:	85 c0                	test   %eax,%eax
    67b3:	75 bc                	jne    6771 <mbedtls_cipher_check_tag+0x61>
    67b5:	ba 10 00 00 00       	mov    $0x10,%edx
    67ba:	4c 89 f6             	mov    %r14,%rsi
    67bd:	4c 89 ef             	mov    %r13,%rdi
    67c0:	e8 5b 0b 00 00       	callq  7320 <mbedtls_ct_memcmp>
    67c5:	41 89 c4             	mov    %eax,%r12d
    67c8:	85 c0                	test   %eax,%eax
    67ca:	b8 00 9d ff ff       	mov    $0xffff9d00,%eax
    67cf:	44 0f 45 e0          	cmovne %eax,%r12d
    67d3:	eb 91                	jmp    6766 <mbedtls_cipher_check_tag+0x56>
    67d5:	0f 1f 00             	nopl   (%rax)
    67d8:	41 bc 00 9f ff ff    	mov    $0xffff9f00,%r12d
    67de:	48 83 fa 10          	cmp    $0x10,%rdx
    67e2:	77 8d                	ja     6771 <mbedtls_cipher_check_tag+0x61>
    67e4:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    67e8:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    67ed:	49 89 d1             	mov    %rdx,%r9
    67f0:	31 f6                	xor    %esi,%esi
    67f2:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    67f7:	4d 89 f0             	mov    %r14,%r8
    67fa:	31 d2                	xor    %edx,%edx
    67fc:	e8 9f dd ff ff       	callq  45a0 <mbedtls_gcm_finish>
    6801:	41 89 c4             	mov    %eax,%r12d
    6804:	85 c0                	test   %eax,%eax
    6806:	0f 85 65 ff ff ff    	jne    6771 <mbedtls_cipher_check_tag+0x61>
    680c:	48 89 ea             	mov    %rbp,%rdx
    680f:	4c 89 f6             	mov    %r14,%rsi
    6812:	4c 89 ef             	mov    %r13,%rdi
    6815:	e8 06 0b 00 00       	callq  7320 <mbedtls_ct_memcmp>
    681a:	41 89 c4             	mov    %eax,%r12d
    681d:	85 c0                	test   %eax,%eax
    681f:	75 0f                	jne    6830 <mbedtls_cipher_check_tag+0x120>
    6821:	48 8b 03             	mov    (%rbx),%rax
    6824:	e9 33 ff ff ff       	jmpq   675c <mbedtls_cipher_check_tag+0x4c>
    6829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6830:	41 bc 00 9d ff ff    	mov    $0xffff9d00,%r12d
    6836:	e9 2b ff ff ff       	jmpq   6766 <mbedtls_cipher_check_tag+0x56>
    683b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6840:	41 bc 00 9f ff ff    	mov    $0xffff9f00,%r12d
    6846:	e9 26 ff ff ff       	jmpq   6771 <mbedtls_cipher_check_tag+0x61>
    684b:	e8 10 ca ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000006850 <mbedtls_cipher_crypt>:
    6850:	f3 0f 1e fa          	endbr64 
    6854:	41 56                	push   %r14
    6856:	4d 89 c6             	mov    %r8,%r14
    6859:	41 55                	push   %r13
    685b:	49 89 cd             	mov    %rcx,%r13
    685e:	41 54                	push   %r12
    6860:	4d 89 cc             	mov    %r9,%r12
    6863:	55                   	push   %rbp
    6864:	48 89 fd             	mov    %rdi,%rbp
    6867:	53                   	push   %rbx
    6868:	48 83 ec 10          	sub    $0x10,%rsp
    686c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6873:	00 00 
    6875:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    687a:	31 c0                	xor    %eax,%eax
    687c:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    6881:	e8 2a f5 ff ff       	callq  5db0 <mbedtls_cipher_set_iv>
    6886:	85 c0                	test   %eax,%eax
    6888:	75 27                	jne    68b1 <mbedtls_cipher_crypt+0x61>
    688a:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
    688f:	74 5d                	je     68ee <mbedtls_cipher_crypt+0x9e>
    6891:	49 89 d8             	mov    %rbx,%r8
    6894:	4c 89 e1             	mov    %r12,%rcx
    6897:	4c 89 f2             	mov    %r14,%rdx
    689a:	4c 89 ee             	mov    %r13,%rsi
    689d:	48 c7 45 30 00 00 00 	movq   $0x0,0x30(%rbp)
    68a4:	00 
    68a5:	48 89 ef             	mov    %rbp,%rdi
    68a8:	e8 a3 f7 ff ff       	callq  6050 <mbedtls_cipher_update>
    68ad:	85 c0                	test   %eax,%eax
    68af:	74 1f                	je     68d0 <mbedtls_cipher_crypt+0x80>
    68b1:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    68b6:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    68bd:	00 00 
    68bf:	75 34                	jne    68f5 <mbedtls_cipher_crypt+0xa5>
    68c1:	48 83 c4 10          	add    $0x10,%rsp
    68c5:	5b                   	pop    %rbx
    68c6:	5d                   	pop    %rbp
    68c7:	41 5c                	pop    %r12
    68c9:	41 5d                	pop    %r13
    68cb:	41 5e                	pop    %r14
    68cd:	c3                   	retq   
    68ce:	66 90                	xchg   %ax,%ax
    68d0:	48 8b 33             	mov    (%rbx),%rsi
    68d3:	48 89 e2             	mov    %rsp,%rdx
    68d6:	48 89 ef             	mov    %rbp,%rdi
    68d9:	4c 01 e6             	add    %r12,%rsi
    68dc:	e8 6f fb ff ff       	callq  6450 <mbedtls_cipher_finish>
    68e1:	85 c0                	test   %eax,%eax
    68e3:	75 cc                	jne    68b1 <mbedtls_cipher_crypt+0x61>
    68e5:	48 8b 14 24          	mov    (%rsp),%rdx
    68e9:	48 01 13             	add    %rdx,(%rbx)
    68ec:	eb c3                	jmp    68b1 <mbedtls_cipher_crypt+0x61>
    68ee:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    68f3:	eb bc                	jmp    68b1 <mbedtls_cipher_crypt+0x61>
    68f5:	e8 66 c9 ff ff       	callq  3260 <__stack_chk_fail@plt>
    68fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006900 <mbedtls_cipher_auth_encrypt_ext>:
    6900:	f3 0f 1e fa          	endbr64 
    6904:	41 56                	push   %r14
    6906:	49 89 f6             	mov    %rsi,%r14
    6909:	41 55                	push   %r13
    690b:	49 89 d5             	mov    %rdx,%r13
    690e:	4c 89 ca             	mov    %r9,%rdx
    6911:	41 54                	push   %r12
    6913:	55                   	push   %rbp
    6914:	53                   	push   %rbx
    6915:	4c 8b 17             	mov    (%rdi),%r10
    6918:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    691d:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
    6922:	41 8b 42 04          	mov    0x4(%r10),%eax
    6926:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
    692b:	48 8b 6c 24 48       	mov    0x48(%rsp),%rbp
    6930:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    6935:	44 8d 60 f4          	lea    -0xc(%rax),%r12d
    6939:	41 83 fc 01          	cmp    $0x1,%r12d
    693d:	76 71                	jbe    69b0 <mbedtls_cipher_auth_encrypt_ext+0xb0>
    693f:	4c 8d 24 1e          	lea    (%rsi,%rbx,1),%r12
    6943:	4d 39 cc             	cmp    %r9,%r12
    6946:	0f 87 14 01 00 00    	ja     6a60 <mbedtls_cipher_auth_encrypt_ext+0x160>
    694c:	4d 8d 0c 33          	lea    (%r11,%rsi,1),%r9
    6950:	83 f8 06             	cmp    $0x6,%eax
    6953:	0f 84 bf 00 00 00    	je     6a18 <mbedtls_cipher_auth_encrypt_ext+0x118>
    6959:	83 f8 08             	cmp    $0x8,%eax
    695c:	0f 84 8e 00 00 00    	je     69f0 <mbedtls_cipher_auth_encrypt_ext+0xf0>
    6962:	41 83 3a 4d          	cmpl   $0x4d,(%r10)
    6966:	0f 85 04 01 00 00    	jne    6a70 <mbedtls_cipher_auth_encrypt_ext+0x170>
    696c:	41 8b 42 18          	mov    0x18(%r10),%eax
    6970:	4c 39 e8             	cmp    %r13,%rax
    6973:	0f 85 d7 00 00 00    	jne    6a50 <mbedtls_cipher_auth_encrypt_ext+0x150>
    6979:	48 83 fb 10          	cmp    $0x10,%rbx
    697d:	0f 85 cd 00 00 00    	jne    6a50 <mbedtls_cipher_auth_encrypt_ext+0x150>
    6983:	48 89 75 00          	mov    %rsi,0x0(%rbp)
    6987:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    698b:	41 51                	push   %r9
    698d:	49 89 d1             	mov    %rdx,%r9
    6990:	4c 89 f2             	mov    %r14,%rdx
    6993:	41 53                	push   %r11
    6995:	e8 56 91 01 00       	callq  1faf0 <mbedtls_chachapoly_encrypt_and_tag>
    699a:	5a                   	pop    %rdx
    699b:	59                   	pop    %rcx
    699c:	48 01 5d 00          	add    %rbx,0x0(%rbp)
    69a0:	5b                   	pop    %rbx
    69a1:	5d                   	pop    %rbp
    69a2:	41 5c                	pop    %r12
    69a4:	41 5d                	pop    %r13
    69a6:	41 5e                	pop    %r14
    69a8:	c3                   	retq   
    69a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    69b0:	45 31 d2             	xor    %r10d,%r10d
    69b3:	83 f8 0c             	cmp    $0xc,%eax
    69b6:	41 0f 95 c2          	setne  %r10b
    69ba:	4d 09 e8             	or     %r13,%r8
    69bd:	49 09 d8             	or     %rbx,%r8
    69c0:	0f 85 9a 00 00 00    	jne    6a60 <mbedtls_cipher_auth_encrypt_ext+0x160>
    69c6:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    69ca:	48 89 f1             	mov    %rsi,%rcx
    69cd:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    69d2:	4d 89 d8             	mov    %r11,%r8
    69d5:	5b                   	pop    %rbx
    69d6:	49 89 e9             	mov    %rbp,%r9
    69d9:	44 89 d6             	mov    %r10d,%esi
    69dc:	5d                   	pop    %rbp
    69dd:	41 5c                	pop    %r12
    69df:	41 5d                	pop    %r13
    69e1:	41 5e                	pop    %r14
    69e3:	e9 78 4b 00 00       	jmpq   b560 <mbedtls_nist_kw_wrap>
    69e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    69ef:	00 
    69f0:	48 89 75 00          	mov    %rsi,0x0(%rbp)
    69f4:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    69f8:	53                   	push   %rbx
    69f9:	41 51                	push   %r9
    69fb:	4d 89 c1             	mov    %r8,%r9
    69fe:	49 89 c8             	mov    %rcx,%r8
    6a01:	4c 89 e9             	mov    %r13,%rcx
    6a04:	41 53                	push   %r11
    6a06:	52                   	push   %rdx
    6a07:	4c 89 f2             	mov    %r14,%rdx
    6a0a:	e8 d1 7e 01 00       	callq  1e8e0 <mbedtls_ccm_encrypt_and_tag>
    6a0f:	48 83 c4 20          	add    $0x20,%rsp
    6a13:	eb 87                	jmp    699c <mbedtls_cipher_auth_encrypt_ext+0x9c>
    6a15:	0f 1f 00             	nopl   (%rax)
    6a18:	48 83 ec 08          	sub    $0x8,%rsp
    6a1c:	48 89 75 00          	mov    %rsi,0x0(%rbp)
    6a20:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6a24:	41 51                	push   %r9
    6a26:	49 89 c9             	mov    %rcx,%r9
    6a29:	4c 89 f1             	mov    %r14,%rcx
    6a2c:	53                   	push   %rbx
    6a2d:	41 53                	push   %r11
    6a2f:	52                   	push   %rdx
    6a30:	48 89 f2             	mov    %rsi,%rdx
    6a33:	be 01 00 00 00       	mov    $0x1,%esi
    6a38:	41 50                	push   %r8
    6a3a:	4d 89 e8             	mov    %r13,%r8
    6a3d:	e8 1e dd ff ff       	callq  4760 <mbedtls_gcm_crypt_and_tag>
    6a42:	48 83 c4 30          	add    $0x30,%rsp
    6a46:	e9 51 ff ff ff       	jmpq   699c <mbedtls_cipher_auth_encrypt_ext+0x9c>
    6a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a50:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6a55:	e9 42 ff ff ff       	jmpq   699c <mbedtls_cipher_auth_encrypt_ext+0x9c>
    6a5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6a60:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6a65:	e9 36 ff ff ff       	jmpq   69a0 <mbedtls_cipher_auth_encrypt_ext+0xa0>
    6a6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6a70:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6a75:	e9 22 ff ff ff       	jmpq   699c <mbedtls_cipher_auth_encrypt_ext+0x9c>
    6a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006a80 <mbedtls_cipher_auth_decrypt_ext>:
    6a80:	f3 0f 1e fa          	endbr64 
    6a84:	41 57                	push   %r15
    6a86:	41 56                	push   %r14
    6a88:	49 89 ce             	mov    %rcx,%r14
    6a8b:	41 55                	push   %r13
    6a8d:	49 89 d5             	mov    %rdx,%r13
    6a90:	4c 89 ca             	mov    %r9,%rdx
    6a93:	41 54                	push   %r12
    6a95:	55                   	push   %rbp
    6a96:	53                   	push   %rbx
    6a97:	48 83 ec 08          	sub    $0x8,%rsp
    6a9b:	4c 8b 1f             	mov    (%rdi),%r11
    6a9e:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    6aa3:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    6aa8:	41 8b 43 04          	mov    0x4(%r11),%eax
    6aac:	48 8b 6c 24 50       	mov    0x50(%rsp),%rbp
    6ab1:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
    6ab6:	4c 8b 54 24 60       	mov    0x60(%rsp),%r10
    6abb:	8d 58 f4             	lea    -0xc(%rax),%ebx
    6abe:	83 fb 01             	cmp    $0x1,%ebx
    6ac1:	0f 86 89 00 00 00    	jbe    6b50 <mbedtls_cipher_auth_decrypt_ext+0xd0>
    6ac7:	4c 39 d1             	cmp    %r10,%rcx
    6aca:	0f 82 f0 00 00 00    	jb     6bc0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6ad0:	49 89 f4             	mov    %rsi,%r12
    6ad3:	48 89 ce             	mov    %rcx,%rsi
    6ad6:	4c 29 d6             	sub    %r10,%rsi
    6ad9:	48 39 ee             	cmp    %rbp,%rsi
    6adc:	0f 87 de 00 00 00    	ja     6bc0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6ae2:	48 8d 0c 32          	lea    (%rdx,%rsi,1),%rcx
    6ae6:	83 f8 06             	cmp    $0x6,%eax
    6ae9:	0f 84 e1 00 00 00    	je     6bd0 <mbedtls_cipher_auth_decrypt_ext+0x150>
    6aef:	83 f8 08             	cmp    $0x8,%eax
    6af2:	0f 84 88 00 00 00    	je     6b80 <mbedtls_cipher_auth_decrypt_ext+0x100>
    6af8:	41 83 3b 4d          	cmpl   $0x4d,(%r11)
    6afc:	0f 85 fe 00 00 00    	jne    6c00 <mbedtls_cipher_auth_decrypt_ext+0x180>
    6b02:	41 8b 43 18          	mov    0x18(%r11),%eax
    6b06:	4c 39 e8             	cmp    %r13,%rax
    6b09:	0f 85 b1 00 00 00    	jne    6bc0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6b0f:	49 83 fa 10          	cmp    $0x10,%r10
    6b13:	0f 85 a7 00 00 00    	jne    6bc0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6b19:	49 89 31             	mov    %rsi,(%r9)
    6b1c:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6b20:	49 89 c9             	mov    %rcx,%r9
    6b23:	4c 89 f1             	mov    %r14,%rcx
    6b26:	41 57                	push   %r15
    6b28:	52                   	push   %rdx
    6b29:	4c 89 e2             	mov    %r12,%rdx
    6b2c:	e8 ef 8f 01 00       	callq  1fb20 <mbedtls_chachapoly_auth_decrypt>
    6b31:	5a                   	pop    %rdx
    6b32:	59                   	pop    %rcx
    6b33:	83 f8 aa             	cmp    $0xffffffaa,%eax
    6b36:	74 6f                	je     6ba7 <mbedtls_cipher_auth_decrypt_ext+0x127>
    6b38:	48 83 c4 08          	add    $0x8,%rsp
    6b3c:	5b                   	pop    %rbx
    6b3d:	5d                   	pop    %rbp
    6b3e:	41 5c                	pop    %r12
    6b40:	41 5d                	pop    %r13
    6b42:	41 5e                	pop    %r14
    6b44:	41 5f                	pop    %r15
    6b46:	c3                   	retq   
    6b47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b4e:	00 00 
    6b50:	31 f6                	xor    %esi,%esi
    6b52:	83 f8 0c             	cmp    $0xc,%eax
    6b55:	40 0f 95 c6          	setne  %sil
    6b59:	4d 09 e8             	or     %r13,%r8
    6b5c:	4d 09 d0             	or     %r10,%r8
    6b5f:	75 5f                	jne    6bc0 <mbedtls_cipher_auth_decrypt_ext+0x140>
    6b61:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6b65:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
    6b6a:	48 83 c4 08          	add    $0x8,%rsp
    6b6e:	4d 89 f8             	mov    %r15,%r8
    6b71:	5b                   	pop    %rbx
    6b72:	5d                   	pop    %rbp
    6b73:	41 5c                	pop    %r12
    6b75:	41 5d                	pop    %r13
    6b77:	41 5e                	pop    %r14
    6b79:	41 5f                	pop    %r15
    6b7b:	e9 e0 4c 00 00       	jmpq   b860 <mbedtls_nist_kw_unwrap>
    6b80:	49 89 31             	mov    %rsi,(%r9)
    6b83:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6b87:	4d 89 c1             	mov    %r8,%r9
    6b8a:	4d 89 f0             	mov    %r14,%r8
    6b8d:	41 52                	push   %r10
    6b8f:	51                   	push   %rcx
    6b90:	4c 89 e9             	mov    %r13,%rcx
    6b93:	41 57                	push   %r15
    6b95:	52                   	push   %rdx
    6b96:	4c 89 e2             	mov    %r12,%rdx
    6b99:	e8 c2 7d 01 00       	callq  1e960 <mbedtls_ccm_auth_decrypt>
    6b9e:	48 83 c4 20          	add    $0x20,%rsp
    6ba2:	83 f8 f1             	cmp    $0xfffffff1,%eax
    6ba5:	75 91                	jne    6b38 <mbedtls_cipher_auth_decrypt_ext+0xb8>
    6ba7:	48 83 c4 08          	add    $0x8,%rsp
    6bab:	b8 00 9d ff ff       	mov    $0xffff9d00,%eax
    6bb0:	5b                   	pop    %rbx
    6bb1:	5d                   	pop    %rbp
    6bb2:	41 5c                	pop    %r12
    6bb4:	41 5d                	pop    %r13
    6bb6:	41 5e                	pop    %r14
    6bb8:	41 5f                	pop    %r15
    6bba:	c3                   	retq   
    6bbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6bc0:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6bc5:	e9 6e ff ff ff       	jmpq   6b38 <mbedtls_cipher_auth_decrypt_ext+0xb8>
    6bca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6bd0:	49 89 31             	mov    %rsi,(%r9)
    6bd3:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
    6bd7:	4d 89 c1             	mov    %r8,%r9
    6bda:	4d 89 f0             	mov    %r14,%r8
    6bdd:	41 57                	push   %r15
    6bdf:	52                   	push   %rdx
    6be0:	4c 89 e2             	mov    %r12,%rdx
    6be3:	41 52                	push   %r10
    6be5:	51                   	push   %rcx
    6be6:	4c 89 e9             	mov    %r13,%rcx
    6be9:	e8 32 dc ff ff       	callq  4820 <mbedtls_gcm_auth_decrypt>
    6bee:	48 83 c4 20          	add    $0x20,%rsp
    6bf2:	83 f8 ee             	cmp    $0xffffffee,%eax
    6bf5:	0f 85 3d ff ff ff    	jne    6b38 <mbedtls_cipher_auth_decrypt_ext+0xb8>
    6bfb:	eb aa                	jmp    6ba7 <mbedtls_cipher_auth_decrypt_ext+0x127>
    6bfd:	0f 1f 00             	nopl   (%rax)
    6c00:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    6c05:	e9 2e ff ff ff       	jmpq   6b38 <mbedtls_cipher_auth_decrypt_ext+0xb8>
    6c0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006c10 <kw_ctx_free>:
    6c10:	f3 0f 1e fa          	endbr64 
    6c14:	55                   	push   %rbp
    6c15:	48 89 fd             	mov    %rdi,%rbp
    6c18:	e8 23 49 00 00       	callq  b540 <mbedtls_nist_kw_free>
    6c1d:	48 89 ef             	mov    %rbp,%rdi
    6c20:	5d                   	pop    %rbp
    6c21:	e9 ba c5 ff ff       	jmpq   31e0 <free@plt>
    6c26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6c2d:	00 00 00 

0000000000006c30 <kw_ctx_alloc>:
    6c30:	f3 0f 1e fa          	endbr64 
    6c34:	41 54                	push   %r12
    6c36:	be 60 00 00 00       	mov    $0x60,%esi
    6c3b:	bf 01 00 00 00       	mov    $0x1,%edi
    6c40:	e8 7b c6 ff ff       	callq  32c0 <calloc@plt>
    6c45:	49 89 c4             	mov    %rax,%r12
    6c48:	48 85 c0             	test   %rax,%rax
    6c4b:	74 08                	je     6c55 <kw_ctx_alloc+0x25>
    6c4d:	48 89 c7             	mov    %rax,%rdi
    6c50:	e8 0b 48 00 00       	callq  b460 <mbedtls_nist_kw_init>
    6c55:	4c 89 e0             	mov    %r12,%rax
    6c58:	41 5c                	pop    %r12
    6c5a:	c3                   	retq   
    6c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006c60 <kw_aes_setkey_unwrap>:
    6c60:	f3 0f 1e fa          	endbr64 
    6c64:	89 d1                	mov    %edx,%ecx
    6c66:	45 31 c0             	xor    %r8d,%r8d
    6c69:	48 89 f2             	mov    %rsi,%rdx
    6c6c:	be 02 00 00 00       	mov    $0x2,%esi
    6c71:	e9 1a 48 00 00       	jmpq   b490 <mbedtls_nist_kw_setkey>
    6c76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6c7d:	00 00 00 

0000000000006c80 <kw_aes_setkey_wrap>:
    6c80:	f3 0f 1e fa          	endbr64 
    6c84:	89 d1                	mov    %edx,%ecx
    6c86:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    6c8c:	48 89 f2             	mov    %rsi,%rdx
    6c8f:	be 02 00 00 00       	mov    $0x2,%esi
    6c94:	e9 f7 47 00 00       	jmpq   b490 <mbedtls_nist_kw_setkey>
    6c99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006ca0 <chachapoly_ctx_free>:
    6ca0:	f3 0f 1e fa          	endbr64 
    6ca4:	55                   	push   %rbp
    6ca5:	48 89 fd             	mov    %rdi,%rbp
    6ca8:	e8 e3 89 01 00       	callq  1f690 <mbedtls_chachapoly_free>
    6cad:	48 89 ef             	mov    %rbp,%rdi
    6cb0:	5d                   	pop    %rbp
    6cb1:	e9 2a c5 ff ff       	jmpq   31e0 <free@plt>
    6cb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6cbd:	00 00 00 

0000000000006cc0 <chachapoly_ctx_alloc>:
    6cc0:	f3 0f 1e fa          	endbr64 
    6cc4:	41 54                	push   %r12
    6cc6:	be f0 00 00 00       	mov    $0xf0,%esi
    6ccb:	bf 01 00 00 00       	mov    $0x1,%edi
    6cd0:	e8 eb c5 ff ff       	callq  32c0 <calloc@plt>
    6cd5:	49 89 c4             	mov    %rax,%r12
    6cd8:	48 85 c0             	test   %rax,%rax
    6cdb:	74 08                	je     6ce5 <chachapoly_ctx_alloc+0x25>
    6cdd:	48 89 c7             	mov    %rax,%rdi
    6ce0:	e8 6b 89 01 00       	callq  1f650 <mbedtls_chachapoly_init>
    6ce5:	4c 89 e0             	mov    %r12,%rax
    6ce8:	41 5c                	pop    %r12
    6cea:	c3                   	retq   
    6ceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006cf0 <chachapoly_setkey_wrap>:
    6cf0:	f3 0f 1e fa          	endbr64 
    6cf4:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    6cfa:	75 1c                	jne    6d18 <chachapoly_setkey_wrap+0x28>
    6cfc:	48 83 ec 08          	sub    $0x8,%rsp
    6d00:	e8 db 89 01 00       	callq  1f6e0 <mbedtls_chachapoly_setkey>
    6d05:	85 c0                	test   %eax,%eax
    6d07:	75 05                	jne    6d0e <chachapoly_setkey_wrap+0x1e>
    6d09:	48 83 c4 08          	add    $0x8,%rsp
    6d0d:	c3                   	retq   
    6d0e:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6d13:	eb f4                	jmp    6d09 <chachapoly_setkey_wrap+0x19>
    6d15:	0f 1f 00             	nopl   (%rax)
    6d18:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6d1d:	c3                   	retq   
    6d1e:	66 90                	xchg   %ax,%ax

0000000000006d20 <chacha20_ctx_free>:
    6d20:	f3 0f 1e fa          	endbr64 
    6d24:	55                   	push   %rbp
    6d25:	48 89 fd             	mov    %rdi,%rbp
    6d28:	e8 83 82 01 00       	callq  1efb0 <mbedtls_chacha20_free>
    6d2d:	48 89 ef             	mov    %rbp,%rdi
    6d30:	5d                   	pop    %rbp
    6d31:	e9 aa c4 ff ff       	jmpq   31e0 <free@plt>
    6d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6d3d:	00 00 00 

0000000000006d40 <chacha20_ctx_alloc>:
    6d40:	f3 0f 1e fa          	endbr64 
    6d44:	41 54                	push   %r12
    6d46:	be 88 00 00 00       	mov    $0x88,%esi
    6d4b:	bf 01 00 00 00       	mov    $0x1,%edi
    6d50:	e8 6b c5 ff ff       	callq  32c0 <calloc@plt>
    6d55:	49 89 c4             	mov    %rax,%r12
    6d58:	48 85 c0             	test   %rax,%rax
    6d5b:	74 08                	je     6d65 <chacha20_ctx_alloc+0x25>
    6d5d:	48 89 c7             	mov    %rax,%rdi
    6d60:	e8 1b 82 01 00       	callq  1ef80 <mbedtls_chacha20_init>
    6d65:	4c 89 e0             	mov    %r12,%rax
    6d68:	41 5c                	pop    %r12
    6d6a:	c3                   	retq   
    6d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006d70 <chacha20_setkey_wrap>:
    6d70:	f3 0f 1e fa          	endbr64 
    6d74:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    6d7a:	75 1c                	jne    6d98 <chacha20_setkey_wrap+0x28>
    6d7c:	48 83 ec 08          	sub    $0x8,%rsp
    6d80:	e8 4b 82 01 00       	callq  1efd0 <mbedtls_chacha20_setkey>
    6d85:	85 c0                	test   %eax,%eax
    6d87:	75 05                	jne    6d8e <chacha20_setkey_wrap+0x1e>
    6d89:	48 83 c4 08          	add    $0x8,%rsp
    6d8d:	c3                   	retq   
    6d8e:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6d93:	eb f4                	jmp    6d89 <chacha20_setkey_wrap+0x19>
    6d95:	0f 1f 00             	nopl   (%rax)
    6d98:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6d9d:	c3                   	retq   
    6d9e:	66 90                	xchg   %ax,%ax

0000000000006da0 <chacha20_stream_wrap>:
    6da0:	f3 0f 1e fa          	endbr64 
    6da4:	48 83 ec 08          	sub    $0x8,%rsp
    6da8:	e8 c3 82 01 00       	callq  1f070 <mbedtls_chacha20_update>
    6dad:	83 f8 af             	cmp    $0xffffffaf,%eax
    6db0:	74 05                	je     6db7 <chacha20_stream_wrap+0x17>
    6db2:	48 83 c4 08          	add    $0x8,%rsp
    6db6:	c3                   	retq   
    6db7:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    6dbc:	eb f4                	jmp    6db2 <chacha20_stream_wrap+0x12>
    6dbe:	66 90                	xchg   %ax,%ax

0000000000006dc0 <des3_ctx_free>:
    6dc0:	f3 0f 1e fa          	endbr64 
    6dc4:	55                   	push   %rbp
    6dc5:	48 89 fd             	mov    %rdi,%rbp
    6dc8:	e8 c3 10 00 00       	callq  7e90 <mbedtls_des3_free>
    6dcd:	48 89 ef             	mov    %rbp,%rdi
    6dd0:	5d                   	pop    %rbp
    6dd1:	e9 0a c4 ff ff       	jmpq   31e0 <free@plt>
    6dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6ddd:	00 00 00 

0000000000006de0 <des3_ctx_alloc>:
    6de0:	f3 0f 1e fa          	endbr64 
    6de4:	41 54                	push   %r12
    6de6:	be 80 01 00 00       	mov    $0x180,%esi
    6deb:	bf 01 00 00 00       	mov    $0x1,%edi
    6df0:	e8 cb c4 ff ff       	callq  32c0 <calloc@plt>
    6df5:	49 89 c4             	mov    %rax,%r12
    6df8:	48 85 c0             	test   %rax,%rax
    6dfb:	74 08                	je     6e05 <des3_ctx_alloc+0x25>
    6dfd:	48 89 c7             	mov    %rax,%rdi
    6e00:	e8 4b 10 00 00       	callq  7e50 <mbedtls_des3_init>
    6e05:	4c 89 e0             	mov    %r12,%rax
    6e08:	41 5c                	pop    %r12
    6e0a:	c3                   	retq   
    6e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006e10 <des3_set3key_dec_wrap>:
    6e10:	f3 0f 1e fa          	endbr64 
    6e14:	e9 67 18 00 00       	jmpq   8680 <mbedtls_des3_set3key_dec>
    6e19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e20 <des3_set3key_enc_wrap>:
    6e20:	f3 0f 1e fa          	endbr64 
    6e24:	e9 f7 17 00 00       	jmpq   8620 <mbedtls_des3_set3key_enc>
    6e29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e30 <des3_crypt_cbc_wrap>:
    6e30:	f3 0f 1e fa          	endbr64 
    6e34:	e9 e7 20 00 00       	jmpq   8f20 <mbedtls_des3_crypt_cbc>
    6e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e40 <des3_crypt_ecb_wrap>:
    6e40:	f3 0f 1e fa          	endbr64 
    6e44:	48 89 d6             	mov    %rdx,%rsi
    6e47:	48 89 ca             	mov    %rcx,%rdx
    6e4a:	e9 01 1c 00 00       	jmpq   8a50 <mbedtls_des3_crypt_ecb>
    6e4f:	90                   	nop

0000000000006e50 <des3_set2key_dec_wrap>:
    6e50:	f3 0f 1e fa          	endbr64 
    6e54:	e9 67 17 00 00       	jmpq   85c0 <mbedtls_des3_set2key_dec>
    6e59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e60 <des3_set2key_enc_wrap>:
    6e60:	f3 0f 1e fa          	endbr64 
    6e64:	e9 f7 16 00 00       	jmpq   8560 <mbedtls_des3_set2key_enc>
    6e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006e70 <des_ctx_free>:
    6e70:	f3 0f 1e fa          	endbr64 
    6e74:	55                   	push   %rbp
    6e75:	48 89 fd             	mov    %rdi,%rbp
    6e78:	e8 b3 0f 00 00       	callq  7e30 <mbedtls_des_free>
    6e7d:	48 89 ef             	mov    %rbp,%rdi
    6e80:	5d                   	pop    %rbp
    6e81:	e9 5a c3 ff ff       	jmpq   31e0 <free@plt>
    6e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6e8d:	00 00 00 

0000000000006e90 <des_ctx_alloc>:
    6e90:	f3 0f 1e fa          	endbr64 
    6e94:	41 54                	push   %r12
    6e96:	be 80 00 00 00       	mov    $0x80,%esi
    6e9b:	bf 01 00 00 00       	mov    $0x1,%edi
    6ea0:	e8 1b c4 ff ff       	callq  32c0 <calloc@plt>
    6ea5:	49 89 c4             	mov    %rax,%r12
    6ea8:	48 85 c0             	test   %rax,%rax
    6eab:	74 08                	je     6eb5 <des_ctx_alloc+0x25>
    6ead:	48 89 c7             	mov    %rax,%rdi
    6eb0:	e8 4b 0f 00 00       	callq  7e00 <mbedtls_des_init>
    6eb5:	4c 89 e0             	mov    %r12,%rax
    6eb8:	41 5c                	pop    %r12
    6eba:	c3                   	retq   
    6ebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006ec0 <des_setkey_dec_wrap>:
    6ec0:	f3 0f 1e fa          	endbr64 
    6ec4:	e9 57 16 00 00       	jmpq   8520 <mbedtls_des_setkey_dec>
    6ec9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006ed0 <des_setkey_enc_wrap>:
    6ed0:	f3 0f 1e fa          	endbr64 
    6ed4:	e9 37 16 00 00       	jmpq   8510 <mbedtls_des_setkey_enc>
    6ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006ee0 <des_crypt_cbc_wrap>:
    6ee0:	f3 0f 1e fa          	endbr64 
    6ee4:	e9 b7 1a 00 00       	jmpq   89a0 <mbedtls_des_crypt_cbc>
    6ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006ef0 <des_crypt_ecb_wrap>:
    6ef0:	f3 0f 1e fa          	endbr64 
    6ef4:	48 89 d6             	mov    %rdx,%rsi
    6ef7:	48 89 ca             	mov    %rcx,%rdx
    6efa:	e9 e1 17 00 00       	jmpq   86e0 <mbedtls_des_crypt_ecb>
    6eff:	90                   	nop

0000000000006f00 <ccm_ctx_free>:
    6f00:	f3 0f 1e fa          	endbr64 
    6f04:	55                   	push   %rbp
    6f05:	48 89 fd             	mov    %rdi,%rbp
    6f08:	e8 63 6f 01 00       	callq  1de70 <mbedtls_ccm_free>
    6f0d:	48 89 ef             	mov    %rbp,%rdi
    6f10:	5d                   	pop    %rbp
    6f11:	e9 ca c2 ff ff       	jmpq   31e0 <free@plt>
    6f16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6f1d:	00 00 00 

0000000000006f20 <ccm_ctx_alloc>:
    6f20:	f3 0f 1e fa          	endbr64 
    6f24:	41 54                	push   %r12
    6f26:	be a8 00 00 00       	mov    $0xa8,%esi
    6f2b:	bf 01 00 00 00       	mov    $0x1,%edi
    6f30:	e8 8b c3 ff ff       	callq  32c0 <calloc@plt>
    6f35:	49 89 c4             	mov    %rax,%r12
    6f38:	48 85 c0             	test   %rax,%rax
    6f3b:	74 08                	je     6f45 <ccm_ctx_alloc+0x25>
    6f3d:	48 89 c7             	mov    %rax,%rdi
    6f40:	e8 5b 6e 01 00       	callq  1dda0 <mbedtls_ccm_init>
    6f45:	4c 89 e0             	mov    %r12,%rax
    6f48:	41 5c                	pop    %r12
    6f4a:	c3                   	retq   
    6f4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006f50 <ccm_aria_setkey_wrap>:
    6f50:	f3 0f 1e fa          	endbr64 
    6f54:	89 d1                	mov    %edx,%ecx
    6f56:	48 89 f2             	mov    %rsi,%rdx
    6f59:	be 06 00 00 00       	mov    $0x6,%esi
    6f5e:	e9 7d 6e 01 00       	jmpq   1dde0 <mbedtls_ccm_setkey>
    6f63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6f6a:	00 00 00 00 
    6f6e:	66 90                	xchg   %ax,%ax

0000000000006f70 <ccm_camellia_setkey_wrap>:
    6f70:	f3 0f 1e fa          	endbr64 
    6f74:	89 d1                	mov    %edx,%ecx
    6f76:	48 89 f2             	mov    %rsi,%rdx
    6f79:	be 05 00 00 00       	mov    $0x5,%esi
    6f7e:	e9 5d 6e 01 00       	jmpq   1dde0 <mbedtls_ccm_setkey>
    6f83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6f8a:	00 00 00 00 
    6f8e:	66 90                	xchg   %ax,%ax

0000000000006f90 <ccm_aes_setkey_wrap>:
    6f90:	f3 0f 1e fa          	endbr64 
    6f94:	89 d1                	mov    %edx,%ecx
    6f96:	48 89 f2             	mov    %rsi,%rdx
    6f99:	be 02 00 00 00       	mov    $0x2,%esi
    6f9e:	e9 3d 6e 01 00       	jmpq   1dde0 <mbedtls_ccm_setkey>
    6fa3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    6faa:	00 00 00 00 
    6fae:	66 90                	xchg   %ax,%ax

0000000000006fb0 <gcm_ctx_free>:
    6fb0:	f3 0f 1e fa          	endbr64 
    6fb4:	55                   	push   %rbp
    6fb5:	48 89 fd             	mov    %rdi,%rbp
    6fb8:	e8 23 d9 ff ff       	callq  48e0 <mbedtls_gcm_free>
    6fbd:	48 89 ef             	mov    %rbp,%rdi
    6fc0:	5d                   	pop    %rbp
    6fc1:	e9 1a c2 ff ff       	jmpq   31e0 <free@plt>
    6fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6fcd:	00 00 00 

0000000000006fd0 <gcm_ctx_alloc>:
    6fd0:	f3 0f 1e fa          	endbr64 
    6fd4:	41 54                	push   %r12
    6fd6:	be a8 01 00 00       	mov    $0x1a8,%esi
    6fdb:	bf 01 00 00 00       	mov    $0x1,%edi
    6fe0:	e8 db c2 ff ff       	callq  32c0 <calloc@plt>
    6fe5:	49 89 c4             	mov    %rax,%r12
    6fe8:	48 85 c0             	test   %rax,%rax
    6feb:	74 08                	je     6ff5 <gcm_ctx_alloc+0x25>
    6fed:	48 89 c7             	mov    %rax,%rdi
    6ff0:	e8 6b cd ff ff       	callq  3d60 <mbedtls_gcm_init>
    6ff5:	4c 89 e0             	mov    %r12,%rax
    6ff8:	41 5c                	pop    %r12
    6ffa:	c3                   	retq   
    6ffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007000 <gcm_aria_setkey_wrap>:
    7000:	f3 0f 1e fa          	endbr64 
    7004:	89 d1                	mov    %edx,%ecx
    7006:	48 89 f2             	mov    %rsi,%rdx
    7009:	be 06 00 00 00       	mov    $0x6,%esi
    700e:	e9 8d cd ff ff       	jmpq   3da0 <mbedtls_gcm_setkey>
    7013:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    701a:	00 00 00 00 
    701e:	66 90                	xchg   %ax,%ax

0000000000007020 <gcm_camellia_setkey_wrap>:
    7020:	f3 0f 1e fa          	endbr64 
    7024:	89 d1                	mov    %edx,%ecx
    7026:	48 89 f2             	mov    %rsi,%rdx
    7029:	be 05 00 00 00       	mov    $0x5,%esi
    702e:	e9 6d cd ff ff       	jmpq   3da0 <mbedtls_gcm_setkey>
    7033:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    703a:	00 00 00 00 
    703e:	66 90                	xchg   %ax,%ax

0000000000007040 <gcm_aes_setkey_wrap>:
    7040:	f3 0f 1e fa          	endbr64 
    7044:	89 d1                	mov    %edx,%ecx
    7046:	48 89 f2             	mov    %rsi,%rdx
    7049:	be 02 00 00 00       	mov    $0x2,%esi
    704e:	e9 4d cd ff ff       	jmpq   3da0 <mbedtls_gcm_setkey>
    7053:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    705a:	00 00 00 00 
    705e:	66 90                	xchg   %ax,%ax

0000000000007060 <aria_ctx_free>:
    7060:	f3 0f 1e fa          	endbr64 
    7064:	55                   	push   %rbp
    7065:	48 89 fd             	mov    %rdi,%rbp
    7068:	e8 b3 e1 00 00       	callq  15220 <mbedtls_aria_free>
    706d:	48 89 ef             	mov    %rbp,%rdi
    7070:	5d                   	pop    %rbp
    7071:	e9 6a c1 ff ff       	jmpq   31e0 <free@plt>
    7076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    707d:	00 00 00 

0000000000007080 <aria_ctx_alloc>:
    7080:	f3 0f 1e fa          	endbr64 
    7084:	41 54                	push   %r12
    7086:	be 14 01 00 00       	mov    $0x114,%esi
    708b:	bf 01 00 00 00       	mov    $0x1,%edi
    7090:	e8 2b c2 ff ff       	callq  32c0 <calloc@plt>
    7095:	49 89 c4             	mov    %rax,%r12
    7098:	48 85 c0             	test   %rax,%rax
    709b:	74 08                	je     70a5 <aria_ctx_alloc+0x25>
    709d:	48 89 c7             	mov    %rax,%rdi
    70a0:	e8 3b e1 00 00       	callq  151e0 <mbedtls_aria_init>
    70a5:	4c 89 e0             	mov    %r12,%rax
    70a8:	41 5c                	pop    %r12
    70aa:	c3                   	retq   
    70ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000070b0 <aria_setkey_dec_wrap>:
    70b0:	f3 0f 1e fa          	endbr64 
    70b4:	e9 b7 db 00 00       	jmpq   14c70 <mbedtls_aria_setkey_dec>
    70b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000070c0 <aria_setkey_enc_wrap>:
    70c0:	f3 0f 1e fa          	endbr64 
    70c4:	e9 77 d7 00 00       	jmpq   14840 <mbedtls_aria_setkey_enc>
    70c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000070d0 <aria_crypt_ctr_wrap>:
    70d0:	f3 0f 1e fa          	endbr64 
    70d4:	e9 27 e3 00 00       	jmpq   15400 <mbedtls_aria_crypt_ctr>
    70d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000070e0 <aria_crypt_cfb128_wrap>:
    70e0:	f3 0f 1e fa          	endbr64 
    70e4:	e9 07 e2 00 00       	jmpq   152f0 <mbedtls_aria_crypt_cfb128>
    70e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000070f0 <aria_crypt_cbc_wrap>:
    70f0:	f3 0f 1e fa          	endbr64 
    70f4:	e9 47 e1 00 00       	jmpq   15240 <mbedtls_aria_crypt_cbc>
    70f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007100 <aria_crypt_ecb_wrap>:
    7100:	f3 0f 1e fa          	endbr64 
    7104:	48 89 d6             	mov    %rdx,%rsi
    7107:	48 89 ca             	mov    %rcx,%rdx
    710a:	e9 a1 dc 00 00       	jmpq   14db0 <mbedtls_aria_crypt_ecb>
    710f:	90                   	nop

0000000000007110 <camellia_ctx_free>:
    7110:	f3 0f 1e fa          	endbr64 
    7114:	55                   	push   %rbp
    7115:	48 89 fd             	mov    %rdi,%rbp
    7118:	e8 43 55 01 00       	callq  1c660 <mbedtls_camellia_free>
    711d:	48 89 ef             	mov    %rbp,%rdi
    7120:	5d                   	pop    %rbp
    7121:	e9 ba c0 ff ff       	jmpq   31e0 <free@plt>
    7126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    712d:	00 00 00 

0000000000007130 <camellia_ctx_alloc>:
    7130:	f3 0f 1e fa          	endbr64 
    7134:	41 54                	push   %r12
    7136:	be 14 01 00 00       	mov    $0x114,%esi
    713b:	bf 01 00 00 00       	mov    $0x1,%edi
    7140:	e8 7b c1 ff ff       	callq  32c0 <calloc@plt>
    7145:	49 89 c4             	mov    %rax,%r12
    7148:	48 85 c0             	test   %rax,%rax
    714b:	74 08                	je     7155 <camellia_ctx_alloc+0x25>
    714d:	48 89 c7             	mov    %rax,%rdi
    7150:	e8 cb 54 01 00       	callq  1c620 <mbedtls_camellia_init>
    7155:	4c 89 e0             	mov    %r12,%rax
    7158:	41 5c                	pop    %r12
    715a:	c3                   	retq   
    715b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007160 <camellia_setkey_dec_wrap>:
    7160:	f3 0f 1e fa          	endbr64 
    7164:	e9 27 5d 01 00       	jmpq   1ce90 <mbedtls_camellia_setkey_dec>
    7169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007170 <camellia_setkey_enc_wrap>:
    7170:	f3 0f 1e fa          	endbr64 
    7174:	e9 07 55 01 00       	jmpq   1c680 <mbedtls_camellia_setkey_enc>
    7179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007180 <camellia_crypt_ctr_wrap>:
    7180:	f3 0f 1e fa          	endbr64 
    7184:	e9 17 62 01 00       	jmpq   1d3a0 <mbedtls_camellia_crypt_ctr>
    7189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007190 <camellia_crypt_cfb128_wrap>:
    7190:	f3 0f 1e fa          	endbr64 
    7194:	e9 e7 60 01 00       	jmpq   1d280 <mbedtls_camellia_crypt_cfb128>
    7199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000071a0 <camellia_crypt_cbc_wrap>:
    71a0:	f3 0f 1e fa          	endbr64 
    71a4:	e9 c7 5f 01 00       	jmpq   1d170 <mbedtls_camellia_crypt_cbc>
    71a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000071b0 <camellia_crypt_ecb_wrap>:
    71b0:	f3 0f 1e fa          	endbr64 
    71b4:	e9 f7 5d 01 00       	jmpq   1cfb0 <mbedtls_camellia_crypt_ecb>
    71b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000071c0 <xts_aes_ctx_alloc>:
    71c0:	f3 0f 1e fa          	endbr64 
    71c4:	41 54                	push   %r12
    71c6:	be 40 02 00 00       	mov    $0x240,%esi
    71cb:	bf 01 00 00 00       	mov    $0x1,%edi
    71d0:	e8 eb c0 ff ff       	callq  32c0 <calloc@plt>
    71d5:	49 89 c4             	mov    %rax,%r12
    71d8:	48 85 c0             	test   %rax,%rax
    71db:	74 08                	je     71e5 <xts_aes_ctx_alloc+0x25>
    71dd:	48 89 c7             	mov    %rax,%rdi
    71e0:	e8 bb af 00 00       	callq  121a0 <mbedtls_aes_xts_init>
    71e5:	4c 89 e0             	mov    %r12,%rax
    71e8:	41 5c                	pop    %r12
    71ea:	c3                   	retq   
    71eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000071f0 <xts_aes_setkey_dec_wrap>:
    71f0:	f3 0f 1e fa          	endbr64 
    71f4:	e9 c7 b5 00 00       	jmpq   127c0 <mbedtls_aes_xts_setkey_dec>
    71f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007200 <xts_aes_setkey_enc_wrap>:
    7200:	f3 0f 1e fa          	endbr64 
    7204:	e9 57 b5 00 00       	jmpq   12760 <mbedtls_aes_xts_setkey_enc>
    7209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007210 <aes_crypt_xts_wrap>:
    7210:	f3 0f 1e fa          	endbr64 
    7214:	85 f6                	test   %esi,%esi
    7216:	74 10                	je     7228 <aes_crypt_xts_wrap+0x18>
    7218:	83 fe 01             	cmp    $0x1,%esi
    721b:	74 0b                	je     7228 <aes_crypt_xts_wrap+0x18>
    721d:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    7222:	c3                   	retq   
    7223:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7228:	e9 23 c0 00 00       	jmpq   13250 <mbedtls_aes_crypt_xts>
    722d:	0f 1f 00             	nopl   (%rax)

0000000000007230 <aes_ctx_free>:
    7230:	f3 0f 1e fa          	endbr64 
    7234:	55                   	push   %rbp
    7235:	48 89 fd             	mov    %rdi,%rbp
    7238:	e8 43 af 00 00       	callq  12180 <mbedtls_aes_free>
    723d:	48 89 ef             	mov    %rbp,%rdi
    7240:	5d                   	pop    %rbp
    7241:	e9 9a bf ff ff       	jmpq   31e0 <free@plt>
    7246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    724d:	00 00 00 

0000000000007250 <aes_ctx_alloc>:
    7250:	e9 cb e3 02 00       	jmpq   35620 <aes_ctx_alloc.instr.bb_7250>
    7255:	54                   	push   %rsp
    7256:	be 20 01 00 00       	mov    $0x120,%esi
    725b:	bf 01 00 00 00       	mov    $0x1,%edi
    7260:	e8 5b c0 ff ff       	callq  32c0 <calloc@plt>
    7265:	e9 0b e4 02 00       	jmpq   35675 <instr.bb_7265>
    726a:	c0 74 08 e9 0f       	shlb   $0xf,-0x17(%rax,%rcx,1)
    726f:	e4 02                	in     $0x2,%al
    7271:	00 ae 00 00 e9 0f    	add    %ch,0xfe90000(%rsi)
    7277:	e4 02                	in     $0x2,%al
    7279:	00 c3                	add    %al,%bl
    727b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007280 <aes_setkey_dec_wrap>:
    7280:	f3 0f 1e fa          	endbr64 
    7284:	e9 f7 b2 00 00       	jmpq   12580 <mbedtls_aes_setkey_dec>
    7289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007290 <aes_setkey_enc_wrap>:
    7290:	e9 fb e3 02 00       	jmpq   35690 <aes_setkey_enc_wrap.instr.bb_7290>
    7295:	b7 af                	mov    $0xaf,%bh
    7297:	00 00                	add    %al,(%rax)
    7299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072a0 <aes_crypt_ctr_wrap>:
    72a0:	f3 0f 1e fa          	endbr64 
    72a4:	e9 37 c5 00 00       	jmpq   137e0 <mbedtls_aes_crypt_ctr>
    72a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072b0 <aes_crypt_ofb_wrap>:
    72b0:	f3 0f 1e fa          	endbr64 
    72b4:	e9 77 c4 00 00       	jmpq   13730 <mbedtls_aes_crypt_ofb>
    72b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072c0 <aes_crypt_cfb128_wrap>:
    72c0:	f3 0f 1e fa          	endbr64 
    72c4:	e9 57 c2 00 00       	jmpq   13520 <mbedtls_aes_crypt_cfb128>
    72c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072d0 <aes_crypt_cbc_wrap>:
    72d0:	f3 0f 1e fa          	endbr64 
    72d4:	e9 67 be 00 00       	jmpq   13140 <mbedtls_aes_crypt_cbc>
    72d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000072e0 <aes_crypt_ecb_wrap>:
    72e0:	e9 bb e3 02 00       	jmpq   356a0 <aes_crypt_ecb_wrap.instr.bb_72e0>
    72e5:	c7                   	(bad)  
    72e6:	bd 00 00 0f 1f       	mov    $0x1f0f0000,%ebp
    72eb:	80 00 00             	addb   $0x0,(%rax)
	...

00000000000072f0 <xts_aes_ctx_free>:
    72f0:	f3 0f 1e fa          	endbr64 
    72f4:	48 85 ff             	test   %rdi,%rdi
    72f7:	74 17                	je     7310 <xts_aes_ctx_free+0x20>
    72f9:	55                   	push   %rbp
    72fa:	48 89 fd             	mov    %rdi,%rbp
    72fd:	e8 0e af 00 00       	callq  12210 <mbedtls_aes_xts_free>
    7302:	48 89 ef             	mov    %rbp,%rdi
    7305:	5d                   	pop    %rbp
    7306:	e9 d5 be ff ff       	jmpq   31e0 <free@plt>
    730b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7310:	c3                   	retq   
    7311:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7318:	00 00 00 
    731b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007320 <mbedtls_ct_memcmp>:
    7320:	f3 0f 1e fa          	endbr64 
    7324:	48 85 d2             	test   %rdx,%rdx
    7327:	74 27                	je     7350 <mbedtls_ct_memcmp+0x30>
    7329:	4c 8d 04 17          	lea    (%rdi,%rdx,1),%r8
    732d:	31 c0                	xor    %eax,%eax
    732f:	90                   	nop
    7330:	0f b6 17             	movzbl (%rdi),%edx
    7333:	0f b6 0e             	movzbl (%rsi),%ecx
    7336:	48 83 c7 01          	add    $0x1,%rdi
    733a:	48 83 c6 01          	add    $0x1,%rsi
    733e:	31 ca                	xor    %ecx,%edx
    7340:	0f b6 d2             	movzbl %dl,%edx
    7343:	09 d0                	or     %edx,%eax
    7345:	4c 39 c7             	cmp    %r8,%rdi
    7348:	75 e6                	jne    7330 <mbedtls_ct_memcmp+0x10>
    734a:	c3                   	retq   
    734b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7350:	31 c0                	xor    %eax,%eax
    7352:	c3                   	retq   
    7353:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    735a:	00 00 00 00 
    735e:	66 90                	xchg   %ax,%ax

0000000000007360 <mbedtls_ct_uint_mask>:
    7360:	f3 0f 1e fa          	endbr64 
    7364:	41 89 f8             	mov    %edi,%r8d
    7367:	f7 df                	neg    %edi
    7369:	44 09 c7             	or     %r8d,%edi
    736c:	89 f8                	mov    %edi,%eax
    736e:	c1 f8 1f             	sar    $0x1f,%eax
    7371:	c3                   	retq   
    7372:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7379:	00 00 00 00 
    737d:	0f 1f 00             	nopl   (%rax)

0000000000007380 <mbedtls_ct_size_mask>:
    7380:	f3 0f 1e fa          	endbr64 
    7384:	49 89 f8             	mov    %rdi,%r8
    7387:	48 f7 df             	neg    %rdi
    738a:	4c 09 c7             	or     %r8,%rdi
    738d:	48 89 f8             	mov    %rdi,%rax
    7390:	48 c1 f8 3f          	sar    $0x3f,%rax
    7394:	c3                   	retq   
    7395:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    739c:	00 00 00 00 

00000000000073a0 <mbedtls_ct_mpi_uint_mask>:
    73a0:	f3 0f 1e fa          	endbr64 
    73a4:	49 89 f8             	mov    %rdi,%r8
    73a7:	48 f7 df             	neg    %rdi
    73aa:	4c 09 c7             	or     %r8,%rdi
    73ad:	48 89 f8             	mov    %rdi,%rax
    73b0:	48 c1 f8 3f          	sar    $0x3f,%rax
    73b4:	c3                   	retq   
    73b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    73bc:	00 00 00 00 

00000000000073c0 <mbedtls_ct_size_mask_ge>:
    73c0:	f3 0f 1e fa          	endbr64 
    73c4:	48 89 f8             	mov    %rdi,%rax
    73c7:	48 29 f0             	sub    %rsi,%rax
    73ca:	48 c1 f8 3f          	sar    $0x3f,%rax
    73ce:	48 f7 d0             	not    %rax
    73d1:	c3                   	retq   
    73d2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    73d9:	00 00 00 00 
    73dd:	0f 1f 00             	nopl   (%rax)

00000000000073e0 <mbedtls_ct_size_bool_eq>:
    73e0:	f3 0f 1e fa          	endbr64 
    73e4:	48 31 fe             	xor    %rdi,%rsi
    73e7:	48 89 f0             	mov    %rsi,%rax
    73ea:	48 f7 d8             	neg    %rax
    73ed:	48 09 f0             	or     %rsi,%rax
    73f0:	48 c1 e8 3f          	shr    $0x3f,%rax
    73f4:	83 f0 01             	xor    $0x1,%eax
    73f7:	c3                   	retq   
    73f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    73ff:	00 

0000000000007400 <mbedtls_ct_mpi_uint_lt>:
    7400:	f3 0f 1e fa          	endbr64 
    7404:	48 89 fa             	mov    %rdi,%rdx
    7407:	48 89 f0             	mov    %rsi,%rax
    740a:	48 31 f7             	xor    %rsi,%rdi
    740d:	48 29 f2             	sub    %rsi,%rdx
    7410:	48 31 d0             	xor    %rdx,%rax
    7413:	48 21 f8             	and    %rdi,%rax
    7416:	48 31 d0             	xor    %rdx,%rax
    7419:	48 c1 e8 3f          	shr    $0x3f,%rax
    741d:	c3                   	retq   
    741e:	66 90                	xchg   %ax,%ax

0000000000007420 <mbedtls_ct_uint_if>:
    7420:	f3 0f 1e fa          	endbr64 
    7424:	41 89 f8             	mov    %edi,%r8d
    7427:	f7 df                	neg    %edi
    7429:	31 d6                	xor    %edx,%esi
    742b:	89 d0                	mov    %edx,%eax
    742d:	44 09 c7             	or     %r8d,%edi
    7430:	c1 ff 1f             	sar    $0x1f,%edi
    7433:	21 f7                	and    %esi,%edi
    7435:	31 f8                	xor    %edi,%eax
    7437:	c3                   	retq   
    7438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    743f:	00 

0000000000007440 <mbedtls_ct_mpi_uint_cond_assign>:
    7440:	f3 0f 1e fa          	endbr64 
    7444:	0f b6 c9             	movzbl %cl,%ecx
    7447:	31 c0                	xor    %eax,%eax
    7449:	41 89 ca             	mov    %ecx,%r10d
    744c:	83 e9 01             	sub    $0x1,%ecx
    744f:	41 f7 da             	neg    %r10d
    7452:	4c 63 c9             	movslq %ecx,%r9
    7455:	4d 63 d2             	movslq %r10d,%r10
    7458:	48 85 ff             	test   %rdi,%rdi
    745b:	74 21                	je     747e <mbedtls_ct_mpi_uint_cond_assign+0x3e>
    745d:	0f 1f 00             	nopl   (%rax)
    7460:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    7464:	4c 8b 04 c6          	mov    (%rsi,%rax,8),%r8
    7468:	4c 21 d1             	and    %r10,%rcx
    746b:	4d 21 c8             	and    %r9,%r8
    746e:	4c 09 c1             	or     %r8,%rcx
    7471:	48 89 0c c6          	mov    %rcx,(%rsi,%rax,8)
    7475:	48 83 c0 01          	add    $0x1,%rax
    7479:	48 39 c7             	cmp    %rax,%rdi
    747c:	75 e2                	jne    7460 <mbedtls_ct_mpi_uint_cond_assign+0x20>
    747e:	c3                   	retq   
    747f:	90                   	nop

0000000000007480 <mbedtls_ct_base64_enc_char>:
    7480:	f3 0f 1e fa          	endbr64 
    7484:	40 0f b6 ff          	movzbl %dil,%edi
    7488:	ba 3e 00 00 00       	mov    $0x3e,%edx
    748d:	29 fa                	sub    %edi,%edx
    748f:	8d 47 c2             	lea    -0x3e(%rdi),%eax
    7492:	8d 4f 41             	lea    0x41(%rdi),%ecx
    7495:	c1 ea 08             	shr    $0x8,%edx
    7498:	c1 e8 08             	shr    $0x8,%eax
    749b:	09 d0                	or     %edx,%eax
    749d:	f7 d0                	not    %eax
    749f:	83 e0 2b             	and    $0x2b,%eax
    74a2:	89 c2                	mov    %eax,%edx
    74a4:	b8 19 00 00 00       	mov    $0x19,%eax
    74a9:	29 f8                	sub    %edi,%eax
    74ab:	c1 e8 08             	shr    $0x8,%eax
    74ae:	f7 d0                	not    %eax
    74b0:	21 c8                	and    %ecx,%eax
    74b2:	b9 3f 00 00 00       	mov    $0x3f,%ecx
    74b7:	09 d0                	or     %edx,%eax
    74b9:	29 f9                	sub    %edi,%ecx
    74bb:	8d 57 c1             	lea    -0x3f(%rdi),%edx
    74be:	c1 e9 08             	shr    $0x8,%ecx
    74c1:	c1 ea 08             	shr    $0x8,%edx
    74c4:	09 ca                	or     %ecx,%edx
    74c6:	b9 33 00 00 00       	mov    $0x33,%ecx
    74cb:	f7 d2                	not    %edx
    74cd:	29 f9                	sub    %edi,%ecx
    74cf:	83 e2 2f             	and    $0x2f,%edx
    74d2:	c1 e9 08             	shr    $0x8,%ecx
    74d5:	09 d0                	or     %edx,%eax
    74d7:	8d 57 e6             	lea    -0x1a(%rdi),%edx
    74da:	c1 ea 08             	shr    $0x8,%edx
    74dd:	09 ca                	or     %ecx,%edx
    74df:	8d 4f 47             	lea    0x47(%rdi),%ecx
    74e2:	f7 d2                	not    %edx
    74e4:	21 ca                	and    %ecx,%edx
    74e6:	b9 3d 00 00 00       	mov    $0x3d,%ecx
    74eb:	09 c2                	or     %eax,%edx
    74ed:	29 f9                	sub    %edi,%ecx
    74ef:	8d 47 cc             	lea    -0x34(%rdi),%eax
    74f2:	83 ef 04             	sub    $0x4,%edi
    74f5:	c1 e8 08             	shr    $0x8,%eax
    74f8:	c1 e9 08             	shr    $0x8,%ecx
    74fb:	09 c8                	or     %ecx,%eax
    74fd:	f7 d0                	not    %eax
    74ff:	21 c7                	and    %eax,%edi
    7501:	89 f8                	mov    %edi,%eax
    7503:	09 d0                	or     %edx,%eax
    7505:	c3                   	retq   
    7506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    750d:	00 00 00 

0000000000007510 <mbedtls_ct_base64_dec_value>:
    7510:	f3 0f 1e fa          	endbr64 
    7514:	40 0f b6 ff          	movzbl %dil,%edi
    7518:	ba 5a 00 00 00       	mov    $0x5a,%edx
    751d:	b9 7a 00 00 00       	mov    $0x7a,%ecx
    7522:	29 fa                	sub    %edi,%edx
    7524:	8d 47 bf             	lea    -0x41(%rdi),%eax
    7527:	29 f9                	sub    %edi,%ecx
    7529:	c1 ea 08             	shr    $0x8,%edx
    752c:	c1 e8 08             	shr    $0x8,%eax
    752f:	09 d0                	or     %edx,%eax
    7531:	8d 57 c0             	lea    -0x40(%rdi),%edx
    7534:	c1 e9 08             	shr    $0x8,%ecx
    7537:	f7 d0                	not    %eax
    7539:	21 c2                	and    %eax,%edx
    753b:	8d 47 9f             	lea    -0x61(%rdi),%eax
    753e:	c1 e8 08             	shr    $0x8,%eax
    7541:	09 c8                	or     %ecx,%eax
    7543:	8d 4f ba             	lea    -0x46(%rdi),%ecx
    7546:	f7 d0                	not    %eax
    7548:	21 c8                	and    %ecx,%eax
    754a:	b9 39 00 00 00       	mov    $0x39,%ecx
    754f:	09 d0                	or     %edx,%eax
    7551:	29 f9                	sub    %edi,%ecx
    7553:	8d 57 d0             	lea    -0x30(%rdi),%edx
    7556:	c1 e9 08             	shr    $0x8,%ecx
    7559:	c1 ea 08             	shr    $0x8,%edx
    755c:	09 ca                	or     %ecx,%edx
    755e:	8d 4f 05             	lea    0x5(%rdi),%ecx
    7561:	f7 d2                	not    %edx
    7563:	21 ca                	and    %ecx,%edx
    7565:	b9 2b 00 00 00       	mov    $0x2b,%ecx
    756a:	09 d0                	or     %edx,%eax
    756c:	29 f9                	sub    %edi,%ecx
    756e:	8d 57 d5             	lea    -0x2b(%rdi),%edx
    7571:	c1 e9 08             	shr    $0x8,%ecx
    7574:	c1 ea 08             	shr    $0x8,%edx
    7577:	09 ca                	or     %ecx,%edx
    7579:	8d 4f 14             	lea    0x14(%rdi),%ecx
    757c:	f7 d2                	not    %edx
    757e:	21 ca                	and    %ecx,%edx
    7580:	b9 2f 00 00 00       	mov    $0x2f,%ecx
    7585:	09 c2                	or     %eax,%edx
    7587:	29 f9                	sub    %edi,%ecx
    7589:	8d 47 d1             	lea    -0x2f(%rdi),%eax
    758c:	83 c7 11             	add    $0x11,%edi
    758f:	c1 e8 08             	shr    $0x8,%eax
    7592:	c1 e9 08             	shr    $0x8,%ecx
    7595:	09 c8                	or     %ecx,%eax
    7597:	f7 d0                	not    %eax
    7599:	21 c7                	and    %eax,%edi
    759b:	09 d7                	or     %edx,%edi
    759d:	8d 47 ff             	lea    -0x1(%rdi),%eax
    75a0:	c3                   	retq   
    75a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    75a8:	00 00 00 00 
    75ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000075b0 <mbedtls_ct_memcpy_if_eq>:
    75b0:	f3 0f 1e fa          	endbr64 
    75b4:	4c 31 c1             	xor    %r8,%rcx
    75b7:	48 89 c8             	mov    %rcx,%rax
    75ba:	48 f7 d8             	neg    %rax
    75bd:	48 09 c8             	or     %rcx,%rax
    75c0:	48 c1 e8 3f          	shr    $0x3f,%rax
    75c4:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
    75c8:	45 89 ca             	mov    %r9d,%r10d
    75cb:	45 89 cb             	mov    %r9d,%r11d
    75ce:	48 83 fa 03          	cmp    $0x3,%rdx
    75d2:	76 5c                	jbe    7630 <mbedtls_ct_memcpy_if_eq+0x80>
    75d4:	b8 04 00 00 00       	mov    $0x4,%eax
    75d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    75e0:	44 8b 44 07 fc       	mov    -0x4(%rdi,%rax,1),%r8d
    75e5:	8b 4c 06 fc          	mov    -0x4(%rsi,%rax,1),%ecx
    75e9:	44 31 c1             	xor    %r8d,%ecx
    75ec:	44 21 d1             	and    %r10d,%ecx
    75ef:	44 31 c1             	xor    %r8d,%ecx
    75f2:	89 4c 07 fc          	mov    %ecx,-0x4(%rdi,%rax,1)
    75f6:	48 89 c1             	mov    %rax,%rcx
    75f9:	48 83 c0 04          	add    $0x4,%rax
    75fd:	48 39 c2             	cmp    %rax,%rdx
    7600:	73 de                	jae    75e0 <mbedtls_ct_memcpy_if_eq+0x30>
    7602:	44 89 c8             	mov    %r9d,%eax
    7605:	f7 d0                	not    %eax
    7607:	48 39 ca             	cmp    %rcx,%rdx
    760a:	76 20                	jbe    762c <mbedtls_ct_memcpy_if_eq+0x7c>
    760c:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
    7611:	44 0f b6 0c 0f       	movzbl (%rdi,%rcx,1),%r9d
    7616:	45 21 d8             	and    %r11d,%r8d
    7619:	41 21 c1             	and    %eax,%r9d
    761c:	45 09 c8             	or     %r9d,%r8d
    761f:	44 88 04 0f          	mov    %r8b,(%rdi,%rcx,1)
    7623:	48 83 c1 01          	add    $0x1,%rcx
    7627:	48 39 ca             	cmp    %rcx,%rdx
    762a:	75 e0                	jne    760c <mbedtls_ct_memcpy_if_eq+0x5c>
    762c:	c3                   	retq   
    762d:	0f 1f 00             	nopl   (%rax)
    7630:	31 c9                	xor    %ecx,%ecx
    7632:	eb ce                	jmp    7602 <mbedtls_ct_memcpy_if_eq+0x52>
    7634:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    763b:	00 00 00 00 
    763f:	90                   	nop

0000000000007640 <mbedtls_ct_memcpy_offset>:
    7640:	f3 0f 1e fa          	endbr64 
    7644:	4c 39 c1             	cmp    %r8,%rcx
    7647:	77 37                	ja     7680 <mbedtls_ct_memcpy_offset+0x40>
    7649:	41 55                	push   %r13
    764b:	49 89 f5             	mov    %rsi,%r13
    764e:	41 54                	push   %r12
    7650:	49 89 d4             	mov    %rdx,%r12
    7653:	4c 89 ca             	mov    %r9,%rdx
    7656:	55                   	push   %rbp
    7657:	4c 89 c5             	mov    %r8,%rbp
    765a:	53                   	push   %rbx
    765b:	48 89 cb             	mov    %rcx,%rbx
    765e:	66 90                	xchg   %ax,%ax
    7660:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    7665:	48 89 d9             	mov    %rbx,%rcx
    7668:	4d 89 e0             	mov    %r12,%r8
    766b:	48 83 c3 01          	add    $0x1,%rbx
    766f:	e8 3c ff ff ff       	callq  75b0 <mbedtls_ct_memcpy_if_eq>
    7674:	48 39 dd             	cmp    %rbx,%rbp
    7677:	73 e7                	jae    7660 <mbedtls_ct_memcpy_offset+0x20>
    7679:	5b                   	pop    %rbx
    767a:	5d                   	pop    %rbp
    767b:	41 5c                	pop    %r12
    767d:	41 5d                	pop    %r13
    767f:	c3                   	retq   
    7680:	c3                   	retq   
    7681:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7688:	00 00 00 00 
    768c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007690 <mbedtls_ct_hmac>:
    7690:	f3 0f 1e fa          	endbr64 
    7694:	41 57                	push   %r15
    7696:	49 89 d7             	mov    %rdx,%r15
    7699:	41 56                	push   %r14
    769b:	41 55                	push   %r13
    769d:	49 89 f5             	mov    %rsi,%r13
    76a0:	41 54                	push   %r12
    76a2:	55                   	push   %rbp
    76a3:	48 89 fd             	mov    %rdi,%rbp
    76a6:	53                   	push   %rbx
    76a7:	4c 89 cb             	mov    %r9,%rbx
    76aa:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    76b1:	48 8b 3f             	mov    (%rdi),%rdi
    76b4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    76b9:	4c 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%r14
    76c0:	00 
    76c1:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    76c6:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    76cb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    76d2:	00 00 
    76d4:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    76db:	00 
    76dc:	31 c0                	xor    %eax,%eax
    76de:	e8 6d 25 00 00       	callq  9c50 <mbedtls_md_get_type>
    76e3:	ba 80 00 00 00       	mov    $0x80,%edx
    76e8:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    76ec:	83 f8 05             	cmp    $0x5,%eax
    76ef:	b8 40 00 00 00       	mov    $0x40,%eax
    76f4:	48 0f 44 c2          	cmove  %rdx,%rax
    76f8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    76fd:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7701:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7706:	e8 25 25 00 00       	callq  9c30 <mbedtls_md_get_size>
    770b:	4c 89 e7             	mov    %r12,%rdi
    770e:	88 44 24 18          	mov    %al,0x18(%rsp)
    7712:	e8 59 1f 00 00       	callq  9670 <mbedtls_md_init>
    7717:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    771b:	31 d2                	xor    %edx,%edx
    771d:	4c 89 e7             	mov    %r12,%rdi
    7720:	e8 3b 21 00 00       	callq  9860 <mbedtls_md_setup>
    7725:	85 c0                	test   %eax,%eax
    7727:	74 3f                	je     7768 <mbedtls_ct_hmac+0xd8>
    7729:	4c 89 e7             	mov    %r12,%rdi
    772c:	89 44 24 08          	mov    %eax,0x8(%rsp)
    7730:	e8 5b 1f 00 00       	callq  9690 <mbedtls_md_free>
    7735:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    773c:	00 
    773d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7744:	00 00 
    7746:	8b 44 24 08          	mov    0x8(%rsp),%eax
    774a:	0f 85 dd 01 00 00    	jne    792d <mbedtls_ct_hmac+0x29d>
    7750:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    7757:	5b                   	pop    %rbx
    7758:	5d                   	pop    %rbp
    7759:	41 5c                	pop    %r12
    775b:	41 5d                	pop    %r13
    775d:	41 5e                	pop    %r14
    775f:	41 5f                	pop    %r15
    7761:	c3                   	retq   
    7762:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7768:	4c 89 fa             	mov    %r15,%rdx
    776b:	4c 89 ee             	mov    %r13,%rsi
    776e:	48 89 ef             	mov    %rbp,%rdi
    7771:	e8 1a 23 00 00       	callq  9a90 <mbedtls_md_update>
    7776:	85 c0                	test   %eax,%eax
    7778:	75 af                	jne    7729 <mbedtls_ct_hmac+0x99>
    777a:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    777f:	48 89 da             	mov    %rbx,%rdx
    7782:	48 89 ef             	mov    %rbp,%rdi
    7785:	e8 06 23 00 00       	callq  9a90 <mbedtls_md_update>
    778a:	85 c0                	test   %eax,%eax
    778c:	75 9b                	jne    7729 <mbedtls_ct_hmac+0x99>
    778e:	48 b8 21 21 21 21 21 	movabs $0x2121212121212121,%rax
    7795:	21 21 21 
    7798:	44 0f b6 7c 24 18    	movzbl 0x18(%rsp),%r15d
    779e:	41 83 ff 08          	cmp    $0x8,%r15d
    77a2:	0f 83 a8 00 00 00    	jae    7850 <mbedtls_ct_hmac+0x1c0>
    77a8:	41 f6 c7 04          	test   $0x4,%r15b
    77ac:	0f 85 66 01 00 00    	jne    7918 <mbedtls_ct_hmac+0x288>
    77b2:	45 85 ff             	test   %r15d,%r15d
    77b5:	0f 85 bd 00 00 00    	jne    7878 <mbedtls_ct_hmac+0x1e8>
    77bb:	48 3b 9c 24 e0 00 00 	cmp    0xe0(%rsp),%rbx
    77c2:	00 
    77c3:	0f 87 cd 00 00 00    	ja     7896 <mbedtls_ct_hmac+0x206>
    77c9:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
    77ce:	eb 12                	jmp    77e2 <mbedtls_ct_hmac+0x152>
    77d0:	48 83 c3 01          	add    $0x1,%rbx
    77d4:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
    77db:	00 
    77dc:	0f 82 be 00 00 00    	jb     78a0 <mbedtls_ct_hmac+0x210>
    77e2:	48 89 ee             	mov    %rbp,%rsi
    77e5:	4c 89 e7             	mov    %r12,%rdi
    77e8:	e8 83 1f 00 00       	callq  9770 <mbedtls_md_clone>
    77ed:	85 c0                	test   %eax,%eax
    77ef:	0f 85 34 ff ff ff    	jne    7729 <mbedtls_ct_hmac+0x99>
    77f5:	4c 89 ee             	mov    %r13,%rsi
    77f8:	4c 89 e7             	mov    %r12,%rdi
    77fb:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    7800:	e8 0b 23 00 00       	callq  9b10 <mbedtls_md_finish>
    7805:	85 c0                	test   %eax,%eax
    7807:	0f 85 1c ff ff ff    	jne    7729 <mbedtls_ct_hmac+0x99>
    780d:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    7812:	48 89 d9             	mov    %rbx,%rcx
    7815:	4c 89 fa             	mov    %r15,%rdx
    7818:	4c 89 ee             	mov    %r13,%rsi
    781b:	4c 89 f7             	mov    %r14,%rdi
    781e:	e8 8d fd ff ff       	callq  75b0 <mbedtls_ct_memcpy_if_eq>
    7823:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
    782a:	00 
    782b:	76 a3                	jbe    77d0 <mbedtls_ct_hmac+0x140>
    782d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    7832:	ba 01 00 00 00       	mov    $0x1,%edx
    7837:	48 89 ef             	mov    %rbp,%rdi
    783a:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
    783e:	e8 4d 22 00 00       	callq  9a90 <mbedtls_md_update>
    7843:	85 c0                	test   %eax,%eax
    7845:	74 89                	je     77d0 <mbedtls_ct_hmac+0x140>
    7847:	e9 dd fe ff ff       	jmpq   7729 <mbedtls_ct_hmac+0x99>
    784c:	0f 1f 40 00          	nopl   0x0(%rax)
    7850:	49 8d 7e 08          	lea    0x8(%r14),%rdi
    7854:	4c 89 f1             	mov    %r14,%rcx
    7857:	49 89 06             	mov    %rax,(%r14)
    785a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    785e:	4b 89 44 3e f8       	mov    %rax,-0x8(%r14,%r15,1)
    7863:	48 29 f9             	sub    %rdi,%rcx
    7866:	44 01 f9             	add    %r15d,%ecx
    7869:	c1 e9 03             	shr    $0x3,%ecx
    786c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    786f:	e9 47 ff ff ff       	jmpq   77bb <mbedtls_ct_hmac+0x12b>
    7874:	0f 1f 40 00          	nopl   0x0(%rax)
    7878:	41 c6 06 21          	movb   $0x21,(%r14)
    787c:	41 f6 c7 02          	test   $0x2,%r15b
    7880:	0f 84 35 ff ff ff    	je     77bb <mbedtls_ct_hmac+0x12b>
    7886:	b8 21 21 00 00       	mov    $0x2121,%eax
    788b:	66 43 89 44 3e fe    	mov    %ax,-0x2(%r14,%r15,1)
    7891:	e9 25 ff ff ff       	jmpq   77bb <mbedtls_ct_hmac+0x12b>
    7896:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    789b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    78a0:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    78a5:	48 89 ef             	mov    %rbp,%rdi
    78a8:	e8 63 22 00 00       	callq  9b10 <mbedtls_md_finish>
    78ad:	85 c0                	test   %eax,%eax
    78af:	0f 85 74 fe ff ff    	jne    7729 <mbedtls_ct_hmac+0x99>
    78b5:	48 89 ef             	mov    %rbp,%rdi
    78b8:	e8 13 21 00 00       	callq  99d0 <mbedtls_md_starts>
    78bd:	85 c0                	test   %eax,%eax
    78bf:	0f 85 64 fe ff ff    	jne    7729 <mbedtls_ct_hmac+0x99>
    78c5:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    78ca:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    78cf:	48 89 ef             	mov    %rbp,%rdi
    78d2:	48 01 d6             	add    %rdx,%rsi
    78d5:	e8 b6 21 00 00       	callq  9a90 <mbedtls_md_update>
    78da:	85 c0                	test   %eax,%eax
    78dc:	0f 85 47 fe ff ff    	jne    7729 <mbedtls_ct_hmac+0x99>
    78e2:	4c 89 fa             	mov    %r15,%rdx
    78e5:	4c 89 f6             	mov    %r14,%rsi
    78e8:	48 89 ef             	mov    %rbp,%rdi
    78eb:	e8 a0 21 00 00       	callq  9a90 <mbedtls_md_update>
    78f0:	85 c0                	test   %eax,%eax
    78f2:	0f 85 31 fe ff ff    	jne    7729 <mbedtls_ct_hmac+0x99>
    78f8:	4c 89 f6             	mov    %r14,%rsi
    78fb:	48 89 ef             	mov    %rbp,%rdi
    78fe:	e8 0d 22 00 00       	callq  9b10 <mbedtls_md_finish>
    7903:	85 c0                	test   %eax,%eax
    7905:	0f 85 1e fe ff ff    	jne    7729 <mbedtls_ct_hmac+0x99>
    790b:	48 89 ef             	mov    %rbp,%rdi
    790e:	e8 1d 2a 00 00       	callq  a330 <mbedtls_md_hmac_reset>
    7913:	e9 11 fe ff ff       	jmpq   7729 <mbedtls_ct_hmac+0x99>
    7918:	41 c7 06 21 21 21 21 	movl   $0x21212121,(%r14)
    791f:	43 c7 44 3e fc 21 21 	movl   $0x21212121,-0x4(%r14,%r15,1)
    7926:	21 21 
    7928:	e9 8e fe ff ff       	jmpq   77bb <mbedtls_ct_hmac+0x12b>
    792d:	e8 2e b9 ff ff       	callq  3260 <__stack_chk_fail@plt>
    7932:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7939:	00 00 00 00 
    793d:	0f 1f 00             	nopl   (%rax)

0000000000007940 <mbedtls_mpi_safe_cond_assign>:
    7940:	f3 0f 1e fa          	endbr64 
    7944:	41 56                	push   %r14
    7946:	44 0f b6 f2          	movzbl %dl,%r14d
    794a:	41 55                	push   %r13
    794c:	41 54                	push   %r12
    794e:	41 89 d4             	mov    %edx,%r12d
    7951:	55                   	push   %rbp
    7952:	48 89 f5             	mov    %rsi,%rbp
    7955:	53                   	push   %rbx
    7956:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    795a:	48 89 fb             	mov    %rdi,%rbx
    795d:	e8 3e e8 00 00       	callq  161a0 <mbedtls_mpi_grow>
    7962:	41 89 c5             	mov    %eax,%r13d
    7965:	85 c0                	test   %eax,%eax
    7967:	74 0f                	je     7978 <mbedtls_mpi_safe_cond_assign+0x38>
    7969:	5b                   	pop    %rbx
    796a:	44 89 e8             	mov    %r13d,%eax
    796d:	5d                   	pop    %rbp
    796e:	41 5c                	pop    %r12
    7970:	41 5d                	pop    %r13
    7972:	41 5e                	pop    %r14
    7974:	c3                   	retq   
    7975:	0f 1f 00             	nopl   (%rax)
    7978:	8b 03                	mov    (%rbx),%eax
    797a:	41 0f b6 cc          	movzbl %r12b,%ecx
    797e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    7982:	8d 34 09             	lea    (%rcx,%rcx,1),%esi
    7985:	8d 50 01             	lea    0x1(%rax),%edx
    7988:	8b 45 00             	mov    0x0(%rbp),%eax
    798b:	83 c0 01             	add    $0x1,%eax
    798e:	31 d0                	xor    %edx,%eax
    7990:	21 f0                	and    %esi,%eax
    7992:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    7996:	31 d0                	xor    %edx,%eax
    7998:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    799c:	83 e8 01             	sub    $0x1,%eax
    799f:	89 03                	mov    %eax,(%rbx)
    79a1:	e8 fa 3b 01 00       	callq  1b5a0 <mbedtls_mpi_core_cond_assign>
    79a6:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    79aa:	48 3b 53 08          	cmp    0x8(%rbx),%rdx
    79ae:	73 b9                	jae    7969 <mbedtls_mpi_safe_cond_assign+0x29>
    79b0:	4c 89 f6             	mov    %r14,%rsi
    79b3:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    79b7:	48 f7 de             	neg    %rsi
    79ba:	4c 09 f6             	or     %r14,%rsi
    79bd:	48 c1 fe 3f          	sar    $0x3f,%rsi
    79c1:	48 f7 d6             	not    %rsi
    79c4:	0f 1f 40 00          	nopl   0x0(%rax)
    79c8:	48 21 34 d1          	and    %rsi,(%rcx,%rdx,8)
    79cc:	48 83 c2 01          	add    $0x1,%rdx
    79d0:	48 39 53 08          	cmp    %rdx,0x8(%rbx)
    79d4:	77 f2                	ja     79c8 <mbedtls_mpi_safe_cond_assign+0x88>
    79d6:	5b                   	pop    %rbx
    79d7:	44 89 e8             	mov    %r13d,%eax
    79da:	5d                   	pop    %rbp
    79db:	41 5c                	pop    %r12
    79dd:	41 5d                	pop    %r13
    79df:	41 5e                	pop    %r14
    79e1:	c3                   	retq   
    79e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    79e9:	00 00 00 00 
    79ed:	0f 1f 00             	nopl   (%rax)

00000000000079f0 <mbedtls_mpi_safe_cond_swap>:
    79f0:	f3 0f 1e fa          	endbr64 
    79f4:	31 c0                	xor    %eax,%eax
    79f6:	48 39 f7             	cmp    %rsi,%rdi
    79f9:	0f 84 99 00 00 00    	je     7a98 <mbedtls_mpi_safe_cond_swap+0xa8>
    79ff:	41 54                	push   %r12
    7a01:	41 89 d4             	mov    %edx,%r12d
    7a04:	55                   	push   %rbp
    7a05:	48 89 f5             	mov    %rsi,%rbp
    7a08:	53                   	push   %rbx
    7a09:	48 89 fb             	mov    %rdi,%rbx
    7a0c:	48 83 ec 10          	sub    $0x10,%rsp
    7a10:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    7a14:	e8 87 e7 00 00       	callq  161a0 <mbedtls_mpi_grow>
    7a19:	85 c0                	test   %eax,%eax
    7a1b:	74 13                	je     7a30 <mbedtls_mpi_safe_cond_swap+0x40>
    7a1d:	48 83 c4 10          	add    $0x10,%rsp
    7a21:	5b                   	pop    %rbx
    7a22:	5d                   	pop    %rbp
    7a23:	41 5c                	pop    %r12
    7a25:	c3                   	retq   
    7a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7a2d:	00 00 00 
    7a30:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    7a34:	48 89 ef             	mov    %rbp,%rdi
    7a37:	e8 64 e7 00 00       	callq  161a0 <mbedtls_mpi_grow>
    7a3c:	85 c0                	test   %eax,%eax
    7a3e:	75 dd                	jne    7a1d <mbedtls_mpi_safe_cond_swap+0x2d>
    7a40:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    7a44:	8b 03                	mov    (%rbx),%eax
    7a46:	41 0f b6 cc          	movzbl %r12b,%ecx
    7a4a:	8d 3c 09             	lea    (%rcx,%rcx,1),%edi
    7a4d:	8d 50 01             	lea    0x1(%rax),%edx
    7a50:	8b 45 00             	mov    0x0(%rbp),%eax
    7a53:	8d 70 01             	lea    0x1(%rax),%esi
    7a56:	31 d6                	xor    %edx,%esi
    7a58:	21 fe                	and    %edi,%esi
    7a5a:	31 d6                	xor    %edx,%esi
    7a5c:	83 ee 01             	sub    $0x1,%esi
    7a5f:	89 33                	mov    %esi,(%rbx)
    7a61:	8b 45 00             	mov    0x0(%rbp),%eax
    7a64:	8d 70 01             	lea    0x1(%rax),%esi
    7a67:	31 f2                	xor    %esi,%edx
    7a69:	21 fa                	and    %edi,%edx
    7a6b:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    7a6f:	31 f2                	xor    %esi,%edx
    7a71:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    7a75:	83 ea 01             	sub    $0x1,%edx
    7a78:	89 55 00             	mov    %edx,0x0(%rbp)
    7a7b:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    7a7f:	e8 4c 3b 01 00       	callq  1b5d0 <mbedtls_mpi_core_cond_swap>
    7a84:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    7a88:	48 83 c4 10          	add    $0x10,%rsp
    7a8c:	5b                   	pop    %rbx
    7a8d:	5d                   	pop    %rbp
    7a8e:	41 5c                	pop    %r12
    7a90:	c3                   	retq   
    7a91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7a98:	c3                   	retq   
    7a99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007aa0 <mbedtls_mpi_core_lt_ct>:
    7aa0:	f3 0f 1e fa          	endbr64 
    7aa4:	48 85 d2             	test   %rdx,%rdx
    7aa7:	74 6f                	je     7b18 <mbedtls_mpi_core_lt_ct+0x78>
    7aa9:	55                   	push   %rbp
    7aaa:	45 31 c9             	xor    %r9d,%r9d
    7aad:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    7ab3:	53                   	push   %rbx
    7ab4:	31 db                	xor    %ebx,%ebx
    7ab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7abd:	00 00 00 
    7ac0:	48 8b 44 d6 f8       	mov    -0x8(%rsi,%rdx,8),%rax
    7ac5:	48 8b 4c d7 f8       	mov    -0x8(%rdi,%rdx,8),%rcx
    7aca:	48 89 c5             	mov    %rax,%rbp
    7acd:	49 89 cb             	mov    %rcx,%r11
    7ad0:	49 89 c8             	mov    %rcx,%r8
    7ad3:	48 29 cd             	sub    %rcx,%rbp
    7ad6:	49 31 c3             	xor    %rax,%r11
    7ad9:	48 29 c1             	sub    %rax,%rcx
    7adc:	49 31 e8             	xor    %rbp,%r8
    7adf:	48 31 c8             	xor    %rcx,%rax
    7ae2:	4d 21 d8             	and    %r11,%r8
    7ae5:	4c 21 d8             	and    %r11,%rax
    7ae8:	49 31 e8             	xor    %rbp,%r8
    7aeb:	48 31 c8             	xor    %rcx,%rax
    7aee:	44 89 d1             	mov    %r10d,%ecx
    7af1:	49 c1 e8 3f          	shr    $0x3f,%r8
    7af5:	48 c1 e8 3f          	shr    $0x3f,%rax
    7af9:	41 09 d8             	or     %ebx,%r8d
    7afc:	44 29 c1             	sub    %r8d,%ecx
    7aff:	44 89 c3             	mov    %r8d,%ebx
    7b02:	21 c1                	and    %eax,%ecx
    7b04:	09 c3                	or     %eax,%ebx
    7b06:	41 09 c9             	or     %ecx,%r9d
    7b09:	48 83 ea 01          	sub    $0x1,%rdx
    7b0d:	75 b1                	jne    7ac0 <mbedtls_mpi_core_lt_ct+0x20>
    7b0f:	44 89 c8             	mov    %r9d,%eax
    7b12:	5b                   	pop    %rbx
    7b13:	5d                   	pop    %rbp
    7b14:	c3                   	retq   
    7b15:	0f 1f 00             	nopl   (%rax)
    7b18:	45 31 c9             	xor    %r9d,%r9d
    7b1b:	44 89 c8             	mov    %r9d,%eax
    7b1e:	c3                   	retq   
    7b1f:	90                   	nop

0000000000007b20 <mbedtls_mpi_lt_mpi_ct>:
    7b20:	f3 0f 1e fa          	endbr64 
    7b24:	4c 8b 47 08          	mov    0x8(%rdi),%r8
    7b28:	4c 3b 46 08          	cmp    0x8(%rsi),%r8
    7b2c:	0f 85 d1 00 00 00    	jne    7c03 <mbedtls_mpi_lt_mpi_ct+0xe3>
    7b32:	8b 07                	mov    (%rdi),%eax
    7b34:	44 8b 0e             	mov    (%rsi),%r9d
    7b37:	d1 f8                	sar    %eax
    7b39:	41 d1 f9             	sar    %r9d
    7b3c:	41 89 c3             	mov    %eax,%r11d
    7b3f:	41 31 c1             	xor    %eax,%r9d
    7b42:	41 83 e3 01          	and    $0x1,%r11d
    7b46:	45 89 ca             	mov    %r9d,%r10d
    7b49:	45 21 d9             	and    %r11d,%r9d
    7b4c:	41 83 e2 01          	and    $0x1,%r10d
    7b50:	44 89 0a             	mov    %r9d,(%rdx)
    7b53:	4d 85 c0             	test   %r8,%r8
    7b56:	0f 84 a4 00 00 00    	je     7c00 <mbedtls_mpi_lt_mpi_ct+0xe0>
    7b5c:	41 56                	push   %r14
    7b5e:	41 55                	push   %r13
    7b60:	41 54                	push   %r12
    7b62:	55                   	push   %rbp
    7b63:	53                   	push   %rbx
    7b64:	bb 01 00 00 00       	mov    $0x1,%ebx
    7b69:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
    7b6d:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    7b71:	44 29 db             	sub    %r11d,%ebx
    7b74:	bf 01 00 00 00       	mov    $0x1,%edi
    7b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7b80:	4a 8b 44 c5 f8       	mov    -0x8(%rbp,%r8,8),%rax
    7b85:	4f 8b 6c c4 f8       	mov    -0x8(%r12,%r8,8),%r13
    7b8a:	48 89 c6             	mov    %rax,%rsi
    7b8d:	4d 89 ee             	mov    %r13,%r14
    7b90:	4c 89 e9             	mov    %r13,%rcx
    7b93:	4c 29 ee             	sub    %r13,%rsi
    7b96:	49 29 c5             	sub    %rax,%r13
    7b99:	49 31 c6             	xor    %rax,%r14
    7b9c:	48 31 f1             	xor    %rsi,%rcx
    7b9f:	4c 31 e8             	xor    %r13,%rax
    7ba2:	4c 21 f1             	and    %r14,%rcx
    7ba5:	4c 21 f0             	and    %r14,%rax
    7ba8:	41 89 fe             	mov    %edi,%r14d
    7bab:	45 29 d6             	sub    %r10d,%r14d
    7bae:	48 31 f1             	xor    %rsi,%rcx
    7bb1:	44 89 d6             	mov    %r10d,%esi
    7bb4:	4c 31 e8             	xor    %r13,%rax
    7bb7:	48 c1 e9 3f          	shr    $0x3f,%rcx
    7bbb:	45 89 f2             	mov    %r14d,%r10d
    7bbe:	48 c1 e8 3f          	shr    $0x3f,%rax
    7bc2:	41 89 dd             	mov    %ebx,%r13d
    7bc5:	45 21 da             	and    %r11d,%r10d
    7bc8:	09 ce                	or     %ecx,%esi
    7bca:	41 21 c5             	and    %eax,%r13d
    7bcd:	44 21 d1             	and    %r10d,%ecx
    7bd0:	41 89 fa             	mov    %edi,%r10d
    7bd3:	41 29 f2             	sub    %esi,%r10d
    7bd6:	09 c6                	or     %eax,%esi
    7bd8:	45 21 ea             	and    %r13d,%r10d
    7bdb:	44 09 d1             	or     %r10d,%ecx
    7bde:	41 89 f2             	mov    %esi,%r10d
    7be1:	41 09 c9             	or     %ecx,%r9d
    7be4:	49 83 e8 01          	sub    $0x1,%r8
    7be8:	75 96                	jne    7b80 <mbedtls_mpi_lt_mpi_ct+0x60>
    7bea:	5b                   	pop    %rbx
    7beb:	31 c0                	xor    %eax,%eax
    7bed:	5d                   	pop    %rbp
    7bee:	44 89 0a             	mov    %r9d,(%rdx)
    7bf1:	41 5c                	pop    %r12
    7bf3:	41 5d                	pop    %r13
    7bf5:	41 5e                	pop    %r14
    7bf7:	c3                   	retq   
    7bf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7bff:	00 
    7c00:	31 c0                	xor    %eax,%eax
    7c02:	c3                   	retq   
    7c03:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    7c08:	c3                   	retq   
    7c09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007c10 <mbedtls_ct_rsaes_pkcs1_v15_unpadding>:
    7c10:	f3 0f 1e fa          	endbr64 
    7c14:	41 57                	push   %r15
    7c16:	41 56                	push   %r14
    7c18:	41 55                	push   %r13
    7c1a:	4d 89 c5             	mov    %r8,%r13
    7c1d:	4c 8d 46 f5          	lea    -0xb(%rsi),%r8
    7c21:	41 54                	push   %r12
    7c23:	55                   	push   %rbp
    7c24:	53                   	push   %rbx
    7c25:	48 83 ec 18          	sub    $0x18,%rsp
    7c29:	0f b6 5f 01          	movzbl 0x1(%rdi),%ebx
    7c2d:	49 39 c8             	cmp    %rcx,%r8
    7c30:	4c 0f 47 c1          	cmova  %rcx,%r8
    7c34:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    7c39:	83 f3 02             	xor    $0x2,%ebx
    7c3c:	0a 1f                	or     (%rdi),%bl
    7c3e:	0f b6 db             	movzbl %bl,%ebx
    7c41:	48 83 fe 02          	cmp    $0x2,%rsi
    7c45:	0f 86 9d 01 00 00    	jbe    7de8 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1d8>
    7c4b:	4c 8d 4f 02          	lea    0x2(%rdi),%r9
    7c4f:	4c 8d 1c 37          	lea    (%rdi,%rsi,1),%r11
    7c53:	31 d2                	xor    %edx,%edx
    7c55:	45 31 d2             	xor    %r10d,%r10d
    7c58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7c5f:	00 
    7c60:	41 0f b6 29          	movzbl (%r9),%ebp
    7c64:	49 83 c1 01          	add    $0x1,%r9
    7c68:	89 e8                	mov    %ebp,%eax
    7c6a:	f7 d8                	neg    %eax
    7c6c:	09 e8                	or     %ebp,%eax
    7c6e:	c0 e8 07             	shr    $0x7,%al
    7c71:	83 f0 01             	xor    $0x1,%eax
    7c74:	09 c2                	or     %eax,%edx
    7c76:	89 d0                	mov    %edx,%eax
    7c78:	f7 d8                	neg    %eax
    7c7a:	09 d0                	or     %edx,%eax
    7c7c:	c0 e8 07             	shr    $0x7,%al
    7c7f:	83 f0 01             	xor    $0x1,%eax
    7c82:	0f b6 c0             	movzbl %al,%eax
    7c85:	49 01 c2             	add    %rax,%r10
    7c88:	4d 39 cb             	cmp    %r9,%r11
    7c8b:	75 d3                	jne    7c60 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x50>
    7c8d:	0f b6 d2             	movzbl %dl,%edx
    7c90:	44 89 d0             	mov    %r10d,%eax
    7c93:	49 83 ea 08          	sub    $0x8,%r10
    7c97:	f7 da                	neg    %edx
    7c99:	49 c1 ea 3f          	shr    $0x3f,%r10
    7c9d:	c1 ea 1f             	shr    $0x1f,%edx
    7ca0:	83 f2 01             	xor    $0x1,%edx
    7ca3:	44 09 d2             	or     %r10d,%edx
    7ca6:	44 8d 5e fd          	lea    -0x3(%rsi),%r11d
    7caa:	09 da                	or     %ebx,%edx
    7cac:	41 29 c3             	sub    %eax,%r11d
    7caf:	89 d0                	mov    %edx,%eax
    7cb1:	44 89 db             	mov    %r11d,%ebx
    7cb4:	f7 d8                	neg    %eax
    7cb6:	44 31 c3             	xor    %r8d,%ebx
    7cb9:	09 d0                	or     %edx,%eax
    7cbb:	c1 f8 1f             	sar    $0x1f,%eax
    7cbe:	21 c3                	and    %eax,%ebx
    7cc0:	44 31 db             	xor    %r11d,%ebx
    7cc3:	41 89 d9             	mov    %ebx,%r9d
    7cc6:	4c 89 c3             	mov    %r8,%rbx
    7cc9:	4c 29 cb             	sub    %r9,%rbx
    7ccc:	4d 89 cb             	mov    %r9,%r11
    7ccf:	49 89 d9             	mov    %rbx,%r9
    7cd2:	48 c1 eb 3f          	shr    $0x3f,%rbx
    7cd6:	49 c1 f9 3f          	sar    $0x3f,%r9
    7cda:	41 09 d9             	or     %ebx,%r9d
    7cdd:	09 d3                	or     %edx,%ebx
    7cdf:	41 c1 f9 1f          	sar    $0x1f,%r9d
    7ce3:	89 da                	mov    %ebx,%edx
    7ce5:	45 89 ca             	mov    %r9d,%r10d
    7ce8:	f7 da                	neg    %edx
    7cea:	41 81 e2 00 44 00 00 	and    $0x4400,%r10d
    7cf1:	09 da                	or     %ebx,%edx
    7cf3:	45 89 d4             	mov    %r10d,%r12d
    7cf6:	c1 fa 1f             	sar    $0x1f,%edx
    7cf9:	41 81 f4 00 41 00 00 	xor    $0x4100,%r12d
    7d00:	f7 d2                	not    %edx
    7d02:	41 21 c4             	and    %eax,%r12d
    7d05:	48 8d 47 0b          	lea    0xb(%rdi),%rax
    7d09:	45 31 d4             	xor    %r10d,%r12d
    7d0c:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
    7d10:	41 f7 dc             	neg    %r12d
    7d13:	48 83 fe 0b          	cmp    $0xb,%rsi
    7d17:	76 12                	jbe    7d2b <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x11b>
    7d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7d20:	20 10                	and    %dl,(%rax)
    7d22:	48 83 c0 01          	add    $0x1,%rax
    7d26:	49 39 c2             	cmp    %rax,%r10
    7d29:	75 f5                	jne    7d20 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x110>
    7d2b:	44 89 db             	mov    %r11d,%ebx
    7d2e:	4c 29 c6             	sub    %r8,%rsi
    7d31:	44 31 c3             	xor    %r8d,%ebx
    7d34:	48 8d 2c 37          	lea    (%rdi,%rsi,1),%rbp
    7d38:	44 21 cb             	and    %r9d,%ebx
    7d3b:	44 31 db             	xor    %r11d,%ebx
    7d3e:	4d 85 c0             	test   %r8,%r8
    7d41:	74 6e                	je     7db1 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a1>
    7d43:	4d 8d 70 ff          	lea    -0x1(%r8),%r14
    7d47:	49 89 d9             	mov    %rbx,%r9
    7d4a:	4d 89 c7             	mov    %r8,%r15
    7d4d:	4e 8d 54 35 00       	lea    0x0(%rbp,%r14,1),%r10
    7d52:	49 f7 d9             	neg    %r9
    7d55:	49 29 df             	sub    %rbx,%r15
    7d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7d5f:	00 
    7d60:	4c 89 ce             	mov    %r9,%rsi
    7d63:	4c 89 c8             	mov    %r9,%rax
    7d66:	48 89 ea             	mov    %rbp,%rdx
    7d69:	48 c1 fe 3f          	sar    $0x3f,%rsi
    7d6d:	48 c1 e8 3f          	shr    $0x3f,%rax
    7d71:	48 89 f7             	mov    %rsi,%rdi
    7d74:	09 c7                	or     %eax,%edi
    7d76:	c1 ff 1f             	sar    $0x1f,%edi
    7d79:	4d 85 f6             	test   %r14,%r14
    7d7c:	74 21                	je     7d9f <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x18f>
    7d7e:	66 90                	xchg   %ax,%ax
    7d80:	0f b6 02             	movzbl (%rdx),%eax
    7d83:	49 89 d3             	mov    %rdx,%r11
    7d86:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
    7d8a:	48 83 c2 01          	add    $0x1,%rdx
    7d8e:	31 f0                	xor    %esi,%eax
    7d90:	0f b6 c0             	movzbl %al,%eax
    7d93:	21 f8                	and    %edi,%eax
    7d95:	31 c6                	xor    %eax,%esi
    7d97:	41 88 33             	mov    %sil,(%r11)
    7d9a:	49 39 d2             	cmp    %rdx,%r10
    7d9d:	75 e1                	jne    7d80 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x170>
    7d9f:	41 0f b6 02          	movzbl (%r10),%eax
    7da3:	49 83 c1 01          	add    $0x1,%r9
    7da7:	21 c7                	and    %eax,%edi
    7da9:	41 88 3a             	mov    %dil,(%r10)
    7dac:	4d 39 cf             	cmp    %r9,%r15
    7daf:	75 af                	jne    7d60 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x150>
    7db1:	48 85 c9             	test   %rcx,%rcx
    7db4:	75 1a                	jne    7dd0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1c0>
    7db6:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    7dba:	48 83 c4 18          	add    $0x18,%rsp
    7dbe:	44 89 e0             	mov    %r12d,%eax
    7dc1:	5b                   	pop    %rbx
    7dc2:	5d                   	pop    %rbp
    7dc3:	41 5c                	pop    %r12
    7dc5:	41 5d                	pop    %r13
    7dc7:	41 5e                	pop    %r14
    7dc9:	41 5f                	pop    %r15
    7dcb:	c3                   	retq   
    7dcc:	0f 1f 40 00          	nopl   0x0(%rax)
    7dd0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7dd5:	4c 89 c2             	mov    %r8,%rdx
    7dd8:	48 89 ee             	mov    %rbp,%rsi
    7ddb:	e8 30 b5 ff ff       	callq  3310 <memcpy@plt>
    7de0:	eb d4                	jmp    7db6 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1a6>
    7de2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7de8:	ba 01 00 00 00       	mov    $0x1,%edx
    7ded:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    7df3:	31 c0                	xor    %eax,%eax
    7df5:	e9 a9 fe ff ff       	jmpq   7ca3 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x93>
    7dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007e00 <mbedtls_des_init>:
    7e00:	f3 0f 1e fa          	endbr64 
    7e04:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    7e0b:	48 89 f9             	mov    %rdi,%rcx
    7e0e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    7e12:	31 c0                	xor    %eax,%eax
    7e14:	48 c7 47 70 00 00 00 	movq   $0x0,0x70(%rdi)
    7e1b:	00 
    7e1c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    7e20:	48 29 f9             	sub    %rdi,%rcx
    7e23:	83 e9 80             	sub    $0xffffff80,%ecx
    7e26:	c1 e9 03             	shr    $0x3,%ecx
    7e29:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7e2c:	c3                   	retq   
    7e2d:	0f 1f 00             	nopl   (%rax)

0000000000007e30 <mbedtls_des_free>:
    7e30:	f3 0f 1e fa          	endbr64 
    7e34:	48 85 ff             	test   %rdi,%rdi
    7e37:	74 0f                	je     7e48 <mbedtls_des_free+0x18>
    7e39:	be 80 00 00 00       	mov    $0x80,%esi
    7e3e:	e9 dd d3 ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
    7e43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7e48:	c3                   	retq   
    7e49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007e50 <mbedtls_des3_init>:
    7e50:	f3 0f 1e fa          	endbr64 
    7e54:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    7e5b:	48 89 f9             	mov    %rdi,%rcx
    7e5e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    7e62:	31 c0                	xor    %eax,%eax
    7e64:	48 c7 87 70 01 00 00 	movq   $0x0,0x170(%rdi)
    7e6b:	00 00 00 00 
    7e6f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    7e73:	48 29 f9             	sub    %rdi,%rcx
    7e76:	81 c1 80 01 00 00    	add    $0x180,%ecx
    7e7c:	c1 e9 03             	shr    $0x3,%ecx
    7e7f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7e82:	c3                   	retq   
    7e83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7e8a:	00 00 00 00 
    7e8e:	66 90                	xchg   %ax,%ax

0000000000007e90 <mbedtls_des3_free>:
    7e90:	f3 0f 1e fa          	endbr64 
    7e94:	48 85 ff             	test   %rdi,%rdi
    7e97:	74 0f                	je     7ea8 <mbedtls_des3_free+0x18>
    7e99:	be 80 01 00 00       	mov    $0x180,%esi
    7e9e:	e9 7d d3 ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
    7ea3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7ea8:	c3                   	retq   
    7ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007eb0 <mbedtls_des_key_set_parity>:
    7eb0:	f3 0f 1e fa          	endbr64 
    7eb4:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
    7eb8:	48 8d 15 81 a5 01 00 	lea    0x1a581(%rip),%rdx        # 22440 <odd_parity_table>
    7ebf:	90                   	nop
    7ec0:	0f b6 07             	movzbl (%rdi),%eax
    7ec3:	48 83 c7 01          	add    $0x1,%rdi
    7ec7:	d0 e8                	shr    %al
    7ec9:	83 e0 7f             	and    $0x7f,%eax
    7ecc:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
    7ed0:	88 47 ff             	mov    %al,-0x1(%rdi)
    7ed3:	48 39 cf             	cmp    %rcx,%rdi
    7ed6:	75 e8                	jne    7ec0 <mbedtls_des_key_set_parity+0x10>
    7ed8:	c3                   	retq   
    7ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007ee0 <mbedtls_des_key_check_key_parity>:
    7ee0:	f3 0f 1e fa          	endbr64 
    7ee4:	48 8d 77 08          	lea    0x8(%rdi),%rsi
    7ee8:	48 8d 0d 51 a5 01 00 	lea    0x1a551(%rip),%rcx        # 22440 <odd_parity_table>
    7eef:	90                   	nop
    7ef0:	0f b6 17             	movzbl (%rdi),%edx
    7ef3:	89 d0                	mov    %edx,%eax
    7ef5:	d0 e8                	shr    %al
    7ef7:	83 e0 7f             	and    $0x7f,%eax
    7efa:	3a 14 01             	cmp    (%rcx,%rax,1),%dl
    7efd:	75 11                	jne    7f10 <mbedtls_des_key_check_key_parity+0x30>
    7eff:	48 83 c7 01          	add    $0x1,%rdi
    7f03:	48 39 fe             	cmp    %rdi,%rsi
    7f06:	75 e8                	jne    7ef0 <mbedtls_des_key_check_key_parity+0x10>
    7f08:	31 c0                	xor    %eax,%eax
    7f0a:	c3                   	retq   
    7f0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7f10:	b8 01 00 00 00       	mov    $0x1,%eax
    7f15:	c3                   	retq   
    7f16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f1d:	00 00 00 

0000000000007f20 <mbedtls_des_key_check_weak>:
    7f20:	f3 0f 1e fa          	endbr64 
    7f24:	48 8d 05 95 a4 01 00 	lea    0x1a495(%rip),%rax        # 223c0 <weak_key_table>
    7f2b:	48 8d 90 80 00 00 00 	lea    0x80(%rax),%rdx
    7f32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7f38:	48 8b 0f             	mov    (%rdi),%rcx
    7f3b:	48 39 08             	cmp    %rcx,(%rax)
    7f3e:	74 10                	je     7f50 <mbedtls_des_key_check_weak+0x30>
    7f40:	48 83 c0 08          	add    $0x8,%rax
    7f44:	48 39 d0             	cmp    %rdx,%rax
    7f47:	75 ef                	jne    7f38 <mbedtls_des_key_check_weak+0x18>
    7f49:	31 c0                	xor    %eax,%eax
    7f4b:	c3                   	retq   
    7f4c:	0f 1f 40 00          	nopl   0x0(%rax)
    7f50:	b8 01 00 00 00       	mov    $0x1,%eax
    7f55:	c3                   	retq   
    7f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f5d:	00 00 00 

0000000000007f60 <mbedtls_des_setkey>:
    7f60:	f3 0f 1e fa          	endbr64 
    7f64:	53                   	push   %rbx
    7f65:	8b 46 04             	mov    0x4(%rsi),%eax
    7f68:	4c 8d 05 91 a5 01 00 	lea    0x1a591(%rip),%r8        # 22500 <LHs>
    7f6f:	8b 16                	mov    (%rsi),%edx
    7f71:	0f c8                	bswap  %eax
    7f73:	89 c1                	mov    %eax,%ecx
    7f75:	c1 e8 04             	shr    $0x4,%eax
    7f78:	0f ca                	bswap  %edx
    7f7a:	31 d0                	xor    %edx,%eax
    7f7c:	25 0f 0f 0f 0f       	and    $0xf0f0f0f,%eax
    7f81:	31 c2                	xor    %eax,%edx
    7f83:	c1 e0 04             	shl    $0x4,%eax
    7f86:	31 c8                	xor    %ecx,%eax
    7f88:	89 d1                	mov    %edx,%ecx
    7f8a:	31 c1                	xor    %eax,%ecx
    7f8c:	81 e1 10 10 10 10    	and    $0x10101010,%ecx
    7f92:	31 ca                	xor    %ecx,%edx
    7f94:	31 c8                	xor    %ecx,%eax
    7f96:	89 d6                	mov    %edx,%esi
    7f98:	41 89 d1             	mov    %edx,%r9d
    7f9b:	89 d1                	mov    %edx,%ecx
    7f9d:	41 c1 e9 18          	shr    $0x18,%r9d
    7fa1:	83 e6 0f             	and    $0xf,%esi
    7fa4:	c1 e9 15             	shr    $0x15,%ecx
    7fa7:	41 8b 34 b0          	mov    (%r8,%rsi,4),%esi
    7fab:	41 83 e1 0f          	and    $0xf,%r9d
    7faf:	83 e1 0f             	and    $0xf,%ecx
    7fb2:	41 8b 0c 88          	mov    (%r8,%rcx,4),%ecx
    7fb6:	c1 e6 03             	shl    $0x3,%esi
    7fb9:	43 0b 34 88          	or     (%r8,%r9,4),%esi
    7fbd:	41 89 d1             	mov    %edx,%r9d
    7fc0:	41 c1 e9 1d          	shr    $0x1d,%r9d
    7fc4:	c1 e1 05             	shl    $0x5,%ecx
    7fc7:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    7fcb:	41 c1 e1 04          	shl    $0x4,%r9d
    7fcf:	44 09 ce             	or     %r9d,%esi
    7fd2:	41 89 d1             	mov    %edx,%r9d
    7fd5:	41 c1 e9 08          	shr    $0x8,%r9d
    7fd9:	41 83 e1 0f          	and    $0xf,%r9d
    7fdd:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    7fe1:	41 c1 e1 02          	shl    $0x2,%r9d
    7fe5:	44 09 ce             	or     %r9d,%esi
    7fe8:	41 89 d1             	mov    %edx,%r9d
    7feb:	41 c1 e9 10          	shr    $0x10,%r9d
    7fef:	41 83 e1 0f          	and    $0xf,%r9d
    7ff3:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    7ff7:	45 01 c9             	add    %r9d,%r9d
    7ffa:	44 09 ce             	or     %r9d,%esi
    7ffd:	41 89 d1             	mov    %edx,%r9d
    8000:	41 c1 e9 05          	shr    $0x5,%r9d
    8004:	41 83 e1 0f          	and    $0xf,%r9d
    8008:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    800c:	41 c1 e1 07          	shl    $0x7,%r9d
    8010:	44 09 ce             	or     %r9d,%esi
    8013:	c1 ea 0d             	shr    $0xd,%edx
    8016:	41 89 c1             	mov    %eax,%r9d
    8019:	83 e2 0f             	and    $0xf,%edx
    801c:	41 c1 e9 19          	shr    $0x19,%r9d
    8020:	41 8b 14 90          	mov    (%r8,%rdx,4),%edx
    8024:	4c 8d 05 95 a4 01 00 	lea    0x1a495(%rip),%r8        # 224c0 <RHs>
    802b:	41 83 e1 0f          	and    $0xf,%r9d
    802f:	c1 e2 06             	shl    $0x6,%edx
    8032:	09 f2                	or     %esi,%edx
    8034:	89 c6                	mov    %eax,%esi
    8036:	c1 ee 1c             	shr    $0x1c,%esi
    8039:	09 d1                	or     %edx,%ecx
    803b:	89 c2                	mov    %eax,%edx
    803d:	41 8b 34 b0          	mov    (%r8,%rsi,4),%esi
    8041:	c1 ea 14             	shr    $0x14,%edx
    8044:	83 e2 0f             	and    $0xf,%edx
    8047:	c1 e6 04             	shl    $0x4,%esi
    804a:	43 0b 34 88          	or     (%r8,%r9,4),%esi
    804e:	41 89 c1             	mov    %eax,%r9d
    8051:	41 8b 14 90          	mov    (%r8,%rdx,4),%edx
    8055:	41 d1 e9             	shr    %r9d
    8058:	41 83 e1 0f          	and    $0xf,%r9d
    805c:	c1 e2 05             	shl    $0x5,%edx
    805f:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    8063:	41 c1 e1 03          	shl    $0x3,%r9d
    8067:	44 09 ce             	or     %r9d,%esi
    806a:	41 89 c1             	mov    %eax,%r9d
    806d:	41 c1 e9 09          	shr    $0x9,%r9d
    8071:	41 83 e1 0f          	and    $0xf,%r9d
    8075:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    8079:	41 c1 e1 02          	shl    $0x2,%r9d
    807d:	44 09 ce             	or     %r9d,%esi
    8080:	41 89 c1             	mov    %eax,%r9d
    8083:	41 c1 e9 11          	shr    $0x11,%r9d
    8087:	41 83 e1 0f          	and    $0xf,%r9d
    808b:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    808f:	45 01 c9             	add    %r9d,%r9d
    8092:	44 09 ce             	or     %r9d,%esi
    8095:	41 89 c1             	mov    %eax,%r9d
    8098:	c1 e8 0c             	shr    $0xc,%eax
    809b:	41 c1 e9 04          	shr    $0x4,%r9d
    809f:	83 e0 0f             	and    $0xf,%eax
    80a2:	41 83 e1 0f          	and    $0xf,%r9d
    80a6:	41 8b 04 80          	mov    (%r8,%rax,4),%eax
    80aa:	47 8b 0c 88          	mov    (%r8,%r9,4),%r9d
    80ae:	41 c1 e1 07          	shl    $0x7,%r9d
    80b2:	44 09 ce             	or     %r9d,%esi
    80b5:	c1 e0 06             	shl    $0x6,%eax
    80b8:	81 e1 ff ff ff 0f    	and    $0xfffffff,%ecx
    80be:	09 f0                	or     %esi,%eax
    80c0:	31 f6                	xor    %esi,%esi
    80c2:	09 d0                	or     %edx,%eax
    80c4:	25 ff ff ff 0f       	and    $0xfffffff,%eax
    80c9:	89 c2                	mov    %eax,%edx
    80cb:	e9 c6 02 00 00       	jmpq   8396 <mbedtls_des_setkey+0x436>
    80d0:	83 fe 0f             	cmp    $0xf,%esi
    80d3:	0f 84 d3 02 00 00    	je     83ac <mbedtls_des_setkey+0x44c>
    80d9:	8d 04 8d 00 00 00 00 	lea    0x0(,%rcx,4),%eax
    80e0:	c1 e9 1a             	shr    $0x1a,%ecx
    80e3:	09 c1                	or     %eax,%ecx
    80e5:	8d 04 95 00 00 00 00 	lea    0x0(,%rdx,4),%eax
    80ec:	c1 ea 1a             	shr    $0x1a,%edx
    80ef:	09 c2                	or     %eax,%edx
    80f1:	81 e1 ff ff ff 0f    	and    $0xfffffff,%ecx
    80f7:	81 e2 ff ff ff 0f    	and    $0xfffffff,%edx
    80fd:	89 c8                	mov    %ecx,%eax
    80ff:	41 89 c8             	mov    %ecx,%r8d
    8102:	89 cb                	mov    %ecx,%ebx
    8104:	41 89 d2             	mov    %edx,%r10d
    8107:	c1 e0 04             	shl    $0x4,%eax
    810a:	41 c1 e0 1c          	shl    $0x1c,%r8d
    810e:	41 89 d1             	mov    %edx,%r9d
    8111:	41 89 cb             	mov    %ecx,%r11d
    8114:	41 81 e0 00 00 00 10 	and    $0x10000000,%r8d
    811b:	25 00 00 00 24       	and    $0x24000000,%eax
    8120:	c1 e3 0a             	shl    $0xa,%ebx
    8123:	41 c1 ea 0e          	shr    $0xe,%r10d
    8127:	44 09 c0             	or     %r8d,%eax
    812a:	41 89 d0             	mov    %edx,%r8d
    812d:	41 c1 e9 03          	shr    $0x3,%r9d
    8131:	41 81 e0 00 01 00 00 	and    $0x100,%r8d
    8138:	44 09 c0             	or     %r8d,%eax
    813b:	41 89 c8             	mov    %ecx,%r8d
    813e:	41 c1 e0 0e          	shl    $0xe,%r8d
    8142:	41 81 e0 00 00 00 08 	and    $0x8000000,%r8d
    8149:	44 09 c0             	or     %r8d,%eax
    814c:	41 89 c8             	mov    %ecx,%r8d
    814f:	41 c1 e0 12          	shl    $0x12,%r8d
    8153:	41 81 e0 00 00 08 02 	and    $0x2080000,%r8d
    815a:	44 09 c0             	or     %r8d,%eax
    815d:	41 89 c8             	mov    %ecx,%r8d
    8160:	41 c1 e0 06          	shl    $0x6,%r8d
    8164:	41 81 e0 00 00 00 01 	and    $0x1000000,%r8d
    816b:	44 09 c0             	or     %r8d,%eax
    816e:	41 89 c8             	mov    %ecx,%r8d
    8171:	41 c1 e0 09          	shl    $0x9,%r8d
    8175:	41 81 e0 00 00 20 00 	and    $0x200000,%r8d
    817c:	44 09 c0             	or     %r8d,%eax
    817f:	41 89 c8             	mov    %ecx,%r8d
    8182:	41 d1 e8             	shr    %r8d
    8185:	41 81 e0 00 00 10 00 	and    $0x100000,%r8d
    818c:	44 09 c0             	or     %r8d,%eax
    818f:	41 89 d8             	mov    %ebx,%r8d
    8192:	41 81 e0 00 00 04 00 	and    $0x40000,%r8d
    8199:	44 09 c0             	or     %r8d,%eax
    819c:	44 8d 04 8d 00 00 00 	lea    0x0(,%rcx,4),%r8d
    81a3:	00 
    81a4:	41 81 e0 00 00 02 00 	and    $0x20000,%r8d
    81ab:	44 09 c0             	or     %r8d,%eax
    81ae:	41 89 c8             	mov    %ecx,%r8d
    81b1:	41 c1 e8 0a          	shr    $0xa,%r8d
    81b5:	41 81 e0 00 00 01 00 	and    $0x10000,%r8d
    81bc:	44 09 c0             	or     %r8d,%eax
    81bf:	41 89 d0             	mov    %edx,%r8d
    81c2:	41 c1 e8 0d          	shr    $0xd,%r8d
    81c6:	41 c1 e3 0f          	shl    $0xf,%r11d
    81ca:	41 81 e0 00 20 00 00 	and    $0x2000,%r8d
    81d1:	44 09 c0             	or     %r8d,%eax
    81d4:	41 89 d0             	mov    %edx,%r8d
    81d7:	41 c1 e8 04          	shr    $0x4,%r8d
    81db:	41 81 e0 00 10 00 00 	and    $0x1000,%r8d
    81e2:	44 09 c0             	or     %r8d,%eax
    81e5:	41 89 d0             	mov    %edx,%r8d
    81e8:	41 c1 e0 06          	shl    $0x6,%r8d
    81ec:	41 81 e0 00 08 00 00 	and    $0x800,%r8d
    81f3:	44 09 c0             	or     %r8d,%eax
    81f6:	41 89 d0             	mov    %edx,%r8d
    81f9:	41 d1 e8             	shr    %r8d
    81fc:	41 81 e0 00 04 00 00 	and    $0x400,%r8d
    8203:	44 09 c0             	or     %r8d,%eax
    8206:	45 89 d0             	mov    %r10d,%r8d
    8209:	41 81 e0 00 02 00 00 	and    $0x200,%r8d
    8210:	44 09 c0             	or     %r8d,%eax
    8213:	41 89 d0             	mov    %edx,%r8d
    8216:	41 c1 e8 05          	shr    $0x5,%r8d
    821a:	41 83 e0 20          	and    $0x20,%r8d
    821e:	44 09 c0             	or     %r8d,%eax
    8221:	41 89 d0             	mov    %edx,%r8d
    8224:	41 c1 e8 0a          	shr    $0xa,%r8d
    8228:	41 83 e0 10          	and    $0x10,%r8d
    822c:	44 09 c0             	or     %r8d,%eax
    822f:	45 89 c8             	mov    %r9d,%r8d
    8232:	41 83 e0 08          	and    $0x8,%r8d
    8236:	44 09 c0             	or     %r8d,%eax
    8239:	41 89 d0             	mov    %edx,%r8d
    823c:	41 c1 e8 12          	shr    $0x12,%r8d
    8240:	41 83 e0 04          	and    $0x4,%r8d
    8244:	44 09 c0             	or     %r8d,%eax
    8247:	41 89 d0             	mov    %edx,%r8d
    824a:	41 c1 e8 1a          	shr    $0x1a,%r8d
    824e:	41 83 e0 02          	and    $0x2,%r8d
    8252:	44 09 c0             	or     %r8d,%eax
    8255:	41 89 d0             	mov    %edx,%r8d
    8258:	41 c1 e8 18          	shr    $0x18,%r8d
    825c:	41 83 e0 01          	and    $0x1,%r8d
    8260:	44 09 c0             	or     %r8d,%eax
    8263:	41 89 c8             	mov    %ecx,%r8d
    8266:	41 c1 e0 11          	shl    $0x11,%r8d
    826a:	89 04 f7             	mov    %eax,(%rdi,%rsi,8)
    826d:	44 89 d8             	mov    %r11d,%eax
    8270:	81 e3 00 00 00 08    	and    $0x8000000,%ebx
    8276:	25 00 00 00 20       	and    $0x20000000,%eax
    827b:	41 81 e0 00 00 00 10 	and    $0x10000000,%r8d
    8282:	41 81 e3 00 00 02 00 	and    $0x20000,%r11d
    8289:	41 09 c0             	or     %eax,%r8d
    828c:	89 d0                	mov    %edx,%eax
    828e:	25 00 02 00 00       	and    $0x200,%eax
    8293:	41 09 c0             	or     %eax,%r8d
    8296:	89 c8                	mov    %ecx,%eax
    8298:	c1 e0 16             	shl    $0x16,%eax
    829b:	41 09 d8             	or     %ebx,%r8d
    829e:	25 00 00 00 04       	and    $0x4000000,%eax
    82a3:	41 09 c0             	or     %eax,%r8d
    82a6:	89 c8                	mov    %ecx,%eax
    82a8:	c1 e8 02             	shr    $0x2,%eax
    82ab:	25 00 00 00 02       	and    $0x2000000,%eax
    82b0:	41 09 c0             	or     %eax,%r8d
    82b3:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    82b6:	25 00 00 00 01       	and    $0x1000000,%eax
    82bb:	41 09 c0             	or     %eax,%r8d
    82be:	89 c8                	mov    %ecx,%eax
    82c0:	c1 e0 10             	shl    $0x10,%eax
    82c3:	25 00 00 20 00       	and    $0x200000,%eax
    82c8:	41 09 c0             	or     %eax,%r8d
    82cb:	89 c8                	mov    %ecx,%eax
    82cd:	c1 e0 0b             	shl    $0xb,%eax
    82d0:	25 00 00 10 00       	and    $0x100000,%eax
    82d5:	41 09 c0             	or     %eax,%r8d
    82d8:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    82df:	25 00 00 08 00       	and    $0x80000,%eax
    82e4:	41 09 c0             	or     %eax,%r8d
    82e7:	89 c8                	mov    %ecx,%eax
    82e9:	c1 e8 06             	shr    $0x6,%eax
    82ec:	25 00 00 04 00       	and    $0x40000,%eax
    82f1:	44 09 c0             	or     %r8d,%eax
    82f4:	41 89 c8             	mov    %ecx,%r8d
    82f7:	41 c1 e8 04          	shr    $0x4,%r8d
    82fb:	44 09 d8             	or     %r11d,%eax
    82fe:	41 81 e0 00 00 01 00 	and    $0x10000,%r8d
    8305:	44 09 c0             	or     %r8d,%eax
    8308:	41 89 d0             	mov    %edx,%r8d
    830b:	41 c1 e8 02          	shr    $0x2,%r8d
    830f:	41 81 e2 08 08 00 00 	and    $0x808,%r10d
    8316:	41 83 e1 11          	and    $0x11,%r9d
    831a:	41 81 e0 00 20 00 00 	and    $0x2000,%r8d
    8321:	44 09 c0             	or     %r8d,%eax
    8324:	41 89 d0             	mov    %edx,%r8d
    8327:	41 c1 e0 08          	shl    $0x8,%r8d
    832b:	41 81 e0 00 10 00 00 	and    $0x1000,%r8d
    8332:	44 09 c0             	or     %r8d,%eax
    8335:	41 89 d0             	mov    %edx,%r8d
    8338:	41 c1 e8 09          	shr    $0x9,%r8d
    833c:	44 09 d0             	or     %r10d,%eax
    833f:	41 81 e0 00 04 00 00 	and    $0x400,%r8d
    8346:	44 09 c0             	or     %r8d,%eax
    8349:	41 89 d0             	mov    %edx,%r8d
    834c:	41 c1 e0 07          	shl    $0x7,%r8d
    8350:	41 81 e0 00 01 00 00 	and    $0x100,%r8d
    8357:	44 09 c0             	or     %r8d,%eax
    835a:	41 89 d0             	mov    %edx,%r8d
    835d:	41 c1 e8 07          	shr    $0x7,%r8d
    8361:	41 83 e0 20          	and    $0x20,%r8d
    8365:	44 09 c0             	or     %r8d,%eax
    8368:	44 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%r8d
    836f:	00 
    8370:	41 83 e0 04          	and    $0x4,%r8d
    8374:	44 09 c8             	or     %r9d,%eax
    8377:	44 09 c0             	or     %r8d,%eax
    837a:	41 89 d0             	mov    %edx,%r8d
    837d:	41 c1 e8 15          	shr    $0x15,%r8d
    8381:	41 83 e0 02          	and    $0x2,%r8d
    8385:	44 09 c0             	or     %r8d,%eax
    8388:	89 44 f7 04          	mov    %eax,0x4(%rdi,%rsi,8)
    838c:	48 83 c6 01          	add    $0x1,%rsi
    8390:	48 83 fe 10          	cmp    $0x10,%rsi
    8394:	74 3a                	je     83d0 <mbedtls_des_setkey+0x470>
    8396:	83 fe 01             	cmp    $0x1,%esi
    8399:	41 0f 9e c0          	setle  %r8b
    839d:	83 fe 08             	cmp    $0x8,%esi
    83a0:	0f 94 c0             	sete   %al
    83a3:	41 08 c0             	or     %al,%r8b
    83a6:	0f 84 24 fd ff ff    	je     80d0 <mbedtls_des_setkey+0x170>
    83ac:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    83af:	c1 e9 1b             	shr    $0x1b,%ecx
    83b2:	09 c1                	or     %eax,%ecx
    83b4:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
    83b7:	c1 ea 1b             	shr    $0x1b,%edx
    83ba:	09 c2                	or     %eax,%edx
    83bc:	81 e1 ff ff ff 0f    	and    $0xfffffff,%ecx
    83c2:	81 e2 ff ff ff 0f    	and    $0xfffffff,%edx
    83c8:	e9 30 fd ff ff       	jmpq   80fd <mbedtls_des_setkey+0x19d>
    83cd:	0f 1f 00             	nopl   (%rax)
    83d0:	5b                   	pop    %rbx
    83d1:	c3                   	retq   
    83d2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    83d9:	00 00 00 00 
    83dd:	0f 1f 00             	nopl   (%rax)

00000000000083e0 <des3_set2key>:
    83e0:	41 54                	push   %r12
    83e2:	49 89 d4             	mov    %rdx,%r12
    83e5:	55                   	push   %rbp
    83e6:	48 89 f5             	mov    %rsi,%rbp
    83e9:	48 89 d6             	mov    %rdx,%rsi
    83ec:	53                   	push   %rbx
    83ed:	48 89 fb             	mov    %rdi,%rbx
    83f0:	e8 6b fb ff ff       	callq  7f60 <mbedtls_des_setkey>
    83f5:	49 8d 74 24 08       	lea    0x8(%r12),%rsi
    83fa:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
    8401:	e8 5a fb ff ff       	callq  7f60 <mbedtls_des_setkey>
    8406:	48 89 ea             	mov    %rbp,%rdx
    8409:	48 89 d8             	mov    %rbx,%rax
    840c:	31 c9                	xor    %ecx,%ecx
    840e:	66 90                	xchg   %ax,%ax
    8410:	8b 74 0b 78          	mov    0x78(%rbx,%rcx,1),%esi
    8414:	48 83 c2 08          	add    $0x8,%rdx
    8418:	48 83 c0 08          	add    $0x8,%rax
    841c:	89 72 f8             	mov    %esi,-0x8(%rdx)
    841f:	8b 74 0b 7c          	mov    0x7c(%rbx,%rcx,1),%esi
    8423:	89 72 fc             	mov    %esi,-0x4(%rdx)
    8426:	8b b4 0d f8 00 00 00 	mov    0xf8(%rbp,%rcx,1),%esi
    842d:	89 70 78             	mov    %esi,0x78(%rax)
    8430:	8b b4 0d fc 00 00 00 	mov    0xfc(%rbp,%rcx,1),%esi
    8437:	48 83 e9 08          	sub    $0x8,%rcx
    843b:	89 70 7c             	mov    %esi,0x7c(%rax)
    843e:	8b 70 f8             	mov    -0x8(%rax),%esi
    8441:	89 b0 f8 00 00 00    	mov    %esi,0xf8(%rax)
    8447:	8b 70 fc             	mov    -0x4(%rax),%esi
    844a:	89 b0 fc 00 00 00    	mov    %esi,0xfc(%rax)
    8450:	8b 72 f8             	mov    -0x8(%rdx),%esi
    8453:	89 b2 f8 00 00 00    	mov    %esi,0xf8(%rdx)
    8459:	8b 72 fc             	mov    -0x4(%rdx),%esi
    845c:	89 b2 fc 00 00 00    	mov    %esi,0xfc(%rdx)
    8462:	48 83 f9 80          	cmp    $0xffffffffffffff80,%rcx
    8466:	75 a8                	jne    8410 <des3_set2key+0x30>
    8468:	5b                   	pop    %rbx
    8469:	5d                   	pop    %rbp
    846a:	41 5c                	pop    %r12
    846c:	c3                   	retq   
    846d:	0f 1f 00             	nopl   (%rax)

0000000000008470 <des3_set3key>:
    8470:	41 54                	push   %r12
    8472:	49 89 d4             	mov    %rdx,%r12
    8475:	55                   	push   %rbp
    8476:	48 89 f5             	mov    %rsi,%rbp
    8479:	48 89 d6             	mov    %rdx,%rsi
    847c:	53                   	push   %rbx
    847d:	48 89 fb             	mov    %rdi,%rbx
    8480:	e8 db fa ff ff       	callq  7f60 <mbedtls_des_setkey>
    8485:	49 8d 74 24 08       	lea    0x8(%r12),%rsi
    848a:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
    8491:	e8 ca fa ff ff       	callq  7f60 <mbedtls_des_setkey>
    8496:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
    849b:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
    84a2:	e8 b9 fa ff ff       	callq  7f60 <mbedtls_des_setkey>
    84a7:	31 d2                	xor    %edx,%edx
    84a9:	31 c0                	xor    %eax,%eax
    84ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    84b0:	8b 8c 03 78 01 00 00 	mov    0x178(%rbx,%rax,1),%ecx
    84b7:	89 4c 15 00          	mov    %ecx,0x0(%rbp,%rdx,1)
    84bb:	8b 8c 03 7c 01 00 00 	mov    0x17c(%rbx,%rax,1),%ecx
    84c2:	89 4c 15 04          	mov    %ecx,0x4(%rbp,%rdx,1)
    84c6:	8b 8c 05 f8 00 00 00 	mov    0xf8(%rbp,%rax,1),%ecx
    84cd:	89 8c 13 80 00 00 00 	mov    %ecx,0x80(%rbx,%rdx,1)
    84d4:	8b 8c 05 fc 00 00 00 	mov    0xfc(%rbp,%rax,1),%ecx
    84db:	89 8c 13 84 00 00 00 	mov    %ecx,0x84(%rbx,%rdx,1)
    84e2:	8b 4c 03 78          	mov    0x78(%rbx,%rax,1),%ecx
    84e6:	89 8c 15 00 01 00 00 	mov    %ecx,0x100(%rbp,%rdx,1)
    84ed:	8b 4c 03 7c          	mov    0x7c(%rbx,%rax,1),%ecx
    84f1:	48 83 e8 08          	sub    $0x8,%rax
    84f5:	89 8c 15 04 01 00 00 	mov    %ecx,0x104(%rbp,%rdx,1)
    84fc:	48 83 c2 08          	add    $0x8,%rdx
    8500:	48 83 f8 80          	cmp    $0xffffffffffffff80,%rax
    8504:	75 aa                	jne    84b0 <des3_set3key+0x40>
    8506:	5b                   	pop    %rbx
    8507:	5d                   	pop    %rbp
    8508:	41 5c                	pop    %r12
    850a:	c3                   	retq   
    850b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008510 <mbedtls_des_setkey_enc>:
    8510:	f3 0f 1e fa          	endbr64 
    8514:	e8 47 fa ff ff       	callq  7f60 <mbedtls_des_setkey>
    8519:	31 c0                	xor    %eax,%eax
    851b:	c3                   	retq   
    851c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008520 <mbedtls_des_setkey_dec>:
    8520:	f3 0f 1e fa          	endbr64 
    8524:	e8 37 fa ff ff       	callq  7f60 <mbedtls_des_setkey>
    8529:	48 8d 47 78          	lea    0x78(%rdi),%rax
    852d:	48 8d 77 38          	lea    0x38(%rdi),%rsi
    8531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8538:	8b 17                	mov    (%rdi),%edx
    853a:	8b 08                	mov    (%rax),%ecx
    853c:	48 83 e8 08          	sub    $0x8,%rax
    8540:	48 83 c7 08          	add    $0x8,%rdi
    8544:	89 4f f8             	mov    %ecx,-0x8(%rdi)
    8547:	8b 48 0c             	mov    0xc(%rax),%ecx
    854a:	89 50 08             	mov    %edx,0x8(%rax)
    854d:	8b 57 fc             	mov    -0x4(%rdi),%edx
    8550:	89 4f fc             	mov    %ecx,-0x4(%rdi)
    8553:	89 50 0c             	mov    %edx,0xc(%rax)
    8556:	48 39 f0             	cmp    %rsi,%rax
    8559:	75 dd                	jne    8538 <mbedtls_des_setkey_dec+0x18>
    855b:	31 c0                	xor    %eax,%eax
    855d:	c3                   	retq   
    855e:	66 90                	xchg   %ax,%ax

0000000000008560 <mbedtls_des3_set2key_enc>:
    8560:	f3 0f 1e fa          	endbr64 
    8564:	55                   	push   %rbp
    8565:	48 89 f2             	mov    %rsi,%rdx
    8568:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    856f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8576:	00 00 
    8578:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    857f:	00 
    8580:	31 c0                	xor    %eax,%eax
    8582:	48 89 e5             	mov    %rsp,%rbp
    8585:	48 89 ee             	mov    %rbp,%rsi
    8588:	e8 53 fe ff ff       	callq  83e0 <des3_set2key>
    858d:	be 80 01 00 00       	mov    $0x180,%esi
    8592:	48 89 ef             	mov    %rbp,%rdi
    8595:	e8 86 cc ff ff       	callq  5220 <mbedtls_platform_zeroize>
    859a:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    85a1:	00 
    85a2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    85a9:	00 00 
    85ab:	75 0b                	jne    85b8 <mbedtls_des3_set2key_enc+0x58>
    85ad:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
    85b4:	31 c0                	xor    %eax,%eax
    85b6:	5d                   	pop    %rbp
    85b7:	c3                   	retq   
    85b8:	e8 a3 ac ff ff       	callq  3260 <__stack_chk_fail@plt>
    85bd:	0f 1f 00             	nopl   (%rax)

00000000000085c0 <mbedtls_des3_set2key_dec>:
    85c0:	f3 0f 1e fa          	endbr64 
    85c4:	55                   	push   %rbp
    85c5:	48 89 f2             	mov    %rsi,%rdx
    85c8:	48 89 fe             	mov    %rdi,%rsi
    85cb:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    85d2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    85d9:	00 00 
    85db:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    85e2:	00 
    85e3:	31 c0                	xor    %eax,%eax
    85e5:	48 89 e5             	mov    %rsp,%rbp
    85e8:	48 89 ef             	mov    %rbp,%rdi
    85eb:	e8 f0 fd ff ff       	callq  83e0 <des3_set2key>
    85f0:	be 80 01 00 00       	mov    $0x180,%esi
    85f5:	48 89 ef             	mov    %rbp,%rdi
    85f8:	e8 23 cc ff ff       	callq  5220 <mbedtls_platform_zeroize>
    85fd:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    8604:	00 
    8605:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    860c:	00 00 
    860e:	75 0b                	jne    861b <mbedtls_des3_set2key_dec+0x5b>
    8610:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
    8617:	31 c0                	xor    %eax,%eax
    8619:	5d                   	pop    %rbp
    861a:	c3                   	retq   
    861b:	e8 40 ac ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000008620 <mbedtls_des3_set3key_enc>:
    8620:	f3 0f 1e fa          	endbr64 
    8624:	55                   	push   %rbp
    8625:	48 89 f2             	mov    %rsi,%rdx
    8628:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    862f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8636:	00 00 
    8638:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    863f:	00 
    8640:	31 c0                	xor    %eax,%eax
    8642:	48 89 e5             	mov    %rsp,%rbp
    8645:	48 89 ee             	mov    %rbp,%rsi
    8648:	e8 23 fe ff ff       	callq  8470 <des3_set3key>
    864d:	be 80 01 00 00       	mov    $0x180,%esi
    8652:	48 89 ef             	mov    %rbp,%rdi
    8655:	e8 c6 cb ff ff       	callq  5220 <mbedtls_platform_zeroize>
    865a:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    8661:	00 
    8662:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8669:	00 00 
    866b:	75 0b                	jne    8678 <mbedtls_des3_set3key_enc+0x58>
    866d:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
    8674:	31 c0                	xor    %eax,%eax
    8676:	5d                   	pop    %rbp
    8677:	c3                   	retq   
    8678:	e8 e3 ab ff ff       	callq  3260 <__stack_chk_fail@plt>
    867d:	0f 1f 00             	nopl   (%rax)

0000000000008680 <mbedtls_des3_set3key_dec>:
    8680:	f3 0f 1e fa          	endbr64 
    8684:	55                   	push   %rbp
    8685:	48 89 f2             	mov    %rsi,%rdx
    8688:	48 89 fe             	mov    %rdi,%rsi
    868b:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
    8692:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8699:	00 00 
    869b:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    86a2:	00 
    86a3:	31 c0                	xor    %eax,%eax
    86a5:	48 89 e5             	mov    %rsp,%rbp
    86a8:	48 89 ef             	mov    %rbp,%rdi
    86ab:	e8 c0 fd ff ff       	callq  8470 <des3_set3key>
    86b0:	be 80 01 00 00       	mov    $0x180,%esi
    86b5:	48 89 ef             	mov    %rbp,%rdi
    86b8:	e8 63 cb ff ff       	callq  5220 <mbedtls_platform_zeroize>
    86bd:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    86c4:	00 
    86c5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    86cc:	00 00 
    86ce:	75 0b                	jne    86db <mbedtls_des3_set3key_dec+0x5b>
    86d0:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
    86d7:	31 c0                	xor    %eax,%eax
    86d9:	5d                   	pop    %rbp
    86da:	c3                   	retq   
    86db:	e8 80 ab ff ff       	callq  3260 <__stack_chk_fail@plt>

00000000000086e0 <mbedtls_des_crypt_ecb>:
    86e0:	f3 0f 1e fa          	endbr64 
    86e4:	41 57                	push   %r15
    86e6:	4c 8d 1d 53 a4 01 00 	lea    0x1a453(%rip),%r11        # 22b40 <SB2>
    86ed:	4c 8d 15 4c a1 01 00 	lea    0x1a14c(%rip),%r10        # 22840 <SB5>
    86f4:	41 56                	push   %r14
    86f6:	4c 8d 0d 43 a3 01 00 	lea    0x1a343(%rip),%r9        # 22a40 <SB3>
    86fd:	41 55                	push   %r13
    86ff:	4c 8d 2d 3a 9e 01 00 	lea    0x19e3a(%rip),%r13        # 22540 <SB8>
    8706:	41 54                	push   %r12
    8708:	4c 8d 25 31 9f 01 00 	lea    0x19f31(%rip),%r12        # 22640 <SB7>
    870f:	55                   	push   %rbp
    8710:	48 8d 2d 29 a0 01 00 	lea    0x1a029(%rip),%rbp        # 22740 <SB6>
    8717:	53                   	push   %rbx
    8718:	44 8b 06             	mov    (%rsi),%r8d
    871b:	48 8d 9f 80 00 00 00 	lea    0x80(%rdi),%rbx
    8722:	8b 4e 04             	mov    0x4(%rsi),%ecx
    8725:	41 0f c8             	bswap  %r8d
    8728:	44 89 c6             	mov    %r8d,%esi
    872b:	c1 ee 04             	shr    $0x4,%esi
    872e:	0f c9                	bswap  %ecx
    8730:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
    8735:	31 ce                	xor    %ecx,%esi
    8737:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
    873c:	48 8d 1d fd a1 01 00 	lea    0x1a1fd(%rip),%rbx        # 22940 <SB4>
    8743:	81 e6 0f 0f 0f 0f    	and    $0xf0f0f0f,%esi
    8749:	31 f1                	xor    %esi,%ecx
    874b:	c1 e6 04             	shl    $0x4,%esi
    874e:	41 31 f0             	xor    %esi,%r8d
    8751:	44 89 c0             	mov    %r8d,%eax
    8754:	c1 e8 10             	shr    $0x10,%eax
    8757:	31 c8                	xor    %ecx,%eax
    8759:	0f b7 f0             	movzwl %ax,%esi
    875c:	31 f1                	xor    %esi,%ecx
    875e:	c1 e6 10             	shl    $0x10,%esi
    8761:	44 31 c6             	xor    %r8d,%esi
    8764:	41 89 c8             	mov    %ecx,%r8d
    8767:	41 c1 e8 02          	shr    $0x2,%r8d
    876b:	41 31 f0             	xor    %esi,%r8d
    876e:	41 81 e0 33 33 33 33 	and    $0x33333333,%r8d
    8775:	42 8d 04 85 00 00 00 	lea    0x0(,%r8,4),%eax
    877c:	00 
    877d:	44 31 c6             	xor    %r8d,%esi
    8780:	4c 8d 05 b9 a4 01 00 	lea    0x1a4b9(%rip),%r8        # 22c40 <SB1>
    8787:	31 c1                	xor    %eax,%ecx
    8789:	89 ca                	mov    %ecx,%edx
    878b:	c1 ea 08             	shr    $0x8,%edx
    878e:	31 f2                	xor    %esi,%edx
    8790:	81 e2 ff 00 ff 00    	and    $0xff00ff,%edx
    8796:	89 d0                	mov    %edx,%eax
    8798:	31 d6                	xor    %edx,%esi
    879a:	c1 e0 08             	shl    $0x8,%eax
    879d:	89 f2                	mov    %esi,%edx
    879f:	31 c8                	xor    %ecx,%eax
    87a1:	d1 c0                	rol    %eax
    87a3:	31 c2                	xor    %eax,%edx
    87a5:	81 e2 aa aa aa aa    	and    $0xaaaaaaaa,%edx
    87ab:	31 d6                	xor    %edx,%esi
    87ad:	31 d0                	xor    %edx,%eax
    87af:	d1 c6                	rol    %esi
    87b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    87b8:	8b 17                	mov    (%rdi),%edx
    87ba:	41 89 c6             	mov    %eax,%r14d
    87bd:	48 83 c7 10          	add    $0x10,%rdi
    87c1:	41 c1 ce 04          	ror    $0x4,%r14d
    87c5:	44 33 77 f4          	xor    -0xc(%rdi),%r14d
    87c9:	31 c2                	xor    %eax,%edx
    87cb:	45 89 f7             	mov    %r14d,%r15d
    87ce:	89 d1                	mov    %edx,%ecx
    87d0:	41 83 e7 3f          	and    $0x3f,%r15d
    87d4:	83 e1 3f             	and    $0x3f,%ecx
    87d7:	41 8b 4c 8d 00       	mov    0x0(%r13,%rcx,4),%ecx
    87dc:	43 33 0c bc          	xor    (%r12,%r15,4),%ecx
    87e0:	41 89 d7             	mov    %edx,%r15d
    87e3:	41 c1 ef 08          	shr    $0x8,%r15d
    87e7:	41 83 e7 3f          	and    $0x3f,%r15d
    87eb:	42 33 4c bd 00       	xor    0x0(%rbp,%r15,4),%ecx
    87f0:	41 89 d7             	mov    %edx,%r15d
    87f3:	c1 ea 18             	shr    $0x18,%edx
    87f6:	41 c1 ef 10          	shr    $0x10,%r15d
    87fa:	83 e2 3f             	and    $0x3f,%edx
    87fd:	41 83 e7 3f          	and    $0x3f,%r15d
    8801:	42 33 0c bb          	xor    (%rbx,%r15,4),%ecx
    8805:	41 33 0c 93          	xor    (%r11,%rdx,4),%ecx
    8809:	44 89 f2             	mov    %r14d,%edx
    880c:	c1 ea 08             	shr    $0x8,%edx
    880f:	83 e2 3f             	and    $0x3f,%edx
    8812:	41 33 0c 92          	xor    (%r10,%rdx,4),%ecx
    8816:	44 89 f2             	mov    %r14d,%edx
    8819:	41 c1 ee 18          	shr    $0x18,%r14d
    881d:	c1 ea 10             	shr    $0x10,%edx
    8820:	41 83 e6 3f          	and    $0x3f,%r14d
    8824:	83 e2 3f             	and    $0x3f,%edx
    8827:	41 33 0c 91          	xor    (%r9,%rdx,4),%ecx
    882b:	43 33 0c b0          	xor    (%r8,%r14,4),%ecx
    882f:	44 8b 77 f8          	mov    -0x8(%rdi),%r14d
    8833:	31 ce                	xor    %ecx,%esi
    8835:	89 f1                	mov    %esi,%ecx
    8837:	41 31 f6             	xor    %esi,%r14d
    883a:	c1 c9 04             	ror    $0x4,%ecx
    883d:	33 4f fc             	xor    -0x4(%rdi),%ecx
    8840:	44 89 f2             	mov    %r14d,%edx
    8843:	45 89 f7             	mov    %r14d,%r15d
    8846:	c1 ea 08             	shr    $0x8,%edx
    8849:	41 83 e7 3f          	and    $0x3f,%r15d
    884d:	83 e2 3f             	and    $0x3f,%edx
    8850:	8b 54 95 00          	mov    0x0(%rbp,%rdx,4),%edx
    8854:	43 33 54 bd 00       	xor    0x0(%r13,%r15,4),%edx
    8859:	31 d0                	xor    %edx,%eax
    885b:	44 89 f2             	mov    %r14d,%edx
    885e:	41 c1 ee 18          	shr    $0x18,%r14d
    8862:	c1 ea 10             	shr    $0x10,%edx
    8865:	41 83 e6 3f          	and    $0x3f,%r14d
    8869:	83 e2 3f             	and    $0x3f,%edx
    886c:	33 04 93             	xor    (%rbx,%rdx,4),%eax
    886f:	89 ca                	mov    %ecx,%edx
    8871:	43 33 04 b3          	xor    (%r11,%r14,4),%eax
    8875:	83 e2 3f             	and    $0x3f,%edx
    8878:	41 33 04 94          	xor    (%r12,%rdx,4),%eax
    887c:	89 ca                	mov    %ecx,%edx
    887e:	c1 ea 08             	shr    $0x8,%edx
    8881:	83 e2 3f             	and    $0x3f,%edx
    8884:	41 33 04 92          	xor    (%r10,%rdx,4),%eax
    8888:	89 ca                	mov    %ecx,%edx
    888a:	c1 e9 18             	shr    $0x18,%ecx
    888d:	c1 ea 10             	shr    $0x10,%edx
    8890:	83 e1 3f             	and    $0x3f,%ecx
    8893:	83 e2 3f             	and    $0x3f,%edx
    8896:	41 33 04 91          	xor    (%r9,%rdx,4),%eax
    889a:	41 33 04 88          	xor    (%r8,%rcx,4),%eax
    889e:	48 3b 7c 24 f0       	cmp    -0x10(%rsp),%rdi
    88a3:	0f 85 0f ff ff ff    	jne    87b8 <mbedtls_des_crypt_ecb+0xd8>
    88a9:	d1 c8                	ror    %eax
    88ab:	48 8b 5c 24 f8       	mov    -0x8(%rsp),%rbx
    88b0:	89 c2                	mov    %eax,%edx
    88b2:	31 f2                	xor    %esi,%edx
    88b4:	81 e2 aa aa aa aa    	and    $0xaaaaaaaa,%edx
    88ba:	31 d6                	xor    %edx,%esi
    88bc:	31 d0                	xor    %edx,%eax
    88be:	d1 ce                	ror    %esi
    88c0:	89 f2                	mov    %esi,%edx
    88c2:	c1 ea 08             	shr    $0x8,%edx
    88c5:	31 c2                	xor    %eax,%edx
    88c7:	81 e2 ff 00 ff 00    	and    $0xff00ff,%edx
    88cd:	31 d0                	xor    %edx,%eax
    88cf:	c1 e2 08             	shl    $0x8,%edx
    88d2:	31 d6                	xor    %edx,%esi
    88d4:	89 f1                	mov    %esi,%ecx
    88d6:	c1 e9 02             	shr    $0x2,%ecx
    88d9:	31 c1                	xor    %eax,%ecx
    88db:	81 e1 33 33 33 33    	and    $0x33333333,%ecx
    88e1:	31 c8                	xor    %ecx,%eax
    88e3:	8d 14 8d 00 00 00 00 	lea    0x0(,%rcx,4),%edx
    88ea:	89 c1                	mov    %eax,%ecx
    88ec:	31 f2                	xor    %esi,%edx
    88ee:	c1 e9 10             	shr    $0x10,%ecx
    88f1:	31 d1                	xor    %edx,%ecx
    88f3:	0f b7 c9             	movzwl %cx,%ecx
    88f6:	31 ca                	xor    %ecx,%edx
    88f8:	c1 e1 10             	shl    $0x10,%ecx
    88fb:	31 c8                	xor    %ecx,%eax
    88fd:	89 c1                	mov    %eax,%ecx
    88ff:	c1 e9 04             	shr    $0x4,%ecx
    8902:	31 d1                	xor    %edx,%ecx
    8904:	81 e1 0f 0f 0f 0f    	and    $0xf0f0f0f,%ecx
    890a:	89 ce                	mov    %ecx,%esi
    890c:	31 ca                	xor    %ecx,%edx
    890e:	c1 e6 04             	shl    $0x4,%esi
    8911:	0f ca                	bswap  %edx
    8913:	89 53 04             	mov    %edx,0x4(%rbx)
    8916:	31 f0                	xor    %esi,%eax
    8918:	0f c8                	bswap  %eax
    891a:	89 03                	mov    %eax,(%rbx)
    891c:	31 c0                	xor    %eax,%eax
    891e:	5b                   	pop    %rbx
    891f:	5d                   	pop    %rbp
    8920:	41 5c                	pop    %r12
    8922:	41 5d                	pop    %r13
    8924:	41 5e                	pop    %r14
    8926:	41 5f                	pop    %r15
    8928:	c3                   	retq   
    8929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000008930 <mbedtls_des_crypt_cbc.part.0>:
    8930:	41 56                	push   %r14
    8932:	41 55                	push   %r13
    8934:	4d 8d 2c 30          	lea    (%r8,%rsi,1),%r13
    8938:	41 54                	push   %r12
    893a:	55                   	push   %rbp
    893b:	53                   	push   %rbx
    893c:	48 85 f6             	test   %rsi,%rsi
    893f:	74 4f                	je     8990 <mbedtls_des_crypt_cbc.part.0+0x60>
    8941:	49 89 fc             	mov    %rdi,%r12
    8944:	49 89 d6             	mov    %rdx,%r14
    8947:	48 89 cd             	mov    %rcx,%rbp
    894a:	4c 89 c3             	mov    %r8,%rbx
    894d:	eb 14                	jmp    8963 <mbedtls_des_crypt_cbc.part.0+0x33>
    894f:	90                   	nop
    8950:	48 8b 03             	mov    (%rbx),%rax
    8953:	48 83 c3 08          	add    $0x8,%rbx
    8957:	48 83 c5 08          	add    $0x8,%rbp
    895b:	49 89 06             	mov    %rax,(%r14)
    895e:	4c 39 eb             	cmp    %r13,%rbx
    8961:	74 2d                	je     8990 <mbedtls_des_crypt_cbc.part.0+0x60>
    8963:	8b 45 00             	mov    0x0(%rbp),%eax
    8966:	41 33 06             	xor    (%r14),%eax
    8969:	48 89 da             	mov    %rbx,%rdx
    896c:	48 89 de             	mov    %rbx,%rsi
    896f:	89 03                	mov    %eax,(%rbx)
    8971:	8b 45 04             	mov    0x4(%rbp),%eax
    8974:	4c 89 e7             	mov    %r12,%rdi
    8977:	41 33 46 04          	xor    0x4(%r14),%eax
    897b:	89 43 04             	mov    %eax,0x4(%rbx)
    897e:	e8 5d fd ff ff       	callq  86e0 <mbedtls_des_crypt_ecb>
    8983:	85 c0                	test   %eax,%eax
    8985:	74 c9                	je     8950 <mbedtls_des_crypt_cbc.part.0+0x20>
    8987:	5b                   	pop    %rbx
    8988:	5d                   	pop    %rbp
    8989:	41 5c                	pop    %r12
    898b:	41 5d                	pop    %r13
    898d:	41 5e                	pop    %r14
    898f:	c3                   	retq   
    8990:	5b                   	pop    %rbx
    8991:	31 c0                	xor    %eax,%eax
    8993:	5d                   	pop    %rbp
    8994:	41 5c                	pop    %r12
    8996:	41 5d                	pop    %r13
    8998:	41 5e                	pop    %r14
    899a:	c3                   	retq   
    899b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000089a0 <mbedtls_des_crypt_cbc>:
    89a0:	f3 0f 1e fa          	endbr64 
    89a4:	f6 c2 07             	test   $0x7,%dl
    89a7:	0f 85 98 00 00 00    	jne    8a45 <mbedtls_des_crypt_cbc+0xa5>
    89ad:	89 f0                	mov    %esi,%eax
    89af:	41 57                	push   %r15
    89b1:	48 89 d6             	mov    %rdx,%rsi
    89b4:	49 89 ff             	mov    %rdi,%r15
    89b7:	41 56                	push   %r14
    89b9:	41 55                	push   %r13
    89bb:	41 54                	push   %r12
    89bd:	49 89 cc             	mov    %rcx,%r12
    89c0:	4c 89 c1             	mov    %r8,%rcx
    89c3:	55                   	push   %rbp
    89c4:	53                   	push   %rbx
    89c5:	4c 89 cb             	mov    %r9,%rbx
    89c8:	83 f8 01             	cmp    $0x1,%eax
    89cb:	74 53                	je     8a20 <mbedtls_des_crypt_cbc+0x80>
    89cd:	4c 89 c5             	mov    %r8,%rbp
    89d0:	4d 8d 34 10          	lea    (%r8,%rdx,1),%r14
    89d4:	48 85 d2             	test   %rdx,%rdx
    89d7:	75 26                	jne    89ff <mbedtls_des_crypt_cbc+0x5f>
    89d9:	eb 5d                	jmp    8a38 <mbedtls_des_crypt_cbc+0x98>
    89db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    89e0:	48 83 c5 08          	add    $0x8,%rbp
    89e4:	41 8b 04 24          	mov    (%r12),%eax
    89e8:	31 03                	xor    %eax,(%rbx)
    89ea:	41 8b 44 24 04       	mov    0x4(%r12),%eax
    89ef:	31 43 04             	xor    %eax,0x4(%rbx)
    89f2:	48 83 c3 08          	add    $0x8,%rbx
    89f6:	4d 89 2c 24          	mov    %r13,(%r12)
    89fa:	4c 39 f5             	cmp    %r14,%rbp
    89fd:	74 39                	je     8a38 <mbedtls_des_crypt_cbc+0x98>
    89ff:	48 89 da             	mov    %rbx,%rdx
    8a02:	48 89 ee             	mov    %rbp,%rsi
    8a05:	4c 89 ff             	mov    %r15,%rdi
    8a08:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
    8a0c:	e8 cf fc ff ff       	callq  86e0 <mbedtls_des_crypt_ecb>
    8a11:	85 c0                	test   %eax,%eax
    8a13:	74 cb                	je     89e0 <mbedtls_des_crypt_cbc+0x40>
    8a15:	5b                   	pop    %rbx
    8a16:	5d                   	pop    %rbp
    8a17:	41 5c                	pop    %r12
    8a19:	41 5d                	pop    %r13
    8a1b:	41 5e                	pop    %r14
    8a1d:	41 5f                	pop    %r15
    8a1f:	c3                   	retq   
    8a20:	5b                   	pop    %rbx
    8a21:	4c 89 e2             	mov    %r12,%rdx
    8a24:	5d                   	pop    %rbp
    8a25:	4d 89 c8             	mov    %r9,%r8
    8a28:	41 5c                	pop    %r12
    8a2a:	41 5d                	pop    %r13
    8a2c:	41 5e                	pop    %r14
    8a2e:	41 5f                	pop    %r15
    8a30:	e9 fb fe ff ff       	jmpq   8930 <mbedtls_des_crypt_cbc.part.0>
    8a35:	0f 1f 00             	nopl   (%rax)
    8a38:	5b                   	pop    %rbx
    8a39:	31 c0                	xor    %eax,%eax
    8a3b:	5d                   	pop    %rbp
    8a3c:	41 5c                	pop    %r12
    8a3e:	41 5d                	pop    %r13
    8a40:	41 5e                	pop    %r14
    8a42:	41 5f                	pop    %r15
    8a44:	c3                   	retq   
    8a45:	b8 ce ff ff ff       	mov    $0xffffffce,%eax
    8a4a:	c3                   	retq   
    8a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008a50 <mbedtls_des3_crypt_ecb>:
    8a50:	f3 0f 1e fa          	endbr64 
    8a54:	41 57                	push   %r15
    8a56:	48 89 f0             	mov    %rsi,%rax
    8a59:	48 89 fe             	mov    %rdi,%rsi
    8a5c:	4c 8d 1d dd 9e 01 00 	lea    0x19edd(%rip),%r11        # 22940 <SB4>
    8a63:	41 56                	push   %r14
    8a65:	4c 8d 0d d4 a0 01 00 	lea    0x1a0d4(%rip),%r9        # 22b40 <SB2>
    8a6c:	4c 8d 15 cd 9f 01 00 	lea    0x19fcd(%rip),%r10        # 22a40 <SB3>
    8a73:	41 55                	push   %r13
    8a75:	4c 8d 2d c4 9a 01 00 	lea    0x19ac4(%rip),%r13        # 22540 <SB8>
    8a7c:	41 54                	push   %r12
    8a7e:	4c 8d 25 bb 9b 01 00 	lea    0x19bbb(%rip),%r12        # 22640 <SB7>
    8a85:	55                   	push   %rbp
    8a86:	48 8d 2d b3 9c 01 00 	lea    0x19cb3(%rip),%rbp        # 22740 <SB6>
    8a8d:	53                   	push   %rbx
    8a8e:	44 8b 00             	mov    (%rax),%r8d
    8a91:	48 89 fb             	mov    %rdi,%rbx
    8a94:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
    8a98:	41 0f c8             	bswap  %r8d
    8a9b:	48 89 7c 24 f0       	mov    %rdi,-0x10(%rsp)
    8aa0:	8b 78 04             	mov    0x4(%rax),%edi
    8aa3:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
    8aa8:	44 89 c2             	mov    %r8d,%edx
    8aab:	c1 ea 04             	shr    $0x4,%edx
    8aae:	0f cf                	bswap  %edi
    8ab0:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
    8ab5:	48 8d 1d 84 9d 01 00 	lea    0x19d84(%rip),%rbx        # 22840 <SB5>
    8abc:	31 fa                	xor    %edi,%edx
    8abe:	81 e2 0f 0f 0f 0f    	and    $0xf0f0f0f,%edx
    8ac4:	31 d7                	xor    %edx,%edi
    8ac6:	c1 e2 04             	shl    $0x4,%edx
    8ac9:	41 31 d0             	xor    %edx,%r8d
    8acc:	44 89 c0             	mov    %r8d,%eax
    8acf:	c1 e8 10             	shr    $0x10,%eax
    8ad2:	31 f8                	xor    %edi,%eax
    8ad4:	0f b7 d0             	movzwl %ax,%edx
    8ad7:	31 d7                	xor    %edx,%edi
    8ad9:	c1 e2 10             	shl    $0x10,%edx
    8adc:	44 31 c2             	xor    %r8d,%edx
    8adf:	41 89 f8             	mov    %edi,%r8d
    8ae2:	41 c1 e8 02          	shr    $0x2,%r8d
    8ae6:	41 31 d0             	xor    %edx,%r8d
    8ae9:	41 81 e0 33 33 33 33 	and    $0x33333333,%r8d
    8af0:	42 8d 04 85 00 00 00 	lea    0x0(,%r8,4),%eax
    8af7:	00 
    8af8:	44 31 c2             	xor    %r8d,%edx
    8afb:	4c 8d 05 3e a1 01 00 	lea    0x1a13e(%rip),%r8        # 22c40 <SB1>
    8b02:	31 c7                	xor    %eax,%edi
    8b04:	89 f9                	mov    %edi,%ecx
    8b06:	c1 e9 08             	shr    $0x8,%ecx
    8b09:	31 d1                	xor    %edx,%ecx
    8b0b:	81 e1 ff 00 ff 00    	and    $0xff00ff,%ecx
    8b11:	89 c8                	mov    %ecx,%eax
    8b13:	31 ca                	xor    %ecx,%edx
    8b15:	c1 e0 08             	shl    $0x8,%eax
    8b18:	89 d1                	mov    %edx,%ecx
    8b1a:	31 f8                	xor    %edi,%eax
    8b1c:	d1 c0                	rol    %eax
    8b1e:	31 c1                	xor    %eax,%ecx
    8b20:	81 e1 aa aa aa aa    	and    $0xaaaaaaaa,%ecx
    8b26:	31 ca                	xor    %ecx,%edx
    8b28:	31 c8                	xor    %ecx,%eax
    8b2a:	d1 c2                	rol    %edx
    8b2c:	0f 1f 40 00          	nopl   0x0(%rax)
    8b30:	8b 0e                	mov    (%rsi),%ecx
    8b32:	41 89 c6             	mov    %eax,%r14d
    8b35:	48 83 c6 10          	add    $0x10,%rsi
    8b39:	41 c1 ce 04          	ror    $0x4,%r14d
    8b3d:	44 33 76 f4          	xor    -0xc(%rsi),%r14d
    8b41:	31 c1                	xor    %eax,%ecx
    8b43:	45 89 f7             	mov    %r14d,%r15d
    8b46:	89 cf                	mov    %ecx,%edi
    8b48:	41 83 e7 3f          	and    $0x3f,%r15d
    8b4c:	83 e7 3f             	and    $0x3f,%edi
    8b4f:	41 8b 7c bd 00       	mov    0x0(%r13,%rdi,4),%edi
    8b54:	43 33 3c bc          	xor    (%r12,%r15,4),%edi
    8b58:	41 89 cf             	mov    %ecx,%r15d
    8b5b:	41 c1 ef 08          	shr    $0x8,%r15d
    8b5f:	41 83 e7 3f          	and    $0x3f,%r15d
    8b63:	42 33 7c bd 00       	xor    0x0(%rbp,%r15,4),%edi
    8b68:	41 89 cf             	mov    %ecx,%r15d
    8b6b:	c1 e9 18             	shr    $0x18,%ecx
    8b6e:	41 c1 ef 10          	shr    $0x10,%r15d
    8b72:	83 e1 3f             	and    $0x3f,%ecx
    8b75:	41 83 e7 3f          	and    $0x3f,%r15d
    8b79:	43 33 3c bb          	xor    (%r11,%r15,4),%edi
    8b7d:	41 33 3c 89          	xor    (%r9,%rcx,4),%edi
    8b81:	44 89 f1             	mov    %r14d,%ecx
    8b84:	c1 e9 08             	shr    $0x8,%ecx
    8b87:	83 e1 3f             	and    $0x3f,%ecx
    8b8a:	33 3c 8b             	xor    (%rbx,%rcx,4),%edi
    8b8d:	44 89 f1             	mov    %r14d,%ecx
    8b90:	41 c1 ee 18          	shr    $0x18,%r14d
    8b94:	c1 e9 10             	shr    $0x10,%ecx
    8b97:	41 83 e6 3f          	and    $0x3f,%r14d
    8b9b:	83 e1 3f             	and    $0x3f,%ecx
    8b9e:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
    8ba2:	43 33 3c b0          	xor    (%r8,%r14,4),%edi
    8ba6:	44 8b 76 f8          	mov    -0x8(%rsi),%r14d
    8baa:	31 fa                	xor    %edi,%edx
    8bac:	89 d7                	mov    %edx,%edi
    8bae:	41 31 d6             	xor    %edx,%r14d
    8bb1:	c1 cf 04             	ror    $0x4,%edi
    8bb4:	33 7e fc             	xor    -0x4(%rsi),%edi
    8bb7:	44 89 f1             	mov    %r14d,%ecx
    8bba:	45 89 f7             	mov    %r14d,%r15d
    8bbd:	c1 e9 08             	shr    $0x8,%ecx
    8bc0:	41 83 e7 3f          	and    $0x3f,%r15d
    8bc4:	83 e1 3f             	and    $0x3f,%ecx
    8bc7:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    8bcb:	43 33 4c bd 00       	xor    0x0(%r13,%r15,4),%ecx
    8bd0:	31 c8                	xor    %ecx,%eax
    8bd2:	44 89 f1             	mov    %r14d,%ecx
    8bd5:	41 c1 ee 18          	shr    $0x18,%r14d
    8bd9:	c1 e9 10             	shr    $0x10,%ecx
    8bdc:	41 83 e6 3f          	and    $0x3f,%r14d
    8be0:	83 e1 3f             	and    $0x3f,%ecx
    8be3:	41 33 04 8b          	xor    (%r11,%rcx,4),%eax
    8be7:	89 f9                	mov    %edi,%ecx
    8be9:	43 33 04 b1          	xor    (%r9,%r14,4),%eax
    8bed:	83 e1 3f             	and    $0x3f,%ecx
    8bf0:	41 33 04 8c          	xor    (%r12,%rcx,4),%eax
    8bf4:	89 f9                	mov    %edi,%ecx
    8bf6:	c1 e9 08             	shr    $0x8,%ecx
    8bf9:	83 e1 3f             	and    $0x3f,%ecx
    8bfc:	33 04 8b             	xor    (%rbx,%rcx,4),%eax
    8bff:	89 f9                	mov    %edi,%ecx
    8c01:	c1 ef 18             	shr    $0x18,%edi
    8c04:	c1 e9 10             	shr    $0x10,%ecx
    8c07:	83 e7 3f             	and    $0x3f,%edi
    8c0a:	83 e1 3f             	and    $0x3f,%ecx
    8c0d:	41 33 04 8a          	xor    (%r10,%rcx,4),%eax
    8c11:	41 33 04 b8          	xor    (%r8,%rdi,4),%eax
    8c15:	48 3b 74 24 e8       	cmp    -0x18(%rsp),%rsi
    8c1a:	0f 85 10 ff ff ff    	jne    8b30 <mbedtls_des3_crypt_ecb+0xe0>
    8c20:	48 8b 7c 24 f0       	mov    -0x10(%rsp),%rdi
    8c25:	48 81 c7 00 01 00 00 	add    $0x100,%rdi
    8c2c:	48 89 7c 24 e8       	mov    %rdi,-0x18(%rsp)
    8c31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8c38:	8b 0e                	mov    (%rsi),%ecx
    8c3a:	41 89 d6             	mov    %edx,%r14d
    8c3d:	48 83 c6 10          	add    $0x10,%rsi
    8c41:	41 c1 ce 04          	ror    $0x4,%r14d
    8c45:	44 33 76 f4          	xor    -0xc(%rsi),%r14d
    8c49:	31 d1                	xor    %edx,%ecx
    8c4b:	45 89 f7             	mov    %r14d,%r15d
    8c4e:	89 cf                	mov    %ecx,%edi
    8c50:	41 83 e7 3f          	and    $0x3f,%r15d
    8c54:	83 e7 3f             	and    $0x3f,%edi
    8c57:	41 8b 7c bd 00       	mov    0x0(%r13,%rdi,4),%edi
    8c5c:	43 33 3c bc          	xor    (%r12,%r15,4),%edi
    8c60:	41 89 cf             	mov    %ecx,%r15d
    8c63:	41 c1 ef 08          	shr    $0x8,%r15d
    8c67:	41 83 e7 3f          	and    $0x3f,%r15d
    8c6b:	42 33 7c bd 00       	xor    0x0(%rbp,%r15,4),%edi
    8c70:	41 89 cf             	mov    %ecx,%r15d
    8c73:	c1 e9 18             	shr    $0x18,%ecx
    8c76:	41 c1 ef 10          	shr    $0x10,%r15d
    8c7a:	83 e1 3f             	and    $0x3f,%ecx
    8c7d:	41 83 e7 3f          	and    $0x3f,%r15d
    8c81:	43 33 3c bb          	xor    (%r11,%r15,4),%edi
    8c85:	41 33 3c 89          	xor    (%r9,%rcx,4),%edi
    8c89:	44 89 f1             	mov    %r14d,%ecx
    8c8c:	c1 e9 08             	shr    $0x8,%ecx
    8c8f:	83 e1 3f             	and    $0x3f,%ecx
    8c92:	33 3c 8b             	xor    (%rbx,%rcx,4),%edi
    8c95:	44 89 f1             	mov    %r14d,%ecx
    8c98:	41 c1 ee 18          	shr    $0x18,%r14d
    8c9c:	c1 e9 10             	shr    $0x10,%ecx
    8c9f:	41 83 e6 3f          	and    $0x3f,%r14d
    8ca3:	83 e1 3f             	and    $0x3f,%ecx
    8ca6:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
    8caa:	43 33 3c b0          	xor    (%r8,%r14,4),%edi
    8cae:	44 8b 76 f8          	mov    -0x8(%rsi),%r14d
    8cb2:	31 f8                	xor    %edi,%eax
    8cb4:	89 c7                	mov    %eax,%edi
    8cb6:	41 31 c6             	xor    %eax,%r14d
    8cb9:	c1 cf 04             	ror    $0x4,%edi
    8cbc:	33 7e fc             	xor    -0x4(%rsi),%edi
    8cbf:	44 89 f1             	mov    %r14d,%ecx
    8cc2:	45 89 f7             	mov    %r14d,%r15d
    8cc5:	c1 e9 08             	shr    $0x8,%ecx
    8cc8:	41 83 e7 3f          	and    $0x3f,%r15d
    8ccc:	83 e1 3f             	and    $0x3f,%ecx
    8ccf:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    8cd3:	43 33 4c bd 00       	xor    0x0(%r13,%r15,4),%ecx
    8cd8:	31 ca                	xor    %ecx,%edx
    8cda:	44 89 f1             	mov    %r14d,%ecx
    8cdd:	41 c1 ee 18          	shr    $0x18,%r14d
    8ce1:	c1 e9 10             	shr    $0x10,%ecx
    8ce4:	41 83 e6 3f          	and    $0x3f,%r14d
    8ce8:	83 e1 3f             	and    $0x3f,%ecx
    8ceb:	41 33 14 8b          	xor    (%r11,%rcx,4),%edx
    8cef:	89 f9                	mov    %edi,%ecx
    8cf1:	43 33 14 b1          	xor    (%r9,%r14,4),%edx
    8cf5:	83 e1 3f             	and    $0x3f,%ecx
    8cf8:	41 33 14 8c          	xor    (%r12,%rcx,4),%edx
    8cfc:	89 f9                	mov    %edi,%ecx
    8cfe:	c1 e9 08             	shr    $0x8,%ecx
    8d01:	83 e1 3f             	and    $0x3f,%ecx
    8d04:	33 14 8b             	xor    (%rbx,%rcx,4),%edx
    8d07:	89 f9                	mov    %edi,%ecx
    8d09:	c1 ef 18             	shr    $0x18,%edi
    8d0c:	c1 e9 10             	shr    $0x10,%ecx
    8d0f:	83 e7 3f             	and    $0x3f,%edi
    8d12:	83 e1 3f             	and    $0x3f,%ecx
    8d15:	41 33 14 8a          	xor    (%r10,%rcx,4),%edx
    8d19:	41 33 14 b8          	xor    (%r8,%rdi,4),%edx
    8d1d:	48 3b 74 24 e8       	cmp    -0x18(%rsp),%rsi
    8d22:	0f 85 10 ff ff ff    	jne    8c38 <mbedtls_des3_crypt_ecb+0x1e8>
    8d28:	48 8b 7c 24 f0       	mov    -0x10(%rsp),%rdi
    8d2d:	48 81 c7 80 01 00 00 	add    $0x180,%rdi
    8d34:	48 89 7c 24 e8       	mov    %rdi,-0x18(%rsp)
    8d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d40:	8b 0e                	mov    (%rsi),%ecx
    8d42:	41 89 c6             	mov    %eax,%r14d
    8d45:	48 83 c6 10          	add    $0x10,%rsi
    8d49:	41 c1 ce 04          	ror    $0x4,%r14d
    8d4d:	44 33 76 f4          	xor    -0xc(%rsi),%r14d
    8d51:	31 c1                	xor    %eax,%ecx
    8d53:	45 89 f7             	mov    %r14d,%r15d
    8d56:	89 cf                	mov    %ecx,%edi
    8d58:	41 83 e7 3f          	and    $0x3f,%r15d
    8d5c:	83 e7 3f             	and    $0x3f,%edi
    8d5f:	41 8b 7c bd 00       	mov    0x0(%r13,%rdi,4),%edi
    8d64:	43 33 3c bc          	xor    (%r12,%r15,4),%edi
    8d68:	41 89 cf             	mov    %ecx,%r15d
    8d6b:	41 c1 ef 08          	shr    $0x8,%r15d
    8d6f:	41 83 e7 3f          	and    $0x3f,%r15d
    8d73:	42 33 7c bd 00       	xor    0x0(%rbp,%r15,4),%edi
    8d78:	41 89 cf             	mov    %ecx,%r15d
    8d7b:	c1 e9 18             	shr    $0x18,%ecx
    8d7e:	41 c1 ef 10          	shr    $0x10,%r15d
    8d82:	83 e1 3f             	and    $0x3f,%ecx
    8d85:	41 83 e7 3f          	and    $0x3f,%r15d
    8d89:	43 33 3c bb          	xor    (%r11,%r15,4),%edi
    8d8d:	41 33 3c 89          	xor    (%r9,%rcx,4),%edi
    8d91:	44 89 f1             	mov    %r14d,%ecx
    8d94:	c1 e9 08             	shr    $0x8,%ecx
    8d97:	83 e1 3f             	and    $0x3f,%ecx
    8d9a:	33 3c 8b             	xor    (%rbx,%rcx,4),%edi
    8d9d:	44 89 f1             	mov    %r14d,%ecx
    8da0:	41 c1 ee 18          	shr    $0x18,%r14d
    8da4:	c1 e9 10             	shr    $0x10,%ecx
    8da7:	41 83 e6 3f          	and    $0x3f,%r14d
    8dab:	83 e1 3f             	and    $0x3f,%ecx
    8dae:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
    8db2:	43 33 3c b0          	xor    (%r8,%r14,4),%edi
    8db6:	44 8b 76 f8          	mov    -0x8(%rsi),%r14d
    8dba:	31 fa                	xor    %edi,%edx
    8dbc:	89 d7                	mov    %edx,%edi
    8dbe:	41 31 d6             	xor    %edx,%r14d
    8dc1:	c1 cf 04             	ror    $0x4,%edi
    8dc4:	33 7e fc             	xor    -0x4(%rsi),%edi
    8dc7:	44 89 f1             	mov    %r14d,%ecx
    8dca:	45 89 f7             	mov    %r14d,%r15d
    8dcd:	c1 e9 08             	shr    $0x8,%ecx
    8dd0:	41 83 e7 3f          	and    $0x3f,%r15d
    8dd4:	83 e1 3f             	and    $0x3f,%ecx
    8dd7:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    8ddb:	43 33 4c bd 00       	xor    0x0(%r13,%r15,4),%ecx
    8de0:	31 c8                	xor    %ecx,%eax
    8de2:	44 89 f1             	mov    %r14d,%ecx
    8de5:	41 c1 ee 18          	shr    $0x18,%r14d
    8de9:	c1 e9 10             	shr    $0x10,%ecx
    8dec:	41 83 e6 3f          	and    $0x3f,%r14d
    8df0:	83 e1 3f             	and    $0x3f,%ecx
    8df3:	41 33 04 8b          	xor    (%r11,%rcx,4),%eax
    8df7:	89 f9                	mov    %edi,%ecx
    8df9:	43 33 04 b1          	xor    (%r9,%r14,4),%eax
    8dfd:	83 e1 3f             	and    $0x3f,%ecx
    8e00:	41 33 04 8c          	xor    (%r12,%rcx,4),%eax
    8e04:	89 f9                	mov    %edi,%ecx
    8e06:	c1 e9 08             	shr    $0x8,%ecx
    8e09:	83 e1 3f             	and    $0x3f,%ecx
    8e0c:	33 04 8b             	xor    (%rbx,%rcx,4),%eax
    8e0f:	89 f9                	mov    %edi,%ecx
    8e11:	c1 ef 18             	shr    $0x18,%edi
    8e14:	c1 e9 10             	shr    $0x10,%ecx
    8e17:	83 e7 3f             	and    $0x3f,%edi
    8e1a:	83 e1 3f             	and    $0x3f,%ecx
    8e1d:	41 33 04 8a          	xor    (%r10,%rcx,4),%eax
    8e21:	41 33 04 b8          	xor    (%r8,%rdi,4),%eax
    8e25:	48 3b 74 24 e8       	cmp    -0x18(%rsp),%rsi
    8e2a:	0f 85 10 ff ff ff    	jne    8d40 <mbedtls_des3_crypt_ecb+0x2f0>
    8e30:	d1 c8                	ror    %eax
    8e32:	48 8b 5c 24 f8       	mov    -0x8(%rsp),%rbx
    8e37:	89 c6                	mov    %eax,%esi
    8e39:	31 d6                	xor    %edx,%esi
    8e3b:	81 e6 aa aa aa aa    	and    $0xaaaaaaaa,%esi
    8e41:	31 f2                	xor    %esi,%edx
    8e43:	31 f0                	xor    %esi,%eax
    8e45:	d1 ca                	ror    %edx
    8e47:	89 d6                	mov    %edx,%esi
    8e49:	c1 ee 08             	shr    $0x8,%esi
    8e4c:	31 c6                	xor    %eax,%esi
    8e4e:	81 e6 ff 00 ff 00    	and    $0xff00ff,%esi
    8e54:	31 f0                	xor    %esi,%eax
    8e56:	c1 e6 08             	shl    $0x8,%esi
    8e59:	31 d6                	xor    %edx,%esi
    8e5b:	89 f1                	mov    %esi,%ecx
    8e5d:	c1 e9 02             	shr    $0x2,%ecx
    8e60:	31 c1                	xor    %eax,%ecx
    8e62:	81 e1 33 33 33 33    	and    $0x33333333,%ecx
    8e68:	31 c8                	xor    %ecx,%eax
    8e6a:	8d 14 8d 00 00 00 00 	lea    0x0(,%rcx,4),%edx
    8e71:	89 c1                	mov    %eax,%ecx
    8e73:	31 f2                	xor    %esi,%edx
    8e75:	c1 e9 10             	shr    $0x10,%ecx
    8e78:	31 d1                	xor    %edx,%ecx
    8e7a:	0f b7 c9             	movzwl %cx,%ecx
    8e7d:	31 ca                	xor    %ecx,%edx
    8e7f:	c1 e1 10             	shl    $0x10,%ecx
    8e82:	31 c8                	xor    %ecx,%eax
    8e84:	89 c1                	mov    %eax,%ecx
    8e86:	c1 e9 04             	shr    $0x4,%ecx
    8e89:	31 d1                	xor    %edx,%ecx
    8e8b:	81 e1 0f 0f 0f 0f    	and    $0xf0f0f0f,%ecx
    8e91:	89 ce                	mov    %ecx,%esi
    8e93:	31 ca                	xor    %ecx,%edx
    8e95:	c1 e6 04             	shl    $0x4,%esi
    8e98:	0f ca                	bswap  %edx
    8e9a:	89 53 04             	mov    %edx,0x4(%rbx)
    8e9d:	31 f0                	xor    %esi,%eax
    8e9f:	0f c8                	bswap  %eax
    8ea1:	89 03                	mov    %eax,(%rbx)
    8ea3:	31 c0                	xor    %eax,%eax
    8ea5:	5b                   	pop    %rbx
    8ea6:	5d                   	pop    %rbp
    8ea7:	41 5c                	pop    %r12
    8ea9:	41 5d                	pop    %r13
    8eab:	41 5e                	pop    %r14
    8ead:	41 5f                	pop    %r15
    8eaf:	c3                   	retq   

0000000000008eb0 <mbedtls_des3_crypt_cbc.part.0>:
    8eb0:	41 56                	push   %r14
    8eb2:	41 55                	push   %r13
    8eb4:	4d 8d 2c 30          	lea    (%r8,%rsi,1),%r13
    8eb8:	41 54                	push   %r12
    8eba:	55                   	push   %rbp
    8ebb:	53                   	push   %rbx
    8ebc:	48 85 f6             	test   %rsi,%rsi
    8ebf:	74 4f                	je     8f10 <mbedtls_des3_crypt_cbc.part.0+0x60>
    8ec1:	49 89 fc             	mov    %rdi,%r12
    8ec4:	49 89 d6             	mov    %rdx,%r14
    8ec7:	48 89 cd             	mov    %rcx,%rbp
    8eca:	4c 89 c3             	mov    %r8,%rbx
    8ecd:	eb 14                	jmp    8ee3 <mbedtls_des3_crypt_cbc.part.0+0x33>
    8ecf:	90                   	nop
    8ed0:	48 8b 03             	mov    (%rbx),%rax
    8ed3:	48 83 c3 08          	add    $0x8,%rbx
    8ed7:	48 83 c5 08          	add    $0x8,%rbp
    8edb:	49 89 06             	mov    %rax,(%r14)
    8ede:	4c 39 eb             	cmp    %r13,%rbx
    8ee1:	74 2d                	je     8f10 <mbedtls_des3_crypt_cbc.part.0+0x60>
    8ee3:	8b 45 00             	mov    0x0(%rbp),%eax
    8ee6:	41 33 06             	xor    (%r14),%eax
    8ee9:	48 89 da             	mov    %rbx,%rdx
    8eec:	48 89 de             	mov    %rbx,%rsi
    8eef:	89 03                	mov    %eax,(%rbx)
    8ef1:	8b 45 04             	mov    0x4(%rbp),%eax
    8ef4:	4c 89 e7             	mov    %r12,%rdi
    8ef7:	41 33 46 04          	xor    0x4(%r14),%eax
    8efb:	89 43 04             	mov    %eax,0x4(%rbx)
    8efe:	e8 4d fb ff ff       	callq  8a50 <mbedtls_des3_crypt_ecb>
    8f03:	85 c0                	test   %eax,%eax
    8f05:	74 c9                	je     8ed0 <mbedtls_des3_crypt_cbc.part.0+0x20>
    8f07:	5b                   	pop    %rbx
    8f08:	5d                   	pop    %rbp
    8f09:	41 5c                	pop    %r12
    8f0b:	41 5d                	pop    %r13
    8f0d:	41 5e                	pop    %r14
    8f0f:	c3                   	retq   
    8f10:	5b                   	pop    %rbx
    8f11:	31 c0                	xor    %eax,%eax
    8f13:	5d                   	pop    %rbp
    8f14:	41 5c                	pop    %r12
    8f16:	41 5d                	pop    %r13
    8f18:	41 5e                	pop    %r14
    8f1a:	c3                   	retq   
    8f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008f20 <mbedtls_des3_crypt_cbc>:
    8f20:	f3 0f 1e fa          	endbr64 
    8f24:	f6 c2 07             	test   $0x7,%dl
    8f27:	0f 85 98 00 00 00    	jne    8fc5 <mbedtls_des3_crypt_cbc+0xa5>
    8f2d:	89 f0                	mov    %esi,%eax
    8f2f:	41 57                	push   %r15
    8f31:	48 89 d6             	mov    %rdx,%rsi
    8f34:	49 89 ff             	mov    %rdi,%r15
    8f37:	41 56                	push   %r14
    8f39:	41 55                	push   %r13
    8f3b:	41 54                	push   %r12
    8f3d:	49 89 cc             	mov    %rcx,%r12
    8f40:	4c 89 c1             	mov    %r8,%rcx
    8f43:	55                   	push   %rbp
    8f44:	53                   	push   %rbx
    8f45:	4c 89 cb             	mov    %r9,%rbx
    8f48:	83 f8 01             	cmp    $0x1,%eax
    8f4b:	74 53                	je     8fa0 <mbedtls_des3_crypt_cbc+0x80>
    8f4d:	4c 89 c5             	mov    %r8,%rbp
    8f50:	4d 8d 34 10          	lea    (%r8,%rdx,1),%r14
    8f54:	48 85 d2             	test   %rdx,%rdx
    8f57:	75 26                	jne    8f7f <mbedtls_des3_crypt_cbc+0x5f>
    8f59:	eb 5d                	jmp    8fb8 <mbedtls_des3_crypt_cbc+0x98>
    8f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8f60:	48 83 c5 08          	add    $0x8,%rbp
    8f64:	41 8b 04 24          	mov    (%r12),%eax
    8f68:	31 03                	xor    %eax,(%rbx)
    8f6a:	41 8b 44 24 04       	mov    0x4(%r12),%eax
    8f6f:	31 43 04             	xor    %eax,0x4(%rbx)
    8f72:	48 83 c3 08          	add    $0x8,%rbx
    8f76:	4d 89 2c 24          	mov    %r13,(%r12)
    8f7a:	4c 39 f5             	cmp    %r14,%rbp
    8f7d:	74 39                	je     8fb8 <mbedtls_des3_crypt_cbc+0x98>
    8f7f:	48 89 da             	mov    %rbx,%rdx
    8f82:	48 89 ee             	mov    %rbp,%rsi
    8f85:	4c 89 ff             	mov    %r15,%rdi
    8f88:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
    8f8c:	e8 bf fa ff ff       	callq  8a50 <mbedtls_des3_crypt_ecb>
    8f91:	85 c0                	test   %eax,%eax
    8f93:	74 cb                	je     8f60 <mbedtls_des3_crypt_cbc+0x40>
    8f95:	5b                   	pop    %rbx
    8f96:	5d                   	pop    %rbp
    8f97:	41 5c                	pop    %r12
    8f99:	41 5d                	pop    %r13
    8f9b:	41 5e                	pop    %r14
    8f9d:	41 5f                	pop    %r15
    8f9f:	c3                   	retq   
    8fa0:	5b                   	pop    %rbx
    8fa1:	4c 89 e2             	mov    %r12,%rdx
    8fa4:	5d                   	pop    %rbp
    8fa5:	4d 89 c8             	mov    %r9,%r8
    8fa8:	41 5c                	pop    %r12
    8faa:	41 5d                	pop    %r13
    8fac:	41 5e                	pop    %r14
    8fae:	41 5f                	pop    %r15
    8fb0:	e9 fb fe ff ff       	jmpq   8eb0 <mbedtls_des3_crypt_cbc.part.0>
    8fb5:	0f 1f 00             	nopl   (%rax)
    8fb8:	5b                   	pop    %rbx
    8fb9:	31 c0                	xor    %eax,%eax
    8fbb:	5d                   	pop    %rbp
    8fbc:	41 5c                	pop    %r12
    8fbe:	41 5d                	pop    %r13
    8fc0:	41 5e                	pop    %r14
    8fc2:	41 5f                	pop    %r15
    8fc4:	c3                   	retq   
    8fc5:	b8 ce ff ff ff       	mov    $0xffffffce,%eax
    8fca:	c3                   	retq   
    8fcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008fd0 <mbedtls_des_self_test>:
    8fd0:	f3 0f 1e fa          	endbr64 
    8fd4:	41 57                	push   %r15
    8fd6:	b9 10 00 00 00       	mov    $0x10,%ecx
    8fdb:	41 56                	push   %r14
    8fdd:	41 55                	push   %r13
    8fdf:	41 54                	push   %r12
    8fe1:	45 31 e4             	xor    %r12d,%r12d
    8fe4:	55                   	push   %rbp
    8fe5:	53                   	push   %rbx
    8fe6:	48 81 ec c8 03 00 00 	sub    $0x3c8,%rsp
    8fed:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    8ff1:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    8ff6:	4c 8d b4 24 a0 00 00 	lea    0xa0(%rsp),%r14
    8ffd:	00 
    8ffe:	4c 89 ef             	mov    %r13,%rdi
    9001:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9008:	00 00 
    900a:	48 89 84 24 b8 03 00 	mov    %rax,0x3b8(%rsp)
    9011:	00 
    9012:	31 c0                	xor    %eax,%eax
    9014:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    9017:	b9 30 00 00 00       	mov    $0x30,%ecx
    901c:	4c 89 f7             	mov    %r14,%rdi
    901f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    9022:	44 89 e0             	mov    %r12d,%eax
    9025:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
    902a:	44 89 e5             	mov    %r12d,%ebp
    902d:	83 e0 01             	and    $0x1,%eax
    9030:	d1 fd                	sar    %ebp
    9032:	89 44 24 10          	mov    %eax,0x10(%rsp)
    9036:	45 85 d2             	test   %r10d,%r10d
    9039:	75 35                	jne    9070 <mbedtls_des_self_test+0xa0>
    903b:	48 b8 4e 6f 77 20 69 	movabs $0x7420736920776f4e,%rax
    9042:	73 20 74 
    9045:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
    904c:	00 
    904d:	41 83 fc 05          	cmp    $0x5,%r12d
    9051:	0f 87 bd 01 00 00    	ja     9214 <mbedtls_des_self_test+0x244>
    9057:	48 8d 0d 82 92 01 00 	lea    0x19282(%rip),%rcx        # 222e0 <last4+0x580>
    905e:	44 89 e0             	mov    %r12d,%eax
    9061:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    9065:	48 01 c8             	add    %rcx,%rax
    9068:	3e ff e0             	notrack jmpq *%rax
    906b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9070:	85 c0                	test   %eax,%eax
    9072:	8d 4d 01             	lea    0x1(%rbp),%ecx
    9075:	48 8d 05 82 80 01 00 	lea    0x18082(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
    907c:	bf 01 00 00 00       	mov    $0x1,%edi
    9081:	4c 8d 05 51 80 01 00 	lea    0x18051(%rip),%r8        # 210d9 <_IO_stdin_used+0xd9>
    9088:	48 8d 35 18 92 01 00 	lea    0x19218(%rip),%rsi        # 222a7 <last4+0x547>
    908f:	4c 0f 44 c0          	cmove  %rax,%r8
    9093:	6b c9 38             	imul   $0x38,%ecx,%ecx
    9096:	83 fd 01             	cmp    $0x1,%ebp
    9099:	19 d2                	sbb    %edx,%edx
    909b:	31 c0                	xor    %eax,%eax
    909d:	83 e2 ed             	and    $0xffffffed,%edx
    90a0:	83 c2 33             	add    $0x33,%edx
    90a3:	e8 98 a2 ff ff       	callq  3340 <__printf_chk@plt>
    90a8:	eb 91                	jmp    903b <mbedtls_des_self_test+0x6b>
    90aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    90b0:	4c 8d bc 24 20 02 00 	lea    0x220(%rsp),%r15
    90b7:	00 
    90b8:	4c 89 f7             	mov    %r14,%rdi
    90bb:	48 8d 15 ce 92 01 00 	lea    0x192ce(%rip),%rdx        # 22390 <des3_test_keys>
    90c2:	4c 89 fe             	mov    %r15,%rsi
    90c5:	e8 a6 f3 ff ff       	callq  8470 <des3_set3key>
    90ca:	be 80 01 00 00       	mov    $0x180,%esi
    90cf:	4c 89 ff             	mov    %r15,%rdi
    90d2:	e8 49 c1 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    90d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    90de:	00 00 
    90e0:	bb 64 00 00 00       	mov    $0x64,%ebx
    90e5:	4c 8d bc 24 a8 03 00 	lea    0x3a8(%rsp),%r15
    90ec:	00 
    90ed:	eb 16                	jmp    9105 <mbedtls_des_self_test+0x135>
    90ef:	90                   	nop
    90f0:	4c 89 ef             	mov    %r13,%rdi
    90f3:	e8 e8 f5 ff ff       	callq  86e0 <mbedtls_des_crypt_ecb>
    90f8:	85 c0                	test   %eax,%eax
    90fa:	75 1f                	jne    911b <mbedtls_des_self_test+0x14b>
    90fc:	83 eb 01             	sub    $0x1,%ebx
    90ff:	0f 84 2b 01 00 00    	je     9230 <mbedtls_des_self_test+0x260>
    9105:	4c 89 fa             	mov    %r15,%rdx
    9108:	4c 89 fe             	mov    %r15,%rsi
    910b:	85 ed                	test   %ebp,%ebp
    910d:	74 e1                	je     90f0 <mbedtls_des_self_test+0x120>
    910f:	4c 89 f7             	mov    %r14,%rdi
    9112:	e8 39 f9 ff ff       	callq  8a50 <mbedtls_des3_crypt_ecb>
    9117:	85 c0                	test   %eax,%eax
    9119:	74 e1                	je     90fc <mbedtls_des_self_test+0x12c>
    911b:	be 80 00 00 00       	mov    $0x80,%esi
    9120:	4c 89 ef             	mov    %r13,%rdi
    9123:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    9129:	e8 f2 c0 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    912e:	be 80 01 00 00       	mov    $0x180,%esi
    9133:	4c 89 f7             	mov    %r14,%rdi
    9136:	e8 e5 c0 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    913b:	48 8b 84 24 b8 03 00 	mov    0x3b8(%rsp),%rax
    9142:	00 
    9143:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    914a:	00 00 
    914c:	0f 85 7b 04 00 00    	jne    95cd <mbedtls_des_self_test+0x5fd>
    9152:	48 81 c4 c8 03 00 00 	add    $0x3c8,%rsp
    9159:	44 89 f8             	mov    %r15d,%eax
    915c:	5b                   	pop    %rbx
    915d:	5d                   	pop    %rbp
    915e:	41 5c                	pop    %r12
    9160:	41 5d                	pop    %r13
    9162:	41 5e                	pop    %r14
    9164:	41 5f                	pop    %r15
    9166:	c3                   	retq   
    9167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    916e:	00 00 
    9170:	48 8d 35 19 92 01 00 	lea    0x19219(%rip),%rsi        # 22390 <des3_test_keys>
    9177:	4c 89 ef             	mov    %r13,%rdi
    917a:	e8 e1 ed ff ff       	callq  7f60 <mbedtls_des_setkey>
    917f:	e9 5c ff ff ff       	jmpq   90e0 <mbedtls_des_self_test+0x110>
    9184:	0f 1f 40 00          	nopl   0x0(%rax)
    9188:	4c 8d bc 24 20 02 00 	lea    0x220(%rsp),%r15
    918f:	00 
    9190:	4c 89 f6             	mov    %r14,%rsi
    9193:	48 8d 15 f6 91 01 00 	lea    0x191f6(%rip),%rdx        # 22390 <des3_test_keys>
    919a:	4c 89 ff             	mov    %r15,%rdi
    919d:	e8 3e f2 ff ff       	callq  83e0 <des3_set2key>
    91a2:	be 80 01 00 00       	mov    $0x180,%esi
    91a7:	4c 89 ff             	mov    %r15,%rdi
    91aa:	e8 71 c0 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    91af:	e9 2c ff ff ff       	jmpq   90e0 <mbedtls_des_self_test+0x110>
    91b4:	0f 1f 40 00          	nopl   0x0(%rax)
    91b8:	4c 8d bc 24 20 02 00 	lea    0x220(%rsp),%r15
    91bf:	00 
    91c0:	4c 89 f7             	mov    %r14,%rdi
    91c3:	48 8d 15 c6 91 01 00 	lea    0x191c6(%rip),%rdx        # 22390 <des3_test_keys>
    91ca:	4c 89 fe             	mov    %r15,%rsi
    91cd:	e8 0e f2 ff ff       	callq  83e0 <des3_set2key>
    91d2:	be 80 01 00 00       	mov    $0x180,%esi
    91d7:	4c 89 ff             	mov    %r15,%rdi
    91da:	e8 41 c0 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    91df:	e9 fc fe ff ff       	jmpq   90e0 <mbedtls_des_self_test+0x110>
    91e4:	0f 1f 40 00          	nopl   0x0(%rax)
    91e8:	4c 8d bc 24 20 02 00 	lea    0x220(%rsp),%r15
    91ef:	00 
    91f0:	4c 89 f6             	mov    %r14,%rsi
    91f3:	48 8d 15 96 91 01 00 	lea    0x19196(%rip),%rdx        # 22390 <des3_test_keys>
    91fa:	4c 89 ff             	mov    %r15,%rdi
    91fd:	e8 6e f2 ff ff       	callq  8470 <des3_set3key>
    9202:	be 80 01 00 00       	mov    $0x180,%esi
    9207:	4c 89 ff             	mov    %r15,%rdi
    920a:	e8 11 c0 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    920f:	e9 cc fe ff ff       	jmpq   90e0 <mbedtls_des_self_test+0x110>
    9214:	48 8d 35 75 91 01 00 	lea    0x19175(%rip),%rsi        # 22390 <des3_test_keys>
    921b:	4c 89 ef             	mov    %r13,%rdi
    921e:	e8 fd f2 ff ff       	callq  8520 <mbedtls_des_setkey_dec>
    9223:	85 c0                	test   %eax,%eax
    9225:	0f 84 b5 fe ff ff    	je     90e0 <mbedtls_des_self_test+0x110>
    922b:	e9 eb fe ff ff       	jmpq   911b <mbedtls_des_self_test+0x14b>
    9230:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
    9235:	89 c2                	mov    %eax,%edx
    9237:	48 63 ed             	movslq %ebp,%rbp
    923a:	45 85 c9             	test   %r9d,%r9d
    923d:	0f 85 e4 00 00 00    	jne    9327 <mbedtls_des_self_test+0x357>
    9243:	48 8d 05 26 91 01 00 	lea    0x19126(%rip),%rax        # 22370 <des3_test_ecb_dec>
    924a:	48 8b 8c 24 a8 03 00 	mov    0x3a8(%rsp),%rcx
    9251:	00 
    9252:	48 39 0c e8          	cmp    %rcx,(%rax,%rbp,8)
    9256:	0f 85 e4 00 00 00    	jne    9340 <mbedtls_des_self_test+0x370>
    925c:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    9260:	85 ff                	test   %edi,%edi
    9262:	0f 85 a0 02 00 00    	jne    9508 <mbedtls_des_self_test+0x538>
    9268:	41 83 c4 01          	add    $0x1,%r12d
    926c:	41 83 fc 06          	cmp    $0x6,%r12d
    9270:	0f 85 ac fd ff ff    	jne    9022 <mbedtls_des_self_test+0x52>
    9276:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    927a:	4d 89 fc             	mov    %r15,%r12
    927d:	41 89 d7             	mov    %edx,%r15d
    9280:	85 f6                	test   %esi,%esi
    9282:	0f 85 d8 00 00 00    	jne    9360 <mbedtls_des_self_test+0x390>
    9288:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
    928f:	00 
    9290:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
    9295:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    929a:	4d 89 e5             	mov    %r12,%r13
    929d:	8b 44 24 18          	mov    0x18(%rsp),%eax
    92a1:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    92a5:	89 c5                	mov    %eax,%ebp
    92a7:	d1 fd                	sar    %ebp
    92a9:	85 c9                	test   %ecx,%ecx
    92ab:	74 38                	je     92e5 <mbedtls_des_self_test+0x315>
    92ad:	a8 01                	test   $0x1,%al
    92af:	8d 4d 01             	lea    0x1(%rbp),%ecx
    92b2:	48 8d 05 45 7e 01 00 	lea    0x17e45(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
    92b9:	bf 01 00 00 00       	mov    $0x1,%edi
    92be:	4c 8d 05 14 7e 01 00 	lea    0x17e14(%rip),%r8        # 210d9 <_IO_stdin_used+0xd9>
    92c5:	48 8d 35 f2 8f 01 00 	lea    0x18ff2(%rip),%rsi        # 222be <last4+0x55e>
    92cc:	4c 0f 44 c0          	cmove  %rax,%r8
    92d0:	6b c9 38             	imul   $0x38,%ecx,%ecx
    92d3:	83 fd 01             	cmp    $0x1,%ebp
    92d6:	19 d2                	sbb    %edx,%edx
    92d8:	31 c0                	xor    %eax,%eax
    92da:	83 e2 ed             	and    $0xffffffed,%edx
    92dd:	83 c2 33             	add    $0x33,%edx
    92e0:	e8 5b a0 ff ff       	callq  3340 <__printf_chk@plt>
    92e5:	48 b8 12 34 56 78 90 	movabs $0xefcdab9078563412,%rax
    92ec:	ab cd ef 
    92ef:	48 89 84 24 b0 03 00 	mov    %rax,0x3b0(%rsp)
    92f6:	00 
    92f7:	48 b8 4e 6f 77 20 69 	movabs $0x7420736920776f4e,%rax
    92fe:	73 20 74 
    9301:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
    9308:	00 
    9309:	8b 44 24 18          	mov    0x18(%rsp),%eax
    930d:	83 f8 05             	cmp    $0x5,%eax
    9310:	0f 87 cf 01 00 00    	ja     94e5 <mbedtls_des_self_test+0x515>
    9316:	48 8d 15 db 8f 01 00 	lea    0x18fdb(%rip),%rdx        # 222f8 <last4+0x598>
    931d:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    9321:	48 01 d0             	add    %rdx,%rax
    9324:	3e ff e0             	notrack jmpq *%rax
    9327:	48 8d 05 22 90 01 00 	lea    0x19022(%rip),%rax        # 22350 <des3_test_ecb_enc>
    932e:	48 8b 04 e8          	mov    (%rax,%rbp,8),%rax
    9332:	48 39 84 24 a8 03 00 	cmp    %rax,0x3a8(%rsp)
    9339:	00 
    933a:	0f 84 1c ff ff ff    	je     925c <mbedtls_des_self_test+0x28c>
    9340:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    9345:	45 85 c0             	test   %r8d,%r8d
    9348:	0f 84 cd fd ff ff    	je     911b <mbedtls_des_self_test+0x14b>
    934e:	48 8d 3d 68 a7 01 00 	lea    0x1a768(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    9355:	e8 a6 9e ff ff       	callq  3200 <puts@plt>
    935a:	e9 bc fd ff ff       	jmpq   911b <mbedtls_des_self_test+0x14b>
    935f:	90                   	nop
    9360:	bf 0a 00 00 00       	mov    $0xa,%edi
    9365:	e8 86 9e ff ff       	callq  31f0 <putchar@plt>
    936a:	e9 19 ff ff ff       	jmpq   9288 <mbedtls_des_self_test+0x2b8>
    936f:	4c 8d a4 24 20 02 00 	lea    0x220(%rsp),%r12
    9376:	00 
    9377:	4c 89 f7             	mov    %r14,%rdi
    937a:	48 8d 15 0f 90 01 00 	lea    0x1900f(%rip),%rdx        # 22390 <des3_test_keys>
    9381:	4c 89 e6             	mov    %r12,%rsi
    9384:	e8 e7 f0 ff ff       	callq  8470 <des3_set3key>
    9389:	be 80 01 00 00       	mov    $0x180,%esi
    938e:	4c 89 e7             	mov    %r12,%rdi
    9391:	e8 8a be ff ff       	callq  5220 <mbedtls_platform_zeroize>
    9396:	bb 64 00 00 00       	mov    $0x64,%ebx
    939b:	4c 8d bc 24 b0 03 00 	lea    0x3b0(%rsp),%r15
    93a2:	00 
    93a3:	49 bc 12 34 56 78 90 	movabs $0xefcdab9078563412,%r12
    93aa:	ab cd ef 
    93ad:	eb 2f                	jmp    93de <mbedtls_des_self_test+0x40e>
    93af:	90                   	nop
    93b0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    93b5:	e8 76 f5 ff ff       	callq  8930 <mbedtls_des_crypt_cbc.part.0>
    93ba:	85 c0                	test   %eax,%eax
    93bc:	0f 85 3c 01 00 00    	jne    94fe <mbedtls_des_self_test+0x52e>
    93c2:	48 8b 84 24 a8 03 00 	mov    0x3a8(%rsp),%rax
    93c9:	00 
    93ca:	4c 89 a4 24 a8 03 00 	mov    %r12,0x3a8(%rsp)
    93d1:	00 
    93d2:	83 eb 01             	sub    $0x1,%ebx
    93d5:	0f 84 46 01 00 00    	je     9521 <mbedtls_des_self_test+0x551>
    93db:	49 89 c4             	mov    %rax,%r12
    93de:	4d 89 e8             	mov    %r13,%r8
    93e1:	4c 89 e9             	mov    %r13,%rcx
    93e4:	4c 89 fa             	mov    %r15,%rdx
    93e7:	be 08 00 00 00       	mov    $0x8,%esi
    93ec:	85 ed                	test   %ebp,%ebp
    93ee:	74 c0                	je     93b0 <mbedtls_des_self_test+0x3e0>
    93f0:	4c 89 f7             	mov    %r14,%rdi
    93f3:	e8 b8 fa ff ff       	callq  8eb0 <mbedtls_des3_crypt_cbc.part.0>
    93f8:	eb c0                	jmp    93ba <mbedtls_des_self_test+0x3ea>
    93fa:	4c 8d a4 24 20 02 00 	lea    0x220(%rsp),%r12
    9401:	00 
    9402:	4c 89 f6             	mov    %r14,%rsi
    9405:	48 8d 15 84 8f 01 00 	lea    0x18f84(%rip),%rdx        # 22390 <des3_test_keys>
    940c:	4c 89 e7             	mov    %r12,%rdi
    940f:	e8 5c f0 ff ff       	callq  8470 <des3_set3key>
    9414:	be 80 01 00 00       	mov    $0x180,%esi
    9419:	4c 89 e7             	mov    %r12,%rdi
    941c:	e8 ff bd ff ff       	callq  5220 <mbedtls_platform_zeroize>
    9421:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    9426:	bb 64 00 00 00       	mov    $0x64,%ebx
    942b:	4c 8d bc 24 b0 03 00 	lea    0x3b0(%rsp),%r15
    9432:	00 
    9433:	eb 1c                	jmp    9451 <mbedtls_des_self_test+0x481>
    9435:	0f 1f 00             	nopl   (%rax)
    9438:	4c 89 e7             	mov    %r12,%rdi
    943b:	e8 60 f5 ff ff       	callq  89a0 <mbedtls_des_crypt_cbc>
    9440:	85 c0                	test   %eax,%eax
    9442:	0f 85 95 00 00 00    	jne    94dd <mbedtls_des_self_test+0x50d>
    9448:	83 eb 01             	sub    $0x1,%ebx
    944b:	0f 84 33 01 00 00    	je     9584 <mbedtls_des_self_test+0x5b4>
    9451:	4d 89 e9             	mov    %r13,%r9
    9454:	4d 89 e8             	mov    %r13,%r8
    9457:	4c 89 f9             	mov    %r15,%rcx
    945a:	ba 08 00 00 00       	mov    $0x8,%edx
    945f:	31 f6                	xor    %esi,%esi
    9461:	85 ed                	test   %ebp,%ebp
    9463:	74 d3                	je     9438 <mbedtls_des_self_test+0x468>
    9465:	4c 89 f7             	mov    %r14,%rdi
    9468:	e8 b3 fa ff ff       	callq  8f20 <mbedtls_des3_crypt_cbc>
    946d:	eb d1                	jmp    9440 <mbedtls_des_self_test+0x470>
    946f:	4c 8d a4 24 20 02 00 	lea    0x220(%rsp),%r12
    9476:	00 
    9477:	4c 89 f7             	mov    %r14,%rdi
    947a:	48 8d 15 0f 8f 01 00 	lea    0x18f0f(%rip),%rdx        # 22390 <des3_test_keys>
    9481:	4c 89 e6             	mov    %r12,%rsi
    9484:	e8 57 ef ff ff       	callq  83e0 <des3_set2key>
    9489:	be 80 01 00 00       	mov    $0x180,%esi
    948e:	4c 89 e7             	mov    %r12,%rdi
    9491:	e8 8a bd ff ff       	callq  5220 <mbedtls_platform_zeroize>
    9496:	e9 fb fe ff ff       	jmpq   9396 <mbedtls_des_self_test+0x3c6>
    949b:	4c 8d a4 24 20 02 00 	lea    0x220(%rsp),%r12
    94a2:	00 
    94a3:	4c 89 f6             	mov    %r14,%rsi
    94a6:	48 8d 15 e3 8e 01 00 	lea    0x18ee3(%rip),%rdx        # 22390 <des3_test_keys>
    94ad:	4c 89 e7             	mov    %r12,%rdi
    94b0:	e8 2b ef ff ff       	callq  83e0 <des3_set2key>
    94b5:	be 80 01 00 00       	mov    $0x180,%esi
    94ba:	4c 89 e7             	mov    %r12,%rdi
    94bd:	e8 5e bd ff ff       	callq  5220 <mbedtls_platform_zeroize>
    94c2:	e9 5a ff ff ff       	jmpq   9421 <mbedtls_des_self_test+0x451>
    94c7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    94cc:	48 8d 35 bd 8e 01 00 	lea    0x18ebd(%rip),%rsi        # 22390 <des3_test_keys>
    94d3:	e8 88 ea ff ff       	callq  7f60 <mbedtls_des_setkey>
    94d8:	e9 b9 fe ff ff       	jmpq   9396 <mbedtls_des_self_test+0x3c6>
    94dd:	4d 89 e5             	mov    %r12,%r13
    94e0:	e9 36 fc ff ff       	jmpq   911b <mbedtls_des_self_test+0x14b>
    94e5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    94ea:	48 8d 35 9f 8e 01 00 	lea    0x18e9f(%rip),%rsi        # 22390 <des3_test_keys>
    94f1:	e8 2a f0 ff ff       	callq  8520 <mbedtls_des_setkey_dec>
    94f6:	85 c0                	test   %eax,%eax
    94f8:	0f 84 23 ff ff ff    	je     9421 <mbedtls_des_self_test+0x451>
    94fe:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    9503:	e9 13 fc ff ff       	jmpq   911b <mbedtls_des_self_test+0x14b>
    9508:	48 8d 3d d3 9c 01 00 	lea    0x19cd3(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    950f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9513:	e8 e8 9c ff ff       	callq  3200 <puts@plt>
    9518:	8b 54 24 10          	mov    0x10(%rsp),%edx
    951c:	e9 47 fd ff ff       	jmpq   9268 <mbedtls_des_self_test+0x298>
    9521:	48 63 ed             	movslq %ebp,%rbp
    9524:	48 8d 15 e5 8d 01 00 	lea    0x18de5(%rip),%rdx        # 22310 <des3_test_cbc_enc>
    952b:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
    9532:	00 
    9533:	48 3b 04 ea          	cmp    (%rdx,%rbp,8),%rax
    9537:	75 63                	jne    959c <mbedtls_des_self_test+0x5cc>
    9539:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    953d:	85 d2                	test   %edx,%edx
    953f:	75 7b                	jne    95bc <mbedtls_des_self_test+0x5ec>
    9541:	83 44 24 18 01       	addl   $0x1,0x18(%rsp)
    9546:	8b 44 24 18          	mov    0x18(%rsp),%eax
    954a:	83 f8 06             	cmp    $0x6,%eax
    954d:	0f 85 4a fd ff ff    	jne    929d <mbedtls_des_self_test+0x2cd>
    9553:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9557:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    955c:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    9561:	85 c0                	test   %eax,%eax
    9563:	75 4b                	jne    95b0 <mbedtls_des_self_test+0x5e0>
    9565:	4c 89 ef             	mov    %r13,%rdi
    9568:	be 80 00 00 00       	mov    $0x80,%esi
    956d:	e8 ae bc ff ff       	callq  5220 <mbedtls_platform_zeroize>
    9572:	be 80 01 00 00       	mov    $0x180,%esi
    9577:	4c 89 f7             	mov    %r14,%rdi
    957a:	e8 a1 bc ff ff       	callq  5220 <mbedtls_platform_zeroize>
    957f:	e9 b7 fb ff ff       	jmpq   913b <mbedtls_des_self_test+0x16b>
    9584:	48 63 ed             	movslq %ebp,%rbp
    9587:	48 8d 05 a2 8d 01 00 	lea    0x18da2(%rip),%rax        # 22330 <des3_test_cbc_dec>
    958e:	48 8b 04 e8          	mov    (%rax,%rbp,8),%rax
    9592:	48 39 84 24 a8 03 00 	cmp    %rax,0x3a8(%rsp)
    9599:	00 
    959a:	74 9d                	je     9539 <mbedtls_des_self_test+0x569>
    959c:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    95a1:	e9 9a fd ff ff       	jmpq   9340 <mbedtls_des_self_test+0x370>
    95a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    95ad:	00 00 00 
    95b0:	bf 0a 00 00 00       	mov    $0xa,%edi
    95b5:	e8 36 9c ff ff       	callq  31f0 <putchar@plt>
    95ba:	eb a9                	jmp    9565 <mbedtls_des_self_test+0x595>
    95bc:	48 8d 3d 1f 9c 01 00 	lea    0x19c1f(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    95c3:	e8 38 9c ff ff       	callq  3200 <puts@plt>
    95c8:	e9 74 ff ff ff       	jmpq   9541 <mbedtls_des_self_test+0x571>
    95cd:	e8 8e 9c ff ff       	callq  3260 <__stack_chk_fail@plt>
    95d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    95d9:	00 00 00 
    95dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000095e0 <mbedtls_md_info_from_type>:
    95e0:	f3 0f 1e fa          	endbr64 
    95e4:	83 ff 07             	cmp    $0x7,%edi
    95e7:	77 7f                	ja     9668 <mbedtls_md_info_from_type+0x88>
    95e9:	48 8d 15 50 97 01 00 	lea    0x19750(%rip),%rdx        # 22d40 <SB1+0x100>
    95f0:	89 ff                	mov    %edi,%edi
    95f2:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
    95f6:	48 01 d0             	add    %rdx,%rax
    95f9:	3e ff e0             	notrack jmpq *%rax
    95fc:	0f 1f 40 00          	nopl   0x0(%rax)
    9600:	48 8d 05 c9 66 02 00 	lea    0x266c9(%rip),%rax        # 2fcd0 <mbedtls_ripemd160_info>
    9607:	c3                   	retq   
    9608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    960f:	00 
    9610:	48 8d 05 c9 66 02 00 	lea    0x266c9(%rip),%rax        # 2fce0 <mbedtls_md5_info>
    9617:	c3                   	retq   
    9618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    961f:	00 
    9620:	48 8d 05 99 66 02 00 	lea    0x26699(%rip),%rax        # 2fcc0 <mbedtls_sha1_info>
    9627:	c3                   	retq   
    9628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    962f:	00 
    9630:	48 8d 05 79 66 02 00 	lea    0x26679(%rip),%rax        # 2fcb0 <mbedtls_sha224_info>
    9637:	c3                   	retq   
    9638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    963f:	00 
    9640:	48 8d 05 49 66 02 00 	lea    0x26649(%rip),%rax        # 2fc90 <mbedtls_sha384_info>
    9647:	c3                   	retq   
    9648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    964f:	00 
    9650:	48 8d 05 29 66 02 00 	lea    0x26629(%rip),%rax        # 2fc80 <mbedtls_sha512_info>
    9657:	c3                   	retq   
    9658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    965f:	00 
    9660:	48 8d 05 39 66 02 00 	lea    0x26639(%rip),%rax        # 2fca0 <mbedtls_sha256_info>
    9667:	c3                   	retq   
    9668:	31 c0                	xor    %eax,%eax
    966a:	c3                   	retq   
    966b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009670 <mbedtls_md_init>:
    9670:	f3 0f 1e fa          	endbr64 
    9674:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9678:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    967f:	00 
    9680:	0f 11 07             	movups %xmm0,(%rdi)
    9683:	c3                   	retq   
    9684:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    968b:	00 00 00 00 
    968f:	90                   	nop

0000000000009690 <mbedtls_md_free>:
    9690:	f3 0f 1e fa          	endbr64 
    9694:	48 85 ff             	test   %rdi,%rdi
    9697:	0f 84 c3 00 00 00    	je     9760 <mbedtls_md_free+0xd0>
    969d:	55                   	push   %rbp
    969e:	48 8b 07             	mov    (%rdi),%rax
    96a1:	48 89 fd             	mov    %rdi,%rbp
    96a4:	48 85 c0             	test   %rax,%rax
    96a7:	74 67                	je     9710 <mbedtls_md_free+0x80>
    96a9:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    96ad:	48 85 ff             	test   %rdi,%rdi
    96b0:	74 2c                	je     96de <mbedtls_md_free+0x4e>
    96b2:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    96b6:	77 21                	ja     96d9 <mbedtls_md_free+0x49>
    96b8:	8b 40 08             	mov    0x8(%rax),%eax
    96bb:	48 8d 15 9e 96 01 00 	lea    0x1969e(%rip),%rdx        # 22d60 <SB1+0x120>
    96c2:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    96c6:	48 01 d0             	add    %rdx,%rax
    96c9:	3e ff e0             	notrack jmpq *%rax
    96cc:	0f 1f 40 00          	nopl   0x0(%rax)
    96d0:	e8 1b 0e 00 00       	callq  a4f0 <mbedtls_md5_free>
    96d5:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    96d9:	e8 02 9b ff ff       	callq  31e0 <free@plt>
    96de:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    96e2:	48 85 ff             	test   %rdi,%rdi
    96e5:	74 1b                	je     9702 <mbedtls_md_free+0x72>
    96e7:	48 8b 45 00          	mov    0x0(%rbp),%rax
    96eb:	0f b6 70 0d          	movzbl 0xd(%rax),%esi
    96ef:	01 f6                	add    %esi,%esi
    96f1:	48 63 f6             	movslq %esi,%rsi
    96f4:	e8 27 bb ff ff       	callq  5220 <mbedtls_platform_zeroize>
    96f9:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    96fd:	e8 de 9a ff ff       	callq  31e0 <free@plt>
    9702:	48 89 ef             	mov    %rbp,%rdi
    9705:	be 18 00 00 00       	mov    $0x18,%esi
    970a:	5d                   	pop    %rbp
    970b:	e9 10 bb ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
    9710:	5d                   	pop    %rbp
    9711:	c3                   	retq   
    9712:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9718:	e8 d3 74 00 00       	callq  10bf0 <mbedtls_sha512_free>
    971d:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9721:	e8 ba 9a ff ff       	callq  31e0 <free@plt>
    9726:	eb b6                	jmp    96de <mbedtls_md_free+0x4e>
    9728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    972f:	00 
    9730:	e8 db 5f 00 00       	callq  f710 <mbedtls_sha256_free>
    9735:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9739:	e8 a2 9a ff ff       	callq  31e0 <free@plt>
    973e:	eb 9e                	jmp    96de <mbedtls_md_free+0x4e>
    9740:	e8 9b 29 00 00       	callq  c0e0 <mbedtls_ripemd160_free>
    9745:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9749:	eb 8e                	jmp    96d9 <mbedtls_md_free+0x49>
    974b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9750:	e8 1b 46 00 00       	callq  dd70 <mbedtls_sha1_free>
    9755:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9759:	e9 7b ff ff ff       	jmpq   96d9 <mbedtls_md_free+0x49>
    975e:	66 90                	xchg   %ax,%ax
    9760:	c3                   	retq   
    9761:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9768:	00 00 00 00 
    976c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009770 <mbedtls_md_clone>:
    9770:	f3 0f 1e fa          	endbr64 
    9774:	48 85 ff             	test   %rdi,%rdi
    9777:	0f 84 cb 00 00 00    	je     9848 <mbedtls_md_clone+0xd8>
    977d:	48 8b 17             	mov    (%rdi),%rdx
    9780:	48 85 d2             	test   %rdx,%rdx
    9783:	0f 84 bf 00 00 00    	je     9848 <mbedtls_md_clone+0xd8>
    9789:	48 85 f6             	test   %rsi,%rsi
    978c:	0f 84 b6 00 00 00    	je     9848 <mbedtls_md_clone+0xd8>
    9792:	48 8b 06             	mov    (%rsi),%rax
    9795:	48 39 c2             	cmp    %rax,%rdx
    9798:	0f 85 aa 00 00 00    	jne    9848 <mbedtls_md_clone+0xd8>
    979e:	48 85 c0             	test   %rax,%rax
    97a1:	0f 84 a1 00 00 00    	je     9848 <mbedtls_md_clone+0xd8>
    97a7:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    97ab:	0f 87 97 00 00 00    	ja     9848 <mbedtls_md_clone+0xd8>
    97b1:	48 83 ec 08          	sub    $0x8,%rsp
    97b5:	8b 40 08             	mov    0x8(%rax),%eax
    97b8:	48 8d 15 c1 95 01 00 	lea    0x195c1(%rip),%rdx        # 22d80 <SB1+0x140>
    97bf:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    97c3:	48 01 d0             	add    %rdx,%rax
    97c6:	3e ff e0             	notrack jmpq *%rax
    97c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    97d0:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    97d4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    97d8:	e8 33 74 00 00       	callq  10c10 <mbedtls_sha512_clone>
    97dd:	31 c0                	xor    %eax,%eax
    97df:	48 83 c4 08          	add    $0x8,%rsp
    97e3:	c3                   	retq   
    97e4:	0f 1f 40 00          	nopl   0x0(%rax)
    97e8:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    97ec:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    97f0:	e8 3b 5f 00 00       	callq  f730 <mbedtls_sha256_clone>
    97f5:	31 c0                	xor    %eax,%eax
    97f7:	48 83 c4 08          	add    $0x8,%rsp
    97fb:	c3                   	retq   
    97fc:	0f 1f 40 00          	nopl   0x0(%rax)
    9800:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    9804:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9808:	e8 83 45 00 00       	callq  dd90 <mbedtls_sha1_clone>
    980d:	31 c0                	xor    %eax,%eax
    980f:	48 83 c4 08          	add    $0x8,%rsp
    9813:	c3                   	retq   
    9814:	0f 1f 40 00          	nopl   0x0(%rax)
    9818:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    981c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9820:	e8 db 28 00 00       	callq  c100 <mbedtls_ripemd160_clone>
    9825:	31 c0                	xor    %eax,%eax
    9827:	48 83 c4 08          	add    $0x8,%rsp
    982b:	c3                   	retq   
    982c:	0f 1f 40 00          	nopl   0x0(%rax)
    9830:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    9834:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9838:	e8 d3 0c 00 00       	callq  a510 <mbedtls_md5_clone>
    983d:	31 c0                	xor    %eax,%eax
    983f:	48 83 c4 08          	add    $0x8,%rsp
    9843:	c3                   	retq   
    9844:	0f 1f 40 00          	nopl   0x0(%rax)
    9848:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    984d:	c3                   	retq   
    984e:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9853:	eb 8a                	jmp    97df <mbedtls_md_clone+0x6f>
    9855:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    985c:	00 00 00 00 

0000000000009860 <mbedtls_md_setup>:
    9860:	f3 0f 1e fa          	endbr64 
    9864:	48 85 f6             	test   %rsi,%rsi
    9867:	0f 84 4e 01 00 00    	je     99bb <mbedtls_md_setup+0x15b>
    986d:	41 54                	push   %r12
    986f:	55                   	push   %rbp
    9870:	48 89 fd             	mov    %rdi,%rbp
    9873:	53                   	push   %rbx
    9874:	48 85 ff             	test   %rdi,%rdi
    9877:	0f 84 34 01 00 00    	je     99b1 <mbedtls_md_setup+0x151>
    987d:	83 7e 08 07          	cmpl   $0x7,0x8(%rsi)
    9881:	48 89 37             	mov    %rsi,(%rdi)
    9884:	48 89 f3             	mov    %rsi,%rbx
    9887:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    988e:	00 
    988f:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    9896:	00 
    9897:	0f 87 14 01 00 00    	ja     99b1 <mbedtls_md_setup+0x151>
    989d:	8b 46 08             	mov    0x8(%rsi),%eax
    98a0:	41 89 d4             	mov    %edx,%r12d
    98a3:	48 8d 15 f6 94 01 00 	lea    0x194f6(%rip),%rdx        # 22da0 <SB1+0x160>
    98aa:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    98ae:	48 01 d0             	add    %rdx,%rax
    98b1:	3e ff e0             	notrack jmpq *%rax
    98b4:	0f 1f 40 00          	nopl   0x0(%rax)
    98b8:	bf 01 00 00 00       	mov    $0x1,%edi
    98bd:	be d8 00 00 00       	mov    $0xd8,%esi
    98c2:	e8 f9 99 ff ff       	callq  32c0 <calloc@plt>
    98c7:	48 89 45 08          	mov    %rax,0x8(%rbp)
    98cb:	48 89 c7             	mov    %rax,%rdi
    98ce:	48 85 c0             	test   %rax,%rax
    98d1:	74 34                	je     9907 <mbedtls_md_setup+0xa7>
    98d3:	e8 d8 72 00 00       	callq  10bb0 <mbedtls_sha512_init>
    98d8:	45 85 e4             	test   %r12d,%r12d
    98db:	75 0b                	jne    98e8 <mbedtls_md_setup+0x88>
    98dd:	31 c0                	xor    %eax,%eax
    98df:	5b                   	pop    %rbx
    98e0:	5d                   	pop    %rbp
    98e1:	41 5c                	pop    %r12
    98e3:	c3                   	retq   
    98e4:	0f 1f 40 00          	nopl   0x0(%rax)
    98e8:	0f b6 73 0d          	movzbl 0xd(%rbx),%esi
    98ec:	bf 02 00 00 00       	mov    $0x2,%edi
    98f1:	e8 ca 99 ff ff       	callq  32c0 <calloc@plt>
    98f6:	48 89 45 10          	mov    %rax,0x10(%rbp)
    98fa:	48 85 c0             	test   %rax,%rax
    98fd:	75 de                	jne    98dd <mbedtls_md_setup+0x7d>
    98ff:	48 89 ef             	mov    %rbp,%rdi
    9902:	e8 89 fd ff ff       	callq  9690 <mbedtls_md_free>
    9907:	b8 80 ae ff ff       	mov    $0xffffae80,%eax
    990c:	eb d1                	jmp    98df <mbedtls_md_setup+0x7f>
    990e:	66 90                	xchg   %ax,%ax
    9910:	bf 01 00 00 00       	mov    $0x1,%edi
    9915:	be 6c 00 00 00       	mov    $0x6c,%esi
    991a:	e8 a1 99 ff ff       	callq  32c0 <calloc@plt>
    991f:	48 89 45 08          	mov    %rax,0x8(%rbp)
    9923:	48 89 c7             	mov    %rax,%rdi
    9926:	48 85 c0             	test   %rax,%rax
    9929:	74 dc                	je     9907 <mbedtls_md_setup+0xa7>
    992b:	e8 b0 5d 00 00       	callq  f6e0 <mbedtls_sha256_init>
    9930:	eb a6                	jmp    98d8 <mbedtls_md_setup+0x78>
    9932:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9938:	bf 01 00 00 00       	mov    $0x1,%edi
    993d:	be 5c 00 00 00       	mov    $0x5c,%esi
    9942:	e8 79 99 ff ff       	callq  32c0 <calloc@plt>
    9947:	48 89 45 08          	mov    %rax,0x8(%rbp)
    994b:	48 89 c7             	mov    %rax,%rdi
    994e:	48 85 c0             	test   %rax,%rax
    9951:	74 b4                	je     9907 <mbedtls_md_setup+0xa7>
    9953:	e8 58 27 00 00       	callq  c0b0 <mbedtls_ripemd160_init>
    9958:	e9 7b ff ff ff       	jmpq   98d8 <mbedtls_md_setup+0x78>
    995d:	0f 1f 00             	nopl   (%rax)
    9960:	bf 01 00 00 00       	mov    $0x1,%edi
    9965:	be 58 00 00 00       	mov    $0x58,%esi
    996a:	e8 51 99 ff ff       	callq  32c0 <calloc@plt>
    996f:	48 89 45 08          	mov    %rax,0x8(%rbp)
    9973:	48 89 c7             	mov    %rax,%rdi
    9976:	48 85 c0             	test   %rax,%rax
    9979:	74 8c                	je     9907 <mbedtls_md_setup+0xa7>
    997b:	e8 40 0b 00 00       	callq  a4c0 <mbedtls_md5_init>
    9980:	e9 53 ff ff ff       	jmpq   98d8 <mbedtls_md_setup+0x78>
    9985:	0f 1f 00             	nopl   (%rax)
    9988:	bf 01 00 00 00       	mov    $0x1,%edi
    998d:	be 5c 00 00 00       	mov    $0x5c,%esi
    9992:	e8 29 99 ff ff       	callq  32c0 <calloc@plt>
    9997:	48 89 45 08          	mov    %rax,0x8(%rbp)
    999b:	48 89 c7             	mov    %rax,%rdi
    999e:	48 85 c0             	test   %rax,%rax
    99a1:	0f 84 60 ff ff ff    	je     9907 <mbedtls_md_setup+0xa7>
    99a7:	e8 94 43 00 00       	callq  dd40 <mbedtls_sha1_init>
    99ac:	e9 27 ff ff ff       	jmpq   98d8 <mbedtls_md_setup+0x78>
    99b1:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    99b6:	e9 24 ff ff ff       	jmpq   98df <mbedtls_md_setup+0x7f>
    99bb:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    99c0:	c3                   	retq   
    99c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    99c8:	00 00 00 00 
    99cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000099d0 <mbedtls_md_starts>:
    99d0:	f3 0f 1e fa          	endbr64 
    99d4:	48 85 ff             	test   %rdi,%rdi
    99d7:	0f 84 9e 00 00 00    	je     9a7b <mbedtls_md_starts+0xab>
    99dd:	48 8b 07             	mov    (%rdi),%rax
    99e0:	48 85 c0             	test   %rax,%rax
    99e3:	0f 84 92 00 00 00    	je     9a7b <mbedtls_md_starts+0xab>
    99e9:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    99ed:	0f 87 88 00 00 00    	ja     9a7b <mbedtls_md_starts+0xab>
    99f3:	8b 40 08             	mov    0x8(%rax),%eax
    99f6:	48 8d 15 c3 93 01 00 	lea    0x193c3(%rip),%rdx        # 22dc0 <SB1+0x180>
    99fd:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    9a01:	48 01 d0             	add    %rdx,%rax
    9a04:	3e ff e0             	notrack jmpq *%rax
    9a07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9a0e:	00 00 
    9a10:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a14:	e9 27 27 00 00       	jmpq   c140 <mbedtls_ripemd160_starts>
    9a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a20:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a24:	e9 27 0b 00 00       	jmpq   a550 <mbedtls_md5_starts>
    9a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a30:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a34:	e9 97 43 00 00       	jmpq   ddd0 <mbedtls_sha1_starts>
    9a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a40:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a44:	be 01 00 00 00       	mov    $0x1,%esi
    9a49:	e9 32 5d 00 00       	jmpq   f780 <mbedtls_sha256_starts>
    9a4e:	66 90                	xchg   %ax,%ax
    9a50:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a54:	31 f6                	xor    %esi,%esi
    9a56:	e9 25 5d 00 00       	jmpq   f780 <mbedtls_sha256_starts>
    9a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9a60:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a64:	be 01 00 00 00       	mov    $0x1,%esi
    9a69:	e9 52 72 00 00       	jmpq   10cc0 <mbedtls_sha512_starts>
    9a6e:	66 90                	xchg   %ax,%ax
    9a70:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9a74:	31 f6                	xor    %esi,%esi
    9a76:	e9 45 72 00 00       	jmpq   10cc0 <mbedtls_sha512_starts>
    9a7b:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9a80:	c3                   	retq   
    9a81:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9a88:	00 00 00 00 
    9a8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009a90 <mbedtls_md_update>:
    9a90:	f3 0f 1e fa          	endbr64 
    9a94:	48 85 ff             	test   %rdi,%rdi
    9a97:	74 70                	je     9b09 <mbedtls_md_update+0x79>
    9a99:	48 8b 07             	mov    (%rdi),%rax
    9a9c:	48 85 c0             	test   %rax,%rax
    9a9f:	74 68                	je     9b09 <mbedtls_md_update+0x79>
    9aa1:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    9aa5:	77 62                	ja     9b09 <mbedtls_md_update+0x79>
    9aa7:	8b 40 08             	mov    0x8(%rax),%eax
    9aaa:	48 8d 0d 2f 93 01 00 	lea    0x1932f(%rip),%rcx        # 22de0 <SB1+0x1a0>
    9ab1:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    9ab5:	48 01 c8             	add    %rcx,%rax
    9ab8:	3e ff e0             	notrack jmpq *%rax
    9abb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9ac0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9ac4:	e9 e7 7a 00 00       	jmpq   115b0 <mbedtls_sha512_update>
    9ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ad0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9ad4:	e9 87 6a 00 00       	jmpq   10560 <mbedtls_sha256_update>
    9ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ae0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9ae4:	e9 87 57 00 00       	jmpq   f270 <mbedtls_sha1_update>
    9ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9af0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9af4:	e9 27 3f 00 00       	jmpq   da20 <mbedtls_ripemd160_update>
    9af9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b00:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b04:	e9 67 14 00 00       	jmpq   af70 <mbedtls_md5_update>
    9b09:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9b0e:	c3                   	retq   
    9b0f:	90                   	nop

0000000000009b10 <mbedtls_md_finish>:
    9b10:	f3 0f 1e fa          	endbr64 
    9b14:	48 85 ff             	test   %rdi,%rdi
    9b17:	74 70                	je     9b89 <mbedtls_md_finish+0x79>
    9b19:	48 8b 07             	mov    (%rdi),%rax
    9b1c:	48 85 c0             	test   %rax,%rax
    9b1f:	74 68                	je     9b89 <mbedtls_md_finish+0x79>
    9b21:	83 78 08 07          	cmpl   $0x7,0x8(%rax)
    9b25:	77 62                	ja     9b89 <mbedtls_md_finish+0x79>
    9b27:	8b 40 08             	mov    0x8(%rax),%eax
    9b2a:	48 8d 15 cf 92 01 00 	lea    0x192cf(%rip),%rdx        # 22e00 <SB1+0x1c0>
    9b31:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    9b35:	48 01 d0             	add    %rdx,%rax
    9b38:	3e ff e0             	notrack jmpq *%rax
    9b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9b40:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b44:	e9 87 7a 00 00       	jmpq   115d0 <mbedtls_sha512_finish>
    9b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b50:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b54:	e9 27 6a 00 00       	jmpq   10580 <mbedtls_sha256_finish>
    9b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b60:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b64:	e9 27 57 00 00       	jmpq   f290 <mbedtls_sha1_finish>
    9b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b70:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b74:	e9 c7 3e 00 00       	jmpq   da40 <mbedtls_ripemd160_finish>
    9b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b80:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9b84:	e9 07 14 00 00       	jmpq   af90 <mbedtls_md5_finish>
    9b89:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9b8e:	c3                   	retq   
    9b8f:	90                   	nop

0000000000009b90 <mbedtls_md>:
    9b90:	f3 0f 1e fa          	endbr64 
    9b94:	49 89 f0             	mov    %rsi,%r8
    9b97:	48 89 d6             	mov    %rdx,%rsi
    9b9a:	48 89 ca             	mov    %rcx,%rdx
    9b9d:	48 85 ff             	test   %rdi,%rdi
    9ba0:	0f 84 84 00 00 00    	je     9c2a <mbedtls_md+0x9a>
    9ba6:	83 7f 08 07          	cmpl   $0x7,0x8(%rdi)
    9baa:	77 7e                	ja     9c2a <mbedtls_md+0x9a>
    9bac:	8b 47 08             	mov    0x8(%rdi),%eax
    9baf:	48 8d 0d 6a 92 01 00 	lea    0x1926a(%rip),%rcx        # 22e20 <SB1+0x1e0>
    9bb6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    9bba:	48 01 c8             	add    %rcx,%rax
    9bbd:	3e ff e0             	notrack jmpq *%rax
    9bc0:	4c 89 c7             	mov    %r8,%rdi
    9bc3:	e9 48 3f 00 00       	jmpq   db10 <mbedtls_ripemd160>
    9bc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9bcf:	00 
    9bd0:	4c 89 c7             	mov    %r8,%rdi
    9bd3:	e9 08 15 00 00       	jmpq   b0e0 <mbedtls_md5>
    9bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9bdf:	00 
    9be0:	4c 89 c7             	mov    %r8,%rdi
    9be3:	e9 08 58 00 00       	jmpq   f3f0 <mbedtls_sha1>
    9be8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9bef:	00 
    9bf0:	b9 01 00 00 00       	mov    $0x1,%ecx
    9bf5:	4c 89 c7             	mov    %r8,%rdi
    9bf8:	e9 43 6e 00 00       	jmpq   10a40 <mbedtls_sha256>
    9bfd:	0f 1f 00             	nopl   (%rax)
    9c00:	31 c9                	xor    %ecx,%ecx
    9c02:	4c 89 c7             	mov    %r8,%rdi
    9c05:	e9 36 6e 00 00       	jmpq   10a40 <mbedtls_sha256>
    9c0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9c10:	b9 01 00 00 00       	mov    $0x1,%ecx
    9c15:	4c 89 c7             	mov    %r8,%rdi
    9c18:	e9 83 7f 00 00       	jmpq   11ba0 <mbedtls_sha512>
    9c1d:	0f 1f 00             	nopl   (%rax)
    9c20:	31 c9                	xor    %ecx,%ecx
    9c22:	4c 89 c7             	mov    %r8,%rdi
    9c25:	e9 76 7f 00 00       	jmpq   11ba0 <mbedtls_sha512>
    9c2a:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    9c2f:	c3                   	retq   

0000000000009c30 <mbedtls_md_get_size>:
    9c30:	f3 0f 1e fa          	endbr64 
    9c34:	48 85 ff             	test   %rdi,%rdi
    9c37:	74 07                	je     9c40 <mbedtls_md_get_size+0x10>
    9c39:	0f b6 47 0c          	movzbl 0xc(%rdi),%eax
    9c3d:	c3                   	retq   
    9c3e:	66 90                	xchg   %ax,%ax
    9c40:	31 c0                	xor    %eax,%eax
    9c42:	c3                   	retq   
    9c43:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9c4a:	00 00 00 00 
    9c4e:	66 90                	xchg   %ax,%ax

0000000000009c50 <mbedtls_md_get_type>:
    9c50:	f3 0f 1e fa          	endbr64 
    9c54:	48 85 ff             	test   %rdi,%rdi
    9c57:	74 07                	je     9c60 <mbedtls_md_get_type+0x10>
    9c59:	8b 47 08             	mov    0x8(%rdi),%eax
    9c5c:	c3                   	retq   
    9c5d:	0f 1f 00             	nopl   (%rax)
    9c60:	31 c0                	xor    %eax,%eax
    9c62:	c3                   	retq   
    9c63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9c6a:	00 00 00 00 
    9c6e:	66 90                	xchg   %ax,%ax

0000000000009c70 <mbedtls_md_list>:
    9c70:	f3 0f 1e fa          	endbr64 
    9c74:	48 8d 05 c5 91 01 00 	lea    0x191c5(%rip),%rax        # 22e40 <supported_digests>
    9c7b:	c3                   	retq   
    9c7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009c80 <mbedtls_md_info_from_string>:
    9c80:	f3 0f 1e fa          	endbr64 
    9c84:	48 89 f8             	mov    %rdi,%rax
    9c87:	48 85 ff             	test   %rdi,%rdi
    9c8a:	0f 84 20 01 00 00    	je     9db0 <mbedtls_md_info_from_string+0x130>
    9c90:	b9 04 00 00 00       	mov    $0x4,%ecx
    9c95:	48 8d 35 c4 91 01 00 	lea    0x191c4(%rip),%rsi        # 22e60 <supported_digests+0x20>
    9c9c:	4c 8d 05 3d 60 02 00 	lea    0x2603d(%rip),%r8        # 2fce0 <mbedtls_md5_info>
    9ca3:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9ca5:	0f 97 c2             	seta   %dl
    9ca8:	80 da 00             	sbb    $0x0,%dl
    9cab:	84 d2                	test   %dl,%dl
    9cad:	0f 84 f9 00 00 00    	je     9dac <mbedtls_md_info_from_string+0x12c>
    9cb3:	b9 0a 00 00 00       	mov    $0xa,%ecx
    9cb8:	48 8d 35 a5 91 01 00 	lea    0x191a5(%rip),%rsi        # 22e64 <supported_digests+0x24>
    9cbf:	48 89 c7             	mov    %rax,%rdi
    9cc2:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9cc4:	4c 8d 05 05 60 02 00 	lea    0x26005(%rip),%r8        # 2fcd0 <mbedtls_ripemd160_info>
    9ccb:	0f 97 c2             	seta   %dl
    9cce:	80 da 00             	sbb    $0x0,%dl
    9cd1:	84 d2                	test   %dl,%dl
    9cd3:	0f 84 d3 00 00 00    	je     9dac <mbedtls_md_info_from_string+0x12c>
    9cd9:	b9 05 00 00 00       	mov    $0x5,%ecx
    9cde:	48 8d 35 89 91 01 00 	lea    0x19189(%rip),%rsi        # 22e6e <supported_digests+0x2e>
    9ce5:	48 89 c7             	mov    %rax,%rdi
    9ce8:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9cea:	4c 8d 05 cf 5f 02 00 	lea    0x25fcf(%rip),%r8        # 2fcc0 <mbedtls_sha1_info>
    9cf1:	0f 97 c2             	seta   %dl
    9cf4:	80 da 00             	sbb    $0x0,%dl
    9cf7:	84 d2                	test   %dl,%dl
    9cf9:	0f 84 ad 00 00 00    	je     9dac <mbedtls_md_info_from_string+0x12c>
    9cff:	b9 04 00 00 00       	mov    $0x4,%ecx
    9d04:	48 8d 35 68 91 01 00 	lea    0x19168(%rip),%rsi        # 22e73 <supported_digests+0x33>
    9d0b:	48 89 c7             	mov    %rax,%rdi
    9d0e:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d10:	0f 97 c2             	seta   %dl
    9d13:	80 da 00             	sbb    $0x0,%dl
    9d16:	84 d2                	test   %dl,%dl
    9d18:	0f 84 8e 00 00 00    	je     9dac <mbedtls_md_info_from_string+0x12c>
    9d1e:	b9 07 00 00 00       	mov    $0x7,%ecx
    9d23:	48 8d 35 4d 91 01 00 	lea    0x1914d(%rip),%rsi        # 22e77 <supported_digests+0x37>
    9d2a:	48 89 c7             	mov    %rax,%rdi
    9d2d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d2f:	4c 8d 05 7a 5f 02 00 	lea    0x25f7a(%rip),%r8        # 2fcb0 <mbedtls_sha224_info>
    9d36:	0f 97 c2             	seta   %dl
    9d39:	80 da 00             	sbb    $0x0,%dl
    9d3c:	84 d2                	test   %dl,%dl
    9d3e:	74 6c                	je     9dac <mbedtls_md_info_from_string+0x12c>
    9d40:	b9 07 00 00 00       	mov    $0x7,%ecx
    9d45:	48 8d 35 32 91 01 00 	lea    0x19132(%rip),%rsi        # 22e7e <supported_digests+0x3e>
    9d4c:	48 89 c7             	mov    %rax,%rdi
    9d4f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d51:	4c 8d 05 48 5f 02 00 	lea    0x25f48(%rip),%r8        # 2fca0 <mbedtls_sha256_info>
    9d58:	0f 97 c2             	seta   %dl
    9d5b:	80 da 00             	sbb    $0x0,%dl
    9d5e:	84 d2                	test   %dl,%dl
    9d60:	74 4a                	je     9dac <mbedtls_md_info_from_string+0x12c>
    9d62:	b9 07 00 00 00       	mov    $0x7,%ecx
    9d67:	48 8d 35 17 91 01 00 	lea    0x19117(%rip),%rsi        # 22e85 <supported_digests+0x45>
    9d6e:	48 89 c7             	mov    %rax,%rdi
    9d71:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d73:	4c 8d 05 16 5f 02 00 	lea    0x25f16(%rip),%r8        # 2fc90 <mbedtls_sha384_info>
    9d7a:	0f 97 c2             	seta   %dl
    9d7d:	80 da 00             	sbb    $0x0,%dl
    9d80:	84 d2                	test   %dl,%dl
    9d82:	74 28                	je     9dac <mbedtls_md_info_from_string+0x12c>
    9d84:	48 89 c7             	mov    %rax,%rdi
    9d87:	b9 07 00 00 00       	mov    $0x7,%ecx
    9d8c:	48 8d 35 f9 90 01 00 	lea    0x190f9(%rip),%rsi        # 22e8c <supported_digests+0x4c>
    9d93:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    9d95:	4c 8d 05 e4 5e 02 00 	lea    0x25ee4(%rip),%r8        # 2fc80 <mbedtls_sha512_info>
    9d9c:	0f 97 c0             	seta   %al
    9d9f:	1c 00                	sbb    $0x0,%al
    9da1:	84 c0                	test   %al,%al
    9da3:	b8 00 00 00 00       	mov    $0x0,%eax
    9da8:	4c 0f 45 c0          	cmovne %rax,%r8
    9dac:	4c 89 c0             	mov    %r8,%rax
    9daf:	c3                   	retq   
    9db0:	45 31 c0             	xor    %r8d,%r8d
    9db3:	eb f7                	jmp    9dac <mbedtls_md_info_from_string+0x12c>
    9db5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9dbc:	00 00 00 00 

0000000000009dc0 <mbedtls_md_info_from_ctx>:
    9dc0:	f3 0f 1e fa          	endbr64 
    9dc4:	48 85 ff             	test   %rdi,%rdi
    9dc7:	74 07                	je     9dd0 <mbedtls_md_info_from_ctx+0x10>
    9dc9:	48 8b 07             	mov    (%rdi),%rax
    9dcc:	c3                   	retq   
    9dcd:	0f 1f 00             	nopl   (%rax)
    9dd0:	31 c0                	xor    %eax,%eax
    9dd2:	c3                   	retq   
    9dd3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    9dda:	00 00 00 00 
    9dde:	66 90                	xchg   %ax,%ax

0000000000009de0 <mbedtls_md_file>:
    9de0:	f3 0f 1e fa          	endbr64 
    9de4:	41 57                	push   %r15
    9de6:	41 56                	push   %r14
    9de8:	41 55                	push   %r13
    9dea:	41 54                	push   %r12
    9dec:	49 89 fc             	mov    %rdi,%r12
    9def:	55                   	push   %rbp
    9df0:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
    9df7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9dfe:	00 00 
    9e00:	48 89 84 24 28 04 00 	mov    %rax,0x428(%rsp)
    9e07:	00 
    9e08:	31 c0                	xor    %eax,%eax
    9e0a:	48 85 ff             	test   %rdi,%rdi
    9e0d:	0f 84 0d 01 00 00    	je     9f20 <mbedtls_md_file+0x140>
    9e13:	48 89 f7             	mov    %rsi,%rdi
    9e16:	48 8d 35 76 90 01 00 	lea    0x19076(%rip),%rsi        # 22e93 <supported_digests+0x53>
    9e1d:	49 89 d6             	mov    %rdx,%r14
    9e20:	e8 cb 94 ff ff       	callq  32f0 <fopen64@plt>
    9e25:	48 89 c5             	mov    %rax,%rbp
    9e28:	48 85 c0             	test   %rax,%rax
    9e2b:	0f 84 fa 00 00 00    	je     9f2b <mbedtls_md_file+0x14b>
    9e31:	48 89 c7             	mov    %rax,%rdi
    9e34:	31 f6                	xor    %esi,%esi
    9e36:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
    9e3b:	49 89 e5             	mov    %rsp,%r13
    9e3e:	e8 2d 94 ff ff       	callq  3270 <setbuf@plt>
    9e43:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9e47:	4c 89 e6             	mov    %r12,%rsi
    9e4a:	31 d2                	xor    %edx,%edx
    9e4c:	4c 89 ef             	mov    %r13,%rdi
    9e4f:	0f 29 04 24          	movaps %xmm0,(%rsp)
    9e53:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    9e5a:	00 00 
    9e5c:	e8 ff f9 ff ff       	callq  9860 <mbedtls_md_setup>
    9e61:	41 89 c4             	mov    %eax,%r12d
    9e64:	85 c0                	test   %eax,%eax
    9e66:	74 48                	je     9eb0 <mbedtls_md_file+0xd0>
    9e68:	be 00 04 00 00       	mov    $0x400,%esi
    9e6d:	4c 89 ff             	mov    %r15,%rdi
    9e70:	e8 ab b3 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    9e75:	48 89 ef             	mov    %rbp,%rdi
    9e78:	e8 c3 93 ff ff       	callq  3240 <fclose@plt>
    9e7d:	4c 89 ef             	mov    %r13,%rdi
    9e80:	e8 0b f8 ff ff       	callq  9690 <mbedtls_md_free>
    9e85:	48 8b 84 24 28 04 00 	mov    0x428(%rsp),%rax
    9e8c:	00 
    9e8d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9e94:	00 00 
    9e96:	0f 85 9a 00 00 00    	jne    9f36 <mbedtls_md_file+0x156>
    9e9c:	48 81 c4 30 04 00 00 	add    $0x430,%rsp
    9ea3:	44 89 e0             	mov    %r12d,%eax
    9ea6:	5d                   	pop    %rbp
    9ea7:	41 5c                	pop    %r12
    9ea9:	41 5d                	pop    %r13
    9eab:	41 5e                	pop    %r14
    9ead:	41 5f                	pop    %r15
    9eaf:	c3                   	retq   
    9eb0:	4c 89 ef             	mov    %r13,%rdi
    9eb3:	e8 18 fb ff ff       	callq  99d0 <mbedtls_md_starts>
    9eb8:	41 89 c4             	mov    %eax,%r12d
    9ebb:	85 c0                	test   %eax,%eax
    9ebd:	74 1b                	je     9eda <mbedtls_md_file+0xfa>
    9ebf:	eb a7                	jmp    9e68 <mbedtls_md_file+0x88>
    9ec1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ec8:	4c 89 fe             	mov    %r15,%rsi
    9ecb:	4c 89 ef             	mov    %r13,%rdi
    9ece:	e8 bd fb ff ff       	callq  9a90 <mbedtls_md_update>
    9ed3:	41 89 c4             	mov    %eax,%r12d
    9ed6:	85 c0                	test   %eax,%eax
    9ed8:	75 8e                	jne    9e68 <mbedtls_md_file+0x88>
    9eda:	ba 00 04 00 00       	mov    $0x400,%edx
    9edf:	48 89 e9             	mov    %rbp,%rcx
    9ee2:	be 01 00 00 00       	mov    $0x1,%esi
    9ee7:	4c 89 ff             	mov    %r15,%rdi
    9eea:	e8 31 93 ff ff       	callq  3220 <fread@plt>
    9eef:	48 89 c2             	mov    %rax,%rdx
    9ef2:	48 85 c0             	test   %rax,%rax
    9ef5:	75 d1                	jne    9ec8 <mbedtls_md_file+0xe8>
    9ef7:	48 89 ef             	mov    %rbp,%rdi
    9efa:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
    9f00:	e8 0b 93 ff ff       	callq  3210 <ferror@plt>
    9f05:	85 c0                	test   %eax,%eax
    9f07:	0f 85 5b ff ff ff    	jne    9e68 <mbedtls_md_file+0x88>
    9f0d:	4c 89 f6             	mov    %r14,%rsi
    9f10:	4c 89 ef             	mov    %r13,%rdi
    9f13:	e8 f8 fb ff ff       	callq  9b10 <mbedtls_md_finish>
    9f18:	41 89 c4             	mov    %eax,%r12d
    9f1b:	e9 48 ff ff ff       	jmpq   9e68 <mbedtls_md_file+0x88>
    9f20:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    9f26:	e9 5a ff ff ff       	jmpq   9e85 <mbedtls_md_file+0xa5>
    9f2b:	41 bc 00 ae ff ff    	mov    $0xffffae00,%r12d
    9f31:	e9 4f ff ff ff       	jmpq   9e85 <mbedtls_md_file+0xa5>
    9f36:	e8 25 93 ff ff       	callq  3260 <__stack_chk_fail@plt>
    9f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009f40 <mbedtls_md_hmac_starts>:
    9f40:	f3 0f 1e fa          	endbr64 
    9f44:	41 57                	push   %r15
    9f46:	41 56                	push   %r14
    9f48:	41 55                	push   %r13
    9f4a:	41 54                	push   %r12
    9f4c:	55                   	push   %rbp
    9f4d:	53                   	push   %rbx
    9f4e:	48 83 ec 58          	sub    $0x58,%rsp
    9f52:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9f59:	00 00 
    9f5b:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    9f60:	31 c0                	xor    %eax,%eax
    9f62:	48 85 ff             	test   %rdi,%rdi
    9f65:	0f 84 9d 02 00 00    	je     a208 <mbedtls_md_hmac_starts+0x2c8>
    9f6b:	48 89 fd             	mov    %rdi,%rbp
    9f6e:	48 8b 3f             	mov    (%rdi),%rdi
    9f71:	48 85 ff             	test   %rdi,%rdi
    9f74:	0f 84 8e 02 00 00    	je     a208 <mbedtls_md_hmac_starts+0x2c8>
    9f7a:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
    9f7e:	4d 85 ed             	test   %r13,%r13
    9f81:	0f 84 81 02 00 00    	je     a208 <mbedtls_md_hmac_starts+0x2c8>
    9f87:	49 89 d4             	mov    %rdx,%r12
    9f8a:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
    9f8e:	48 89 f3             	mov    %rsi,%rbx
    9f91:	49 89 e7             	mov    %rsp,%r15
    9f94:	4c 39 e2             	cmp    %r12,%rdx
    9f97:	73 5f                	jae    9ff8 <mbedtls_md_hmac_starts+0xb8>
    9f99:	48 89 ef             	mov    %rbp,%rdi
    9f9c:	49 89 e7             	mov    %rsp,%r15
    9f9f:	e8 2c fa ff ff       	callq  99d0 <mbedtls_md_starts>
    9fa4:	41 89 c6             	mov    %eax,%r14d
    9fa7:	85 c0                	test   %eax,%eax
    9fa9:	0f 85 4f 01 00 00    	jne    a0fe <mbedtls_md_hmac_starts+0x1be>
    9faf:	4c 89 e2             	mov    %r12,%rdx
    9fb2:	48 89 de             	mov    %rbx,%rsi
    9fb5:	48 89 ef             	mov    %rbp,%rdi
    9fb8:	e8 d3 fa ff ff       	callq  9a90 <mbedtls_md_update>
    9fbd:	41 89 c6             	mov    %eax,%r14d
    9fc0:	85 c0                	test   %eax,%eax
    9fc2:	0f 85 36 01 00 00    	jne    a0fe <mbedtls_md_hmac_starts+0x1be>
    9fc8:	4c 89 fe             	mov    %r15,%rsi
    9fcb:	48 89 ef             	mov    %rbp,%rdi
    9fce:	e8 3d fb ff ff       	callq  9b10 <mbedtls_md_finish>
    9fd3:	41 89 c6             	mov    %eax,%r14d
    9fd6:	85 c0                	test   %eax,%eax
    9fd8:	0f 85 20 01 00 00    	jne    a0fe <mbedtls_md_hmac_starts+0x1be>
    9fde:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    9fe2:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
    9fe6:	4c 89 fb             	mov    %r15,%rbx
    9fe9:	44 0f b6 67 0c       	movzbl 0xc(%rdi),%r12d
    9fee:	0f b6 57 0d          	movzbl 0xd(%rdi),%edx
    9ff2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9ff8:	49 8d 74 15 00       	lea    0x0(%r13,%rdx,1),%rsi
    9ffd:	89 d1                	mov    %edx,%ecx
    9fff:	48 b8 36 36 36 36 36 	movabs $0x3636363636363636,%rax
    a006:	36 36 36 
    a009:	83 fa 08             	cmp    $0x8,%edx
    a00c:	0f 82 26 01 00 00    	jb     a138 <mbedtls_md_hmac_starts+0x1f8>
    a012:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    a016:	4c 89 e9             	mov    %r13,%rcx
    a019:	49 89 45 00          	mov    %rax,0x0(%r13)
    a01d:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a021:	49 89 44 15 f8       	mov    %rax,-0x8(%r13,%rdx,1)
    a026:	48 29 f9             	sub    %rdi,%rcx
    a029:	01 d1                	add    %edx,%ecx
    a02b:	c1 e9 03             	shr    $0x3,%ecx
    a02e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    a031:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    a035:	48 b8 5c 5c 5c 5c 5c 	movabs $0x5c5c5c5c5c5c5c5c,%rax
    a03c:	5c 5c 5c 
    a03f:	0f b6 4f 0d          	movzbl 0xd(%rdi),%ecx
    a043:	83 f9 08             	cmp    $0x8,%ecx
    a046:	0f 83 24 01 00 00    	jae    a170 <mbedtls_md_hmac_starts+0x230>
    a04c:	f6 c1 04             	test   $0x4,%cl
    a04f:	0f 85 9b 01 00 00    	jne    a1f0 <mbedtls_md_hmac_starts+0x2b0>
    a055:	85 c9                	test   %ecx,%ecx
    a057:	0f 85 3b 01 00 00    	jne    a198 <mbedtls_md_hmac_starts+0x258>
    a05d:	49 83 fc 03          	cmp    $0x3,%r12
    a061:	0f 86 51 01 00 00    	jbe    a1b8 <mbedtls_md_hmac_starts+0x278>
    a067:	ba 04 00 00 00       	mov    $0x4,%edx
    a06c:	0f 1f 40 00          	nopl   0x0(%rax)
    a070:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
    a074:	41 31 44 15 fc       	xor    %eax,-0x4(%r13,%rdx,1)
    a079:	48 89 d0             	mov    %rdx,%rax
    a07c:	48 8d 52 04          	lea    0x4(%rdx),%rdx
    a080:	49 39 d4             	cmp    %rdx,%r12
    a083:	73 eb                	jae    a070 <mbedtls_md_hmac_starts+0x130>
    a085:	49 39 c4             	cmp    %rax,%r12
    a088:	76 1a                	jbe    a0a4 <mbedtls_md_hmac_starts+0x164>
    a08a:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
    a08e:	41 30 54 05 00       	xor    %dl,0x0(%r13,%rax,1)
    a093:	48 83 c0 01          	add    $0x1,%rax
    a097:	49 39 c4             	cmp    %rax,%r12
    a09a:	77 ee                	ja     a08a <mbedtls_md_hmac_starts+0x14a>
    a09c:	31 c0                	xor    %eax,%eax
    a09e:	49 83 fc 03          	cmp    $0x3,%r12
    a0a2:	76 25                	jbe    a0c9 <mbedtls_md_hmac_starts+0x189>
    a0a4:	ba 04 00 00 00       	mov    $0x4,%edx
    a0a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a0b0:	8b 44 13 fc          	mov    -0x4(%rbx,%rdx,1),%eax
    a0b4:	31 44 16 fc          	xor    %eax,-0x4(%rsi,%rdx,1)
    a0b8:	48 89 d0             	mov    %rdx,%rax
    a0bb:	48 8d 52 04          	lea    0x4(%rdx),%rdx
    a0bf:	49 39 d4             	cmp    %rdx,%r12
    a0c2:	73 ec                	jae    a0b0 <mbedtls_md_hmac_starts+0x170>
    a0c4:	49 39 c4             	cmp    %rax,%r12
    a0c7:	76 10                	jbe    a0d9 <mbedtls_md_hmac_starts+0x199>
    a0c9:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
    a0cd:	30 14 06             	xor    %dl,(%rsi,%rax,1)
    a0d0:	48 83 c0 01          	add    $0x1,%rax
    a0d4:	49 39 c4             	cmp    %rax,%r12
    a0d7:	77 f0                	ja     a0c9 <mbedtls_md_hmac_starts+0x189>
    a0d9:	48 89 ef             	mov    %rbp,%rdi
    a0dc:	e8 ef f8 ff ff       	callq  99d0 <mbedtls_md_starts>
    a0e1:	41 89 c6             	mov    %eax,%r14d
    a0e4:	85 c0                	test   %eax,%eax
    a0e6:	75 16                	jne    a0fe <mbedtls_md_hmac_starts+0x1be>
    a0e8:	48 8b 45 00          	mov    0x0(%rbp),%rax
    a0ec:	4c 89 ee             	mov    %r13,%rsi
    a0ef:	48 89 ef             	mov    %rbp,%rdi
    a0f2:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    a0f6:	e8 95 f9 ff ff       	callq  9a90 <mbedtls_md_update>
    a0fb:	41 89 c6             	mov    %eax,%r14d
    a0fe:	be 40 00 00 00       	mov    $0x40,%esi
    a103:	4c 89 ff             	mov    %r15,%rdi
    a106:	e8 15 b1 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    a10b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    a110:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a117:	00 00 
    a119:	0f 85 f4 00 00 00    	jne    a213 <mbedtls_md_hmac_starts+0x2d3>
    a11f:	48 83 c4 58          	add    $0x58,%rsp
    a123:	44 89 f0             	mov    %r14d,%eax
    a126:	5b                   	pop    %rbx
    a127:	5d                   	pop    %rbp
    a128:	41 5c                	pop    %r12
    a12a:	41 5d                	pop    %r13
    a12c:	41 5e                	pop    %r14
    a12e:	41 5f                	pop    %r15
    a130:	c3                   	retq   
    a131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a138:	83 e2 04             	and    $0x4,%edx
    a13b:	0f 85 8f 00 00 00    	jne    a1d0 <mbedtls_md_hmac_starts+0x290>
    a141:	85 c9                	test   %ecx,%ecx
    a143:	0f 84 ec fe ff ff    	je     a035 <mbedtls_md_hmac_starts+0xf5>
    a149:	41 c6 45 00 36       	movb   $0x36,0x0(%r13)
    a14e:	f6 c1 02             	test   $0x2,%cl
    a151:	0f 84 da fe ff ff    	je     a031 <mbedtls_md_hmac_starts+0xf1>
    a157:	ba 36 36 00 00       	mov    $0x3636,%edx
    a15c:	66 41 89 54 0d fe    	mov    %dx,-0x2(%r13,%rcx,1)
    a162:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    a166:	e9 ca fe ff ff       	jmpq   a035 <mbedtls_md_hmac_starts+0xf5>
    a16b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a170:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    a174:	48 89 f2             	mov    %rsi,%rdx
    a177:	48 89 06             	mov    %rax,(%rsi)
    a17a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a17e:	48 89 44 0e f8       	mov    %rax,-0x8(%rsi,%rcx,1)
    a183:	48 29 fa             	sub    %rdi,%rdx
    a186:	01 d1                	add    %edx,%ecx
    a188:	c1 e9 03             	shr    $0x3,%ecx
    a18b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    a18e:	e9 ca fe ff ff       	jmpq   a05d <mbedtls_md_hmac_starts+0x11d>
    a193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a198:	c6 06 5c             	movb   $0x5c,(%rsi)
    a19b:	f6 c1 02             	test   $0x2,%cl
    a19e:	0f 84 b9 fe ff ff    	je     a05d <mbedtls_md_hmac_starts+0x11d>
    a1a4:	b8 5c 5c 00 00       	mov    $0x5c5c,%eax
    a1a9:	66 89 44 0e fe       	mov    %ax,-0x2(%rsi,%rcx,1)
    a1ae:	e9 aa fe ff ff       	jmpq   a05d <mbedtls_md_hmac_starts+0x11d>
    a1b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a1b8:	31 c0                	xor    %eax,%eax
    a1ba:	4d 85 e4             	test   %r12,%r12
    a1bd:	0f 85 c7 fe ff ff    	jne    a08a <mbedtls_md_hmac_starts+0x14a>
    a1c3:	e9 11 ff ff ff       	jmpq   a0d9 <mbedtls_md_hmac_starts+0x199>
    a1c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a1cf:	00 
    a1d0:	41 c7 45 00 36 36 36 	movl   $0x36363636,0x0(%r13)
    a1d7:	36 
    a1d8:	41 c7 44 0d fc 36 36 	movl   $0x36363636,-0x4(%r13,%rcx,1)
    a1df:	36 36 
    a1e1:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    a1e5:	e9 4b fe ff ff       	jmpq   a035 <mbedtls_md_hmac_starts+0xf5>
    a1ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a1f0:	c7 06 5c 5c 5c 5c    	movl   $0x5c5c5c5c,(%rsi)
    a1f6:	c7 44 0e fc 5c 5c 5c 	movl   $0x5c5c5c5c,-0x4(%rsi,%rcx,1)
    a1fd:	5c 
    a1fe:	e9 5a fe ff ff       	jmpq   a05d <mbedtls_md_hmac_starts+0x11d>
    a203:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a208:	41 be 00 af ff ff    	mov    $0xffffaf00,%r14d
    a20e:	e9 f8 fe ff ff       	jmpq   a10b <mbedtls_md_hmac_starts+0x1cb>
    a213:	e8 48 90 ff ff       	callq  3260 <__stack_chk_fail@plt>
    a218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a21f:	00 

000000000000a220 <mbedtls_md_hmac_update>:
    a220:	f3 0f 1e fa          	endbr64 
    a224:	48 85 ff             	test   %rdi,%rdi
    a227:	74 17                	je     a240 <mbedtls_md_hmac_update+0x20>
    a229:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    a22d:	74 11                	je     a240 <mbedtls_md_hmac_update+0x20>
    a22f:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
    a234:	74 0a                	je     a240 <mbedtls_md_hmac_update+0x20>
    a236:	e9 55 f8 ff ff       	jmpq   9a90 <mbedtls_md_update>
    a23b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a240:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    a245:	c3                   	retq   
    a246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a24d:	00 00 00 

000000000000a250 <mbedtls_md_hmac_finish>:
    a250:	f3 0f 1e fa          	endbr64 
    a254:	41 56                	push   %r14
    a256:	41 55                	push   %r13
    a258:	41 54                	push   %r12
    a25a:	55                   	push   %rbp
    a25b:	53                   	push   %rbx
    a25c:	48 83 ec 50          	sub    $0x50,%rsp
    a260:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a267:	00 00 
    a269:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    a26e:	31 c0                	xor    %eax,%eax
    a270:	48 85 ff             	test   %rdi,%rdi
    a273:	0f 84 a7 00 00 00    	je     a320 <mbedtls_md_hmac_finish+0xd0>
    a279:	48 8b 07             	mov    (%rdi),%rax
    a27c:	49 89 fe             	mov    %rdi,%r14
    a27f:	48 85 c0             	test   %rax,%rax
    a282:	0f 84 98 00 00 00    	je     a320 <mbedtls_md_hmac_finish+0xd0>
    a288:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    a28c:	48 85 db             	test   %rbx,%rbx
    a28f:	0f 84 8b 00 00 00    	je     a320 <mbedtls_md_hmac_finish+0xd0>
    a295:	49 89 e4             	mov    %rsp,%r12
    a298:	48 89 f5             	mov    %rsi,%rbp
    a29b:	44 0f b6 68 0d       	movzbl 0xd(%rax),%r13d
    a2a0:	4c 89 e6             	mov    %r12,%rsi
    a2a3:	e8 68 f8 ff ff       	callq  9b10 <mbedtls_md_finish>
    a2a8:	85 c0                	test   %eax,%eax
    a2aa:	74 24                	je     a2d0 <mbedtls_md_hmac_finish+0x80>
    a2ac:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    a2b1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a2b8:	00 00 
    a2ba:	75 6b                	jne    a327 <mbedtls_md_hmac_finish+0xd7>
    a2bc:	48 83 c4 50          	add    $0x50,%rsp
    a2c0:	5b                   	pop    %rbx
    a2c1:	5d                   	pop    %rbp
    a2c2:	41 5c                	pop    %r12
    a2c4:	41 5d                	pop    %r13
    a2c6:	41 5e                	pop    %r14
    a2c8:	c3                   	retq   
    a2c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a2d0:	4c 89 f7             	mov    %r14,%rdi
    a2d3:	e8 f8 f6 ff ff       	callq  99d0 <mbedtls_md_starts>
    a2d8:	85 c0                	test   %eax,%eax
    a2da:	75 d0                	jne    a2ac <mbedtls_md_hmac_finish+0x5c>
    a2dc:	49 8b 06             	mov    (%r14),%rax
    a2df:	41 0f b6 f5          	movzbl %r13b,%esi
    a2e3:	4c 89 f7             	mov    %r14,%rdi
    a2e6:	48 01 de             	add    %rbx,%rsi
    a2e9:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    a2ed:	e8 9e f7 ff ff       	callq  9a90 <mbedtls_md_update>
    a2f2:	85 c0                	test   %eax,%eax
    a2f4:	75 b6                	jne    a2ac <mbedtls_md_hmac_finish+0x5c>
    a2f6:	49 8b 06             	mov    (%r14),%rax
    a2f9:	4c 89 e6             	mov    %r12,%rsi
    a2fc:	4c 89 f7             	mov    %r14,%rdi
    a2ff:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
    a303:	e8 88 f7 ff ff       	callq  9a90 <mbedtls_md_update>
    a308:	85 c0                	test   %eax,%eax
    a30a:	75 a0                	jne    a2ac <mbedtls_md_hmac_finish+0x5c>
    a30c:	48 89 ee             	mov    %rbp,%rsi
    a30f:	4c 89 f7             	mov    %r14,%rdi
    a312:	e8 f9 f7 ff ff       	callq  9b10 <mbedtls_md_finish>
    a317:	eb 93                	jmp    a2ac <mbedtls_md_hmac_finish+0x5c>
    a319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a320:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    a325:	eb 85                	jmp    a2ac <mbedtls_md_hmac_finish+0x5c>
    a327:	e8 34 8f ff ff       	callq  3260 <__stack_chk_fail@plt>
    a32c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a330 <mbedtls_md_hmac_reset>:
    a330:	f3 0f 1e fa          	endbr64 
    a334:	48 85 ff             	test   %rdi,%rdi
    a337:	74 56                	je     a38f <mbedtls_md_hmac_reset+0x5f>
    a339:	41 54                	push   %r12
    a33b:	55                   	push   %rbp
    a33c:	48 89 fd             	mov    %rdi,%rbp
    a33f:	48 83 ec 08          	sub    $0x8,%rsp
    a343:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    a347:	74 3f                	je     a388 <mbedtls_md_hmac_reset+0x58>
    a349:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    a34d:	4d 85 e4             	test   %r12,%r12
    a350:	74 36                	je     a388 <mbedtls_md_hmac_reset+0x58>
    a352:	e8 79 f6 ff ff       	callq  99d0 <mbedtls_md_starts>
    a357:	85 c0                	test   %eax,%eax
    a359:	74 0d                	je     a368 <mbedtls_md_hmac_reset+0x38>
    a35b:	48 83 c4 08          	add    $0x8,%rsp
    a35f:	5d                   	pop    %rbp
    a360:	41 5c                	pop    %r12
    a362:	c3                   	retq   
    a363:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a368:	48 8b 45 00          	mov    0x0(%rbp),%rax
    a36c:	4c 89 e6             	mov    %r12,%rsi
    a36f:	48 89 ef             	mov    %rbp,%rdi
    a372:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
    a376:	48 83 c4 08          	add    $0x8,%rsp
    a37a:	5d                   	pop    %rbp
    a37b:	41 5c                	pop    %r12
    a37d:	e9 0e f7 ff ff       	jmpq   9a90 <mbedtls_md_update>
    a382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a388:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    a38d:	eb cc                	jmp    a35b <mbedtls_md_hmac_reset+0x2b>
    a38f:	b8 00 af ff ff       	mov    $0xffffaf00,%eax
    a394:	c3                   	retq   
    a395:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a39c:	00 00 00 00 

000000000000a3a0 <mbedtls_md_hmac>:
    a3a0:	f3 0f 1e fa          	endbr64 
    a3a4:	41 57                	push   %r15
    a3a6:	41 56                	push   %r14
    a3a8:	41 55                	push   %r13
    a3aa:	41 54                	push   %r12
    a3ac:	55                   	push   %rbp
    a3ad:	53                   	push   %rbx
    a3ae:	48 83 ec 38          	sub    $0x38,%rsp
    a3b2:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    a3b7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a3be:	00 00 
    a3c0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    a3c5:	31 c0                	xor    %eax,%eax
    a3c7:	48 85 ff             	test   %rdi,%rdi
    a3ca:	0f 84 b4 00 00 00    	je     a484 <mbedtls_md_hmac+0xe4>
    a3d0:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    a3d5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a3d9:	48 89 f5             	mov    %rsi,%rbp
    a3dc:	49 89 d5             	mov    %rdx,%r13
    a3df:	48 89 fe             	mov    %rdi,%rsi
    a3e2:	ba 01 00 00 00       	mov    $0x1,%edx
    a3e7:	4c 89 f7             	mov    %r14,%rdi
    a3ea:	48 89 cb             	mov    %rcx,%rbx
    a3ed:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a3f4:	00 00 
    a3f6:	4d 89 c7             	mov    %r8,%r15
    a3f9:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    a3fe:	e8 5d f4 ff ff       	callq  9860 <mbedtls_md_setup>
    a403:	41 89 c4             	mov    %eax,%r12d
    a406:	85 c0                	test   %eax,%eax
    a408:	74 2e                	je     a438 <mbedtls_md_hmac+0x98>
    a40a:	4c 89 f7             	mov    %r14,%rdi
    a40d:	e8 7e f2 ff ff       	callq  9690 <mbedtls_md_free>
    a412:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    a417:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a41e:	00 00 
    a420:	75 75                	jne    a497 <mbedtls_md_hmac+0xf7>
    a422:	48 83 c4 38          	add    $0x38,%rsp
    a426:	44 89 e0             	mov    %r12d,%eax
    a429:	5b                   	pop    %rbx
    a42a:	5d                   	pop    %rbp
    a42b:	41 5c                	pop    %r12
    a42d:	41 5d                	pop    %r13
    a42f:	41 5e                	pop    %r14
    a431:	41 5f                	pop    %r15
    a433:	c3                   	retq   
    a434:	0f 1f 40 00          	nopl   0x0(%rax)
    a438:	4c 89 ea             	mov    %r13,%rdx
    a43b:	48 89 ee             	mov    %rbp,%rsi
    a43e:	4c 89 f7             	mov    %r14,%rdi
    a441:	e8 fa fa ff ff       	callq  9f40 <mbedtls_md_hmac_starts>
    a446:	41 89 c4             	mov    %eax,%r12d
    a449:	85 c0                	test   %eax,%eax
    a44b:	75 bd                	jne    a40a <mbedtls_md_hmac+0x6a>
    a44d:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    a453:	74 37                	je     a48c <mbedtls_md_hmac+0xec>
    a455:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    a45b:	74 2f                	je     a48c <mbedtls_md_hmac+0xec>
    a45d:	4c 89 fa             	mov    %r15,%rdx
    a460:	48 89 de             	mov    %rbx,%rsi
    a463:	4c 89 f7             	mov    %r14,%rdi
    a466:	e8 25 f6 ff ff       	callq  9a90 <mbedtls_md_update>
    a46b:	41 89 c4             	mov    %eax,%r12d
    a46e:	85 c0                	test   %eax,%eax
    a470:	75 98                	jne    a40a <mbedtls_md_hmac+0x6a>
    a472:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a477:	4c 89 f7             	mov    %r14,%rdi
    a47a:	e8 d1 fd ff ff       	callq  a250 <mbedtls_md_hmac_finish>
    a47f:	41 89 c4             	mov    %eax,%r12d
    a482:	eb 86                	jmp    a40a <mbedtls_md_hmac+0x6a>
    a484:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    a48a:	eb 86                	jmp    a412 <mbedtls_md_hmac+0x72>
    a48c:	41 bc 00 af ff ff    	mov    $0xffffaf00,%r12d
    a492:	e9 73 ff ff ff       	jmpq   a40a <mbedtls_md_hmac+0x6a>
    a497:	e8 c4 8d ff ff       	callq  3260 <__stack_chk_fail@plt>
    a49c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a4a0 <mbedtls_md_get_name>:
    a4a0:	f3 0f 1e fa          	endbr64 
    a4a4:	48 85 ff             	test   %rdi,%rdi
    a4a7:	74 07                	je     a4b0 <mbedtls_md_get_name+0x10>
    a4a9:	48 8b 07             	mov    (%rdi),%rax
    a4ac:	c3                   	retq   
    a4ad:	0f 1f 00             	nopl   (%rax)
    a4b0:	31 c0                	xor    %eax,%eax
    a4b2:	c3                   	retq   
    a4b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a4ba:	00 00 00 
    a4bd:	0f 1f 00             	nopl   (%rax)

000000000000a4c0 <mbedtls_md5_init>:
    a4c0:	f3 0f 1e fa          	endbr64 
    a4c4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    a4cb:	48 89 f9             	mov    %rdi,%rcx
    a4ce:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    a4d2:	31 c0                	xor    %eax,%eax
    a4d4:	48 c7 47 48 00 00 00 	movq   $0x0,0x48(%rdi)
    a4db:	00 
    a4dc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a4e0:	48 29 f9             	sub    %rdi,%rcx
    a4e3:	83 c1 58             	add    $0x58,%ecx
    a4e6:	c1 e9 03             	shr    $0x3,%ecx
    a4e9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    a4ec:	c3                   	retq   
    a4ed:	0f 1f 00             	nopl   (%rax)

000000000000a4f0 <mbedtls_md5_free>:
    a4f0:	f3 0f 1e fa          	endbr64 
    a4f4:	48 85 ff             	test   %rdi,%rdi
    a4f7:	74 0f                	je     a508 <mbedtls_md5_free+0x18>
    a4f9:	be 58 00 00 00       	mov    $0x58,%esi
    a4fe:	e9 1d ad ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
    a503:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a508:	c3                   	retq   
    a509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a510 <mbedtls_md5_clone>:
    a510:	f3 0f 1e fa          	endbr64 
    a514:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    a518:	0f 11 07             	movups %xmm0,(%rdi)
    a51b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    a520:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    a524:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    a529:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    a52d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    a532:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    a536:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    a53b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    a53f:	48 8b 46 50          	mov    0x50(%rsi),%rax
    a543:	48 89 47 50          	mov    %rax,0x50(%rdi)
    a547:	c3                   	retq   
    a548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a54f:	00 

000000000000a550 <mbedtls_md5_starts>:
    a550:	f3 0f 1e fa          	endbr64 
    a554:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    a55b:	ab cd ef 
    a55e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    a565:	48 89 47 08          	mov    %rax,0x8(%rdi)
    a569:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    a570:	54 32 10 
    a573:	48 89 47 10          	mov    %rax,0x10(%rdi)
    a577:	31 c0                	xor    %eax,%eax
    a579:	c3                   	retq   
    a57a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a580 <mbedtls_internal_md5_process>:
    a580:	f3 0f 1e fa          	endbr64 
    a584:	41 57                	push   %r15
    a586:	41 56                	push   %r14
    a588:	41 55                	push   %r13
    a58a:	41 54                	push   %r12
    a58c:	55                   	push   %rbp
    a58d:	53                   	push   %rbx
    a58e:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    a595:	44 8b 36             	mov    (%rsi),%r14d
    a598:	44 8b 4e 04          	mov    0x4(%rsi),%r9d
    a59c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a5a3:	00 00 
    a5a5:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a5aa:	31 c0                	xor    %eax,%eax
    a5ac:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
    a5b0:	8b 6e 14             	mov    0x14(%rsi),%ebp
    a5b3:	44 8b 6e 1c          	mov    0x1c(%rsi),%r13d
    a5b7:	44 8b 7e 08          	mov    0x8(%rsi),%r15d
    a5bb:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
    a5c0:	8b 46 10             	mov    0x10(%rsi),%eax
    a5c3:	8b 5e 18             	mov    0x18(%rsi),%ebx
    a5c6:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
    a5cb:	8b 4e 20             	mov    0x20(%rsi),%ecx
    a5ce:	8b 56 24             	mov    0x24(%rsi),%edx
    a5d1:	44 89 7c 24 28       	mov    %r15d,0x28(%rsp)
    a5d6:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
    a5db:	89 04 24             	mov    %eax,(%rsp)
    a5de:	89 44 24 30          	mov    %eax,0x30(%rsp)
    a5e2:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
    a5e6:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
    a5ea:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
    a5ee:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    a5f2:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
    a5f6:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    a5fa:	44 89 6c 24 3c       	mov    %r13d,0x3c(%rsp)
    a5ff:	89 54 24 44          	mov    %edx,0x44(%rsp)
    a603:	44 8b 66 34          	mov    0x34(%rsi),%r12d
    a607:	44 8b 56 28          	mov    0x28(%rsi),%r10d
    a60b:	8b 5e 30             	mov    0x30(%rsi),%ebx
    a60e:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
    a613:	44 8b 46 2c          	mov    0x2c(%rsi),%r8d
    a617:	8b 47 08             	mov    0x8(%rdi),%eax
    a61a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
    a61f:	8b 57 0c             	mov    0xc(%rdi),%edx
    a622:	33 57 10             	xor    0x10(%rdi),%edx
    a625:	44 89 64 24 54       	mov    %r12d,0x54(%rsp)
    a62a:	44 8b 66 38          	mov    0x38(%rsi),%r12d
    a62e:	8b 76 3c             	mov    0x3c(%rsi),%esi
    a631:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    a636:	42 8d 84 30 78 a4 6a 	lea    -0x28955b88(%rax,%r14,1),%eax
    a63d:	d7 
    a63e:	8b 4f 10             	mov    0x10(%rdi),%ecx
    a641:	44 89 44 24 4c       	mov    %r8d,0x4c(%rsp)
    a646:	89 74 24 18          	mov    %esi,0x18(%rsp)
    a64a:	89 74 24 5c          	mov    %esi,0x5c(%rsp)
    a64e:	8b 77 10             	mov    0x10(%rdi),%esi
    a651:	42 8d 8c 39 db 70 20 	lea    0x242070db(%rcx,%r15,1),%ecx
    a658:	24 
    a659:	33 77 14             	xor    0x14(%rdi),%esi
    a65c:	23 77 0c             	and    0xc(%rdi),%esi
    a65f:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    a664:	33 77 14             	xor    0x14(%rdi),%esi
    a667:	44 8b 3c 24          	mov    (%rsp),%r15d
    a66b:	89 5c 24 50          	mov    %ebx,0x50(%rsp)
    a66f:	01 c6                	add    %eax,%esi
    a671:	8b 47 14             	mov    0x14(%rdi),%eax
    a674:	44 89 64 24 58       	mov    %r12d,0x58(%rsp)
    a679:	c1 c6 07             	rol    $0x7,%esi
    a67c:	03 77 0c             	add    0xc(%rdi),%esi
    a67f:	21 f2                	and    %esi,%edx
    a681:	42 8d 84 08 56 b7 c7 	lea    -0x173848aa(%rax,%r9,1),%eax
    a688:	e8 
    a689:	33 57 10             	xor    0x10(%rdi),%edx
    a68c:	01 c2                	add    %eax,%edx
    a68e:	8b 47 0c             	mov    0xc(%rdi),%eax
    a691:	c1 c2 0c             	rol    $0xc,%edx
    a694:	01 f2                	add    %esi,%edx
    a696:	31 f0                	xor    %esi,%eax
    a698:	21 d0                	and    %edx,%eax
    a69a:	33 47 0c             	xor    0xc(%rdi),%eax
    a69d:	01 c8                	add    %ecx,%eax
    a69f:	89 f1                	mov    %esi,%ecx
    a6a1:	31 d1                	xor    %edx,%ecx
    a6a3:	c1 c8 0f             	ror    $0xf,%eax
    a6a6:	01 d0                	add    %edx,%eax
    a6a8:	41 89 c8             	mov    %ecx,%r8d
    a6ab:	8b 4f 0c             	mov    0xc(%rdi),%ecx
    a6ae:	41 21 c0             	and    %eax,%r8d
    a6b1:	41 31 f0             	xor    %esi,%r8d
    a6b4:	42 8d 8c 19 ee ce bd 	lea    -0x3e423112(%rcx,%r11,1),%ecx
    a6bb:	c1 
    a6bc:	42 8d b4 3e af 0f 7c 	lea    -0xa83f051(%rsi,%r15,1),%esi
    a6c3:	f5 
    a6c4:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    a6c9:	41 01 c8             	add    %ecx,%r8d
    a6cc:	89 d1                	mov    %edx,%ecx
    a6ce:	41 c1 c8 0a          	ror    $0xa,%r8d
    a6d2:	31 c1                	xor    %eax,%ecx
    a6d4:	41 01 c0             	add    %eax,%r8d
    a6d7:	44 21 c1             	and    %r8d,%ecx
    a6da:	31 d1                	xor    %edx,%ecx
    a6dc:	8d 94 2a 2a c6 87 47 	lea    0x4787c62a(%rdx,%rbp,1),%edx
    a6e3:	01 f1                	add    %esi,%ecx
    a6e5:	89 c6                	mov    %eax,%esi
    a6e7:	c1 c1 07             	rol    $0x7,%ecx
    a6ea:	44 01 c1             	add    %r8d,%ecx
    a6ed:	44 31 c6             	xor    %r8d,%esi
    a6f0:	21 ce                	and    %ecx,%esi
    a6f2:	31 c6                	xor    %eax,%esi
    a6f4:	42 8d 84 38 13 46 30 	lea    -0x57cfb9ed(%rax,%r15,1),%eax
    a6fb:	a8 
    a6fc:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
    a701:	01 d6                	add    %edx,%esi
    a703:	44 89 c2             	mov    %r8d,%edx
    a706:	c1 c6 0c             	rol    $0xc,%esi
    a709:	31 ca                	xor    %ecx,%edx
    a70b:	01 ce                	add    %ecx,%esi
    a70d:	21 f2                	and    %esi,%edx
    a70f:	44 31 c2             	xor    %r8d,%edx
    a712:	47 8d 84 28 01 95 46 	lea    -0x2b96aff(%r8,%r13,1),%r8d
    a719:	fd 
    a71a:	01 c2                	add    %eax,%edx
    a71c:	89 c8                	mov    %ecx,%eax
    a71e:	c1 ca 0f             	ror    $0xf,%edx
    a721:	31 f0                	xor    %esi,%eax
    a723:	01 f2                	add    %esi,%edx
    a725:	21 d0                	and    %edx,%eax
    a727:	31 c8                	xor    %ecx,%eax
    a729:	42 8d 8c 39 d8 98 80 	lea    0x698098d8(%rcx,%r15,1),%ecx
    a730:	69 
    a731:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    a736:	44 01 c0             	add    %r8d,%eax
    a739:	41 89 f0             	mov    %esi,%r8d
    a73c:	c1 c8 0a             	ror    $0xa,%eax
    a73f:	41 31 d0             	xor    %edx,%r8d
    a742:	01 d0                	add    %edx,%eax
    a744:	41 21 c0             	and    %eax,%r8d
    a747:	41 31 f0             	xor    %esi,%r8d
    a74a:	42 8d b4 3e af f7 44 	lea    -0x74bb0851(%rsi,%r15,1),%esi
    a751:	8b 
    a752:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
    a757:	41 01 c8             	add    %ecx,%r8d
    a75a:	89 d1                	mov    %edx,%ecx
    a75c:	41 c1 c0 07          	rol    $0x7,%r8d
    a760:	31 c1                	xor    %eax,%ecx
    a762:	41 01 c0             	add    %eax,%r8d
    a765:	44 21 c1             	and    %r8d,%ecx
    a768:	31 d1                	xor    %edx,%ecx
    a76a:	42 8d 94 12 b1 5b ff 	lea    -0xa44f(%rdx,%r10,1),%edx
    a771:	ff 
    a772:	01 f1                	add    %esi,%ecx
    a774:	89 c6                	mov    %eax,%esi
    a776:	c1 c1 0c             	rol    $0xc,%ecx
    a779:	44 31 c6             	xor    %r8d,%esi
    a77c:	44 01 c1             	add    %r8d,%ecx
    a77f:	21 ce                	and    %ecx,%esi
    a781:	31 c6                	xor    %eax,%esi
    a783:	42 8d 84 38 be d7 5c 	lea    -0x76a32842(%rax,%r15,1),%eax
    a78a:	89 
    a78b:	01 d6                	add    %edx,%esi
    a78d:	44 89 c2             	mov    %r8d,%edx
    a790:	c1 ce 0f             	ror    $0xf,%esi
    a793:	31 ca                	xor    %ecx,%edx
    a795:	01 ce                	add    %ecx,%esi
    a797:	21 f2                	and    %esi,%edx
    a799:	44 31 c2             	xor    %r8d,%edx
    a79c:	45 8d 84 18 22 11 90 	lea    0x6b901122(%r8,%rbx,1),%r8d
    a7a3:	6b 
    a7a4:	01 c2                	add    %eax,%edx
    a7a6:	89 c8                	mov    %ecx,%eax
    a7a8:	c1 ca 0a             	ror    $0xa,%edx
    a7ab:	31 f0                	xor    %esi,%eax
    a7ad:	01 f2                	add    %esi,%edx
    a7af:	21 d0                	and    %edx,%eax
    a7b1:	31 c8                	xor    %ecx,%eax
    a7b3:	44 01 c0             	add    %r8d,%eax
    a7b6:	41 89 f0             	mov    %esi,%r8d
    a7b9:	41 31 d0             	xor    %edx,%r8d
    a7bc:	c1 c0 07             	rol    $0x7,%eax
    a7bf:	01 d0                	add    %edx,%eax
    a7c1:	45 89 c7             	mov    %r8d,%r15d
    a7c4:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    a7c9:	41 21 c7             	and    %eax,%r15d
    a7cc:	41 31 f7             	xor    %esi,%r15d
    a7cf:	42 8d 8c 01 93 71 98 	lea    -0x2678e6d(%rcx,%r8,1),%ecx
    a7d6:	fd 
    a7d7:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
    a7dc:	42 8d b4 26 8e 43 79 	lea    -0x5986bc72(%rsi,%r12,1),%esi
    a7e3:	a6 
    a7e4:	41 01 cf             	add    %ecx,%r15d
    a7e7:	89 d1                	mov    %edx,%ecx
    a7e9:	41 c1 c7 0c          	rol    $0xc,%r15d
    a7ed:	31 c1                	xor    %eax,%ecx
    a7ef:	41 01 c7             	add    %eax,%r15d
    a7f2:	44 21 f9             	and    %r15d,%ecx
    a7f5:	31 d1                	xor    %edx,%ecx
    a7f7:	42 8d 94 02 21 08 b4 	lea    0x49b40821(%rdx,%r8,1),%edx
    a7fe:	49 
    a7ff:	01 f1                	add    %esi,%ecx
    a801:	89 c6                	mov    %eax,%esi
    a803:	c1 c9 0f             	ror    $0xf,%ecx
    a806:	44 31 fe             	xor    %r15d,%esi
    a809:	44 01 f9             	add    %r15d,%ecx
    a80c:	21 ce                	and    %ecx,%esi
    a80e:	31 c6                	xor    %eax,%esi
    a810:	42 8d 84 08 62 25 1e 	lea    -0x9e1da9e(%rax,%r9,1),%eax
    a817:	f6 
    a818:	01 d6                	add    %edx,%esi
    a81a:	89 ca                	mov    %ecx,%edx
    a81c:	c1 ce 0a             	ror    $0xa,%esi
    a81f:	01 ce                	add    %ecx,%esi
    a821:	31 f2                	xor    %esi,%edx
    a823:	41 89 d0             	mov    %edx,%r8d
    a826:	89 f2                	mov    %esi,%edx
    a828:	45 21 f8             	and    %r15d,%r8d
    a82b:	41 31 c8             	xor    %ecx,%r8d
    a82e:	41 01 c0             	add    %eax,%r8d
    a831:	8b 44 24 04          	mov    0x4(%rsp),%eax
    a835:	41 c1 c0 05          	rol    $0x5,%r8d
    a839:	41 01 f0             	add    %esi,%r8d
    a83c:	41 8d 84 07 40 b3 40 	lea    -0x3fbf4cc0(%r15,%rax,1),%eax
    a843:	c0 
    a844:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
    a849:	44 31 c2             	xor    %r8d,%edx
    a84c:	21 ca                	and    %ecx,%edx
    a84e:	42 8d 8c 39 51 5a 5e 	lea    0x265e5a51(%rcx,%r15,1),%ecx
    a855:	26 
    a856:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
    a85b:	31 f2                	xor    %esi,%edx
    a85d:	01 c2                	add    %eax,%edx
    a85f:	44 89 c0             	mov    %r8d,%eax
    a862:	c1 c2 09             	rol    $0x9,%edx
    a865:	44 01 c2             	add    %r8d,%edx
    a868:	31 d0                	xor    %edx,%eax
    a86a:	21 f0                	and    %esi,%eax
    a86c:	42 8d b4 36 aa c7 b6 	lea    -0x16493856(%rsi,%r14,1),%esi
    a873:	e9 
    a874:	44 31 c0             	xor    %r8d,%eax
    a877:	01 c8                	add    %ecx,%eax
    a879:	89 d1                	mov    %edx,%ecx
    a87b:	c1 c0 0e             	rol    $0xe,%eax
    a87e:	01 d0                	add    %edx,%eax
    a880:	31 c1                	xor    %eax,%ecx
    a882:	44 21 c1             	and    %r8d,%ecx
    a885:	45 8d 84 28 5d 10 2f 	lea    -0x29d0efa3(%r8,%rbp,1),%r8d
    a88c:	d6 
    a88d:	31 d1                	xor    %edx,%ecx
    a88f:	01 f1                	add    %esi,%ecx
    a891:	89 c6                	mov    %eax,%esi
    a893:	c1 c9 0c             	ror    $0xc,%ecx
    a896:	01 c1                	add    %eax,%ecx
    a898:	31 ce                	xor    %ecx,%esi
    a89a:	21 d6                	and    %edx,%esi
    a89c:	42 8d 94 12 53 14 44 	lea    0x2441453(%rdx,%r10,1),%edx
    a8a3:	02 
    a8a4:	31 c6                	xor    %eax,%esi
    a8a6:	44 01 c6             	add    %r8d,%esi
    a8a9:	41 89 c8             	mov    %ecx,%r8d
    a8ac:	c1 c6 05             	rol    $0x5,%esi
    a8af:	01 ce                	add    %ecx,%esi
    a8b1:	41 31 f0             	xor    %esi,%r8d
    a8b4:	41 21 c0             	and    %eax,%r8d
    a8b7:	42 8d 84 38 81 e6 a1 	lea    -0x275e197f(%rax,%r15,1),%eax
    a8be:	d8 
    a8bf:	44 8b 3c 24          	mov    (%rsp),%r15d
    a8c3:	41 31 c8             	xor    %ecx,%r8d
    a8c6:	41 01 d0             	add    %edx,%r8d
    a8c9:	89 f2                	mov    %esi,%edx
    a8cb:	41 c1 c0 09          	rol    $0x9,%r8d
    a8cf:	41 01 f0             	add    %esi,%r8d
    a8d2:	44 31 c2             	xor    %r8d,%edx
    a8d5:	21 ca                	and    %ecx,%edx
    a8d7:	42 8d 8c 39 c8 fb d3 	lea    -0x182c0438(%rcx,%r15,1),%ecx
    a8de:	e7 
    a8df:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    a8e4:	31 f2                	xor    %esi,%edx
    a8e6:	01 c2                	add    %eax,%edx
    a8e8:	44 89 c0             	mov    %r8d,%eax
    a8eb:	c1 c2 0e             	rol    $0xe,%edx
    a8ee:	44 01 c2             	add    %r8d,%edx
    a8f1:	31 d0                	xor    %edx,%eax
    a8f3:	21 f0                	and    %esi,%eax
    a8f5:	42 8d b4 3e e6 cd e1 	lea    0x21e1cde6(%rsi,%r15,1),%esi
    a8fc:	21 
    a8fd:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
    a902:	44 31 c0             	xor    %r8d,%eax
    a905:	01 c8                	add    %ecx,%eax
    a907:	89 d1                	mov    %edx,%ecx
    a909:	c1 c8 0c             	ror    $0xc,%eax
    a90c:	01 d0                	add    %edx,%eax
    a90e:	31 c1                	xor    %eax,%ecx
    a910:	44 21 c1             	and    %r8d,%ecx
    a913:	47 8d 84 20 d6 07 37 	lea    -0x3cc8f82a(%r8,%r12,1),%r8d
    a91a:	c3 
    a91b:	31 d1                	xor    %edx,%ecx
    a91d:	01 f1                	add    %esi,%ecx
    a91f:	89 c6                	mov    %eax,%esi
    a921:	c1 c1 05             	rol    $0x5,%ecx
    a924:	01 c1                	add    %eax,%ecx
    a926:	31 ce                	xor    %ecx,%esi
    a928:	21 d6                	and    %edx,%esi
    a92a:	42 8d 94 1a 87 0d d5 	lea    -0xb2af279(%rdx,%r11,1),%edx
    a931:	f4 
    a932:	31 c6                	xor    %eax,%esi
    a934:	44 01 c6             	add    %r8d,%esi
    a937:	41 89 c8             	mov    %ecx,%r8d
    a93a:	c1 c6 09             	rol    $0x9,%esi
    a93d:	01 ce                	add    %ecx,%esi
    a93f:	41 31 f0             	xor    %esi,%r8d
    a942:	41 21 c0             	and    %eax,%r8d
    a945:	42 8d 84 38 ed 14 5a 	lea    0x455a14ed(%rax,%r15,1),%eax
    a94c:	45 
    a94d:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
    a952:	41 31 c8             	xor    %ecx,%r8d
    a955:	41 01 d0             	add    %edx,%r8d
    a958:	89 f2                	mov    %esi,%edx
    a95a:	41 c1 c0 0e          	rol    $0xe,%r8d
    a95e:	41 01 f0             	add    %esi,%r8d
    a961:	44 31 c2             	xor    %r8d,%edx
    a964:	21 ca                	and    %ecx,%edx
    a966:	42 8d 8c 39 05 e9 e3 	lea    -0x561c16fb(%rcx,%r15,1),%ecx
    a96d:	a9 
    a96e:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    a973:	31 f2                	xor    %esi,%edx
    a975:	01 c2                	add    %eax,%edx
    a977:	44 89 c0             	mov    %r8d,%eax
    a97a:	c1 ca 0c             	ror    $0xc,%edx
    a97d:	44 01 c2             	add    %r8d,%edx
    a980:	31 d0                	xor    %edx,%eax
    a982:	21 f0                	and    %esi,%eax
    a984:	42 8d b4 3e f8 a3 ef 	lea    -0x3105c08(%rsi,%r15,1),%esi
    a98b:	fc 
    a98c:	44 31 c0             	xor    %r8d,%eax
    a98f:	01 c8                	add    %ecx,%eax
    a991:	89 d1                	mov    %edx,%ecx
    a993:	c1 c0 05             	rol    $0x5,%eax
    a996:	01 d0                	add    %edx,%eax
    a998:	31 c1                	xor    %eax,%ecx
    a99a:	44 21 c1             	and    %r8d,%ecx
    a99d:	47 8d 84 28 d9 02 6f 	lea    0x676f02d9(%r8,%r13,1),%r8d
    a9a4:	67 
    a9a5:	31 d1                	xor    %edx,%ecx
    a9a7:	01 f1                	add    %esi,%ecx
    a9a9:	89 c6                	mov    %eax,%esi
    a9ab:	c1 c1 09             	rol    $0x9,%ecx
    a9ae:	01 c1                	add    %eax,%ecx
    a9b0:	31 ce                	xor    %ecx,%esi
    a9b2:	21 d6                	and    %edx,%esi
    a9b4:	8d 94 1a 8a 4c 2a 8d 	lea    -0x72d5b376(%rdx,%rbx,1),%edx
    a9bb:	31 c6                	xor    %eax,%esi
    a9bd:	44 01 c6             	add    %r8d,%esi
    a9c0:	41 89 c8             	mov    %ecx,%r8d
    a9c3:	c1 c6 0e             	rol    $0xe,%esi
    a9c6:	01 ce                	add    %ecx,%esi
    a9c8:	41 31 f0             	xor    %esi,%r8d
    a9cb:	45 89 c7             	mov    %r8d,%r15d
    a9ce:	41 89 c0             	mov    %eax,%r8d
    a9d1:	8d 84 28 42 39 fa ff 	lea    -0x5c6be(%rax,%rbp,1),%eax
    a9d8:	45 21 f8             	and    %r15d,%r8d
    a9db:	41 31 c8             	xor    %ecx,%r8d
    a9de:	41 01 d0             	add    %edx,%r8d
    a9e1:	89 f2                	mov    %esi,%edx
    a9e3:	41 c1 c8 0c          	ror    $0xc,%r8d
    a9e7:	41 01 f0             	add    %esi,%r8d
    a9ea:	45 31 c7             	xor    %r8d,%r15d
    a9ed:	44 31 c2             	xor    %r8d,%edx
    a9f0:	41 01 c7             	add    %eax,%r15d
    a9f3:	8b 44 24 08          	mov    0x8(%rsp),%eax
    a9f7:	41 c1 c7 04          	rol    $0x4,%r15d
    a9fb:	45 01 c7             	add    %r8d,%r15d
    a9fe:	8d 84 01 81 f6 71 87 	lea    -0x788e097f(%rcx,%rax,1),%eax
    aa05:	44 89 c1             	mov    %r8d,%ecx
    aa08:	44 31 fa             	xor    %r15d,%edx
    aa0b:	44 31 f9             	xor    %r15d,%ecx
    aa0e:	01 c2                	add    %eax,%edx
    aa10:	8b 44 24 10          	mov    0x10(%rsp),%eax
    aa14:	c1 c2 0b             	rol    $0xb,%edx
    aa17:	44 01 fa             	add    %r15d,%edx
    aa1a:	8d 84 06 22 61 9d 6d 	lea    0x6d9d6122(%rsi,%rax,1),%eax
    aa21:	44 89 fe             	mov    %r15d,%esi
    aa24:	31 d1                	xor    %edx,%ecx
    aa26:	31 d6                	xor    %edx,%esi
    aa28:	01 c1                	add    %eax,%ecx
    aa2a:	89 f0                	mov    %esi,%eax
    aa2c:	43 8d b4 20 0c 38 e5 	lea    -0x21ac7f4(%r8,%r12,1),%esi
    aa33:	fd 
    aa34:	c1 c1 10             	rol    $0x10,%ecx
    aa37:	47 8d 84 0f 44 ea be 	lea    -0x5b4115bc(%r15,%r9,1),%r8d
    aa3e:	a4 
    aa3f:	44 8b 3c 24          	mov    (%rsp),%r15d
    aa43:	01 d1                	add    %edx,%ecx
    aa45:	31 c8                	xor    %ecx,%eax
    aa47:	01 f0                	add    %esi,%eax
    aa49:	89 d6                	mov    %edx,%esi
    aa4b:	42 8d 94 3a a9 cf de 	lea    0x4bdecfa9(%rdx,%r15,1),%edx
    aa52:	4b 
    aa53:	44 8b 7c 24 14       	mov    0x14(%rsp),%r15d
    aa58:	c1 c8 09             	ror    $0x9,%eax
    aa5b:	31 ce                	xor    %ecx,%esi
    aa5d:	01 c8                	add    %ecx,%eax
    aa5f:	31 c6                	xor    %eax,%esi
    aa61:	44 01 c6             	add    %r8d,%esi
    aa64:	41 89 c8             	mov    %ecx,%r8d
    aa67:	42 8d 8c 29 60 4b bb 	lea    -0x944b4a0(%rcx,%r13,1),%ecx
    aa6e:	f6 
    aa6f:	c1 c6 04             	rol    $0x4,%esi
    aa72:	41 31 c0             	xor    %eax,%r8d
    aa75:	01 c6                	add    %eax,%esi
    aa77:	41 31 f0             	xor    %esi,%r8d
    aa7a:	41 01 d0             	add    %edx,%r8d
    aa7d:	89 c2                	mov    %eax,%edx
    aa7f:	42 8d 84 10 70 bc bf 	lea    -0x41404390(%rax,%r10,1),%eax
    aa86:	be 
    aa87:	41 c1 c0 0b          	rol    $0xb,%r8d
    aa8b:	31 f2                	xor    %esi,%edx
    aa8d:	41 01 f0             	add    %esi,%r8d
    aa90:	44 31 c2             	xor    %r8d,%edx
    aa93:	01 ca                	add    %ecx,%edx
    aa95:	89 f1                	mov    %esi,%ecx
    aa97:	42 8d b4 3e c6 7e 9b 	lea    0x289b7ec6(%rsi,%r15,1),%esi
    aa9e:	28 
    aa9f:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    aaa4:	c1 c2 10             	rol    $0x10,%edx
    aaa7:	44 31 c1             	xor    %r8d,%ecx
    aaaa:	44 01 c2             	add    %r8d,%edx
    aaad:	31 d1                	xor    %edx,%ecx
    aaaf:	01 c1                	add    %eax,%ecx
    aab1:	44 89 c0             	mov    %r8d,%eax
    aab4:	47 8d 84 30 fa 27 a1 	lea    -0x155ed806(%r8,%r14,1),%r8d
    aabb:	ea 
    aabc:	c1 c9 09             	ror    $0x9,%ecx
    aabf:	31 d0                	xor    %edx,%eax
    aac1:	01 d1                	add    %edx,%ecx
    aac3:	31 c8                	xor    %ecx,%eax
    aac5:	01 c6                	add    %eax,%esi
    aac7:	89 d0                	mov    %edx,%eax
    aac9:	42 8d 94 1a 85 30 ef 	lea    -0x2b10cf7b(%rdx,%r11,1),%edx
    aad0:	d4 
    aad1:	c1 c6 04             	rol    $0x4,%esi
    aad4:	31 c8                	xor    %ecx,%eax
    aad6:	01 ce                	add    %ecx,%esi
    aad8:	31 f0                	xor    %esi,%eax
    aada:	44 01 c0             	add    %r8d,%eax
    aadd:	41 89 c8             	mov    %ecx,%r8d
    aae0:	42 8d 8c 39 05 1d 88 	lea    0x4881d05(%rcx,%r15,1),%ecx
    aae7:	04 
    aae8:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    aaed:	c1 c0 0b             	rol    $0xb,%eax
    aaf0:	41 31 f0             	xor    %esi,%r8d
    aaf3:	01 f0                	add    %esi,%eax
    aaf5:	41 31 c0             	xor    %eax,%r8d
    aaf8:	41 01 d0             	add    %edx,%r8d
    aafb:	89 f2                	mov    %esi,%edx
    aafd:	42 8d b4 3e 39 d0 d4 	lea    -0x262b2fc7(%rsi,%r15,1),%esi
    ab04:	d9 
    ab05:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
    ab0a:	41 c1 c0 10          	rol    $0x10,%r8d
    ab0e:	31 c2                	xor    %eax,%edx
    ab10:	41 01 c0             	add    %eax,%r8d
    ab13:	44 31 c2             	xor    %r8d,%edx
    ab16:	01 d1                	add    %edx,%ecx
    ab18:	89 c2                	mov    %eax,%edx
    ab1a:	8d 84 18 e5 99 db e6 	lea    -0x1924661b(%rax,%rbx,1),%eax
    ab21:	c1 c9 09             	ror    $0x9,%ecx
    ab24:	44 31 c2             	xor    %r8d,%edx
    ab27:	44 01 c1             	add    %r8d,%ecx
    ab2a:	31 ca                	xor    %ecx,%edx
    ab2c:	01 f2                	add    %esi,%edx
    ab2e:	44 89 c6             	mov    %r8d,%esi
    ab31:	47 8d 84 38 f8 7c a2 	lea    0x1fa27cf8(%r8,%r15,1),%r8d
    ab38:	1f 
    ab39:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    ab3e:	c1 c2 04             	rol    $0x4,%edx
    ab41:	31 ce                	xor    %ecx,%esi
    ab43:	01 ca                	add    %ecx,%edx
    ab45:	31 d6                	xor    %edx,%esi
    ab47:	01 c6                	add    %eax,%esi
    ab49:	89 c8                	mov    %ecx,%eax
    ab4b:	42 8d 8c 39 65 56 ac 	lea    -0x3b53a99b(%rcx,%r15,1),%ecx
    ab52:	c4 
    ab53:	c1 c6 0b             	rol    $0xb,%esi
    ab56:	31 d0                	xor    %edx,%eax
    ab58:	01 d6                	add    %edx,%esi
    ab5a:	31 f0                	xor    %esi,%eax
    ab5c:	41 01 c0             	add    %eax,%r8d
    ab5f:	89 d0                	mov    %edx,%eax
    ab61:	42 8d 94 32 44 22 29 	lea    -0xbd6ddbc(%rdx,%r14,1),%edx
    ab68:	f4 
    ab69:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    ab6e:	41 c1 c0 10          	rol    $0x10,%r8d
    ab72:	31 f0                	xor    %esi,%eax
    ab74:	41 01 f0             	add    %esi,%r8d
    ab77:	44 31 c0             	xor    %r8d,%eax
    ab7a:	01 c1                	add    %eax,%ecx
    ab7c:	89 f0                	mov    %esi,%eax
    ab7e:	42 8d b4 2e 97 ff 2a 	lea    0x432aff97(%rsi,%r13,1),%esi
    ab85:	43 
    ab86:	c1 c9 09             	ror    $0x9,%ecx
    ab89:	f7 d0                	not    %eax
    ab8b:	44 01 c1             	add    %r8d,%ecx
    ab8e:	09 c8                	or     %ecx,%eax
    ab90:	44 31 c0             	xor    %r8d,%eax
    ab93:	01 d0                	add    %edx,%eax
    ab95:	44 89 c2             	mov    %r8d,%edx
    ab98:	47 8d 84 20 a7 23 94 	lea    -0x546bdc59(%r8,%r12,1),%r8d
    ab9f:	ab 
    aba0:	c1 c0 06             	rol    $0x6,%eax
    aba3:	f7 d2                	not    %edx
    aba5:	01 c8                	add    %ecx,%eax
    aba7:	09 c2                	or     %eax,%edx
    aba9:	31 ca                	xor    %ecx,%edx
    abab:	01 f2                	add    %esi,%edx
    abad:	89 ce                	mov    %ecx,%esi
    abaf:	8d 8c 29 39 a0 93 fc 	lea    -0x36c5fc7(%rcx,%rbp,1),%ecx
    abb6:	c1 c2 0a             	rol    $0xa,%edx
    abb9:	f7 d6                	not    %esi
    abbb:	01 c2                	add    %eax,%edx
    abbd:	09 d6                	or     %edx,%esi
    abbf:	31 c6                	xor    %eax,%esi
    abc1:	44 01 c6             	add    %r8d,%esi
    abc4:	41 89 c0             	mov    %eax,%r8d
    abc7:	8d 84 18 c3 59 5b 65 	lea    0x655b59c3(%rax,%rbx,1),%eax
    abce:	8b 1c 24             	mov    (%rsp),%ebx
    abd1:	c1 c6 0f             	rol    $0xf,%esi
    abd4:	41 f7 d0             	not    %r8d
    abd7:	01 d6                	add    %edx,%esi
    abd9:	41 09 f0             	or     %esi,%r8d
    abdc:	89 f5                	mov    %esi,%ebp
    abde:	41 31 d0             	xor    %edx,%r8d
    abe1:	f7 d5                	not    %ebp
    abe3:	41 01 c8             	add    %ecx,%r8d
    abe6:	89 d1                	mov    %edx,%ecx
    abe8:	42 8d 94 1a 92 cc 0c 	lea    -0x70f3336e(%rdx,%r11,1),%edx
    abef:	8f 
    abf0:	44 8b 5c 24 14       	mov    0x14(%rsp),%r11d
    abf5:	41 c1 c8 0b          	ror    $0xb,%r8d
    abf9:	f7 d1                	not    %ecx
    abfb:	41 01 f0             	add    %esi,%r8d
    abfe:	44 09 c1             	or     %r8d,%ecx
    ac01:	31 f1                	xor    %esi,%ecx
    ac03:	42 8d b4 16 7d f4 ef 	lea    -0x100b83(%rsi,%r10,1),%esi
    ac0a:	ff 
    ac0b:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
    ac10:	01 c1                	add    %eax,%ecx
    ac12:	89 e8                	mov    %ebp,%eax
    ac14:	c1 c1 06             	rol    $0x6,%ecx
    ac17:	44 01 c1             	add    %r8d,%ecx
    ac1a:	09 c8                	or     %ecx,%eax
    ac1c:	44 31 c0             	xor    %r8d,%eax
    ac1f:	01 d0                	add    %edx,%eax
    ac21:	44 89 c2             	mov    %r8d,%edx
    ac24:	47 8d 84 08 d1 5d 84 	lea    -0x7a7ba22f(%r8,%r9,1),%r8d
    ac2b:	85 
    ac2c:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
    ac31:	c1 c0 0a             	rol    $0xa,%eax
    ac34:	f7 d2                	not    %edx
    ac36:	01 c8                	add    %ecx,%eax
    ac38:	09 c2                	or     %eax,%edx
    ac3a:	31 ca                	xor    %ecx,%edx
    ac3c:	01 f2                	add    %esi,%edx
    ac3e:	89 ce                	mov    %ecx,%esi
    ac40:	42 8d 8c 11 4f 7e a8 	lea    0x6fa87e4f(%rcx,%r10,1),%ecx
    ac47:	6f 
    ac48:	c1 c2 0f             	rol    $0xf,%edx
    ac4b:	f7 d6                	not    %esi
    ac4d:	01 c2                	add    %eax,%edx
    ac4f:	09 d6                	or     %edx,%esi
    ac51:	31 c6                	xor    %eax,%esi
    ac53:	44 01 c6             	add    %r8d,%esi
    ac56:	41 89 c0             	mov    %eax,%r8d
    ac59:	42 8d 84 30 e0 e6 2c 	lea    -0x1d31920(%rax,%r14,1),%eax
    ac60:	fe 
    ac61:	c1 ce 0b             	ror    $0xb,%esi
    ac64:	41 f7 d0             	not    %r8d
    ac67:	01 d6                	add    %edx,%esi
    ac69:	41 09 f0             	or     %esi,%r8d
    ac6c:	41 31 d0             	xor    %edx,%r8d
    ac6f:	41 01 c8             	add    %ecx,%r8d
    ac72:	89 d1                	mov    %edx,%ecx
    ac74:	42 8d 94 0a 14 43 01 	lea    -0x5cfebcec(%rdx,%r9,1),%edx
    ac7b:	a3 
    ac7c:	41 c1 c0 06          	rol    $0x6,%r8d
    ac80:	f7 d1                	not    %ecx
    ac82:	41 01 f0             	add    %esi,%r8d
    ac85:	44 09 c1             	or     %r8d,%ecx
    ac88:	31 f1                	xor    %esi,%ecx
    ac8a:	01 c1                	add    %eax,%ecx
    ac8c:	89 f0                	mov    %esi,%eax
    ac8e:	42 8d b4 1e a1 11 08 	lea    0x4e0811a1(%rsi,%r11,1),%esi
    ac95:	4e 
    ac96:	c1 c1 0a             	rol    $0xa,%ecx
    ac99:	f7 d0                	not    %eax
    ac9b:	44 01 c1             	add    %r8d,%ecx
    ac9e:	09 c8                	or     %ecx,%eax
    aca0:	44 31 c0             	xor    %r8d,%eax
    aca3:	01 d0                	add    %edx,%eax
    aca5:	44 89 c2             	mov    %r8d,%edx
    aca8:	45 8d 84 18 82 7e 53 	lea    -0x8ac817e(%r8,%rbx,1),%r8d
    acaf:	f7 
    acb0:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    acb4:	c1 c0 0f             	rol    $0xf,%eax
    acb7:	f7 d2                	not    %edx
    acb9:	01 c8                	add    %ecx,%eax
    acbb:	09 c2                	or     %eax,%edx
    acbd:	31 ca                	xor    %ecx,%edx
    acbf:	01 d6                	add    %edx,%esi
    acc1:	89 ca                	mov    %ecx,%edx
    acc3:	8d 8c 19 35 f2 3a bd 	lea    -0x42c50dcb(%rcx,%rbx,1),%ecx
    acca:	c1 ce 0b             	ror    $0xb,%esi
    accd:	f7 d2                	not    %edx
    accf:	01 c6                	add    %eax,%esi
    acd1:	09 f2                	or     %esi,%edx
    acd3:	31 c2                	xor    %eax,%edx
    acd5:	44 01 c2             	add    %r8d,%edx
    acd8:	41 89 c0             	mov    %eax,%r8d
    acdb:	42 8d 84 38 bb d2 d7 	lea    0x2ad7d2bb(%rax,%r15,1),%eax
    ace2:	2a 
    ace3:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    ace8:	c1 c2 06             	rol    $0x6,%edx
    aceb:	41 f7 d0             	not    %r8d
    acee:	01 f2                	add    %esi,%edx
    acf0:	41 09 d0             	or     %edx,%r8d
    acf3:	89 54 24 60          	mov    %edx,0x60(%rsp)
    acf7:	41 31 f0             	xor    %esi,%r8d
    acfa:	44 01 c1             	add    %r8d,%ecx
    acfd:	41 89 f0             	mov    %esi,%r8d
    ad00:	42 8d b4 3e 91 d3 86 	lea    -0x14792c6f(%rsi,%r15,1),%esi
    ad07:	eb 
    ad08:	c1 c1 0a             	rol    $0xa,%ecx
    ad0b:	41 f7 d0             	not    %r8d
    ad0e:	01 d1                	add    %edx,%ecx
    ad10:	41 09 c8             	or     %ecx,%r8d
    ad13:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
    ad17:	41 31 d0             	xor    %edx,%r8d
    ad1a:	44 01 c0             	add    %r8d,%eax
    ad1d:	41 89 d0             	mov    %edx,%r8d
    ad20:	c1 c0 0f             	rol    $0xf,%eax
    ad23:	41 f7 d0             	not    %r8d
    ad26:	01 c8                	add    %ecx,%eax
    ad28:	41 09 c0             	or     %eax,%r8d
    ad2b:	89 44 24 68          	mov    %eax,0x68(%rsp)
    ad2f:	41 31 c8             	xor    %ecx,%r8d
    ad32:	44 01 c6             	add    %r8d,%esi
    ad35:	c1 ce 0b             	ror    $0xb,%esi
    ad38:	01 c6                	add    %eax,%esi
    ad3a:	89 74 24 64          	mov    %esi,0x64(%rsp)
    ad3e:	03 57 08             	add    0x8(%rdi),%edx
    ad41:	03 77 0c             	add    0xc(%rdi),%esi
    ad44:	03 47 10             	add    0x10(%rdi),%eax
    ad47:	89 57 08             	mov    %edx,0x8(%rdi)
    ad4a:	03 4f 14             	add    0x14(%rdi),%ecx
    ad4d:	89 77 0c             	mov    %esi,0xc(%rdi)
    ad50:	be 50 00 00 00       	mov    $0x50,%esi
    ad55:	89 47 10             	mov    %eax,0x10(%rdi)
    ad58:	89 4f 14             	mov    %ecx,0x14(%rdi)
    ad5b:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    ad60:	e8 bb a4 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    ad65:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    ad6a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ad71:	00 00 
    ad73:	75 14                	jne    ad89 <mbedtls_internal_md5_process+0x809>
    ad75:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    ad7c:	31 c0                	xor    %eax,%eax
    ad7e:	5b                   	pop    %rbx
    ad7f:	5d                   	pop    %rbp
    ad80:	41 5c                	pop    %r12
    ad82:	41 5d                	pop    %r13
    ad84:	41 5e                	pop    %r14
    ad86:	41 5f                	pop    %r15
    ad88:	c3                   	retq   
    ad89:	e8 d2 84 ff ff       	callq  3260 <__stack_chk_fail@plt>
    ad8e:	66 90                	xchg   %ax,%ax

000000000000ad90 <mbedtls_md5_update.part.0>:
    ad90:	41 56                	push   %r14
    ad92:	41 55                	push   %r13
    ad94:	41 54                	push   %r12
    ad96:	49 89 fc             	mov    %rdi,%r12
    ad99:	55                   	push   %rbp
    ad9a:	48 89 f5             	mov    %rsi,%rbp
    ad9d:	53                   	push   %rbx
    ad9e:	8b 07                	mov    (%rdi),%eax
    ada0:	48 89 d3             	mov    %rdx,%rbx
    ada3:	ba 40 00 00 00       	mov    $0x40,%edx
    ada8:	41 89 c5             	mov    %eax,%r13d
    adab:	41 83 e5 3f          	and    $0x3f,%r13d
    adaf:	44 29 ea             	sub    %r13d,%edx
    adb2:	01 d8                	add    %ebx,%eax
    adb4:	89 07                	mov    %eax,(%rdi)
    adb6:	41 89 d6             	mov    %edx,%r14d
    adb9:	73 04                	jae    adbf <mbedtls_md5_update.part.0+0x2f>
    adbb:	83 47 04 01          	addl   $0x1,0x4(%rdi)
    adbf:	45 85 ed             	test   %r13d,%r13d
    adc2:	74 05                	je     adc9 <mbedtls_md5_update.part.0+0x39>
    adc4:	49 39 de             	cmp    %rbx,%r14
    adc7:	76 37                	jbe    ae00 <mbedtls_md5_update.part.0+0x70>
    adc9:	48 83 fb 3f          	cmp    $0x3f,%rbx
    adcd:	77 17                	ja     ade6 <mbedtls_md5_update.part.0+0x56>
    adcf:	eb 7f                	jmp    ae50 <mbedtls_md5_update.part.0+0xc0>
    add1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    add8:	48 83 eb 40          	sub    $0x40,%rbx
    addc:	48 83 c5 40          	add    $0x40,%rbp
    ade0:	48 83 fb 3f          	cmp    $0x3f,%rbx
    ade4:	76 6a                	jbe    ae50 <mbedtls_md5_update.part.0+0xc0>
    ade6:	48 89 ee             	mov    %rbp,%rsi
    ade9:	4c 89 e7             	mov    %r12,%rdi
    adec:	e8 8f f7 ff ff       	callq  a580 <mbedtls_internal_md5_process>
    adf1:	85 c0                	test   %eax,%eax
    adf3:	74 e3                	je     add8 <mbedtls_md5_update.part.0+0x48>
    adf5:	5b                   	pop    %rbx
    adf6:	5d                   	pop    %rbp
    adf7:	41 5c                	pop    %r12
    adf9:	41 5d                	pop    %r13
    adfb:	41 5e                	pop    %r14
    adfd:	c3                   	retq   
    adfe:	66 90                	xchg   %ax,%ax
    ae00:	4d 8d 44 24 18       	lea    0x18(%r12),%r8
    ae05:	4d 01 c5             	add    %r8,%r13
    ae08:	83 fa 08             	cmp    $0x8,%edx
    ae0b:	0f 83 87 00 00 00    	jae    ae98 <mbedtls_md5_update.part.0+0x108>
    ae11:	f6 c2 04             	test   $0x4,%dl
    ae14:	0f 85 19 01 00 00    	jne    af33 <mbedtls_md5_update.part.0+0x1a3>
    ae1a:	85 d2                	test   %edx,%edx
    ae1c:	74 11                	je     ae2f <mbedtls_md5_update.part.0+0x9f>
    ae1e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    ae22:	83 e2 02             	and    $0x2,%edx
    ae25:	41 88 45 00          	mov    %al,0x0(%r13)
    ae29:	0f 85 30 01 00 00    	jne    af5f <mbedtls_md5_update.part.0+0x1cf>
    ae2f:	4c 89 c6             	mov    %r8,%rsi
    ae32:	4c 89 e7             	mov    %r12,%rdi
    ae35:	e8 46 f7 ff ff       	callq  a580 <mbedtls_internal_md5_process>
    ae3a:	85 c0                	test   %eax,%eax
    ae3c:	75 b7                	jne    adf5 <mbedtls_md5_update.part.0+0x65>
    ae3e:	4c 01 f5             	add    %r14,%rbp
    ae41:	4c 29 f3             	sub    %r14,%rbx
    ae44:	45 31 ed             	xor    %r13d,%r13d
    ae47:	eb 80                	jmp    adc9 <mbedtls_md5_update.part.0+0x39>
    ae49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ae50:	31 c0                	xor    %eax,%eax
    ae52:	48 85 db             	test   %rbx,%rbx
    ae55:	74 9e                	je     adf5 <mbedtls_md5_update.part.0+0x65>
    ae57:	4b 8d 4c 2c 18       	lea    0x18(%r12,%r13,1),%rcx
    ae5c:	89 d8                	mov    %ebx,%eax
    ae5e:	83 fb 08             	cmp    $0x8,%ebx
    ae61:	0f 83 7e 00 00 00    	jae    aee5 <mbedtls_md5_update.part.0+0x155>
    ae67:	83 e3 04             	and    $0x4,%ebx
    ae6a:	0f 85 d9 00 00 00    	jne    af49 <mbedtls_md5_update.part.0+0x1b9>
    ae70:	85 c0                	test   %eax,%eax
    ae72:	74 16                	je     ae8a <mbedtls_md5_update.part.0+0xfa>
    ae74:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
    ae78:	88 11                	mov    %dl,(%rcx)
    ae7a:	a8 02                	test   $0x2,%al
    ae7c:	74 0c                	je     ae8a <mbedtls_md5_update.part.0+0xfa>
    ae7e:	89 c2                	mov    %eax,%edx
    ae80:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
    ae85:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    ae8a:	31 c0                	xor    %eax,%eax
    ae8c:	5b                   	pop    %rbx
    ae8d:	5d                   	pop    %rbp
    ae8e:	41 5c                	pop    %r12
    ae90:	41 5d                	pop    %r13
    ae92:	41 5e                	pop    %r14
    ae94:	c3                   	retq   
    ae95:	0f 1f 00             	nopl   (%rax)
    ae98:	48 8b 45 00          	mov    0x0(%rbp),%rax
    ae9c:	49 8d 75 08          	lea    0x8(%r13),%rsi
    aea0:	49 89 e9             	mov    %rbp,%r9
    aea3:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    aea7:	49 89 45 00          	mov    %rax,0x0(%r13)
    aeab:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
    aeb0:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
    aeb5:	49 29 f5             	sub    %rsi,%r13
    aeb8:	44 01 ea             	add    %r13d,%edx
    aebb:	4d 29 e9             	sub    %r13,%r9
    aebe:	83 e2 f8             	and    $0xfffffff8,%edx
    aec1:	83 fa 08             	cmp    $0x8,%edx
    aec4:	0f 82 65 ff ff ff    	jb     ae2f <mbedtls_md5_update.part.0+0x9f>
    aeca:	83 e2 f8             	and    $0xfffffff8,%edx
    aecd:	31 c0                	xor    %eax,%eax
    aecf:	89 c1                	mov    %eax,%ecx
    aed1:	83 c0 08             	add    $0x8,%eax
    aed4:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
    aed8:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    aedc:	39 d0                	cmp    %edx,%eax
    aede:	72 ef                	jb     aecf <mbedtls_md5_update.part.0+0x13f>
    aee0:	e9 4a ff ff ff       	jmpq   ae2f <mbedtls_md5_update.part.0+0x9f>
    aee5:	48 8b 45 00          	mov    0x0(%rbp),%rax
    aee9:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    aeed:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    aef1:	48 89 01             	mov    %rax,(%rcx)
    aef4:	89 d8                	mov    %ebx,%eax
    aef6:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
    aefb:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    af00:	48 29 f1             	sub    %rsi,%rcx
    af03:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
    af06:	48 29 cd             	sub    %rcx,%rbp
    af09:	83 e0 f8             	and    $0xfffffff8,%eax
    af0c:	83 f8 08             	cmp    $0x8,%eax
    af0f:	0f 82 75 ff ff ff    	jb     ae8a <mbedtls_md5_update.part.0+0xfa>
    af15:	83 e0 f8             	and    $0xfffffff8,%eax
    af18:	31 d2                	xor    %edx,%edx
    af1a:	89 d1                	mov    %edx,%ecx
    af1c:	83 c2 08             	add    $0x8,%edx
    af1f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
    af24:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    af28:	39 c2                	cmp    %eax,%edx
    af2a:	72 ee                	jb     af1a <mbedtls_md5_update.part.0+0x18a>
    af2c:	31 c0                	xor    %eax,%eax
    af2e:	e9 59 ff ff ff       	jmpq   ae8c <mbedtls_md5_update.part.0+0xfc>
    af33:	8b 45 00             	mov    0x0(%rbp),%eax
    af36:	41 89 45 00          	mov    %eax,0x0(%r13)
    af3a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
    af3f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
    af44:	e9 e6 fe ff ff       	jmpq   ae2f <mbedtls_md5_update.part.0+0x9f>
    af49:	8b 55 00             	mov    0x0(%rbp),%edx
    af4c:	89 11                	mov    %edx,(%rcx)
    af4e:	89 c2                	mov    %eax,%edx
    af50:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
    af54:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    af58:	31 c0                	xor    %eax,%eax
    af5a:	e9 2d ff ff ff       	jmpq   ae8c <mbedtls_md5_update.part.0+0xfc>
    af5f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
    af65:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
    af6b:	e9 bf fe ff ff       	jmpq   ae2f <mbedtls_md5_update.part.0+0x9f>

000000000000af70 <mbedtls_md5_update>:
    af70:	f3 0f 1e fa          	endbr64 
    af74:	48 85 d2             	test   %rdx,%rdx
    af77:	74 07                	je     af80 <mbedtls_md5_update+0x10>
    af79:	e9 12 fe ff ff       	jmpq   ad90 <mbedtls_md5_update.part.0>
    af7e:	66 90                	xchg   %ax,%ax
    af80:	31 c0                	xor    %eax,%eax
    af82:	c3                   	retq   
    af83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    af8a:	00 00 00 00 
    af8e:	66 90                	xchg   %ax,%ax

000000000000af90 <mbedtls_md5_finish>:
    af90:	f3 0f 1e fa          	endbr64 
    af94:	41 54                	push   %r12
    af96:	4c 8d 67 18          	lea    0x18(%rdi),%r12
    af9a:	55                   	push   %rbp
    af9b:	48 89 f5             	mov    %rsi,%rbp
    af9e:	53                   	push   %rbx
    af9f:	8b 07                	mov    (%rdi),%eax
    afa1:	48 89 fb             	mov    %rdi,%rbx
    afa4:	83 e0 3f             	and    $0x3f,%eax
    afa7:	8d 48 01             	lea    0x1(%rax),%ecx
    afaa:	c6 44 07 18 80       	movb   $0x80,0x18(%rdi,%rax,1)
    afaf:	89 c8                	mov    %ecx,%eax
    afb1:	4c 01 e0             	add    %r12,%rax
    afb4:	83 f9 38             	cmp    $0x38,%ecx
    afb7:	77 57                	ja     b010 <mbedtls_md5_finish+0x80>
    afb9:	ba 38 00 00 00       	mov    $0x38,%edx
    afbe:	31 ff                	xor    %edi,%edi
    afc0:	29 ca                	sub    %ecx,%edx
    afc2:	83 fa 08             	cmp    $0x8,%edx
    afc5:	72 79                	jb     b040 <mbedtls_md5_finish+0xb0>
    afc7:	89 d1                	mov    %edx,%ecx
    afc9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    afd0:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
    afd7:	00 00 
    afd9:	48 8d 48 08          	lea    0x8(%rax),%rcx
    afdd:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    afe1:	48 29 c8             	sub    %rcx,%rax
    afe4:	01 c2                	add    %eax,%edx
    afe6:	83 e2 f8             	and    $0xfffffff8,%edx
    afe9:	83 fa 08             	cmp    $0x8,%edx
    afec:	0f 82 8b 00 00 00    	jb     b07d <mbedtls_md5_finish+0xed>
    aff2:	83 e2 f8             	and    $0xfffffff8,%edx
    aff5:	31 c0                	xor    %eax,%eax
    aff7:	89 c6                	mov    %eax,%esi
    aff9:	83 c0 08             	add    $0x8,%eax
    affc:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
    b000:	39 d0                	cmp    %edx,%eax
    b002:	72 f3                	jb     aff7 <mbedtls_md5_finish+0x67>
    b004:	eb 77                	jmp    b07d <mbedtls_md5_finish+0xed>
    b006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b00d:	00 00 00 
    b010:	ba 40 00 00 00       	mov    $0x40,%edx
    b015:	29 ca                	sub    %ecx,%edx
    b017:	89 d1                	mov    %edx,%ecx
    b019:	74 0f                	je     b02a <mbedtls_md5_finish+0x9a>
    b01b:	31 d2                	xor    %edx,%edx
    b01d:	89 d6                	mov    %edx,%esi
    b01f:	83 c2 01             	add    $0x1,%edx
    b022:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
    b026:	39 ca                	cmp    %ecx,%edx
    b028:	72 f3                	jb     b01d <mbedtls_md5_finish+0x8d>
    b02a:	4c 89 e6             	mov    %r12,%rsi
    b02d:	48 89 df             	mov    %rbx,%rdi
    b030:	e8 4b f5 ff ff       	callq  a580 <mbedtls_internal_md5_process>
    b035:	85 c0                	test   %eax,%eax
    b037:	74 27                	je     b060 <mbedtls_md5_finish+0xd0>
    b039:	5b                   	pop    %rbx
    b03a:	5d                   	pop    %rbp
    b03b:	41 5c                	pop    %r12
    b03d:	c3                   	retq   
    b03e:	66 90                	xchg   %ax,%ax
    b040:	f6 c2 04             	test   $0x4,%dl
    b043:	0f 85 7f 00 00 00    	jne    b0c8 <mbedtls_md5_finish+0x138>
    b049:	85 d2                	test   %edx,%edx
    b04b:	74 30                	je     b07d <mbedtls_md5_finish+0xed>
    b04d:	c6 00 00             	movb   $0x0,(%rax)
    b050:	f6 c2 02             	test   $0x2,%dl
    b053:	74 28                	je     b07d <mbedtls_md5_finish+0xed>
    b055:	31 c9                	xor    %ecx,%ecx
    b057:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
    b05c:	eb 1f                	jmp    b07d <mbedtls_md5_finish+0xed>
    b05e:	66 90                	xchg   %ax,%ax
    b060:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b064:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
    b068:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
    b06f:	00 00 
    b071:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
    b077:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
    b07d:	8b 13                	mov    (%rbx),%edx
    b07f:	8b 43 04             	mov    0x4(%rbx),%eax
    b082:	4c 89 e6             	mov    %r12,%rsi
    b085:	48 89 df             	mov    %rbx,%rdi
    b088:	89 d1                	mov    %edx,%ecx
    b08a:	c1 e0 03             	shl    $0x3,%eax
    b08d:	c1 e9 1d             	shr    $0x1d,%ecx
    b090:	c1 e2 03             	shl    $0x3,%edx
    b093:	09 c8                	or     %ecx,%eax
    b095:	89 53 50             	mov    %edx,0x50(%rbx)
    b098:	89 43 54             	mov    %eax,0x54(%rbx)
    b09b:	e8 e0 f4 ff ff       	callq  a580 <mbedtls_internal_md5_process>
    b0a0:	85 c0                	test   %eax,%eax
    b0a2:	75 95                	jne    b039 <mbedtls_md5_finish+0xa9>
    b0a4:	8b 53 08             	mov    0x8(%rbx),%edx
    b0a7:	89 55 00             	mov    %edx,0x0(%rbp)
    b0aa:	8b 53 0c             	mov    0xc(%rbx),%edx
    b0ad:	89 55 04             	mov    %edx,0x4(%rbp)
    b0b0:	8b 53 10             	mov    0x10(%rbx),%edx
    b0b3:	89 55 08             	mov    %edx,0x8(%rbp)
    b0b6:	8b 53 14             	mov    0x14(%rbx),%edx
    b0b9:	5b                   	pop    %rbx
    b0ba:	89 55 0c             	mov    %edx,0xc(%rbp)
    b0bd:	5d                   	pop    %rbp
    b0be:	41 5c                	pop    %r12
    b0c0:	c3                   	retq   
    b0c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b0c8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    b0ce:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
    b0d5:	00 
    b0d6:	eb a5                	jmp    b07d <mbedtls_md5_finish+0xed>
    b0d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b0df:	00 

000000000000b0e0 <mbedtls_md5>:
    b0e0:	f3 0f 1e fa          	endbr64 
    b0e4:	41 55                	push   %r13
    b0e6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b0ea:	41 54                	push   %r12
    b0ec:	55                   	push   %rbp
    b0ed:	48 89 d5             	mov    %rdx,%rbp
    b0f0:	48 83 ec 60          	sub    $0x60,%rsp
    b0f4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b0fb:	00 00 
    b0fd:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    b102:	31 c0                	xor    %eax,%eax
    b104:	49 89 e5             	mov    %rsp,%r13
    b107:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b10e:	00 
    b10f:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    b116:	ab cd ef 
    b119:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b11e:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    b125:	54 32 10 
    b128:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    b12d:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    b132:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    b137:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
    b13c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    b141:	48 85 f6             	test   %rsi,%rsi
    b144:	74 15                	je     b15b <mbedtls_md5+0x7b>
    b146:	48 89 f2             	mov    %rsi,%rdx
    b149:	48 89 fe             	mov    %rdi,%rsi
    b14c:	4c 89 ef             	mov    %r13,%rdi
    b14f:	e8 3c fc ff ff       	callq  ad90 <mbedtls_md5_update.part.0>
    b154:	41 89 c4             	mov    %eax,%r12d
    b157:	85 c0                	test   %eax,%eax
    b159:	75 0e                	jne    b169 <mbedtls_md5+0x89>
    b15b:	48 89 ee             	mov    %rbp,%rsi
    b15e:	4c 89 ef             	mov    %r13,%rdi
    b161:	e8 2a fe ff ff       	callq  af90 <mbedtls_md5_finish>
    b166:	41 89 c4             	mov    %eax,%r12d
    b169:	be 58 00 00 00       	mov    $0x58,%esi
    b16e:	4c 89 ef             	mov    %r13,%rdi
    b171:	e8 aa a0 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    b176:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    b17b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b182:	00 00 
    b184:	75 0d                	jne    b193 <mbedtls_md5+0xb3>
    b186:	48 83 c4 60          	add    $0x60,%rsp
    b18a:	44 89 e0             	mov    %r12d,%eax
    b18d:	5d                   	pop    %rbp
    b18e:	41 5c                	pop    %r12
    b190:	41 5d                	pop    %r13
    b192:	c3                   	retq   
    b193:	e8 c8 80 ff ff       	callq  3260 <__stack_chk_fail@plt>
    b198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b19f:	00 

000000000000b1a0 <mbedtls_md5_self_test>:
    b1a0:	f3 0f 1e fa          	endbr64 
    b1a4:	41 57                	push   %r15
    b1a6:	41 56                	push   %r14
    b1a8:	45 31 f6             	xor    %r14d,%r14d
    b1ab:	41 55                	push   %r13
    b1ad:	4c 8d 2d cc 7d 01 00 	lea    0x17dcc(%rip),%r13        # 22f80 <md5_test_buf>
    b1b4:	41 54                	push   %r12
    b1b6:	4c 8d 25 03 7d 01 00 	lea    0x17d03(%rip),%r12        # 22ec0 <md5_test_sum>
    b1bd:	55                   	push   %rbp
    b1be:	89 fd                	mov    %edi,%ebp
    b1c0:	53                   	push   %rbx
    b1c1:	31 db                	xor    %ebx,%ebx
    b1c3:	48 83 ec 28          	sub    $0x28,%rsp
    b1c7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b1ce:	00 00 
    b1d0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b1d5:	31 c0                	xor    %eax,%eax
    b1d7:	49 89 e7             	mov    %rsp,%r15
    b1da:	85 ed                	test   %ebp,%ebp
    b1dc:	75 61                	jne    b23f <mbedtls_md5_self_test+0x9f>
    b1de:	66 90                	xchg   %ax,%ax
    b1e0:	4c 89 f6             	mov    %r14,%rsi
    b1e3:	4c 89 fa             	mov    %r15,%rdx
    b1e6:	4c 89 ef             	mov    %r13,%rdi
    b1e9:	e8 f2 fe ff ff       	callq  b0e0 <mbedtls_md5>
    b1ee:	41 89 c6             	mov    %eax,%r14d
    b1f1:	85 c0                	test   %eax,%eax
    b1f3:	75 71                	jne    b266 <mbedtls_md5_self_test+0xc6>
    b1f5:	48 89 d8             	mov    %rbx,%rax
    b1f8:	49 8b 17             	mov    (%r15),%rdx
    b1fb:	49 8b 77 08          	mov    0x8(%r15),%rsi
    b1ff:	48 c1 e0 04          	shl    $0x4,%rax
    b203:	4c 01 e0             	add    %r12,%rax
    b206:	48 33 70 08          	xor    0x8(%rax),%rsi
    b20a:	48 33 10             	xor    (%rax),%rdx
    b20d:	48 09 d6             	or     %rdx,%rsi
    b210:	75 4e                	jne    b260 <mbedtls_md5_self_test+0xc0>
    b212:	85 ed                	test   %ebp,%ebp
    b214:	74 0c                	je     b222 <mbedtls_md5_self_test+0x82>
    b216:	48 8d 3d c5 7f 01 00 	lea    0x17fc5(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    b21d:	e8 de 7f ff ff       	callq  3200 <puts@plt>
    b222:	48 83 c3 01          	add    $0x1,%rbx
    b226:	49 83 c5 51          	add    $0x51,%r13
    b22a:	48 83 fb 07          	cmp    $0x7,%rbx
    b22e:	74 60                	je     b290 <mbedtls_md5_self_test+0xf0>
    b230:	48 8d 05 09 7d 01 00 	lea    0x17d09(%rip),%rax        # 22f40 <md5_test_buflen>
    b237:	4c 8b 34 d8          	mov    (%rax,%rbx,8),%r14
    b23b:	85 ed                	test   %ebp,%ebp
    b23d:	74 a1                	je     b1e0 <mbedtls_md5_self_test+0x40>
    b23f:	8d 53 01             	lea    0x1(%rbx),%edx
    b242:	48 8d 35 4d 7c 01 00 	lea    0x17c4d(%rip),%rsi        # 22e96 <supported_digests+0x56>
    b249:	bf 01 00 00 00       	mov    $0x1,%edi
    b24e:	31 c0                	xor    %eax,%eax
    b250:	e8 eb 80 ff ff       	callq  3340 <__printf_chk@plt>
    b255:	eb 89                	jmp    b1e0 <mbedtls_md5_self_test+0x40>
    b257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b25e:	00 00 
    b260:	41 be 01 00 00 00    	mov    $0x1,%r14d
    b266:	85 ed                	test   %ebp,%ebp
    b268:	75 46                	jne    b2b0 <mbedtls_md5_self_test+0x110>
    b26a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b26f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b276:	00 00 
    b278:	75 44                	jne    b2be <mbedtls_md5_self_test+0x11e>
    b27a:	48 83 c4 28          	add    $0x28,%rsp
    b27e:	44 89 f0             	mov    %r14d,%eax
    b281:	5b                   	pop    %rbx
    b282:	5d                   	pop    %rbp
    b283:	41 5c                	pop    %r12
    b285:	41 5d                	pop    %r13
    b287:	41 5e                	pop    %r14
    b289:	41 5f                	pop    %r15
    b28b:	c3                   	retq   
    b28c:	0f 1f 40 00          	nopl   0x0(%rax)
    b290:	85 ed                	test   %ebp,%ebp
    b292:	75 0c                	jne    b2a0 <mbedtls_md5_self_test+0x100>
    b294:	45 31 f6             	xor    %r14d,%r14d
    b297:	eb d1                	jmp    b26a <mbedtls_md5_self_test+0xca>
    b299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b2a0:	bf 0a 00 00 00       	mov    $0xa,%edi
    b2a5:	e8 46 7f ff ff       	callq  31f0 <putchar@plt>
    b2aa:	eb be                	jmp    b26a <mbedtls_md5_self_test+0xca>
    b2ac:	0f 1f 40 00          	nopl   0x0(%rax)
    b2b0:	48 8d 3d 06 88 01 00 	lea    0x18806(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    b2b7:	e8 44 7f ff ff       	callq  3200 <puts@plt>
    b2bc:	eb ac                	jmp    b26a <mbedtls_md5_self_test+0xca>
    b2be:	e8 9d 7f ff ff       	callq  3260 <__stack_chk_fail@plt>
    b2c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b2ca:	00 00 00 
    b2cd:	0f 1f 00             	nopl   (%rax)

000000000000b2d0 <unwrap>:
    b2d0:	41 57                	push   %r15
    b2d2:	41 56                	push   %r14
    b2d4:	41 55                	push   %r13
    b2d6:	41 54                	push   %r12
    b2d8:	55                   	push   %rbp
    b2d9:	53                   	push   %rbx
    b2da:	48 83 ec 78          	sub    $0x78,%rsp
    b2de:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    b2e3:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    b2e8:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    b2ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b2f4:	00 00 
    b2f6:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    b2fb:	31 c0                	xor    %eax,%eax
    b2fd:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    b304:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    b308:	48 83 fa 02          	cmp    $0x2,%rdx
    b30c:	0f 84 35 01 00 00    	je     b447 <unwrap+0x177>
    b312:	48 8d 5c 00 fa       	lea    -0x6(%rax,%rax,1),%rbx
    b317:	48 8b 06             	mov    (%rsi),%rax
    b31a:	4d 89 c6             	mov    %r8,%r14
    b31d:	48 83 c6 08          	add    $0x8,%rsi
    b321:	4c 8d 3c d5 f8 ff ff 	lea    -0x8(,%rdx,8),%r15
    b328:	ff 
    b329:	4c 89 c7             	mov    %r8,%rdi
    b32c:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    b331:	49 89 cc             	mov    %rcx,%r12
    b334:	48 89 01             	mov    %rax,(%rcx)
    b337:	4c 89 fa             	mov    %r15,%rdx
    b33a:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    b33f:	e8 0c 80 ff ff       	callq  3350 <memmove@plt>
    b344:	4b 8d 44 3e f8       	lea    -0x8(%r14,%r15,1),%rax
    b349:	4c 8d 74 24 38       	lea    0x38(%rsp),%r14
    b34e:	48 89 c5             	mov    %rax,%rbp
    b351:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b356:	4c 89 f0             	mov    %r14,%rax
    b359:	4c 8d 7c 24 50       	lea    0x50(%rsp),%r15
    b35e:	49 89 ee             	mov    %rbp,%r14
    b361:	48 89 c5             	mov    %rax,%rbp
    b364:	0f 1f 40 00          	nopl   0x0(%rax)
    b368:	4c 89 e0             	mov    %r12,%rax
    b36b:	b9 38 00 00 00       	mov    $0x38,%ecx
    b370:	48 89 da             	mov    %rbx,%rdx
    b373:	48 d3 ea             	shr    %cl,%rdx
    b376:	83 e9 08             	sub    $0x8,%ecx
    b379:	30 10                	xor    %dl,(%rax)
    b37b:	48 83 c0 01          	add    $0x1,%rax
    b37f:	83 f9 f8             	cmp    $0xfffffff8,%ecx
    b382:	75 ec                	jne    b370 <unwrap+0xa0>
    b384:	49 8b 04 24          	mov    (%r12),%rax
    b388:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    b38d:	49 89 e8             	mov    %rbp,%r8
    b390:	4c 89 e9             	mov    %r13,%rcx
    b393:	ba 10 00 00 00       	mov    $0x10,%edx
    b398:	4c 89 fe             	mov    %r15,%rsi
    b39b:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    b3a0:	49 8b 06             	mov    (%r14),%rax
    b3a3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    b3a8:	e8 a3 ac ff ff       	callq  6050 <mbedtls_cipher_update>
    b3ad:	85 c0                	test   %eax,%eax
    b3af:	75 7b                	jne    b42c <unwrap+0x15c>
    b3b1:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    b3b6:	4c 39 74 24 10       	cmp    %r14,0x10(%rsp)
    b3bb:	49 89 14 24          	mov    %rdx,(%r12)
    b3bf:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    b3c4:	49 89 16             	mov    %rdx,(%r14)
    b3c7:	49 8d 56 f8          	lea    -0x8(%r14),%rdx
    b3cb:	48 0f 44 54 24 18    	cmove  0x18(%rsp),%rdx
    b3d1:	49 89 d6             	mov    %rdx,%r14
    b3d4:	48 83 eb 01          	sub    $0x1,%rbx
    b3d8:	75 8e                	jne    b368 <unwrap+0x98>
    b3da:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    b3df:	89 c1                	mov    %eax,%ecx
    b3e1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b3e6:	48 89 38             	mov    %rdi,(%rax)
    b3e9:	be 10 00 00 00       	mov    $0x10,%esi
    b3ee:	4c 89 ff             	mov    %r15,%rdi
    b3f1:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    b3f5:	e8 26 9e ff ff       	callq  5220 <mbedtls_platform_zeroize>
    b3fa:	be 10 00 00 00       	mov    $0x10,%esi
    b3ff:	4c 89 ef             	mov    %r13,%rdi
    b402:	e8 19 9e ff ff       	callq  5220 <mbedtls_platform_zeroize>
    b407:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    b40b:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    b410:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b417:	00 00 
    b419:	75 33                	jne    b44e <unwrap+0x17e>
    b41b:	48 83 c4 78          	add    $0x78,%rsp
    b41f:	89 c8                	mov    %ecx,%eax
    b421:	5b                   	pop    %rbx
    b422:	5d                   	pop    %rbp
    b423:	41 5c                	pop    %r12
    b425:	41 5d                	pop    %r13
    b427:	41 5e                	pop    %r14
    b429:	41 5f                	pop    %r15
    b42b:	c3                   	retq   
    b42c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b431:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    b436:	31 f6                	xor    %esi,%esi
    b438:	89 44 24 08          	mov    %eax,0x8(%rsp)
    b43c:	e8 4f 7e ff ff       	callq  3290 <memset@plt>
    b441:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    b445:	eb a2                	jmp    b3e9 <unwrap+0x119>
    b447:	b9 00 9f ff ff       	mov    $0xffff9f00,%ecx
    b44c:	eb bd                	jmp    b40b <unwrap+0x13b>
    b44e:	e8 0d 7e ff ff       	callq  3260 <__stack_chk_fail@plt>
    b453:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b45a:	00 00 00 00 
    b45e:	66 90                	xchg   %ax,%ax

000000000000b460 <mbedtls_nist_kw_init>:
    b460:	f3 0f 1e fa          	endbr64 
    b464:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    b46b:	48 89 f9             	mov    %rdi,%rcx
    b46e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    b472:	31 c0                	xor    %eax,%eax
    b474:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
    b47b:	00 
    b47c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    b480:	48 29 f9             	sub    %rdi,%rcx
    b483:	83 c1 60             	add    $0x60,%ecx
    b486:	c1 e9 03             	shr    $0x3,%ecx
    b489:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    b48c:	c3                   	retq   
    b48d:	0f 1f 00             	nopl   (%rax)

000000000000b490 <mbedtls_nist_kw_setkey>:
    b490:	f3 0f 1e fa          	endbr64 
    b494:	41 57                	push   %r15
    b496:	41 89 f7             	mov    %esi,%r15d
    b499:	89 ce                	mov    %ecx,%esi
    b49b:	41 56                	push   %r14
    b49d:	49 89 d6             	mov    %rdx,%r14
    b4a0:	ba 01 00 00 00       	mov    $0x1,%edx
    b4a5:	41 55                	push   %r13
    b4a7:	41 89 cd             	mov    %ecx,%r13d
    b4aa:	41 54                	push   %r12
    b4ac:	49 89 fc             	mov    %rdi,%r12
    b4af:	44 89 ff             	mov    %r15d,%edi
    b4b2:	55                   	push   %rbp
    b4b3:	53                   	push   %rbx
    b4b4:	44 89 c3             	mov    %r8d,%ebx
    b4b7:	48 83 ec 08          	sub    $0x8,%rsp
    b4bb:	e8 10 a7 ff ff       	callq  5bd0 <mbedtls_cipher_info_from_values>
    b4c0:	48 85 c0             	test   %rax,%rax
    b4c3:	74 6b                	je     b530 <mbedtls_nist_kw_setkey+0xa0>
    b4c5:	83 78 20 10          	cmpl   $0x10,0x20(%rax)
    b4c9:	48 89 c5             	mov    %rax,%rbp
    b4cc:	75 62                	jne    b530 <mbedtls_nist_kw_setkey+0xa0>
    b4ce:	41 83 ff 02          	cmp    $0x2,%r15d
    b4d2:	75 54                	jne    b528 <mbedtls_nist_kw_setkey+0x98>
    b4d4:	4c 89 e7             	mov    %r12,%rdi
    b4d7:	e8 74 a7 ff ff       	callq  5c50 <mbedtls_cipher_free>
    b4dc:	48 89 ee             	mov    %rbp,%rsi
    b4df:	4c 89 e7             	mov    %r12,%rdi
    b4e2:	e8 c9 a7 ff ff       	callq  5cb0 <mbedtls_cipher_setup>
    b4e7:	85 c0                	test   %eax,%eax
    b4e9:	74 15                	je     b500 <mbedtls_nist_kw_setkey+0x70>
    b4eb:	48 83 c4 08          	add    $0x8,%rsp
    b4ef:	5b                   	pop    %rbx
    b4f0:	5d                   	pop    %rbp
    b4f1:	41 5c                	pop    %r12
    b4f3:	41 5d                	pop    %r13
    b4f5:	41 5e                	pop    %r14
    b4f7:	41 5f                	pop    %r15
    b4f9:	c3                   	retq   
    b4fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b500:	31 c9                	xor    %ecx,%ecx
    b502:	85 db                	test   %ebx,%ebx
    b504:	44 89 ea             	mov    %r13d,%edx
    b507:	4c 89 f6             	mov    %r14,%rsi
    b50a:	0f 95 c1             	setne  %cl
    b50d:	48 83 c4 08          	add    $0x8,%rsp
    b511:	4c 89 e7             	mov    %r12,%rdi
    b514:	5b                   	pop    %rbx
    b515:	5d                   	pop    %rbp
    b516:	41 5c                	pop    %r12
    b518:	41 5d                	pop    %r13
    b51a:	41 5e                	pop    %r14
    b51c:	41 5f                	pop    %r15
    b51e:	e9 2d a8 ff ff       	jmpq   5d50 <mbedtls_cipher_setkey>
    b523:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b528:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
    b52d:	eb bc                	jmp    b4eb <mbedtls_nist_kw_setkey+0x5b>
    b52f:	90                   	nop
    b530:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
    b535:	eb b4                	jmp    b4eb <mbedtls_nist_kw_setkey+0x5b>
    b537:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b53e:	00 00 

000000000000b540 <mbedtls_nist_kw_free>:
    b540:	f3 0f 1e fa          	endbr64 
    b544:	55                   	push   %rbp
    b545:	48 89 fd             	mov    %rdi,%rbp
    b548:	e8 03 a7 ff ff       	callq  5c50 <mbedtls_cipher_free>
    b54d:	48 89 ef             	mov    %rbp,%rdi
    b550:	be 60 00 00 00       	mov    $0x60,%esi
    b555:	5d                   	pop    %rbp
    b556:	e9 c5 9c ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
    b55b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b560 <mbedtls_nist_kw_wrap>:
    b560:	f3 0f 1e fa          	endbr64 
    b564:	41 57                	push   %r15
    b566:	41 56                	push   %r14
    b568:	41 55                	push   %r13
    b56a:	41 89 f5             	mov    %esi,%r13d
    b56d:	48 89 d6             	mov    %rdx,%rsi
    b570:	41 54                	push   %r12
    b572:	4d 89 c4             	mov    %r8,%r12
    b575:	55                   	push   %rbp
    b576:	48 89 fd             	mov    %rdi,%rbp
    b579:	53                   	push   %rbx
    b57a:	48 89 cb             	mov    %rcx,%rbx
    b57d:	48 83 ec 78          	sub    $0x78,%rsp
    b581:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    b586:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
    b58d:	00 00 
    b58f:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
    b594:	31 ff                	xor    %edi,%edi
    b596:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    b59d:	45 85 ed             	test   %r13d,%r13d
    b5a0:	0f 85 32 01 00 00    	jne    b6d8 <mbedtls_nist_kw_wrap+0x178>
    b5a6:	48 8d 41 08          	lea    0x8(%rcx),%rax
    b5aa:	48 3b 84 24 b0 00 00 	cmp    0xb0(%rsp),%rax
    b5b1:	00 
    b5b2:	0f 87 88 02 00 00    	ja     b840 <mbedtls_nist_kw_wrap+0x2e0>
    b5b8:	48 b8 e8 ff ff ff ff 	movabs $0x1ffffffffffffe8,%rax
    b5bf:	ff ff 01 
    b5c2:	48 8d 51 f0          	lea    -0x10(%rcx),%rdx
    b5c6:	48 39 c2             	cmp    %rax,%rdx
    b5c9:	0f 87 71 02 00 00    	ja     b840 <mbedtls_nist_kw_wrap+0x2e0>
    b5cf:	f6 c1 07             	test   $0x7,%cl
    b5d2:	0f 85 68 02 00 00    	jne    b840 <mbedtls_nist_kw_wrap+0x2e0>
    b5d8:	48 b8 a6 a6 a6 a6 a6 	movabs $0xa6a6a6a6a6a6a6a6,%rax
    b5df:	a6 a6 a6 
    b5e2:	48 89 ca             	mov    %rcx,%rdx
    b5e5:	48 c1 eb 03          	shr    $0x3,%rbx
    b5e9:	49 89 00             	mov    %rax,(%r8)
    b5ec:	49 8d 40 08          	lea    0x8(%r8),%rax
    b5f0:	48 89 c7             	mov    %rax,%rdi
    b5f3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b5f8:	e8 53 7d ff ff       	callq  3350 <memmove@plt>
    b5fd:	48 8d 43 01          	lea    0x1(%rbx),%rax
    b601:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
    b605:	48 8d 74 12 fa       	lea    -0x6(%rdx,%rdx,1),%rsi
    b60a:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    b60f:	48 c1 e0 03          	shl    $0x3,%rax
    b613:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    b618:	bb 01 00 00 00       	mov    $0x1,%ebx
    b61d:	4d 89 e7             	mov    %r12,%r15
    b620:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b625:	4c 01 e0             	add    %r12,%rax
    b628:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
    b62d:	49 89 dc             	mov    %rbx,%r12
    b630:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b635:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
    b63a:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    b63f:	4c 89 cb             	mov    %r9,%rbx
    b642:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b648:	49 8b 07             	mov    (%r15),%rax
    b64b:	4c 89 e9             	mov    %r13,%rcx
    b64e:	ba 10 00 00 00       	mov    $0x10,%edx
    b653:	4c 89 f6             	mov    %r14,%rsi
    b656:	48 89 ef             	mov    %rbp,%rdi
    b659:	4c 89 04 24          	mov    %r8,(%rsp)
    b65d:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    b662:	48 8b 03             	mov    (%rbx),%rax
    b665:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    b66a:	e8 e1 a9 ff ff       	callq  6050 <mbedtls_cipher_update>
    b66f:	85 c0                	test   %eax,%eax
    b671:	0f 85 b2 01 00 00    	jne    b829 <mbedtls_nist_kw_wrap+0x2c9>
    b677:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    b67c:	4c 8b 04 24          	mov    (%rsp),%r8
    b680:	b9 38 00 00 00       	mov    $0x38,%ecx
    b685:	49 89 07             	mov    %rax,(%r15)
    b688:	4c 89 f8             	mov    %r15,%rax
    b68b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b690:	4c 89 e2             	mov    %r12,%rdx
    b693:	48 d3 ea             	shr    %cl,%rdx
    b696:	83 e9 08             	sub    $0x8,%ecx
    b699:	30 10                	xor    %dl,(%rax)
    b69b:	48 83 c0 01          	add    $0x1,%rax
    b69f:	83 f9 f8             	cmp    $0xfffffff8,%ecx
    b6a2:	75 ec                	jne    b690 <mbedtls_nist_kw_wrap+0x130>
    b6a4:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    b6a9:	48 83 c3 08          	add    $0x8,%rbx
    b6ad:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    b6b1:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
    b6b6:	49 8d 44 24 01       	lea    0x1(%r12),%rax
    b6bb:	48 0f 46 5c 24 08    	cmovbe 0x8(%rsp),%rbx
    b6c1:	4c 39 64 24 10       	cmp    %r12,0x10(%rsp)
    b6c6:	0f 84 ea 00 00 00    	je     b7b6 <mbedtls_nist_kw_wrap+0x256>
    b6cc:	49 89 c4             	mov    %rax,%r12
    b6cf:	e9 74 ff ff ff       	jmpq   b648 <mbedtls_nist_kw_wrap+0xe8>
    b6d4:	0f 1f 40 00          	nopl   0x0(%rax)
    b6d8:	49 89 cf             	mov    %rcx,%r15
    b6db:	49 89 ce             	mov    %rcx,%r14
    b6de:	41 83 e7 07          	and    $0x7,%r15d
    b6e2:	74 0f                	je     b6f3 <mbedtls_nist_kw_wrap+0x193>
    b6e4:	b8 08 00 00 00       	mov    $0x8,%eax
    b6e9:	4c 29 f8             	sub    %r15,%rax
    b6ec:	49 89 c7             	mov    %rax,%r15
    b6ef:	4c 8d 34 01          	lea    (%rcx,%rax,1),%r14
    b6f3:	49 8d 46 08          	lea    0x8(%r14),%rax
    b6f7:	48 3b 84 24 b0 00 00 	cmp    0xb0(%rsp),%rax
    b6fe:	00 
    b6ff:	0f 87 3b 01 00 00    	ja     b840 <mbedtls_nist_kw_wrap+0x2e0>
    b705:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
    b709:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b70e:	48 39 c2             	cmp    %rax,%rdx
    b711:	0f 87 29 01 00 00    	ja     b840 <mbedtls_nist_kw_wrap+0x2e0>
    b717:	89 d8                	mov    %ebx,%eax
    b719:	41 c7 04 24 a6 59 59 	movl   $0xa65959a6,(%r12)
    b720:	a6 
    b721:	48 89 da             	mov    %rbx,%rdx
    b724:	0f c8                	bswap  %eax
    b726:	41 89 44 24 04       	mov    %eax,0x4(%r12)
    b72b:	49 8d 44 24 08       	lea    0x8(%r12),%rax
    b730:	48 89 c7             	mov    %rax,%rdi
    b733:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b738:	e8 d3 7b ff ff       	callq  3310 <memcpy@plt>
    b73d:	49 8d 4c 1c 08       	lea    0x8(%r12,%rbx,1),%rcx
    b742:	44 89 fe             	mov    %r15d,%esi
    b745:	45 85 ff             	test   %r15d,%r15d
    b748:	74 0f                	je     b759 <mbedtls_nist_kw_wrap+0x1f9>
    b74a:	31 c0                	xor    %eax,%eax
    b74c:	89 c2                	mov    %eax,%edx
    b74e:	83 c0 01             	add    $0x1,%eax
    b751:	c6 04 11 00          	movb   $0x0,(%rcx,%rdx,1)
    b755:	39 f0                	cmp    %esi,%eax
    b757:	72 f3                	jb     b74c <mbedtls_nist_kw_wrap+0x1ec>
    b759:	49 c1 ee 03          	shr    $0x3,%r14
    b75d:	49 8d 46 01          	lea    0x1(%r14),%rax
    b761:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    b768:	00 
    b769:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    b76e:	41 83 fd 01          	cmp    $0x1,%r13d
    b772:	0f 85 8a 00 00 00    	jne    b802 <mbedtls_nist_kw_wrap+0x2a2>
    b778:	48 83 fb 08          	cmp    $0x8,%rbx
    b77c:	0f 87 80 00 00 00    	ja     b802 <mbedtls_nist_kw_wrap+0x2a2>
    b782:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
    b787:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
    b78c:	4c 89 e1             	mov    %r12,%rcx
    b78f:	48 89 ef             	mov    %rbp,%rdi
    b792:	f3 41 0f 6f 04 24    	movdqu (%r12),%xmm0
    b798:	ba 10 00 00 00       	mov    $0x10,%edx
    b79d:	4c 89 f6             	mov    %r14,%rsi
    b7a0:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    b7a5:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    b7aa:	e8 a1 a8 ff ff       	callq  6050 <mbedtls_cipher_update>
    b7af:	41 89 c7             	mov    %eax,%r15d
    b7b2:	85 c0                	test   %eax,%eax
    b7b4:	75 62                	jne    b818 <mbedtls_nist_kw_wrap+0x2b8>
    b7b6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b7bb:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    b7c0:	45 31 ff             	xor    %r15d,%r15d
    b7c3:	48 89 30             	mov    %rsi,(%rax)
    b7c6:	be 10 00 00 00       	mov    $0x10,%esi
    b7cb:	4c 89 f7             	mov    %r14,%rdi
    b7ce:	e8 4d 9a ff ff       	callq  5220 <mbedtls_platform_zeroize>
    b7d3:	be 10 00 00 00       	mov    $0x10,%esi
    b7d8:	4c 89 ef             	mov    %r13,%rdi
    b7db:	e8 40 9a ff ff       	callq  5220 <mbedtls_platform_zeroize>
    b7e0:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    b7e5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b7ec:	00 00 
    b7ee:	75 6a                	jne    b85a <mbedtls_nist_kw_wrap+0x2fa>
    b7f0:	48 83 c4 78          	add    $0x78,%rsp
    b7f4:	44 89 f8             	mov    %r15d,%eax
    b7f7:	5b                   	pop    %rbx
    b7f8:	5d                   	pop    %rbp
    b7f9:	41 5c                	pop    %r12
    b7fb:	41 5d                	pop    %r13
    b7fd:	41 5e                	pop    %r14
    b7ff:	41 5f                	pop    %r15
    b801:	c3                   	retq   
    b802:	48 83 f8 02          	cmp    $0x2,%rax
    b806:	77 40                	ja     b848 <mbedtls_nist_kw_wrap+0x2e8>
    b808:	41 bf 00 9f ff ff    	mov    $0xffff9f00,%r15d
    b80e:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
    b813:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    b818:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b81d:	31 f6                	xor    %esi,%esi
    b81f:	4c 89 e7             	mov    %r12,%rdi
    b822:	e8 69 7a ff ff       	callq  3290 <memset@plt>
    b827:	eb 9d                	jmp    b7c6 <mbedtls_nist_kw_wrap+0x266>
    b829:	4d 89 fc             	mov    %r15,%r12
    b82c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b831:	31 f6                	xor    %esi,%esi
    b833:	41 89 c7             	mov    %eax,%r15d
    b836:	4c 89 e7             	mov    %r12,%rdi
    b839:	e8 52 7a ff ff       	callq  3290 <memset@plt>
    b83e:	eb 86                	jmp    b7c6 <mbedtls_nist_kw_wrap+0x266>
    b840:	41 bf 00 9f ff ff    	mov    $0xffff9f00,%r15d
    b846:	eb 98                	jmp    b7e0 <mbedtls_nist_kw_wrap+0x280>
    b848:	4c 6b f0 06          	imul   $0x6,%rax,%r14
    b84c:	49 8d 76 fa          	lea    -0x6(%r14),%rsi
    b850:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    b855:	e9 b5 fd ff ff       	jmpq   b60f <mbedtls_nist_kw_wrap+0xaf>
    b85a:	e8 01 7a ff ff       	callq  3260 <__stack_chk_fail@plt>
    b85f:	90                   	nop

000000000000b860 <mbedtls_nist_kw_unwrap>:
    b860:	f3 0f 1e fa          	endbr64 
    b864:	41 57                	push   %r15
    b866:	41 56                	push   %r14
    b868:	4c 8d 71 f8          	lea    -0x8(%rcx),%r14
    b86c:	41 55                	push   %r13
    b86e:	41 54                	push   %r12
    b870:	55                   	push   %rbp
    b871:	53                   	push   %rbx
    b872:	48 83 ec 48          	sub    $0x48,%rsp
    b876:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b87d:	00 00 
    b87f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    b884:	31 c0                	xor    %eax,%eax
    b886:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
    b88b:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    b892:	4c 3b b4 24 80 00 00 	cmp    0x80(%rsp),%r14
    b899:	00 
    b89a:	0f 87 d8 02 00 00    	ja     bb78 <mbedtls_nist_kw_unwrap+0x318>
    b8a0:	49 89 d2             	mov    %rdx,%r10
    b8a3:	4d 89 c4             	mov    %r8,%r12
    b8a6:	4c 89 cd             	mov    %r9,%rbp
    b8a9:	85 f6                	test   %esi,%esi
    b8ab:	0f 85 bf 00 00 00    	jne    b970 <mbedtls_nist_kw_unwrap+0x110>
    b8b1:	48 b8 e8 ff ff ff ff 	movabs $0x1ffffffffffffe8,%rax
    b8b8:	ff ff 01 
    b8bb:	48 8d 51 e8          	lea    -0x18(%rcx),%rdx
    b8bf:	48 39 c2             	cmp    %rax,%rdx
    b8c2:	0f 87 b0 02 00 00    	ja     bb78 <mbedtls_nist_kw_unwrap+0x318>
    b8c8:	f6 c1 07             	test   $0x7,%cl
    b8cb:	0f 85 a7 02 00 00    	jne    bb78 <mbedtls_nist_kw_unwrap+0x318>
    b8d1:	48 c1 e9 03          	shr    $0x3,%rcx
    b8d5:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    b8da:	4c 89 d6             	mov    %r10,%rsi
    b8dd:	48 89 ca             	mov    %rcx,%rdx
    b8e0:	4c 89 e9             	mov    %r13,%rcx
    b8e3:	e8 e8 f9 ff ff       	callq  b2d0 <unwrap>
    b8e8:	41 89 c7             	mov    %eax,%r15d
    b8eb:	85 c0                	test   %eax,%eax
    b8ed:	0f 85 95 01 00 00    	jne    ba88 <mbedtls_nist_kw_unwrap+0x228>
    b8f3:	ba 08 00 00 00       	mov    $0x8,%edx
    b8f8:	4c 89 ee             	mov    %r13,%rsi
    b8fb:	48 8d 3d 8e 7c 01 00 	lea    0x17c8e(%rip),%rdi        # 23590 <NIST_KW_ICV1>
    b902:	e8 19 ba ff ff       	callq  7320 <mbedtls_ct_memcmp>
    b907:	88 44 24 0e          	mov    %al,0xe(%rsp)
    b90b:	84 c0                	test   %al,%al
    b90d:	0f 85 dd 01 00 00    	jne    baf0 <mbedtls_nist_kw_unwrap+0x290>
    b913:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b918:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
    b91d:	be 01 00 00 00       	mov    $0x1,%esi
    b922:	e8 f9 98 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    b927:	48 8d 7c 24 0e       	lea    0xe(%rsp),%rdi
    b92c:	be 01 00 00 00       	mov    $0x1,%esi
    b931:	e8 ea 98 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    b936:	be 08 00 00 00       	mov    $0x8,%esi
    b93b:	4c 89 ef             	mov    %r13,%rdi
    b93e:	e8 dd 98 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    b943:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    b948:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b94f:	00 00 
    b951:	0f 85 2c 02 00 00    	jne    bb83 <mbedtls_nist_kw_unwrap+0x323>
    b957:	48 83 c4 48          	add    $0x48,%rsp
    b95b:	44 89 f8             	mov    %r15d,%eax
    b95e:	5b                   	pop    %rbx
    b95f:	5d                   	pop    %rbp
    b960:	41 5c                	pop    %r12
    b962:	41 5d                	pop    %r13
    b964:	41 5e                	pop    %r14
    b966:	41 5f                	pop    %r15
    b968:	c3                   	retq   
    b969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b970:	83 fe 01             	cmp    $0x1,%esi
    b973:	0f 85 37 01 00 00    	jne    bab0 <mbedtls_nist_kw_unwrap+0x250>
    b979:	48 8d 51 f0          	lea    -0x10(%rcx),%rdx
    b97d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    b982:	48 39 c2             	cmp    %rax,%rdx
    b985:	0f 87 ed 01 00 00    	ja     bb78 <mbedtls_nist_kw_unwrap+0x318>
    b98b:	48 89 cb             	mov    %rcx,%rbx
    b98e:	83 e3 07             	and    $0x7,%ebx
    b991:	0f 85 e1 01 00 00    	jne    bb78 <mbedtls_nist_kw_unwrap+0x318>
    b997:	48 83 f9 10          	cmp    $0x10,%rcx
    b99b:	0f 84 1f 01 00 00    	je     bac0 <mbedtls_nist_kw_unwrap+0x260>
    b9a1:	48 89 ca             	mov    %rcx,%rdx
    b9a4:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    b9a9:	4c 89 d6             	mov    %r10,%rsi
    b9ac:	48 c1 ea 03          	shr    $0x3,%rdx
    b9b0:	4c 89 e9             	mov    %r13,%rcx
    b9b3:	e8 18 f9 ff ff       	callq  b2d0 <unwrap>
    b9b8:	41 89 c7             	mov    %eax,%r15d
    b9bb:	85 c0                	test   %eax,%eax
    b9bd:	0f 85 c5 00 00 00    	jne    ba88 <mbedtls_nist_kw_unwrap+0x228>
    b9c3:	ba 04 00 00 00       	mov    $0x4,%edx
    b9c8:	4c 89 ee             	mov    %r13,%rsi
    b9cb:	48 8d 3d ba 7b 01 00 	lea    0x17bba(%rip),%rdi        # 2358c <NIST_KW_ICV2>
    b9d2:	e8 49 b9 ff ff       	callq  7320 <mbedtls_ct_memcmp>
    b9d7:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
    b9dc:	3c 01                	cmp    $0x1,%al
    b9de:	45 19 ff             	sbb    %r15d,%r15d
    b9e1:	41 0f c9             	bswap  %r9d
    b9e4:	45 89 c9             	mov    %r9d,%r9d
    b9e7:	41 f7 d7             	not    %r15d
    b9ea:	4d 29 ce             	sub    %r9,%r14
    b9ed:	41 81 e7 00 9d ff ff 	and    $0xffff9d00,%r15d
    b9f4:	49 83 fe 07          	cmp    $0x7,%r14
    b9f8:	76 0a                	jbe    ba04 <mbedtls_nist_kw_unwrap+0x1a4>
    b9fa:	41 83 e6 07          	and    $0x7,%r14d
    b9fe:	41 bf 00 9d ff ff    	mov    $0xffff9d00,%r15d
    ba04:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    ba08:	b8 08 00 00 00       	mov    $0x8,%eax
    ba0d:	c6 44 24 0e 00       	movb   $0x0,0xe(%rsp)
    ba12:	31 c9                	xor    %ecx,%ecx
    ba14:	0f b6 7c 24 0f       	movzbl 0xf(%rsp),%edi
    ba19:	4c 29 f0             	sub    %r14,%rax
    ba1c:	45 31 d2             	xor    %r10d,%r10d
    ba1f:	45 31 db             	xor    %r11d,%r11d
    ba22:	4b 8d 34 04          	lea    (%r12,%r8,1),%rsi
    ba26:	eb 1a                	jmp    ba42 <mbedtls_nist_kw_unwrap+0x1e2>
    ba28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ba2f:	00 
    ba30:	48 83 c3 01          	add    $0x1,%rbx
    ba34:	09 d1                	or     %edx,%ecx
    ba36:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    ba3c:	48 83 fb 08          	cmp    $0x8,%rbx
    ba40:	74 1c                	je     ba5e <mbedtls_nist_kw_unwrap+0x1fe>
    ba42:	0f b6 54 1e f8       	movzbl -0x8(%rsi,%rbx,1),%edx
    ba47:	48 39 d8             	cmp    %rbx,%rax
    ba4a:	76 e4                	jbe    ba30 <mbedtls_nist_kw_unwrap+0x1d0>
    ba4c:	48 83 c3 01          	add    $0x1,%rbx
    ba50:	09 d7                	or     %edx,%edi
    ba52:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    ba58:	48 83 fb 08          	cmp    $0x8,%rbx
    ba5c:	75 e4                	jne    ba42 <mbedtls_nist_kw_unwrap+0x1e2>
    ba5e:	45 84 db             	test   %r11b,%r11b
    ba61:	0f 84 99 00 00 00    	je     bb00 <mbedtls_nist_kw_unwrap+0x2a0>
    ba67:	88 4c 24 0e          	mov    %cl,0xe(%rsp)
    ba6b:	45 84 d2             	test   %r10b,%r10b
    ba6e:	74 05                	je     ba75 <mbedtls_nist_kw_unwrap+0x215>
    ba70:	40 88 7c 24 0f       	mov    %dil,0xf(%rsp)
    ba75:	84 c9                	test   %cl,%cl
    ba77:	0f 84 8d 00 00 00    	je     bb0a <mbedtls_nist_kw_unwrap+0x2aa>
    ba7d:	41 bf 00 9d ff ff    	mov    $0xffff9d00,%r15d
    ba83:	eb 07                	jmp    ba8c <mbedtls_nist_kw_unwrap+0x22c>
    ba85:	0f 1f 00             	nopl   (%rax)
    ba88:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    ba8c:	4c 89 c2             	mov    %r8,%rdx
    ba8f:	31 f6                	xor    %esi,%esi
    ba91:	4c 89 e7             	mov    %r12,%rdi
    ba94:	e8 f7 77 ff ff       	callq  3290 <memset@plt>
    ba99:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    baa0:	00 
    baa1:	e9 72 fe ff ff       	jmpq   b918 <mbedtls_nist_kw_unwrap+0xb8>
    baa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    baad:	00 00 00 
    bab0:	45 31 c0             	xor    %r8d,%r8d
    bab3:	41 bf 80 9f ff ff    	mov    $0xffff9f80,%r15d
    bab9:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    babe:	eb cc                	jmp    ba8c <mbedtls_nist_kw_unwrap+0x22c>
    bac0:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    bac5:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    baca:	ba 10 00 00 00       	mov    $0x10,%edx
    bacf:	4c 89 d6             	mov    %r10,%rsi
    bad2:	4c 89 e9             	mov    %r13,%rcx
    bad5:	e8 76 a5 ff ff       	callq  6050 <mbedtls_cipher_update>
    bada:	41 89 c7             	mov    %eax,%r15d
    badd:	85 c0                	test   %eax,%eax
    badf:	74 5f                	je     bb40 <mbedtls_nist_kw_unwrap+0x2e0>
    bae1:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    bae5:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    baea:	eb a0                	jmp    ba8c <mbedtls_nist_kw_unwrap+0x22c>
    baec:	0f 1f 40 00          	nopl   0x0(%rax)
    baf0:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    baf4:	41 bf 00 9d ff ff    	mov    $0xffff9d00,%r15d
    bafa:	eb 90                	jmp    ba8c <mbedtls_nist_kw_unwrap+0x22c>
    bafc:	0f 1f 40 00          	nopl   0x0(%rax)
    bb00:	45 84 d2             	test   %r10b,%r10b
    bb03:	74 05                	je     bb0a <mbedtls_nist_kw_unwrap+0x2aa>
    bb05:	40 88 7c 24 0f       	mov    %dil,0xf(%rsp)
    bb0a:	45 85 ff             	test   %r15d,%r15d
    bb0d:	0f 85 79 ff ff ff    	jne    ba8c <mbedtls_nist_kw_unwrap+0x22c>
    bb13:	4d 01 cc             	add    %r9,%r12
    bb16:	44 89 f1             	mov    %r14d,%ecx
    bb19:	45 85 f6             	test   %r14d,%r14d
    bb1c:	74 10                	je     bb2e <mbedtls_nist_kw_unwrap+0x2ce>
    bb1e:	31 c0                	xor    %eax,%eax
    bb20:	89 c2                	mov    %eax,%edx
    bb22:	83 c0 01             	add    $0x1,%eax
    bb25:	41 c6 04 14 00       	movb   $0x0,(%r12,%rdx,1)
    bb2a:	39 c8                	cmp    %ecx,%eax
    bb2c:	72 f2                	jb     bb20 <mbedtls_nist_kw_unwrap+0x2c0>
    bb2e:	4c 89 4d 00          	mov    %r9,0x0(%rbp)
    bb32:	e9 e1 fd ff ff       	jmpq   b918 <mbedtls_nist_kw_unwrap+0xb8>
    bb37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bb3e:	00 00 
    bb40:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    bb45:	4c 89 ef             	mov    %r13,%rdi
    bb48:	be 10 00 00 00       	mov    $0x10,%esi
    bb4d:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    bb52:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bb57:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    bb5c:	49 89 04 24          	mov    %rax,(%r12)
    bb60:	e8 bb 96 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    bb65:	48 c7 45 00 08 00 00 	movq   $0x8,0x0(%rbp)
    bb6c:	00 
    bb6d:	e9 51 fe ff ff       	jmpq   b9c3 <mbedtls_nist_kw_unwrap+0x163>
    bb72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bb78:	41 bf 00 9f ff ff    	mov    $0xffff9f00,%r15d
    bb7e:	e9 c0 fd ff ff       	jmpq   b943 <mbedtls_nist_kw_unwrap+0xe3>
    bb83:	e8 d8 76 ff ff       	callq  3260 <__stack_chk_fail@plt>
    bb88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bb8f:	00 

000000000000bb90 <mbedtls_nist_kw_self_test>:
    bb90:	f3 0f 1e fa          	endbr64 
    bb94:	41 57                	push   %r15
    bb96:	b9 0c 00 00 00       	mov    $0xc,%ecx
    bb9b:	41 56                	push   %r14
    bb9d:	41 55                	push   %r13
    bb9f:	41 54                	push   %r12
    bba1:	41 bc 10 00 00 00    	mov    $0x10,%r12d
    bba7:	55                   	push   %rbp
    bba8:	41 c1 e4 03          	shl    $0x3,%r12d
    bbac:	53                   	push   %rbx
    bbad:	31 db                	xor    %ebx,%ebx
    bbaf:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    bbb6:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    bbba:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    bbbf:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    bbc3:	48 89 ef             	mov    %rbp,%rdi
    bbc6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bbcd:	00 00 
    bbcf:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    bbd6:	00 
    bbd7:	31 c0                	xor    %eax,%eax
    bbd9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    bbdc:	85 f6                	test   %esi,%esi
    bbde:	0f 85 55 01 00 00    	jne    bd39 <mbedtls_nist_kw_self_test+0x1a9>
    bbe4:	48 8d 05 35 79 01 00 	lea    0x17935(%rip),%rax        # 23520 <kw_key>
    bbeb:	44 89 e1             	mov    %r12d,%ecx
    bbee:	be 02 00 00 00       	mov    $0x2,%esi
    bbf3:	48 89 ef             	mov    %rbp,%rdi
    bbf6:	4c 8d 34 d8          	lea    (%rax,%rbx,8),%r14
    bbfa:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bc00:	4c 89 f2             	mov    %r14,%rdx
    bc03:	e8 88 f8 ff ff       	callq  b490 <mbedtls_nist_kw_setkey>
    bc08:	85 c0                	test   %eax,%eax
    bc0a:	0f 85 20 04 00 00    	jne    c030 <mbedtls_nist_kw_self_test+0x4a0>
    bc10:	48 8d 05 59 78 01 00 	lea    0x17859(%rip),%rax        # 23470 <kw_msg_len>
    bc17:	48 8d 0d 82 78 01 00 	lea    0x17882(%rip),%rcx        # 234a0 <kw_msg>
    bc1e:	31 f6                	xor    %esi,%esi
    bc20:	48 89 ef             	mov    %rbp,%rdi
    bc23:	4c 8b 2c 58          	mov    (%rax,%rbx,2),%r13
    bc27:	48 8d 04 9b          	lea    (%rbx,%rbx,4),%rax
    bc2b:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
    bc32:	00 
    bc33:	48 8d 14 41          	lea    (%rcx,%rax,2),%rdx
    bc37:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
    bc3c:	48 83 ec 08          	sub    $0x8,%rsp
    bc40:	4d 89 f8             	mov    %r15,%r8
    bc43:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    bc48:	4c 89 e9             	mov    %r13,%rcx
    bc4b:	49 89 c1             	mov    %rax,%r9
    bc4e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bc53:	6a 30                	pushq  $0x30
    bc55:	e8 06 f9 ff ff       	callq  b560 <mbedtls_nist_kw_wrap>
    bc5a:	5a                   	pop    %rdx
    bc5b:	59                   	pop    %rcx
    bc5c:	85 c0                	test   %eax,%eax
    bc5e:	0f 85 34 03 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    bc64:	48 8d 05 e5 77 01 00 	lea    0x177e5(%rip),%rax        # 23450 <kw_out_len>
    bc6b:	48 8b 14 58          	mov    (%rax,%rbx,2),%rdx
    bc6f:	48 3b 54 24 28       	cmp    0x28(%rsp),%rdx
    bc74:	0f 85 1e 03 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    bc7a:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
    bc7e:	48 8d 0d 3b 77 01 00 	lea    0x1773b(%rip),%rcx        # 233c0 <kw_res>
    bc85:	4c 89 ff             	mov    %r15,%rdi
    bc88:	48 8d 34 81          	lea    (%rcx,%rax,4),%rsi
    bc8c:	e8 0f 76 ff ff       	callq  32a0 <memcmp@plt>
    bc91:	85 c0                	test   %eax,%eax
    bc93:	0f 85 ff 02 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    bc99:	45 31 c0             	xor    %r8d,%r8d
    bc9c:	44 89 e1             	mov    %r12d,%ecx
    bc9f:	4c 89 f2             	mov    %r14,%rdx
    bca2:	be 02 00 00 00       	mov    $0x2,%esi
    bca7:	48 89 ef             	mov    %rbp,%rdi
    bcaa:	e8 e1 f7 ff ff       	callq  b490 <mbedtls_nist_kw_setkey>
    bcaf:	85 c0                	test   %eax,%eax
    bcb1:	0f 85 79 03 00 00    	jne    c030 <mbedtls_nist_kw_self_test+0x4a0>
    bcb7:	48 83 ec 08          	sub    $0x8,%rsp
    bcbb:	4d 89 f8             	mov    %r15,%r8
    bcbe:	4c 89 fa             	mov    %r15,%rdx
    bcc1:	31 f6                	xor    %esi,%esi
    bcc3:	6a 30                	pushq  $0x30
    bcc5:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    bcca:	48 89 ef             	mov    %rbp,%rdi
    bccd:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    bcd2:	e8 89 fb ff ff       	callq  b860 <mbedtls_nist_kw_unwrap>
    bcd7:	41 5c                	pop    %r12
    bcd9:	41 5e                	pop    %r14
    bcdb:	85 c0                	test   %eax,%eax
    bcdd:	0f 85 15 03 00 00    	jne    bff8 <mbedtls_nist_kw_self_test+0x468>
    bce3:	4c 3b 6c 24 28       	cmp    0x28(%rsp),%r13
    bce8:	0f 85 0a 03 00 00    	jne    bff8 <mbedtls_nist_kw_self_test+0x468>
    bcee:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    bcf3:	4c 89 ea             	mov    %r13,%rdx
    bcf6:	4c 89 ff             	mov    %r15,%rdi
    bcf9:	e8 a2 75 ff ff       	callq  32a0 <memcmp@plt>
    bcfe:	85 c0                	test   %eax,%eax
    bd00:	0f 85 f2 02 00 00    	jne    bff8 <mbedtls_nist_kw_self_test+0x468>
    bd06:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
    bd0b:	45 85 db             	test   %r11d,%r11d
    bd0e:	0f 85 cc 01 00 00    	jne    bee0 <mbedtls_nist_kw_self_test+0x350>
    bd14:	48 83 c3 04          	add    $0x4,%rbx
    bd18:	48 83 fb 0c          	cmp    $0xc,%rbx
    bd1c:	74 3a                	je     bd58 <mbedtls_nist_kw_self_test+0x1c8>
    bd1e:	48 8d 05 5b 78 01 00 	lea    0x1785b(%rip),%rax        # 23580 <key_len>
    bd25:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    bd29:	44 8b 24 18          	mov    (%rax,%rbx,1),%r12d
    bd2d:	41 c1 e4 03          	shl    $0x3,%r12d
    bd31:	85 f6                	test   %esi,%esi
    bd33:	0f 84 ab fe ff ff    	je     bbe4 <mbedtls_nist_kw_self_test+0x54>
    bd39:	44 89 e2             	mov    %r12d,%edx
    bd3c:	48 8d 35 74 74 01 00 	lea    0x17474(%rip),%rsi        # 231b7 <md5_test_buf+0x237>
    bd43:	bf 01 00 00 00       	mov    $0x1,%edi
    bd48:	31 c0                	xor    %eax,%eax
    bd4a:	e8 f1 75 ff ff       	callq  3340 <__printf_chk@plt>
    bd4f:	e9 90 fe ff ff       	jmpq   bbe4 <mbedtls_nist_kw_self_test+0x54>
    bd54:	0f 1f 40 00          	nopl   0x0(%rax)
    bd58:	31 db                	xor    %ebx,%ebx
    bd5a:	41 bd 10 00 00 00    	mov    $0x10,%r13d
    bd60:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
    bd65:	41 c1 e5 03          	shl    $0x3,%r13d
    bd69:	48 c7 44 24 28 30 00 	movq   $0x30,0x28(%rsp)
    bd70:	00 00 
    bd72:	45 85 d2             	test   %r10d,%r10d
    bd75:	0f 85 dd 01 00 00    	jne    bf58 <mbedtls_nist_kw_self_test+0x3c8>
    bd7b:	49 89 d9             	mov    %rbx,%r9
    bd7e:	48 8d 05 db 75 01 00 	lea    0x175db(%rip),%rax        # 23360 <kwp_key>
    bd85:	44 89 e9             	mov    %r13d,%ecx
    bd88:	48 89 ef             	mov    %rbp,%rdi
    bd8b:	49 c1 e1 05          	shl    $0x5,%r9
    bd8f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bd95:	be 02 00 00 00       	mov    $0x2,%esi
    bd9a:	4e 8d 34 08          	lea    (%rax,%r9,1),%r14
    bd9e:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    bda3:	4c 89 f2             	mov    %r14,%rdx
    bda6:	e8 e5 f6 ff ff       	callq  b490 <mbedtls_nist_kw_setkey>
    bdab:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    bdb0:	85 c0                	test   %eax,%eax
    bdb2:	41 89 c0             	mov    %eax,%r8d
    bdb5:	0f 85 a5 02 00 00    	jne    c060 <mbedtls_nist_kw_self_test+0x4d0>
    bdbb:	48 8d 05 0e 75 01 00 	lea    0x1750e(%rip),%rax        # 232d0 <kwp_msg_len>
    bdc2:	49 29 d9             	sub    %rbx,%r9
    bdc5:	4d 89 f8             	mov    %r15,%r8
    bdc8:	48 89 ef             	mov    %rbp,%rdi
    bdcb:	4c 8b 24 d8          	mov    (%rax,%rbx,8),%r12
    bdcf:	48 8d 05 2a 75 01 00 	lea    0x1752a(%rip),%rax        # 23300 <kwp_msg>
    bdd6:	48 83 ec 08          	sub    $0x8,%rsp
    bdda:	be 01 00 00 00       	mov    $0x1,%esi
    bddf:	4c 01 c8             	add    %r9,%rax
    bde2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    bde7:	4c 89 e1             	mov    %r12,%rcx
    bdea:	48 89 c2             	mov    %rax,%rdx
    bded:	6a 30                	pushq  $0x30
    bdef:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    bdf4:	e8 67 f7 ff ff       	callq  b560 <mbedtls_nist_kw_wrap>
    bdf9:	41 58                	pop    %r8
    bdfb:	41 59                	pop    %r9
    bdfd:	85 c0                	test   %eax,%eax
    bdff:	0f 85 93 01 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    be05:	48 8d 05 14 74 01 00 	lea    0x17414(%rip),%rax        # 23220 <kwp_out_len>
    be0c:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    be10:	48 3b 54 24 28       	cmp    0x28(%rsp),%rdx
    be15:	0f 85 7d 01 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    be1b:	48 8d 34 5b          	lea    (%rbx,%rbx,2),%rsi
    be1f:	48 8d 05 1a 74 01 00 	lea    0x1741a(%rip),%rax        # 23240 <kwp_res>
    be26:	4c 89 ff             	mov    %r15,%rdi
    be29:	48 c1 e6 04          	shl    $0x4,%rsi
    be2d:	48 01 c6             	add    %rax,%rsi
    be30:	e8 6b 74 ff ff       	callq  32a0 <memcmp@plt>
    be35:	85 c0                	test   %eax,%eax
    be37:	0f 85 5b 01 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    be3d:	45 31 c0             	xor    %r8d,%r8d
    be40:	44 89 e9             	mov    %r13d,%ecx
    be43:	4c 89 f2             	mov    %r14,%rdx
    be46:	be 02 00 00 00       	mov    $0x2,%esi
    be4b:	48 89 ef             	mov    %rbp,%rdi
    be4e:	e8 3d f6 ff ff       	callq  b490 <mbedtls_nist_kw_setkey>
    be53:	41 89 c0             	mov    %eax,%r8d
    be56:	85 c0                	test   %eax,%eax
    be58:	0f 85 02 02 00 00    	jne    c060 <mbedtls_nist_kw_self_test+0x4d0>
    be5e:	48 83 ec 08          	sub    $0x8,%rsp
    be62:	be 01 00 00 00       	mov    $0x1,%esi
    be67:	4d 89 f8             	mov    %r15,%r8
    be6a:	4c 89 fa             	mov    %r15,%rdx
    be6d:	6a 30                	pushq  $0x30
    be6f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    be74:	48 89 ef             	mov    %rbp,%rdi
    be77:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    be7c:	e8 df f9 ff ff       	callq  b860 <mbedtls_nist_kw_unwrap>
    be81:	59                   	pop    %rcx
    be82:	5e                   	pop    %rsi
    be83:	85 c0                	test   %eax,%eax
    be85:	0f 85 0d 01 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    be8b:	4c 3b 64 24 28       	cmp    0x28(%rsp),%r12
    be90:	0f 85 02 01 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    be96:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    be9b:	4c 89 e2             	mov    %r12,%rdx
    be9e:	4c 89 ff             	mov    %r15,%rdi
    bea1:	e8 fa 73 ff ff       	callq  32a0 <memcmp@plt>
    bea6:	41 89 c0             	mov    %eax,%r8d
    bea9:	85 c0                	test   %eax,%eax
    beab:	0f 85 e7 00 00 00    	jne    bf98 <mbedtls_nist_kw_self_test+0x408>
    beb1:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    beb5:	85 d2                	test   %edx,%edx
    beb7:	0f 85 bb 00 00 00    	jne    bf78 <mbedtls_nist_kw_self_test+0x3e8>
    bebd:	48 83 c3 01          	add    $0x1,%rbx
    bec1:	48 83 fb 03          	cmp    $0x3,%rbx
    bec5:	74 31                	je     bef8 <mbedtls_nist_kw_self_test+0x368>
    bec7:	48 8d 05 b2 76 01 00 	lea    0x176b2(%rip),%rax        # 23580 <key_len>
    bece:	44 8b 2c 98          	mov    (%rax,%rbx,4),%r13d
    bed2:	e9 89 fe ff ff       	jmpq   bd60 <mbedtls_nist_kw_self_test+0x1d0>
    bed7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bede:	00 00 
    bee0:	48 8d 3d fa 72 01 00 	lea    0x172fa(%rip),%rdi        # 231e1 <md5_test_buf+0x261>
    bee7:	e8 14 73 ff ff       	callq  3200 <puts@plt>
    beec:	e9 23 fe ff ff       	jmpq   bd14 <mbedtls_nist_kw_self_test+0x184>
    bef1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bef8:	48 89 ef             	mov    %rbp,%rdi
    befb:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    bf00:	e8 4b 9d ff ff       	callq  5c50 <mbedtls_cipher_free>
    bf05:	be 60 00 00 00       	mov    $0x60,%esi
    bf0a:	48 89 ef             	mov    %rbp,%rdi
    bf0d:	e8 0e 93 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    bf12:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    bf16:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
    bf1b:	85 c0                	test   %eax,%eax
    bf1d:	0f 85 b5 00 00 00    	jne    bfd8 <mbedtls_nist_kw_self_test+0x448>
    bf23:	45 31 c0             	xor    %r8d,%r8d
    bf26:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    bf2d:	00 
    bf2e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    bf35:	00 00 
    bf37:	0f 85 6a 01 00 00    	jne    c0a7 <mbedtls_nist_kw_self_test+0x517>
    bf3d:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    bf44:	44 89 c0             	mov    %r8d,%eax
    bf47:	5b                   	pop    %rbx
    bf48:	5d                   	pop    %rbp
    bf49:	41 5c                	pop    %r12
    bf4b:	41 5d                	pop    %r13
    bf4d:	41 5e                	pop    %r14
    bf4f:	41 5f                	pop    %r15
    bf51:	c3                   	retq   
    bf52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bf58:	44 89 ea             	mov    %r13d,%edx
    bf5b:	48 8d 35 87 72 01 00 	lea    0x17287(%rip),%rsi        # 231e9 <md5_test_buf+0x269>
    bf62:	bf 01 00 00 00       	mov    $0x1,%edi
    bf67:	31 c0                	xor    %eax,%eax
    bf69:	e8 d2 73 ff ff       	callq  3340 <__printf_chk@plt>
    bf6e:	e9 08 fe ff ff       	jmpq   bd7b <mbedtls_nist_kw_self_test+0x1eb>
    bf73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bf78:	48 8d 3d 62 72 01 00 	lea    0x17262(%rip),%rdi        # 231e1 <md5_test_buf+0x261>
    bf7f:	89 44 24 18          	mov    %eax,0x18(%rsp)
    bf83:	e8 78 72 ff ff       	callq  3200 <puts@plt>
    bf88:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
    bf8d:	e9 2b ff ff ff       	jmpq   bebd <mbedtls_nist_kw_self_test+0x32d>
    bf92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bf98:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    bf9c:	85 c0                	test   %eax,%eax
    bf9e:	74 64                	je     c004 <mbedtls_nist_kw_self_test+0x474>
    bfa0:	48 8d 35 31 72 01 00 	lea    0x17231(%rip),%rsi        # 231d8 <md5_test_buf+0x258>
    bfa7:	bf 01 00 00 00       	mov    $0x1,%edi
    bfac:	31 c0                	xor    %eax,%eax
    bfae:	e8 8d 73 ff ff       	callq  3340 <__printf_chk@plt>
    bfb3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bfb9:	48 89 ef             	mov    %rbp,%rdi
    bfbc:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    bfc1:	e8 8a 9c ff ff       	callq  5c50 <mbedtls_cipher_free>
    bfc6:	be 60 00 00 00       	mov    $0x60,%esi
    bfcb:	48 89 ef             	mov    %rbp,%rdi
    bfce:	e8 4d 92 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    bfd3:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    bfd8:	bf 0a 00 00 00       	mov    $0xa,%edi
    bfdd:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    bfe2:	e8 09 72 ff ff       	callq  31f0 <putchar@plt>
    bfe7:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    bfec:	e9 35 ff ff ff       	jmpq   bf26 <mbedtls_nist_kw_self_test+0x396>
    bff1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bff8:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
    bffc:	85 db                	test   %ebx,%ebx
    bffe:	0f 85 8c 00 00 00    	jne    c090 <mbedtls_nist_kw_self_test+0x500>
    c004:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c00a:	48 89 ef             	mov    %rbp,%rdi
    c00d:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    c012:	e8 39 9c ff ff       	callq  5c50 <mbedtls_cipher_free>
    c017:	be 60 00 00 00       	mov    $0x60,%esi
    c01c:	48 89 ef             	mov    %rbp,%rdi
    c01f:	e8 fc 91 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    c024:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    c029:	e9 f8 fe ff ff       	jmpq   bf26 <mbedtls_nist_kw_self_test+0x396>
    c02e:	66 90                	xchg   %ax,%ax
    c030:	44 8b 7c 24 0c       	mov    0xc(%rsp),%r15d
    c035:	41 89 c0             	mov    %eax,%r8d
    c038:	45 85 ff             	test   %r15d,%r15d
    c03b:	74 cd                	je     c00a <mbedtls_nist_kw_self_test+0x47a>
    c03d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    c041:	48 8d 35 7c 71 01 00 	lea    0x1717c(%rip),%rsi        # 231c4 <md5_test_buf+0x244>
    c048:	bf 01 00 00 00       	mov    $0x1,%edi
    c04d:	31 c0                	xor    %eax,%eax
    c04f:	e8 ec 72 ff ff       	callq  3340 <__printf_chk@plt>
    c054:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    c059:	e9 5b ff ff ff       	jmpq   bfb9 <mbedtls_nist_kw_self_test+0x429>
    c05e:	66 90                	xchg   %ax,%ax
    c060:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    c064:	85 ff                	test   %edi,%edi
    c066:	74 a2                	je     c00a <mbedtls_nist_kw_self_test+0x47a>
    c068:	48 8d 35 88 71 01 00 	lea    0x17188(%rip),%rsi        # 231f7 <md5_test_buf+0x277>
    c06f:	bf 01 00 00 00       	mov    $0x1,%edi
    c074:	31 c0                	xor    %eax,%eax
    c076:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    c07b:	e8 c0 72 ff ff       	callq  3340 <__printf_chk@plt>
    c080:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    c085:	e9 2f ff ff ff       	jmpq   bfb9 <mbedtls_nist_kw_self_test+0x429>
    c08a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c090:	48 8d 3d 26 7a 01 00 	lea    0x17a26(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    c097:	e8 64 71 ff ff       	callq  3200 <puts@plt>
    c09c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c0a2:	e9 12 ff ff ff       	jmpq   bfb9 <mbedtls_nist_kw_self_test+0x429>
    c0a7:	e8 b4 71 ff ff       	callq  3260 <__stack_chk_fail@plt>
    c0ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c0b0 <mbedtls_ripemd160_init>:
    c0b0:	f3 0f 1e fa          	endbr64 
    c0b4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    c0bb:	48 89 f9             	mov    %rdi,%rcx
    c0be:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    c0c2:	31 c0                	xor    %eax,%eax
    c0c4:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
    c0cb:	00 
    c0cc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c0d0:	48 29 f9             	sub    %rdi,%rcx
    c0d3:	83 c1 5c             	add    $0x5c,%ecx
    c0d6:	c1 e9 03             	shr    $0x3,%ecx
    c0d9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    c0dc:	c3                   	retq   
    c0dd:	0f 1f 00             	nopl   (%rax)

000000000000c0e0 <mbedtls_ripemd160_free>:
    c0e0:	f3 0f 1e fa          	endbr64 
    c0e4:	48 85 ff             	test   %rdi,%rdi
    c0e7:	74 0f                	je     c0f8 <mbedtls_ripemd160_free+0x18>
    c0e9:	be 5c 00 00 00       	mov    $0x5c,%esi
    c0ee:	e9 2d 91 ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
    c0f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c0f8:	c3                   	retq   
    c0f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c100 <mbedtls_ripemd160_clone>:
    c100:	f3 0f 1e fa          	endbr64 
    c104:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    c108:	0f 11 07             	movups %xmm0,(%rdi)
    c10b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    c110:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    c114:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    c119:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    c11d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    c122:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    c126:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    c12b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    c12f:	48 8b 46 50          	mov    0x50(%rsi),%rax
    c133:	48 89 47 50          	mov    %rax,0x50(%rdi)
    c137:	8b 46 58             	mov    0x58(%rsi),%eax
    c13a:	89 47 58             	mov    %eax,0x58(%rdi)
    c13d:	c3                   	retq   
    c13e:	66 90                	xchg   %ax,%ax

000000000000c140 <mbedtls_ripemd160_starts>:
    c140:	f3 0f 1e fa          	endbr64 
    c144:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    c14b:	ab cd ef 
    c14e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    c155:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c159:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    c160:	54 32 10 
    c163:	48 89 47 10          	mov    %rax,0x10(%rdi)
    c167:	31 c0                	xor    %eax,%eax
    c169:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
    c170:	c3                   	retq   
    c171:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    c178:	00 00 00 00 
    c17c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c180 <mbedtls_internal_ripemd160_process>:
    c180:	f3 0f 1e fa          	endbr64 
    c184:	41 57                	push   %r15
    c186:	41 56                	push   %r14
    c188:	41 55                	push   %r13
    c18a:	41 54                	push   %r12
    c18c:	55                   	push   %rbp
    c18d:	53                   	push   %rbx
    c18e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    c195:	44 8b 66 08          	mov    0x8(%rsi),%r12d
    c199:	8b 56 10             	mov    0x10(%rsi),%edx
    c19c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c1a3:	00 00 
    c1a5:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    c1ac:	00 
    c1ad:	31 c0                	xor    %eax,%eax
    c1af:	8b 46 0c             	mov    0xc(%rsi),%eax
    c1b2:	44 8b 1e             	mov    (%rsi),%r11d
    c1b5:	44 8b 6e 04          	mov    0x4(%rsi),%r13d
    c1b9:	8b 5e 1c             	mov    0x1c(%rsi),%ebx
    c1bc:	44 89 24 24          	mov    %r12d,(%rsp)
    c1c0:	44 89 64 24 70       	mov    %r12d,0x70(%rsp)
    c1c5:	44 8b 66 18          	mov    0x18(%rsi),%r12d
    c1c9:	89 44 24 24          	mov    %eax,0x24(%rsp)
    c1cd:	89 44 24 74          	mov    %eax,0x74(%rsp)
    c1d1:	8b 46 14             	mov    0x14(%rsi),%eax
    c1d4:	89 54 24 04          	mov    %edx,0x4(%rsp)
    c1d8:	89 54 24 78          	mov    %edx,0x78(%rsp)
    c1dc:	8b 56 20             	mov    0x20(%rsi),%edx
    c1df:	44 89 5c 24 68       	mov    %r11d,0x68(%rsp)
    c1e4:	44 89 6c 24 6c       	mov    %r13d,0x6c(%rsp)
    c1e9:	89 44 24 08          	mov    %eax,0x8(%rsp)
    c1ed:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
    c1f1:	44 89 a4 24 80 00 00 	mov    %r12d,0x80(%rsp)
    c1f8:	00 
    c1f9:	89 9c 24 84 00 00 00 	mov    %ebx,0x84(%rsp)
    c200:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    c204:	89 94 24 88 00 00 00 	mov    %edx,0x88(%rsp)
    c20b:	44 8b 76 24          	mov    0x24(%rsi),%r14d
    c20f:	44 8b 7e 2c          	mov    0x2c(%rsi),%r15d
    c213:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    c217:	44 33 57 10          	xor    0x10(%rdi),%r10d
    c21b:	8b 4e 28             	mov    0x28(%rsi),%ecx
    c21e:	44 89 b4 24 8c 00 00 	mov    %r14d,0x8c(%rsp)
    c225:	00 
    c226:	8b 47 08             	mov    0x8(%rdi),%eax
    c229:	8b 6e 38             	mov    0x38(%rsi),%ebp
    c22c:	44 89 7c 24 14       	mov    %r15d,0x14(%rsp)
    c231:	44 8b 46 30          	mov    0x30(%rsi),%r8d
    c235:	44 8b 4e 34          	mov    0x34(%rsi),%r9d
    c239:	44 89 bc 24 94 00 00 	mov    %r15d,0x94(%rsp)
    c240:	00 
    c241:	44 8b 7f 14          	mov    0x14(%rdi),%r15d
    c245:	44 01 d8             	add    %r11d,%eax
    c248:	8b 76 3c             	mov    0x3c(%rsi),%esi
    c24b:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    c24f:	89 8c 24 90 00 00 00 	mov    %ecx,0x90(%rsp)
    c256:	8b 4f 10             	mov    0x10(%rdi),%ecx
    c259:	45 31 d7             	xor    %r10d,%r15d
    c25c:	44 8b 57 10          	mov    0x10(%rdi),%r10d
    c260:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
    c265:	41 01 c7             	add    %eax,%r15d
    c268:	8b 44 24 08          	mov    0x8(%rsp),%eax
    c26c:	44 89 84 24 98 00 00 	mov    %r8d,0x98(%rsp)
    c273:	00 
    c274:	41 c1 c2 0a          	rol    $0xa,%r10d
    c278:	44 89 4c 24 1c       	mov    %r9d,0x1c(%rsp)
    c27d:	41 c1 c7 0b          	rol    $0xb,%r15d
    c281:	44 03 7f 18          	add    0x18(%rdi),%r15d
    c285:	44 89 d2             	mov    %r10d,%edx
    c288:	44 8b 57 14          	mov    0x14(%rdi),%r10d
    c28c:	44 89 8c 24 9c 00 00 	mov    %r9d,0x9c(%rsp)
    c293:	00 
    c294:	89 ac 24 a0 00 00 00 	mov    %ebp,0xa0(%rsp)
    c29b:	41 f7 d2             	not    %r10d
    c29e:	89 74 24 20          	mov    %esi,0x20(%rsp)
    c2a2:	44 09 d1             	or     %r10d,%ecx
    c2a5:	44 8b 57 08          	mov    0x8(%rdi),%r10d
    c2a9:	33 4f 0c             	xor    0xc(%rdi),%ecx
    c2ac:	89 b4 24 a4 00 00 00 	mov    %esi,0xa4(%rsp)
    c2b3:	41 8d 84 02 e6 8b a2 	lea    0x50a28be6(%r10,%rax,1),%eax
    c2ba:	50 
    c2bb:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    c2bf:	01 c1                	add    %eax,%ecx
    c2c1:	41 31 d2             	xor    %edx,%r10d
    c2c4:	c1 c1 08             	rol    $0x8,%ecx
    c2c7:	03 4f 18             	add    0x18(%rdi),%ecx
    c2ca:	44 89 6c 24 34       	mov    %r13d,0x34(%rsp)
    c2cf:	45 89 d0             	mov    %r10d,%r8d
    c2d2:	8b 47 18             	mov    0x18(%rdi),%eax
    c2d5:	44 8b 57 0c          	mov    0xc(%rdi),%r10d
    c2d9:	89 6c 24 28          	mov    %ebp,0x28(%rsp)
    c2dd:	45 31 f8             	xor    %r15d,%r8d
    c2e0:	89 5c 24 30          	mov    %ebx,0x30(%rsp)
    c2e4:	44 01 e8             	add    %r13d,%eax
    c2e7:	41 c1 c2 0a          	rol    $0xa,%r10d
    c2eb:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
    c2f0:	44 8b 2c 24          	mov    (%rsp),%r13d
    c2f4:	45 89 d1             	mov    %r10d,%r9d
    c2f7:	41 01 c0             	add    %eax,%r8d
    c2fa:	41 89 d2             	mov    %edx,%r10d
    c2fd:	8b 47 0c             	mov    0xc(%rdi),%eax
    c300:	41 f7 d2             	not    %r10d
    c303:	41 c1 c0 0e          	rol    $0xe,%r8d
    c307:	44 03 47 14          	add    0x14(%rdi),%r8d
    c30b:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
    c310:	44 09 d0             	or     %r10d,%eax
    c313:	44 8b 57 18          	mov    0x18(%rdi),%r10d
    c317:	31 c8                	xor    %ecx,%eax
    c319:	41 8d b4 2a e6 8b a2 	lea    0x50a28be6(%r10,%rbp,1),%esi
    c320:	50 
    c321:	45 89 fa             	mov    %r15d,%r10d
    c324:	45 31 ca             	xor    %r9d,%r10d
    c327:	01 f0                	add    %esi,%eax
    c329:	44 89 d5             	mov    %r10d,%ebp
    c32c:	44 8b 14 24          	mov    (%rsp),%r10d
    c330:	44 03 57 14          	add    0x14(%rdi),%r10d
    c334:	c1 c0 09             	rol    $0x9,%eax
    c337:	44 31 c5             	xor    %r8d,%ebp
    c33a:	03 47 14             	add    0x14(%rdi),%eax
    c33d:	44 01 d5             	add    %r10d,%ebp
    c340:	45 89 ca             	mov    %r9d,%r10d
    c343:	41 f7 d2             	not    %r10d
    c346:	c1 c5 0f             	rol    $0xf,%ebp
    c349:	44 89 d6             	mov    %r10d,%esi
    c34c:	44 8b 57 14          	mov    0x14(%rdi),%r10d
    c350:	01 d5                	add    %edx,%ebp
    c352:	41 c1 c7 0a          	rol    $0xa,%r15d
    c356:	09 ce                	or     %ecx,%esi
    c358:	c1 c1 0a             	rol    $0xa,%ecx
    c35b:	31 c6                	xor    %eax,%esi
    c35d:	45 8d 94 1a e6 8b a2 	lea    0x50a28be6(%r10,%rbx,1),%r10d
    c364:	50 
    c365:	44 01 d6             	add    %r10d,%esi
    c368:	45 89 c2             	mov    %r8d,%r10d
    c36b:	41 c1 c0 0a          	rol    $0xa,%r8d
    c36f:	45 31 fa             	xor    %r15d,%r10d
    c372:	c1 c6 09             	rol    $0x9,%esi
    c375:	44 89 d3             	mov    %r10d,%ebx
    c378:	44 8b 54 24 24       	mov    0x24(%rsp),%r10d
    c37d:	01 d6                	add    %edx,%esi
    c37f:	31 eb                	xor    %ebp,%ebx
    c381:	41 01 d2             	add    %edx,%r10d
    c384:	42 8d 94 1a e6 8b a2 	lea    0x50a28be6(%rdx,%r11,1),%edx
    c38b:	50 
    c38c:	41 89 eb             	mov    %ebp,%r11d
    c38f:	c1 c5 0a             	rol    $0xa,%ebp
    c392:	44 01 d3             	add    %r10d,%ebx
    c395:	41 89 ca             	mov    %ecx,%r10d
    c398:	45 31 c3             	xor    %r8d,%r11d
    c39b:	41 f7 d2             	not    %r10d
    c39e:	c1 c3 0c             	rol    $0xc,%ebx
    c3a1:	41 09 c2             	or     %eax,%r10d
    c3a4:	44 01 cb             	add    %r9d,%ebx
    c3a7:	c1 c0 0a             	rol    $0xa,%eax
    c3aa:	41 31 f2             	xor    %esi,%r10d
    c3ad:	41 31 db             	xor    %ebx,%r11d
    c3b0:	41 01 d2             	add    %edx,%r10d
    c3b3:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c3b7:	41 c1 c2 0b          	rol    $0xb,%r10d
    c3bb:	44 01 ca             	add    %r9d,%edx
    c3be:	45 01 ca             	add    %r9d,%r10d
    c3c1:	47 8d 8c 31 e6 8b a2 	lea    0x50a28be6(%r9,%r14,1),%r9d
    c3c8:	50 
    c3c9:	41 01 d3             	add    %edx,%r11d
    c3cc:	89 c2                	mov    %eax,%edx
    c3ce:	f7 d2                	not    %edx
    c3d0:	41 c1 c3 05          	rol    $0x5,%r11d
    c3d4:	09 f2                	or     %esi,%edx
    c3d6:	45 01 fb             	add    %r15d,%r11d
    c3d9:	44 31 d2             	xor    %r10d,%edx
    c3dc:	44 01 ca             	add    %r9d,%edx
    c3df:	41 89 d9             	mov    %ebx,%r9d
    c3e2:	c1 c2 0d             	rol    $0xd,%edx
    c3e5:	01 ca                	add    %ecx,%edx
    c3e7:	c1 c6 0a             	rol    $0xa,%esi
    c3ea:	41 31 e9             	xor    %ebp,%r9d
    c3ed:	44 03 7c 24 08       	add    0x8(%rsp),%r15d
    c3f2:	45 31 d9             	xor    %r11d,%r9d
    c3f5:	42 8d 8c 29 e6 8b a2 	lea    0x50a28be6(%rcx,%r13,1),%ecx
    c3fc:	50 
    c3fd:	c1 c3 0a             	rol    $0xa,%ebx
    c400:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
    c405:	45 01 f9             	add    %r15d,%r9d
    c408:	41 89 f7             	mov    %esi,%r15d
    c40b:	41 f7 d7             	not    %r15d
    c40e:	41 c1 c1 08          	rol    $0x8,%r9d
    c412:	45 09 d7             	or     %r10d,%r15d
    c415:	45 01 c1             	add    %r8d,%r9d
    c418:	41 c1 c2 0a          	rol    $0xa,%r10d
    c41c:	45 01 e0             	add    %r12d,%r8d
    c41f:	41 31 d7             	xor    %edx,%r15d
    c422:	41 01 cf             	add    %ecx,%r15d
    c425:	44 89 d9             	mov    %r11d,%ecx
    c428:	41 c1 c3 0a          	rol    $0xa,%r11d
    c42c:	31 d9                	xor    %ebx,%ecx
    c42e:	41 c1 c7 0f          	rol    $0xf,%r15d
    c432:	44 31 c9             	xor    %r9d,%ecx
    c435:	41 01 c7             	add    %eax,%r15d
    c438:	42 8d 84 28 e6 8b a2 	lea    0x50a28be6(%rax,%r13,1),%eax
    c43f:	50 
    c440:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
    c445:	44 01 c1             	add    %r8d,%ecx
    c448:	45 89 d0             	mov    %r10d,%r8d
    c44b:	41 f7 d0             	not    %r8d
    c44e:	c1 c1 07             	rol    $0x7,%ecx
    c451:	41 09 d0             	or     %edx,%r8d
    c454:	01 e9                	add    %ebp,%ecx
    c456:	c1 c2 0a             	rol    $0xa,%edx
    c459:	03 6c 24 30          	add    0x30(%rsp),%ebp
    c45d:	45 31 f8             	xor    %r15d,%r8d
    c460:	41 01 c0             	add    %eax,%r8d
    c463:	44 89 c8             	mov    %r9d,%eax
    c466:	44 31 d8             	xor    %r11d,%eax
    c469:	41 c1 c0 0f          	rol    $0xf,%r8d
    c46d:	31 c8                	xor    %ecx,%eax
    c46f:	41 01 f0             	add    %esi,%r8d
    c472:	42 8d b4 2e e6 8b a2 	lea    0x50a28be6(%rsi,%r13,1),%esi
    c479:	50 
    c47a:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    c47f:	01 e8                	add    %ebp,%eax
    c481:	89 d5                	mov    %edx,%ebp
    c483:	c1 c0 09             	rol    $0x9,%eax
    c486:	f7 d5                	not    %ebp
    c488:	01 d8                	add    %ebx,%eax
    c48a:	44 09 fd             	or     %r15d,%ebp
    c48d:	41 c1 c1 0a          	rol    $0xa,%r9d
    c491:	03 5c 24 0c          	add    0xc(%rsp),%ebx
    c495:	44 31 c5             	xor    %r8d,%ebp
    c498:	41 c1 c7 0a          	rol    $0xa,%r15d
    c49c:	01 f5                	add    %esi,%ebp
    c49e:	89 ce                	mov    %ecx,%esi
    c4a0:	c1 c1 0a             	rol    $0xa,%ecx
    c4a3:	44 31 ce             	xor    %r9d,%esi
    c4a6:	c1 c5 05             	rol    $0x5,%ebp
    c4a9:	31 c6                	xor    %eax,%esi
    c4ab:	44 01 d5             	add    %r10d,%ebp
    c4ae:	47 8d 94 2a e6 8b a2 	lea    0x50a28be6(%r10,%r13,1),%r10d
    c4b5:	50 
    c4b6:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    c4bb:	01 de                	add    %ebx,%esi
    c4bd:	44 89 fb             	mov    %r15d,%ebx
    c4c0:	f7 d3                	not    %ebx
    c4c2:	c1 c6 0b             	rol    $0xb,%esi
    c4c5:	44 09 c3             	or     %r8d,%ebx
    c4c8:	44 01 de             	add    %r11d,%esi
    c4cb:	41 c1 c0 0a          	rol    $0xa,%r8d
    c4cf:	45 01 f3             	add    %r14d,%r11d
    c4d2:	31 eb                	xor    %ebp,%ebx
    c4d4:	44 01 d3             	add    %r10d,%ebx
    c4d7:	41 89 c2             	mov    %eax,%r10d
    c4da:	c1 c0 0a             	rol    $0xa,%eax
    c4dd:	41 31 ca             	xor    %ecx,%r10d
    c4e0:	c1 c3 07             	rol    $0x7,%ebx
    c4e3:	41 31 f2             	xor    %esi,%r10d
    c4e6:	01 d3                	add    %edx,%ebx
    c4e8:	42 8d 94 22 e6 8b a2 	lea    0x50a28be6(%rdx,%r12,1),%edx
    c4ef:	50 
    c4f0:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    c4f5:	45 01 da             	add    %r11d,%r10d
    c4f8:	45 89 c3             	mov    %r8d,%r11d
    c4fb:	41 f7 d3             	not    %r11d
    c4fe:	41 c1 c2 0d          	rol    $0xd,%r10d
    c502:	41 09 eb             	or     %ebp,%r11d
    c505:	45 01 ca             	add    %r9d,%r10d
    c508:	41 31 db             	xor    %ebx,%r11d
    c50b:	41 01 d3             	add    %edx,%r11d
    c50e:	89 f2                	mov    %esi,%edx
    c510:	41 c1 c3 07          	rol    $0x7,%r11d
    c514:	45 01 fb             	add    %r15d,%r11d
    c517:	31 c2                	xor    %eax,%edx
    c519:	c1 c5 0a             	rol    $0xa,%ebp
    c51c:	44 03 4c 24 10       	add    0x10(%rsp),%r9d
    c521:	44 31 d2             	xor    %r10d,%edx
    c524:	47 8d bc 2f e6 8b a2 	lea    0x50a28be6(%r15,%r13,1),%r15d
    c52b:	50 
    c52c:	c1 c6 0a             	rol    $0xa,%esi
    c52f:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    c534:	44 01 ca             	add    %r9d,%edx
    c537:	41 89 e9             	mov    %ebp,%r9d
    c53a:	41 f7 d1             	not    %r9d
    c53d:	c1 c2 0e             	rol    $0xe,%edx
    c540:	41 09 d9             	or     %ebx,%r9d
    c543:	01 ca                	add    %ecx,%edx
    c545:	c1 c3 0a             	rol    $0xa,%ebx
    c548:	03 4c 24 14          	add    0x14(%rsp),%ecx
    c54c:	45 31 d9             	xor    %r11d,%r9d
    c54f:	45 01 f9             	add    %r15d,%r9d
    c552:	45 89 d7             	mov    %r10d,%r15d
    c555:	41 c1 c2 0a          	rol    $0xa,%r10d
    c559:	41 31 f7             	xor    %esi,%r15d
    c55c:	41 c1 c1 08          	rol    $0x8,%r9d
    c560:	41 31 d7             	xor    %edx,%r15d
    c563:	45 01 c1             	add    %r8d,%r9d
    c566:	47 8d 84 20 e6 8b a2 	lea    0x50a28be6(%r8,%r12,1),%r8d
    c56d:	50 
    c56e:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    c573:	41 01 cf             	add    %ecx,%r15d
    c576:	89 d9                	mov    %ebx,%ecx
    c578:	f7 d1                	not    %ecx
    c57a:	41 c1 c7 0f          	rol    $0xf,%r15d
    c57e:	44 09 d9             	or     %r11d,%ecx
    c581:	41 01 c7             	add    %eax,%r15d
    c584:	41 c1 c3 0a          	rol    $0xa,%r11d
    c588:	03 44 24 18          	add    0x18(%rsp),%eax
    c58c:	44 31 c9             	xor    %r9d,%ecx
    c58f:	44 01 c1             	add    %r8d,%ecx
    c592:	41 89 d0             	mov    %edx,%r8d
    c595:	45 31 d0             	xor    %r10d,%r8d
    c598:	c1 c1 0b             	rol    $0xb,%ecx
    c59b:	45 31 f8             	xor    %r15d,%r8d
    c59e:	01 e9                	add    %ebp,%ecx
    c5a0:	42 8d ac 2d e6 8b a2 	lea    0x50a28be6(%rbp,%r13,1),%ebp
    c5a7:	50 
    c5a8:	41 01 c0             	add    %eax,%r8d
    c5ab:	44 89 d8             	mov    %r11d,%eax
    c5ae:	f7 d0                	not    %eax
    c5b0:	41 c1 c0 06          	rol    $0x6,%r8d
    c5b4:	44 09 c8             	or     %r9d,%eax
    c5b7:	c1 c2 0a             	rol    $0xa,%edx
    c5ba:	41 01 f0             	add    %esi,%r8d
    c5bd:	03 74 24 1c          	add    0x1c(%rsp),%esi
    c5c1:	31 c8                	xor    %ecx,%eax
    c5c3:	41 c1 c1 0a          	rol    $0xa,%r9d
    c5c7:	01 e8                	add    %ebp,%eax
    c5c9:	44 89 fd             	mov    %r15d,%ebp
    c5cc:	41 c1 c7 0a          	rol    $0xa,%r15d
    c5d0:	31 d5                	xor    %edx,%ebp
    c5d2:	c1 c0 0e             	rol    $0xe,%eax
    c5d5:	44 31 c5             	xor    %r8d,%ebp
    c5d8:	01 d8                	add    %ebx,%eax
    c5da:	42 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%rbx,%r12,1),%ebx
    c5e1:	50 
    c5e2:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    c5e7:	01 f5                	add    %esi,%ebp
    c5e9:	44 89 ce             	mov    %r9d,%esi
    c5ec:	f7 d6                	not    %esi
    c5ee:	c1 c5 07             	rol    $0x7,%ebp
    c5f1:	09 ce                	or     %ecx,%esi
    c5f3:	44 01 d5             	add    %r10d,%ebp
    c5f6:	c1 c1 0a             	rol    $0xa,%ecx
    c5f9:	44 03 54 24 28       	add    0x28(%rsp),%r10d
    c5fe:	31 c6                	xor    %eax,%esi
    c600:	01 de                	add    %ebx,%esi
    c602:	44 89 c3             	mov    %r8d,%ebx
    c605:	41 c1 c0 0a          	rol    $0xa,%r8d
    c609:	44 31 fb             	xor    %r15d,%ebx
    c60c:	c1 c6 0e             	rol    $0xe,%esi
    c60f:	31 eb                	xor    %ebp,%ebx
    c611:	44 01 de             	add    %r11d,%esi
    c614:	47 8d 9c 23 e6 8b a2 	lea    0x50a28be6(%r11,%r12,1),%r11d
    c61b:	50 
    c61c:	44 01 d3             	add    %r10d,%ebx
    c61f:	41 89 ca             	mov    %ecx,%r10d
    c622:	41 f7 d2             	not    %r10d
    c625:	c1 c3 09             	rol    $0x9,%ebx
    c628:	41 09 c2             	or     %eax,%r10d
    c62b:	01 d3                	add    %edx,%ebx
    c62d:	41 31 f2             	xor    %esi,%r10d
    c630:	45 01 da             	add    %r11d,%r10d
    c633:	41 89 eb             	mov    %ebp,%r11d
    c636:	41 c1 c2 0c          	rol    $0xc,%r10d
    c63a:	45 31 c3             	xor    %r8d,%r11d
    c63d:	03 54 24 20          	add    0x20(%rsp),%edx
    c641:	c1 c0 0a             	rol    $0xa,%eax
    c644:	41 31 db             	xor    %ebx,%r11d
    c647:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
    c64c:	45 01 ca             	add    %r9d,%r10d
    c64f:	c1 c5 0a             	rol    $0xa,%ebp
    c652:	41 01 d3             	add    %edx,%r11d
    c655:	89 c2                	mov    %eax,%edx
    c657:	f7 d2                	not    %edx
    c659:	47 8d 8c 21 e6 8b a2 	lea    0x50a28be6(%r9,%r12,1),%r9d
    c660:	50 
    c661:	41 c1 c3 08          	rol    $0x8,%r11d
    c665:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    c66a:	09 f2                	or     %esi,%edx
    c66c:	45 01 fb             	add    %r15d,%r11d
    c66f:	c1 c6 0a             	rol    $0xa,%esi
    c672:	44 31 d2             	xor    %r10d,%edx
    c675:	47 8d bc 27 99 79 82 	lea    0x5a827999(%r15,%r12,1),%r15d
    c67c:	5a 
    c67d:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    c682:	44 01 ca             	add    %r9d,%edx
    c685:	41 89 d9             	mov    %ebx,%r9d
    c688:	c1 c3 0a             	rol    $0xa,%ebx
    c68b:	41 31 e9             	xor    %ebp,%r9d
    c68e:	c1 c2 06             	rol    $0x6,%edx
    c691:	45 21 d9             	and    %r11d,%r9d
    c694:	01 ca                	add    %ecx,%edx
    c696:	42 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%rcx,%r12,1),%ecx
    c69d:	5c 
    c69e:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    c6a3:	41 31 e9             	xor    %ebp,%r9d
    c6a6:	45 01 f9             	add    %r15d,%r9d
    c6a9:	45 89 d7             	mov    %r10d,%r15d
    c6ac:	41 31 d7             	xor    %edx,%r15d
    c6af:	41 c1 c1 07          	rol    $0x7,%r9d
    c6b3:	41 21 f7             	and    %esi,%r15d
    c6b6:	45 01 c1             	add    %r8d,%r9d
    c6b9:	47 8d 84 20 99 79 82 	lea    0x5a827999(%r8,%r12,1),%r8d
    c6c0:	5a 
    c6c1:	44 8b 64 24 14       	mov    0x14(%rsp),%r12d
    c6c6:	45 31 d7             	xor    %r10d,%r15d
    c6c9:	41 c1 c2 0a          	rol    $0xa,%r10d
    c6cd:	41 01 cf             	add    %ecx,%r15d
    c6d0:	44 89 d9             	mov    %r11d,%ecx
    c6d3:	31 d9                	xor    %ebx,%ecx
    c6d5:	41 c1 c7 09          	rol    $0x9,%r15d
    c6d9:	44 21 c9             	and    %r9d,%ecx
    c6dc:	41 01 c7             	add    %eax,%r15d
    c6df:	42 8d 84 20 24 d1 4d 	lea    0x5c4dd124(%rax,%r12,1),%eax
    c6e6:	5c 
    c6e7:	44 8b 64 24 1c       	mov    0x1c(%rsp),%r12d
    c6ec:	31 d9                	xor    %ebx,%ecx
    c6ee:	41 c1 c3 0a          	rol    $0xa,%r11d
    c6f2:	44 01 c1             	add    %r8d,%ecx
    c6f5:	41 89 d0             	mov    %edx,%r8d
    c6f8:	45 31 f8             	xor    %r15d,%r8d
    c6fb:	c1 c1 06             	rol    $0x6,%ecx
    c6fe:	45 21 d0             	and    %r10d,%r8d
    c701:	01 e9                	add    %ebp,%ecx
    c703:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
    c70a:	5a 
    c70b:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    c710:	41 31 d0             	xor    %edx,%r8d
    c713:	c1 c2 0a             	rol    $0xa,%edx
    c716:	41 01 c0             	add    %eax,%r8d
    c719:	44 89 c8             	mov    %r9d,%eax
    c71c:	41 c1 c1 0a          	rol    $0xa,%r9d
    c720:	44 31 d8             	xor    %r11d,%eax
    c723:	41 c1 c0 0d          	rol    $0xd,%r8d
    c727:	21 c8                	and    %ecx,%eax
    c729:	41 01 f0             	add    %esi,%r8d
    c72c:	42 8d b4 26 24 d1 4d 	lea    0x5c4dd124(%rsi,%r12,1),%esi
    c733:	5c 
    c734:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    c739:	44 31 d8             	xor    %r11d,%eax
    c73c:	01 c5                	add    %eax,%ebp
    c73e:	44 89 f8             	mov    %r15d,%eax
    c741:	44 31 c0             	xor    %r8d,%eax
    c744:	c1 c5 08             	rol    $0x8,%ebp
    c747:	21 d0                	and    %edx,%eax
    c749:	01 dd                	add    %ebx,%ebp
    c74b:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
    c752:	5a 
    c753:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
    c758:	44 31 f8             	xor    %r15d,%eax
    c75b:	41 c1 c7 0a          	rol    $0xa,%r15d
    c75f:	01 f0                	add    %esi,%eax
    c761:	89 ce                	mov    %ecx,%esi
    c763:	44 31 ce             	xor    %r9d,%esi
    c766:	c1 c0 0f             	rol    $0xf,%eax
    c769:	21 ee                	and    %ebp,%esi
    c76b:	44 01 d0             	add    %r10d,%eax
    c76e:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
    c775:	5c 
    c776:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
    c77b:	44 31 ce             	xor    %r9d,%esi
    c77e:	01 de                	add    %ebx,%esi
    c780:	44 89 c3             	mov    %r8d,%ebx
    c783:	c1 c6 0d             	rol    $0xd,%esi
    c786:	44 01 de             	add    %r11d,%esi
    c789:	c1 c1 0a             	rol    $0xa,%ecx
    c78c:	31 c3                	xor    %eax,%ebx
    c78e:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
    c795:	5a 
    c796:	44 21 fb             	and    %r15d,%ebx
    c799:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    c79e:	44 31 c3             	xor    %r8d,%ebx
    c7a1:	41 c1 c0 0a          	rol    $0xa,%r8d
    c7a5:	44 01 d3             	add    %r10d,%ebx
    c7a8:	41 89 ea             	mov    %ebp,%r10d
    c7ab:	c1 c5 0a             	rol    $0xa,%ebp
    c7ae:	41 31 ca             	xor    %ecx,%r10d
    c7b1:	c1 c3 07             	rol    $0x7,%ebx
    c7b4:	41 21 f2             	and    %esi,%r10d
    c7b7:	01 d3                	add    %edx,%ebx
    c7b9:	42 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%rdx,%r13,1),%edx
    c7c0:	5c 
    c7c1:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    c7c6:	41 31 ca             	xor    %ecx,%r10d
    c7c9:	45 01 d3             	add    %r10d,%r11d
    c7cc:	41 89 c2             	mov    %eax,%r10d
    c7cf:	41 31 da             	xor    %ebx,%r10d
    c7d2:	41 c1 c3 0b          	rol    $0xb,%r11d
    c7d6:	45 21 c2             	and    %r8d,%r10d
    c7d9:	45 01 cb             	add    %r9d,%r11d
    c7dc:	47 8d 8c 21 99 79 82 	lea    0x5a827999(%r9,%r12,1),%r9d
    c7e3:	5a 
    c7e4:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    c7e9:	41 31 c2             	xor    %eax,%r10d
    c7ec:	c1 c0 0a             	rol    $0xa,%eax
    c7ef:	41 01 d2             	add    %edx,%r10d
    c7f2:	89 f2                	mov    %esi,%edx
    c7f4:	c1 c6 0a             	rol    $0xa,%esi
    c7f7:	31 ea                	xor    %ebp,%edx
    c7f9:	41 c1 c2 0c          	rol    $0xc,%r10d
    c7fd:	44 21 da             	and    %r11d,%edx
    c800:	45 01 fa             	add    %r15d,%r10d
    c803:	47 8d bc 2f 24 d1 4d 	lea    0x5c4dd124(%r15,%r13,1),%r15d
    c80a:	5c 
    c80b:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    c810:	31 ea                	xor    %ebp,%edx
    c812:	44 01 ca             	add    %r9d,%edx
    c815:	41 89 d9             	mov    %ebx,%r9d
    c818:	45 31 d1             	xor    %r10d,%r9d
    c81b:	c1 c2 09             	rol    $0x9,%edx
    c81e:	41 21 c1             	and    %eax,%r9d
    c821:	01 ca                	add    %ecx,%edx
    c823:	42 8d 8c 29 99 79 82 	lea    0x5a827999(%rcx,%r13,1),%ecx
    c82a:	5a 
    c82b:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    c830:	41 31 d9             	xor    %ebx,%r9d
    c833:	45 01 f9             	add    %r15d,%r9d
    c836:	45 89 df             	mov    %r11d,%r15d
    c839:	c1 c3 0a             	rol    $0xa,%ebx
    c83c:	41 c1 c1 08          	rol    $0x8,%r9d
    c840:	41 31 f7             	xor    %esi,%r15d
    c843:	41 c1 c3 0a          	rol    $0xa,%r11d
    c847:	41 21 d7             	and    %edx,%r15d
    c84a:	45 01 c1             	add    %r8d,%r9d
    c84d:	47 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%r8,%r13,1),%r8d
    c854:	5c 
    c855:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
    c85a:	41 31 f7             	xor    %esi,%r15d
    c85d:	41 01 cf             	add    %ecx,%r15d
    c860:	44 89 d1             	mov    %r10d,%ecx
    c863:	44 31 c9             	xor    %r9d,%ecx
    c866:	41 c1 c7 07          	rol    $0x7,%r15d
    c86a:	21 d9                	and    %ebx,%ecx
    c86c:	41 01 ef             	add    %ebp,%r15d
    c86f:	42 8d ac 25 99 79 82 	lea    0x5a827999(%rbp,%r12,1),%ebp
    c876:	5a 
    c877:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    c87c:	44 31 d1             	xor    %r10d,%ecx
    c87f:	41 c1 c2 0a          	rol    $0xa,%r10d
    c883:	44 01 c1             	add    %r8d,%ecx
    c886:	41 89 d0             	mov    %edx,%r8d
    c889:	c1 c2 0a             	rol    $0xa,%edx
    c88c:	45 31 d8             	xor    %r11d,%r8d
    c88f:	c1 c1 09             	rol    $0x9,%ecx
    c892:	45 21 f8             	and    %r15d,%r8d
    c895:	01 c1                	add    %eax,%ecx
    c897:	42 8d 84 28 24 d1 4d 	lea    0x5c4dd124(%rax,%r13,1),%eax
    c89e:	5c 
    c89f:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    c8a4:	45 31 d8             	xor    %r11d,%r8d
    c8a7:	41 01 e8             	add    %ebp,%r8d
    c8aa:	44 89 cd             	mov    %r9d,%ebp
    c8ad:	31 cd                	xor    %ecx,%ebp
    c8af:	41 c1 c0 0f          	rol    $0xf,%r8d
    c8b3:	44 21 d5             	and    %r10d,%ebp
    c8b6:	41 01 f0             	add    %esi,%r8d
    c8b9:	42 8d b4 2e 99 79 82 	lea    0x5a827999(%rsi,%r13,1),%esi
    c8c0:	5a 
    c8c1:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    c8c6:	44 31 cd             	xor    %r9d,%ebp
    c8c9:	41 c1 c1 0a          	rol    $0xa,%r9d
    c8cd:	01 c5                	add    %eax,%ebp
    c8cf:	44 89 f8             	mov    %r15d,%eax
    c8d2:	c1 c5 0b             	rol    $0xb,%ebp
    c8d5:	01 dd                	add    %ebx,%ebp
    c8d7:	31 d0                	xor    %edx,%eax
    c8d9:	42 8d 9c 23 24 d1 4d 	lea    0x5c4dd124(%rbx,%r12,1),%ebx
    c8e0:	5c 
    c8e1:	41 c1 c7 0a          	rol    $0xa,%r15d
    c8e5:	44 21 c0             	and    %r8d,%eax
    c8e8:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    c8ed:	31 d0                	xor    %edx,%eax
    c8ef:	01 f0                	add    %esi,%eax
    c8f1:	89 ce                	mov    %ecx,%esi
    c8f3:	31 ee                	xor    %ebp,%esi
    c8f5:	c1 c0 07             	rol    $0x7,%eax
    c8f8:	44 21 ce             	and    %r9d,%esi
    c8fb:	44 01 d8             	add    %r11d,%eax
    c8fe:	47 8d 9c 2b 99 79 82 	lea    0x5a827999(%r11,%r13,1),%r11d
    c905:	5a 
    c906:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    c90b:	31 ce                	xor    %ecx,%esi
    c90d:	c1 c1 0a             	rol    $0xa,%ecx
    c910:	01 de                	add    %ebx,%esi
    c912:	44 89 c3             	mov    %r8d,%ebx
    c915:	41 c1 c0 0a          	rol    $0xa,%r8d
    c919:	44 31 fb             	xor    %r15d,%ebx
    c91c:	c1 c6 07             	rol    $0x7,%esi
    c91f:	21 c3                	and    %eax,%ebx
    c921:	44 01 d6             	add    %r10d,%esi
    c924:	47 8d 94 2a 24 d1 4d 	lea    0x5c4dd124(%r10,%r13,1),%r10d
    c92b:	5c 
    c92c:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    c931:	44 31 fb             	xor    %r15d,%ebx
    c934:	44 01 db             	add    %r11d,%ebx
    c937:	41 89 eb             	mov    %ebp,%r11d
    c93a:	41 31 f3             	xor    %esi,%r11d
    c93d:	c1 c3 0c             	rol    $0xc,%ebx
    c940:	41 21 cb             	and    %ecx,%r11d
    c943:	01 d3                	add    %edx,%ebx
    c945:	42 8d 94 32 99 79 82 	lea    0x5a827999(%rdx,%r14,1),%edx
    c94c:	5a 
    c94d:	41 31 eb             	xor    %ebp,%r11d
    c950:	c1 c5 0a             	rol    $0xa,%ebp
    c953:	45 01 d3             	add    %r10d,%r11d
    c956:	41 89 c2             	mov    %eax,%r10d
    c959:	45 31 c2             	xor    %r8d,%r10d
    c95c:	41 c1 c3 07          	rol    $0x7,%r11d
    c960:	41 21 da             	and    %ebx,%r10d
    c963:	45 01 cb             	add    %r9d,%r11d
    c966:	47 8d 8c 21 24 d1 4d 	lea    0x5c4dd124(%r9,%r12,1),%r9d
    c96d:	5c 
    c96e:	45 31 c2             	xor    %r8d,%r10d
    c971:	41 01 d2             	add    %edx,%r10d
    c974:	89 f2                	mov    %esi,%edx
    c976:	41 c1 c2 0f          	rol    $0xf,%r10d
    c97a:	44 31 da             	xor    %r11d,%edx
    c97d:	c1 c0 0a             	rol    $0xa,%eax
    c980:	21 ea                	and    %ebp,%edx
    c982:	45 01 fa             	add    %r15d,%r10d
    c985:	47 8d bc 2f 99 79 82 	lea    0x5a827999(%r15,%r13,1),%r15d
    c98c:	5a 
    c98d:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    c992:	31 f2                	xor    %esi,%edx
    c994:	c1 c6 0a             	rol    $0xa,%esi
    c997:	44 01 ca             	add    %r9d,%edx
    c99a:	41 89 d9             	mov    %ebx,%r9d
    c99d:	c1 c3 0a             	rol    $0xa,%ebx
    c9a0:	41 31 c1             	xor    %eax,%r9d
    c9a3:	c1 c2 0c             	rol    $0xc,%edx
    c9a6:	45 21 d1             	and    %r10d,%r9d
    c9a9:	01 ca                	add    %ecx,%edx
    c9ab:	42 8d 8c 29 24 d1 4d 	lea    0x5c4dd124(%rcx,%r13,1),%ecx
    c9b2:	5c 
    c9b3:	44 8b 2c 24          	mov    (%rsp),%r13d
    c9b7:	41 31 c1             	xor    %eax,%r9d
    c9ba:	45 01 f9             	add    %r15d,%r9d
    c9bd:	45 89 df             	mov    %r11d,%r15d
    c9c0:	41 31 d7             	xor    %edx,%r15d
    c9c3:	41 c1 c1 09          	rol    $0x9,%r9d
    c9c7:	41 21 f7             	and    %esi,%r15d
    c9ca:	45 01 c1             	add    %r8d,%r9d
    c9cd:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
    c9d4:	5a 
    c9d5:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
    c9da:	45 31 df             	xor    %r11d,%r15d
    c9dd:	41 c1 c3 0a          	rol    $0xa,%r11d
    c9e1:	41 01 cf             	add    %ecx,%r15d
    c9e4:	44 89 d1             	mov    %r10d,%ecx
    c9e7:	41 c1 c2 0a          	rol    $0xa,%r10d
    c9eb:	31 d9                	xor    %ebx,%ecx
    c9ed:	41 c1 c7 07          	rol    $0x7,%r15d
    c9f1:	44 21 c9             	and    %r9d,%ecx
    c9f4:	41 01 ef             	add    %ebp,%r15d
    c9f7:	42 8d ac 2d 24 d1 4d 	lea    0x5c4dd124(%rbp,%r13,1),%ebp
    c9fe:	5c 
    c9ff:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
    ca04:	31 d9                	xor    %ebx,%ecx
    ca06:	44 01 c1             	add    %r8d,%ecx
    ca09:	41 89 d0             	mov    %edx,%r8d
    ca0c:	c1 c1 0b             	rol    $0xb,%ecx
    ca0f:	45 31 f8             	xor    %r15d,%r8d
    ca12:	01 c1                	add    %eax,%ecx
    ca14:	45 21 d8             	and    %r11d,%r8d
    ca17:	42 8d 84 28 99 79 82 	lea    0x5a827999(%rax,%r13,1),%eax
    ca1e:	5a 
    ca1f:	44 8b 6c 24 14       	mov    0x14(%rsp),%r13d
    ca24:	41 31 d0             	xor    %edx,%r8d
    ca27:	c1 c2 0a             	rol    $0xa,%edx
    ca2a:	41 01 e8             	add    %ebp,%r8d
    ca2d:	44 89 cd             	mov    %r9d,%ebp
    ca30:	41 c1 c1 0a          	rol    $0xa,%r9d
    ca34:	44 31 d5             	xor    %r10d,%ebp
    ca37:	41 c1 c0 06          	rol    $0x6,%r8d
    ca3b:	21 cd                	and    %ecx,%ebp
    ca3d:	41 01 f0             	add    %esi,%r8d
    ca40:	42 8d b4 36 24 d1 4d 	lea    0x5c4dd124(%rsi,%r14,1),%esi
    ca47:	5c 
    ca48:	44 31 d5             	xor    %r10d,%ebp
    ca4b:	01 c5                	add    %eax,%ebp
    ca4d:	44 89 f8             	mov    %r15d,%eax
    ca50:	44 31 c0             	xor    %r8d,%eax
    ca53:	c1 c5 07             	rol    $0x7,%ebp
    ca56:	21 d0                	and    %edx,%eax
    ca58:	01 dd                	add    %ebx,%ebp
    ca5a:	42 8d 9c 2b 99 79 82 	lea    0x5a827999(%rbx,%r13,1),%ebx
    ca61:	5a 
    ca62:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    ca67:	44 31 f8             	xor    %r15d,%eax
    ca6a:	41 c1 c7 0a          	rol    $0xa,%r15d
    ca6e:	01 f0                	add    %esi,%eax
    ca70:	89 ce                	mov    %ecx,%esi
    ca72:	c1 c1 0a             	rol    $0xa,%ecx
    ca75:	44 31 ce             	xor    %r9d,%esi
    ca78:	c1 c0 0f             	rol    $0xf,%eax
    ca7b:	21 ee                	and    %ebp,%esi
    ca7d:	44 01 d8             	add    %r11d,%eax
    ca80:	47 8d 9c 2b 24 d1 4d 	lea    0x5c4dd124(%r11,%r13,1),%r11d
    ca87:	5c 
    ca88:	44 31 ce             	xor    %r9d,%esi
    ca8b:	01 de                	add    %ebx,%esi
    ca8d:	44 89 c3             	mov    %r8d,%ebx
    ca90:	31 c3                	xor    %eax,%ebx
    ca92:	c1 c6 0d             	rol    $0xd,%esi
    ca95:	44 21 fb             	and    %r15d,%ebx
    ca98:	44 01 d6             	add    %r10d,%esi
    ca9b:	47 8d 94 22 99 79 82 	lea    0x5a827999(%r10,%r12,1),%r10d
    caa2:	5a 
    caa3:	44 8b 24 24          	mov    (%rsp),%r12d
    caa7:	44 31 c3             	xor    %r8d,%ebx
    caaa:	44 01 db             	add    %r11d,%ebx
    caad:	41 89 eb             	mov    %ebp,%r11d
    cab0:	c1 c3 0d             	rol    $0xd,%ebx
    cab3:	01 d3                	add    %edx,%ebx
    cab5:	41 31 cb             	xor    %ecx,%r11d
    cab8:	42 8d 94 22 24 d1 4d 	lea    0x5c4dd124(%rdx,%r12,1),%edx
    cabf:	5c 
    cac0:	c1 c5 0a             	rol    $0xa,%ebp
    cac3:	41 21 f3             	and    %esi,%r11d
    cac6:	41 c1 c0 0a          	rol    $0xa,%r8d
    caca:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    cacf:	41 31 cb             	xor    %ecx,%r11d
    cad2:	45 01 d3             	add    %r10d,%r11d
    cad5:	41 89 c2             	mov    %eax,%r10d
    cad8:	41 31 da             	xor    %ebx,%r10d
    cadb:	41 c1 c3 0c          	rol    $0xc,%r11d
    cadf:	45 21 c2             	and    %r8d,%r10d
    cae2:	45 01 cb             	add    %r9d,%r11d
    cae5:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
    caec:	6e 
    caed:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
    caf2:	41 31 c2             	xor    %eax,%r10d
    caf5:	c1 c0 0a             	rol    $0xa,%eax
    caf8:	41 01 d2             	add    %edx,%r10d
    cafb:	89 f2                	mov    %esi,%edx
    cafd:	c1 c6 0a             	rol    $0xa,%esi
    cb00:	f7 d2                	not    %edx
    cb02:	41 c1 c2 0b          	rol    $0xb,%r10d
    cb06:	44 09 da             	or     %r11d,%edx
    cb09:	45 01 fa             	add    %r15d,%r10d
    cb0c:	47 8d bc 27 f3 3e 70 	lea    0x6d703ef3(%r15,%r12,1),%r15d
    cb13:	6d 
    cb14:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    cb19:	31 ea                	xor    %ebp,%edx
    cb1b:	44 89 74 24 3c       	mov    %r14d,0x3c(%rsp)
    cb20:	44 01 ca             	add    %r9d,%edx
    cb23:	41 89 d9             	mov    %ebx,%r9d
    cb26:	c1 c3 0a             	rol    $0xa,%ebx
    cb29:	41 f7 d1             	not    %r9d
    cb2c:	c1 c2 0b             	rol    $0xb,%edx
    cb2f:	45 09 d1             	or     %r10d,%r9d
    cb32:	01 ca                	add    %ecx,%edx
    cb34:	42 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r12,1),%ecx
    cb3b:	6e 
    cb3c:	44 8b 64 24 08       	mov    0x8(%rsp),%r12d
    cb41:	41 31 c1             	xor    %eax,%r9d
    cb44:	45 01 f9             	add    %r15d,%r9d
    cb47:	45 89 df             	mov    %r11d,%r15d
    cb4a:	41 f7 d7             	not    %r15d
    cb4d:	41 c1 c1 09          	rol    $0x9,%r9d
    cb51:	41 09 d7             	or     %edx,%r15d
    cb54:	45 01 c1             	add    %r8d,%r9d
    cb57:	47 8d 84 20 f3 3e 70 	lea    0x6d703ef3(%r8,%r12,1),%r8d
    cb5e:	6d 
    cb5f:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    cb64:	41 31 f7             	xor    %esi,%r15d
    cb67:	41 01 cf             	add    %ecx,%r15d
    cb6a:	44 89 d1             	mov    %r10d,%ecx
    cb6d:	41 c1 c7 0d          	rol    $0xd,%r15d
    cb71:	f7 d1                	not    %ecx
    cb73:	41 01 ef             	add    %ebp,%r15d
    cb76:	44 09 c9             	or     %r9d,%ecx
    cb79:	41 c1 c3 0a          	rol    $0xa,%r11d
    cb7d:	42 8d ac 25 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r12,1),%ebp
    cb84:	6e 
    cb85:	31 d9                	xor    %ebx,%ecx
    cb87:	41 c1 c2 0a          	rol    $0xa,%r10d
    cb8b:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    cb90:	44 01 c1             	add    %r8d,%ecx
    cb93:	41 89 d0             	mov    %edx,%r8d
    cb96:	c1 c2 0a             	rol    $0xa,%edx
    cb99:	41 f7 d0             	not    %r8d
    cb9c:	c1 c1 07             	rol    $0x7,%ecx
    cb9f:	45 09 f8             	or     %r15d,%r8d
    cba2:	01 c1                	add    %eax,%ecx
    cba4:	42 8d 84 28 f3 3e 70 	lea    0x6d703ef3(%rax,%r13,1),%eax
    cbab:	6d 
    cbac:	45 31 d8             	xor    %r11d,%r8d
    cbaf:	41 01 e8             	add    %ebp,%r8d
    cbb2:	44 89 cd             	mov    %r9d,%ebp
    cbb5:	41 c1 c1 0a          	rol    $0xa,%r9d
    cbb9:	f7 d5                	not    %ebp
    cbbb:	41 c1 c0 06          	rol    $0x6,%r8d
    cbbf:	09 cd                	or     %ecx,%ebp
    cbc1:	41 01 f0             	add    %esi,%r8d
    cbc4:	42 8d b4 26 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r12,1),%esi
    cbcb:	6e 
    cbcc:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    cbd1:	44 31 d5             	xor    %r10d,%ebp
    cbd4:	01 c5                	add    %eax,%ebp
    cbd6:	44 89 f8             	mov    %r15d,%eax
    cbd9:	f7 d0                	not    %eax
    cbdb:	c1 c5 0f             	rol    $0xf,%ebp
    cbde:	44 09 c0             	or     %r8d,%eax
    cbe1:	01 dd                	add    %ebx,%ebp
    cbe3:	42 8d 9c 23 f3 3e 70 	lea    0x6d703ef3(%rbx,%r12,1),%ebx
    cbea:	6d 
    cbeb:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    cbf0:	31 d0                	xor    %edx,%eax
    cbf2:	01 c6                	add    %eax,%esi
    cbf4:	44 89 f8             	mov    %r15d,%eax
    cbf7:	41 89 cf             	mov    %ecx,%r15d
    cbfa:	c1 c1 0a             	rol    $0xa,%ecx
    cbfd:	c1 c6 07             	rol    $0x7,%esi
    cc00:	41 f7 d7             	not    %r15d
    cc03:	c1 c0 0a             	rol    $0xa,%eax
    cc06:	41 09 ef             	or     %ebp,%r15d
    cc09:	44 01 de             	add    %r11d,%esi
    cc0c:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
    cc13:	6e 
    cc14:	45 31 cf             	xor    %r9d,%r15d
    cc17:	41 01 df             	add    %ebx,%r15d
    cc1a:	44 89 c3             	mov    %r8d,%ebx
    cc1d:	41 c1 c7 0b          	rol    $0xb,%r15d
    cc21:	f7 d3                	not    %ebx
    cc23:	45 01 d7             	add    %r10d,%r15d
    cc26:	09 f3                	or     %esi,%ebx
    cc28:	47 8d 94 22 f3 3e 70 	lea    0x6d703ef3(%r10,%r12,1),%r10d
    cc2f:	6d 
    cc30:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
    cc35:	31 c3                	xor    %eax,%ebx
    cc37:	41 c1 c0 0a          	rol    $0xa,%r8d
    cc3b:	44 01 db             	add    %r11d,%ebx
    cc3e:	41 89 eb             	mov    %ebp,%r11d
    cc41:	c1 c5 0a             	rol    $0xa,%ebp
    cc44:	41 f7 d3             	not    %r11d
    cc47:	c1 c3 0e             	rol    $0xe,%ebx
    cc4a:	45 09 fb             	or     %r15d,%r11d
    cc4d:	01 d3                	add    %edx,%ebx
    cc4f:	42 8d 94 22 a1 eb d9 	lea    0x6ed9eba1(%rdx,%r12,1),%edx
    cc56:	6e 
    cc57:	44 8b 64 24 28       	mov    0x28(%rsp),%r12d
    cc5c:	41 31 cb             	xor    %ecx,%r11d
    cc5f:	45 01 d3             	add    %r10d,%r11d
    cc62:	41 89 f2             	mov    %esi,%r10d
    cc65:	c1 c6 0a             	rol    $0xa,%esi
    cc68:	41 f7 d2             	not    %r10d
    cc6b:	41 c1 c3 08          	rol    $0x8,%r11d
    cc6f:	41 09 da             	or     %ebx,%r10d
    cc72:	45 01 cb             	add    %r9d,%r11d
    cc75:	47 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%r9,%r12,1),%r9d
    cc7c:	6d 
    cc7d:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    cc82:	45 31 c2             	xor    %r8d,%r10d
    cc85:	41 01 d2             	add    %edx,%r10d
    cc88:	44 89 fa             	mov    %r15d,%edx
    cc8b:	41 c1 c7 0a          	rol    $0xa,%r15d
    cc8f:	f7 d2                	not    %edx
    cc91:	41 c1 c2 09          	rol    $0x9,%r10d
    cc95:	44 09 da             	or     %r11d,%edx
    cc98:	41 01 c2             	add    %eax,%r10d
    cc9b:	42 8d 84 20 a1 eb d9 	lea    0x6ed9eba1(%rax,%r12,1),%eax
    cca2:	6e 
    cca3:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    cca8:	31 ea                	xor    %ebp,%edx
    ccaa:	44 01 ca             	add    %r9d,%edx
    ccad:	41 89 d9             	mov    %ebx,%r9d
    ccb0:	c1 c3 0a             	rol    $0xa,%ebx
    ccb3:	41 f7 d1             	not    %r9d
    ccb6:	c1 c2 06             	rol    $0x6,%edx
    ccb9:	45 09 d1             	or     %r10d,%r9d
    ccbc:	01 ca                	add    %ecx,%edx
    ccbe:	42 8d 8c 21 f3 3e 70 	lea    0x6d703ef3(%rcx,%r12,1),%ecx
    ccc5:	6d 
    ccc6:	41 31 f1             	xor    %esi,%r9d
    ccc9:	41 01 c1             	add    %eax,%r9d
    cccc:	44 89 d8             	mov    %r11d,%eax
    cccf:	f7 d0                	not    %eax
    ccd1:	41 c1 c1 0d          	rol    $0xd,%r9d
    ccd5:	09 d0                	or     %edx,%eax
    ccd7:	45 01 c1             	add    %r8d,%r9d
    ccda:	47 8d 84 28 a1 eb d9 	lea    0x6ed9eba1(%r8,%r13,1),%r8d
    cce1:	6e 
    cce2:	44 8b 6c 24 30       	mov    0x30(%rsp),%r13d
    cce7:	44 31 f8             	xor    %r15d,%eax
    ccea:	01 c8                	add    %ecx,%eax
    ccec:	44 89 d1             	mov    %r10d,%ecx
    ccef:	41 c1 c3 0a          	rol    $0xa,%r11d
    ccf3:	c1 c0 06             	rol    $0x6,%eax
    ccf6:	f7 d1                	not    %ecx
    ccf8:	41 c1 c2 0a          	rol    $0xa,%r10d
    ccfc:	44 09 c9             	or     %r9d,%ecx
    ccff:	01 e8                	add    %ebp,%eax
    cd01:	42 8d ac 35 f3 3e 70 	lea    0x6d703ef3(%rbp,%r14,1),%ebp
    cd08:	6d 
    cd09:	44 8b 34 24          	mov    (%rsp),%r14d
    cd0d:	31 d9                	xor    %ebx,%ecx
    cd0f:	44 01 c1             	add    %r8d,%ecx
    cd12:	41 89 d0             	mov    %edx,%r8d
    cd15:	c1 c2 0a             	rol    $0xa,%edx
    cd18:	41 f7 d0             	not    %r8d
    cd1b:	c1 c1 0f             	rol    $0xf,%ecx
    cd1e:	41 09 c0             	or     %eax,%r8d
    cd21:	01 f1                	add    %esi,%ecx
    cd23:	42 8d b4 36 a1 eb d9 	lea    0x6ed9eba1(%rsi,%r14,1),%esi
    cd2a:	6e 
    cd2b:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    cd30:	45 31 d8             	xor    %r11d,%r8d
    cd33:	41 01 e8             	add    %ebp,%r8d
    cd36:	44 89 cd             	mov    %r9d,%ebp
    cd39:	41 c1 c1 0a          	rol    $0xa,%r9d
    cd3d:	f7 d5                	not    %ebp
    cd3f:	41 c1 c0 0e          	rol    $0xe,%r8d
    cd43:	09 cd                	or     %ecx,%ebp
    cd45:	45 01 f8             	add    %r15d,%r8d
    cd48:	47 8d bc 37 f3 3e 70 	lea    0x6d703ef3(%r15,%r14,1),%r15d
    cd4f:	6d 
    cd50:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    cd55:	44 31 d5             	xor    %r10d,%ebp
    cd58:	01 f5                	add    %esi,%ebp
    cd5a:	89 c6                	mov    %eax,%esi
    cd5c:	c1 c0 0a             	rol    $0xa,%eax
    cd5f:	f7 d6                	not    %esi
    cd61:	c1 c5 0e             	rol    $0xe,%ebp
    cd64:	44 09 c6             	or     %r8d,%esi
    cd67:	01 dd                	add    %ebx,%ebp
    cd69:	42 8d 9c 2b a1 eb d9 	lea    0x6ed9eba1(%rbx,%r13,1),%ebx
    cd70:	6e 
    cd71:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    cd76:	31 d6                	xor    %edx,%esi
    cd78:	44 01 fe             	add    %r15d,%esi
    cd7b:	41 89 cf             	mov    %ecx,%r15d
    cd7e:	41 f7 d7             	not    %r15d
    cd81:	c1 c6 0c             	rol    $0xc,%esi
    cd84:	41 09 ef             	or     %ebp,%r15d
    cd87:	44 01 de             	add    %r11d,%esi
    cd8a:	47 8d 9c 2b f3 3e 70 	lea    0x6d703ef3(%r11,%r13,1),%r11d
    cd91:	6d 
    cd92:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    cd97:	45 31 cf             	xor    %r9d,%r15d
    cd9a:	41 01 df             	add    %ebx,%r15d
    cd9d:	44 89 c3             	mov    %r8d,%ebx
    cda0:	41 c1 c7 08          	rol    $0x8,%r15d
    cda4:	f7 d3                	not    %ebx
    cda6:	45 01 d7             	add    %r10d,%r15d
    cda9:	09 f3                	or     %esi,%ebx
    cdab:	c1 c1 0a             	rol    $0xa,%ecx
    cdae:	47 8d 94 2a a1 eb d9 	lea    0x6ed9eba1(%r10,%r13,1),%r10d
    cdb5:	6e 
    cdb6:	31 c3                	xor    %eax,%ebx
    cdb8:	41 c1 c0 0a          	rol    $0xa,%r8d
    cdbc:	44 01 db             	add    %r11d,%ebx
    cdbf:	41 89 eb             	mov    %ebp,%r11d
    cdc2:	c1 c5 0a             	rol    $0xa,%ebp
    cdc5:	41 f7 d3             	not    %r11d
    cdc8:	c1 c3 0d             	rol    $0xd,%ebx
    cdcb:	45 09 fb             	or     %r15d,%r11d
    cdce:	01 d3                	add    %edx,%ebx
    cdd0:	42 8d 94 32 f3 3e 70 	lea    0x6d703ef3(%rdx,%r14,1),%edx
    cdd7:	6d 
    cdd8:	44 8b 34 24          	mov    (%rsp),%r14d
    cddc:	41 31 cb             	xor    %ecx,%r11d
    cddf:	45 01 d3             	add    %r10d,%r11d
    cde2:	41 89 f2             	mov    %esi,%r10d
    cde5:	c1 c6 0a             	rol    $0xa,%esi
    cde8:	41 f7 d2             	not    %r10d
    cdeb:	41 c1 c3 0d          	rol    $0xd,%r11d
    cdef:	41 09 da             	or     %ebx,%r10d
    cdf2:	45 01 cb             	add    %r9d,%r11d
    cdf5:	47 8d 8c 21 a1 eb d9 	lea    0x6ed9eba1(%r9,%r12,1),%r9d
    cdfc:	6e 
    cdfd:	45 31 c2             	xor    %r8d,%r10d
    ce00:	41 01 d2             	add    %edx,%r10d
    ce03:	44 89 fa             	mov    %r15d,%edx
    ce06:	41 c1 c7 0a          	rol    $0xa,%r15d
    ce0a:	f7 d2                	not    %edx
    ce0c:	41 c1 c2 05          	rol    $0x5,%r10d
    ce10:	44 09 da             	or     %r11d,%edx
    ce13:	41 01 c2             	add    %eax,%r10d
    ce16:	42 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%rax,%r14,1),%eax
    ce1d:	6d 
    ce1e:	44 8b 74 24 1c       	mov    0x1c(%rsp),%r14d
    ce23:	31 ea                	xor    %ebp,%edx
    ce25:	44 01 ca             	add    %r9d,%edx
    ce28:	41 89 d9             	mov    %ebx,%r9d
    ce2b:	c1 c3 0a             	rol    $0xa,%ebx
    ce2e:	41 f7 d1             	not    %r9d
    ce31:	c1 c2 06             	rol    $0x6,%edx
    ce34:	45 09 d1             	or     %r10d,%r9d
    ce37:	01 ca                	add    %ecx,%edx
    ce39:	42 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%rcx,%r14,1),%ecx
    ce40:	6e 
    ce41:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
    ce46:	41 31 f1             	xor    %esi,%r9d
    ce49:	41 01 c1             	add    %eax,%r9d
    ce4c:	44 89 d8             	mov    %r11d,%eax
    ce4f:	41 c1 c1 0e          	rol    $0xe,%r9d
    ce53:	f7 d0                	not    %eax
    ce55:	45 01 c1             	add    %r8d,%r9d
    ce58:	09 d0                	or     %edx,%eax
    ce5a:	47 8d 84 30 f3 3e 70 	lea    0x6d703ef3(%r8,%r14,1),%r8d
    ce61:	6d 
    ce62:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    ce67:	44 31 f8             	xor    %r15d,%eax
    ce6a:	41 c1 c3 0a          	rol    $0xa,%r11d
    ce6e:	01 c8                	add    %ecx,%eax
    ce70:	44 89 d1             	mov    %r10d,%ecx
    ce73:	41 c1 c2 0a          	rol    $0xa,%r10d
    ce77:	f7 d1                	not    %ecx
    ce79:	c1 c0 05             	rol    $0x5,%eax
    ce7c:	44 09 c9             	or     %r9d,%ecx
    ce7f:	01 e8                	add    %ebp,%eax
    ce81:	42 8d ac 35 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r14,1),%ebp
    ce88:	6e 
    ce89:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
    ce8e:	31 d9                	xor    %ebx,%ecx
    ce90:	44 01 c1             	add    %r8d,%ecx
    ce93:	41 89 d0             	mov    %edx,%r8d
    ce96:	c1 c2 0a             	rol    $0xa,%edx
    ce99:	41 f7 d0             	not    %r8d
    ce9c:	c1 c1 0d             	rol    $0xd,%ecx
    ce9f:	41 09 c0             	or     %eax,%r8d
    cea2:	01 f1                	add    %esi,%ecx
    cea4:	42 8d b4 2e f3 3e 70 	lea    0x6d703ef3(%rsi,%r13,1),%esi
    ceab:	6d 
    ceac:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    ceb1:	45 31 d8             	xor    %r11d,%r8d
    ceb4:	41 01 e8             	add    %ebp,%r8d
    ceb7:	44 89 cd             	mov    %r9d,%ebp
    ceba:	41 c1 c1 0a          	rol    $0xa,%r9d
    cebe:	f7 d5                	not    %ebp
    cec0:	41 c1 c0 0c          	rol    $0xc,%r8d
    cec4:	09 cd                	or     %ecx,%ebp
    cec6:	45 01 f8             	add    %r15d,%r8d
    cec9:	47 8d bc 2f a1 eb d9 	lea    0x6ed9eba1(%r15,%r13,1),%r15d
    ced0:	6e 
    ced1:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    ced6:	44 31 d5             	xor    %r10d,%ebp
    ced9:	01 f5                	add    %esi,%ebp
    cedb:	89 c6                	mov    %eax,%esi
    cedd:	c1 c0 0a             	rol    $0xa,%eax
    cee0:	f7 d6                	not    %esi
    cee2:	c1 c5 0d             	rol    $0xd,%ebp
    cee5:	44 09 c6             	or     %r8d,%esi
    cee8:	01 dd                	add    %ebx,%ebp
    ceea:	42 8d 9c 33 f3 3e 70 	lea    0x6d703ef3(%rbx,%r14,1),%ebx
    cef1:	6d 
    cef2:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    cef7:	31 d6                	xor    %edx,%esi
    cef9:	44 01 fe             	add    %r15d,%esi
    cefc:	41 89 cf             	mov    %ecx,%r15d
    ceff:	41 f7 d7             	not    %r15d
    cf02:	c1 c6 07             	rol    $0x7,%esi
    cf05:	41 09 ef             	or     %ebp,%r15d
    cf08:	44 01 de             	add    %r11d,%esi
    cf0b:	47 8d 9c 33 a1 eb d9 	lea    0x6ed9eba1(%r11,%r14,1),%r11d
    cf12:	6e 
    cf13:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
    cf18:	45 31 cf             	xor    %r9d,%r15d
    cf1b:	41 01 df             	add    %ebx,%r15d
    cf1e:	44 89 c3             	mov    %r8d,%ebx
    cf21:	c1 c1 0a             	rol    $0xa,%ecx
    cf24:	41 c1 c7 07          	rol    $0x7,%r15d
    cf28:	f7 d3                	not    %ebx
    cf2a:	41 c1 c0 0a          	rol    $0xa,%r8d
    cf2e:	09 f3                	or     %esi,%ebx
    cf30:	45 01 d7             	add    %r10d,%r15d
    cf33:	47 8d 94 2a f3 3e 70 	lea    0x6d703ef3(%r10,%r13,1),%r10d
    cf3a:	6d 
    cf3b:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    cf40:	31 c3                	xor    %eax,%ebx
    cf42:	44 01 db             	add    %r11d,%ebx
    cf45:	41 89 eb             	mov    %ebp,%r11d
    cf48:	c1 c5 0a             	rol    $0xa,%ebp
    cf4b:	41 f7 d3             	not    %r11d
    cf4e:	c1 c3 05             	rol    $0x5,%ebx
    cf51:	45 09 fb             	or     %r15d,%r11d
    cf54:	01 d3                	add    %edx,%ebx
    cf56:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
    cf5d:	8f 
    cf5e:	41 31 cb             	xor    %ecx,%r11d
    cf61:	45 01 d3             	add    %r10d,%r11d
    cf64:	41 89 f2             	mov    %esi,%r10d
    cf67:	41 31 da             	xor    %ebx,%r10d
    cf6a:	41 c1 c3 05          	rol    $0x5,%r11d
    cf6e:	45 21 c2             	and    %r8d,%r10d
    cf71:	45 01 cb             	add    %r9d,%r11d
    cf74:	47 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%r9,%r14,1),%r9d
    cf7b:	7a 
    cf7c:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
    cf81:	41 31 f2             	xor    %esi,%r10d
    cf84:	c1 c6 0a             	rol    $0xa,%esi
    cf87:	41 01 d2             	add    %edx,%r10d
    cf8a:	44 89 fa             	mov    %r15d,%edx
    cf8d:	41 c1 c7 0a          	rol    $0xa,%r15d
    cf91:	31 ea                	xor    %ebp,%edx
    cf93:	41 c1 c2 0b          	rol    $0xb,%r10d
    cf97:	44 21 da             	and    %r11d,%edx
    cf9a:	41 01 c2             	add    %eax,%r10d
    cf9d:	42 8d 84 30 dc bc 1b 	lea    -0x70e44324(%rax,%r14,1),%eax
    cfa4:	8f 
    cfa5:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    cfaa:	31 ea                	xor    %ebp,%edx
    cfac:	44 01 ca             	add    %r9d,%edx
    cfaf:	41 89 d9             	mov    %ebx,%r9d
    cfb2:	45 31 d1             	xor    %r10d,%r9d
    cfb5:	c1 c2 0f             	rol    $0xf,%edx
    cfb8:	41 21 f1             	and    %esi,%r9d
    cfbb:	01 ca                	add    %ecx,%edx
    cfbd:	42 8d 8c 21 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r12,1),%ecx
    cfc4:	7a 
    cfc5:	41 31 d9             	xor    %ebx,%r9d
    cfc8:	c1 c3 0a             	rol    $0xa,%ebx
    cfcb:	41 01 c1             	add    %eax,%r9d
    cfce:	44 89 d8             	mov    %r11d,%eax
    cfd1:	41 c1 c3 0a          	rol    $0xa,%r11d
    cfd5:	44 31 f8             	xor    %r15d,%eax
    cfd8:	41 c1 c1 0c          	rol    $0xc,%r9d
    cfdc:	21 d0                	and    %edx,%eax
    cfde:	45 01 c1             	add    %r8d,%r9d
    cfe1:	47 8d 84 30 dc bc 1b 	lea    -0x70e44324(%r8,%r14,1),%r8d
    cfe8:	8f 
    cfe9:	44 8b 74 24 04       	mov    0x4(%rsp),%r14d
    cfee:	44 31 f8             	xor    %r15d,%eax
    cff1:	01 c8                	add    %ecx,%eax
    cff3:	44 89 d1             	mov    %r10d,%ecx
    cff6:	44 31 c9             	xor    %r9d,%ecx
    cff9:	c1 c0 05             	rol    $0x5,%eax
    cffc:	21 d9                	and    %ebx,%ecx
    cffe:	01 e8                	add    %ebp,%eax
    d000:	42 8d ac 35 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r14,1),%ebp
    d007:	7a 
    d008:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
    d00d:	44 31 d1             	xor    %r10d,%ecx
    d010:	41 c1 c2 0a          	rol    $0xa,%r10d
    d014:	44 01 c1             	add    %r8d,%ecx
    d017:	41 89 d0             	mov    %edx,%r8d
    d01a:	c1 c2 0a             	rol    $0xa,%edx
    d01d:	45 31 d8             	xor    %r11d,%r8d
    d020:	c1 c1 0e             	rol    $0xe,%ecx
    d023:	41 21 c0             	and    %eax,%r8d
    d026:	01 f1                	add    %esi,%ecx
    d028:	42 8d b4 36 dc bc 1b 	lea    -0x70e44324(%rsi,%r14,1),%esi
    d02f:	8f 
    d030:	45 31 d8             	xor    %r11d,%r8d
    d033:	41 01 e8             	add    %ebp,%r8d
    d036:	44 89 cd             	mov    %r9d,%ebp
    d039:	31 cd                	xor    %ecx,%ebp
    d03b:	41 c1 c0 08          	rol    $0x8,%r8d
    d03f:	44 21 d5             	and    %r10d,%ebp
    d042:	45 01 f8             	add    %r15d,%r8d
    d045:	47 8d bc 2f e9 76 6d 	lea    0x7a6d76e9(%r15,%r13,1),%r15d
    d04c:	7a 
    d04d:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    d052:	44 31 cd             	xor    %r9d,%ebp
    d055:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    d05a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
    d05f:	01 f5                	add    %esi,%ebp
    d061:	89 c6                	mov    %eax,%esi
    d063:	c1 c5 0f             	rol    $0xf,%ebp
    d066:	01 dd                	add    %ebx,%ebp
    d068:	41 c1 c1 0a          	rol    $0xa,%r9d
    d06c:	31 d6                	xor    %edx,%esi
    d06e:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
    d075:	8f 
    d076:	44 21 c6             	and    %r8d,%esi
    d079:	c1 c0 0a             	rol    $0xa,%eax
    d07c:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    d081:	31 d6                	xor    %edx,%esi
    d083:	44 01 fe             	add    %r15d,%esi
    d086:	41 89 cf             	mov    %ecx,%r15d
    d089:	41 31 ef             	xor    %ebp,%r15d
    d08c:	c1 c6 0b             	rol    $0xb,%esi
    d08f:	45 21 cf             	and    %r9d,%r15d
    d092:	44 01 de             	add    %r11d,%esi
    d095:	47 8d 9c 23 e9 76 6d 	lea    0x7a6d76e9(%r11,%r12,1),%r11d
    d09c:	7a 
    d09d:	44 8b 64 24 20       	mov    0x20(%rsp),%r12d
    d0a2:	41 31 cf             	xor    %ecx,%r15d
    d0a5:	c1 c1 0a             	rol    $0xa,%ecx
    d0a8:	41 01 df             	add    %ebx,%r15d
    d0ab:	44 89 c3             	mov    %r8d,%ebx
    d0ae:	41 c1 c0 0a          	rol    $0xa,%r8d
    d0b2:	31 c3                	xor    %eax,%ebx
    d0b4:	41 c1 c7 0e          	rol    $0xe,%r15d
    d0b8:	21 f3                	and    %esi,%ebx
    d0ba:	45 01 d7             	add    %r10d,%r15d
    d0bd:	47 8d 94 32 dc bc 1b 	lea    -0x70e44324(%r10,%r14,1),%r10d
    d0c4:	8f 
    d0c5:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    d0ca:	31 c3                	xor    %eax,%ebx
    d0cc:	44 01 db             	add    %r11d,%ebx
    d0cf:	41 89 eb             	mov    %ebp,%r11d
    d0d2:	45 31 fb             	xor    %r15d,%r11d
    d0d5:	c1 c3 0e             	rol    $0xe,%ebx
    d0d8:	41 21 cb             	and    %ecx,%r11d
    d0db:	01 d3                	add    %edx,%ebx
    d0dd:	42 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%rdx,%r14,1),%edx
    d0e4:	7a 
    d0e5:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
    d0ea:	41 31 eb             	xor    %ebp,%r11d
    d0ed:	c1 c5 0a             	rol    $0xa,%ebp
    d0f0:	45 01 d3             	add    %r10d,%r11d
    d0f3:	41 89 f2             	mov    %esi,%r10d
    d0f6:	45 31 c2             	xor    %r8d,%r10d
    d0f9:	41 c1 c3 0f          	rol    $0xf,%r11d
    d0fd:	41 21 da             	and    %ebx,%r10d
    d100:	45 01 cb             	add    %r9d,%r11d
    d103:	47 8d 8c 31 dc bc 1b 	lea    -0x70e44324(%r9,%r14,1),%r9d
    d10a:	8f 
    d10b:	45 31 c2             	xor    %r8d,%r10d
    d10e:	41 01 d2             	add    %edx,%r10d
    d111:	44 89 fa             	mov    %r15d,%edx
    d114:	c1 c6 0a             	rol    $0xa,%esi
    d117:	44 31 da             	xor    %r11d,%edx
    d11a:	41 c1 c2 0e          	rol    $0xe,%r10d
    d11e:	21 ea                	and    %ebp,%edx
    d120:	41 01 c2             	add    %eax,%r10d
    d123:	42 8d 84 20 e9 76 6d 	lea    0x7a6d76e9(%rax,%r12,1),%eax
    d12a:	7a 
    d12b:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    d130:	44 31 fa             	xor    %r15d,%edx
    d133:	41 c1 c7 0a          	rol    $0xa,%r15d
    d137:	44 01 ca             	add    %r9d,%edx
    d13a:	41 89 d9             	mov    %ebx,%r9d
    d13d:	c1 c3 0a             	rol    $0xa,%ebx
    d140:	41 31 f1             	xor    %esi,%r9d
    d143:	c1 c2 09             	rol    $0x9,%edx
    d146:	45 21 d1             	and    %r10d,%r9d
    d149:	01 ca                	add    %ecx,%edx
    d14b:	42 8d 8c 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%ecx
    d152:	8f 
    d153:	44 8b 64 24 24       	mov    0x24(%rsp),%r12d
    d158:	41 31 f1             	xor    %esi,%r9d
    d15b:	41 01 c1             	add    %eax,%r9d
    d15e:	44 89 d8             	mov    %r11d,%eax
    d161:	31 d0                	xor    %edx,%eax
    d163:	41 c1 c1 06          	rol    $0x6,%r9d
    d167:	44 21 f8             	and    %r15d,%eax
    d16a:	45 01 c1             	add    %r8d,%r9d
    d16d:	47 8d 84 28 e9 76 6d 	lea    0x7a6d76e9(%r8,%r13,1),%r8d
    d174:	7a 
    d175:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    d17a:	44 31 d8             	xor    %r11d,%eax
    d17d:	41 c1 c3 0a          	rol    $0xa,%r11d
    d181:	01 c8                	add    %ecx,%eax
    d183:	44 89 d1             	mov    %r10d,%ecx
    d186:	41 c1 c2 0a          	rol    $0xa,%r10d
    d18a:	31 d9                	xor    %ebx,%ecx
    d18c:	c1 c0 08             	rol    $0x8,%eax
    d18f:	44 21 c9             	and    %r9d,%ecx
    d192:	01 e8                	add    %ebp,%eax
    d194:	42 8d ac 2d dc bc 1b 	lea    -0x70e44324(%rbp,%r13,1),%ebp
    d19b:	8f 
    d19c:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    d1a1:	31 d9                	xor    %ebx,%ecx
    d1a3:	44 01 c1             	add    %r8d,%ecx
    d1a6:	41 89 d0             	mov    %edx,%r8d
    d1a9:	c1 c1 0e             	rol    $0xe,%ecx
    d1ac:	01 f1                	add    %esi,%ecx
    d1ae:	41 31 c0             	xor    %eax,%r8d
    d1b1:	42 8d b4 2e e9 76 6d 	lea    0x7a6d76e9(%rsi,%r13,1),%esi
    d1b8:	7a 
    d1b9:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    d1be:	45 21 d8             	and    %r11d,%r8d
    d1c1:	41 31 d0             	xor    %edx,%r8d
    d1c4:	c1 c2 0a             	rol    $0xa,%edx
    d1c7:	41 01 e8             	add    %ebp,%r8d
    d1ca:	44 89 cd             	mov    %r9d,%ebp
    d1cd:	41 c1 c1 0a          	rol    $0xa,%r9d
    d1d1:	44 31 d5             	xor    %r10d,%ebp
    d1d4:	41 c1 c0 09          	rol    $0x9,%r8d
    d1d8:	21 cd                	and    %ecx,%ebp
    d1da:	45 01 f8             	add    %r15d,%r8d
    d1dd:	47 8d bc 27 dc bc 1b 	lea    -0x70e44324(%r15,%r12,1),%r15d
    d1e4:	8f 
    d1e5:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    d1ea:	44 31 d5             	xor    %r10d,%ebp
    d1ed:	01 f5                	add    %esi,%ebp
    d1ef:	89 c6                	mov    %eax,%esi
    d1f1:	44 31 c6             	xor    %r8d,%esi
    d1f4:	c1 c5 06             	rol    $0x6,%ebp
    d1f7:	21 d6                	and    %edx,%esi
    d1f9:	01 dd                	add    %ebx,%ebp
    d1fb:	42 8d 9c 33 e9 76 6d 	lea    0x7a6d76e9(%rbx,%r14,1),%ebx
    d202:	7a 
    d203:	44 8b 34 24          	mov    (%rsp),%r14d
    d207:	31 c6                	xor    %eax,%esi
    d209:	c1 c0 0a             	rol    $0xa,%eax
    d20c:	44 01 fe             	add    %r15d,%esi
    d20f:	41 89 cf             	mov    %ecx,%r15d
    d212:	c1 c1 0a             	rol    $0xa,%ecx
    d215:	45 31 cf             	xor    %r9d,%r15d
    d218:	c1 c6 0e             	rol    $0xe,%esi
    d21b:	41 21 ef             	and    %ebp,%r15d
    d21e:	44 01 de             	add    %r11d,%esi
    d221:	47 8d 9c 23 dc bc 1b 	lea    -0x70e44324(%r11,%r12,1),%r11d
    d228:	8f 
    d229:	45 31 cf             	xor    %r9d,%r15d
    d22c:	41 01 df             	add    %ebx,%r15d
    d22f:	44 89 c3             	mov    %r8d,%ebx
    d232:	31 f3                	xor    %esi,%ebx
    d234:	41 c1 c7 09          	rol    $0x9,%r15d
    d238:	21 c3                	and    %eax,%ebx
    d23a:	45 01 d7             	add    %r10d,%r15d
    d23d:	47 8d 94 32 e9 76 6d 	lea    0x7a6d76e9(%r10,%r14,1),%r10d
    d244:	7a 
    d245:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
    d24a:	44 31 c3             	xor    %r8d,%ebx
    d24d:	44 01 db             	add    %r11d,%ebx
    d250:	41 89 eb             	mov    %ebp,%r11d
    d253:	c1 c3 05             	rol    $0x5,%ebx
    d256:	41 31 cb             	xor    %ecx,%r11d
    d259:	41 c1 c0 0a          	rol    $0xa,%r8d
    d25d:	45 21 fb             	and    %r15d,%r11d
    d260:	01 d3                	add    %edx,%ebx
    d262:	42 8d 94 2a dc bc 1b 	lea    -0x70e44324(%rdx,%r13,1),%edx
    d269:	8f 
    d26a:	c1 c5 0a             	rol    $0xa,%ebp
    d26d:	41 31 cb             	xor    %ecx,%r11d
    d270:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    d275:	45 01 d3             	add    %r10d,%r11d
    d278:	41 89 f2             	mov    %esi,%r10d
    d27b:	41 31 da             	xor    %ebx,%r10d
    d27e:	41 c1 c3 0c          	rol    $0xc,%r11d
    d282:	45 21 c2             	and    %r8d,%r10d
    d285:	45 01 cb             	add    %r9d,%r11d
    d288:	47 8d 8c 29 e9 76 6d 	lea    0x7a6d76e9(%r9,%r13,1),%r9d
    d28f:	7a 
    d290:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
    d295:	41 31 f2             	xor    %esi,%r10d
    d298:	c1 c6 0a             	rol    $0xa,%esi
    d29b:	41 01 d2             	add    %edx,%r10d
    d29e:	44 89 fa             	mov    %r15d,%edx
    d2a1:	41 c1 c7 0a          	rol    $0xa,%r15d
    d2a5:	31 ea                	xor    %ebp,%edx
    d2a7:	41 c1 c2 06          	rol    $0x6,%r10d
    d2ab:	44 21 da             	and    %r11d,%edx
    d2ae:	41 01 c2             	add    %eax,%r10d
    d2b1:	42 8d 84 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%eax
    d2b8:	8f 
    d2b9:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    d2be:	31 ea                	xor    %ebp,%edx
    d2c0:	44 01 ca             	add    %r9d,%edx
    d2c3:	41 89 d9             	mov    %ebx,%r9d
    d2c6:	45 31 d1             	xor    %r10d,%r9d
    d2c9:	c1 c2 09             	rol    $0x9,%edx
    d2cc:	41 21 f1             	and    %esi,%r9d
    d2cf:	01 ca                	add    %ecx,%edx
    d2d1:	42 8d 8c 31 e9 76 6d 	lea    0x7a6d76e9(%rcx,%r14,1),%ecx
    d2d8:	7a 
    d2d9:	41 31 d9             	xor    %ebx,%r9d
    d2dc:	c1 c3 0a             	rol    $0xa,%ebx
    d2df:	41 01 c1             	add    %eax,%r9d
    d2e2:	44 89 d8             	mov    %r11d,%eax
    d2e5:	41 c1 c1 08          	rol    $0x8,%r9d
    d2e9:	44 31 f8             	xor    %r15d,%eax
    d2ec:	45 01 c1             	add    %r8d,%r9d
    d2ef:	21 d0                	and    %edx,%eax
    d2f1:	47 8d 84 28 dc bc 1b 	lea    -0x70e44324(%r8,%r13,1),%r8d
    d2f8:	8f 
    d2f9:	41 c1 c3 0a          	rol    $0xa,%r11d
    d2fd:	44 31 f8             	xor    %r15d,%eax
    d300:	44 8b 2c 24          	mov    (%rsp),%r13d
    d304:	01 c8                	add    %ecx,%eax
    d306:	44 89 d1             	mov    %r10d,%ecx
    d309:	44 31 c9             	xor    %r9d,%ecx
    d30c:	c1 c0 0c             	rol    $0xc,%eax
    d30f:	21 d9                	and    %ebx,%ecx
    d311:	01 e8                	add    %ebp,%eax
    d313:	42 8d ac 25 e9 76 6d 	lea    0x7a6d76e9(%rbp,%r12,1),%ebp
    d31a:	7a 
    d31b:	44 8b 64 24 38       	mov    0x38(%rsp),%r12d
    d320:	44 31 d1             	xor    %r10d,%ecx
    d323:	41 c1 c2 0a          	rol    $0xa,%r10d
    d327:	44 01 c1             	add    %r8d,%ecx
    d32a:	41 89 d0             	mov    %edx,%r8d
    d32d:	c1 c2 0a             	rol    $0xa,%edx
    d330:	45 31 d8             	xor    %r11d,%r8d
    d333:	c1 c1 06             	rol    $0x6,%ecx
    d336:	41 21 c0             	and    %eax,%r8d
    d339:	01 f1                	add    %esi,%ecx
    d33b:	42 8d b4 26 dc bc 1b 	lea    -0x70e44324(%rsi,%r12,1),%esi
    d342:	8f 
    d343:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    d348:	45 31 d8             	xor    %r11d,%r8d
    d34b:	41 01 e8             	add    %ebp,%r8d
    d34e:	44 89 cd             	mov    %r9d,%ebp
    d351:	31 cd                	xor    %ecx,%ebp
    d353:	41 c1 c0 05          	rol    $0x5,%r8d
    d357:	44 21 d5             	and    %r10d,%ebp
    d35a:	45 01 f8             	add    %r15d,%r8d
    d35d:	47 8d bc 27 e9 76 6d 	lea    0x7a6d76e9(%r15,%r12,1),%r15d
    d364:	7a 
    d365:	44 31 cd             	xor    %r9d,%ebp
    d368:	41 c1 c1 0a          	rol    $0xa,%r9d
    d36c:	01 f5                	add    %esi,%ebp
    d36e:	89 c6                	mov    %eax,%esi
    d370:	31 d6                	xor    %edx,%esi
    d372:	c1 c5 05             	rol    $0x5,%ebp
    d375:	44 21 c6             	and    %r8d,%esi
    d378:	01 dd                	add    %ebx,%ebp
    d37a:	42 8d 9c 2b dc bc 1b 	lea    -0x70e44324(%rbx,%r13,1),%ebx
    d381:	8f 
    d382:	44 8b 6c 24 28       	mov    0x28(%rsp),%r13d
    d387:	31 d6                	xor    %edx,%esi
    d389:	44 01 fe             	add    %r15d,%esi
    d38c:	41 89 cf             	mov    %ecx,%r15d
    d38f:	c1 c6 0f             	rol    $0xf,%esi
    d392:	44 01 de             	add    %r11d,%esi
    d395:	41 31 ef             	xor    %ebp,%r15d
    d398:	c1 c0 0a             	rol    $0xa,%eax
    d39b:	47 8d 9c 2b e9 76 6d 	lea    0x7a6d76e9(%r11,%r13,1),%r11d
    d3a2:	7a 
    d3a3:	45 21 cf             	and    %r9d,%r15d
    d3a6:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
    d3ab:	41 31 cf             	xor    %ecx,%r15d
    d3ae:	c1 c1 0a             	rol    $0xa,%ecx
    d3b1:	44 01 fb             	add    %r15d,%ebx
    d3b4:	41 89 cf             	mov    %ecx,%r15d
    d3b7:	44 89 c1             	mov    %r8d,%ecx
    d3ba:	41 c1 c0 0a          	rol    $0xa,%r8d
    d3be:	31 c1                	xor    %eax,%ecx
    d3c0:	c1 c3 0c             	rol    $0xc,%ebx
    d3c3:	21 f1                	and    %esi,%ecx
    d3c5:	44 01 d3             	add    %r10d,%ebx
    d3c8:	47 8d 94 2a 4e fd 53 	lea    -0x56ac02b2(%r10,%r13,1),%r10d
    d3cf:	a9 
    d3d0:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    d3d5:	31 c1                	xor    %eax,%ecx
    d3d7:	44 01 d9             	add    %r11d,%ecx
    d3da:	45 89 fb             	mov    %r15d,%r11d
    d3dd:	41 f7 d3             	not    %r11d
    d3e0:	c1 c1 08             	rol    $0x8,%ecx
    d3e3:	41 09 eb             	or     %ebp,%r11d
    d3e6:	01 d1                	add    %edx,%ecx
    d3e8:	c1 c5 0a             	rol    $0xa,%ebp
    d3eb:	03 54 24 18          	add    0x18(%rsp),%edx
    d3ef:	41 31 db             	xor    %ebx,%r11d
    d3f2:	45 01 da             	add    %r11d,%r10d
    d3f5:	41 89 f3             	mov    %esi,%r11d
    d3f8:	c1 c6 0a             	rol    $0xa,%esi
    d3fb:	45 31 c3             	xor    %r8d,%r11d
    d3fe:	41 c1 c2 09          	rol    $0x9,%r10d
    d402:	41 31 cb             	xor    %ecx,%r11d
    d405:	45 01 ca             	add    %r9d,%r10d
    d408:	47 8d 8c 29 4e fd 53 	lea    -0x56ac02b2(%r9,%r13,1),%r9d
    d40f:	a9 
    d410:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    d415:	44 01 da             	add    %r11d,%edx
    d418:	41 89 eb             	mov    %ebp,%r11d
    d41b:	41 f7 d3             	not    %r11d
    d41e:	c1 c2 08             	rol    $0x8,%edx
    d421:	41 09 db             	or     %ebx,%r11d
    d424:	01 c2                	add    %eax,%edx
    d426:	45 31 d3             	xor    %r10d,%r11d
    d429:	45 01 d9             	add    %r11d,%r9d
    d42c:	41 89 cb             	mov    %ecx,%r11d
    d42f:	41 c1 c1 0f          	rol    $0xf,%r9d
    d433:	41 31 f3             	xor    %esi,%r11d
    d436:	c1 c3 0a             	rol    $0xa,%ebx
    d439:	03 44 24 20          	add    0x20(%rsp),%eax
    d43d:	41 31 d3             	xor    %edx,%r11d
    d440:	45 01 f9             	add    %r15d,%r9d
    d443:	47 8d bc 2f 4e fd 53 	lea    -0x56ac02b2(%r15,%r13,1),%r15d
    d44a:	a9 
    d44b:	c1 c1 0a             	rol    $0xa,%ecx
    d44e:	41 01 c3             	add    %eax,%r11d
    d451:	89 d8                	mov    %ebx,%eax
    d453:	44 8b 6c 24 34       	mov    0x34(%rsp),%r13d
    d458:	f7 d0                	not    %eax
    d45a:	41 c1 c3 05          	rol    $0x5,%r11d
    d45e:	44 09 d0             	or     %r10d,%eax
    d461:	45 01 c3             	add    %r8d,%r11d
    d464:	41 c1 c2 0a          	rol    $0xa,%r10d
    d468:	45 01 e0             	add    %r12d,%r8d
    d46b:	44 31 c8             	xor    %r9d,%eax
    d46e:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
    d473:	41 01 c7             	add    %eax,%r15d
    d476:	89 d0                	mov    %edx,%eax
    d478:	c1 c2 0a             	rol    $0xa,%edx
    d47b:	31 c8                	xor    %ecx,%eax
    d47d:	41 c1 c7 05          	rol    $0x5,%r15d
    d481:	44 31 d8             	xor    %r11d,%eax
    d484:	41 01 ef             	add    %ebp,%r15d
    d487:	42 8d ac 35 4e fd 53 	lea    -0x56ac02b2(%rbp,%r14,1),%ebp
    d48e:	a9 
    d48f:	41 01 c0             	add    %eax,%r8d
    d492:	44 89 d0             	mov    %r10d,%eax
    d495:	f7 d0                	not    %eax
    d497:	41 c1 c0 0c          	rol    $0xc,%r8d
    d49b:	44 09 c8             	or     %r9d,%eax
    d49e:	41 01 f0             	add    %esi,%r8d
    d4a1:	41 c1 c1 0a          	rol    $0xa,%r9d
    d4a5:	03 74 24 04          	add    0x4(%rsp),%esi
    d4a9:	44 31 f8             	xor    %r15d,%eax
    d4ac:	01 c5                	add    %eax,%ebp
    d4ae:	44 89 d8             	mov    %r11d,%eax
    d4b1:	31 d0                	xor    %edx,%eax
    d4b3:	c1 c5 0b             	rol    $0xb,%ebp
    d4b6:	44 31 c0             	xor    %r8d,%eax
    d4b9:	01 dd                	add    %ebx,%ebp
    d4bb:	01 c6                	add    %eax,%esi
    d4bd:	44 89 c8             	mov    %r9d,%eax
    d4c0:	41 c1 c3 0a          	rol    $0xa,%r11d
    d4c4:	f7 d0                	not    %eax
    d4c6:	c1 c6 09             	rol    $0x9,%esi
    d4c9:	41 89 c6             	mov    %eax,%r14d
    d4cc:	42 8d 84 23 4e fd 53 	lea    -0x56ac02b2(%rbx,%r12,1),%eax
    d4d3:	a9 
    d4d4:	44 89 c3             	mov    %r8d,%ebx
    d4d7:	01 ce                	add    %ecx,%esi
    d4d9:	45 09 fe             	or     %r15d,%r14d
    d4dc:	44 31 db             	xor    %r11d,%ebx
    d4df:	41 c1 c7 0a          	rol    $0xa,%r15d
    d4e3:	44 01 e9             	add    %r13d,%ecx
    d4e6:	41 31 ee             	xor    %ebp,%r14d
    d4e9:	41 c1 c0 0a          	rol    $0xa,%r8d
    d4ed:	41 01 c6             	add    %eax,%r14d
    d4f0:	89 d8                	mov    %ebx,%eax
    d4f2:	44 89 fb             	mov    %r15d,%ebx
    d4f5:	31 f0                	xor    %esi,%eax
    d4f7:	41 c1 c6 06          	rol    $0x6,%r14d
    d4fb:	f7 d3                	not    %ebx
    d4fd:	01 c1                	add    %eax,%ecx
    d4ff:	8b 44 24 18          	mov    0x18(%rsp),%eax
    d503:	45 01 d6             	add    %r10d,%r14d
    d506:	09 eb                	or     %ebp,%ebx
    d508:	c1 c1 0c             	rol    $0xc,%ecx
    d50b:	44 31 f3             	xor    %r14d,%ebx
    d50e:	c1 c5 0a             	rol    $0xa,%ebp
    d511:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
    d518:	a9 
    d519:	41 89 f2             	mov    %esi,%r10d
    d51c:	01 d1                	add    %edx,%ecx
    d51e:	c1 c6 0a             	rol    $0xa,%esi
    d521:	45 31 c2             	xor    %r8d,%r10d
    d524:	01 c3                	add    %eax,%ebx
    d526:	03 54 24 08          	add    0x8(%rsp),%edx
    d52a:	44 89 d0             	mov    %r10d,%eax
    d52d:	41 89 ea             	mov    %ebp,%r10d
    d530:	c1 c3 08             	rol    $0x8,%ebx
    d533:	31 c8                	xor    %ecx,%eax
    d535:	41 f7 d2             	not    %r10d
    d538:	44 01 cb             	add    %r9d,%ebx
    d53b:	01 c2                	add    %eax,%edx
    d53d:	8b 04 24             	mov    (%rsp),%eax
    d540:	45 09 f2             	or     %r14d,%r10d
    d543:	c1 c2 05             	rol    $0x5,%edx
    d546:	41 31 da             	xor    %ebx,%r10d
    d549:	41 8d 84 01 4e fd 53 	lea    -0x56ac02b2(%r9,%rax,1),%eax
    d550:	a9 
    d551:	41 89 c9             	mov    %ecx,%r9d
    d554:	44 01 da             	add    %r11d,%edx
    d557:	41 01 c2             	add    %eax,%r10d
    d55a:	41 31 f1             	xor    %esi,%r9d
    d55d:	41 c1 c6 0a          	rol    $0xa,%r14d
    d561:	44 03 5c 24 0c       	add    0xc(%rsp),%r11d
    d566:	41 c1 c2 0d          	rol    $0xd,%r10d
    d56a:	44 89 c8             	mov    %r9d,%eax
    d56d:	45 89 f1             	mov    %r14d,%r9d
    d570:	c1 c1 0a             	rol    $0xa,%ecx
    d573:	31 d0                	xor    %edx,%eax
    d575:	41 f7 d1             	not    %r9d
    d578:	45 01 fa             	add    %r15d,%r10d
    d57b:	41 01 c3             	add    %eax,%r11d
    d57e:	8b 44 24 10          	mov    0x10(%rsp),%eax
    d582:	41 09 d9             	or     %ebx,%r9d
    d585:	c1 c3 0a             	rol    $0xa,%ebx
    d588:	45 31 d1             	xor    %r10d,%r9d
    d58b:	41 c1 c3 0e          	rol    $0xe,%r11d
    d58f:	41 8d 84 07 4e fd 53 	lea    -0x56ac02b2(%r15,%rax,1),%eax
    d596:	a9 
    d597:	41 89 df             	mov    %ebx,%r15d
    d59a:	45 01 c3             	add    %r8d,%r11d
    d59d:	45 01 e0             	add    %r12d,%r8d
    d5a0:	41 01 c1             	add    %eax,%r9d
    d5a3:	41 f7 d7             	not    %r15d
    d5a6:	89 d0                	mov    %edx,%eax
    d5a8:	c1 c2 0a             	rol    $0xa,%edx
    d5ab:	31 c8                	xor    %ecx,%eax
    d5ad:	41 c1 c1 0c          	rol    $0xc,%r9d
    d5b1:	45 89 fc             	mov    %r15d,%r12d
    d5b4:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
    d5b9:	41 01 e9             	add    %ebp,%r9d
    d5bc:	44 31 d8             	xor    %r11d,%eax
    d5bf:	45 09 d4             	or     %r10d,%r12d
    d5c2:	41 c1 c2 0a          	rol    $0xa,%r10d
    d5c6:	41 01 c0             	add    %eax,%r8d
    d5c9:	45 31 cc             	xor    %r9d,%r12d
    d5cc:	42 8d 84 3d 4e fd 53 	lea    -0x56ac02b2(%rbp,%r15,1),%eax
    d5d3:	a9 
    d5d4:	44 89 dd             	mov    %r11d,%ebp
    d5d7:	41 01 c4             	add    %eax,%r12d
    d5da:	41 c1 c0 06          	rol    $0x6,%r8d
    d5de:	31 d5                	xor    %edx,%ebp
    d5e0:	44 8b 7c 24 38       	mov    0x38(%rsp),%r15d
    d5e5:	41 01 f0             	add    %esi,%r8d
    d5e8:	41 c1 c4 05          	rol    $0x5,%r12d
    d5ec:	43 8d 84 2e 4e fd 53 	lea    -0x56ac02b2(%r14,%r13,1),%eax
    d5f3:	a9 
    d5f4:	45 01 f4             	add    %r14d,%r12d
    d5f7:	44 31 c5             	xor    %r8d,%ebp
    d5fa:	03 74 24 38          	add    0x38(%rsp),%esi
    d5fe:	41 c1 c3 0a          	rol    $0xa,%r11d
    d602:	01 ee                	add    %ebp,%esi
    d604:	44 89 d5             	mov    %r10d,%ebp
    d607:	44 8b 74 24 24       	mov    0x24(%rsp),%r14d
    d60c:	f7 d5                	not    %ebp
    d60e:	c1 c6 08             	rol    $0x8,%esi
    d611:	44 09 cd             	or     %r9d,%ebp
    d614:	01 ce                	add    %ecx,%esi
    d616:	41 c1 c1 0a          	rol    $0xa,%r9d
    d61a:	03 0c 24             	add    (%rsp),%ecx
    d61d:	44 31 e5             	xor    %r12d,%ebp
    d620:	01 c5                	add    %eax,%ebp
    d622:	44 89 c0             	mov    %r8d,%eax
    d625:	41 c1 c0 0a          	rol    $0xa,%r8d
    d629:	44 31 d8             	xor    %r11d,%eax
    d62c:	c1 c5 0c             	rol    $0xc,%ebp
    d62f:	31 f0                	xor    %esi,%eax
    d631:	01 dd                	add    %ebx,%ebp
    d633:	01 c1                	add    %eax,%ecx
    d635:	44 89 c8             	mov    %r9d,%eax
    d638:	f7 d0                	not    %eax
    d63a:	c1 c1 0d             	rol    $0xd,%ecx
    d63d:	41 89 c5             	mov    %eax,%r13d
    d640:	42 8d 84 33 4e fd 53 	lea    -0x56ac02b2(%rbx,%r14,1),%eax
    d647:	a9 
    d648:	89 f3                	mov    %esi,%ebx
    d64a:	01 d1                	add    %edx,%ecx
    d64c:	45 09 e5             	or     %r12d,%r13d
    d64f:	44 31 c3             	xor    %r8d,%ebx
    d652:	41 c1 c4 0a          	rol    $0xa,%r12d
    d656:	03 54 24 1c          	add    0x1c(%rsp),%edx
    d65a:	31 cb                	xor    %ecx,%ebx
    d65c:	41 31 ed             	xor    %ebp,%r13d
    d65f:	c1 c6 0a             	rol    $0xa,%esi
    d662:	41 01 c5             	add    %eax,%r13d
    d665:	01 da                	add    %ebx,%edx
    d667:	44 89 e3             	mov    %r12d,%ebx
    d66a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    d66e:	41 c1 c5 0d          	rol    $0xd,%r13d
    d672:	f7 d3                	not    %ebx
    d674:	c1 c2 06             	rol    $0x6,%edx
    d677:	45 01 d5             	add    %r10d,%r13d
    d67a:	09 eb                	or     %ebp,%ebx
    d67c:	41 8d 84 02 4e fd 53 	lea    -0x56ac02b2(%r10,%rax,1),%eax
    d683:	a9 
    d684:	44 01 da             	add    %r11d,%edx
    d687:	44 31 eb             	xor    %r13d,%ebx
    d68a:	c1 c5 0a             	rol    $0xa,%ebp
    d68d:	44 03 5c 24 28       	add    0x28(%rsp),%r11d
    d692:	01 c3                	add    %eax,%ebx
    d694:	89 c8                	mov    %ecx,%eax
    d696:	41 89 ea             	mov    %ebp,%r10d
    d699:	c1 c1 0a             	rol    $0xa,%ecx
    d69c:	31 f0                	xor    %esi,%eax
    d69e:	41 f7 d2             	not    %r10d
    d6a1:	c1 c3 0e             	rol    $0xe,%ebx
    d6a4:	31 d0                	xor    %edx,%eax
    d6a6:	44 01 cb             	add    %r9d,%ebx
    d6a9:	41 01 c3             	add    %eax,%r11d
    d6ac:	44 89 d0             	mov    %r10d,%eax
    d6af:	44 8b 54 24 14       	mov    0x14(%rsp),%r10d
    d6b4:	44 09 e8             	or     %r13d,%eax
    d6b7:	41 c1 c5 0a          	rol    $0xa,%r13d
    d6bb:	31 d8                	xor    %ebx,%eax
    d6bd:	47 8d 8c 11 4e fd 53 	lea    -0x56ac02b2(%r9,%r10,1),%r9d
    d6c4:	a9 
    d6c5:	41 c1 c3 05          	rol    $0x5,%r11d
    d6c9:	41 89 d2             	mov    %edx,%r10d
    d6cc:	41 01 c1             	add    %eax,%r9d
    d6cf:	44 89 e8             	mov    %r13d,%eax
    d6d2:	45 01 c3             	add    %r8d,%r11d
    d6d5:	41 31 ca             	xor    %ecx,%r10d
    d6d8:	41 c1 c1 0b          	rol    $0xb,%r9d
    d6dc:	f7 d0                	not    %eax
    d6de:	44 03 44 24 2c       	add    0x2c(%rsp),%r8d
    d6e3:	45 31 da             	xor    %r11d,%r10d
    d6e6:	45 01 e1             	add    %r12d,%r9d
    d6e9:	09 d8                	or     %ebx,%eax
    d6eb:	45 01 c2             	add    %r8d,%r10d
    d6ee:	c1 c2 0a             	rol    $0xa,%edx
    d6f1:	41 c1 c2 0f          	rol    $0xf,%r10d
    d6f5:	44 31 c8             	xor    %r9d,%eax
    d6f8:	45 89 d8             	mov    %r11d,%r8d
    d6fb:	c1 c3 0a             	rol    $0xa,%ebx
    d6fe:	47 8d a4 3c 4e fd 53 	lea    -0x56ac02b2(%r12,%r15,1),%r12d
    d705:	a9 
    d706:	41 01 f2             	add    %esi,%r10d
    d709:	41 31 d0             	xor    %edx,%r8d
    d70c:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    d711:	41 01 c4             	add    %eax,%r12d
    d714:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
    d718:	41 c1 c4 08          	rol    $0x8,%r12d
    d71c:	41 01 ec             	add    %ebp,%r12d
    d71f:	45 31 d0             	xor    %r10d,%r8d
    d722:	44 01 f6             	add    %r14d,%esi
    d725:	41 c1 c3 0a          	rol    $0xa,%r11d
    d729:	44 01 c6             	add    %r8d,%esi
    d72c:	41 89 d8             	mov    %ebx,%r8d
    d72f:	44 89 5c 24 54       	mov    %r11d,0x54(%rsp)
    d734:	41 f7 d0             	not    %r8d
    d737:	c1 c6 0d             	rol    $0xd,%esi
    d73a:	45 89 c6             	mov    %r8d,%r14d
    d73d:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    d742:	01 ce                	add    %ecx,%esi
    d744:	03 4c 24 3c          	add    0x3c(%rsp),%ecx
    d748:	45 09 ce             	or     %r9d,%r14d
    d74b:	41 c1 c1 0a          	rol    $0xa,%r9d
    d74f:	42 8d 84 05 4e fd 53 	lea    -0x56ac02b2(%rbp,%r8,1),%eax
    d756:	a9 
    d757:	45 89 d0             	mov    %r10d,%r8d
    d75a:	45 31 e6             	xor    %r12d,%r14d
    d75d:	41 c1 c2 0a          	rol    $0xa,%r10d
    d761:	45 31 d8             	xor    %r11d,%r8d
    d764:	41 01 c6             	add    %eax,%r14d
    d767:	44 89 c8             	mov    %r9d,%eax
    d76a:	44 89 54 24 64       	mov    %r10d,0x64(%rsp)
    d76f:	41 31 f0             	xor    %esi,%r8d
    d772:	41 c1 c6 05          	rol    $0x5,%r14d
    d776:	f7 d0                	not    %eax
    d778:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
    d77d:	44 01 c1             	add    %r8d,%ecx
    d780:	41 89 f0             	mov    %esi,%r8d
    d783:	45 01 ee             	add    %r13d,%r14d
    d786:	44 09 e0             	or     %r12d,%eax
    d789:	c1 c1 0b             	rol    $0xb,%ecx
    d78c:	45 31 d0             	xor    %r10d,%r8d
    d78f:	44 31 f0             	xor    %r14d,%eax
    d792:	c1 c6 0a             	rol    $0xa,%esi
    d795:	01 d1                	add    %edx,%ecx
    d797:	03 54 24 14          	add    0x14(%rsp),%edx
    d79b:	41 c1 c4 0a          	rol    $0xa,%r12d
    d79f:	89 74 24 60          	mov    %esi,0x60(%rsp)
    d7a3:	41 31 c8             	xor    %ecx,%r8d
    d7a6:	43 8d ac 3d 4e fd 53 	lea    -0x56ac02b2(%r13,%r15,1),%ebp
    d7ad:	a9 
    d7ae:	44 89 64 24 4c       	mov    %r12d,0x4c(%rsp)
    d7b3:	01 c5                	add    %eax,%ebp
    d7b5:	44 01 c2             	add    %r8d,%edx
    d7b8:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    d7bc:	c1 c5 06             	rol    $0x6,%ebp
    d7bf:	c1 c2 0b             	rol    $0xb,%edx
    d7c2:	01 dd                	add    %ebx,%ebp
    d7c4:	44 01 da             	add    %r11d,%edx
    d7c7:	03 77 0c             	add    0xc(%rdi),%esi
    d7ca:	44 03 57 10          	add    0x10(%rdi),%r10d
    d7ce:	44 03 5f 14          	add    0x14(%rdi),%r11d
    d7d2:	03 5f 18             	add    0x18(%rdi),%ebx
    d7d5:	41 01 f6             	add    %esi,%r14d
    d7d8:	45 01 d4             	add    %r10d,%r12d
    d7db:	45 01 d9             	add    %r11d,%r9d
    d7de:	89 54 24 58          	mov    %edx,0x58(%rsp)
    d7e2:	01 da                	add    %ebx,%edx
    d7e4:	be 68 00 00 00       	mov    $0x68,%esi
    d7e9:	44 89 4f 10          	mov    %r9d,0x10(%rdi)
    d7ed:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
    d7f1:	44 89 67 0c          	mov    %r12d,0xc(%rdi)
    d7f5:	44 89 74 24 48       	mov    %r14d,0x48(%rsp)
    d7fa:	89 57 14             	mov    %edx,0x14(%rdi)
    d7fd:	03 4f 08             	add    0x8(%rdi),%ecx
    d800:	01 cd                	add    %ecx,%ebp
    d802:	44 89 77 08          	mov    %r14d,0x8(%rdi)
    d806:	89 6f 18             	mov    %ebp,0x18(%rdi)
    d809:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    d80e:	e8 0d 7a ff ff       	callq  5220 <mbedtls_platform_zeroize>
    d813:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    d81a:	00 
    d81b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    d822:	00 00 
    d824:	75 14                	jne    d83a <mbedtls_internal_ripemd160_process+0x16ba>
    d826:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    d82d:	31 c0                	xor    %eax,%eax
    d82f:	5b                   	pop    %rbx
    d830:	5d                   	pop    %rbp
    d831:	41 5c                	pop    %r12
    d833:	41 5d                	pop    %r13
    d835:	41 5e                	pop    %r14
    d837:	41 5f                	pop    %r15
    d839:	c3                   	retq   
    d83a:	e8 21 5a ff ff       	callq  3260 <__stack_chk_fail@plt>
    d83f:	90                   	nop

000000000000d840 <mbedtls_ripemd160_update.part.0>:
    d840:	41 56                	push   %r14
    d842:	41 55                	push   %r13
    d844:	41 54                	push   %r12
    d846:	49 89 fc             	mov    %rdi,%r12
    d849:	55                   	push   %rbp
    d84a:	48 89 f5             	mov    %rsi,%rbp
    d84d:	53                   	push   %rbx
    d84e:	8b 07                	mov    (%rdi),%eax
    d850:	48 89 d3             	mov    %rdx,%rbx
    d853:	ba 40 00 00 00       	mov    $0x40,%edx
    d858:	41 89 c5             	mov    %eax,%r13d
    d85b:	41 83 e5 3f          	and    $0x3f,%r13d
    d85f:	44 29 ea             	sub    %r13d,%edx
    d862:	01 d8                	add    %ebx,%eax
    d864:	89 07                	mov    %eax,(%rdi)
    d866:	41 89 d6             	mov    %edx,%r14d
    d869:	73 04                	jae    d86f <mbedtls_ripemd160_update.part.0+0x2f>
    d86b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
    d86f:	45 85 ed             	test   %r13d,%r13d
    d872:	74 05                	je     d879 <mbedtls_ripemd160_update.part.0+0x39>
    d874:	49 39 de             	cmp    %rbx,%r14
    d877:	76 37                	jbe    d8b0 <mbedtls_ripemd160_update.part.0+0x70>
    d879:	48 83 fb 3f          	cmp    $0x3f,%rbx
    d87d:	77 17                	ja     d896 <mbedtls_ripemd160_update.part.0+0x56>
    d87f:	eb 7f                	jmp    d900 <mbedtls_ripemd160_update.part.0+0xc0>
    d881:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d888:	48 83 eb 40          	sub    $0x40,%rbx
    d88c:	48 83 c5 40          	add    $0x40,%rbp
    d890:	48 83 fb 3f          	cmp    $0x3f,%rbx
    d894:	76 6a                	jbe    d900 <mbedtls_ripemd160_update.part.0+0xc0>
    d896:	48 89 ee             	mov    %rbp,%rsi
    d899:	4c 89 e7             	mov    %r12,%rdi
    d89c:	e8 df e8 ff ff       	callq  c180 <mbedtls_internal_ripemd160_process>
    d8a1:	85 c0                	test   %eax,%eax
    d8a3:	74 e3                	je     d888 <mbedtls_ripemd160_update.part.0+0x48>
    d8a5:	5b                   	pop    %rbx
    d8a6:	5d                   	pop    %rbp
    d8a7:	41 5c                	pop    %r12
    d8a9:	41 5d                	pop    %r13
    d8ab:	41 5e                	pop    %r14
    d8ad:	c3                   	retq   
    d8ae:	66 90                	xchg   %ax,%ax
    d8b0:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
    d8b5:	4d 01 c5             	add    %r8,%r13
    d8b8:	83 fa 08             	cmp    $0x8,%edx
    d8bb:	0f 83 87 00 00 00    	jae    d948 <mbedtls_ripemd160_update.part.0+0x108>
    d8c1:	f6 c2 04             	test   $0x4,%dl
    d8c4:	0f 85 19 01 00 00    	jne    d9e3 <mbedtls_ripemd160_update.part.0+0x1a3>
    d8ca:	85 d2                	test   %edx,%edx
    d8cc:	74 11                	je     d8df <mbedtls_ripemd160_update.part.0+0x9f>
    d8ce:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    d8d2:	83 e2 02             	and    $0x2,%edx
    d8d5:	41 88 45 00          	mov    %al,0x0(%r13)
    d8d9:	0f 85 30 01 00 00    	jne    da0f <mbedtls_ripemd160_update.part.0+0x1cf>
    d8df:	4c 89 c6             	mov    %r8,%rsi
    d8e2:	4c 89 e7             	mov    %r12,%rdi
    d8e5:	e8 96 e8 ff ff       	callq  c180 <mbedtls_internal_ripemd160_process>
    d8ea:	85 c0                	test   %eax,%eax
    d8ec:	75 b7                	jne    d8a5 <mbedtls_ripemd160_update.part.0+0x65>
    d8ee:	4c 01 f5             	add    %r14,%rbp
    d8f1:	4c 29 f3             	sub    %r14,%rbx
    d8f4:	45 31 ed             	xor    %r13d,%r13d
    d8f7:	eb 80                	jmp    d879 <mbedtls_ripemd160_update.part.0+0x39>
    d8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d900:	31 c0                	xor    %eax,%eax
    d902:	48 85 db             	test   %rbx,%rbx
    d905:	74 9e                	je     d8a5 <mbedtls_ripemd160_update.part.0+0x65>
    d907:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
    d90c:	89 d8                	mov    %ebx,%eax
    d90e:	83 fb 08             	cmp    $0x8,%ebx
    d911:	0f 83 7e 00 00 00    	jae    d995 <mbedtls_ripemd160_update.part.0+0x155>
    d917:	83 e3 04             	and    $0x4,%ebx
    d91a:	0f 85 d9 00 00 00    	jne    d9f9 <mbedtls_ripemd160_update.part.0+0x1b9>
    d920:	85 c0                	test   %eax,%eax
    d922:	74 16                	je     d93a <mbedtls_ripemd160_update.part.0+0xfa>
    d924:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
    d928:	88 11                	mov    %dl,(%rcx)
    d92a:	a8 02                	test   $0x2,%al
    d92c:	74 0c                	je     d93a <mbedtls_ripemd160_update.part.0+0xfa>
    d92e:	89 c2                	mov    %eax,%edx
    d930:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
    d935:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    d93a:	31 c0                	xor    %eax,%eax
    d93c:	5b                   	pop    %rbx
    d93d:	5d                   	pop    %rbp
    d93e:	41 5c                	pop    %r12
    d940:	41 5d                	pop    %r13
    d942:	41 5e                	pop    %r14
    d944:	c3                   	retq   
    d945:	0f 1f 00             	nopl   (%rax)
    d948:	48 8b 45 00          	mov    0x0(%rbp),%rax
    d94c:	49 8d 75 08          	lea    0x8(%r13),%rsi
    d950:	49 89 e9             	mov    %rbp,%r9
    d953:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    d957:	49 89 45 00          	mov    %rax,0x0(%r13)
    d95b:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
    d960:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
    d965:	49 29 f5             	sub    %rsi,%r13
    d968:	44 01 ea             	add    %r13d,%edx
    d96b:	4d 29 e9             	sub    %r13,%r9
    d96e:	83 e2 f8             	and    $0xfffffff8,%edx
    d971:	83 fa 08             	cmp    $0x8,%edx
    d974:	0f 82 65 ff ff ff    	jb     d8df <mbedtls_ripemd160_update.part.0+0x9f>
    d97a:	83 e2 f8             	and    $0xfffffff8,%edx
    d97d:	31 c0                	xor    %eax,%eax
    d97f:	89 c1                	mov    %eax,%ecx
    d981:	83 c0 08             	add    $0x8,%eax
    d984:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
    d988:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    d98c:	39 d0                	cmp    %edx,%eax
    d98e:	72 ef                	jb     d97f <mbedtls_ripemd160_update.part.0+0x13f>
    d990:	e9 4a ff ff ff       	jmpq   d8df <mbedtls_ripemd160_update.part.0+0x9f>
    d995:	48 8b 45 00          	mov    0x0(%rbp),%rax
    d999:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    d99d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    d9a1:	48 89 01             	mov    %rax,(%rcx)
    d9a4:	89 d8                	mov    %ebx,%eax
    d9a6:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
    d9ab:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    d9b0:	48 29 f1             	sub    %rsi,%rcx
    d9b3:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
    d9b6:	48 29 cd             	sub    %rcx,%rbp
    d9b9:	83 e0 f8             	and    $0xfffffff8,%eax
    d9bc:	83 f8 08             	cmp    $0x8,%eax
    d9bf:	0f 82 75 ff ff ff    	jb     d93a <mbedtls_ripemd160_update.part.0+0xfa>
    d9c5:	83 e0 f8             	and    $0xfffffff8,%eax
    d9c8:	31 d2                	xor    %edx,%edx
    d9ca:	89 d1                	mov    %edx,%ecx
    d9cc:	83 c2 08             	add    $0x8,%edx
    d9cf:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
    d9d4:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    d9d8:	39 c2                	cmp    %eax,%edx
    d9da:	72 ee                	jb     d9ca <mbedtls_ripemd160_update.part.0+0x18a>
    d9dc:	31 c0                	xor    %eax,%eax
    d9de:	e9 59 ff ff ff       	jmpq   d93c <mbedtls_ripemd160_update.part.0+0xfc>
    d9e3:	8b 45 00             	mov    0x0(%rbp),%eax
    d9e6:	41 89 45 00          	mov    %eax,0x0(%r13)
    d9ea:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
    d9ef:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
    d9f4:	e9 e6 fe ff ff       	jmpq   d8df <mbedtls_ripemd160_update.part.0+0x9f>
    d9f9:	8b 55 00             	mov    0x0(%rbp),%edx
    d9fc:	89 11                	mov    %edx,(%rcx)
    d9fe:	89 c2                	mov    %eax,%edx
    da00:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
    da04:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    da08:	31 c0                	xor    %eax,%eax
    da0a:	e9 2d ff ff ff       	jmpq   d93c <mbedtls_ripemd160_update.part.0+0xfc>
    da0f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
    da15:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
    da1b:	e9 bf fe ff ff       	jmpq   d8df <mbedtls_ripemd160_update.part.0+0x9f>

000000000000da20 <mbedtls_ripemd160_update>:
    da20:	f3 0f 1e fa          	endbr64 
    da24:	48 85 d2             	test   %rdx,%rdx
    da27:	74 07                	je     da30 <mbedtls_ripemd160_update+0x10>
    da29:	e9 12 fe ff ff       	jmpq   d840 <mbedtls_ripemd160_update.part.0>
    da2e:	66 90                	xchg   %ax,%ax
    da30:	31 c0                	xor    %eax,%eax
    da32:	c3                   	retq   
    da33:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    da3a:	00 00 00 00 
    da3e:	66 90                	xchg   %ax,%ax

000000000000da40 <mbedtls_ripemd160_finish>:
    da40:	f3 0f 1e fa          	endbr64 
    da44:	55                   	push   %rbp
    da45:	48 89 f5             	mov    %rsi,%rbp
    da48:	53                   	push   %rbx
    da49:	48 89 fb             	mov    %rdi,%rbx
    da4c:	48 83 ec 18          	sub    $0x18,%rsp
    da50:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    da57:	00 00 
    da59:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    da5e:	31 c0                	xor    %eax,%eax
    da60:	8b 07                	mov    (%rdi),%eax
    da62:	8b 7f 04             	mov    0x4(%rdi),%edi
    da65:	89 c1                	mov    %eax,%ecx
    da67:	8d 14 fd 00 00 00 00 	lea    0x0(,%rdi,8),%edx
    da6e:	c1 e9 1d             	shr    $0x1d,%ecx
    da71:	09 ca                	or     %ecx,%edx
    da73:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    da7a:	83 e0 3f             	and    $0x3f,%eax
    da7d:	89 0c 24             	mov    %ecx,(%rsp)
    da80:	89 54 24 04          	mov    %edx,0x4(%rsp)
    da84:	83 f8 37             	cmp    $0x37,%eax
    da87:	77 37                	ja     dac0 <mbedtls_ripemd160_finish+0x80>
    da89:	ba 38 00 00 00       	mov    $0x38,%edx
    da8e:	29 c2                	sub    %eax,%edx
    da90:	48 8d 35 a9 5e 01 00 	lea    0x15ea9(%rip),%rsi        # 23940 <ripemd160_padding>
    da97:	48 89 df             	mov    %rbx,%rdi
    da9a:	e8 a1 fd ff ff       	callq  d840 <mbedtls_ripemd160_update.part.0>
    da9f:	85 c0                	test   %eax,%eax
    daa1:	74 2d                	je     dad0 <mbedtls_ripemd160_finish+0x90>
    daa3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    daa8:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    daaf:	00 00 
    dab1:	75 51                	jne    db04 <mbedtls_ripemd160_finish+0xc4>
    dab3:	48 83 c4 18          	add    $0x18,%rsp
    dab7:	5b                   	pop    %rbx
    dab8:	5d                   	pop    %rbp
    dab9:	c3                   	retq   
    daba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dac0:	ba 78 00 00 00       	mov    $0x78,%edx
    dac5:	29 c2                	sub    %eax,%edx
    dac7:	eb c7                	jmp    da90 <mbedtls_ripemd160_finish+0x50>
    dac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dad0:	48 89 e6             	mov    %rsp,%rsi
    dad3:	ba 08 00 00 00       	mov    $0x8,%edx
    dad8:	48 89 df             	mov    %rbx,%rdi
    dadb:	e8 60 fd ff ff       	callq  d840 <mbedtls_ripemd160_update.part.0>
    dae0:	85 c0                	test   %eax,%eax
    dae2:	75 bf                	jne    daa3 <mbedtls_ripemd160_finish+0x63>
    dae4:	8b 53 08             	mov    0x8(%rbx),%edx
    dae7:	89 55 00             	mov    %edx,0x0(%rbp)
    daea:	8b 53 0c             	mov    0xc(%rbx),%edx
    daed:	89 55 04             	mov    %edx,0x4(%rbp)
    daf0:	8b 53 10             	mov    0x10(%rbx),%edx
    daf3:	89 55 08             	mov    %edx,0x8(%rbp)
    daf6:	8b 53 14             	mov    0x14(%rbx),%edx
    daf9:	89 55 0c             	mov    %edx,0xc(%rbp)
    dafc:	8b 53 18             	mov    0x18(%rbx),%edx
    daff:	89 55 10             	mov    %edx,0x10(%rbp)
    db02:	eb 9f                	jmp    daa3 <mbedtls_ripemd160_finish+0x63>
    db04:	e8 57 57 ff ff       	callq  3260 <__stack_chk_fail@plt>
    db09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000db10 <mbedtls_ripemd160>:
    db10:	f3 0f 1e fa          	endbr64 
    db14:	41 55                	push   %r13
    db16:	66 0f ef c0          	pxor   %xmm0,%xmm0
    db1a:	41 54                	push   %r12
    db1c:	55                   	push   %rbp
    db1d:	48 89 d5             	mov    %rdx,%rbp
    db20:	48 83 ec 70          	sub    $0x70,%rsp
    db24:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    db2b:	00 00 
    db2d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    db32:	31 c0                	xor    %eax,%eax
    db34:	49 89 e5             	mov    %rsp,%r13
    db37:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    db3c:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    db43:	ab cd ef 
    db46:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    db4b:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    db52:	54 32 10 
    db55:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
    db5c:	00 
    db5d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    db64:	00 
    db65:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    db6a:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
    db71:	c3 
    db72:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    db77:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
    db7c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    db81:	48 85 f6             	test   %rsi,%rsi
    db84:	74 15                	je     db9b <mbedtls_ripemd160+0x8b>
    db86:	48 89 f2             	mov    %rsi,%rdx
    db89:	48 89 fe             	mov    %rdi,%rsi
    db8c:	4c 89 ef             	mov    %r13,%rdi
    db8f:	e8 ac fc ff ff       	callq  d840 <mbedtls_ripemd160_update.part.0>
    db94:	41 89 c4             	mov    %eax,%r12d
    db97:	85 c0                	test   %eax,%eax
    db99:	75 0e                	jne    dba9 <mbedtls_ripemd160+0x99>
    db9b:	48 89 ee             	mov    %rbp,%rsi
    db9e:	4c 89 ef             	mov    %r13,%rdi
    dba1:	e8 9a fe ff ff       	callq  da40 <mbedtls_ripemd160_finish>
    dba6:	41 89 c4             	mov    %eax,%r12d
    dba9:	be 5c 00 00 00       	mov    $0x5c,%esi
    dbae:	4c 89 ef             	mov    %r13,%rdi
    dbb1:	e8 6a 76 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    dbb6:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    dbbb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    dbc2:	00 00 
    dbc4:	75 0d                	jne    dbd3 <mbedtls_ripemd160+0xc3>
    dbc6:	48 83 c4 70          	add    $0x70,%rsp
    dbca:	44 89 e0             	mov    %r12d,%eax
    dbcd:	5d                   	pop    %rbp
    dbce:	41 5c                	pop    %r12
    dbd0:	41 5d                	pop    %r13
    dbd2:	c3                   	retq   
    dbd3:	e8 88 56 ff ff       	callq  3260 <__stack_chk_fail@plt>
    dbd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dbdf:	00 

000000000000dbe0 <mbedtls_ripemd160_self_test>:
    dbe0:	f3 0f 1e fa          	endbr64 
    dbe4:	41 57                	push   %r15
    dbe6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dbea:	41 56                	push   %r14
    dbec:	4c 8d 35 ad 5a 01 00 	lea    0x15aad(%rip),%r14        # 236a0 <ripemd160_test_str>
    dbf3:	41 55                	push   %r13
    dbf5:	41 89 fd             	mov    %edi,%r13d
    dbf8:	41 54                	push   %r12
    dbfa:	45 31 e4             	xor    %r12d,%r12d
    dbfd:	55                   	push   %rbp
    dbfe:	bd 01 00 00 00       	mov    $0x1,%ebp
    dc03:	53                   	push   %rbx
    dc04:	48 8d 1d b5 59 01 00 	lea    0x159b5(%rip),%rbx        # 235c0 <ripemd160_test_md>
    dc0b:	48 83 ec 28          	sub    $0x28,%rsp
    dc0f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dc16:	00 00 
    dc18:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    dc1d:	31 c0                	xor    %eax,%eax
    dc1f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
    dc26:	00 
    dc27:	49 89 e7             	mov    %rsp,%r15
    dc2a:	0f 29 04 24          	movaps %xmm0,(%rsp)
    dc2e:	66 90                	xchg   %ax,%ax
    dc30:	45 85 ed             	test   %r13d,%r13d
    dc33:	75 6b                	jne    dca0 <mbedtls_ripemd160_self_test+0xc0>
    dc35:	4c 89 e6             	mov    %r12,%rsi
    dc38:	4c 89 fa             	mov    %r15,%rdx
    dc3b:	4c 89 f7             	mov    %r14,%rdi
    dc3e:	e8 cd fe ff ff       	callq  db10 <mbedtls_ripemd160>
    dc43:	41 89 c4             	mov    %eax,%r12d
    dc46:	85 c0                	test   %eax,%eax
    dc48:	75 22                	jne    dc6c <mbedtls_ripemd160_self_test+0x8c>
    dc4a:	49 8b 07             	mov    (%r15),%rax
    dc4d:	49 8b 57 08          	mov    0x8(%r15),%rdx
    dc51:	48 33 03             	xor    (%rbx),%rax
    dc54:	48 33 53 08          	xor    0x8(%rbx),%rdx
    dc58:	48 09 c2             	or     %rax,%rdx
    dc5b:	75 09                	jne    dc66 <mbedtls_ripemd160_self_test+0x86>
    dc5d:	8b 43 10             	mov    0x10(%rbx),%eax
    dc60:	41 39 47 10          	cmp    %eax,0x10(%r15)
    dc64:	74 5a                	je     dcc0 <mbedtls_ripemd160_self_test+0xe0>
    dc66:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    dc6c:	45 85 ed             	test   %r13d,%r13d
    dc6f:	0f 85 ab 00 00 00    	jne    dd20 <mbedtls_ripemd160_self_test+0x140>
    dc75:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    dc7a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    dc81:	00 00 
    dc83:	0f 85 a8 00 00 00    	jne    dd31 <mbedtls_ripemd160_self_test+0x151>
    dc89:	48 83 c4 28          	add    $0x28,%rsp
    dc8d:	44 89 e0             	mov    %r12d,%eax
    dc90:	5b                   	pop    %rbx
    dc91:	5d                   	pop    %rbp
    dc92:	41 5c                	pop    %r12
    dc94:	41 5d                	pop    %r13
    dc96:	41 5e                	pop    %r14
    dc98:	41 5f                	pop    %r15
    dc9a:	c3                   	retq   
    dc9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dca0:	89 ea                	mov    %ebp,%edx
    dca2:	48 8d 35 ef 58 01 00 	lea    0x158ef(%rip),%rsi        # 23598 <NIST_KW_ICV1+0x8>
    dca9:	bf 01 00 00 00       	mov    $0x1,%edi
    dcae:	31 c0                	xor    %eax,%eax
    dcb0:	e8 8b 56 ff ff       	callq  3340 <__printf_chk@plt>
    dcb5:	e9 7b ff ff ff       	jmpq   dc35 <mbedtls_ripemd160_self_test+0x55>
    dcba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dcc0:	45 85 ed             	test   %r13d,%r13d
    dcc3:	74 0c                	je     dcd1 <mbedtls_ripemd160_self_test+0xf1>
    dcc5:	48 8d 3d 16 55 01 00 	lea    0x15516(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    dccc:	e8 2f 55 ff ff       	callq  3200 <puts@plt>
    dcd1:	48 83 c3 14          	add    $0x14,%rbx
    dcd5:	49 83 c6 51          	add    $0x51,%r14
    dcd9:	48 83 fd 08          	cmp    $0x8,%rbp
    dcdd:	74 19                	je     dcf8 <mbedtls_ripemd160_self_test+0x118>
    dcdf:	48 8d 05 7a 59 01 00 	lea    0x1597a(%rip),%rax        # 23660 <ripemd160_test_strlen>
    dce6:	4c 8b 24 e8          	mov    (%rax,%rbp,8),%r12
    dcea:	48 83 c5 01          	add    $0x1,%rbp
    dcee:	e9 3d ff ff ff       	jmpq   dc30 <mbedtls_ripemd160_self_test+0x50>
    dcf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dcf8:	45 85 ed             	test   %r13d,%r13d
    dcfb:	75 0b                	jne    dd08 <mbedtls_ripemd160_self_test+0x128>
    dcfd:	45 31 e4             	xor    %r12d,%r12d
    dd00:	e9 70 ff ff ff       	jmpq   dc75 <mbedtls_ripemd160_self_test+0x95>
    dd05:	0f 1f 00             	nopl   (%rax)
    dd08:	bf 0a 00 00 00       	mov    $0xa,%edi
    dd0d:	e8 de 54 ff ff       	callq  31f0 <putchar@plt>
    dd12:	e9 5e ff ff ff       	jmpq   dc75 <mbedtls_ripemd160_self_test+0x95>
    dd17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dd1e:	00 00 
    dd20:	48 8d 3d 96 5d 01 00 	lea    0x15d96(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    dd27:	e8 d4 54 ff ff       	callq  3200 <puts@plt>
    dd2c:	e9 44 ff ff ff       	jmpq   dc75 <mbedtls_ripemd160_self_test+0x95>
    dd31:	e8 2a 55 ff ff       	callq  3260 <__stack_chk_fail@plt>
    dd36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dd3d:	00 00 00 

000000000000dd40 <mbedtls_sha1_init>:
    dd40:	f3 0f 1e fa          	endbr64 
    dd44:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    dd4b:	48 89 f9             	mov    %rdi,%rcx
    dd4e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    dd52:	31 c0                	xor    %eax,%eax
    dd54:	48 c7 47 4c 00 00 00 	movq   $0x0,0x4c(%rdi)
    dd5b:	00 
    dd5c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    dd60:	48 29 f9             	sub    %rdi,%rcx
    dd63:	83 c1 5c             	add    $0x5c,%ecx
    dd66:	c1 e9 03             	shr    $0x3,%ecx
    dd69:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    dd6c:	c3                   	retq   
    dd6d:	0f 1f 00             	nopl   (%rax)

000000000000dd70 <mbedtls_sha1_free>:
    dd70:	f3 0f 1e fa          	endbr64 
    dd74:	48 85 ff             	test   %rdi,%rdi
    dd77:	74 0f                	je     dd88 <mbedtls_sha1_free+0x18>
    dd79:	be 5c 00 00 00       	mov    $0x5c,%esi
    dd7e:	e9 9d 74 ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
    dd83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dd88:	c3                   	retq   
    dd89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000dd90 <mbedtls_sha1_clone>:
    dd90:	f3 0f 1e fa          	endbr64 
    dd94:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    dd98:	0f 11 07             	movups %xmm0,(%rdi)
    dd9b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    dda0:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    dda4:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    dda9:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    ddad:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    ddb2:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    ddb6:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    ddbb:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    ddbf:	48 8b 46 50          	mov    0x50(%rsi),%rax
    ddc3:	48 89 47 50          	mov    %rax,0x50(%rdi)
    ddc7:	8b 46 58             	mov    0x58(%rsi),%eax
    ddca:	89 47 58             	mov    %eax,0x58(%rdi)
    ddcd:	c3                   	retq   
    ddce:	66 90                	xchg   %ax,%ax

000000000000ddd0 <mbedtls_sha1_starts>:
    ddd0:	f3 0f 1e fa          	endbr64 
    ddd4:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    dddb:	ab cd ef 
    ddde:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    dde5:	48 89 47 08          	mov    %rax,0x8(%rdi)
    dde9:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    ddf0:	54 32 10 
    ddf3:	48 89 47 10          	mov    %rax,0x10(%rdi)
    ddf7:	31 c0                	xor    %eax,%eax
    ddf9:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
    de00:	c3                   	retq   
    de01:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    de08:	00 00 00 00 
    de0c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000de10 <mbedtls_internal_sha1_process>:
    de10:	f3 0f 1e fa          	endbr64 
    de14:	41 57                	push   %r15
    de16:	41 56                	push   %r14
    de18:	41 55                	push   %r13
    de1a:	41 54                	push   %r12
    de1c:	49 89 f4             	mov    %rsi,%r12
    de1f:	55                   	push   %rbp
    de20:	53                   	push   %rbx
    de21:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    de28:	45 8b 44 24 24       	mov    0x24(%r12),%r8d
    de2d:	44 8b 56 04          	mov    0x4(%rsi),%r10d
    de31:	41 8b 5c 24 38       	mov    0x38(%r12),%ebx
    de36:	45 8b 5c 24 18       	mov    0x18(%r12),%r11d
    de3b:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
    de40:	45 89 c7             	mov    %r8d,%r15d
    de43:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
    de48:	45 8b 6c 24 2c       	mov    0x2c(%r12),%r13d
    de4d:	45 89 d6             	mov    %r10d,%r14d
    de50:	41 0f cb             	bswap  %r11d
    de53:	44 8b 0e             	mov    (%rsi),%r9d
    de56:	8b 7e 08             	mov    0x8(%rsi),%edi
    de59:	41 0f ce             	bswap  %r14d
    de5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    de63:	00 00 
    de65:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    de6c:	00 
    de6d:	31 c0                	xor    %eax,%eax
    de6f:	41 8b 44 24 20       	mov    0x20(%r12),%eax
    de74:	45 8b 54 24 1c       	mov    0x1c(%r12),%r10d
    de79:	44 89 5c 24 14       	mov    %r11d,0x14(%rsp)
    de7e:	41 8b 6c 24 34       	mov    0x34(%r12),%ebp
    de83:	41 89 db             	mov    %ebx,%r11d
    de86:	8b 76 0c             	mov    0xc(%rsi),%esi
    de89:	41 0f cd             	bswap  %r13d
    de8c:	0f c8                	bswap  %eax
    de8e:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    de92:	44 89 c0             	mov    %r8d,%eax
    de95:	41 0f ca             	bswap  %r10d
    de98:	45 8b 44 24 30       	mov    0x30(%r12),%r8d
    de9d:	41 8b 4c 24 10       	mov    0x10(%r12),%ecx
    dea2:	0f cd                	bswap  %ebp
    dea4:	41 0f cb             	bswap  %r11d
    dea7:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
    deab:	41 0f c9             	bswap  %r9d
    deae:	0f cf                	bswap  %edi
    deb0:	0f ce                	bswap  %esi
    deb2:	41 8b 54 24 14       	mov    0x14(%r12),%edx
    deb7:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
    debc:	41 0f c8             	bswap  %r8d
    debf:	0f c9                	bswap  %ecx
    dec1:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
    dec6:	41 0f cf             	bswap  %r15d
    dec9:	0f c8                	bswap  %eax
    decb:	44 89 1c 24          	mov    %r11d,(%rsp)
    decf:	0f ca                	bswap  %edx
    ded1:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    ded6:	45 8b 44 24 3c       	mov    0x3c(%r12),%r8d
    dedb:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    dee0:	89 44 24 28          	mov    %eax,0x28(%rsp)
    dee4:	41 0f c8             	bswap  %r8d
    dee7:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    deec:	44 8b 53 14          	mov    0x14(%rbx),%r10d
    def0:	44 8b 63 10          	mov    0x10(%rbx),%r12d
    def4:	44 8b 5b 08          	mov    0x8(%rbx),%r11d
    def8:	8b 6b 0c             	mov    0xc(%rbx),%ebp
    defb:	45 89 d5             	mov    %r10d,%r13d
    defe:	44 8b 53 18          	mov    0x18(%rbx),%r10d
    df02:	44 89 6c 24 4c       	mov    %r13d,0x4c(%rsp)
    df07:	44 89 54 24 38       	mov    %r10d,0x38(%rsp)
    df0c:	45 89 e2             	mov    %r12d,%r10d
    df0f:	8b 5c 24 38          	mov    0x38(%rsp),%ebx
    df13:	45 31 ea             	xor    %r13d,%r10d
    df16:	89 6c 24 44          	mov    %ebp,0x44(%rsp)
    df1a:	45 89 d0             	mov    %r10d,%r8d
    df1d:	45 89 da             	mov    %r11d,%r10d
    df20:	41 21 e8             	and    %ebp,%r8d
    df23:	41 c1 c2 05          	rol    $0x5,%r10d
    df27:	45 31 e8             	xor    %r13d,%r8d
    df2a:	46 8d 94 13 99 79 82 	lea    0x5a827999(%rbx,%r10,1),%r10d
    df31:	5a 
    df32:	89 eb                	mov    %ebp,%ebx
    df34:	44 89 dd             	mov    %r11d,%ebp
    df37:	c1 cb 02             	ror    $0x2,%ebx
    df3a:	45 01 d0             	add    %r10d,%r8d
    df3d:	45 89 e2             	mov    %r12d,%r10d
    df40:	89 6c 24 40          	mov    %ebp,0x40(%rsp)
    df44:	41 31 da             	xor    %ebx,%r10d
    df47:	45 01 c8             	add    %r9d,%r8d
    df4a:	45 21 da             	and    %r11d,%r10d
    df4d:	45 89 e3             	mov    %r12d,%r11d
    df50:	45 31 e2             	xor    %r12d,%r10d
    df53:	41 89 dc             	mov    %ebx,%r12d
    df56:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
    df5b:	46 8d 9c 1f 99 79 82 	lea    0x5a827999(%rdi,%r11,1),%r11d
    df62:	5a 
    df63:	47 8d ac 15 99 79 82 	lea    0x5a827999(%r13,%r10,1),%r13d
    df6a:	5a 
    df6b:	45 89 c2             	mov    %r8d,%r10d
    df6e:	45 01 f5             	add    %r14d,%r13d
    df71:	41 c1 c2 05          	rol    $0x5,%r10d
    df75:	45 01 d5             	add    %r10d,%r13d
    df78:	41 89 ea             	mov    %ebp,%r10d
    df7b:	41 c1 ca 02          	ror    $0x2,%r10d
    df7f:	45 31 d4             	xor    %r10d,%r12d
    df82:	45 21 c4             	and    %r8d,%r12d
    df85:	41 c1 c8 02          	ror    $0x2,%r8d
    df89:	41 31 dc             	xor    %ebx,%r12d
    df8c:	44 89 c5             	mov    %r8d,%ebp
    df8f:	8d 9c 1e 99 79 82 5a 	lea    0x5a827999(%rsi,%rbx,1),%ebx
    df96:	45 01 dc             	add    %r11d,%r12d
    df99:	45 89 eb             	mov    %r13d,%r11d
    df9c:	41 c1 c3 05          	rol    $0x5,%r11d
    dfa0:	45 01 dc             	add    %r11d,%r12d
    dfa3:	45 89 d3             	mov    %r10d,%r11d
    dfa6:	45 31 c3             	xor    %r8d,%r11d
    dfa9:	45 21 eb             	and    %r13d,%r11d
    dfac:	41 c1 cd 02          	ror    $0x2,%r13d
    dfb0:	45 31 d3             	xor    %r10d,%r11d
    dfb3:	44 31 ed             	xor    %r13d,%ebp
    dfb6:	46 8d 94 11 99 79 82 	lea    0x5a827999(%rcx,%r10,1),%r10d
    dfbd:	5a 
    dfbe:	41 01 db             	add    %ebx,%r11d
    dfc1:	44 89 e3             	mov    %r12d,%ebx
    dfc4:	44 21 e5             	and    %r12d,%ebp
    dfc7:	c1 c3 05             	rol    $0x5,%ebx
    dfca:	41 01 db             	add    %ebx,%r11d
    dfcd:	44 31 c5             	xor    %r8d,%ebp
    dfd0:	41 c1 cc 02          	ror    $0x2,%r12d
    dfd4:	46 8d 84 02 99 79 82 	lea    0x5a827999(%rdx,%r8,1),%r8d
    dfdb:	5a 
    dfdc:	44 01 d5             	add    %r10d,%ebp
    dfdf:	45 89 da             	mov    %r11d,%r10d
    dfe2:	41 c1 c2 05          	rol    $0x5,%r10d
    dfe6:	44 01 d5             	add    %r10d,%ebp
    dfe9:	45 89 ea             	mov    %r13d,%r10d
    dfec:	45 31 e2             	xor    %r12d,%r10d
    dfef:	45 21 da             	and    %r11d,%r10d
    dff2:	41 c1 cb 02          	ror    $0x2,%r11d
    dff6:	45 31 ea             	xor    %r13d,%r10d
    dff9:	45 01 c2             	add    %r8d,%r10d
    dffc:	41 89 e8             	mov    %ebp,%r8d
    dfff:	41 c1 c0 05          	rol    $0x5,%r8d
    e003:	45 01 c2             	add    %r8d,%r10d
    e006:	45 89 e0             	mov    %r12d,%r8d
    e009:	45 31 d8             	xor    %r11d,%r8d
    e00c:	44 89 c3             	mov    %r8d,%ebx
    e00f:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    e014:	21 eb                	and    %ebp,%ebx
    e016:	c1 cd 02             	ror    $0x2,%ebp
    e019:	44 31 e3             	xor    %r12d,%ebx
    e01c:	47 8d 84 28 99 79 82 	lea    0x5a827999(%r8,%r13,1),%r8d
    e023:	5a 
    e024:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    e029:	44 01 c3             	add    %r8d,%ebx
    e02c:	45 89 d0             	mov    %r10d,%r8d
    e02f:	41 c1 c0 05          	rol    $0x5,%r8d
    e033:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
    e03a:	5a 
    e03b:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
    e040:	44 01 c3             	add    %r8d,%ebx
    e043:	45 89 d8             	mov    %r11d,%r8d
    e046:	41 31 e8             	xor    %ebp,%r8d
    e049:	45 21 d0             	and    %r10d,%r8d
    e04c:	41 c1 ca 02          	ror    $0x2,%r10d
    e050:	45 31 d8             	xor    %r11d,%r8d
    e053:	47 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%r11,1),%r11d
    e05a:	5a 
    e05b:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
    e060:	45 01 e0             	add    %r12d,%r8d
    e063:	41 89 dc             	mov    %ebx,%r12d
    e066:	41 c1 c4 05          	rol    $0x5,%r12d
    e06a:	45 01 e0             	add    %r12d,%r8d
    e06d:	41 89 ec             	mov    %ebp,%r12d
    e070:	45 31 d4             	xor    %r10d,%r12d
    e073:	41 21 dc             	and    %ebx,%r12d
    e076:	41 31 ec             	xor    %ebp,%r12d
    e079:	41 8d ac 2f 99 79 82 	lea    0x5a827999(%r15,%rbp,1),%ebp
    e080:	5a 
    e081:	45 01 dc             	add    %r11d,%r12d
    e084:	45 89 c3             	mov    %r8d,%r11d
    e087:	41 c1 c3 05          	rol    $0x5,%r11d
    e08b:	45 01 dc             	add    %r11d,%r12d
    e08e:	c1 cb 02             	ror    $0x2,%ebx
    e091:	45 89 d3             	mov    %r10d,%r11d
    e094:	41 31 db             	xor    %ebx,%r11d
    e097:	45 21 c3             	and    %r8d,%r11d
    e09a:	41 c1 c8 02          	ror    $0x2,%r8d
    e09e:	45 31 d3             	xor    %r10d,%r11d
    e0a1:	46 8d 94 10 99 79 82 	lea    0x5a827999(%rax,%r10,1),%r10d
    e0a8:	5a 
    e0a9:	41 01 eb             	add    %ebp,%r11d
    e0ac:	44 89 e5             	mov    %r12d,%ebp
    e0af:	c1 c5 05             	rol    $0x5,%ebp
    e0b2:	41 01 eb             	add    %ebp,%r11d
    e0b5:	89 dd                	mov    %ebx,%ebp
    e0b7:	44 31 c5             	xor    %r8d,%ebp
    e0ba:	44 21 e5             	and    %r12d,%ebp
    e0bd:	41 c1 cc 02          	ror    $0x2,%r12d
    e0c1:	31 dd                	xor    %ebx,%ebp
    e0c3:	41 8d 9c 1d 99 79 82 	lea    0x5a827999(%r13,%rbx,1),%ebx
    e0ca:	5a 
    e0cb:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    e0d0:	44 01 d5             	add    %r10d,%ebp
    e0d3:	45 89 da             	mov    %r11d,%r10d
    e0d6:	41 c1 c2 05          	rol    $0x5,%r10d
    e0da:	44 01 d5             	add    %r10d,%ebp
    e0dd:	45 89 c2             	mov    %r8d,%r10d
    e0e0:	45 31 e2             	xor    %r12d,%r10d
    e0e3:	89 e8                	mov    %ebp,%eax
    e0e5:	45 21 da             	and    %r11d,%r10d
    e0e8:	c1 c0 05             	rol    $0x5,%eax
    e0eb:	45 31 c2             	xor    %r8d,%r10d
    e0ee:	41 c1 cb 02          	ror    $0x2,%r11d
    e0f2:	47 8d 84 05 99 79 82 	lea    0x5a827999(%r13,%r8,1),%r8d
    e0f9:	5a 
    e0fa:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
    e0ff:	41 01 da             	add    %ebx,%r10d
    e102:	41 01 c2             	add    %eax,%r10d
    e105:	44 89 e0             	mov    %r12d,%eax
    e108:	44 31 d8             	xor    %r11d,%eax
    e10b:	89 c3                	mov    %eax,%ebx
    e10d:	8b 04 24             	mov    (%rsp),%eax
    e110:	21 eb                	and    %ebp,%ebx
    e112:	c1 cd 02             	ror    $0x2,%ebp
    e115:	44 31 e3             	xor    %r12d,%ebx
    e118:	47 8d a4 25 99 79 82 	lea    0x5a827999(%r13,%r12,1),%r12d
    e11f:	5a 
    e120:	44 01 c3             	add    %r8d,%ebx
    e123:	45 89 d0             	mov    %r10d,%r8d
    e126:	41 c1 c0 05          	rol    $0x5,%r8d
    e12a:	44 01 c3             	add    %r8d,%ebx
    e12d:	45 89 d8             	mov    %r11d,%r8d
    e130:	41 31 e8             	xor    %ebp,%r8d
    e133:	45 21 d0             	and    %r10d,%r8d
    e136:	45 31 d8             	xor    %r11d,%r8d
    e139:	46 8d 9c 18 99 79 82 	lea    0x5a827999(%rax,%r11,1),%r11d
    e140:	5a 
    e141:	8b 44 24 04          	mov    0x4(%rsp),%eax
    e145:	45 01 e0             	add    %r12d,%r8d
    e148:	41 89 dc             	mov    %ebx,%r12d
    e14b:	41 c1 ca 02          	ror    $0x2,%r10d
    e14f:	41 31 f9             	xor    %edi,%r9d
    e152:	41 c1 c4 05          	rol    $0x5,%r12d
    e156:	44 33 4c 24 1c       	xor    0x1c(%rsp),%r9d
    e15b:	41 31 f6             	xor    %esi,%r14d
    e15e:	45 01 e0             	add    %r12d,%r8d
    e161:	41 89 ec             	mov    %ebp,%r12d
    e164:	45 31 e9             	xor    %r13d,%r9d
    e167:	45 31 d4             	xor    %r10d,%r12d
    e16a:	41 d1 c1             	rol    %r9d
    e16d:	41 21 dc             	and    %ebx,%r12d
    e170:	c1 cb 02             	ror    $0x2,%ebx
    e173:	41 31 ec             	xor    %ebp,%r12d
    e176:	8d ac 28 99 79 82 5a 	lea    0x5a827999(%rax,%rbp,1),%ebp
    e17d:	45 01 dc             	add    %r11d,%r12d
    e180:	45 89 c3             	mov    %r8d,%r11d
    e183:	41 c1 c3 05          	rol    $0x5,%r11d
    e187:	45 01 dc             	add    %r11d,%r12d
    e18a:	45 89 d3             	mov    %r10d,%r11d
    e18d:	41 31 db             	xor    %ebx,%r11d
    e190:	45 21 c3             	and    %r8d,%r11d
    e193:	41 c1 c8 02          	ror    $0x2,%r8d
    e197:	45 31 d3             	xor    %r10d,%r11d
    e19a:	47 8d 94 0a 99 79 82 	lea    0x5a827999(%r10,%r9,1),%r10d
    e1a1:	5a 
    e1a2:	41 01 eb             	add    %ebp,%r11d
    e1a5:	44 89 e5             	mov    %r12d,%ebp
    e1a8:	c1 c5 05             	rol    $0x5,%ebp
    e1ab:	41 01 eb             	add    %ebp,%r11d
    e1ae:	89 dd                	mov    %ebx,%ebp
    e1b0:	44 31 c5             	xor    %r8d,%ebp
    e1b3:	44 21 e5             	and    %r12d,%ebp
    e1b6:	41 c1 cc 02          	ror    $0x2,%r12d
    e1ba:	31 dd                	xor    %ebx,%ebp
    e1bc:	44 01 d5             	add    %r10d,%ebp
    e1bf:	45 89 da             	mov    %r11d,%r10d
    e1c2:	41 c1 c2 05          	rol    $0x5,%r10d
    e1c6:	44 01 d5             	add    %r10d,%ebp
    e1c9:	45 89 f2             	mov    %r14d,%r10d
    e1cc:	45 31 fa             	xor    %r15d,%r10d
    e1cf:	44 33 14 24          	xor    (%rsp),%r10d
    e1d3:	45 89 d6             	mov    %r10d,%r14d
    e1d6:	45 89 c2             	mov    %r8d,%r10d
    e1d9:	41 d1 c6             	rol    %r14d
    e1dc:	45 31 e2             	xor    %r12d,%r10d
    e1df:	31 cf                	xor    %ecx,%edi
    e1e1:	33 7c 24 28          	xor    0x28(%rsp),%edi
    e1e5:	45 21 da             	and    %r11d,%r10d
    e1e8:	44 89 f0             	mov    %r14d,%eax
    e1eb:	42 8d 9c 33 99 79 82 	lea    0x5a827999(%rbx,%r14,1),%ebx
    e1f2:	5a 
    e1f3:	31 d6                	xor    %edx,%esi
    e1f5:	45 31 c2             	xor    %r8d,%r10d
    e1f8:	41 89 ee             	mov    %ebp,%r14d
    e1fb:	41 c1 cb 02          	ror    $0x2,%r11d
    e1ff:	33 7c 24 04          	xor    0x4(%rsp),%edi
    e203:	41 01 da             	add    %ebx,%r10d
    e206:	41 c1 c6 05          	rol    $0x5,%r14d
    e20a:	33 74 24 08          	xor    0x8(%rsp),%esi
    e20e:	33 4c 24 14          	xor    0x14(%rsp),%ecx
    e212:	45 01 f2             	add    %r14d,%r10d
    e215:	45 89 e6             	mov    %r12d,%r14d
    e218:	d1 c7                	rol    %edi
    e21a:	44 31 ce             	xor    %r9d,%esi
    e21d:	45 31 de             	xor    %r11d,%r14d
    e220:	d1 c6                	rol    %esi
    e222:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
    e226:	89 44 24 20          	mov    %eax,0x20(%rsp)
    e22a:	44 89 f3             	mov    %r14d,%ebx
    e22d:	45 8d 84 38 99 79 82 	lea    0x5a827999(%r8,%rdi,1),%r8d
    e234:	5a 
    e235:	45 89 d6             	mov    %r10d,%r14d
    e238:	21 eb                	and    %ebp,%ebx
    e23a:	41 c1 c6 05          	rol    $0x5,%r14d
    e23e:	44 31 e3             	xor    %r12d,%ebx
    e241:	c1 cd 02             	ror    $0x2,%ebp
    e244:	45 8d a4 34 99 79 82 	lea    0x5a827999(%r12,%rsi,1),%r12d
    e24b:	5a 
    e24c:	44 01 c3             	add    %r8d,%ebx
    e24f:	44 01 f3             	add    %r14d,%ebx
    e252:	45 89 de             	mov    %r11d,%r14d
    e255:	41 31 ee             	xor    %ebp,%r14d
    e258:	45 89 f0             	mov    %r14d,%r8d
    e25b:	41 89 ee             	mov    %ebp,%r14d
    e25e:	45 21 d0             	and    %r10d,%r8d
    e261:	41 c1 ca 02          	ror    $0x2,%r10d
    e265:	45 31 d8             	xor    %r11d,%r8d
    e268:	45 01 e0             	add    %r12d,%r8d
    e26b:	41 89 dc             	mov    %ebx,%r12d
    e26e:	41 c1 c4 05          	rol    $0x5,%r12d
    e272:	45 01 e0             	add    %r12d,%r8d
    e275:	31 c1                	xor    %eax,%ecx
    e277:	33 54 24 18          	xor    0x18(%rsp),%edx
    e27b:	45 31 d6             	xor    %r10d,%r14d
    e27e:	44 31 ea             	xor    %r13d,%edx
    e281:	d1 c1                	rol    %ecx
    e283:	41 31 de             	xor    %ebx,%r14d
    e286:	31 fa                	xor    %edi,%edx
    e288:	45 8d 9c 0b a1 eb d9 	lea    0x6ed9eba1(%r11,%rcx,1),%r11d
    e28f:	6e 
    e290:	c1 cb 02             	ror    $0x2,%ebx
    e293:	d1 c2                	rol    %edx
    e295:	45 01 de             	add    %r11d,%r14d
    e298:	45 89 c3             	mov    %r8d,%r11d
    e29b:	89 d0                	mov    %edx,%eax
    e29d:	44 89 d2             	mov    %r10d,%edx
    e2a0:	41 c1 c3 05          	rol    $0x5,%r11d
    e2a4:	31 da                	xor    %ebx,%edx
    e2a6:	45 01 de             	add    %r11d,%r14d
    e2a9:	44 8d 9c 05 a1 eb d9 	lea    0x6ed9eba1(%rbp,%rax,1),%r11d
    e2b0:	6e 
    e2b1:	89 44 24 24          	mov    %eax,0x24(%rsp)
    e2b5:	41 89 d5             	mov    %edx,%r13d
    e2b8:	44 89 f2             	mov    %r14d,%edx
    e2bb:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    e2bf:	45 31 c5             	xor    %r8d,%r13d
    e2c2:	c1 c2 05             	rol    $0x5,%edx
    e2c5:	45 01 dd             	add    %r11d,%r13d
    e2c8:	44 8b 1c 24          	mov    (%rsp),%r11d
    e2cc:	41 c1 c8 02          	ror    $0x2,%r8d
    e2d0:	41 01 d5             	add    %edx,%r13d
    e2d3:	8b 54 24 14          	mov    0x14(%rsp),%edx
    e2d7:	31 c2                	xor    %eax,%edx
    e2d9:	41 31 d3             	xor    %edx,%r11d
    e2dc:	89 da                	mov    %ebx,%edx
    e2de:	44 31 c2             	xor    %r8d,%edx
    e2e1:	41 31 f3             	xor    %esi,%r11d
    e2e4:	41 d1 c3             	rol    %r11d
    e2e7:	41 89 d4             	mov    %edx,%r12d
    e2ea:	44 89 ea             	mov    %r13d,%edx
    e2ed:	45 31 f4             	xor    %r14d,%r12d
    e2f0:	47 8d 94 1a a1 eb d9 	lea    0x6ed9eba1(%r10,%r11,1),%r10d
    e2f7:	6e 
    e2f8:	c1 c2 05             	rol    $0x5,%edx
    e2fb:	45 01 d4             	add    %r10d,%r12d
    e2fe:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
    e303:	41 c1 ce 02          	ror    $0x2,%r14d
    e307:	41 01 d4             	add    %edx,%r12d
    e30a:	44 89 c2             	mov    %r8d,%edx
    e30d:	45 31 fa             	xor    %r15d,%r10d
    e310:	44 33 54 24 04       	xor    0x4(%rsp),%r10d
    e315:	41 31 ca             	xor    %ecx,%r10d
    e318:	41 d1 c2             	rol    %r10d
    e31b:	44 31 f2             	xor    %r14d,%edx
    e31e:	44 33 7c 24 08       	xor    0x8(%rsp),%r15d
    e323:	89 d5                	mov    %edx,%ebp
    e325:	42 8d 9c 13 a1 eb d9 	lea    0x6ed9eba1(%rbx,%r10,1),%ebx
    e32c:	6e 
    e32d:	44 89 e2             	mov    %r12d,%edx
    e330:	44 31 ed             	xor    %r13d,%ebp
    e333:	c1 c2 05             	rol    $0x5,%edx
    e336:	01 dd                	add    %ebx,%ebp
    e338:	41 c1 cd 02          	ror    $0x2,%r13d
    e33c:	44 89 f3             	mov    %r14d,%ebx
    e33f:	01 d5                	add    %edx,%ebp
    e341:	8b 54 24 28          	mov    0x28(%rsp),%edx
    e345:	44 31 eb             	xor    %r13d,%ebx
    e348:	44 31 e3             	xor    %r12d,%ebx
    e34b:	41 c1 cc 02          	ror    $0x2,%r12d
    e34f:	31 d0                	xor    %edx,%eax
    e351:	33 54 24 0c          	xor    0xc(%rsp),%edx
    e355:	44 31 c8             	xor    %r9d,%eax
    e358:	33 44 24 24          	xor    0x24(%rsp),%eax
    e35c:	d1 c0                	rol    %eax
    e35e:	45 8d 84 00 a1 eb d9 	lea    0x6ed9eba1(%r8,%rax,1),%r8d
    e365:	6e 
    e366:	44 01 c3             	add    %r8d,%ebx
    e369:	41 89 e8             	mov    %ebp,%r8d
    e36c:	41 c1 c0 05          	rol    $0x5,%r8d
    e370:	44 01 c3             	add    %r8d,%ebx
    e373:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    e378:	45 31 f8             	xor    %r15d,%r8d
    e37b:	45 89 ef             	mov    %r13d,%r15d
    e37e:	45 31 d8             	xor    %r11d,%r8d
    e381:	45 31 e7             	xor    %r12d,%r15d
    e384:	41 d1 c0             	rol    %r8d
    e387:	41 31 ef             	xor    %ebp,%r15d
    e38a:	c1 cd 02             	ror    $0x2,%ebp
    e38d:	47 8d b4 06 a1 eb d9 	lea    0x6ed9eba1(%r14,%r8,1),%r14d
    e394:	6e 
    e395:	45 01 f7             	add    %r14d,%r15d
    e398:	41 89 de             	mov    %ebx,%r14d
    e39b:	41 c1 c6 05          	rol    $0x5,%r14d
    e39f:	45 01 f7             	add    %r14d,%r15d
    e3a2:	41 89 d6             	mov    %edx,%r14d
    e3a5:	41 31 fe             	xor    %edi,%r14d
    e3a8:	45 31 d6             	xor    %r10d,%r14d
    e3ab:	41 d1 c6             	rol    %r14d
    e3ae:	44 89 f2             	mov    %r14d,%edx
    e3b1:	45 89 e6             	mov    %r12d,%r14d
    e3b4:	41 31 ee             	xor    %ebp,%r14d
    e3b7:	45 8d ac 15 a1 eb d9 	lea    0x6ed9eba1(%r13,%rdx,1),%r13d
    e3be:	6e 
    e3bf:	89 54 24 14          	mov    %edx,0x14(%rsp)
    e3c3:	8b 54 24 08          	mov    0x8(%rsp),%edx
    e3c7:	41 31 de             	xor    %ebx,%r14d
    e3ca:	45 01 ee             	add    %r13d,%r14d
    e3cd:	45 89 fd             	mov    %r15d,%r13d
    e3d0:	33 54 24 10          	xor    0x10(%rsp),%edx
    e3d4:	c1 cb 02             	ror    $0x2,%ebx
    e3d7:	41 c1 c5 05          	rol    $0x5,%r13d
    e3db:	45 01 ee             	add    %r13d,%r14d
    e3de:	41 89 d5             	mov    %edx,%r13d
    e3e1:	41 31 f5             	xor    %esi,%r13d
    e3e4:	41 31 c5             	xor    %eax,%r13d
    e3e7:	44 89 ea             	mov    %r13d,%edx
    e3ea:	41 89 ed             	mov    %ebp,%r13d
    e3ed:	d1 c2                	rol    %edx
    e3ef:	41 31 dd             	xor    %ebx,%r13d
    e3f2:	45 31 fd             	xor    %r15d,%r13d
    e3f5:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
    e3fc:	6e 
    e3fd:	89 54 24 08          	mov    %edx,0x8(%rsp)
    e401:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    e405:	45 01 e5             	add    %r12d,%r13d
    e408:	45 89 f4             	mov    %r14d,%r12d
    e40b:	33 14 24             	xor    (%rsp),%edx
    e40e:	41 c1 cf 02          	ror    $0x2,%r15d
    e412:	41 c1 c4 05          	rol    $0x5,%r12d
    e416:	45 01 e5             	add    %r12d,%r13d
    e419:	41 89 d4             	mov    %edx,%r12d
    e41c:	41 31 cc             	xor    %ecx,%r12d
    e41f:	45 31 c4             	xor    %r8d,%r12d
    e422:	41 d1 c4             	rol    %r12d
    e425:	44 89 e2             	mov    %r12d,%edx
    e428:	41 89 dc             	mov    %ebx,%r12d
    e42b:	45 31 fc             	xor    %r15d,%r12d
    e42e:	8d ac 15 a1 eb d9 6e 	lea    0x6ed9eba1(%rbp,%rdx,1),%ebp
    e435:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    e439:	45 31 f4             	xor    %r14d,%r12d
    e43c:	41 c1 ce 02          	ror    $0x2,%r14d
    e440:	41 01 ec             	add    %ebp,%r12d
    e443:	44 89 ed             	mov    %r13d,%ebp
    e446:	c1 c5 05             	rol    $0x5,%ebp
    e449:	41 01 ec             	add    %ebp,%r12d
    e44c:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
    e450:	33 6c 24 04          	xor    0x4(%rsp),%ebp
    e454:	33 6c 24 24          	xor    0x24(%rsp),%ebp
    e458:	33 6c 24 14          	xor    0x14(%rsp),%ebp
    e45c:	d1 c5                	rol    %ebp
    e45e:	89 ea                	mov    %ebp,%edx
    e460:	44 89 fd             	mov    %r15d,%ebp
    e463:	44 31 f5             	xor    %r14d,%ebp
    e466:	8d 9c 13 a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rdx,1),%ebx
    e46d:	89 54 24 28          	mov    %edx,0x28(%rsp)
    e471:	44 31 ed             	xor    %r13d,%ebp
    e474:	01 dd                	add    %ebx,%ebp
    e476:	44 89 e3             	mov    %r12d,%ebx
    e479:	c1 c3 05             	rol    $0x5,%ebx
    e47c:	01 dd                	add    %ebx,%ebp
    e47e:	8b 1c 24             	mov    (%rsp),%ebx
    e481:	41 c1 cd 02          	ror    $0x2,%r13d
    e485:	44 31 cb             	xor    %r9d,%ebx
    e488:	41 31 f9             	xor    %edi,%r9d
    e48b:	44 31 db             	xor    %r11d,%ebx
    e48e:	33 5c 24 08          	xor    0x8(%rsp),%ebx
    e492:	41 31 c1             	xor    %eax,%r9d
    e495:	44 33 4c 24 28       	xor    0x28(%rsp),%r9d
    e49a:	d1 c3                	rol    %ebx
    e49c:	89 da                	mov    %ebx,%edx
    e49e:	44 89 f3             	mov    %r14d,%ebx
    e4a1:	44 31 eb             	xor    %r13d,%ebx
    e4a4:	45 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%r15,%rdx,1),%r15d
    e4ab:	6e 
    e4ac:	89 14 24             	mov    %edx,(%rsp)
    e4af:	44 31 e3             	xor    %r12d,%ebx
    e4b2:	41 c1 cc 02          	ror    $0x2,%r12d
    e4b6:	44 01 fb             	add    %r15d,%ebx
    e4b9:	41 89 ef             	mov    %ebp,%r15d
    e4bc:	41 c1 c7 05          	rol    $0x5,%r15d
    e4c0:	44 01 fb             	add    %r15d,%ebx
    e4c3:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    e4c8:	44 33 7c 24 20       	xor    0x20(%rsp),%r15d
    e4cd:	45 31 d7             	xor    %r10d,%r15d
    e4d0:	44 33 7c 24 0c       	xor    0xc(%rsp),%r15d
    e4d5:	41 d1 c7             	rol    %r15d
    e4d8:	44 89 fa             	mov    %r15d,%edx
    e4db:	45 89 ef             	mov    %r13d,%r15d
    e4de:	45 31 e7             	xor    %r12d,%r15d
    e4e1:	45 8d b4 16 a1 eb d9 	lea    0x6ed9eba1(%r14,%rdx,1),%r14d
    e4e8:	6e 
    e4e9:	89 54 24 10          	mov    %edx,0x10(%rsp)
    e4ed:	41 31 ef             	xor    %ebp,%r15d
    e4f0:	c1 cd 02             	ror    $0x2,%ebp
    e4f3:	45 01 f7             	add    %r14d,%r15d
    e4f6:	41 89 de             	mov    %ebx,%r14d
    e4f9:	41 c1 c6 05          	rol    $0x5,%r14d
    e4fd:	45 01 fe             	add    %r15d,%r14d
    e500:	45 89 cf             	mov    %r9d,%r15d
    e503:	45 89 e1             	mov    %r12d,%r9d
    e506:	41 d1 c7             	rol    %r15d
    e509:	41 31 e9             	xor    %ebp,%r9d
    e50c:	41 31 d9             	xor    %ebx,%r9d
    e50f:	47 8d ac 3d a1 eb d9 	lea    0x6ed9eba1(%r13,%r15,1),%r13d
    e516:	6e 
    e517:	c1 cb 02             	ror    $0x2,%ebx
    e51a:	45 01 cd             	add    %r9d,%r13d
    e51d:	45 89 f1             	mov    %r14d,%r9d
    e520:	41 c1 c1 05          	rol    $0x5,%r9d
    e524:	45 01 e9             	add    %r13d,%r9d
    e527:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    e52c:	41 31 f5             	xor    %esi,%r13d
    e52f:	31 cf                	xor    %ecx,%edi
    e531:	44 31 d9             	xor    %r11d,%ecx
    e534:	45 31 c5             	xor    %r8d,%r13d
    e537:	44 33 2c 24          	xor    (%rsp),%r13d
    e53b:	41 d1 c5             	rol    %r13d
    e53e:	44 89 ea             	mov    %r13d,%edx
    e541:	41 89 ed             	mov    %ebp,%r13d
    e544:	41 31 dd             	xor    %ebx,%r13d
    e547:	45 8d a4 14 a1 eb d9 	lea    0x6ed9eba1(%r12,%rdx,1),%r12d
    e54e:	6e 
    e54f:	89 54 24 18          	mov    %edx,0x18(%rsp)
    e553:	33 7c 24 14          	xor    0x14(%rsp),%edi
    e557:	45 31 f5             	xor    %r14d,%r13d
    e55a:	33 7c 24 10          	xor    0x10(%rsp),%edi
    e55e:	41 c1 ce 02          	ror    $0x2,%r14d
    e562:	8b 54 24 24          	mov    0x24(%rsp),%edx
    e566:	45 01 e5             	add    %r12d,%r13d
    e569:	45 89 cc             	mov    %r9d,%r12d
    e56c:	d1 c7                	rol    %edi
    e56e:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
    e572:	41 c1 c4 05          	rol    $0x5,%r12d
    e576:	31 d6                	xor    %edx,%esi
    e578:	33 74 24 08          	xor    0x8(%rsp),%esi
    e57c:	45 01 ec             	add    %r13d,%r12d
    e57f:	41 89 fd             	mov    %edi,%r13d
    e582:	89 df                	mov    %ebx,%edi
    e584:	44 31 fe             	xor    %r15d,%esi
    e587:	44 31 f7             	xor    %r14d,%edi
    e58a:	42 8d ac 2d a1 eb d9 	lea    0x6ed9eba1(%rbp,%r13,1),%ebp
    e591:	6e 
    e592:	d1 c6                	rol    %esi
    e594:	44 31 cf             	xor    %r9d,%edi
    e597:	41 c1 c9 02          	ror    $0x2,%r9d
    e59b:	01 fd                	add    %edi,%ebp
    e59d:	44 89 e7             	mov    %r12d,%edi
    e5a0:	c1 c7 05             	rol    $0x5,%edi
    e5a3:	01 ef                	add    %ebp,%edi
    e5a5:	89 f5                	mov    %esi,%ebp
    e5a7:	44 89 f6             	mov    %r14d,%esi
    e5aa:	44 31 ce             	xor    %r9d,%esi
    e5ad:	8d 9c 2b a1 eb d9 6e 	lea    0x6ed9eba1(%rbx,%rbp,1),%ebx
    e5b4:	44 31 e6             	xor    %r12d,%esi
    e5b7:	41 c1 cc 02          	ror    $0x2,%r12d
    e5bb:	01 f3                	add    %esi,%ebx
    e5bd:	89 fe                	mov    %edi,%esi
    e5bf:	c1 c6 05             	rol    $0x5,%esi
    e5c2:	01 de                	add    %ebx,%esi
    e5c4:	33 4c 24 18          	xor    0x18(%rsp),%ecx
    e5c8:	44 89 cb             	mov    %r9d,%ebx
    e5cb:	44 31 d2             	xor    %r10d,%edx
    e5ce:	d1 c1                	rol    %ecx
    e5d0:	44 31 e3             	xor    %r12d,%ebx
    e5d3:	41 31 c3             	xor    %eax,%r11d
    e5d6:	44 33 1c 24          	xor    (%rsp),%r11d
    e5da:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    e5de:	31 fb                	xor    %edi,%ebx
    e5e0:	c1 cf 02             	ror    $0x2,%edi
    e5e3:	41 31 eb             	xor    %ebp,%r11d
    e5e6:	41 8d 8c 0e a1 eb d9 	lea    0x6ed9eba1(%r14,%rcx,1),%ecx
    e5ed:	6e 
    e5ee:	41 89 f6             	mov    %esi,%r14d
    e5f1:	45 31 c2             	xor    %r8d,%r10d
    e5f4:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
    e5f9:	41 c1 c6 05          	rol    $0x5,%r14d
    e5fd:	01 cb                	add    %ecx,%ebx
    e5ff:	44 33 54 24 1c       	xor    0x1c(%rsp),%r10d
    e604:	44 89 f1             	mov    %r14d,%ecx
    e607:	41 d1 c2             	rol    %r10d
    e60a:	01 d9                	add    %ebx,%ecx
    e60c:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
    e610:	44 89 54 24 2c       	mov    %r10d,0x2c(%rsp)
    e615:	31 da                	xor    %ebx,%edx
    e617:	44 31 ea             	xor    %r13d,%edx
    e61a:	41 89 d6             	mov    %edx,%r14d
    e61d:	44 89 e2             	mov    %r12d,%edx
    e620:	41 d1 c6             	rol    %r14d
    e623:	31 fa                	xor    %edi,%edx
    e625:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
    e62a:	47 8d 8c 31 a1 eb d9 	lea    0x6ed9eba1(%r9,%r14,1),%r9d
    e631:	6e 
    e632:	41 89 ce             	mov    %ecx,%r14d
    e635:	31 f2                	xor    %esi,%edx
    e637:	41 c1 c6 05          	rol    $0x5,%r14d
    e63b:	41 01 d1             	add    %edx,%r9d
    e63e:	c1 ce 02             	ror    $0x2,%esi
    e641:	44 89 f2             	mov    %r14d,%edx
    e644:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
    e649:	44 01 ca             	add    %r9d,%edx
    e64c:	45 89 d9             	mov    %r11d,%r9d
    e64f:	41 89 fb             	mov    %edi,%r11d
    e652:	41 d1 c1             	rol    %r9d
    e655:	41 31 f3             	xor    %esi,%r11d
    e658:	42 8d bc 17 a1 eb d9 	lea    0x6ed9eba1(%rdi,%r10,1),%edi
    e65f:	6e 
    e660:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    e665:	41 31 cb             	xor    %ecx,%r11d
    e668:	47 8d 8c 0c a1 eb d9 	lea    0x6ed9eba1(%r12,%r9,1),%r9d
    e66f:	6e 
    e670:	41 89 d4             	mov    %edx,%r12d
    e673:	41 c1 c4 05          	rol    $0x5,%r12d
    e677:	45 01 cb             	add    %r9d,%r11d
    e67a:	c1 c9 02             	ror    $0x2,%ecx
    e67d:	45 01 e3             	add    %r12d,%r11d
    e680:	41 89 f4             	mov    %esi,%r12d
    e683:	41 31 cc             	xor    %ecx,%r12d
    e686:	44 31 f0             	xor    %r14d,%eax
    e689:	45 89 e1             	mov    %r12d,%r9d
    e68c:	45 89 dc             	mov    %r11d,%r12d
    e68f:	44 31 f8             	xor    %r15d,%eax
    e692:	33 44 24 20          	xor    0x20(%rsp),%eax
    e696:	41 c1 c4 05          	rol    $0x5,%r12d
    e69a:	41 31 d1             	xor    %edx,%r9d
    e69d:	d1 c0                	rol    %eax
    e69f:	44 01 cf             	add    %r9d,%edi
    e6a2:	89 44 24 14          	mov    %eax,0x14(%rsp)
    e6a6:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
    e6ab:	c1 ca 02             	ror    $0x2,%edx
    e6ae:	44 01 e7             	add    %r12d,%edi
    e6b1:	8d b4 06 dc bc 1b 8f 	lea    -0x70e44324(%rsi,%rax,1),%esi
    e6b8:	45 89 dc             	mov    %r11d,%r12d
    e6bb:	89 f8                	mov    %edi,%eax
    e6bd:	45 31 c8             	xor    %r9d,%r8d
    e6c0:	44 33 44 24 18       	xor    0x18(%rsp),%r8d
    e6c5:	44 33 44 24 04       	xor    0x4(%rsp),%r8d
    e6ca:	c1 c0 05             	rol    $0x5,%eax
    e6cd:	41 21 d4             	and    %edx,%r12d
    e6d0:	41 d1 c0             	rol    %r8d
    e6d3:	01 c6                	add    %eax,%esi
    e6d5:	44 89 d8             	mov    %r11d,%eax
    e6d8:	41 c1 cb 02          	ror    $0x2,%r11d
    e6dc:	09 d0                	or     %edx,%eax
    e6de:	21 c8                	and    %ecx,%eax
    e6e0:	44 09 e0             	or     %r12d,%eax
    e6e3:	45 89 c4             	mov    %r8d,%r12d
    e6e6:	41 89 f8             	mov    %edi,%r8d
    e6e9:	01 c6                	add    %eax,%esi
    e6eb:	45 09 d8             	or     %r11d,%r8d
    e6ee:	89 f8                	mov    %edi,%eax
    e6f0:	44 89 64 24 08       	mov    %r12d,0x8(%rsp)
    e6f5:	41 21 d0             	and    %edx,%r8d
    e6f8:	44 21 d8             	and    %r11d,%eax
    e6fb:	c1 cf 02             	ror    $0x2,%edi
    e6fe:	44 09 c0             	or     %r8d,%eax
    e701:	46 8d 84 21 dc bc 1b 	lea    -0x70e44324(%rcx,%r12,1),%r8d
    e708:	8f 
    e709:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    e70e:	89 f1                	mov    %esi,%ecx
    e710:	41 01 c0             	add    %eax,%r8d
    e713:	c1 c1 05             	rol    $0x5,%ecx
    e716:	45 31 e6             	xor    %r12d,%r14d
    e719:	41 01 c8             	add    %ecx,%r8d
    e71c:	45 31 ee             	xor    %r13d,%r14d
    e71f:	44 89 c1             	mov    %r8d,%ecx
    e722:	45 31 d6             	xor    %r10d,%r14d
    e725:	c1 c1 05             	rol    $0x5,%ecx
    e728:	41 31 d9             	xor    %ebx,%r9d
    e72b:	44 33 24 24          	xor    (%rsp),%r12d
    e72f:	41 d1 c6             	rol    %r14d
    e732:	89 c8                	mov    %ecx,%eax
    e734:	89 f1                	mov    %esi,%ecx
    e736:	45 89 ca             	mov    %r9d,%r10d
    e739:	42 8d 94 32 dc bc 1b 	lea    -0x70e44324(%rdx,%r14,1),%edx
    e740:	8f 
    e741:	21 f9                	and    %edi,%ecx
    e743:	41 31 ea             	xor    %ebp,%r10d
    e746:	41 89 d9             	mov    %ebx,%r9d
    e749:	01 d0                	add    %edx,%eax
    e74b:	89 f2                	mov    %esi,%edx
    e74d:	c1 ce 02             	ror    $0x2,%esi
    e750:	44 33 54 24 14       	xor    0x14(%rsp),%r10d
    e755:	09 fa                	or     %edi,%edx
    e757:	41 d1 c2             	rol    %r10d
    e75a:	44 33 64 24 1c       	xor    0x1c(%rsp),%r12d
    e75f:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
    e764:	44 21 da             	and    %r11d,%edx
    e767:	44 89 54 24 0c       	mov    %r10d,0xc(%rsp)
    e76c:	41 d1 c4             	rol    %r12d
    e76f:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    e773:	09 ca                	or     %ecx,%edx
    e775:	44 89 c1             	mov    %r8d,%ecx
    e778:	47 8d 94 13 dc bc 1b 	lea    -0x70e44324(%r11,%r10,1),%r10d
    e77f:	8f 
    e780:	01 c2                	add    %eax,%edx
    e782:	09 f1                	or     %esi,%ecx
    e784:	46 8d 9c 27 dc bc 1b 	lea    -0x70e44324(%rdi,%r12,1),%r11d
    e78b:	8f 
    e78c:	44 89 c0             	mov    %r8d,%eax
    e78f:	21 f9                	and    %edi,%ecx
    e791:	21 f0                	and    %esi,%eax
    e793:	41 c1 c8 02          	ror    $0x2,%r8d
    e797:	09 c8                	or     %ecx,%eax
    e799:	8b 0c 24             	mov    (%rsp),%ecx
    e79c:	41 01 c2             	add    %eax,%r10d
    e79f:	89 d0                	mov    %edx,%eax
    e7a1:	c1 c0 05             	rol    $0x5,%eax
    e7a4:	41 01 c2             	add    %eax,%r10d
    e7a7:	44 89 d7             	mov    %r10d,%edi
    e7aa:	c1 c7 05             	rol    $0x5,%edi
    e7ad:	89 f8                	mov    %edi,%eax
    e7af:	89 d7                	mov    %edx,%edi
    e7b1:	44 09 c7             	or     %r8d,%edi
    e7b4:	44 01 d8             	add    %r11d,%eax
    e7b7:	41 89 fb             	mov    %edi,%r11d
    e7ba:	89 d7                	mov    %edx,%edi
    e7bc:	44 21 c7             	and    %r8d,%edi
    e7bf:	41 21 f3             	and    %esi,%r11d
    e7c2:	41 09 fb             	or     %edi,%r11d
    e7c5:	41 01 c3             	add    %eax,%r11d
    e7c8:	41 31 d9             	xor    %ebx,%r9d
    e7cb:	44 33 4c 24 20       	xor    0x20(%rsp),%r9d
    e7d0:	c1 ca 02             	ror    $0x2,%edx
    e7d3:	45 31 f1             	xor    %r14d,%r9d
    e7d6:	44 31 f9             	xor    %r15d,%ecx
    e7d9:	33 4c 24 04          	xor    0x4(%rsp),%ecx
    e7dd:	44 89 cf             	mov    %r9d,%edi
    e7e0:	d1 c7                	rol    %edi
    e7e2:	41 89 f9             	mov    %edi,%r9d
    e7e5:	44 89 d7             	mov    %r10d,%edi
    e7e8:	09 d7                	or     %edx,%edi
    e7ea:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
    e7ef:	33 4c 24 0c          	xor    0xc(%rsp),%ecx
    e7f3:	89 f8                	mov    %edi,%eax
    e7f5:	44 89 d7             	mov    %r10d,%edi
    e7f8:	41 c1 ca 02          	ror    $0x2,%r10d
    e7fc:	44 21 c0             	and    %r8d,%eax
    e7ff:	21 d7                	and    %edx,%edi
    e801:	09 c7                	or     %eax,%edi
    e803:	42 8d 84 0e dc bc 1b 	lea    -0x70e44324(%rsi,%r9,1),%eax
    e80a:	8f 
    e80b:	44 89 de             	mov    %r11d,%esi
    e80e:	44 8b 4c 24 18       	mov    0x18(%rsp),%r9d
    e813:	01 c7                	add    %eax,%edi
    e815:	c1 c6 05             	rol    $0x5,%esi
    e818:	01 f7                	add    %esi,%edi
    e81a:	89 ce                	mov    %ecx,%esi
    e81c:	d1 c6                	rol    %esi
    e81e:	89 74 24 24          	mov    %esi,0x24(%rsp)
    e822:	41 8d b4 30 dc bc 1b 	lea    -0x70e44324(%r8,%rsi,1),%esi
    e829:	8f 
    e82a:	41 89 f8             	mov    %edi,%r8d
    e82d:	41 c1 c0 05          	rol    $0x5,%r8d
    e831:	44 89 c0             	mov    %r8d,%eax
    e834:	45 89 d8             	mov    %r11d,%r8d
    e837:	45 09 d0             	or     %r10d,%r8d
    e83a:	01 f0                	add    %esi,%eax
    e83c:	44 89 c1             	mov    %r8d,%ecx
    e83f:	45 89 d8             	mov    %r11d,%r8d
    e842:	41 c1 cb 02          	ror    $0x2,%r11d
    e846:	45 21 d0             	and    %r10d,%r8d
    e849:	21 d1                	and    %edx,%ecx
    e84b:	44 89 c6             	mov    %r8d,%esi
    e84e:	09 ce                	or     %ecx,%esi
    e850:	89 f9                	mov    %edi,%ecx
    e852:	01 c6                	add    %eax,%esi
    e854:	89 d8                	mov    %ebx,%eax
    e856:	44 09 d9             	or     %r11d,%ecx
    e859:	44 31 c8             	xor    %r9d,%eax
    e85c:	33 44 24 2c          	xor    0x2c(%rsp),%eax
    e860:	44 21 d1             	and    %r10d,%ecx
    e863:	44 31 e0             	xor    %r12d,%eax
    e866:	41 89 c0             	mov    %eax,%r8d
    e869:	89 f8                	mov    %edi,%eax
    e86b:	41 d1 c0             	rol    %r8d
    e86e:	44 21 d8             	and    %r11d,%eax
    e871:	45 31 ef             	xor    %r13d,%r15d
    e874:	c1 cf 02             	ror    $0x2,%edi
    e877:	09 c8                	or     %ecx,%eax
    e879:	42 8d 94 02 dc bc 1b 	lea    -0x70e44324(%rdx,%r8,1),%edx
    e880:	8f 
    e881:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
    e885:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
    e88a:	01 c2                	add    %eax,%edx
    e88c:	89 f0                	mov    %esi,%eax
    e88e:	41 89 f8             	mov    %edi,%r8d
    e891:	89 f7                	mov    %esi,%edi
    e893:	c1 c0 05             	rol    $0x5,%eax
    e896:	44 31 f9             	xor    %r15d,%ecx
    e899:	33 4c 24 10          	xor    0x10(%rsp),%ecx
    e89d:	44 09 c7             	or     %r8d,%edi
    e8a0:	01 c2                	add    %eax,%edx
    e8a2:	d1 c1                	rol    %ecx
    e8a4:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
    e8a9:	89 d0                	mov    %edx,%eax
    e8ab:	41 8d 9c 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%ebx
    e8b2:	8f 
    e8b3:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    e8b7:	89 f1                	mov    %esi,%ecx
    e8b9:	c1 c0 05             	rol    $0x5,%eax
    e8bc:	44 21 c1             	and    %r8d,%ecx
    e8bf:	01 d8                	add    %ebx,%eax
    e8c1:	89 fb                	mov    %edi,%ebx
    e8c3:	89 d7                	mov    %edx,%edi
    e8c5:	44 21 db             	and    %r11d,%ebx
    e8c8:	09 cb                	or     %ecx,%ebx
    e8ca:	89 f1                	mov    %esi,%ecx
    e8cc:	01 c3                	add    %eax,%ebx
    e8ce:	44 89 c8             	mov    %r9d,%eax
    e8d1:	c1 c9 02             	ror    $0x2,%ecx
    e8d4:	31 e8                	xor    %ebp,%eax
    e8d6:	33 44 24 08          	xor    0x8(%rsp),%eax
    e8da:	33 44 24 24          	xor    0x24(%rsp),%eax
    e8de:	21 cf                	and    %ecx,%edi
    e8e0:	41 89 c1             	mov    %eax,%r9d
    e8e3:	89 d0                	mov    %edx,%eax
    e8e5:	41 89 fa             	mov    %edi,%r10d
    e8e8:	c1 ca 02             	ror    $0x2,%edx
    e8eb:	09 c8                	or     %ecx,%eax
    e8ed:	41 d1 c1             	rol    %r9d
    e8f0:	44 21 c0             	and    %r8d,%eax
    e8f3:	44 89 0c 24          	mov    %r9d,(%rsp)
    e8f7:	41 09 c2             	or     %eax,%r10d
    e8fa:	43 8d 84 0b dc bc 1b 	lea    -0x70e44324(%r11,%r9,1),%eax
    e901:	8f 
    e902:	41 01 c2             	add    %eax,%r10d
    e905:	89 d8                	mov    %ebx,%eax
    e907:	c1 c0 05             	rol    $0x5,%eax
    e90a:	41 01 c2             	add    %eax,%r10d
    e90d:	44 89 e8             	mov    %r13d,%eax
    e910:	44 8b 6c 24 20       	mov    0x20(%rsp),%r13d
    e915:	44 31 f8             	xor    %r15d,%eax
    e918:	41 89 c1             	mov    %eax,%r9d
    e91b:	45 31 f1             	xor    %r14d,%r9d
    e91e:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
    e923:	44 31 ed             	xor    %r13d,%ebp
    e926:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
    e92a:	45 89 cb             	mov    %r9d,%r11d
    e92d:	44 33 7c 24 04       	xor    0x4(%rsp),%r15d
    e932:	41 d1 c3             	rol    %r11d
    e935:	44 89 ff             	mov    %r15d,%edi
    e938:	43 8d b4 18 dc bc 1b 	lea    -0x70e44324(%r8,%r11,1),%esi
    e93f:	8f 
    e940:	45 89 d0             	mov    %r10d,%r8d
    e943:	44 31 e7             	xor    %r12d,%edi
    e946:	33 3c 24             	xor    (%rsp),%edi
    e949:	41 c1 c0 05          	rol    $0x5,%r8d
    e94d:	41 89 ff             	mov    %edi,%r15d
    e950:	44 01 c6             	add    %r8d,%esi
    e953:	41 89 d8             	mov    %ebx,%r8d
    e956:	41 d1 c7             	rol    %r15d
    e959:	41 09 d0             	or     %edx,%r8d
    e95c:	46 8d 8c 3a dc bc 1b 	lea    -0x70e44324(%rdx,%r15,1),%r9d
    e963:	8f 
    e964:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
    e969:	44 89 c0             	mov    %r8d,%eax
    e96c:	41 89 d8             	mov    %ebx,%r8d
    e96f:	c1 cb 02             	ror    $0x2,%ebx
    e972:	41 21 d0             	and    %edx,%r8d
    e975:	21 c8                	and    %ecx,%eax
    e977:	44 09 c0             	or     %r8d,%eax
    e97a:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
    e97f:	01 f0                	add    %esi,%eax
    e981:	44 89 d6             	mov    %r10d,%esi
    e984:	41 31 e8             	xor    %ebp,%r8d
    e987:	09 de                	or     %ebx,%esi
    e989:	41 d1 c0             	rol    %r8d
    e98c:	21 d6                	and    %edx,%esi
    e98e:	44 89 c5             	mov    %r8d,%ebp
    e991:	45 89 d0             	mov    %r10d,%r8d
    e994:	41 c1 ca 02          	ror    $0x2,%r10d
    e998:	41 21 d8             	and    %ebx,%r8d
    e99b:	41 09 f0             	or     %esi,%r8d
    e99e:	8d b4 29 dc bc 1b 8f 	lea    -0x70e44324(%rcx,%rbp,1),%esi
    e9a5:	89 c1                	mov    %eax,%ecx
    e9a7:	41 01 f0             	add    %esi,%r8d
    e9aa:	c1 c1 05             	rol    $0x5,%ecx
    e9ad:	44 89 ee             	mov    %r13d,%esi
    e9b0:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    e9b5:	41 01 c8             	add    %ecx,%r8d
    e9b8:	89 c1                	mov    %eax,%ecx
    e9ba:	44 89 c2             	mov    %r8d,%edx
    e9bd:	44 21 d1             	and    %r10d,%ecx
    e9c0:	44 89 c7             	mov    %r8d,%edi
    e9c3:	c1 c2 05             	rol    $0x5,%edx
    e9c6:	44 01 ca             	add    %r9d,%edx
    e9c9:	41 89 c1             	mov    %eax,%r9d
    e9cc:	45 09 d1             	or     %r10d,%r9d
    e9cf:	41 21 d9             	and    %ebx,%r9d
    e9d2:	41 09 c9             	or     %ecx,%r9d
    e9d5:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    e9d9:	41 01 d1             	add    %edx,%r9d
    e9dc:	44 31 ee             	xor    %r13d,%esi
    e9df:	33 74 24 10          	xor    0x10(%rsp),%esi
    e9e3:	c1 c8 02             	ror    $0x2,%eax
    e9e6:	44 31 de             	xor    %r11d,%esi
    e9e9:	21 c7                	and    %eax,%edi
    e9eb:	89 f2                	mov    %esi,%edx
    e9ed:	d1 c2                	rol    %edx
    e9ef:	41 89 d7             	mov    %edx,%r15d
    e9f2:	44 89 c2             	mov    %r8d,%edx
    e9f5:	41 c1 c8 02          	ror    $0x2,%r8d
    e9f9:	09 c2                	or     %eax,%edx
    e9fb:	44 21 d2             	and    %r10d,%edx
    e9fe:	09 d7                	or     %edx,%edi
    ea00:	42 8d 94 3b dc bc 1b 	lea    -0x70e44324(%rbx,%r15,1),%edx
    ea07:	8f 
    ea08:	8b 5c 24 14          	mov    0x14(%rsp),%ebx
    ea0c:	01 d7                	add    %edx,%edi
    ea0e:	44 89 ca             	mov    %r9d,%edx
    ea11:	c1 c2 05             	rol    $0x5,%edx
    ea14:	31 d9                	xor    %ebx,%ecx
    ea16:	33 4c 24 24          	xor    0x24(%rsp),%ecx
    ea1a:	01 d7                	add    %edx,%edi
    ea1c:	31 e9                	xor    %ebp,%ecx
    ea1e:	d1 c1                	rol    %ecx
    ea20:	89 fa                	mov    %edi,%edx
    ea22:	41 8d b4 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%esi
    ea29:	8f 
    ea2a:	c1 c2 05             	rol    $0x5,%edx
    ea2d:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    ea31:	44 89 c9             	mov    %r9d,%ecx
    ea34:	01 f2                	add    %esi,%edx
    ea36:	44 89 ce             	mov    %r9d,%esi
    ea39:	44 21 c1             	and    %r8d,%ecx
    ea3c:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
    ea41:	44 09 c6             	or     %r8d,%esi
    ea44:	41 c1 c9 02          	ror    $0x2,%r9d
    ea48:	21 c6                	and    %eax,%esi
    ea4a:	09 ce                	or     %ecx,%esi
    ea4c:	89 f9                	mov    %edi,%ecx
    ea4e:	01 d6                	add    %edx,%esi
    ea50:	44 89 ea             	mov    %r13d,%edx
    ea53:	44 31 d2             	xor    %r10d,%edx
    ea56:	33 54 24 18          	xor    0x18(%rsp),%edx
    ea5a:	33 54 24 1c          	xor    0x1c(%rsp),%edx
    ea5e:	d1 c2                	rol    %edx
    ea60:	41 89 d5             	mov    %edx,%r13d
    ea63:	89 fa                	mov    %edi,%edx
    ea65:	44 09 ca             	or     %r9d,%edx
    ea68:	44 89 6c 24 2c       	mov    %r13d,0x2c(%rsp)
    ea6d:	44 21 c2             	and    %r8d,%edx
    ea70:	44 21 c9             	and    %r9d,%ecx
    ea73:	c1 cf 02             	ror    $0x2,%edi
    ea76:	09 d1                	or     %edx,%ecx
    ea78:	42 8d 94 28 dc bc 1b 	lea    -0x70e44324(%rax,%r13,1),%edx
    ea7f:	8f 
    ea80:	89 f0                	mov    %esi,%eax
    ea82:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    ea87:	01 d1                	add    %edx,%ecx
    ea89:	c1 c0 05             	rol    $0x5,%eax
    ea8c:	01 c1                	add    %eax,%ecx
    ea8e:	89 d8                	mov    %ebx,%eax
    ea90:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
    ea94:	44 31 f0             	xor    %r14d,%eax
    ea97:	31 c3                	xor    %eax,%ebx
    ea99:	44 31 fb             	xor    %r15d,%ebx
    ea9c:	89 d8                	mov    %ebx,%eax
    ea9e:	d1 c0                	rol    %eax
    eaa0:	41 8d 94 00 dc bc 1b 	lea    -0x70e44324(%r8,%rax,1),%edx
    eaa7:	8f 
    eaa8:	41 89 c8             	mov    %ecx,%r8d
    eaab:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    eaaf:	8b 1c 24             	mov    (%rsp),%ebx
    eab2:	41 c1 c0 05          	rol    $0x5,%r8d
    eab6:	44 89 c0             	mov    %r8d,%eax
    eab9:	41 89 f0             	mov    %esi,%r8d
    eabc:	01 d0                	add    %edx,%eax
    eabe:	89 f2                	mov    %esi,%edx
    eac0:	41 21 f8             	and    %edi,%r8d
    eac3:	c1 ce 02             	ror    $0x2,%esi
    eac6:	09 fa                	or     %edi,%edx
    eac8:	44 21 ca             	and    %r9d,%edx
    eacb:	44 09 c2             	or     %r8d,%edx
    eace:	45 89 d0             	mov    %r10d,%r8d
    ead1:	45 31 e8             	xor    %r13d,%r8d
    ead4:	01 c2                	add    %eax,%edx
    ead6:	89 c8                	mov    %ecx,%eax
    ead8:	41 31 d8             	xor    %ebx,%r8d
    eadb:	44 33 44 24 20       	xor    0x20(%rsp),%r8d
    eae0:	21 f0                	and    %esi,%eax
    eae2:	41 d1 c0             	rol    %r8d
    eae5:	45 89 c2             	mov    %r8d,%r10d
    eae8:	41 89 c8             	mov    %ecx,%r8d
    eaeb:	c1 c9 02             	ror    $0x2,%ecx
    eaee:	41 09 f0             	or     %esi,%r8d
    eaf1:	44 89 14 24          	mov    %r10d,(%rsp)
    eaf5:	41 21 f8             	and    %edi,%r8d
    eaf8:	44 09 c0             	or     %r8d,%eax
    eafb:	47 8d 84 11 dc bc 1b 	lea    -0x70e44324(%r9,%r10,1),%r8d
    eb02:	8f 
    eb03:	41 89 d1             	mov    %edx,%r9d
    eb06:	44 01 c0             	add    %r8d,%eax
    eb09:	41 c1 c1 05          	rol    $0x5,%r9d
    eb0d:	41 89 d0             	mov    %edx,%r8d
    eb10:	44 01 c8             	add    %r9d,%eax
    eb13:	45 89 f1             	mov    %r14d,%r9d
    eb16:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
    eb1b:	45 31 e1             	xor    %r12d,%r9d
    eb1e:	45 31 d9             	xor    %r11d,%r9d
    eb21:	44 33 4c 24 2c       	xor    0x2c(%rsp),%r9d
    eb26:	41 21 c8             	and    %ecx,%r8d
    eb29:	41 d1 c1             	rol    %r9d
    eb2c:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    eb31:	46 8d 94 0f dc bc 1b 	lea    -0x70e44324(%rdi,%r9,1),%r10d
    eb38:	8f 
    eb39:	89 c7                	mov    %eax,%edi
    eb3b:	41 89 d1             	mov    %edx,%r9d
    eb3e:	c1 c7 05             	rol    $0x5,%edi
    eb41:	41 09 c9             	or     %ecx,%r9d
    eb44:	c1 ca 02             	ror    $0x2,%edx
    eb47:	44 01 d7             	add    %r10d,%edi
    eb4a:	45 89 ca             	mov    %r9d,%r10d
    eb4d:	41 21 f2             	and    %esi,%r10d
    eb50:	45 09 c2             	or     %r8d,%r10d
    eb53:	45 89 e8             	mov    %r13d,%r8d
    eb56:	45 31 f0             	xor    %r14d,%r8d
    eb59:	41 01 fa             	add    %edi,%r10d
    eb5c:	41 31 e8             	xor    %ebp,%r8d
    eb5f:	44 33 44 24 3c       	xor    0x3c(%rsp),%r8d
    eb64:	44 89 c7             	mov    %r8d,%edi
    eb67:	d1 c7                	rol    %edi
    eb69:	41 89 fd             	mov    %edi,%r13d
    eb6c:	89 c7                	mov    %eax,%edi
    eb6e:	09 d7                	or     %edx,%edi
    eb70:	44 89 6c 24 08       	mov    %r13d,0x8(%rsp)
    eb75:	41 89 f8             	mov    %edi,%r8d
    eb78:	89 c7                	mov    %eax,%edi
    eb7a:	c1 c8 02             	ror    $0x2,%eax
    eb7d:	41 21 c8             	and    %ecx,%r8d
    eb80:	21 d7                	and    %edx,%edi
    eb82:	44 09 c7             	or     %r8d,%edi
    eb85:	46 8d 84 2e dc bc 1b 	lea    -0x70e44324(%rsi,%r13,1),%r8d
    eb8c:	8f 
    eb8d:	44 89 d6             	mov    %r10d,%esi
    eb90:	44 8b 6c 24 24       	mov    0x24(%rsp),%r13d
    eb95:	44 01 c7             	add    %r8d,%edi
    eb98:	c1 c6 05             	rol    $0x5,%esi
    eb9b:	41 89 c0             	mov    %eax,%r8d
    eb9e:	01 f7                	add    %esi,%edi
    eba0:	44 89 e6             	mov    %r12d,%esi
    eba3:	44 31 ee             	xor    %r13d,%esi
    eba6:	33 74 24 1c          	xor    0x1c(%rsp),%esi
    ebaa:	33 34 24             	xor    (%rsp),%esi
    ebad:	d1 c6                	rol    %esi
    ebaf:	41 89 f4             	mov    %esi,%r12d
    ebb2:	89 d6                	mov    %edx,%esi
    ebb4:	31 c6                	xor    %eax,%esi
    ebb6:	42 8d 8c 21 d6 c1 62 	lea    -0x359d3e2a(%rcx,%r12,1),%ecx
    ebbd:	ca 
    ebbe:	44 89 64 24 0c       	mov    %r12d,0xc(%rsp)
    ebc3:	44 8b 64 24 18       	mov    0x18(%rsp),%r12d
    ebc8:	44 31 d6             	xor    %r10d,%esi
    ebcb:	41 c1 ca 02          	ror    $0x2,%r10d
    ebcf:	01 ce                	add    %ecx,%esi
    ebd1:	89 f9                	mov    %edi,%ecx
    ebd3:	c1 c1 05             	rol    $0x5,%ecx
    ebd6:	01 ce                	add    %ecx,%esi
    ebd8:	45 31 e6             	xor    %r12d,%r14d
    ebdb:	45 31 d0             	xor    %r10d,%r8d
    ebde:	44 89 e9             	mov    %r13d,%ecx
    ebe1:	45 89 f1             	mov    %r14d,%r9d
    ebe4:	41 31 f8             	xor    %edi,%r8d
    ebe7:	c1 cf 02             	ror    $0x2,%edi
    ebea:	45 31 f9             	xor    %r15d,%r9d
    ebed:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
    ebf2:	45 89 ce             	mov    %r9d,%r14d
    ebf5:	41 89 d9             	mov    %ebx,%r9d
    ebf8:	41 d1 c6             	rol    %r14d
    ebfb:	44 89 74 24 10       	mov    %r14d,0x10(%rsp)
    ec00:	42 8d 94 32 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r14,1),%edx
    ec07:	ca 
    ec08:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
    ec0d:	41 01 d0             	add    %edx,%r8d
    ec10:	89 f2                	mov    %esi,%edx
    ec12:	c1 c2 05             	rol    $0x5,%edx
    ec15:	44 31 f1             	xor    %r14d,%ecx
    ec18:	33 4c 24 20          	xor    0x20(%rsp),%ecx
    ec1c:	33 4c 24 08          	xor    0x8(%rsp),%ecx
    ec20:	41 01 d0             	add    %edx,%r8d
    ec23:	41 89 cd             	mov    %ecx,%r13d
    ec26:	44 89 d2             	mov    %r10d,%edx
    ec29:	89 f9                	mov    %edi,%ecx
    ec2b:	41 d1 c5             	rol    %r13d
    ec2e:	31 fa                	xor    %edi,%edx
    ec30:	31 f2                	xor    %esi,%edx
    ec32:	42 8d 84 28 d6 c1 62 	lea    -0x359d3e2a(%rax,%r13,1),%eax
    ec39:	ca 
    ec3a:	c1 ce 02             	ror    $0x2,%esi
    ec3d:	44 89 6c 24 14       	mov    %r13d,0x14(%rsp)
    ec42:	01 c2                	add    %eax,%edx
    ec44:	44 89 c0             	mov    %r8d,%eax
    ec47:	31 f1                	xor    %esi,%ecx
    ec49:	c1 c0 05             	rol    $0x5,%eax
    ec4c:	41 89 cd             	mov    %ecx,%r13d
    ec4f:	44 89 f1             	mov    %r14d,%ecx
    ec52:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
    ec57:	01 c2                	add    %eax,%edx
    ec59:	44 89 e0             	mov    %r12d,%eax
    ec5c:	45 31 c5             	xor    %r8d,%r13d
    ec5f:	44 31 d9             	xor    %r11d,%ecx
    ec62:	31 d8                	xor    %ebx,%eax
    ec64:	33 44 24 2c          	xor    0x2c(%rsp),%eax
    ec68:	33 44 24 0c          	xor    0xc(%rsp),%eax
    ec6c:	41 c1 c8 02          	ror    $0x2,%r8d
    ec70:	d1 c0                	rol    %eax
    ec72:	44 31 f1             	xor    %r14d,%ecx
    ec75:	41 89 f4             	mov    %esi,%r12d
    ec78:	89 44 24 18          	mov    %eax,0x18(%rsp)
    ec7c:	41 8d 84 02 d6 c1 62 	lea    -0x359d3e2a(%r10,%rax,1),%eax
    ec83:	ca 
    ec84:	41 01 c5             	add    %eax,%r13d
    ec87:	89 d0                	mov    %edx,%eax
    ec89:	c1 c0 05             	rol    $0x5,%eax
    ec8c:	41 01 c5             	add    %eax,%r13d
    ec8f:	33 4c 24 10          	xor    0x10(%rsp),%ecx
    ec93:	45 31 c4             	xor    %r8d,%r12d
    ec96:	89 cb                	mov    %ecx,%ebx
    ec98:	41 31 d4             	xor    %edx,%r12d
    ec9b:	c1 ca 02             	ror    $0x2,%edx
    ec9e:	d1 c3                	rol    %ebx
    eca0:	41 89 d2             	mov    %edx,%r10d
    eca3:	8d 84 1f d6 c1 62 ca 	lea    -0x359d3e2a(%rdi,%rbx,1),%eax
    ecaa:	44 89 ef             	mov    %r13d,%edi
    ecad:	89 5c 24 54          	mov    %ebx,0x54(%rsp)
    ecb1:	41 01 c4             	add    %eax,%r12d
    ecb4:	c1 c7 05             	rol    $0x5,%edi
    ecb7:	44 89 c8             	mov    %r9d,%eax
    ecba:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
    ecbe:	41 01 fc             	add    %edi,%r12d
    ecc1:	44 89 c7             	mov    %r8d,%edi
    ecc4:	31 e8                	xor    %ebp,%eax
    ecc6:	33 04 24             	xor    (%rsp),%eax
    ecc9:	31 d7                	xor    %edx,%edi
    eccb:	33 44 24 14          	xor    0x14(%rsp),%eax
    eccf:	45 89 d9             	mov    %r11d,%r9d
    ecd2:	d1 c0                	rol    %eax
    ecd4:	89 fb                	mov    %edi,%ebx
    ecd6:	8d 8c 06 d6 c1 62 ca 	lea    -0x359d3e2a(%rsi,%rax,1),%ecx
    ecdd:	44 31 eb             	xor    %r13d,%ebx
    ece0:	44 89 e6             	mov    %r12d,%esi
    ece3:	41 c1 cd 02          	ror    $0x2,%r13d
    ece7:	01 cb                	add    %ecx,%ebx
    ece9:	c1 c6 05             	rol    $0x5,%esi
    ecec:	45 31 ea             	xor    %r13d,%r10d
    ecef:	89 44 24 58          	mov    %eax,0x58(%rsp)
    ecf3:	01 f3                	add    %esi,%ebx
    ecf5:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    ecf9:	45 31 e2             	xor    %r12d,%r10d
    ecfc:	45 89 eb             	mov    %r13d,%r11d
    ecff:	41 c1 cc 02          	ror    $0x2,%r12d
    ed03:	41 31 f1             	xor    %esi,%r9d
    ed06:	44 33 4c 24 04       	xor    0x4(%rsp),%r9d
    ed0b:	44 33 4c 24 18       	xor    0x18(%rsp),%r9d
    ed10:	41 d1 c1             	rol    %r9d
    ed13:	43 8d 8c 08 d6 c1 62 	lea    -0x359d3e2a(%r8,%r9,1),%ecx
    ed1a:	ca 
    ed1b:	41 89 d8             	mov    %ebx,%r8d
    ed1e:	44 89 4c 24 5c       	mov    %r9d,0x5c(%rsp)
    ed23:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    ed27:	41 01 ca             	add    %ecx,%r10d
    ed2a:	41 c1 c0 05          	rol    $0x5,%r8d
    ed2e:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    ed32:	45 01 c2             	add    %r8d,%r10d
    ed35:	41 89 e8             	mov    %ebp,%r8d
    ed38:	45 31 f8             	xor    %r15d,%r8d
    ed3b:	44 33 44 24 08       	xor    0x8(%rsp),%r8d
    ed40:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
    ed45:	41 d1 c0             	rol    %r8d
    ed48:	45 31 e3             	xor    %r12d,%r11d
    ed4b:	31 ce                	xor    %ecx,%esi
    ed4d:	44 31 f1             	xor    %r14d,%ecx
    ed50:	41 31 db             	xor    %ebx,%r11d
    ed53:	42 8d 94 02 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r8,1),%edx
    ed5a:	ca 
    ed5b:	31 f7                	xor    %esi,%edi
    ed5d:	c1 cb 02             	ror    $0x2,%ebx
    ed60:	41 01 d3             	add    %edx,%r11d
    ed63:	44 89 d2             	mov    %r10d,%edx
    ed66:	31 c7                	xor    %eax,%edi
    ed68:	8b 74 24 10          	mov    0x10(%rsp),%esi
    ed6c:	c1 c2 05             	rol    $0x5,%edx
    ed6f:	d1 c7                	rol    %edi
    ed71:	33 4c 24 14          	xor    0x14(%rsp),%ecx
    ed75:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
    ed7a:	41 01 d3             	add    %edx,%r11d
    ed7d:	44 89 e2             	mov    %r12d,%edx
    ed80:	44 31 c1             	xor    %r8d,%ecx
    ed83:	89 7c 24 64          	mov    %edi,0x64(%rsp)
    ed87:	31 da                	xor    %ebx,%edx
    ed89:	d1 c1                	rol    %ecx
    ed8b:	89 d5                	mov    %edx,%ebp
    ed8d:	41 8d 94 3d d6 c1 62 	lea    -0x359d3e2a(%r13,%rdi,1),%edx
    ed94:	ca 
    ed95:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
    ed9a:	89 4c 24 6c          	mov    %ecx,0x6c(%rsp)
    ed9e:	44 31 d5             	xor    %r10d,%ebp
    eda1:	41 c1 ca 02          	ror    $0x2,%r10d
    eda5:	45 31 ef             	xor    %r13d,%r15d
    eda8:	01 d5                	add    %edx,%ebp
    edaa:	44 89 da             	mov    %r11d,%edx
    edad:	44 31 fe             	xor    %r15d,%esi
    edb0:	41 89 df             	mov    %ebx,%r15d
    edb3:	c1 c2 05             	rol    $0x5,%edx
    edb6:	44 31 ce             	xor    %r9d,%esi
    edb9:	45 31 d7             	xor    %r10d,%r15d
    edbc:	01 d5                	add    %edx,%ebp
    edbe:	d1 c6                	rol    %esi
    edc0:	45 31 df             	xor    %r11d,%r15d
    edc3:	41 c1 cb 02          	ror    $0x2,%r11d
    edc7:	41 8d 94 34 d6 c1 62 	lea    -0x359d3e2a(%r12,%rsi,1),%edx
    edce:	ca 
    edcf:	45 89 f4             	mov    %r14d,%r12d
    edd2:	45 89 d6             	mov    %r10d,%r14d
    edd5:	89 74 24 68          	mov    %esi,0x68(%rsp)
    edd9:	41 01 d7             	add    %edx,%r15d
    eddc:	89 ea                	mov    %ebp,%edx
    edde:	45 31 de             	xor    %r11d,%r14d
    ede1:	c1 c2 05             	rol    $0x5,%edx
    ede4:	41 31 ee             	xor    %ebp,%r14d
    ede7:	41 01 d7             	add    %edx,%r15d
    edea:	8d 94 0b d6 c1 62 ca 	lea    -0x359d3e2a(%rbx,%rcx,1),%edx
    edf1:	8b 5c 24 24          	mov    0x24(%rsp),%ebx
    edf5:	41 01 d6             	add    %edx,%r14d
    edf8:	44 89 fa             	mov    %r15d,%edx
    edfb:	c1 cd 02             	ror    $0x2,%ebp
    edfe:	44 33 64 24 04       	xor    0x4(%rsp),%r12d
    ee03:	c1 c2 05             	rol    $0x5,%edx
    ee06:	44 31 e3             	xor    %r12d,%ebx
    ee09:	44 8b 24 24          	mov    (%rsp),%r12d
    ee0d:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
    ee12:	41 01 d6             	add    %edx,%r14d
    ee15:	8b 14 24             	mov    (%rsp),%edx
    ee18:	31 f3                	xor    %esi,%ebx
    ee1a:	d1 c3                	rol    %ebx
    ee1c:	44 31 ea             	xor    %r13d,%edx
    ee1f:	33 54 24 18          	xor    0x18(%rsp),%edx
    ee23:	45 89 dd             	mov    %r11d,%r13d
    ee26:	89 5c 24 74          	mov    %ebx,0x74(%rsp)
    ee2a:	31 fa                	xor    %edi,%edx
    ee2c:	41 31 ed             	xor    %ebp,%r13d
    ee2f:	45 8d 9c 1b d6 c1 62 	lea    -0x359d3e2a(%r11,%rbx,1),%r11d
    ee36:	ca 
    ee37:	d1 c2                	rol    %edx
    ee39:	45 31 fd             	xor    %r15d,%r13d
    ee3c:	41 c1 cf 02          	ror    $0x2,%r15d
    ee40:	45 8d 94 12 d6 c1 62 	lea    -0x359d3e2a(%r10,%rdx,1),%r10d
    ee47:	ca 
    ee48:	89 54 24 70          	mov    %edx,0x70(%rsp)
    ee4c:	45 01 d5             	add    %r10d,%r13d
    ee4f:	45 89 f2             	mov    %r14d,%r10d
    ee52:	41 c1 c2 05          	rol    $0x5,%r10d
    ee56:	45 01 d5             	add    %r10d,%r13d
    ee59:	41 89 ea             	mov    %ebp,%r10d
    ee5c:	45 31 fa             	xor    %r15d,%r10d
    ee5f:	45 31 f2             	xor    %r14d,%r10d
    ee62:	41 c1 ce 02          	ror    $0x2,%r14d
    ee66:	45 01 da             	add    %r11d,%r10d
    ee69:	45 89 eb             	mov    %r13d,%r11d
    ee6c:	41 c1 c3 05          	rol    $0x5,%r11d
    ee70:	45 01 da             	add    %r11d,%r10d
    ee73:	45 89 e3             	mov    %r12d,%r11d
    ee76:	45 89 fc             	mov    %r15d,%r12d
    ee79:	41 31 c3             	xor    %eax,%r11d
    ee7c:	45 31 f4             	xor    %r14d,%r12d
    ee7f:	41 31 cb             	xor    %ecx,%r11d
    ee82:	45 31 ec             	xor    %r13d,%r12d
    ee85:	41 d1 c3             	rol    %r11d
    ee88:	42 8d ac 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%ebp
    ee8f:	ca 
    ee90:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
    ee95:	41 01 ec             	add    %ebp,%r12d
    ee98:	44 89 d5             	mov    %r10d,%ebp
    ee9b:	c1 c5 05             	rol    $0x5,%ebp
    ee9e:	41 01 ec             	add    %ebp,%r12d
    eea1:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
    eea5:	33 6c 24 0c          	xor    0xc(%rsp),%ebp
    eea9:	41 c1 cd 02          	ror    $0x2,%r13d
    eead:	41 31 e9             	xor    %ebp,%r9d
    eeb0:	44 89 f5             	mov    %r14d,%ebp
    eeb3:	41 31 d1             	xor    %edx,%r9d
    eeb6:	44 31 ed             	xor    %r13d,%ebp
    eeb9:	41 d1 c1             	rol    %r9d
    eebc:	44 31 d5             	xor    %r10d,%ebp
    eebf:	47 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%r15d
    eec6:	ca 
    eec7:	44 89 4c 24 7c       	mov    %r9d,0x7c(%rsp)
    eecc:	44 01 fd             	add    %r15d,%ebp
    eecf:	45 89 e7             	mov    %r12d,%r15d
    eed2:	41 c1 c7 05          	rol    $0x5,%r15d
    eed6:	44 01 fd             	add    %r15d,%ebp
    eed9:	45 89 d7             	mov    %r10d,%r15d
    eedc:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
    eee1:	44 33 54 24 10       	xor    0x10(%rsp),%r10d
    eee6:	45 31 d0             	xor    %r10d,%r8d
    eee9:	41 c1 cf 02          	ror    $0x2,%r15d
    eeed:	44 31 c3             	xor    %r8d,%ebx
    eef0:	45 89 e8             	mov    %r13d,%r8d
    eef3:	d1 c3                	rol    %ebx
    eef5:	45 31 f8             	xor    %r15d,%r8d
    eef8:	45 31 e0             	xor    %r12d,%r8d
    eefb:	45 8d b4 1e d6 c1 62 	lea    -0x359d3e2a(%r14,%rbx,1),%r14d
    ef02:	ca 
    ef03:	41 c1 cc 02          	ror    $0x2,%r12d
    ef07:	89 9c 24 80 00 00 00 	mov    %ebx,0x80(%rsp)
    ef0e:	45 01 f0             	add    %r14d,%r8d
    ef11:	41 89 ee             	mov    %ebp,%r14d
    ef14:	41 c1 c6 05          	rol    $0x5,%r14d
    ef18:	45 01 c6             	add    %r8d,%r14d
    ef1b:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    ef20:	44 33 44 24 14       	xor    0x14(%rsp),%r8d
    ef25:	44 31 c7             	xor    %r8d,%edi
    ef28:	45 89 f0             	mov    %r14d,%r8d
    ef2b:	41 31 fb             	xor    %edi,%r11d
    ef2e:	44 89 ff             	mov    %r15d,%edi
    ef31:	41 c1 c0 05          	rol    $0x5,%r8d
    ef35:	41 d1 c3             	rol    %r11d
    ef38:	44 31 e7             	xor    %r12d,%edi
    ef3b:	47 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%r13,%r11,1),%r10d
    ef42:	ca 
    ef43:	31 ef                	xor    %ebp,%edi
    ef45:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
    ef4a:	c1 cd 02             	ror    $0x2,%ebp
    ef4d:	44 01 d7             	add    %r10d,%edi
    ef50:	45 89 c2             	mov    %r8d,%r10d
    ef53:	44 89 9c 24 84 00 00 	mov    %r11d,0x84(%rsp)
    ef5a:	00 
    ef5b:	41 01 fa             	add    %edi,%r10d
    ef5e:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    ef62:	44 31 ef             	xor    %r13d,%edi
    ef65:	44 31 e8             	xor    %r13d,%eax
    ef68:	31 fe                	xor    %edi,%esi
    ef6a:	31 c2                	xor    %eax,%edx
    ef6c:	41 31 f1             	xor    %esi,%r9d
    ef6f:	44 89 e6             	mov    %r12d,%esi
    ef72:	41 31 d3             	xor    %edx,%r11d
    ef75:	31 ee                	xor    %ebp,%esi
    ef77:	41 d1 c1             	rol    %r9d
    ef7a:	44 31 f6             	xor    %r14d,%esi
    ef7d:	41 c1 ce 02          	ror    $0x2,%r14d
    ef81:	44 89 8c 24 88 00 00 	mov    %r9d,0x88(%rsp)
    ef88:	00 
    ef89:	43 8d bc 0f d6 c1 62 	lea    -0x359d3e2a(%r15,%r9,1),%edi
    ef90:	ca 
    ef91:	44 89 b4 24 a4 00 00 	mov    %r14d,0xa4(%rsp)
    ef98:	00 
    ef99:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    ef9e:	01 fe                	add    %edi,%esi
    efa0:	44 89 d7             	mov    %r10d,%edi
    efa3:	44 33 44 24 24       	xor    0x24(%rsp),%r8d
    efa8:	c1 c7 05             	rol    $0x5,%edi
    efab:	44 89 f0             	mov    %r14d,%eax
    efae:	44 89 5c 24 50       	mov    %r11d,0x50(%rsp)
    efb3:	44 31 c1             	xor    %r8d,%ecx
    efb6:	01 fe                	add    %edi,%esi
    efb8:	41 d1 c3             	rol    %r11d
    efbb:	31 cb                	xor    %ecx,%ebx
    efbd:	89 e9                	mov    %ebp,%ecx
    efbf:	42 8d 94 1d d6 c1 62 	lea    -0x359d3e2a(%rbp,%r11,1),%edx
    efc6:	ca 
    efc7:	44 89 9c 24 90 00 00 	mov    %r11d,0x90(%rsp)
    efce:	00 
    efcf:	d1 c3                	rol    %ebx
    efd1:	44 31 f1             	xor    %r14d,%ecx
    efd4:	44 31 d1             	xor    %r10d,%ecx
    efd7:	41 8d bc 1c d6 c1 62 	lea    -0x359d3e2a(%r12,%rbx,1),%edi
    efde:	ca 
    efdf:	41 c1 ca 02          	ror    $0x2,%r10d
    efe3:	89 9c 24 8c 00 00 00 	mov    %ebx,0x8c(%rsp)
    efea:	01 f9                	add    %edi,%ecx
    efec:	89 f7                	mov    %esi,%edi
    efee:	44 31 d0             	xor    %r10d,%eax
    eff1:	44 89 94 24 a0 00 00 	mov    %r10d,0xa0(%rsp)
    eff8:	00 
    eff9:	c1 c7 05             	rol    $0x5,%edi
    effc:	31 f0                	xor    %esi,%eax
    effe:	c1 ce 02             	ror    $0x2,%esi
    f001:	01 f9                	add    %edi,%ecx
    f003:	01 d0                	add    %edx,%eax
    f005:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    f00a:	89 b4 24 9c 00 00 00 	mov    %esi,0x9c(%rsp)
    f011:	89 ca                	mov    %ecx,%edx
    f013:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%rsp)
    f01a:	03 4c 24 44          	add    0x44(%rsp),%ecx
    f01e:	c1 c2 05             	rol    $0x5,%edx
    f021:	89 4f 0c             	mov    %ecx,0xc(%rdi)
    f024:	01 d0                	add    %edx,%eax
    f026:	89 84 24 94 00 00 00 	mov    %eax,0x94(%rsp)
    f02d:	03 44 24 40          	add    0x40(%rsp),%eax
    f031:	03 74 24 48          	add    0x48(%rsp),%esi
    f035:	44 03 54 24 4c       	add    0x4c(%rsp),%r10d
    f03a:	89 47 08             	mov    %eax,0x8(%rdi)
    f03d:	44 03 74 24 38       	add    0x38(%rsp),%r14d
    f042:	89 77 10             	mov    %esi,0x10(%rdi)
    f045:	be 58 00 00 00       	mov    $0x58,%esi
    f04a:	44 89 57 14          	mov    %r10d,0x14(%rdi)
    f04e:	44 89 77 18          	mov    %r14d,0x18(%rdi)
    f052:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    f057:	e8 c4 61 ff ff       	callq  5220 <mbedtls_platform_zeroize>
    f05c:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    f063:	00 
    f064:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f06b:	00 00 
    f06d:	75 14                	jne    f083 <mbedtls_internal_sha1_process+0x1273>
    f06f:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    f076:	31 c0                	xor    %eax,%eax
    f078:	5b                   	pop    %rbx
    f079:	5d                   	pop    %rbp
    f07a:	41 5c                	pop    %r12
    f07c:	41 5d                	pop    %r13
    f07e:	41 5e                	pop    %r14
    f080:	41 5f                	pop    %r15
    f082:	c3                   	retq   
    f083:	e8 d8 41 ff ff       	callq  3260 <__stack_chk_fail@plt>
    f088:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f08f:	00 

000000000000f090 <mbedtls_sha1_update.part.0>:
    f090:	41 56                	push   %r14
    f092:	41 55                	push   %r13
    f094:	41 54                	push   %r12
    f096:	49 89 fc             	mov    %rdi,%r12
    f099:	55                   	push   %rbp
    f09a:	48 89 f5             	mov    %rsi,%rbp
    f09d:	53                   	push   %rbx
    f09e:	8b 07                	mov    (%rdi),%eax
    f0a0:	48 89 d3             	mov    %rdx,%rbx
    f0a3:	ba 40 00 00 00       	mov    $0x40,%edx
    f0a8:	41 89 c5             	mov    %eax,%r13d
    f0ab:	41 83 e5 3f          	and    $0x3f,%r13d
    f0af:	44 29 ea             	sub    %r13d,%edx
    f0b2:	01 d8                	add    %ebx,%eax
    f0b4:	89 07                	mov    %eax,(%rdi)
    f0b6:	41 89 d6             	mov    %edx,%r14d
    f0b9:	73 04                	jae    f0bf <mbedtls_sha1_update.part.0+0x2f>
    f0bb:	83 47 04 01          	addl   $0x1,0x4(%rdi)
    f0bf:	45 85 ed             	test   %r13d,%r13d
    f0c2:	74 05                	je     f0c9 <mbedtls_sha1_update.part.0+0x39>
    f0c4:	49 39 de             	cmp    %rbx,%r14
    f0c7:	76 37                	jbe    f100 <mbedtls_sha1_update.part.0+0x70>
    f0c9:	48 83 fb 3f          	cmp    $0x3f,%rbx
    f0cd:	77 17                	ja     f0e6 <mbedtls_sha1_update.part.0+0x56>
    f0cf:	eb 7f                	jmp    f150 <mbedtls_sha1_update.part.0+0xc0>
    f0d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f0d8:	48 83 eb 40          	sub    $0x40,%rbx
    f0dc:	48 83 c5 40          	add    $0x40,%rbp
    f0e0:	48 83 fb 3f          	cmp    $0x3f,%rbx
    f0e4:	76 6a                	jbe    f150 <mbedtls_sha1_update.part.0+0xc0>
    f0e6:	48 89 ee             	mov    %rbp,%rsi
    f0e9:	4c 89 e7             	mov    %r12,%rdi
    f0ec:	e8 1f ed ff ff       	callq  de10 <mbedtls_internal_sha1_process>
    f0f1:	85 c0                	test   %eax,%eax
    f0f3:	74 e3                	je     f0d8 <mbedtls_sha1_update.part.0+0x48>
    f0f5:	5b                   	pop    %rbx
    f0f6:	5d                   	pop    %rbp
    f0f7:	41 5c                	pop    %r12
    f0f9:	41 5d                	pop    %r13
    f0fb:	41 5e                	pop    %r14
    f0fd:	c3                   	retq   
    f0fe:	66 90                	xchg   %ax,%ax
    f100:	4d 8d 44 24 1c       	lea    0x1c(%r12),%r8
    f105:	4d 01 c5             	add    %r8,%r13
    f108:	83 fa 08             	cmp    $0x8,%edx
    f10b:	0f 83 87 00 00 00    	jae    f198 <mbedtls_sha1_update.part.0+0x108>
    f111:	f6 c2 04             	test   $0x4,%dl
    f114:	0f 85 19 01 00 00    	jne    f233 <mbedtls_sha1_update.part.0+0x1a3>
    f11a:	85 d2                	test   %edx,%edx
    f11c:	74 11                	je     f12f <mbedtls_sha1_update.part.0+0x9f>
    f11e:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    f122:	83 e2 02             	and    $0x2,%edx
    f125:	41 88 45 00          	mov    %al,0x0(%r13)
    f129:	0f 85 30 01 00 00    	jne    f25f <mbedtls_sha1_update.part.0+0x1cf>
    f12f:	4c 89 c6             	mov    %r8,%rsi
    f132:	4c 89 e7             	mov    %r12,%rdi
    f135:	e8 d6 ec ff ff       	callq  de10 <mbedtls_internal_sha1_process>
    f13a:	85 c0                	test   %eax,%eax
    f13c:	75 b7                	jne    f0f5 <mbedtls_sha1_update.part.0+0x65>
    f13e:	4c 01 f5             	add    %r14,%rbp
    f141:	4c 29 f3             	sub    %r14,%rbx
    f144:	45 31 ed             	xor    %r13d,%r13d
    f147:	eb 80                	jmp    f0c9 <mbedtls_sha1_update.part.0+0x39>
    f149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f150:	31 c0                	xor    %eax,%eax
    f152:	48 85 db             	test   %rbx,%rbx
    f155:	74 9e                	je     f0f5 <mbedtls_sha1_update.part.0+0x65>
    f157:	4b 8d 4c 2c 1c       	lea    0x1c(%r12,%r13,1),%rcx
    f15c:	89 d8                	mov    %ebx,%eax
    f15e:	83 fb 08             	cmp    $0x8,%ebx
    f161:	0f 83 7e 00 00 00    	jae    f1e5 <mbedtls_sha1_update.part.0+0x155>
    f167:	83 e3 04             	and    $0x4,%ebx
    f16a:	0f 85 d9 00 00 00    	jne    f249 <mbedtls_sha1_update.part.0+0x1b9>
    f170:	85 c0                	test   %eax,%eax
    f172:	74 16                	je     f18a <mbedtls_sha1_update.part.0+0xfa>
    f174:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
    f178:	88 11                	mov    %dl,(%rcx)
    f17a:	a8 02                	test   $0x2,%al
    f17c:	74 0c                	je     f18a <mbedtls_sha1_update.part.0+0xfa>
    f17e:	89 c2                	mov    %eax,%edx
    f180:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
    f185:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
    f18a:	31 c0                	xor    %eax,%eax
    f18c:	5b                   	pop    %rbx
    f18d:	5d                   	pop    %rbp
    f18e:	41 5c                	pop    %r12
    f190:	41 5d                	pop    %r13
    f192:	41 5e                	pop    %r14
    f194:	c3                   	retq   
    f195:	0f 1f 00             	nopl   (%rax)
    f198:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f19c:	49 8d 75 08          	lea    0x8(%r13),%rsi
    f1a0:	49 89 e9             	mov    %rbp,%r9
    f1a3:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    f1a7:	49 89 45 00          	mov    %rax,0x0(%r13)
    f1ab:	4a 8b 44 35 f8       	mov    -0x8(%rbp,%r14,1),%rax
    f1b0:	4b 89 44 35 f8       	mov    %rax,-0x8(%r13,%r14,1)
    f1b5:	49 29 f5             	sub    %rsi,%r13
    f1b8:	44 01 ea             	add    %r13d,%edx
    f1bb:	4d 29 e9             	sub    %r13,%r9
    f1be:	83 e2 f8             	and    $0xfffffff8,%edx
    f1c1:	83 fa 08             	cmp    $0x8,%edx
    f1c4:	0f 82 65 ff ff ff    	jb     f12f <mbedtls_sha1_update.part.0+0x9f>
    f1ca:	83 e2 f8             	and    $0xfffffff8,%edx
    f1cd:	31 c0                	xor    %eax,%eax
    f1cf:	89 c1                	mov    %eax,%ecx
    f1d1:	83 c0 08             	add    $0x8,%eax
    f1d4:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
    f1d8:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    f1dc:	39 d0                	cmp    %edx,%eax
    f1de:	72 ef                	jb     f1cf <mbedtls_sha1_update.part.0+0x13f>
    f1e0:	e9 4a ff ff ff       	jmpq   f12f <mbedtls_sha1_update.part.0+0x9f>
    f1e5:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f1e9:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    f1ed:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    f1f1:	48 89 01             	mov    %rax,(%rcx)
    f1f4:	89 d8                	mov    %ebx,%eax
    f1f6:	48 8b 54 05 f8       	mov    -0x8(%rbp,%rax,1),%rdx
    f1fb:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
    f200:	48 29 f1             	sub    %rsi,%rcx
    f203:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
    f206:	48 29 cd             	sub    %rcx,%rbp
    f209:	83 e0 f8             	and    $0xfffffff8,%eax
    f20c:	83 f8 08             	cmp    $0x8,%eax
    f20f:	0f 82 75 ff ff ff    	jb     f18a <mbedtls_sha1_update.part.0+0xfa>
    f215:	83 e0 f8             	and    $0xfffffff8,%eax
    f218:	31 d2                	xor    %edx,%edx
    f21a:	89 d1                	mov    %edx,%ecx
    f21c:	83 c2 08             	add    $0x8,%edx
    f21f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
    f224:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
    f228:	39 c2                	cmp    %eax,%edx
    f22a:	72 ee                	jb     f21a <mbedtls_sha1_update.part.0+0x18a>
    f22c:	31 c0                	xor    %eax,%eax
    f22e:	e9 59 ff ff ff       	jmpq   f18c <mbedtls_sha1_update.part.0+0xfc>
    f233:	8b 45 00             	mov    0x0(%rbp),%eax
    f236:	41 89 45 00          	mov    %eax,0x0(%r13)
    f23a:	42 8b 44 35 fc       	mov    -0x4(%rbp,%r14,1),%eax
    f23f:	43 89 44 35 fc       	mov    %eax,-0x4(%r13,%r14,1)
    f244:	e9 e6 fe ff ff       	jmpq   f12f <mbedtls_sha1_update.part.0+0x9f>
    f249:	8b 55 00             	mov    0x0(%rbp),%edx
    f24c:	89 11                	mov    %edx,(%rcx)
    f24e:	89 c2                	mov    %eax,%edx
    f250:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
    f254:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
    f258:	31 c0                	xor    %eax,%eax
    f25a:	e9 2d ff ff ff       	jmpq   f18c <mbedtls_sha1_update.part.0+0xfc>
    f25f:	42 0f b7 44 35 fe    	movzwl -0x2(%rbp,%r14,1),%eax
    f265:	66 43 89 44 35 fe    	mov    %ax,-0x2(%r13,%r14,1)
    f26b:	e9 bf fe ff ff       	jmpq   f12f <mbedtls_sha1_update.part.0+0x9f>

000000000000f270 <mbedtls_sha1_update>:
    f270:	f3 0f 1e fa          	endbr64 
    f274:	48 85 d2             	test   %rdx,%rdx
    f277:	74 07                	je     f280 <mbedtls_sha1_update+0x10>
    f279:	e9 12 fe ff ff       	jmpq   f090 <mbedtls_sha1_update.part.0>
    f27e:	66 90                	xchg   %ax,%ax
    f280:	31 c0                	xor    %eax,%eax
    f282:	c3                   	retq   
    f283:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f28a:	00 00 00 00 
    f28e:	66 90                	xchg   %ax,%ax

000000000000f290 <mbedtls_sha1_finish>:
    f290:	f3 0f 1e fa          	endbr64 
    f294:	41 54                	push   %r12
    f296:	4c 8d 67 1c          	lea    0x1c(%rdi),%r12
    f29a:	55                   	push   %rbp
    f29b:	48 89 f5             	mov    %rsi,%rbp
    f29e:	53                   	push   %rbx
    f29f:	8b 07                	mov    (%rdi),%eax
    f2a1:	48 89 fb             	mov    %rdi,%rbx
    f2a4:	83 e0 3f             	and    $0x3f,%eax
    f2a7:	8d 48 01             	lea    0x1(%rax),%ecx
    f2aa:	c6 44 07 1c 80       	movb   $0x80,0x1c(%rdi,%rax,1)
    f2af:	89 c8                	mov    %ecx,%eax
    f2b1:	4c 01 e0             	add    %r12,%rax
    f2b4:	83 f9 38             	cmp    $0x38,%ecx
    f2b7:	77 57                	ja     f310 <mbedtls_sha1_finish+0x80>
    f2b9:	ba 38 00 00 00       	mov    $0x38,%edx
    f2be:	31 ff                	xor    %edi,%edi
    f2c0:	29 ca                	sub    %ecx,%edx
    f2c2:	83 fa 08             	cmp    $0x8,%edx
    f2c5:	72 79                	jb     f340 <mbedtls_sha1_finish+0xb0>
    f2c7:	89 d1                	mov    %edx,%ecx
    f2c9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f2d0:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
    f2d7:	00 00 
    f2d9:	48 8d 48 08          	lea    0x8(%rax),%rcx
    f2dd:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    f2e1:	48 29 c8             	sub    %rcx,%rax
    f2e4:	01 c2                	add    %eax,%edx
    f2e6:	83 e2 f8             	and    $0xfffffff8,%edx
    f2e9:	83 fa 08             	cmp    $0x8,%edx
    f2ec:	0f 82 8b 00 00 00    	jb     f37d <mbedtls_sha1_finish+0xed>
    f2f2:	83 e2 f8             	and    $0xfffffff8,%edx
    f2f5:	31 c0                	xor    %eax,%eax
    f2f7:	89 c6                	mov    %eax,%esi
    f2f9:	83 c0 08             	add    $0x8,%eax
    f2fc:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
    f300:	39 d0                	cmp    %edx,%eax
    f302:	72 f3                	jb     f2f7 <mbedtls_sha1_finish+0x67>
    f304:	eb 77                	jmp    f37d <mbedtls_sha1_finish+0xed>
    f306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f30d:	00 00 00 
    f310:	ba 40 00 00 00       	mov    $0x40,%edx
    f315:	29 ca                	sub    %ecx,%edx
    f317:	89 d1                	mov    %edx,%ecx
    f319:	74 0f                	je     f32a <mbedtls_sha1_finish+0x9a>
    f31b:	31 d2                	xor    %edx,%edx
    f31d:	89 d6                	mov    %edx,%esi
    f31f:	83 c2 01             	add    $0x1,%edx
    f322:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
    f326:	39 ca                	cmp    %ecx,%edx
    f328:	72 f3                	jb     f31d <mbedtls_sha1_finish+0x8d>
    f32a:	4c 89 e6             	mov    %r12,%rsi
    f32d:	48 89 df             	mov    %rbx,%rdi
    f330:	e8 db ea ff ff       	callq  de10 <mbedtls_internal_sha1_process>
    f335:	85 c0                	test   %eax,%eax
    f337:	74 27                	je     f360 <mbedtls_sha1_finish+0xd0>
    f339:	5b                   	pop    %rbx
    f33a:	5d                   	pop    %rbp
    f33b:	41 5c                	pop    %r12
    f33d:	c3                   	retq   
    f33e:	66 90                	xchg   %ax,%ax
    f340:	f6 c2 04             	test   $0x4,%dl
    f343:	0f 85 8f 00 00 00    	jne    f3d8 <mbedtls_sha1_finish+0x148>
    f349:	85 d2                	test   %edx,%edx
    f34b:	74 30                	je     f37d <mbedtls_sha1_finish+0xed>
    f34d:	c6 00 00             	movb   $0x0,(%rax)
    f350:	f6 c2 02             	test   $0x2,%dl
    f353:	74 28                	je     f37d <mbedtls_sha1_finish+0xed>
    f355:	31 c9                	xor    %ecx,%ecx
    f357:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
    f35c:	eb 1f                	jmp    f37d <mbedtls_sha1_finish+0xed>
    f35e:	66 90                	xchg   %ax,%ax
    f360:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f364:	0f 11 43 1c          	movups %xmm0,0x1c(%rbx)
    f368:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
    f36f:	00 00 
    f371:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
    f377:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
    f37d:	8b 13                	mov    (%rbx),%edx
    f37f:	8b 43 04             	mov    0x4(%rbx),%eax
    f382:	4c 89 e6             	mov    %r12,%rsi
    f385:	48 89 df             	mov    %rbx,%rdi
    f388:	89 d1                	mov    %edx,%ecx
    f38a:	c1 e0 03             	shl    $0x3,%eax
    f38d:	c1 e9 1d             	shr    $0x1d,%ecx
    f390:	c1 e2 03             	shl    $0x3,%edx
    f393:	09 c8                	or     %ecx,%eax
    f395:	0f ca                	bswap  %edx
    f397:	89 53 58             	mov    %edx,0x58(%rbx)
    f39a:	0f c8                	bswap  %eax
    f39c:	89 43 54             	mov    %eax,0x54(%rbx)
    f39f:	e8 6c ea ff ff       	callq  de10 <mbedtls_internal_sha1_process>
    f3a4:	85 c0                	test   %eax,%eax
    f3a6:	75 91                	jne    f339 <mbedtls_sha1_finish+0xa9>
    f3a8:	8b 53 08             	mov    0x8(%rbx),%edx
    f3ab:	0f ca                	bswap  %edx
    f3ad:	89 55 00             	mov    %edx,0x0(%rbp)
    f3b0:	8b 53 0c             	mov    0xc(%rbx),%edx
    f3b3:	0f ca                	bswap  %edx
    f3b5:	89 55 04             	mov    %edx,0x4(%rbp)
    f3b8:	8b 53 10             	mov    0x10(%rbx),%edx
    f3bb:	0f ca                	bswap  %edx
    f3bd:	89 55 08             	mov    %edx,0x8(%rbp)
    f3c0:	8b 53 14             	mov    0x14(%rbx),%edx
    f3c3:	0f ca                	bswap  %edx
    f3c5:	89 55 0c             	mov    %edx,0xc(%rbp)
    f3c8:	8b 53 18             	mov    0x18(%rbx),%edx
    f3cb:	5b                   	pop    %rbx
    f3cc:	0f ca                	bswap  %edx
    f3ce:	89 55 10             	mov    %edx,0x10(%rbp)
    f3d1:	5d                   	pop    %rbp
    f3d2:	41 5c                	pop    %r12
    f3d4:	c3                   	retq   
    f3d5:	0f 1f 00             	nopl   (%rax)
    f3d8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    f3de:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
    f3e5:	00 
    f3e6:	eb 95                	jmp    f37d <mbedtls_sha1_finish+0xed>
    f3e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f3ef:	00 

000000000000f3f0 <mbedtls_sha1>:
    f3f0:	f3 0f 1e fa          	endbr64 
    f3f4:	41 55                	push   %r13
    f3f6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f3fa:	41 54                	push   %r12
    f3fc:	55                   	push   %rbp
    f3fd:	48 89 d5             	mov    %rdx,%rbp
    f400:	48 83 ec 70          	sub    $0x70,%rsp
    f404:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f40b:	00 00 
    f40d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    f412:	31 c0                	xor    %eax,%eax
    f414:	49 89 e5             	mov    %rsp,%r13
    f417:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    f41c:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    f423:	ab cd ef 
    f426:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f42b:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    f432:	54 32 10 
    f435:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
    f43c:	00 
    f43d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    f444:	00 
    f445:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    f44a:	c7 44 24 18 f0 e1 d2 	movl   $0xc3d2e1f0,0x18(%rsp)
    f451:	c3 
    f452:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    f457:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
    f45c:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    f461:	48 85 f6             	test   %rsi,%rsi
    f464:	74 15                	je     f47b <mbedtls_sha1+0x8b>
    f466:	48 89 f2             	mov    %rsi,%rdx
    f469:	48 89 fe             	mov    %rdi,%rsi
    f46c:	4c 89 ef             	mov    %r13,%rdi
    f46f:	e8 1c fc ff ff       	callq  f090 <mbedtls_sha1_update.part.0>
    f474:	41 89 c4             	mov    %eax,%r12d
    f477:	85 c0                	test   %eax,%eax
    f479:	75 0e                	jne    f489 <mbedtls_sha1+0x99>
    f47b:	48 89 ee             	mov    %rbp,%rsi
    f47e:	4c 89 ef             	mov    %r13,%rdi
    f481:	e8 0a fe ff ff       	callq  f290 <mbedtls_sha1_finish>
    f486:	41 89 c4             	mov    %eax,%r12d
    f489:	be 5c 00 00 00       	mov    $0x5c,%esi
    f48e:	4c 89 ef             	mov    %r13,%rdi
    f491:	e8 8a 5d ff ff       	callq  5220 <mbedtls_platform_zeroize>
    f496:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    f49b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f4a2:	00 00 
    f4a4:	75 0d                	jne    f4b3 <mbedtls_sha1+0xc3>
    f4a6:	48 83 c4 70          	add    $0x70,%rsp
    f4aa:	44 89 e0             	mov    %r12d,%eax
    f4ad:	5d                   	pop    %rbp
    f4ae:	41 5c                	pop    %r12
    f4b0:	41 5d                	pop    %r13
    f4b2:	c3                   	retq   
    f4b3:	e8 a8 3d ff ff       	callq  3260 <__stack_chk_fail@plt>
    f4b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f4bf:	00 

000000000000f4c0 <mbedtls_sha1_self_test>:
    f4c0:	f3 0f 1e fa          	endbr64 
    f4c4:	41 57                	push   %r15
    f4c6:	b9 0b 00 00 00       	mov    $0xb,%ecx
    f4cb:	41 56                	push   %r14
    f4cd:	4c 8d 35 2c 45 01 00 	lea    0x1452c(%rip),%r14        # 23a00 <sha1_test_buf>
    f4d4:	41 55                	push   %r13
    f4d6:	41 89 fd             	mov    %edi,%r13d
    f4d9:	41 54                	push   %r12
    f4db:	55                   	push   %rbp
    f4dc:	48 8d 2d bd 44 01 00 	lea    0x144bd(%rip),%rbp        # 239a0 <sha1_test_sum>
    f4e3:	53                   	push   %rbx
    f4e4:	31 db                	xor    %ebx,%ebx
    f4e6:	48 81 ec a8 04 00 00 	sub    $0x4a8,%rsp
    f4ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f4f4:	00 00 
    f4f6:	48 89 84 24 98 04 00 	mov    %rax,0x498(%rsp)
    f4fd:	00 
    f4fe:	31 c0                	xor    %eax,%eax
    f500:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    f505:	4c 89 e7             	mov    %r12,%rdi
    f508:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    f50b:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    f511:	45 85 ed             	test   %r13d,%r13d
    f514:	0f 85 a6 00 00 00    	jne    f5c0 <mbedtls_sha1_self_test+0x100>
    f51a:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    f521:	ab cd ef 
    f524:	c7 44 24 28 f0 e1 d2 	movl   $0xc3d2e1f0,0x28(%rsp)
    f52b:	c3 
    f52c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f531:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    f538:	54 32 10 
    f53b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    f542:	00 00 
    f544:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    f549:	48 83 fb 02          	cmp    $0x2,%rbx
    f54d:	0f 84 2d 01 00 00    	je     f680 <mbedtls_sha1_self_test+0x1c0>
    f553:	48 8d 05 86 44 01 00 	lea    0x14486(%rip),%rax        # 239e0 <sha1_test_buflen>
    f55a:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
    f55e:	48 85 d2             	test   %rdx,%rdx
    f561:	74 11                	je     f574 <mbedtls_sha1_self_test+0xb4>
    f563:	4c 89 f6             	mov    %r14,%rsi
    f566:	4c 89 e7             	mov    %r12,%rdi
    f569:	e8 22 fb ff ff       	callq  f090 <mbedtls_sha1_update.part.0>
    f56e:	89 c2                	mov    %eax,%edx
    f570:	85 c0                	test   %eax,%eax
    f572:	75 3b                	jne    f5af <mbedtls_sha1_self_test+0xef>
    f574:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
    f579:	4c 89 e7             	mov    %r12,%rdi
    f57c:	4c 89 fe             	mov    %r15,%rsi
    f57f:	e8 0c fd ff ff       	callq  f290 <mbedtls_sha1_finish>
    f584:	89 c2                	mov    %eax,%edx
    f586:	85 c0                	test   %eax,%eax
    f588:	75 25                	jne    f5af <mbedtls_sha1_self_test+0xef>
    f58a:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    f58f:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    f594:	48 33 55 08          	xor    0x8(%rbp),%rdx
    f598:	48 33 45 00          	xor    0x0(%rbp),%rax
    f59c:	48 09 c2             	or     %rax,%rdx
    f59f:	75 09                	jne    f5aa <mbedtls_sha1_self_test+0xea>
    f5a1:	8b 45 10             	mov    0x10(%rbp),%eax
    f5a4:	41 39 47 10          	cmp    %eax,0x10(%r15)
    f5a8:	74 36                	je     f5e0 <mbedtls_sha1_self_test+0x120>
    f5aa:	ba 01 00 00 00       	mov    $0x1,%edx
    f5af:	45 85 ed             	test   %r13d,%r13d
    f5b2:	0f 85 a8 00 00 00    	jne    f660 <mbedtls_sha1_self_test+0x1a0>
    f5b8:	41 89 d5             	mov    %edx,%r13d
    f5bb:	eb 4f                	jmp    f60c <mbedtls_sha1_self_test+0x14c>
    f5bd:	0f 1f 00             	nopl   (%rax)
    f5c0:	8d 53 01             	lea    0x1(%rbx),%edx
    f5c3:	48 8d 35 b6 43 01 00 	lea    0x143b6(%rip),%rsi        # 23980 <ripemd160_padding+0x40>
    f5ca:	bf 01 00 00 00       	mov    $0x1,%edi
    f5cf:	31 c0                	xor    %eax,%eax
    f5d1:	e8 6a 3d ff ff       	callq  3340 <__printf_chk@plt>
    f5d6:	e9 3f ff ff ff       	jmpq   f51a <mbedtls_sha1_self_test+0x5a>
    f5db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f5e0:	45 85 ed             	test   %r13d,%r13d
    f5e3:	74 0c                	je     f5f1 <mbedtls_sha1_self_test+0x131>
    f5e5:	48 8d 3d f6 3b 01 00 	lea    0x13bf6(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
    f5ec:	e8 0f 3c ff ff       	callq  3200 <puts@plt>
    f5f1:	48 83 c3 01          	add    $0x1,%rbx
    f5f5:	48 83 c5 14          	add    $0x14,%rbp
    f5f9:	49 83 c6 39          	add    $0x39,%r14
    f5fd:	48 83 fb 03          	cmp    $0x3,%rbx
    f601:	0f 85 0a ff ff ff    	jne    f511 <mbedtls_sha1_self_test+0x51>
    f607:	45 85 ed             	test   %r13d,%r13d
    f60a:	75 3c                	jne    f648 <mbedtls_sha1_self_test+0x188>
    f60c:	be 5c 00 00 00       	mov    $0x5c,%esi
    f611:	4c 89 e7             	mov    %r12,%rdi
    f614:	e8 07 5c ff ff       	callq  5220 <mbedtls_platform_zeroize>
    f619:	48 8b 84 24 98 04 00 	mov    0x498(%rsp),%rax
    f620:	00 
    f621:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f628:	00 00 
    f62a:	0f 85 a6 00 00 00    	jne    f6d6 <mbedtls_sha1_self_test+0x216>
    f630:	48 81 c4 a8 04 00 00 	add    $0x4a8,%rsp
    f637:	44 89 e8             	mov    %r13d,%eax
    f63a:	5b                   	pop    %rbx
    f63b:	5d                   	pop    %rbp
    f63c:	41 5c                	pop    %r12
    f63e:	41 5d                	pop    %r13
    f640:	41 5e                	pop    %r14
    f642:	41 5f                	pop    %r15
    f644:	c3                   	retq   
    f645:	0f 1f 00             	nopl   (%rax)
    f648:	bf 0a 00 00 00       	mov    $0xa,%edi
    f64d:	45 31 ed             	xor    %r13d,%r13d
    f650:	e8 9b 3b ff ff       	callq  31f0 <putchar@plt>
    f655:	eb b5                	jmp    f60c <mbedtls_sha1_self_test+0x14c>
    f657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f65e:	00 00 
    f660:	48 8d 3d 56 44 01 00 	lea    0x14456(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
    f667:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    f66b:	e8 90 3b ff ff       	callq  3200 <puts@plt>
    f670:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    f674:	41 89 d5             	mov    %edx,%r13d
    f677:	eb 93                	jmp    f60c <mbedtls_sha1_self_test+0x14c>
    f679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f680:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
    f687:	00 
    f688:	b9 7d 00 00 00       	mov    $0x7d,%ecx
    f68d:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
    f694:	61 61 61 
    f697:	c7 44 24 0c e8 03 00 	movl   $0x3e8,0xc(%rsp)
    f69e:	00 
    f69f:	4c 89 ff             	mov    %r15,%rdi
    f6a2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    f6a5:	eb 14                	jmp    f6bb <mbedtls_sha1_self_test+0x1fb>
    f6a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f6ae:	00 00 
    f6b0:	83 6c 24 0c 01       	subl   $0x1,0xc(%rsp)
    f6b5:	0f 84 b9 fe ff ff    	je     f574 <mbedtls_sha1_self_test+0xb4>
    f6bb:	ba e8 03 00 00       	mov    $0x3e8,%edx
    f6c0:	4c 89 fe             	mov    %r15,%rsi
    f6c3:	4c 89 e7             	mov    %r12,%rdi
    f6c6:	e8 c5 f9 ff ff       	callq  f090 <mbedtls_sha1_update.part.0>
    f6cb:	89 c2                	mov    %eax,%edx
    f6cd:	85 c0                	test   %eax,%eax
    f6cf:	74 df                	je     f6b0 <mbedtls_sha1_self_test+0x1f0>
    f6d1:	e9 d9 fe ff ff       	jmpq   f5af <mbedtls_sha1_self_test+0xef>
    f6d6:	e8 85 3b ff ff       	callq  3260 <__stack_chk_fail@plt>
    f6db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000f6e0 <mbedtls_sha256_init>:
    f6e0:	f3 0f 1e fa          	endbr64 
    f6e4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    f6eb:	48 89 f9             	mov    %rdi,%rcx
    f6ee:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    f6f2:	31 c0                	xor    %eax,%eax
    f6f4:	48 c7 47 5c 00 00 00 	movq   $0x0,0x5c(%rdi)
    f6fb:	00 
    f6fc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    f700:	48 29 f9             	sub    %rdi,%rcx
    f703:	83 c1 6c             	add    $0x6c,%ecx
    f706:	c1 e9 03             	shr    $0x3,%ecx
    f709:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    f70c:	c3                   	retq   
    f70d:	0f 1f 00             	nopl   (%rax)

000000000000f710 <mbedtls_sha256_free>:
    f710:	f3 0f 1e fa          	endbr64 
    f714:	48 85 ff             	test   %rdi,%rdi
    f717:	74 0f                	je     f728 <mbedtls_sha256_free+0x18>
    f719:	be 6c 00 00 00       	mov    $0x6c,%esi
    f71e:	e9 fd 5a ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
    f723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f728:	c3                   	retq   
    f729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f730 <mbedtls_sha256_clone>:
    f730:	f3 0f 1e fa          	endbr64 
    f734:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    f738:	0f 11 07             	movups %xmm0,(%rdi)
    f73b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
    f740:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
    f744:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
    f749:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
    f74d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
    f752:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
    f756:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
    f75b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
    f75f:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
    f764:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
    f768:	48 8b 46 60          	mov    0x60(%rsi),%rax
    f76c:	48 89 47 60          	mov    %rax,0x60(%rdi)
    f770:	8b 46 68             	mov    0x68(%rsi),%eax
    f773:	89 47 68             	mov    %eax,0x68(%rdi)
    f776:	c3                   	retq   
    f777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f77e:	00 00 

000000000000f780 <mbedtls_sha256_starts>:
    f780:	f3 0f 1e fa          	endbr64 
    f784:	83 fe 01             	cmp    $0x1,%esi
    f787:	0f 87 93 00 00 00    	ja     f820 <mbedtls_sha256_starts+0xa0>
    f78d:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    f794:	85 f6                	test   %esi,%esi
    f796:	74 48                	je     f7e0 <mbedtls_sha256_starts+0x60>
    f798:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
    f79f:	d5 7c 36 
    f7a2:	89 77 68             	mov    %esi,0x68(%rdi)
    f7a5:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f7a9:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
    f7b0:	59 0e f7 
    f7b3:	48 89 47 10          	mov    %rax,0x10(%rdi)
    f7b7:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
    f7be:	15 58 68 
    f7c1:	48 89 47 18          	mov    %rax,0x18(%rdi)
    f7c5:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
    f7cc:	4f fa be 
    f7cf:	48 89 47 20          	mov    %rax,0x20(%rdi)
    f7d3:	31 c0                	xor    %eax,%eax
    f7d5:	c3                   	retq   
    f7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f7dd:	00 00 00 
    f7e0:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
    f7e7:	ae 67 bb 
    f7ea:	89 77 68             	mov    %esi,0x68(%rdi)
    f7ed:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f7f1:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
    f7f8:	f5 4f a5 
    f7fb:	48 89 47 10          	mov    %rax,0x10(%rdi)
    f7ff:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
    f806:	68 05 9b 
    f809:	48 89 47 18          	mov    %rax,0x18(%rdi)
    f80d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
    f814:	cd e0 5b 
    f817:	48 89 47 20          	mov    %rax,0x20(%rdi)
    f81b:	31 c0                	xor    %eax,%eax
    f81d:	c3                   	retq   
    f81e:	66 90                	xchg   %ax,%ax
    f820:	b8 8c ff ff ff       	mov    $0xffffff8c,%eax
    f825:	c3                   	retq   
    f826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f82d:	00 00 00 

000000000000f830 <mbedtls_internal_sha256_process>:
    f830:	f3 0f 1e fa          	endbr64 
    f834:	41 57                	push   %r15
    f836:	48 89 f9             	mov    %rdi,%rcx
    f839:	41 56                	push   %r14
    f83b:	41 55                	push   %r13
    f83d:	41 54                	push   %r12
    f83f:	55                   	push   %rbp
    f840:	53                   	push   %rbx
    f841:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
    f848:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
    f84d:	48 8d 9c 24 58 01 00 	lea    0x158(%rsp),%rbx
    f854:	00 
    f855:	48 89 df             	mov    %rbx,%rdi
    f858:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f85f:	00 00 
    f861:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
    f868:	00 
    f869:	31 c0                	xor    %eax,%eax
    f86b:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    f870:	8b 54 01 08          	mov    0x8(%rcx,%rax,1),%edx
    f874:	89 14 07             	mov    %edx,(%rdi,%rax,1)
    f877:	48 83 c0 04          	add    $0x4,%rax
    f87b:	48 83 f8 20          	cmp    $0x20,%rax
    f87f:	75 ef                	jne    f870 <mbedtls_internal_sha256_process+0x40>
    f881:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
    f886:	31 c0                	xor    %eax,%eax
    f888:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
    f88d:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    f892:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f898:	8b 14 06             	mov    (%rsi,%rax,1),%edx
    f89b:	0f ca                	bswap  %edx
    f89d:	89 14 01             	mov    %edx,(%rcx,%rax,1)
    f8a0:	48 83 c0 04          	add    $0x4,%rax
    f8a4:	48 83 f8 40          	cmp    $0x40,%rax
    f8a8:	75 ee                	jne    f898 <mbedtls_internal_sha256_process+0x68>
    f8aa:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    f8af:	48 8d 05 ca 43 01 00 	lea    0x143ca(%rip),%rax        # 23c80 <K>
    f8b6:	c7 44 24 1c d5 5e 1c 	movl   $0xab1c5ed5,0x1c(%rsp)
    f8bd:	ab 
    f8be:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
    f8c5:	00 
    f8c6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f8cb:	8b ac 24 74 01 00 00 	mov    0x174(%rsp),%ebp
    f8d2:	41 ba a5 db b5 e9    	mov    $0xe9b5dba5,%r10d
    f8d8:	41 b9 cf fb c0 b5    	mov    $0xb5c0fbcf,%r9d
    f8de:	48 89 04 24          	mov    %rax,(%rsp)
    f8e2:	8b b4 24 68 01 00 00 	mov    0x168(%rsp),%esi
    f8e9:	41 b8 98 2f 8a 42    	mov    $0x428a2f98,%r8d
    f8ef:	c7 44 24 18 a4 82 3f 	movl   $0x923f82a4,0x18(%rsp)
    f8f6:	92 
    f8f7:	44 8b bc 24 70 01 00 	mov    0x170(%rsp),%r15d
    f8fe:	00 
    f8ff:	c7 44 24 14 f1 11 f1 	movl   $0x59f111f1,0x14(%rsp)
    f906:	59 
    f907:	44 8b b4 24 6c 01 00 	mov    0x16c(%rsp),%r14d
    f90e:	00 
    f90f:	c7 44 24 10 5b c2 56 	movl   $0x3956c25b,0x10(%rsp)
    f916:	39 
    f917:	44 8b ac 24 58 01 00 	mov    0x158(%rsp),%r13d
    f91e:	00 
    f91f:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    f924:	44 8b 9c 24 5c 01 00 	mov    0x15c(%rsp),%r11d
    f92b:	00 
    f92c:	8b 9c 24 60 01 00 00 	mov    0x160(%rsp),%ebx
    f933:	8b 8c 24 64 01 00 00 	mov    0x164(%rsp),%ecx
    f93a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    f93f:	ba 91 44 37 71       	mov    $0x71374491,%edx
    f944:	41 89 f4             	mov    %esi,%r12d
    f947:	89 f0                	mov    %esi,%eax
    f949:	41 c1 cc 06          	ror    $0x6,%r12d
    f94d:	c1 c8 0b             	ror    $0xb,%eax
    f950:	44 31 e0             	xor    %r12d,%eax
    f953:	41 89 f4             	mov    %esi,%r12d
    f956:	41 c1 c4 07          	rol    $0x7,%r12d
    f95a:	44 31 e0             	xor    %r12d,%eax
    f95d:	45 89 fc             	mov    %r15d,%r12d
    f960:	45 31 f4             	xor    %r14d,%r12d
    f963:	41 21 f4             	and    %esi,%r12d
    f966:	45 31 fc             	xor    %r15d,%r12d
    f969:	44 03 7f 0c          	add    0xc(%rdi),%r15d
    f96d:	44 01 e0             	add    %r12d,%eax
    f970:	03 47 08             	add    0x8(%rdi),%eax
    f973:	45 89 ec             	mov    %r13d,%r12d
    f976:	01 c5                	add    %eax,%ebp
    f978:	44 89 e8             	mov    %r13d,%eax
    f97b:	45 21 dc             	and    %r11d,%r12d
    f97e:	44 01 c5             	add    %r8d,%ebp
    f981:	45 89 e8             	mov    %r13d,%r8d
    f984:	c1 c8 0d             	ror    $0xd,%eax
    f987:	41 c1 c8 02          	ror    $0x2,%r8d
    f98b:	01 e9                	add    %ebp,%ecx
    f98d:	44 31 c0             	xor    %r8d,%eax
    f990:	45 89 e8             	mov    %r13d,%r8d
    f993:	41 c1 c0 0a          	rol    $0xa,%r8d
    f997:	44 31 c0             	xor    %r8d,%eax
    f99a:	45 89 e8             	mov    %r13d,%r8d
    f99d:	45 09 d8             	or     %r11d,%r8d
    f9a0:	41 21 d8             	and    %ebx,%r8d
    f9a3:	45 09 e0             	or     %r12d,%r8d
    f9a6:	41 01 c0             	add    %eax,%r8d
    f9a9:	89 c8                	mov    %ecx,%eax
    f9ab:	41 01 e8             	add    %ebp,%r8d
    f9ae:	89 f5                	mov    %esi,%ebp
    f9b0:	c1 c8 0b             	ror    $0xb,%eax
    f9b3:	44 31 f5             	xor    %r14d,%ebp
    f9b6:	45 89 c4             	mov    %r8d,%r12d
    f9b9:	21 cd                	and    %ecx,%ebp
    f9bb:	44 31 f5             	xor    %r14d,%ebp
    f9be:	41 01 ef             	add    %ebp,%r15d
    f9c1:	89 cd                	mov    %ecx,%ebp
    f9c3:	c1 cd 06             	ror    $0x6,%ebp
    f9c6:	31 e8                	xor    %ebp,%eax
    f9c8:	89 cd                	mov    %ecx,%ebp
    f9ca:	c1 c5 07             	rol    $0x7,%ebp
    f9cd:	45 21 ec             	and    %r13d,%r12d
    f9d0:	44 03 77 10          	add    0x10(%rdi),%r14d
    f9d4:	31 e8                	xor    %ebp,%eax
    f9d6:	44 89 c5             	mov    %r8d,%ebp
    f9d9:	44 01 f8             	add    %r15d,%eax
    f9dc:	c1 cd 0d             	ror    $0xd,%ebp
    f9df:	01 c2                	add    %eax,%edx
    f9e1:	44 89 c0             	mov    %r8d,%eax
    f9e4:	c1 c8 02             	ror    $0x2,%eax
    f9e7:	01 d3                	add    %edx,%ebx
    f9e9:	31 c5                	xor    %eax,%ebp
    f9eb:	44 89 c0             	mov    %r8d,%eax
    f9ee:	c1 c0 0a             	rol    $0xa,%eax
    f9f1:	31 c5                	xor    %eax,%ebp
    f9f3:	44 89 c0             	mov    %r8d,%eax
    f9f6:	44 09 e8             	or     %r13d,%eax
    f9f9:	44 21 d8             	and    %r11d,%eax
    f9fc:	44 09 e0             	or     %r12d,%eax
    f9ff:	45 89 c4             	mov    %r8d,%r12d
    fa02:	01 e8                	add    %ebp,%eax
    fa04:	89 cd                	mov    %ecx,%ebp
    fa06:	31 f5                	xor    %esi,%ebp
    fa08:	01 d0                	add    %edx,%eax
    fa0a:	89 da                	mov    %ebx,%edx
    fa0c:	21 dd                	and    %ebx,%ebp
    fa0e:	c1 ca 0b             	ror    $0xb,%edx
    fa11:	31 f5                	xor    %esi,%ebp
    fa13:	41 01 ee             	add    %ebp,%r14d
    fa16:	89 dd                	mov    %ebx,%ebp
    fa18:	c1 cd 06             	ror    $0x6,%ebp
    fa1b:	31 ea                	xor    %ebp,%edx
    fa1d:	89 dd                	mov    %ebx,%ebp
    fa1f:	c1 c5 07             	rol    $0x7,%ebp
    fa22:	31 ea                	xor    %ebp,%edx
    fa24:	89 c5                	mov    %eax,%ebp
    fa26:	44 01 f2             	add    %r14d,%edx
    fa29:	c1 cd 0d             	ror    $0xd,%ebp
    fa2c:	41 01 d1             	add    %edx,%r9d
    fa2f:	89 c2                	mov    %eax,%edx
    fa31:	c1 ca 02             	ror    $0x2,%edx
    fa34:	45 01 cb             	add    %r9d,%r11d
    fa37:	31 d5                	xor    %edx,%ebp
    fa39:	89 c2                	mov    %eax,%edx
    fa3b:	c1 c2 0a             	rol    $0xa,%edx
    fa3e:	41 21 c4             	and    %eax,%r12d
    fa41:	03 77 14             	add    0x14(%rdi),%esi
    fa44:	31 d5                	xor    %edx,%ebp
    fa46:	44 89 c2             	mov    %r8d,%edx
    fa49:	09 c2                	or     %eax,%edx
    fa4b:	44 21 ea             	and    %r13d,%edx
    fa4e:	44 09 e2             	or     %r12d,%edx
    fa51:	01 ea                	add    %ebp,%edx
    fa53:	44 89 dd             	mov    %r11d,%ebp
    fa56:	44 01 ca             	add    %r9d,%edx
    fa59:	41 89 c9             	mov    %ecx,%r9d
    fa5c:	c1 cd 06             	ror    $0x6,%ebp
    fa5f:	41 31 d9             	xor    %ebx,%r9d
    fa62:	45 21 d9             	and    %r11d,%r9d
    fa65:	41 31 c9             	xor    %ecx,%r9d
    fa68:	44 01 ce             	add    %r9d,%esi
    fa6b:	45 89 d9             	mov    %r11d,%r9d
    fa6e:	41 c1 c9 0b          	ror    $0xb,%r9d
    fa72:	41 31 e9             	xor    %ebp,%r9d
    fa75:	44 89 dd             	mov    %r11d,%ebp
    fa78:	c1 c5 07             	rol    $0x7,%ebp
    fa7b:	41 31 e9             	xor    %ebp,%r9d
    fa7e:	89 c5                	mov    %eax,%ebp
    fa80:	44 01 ce             	add    %r9d,%esi
    fa83:	41 89 d1             	mov    %edx,%r9d
    fa86:	21 d5                	and    %edx,%ebp
    fa88:	41 01 f2             	add    %esi,%r10d
    fa8b:	89 d6                	mov    %edx,%esi
    fa8d:	41 c1 c9 0d          	ror    $0xd,%r9d
    fa91:	c1 ce 02             	ror    $0x2,%esi
    fa94:	45 01 d5             	add    %r10d,%r13d
    fa97:	41 31 f1             	xor    %esi,%r9d
    fa9a:	89 d6                	mov    %edx,%esi
    fa9c:	c1 c6 0a             	rol    $0xa,%esi
    fa9f:	41 31 f1             	xor    %esi,%r9d
    faa2:	89 c6                	mov    %eax,%esi
    faa4:	09 d6                	or     %edx,%esi
    faa6:	44 21 c6             	and    %r8d,%esi
    faa9:	09 ee                	or     %ebp,%esi
    faab:	44 01 ce             	add    %r9d,%esi
    faae:	45 89 e9             	mov    %r13d,%r9d
    fab1:	44 01 d6             	add    %r10d,%esi
    fab4:	41 89 da             	mov    %ebx,%r10d
    fab7:	45 31 da             	xor    %r11d,%r10d
    faba:	03 4f 18             	add    0x18(%rdi),%ecx
    fabd:	41 c1 c9 06          	ror    $0x6,%r9d
    fac1:	45 21 ea             	and    %r13d,%r10d
    fac4:	41 31 da             	xor    %ebx,%r10d
    fac7:	03 5f 1c             	add    0x1c(%rdi),%ebx
    faca:	41 01 ca             	add    %ecx,%r10d
    facd:	44 89 e9             	mov    %r13d,%ecx
    fad0:	c1 c9 0b             	ror    $0xb,%ecx
    fad3:	44 31 c9             	xor    %r9d,%ecx
    fad6:	45 89 e9             	mov    %r13d,%r9d
    fad9:	41 c1 c1 07          	rol    $0x7,%r9d
    fadd:	44 31 c9             	xor    %r9d,%ecx
    fae0:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
    fae5:	44 01 d1             	add    %r10d,%ecx
    fae8:	41 89 d2             	mov    %edx,%r10d
    faeb:	41 01 c9             	add    %ecx,%r9d
    faee:	89 f1                	mov    %esi,%ecx
    faf0:	41 21 f2             	and    %esi,%r10d
    faf3:	43 8d 2c 08          	lea    (%r8,%r9,1),%ebp
    faf7:	41 89 f0             	mov    %esi,%r8d
    fafa:	c1 c9 02             	ror    $0x2,%ecx
    fafd:	41 c1 c8 0d          	ror    $0xd,%r8d
    fb01:	41 31 c8             	xor    %ecx,%r8d
    fb04:	89 f1                	mov    %esi,%ecx
    fb06:	c1 c1 0a             	rol    $0xa,%ecx
    fb09:	41 31 c8             	xor    %ecx,%r8d
    fb0c:	89 d1                	mov    %edx,%ecx
    fb0e:	09 f1                	or     %esi,%ecx
    fb10:	21 c1                	and    %eax,%ecx
    fb12:	44 09 d1             	or     %r10d,%ecx
    fb15:	44 01 c1             	add    %r8d,%ecx
    fb18:	41 89 e8             	mov    %ebp,%r8d
    fb1b:	44 01 c9             	add    %r9d,%ecx
    fb1e:	45 89 d9             	mov    %r11d,%r9d
    fb21:	41 c1 c8 0b          	ror    $0xb,%r8d
    fb25:	45 31 e9             	xor    %r13d,%r9d
    fb28:	41 21 e9             	and    %ebp,%r9d
    fb2b:	45 31 d9             	xor    %r11d,%r9d
    fb2e:	41 01 d9             	add    %ebx,%r9d
    fb31:	89 eb                	mov    %ebp,%ebx
    fb33:	c1 cb 06             	ror    $0x6,%ebx
    fb36:	41 31 d8             	xor    %ebx,%r8d
    fb39:	89 eb                	mov    %ebp,%ebx
    fb3b:	c1 c3 07             	rol    $0x7,%ebx
    fb3e:	41 31 d8             	xor    %ebx,%r8d
    fb41:	89 cb                	mov    %ecx,%ebx
    fb43:	44 03 5f 20          	add    0x20(%rdi),%r11d
    fb47:	45 01 c8             	add    %r9d,%r8d
    fb4a:	44 03 44 24 14       	add    0x14(%rsp),%r8d
    fb4f:	c1 cb 02             	ror    $0x2,%ebx
    fb52:	41 89 f1             	mov    %esi,%r9d
    fb55:	46 8d 3c 00          	lea    (%rax,%r8,1),%r15d
    fb59:	89 c8                	mov    %ecx,%eax
    fb5b:	41 21 c9             	and    %ecx,%r9d
    fb5e:	c1 c8 0d             	ror    $0xd,%eax
    fb61:	31 d8                	xor    %ebx,%eax
    fb63:	89 cb                	mov    %ecx,%ebx
    fb65:	c1 c3 0a             	rol    $0xa,%ebx
    fb68:	31 d8                	xor    %ebx,%eax
    fb6a:	89 f3                	mov    %esi,%ebx
    fb6c:	09 cb                	or     %ecx,%ebx
    fb6e:	21 d3                	and    %edx,%ebx
    fb70:	44 09 cb             	or     %r9d,%ebx
    fb73:	01 c3                	add    %eax,%ebx
    fb75:	44 89 f8             	mov    %r15d,%eax
    fb78:	44 01 c3             	add    %r8d,%ebx
    fb7b:	45 89 e8             	mov    %r13d,%r8d
    fb7e:	c1 c8 0b             	ror    $0xb,%eax
    fb81:	41 31 e8             	xor    %ebp,%r8d
    fb84:	41 89 d9             	mov    %ebx,%r9d
    fb87:	45 21 f8             	and    %r15d,%r8d
    fb8a:	45 31 e8             	xor    %r13d,%r8d
    fb8d:	45 01 d8             	add    %r11d,%r8d
    fb90:	45 89 fb             	mov    %r15d,%r11d
    fb93:	41 c1 cb 06          	ror    $0x6,%r11d
    fb97:	44 31 d8             	xor    %r11d,%eax
    fb9a:	45 89 fb             	mov    %r15d,%r11d
    fb9d:	41 c1 c3 07          	rol    $0x7,%r11d
    fba1:	44 31 d8             	xor    %r11d,%eax
    fba4:	45 8d 1c 00          	lea    (%r8,%rax,1),%r11d
    fba8:	8b 44 24 18          	mov    0x18(%rsp),%eax
    fbac:	41 89 c8             	mov    %ecx,%r8d
    fbaf:	44 01 d8             	add    %r11d,%eax
    fbb2:	41 89 db             	mov    %ebx,%r11d
    fbb5:	44 8d 34 02          	lea    (%rdx,%rax,1),%r14d
    fbb9:	89 da                	mov    %ebx,%edx
    fbbb:	41 c1 cb 0d          	ror    $0xd,%r11d
    fbbf:	c1 ca 02             	ror    $0x2,%edx
    fbc2:	44 31 da             	xor    %r11d,%edx
    fbc5:	41 89 db             	mov    %ebx,%r11d
    fbc8:	41 c1 c3 0a          	rol    $0xa,%r11d
    fbcc:	44 31 da             	xor    %r11d,%edx
    fbcf:	41 89 cb             	mov    %ecx,%r11d
    fbd2:	41 09 db             	or     %ebx,%r11d
    fbd5:	41 21 f3             	and    %esi,%r11d
    fbd8:	41 21 d8             	and    %ebx,%r8d
    fbdb:	44 03 6f 24          	add    0x24(%rdi),%r13d
    fbdf:	48 83 04 24 20       	addq   $0x20,(%rsp)
    fbe4:	45 09 c3             	or     %r8d,%r11d
    fbe7:	48 83 c7 20          	add    $0x20,%rdi
    fbeb:	41 01 d3             	add    %edx,%r11d
    fbee:	44 89 f2             	mov    %r14d,%edx
    fbf1:	41 01 c3             	add    %eax,%r11d
    fbf4:	89 e8                	mov    %ebp,%eax
    fbf6:	c1 ca 0b             	ror    $0xb,%edx
    fbf9:	44 31 f8             	xor    %r15d,%eax
    fbfc:	45 89 d8             	mov    %r11d,%r8d
    fbff:	45 21 d9             	and    %r11d,%r9d
    fc02:	44 21 f0             	and    %r14d,%eax
    fc05:	41 c1 c8 0d          	ror    $0xd,%r8d
    fc09:	31 e8                	xor    %ebp,%eax
    fc0b:	41 01 c5             	add    %eax,%r13d
    fc0e:	44 89 f0             	mov    %r14d,%eax
    fc11:	c1 c8 06             	ror    $0x6,%eax
    fc14:	31 d0                	xor    %edx,%eax
    fc16:	44 89 f2             	mov    %r14d,%edx
    fc19:	c1 c2 07             	rol    $0x7,%edx
    fc1c:	31 d0                	xor    %edx,%eax
    fc1e:	44 89 da             	mov    %r11d,%edx
    fc21:	c1 ca 02             	ror    $0x2,%edx
    fc24:	41 01 c5             	add    %eax,%r13d
    fc27:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    fc2b:	44 31 c2             	xor    %r8d,%edx
    fc2e:	45 89 d8             	mov    %r11d,%r8d
    fc31:	41 c1 c0 0a          	rol    $0xa,%r8d
    fc35:	44 01 e8             	add    %r13d,%eax
    fc38:	44 31 c2             	xor    %r8d,%edx
    fc3b:	41 89 d8             	mov    %ebx,%r8d
    fc3e:	01 c6                	add    %eax,%esi
    fc40:	45 09 d8             	or     %r11d,%r8d
    fc43:	41 21 c8             	and    %ecx,%r8d
    fc46:	45 09 c8             	or     %r9d,%r8d
    fc49:	4c 8b 0c 24          	mov    (%rsp),%r9
    fc4d:	44 01 c2             	add    %r8d,%edx
    fc50:	44 8d 2c 10          	lea    (%rax,%rdx,1),%r13d
    fc54:	48 39 7c 24 20       	cmp    %rdi,0x20(%rsp)
    fc59:	74 3d                	je     fc98 <mbedtls_internal_sha256_process+0x468>
    fc5b:	4c 89 c8             	mov    %r9,%rax
    fc5e:	45 8b 01             	mov    (%r9),%r8d
    fc61:	41 8b 51 04          	mov    0x4(%r9),%edx
    fc65:	44 8b 60 10          	mov    0x10(%rax),%r12d
    fc69:	44 8b 50 0c          	mov    0xc(%rax),%r10d
    fc6d:	45 8b 49 08          	mov    0x8(%r9),%r9d
    fc71:	44 89 64 24 10       	mov    %r12d,0x10(%rsp)
    fc76:	44 8b 60 14          	mov    0x14(%rax),%r12d
    fc7a:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
    fc7f:	44 8b 60 18          	mov    0x18(%rax),%r12d
    fc83:	8b 40 1c             	mov    0x1c(%rax),%eax
    fc86:	44 89 64 24 18       	mov    %r12d,0x18(%rsp)
    fc8b:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    fc8f:	e9 b0 fc ff ff       	jmpq   f944 <mbedtls_internal_sha256_process+0x114>
    fc94:	0f 1f 40 00          	nopl   0x0(%rax)
    fc98:	89 44 24 50          	mov    %eax,0x50(%rsp)
    fc9c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    fca1:	41 b9 86 47 be ef    	mov    $0xefbe4786,%r9d
    fca7:	41 b8 c1 69 9b e4    	mov    $0xe49b69c1,%r8d
    fcad:	89 b4 24 68 01 00 00 	mov    %esi,0x168(%rsp)
    fcb4:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    fcb9:	48 05 c0 00 00 00    	add    $0xc0,%rax
    fcbf:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
    fcc6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    fccb:	89 f0                	mov    %esi,%eax
    fccd:	89 ce                	mov    %ecx,%esi
    fccf:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
    fcd6:	00 
    fcd7:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
    fcde:	00 
    fcdf:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
    fce6:	00 
    fce7:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
    fcee:	00 
    fcef:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
    fcf6:	89 8c 24 64 01 00 00 	mov    %ecx,0x164(%rsp)
    fcfd:	89 54 24 54          	mov    %edx,0x54(%rsp)
    fd01:	c7 44 24 28 da 88 f9 	movl   $0x76f988da,0x28(%rsp)
    fd08:	76 
    fd09:	c7 44 24 20 dc a9 b0 	movl   $0x5cb0a9dc,0x20(%rsp)
    fd10:	5c 
    fd11:	c7 44 24 1c aa 84 74 	movl   $0x4a7484aa,0x1c(%rsp)
    fd18:	4a 
    fd19:	c7 44 24 18 6f 2c e9 	movl   $0x2de92c6f,0x18(%rsp)
    fd20:	2d 
    fd21:	c7 44 24 14 cc a1 0c 	movl   $0x240ca1cc,0x14(%rsp)
    fd28:	24 
    fd29:	c7 44 24 10 c6 9d c1 	movl   $0xfc19dc6,0x10(%rsp)
    fd30:	0f 
    fd31:	eb 37                	jmp    fd6a <mbedtls_internal_sha256_process+0x53a>
    fd33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fd38:	8b 57 48             	mov    0x48(%rdi),%edx
    fd3b:	44 8b 47 40          	mov    0x40(%rdi),%r8d
    fd3f:	44 8b 4f 44          	mov    0x44(%rdi),%r9d
    fd43:	89 54 24 10          	mov    %edx,0x10(%rsp)
    fd47:	8b 57 4c             	mov    0x4c(%rdi),%edx
    fd4a:	89 54 24 14          	mov    %edx,0x14(%rsp)
    fd4e:	8b 57 50             	mov    0x50(%rdi),%edx
    fd51:	89 54 24 18          	mov    %edx,0x18(%rsp)
    fd55:	8b 57 54             	mov    0x54(%rdi),%edx
    fd58:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    fd5c:	8b 57 58             	mov    0x58(%rdi),%edx
    fd5f:	8b 7f 5c             	mov    0x5c(%rdi),%edi
    fd62:	89 54 24 20          	mov    %edx,0x20(%rsp)
    fd66:	89 7c 24 28          	mov    %edi,0x28(%rsp)
    fd6a:	41 8b 54 24 40       	mov    0x40(%r12),%edx
    fd6f:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
    fd74:	41 8b 7c 24 0c       	mov    0xc(%r12),%edi
    fd79:	45 8b 54 24 08       	mov    0x8(%r12),%r10d
    fd7e:	c1 c1 0d             	rol    $0xd,%ecx
    fd81:	c1 c2 0f             	rol    $0xf,%edx
    fd84:	45 03 54 24 2c       	add    0x2c(%r12),%r10d
    fd89:	31 ca                	xor    %ecx,%edx
    fd8b:	41 8b 4c 24 40       	mov    0x40(%r12),%ecx
    fd90:	c1 e9 0a             	shr    $0xa,%ecx
    fd93:	31 d1                	xor    %edx,%ecx
    fd95:	89 fa                	mov    %edi,%edx
    fd97:	44 01 d1             	add    %r10d,%ecx
    fd9a:	41 89 fa             	mov    %edi,%r10d
    fd9d:	c1 c2 0e             	rol    $0xe,%edx
    fda0:	41 c1 ca 07          	ror    $0x7,%r10d
    fda4:	44 31 d2             	xor    %r10d,%edx
    fda7:	41 89 fa             	mov    %edi,%r10d
    fdaa:	41 c1 ea 03          	shr    $0x3,%r10d
    fdae:	44 31 d2             	xor    %r10d,%edx
    fdb1:	44 8d 14 11          	lea    (%rcx,%rdx,1),%r10d
    fdb5:	89 c1                	mov    %eax,%ecx
    fdb7:	89 c2                	mov    %eax,%edx
    fdb9:	c1 c9 06             	ror    $0x6,%ecx
    fdbc:	c1 ca 0b             	ror    $0xb,%edx
    fdbf:	45 89 54 24 48       	mov    %r10d,0x48(%r12)
    fdc4:	31 ca                	xor    %ecx,%edx
    fdc6:	89 c1                	mov    %eax,%ecx
    fdc8:	44 89 14 24          	mov    %r10d,(%rsp)
    fdcc:	c1 c1 07             	rol    $0x7,%ecx
    fdcf:	31 ca                	xor    %ecx,%edx
    fdd1:	44 89 f9             	mov    %r15d,%ecx
    fdd4:	44 31 f1             	xor    %r14d,%ecx
    fdd7:	21 c1                	and    %eax,%ecx
    fdd9:	44 31 f9             	xor    %r15d,%ecx
    fddc:	01 ca                	add    %ecx,%edx
    fdde:	44 89 e9             	mov    %r13d,%ecx
    fde1:	44 01 d2             	add    %r10d,%edx
    fde4:	44 21 d9             	and    %r11d,%ecx
    fde7:	01 d5                	add    %edx,%ebp
    fde9:	44 89 ea             	mov    %r13d,%edx
    fdec:	41 01 e8             	add    %ebp,%r8d
    fdef:	44 89 ed             	mov    %r13d,%ebp
    fdf2:	c1 ca 0d             	ror    $0xd,%edx
    fdf5:	c1 cd 02             	ror    $0x2,%ebp
    fdf8:	46 8d 14 06          	lea    (%rsi,%r8,1),%r10d
    fdfc:	89 c6                	mov    %eax,%esi
    fdfe:	31 ea                	xor    %ebp,%edx
    fe00:	44 89 ed             	mov    %r13d,%ebp
    fe03:	c1 c5 0a             	rol    $0xa,%ebp
    fe06:	31 ea                	xor    %ebp,%edx
    fe08:	44 89 ed             	mov    %r13d,%ebp
    fe0b:	44 09 dd             	or     %r11d,%ebp
    fe0e:	21 dd                	and    %ebx,%ebp
    fe10:	09 cd                	or     %ecx,%ebp
    fe12:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
    fe17:	41 03 7c 24 30       	add    0x30(%r12),%edi
    fe1c:	44 31 f6             	xor    %r14d,%esi
    fe1f:	01 d5                	add    %edx,%ebp
    fe21:	41 8b 54 24 44       	mov    0x44(%r12),%edx
    fe26:	44 21 d6             	and    %r10d,%esi
    fe29:	c1 c1 0f             	rol    $0xf,%ecx
    fe2c:	44 01 c5             	add    %r8d,%ebp
    fe2f:	45 8b 44 24 10       	mov    0x10(%r12),%r8d
    fe34:	44 31 f6             	xor    %r14d,%esi
    fe37:	c1 c2 0d             	rol    $0xd,%edx
    fe3a:	31 ca                	xor    %ecx,%edx
    fe3c:	41 8b 4c 24 44       	mov    0x44(%r12),%ecx
    fe41:	c1 e9 0a             	shr    $0xa,%ecx
    fe44:	31 d1                	xor    %edx,%ecx
    fe46:	44 89 c2             	mov    %r8d,%edx
    fe49:	01 cf                	add    %ecx,%edi
    fe4b:	44 89 c1             	mov    %r8d,%ecx
    fe4e:	c1 ca 07             	ror    $0x7,%edx
    fe51:	c1 c1 0e             	rol    $0xe,%ecx
    fe54:	31 d1                	xor    %edx,%ecx
    fe56:	44 89 c2             	mov    %r8d,%edx
    fe59:	c1 ea 03             	shr    $0x3,%edx
    fe5c:	31 d1                	xor    %edx,%ecx
    fe5e:	44 89 d2             	mov    %r10d,%edx
    fe61:	01 f9                	add    %edi,%ecx
    fe63:	c1 ca 0b             	ror    $0xb,%edx
    fe66:	44 89 ef             	mov    %r13d,%edi
    fe69:	41 01 cf             	add    %ecx,%r15d
    fe6c:	41 89 4c 24 4c       	mov    %ecx,0x4c(%r12)
    fe71:	41 01 f7             	add    %esi,%r15d
    fe74:	44 89 d6             	mov    %r10d,%esi
    fe77:	c1 ce 06             	ror    $0x6,%esi
    fe7a:	31 f2                	xor    %esi,%edx
    fe7c:	44 89 d6             	mov    %r10d,%esi
    fe7f:	c1 c6 07             	rol    $0x7,%esi
    fe82:	31 f2                	xor    %esi,%edx
    fe84:	89 ee                	mov    %ebp,%esi
    fe86:	44 01 fa             	add    %r15d,%edx
    fe89:	c1 ce 0d             	ror    $0xd,%esi
    fe8c:	44 8b 3c 24          	mov    (%rsp),%r15d
    fe90:	41 01 d1             	add    %edx,%r9d
    fe93:	89 ea                	mov    %ebp,%edx
    fe95:	c1 ca 02             	ror    $0x2,%edx
    fe98:	44 01 cb             	add    %r9d,%ebx
    fe9b:	31 d6                	xor    %edx,%esi
    fe9d:	89 ea                	mov    %ebp,%edx
    fe9f:	c1 c2 0a             	rol    $0xa,%edx
    fea2:	21 ef                	and    %ebp,%edi
    fea4:	45 03 44 24 34       	add    0x34(%r12),%r8d
    fea9:	31 d6                	xor    %edx,%esi
    feab:	44 89 ea             	mov    %r13d,%edx
    feae:	09 ea                	or     %ebp,%edx
    feb0:	44 21 da             	and    %r11d,%edx
    feb3:	09 fa                	or     %edi,%edx
    feb5:	44 89 ff             	mov    %r15d,%edi
    feb8:	01 f2                	add    %esi,%edx
    feba:	44 89 fe             	mov    %r15d,%esi
    febd:	c1 c7 0d             	rol    $0xd,%edi
    fec0:	c1 c6 0f             	rol    $0xf,%esi
    fec3:	44 01 ca             	add    %r9d,%edx
    fec6:	45 8b 4c 24 14       	mov    0x14(%r12),%r9d
    fecb:	31 f7                	xor    %esi,%edi
    fecd:	44 89 fe             	mov    %r15d,%esi
    fed0:	41 89 ef             	mov    %ebp,%r15d
    fed3:	c1 ee 0a             	shr    $0xa,%esi
    fed6:	31 fe                	xor    %edi,%esi
    fed8:	44 89 cf             	mov    %r9d,%edi
    fedb:	41 01 f0             	add    %esi,%r8d
    fede:	44 89 ce             	mov    %r9d,%esi
    fee1:	c1 cf 07             	ror    $0x7,%edi
    fee4:	c1 c6 0e             	rol    $0xe,%esi
    fee7:	31 fe                	xor    %edi,%esi
    fee9:	44 89 cf             	mov    %r9d,%edi
    feec:	c1 ef 03             	shr    $0x3,%edi
    feef:	31 fe                	xor    %edi,%esi
    fef1:	44 01 c6             	add    %r8d,%esi
    fef4:	41 89 c0             	mov    %eax,%r8d
    fef7:	45 31 d0             	xor    %r10d,%r8d
    fefa:	41 89 74 24 50       	mov    %esi,0x50(%r12)
    feff:	41 21 d8             	and    %ebx,%r8d
    ff02:	44 89 c7             	mov    %r8d,%edi
    ff05:	45 8d 04 36          	lea    (%r14,%rsi,1),%r8d
    ff09:	41 89 de             	mov    %ebx,%r14d
    ff0c:	31 c7                	xor    %eax,%edi
    ff0e:	41 c1 ce 0b          	ror    $0xb,%r14d
    ff12:	41 01 f8             	add    %edi,%r8d
    ff15:	89 df                	mov    %ebx,%edi
    ff17:	c1 cf 06             	ror    $0x6,%edi
    ff1a:	41 31 fe             	xor    %edi,%r14d
    ff1d:	89 df                	mov    %ebx,%edi
    ff1f:	c1 c7 07             	rol    $0x7,%edi
    ff22:	41 31 fe             	xor    %edi,%r14d
    ff25:	89 d7                	mov    %edx,%edi
    ff27:	45 01 c6             	add    %r8d,%r14d
    ff2a:	41 89 d0             	mov    %edx,%r8d
    ff2d:	44 03 74 24 10       	add    0x10(%rsp),%r14d
    ff32:	45 01 f3             	add    %r14d,%r11d
    ff35:	41 c1 c8 02          	ror    $0x2,%r8d
    ff39:	41 21 d7             	and    %edx,%r15d
    ff3c:	c1 cf 0d             	ror    $0xd,%edi
    ff3f:	44 31 c7             	xor    %r8d,%edi
    ff42:	41 89 d0             	mov    %edx,%r8d
    ff45:	41 c1 c0 0a          	rol    $0xa,%r8d
    ff49:	44 31 c7             	xor    %r8d,%edi
    ff4c:	41 89 e8             	mov    %ebp,%r8d
    ff4f:	41 09 d0             	or     %edx,%r8d
    ff52:	45 21 e8             	and    %r13d,%r8d
    ff55:	45 09 f8             	or     %r15d,%r8d
    ff58:	41 01 f8             	add    %edi,%r8d
    ff5b:	89 cf                	mov    %ecx,%edi
    ff5d:	c1 c7 0f             	rol    $0xf,%edi
    ff60:	45 01 f0             	add    %r14d,%r8d
    ff63:	45 8b 74 24 18       	mov    0x18(%r12),%r14d
    ff68:	41 89 ff             	mov    %edi,%r15d
    ff6b:	89 cf                	mov    %ecx,%edi
    ff6d:	c1 e9 0a             	shr    $0xa,%ecx
    ff70:	c1 c7 0d             	rol    $0xd,%edi
    ff73:	44 31 ff             	xor    %r15d,%edi
    ff76:	41 89 d7             	mov    %edx,%r15d
    ff79:	31 cf                	xor    %ecx,%edi
    ff7b:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
    ff80:	44 01 c9             	add    %r9d,%ecx
    ff83:	45 89 f1             	mov    %r14d,%r9d
    ff86:	01 f9                	add    %edi,%ecx
    ff88:	44 89 f7             	mov    %r14d,%edi
    ff8b:	41 c1 c9 07          	ror    $0x7,%r9d
    ff8f:	c1 c7 0e             	rol    $0xe,%edi
    ff92:	44 31 cf             	xor    %r9d,%edi
    ff95:	45 89 f1             	mov    %r14d,%r9d
    ff98:	41 c1 e9 03          	shr    $0x3,%r9d
    ff9c:	44 31 cf             	xor    %r9d,%edi
    ff9f:	45 89 d9             	mov    %r11d,%r9d
    ffa2:	01 cf                	add    %ecx,%edi
    ffa4:	44 89 d1             	mov    %r10d,%ecx
    ffa7:	41 c1 c9 06          	ror    $0x6,%r9d
    ffab:	31 d9                	xor    %ebx,%ecx
    ffad:	01 f8                	add    %edi,%eax
    ffaf:	41 89 7c 24 54       	mov    %edi,0x54(%r12)
    ffb4:	44 21 d9             	and    %r11d,%ecx
    ffb7:	44 31 d1             	xor    %r10d,%ecx
    ffba:	01 c8                	add    %ecx,%eax
    ffbc:	44 89 d9             	mov    %r11d,%ecx
    ffbf:	c1 c9 0b             	ror    $0xb,%ecx
    ffc2:	44 31 c9             	xor    %r9d,%ecx
    ffc5:	45 89 d9             	mov    %r11d,%r9d
    ffc8:	45 21 c7             	and    %r8d,%r15d
    ffcb:	45 03 74 24 3c       	add    0x3c(%r12),%r14d
    ffd0:	41 c1 c1 07          	rol    $0x7,%r9d
    ffd4:	44 31 c9             	xor    %r9d,%ecx
    ffd7:	01 c1                	add    %eax,%ecx
    ffd9:	03 4c 24 14          	add    0x14(%rsp),%ecx
    ffdd:	44 89 c0             	mov    %r8d,%eax
    ffe0:	45 8d 4c 0d 00       	lea    0x0(%r13,%rcx,1),%r9d
    ffe5:	45 89 c5             	mov    %r8d,%r13d
    ffe8:	c1 c8 02             	ror    $0x2,%eax
    ffeb:	41 c1 cd 0d          	ror    $0xd,%r13d
    ffef:	41 31 c5             	xor    %eax,%r13d
    fff2:	44 89 c0             	mov    %r8d,%eax
    fff5:	c1 c0 0a             	rol    $0xa,%eax
    fff8:	41 31 c5             	xor    %eax,%r13d
    fffb:	89 d0                	mov    %edx,%eax
    fffd:	44 09 c0             	or     %r8d,%eax
   10000:	21 e8                	and    %ebp,%eax
   10002:	44 09 f8             	or     %r15d,%eax
   10005:	44 01 e8             	add    %r13d,%eax
   10008:	45 8b 6c 24 1c       	mov    0x1c(%r12),%r13d
   1000d:	01 c8                	add    %ecx,%eax
   1000f:	89 f1                	mov    %esi,%ecx
   10011:	c1 c1 0f             	rol    $0xf,%ecx
   10014:	41 89 cf             	mov    %ecx,%r15d
   10017:	89 f1                	mov    %esi,%ecx
   10019:	c1 ee 0a             	shr    $0xa,%esi
   1001c:	c1 c1 0d             	rol    $0xd,%ecx
   1001f:	44 31 f9             	xor    %r15d,%ecx
   10022:	45 89 c7             	mov    %r8d,%r15d
   10025:	31 f1                	xor    %esi,%ecx
   10027:	44 89 f6             	mov    %r14d,%esi
   1002a:	45 89 ee             	mov    %r13d,%r14d
   1002d:	01 ce                	add    %ecx,%esi
   1002f:	44 89 e9             	mov    %r13d,%ecx
   10032:	41 c1 ce 07          	ror    $0x7,%r14d
   10036:	c1 c1 0e             	rol    $0xe,%ecx
   10039:	44 31 f1             	xor    %r14d,%ecx
   1003c:	45 89 ee             	mov    %r13d,%r14d
   1003f:	41 c1 ee 03          	shr    $0x3,%r14d
   10043:	44 31 f1             	xor    %r14d,%ecx
   10046:	01 f1                	add    %esi,%ecx
   10048:	89 de                	mov    %ebx,%esi
   1004a:	44 31 de             	xor    %r11d,%esi
   1004d:	41 89 4c 24 58       	mov    %ecx,0x58(%r12)
   10052:	44 21 ce             	and    %r9d,%esi
   10055:	41 89 f6             	mov    %esi,%r14d
   10058:	41 8d 34 0a          	lea    (%r10,%rcx,1),%esi
   1005c:	45 89 ca             	mov    %r9d,%r10d
   1005f:	41 31 de             	xor    %ebx,%r14d
   10062:	44 01 f6             	add    %r14d,%esi
   10065:	45 89 ce             	mov    %r9d,%r14d
   10068:	41 c1 ca 0b          	ror    $0xb,%r10d
   1006c:	41 21 c7             	and    %eax,%r15d
   1006f:	41 c1 ce 06          	ror    $0x6,%r14d
   10073:	45 31 f2             	xor    %r14d,%r10d
   10076:	45 89 ce             	mov    %r9d,%r14d
   10079:	41 c1 c6 07          	rol    $0x7,%r14d
   1007d:	45 31 f2             	xor    %r14d,%r10d
   10080:	41 89 c6             	mov    %eax,%r14d
   10083:	41 01 f2             	add    %esi,%r10d
   10086:	89 c6                	mov    %eax,%esi
   10088:	41 c1 ce 0d          	ror    $0xd,%r14d
   1008c:	44 03 54 24 18       	add    0x18(%rsp),%r10d
   10091:	c1 ce 02             	ror    $0x2,%esi
   10094:	44 01 d5             	add    %r10d,%ebp
   10097:	41 31 f6             	xor    %esi,%r14d
   1009a:	89 c6                	mov    %eax,%esi
   1009c:	c1 c6 0a             	rol    $0xa,%esi
   1009f:	41 31 f6             	xor    %esi,%r14d
   100a2:	44 89 c6             	mov    %r8d,%esi
   100a5:	09 c6                	or     %eax,%esi
   100a7:	21 d6                	and    %edx,%esi
   100a9:	44 09 fe             	or     %r15d,%esi
   100ac:	41 89 ff             	mov    %edi,%r15d
   100af:	44 01 f6             	add    %r14d,%esi
   100b2:	41 89 fe             	mov    %edi,%r14d
   100b5:	41 c1 c7 0f          	rol    $0xf,%r15d
   100b9:	41 c1 c6 0d          	rol    $0xd,%r14d
   100bd:	c1 ef 0a             	shr    $0xa,%edi
   100c0:	44 01 d6             	add    %r10d,%esi
   100c3:	45 8b 54 24 20       	mov    0x20(%r12),%r10d
   100c8:	45 31 fe             	xor    %r15d,%r14d
   100cb:	41 31 fe             	xor    %edi,%r14d
   100ce:	41 8b 7c 24 40       	mov    0x40(%r12),%edi
   100d3:	44 01 ef             	add    %r13d,%edi
   100d6:	45 89 d5             	mov    %r10d,%r13d
   100d9:	41 01 fe             	add    %edi,%r14d
   100dc:	44 89 d7             	mov    %r10d,%edi
   100df:	41 c1 cd 07          	ror    $0x7,%r13d
   100e3:	c1 c7 0e             	rol    $0xe,%edi
   100e6:	44 31 ef             	xor    %r13d,%edi
   100e9:	45 89 d5             	mov    %r10d,%r13d
   100ec:	41 c1 ed 03          	shr    $0x3,%r13d
   100f0:	44 31 ef             	xor    %r13d,%edi
   100f3:	41 89 ed             	mov    %ebp,%r13d
   100f6:	44 01 f7             	add    %r14d,%edi
   100f9:	41 89 ee             	mov    %ebp,%r14d
   100fc:	41 c1 cd 0b          	ror    $0xb,%r13d
   10100:	41 c1 ce 06          	ror    $0x6,%r14d
   10104:	01 fb                	add    %edi,%ebx
   10106:	41 89 7c 24 5c       	mov    %edi,0x5c(%r12)
   1010b:	45 31 f5             	xor    %r14d,%r13d
   1010e:	41 89 ee             	mov    %ebp,%r14d
   10111:	41 c1 c6 07          	rol    $0x7,%r14d
   10115:	45 31 f5             	xor    %r14d,%r13d
   10118:	45 89 de             	mov    %r11d,%r14d
   1011b:	45 31 ce             	xor    %r9d,%r14d
   1011e:	41 21 ee             	and    %ebp,%r14d
   10121:	45 31 de             	xor    %r11d,%r14d
   10124:	44 01 f3             	add    %r14d,%ebx
   10127:	41 89 c6             	mov    %eax,%r14d
   1012a:	44 01 eb             	add    %r13d,%ebx
   1012d:	44 8b 6c 24 1c       	mov    0x1c(%rsp),%r13d
   10132:	41 21 f6             	and    %esi,%r14d
   10135:	41 01 dd             	add    %ebx,%r13d
   10138:	89 f3                	mov    %esi,%ebx
   1013a:	46 8d 3c 2a          	lea    (%rdx,%r13,1),%r15d
   1013e:	89 f2                	mov    %esi,%edx
   10140:	c1 cb 02             	ror    $0x2,%ebx
   10143:	c1 ca 0d             	ror    $0xd,%edx
   10146:	31 da                	xor    %ebx,%edx
   10148:	89 f3                	mov    %esi,%ebx
   1014a:	c1 c3 0a             	rol    $0xa,%ebx
   1014d:	31 da                	xor    %ebx,%edx
   1014f:	89 c3                	mov    %eax,%ebx
   10151:	09 f3                	or     %esi,%ebx
   10153:	44 21 c3             	and    %r8d,%ebx
   10156:	44 09 f3             	or     %r14d,%ebx
   10159:	41 89 ce             	mov    %ecx,%r14d
   1015c:	01 d3                	add    %edx,%ebx
   1015e:	41 c1 c6 0f          	rol    $0xf,%r14d
   10162:	41 8b 54 24 24       	mov    0x24(%r12),%edx
   10167:	45 03 54 24 44       	add    0x44(%r12),%r10d
   1016c:	44 01 eb             	add    %r13d,%ebx
   1016f:	41 89 cd             	mov    %ecx,%r13d
   10172:	c1 e9 0a             	shr    $0xa,%ecx
   10175:	41 c1 c5 0d          	rol    $0xd,%r13d
   10179:	45 31 f5             	xor    %r14d,%r13d
   1017c:	41 31 cd             	xor    %ecx,%r13d
   1017f:	89 d1                	mov    %edx,%ecx
   10181:	45 01 d5             	add    %r10d,%r13d
   10184:	41 89 d2             	mov    %edx,%r10d
   10187:	c1 c9 07             	ror    $0x7,%ecx
   1018a:	41 c1 c2 0e          	rol    $0xe,%r10d
   1018e:	41 31 ca             	xor    %ecx,%r10d
   10191:	89 d1                	mov    %edx,%ecx
   10193:	c1 e9 03             	shr    $0x3,%ecx
   10196:	41 31 ca             	xor    %ecx,%r10d
   10199:	44 89 f9             	mov    %r15d,%ecx
   1019c:	45 01 ea             	add    %r13d,%r10d
   1019f:	45 89 fd             	mov    %r15d,%r13d
   101a2:	c1 c9 0b             	ror    $0xb,%ecx
   101a5:	41 c1 cd 06          	ror    $0x6,%r13d
   101a9:	45 01 d3             	add    %r10d,%r11d
   101ac:	45 89 54 24 60       	mov    %r10d,0x60(%r12)
   101b1:	41 89 f2             	mov    %esi,%r10d
   101b4:	44 31 e9             	xor    %r13d,%ecx
   101b7:	45 89 fd             	mov    %r15d,%r13d
   101ba:	41 21 da             	and    %ebx,%r10d
   101bd:	41 c1 c5 07          	rol    $0x7,%r13d
   101c1:	44 31 e9             	xor    %r13d,%ecx
   101c4:	45 89 cd             	mov    %r9d,%r13d
   101c7:	41 31 ed             	xor    %ebp,%r13d
   101ca:	45 21 fd             	and    %r15d,%r13d
   101cd:	45 31 cd             	xor    %r9d,%r13d
   101d0:	45 01 eb             	add    %r13d,%r11d
   101d3:	41 01 cb             	add    %ecx,%r11d
   101d6:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   101da:	44 01 d9             	add    %r11d,%ecx
   101dd:	41 89 db             	mov    %ebx,%r11d
   101e0:	45 8d 34 08          	lea    (%r8,%rcx,1),%r14d
   101e4:	41 89 d8             	mov    %ebx,%r8d
   101e7:	41 c1 cb 02          	ror    $0x2,%r11d
   101eb:	41 c1 c8 0d          	ror    $0xd,%r8d
   101ef:	45 89 f5             	mov    %r14d,%r13d
   101f2:	45 31 d8             	xor    %r11d,%r8d
   101f5:	41 89 db             	mov    %ebx,%r11d
   101f8:	41 c1 c3 0a          	rol    $0xa,%r11d
   101fc:	45 31 d8             	xor    %r11d,%r8d
   101ff:	41 89 f3             	mov    %esi,%r11d
   10202:	41 09 db             	or     %ebx,%r11d
   10205:	41 21 c3             	and    %eax,%r11d
   10208:	45 09 d3             	or     %r10d,%r11d
   1020b:	41 89 fa             	mov    %edi,%r10d
   1020e:	45 01 c3             	add    %r8d,%r11d
   10211:	41 c1 c2 0f          	rol    $0xf,%r10d
   10215:	45 8b 44 24 28       	mov    0x28(%r12),%r8d
   1021a:	41 01 cb             	add    %ecx,%r11d
   1021d:	89 f9                	mov    %edi,%ecx
   1021f:	c1 ef 0a             	shr    $0xa,%edi
   10222:	c1 c1 0d             	rol    $0xd,%ecx
   10225:	44 31 d1             	xor    %r10d,%ecx
   10228:	41 89 ea             	mov    %ebp,%r10d
   1022b:	31 f9                	xor    %edi,%ecx
   1022d:	03 14 24             	add    (%rsp),%edx
   10230:	44 89 c7             	mov    %r8d,%edi
   10233:	41 c1 cd 06          	ror    $0x6,%r13d
   10237:	01 d1                	add    %edx,%ecx
   10239:	44 89 c2             	mov    %r8d,%edx
   1023c:	c1 c7 0e             	rol    $0xe,%edi
   1023f:	45 31 fa             	xor    %r15d,%r10d
   10242:	c1 ca 07             	ror    $0x7,%edx
   10245:	41 c1 e8 03          	shr    $0x3,%r8d
   10249:	45 21 f2             	and    %r14d,%r10d
   1024c:	31 d7                	xor    %edx,%edi
   1024e:	44 89 f2             	mov    %r14d,%edx
   10251:	41 31 ea             	xor    %ebp,%r10d
   10254:	c1 ca 0b             	ror    $0xb,%edx
   10257:	44 31 c7             	xor    %r8d,%edi
   1025a:	41 31 d5             	xor    %edx,%r13d
   1025d:	44 89 f2             	mov    %r14d,%edx
   10260:	01 f9                	add    %edi,%ecx
   10262:	89 df                	mov    %ebx,%edi
   10264:	c1 c2 07             	rol    $0x7,%edx
   10267:	41 89 4c 24 64       	mov    %ecx,0x64(%r12)
   1026c:	41 01 c9             	add    %ecx,%r9d
   1026f:	44 89 d9             	mov    %r11d,%ecx
   10272:	41 31 d5             	xor    %edx,%r13d
   10275:	44 89 da             	mov    %r11d,%edx
   10278:	c1 c9 0d             	ror    $0xd,%ecx
   1027b:	44 21 df             	and    %r11d,%edi
   1027e:	c1 ca 02             	ror    $0x2,%edx
   10281:	45 01 d1             	add    %r10d,%r9d
   10284:	31 ca                	xor    %ecx,%edx
   10286:	44 89 d9             	mov    %r11d,%ecx
   10289:	45 01 e9             	add    %r13d,%r9d
   1028c:	44 03 4c 24 28       	add    0x28(%rsp),%r9d
   10291:	c1 c1 0a             	rol    $0xa,%ecx
   10294:	44 01 c8             	add    %r9d,%eax
   10297:	31 d1                	xor    %edx,%ecx
   10299:	89 da                	mov    %ebx,%edx
   1029b:	44 09 da             	or     %r11d,%edx
   1029e:	21 f2                	and    %esi,%edx
   102a0:	09 fa                	or     %edi,%edx
   102a2:	01 ca                	add    %ecx,%edx
   102a4:	49 83 c4 20          	add    $0x20,%r12
   102a8:	48 83 44 24 08 20    	addq   $0x20,0x8(%rsp)
   102ae:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   102b3:	45 8d 2c 11          	lea    (%r9,%rdx,1),%r13d
   102b7:	4c 39 64 24 30       	cmp    %r12,0x30(%rsp)
   102bc:	0f 85 76 fa ff ff    	jne    fd38 <mbedtls_internal_sha256_process+0x508>
   102c2:	89 84 24 68 01 00 00 	mov    %eax,0x168(%rsp)
   102c9:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   102ce:	31 c0                	xor    %eax,%eax
   102d0:	89 54 24 54          	mov    %edx,0x54(%rsp)
   102d4:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   102d9:	89 ac 24 74 01 00 00 	mov    %ebp,0x174(%rsp)
   102e0:	44 89 bc 24 70 01 00 	mov    %r15d,0x170(%rsp)
   102e7:	00 
   102e8:	44 89 b4 24 6c 01 00 	mov    %r14d,0x16c(%rsp)
   102ef:	00 
   102f0:	44 89 ac 24 58 01 00 	mov    %r13d,0x158(%rsp)
   102f7:	00 
   102f8:	44 89 9c 24 5c 01 00 	mov    %r11d,0x15c(%rsp)
   102ff:	00 
   10300:	89 9c 24 60 01 00 00 	mov    %ebx,0x160(%rsp)
   10307:	89 b4 24 64 01 00 00 	mov    %esi,0x164(%rsp)
   1030e:	44 89 4c 24 50       	mov    %r9d,0x50(%rsp)
   10313:	eb 07                	jmp    1031c <mbedtls_internal_sha256_process+0xaec>
   10315:	0f 1f 00             	nopl   (%rax)
   10318:	44 8b 2c 01          	mov    (%rcx,%rax,1),%r13d
   1031c:	44 01 6c 02 08       	add    %r13d,0x8(%rdx,%rax,1)
   10321:	48 83 c0 04          	add    $0x4,%rax
   10325:	48 83 f8 20          	cmp    $0x20,%rax
   10329:	75 ed                	jne    10318 <mbedtls_internal_sha256_process+0xae8>
   1032b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   10330:	be 28 01 00 00       	mov    $0x128,%esi
   10335:	e8 e6 4e ff ff       	callq  5220 <mbedtls_platform_zeroize>
   1033a:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   10341:	00 
   10342:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10349:	00 00 
   1034b:	75 14                	jne    10361 <mbedtls_internal_sha256_process+0xb31>
   1034d:	48 81 c4 88 01 00 00 	add    $0x188,%rsp
   10354:	31 c0                	xor    %eax,%eax
   10356:	5b                   	pop    %rbx
   10357:	5d                   	pop    %rbp
   10358:	41 5c                	pop    %r12
   1035a:	41 5d                	pop    %r13
   1035c:	41 5e                	pop    %r14
   1035e:	41 5f                	pop    %r15
   10360:	c3                   	retq   
   10361:	e8 fa 2e ff ff       	callq  3260 <__stack_chk_fail@plt>
   10366:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1036d:	00 00 00 

0000000000010370 <mbedtls_sha256_update.part.0>:
   10370:	41 56                	push   %r14
   10372:	41 55                	push   %r13
   10374:	49 89 d5             	mov    %rdx,%r13
   10377:	ba 40 00 00 00       	mov    $0x40,%edx
   1037c:	41 54                	push   %r12
   1037e:	49 89 fc             	mov    %rdi,%r12
   10381:	55                   	push   %rbp
   10382:	48 89 f5             	mov    %rsi,%rbp
   10385:	53                   	push   %rbx
   10386:	8b 07                	mov    (%rdi),%eax
   10388:	41 89 c6             	mov    %eax,%r14d
   1038b:	41 83 e6 3f          	and    $0x3f,%r14d
   1038f:	44 29 f2             	sub    %r14d,%edx
   10392:	44 01 e8             	add    %r13d,%eax
   10395:	89 07                	mov    %eax,(%rdi)
   10397:	89 d3                	mov    %edx,%ebx
   10399:	73 04                	jae    1039f <mbedtls_sha256_update.part.0+0x2f>
   1039b:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   1039f:	45 85 f6             	test   %r14d,%r14d
   103a2:	74 05                	je     103a9 <mbedtls_sha256_update.part.0+0x39>
   103a4:	4c 39 eb             	cmp    %r13,%rbx
   103a7:	76 69                	jbe    10412 <mbedtls_sha256_update.part.0+0xa2>
   103a9:	31 db                	xor    %ebx,%ebx
   103ab:	49 83 fd 3f          	cmp    $0x3f,%r13
   103af:	0f 86 69 01 00 00    	jbe    1051e <mbedtls_sha256_update.part.0+0x1ae>
   103b5:	0f 1f 00             	nopl   (%rax)
   103b8:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   103bd:	4c 89 e7             	mov    %r12,%rdi
   103c0:	e8 6b f4 ff ff       	callq  f830 <mbedtls_internal_sha256_process>
   103c5:	85 c0                	test   %eax,%eax
   103c7:	75 37                	jne    10400 <mbedtls_sha256_update.part.0+0x90>
   103c9:	48 83 c3 40          	add    $0x40,%rbx
   103cd:	4c 89 e8             	mov    %r13,%rax
   103d0:	48 29 d8             	sub    %rbx,%rax
   103d3:	48 83 f8 3f          	cmp    $0x3f,%rax
   103d7:	77 df                	ja     103b8 <mbedtls_sha256_update.part.0+0x48>
   103d9:	48 83 fb 3f          	cmp    $0x3f,%rbx
   103dd:	76 21                	jbe    10400 <mbedtls_sha256_update.part.0+0x90>
   103df:	48 01 dd             	add    %rbx,%rbp
   103e2:	45 31 c0             	xor    %r8d,%r8d
   103e5:	48 85 c0             	test   %rax,%rax
   103e8:	0f 85 b4 00 00 00    	jne    104a2 <mbedtls_sha256_update.part.0+0x132>
   103ee:	5b                   	pop    %rbx
   103ef:	44 89 c0             	mov    %r8d,%eax
   103f2:	5d                   	pop    %rbp
   103f3:	41 5c                	pop    %r12
   103f5:	41 5d                	pop    %r13
   103f7:	41 5e                	pop    %r14
   103f9:	c3                   	retq   
   103fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10400:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   10406:	5b                   	pop    %rbx
   10407:	5d                   	pop    %rbp
   10408:	44 89 c0             	mov    %r8d,%eax
   1040b:	41 5c                	pop    %r12
   1040d:	41 5d                	pop    %r13
   1040f:	41 5e                	pop    %r14
   10411:	c3                   	retq   
   10412:	4d 8d 44 24 28       	lea    0x28(%r12),%r8
   10417:	44 89 f0             	mov    %r14d,%eax
   1041a:	4c 01 c0             	add    %r8,%rax
   1041d:	83 fa 08             	cmp    $0x8,%edx
   10420:	73 3c                	jae    1045e <mbedtls_sha256_update.part.0+0xee>
   10422:	f6 c2 04             	test   $0x4,%dl
   10425:	0f 85 fb 00 00 00    	jne    10526 <mbedtls_sha256_update.part.0+0x1b6>
   1042b:	85 d2                	test   %edx,%edx
   1042d:	74 0f                	je     1043e <mbedtls_sha256_update.part.0+0xce>
   1042f:	0f b6 4d 00          	movzbl 0x0(%rbp),%ecx
   10433:	83 e2 02             	and    $0x2,%edx
   10436:	88 08                	mov    %cl,(%rax)
   10438:	0f 85 09 01 00 00    	jne    10547 <mbedtls_sha256_update.part.0+0x1d7>
   1043e:	4c 89 c6             	mov    %r8,%rsi
   10441:	4c 89 e7             	mov    %r12,%rdi
   10444:	e8 e7 f3 ff ff       	callq  f830 <mbedtls_internal_sha256_process>
   10449:	41 89 c0             	mov    %eax,%r8d
   1044c:	85 c0                	test   %eax,%eax
   1044e:	75 9e                	jne    103ee <mbedtls_sha256_update.part.0+0x7e>
   10450:	48 01 dd             	add    %rbx,%rbp
   10453:	49 29 dd             	sub    %rbx,%r13
   10456:	45 31 f6             	xor    %r14d,%r14d
   10459:	e9 4b ff ff ff       	jmpq   103a9 <mbedtls_sha256_update.part.0+0x39>
   1045e:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   10462:	48 8d 70 08          	lea    0x8(%rax),%rsi
   10466:	49 89 e9             	mov    %rbp,%r9
   10469:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1046d:	48 89 08             	mov    %rcx,(%rax)
   10470:	48 8b 4c 1d f8       	mov    -0x8(%rbp,%rbx,1),%rcx
   10475:	48 89 4c 18 f8       	mov    %rcx,-0x8(%rax,%rbx,1)
   1047a:	48 29 f0             	sub    %rsi,%rax
   1047d:	01 c2                	add    %eax,%edx
   1047f:	49 29 c1             	sub    %rax,%r9
   10482:	83 e2 f8             	and    $0xfffffff8,%edx
   10485:	83 fa 08             	cmp    $0x8,%edx
   10488:	72 b4                	jb     1043e <mbedtls_sha256_update.part.0+0xce>
   1048a:	83 e2 f8             	and    $0xfffffff8,%edx
   1048d:	31 c0                	xor    %eax,%eax
   1048f:	89 c1                	mov    %eax,%ecx
   10491:	83 c0 08             	add    $0x8,%eax
   10494:	49 8b 3c 09          	mov    (%r9,%rcx,1),%rdi
   10498:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   1049c:	39 d0                	cmp    %edx,%eax
   1049e:	72 ef                	jb     1048f <mbedtls_sha256_update.part.0+0x11f>
   104a0:	eb 9c                	jmp    1043e <mbedtls_sha256_update.part.0+0xce>
   104a2:	4b 8d 4c 34 28       	lea    0x28(%r12,%r14,1),%rcx
   104a7:	89 c2                	mov    %eax,%edx
   104a9:	83 f8 08             	cmp    $0x8,%eax
   104ac:	73 29                	jae    104d7 <mbedtls_sha256_update.part.0+0x167>
   104ae:	a8 04                	test   $0x4,%al
   104b0:	0f 85 82 00 00 00    	jne    10538 <mbedtls_sha256_update.part.0+0x1c8>
   104b6:	85 d2                	test   %edx,%edx
   104b8:	74 15                	je     104cf <mbedtls_sha256_update.part.0+0x15f>
   104ba:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   104be:	88 01                	mov    %al,(%rcx)
   104c0:	f6 c2 02             	test   $0x2,%dl
   104c3:	74 0a                	je     104cf <mbedtls_sha256_update.part.0+0x15f>
   104c5:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   104ca:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   104cf:	45 31 c0             	xor    %r8d,%r8d
   104d2:	e9 17 ff ff ff       	jmpq   103ee <mbedtls_sha256_update.part.0+0x7e>
   104d7:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   104db:	48 89 11             	mov    %rdx,(%rcx)
   104de:	89 c2                	mov    %eax,%edx
   104e0:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   104e5:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   104ea:	48 8d 71 08          	lea    0x8(%rcx),%rsi
   104ee:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   104f2:	48 29 f1             	sub    %rsi,%rcx
   104f5:	48 89 ca             	mov    %rcx,%rdx
   104f8:	48 29 cd             	sub    %rcx,%rbp
   104fb:	01 c2                	add    %eax,%edx
   104fd:	83 e2 f8             	and    $0xfffffff8,%edx
   10500:	83 fa 08             	cmp    $0x8,%edx
   10503:	72 ca                	jb     104cf <mbedtls_sha256_update.part.0+0x15f>
   10505:	83 e2 f8             	and    $0xfffffff8,%edx
   10508:	31 c0                	xor    %eax,%eax
   1050a:	89 c1                	mov    %eax,%ecx
   1050c:	83 c0 08             	add    $0x8,%eax
   1050f:	48 8b 7c 0d 00       	mov    0x0(%rbp,%rcx,1),%rdi
   10514:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   10518:	39 d0                	cmp    %edx,%eax
   1051a:	72 ee                	jb     1050a <mbedtls_sha256_update.part.0+0x19a>
   1051c:	eb b1                	jmp    104cf <mbedtls_sha256_update.part.0+0x15f>
   1051e:	4c 89 e8             	mov    %r13,%rax
   10521:	e9 bc fe ff ff       	jmpq   103e2 <mbedtls_sha256_update.part.0+0x72>
   10526:	8b 55 00             	mov    0x0(%rbp),%edx
   10529:	89 10                	mov    %edx,(%rax)
   1052b:	8b 54 1d fc          	mov    -0x4(%rbp,%rbx,1),%edx
   1052f:	89 54 18 fc          	mov    %edx,-0x4(%rax,%rbx,1)
   10533:	e9 06 ff ff ff       	jmpq   1043e <mbedtls_sha256_update.part.0+0xce>
   10538:	8b 45 00             	mov    0x0(%rbp),%eax
   1053b:	89 01                	mov    %eax,(%rcx)
   1053d:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   10541:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   10545:	eb 88                	jmp    104cf <mbedtls_sha256_update.part.0+0x15f>
   10547:	0f b7 54 1d fe       	movzwl -0x2(%rbp,%rbx,1),%edx
   1054c:	66 89 54 18 fe       	mov    %dx,-0x2(%rax,%rbx,1)
   10551:	e9 e8 fe ff ff       	jmpq   1043e <mbedtls_sha256_update.part.0+0xce>
   10556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1055d:	00 00 00 

0000000000010560 <mbedtls_sha256_update>:
   10560:	f3 0f 1e fa          	endbr64 
   10564:	48 85 d2             	test   %rdx,%rdx
   10567:	74 07                	je     10570 <mbedtls_sha256_update+0x10>
   10569:	e9 02 fe ff ff       	jmpq   10370 <mbedtls_sha256_update.part.0>
   1056e:	66 90                	xchg   %ax,%ax
   10570:	31 c0                	xor    %eax,%eax
   10572:	c3                   	retq   
   10573:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1057a:	00 00 00 00 
   1057e:	66 90                	xchg   %ax,%ax

0000000000010580 <mbedtls_sha256_finish>:
   10580:	f3 0f 1e fa          	endbr64 
   10584:	41 54                	push   %r12
   10586:	4c 8d 67 28          	lea    0x28(%rdi),%r12
   1058a:	55                   	push   %rbp
   1058b:	48 89 f5             	mov    %rsi,%rbp
   1058e:	53                   	push   %rbx
   1058f:	8b 07                	mov    (%rdi),%eax
   10591:	48 89 fb             	mov    %rdi,%rbx
   10594:	83 e0 3f             	and    $0x3f,%eax
   10597:	8d 48 01             	lea    0x1(%rax),%ecx
   1059a:	c6 44 07 28 80       	movb   $0x80,0x28(%rdi,%rax,1)
   1059f:	89 c8                	mov    %ecx,%eax
   105a1:	4c 01 e0             	add    %r12,%rax
   105a4:	83 f9 38             	cmp    $0x38,%ecx
   105a7:	77 57                	ja     10600 <mbedtls_sha256_finish+0x80>
   105a9:	ba 38 00 00 00       	mov    $0x38,%edx
   105ae:	31 ff                	xor    %edi,%edi
   105b0:	29 ca                	sub    %ecx,%edx
   105b2:	83 fa 08             	cmp    $0x8,%edx
   105b5:	72 79                	jb     10630 <mbedtls_sha256_finish+0xb0>
   105b7:	89 d1                	mov    %edx,%ecx
   105b9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   105c0:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   105c7:	00 00 
   105c9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   105cd:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   105d1:	48 29 c8             	sub    %rcx,%rax
   105d4:	01 c2                	add    %eax,%edx
   105d6:	83 e2 f8             	and    $0xfffffff8,%edx
   105d9:	83 fa 08             	cmp    $0x8,%edx
   105dc:	0f 82 8b 00 00 00    	jb     1066d <mbedtls_sha256_finish+0xed>
   105e2:	83 e2 f8             	and    $0xfffffff8,%edx
   105e5:	31 c0                	xor    %eax,%eax
   105e7:	89 c6                	mov    %eax,%esi
   105e9:	83 c0 08             	add    $0x8,%eax
   105ec:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   105f0:	39 d0                	cmp    %edx,%eax
   105f2:	72 f3                	jb     105e7 <mbedtls_sha256_finish+0x67>
   105f4:	eb 77                	jmp    1066d <mbedtls_sha256_finish+0xed>
   105f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   105fd:	00 00 00 
   10600:	ba 40 00 00 00       	mov    $0x40,%edx
   10605:	29 ca                	sub    %ecx,%edx
   10607:	89 d1                	mov    %edx,%ecx
   10609:	74 0f                	je     1061a <mbedtls_sha256_finish+0x9a>
   1060b:	31 d2                	xor    %edx,%edx
   1060d:	89 d6                	mov    %edx,%esi
   1060f:	83 c2 01             	add    $0x1,%edx
   10612:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   10616:	39 ca                	cmp    %ecx,%edx
   10618:	72 f3                	jb     1060d <mbedtls_sha256_finish+0x8d>
   1061a:	4c 89 e6             	mov    %r12,%rsi
   1061d:	48 89 df             	mov    %rbx,%rdi
   10620:	e8 0b f2 ff ff       	callq  f830 <mbedtls_internal_sha256_process>
   10625:	85 c0                	test   %eax,%eax
   10627:	74 27                	je     10650 <mbedtls_sha256_finish+0xd0>
   10629:	5b                   	pop    %rbx
   1062a:	5d                   	pop    %rbp
   1062b:	41 5c                	pop    %r12
   1062d:	c3                   	retq   
   1062e:	66 90                	xchg   %ax,%ax
   10630:	f6 c2 04             	test   $0x4,%dl
   10633:	0f 85 b7 00 00 00    	jne    106f0 <mbedtls_sha256_finish+0x170>
   10639:	85 d2                	test   %edx,%edx
   1063b:	74 30                	je     1066d <mbedtls_sha256_finish+0xed>
   1063d:	c6 00 00             	movb   $0x0,(%rax)
   10640:	f6 c2 02             	test   $0x2,%dl
   10643:	74 28                	je     1066d <mbedtls_sha256_finish+0xed>
   10645:	31 c9                	xor    %ecx,%ecx
   10647:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   1064c:	eb 1f                	jmp    1066d <mbedtls_sha256_finish+0xed>
   1064e:	66 90                	xchg   %ax,%ax
   10650:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10654:	0f 11 43 28          	movups %xmm0,0x28(%rbx)
   10658:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
   1065f:	00 00 
   10661:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
   10667:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
   1066d:	8b 13                	mov    (%rbx),%edx
   1066f:	8b 43 04             	mov    0x4(%rbx),%eax
   10672:	4c 89 e6             	mov    %r12,%rsi
   10675:	48 89 df             	mov    %rbx,%rdi
   10678:	89 d1                	mov    %edx,%ecx
   1067a:	c1 e0 03             	shl    $0x3,%eax
   1067d:	c1 e9 1d             	shr    $0x1d,%ecx
   10680:	c1 e2 03             	shl    $0x3,%edx
   10683:	09 c8                	or     %ecx,%eax
   10685:	0f ca                	bswap  %edx
   10687:	89 53 64             	mov    %edx,0x64(%rbx)
   1068a:	0f c8                	bswap  %eax
   1068c:	89 43 60             	mov    %eax,0x60(%rbx)
   1068f:	e8 9c f1 ff ff       	callq  f830 <mbedtls_internal_sha256_process>
   10694:	85 c0                	test   %eax,%eax
   10696:	75 91                	jne    10629 <mbedtls_sha256_finish+0xa9>
   10698:	8b 53 08             	mov    0x8(%rbx),%edx
   1069b:	0f ca                	bswap  %edx
   1069d:	89 55 00             	mov    %edx,0x0(%rbp)
   106a0:	8b 53 0c             	mov    0xc(%rbx),%edx
   106a3:	0f ca                	bswap  %edx
   106a5:	89 55 04             	mov    %edx,0x4(%rbp)
   106a8:	8b 53 10             	mov    0x10(%rbx),%edx
   106ab:	0f ca                	bswap  %edx
   106ad:	89 55 08             	mov    %edx,0x8(%rbp)
   106b0:	8b 53 14             	mov    0x14(%rbx),%edx
   106b3:	0f ca                	bswap  %edx
   106b5:	89 55 0c             	mov    %edx,0xc(%rbp)
   106b8:	8b 53 18             	mov    0x18(%rbx),%edx
   106bb:	0f ca                	bswap  %edx
   106bd:	89 55 10             	mov    %edx,0x10(%rbp)
   106c0:	8b 53 1c             	mov    0x1c(%rbx),%edx
   106c3:	0f ca                	bswap  %edx
   106c5:	89 55 14             	mov    %edx,0x14(%rbp)
   106c8:	8b 53 20             	mov    0x20(%rbx),%edx
   106cb:	0f ca                	bswap  %edx
   106cd:	89 55 18             	mov    %edx,0x18(%rbp)
   106d0:	8b 53 68             	mov    0x68(%rbx),%edx
   106d3:	85 d2                	test   %edx,%edx
   106d5:	0f 85 4e ff ff ff    	jne    10629 <mbedtls_sha256_finish+0xa9>
   106db:	8b 53 24             	mov    0x24(%rbx),%edx
   106de:	5b                   	pop    %rbx
   106df:	0f ca                	bswap  %edx
   106e1:	89 55 1c             	mov    %edx,0x1c(%rbp)
   106e4:	5d                   	pop    %rbp
   106e5:	41 5c                	pop    %r12
   106e7:	c3                   	retq   
   106e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   106ef:	00 
   106f0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   106f6:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   106fd:	00 
   106fe:	e9 6a ff ff ff       	jmpq   1066d <mbedtls_sha256_finish+0xed>
   10703:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1070a:	00 00 00 00 
   1070e:	66 90                	xchg   %ax,%ax

0000000000010710 <mbedtls_sha256_common_self_test>:
   10710:	41 57                	push   %r15
   10712:	41 56                	push   %r14
   10714:	41 55                	push   %r13
   10716:	41 89 f5             	mov    %esi,%r13d
   10719:	41 54                	push   %r12
   1071b:	41 89 fc             	mov    %edi,%r12d
   1071e:	bf 00 04 00 00       	mov    $0x400,%edi
   10723:	55                   	push   %rbp
   10724:	48 8d 2d 15 34 01 00 	lea    0x13415(%rip),%rbp        # 23b40 <sha224_test_sum>
   1072b:	53                   	push   %rbx
   1072c:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   10733:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1073a:	00 00 
   1073c:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   10743:	00 
   10744:	31 c0                	xor    %eax,%eax
   10746:	85 f6                	test   %esi,%esi
   10748:	48 8d 05 91 33 01 00 	lea    0x13391(%rip),%rax        # 23ae0 <sha256_test_sum>
   1074f:	be 01 00 00 00       	mov    $0x1,%esi
   10754:	48 0f 44 e8          	cmove  %rax,%rbp
   10758:	e8 63 2b ff ff       	callq  32c0 <calloc@plt>
   1075d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10762:	48 85 c0             	test   %rax,%rax
   10765:	0f 84 a9 02 00 00    	je     10a14 <mbedtls_sha256_common_self_test+0x304>
   1076b:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   10770:	31 c0                	xor    %eax,%eax
   10772:	b9 0d 00 00 00       	mov    $0xd,%ecx
   10777:	31 db                	xor    %ebx,%ebx
   10779:	4c 89 f7             	mov    %r14,%rdi
   1077c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1077f:	b8 08 00 00 00       	mov    $0x8,%eax
   10784:	44 29 e8             	sub    %r13d,%eax
   10787:	89 c1                	mov    %eax,%ecx
   10789:	c1 e0 02             	shl    $0x2,%eax
   1078c:	c1 e1 05             	shl    $0x5,%ecx
   1078f:	48 89 04 24          	mov    %rax,(%rsp)
   10793:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   10797:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1079d:	45 85 e4             	test   %r12d,%r12d
   107a0:	0f 85 ea 01 00 00    	jne    10990 <mbedtls_sha256_common_self_test+0x280>
   107a6:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   107ad:	00 00 
   107af:	45 85 ed             	test   %r13d,%r13d
   107b2:	0f 85 28 01 00 00    	jne    108e0 <mbedtls_sha256_common_self_test+0x1d0>
   107b8:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   107bf:	ae 67 bb 
   107c2:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
   107c9:	00 
   107ca:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   107cf:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   107d6:	f5 4f a5 
   107d9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   107de:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   107e5:	68 05 9b 
   107e8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   107ed:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   107f4:	cd e0 5b 
   107f7:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   107fc:	48 83 fb 02          	cmp    $0x2,%rbx
   10800:	0f 84 28 01 00 00    	je     1092e <mbedtls_sha256_common_self_test+0x21e>
   10806:	48 8d 05 93 33 01 00 	lea    0x13393(%rip),%rax        # 23ba0 <sha_test_buflen>
   1080d:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   10811:	48 85 d2             	test   %rdx,%rdx
   10814:	74 29                	je     1083f <mbedtls_sha256_common_self_test+0x12f>
   10816:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   1081d:	00 
   1081e:	4c 89 f7             	mov    %r14,%rdi
   10821:	48 29 d8             	sub    %rbx,%rax
   10824:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
   10828:	48 8d 05 91 33 01 00 	lea    0x13391(%rip),%rax        # 23bc0 <sha_test_buf>
   1082f:	48 01 c6             	add    %rax,%rsi
   10832:	e8 39 fb ff ff       	callq  10370 <mbedtls_sha256_update.part.0>
   10837:	85 c0                	test   %eax,%eax
   10839:	0f 85 3f 01 00 00    	jne    1097e <mbedtls_sha256_common_self_test+0x26e>
   1083f:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   10846:	00 
   10847:	4c 89 f7             	mov    %r14,%rdi
   1084a:	4c 89 fe             	mov    %r15,%rsi
   1084d:	e8 2e fd ff ff       	callq  10580 <mbedtls_sha256_finish>
   10852:	85 c0                	test   %eax,%eax
   10854:	0f 85 24 01 00 00    	jne    1097e <mbedtls_sha256_common_self_test+0x26e>
   1085a:	48 8b 14 24          	mov    (%rsp),%rdx
   1085e:	48 89 ee             	mov    %rbp,%rsi
   10861:	4c 89 ff             	mov    %r15,%rdi
   10864:	e8 37 2a ff ff       	callq  32a0 <memcmp@plt>
   10869:	85 c0                	test   %eax,%eax
   1086b:	0f 85 8f 01 00 00    	jne    10a00 <mbedtls_sha256_common_self_test+0x2f0>
   10871:	45 85 e4             	test   %r12d,%r12d
   10874:	0f 85 36 01 00 00    	jne    109b0 <mbedtls_sha256_common_self_test+0x2a0>
   1087a:	48 83 c3 01          	add    $0x1,%rbx
   1087e:	48 83 c5 20          	add    $0x20,%rbp
   10882:	48 83 fb 03          	cmp    $0x3,%rbx
   10886:	0f 85 11 ff ff ff    	jne    1079d <mbedtls_sha256_common_self_test+0x8d>
   1088c:	45 85 e4             	test   %r12d,%r12d
   1088f:	0f 85 33 01 00 00    	jne    109c8 <mbedtls_sha256_common_self_test+0x2b8>
   10895:	be 6c 00 00 00       	mov    $0x6c,%esi
   1089a:	4c 89 f7             	mov    %r14,%rdi
   1089d:	45 89 e5             	mov    %r12d,%r13d
   108a0:	e8 7b 49 ff ff       	callq  5220 <mbedtls_platform_zeroize>
   108a5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   108aa:	e8 31 29 ff ff       	callq  31e0 <free@plt>
   108af:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   108b6:	00 
   108b7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   108be:	00 00 
   108c0:	0f 85 6e 01 00 00    	jne    10a34 <mbedtls_sha256_common_self_test+0x324>
   108c6:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   108cd:	44 89 e8             	mov    %r13d,%eax
   108d0:	5b                   	pop    %rbx
   108d1:	5d                   	pop    %rbp
   108d2:	41 5c                	pop    %r12
   108d4:	41 5d                	pop    %r13
   108d6:	41 5e                	pop    %r14
   108d8:	41 5f                	pop    %r15
   108da:	c3                   	retq   
   108db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   108e0:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   108e7:	d5 7c 36 
   108ea:	44 89 ac 24 88 00 00 	mov    %r13d,0x88(%rsp)
   108f1:	00 
   108f2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   108f7:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   108fe:	59 0e f7 
   10901:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10906:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   1090d:	15 58 68 
   10910:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10915:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   1091c:	4f fa be 
   1091f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   10924:	48 83 fb 02          	cmp    $0x2,%rbx
   10928:	0f 85 d8 fe ff ff    	jne    10806 <mbedtls_sha256_common_self_test+0xf6>
   1092e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   10933:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   10938:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1093d:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   10944:	61 61 61 
   10947:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1094c:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   10952:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10955:	eb 13                	jmp    1096a <mbedtls_sha256_common_self_test+0x25a>
   10957:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1095e:	00 00 
   10960:	41 83 ef 01          	sub    $0x1,%r15d
   10964:	0f 84 a0 00 00 00    	je     10a0a <mbedtls_sha256_common_self_test+0x2fa>
   1096a:	ba e8 03 00 00       	mov    $0x3e8,%edx
   1096f:	48 89 de             	mov    %rbx,%rsi
   10972:	4c 89 f7             	mov    %r14,%rdi
   10975:	e8 f6 f9 ff ff       	callq  10370 <mbedtls_sha256_update.part.0>
   1097a:	85 c0                	test   %eax,%eax
   1097c:	74 e2                	je     10960 <mbedtls_sha256_common_self_test+0x250>
   1097e:	89 c2                	mov    %eax,%edx
   10980:	45 85 e4             	test   %r12d,%r12d
   10983:	75 5b                	jne    109e0 <mbedtls_sha256_common_self_test+0x2d0>
   10985:	41 89 d4             	mov    %edx,%r12d
   10988:	e9 08 ff ff ff       	jmpq   10895 <mbedtls_sha256_common_self_test+0x185>
   1098d:	0f 1f 00             	nopl   (%rax)
   10990:	8b 54 24 14          	mov    0x14(%rsp),%edx
   10994:	8d 4b 01             	lea    0x1(%rbx),%ecx
   10997:	48 8d 35 26 31 01 00 	lea    0x13126(%rip),%rsi        # 23ac4 <sha1_test_buf+0xc4>
   1099e:	31 c0                	xor    %eax,%eax
   109a0:	bf 01 00 00 00       	mov    $0x1,%edi
   109a5:	e8 96 29 ff ff       	callq  3340 <__printf_chk@plt>
   109aa:	e9 f7 fd ff ff       	jmpq   107a6 <mbedtls_sha256_common_self_test+0x96>
   109af:	90                   	nop
   109b0:	48 8d 3d 2b 28 01 00 	lea    0x1282b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   109b7:	e8 44 28 ff ff       	callq  3200 <puts@plt>
   109bc:	e9 b9 fe ff ff       	jmpq   1087a <mbedtls_sha256_common_self_test+0x16a>
   109c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   109c8:	bf 0a 00 00 00       	mov    $0xa,%edi
   109cd:	45 31 e4             	xor    %r12d,%r12d
   109d0:	e8 1b 28 ff ff       	callq  31f0 <putchar@plt>
   109d5:	e9 bb fe ff ff       	jmpq   10895 <mbedtls_sha256_common_self_test+0x185>
   109da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   109e0:	48 8d 3d d6 30 01 00 	lea    0x130d6(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   109e7:	89 14 24             	mov    %edx,(%rsp)
   109ea:	e8 11 28 ff ff       	callq  3200 <puts@plt>
   109ef:	8b 14 24             	mov    (%rsp),%edx
   109f2:	41 89 d4             	mov    %edx,%r12d
   109f5:	e9 9b fe ff ff       	jmpq   10895 <mbedtls_sha256_common_self_test+0x185>
   109fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10a00:	ba 01 00 00 00       	mov    $0x1,%edx
   10a05:	e9 76 ff ff ff       	jmpq   10980 <mbedtls_sha256_common_self_test+0x270>
   10a0a:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   10a0f:	e9 2b fe ff ff       	jmpq   1083f <mbedtls_sha256_common_self_test+0x12f>
   10a14:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   10a1a:	45 85 e4             	test   %r12d,%r12d
   10a1d:	0f 84 8c fe ff ff    	je     108af <mbedtls_sha256_common_self_test+0x19f>
   10a23:	48 8d 3d 81 30 01 00 	lea    0x13081(%rip),%rdi        # 23aab <sha1_test_buf+0xab>
   10a2a:	e8 d1 27 ff ff       	callq  3200 <puts@plt>
   10a2f:	e9 7b fe ff ff       	jmpq   108af <mbedtls_sha256_common_self_test+0x19f>
   10a34:	e8 27 28 ff ff       	callq  3260 <__stack_chk_fail@plt>
   10a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010a40 <mbedtls_sha256>:
   10a40:	f3 0f 1e fa          	endbr64 
   10a44:	41 55                	push   %r13
   10a46:	41 54                	push   %r12
   10a48:	55                   	push   %rbp
   10a49:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   10a4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10a54:	00 00 
   10a56:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   10a5b:	31 c0                	xor    %eax,%eax
   10a5d:	83 f9 01             	cmp    $0x1,%ecx
   10a60:	0f 87 12 01 00 00    	ja     10b78 <mbedtls_sha256+0x138>
   10a66:	49 89 f0             	mov    %rsi,%r8
   10a69:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   10a6e:	49 89 f9             	mov    %rdi,%r9
   10a71:	49 89 d5             	mov    %rdx,%r13
   10a74:	48 89 f7             	mov    %rsi,%rdi
   10a77:	89 ca                	mov    %ecx,%edx
   10a79:	b9 0c 00 00 00       	mov    $0xc,%ecx
   10a7e:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   10a85:	00 
   10a86:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10a89:	85 d2                	test   %edx,%edx
   10a8b:	0f 84 9f 00 00 00    	je     10b30 <mbedtls_sha256+0xf0>
   10a91:	48 b8 d8 9e 05 c1 07 	movabs $0x367cd507c1059ed8,%rax
   10a98:	d5 7c 36 
   10a9b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10aa0:	48 b8 17 dd 70 30 39 	movabs $0xf70e59393070dd17,%rax
   10aa7:	59 0e f7 
   10aaa:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10aaf:	48 b8 31 0b c0 ff 11 	movabs $0x68581511ffc00b31,%rax
   10ab6:	15 58 68 
   10ab9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10abe:	48 b8 a7 8f f9 64 a4 	movabs $0xbefa4fa464f98fa7,%rax
   10ac5:	4f fa be 
   10ac8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   10acd:	89 54 24 68          	mov    %edx,0x68(%rsp)
   10ad1:	48 89 e5             	mov    %rsp,%rbp
   10ad4:	4d 85 c0             	test   %r8,%r8
   10ad7:	74 15                	je     10aee <mbedtls_sha256+0xae>
   10ad9:	4c 89 c2             	mov    %r8,%rdx
   10adc:	4c 89 ce             	mov    %r9,%rsi
   10adf:	48 89 ef             	mov    %rbp,%rdi
   10ae2:	e8 89 f8 ff ff       	callq  10370 <mbedtls_sha256_update.part.0>
   10ae7:	41 89 c4             	mov    %eax,%r12d
   10aea:	85 c0                	test   %eax,%eax
   10aec:	75 0e                	jne    10afc <mbedtls_sha256+0xbc>
   10aee:	4c 89 ee             	mov    %r13,%rsi
   10af1:	48 89 ef             	mov    %rbp,%rdi
   10af4:	e8 87 fa ff ff       	callq  10580 <mbedtls_sha256_finish>
   10af9:	41 89 c4             	mov    %eax,%r12d
   10afc:	be 6c 00 00 00       	mov    $0x6c,%esi
   10b01:	48 89 ef             	mov    %rbp,%rdi
   10b04:	e8 17 47 ff ff       	callq  5220 <mbedtls_platform_zeroize>
   10b09:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   10b0e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10b15:	00 00 
   10b17:	75 67                	jne    10b80 <mbedtls_sha256+0x140>
   10b19:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   10b1d:	44 89 e0             	mov    %r12d,%eax
   10b20:	5d                   	pop    %rbp
   10b21:	41 5c                	pop    %r12
   10b23:	41 5d                	pop    %r13
   10b25:	c3                   	retq   
   10b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10b2d:	00 00 00 
   10b30:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   10b37:	ae 67 bb 
   10b3a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10b3f:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   10b46:	f5 4f a5 
   10b49:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10b4e:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   10b55:	68 05 9b 
   10b58:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10b5d:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   10b64:	cd e0 5b 
   10b67:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   10b6c:	e9 5c ff ff ff       	jmpq   10acd <mbedtls_sha256+0x8d>
   10b71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b78:	41 bc 8c ff ff ff    	mov    $0xffffff8c,%r12d
   10b7e:	eb 89                	jmp    10b09 <mbedtls_sha256+0xc9>
   10b80:	e8 db 26 ff ff       	callq  3260 <__stack_chk_fail@plt>
   10b85:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10b8c:	00 00 00 00 

0000000000010b90 <mbedtls_sha256_self_test>:
   10b90:	f3 0f 1e fa          	endbr64 
   10b94:	31 f6                	xor    %esi,%esi
   10b96:	e9 75 fb ff ff       	jmpq   10710 <mbedtls_sha256_common_self_test>
   10b9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010ba0 <mbedtls_sha224_self_test>:
   10ba0:	f3 0f 1e fa          	endbr64 
   10ba4:	be 01 00 00 00       	mov    $0x1,%esi
   10ba9:	e9 62 fb ff ff       	jmpq   10710 <mbedtls_sha256_common_self_test>
   10bae:	66 90                	xchg   %ax,%ax

0000000000010bb0 <mbedtls_sha512_init>:
   10bb0:	f3 0f 1e fa          	endbr64 
   10bb4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   10bbb:	48 89 f9             	mov    %rdi,%rcx
   10bbe:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   10bc2:	31 c0                	xor    %eax,%eax
   10bc4:	48 c7 87 c8 00 00 00 	movq   $0x0,0xc8(%rdi)
   10bcb:	00 00 00 00 
   10bcf:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   10bd3:	48 29 f9             	sub    %rdi,%rcx
   10bd6:	81 c1 d8 00 00 00    	add    $0xd8,%ecx
   10bdc:	c1 e9 03             	shr    $0x3,%ecx
   10bdf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10be2:	c3                   	retq   
   10be3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10bea:	00 00 00 00 
   10bee:	66 90                	xchg   %ax,%ax

0000000000010bf0 <mbedtls_sha512_free>:
   10bf0:	f3 0f 1e fa          	endbr64 
   10bf4:	48 85 ff             	test   %rdi,%rdi
   10bf7:	74 0f                	je     10c08 <mbedtls_sha512_free+0x18>
   10bf9:	be d8 00 00 00       	mov    $0xd8,%esi
   10bfe:	e9 1d 46 ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
   10c03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c08:	c3                   	retq   
   10c09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010c10 <mbedtls_sha512_clone>:
   10c10:	f3 0f 1e fa          	endbr64 
   10c14:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   10c18:	0f 11 07             	movups %xmm0,(%rdi)
   10c1b:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   10c20:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
   10c24:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   10c29:	0f 11 57 20          	movups %xmm2,0x20(%rdi)
   10c2d:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   10c32:	0f 11 5f 30          	movups %xmm3,0x30(%rdi)
   10c36:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   10c3b:	0f 11 67 40          	movups %xmm4,0x40(%rdi)
   10c3f:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   10c44:	0f 11 6f 50          	movups %xmm5,0x50(%rdi)
   10c48:	f3 0f 6f 76 60       	movdqu 0x60(%rsi),%xmm6
   10c4d:	0f 11 77 60          	movups %xmm6,0x60(%rdi)
   10c51:	f3 0f 6f 7e 70       	movdqu 0x70(%rsi),%xmm7
   10c56:	0f 11 7f 70          	movups %xmm7,0x70(%rdi)
   10c5a:	f3 0f 6f 86 80 00 00 	movdqu 0x80(%rsi),%xmm0
   10c61:	00 
   10c62:	0f 11 87 80 00 00 00 	movups %xmm0,0x80(%rdi)
   10c69:	f3 0f 6f 8e 90 00 00 	movdqu 0x90(%rsi),%xmm1
   10c70:	00 
   10c71:	0f 11 8f 90 00 00 00 	movups %xmm1,0x90(%rdi)
   10c78:	f3 0f 6f 96 a0 00 00 	movdqu 0xa0(%rsi),%xmm2
   10c7f:	00 
   10c80:	0f 11 97 a0 00 00 00 	movups %xmm2,0xa0(%rdi)
   10c87:	f3 0f 6f 9e b0 00 00 	movdqu 0xb0(%rsi),%xmm3
   10c8e:	00 
   10c8f:	0f 11 9f b0 00 00 00 	movups %xmm3,0xb0(%rdi)
   10c96:	f3 0f 6f a6 c0 00 00 	movdqu 0xc0(%rsi),%xmm4
   10c9d:	00 
   10c9e:	0f 11 a7 c0 00 00 00 	movups %xmm4,0xc0(%rdi)
   10ca5:	48 8b 86 d0 00 00 00 	mov    0xd0(%rsi),%rax
   10cac:	48 89 87 d0 00 00 00 	mov    %rax,0xd0(%rdi)
   10cb3:	c3                   	retq   
   10cb4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10cbb:	00 00 00 00 
   10cbf:	90                   	nop

0000000000010cc0 <mbedtls_sha512_starts>:
   10cc0:	f3 0f 1e fa          	endbr64 
   10cc4:	83 fe 01             	cmp    $0x1,%esi
   10cc7:	0f 87 13 01 00 00    	ja     10de0 <mbedtls_sha512_starts+0x120>
   10ccd:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   10cd4:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   10cdb:	00 
   10cdc:	85 f6                	test   %esi,%esi
   10cde:	0f 84 7c 00 00 00    	je     10d60 <mbedtls_sha512_starts+0xa0>
   10ce4:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   10ceb:	9d bb cb 
   10cee:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   10cf4:	48 89 47 10          	mov    %rax,0x10(%rdi)
   10cf8:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   10cff:	29 9a 62 
   10d02:	48 89 47 18          	mov    %rax,0x18(%rdi)
   10d06:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   10d0d:	01 59 91 
   10d10:	48 89 47 20          	mov    %rax,0x20(%rdi)
   10d14:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   10d1b:	ec 2f 15 
   10d1e:	48 89 47 28          	mov    %rax,0x28(%rdi)
   10d22:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   10d29:	26 33 67 
   10d2c:	48 89 47 30          	mov    %rax,0x30(%rdi)
   10d30:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   10d37:	4a b4 8e 
   10d3a:	48 89 47 38          	mov    %rax,0x38(%rdi)
   10d3e:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   10d45:	2e 0c db 
   10d48:	48 89 47 40          	mov    %rax,0x40(%rdi)
   10d4c:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   10d53:	48 b5 47 
   10d56:	48 89 47 48          	mov    %rax,0x48(%rdi)
   10d5a:	31 c0                	xor    %eax,%eax
   10d5c:	c3                   	retq   
   10d5d:	0f 1f 00             	nopl   (%rax)
   10d60:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   10d67:	e6 09 6a 
   10d6a:	89 b7 d0 00 00 00    	mov    %esi,0xd0(%rdi)
   10d70:	48 89 47 10          	mov    %rax,0x10(%rdi)
   10d74:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   10d7b:	ae 67 bb 
   10d7e:	48 89 47 18          	mov    %rax,0x18(%rdi)
   10d82:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   10d89:	f3 6e 3c 
   10d8c:	48 89 47 20          	mov    %rax,0x20(%rdi)
   10d90:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   10d97:	f5 4f a5 
   10d9a:	48 89 47 28          	mov    %rax,0x28(%rdi)
   10d9e:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   10da5:	52 0e 51 
   10da8:	48 89 47 30          	mov    %rax,0x30(%rdi)
   10dac:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   10db3:	68 05 9b 
   10db6:	48 89 47 38          	mov    %rax,0x38(%rdi)
   10dba:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   10dc1:	d9 83 1f 
   10dc4:	48 89 47 40          	mov    %rax,0x40(%rdi)
   10dc8:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   10dcf:	cd e0 5b 
   10dd2:	48 89 47 48          	mov    %rax,0x48(%rdi)
   10dd6:	31 c0                	xor    %eax,%eax
   10dd8:	c3                   	retq   
   10dd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10de0:	b8 8b ff ff ff       	mov    $0xffffff8b,%eax
   10de5:	c3                   	retq   
   10de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10ded:	00 00 00 

0000000000010df0 <mbedtls_internal_sha512_process>:
   10df0:	f3 0f 1e fa          	endbr64 
   10df4:	41 57                	push   %r15
   10df6:	48 89 f9             	mov    %rdi,%rcx
   10df9:	41 56                	push   %r14
   10dfb:	41 55                	push   %r13
   10dfd:	41 54                	push   %r12
   10dff:	55                   	push   %rbp
   10e00:	53                   	push   %rbx
   10e01:	48 81 ec 28 03 00 00 	sub    $0x328,%rsp
   10e08:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   10e0d:	48 8d 9c 24 d0 02 00 	lea    0x2d0(%rsp),%rbx
   10e14:	00 
   10e15:	48 89 df             	mov    %rbx,%rdi
   10e18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10e1f:	00 00 
   10e21:	48 89 84 24 18 03 00 	mov    %rax,0x318(%rsp)
   10e28:	00 
   10e29:	31 c0                	xor    %eax,%eax
   10e2b:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   10e30:	48 8b 54 01 10       	mov    0x10(%rcx,%rax,1),%rdx
   10e35:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   10e39:	48 83 c0 08          	add    $0x8,%rax
   10e3d:	48 83 f8 40          	cmp    $0x40,%rax
   10e41:	75 ed                	jne    10e30 <mbedtls_internal_sha512_process+0x40>
   10e43:	31 c0                	xor    %eax,%eax
   10e45:	4c 8d 54 24 50       	lea    0x50(%rsp),%r10
   10e4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10e50:	48 8b 14 06          	mov    (%rsi,%rax,1),%rdx
   10e54:	48 0f ca             	bswap  %rdx
   10e57:	49 89 14 02          	mov    %rdx,(%r10,%rax,1)
   10e5b:	48 83 c0 08          	add    $0x8,%rax
   10e5f:	48 3d 80 00 00 00    	cmp    $0x80,%rax
   10e65:	75 e9                	jne    10e50 <mbedtls_internal_sha512_process+0x60>
   10e67:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   10e6e:	00 
   10e6f:	4c 89 d1             	mov    %r10,%rcx
   10e72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10e78:	48 8b 41 70          	mov    0x70(%rcx),%rax
   10e7c:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   10e80:	48 83 c1 08          	add    $0x8,%rcx
   10e84:	48 89 c2             	mov    %rax,%rdx
   10e87:	49 89 c0             	mov    %rax,%r8
   10e8a:	48 c1 e8 06          	shr    $0x6,%rax
   10e8e:	49 c1 c0 03          	rol    $0x3,%r8
   10e92:	48 c1 ca 13          	ror    $0x13,%rdx
   10e96:	4c 31 c2             	xor    %r8,%rdx
   10e99:	49 89 f0             	mov    %rsi,%r8
   10e9c:	48 31 c2             	xor    %rax,%rdx
   10e9f:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
   10ea3:	48 03 41 40          	add    0x40(%rcx),%rax
   10ea7:	49 c1 c8 08          	ror    $0x8,%r8
   10eab:	48 01 c2             	add    %rax,%rdx
   10eae:	48 89 f0             	mov    %rsi,%rax
   10eb1:	48 c1 ee 07          	shr    $0x7,%rsi
   10eb5:	48 d1 c8             	ror    %rax
   10eb8:	4c 31 c0             	xor    %r8,%rax
   10ebb:	48 31 f0             	xor    %rsi,%rax
   10ebe:	48 01 d0             	add    %rdx,%rax
   10ec1:	48 89 41 78          	mov    %rax,0x78(%rcx)
   10ec5:	48 39 cf             	cmp    %rcx,%rdi
   10ec8:	75 ae                	jne    10e78 <mbedtls_internal_sha512_process+0x88>
   10eca:	48 8b 8c 24 d8 02 00 	mov    0x2d8(%rsp),%rcx
   10ed1:	00 
   10ed2:	48 8b 94 24 e0 02 00 	mov    0x2e0(%rsp),%rdx
   10ed9:	00 
   10eda:	49 bf 18 81 6d da d5 	movabs $0xab1c5ed5da6d8118,%r15
   10ee1:	5e 1c ab 
   10ee4:	48 8d 1d d5 31 01 00 	lea    0x131d5(%rip),%rbx        # 240c0 <K+0x40>
   10eeb:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   10ef0:	4c 8b 8c 24 08 03 00 	mov    0x308(%rsp),%r9
   10ef7:	00 
   10ef8:	49 bf 9b 4f 19 af a4 	movabs $0x923f82a4af194f9b,%r15
   10eff:	82 3f 92 
   10f02:	48 bd 2f 3b 4d ec cf 	movabs $0xb5c0fbcfec4d3b2f,%rbp
   10f09:	fb c0 b5 
   10f0c:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   10f11:	4c 8b 84 24 f0 02 00 	mov    0x2f0(%rsp),%r8
   10f18:	00 
   10f19:	49 bf 19 d0 05 b6 f1 	movabs $0x59f111f1b605d019,%r15
   10f20:	11 f1 59 
   10f23:	49 bd cd 65 ef 23 91 	movabs $0x7137449123ef65cd,%r13
   10f2a:	44 37 71 
   10f2d:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   10f32:	48 8b bc 24 00 03 00 	mov    0x300(%rsp),%rdi
   10f39:	00 
   10f3a:	49 bf 38 b5 48 f3 5b 	movabs $0x3956c25bf348b538,%r15
   10f41:	c2 56 39 
   10f44:	49 bc 22 ae 28 d7 98 	movabs $0x428a2f98d728ae22,%r12
   10f4b:	2f 8a 42 
   10f4e:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   10f53:	48 8b b4 24 f8 02 00 	mov    0x2f8(%rsp),%rsi
   10f5a:	00 
   10f5b:	49 89 d6             	mov    %rdx,%r14
   10f5e:	49 bf bc db 89 81 a5 	movabs $0xe9b5dba58189dbbc,%r15
   10f65:	db b5 e9 
   10f68:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   10f6d:	4c 8b 9c 24 d0 02 00 	mov    0x2d0(%rsp),%r11
   10f74:	00 
   10f75:	49 89 df             	mov    %rbx,%r15
   10f78:	48 89 cb             	mov    %rcx,%rbx
   10f7b:	48 8b 84 24 e8 02 00 	mov    0x2e8(%rsp),%rax
   10f82:	00 
   10f83:	eb 3f                	jmp    10fc4 <mbedtls_internal_sha512_process+0x1d4>
   10f85:	0f 1f 00             	nopl   (%rax)
   10f88:	49 8b 4f 18          	mov    0x18(%r15),%rcx
   10f8c:	4d 8b 27             	mov    (%r15),%r12
   10f8f:	49 83 c7 40          	add    $0x40,%r15
   10f93:	4d 8b 6f c8          	mov    -0x38(%r15),%r13
   10f97:	49 8b 6f d0          	mov    -0x30(%r15),%rbp
   10f9b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   10fa0:	49 8b 4f e0          	mov    -0x20(%r15),%rcx
   10fa4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   10fa9:	49 8b 4f e8          	mov    -0x18(%r15),%rcx
   10fad:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   10fb2:	49 8b 4f f0          	mov    -0x10(%r15),%rcx
   10fb6:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   10fbb:	49 8b 4f f8          	mov    -0x8(%r15),%rcx
   10fbf:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   10fc4:	4c 89 c1             	mov    %r8,%rcx
   10fc7:	4c 89 c2             	mov    %r8,%rdx
   10fca:	48 c1 c9 0e          	ror    $0xe,%rcx
   10fce:	48 c1 ca 12          	ror    $0x12,%rdx
   10fd2:	48 31 ca             	xor    %rcx,%rdx
   10fd5:	4c 89 c1             	mov    %r8,%rcx
   10fd8:	48 c1 c1 17          	rol    $0x17,%rcx
   10fdc:	48 31 ca             	xor    %rcx,%rdx
   10fdf:	48 89 f9             	mov    %rdi,%rcx
   10fe2:	48 31 f1             	xor    %rsi,%rcx
   10fe5:	4c 21 c1             	and    %r8,%rcx
   10fe8:	48 31 f9             	xor    %rdi,%rcx
   10feb:	49 03 7a 08          	add    0x8(%r10),%rdi
   10fef:	48 01 d1             	add    %rdx,%rcx
   10ff2:	49 03 0a             	add    (%r10),%rcx
   10ff5:	4c 89 da             	mov    %r11,%rdx
   10ff8:	49 01 c9             	add    %rcx,%r9
   10ffb:	48 c1 c2 1e          	rol    $0x1e,%rdx
   10fff:	4b 8d 0c 21          	lea    (%r9,%r12,1),%rcx
   11003:	4d 89 d9             	mov    %r11,%r9
   11006:	4d 89 dc             	mov    %r11,%r12
   11009:	49 c1 c9 1c          	ror    $0x1c,%r9
   1100d:	49 21 dc             	and    %rbx,%r12
   11010:	48 01 c8             	add    %rcx,%rax
   11013:	4c 31 ca             	xor    %r9,%rdx
   11016:	4d 89 d9             	mov    %r11,%r9
   11019:	49 c1 c1 19          	rol    $0x19,%r9
   1101d:	4c 31 ca             	xor    %r9,%rdx
   11020:	4d 89 d9             	mov    %r11,%r9
   11023:	49 09 d9             	or     %rbx,%r9
   11026:	4d 21 f1             	and    %r14,%r9
   11029:	4d 09 e1             	or     %r12,%r9
   1102c:	49 01 d1             	add    %rdx,%r9
   1102f:	48 89 c2             	mov    %rax,%rdx
   11032:	49 01 c9             	add    %rcx,%r9
   11035:	4c 89 c1             	mov    %r8,%rcx
   11038:	48 c1 ca 12          	ror    $0x12,%rdx
   1103c:	48 31 f1             	xor    %rsi,%rcx
   1103f:	48 21 c1             	and    %rax,%rcx
   11042:	48 31 f1             	xor    %rsi,%rcx
   11045:	48 01 cf             	add    %rcx,%rdi
   11048:	48 89 c1             	mov    %rax,%rcx
   1104b:	48 c1 c9 0e          	ror    $0xe,%rcx
   1104f:	48 31 ca             	xor    %rcx,%rdx
   11052:	48 89 c1             	mov    %rax,%rcx
   11055:	48 c1 c1 17          	rol    $0x17,%rcx
   11059:	48 31 ca             	xor    %rcx,%rdx
   1105c:	4c 89 c9             	mov    %r9,%rcx
   1105f:	49 03 72 10          	add    0x10(%r10),%rsi
   11063:	48 01 fa             	add    %rdi,%rdx
   11066:	48 c1 c1 1e          	rol    $0x1e,%rcx
   1106a:	4c 89 cf             	mov    %r9,%rdi
   1106d:	49 01 d5             	add    %rdx,%r13
   11070:	4c 89 ca             	mov    %r9,%rdx
   11073:	4c 21 df             	and    %r11,%rdi
   11076:	48 c1 ca 1c          	ror    $0x1c,%rdx
   1107a:	4d 01 ee             	add    %r13,%r14
   1107d:	48 31 d1             	xor    %rdx,%rcx
   11080:	4c 89 ca             	mov    %r9,%rdx
   11083:	48 c1 c2 19          	rol    $0x19,%rdx
   11087:	48 31 d1             	xor    %rdx,%rcx
   1108a:	4c 89 ca             	mov    %r9,%rdx
   1108d:	4c 09 da             	or     %r11,%rdx
   11090:	48 21 da             	and    %rbx,%rdx
   11093:	48 09 fa             	or     %rdi,%rdx
   11096:	4c 89 c7             	mov    %r8,%rdi
   11099:	48 31 c7             	xor    %rax,%rdi
   1109c:	48 01 ca             	add    %rcx,%rdx
   1109f:	4c 89 f1             	mov    %r14,%rcx
   110a2:	4c 21 f7             	and    %r14,%rdi
   110a5:	48 c1 c9 12          	ror    $0x12,%rcx
   110a9:	4c 01 ea             	add    %r13,%rdx
   110ac:	4c 31 c7             	xor    %r8,%rdi
   110af:	48 01 fe             	add    %rdi,%rsi
   110b2:	4c 89 f7             	mov    %r14,%rdi
   110b5:	48 c1 cf 0e          	ror    $0xe,%rdi
   110b9:	48 31 f9             	xor    %rdi,%rcx
   110bc:	4c 89 f7             	mov    %r14,%rdi
   110bf:	48 c1 c7 17          	rol    $0x17,%rdi
   110c3:	48 31 f9             	xor    %rdi,%rcx
   110c6:	4c 89 cf             	mov    %r9,%rdi
   110c9:	48 01 f1             	add    %rsi,%rcx
   110cc:	48 89 d6             	mov    %rdx,%rsi
   110cf:	48 01 cd             	add    %rcx,%rbp
   110d2:	48 89 d1             	mov    %rdx,%rcx
   110d5:	48 c1 c6 1e          	rol    $0x1e,%rsi
   110d9:	48 c1 c9 1c          	ror    $0x1c,%rcx
   110dd:	48 01 eb             	add    %rbp,%rbx
   110e0:	48 31 ce             	xor    %rcx,%rsi
   110e3:	48 89 d1             	mov    %rdx,%rcx
   110e6:	48 c1 c1 19          	rol    $0x19,%rcx
   110ea:	48 31 ce             	xor    %rcx,%rsi
   110ed:	4c 89 c9             	mov    %r9,%rcx
   110f0:	48 21 d7             	and    %rdx,%rdi
   110f3:	4d 03 42 18          	add    0x18(%r10),%r8
   110f7:	48 09 d1             	or     %rdx,%rcx
   110fa:	4c 21 d9             	and    %r11,%rcx
   110fd:	48 09 f9             	or     %rdi,%rcx
   11100:	48 89 c7             	mov    %rax,%rdi
   11103:	4c 31 f7             	xor    %r14,%rdi
   11106:	48 01 f1             	add    %rsi,%rcx
   11109:	48 89 de             	mov    %rbx,%rsi
   1110c:	48 21 df             	and    %rbx,%rdi
   1110f:	48 c1 ce 12          	ror    $0x12,%rsi
   11113:	48 01 e9             	add    %rbp,%rcx
   11116:	48 89 d5             	mov    %rdx,%rbp
   11119:	48 31 c7             	xor    %rax,%rdi
   1111c:	48 21 cd             	and    %rcx,%rbp
   1111f:	4c 01 c7             	add    %r8,%rdi
   11122:	49 89 d8             	mov    %rbx,%r8
   11125:	49 c1 c8 0e          	ror    $0xe,%r8
   11129:	4c 31 c6             	xor    %r8,%rsi
   1112c:	49 89 d8             	mov    %rbx,%r8
   1112f:	49 c1 c0 17          	rol    $0x17,%r8
   11133:	4c 31 c6             	xor    %r8,%rsi
   11136:	49 89 c8             	mov    %rcx,%r8
   11139:	48 01 fe             	add    %rdi,%rsi
   1113c:	48 89 cf             	mov    %rcx,%rdi
   1113f:	49 c1 c8 1c          	ror    $0x1c,%r8
   11143:	48 03 74 24 08       	add    0x8(%rsp),%rsi
   11148:	48 c1 c7 1e          	rol    $0x1e,%rdi
   1114c:	49 01 f3             	add    %rsi,%r11
   1114f:	4c 31 c7             	xor    %r8,%rdi
   11152:	49 89 c8             	mov    %rcx,%r8
   11155:	49 c1 c0 19          	rol    $0x19,%r8
   11159:	4c 31 c7             	xor    %r8,%rdi
   1115c:	49 89 d0             	mov    %rdx,%r8
   1115f:	49 09 c8             	or     %rcx,%r8
   11162:	4d 21 c8             	and    %r9,%r8
   11165:	49 09 e8             	or     %rbp,%r8
   11168:	48 89 cd             	mov    %rcx,%rbp
   1116b:	49 01 f8             	add    %rdi,%r8
   1116e:	4c 89 f7             	mov    %r14,%rdi
   11171:	48 31 df             	xor    %rbx,%rdi
   11174:	49 01 f0             	add    %rsi,%r8
   11177:	4c 89 de             	mov    %r11,%rsi
   1117a:	4c 21 df             	and    %r11,%rdi
   1117d:	49 03 42 20          	add    0x20(%r10),%rax
   11181:	48 c1 ce 0e          	ror    $0xe,%rsi
   11185:	4c 21 c5             	and    %r8,%rbp
   11188:	4c 31 f7             	xor    %r14,%rdi
   1118b:	4d 03 72 28          	add    0x28(%r10),%r14
   1118f:	48 01 c7             	add    %rax,%rdi
   11192:	4c 89 d8             	mov    %r11,%rax
   11195:	48 c1 c8 12          	ror    $0x12,%rax
   11199:	48 31 f0             	xor    %rsi,%rax
   1119c:	4c 89 de             	mov    %r11,%rsi
   1119f:	48 c1 c6 17          	rol    $0x17,%rsi
   111a3:	48 31 f0             	xor    %rsi,%rax
   111a6:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   111ab:	48 01 f8             	add    %rdi,%rax
   111ae:	4c 89 c7             	mov    %r8,%rdi
   111b1:	48 01 c6             	add    %rax,%rsi
   111b4:	4c 89 c0             	mov    %r8,%rax
   111b7:	48 c1 cf 1c          	ror    $0x1c,%rdi
   111bb:	48 c1 c0 1e          	rol    $0x1e,%rax
   111bf:	49 01 f1             	add    %rsi,%r9
   111c2:	48 31 c7             	xor    %rax,%rdi
   111c5:	4c 89 c0             	mov    %r8,%rax
   111c8:	48 c1 c0 19          	rol    $0x19,%rax
   111cc:	48 31 c7             	xor    %rax,%rdi
   111cf:	48 89 c8             	mov    %rcx,%rax
   111d2:	4c 09 c0             	or     %r8,%rax
   111d5:	48 21 d0             	and    %rdx,%rax
   111d8:	48 09 e8             	or     %rbp,%rax
   111db:	4c 89 c5             	mov    %r8,%rbp
   111de:	48 01 f8             	add    %rdi,%rax
   111e1:	4c 89 cf             	mov    %r9,%rdi
   111e4:	48 01 f0             	add    %rsi,%rax
   111e7:	48 89 de             	mov    %rbx,%rsi
   111ea:	48 c1 cf 12          	ror    $0x12,%rdi
   111ee:	4c 31 de             	xor    %r11,%rsi
   111f1:	4c 21 ce             	and    %r9,%rsi
   111f4:	48 31 de             	xor    %rbx,%rsi
   111f7:	49 01 f6             	add    %rsi,%r14
   111fa:	4c 89 ce             	mov    %r9,%rsi
   111fd:	48 c1 ce 0e          	ror    $0xe,%rsi
   11201:	48 31 fe             	xor    %rdi,%rsi
   11204:	4c 89 cf             	mov    %r9,%rdi
   11207:	48 c1 c7 17          	rol    $0x17,%rdi
   1120b:	48 31 fe             	xor    %rdi,%rsi
   1120e:	48 21 c5             	and    %rax,%rbp
   11211:	49 03 5a 30          	add    0x30(%r10),%rbx
   11215:	49 01 f6             	add    %rsi,%r14
   11218:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1121d:	4c 01 f6             	add    %r14,%rsi
   11220:	49 89 c6             	mov    %rax,%r14
   11223:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   11227:	48 89 c2             	mov    %rax,%rdx
   1122a:	49 c1 c6 1e          	rol    $0x1e,%r14
   1122e:	48 c1 ca 1c          	ror    $0x1c,%rdx
   11232:	4c 31 f2             	xor    %r14,%rdx
   11235:	49 89 c6             	mov    %rax,%r14
   11238:	49 c1 c6 19          	rol    $0x19,%r14
   1123c:	4c 31 f2             	xor    %r14,%rdx
   1123f:	4d 89 c6             	mov    %r8,%r14
   11242:	49 09 c6             	or     %rax,%r14
   11245:	49 21 ce             	and    %rcx,%r14
   11248:	49 09 ee             	or     %rbp,%r14
   1124b:	48 89 c5             	mov    %rax,%rbp
   1124e:	49 01 d6             	add    %rdx,%r14
   11251:	4c 89 da             	mov    %r11,%rdx
   11254:	4c 31 ca             	xor    %r9,%rdx
   11257:	49 01 f6             	add    %rsi,%r14
   1125a:	48 89 fe             	mov    %rdi,%rsi
   1125d:	48 21 fa             	and    %rdi,%rdx
   11260:	48 c1 ce 12          	ror    $0x12,%rsi
   11264:	4c 31 da             	xor    %r11,%rdx
   11267:	48 01 d3             	add    %rdx,%rbx
   1126a:	48 89 fa             	mov    %rdi,%rdx
   1126d:	48 c1 ca 0e          	ror    $0xe,%rdx
   11271:	48 31 f2             	xor    %rsi,%rdx
   11274:	48 89 fe             	mov    %rdi,%rsi
   11277:	48 c1 c6 17          	rol    $0x17,%rsi
   1127b:	48 31 f2             	xor    %rsi,%rdx
   1127e:	48 01 da             	add    %rbx,%rdx
   11281:	48 03 54 24 20       	add    0x20(%rsp),%rdx
   11286:	4c 89 f3             	mov    %r14,%rbx
   11289:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
   1128d:	4c 89 f1             	mov    %r14,%rcx
   11290:	48 c1 cb 1c          	ror    $0x1c,%rbx
   11294:	48 c1 c1 1e          	rol    $0x1e,%rcx
   11298:	48 31 cb             	xor    %rcx,%rbx
   1129b:	4c 89 f1             	mov    %r14,%rcx
   1129e:	48 c1 c1 19          	rol    $0x19,%rcx
   112a2:	48 31 cb             	xor    %rcx,%rbx
   112a5:	48 89 c1             	mov    %rax,%rcx
   112a8:	4c 09 f1             	or     %r14,%rcx
   112ab:	4c 21 c1             	and    %r8,%rcx
   112ae:	4c 21 f5             	and    %r14,%rbp
   112b1:	4d 03 5a 38          	add    0x38(%r10),%r11
   112b5:	49 83 c2 40          	add    $0x40,%r10
   112b9:	48 09 e9             	or     %rbp,%rcx
   112bc:	4c 89 cd             	mov    %r9,%rbp
   112bf:	48 31 fd             	xor    %rdi,%rbp
   112c2:	48 01 cb             	add    %rcx,%rbx
   112c5:	4c 89 f1             	mov    %r14,%rcx
   112c8:	48 21 f5             	and    %rsi,%rbp
   112cb:	48 01 d3             	add    %rdx,%rbx
   112ce:	48 89 f2             	mov    %rsi,%rdx
   112d1:	4c 31 cd             	xor    %r9,%rbp
   112d4:	48 c1 ca 12          	ror    $0x12,%rdx
   112d8:	49 89 dc             	mov    %rbx,%r12
   112db:	48 21 d9             	and    %rbx,%rcx
   112de:	49 01 eb             	add    %rbp,%r11
   112e1:	48 89 f5             	mov    %rsi,%rbp
   112e4:	49 c1 cc 1c          	ror    $0x1c,%r12
   112e8:	48 c1 cd 0e          	ror    $0xe,%rbp
   112ec:	48 31 d5             	xor    %rdx,%rbp
   112ef:	48 89 f2             	mov    %rsi,%rdx
   112f2:	48 c1 c2 17          	rol    $0x17,%rdx
   112f6:	48 31 d5             	xor    %rdx,%rbp
   112f9:	48 89 da             	mov    %rbx,%rdx
   112fc:	48 c1 c2 1e          	rol    $0x1e,%rdx
   11300:	4c 01 dd             	add    %r11,%rbp
   11303:	48 03 6c 24 28       	add    0x28(%rsp),%rbp
   11308:	49 31 d4             	xor    %rdx,%r12
   1130b:	48 89 da             	mov    %rbx,%rdx
   1130e:	49 01 e8             	add    %rbp,%r8
   11311:	48 c1 c2 19          	rol    $0x19,%rdx
   11315:	4c 31 e2             	xor    %r12,%rdx
   11318:	4d 89 f4             	mov    %r14,%r12
   1131b:	49 09 dc             	or     %rbx,%r12
   1131e:	49 21 c4             	and    %rax,%r12
   11321:	49 09 cc             	or     %rcx,%r12
   11324:	48 8d 0d d5 2f 01 00 	lea    0x12fd5(%rip),%rcx        # 24300 <K+0x280>
   1132b:	49 01 d4             	add    %rdx,%r12
   1132e:	4e 8d 5c 25 00       	lea    0x0(%rbp,%r12,1),%r11
   11333:	4c 39 f9             	cmp    %r15,%rcx
   11336:	0f 85 4c fc ff ff    	jne    10f88 <mbedtls_internal_sha512_process+0x198>
   1133c:	48 89 84 24 e8 02 00 	mov    %rax,0x2e8(%rsp)
   11343:	00 
   11344:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   11349:	31 c0                	xor    %eax,%eax
   1134b:	4c 89 8c 24 08 03 00 	mov    %r9,0x308(%rsp)
   11352:	00 
   11353:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   11358:	4c 89 84 24 f0 02 00 	mov    %r8,0x2f0(%rsp)
   1135f:	00 
   11360:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
   11367:	00 
   11368:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
   1136f:	00 
   11370:	4c 89 9c 24 d0 02 00 	mov    %r11,0x2d0(%rsp)
   11377:	00 
   11378:	48 89 9c 24 d8 02 00 	mov    %rbx,0x2d8(%rsp)
   1137f:	00 
   11380:	4c 89 b4 24 e0 02 00 	mov    %r14,0x2e0(%rsp)
   11387:	00 
   11388:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1138d:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   11392:	eb 08                	jmp    1139c <mbedtls_internal_sha512_process+0x5ac>
   11394:	0f 1f 40 00          	nopl   0x0(%rax)
   11398:	4c 8b 1c 01          	mov    (%rcx,%rax,1),%r11
   1139c:	4c 01 5c 02 10       	add    %r11,0x10(%rdx,%rax,1)
   113a1:	48 83 c0 08          	add    $0x8,%rax
   113a5:	48 83 f8 40          	cmp    $0x40,%rax
   113a9:	75 ed                	jne    11398 <mbedtls_internal_sha512_process+0x5a8>
   113ab:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   113b0:	be d0 02 00 00       	mov    $0x2d0,%esi
   113b5:	e8 66 3e ff ff       	callq  5220 <mbedtls_platform_zeroize>
   113ba:	48 8b 84 24 18 03 00 	mov    0x318(%rsp),%rax
   113c1:	00 
   113c2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   113c9:	00 00 
   113cb:	75 14                	jne    113e1 <mbedtls_internal_sha512_process+0x5f1>
   113cd:	48 81 c4 28 03 00 00 	add    $0x328,%rsp
   113d4:	31 c0                	xor    %eax,%eax
   113d6:	5b                   	pop    %rbx
   113d7:	5d                   	pop    %rbp
   113d8:	41 5c                	pop    %r12
   113da:	41 5d                	pop    %r13
   113dc:	41 5e                	pop    %r14
   113de:	41 5f                	pop    %r15
   113e0:	c3                   	retq   
   113e1:	e8 7a 1e ff ff       	callq  3260 <__stack_chk_fail@plt>
   113e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   113ed:	00 00 00 

00000000000113f0 <mbedtls_sha512_update.part.0>:
   113f0:	41 56                	push   %r14
   113f2:	41 55                	push   %r13
   113f4:	49 89 d5             	mov    %rdx,%r13
   113f7:	ba 80 00 00 00       	mov    $0x80,%edx
   113fc:	41 54                	push   %r12
   113fe:	49 89 fc             	mov    %rdi,%r12
   11401:	55                   	push   %rbp
   11402:	48 89 f5             	mov    %rsi,%rbp
   11405:	53                   	push   %rbx
   11406:	48 8b 07             	mov    (%rdi),%rax
   11409:	41 89 c6             	mov    %eax,%r14d
   1140c:	41 83 e6 7f          	and    $0x7f,%r14d
   11410:	44 29 f2             	sub    %r14d,%edx
   11413:	4c 01 e8             	add    %r13,%rax
   11416:	48 89 07             	mov    %rax,(%rdi)
   11419:	89 d3                	mov    %edx,%ebx
   1141b:	73 05                	jae    11422 <mbedtls_sha512_update.part.0+0x32>
   1141d:	48 83 47 08 01       	addq   $0x1,0x8(%rdi)
   11422:	45 85 f6             	test   %r14d,%r14d
   11425:	74 05                	je     1142c <mbedtls_sha512_update.part.0+0x3c>
   11427:	4c 39 eb             	cmp    %r13,%rbx
   1142a:	76 6e                	jbe    1149a <mbedtls_sha512_update.part.0+0xaa>
   1142c:	31 db                	xor    %ebx,%ebx
   1142e:	49 83 fd 7f          	cmp    $0x7f,%r13
   11432:	0f 86 3e 01 00 00    	jbe    11576 <mbedtls_sha512_update.part.0+0x186>
   11438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1143f:	00 
   11440:	48 8d 74 1d 00       	lea    0x0(%rbp,%rbx,1),%rsi
   11445:	4c 89 e7             	mov    %r12,%rdi
   11448:	e8 a3 f9 ff ff       	callq  10df0 <mbedtls_internal_sha512_process>
   1144d:	85 c0                	test   %eax,%eax
   1144f:	75 37                	jne    11488 <mbedtls_sha512_update.part.0+0x98>
   11451:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
   11455:	4c 89 e8             	mov    %r13,%rax
   11458:	48 29 d8             	sub    %rbx,%rax
   1145b:	48 83 f8 7f          	cmp    $0x7f,%rax
   1145f:	77 df                	ja     11440 <mbedtls_sha512_update.part.0+0x50>
   11461:	48 83 fb 7f          	cmp    $0x7f,%rbx
   11465:	76 21                	jbe    11488 <mbedtls_sha512_update.part.0+0x98>
   11467:	48 01 dd             	add    %rbx,%rbp
   1146a:	45 31 c0             	xor    %r8d,%r8d
   1146d:	48 85 c0             	test   %rax,%rax
   11470:	0f 85 9c 00 00 00    	jne    11512 <mbedtls_sha512_update.part.0+0x122>
   11476:	5b                   	pop    %rbx
   11477:	44 89 c0             	mov    %r8d,%eax
   1147a:	5d                   	pop    %rbp
   1147b:	41 5c                	pop    %r12
   1147d:	41 5d                	pop    %r13
   1147f:	41 5e                	pop    %r14
   11481:	c3                   	retq   
   11482:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11488:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   1148e:	5b                   	pop    %rbx
   1148f:	5d                   	pop    %rbp
   11490:	44 89 c0             	mov    %r8d,%eax
   11493:	41 5c                	pop    %r12
   11495:	41 5d                	pop    %r13
   11497:	41 5e                	pop    %r14
   11499:	c3                   	retq   
   1149a:	4d 8d 44 24 50       	lea    0x50(%r12),%r8
   1149f:	44 89 f1             	mov    %r14d,%ecx
   114a2:	4c 01 c1             	add    %r8,%rcx
   114a5:	83 fa 08             	cmp    $0x8,%edx
   114a8:	73 3c                	jae    114e6 <mbedtls_sha512_update.part.0+0xf6>
   114aa:	f6 c2 04             	test   $0x4,%dl
   114ad:	0f 85 cb 00 00 00    	jne    1157e <mbedtls_sha512_update.part.0+0x18e>
   114b3:	85 d2                	test   %edx,%edx
   114b5:	74 0f                	je     114c6 <mbedtls_sha512_update.part.0+0xd6>
   114b7:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   114bb:	83 e2 02             	and    $0x2,%edx
   114be:	88 01                	mov    %al,(%rcx)
   114c0:	0f 85 d9 00 00 00    	jne    1159f <mbedtls_sha512_update.part.0+0x1af>
   114c6:	4c 89 c6             	mov    %r8,%rsi
   114c9:	4c 89 e7             	mov    %r12,%rdi
   114cc:	e8 1f f9 ff ff       	callq  10df0 <mbedtls_internal_sha512_process>
   114d1:	41 89 c0             	mov    %eax,%r8d
   114d4:	85 c0                	test   %eax,%eax
   114d6:	75 9e                	jne    11476 <mbedtls_sha512_update.part.0+0x86>
   114d8:	48 01 dd             	add    %rbx,%rbp
   114db:	49 29 dd             	sub    %rbx,%r13
   114de:	45 31 f6             	xor    %r14d,%r14d
   114e1:	e9 46 ff ff ff       	jmpq   1142c <mbedtls_sha512_update.part.0+0x3c>
   114e6:	48 8b 45 00          	mov    0x0(%rbp),%rax
   114ea:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   114ee:	48 89 ee             	mov    %rbp,%rsi
   114f1:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   114f5:	48 89 01             	mov    %rax,(%rcx)
   114f8:	48 8b 44 1d f8       	mov    -0x8(%rbp,%rbx,1),%rax
   114fd:	48 89 44 19 f8       	mov    %rax,-0x8(%rcx,%rbx,1)
   11502:	48 29 f9             	sub    %rdi,%rcx
   11505:	48 29 ce             	sub    %rcx,%rsi
   11508:	01 d1                	add    %edx,%ecx
   1150a:	c1 e9 03             	shr    $0x3,%ecx
   1150d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11510:	eb b4                	jmp    114c6 <mbedtls_sha512_update.part.0+0xd6>
   11512:	4b 8d 4c 34 50       	lea    0x50(%r12,%r14,1),%rcx
   11517:	89 c2                	mov    %eax,%edx
   11519:	83 f8 08             	cmp    $0x8,%eax
   1151c:	73 25                	jae    11543 <mbedtls_sha512_update.part.0+0x153>
   1151e:	a8 04                	test   $0x4,%al
   11520:	75 6e                	jne    11590 <mbedtls_sha512_update.part.0+0x1a0>
   11522:	85 d2                	test   %edx,%edx
   11524:	74 15                	je     1153b <mbedtls_sha512_update.part.0+0x14b>
   11526:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1152a:	88 01                	mov    %al,(%rcx)
   1152c:	f6 c2 02             	test   $0x2,%dl
   1152f:	74 0a                	je     1153b <mbedtls_sha512_update.part.0+0x14b>
   11531:	0f b7 44 15 fe       	movzwl -0x2(%rbp,%rdx,1),%eax
   11536:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   1153b:	45 31 c0             	xor    %r8d,%r8d
   1153e:	e9 33 ff ff ff       	jmpq   11476 <mbedtls_sha512_update.part.0+0x86>
   11543:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   11547:	48 8d 79 08          	lea    0x8(%rcx),%rdi
   1154b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1154f:	48 89 11             	mov    %rdx,(%rcx)
   11552:	89 c2                	mov    %eax,%edx
   11554:	48 8b 74 15 f8       	mov    -0x8(%rbp,%rdx,1),%rsi
   11559:	48 89 74 11 f8       	mov    %rsi,-0x8(%rcx,%rdx,1)
   1155e:	48 29 f9             	sub    %rdi,%rcx
   11561:	48 89 ee             	mov    %rbp,%rsi
   11564:	48 89 ca             	mov    %rcx,%rdx
   11567:	48 29 ce             	sub    %rcx,%rsi
   1156a:	01 c2                	add    %eax,%edx
   1156c:	c1 ea 03             	shr    $0x3,%edx
   1156f:	89 d1                	mov    %edx,%ecx
   11571:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11574:	eb c5                	jmp    1153b <mbedtls_sha512_update.part.0+0x14b>
   11576:	4c 89 e8             	mov    %r13,%rax
   11579:	e9 ec fe ff ff       	jmpq   1146a <mbedtls_sha512_update.part.0+0x7a>
   1157e:	8b 45 00             	mov    0x0(%rbp),%eax
   11581:	89 01                	mov    %eax,(%rcx)
   11583:	8b 44 1d fc          	mov    -0x4(%rbp,%rbx,1),%eax
   11587:	89 44 19 fc          	mov    %eax,-0x4(%rcx,%rbx,1)
   1158b:	e9 36 ff ff ff       	jmpq   114c6 <mbedtls_sha512_update.part.0+0xd6>
   11590:	8b 45 00             	mov    0x0(%rbp),%eax
   11593:	89 01                	mov    %eax,(%rcx)
   11595:	8b 44 15 fc          	mov    -0x4(%rbp,%rdx,1),%eax
   11599:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   1159d:	eb 9c                	jmp    1153b <mbedtls_sha512_update.part.0+0x14b>
   1159f:	0f b7 44 1d fe       	movzwl -0x2(%rbp,%rbx,1),%eax
   115a4:	66 89 44 19 fe       	mov    %ax,-0x2(%rcx,%rbx,1)
   115a9:	e9 18 ff ff ff       	jmpq   114c6 <mbedtls_sha512_update.part.0+0xd6>
   115ae:	66 90                	xchg   %ax,%ax

00000000000115b0 <mbedtls_sha512_update>:
   115b0:	f3 0f 1e fa          	endbr64 
   115b4:	48 85 d2             	test   %rdx,%rdx
   115b7:	74 07                	je     115c0 <mbedtls_sha512_update+0x10>
   115b9:	e9 32 fe ff ff       	jmpq   113f0 <mbedtls_sha512_update.part.0>
   115be:	66 90                	xchg   %ax,%ax
   115c0:	31 c0                	xor    %eax,%eax
   115c2:	c3                   	retq   
   115c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   115ca:	00 00 00 00 
   115ce:	66 90                	xchg   %ax,%ax

00000000000115d0 <mbedtls_sha512_finish>:
   115d0:	f3 0f 1e fa          	endbr64 
   115d4:	41 54                	push   %r12
   115d6:	4c 8d 67 50          	lea    0x50(%rdi),%r12
   115da:	55                   	push   %rbp
   115db:	48 89 f5             	mov    %rsi,%rbp
   115de:	53                   	push   %rbx
   115df:	8b 07                	mov    (%rdi),%eax
   115e1:	48 89 fb             	mov    %rdi,%rbx
   115e4:	83 e0 7f             	and    $0x7f,%eax
   115e7:	8d 48 01             	lea    0x1(%rax),%ecx
   115ea:	c6 44 07 50 80       	movb   $0x80,0x50(%rdi,%rax,1)
   115ef:	89 c8                	mov    %ecx,%eax
   115f1:	4c 01 e0             	add    %r12,%rax
   115f4:	83 f9 70             	cmp    $0x70,%ecx
   115f7:	0f 87 d3 00 00 00    	ja     116d0 <mbedtls_sha512_finish+0x100>
   115fd:	ba 70 00 00 00       	mov    $0x70,%edx
   11602:	29 ca                	sub    %ecx,%edx
   11604:	83 fa 08             	cmp    $0x8,%edx
   11607:	0f 82 73 01 00 00    	jb     11780 <mbedtls_sha512_finish+0x1b0>
   1160d:	48 8d 78 08          	lea    0x8(%rax),%rdi
   11611:	89 d1                	mov    %edx,%ecx
   11613:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1161a:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   11621:	00 00 
   11623:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11627:	48 29 f8             	sub    %rdi,%rax
   1162a:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
   1162d:	31 c0                	xor    %eax,%eax
   1162f:	c1 e9 03             	shr    $0x3,%ecx
   11632:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11635:	48 8b 13             	mov    (%rbx),%rdx
   11638:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1163c:	4c 89 e6             	mov    %r12,%rsi
   1163f:	48 89 df             	mov    %rbx,%rdi
   11642:	48 89 d1             	mov    %rdx,%rcx
   11645:	48 c1 e0 03          	shl    $0x3,%rax
   11649:	48 c1 e9 3d          	shr    $0x3d,%rcx
   1164d:	48 c1 e2 03          	shl    $0x3,%rdx
   11651:	48 09 c8             	or     %rcx,%rax
   11654:	48 0f ca             	bswap  %rdx
   11657:	48 89 93 c8 00 00 00 	mov    %rdx,0xc8(%rbx)
   1165e:	48 0f c8             	bswap  %rax
   11661:	48 89 83 c0 00 00 00 	mov    %rax,0xc0(%rbx)
   11668:	e8 83 f7 ff ff       	callq  10df0 <mbedtls_internal_sha512_process>
   1166d:	85 c0                	test   %eax,%eax
   1166f:	75 50                	jne    116c1 <mbedtls_sha512_finish+0xf1>
   11671:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   11675:	48 0f ca             	bswap  %rdx
   11678:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   1167c:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   11680:	48 0f ca             	bswap  %rdx
   11683:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   11687:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   1168b:	48 0f ca             	bswap  %rdx
   1168e:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   11692:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   11696:	48 0f ca             	bswap  %rdx
   11699:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   1169d:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   116a1:	48 0f ca             	bswap  %rdx
   116a4:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   116a8:	48 8b 53 38          	mov    0x38(%rbx),%rdx
   116ac:	48 0f ca             	bswap  %rdx
   116af:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   116b3:	8b 93 d0 00 00 00    	mov    0xd0(%rbx),%edx
   116b9:	85 d2                	test   %edx,%edx
   116bb:	0f 84 e7 00 00 00    	je     117a8 <mbedtls_sha512_finish+0x1d8>
   116c1:	5b                   	pop    %rbx
   116c2:	5d                   	pop    %rbp
   116c3:	41 5c                	pop    %r12
   116c5:	c3                   	retq   
   116c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   116cd:	00 00 00 
   116d0:	ba 80 00 00 00       	mov    $0x80,%edx
   116d5:	31 ff                	xor    %edi,%edi
   116d7:	29 ca                	sub    %ecx,%edx
   116d9:	83 fa 08             	cmp    $0x8,%edx
   116dc:	0f 82 7e 00 00 00    	jb     11760 <mbedtls_sha512_finish+0x190>
   116e2:	89 d1                	mov    %edx,%ecx
   116e4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   116eb:	48 c7 44 08 f8 00 00 	movq   $0x0,-0x8(%rax,%rcx,1)
   116f2:	00 00 
   116f4:	48 8d 48 08          	lea    0x8(%rax),%rcx
   116f8:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   116fc:	48 29 c8             	sub    %rcx,%rax
   116ff:	01 c2                	add    %eax,%edx
   11701:	83 e2 f8             	and    $0xfffffff8,%edx
   11704:	83 fa 08             	cmp    $0x8,%edx
   11707:	72 12                	jb     1171b <mbedtls_sha512_finish+0x14b>
   11709:	83 e2 f8             	and    $0xfffffff8,%edx
   1170c:	31 c0                	xor    %eax,%eax
   1170e:	89 c6                	mov    %eax,%esi
   11710:	83 c0 08             	add    $0x8,%eax
   11713:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
   11717:	39 d0                	cmp    %edx,%eax
   11719:	72 f3                	jb     1170e <mbedtls_sha512_finish+0x13e>
   1171b:	4c 89 e6             	mov    %r12,%rsi
   1171e:	48 89 df             	mov    %rbx,%rdi
   11721:	e8 ca f6 ff ff       	callq  10df0 <mbedtls_internal_sha512_process>
   11726:	85 c0                	test   %eax,%eax
   11728:	75 97                	jne    116c1 <mbedtls_sha512_finish+0xf1>
   1172a:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
   1172f:	4c 89 e1             	mov    %r12,%rcx
   11732:	31 c0                	xor    %eax,%eax
   11734:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
   1173b:	00 
   1173c:	49 c7 44 24 68 00 00 	movq   $0x0,0x68(%r12)
   11743:	00 00 
   11745:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11749:	48 29 f9             	sub    %rdi,%rcx
   1174c:	83 c1 70             	add    $0x70,%ecx
   1174f:	c1 e9 03             	shr    $0x3,%ecx
   11752:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11755:	e9 db fe ff ff       	jmpq   11635 <mbedtls_sha512_finish+0x65>
   1175a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11760:	f6 c2 04             	test   $0x4,%dl
   11763:	75 63                	jne    117c8 <mbedtls_sha512_finish+0x1f8>
   11765:	85 d2                	test   %edx,%edx
   11767:	74 b2                	je     1171b <mbedtls_sha512_finish+0x14b>
   11769:	c6 00 00             	movb   $0x0,(%rax)
   1176c:	f6 c2 02             	test   $0x2,%dl
   1176f:	74 aa                	je     1171b <mbedtls_sha512_finish+0x14b>
   11771:	31 c9                	xor    %ecx,%ecx
   11773:	66 89 4c 10 fe       	mov    %cx,-0x2(%rax,%rdx,1)
   11778:	eb a1                	jmp    1171b <mbedtls_sha512_finish+0x14b>
   1177a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11780:	f6 c2 04             	test   $0x4,%dl
   11783:	75 5b                	jne    117e0 <mbedtls_sha512_finish+0x210>
   11785:	85 d2                	test   %edx,%edx
   11787:	0f 84 a8 fe ff ff    	je     11635 <mbedtls_sha512_finish+0x65>
   1178d:	c6 00 00             	movb   $0x0,(%rax)
   11790:	f6 c2 02             	test   $0x2,%dl
   11793:	0f 84 9c fe ff ff    	je     11635 <mbedtls_sha512_finish+0x65>
   11799:	31 f6                	xor    %esi,%esi
   1179b:	66 89 74 10 fe       	mov    %si,-0x2(%rax,%rdx,1)
   117a0:	e9 90 fe ff ff       	jmpq   11635 <mbedtls_sha512_finish+0x65>
   117a5:	0f 1f 00             	nopl   (%rax)
   117a8:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   117ac:	48 0f ca             	bswap  %rdx
   117af:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   117b3:	48 8b 53 48          	mov    0x48(%rbx),%rdx
   117b7:	5b                   	pop    %rbx
   117b8:	48 0f ca             	bswap  %rdx
   117bb:	48 89 55 38          	mov    %rdx,0x38(%rbp)
   117bf:	5d                   	pop    %rbp
   117c0:	41 5c                	pop    %r12
   117c2:	c3                   	retq   
   117c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   117c8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   117ce:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   117d5:	00 
   117d6:	e9 40 ff ff ff       	jmpq   1171b <mbedtls_sha512_finish+0x14b>
   117db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   117e0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   117e6:	c7 44 10 fc 00 00 00 	movl   $0x0,-0x4(%rax,%rdx,1)
   117ed:	00 
   117ee:	e9 42 fe ff ff       	jmpq   11635 <mbedtls_sha512_finish+0x65>
   117f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   117fa:	00 00 00 00 
   117fe:	66 90                	xchg   %ax,%ax

0000000000011800 <mbedtls_sha512_common_self_test>:
   11800:	41 57                	push   %r15
   11802:	41 56                	push   %r14
   11804:	41 55                	push   %r13
   11806:	41 89 f5             	mov    %esi,%r13d
   11809:	41 54                	push   %r12
   1180b:	41 89 fc             	mov    %edi,%r12d
   1180e:	bf 00 04 00 00       	mov    $0x400,%edi
   11813:	55                   	push   %rbp
   11814:	48 8d 2d 25 26 01 00 	lea    0x12625(%rip),%rbp        # 23e40 <sha384_test_sum>
   1181b:	53                   	push   %rbx
   1181c:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   11823:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1182a:	00 00 
   1182c:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   11833:	00 
   11834:	31 c0                	xor    %eax,%eax
   11836:	85 f6                	test   %esi,%esi
   11838:	48 8d 05 41 25 01 00 	lea    0x12541(%rip),%rax        # 23d80 <sha512_test_sum>
   1183f:	be 01 00 00 00       	mov    $0x1,%esi
   11844:	48 0f 44 e8          	cmove  %rax,%rbp
   11848:	e8 73 1a ff ff       	callq  32c0 <calloc@plt>
   1184d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11852:	48 85 c0             	test   %rax,%rax
   11855:	0f 84 19 03 00 00    	je     11b74 <mbedtls_sha512_common_self_test+0x374>
   1185b:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   11860:	31 c0                	xor    %eax,%eax
   11862:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   11867:	31 db                	xor    %ebx,%ebx
   11869:	4c 89 f7             	mov    %r14,%rdi
   1186c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1186f:	b8 04 00 00 00       	mov    $0x4,%eax
   11874:	44 29 e8             	sub    %r13d,%eax
   11877:	89 c1                	mov    %eax,%ecx
   11879:	c1 e0 04             	shl    $0x4,%eax
   1187c:	c1 e1 07             	shl    $0x7,%ecx
   1187f:	48 89 04 24          	mov    %rax,(%rsp)
   11883:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   11887:	45 85 e4             	test   %r12d,%r12d
   1188a:	0f 85 58 02 00 00    	jne    11ae8 <mbedtls_sha512_common_self_test+0x2e8>
   11890:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   11897:	00 00 
   11899:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   118a0:	00 00 
   118a2:	45 85 ed             	test   %r13d,%r13d
   118a5:	0f 85 55 01 00 00    	jne    11a00 <mbedtls_sha512_common_self_test+0x200>
   118ab:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   118b2:	e6 09 6a 
   118b5:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   118bc:	00 
   118bd:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   118c2:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   118c9:	ae 67 bb 
   118cc:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   118d1:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   118d8:	f3 6e 3c 
   118db:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   118e0:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   118e7:	f5 4f a5 
   118ea:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   118ef:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   118f6:	52 0e 51 
   118f9:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   118fe:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   11905:	68 05 9b 
   11908:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1190d:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   11914:	d9 83 1f 
   11917:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1191c:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   11923:	cd e0 5b 
   11926:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1192b:	48 83 fb 02          	cmp    $0x2,%rbx
   1192f:	0f 84 55 01 00 00    	je     11a8a <mbedtls_sha512_common_self_test+0x28a>
   11935:	48 8d 05 c4 25 01 00 	lea    0x125c4(%rip),%rax        # 23f00 <sha_test_buflen>
   1193c:	48 8b 14 d8          	mov    (%rax,%rbx,8),%rdx
   11940:	48 85 d2             	test   %rdx,%rdx
   11943:	74 1e                	je     11963 <mbedtls_sha512_common_self_test+0x163>
   11945:	48 6b f3 71          	imul   $0x71,%rbx,%rsi
   11949:	48 8d 05 d0 25 01 00 	lea    0x125d0(%rip),%rax        # 23f20 <sha_test_buf>
   11950:	4c 89 f7             	mov    %r14,%rdi
   11953:	48 01 c6             	add    %rax,%rsi
   11956:	e8 95 fa ff ff       	callq  113f0 <mbedtls_sha512_update.part.0>
   1195b:	85 c0                	test   %eax,%eax
   1195d:	0f 85 73 01 00 00    	jne    11ad6 <mbedtls_sha512_common_self_test+0x2d6>
   11963:	4c 8d bc 24 00 01 00 	lea    0x100(%rsp),%r15
   1196a:	00 
   1196b:	4c 89 f7             	mov    %r14,%rdi
   1196e:	4c 89 fe             	mov    %r15,%rsi
   11971:	e8 5a fc ff ff       	callq  115d0 <mbedtls_sha512_finish>
   11976:	85 c0                	test   %eax,%eax
   11978:	0f 85 58 01 00 00    	jne    11ad6 <mbedtls_sha512_common_self_test+0x2d6>
   1197e:	48 8b 14 24          	mov    (%rsp),%rdx
   11982:	48 89 ee             	mov    %rbp,%rsi
   11985:	4c 89 ff             	mov    %r15,%rdi
   11988:	e8 13 19 ff ff       	callq  32a0 <memcmp@plt>
   1198d:	85 c0                	test   %eax,%eax
   1198f:	0f 85 cb 01 00 00    	jne    11b60 <mbedtls_sha512_common_self_test+0x360>
   11995:	45 85 e4             	test   %r12d,%r12d
   11998:	0f 85 72 01 00 00    	jne    11b10 <mbedtls_sha512_common_self_test+0x310>
   1199e:	48 83 c3 01          	add    $0x1,%rbx
   119a2:	48 83 c5 40          	add    $0x40,%rbp
   119a6:	48 83 fb 03          	cmp    $0x3,%rbx
   119aa:	0f 85 d7 fe ff ff    	jne    11887 <mbedtls_sha512_common_self_test+0x87>
   119b0:	45 85 e4             	test   %r12d,%r12d
   119b3:	0f 85 6f 01 00 00    	jne    11b28 <mbedtls_sha512_common_self_test+0x328>
   119b9:	be d8 00 00 00       	mov    $0xd8,%esi
   119be:	4c 89 f7             	mov    %r14,%rdi
   119c1:	45 89 e5             	mov    %r12d,%r13d
   119c4:	e8 57 38 ff ff       	callq  5220 <mbedtls_platform_zeroize>
   119c9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   119ce:	e8 0d 18 ff ff       	callq  31e0 <free@plt>
   119d3:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   119da:	00 
   119db:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   119e2:	00 00 
   119e4:	0f 85 aa 01 00 00    	jne    11b94 <mbedtls_sha512_common_self_test+0x394>
   119ea:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   119f1:	44 89 e8             	mov    %r13d,%eax
   119f4:	5b                   	pop    %rbx
   119f5:	5d                   	pop    %rbp
   119f6:	41 5c                	pop    %r12
   119f8:	41 5d                	pop    %r13
   119fa:	41 5e                	pop    %r14
   119fc:	41 5f                	pop    %r15
   119fe:	c3                   	retq   
   119ff:	90                   	nop
   11a00:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   11a07:	9d bb cb 
   11a0a:	44 89 ac 24 f0 00 00 	mov    %r13d,0xf0(%rsp)
   11a11:	00 
   11a12:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   11a17:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   11a1e:	29 9a 62 
   11a21:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11a26:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   11a2d:	01 59 91 
   11a30:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   11a35:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   11a3c:	ec 2f 15 
   11a3f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   11a44:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   11a4b:	26 33 67 
   11a4e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   11a53:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   11a5a:	4a b4 8e 
   11a5d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   11a62:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   11a69:	2e 0c db 
   11a6c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   11a71:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   11a78:	48 b5 47 
   11a7b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   11a80:	48 83 fb 02          	cmp    $0x2,%rbx
   11a84:	0f 85 ab fe ff ff    	jne    11935 <mbedtls_sha512_common_self_test+0x135>
   11a8a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   11a8f:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   11a94:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   11a99:	48 b8 61 61 61 61 61 	movabs $0x6161616161616161,%rax
   11aa0:	61 61 61 
   11aa3:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   11aa8:	41 bf e8 03 00 00    	mov    $0x3e8,%r15d
   11aae:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11ab1:	eb 0f                	jmp    11ac2 <mbedtls_sha512_common_self_test+0x2c2>
   11ab3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11ab8:	41 83 ef 01          	sub    $0x1,%r15d
   11abc:	0f 84 a8 00 00 00    	je     11b6a <mbedtls_sha512_common_self_test+0x36a>
   11ac2:	ba e8 03 00 00       	mov    $0x3e8,%edx
   11ac7:	48 89 de             	mov    %rbx,%rsi
   11aca:	4c 89 f7             	mov    %r14,%rdi
   11acd:	e8 1e f9 ff ff       	callq  113f0 <mbedtls_sha512_update.part.0>
   11ad2:	85 c0                	test   %eax,%eax
   11ad4:	74 e2                	je     11ab8 <mbedtls_sha512_common_self_test+0x2b8>
   11ad6:	89 c2                	mov    %eax,%edx
   11ad8:	45 85 e4             	test   %r12d,%r12d
   11adb:	75 63                	jne    11b40 <mbedtls_sha512_common_self_test+0x340>
   11add:	41 89 d4             	mov    %edx,%r12d
   11ae0:	e9 d4 fe ff ff       	jmpq   119b9 <mbedtls_sha512_common_self_test+0x1b9>
   11ae5:	0f 1f 00             	nopl   (%rax)
   11ae8:	8b 54 24 14          	mov    0x14(%rsp),%edx
   11aec:	8d 4b 01             	lea    0x1(%rbx),%ecx
   11aef:	48 8d 35 ce 1f 01 00 	lea    0x11fce(%rip),%rsi        # 23ac4 <sha1_test_buf+0xc4>
   11af6:	31 c0                	xor    %eax,%eax
   11af8:	bf 01 00 00 00       	mov    $0x1,%edi
   11afd:	e8 3e 18 ff ff       	callq  3340 <__printf_chk@plt>
   11b02:	e9 89 fd ff ff       	jmpq   11890 <mbedtls_sha512_common_self_test+0x90>
   11b07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11b0e:	00 00 
   11b10:	48 8d 3d cb 16 01 00 	lea    0x116cb(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   11b17:	e8 e4 16 ff ff       	callq  3200 <puts@plt>
   11b1c:	e9 7d fe ff ff       	jmpq   1199e <mbedtls_sha512_common_self_test+0x19e>
   11b21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b28:	bf 0a 00 00 00       	mov    $0xa,%edi
   11b2d:	45 31 e4             	xor    %r12d,%r12d
   11b30:	e8 bb 16 ff ff       	callq  31f0 <putchar@plt>
   11b35:	e9 7f fe ff ff       	jmpq   119b9 <mbedtls_sha512_common_self_test+0x1b9>
   11b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11b40:	48 8d 3d 76 1f 01 00 	lea    0x11f76(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   11b47:	89 14 24             	mov    %edx,(%rsp)
   11b4a:	e8 b1 16 ff ff       	callq  3200 <puts@plt>
   11b4f:	8b 14 24             	mov    (%rsp),%edx
   11b52:	41 89 d4             	mov    %edx,%r12d
   11b55:	e9 5f fe ff ff       	jmpq   119b9 <mbedtls_sha512_common_self_test+0x1b9>
   11b5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11b60:	ba 01 00 00 00       	mov    $0x1,%edx
   11b65:	e9 6e ff ff ff       	jmpq   11ad8 <mbedtls_sha512_common_self_test+0x2d8>
   11b6a:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   11b6f:	e9 ef fd ff ff       	jmpq   11963 <mbedtls_sha512_common_self_test+0x163>
   11b74:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   11b7a:	45 85 e4             	test   %r12d,%r12d
   11b7d:	0f 84 50 fe ff ff    	je     119d3 <mbedtls_sha512_common_self_test+0x1d3>
   11b83:	48 8d 3d 21 1f 01 00 	lea    0x11f21(%rip),%rdi        # 23aab <sha1_test_buf+0xab>
   11b8a:	e8 71 16 ff ff       	callq  3200 <puts@plt>
   11b8f:	e9 3f fe ff ff       	jmpq   119d3 <mbedtls_sha512_common_self_test+0x1d3>
   11b94:	e8 c7 16 ff ff       	callq  3260 <__stack_chk_fail@plt>
   11b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011ba0 <mbedtls_sha512>:
   11ba0:	f3 0f 1e fa          	endbr64 
   11ba4:	41 55                	push   %r13
   11ba6:	41 54                	push   %r12
   11ba8:	55                   	push   %rbp
   11ba9:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   11bb0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11bb7:	00 00 
   11bb9:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   11bc0:	00 
   11bc1:	31 c0                	xor    %eax,%eax
   11bc3:	83 f9 01             	cmp    $0x1,%ecx
   11bc6:	0f 87 94 01 00 00    	ja     11d60 <mbedtls_sha512+0x1c0>
   11bcc:	49 89 f0             	mov    %rsi,%r8
   11bcf:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   11bd4:	49 89 f9             	mov    %rdi,%r9
   11bd7:	49 89 d5             	mov    %rdx,%r13
   11bda:	48 89 f7             	mov    %rsi,%rdi
   11bdd:	89 ca                	mov    %ecx,%edx
   11bdf:	b9 19 00 00 00       	mov    $0x19,%ecx
   11be4:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   11beb:	00 
   11bec:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11bef:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11bf6:	00 00 
   11bf8:	85 d2                	test   %edx,%edx
   11bfa:	0f 84 e0 00 00 00    	je     11ce0 <mbedtls_sha512+0x140>
   11c00:	48 b8 d8 9e 05 c1 5d 	movabs $0xcbbb9d5dc1059ed8,%rax
   11c07:	9d bb cb 
   11c0a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   11c0f:	48 b8 07 d5 7c 36 2a 	movabs $0x629a292a367cd507,%rax
   11c16:	29 9a 62 
   11c19:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11c1e:	48 b8 17 dd 70 30 5a 	movabs $0x9159015a3070dd17,%rax
   11c25:	01 59 91 
   11c28:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   11c2d:	48 b8 39 59 0e f7 d8 	movabs $0x152fecd8f70e5939,%rax
   11c34:	ec 2f 15 
   11c37:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   11c3c:	48 b8 31 0b c0 ff 67 	movabs $0x67332667ffc00b31,%rax
   11c43:	26 33 67 
   11c46:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   11c4b:	48 b8 11 15 58 68 87 	movabs $0x8eb44a8768581511,%rax
   11c52:	4a b4 8e 
   11c55:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11c5a:	48 b8 a7 8f f9 64 0d 	movabs $0xdb0c2e0d64f98fa7,%rax
   11c61:	2e 0c db 
   11c64:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   11c69:	48 b8 a4 4f fa be 1d 	movabs $0x47b5481dbefa4fa4,%rax
   11c70:	48 b5 47 
   11c73:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   11c78:	89 94 24 d0 00 00 00 	mov    %edx,0xd0(%rsp)
   11c7f:	48 89 e5             	mov    %rsp,%rbp
   11c82:	4d 85 c0             	test   %r8,%r8
   11c85:	74 15                	je     11c9c <mbedtls_sha512+0xfc>
   11c87:	4c 89 c2             	mov    %r8,%rdx
   11c8a:	4c 89 ce             	mov    %r9,%rsi
   11c8d:	48 89 ef             	mov    %rbp,%rdi
   11c90:	e8 5b f7 ff ff       	callq  113f0 <mbedtls_sha512_update.part.0>
   11c95:	41 89 c4             	mov    %eax,%r12d
   11c98:	85 c0                	test   %eax,%eax
   11c9a:	75 0e                	jne    11caa <mbedtls_sha512+0x10a>
   11c9c:	4c 89 ee             	mov    %r13,%rsi
   11c9f:	48 89 ef             	mov    %rbp,%rdi
   11ca2:	e8 29 f9 ff ff       	callq  115d0 <mbedtls_sha512_finish>
   11ca7:	41 89 c4             	mov    %eax,%r12d
   11caa:	be d8 00 00 00       	mov    $0xd8,%esi
   11caf:	48 89 ef             	mov    %rbp,%rdi
   11cb2:	e8 69 35 ff ff       	callq  5220 <mbedtls_platform_zeroize>
   11cb7:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   11cbe:	00 
   11cbf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   11cc6:	00 00 
   11cc8:	0f 85 9d 00 00 00    	jne    11d6b <mbedtls_sha512+0x1cb>
   11cce:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   11cd5:	44 89 e0             	mov    %r12d,%eax
   11cd8:	5d                   	pop    %rbp
   11cd9:	41 5c                	pop    %r12
   11cdb:	41 5d                	pop    %r13
   11cdd:	c3                   	retq   
   11cde:	66 90                	xchg   %ax,%ax
   11ce0:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   11ce7:	e6 09 6a 
   11cea:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   11cef:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   11cf6:	ae 67 bb 
   11cf9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11cfe:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   11d05:	f3 6e 3c 
   11d08:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   11d0d:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   11d14:	f5 4f a5 
   11d17:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   11d1c:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   11d23:	52 0e 51 
   11d26:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   11d2b:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   11d32:	68 05 9b 
   11d35:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11d3a:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   11d41:	d9 83 1f 
   11d44:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   11d49:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   11d50:	cd e0 5b 
   11d53:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   11d58:	e9 1b ff ff ff       	jmpq   11c78 <mbedtls_sha512+0xd8>
   11d5d:	0f 1f 00             	nopl   (%rax)
   11d60:	41 bc 8b ff ff ff    	mov    $0xffffff8b,%r12d
   11d66:	e9 4c ff ff ff       	jmpq   11cb7 <mbedtls_sha512+0x117>
   11d6b:	e8 f0 14 ff ff       	callq  3260 <__stack_chk_fail@plt>

0000000000011d70 <mbedtls_sha512_self_test>:
   11d70:	f3 0f 1e fa          	endbr64 
   11d74:	31 f6                	xor    %esi,%esi
   11d76:	e9 85 fa ff ff       	jmpq   11800 <mbedtls_sha512_common_self_test>
   11d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011d80 <mbedtls_sha384_self_test>:
   11d80:	f3 0f 1e fa          	endbr64 
   11d84:	be 01 00 00 00       	mov    $0x1,%esi
   11d89:	e9 72 fa ff ff       	jmpq   11800 <mbedtls_sha512_common_self_test>
   11d8e:	66 90                	xchg   %ax,%ax

0000000000011d90 <aes_gen_tables>:
   11d90:	e9 1b 39 02 00       	jmpq   356b0 <aes_gen_tables.instr.bb_11d90>
   11d95:	56                   	push   %rsi
   11d96:	41 55                	push   %r13
   11d98:	41 54                	push   %r12
   11d9a:	55                   	push   %rbp
   11d9b:	53                   	push   %rbx
   11d9c:	48 81 ec 28 08 00 00 	sub    $0x828,%rsp
   11da3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11daa:	00 00 
   11dac:	48 89 84 24 18 08 00 	mov    %rax,0x818(%rsp)
   11db3:	00 
   11db4:	31 c0                	xor    %eax,%eax
   11db6:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   11dbb:	b8 01 00 00 00       	mov    $0x1,%eax
   11dc0:	e9 7f 3b 02 00       	jmpq   35944 <instr.bb_11dc0>
   11dc5:	00 89 04 b7 89 b4    	add    %cl,-0x4b7648fc(%rcx)
   11dcb:	94                   	xchg   %eax,%esp
   11dcc:	10 04 00             	adc    %al,(%rax,%rax,1)
   11dcf:	00 89 c2 81 e2 80    	add    %cl,-0x7f1d7e3e(%rcx)
   11dd5:	00 00                	add    %al,(%rax)
   11dd7:	00 83 fa 01 19 d2    	add    %al,-0x2de6fe06(%rbx)
   11ddd:	31 c8                	xor    %ecx,%eax
   11ddf:	48 83 c6 01          	add    $0x1,%rsi
   11de3:	f7 d2                	not    %edx
   11de5:	83 e2 1b             	and    $0x1b,%edx
   11de8:	31 d0                	xor    %edx,%eax
   11dea:	0f b6 c0             	movzbl %al,%eax
   11ded:	48 81 fe 00 01 00 00 	cmp    $0x100,%rsi
   11df4:	75 ca                	jne    11dc0 <aes_gen_tables+0x30>
   11df6:	e9 83 3b 02 00       	jmpq   3597e <instr.bb_11df6>
   11dfb:	01 00                	add    %eax,(%rax)
   11dfd:	b8 01 00 00 00       	mov    $0x1,%eax
   11e02:	48 8d 79 28          	lea    0x28(%rcx),%rdi
   11e06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11e0d:	00 00 00 
   11e10:	e9 7b 3b 02 00       	jmpq   35990 <instr.bb_11e10>
   11e15:	89 d6                	mov    %edx,%esi
   11e17:	83 f6 1b             	xor    $0x1b,%esi
   11e1a:	a8 80                	test   $0x80,%al
   11e1c:	0f 45 d6             	cmovne %esi,%edx
   11e1f:	48 83 c1 04          	add    $0x4,%rcx
   11e23:	0f b6 c2             	movzbl %dl,%eax
   11e26:	48 39 cf             	cmp    %rcx,%rdi
   11e29:	75 e5                	jne    11e10 <aes_gen_tables+0x80>
   11e2b:	e9 7f 3b 02 00       	jmpq   359af <instr.bb_11e2b>
   11e30:	00 63 ba             	add    %ah,-0x46(%rbx)
   11e33:	01 00                	add    %eax,(%rax)
   11e35:	00 00                	add    %al,(%rax)
   11e37:	4c 8d 94 24 10 04 00 	lea    0x410(%rsp),%r10
   11e3e:	00 
   11e3f:	4c 8d 0d 7a 03 02 00 	lea    0x2037a(%rip),%r9        # 321c0 <FSb>
   11e46:	c6 05 d6 f2 01 00 00 	movb   $0x0,0x1f2d6(%rip)        # 31123 <RSb+0x63>
   11e4d:	48 8d 35 6c f2 01 00 	lea    0x1f26c(%rip),%rsi        # 310c0 <RSb>
   11e54:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
   11e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11e60:	e9 ab 3b 02 00       	jmpq   35a10 <instr.bb_11e60>
   11e65:	04 92                	add    $0x92,%al
   11e67:	48 98                	cltq   
   11e69:	8b 4c 84 10          	mov    0x10(%rsp,%rax,4),%ecx
   11e6d:	89 cf                	mov    %ecx,%edi
   11e6f:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   11e72:	c1 ff 07             	sar    $0x7,%edi
   11e75:	09 f8                	or     %edi,%eax
   11e77:	89 c7                	mov    %eax,%edi
   11e79:	44 0f b6 d8          	movzbl %al,%r11d
   11e7d:	40 d0 c7             	rol    %dil
   11e80:	41 31 cb             	xor    %ecx,%r11d
   11e83:	40 0f b6 cf          	movzbl %dil,%ecx
   11e87:	89 c7                	mov    %eax,%edi
   11e89:	c0 c0 03             	rol    $0x3,%al
   11e8c:	40 c0 c7 02          	rol    $0x2,%dil
   11e90:	41 31 cb             	xor    %ecx,%r11d
   11e93:	83 f0 63             	xor    $0x63,%eax
   11e96:	40 0f b6 cf          	movzbl %dil,%ecx
   11e9a:	0f b6 c0             	movzbl %al,%eax
   11e9d:	44 31 d9             	xor    %r11d,%ecx
   11ea0:	31 c8                	xor    %ecx,%eax
   11ea2:	41 88 04 11          	mov    %al,(%r9,%rdx,1)
   11ea6:	48 98                	cltq   
   11ea8:	88 14 06             	mov    %dl,(%rsi,%rax,1)
   11eab:	48 83 c2 01          	add    $0x1,%rdx
   11eaf:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
   11eb6:	75 a8                	jne    11e60 <aes_gen_tables+0xd0>
   11eb8:	e9 d6 3b 02 00       	jmpq   35a93 <instr.bb_11eb8>
   11ebd:	00 00                	add    %al,(%rax)
   11ebf:	41 bd 63 00 00 00    	mov    $0x63,%r13d
   11ec5:	41 be c6 ff ff ff    	mov    $0xffffffc6,%r14d
   11ecb:	31 d2                	xor    %edx,%edx
   11ecd:	b9 63 00 00 00       	mov    $0x63,%ecx
   11ed2:	48 8d 2d e7 fe 01 00 	lea    0x1fee7(%rip),%rbp        # 31dc0 <FT0>
   11ed9:	48 8d 1d e0 fa 01 00 	lea    0x1fae0(%rip),%rbx        # 319c0 <FT1>
   11ee0:	89 04 24             	mov    %eax,(%rsp)
   11ee3:	8b 84 24 34 04 00 00 	mov    0x434(%rsp),%eax
   11eea:	4c 8d 1d cf f6 01 00 	lea    0x1f6cf(%rip),%r11        # 315c0 <FT2>
   11ef1:	4c 8d 15 c8 f2 01 00 	lea    0x1f2c8(%rip),%r10        # 311c0 <FT3>
   11ef8:	4c 8d 0d c1 ed 01 00 	lea    0x1edc1(%rip),%r9        # 30cc0 <RT0>
   11eff:	4c 8d 05 ba e5 01 00 	lea    0x1e5ba(%rip),%r8        # 304c0 <RT2>
   11f06:	89 44 24 04          	mov    %eax,0x4(%rsp)
   11f0a:	8b 84 24 44 04 00 00 	mov    0x444(%rsp),%eax
   11f11:	48 8d 3d a8 e1 01 00 	lea    0x1e1a8(%rip),%rdi        # 300c0 <RT3>
   11f18:	4c 8d 25 a2 02 02 00 	lea    0x202a2(%rip),%r12        # 321c1 <FSb+0x1>
   11f1f:	89 44 24 08          	mov    %eax,0x8(%rsp)
   11f23:	8b 84 24 3c 04 00 00 	mov    0x43c(%rsp),%eax
   11f2a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   11f2e:	31 c0                	xor    %eax,%eax
   11f30:	e9 48 01 00 00       	jmpq   1207d <aes_gen_tables+0x2ed>
   11f35:	0f 1f 00             	nopl   (%rax)
   11f38:	e9 d3 3b 02 00       	jmpq   35b10 <instr.bb_11f38>
   11f3d:	00 00                	add    %al,(%rax)
   11f3f:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   11f43:	44 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13d
   11f47:	49 63 cd             	movslq %r13d,%rcx
   11f4a:	45 89 ee             	mov    %r13d,%r14d
   11f4d:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   11f54:	41 c1 fe 1f          	sar    $0x1f,%r14d
   11f58:	48 c1 e9 20          	shr    $0x20,%rcx
   11f5c:	44 01 e9             	add    %r13d,%ecx
   11f5f:	c1 f9 07             	sar    $0x7,%ecx
   11f62:	44 29 f1             	sub    %r14d,%ecx
   11f65:	41 89 ce             	mov    %ecx,%r14d
   11f68:	41 c1 e6 08          	shl    $0x8,%r14d
   11f6c:	41 29 ce             	sub    %ecx,%r14d
   11f6f:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   11f73:	45 29 f5             	sub    %r14d,%r13d
   11f76:	4d 63 ed             	movslq %r13d,%r13
   11f79:	46 8b 74 ac 10       	mov    0x10(%rsp,%r13,4),%r14d
   11f7e:	44 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13d
   11f82:	49 63 cd             	movslq %r13d,%rcx
   11f85:	45 89 ef             	mov    %r13d,%r15d
   11f88:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   11f8f:	41 c1 ff 1f          	sar    $0x1f,%r15d
   11f93:	41 c1 e6 08          	shl    $0x8,%r14d
   11f97:	48 c1 e9 20          	shr    $0x20,%rcx
   11f9b:	44 01 e9             	add    %r13d,%ecx
   11f9e:	c1 f9 07             	sar    $0x7,%ecx
   11fa1:	44 29 f9             	sub    %r15d,%ecx
   11fa4:	41 89 cf             	mov    %ecx,%r15d
   11fa7:	41 c1 e7 08          	shl    $0x8,%r15d
   11fab:	41 29 cf             	sub    %ecx,%r15d
   11fae:	45 29 fd             	sub    %r15d,%r13d
   11fb1:	4d 63 ed             	movslq %r13d,%r13
   11fb4:	42 8b 4c ac 10       	mov    0x10(%rsp,%r13,4),%ecx
   11fb9:	c1 e1 10             	shl    $0x10,%ecx
   11fbc:	41 31 ce             	xor    %ecx,%r14d
   11fbf:	8b 0c 24             	mov    (%rsp),%ecx
   11fc2:	44 8d 2c 11          	lea    (%rcx,%rdx,1),%r13d
   11fc6:	03 54 24 0c          	add    0xc(%rsp),%edx
   11fca:	49 63 cd             	movslq %r13d,%rcx
   11fcd:	45 89 ef             	mov    %r13d,%r15d
   11fd0:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   11fd7:	41 c1 ff 1f          	sar    $0x1f,%r15d
   11fdb:	48 c1 e9 20          	shr    $0x20,%rcx
   11fdf:	44 01 e9             	add    %r13d,%ecx
   11fe2:	c1 f9 07             	sar    $0x7,%ecx
   11fe5:	44 29 f9             	sub    %r15d,%ecx
   11fe8:	41 89 cf             	mov    %ecx,%r15d
   11feb:	41 c1 e7 08          	shl    $0x8,%r15d
   11fef:	41 29 cf             	sub    %ecx,%r15d
   11ff2:	48 63 ca             	movslq %edx,%rcx
   11ff5:	45 29 fd             	sub    %r15d,%r13d
   11ff8:	4d 63 ed             	movslq %r13d,%r13
   11ffb:	46 33 74 ac 10       	xor    0x10(%rsp,%r13,4),%r14d
   12000:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   12007:	41 89 d5             	mov    %edx,%r13d
   1200a:	41 c1 fd 1f          	sar    $0x1f,%r13d
   1200e:	48 c1 e9 20          	shr    $0x20,%rcx
   12012:	01 d1                	add    %edx,%ecx
   12014:	c1 f9 07             	sar    $0x7,%ecx
   12017:	44 29 e9             	sub    %r13d,%ecx
   1201a:	41 89 cd             	mov    %ecx,%r13d
   1201d:	41 c1 e5 08          	shl    $0x8,%r13d
   12021:	41 29 cd             	sub    %ecx,%r13d
   12024:	44 29 ea             	sub    %r13d,%edx
   12027:	48 63 d2             	movslq %edx,%rdx
   1202a:	8b 54 94 10          	mov    0x10(%rsp,%rdx,4),%edx
   1202e:	c1 e2 18             	shl    $0x18,%edx
   12031:	41 31 d6             	xor    %edx,%r14d
   12034:	45 89 f5             	mov    %r14d,%r13d
   12037:	e9 d3 3b 02 00       	jmpq   35c0f <instr.bb_12037>
   1203c:	f2 41 c1 c5 08       	repnz rol $0x8,%r13d
   12041:	c1 c1 10             	rol    $0x10,%ecx
   12044:	c1 ca 08             	ror    $0x8,%edx
   12047:	e9 d3 3b 02 00       	jmpq   35c1f <instr.bb_12047>
   1204c:	01 00                	add    %eax,(%rax)
   1204e:	45 89 34 81          	mov    %r14d,(%r9,%rax,4)
   12052:	45 89 2c 87          	mov    %r13d,(%r15,%rax,4)
   12056:	41 89 0c 80          	mov    %ecx,(%r8,%rax,4)
   1205a:	89 14 87             	mov    %edx,(%rdi,%rax,4)
   1205d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   12063:	74 6e                	je     120d3 <aes_gen_tables+0x343>
   12065:	e9 36 3c 02 00       	jmpq   35ca0 <instr.bb_12065>
   1206a:	48 83 c0 01          	add    $0x1,%rax
   1206e:	89 ca                	mov    %ecx,%edx
   12070:	41 89 cd             	mov    %ecx,%r13d
   12073:	44 8d 34 09          	lea    (%rcx,%rcx,1),%r14d
   12077:	c0 fa 07             	sar    $0x7,%dl
   1207a:	83 e2 1b             	and    $0x1b,%edx
   1207d:	e9 40 3c 02 00       	jmpq   35cc2 <instr.bb_1207d>
   12082:	ce                   	(bad)  
   12083:	c1 e1 10             	shl    $0x10,%ecx
   12086:	41 c1 e6 08          	shl    $0x8,%r14d
   1208a:	44 31 f1             	xor    %r14d,%ecx
   1208d:	44 0f b6 f2          	movzbl %dl,%r14d
   12091:	44 31 ea             	xor    %r13d,%edx
   12094:	c1 e2 18             	shl    $0x18,%edx
   12097:	44 31 f1             	xor    %r14d,%ecx
   1209a:	31 d1                	xor    %edx,%ecx
   1209c:	89 ca                	mov    %ecx,%edx
   1209e:	89 4c 85 00          	mov    %ecx,0x0(%rbp,%rax,4)
   120a2:	c1 c2 08             	rol    $0x8,%edx
   120a5:	89 14 83             	mov    %edx,(%rbx,%rax,4)
   120a8:	89 ca                	mov    %ecx,%edx
   120aa:	c1 c9 08             	ror    $0x8,%ecx
   120ad:	c1 c2 10             	rol    $0x10,%edx
   120b0:	41 89 0c 82          	mov    %ecx,(%r10,%rax,4)
   120b4:	41 89 14 83          	mov    %edx,(%r11,%rax,4)
   120b8:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
   120bc:	85 d2                	test   %edx,%edx
   120be:	0f 85 74 fe ff ff    	jne    11f38 <aes_gen_tables+0x1a8>
   120c4:	e9 9e 3c 02 00       	jmpq   35d67 <instr.bb_120c4>
   120c9:	31 ed                	xor    %ebp,%ebp
   120cb:	45 31 f6             	xor    %r14d,%r14d
   120ce:	e9 74 ff ff ff       	jmpq   12047 <aes_gen_tables+0x2b7>
   120d3:	e9 9e 3c 02 00       	jmpq   35d76 <instr.bb_120d3>
   120d8:	08 00                	or     %al,(%rax)
   120da:	00 64 48 33          	add    %ah,0x33(%rax,%rcx,2)
   120de:	04 25                	add    $0x25,%al
   120e0:	28 00                	sub    %al,(%rax)
   120e2:	00 00                	add    %al,(%rax)
   120e4:	75 12                	jne    120f8 <aes_gen_tables+0x368>
   120e6:	e9 a2 3c 02 00       	jmpq   35d8d <instr.bb_120e6>
   120eb:	00 00                	add    %al,(%rax)
   120ed:	5b                   	pop    %rbx
   120ee:	5d                   	pop    %rbp
   120ef:	41 5c                	pop    %r12
   120f1:	41 5d                	pop    %r13
   120f3:	41 5e                	pop    %r14
   120f5:	41 5f                	pop    %r15
   120f7:	c3                   	retq   
   120f8:	e8 63 11 ff ff       	callq  3260 <__stack_chk_fail@plt>
   120fd:	0f 1f 00             	nopl   (%rax)

0000000000012100 <mbedtls_gf128mul_x_ble>:
   12100:	48 8b 16             	mov    (%rsi),%rdx
   12103:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   12107:	b9 08 00 00 00       	mov    $0x8,%ecx
   1210c:	48 89 f0             	mov    %rsi,%rax
   1210f:	48 01 f6             	add    %rsi,%rsi
   12112:	48 c1 e8 3f          	shr    $0x3f,%rax
   12116:	c1 e0 03             	shl    $0x3,%eax
   12119:	29 c1                	sub    %eax,%ecx
   1211b:	b8 87 00 00 00       	mov    $0x87,%eax
   12120:	d3 f8                	sar    %cl,%eax
   12122:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
   12126:	48 c1 ea 3f          	shr    $0x3f,%rdx
   1212a:	48 98                	cltq   
   1212c:	48 09 f2             	or     %rsi,%rdx
   1212f:	48 31 c8             	xor    %rcx,%rax
   12132:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   12136:	48 89 07             	mov    %rax,(%rdi)
   12139:	c3                   	retq   
   1213a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000012140 <mbedtls_aes_init>:
   12140:	e9 5b 3c 02 00       	jmpq   35da0 <mbedtls_aes_init.instr.bb_12140>
   12145:	e9 a1 3c 02 00       	jmpq   35deb <instr.bb_1216f>
   1214a:	00 48 89             	add    %cl,-0x77(%rax)
   1214d:	f9                   	stc    
   1214e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   12152:	31 c0                	xor    %eax,%eax
   12154:	48 c7 87 10 01 00 00 	movq   $0x0,0x110(%rdi)
   1215b:	00 00 00 00 
   1215f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   12163:	48 29 f9             	sub    %rdi,%rcx
   12166:	81 c1 20 01 00 00    	add    $0x120,%ecx
   1216c:	c1 e9 03             	shr    $0x3,%ecx
   1216f:	eb d4                	jmp    12145 <mbedtls_aes_init+0x5>
   12171:	ab                   	stos   %eax,%es:(%rdi)
   12172:	c3                   	retq   
   12173:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1217a:	00 00 00 00 
   1217e:	66 90                	xchg   %ax,%ax

0000000000012180 <mbedtls_aes_free>:
   12180:	f3 0f 1e fa          	endbr64 
   12184:	48 85 ff             	test   %rdi,%rdi
   12187:	74 0f                	je     12198 <mbedtls_aes_free+0x18>
   12189:	be 20 01 00 00       	mov    $0x120,%esi
   1218e:	e9 8d 30 ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
   12193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12198:	c3                   	retq   
   12199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000121a0 <mbedtls_aes_xts_init>:
   121a0:	f3 0f 1e fa          	endbr64 
   121a4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   121ab:	48 89 fa             	mov    %rdi,%rdx
   121ae:	48 8d b7 28 01 00 00 	lea    0x128(%rdi),%rsi
   121b5:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   121b9:	48 c7 87 10 01 00 00 	movq   $0x0,0x110(%rdi)
   121c0:	00 00 00 00 
   121c4:	48 89 d1             	mov    %rdx,%rcx
   121c7:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   121cb:	31 c0                	xor    %eax,%eax
   121cd:	48 29 f9             	sub    %rdi,%rcx
   121d0:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   121d4:	81 c1 20 01 00 00    	add    $0x120,%ecx
   121da:	c1 e9 03             	shr    $0x3,%ecx
   121dd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   121e0:	48 89 f7             	mov    %rsi,%rdi
   121e3:	48 c7 82 20 01 00 00 	movq   $0x0,0x120(%rdx)
   121ea:	00 00 00 00 
   121ee:	48 c7 82 38 02 00 00 	movq   $0x0,0x238(%rdx)
   121f5:	00 00 00 00 
   121f9:	29 f2                	sub    %esi,%edx
   121fb:	8d 8a 40 02 00 00    	lea    0x240(%rdx),%ecx
   12201:	c1 e9 03             	shr    $0x3,%ecx
   12204:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   12207:	c3                   	retq   
   12208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1220f:	00 

0000000000012210 <mbedtls_aes_xts_free>:
   12210:	f3 0f 1e fa          	endbr64 
   12214:	48 85 ff             	test   %rdi,%rdi
   12217:	74 27                	je     12240 <mbedtls_aes_xts_free+0x30>
   12219:	53                   	push   %rbx
   1221a:	be 20 01 00 00       	mov    $0x120,%esi
   1221f:	48 89 fb             	mov    %rdi,%rbx
   12222:	e8 f9 2f ff ff       	callq  5220 <mbedtls_platform_zeroize>
   12227:	48 8d bb 20 01 00 00 	lea    0x120(%rbx),%rdi
   1222e:	be 20 01 00 00       	mov    $0x120,%esi
   12233:	5b                   	pop    %rbx
   12234:	e9 e7 2f ff ff       	jmpq   5220 <mbedtls_platform_zeroize>
   12239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12240:	c3                   	retq   
   12241:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12248:	00 00 00 00 
   1224c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012250 <mbedtls_aes_setkey_enc>:
   12250:	e9 db 3b 02 00       	jmpq   35e30 <mbedtls_aes_setkey_enc.instr.bb_12250>
   12255:	55                   	push   %rbp
   12256:	49 89 f5             	mov    %rsi,%r13
   12259:	41 54                	push   %r12
   1225b:	41 89 d4             	mov    %edx,%r12d
   1225e:	55                   	push   %rbp
   1225f:	53                   	push   %rbx
   12260:	48 89 fb             	mov    %rdi,%rbx
   12263:	48 83 ec 08          	sub    $0x8,%rsp
   12267:	81 fa c0 00 00 00    	cmp    $0xc0,%edx
   1226d:	74 31                	je     122a0 <mbedtls_aes_setkey_enc+0x50>
   1226f:	e9 09 3c 02 00       	jmpq   35e7d <instr.bb_1226f>
   12274:	00 0f                	add    %cl,(%rdi)
   12276:	84 55 01             	test   %dl,0x1(%rbp)
   12279:	00 00                	add    %al,(%rax)
   1227b:	e9 09 3c 02 00       	jmpq   35e89 <instr.bb_1227b>
   12280:	81 fa 80 00 00 00    	cmp    $0x80,%edx
   12286:	0f 84 14 01 00 00    	je     123a0 <mbedtls_aes_setkey_enc+0x150>
   1228c:	48 83 c4 08          	add    $0x8,%rsp
   12290:	5b                   	pop    %rbx
   12291:	5d                   	pop    %rbp
   12292:	41 5c                	pop    %r12
   12294:	41 5d                	pop    %r13
   12296:	c3                   	retq   
   12297:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1229e:	00 00 
   122a0:	c7 07 0c 00 00 00    	movl   $0xc,(%rdi)
   122a6:	8b 05 b4 dd 01 00    	mov    0x1ddb4(%rip),%eax        # 30060 <aes_init_done>
   122ac:	85 c0                	test   %eax,%eax
   122ae:	0f 84 00 01 00 00    	je     123b4 <mbedtls_aes_setkey_enc+0x164>
   122b4:	e9 e7 3b 02 00       	jmpq   35ea0 <instr.bb_122b4>
   122b9:	00 00                	add    %al,(%rax)
   122bb:	00 bf 00 00 00 02    	add    %bh,0x2000000(%rdi)
   122c1:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
   122c5:	e8 16 30 ff ff       	callq  52e0 <mbedtls_aesni_has_support>
   122ca:	e9 f4 3b 02 00       	jmpq   35ec3 <instr.bb_122ca>
   122cf:	01 00                	add    %eax,(%rax)
   122d1:	00 e9                	add    %ch,%cl
   122d3:	f4                   	hlt    
   122d4:	3b 02                	cmp    (%rdx),%eax
   122d6:	00 00                	add    %al,(%rax)
   122d8:	00 00                	add    %al,(%rax)
   122da:	00 41 8d             	add    %al,-0x73(%rcx)
   122dd:	74 24                	je     12303 <mbedtls_aes_setkey_enc+0xb3>
   122df:	ff 74 1b e9          	pushq  -0x17(%rbx,%rbx,1)
   122e3:	f8                   	clc    
   122e4:	3b 02                	cmp    (%rdx),%eax
   122e6:	00 00                	add    %al,(%rax)
   122e8:	41 8b 54 8d 00       	mov    0x0(%r13,%rcx,4),%edx
   122ed:	89 54 8b 10          	mov    %edx,0x10(%rbx,%rcx,4)
   122f1:	48 89 ca             	mov    %rcx,%rdx
   122f4:	48 83 c1 01          	add    $0x1,%rcx
   122f8:	48 39 d6             	cmp    %rdx,%rsi
   122fb:	75 eb                	jne    122e8 <mbedtls_aes_setkey_enc+0x98>
   122fd:	8b 13                	mov    (%rbx),%edx
   122ff:	83 fa 0c             	cmp    $0xc,%edx
   12302:	0f 84 d8 01 00 00    	je     124e0 <mbedtls_aes_setkey_enc+0x290>
   12308:	83 fa 0e             	cmp    $0xe,%edx
   1230b:	0f 84 ef 00 00 00    	je     12400 <mbedtls_aes_setkey_enc+0x1b0>
   12311:	83 fa 0a             	cmp    $0xa,%edx
   12314:	0f 85 72 ff ff ff    	jne    1228c <mbedtls_aes_setkey_enc+0x3c>
   1231a:	48 8d 35 5f dd 01 00 	lea    0x1dd5f(%rip),%rsi        # 30080 <RCON>
   12321:	48 8d 0d 98 fe 01 00 	lea    0x1fe98(%rip),%rcx        # 321c0 <FSb>
   12328:	4c 8d 46 28          	lea    0x28(%rsi),%r8
   1232c:	0f 1f 40 00          	nopl   0x0(%rax)
   12330:	8b 5d 0c             	mov    0xc(%rbp),%ebx
   12333:	8b 7d 00             	mov    0x0(%rbp),%edi
   12336:	48 83 c6 04          	add    $0x4,%rsi
   1233a:	48 83 c5 10          	add    $0x10,%rbp
   1233e:	33 7e fc             	xor    -0x4(%rsi),%edi
   12341:	0f b6 d7             	movzbl %bh,%edx
   12344:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   12348:	31 fa                	xor    %edi,%edx
   1234a:	89 df                	mov    %ebx,%edi
   1234c:	c1 ef 18             	shr    $0x18,%edi
   1234f:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   12353:	c1 e7 10             	shl    $0x10,%edi
   12356:	31 fa                	xor    %edi,%edx
   12358:	0f b6 fb             	movzbl %bl,%edi
   1235b:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   1235f:	c1 e7 18             	shl    $0x18,%edi
   12362:	31 fa                	xor    %edi,%edx
   12364:	89 df                	mov    %ebx,%edi
   12366:	c1 ef 10             	shr    $0x10,%edi
   12369:	40 0f b6 ff          	movzbl %dil,%edi
   1236d:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   12371:	c1 e7 08             	shl    $0x8,%edi
   12374:	31 fa                	xor    %edi,%edx
   12376:	89 55 00             	mov    %edx,0x0(%rbp)
   12379:	33 55 f4             	xor    -0xc(%rbp),%edx
   1237c:	89 55 04             	mov    %edx,0x4(%rbp)
   1237f:	33 55 f8             	xor    -0x8(%rbp),%edx
   12382:	89 55 08             	mov    %edx,0x8(%rbp)
   12385:	31 da                	xor    %ebx,%edx
   12387:	89 55 0c             	mov    %edx,0xc(%rbp)
   1238a:	49 39 f0             	cmp    %rsi,%r8
   1238d:	75 a1                	jne    12330 <mbedtls_aes_setkey_enc+0xe0>
   1238f:	48 83 c4 08          	add    $0x8,%rsp
   12393:	5b                   	pop    %rbx
   12394:	5d                   	pop    %rbp
   12395:	41 5c                	pop    %r12
   12397:	41 5d                	pop    %r13
   12399:	c3                   	retq   
   1239a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   123a0:	e9 5b 3b 02 00       	jmpq   35f00 <instr.bb_123a0>
   123a5:	00 c7                	add    %al,%bh
   123a7:	07                   	(bad)  
   123a8:	0a 00                	or     (%rax),%al
   123aa:	00 00                	add    %al,(%rax)
   123ac:	85 c0                	test   %eax,%eax
   123ae:	0f 85 00 ff ff ff    	jne    122b4 <mbedtls_aes_setkey_enc+0x64>
   123b4:	e9 6a 3b 02 00       	jmpq   35f23 <instr.bb_123b4>
   123b9:	e9 6a 3b 02 00       	jmpq   35f28 <instr.bb_123b9>
   123be:	00 01                	add    %al,(%rcx)
   123c0:	00 00                	add    %al,(%rax)
   123c2:	00 e9                	add    %ch,%cl
   123c4:	ec                   	in     (%dx),%al
   123c5:	fe                   	(bad)  
   123c6:	ff                   	(bad)  
   123c7:	ff 0f                	decl   (%rdi)
   123c9:	1f                   	(bad)  
   123ca:	84 00                	test   %al,(%rax)
   123cc:	00 00                	add    %al,(%rax)
   123ce:	00 00                	add    %al,(%rax)
   123d0:	c7 07 0e 00 00 00    	movl   $0xe,(%rdi)
   123d6:	e9 cb fe ff ff       	jmpq   122a6 <mbedtls_aes_setkey_enc+0x56>
   123db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   123e0:	48 83 c4 08          	add    $0x8,%rsp
   123e4:	44 89 e2             	mov    %r12d,%edx
   123e7:	4c 89 ee             	mov    %r13,%rsi
   123ea:	48 89 ef             	mov    %rbp,%rdi
   123ed:	5b                   	pop    %rbx
   123ee:	5d                   	pop    %rbp
   123ef:	41 5c                	pop    %r12
   123f1:	41 5d                	pop    %r13
   123f3:	e9 c8 31 ff ff       	jmpq   55c0 <mbedtls_aesni_setkey_enc>
   123f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   123ff:	00 
   12400:	48 8d 3d 79 dc 01 00 	lea    0x1dc79(%rip),%rdi        # 30080 <RCON>
   12407:	48 8d 0d b2 fd 01 00 	lea    0x1fdb2(%rip),%rcx        # 321c0 <FSb>
   1240e:	4c 8d 47 1c          	lea    0x1c(%rdi),%r8
   12412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12418:	8b 5d 1c             	mov    0x1c(%rbp),%ebx
   1241b:	8b 75 00             	mov    0x0(%rbp),%esi
   1241e:	48 83 c7 04          	add    $0x4,%rdi
   12422:	48 83 c5 20          	add    $0x20,%rbp
   12426:	33 77 fc             	xor    -0x4(%rdi),%esi
   12429:	0f b6 d7             	movzbl %bh,%edx
   1242c:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   12430:	31 f2                	xor    %esi,%edx
   12432:	89 de                	mov    %ebx,%esi
   12434:	c1 ee 18             	shr    $0x18,%esi
   12437:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   1243b:	c1 e6 10             	shl    $0x10,%esi
   1243e:	31 f2                	xor    %esi,%edx
   12440:	0f b6 f3             	movzbl %bl,%esi
   12443:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   12447:	c1 e6 18             	shl    $0x18,%esi
   1244a:	31 f2                	xor    %esi,%edx
   1244c:	89 de                	mov    %ebx,%esi
   1244e:	c1 ee 10             	shr    $0x10,%esi
   12451:	40 0f b6 f6          	movzbl %sil,%esi
   12455:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   12459:	c1 e6 08             	shl    $0x8,%esi
   1245c:	31 f2                	xor    %esi,%edx
   1245e:	89 55 00             	mov    %edx,0x0(%rbp)
   12461:	33 55 e4             	xor    -0x1c(%rbp),%edx
   12464:	89 55 04             	mov    %edx,0x4(%rbp)
   12467:	33 55 e8             	xor    -0x18(%rbp),%edx
   1246a:	89 55 08             	mov    %edx,0x8(%rbp)
   1246d:	33 55 ec             	xor    -0x14(%rbp),%edx
   12470:	41 89 d1             	mov    %edx,%r9d
   12473:	89 55 0c             	mov    %edx,0xc(%rbp)
   12476:	0f b6 f2             	movzbl %dl,%esi
   12479:	41 c1 e9 18          	shr    $0x18,%r9d
   1247d:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   12481:	33 75 f0             	xor    -0x10(%rbp),%esi
   12484:	46 0f b6 0c 09       	movzbl (%rcx,%r9,1),%r9d
   12489:	41 c1 e1 18          	shl    $0x18,%r9d
   1248d:	44 31 ce             	xor    %r9d,%esi
   12490:	41 89 f2             	mov    %esi,%r10d
   12493:	0f b6 f6             	movzbl %dh,%esi
   12496:	c1 ea 10             	shr    $0x10,%edx
   12499:	44 0f b6 0c 31       	movzbl (%rcx,%rsi,1),%r9d
   1249e:	0f b6 d2             	movzbl %dl,%edx
   124a1:	44 89 d6             	mov    %r10d,%esi
   124a4:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   124a8:	41 c1 e1 08          	shl    $0x8,%r9d
   124ac:	44 31 ce             	xor    %r9d,%esi
   124af:	c1 e2 10             	shl    $0x10,%edx
   124b2:	31 f2                	xor    %esi,%edx
   124b4:	89 55 10             	mov    %edx,0x10(%rbp)
   124b7:	33 55 f4             	xor    -0xc(%rbp),%edx
   124ba:	89 55 14             	mov    %edx,0x14(%rbp)
   124bd:	33 55 f8             	xor    -0x8(%rbp),%edx
   124c0:	89 55 18             	mov    %edx,0x18(%rbp)
   124c3:	31 da                	xor    %ebx,%edx
   124c5:	89 55 1c             	mov    %edx,0x1c(%rbp)
   124c8:	49 39 f8             	cmp    %rdi,%r8
   124cb:	0f 85 47 ff ff ff    	jne    12418 <mbedtls_aes_setkey_enc+0x1c8>
   124d1:	48 83 c4 08          	add    $0x8,%rsp
   124d5:	5b                   	pop    %rbx
   124d6:	5d                   	pop    %rbp
   124d7:	41 5c                	pop    %r12
   124d9:	41 5d                	pop    %r13
   124db:	c3                   	retq   
   124dc:	0f 1f 40 00          	nopl   0x0(%rax)
   124e0:	48 8d 35 99 db 01 00 	lea    0x1db99(%rip),%rsi        # 30080 <RCON>
   124e7:	48 8d 0d d2 fc 01 00 	lea    0x1fcd2(%rip),%rcx        # 321c0 <FSb>
   124ee:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
   124f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   124f8:	8b 5d 14             	mov    0x14(%rbp),%ebx
   124fb:	44 8b 45 00          	mov    0x0(%rbp),%r8d
   124ff:	48 83 c6 04          	add    $0x4,%rsi
   12503:	48 83 c5 18          	add    $0x18,%rbp
   12507:	44 33 46 fc          	xor    -0x4(%rsi),%r8d
   1250b:	0f b6 d7             	movzbl %bh,%edx
   1250e:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   12512:	44 31 c2             	xor    %r8d,%edx
   12515:	41 89 d8             	mov    %ebx,%r8d
   12518:	41 c1 e8 18          	shr    $0x18,%r8d
   1251c:	46 0f b6 04 01       	movzbl (%rcx,%r8,1),%r8d
   12521:	41 c1 e0 10          	shl    $0x10,%r8d
   12525:	44 31 c2             	xor    %r8d,%edx
   12528:	44 0f b6 c3          	movzbl %bl,%r8d
   1252c:	46 0f b6 04 01       	movzbl (%rcx,%r8,1),%r8d
   12531:	41 c1 e0 18          	shl    $0x18,%r8d
   12535:	44 31 c2             	xor    %r8d,%edx
   12538:	41 89 d8             	mov    %ebx,%r8d
   1253b:	41 c1 e8 10          	shr    $0x10,%r8d
   1253f:	45 0f b6 c0          	movzbl %r8b,%r8d
   12543:	46 0f b6 04 01       	movzbl (%rcx,%r8,1),%r8d
   12548:	41 c1 e0 08          	shl    $0x8,%r8d
   1254c:	44 31 c2             	xor    %r8d,%edx
   1254f:	89 55 00             	mov    %edx,0x0(%rbp)
   12552:	33 55 ec             	xor    -0x14(%rbp),%edx
   12555:	89 55 04             	mov    %edx,0x4(%rbp)
   12558:	33 55 f0             	xor    -0x10(%rbp),%edx
   1255b:	89 55 08             	mov    %edx,0x8(%rbp)
   1255e:	33 55 f4             	xor    -0xc(%rbp),%edx
   12561:	89 55 0c             	mov    %edx,0xc(%rbp)
   12564:	33 55 f8             	xor    -0x8(%rbp),%edx
   12567:	89 55 10             	mov    %edx,0x10(%rbp)
   1256a:	31 da                	xor    %ebx,%edx
   1256c:	89 55 14             	mov    %edx,0x14(%rbp)
   1256f:	48 39 f7             	cmp    %rsi,%rdi
   12572:	75 84                	jne    124f8 <mbedtls_aes_setkey_enc+0x2a8>
   12574:	48 83 c4 08          	add    $0x8,%rsp
   12578:	5b                   	pop    %rbx
   12579:	5d                   	pop    %rbp
   1257a:	41 5c                	pop    %r12
   1257c:	41 5d                	pop    %r13
   1257e:	c3                   	retq   
   1257f:	90                   	nop

0000000000012580 <mbedtls_aes_setkey_dec>:
   12580:	f3 0f 1e fa          	endbr64 
   12584:	41 57                	push   %r15
   12586:	b9 24 00 00 00       	mov    $0x24,%ecx
   1258b:	41 56                	push   %r14
   1258d:	41 55                	push   %r13
   1258f:	41 54                	push   %r12
   12591:	55                   	push   %rbp
   12592:	53                   	push   %rbx
   12593:	48 89 fb             	mov    %rdi,%rbx
   12596:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   1259d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   125a4:	00 00 
   125a6:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   125ad:	00 
   125ae:	31 c0                	xor    %eax,%eax
   125b0:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   125b5:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   125bc:	00 
   125bd:	48 89 ef             	mov    %rbp,%rdi
   125c0:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   125c3:	48 89 ef             	mov    %rbp,%rdi
   125c6:	e8 85 fc ff ff       	callq  12250 <mbedtls_aes_setkey_enc>
   125cb:	41 89 c4             	mov    %eax,%r12d
   125ce:	85 c0                	test   %eax,%eax
   125d0:	74 3e                	je     12610 <mbedtls_aes_setkey_dec+0x90>
   125d2:	be 20 01 00 00       	mov    $0x120,%esi
   125d7:	48 89 ef             	mov    %rbp,%rdi
   125da:	e8 41 2c ff ff       	callq  5220 <mbedtls_platform_zeroize>
   125df:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   125e6:	00 
   125e7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   125ee:	00 00 
   125f0:	0f 85 5a 01 00 00    	jne    12750 <mbedtls_aes_setkey_dec+0x1d0>
   125f6:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   125fd:	44 89 e0             	mov    %r12d,%eax
   12600:	5b                   	pop    %rbx
   12601:	5d                   	pop    %rbp
   12602:	41 5c                	pop    %r12
   12604:	41 5d                	pop    %r13
   12606:	41 5e                	pop    %r14
   12608:	41 5f                	pop    %r15
   1260a:	c3                   	retq   
   1260b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12610:	8b 44 24 20          	mov    0x20(%rsp),%eax
   12614:	bf 00 00 00 02       	mov    $0x2000000,%edi
   12619:	89 03                	mov    %eax,(%rbx)
   1261b:	e8 c0 2c ff ff       	callq  52e0 <mbedtls_aesni_has_support>
   12620:	85 c0                	test   %eax,%eax
   12622:	0f 85 0e 01 00 00    	jne    12736 <mbedtls_aes_setkey_dec+0x1b6>
   12628:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1262c:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   12630:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   12635:	c1 e0 02             	shl    $0x2,%eax
   12638:	48 98                	cltq   
   1263a:	48 03 44 24 28       	add    0x28(%rsp),%rax
   1263f:	4c 8d 74 84 30       	lea    0x30(%rsp,%rax,4),%r14
   12644:	49 8b 06             	mov    (%r14),%rax
   12647:	49 83 ee 10          	sub    $0x10,%r14
   1264b:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1264f:	49 8b 46 18          	mov    0x18(%r14),%rax
   12653:	48 89 43 18          	mov    %rax,0x18(%rbx)
   12657:	8b 03                	mov    (%rbx),%eax
   12659:	83 f8 01             	cmp    $0x1,%eax
   1265c:	0f 8e bc 00 00 00    	jle    1271e <mbedtls_aes_setkey_dec+0x19e>
   12662:	44 8d 68 fe          	lea    -0x2(%rax),%r13d
   12666:	4d 89 f0             	mov    %r14,%r8
   12669:	48 8d 35 50 fb 01 00 	lea    0x1fb50(%rip),%rsi        # 321c0 <FSb>
   12670:	44 89 6c 24 1c       	mov    %r13d,0x1c(%rsp)
   12675:	49 83 c5 03          	add    $0x3,%r13
   12679:	4c 8d 1d 40 da 01 00 	lea    0x1da40(%rip),%r11        # 300c0 <RT3>
   12680:	4c 8d 15 39 e2 01 00 	lea    0x1e239(%rip),%r10        # 308c0 <RT1>
   12687:	49 c1 e5 04          	shl    $0x4,%r13
   1268b:	4c 8d 0d 2e de 01 00 	lea    0x1de2e(%rip),%r9        # 304c0 <RT2>
   12692:	49 01 dd             	add    %rbx,%r13
   12695:	48 8d 1d 24 e6 01 00 	lea    0x1e624(%rip),%rbx        # 30cc0 <RT0>
   1269c:	0f 1f 40 00          	nopl   0x0(%rax)
   126a0:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   126a5:	31 c9                	xor    %ecx,%ecx
   126a7:	41 8b 04 08          	mov    (%r8,%rcx,1),%eax
   126ab:	0f b6 d0             	movzbl %al,%edx
   126ae:	0f b6 ec             	movzbl %ah,%ebp
   126b1:	44 0f b6 3c 16       	movzbl (%rsi,%rdx,1),%r15d
   126b6:	89 c2                	mov    %eax,%edx
   126b8:	c1 e8 10             	shr    $0x10,%eax
   126bb:	c1 ea 18             	shr    $0x18,%edx
   126be:	0f b6 c0             	movzbl %al,%eax
   126c1:	0f b6 14 16          	movzbl (%rsi,%rdx,1),%edx
   126c5:	46 8b 3c bb          	mov    (%rbx,%r15,4),%r15d
   126c9:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   126cd:	45 33 3c 93          	xor    (%r11,%rdx,4),%r15d
   126d1:	44 89 fa             	mov    %r15d,%edx
   126d4:	44 0f b6 3c 2e       	movzbl (%rsi,%rbp,1),%r15d
   126d9:	43 33 14 ba          	xor    (%r10,%r15,4),%edx
   126dd:	41 33 14 81          	xor    (%r9,%rax,4),%edx
   126e1:	89 14 0f             	mov    %edx,(%rdi,%rcx,1)
   126e4:	48 83 c1 04          	add    $0x4,%rcx
   126e8:	48 83 f9 10          	cmp    $0x10,%rcx
   126ec:	75 b9                	jne    126a7 <mbedtls_aes_setkey_dec+0x127>
   126ee:	48 83 c7 10          	add    $0x10,%rdi
   126f2:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   126f7:	49 83 e8 10          	sub    $0x10,%r8
   126fb:	49 39 fd             	cmp    %rdi,%r13
   126fe:	75 a0                	jne    126a0 <mbedtls_aes_setkey_dec+0x120>
   12700:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   12704:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12708:	48 f7 d0             	not    %rax
   1270b:	48 c1 e0 04          	shl    $0x4,%rax
   1270f:	49 01 c6             	add    %rax,%r14
   12712:	48 89 d0             	mov    %rdx,%rax
   12715:	48 c1 e0 04          	shl    $0x4,%rax
   12719:	48 01 44 24 10       	add    %rax,0x10(%rsp)
   1271e:	49 8b 06             	mov    (%r14),%rax
   12721:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   12726:	48 89 03             	mov    %rax,(%rbx)
   12729:	49 8b 46 08          	mov    0x8(%r14),%rax
   1272d:	48 89 43 08          	mov    %rax,0x8(%rbx)
   12731:	e9 9c fe ff ff       	jmpq   125d2 <mbedtls_aes_setkey_dec+0x52>
   12736:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1273b:	8b 13                	mov    (%rbx),%edx
   1273d:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   12741:	48 8d 74 84 30       	lea    0x30(%rsp,%rax,4),%rsi
   12746:	e8 f5 2d ff ff       	callq  5540 <mbedtls_aesni_inverse_key>
   1274b:	e9 82 fe ff ff       	jmpq   125d2 <mbedtls_aes_setkey_dec+0x52>
   12750:	e8 0b 0b ff ff       	callq  3260 <__stack_chk_fail@plt>
   12755:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1275c:	00 00 00 00 

0000000000012760 <mbedtls_aes_xts_setkey_enc>:
   12760:	f3 0f 1e fa          	endbr64 
   12764:	41 55                	push   %r13
   12766:	41 89 d5             	mov    %edx,%r13d
   12769:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   1276e:	41 54                	push   %r12
   12770:	49 89 f4             	mov    %rsi,%r12
   12773:	89 d6                	mov    %edx,%esi
   12775:	81 ea 00 01 00 00    	sub    $0x100,%edx
   1277b:	41 d1 ed             	shr    %r13d
   1277e:	c1 ee 04             	shr    $0x4,%esi
   12781:	81 e2 ff fe ff ff    	and    $0xfffffeff,%edx
   12787:	55                   	push   %rbp
   12788:	74 06                	je     12790 <mbedtls_aes_xts_setkey_enc+0x30>
   1278a:	5d                   	pop    %rbp
   1278b:	41 5c                	pop    %r12
   1278d:	41 5d                	pop    %r13
   1278f:	c3                   	retq   
   12790:	48 89 fd             	mov    %rdi,%rbp
   12793:	4c 01 e6             	add    %r12,%rsi
   12796:	48 8d bf 20 01 00 00 	lea    0x120(%rdi),%rdi
   1279d:	44 89 ea             	mov    %r13d,%edx
   127a0:	e8 ab fa ff ff       	callq  12250 <mbedtls_aes_setkey_enc>
   127a5:	85 c0                	test   %eax,%eax
   127a7:	75 e1                	jne    1278a <mbedtls_aes_xts_setkey_enc+0x2a>
   127a9:	44 89 ea             	mov    %r13d,%edx
   127ac:	4c 89 e6             	mov    %r12,%rsi
   127af:	48 89 ef             	mov    %rbp,%rdi
   127b2:	5d                   	pop    %rbp
   127b3:	41 5c                	pop    %r12
   127b5:	41 5d                	pop    %r13
   127b7:	e9 94 fa ff ff       	jmpq   12250 <mbedtls_aes_setkey_enc>
   127bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000127c0 <mbedtls_aes_xts_setkey_dec>:
   127c0:	f3 0f 1e fa          	endbr64 
   127c4:	41 55                	push   %r13
   127c6:	41 89 d5             	mov    %edx,%r13d
   127c9:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   127ce:	41 54                	push   %r12
   127d0:	49 89 f4             	mov    %rsi,%r12
   127d3:	89 d6                	mov    %edx,%esi
   127d5:	81 ea 00 01 00 00    	sub    $0x100,%edx
   127db:	41 d1 ed             	shr    %r13d
   127de:	c1 ee 04             	shr    $0x4,%esi
   127e1:	81 e2 ff fe ff ff    	and    $0xfffffeff,%edx
   127e7:	55                   	push   %rbp
   127e8:	74 06                	je     127f0 <mbedtls_aes_xts_setkey_dec+0x30>
   127ea:	5d                   	pop    %rbp
   127eb:	41 5c                	pop    %r12
   127ed:	41 5d                	pop    %r13
   127ef:	c3                   	retq   
   127f0:	48 89 fd             	mov    %rdi,%rbp
   127f3:	4c 01 e6             	add    %r12,%rsi
   127f6:	48 8d bf 20 01 00 00 	lea    0x120(%rdi),%rdi
   127fd:	44 89 ea             	mov    %r13d,%edx
   12800:	e8 4b fa ff ff       	callq  12250 <mbedtls_aes_setkey_enc>
   12805:	85 c0                	test   %eax,%eax
   12807:	75 e1                	jne    127ea <mbedtls_aes_xts_setkey_dec+0x2a>
   12809:	44 89 ea             	mov    %r13d,%edx
   1280c:	4c 89 e6             	mov    %r12,%rsi
   1280f:	48 89 ef             	mov    %rbp,%rdi
   12812:	5d                   	pop    %rbp
   12813:	41 5c                	pop    %r12
   12815:	41 5d                	pop    %r13
   12817:	e9 64 fd ff ff       	jmpq   12580 <mbedtls_aes_setkey_dec>
   1281c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012820 <mbedtls_internal_aes_encrypt>:
   12820:	f3 0f 1e fa          	endbr64 
   12824:	41 57                	push   %r15
   12826:	4c 8d 1d 93 f1 01 00 	lea    0x1f193(%rip),%r11        # 319c0 <FT1>
   1282d:	4c 8d 15 8c ed 01 00 	lea    0x1ed8c(%rip),%r10        # 315c0 <FT2>
   12834:	41 56                	push   %r14
   12836:	41 55                	push   %r13
   12838:	41 54                	push   %r12
   1283a:	4c 8d 25 7f f5 01 00 	lea    0x1f57f(%rip),%r12        # 31dc0 <FT0>
   12841:	55                   	push   %rbp
   12842:	48 8d 2d 77 e9 01 00 	lea    0x1e977(%rip),%rbp        # 311c0 <FT3>
   12849:	53                   	push   %rbx
   1284a:	48 83 ec 48          	sub    $0x48,%rsp
   1284e:	48 89 14 24          	mov    %rdx,(%rsp)
   12852:	8b 56 08             	mov    0x8(%rsi),%edx
   12855:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1285c:	00 00 
   1285e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   12863:	31 c0                	xor    %eax,%eax
   12865:	48 8b 47 08          	mov    0x8(%rdi),%rax
   12869:	48 8d 4c 87 10       	lea    0x10(%rdi,%rax,4),%rcx
   1286e:	8b 3f                	mov    (%rdi),%edi
   12870:	8b 46 04             	mov    0x4(%rsi),%eax
   12873:	44 8b 01             	mov    (%rcx),%r8d
   12876:	33 41 04             	xor    0x4(%rcx),%eax
   12879:	4c 8d 69 10          	lea    0x10(%rcx),%r13
   1287d:	41 89 f9             	mov    %edi,%r9d
   12880:	44 33 06             	xor    (%rsi),%r8d
   12883:	33 51 08             	xor    0x8(%rcx),%edx
   12886:	8b 76 0c             	mov    0xc(%rsi),%esi
   12889:	41 d1 f9             	sar    %r9d
   1288c:	33 71 0c             	xor    0xc(%rcx),%esi
   1288f:	83 ff 03             	cmp    $0x3,%edi
   12892:	0f 8e a9 01 00 00    	jle    12a41 <mbedtls_internal_aes_encrypt+0x221>
   12898:	41 8d 79 fe          	lea    -0x2(%r9),%edi
   1289c:	4c 8d 25 1d f5 01 00 	lea    0x1f51d(%rip),%r12        # 31dc0 <FT0>
   128a3:	4d 89 e9             	mov    %r13,%r9
   128a6:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
   128aa:	48 c1 e7 05          	shl    $0x5,%rdi
   128ae:	48 8d 2d 0b e9 01 00 	lea    0x1e90b(%rip),%rbp        # 311c0 <FT3>
   128b5:	4c 8d 1d 04 f1 01 00 	lea    0x1f104(%rip),%r11        # 319c0 <FT1>
   128bc:	4c 8d 74 39 30       	lea    0x30(%rcx,%rdi,1),%r14
   128c1:	4c 8d 15 f8 ec 01 00 	lea    0x1ecf8(%rip),%r10        # 315c0 <FT2>
   128c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   128cf:	00 
   128d0:	89 f1                	mov    %esi,%ecx
   128d2:	41 0f b6 f8          	movzbl %r8b,%edi
   128d6:	44 89 c3             	mov    %r8d,%ebx
   128d9:	41 89 c7             	mov    %eax,%r15d
   128dc:	c1 e9 18             	shr    $0x18,%ecx
   128df:	41 8b 3c bc          	mov    (%r12,%rdi,4),%edi
   128e3:	c1 eb 18             	shr    $0x18,%ebx
   128e6:	33 7c 8d 00          	xor    0x0(%rbp,%rcx,4),%edi
   128ea:	0f b6 cc             	movzbl %ah,%ecx
   128ed:	41 33 39             	xor    (%r9),%edi
   128f0:	41 c1 ef 18          	shr    $0x18,%r15d
   128f4:	41 33 3c 8b          	xor    (%r11,%rcx,4),%edi
   128f8:	89 d1                	mov    %edx,%ecx
   128fa:	c1 e9 10             	shr    $0x10,%ecx
   128fd:	0f b6 c9             	movzbl %cl,%ecx
   12900:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
   12904:	0f b6 c8             	movzbl %al,%ecx
   12907:	c1 e8 10             	shr    $0x10,%eax
   1290a:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
   1290e:	33 4c 9d 00          	xor    0x0(%rbp,%rbx,4),%ecx
   12912:	0f b6 de             	movzbl %dh,%ebx
   12915:	0f b6 c0             	movzbl %al,%eax
   12918:	41 33 49 04          	xor    0x4(%r9),%ecx
   1291c:	41 33 0c 9b          	xor    (%r11,%rbx,4),%ecx
   12920:	89 f3                	mov    %esi,%ebx
   12922:	c1 eb 10             	shr    $0x10,%ebx
   12925:	0f b6 db             	movzbl %bl,%ebx
   12928:	41 33 0c 9a          	xor    (%r10,%rbx,4),%ecx
   1292c:	0f b6 da             	movzbl %dl,%ebx
   1292f:	c1 ea 18             	shr    $0x18,%edx
   12932:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   12936:	89 f1                	mov    %esi,%ecx
   12938:	41 8b 1c 9c          	mov    (%r12,%rbx,4),%ebx
   1293c:	40 0f b6 f6          	movzbl %sil,%esi
   12940:	0f b6 cd             	movzbl %ch,%ecx
   12943:	42 33 5c bd 00       	xor    0x0(%rbp,%r15,4),%ebx
   12948:	41 33 59 08          	xor    0x8(%r9),%ebx
   1294c:	45 89 c7             	mov    %r8d,%r15d
   1294f:	41 33 1c 8b          	xor    (%r11,%rcx,4),%ebx
   12953:	44 89 c1             	mov    %r8d,%ecx
   12956:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   1295a:	41 c1 ef 10          	shr    $0x10,%r15d
   1295e:	33 74 95 00          	xor    0x0(%rbp,%rdx,4),%esi
   12962:	0f b6 d5             	movzbl %ch,%edx
   12965:	41 33 71 0c          	xor    0xc(%r9),%esi
   12969:	45 0f b6 ff          	movzbl %r15b,%r15d
   1296d:	41 33 34 93          	xor    (%r11,%rdx,4),%esi
   12971:	41 33 34 82          	xor    (%r10,%rax,4),%esi
   12975:	40 0f b6 d7          	movzbl %dil,%edx
   12979:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   1297d:	89 f0                	mov    %esi,%eax
   1297f:	43 33 1c ba          	xor    (%r10,%r15,4),%ebx
   12983:	c1 e8 18             	shr    $0x18,%eax
   12986:	45 8b 04 94          	mov    (%r12,%rdx,4),%r8d
   1298a:	89 fa                	mov    %edi,%edx
   1298c:	44 33 44 85 00       	xor    0x0(%rbp,%rax,4),%r8d
   12991:	0f b6 c5             	movzbl %ch,%eax
   12994:	45 33 41 10          	xor    0x10(%r9),%r8d
   12998:	c1 ea 18             	shr    $0x18,%edx
   1299b:	45 33 04 83          	xor    (%r11,%rax,4),%r8d
   1299f:	89 d8                	mov    %ebx,%eax
   129a1:	c1 e8 10             	shr    $0x10,%eax
   129a4:	0f b6 c0             	movzbl %al,%eax
   129a7:	45 33 04 82          	xor    (%r10,%rax,4),%r8d
   129ab:	0f b6 c1             	movzbl %cl,%eax
   129ae:	41 8b 04 84          	mov    (%r12,%rax,4),%eax
   129b2:	33 44 95 00          	xor    0x0(%rbp,%rdx,4),%eax
   129b6:	0f b6 d7             	movzbl %bh,%edx
   129b9:	41 33 41 14          	xor    0x14(%r9),%eax
   129bd:	41 33 04 93          	xor    (%r11,%rdx,4),%eax
   129c1:	89 f2                	mov    %esi,%edx
   129c3:	c1 e9 18             	shr    $0x18,%ecx
   129c6:	c1 ea 10             	shr    $0x10,%edx
   129c9:	4c 63 f9             	movslq %ecx,%r15
   129cc:	89 f1                	mov    %esi,%ecx
   129ce:	40 0f b6 f6          	movzbl %sil,%esi
   129d2:	0f b6 d2             	movzbl %dl,%edx
   129d5:	0f b6 cd             	movzbl %ch,%ecx
   129d8:	49 83 c1 20          	add    $0x20,%r9
   129dc:	41 33 04 92          	xor    (%r10,%rdx,4),%eax
   129e0:	0f b6 d3             	movzbl %bl,%edx
   129e3:	c1 eb 18             	shr    $0x18,%ebx
   129e6:	41 8b 14 94          	mov    (%r12,%rdx,4),%edx
   129ea:	42 33 54 bd 00       	xor    0x0(%rbp,%r15,4),%edx
   129ef:	41 89 ff             	mov    %edi,%r15d
   129f2:	41 33 51 f8          	xor    -0x8(%r9),%edx
   129f6:	41 33 14 8b          	xor    (%r11,%rcx,4),%edx
   129fa:	41 c1 ef 10          	shr    $0x10,%r15d
   129fe:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   12a02:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12a06:	45 0f b6 ff          	movzbl %r15b,%r15d
   12a0a:	33 74 9d 00          	xor    0x0(%rbp,%rbx,4),%esi
   12a0e:	89 fb                	mov    %edi,%ebx
   12a10:	41 33 71 fc          	xor    -0x4(%r9),%esi
   12a14:	c1 e9 10             	shr    $0x10,%ecx
   12a17:	0f b6 ff             	movzbl %bh,%edi
   12a1a:	43 33 14 ba          	xor    (%r10,%r15,4),%edx
   12a1e:	0f b6 c9             	movzbl %cl,%ecx
   12a21:	41 33 34 bb          	xor    (%r11,%rdi,4),%esi
   12a25:	41 33 34 8a          	xor    (%r10,%rcx,4),%esi
   12a29:	4d 39 f1             	cmp    %r14,%r9
   12a2c:	0f 85 9e fe ff ff    	jne    128d0 <mbedtls_internal_aes_encrypt+0xb0>
   12a32:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   12a36:	48 83 c1 01          	add    $0x1,%rcx
   12a3a:	48 c1 e1 05          	shl    $0x5,%rcx
   12a3e:	49 01 cd             	add    %rcx,%r13
   12a41:	89 f1                	mov    %esi,%ecx
   12a43:	41 0f b6 f8          	movzbl %r8b,%edi
   12a47:	45 89 c1             	mov    %r8d,%r9d
   12a4a:	0f b6 de             	movzbl %dh,%ebx
   12a4d:	c1 e9 18             	shr    $0x18,%ecx
   12a50:	41 8b 3c bc          	mov    (%r12,%rdi,4),%edi
   12a54:	41 c1 e9 18          	shr    $0x18,%r9d
   12a58:	33 7c 8d 00          	xor    0x0(%rbp,%rcx,4),%edi
   12a5c:	0f b6 cc             	movzbl %ah,%ecx
   12a5f:	41 33 7d 00          	xor    0x0(%r13),%edi
   12a63:	41 33 3c 8b          	xor    (%r11,%rcx,4),%edi
   12a67:	89 d1                	mov    %edx,%ecx
   12a69:	c1 e9 10             	shr    $0x10,%ecx
   12a6c:	0f b6 c9             	movzbl %cl,%ecx
   12a6f:	41 33 3c 8a          	xor    (%r10,%rcx,4),%edi
   12a73:	0f b6 c8             	movzbl %al,%ecx
   12a76:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
   12a7a:	42 33 4c 8d 00       	xor    0x0(%rbp,%r9,4),%ecx
   12a7f:	41 89 f1             	mov    %esi,%r9d
   12a82:	89 7c 24 20          	mov    %edi,0x20(%rsp)
   12a86:	41 c1 e9 10          	shr    $0x10,%r9d
   12a8a:	41 33 4d 04          	xor    0x4(%r13),%ecx
   12a8e:	41 33 0c 9b          	xor    (%r11,%rbx,4),%ecx
   12a92:	0f b6 da             	movzbl %dl,%ebx
   12a95:	45 0f b6 c9          	movzbl %r9b,%r9d
   12a99:	41 8b 1c 9c          	mov    (%r12,%rbx,4),%ebx
   12a9d:	c1 ea 18             	shr    $0x18,%edx
   12aa0:	43 33 0c 8a          	xor    (%r10,%r9,4),%ecx
   12aa4:	41 89 c1             	mov    %eax,%r9d
   12aa7:	c1 e8 10             	shr    $0x10,%eax
   12aaa:	41 c1 e9 18          	shr    $0x18,%r9d
   12aae:	0f b6 c0             	movzbl %al,%eax
   12ab1:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   12ab5:	42 33 5c 8d 00       	xor    0x0(%rbp,%r9,4),%ebx
   12aba:	41 33 5d 08          	xor    0x8(%r13),%ebx
   12abe:	45 89 c1             	mov    %r8d,%r9d
   12ac1:	41 89 de             	mov    %ebx,%r14d
   12ac4:	89 f3                	mov    %esi,%ebx
   12ac6:	40 0f b6 f6          	movzbl %sil,%esi
   12aca:	41 c1 e9 10          	shr    $0x10,%r9d
   12ace:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12ad2:	33 74 95 00          	xor    0x0(%rbp,%rdx,4),%esi
   12ad6:	44 89 c2             	mov    %r8d,%edx
   12ad9:	0f b6 df             	movzbl %bh,%ebx
   12adc:	0f b6 d6             	movzbl %dh,%edx
   12adf:	41 8b 1c 9b          	mov    (%r11,%rbx,4),%ebx
   12ae3:	41 33 75 0c          	xor    0xc(%r13),%esi
   12ae7:	45 0f b6 c9          	movzbl %r9b,%r9d
   12aeb:	41 33 34 93          	xor    (%r11,%rdx,4),%esi
   12aef:	89 f2                	mov    %esi,%edx
   12af1:	40 0f b6 f7          	movzbl %dil,%esi
   12af5:	41 33 14 82          	xor    (%r10,%rax,4),%edx
   12af9:	44 31 f3             	xor    %r14d,%ebx
   12afc:	48 8d 05 bd f6 01 00 	lea    0x1f6bd(%rip),%rax        # 321c0 <FSb>
   12b03:	43 33 1c 8a          	xor    (%r10,%r9,4),%ebx
   12b07:	89 54 24 2c          	mov    %edx,0x2c(%rsp)
   12b0b:	41 89 ca             	mov    %ecx,%r10d
   12b0e:	44 0f b6 0c 30       	movzbl (%rax,%rsi,1),%r9d
   12b13:	89 d6                	mov    %edx,%esi
   12b15:	45 33 4d 10          	xor    0x10(%r13),%r9d
   12b19:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
   12b1d:	c1 ee 18             	shr    $0x18,%esi
   12b20:	0f b6 ee             	movzbl %dh,%ebp
   12b23:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b27:	c1 e6 18             	shl    $0x18,%esi
   12b2a:	41 31 f1             	xor    %esi,%r9d
   12b2d:	0f b6 f5             	movzbl %ch,%esi
   12b30:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b34:	c1 e6 08             	shl    $0x8,%esi
   12b37:	41 31 f1             	xor    %esi,%r9d
   12b3a:	89 de                	mov    %ebx,%esi
   12b3c:	c1 ee 10             	shr    $0x10,%esi
   12b3f:	40 0f b6 f6          	movzbl %sil,%esi
   12b43:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b47:	c1 e6 10             	shl    $0x10,%esi
   12b4a:	41 31 f1             	xor    %esi,%r9d
   12b4d:	0f b6 f1             	movzbl %cl,%esi
   12b50:	41 c1 ea 18          	shr    $0x18,%r10d
   12b54:	44 0f b6 04 30       	movzbl (%rax,%rsi,1),%r8d
   12b59:	89 fe                	mov    %edi,%esi
   12b5b:	45 33 45 14          	xor    0x14(%r13),%r8d
   12b5f:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   12b64:	c1 ee 18             	shr    $0x18,%esi
   12b67:	c1 e9 10             	shr    $0x10,%ecx
   12b6a:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b6e:	46 0f b6 14 10       	movzbl (%rax,%r10,1),%r10d
   12b73:	0f b6 c9             	movzbl %cl,%ecx
   12b76:	c1 e6 18             	shl    $0x18,%esi
   12b79:	41 c1 e2 18          	shl    $0x18,%r10d
   12b7d:	41 31 f0             	xor    %esi,%r8d
   12b80:	0f b6 f7             	movzbl %bh,%esi
   12b83:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12b87:	c1 e6 08             	shl    $0x8,%esi
   12b8a:	41 31 f0             	xor    %esi,%r8d
   12b8d:	89 d6                	mov    %edx,%esi
   12b8f:	0f b6 d2             	movzbl %dl,%edx
   12b92:	c1 ee 10             	shr    $0x10,%esi
   12b95:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
   12b99:	41 33 55 1c          	xor    0x1c(%r13),%edx
   12b9d:	40 0f b6 f6          	movzbl %sil,%esi
   12ba1:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12ba5:	c1 e6 10             	shl    $0x10,%esi
   12ba8:	41 31 f0             	xor    %esi,%r8d
   12bab:	0f b6 f3             	movzbl %bl,%esi
   12bae:	c1 eb 18             	shr    $0x18,%ebx
   12bb1:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12bb5:	41 33 75 18          	xor    0x18(%r13),%esi
   12bb9:	44 89 44 24 14       	mov    %r8d,0x14(%rsp)
   12bbe:	44 31 d6             	xor    %r10d,%esi
   12bc1:	44 0f b6 14 28       	movzbl (%rax,%rbp,1),%r10d
   12bc6:	41 c1 e2 08          	shl    $0x8,%r10d
   12bca:	44 31 d6             	xor    %r10d,%esi
   12bcd:	41 89 fa             	mov    %edi,%r10d
   12bd0:	41 c1 ea 10          	shr    $0x10,%r10d
   12bd4:	45 0f b6 d2          	movzbl %r10b,%r10d
   12bd8:	46 0f b6 14 10       	movzbl (%rax,%r10,1),%r10d
   12bdd:	41 c1 e2 10          	shl    $0x10,%r10d
   12be1:	44 31 d6             	xor    %r10d,%esi
   12be4:	44 0f b6 14 18       	movzbl (%rax,%rbx,1),%r10d
   12be9:	89 fb                	mov    %edi,%ebx
   12beb:	0f b6 ff             	movzbl %bh,%edi
   12bee:	89 74 24 18          	mov    %esi,0x18(%rsp)
   12bf2:	0f b6 3c 38          	movzbl (%rax,%rdi,1),%edi
   12bf6:	41 c1 e2 18          	shl    $0x18,%r10d
   12bfa:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
   12bfe:	44 31 d2             	xor    %r10d,%edx
   12c01:	c1 e7 08             	shl    $0x8,%edi
   12c04:	c1 e0 10             	shl    $0x10,%eax
   12c07:	31 fa                	xor    %edi,%edx
   12c09:	48 8b 3c 24          	mov    (%rsp),%rdi
   12c0d:	31 d0                	xor    %edx,%eax
   12c0f:	89 77 08             	mov    %esi,0x8(%rdi)
   12c12:	be 20 00 00 00       	mov    $0x20,%esi
   12c17:	89 47 0c             	mov    %eax,0xc(%rdi)
   12c1a:	44 89 0f             	mov    %r9d,(%rdi)
   12c1d:	44 89 47 04          	mov    %r8d,0x4(%rdi)
   12c21:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   12c26:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   12c2a:	e8 f1 25 ff ff       	callq  5220 <mbedtls_platform_zeroize>
   12c2f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   12c34:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   12c3b:	00 00 
   12c3d:	75 11                	jne    12c50 <mbedtls_internal_aes_encrypt+0x430>
   12c3f:	48 83 c4 48          	add    $0x48,%rsp
   12c43:	31 c0                	xor    %eax,%eax
   12c45:	5b                   	pop    %rbx
   12c46:	5d                   	pop    %rbp
   12c47:	41 5c                	pop    %r12
   12c49:	41 5d                	pop    %r13
   12c4b:	41 5e                	pop    %r14
   12c4d:	41 5f                	pop    %r15
   12c4f:	c3                   	retq   
   12c50:	e8 0b 06 ff ff       	callq  3260 <__stack_chk_fail@plt>
   12c55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12c5c:	00 00 00 00 

0000000000012c60 <mbedtls_internal_aes_decrypt>:
   12c60:	f3 0f 1e fa          	endbr64 
   12c64:	41 57                	push   %r15
   12c66:	4c 8d 1d 53 dc 01 00 	lea    0x1dc53(%rip),%r11        # 308c0 <RT1>
   12c6d:	4c 8d 15 4c d8 01 00 	lea    0x1d84c(%rip),%r10        # 304c0 <RT2>
   12c74:	41 56                	push   %r14
   12c76:	41 55                	push   %r13
   12c78:	41 54                	push   %r12
   12c7a:	4c 8d 25 3f e0 01 00 	lea    0x1e03f(%rip),%r12        # 30cc0 <RT0>
   12c81:	55                   	push   %rbp
   12c82:	48 8d 2d 37 d4 01 00 	lea    0x1d437(%rip),%rbp        # 300c0 <RT3>
   12c89:	53                   	push   %rbx
   12c8a:	48 83 ec 48          	sub    $0x48,%rsp
   12c8e:	44 8b 46 08          	mov    0x8(%rsi),%r8d
   12c92:	48 89 14 24          	mov    %rdx,(%rsp)
   12c96:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12c9d:	00 00 
   12c9f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   12ca4:	31 c0                	xor    %eax,%eax
   12ca6:	48 8b 47 08          	mov    0x8(%rdi),%rax
   12caa:	48 8d 4c 87 10       	lea    0x10(%rdi,%rax,4),%rcx
   12caf:	8b 3f                	mov    (%rdi),%edi
   12cb1:	8b 46 04             	mov    0x4(%rsi),%eax
   12cb4:	8b 11                	mov    (%rcx),%edx
   12cb6:	33 41 04             	xor    0x4(%rcx),%eax
   12cb9:	4c 8d 69 10          	lea    0x10(%rcx),%r13
   12cbd:	41 89 f9             	mov    %edi,%r9d
   12cc0:	33 16                	xor    (%rsi),%edx
   12cc2:	44 33 41 08          	xor    0x8(%rcx),%r8d
   12cc6:	8b 76 0c             	mov    0xc(%rsi),%esi
   12cc9:	41 d1 f9             	sar    %r9d
   12ccc:	33 71 0c             	xor    0xc(%rcx),%esi
   12ccf:	83 ff 03             	cmp    $0x3,%edi
   12cd2:	0f 8e b7 01 00 00    	jle    12e8f <mbedtls_internal_aes_decrypt+0x22f>
   12cd8:	41 8d 79 fe          	lea    -0x2(%r9),%edi
   12cdc:	4c 8d 25 dd df 01 00 	lea    0x1dfdd(%rip),%r12        # 30cc0 <RT0>
   12ce3:	4d 89 e9             	mov    %r13,%r9
   12ce6:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
   12cea:	48 c1 e7 05          	shl    $0x5,%rdi
   12cee:	48 8d 2d cb d3 01 00 	lea    0x1d3cb(%rip),%rbp        # 300c0 <RT3>
   12cf5:	4c 8d 1d c4 db 01 00 	lea    0x1dbc4(%rip),%r11        # 308c0 <RT1>
   12cfc:	4c 8d 74 39 30       	lea    0x30(%rcx,%rdi,1),%r14
   12d01:	4c 8d 15 b8 d7 01 00 	lea    0x1d7b8(%rip),%r10        # 304c0 <RT2>
   12d08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12d0f:	00 
   12d10:	89 c1                	mov    %eax,%ecx
   12d12:	0f b6 fa             	movzbl %dl,%edi
   12d15:	41 89 f7             	mov    %esi,%r15d
   12d18:	c1 e9 18             	shr    $0x18,%ecx
   12d1b:	41 8b 1c bc          	mov    (%r12,%rdi,4),%ebx
   12d1f:	44 89 c7             	mov    %r8d,%edi
   12d22:	41 c1 ef 18          	shr    $0x18,%r15d
   12d26:	33 5c 8d 00          	xor    0x0(%rbp,%rcx,4),%ebx
   12d2a:	89 f1                	mov    %esi,%ecx
   12d2c:	41 33 19             	xor    (%r9),%ebx
   12d2f:	c1 ef 18             	shr    $0x18,%edi
   12d32:	0f b6 cd             	movzbl %ch,%ecx
   12d35:	41 33 1c 8b          	xor    (%r11,%rcx,4),%ebx
   12d39:	44 89 c1             	mov    %r8d,%ecx
   12d3c:	c1 e9 10             	shr    $0x10,%ecx
   12d3f:	0f b6 c9             	movzbl %cl,%ecx
   12d42:	41 33 1c 8a          	xor    (%r10,%rcx,4),%ebx
   12d46:	0f b6 c8             	movzbl %al,%ecx
   12d49:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
   12d4d:	33 4c bd 00          	xor    0x0(%rbp,%rdi,4),%ecx
   12d51:	0f b6 fe             	movzbl %dh,%edi
   12d54:	41 33 49 04          	xor    0x4(%r9),%ecx
   12d58:	41 33 0c bb          	xor    (%r11,%rdi,4),%ecx
   12d5c:	89 f7                	mov    %esi,%edi
   12d5e:	40 0f b6 f6          	movzbl %sil,%esi
   12d62:	c1 ef 10             	shr    $0x10,%edi
   12d65:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12d69:	40 0f b6 ff          	movzbl %dil,%edi
   12d6d:	41 33 0c ba          	xor    (%r10,%rdi,4),%ecx
   12d71:	41 0f b6 f8          	movzbl %r8b,%edi
   12d75:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   12d79:	41 8b 3c bc          	mov    (%r12,%rdi,4),%edi
   12d7d:	0f b6 cc             	movzbl %ah,%ecx
   12d80:	c1 e8 10             	shr    $0x10,%eax
   12d83:	42 33 7c bd 00       	xor    0x0(%rbp,%r15,4),%edi
   12d88:	41 89 d7             	mov    %edx,%r15d
   12d8b:	c1 ea 18             	shr    $0x18,%edx
   12d8e:	41 33 79 08          	xor    0x8(%r9),%edi
   12d92:	33 74 95 00          	xor    0x0(%rbp,%rdx,4),%esi
   12d96:	41 33 3c 8b          	xor    (%r11,%rcx,4),%edi
   12d9a:	44 89 c2             	mov    %r8d,%edx
   12d9d:	0f b6 c0             	movzbl %al,%eax
   12da0:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   12da4:	0f b6 d6             	movzbl %dh,%edx
   12da7:	41 33 71 0c          	xor    0xc(%r9),%esi
   12dab:	41 c1 ef 10          	shr    $0x10,%r15d
   12daf:	41 33 34 93          	xor    (%r11,%rdx,4),%esi
   12db3:	41 33 34 82          	xor    (%r10,%rax,4),%esi
   12db7:	0f b6 d3             	movzbl %bl,%edx
   12dba:	45 0f b6 ff          	movzbl %r15b,%r15d
   12dbe:	89 c8                	mov    %ecx,%eax
   12dc0:	41 8b 14 94          	mov    (%r12,%rdx,4),%edx
   12dc4:	43 33 3c ba          	xor    (%r10,%r15,4),%edi
   12dc8:	0f b6 cf             	movzbl %bh,%ecx
   12dcb:	c1 e8 18             	shr    $0x18,%eax
   12dce:	41 89 f8             	mov    %edi,%r8d
   12dd1:	41 89 f7             	mov    %esi,%r15d
   12dd4:	33 54 85 00          	xor    0x0(%rbp,%rax,4),%edx
   12dd8:	89 f0                	mov    %esi,%eax
   12dda:	41 33 51 10          	xor    0x10(%r9),%edx
   12dde:	41 c1 e8 18          	shr    $0x18,%r8d
   12de2:	0f b6 c4             	movzbl %ah,%eax
   12de5:	41 33 14 83          	xor    (%r11,%rax,4),%edx
   12de9:	89 f8                	mov    %edi,%eax
   12deb:	c1 e8 10             	shr    $0x10,%eax
   12dee:	0f b6 c0             	movzbl %al,%eax
   12df1:	41 33 14 82          	xor    (%r10,%rax,4),%edx
   12df5:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   12dfa:	41 8b 04 84          	mov    (%r12,%rax,4),%eax
   12dfe:	42 33 44 85 00       	xor    0x0(%rbp,%r8,4),%eax
   12e03:	41 89 f0             	mov    %esi,%r8d
   12e06:	40 0f b6 f6          	movzbl %sil,%esi
   12e0a:	41 33 41 14          	xor    0x14(%r9),%eax
   12e0e:	41 c1 e8 10          	shr    $0x10,%r8d
   12e12:	41 33 04 8b          	xor    (%r11,%rcx,4),%eax
   12e16:	49 83 c1 20          	add    $0x20,%r9
   12e1a:	45 0f b6 c0          	movzbl %r8b,%r8d
   12e1e:	41 c1 ef 18          	shr    $0x18,%r15d
   12e22:	43 33 04 82          	xor    (%r10,%r8,4),%eax
   12e26:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   12e2a:	44 0f b6 c7          	movzbl %dil,%r8d
   12e2e:	47 8b 04 84          	mov    (%r12,%r8,4),%r8d
   12e32:	46 33 44 bd 00       	xor    0x0(%rbp,%r15,4),%r8d
   12e37:	41 89 df             	mov    %ebx,%r15d
   12e3a:	c1 eb 18             	shr    $0x18,%ebx
   12e3d:	0f b6 cd             	movzbl %ch,%ecx
   12e40:	45 33 41 f8          	xor    -0x8(%r9),%r8d
   12e44:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12e48:	41 c1 ef 10          	shr    $0x10,%r15d
   12e4c:	45 33 04 8b          	xor    (%r11,%rcx,4),%r8d
   12e50:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   12e54:	45 0f b6 ff          	movzbl %r15b,%r15d
   12e58:	33 74 9d 00          	xor    0x0(%rbp,%rbx,4),%esi
   12e5c:	89 fb                	mov    %edi,%ebx
   12e5e:	41 33 71 fc          	xor    -0x4(%r9),%esi
   12e62:	c1 e9 10             	shr    $0x10,%ecx
   12e65:	0f b6 ff             	movzbl %bh,%edi
   12e68:	47 33 04 ba          	xor    (%r10,%r15,4),%r8d
   12e6c:	0f b6 c9             	movzbl %cl,%ecx
   12e6f:	41 33 34 bb          	xor    (%r11,%rdi,4),%esi
   12e73:	41 33 34 8a          	xor    (%r10,%rcx,4),%esi
   12e77:	4d 39 f1             	cmp    %r14,%r9
   12e7a:	0f 85 90 fe ff ff    	jne    12d10 <mbedtls_internal_aes_decrypt+0xb0>
   12e80:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   12e84:	48 83 c1 01          	add    $0x1,%rcx
   12e88:	48 c1 e1 05          	shl    $0x5,%rcx
   12e8c:	49 01 cd             	add    %rcx,%r13
   12e8f:	89 c1                	mov    %eax,%ecx
   12e91:	0f b6 fa             	movzbl %dl,%edi
   12e94:	41 89 f1             	mov    %esi,%r9d
   12e97:	c1 e9 18             	shr    $0x18,%ecx
   12e9a:	41 8b 1c bc          	mov    (%r12,%rdi,4),%ebx
   12e9e:	44 89 c7             	mov    %r8d,%edi
   12ea1:	41 c1 e9 18          	shr    $0x18,%r9d
   12ea5:	33 5c 8d 00          	xor    0x0(%rbp,%rcx,4),%ebx
   12ea9:	89 f1                	mov    %esi,%ecx
   12eab:	41 33 5d 00          	xor    0x0(%r13),%ebx
   12eaf:	c1 ef 18             	shr    $0x18,%edi
   12eb2:	0f b6 cd             	movzbl %ch,%ecx
   12eb5:	41 33 1c 8b          	xor    (%r11,%rcx,4),%ebx
   12eb9:	44 89 c1             	mov    %r8d,%ecx
   12ebc:	c1 e9 10             	shr    $0x10,%ecx
   12ebf:	0f b6 c9             	movzbl %cl,%ecx
   12ec2:	41 33 1c 8a          	xor    (%r10,%rcx,4),%ebx
   12ec6:	0f b6 c8             	movzbl %al,%ecx
   12ec9:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
   12ecd:	33 4c bd 00          	xor    0x0(%rbp,%rdi,4),%ecx
   12ed1:	0f b6 fe             	movzbl %dh,%edi
   12ed4:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
   12ed8:	41 33 4d 04          	xor    0x4(%r13),%ecx
   12edc:	41 33 0c bb          	xor    (%r11,%rdi,4),%ecx
   12ee0:	89 f7                	mov    %esi,%edi
   12ee2:	40 0f b6 f6          	movzbl %sil,%esi
   12ee6:	c1 ef 10             	shr    $0x10,%edi
   12ee9:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
   12eed:	40 0f b6 ff          	movzbl %dil,%edi
   12ef1:	41 33 0c ba          	xor    (%r10,%rdi,4),%ecx
   12ef5:	41 0f b6 f8          	movzbl %r8b,%edi
   12ef9:	41 8b 3c bc          	mov    (%r12,%rdi,4),%edi
   12efd:	42 33 7c 8d 00       	xor    0x0(%rbp,%r9,4),%edi
   12f02:	41 89 d1             	mov    %edx,%r9d
   12f05:	c1 ea 18             	shr    $0x18,%edx
   12f08:	33 74 95 00          	xor    0x0(%rbp,%rdx,4),%esi
   12f0c:	41 8b 55 0c          	mov    0xc(%r13),%edx
   12f10:	41 c1 e9 10          	shr    $0x10,%r9d
   12f14:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   12f18:	41 33 7d 08          	xor    0x8(%r13),%edi
   12f1c:	45 0f b6 c9          	movzbl %r9b,%r9d
   12f20:	0f b6 ed             	movzbl %ch,%ebp
   12f23:	31 f2                	xor    %esi,%edx
   12f25:	41 89 fe             	mov    %edi,%r14d
   12f28:	0f b6 fc             	movzbl %ah,%edi
   12f2b:	c1 e8 10             	shr    $0x10,%eax
   12f2e:	89 d6                	mov    %edx,%esi
   12f30:	44 89 c2             	mov    %r8d,%edx
   12f33:	41 8b 3c bb          	mov    (%r11,%rdi,4),%edi
   12f37:	0f b6 c0             	movzbl %al,%eax
   12f3a:	0f b6 d6             	movzbl %dh,%edx
   12f3d:	41 8b 14 93          	mov    (%r11,%rdx,4),%edx
   12f41:	44 31 f7             	xor    %r14d,%edi
   12f44:	43 33 3c 8a          	xor    (%r10,%r9,4),%edi
   12f48:	89 7c 24 28          	mov    %edi,0x28(%rsp)
   12f4c:	31 f2                	xor    %esi,%edx
   12f4e:	0f b6 f3             	movzbl %bl,%esi
   12f51:	41 33 14 82          	xor    (%r10,%rax,4),%edx
   12f55:	48 8d 05 64 e1 01 00 	lea    0x1e164(%rip),%rax        # 310c0 <RSb>
   12f5c:	89 54 24 2c          	mov    %edx,0x2c(%rsp)
   12f60:	41 89 d2             	mov    %edx,%r10d
   12f63:	44 0f b6 0c 30       	movzbl (%rax,%rsi,1),%r9d
   12f68:	89 ce                	mov    %ecx,%esi
   12f6a:	45 33 4d 10          	xor    0x10(%r13),%r9d
   12f6e:	c1 ee 18             	shr    $0x18,%esi
   12f71:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12f75:	c1 e6 18             	shl    $0x18,%esi
   12f78:	41 31 f1             	xor    %esi,%r9d
   12f7b:	0f b6 f6             	movzbl %dh,%esi
   12f7e:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12f82:	c1 e6 08             	shl    $0x8,%esi
   12f85:	41 31 f1             	xor    %esi,%r9d
   12f88:	89 fe                	mov    %edi,%esi
   12f8a:	c1 ee 10             	shr    $0x10,%esi
   12f8d:	40 0f b6 f6          	movzbl %sil,%esi
   12f91:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12f95:	c1 e6 10             	shl    $0x10,%esi
   12f98:	41 31 f1             	xor    %esi,%r9d
   12f9b:	0f b6 f1             	movzbl %cl,%esi
   12f9e:	41 c1 ea 18          	shr    $0x18,%r10d
   12fa2:	44 0f b6 04 30       	movzbl (%rax,%rsi,1),%r8d
   12fa7:	89 fe                	mov    %edi,%esi
   12fa9:	45 33 45 14          	xor    0x14(%r13),%r8d
   12fad:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   12fb2:	c1 ee 18             	shr    $0x18,%esi
   12fb5:	c1 e9 10             	shr    $0x10,%ecx
   12fb8:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12fbc:	46 0f b6 14 10       	movzbl (%rax,%r10,1),%r10d
   12fc1:	0f b6 c9             	movzbl %cl,%ecx
   12fc4:	c1 e6 18             	shl    $0x18,%esi
   12fc7:	41 c1 e2 18          	shl    $0x18,%r10d
   12fcb:	41 31 f0             	xor    %esi,%r8d
   12fce:	0f b6 f7             	movzbl %bh,%esi
   12fd1:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12fd5:	c1 e6 08             	shl    $0x8,%esi
   12fd8:	41 31 f0             	xor    %esi,%r8d
   12fdb:	89 d6                	mov    %edx,%esi
   12fdd:	0f b6 d2             	movzbl %dl,%edx
   12fe0:	c1 ee 10             	shr    $0x10,%esi
   12fe3:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
   12fe7:	41 33 55 1c          	xor    0x1c(%r13),%edx
   12feb:	40 0f b6 f6          	movzbl %sil,%esi
   12fef:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   12ff3:	c1 e6 10             	shl    $0x10,%esi
   12ff6:	41 31 f0             	xor    %esi,%r8d
   12ff9:	40 0f b6 f7          	movzbl %dil,%esi
   12ffd:	0f b6 34 30          	movzbl (%rax,%rsi,1),%esi
   13001:	41 33 75 18          	xor    0x18(%r13),%esi
   13005:	44 89 44 24 14       	mov    %r8d,0x14(%rsp)
   1300a:	44 31 d6             	xor    %r10d,%esi
   1300d:	44 0f b6 14 28       	movzbl (%rax,%rbp,1),%r10d
   13012:	41 c1 e2 08          	shl    $0x8,%r10d
   13016:	44 31 d6             	xor    %r10d,%esi
   13019:	41 89 da             	mov    %ebx,%r10d
   1301c:	c1 eb 18             	shr    $0x18,%ebx
   1301f:	41 c1 ea 10          	shr    $0x10,%r10d
   13023:	45 0f b6 d2          	movzbl %r10b,%r10d
   13027:	46 0f b6 14 10       	movzbl (%rax,%r10,1),%r10d
   1302c:	41 c1 e2 10          	shl    $0x10,%r10d
   13030:	44 31 d6             	xor    %r10d,%esi
   13033:	44 0f b6 14 18       	movzbl (%rax,%rbx,1),%r10d
   13038:	89 fb                	mov    %edi,%ebx
   1303a:	0f b6 ff             	movzbl %bh,%edi
   1303d:	48 8b 1c 24          	mov    (%rsp),%rbx
   13041:	89 74 24 18          	mov    %esi,0x18(%rsp)
   13045:	0f b6 3c 38          	movzbl (%rax,%rdi,1),%edi
   13049:	41 c1 e2 18          	shl    $0x18,%r10d
   1304d:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
   13051:	44 31 d2             	xor    %r10d,%edx
   13054:	89 73 08             	mov    %esi,0x8(%rbx)
   13057:	be 20 00 00 00       	mov    $0x20,%esi
   1305c:	c1 e7 08             	shl    $0x8,%edi
   1305f:	c1 e0 10             	shl    $0x10,%eax
   13062:	44 89 0b             	mov    %r9d,(%rbx)
   13065:	31 fa                	xor    %edi,%edx
   13067:	44 89 43 04          	mov    %r8d,0x4(%rbx)
   1306b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   13070:	31 d0                	xor    %edx,%eax
   13072:	89 43 0c             	mov    %eax,0xc(%rbx)
   13075:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   13079:	e8 a2 21 ff ff       	callq  5220 <mbedtls_platform_zeroize>
   1307e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13083:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1308a:	00 00 
   1308c:	75 11                	jne    1309f <mbedtls_internal_aes_decrypt+0x43f>
   1308e:	48 83 c4 48          	add    $0x48,%rsp
   13092:	31 c0                	xor    %eax,%eax
   13094:	5b                   	pop    %rbx
   13095:	5d                   	pop    %rbp
   13096:	41 5c                	pop    %r12
   13098:	41 5d                	pop    %r13
   1309a:	41 5e                	pop    %r14
   1309c:	41 5f                	pop    %r15
   1309e:	c3                   	retq   
   1309f:	e8 bc 01 ff ff       	callq  3260 <__stack_chk_fail@plt>
   130a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   130ab:	00 00 00 00 
   130af:	90                   	nop

00000000000130b0 <mbedtls_aes_crypt_ecb>:
   130b0:	e9 8b 2e 02 00       	jmpq   35f40 <mbedtls_aes_crypt_ecb.instr.bb_130b0>
   130b5:	fe 01                	incb   (%rcx)
   130b7:	77 77                	ja     13130 <mbedtls_aes_crypt_ecb+0x80>
   130b9:	e9 ba 2e 02 00       	jmpq   35f78 <instr.bb_130b9>
   130be:	e9 d5 2e 02 00       	jmpq   35f98 <instr.bb_130d9>
   130c3:	41 54                	push   %r12
   130c5:	49 89 fc             	mov    %rdi,%r12
   130c8:	bf 00 00 00 02       	mov    $0x2000000,%edi
   130cd:	55                   	push   %rbp
   130ce:	89 f5                	mov    %esi,%ebp
   130d0:	48 83 ec 08          	sub    $0x8,%rsp
   130d4:	e8 07 22 ff ff       	callq  52e0 <mbedtls_aesni_has_support>
   130d9:	eb e3                	jmp    130be <mbedtls_aes_crypt_ecb+0xe>
   130db:	75 33                	jne    13110 <mbedtls_aes_crypt_ecb+0x60>
   130dd:	e9 be 2e 02 00       	jmpq   35fa0 <instr.bb_130dd>
   130e2:	ee                   	out    %al,(%dx)
   130e3:	4c 89 e7             	mov    %r12,%rdi
   130e6:	83 fd 01             	cmp    $0x1,%ebp
   130e9:	74 15                	je     13100 <mbedtls_aes_crypt_ecb+0x50>
   130eb:	e9 c2 2e 02 00       	jmpq   35fb2 <instr.bb_130eb>
   130f0:	41 5c                	pop    %r12
   130f2:	41 5d                	pop    %r13
   130f4:	41 5e                	pop    %r14
   130f6:	e9 65 fb ff ff       	jmpq   12c60 <mbedtls_internal_aes_decrypt>
   130fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13100:	48 83 c4 08          	add    $0x8,%rsp
   13104:	5d                   	pop    %rbp
   13105:	41 5c                	pop    %r12
   13107:	41 5d                	pop    %r13
   13109:	41 5e                	pop    %r14
   1310b:	e9 10 f7 ff ff       	jmpq   12820 <mbedtls_internal_aes_encrypt>
   13110:	48 83 c4 08          	add    $0x8,%rsp
   13114:	4c 89 f1             	mov    %r14,%rcx
   13117:	4c 89 ea             	mov    %r13,%rdx
   1311a:	89 ee                	mov    %ebp,%esi
   1311c:	4c 89 e7             	mov    %r12,%rdi
   1311f:	5d                   	pop    %rbp
   13120:	41 5c                	pop    %r12
   13122:	41 5d                	pop    %r13
   13124:	41 5e                	pop    %r14
   13126:	e9 05 22 ff ff       	jmpq   5330 <mbedtls_aesni_crypt_ecb>
   1312b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13130:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13135:	c3                   	retq   
   13136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1313d:	00 00 00 

0000000000013140 <mbedtls_aes_crypt_cbc>:
   13140:	f3 0f 1e fa          	endbr64 
   13144:	83 fe 01             	cmp    $0x1,%esi
   13147:	0f 87 f0 00 00 00    	ja     1323d <mbedtls_aes_crypt_cbc+0xfd>
   1314d:	f6 c2 0f             	test   $0xf,%dl
   13150:	0f 85 ed 00 00 00    	jne    13243 <mbedtls_aes_crypt_cbc+0x103>
   13156:	41 57                	push   %r15
   13158:	4d 89 cf             	mov    %r9,%r15
   1315b:	41 56                	push   %r14
   1315d:	41 55                	push   %r13
   1315f:	41 54                	push   %r12
   13161:	49 89 cc             	mov    %rcx,%r12
   13164:	55                   	push   %rbp
   13165:	48 89 fd             	mov    %rdi,%rbp
   13168:	53                   	push   %rbx
   13169:	4c 89 c3             	mov    %r8,%rbx
   1316c:	48 83 ec 18          	sub    $0x18,%rsp
   13170:	85 f6                	test   %esi,%esi
   13172:	75 6c                	jne    131e0 <mbedtls_aes_crypt_cbc+0xa0>
   13174:	48 85 d2             	test   %rdx,%rdx
   13177:	74 50                	je     131c9 <mbedtls_aes_crypt_cbc+0x89>
   13179:	4d 8d 2c 10          	lea    (%r8,%rdx,1),%r13
   1317d:	0f 1f 00             	nopl   (%rax)
   13180:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   13184:	31 f6                	xor    %esi,%esi
   13186:	4c 89 f9             	mov    %r15,%rcx
   13189:	48 89 da             	mov    %rbx,%rdx
   1318c:	48 89 ef             	mov    %rbp,%rdi
   1318f:	0f 29 04 24          	movaps %xmm0,(%rsp)
   13193:	e8 18 ff ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   13198:	85 c0                	test   %eax,%eax
   1319a:	75 2f                	jne    131cb <mbedtls_aes_crypt_cbc+0x8b>
   1319c:	31 c0                	xor    %eax,%eax
   1319e:	66 90                	xchg   %ax,%ax
   131a0:	41 8b 14 04          	mov    (%r12,%rax,1),%edx
   131a4:	41 31 14 07          	xor    %edx,(%r15,%rax,1)
   131a8:	48 83 c0 04          	add    $0x4,%rax
   131ac:	48 83 f8 10          	cmp    $0x10,%rax
   131b0:	75 ee                	jne    131a0 <mbedtls_aes_crypt_cbc+0x60>
   131b2:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
   131b7:	48 83 c3 10          	add    $0x10,%rbx
   131bb:	49 83 c7 10          	add    $0x10,%r15
   131bf:	41 0f 11 0c 24       	movups %xmm1,(%r12)
   131c4:	4c 39 eb             	cmp    %r13,%rbx
   131c7:	75 b7                	jne    13180 <mbedtls_aes_crypt_cbc+0x40>
   131c9:	31 c0                	xor    %eax,%eax
   131cb:	48 83 c4 18          	add    $0x18,%rsp
   131cf:	5b                   	pop    %rbx
   131d0:	5d                   	pop    %rbp
   131d1:	41 5c                	pop    %r12
   131d3:	41 5d                	pop    %r13
   131d5:	41 5e                	pop    %r14
   131d7:	41 5f                	pop    %r15
   131d9:	c3                   	retq   
   131da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   131e0:	4d 8d 34 11          	lea    (%r9,%rdx,1),%r14
   131e4:	48 85 d2             	test   %rdx,%rdx
   131e7:	74 e0                	je     131c9 <mbedtls_aes_crypt_cbc+0x89>
   131e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   131f0:	31 c0                	xor    %eax,%eax
   131f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   131f8:	8b 14 03             	mov    (%rbx,%rax,1),%edx
   131fb:	41 33 14 04          	xor    (%r12,%rax,1),%edx
   131ff:	41 89 14 07          	mov    %edx,(%r15,%rax,1)
   13203:	48 83 c0 04          	add    $0x4,%rax
   13207:	48 83 f8 10          	cmp    $0x10,%rax
   1320b:	75 eb                	jne    131f8 <mbedtls_aes_crypt_cbc+0xb8>
   1320d:	4c 89 f9             	mov    %r15,%rcx
   13210:	4c 89 fa             	mov    %r15,%rdx
   13213:	be 01 00 00 00       	mov    $0x1,%esi
   13218:	48 89 ef             	mov    %rbp,%rdi
   1321b:	e8 90 fe ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   13220:	85 c0                	test   %eax,%eax
   13222:	75 a7                	jne    131cb <mbedtls_aes_crypt_cbc+0x8b>
   13224:	f3 41 0f 6f 17       	movdqu (%r15),%xmm2
   13229:	49 83 c7 10          	add    $0x10,%r15
   1322d:	48 83 c3 10          	add    $0x10,%rbx
   13231:	41 0f 11 14 24       	movups %xmm2,(%r12)
   13236:	4d 39 f7             	cmp    %r14,%r15
   13239:	75 b5                	jne    131f0 <mbedtls_aes_crypt_cbc+0xb0>
   1323b:	eb 8c                	jmp    131c9 <mbedtls_aes_crypt_cbc+0x89>
   1323d:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13242:	c3                   	retq   
   13243:	b8 de ff ff ff       	mov    $0xffffffde,%eax
   13248:	c3                   	retq   
   13249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013250 <mbedtls_aes_crypt_xts>:
   13250:	f3 0f 1e fa          	endbr64 
   13254:	41 57                	push   %r15
   13256:	41 56                	push   %r14
   13258:	41 55                	push   %r13
   1325a:	41 54                	push   %r12
   1325c:	55                   	push   %rbp
   1325d:	53                   	push   %rbx
   1325e:	48 83 ec 78          	sub    $0x78,%rsp
   13262:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   13267:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1326b:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   13270:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13277:	00 00 
   13279:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1327e:	31 c0                	xor    %eax,%eax
   13280:	83 fe 01             	cmp    $0x1,%esi
   13283:	0f 87 85 02 00 00    	ja     1350e <mbedtls_aes_crypt_xts+0x2be>
   13289:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
   1328d:	48 89 d3             	mov    %rdx,%rbx
   13290:	48 3d f0 ff ff 00    	cmp    $0xfffff0,%rax
   13296:	0f 87 67 02 00 00    	ja     13503 <mbedtls_aes_crypt_xts+0x2b3>
   1329c:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   132a1:	48 89 ca             	mov    %rcx,%rdx
   132a4:	41 89 f6             	mov    %esi,%r14d
   132a7:	be 01 00 00 00       	mov    $0x1,%esi
   132ac:	48 81 c7 20 01 00 00 	add    $0x120,%rdi
   132b3:	4c 89 e9             	mov    %r13,%rcx
   132b6:	4d 89 c4             	mov    %r8,%r12
   132b9:	4c 89 cd             	mov    %r9,%rbp
   132bc:	e8 ef fd ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   132c1:	41 89 c7             	mov    %eax,%r15d
   132c4:	85 c0                	test   %eax,%eax
   132c6:	0f 85 e4 00 00 00    	jne    133b0 <mbedtls_aes_crypt_xts+0x160>
   132cc:	48 89 d8             	mov    %rbx,%rax
   132cf:	48 c1 eb 04          	shr    $0x4,%rbx
   132d3:	48 83 eb 01          	sub    $0x1,%rbx
   132d7:	83 e0 0f             	and    $0xf,%eax
   132da:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   132df:	44 89 f0             	mov    %r14d,%eax
   132e2:	41 0f 95 c7          	setne  %r15b
   132e6:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
   132eb:	83 f0 01             	xor    $0x1,%eax
   132ee:	41 21 c7             	and    %eax,%r15d
   132f1:	44 88 7c 24 18       	mov    %r15b,0x18(%rsp)
   132f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   132fd:	00 00 00 
   13300:	48 85 db             	test   %rbx,%rbx
   13303:	75 07                	jne    1330c <mbedtls_aes_crypt_xts+0xbc>
   13305:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   1330a:	75 7c                	jne    13388 <mbedtls_aes_crypt_xts+0x138>
   1330c:	31 c0                	xor    %eax,%eax
   1330e:	66 90                	xchg   %ax,%ax
   13310:	41 8b 14 04          	mov    (%r12,%rax,1),%edx
   13314:	41 33 54 05 00       	xor    0x0(%r13,%rax,1),%edx
   13319:	41 89 14 06          	mov    %edx,(%r14,%rax,1)
   1331d:	48 83 c0 04          	add    $0x4,%rax
   13321:	48 83 f8 10          	cmp    $0x10,%rax
   13325:	75 e9                	jne    13310 <mbedtls_aes_crypt_xts+0xc0>
   13327:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1332b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   13330:	4c 89 f1             	mov    %r14,%rcx
   13333:	4c 89 f2             	mov    %r14,%rdx
   13336:	e8 75 fd ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   1333b:	41 89 c7             	mov    %eax,%r15d
   1333e:	85 c0                	test   %eax,%eax
   13340:	75 6e                	jne    133b0 <mbedtls_aes_crypt_xts+0x160>
   13342:	31 d2                	xor    %edx,%edx
   13344:	0f 1f 40 00          	nopl   0x0(%rax)
   13348:	41 8b 04 16          	mov    (%r14,%rdx,1),%eax
   1334c:	41 33 44 15 00       	xor    0x0(%r13,%rdx,1),%eax
   13351:	89 44 15 00          	mov    %eax,0x0(%rbp,%rdx,1)
   13355:	48 83 c2 04          	add    $0x4,%rdx
   13359:	48 83 fa 10          	cmp    $0x10,%rdx
   1335d:	75 e9                	jne    13348 <mbedtls_aes_crypt_xts+0xf8>
   1335f:	4c 89 ee             	mov    %r13,%rsi
   13362:	4c 89 ef             	mov    %r13,%rdi
   13365:	48 83 eb 01          	sub    $0x1,%rbx
   13369:	49 83 c4 10          	add    $0x10,%r12
   1336d:	e8 8e ed ff ff       	callq  12100 <mbedtls_gf128mul_x_ble>
   13372:	4c 8d 55 10          	lea    0x10(%rbp),%r10
   13376:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   1337a:	74 64                	je     133e0 <mbedtls_aes_crypt_xts+0x190>
   1337c:	4c 89 d5             	mov    %r10,%rbp
   1337f:	e9 7c ff ff ff       	jmpq   13300 <mbedtls_aes_crypt_xts+0xb0>
   13384:	0f 1f 40 00          	nopl   0x0(%rax)
   13388:	66 0f 6f 44 24 30    	movdqa 0x30(%rsp),%xmm0
   1338e:	4c 89 ee             	mov    %r13,%rsi
   13391:	4c 89 ef             	mov    %r13,%rdi
   13394:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   13399:	e8 62 ed ff ff       	callq  12100 <mbedtls_gf128mul_x_ble>
   1339e:	e9 69 ff ff ff       	jmpq   1330c <mbedtls_aes_crypt_xts+0xbc>
   133a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   133a8:	41 89 c7             	mov    %eax,%r15d
   133ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   133b0:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   133b5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   133bc:	00 00 
   133be:	0f 85 55 01 00 00    	jne    13519 <mbedtls_aes_crypt_xts+0x2c9>
   133c4:	48 83 c4 78          	add    $0x78,%rsp
   133c8:	44 89 f8             	mov    %r15d,%eax
   133cb:	5b                   	pop    %rbx
   133cc:	5d                   	pop    %rbp
   133cd:	41 5c                	pop    %r12
   133cf:	41 5d                	pop    %r13
   133d1:	41 5e                	pop    %r14
   133d3:	41 5f                	pop    %r15
   133d5:	c3                   	retq   
   133d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   133dd:	00 00 00 
   133e0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   133e5:	48 85 c9             	test   %rcx,%rcx
   133e8:	74 c6                	je     133b0 <mbedtls_aes_crypt_xts+0x160>
   133ea:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   133ee:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
   133f3:	4a 8d 34 11          	lea    (%rcx,%r10,1),%rsi
   133f7:	85 c0                	test   %eax,%eax
   133f9:	4c 89 d0             	mov    %r10,%rax
   133fc:	49 0f 45 dd          	cmovne %r13,%rbx
   13400:	0f b6 50 f0          	movzbl -0x10(%rax),%edx
   13404:	48 83 c0 01          	add    $0x1,%rax
   13408:	88 50 ff             	mov    %dl,-0x1(%rax)
   1340b:	48 39 f0             	cmp    %rsi,%rax
   1340e:	75 f0                	jne    13400 <mbedtls_aes_crypt_xts+0x1b0>
   13410:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   13415:	83 e2 0c             	and    $0xc,%edx
   13418:	74 2f                	je     13449 <mbedtls_aes_crypt_xts+0x1f9>
   1341a:	b8 04 00 00 00       	mov    $0x4,%eax
   1341f:	48 8d 74 24 4c       	lea    0x4c(%rsp),%rsi
   13424:	0f 1f 40 00          	nopl   0x0(%rax)
   13428:	41 8b 54 04 fc       	mov    -0x4(%r12,%rax,1),%edx
   1342d:	33 54 03 fc          	xor    -0x4(%rbx,%rax,1),%edx
   13431:	89 14 06             	mov    %edx,(%rsi,%rax,1)
   13434:	48 89 c2             	mov    %rax,%rdx
   13437:	48 8d 40 04          	lea    0x4(%rax),%rax
   1343b:	48 39 44 24 20       	cmp    %rax,0x20(%rsp)
   13440:	73 e6                	jae    13428 <mbedtls_aes_crypt_xts+0x1d8>
   13442:	48 39 54 24 20       	cmp    %rdx,0x20(%rsp)
   13447:	76 17                	jbe    13460 <mbedtls_aes_crypt_xts+0x210>
   13449:	41 0f b6 04 14       	movzbl (%r12,%rdx,1),%eax
   1344e:	32 04 13             	xor    (%rbx,%rdx,1),%al
   13451:	41 88 04 16          	mov    %al,(%r14,%rdx,1)
   13455:	48 83 c2 01          	add    $0x1,%rdx
   13459:	48 39 54 24 20       	cmp    %rdx,0x20(%rsp)
   1345e:	77 e9                	ja     13449 <mbedtls_aes_crypt_xts+0x1f9>
   13460:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   13465:	be 10 00 00 00       	mov    $0x10,%esi
   1346a:	31 d2                	xor    %edx,%edx
   1346c:	48 29 c6             	sub    %rax,%rsi
   1346f:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
   13473:	4d 8d 1c 06          	lea    (%r14,%rax,1),%r11
   13477:	48 01 c5             	add    %rax,%rbp
   1347a:	b8 04 00 00 00       	mov    $0x4,%eax
   1347f:	48 83 fe 03          	cmp    $0x3,%rsi
   13483:	76 21                	jbe    134a6 <mbedtls_aes_crypt_xts+0x256>
   13485:	0f 1f 00             	nopl   (%rax)
   13488:	8b 54 05 fc          	mov    -0x4(%rbp,%rax,1),%edx
   1348c:	33 54 07 fc          	xor    -0x4(%rdi,%rax,1),%edx
   13490:	41 89 54 03 fc       	mov    %edx,-0x4(%r11,%rax,1)
   13495:	48 89 c2             	mov    %rax,%rdx
   13498:	48 8d 40 04          	lea    0x4(%rax),%rax
   1349c:	48 39 c6             	cmp    %rax,%rsi
   1349f:	73 e7                	jae    13488 <mbedtls_aes_crypt_xts+0x238>
   134a1:	48 39 d6             	cmp    %rdx,%rsi
   134a4:	76 15                	jbe    134bb <mbedtls_aes_crypt_xts+0x26b>
   134a6:	0f b6 44 15 00       	movzbl 0x0(%rbp,%rdx,1),%eax
   134ab:	32 04 17             	xor    (%rdi,%rdx,1),%al
   134ae:	41 88 04 13          	mov    %al,(%r11,%rdx,1)
   134b2:	48 83 c2 01          	add    $0x1,%rdx
   134b6:	48 39 d6             	cmp    %rdx,%rsi
   134b9:	77 eb                	ja     134a6 <mbedtls_aes_crypt_xts+0x256>
   134bb:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   134bf:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   134c4:	4c 89 f1             	mov    %r14,%rcx
   134c7:	4c 89 f2             	mov    %r14,%rdx
   134ca:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   134cf:	e8 dc fb ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   134d4:	85 c0                	test   %eax,%eax
   134d6:	0f 85 cc fe ff ff    	jne    133a8 <mbedtls_aes_crypt_xts+0x158>
   134dc:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   134e1:	31 c0                	xor    %eax,%eax
   134e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   134e8:	41 8b 14 06          	mov    (%r14,%rax,1),%edx
   134ec:	33 14 03             	xor    (%rbx,%rax,1),%edx
   134ef:	41 89 54 02 f0       	mov    %edx,-0x10(%r10,%rax,1)
   134f4:	48 83 c0 04          	add    $0x4,%rax
   134f8:	48 83 f8 10          	cmp    $0x10,%rax
   134fc:	75 ea                	jne    134e8 <mbedtls_aes_crypt_xts+0x298>
   134fe:	e9 ad fe ff ff       	jmpq   133b0 <mbedtls_aes_crypt_xts+0x160>
   13503:	41 bf de ff ff ff    	mov    $0xffffffde,%r15d
   13509:	e9 a2 fe ff ff       	jmpq   133b0 <mbedtls_aes_crypt_xts+0x160>
   1350e:	41 bf df ff ff ff    	mov    $0xffffffdf,%r15d
   13514:	e9 97 fe ff ff       	jmpq   133b0 <mbedtls_aes_crypt_xts+0x160>
   13519:	e8 42 fd fe ff       	callq  3260 <__stack_chk_fail@plt>
   1351e:	66 90                	xchg   %ax,%ax

0000000000013520 <mbedtls_aes_crypt_cfb128>:
   13520:	f3 0f 1e fa          	endbr64 
   13524:	41 57                	push   %r15
   13526:	41 56                	push   %r14
   13528:	41 55                	push   %r13
   1352a:	41 54                	push   %r12
   1352c:	55                   	push   %rbp
   1352d:	53                   	push   %rbx
   1352e:	48 83 ec 18          	sub    $0x18,%rsp
   13532:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   13537:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1353c:	83 fe 01             	cmp    $0x1,%esi
   1353f:	0f 87 fc 00 00 00    	ja     13641 <mbedtls_aes_crypt_cfb128+0x121>
   13545:	48 8b 19             	mov    (%rcx),%rbx
   13548:	48 83 fb 0f          	cmp    $0xf,%rbx
   1354c:	0f 87 ef 00 00 00    	ja     13641 <mbedtls_aes_crypt_cfb128+0x121>
   13552:	49 89 fd             	mov    %rdi,%r13
   13555:	4d 89 c7             	mov    %r8,%r15
   13558:	4c 89 cd             	mov    %r9,%rbp
   1355b:	85 f6                	test   %esi,%esi
   1355d:	75 71                	jne    135d0 <mbedtls_aes_crypt_cfb128+0xb0>
   1355f:	48 85 d2             	test   %rdx,%rdx
   13562:	0f 84 c0 00 00 00    	je     13628 <mbedtls_aes_crypt_cfb128+0x108>
   13568:	4d 8d 34 11          	lea    (%r9,%rdx,1),%r14
   1356c:	eb 2e                	jmp    1359c <mbedtls_aes_crypt_cfb128+0x7c>
   1356e:	66 90                	xchg   %ax,%ax
   13570:	49 8d 04 1f          	lea    (%r15,%rbx,1),%rax
   13574:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   13578:	48 83 c5 01          	add    $0x1,%rbp
   1357c:	49 83 c4 01          	add    $0x1,%r12
   13580:	0f b6 08             	movzbl (%rax),%ecx
   13583:	48 83 c3 01          	add    $0x1,%rbx
   13587:	83 e3 0f             	and    $0xf,%ebx
   1358a:	31 d1                	xor    %edx,%ecx
   1358c:	41 88 4c 24 ff       	mov    %cl,-0x1(%r12)
   13591:	88 10                	mov    %dl,(%rax)
   13593:	4c 39 f5             	cmp    %r14,%rbp
   13596:	0f 84 8c 00 00 00    	je     13628 <mbedtls_aes_crypt_cfb128+0x108>
   1359c:	48 85 db             	test   %rbx,%rbx
   1359f:	75 cf                	jne    13570 <mbedtls_aes_crypt_cfb128+0x50>
   135a1:	4c 89 f9             	mov    %r15,%rcx
   135a4:	4c 89 fa             	mov    %r15,%rdx
   135a7:	be 01 00 00 00       	mov    $0x1,%esi
   135ac:	4c 89 ef             	mov    %r13,%rdi
   135af:	e8 fc fa ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   135b4:	85 c0                	test   %eax,%eax
   135b6:	74 b8                	je     13570 <mbedtls_aes_crypt_cfb128+0x50>
   135b8:	48 83 c4 18          	add    $0x18,%rsp
   135bc:	5b                   	pop    %rbx
   135bd:	5d                   	pop    %rbp
   135be:	41 5c                	pop    %r12
   135c0:	41 5d                	pop    %r13
   135c2:	41 5e                	pop    %r14
   135c4:	41 5f                	pop    %r15
   135c6:	c3                   	retq   
   135c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   135ce:	00 00 
   135d0:	4d 8d 34 11          	lea    (%r9,%rdx,1),%r14
   135d4:	48 85 d2             	test   %rdx,%rdx
   135d7:	75 2c                	jne    13605 <mbedtls_aes_crypt_cfb128+0xe5>
   135d9:	eb 4d                	jmp    13628 <mbedtls_aes_crypt_cfb128+0x108>
   135db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   135e0:	49 8d 14 1f          	lea    (%r15,%rbx,1),%rdx
   135e4:	48 83 c5 01          	add    $0x1,%rbp
   135e8:	49 83 c4 01          	add    $0x1,%r12
   135ec:	48 83 c3 01          	add    $0x1,%rbx
   135f0:	0f b6 02             	movzbl (%rdx),%eax
   135f3:	32 45 ff             	xor    -0x1(%rbp),%al
   135f6:	83 e3 0f             	and    $0xf,%ebx
   135f9:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   135fe:	88 02                	mov    %al,(%rdx)
   13600:	4c 39 f5             	cmp    %r14,%rbp
   13603:	74 23                	je     13628 <mbedtls_aes_crypt_cfb128+0x108>
   13605:	48 85 db             	test   %rbx,%rbx
   13608:	75 d6                	jne    135e0 <mbedtls_aes_crypt_cfb128+0xc0>
   1360a:	4c 89 f9             	mov    %r15,%rcx
   1360d:	4c 89 fa             	mov    %r15,%rdx
   13610:	be 01 00 00 00       	mov    $0x1,%esi
   13615:	4c 89 ef             	mov    %r13,%rdi
   13618:	e8 93 fa ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   1361d:	85 c0                	test   %eax,%eax
   1361f:	74 bf                	je     135e0 <mbedtls_aes_crypt_cfb128+0xc0>
   13621:	eb 95                	jmp    135b8 <mbedtls_aes_crypt_cfb128+0x98>
   13623:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13628:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1362d:	48 89 18             	mov    %rbx,(%rax)
   13630:	48 83 c4 18          	add    $0x18,%rsp
   13634:	31 c0                	xor    %eax,%eax
   13636:	5b                   	pop    %rbx
   13637:	5d                   	pop    %rbp
   13638:	41 5c                	pop    %r12
   1363a:	41 5d                	pop    %r13
   1363c:	41 5e                	pop    %r14
   1363e:	41 5f                	pop    %r15
   13640:	c3                   	retq   
   13641:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13646:	e9 6d ff ff ff       	jmpq   135b8 <mbedtls_aes_crypt_cfb128+0x98>
   1364b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000013650 <mbedtls_aes_crypt_cfb8>:
   13650:	f3 0f 1e fa          	endbr64 
   13654:	41 57                	push   %r15
   13656:	41 56                	push   %r14
   13658:	41 55                	push   %r13
   1365a:	41 54                	push   %r12
   1365c:	55                   	push   %rbp
   1365d:	53                   	push   %rbx
   1365e:	48 83 ec 28          	sub    $0x28,%rsp
   13662:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13669:	00 00 
   1366b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   13670:	31 c0                	xor    %eax,%eax
   13672:	83 fe 01             	cmp    $0x1,%esi
   13675:	0f 87 a1 00 00 00    	ja     1371c <mbedtls_aes_crypt_cfb8+0xcc>
   1367b:	48 85 d2             	test   %rdx,%rdx
   1367e:	74 7b                	je     136fb <mbedtls_aes_crypt_cfb8+0xab>
   13680:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
   13684:	49 89 fe             	mov    %rdi,%r14
   13687:	41 89 f5             	mov    %esi,%r13d
   1368a:	48 89 cb             	mov    %rcx,%rbx
   1368d:	4d 89 c7             	mov    %r8,%r15
   13690:	4c 89 cd             	mov    %r9,%rbp
   13693:	4d 8d 24 11          	lea    (%r9,%rdx,1),%r12
   13697:	eb 1c                	jmp    136b5 <mbedtls_aes_crypt_cfb8+0x65>
   13699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   136a0:	88 44 24 10          	mov    %al,0x10(%rsp)
   136a4:	f3 0f 6f 44 24 01    	movdqu 0x1(%rsp),%xmm0
   136aa:	88 55 ff             	mov    %dl,-0x1(%rbp)
   136ad:	0f 11 03             	movups %xmm0,(%rbx)
   136b0:	49 39 ec             	cmp    %rbp,%r12
   136b3:	74 46                	je     136fb <mbedtls_aes_crypt_cfb8+0xab>
   136b5:	48 89 d9             	mov    %rbx,%rcx
   136b8:	48 89 da             	mov    %rbx,%rdx
   136bb:	be 01 00 00 00       	mov    $0x1,%esi
   136c0:	4c 89 f7             	mov    %r14,%rdi
   136c3:	0f 29 04 24          	movaps %xmm0,(%rsp)
   136c7:	e8 e4 f9 ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   136cc:	85 c0                	test   %eax,%eax
   136ce:	75 2d                	jne    136fd <mbedtls_aes_crypt_cfb8+0xad>
   136d0:	41 0f b6 07          	movzbl (%r15),%eax
   136d4:	0f b6 13             	movzbl (%rbx),%edx
   136d7:	49 83 c7 01          	add    $0x1,%r15
   136db:	48 83 c5 01          	add    $0x1,%rbp
   136df:	31 c2                	xor    %eax,%edx
   136e1:	45 85 ed             	test   %r13d,%r13d
   136e4:	74 ba                	je     136a0 <mbedtls_aes_crypt_cfb8+0x50>
   136e6:	88 54 24 10          	mov    %dl,0x10(%rsp)
   136ea:	f3 0f 6f 44 24 01    	movdqu 0x1(%rsp),%xmm0
   136f0:	88 55 ff             	mov    %dl,-0x1(%rbp)
   136f3:	0f 11 03             	movups %xmm0,(%rbx)
   136f6:	49 39 ec             	cmp    %rbp,%r12
   136f9:	75 ba                	jne    136b5 <mbedtls_aes_crypt_cfb8+0x65>
   136fb:	31 c0                	xor    %eax,%eax
   136fd:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   13702:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13709:	00 00 
   1370b:	75 16                	jne    13723 <mbedtls_aes_crypt_cfb8+0xd3>
   1370d:	48 83 c4 28          	add    $0x28,%rsp
   13711:	5b                   	pop    %rbx
   13712:	5d                   	pop    %rbp
   13713:	41 5c                	pop    %r12
   13715:	41 5d                	pop    %r13
   13717:	41 5e                	pop    %r14
   13719:	41 5f                	pop    %r15
   1371b:	c3                   	retq   
   1371c:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13721:	eb da                	jmp    136fd <mbedtls_aes_crypt_cfb8+0xad>
   13723:	e8 38 fb fe ff       	callq  3260 <__stack_chk_fail@plt>
   13728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1372f:	00 

0000000000013730 <mbedtls_aes_crypt_ofb>:
   13730:	f3 0f 1e fa          	endbr64 
   13734:	41 57                	push   %r15
   13736:	41 56                	push   %r14
   13738:	41 55                	push   %r13
   1373a:	41 54                	push   %r12
   1373c:	55                   	push   %rbp
   1373d:	53                   	push   %rbx
   1373e:	48 83 ec 18          	sub    $0x18,%rsp
   13742:	48 8b 1a             	mov    (%rdx),%rbx
   13745:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1374a:	48 83 fb 0f          	cmp    $0xf,%rbx
   1374e:	0f 87 85 00 00 00    	ja     137d9 <mbedtls_aes_crypt_ofb+0xa9>
   13754:	48 85 f6             	test   %rsi,%rsi
   13757:	74 67                	je     137c0 <mbedtls_aes_crypt_ofb+0x90>
   13759:	48 89 fd             	mov    %rdi,%rbp
   1375c:	49 89 cf             	mov    %rcx,%r15
   1375f:	4d 89 c6             	mov    %r8,%r14
   13762:	4d 89 cd             	mov    %r9,%r13
   13765:	4d 8d 24 31          	lea    (%r9,%rsi,1),%r12
   13769:	eb 26                	jmp    13791 <mbedtls_aes_crypt_ofb+0x61>
   1376b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13770:	49 83 c6 01          	add    $0x1,%r14
   13774:	41 0f b6 04 1f       	movzbl (%r15,%rbx,1),%eax
   13779:	49 83 c5 01          	add    $0x1,%r13
   1377d:	48 83 c3 01          	add    $0x1,%rbx
   13781:	41 32 46 ff          	xor    -0x1(%r14),%al
   13785:	83 e3 0f             	and    $0xf,%ebx
   13788:	41 88 45 ff          	mov    %al,-0x1(%r13)
   1378c:	4d 39 ec             	cmp    %r13,%r12
   1378f:	74 2f                	je     137c0 <mbedtls_aes_crypt_ofb+0x90>
   13791:	48 85 db             	test   %rbx,%rbx
   13794:	75 da                	jne    13770 <mbedtls_aes_crypt_ofb+0x40>
   13796:	4c 89 f9             	mov    %r15,%rcx
   13799:	4c 89 fa             	mov    %r15,%rdx
   1379c:	be 01 00 00 00       	mov    $0x1,%esi
   137a1:	48 89 ef             	mov    %rbp,%rdi
   137a4:	e8 07 f9 ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   137a9:	85 c0                	test   %eax,%eax
   137ab:	74 c3                	je     13770 <mbedtls_aes_crypt_ofb+0x40>
   137ad:	48 83 c4 18          	add    $0x18,%rsp
   137b1:	5b                   	pop    %rbx
   137b2:	5d                   	pop    %rbp
   137b3:	41 5c                	pop    %r12
   137b5:	41 5d                	pop    %r13
   137b7:	41 5e                	pop    %r14
   137b9:	41 5f                	pop    %r15
   137bb:	c3                   	retq   
   137bc:	0f 1f 40 00          	nopl   0x0(%rax)
   137c0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   137c5:	48 89 18             	mov    %rbx,(%rax)
   137c8:	48 83 c4 18          	add    $0x18,%rsp
   137cc:	31 c0                	xor    %eax,%eax
   137ce:	5b                   	pop    %rbx
   137cf:	5d                   	pop    %rbp
   137d0:	41 5c                	pop    %r12
   137d2:	41 5d                	pop    %r13
   137d4:	41 5e                	pop    %r14
   137d6:	41 5f                	pop    %r15
   137d8:	c3                   	retq   
   137d9:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   137de:	eb cd                	jmp    137ad <mbedtls_aes_crypt_ofb+0x7d>

00000000000137e0 <mbedtls_aes_crypt_ctr>:
   137e0:	f3 0f 1e fa          	endbr64 
   137e4:	41 57                	push   %r15
   137e6:	41 56                	push   %r14
   137e8:	41 55                	push   %r13
   137ea:	41 54                	push   %r12
   137ec:	55                   	push   %rbp
   137ed:	53                   	push   %rbx
   137ee:	48 83 ec 28          	sub    $0x28,%rsp
   137f2:	48 8b 1a             	mov    (%rdx),%rbx
   137f5:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   137fa:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
   137ff:	48 83 fb 0f          	cmp    $0xf,%rbx
   13803:	0f 87 8a 00 00 00    	ja     13893 <mbedtls_aes_crypt_ctr+0xb3>
   13809:	48 85 f6             	test   %rsi,%rsi
   1380c:	0f 84 9e 00 00 00    	je     138b0 <mbedtls_aes_crypt_ctr+0xd0>
   13812:	48 8d 41 0f          	lea    0xf(%rcx),%rax
   13816:	49 89 fd             	mov    %rdi,%r13
   13819:	49 89 cf             	mov    %rcx,%r15
   1381c:	4c 89 cd             	mov    %r9,%rbp
   1381f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13824:	4d 8d 34 31          	lea    (%r9,%rsi,1),%r14
   13828:	eb 27                	jmp    13851 <mbedtls_aes_crypt_ctr+0x71>
   1382a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13830:	48 83 c5 01          	add    $0x1,%rbp
   13834:	41 0f b6 04 18       	movzbl (%r8,%rbx,1),%eax
   13839:	49 83 c4 01          	add    $0x1,%r12
   1383d:	48 83 c3 01          	add    $0x1,%rbx
   13841:	32 45 ff             	xor    -0x1(%rbp),%al
   13844:	83 e3 0f             	and    $0xf,%ebx
   13847:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   1384c:	49 39 ee             	cmp    %rbp,%r14
   1384f:	74 5f                	je     138b0 <mbedtls_aes_crypt_ctr+0xd0>
   13851:	48 85 db             	test   %rbx,%rbx
   13854:	75 da                	jne    13830 <mbedtls_aes_crypt_ctr+0x50>
   13856:	4c 89 c1             	mov    %r8,%rcx
   13859:	4c 89 fa             	mov    %r15,%rdx
   1385c:	be 01 00 00 00       	mov    $0x1,%esi
   13861:	4c 89 ef             	mov    %r13,%rdi
   13864:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   13869:	e8 42 f8 ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   1386e:	85 c0                	test   %eax,%eax
   13870:	75 26                	jne    13898 <mbedtls_aes_crypt_ctr+0xb8>
   13872:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   13877:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1387c:	eb 05                	jmp    13883 <mbedtls_aes_crypt_ctr+0xa3>
   1387e:	66 90                	xchg   %ax,%ax
   13880:	48 89 c2             	mov    %rax,%rdx
   13883:	80 02 01             	addb   $0x1,(%rdx)
   13886:	75 a8                	jne    13830 <mbedtls_aes_crypt_ctr+0x50>
   13888:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   1388c:	49 39 d7             	cmp    %rdx,%r15
   1388f:	75 ef                	jne    13880 <mbedtls_aes_crypt_ctr+0xa0>
   13891:	eb 9d                	jmp    13830 <mbedtls_aes_crypt_ctr+0x50>
   13893:	b8 df ff ff ff       	mov    $0xffffffdf,%eax
   13898:	48 83 c4 28          	add    $0x28,%rsp
   1389c:	5b                   	pop    %rbx
   1389d:	5d                   	pop    %rbp
   1389e:	41 5c                	pop    %r12
   138a0:	41 5d                	pop    %r13
   138a2:	41 5e                	pop    %r14
   138a4:	41 5f                	pop    %r15
   138a6:	c3                   	retq   
   138a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   138ae:	00 00 
   138b0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   138b5:	48 89 18             	mov    %rbx,(%rax)
   138b8:	48 83 c4 28          	add    $0x28,%rsp
   138bc:	31 c0                	xor    %eax,%eax
   138be:	5b                   	pop    %rbx
   138bf:	5d                   	pop    %rbp
   138c0:	41 5c                	pop    %r12
   138c2:	41 5d                	pop    %r13
   138c4:	41 5e                	pop    %r14
   138c6:	41 5f                	pop    %r15
   138c8:	c3                   	retq   
   138c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000138d0 <mbedtls_aes_self_test>:
   138d0:	f3 0f 1e fa          	endbr64 
   138d4:	41 57                	push   %r15
   138d6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   138da:	89 fe                	mov    %edi,%esi
   138dc:	b9 24 00 00 00       	mov    $0x24,%ecx
   138e1:	41 56                	push   %r14
   138e3:	41 55                	push   %r13
   138e5:	41 54                	push   %r12
   138e7:	55                   	push   %rbp
   138e8:	53                   	push   %rbx
   138e9:	48 81 ec 58 04 00 00 	sub    $0x458,%rsp
   138f0:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
   138f4:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
   138f9:	4c 89 ff             	mov    %r15,%rdi
   138fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13903:	00 00 
   13905:	48 89 84 24 48 04 00 	mov    %rax,0x448(%rsp)
   1390c:	00 
   1390d:	31 c0                	xor    %eax,%eax
   1390f:	0f 29 84 24 e0 03 00 	movaps %xmm0,0x3e0(%rsp)
   13916:	00 
   13917:	0f 29 84 24 f0 03 00 	movaps %xmm0,0x3f0(%rsp)
   1391e:	00 
   1391f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13922:	85 f6                	test   %esi,%esi
   13924:	0f 85 e6 03 00 00    	jne    13d10 <mbedtls_aes_self_test+0x440>
   1392a:	48 8d 84 24 e0 03 00 	lea    0x3e0(%rsp),%rax
   13931:	00 
   13932:	45 31 ed             	xor    %r13d,%r13d
   13935:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   1393c:	00 
   1393d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   13942:	45 89 ec             	mov    %r13d,%r12d
   13945:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13949:	44 89 ed             	mov    %r13d,%ebp
   1394c:	41 d1 fc             	sar    %r12d
   1394f:	83 e5 01             	and    $0x1,%ebp
   13952:	41 8d 5c 24 02       	lea    0x2(%r12),%ebx
   13957:	c1 e3 06             	shl    $0x6,%ebx
   1395a:	85 c0                	test   %eax,%eax
   1395c:	74 29                	je     13987 <mbedtls_aes_self_test+0xb7>
   1395e:	85 ed                	test   %ebp,%ebp
   13960:	48 8d 05 97 d7 00 00 	lea    0xd797(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   13967:	89 da                	mov    %ebx,%edx
   13969:	bf 01 00 00 00       	mov    $0x1,%edi
   1396e:	48 8d 0d 64 d7 00 00 	lea    0xd764(%rip),%rcx        # 210d9 <_IO_stdin_used+0xd9>
   13975:	48 8d 35 9d 09 01 00 	lea    0x1099d(%rip),%rsi        # 24319 <K+0x299>
   1397c:	48 0f 44 c8          	cmove  %rax,%rcx
   13980:	31 c0                	xor    %eax,%eax
   13982:	e8 b9 f9 fe ff       	callq  3340 <__printf_chk@plt>
   13987:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1398b:	4d 63 e4             	movslq %r12d,%r12
   1398e:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   13993:	89 da                	mov    %ebx,%edx
   13995:	41 0f 29 06          	movaps %xmm0,(%r14)
   13999:	49 c1 e4 04          	shl    $0x4,%r12
   1399d:	4c 89 ff             	mov    %r15,%rdi
   139a0:	85 ed                	test   %ebp,%ebp
   139a2:	0f 85 50 03 00 00    	jne    13cf8 <mbedtls_aes_self_test+0x428>
   139a8:	e8 d3 eb ff ff       	callq  12580 <mbedtls_aes_setkey_dec>
   139ad:	41 89 c0             	mov    %eax,%r8d
   139b0:	48 8d 05 e9 10 01 00 	lea    0x110e9(%rip),%rax        # 24aa0 <aes_test_ecb_dec>
   139b7:	49 01 c4             	add    %rax,%r12
   139ba:	41 83 f8 8e          	cmp    $0xffffff8e,%r8d
   139be:	0f 85 9c 02 00 00    	jne    13c60 <mbedtls_aes_self_test+0x390>
   139c4:	81 fb c0 00 00 00    	cmp    $0xc0,%ebx
   139ca:	0f 85 90 02 00 00    	jne    13c60 <mbedtls_aes_self_test+0x390>
   139d0:	48 8d 3d 1f d7 00 00 	lea    0xd71f(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
   139d7:	e8 24 f8 fe ff       	callq  3200 <puts@plt>
   139dc:	41 83 c5 01          	add    $0x1,%r13d
   139e0:	41 83 fd 06          	cmp    $0x6,%r13d
   139e4:	0f 85 58 ff ff ff    	jne    13942 <mbedtls_aes_self_test+0x72>
   139ea:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
   139ef:	45 85 d2             	test   %r10d,%r10d
   139f2:	0f 85 d1 03 00 00    	jne    13dc9 <mbedtls_aes_self_test+0x4f9>
   139f8:	48 8d 84 24 b0 03 00 	lea    0x3b0(%rsp),%rax
   139ff:	00 
   13a00:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   13a07:	00 
   13a08:	48 8d ac 24 a0 03 00 	lea    0x3a0(%rsp),%rbp
   13a0f:	00 
   13a10:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13a15:	8b 44 24 10          	mov    0x10(%rsp),%eax
   13a19:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
   13a1e:	41 89 c4             	mov    %eax,%r12d
   13a21:	83 e0 01             	and    $0x1,%eax
   13a24:	41 d1 fc             	sar    %r12d
   13a27:	41 89 c5             	mov    %eax,%r13d
   13a2a:	41 8d 5c 24 02       	lea    0x2(%r12),%ebx
   13a2f:	c1 e3 06             	shl    $0x6,%ebx
   13a32:	45 85 c9             	test   %r9d,%r9d
   13a35:	74 29                	je     13a60 <mbedtls_aes_self_test+0x190>
   13a37:	85 c0                	test   %eax,%eax
   13a39:	48 8d 0d 99 d6 00 00 	lea    0xd699(%rip),%rcx        # 210d9 <_IO_stdin_used+0xd9>
   13a40:	89 da                	mov    %ebx,%edx
   13a42:	bf 01 00 00 00       	mov    $0x1,%edi
   13a47:	48 8d 05 b0 d6 00 00 	lea    0xd6b0(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   13a4e:	48 8d 35 d9 08 01 00 	lea    0x108d9(%rip),%rsi        # 2432e <K+0x2ae>
   13a55:	48 0f 44 c8          	cmove  %rax,%rcx
   13a59:	31 c0                	xor    %eax,%eax
   13a5b:	e8 e0 f8 fe ff       	callq  3340 <__printf_chk@plt>
   13a60:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13a65:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13a69:	4d 63 e4             	movslq %r12d,%r12
   13a6c:	89 da                	mov    %ebx,%edx
   13a6e:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   13a73:	0f 29 45 00          	movaps %xmm0,0x0(%rbp)
   13a77:	49 c1 e4 04          	shl    $0x4,%r12
   13a7b:	4c 89 ff             	mov    %r15,%rdi
   13a7e:	0f 29 00             	movaps %xmm0,(%rax)
   13a81:	41 0f 29 06          	movaps %xmm0,(%r14)
   13a85:	45 85 ed             	test   %r13d,%r13d
   13a88:	0f 84 aa 02 00 00    	je     13d38 <mbedtls_aes_self_test+0x468>
   13a8e:	e8 bd e7 ff ff       	callq  12250 <mbedtls_aes_setkey_enc>
   13a93:	48 8d 0d 46 0f 01 00 	lea    0x10f46(%rip),%rcx        # 249e0 <aes_test_cbc_enc>
   13a9a:	49 01 cc             	add    %rcx,%r12
   13a9d:	83 f8 8e             	cmp    $0xffffff8e,%eax
   13aa0:	0f 85 aa 02 00 00    	jne    13d50 <mbedtls_aes_self_test+0x480>
   13aa6:	81 fb c0 00 00 00    	cmp    $0xc0,%ebx
   13aac:	0f 85 9e 02 00 00    	jne    13d50 <mbedtls_aes_self_test+0x480>
   13ab2:	48 8d 3d 3d d6 00 00 	lea    0xd63d(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
   13ab9:	e8 42 f7 fe ff       	callq  3200 <puts@plt>
   13abe:	83 44 24 10 01       	addl   $0x1,0x10(%rsp)
   13ac3:	8b 44 24 10          	mov    0x10(%rsp),%eax
   13ac7:	83 f8 06             	cmp    $0x6,%eax
   13aca:	0f 85 45 ff ff ff    	jne    13a15 <mbedtls_aes_self_test+0x145>
   13ad0:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   13ad4:	85 ff                	test   %edi,%edi
   13ad6:	0f 85 2b 09 00 00    	jne    14407 <mbedtls_aes_self_test+0xb37>
   13adc:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   13ae1:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   13ae6:	45 31 e4             	xor    %r12d,%r12d
   13ae9:	4c 89 f5             	mov    %r14,%rbp
   13aec:	45 89 e0             	mov    %r12d,%r8d
   13aef:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   13af3:	45 89 e6             	mov    %r12d,%r14d
   13af6:	41 d1 f8             	sar    %r8d
   13af9:	41 83 e6 01          	and    $0x1,%r14d
   13afd:	41 8d 58 02          	lea    0x2(%r8),%ebx
   13b01:	c1 e3 06             	shl    $0x6,%ebx
   13b04:	85 f6                	test   %esi,%esi
   13b06:	74 34                	je     13b3c <mbedtls_aes_self_test+0x26c>
   13b08:	45 85 f6             	test   %r14d,%r14d
   13b0b:	89 da                	mov    %ebx,%edx
   13b0d:	bf 01 00 00 00       	mov    $0x1,%edi
   13b12:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   13b17:	48 8d 05 bb d5 00 00 	lea    0xd5bb(%rip),%rax        # 210d9 <_IO_stdin_used+0xd9>
   13b1e:	48 8d 0d d9 d5 00 00 	lea    0xd5d9(%rip),%rcx        # 210fe <_IO_stdin_used+0xfe>
   13b25:	48 0f 45 c8          	cmovne %rax,%rcx
   13b29:	48 8d 35 13 08 01 00 	lea    0x10813(%rip),%rsi        # 24343 <K+0x2c3>
   13b30:	31 c0                	xor    %eax,%eax
   13b32:	e8 09 f8 fe ff       	callq  3340 <__printf_chk@plt>
   13b37:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
   13b3c:	4d 63 c0             	movslq %r8d,%r8
   13b3f:	b9 20 00 00 00       	mov    $0x20,%ecx
   13b44:	4c 89 ef             	mov    %r13,%rdi
   13b47:	48 b8 00 01 02 03 04 	movabs $0x706050403020100,%rax
   13b4e:	05 06 07 
   13b51:	4c 89 c6             	mov    %r8,%rsi
   13b54:	48 89 84 24 a0 03 00 	mov    %rax,0x3a0(%rsp)
   13b5b:	00 
   13b5c:	48 ba 08 09 0a 0b 0c 	movabs $0xf0e0d0c0b0a0908,%rdx
   13b63:	0d 0e 0f 
   13b66:	48 8d 05 13 0e 01 00 	lea    0x10e13(%rip),%rax        # 24980 <aes_test_cfb128_key>
   13b6d:	48 89 94 24 a8 03 00 	mov    %rdx,0x3a8(%rsp)
   13b74:	00 
   13b75:	48 c1 e6 05          	shl    $0x5,%rsi
   13b79:	89 da                	mov    %ebx,%edx
   13b7b:	c1 ea 03             	shr    $0x3,%edx
   13b7e:	48 01 c6             	add    %rax,%rsi
   13b81:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   13b86:	e8 55 f7 fe ff       	callq  32e0 <__memcpy_chk@plt>
   13b8b:	89 da                	mov    %ebx,%edx
   13b8d:	4c 89 ee             	mov    %r13,%rsi
   13b90:	4c 89 ff             	mov    %r15,%rdi
   13b93:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   13b9a:	00 00 
   13b9c:	e8 af e6 ff ff       	callq  12250 <mbedtls_aes_setkey_enc>
   13ba1:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   13ba6:	83 f8 8e             	cmp    $0xffffff8e,%eax
   13ba9:	75 0c                	jne    13bb7 <mbedtls_aes_self_test+0x2e7>
   13bab:	81 fb c0 00 00 00    	cmp    $0xc0,%ebx
   13bb1:	0f 84 51 03 00 00    	je     13f08 <mbedtls_aes_self_test+0x638>
   13bb7:	85 c0                	test   %eax,%eax
   13bb9:	0f 85 ce 00 00 00    	jne    13c8d <mbedtls_aes_self_test+0x3bd>
   13bbf:	45 85 f6             	test   %r14d,%r14d
   13bc2:	0f 85 50 02 00 00    	jne    13e18 <mbedtls_aes_self_test+0x548>
   13bc8:	49 c1 e0 06          	shl    $0x6,%r8
   13bcc:	48 8d 05 ad 0c 01 00 	lea    0x10cad(%rip),%rax        # 24880 <aes_test_cfb128_ct>
   13bd3:	48 8d 1d 66 0d 01 00 	lea    0x10d66(%rip),%rbx        # 24940 <aes_test_cfb128_pt>
   13bda:	4c 01 c0             	add    %r8,%rax
   13bdd:	66 0f 6f 28          	movdqa (%rax),%xmm5
   13be1:	66 0f 6f 70 10       	movdqa 0x10(%rax),%xmm6
   13be6:	66 0f 6f 78 20       	movdqa 0x20(%rax),%xmm7
   13beb:	0f 29 ac 24 00 04 00 	movaps %xmm5,0x400(%rsp)
   13bf2:	00 
   13bf3:	66 0f 6f 68 30       	movdqa 0x30(%rax),%xmm5
   13bf8:	0f 29 b4 24 10 04 00 	movaps %xmm6,0x410(%rsp)
   13bff:	00 
   13c00:	0f 29 bc 24 20 04 00 	movaps %xmm7,0x420(%rsp)
   13c07:	00 
   13c08:	0f 29 ac 24 30 04 00 	movaps %xmm5,0x430(%rsp)
   13c0f:	00 
   13c10:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   13c15:	48 83 ec 08          	sub    $0x8,%rsp
   13c19:	49 89 e9             	mov    %rbp,%r9
   13c1c:	44 89 f6             	mov    %r14d,%esi
   13c1f:	55                   	push   %rbp
   13c20:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   13c25:	ba 40 00 00 00       	mov    $0x40,%edx
   13c2a:	4c 89 ff             	mov    %r15,%rdi
   13c2d:	e8 ee f8 ff ff       	callq  13520 <mbedtls_aes_crypt_cfb128>
   13c32:	5a                   	pop    %rdx
   13c33:	59                   	pop    %rcx
   13c34:	85 c0                	test   %eax,%eax
   13c36:	75 55                	jne    13c8d <mbedtls_aes_self_test+0x3bd>
   13c38:	48 8b 45 00          	mov    0x0(%rbp),%rax
   13c3c:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   13c40:	48 33 03             	xor    (%rbx),%rax
   13c43:	48 33 53 08          	xor    0x8(%rbx),%rdx
   13c47:	48 09 c2             	or     %rax,%rdx
   13c4a:	0f 84 57 02 00 00    	je     13ea7 <mbedtls_aes_self_test+0x5d7>
   13c50:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13c56:	eb 38                	jmp    13c90 <mbedtls_aes_self_test+0x3c0>
   13c58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13c5f:	00 
   13c60:	45 85 c0             	test   %r8d,%r8d
   13c63:	75 2b                	jne    13c90 <mbedtls_aes_self_test+0x3c0>
   13c65:	bb 10 27 00 00       	mov    $0x2710,%ebx
   13c6a:	eb 0d                	jmp    13c79 <mbedtls_aes_self_test+0x3a9>
   13c6c:	0f 1f 40 00          	nopl   0x0(%rax)
   13c70:	83 eb 01             	sub    $0x1,%ebx
   13c73:	0f 84 67 01 00 00    	je     13de0 <mbedtls_aes_self_test+0x510>
   13c79:	4c 89 f1             	mov    %r14,%rcx
   13c7c:	4c 89 f2             	mov    %r14,%rdx
   13c7f:	89 ee                	mov    %ebp,%esi
   13c81:	4c 89 ff             	mov    %r15,%rdi
   13c84:	e8 27 f4 ff ff       	callq  130b0 <mbedtls_aes_crypt_ecb>
   13c89:	85 c0                	test   %eax,%eax
   13c8b:	74 e3                	je     13c70 <mbedtls_aes_self_test+0x3a0>
   13c8d:	41 89 c0             	mov    %eax,%r8d
   13c90:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13c94:	85 c0                	test   %eax,%eax
   13c96:	74 16                	je     13cae <mbedtls_aes_self_test+0x3de>
   13c98:	48 8d 3d 1e fe 00 00 	lea    0xfe1e(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   13c9f:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   13ca4:	e8 57 f5 fe ff       	callq  3200 <puts@plt>
   13ca9:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   13cae:	be 20 01 00 00       	mov    $0x120,%esi
   13cb3:	4c 89 ff             	mov    %r15,%rdi
   13cb6:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   13cbb:	e8 60 15 ff ff       	callq  5220 <mbedtls_platform_zeroize>
   13cc0:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   13cc5:	48 8b 84 24 48 04 00 	mov    0x448(%rsp),%rax
   13ccc:	00 
   13ccd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13cd4:	00 00 
   13cd6:	0f 85 e0 08 00 00    	jne    145bc <mbedtls_aes_self_test+0xcec>
   13cdc:	48 81 c4 58 04 00 00 	add    $0x458,%rsp
   13ce3:	44 89 c0             	mov    %r8d,%eax
   13ce6:	5b                   	pop    %rbx
   13ce7:	5d                   	pop    %rbp
   13ce8:	41 5c                	pop    %r12
   13cea:	41 5d                	pop    %r13
   13cec:	41 5e                	pop    %r14
   13cee:	41 5f                	pop    %r15
   13cf0:	c3                   	retq   
   13cf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13cf8:	e8 53 e5 ff ff       	callq  12250 <mbedtls_aes_setkey_enc>
   13cfd:	41 89 c0             	mov    %eax,%r8d
   13d00:	48 8d 05 59 0d 01 00 	lea    0x10d59(%rip),%rax        # 24a60 <aes_test_ecb_enc>
   13d07:	49 01 c4             	add    %rax,%r12
   13d0a:	e9 ab fc ff ff       	jmpq   139ba <mbedtls_aes_self_test+0xea>
   13d0f:	90                   	nop
   13d10:	bf 00 00 00 02       	mov    $0x2000000,%edi
   13d15:	e8 c6 15 ff ff       	callq  52e0 <mbedtls_aesni_has_support>
   13d1a:	85 c0                	test   %eax,%eax
   13d1c:	0f 84 96 00 00 00    	je     13db8 <mbedtls_aes_self_test+0x4e8>
   13d22:	48 8d 3d d7 05 01 00 	lea    0x105d7(%rip),%rdi        # 24300 <K+0x280>
   13d29:	e8 d2 f4 fe ff       	callq  3200 <puts@plt>
   13d2e:	e9 f7 fb ff ff       	jmpq   1392a <mbedtls_aes_self_test+0x5a>
   13d33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13d38:	e8 43 e8 ff ff       	callq  12580 <mbedtls_aes_setkey_dec>
   13d3d:	48 8d 0d dc 0c 01 00 	lea    0x10cdc(%rip),%rcx        # 24a20 <aes_test_cbc_dec>
   13d44:	49 01 cc             	add    %rcx,%r12
   13d47:	83 f8 8e             	cmp    $0xffffff8e,%eax
   13d4a:	0f 84 56 fd ff ff    	je     13aa6 <mbedtls_aes_self_test+0x1d6>
   13d50:	85 c0                	test   %eax,%eax
   13d52:	0f 85 35 ff ff ff    	jne    13c8d <mbedtls_aes_self_test+0x3bd>
   13d58:	bb 10 27 00 00       	mov    $0x2710,%ebx
   13d5d:	eb 0a                	jmp    13d69 <mbedtls_aes_self_test+0x499>
   13d5f:	90                   	nop
   13d60:	83 eb 01             	sub    $0x1,%ebx
   13d63:	0f 84 d7 07 00 00    	je     14540 <mbedtls_aes_self_test+0xc70>
   13d69:	45 85 ed             	test   %r13d,%r13d
   13d6c:	74 22                	je     13d90 <mbedtls_aes_self_test+0x4c0>
   13d6e:	66 0f 6f 84 24 b0 03 	movdqa 0x3b0(%rsp),%xmm0
   13d75:	00 00 
   13d77:	66 0f 6f 8c 24 00 04 	movdqa 0x400(%rsp),%xmm1
   13d7e:	00 00 
   13d80:	0f 29 84 24 00 04 00 	movaps %xmm0,0x400(%rsp)
   13d87:	00 
   13d88:	0f 29 8c 24 b0 03 00 	movaps %xmm1,0x3b0(%rsp)
   13d8f:	00 
   13d90:	4d 89 f1             	mov    %r14,%r9
   13d93:	4d 89 f0             	mov    %r14,%r8
   13d96:	48 89 e9             	mov    %rbp,%rcx
   13d99:	ba 10 00 00 00       	mov    $0x10,%edx
   13d9e:	44 89 ee             	mov    %r13d,%esi
   13da1:	4c 89 ff             	mov    %r15,%rdi
   13da4:	e8 97 f3 ff ff       	callq  13140 <mbedtls_aes_crypt_cbc>
   13da9:	85 c0                	test   %eax,%eax
   13dab:	74 b3                	je     13d60 <mbedtls_aes_self_test+0x490>
   13dad:	e9 db fe ff ff       	jmpq   13c8d <mbedtls_aes_self_test+0x3bd>
   13db2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13db8:	48 8d 3d e1 05 01 00 	lea    0x105e1(%rip),%rdi        # 243a0 <K+0x320>
   13dbf:	e8 3c f4 fe ff       	callq  3200 <puts@plt>
   13dc4:	e9 61 fb ff ff       	jmpq   1392a <mbedtls_aes_self_test+0x5a>
   13dc9:	bf 0a 00 00 00       	mov    $0xa,%edi
   13dce:	e8 1d f4 fe ff       	callq  31f0 <putchar@plt>
   13dd3:	e9 20 fc ff ff       	jmpq   139f8 <mbedtls_aes_self_test+0x128>
   13dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13ddf:	00 
   13de0:	49 8b 06             	mov    (%r14),%rax
   13de3:	49 8b 56 08          	mov    0x8(%r14),%rdx
   13de7:	49 33 04 24          	xor    (%r12),%rax
   13deb:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   13df0:	48 09 c2             	or     %rax,%rdx
   13df3:	0f 85 57 fe ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   13df9:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
   13dfe:	45 85 db             	test   %r11d,%r11d
   13e01:	0f 84 d5 fb ff ff    	je     139dc <mbedtls_aes_self_test+0x10c>
   13e07:	48 8d 3d d4 f3 00 00 	lea    0xf3d4(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   13e0e:	e8 ed f3 fe ff       	callq  3200 <puts@plt>
   13e13:	e9 c4 fb ff ff       	jmpq   139dc <mbedtls_aes_self_test+0x10c>
   13e18:	48 b8 6b c1 be e2 2e 	movabs $0x969f402ee2bec16b,%rax
   13e1f:	40 9f 96 
   13e22:	66 0f 6f 05 a6 0c 01 	movdqa 0x10ca6(%rip),%xmm0        # 24ad0 <aes_test_ecb_dec+0x30>
   13e29:	00 
   13e2a:	49 c1 e0 06          	shl    $0x6,%r8
   13e2e:	48 ba e9 3d 7e 11 73 	movabs $0x2a179373117e3de9,%rdx
   13e35:	93 17 2a 
   13e38:	48 89 84 24 00 04 00 	mov    %rax,0x400(%rsp)
   13e3f:	00 
   13e40:	48 8d 1d 39 0a 01 00 	lea    0x10a39(%rip),%rbx        # 24880 <aes_test_cfb128_ct>
   13e47:	48 b8 ae 2d 8a 57 1e 	movabs $0x9cac031e578a2dae,%rax
   13e4e:	03 ac 9c 
   13e51:	48 89 94 24 08 04 00 	mov    %rdx,0x408(%rsp)
   13e58:	00 
   13e59:	4c 01 c3             	add    %r8,%rbx
   13e5c:	48 ba 9e b7 6f ac 45 	movabs $0x518eaf45ac6fb79e,%rdx
   13e63:	af 8e 51 
   13e66:	48 89 84 24 10 04 00 	mov    %rax,0x410(%rsp)
   13e6d:	00 
   13e6e:	48 b8 30 c8 1c 46 a3 	movabs $0x11e45ca3461cc830,%rax
   13e75:	5c e4 11 
   13e78:	48 89 94 24 18 04 00 	mov    %rdx,0x418(%rsp)
   13e7f:	00 
   13e80:	48 ba e5 fb c1 19 1a 	movabs $0xef520a1a19c1fbe5,%rdx
   13e87:	0a 52 ef 
   13e8a:	48 89 84 24 20 04 00 	mov    %rax,0x420(%rsp)
   13e91:	00 
   13e92:	48 89 94 24 28 04 00 	mov    %rdx,0x428(%rsp)
   13e99:	00 
   13e9a:	0f 29 84 24 30 04 00 	movaps %xmm0,0x430(%rsp)
   13ea1:	00 
   13ea2:	e9 69 fd ff ff       	jmpq   13c10 <mbedtls_aes_self_test+0x340>
   13ea7:	48 8b 45 10          	mov    0x10(%rbp),%rax
   13eab:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   13eaf:	48 33 43 10          	xor    0x10(%rbx),%rax
   13eb3:	48 33 53 18          	xor    0x18(%rbx),%rdx
   13eb7:	48 09 c2             	or     %rax,%rdx
   13eba:	0f 85 90 fd ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   13ec0:	48 8b 45 20          	mov    0x20(%rbp),%rax
   13ec4:	48 8b 55 28          	mov    0x28(%rbp),%rdx
   13ec8:	48 33 43 20          	xor    0x20(%rbx),%rax
   13ecc:	48 33 53 28          	xor    0x28(%rbx),%rdx
   13ed0:	48 09 c2             	or     %rax,%rdx
   13ed3:	0f 85 77 fd ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   13ed9:	48 8b 45 30          	mov    0x30(%rbp),%rax
   13edd:	48 8b 55 38          	mov    0x38(%rbp),%rdx
   13ee1:	48 33 43 30          	xor    0x30(%rbx),%rax
   13ee5:	48 33 53 38          	xor    0x38(%rbx),%rdx
   13ee9:	48 09 c2             	or     %rax,%rdx
   13eec:	0f 85 5e fd ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   13ef2:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13ef6:	85 c0                	test   %eax,%eax
   13ef8:	74 1a                	je     13f14 <mbedtls_aes_self_test+0x644>
   13efa:	48 8d 3d e1 f2 00 00 	lea    0xf2e1(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   13f01:	e8 fa f2 fe ff       	callq  3200 <puts@plt>
   13f06:	eb 0c                	jmp    13f14 <mbedtls_aes_self_test+0x644>
   13f08:	48 8d 3d e7 d1 00 00 	lea    0xd1e7(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
   13f0f:	e8 ec f2 fe ff       	callq  3200 <puts@plt>
   13f14:	41 83 c4 01          	add    $0x1,%r12d
   13f18:	41 83 fc 06          	cmp    $0x6,%r12d
   13f1c:	0f 85 ca fb ff ff    	jne    13aec <mbedtls_aes_self_test+0x21c>
   13f22:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13f26:	49 89 ee             	mov    %rbp,%r14
   13f29:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   13f2e:	85 c0                	test   %eax,%eax
   13f30:	0f 85 42 06 00 00    	jne    14578 <mbedtls_aes_self_test+0xca8>
   13f36:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   13f3b:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   13f40:	45 31 ed             	xor    %r13d,%r13d
   13f43:	45 89 e9             	mov    %r13d,%r9d
   13f46:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13f4a:	45 89 ec             	mov    %r13d,%r12d
   13f4d:	41 d1 f9             	sar    %r9d
   13f50:	41 83 e4 01          	and    $0x1,%r12d
   13f54:	41 8d 59 02          	lea    0x2(%r9),%ebx
   13f58:	c1 e3 06             	shl    $0x6,%ebx
   13f5b:	85 c0                	test   %eax,%eax
   13f5d:	74 34                	je     13f93 <mbedtls_aes_self_test+0x6c3>
   13f5f:	45 85 e4             	test   %r12d,%r12d
   13f62:	89 da                	mov    %ebx,%edx
   13f64:	bf 01 00 00 00       	mov    $0x1,%edi
   13f69:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   13f6e:	48 8d 05 64 d1 00 00 	lea    0xd164(%rip),%rax        # 210d9 <_IO_stdin_used+0xd9>
   13f75:	48 8d 0d 82 d1 00 00 	lea    0xd182(%rip),%rcx        # 210fe <_IO_stdin_used+0xfe>
   13f7c:	48 0f 45 c8          	cmovne %rax,%rcx
   13f80:	48 8d 35 d4 03 01 00 	lea    0x103d4(%rip),%rsi        # 2435b <K+0x2db>
   13f87:	31 c0                	xor    %eax,%eax
   13f89:	e8 b2 f3 fe ff       	callq  3340 <__printf_chk@plt>
   13f8e:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   13f93:	4d 63 c9             	movslq %r9d,%r9
   13f96:	b9 20 00 00 00       	mov    $0x20,%ecx
   13f9b:	48 89 ef             	mov    %rbp,%rdi
   13f9e:	48 b8 00 01 02 03 04 	movabs $0x706050403020100,%rax
   13fa5:	05 06 07 
   13fa8:	4c 89 ce             	mov    %r9,%rsi
   13fab:	48 89 84 24 a0 03 00 	mov    %rax,0x3a0(%rsp)
   13fb2:	00 
   13fb3:	48 ba 08 09 0a 0b 0c 	movabs $0xf0e0d0c0b0a0908,%rdx
   13fba:	0d 0e 0f 
   13fbd:	48 8d 05 5c 08 01 00 	lea    0x1085c(%rip),%rax        # 24820 <aes_test_ofb_key>
   13fc4:	48 89 94 24 a8 03 00 	mov    %rdx,0x3a8(%rsp)
   13fcb:	00 
   13fcc:	48 c1 e6 05          	shl    $0x5,%rsi
   13fd0:	89 da                	mov    %ebx,%edx
   13fd2:	c1 ea 03             	shr    $0x3,%edx
   13fd5:	48 01 c6             	add    %rax,%rsi
   13fd8:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   13fdd:	e8 fe f2 fe ff       	callq  32e0 <__memcpy_chk@plt>
   13fe2:	89 da                	mov    %ebx,%edx
   13fe4:	48 89 ee             	mov    %rbp,%rsi
   13fe7:	4c 89 ff             	mov    %r15,%rdi
   13fea:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   13ff1:	00 00 
   13ff3:	e8 58 e2 ff ff       	callq  12250 <mbedtls_aes_setkey_enc>
   13ff8:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   13ffd:	83 f8 8e             	cmp    $0xffffff8e,%eax
   14000:	75 0c                	jne    1400e <mbedtls_aes_self_test+0x73e>
   14002:	81 fb c0 00 00 00    	cmp    $0xc0,%ebx
   14008:	0f 84 21 05 00 00    	je     1452f <mbedtls_aes_self_test+0xc5f>
   1400e:	85 c0                	test   %eax,%eax
   14010:	0f 85 77 fc ff ff    	jne    13c8d <mbedtls_aes_self_test+0x3bd>
   14016:	45 85 e4             	test   %r12d,%r12d
   14019:	0f 85 06 04 00 00    	jne    14425 <mbedtls_aes_self_test+0xb55>
   1401f:	49 c1 e1 06          	shl    $0x6,%r9
   14023:	48 8d 05 f6 06 01 00 	lea    0x106f6(%rip),%rax        # 24720 <aes_test_ofb_ct>
   1402a:	48 8d 1d af 07 01 00 	lea    0x107af(%rip),%rbx        # 247e0 <aes_test_ofb_pt>
   14031:	4c 01 c8             	add    %r9,%rax
   14034:	66 0f 6f 10          	movdqa (%rax),%xmm2
   14038:	66 0f 6f 58 10       	movdqa 0x10(%rax),%xmm3
   1403d:	66 0f 6f 60 20       	movdqa 0x20(%rax),%xmm4
   14042:	66 0f 6f 70 30       	movdqa 0x30(%rax),%xmm6
   14047:	0f 29 94 24 00 04 00 	movaps %xmm2,0x400(%rsp)
   1404e:	00 
   1404f:	0f 29 9c 24 10 04 00 	movaps %xmm3,0x410(%rsp)
   14056:	00 
   14057:	0f 29 a4 24 20 04 00 	movaps %xmm4,0x420(%rsp)
   1405e:	00 
   1405f:	0f 29 b4 24 30 04 00 	movaps %xmm6,0x430(%rsp)
   14066:	00 
   14067:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1406c:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   14071:	4d 89 f1             	mov    %r14,%r9
   14074:	4d 89 f0             	mov    %r14,%r8
   14077:	be 40 00 00 00       	mov    $0x40,%esi
   1407c:	4c 89 ff             	mov    %r15,%rdi
   1407f:	e8 ac f6 ff ff       	callq  13730 <mbedtls_aes_crypt_ofb>
   14084:	85 c0                	test   %eax,%eax
   14086:	0f 85 01 fc ff ff    	jne    13c8d <mbedtls_aes_self_test+0x3bd>
   1408c:	49 8b 06             	mov    (%r14),%rax
   1408f:	49 8b 56 08          	mov    0x8(%r14),%rdx
   14093:	48 33 03             	xor    (%rbx),%rax
   14096:	48 33 53 08          	xor    0x8(%rbx),%rdx
   1409a:	48 09 c2             	or     %rax,%rdx
   1409d:	0f 85 ad fb ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   140a3:	49 8b 46 10          	mov    0x10(%r14),%rax
   140a7:	49 8b 56 18          	mov    0x18(%r14),%rdx
   140ab:	48 33 43 10          	xor    0x10(%rbx),%rax
   140af:	48 33 53 18          	xor    0x18(%rbx),%rdx
   140b3:	48 09 c2             	or     %rax,%rdx
   140b6:	0f 85 94 fb ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   140bc:	49 8b 46 20          	mov    0x20(%r14),%rax
   140c0:	49 8b 56 28          	mov    0x28(%r14),%rdx
   140c4:	48 33 43 20          	xor    0x20(%rbx),%rax
   140c8:	48 33 53 28          	xor    0x28(%rbx),%rdx
   140cc:	48 09 c2             	or     %rax,%rdx
   140cf:	0f 85 7b fb ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   140d5:	49 8b 46 30          	mov    0x30(%r14),%rax
   140d9:	49 8b 56 38          	mov    0x38(%r14),%rdx
   140dd:	48 33 43 30          	xor    0x30(%rbx),%rax
   140e1:	48 33 53 38          	xor    0x38(%rbx),%rdx
   140e5:	48 09 c2             	or     %rax,%rdx
   140e8:	0f 85 62 fb ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   140ee:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   140f3:	45 85 e4             	test   %r12d,%r12d
   140f6:	74 0c                	je     14104 <mbedtls_aes_self_test+0x834>
   140f8:	48 8d 3d e3 f0 00 00 	lea    0xf0e3(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   140ff:	e8 fc f0 fe ff       	callq  3200 <puts@plt>
   14104:	41 83 c5 01          	add    $0x1,%r13d
   14108:	41 83 fd 06          	cmp    $0x6,%r13d
   1410c:	0f 85 31 fe ff ff    	jne    13f43 <mbedtls_aes_self_test+0x673>
   14112:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   14116:	85 db                	test   %ebx,%ebx
   14118:	0f 85 f8 02 00 00    	jne    14416 <mbedtls_aes_self_test+0xb46>
   1411e:	31 ed                	xor    %ebp,%ebp
   14120:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
   14125:	41 89 ed             	mov    %ebp,%r13d
   14128:	89 eb                	mov    %ebp,%ebx
   1412a:	41 d1 fd             	sar    %r13d
   1412d:	83 e3 01             	and    $0x1,%ebx
   14130:	45 85 db             	test   %r11d,%r11d
   14133:	74 27                	je     1415c <mbedtls_aes_self_test+0x88c>
   14135:	85 db                	test   %ebx,%ebx
   14137:	48 8d 05 c0 cf 00 00 	lea    0xcfc0(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   1413e:	48 8d 15 94 cf 00 00 	lea    0xcf94(%rip),%rdx        # 210d9 <_IO_stdin_used+0xd9>
   14145:	bf 01 00 00 00       	mov    $0x1,%edi
   1414a:	48 0f 44 d0          	cmove  %rax,%rdx
   1414e:	48 8d 35 1b 02 01 00 	lea    0x1021b(%rip),%rsi        # 24370 <K+0x2f0>
   14155:	31 c0                	xor    %eax,%eax
   14157:	e8 e4 f1 fe ff       	callq  3340 <__printf_chk@plt>
   1415c:	4d 63 ed             	movslq %r13d,%r13
   1415f:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   14164:	ba 80 00 00 00       	mov    $0x80,%edx
   14169:	4c 89 ff             	mov    %r15,%rdi
   1416c:	4c 89 e8             	mov    %r13,%rax
   1416f:	48 8d 0d 2a 05 01 00 	lea    0x1052a(%rip),%rcx        # 246a0 <aes_test_ctr_nonce_counter>
   14176:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1417d:	00 00 
   1417f:	48 c1 e0 04          	shl    $0x4,%rax
   14183:	66 0f 6f 14 01       	movdqa (%rcx,%rax,1),%xmm2
   14188:	48 8d 0d 51 05 01 00 	lea    0x10551(%rip),%rcx        # 246e0 <aes_test_ctr_key>
   1418f:	66 0f 6f 24 01       	movdqa (%rcx,%rax,1),%xmm4
   14194:	0f 29 54 24 10       	movaps %xmm2,0x10(%rsp)
   14199:	0f 29 94 24 c0 03 00 	movaps %xmm2,0x3c0(%rsp)
   141a0:	00 
   141a1:	0f 29 a4 24 e0 03 00 	movaps %xmm4,0x3e0(%rsp)
   141a8:	00 
   141a9:	e8 a2 e0 ff ff       	callq  12250 <mbedtls_aes_setkey_enc>
   141ae:	85 c0                	test   %eax,%eax
   141b0:	0f 85 d7 fa ff ff    	jne    13c8d <mbedtls_aes_self_test+0x3bd>
   141b6:	48 8d 05 83 03 01 00 	lea    0x10383(%rip),%rax        # 24540 <aes_test_ctr_len>
   141bd:	48 8d 0d 3c 04 01 00 	lea    0x1043c(%rip),%rcx        # 24600 <aes_test_ctr_pt>
   141c4:	4e 63 24 a8          	movslq (%rax,%r13,4),%r12
   141c8:	4b 8d 44 6d 00       	lea    0x0(%r13,%r13,2),%rax
   141cd:	4c 8d 05 8c 03 01 00 	lea    0x1038c(%rip),%r8        # 24560 <aes_test_ctr_ct>
   141d4:	48 c1 e0 04          	shl    $0x4,%rax
   141d8:	4c 8d 2c 08          	lea    (%rax,%rcx,1),%r13
   141dc:	49 01 c0             	add    %rax,%r8
   141df:	85 db                	test   %ebx,%ebx
   141e1:	0f 85 d7 02 00 00    	jne    144be <mbedtls_aes_self_test+0xbee>
   141e7:	b9 40 00 00 00       	mov    $0x40,%ecx
   141ec:	4c 89 e2             	mov    %r12,%rdx
   141ef:	4c 89 c6             	mov    %r8,%rsi
   141f2:	4c 89 f7             	mov    %r14,%rdi
   141f5:	e8 e6 f0 fe ff       	callq  32e0 <__memcpy_chk@plt>
   141fa:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   141ff:	4d 89 f1             	mov    %r14,%r9
   14202:	4c 89 e6             	mov    %r12,%rsi
   14205:	4c 89 ff             	mov    %r15,%rdi
   14208:	48 8d 8c 24 c0 03 00 	lea    0x3c0(%rsp),%rcx
   1420f:	00 
   14210:	48 83 ec 08          	sub    $0x8,%rsp
   14214:	41 56                	push   %r14
   14216:	4c 8d 84 24 e0 03 00 	lea    0x3e0(%rsp),%r8
   1421d:	00 
   1421e:	e8 bd f5 ff ff       	callq  137e0 <mbedtls_aes_crypt_ctr>
   14223:	41 59                	pop    %r9
   14225:	41 5a                	pop    %r10
   14227:	85 c0                	test   %eax,%eax
   14229:	0f 85 5e fa ff ff    	jne    13c8d <mbedtls_aes_self_test+0x3bd>
   1422f:	4c 89 e2             	mov    %r12,%rdx
   14232:	4c 89 ee             	mov    %r13,%rsi
   14235:	4c 89 f7             	mov    %r14,%rdi
   14238:	e8 63 f0 fe ff       	callq  32a0 <memcmp@plt>
   1423d:	89 c3                	mov    %eax,%ebx
   1423f:	85 c0                	test   %eax,%eax
   14241:	0f 85 09 fa ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   14247:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   1424c:	45 85 c0             	test   %r8d,%r8d
   1424f:	0f 85 c9 02 00 00    	jne    1451e <mbedtls_aes_self_test+0xc4e>
   14255:	83 c5 01             	add    $0x1,%ebp
   14258:	83 fd 06             	cmp    $0x6,%ebp
   1425b:	0f 85 bf fe ff ff    	jne    14120 <mbedtls_aes_self_test+0x850>
   14261:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   14265:	85 ff                	test   %edi,%edi
   14267:	0f 85 1a 03 00 00    	jne    14587 <mbedtls_aes_self_test+0xcb7>
   1426d:	48 8d ac 24 60 01 00 	lea    0x160(%rsp),%rbp
   14274:	00 
   14275:	4d 89 f5             	mov    %r14,%r13
   14278:	48 89 ef             	mov    %rbp,%rdi
   1427b:	e8 20 df ff ff       	callq  121a0 <mbedtls_aes_xts_init>
   14280:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   14285:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   14289:	41 89 dc             	mov    %ebx,%r12d
   1428c:	41 89 de             	mov    %ebx,%r14d
   1428f:	41 d1 fc             	sar    %r12d
   14292:	41 83 e6 01          	and    $0x1,%r14d
   14296:	85 f6                	test   %esi,%esi
   14298:	74 28                	je     142c2 <mbedtls_aes_self_test+0x9f2>
   1429a:	45 85 f6             	test   %r14d,%r14d
   1429d:	48 8d 05 5a ce 00 00 	lea    0xce5a(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   142a4:	48 8d 15 2e ce 00 00 	lea    0xce2e(%rip),%rdx        # 210d9 <_IO_stdin_used+0xd9>
   142ab:	bf 01 00 00 00       	mov    $0x1,%edi
   142b0:	48 0f 44 d0          	cmove  %rax,%rdx
   142b4:	48 8d 35 ca 00 01 00 	lea    0x100ca(%rip),%rsi        # 24385 <K+0x305>
   142bb:	31 c0                	xor    %eax,%eax
   142bd:	e8 7e f0 fe ff       	callq  3340 <__printf_chk@plt>
   142c2:	4d 63 e4             	movslq %r12d,%r12
   142c5:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   142ca:	ba 00 01 00 00       	mov    $0x100,%edx
   142cf:	48 89 ef             	mov    %rbp,%rdi
   142d2:	4d 89 e7             	mov    %r12,%r15
   142d5:	48 8d 05 04 02 01 00 	lea    0x10204(%rip),%rax        # 244e0 <aes_test_xts_key>
   142dc:	49 c1 e4 04          	shl    $0x4,%r12
   142e0:	49 c1 e7 05          	shl    $0x5,%r15
   142e4:	4c 01 f8             	add    %r15,%rax
   142e7:	66 0f 6f 30          	movdqa (%rax),%xmm6
   142eb:	66 0f 6f 78 10       	movdqa 0x10(%rax),%xmm7
   142f0:	48 8d 05 e9 00 01 00 	lea    0x100e9(%rip),%rax        # 243e0 <aes_test_xts_data_unit>
   142f7:	49 01 c4             	add    %rax,%r12
   142fa:	0f 29 b4 24 e0 03 00 	movaps %xmm6,0x3e0(%rsp)
   14301:	00 
   14302:	0f 29 bc 24 f0 03 00 	movaps %xmm7,0x3f0(%rsp)
   14309:	00 
   1430a:	45 85 f6             	test   %r14d,%r14d
   1430d:	0f 85 d0 01 00 00    	jne    144e3 <mbedtls_aes_self_test+0xc13>
   14313:	e8 a8 e4 ff ff       	callq  127c0 <mbedtls_aes_xts_setkey_dec>
   14318:	89 c2                	mov    %eax,%edx
   1431a:	85 c0                	test   %eax,%eax
   1431c:	0f 85 8d 02 00 00    	jne    145af <mbedtls_aes_self_test+0xcdf>
   14322:	48 8d 05 f7 00 01 00 	lea    0x100f7(%rip),%rax        # 24420 <aes_test_xts_ct32>
   14329:	4c 01 f8             	add    %r15,%rax
   1432c:	66 0f 6f 38          	movdqa (%rax),%xmm7
   14330:	66 0f 6f 50 10       	movdqa 0x10(%rax),%xmm2
   14335:	48 8d 05 44 01 01 00 	lea    0x10144(%rip),%rax        # 24480 <aes_test_xts_pt32>
   1433c:	49 01 c7             	add    %rax,%r15
   1433f:	41 0f 29 7d 00       	movaps %xmm7,0x0(%r13)
   14344:	41 0f 29 55 10       	movaps %xmm2,0x10(%r13)
   14349:	ba 20 00 00 00       	mov    $0x20,%edx
   1434e:	4d 89 e9             	mov    %r13,%r9
   14351:	4d 89 e8             	mov    %r13,%r8
   14354:	4c 89 e1             	mov    %r12,%rcx
   14357:	44 89 f6             	mov    %r14d,%esi
   1435a:	48 89 ef             	mov    %rbp,%rdi
   1435d:	e8 ee ee ff ff       	callq  13250 <mbedtls_aes_crypt_xts>
   14362:	89 c2                	mov    %eax,%edx
   14364:	85 c0                	test   %eax,%eax
   14366:	0f 85 43 02 00 00    	jne    145af <mbedtls_aes_self_test+0xcdf>
   1436c:	49 8b 45 00          	mov    0x0(%r13),%rax
   14370:	49 8b 4d 08          	mov    0x8(%r13),%rcx
   14374:	49 33 07             	xor    (%r15),%rax
   14377:	49 33 4f 08          	xor    0x8(%r15),%rcx
   1437b:	48 09 c1             	or     %rax,%rcx
   1437e:	0f 85 30 01 00 00    	jne    144b4 <mbedtls_aes_self_test+0xbe4>
   14384:	49 8b 45 10          	mov    0x10(%r13),%rax
   14388:	49 8b 4d 18          	mov    0x18(%r13),%rcx
   1438c:	49 33 47 10          	xor    0x10(%r15),%rax
   14390:	49 33 4f 18          	xor    0x18(%r15),%rcx
   14394:	48 09 c1             	or     %rax,%rcx
   14397:	0f 85 17 01 00 00    	jne    144b4 <mbedtls_aes_self_test+0xbe4>
   1439d:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   143a1:	85 c9                	test   %ecx,%ecx
   143a3:	74 14                	je     143b9 <mbedtls_aes_self_test+0xae9>
   143a5:	48 8d 3d 36 ee 00 00 	lea    0xee36(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   143ac:	89 54 24 28          	mov    %edx,0x28(%rsp)
   143b0:	e8 4b ee fe ff       	callq  3200 <puts@plt>
   143b5:	8b 54 24 28          	mov    0x28(%rsp),%edx
   143b9:	83 c3 01             	add    $0x1,%ebx
   143bc:	83 fb 06             	cmp    $0x6,%ebx
   143bf:	0f 85 c0 fe ff ff    	jne    14285 <mbedtls_aes_self_test+0x9b5>
   143c5:	41 89 d0             	mov    %edx,%r8d
   143c8:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   143cc:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   143d1:	85 d2                	test   %edx,%edx
   143d3:	0f 85 bd 01 00 00    	jne    14596 <mbedtls_aes_self_test+0xcc6>
   143d9:	be 20 01 00 00       	mov    $0x120,%esi
   143de:	48 89 ef             	mov    %rbp,%rdi
   143e1:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   143e6:	e8 35 0e ff ff       	callq  5220 <mbedtls_platform_zeroize>
   143eb:	48 8d bc 24 80 02 00 	lea    0x280(%rsp),%rdi
   143f2:	00 
   143f3:	be 20 01 00 00       	mov    $0x120,%esi
   143f8:	e8 23 0e ff ff       	callq  5220 <mbedtls_platform_zeroize>
   143fd:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   14402:	e9 a7 f8 ff ff       	jmpq   13cae <mbedtls_aes_self_test+0x3de>
   14407:	bf 0a 00 00 00       	mov    $0xa,%edi
   1440c:	e8 df ed fe ff       	callq  31f0 <putchar@plt>
   14411:	e9 c6 f6 ff ff       	jmpq   13adc <mbedtls_aes_self_test+0x20c>
   14416:	bf 0a 00 00 00       	mov    $0xa,%edi
   1441b:	e8 d0 ed fe ff       	callq  31f0 <putchar@plt>
   14420:	e9 f9 fc ff ff       	jmpq   1411e <mbedtls_aes_self_test+0x84e>
   14425:	48 b8 6b c1 be e2 2e 	movabs $0x969f402ee2bec16b,%rax
   1442c:	40 9f 96 
   1442f:	66 0f 6f 05 99 06 01 	movdqa 0x10699(%rip),%xmm0        # 24ad0 <aes_test_ecb_dec+0x30>
   14436:	00 
   14437:	49 c1 e1 06          	shl    $0x6,%r9
   1443b:	48 ba e9 3d 7e 11 73 	movabs $0x2a179373117e3de9,%rdx
   14442:	93 17 2a 
   14445:	48 89 84 24 00 04 00 	mov    %rax,0x400(%rsp)
   1444c:	00 
   1444d:	48 8d 1d cc 02 01 00 	lea    0x102cc(%rip),%rbx        # 24720 <aes_test_ofb_ct>
   14454:	48 b8 ae 2d 8a 57 1e 	movabs $0x9cac031e578a2dae,%rax
   1445b:	03 ac 9c 
   1445e:	48 89 94 24 08 04 00 	mov    %rdx,0x408(%rsp)
   14465:	00 
   14466:	4c 01 cb             	add    %r9,%rbx
   14469:	48 ba 9e b7 6f ac 45 	movabs $0x518eaf45ac6fb79e,%rdx
   14470:	af 8e 51 
   14473:	48 89 84 24 10 04 00 	mov    %rax,0x410(%rsp)
   1447a:	00 
   1447b:	48 b8 30 c8 1c 46 a3 	movabs $0x11e45ca3461cc830,%rax
   14482:	5c e4 11 
   14485:	48 89 94 24 18 04 00 	mov    %rdx,0x418(%rsp)
   1448c:	00 
   1448d:	48 ba e5 fb c1 19 1a 	movabs $0xef520a1a19c1fbe5,%rdx
   14494:	0a 52 ef 
   14497:	48 89 84 24 20 04 00 	mov    %rax,0x420(%rsp)
   1449e:	00 
   1449f:	48 89 94 24 28 04 00 	mov    %rdx,0x428(%rsp)
   144a6:	00 
   144a7:	0f 29 84 24 30 04 00 	movaps %xmm0,0x430(%rsp)
   144ae:	00 
   144af:	e9 b3 fb ff ff       	jmpq   14067 <mbedtls_aes_self_test+0x797>
   144b4:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   144b9:	e9 92 f7 ff ff       	jmpq   13c50 <mbedtls_aes_self_test+0x380>
   144be:	4c 89 ee             	mov    %r13,%rsi
   144c1:	b9 40 00 00 00       	mov    $0x40,%ecx
   144c6:	4c 89 e2             	mov    %r12,%rdx
   144c9:	4c 89 f7             	mov    %r14,%rdi
   144cc:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   144d1:	e8 0a ee fe ff       	callq  32e0 <__memcpy_chk@plt>
   144d6:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   144db:	4d 89 c5             	mov    %r8,%r13
   144de:	e9 17 fd ff ff       	jmpq   141fa <mbedtls_aes_self_test+0x92a>
   144e3:	e8 78 e2 ff ff       	callq  12760 <mbedtls_aes_xts_setkey_enc>
   144e8:	89 c2                	mov    %eax,%edx
   144ea:	85 c0                	test   %eax,%eax
   144ec:	0f 85 bd 00 00 00    	jne    145af <mbedtls_aes_self_test+0xcdf>
   144f2:	48 8d 05 87 ff 00 00 	lea    0xff87(%rip),%rax        # 24480 <aes_test_xts_pt32>
   144f9:	4c 01 f8             	add    %r15,%rax
   144fc:	66 0f 6f 18          	movdqa (%rax),%xmm3
   14500:	66 0f 6f 60 10       	movdqa 0x10(%rax),%xmm4
   14505:	48 8d 05 14 ff 00 00 	lea    0xff14(%rip),%rax        # 24420 <aes_test_xts_ct32>
   1450c:	49 01 c7             	add    %rax,%r15
   1450f:	41 0f 29 5d 00       	movaps %xmm3,0x0(%r13)
   14514:	41 0f 29 65 10       	movaps %xmm4,0x10(%r13)
   14519:	e9 2b fe ff ff       	jmpq   14349 <mbedtls_aes_self_test+0xa79>
   1451e:	48 8d 3d bd ec 00 00 	lea    0xecbd(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   14525:	e8 d6 ec fe ff       	callq  3200 <puts@plt>
   1452a:	e9 26 fd ff ff       	jmpq   14255 <mbedtls_aes_self_test+0x985>
   1452f:	48 8d 3d c0 cb 00 00 	lea    0xcbc0(%rip),%rdi        # 210f6 <_IO_stdin_used+0xf6>
   14536:	e8 c5 ec fe ff       	callq  3200 <puts@plt>
   1453b:	e9 c4 fb ff ff       	jmpq   14104 <mbedtls_aes_self_test+0x834>
   14540:	49 8b 06             	mov    (%r14),%rax
   14543:	49 8b 56 08          	mov    0x8(%r14),%rdx
   14547:	49 33 04 24          	xor    (%r12),%rax
   1454b:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   14550:	48 09 c2             	or     %rax,%rdx
   14553:	0f 85 f7 f6 ff ff    	jne    13c50 <mbedtls_aes_self_test+0x380>
   14559:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   1455e:	45 85 c0             	test   %r8d,%r8d
   14561:	0f 84 57 f5 ff ff    	je     13abe <mbedtls_aes_self_test+0x1ee>
   14567:	48 8d 3d 74 ec 00 00 	lea    0xec74(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1456e:	e8 8d ec fe ff       	callq  3200 <puts@plt>
   14573:	e9 46 f5 ff ff       	jmpq   13abe <mbedtls_aes_self_test+0x1ee>
   14578:	bf 0a 00 00 00       	mov    $0xa,%edi
   1457d:	e8 6e ec fe ff       	callq  31f0 <putchar@plt>
   14582:	e9 af f9 ff ff       	jmpq   13f36 <mbedtls_aes_self_test+0x666>
   14587:	bf 0a 00 00 00       	mov    $0xa,%edi
   1458c:	e8 5f ec fe ff       	callq  31f0 <putchar@plt>
   14591:	e9 d7 fc ff ff       	jmpq   1426d <mbedtls_aes_self_test+0x99d>
   14596:	bf 0a 00 00 00       	mov    $0xa,%edi
   1459b:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   145a0:	e8 4b ec fe ff       	callq  31f0 <putchar@plt>
   145a5:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   145aa:	e9 2a fe ff ff       	jmpq   143d9 <mbedtls_aes_self_test+0xb09>
   145af:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   145b4:	41 89 d0             	mov    %edx,%r8d
   145b7:	e9 d4 f6 ff ff       	jmpq   13c90 <mbedtls_aes_self_test+0x3c0>
   145bc:	e8 9f ec fe ff       	callq  3260 <__stack_chk_fail@plt>
   145c1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   145c8:	00 00 00 
   145cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000145d0 <aria_rot128>:
   145d0:	41 89 cb             	mov    %ecx,%r11d
   145d3:	55                   	push   %rbp
   145d4:	89 cd                	mov    %ecx,%ebp
   145d6:	53                   	push   %rbx
   145d7:	41 83 e3 1f          	and    $0x1f,%r11d
   145db:	74 63                	je     14640 <aria_rot128+0x70>
   145dd:	bb 20 00 00 00       	mov    $0x20,%ebx
   145e2:	44 29 db             	sub    %r11d,%ebx
   145e5:	0f b6 db             	movzbl %bl,%ebx
   145e8:	40 c0 ed 05          	shr    $0x5,%bpl
   145ec:	45 0f b6 db          	movzbl %r11b,%r11d
   145f0:	45 31 d2             	xor    %r10d,%r10d
   145f3:	40 0f b6 c5          	movzbl %bpl,%eax
   145f7:	44 8b 0c 82          	mov    (%rdx,%rax,4),%r9d
   145fb:	41 0f c9             	bswap  %r9d
   145fe:	44 8d 45 01          	lea    0x1(%rbp),%r8d
   14602:	44 89 c8             	mov    %r9d,%eax
   14605:	44 89 d9             	mov    %r11d,%ecx
   14608:	41 83 e0 03          	and    $0x3,%r8d
   1460c:	d3 e0                	shl    %cl,%eax
   1460e:	89 d9                	mov    %ebx,%ecx
   14610:	44 89 c5             	mov    %r8d,%ebp
   14613:	4d 63 c0             	movslq %r8d,%r8
   14616:	46 8b 0c 82          	mov    (%rdx,%r8,4),%r9d
   1461a:	41 89 c0             	mov    %eax,%r8d
   1461d:	41 0f c9             	bswap  %r9d
   14620:	44 89 c8             	mov    %r9d,%eax
   14623:	d3 e8                	shr    %cl,%eax
   14625:	44 09 c0             	or     %r8d,%eax
   14628:	0f c8                	bswap  %eax
   1462a:	42 33 04 16          	xor    (%rsi,%r10,1),%eax
   1462e:	42 89 04 17          	mov    %eax,(%rdi,%r10,1)
   14632:	49 83 c2 04          	add    $0x4,%r10
   14636:	49 83 fa 10          	cmp    $0x10,%r10
   1463a:	75 c2                	jne    145fe <aria_rot128+0x2e>
   1463c:	5b                   	pop    %rbx
   1463d:	5d                   	pop    %rbp
   1463e:	c3                   	retq   
   1463f:	90                   	nop
   14640:	31 db                	xor    %ebx,%ebx
   14642:	eb a4                	jmp    145e8 <aria_rot128+0x18>
   14644:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1464b:	00 00 00 00 
   1464f:	90                   	nop

0000000000014650 <aria_fo_xor>:
   14650:	49 89 d1             	mov    %rdx,%r9
   14653:	41 56                	push   %r14
   14655:	49 89 ce             	mov    %rcx,%r14
   14658:	4c 8d 1d e1 08 01 00 	lea    0x108e1(%rip),%r11        # 24f40 <aria_is1>
   1465f:	41 55                	push   %r13
   14661:	4c 8d 2d d8 07 01 00 	lea    0x107d8(%rip),%r13        # 24e40 <aria_is2>
   14668:	41 54                	push   %r12
   1466a:	4c 8d 25 cf 0a 01 00 	lea    0x10acf(%rip),%r12        # 25140 <aria_sb1>
   14671:	55                   	push   %rbp
   14672:	48 8d 2d c7 09 01 00 	lea    0x109c7(%rip),%rbp        # 25040 <aria_sb2>
   14679:	53                   	push   %rbx
   1467a:	8b 16                	mov    (%rsi),%edx
   1467c:	41 33 11             	xor    (%r9),%edx
   1467f:	44 8b 46 04          	mov    0x4(%rsi),%r8d
   14683:	8b 5e 08             	mov    0x8(%rsi),%ebx
   14686:	8b 46 0c             	mov    0xc(%rsi),%eax
   14689:	89 d6                	mov    %edx,%esi
   1468b:	0f b6 ce             	movzbl %dh,%ecx
   1468e:	c1 ee 18             	shr    $0x18,%esi
   14691:	45 33 41 04          	xor    0x4(%r9),%r8d
   14695:	41 33 59 08          	xor    0x8(%r9),%ebx
   14699:	41 33 41 0c          	xor    0xc(%r9),%eax
   1469d:	41 0f b6 74 35 00    	movzbl 0x0(%r13,%rsi,1),%esi
   146a3:	44 0f b6 ca          	movzbl %dl,%r9d
   146a7:	c1 ea 10             	shr    $0x10,%edx
   146aa:	47 0f b6 0c 0c       	movzbl (%r12,%r9,1),%r9d
   146af:	0f b6 d2             	movzbl %dl,%edx
   146b2:	c1 e6 18             	shl    $0x18,%esi
   146b5:	41 0f b6 14 13       	movzbl (%r11,%rdx,1),%edx
   146ba:	44 31 ce             	xor    %r9d,%esi
   146bd:	44 0f b6 4c 0d 00    	movzbl 0x0(%rbp,%rcx,1),%r9d
   146c3:	44 89 c1             	mov    %r8d,%ecx
   146c6:	c1 e2 10             	shl    $0x10,%edx
   146c9:	0f b6 cd             	movzbl %ch,%ecx
   146cc:	41 c1 e1 08          	shl    $0x8,%r9d
   146d0:	44 31 ce             	xor    %r9d,%esi
   146d3:	45 0f b6 c8          	movzbl %r8b,%r9d
   146d7:	31 d6                	xor    %edx,%esi
   146d9:	44 89 c2             	mov    %r8d,%edx
   146dc:	47 0f b6 0c 0c       	movzbl (%r12,%r9,1),%r9d
   146e1:	41 c1 e8 10          	shr    $0x10,%r8d
   146e5:	c1 ea 18             	shr    $0x18,%edx
   146e8:	45 0f b6 c0          	movzbl %r8b,%r8d
   146ec:	41 0f b6 54 15 00    	movzbl 0x0(%r13,%rdx,1),%edx
   146f2:	47 0f b6 04 03       	movzbl (%r11,%r8,1),%r8d
   146f7:	c1 e2 18             	shl    $0x18,%edx
   146fa:	41 c1 e0 10          	shl    $0x10,%r8d
   146fe:	44 31 ca             	xor    %r9d,%edx
   14701:	44 0f b6 4c 0d 00    	movzbl 0x0(%rbp,%rcx,1),%r9d
   14707:	0f b6 cc             	movzbl %ah,%ecx
   1470a:	41 c1 e1 08          	shl    $0x8,%r9d
   1470e:	44 31 ca             	xor    %r9d,%edx
   14711:	44 31 c2             	xor    %r8d,%edx
   14714:	41 89 c0             	mov    %eax,%r8d
   14717:	41 c1 e8 18          	shr    $0x18,%r8d
   1471b:	41 89 d1             	mov    %edx,%r9d
   1471e:	47 0f b6 54 05 00    	movzbl 0x0(%r13,%r8,1),%r10d
   14724:	44 0f b6 c0          	movzbl %al,%r8d
   14728:	c1 e8 10             	shr    $0x10,%eax
   1472b:	47 0f b6 04 04       	movzbl (%r12,%r8,1),%r8d
   14730:	41 c1 c1 10          	rol    $0x10,%r9d
   14734:	41 c1 e2 18          	shl    $0x18,%r10d
   14738:	45 31 c2             	xor    %r8d,%r10d
   1473b:	44 0f b6 44 0d 00    	movzbl 0x0(%rbp,%rcx,1),%r8d
   14741:	0f b6 cf             	movzbl %bh,%ecx
   14744:	41 c1 e0 08          	shl    $0x8,%r8d
   14748:	45 31 c2             	xor    %r8d,%r10d
   1474b:	44 0f b6 c0          	movzbl %al,%r8d
   1474f:	43 0f b6 04 03       	movzbl (%r11,%r8,1),%eax
   14754:	44 0f b6 c3          	movzbl %bl,%r8d
   14758:	47 0f b6 04 04       	movzbl (%r12,%r8,1),%r8d
   1475d:	c1 e0 10             	shl    $0x10,%eax
   14760:	41 31 c2             	xor    %eax,%r10d
   14763:	89 d8                	mov    %ebx,%eax
   14765:	c1 e8 18             	shr    $0x18,%eax
   14768:	41 c1 c2 10          	rol    $0x10,%r10d
   1476c:	41 0f b6 44 05 00    	movzbl 0x0(%r13,%rax,1),%eax
   14772:	c1 e0 18             	shl    $0x18,%eax
   14775:	44 31 c0             	xor    %r8d,%eax
   14778:	44 0f b6 44 0d 00    	movzbl 0x0(%rbp,%rcx,1),%r8d
   1477e:	c1 eb 10             	shr    $0x10,%ebx
   14781:	89 f5                	mov    %esi,%ebp
   14783:	0f b6 db             	movzbl %bl,%ebx
   14786:	c1 c5 10             	rol    $0x10,%ebp
   14789:	41 c1 e0 08          	shl    $0x8,%r8d
   1478d:	44 31 c0             	xor    %r8d,%eax
   14790:	45 0f b6 04 1b       	movzbl (%r11,%rbx,1),%r8d
   14795:	45 89 d3             	mov    %r10d,%r11d
   14798:	41 0f cb             	bswap  %r11d
   1479b:	41 c1 c3 10          	rol    $0x10,%r11d
   1479f:	41 c1 e0 10          	shl    $0x10,%r8d
   147a3:	44 31 c0             	xor    %r8d,%eax
   147a6:	0f c8                	bswap  %eax
   147a8:	41 89 c0             	mov    %eax,%r8d
   147ab:	44 31 d0             	xor    %r10d,%eax
   147ae:	45 89 ca             	mov    %r9d,%r10d
   147b1:	41 c1 c0 10          	rol    $0x10,%r8d
   147b5:	41 89 c5             	mov    %eax,%r13d
   147b8:	45 33 0e             	xor    (%r14),%r9d
   147bb:	41 0f ca             	bswap  %r10d
   147be:	41 c1 c5 10          	rol    $0x10,%r13d
   147c2:	44 31 c2             	xor    %r8d,%edx
   147c5:	41 c1 c2 10          	rol    $0x10,%r10d
   147c9:	0f ca                	bswap  %edx
   147cb:	c1 c2 10             	rol    $0x10,%edx
   147ce:	41 31 ea             	xor    %ebp,%r10d
   147d1:	44 31 da             	xor    %r11d,%edx
   147d4:	89 d3                	mov    %edx,%ebx
   147d6:	44 89 d2             	mov    %r10d,%edx
   147d9:	31 eb                	xor    %ebp,%ebx
   147db:	c1 c2 10             	rol    $0x10,%edx
   147de:	41 31 dd             	xor    %ebx,%r13d
   147e1:	41 89 dc             	mov    %ebx,%r12d
   147e4:	0f ca                	bswap  %edx
   147e6:	c1 c2 10             	rol    $0x10,%edx
   147e9:	41 0f cd             	bswap  %r13d
   147ec:	41 c1 c5 10          	rol    $0x10,%r13d
   147f0:	41 c1 c4 10          	rol    $0x10,%r12d
   147f4:	44 31 da             	xor    %r11d,%edx
   147f7:	45 31 cd             	xor    %r9d,%r13d
   147fa:	44 89 e5             	mov    %r12d,%ebp
   147fd:	44 89 2f             	mov    %r13d,(%rdi)
   14800:	41 33 76 04          	xor    0x4(%r14),%esi
   14804:	0f cd                	bswap  %ebp
   14806:	31 f0                	xor    %esi,%eax
   14808:	31 c3                	xor    %eax,%ebx
   1480a:	89 e8                	mov    %ebp,%eax
   1480c:	89 5f 04             	mov    %ebx,0x4(%rdi)
   1480f:	41 33 56 08          	xor    0x8(%r14),%edx
   14813:	c1 c0 10             	rol    $0x10,%eax
   14816:	44 31 e2             	xor    %r12d,%edx
   14819:	44 31 c0             	xor    %r8d,%eax
   1481c:	5b                   	pop    %rbx
   1481d:	5d                   	pop    %rbp
   1481e:	89 57 08             	mov    %edx,0x8(%rdi)
   14821:	41 33 46 0c          	xor    0xc(%r14),%eax
   14825:	44 31 d0             	xor    %r10d,%eax
   14828:	41 5c                	pop    %r12
   1482a:	41 5d                	pop    %r13
   1482c:	89 47 0c             	mov    %eax,0xc(%rdi)
   1482f:	41 5e                	pop    %r14
   14831:	c3                   	retq   
   14832:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   14839:	00 00 00 00 
   1483d:	0f 1f 00             	nopl   (%rax)

0000000000014840 <mbedtls_aria_setkey_enc>:
   14840:	f3 0f 1e fa          	endbr64 
   14844:	41 57                	push   %r15
   14846:	41 56                	push   %r14
   14848:	41 55                	push   %r13
   1484a:	41 54                	push   %r12
   1484c:	55                   	push   %rbp
   1484d:	53                   	push   %rbx
   1484e:	48 89 fb             	mov    %rdi,%rbx
   14851:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   14858:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1485f:	00 00 
   14861:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   14868:	00 
   14869:	31 c0                	xor    %eax,%eax
   1486b:	48 b8 51 7c c1 b7 27 	movabs $0x940a2227b7c17c51,%rax
   14872:	22 0a 94 
   14875:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1487a:	48 b8 fe 13 ab e8 fa 	movabs $0xe06e9afae8ab13fe,%rax
   14881:	9a 6e e0 
   14884:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14889:	48 b8 6d b1 4a cc 9e 	movabs $0x20c8219ecc4ab16d,%rax
   14890:	21 c8 20 
   14893:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   14898:	48 b8 ff 28 b1 d5 ef 	movabs $0xb0e25defd5b128ff,%rax
   1489f:	5d e2 b0 
   148a2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   148a7:	48 b8 db 92 37 1d 21 	movabs $0x70e926211d3792db,%rax
   148ae:	26 e9 70 
   148b1:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   148b6:	48 b8 03 24 97 75 04 	movabs $0xec9e80475972403,%rax
   148bd:	e8 c9 0e 
   148c0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   148c5:	89 d0                	mov    %edx,%eax
   148c7:	83 e0 bf             	and    $0xffffffbf,%eax
   148ca:	3d 80 00 00 00       	cmp    $0x80,%eax
   148cf:	74 0c                	je     148dd <mbedtls_aria_setkey_enc+0x9d>
   148d1:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   148d7:	0f 85 83 03 00 00    	jne    14c60 <mbedtls_aria_setkey_enc+0x420>
   148dd:	48 8b 06             	mov    (%rsi),%rax
   148e0:	44 8d 72 80          	lea    -0x80(%rdx),%r14d
   148e4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   148e8:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   148ed:	41 c1 ee 06          	shr    $0x6,%r14d
   148f1:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   148f6:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   148fb:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   14900:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   14905:	45 89 f7             	mov    %r14d,%r15d
   14908:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1490c:	49 c1 e7 04          	shl    $0x4,%r15
   14910:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14915:	4f 8d 44 3d 00       	lea    0x0(%r13,%r15,1),%r8
   1491a:	43 8d 44 36 0c       	lea    0xc(%r14,%r14,1),%eax
   1491f:	81 fa bf 00 00 00    	cmp    $0xbf,%edx
   14925:	0f 86 f5 02 00 00    	jbe    14c20 <mbedtls_aria_setkey_enc+0x3e0>
   1492b:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   1492f:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   14934:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   1493a:	0f 85 e0 02 00 00    	jne    14c20 <mbedtls_aria_setkey_enc+0x3e0>
   14940:	48 8b 56 18          	mov    0x18(%rsi),%rdx
   14944:	88 03                	mov    %al,(%rbx)
   14946:	4c 89 e1             	mov    %r12,%rcx
   14949:	48 89 ee             	mov    %rbp,%rsi
   1494c:	4c 89 e7             	mov    %r12,%rdi
   1494f:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
   14954:	4c 89 c2             	mov    %r8,%rdx
   14957:	e8 f4 fc ff ff       	callq  14650 <aria_fo_xor>
   1495c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   14963:	00 
   14964:	4c 89 e9             	mov    %r13,%rcx
   14967:	8b 54 24 50          	mov    0x50(%rsp),%edx
   1496b:	33 11                	xor    (%rcx),%edx
   1496d:	4c 8d 1d cc 06 01 00 	lea    0x106cc(%rip),%r11        # 25040 <aria_sb2>
   14974:	4c 8d 15 c5 05 01 00 	lea    0x105c5(%rip),%r10        # 24f40 <aria_is1>
   1497b:	8b 7c 24 54          	mov    0x54(%rsp),%edi
   1497f:	8b 44 24 58          	mov    0x58(%rsp),%eax
   14983:	44 0f b6 c2          	movzbl %dl,%r8d
   14987:	4c 8d 0d b2 04 01 00 	lea    0x104b2(%rip),%r9        # 24e40 <aria_is2>
   1498e:	33 79 04             	xor    0x4(%rcx),%edi
   14991:	33 41 08             	xor    0x8(%rcx),%eax
   14994:	8b 74 24 5c          	mov    0x5c(%rsp),%esi
   14998:	33 71 0c             	xor    0xc(%rcx),%esi
   1499b:	89 d1                	mov    %edx,%ecx
   1499d:	89 44 24 08          	mov    %eax,0x8(%rsp)
   149a1:	c1 e9 18             	shr    $0x18,%ecx
   149a4:	47 0f b6 04 02       	movzbl (%r10,%r8,1),%r8d
   149a9:	0f b6 c6             	movzbl %dh,%eax
   149ac:	c1 ea 10             	shr    $0x10,%edx
   149af:	41 0f b6 0c 0b       	movzbl (%r11,%rcx,1),%ecx
   149b4:	0f b6 d2             	movzbl %dl,%edx
   149b7:	44 0f b6 f7          	movzbl %dil,%r14d
   149bb:	47 0f b6 34 32       	movzbl (%r10,%r14,1),%r14d
   149c0:	c1 e1 18             	shl    $0x18,%ecx
   149c3:	44 31 c1             	xor    %r8d,%ecx
   149c6:	45 0f b6 04 01       	movzbl (%r9,%rax,1),%r8d
   149cb:	89 f8                	mov    %edi,%eax
   149cd:	0f b6 c4             	movzbl %ah,%eax
   149d0:	41 c1 e0 08          	shl    $0x8,%r8d
   149d4:	44 31 c1             	xor    %r8d,%ecx
   149d7:	4c 8d 05 62 07 01 00 	lea    0x10762(%rip),%r8        # 25140 <aria_sb1>
   149de:	41 0f b6 14 10       	movzbl (%r8,%rdx,1),%edx
   149e3:	c1 e2 10             	shl    $0x10,%edx
   149e6:	31 d1                	xor    %edx,%ecx
   149e8:	89 fa                	mov    %edi,%edx
   149ea:	c1 ef 10             	shr    $0x10,%edi
   149ed:	c1 ea 18             	shr    $0x18,%edx
   149f0:	40 0f b6 ff          	movzbl %dil,%edi
   149f4:	41 0f b6 14 13       	movzbl (%r11,%rdx,1),%edx
   149f9:	41 0f b6 3c 38       	movzbl (%r8,%rdi,1),%edi
   149fe:	c1 e2 18             	shl    $0x18,%edx
   14a01:	c1 e7 10             	shl    $0x10,%edi
   14a04:	44 31 f2             	xor    %r14d,%edx
   14a07:	45 0f b6 34 01       	movzbl (%r9,%rax,1),%r14d
   14a0c:	89 f0                	mov    %esi,%eax
   14a0e:	41 c1 e6 08          	shl    $0x8,%r14d
   14a12:	44 31 f2             	xor    %r14d,%edx
   14a15:	31 fa                	xor    %edi,%edx
   14a17:	89 f7                	mov    %esi,%edi
   14a19:	c1 ef 18             	shr    $0x18,%edi
   14a1c:	41 89 d6             	mov    %edx,%r14d
   14a1f:	45 0f b6 3c 3b       	movzbl (%r11,%rdi,1),%r15d
   14a24:	40 0f b6 fe          	movzbl %sil,%edi
   14a28:	c1 ee 10             	shr    $0x10,%esi
   14a2b:	41 0f b6 3c 3a       	movzbl (%r10,%rdi,1),%edi
   14a30:	40 0f b6 f6          	movzbl %sil,%esi
   14a34:	41 c1 c6 10          	rol    $0x10,%r14d
   14a38:	41 c1 e7 18          	shl    $0x18,%r15d
   14a3c:	41 31 ff             	xor    %edi,%r15d
   14a3f:	0f b6 fc             	movzbl %ah,%edi
   14a42:	41 0f b6 3c 39       	movzbl (%r9,%rdi,1),%edi
   14a47:	c1 e7 08             	shl    $0x8,%edi
   14a4a:	44 31 ff             	xor    %r15d,%edi
   14a4d:	45 0f b6 3c 30       	movzbl (%r8,%rsi,1),%r15d
   14a52:	41 c1 e7 10          	shl    $0x10,%r15d
   14a56:	44 31 ff             	xor    %r15d,%edi
   14a59:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
   14a5e:	c1 c7 10             	rol    $0x10,%edi
   14a61:	44 89 f8             	mov    %r15d,%eax
   14a64:	c1 e8 18             	shr    $0x18,%eax
   14a67:	89 c6                	mov    %eax,%esi
   14a69:	44 89 f8             	mov    %r15d,%eax
   14a6c:	41 0f b6 34 33       	movzbl (%r11,%rsi,1),%esi
   14a71:	45 0f b6 df          	movzbl %r15b,%r11d
   14a75:	0f b6 c4             	movzbl %ah,%eax
   14a78:	47 0f b6 14 1a       	movzbl (%r10,%r11,1),%r10d
   14a7d:	45 0f b6 0c 01       	movzbl (%r9,%rax,1),%r9d
   14a82:	44 89 f8             	mov    %r15d,%eax
   14a85:	c1 e6 18             	shl    $0x18,%esi
   14a88:	44 31 d6             	xor    %r10d,%esi
   14a8b:	c1 e8 10             	shr    $0x10,%eax
   14a8e:	41 89 fa             	mov    %edi,%r10d
   14a91:	0f b6 c0             	movzbl %al,%eax
   14a94:	41 c1 e1 08          	shl    $0x8,%r9d
   14a98:	41 0f ca             	bswap  %r10d
   14a9b:	45 0f b6 04 00       	movzbl (%r8,%rax,1),%r8d
   14aa0:	44 31 ce             	xor    %r9d,%esi
   14aa3:	89 d0                	mov    %edx,%eax
   14aa5:	45 89 f1             	mov    %r14d,%r9d
   14aa8:	41 c1 c2 10          	rol    $0x10,%r10d
   14aac:	41 0f c9             	bswap  %r9d
   14aaf:	41 c1 c1 10          	rol    $0x10,%r9d
   14ab3:	41 c1 e0 10          	shl    $0x10,%r8d
   14ab7:	41 31 f0             	xor    %esi,%r8d
   14aba:	89 ce                	mov    %ecx,%esi
   14abc:	33 4c 24 44          	xor    0x44(%rsp),%ecx
   14ac0:	41 0f c8             	bswap  %r8d
   14ac3:	45 89 c3             	mov    %r8d,%r11d
   14ac6:	c1 c6 10             	rol    $0x10,%esi
   14ac9:	44 31 c7             	xor    %r8d,%edi
   14acc:	41 c1 c3 10          	rol    $0x10,%r11d
   14ad0:	41 31 f1             	xor    %esi,%r9d
   14ad3:	89 fa                	mov    %edi,%edx
   14ad5:	c1 c7 10             	rol    $0x10,%edi
   14ad8:	44 31 d8             	xor    %r11d,%eax
   14adb:	0f c8                	bswap  %eax
   14add:	c1 c0 10             	rol    $0x10,%eax
   14ae0:	44 31 d0             	xor    %r10d,%eax
   14ae3:	31 f0                	xor    %esi,%eax
   14ae5:	44 89 ce             	mov    %r9d,%esi
   14ae8:	41 89 c7             	mov    %eax,%r15d
   14aeb:	c1 c6 10             	rol    $0x10,%esi
   14aee:	31 c7                	xor    %eax,%edi
   14af0:	31 c8                	xor    %ecx,%eax
   14af2:	41 c1 c7 10          	rol    $0x10,%r15d
   14af6:	0f ce                	bswap  %esi
   14af8:	c1 c6 10             	rol    $0x10,%esi
   14afb:	0f cf                	bswap  %edi
   14afd:	45 89 f8             	mov    %r15d,%r8d
   14b00:	c1 c7 10             	rol    $0x10,%edi
   14b03:	41 31 f2             	xor    %esi,%r10d
   14b06:	33 7c 24 40          	xor    0x40(%rsp),%edi
   14b0a:	44 33 54 24 48       	xor    0x48(%rsp),%r10d
   14b0f:	31 c2                	xor    %eax,%edx
   14b11:	44 31 f7             	xor    %r14d,%edi
   14b14:	41 0f c8             	bswap  %r8d
   14b17:	45 31 d7             	xor    %r10d,%r15d
   14b1a:	41 c1 c0 10          	rol    $0x10,%r8d
   14b1e:	89 54 24 64          	mov    %edx,0x64(%rsp)
   14b22:	4c 89 ea             	mov    %r13,%rdx
   14b25:	89 7c 24 60          	mov    %edi,0x60(%rsp)
   14b29:	45 31 c3             	xor    %r8d,%r11d
   14b2c:	44 89 7c 24 68       	mov    %r15d,0x68(%rsp)
   14b31:	44 33 5c 24 4c       	xor    0x4c(%rsp),%r11d
   14b36:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   14b3a:	45 31 d9             	xor    %r11d,%r9d
   14b3d:	44 89 4c 24 6c       	mov    %r9d,0x6c(%rsp)
   14b42:	83 f8 02             	cmp    $0x2,%eax
   14b45:	74 0c                	je     14b53 <mbedtls_aria_setkey_enc+0x313>
   14b47:	83 c0 01             	add    $0x1,%eax
   14b4a:	48 98                	cltq   
   14b4c:	48 c1 e0 04          	shl    $0x4,%rax
   14b50:	48 01 c2             	add    %rax,%rdx
   14b53:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   14b58:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   14b5d:	4c 89 e1             	mov    %r12,%rcx
   14b60:	45 31 f6             	xor    %r14d,%r14d
   14b63:	e8 e8 fa ff ff       	callq  14650 <aria_fo_xor>
   14b68:	4c 8d 6b 04          	lea    0x4(%rbx),%r13
   14b6c:	48 89 ee             	mov    %rbp,%rsi
   14b6f:	41 83 c6 01          	add    $0x1,%r14d
   14b73:	4c 89 ef             	mov    %r13,%rdi
   14b76:	b9 6d 00 00 00       	mov    $0x6d,%ecx
   14b7b:	44 89 f2             	mov    %r14d,%edx
   14b7e:	83 e2 03             	and    $0x3,%edx
   14b81:	48 c1 e2 04          	shl    $0x4,%rdx
   14b85:	48 01 ea             	add    %rbp,%rdx
   14b88:	e8 43 fa ff ff       	callq  145d0 <aria_rot128>
   14b8d:	49 8d 7d 40          	lea    0x40(%r13),%rdi
   14b91:	b9 61 00 00 00       	mov    $0x61,%ecx
   14b96:	e8 35 fa ff ff       	callq  145d0 <aria_rot128>
   14b9b:	49 8d bd 80 00 00 00 	lea    0x80(%r13),%rdi
   14ba2:	b9 3d 00 00 00       	mov    $0x3d,%ecx
   14ba7:	e8 24 fa ff ff       	callq  145d0 <aria_rot128>
   14bac:	49 8d bd c0 00 00 00 	lea    0xc0(%r13),%rdi
   14bb3:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   14bb8:	49 83 c5 10          	add    $0x10,%r13
   14bbc:	e8 0f fa ff ff       	callq  145d0 <aria_rot128>
   14bc1:	48 83 c6 10          	add    $0x10,%rsi
   14bc5:	41 83 fe 04          	cmp    $0x4,%r14d
   14bc9:	75 a4                	jne    14b6f <mbedtls_aria_setkey_enc+0x32f>
   14bcb:	48 8d bb 04 01 00 00 	lea    0x104(%rbx),%rdi
   14bd2:	b9 13 00 00 00       	mov    $0x13,%ecx
   14bd7:	4c 89 e2             	mov    %r12,%rdx
   14bda:	48 89 ee             	mov    %rbp,%rsi
   14bdd:	e8 ee f9 ff ff       	callq  145d0 <aria_rot128>
   14be2:	be 40 00 00 00       	mov    $0x40,%esi
   14be7:	48 89 ef             	mov    %rbp,%rdi
   14bea:	e8 31 06 ff ff       	callq  5220 <mbedtls_platform_zeroize>
   14bef:	31 c0                	xor    %eax,%eax
   14bf1:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
   14bf8:	00 
   14bf9:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   14c00:	00 00 
   14c02:	75 63                	jne    14c67 <mbedtls_aria_setkey_enc+0x427>
   14c04:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   14c0b:	5b                   	pop    %rbx
   14c0c:	5d                   	pop    %rbp
   14c0d:	41 5c                	pop    %r12
   14c0f:	41 5d                	pop    %r13
   14c11:	41 5e                	pop    %r14
   14c13:	41 5f                	pop    %r15
   14c15:	c3                   	retq   
   14c16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14c1d:	00 00 00 
   14c20:	88 03                	mov    %al,(%rbx)
   14c22:	4c 89 e1             	mov    %r12,%rcx
   14c25:	4c 89 c2             	mov    %r8,%rdx
   14c28:	48 89 ee             	mov    %rbp,%rsi
   14c2b:	4c 89 e7             	mov    %r12,%rdi
   14c2e:	e8 1d fa ff ff       	callq  14650 <aria_fo_xor>
   14c33:	41 83 fe 01          	cmp    $0x1,%r14d
   14c37:	77 17                	ja     14c50 <mbedtls_aria_setkey_enc+0x410>
   14c39:	41 8d 46 01          	lea    0x1(%r14),%eax
   14c3d:	4b 8d 4c 3d 10       	lea    0x10(%r13,%r15,1),%rcx
   14c42:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   14c46:	e9 1c fd ff ff       	jmpq   14967 <mbedtls_aria_setkey_enc+0x127>
   14c4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14c50:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   14c57:	00 
   14c58:	4c 89 e9             	mov    %r13,%rcx
   14c5b:	e9 07 fd ff ff       	jmpq   14967 <mbedtls_aria_setkey_enc+0x127>
   14c60:	b8 a4 ff ff ff       	mov    $0xffffffa4,%eax
   14c65:	eb 8a                	jmp    14bf1 <mbedtls_aria_setkey_enc+0x3b1>
   14c67:	e8 f4 e5 fe ff       	callq  3260 <__stack_chk_fail@plt>
   14c6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014c70 <mbedtls_aria_setkey_dec>:
   14c70:	f3 0f 1e fa          	endbr64 
   14c74:	41 55                	push   %r13
   14c76:	41 54                	push   %r12
   14c78:	55                   	push   %rbp
   14c79:	53                   	push   %rbx
   14c7a:	48 89 fb             	mov    %rdi,%rbx
   14c7d:	48 83 ec 08          	sub    $0x8,%rsp
   14c81:	e8 ba fb ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   14c86:	85 c0                	test   %eax,%eax
   14c88:	0f 85 12 01 00 00    	jne    14da0 <mbedtls_aria_setkey_dec+0x130>
   14c8e:	0f b6 2b             	movzbl (%rbx),%ebp
   14c91:	85 ed                	test   %ebp,%ebp
   14c93:	0f 84 07 01 00 00    	je     14da0 <mbedtls_aria_setkey_dec+0x130>
   14c99:	48 8d 14 eb          	lea    (%rbx,%rbp,8),%rdx
   14c9d:	4c 8d 4b 10          	lea    0x10(%rbx),%r9
   14ca1:	41 89 eb             	mov    %ebp,%r11d
   14ca4:	45 31 d2             	xor    %r10d,%r10d
   14ca7:	48 8d 7c 12 10       	lea    0x10(%rdx,%rdx,1),%rdi
   14cac:	0f 1f 40 00          	nopl   0x0(%rax)
   14cb0:	48 89 f9             	mov    %rdi,%rcx
   14cb3:	49 8d 51 f0          	lea    -0x10(%r9),%rdx
   14cb7:	4c 29 c9             	sub    %r9,%rcx
   14cba:	44 8b 41 04          	mov    0x4(%rcx),%r8d
   14cbe:	8b 72 04             	mov    0x4(%rdx),%esi
   14cc1:	48 83 c2 04          	add    $0x4,%rdx
   14cc5:	48 83 c1 04          	add    $0x4,%rcx
   14cc9:	44 89 02             	mov    %r8d,(%rdx)
   14ccc:	89 31                	mov    %esi,(%rcx)
   14cce:	4c 39 ca             	cmp    %r9,%rdx
   14cd1:	75 e7                	jne    14cba <mbedtls_aria_setkey_dec+0x4a>
   14cd3:	41 83 c2 01          	add    $0x1,%r10d
   14cd7:	41 83 eb 01          	sub    $0x1,%r11d
   14cdb:	4c 8d 4a 10          	lea    0x10(%rdx),%r9
   14cdf:	45 39 da             	cmp    %r11d,%r10d
   14ce2:	7c cc                	jl     14cb0 <mbedtls_aria_setkey_dec+0x40>
   14ce4:	83 fd 01             	cmp    $0x1,%ebp
   14ce7:	0f 8e b3 00 00 00    	jle    14da0 <mbedtls_aria_setkey_dec+0x130>
   14ced:	8d 55 fe             	lea    -0x2(%rbp),%edx
   14cf0:	4c 8d 43 14          	lea    0x14(%rbx),%r8
   14cf4:	48 c1 e2 04          	shl    $0x4,%rdx
   14cf8:	48 8d 7c 13 24       	lea    0x24(%rbx,%rdx,1),%rdi
   14cfd:	0f 1f 00             	nopl   (%rax)
   14d00:	45 8b 68 08          	mov    0x8(%r8),%r13d
   14d04:	45 8b 50 04          	mov    0x4(%r8),%r10d
   14d08:	49 83 c0 10          	add    $0x10,%r8
   14d0c:	41 8b 70 fc          	mov    -0x4(%r8),%esi
   14d10:	41 8b 68 f0          	mov    -0x10(%r8),%ebp
   14d14:	41 0f cd             	bswap  %r13d
   14d17:	45 89 eb             	mov    %r13d,%r11d
   14d1a:	44 89 d2             	mov    %r10d,%edx
   14d1d:	44 89 d3             	mov    %r10d,%ebx
   14d20:	c1 c6 10             	rol    $0x10,%esi
   14d23:	41 c1 c3 10          	rol    $0x10,%r11d
   14d27:	41 89 ec             	mov    %ebp,%r12d
   14d2a:	41 c1 c4 10          	rol    $0x10,%r12d
   14d2e:	89 f1                	mov    %esi,%ecx
   14d30:	44 31 da             	xor    %r11d,%edx
   14d33:	44 31 ee             	xor    %r13d,%esi
   14d36:	0f c9                	bswap  %ecx
   14d38:	0f ca                	bswap  %edx
   14d3a:	c1 c1 10             	rol    $0x10,%ecx
   14d3d:	c1 c2 10             	rol    $0x10,%edx
   14d40:	31 ca                	xor    %ecx,%edx
   14d42:	c1 c3 10             	rol    $0x10,%ebx
   14d45:	41 89 c9             	mov    %ecx,%r9d
   14d48:	44 31 e2             	xor    %r12d,%edx
   14d4b:	89 d9                	mov    %ebx,%ecx
   14d4d:	41 89 d2             	mov    %edx,%r10d
   14d50:	0f c9                	bswap  %ecx
   14d52:	c1 c1 10             	rol    $0x10,%ecx
   14d55:	41 31 f2             	xor    %esi,%r10d
   14d58:	c1 c6 10             	rol    $0x10,%esi
   14d5b:	44 31 e1             	xor    %r12d,%ecx
   14d5e:	31 d6                	xor    %edx,%esi
   14d60:	c1 c2 10             	rol    $0x10,%edx
   14d63:	44 31 d5             	xor    %r10d,%ebp
   14d66:	0f ce                	bswap  %esi
   14d68:	c1 c6 10             	rol    $0x10,%esi
   14d6b:	41 89 68 f4          	mov    %ebp,-0xc(%r8)
   14d6f:	31 de                	xor    %ebx,%esi
   14d71:	41 89 70 f0          	mov    %esi,-0x10(%r8)
   14d75:	89 d6                	mov    %edx,%esi
   14d77:	0f ce                	bswap  %esi
   14d79:	c1 c6 10             	rol    $0x10,%esi
   14d7c:	41 31 f3             	xor    %esi,%r11d
   14d7f:	41 31 cb             	xor    %ecx,%r11d
   14d82:	c1 c1 10             	rol    $0x10,%ecx
   14d85:	0f c9                	bswap  %ecx
   14d87:	c1 c1 10             	rol    $0x10,%ecx
   14d8a:	45 89 58 fc          	mov    %r11d,-0x4(%r8)
   14d8e:	44 31 c9             	xor    %r9d,%ecx
   14d91:	31 ca                	xor    %ecx,%edx
   14d93:	41 89 50 f8          	mov    %edx,-0x8(%r8)
   14d97:	49 39 f8             	cmp    %rdi,%r8
   14d9a:	0f 85 60 ff ff ff    	jne    14d00 <mbedtls_aria_setkey_dec+0x90>
   14da0:	48 83 c4 08          	add    $0x8,%rsp
   14da4:	5b                   	pop    %rbx
   14da5:	5d                   	pop    %rbp
   14da6:	41 5c                	pop    %r12
   14da8:	41 5d                	pop    %r13
   14daa:	c3                   	retq   
   14dab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000014db0 <mbedtls_aria_crypt_ecb>:
   14db0:	f3 0f 1e fa          	endbr64 
   14db4:	41 57                	push   %r15
   14db6:	48 89 f0             	mov    %rsi,%rax
   14db9:	4c 8d 4f 04          	lea    0x4(%rdi),%r9
   14dbd:	4c 8d 1d 7c 03 01 00 	lea    0x1037c(%rip),%r11        # 25140 <aria_sb1>
   14dc4:	41 56                	push   %r14
   14dc6:	4c 8d 15 73 02 01 00 	lea    0x10273(%rip),%r10        # 25040 <aria_sb2>
   14dcd:	41 55                	push   %r13
   14dcf:	41 54                	push   %r12
   14dd1:	4c 8d 25 68 01 01 00 	lea    0x10168(%rip),%r12        # 24f40 <aria_is1>
   14dd8:	55                   	push   %rbp
   14dd9:	53                   	push   %rbx
   14dda:	0f b6 1f             	movzbl (%rdi),%ebx
   14ddd:	8b 48 08             	mov    0x8(%rax),%ecx
   14de0:	8b 2e                	mov    (%rsi),%ebp
   14de2:	44 8b 40 0c          	mov    0xc(%rax),%r8d
   14de6:	8b 76 04             	mov    0x4(%rsi),%esi
   14de9:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
   14dee:	89 ca                	mov    %ecx,%edx
   14df0:	88 5c 24 ef          	mov    %bl,-0x11(%rsp)
   14df4:	89 5c 24 e8          	mov    %ebx,-0x18(%rsp)
   14df8:	48 8d 1d 41 00 01 00 	lea    0x10041(%rip),%rbx        # 24e40 <aria_is2>
   14dff:	48 89 7c 24 f0       	mov    %rdi,-0x10(%rsp)
   14e04:	c7 44 24 e0 00 00 00 	movl   $0x0,-0x20(%rsp)
   14e0b:	00 
   14e0c:	eb 77                	jmp    14e85 <mbedtls_aria_crypt_ecb+0xd5>
   14e0e:	66 90                	xchg   %ax,%ax
   14e10:	c1 c7 10             	rol    $0x10,%edi
   14e13:	0f cd                	bswap  %ebp
   14e15:	41 89 ee             	mov    %ebp,%r14d
   14e18:	44 89 f9             	mov    %r15d,%ecx
   14e1b:	41 c1 c6 10          	rol    $0x10,%r14d
   14e1f:	89 fa                	mov    %edi,%edx
   14e21:	89 f8                	mov    %edi,%eax
   14e23:	45 89 f8             	mov    %r15d,%r8d
   14e26:	44 31 f1             	xor    %r14d,%ecx
   14e29:	0f ca                	bswap  %edx
   14e2b:	c1 c2 10             	rol    $0x10,%edx
   14e2e:	31 e8                	xor    %ebp,%eax
   14e30:	41 89 d5             	mov    %edx,%r13d
   14e33:	0f c9                	bswap  %ecx
   14e35:	89 f2                	mov    %esi,%edx
   14e37:	c1 c1 10             	rol    $0x10,%ecx
   14e3a:	c1 c2 10             	rol    $0x10,%edx
   14e3d:	31 c6                	xor    %eax,%esi
   14e3f:	44 31 e9             	xor    %r13d,%ecx
   14e42:	c1 c0 10             	rol    $0x10,%eax
   14e45:	31 d1                	xor    %edx,%ecx
   14e47:	89 c5                	mov    %eax,%ebp
   14e49:	41 c1 c0 10          	rol    $0x10,%r8d
   14e4d:	31 cd                	xor    %ecx,%ebp
   14e4f:	31 ce                	xor    %ecx,%esi
   14e51:	c1 c1 10             	rol    $0x10,%ecx
   14e54:	44 89 c7             	mov    %r8d,%edi
   14e57:	0f cd                	bswap  %ebp
   14e59:	c1 c5 10             	rol    $0x10,%ebp
   14e5c:	0f cf                	bswap  %edi
   14e5e:	c1 c7 10             	rol    $0x10,%edi
   14e61:	44 31 c5             	xor    %r8d,%ebp
   14e64:	41 89 c8             	mov    %ecx,%r8d
   14e67:	31 d7                	xor    %edx,%edi
   14e69:	41 0f c8             	bswap  %r8d
   14e6c:	41 c1 c0 10          	rol    $0x10,%r8d
   14e70:	45 31 f0             	xor    %r14d,%r8d
   14e73:	41 31 f8             	xor    %edi,%r8d
   14e76:	c1 c7 10             	rol    $0x10,%edi
   14e79:	89 fa                	mov    %edi,%edx
   14e7b:	0f ca                	bswap  %edx
   14e7d:	c1 c2 10             	rol    $0x10,%edx
   14e80:	44 31 ea             	xor    %r13d,%edx
   14e83:	31 ca                	xor    %ecx,%edx
   14e85:	41 33 29             	xor    (%r9),%ebp
   14e88:	41 33 71 04          	xor    0x4(%r9),%esi
   14e8c:	89 e8                	mov    %ebp,%eax
   14e8e:	40 0f b6 cd          	movzbl %bpl,%ecx
   14e92:	45 33 41 0c          	xor    0xc(%r9),%r8d
   14e96:	41 33 51 08          	xor    0x8(%r9),%edx
   14e9a:	c1 e8 18             	shr    $0x18,%eax
   14e9d:	41 0f b6 3c 0b       	movzbl (%r11,%rcx,1),%edi
   14ea2:	89 e9                	mov    %ebp,%ecx
   14ea4:	c1 ed 10             	shr    $0x10,%ebp
   14ea7:	0f b6 04 03          	movzbl (%rbx,%rax,1),%eax
   14eab:	0f b6 cd             	movzbl %ch,%ecx
   14eae:	40 0f b6 ed          	movzbl %bpl,%ebp
   14eb2:	c1 e0 18             	shl    $0x18,%eax
   14eb5:	31 f8                	xor    %edi,%eax
   14eb7:	41 0f b6 3c 0a       	movzbl (%r10,%rcx,1),%edi
   14ebc:	c1 e7 08             	shl    $0x8,%edi
   14ebf:	31 f8                	xor    %edi,%eax
   14ec1:	41 0f b6 3c 2c       	movzbl (%r12,%rbp,1),%edi
   14ec6:	c1 e7 10             	shl    $0x10,%edi
   14ec9:	31 f8                	xor    %edi,%eax
   14ecb:	41 89 c7             	mov    %eax,%r15d
   14ece:	89 f0                	mov    %esi,%eax
   14ed0:	c1 e8 18             	shr    $0x18,%eax
   14ed3:	44 0f b6 34 03       	movzbl (%rbx,%rax,1),%r14d
   14ed8:	40 0f b6 c6          	movzbl %sil,%eax
   14edc:	41 0f b6 04 03       	movzbl (%r11,%rax,1),%eax
   14ee1:	41 c1 e6 18          	shl    $0x18,%r14d
   14ee5:	41 31 c6             	xor    %eax,%r14d
   14ee8:	89 f0                	mov    %esi,%eax
   14eea:	c1 ee 10             	shr    $0x10,%esi
   14eed:	0f b6 c4             	movzbl %ah,%eax
   14ef0:	40 0f b6 f6          	movzbl %sil,%esi
   14ef4:	41 0f b6 04 02       	movzbl (%r10,%rax,1),%eax
   14ef9:	c1 e0 08             	shl    $0x8,%eax
   14efc:	41 31 c6             	xor    %eax,%r14d
   14eff:	41 0f b6 04 34       	movzbl (%r12,%rsi,1),%eax
   14f04:	c1 e0 10             	shl    $0x10,%eax
   14f07:	41 31 c6             	xor    %eax,%r14d
   14f0a:	44 89 f0             	mov    %r14d,%eax
   14f0d:	c1 c0 10             	rol    $0x10,%eax
   14f10:	89 44 24 e4          	mov    %eax,-0x1c(%rsp)
   14f14:	44 89 c0             	mov    %r8d,%eax
   14f17:	c1 e8 18             	shr    $0x18,%eax
   14f1a:	0f b6 3c 03          	movzbl (%rbx,%rax,1),%edi
   14f1e:	41 0f b6 c0          	movzbl %r8b,%eax
   14f22:	41 0f b6 34 03       	movzbl (%r11,%rax,1),%esi
   14f27:	44 89 c0             	mov    %r8d,%eax
   14f2a:	41 c1 e8 10          	shr    $0x10,%r8d
   14f2e:	c1 e7 18             	shl    $0x18,%edi
   14f31:	0f b6 c4             	movzbl %ah,%eax
   14f34:	45 0f b6 c0          	movzbl %r8b,%r8d
   14f38:	31 f7                	xor    %esi,%edi
   14f3a:	41 0f b6 34 02       	movzbl (%r10,%rax,1),%esi
   14f3f:	89 d0                	mov    %edx,%eax
   14f41:	c1 e8 18             	shr    $0x18,%eax
   14f44:	c1 e6 08             	shl    $0x8,%esi
   14f47:	31 f7                	xor    %esi,%edi
   14f49:	43 0f b6 34 04       	movzbl (%r12,%r8,1),%esi
   14f4e:	44 8b 44 24 e4       	mov    -0x1c(%rsp),%r8d
   14f53:	c1 e6 10             	shl    $0x10,%esi
   14f56:	41 0f c8             	bswap  %r8d
   14f59:	31 f7                	xor    %esi,%edi
   14f5b:	89 fe                	mov    %edi,%esi
   14f5d:	0f b6 3c 03          	movzbl (%rbx,%rax,1),%edi
   14f61:	0f b6 c2             	movzbl %dl,%eax
   14f64:	41 0f b6 0c 03       	movzbl (%r11,%rax,1),%ecx
   14f69:	0f b6 c6             	movzbl %dh,%eax
   14f6c:	c1 c6 10             	rol    $0x10,%esi
   14f6f:	c1 e7 18             	shl    $0x18,%edi
   14f72:	89 f5                	mov    %esi,%ebp
   14f74:	31 cf                	xor    %ecx,%edi
   14f76:	41 0f b6 0c 02       	movzbl (%r10,%rax,1),%ecx
   14f7b:	c1 ea 10             	shr    $0x10,%edx
   14f7e:	0f cd                	bswap  %ebp
   14f80:	c1 c5 10             	rol    $0x10,%ebp
   14f83:	0f b6 d2             	movzbl %dl,%edx
   14f86:	41 c1 c0 10          	rol    $0x10,%r8d
   14f8a:	c1 e1 08             	shl    $0x8,%ecx
   14f8d:	31 cf                	xor    %ecx,%edi
   14f8f:	41 0f b6 0c 14       	movzbl (%r12,%rdx,1),%ecx
   14f94:	44 89 fa             	mov    %r15d,%edx
   14f97:	45 33 79 14          	xor    0x14(%r9),%r15d
   14f9b:	c1 c2 10             	rol    $0x10,%edx
   14f9e:	c1 e1 10             	shl    $0x10,%ecx
   14fa1:	41 31 d0             	xor    %edx,%r8d
   14fa4:	31 cf                	xor    %ecx,%edi
   14fa6:	0f cf                	bswap  %edi
   14fa8:	41 89 fd             	mov    %edi,%r13d
   14fab:	31 fe                	xor    %edi,%esi
   14fad:	41 c1 c5 10          	rol    $0x10,%r13d
   14fb1:	89 f1                	mov    %esi,%ecx
   14fb3:	89 f7                	mov    %esi,%edi
   14fb5:	45 31 ee             	xor    %r13d,%r14d
   14fb8:	c1 c1 10             	rol    $0x10,%ecx
   14fbb:	44 89 f0             	mov    %r14d,%eax
   14fbe:	0f c8                	bswap  %eax
   14fc0:	c1 c0 10             	rol    $0x10,%eax
   14fc3:	31 e8                	xor    %ebp,%eax
   14fc5:	31 d0                	xor    %edx,%eax
   14fc7:	44 89 c2             	mov    %r8d,%edx
   14fca:	41 89 c6             	mov    %eax,%r14d
   14fcd:	31 c1                	xor    %eax,%ecx
   14fcf:	c1 c2 10             	rol    $0x10,%edx
   14fd2:	44 31 f8             	xor    %r15d,%eax
   14fd5:	41 c1 c6 10          	rol    $0x10,%r14d
   14fd9:	0f c9                	bswap  %ecx
   14fdb:	0f ca                	bswap  %edx
   14fdd:	c1 c1 10             	rol    $0x10,%ecx
   14fe0:	c1 c2 10             	rol    $0x10,%edx
   14fe3:	41 33 49 10          	xor    0x10(%r9),%ecx
   14fe7:	44 89 f6             	mov    %r14d,%esi
   14fea:	33 4c 24 e4          	xor    -0x1c(%rsp),%ecx
   14fee:	31 d5                	xor    %edx,%ebp
   14ff0:	0f ce                	bswap  %esi
   14ff2:	41 33 69 18          	xor    0x18(%r9),%ebp
   14ff6:	c1 c6 10             	rol    $0x10,%esi
   14ff9:	89 ca                	mov    %ecx,%edx
   14ffb:	31 f8                	xor    %edi,%eax
   14ffd:	41 31 ee             	xor    %ebp,%r14d
   15000:	41 31 f5             	xor    %esi,%r13d
   15003:	45 33 69 1c          	xor    0x1c(%r9),%r13d
   15007:	c1 ea 18             	shr    $0x18,%edx
   1500a:	83 44 24 e0 02       	addl   $0x2,-0x20(%rsp)
   1500f:	41 0f b6 34 12       	movzbl (%r10,%rdx,1),%esi
   15014:	0f b6 d1             	movzbl %cl,%edx
   15017:	45 31 e8             	xor    %r13d,%r8d
   1501a:	44 8b 6c 24 e0       	mov    -0x20(%rsp),%r13d
   1501f:	41 0f b6 14 14       	movzbl (%r12,%rdx,1),%edx
   15024:	c1 e6 18             	shl    $0x18,%esi
   15027:	31 d6                	xor    %edx,%esi
   15029:	0f b6 d5             	movzbl %ch,%edx
   1502c:	c1 e9 10             	shr    $0x10,%ecx
   1502f:	0f b6 14 13          	movzbl (%rbx,%rdx,1),%edx
   15033:	0f b6 c9             	movzbl %cl,%ecx
   15036:	c1 e2 08             	shl    $0x8,%edx
   15039:	31 d6                	xor    %edx,%esi
   1503b:	41 0f b6 14 0b       	movzbl (%r11,%rcx,1),%edx
   15040:	c1 e2 10             	shl    $0x10,%edx
   15043:	31 d6                	xor    %edx,%esi
   15045:	89 c2                	mov    %eax,%edx
   15047:	c1 ea 18             	shr    $0x18,%edx
   1504a:	45 0f b6 3c 12       	movzbl (%r10,%rdx,1),%r15d
   1504f:	0f b6 d0             	movzbl %al,%edx
   15052:	41 0f b6 14 14       	movzbl (%r12,%rdx,1),%edx
   15057:	41 c1 e7 18          	shl    $0x18,%r15d
   1505b:	41 31 d7             	xor    %edx,%r15d
   1505e:	0f b6 d4             	movzbl %ah,%edx
   15061:	c1 e8 10             	shr    $0x10,%eax
   15064:	0f b6 0c 13          	movzbl (%rbx,%rdx,1),%ecx
   15068:	0f b6 c0             	movzbl %al,%eax
   1506b:	c1 e1 08             	shl    $0x8,%ecx
   1506e:	41 31 cf             	xor    %ecx,%r15d
   15071:	41 0f b6 0c 03       	movzbl (%r11,%rax,1),%ecx
   15076:	44 89 f0             	mov    %r14d,%eax
   15079:	c1 e8 18             	shr    $0x18,%eax
   1507c:	41 0f b6 2c 02       	movzbl (%r10,%rax,1),%ebp
   15081:	41 0f b6 c6          	movzbl %r14b,%eax
   15085:	c1 e1 10             	shl    $0x10,%ecx
   15088:	41 0f b6 04 04       	movzbl (%r12,%rax,1),%eax
   1508d:	41 31 cf             	xor    %ecx,%r15d
   15090:	c1 e5 18             	shl    $0x18,%ebp
   15093:	31 c5                	xor    %eax,%ebp
   15095:	44 89 f0             	mov    %r14d,%eax
   15098:	41 c1 ee 10          	shr    $0x10,%r14d
   1509c:	0f b6 c4             	movzbl %ah,%eax
   1509f:	45 0f b6 f6          	movzbl %r14b,%r14d
   150a3:	0f b6 04 03          	movzbl (%rbx,%rax,1),%eax
   150a7:	c1 e0 08             	shl    $0x8,%eax
   150aa:	31 c5                	xor    %eax,%ebp
   150ac:	43 0f b6 04 33       	movzbl (%r11,%r14,1),%eax
   150b1:	c1 e0 10             	shl    $0x10,%eax
   150b4:	31 c5                	xor    %eax,%ebp
   150b6:	44 89 c0             	mov    %r8d,%eax
   150b9:	c1 e8 18             	shr    $0x18,%eax
   150bc:	41 0f b6 3c 02       	movzbl (%r10,%rax,1),%edi
   150c1:	41 0f b6 c0          	movzbl %r8b,%eax
   150c5:	41 0f b6 04 04       	movzbl (%r12,%rax,1),%eax
   150ca:	c1 e7 18             	shl    $0x18,%edi
   150cd:	31 c7                	xor    %eax,%edi
   150cf:	44 89 c0             	mov    %r8d,%eax
   150d2:	0f b6 c4             	movzbl %ah,%eax
   150d5:	0f b6 04 03          	movzbl (%rbx,%rax,1),%eax
   150d9:	c1 e0 08             	shl    $0x8,%eax
   150dc:	31 c7                	xor    %eax,%edi
   150de:	41 c1 e8 10          	shr    $0x10,%r8d
   150e2:	49 83 c1 20          	add    $0x20,%r9
   150e6:	45 0f b6 c0          	movzbl %r8b,%r8d
   150ea:	43 0f b6 04 03       	movzbl (%r11,%r8,1),%eax
   150ef:	c1 e0 10             	shl    $0x10,%eax
   150f2:	31 c7                	xor    %eax,%edi
   150f4:	44 39 6c 24 e8       	cmp    %r13d,-0x18(%rsp)
   150f9:	0f 8f 11 fd ff ff    	jg     14e10 <mbedtls_aria_crypt_ecb+0x60>
   150ff:	8b 4c 24 e8          	mov    -0x18(%rsp),%ecx
   15103:	89 f8                	mov    %edi,%eax
   15105:	89 ea                	mov    %ebp,%edx
   15107:	83 e9 01             	sub    $0x1,%ecx
   1510a:	d1 e9                	shr    %ecx
   1510c:	80 7c 24 ef 00       	cmpb   $0x0,-0x11(%rsp)
   15111:	8d 7c 09 02          	lea    0x2(%rcx,%rcx,1),%edi
   15115:	b9 02 00 00 00       	mov    $0x2,%ecx
   1511a:	0f 44 f9             	cmove  %ecx,%edi
   1511d:	48 63 ff             	movslq %edi,%rdi
   15120:	48 c1 e7 04          	shl    $0x4,%rdi
   15124:	48 03 7c 24 f0       	add    -0x10(%rsp),%rdi
   15129:	33 47 10             	xor    0x10(%rdi),%eax
   1512c:	44 33 7f 08          	xor    0x8(%rdi),%r15d
   15130:	41 89 c5             	mov    %eax,%r13d
   15133:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   15138:	33 57 0c             	xor    0xc(%rdi),%edx
   1513b:	33 77 04             	xor    0x4(%rdi),%esi
   1513e:	89 30                	mov    %esi,(%rax)
   15140:	44 89 78 04          	mov    %r15d,0x4(%rax)
   15144:	89 50 08             	mov    %edx,0x8(%rax)
   15147:	44 89 68 0c          	mov    %r13d,0xc(%rax)
   1514b:	31 c0                	xor    %eax,%eax
   1514d:	5b                   	pop    %rbx
   1514e:	5d                   	pop    %rbp
   1514f:	41 5c                	pop    %r12
   15151:	41 5d                	pop    %r13
   15153:	41 5e                	pop    %r14
   15155:	41 5f                	pop    %r15
   15157:	c3                   	retq   
   15158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1515f:	00 

0000000000015160 <mbedtls_aria_crypt_cbc.part.0>:
   15160:	48 85 f6             	test   %rsi,%rsi
   15163:	74 6b                	je     151d0 <mbedtls_aria_crypt_cbc.part.0+0x70>
   15165:	41 56                	push   %r14
   15167:	4d 8d 34 30          	lea    (%r8,%rsi,1),%r14
   1516b:	41 55                	push   %r13
   1516d:	49 89 d5             	mov    %rdx,%r13
   15170:	41 54                	push   %r12
   15172:	49 89 fc             	mov    %rdi,%r12
   15175:	55                   	push   %rbp
   15176:	48 89 cd             	mov    %rcx,%rbp
   15179:	53                   	push   %rbx
   1517a:	4c 89 c3             	mov    %r8,%rbx
   1517d:	0f 1f 00             	nopl   (%rax)
   15180:	48 89 da             	mov    %rbx,%rdx
   15183:	48 89 ee             	mov    %rbp,%rsi
   15186:	4c 89 e7             	mov    %r12,%rdi
   15189:	f3 0f 6f 45 00       	movdqu 0x0(%rbp),%xmm0
   1518e:	e8 1d fc ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   15193:	31 c0                	xor    %eax,%eax
   15195:	0f 1f 00             	nopl   (%rax)
   15198:	41 8b 54 05 00       	mov    0x0(%r13,%rax,1),%edx
   1519d:	31 14 03             	xor    %edx,(%rbx,%rax,1)
   151a0:	48 83 c0 04          	add    $0x4,%rax
   151a4:	48 83 f8 10          	cmp    $0x10,%rax
   151a8:	75 ee                	jne    15198 <mbedtls_aria_crypt_cbc.part.0+0x38>
   151aa:	48 83 c3 10          	add    $0x10,%rbx
   151ae:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
   151b3:	48 83 c5 10          	add    $0x10,%rbp
   151b7:	4c 39 f3             	cmp    %r14,%rbx
   151ba:	75 c4                	jne    15180 <mbedtls_aria_crypt_cbc.part.0+0x20>
   151bc:	5b                   	pop    %rbx
   151bd:	31 c0                	xor    %eax,%eax
   151bf:	5d                   	pop    %rbp
   151c0:	41 5c                	pop    %r12
   151c2:	41 5d                	pop    %r13
   151c4:	41 5e                	pop    %r14
   151c6:	c3                   	retq   
   151c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   151ce:	00 00 
   151d0:	31 c0                	xor    %eax,%eax
   151d2:	c3                   	retq   
   151d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   151da:	00 00 00 00 
   151de:	66 90                	xchg   %ax,%ax

00000000000151e0 <mbedtls_aria_init>:
   151e0:	f3 0f 1e fa          	endbr64 
   151e4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   151eb:	48 89 f9             	mov    %rdi,%rcx
   151ee:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   151f2:	31 c0                	xor    %eax,%eax
   151f4:	48 c7 87 04 01 00 00 	movq   $0x0,0x104(%rdi)
   151fb:	00 00 00 00 
   151ff:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   15203:	48 29 f9             	sub    %rdi,%rcx
   15206:	81 c1 14 01 00 00    	add    $0x114,%ecx
   1520c:	c1 e9 03             	shr    $0x3,%ecx
   1520f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   15212:	c3                   	retq   
   15213:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1521a:	00 00 00 00 
   1521e:	66 90                	xchg   %ax,%ax

0000000000015220 <mbedtls_aria_free>:
   15220:	f3 0f 1e fa          	endbr64 
   15224:	48 85 ff             	test   %rdi,%rdi
   15227:	74 0f                	je     15238 <mbedtls_aria_free+0x18>
   15229:	be 14 01 00 00       	mov    $0x114,%esi
   1522e:	e9 ed ff fe ff       	jmpq   5220 <mbedtls_platform_zeroize>
   15233:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15238:	c3                   	retq   
   15239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000015240 <mbedtls_aria_crypt_cbc>:
   15240:	f3 0f 1e fa          	endbr64 
   15244:	f6 c2 0f             	test   $0xf,%dl
   15247:	0f 85 91 00 00 00    	jne    152de <mbedtls_aria_crypt_cbc+0x9e>
   1524d:	89 f0                	mov    %esi,%eax
   1524f:	41 56                	push   %r14
   15251:	48 89 d6             	mov    %rdx,%rsi
   15254:	49 89 fe             	mov    %rdi,%r14
   15257:	41 55                	push   %r13
   15259:	49 89 cd             	mov    %rcx,%r13
   1525c:	41 54                	push   %r12
   1525e:	4d 89 c4             	mov    %r8,%r12
   15261:	55                   	push   %rbp
   15262:	53                   	push   %rbx
   15263:	85 c0                	test   %eax,%eax
   15265:	75 19                	jne    15280 <mbedtls_aria_crypt_cbc+0x40>
   15267:	5b                   	pop    %rbx
   15268:	4c 89 e1             	mov    %r12,%rcx
   1526b:	5d                   	pop    %rbp
   1526c:	4c 89 ea             	mov    %r13,%rdx
   1526f:	41 5c                	pop    %r12
   15271:	4d 89 c8             	mov    %r9,%r8
   15274:	41 5d                	pop    %r13
   15276:	41 5e                	pop    %r14
   15278:	e9 e3 fe ff ff       	jmpq   15160 <mbedtls_aria_crypt_cbc.part.0>
   1527d:	0f 1f 00             	nopl   (%rax)
   15280:	4c 89 cb             	mov    %r9,%rbx
   15283:	49 8d 2c 11          	lea    (%r9,%rdx,1),%rbp
   15287:	48 85 d2             	test   %rdx,%rdx
   1528a:	74 47                	je     152d3 <mbedtls_aria_crypt_cbc+0x93>
   1528c:	0f 1f 40 00          	nopl   0x0(%rax)
   15290:	31 c0                	xor    %eax,%eax
   15292:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15298:	41 8b 14 04          	mov    (%r12,%rax,1),%edx
   1529c:	41 33 54 05 00       	xor    0x0(%r13,%rax,1),%edx
   152a1:	89 14 03             	mov    %edx,(%rbx,%rax,1)
   152a4:	48 83 c0 04          	add    $0x4,%rax
   152a8:	48 83 f8 10          	cmp    $0x10,%rax
   152ac:	75 ea                	jne    15298 <mbedtls_aria_crypt_cbc+0x58>
   152ae:	48 89 da             	mov    %rbx,%rdx
   152b1:	48 89 de             	mov    %rbx,%rsi
   152b4:	4c 89 f7             	mov    %r14,%rdi
   152b7:	48 83 c3 10          	add    $0x10,%rbx
   152bb:	e8 f0 fa ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   152c0:	f3 0f 6f 43 f0       	movdqu -0x10(%rbx),%xmm0
   152c5:	49 83 c4 10          	add    $0x10,%r12
   152c9:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
   152ce:	48 39 eb             	cmp    %rbp,%rbx
   152d1:	75 bd                	jne    15290 <mbedtls_aria_crypt_cbc+0x50>
   152d3:	5b                   	pop    %rbx
   152d4:	31 c0                	xor    %eax,%eax
   152d6:	5d                   	pop    %rbp
   152d7:	41 5c                	pop    %r12
   152d9:	41 5d                	pop    %r13
   152db:	41 5e                	pop    %r14
   152dd:	c3                   	retq   
   152de:	b8 a2 ff ff ff       	mov    $0xffffffa2,%eax
   152e3:	c3                   	retq   
   152e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   152eb:	00 00 00 00 
   152ef:	90                   	nop

00000000000152f0 <mbedtls_aria_crypt_cfb128>:
   152f0:	f3 0f 1e fa          	endbr64 
   152f4:	41 57                	push   %r15
   152f6:	41 56                	push   %r14
   152f8:	41 55                	push   %r13
   152fa:	41 54                	push   %r12
   152fc:	55                   	push   %rbp
   152fd:	53                   	push   %rbx
   152fe:	48 83 ec 08          	sub    $0x8,%rsp
   15302:	48 8b 19             	mov    (%rcx),%rbx
   15305:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
   1530a:	48 83 fb 0f          	cmp    $0xf,%rbx
   1530e:	0f 87 d9 00 00 00    	ja     153ed <mbedtls_aria_crypt_cfb128+0xfd>
   15314:	49 89 ff             	mov    %rdi,%r15
   15317:	49 89 cd             	mov    %rcx,%r13
   1531a:	4d 89 c6             	mov    %r8,%r14
   1531d:	4c 89 cd             	mov    %r9,%rbp
   15320:	85 f6                	test   %esi,%esi
   15322:	75 5c                	jne    15380 <mbedtls_aria_crypt_cfb128+0x90>
   15324:	48 85 d2             	test   %rdx,%rdx
   15327:	0f 84 ab 00 00 00    	je     153d8 <mbedtls_aria_crypt_cfb128+0xe8>
   1532d:	49 8d 0c 11          	lea    (%r9,%rdx,1),%rcx
   15331:	eb 2d                	jmp    15360 <mbedtls_aria_crypt_cfb128+0x70>
   15333:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15338:	49 8d 04 1e          	lea    (%r14,%rbx,1),%rax
   1533c:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   15340:	48 83 c5 01          	add    $0x1,%rbp
   15344:	49 83 c4 01          	add    $0x1,%r12
   15348:	0f b6 30             	movzbl (%rax),%esi
   1534b:	48 83 c3 01          	add    $0x1,%rbx
   1534f:	83 e3 0f             	and    $0xf,%ebx
   15352:	31 d6                	xor    %edx,%esi
   15354:	41 88 74 24 ff       	mov    %sil,-0x1(%r12)
   15359:	88 10                	mov    %dl,(%rax)
   1535b:	48 39 cd             	cmp    %rcx,%rbp
   1535e:	74 78                	je     153d8 <mbedtls_aria_crypt_cfb128+0xe8>
   15360:	48 85 db             	test   %rbx,%rbx
   15363:	75 d3                	jne    15338 <mbedtls_aria_crypt_cfb128+0x48>
   15365:	4c 89 f2             	mov    %r14,%rdx
   15368:	4c 89 f6             	mov    %r14,%rsi
   1536b:	4c 89 ff             	mov    %r15,%rdi
   1536e:	48 89 0c 24          	mov    %rcx,(%rsp)
   15372:	e8 39 fa ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   15377:	48 8b 0c 24          	mov    (%rsp),%rcx
   1537b:	eb bb                	jmp    15338 <mbedtls_aria_crypt_cfb128+0x48>
   1537d:	0f 1f 00             	nopl   (%rax)
   15380:	49 8d 0c 11          	lea    (%r9,%rdx,1),%rcx
   15384:	48 85 d2             	test   %rdx,%rdx
   15387:	75 2c                	jne    153b5 <mbedtls_aria_crypt_cfb128+0xc5>
   15389:	eb 4d                	jmp    153d8 <mbedtls_aria_crypt_cfb128+0xe8>
   1538b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15390:	49 8d 14 1e          	lea    (%r14,%rbx,1),%rdx
   15394:	48 83 c5 01          	add    $0x1,%rbp
   15398:	49 83 c4 01          	add    $0x1,%r12
   1539c:	48 83 c3 01          	add    $0x1,%rbx
   153a0:	0f b6 02             	movzbl (%rdx),%eax
   153a3:	32 45 ff             	xor    -0x1(%rbp),%al
   153a6:	83 e3 0f             	and    $0xf,%ebx
   153a9:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   153ae:	88 02                	mov    %al,(%rdx)
   153b0:	48 39 cd             	cmp    %rcx,%rbp
   153b3:	74 23                	je     153d8 <mbedtls_aria_crypt_cfb128+0xe8>
   153b5:	48 85 db             	test   %rbx,%rbx
   153b8:	75 d6                	jne    15390 <mbedtls_aria_crypt_cfb128+0xa0>
   153ba:	4c 89 f2             	mov    %r14,%rdx
   153bd:	4c 89 f6             	mov    %r14,%rsi
   153c0:	4c 89 ff             	mov    %r15,%rdi
   153c3:	48 89 0c 24          	mov    %rcx,(%rsp)
   153c7:	e8 e4 f9 ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   153cc:	48 8b 0c 24          	mov    (%rsp),%rcx
   153d0:	eb be                	jmp    15390 <mbedtls_aria_crypt_cfb128+0xa0>
   153d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   153d8:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   153dc:	31 c0                	xor    %eax,%eax
   153de:	48 83 c4 08          	add    $0x8,%rsp
   153e2:	5b                   	pop    %rbx
   153e3:	5d                   	pop    %rbp
   153e4:	41 5c                	pop    %r12
   153e6:	41 5d                	pop    %r13
   153e8:	41 5e                	pop    %r14
   153ea:	41 5f                	pop    %r15
   153ec:	c3                   	retq   
   153ed:	b8 a4 ff ff ff       	mov    $0xffffffa4,%eax
   153f2:	eb ea                	jmp    153de <mbedtls_aria_crypt_cfb128+0xee>
   153f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   153fb:	00 00 00 00 
   153ff:	90                   	nop

0000000000015400 <mbedtls_aria_crypt_ctr>:
   15400:	f3 0f 1e fa          	endbr64 
   15404:	41 57                	push   %r15
   15406:	41 56                	push   %r14
   15408:	41 55                	push   %r13
   1540a:	41 54                	push   %r12
   1540c:	55                   	push   %rbp
   1540d:	53                   	push   %rbx
   1540e:	48 83 ec 18          	sub    $0x18,%rsp
   15412:	48 8b 1a             	mov    (%rdx),%rbx
   15415:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1541a:	48 83 fb 0f          	cmp    $0xf,%rbx
   1541e:	0f 87 a0 00 00 00    	ja     154c4 <mbedtls_aria_crypt_ctr+0xc4>
   15424:	49 89 d7             	mov    %rdx,%r15
   15427:	48 85 f6             	test   %rsi,%rsi
   1542a:	0f 84 80 00 00 00    	je     154b0 <mbedtls_aria_crypt_ctr+0xb0>
   15430:	48 8d 41 0f          	lea    0xf(%rcx),%rax
   15434:	49 89 ce             	mov    %rcx,%r14
   15437:	4d 8d 2c 31          	lea    (%r9,%rsi,1),%r13
   1543b:	4c 89 cd             	mov    %r9,%rbp
   1543e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15443:	eb 24                	jmp    15469 <mbedtls_aria_crypt_ctr+0x69>
   15445:	0f 1f 00             	nopl   (%rax)
   15448:	48 83 c5 01          	add    $0x1,%rbp
   1544c:	41 0f b6 04 18       	movzbl (%r8,%rbx,1),%eax
   15451:	49 83 c4 01          	add    $0x1,%r12
   15455:	48 83 c3 01          	add    $0x1,%rbx
   15459:	32 45 ff             	xor    -0x1(%rbp),%al
   1545c:	83 e3 0f             	and    $0xf,%ebx
   1545f:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   15464:	49 39 ed             	cmp    %rbp,%r13
   15467:	74 47                	je     154b0 <mbedtls_aria_crypt_ctr+0xb0>
   15469:	48 85 db             	test   %rbx,%rbx
   1546c:	75 da                	jne    15448 <mbedtls_aria_crypt_ctr+0x48>
   1546e:	4c 89 c2             	mov    %r8,%rdx
   15471:	4c 89 f6             	mov    %r14,%rsi
   15474:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   15479:	48 89 3c 24          	mov    %rdi,(%rsp)
   1547d:	e8 2e f9 ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   15482:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15487:	48 8b 3c 24          	mov    (%rsp),%rdi
   1548b:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   15490:	eb 09                	jmp    1549b <mbedtls_aria_crypt_ctr+0x9b>
   15492:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15498:	48 89 c2             	mov    %rax,%rdx
   1549b:	80 02 01             	addb   $0x1,(%rdx)
   1549e:	75 a8                	jne    15448 <mbedtls_aria_crypt_ctr+0x48>
   154a0:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   154a4:	49 39 d6             	cmp    %rdx,%r14
   154a7:	75 ef                	jne    15498 <mbedtls_aria_crypt_ctr+0x98>
   154a9:	eb 9d                	jmp    15448 <mbedtls_aria_crypt_ctr+0x48>
   154ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   154b0:	49 89 1f             	mov    %rbx,(%r15)
   154b3:	31 c0                	xor    %eax,%eax
   154b5:	48 83 c4 18          	add    $0x18,%rsp
   154b9:	5b                   	pop    %rbx
   154ba:	5d                   	pop    %rbp
   154bb:	41 5c                	pop    %r12
   154bd:	41 5d                	pop    %r13
   154bf:	41 5e                	pop    %r14
   154c1:	41 5f                	pop    %r15
   154c3:	c3                   	retq   
   154c4:	b8 a4 ff ff ff       	mov    $0xffffffa4,%eax
   154c9:	eb ea                	jmp    154b5 <mbedtls_aria_crypt_ctr+0xb5>
   154cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000154d0 <mbedtls_aria_self_test>:
   154d0:	f3 0f 1e fa          	endbr64 
   154d4:	41 57                	push   %r15
   154d6:	b9 22 00 00 00       	mov    $0x22,%ecx
   154db:	41 89 ff             	mov    %edi,%r15d
   154de:	41 56                	push   %r14
   154e0:	41 55                	push   %r13
   154e2:	4c 8d 2d 37 f9 00 00 	lea    0xf937(%rip),%r13        # 24e20 <aria_test1_ecb_key>
   154e9:	41 54                	push   %r12
   154eb:	4c 8d 25 ee f8 00 00 	lea    0xf8ee(%rip),%r12        # 24de0 <aria_test1_ecb_ct>
   154f2:	55                   	push   %rbp
   154f3:	53                   	push   %rbx
   154f4:	bb 80 00 00 00       	mov    $0x80,%ebx
   154f9:	48 81 ec b8 01 00 00 	sub    $0x1b8,%rsp
   15500:	89 7c 24 10          	mov    %edi,0x10(%rsp)
   15504:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   15509:	4c 8d b4 24 50 01 00 	lea    0x150(%rsp),%r14
   15510:	00 
   15511:	48 89 ef             	mov    %rbp,%rdi
   15514:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1551b:	00 00 
   1551d:	48 89 84 24 a8 01 00 	mov    %rax,0x1a8(%rsp)
   15524:	00 
   15525:	31 c0                	xor    %eax,%eax
   15527:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1552a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   15530:	89 da                	mov    %ebx,%edx
   15532:	45 85 ff             	test   %r15d,%r15d
   15535:	0f 85 a5 01 00 00    	jne    156e0 <mbedtls_aria_self_test+0x210>
   1553b:	4c 89 ee             	mov    %r13,%rsi
   1553e:	48 89 ef             	mov    %rbp,%rdi
   15541:	e8 fa f2 ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   15546:	4c 89 f2             	mov    %r14,%rdx
   15549:	48 8d 35 c0 f8 00 00 	lea    0xf8c0(%rip),%rsi        # 24e10 <aria_test1_ecb_pt>
   15550:	48 89 ef             	mov    %rbp,%rdi
   15553:	e8 58 f8 ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   15558:	49 8b 06             	mov    (%r14),%rax
   1555b:	49 8b 56 08          	mov    0x8(%r14),%rdx
   1555f:	49 33 04 24          	xor    (%r12),%rax
   15563:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15568:	48 09 c2             	or     %rax,%rdx
   1556b:	74 4b                	je     155b8 <mbedtls_aria_self_test+0xe8>
   1556d:	0f 1f 00             	nopl   (%rax)
   15570:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
   15577:	00 
   15578:	be 14 01 00 00       	mov    $0x114,%esi
   1557d:	48 89 ef             	mov    %rbp,%rdi
   15580:	e8 9b fc fe ff       	callq  5220 <mbedtls_platform_zeroize>
   15585:	48 8b 84 24 a8 01 00 	mov    0x1a8(%rsp),%rax
   1558c:	00 
   1558d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   15594:	00 00 
   15596:	0f 85 13 0b 00 00    	jne    160af <mbedtls_aria_self_test+0xbdf>
   1559c:	8b 44 24 14          	mov    0x14(%rsp),%eax
   155a0:	48 81 c4 b8 01 00 00 	add    $0x1b8,%rsp
   155a7:	5b                   	pop    %rbx
   155a8:	5d                   	pop    %rbp
   155a9:	41 5c                	pop    %r12
   155ab:	41 5d                	pop    %r13
   155ad:	41 5e                	pop    %r14
   155af:	41 5f                	pop    %r15
   155b1:	c3                   	retq   
   155b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   155b8:	89 da                	mov    %ebx,%edx
   155ba:	4c 89 ee             	mov    %r13,%rsi
   155bd:	48 89 ef             	mov    %rbp,%rdi
   155c0:	e8 ab f6 ff ff       	callq  14c70 <mbedtls_aria_setkey_dec>
   155c5:	4c 89 f2             	mov    %r14,%rdx
   155c8:	4c 89 e6             	mov    %r12,%rsi
   155cb:	48 89 ef             	mov    %rbp,%rdi
   155ce:	e8 dd f7 ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   155d3:	49 8b 06             	mov    (%r14),%rax
   155d6:	49 8b 56 08          	mov    0x8(%r14),%rdx
   155da:	48 33 05 2f f8 00 00 	xor    0xf82f(%rip),%rax        # 24e10 <aria_test1_ecb_pt>
   155e1:	48 33 15 30 f8 00 00 	xor    0xf830(%rip),%rdx        # 24e18 <aria_test1_ecb_pt+0x8>
   155e8:	48 09 c2             	or     %rax,%rdx
   155eb:	75 83                	jne    15570 <mbedtls_aria_self_test+0xa0>
   155ed:	83 c3 40             	add    $0x40,%ebx
   155f0:	49 83 c4 10          	add    $0x10,%r12
   155f4:	81 fb 40 01 00 00    	cmp    $0x140,%ebx
   155fa:	0f 85 30 ff ff ff    	jne    15530 <mbedtls_aria_self_test+0x60>
   15600:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   15604:	85 db                	test   %ebx,%ebx
   15606:	0f 85 64 05 00 00    	jne    15b70 <mbedtls_aria_self_test+0x6a0>
   1560c:	4c 89 f0             	mov    %r14,%rax
   1560f:	4c 8d 2d ca f6 00 00 	lea    0xf6ca(%rip),%r13        # 24ce0 <aria_test2_cbc_ct>
   15616:	49 89 ee             	mov    %rbp,%r14
   15619:	41 bc 80 00 00 00    	mov    $0x80,%r12d
   1561f:	48 8d 9c 24 70 01 00 	lea    0x170(%rsp),%rbx
   15626:	00 
   15627:	4c 8d bc 24 60 01 00 	lea    0x160(%rsp),%r15
   1562e:	00 
   1562f:	48 89 c5             	mov    %rax,%rbp
   15632:	44 8b 5c 24 10       	mov    0x10(%rsp),%r11d
   15637:	44 89 e2             	mov    %r12d,%edx
   1563a:	45 85 db             	test   %r11d,%r11d
   1563d:	0f 85 6d 01 00 00    	jne    157b0 <mbedtls_aria_self_test+0x2e0>
   15643:	48 8d 35 76 f7 00 00 	lea    0xf776(%rip),%rsi        # 24dc0 <aria_test2_key>
   1564a:	4c 89 f7             	mov    %r14,%rdi
   1564d:	e8 ee f1 ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   15652:	49 89 d9             	mov    %rbx,%r9
   15655:	4c 89 f9             	mov    %r15,%rcx
   15658:	be 01 00 00 00       	mov    $0x1,%esi
   1565d:	66 0f 6f 05 db fb 00 	movdqa 0xfbdb(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   15664:	00 
   15665:	4c 8d 05 14 f7 00 00 	lea    0xf714(%rip),%r8        # 24d80 <aria_test2_pt>
   1566c:	4c 89 f7             	mov    %r14,%rdi
   1566f:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   15676:	d2 e1 f0 
   15679:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   15680:	00 
   15681:	ba 30 00 00 00       	mov    $0x30,%edx
   15686:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   1568d:	5a 69 78 
   15690:	0f 29 03             	movaps %xmm0,(%rbx)
   15693:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15697:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   1569b:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   156a2:	00 
   156a3:	e8 98 fb ff ff       	callq  15240 <mbedtls_aria_crypt_cbc>
   156a8:	48 8b 03             	mov    (%rbx),%rax
   156ab:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   156af:	49 33 45 00          	xor    0x0(%r13),%rax
   156b3:	49 33 55 08          	xor    0x8(%r13),%rdx
   156b7:	48 09 c2             	or     %rax,%rdx
   156ba:	75 1c                	jne    156d8 <mbedtls_aria_self_test+0x208>
   156bc:	48 8b 43 10          	mov    0x10(%rbx),%rax
   156c0:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   156c4:	49 33 45 10          	xor    0x10(%r13),%rax
   156c8:	49 33 55 18          	xor    0x18(%r13),%rdx
   156cc:	48 09 c2             	or     %rax,%rdx
   156cf:	0f 84 8b 01 00 00    	je     15860 <mbedtls_aria_self_test+0x390>
   156d5:	0f 1f 00             	nopl   (%rax)
   156d8:	4c 89 f5             	mov    %r14,%rbp
   156db:	e9 90 fe ff ff       	jmpq   15570 <mbedtls_aria_self_test+0xa0>
   156e0:	48 8d 35 f9 f3 00 00 	lea    0xf3f9(%rip),%rsi        # 24ae0 <aes_test_ecb_dec+0x40>
   156e7:	bf 01 00 00 00       	mov    $0x1,%edi
   156ec:	31 c0                	xor    %eax,%eax
   156ee:	e8 4d dc fe ff       	callq  3340 <__printf_chk@plt>
   156f3:	89 da                	mov    %ebx,%edx
   156f5:	4c 89 ee             	mov    %r13,%rsi
   156f8:	48 89 ef             	mov    %rbp,%rdi
   156fb:	e8 40 f1 ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   15700:	4c 89 f2             	mov    %r14,%rdx
   15703:	48 8d 35 06 f7 00 00 	lea    0xf706(%rip),%rsi        # 24e10 <aria_test1_ecb_pt>
   1570a:	48 89 ef             	mov    %rbp,%rdi
   1570d:	e8 9e f6 ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   15712:	49 8b 06             	mov    (%r14),%rax
   15715:	49 8b 56 08          	mov    0x8(%r14),%rdx
   15719:	49 33 04 24          	xor    (%r12),%rax
   1571d:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15722:	48 09 c2             	or     %rax,%rdx
   15725:	0f 85 1b 01 00 00    	jne    15846 <mbedtls_aria_self_test+0x376>
   1572b:	48 8d 3d b0 da 00 00 	lea    0xdab0(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15732:	e8 c9 da fe ff       	callq  3200 <puts@plt>
   15737:	89 da                	mov    %ebx,%edx
   15739:	48 8d 35 b6 f3 00 00 	lea    0xf3b6(%rip),%rsi        # 24af6 <aes_test_ecb_dec+0x56>
   15740:	31 c0                	xor    %eax,%eax
   15742:	bf 01 00 00 00       	mov    $0x1,%edi
   15747:	e8 f4 db fe ff       	callq  3340 <__printf_chk@plt>
   1574c:	89 da                	mov    %ebx,%edx
   1574e:	4c 89 ee             	mov    %r13,%rsi
   15751:	48 89 ef             	mov    %rbp,%rdi
   15754:	e8 17 f5 ff ff       	callq  14c70 <mbedtls_aria_setkey_dec>
   15759:	4c 89 f2             	mov    %r14,%rdx
   1575c:	4c 89 e6             	mov    %r12,%rsi
   1575f:	48 89 ef             	mov    %rbp,%rdi
   15762:	e8 49 f6 ff ff       	callq  14db0 <mbedtls_aria_crypt_ecb>
   15767:	49 8b 06             	mov    (%r14),%rax
   1576a:	49 8b 56 08          	mov    0x8(%r14),%rdx
   1576e:	48 33 05 9b f6 00 00 	xor    0xf69b(%rip),%rax        # 24e10 <aria_test1_ecb_pt>
   15775:	48 33 15 9c f6 00 00 	xor    0xf69c(%rip),%rdx        # 24e18 <aria_test1_ecb_pt+0x8>
   1577c:	48 09 c2             	or     %rax,%rdx
   1577f:	0f 85 c1 00 00 00    	jne    15846 <mbedtls_aria_self_test+0x376>
   15785:	48 8d 3d 56 da 00 00 	lea    0xda56(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1578c:	83 c3 40             	add    $0x40,%ebx
   1578f:	49 83 c4 10          	add    $0x10,%r12
   15793:	e8 68 da fe ff       	callq  3200 <puts@plt>
   15798:	81 fb 40 01 00 00    	cmp    $0x140,%ebx
   1579e:	0f 85 8c fd ff ff    	jne    15530 <mbedtls_aria_self_test+0x60>
   157a4:	e9 57 fe ff ff       	jmpq   15600 <mbedtls_aria_self_test+0x130>
   157a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   157b0:	48 8d 35 55 f3 00 00 	lea    0xf355(%rip),%rsi        # 24b0c <aes_test_ecb_dec+0x6c>
   157b7:	bf 01 00 00 00       	mov    $0x1,%edi
   157bc:	31 c0                	xor    %eax,%eax
   157be:	e8 7d db fe ff       	callq  3340 <__printf_chk@plt>
   157c3:	44 89 e2             	mov    %r12d,%edx
   157c6:	48 8d 35 f3 f5 00 00 	lea    0xf5f3(%rip),%rsi        # 24dc0 <aria_test2_key>
   157cd:	4c 89 f7             	mov    %r14,%rdi
   157d0:	e8 6b f0 ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   157d5:	49 89 d9             	mov    %rbx,%r9
   157d8:	4c 89 f9             	mov    %r15,%rcx
   157db:	be 01 00 00 00       	mov    $0x1,%esi
   157e0:	66 0f 6f 05 58 fa 00 	movdqa 0xfa58(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   157e7:	00 
   157e8:	4c 8d 05 91 f5 00 00 	lea    0xf591(%rip),%r8        # 24d80 <aria_test2_pt>
   157ef:	4c 89 f7             	mov    %r14,%rdi
   157f2:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   157f9:	d2 e1 f0 
   157fc:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   15803:	00 
   15804:	ba 30 00 00 00       	mov    $0x30,%edx
   15809:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   15810:	5a 69 78 
   15813:	0f 29 03             	movaps %xmm0,(%rbx)
   15816:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   1581a:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   1581e:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   15825:	00 
   15826:	e8 15 fa ff ff       	callq  15240 <mbedtls_aria_crypt_cbc>
   1582b:	48 8b 03             	mov    (%rbx),%rax
   1582e:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15832:	49 33 45 00          	xor    0x0(%r13),%rax
   15836:	49 33 55 08          	xor    0x8(%r13),%rdx
   1583a:	48 09 c2             	or     %rax,%rdx
   1583d:	0f 84 fd 01 00 00    	je     15a40 <mbedtls_aria_self_test+0x570>
   15843:	4c 89 f5             	mov    %r14,%rbp
   15846:	48 8d 3d 70 e2 00 00 	lea    0xe270(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   1584d:	e8 ae d9 fe ff       	callq  3200 <puts@plt>
   15852:	e9 19 fd ff ff       	jmpq   15570 <mbedtls_aria_self_test+0xa0>
   15857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1585e:	00 00 
   15860:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15864:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15868:	49 33 45 20          	xor    0x20(%r13),%rax
   1586c:	49 33 55 28          	xor    0x28(%r13),%rdx
   15870:	48 09 c2             	or     %rax,%rdx
   15873:	0f 85 5f fe ff ff    	jne    156d8 <mbedtls_aria_self_test+0x208>
   15879:	44 89 e2             	mov    %r12d,%edx
   1587c:	48 8d 35 3d f5 00 00 	lea    0xf53d(%rip),%rsi        # 24dc0 <aria_test2_key>
   15883:	4c 89 f7             	mov    %r14,%rdi
   15886:	e8 e5 f3 ff ff       	callq  14c70 <mbedtls_aria_setkey_dec>
   1588b:	49 89 d8             	mov    %rbx,%r8
   1588e:	4c 89 e9             	mov    %r13,%rcx
   15891:	be 30 00 00 00       	mov    $0x30,%esi
   15896:	66 0f 6f 05 b2 f9 00 	movdqa 0xf9b2(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   1589d:	00 
   1589e:	4c 89 f7             	mov    %r14,%rdi
   158a1:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   158a8:	d2 e1 f0 
   158ab:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   158b2:	5a 69 78 
   158b5:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   158bc:	00 
   158bd:	4c 89 fa             	mov    %r15,%rdx
   158c0:	0f 29 03             	movaps %xmm0,(%rbx)
   158c3:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   158c7:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   158cb:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   158d2:	00 
   158d3:	e8 88 f8 ff ff       	callq  15160 <mbedtls_aria_crypt_cbc.part.0>
   158d8:	48 8d 05 a1 f4 00 00 	lea    0xf4a1(%rip),%rax        # 24d80 <aria_test2_pt>
   158df:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   158e3:	48 33 15 9e f4 00 00 	xor    0xf49e(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   158ea:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   158ef:	48 8b 03             	mov    (%rbx),%rax
   158f2:	48 33 05 87 f4 00 00 	xor    0xf487(%rip),%rax        # 24d80 <aria_test2_pt>
   158f9:	48 09 c2             	or     %rax,%rdx
   158fc:	0f 85 d6 fd ff ff    	jne    156d8 <mbedtls_aria_self_test+0x208>
   15902:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15906:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1590a:	48 33 05 7f f4 00 00 	xor    0xf47f(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   15911:	48 33 15 80 f4 00 00 	xor    0xf480(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   15918:	48 09 c2             	or     %rax,%rdx
   1591b:	0f 85 b7 fd ff ff    	jne    156d8 <mbedtls_aria_self_test+0x208>
   15921:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15925:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15929:	48 33 05 70 f4 00 00 	xor    0xf470(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   15930:	48 33 15 71 f4 00 00 	xor    0xf471(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   15937:	48 09 c2             	or     %rax,%rdx
   1593a:	0f 85 98 fd ff ff    	jne    156d8 <mbedtls_aria_self_test+0x208>
   15940:	41 83 c4 40          	add    $0x40,%r12d
   15944:	49 83 c5 30          	add    $0x30,%r13
   15948:	41 81 fc 40 01 00 00 	cmp    $0x140,%r12d
   1594f:	0f 85 dd fc ff ff    	jne    15632 <mbedtls_aria_self_test+0x162>
   15955:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   1595a:	48 89 e8             	mov    %rbp,%rax
   1595d:	4c 89 f5             	mov    %r14,%rbp
   15960:	49 89 c6             	mov    %rax,%r14
   15963:	45 85 c9             	test   %r9d,%r9d
   15966:	0f 85 14 07 00 00    	jne    16080 <mbedtls_aria_self_test+0xbb0>
   1596c:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   15971:	41 bd 80 00 00 00    	mov    $0x80,%r13d
   15977:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   1597c:	4c 8d 25 bd f2 00 00 	lea    0xf2bd(%rip),%r12        # 24c40 <aria_test2_cfb_ct>
   15983:	48 89 04 24          	mov    %rax,(%rsp)
   15987:	45 89 ee             	mov    %r13d,%r14d
   1598a:	49 89 c5             	mov    %rax,%r13
   1598d:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
   15992:	45 85 c0             	test   %r8d,%r8d
   15995:	0f 85 15 05 00 00    	jne    15eb0 <mbedtls_aria_self_test+0x9e0>
   1599b:	44 89 f2             	mov    %r14d,%edx
   1599e:	48 8d 35 1b f4 00 00 	lea    0xf41b(%rip),%rsi        # 24dc0 <aria_test2_key>
   159a5:	48 89 ef             	mov    %rbp,%rdi
   159a8:	e8 93 ee ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   159ad:	48 83 ec 08          	sub    $0x8,%rsp
   159b1:	48 89 ef             	mov    %rbp,%rdi
   159b4:	4d 89 f8             	mov    %r15,%r8
   159b7:	66 0f 6f 05 81 f8 00 	movdqa 0xf881(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   159be:	00 
   159bf:	be 01 00 00 00       	mov    $0x1,%esi
   159c4:	4c 89 e9             	mov    %r13,%rcx
   159c7:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   159ce:	5a 69 78 
   159d1:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   159d8:	00 
   159d9:	4c 8d 0d a0 f3 00 00 	lea    0xf3a0(%rip),%r9        # 24d80 <aria_test2_pt>
   159e0:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   159e7:	d2 e1 f0 
   159ea:	48 89 94 24 70 01 00 	mov    %rdx,0x170(%rsp)
   159f1:	00 
   159f2:	ba 30 00 00 00       	mov    $0x30,%edx
   159f7:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   159fe:	00 00 
   15a00:	0f 29 03             	movaps %xmm0,(%rbx)
   15a03:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15a07:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15a0b:	53                   	push   %rbx
   15a0c:	e8 df f8 ff ff       	callq  152f0 <mbedtls_aria_crypt_cfb128>
   15a11:	48 8b 03             	mov    (%rbx),%rax
   15a14:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15a18:	49 33 04 24          	xor    (%r12),%rax
   15a1c:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15a21:	48 09 c2             	or     %rax,%rdx
   15a24:	5e                   	pop    %rsi
   15a25:	5f                   	pop    %rdi
   15a26:	0f 84 54 01 00 00    	je     15b80 <mbedtls_aria_self_test+0x6b0>
   15a2c:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
   15a31:	45 85 d2             	test   %r10d,%r10d
   15a34:	0f 84 36 fb ff ff    	je     15570 <mbedtls_aria_self_test+0xa0>
   15a3a:	e9 07 fe ff ff       	jmpq   15846 <mbedtls_aria_self_test+0x376>
   15a3f:	90                   	nop
   15a40:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15a44:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15a48:	49 33 45 10          	xor    0x10(%r13),%rax
   15a4c:	49 33 55 18          	xor    0x18(%r13),%rdx
   15a50:	48 09 c2             	or     %rax,%rdx
   15a53:	0f 85 ea fd ff ff    	jne    15843 <mbedtls_aria_self_test+0x373>
   15a59:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15a5d:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15a61:	49 33 45 20          	xor    0x20(%r13),%rax
   15a65:	49 33 55 28          	xor    0x28(%r13),%rdx
   15a69:	48 09 c2             	or     %rax,%rdx
   15a6c:	0f 85 d1 fd ff ff    	jne    15843 <mbedtls_aria_self_test+0x373>
   15a72:	48 8d 3d 69 d7 00 00 	lea    0xd769(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15a79:	e8 82 d7 fe ff       	callq  3200 <puts@plt>
   15a7e:	44 89 e2             	mov    %r12d,%edx
   15a81:	bf 01 00 00 00       	mov    $0x1,%edi
   15a86:	31 c0                	xor    %eax,%eax
   15a88:	48 8d 35 93 f0 00 00 	lea    0xf093(%rip),%rsi        # 24b22 <aes_test_ecb_dec+0x82>
   15a8f:	e8 ac d8 fe ff       	callq  3340 <__printf_chk@plt>
   15a94:	44 89 e2             	mov    %r12d,%edx
   15a97:	48 8d 35 22 f3 00 00 	lea    0xf322(%rip),%rsi        # 24dc0 <aria_test2_key>
   15a9e:	4c 89 f7             	mov    %r14,%rdi
   15aa1:	e8 ca f1 ff ff       	callq  14c70 <mbedtls_aria_setkey_dec>
   15aa6:	49 89 d8             	mov    %rbx,%r8
   15aa9:	4c 89 e9             	mov    %r13,%rcx
   15aac:	be 30 00 00 00       	mov    $0x30,%esi
   15ab1:	66 0f 6f 05 97 f7 00 	movdqa 0xf797(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   15ab8:	00 
   15ab9:	4c 89 f7             	mov    %r14,%rdi
   15abc:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   15ac3:	d2 e1 f0 
   15ac6:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   15acd:	5a 69 78 
   15ad0:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   15ad7:	00 
   15ad8:	4c 89 fa             	mov    %r15,%rdx
   15adb:	0f 29 03             	movaps %xmm0,(%rbx)
   15ade:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15ae2:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15ae6:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   15aed:	00 
   15aee:	e8 6d f6 ff ff       	callq  15160 <mbedtls_aria_crypt_cbc.part.0>
   15af3:	48 8d 05 86 f2 00 00 	lea    0xf286(%rip),%rax        # 24d80 <aria_test2_pt>
   15afa:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15afe:	48 33 15 83 f2 00 00 	xor    0xf283(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   15b05:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   15b0a:	48 8b 03             	mov    (%rbx),%rax
   15b0d:	48 33 05 6c f2 00 00 	xor    0xf26c(%rip),%rax        # 24d80 <aria_test2_pt>
   15b14:	48 09 c2             	or     %rax,%rdx
   15b17:	0f 85 26 fd ff ff    	jne    15843 <mbedtls_aria_self_test+0x373>
   15b1d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15b21:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15b25:	48 33 05 64 f2 00 00 	xor    0xf264(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   15b2c:	48 33 15 65 f2 00 00 	xor    0xf265(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   15b33:	48 09 c2             	or     %rax,%rdx
   15b36:	0f 85 07 fd ff ff    	jne    15843 <mbedtls_aria_self_test+0x373>
   15b3c:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15b40:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15b44:	48 33 05 55 f2 00 00 	xor    0xf255(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   15b4b:	48 33 15 56 f2 00 00 	xor    0xf256(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   15b52:	48 09 c2             	or     %rax,%rdx
   15b55:	0f 85 e8 fc ff ff    	jne    15843 <mbedtls_aria_self_test+0x373>
   15b5b:	48 8d 3d 80 d6 00 00 	lea    0xd680(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15b62:	e8 99 d6 fe ff       	callq  3200 <puts@plt>
   15b67:	e9 d4 fd ff ff       	jmpq   15940 <mbedtls_aria_self_test+0x470>
   15b6c:	0f 1f 40 00          	nopl   0x0(%rax)
   15b70:	bf 0a 00 00 00       	mov    $0xa,%edi
   15b75:	e8 76 d6 fe ff       	callq  31f0 <putchar@plt>
   15b7a:	e9 8d fa ff ff       	jmpq   1560c <mbedtls_aria_self_test+0x13c>
   15b7f:	90                   	nop
   15b80:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15b84:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15b88:	49 33 44 24 10       	xor    0x10(%r12),%rax
   15b8d:	49 33 54 24 18       	xor    0x18(%r12),%rdx
   15b92:	48 09 c2             	or     %rax,%rdx
   15b95:	0f 85 91 fe ff ff    	jne    15a2c <mbedtls_aria_self_test+0x55c>
   15b9b:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15b9f:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15ba3:	49 33 44 24 20       	xor    0x20(%r12),%rax
   15ba8:	49 33 54 24 28       	xor    0x28(%r12),%rdx
   15bad:	48 09 c2             	or     %rax,%rdx
   15bb0:	0f 85 76 fe ff ff    	jne    15a2c <mbedtls_aria_self_test+0x55c>
   15bb6:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   15bba:	85 c9                	test   %ecx,%ecx
   15bbc:	74 22                	je     15be0 <mbedtls_aria_self_test+0x710>
   15bbe:	48 8d 3d 1d d6 00 00 	lea    0xd61d(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15bc5:	e8 36 d6 fe ff       	callq  3200 <puts@plt>
   15bca:	44 89 f2             	mov    %r14d,%edx
   15bcd:	bf 01 00 00 00       	mov    $0x1,%edi
   15bd2:	31 c0                	xor    %eax,%eax
   15bd4:	48 8d 35 73 ef 00 00 	lea    0xef73(%rip),%rsi        # 24b4e <aes_test_ecb_dec+0xae>
   15bdb:	e8 60 d7 fe ff       	callq  3340 <__printf_chk@plt>
   15be0:	44 89 f2             	mov    %r14d,%edx
   15be3:	48 8d 35 d6 f1 00 00 	lea    0xf1d6(%rip),%rsi        # 24dc0 <aria_test2_key>
   15bea:	48 89 ef             	mov    %rbp,%rdi
   15bed:	e8 4e ec ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   15bf2:	48 83 ec 08          	sub    $0x8,%rsp
   15bf6:	4c 89 e9             	mov    %r13,%rcx
   15bf9:	31 f6                	xor    %esi,%esi
   15bfb:	66 0f 6f 05 4d f6 00 	movdqa 0xf64d(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   15c02:	00 
   15c03:	4d 89 e1             	mov    %r12,%r9
   15c06:	4d 89 f8             	mov    %r15,%r8
   15c09:	48 b8 0f 1e 2d 3c 4b 	movabs $0x78695a4b3c2d1e0f,%rax
   15c10:	5a 69 78 
   15c13:	48 ba 87 96 a5 b4 c3 	movabs $0xf0e1d2c3b4a59687,%rdx
   15c1a:	d2 e1 f0 
   15c1d:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   15c24:	00 
   15c25:	48 89 ef             	mov    %rbp,%rdi
   15c28:	48 89 94 24 70 01 00 	mov    %rdx,0x170(%rsp)
   15c2f:	00 
   15c30:	ba 30 00 00 00       	mov    $0x30,%edx
   15c35:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15c3c:	00 00 
   15c3e:	0f 29 03             	movaps %xmm0,(%rbx)
   15c41:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15c45:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15c49:	53                   	push   %rbx
   15c4a:	e8 a1 f6 ff ff       	callq  152f0 <mbedtls_aria_crypt_cfb128>
   15c4f:	58                   	pop    %rax
   15c50:	5a                   	pop    %rdx
   15c51:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15c56:	48 8b 03             	mov    (%rbx),%rax
   15c59:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15c5d:	48 33 15 24 f1 00 00 	xor    0xf124(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   15c64:	48 33 01             	xor    (%rcx),%rax
   15c67:	48 09 c2             	or     %rax,%rdx
   15c6a:	0f 85 bc fd ff ff    	jne    15a2c <mbedtls_aria_self_test+0x55c>
   15c70:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15c74:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15c78:	48 33 05 11 f1 00 00 	xor    0xf111(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   15c7f:	48 33 15 12 f1 00 00 	xor    0xf112(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   15c86:	48 09 c2             	or     %rax,%rdx
   15c89:	0f 85 9d fd ff ff    	jne    15a2c <mbedtls_aria_self_test+0x55c>
   15c8f:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15c93:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15c97:	48 33 05 02 f1 00 00 	xor    0xf102(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   15c9e:	48 33 15 03 f1 00 00 	xor    0xf103(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   15ca5:	48 09 c2             	or     %rax,%rdx
   15ca8:	0f 85 7e fd ff ff    	jne    15a2c <mbedtls_aria_self_test+0x55c>
   15cae:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15cb2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   15cb9:	00 
   15cba:	85 c0                	test   %eax,%eax
   15cbc:	74 0c                	je     15cca <mbedtls_aria_self_test+0x7fa>
   15cbe:	48 8d 3d 1d d5 00 00 	lea    0xd51d(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15cc5:	e8 36 d5 fe ff       	callq  3200 <puts@plt>
   15cca:	41 83 c6 40          	add    $0x40,%r14d
   15cce:	49 83 c4 30          	add    $0x30,%r12
   15cd2:	41 81 fe 40 01 00 00 	cmp    $0x140,%r14d
   15cd9:	0f 85 ae fc ff ff    	jne    1598d <mbedtls_aria_self_test+0x4bd>
   15cdf:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15ce3:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15ce8:	85 c0                	test   %eax,%eax
   15cea:	0f 85 a0 03 00 00    	jne    16090 <mbedtls_aria_self_test+0xbc0>
   15cf0:	41 ba 80 00 00 00    	mov    $0x80,%r10d
   15cf6:	49 89 ed             	mov    %rbp,%r13
   15cf9:	4c 8d 25 a0 ee 00 00 	lea    0xeea0(%rip),%r12        # 24ba0 <aria_test2_ctr_ct>
   15d00:	44 89 d5             	mov    %r10d,%ebp
   15d03:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15d07:	89 ea                	mov    %ebp,%edx
   15d09:	85 c0                	test   %eax,%eax
   15d0b:	0f 85 bf 01 00 00    	jne    15ed0 <mbedtls_aria_self_test+0xa00>
   15d11:	48 8d 35 a8 f0 00 00 	lea    0xf0a8(%rip),%rsi        # 24dc0 <aria_test2_key>
   15d18:	4c 89 ef             	mov    %r13,%rdi
   15d1b:	e8 20 eb ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   15d20:	48 83 ec 08          	sub    $0x8,%rsp
   15d24:	66 0f ef c9          	pxor   %xmm1,%xmm1
   15d28:	4c 89 f9             	mov    %r15,%rcx
   15d2b:	41 0f 29 0f          	movaps %xmm1,(%r15)
   15d2f:	be 30 00 00 00       	mov    $0x30,%esi
   15d34:	4c 89 ef             	mov    %r13,%rdi
   15d37:	4d 89 f0             	mov    %r14,%r8
   15d3a:	66 0f 6f 05 fe f4 00 	movdqa 0xf4fe(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   15d41:	00 
   15d42:	4c 8d 0d 37 f0 00 00 	lea    0xf037(%rip),%r9        # 24d80 <aria_test2_pt>
   15d49:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15d50:	00 00 
   15d52:	0f 29 03             	movaps %xmm0,(%rbx)
   15d55:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15d59:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15d5d:	53                   	push   %rbx
   15d5e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15d63:	e8 98 f6 ff ff       	callq  15400 <mbedtls_aria_crypt_ctr>
   15d68:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15d6c:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15d71:	48 8b 03             	mov    (%rbx),%rax
   15d74:	48 89 d1             	mov    %rdx,%rcx
   15d77:	49 33 04 24          	xor    (%r12),%rax
   15d7b:	48 09 c1             	or     %rax,%rcx
   15d7e:	5e                   	pop    %rsi
   15d7f:	5f                   	pop    %rdi
   15d80:	0f 85 1a 01 00 00    	jne    15ea0 <mbedtls_aria_self_test+0x9d0>
   15d86:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15d8a:	49 33 54 24 18       	xor    0x18(%r12),%rdx
   15d8f:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15d93:	48 89 d1             	mov    %rdx,%rcx
   15d96:	49 33 44 24 10       	xor    0x10(%r12),%rax
   15d9b:	48 09 c1             	or     %rax,%rcx
   15d9e:	0f 85 fc 00 00 00    	jne    15ea0 <mbedtls_aria_self_test+0x9d0>
   15da4:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15da8:	49 33 54 24 28       	xor    0x28(%r12),%rdx
   15dad:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15db1:	48 89 d1             	mov    %rdx,%rcx
   15db4:	49 33 44 24 20       	xor    0x20(%r12),%rax
   15db9:	48 09 c1             	or     %rax,%rcx
   15dbc:	0f 85 de 00 00 00    	jne    15ea0 <mbedtls_aria_self_test+0x9d0>
   15dc2:	89 ea                	mov    %ebp,%edx
   15dc4:	48 8d 35 f5 ef 00 00 	lea    0xeff5(%rip),%rsi        # 24dc0 <aria_test2_key>
   15dcb:	4c 89 ef             	mov    %r13,%rdi
   15dce:	e8 6d ea ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   15dd3:	48 83 ec 08          	sub    $0x8,%rsp
   15dd7:	66 0f ef c9          	pxor   %xmm1,%xmm1
   15ddb:	4c 89 f9             	mov    %r15,%rcx
   15dde:	41 0f 29 0f          	movaps %xmm1,(%r15)
   15de2:	4d 89 e1             	mov    %r12,%r9
   15de5:	4d 89 f0             	mov    %r14,%r8
   15de8:	be 30 00 00 00       	mov    $0x30,%esi
   15ded:	66 0f 6f 05 5b f4 00 	movdqa 0xf45b(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   15df4:	00 
   15df5:	4c 89 ef             	mov    %r13,%rdi
   15df8:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15dff:	00 00 
   15e01:	0f 29 03             	movaps %xmm0,(%rbx)
   15e04:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15e08:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15e0c:	53                   	push   %rbx
   15e0d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15e12:	e8 e9 f5 ff ff       	callq  15400 <mbedtls_aria_crypt_ctr>
   15e17:	5a                   	pop    %rdx
   15e18:	59                   	pop    %rcx
   15e19:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15e1e:	48 8b 03             	mov    (%rbx),%rax
   15e21:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15e25:	48 33 15 5c ef 00 00 	xor    0xef5c(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   15e2c:	48 33 01             	xor    (%rcx),%rax
   15e2f:	48 09 c2             	or     %rax,%rdx
   15e32:	75 6c                	jne    15ea0 <mbedtls_aria_self_test+0x9d0>
   15e34:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15e38:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15e3c:	48 33 05 4d ef 00 00 	xor    0xef4d(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   15e43:	48 33 15 4e ef 00 00 	xor    0xef4e(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   15e4a:	48 09 c2             	or     %rax,%rdx
   15e4d:	75 51                	jne    15ea0 <mbedtls_aria_self_test+0x9d0>
   15e4f:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15e53:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15e57:	48 33 05 42 ef 00 00 	xor    0xef42(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   15e5e:	48 33 15 43 ef 00 00 	xor    0xef43(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   15e65:	48 09 c2             	or     %rax,%rdx
   15e68:	75 36                	jne    15ea0 <mbedtls_aria_self_test+0x9d0>
   15e6a:	83 c5 40             	add    $0x40,%ebp
   15e6d:	49 83 c4 30          	add    $0x30,%r12
   15e71:	81 fd 40 01 00 00    	cmp    $0x140,%ebp
   15e77:	0f 85 86 fe ff ff    	jne    15d03 <mbedtls_aria_self_test+0x833>
   15e7d:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15e81:	4c 89 ed             	mov    %r13,%rbp
   15e84:	85 c0                	test   %eax,%eax
   15e86:	0f 85 14 02 00 00    	jne    160a0 <mbedtls_aria_self_test+0xbd0>
   15e8c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   15e93:	00 
   15e94:	e9 df f6 ff ff       	jmpq   15578 <mbedtls_aria_self_test+0xa8>
   15e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15ea0:	4c 89 ed             	mov    %r13,%rbp
   15ea3:	e9 c8 f6 ff ff       	jmpq   15570 <mbedtls_aria_self_test+0xa0>
   15ea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15eaf:	00 
   15eb0:	44 89 f2             	mov    %r14d,%edx
   15eb3:	48 8d 35 7e ec 00 00 	lea    0xec7e(%rip),%rsi        # 24b38 <aes_test_ecb_dec+0x98>
   15eba:	bf 01 00 00 00       	mov    $0x1,%edi
   15ebf:	31 c0                	xor    %eax,%eax
   15ec1:	e8 7a d4 fe ff       	callq  3340 <__printf_chk@plt>
   15ec6:	e9 d0 fa ff ff       	jmpq   1599b <mbedtls_aria_self_test+0x4cb>
   15ecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15ed0:	48 8d 35 8d ec 00 00 	lea    0xec8d(%rip),%rsi        # 24b64 <aes_test_ecb_dec+0xc4>
   15ed7:	bf 01 00 00 00       	mov    $0x1,%edi
   15edc:	31 c0                	xor    %eax,%eax
   15ede:	e8 5d d4 fe ff       	callq  3340 <__printf_chk@plt>
   15ee3:	89 ea                	mov    %ebp,%edx
   15ee5:	48 8d 35 d4 ee 00 00 	lea    0xeed4(%rip),%rsi        # 24dc0 <aria_test2_key>
   15eec:	4c 89 ef             	mov    %r13,%rdi
   15eef:	e8 4c e9 ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   15ef4:	48 83 ec 08          	sub    $0x8,%rsp
   15ef8:	66 0f ef d2          	pxor   %xmm2,%xmm2
   15efc:	4c 89 f9             	mov    %r15,%rcx
   15eff:	41 0f 29 17          	movaps %xmm2,(%r15)
   15f03:	4d 89 f0             	mov    %r14,%r8
   15f06:	be 30 00 00 00       	mov    $0x30,%esi
   15f0b:	4c 89 ef             	mov    %r13,%rdi
   15f0e:	66 0f 6f 05 2a f3 00 	movdqa 0xf32a(%rip),%xmm0        # 25240 <aria_sb1+0x100>
   15f15:	00 
   15f16:	4c 8d 0d 63 ee 00 00 	lea    0xee63(%rip),%r9        # 24d80 <aria_test2_pt>
   15f1d:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15f24:	00 00 
   15f26:	0f 29 03             	movaps %xmm0,(%rbx)
   15f29:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15f2d:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   15f31:	53                   	push   %rbx
   15f32:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   15f37:	e8 c4 f4 ff ff       	callq  15400 <mbedtls_aria_crypt_ctr>
   15f3c:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   15f40:	49 33 54 24 08       	xor    0x8(%r12),%rdx
   15f45:	48 8b 03             	mov    (%rbx),%rax
   15f48:	48 89 d1             	mov    %rdx,%rcx
   15f4b:	49 33 04 24          	xor    (%r12),%rax
   15f4f:	48 09 c1             	or     %rax,%rcx
   15f52:	41 5a                	pop    %r10
   15f54:	41 5b                	pop    %r11
   15f56:	0f 85 1c 01 00 00    	jne    16078 <mbedtls_aria_self_test+0xba8>
   15f5c:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   15f60:	49 33 54 24 18       	xor    0x18(%r12),%rdx
   15f65:	48 8b 43 10          	mov    0x10(%rbx),%rax
   15f69:	48 89 d1             	mov    %rdx,%rcx
   15f6c:	49 33 44 24 10       	xor    0x10(%r12),%rax
   15f71:	48 09 c1             	or     %rax,%rcx
   15f74:	0f 85 fe 00 00 00    	jne    16078 <mbedtls_aria_self_test+0xba8>
   15f7a:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   15f7e:	49 33 54 24 28       	xor    0x28(%r12),%rdx
   15f83:	48 8b 43 20          	mov    0x20(%rbx),%rax
   15f87:	48 89 d1             	mov    %rdx,%rcx
   15f8a:	49 33 44 24 20       	xor    0x20(%r12),%rax
   15f8f:	48 09 c1             	or     %rax,%rcx
   15f92:	0f 85 e0 00 00 00    	jne    16078 <mbedtls_aria_self_test+0xba8>
   15f98:	48 8d 3d 43 d2 00 00 	lea    0xd243(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   15f9f:	e8 5c d2 fe ff       	callq  3200 <puts@plt>
   15fa4:	89 ea                	mov    %ebp,%edx
   15fa6:	48 8d 35 cd eb 00 00 	lea    0xebcd(%rip),%rsi        # 24b7a <aes_test_ecb_dec+0xda>
   15fad:	31 c0                	xor    %eax,%eax
   15faf:	bf 01 00 00 00       	mov    $0x1,%edi
   15fb4:	e8 87 d3 fe ff       	callq  3340 <__printf_chk@plt>
   15fb9:	89 ea                	mov    %ebp,%edx
   15fbb:	48 8d 35 fe ed 00 00 	lea    0xedfe(%rip),%rsi        # 24dc0 <aria_test2_key>
   15fc2:	4c 89 ef             	mov    %r13,%rdi
   15fc5:	e8 76 e8 ff ff       	callq  14840 <mbedtls_aria_setkey_enc>
   15fca:	48 83 ec 08          	sub    $0x8,%rsp
   15fce:	66 0f ef d2          	pxor   %xmm2,%xmm2
   15fd2:	4d 89 e1             	mov    %r12,%r9
   15fd5:	41 0f 29 17          	movaps %xmm2,(%r15)
   15fd9:	4d 89 f0             	mov    %r14,%r8
   15fdc:	4c 89 f9             	mov    %r15,%rcx
   15fdf:	be 30 00 00 00       	mov    $0x30,%esi
   15fe4:	66 0f 6f 05 64 f2 00 	movdqa 0xf264(%rip),%xmm0        # 25250 <aria_sb1+0x110>
   15feb:	00 
   15fec:	4c 89 ef             	mov    %r13,%rdi
   15fef:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15ff6:	00 00 
   15ff8:	0f 29 03             	movaps %xmm0,(%rbx)
   15ffb:	0f 29 43 10          	movaps %xmm0,0x10(%rbx)
   15fff:	0f 29 43 20          	movaps %xmm0,0x20(%rbx)
   16003:	53                   	push   %rbx
   16004:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   16009:	e8 f2 f3 ff ff       	callq  15400 <mbedtls_aria_crypt_ctr>
   1600e:	41 58                	pop    %r8
   16010:	41 59                	pop    %r9
   16012:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   16017:	48 8b 03             	mov    (%rbx),%rax
   1601a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1601e:	48 33 15 63 ed 00 00 	xor    0xed63(%rip),%rdx        # 24d88 <aria_test2_pt+0x8>
   16025:	48 33 01             	xor    (%rcx),%rax
   16028:	48 09 c2             	or     %rax,%rdx
   1602b:	75 4b                	jne    16078 <mbedtls_aria_self_test+0xba8>
   1602d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   16031:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   16035:	48 33 05 54 ed 00 00 	xor    0xed54(%rip),%rax        # 24d90 <aria_test2_pt+0x10>
   1603c:	48 33 15 55 ed 00 00 	xor    0xed55(%rip),%rdx        # 24d98 <aria_test2_pt+0x18>
   16043:	48 09 c2             	or     %rax,%rdx
   16046:	75 30                	jne    16078 <mbedtls_aria_self_test+0xba8>
   16048:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1604c:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   16050:	48 33 05 49 ed 00 00 	xor    0xed49(%rip),%rax        # 24da0 <aria_test2_pt+0x20>
   16057:	48 33 15 4a ed 00 00 	xor    0xed4a(%rip),%rdx        # 24da8 <aria_test2_pt+0x28>
   1605e:	48 09 c2             	or     %rax,%rdx
   16061:	75 15                	jne    16078 <mbedtls_aria_self_test+0xba8>
   16063:	48 8d 3d 78 d1 00 00 	lea    0xd178(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1606a:	e8 91 d1 fe ff       	callq  3200 <puts@plt>
   1606f:	e9 f6 fd ff ff       	jmpq   15e6a <mbedtls_aria_self_test+0x99a>
   16074:	0f 1f 40 00          	nopl   0x0(%rax)
   16078:	4c 89 ed             	mov    %r13,%rbp
   1607b:	e9 ac f9 ff ff       	jmpq   15a2c <mbedtls_aria_self_test+0x55c>
   16080:	bf 0a 00 00 00       	mov    $0xa,%edi
   16085:	e8 66 d1 fe ff       	callq  31f0 <putchar@plt>
   1608a:	e9 dd f8 ff ff       	jmpq   1596c <mbedtls_aria_self_test+0x49c>
   1608f:	90                   	nop
   16090:	bf 0a 00 00 00       	mov    $0xa,%edi
   16095:	e8 56 d1 fe ff       	callq  31f0 <putchar@plt>
   1609a:	e9 51 fc ff ff       	jmpq   15cf0 <mbedtls_aria_self_test+0x820>
   1609f:	90                   	nop
   160a0:	bf 0a 00 00 00       	mov    $0xa,%edi
   160a5:	e8 46 d1 fe ff       	callq  31f0 <putchar@plt>
   160aa:	e9 c9 f4 ff ff       	jmpq   15578 <mbedtls_aria_self_test+0xa8>
   160af:	e8 ac d1 fe ff       	callq  3260 <__stack_chk_fail@plt>
   160b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   160bb:	00 00 00 
   160be:	66 90                	xchg   %ax,%ax

00000000000160c0 <mpi_select>:
   160c0:	41 56                	push   %r14
   160c2:	45 31 f6             	xor    %r14d,%r14d
   160c5:	41 55                	push   %r13
   160c7:	49 89 d5             	mov    %rdx,%r13
   160ca:	41 54                	push   %r12
   160cc:	49 89 fc             	mov    %rdi,%r12
   160cf:	55                   	push   %rbp
   160d0:	48 89 cd             	mov    %rcx,%rbp
   160d3:	53                   	push   %rbx
   160d4:	48 89 f3             	mov    %rsi,%rbx
   160d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   160de:	00 00 
   160e0:	48 89 ee             	mov    %rbp,%rsi
   160e3:	4c 89 f7             	mov    %r14,%rdi
   160e6:	e8 f5 12 ff ff       	callq  73e0 <mbedtls_ct_size_bool_eq>
   160eb:	48 89 de             	mov    %rbx,%rsi
   160ee:	4c 89 e7             	mov    %r12,%rdi
   160f1:	0f b6 d0             	movzbl %al,%edx
   160f4:	e8 47 18 ff ff       	callq  7940 <mbedtls_mpi_safe_cond_assign>
   160f9:	85 c0                	test   %eax,%eax
   160fb:	75 0d                	jne    1610a <mpi_select+0x4a>
   160fd:	49 83 c6 01          	add    $0x1,%r14
   16101:	48 83 c3 18          	add    $0x18,%rbx
   16105:	4d 39 f5             	cmp    %r14,%r13
   16108:	75 d6                	jne    160e0 <mpi_select+0x20>
   1610a:	5b                   	pop    %rbx
   1610b:	5d                   	pop    %rbp
   1610c:	41 5c                	pop    %r12
   1610e:	41 5d                	pop    %r13
   16110:	41 5e                	pop    %r14
   16112:	c3                   	retq   
   16113:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1611a:	00 00 00 00 
   1611e:	66 90                	xchg   %ax,%ax

0000000000016120 <mbedtls_mpi_init>:
   16120:	f3 0f 1e fa          	endbr64 
   16124:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   1612a:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   16131:	00 
   16132:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   16139:	00 
   1613a:	c3                   	retq   
   1613b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016140 <mbedtls_mpi_free>:
   16140:	f3 0f 1e fa          	endbr64 
   16144:	48 85 ff             	test   %rdi,%rdi
   16147:	74 47                	je     16190 <mbedtls_mpi_free+0x50>
   16149:	53                   	push   %rbx
   1614a:	48 89 fb             	mov    %rdi,%rbx
   1614d:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16151:	48 85 ff             	test   %rdi,%rdi
   16154:	74 1a                	je     16170 <mbedtls_mpi_free+0x30>
   16156:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1615a:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   16161:	00 
   16162:	e8 b9 f0 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   16167:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1616b:	e8 70 d0 fe ff       	callq  31e0 <free@plt>
   16170:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   16176:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   1617d:	00 
   1617e:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   16185:	00 
   16186:	5b                   	pop    %rbx
   16187:	c3                   	retq   
   16188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1618f:	00 
   16190:	c3                   	retq   
   16191:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16198:	00 00 00 00 
   1619c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000161a0 <mbedtls_mpi_grow>:
   161a0:	f3 0f 1e fa          	endbr64 
   161a4:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
   161ab:	0f 87 85 00 00 00    	ja     16236 <mbedtls_mpi_grow+0x96>
   161b1:	41 56                	push   %r14
   161b3:	31 c0                	xor    %eax,%eax
   161b5:	41 55                	push   %r13
   161b7:	41 54                	push   %r12
   161b9:	55                   	push   %rbp
   161ba:	48 89 fd             	mov    %rdi,%rbp
   161bd:	53                   	push   %rbx
   161be:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   161c2:	48 89 f3             	mov    %rsi,%rbx
   161c5:	49 39 f4             	cmp    %rsi,%r12
   161c8:	72 0e                	jb     161d8 <mbedtls_mpi_grow+0x38>
   161ca:	5b                   	pop    %rbx
   161cb:	5d                   	pop    %rbp
   161cc:	41 5c                	pop    %r12
   161ce:	41 5d                	pop    %r13
   161d0:	41 5e                	pop    %r14
   161d2:	c3                   	retq   
   161d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   161d8:	be 08 00 00 00       	mov    $0x8,%esi
   161dd:	48 89 df             	mov    %rbx,%rdi
   161e0:	e8 db d0 fe ff       	callq  32c0 <calloc@plt>
   161e5:	49 89 c5             	mov    %rax,%r13
   161e8:	48 85 c0             	test   %rax,%rax
   161eb:	74 42                	je     1622f <mbedtls_mpi_grow+0x8f>
   161ed:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   161f1:	4d 85 f6             	test   %r14,%r14
   161f4:	74 26                	je     1621c <mbedtls_mpi_grow+0x7c>
   161f6:	49 c1 e4 03          	shl    $0x3,%r12
   161fa:	4c 89 f6             	mov    %r14,%rsi
   161fd:	48 89 c7             	mov    %rax,%rdi
   16200:	4c 89 e2             	mov    %r12,%rdx
   16203:	e8 08 d1 fe ff       	callq  3310 <memcpy@plt>
   16208:	4c 89 f7             	mov    %r14,%rdi
   1620b:	4c 89 e6             	mov    %r12,%rsi
   1620e:	e8 0d f0 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   16213:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16217:	e8 c4 cf fe ff       	callq  31e0 <free@plt>
   1621c:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   16220:	31 c0                	xor    %eax,%eax
   16222:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   16226:	5b                   	pop    %rbx
   16227:	5d                   	pop    %rbp
   16228:	41 5c                	pop    %r12
   1622a:	41 5d                	pop    %r13
   1622c:	41 5e                	pop    %r14
   1622e:	c3                   	retq   
   1622f:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   16234:	eb 94                	jmp    161ca <mbedtls_mpi_grow+0x2a>
   16236:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   1623b:	c3                   	retq   
   1623c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016240 <mbedtls_mpi_resize_clear>:
   16240:	41 54                	push   %r12
   16242:	49 89 fc             	mov    %rdi,%r12
   16245:	55                   	push   %rbp
   16246:	48 83 ec 08          	sub    $0x8,%rsp
   1624a:	48 85 f6             	test   %rsi,%rsi
   1624d:	74 49                	je     16298 <mbedtls_mpi_resize_clear+0x58>
   1624f:	48 89 f5             	mov    %rsi,%rbp
   16252:	48 39 77 08          	cmp    %rsi,0x8(%rdi)
   16256:	74 18                	je     16270 <mbedtls_mpi_resize_clear+0x30>
   16258:	e8 e3 fe ff ff       	callq  16140 <mbedtls_mpi_free>
   1625d:	48 83 c4 08          	add    $0x8,%rsp
   16261:	48 89 ee             	mov    %rbp,%rsi
   16264:	4c 89 e7             	mov    %r12,%rdi
   16267:	5d                   	pop    %rbp
   16268:	41 5c                	pop    %r12
   1626a:	e9 31 ff ff ff       	jmpq   161a0 <mbedtls_mpi_grow>
   1626f:	90                   	nop
   16270:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16274:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   1627b:	00 
   1627c:	31 f6                	xor    %esi,%esi
   1627e:	e8 0d d0 fe ff       	callq  3290 <memset@plt>
   16283:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1628a:	00 
   1628b:	31 c0                	xor    %eax,%eax
   1628d:	48 83 c4 08          	add    $0x8,%rsp
   16291:	5d                   	pop    %rbp
   16292:	41 5c                	pop    %r12
   16294:	c3                   	retq   
   16295:	0f 1f 00             	nopl   (%rax)
   16298:	e8 a3 fe ff ff       	callq  16140 <mbedtls_mpi_free>
   1629d:	48 83 c4 08          	add    $0x8,%rsp
   162a1:	31 c0                	xor    %eax,%eax
   162a3:	5d                   	pop    %rbp
   162a4:	41 5c                	pop    %r12
   162a6:	c3                   	retq   
   162a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   162ae:	00 00 

00000000000162b0 <mbedtls_mpi_shrink>:
   162b0:	f3 0f 1e fa          	endbr64 
   162b4:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
   162bb:	0f 87 06 01 00 00    	ja     163c7 <mbedtls_mpi_shrink+0x117>
   162c1:	41 56                	push   %r14
   162c3:	41 55                	push   %r13
   162c5:	41 54                	push   %r12
   162c7:	55                   	push   %rbp
   162c8:	48 89 fd             	mov    %rdi,%rbp
   162cb:	53                   	push   %rbx
   162cc:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   162d0:	49 39 f4             	cmp    %rsi,%r12
   162d3:	0f 86 a7 00 00 00    	jbe    16380 <mbedtls_mpi_shrink+0xd0>
   162d9:	4c 89 e0             	mov    %r12,%rax
   162dc:	48 83 e8 01          	sub    $0x1,%rax
   162e0:	0f 84 a7 00 00 00    	je     1638d <mbedtls_mpi_shrink+0xdd>
   162e6:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   162ea:	eb 0a                	jmp    162f6 <mbedtls_mpi_shrink+0x46>
   162ec:	0f 1f 40 00          	nopl   0x0(%rax)
   162f0:	48 83 e8 01          	sub    $0x1,%rax
   162f4:	74 7a                	je     16370 <mbedtls_mpi_shrink+0xc0>
   162f6:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
   162fb:	74 f3                	je     162f0 <mbedtls_mpi_shrink+0x40>
   162fd:	48 83 c0 01          	add    $0x1,%rax
   16301:	48 39 f0             	cmp    %rsi,%rax
   16304:	48 89 f3             	mov    %rsi,%rbx
   16307:	be 08 00 00 00       	mov    $0x8,%esi
   1630c:	48 0f 43 d8          	cmovae %rax,%rbx
   16310:	48 89 df             	mov    %rbx,%rdi
   16313:	e8 a8 cf fe ff       	callq  32c0 <calloc@plt>
   16318:	49 89 c5             	mov    %rax,%r13
   1631b:	48 85 c0             	test   %rax,%rax
   1631e:	0f 84 9c 00 00 00    	je     163c0 <mbedtls_mpi_shrink+0x110>
   16324:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   16328:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   1632f:	00 
   16330:	4c 89 f6             	mov    %r14,%rsi
   16333:	4c 89 ef             	mov    %r13,%rdi
   16336:	e8 d5 cf fe ff       	callq  3310 <memcpy@plt>
   1633b:	4c 89 f7             	mov    %r14,%rdi
   1633e:	4a 8d 34 e5 00 00 00 	lea    0x0(,%r12,8),%rsi
   16345:	00 
   16346:	e8 d5 ee fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1634b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1634f:	e8 8c ce fe ff       	callq  31e0 <free@plt>
   16354:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   16358:	31 c0                	xor    %eax,%eax
   1635a:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   1635e:	5b                   	pop    %rbx
   1635f:	5d                   	pop    %rbp
   16360:	41 5c                	pop    %r12
   16362:	41 5d                	pop    %r13
   16364:	41 5e                	pop    %r14
   16366:	c3                   	retq   
   16367:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1636e:	00 00 
   16370:	b8 01 00 00 00       	mov    $0x1,%eax
   16375:	eb 8a                	jmp    16301 <mbedtls_mpi_shrink+0x51>
   16377:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1637e:	00 00 
   16380:	5b                   	pop    %rbx
   16381:	5d                   	pop    %rbp
   16382:	41 5c                	pop    %r12
   16384:	41 5d                	pop    %r13
   16386:	41 5e                	pop    %r14
   16388:	e9 13 fe ff ff       	jmpq   161a0 <mbedtls_mpi_grow>
   1638d:	48 85 f6             	test   %rsi,%rsi
   16390:	b8 01 00 00 00       	mov    $0x1,%eax
   16395:	48 0f 45 c6          	cmovne %rsi,%rax
   16399:	be 08 00 00 00       	mov    $0x8,%esi
   1639e:	48 89 c7             	mov    %rax,%rdi
   163a1:	48 89 c3             	mov    %rax,%rbx
   163a4:	e8 17 cf fe ff       	callq  32c0 <calloc@plt>
   163a9:	49 89 c5             	mov    %rax,%r13
   163ac:	48 85 c0             	test   %rax,%rax
   163af:	74 0f                	je     163c0 <mbedtls_mpi_shrink+0x110>
   163b1:	4c 8b 75 10          	mov    0x10(%rbp),%r14
   163b5:	4d 85 f6             	test   %r14,%r14
   163b8:	74 9a                	je     16354 <mbedtls_mpi_shrink+0xa4>
   163ba:	e9 69 ff ff ff       	jmpq   16328 <mbedtls_mpi_shrink+0x78>
   163bf:	90                   	nop
   163c0:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   163c5:	eb 97                	jmp    1635e <mbedtls_mpi_shrink+0xae>
   163c7:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   163cc:	c3                   	retq   
   163cd:	0f 1f 00             	nopl   (%rax)

00000000000163d0 <mbedtls_mpi_copy>:
   163d0:	f3 0f 1e fa          	endbr64 
   163d4:	41 55                	push   %r13
   163d6:	41 54                	push   %r12
   163d8:	55                   	push   %rbp
   163d9:	53                   	push   %rbx
   163da:	48 83 ec 08          	sub    $0x8,%rsp
   163de:	48 39 f7             	cmp    %rsi,%rdi
   163e1:	0f 84 d9 00 00 00    	je     164c0 <mbedtls_mpi_copy+0xf0>
   163e7:	48 8b 46 08          	mov    0x8(%rsi),%rax
   163eb:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   163ef:	48 89 fd             	mov    %rdi,%rbp
   163f2:	49 89 f4             	mov    %rsi,%r12
   163f5:	48 85 c0             	test   %rax,%rax
   163f8:	0f 84 92 00 00 00    	je     16490 <mbedtls_mpi_copy+0xc0>
   163fe:	48 83 e8 01          	sub    $0x1,%rax
   16402:	0f 84 a8 00 00 00    	je     164b0 <mbedtls_mpi_copy+0xe0>
   16408:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   1640c:	eb 0c                	jmp    1641a <mbedtls_mpi_copy+0x4a>
   1640e:	66 90                	xchg   %ax,%ax
   16410:	48 83 e8 01          	sub    $0x1,%rax
   16414:	0f 84 96 00 00 00    	je     164b0 <mbedtls_mpi_copy+0xe0>
   1641a:	48 83 3c c1 00       	cmpq   $0x0,(%rcx,%rax,8)
   1641f:	74 ef                	je     16410 <mbedtls_mpi_copy+0x40>
   16421:	48 8d 58 01          	lea    0x1(%rax),%rbx
   16425:	41 8b 04 24          	mov    (%r12),%eax
   16429:	89 45 00             	mov    %eax,0x0(%rbp)
   1642c:	48 39 da             	cmp    %rbx,%rdx
   1642f:	73 1f                	jae    16450 <mbedtls_mpi_copy+0x80>
   16431:	48 89 de             	mov    %rbx,%rsi
   16434:	48 89 ef             	mov    %rbp,%rdi
   16437:	e8 64 fd ff ff       	callq  161a0 <mbedtls_mpi_grow>
   1643c:	41 89 c5             	mov    %eax,%r13d
   1643f:	85 c0                	test   %eax,%eax
   16441:	75 3e                	jne    16481 <mbedtls_mpi_copy+0xb1>
   16443:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
   1644a:	00 
   1644b:	eb 20                	jmp    1646d <mbedtls_mpi_copy+0x9d>
   1644d:	0f 1f 00             	nopl   (%rax)
   16450:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16454:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
   1645b:	00 
   1645c:	48 29 da             	sub    %rbx,%rdx
   1645f:	31 f6                	xor    %esi,%esi
   16461:	48 c1 e2 03          	shl    $0x3,%rdx
   16465:	4c 01 ef             	add    %r13,%rdi
   16468:	e8 23 ce fe ff       	callq  3290 <memset@plt>
   1646d:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16471:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   16476:	4c 89 ea             	mov    %r13,%rdx
   16479:	45 31 ed             	xor    %r13d,%r13d
   1647c:	e8 8f ce fe ff       	callq  3310 <memcpy@plt>
   16481:	48 83 c4 08          	add    $0x8,%rsp
   16485:	44 89 e8             	mov    %r13d,%eax
   16488:	5b                   	pop    %rbx
   16489:	5d                   	pop    %rbp
   1648a:	41 5c                	pop    %r12
   1648c:	41 5d                	pop    %r13
   1648e:	c3                   	retq   
   1648f:	90                   	nop
   16490:	45 31 ed             	xor    %r13d,%r13d
   16493:	48 85 d2             	test   %rdx,%rdx
   16496:	74 e9                	je     16481 <mbedtls_mpi_copy+0xb1>
   16498:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   1649e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   164a2:	48 c1 e2 03          	shl    $0x3,%rdx
   164a6:	31 f6                	xor    %esi,%esi
   164a8:	e8 e3 cd fe ff       	callq  3290 <memset@plt>
   164ad:	eb d2                	jmp    16481 <mbedtls_mpi_copy+0xb1>
   164af:	90                   	nop
   164b0:	bb 01 00 00 00       	mov    $0x1,%ebx
   164b5:	e9 6b ff ff ff       	jmpq   16425 <mbedtls_mpi_copy+0x55>
   164ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   164c0:	48 83 c4 08          	add    $0x8,%rsp
   164c4:	45 31 ed             	xor    %r13d,%r13d
   164c7:	5b                   	pop    %rbx
   164c8:	44 89 e8             	mov    %r13d,%eax
   164cb:	5d                   	pop    %rbp
   164cc:	41 5c                	pop    %r12
   164ce:	41 5d                	pop    %r13
   164d0:	c3                   	retq   
   164d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   164d8:	00 00 00 00 
   164dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000164e0 <mbedtls_mpi_swap>:
   164e0:	f3 0f 1e fa          	endbr64 
   164e4:	48 83 ec 28          	sub    $0x28,%rsp
   164e8:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
   164ec:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   164f0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   164f7:	00 00 
   164f9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   164fe:	31 c0                	xor    %eax,%eax
   16500:	48 8b 47 10          	mov    0x10(%rdi),%rax
   16504:	0f 11 0f             	movups %xmm1,(%rdi)
   16507:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   1650b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16510:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   16514:	48 89 46 10          	mov    %rax,0x10(%rsi)
   16518:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1651c:	0f 11 06             	movups %xmm0,(%rsi)
   1651f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16524:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1652b:	00 00 
   1652d:	75 05                	jne    16534 <mbedtls_mpi_swap+0x54>
   1652f:	48 83 c4 28          	add    $0x28,%rsp
   16533:	c3                   	retq   
   16534:	e8 27 cd fe ff       	callq  3260 <__stack_chk_fail@plt>
   16539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016540 <mbedtls_mpi_lset>:
   16540:	f3 0f 1e fa          	endbr64 
   16544:	41 54                	push   %r12
   16546:	55                   	push   %rbp
   16547:	48 89 f5             	mov    %rsi,%rbp
   1654a:	be 01 00 00 00       	mov    $0x1,%esi
   1654f:	53                   	push   %rbx
   16550:	48 89 fb             	mov    %rdi,%rbx
   16553:	e8 48 fc ff ff       	callq  161a0 <mbedtls_mpi_grow>
   16558:	41 89 c4             	mov    %eax,%r12d
   1655b:	85 c0                	test   %eax,%eax
   1655d:	74 11                	je     16570 <mbedtls_mpi_lset+0x30>
   1655f:	44 89 e0             	mov    %r12d,%eax
   16562:	5b                   	pop    %rbx
   16563:	5d                   	pop    %rbp
   16564:	41 5c                	pop    %r12
   16566:	c3                   	retq   
   16567:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1656e:	00 00 
   16570:	48 8b 43 08          	mov    0x8(%rbx),%rax
   16574:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   16578:	31 f6                	xor    %esi,%esi
   1657a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16581:	00 
   16582:	e8 09 cd fe ff       	callq  3290 <memset@plt>
   16587:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1658b:	48 89 ee             	mov    %rbp,%rsi
   1658e:	b8 01 00 00 00       	mov    $0x1,%eax
   16593:	48 85 ed             	test   %rbp,%rbp
   16596:	79 08                	jns    165a0 <mbedtls_mpi_lset+0x60>
   16598:	48 f7 de             	neg    %rsi
   1659b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   165a0:	f3 0f 1e fa          	endbr64 
   165a4:	48 89 32             	mov    %rsi,(%rdx)
   165a7:	89 03                	mov    %eax,(%rbx)
   165a9:	44 89 e0             	mov    %r12d,%eax
   165ac:	5b                   	pop    %rbx
   165ad:	5d                   	pop    %rbp
   165ae:	41 5c                	pop    %r12
   165b0:	c3                   	retq   
   165b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   165b8:	00 00 00 00 
   165bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000165c0 <mbedtls_mpi_get_bit>:
   165c0:	f3 0f 1e fa          	endbr64 
   165c4:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   165c8:	31 c0                	xor    %eax,%eax
   165ca:	48 c1 e2 06          	shl    $0x6,%rdx
   165ce:	48 39 f2             	cmp    %rsi,%rdx
   165d1:	76 17                	jbe    165ea <mbedtls_mpi_get_bit+0x2a>
   165d3:	48 8b 47 10          	mov    0x10(%rdi),%rax
   165d7:	48 89 f2             	mov    %rsi,%rdx
   165da:	89 f1                	mov    %esi,%ecx
   165dc:	48 c1 ea 06          	shr    $0x6,%rdx
   165e0:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   165e4:	48 d3 e8             	shr    %cl,%rax
   165e7:	83 e0 01             	and    $0x1,%eax
   165ea:	c3                   	retq   
   165eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000165f0 <mbedtls_mpi_set_bit>:
   165f0:	f3 0f 1e fa          	endbr64 
   165f4:	41 55                	push   %r13
   165f6:	49 89 f5             	mov    %rsi,%r13
   165f9:	41 54                	push   %r12
   165fb:	49 c1 ed 06          	shr    $0x6,%r13
   165ff:	55                   	push   %rbp
   16600:	53                   	push   %rbx
   16601:	48 83 ec 08          	sub    $0x8,%rsp
   16605:	80 fa 01             	cmp    $0x1,%dl
   16608:	77 66                	ja     16670 <mbedtls_mpi_set_bit+0x80>
   1660a:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   1660e:	48 89 fd             	mov    %rdi,%rbp
   16611:	48 89 f3             	mov    %rsi,%rbx
   16614:	41 89 d4             	mov    %edx,%r12d
   16617:	48 c1 e1 06          	shl    $0x6,%rcx
   1661b:	48 39 f1             	cmp    %rsi,%rcx
   1661e:	77 13                	ja     16633 <mbedtls_mpi_set_bit+0x43>
   16620:	31 c0                	xor    %eax,%eax
   16622:	84 d2                	test   %dl,%dl
   16624:	74 37                	je     1665d <mbedtls_mpi_set_bit+0x6d>
   16626:	49 8d 75 01          	lea    0x1(%r13),%rsi
   1662a:	e8 71 fb ff ff       	callq  161a0 <mbedtls_mpi_grow>
   1662f:	85 c0                	test   %eax,%eax
   16631:	75 2a                	jne    1665d <mbedtls_mpi_set_bit+0x6d>
   16633:	48 8b 45 10          	mov    0x10(%rbp),%rax
   16637:	83 e3 3f             	and    $0x3f,%ebx
   1663a:	41 0f b6 d4          	movzbl %r12b,%edx
   1663e:	48 89 d9             	mov    %rbx,%rcx
   16641:	4a 8d 3c e8          	lea    (%rax,%r13,8),%rdi
   16645:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   1664c:	48 d3 e2             	shl    %cl,%rdx
   1664f:	48 d3 c0             	rol    %cl,%rax
   16652:	48 23 07             	and    (%rdi),%rax
   16655:	48 09 d0             	or     %rdx,%rax
   16658:	48 89 07             	mov    %rax,(%rdi)
   1665b:	31 c0                	xor    %eax,%eax
   1665d:	48 83 c4 08          	add    $0x8,%rsp
   16661:	5b                   	pop    %rbx
   16662:	5d                   	pop    %rbp
   16663:	41 5c                	pop    %r12
   16665:	41 5d                	pop    %r13
   16667:	c3                   	retq   
   16668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1666f:	00 
   16670:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   16675:	eb e6                	jmp    1665d <mbedtls_mpi_set_bit+0x6d>
   16677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1667e:	00 00 

0000000000016680 <mbedtls_mpi_lsb>:
   16680:	f3 0f 1e fa          	endbr64 
   16684:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   16688:	48 85 f6             	test   %rsi,%rsi
   1668b:	74 3c                	je     166c9 <mbedtls_mpi_lsb+0x49>
   1668d:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16691:	45 31 c0             	xor    %r8d,%r8d
   16694:	31 c9                	xor    %ecx,%ecx
   16696:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   1669a:	31 c0                	xor    %eax,%eax
   1669c:	eb 10                	jmp    166ae <mbedtls_mpi_lsb+0x2e>
   1669e:	66 90                	xchg   %ax,%ax
   166a0:	48 83 c0 01          	add    $0x1,%rax
   166a4:	49 83 c0 01          	add    $0x1,%r8
   166a8:	48 83 f8 40          	cmp    $0x40,%rax
   166ac:	74 12                	je     166c0 <mbedtls_mpi_lsb+0x40>
   166ae:	48 0f a3 c2          	bt     %rax,%rdx
   166b2:	73 ec                	jae    166a0 <mbedtls_mpi_lsb+0x20>
   166b4:	4c 89 c0             	mov    %r8,%rax
   166b7:	c3                   	retq   
   166b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   166bf:	00 
   166c0:	48 83 c1 01          	add    $0x1,%rcx
   166c4:	48 39 ce             	cmp    %rcx,%rsi
   166c7:	75 cd                	jne    16696 <mbedtls_mpi_lsb+0x16>
   166c9:	45 31 c0             	xor    %r8d,%r8d
   166cc:	eb e6                	jmp    166b4 <mbedtls_mpi_lsb+0x34>
   166ce:	66 90                	xchg   %ax,%ax

00000000000166d0 <mbedtls_mpi_bitlen>:
   166d0:	f3 0f 1e fa          	endbr64 
   166d4:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   166d8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   166dc:	e9 0f 4e 00 00       	jmpq   1b4f0 <mbedtls_mpi_core_bitlen>
   166e1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   166e8:	00 00 00 00 
   166ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000166f0 <mbedtls_mpi_size>:
   166f0:	f3 0f 1e fa          	endbr64 
   166f4:	48 83 ec 08          	sub    $0x8,%rsp
   166f8:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   166fc:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16700:	e8 eb 4d 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   16705:	48 83 c4 08          	add    $0x8,%rsp
   16709:	48 83 c0 07          	add    $0x7,%rax
   1670d:	48 c1 e8 03          	shr    $0x3,%rax
   16711:	c3                   	retq   
   16712:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16719:	00 00 00 00 
   1671d:	0f 1f 00             	nopl   (%rax)

0000000000016720 <mbedtls_mpi_read_binary_le>:
   16720:	f3 0f 1e fa          	endbr64 
   16724:	41 55                	push   %r13
   16726:	48 89 d0             	mov    %rdx,%rax
   16729:	49 89 f5             	mov    %rsi,%r13
   1672c:	31 f6                	xor    %esi,%esi
   1672e:	41 54                	push   %r12
   16730:	f6 c2 07             	test   $0x7,%dl
   16733:	49 89 d4             	mov    %rdx,%r12
   16736:	53                   	push   %rbx
   16737:	40 0f 95 c6          	setne  %sil
   1673b:	48 c1 e8 03          	shr    $0x3,%rax
   1673f:	48 89 fb             	mov    %rdi,%rbx
   16742:	48 01 c6             	add    %rax,%rsi
   16745:	e8 f6 fa ff ff       	callq  16240 <mbedtls_mpi_resize_clear>
   1674a:	85 c0                	test   %eax,%eax
   1674c:	74 0a                	je     16758 <mbedtls_mpi_read_binary_le+0x38>
   1674e:	5b                   	pop    %rbx
   1674f:	41 5c                	pop    %r12
   16751:	41 5d                	pop    %r13
   16753:	c3                   	retq   
   16754:	0f 1f 40 00          	nopl   0x0(%rax)
   16758:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1675c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   16760:	4c 89 e1             	mov    %r12,%rcx
   16763:	4c 89 ea             	mov    %r13,%rdx
   16766:	5b                   	pop    %rbx
   16767:	41 5c                	pop    %r12
   16769:	41 5d                	pop    %r13
   1676b:	e9 d0 4e 00 00       	jmpq   1b640 <mbedtls_mpi_core_read_le>

0000000000016770 <mbedtls_mpi_read_binary>:
   16770:	f3 0f 1e fa          	endbr64 
   16774:	41 55                	push   %r13
   16776:	48 89 d0             	mov    %rdx,%rax
   16779:	49 89 f5             	mov    %rsi,%r13
   1677c:	31 f6                	xor    %esi,%esi
   1677e:	41 54                	push   %r12
   16780:	f6 c2 07             	test   $0x7,%dl
   16783:	49 89 d4             	mov    %rdx,%r12
   16786:	53                   	push   %rbx
   16787:	40 0f 95 c6          	setne  %sil
   1678b:	48 c1 e8 03          	shr    $0x3,%rax
   1678f:	48 89 fb             	mov    %rdi,%rbx
   16792:	48 01 c6             	add    %rax,%rsi
   16795:	e8 a6 fa ff ff       	callq  16240 <mbedtls_mpi_resize_clear>
   1679a:	85 c0                	test   %eax,%eax
   1679c:	74 0a                	je     167a8 <mbedtls_mpi_read_binary+0x38>
   1679e:	5b                   	pop    %rbx
   1679f:	41 5c                	pop    %r12
   167a1:	41 5d                	pop    %r13
   167a3:	c3                   	retq   
   167a4:	0f 1f 40 00          	nopl   0x0(%rax)
   167a8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   167ac:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   167b0:	4c 89 e1             	mov    %r12,%rcx
   167b3:	4c 89 ea             	mov    %r13,%rdx
   167b6:	5b                   	pop    %rbx
   167b7:	41 5c                	pop    %r12
   167b9:	41 5d                	pop    %r13
   167bb:	e9 00 4f 00 00       	jmpq   1b6c0 <mbedtls_mpi_core_read_be>

00000000000167c0 <mbedtls_mpi_write_binary_le>:
   167c0:	f3 0f 1e fa          	endbr64 
   167c4:	49 89 f0             	mov    %rsi,%r8
   167c7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   167cb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   167cf:	48 89 d1             	mov    %rdx,%rcx
   167d2:	4c 89 c2             	mov    %r8,%rdx
   167d5:	e9 86 4f 00 00       	jmpq   1b760 <mbedtls_mpi_core_write_le>
   167da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000167e0 <mbedtls_mpi_write_binary>:
   167e0:	f3 0f 1e fa          	endbr64 
   167e4:	49 89 f0             	mov    %rsi,%r8
   167e7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   167eb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   167ef:	48 89 d1             	mov    %rdx,%rcx
   167f2:	4c 89 c2             	mov    %r8,%rdx
   167f5:	e9 36 50 00 00       	jmpq   1b830 <mbedtls_mpi_core_write_be>
   167fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016800 <mbedtls_mpi_shift_l>:
   16800:	f3 0f 1e fa          	endbr64 
   16804:	41 55                	push   %r13
   16806:	49 89 f5             	mov    %rsi,%r13
   16809:	41 54                	push   %r12
   1680b:	49 89 f4             	mov    %rsi,%r12
   1680e:	55                   	push   %rbp
   1680f:	48 89 fd             	mov    %rdi,%rbp
   16812:	41 83 e4 3f          	and    $0x3f,%r12d
   16816:	53                   	push   %rbx
   16817:	48 89 f3             	mov    %rsi,%rbx
   1681a:	48 c1 eb 06          	shr    $0x6,%rbx
   1681e:	48 83 ec 08          	sub    $0x8,%rsp
   16822:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   16826:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1682a:	e8 c1 4c 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   1682f:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   16833:	4c 01 e8             	add    %r13,%rax
   16836:	48 c1 e2 06          	shl    $0x6,%rdx
   1683a:	48 39 c2             	cmp    %rax,%rdx
   1683d:	0f 82 b5 00 00 00    	jb     168f8 <mbedtls_mpi_shift_l+0xf8>
   16843:	49 83 fd 3f          	cmp    $0x3f,%r13
   16847:	76 56                	jbe    1689f <mbedtls_mpi_shift_l+0x9f>
   16849:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1684d:	48 39 c3             	cmp    %rax,%rbx
   16850:	73 32                	jae    16884 <mbedtls_mpi_shift_l+0x84>
   16852:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16856:	48 89 d9             	mov    %rbx,%rcx
   16859:	48 f7 d9             	neg    %rcx
   1685c:	48 8d 44 c2 f8       	lea    -0x8(%rdx,%rax,8),%rax
   16861:	48 8d 74 da f8       	lea    -0x8(%rdx,%rbx,8),%rsi
   16866:	48 c1 e1 03          	shl    $0x3,%rcx
   1686a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16870:	48 8b 14 08          	mov    (%rax,%rcx,1),%rdx
   16874:	48 83 e8 08          	sub    $0x8,%rax
   16878:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1687c:	48 39 c6             	cmp    %rax,%rsi
   1687f:	75 ef                	jne    16870 <mbedtls_mpi_shift_l+0x70>
   16881:	48 89 d8             	mov    %rbx,%rax
   16884:	48 85 c0             	test   %rax,%rax
   16887:	74 16                	je     1689f <mbedtls_mpi_shift_l+0x9f>
   16889:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1688d:	0f 1f 00             	nopl   (%rax)
   16890:	48 c7 44 c2 f8 00 00 	movq   $0x0,-0x8(%rdx,%rax,8)
   16897:	00 00 
   16899:	48 83 e8 01          	sub    $0x1,%rax
   1689d:	75 f1                	jne    16890 <mbedtls_mpi_shift_l+0x90>
   1689f:	4d 85 e4             	test   %r12,%r12
   168a2:	74 43                	je     168e7 <mbedtls_mpi_shift_l+0xe7>
   168a4:	48 3b 5d 08          	cmp    0x8(%rbp),%rbx
   168a8:	73 3d                	jae    168e7 <mbedtls_mpi_shift_l+0xe7>
   168aa:	41 b8 40 00 00 00    	mov    $0x40,%r8d
   168b0:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   168b4:	45 89 e1             	mov    %r12d,%r9d
   168b7:	31 d2                	xor    %edx,%edx
   168b9:	45 29 e0             	sub    %r12d,%r8d
   168bc:	0f 1f 40 00          	nopl   0x0(%rax)
   168c0:	48 8b 04 de          	mov    (%rsi,%rbx,8),%rax
   168c4:	48 89 d7             	mov    %rdx,%rdi
   168c7:	44 89 c1             	mov    %r8d,%ecx
   168ca:	48 89 c2             	mov    %rax,%rdx
   168cd:	48 d3 ea             	shr    %cl,%rdx
   168d0:	44 89 c9             	mov    %r9d,%ecx
   168d3:	48 d3 e0             	shl    %cl,%rax
   168d6:	48 09 f8             	or     %rdi,%rax
   168d9:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
   168dd:	48 83 c3 01          	add    $0x1,%rbx
   168e1:	48 39 5d 08          	cmp    %rbx,0x8(%rbp)
   168e5:	77 d9                	ja     168c0 <mbedtls_mpi_shift_l+0xc0>
   168e7:	48 83 c4 08          	add    $0x8,%rsp
   168eb:	31 c0                	xor    %eax,%eax
   168ed:	5b                   	pop    %rbx
   168ee:	5d                   	pop    %rbp
   168ef:	41 5c                	pop    %r12
   168f1:	41 5d                	pop    %r13
   168f3:	c3                   	retq   
   168f4:	0f 1f 40 00          	nopl   0x0(%rax)
   168f8:	31 f6                	xor    %esi,%esi
   168fa:	a8 3f                	test   $0x3f,%al
   168fc:	48 89 ef             	mov    %rbp,%rdi
   168ff:	40 0f 95 c6          	setne  %sil
   16903:	48 c1 e8 06          	shr    $0x6,%rax
   16907:	48 01 c6             	add    %rax,%rsi
   1690a:	e8 91 f8 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   1690f:	85 c0                	test   %eax,%eax
   16911:	0f 84 2c ff ff ff    	je     16843 <mbedtls_mpi_shift_l+0x43>
   16917:	48 83 c4 08          	add    $0x8,%rsp
   1691b:	5b                   	pop    %rbx
   1691c:	5d                   	pop    %rbp
   1691d:	41 5c                	pop    %r12
   1691f:	41 5d                	pop    %r13
   16921:	c3                   	retq   
   16922:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16929:	00 00 00 00 
   1692d:	0f 1f 00             	nopl   (%rax)

0000000000016930 <mbedtls_mpi_shift_r>:
   16930:	f3 0f 1e fa          	endbr64 
   16934:	4c 8b 47 08          	mov    0x8(%rdi),%r8
   16938:	4d 85 c0             	test   %r8,%r8
   1693b:	75 03                	jne    16940 <mbedtls_mpi_shift_r+0x10>
   1693d:	31 c0                	xor    %eax,%eax
   1693f:	c3                   	retq   
   16940:	48 83 ec 08          	sub    $0x8,%rsp
   16944:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   16948:	48 89 f2             	mov    %rsi,%rdx
   1694b:	4c 89 c6             	mov    %r8,%rsi
   1694e:	e8 bd 4f 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   16953:	31 c0                	xor    %eax,%eax
   16955:	48 83 c4 08          	add    $0x8,%rsp
   16959:	c3                   	retq   
   1695a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016960 <mbedtls_mpi_cmp_abs>:
   16960:	f3 0f 1e fa          	endbr64 
   16964:	48 8b 47 08          	mov    0x8(%rdi),%rax
   16968:	48 85 c0             	test   %rax,%rax
   1696b:	0f 84 7f 00 00 00    	je     169f0 <mbedtls_mpi_cmp_abs+0x90>
   16971:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16975:	eb 0f                	jmp    16986 <mbedtls_mpi_cmp_abs+0x26>
   16977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1697e:	00 00 
   16980:	48 83 e8 01          	sub    $0x1,%rax
   16984:	74 6a                	je     169f0 <mbedtls_mpi_cmp_abs+0x90>
   16986:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
   1698c:	74 f2                	je     16980 <mbedtls_mpi_cmp_abs+0x20>
   1698e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16992:	48 85 d2             	test   %rdx,%rdx
   16995:	74 4d                	je     169e4 <mbedtls_mpi_cmp_abs+0x84>
   16997:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   1699b:	eb 09                	jmp    169a6 <mbedtls_mpi_cmp_abs+0x46>
   1699d:	0f 1f 00             	nopl   (%rax)
   169a0:	48 83 ea 01          	sub    $0x1,%rdx
   169a4:	74 62                	je     16a08 <mbedtls_mpi_cmp_abs+0xa8>
   169a6:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
   169ac:	74 f2                	je     169a0 <mbedtls_mpi_cmp_abs+0x40>
   169ae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   169b4:	48 39 c2             	cmp    %rax,%rdx
   169b7:	72 31                	jb     169ea <mbedtls_mpi_cmp_abs+0x8a>
   169b9:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   169bf:	77 29                	ja     169ea <mbedtls_mpi_cmp_abs+0x8a>
   169c1:	48 85 c0             	test   %rax,%rax
   169c4:	74 35                	je     169fb <mbedtls_mpi_cmp_abs+0x9b>
   169c6:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   169ca:	eb 0c                	jmp    169d8 <mbedtls_mpi_cmp_abs+0x78>
   169cc:	0f 1f 40 00          	nopl   0x0(%rax)
   169d0:	72 42                	jb     16a14 <mbedtls_mpi_cmp_abs+0xb4>
   169d2:	48 83 e8 01          	sub    $0x1,%rax
   169d6:	74 23                	je     169fb <mbedtls_mpi_cmp_abs+0x9b>
   169d8:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
   169dd:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
   169e2:	76 ec                	jbe    169d0 <mbedtls_mpi_cmp_abs+0x70>
   169e4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   169ea:	44 89 c0             	mov    %r8d,%eax
   169ed:	c3                   	retq   
   169ee:	66 90                	xchg   %ax,%ax
   169f0:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   169f4:	31 c0                	xor    %eax,%eax
   169f6:	48 85 d2             	test   %rdx,%rdx
   169f9:	75 9c                	jne    16997 <mbedtls_mpi_cmp_abs+0x37>
   169fb:	45 31 c0             	xor    %r8d,%r8d
   169fe:	44 89 c0             	mov    %r8d,%eax
   16a01:	c3                   	retq   
   16a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16a08:	45 31 c0             	xor    %r8d,%r8d
   16a0b:	48 85 c0             	test   %rax,%rax
   16a0e:	75 9e                	jne    169ae <mbedtls_mpi_cmp_abs+0x4e>
   16a10:	44 89 c0             	mov    %r8d,%eax
   16a13:	c3                   	retq   
   16a14:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   16a1a:	eb ce                	jmp    169ea <mbedtls_mpi_cmp_abs+0x8a>
   16a1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016a20 <mbedtls_mpi_cmp_mpi>:
   16a20:	f3 0f 1e fa          	endbr64 
   16a24:	48 8b 47 08          	mov    0x8(%rdi),%rax
   16a28:	48 85 c0             	test   %rax,%rax
   16a2b:	0f 84 7f 00 00 00    	je     16ab0 <mbedtls_mpi_cmp_mpi+0x90>
   16a31:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16a35:	eb 0f                	jmp    16a46 <mbedtls_mpi_cmp_mpi+0x26>
   16a37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16a3e:	00 00 
   16a40:	48 83 e8 01          	sub    $0x1,%rax
   16a44:	74 6a                	je     16ab0 <mbedtls_mpi_cmp_mpi+0x90>
   16a46:	48 83 7c c2 f8 00    	cmpq   $0x0,-0x8(%rdx,%rax,8)
   16a4c:	74 f2                	je     16a40 <mbedtls_mpi_cmp_mpi+0x20>
   16a4e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16a52:	48 85 d2             	test   %rdx,%rdx
   16a55:	74 71                	je     16ac8 <mbedtls_mpi_cmp_mpi+0xa8>
   16a57:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   16a5b:	eb 09                	jmp    16a66 <mbedtls_mpi_cmp_mpi+0x46>
   16a5d:	0f 1f 00             	nopl   (%rax)
   16a60:	48 83 ea 01          	sub    $0x1,%rdx
   16a64:	74 6a                	je     16ad0 <mbedtls_mpi_cmp_mpi+0xb0>
   16a66:	48 83 7c d1 f8 00    	cmpq   $0x0,-0x8(%rcx,%rdx,8)
   16a6c:	74 f2                	je     16a60 <mbedtls_mpi_cmp_mpi+0x40>
   16a6e:	48 39 c2             	cmp    %rax,%rdx
   16a71:	72 55                	jb     16ac8 <mbedtls_mpi_cmp_mpi+0xa8>
   16a73:	8b 16                	mov    (%rsi),%edx
   16a75:	77 79                	ja     16af0 <mbedtls_mpi_cmp_mpi+0xd0>
   16a77:	44 8b 07             	mov    (%rdi),%r8d
   16a7a:	45 85 c0             	test   %r8d,%r8d
   16a7d:	7e 61                	jle    16ae0 <mbedtls_mpi_cmp_mpi+0xc0>
   16a7f:	85 d2                	test   %edx,%edx
   16a81:	78 76                	js     16af9 <mbedtls_mpi_cmp_mpi+0xd9>
   16a83:	48 85 c0             	test   %rax,%rax
   16a86:	74 33                	je     16abb <mbedtls_mpi_cmp_mpi+0x9b>
   16a88:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16a8c:	eb 08                	jmp    16a96 <mbedtls_mpi_cmp_mpi+0x76>
   16a8e:	66 90                	xchg   %ax,%ax
   16a90:	48 83 e8 01          	sub    $0x1,%rax
   16a94:	74 25                	je     16abb <mbedtls_mpi_cmp_mpi+0x9b>
   16a96:	48 8b 74 c1 f8       	mov    -0x8(%rcx,%rax,8),%rsi
   16a9b:	48 39 74 c2 f8       	cmp    %rsi,-0x8(%rdx,%rax,8)
   16aa0:	77 29                	ja     16acb <mbedtls_mpi_cmp_mpi+0xab>
   16aa2:	73 ec                	jae    16a90 <mbedtls_mpi_cmp_mpi+0x70>
   16aa4:	41 f7 d8             	neg    %r8d
   16aa7:	eb 22                	jmp    16acb <mbedtls_mpi_cmp_mpi+0xab>
   16aa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16ab0:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16ab4:	31 c0                	xor    %eax,%eax
   16ab6:	48 85 d2             	test   %rdx,%rdx
   16ab9:	75 9c                	jne    16a57 <mbedtls_mpi_cmp_mpi+0x37>
   16abb:	45 31 c0             	xor    %r8d,%r8d
   16abe:	44 89 c0             	mov    %r8d,%eax
   16ac1:	c3                   	retq   
   16ac2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16ac8:	44 8b 07             	mov    (%rdi),%r8d
   16acb:	44 89 c0             	mov    %r8d,%eax
   16ace:	c3                   	retq   
   16acf:	90                   	nop
   16ad0:	45 31 c0             	xor    %r8d,%r8d
   16ad3:	48 85 c0             	test   %rax,%rax
   16ad6:	75 96                	jne    16a6e <mbedtls_mpi_cmp_mpi+0x4e>
   16ad8:	44 89 c0             	mov    %r8d,%eax
   16adb:	c3                   	retq   
   16adc:	0f 1f 40 00          	nopl   0x0(%rax)
   16ae0:	79 a1                	jns    16a83 <mbedtls_mpi_cmp_mpi+0x63>
   16ae2:	85 d2                	test   %edx,%edx
   16ae4:	7e 9d                	jle    16a83 <mbedtls_mpi_cmp_mpi+0x63>
   16ae6:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   16aec:	eb dd                	jmp    16acb <mbedtls_mpi_cmp_mpi+0xab>
   16aee:	66 90                	xchg   %ax,%ax
   16af0:	f7 da                	neg    %edx
   16af2:	41 89 d0             	mov    %edx,%r8d
   16af5:	44 89 c0             	mov    %r8d,%eax
   16af8:	c3                   	retq   
   16af9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16aff:	eb ca                	jmp    16acb <mbedtls_mpi_cmp_mpi+0xab>
   16b01:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16b08:	00 00 00 00 
   16b0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016b10 <mbedtls_mpi_cmp_int>:
   16b10:	f3 0f 1e fa          	endbr64 
   16b14:	48 83 ec 38          	sub    $0x38,%rsp
   16b18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16b1f:	00 00 
   16b21:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16b26:	31 c0                	xor    %eax,%eax
   16b28:	b8 01 00 00 00       	mov    $0x1,%eax
   16b2d:	48 85 f6             	test   %rsi,%rsi
   16b30:	79 08                	jns    16b3a <mbedtls_mpi_cmp_int+0x2a>
   16b32:	48 f7 de             	neg    %rsi
   16b35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   16b3a:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   16b3f:	48 89 e6             	mov    %rsp,%rsi
   16b42:	89 04 24             	mov    %eax,(%rsp)
   16b45:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   16b4a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   16b51:	00 00 
   16b53:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16b58:	e8 c3 fe ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   16b5d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   16b62:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   16b69:	00 00 
   16b6b:	75 05                	jne    16b72 <mbedtls_mpi_cmp_int+0x62>
   16b6d:	48 83 c4 38          	add    $0x38,%rsp
   16b71:	c3                   	retq   
   16b72:	e8 e9 c6 fe ff       	callq  3260 <__stack_chk_fail@plt>
   16b77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16b7e:	00 00 

0000000000016b80 <mbedtls_mpi_add_abs>:
   16b80:	f3 0f 1e fa          	endbr64 
   16b84:	41 56                	push   %r14
   16b86:	41 55                	push   %r13
   16b88:	49 89 fd             	mov    %rdi,%r13
   16b8b:	41 54                	push   %r12
   16b8d:	55                   	push   %rbp
   16b8e:	48 89 f5             	mov    %rsi,%rbp
   16b91:	53                   	push   %rbx
   16b92:	48 39 d7             	cmp    %rdx,%rdi
   16b95:	74 14                	je     16bab <mbedtls_mpi_add_abs+0x2b>
   16b97:	48 89 d3             	mov    %rdx,%rbx
   16b9a:	48 39 f7             	cmp    %rsi,%rdi
   16b9d:	74 09                	je     16ba8 <mbedtls_mpi_add_abs+0x28>
   16b9f:	e8 2c f8 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   16ba4:	85 c0                	test   %eax,%eax
   16ba6:	75 45                	jne    16bed <mbedtls_mpi_add_abs+0x6d>
   16ba8:	48 89 dd             	mov    %rbx,%rbp
   16bab:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
   16baf:	41 c7 45 00 01 00 00 	movl   $0x1,0x0(%r13)
   16bb6:	00 
   16bb7:	48 85 db             	test   %rbx,%rbx
   16bba:	74 44                	je     16c00 <mbedtls_mpi_add_abs+0x80>
   16bbc:	48 8b 45 10          	mov    0x10(%rbp),%rax
   16bc0:	eb 0c                	jmp    16bce <mbedtls_mpi_add_abs+0x4e>
   16bc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16bc8:	48 83 eb 01          	sub    $0x1,%rbx
   16bcc:	74 32                	je     16c00 <mbedtls_mpi_add_abs+0x80>
   16bce:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   16bd4:	4c 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%r14
   16bdb:	00 
   16bdc:	74 ea                	je     16bc8 <mbedtls_mpi_add_abs+0x48>
   16bde:	48 89 de             	mov    %rbx,%rsi
   16be1:	4c 89 ef             	mov    %r13,%rdi
   16be4:	e8 b7 f5 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   16be9:	85 c0                	test   %eax,%eax
   16beb:	74 23                	je     16c10 <mbedtls_mpi_add_abs+0x90>
   16bed:	5b                   	pop    %rbx
   16bee:	5d                   	pop    %rbp
   16bef:	41 5c                	pop    %r12
   16bf1:	41 5d                	pop    %r13
   16bf3:	41 5e                	pop    %r14
   16bf5:	c3                   	retq   
   16bf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16bfd:	00 00 00 
   16c00:	5b                   	pop    %rbx
   16c01:	31 c0                	xor    %eax,%eax
   16c03:	5d                   	pop    %rbp
   16c04:	41 5c                	pop    %r12
   16c06:	41 5d                	pop    %r13
   16c08:	41 5e                	pop    %r14
   16c0a:	c3                   	retq   
   16c0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16c10:	4d 8b 65 10          	mov    0x10(%r13),%r12
   16c14:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16c18:	48 89 d9             	mov    %rbx,%rcx
   16c1b:	4c 89 e6             	mov    %r12,%rsi
   16c1e:	4c 89 e7             	mov    %r12,%rdi
   16c21:	e8 da 4d 00 00       	callq  1ba00 <mbedtls_mpi_core_add>
   16c26:	48 89 c5             	mov    %rax,%rbp
   16c29:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
   16c2d:	48 85 ed             	test   %rbp,%rbp
   16c30:	75 1f                	jne    16c51 <mbedtls_mpi_add_abs+0xd1>
   16c32:	eb cc                	jmp    16c00 <mbedtls_mpi_add_abs+0x80>
   16c34:	0f 1f 40 00          	nopl   0x0(%rax)
   16c38:	31 d2                	xor    %edx,%edx
   16c3a:	48 03 28             	add    (%rax),%rbp
   16c3d:	0f 92 c2             	setb   %dl
   16c40:	48 89 28             	mov    %rbp,(%rax)
   16c43:	48 83 c0 08          	add    $0x8,%rax
   16c47:	bd 01 00 00 00       	mov    $0x1,%ebp
   16c4c:	48 85 d2             	test   %rdx,%rdx
   16c4f:	74 af                	je     16c00 <mbedtls_mpi_add_abs+0x80>
   16c51:	49 89 dc             	mov    %rbx,%r12
   16c54:	48 83 c3 01          	add    $0x1,%rbx
   16c58:	4d 39 65 08          	cmp    %r12,0x8(%r13)
   16c5c:	77 da                	ja     16c38 <mbedtls_mpi_add_abs+0xb8>
   16c5e:	48 89 de             	mov    %rbx,%rsi
   16c61:	4c 89 ef             	mov    %r13,%rdi
   16c64:	e8 37 f5 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   16c69:	85 c0                	test   %eax,%eax
   16c6b:	75 80                	jne    16bed <mbedtls_mpi_add_abs+0x6d>
   16c6d:	49 8b 45 10          	mov    0x10(%r13),%rax
   16c71:	4a 8d 04 e0          	lea    (%rax,%r12,8),%rax
   16c75:	eb c1                	jmp    16c38 <mbedtls_mpi_add_abs+0xb8>
   16c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16c7e:	00 00 

0000000000016c80 <mbedtls_mpi_sub_abs>:
   16c80:	f3 0f 1e fa          	endbr64 
   16c84:	41 56                	push   %r14
   16c86:	41 55                	push   %r13
   16c88:	49 89 d5             	mov    %rdx,%r13
   16c8b:	41 54                	push   %r12
   16c8d:	49 89 f4             	mov    %rsi,%r12
   16c90:	55                   	push   %rbp
   16c91:	48 89 fd             	mov    %rdi,%rbp
   16c94:	53                   	push   %rbx
   16c95:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
   16c99:	48 85 db             	test   %rbx,%rbx
   16c9c:	74 32                	je     16cd0 <mbedtls_mpi_sub_abs+0x50>
   16c9e:	48 8b 42 10          	mov    0x10(%rdx),%rax
   16ca2:	eb 0a                	jmp    16cae <mbedtls_mpi_sub_abs+0x2e>
   16ca4:	0f 1f 40 00          	nopl   0x0(%rax)
   16ca8:	48 83 eb 01          	sub    $0x1,%rbx
   16cac:	74 22                	je     16cd0 <mbedtls_mpi_sub_abs+0x50>
   16cae:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   16cb4:	74 f2                	je     16ca8 <mbedtls_mpi_sub_abs+0x28>
   16cb6:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   16cbb:	48 39 de             	cmp    %rbx,%rsi
   16cbe:	73 17                	jae    16cd7 <mbedtls_mpi_sub_abs+0x57>
   16cc0:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
   16cc6:	eb 5b                	jmp    16d23 <mbedtls_mpi_sub_abs+0xa3>
   16cc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16ccf:	00 
   16cd0:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   16cd5:	31 db                	xor    %ebx,%ebx
   16cd7:	48 89 ef             	mov    %rbp,%rdi
   16cda:	e8 c1 f4 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   16cdf:	41 89 c6             	mov    %eax,%r14d
   16ce2:	85 c0                	test   %eax,%eax
   16ce4:	75 3d                	jne    16d23 <mbedtls_mpi_sub_abs+0xa3>
   16ce6:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   16ceb:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16cef:	48 39 da             	cmp    %rbx,%rdx
   16cf2:	76 09                	jbe    16cfd <mbedtls_mpi_sub_abs+0x7d>
   16cf4:	49 39 ec             	cmp    %rbp,%r12
   16cf7:	0f 85 83 00 00 00    	jne    16d80 <mbedtls_mpi_sub_abs+0x100>
   16cfd:	48 8b 45 08          	mov    0x8(%rbp),%rax
   16d01:	48 39 d0             	cmp    %rdx,%rax
   16d04:	77 52                	ja     16d58 <mbedtls_mpi_sub_abs+0xd8>
   16d06:	49 8b 55 10          	mov    0x10(%r13),%rdx
   16d0a:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   16d0f:	48 89 d9             	mov    %rbx,%rcx
   16d12:	e8 a9 4d 00 00       	callq  1bac0 <mbedtls_mpi_core_sub>
   16d17:	48 85 c0             	test   %rax,%rax
   16d1a:	75 14                	jne    16d30 <mbedtls_mpi_sub_abs+0xb0>
   16d1c:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
   16d23:	5b                   	pop    %rbx
   16d24:	44 89 f0             	mov    %r14d,%eax
   16d27:	5d                   	pop    %rbp
   16d28:	41 5c                	pop    %r12
   16d2a:	41 5d                	pop    %r13
   16d2c:	41 5e                	pop    %r14
   16d2e:	c3                   	retq   
   16d2f:	90                   	nop
   16d30:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   16d34:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
   16d38:	48 8d 3c da          	lea    (%rdx,%rbx,8),%rdi
   16d3c:	48 29 d9             	sub    %rbx,%rcx
   16d3f:	48 89 c2             	mov    %rax,%rdx
   16d42:	48 89 fe             	mov    %rdi,%rsi
   16d45:	e8 26 57 00 00       	callq  1c470 <mbedtls_mpi_core_sub_int>
   16d4a:	48 85 c0             	test   %rax,%rax
   16d4d:	74 cd                	je     16d1c <mbedtls_mpi_sub_abs+0x9c>
   16d4f:	e9 6c ff ff ff       	jmpq   16cc0 <mbedtls_mpi_sub_abs+0x40>
   16d54:	0f 1f 40 00          	nopl   0x0(%rax)
   16d58:	48 29 d0             	sub    %rdx,%rax
   16d5b:	48 8d 3c d7          	lea    (%rdi,%rdx,8),%rdi
   16d5f:	31 f6                	xor    %esi,%esi
   16d61:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
   16d68:	00 
   16d69:	4c 89 c2             	mov    %r8,%rdx
   16d6c:	e8 1f c5 fe ff       	callq  3290 <memset@plt>
   16d71:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16d75:	eb 8f                	jmp    16d06 <mbedtls_mpi_sub_abs+0x86>
   16d77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16d7e:	00 00 
   16d80:	48 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%rsi
   16d87:	00 
   16d88:	48 29 da             	sub    %rbx,%rdx
   16d8b:	48 01 f7             	add    %rsi,%rdi
   16d8e:	48 c1 e2 03          	shl    $0x3,%rdx
   16d92:	49 03 74 24 10       	add    0x10(%r12),%rsi
   16d97:	e8 74 c5 fe ff       	callq  3310 <memcpy@plt>
   16d9c:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   16da1:	48 8b 45 08          	mov    0x8(%rbp),%rax
   16da5:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   16da9:	48 39 d0             	cmp    %rdx,%rax
   16dac:	0f 86 54 ff ff ff    	jbe    16d06 <mbedtls_mpi_sub_abs+0x86>
   16db2:	eb a4                	jmp    16d58 <mbedtls_mpi_sub_abs+0xd8>
   16db4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16dbb:	00 00 00 00 
   16dbf:	90                   	nop

0000000000016dc0 <add_sub_mpi>:
   16dc0:	41 54                	push   %r12
   16dc2:	41 89 c8             	mov    %ecx,%r8d
   16dc5:	49 89 f1             	mov    %rsi,%r9
   16dc8:	49 89 d2             	mov    %rdx,%r10
   16dcb:	55                   	push   %rbp
   16dcc:	48 89 fd             	mov    %rdi,%rbp
   16dcf:	53                   	push   %rbx
   16dd0:	8b 1e                	mov    (%rsi),%ebx
   16dd2:	8b 0a                	mov    (%rdx),%ecx
   16dd4:	0f af cb             	imul   %ebx,%ecx
   16dd7:	41 0f af c8          	imul   %r8d,%ecx
   16ddb:	85 c9                	test   %ecx,%ecx
   16ddd:	79 61                	jns    16e40 <add_sub_mpi+0x80>
   16ddf:	48 89 d6             	mov    %rdx,%rsi
   16de2:	4c 89 cf             	mov    %r9,%rdi
   16de5:	e8 76 fb ff ff       	callq  16960 <mbedtls_mpi_cmp_abs>
   16dea:	41 89 c4             	mov    %eax,%r12d
   16ded:	85 c0                	test   %eax,%eax
   16def:	78 2f                	js     16e20 <add_sub_mpi+0x60>
   16df1:	4c 89 d2             	mov    %r10,%rdx
   16df4:	4c 89 ce             	mov    %r9,%rsi
   16df7:	48 89 ef             	mov    %rbp,%rdi
   16dfa:	e8 81 fe ff ff       	callq  16c80 <mbedtls_mpi_sub_abs>
   16dff:	85 c0                	test   %eax,%eax
   16e01:	75 0e                	jne    16e11 <add_sub_mpi+0x51>
   16e03:	45 85 e4             	test   %r12d,%r12d
   16e06:	ba 01 00 00 00       	mov    $0x1,%edx
   16e0b:	0f 44 da             	cmove  %edx,%ebx
   16e0e:	89 5d 00             	mov    %ebx,0x0(%rbp)
   16e11:	5b                   	pop    %rbx
   16e12:	5d                   	pop    %rbp
   16e13:	41 5c                	pop    %r12
   16e15:	c3                   	retq   
   16e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16e1d:	00 00 00 
   16e20:	4c 89 ca             	mov    %r9,%rdx
   16e23:	4c 89 d6             	mov    %r10,%rsi
   16e26:	48 89 ef             	mov    %rbp,%rdi
   16e29:	e8 52 fe ff ff       	callq  16c80 <mbedtls_mpi_sub_abs>
   16e2e:	85 c0                	test   %eax,%eax
   16e30:	75 df                	jne    16e11 <add_sub_mpi+0x51>
   16e32:	f7 db                	neg    %ebx
   16e34:	89 5d 00             	mov    %ebx,0x0(%rbp)
   16e37:	5b                   	pop    %rbx
   16e38:	5d                   	pop    %rbp
   16e39:	41 5c                	pop    %r12
   16e3b:	c3                   	retq   
   16e3c:	0f 1f 40 00          	nopl   0x0(%rax)
   16e40:	e8 3b fd ff ff       	callq  16b80 <mbedtls_mpi_add_abs>
   16e45:	85 c0                	test   %eax,%eax
   16e47:	75 c8                	jne    16e11 <add_sub_mpi+0x51>
   16e49:	f3 0f 1e fa          	endbr64 
   16e4d:	89 5d 00             	mov    %ebx,0x0(%rbp)
   16e50:	5b                   	pop    %rbx
   16e51:	5d                   	pop    %rbp
   16e52:	41 5c                	pop    %r12
   16e54:	c3                   	retq   
   16e55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16e5c:	00 00 00 00 

0000000000016e60 <mbedtls_mpi_add_mpi>:
   16e60:	f3 0f 1e fa          	endbr64 
   16e64:	b9 01 00 00 00       	mov    $0x1,%ecx
   16e69:	e9 52 ff ff ff       	jmpq   16dc0 <add_sub_mpi>
   16e6e:	66 90                	xchg   %ax,%ax

0000000000016e70 <mbedtls_mpi_sub_mpi>:
   16e70:	f3 0f 1e fa          	endbr64 
   16e74:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   16e79:	e9 42 ff ff ff       	jmpq   16dc0 <add_sub_mpi>
   16e7e:	66 90                	xchg   %ax,%ax

0000000000016e80 <mbedtls_mpi_add_int>:
   16e80:	f3 0f 1e fa          	endbr64 
   16e84:	48 83 ec 38          	sub    $0x38,%rsp
   16e88:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16e8f:	00 00 
   16e91:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16e96:	31 c0                	xor    %eax,%eax
   16e98:	b8 01 00 00 00       	mov    $0x1,%eax
   16e9d:	48 85 d2             	test   %rdx,%rdx
   16ea0:	79 08                	jns    16eaa <mbedtls_mpi_add_int+0x2a>
   16ea2:	48 f7 da             	neg    %rdx
   16ea5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   16eaa:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   16eaf:	b9 01 00 00 00       	mov    $0x1,%ecx
   16eb4:	48 89 e2             	mov    %rsp,%rdx
   16eb7:	89 04 24             	mov    %eax,(%rsp)
   16eba:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   16ebf:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   16ec6:	00 00 
   16ec8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16ecd:	e8 ee fe ff ff       	callq  16dc0 <add_sub_mpi>
   16ed2:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   16ed7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   16ede:	00 00 
   16ee0:	75 05                	jne    16ee7 <mbedtls_mpi_add_int+0x67>
   16ee2:	48 83 c4 38          	add    $0x38,%rsp
   16ee6:	c3                   	retq   
   16ee7:	e8 74 c3 fe ff       	callq  3260 <__stack_chk_fail@plt>
   16eec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016ef0 <mbedtls_mpi_sub_int>:
   16ef0:	f3 0f 1e fa          	endbr64 
   16ef4:	48 83 ec 38          	sub    $0x38,%rsp
   16ef8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16eff:	00 00 
   16f01:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16f06:	31 c0                	xor    %eax,%eax
   16f08:	b8 01 00 00 00       	mov    $0x1,%eax
   16f0d:	48 85 d2             	test   %rdx,%rdx
   16f10:	79 08                	jns    16f1a <mbedtls_mpi_sub_int+0x2a>
   16f12:	48 f7 da             	neg    %rdx
   16f15:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   16f1a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   16f1f:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   16f24:	48 89 e2             	mov    %rsp,%rdx
   16f27:	89 04 24             	mov    %eax,(%rsp)
   16f2a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   16f2f:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   16f36:	00 00 
   16f38:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   16f3d:	e8 7e fe ff ff       	callq  16dc0 <add_sub_mpi>
   16f42:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   16f47:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   16f4e:	00 00 
   16f50:	75 05                	jne    16f57 <mbedtls_mpi_sub_int+0x67>
   16f52:	48 83 c4 38          	add    $0x38,%rsp
   16f56:	c3                   	retq   
   16f57:	e8 04 c3 fe ff       	callq  3260 <__stack_chk_fail@plt>
   16f5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016f60 <mbedtls_mpi_mul_mpi>:
   16f60:	f3 0f 1e fa          	endbr64 
   16f64:	41 57                	push   %r15
   16f66:	49 89 ff             	mov    %rdi,%r15
   16f69:	41 56                	push   %r14
   16f6b:	49 89 d6             	mov    %rdx,%r14
   16f6e:	41 55                	push   %r13
   16f70:	49 89 f5             	mov    %rsi,%r13
   16f73:	41 54                	push   %r12
   16f75:	55                   	push   %rbp
   16f76:	53                   	push   %rbx
   16f77:	48 83 ec 58          	sub    $0x58,%rsp
   16f7b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16f82:	00 00 
   16f84:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   16f89:	31 c0                	xor    %eax,%eax
   16f8b:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   16f90:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   16f97:	00 
   16f98:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   16f9f:	00 00 
   16fa1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   16fa8:	00 00 
   16faa:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   16fb1:	00 
   16fb2:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   16fb9:	00 00 
   16fbb:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   16fc2:	00 00 
   16fc4:	48 89 04 24          	mov    %rax,(%rsp)
   16fc8:	48 39 f7             	cmp    %rsi,%rdi
   16fcb:	0f 84 2f 01 00 00    	je     17100 <mbedtls_mpi_mul_mpi+0x1a0>
   16fd1:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   16fd6:	4d 39 f7             	cmp    %r14,%r15
   16fd9:	0f 84 51 01 00 00    	je     17130 <mbedtls_mpi_mul_mpi+0x1d0>
   16fdf:	4d 8b 65 08          	mov    0x8(%r13),%r12
   16fe3:	4d 85 e4             	test   %r12,%r12
   16fe6:	0f 84 f4 00 00 00    	je     170e0 <mbedtls_mpi_mul_mpi+0x180>
   16fec:	49 8b 45 10          	mov    0x10(%r13),%rax
   16ff0:	eb 10                	jmp    17002 <mbedtls_mpi_mul_mpi+0xa2>
   16ff2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16ff8:	49 83 ec 01          	sub    $0x1,%r12
   16ffc:	0f 84 de 00 00 00    	je     170e0 <mbedtls_mpi_mul_mpi+0x180>
   17002:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
   17008:	74 ee                	je     16ff8 <mbedtls_mpi_mul_mpi+0x98>
   1700a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   17011:	00 
   17012:	49 8b 5e 08          	mov    0x8(%r14),%rbx
   17016:	48 85 db             	test   %rbx,%rbx
   17019:	0f 84 b1 00 00 00    	je     170d0 <mbedtls_mpi_mul_mpi+0x170>
   1701f:	49 8b 46 10          	mov    0x10(%r14),%rax
   17023:	eb 0d                	jmp    17032 <mbedtls_mpi_mul_mpi+0xd2>
   17025:	0f 1f 00             	nopl   (%rax)
   17028:	48 83 eb 01          	sub    $0x1,%rbx
   1702c:	0f 84 9e 00 00 00    	je     170d0 <mbedtls_mpi_mul_mpi+0x170>
   17032:	48 83 7c d8 f8 00    	cmpq   $0x0,-0x8(%rax,%rbx,8)
   17038:	74 ee                	je     17028 <mbedtls_mpi_mul_mpi+0xc8>
   1703a:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
   1703e:	4c 89 ff             	mov    %r15,%rdi
   17041:	e8 5a f1 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   17046:	85 c0                	test   %eax,%eax
   17048:	75 46                	jne    17090 <mbedtls_mpi_mul_mpi+0x130>
   1704a:	31 f6                	xor    %esi,%esi
   1704c:	4c 89 ff             	mov    %r15,%rdi
   1704f:	e8 ec f4 ff ff       	callq  16540 <mbedtls_mpi_lset>
   17054:	85 c0                	test   %eax,%eax
   17056:	75 38                	jne    17090 <mbedtls_mpi_mul_mpi+0x130>
   17058:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   1705c:	49 8b 75 10          	mov    0x10(%r13),%rsi
   17060:	49 89 d8             	mov    %rbx,%r8
   17063:	4c 89 e2             	mov    %r12,%rdx
   17066:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1706a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1706e:	e8 4d 4c 00 00       	callq  1bcc0 <mbedtls_mpi_core_mul>
   17073:	8b 44 24 08          	mov    0x8(%rsp),%eax
   17077:	85 c0                	test   %eax,%eax
   17079:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1707d:	74 71                	je     170f0 <mbedtls_mpi_mul_mpi+0x190>
   1707f:	41 c7 07 01 00 00 00 	movl   $0x1,(%r15)
   17086:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1708d:	00 00 00 
   17090:	48 89 ef             	mov    %rbp,%rdi
   17093:	89 44 24 08          	mov    %eax,0x8(%rsp)
   17097:	e8 a4 f0 ff ff       	callq  16140 <mbedtls_mpi_free>
   1709c:	48 8b 3c 24          	mov    (%rsp),%rdi
   170a0:	e8 9b f0 ff ff       	callq  16140 <mbedtls_mpi_free>
   170a5:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   170aa:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   170b1:	00 00 
   170b3:	8b 44 24 08          	mov    0x8(%rsp),%eax
   170b7:	0f 85 8e 00 00 00    	jne    1714b <mbedtls_mpi_mul_mpi+0x1eb>
   170bd:	48 83 c4 58          	add    $0x58,%rsp
   170c1:	5b                   	pop    %rbx
   170c2:	5d                   	pop    %rbp
   170c3:	41 5c                	pop    %r12
   170c5:	41 5d                	pop    %r13
   170c7:	41 5e                	pop    %r14
   170c9:	41 5f                	pop    %r15
   170cb:	c3                   	retq   
   170cc:	0f 1f 40 00          	nopl   0x0(%rax)
   170d0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
   170d7:	00 
   170d8:	4c 89 e6             	mov    %r12,%rsi
   170db:	e9 5e ff ff ff       	jmpq   1703e <mbedtls_mpi_mul_mpi+0xde>
   170e0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
   170e7:	00 
   170e8:	e9 25 ff ff ff       	jmpq   17012 <mbedtls_mpi_mul_mpi+0xb2>
   170ed:	0f 1f 00             	nopl   (%rax)
   170f0:	41 8b 55 00          	mov    0x0(%r13),%edx
   170f4:	41 0f af 16          	imul   (%r14),%edx
   170f8:	41 89 17             	mov    %edx,(%r15)
   170fb:	eb 93                	jmp    17090 <mbedtls_mpi_mul_mpi+0x130>
   170fd:	0f 1f 00             	nopl   (%rax)
   17100:	48 89 fe             	mov    %rdi,%rsi
   17103:	48 89 c7             	mov    %rax,%rdi
   17106:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   1710b:	49 89 c5             	mov    %rax,%r13
   1710e:	e8 bd f2 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   17113:	85 c0                	test   %eax,%eax
   17115:	0f 85 75 ff ff ff    	jne    17090 <mbedtls_mpi_mul_mpi+0x130>
   1711b:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   17120:	4d 39 f7             	cmp    %r14,%r15
   17123:	0f 85 b6 fe ff ff    	jne    16fdf <mbedtls_mpi_mul_mpi+0x7f>
   17129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17130:	4c 89 fe             	mov    %r15,%rsi
   17133:	48 89 ef             	mov    %rbp,%rdi
   17136:	e8 95 f2 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   1713b:	85 c0                	test   %eax,%eax
   1713d:	0f 85 4d ff ff ff    	jne    17090 <mbedtls_mpi_mul_mpi+0x130>
   17143:	49 89 ee             	mov    %rbp,%r14
   17146:	e9 94 fe ff ff       	jmpq   16fdf <mbedtls_mpi_mul_mpi+0x7f>
   1714b:	e8 10 c1 fe ff       	callq  3260 <__stack_chk_fail@plt>

0000000000017150 <mbedtls_mpi_mul_int>:
   17150:	f3 0f 1e fa          	endbr64 
   17154:	41 56                	push   %r14
   17156:	41 55                	push   %r13
   17158:	41 54                	push   %r12
   1715a:	55                   	push   %rbp
   1715b:	48 89 fd             	mov    %rdi,%rbp
   1715e:	53                   	push   %rbx
   1715f:	4c 8b 66 08          	mov    0x8(%rsi),%r12
   17163:	4d 85 e4             	test   %r12,%r12
   17166:	0f 84 84 00 00 00    	je     171f0 <mbedtls_mpi_mul_int+0xa0>
   1716c:	48 8b 46 10          	mov    0x10(%rsi),%rax
   17170:	48 89 f3             	mov    %rsi,%rbx
   17173:	49 89 d6             	mov    %rdx,%r14
   17176:	eb 0e                	jmp    17186 <mbedtls_mpi_mul_int+0x36>
   17178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1717f:	00 
   17180:	49 83 ec 01          	sub    $0x1,%r12
   17184:	74 6a                	je     171f0 <mbedtls_mpi_mul_int+0xa0>
   17186:	4a 83 7c e0 f8 00    	cmpq   $0x0,-0x8(%rax,%r12,8)
   1718c:	74 f2                	je     17180 <mbedtls_mpi_mul_int+0x30>
   1718e:	4d 85 f6             	test   %r14,%r14
   17191:	74 5d                	je     171f0 <mbedtls_mpi_mul_int+0xa0>
   17193:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
   17198:	48 89 ef             	mov    %rbp,%rdi
   1719b:	e8 00 f0 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   171a0:	41 89 c5             	mov    %eax,%r13d
   171a3:	85 c0                	test   %eax,%eax
   171a5:	74 11                	je     171b8 <mbedtls_mpi_mul_int+0x68>
   171a7:	5b                   	pop    %rbx
   171a8:	44 89 e8             	mov    %r13d,%eax
   171ab:	5d                   	pop    %rbp
   171ac:	41 5c                	pop    %r12
   171ae:	41 5d                	pop    %r13
   171b0:	41 5e                	pop    %r14
   171b2:	c3                   	retq   
   171b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   171b8:	48 89 de             	mov    %rbx,%rsi
   171bb:	48 89 ef             	mov    %rbp,%rdi
   171be:	e8 0d f2 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   171c3:	41 89 c5             	mov    %eax,%r13d
   171c6:	85 c0                	test   %eax,%eax
   171c8:	75 dd                	jne    171a7 <mbedtls_mpi_mul_int+0x57>
   171ca:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   171ce:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   171d2:	4d 8d 46 ff          	lea    -0x1(%r14),%r8
   171d6:	4c 89 e1             	mov    %r12,%rcx
   171d9:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   171dd:	e8 2e 49 00 00       	callq  1bb10 <mbedtls_mpi_core_mla>
   171e2:	5b                   	pop    %rbx
   171e3:	44 89 e8             	mov    %r13d,%eax
   171e6:	5d                   	pop    %rbp
   171e7:	41 5c                	pop    %r12
   171e9:	41 5d                	pop    %r13
   171eb:	41 5e                	pop    %r14
   171ed:	c3                   	retq   
   171ee:	66 90                	xchg   %ax,%ax
   171f0:	5b                   	pop    %rbx
   171f1:	48 89 ef             	mov    %rbp,%rdi
   171f4:	31 f6                	xor    %esi,%esi
   171f6:	5d                   	pop    %rbp
   171f7:	41 5c                	pop    %r12
   171f9:	41 5d                	pop    %r13
   171fb:	41 5e                	pop    %r14
   171fd:	e9 3e f3 ff ff       	jmpq   16540 <mbedtls_mpi_lset>
   17202:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17209:	00 00 00 00 
   1720d:	0f 1f 00             	nopl   (%rax)

0000000000017210 <mbedtls_mpi_read_string>:
   17210:	f3 0f 1e fa          	endbr64 
   17214:	41 57                	push   %r15
   17216:	41 56                	push   %r14
   17218:	41 55                	push   %r13
   1721a:	41 54                	push   %r12
   1721c:	55                   	push   %rbp
   1721d:	48 63 ee             	movslq %esi,%rbp
   17220:	53                   	push   %rbx
   17221:	48 83 ec 38          	sub    $0x38,%rsp
   17225:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1722c:	00 00 
   1722e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17233:	31 c0                	xor    %eax,%eax
   17235:	8d 45 fe             	lea    -0x2(%rbp),%eax
   17238:	83 f8 0e             	cmp    $0xe,%eax
   1723b:	0f 87 4f 02 00 00    	ja     17490 <mbedtls_mpi_read_string+0x280>
   17241:	0f b6 02             	movzbl (%rdx),%eax
   17244:	49 89 ff             	mov    %rdi,%r15
   17247:	48 89 d3             	mov    %rdx,%rbx
   1724a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   17251:	00 
   17252:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   17259:	00 00 
   1725b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17262:	00 00 
   17264:	84 c0                	test   %al,%al
   17266:	0f 84 9c 01 00 00    	je     17408 <mbedtls_mpi_read_string+0x1f8>
   1726c:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   17273:	00 
   17274:	3c 2d                	cmp    $0x2d,%al
   17276:	75 0c                	jne    17284 <mbedtls_mpi_read_string+0x74>
   17278:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%rsp)
   1727f:	ff 
   17280:	48 83 c3 01          	add    $0x1,%rbx
   17284:	48 89 df             	mov    %rbx,%rdi
   17287:	e8 c4 bf fe ff       	callq  3250 <strlen@plt>
   1728c:	49 89 c6             	mov    %rax,%r14
   1728f:	49 89 c5             	mov    %rax,%r13
   17292:	83 fd 10             	cmp    $0x10,%ebp
   17295:	75 79                	jne    17310 <mbedtls_mpi_read_string+0x100>
   17297:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   1729e:	ff ff 3f 
   172a1:	49 39 c6             	cmp    %rax,%r14
   172a4:	0f 87 e6 01 00 00    	ja     17490 <mbedtls_mpi_read_string+0x280>
   172aa:	4a 8d 34 b5 00 00 00 	lea    0x0(,%r14,4),%rsi
   172b1:	00 
   172b2:	31 c0                	xor    %eax,%eax
   172b4:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   172b9:	4c 89 ff             	mov    %r15,%rdi
   172bc:	40 f6 c6 3c          	test   $0x3c,%sil
   172c0:	0f 95 c0             	setne  %al
   172c3:	48 c1 ee 06          	shr    $0x6,%rsi
   172c7:	48 01 c6             	add    %rax,%rsi
   172ca:	e8 d1 ee ff ff       	callq  161a0 <mbedtls_mpi_grow>
   172cf:	85 c0                	test   %eax,%eax
   172d1:	0f 84 d9 00 00 00    	je     173b0 <mbedtls_mpi_read_string+0x1a0>
   172d7:	4c 89 e7             	mov    %r12,%rdi
   172da:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   172de:	e8 5d ee ff ff       	callq  16140 <mbedtls_mpi_free>
   172e3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   172e7:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   172ec:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   172f3:	00 00 
   172f5:	0f 85 9f 01 00 00    	jne    1749a <mbedtls_mpi_read_string+0x28a>
   172fb:	48 83 c4 38          	add    $0x38,%rsp
   172ff:	5b                   	pop    %rbx
   17300:	5d                   	pop    %rbp
   17301:	41 5c                	pop    %r12
   17303:	41 5d                	pop    %r13
   17305:	41 5e                	pop    %r14
   17307:	41 5f                	pop    %r15
   17309:	c3                   	retq   
   1730a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17310:	31 f6                	xor    %esi,%esi
   17312:	4c 89 ff             	mov    %r15,%rdi
   17315:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   1731a:	e8 21 f2 ff ff       	callq  16540 <mbedtls_mpi_lset>
   1731f:	85 c0                	test   %eax,%eax
   17321:	75 b4                	jne    172d7 <mbedtls_mpi_read_string+0xc7>
   17323:	4d 85 f6             	test   %r14,%r14
   17326:	0f 84 1b 01 00 00    	je     17447 <mbedtls_mpi_read_string+0x237>
   1732c:	4e 8d 2c 33          	lea    (%rbx,%r14,1),%r13
   17330:	eb 4f                	jmp    17381 <mbedtls_mpi_read_string+0x171>
   17332:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17338:	41 83 e8 30          	sub    $0x30,%r8d
   1733c:	4d 63 f0             	movslq %r8d,%r14
   1733f:	49 39 ee             	cmp    %rbp,%r14
   17342:	0f 83 b0 00 00 00    	jae    173f8 <mbedtls_mpi_read_string+0x1e8>
   17348:	48 89 ea             	mov    %rbp,%rdx
   1734b:	4c 89 fe             	mov    %r15,%rsi
   1734e:	4c 89 e7             	mov    %r12,%rdi
   17351:	e8 fa fd ff ff       	callq  17150 <mbedtls_mpi_mul_int>
   17356:	85 c0                	test   %eax,%eax
   17358:	0f 85 79 ff ff ff    	jne    172d7 <mbedtls_mpi_read_string+0xc7>
   1735e:	4c 89 f2             	mov    %r14,%rdx
   17361:	4c 89 e6             	mov    %r12,%rsi
   17364:	4c 89 ff             	mov    %r15,%rdi
   17367:	e8 14 fb ff ff       	callq  16e80 <mbedtls_mpi_add_int>
   1736c:	85 c0                	test   %eax,%eax
   1736e:	0f 85 63 ff ff ff    	jne    172d7 <mbedtls_mpi_read_string+0xc7>
   17374:	48 83 c3 01          	add    $0x1,%rbx
   17378:	49 39 dd             	cmp    %rbx,%r13
   1737b:	0f 84 c6 00 00 00    	je     17447 <mbedtls_mpi_read_string+0x237>
   17381:	44 0f be 03          	movsbl (%rbx),%r8d
   17385:	41 8d 50 d0          	lea    -0x30(%r8),%edx
   17389:	44 89 c0             	mov    %r8d,%eax
   1738c:	80 fa 09             	cmp    $0x9,%dl
   1738f:	76 a7                	jbe    17338 <mbedtls_mpi_read_string+0x128>
   17391:	41 8d 50 bf          	lea    -0x41(%r8),%edx
   17395:	80 fa 05             	cmp    $0x5,%dl
   17398:	0f 87 01 01 00 00    	ja     1749f <mbedtls_mpi_read_string+0x28f>
   1739e:	41 83 e8 37          	sub    $0x37,%r8d
   173a2:	4d 63 f0             	movslq %r8d,%r14
   173a5:	eb 98                	jmp    1733f <mbedtls_mpi_read_string+0x12f>
   173a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   173ae:	00 00 
   173b0:	31 f6                	xor    %esi,%esi
   173b2:	4c 89 ff             	mov    %r15,%rdi
   173b5:	e8 86 f1 ff ff       	callq  16540 <mbedtls_mpi_lset>
   173ba:	85 c0                	test   %eax,%eax
   173bc:	0f 85 15 ff ff ff    	jne    172d7 <mbedtls_mpi_read_string+0xc7>
   173c2:	31 f6                	xor    %esi,%esi
   173c4:	4d 85 f6             	test   %r14,%r14
   173c7:	74 7e                	je     17447 <mbedtls_mpi_read_string+0x237>
   173c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   173d0:	49 83 ed 01          	sub    $0x1,%r13
   173d4:	42 0f be 04 2b       	movsbl (%rbx,%r13,1),%eax
   173d9:	8d 48 d0             	lea    -0x30(%rax),%ecx
   173dc:	89 c2                	mov    %eax,%edx
   173de:	80 f9 09             	cmp    $0x9,%cl
   173e1:	76 35                	jbe    17418 <mbedtls_mpi_read_string+0x208>
   173e3:	8d 48 bf             	lea    -0x41(%rax),%ecx
   173e6:	80 f9 05             	cmp    $0x5,%cl
   173e9:	76 75                	jbe    17460 <mbedtls_mpi_read_string+0x250>
   173eb:	83 ea 61             	sub    $0x61,%edx
   173ee:	80 fa 05             	cmp    $0x5,%dl
   173f1:	76 65                	jbe    17458 <mbedtls_mpi_read_string+0x248>
   173f3:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   173f8:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   173fd:	e9 d5 fe ff ff       	jmpq   172d7 <mbedtls_mpi_read_string+0xc7>
   17402:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17408:	e8 33 ed ff ff       	callq  16140 <mbedtls_mpi_free>
   1740d:	31 c0                	xor    %eax,%eax
   1740f:	e9 d3 fe ff ff       	jmpq   172e7 <mbedtls_mpi_read_string+0xd7>
   17414:	0f 1f 40 00          	nopl   0x0(%rax)
   17418:	83 e8 30             	sub    $0x30,%eax
   1741b:	48 98                	cltq   
   1741d:	48 89 f7             	mov    %rsi,%rdi
   17420:	8d 0c b5 00 00 00 00 	lea    0x0(,%rsi,4),%ecx
   17427:	49 8b 57 10          	mov    0x10(%r15),%rdx
   1742b:	48 83 c6 01          	add    $0x1,%rsi
   1742f:	48 c1 ef 04          	shr    $0x4,%rdi
   17433:	83 e1 3c             	and    $0x3c,%ecx
   17436:	48 d3 e0             	shl    %cl,%rax
   17439:	48 09 04 fa          	or     %rax,(%rdx,%rdi,8)
   1743d:	4d 85 ed             	test   %r13,%r13
   17440:	75 8e                	jne    173d0 <mbedtls_mpi_read_string+0x1c0>
   17442:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   17447:	83 7c 24 0c ff       	cmpl   $0xffffffff,0xc(%rsp)
   1744c:	74 22                	je     17470 <mbedtls_mpi_read_string+0x260>
   1744e:	31 c0                	xor    %eax,%eax
   17450:	e9 82 fe ff ff       	jmpq   172d7 <mbedtls_mpi_read_string+0xc7>
   17455:	0f 1f 00             	nopl   (%rax)
   17458:	83 e8 57             	sub    $0x57,%eax
   1745b:	48 98                	cltq   
   1745d:	eb be                	jmp    1741d <mbedtls_mpi_read_string+0x20d>
   1745f:	90                   	nop
   17460:	83 e8 37             	sub    $0x37,%eax
   17463:	48 98                	cltq   
   17465:	eb b6                	jmp    1741d <mbedtls_mpi_read_string+0x20d>
   17467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1746e:	00 00 
   17470:	49 8b 77 08          	mov    0x8(%r15),%rsi
   17474:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   17478:	e8 73 40 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   1747d:	48 85 c0             	test   %rax,%rax
   17480:	74 cc                	je     1744e <mbedtls_mpi_read_string+0x23e>
   17482:	41 c7 07 ff ff ff ff 	movl   $0xffffffff,(%r15)
   17489:	31 c0                	xor    %eax,%eax
   1748b:	e9 47 fe ff ff       	jmpq   172d7 <mbedtls_mpi_read_string+0xc7>
   17490:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17495:	e9 4d fe ff ff       	jmpq   172e7 <mbedtls_mpi_read_string+0xd7>
   1749a:	e8 c1 bd fe ff       	callq  3260 <__stack_chk_fail@plt>
   1749f:	83 e8 61             	sub    $0x61,%eax
   174a2:	3c 05                	cmp    $0x5,%al
   174a4:	0f 87 4e ff ff ff    	ja     173f8 <mbedtls_mpi_read_string+0x1e8>
   174aa:	41 83 e8 57          	sub    $0x57,%r8d
   174ae:	4d 63 f0             	movslq %r8d,%r14
   174b1:	e9 89 fe ff ff       	jmpq   1733f <mbedtls_mpi_read_string+0x12f>
   174b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   174bd:	00 00 00 

00000000000174c0 <mbedtls_mpi_read_file>:
   174c0:	f3 0f 1e fa          	endbr64 
   174c4:	41 55                	push   %r13
   174c6:	41 54                	push   %r12
   174c8:	55                   	push   %rbp
   174c9:	48 81 ec c0 09 00 00 	sub    $0x9c0,%rsp
   174d0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   174d7:	00 00 
   174d9:	48 89 84 24 b8 09 00 	mov    %rax,0x9b8(%rsp)
   174e0:	00 
   174e1:	31 c0                	xor    %eax,%eax
   174e3:	8d 46 fe             	lea    -0x2(%rsi),%eax
   174e6:	83 f8 0e             	cmp    $0xe,%eax
   174e9:	0f 87 4f 01 00 00    	ja     1763e <mbedtls_mpi_read_file+0x17e>
   174ef:	48 89 e5             	mov    %rsp,%rbp
   174f2:	31 c0                	xor    %eax,%eax
   174f4:	49 89 fd             	mov    %rdi,%r13
   174f7:	b9 36 01 00 00       	mov    $0x136,%ecx
   174fc:	48 89 ef             	mov    %rbp,%rdi
   174ff:	41 89 f4             	mov    %esi,%r12d
   17502:	be b3 09 00 00       	mov    $0x9b3,%esi
   17507:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1750a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   17510:	48 89 ef             	mov    %rbp,%rdi
   17513:	e8 98 bd fe ff       	callq  32b0 <fgets@plt>
   17518:	48 85 c0             	test   %rax,%rax
   1751b:	0f 84 2b 01 00 00    	je     1764c <mbedtls_mpi_read_file+0x18c>
   17521:	48 89 ea             	mov    %rbp,%rdx
   17524:	8b 0a                	mov    (%rdx),%ecx
   17526:	48 83 c2 04          	add    $0x4,%rdx
   1752a:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
   17530:	f7 d1                	not    %ecx
   17532:	21 c8                	and    %ecx,%eax
   17534:	25 80 80 80 80       	and    $0x80808080,%eax
   17539:	74 e9                	je     17524 <mbedtls_mpi_read_file+0x64>
   1753b:	89 c1                	mov    %eax,%ecx
   1753d:	c1 e9 10             	shr    $0x10,%ecx
   17540:	a9 80 80 00 00       	test   $0x8080,%eax
   17545:	0f 44 c1             	cmove  %ecx,%eax
   17548:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
   1754c:	48 0f 44 d1          	cmove  %rcx,%rdx
   17550:	89 c7                	mov    %eax,%edi
   17552:	40 00 c7             	add    %al,%dil
   17555:	48 83 da 03          	sbb    $0x3,%rdx
   17559:	48 29 ea             	sub    %rbp,%rdx
   1755c:	48 81 fa b2 09 00 00 	cmp    $0x9b2,%rdx
   17563:	0f 84 dc 00 00 00    	je     17645 <mbedtls_mpi_read_file+0x185>
   17569:	48 85 d2             	test   %rdx,%rdx
   1756c:	0f 85 7e 00 00 00    	jne    175f0 <mbedtls_mpi_read_file+0x130>
   17572:	48 89 ea             	mov    %rbp,%rdx
   17575:	49 63 fc             	movslq %r12d,%rdi
   17578:	eb 14                	jmp    1758e <mbedtls_mpi_read_file+0xce>
   1757a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17580:	83 e8 30             	sub    $0x30,%eax
   17583:	48 98                	cltq   
   17585:	48 83 ea 01          	sub    $0x1,%rdx
   17589:	48 39 c7             	cmp    %rax,%rdi
   1758c:	76 32                	jbe    175c0 <mbedtls_mpi_read_file+0x100>
   1758e:	49 89 d0             	mov    %rdx,%r8
   17591:	48 39 ea             	cmp    %rbp,%rdx
   17594:	76 2a                	jbe    175c0 <mbedtls_mpi_read_file+0x100>
   17596:	0f be 42 ff          	movsbl -0x1(%rdx),%eax
   1759a:	8d 70 d0             	lea    -0x30(%rax),%esi
   1759d:	89 c1                	mov    %eax,%ecx
   1759f:	40 80 fe 09          	cmp    $0x9,%sil
   175a3:	76 db                	jbe    17580 <mbedtls_mpi_read_file+0xc0>
   175a5:	8d 70 bf             	lea    -0x41(%rax),%esi
   175a8:	40 80 fe 05          	cmp    $0x5,%sil
   175ac:	0f 87 a9 00 00 00    	ja     1765b <mbedtls_mpi_read_file+0x19b>
   175b2:	83 e8 37             	sub    $0x37,%eax
   175b5:	48 83 ea 01          	sub    $0x1,%rdx
   175b9:	48 98                	cltq   
   175bb:	48 39 c7             	cmp    %rax,%rdi
   175be:	77 ce                	ja     1758e <mbedtls_mpi_read_file+0xce>
   175c0:	4c 89 c2             	mov    %r8,%rdx
   175c3:	44 89 e6             	mov    %r12d,%esi
   175c6:	4c 89 ef             	mov    %r13,%rdi
   175c9:	e8 42 fc ff ff       	callq  17210 <mbedtls_mpi_read_string>
   175ce:	48 8b bc 24 b8 09 00 	mov    0x9b8(%rsp),%rdi
   175d5:	00 
   175d6:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   175dd:	00 00 
   175df:	75 75                	jne    17656 <mbedtls_mpi_read_file+0x196>
   175e1:	48 81 c4 c0 09 00 00 	add    $0x9c0,%rsp
   175e8:	5d                   	pop    %rbp
   175e9:	41 5c                	pop    %r12
   175eb:	41 5d                	pop    %r13
   175ed:	c3                   	retq   
   175ee:	66 90                	xchg   %ax,%ax
   175f0:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   175f4:	0f b6 0c 04          	movzbl (%rsp,%rax,1),%ecx
   175f8:	80 f9 0a             	cmp    $0xa,%cl
   175fb:	74 23                	je     17620 <mbedtls_mpi_read_file+0x160>
   175fd:	48 01 ea             	add    %rbp,%rdx
   17600:	80 f9 0d             	cmp    $0xd,%cl
   17603:	0f 85 6c ff ff ff    	jne    17575 <mbedtls_mpi_read_file+0xb5>
   17609:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
   1760d:	48 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%rdx
   17612:	e9 5e ff ff ff       	jmpq   17575 <mbedtls_mpi_read_file+0xb5>
   17617:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1761e:	00 00 
   17620:	c6 04 04 00          	movb   $0x0,(%rsp,%rax,1)
   17624:	48 85 c0             	test   %rax,%rax
   17627:	0f 84 45 ff ff ff    	je     17572 <mbedtls_mpi_read_file+0xb2>
   1762d:	48 8d 72 fe          	lea    -0x2(%rdx),%rsi
   17631:	0f b6 4c 14 fe       	movzbl -0x2(%rsp,%rdx,1),%ecx
   17636:	48 89 c2             	mov    %rax,%rdx
   17639:	48 89 f0             	mov    %rsi,%rax
   1763c:	eb bf                	jmp    175fd <mbedtls_mpi_read_file+0x13d>
   1763e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17643:	eb 89                	jmp    175ce <mbedtls_mpi_read_file+0x10e>
   17645:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1764a:	eb 82                	jmp    175ce <mbedtls_mpi_read_file+0x10e>
   1764c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   17651:	e9 78 ff ff ff       	jmpq   175ce <mbedtls_mpi_read_file+0x10e>
   17656:	e8 05 bc fe ff       	callq  3260 <__stack_chk_fail@plt>
   1765b:	83 e9 61             	sub    $0x61,%ecx
   1765e:	80 f9 05             	cmp    $0x5,%cl
   17661:	0f 87 59 ff ff ff    	ja     175c0 <mbedtls_mpi_read_file+0x100>
   17667:	83 e8 57             	sub    $0x57,%eax
   1766a:	48 98                	cltq   
   1766c:	e9 14 ff ff ff       	jmpq   17585 <mbedtls_mpi_read_file+0xc5>
   17671:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17678:	00 00 00 00 
   1767c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017680 <mbedtls_mpi_div_mpi>:
   17680:	f3 0f 1e fa          	endbr64 
   17684:	41 57                	push   %r15
   17686:	49 89 fb             	mov    %rdi,%r11
   17689:	41 56                	push   %r14
   1768b:	41 55                	push   %r13
   1768d:	41 54                	push   %r12
   1768f:	55                   	push   %rbp
   17690:	48 89 d5             	mov    %rdx,%rbp
   17693:	53                   	push   %rbx
   17694:	48 89 cb             	mov    %rcx,%rbx
   17697:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
   1769e:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   176a3:	4c 8d bc 24 30 01 00 	lea    0x130(%rsp),%r15
   176aa:	00 
   176ab:	48 89 cf             	mov    %rcx,%rdi
   176ae:	4c 8d ac 24 50 01 00 	lea    0x150(%rsp),%r13
   176b5:	00 
   176b6:	48 89 34 24          	mov    %rsi,(%rsp)
   176ba:	4c 89 fe             	mov    %r15,%rsi
   176bd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   176c4:	00 00 
   176c6:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   176cd:	00 
   176ce:	31 c0                	xor    %eax,%eax
   176d0:	4c 89 ac 24 40 01 00 	mov    %r13,0x140(%rsp)
   176d7:	00 
   176d8:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
   176df:	00 00 00 00 00 
   176e4:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   176eb:	01 00 00 00 
   176ef:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   176f6:	00 01 00 00 00 
   176fb:	e8 20 f3 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   17700:	85 c0                	test   %eax,%eax
   17702:	0f 84 68 05 00 00    	je     17c70 <mbedtls_mpi_div_mpi+0x5f0>
   17708:	48 89 de             	mov    %rbx,%rsi
   1770b:	48 89 ef             	mov    %rbp,%rdi
   1770e:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   17715:	01 00 00 00 
   17719:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   17720:	00 00 00 00 00 
   17725:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   1772c:	00 00 00 00 00 
   17731:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   17738:	01 00 00 00 
   1773c:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   17743:	00 00 00 00 00 
   17748:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   1774f:	00 00 00 00 00 
   17754:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   1775b:	01 00 00 00 
   1775f:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   17766:	00 00 00 00 00 
   1776b:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   17772:	00 00 00 00 00 
   17777:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   1777e:	01 00 00 00 
   17782:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   17789:	00 00 00 00 00 
   1778e:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   17795:	00 00 00 00 00 
   1779a:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   177a1:	01 00 00 00 
   177a5:	48 c7 84 24 18 01 00 	movq   $0x3,0x118(%rsp)
   177ac:	00 03 00 00 00 
   177b1:	4c 89 ac 24 20 01 00 	mov    %r13,0x120(%rsp)
   177b8:	00 
   177b9:	e8 a2 f1 ff ff       	callq  16960 <mbedtls_mpi_cmp_abs>
   177be:	85 c0                	test   %eax,%eax
   177c0:	0f 89 ca 00 00 00    	jns    17890 <mbedtls_mpi_div_mpi+0x210>
   177c6:	4d 85 db             	test   %r11,%r11
   177c9:	74 13                	je     177de <mbedtls_mpi_div_mpi+0x15e>
   177cb:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   177d0:	31 f6                	xor    %esi,%esi
   177d2:	e8 69 ed ff ff       	callq  16540 <mbedtls_mpi_lset>
   177d7:	41 89 c4             	mov    %eax,%r12d
   177da:	85 c0                	test   %eax,%eax
   177dc:	75 1a                	jne    177f8 <mbedtls_mpi_div_mpi+0x178>
   177de:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   177e3:	74 73                	je     17858 <mbedtls_mpi_div_mpi+0x1d8>
   177e5:	48 8b 3c 24          	mov    (%rsp),%rdi
   177e9:	48 89 ee             	mov    %rbp,%rsi
   177ec:	e8 df eb ff ff       	callq  163d0 <mbedtls_mpi_copy>
   177f1:	41 89 c4             	mov    %eax,%r12d
   177f4:	85 c0                	test   %eax,%eax
   177f6:	74 60                	je     17858 <mbedtls_mpi_div_mpi+0x1d8>
   177f8:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   177ff:	00 
   17800:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   17807:	00 
   17808:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
   1780f:	00 
   17810:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17815:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   1781c:	00 
   1781d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17822:	4c 89 c7             	mov    %r8,%rdi
   17825:	e8 16 e9 ff ff       	callq  16140 <mbedtls_mpi_free>
   1782a:	4c 89 f7             	mov    %r14,%rdi
   1782d:	e8 0e e9 ff ff       	callq  16140 <mbedtls_mpi_free>
   17832:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17837:	e8 04 e9 ff ff       	callq  16140 <mbedtls_mpi_free>
   1783c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   17841:	e8 fa e8 ff ff       	callq  16140 <mbedtls_mpi_free>
   17846:	be 18 00 00 00       	mov    $0x18,%esi
   1784b:	4c 89 ef             	mov    %r13,%rdi
   1784e:	e8 cd d9 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   17853:	eb 06                	jmp    1785b <mbedtls_mpi_div_mpi+0x1db>
   17855:	0f 1f 00             	nopl   (%rax)
   17858:	45 31 e4             	xor    %r12d,%r12d
   1785b:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
   17862:	00 
   17863:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1786a:	00 00 
   1786c:	0f 85 5d 06 00 00    	jne    17ecf <mbedtls_mpi_div_mpi+0x84f>
   17872:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
   17879:	44 89 e0             	mov    %r12d,%eax
   1787c:	5b                   	pop    %rbx
   1787d:	5d                   	pop    %rbp
   1787e:	41 5c                	pop    %r12
   17880:	41 5d                	pop    %r13
   17882:	41 5e                	pop    %r14
   17884:	41 5f                	pop    %r15
   17886:	c3                   	retq   
   17887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1788e:	00 00 
   17890:	4c 8d 84 24 90 00 00 	lea    0x90(%rsp),%r8
   17897:	00 
   17898:	48 89 ee             	mov    %rbp,%rsi
   1789b:	4c 89 c7             	mov    %r8,%rdi
   1789e:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   178a3:	e8 28 eb ff ff       	callq  163d0 <mbedtls_mpi_copy>
   178a8:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   178ad:	85 c0                	test   %eax,%eax
   178af:	41 89 c4             	mov    %eax,%r12d
   178b2:	0f 85 48 ff ff ff    	jne    17800 <mbedtls_mpi_div_mpi+0x180>
   178b8:	4c 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%r14
   178bf:	00 
   178c0:	48 89 de             	mov    %rbx,%rsi
   178c3:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   178c8:	4c 89 f7             	mov    %r14,%rdi
   178cb:	e8 00 eb ff ff       	callq  163d0 <mbedtls_mpi_copy>
   178d0:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   178d5:	85 c0                	test   %eax,%eax
   178d7:	41 89 c4             	mov    %eax,%r12d
   178da:	74 24                	je     17900 <mbedtls_mpi_div_mpi+0x280>
   178dc:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   178e3:	00 
   178e4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   178e9:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   178f0:	00 
   178f1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   178f6:	e9 27 ff ff ff       	jmpq   17822 <mbedtls_mpi_div_mpi+0x1a2>
   178fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17900:	48 8b 45 08          	mov    0x8(%rbp),%rax
   17904:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   17909:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   17910:	01 00 00 00 
   17914:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   1791b:	01 00 00 00 
   1791f:	48 8d 70 02          	lea    0x2(%rax),%rsi
   17923:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   1792a:	00 
   1792b:	48 89 c7             	mov    %rax,%rdi
   1792e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17933:	e8 68 e8 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   17938:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   1793f:	00 
   17940:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17945:	85 c0                	test   %eax,%eax
   17947:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1794c:	41 89 c4             	mov    %eax,%r12d
   1794f:	0f 85 cd fe ff ff    	jne    17822 <mbedtls_mpi_div_mpi+0x1a2>
   17955:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1795a:	31 f6                	xor    %esi,%esi
   1795c:	e8 df eb ff ff       	callq  16540 <mbedtls_mpi_lset>
   17961:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17966:	85 c0                	test   %eax,%eax
   17968:	41 89 c4             	mov    %eax,%r12d
   1796b:	0f 85 b1 fe ff ff    	jne    17822 <mbedtls_mpi_div_mpi+0x1a2>
   17971:	48 8b 45 08          	mov    0x8(%rbp),%rax
   17975:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1797a:	48 8d 70 02          	lea    0x2(%rax),%rsi
   1797e:	e8 1d e8 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   17983:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   17988:	85 c0                	test   %eax,%eax
   1798a:	41 89 c4             	mov    %eax,%r12d
   1798d:	0f 85 8f fe ff ff    	jne    17822 <mbedtls_mpi_div_mpi+0x1a2>
   17993:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   1799a:	00 
   1799b:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   179a2:	00 
   179a3:	e8 48 3b 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   179a8:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   179ad:	83 e0 3f             	and    $0x3f,%eax
   179b0:	48 83 f8 3f          	cmp    $0x3f,%rax
   179b4:	0f 84 c1 02 00 00    	je     17c7b <mbedtls_mpi_div_mpi+0x5fb>
   179ba:	ba 3f 00 00 00       	mov    $0x3f,%edx
   179bf:	4c 89 c7             	mov    %r8,%rdi
   179c2:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   179c7:	48 29 c2             	sub    %rax,%rdx
   179ca:	48 89 d6             	mov    %rdx,%rsi
   179cd:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   179d2:	e8 29 ee ff ff       	callq  16800 <mbedtls_mpi_shift_l>
   179d7:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   179dc:	85 c0                	test   %eax,%eax
   179de:	41 89 c4             	mov    %eax,%r12d
   179e1:	0f 85 3b fe ff ff    	jne    17822 <mbedtls_mpi_div_mpi+0x1a2>
   179e7:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   179ec:	4c 89 f7             	mov    %r14,%rdi
   179ef:	e8 0c ee ff ff       	callq  16800 <mbedtls_mpi_shift_l>
   179f4:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   179f9:	85 c0                	test   %eax,%eax
   179fb:	41 89 c4             	mov    %eax,%r12d
   179fe:	0f 85 1e fe ff ff    	jne    17822 <mbedtls_mpi_div_mpi+0x1a2>
   17a04:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   17a0b:	00 
   17a0c:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   17a13:	00 
   17a14:	4c 89 f7             	mov    %r14,%rdi
   17a17:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   17a1c:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   17a21:	48 29 c2             	sub    %rax,%rdx
   17a24:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17a29:	48 89 d0             	mov    %rdx,%rax
   17a2c:	48 c1 e0 06          	shl    $0x6,%rax
   17a30:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   17a35:	48 89 c6             	mov    %rax,%rsi
   17a38:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   17a3d:	e8 be ed ff ff       	callq  16800 <mbedtls_mpi_shift_l>
   17a42:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17a47:	85 c0                	test   %eax,%eax
   17a49:	41 89 c4             	mov    %eax,%r12d
   17a4c:	0f 85 d0 fd ff ff    	jne    17822 <mbedtls_mpi_div_mpi+0x1a2>
   17a52:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   17a57:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   17a5c:	4c 89 c3             	mov    %r8,%rbx
   17a5f:	44 89 64 24 30       	mov    %r12d,0x30(%rsp)
   17a64:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   17a6b:	00 
   17a6c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17a71:	49 89 c4             	mov    %rax,%r12
   17a74:	eb 34                	jmp    17aaa <mbedtls_mpi_div_mpi+0x42a>
   17a76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17a7d:	00 00 00 
   17a80:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17a85:	4c 89 f2             	mov    %r14,%rdx
   17a88:	48 89 de             	mov    %rbx,%rsi
   17a8b:	48 89 df             	mov    %rbx,%rdi
   17a8e:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   17a95:	00 
   17a96:	4c 01 e0             	add    %r12,%rax
   17a99:	48 83 00 01          	addq   $0x1,(%rax)
   17a9d:	e8 1e f3 ff ff       	callq  16dc0 <add_sub_mpi>
   17aa2:	85 c0                	test   %eax,%eax
   17aa4:	0f 85 df 01 00 00    	jne    17c89 <mbedtls_mpi_div_mpi+0x609>
   17aaa:	4c 89 f6             	mov    %r14,%rsi
   17aad:	48 89 df             	mov    %rbx,%rdi
   17ab0:	e8 6b ef ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   17ab5:	85 c0                	test   %eax,%eax
   17ab7:	79 c7                	jns    17a80 <mbedtls_mpi_div_mpi+0x400>
   17ab9:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   17ac0:	00 
   17ac1:	49 89 d8             	mov    %rbx,%r8
   17ac4:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   17ac9:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
   17ace:	48 85 f6             	test   %rsi,%rsi
   17ad1:	0f 85 d7 03 00 00    	jne    17eae <mbedtls_mpi_div_mpi+0x82e>
   17ad7:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   17adc:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   17ae1:	48 83 e8 01          	sub    $0x1,%rax
   17ae5:	48 83 e9 01          	sub    $0x1,%rcx
   17ae9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   17aee:	48 39 c8             	cmp    %rcx,%rax
   17af1:	0f 86 de 02 00 00    	jbe    17dd5 <mbedtls_mpi_div_mpi+0x755>
   17af7:	48 89 c8             	mov    %rcx,%rax
   17afa:	48 8d 14 cd 00 00 00 	lea    0x0(,%rcx,8),%rdx
   17b01:	00 
   17b02:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   17b07:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   17b0e:	00 
   17b0f:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   17b14:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   17b19:	48 83 e9 08          	sub    $0x8,%rcx
   17b1d:	44 89 64 24 5c       	mov    %r12d,0x5c(%rsp)
   17b22:	49 89 c4             	mov    %rax,%r12
   17b25:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
   17b2a:	48 89 d5             	mov    %rdx,%rbp
   17b2d:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)
   17b32:	48 89 cb             	mov    %rcx,%rbx
   17b35:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
   17b3a:	4d 89 c7             	mov    %r8,%r15
   17b3d:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
   17b42:	49 89 f5             	mov    %rsi,%r13
   17b45:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   17b4c:	00 
   17b4d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   17b52:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
   17b59:	00 
   17b5a:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
   17b61:	00 
   17b62:	49 89 cb             	mov    %rcx,%r11
   17b65:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   17b6c:	00 
   17b6d:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   17b72:	49 01 fb             	add    %rdi,%r11
   17b75:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   17b7a:	4c 8d 44 39 f8       	lea    -0x8(%rcx,%rdi,1),%r8
   17b7f:	4d 8d 14 19          	lea    (%r9,%rbx,1),%r10
   17b83:	49 8b 33             	mov    (%r11),%rsi
   17b86:	48 8b 14 28          	mov    (%rax,%rbp,1),%rdx
   17b8a:	48 39 d6             	cmp    %rdx,%rsi
   17b8d:	0f 82 01 01 00 00    	jb     17c94 <mbedtls_mpi_div_mpi+0x614>
   17b93:	49 c7 02 ff ff ff ff 	movq   $0xffffffffffffffff,(%r10)
   17b9a:	31 c0                	xor    %eax,%eax
   17b9c:	48 83 7c 24 30 01    	cmpq   $0x1,0x30(%rsp)
   17ba2:	74 0f                	je     17bb3 <mbedtls_mpi_div_mpi+0x533>
   17ba4:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   17ba9:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   17bae:	48 8b 44 08 f0       	mov    -0x10(%rax,%rcx,1),%rax
   17bb3:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   17bba:	00 
   17bbb:	49 8b 00             	mov    (%r8),%rax
   17bbe:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   17bc5:	00 
   17bc6:	49 8b 03             	mov    (%r11),%rax
   17bc9:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   17bd0:	00 
   17bd1:	49 8b 02             	mov    (%r10),%rax
   17bd4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17bd8:	49 89 12             	mov    %rdx,(%r10)
   17bdb:	eb 64                	jmp    17c41 <mbedtls_mpi_div_mpi+0x5c1>
   17bdd:	0f 1f 00             	nopl   (%rax)
   17be0:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
   17be7:	00 
   17be8:	31 c9                	xor    %ecx,%ecx
   17bea:	4d 85 e4             	test   %r12,%r12
   17bed:	74 05                	je     17bf4 <mbedtls_mpi_div_mpi+0x574>
   17bef:	48 8b 4c 2a f8       	mov    -0x8(%rdx,%rbp,1),%rcx
   17bf4:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   17bfb:	00 
   17bfc:	4c 89 f6             	mov    %r14,%rsi
   17bff:	4c 89 f7             	mov    %r14,%rdi
   17c02:	48 89 08             	mov    %rcx,(%rax)
   17c05:	48 8b 14 2a          	mov    (%rdx,%rbp,1),%rdx
   17c09:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17c0d:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   17c14:	00 
   17c15:	48 8b 14 18          	mov    (%rax,%rbx,1),%rdx
   17c19:	e8 32 f5 ff ff       	callq  17150 <mbedtls_mpi_mul_int>
   17c1e:	85 c0                	test   %eax,%eax
   17c20:	75 35                	jne    17c57 <mbedtls_mpi_div_mpi+0x5d7>
   17c22:	4c 89 ee             	mov    %r13,%rsi
   17c25:	4c 89 f7             	mov    %r14,%rdi
   17c28:	e8 f3 ed ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   17c2d:	4c 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%r9
   17c34:	00 
   17c35:	49 8b 14 19          	mov    (%r9,%rbx,1),%rdx
   17c39:	85 c0                	test   %eax,%eax
   17c3b:	0f 8e c8 00 00 00    	jle    17d09 <mbedtls_mpi_div_mpi+0x689>
   17c41:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   17c45:	31 f6                	xor    %esi,%esi
   17c47:	4c 89 f7             	mov    %r14,%rdi
   17c4a:	49 89 04 19          	mov    %rax,(%r9,%rbx,1)
   17c4e:	e8 ed e8 ff ff       	callq  16540 <mbedtls_mpi_lset>
   17c53:	85 c0                	test   %eax,%eax
   17c55:	74 89                	je     17be0 <mbedtls_mpi_div_mpi+0x560>
   17c57:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
   17c5c:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   17c61:	4d 89 f8             	mov    %r15,%r8
   17c64:	41 89 c4             	mov    %eax,%r12d
   17c67:	e9 b6 fb ff ff       	jmpq   17822 <mbedtls_mpi_div_mpi+0x1a2>
   17c6c:	0f 1f 40 00          	nopl   0x0(%rax)
   17c70:	41 bc f4 ff ff ff    	mov    $0xfffffff4,%r12d
   17c76:	e9 e0 fb ff ff       	jmpq   1785b <mbedtls_mpi_div_mpi+0x1db>
   17c7b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17c82:	00 00 
   17c84:	e9 7b fd ff ff       	jmpq   17a04 <mbedtls_mpi_div_mpi+0x384>
   17c89:	49 89 d8             	mov    %rbx,%r8
   17c8c:	41 89 c4             	mov    %eax,%r12d
   17c8f:	e9 8e fb ff ff       	jmpq   17822 <mbedtls_mpi_div_mpi+0x1a2>
   17c94:	49 8b 38             	mov    (%r8),%rdi
   17c97:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17c9e:	48 85 d2             	test   %rdx,%rdx
   17ca1:	74 5e                	je     17d01 <mbedtls_mpi_div_mpi+0x681>
   17ca3:	31 c9                	xor    %ecx,%ecx
   17ca5:	4c 89 8c 24 88 00 00 	mov    %r9,0x88(%rsp)
   17cac:	00 
   17cad:	4c 89 94 24 80 00 00 	mov    %r10,0x80(%rsp)
   17cb4:	00 
   17cb5:	4c 89 5c 24 78       	mov    %r11,0x78(%rsp)
   17cba:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   17cbf:	e8 5c 8a 00 00       	callq  20720 <__udivti3>
   17cc4:	b9 00 00 00 00       	mov    $0x0,%ecx
   17cc9:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   17cd0:	4c 8b 8c 24 88 00 00 	mov    0x88(%rsp),%r9
   17cd7:	00 
   17cd8:	48 89 d7             	mov    %rdx,%rdi
   17cdb:	48 39 c6             	cmp    %rax,%rsi
   17cde:	48 89 c2             	mov    %rax,%rdx
   17ce1:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17ce8:	48 19 f9             	sbb    %rdi,%rcx
   17ceb:	4c 8b 5c 24 78       	mov    0x78(%rsp),%r11
   17cf0:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   17cf5:	48 0f 43 c2          	cmovae %rdx,%rax
   17cf9:	4c 8b 94 24 80 00 00 	mov    0x80(%rsp),%r10
   17d00:	00 
   17d01:	49 89 02             	mov    %rax,(%r10)
   17d04:	e9 91 fe ff ff       	jmpq   17b9a <mbedtls_mpi_div_mpi+0x51a>
   17d09:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   17d0e:	e8 3d f4 ff ff       	callq  17150 <mbedtls_mpi_mul_int>
   17d13:	85 c0                	test   %eax,%eax
   17d15:	0f 85 3c ff ff ff    	jne    17c57 <mbedtls_mpi_div_mpi+0x5d7>
   17d1b:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   17d22:	00 
   17d23:	4c 89 f7             	mov    %r14,%rdi
   17d26:	48 89 c6             	mov    %rax,%rsi
   17d29:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17d2e:	e8 cd ea ff ff       	callq  16800 <mbedtls_mpi_shift_l>
   17d33:	85 c0                	test   %eax,%eax
   17d35:	0f 85 1c ff ff ff    	jne    17c57 <mbedtls_mpi_div_mpi+0x5d7>
   17d3b:	83 c9 ff             	or     $0xffffffff,%ecx
   17d3e:	4c 89 f2             	mov    %r14,%rdx
   17d41:	4c 89 fe             	mov    %r15,%rsi
   17d44:	4c 89 ff             	mov    %r15,%rdi
   17d47:	e8 74 f0 ff ff       	callq  16dc0 <add_sub_mpi>
   17d4c:	85 c0                	test   %eax,%eax
   17d4e:	0f 85 03 ff ff ff    	jne    17c57 <mbedtls_mpi_div_mpi+0x5d7>
   17d54:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17d59:	4c 89 ff             	mov    %r15,%rdi
   17d5c:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   17d63:	00 
   17d64:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   17d6b:	00 00 00 00 00 
   17d70:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   17d77:	01 00 00 00 
   17d7b:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   17d82:	00 01 00 00 00 
   17d87:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
   17d8e:	00 
   17d8f:	e8 8c ec ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   17d94:	85 c0                	test   %eax,%eax
   17d96:	0f 88 38 01 00 00    	js     17ed4 <mbedtls_mpi_div_mpi+0x854>
   17d9c:	48 83 6c 24 30 01    	subq   $0x1,0x30(%rsp)
   17da2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   17da7:	48 83 eb 08          	sub    $0x8,%rbx
   17dab:	49 39 c4             	cmp    %rax,%r12
   17dae:	0f 82 91 fd ff ff    	jb     17b45 <mbedtls_mpi_div_mpi+0x4c5>
   17db4:	4d 89 f8             	mov    %r15,%r8
   17db7:	44 8b 64 24 5c       	mov    0x5c(%rsp),%r12d
   17dbc:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
   17dc1:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   17dc6:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   17dcb:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
   17dd0:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   17dd5:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   17ddb:	74 2e                	je     17e0b <mbedtls_mpi_div_mpi+0x78b>
   17ddd:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   17de2:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   17de7:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   17dec:	e8 df e5 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   17df1:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17df6:	85 c0                	test   %eax,%eax
   17df8:	0f 85 50 01 00 00    	jne    17f4e <mbedtls_mpi_div_mpi+0x8ce>
   17dfe:	8b 45 00             	mov    0x0(%rbp),%eax
   17e01:	0f af 03             	imul   (%rbx),%eax
   17e04:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   17e09:	89 01                	mov    %eax,(%rcx)
   17e0b:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   17e10:	0f 84 0c fa ff ff    	je     17822 <mbedtls_mpi_div_mpi+0x1a2>
   17e16:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   17e1d:	00 
   17e1e:	48 85 f6             	test   %rsi,%rsi
   17e21:	0f 85 06 01 00 00    	jne    17f2d <mbedtls_mpi_div_mpi+0x8ad>
   17e27:	48 8b 1c 24          	mov    (%rsp),%rbx
   17e2b:	8b 45 00             	mov    0x0(%rbp),%eax
   17e2e:	4c 89 c6             	mov    %r8,%rsi
   17e31:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   17e36:	48 89 df             	mov    %rbx,%rdi
   17e39:	89 84 24 90 00 00 00 	mov    %eax,0x90(%rsp)
   17e40:	e8 8b e5 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   17e45:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   17e4a:	85 c0                	test   %eax,%eax
   17e4c:	0f 85 fc 00 00 00    	jne    17f4e <mbedtls_mpi_div_mpi+0x8ce>
   17e52:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   17e59:	00 
   17e5a:	4c 89 fe             	mov    %r15,%rsi
   17e5d:	48 89 df             	mov    %rbx,%rdi
   17e60:	4c 89 04 24          	mov    %r8,(%rsp)
   17e64:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   17e6b:	00 00 00 00 00 
   17e70:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   17e77:	01 00 00 00 
   17e7b:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
   17e82:	00 01 00 00 00 
   17e87:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
   17e8e:	00 
   17e8f:	e8 8c eb ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   17e94:	4c 8b 04 24          	mov    (%rsp),%r8
   17e98:	85 c0                	test   %eax,%eax
   17e9a:	0f 85 82 f9 ff ff    	jne    17822 <mbedtls_mpi_div_mpi+0x1a2>
   17ea0:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   17ea6:	45 31 e4             	xor    %r12d,%r12d
   17ea9:	e9 74 f9 ff ff       	jmpq   17822 <mbedtls_mpi_div_mpi+0x1a2>
   17eae:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   17eb3:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   17eb8:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   17ebf:	00 
   17ec0:	e8 4b 3a 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   17ec5:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   17eca:	e9 08 fc ff ff       	jmpq   17ad7 <mbedtls_mpi_div_mpi+0x457>
   17ecf:	e8 8c b3 fe ff       	callq  3260 <__stack_chk_fail@plt>
   17ed4:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   17ed9:	4c 89 f7             	mov    %r14,%rdi
   17edc:	e8 ef e4 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   17ee1:	85 c0                	test   %eax,%eax
   17ee3:	0f 85 6e fd ff ff    	jne    17c57 <mbedtls_mpi_div_mpi+0x5d7>
   17ee9:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   17eee:	4c 89 f7             	mov    %r14,%rdi
   17ef1:	e8 0a e9 ff ff       	callq  16800 <mbedtls_mpi_shift_l>
   17ef6:	85 c0                	test   %eax,%eax
   17ef8:	0f 85 59 fd ff ff    	jne    17c57 <mbedtls_mpi_div_mpi+0x5d7>
   17efe:	b9 01 00 00 00       	mov    $0x1,%ecx
   17f03:	4c 89 f2             	mov    %r14,%rdx
   17f06:	4c 89 fe             	mov    %r15,%rsi
   17f09:	4c 89 ff             	mov    %r15,%rdi
   17f0c:	e8 af ee ff ff       	callq  16dc0 <add_sub_mpi>
   17f11:	85 c0                	test   %eax,%eax
   17f13:	0f 85 3e fd ff ff    	jne    17c57 <mbedtls_mpi_div_mpi+0x5d7>
   17f19:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   17f20:	00 
   17f21:	48 01 d8             	add    %rbx,%rax
   17f24:	48 83 28 01          	subq   $0x1,(%rax)
   17f28:	e9 6f fe ff ff       	jmpq   17d9c <mbedtls_mpi_div_mpi+0x71c>
   17f2d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   17f32:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   17f39:	00 
   17f3a:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   17f3f:	e8 cc 39 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   17f44:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   17f49:	e9 d9 fe ff ff       	jmpq   17e27 <mbedtls_mpi_div_mpi+0x7a7>
   17f4e:	41 89 c4             	mov    %eax,%r12d
   17f51:	e9 cc f8 ff ff       	jmpq   17822 <mbedtls_mpi_div_mpi+0x1a2>
   17f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17f5d:	00 00 00 

0000000000017f60 <mbedtls_mpi_div_int>:
   17f60:	f3 0f 1e fa          	endbr64 
   17f64:	48 83 ec 38          	sub    $0x38,%rsp
   17f68:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17f6f:	00 00 
   17f71:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17f76:	31 c0                	xor    %eax,%eax
   17f78:	b8 01 00 00 00       	mov    $0x1,%eax
   17f7d:	48 85 c9             	test   %rcx,%rcx
   17f80:	79 08                	jns    17f8a <mbedtls_mpi_div_int+0x2a>
   17f82:	48 f7 d9             	neg    %rcx
   17f85:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   17f8a:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   17f8f:	48 89 e1             	mov    %rsp,%rcx
   17f92:	89 04 24             	mov    %eax,(%rsp)
   17f95:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   17f9a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   17fa1:	00 00 
   17fa3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17fa8:	e8 d3 f6 ff ff       	callq  17680 <mbedtls_mpi_div_mpi>
   17fad:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   17fb2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   17fb9:	00 00 
   17fbb:	75 05                	jne    17fc2 <mbedtls_mpi_div_int+0x62>
   17fbd:	48 83 c4 38          	add    $0x38,%rsp
   17fc1:	c3                   	retq   
   17fc2:	e8 99 b2 fe ff       	callq  3260 <__stack_chk_fail@plt>
   17fc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17fce:	00 00 

0000000000017fd0 <mbedtls_mpi_mod_mpi>:
   17fd0:	f3 0f 1e fa          	endbr64 
   17fd4:	41 56                	push   %r14
   17fd6:	49 89 f1             	mov    %rsi,%r9
   17fd9:	41 55                	push   %r13
   17fdb:	41 54                	push   %r12
   17fdd:	55                   	push   %rbp
   17fde:	48 89 d5             	mov    %rdx,%rbp
   17fe1:	53                   	push   %rbx
   17fe2:	48 89 fb             	mov    %rdi,%rbx
   17fe5:	48 89 d7             	mov    %rdx,%rdi
   17fe8:	48 83 ec 30          	sub    $0x30,%rsp
   17fec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17ff3:	00 00 
   17ff5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17ffa:	31 c0                	xor    %eax,%eax
   17ffc:	49 89 e4             	mov    %rsp,%r12
   17fff:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   18004:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1800b:	00 00 
   1800d:	4c 89 e6             	mov    %r12,%rsi
   18010:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   18017:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1801e:	00 00 
   18020:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   18025:	e8 f6 e9 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1802a:	85 c0                	test   %eax,%eax
   1802c:	0f 88 c3 00 00 00    	js     180f5 <mbedtls_mpi_mod_mpi+0x125>
   18032:	48 89 e9             	mov    %rbp,%rcx
   18035:	4c 89 ca             	mov    %r9,%rdx
   18038:	48 89 de             	mov    %rbx,%rsi
   1803b:	31 ff                	xor    %edi,%edi
   1803d:	e8 3e f6 ff ff       	callq  17680 <mbedtls_mpi_div_mpi>
   18042:	41 89 c6             	mov    %eax,%r14d
   18045:	85 c0                	test   %eax,%eax
   18047:	74 22                	je     1806b <mbedtls_mpi_mod_mpi+0x9b>
   18049:	e9 82 00 00 00       	jmpq   180d0 <mbedtls_mpi_mod_mpi+0x100>
   1804e:	66 90                	xchg   %ax,%ax
   18050:	b9 01 00 00 00       	mov    $0x1,%ecx
   18055:	48 89 ea             	mov    %rbp,%rdx
   18058:	48 89 de             	mov    %rbx,%rsi
   1805b:	48 89 df             	mov    %rbx,%rdi
   1805e:	e8 5d ed ff ff       	callq  16dc0 <add_sub_mpi>
   18063:	85 c0                	test   %eax,%eax
   18065:	0f 85 85 00 00 00    	jne    180f0 <mbedtls_mpi_mod_mpi+0x120>
   1806b:	4c 89 e6             	mov    %r12,%rsi
   1806e:	48 89 df             	mov    %rbx,%rdi
   18071:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   18078:	00 00 
   1807a:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   18081:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   18088:	00 00 
   1808a:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   1808f:	e8 8c e9 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   18094:	85 c0                	test   %eax,%eax
   18096:	78 b8                	js     18050 <mbedtls_mpi_mod_mpi+0x80>
   18098:	eb 1d                	jmp    180b7 <mbedtls_mpi_mod_mpi+0xe7>
   1809a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   180a0:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   180a5:	48 89 ea             	mov    %rbp,%rdx
   180a8:	48 89 de             	mov    %rbx,%rsi
   180ab:	48 89 df             	mov    %rbx,%rdi
   180ae:	e8 0d ed ff ff       	callq  16dc0 <add_sub_mpi>
   180b3:	85 c0                	test   %eax,%eax
   180b5:	75 39                	jne    180f0 <mbedtls_mpi_mod_mpi+0x120>
   180b7:	48 89 ee             	mov    %rbp,%rsi
   180ba:	48 89 df             	mov    %rbx,%rdi
   180bd:	e8 5e e9 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   180c2:	85 c0                	test   %eax,%eax
   180c4:	79 da                	jns    180a0 <mbedtls_mpi_mod_mpi+0xd0>
   180c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   180cd:	00 00 00 
   180d0:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   180d5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   180dc:	00 00 
   180de:	75 1d                	jne    180fd <mbedtls_mpi_mod_mpi+0x12d>
   180e0:	48 83 c4 30          	add    $0x30,%rsp
   180e4:	44 89 f0             	mov    %r14d,%eax
   180e7:	5b                   	pop    %rbx
   180e8:	5d                   	pop    %rbp
   180e9:	41 5c                	pop    %r12
   180eb:	41 5d                	pop    %r13
   180ed:	41 5e                	pop    %r14
   180ef:	c3                   	retq   
   180f0:	41 89 c6             	mov    %eax,%r14d
   180f3:	eb db                	jmp    180d0 <mbedtls_mpi_mod_mpi+0x100>
   180f5:	41 be f6 ff ff ff    	mov    $0xfffffff6,%r14d
   180fb:	eb d3                	jmp    180d0 <mbedtls_mpi_mod_mpi+0x100>
   180fd:	e8 5e b1 fe ff       	callq  3260 <__stack_chk_fail@plt>
   18102:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   18109:	00 00 00 00 
   1810d:	0f 1f 00             	nopl   (%rax)

0000000000018110 <mbedtls_mpi_mod_int>:
   18110:	f3 0f 1e fa          	endbr64 
   18114:	49 89 d0             	mov    %rdx,%r8
   18117:	48 85 d2             	test   %rdx,%rdx
   1811a:	0f 84 8c 00 00 00    	je     181ac <mbedtls_mpi_mod_int+0x9c>
   18120:	0f 88 8c 00 00 00    	js     181b2 <mbedtls_mpi_mod_int+0xa2>
   18126:	48 83 fa 01          	cmp    $0x1,%rdx
   1812a:	74 64                	je     18190 <mbedtls_mpi_mod_int+0x80>
   1812c:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   18130:	4d 85 c9             	test   %r9,%r9
   18133:	74 5b                	je     18190 <mbedtls_mpi_mod_int+0x80>
   18135:	4c 8b 56 10          	mov    0x10(%rsi),%r10
   18139:	31 d2                	xor    %edx,%edx
   1813b:	49 83 f8 02          	cmp    $0x2,%r8
   1813f:	74 5f                	je     181a0 <mbedtls_mpi_mod_int+0x90>
   18141:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18148:	4b 8b 4c ca f8       	mov    -0x8(%r10,%r9,8),%rcx
   1814d:	48 c1 e2 20          	shl    $0x20,%rdx
   18151:	48 89 c8             	mov    %rcx,%rax
   18154:	48 c1 e8 20          	shr    $0x20,%rax
   18158:	48 09 d0             	or     %rdx,%rax
   1815b:	31 d2                	xor    %edx,%edx
   1815d:	49 f7 f0             	div    %r8
   18160:	89 c8                	mov    %ecx,%eax
   18162:	48 c1 e2 20          	shl    $0x20,%rdx
   18166:	48 09 d0             	or     %rdx,%rax
   18169:	31 d2                	xor    %edx,%edx
   1816b:	49 f7 f0             	div    %r8
   1816e:	49 83 e9 01          	sub    $0x1,%r9
   18172:	75 d4                	jne    18148 <mbedtls_mpi_mod_int+0x38>
   18174:	8b 06                	mov    (%rsi),%eax
   18176:	85 c0                	test   %eax,%eax
   18178:	79 0a                	jns    18184 <mbedtls_mpi_mod_int+0x74>
   1817a:	49 29 d0             	sub    %rdx,%r8
   1817d:	48 85 d2             	test   %rdx,%rdx
   18180:	49 0f 45 d0          	cmovne %r8,%rdx
   18184:	48 89 17             	mov    %rdx,(%rdi)
   18187:	31 c0                	xor    %eax,%eax
   18189:	c3                   	retq   
   1818a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18190:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   18197:	31 c0                	xor    %eax,%eax
   18199:	c3                   	retq   
   1819a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   181a0:	49 8b 02             	mov    (%r10),%rax
   181a3:	83 e0 01             	and    $0x1,%eax
   181a6:	48 89 07             	mov    %rax,(%rdi)
   181a9:	31 c0                	xor    %eax,%eax
   181ab:	c3                   	retq   
   181ac:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
   181b1:	c3                   	retq   
   181b2:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   181b7:	c3                   	retq   
   181b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   181bf:	00 

00000000000181c0 <mbedtls_mpi_write_string>:
   181c0:	f3 0f 1e fa          	endbr64 
   181c4:	41 57                	push   %r15
   181c6:	41 56                	push   %r14
   181c8:	41 55                	push   %r13
   181ca:	4c 63 ee             	movslq %esi,%r13
   181cd:	41 54                	push   %r12
   181cf:	55                   	push   %rbp
   181d0:	53                   	push   %rbx
   181d1:	48 83 ec 78          	sub    $0x78,%rsp
   181d5:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   181da:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   181e1:	00 00 
   181e3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   181e8:	31 c0                	xor    %eax,%eax
   181ea:	41 8d 45 fe          	lea    -0x2(%r13),%eax
   181ee:	83 f8 0e             	cmp    $0xe,%eax
   181f1:	0f 87 48 02 00 00    	ja     1843f <mbedtls_mpi_write_string+0x27f>
   181f7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   181fb:	48 89 fd             	mov    %rdi,%rbp
   181fe:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   18202:	48 89 d3             	mov    %rdx,%rbx
   18205:	49 89 ce             	mov    %rcx,%r14
   18208:	e8 e3 32 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   1820d:	48 89 c2             	mov    %rax,%rdx
   18210:	48 d1 ea             	shr    %rdx
   18213:	41 83 fd 03          	cmp    $0x3,%r13d
   18217:	48 0f 4f c2          	cmovg  %rdx,%rax
   1821b:	48 89 c2             	mov    %rax,%rdx
   1821e:	48 d1 ea             	shr    %rdx
   18221:	41 83 fd 10          	cmp    $0x10,%r13d
   18225:	48 0f 44 c2          	cmove  %rdx,%rax
   18229:	48 83 c0 04          	add    $0x4,%rax
   1822d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   18231:	4c 39 f0             	cmp    %r14,%rax
   18234:	0f 87 0f 02 00 00    	ja     18449 <mbedtls_mpi_write_string+0x289>
   1823a:	83 7d 00 ff          	cmpl   $0xffffffff,0x0(%rbp)
   1823e:	49 89 df             	mov    %rbx,%r15
   18241:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   18248:	00 
   18249:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   18250:	00 00 
   18252:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   18259:	00 00 
   1825b:	75 0b                	jne    18268 <mbedtls_mpi_write_string+0xa8>
   1825d:	c6 03 2d             	movb   $0x2d,(%rbx)
   18260:	4c 8d 7b 01          	lea    0x1(%rbx),%r15
   18264:	49 83 ee 01          	sub    $0x1,%r14
   18268:	41 83 fd 10          	cmp    $0x10,%r13d
   1826c:	0f 85 ee 00 00 00    	jne    18360 <mbedtls_mpi_write_string+0x1a0>
   18272:	4c 8b 5d 08          	mov    0x8(%rbp),%r11
   18276:	4d 85 db             	test   %r11,%r11
   18279:	0f 84 8b 00 00 00    	je     1830a <mbedtls_mpi_write_string+0x14a>
   1827f:	4e 8d 0c dd f8 ff ff 	lea    -0x8(,%r11,8),%r9
   18286:	ff 
   18287:	45 31 ed             	xor    %r13d,%r13d
   1828a:	48 8d 3d cf cf 00 00 	lea    0xcfcf(%rip),%rdi        # 25260 <aria_sb1+0x120>
   18291:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18298:	be 07 00 00 00       	mov    $0x7,%esi
   1829d:	4d 8d 53 01          	lea    0x1(%r11),%r10
   182a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   182a8:	48 8b 45 10          	mov    0x10(%rbp),%rax
   182ac:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
   182b3:	4a 8b 04 08          	mov    (%rax,%r9,1),%rax
   182b7:	48 d3 e8             	shr    %cl,%rax
   182ba:	89 c2                	mov    %eax,%edx
   182bc:	81 e2 ff 00 00 00    	and    $0xff,%edx
   182c2:	75 0f                	jne    182d3 <mbedtls_mpi_write_string+0x113>
   182c4:	4d 85 ed             	test   %r13,%r13
   182c7:	75 0a                	jne    182d3 <mbedtls_mpi_write_string+0x113>
   182c9:	49 8d 0c 32          	lea    (%r10,%rsi,1),%rcx
   182cd:	48 83 f9 02          	cmp    $0x2,%rcx
   182d1:	75 23                	jne    182f6 <mbedtls_mpi_write_string+0x136>
   182d3:	c1 fa 04             	sar    $0x4,%edx
   182d6:	83 e0 0f             	and    $0xf,%eax
   182d9:	49 83 c7 02          	add    $0x2,%r15
   182dd:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   182e3:	48 63 d2             	movslq %edx,%rdx
   182e6:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   182ea:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
   182ee:	41 88 47 ff          	mov    %al,-0x1(%r15)
   182f2:	41 88 57 fe          	mov    %dl,-0x2(%r15)
   182f6:	48 83 ee 01          	sub    $0x1,%rsi
   182fa:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
   182fe:	75 a8                	jne    182a8 <mbedtls_mpi_write_string+0xe8>
   18300:	49 83 e9 08          	sub    $0x8,%r9
   18304:	49 83 eb 01          	sub    $0x1,%r11
   18308:	75 8e                	jne    18298 <mbedtls_mpi_write_string+0xd8>
   1830a:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   1830f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18314:	4d 8d 47 01          	lea    0x1(%r15),%r8
   18318:	41 c6 07 00          	movb   $0x0,(%r15)
   1831c:	49 29 d8             	sub    %rbx,%r8
   1831f:	4c 89 00             	mov    %r8,(%rax)
   18322:	31 c0                	xor    %eax,%eax
   18324:	4c 89 e7             	mov    %r12,%rdi
   18327:	89 44 24 08          	mov    %eax,0x8(%rsp)
   1832b:	e8 10 de ff ff       	callq  16140 <mbedtls_mpi_free>
   18330:	8b 44 24 08          	mov    0x8(%rsp),%eax
   18334:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   18339:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   18340:	00 00 
   18342:	0f 85 13 01 00 00    	jne    1845b <mbedtls_mpi_write_string+0x29b>
   18348:	48 83 c4 78          	add    $0x78,%rsp
   1834c:	5b                   	pop    %rbx
   1834d:	5d                   	pop    %rbp
   1834e:	41 5c                	pop    %r12
   18350:	41 5d                	pop    %r13
   18352:	41 5e                	pop    %r14
   18354:	41 5f                	pop    %r15
   18356:	c3                   	retq   
   18357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1835e:	00 00 
   18360:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   18365:	48 89 ee             	mov    %rbp,%rsi
   18368:	4c 89 e7             	mov    %r12,%rdi
   1836b:	e8 60 e0 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   18370:	85 c0                	test   %eax,%eax
   18372:	75 b0                	jne    18324 <mbedtls_mpi_write_string+0x164>
   18374:	83 7c 24 20 ff       	cmpl   $0xffffffff,0x20(%rsp)
   18379:	75 08                	jne    18383 <mbedtls_mpi_write_string+0x1c3>
   1837b:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   18382:	00 
   18383:	4d 01 fe             	add    %r15,%r14
   18386:	4c 89 f5             	mov    %r14,%rbp
   18389:	e9 85 00 00 00       	jmpq   18413 <mbedtls_mpi_write_string+0x253>
   1838e:	66 90                	xchg   %ax,%ax
   18390:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   18395:	4c 89 ea             	mov    %r13,%rdx
   18398:	4c 89 e6             	mov    %r12,%rsi
   1839b:	e8 70 fd ff ff       	callq  18110 <mbedtls_mpi_mod_int>
   183a0:	85 c0                	test   %eax,%eax
   183a2:	75 80                	jne    18324 <mbedtls_mpi_write_string+0x164>
   183a4:	31 f6                	xor    %esi,%esi
   183a6:	4c 89 e9             	mov    %r13,%rcx
   183a9:	4c 89 e2             	mov    %r12,%rdx
   183ac:	4c 89 e7             	mov    %r12,%rdi
   183af:	e8 ac fb ff ff       	callq  17f60 <mbedtls_mpi_div_int>
   183b4:	85 c0                	test   %eax,%eax
   183b6:	0f 85 68 ff ff ff    	jne    18324 <mbedtls_mpi_write_string+0x164>
   183bc:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   183c1:	48 83 ed 01          	sub    $0x1,%rbp
   183c5:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   183ca:	4c 89 e7             	mov    %r12,%rdi
   183cd:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   183d4:	00 00 
   183d6:	48 83 fa 09          	cmp    $0x9,%rdx
   183da:	8d 4a 30             	lea    0x30(%rdx),%ecx
   183dd:	8d 42 37             	lea    0x37(%rdx),%eax
   183e0:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   183e7:	00 
   183e8:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   183ef:	00 00 
   183f1:	0f 46 c1             	cmovbe %ecx,%eax
   183f4:	88 45 00             	mov    %al,0x0(%rbp)
   183f7:	4c 89 f0             	mov    %r14,%rax
   183fa:	48 29 e8             	sub    %rbp,%rax
   183fd:	49 89 c3             	mov    %rax,%r11
   18400:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   18405:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1840a:	e8 11 e6 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1840f:	85 c0                	test   %eax,%eax
   18411:	74 13                	je     18426 <mbedtls_mpi_write_string+0x266>
   18413:	4c 39 fd             	cmp    %r15,%rbp
   18416:	0f 85 74 ff ff ff    	jne    18390 <mbedtls_mpi_write_string+0x1d0>
   1841c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   18421:	e9 fe fe ff ff       	jmpq   18324 <mbedtls_mpi_write_string+0x164>
   18426:	4d 89 de             	mov    %r11,%r14
   18429:	4c 89 ff             	mov    %r15,%rdi
   1842c:	4c 89 da             	mov    %r11,%rdx
   1842f:	48 89 ee             	mov    %rbp,%rsi
   18432:	e8 19 af fe ff       	callq  3350 <memmove@plt>
   18437:	4d 01 f7             	add    %r14,%r15
   1843a:	e9 d0 fe ff ff       	jmpq   1830f <mbedtls_mpi_write_string+0x14f>
   1843f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18444:	e9 eb fe ff ff       	jmpq   18334 <mbedtls_mpi_write_string+0x174>
   18449:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1844e:	48 89 03             	mov    %rax,(%rbx)
   18451:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   18456:	e9 d9 fe ff ff       	jmpq   18334 <mbedtls_mpi_write_string+0x174>
   1845b:	e8 00 ae fe ff       	callq  3260 <__stack_chk_fail@plt>

0000000000018460 <mbedtls_mpi_write_file>:
   18460:	f3 0f 1e fa          	endbr64 
   18464:	41 57                	push   %r15
   18466:	41 56                	push   %r14
   18468:	41 55                	push   %r13
   1846a:	41 54                	push   %r12
   1846c:	55                   	push   %rbp
   1846d:	53                   	push   %rbx
   1846e:	48 81 ec d8 09 00 00 	sub    $0x9d8,%rsp
   18475:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1847c:	00 00 
   1847e:	48 89 84 24 c8 09 00 	mov    %rax,0x9c8(%rsp)
   18485:	00 
   18486:	31 c0                	xor    %eax,%eax
   18488:	8d 42 fe             	lea    -0x2(%rdx),%eax
   1848b:	83 f8 0e             	cmp    $0xe,%eax
   1848e:	0f 87 3c 01 00 00    	ja     185d0 <mbedtls_mpi_write_file+0x170>
   18494:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   18499:	31 c0                	xor    %eax,%eax
   1849b:	49 89 fe             	mov    %rdi,%r14
   1849e:	49 89 cc             	mov    %rcx,%r12
   184a1:	48 89 ef             	mov    %rbp,%rdi
   184a4:	b9 36 01 00 00       	mov    $0x136,%ecx
   184a9:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   184ae:	49 89 f1             	mov    %rsi,%r9
   184b1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   184b4:	89 d6                	mov    %edx,%esi
   184b6:	b9 b2 09 00 00       	mov    $0x9b2,%ecx
   184bb:	48 89 ea             	mov    %rbp,%rdx
   184be:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   184c4:	4c 89 cf             	mov    %r9,%rdi
   184c7:	e8 f4 fc ff ff       	callq  181c0 <mbedtls_mpi_write_string>
   184cc:	41 89 c5             	mov    %eax,%r13d
   184cf:	85 c0                	test   %eax,%eax
   184d1:	0f 85 91 00 00 00    	jne    18568 <mbedtls_mpi_write_file+0x108>
   184d7:	4d 85 f6             	test   %r14,%r14
   184da:	0f 84 b0 00 00 00    	je     18590 <mbedtls_mpi_write_file+0x130>
   184e0:	4c 89 f7             	mov    %r14,%rdi
   184e3:	e8 68 ad fe ff       	callq  3250 <strlen@plt>
   184e8:	49 89 c7             	mov    %rax,%r15
   184eb:	48 89 eb             	mov    %rbp,%rbx
   184ee:	8b 13                	mov    (%rbx),%edx
   184f0:	48 83 c3 04          	add    $0x4,%rbx
   184f4:	8d 82 ff fe fe fe    	lea    -0x1010101(%rdx),%eax
   184fa:	f7 d2                	not    %edx
   184fc:	21 d0                	and    %edx,%eax
   184fe:	25 80 80 80 80       	and    $0x80808080,%eax
   18503:	74 e9                	je     184ee <mbedtls_mpi_write_file+0x8e>
   18505:	89 c2                	mov    %eax,%edx
   18507:	c1 ea 10             	shr    $0x10,%edx
   1850a:	a9 80 80 00 00       	test   $0x8080,%eax
   1850f:	0f 44 c2             	cmove  %edx,%eax
   18512:	48 8d 53 02          	lea    0x2(%rbx),%rdx
   18516:	48 0f 44 da          	cmove  %rdx,%rbx
   1851a:	89 c1                	mov    %eax,%ecx
   1851c:	00 c1                	add    %al,%cl
   1851e:	48 83 db 03          	sbb    $0x3,%rbx
   18522:	48 29 eb             	sub    %rbp,%rbx
   18525:	c6 44 1c 10 0d       	movb   $0xd,0x10(%rsp,%rbx,1)
   1852a:	c6 44 1c 11 0a       	movb   $0xa,0x11(%rsp,%rbx,1)
   1852f:	4d 85 e4             	test   %r12,%r12
   18532:	74 6c                	je     185a0 <mbedtls_mpi_write_file+0x140>
   18534:	4c 89 e1             	mov    %r12,%rcx
   18537:	4c 89 fa             	mov    %r15,%rdx
   1853a:	be 01 00 00 00       	mov    $0x1,%esi
   1853f:	4c 89 f7             	mov    %r14,%rdi
   18542:	e8 29 ae fe ff       	callq  3370 <fwrite@plt>
   18547:	4c 39 f8             	cmp    %r15,%rax
   1854a:	75 74                	jne    185c0 <mbedtls_mpi_write_file+0x160>
   1854c:	48 83 c3 02          	add    $0x2,%rbx
   18550:	4c 89 e1             	mov    %r12,%rcx
   18553:	be 01 00 00 00       	mov    $0x1,%esi
   18558:	48 89 ef             	mov    %rbp,%rdi
   1855b:	48 89 da             	mov    %rbx,%rdx
   1855e:	e8 0d ae fe ff       	callq  3370 <fwrite@plt>
   18563:	48 39 d8             	cmp    %rbx,%rax
   18566:	75 58                	jne    185c0 <mbedtls_mpi_write_file+0x160>
   18568:	48 8b 84 24 c8 09 00 	mov    0x9c8(%rsp),%rax
   1856f:	00 
   18570:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   18577:	00 00 
   18579:	75 5d                	jne    185d8 <mbedtls_mpi_write_file+0x178>
   1857b:	48 81 c4 d8 09 00 00 	add    $0x9d8,%rsp
   18582:	44 89 e8             	mov    %r13d,%eax
   18585:	5b                   	pop    %rbx
   18586:	5d                   	pop    %rbp
   18587:	41 5c                	pop    %r12
   18589:	41 5d                	pop    %r13
   1858b:	41 5e                	pop    %r14
   1858d:	41 5f                	pop    %r15
   1858f:	c3                   	retq   
   18590:	45 31 ff             	xor    %r15d,%r15d
   18593:	4c 8d 35 37 cd 00 00 	lea    0xcd37(%rip),%r14        # 252d1 <aria_sb1+0x191>
   1859a:	e9 4c ff ff ff       	jmpq   184eb <mbedtls_mpi_write_file+0x8b>
   1859f:	90                   	nop
   185a0:	48 89 e9             	mov    %rbp,%rcx
   185a3:	4c 89 f2             	mov    %r14,%rdx
   185a6:	48 8d 35 c4 cc 00 00 	lea    0xccc4(%rip),%rsi        # 25271 <aria_sb1+0x131>
   185ad:	31 c0                	xor    %eax,%eax
   185af:	bf 01 00 00 00       	mov    $0x1,%edi
   185b4:	e8 87 ad fe ff       	callq  3340 <__printf_chk@plt>
   185b9:	eb ad                	jmp    18568 <mbedtls_mpi_write_file+0x108>
   185bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   185c0:	41 bd fe ff ff ff    	mov    $0xfffffffe,%r13d
   185c6:	eb a0                	jmp    18568 <mbedtls_mpi_write_file+0x108>
   185c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   185cf:	00 
   185d0:	41 bd fc ff ff ff    	mov    $0xfffffffc,%r13d
   185d6:	eb 90                	jmp    18568 <mbedtls_mpi_write_file+0x108>
   185d8:	e8 83 ac fe ff       	callq  3260 <__stack_chk_fail@plt>
   185dd:	0f 1f 00             	nopl   (%rax)

00000000000185e0 <mpi_check_small_factors.part.0>:
   185e0:	41 55                	push   %r13
   185e2:	41 54                	push   %r12
   185e4:	41 bc 03 00 00 00    	mov    $0x3,%r12d
   185ea:	55                   	push   %rbp
   185eb:	48 89 fd             	mov    %rdi,%rbp
   185ee:	53                   	push   %rbx
   185ef:	48 8d 1d 2e d1 00 00 	lea    0xd12e(%rip),%rbx        # 25724 <small_prime+0x4>
   185f6:	48 83 ec 18          	sub    $0x18,%rsp
   185fa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18601:	00 00 
   18603:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18608:	31 c0                	xor    %eax,%eax
   1860a:	49 89 e5             	mov    %rsp,%r13
   1860d:	eb 26                	jmp    18635 <mpi_check_small_factors.part.0+0x55>
   1860f:	90                   	nop
   18610:	4c 89 e2             	mov    %r12,%rdx
   18613:	48 89 ee             	mov    %rbp,%rsi
   18616:	4c 89 ef             	mov    %r13,%rdi
   18619:	e8 f2 fa ff ff       	callq  18110 <mbedtls_mpi_mod_int>
   1861e:	85 c0                	test   %eax,%eax
   18620:	75 27                	jne    18649 <mpi_check_small_factors.part.0+0x69>
   18622:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   18627:	74 3f                	je     18668 <mpi_check_small_factors.part.0+0x88>
   18629:	4c 63 23             	movslq (%rbx),%r12
   1862c:	48 83 c3 04          	add    $0x4,%rbx
   18630:	45 85 e4             	test   %r12d,%r12d
   18633:	7e 14                	jle    18649 <mpi_check_small_factors.part.0+0x69>
   18635:	4c 89 e6             	mov    %r12,%rsi
   18638:	48 89 ef             	mov    %rbp,%rdi
   1863b:	e8 d0 e4 ff ff       	callq  16b10 <mbedtls_mpi_cmp_int>
   18640:	85 c0                	test   %eax,%eax
   18642:	7f cc                	jg     18610 <mpi_check_small_factors.part.0+0x30>
   18644:	b8 01 00 00 00       	mov    $0x1,%eax
   18649:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1864e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   18655:	00 00 
   18657:	75 16                	jne    1866f <mpi_check_small_factors.part.0+0x8f>
   18659:	48 83 c4 18          	add    $0x18,%rsp
   1865d:	5b                   	pop    %rbx
   1865e:	5d                   	pop    %rbp
   1865f:	41 5c                	pop    %r12
   18661:	41 5d                	pop    %r13
   18663:	c3                   	retq   
   18664:	0f 1f 40 00          	nopl   0x0(%rax)
   18668:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1866d:	eb da                	jmp    18649 <mpi_check_small_factors.part.0+0x69>
   1866f:	e8 ec ab fe ff       	callq  3260 <__stack_chk_fail@plt>
   18674:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1867b:	00 00 00 00 
   1867f:	90                   	nop

0000000000018680 <mbedtls_mpi_exp_mod>:
   18680:	f3 0f 1e fa          	endbr64 
   18684:	41 57                	push   %r15
   18686:	41 56                	push   %r14
   18688:	41 55                	push   %r13
   1868a:	49 89 d5             	mov    %rdx,%r13
   1868d:	41 54                	push   %r12
   1868f:	55                   	push   %rbp
   18690:	48 89 cd             	mov    %rcx,%rbp
   18693:	53                   	push   %rbx
   18694:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
   1869b:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   186a0:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
   186a7:	00 
   186a8:	48 89 cf             	mov    %rcx,%rdi
   186ab:	4c 8d b4 24 30 01 00 	lea    0x130(%rsp),%r14
   186b2:	00 
   186b3:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   186b8:	4c 89 fe             	mov    %r15,%rsi
   186bb:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   186c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   186c7:	00 00 
   186c9:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
   186d0:	00 
   186d1:	31 c0                	xor    %eax,%eax
   186d3:	4c 89 b4 24 20 01 00 	mov    %r14,0x120(%rsp)
   186da:	00 
   186db:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   186e2:	00 00 00 00 00 
   186e7:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   186ee:	01 00 00 00 
   186f2:	48 c7 84 24 18 01 00 	movq   $0x1,0x118(%rsp)
   186f9:	00 01 00 00 00 
   186fe:	e8 1d e3 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   18703:	85 c0                	test   %eax,%eax
   18705:	0f 8e b5 05 00 00    	jle    18cc0 <mbedtls_mpi_exp_mod+0x640>
   1870b:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1870f:	48 8b 00             	mov    (%rax),%rax
   18712:	83 e0 01             	and    $0x1,%eax
   18715:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1871a:	49 89 c4             	mov    %rax,%r12
   1871d:	0f 84 9d 05 00 00    	je     18cc0 <mbedtls_mpi_exp_mod+0x640>
   18723:	4c 89 fe             	mov    %r15,%rsi
   18726:	4c 89 ef             	mov    %r13,%rdi
   18729:	e8 f2 e2 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1872e:	85 c0                	test   %eax,%eax
   18730:	0f 88 8a 05 00 00    	js     18cc0 <mbedtls_mpi_exp_mod+0x640>
   18736:	49 8b 75 08          	mov    0x8(%r13),%rsi
   1873a:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   1873e:	e8 ad 2d 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   18743:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
   18749:	0f 87 71 05 00 00    	ja     18cc0 <mbedtls_mpi_exp_mod+0x640>
   1874f:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   18753:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   18757:	e8 94 2d 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   1875c:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
   18762:	0f 87 58 05 00 00    	ja     18cc0 <mbedtls_mpi_exp_mod+0x640>
   18768:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1876c:	bb 02 00 00 00       	mov    $0x2,%ebx
   18771:	e8 ba 35 00 00       	callq  1bd30 <mbedtls_mpi_core_montmul_init>
   18776:	b9 0c 00 00 00       	mov    $0xc,%ecx
   1877b:	4c 89 f7             	mov    %r14,%rdi
   1877e:	49 8b 75 08          	mov    0x8(%r13),%rsi
   18782:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   18787:	31 c0                	xor    %eax,%eax
   18789:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1878c:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   18790:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   18797:	01 00 00 00 
   1879b:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   187a2:	00 00 00 00 00 
   187a7:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   187ae:	00 00 00 00 00 
   187b3:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   187ba:	01 00 00 00 
   187be:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   187c5:	00 00 00 00 00 
   187ca:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   187d1:	00 00 00 00 00 
   187d6:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   187dd:	01 00 00 00 
   187e1:	48 c7 84 24 18 01 00 	movq   $0x0,0x118(%rsp)
   187e8:	00 00 00 00 00 
   187ed:	48 c7 84 24 20 01 00 	movq   $0x0,0x120(%rsp)
   187f4:	00 00 00 00 00 
   187f9:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   18800:	01 00 00 00 
   18804:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1880b:	00 00 00 00 00 
   18810:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   18817:	00 00 00 00 00 
   1881c:	e8 cf 2c 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   18821:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   18826:	4c 89 f7             	mov    %r14,%rdi
   18829:	c7 84 24 30 01 00 00 	movl   $0x1,0x130(%rsp)
   18830:	01 00 00 00 
   18834:	48 c7 84 24 38 01 00 	movq   $0x0,0x138(%rsp)
   1883b:	00 00 00 00 00 
   18840:	48 83 f8 17          	cmp    $0x17,%rax
   18844:	48 c7 84 24 40 01 00 	movq   $0x0,0x140(%rsp)
   1884b:	00 00 00 00 00 
   18850:	49 0f 46 dc          	cmovbe %r12,%rbx
   18854:	48 83 f8 18          	cmp    $0x18,%rax
   18858:	19 d2                	sbb    %edx,%edx
   1885a:	83 c2 02             	add    $0x2,%edx
   1885d:	48 83 f8 18          	cmp    $0x18,%rax
   18861:	4d 19 e4             	sbb    %r12,%r12
   18864:	89 54 24 58          	mov    %edx,0x58(%rsp)
   18868:	e8 63 db ff ff       	callq  163d0 <mbedtls_mpi_copy>
   1886d:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18871:	4c 89 f7             	mov    %r14,%rdi
   18874:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
   18878:	49 83 c4 04          	add    $0x4,%r12
   1887c:	48 8d 70 01          	lea    0x1(%rax),%rsi
   18880:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   18885:	e8 16 d9 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   1888a:	89 04 24             	mov    %eax,(%rsp)
   1888d:	85 c0                	test   %eax,%eax
   1888f:	0f 84 bb 00 00 00    	je     18950 <mbedtls_mpi_exp_mod+0x2d0>
   18895:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
   1889c:	00 
   1889d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   188a2:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   188a9:	00 
   188aa:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   188af:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   188b6:	00 
   188b7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   188bc:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
   188c0:	49 8d 2c c6          	lea    (%r14,%rax,8),%rbp
   188c4:	48 89 ef             	mov    %rbp,%rdi
   188c7:	48 83 c3 01          	add    $0x1,%rbx
   188cb:	48 83 c5 18          	add    $0x18,%rbp
   188cf:	e8 6c d8 ff ff       	callq  16140 <mbedtls_mpi_free>
   188d4:	4c 39 e3             	cmp    %r12,%rbx
   188d7:	72 eb                	jb     188c4 <mbedtls_mpi_exp_mod+0x244>
   188d9:	4c 89 f7             	mov    %r14,%rdi
   188dc:	e8 5f d8 ff ff       	callq  16140 <mbedtls_mpi_free>
   188e1:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   188e6:	e8 55 d8 ff ff       	callq  16140 <mbedtls_mpi_free>
   188eb:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   188f0:	e8 4b d8 ff ff       	callq  16140 <mbedtls_mpi_free>
   188f5:	4c 89 ff             	mov    %r15,%rdi
   188f8:	e8 43 d8 ff ff       	callq  16140 <mbedtls_mpi_free>
   188fd:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18902:	e8 39 d8 ff ff       	callq  16140 <mbedtls_mpi_free>
   18907:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1890c:	48 85 c0             	test   %rax,%rax
   1890f:	0f 84 8b 00 00 00    	je     189a0 <mbedtls_mpi_exp_mod+0x320>
   18915:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   1891a:	0f 84 80 00 00 00    	je     189a0 <mbedtls_mpi_exp_mod+0x320>
   18920:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
   18927:	00 
   18928:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1892f:	00 00 
   18931:	0f 85 de 07 00 00    	jne    19115 <mbedtls_mpi_exp_mod+0xa95>
   18937:	8b 04 24             	mov    (%rsp),%eax
   1893a:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
   18941:	5b                   	pop    %rbx
   18942:	5d                   	pop    %rbp
   18943:	41 5c                	pop    %r12
   18945:	41 5d                	pop    %r13
   18947:	41 5e                	pop    %r14
   18949:	41 5f                	pop    %r15
   1894b:	c3                   	retq   
   1894c:	0f 1f 40 00          	nopl   0x0(%rax)
   18950:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   18955:	48 8d bc 24 48 01 00 	lea    0x148(%rsp),%rdi
   1895c:	00 
   1895d:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   18962:	e8 39 d8 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   18967:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1896c:	85 c0                	test   %eax,%eax
   1896e:	89 04 24             	mov    %eax,(%rsp)
   18971:	74 45                	je     189b8 <mbedtls_mpi_exp_mod+0x338>
   18973:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   1897a:	00 
   1897b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18980:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18987:	00 
   18988:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1898d:	4c 39 e3             	cmp    %r12,%rbx
   18990:	0f 83 43 ff ff ff    	jae    188d9 <mbedtls_mpi_exp_mod+0x259>
   18996:	e9 21 ff ff ff       	jmpq   188bc <mbedtls_mpi_exp_mod+0x23c>
   1899b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   189a0:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
   189a7:	00 
   189a8:	e8 93 d7 ff ff       	callq  16140 <mbedtls_mpi_free>
   189ad:	e9 6e ff ff ff       	jmpq   18920 <mbedtls_mpi_exp_mod+0x2a0>
   189b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   189b8:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
   189bf:	00 
   189c0:	48 01 f6             	add    %rsi,%rsi
   189c3:	48 89 c7             	mov    %rax,%rdi
   189c6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   189cb:	e8 d0 d7 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   189d0:	89 04 24             	mov    %eax,(%rsp)
   189d3:	85 c0                	test   %eax,%eax
   189d5:	0f 85 2d 02 00 00    	jne    18c08 <mbedtls_mpi_exp_mod+0x588>
   189db:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   189e0:	8b 00                	mov    (%rax),%eax
   189e2:	89 44 24 64          	mov    %eax,0x64(%rsp)
   189e6:	83 f8 ff             	cmp    $0xffffffff,%eax
   189e9:	0f 84 fe 02 00 00    	je     18ced <mbedtls_mpi_exp_mod+0x66d>
   189ef:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   189f4:	48 85 c0             	test   %rax,%rax
   189f7:	0f 84 23 02 00 00    	je     18c20 <mbedtls_mpi_exp_mod+0x5a0>
   189fd:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   18a02:	0f 84 18 02 00 00    	je     18c20 <mbedtls_mpi_exp_mod+0x5a0>
   18a08:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18a0d:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   18a11:	48 8b 40 10          	mov    0x10(%rax),%rax
   18a15:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   18a1c:	00 
   18a1d:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18a21:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   18a28:	00 
   18a29:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   18a2e:	48 89 ee             	mov    %rbp,%rsi
   18a31:	e8 ea df ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   18a36:	85 c0                	test   %eax,%eax
   18a38:	0f 88 aa 01 00 00    	js     18be8 <mbedtls_mpi_exp_mod+0x568>
   18a3e:	48 89 fe             	mov    %rdi,%rsi
   18a41:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18a46:	48 89 ea             	mov    %rbp,%rdx
   18a49:	e8 82 f5 ff ff       	callq  17fd0 <mbedtls_mpi_mod_mpi>
   18a4e:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18a55:	00 
   18a56:	89 04 24             	mov    %eax,(%rsp)
   18a59:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18a5e:	85 c0                	test   %eax,%eax
   18a60:	0f 85 27 ff ff ff    	jne    1898d <mbedtls_mpi_exp_mod+0x30d>
   18a66:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18a6a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18a6f:	48 8d 70 01          	lea    0x1(%rax),%rsi
   18a73:	e8 28 d7 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   18a78:	89 04 24             	mov    %eax,(%rsp)
   18a7b:	85 c0                	test   %eax,%eax
   18a7d:	0f 85 0a ff ff ff    	jne    1898d <mbedtls_mpi_exp_mod+0x30d>
   18a83:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
   18a8a:	00 
   18a8b:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18a92:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18a96:	ff 74 24 58          	pushq  0x58(%rsp)
   18a9a:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   18aa1:	00 
   18aa2:	48 89 fe             	mov    %rdi,%rsi
   18aa5:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   18aac:	00 
   18aad:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18ab1:	e8 ba 32 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   18ab6:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
   18abd:	00 
   18abe:	4c 89 f7             	mov    %r14,%rdi
   18ac1:	e8 0a d9 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   18ac6:	89 44 24 10          	mov    %eax,0x10(%rsp)
   18aca:	41 5b                	pop    %r11
   18acc:	5a                   	pop    %rdx
   18acd:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18ad4:	00 
   18ad5:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18ada:	85 c0                	test   %eax,%eax
   18adc:	0f 85 ab fe ff ff    	jne    1898d <mbedtls_mpi_exp_mod+0x30d>
   18ae2:	48 8d 84 24 a8 00 00 	lea    0xa8(%rsp),%rax
   18ae9:	00 
   18aea:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18af1:	00 
   18af2:	b9 01 00 00 00       	mov    $0x1,%ecx
   18af7:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
   18afe:	00 01 00 00 00 
   18b03:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   18b0a:	00 
   18b0b:	48 89 c2             	mov    %rax,%rdx
   18b0e:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18b15:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18b19:	48 89 fe             	mov    %rdi,%rsi
   18b1c:	ff 74 24 58          	pushq  0x58(%rsp)
   18b20:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18b24:	e8 47 32 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   18b29:	41 59                	pop    %r9
   18b2b:	41 5a                	pop    %r10
   18b2d:	48 83 fb 02          	cmp    $0x2,%rbx
   18b31:	0f 84 4f 03 00 00    	je     18e86 <mbedtls_mpi_exp_mod+0x806>
   18b37:	49 8b 45 08          	mov    0x8(%r13),%rax
   18b3b:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   18b42:	00 
   18b43:	31 c9                	xor    %ecx,%ecx
   18b45:	31 d2                	xor    %edx,%edx
   18b47:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   18b4e:	00 00 
   18b50:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   18b55:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18b5c:	00 
   18b5d:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   18b64:	00 00 
   18b66:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18b6b:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   18b70:	48 89 cb             	mov    %rcx,%rbx
   18b73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18b78:	48 85 db             	test   %rbx,%rbx
   18b7b:	0f 84 4b 01 00 00    	je     18ccc <mbedtls_mpi_exp_mod+0x64c>
   18b81:	48 83 eb 01          	sub    $0x1,%rbx
   18b85:	89 d9                	mov    %ebx,%ecx
   18b87:	49 8b 45 10          	mov    0x10(%r13),%rax
   18b8b:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   18b90:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   18b94:	48 d3 e8             	shr    %cl,%rax
   18b97:	48 89 d1             	mov    %rdx,%rcx
   18b9a:	83 e0 01             	and    $0x1,%eax
   18b9d:	48 09 c1             	or     %rax,%rcx
   18ba0:	0f 84 98 02 00 00    	je     18e3e <mbedtls_mpi_exp_mod+0x7be>
   18ba6:	48 85 c0             	test   %rax,%rax
   18ba9:	0f 85 6b 01 00 00    	jne    18d1a <mbedtls_mpi_exp_mod+0x69a>
   18baf:	48 83 fa 01          	cmp    $0x1,%rdx
   18bb3:	0f 85 61 01 00 00    	jne    18d1a <mbedtls_mpi_exp_mod+0x69a>
   18bb9:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18bbe:	31 c9                	xor    %ecx,%ecx
   18bc0:	4c 89 e2             	mov    %r12,%rdx
   18bc3:	4c 89 f6             	mov    %r14,%rsi
   18bc6:	e8 f5 d4 ff ff       	callq  160c0 <mpi_select>
   18bcb:	85 c0                	test   %eax,%eax
   18bcd:	0f 84 72 02 00 00    	je     18e45 <mbedtls_mpi_exp_mod+0x7c5>
   18bd3:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   18bd8:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   18bdf:	00 
   18be0:	89 04 24             	mov    %eax,(%rsp)
   18be3:	e9 a5 fd ff ff       	jmpq   1898d <mbedtls_mpi_exp_mod+0x30d>
   18be8:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18bed:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18bf2:	e8 d9 d7 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   18bf7:	89 04 24             	mov    %eax,(%rsp)
   18bfa:	85 c0                	test   %eax,%eax
   18bfc:	0f 84 81 fe ff ff    	je     18a83 <mbedtls_mpi_exp_mod+0x403>
   18c02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18c08:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   18c0f:	00 
   18c10:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18c15:	e9 73 fd ff ff       	jmpq   1898d <mbedtls_mpi_exp_mod+0x30d>
   18c1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18c20:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
   18c27:	00 
   18c28:	be 01 00 00 00       	mov    $0x1,%esi
   18c2d:	48 89 cf             	mov    %rcx,%rdi
   18c30:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   18c35:	e8 06 d9 ff ff       	callq  16540 <mbedtls_mpi_lset>
   18c3a:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   18c41:	00 
   18c42:	89 04 24             	mov    %eax,(%rsp)
   18c45:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18c4a:	85 c0                	test   %eax,%eax
   18c4c:	0f 85 3b fd ff ff    	jne    1898d <mbedtls_mpi_exp_mod+0x30d>
   18c52:	48 8b 75 08          	mov    0x8(%rbp),%rsi
   18c56:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18c5b:	48 c1 e6 07          	shl    $0x7,%rsi
   18c5f:	48 89 cf             	mov    %rcx,%rdi
   18c62:	e8 99 db ff ff       	callq  16800 <mbedtls_mpi_shift_l>
   18c67:	89 04 24             	mov    %eax,(%rsp)
   18c6a:	85 c0                	test   %eax,%eax
   18c6c:	0f 85 1b fd ff ff    	jne    1898d <mbedtls_mpi_exp_mod+0x30d>
   18c72:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18c77:	48 89 ea             	mov    %rbp,%rdx
   18c7a:	48 89 ce             	mov    %rcx,%rsi
   18c7d:	48 89 cf             	mov    %rcx,%rdi
   18c80:	e8 4b f3 ff ff       	callq  17fd0 <mbedtls_mpi_mod_mpi>
   18c85:	89 04 24             	mov    %eax,(%rsp)
   18c88:	85 c0                	test   %eax,%eax
   18c8a:	0f 85 fd fc ff ff    	jne    1898d <mbedtls_mpi_exp_mod+0x30d>
   18c90:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   18c95:	48 85 d2             	test   %rdx,%rdx
   18c98:	0f 84 8b fd ff ff    	je     18a29 <mbedtls_mpi_exp_mod+0x3a9>
   18c9e:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   18ca3:	66 0f 6f 11          	movdqa (%rcx),%xmm2
   18ca7:	48 8b 41 10          	mov    0x10(%rcx),%rax
   18cab:	0f 11 12             	movups %xmm2,(%rdx)
   18cae:	48 89 42 10          	mov    %rax,0x10(%rdx)
   18cb2:	e9 72 fd ff ff       	jmpq   18a29 <mbedtls_mpi_exp_mod+0x3a9>
   18cb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18cbe:	00 00 
   18cc0:	c7 04 24 fc ff ff ff 	movl   $0xfffffffc,(%rsp)
   18cc7:	e9 54 fc ff ff       	jmpq   18920 <mbedtls_mpi_exp_mod+0x2a0>
   18ccc:	48 83 7c 24 68 00    	cmpq   $0x0,0x68(%rsp)
   18cd2:	0f 84 eb 01 00 00    	je     18ec3 <mbedtls_mpi_exp_mod+0x843>
   18cd8:	48 83 6c 24 68 01    	subq   $0x1,0x68(%rsp)
   18cde:	bb 3f 00 00 00       	mov    $0x3f,%ebx
   18ce3:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   18ce8:	e9 9a fe ff ff       	jmpq   18b87 <mbedtls_mpi_exp_mod+0x507>
   18ced:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18cf2:	4c 89 ff             	mov    %r15,%rdi
   18cf5:	e8 d6 d6 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   18cfa:	89 04 24             	mov    %eax,(%rsp)
   18cfd:	85 c0                	test   %eax,%eax
   18cff:	0f 85 03 ff ff ff    	jne    18c08 <mbedtls_mpi_exp_mod+0x588>
   18d05:	c7 84 24 10 01 00 00 	movl   $0x1,0x110(%rsp)
   18d0c:	01 00 00 00 
   18d10:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
   18d15:	e9 d5 fc ff ff       	jmpq   189ef <mbedtls_mpi_exp_mod+0x36f>
   18d1a:	48 83 44 24 40 01    	addq   $0x1,0x40(%rsp)
   18d20:	8b 4c 24 58          	mov    0x58(%rsp),%ecx
   18d24:	ba 02 00 00 00       	mov    $0x2,%edx
   18d29:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   18d2e:	29 f1                	sub    %esi,%ecx
   18d30:	48 d3 e0             	shl    %cl,%rax
   18d33:	48 09 44 24 78       	or     %rax,0x78(%rsp)
   18d38:	48 39 74 24 70       	cmp    %rsi,0x70(%rsp)
   18d3d:	0f 85 35 fe ff ff    	jne    18b78 <mbedtls_mpi_exp_mod+0x4f8>
   18d43:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
   18d4a:	00 
   18d4b:	45 31 ff             	xor    %r15d,%r15d
   18d4e:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   18d53:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
   18d5a:	00 
   18d5b:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
   18d60:	eb 05                	jmp    18d67 <mbedtls_mpi_exp_mod+0x6e7>
   18d62:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   18d67:	31 c9                	xor    %ecx,%ecx
   18d69:	4c 89 e2             	mov    %r12,%rdx
   18d6c:	4c 89 f6             	mov    %r14,%rsi
   18d6f:	48 89 df             	mov    %rbx,%rdi
   18d72:	e8 49 d3 ff ff       	callq  160c0 <mpi_select>
   18d77:	85 c0                	test   %eax,%eax
   18d79:	0f 85 54 fe ff ff    	jne    18bd3 <mbedtls_mpi_exp_mod+0x553>
   18d7f:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18d86:	00 
   18d87:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18d8e:	49 83 c7 01          	add    $0x1,%r15
   18d92:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18d96:	41 55                	push   %r13
   18d98:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18d9f:	00 
   18da0:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18da7:	00 
   18da8:	48 89 fe             	mov    %rdi,%rsi
   18dab:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18daf:	e8 bc 2f 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   18db4:	41 59                	pop    %r9
   18db6:	41 5a                	pop    %r10
   18db8:	4c 39 7c 24 40       	cmp    %r15,0x40(%rsp)
   18dbd:	77 a3                	ja     18d62 <mbedtls_mpi_exp_mod+0x6e2>
   18dbf:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   18dc4:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18dc9:	4c 89 e2             	mov    %r12,%rdx
   18dcc:	4c 89 f6             	mov    %r14,%rsi
   18dcf:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
   18dd6:	00 
   18dd7:	4c 8b ac 24 98 00 00 	mov    0x98(%rsp),%r13
   18dde:	00 
   18ddf:	e8 dc d2 ff ff       	callq  160c0 <mpi_select>
   18de4:	85 c0                	test   %eax,%eax
   18de6:	0f 85 e7 fd ff ff    	jne    18bd3 <mbedtls_mpi_exp_mod+0x553>
   18dec:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18df3:	00 
   18df4:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18dfb:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18dff:	ff 74 24 58          	pushq  0x58(%rsp)
   18e03:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18e0a:	00 
   18e0b:	48 89 fe             	mov    %rdi,%rsi
   18e0e:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18e15:	00 
   18e16:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18e1a:	e8 51 2f 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   18e1f:	5f                   	pop    %rdi
   18e20:	41 58                	pop    %r8
   18e22:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   18e29:	00 00 
   18e2b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   18e30:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   18e37:	00 00 
   18e39:	e9 3a fd ff ff       	jmpq   18b78 <mbedtls_mpi_exp_mod+0x4f8>
   18e3e:	31 d2                	xor    %edx,%edx
   18e40:	e9 33 fd ff ff       	jmpq   18b78 <mbedtls_mpi_exp_mod+0x4f8>
   18e45:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18e4c:	00 
   18e4d:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18e54:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18e58:	ff 74 24 58          	pushq  0x58(%rsp)
   18e5c:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18e63:	00 
   18e64:	48 89 fe             	mov    %rdi,%rsi
   18e67:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18e6e:	00 
   18e6f:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18e73:	e8 f8 2e 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   18e78:	41 5b                	pop    %r11
   18e7a:	41 5f                	pop    %r15
   18e7c:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   18e81:	e9 f2 fc ff ff       	jmpq   18b78 <mbedtls_mpi_exp_mod+0x4f8>
   18e86:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18e8a:	48 8d bc 24 60 01 00 	lea    0x160(%rsp),%rdi
   18e91:	00 
   18e92:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   18e97:	48 8d 70 01          	lea    0x1(%rax),%rsi
   18e9b:	e8 00 d3 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   18ea0:	85 c0                	test   %eax,%eax
   18ea2:	75 17                	jne    18ebb <mbedtls_mpi_exp_mod+0x83b>
   18ea4:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   18ea9:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   18eae:	e8 1d d5 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   18eb3:	85 c0                	test   %eax,%eax
   18eb5:	0f 84 83 01 00 00    	je     1903e <mbedtls_mpi_exp_mod+0x9be>
   18ebb:	89 04 24             	mov    %eax,(%rsp)
   18ebe:	e9 ca fa ff ff       	jmpq   1898d <mbedtls_mpi_exp_mod+0x30d>
   18ec3:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   18ec9:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   18ece:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   18ed5:	00 
   18ed6:	0f 84 f7 00 00 00    	je     18fd3 <mbedtls_mpi_exp_mod+0x953>
   18edc:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   18ee1:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   18ee6:	4c 89 7c 24 58       	mov    %r15,0x58(%rsp)
   18eeb:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   18ef0:	4c 89 6c 24 68       	mov    %r13,0x68(%rsp)
   18ef5:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   18efa:	eb 13                	jmp    18f0f <mbedtls_mpi_exp_mod+0x88f>
   18efc:	0f 1f 40 00          	nopl   0x0(%rax)
   18f00:	48 83 c3 01          	add    $0x1,%rbx
   18f04:	48 39 5c 24 40       	cmp    %rbx,0x40(%rsp)
   18f09:	0f 84 b5 00 00 00    	je     18fc4 <mbedtls_mpi_exp_mod+0x944>
   18f0f:	31 c9                	xor    %ecx,%ecx
   18f11:	4c 89 e2             	mov    %r12,%rdx
   18f14:	4c 89 f6             	mov    %r14,%rsi
   18f17:	4c 89 ff             	mov    %r15,%rdi
   18f1a:	e8 a1 d1 ff ff       	callq  160c0 <mpi_select>
   18f1f:	85 c0                	test   %eax,%eax
   18f21:	0f 85 8e 00 00 00    	jne    18fb5 <mbedtls_mpi_exp_mod+0x935>
   18f27:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18f2e:	00 
   18f2f:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18f36:	4d 01 ed             	add    %r13,%r13
   18f39:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18f3d:	ff 74 24 58          	pushq  0x58(%rsp)
   18f41:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18f48:	00 
   18f49:	48 89 fe             	mov    %rdi,%rsi
   18f4c:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18f53:	00 
   18f54:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18f58:	e8 13 2e 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   18f5d:	59                   	pop    %rcx
   18f5e:	5e                   	pop    %rsi
   18f5f:	4d 85 e5             	test   %r12,%r13
   18f62:	74 9c                	je     18f00 <mbedtls_mpi_exp_mod+0x880>
   18f64:	b9 01 00 00 00       	mov    $0x1,%ecx
   18f69:	4c 89 e2             	mov    %r12,%rdx
   18f6c:	4c 89 f6             	mov    %r14,%rsi
   18f6f:	4c 89 ff             	mov    %r15,%rdi
   18f72:	e8 49 d1 ff ff       	callq  160c0 <mpi_select>
   18f77:	85 c0                	test   %eax,%eax
   18f79:	75 3a                	jne    18fb5 <mbedtls_mpi_exp_mod+0x935>
   18f7b:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18f82:	00 
   18f83:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18f8a:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18f8e:	ff 74 24 58          	pushq  0x58(%rsp)
   18f92:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   18f99:	00 
   18f9a:	48 89 fe             	mov    %rdi,%rsi
   18f9d:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   18fa4:	00 
   18fa5:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   18fa9:	e8 c2 2d 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   18fae:	58                   	pop    %rax
   18faf:	5a                   	pop    %rdx
   18fb0:	e9 4b ff ff ff       	jmpq   18f00 <mbedtls_mpi_exp_mod+0x880>
   18fb5:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   18fba:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   18fbf:	e9 f7 fe ff ff       	jmpq   18ebb <mbedtls_mpi_exp_mod+0x83b>
   18fc4:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   18fc9:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
   18fce:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   18fd3:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
   18fda:	00 
   18fdb:	b9 01 00 00 00       	mov    $0x1,%ecx
   18fe0:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
   18fe7:	00 01 00 00 00 
   18fec:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   18ff3:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   18ff7:	ff 74 24 58          	pushq  0x58(%rsp)
   18ffb:	48 89 fe             	mov    %rdi,%rsi
   18ffe:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   19005:	00 
   19006:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   1900a:	e8 61 2d 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   1900f:	58                   	pop    %rax
   19010:	5a                   	pop    %rdx
   19011:	83 7c 24 64 ff       	cmpl   $0xffffffff,0x64(%rsp)
   19016:	75 14                	jne    1902c <mbedtls_mpi_exp_mod+0x9ac>
   19018:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   1901d:	74 0d                	je     1902c <mbedtls_mpi_exp_mod+0x9ac>
   1901f:	49 8b 45 10          	mov    0x10(%r13),%rax
   19023:	f6 00 01             	testb  $0x1,(%rax)
   19026:	0f 85 fb 00 00 00    	jne    19127 <mbedtls_mpi_exp_mod+0xaa7>
   1902c:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   19031:	4c 89 f6             	mov    %r14,%rsi
   19034:	e8 97 d3 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   19039:	e9 4f f9 ff ff       	jmpq   1898d <mbedtls_mpi_exp_mod+0x30d>
   1903e:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
   19045:	00 
   19046:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1904d:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   19051:	ff 74 24 58          	pushq  0x58(%rsp)
   19055:	48 8b 8c 24 78 01 00 	mov    0x178(%rsp),%rcx
   1905c:	00 
   1905d:	48 89 fa             	mov    %rdi,%rdx
   19060:	48 89 fe             	mov    %rdi,%rsi
   19063:	4c 8b 4d 08          	mov    0x8(%rbp),%r9
   19067:	e8 04 2d 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   1906c:	5f                   	pop    %rdi
   1906d:	41 58                	pop    %r8
   1906f:	49 83 fc 04          	cmp    $0x4,%r12
   19073:	0f 85 be fa ff ff    	jne    18b37 <mbedtls_mpi_exp_mod+0x4b7>
   19079:	4c 8d 94 24 78 01 00 	lea    0x178(%rsp),%r10
   19080:	00 
   19081:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
   19088:	00 
   19089:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   1908e:	48 89 eb             	mov    %rbp,%rbx
   19091:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19096:	4c 89 d5             	mov    %r10,%rbp
   19099:	eb 4c                	jmp    190e7 <mbedtls_mpi_exp_mod+0xa67>
   1909b:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
   1909f:	48 89 ef             	mov    %rbp,%rdi
   190a2:	e8 29 d3 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   190a7:	85 c0                	test   %eax,%eax
   190a9:	75 50                	jne    190fb <mbedtls_mpi_exp_mod+0xa7b>
   190ab:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   190af:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   190b6:	48 83 c5 18          	add    $0x18,%rbp
   190ba:	4c 8b 43 10          	mov    0x10(%rbx),%r8
   190be:	ff 74 24 58          	pushq  0x58(%rsp)
   190c2:	48 8b 8c 24 60 01 00 	mov    0x160(%rsp),%rcx
   190c9:	00 
   190ca:	48 89 fe             	mov    %rdi,%rsi
   190cd:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
   190d4:	00 
   190d5:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
   190d9:	e8 92 2c 00 00       	callq  1bd70 <mbedtls_mpi_core_montmul>
   190de:	59                   	pop    %rcx
   190df:	5e                   	pop    %rsi
   190e0:	48 39 6c 24 40       	cmp    %rbp,0x40(%rsp)
   190e5:	74 33                	je     1911a <mbedtls_mpi_exp_mod+0xa9a>
   190e7:	48 8b 43 08          	mov    0x8(%rbx),%rax
   190eb:	48 89 ef             	mov    %rbp,%rdi
   190ee:	48 8d 70 01          	lea    0x1(%rax),%rsi
   190f2:	e8 a9 d0 ff ff       	callq  161a0 <mbedtls_mpi_grow>
   190f7:	85 c0                	test   %eax,%eax
   190f9:	74 a0                	je     1909b <mbedtls_mpi_exp_mod+0xa1b>
   190fb:	89 04 24             	mov    %eax,(%rsp)
   190fe:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   19105:	00 
   19106:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   1910b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19110:	e9 a7 f7 ff ff       	jmpq   188bc <mbedtls_mpi_exp_mod+0x23c>
   19115:	e8 46 a1 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1911a:	48 89 dd             	mov    %rbx,%rbp
   1911d:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   19122:	e9 10 fa ff ff       	jmpq   18b37 <mbedtls_mpi_exp_mod+0x4b7>
   19127:	b9 01 00 00 00       	mov    $0x1,%ecx
   1912c:	4c 89 f2             	mov    %r14,%rdx
   1912f:	48 89 ee             	mov    %rbp,%rsi
   19132:	4c 89 f7             	mov    %r14,%rdi
   19135:	c7 84 24 30 01 00 00 	movl   $0xffffffff,0x130(%rsp)
   1913c:	ff ff ff ff 
   19140:	e8 7b dc ff ff       	callq  16dc0 <add_sub_mpi>
   19145:	85 c0                	test   %eax,%eax
   19147:	0f 84 df fe ff ff    	je     1902c <mbedtls_mpi_exp_mod+0x9ac>
   1914d:	e9 69 fd ff ff       	jmpq   18ebb <mbedtls_mpi_exp_mod+0x83b>
   19152:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19159:	00 00 00 00 
   1915d:	0f 1f 00             	nopl   (%rax)

0000000000019160 <mbedtls_mpi_gcd>:
   19160:	f3 0f 1e fa          	endbr64 
   19164:	41 57                	push   %r15
   19166:	49 89 ff             	mov    %rdi,%r15
   19169:	41 56                	push   %r14
   1916b:	49 89 f6             	mov    %rsi,%r14
   1916e:	41 55                	push   %r13
   19170:	41 54                	push   %r12
   19172:	49 89 d4             	mov    %rdx,%r12
   19175:	55                   	push   %rbp
   19176:	53                   	push   %rbx
   19177:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1917e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19185:	00 00 
   19187:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1918c:	31 c0                	xor    %eax,%eax
   1918e:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   19193:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   1919a:	00 
   1919b:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   191a0:	48 89 ef             	mov    %rbp,%rdi
   191a3:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   191aa:	00 
   191ab:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   191b2:	00 00 
   191b4:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   191bb:	00 00 
   191bd:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   191c4:	00 00 
   191c6:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   191cd:	00 00 
   191cf:	e8 fc d1 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   191d4:	85 c0                	test   %eax,%eax
   191d6:	74 3e                	je     19216 <mbedtls_mpi_gcd+0xb6>
   191d8:	48 89 ef             	mov    %rbp,%rdi
   191db:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   191df:	e8 5c cf ff ff       	callq  16140 <mbedtls_mpi_free>
   191e4:	4c 89 ef             	mov    %r13,%rdi
   191e7:	e8 54 cf ff ff       	callq  16140 <mbedtls_mpi_free>
   191ec:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   191f1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   191f8:	00 00 
   191fa:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   191fe:	0f 85 90 02 00 00    	jne    19494 <mbedtls_mpi_gcd+0x334>
   19204:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1920b:	5b                   	pop    %rbx
   1920c:	5d                   	pop    %rbp
   1920d:	41 5c                	pop    %r12
   1920f:	41 5d                	pop    %r13
   19211:	41 5e                	pop    %r14
   19213:	41 5f                	pop    %r15
   19215:	c3                   	retq   
   19216:	4c 89 e6             	mov    %r12,%rsi
   19219:	4c 89 ef             	mov    %r13,%rdi
   1921c:	e8 af d1 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   19221:	85 c0                	test   %eax,%eax
   19223:	75 b3                	jne    191d8 <mbedtls_mpi_gcd+0x78>
   19225:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1922a:	48 85 f6             	test   %rsi,%rsi
   1922d:	0f 84 59 02 00 00    	je     1948c <mbedtls_mpi_gcd+0x32c>
   19233:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   19238:	45 31 e4             	xor    %r12d,%r12d
   1923b:	31 c9                	xor    %ecx,%ecx
   1923d:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   19241:	31 c0                	xor    %eax,%eax
   19243:	eb 15                	jmp    1925a <mbedtls_mpi_gcd+0xfa>
   19245:	0f 1f 00             	nopl   (%rax)
   19248:	48 83 c0 01          	add    $0x1,%rax
   1924c:	49 83 c4 01          	add    $0x1,%r12
   19250:	48 83 f8 40          	cmp    $0x40,%rax
   19254:	0f 84 25 02 00 00    	je     1947f <mbedtls_mpi_gcd+0x31f>
   1925a:	48 0f a3 c2          	bt     %rax,%rdx
   1925e:	73 e8                	jae    19248 <mbedtls_mpi_gcd+0xe8>
   19260:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   19265:	48 85 f6             	test   %rsi,%rsi
   19268:	0f 84 6e 01 00 00    	je     193dc <mbedtls_mpi_gcd+0x27c>
   1926e:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   19273:	31 d2                	xor    %edx,%edx
   19275:	31 ff                	xor    %edi,%edi
   19277:	49 8b 0c f8          	mov    (%r8,%rdi,8),%rcx
   1927b:	31 c0                	xor    %eax,%eax
   1927d:	eb 13                	jmp    19292 <mbedtls_mpi_gcd+0x132>
   1927f:	90                   	nop
   19280:	48 83 c0 01          	add    $0x1,%rax
   19284:	48 83 c2 01          	add    $0x1,%rdx
   19288:	48 83 f8 40          	cmp    $0x40,%rax
   1928c:	0f 84 2a 01 00 00    	je     193bc <mbedtls_mpi_gcd+0x25c>
   19292:	48 0f a3 c1          	bt     %rax,%rcx
   19296:	73 e8                	jae    19280 <mbedtls_mpi_gcd+0x120>
   19298:	48 85 d2             	test   %rdx,%rdx
   1929b:	0f 84 28 01 00 00    	je     193c9 <mbedtls_mpi_gcd+0x269>
   192a1:	49 39 d4             	cmp    %rdx,%r12
   192a4:	4c 0f 47 e2          	cmova  %rdx,%r12
   192a8:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   192af:	00 
   192b0:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   192b5:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   192ba:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   192c1:	00 
   192c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   192c8:	48 89 de             	mov    %rbx,%rsi
   192cb:	48 89 ef             	mov    %rbp,%rdi
   192ce:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   192d5:	00 00 
   192d7:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   192de:	00 
   192df:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   192e6:	00 00 
   192e8:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   192ed:	e8 2e d7 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   192f2:	85 c0                	test   %eax,%eax
   192f4:	0f 84 62 01 00 00    	je     1945c <mbedtls_mpi_gcd+0x2fc>
   192fa:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   192ff:	4d 85 c0             	test   %r8,%r8
   19302:	74 34                	je     19338 <mbedtls_mpi_gcd+0x1d8>
   19304:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   19309:	31 d2                	xor    %edx,%edx
   1930b:	31 f6                	xor    %esi,%esi
   1930d:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
   19311:	31 c0                	xor    %eax,%eax
   19313:	eb 15                	jmp    1932a <mbedtls_mpi_gcd+0x1ca>
   19315:	0f 1f 00             	nopl   (%rax)
   19318:	48 83 c0 01          	add    $0x1,%rax
   1931c:	48 83 c2 01          	add    $0x1,%rdx
   19320:	48 83 f8 40          	cmp    $0x40,%rax
   19324:	0f 84 06 01 00 00    	je     19430 <mbedtls_mpi_gcd+0x2d0>
   1932a:	48 0f a3 c1          	bt     %rax,%rcx
   1932e:	73 e8                	jae    19318 <mbedtls_mpi_gcd+0x1b8>
   19330:	4c 89 c6             	mov    %r8,%rsi
   19333:	e8 d8 25 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   19338:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   1933d:	4d 85 c0             	test   %r8,%r8
   19340:	74 36                	je     19378 <mbedtls_mpi_gcd+0x218>
   19342:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   19347:	31 d2                	xor    %edx,%edx
   19349:	31 f6                	xor    %esi,%esi
   1934b:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
   1934f:	31 c0                	xor    %eax,%eax
   19351:	eb 17                	jmp    1936a <mbedtls_mpi_gcd+0x20a>
   19353:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19358:	48 83 c0 01          	add    $0x1,%rax
   1935c:	48 83 c2 01          	add    $0x1,%rdx
   19360:	48 83 f8 40          	cmp    $0x40,%rax
   19364:	0f 84 de 00 00 00    	je     19448 <mbedtls_mpi_gcd+0x2e8>
   1936a:	48 0f a3 c1          	bt     %rax,%rcx
   1936e:	73 e8                	jae    19358 <mbedtls_mpi_gcd+0x1f8>
   19370:	4c 89 c6             	mov    %r8,%rsi
   19373:	e8 98 25 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   19378:	4c 89 ee             	mov    %r13,%rsi
   1937b:	48 89 ef             	mov    %rbp,%rdi
   1937e:	e8 9d d6 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   19383:	85 c0                	test   %eax,%eax
   19385:	78 69                	js     193f0 <mbedtls_mpi_gcd+0x290>
   19387:	4c 89 ea             	mov    %r13,%rdx
   1938a:	48 89 ee             	mov    %rbp,%rsi
   1938d:	e8 ee d8 ff ff       	callq  16c80 <mbedtls_mpi_sub_abs>
   19392:	85 c0                	test   %eax,%eax
   19394:	0f 85 3e fe ff ff    	jne    191d8 <mbedtls_mpi_gcd+0x78>
   1939a:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1939f:	48 85 f6             	test   %rsi,%rsi
   193a2:	0f 84 20 ff ff ff    	je     192c8 <mbedtls_mpi_gcd+0x168>
   193a8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   193ad:	ba 01 00 00 00       	mov    $0x1,%edx
   193b2:	e8 59 25 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   193b7:	e9 0c ff ff ff       	jmpq   192c8 <mbedtls_mpi_gcd+0x168>
   193bc:	48 83 c7 01          	add    $0x1,%rdi
   193c0:	48 39 f7             	cmp    %rsi,%rdi
   193c3:	0f 85 ae fe ff ff    	jne    19277 <mbedtls_mpi_gcd+0x117>
   193c9:	48 c1 e6 06          	shl    $0x6,%rsi
   193cd:	74 0d                	je     193dc <mbedtls_mpi_gcd+0x27c>
   193cf:	45 31 e4             	xor    %r12d,%r12d
   193d2:	41 f6 00 01          	testb  $0x1,(%r8)
   193d6:	0f 85 cc fe ff ff    	jne    192a8 <mbedtls_mpi_gcd+0x148>
   193dc:	4c 89 f6             	mov    %r14,%rsi
   193df:	4c 89 ff             	mov    %r15,%rdi
   193e2:	e8 e9 cf ff ff       	callq  163d0 <mbedtls_mpi_copy>
   193e7:	e9 ec fd ff ff       	jmpq   191d8 <mbedtls_mpi_gcd+0x78>
   193ec:	0f 1f 40 00          	nopl   0x0(%rax)
   193f0:	48 89 ea             	mov    %rbp,%rdx
   193f3:	4c 89 ee             	mov    %r13,%rsi
   193f6:	4c 89 ef             	mov    %r13,%rdi
   193f9:	e8 82 d8 ff ff       	callq  16c80 <mbedtls_mpi_sub_abs>
   193fe:	85 c0                	test   %eax,%eax
   19400:	0f 85 d2 fd ff ff    	jne    191d8 <mbedtls_mpi_gcd+0x78>
   19406:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1940b:	48 85 f6             	test   %rsi,%rsi
   1940e:	0f 84 b4 fe ff ff    	je     192c8 <mbedtls_mpi_gcd+0x168>
   19414:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   19419:	ba 01 00 00 00       	mov    $0x1,%edx
   1941e:	e8 ed 24 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   19423:	e9 a0 fe ff ff       	jmpq   192c8 <mbedtls_mpi_gcd+0x168>
   19428:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1942f:	00 
   19430:	48 83 c6 01          	add    $0x1,%rsi
   19434:	4c 39 c6             	cmp    %r8,%rsi
   19437:	0f 85 d0 fe ff ff    	jne    1930d <mbedtls_mpi_gcd+0x1ad>
   1943d:	31 d2                	xor    %edx,%edx
   1943f:	e9 ec fe ff ff       	jmpq   19330 <mbedtls_mpi_gcd+0x1d0>
   19444:	0f 1f 40 00          	nopl   0x0(%rax)
   19448:	48 83 c6 01          	add    $0x1,%rsi
   1944c:	4c 39 c6             	cmp    %r8,%rsi
   1944f:	0f 85 f6 fe ff ff    	jne    1934b <mbedtls_mpi_gcd+0x1eb>
   19455:	31 d2                	xor    %edx,%edx
   19457:	e9 14 ff ff ff       	jmpq   19370 <mbedtls_mpi_gcd+0x210>
   1945c:	4c 89 e6             	mov    %r12,%rsi
   1945f:	4c 89 ef             	mov    %r13,%rdi
   19462:	e8 99 d3 ff ff       	callq  16800 <mbedtls_mpi_shift_l>
   19467:	85 c0                	test   %eax,%eax
   19469:	0f 85 69 fd ff ff    	jne    191d8 <mbedtls_mpi_gcd+0x78>
   1946f:	4c 89 ee             	mov    %r13,%rsi
   19472:	4c 89 ff             	mov    %r15,%rdi
   19475:	e8 56 cf ff ff       	callq  163d0 <mbedtls_mpi_copy>
   1947a:	e9 59 fd ff ff       	jmpq   191d8 <mbedtls_mpi_gcd+0x78>
   1947f:	48 83 c1 01          	add    $0x1,%rcx
   19483:	48 39 f1             	cmp    %rsi,%rcx
   19486:	0f 85 b1 fd ff ff    	jne    1923d <mbedtls_mpi_gcd+0xdd>
   1948c:	45 31 e4             	xor    %r12d,%r12d
   1948f:	e9 cc fd ff ff       	jmpq   19260 <mbedtls_mpi_gcd+0x100>
   19494:	e8 c7 9d fe ff       	callq  3260 <__stack_chk_fail@plt>
   19499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000194a0 <mbedtls_mpi_fill_random>:
   194a0:	f3 0f 1e fa          	endbr64 
   194a4:	41 55                	push   %r13
   194a6:	49 89 d5             	mov    %rdx,%r13
   194a9:	41 54                	push   %r12
   194ab:	49 89 f4             	mov    %rsi,%r12
   194ae:	55                   	push   %rbp
   194af:	4c 89 e0             	mov    %r12,%rax
   194b2:	48 89 cd             	mov    %rcx,%rbp
   194b5:	53                   	push   %rbx
   194b6:	48 89 fb             	mov    %rdi,%rbx
   194b9:	48 83 ec 08          	sub    $0x8,%rsp
   194bd:	83 e6 07             	and    $0x7,%esi
   194c0:	40 0f 95 c6          	setne  %sil
   194c4:	48 c1 e8 03          	shr    $0x3,%rax
   194c8:	40 0f b6 f6          	movzbl %sil,%esi
   194cc:	48 01 c6             	add    %rax,%rsi
   194cf:	e8 6c cd ff ff       	callq  16240 <mbedtls_mpi_resize_clear>
   194d4:	85 c0                	test   %eax,%eax
   194d6:	75 05                	jne    194dd <mbedtls_mpi_fill_random+0x3d>
   194d8:	4d 85 e4             	test   %r12,%r12
   194db:	75 13                	jne    194f0 <mbedtls_mpi_fill_random+0x50>
   194dd:	48 83 c4 08          	add    $0x8,%rsp
   194e1:	5b                   	pop    %rbx
   194e2:	5d                   	pop    %rbp
   194e3:	41 5c                	pop    %r12
   194e5:	41 5d                	pop    %r13
   194e7:	c3                   	retq   
   194e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   194ef:	00 
   194f0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   194f4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   194f8:	48 83 c4 08          	add    $0x8,%rsp
   194fc:	49 89 e8             	mov    %rbp,%r8
   194ff:	5b                   	pop    %rbx
   19500:	4c 89 e9             	mov    %r13,%rcx
   19503:	5d                   	pop    %rbp
   19504:	4c 89 e2             	mov    %r12,%rdx
   19507:	41 5c                	pop    %r12
   19509:	41 5d                	pop    %r13
   1950b:	e9 10 2a 00 00       	jmpq   1bf20 <mbedtls_mpi_core_fill_random>

0000000000019510 <mpi_miller_rabin>:
   19510:	41 57                	push   %r15
   19512:	41 56                	push   %r14
   19514:	49 89 fe             	mov    %rdi,%r14
   19517:	41 55                	push   %r13
   19519:	41 54                	push   %r12
   1951b:	49 89 d4             	mov    %rdx,%r12
   1951e:	55                   	push   %rbp
   1951f:	53                   	push   %rbx
   19520:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   19527:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1952c:	4c 8d 7c 24 60       	lea    0x60(%rsp),%r15
   19531:	48 89 fe             	mov    %rdi,%rsi
   19534:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   19539:	4c 89 ff             	mov    %r15,%rdi
   1953c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   19541:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19548:	00 00 
   1954a:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   19551:	00 
   19552:	31 c0                	xor    %eax,%eax
   19554:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
   1955b:	00 
   1955c:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   19563:	00 
   19564:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19569:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19570:	00 
   19571:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   19578:	00 
   19579:	48 89 c2             	mov    %rax,%rdx
   1957c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19581:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   19588:	00 00 
   1958a:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   19591:	00 00 
   19593:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
   1959a:	01 00 00 00 
   1959e:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
   195a5:	00 00 00 00 00 
   195aa:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   195b1:	00 00 00 00 00 
   195b6:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   195bd:	01 00 00 00 
   195c1:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
   195c8:	00 00 00 00 00 
   195cd:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
   195d4:	00 00 00 00 00 
   195d9:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
   195e0:	01 00 00 00 
   195e4:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   195eb:	00 00 00 00 00 
   195f0:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   195f7:	00 00 00 00 00 
   195fc:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
   19603:	01 00 00 00 
   19607:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1960e:	00 00 00 00 00 
   19613:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
   1961a:	00 00 00 00 00 
   1961f:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19626:	00 01 00 00 00 
   1962b:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19632:	01 00 00 00 
   19636:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   1963d:	00 01 00 00 00 
   19642:	e8 79 d7 ff ff       	callq  16dc0 <add_sub_mpi>
   19647:	89 44 24 24          	mov    %eax,0x24(%rsp)
   1964b:	85 c0                	test   %eax,%eax
   1964d:	0f 85 25 02 00 00    	jne    19878 <mpi_miller_rabin+0x368>
   19653:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   19658:	48 85 f6             	test   %rsi,%rsi
   1965b:	0f 84 ec 02 00 00    	je     1994d <mpi_miller_rabin+0x43d>
   19661:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   19666:	31 ed                	xor    %ebp,%ebp
   19668:	31 c9                	xor    %ecx,%ecx
   1966a:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
   1966e:	31 c0                	xor    %eax,%eax
   19670:	eb 18                	jmp    1968a <mpi_miller_rabin+0x17a>
   19672:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19678:	48 83 c0 01          	add    $0x1,%rax
   1967c:	48 83 c5 01          	add    $0x1,%rbp
   19680:	48 83 f8 40          	cmp    $0x40,%rax
   19684:	0f 84 b6 02 00 00    	je     19940 <mpi_miller_rabin+0x430>
   1968a:	48 0f a3 c2          	bt     %rax,%rdx
   1968e:	73 e8                	jae    19678 <mpi_miller_rabin+0x168>
   19690:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   19697:	00 
   19698:	4c 89 fe             	mov    %r15,%rsi
   1969b:	48 89 c7             	mov    %rax,%rdi
   1969e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   196a3:	e8 28 cd ff ff       	callq  163d0 <mbedtls_mpi_copy>
   196a8:	89 44 24 24          	mov    %eax,0x24(%rsp)
   196ac:	85 c0                	test   %eax,%eax
   196ae:	0f 85 d1 01 00 00    	jne    19885 <mpi_miller_rabin+0x375>
   196b4:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   196bb:	00 
   196bc:	48 85 f6             	test   %rsi,%rsi
   196bf:	0f 85 93 02 00 00    	jne    19958 <mpi_miller_rabin+0x448>
   196c5:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   196cb:	0f 84 b4 01 00 00    	je     19885 <mpi_miller_rabin+0x375>
   196d1:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   196d8:	00 
   196d9:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
   196de:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   196e5:	00 
   196e6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   196eb:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   196f2:	00 
   196f3:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   196fa:	00 00 
   196fc:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19701:	bd 20 00 00 00       	mov    $0x20,%ebp
   19706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1970d:	00 00 00 
   19710:	49 8b 46 08          	mov    0x8(%r14),%rax
   19714:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19719:	4c 89 e2             	mov    %r12,%rdx
   1971c:	4c 89 ef             	mov    %r13,%rdi
   1971f:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   19726:	00 
   19727:	e8 74 fd ff ff       	callq  194a0 <mbedtls_mpi_fill_random>
   1972c:	85 c0                	test   %eax,%eax
   1972e:	0f 85 d4 01 00 00    	jne    19908 <mpi_miller_rabin+0x3f8>
   19734:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   1973b:	00 
   1973c:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   19743:	00 
   19744:	e8 a7 1d 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   19749:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1974e:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   19753:	48 89 c3             	mov    %rax,%rbx
   19756:	e8 95 1d 00 00       	callq  1b4f0 <mbedtls_mpi_core_bitlen>
   1975b:	48 39 d8             	cmp    %rbx,%rax
   1975e:	73 2d                	jae    1978d <mpi_miller_rabin+0x27d>
   19760:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   19767:	00 
   19768:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
   1976f:	00 
   19770:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   19774:	c1 e1 06             	shl    $0x6,%ecx
   19777:	f7 d1                	not    %ecx
   19779:	01 c1                	add    %eax,%ecx
   1977b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   19782:	48 d3 e0             	shl    %cl,%rax
   19785:	48 f7 d0             	not    %rax
   19788:	48 21 44 d6 f8       	and    %rax,-0x8(%rsi,%rdx,8)
   1978d:	83 ed 01             	sub    $0x1,%ebp
   19790:	0f 84 9a 01 00 00    	je     19930 <mpi_miller_rabin+0x420>
   19796:	4c 89 fe             	mov    %r15,%rsi
   19799:	4c 89 ef             	mov    %r13,%rdi
   1979c:	e8 7f d2 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   197a1:	85 c0                	test   %eax,%eax
   197a3:	0f 89 67 ff ff ff    	jns    19710 <mpi_miller_rabin+0x200>
   197a9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   197ae:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   197b3:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   197ba:	00 01 00 00 00 
   197bf:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   197c6:	01 00 00 00 
   197ca:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   197d1:	00 01 00 00 00 
   197d6:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   197dd:	00 
   197de:	e8 3d d2 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   197e3:	85 c0                	test   %eax,%eax
   197e5:	0f 8e 25 ff ff ff    	jle    19710 <mpi_miller_rabin+0x200>
   197eb:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   197f0:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   197f5:	4c 89 f1             	mov    %r14,%rcx
   197f8:	4c 89 ee             	mov    %r13,%rsi
   197fb:	e8 80 ee ff ff       	callq  18680 <mbedtls_mpi_exp_mod>
   19800:	85 c0                	test   %eax,%eax
   19802:	0f 85 00 01 00 00    	jne    19908 <mpi_miller_rabin+0x3f8>
   19808:	4c 89 fe             	mov    %r15,%rsi
   1980b:	4c 89 ef             	mov    %r13,%rdi
   1980e:	e8 0d d2 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   19813:	85 c0                	test   %eax,%eax
   19815:	74 42                	je     19859 <mpi_miller_rabin+0x349>
   19817:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1981c:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19821:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19828:	00 01 00 00 00 
   1982d:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19834:	01 00 00 00 
   19838:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   1983f:	00 01 00 00 00 
   19844:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   1984b:	00 
   1984c:	e8 cf d1 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   19851:	85 c0                	test   %eax,%eax
   19853:	0f 85 14 01 00 00    	jne    1996d <mpi_miller_rabin+0x45d>
   19859:	48 83 44 24 50 01    	addq   $0x1,0x50(%rsp)
   1985f:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   19864:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
   19869:	0f 85 92 fe ff ff    	jne    19701 <mpi_miller_rabin+0x1f1>
   1986f:	eb 36                	jmp    198a7 <mpi_miller_rabin+0x397>
   19871:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19878:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1987f:	00 
   19880:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19885:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   1988c:	00 
   1988d:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   19894:	00 
   19895:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1989a:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   198a1:	00 
   198a2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   198a7:	4c 89 ff             	mov    %r15,%rdi
   198aa:	e8 91 c8 ff ff       	callq  16140 <mbedtls_mpi_free>
   198af:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   198b4:	e8 87 c8 ff ff       	callq  16140 <mbedtls_mpi_free>
   198b9:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   198be:	e8 7d c8 ff ff       	callq  16140 <mbedtls_mpi_free>
   198c3:	4c 89 ef             	mov    %r13,%rdi
   198c6:	e8 75 c8 ff ff       	callq  16140 <mbedtls_mpi_free>
   198cb:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   198d0:	e8 6b c8 ff ff       	callq  16140 <mbedtls_mpi_free>
   198d5:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   198dc:	00 
   198dd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   198e4:	00 00 
   198e6:	0f 85 84 01 00 00    	jne    19a70 <mpi_miller_rabin+0x560>
   198ec:	8b 44 24 24          	mov    0x24(%rsp),%eax
   198f0:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
   198f7:	5b                   	pop    %rbx
   198f8:	5d                   	pop    %rbp
   198f9:	41 5c                	pop    %r12
   198fb:	41 5d                	pop    %r13
   198fd:	41 5e                	pop    %r14
   198ff:	41 5f                	pop    %r15
   19901:	c3                   	retq   
   19902:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19908:	89 44 24 24          	mov    %eax,0x24(%rsp)
   1990c:	eb 99                	jmp    198a7 <mpi_miller_rabin+0x397>
   1990e:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   19913:	4c 89 fe             	mov    %r15,%rsi
   19916:	4c 89 ef             	mov    %r13,%rdi
   19919:	e8 02 d1 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1991e:	85 c0                	test   %eax,%eax
   19920:	0f 84 00 01 00 00    	je     19a26 <mpi_miller_rabin+0x516>
   19926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1992d:	00 00 00 
   19930:	c7 44 24 24 f2 ff ff 	movl   $0xfffffff2,0x24(%rsp)
   19937:	ff 
   19938:	e9 6a ff ff ff       	jmpq   198a7 <mpi_miller_rabin+0x397>
   1993d:	0f 1f 00             	nopl   (%rax)
   19940:	48 83 c1 01          	add    $0x1,%rcx
   19944:	48 39 ce             	cmp    %rcx,%rsi
   19947:	0f 85 1d fd ff ff    	jne    1966a <mpi_miller_rabin+0x15a>
   1994d:	31 ed                	xor    %ebp,%ebp
   1994f:	e9 3c fd ff ff       	jmpq   19690 <mpi_miller_rabin+0x180>
   19954:	0f 1f 40 00          	nopl   0x0(%rax)
   19958:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   1995f:	00 
   19960:	48 89 ea             	mov    %rbp,%rdx
   19963:	e8 a8 1f 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   19968:	e9 58 fd ff ff       	jmpq   196c5 <mpi_miller_rabin+0x1b5>
   1996d:	48 83 7c 24 48 01    	cmpq   $0x1,0x48(%rsp)
   19973:	bb 01 00 00 00       	mov    $0x1,%ebx
   19978:	76 99                	jbe    19913 <mpi_miller_rabin+0x403>
   1997a:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
   1997f:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   19984:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   19989:	e9 80 00 00 00       	jmpq   19a0e <mpi_miller_rabin+0x4fe>
   1998e:	66 90                	xchg   %ax,%ax
   19990:	4c 89 ea             	mov    %r13,%rdx
   19993:	4c 89 ee             	mov    %r13,%rsi
   19996:	48 89 ef             	mov    %rbp,%rdi
   19999:	e8 c2 d5 ff ff       	callq  16f60 <mbedtls_mpi_mul_mpi>
   1999e:	85 c0                	test   %eax,%eax
   199a0:	0f 85 62 ff ff ff    	jne    19908 <mpi_miller_rabin+0x3f8>
   199a6:	4c 89 f2             	mov    %r14,%rdx
   199a9:	48 89 ee             	mov    %rbp,%rsi
   199ac:	4c 89 ef             	mov    %r13,%rdi
   199af:	e8 1c e6 ff ff       	callq  17fd0 <mbedtls_mpi_mod_mpi>
   199b4:	85 c0                	test   %eax,%eax
   199b6:	0f 85 4c ff ff ff    	jne    19908 <mpi_miller_rabin+0x3f8>
   199bc:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   199c1:	4c 89 e6             	mov    %r12,%rsi
   199c4:	4c 89 ef             	mov    %r13,%rdi
   199c7:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   199ce:	00 01 00 00 00 
   199d3:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   199da:	01 00 00 00 
   199de:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   199e5:	00 01 00 00 00 
   199ea:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   199f1:	00 
   199f2:	e8 29 d0 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   199f7:	85 c0                	test   %eax,%eax
   199f9:	0f 84 0f ff ff ff    	je     1990e <mpi_miller_rabin+0x3fe>
   199ff:	48 83 c3 01          	add    $0x1,%rbx
   19a03:	48 3b 5c 24 48       	cmp    0x48(%rsp),%rbx
   19a08:	0f 84 00 ff ff ff    	je     1990e <mpi_miller_rabin+0x3fe>
   19a0e:	4c 89 fe             	mov    %r15,%rsi
   19a11:	4c 89 ef             	mov    %r13,%rdi
   19a14:	e8 07 d0 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   19a19:	85 c0                	test   %eax,%eax
   19a1b:	0f 85 6f ff ff ff    	jne    19990 <mpi_miller_rabin+0x480>
   19a21:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   19a26:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19a2b:	4c 89 ef             	mov    %r13,%rdi
   19a2e:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19a33:	48 c7 84 24 20 01 00 	movq   $0x1,0x120(%rsp)
   19a3a:	00 01 00 00 00 
   19a3f:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19a46:	01 00 00 00 
   19a4a:	48 c7 84 24 08 01 00 	movq   $0x1,0x108(%rsp)
   19a51:	00 01 00 00 00 
   19a56:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   19a5d:	00 
   19a5e:	e8 bd cf ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   19a63:	85 c0                	test   %eax,%eax
   19a65:	0f 85 ee fd ff ff    	jne    19859 <mpi_miller_rabin+0x349>
   19a6b:	e9 c0 fe ff ff       	jmpq   19930 <mpi_miller_rabin+0x420>
   19a70:	e8 eb 97 fe ff       	callq  3260 <__stack_chk_fail@plt>
   19a75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19a7c:	00 00 00 00 

0000000000019a80 <mbedtls_mpi_random>:
   19a80:	f3 0f 1e fa          	endbr64 
   19a84:	48 85 f6             	test   %rsi,%rsi
   19a87:	78 6e                	js     19af7 <mbedtls_mpi_random+0x77>
   19a89:	41 56                	push   %r14
   19a8b:	4d 89 c6             	mov    %r8,%r14
   19a8e:	41 55                	push   %r13
   19a90:	49 89 cd             	mov    %rcx,%r13
   19a93:	41 54                	push   %r12
   19a95:	49 89 fc             	mov    %rdi,%r12
   19a98:	48 89 d7             	mov    %rdx,%rdi
   19a9b:	55                   	push   %rbp
   19a9c:	48 89 f5             	mov    %rsi,%rbp
   19a9f:	53                   	push   %rbx
   19aa0:	48 89 d3             	mov    %rdx,%rbx
   19aa3:	e8 68 d0 ff ff       	callq  16b10 <mbedtls_mpi_cmp_int>
   19aa8:	85 c0                	test   %eax,%eax
   19aaa:	7e 44                	jle    19af0 <mbedtls_mpi_random+0x70>
   19aac:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   19ab0:	4c 89 e7             	mov    %r12,%rdi
   19ab3:	e8 88 c7 ff ff       	callq  16240 <mbedtls_mpi_resize_clear>
   19ab8:	85 c0                	test   %eax,%eax
   19aba:	74 0c                	je     19ac8 <mbedtls_mpi_random+0x48>
   19abc:	5b                   	pop    %rbx
   19abd:	5d                   	pop    %rbp
   19abe:	41 5c                	pop    %r12
   19ac0:	41 5d                	pop    %r13
   19ac2:	41 5e                	pop    %r14
   19ac4:	c3                   	retq   
   19ac5:	0f 1f 00             	nopl   (%rax)
   19ac8:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
   19acd:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   19ad1:	4d 89 f1             	mov    %r14,%r9
   19ad4:	4d 89 e8             	mov    %r13,%r8
   19ad7:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   19adc:	5b                   	pop    %rbx
   19add:	48 89 ee             	mov    %rbp,%rsi
   19ae0:	5d                   	pop    %rbp
   19ae1:	41 5c                	pop    %r12
   19ae3:	41 5d                	pop    %r13
   19ae5:	41 5e                	pop    %r14
   19ae7:	e9 f4 24 00 00       	jmpq   1bfe0 <mbedtls_mpi_core_random>
   19aec:	0f 1f 40 00          	nopl   0x0(%rax)
   19af0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   19af5:	eb c5                	jmp    19abc <mbedtls_mpi_random+0x3c>
   19af7:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   19afc:	c3                   	retq   
   19afd:	0f 1f 00             	nopl   (%rax)

0000000000019b00 <mbedtls_mpi_inv_mod>:
   19b00:	f3 0f 1e fa          	endbr64 
   19b04:	41 57                	push   %r15
   19b06:	41 56                	push   %r14
   19b08:	49 89 f6             	mov    %rsi,%r14
   19b0b:	41 55                	push   %r13
   19b0d:	41 54                	push   %r12
   19b0f:	55                   	push   %rbp
   19b10:	53                   	push   %rbx
   19b11:	48 89 d3             	mov    %rdx,%rbx
   19b14:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   19b1b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   19b20:	4c 8d a4 24 60 01 00 	lea    0x160(%rsp),%r12
   19b27:	00 
   19b28:	48 89 d7             	mov    %rdx,%rdi
   19b2b:	4c 89 e6             	mov    %r12,%rsi
   19b2e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19b35:	00 00 
   19b37:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   19b3e:	00 
   19b3f:	31 c0                	xor    %eax,%eax
   19b41:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   19b48:	00 
   19b49:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
   19b50:	00 01 00 00 00 
   19b55:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   19b5c:	01 00 00 00 
   19b60:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   19b67:	00 01 00 00 00 
   19b6c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19b71:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   19b78:	00 
   19b79:	e8 a2 ce ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   19b7e:	85 c0                	test   %eax,%eax
   19b80:	0f 8e 2a 05 00 00    	jle    1a0b0 <mbedtls_mpi_inv_mod+0x5b0>
   19b86:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   19b8b:	48 89 da             	mov    %rbx,%rdx
   19b8e:	4c 89 f6             	mov    %r14,%rsi
   19b91:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   19b98:	00 
   19b99:	48 89 ef             	mov    %rbp,%rdi
   19b9c:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   19ba3:	00 00 
   19ba5:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   19bac:	00 00 
   19bae:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
   19bb5:	01 00 00 00 
   19bb9:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
   19bc0:	00 00 00 00 00 
   19bc5:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
   19bcc:	00 00 00 00 00 
   19bd1:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   19bd8:	01 00 00 00 
   19bdc:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
   19be3:	00 00 00 00 00 
   19be8:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
   19bef:	00 00 00 00 00 
   19bf4:	c7 84 24 c0 00 00 00 	movl   $0x1,0xc0(%rsp)
   19bfb:	01 00 00 00 
   19bff:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   19c06:	00 00 00 00 00 
   19c0b:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   19c12:	00 00 00 00 00 
   19c17:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   19c1e:	00 
   19c1f:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19c26:	00 00 
   19c28:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   19c2f:	00 00 
   19c31:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
   19c38:	01 00 00 00 
   19c3c:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   19c43:	00 00 00 00 00 
   19c48:	48 c7 84 24 f0 00 00 	movq   $0x0,0xf0(%rsp)
   19c4f:	00 00 00 00 00 
   19c54:	c7 84 24 00 01 00 00 	movl   $0x1,0x100(%rsp)
   19c5b:	01 00 00 00 
   19c5f:	48 c7 84 24 08 01 00 	movq   $0x0,0x108(%rsp)
   19c66:	00 00 00 00 00 
   19c6b:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
   19c72:	00 00 00 00 00 
   19c77:	c7 84 24 20 01 00 00 	movl   $0x1,0x120(%rsp)
   19c7e:	01 00 00 00 
   19c82:	48 c7 84 24 28 01 00 	movq   $0x0,0x128(%rsp)
   19c89:	00 00 00 00 00 
   19c8e:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   19c95:	00 00 00 00 00 
   19c9a:	c7 84 24 40 01 00 00 	movl   $0x1,0x140(%rsp)
   19ca1:	01 00 00 00 
   19ca5:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   19cac:	00 00 00 00 00 
   19cb1:	48 c7 84 24 50 01 00 	movq   $0x0,0x150(%rsp)
   19cb8:	00 00 00 00 00 
   19cbd:	e8 9e f4 ff ff       	callq  19160 <mbedtls_mpi_gcd>
   19cc2:	85 c0                	test   %eax,%eax
   19cc4:	75 48                	jne    19d0e <mbedtls_mpi_inv_mod+0x20e>
   19cc6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19ccb:	4c 89 e6             	mov    %r12,%rsi
   19cce:	48 89 ef             	mov    %rbp,%rdi
   19cd1:	48 c7 84 24 80 01 00 	movq   $0x1,0x180(%rsp)
   19cd8:	00 01 00 00 00 
   19cdd:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   19ce4:	01 00 00 00 
   19ce8:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   19cef:	00 01 00 00 00 
   19cf4:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   19cfb:	00 
   19cfc:	e8 1f cd ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   19d01:	85 c0                	test   %eax,%eax
   19d03:	0f 84 ef 00 00 00    	je     19df8 <mbedtls_mpi_inv_mod+0x2f8>
   19d09:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   19d0e:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   19d13:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   19d1a:	00 
   19d1b:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   19d22:	00 
   19d23:	48 8d 8c 24 00 01 00 	lea    0x100(%rsp),%rcx
   19d2a:	00 
   19d2b:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
   19d32:	00 
   19d33:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   19d38:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
   19d3f:	00 
   19d40:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
   19d47:	00 
   19d48:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
   19d4f:	00 
   19d50:	4c 89 ef             	mov    %r13,%rdi
   19d53:	89 44 24 10          	mov    %eax,0x10(%rsp)
   19d57:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
   19d5c:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   19d61:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   19d66:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   19d6b:	e8 d0 c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19d70:	4c 89 f7             	mov    %r14,%rdi
   19d73:	e8 c8 c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19d78:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   19d7d:	4c 89 df             	mov    %r11,%rdi
   19d80:	e8 bb c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19d85:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   19d8a:	4c 89 d7             	mov    %r10,%rdi
   19d8d:	e8 ae c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19d92:	48 89 ef             	mov    %rbp,%rdi
   19d95:	e8 a6 c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19d9a:	4c 89 ff             	mov    %r15,%rdi
   19d9d:	e8 9e c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19da2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19da7:	e8 94 c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19dac:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   19db1:	4c 89 c7             	mov    %r8,%rdi
   19db4:	e8 87 c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19db9:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   19dbe:	4c 89 cf             	mov    %r9,%rdi
   19dc1:	e8 7a c3 ff ff       	callq  16140 <mbedtls_mpi_free>
   19dc6:	8b 44 24 10          	mov    0x10(%rsp),%eax
   19dca:	48 8b 8c 24 88 01 00 	mov    0x188(%rsp),%rcx
   19dd1:	00 
   19dd2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   19dd9:	00 00 
   19ddb:	0f 85 3e 05 00 00    	jne    1a31f <mbedtls_mpi_inv_mod+0x81f>
   19de1:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   19de8:	5b                   	pop    %rbx
   19de9:	5d                   	pop    %rbp
   19dea:	41 5c                	pop    %r12
   19dec:	41 5d                	pop    %r13
   19dee:	41 5e                	pop    %r14
   19df0:	41 5f                	pop    %r15
   19df2:	c3                   	retq   
   19df3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19df8:	4c 8d 6c 24 60       	lea    0x60(%rsp),%r13
   19dfd:	4c 89 f6             	mov    %r14,%rsi
   19e00:	48 89 da             	mov    %rbx,%rdx
   19e03:	4c 89 ef             	mov    %r13,%rdi
   19e06:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   19e0d:	00 
   19e0e:	e8 bd e1 ff ff       	callq  17fd0 <mbedtls_mpi_mod_mpi>
   19e13:	85 c0                	test   %eax,%eax
   19e15:	0f 85 00 ff ff ff    	jne    19d1b <mbedtls_mpi_inv_mod+0x21b>
   19e1b:	4c 89 ee             	mov    %r13,%rsi
   19e1e:	4c 89 f7             	mov    %r14,%rdi
   19e21:	4c 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%r15
   19e28:	00 
   19e29:	e8 a2 c5 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   19e2e:	85 c0                	test   %eax,%eax
   19e30:	0f 85 ed fe ff ff    	jne    19d23 <mbedtls_mpi_inv_mod+0x223>
   19e36:	48 89 de             	mov    %rbx,%rsi
   19e39:	4c 89 ff             	mov    %r15,%rdi
   19e3c:	e8 8f c5 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   19e41:	85 c0                	test   %eax,%eax
   19e43:	0f 85 da fe ff ff    	jne    19d23 <mbedtls_mpi_inv_mod+0x223>
   19e49:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   19e50:	00 
   19e51:	48 89 de             	mov    %rbx,%rsi
   19e54:	48 89 c7             	mov    %rax,%rdi
   19e57:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19e5c:	e8 6f c5 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   19e61:	4c 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%r11
   19e68:	00 
   19e69:	85 c0                	test   %eax,%eax
   19e6b:	0f 85 c7 fe ff ff    	jne    19d38 <mbedtls_mpi_inv_mod+0x238>
   19e71:	4c 89 df             	mov    %r11,%rdi
   19e74:	be 01 00 00 00       	mov    $0x1,%esi
   19e79:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   19e7e:	e8 bd c6 ff ff       	callq  16540 <mbedtls_mpi_lset>
   19e83:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   19e88:	85 c0                	test   %eax,%eax
   19e8a:	0f 85 a8 fe ff ff    	jne    19d38 <mbedtls_mpi_inv_mod+0x238>
   19e90:	4c 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%r10
   19e97:	00 
   19e98:	31 f6                	xor    %esi,%esi
   19e9a:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   19e9f:	4c 89 d7             	mov    %r10,%rdi
   19ea2:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   19ea7:	e8 94 c6 ff ff       	callq  16540 <mbedtls_mpi_lset>
   19eac:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   19eb1:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   19eb6:	85 c0                	test   %eax,%eax
   19eb8:	0f 85 82 fe ff ff    	jne    19d40 <mbedtls_mpi_inv_mod+0x240>
   19ebe:	4c 8d 84 24 20 01 00 	lea    0x120(%rsp),%r8
   19ec5:	00 
   19ec6:	31 f6                	xor    %esi,%esi
   19ec8:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   19ecd:	4c 89 c7             	mov    %r8,%rdi
   19ed0:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   19ed5:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   19eda:	e8 61 c6 ff ff       	callq  16540 <mbedtls_mpi_lset>
   19edf:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   19ee4:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   19ee9:	4c 8d 8c 24 40 01 00 	lea    0x140(%rsp),%r9
   19ef0:	00 
   19ef1:	85 c0                	test   %eax,%eax
   19ef3:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   19ef8:	0f 85 52 fe ff ff    	jne    19d50 <mbedtls_mpi_inv_mod+0x250>
   19efe:	4c 89 cf             	mov    %r9,%rdi
   19f01:	be 01 00 00 00       	mov    $0x1,%esi
   19f06:	4c 89 5c 24 38       	mov    %r11,0x38(%rsp)
   19f0b:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   19f10:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   19f15:	e8 26 c6 ff ff       	callq  16540 <mbedtls_mpi_lset>
   19f1a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   19f1f:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   19f24:	85 c0                	test   %eax,%eax
   19f26:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   19f2b:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
   19f30:	0f 85 1a fe ff ff    	jne    19d50 <mbedtls_mpi_inv_mod+0x250>
   19f36:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   19f3b:	4c 89 c3             	mov    %r8,%rbx
   19f3e:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   19f43:	4c 89 cd             	mov    %r9,%rbp
   19f46:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   19f4b:	4d 89 d4             	mov    %r10,%r12
   19f4e:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   19f53:	4d 89 de             	mov    %r11,%r14
   19f56:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   19f5d:	00 
   19f5e:	f6 07 01             	testb  $0x1,(%rdi)
   19f61:	0f 85 b3 00 00 00    	jne    1a01a <mbedtls_mpi_inv_mod+0x51a>
   19f67:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   19f6e:	00 
   19f6f:	48 85 f6             	test   %rsi,%rsi
   19f72:	0f 85 6c 01 00 00    	jne    1a0e4 <mbedtls_mpi_inv_mod+0x5e4>
   19f78:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   19f7f:	00 
   19f80:	f6 00 01             	testb  $0x1,(%rax)
   19f83:	75 0d                	jne    19f92 <mbedtls_mpi_inv_mod+0x492>
   19f85:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   19f8c:	00 
   19f8d:	f6 00 01             	testb  $0x1,(%rax)
   19f90:	74 36                	je     19fc8 <mbedtls_mpi_inv_mod+0x4c8>
   19f92:	b9 01 00 00 00       	mov    $0x1,%ecx
   19f97:	4c 89 fa             	mov    %r15,%rdx
   19f9a:	4c 89 f6             	mov    %r14,%rsi
   19f9d:	4c 89 f7             	mov    %r14,%rdi
   19fa0:	e8 1b ce ff ff       	callq  16dc0 <add_sub_mpi>
   19fa5:	85 c0                	test   %eax,%eax
   19fa7:	0f 85 9d 01 00 00    	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   19fad:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   19fb2:	4c 89 ea             	mov    %r13,%rdx
   19fb5:	4c 89 e6             	mov    %r12,%rsi
   19fb8:	4c 89 e7             	mov    %r12,%rdi
   19fbb:	e8 00 ce ff ff       	callq  16dc0 <add_sub_mpi>
   19fc0:	85 c0                	test   %eax,%eax
   19fc2:	0f 85 82 01 00 00    	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   19fc8:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   19fcf:	00 
   19fd0:	48 85 f6             	test   %rsi,%rsi
   19fd3:	0f 85 1a 01 00 00    	jne    1a0f3 <mbedtls_mpi_inv_mod+0x5f3>
   19fd9:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   19fe0:	00 
   19fe1:	48 85 f6             	test   %rsi,%rsi
   19fe4:	0f 84 6c ff ff ff    	je     19f56 <mbedtls_mpi_inv_mod+0x456>
   19fea:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   19ff1:	00 
   19ff2:	ba 01 00 00 00       	mov    $0x1,%edx
   19ff7:	e8 14 19 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   19ffc:	e9 55 ff ff ff       	jmpq   19f56 <mbedtls_mpi_inv_mod+0x456>
   1a001:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a008:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
   1a00f:	00 
   1a010:	ba 01 00 00 00       	mov    $0x1,%edx
   1a015:	e8 f6 18 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   1a01a:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
   1a021:	00 
   1a022:	f6 07 01             	testb  $0x1,(%rdi)
   1a025:	0f 85 3a 01 00 00    	jne    1a165 <mbedtls_mpi_inv_mod+0x665>
   1a02b:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
   1a032:	00 
   1a033:	48 85 f6             	test   %rsi,%rsi
   1a036:	0f 85 84 00 00 00    	jne    1a0c0 <mbedtls_mpi_inv_mod+0x5c0>
   1a03c:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   1a043:	00 
   1a044:	f6 00 01             	testb  $0x1,(%rax)
   1a047:	75 0d                	jne    1a056 <mbedtls_mpi_inv_mod+0x556>
   1a049:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
   1a050:	00 
   1a051:	f6 00 01             	testb  $0x1,(%rax)
   1a054:	74 36                	je     1a08c <mbedtls_mpi_inv_mod+0x58c>
   1a056:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a05b:	4c 89 fa             	mov    %r15,%rdx
   1a05e:	48 89 de             	mov    %rbx,%rsi
   1a061:	48 89 df             	mov    %rbx,%rdi
   1a064:	e8 57 cd ff ff       	callq  16dc0 <add_sub_mpi>
   1a069:	85 c0                	test   %eax,%eax
   1a06b:	0f 85 d9 00 00 00    	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   1a071:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1a076:	4c 89 ea             	mov    %r13,%rdx
   1a079:	48 89 ee             	mov    %rbp,%rsi
   1a07c:	48 89 ef             	mov    %rbp,%rdi
   1a07f:	e8 3c cd ff ff       	callq  16dc0 <add_sub_mpi>
   1a084:	85 c0                	test   %eax,%eax
   1a086:	0f 85 be 00 00 00    	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   1a08c:	48 8b b4 24 28 01 00 	mov    0x128(%rsp),%rsi
   1a093:	00 
   1a094:	48 85 f6             	test   %rsi,%rsi
   1a097:	75 37                	jne    1a0d0 <mbedtls_mpi_inv_mod+0x5d0>
   1a099:	48 8b b4 24 48 01 00 	mov    0x148(%rsp),%rsi
   1a0a0:	00 
   1a0a1:	48 85 f6             	test   %rsi,%rsi
   1a0a4:	0f 84 70 ff ff ff    	je     1a01a <mbedtls_mpi_inv_mod+0x51a>
   1a0aa:	e9 59 ff ff ff       	jmpq   1a008 <mbedtls_mpi_inv_mod+0x508>
   1a0af:	90                   	nop
   1a0b0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1a0b5:	e9 10 fd ff ff       	jmpq   19dca <mbedtls_mpi_inv_mod+0x2ca>
   1a0ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a0c0:	ba 01 00 00 00       	mov    $0x1,%edx
   1a0c5:	e8 46 18 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   1a0ca:	e9 6d ff ff ff       	jmpq   1a03c <mbedtls_mpi_inv_mod+0x53c>
   1a0cf:	90                   	nop
   1a0d0:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
   1a0d7:	00 
   1a0d8:	ba 01 00 00 00       	mov    $0x1,%edx
   1a0dd:	e8 2e 18 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   1a0e2:	eb b5                	jmp    1a099 <mbedtls_mpi_inv_mod+0x599>
   1a0e4:	ba 01 00 00 00       	mov    $0x1,%edx
   1a0e9:	e8 22 18 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   1a0ee:	e9 85 fe ff ff       	jmpq   19f78 <mbedtls_mpi_inv_mod+0x478>
   1a0f3:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
   1a0fa:	00 
   1a0fb:	ba 01 00 00 00       	mov    $0x1,%edx
   1a100:	e8 0b 18 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   1a105:	e9 cf fe ff ff       	jmpq   19fd9 <mbedtls_mpi_inv_mod+0x4d9>
   1a10a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1a10f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1a114:	48 89 f7             	mov    %rsi,%rdi
   1a117:	e8 a4 cc ff ff       	callq  16dc0 <add_sub_mpi>
   1a11c:	85 c0                	test   %eax,%eax
   1a11e:	75 2a                	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   1a120:	83 c9 ff             	or     $0xffffffff,%ecx
   1a123:	4c 89 f2             	mov    %r14,%rdx
   1a126:	48 89 de             	mov    %rbx,%rsi
   1a129:	48 89 df             	mov    %rbx,%rdi
   1a12c:	e8 8f cc ff ff       	callq  16dc0 <add_sub_mpi>
   1a131:	85 c0                	test   %eax,%eax
   1a133:	75 15                	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   1a135:	83 c9 ff             	or     $0xffffffff,%ecx
   1a138:	4c 89 e2             	mov    %r12,%rdx
   1a13b:	48 89 ee             	mov    %rbp,%rsi
   1a13e:	48 89 ef             	mov    %rbp,%rdi
   1a141:	e8 7a cc ff ff       	callq  16dc0 <add_sub_mpi>
   1a146:	85 c0                	test   %eax,%eax
   1a148:	74 6d                	je     1a1b7 <mbedtls_mpi_inv_mod+0x6b7>
   1a14a:	4d 89 f3             	mov    %r14,%r11
   1a14d:	49 89 e9             	mov    %rbp,%r9
   1a150:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   1a155:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a15a:	4d 89 e2             	mov    %r12,%r10
   1a15d:	49 89 d8             	mov    %rbx,%r8
   1a160:	e9 eb fb ff ff       	jmpq   19d50 <mbedtls_mpi_inv_mod+0x250>
   1a165:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1a16a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1a16f:	4c 89 ce             	mov    %r9,%rsi
   1a172:	e8 a9 c8 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1a177:	83 c9 ff             	or     $0xffffffff,%ecx
   1a17a:	85 c0                	test   %eax,%eax
   1a17c:	78 8c                	js     1a10a <mbedtls_mpi_inv_mod+0x60a>
   1a17e:	4c 89 ca             	mov    %r9,%rdx
   1a181:	48 89 fe             	mov    %rdi,%rsi
   1a184:	e8 37 cc ff ff       	callq  16dc0 <add_sub_mpi>
   1a189:	85 c0                	test   %eax,%eax
   1a18b:	75 bd                	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   1a18d:	83 c9 ff             	or     $0xffffffff,%ecx
   1a190:	48 89 da             	mov    %rbx,%rdx
   1a193:	4c 89 f6             	mov    %r14,%rsi
   1a196:	4c 89 f7             	mov    %r14,%rdi
   1a199:	e8 22 cc ff ff       	callq  16dc0 <add_sub_mpi>
   1a19e:	85 c0                	test   %eax,%eax
   1a1a0:	75 a8                	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   1a1a2:	83 c9 ff             	or     $0xffffffff,%ecx
   1a1a5:	48 89 ea             	mov    %rbp,%rdx
   1a1a8:	4c 89 e6             	mov    %r12,%rsi
   1a1ab:	4c 89 e7             	mov    %r12,%rdi
   1a1ae:	e8 0d cc ff ff       	callq  16dc0 <add_sub_mpi>
   1a1b3:	85 c0                	test   %eax,%eax
   1a1b5:	75 93                	jne    1a14a <mbedtls_mpi_inv_mod+0x64a>
   1a1b7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a1bc:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1a1c1:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1a1c8:	00 00 00 00 00 
   1a1cd:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   1a1d4:	01 00 00 00 
   1a1d8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1a1dd:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   1a1e4:	00 01 00 00 00 
   1a1e9:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1a1f0:	00 
   1a1f1:	e8 2a c8 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1a1f6:	85 c0                	test   %eax,%eax
   1a1f8:	0f 85 58 fd ff ff    	jne    19f56 <mbedtls_mpi_inv_mod+0x456>
   1a1fe:	4d 89 e2             	mov    %r12,%r10
   1a201:	49 89 d8             	mov    %rbx,%r8
   1a204:	4d 89 f3             	mov    %r14,%r11
   1a207:	49 89 e9             	mov    %rbp,%r9
   1a20a:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1a20f:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   1a214:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   1a219:	4c 89 c5             	mov    %r8,%rbp
   1a21c:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   1a221:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   1a226:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1a22b:	eb 1b                	jmp    1a248 <mbedtls_mpi_inv_mod+0x748>
   1a22d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a232:	48 89 da             	mov    %rbx,%rdx
   1a235:	48 89 ee             	mov    %rbp,%rsi
   1a238:	48 89 ef             	mov    %rbp,%rdi
   1a23b:	e8 80 cb ff ff       	callq  16dc0 <add_sub_mpi>
   1a240:	85 c0                	test   %eax,%eax
   1a242:	0f 85 dc 00 00 00    	jne    1a324 <mbedtls_mpi_inv_mod+0x824>
   1a248:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a24d:	4c 89 e6             	mov    %r12,%rsi
   1a250:	48 89 ef             	mov    %rbp,%rdi
   1a253:	48 c7 84 24 80 01 00 	movq   $0x0,0x180(%rsp)
   1a25a:	00 00 00 00 00 
   1a25f:	c7 84 24 60 01 00 00 	movl   $0x1,0x160(%rsp)
   1a266:	01 00 00 00 
   1a26a:	48 c7 84 24 68 01 00 	movq   $0x1,0x168(%rsp)
   1a271:	00 01 00 00 00 
   1a276:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1a27d:	00 
   1a27e:	e8 9d c7 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1a283:	85 c0                	test   %eax,%eax
   1a285:	78 a6                	js     1a22d <mbedtls_mpi_inv_mod+0x72d>
   1a287:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a28c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1a291:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a296:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1a29b:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1a2a0:	48 89 fd             	mov    %rdi,%rbp
   1a2a3:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1a2a8:	4d 89 dc             	mov    %r11,%r12
   1a2ab:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   1a2b0:	eb 15                	jmp    1a2c7 <mbedtls_mpi_inv_mod+0x7c7>
   1a2b2:	83 c9 ff             	or     $0xffffffff,%ecx
   1a2b5:	48 89 da             	mov    %rbx,%rdx
   1a2b8:	48 89 ee             	mov    %rbp,%rsi
   1a2bb:	48 89 ef             	mov    %rbp,%rdi
   1a2be:	e8 fd ca ff ff       	callq  16dc0 <add_sub_mpi>
   1a2c3:	85 c0                	test   %eax,%eax
   1a2c5:	75 79                	jne    1a340 <mbedtls_mpi_inv_mod+0x840>
   1a2c7:	48 89 de             	mov    %rbx,%rsi
   1a2ca:	48 89 ef             	mov    %rbp,%rdi
   1a2cd:	e8 4e c7 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1a2d2:	85 c0                	test   %eax,%eax
   1a2d4:	79 dc                	jns    1a2b2 <mbedtls_mpi_inv_mod+0x7b2>
   1a2d6:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1a2db:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1a2e0:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1a2e5:	48 89 fe             	mov    %rdi,%rsi
   1a2e8:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1a2ed:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   1a2f2:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1a2f7:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   1a2fc:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   1a301:	e8 ca c0 ff ff       	callq  163d0 <mbedtls_mpi_copy>
   1a306:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1a30b:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1a310:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a315:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   1a31a:	e9 31 fa ff ff       	jmpq   19d50 <mbedtls_mpi_inv_mod+0x250>
   1a31f:	e8 3c 8f fe ff       	callq  3260 <__stack_chk_fail@plt>
   1a324:	49 89 e8             	mov    %rbp,%r8
   1a327:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1a32c:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1a331:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1a336:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1a33b:	e9 10 fa ff ff       	jmpq   19d50 <mbedtls_mpi_inv_mod+0x250>
   1a340:	49 89 e8             	mov    %rbp,%r8
   1a343:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1a348:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   1a34d:	4d 89 e3             	mov    %r12,%r11
   1a350:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1a355:	e9 f6 f9 ff ff       	jmpq   19d50 <mbedtls_mpi_inv_mod+0x250>
   1a35a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001a360 <mbedtls_mpi_is_prime_ext>:
   1a360:	f3 0f 1e fa          	endbr64 
   1a364:	41 55                	push   %r13
   1a366:	49 89 cd             	mov    %rcx,%r13
   1a369:	41 54                	push   %r12
   1a36b:	49 89 d4             	mov    %rdx,%r12
   1a36e:	55                   	push   %rbp
   1a36f:	53                   	push   %rbx
   1a370:	89 f3                	mov    %esi,%ebx
   1a372:	48 83 ec 58          	sub    $0x58,%rsp
   1a376:	4c 8b 57 10          	mov    0x10(%rdi),%r10
   1a37a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a381:	00 00 
   1a383:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a388:	31 c0                	xor    %eax,%eax
   1a38a:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1a38e:	4c 8d 4c 24 20       	lea    0x20(%rsp),%r9
   1a393:	48 89 e5             	mov    %rsp,%rbp
   1a396:	4c 89 ce             	mov    %r9,%rsi
   1a399:	48 89 ef             	mov    %rbp,%rdi
   1a39c:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   1a3a3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a3a8:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   1a3ad:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1a3b2:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a3b9:	00 00 
   1a3bb:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
   1a3c2:	00 
   1a3c3:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1a3ca:	00 00 
   1a3cc:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a3d1:	e8 4a c6 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1a3d6:	85 c0                	test   %eax,%eax
   1a3d8:	74 7e                	je     1a458 <mbedtls_mpi_is_prime_ext+0xf8>
   1a3da:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   1a3e1:	00 00 
   1a3e3:	4c 89 ce             	mov    %r9,%rsi
   1a3e6:	e8 35 c6 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1a3eb:	85 c0                	test   %eax,%eax
   1a3ed:	74 69                	je     1a458 <mbedtls_mpi_is_prime_ext+0xf8>
   1a3ef:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   1a3f6:	00 00 
   1a3f8:	4c 89 ce             	mov    %r9,%rsi
   1a3fb:	e8 20 c6 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1a400:	85 c0                	test   %eax,%eax
   1a402:	74 4c                	je     1a450 <mbedtls_mpi_is_prime_ext+0xf0>
   1a404:	41 f6 02 01          	testb  $0x1,(%r10)
   1a408:	74 4e                	je     1a458 <mbedtls_mpi_is_prime_ext+0xf8>
   1a40a:	e8 d1 e1 ff ff       	callq  185e0 <mpi_check_small_factors.part.0>
   1a40f:	85 c0                	test   %eax,%eax
   1a411:	74 25                	je     1a438 <mbedtls_mpi_is_prime_ext+0xd8>
   1a413:	83 f8 01             	cmp    $0x1,%eax
   1a416:	74 38                	je     1a450 <mbedtls_mpi_is_prime_ext+0xf0>
   1a418:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   1a41d:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1a424:	00 00 
   1a426:	75 37                	jne    1a45f <mbedtls_mpi_is_prime_ext+0xff>
   1a428:	48 83 c4 58          	add    $0x58,%rsp
   1a42c:	5b                   	pop    %rbx
   1a42d:	5d                   	pop    %rbp
   1a42e:	41 5c                	pop    %r12
   1a430:	41 5d                	pop    %r13
   1a432:	c3                   	retq   
   1a433:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a438:	48 63 f3             	movslq %ebx,%rsi
   1a43b:	4c 89 e9             	mov    %r13,%rcx
   1a43e:	4c 89 e2             	mov    %r12,%rdx
   1a441:	48 89 ef             	mov    %rbp,%rdi
   1a444:	e8 c7 f0 ff ff       	callq  19510 <mpi_miller_rabin>
   1a449:	eb cd                	jmp    1a418 <mbedtls_mpi_is_prime_ext+0xb8>
   1a44b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a450:	31 c0                	xor    %eax,%eax
   1a452:	eb c4                	jmp    1a418 <mbedtls_mpi_is_prime_ext+0xb8>
   1a454:	0f 1f 40 00          	nopl   0x0(%rax)
   1a458:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1a45d:	eb b9                	jmp    1a418 <mbedtls_mpi_is_prime_ext+0xb8>
   1a45f:	e8 fc 8d fe ff       	callq  3260 <__stack_chk_fail@plt>
   1a464:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a46b:	00 00 00 00 
   1a46f:	90                   	nop

000000000001a470 <mbedtls_mpi_gen_prime>:
   1a470:	f3 0f 1e fa          	endbr64 
   1a474:	41 57                	push   %r15
   1a476:	41 56                	push   %r14
   1a478:	41 55                	push   %r13
   1a47a:	41 54                	push   %r12
   1a47c:	55                   	push   %rbp
   1a47d:	53                   	push   %rbx
   1a47e:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1a485:	48 89 34 24          	mov    %rsi,(%rsp)
   1a489:	89 54 24 14          	mov    %edx,0x14(%rsp)
   1a48d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a494:	00 00 
   1a496:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1a49b:	31 c0                	xor    %eax,%eax
   1a49d:	48 8d 46 fd          	lea    -0x3(%rsi),%rax
   1a4a1:	48 3d fd 1f 00 00    	cmp    $0x1ffd,%rax
   1a4a7:	0f 87 3f 04 00 00    	ja     1a8ec <mbedtls_mpi_gen_prime+0x47c>
   1a4ad:	31 c0                	xor    %eax,%eax
   1a4af:	40 f6 c6 3f          	test   $0x3f,%sil
   1a4b3:	49 89 ff             	mov    %rdi,%r15
   1a4b6:	48 89 cb             	mov    %rcx,%rbx
   1a4b9:	0f 95 c0             	setne  %al
   1a4bc:	89 d7                	mov    %edx,%edi
   1a4be:	48 89 f1             	mov    %rsi,%rcx
   1a4c1:	48 c1 ee 06          	shr    $0x6,%rsi
   1a4c5:	48 01 f0             	add    %rsi,%rax
   1a4c8:	83 e7 02             	and    $0x2,%edi
   1a4cb:	4c 89 c5             	mov    %r8,%rbp
   1a4ce:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   1a4d5:	00 
   1a4d6:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1a4dd:	00 00 
   1a4df:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a4e6:	00 00 
   1a4e8:	0f 85 02 01 00 00    	jne    1a5f0 <mbedtls_mpi_gen_prime+0x180>
   1a4ee:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%rsp)
   1a4f5:	00 
   1a4f6:	48 81 f9 13 05 00 00 	cmp    $0x513,%rcx
   1a4fd:	77 19                	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a4ff:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%rsp)
   1a506:	00 
   1a507:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
   1a50e:	0f 86 1c 03 00 00    	jbe    1a830 <mbedtls_mpi_gen_prime+0x3c0>
   1a514:	0f 1f 40 00          	nopl   0x0(%rax)
   1a518:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
   1a51f:	00 
   1a520:	48 c1 e0 06          	shl    $0x6,%rax
   1a524:	49 bd 84 64 de f9 33 	movabs $0xb504f333f9de6484,%r13
   1a52b:	f3 04 b5 
   1a52e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a533:	48 2b 04 24          	sub    (%rsp),%rax
   1a537:	4d 8d 74 24 f8       	lea    -0x8(%r12),%r14
   1a53c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a548:	48 89 e9             	mov    %rbp,%rcx
   1a54b:	48 89 da             	mov    %rbx,%rdx
   1a54e:	4c 89 e6             	mov    %r12,%rsi
   1a551:	4c 89 ff             	mov    %r15,%rdi
   1a554:	e8 47 ef ff ff       	callq  194a0 <mbedtls_mpi_fill_random>
   1a559:	85 c0                	test   %eax,%eax
   1a55b:	75 51                	jne    1a5ae <mbedtls_mpi_gen_prime+0x13e>
   1a55d:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1a561:	4e 39 2c 37          	cmp    %r13,(%rdi,%r14,1)
   1a565:	76 e1                	jbe    1a548 <mbedtls_mpi_gen_prime+0xd8>
   1a567:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1a56c:	48 39 0c 24          	cmp    %rcx,(%rsp)
   1a570:	73 0d                	jae    1a57f <mbedtls_mpi_gen_prime+0x10f>
   1a572:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1a576:	48 85 f6             	test   %rsi,%rsi
   1a579:	0f 85 21 01 00 00    	jne    1a6a0 <mbedtls_mpi_gen_prime+0x230>
   1a57f:	48 8b 07             	mov    (%rdi),%rax
   1a582:	48 89 c2             	mov    %rax,%rdx
   1a585:	48 83 ca 01          	or     $0x1,%rdx
   1a589:	48 89 17             	mov    %rdx,(%rdi)
   1a58c:	f6 44 24 14 01       	testb  $0x1,0x14(%rsp)
   1a591:	0f 85 21 01 00 00    	jne    1a6b8 <mbedtls_mpi_gen_prime+0x248>
   1a597:	8b 74 24 10          	mov    0x10(%rsp),%esi
   1a59b:	48 89 e9             	mov    %rbp,%rcx
   1a59e:	48 89 da             	mov    %rbx,%rdx
   1a5a1:	4c 89 ff             	mov    %r15,%rdi
   1a5a4:	e8 b7 fd ff ff       	callq  1a360 <mbedtls_mpi_is_prime_ext>
   1a5a9:	83 f8 f2             	cmp    $0xfffffff2,%eax
   1a5ac:	74 9a                	je     1a548 <mbedtls_mpi_gen_prime+0xd8>
   1a5ae:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a5b3:	4c 89 e7             	mov    %r12,%rdi
   1a5b6:	89 04 24             	mov    %eax,(%rsp)
   1a5b9:	e8 82 bb ff ff       	callq  16140 <mbedtls_mpi_free>
   1a5be:	8b 04 24             	mov    (%rsp),%eax
   1a5c1:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
   1a5c6:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1a5cd:	00 00 
   1a5cf:	0f 85 21 03 00 00    	jne    1a8f6 <mbedtls_mpi_gen_prime+0x486>
   1a5d5:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1a5dc:	5b                   	pop    %rbx
   1a5dd:	5d                   	pop    %rbp
   1a5de:	41 5c                	pop    %r12
   1a5e0:	41 5d                	pop    %r13
   1a5e2:	41 5e                	pop    %r14
   1a5e4:	41 5f                	pop    %r15
   1a5e6:	c3                   	retq   
   1a5e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a5ee:	00 00 
   1a5f0:	48 8b 0c 24          	mov    (%rsp),%rcx
   1a5f4:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   1a5fb:	00 
   1a5fc:	48 81 f9 a9 05 00 00 	cmp    $0x5a9,%rcx
   1a603:	0f 87 0f ff ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a609:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%rsp)
   1a610:	00 
   1a611:	48 81 f9 7d 04 00 00 	cmp    $0x47d,%rcx
   1a618:	0f 87 fa fe ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a61e:	c7 44 24 10 06 00 00 	movl   $0x6,0x10(%rsp)
   1a625:	00 
   1a626:	48 81 f9 e7 03 00 00 	cmp    $0x3e7,%rcx
   1a62d:	0f 87 e5 fe ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a633:	c7 44 24 10 07 00 00 	movl   $0x7,0x10(%rsp)
   1a63a:	00 
   1a63b:	48 81 f9 51 03 00 00 	cmp    $0x351,%rcx
   1a642:	0f 87 d0 fe ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a648:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
   1a64f:	00 
   1a650:	48 81 f9 ed 02 00 00 	cmp    $0x2ed,%rcx
   1a657:	0f 87 bb fe ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a65d:	c7 44 24 10 0d 00 00 	movl   $0xd,0x10(%rsp)
   1a664:	00 
   1a665:	48 81 f9 f3 01 00 00 	cmp    $0x1f3,%rcx
   1a66c:	0f 87 a6 fe ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a672:	c7 44 24 10 1c 00 00 	movl   $0x1c,0x10(%rsp)
   1a679:	00 
   1a67a:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
   1a681:	0f 87 91 fe ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a687:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
   1a68e:	19 c9                	sbb    %ecx,%ecx
   1a690:	83 e1 0b             	and    $0xb,%ecx
   1a693:	83 c1 28             	add    $0x28,%ecx
   1a696:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   1a69a:	e9 79 fe ff ff       	jmpq   1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a69f:	90                   	nop
   1a6a0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1a6a5:	e8 66 12 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   1a6aa:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1a6ae:	e9 cc fe ff ff       	jmpq   1a57f <mbedtls_mpi_gen_prime+0x10f>
   1a6b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a6b8:	48 83 c8 03          	or     $0x3,%rax
   1a6bc:	ba 03 00 00 00       	mov    $0x3,%edx
   1a6c1:	4c 89 fe             	mov    %r15,%rsi
   1a6c4:	48 89 07             	mov    %rax,(%rdi)
   1a6c7:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1a6cc:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a6d1:	e8 3a da ff ff       	callq  18110 <mbedtls_mpi_mod_int>
   1a6d6:	85 c0                	test   %eax,%eax
   1a6d8:	0f 85 d5 fe ff ff    	jne    1a5b3 <mbedtls_mpi_gen_prime+0x143>
   1a6de:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1a6e3:	48 85 c0             	test   %rax,%rax
   1a6e6:	0f 84 9b 01 00 00    	je     1a887 <mbedtls_mpi_gen_prime+0x417>
   1a6ec:	48 83 f8 01          	cmp    $0x1,%rax
   1a6f0:	0f 84 eb 01 00 00    	je     1a8e1 <mbedtls_mpi_gen_prime+0x471>
   1a6f6:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1a6fb:	4c 89 fe             	mov    %r15,%rsi
   1a6fe:	4c 89 e7             	mov    %r12,%rdi
   1a701:	e8 ca bc ff ff       	callq  163d0 <mbedtls_mpi_copy>
   1a706:	85 c0                	test   %eax,%eax
   1a708:	0f 85 a5 fe ff ff    	jne    1a5b3 <mbedtls_mpi_gen_prime+0x143>
   1a70e:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1a713:	48 85 f6             	test   %rsi,%rsi
   1a716:	0f 85 b1 01 00 00    	jne    1a8cd <mbedtls_mpi_gen_prime+0x45d>
   1a71c:	48 63 44 24 10       	movslq 0x10(%rsp),%rax
   1a721:	48 89 04 24          	mov    %rax,(%rsp)
   1a725:	e9 8d 00 00 00       	jmpq   1a7b7 <mbedtls_mpi_gen_prime+0x347>
   1a72a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a730:	83 f8 f2             	cmp    $0xfffffff2,%eax
   1a733:	0f 85 7a fe ff ff    	jne    1a5b3 <mbedtls_mpi_gen_prime+0x143>
   1a739:	4c 8d 6c 24 50       	lea    0x50(%rsp),%r13
   1a73e:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   1a743:	4c 89 fe             	mov    %r15,%rsi
   1a746:	4c 89 ff             	mov    %r15,%rdi
   1a749:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a74e:	4c 89 ea             	mov    %r13,%rdx
   1a751:	48 c7 44 24 70 0c 00 	movq   $0xc,0x70(%rsp)
   1a758:	00 00 
   1a75a:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a761:	00 
   1a762:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1a769:	00 00 
   1a76b:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   1a770:	e8 4b c6 ff ff       	callq  16dc0 <add_sub_mpi>
   1a775:	85 c0                	test   %eax,%eax
   1a777:	0f 85 36 fe ff ff    	jne    1a5b3 <mbedtls_mpi_gen_prime+0x143>
   1a77d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a782:	4c 89 ea             	mov    %r13,%rdx
   1a785:	4c 89 e6             	mov    %r12,%rsi
   1a788:	4c 89 e7             	mov    %r12,%rdi
   1a78b:	48 c7 44 24 70 06 00 	movq   $0x6,0x70(%rsp)
   1a792:	00 00 
   1a794:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a79b:	00 
   1a79c:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1a7a3:	00 00 
   1a7a5:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
   1a7aa:	e8 11 c6 ff ff       	callq  16dc0 <add_sub_mpi>
   1a7af:	85 c0                	test   %eax,%eax
   1a7b1:	0f 85 fc fd ff ff    	jne    1a5b3 <mbedtls_mpi_gen_prime+0x143>
   1a7b7:	49 8b 47 10          	mov    0x10(%r15),%rax
   1a7bb:	f6 00 01             	testb  $0x1,(%rax)
   1a7be:	0f 84 75 ff ff ff    	je     1a739 <mbedtls_mpi_gen_prime+0x2c9>
   1a7c4:	4c 89 ff             	mov    %r15,%rdi
   1a7c7:	e8 14 de ff ff       	callq  185e0 <mpi_check_small_factors.part.0>
   1a7cc:	85 c0                	test   %eax,%eax
   1a7ce:	0f 85 5c ff ff ff    	jne    1a730 <mbedtls_mpi_gen_prime+0x2c0>
   1a7d4:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1a7d9:	f6 00 01             	testb  $0x1,(%rax)
   1a7dc:	0f 84 57 ff ff ff    	je     1a739 <mbedtls_mpi_gen_prime+0x2c9>
   1a7e2:	4c 89 e7             	mov    %r12,%rdi
   1a7e5:	e8 f6 dd ff ff       	callq  185e0 <mpi_check_small_factors.part.0>
   1a7ea:	85 c0                	test   %eax,%eax
   1a7ec:	0f 85 3e ff ff ff    	jne    1a730 <mbedtls_mpi_gen_prime+0x2c0>
   1a7f2:	48 8b 34 24          	mov    (%rsp),%rsi
   1a7f6:	48 89 e9             	mov    %rbp,%rcx
   1a7f9:	48 89 da             	mov    %rbx,%rdx
   1a7fc:	4c 89 ff             	mov    %r15,%rdi
   1a7ff:	e8 0c ed ff ff       	callq  19510 <mpi_miller_rabin>
   1a804:	85 c0                	test   %eax,%eax
   1a806:	0f 85 24 ff ff ff    	jne    1a730 <mbedtls_mpi_gen_prime+0x2c0>
   1a80c:	48 8b 34 24          	mov    (%rsp),%rsi
   1a810:	48 89 e9             	mov    %rbp,%rcx
   1a813:	48 89 da             	mov    %rbx,%rdx
   1a816:	4c 89 e7             	mov    %r12,%rdi
   1a819:	e8 f2 ec ff ff       	callq  19510 <mpi_miller_rabin>
   1a81e:	85 c0                	test   %eax,%eax
   1a820:	0f 85 0a ff ff ff    	jne    1a730 <mbedtls_mpi_gen_prime+0x2c0>
   1a826:	e9 88 fd ff ff       	jmpq   1a5b3 <mbedtls_mpi_gen_prime+0x143>
   1a82b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a830:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   1a837:	00 
   1a838:	48 81 f9 89 02 00 00 	cmp    $0x289,%rcx
   1a83f:	0f 87 d3 fc ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a845:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
   1a84c:	00 
   1a84d:	48 81 f9 5d 01 00 00 	cmp    $0x15d,%rcx
   1a854:	0f 87 be fc ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a85a:	c7 44 24 10 0c 00 00 	movl   $0xc,0x10(%rsp)
   1a861:	00 
   1a862:	48 81 f9 f9 00 00 00 	cmp    $0xf9,%rcx
   1a869:	0f 87 a9 fc ff ff    	ja     1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a86f:	48 81 f9 96 00 00 00 	cmp    $0x96,%rcx
   1a876:	19 c9                	sbb    %ecx,%ecx
   1a878:	83 e1 09             	and    $0x9,%ecx
   1a87b:	83 c1 12             	add    $0x12,%ecx
   1a87e:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   1a882:	e9 91 fc ff ff       	jmpq   1a518 <mbedtls_mpi_gen_prime+0xa8>
   1a887:	48 c7 44 24 70 08 00 	movq   $0x8,0x70(%rsp)
   1a88e:	00 00 
   1a890:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
   1a895:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1a89a:	4c 89 fe             	mov    %r15,%rsi
   1a89d:	4c 89 ff             	mov    %r15,%rdi
   1a8a0:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a8a5:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a8ac:	00 
   1a8ad:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1a8b4:	00 00 
   1a8b6:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1a8bb:	e8 00 c5 ff ff       	callq  16dc0 <add_sub_mpi>
   1a8c0:	85 c0                	test   %eax,%eax
   1a8c2:	0f 84 2e fe ff ff    	je     1a6f6 <mbedtls_mpi_gen_prime+0x286>
   1a8c8:	e9 e6 fc ff ff       	jmpq   1a5b3 <mbedtls_mpi_gen_prime+0x143>
   1a8cd:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1a8d2:	ba 01 00 00 00       	mov    $0x1,%edx
   1a8d7:	e8 34 10 00 00       	callq  1b910 <mbedtls_mpi_core_shift_r>
   1a8dc:	e9 3b fe ff ff       	jmpq   1a71c <mbedtls_mpi_gen_prime+0x2ac>
   1a8e1:	48 c7 44 24 70 04 00 	movq   $0x4,0x70(%rsp)
   1a8e8:	00 00 
   1a8ea:	eb a4                	jmp    1a890 <mbedtls_mpi_gen_prime+0x420>
   1a8ec:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1a8f1:	e9 cb fc ff ff       	jmpq   1a5c1 <mbedtls_mpi_gen_prime+0x151>
   1a8f6:	e8 65 89 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1a8fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a900 <mbedtls_mpi_self_test>:
   1a900:	f3 0f 1e fa          	endbr64 
   1a904:	41 57                	push   %r15
   1a906:	48 8d 15 03 aa 00 00 	lea    0xaa03(%rip),%rdx        # 25310 <aria_sb1+0x1d0>
   1a90d:	be 10 00 00 00       	mov    $0x10,%esi
   1a912:	41 56                	push   %r14
   1a914:	41 55                	push   %r13
   1a916:	41 54                	push   %r12
   1a918:	55                   	push   %rbp
   1a919:	53                   	push   %rbx
   1a91a:	89 fb                	mov    %edi,%ebx
   1a91c:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1a923:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a92a:	00 00 
   1a92c:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   1a933:	00 
   1a934:	31 c0                	xor    %eax,%eax
   1a936:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   1a93b:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   1a942:	00 
   1a943:	48 89 ef             	mov    %rbp,%rdi
   1a946:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1a94d:	00 
   1a94e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1a955:	00 00 
   1a957:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1a95e:	00 00 
   1a960:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   1a967:	00 00 
   1a969:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   1a970:	00 00 
   1a972:	c7 44 24 70 01 00 00 	movl   $0x1,0x70(%rsp)
   1a979:	00 
   1a97a:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   1a981:	00 00 
   1a983:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   1a98a:	00 00 00 00 00 
   1a98f:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
   1a996:	01 00 00 00 
   1a99a:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
   1a9a1:	00 00 00 00 00 
   1a9a6:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   1a9ad:	00 00 00 00 00 
   1a9b2:	c7 84 24 b0 00 00 00 	movl   $0x1,0xb0(%rsp)
   1a9b9:	01 00 00 00 
   1a9bd:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
   1a9c4:	00 00 00 00 00 
   1a9c9:	48 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%rsp)
   1a9d0:	00 00 00 00 00 
   1a9d5:	c7 84 24 d0 00 00 00 	movl   $0x1,0xd0(%rsp)
   1a9dc:	01 00 00 00 
   1a9e0:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1a9e7:	00 00 00 00 00 
   1a9ec:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1a9f3:	00 00 00 00 00 
   1a9f8:	c7 84 24 f0 00 00 00 	movl   $0x1,0xf0(%rsp)
   1a9ff:	01 00 00 00 
   1aa03:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1aa0a:	00 00 00 00 00 
   1aa0f:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   1aa16:	00 00 00 00 00 
   1aa1b:	e8 f0 c7 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1aa20:	85 c0                	test   %eax,%eax
   1aa22:	0f 84 b8 00 00 00    	je     1aae0 <mbedtls_mpi_self_test+0x1e0>
   1aa28:	41 89 c7             	mov    %eax,%r15d
   1aa2b:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1aa30:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
   1aa35:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1aa3c:	00 
   1aa3d:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1aa44:	00 
   1aa45:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1aa4c:	00 
   1aa4d:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1aa54:	00 
   1aa55:	85 db                	test   %ebx,%ebx
   1aa57:	0f 85 d4 00 00 00    	jne    1ab31 <mbedtls_mpi_self_test+0x231>
   1aa5d:	48 89 ef             	mov    %rbp,%rdi
   1aa60:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1aa65:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1aa6a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1aa6f:	e8 cc b6 ff ff       	callq  16140 <mbedtls_mpi_free>
   1aa74:	4c 89 e7             	mov    %r12,%rdi
   1aa77:	e8 c4 b6 ff ff       	callq  16140 <mbedtls_mpi_free>
   1aa7c:	4c 89 ef             	mov    %r13,%rdi
   1aa7f:	e8 bc b6 ff ff       	callq  16140 <mbedtls_mpi_free>
   1aa84:	4c 89 f7             	mov    %r14,%rdi
   1aa87:	e8 b4 b6 ff ff       	callq  16140 <mbedtls_mpi_free>
   1aa8c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1aa91:	4c 89 d7             	mov    %r10,%rdi
   1aa94:	e8 a7 b6 ff ff       	callq  16140 <mbedtls_mpi_free>
   1aa99:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1aa9e:	4c 89 cf             	mov    %r9,%rdi
   1aaa1:	e8 9a b6 ff ff       	callq  16140 <mbedtls_mpi_free>
   1aaa6:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1aaab:	4c 89 df             	mov    %r11,%rdi
   1aaae:	e8 8d b6 ff ff       	callq  16140 <mbedtls_mpi_free>
   1aab3:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   1aaba:	00 
   1aabb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1aac2:	00 00 
   1aac4:	0f 85 f1 08 00 00    	jne    1b3bb <mbedtls_mpi_self_test+0xabb>
   1aaca:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   1aad1:	44 89 f8             	mov    %r15d,%eax
   1aad4:	5b                   	pop    %rbx
   1aad5:	5d                   	pop    %rbp
   1aad6:	41 5c                	pop    %r12
   1aad8:	41 5d                	pop    %r13
   1aada:	41 5e                	pop    %r14
   1aadc:	41 5f                	pop    %r15
   1aade:	c3                   	retq   
   1aadf:	90                   	nop
   1aae0:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1aae5:	be 10 00 00 00       	mov    $0x10,%esi
   1aaea:	4c 8d 6c 24 70       	lea    0x70(%rsp),%r13
   1aaef:	48 8d 15 a2 a8 00 00 	lea    0xa8a2(%rip),%rdx        # 25398 <aria_sb1+0x258>
   1aaf6:	4c 89 e7             	mov    %r12,%rdi
   1aaf9:	e8 12 c7 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1aafe:	41 89 c7             	mov    %eax,%r15d
   1ab01:	85 c0                	test   %eax,%eax
   1ab03:	0f 84 a7 00 00 00    	je     1abb0 <mbedtls_mpi_self_test+0x2b0>
   1ab09:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1ab10:	00 
   1ab11:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1ab18:	00 
   1ab19:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1ab20:	00 
   1ab21:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ab28:	00 
   1ab29:	85 db                	test   %ebx,%ebx
   1ab2b:	0f 84 2c ff ff ff    	je     1aa5d <mbedtls_mpi_self_test+0x15d>
   1ab31:	44 89 fa             	mov    %r15d,%edx
   1ab34:	48 8d 35 2d aa 00 00 	lea    0xaa2d(%rip),%rsi        # 25568 <aria_sb1+0x428>
   1ab3b:	bf 01 00 00 00       	mov    $0x1,%edi
   1ab40:	31 c0                	xor    %eax,%eax
   1ab42:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ab47:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ab4c:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ab51:	e8 ea 87 fe ff       	callq  3340 <__printf_chk@plt>
   1ab56:	48 89 ef             	mov    %rbp,%rdi
   1ab59:	e8 e2 b5 ff ff       	callq  16140 <mbedtls_mpi_free>
   1ab5e:	4c 89 e7             	mov    %r12,%rdi
   1ab61:	e8 da b5 ff ff       	callq  16140 <mbedtls_mpi_free>
   1ab66:	4c 89 ef             	mov    %r13,%rdi
   1ab69:	e8 d2 b5 ff ff       	callq  16140 <mbedtls_mpi_free>
   1ab6e:	4c 89 f7             	mov    %r14,%rdi
   1ab71:	e8 ca b5 ff ff       	callq  16140 <mbedtls_mpi_free>
   1ab76:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1ab7b:	4c 89 d7             	mov    %r10,%rdi
   1ab7e:	e8 bd b5 ff ff       	callq  16140 <mbedtls_mpi_free>
   1ab83:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1ab88:	4c 89 cf             	mov    %r9,%rdi
   1ab8b:	e8 b0 b5 ff ff       	callq  16140 <mbedtls_mpi_free>
   1ab90:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ab95:	4c 89 df             	mov    %r11,%rdi
   1ab98:	e8 a3 b5 ff ff       	callq  16140 <mbedtls_mpi_free>
   1ab9d:	bf 0a 00 00 00       	mov    $0xa,%edi
   1aba2:	e8 49 86 fe ff       	callq  31f0 <putchar@plt>
   1aba7:	e9 07 ff ff ff       	jmpq   1aab3 <mbedtls_mpi_self_test+0x1b3>
   1abac:	0f 1f 40 00          	nopl   0x0(%rax)
   1abb0:	48 8d 15 69 a8 00 00 	lea    0xa869(%rip),%rdx        # 25420 <aria_sb1+0x2e0>
   1abb7:	be 10 00 00 00       	mov    $0x10,%esi
   1abbc:	4c 89 ef             	mov    %r13,%rdi
   1abbf:	e8 4c c6 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1abc4:	4c 8d b4 24 90 00 00 	lea    0x90(%rsp),%r14
   1abcb:	00 
   1abcc:	41 89 c7             	mov    %eax,%r15d
   1abcf:	85 c0                	test   %eax,%eax
   1abd1:	74 1d                	je     1abf0 <mbedtls_mpi_self_test+0x2f0>
   1abd3:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1abda:	00 
   1abdb:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1abe2:	00 
   1abe3:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1abea:	00 
   1abeb:	e9 65 fe ff ff       	jmpq   1aa55 <mbedtls_mpi_self_test+0x155>
   1abf0:	4c 89 ea             	mov    %r13,%rdx
   1abf3:	48 89 ee             	mov    %rbp,%rsi
   1abf6:	4c 89 f7             	mov    %r14,%rdi
   1abf9:	e8 62 c3 ff ff       	callq  16f60 <mbedtls_mpi_mul_mpi>
   1abfe:	4c 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%r9
   1ac05:	00 
   1ac06:	41 89 c7             	mov    %eax,%r15d
   1ac09:	85 c0                	test   %eax,%eax
   1ac0b:	0f 85 cf 03 00 00    	jne    1afe0 <mbedtls_mpi_self_test+0x6e0>
   1ac11:	4c 89 cf             	mov    %r9,%rdi
   1ac14:	be 10 00 00 00       	mov    $0x10,%esi
   1ac19:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ac1e:	48 8d 15 63 a8 00 00 	lea    0xa863(%rip),%rdx        # 25488 <aria_sb1+0x348>
   1ac25:	e8 e6 c5 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1ac2a:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ac2f:	85 c0                	test   %eax,%eax
   1ac31:	41 89 c7             	mov    %eax,%r15d
   1ac34:	0f 85 a6 03 00 00    	jne    1afe0 <mbedtls_mpi_self_test+0x6e0>
   1ac3a:	85 db                	test   %ebx,%ebx
   1ac3c:	0f 85 c6 03 00 00    	jne    1b008 <mbedtls_mpi_self_test+0x708>
   1ac42:	4c 89 ce             	mov    %r9,%rsi
   1ac45:	4c 89 f7             	mov    %r14,%rdi
   1ac48:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ac4d:	e8 ce bd ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1ac52:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ac57:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1ac5e:	00 
   1ac5f:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ac66:	00 
   1ac67:	85 c0                	test   %eax,%eax
   1ac69:	0f 85 21 04 00 00    	jne    1b090 <mbedtls_mpi_self_test+0x790>
   1ac6f:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1ac76:	00 
   1ac77:	4c 89 e9             	mov    %r13,%rcx
   1ac7a:	48 89 ea             	mov    %rbp,%rdx
   1ac7d:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ac82:	4c 89 d6             	mov    %r10,%rsi
   1ac85:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ac8a:	e8 f1 c9 ff ff       	callq  17680 <mbedtls_mpi_div_mpi>
   1ac8f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1ac94:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1ac99:	85 c0                	test   %eax,%eax
   1ac9b:	41 89 c7             	mov    %eax,%r15d
   1ac9e:	0f 85 54 03 00 00    	jne    1aff8 <mbedtls_mpi_self_test+0x6f8>
   1aca4:	4c 89 cf             	mov    %r9,%rdi
   1aca7:	be 10 00 00 00       	mov    $0x10,%esi
   1acac:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1acb1:	48 8d 15 a0 a9 00 00 	lea    0xa9a0(%rip),%rdx        # 25658 <aria_sb1+0x518>
   1acb8:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1acbd:	e8 4e c5 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1acc2:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1acc7:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1accc:	85 c0                	test   %eax,%eax
   1acce:	41 89 c7             	mov    %eax,%r15d
   1acd1:	0f 85 21 03 00 00    	jne    1aff8 <mbedtls_mpi_self_test+0x6f8>
   1acd7:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1acde:	00 
   1acdf:	be 10 00 00 00       	mov    $0x10,%esi
   1ace4:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1ace9:	48 8d 15 90 a9 00 00 	lea    0xa990(%rip),%rdx        # 25680 <aria_sb1+0x540>
   1acf0:	4c 89 df             	mov    %r11,%rdi
   1acf3:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1acf8:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1acfd:	e8 0e c5 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1ad02:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1ad07:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ad0c:	85 c0                	test   %eax,%eax
   1ad0e:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1ad13:	0f 85 08 04 00 00    	jne    1b121 <mbedtls_mpi_self_test+0x821>
   1ad19:	4c 89 ce             	mov    %r9,%rsi
   1ad1c:	4c 89 f7             	mov    %r14,%rdi
   1ad1f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ad24:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ad29:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ad2e:	e8 ed bc ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1ad33:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ad38:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ad3d:	85 c0                	test   %eax,%eax
   1ad3f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ad44:	0f 85 46 03 00 00    	jne    1b090 <mbedtls_mpi_self_test+0x790>
   1ad4a:	4c 89 de             	mov    %r11,%rsi
   1ad4d:	4c 89 d7             	mov    %r10,%rdi
   1ad50:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1ad55:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1ad5a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ad5f:	e8 bc bc ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1ad64:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1ad69:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1ad6e:	85 c0                	test   %eax,%eax
   1ad70:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1ad75:	0f 85 15 03 00 00    	jne    1b090 <mbedtls_mpi_self_test+0x790>
   1ad7b:	45 31 c0             	xor    %r8d,%r8d
   1ad7e:	4c 89 e9             	mov    %r13,%rcx
   1ad81:	4c 89 e2             	mov    %r12,%rdx
   1ad84:	48 89 ee             	mov    %rbp,%rsi
   1ad87:	4c 89 f7             	mov    %r14,%rdi
   1ad8a:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ad8f:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ad94:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ad99:	e8 e2 d8 ff ff       	callq  18680 <mbedtls_mpi_exp_mod>
   1ad9e:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1ada3:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1ada8:	85 c0                	test   %eax,%eax
   1adaa:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1adaf:	41 89 c7             	mov    %eax,%r15d
   1adb2:	0f 85 a5 fc ff ff    	jne    1aa5d <mbedtls_mpi_self_test+0x15d>
   1adb8:	4c 89 cf             	mov    %r9,%rdi
   1adbb:	be 10 00 00 00       	mov    $0x10,%esi
   1adc0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1adc5:	48 8d 15 2c a8 00 00 	lea    0xa82c(%rip),%rdx        # 255f8 <aria_sb1+0x4b8>
   1adcc:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1add1:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1add6:	e8 35 c4 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1addb:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ade0:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ade5:	85 c0                	test   %eax,%eax
   1ade7:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1adec:	41 89 c7             	mov    %eax,%r15d
   1adef:	0f 85 68 fc ff ff    	jne    1aa5d <mbedtls_mpi_self_test+0x15d>
   1adf5:	4c 89 ce             	mov    %r9,%rsi
   1adf8:	4c 89 f7             	mov    %r14,%rdi
   1adfb:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ae00:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ae05:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ae0a:	e8 11 bc ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1ae0f:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ae14:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ae19:	85 c0                	test   %eax,%eax
   1ae1b:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ae20:	0f 85 6a 02 00 00    	jne    1b090 <mbedtls_mpi_self_test+0x790>
   1ae26:	4c 89 ea             	mov    %r13,%rdx
   1ae29:	48 89 ee             	mov    %rbp,%rsi
   1ae2c:	4c 89 f7             	mov    %r14,%rdi
   1ae2f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ae34:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1ae39:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1ae3e:	e8 bd ec ff ff       	callq  19b00 <mbedtls_mpi_inv_mod>
   1ae43:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1ae48:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1ae4d:	85 c0                	test   %eax,%eax
   1ae4f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ae54:	41 89 c7             	mov    %eax,%r15d
   1ae57:	0f 85 00 fc ff ff    	jne    1aa5d <mbedtls_mpi_self_test+0x15d>
   1ae5d:	4c 89 cf             	mov    %r9,%rdi
   1ae60:	be 10 00 00 00       	mov    $0x10,%esi
   1ae65:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ae6a:	48 8d 15 1f a7 00 00 	lea    0xa71f(%rip),%rdx        # 25590 <aria_sb1+0x450>
   1ae71:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ae76:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1ae7b:	e8 90 c3 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1ae80:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1ae85:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ae8a:	85 c0                	test   %eax,%eax
   1ae8c:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ae91:	41 89 c0             	mov    %eax,%r8d
   1ae94:	0f 85 39 05 00 00    	jne    1b3d3 <mbedtls_mpi_self_test+0xad3>
   1ae9a:	4c 89 ce             	mov    %r9,%rsi
   1ae9d:	4c 89 f7             	mov    %r14,%rdi
   1aea0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1aea5:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1aeaa:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1aeaf:	e8 6c bb ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1aeb4:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1aeb9:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1aebe:	85 c0                	test   %eax,%eax
   1aec0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1aec5:	0f 85 c5 01 00 00    	jne    1b090 <mbedtls_mpi_self_test+0x790>
   1aecb:	48 8d 05 0e a8 00 00 	lea    0xa80e(%rip),%rax        # 256e0 <gcd_pairs>
   1aed2:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   1aed9:	00 
   1aeda:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1aedf:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1aee4:	4c 89 f7             	mov    %r14,%rdi
   1aee7:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   1aeec:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   1aef1:	48 63 30             	movslq (%rax),%rsi
   1aef4:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1aef9:	e8 42 b6 ff ff       	callq  16540 <mbedtls_mpi_lset>
   1aefe:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1af03:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1af08:	85 c0                	test   %eax,%eax
   1af0a:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1af0f:	41 89 c7             	mov    %eax,%r15d
   1af12:	0f 85 3d fb ff ff    	jne    1aa55 <mbedtls_mpi_self_test+0x155>
   1af18:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1af1d:	4c 89 d7             	mov    %r10,%rdi
   1af20:	48 63 70 04          	movslq 0x4(%rax),%rsi
   1af24:	e8 17 b6 ff ff       	callq  16540 <mbedtls_mpi_lset>
   1af29:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1af2e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1af33:	85 c0                	test   %eax,%eax
   1af35:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1af3a:	41 89 c7             	mov    %eax,%r15d
   1af3d:	0f 85 12 fb ff ff    	jne    1aa55 <mbedtls_mpi_self_test+0x155>
   1af43:	4c 89 d2             	mov    %r10,%rdx
   1af46:	4c 89 f6             	mov    %r14,%rsi
   1af49:	48 89 ef             	mov    %rbp,%rdi
   1af4c:	e8 0f e2 ff ff       	callq  19160 <mbedtls_mpi_gcd>
   1af51:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1af56:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1af5b:	85 c0                	test   %eax,%eax
   1af5d:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1af62:	41 89 c7             	mov    %eax,%r15d
   1af65:	0f 85 ea fa ff ff    	jne    1aa55 <mbedtls_mpi_self_test+0x155>
   1af6b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1af70:	48 89 ef             	mov    %rbp,%rdi
   1af73:	48 63 70 08          	movslq 0x8(%rax),%rsi
   1af77:	e8 94 bb ff ff       	callq  16b10 <mbedtls_mpi_cmp_int>
   1af7c:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1af81:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1af86:	85 c0                	test   %eax,%eax
   1af88:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   1af8d:	41 89 c7             	mov    %eax,%r15d
   1af90:	0f 85 45 04 00 00    	jne    1b3db <mbedtls_mpi_self_test+0xadb>
   1af96:	83 44 24 08 01       	addl   $0x1,0x8(%rsp)
   1af9b:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1af9f:	48 83 44 24 10 0c    	addq   $0xc,0x10(%rsp)
   1afa5:	83 f8 03             	cmp    $0x3,%eax
   1afa8:	0f 85 31 ff ff ff    	jne    1aedf <mbedtls_mpi_self_test+0x5df>
   1afae:	85 db                	test   %ebx,%ebx
   1afb0:	0f 84 a7 fa ff ff    	je     1aa5d <mbedtls_mpi_self_test+0x15d>
   1afb6:	48 8d 3d 25 82 00 00 	lea    0x8225(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1afbd:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1afc2:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1afc7:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1afcc:	e8 2f 82 fe ff       	callq  3200 <puts@plt>
   1afd1:	e9 80 fb ff ff       	jmpq   1ab56 <mbedtls_mpi_self_test+0x256>
   1afd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1afdd:	00 00 00 
   1afe0:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1afe7:	00 
   1afe8:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1afef:	00 
   1aff0:	e9 60 fa ff ff       	jmpq   1aa55 <mbedtls_mpi_self_test+0x155>
   1aff5:	0f 1f 00             	nopl   (%rax)
   1aff8:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1afff:	00 
   1b000:	e9 58 fa ff ff       	jmpq   1aa5d <mbedtls_mpi_self_test+0x15d>
   1b005:	0f 1f 00             	nopl   (%rax)
   1b008:	48 8d 35 67 a2 00 00 	lea    0xa267(%rip),%rsi        # 25276 <aria_sb1+0x136>
   1b00f:	bf 01 00 00 00       	mov    $0x1,%edi
   1b014:	31 c0                	xor    %eax,%eax
   1b016:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b01b:	e8 20 83 fe ff       	callq  3340 <__printf_chk@plt>
   1b020:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b025:	4c 89 f7             	mov    %r14,%rdi
   1b028:	4c 89 ce             	mov    %r9,%rsi
   1b02b:	e8 f0 b9 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1b030:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b035:	85 c0                	test   %eax,%eax
   1b037:	75 62                	jne    1b09b <mbedtls_mpi_self_test+0x79b>
   1b039:	48 8d 3d a2 81 00 00 	lea    0x81a2(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1b040:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b045:	e8 b6 81 fe ff       	callq  3200 <puts@plt>
   1b04a:	48 89 ea             	mov    %rbp,%rdx
   1b04d:	4c 89 e9             	mov    %r13,%rcx
   1b050:	4c 89 f7             	mov    %r14,%rdi
   1b053:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1b05a:	00 
   1b05b:	4c 89 d6             	mov    %r10,%rsi
   1b05e:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b063:	e8 18 c6 ff ff       	callq  17680 <mbedtls_mpi_div_mpi>
   1b068:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b06d:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b072:	85 c0                	test   %eax,%eax
   1b074:	89 c2                	mov    %eax,%edx
   1b076:	74 6d                	je     1b0e5 <mbedtls_mpi_self_test+0x7e5>
   1b078:	41 89 c7             	mov    %eax,%r15d
   1b07b:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b082:	00 
   1b083:	e9 ac fa ff ff       	jmpq   1ab34 <mbedtls_mpi_self_test+0x234>
   1b088:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b08f:	00 
   1b090:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b096:	e9 c2 f9 ff ff       	jmpq   1aa5d <mbedtls_mpi_self_test+0x15d>
   1b09b:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b0a2:	00 
   1b0a3:	4c 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%r10
   1b0aa:	00 
   1b0ab:	48 8d 3d 0b 8a 00 00 	lea    0x8a0b(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   1b0b2:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b0b7:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b0bd:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b0c2:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b0c7:	e8 34 81 fe ff       	callq  3200 <puts@plt>
   1b0cc:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b0d1:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b0d6:	ba 01 00 00 00       	mov    $0x1,%edx
   1b0db:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b0e0:	e9 4f fa ff ff       	jmpq   1ab34 <mbedtls_mpi_self_test+0x234>
   1b0e5:	4c 89 cf             	mov    %r9,%rdi
   1b0e8:	be 10 00 00 00       	mov    $0x10,%esi
   1b0ed:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b0f2:	48 8d 15 5f a5 00 00 	lea    0xa55f(%rip),%rdx        # 25658 <aria_sb1+0x518>
   1b0f9:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b0fe:	e8 0d c1 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1b103:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b108:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b10d:	85 c0                	test   %eax,%eax
   1b10f:	74 18                	je     1b129 <mbedtls_mpi_self_test+0x829>
   1b111:	41 89 c7             	mov    %eax,%r15d
   1b114:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b11b:	00 
   1b11c:	e9 10 fa ff ff       	jmpq   1ab31 <mbedtls_mpi_self_test+0x231>
   1b121:	41 89 c7             	mov    %eax,%r15d
   1b124:	e9 2c f9 ff ff       	jmpq   1aa55 <mbedtls_mpi_self_test+0x155>
   1b129:	4c 8d 9c 24 f0 00 00 	lea    0xf0(%rsp),%r11
   1b130:	00 
   1b131:	be 10 00 00 00       	mov    $0x10,%esi
   1b136:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b13b:	48 8d 15 3e a5 00 00 	lea    0xa53e(%rip),%rdx        # 25680 <aria_sb1+0x540>
   1b142:	4c 89 df             	mov    %r11,%rdi
   1b145:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b14a:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1b14f:	e8 bc c0 ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1b154:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1b159:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b15e:	85 c0                	test   %eax,%eax
   1b160:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b165:	75 ba                	jne    1b121 <mbedtls_mpi_self_test+0x821>
   1b167:	48 8d 35 22 a1 00 00 	lea    0xa122(%rip),%rsi        # 25290 <aria_sb1+0x150>
   1b16e:	bf 01 00 00 00       	mov    $0x1,%edi
   1b173:	31 c0                	xor    %eax,%eax
   1b175:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b17a:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b17f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b184:	e8 b7 81 fe ff       	callq  3340 <__printf_chk@plt>
   1b189:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b18e:	4c 89 f7             	mov    %r14,%rdi
   1b191:	4c 89 ce             	mov    %r9,%rsi
   1b194:	e8 87 b8 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1b199:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b19e:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b1a3:	85 c0                	test   %eax,%eax
   1b1a5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b1aa:	0f 85 fb fe ff ff    	jne    1b0ab <mbedtls_mpi_self_test+0x7ab>
   1b1b0:	4c 89 de             	mov    %r11,%rsi
   1b1b3:	4c 89 d7             	mov    %r10,%rdi
   1b1b6:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b1bb:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1b1c0:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b1c5:	e8 56 b8 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1b1ca:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b1cf:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1b1d4:	85 c0                	test   %eax,%eax
   1b1d6:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b1db:	0f 85 ca fe ff ff    	jne    1b0ab <mbedtls_mpi_self_test+0x7ab>
   1b1e1:	48 8d 3d fa 7f 00 00 	lea    0x7ffa(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1b1e8:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b1ed:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b1f2:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b1f7:	e8 04 80 fe ff       	callq  3200 <puts@plt>
   1b1fc:	45 31 c0             	xor    %r8d,%r8d
   1b1ff:	4c 89 e9             	mov    %r13,%rcx
   1b202:	4c 89 e2             	mov    %r12,%rdx
   1b205:	48 89 ee             	mov    %rbp,%rsi
   1b208:	4c 89 f7             	mov    %r14,%rdi
   1b20b:	e8 70 d4 ff ff       	callq  18680 <mbedtls_mpi_exp_mod>
   1b210:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b215:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b21a:	85 c0                	test   %eax,%eax
   1b21c:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b221:	41 89 c0             	mov    %eax,%r8d
   1b224:	0f 85 96 01 00 00    	jne    1b3c0 <mbedtls_mpi_self_test+0xac0>
   1b22a:	4c 89 cf             	mov    %r9,%rdi
   1b22d:	be 10 00 00 00       	mov    $0x10,%esi
   1b232:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b237:	48 8d 15 ba a3 00 00 	lea    0xa3ba(%rip),%rdx        # 255f8 <aria_sb1+0x4b8>
   1b23e:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b243:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b248:	e8 c3 bf ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1b24d:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b252:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b257:	85 c0                	test   %eax,%eax
   1b259:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b25e:	41 89 c0             	mov    %eax,%r8d
   1b261:	0f 85 64 01 00 00    	jne    1b3cb <mbedtls_mpi_self_test+0xacb>
   1b267:	48 8d 35 81 a0 00 00 	lea    0xa081(%rip),%rsi        # 252ef <aria_sb1+0x1af>
   1b26e:	bf 01 00 00 00       	mov    $0x1,%edi
   1b273:	31 c0                	xor    %eax,%eax
   1b275:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b27a:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b27f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b284:	e8 b7 80 fe ff       	callq  3340 <__printf_chk@plt>
   1b289:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b28e:	4c 89 f7             	mov    %r14,%rdi
   1b291:	4c 89 ce             	mov    %r9,%rsi
   1b294:	e8 87 b7 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1b299:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b29e:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b2a3:	85 c0                	test   %eax,%eax
   1b2a5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b2aa:	0f 85 fb fd ff ff    	jne    1b0ab <mbedtls_mpi_self_test+0x7ab>
   1b2b0:	48 8d 3d 2b 7f 00 00 	lea    0x7f2b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1b2b7:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b2bc:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b2c1:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b2c6:	e8 35 7f fe ff       	callq  3200 <puts@plt>
   1b2cb:	4c 89 ea             	mov    %r13,%rdx
   1b2ce:	48 89 ee             	mov    %rbp,%rsi
   1b2d1:	4c 89 f7             	mov    %r14,%rdi
   1b2d4:	e8 27 e8 ff ff       	callq  19b00 <mbedtls_mpi_inv_mod>
   1b2d9:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b2de:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b2e3:	85 c0                	test   %eax,%eax
   1b2e5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b2ea:	41 89 c0             	mov    %eax,%r8d
   1b2ed:	0f 85 cd 00 00 00    	jne    1b3c0 <mbedtls_mpi_self_test+0xac0>
   1b2f3:	4c 89 cf             	mov    %r9,%rdi
   1b2f6:	be 10 00 00 00       	mov    $0x10,%esi
   1b2fb:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b300:	48 8d 15 89 a2 00 00 	lea    0xa289(%rip),%rdx        # 25590 <aria_sb1+0x450>
   1b307:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b30c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b311:	e8 fa be ff ff       	callq  17210 <mbedtls_mpi_read_string>
   1b316:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b31b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b320:	85 c0                	test   %eax,%eax
   1b322:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b327:	41 89 c0             	mov    %eax,%r8d
   1b32a:	0f 85 9b 00 00 00    	jne    1b3cb <mbedtls_mpi_self_test+0xacb>
   1b330:	48 8d 35 73 9f 00 00 	lea    0x9f73(%rip),%rsi        # 252aa <aria_sb1+0x16a>
   1b337:	bf 01 00 00 00       	mov    $0x1,%edi
   1b33c:	31 c0                	xor    %eax,%eax
   1b33e:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b343:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b348:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1b34d:	e8 ee 7f fe ff       	callq  3340 <__printf_chk@plt>
   1b352:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b357:	4c 89 f7             	mov    %r14,%rdi
   1b35a:	4c 89 ce             	mov    %r9,%rsi
   1b35d:	e8 be b6 ff ff       	callq  16a20 <mbedtls_mpi_cmp_mpi>
   1b362:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1b367:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b36c:	85 c0                	test   %eax,%eax
   1b36e:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b373:	0f 85 32 fd ff ff    	jne    1b0ab <mbedtls_mpi_self_test+0x7ab>
   1b379:	48 8d 3d 62 7e 00 00 	lea    0x7e62(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1b380:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1b385:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1b38a:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1b38f:	e8 6c 7e fe ff       	callq  3200 <puts@plt>
   1b394:	48 8d 35 37 9f 00 00 	lea    0x9f37(%rip),%rsi        # 252d2 <aria_sb1+0x192>
   1b39b:	bf 01 00 00 00       	mov    $0x1,%edi
   1b3a0:	31 c0                	xor    %eax,%eax
   1b3a2:	e8 99 7f fe ff       	callq  3340 <__printf_chk@plt>
   1b3a7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1b3ac:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1b3b1:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1b3b6:	e9 10 fb ff ff       	jmpq   1aecb <mbedtls_mpi_self_test+0x5cb>
   1b3bb:	e8 a0 7e fe ff       	callq  3260 <__stack_chk_fail@plt>
   1b3c0:	45 89 c7             	mov    %r8d,%r15d
   1b3c3:	44 89 c2             	mov    %r8d,%edx
   1b3c6:	e9 69 f7 ff ff       	jmpq   1ab34 <mbedtls_mpi_self_test+0x234>
   1b3cb:	45 89 c7             	mov    %r8d,%r15d
   1b3ce:	e9 5e f7 ff ff       	jmpq   1ab31 <mbedtls_mpi_self_test+0x231>
   1b3d3:	45 89 c7             	mov    %r8d,%r15d
   1b3d6:	e9 82 f6 ff ff       	jmpq   1aa5d <mbedtls_mpi_self_test+0x15d>
   1b3db:	85 db                	test   %ebx,%ebx
   1b3dd:	0f 84 ad fc ff ff    	je     1b090 <mbedtls_mpi_self_test+0x790>
   1b3e3:	8b 54 24 08          	mov    0x8(%rsp),%edx
   1b3e7:	bf 01 00 00 00       	mov    $0x1,%edi
   1b3ec:	31 c0                	xor    %eax,%eax
   1b3ee:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   1b3f3:	48 8d 35 ca 9e 00 00 	lea    0x9eca(%rip),%rsi        # 252c4 <aria_sb1+0x184>
   1b3fa:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1b3ff:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b405:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1b40a:	e8 31 7f fe ff       	callq  3340 <__printf_chk@plt>
   1b40f:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1b414:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b419:	ba 01 00 00 00       	mov    $0x1,%edx
   1b41e:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1b423:	e9 0c f7 ff ff       	jmpq   1ab34 <mbedtls_mpi_self_test+0x234>
   1b428:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b42f:	00 

000000000001b430 <mbedtls_mpi_core_bitlen.part.0>:
   1b430:	48 83 ee 01          	sub    $0x1,%rsi
   1b434:	74 3a                	je     1b470 <mbedtls_mpi_core_bitlen.part.0+0x40>
   1b436:	4c 8b 04 f7          	mov    (%rdi,%rsi,8),%r8
   1b43a:	4d 85 c0             	test   %r8,%r8
   1b43d:	74 f1                	je     1b430 <mbedtls_mpi_core_bitlen.part.0>
   1b43f:	48 8d 46 01          	lea    0x1(%rsi),%rax
   1b443:	48 c1 e0 06          	shl    $0x6,%rax
   1b447:	48 b9 00 00 00 00 00 	movabs $0x8000000000000000,%rcx
   1b44e:	00 00 80 
   1b451:	31 d2                	xor    %edx,%edx
   1b453:	eb 10                	jmp    1b465 <mbedtls_mpi_core_bitlen.part.0+0x35>
   1b455:	0f 1f 00             	nopl   (%rax)
   1b458:	48 83 c2 01          	add    $0x1,%rdx
   1b45c:	48 d1 e9             	shr    %rcx
   1b45f:	48 83 fa 40          	cmp    $0x40,%rdx
   1b463:	74 05                	je     1b46a <mbedtls_mpi_core_bitlen.part.0+0x3a>
   1b465:	4c 85 c1             	test   %r8,%rcx
   1b468:	74 ee                	je     1b458 <mbedtls_mpi_core_bitlen.part.0+0x28>
   1b46a:	48 29 d0             	sub    %rdx,%rax
   1b46d:	c3                   	retq   
   1b46e:	66 90                	xchg   %ax,%ax
   1b470:	4c 8b 07             	mov    (%rdi),%r8
   1b473:	b8 40 00 00 00       	mov    $0x40,%eax
   1b478:	eb cd                	jmp    1b447 <mbedtls_mpi_core_bitlen.part.0+0x17>
   1b47a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b480 <mbedtls_mpi_core_bigendian_to_host.part.0>:
   1b480:	48 8d 44 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rax
   1b485:	48 39 c7             	cmp    %rax,%rdi
   1b488:	77 27                	ja     1b4b1 <mbedtls_mpi_core_bigendian_to_host.part.0+0x31>
   1b48a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b490:	48 8b 17             	mov    (%rdi),%rdx
   1b493:	48 8b 08             	mov    (%rax),%rcx
   1b496:	48 83 c7 08          	add    $0x8,%rdi
   1b49a:	48 83 e8 08          	sub    $0x8,%rax
   1b49e:	48 0f ca             	bswap  %rdx
   1b4a1:	48 0f c9             	bswap  %rcx
   1b4a4:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
   1b4a8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b4ac:	48 39 c7             	cmp    %rax,%rdi
   1b4af:	76 df                	jbe    1b490 <mbedtls_mpi_core_bigendian_to_host.part.0+0x10>
   1b4b1:	c3                   	retq   
   1b4b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b4b9:	00 00 00 00 
   1b4bd:	0f 1f 00             	nopl   (%rax)

000000000001b4c0 <mbedtls_mpi_core_clz>:
   1b4c0:	f3 0f 1e fa          	endbr64 
   1b4c4:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
   1b4cb:	00 00 80 
   1b4ce:	31 c0                	xor    %eax,%eax
   1b4d0:	eb 13                	jmp    1b4e5 <mbedtls_mpi_core_clz+0x25>
   1b4d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b4d8:	48 83 c0 01          	add    $0x1,%rax
   1b4dc:	48 d1 ea             	shr    %rdx
   1b4df:	48 83 f8 40          	cmp    $0x40,%rax
   1b4e3:	74 05                	je     1b4ea <mbedtls_mpi_core_clz+0x2a>
   1b4e5:	48 85 d7             	test   %rdx,%rdi
   1b4e8:	74 ee                	je     1b4d8 <mbedtls_mpi_core_clz+0x18>
   1b4ea:	c3                   	retq   
   1b4eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b4f0 <mbedtls_mpi_core_bitlen>:
   1b4f0:	f3 0f 1e fa          	endbr64 
   1b4f4:	48 85 f6             	test   %rsi,%rsi
   1b4f7:	74 07                	je     1b500 <mbedtls_mpi_core_bitlen+0x10>
   1b4f9:	e9 32 ff ff ff       	jmpq   1b430 <mbedtls_mpi_core_bitlen.part.0>
   1b4fe:	66 90                	xchg   %ax,%ax
   1b500:	31 c0                	xor    %eax,%eax
   1b502:	c3                   	retq   
   1b503:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b50a:	00 00 00 00 
   1b50e:	66 90                	xchg   %ax,%ax

000000000001b510 <mbedtls_mpi_core_bigendian_to_host>:
   1b510:	f3 0f 1e fa          	endbr64 
   1b514:	48 85 f6             	test   %rsi,%rsi
   1b517:	74 07                	je     1b520 <mbedtls_mpi_core_bigendian_to_host+0x10>
   1b519:	e9 62 ff ff ff       	jmpq   1b480 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1b51e:	66 90                	xchg   %ax,%ax
   1b520:	c3                   	retq   
   1b521:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b528:	00 00 00 00 
   1b52c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b530 <mbedtls_mpi_core_uint_le_mpi>:
   1b530:	f3 0f 1e fa          	endbr64 
   1b534:	41 54                	push   %r12
   1b536:	49 89 d4             	mov    %rdx,%r12
   1b539:	55                   	push   %rbp
   1b53a:	48 89 f5             	mov    %rsi,%rbp
   1b53d:	48 89 fe             	mov    %rdi,%rsi
   1b540:	53                   	push   %rbx
   1b541:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1b545:	e8 b6 be fe ff       	callq  7400 <mbedtls_ct_mpi_uint_lt>
   1b54a:	83 f0 01             	xor    $0x1,%eax
   1b54d:	89 c3                	mov    %eax,%ebx
   1b54f:	49 83 fc 01          	cmp    $0x1,%r12
   1b553:	76 2b                	jbe    1b580 <mbedtls_mpi_core_uint_le_mpi+0x50>
   1b555:	48 8d 45 08          	lea    0x8(%rbp),%rax
   1b559:	4a 8d 54 e5 00       	lea    0x0(%rbp,%r12,8),%rdx
   1b55e:	31 ff                	xor    %edi,%edi
   1b560:	48 0b 38             	or     (%rax),%rdi
   1b563:	48 83 c0 08          	add    $0x8,%rax
   1b567:	48 39 d0             	cmp    %rdx,%rax
   1b56a:	75 f4                	jne    1b560 <mbedtls_mpi_core_uint_le_mpi+0x30>
   1b56c:	e8 2f be fe ff       	callq  73a0 <mbedtls_ct_mpi_uint_mask>
   1b571:	83 e0 01             	and    $0x1,%eax
   1b574:	09 d8                	or     %ebx,%eax
   1b576:	5b                   	pop    %rbx
   1b577:	5d                   	pop    %rbp
   1b578:	41 5c                	pop    %r12
   1b57a:	c3                   	retq   
   1b57b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b580:	31 ff                	xor    %edi,%edi
   1b582:	e8 19 be fe ff       	callq  73a0 <mbedtls_ct_mpi_uint_mask>
   1b587:	83 e0 01             	and    $0x1,%eax
   1b58a:	09 d8                	or     %ebx,%eax
   1b58c:	5b                   	pop    %rbx
   1b58d:	5d                   	pop    %rbp
   1b58e:	41 5c                	pop    %r12
   1b590:	c3                   	retq   
   1b591:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b598:	00 00 00 00 
   1b59c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b5a0 <mbedtls_mpi_core_cond_assign>:
   1b5a0:	f3 0f 1e fa          	endbr64 
   1b5a4:	49 89 f8             	mov    %rdi,%r8
   1b5a7:	48 89 d7             	mov    %rdx,%rdi
   1b5aa:	49 39 f0             	cmp    %rsi,%r8
   1b5ad:	74 11                	je     1b5c0 <mbedtls_mpi_core_cond_assign+0x20>
   1b5af:	48 89 f2             	mov    %rsi,%rdx
   1b5b2:	0f b6 c9             	movzbl %cl,%ecx
   1b5b5:	4c 89 c6             	mov    %r8,%rsi
   1b5b8:	e9 83 be fe ff       	jmpq   7440 <mbedtls_ct_mpi_uint_cond_assign>
   1b5bd:	0f 1f 00             	nopl   (%rax)
   1b5c0:	c3                   	retq   
   1b5c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b5c8:	00 00 00 00 
   1b5cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b5d0 <mbedtls_mpi_core_cond_swap>:
   1b5d0:	f3 0f 1e fa          	endbr64 
   1b5d4:	48 39 f7             	cmp    %rsi,%rdi
   1b5d7:	74 57                	je     1b630 <mbedtls_mpi_core_cond_swap+0x60>
   1b5d9:	41 54                	push   %r12
   1b5db:	49 89 d4             	mov    %rdx,%r12
   1b5de:	55                   	push   %rbp
   1b5df:	48 89 fd             	mov    %rdi,%rbp
   1b5e2:	0f b6 f9             	movzbl %cl,%edi
   1b5e5:	53                   	push   %rbx
   1b5e6:	48 89 f3             	mov    %rsi,%rbx
   1b5e9:	e8 b2 bd fe ff       	callq  73a0 <mbedtls_ct_mpi_uint_mask>
   1b5ee:	4d 85 e4             	test   %r12,%r12
   1b5f1:	74 36                	je     1b629 <mbedtls_mpi_core_cond_swap+0x59>
   1b5f3:	31 ff                	xor    %edi,%edi
   1b5f5:	0f 1f 00             	nopl   (%rax)
   1b5f8:	48 8b 4c fd 00       	mov    0x0(%rbp,%rdi,8),%rcx
   1b5fd:	4c 8b 04 fb          	mov    (%rbx,%rdi,8),%r8
   1b601:	49 31 c8             	xor    %rcx,%r8
   1b604:	49 21 c0             	and    %rax,%r8
   1b607:	49 31 c8             	xor    %rcx,%r8
   1b60a:	4c 89 44 fd 00       	mov    %r8,0x0(%rbp,%rdi,8)
   1b60f:	48 8b 34 fb          	mov    (%rbx,%rdi,8),%rsi
   1b613:	48 31 f1             	xor    %rsi,%rcx
   1b616:	48 21 c1             	and    %rax,%rcx
   1b619:	48 31 f1             	xor    %rsi,%rcx
   1b61c:	48 89 0c fb          	mov    %rcx,(%rbx,%rdi,8)
   1b620:	48 83 c7 01          	add    $0x1,%rdi
   1b624:	49 39 fc             	cmp    %rdi,%r12
   1b627:	75 cf                	jne    1b5f8 <mbedtls_mpi_core_cond_swap+0x28>
   1b629:	5b                   	pop    %rbx
   1b62a:	5d                   	pop    %rbp
   1b62b:	41 5c                	pop    %r12
   1b62d:	c3                   	retq   
   1b62e:	66 90                	xchg   %ax,%ax
   1b630:	c3                   	retq   
   1b631:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b638:	00 00 00 00 
   1b63c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b640 <mbedtls_mpi_core_read_le>:
   1b640:	f3 0f 1e fa          	endbr64 
   1b644:	55                   	push   %rbp
   1b645:	31 c0                	xor    %eax,%eax
   1b647:	48 89 d5             	mov    %rdx,%rbp
   1b64a:	48 89 ca             	mov    %rcx,%rdx
   1b64d:	53                   	push   %rbx
   1b64e:	48 83 ec 08          	sub    $0x8,%rsp
   1b652:	f6 c1 07             	test   $0x7,%cl
   1b655:	0f 95 c0             	setne  %al
   1b658:	48 c1 ea 03          	shr    $0x3,%rdx
   1b65c:	48 01 d0             	add    %rdx,%rax
   1b65f:	48 39 f0             	cmp    %rsi,%rax
   1b662:	77 54                	ja     1b6b8 <mbedtls_mpi_core_read_le+0x78>
   1b664:	48 85 ff             	test   %rdi,%rdi
   1b667:	74 46                	je     1b6af <mbedtls_mpi_core_read_le+0x6f>
   1b669:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   1b670:	00 
   1b671:	31 f6                	xor    %esi,%esi
   1b673:	48 89 cb             	mov    %rcx,%rbx
   1b676:	e8 15 7c fe ff       	callq  3290 <memset@plt>
   1b67b:	48 89 c7             	mov    %rax,%rdi
   1b67e:	48 85 db             	test   %rbx,%rbx
   1b681:	74 2c                	je     1b6af <mbedtls_mpi_core_read_le+0x6f>
   1b683:	31 c0                	xor    %eax,%eax
   1b685:	0f 1f 00             	nopl   (%rax)
   1b688:	0f b6 54 05 00       	movzbl 0x0(%rbp,%rax,1),%edx
   1b68d:	48 89 c6             	mov    %rax,%rsi
   1b690:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1b697:	00 
   1b698:	48 83 c0 01          	add    $0x1,%rax
   1b69c:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1b6a0:	83 e1 38             	and    $0x38,%ecx
   1b6a3:	48 d3 e2             	shl    %cl,%rdx
   1b6a6:	48 09 14 37          	or     %rdx,(%rdi,%rsi,1)
   1b6aa:	48 39 c3             	cmp    %rax,%rbx
   1b6ad:	75 d9                	jne    1b688 <mbedtls_mpi_core_read_le+0x48>
   1b6af:	31 c0                	xor    %eax,%eax
   1b6b1:	48 83 c4 08          	add    $0x8,%rsp
   1b6b5:	5b                   	pop    %rbx
   1b6b6:	5d                   	pop    %rbp
   1b6b7:	c3                   	retq   
   1b6b8:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b6bd:	eb f2                	jmp    1b6b1 <mbedtls_mpi_core_read_le+0x71>
   1b6bf:	90                   	nop

000000000001b6c0 <mbedtls_mpi_core_read_be>:
   1b6c0:	f3 0f 1e fa          	endbr64 
   1b6c4:	41 56                	push   %r14
   1b6c6:	31 c0                	xor    %eax,%eax
   1b6c8:	49 89 d6             	mov    %rdx,%r14
   1b6cb:	f6 c1 07             	test   $0x7,%cl
   1b6ce:	48 89 ca             	mov    %rcx,%rdx
   1b6d1:	0f 95 c0             	setne  %al
   1b6d4:	41 55                	push   %r13
   1b6d6:	48 c1 ea 03          	shr    $0x3,%rdx
   1b6da:	41 54                	push   %r12
   1b6dc:	48 01 d0             	add    %rdx,%rax
   1b6df:	55                   	push   %rbp
   1b6e0:	53                   	push   %rbx
   1b6e1:	48 39 f0             	cmp    %rsi,%rax
   1b6e4:	77 6a                	ja     1b750 <mbedtls_mpi_core_read_be+0x90>
   1b6e6:	48 89 f5             	mov    %rsi,%rbp
   1b6e9:	31 c0                	xor    %eax,%eax
   1b6eb:	48 85 f6             	test   %rsi,%rsi
   1b6ee:	75 10                	jne    1b700 <mbedtls_mpi_core_read_be+0x40>
   1b6f0:	5b                   	pop    %rbx
   1b6f1:	5d                   	pop    %rbp
   1b6f2:	41 5c                	pop    %r12
   1b6f4:	41 5d                	pop    %r13
   1b6f6:	41 5e                	pop    %r14
   1b6f8:	c3                   	retq   
   1b6f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b700:	48 8d 1c f5 00 00 00 	lea    0x0(,%rsi,8),%rbx
   1b707:	00 
   1b708:	49 89 cc             	mov    %rcx,%r12
   1b70b:	31 f6                	xor    %esi,%esi
   1b70d:	49 89 fd             	mov    %rdi,%r13
   1b710:	48 89 da             	mov    %rbx,%rdx
   1b713:	e8 78 7b fe ff       	callq  3290 <memset@plt>
   1b718:	4d 85 e4             	test   %r12,%r12
   1b71b:	75 1b                	jne    1b738 <mbedtls_mpi_core_read_be+0x78>
   1b71d:	48 89 ee             	mov    %rbp,%rsi
   1b720:	4c 89 ef             	mov    %r13,%rdi
   1b723:	e8 58 fd ff ff       	callq  1b480 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1b728:	5b                   	pop    %rbx
   1b729:	31 c0                	xor    %eax,%eax
   1b72b:	5d                   	pop    %rbp
   1b72c:	41 5c                	pop    %r12
   1b72e:	41 5d                	pop    %r13
   1b730:	41 5e                	pop    %r14
   1b732:	c3                   	retq   
   1b733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b738:	4c 29 e3             	sub    %r12,%rbx
   1b73b:	4c 89 e2             	mov    %r12,%rdx
   1b73e:	4c 89 f6             	mov    %r14,%rsi
   1b741:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
   1b746:	e8 c5 7b fe ff       	callq  3310 <memcpy@plt>
   1b74b:	eb d0                	jmp    1b71d <mbedtls_mpi_core_read_be+0x5d>
   1b74d:	0f 1f 00             	nopl   (%rax)
   1b750:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b755:	eb 99                	jmp    1b6f0 <mbedtls_mpi_core_read_be+0x30>
   1b757:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b75e:	00 00 

000000000001b760 <mbedtls_mpi_core_write_le>:
   1b760:	f3 0f 1e fa          	endbr64 
   1b764:	48 c1 e6 03          	shl    $0x3,%rsi
   1b768:	49 89 c9             	mov    %rcx,%r9
   1b76b:	48 39 ce             	cmp    %rcx,%rsi
   1b76e:	0f 82 8c 00 00 00    	jb     1b800 <mbedtls_mpi_core_write_le+0xa0>
   1b774:	76 4e                	jbe    1b7c4 <mbedtls_mpi_core_write_le+0x64>
   1b776:	48 89 c8             	mov    %rcx,%rax
   1b779:	83 e1 07             	and    $0x7,%ecx
   1b77c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b780:	c1 e1 03             	shl    $0x3,%ecx
   1b783:	48 8b 04 07          	mov    (%rdi,%rax,1),%rax
   1b787:	48 d3 e8             	shr    %cl,%rax
   1b78a:	84 c0                	test   %al,%al
   1b78c:	0f 85 96 00 00 00    	jne    1b828 <mbedtls_mpi_core_write_le+0xc8>
   1b792:	4c 89 c8             	mov    %r9,%rax
   1b795:	eb 24                	jmp    1b7bb <mbedtls_mpi_core_write_le+0x5b>
   1b797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b79e:	00 00 
   1b7a0:	49 89 c0             	mov    %rax,%r8
   1b7a3:	89 c1                	mov    %eax,%ecx
   1b7a5:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   1b7a9:	83 e1 07             	and    $0x7,%ecx
   1b7ac:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
   1b7b0:	c1 e1 03             	shl    $0x3,%ecx
   1b7b3:	49 d3 e8             	shr    %cl,%r8
   1b7b6:	45 84 c0             	test   %r8b,%r8b
   1b7b9:	75 6d                	jne    1b828 <mbedtls_mpi_core_write_le+0xc8>
   1b7bb:	48 83 c0 01          	add    $0x1,%rax
   1b7bf:	48 39 c6             	cmp    %rax,%rsi
   1b7c2:	75 dc                	jne    1b7a0 <mbedtls_mpi_core_write_le+0x40>
   1b7c4:	4d 89 ca             	mov    %r9,%r10
   1b7c7:	4d 85 c9             	test   %r9,%r9
   1b7ca:	74 2c                	je     1b7f8 <mbedtls_mpi_core_write_le+0x98>
   1b7cc:	31 c0                	xor    %eax,%eax
   1b7ce:	66 90                	xchg   %ax,%ax
   1b7d0:	49 89 c0             	mov    %rax,%r8
   1b7d3:	89 c1                	mov    %eax,%ecx
   1b7d5:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   1b7d9:	83 e1 07             	and    $0x7,%ecx
   1b7dc:	4e 8b 04 07          	mov    (%rdi,%r8,1),%r8
   1b7e0:	c1 e1 03             	shl    $0x3,%ecx
   1b7e3:	49 d3 e8             	shr    %cl,%r8
   1b7e6:	44 88 04 02          	mov    %r8b,(%rdx,%rax,1)
   1b7ea:	48 83 c0 01          	add    $0x1,%rax
   1b7ee:	4c 39 d0             	cmp    %r10,%rax
   1b7f1:	72 dd                	jb     1b7d0 <mbedtls_mpi_core_write_le+0x70>
   1b7f3:	4c 39 ce             	cmp    %r9,%rsi
   1b7f6:	72 10                	jb     1b808 <mbedtls_mpi_core_write_le+0xa8>
   1b7f8:	31 c0                	xor    %eax,%eax
   1b7fa:	c3                   	retq   
   1b7fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b800:	49 89 f2             	mov    %rsi,%r10
   1b803:	48 85 f6             	test   %rsi,%rsi
   1b806:	75 c4                	jne    1b7cc <mbedtls_mpi_core_write_le+0x6c>
   1b808:	49 29 f1             	sub    %rsi,%r9
   1b80b:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   1b80f:	48 83 ec 08          	sub    $0x8,%rsp
   1b813:	31 f6                	xor    %esi,%esi
   1b815:	4c 89 ca             	mov    %r9,%rdx
   1b818:	e8 73 7a fe ff       	callq  3290 <memset@plt>
   1b81d:	31 c0                	xor    %eax,%eax
   1b81f:	48 83 c4 08          	add    $0x8,%rsp
   1b823:	c3                   	retq   
   1b824:	0f 1f 40 00          	nopl   0x0(%rax)
   1b828:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b82d:	c3                   	retq   
   1b82e:	66 90                	xchg   %ax,%ax

000000000001b830 <mbedtls_mpi_core_write_be>:
   1b830:	f3 0f 1e fa          	endbr64 
   1b834:	41 54                	push   %r12
   1b836:	55                   	push   %rbp
   1b837:	48 8d 2c f5 00 00 00 	lea    0x0(,%rsi,8),%rbp
   1b83e:	00 
   1b83f:	53                   	push   %rbx
   1b840:	48 89 fb             	mov    %rdi,%rbx
   1b843:	48 89 d7             	mov    %rdx,%rdi
   1b846:	48 89 ca             	mov    %rcx,%rdx
   1b849:	48 39 cd             	cmp    %rcx,%rbp
   1b84c:	0f 82 8e 00 00 00    	jb     1b8e0 <mbedtls_mpi_core_write_be+0xb0>
   1b852:	76 48                	jbe    1b89c <mbedtls_mpi_core_write_be+0x6c>
   1b854:	48 89 c8             	mov    %rcx,%rax
   1b857:	83 e1 07             	and    $0x7,%ecx
   1b85a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b85e:	c1 e1 03             	shl    $0x3,%ecx
   1b861:	48 8b 04 03          	mov    (%rbx,%rax,1),%rax
   1b865:	48 d3 e8             	shr    %cl,%rax
   1b868:	84 c0                	test   %al,%al
   1b86a:	0f 85 90 00 00 00    	jne    1b900 <mbedtls_mpi_core_write_be+0xd0>
   1b870:	48 89 d0             	mov    %rdx,%rax
   1b873:	eb 1e                	jmp    1b893 <mbedtls_mpi_core_write_be+0x63>
   1b875:	0f 1f 00             	nopl   (%rax)
   1b878:	48 89 c6             	mov    %rax,%rsi
   1b87b:	89 c1                	mov    %eax,%ecx
   1b87d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1b881:	83 e1 07             	and    $0x7,%ecx
   1b884:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
   1b888:	c1 e1 03             	shl    $0x3,%ecx
   1b88b:	48 d3 ee             	shr    %cl,%rsi
   1b88e:	40 84 f6             	test   %sil,%sil
   1b891:	75 6d                	jne    1b900 <mbedtls_mpi_core_write_be+0xd0>
   1b893:	48 83 c0 01          	add    $0x1,%rax
   1b897:	48 39 c5             	cmp    %rax,%rbp
   1b89a:	75 dc                	jne    1b878 <mbedtls_mpi_core_write_be+0x48>
   1b89c:	48 8d 7c 17 ff       	lea    -0x1(%rdi,%rdx,1),%rdi
   1b8a1:	31 c0                	xor    %eax,%eax
   1b8a3:	48 85 d2             	test   %rdx,%rdx
   1b8a6:	74 2f                	je     1b8d7 <mbedtls_mpi_core_write_be+0xa7>
   1b8a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b8af:	00 
   1b8b0:	48 89 c6             	mov    %rax,%rsi
   1b8b3:	89 c1                	mov    %eax,%ecx
   1b8b5:	48 83 c0 01          	add    $0x1,%rax
   1b8b9:	48 83 ef 01          	sub    $0x1,%rdi
   1b8bd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1b8c1:	83 e1 07             	and    $0x7,%ecx
   1b8c4:	48 8b 34 33          	mov    (%rbx,%rsi,1),%rsi
   1b8c8:	c1 e1 03             	shl    $0x3,%ecx
   1b8cb:	48 d3 ee             	shr    %cl,%rsi
   1b8ce:	40 88 77 01          	mov    %sil,0x1(%rdi)
   1b8d2:	48 39 c2             	cmp    %rax,%rdx
   1b8d5:	75 d9                	jne    1b8b0 <mbedtls_mpi_core_write_be+0x80>
   1b8d7:	5b                   	pop    %rbx
   1b8d8:	31 c0                	xor    %eax,%eax
   1b8da:	5d                   	pop    %rbp
   1b8db:	41 5c                	pop    %r12
   1b8dd:	c3                   	retq   
   1b8de:	66 90                	xchg   %ax,%ax
   1b8e0:	48 29 ea             	sub    %rbp,%rdx
   1b8e3:	31 f6                	xor    %esi,%esi
   1b8e5:	4c 8d 24 17          	lea    (%rdi,%rdx,1),%r12
   1b8e9:	e8 a2 79 fe ff       	callq  3290 <memset@plt>
   1b8ee:	4c 89 e7             	mov    %r12,%rdi
   1b8f1:	48 89 ea             	mov    %rbp,%rdx
   1b8f4:	eb a6                	jmp    1b89c <mbedtls_mpi_core_write_be+0x6c>
   1b8f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b8fd:	00 00 00 
   1b900:	5b                   	pop    %rbx
   1b901:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1b906:	5d                   	pop    %rbp
   1b907:	41 5c                	pop    %r12
   1b909:	c3                   	retq   
   1b90a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b910 <mbedtls_mpi_core_shift_r>:
   1b910:	f3 0f 1e fa          	endbr64 
   1b914:	48 89 d1             	mov    %rdx,%rcx
   1b917:	49 89 d0             	mov    %rdx,%r8
   1b91a:	48 c1 e9 06          	shr    $0x6,%rcx
   1b91e:	41 83 e0 3f          	and    $0x3f,%r8d
   1b922:	48 39 f1             	cmp    %rsi,%rcx
   1b925:	77 07                	ja     1b92e <mbedtls_mpi_core_shift_r+0x1e>
   1b927:	75 17                	jne    1b940 <mbedtls_mpi_core_shift_r+0x30>
   1b929:	4d 85 c0             	test   %r8,%r8
   1b92c:	74 12                	je     1b940 <mbedtls_mpi_core_shift_r+0x30>
   1b92e:	48 8d 14 f5 00 00 00 	lea    0x0(,%rsi,8),%rdx
   1b935:	00 
   1b936:	31 f6                	xor    %esi,%esi
   1b938:	e9 53 79 fe ff       	jmpq   3290 <memset@plt>
   1b93d:	0f 1f 00             	nopl   (%rax)
   1b940:	48 83 fa 3f          	cmp    $0x3f,%rdx
   1b944:	0f 86 a6 00 00 00    	jbe    1b9f0 <mbedtls_mpi_core_shift_r+0xe0>
   1b94a:	49 89 f2             	mov    %rsi,%r10
   1b94d:	49 29 ca             	sub    %rcx,%r10
   1b950:	74 27                	je     1b979 <mbedtls_mpi_core_shift_r+0x69>
   1b952:	48 8d 04 cf          	lea    (%rdi,%rcx,8),%rax
   1b956:	48 f7 d9             	neg    %rcx
   1b959:	4c 8d 0c f7          	lea    (%rdi,%rsi,8),%r9
   1b95d:	48 c1 e1 03          	shl    $0x3,%rcx
   1b961:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b968:	48 8b 10             	mov    (%rax),%rdx
   1b96b:	48 83 c0 08          	add    $0x8,%rax
   1b96f:	48 89 54 08 f8       	mov    %rdx,-0x8(%rax,%rcx,1)
   1b974:	4c 39 c8             	cmp    %r9,%rax
   1b977:	75 ef                	jne    1b968 <mbedtls_mpi_core_shift_r+0x58>
   1b979:	4c 39 d6             	cmp    %r10,%rsi
   1b97c:	76 72                	jbe    1b9f0 <mbedtls_mpi_core_shift_r+0xe0>
   1b97e:	4a 8d 04 d7          	lea    (%rdi,%r10,8),%rax
   1b982:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
   1b986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b98d:	00 00 00 
   1b990:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1b997:	48 83 c0 08          	add    $0x8,%rax
   1b99b:	48 39 c2             	cmp    %rax,%rdx
   1b99e:	75 f0                	jne    1b990 <mbedtls_mpi_core_shift_r+0x80>
   1b9a0:	4d 85 c0             	test   %r8,%r8
   1b9a3:	74 55                	je     1b9fa <mbedtls_mpi_core_shift_r+0xea>
   1b9a5:	41 ba 40 00 00 00    	mov    $0x40,%r10d
   1b9ab:	48 8d 54 f7 f8       	lea    -0x8(%rdi,%rsi,8),%rdx
   1b9b0:	45 89 c3             	mov    %r8d,%r11d
   1b9b3:	31 f6                	xor    %esi,%esi
   1b9b5:	45 29 c2             	sub    %r8d,%r10d
   1b9b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b9bf:	00 
   1b9c0:	48 8b 02             	mov    (%rdx),%rax
   1b9c3:	49 89 f1             	mov    %rsi,%r9
   1b9c6:	44 89 d1             	mov    %r10d,%ecx
   1b9c9:	49 89 d0             	mov    %rdx,%r8
   1b9cc:	48 83 ea 08          	sub    $0x8,%rdx
   1b9d0:	48 89 c6             	mov    %rax,%rsi
   1b9d3:	48 d3 e6             	shl    %cl,%rsi
   1b9d6:	44 89 d9             	mov    %r11d,%ecx
   1b9d9:	48 d3 e8             	shr    %cl,%rax
   1b9dc:	4c 09 c8             	or     %r9,%rax
   1b9df:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1b9e3:	49 39 f8             	cmp    %rdi,%r8
   1b9e6:	75 d8                	jne    1b9c0 <mbedtls_mpi_core_shift_r+0xb0>
   1b9e8:	c3                   	retq   
   1b9e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b9f0:	4d 85 c0             	test   %r8,%r8
   1b9f3:	74 05                	je     1b9fa <mbedtls_mpi_core_shift_r+0xea>
   1b9f5:	48 85 f6             	test   %rsi,%rsi
   1b9f8:	75 ab                	jne    1b9a5 <mbedtls_mpi_core_shift_r+0x95>
   1b9fa:	c3                   	retq   
   1b9fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ba00 <mbedtls_mpi_core_add>:
   1ba00:	f3 0f 1e fa          	endbr64 
   1ba04:	48 85 c9             	test   %rcx,%rcx
   1ba07:	74 37                	je     1ba40 <mbedtls_mpi_core_add+0x40>
   1ba09:	45 31 c0             	xor    %r8d,%r8d
   1ba0c:	31 c0                	xor    %eax,%eax
   1ba0e:	66 90                	xchg   %ax,%ax
   1ba10:	45 31 d2             	xor    %r10d,%r10d
   1ba13:	4a 03 04 c6          	add    (%rsi,%r8,8),%rax
   1ba17:	41 0f 92 c2          	setb   %r10b
   1ba1b:	4a 03 04 c2          	add    (%rdx,%r8,8),%rax
   1ba1f:	49 89 c1             	mov    %rax,%r9
   1ba22:	4c 89 d0             	mov    %r10,%rax
   1ba25:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
   1ba29:	48 83 d0 00          	adc    $0x0,%rax
   1ba2d:	49 83 c0 01          	add    $0x1,%r8
   1ba31:	4c 39 c1             	cmp    %r8,%rcx
   1ba34:	75 da                	jne    1ba10 <mbedtls_mpi_core_add+0x10>
   1ba36:	c3                   	retq   
   1ba37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ba3e:	00 00 
   1ba40:	31 c0                	xor    %eax,%eax
   1ba42:	c3                   	retq   
   1ba43:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ba4a:	00 00 00 00 
   1ba4e:	66 90                	xchg   %ax,%ax

000000000001ba50 <mbedtls_mpi_core_add_if>:
   1ba50:	f3 0f 1e fa          	endbr64 
   1ba54:	41 54                	push   %r12
   1ba56:	49 89 f4             	mov    %rsi,%r12
   1ba59:	55                   	push   %rbp
   1ba5a:	48 89 d5             	mov    %rdx,%rbp
   1ba5d:	53                   	push   %rbx
   1ba5e:	48 89 fb             	mov    %rdi,%rbx
   1ba61:	89 cf                	mov    %ecx,%edi
   1ba63:	e8 38 b9 fe ff       	callq  73a0 <mbedtls_ct_mpi_uint_mask>
   1ba68:	48 85 ed             	test   %rbp,%rbp
   1ba6b:	74 43                	je     1bab0 <mbedtls_mpi_core_add_if+0x60>
   1ba6d:	48 89 c2             	mov    %rax,%rdx
   1ba70:	31 c9                	xor    %ecx,%ecx
   1ba72:	31 c0                	xor    %eax,%eax
   1ba74:	0f 1f 40 00          	nopl   0x0(%rax)
   1ba78:	49 8b 3c cc          	mov    (%r12,%rcx,8),%rdi
   1ba7c:	45 31 c0             	xor    %r8d,%r8d
   1ba7f:	48 21 d7             	and    %rdx,%rdi
   1ba82:	48 03 04 cb          	add    (%rbx,%rcx,8),%rax
   1ba86:	41 0f 92 c0          	setb   %r8b
   1ba8a:	48 01 c7             	add    %rax,%rdi
   1ba8d:	4c 89 c0             	mov    %r8,%rax
   1ba90:	48 89 3c cb          	mov    %rdi,(%rbx,%rcx,8)
   1ba94:	48 83 d0 00          	adc    $0x0,%rax
   1ba98:	48 83 c1 01          	add    $0x1,%rcx
   1ba9c:	48 39 cd             	cmp    %rcx,%rbp
   1ba9f:	75 d7                	jne    1ba78 <mbedtls_mpi_core_add_if+0x28>
   1baa1:	5b                   	pop    %rbx
   1baa2:	5d                   	pop    %rbp
   1baa3:	41 5c                	pop    %r12
   1baa5:	c3                   	retq   
   1baa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1baad:	00 00 00 
   1bab0:	5b                   	pop    %rbx
   1bab1:	31 c0                	xor    %eax,%eax
   1bab3:	5d                   	pop    %rbp
   1bab4:	41 5c                	pop    %r12
   1bab6:	c3                   	retq   
   1bab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1babe:	00 00 

000000000001bac0 <mbedtls_mpi_core_sub>:
   1bac0:	f3 0f 1e fa          	endbr64 
   1bac4:	48 85 c9             	test   %rcx,%rcx
   1bac7:	74 3f                	je     1bb08 <mbedtls_mpi_core_sub+0x48>
   1bac9:	45 31 c9             	xor    %r9d,%r9d
   1bacc:	31 c0                	xor    %eax,%eax
   1bace:	66 90                	xchg   %ax,%ax
   1bad0:	4e 8b 04 ce          	mov    (%rsi,%r9,8),%r8
   1bad4:	4e 8b 14 ca          	mov    (%rdx,%r9,8),%r10
   1bad8:	45 31 db             	xor    %r11d,%r11d
   1badb:	49 39 c0             	cmp    %rax,%r8
   1bade:	41 0f 92 c3          	setb   %r11b
   1bae2:	49 29 c0             	sub    %rax,%r8
   1bae5:	31 c0                	xor    %eax,%eax
   1bae7:	4d 39 c2             	cmp    %r8,%r10
   1baea:	0f 97 c0             	seta   %al
   1baed:	4d 29 d0             	sub    %r10,%r8
   1baf0:	4e 89 04 cf          	mov    %r8,(%rdi,%r9,8)
   1baf4:	49 83 c1 01          	add    $0x1,%r9
   1baf8:	4c 01 d8             	add    %r11,%rax
   1bafb:	4c 39 c9             	cmp    %r9,%rcx
   1bafe:	75 d0                	jne    1bad0 <mbedtls_mpi_core_sub+0x10>
   1bb00:	c3                   	retq   
   1bb01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bb08:	31 c0                	xor    %eax,%eax
   1bb0a:	c3                   	retq   
   1bb0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bb10 <mbedtls_mpi_core_mla>:
   1bb10:	f3 0f 1e fa          	endbr64 
   1bb14:	49 89 f1             	mov    %rsi,%r9
   1bb17:	49 89 cb             	mov    %rcx,%r11
   1bb1a:	53                   	push   %rbx
   1bb1b:	48 89 d6             	mov    %rdx,%rsi
   1bb1e:	49 39 c9             	cmp    %rcx,%r9
   1bb21:	4c 89 c3             	mov    %r8,%rbx
   1bb24:	4d 0f 46 d9          	cmovbe %r9,%r11
   1bb28:	4c 89 d9             	mov    %r11,%rcx
   1bb2b:	4d 29 d9             	sub    %r11,%r9
   1bb2e:	41 83 e3 07          	and    $0x7,%r11d
   1bb32:	48 c1 e9 03          	shr    $0x3,%rcx
   1bb36:	48 85 c9             	test   %rcx,%rcx
   1bb39:	0f 84 12 01 00 00    	je     1bc51 <mbedtls_mpi_core_mla+0x141>
   1bb3f:	4c 8d 51 ff          	lea    -0x1(%rcx),%r10
   1bb43:	31 c9                	xor    %ecx,%ecx
   1bb45:	0f 1f 00             	nopl   (%rax)
   1bb48:	49 83 ea 01          	sub    $0x1,%r10
   1bb4c:	4d 31 c0             	xor    %r8,%r8
   1bb4f:	48 8b 06             	mov    (%rsi),%rax
   1bb52:	48 f7 e3             	mul    %rbx
   1bb55:	48 83 c6 08          	add    $0x8,%rsi
   1bb59:	48 01 c8             	add    %rcx,%rax
   1bb5c:	4c 89 c1             	mov    %r8,%rcx
   1bb5f:	48 83 d2 00          	adc    $0x0,%rdx
   1bb63:	90                   	nop
   1bb64:	48 01 07             	add    %rax,(%rdi)
   1bb67:	48 11 d1             	adc    %rdx,%rcx
   1bb6a:	48 83 c7 08          	add    $0x8,%rdi
   1bb6e:	48 8b 06             	mov    (%rsi),%rax
   1bb71:	48 f7 e3             	mul    %rbx
   1bb74:	48 83 c6 08          	add    $0x8,%rsi
   1bb78:	48 01 c8             	add    %rcx,%rax
   1bb7b:	4c 89 c1             	mov    %r8,%rcx
   1bb7e:	48 83 d2 00          	adc    $0x0,%rdx
   1bb82:	90                   	nop
   1bb83:	48 01 07             	add    %rax,(%rdi)
   1bb86:	48 11 d1             	adc    %rdx,%rcx
   1bb89:	48 83 c7 08          	add    $0x8,%rdi
   1bb8d:	48 8b 06             	mov    (%rsi),%rax
   1bb90:	48 f7 e3             	mul    %rbx
   1bb93:	48 83 c6 08          	add    $0x8,%rsi
   1bb97:	48 01 c8             	add    %rcx,%rax
   1bb9a:	4c 89 c1             	mov    %r8,%rcx
   1bb9d:	48 83 d2 00          	adc    $0x0,%rdx
   1bba1:	90                   	nop
   1bba2:	48 01 07             	add    %rax,(%rdi)
   1bba5:	48 11 d1             	adc    %rdx,%rcx
   1bba8:	48 83 c7 08          	add    $0x8,%rdi
   1bbac:	48 8b 06             	mov    (%rsi),%rax
   1bbaf:	48 f7 e3             	mul    %rbx
   1bbb2:	48 83 c6 08          	add    $0x8,%rsi
   1bbb6:	48 01 c8             	add    %rcx,%rax
   1bbb9:	4c 89 c1             	mov    %r8,%rcx
   1bbbc:	48 83 d2 00          	adc    $0x0,%rdx
   1bbc0:	90                   	nop
   1bbc1:	48 01 07             	add    %rax,(%rdi)
   1bbc4:	48 11 d1             	adc    %rdx,%rcx
   1bbc7:	48 83 c7 08          	add    $0x8,%rdi
   1bbcb:	48 8b 06             	mov    (%rsi),%rax
   1bbce:	48 f7 e3             	mul    %rbx
   1bbd1:	48 83 c6 08          	add    $0x8,%rsi
   1bbd5:	48 01 c8             	add    %rcx,%rax
   1bbd8:	4c 89 c1             	mov    %r8,%rcx
   1bbdb:	48 83 d2 00          	adc    $0x0,%rdx
   1bbdf:	90                   	nop
   1bbe0:	48 01 07             	add    %rax,(%rdi)
   1bbe3:	48 11 d1             	adc    %rdx,%rcx
   1bbe6:	48 83 c7 08          	add    $0x8,%rdi
   1bbea:	48 8b 06             	mov    (%rsi),%rax
   1bbed:	48 f7 e3             	mul    %rbx
   1bbf0:	48 83 c6 08          	add    $0x8,%rsi
   1bbf4:	48 01 c8             	add    %rcx,%rax
   1bbf7:	4c 89 c1             	mov    %r8,%rcx
   1bbfa:	48 83 d2 00          	adc    $0x0,%rdx
   1bbfe:	90                   	nop
   1bbff:	48 01 07             	add    %rax,(%rdi)
   1bc02:	48 11 d1             	adc    %rdx,%rcx
   1bc05:	48 83 c7 08          	add    $0x8,%rdi
   1bc09:	48 8b 06             	mov    (%rsi),%rax
   1bc0c:	48 f7 e3             	mul    %rbx
   1bc0f:	48 83 c6 08          	add    $0x8,%rsi
   1bc13:	48 01 c8             	add    %rcx,%rax
   1bc16:	4c 89 c1             	mov    %r8,%rcx
   1bc19:	48 83 d2 00          	adc    $0x0,%rdx
   1bc1d:	90                   	nop
   1bc1e:	48 01 07             	add    %rax,(%rdi)
   1bc21:	48 11 d1             	adc    %rdx,%rcx
   1bc24:	48 83 c7 08          	add    $0x8,%rdi
   1bc28:	48 8b 06             	mov    (%rsi),%rax
   1bc2b:	48 f7 e3             	mul    %rbx
   1bc2e:	48 83 c6 08          	add    $0x8,%rsi
   1bc32:	48 01 c8             	add    %rcx,%rax
   1bc35:	4c 89 c1             	mov    %r8,%rcx
   1bc38:	48 83 d2 00          	adc    $0x0,%rdx
   1bc3c:	90                   	nop
   1bc3d:	48 01 07             	add    %rax,(%rdi)
   1bc40:	48 11 d1             	adc    %rdx,%rcx
   1bc43:	48 83 c7 08          	add    $0x8,%rdi
   1bc47:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
   1bc4b:	0f 85 f7 fe ff ff    	jne    1bb48 <mbedtls_mpi_core_mla+0x38>
   1bc51:	4d 8d 53 ff          	lea    -0x1(%r11),%r10
   1bc55:	4d 85 db             	test   %r11,%r11
   1bc58:	74 32                	je     1bc8c <mbedtls_mpi_core_mla+0x17c>
   1bc5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bc60:	49 83 ea 01          	sub    $0x1,%r10
   1bc64:	4d 31 c0             	xor    %r8,%r8
   1bc67:	48 8b 06             	mov    (%rsi),%rax
   1bc6a:	48 f7 e3             	mul    %rbx
   1bc6d:	48 83 c6 08          	add    $0x8,%rsi
   1bc71:	48 01 c8             	add    %rcx,%rax
   1bc74:	4c 89 c1             	mov    %r8,%rcx
   1bc77:	48 83 d2 00          	adc    $0x0,%rdx
   1bc7b:	90                   	nop
   1bc7c:	48 01 07             	add    %rax,(%rdi)
   1bc7f:	48 11 d1             	adc    %rdx,%rcx
   1bc82:	48 83 c7 08          	add    $0x8,%rdi
   1bc86:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
   1bc8a:	75 d4                	jne    1bc60 <mbedtls_mpi_core_mla+0x150>
   1bc8c:	49 8d 41 ff          	lea    -0x1(%r9),%rax
   1bc90:	4d 85 c9             	test   %r9,%r9
   1bc93:	74 1d                	je     1bcb2 <mbedtls_mpi_core_mla+0x1a2>
   1bc95:	0f 1f 00             	nopl   (%rax)
   1bc98:	48 03 0f             	add    (%rdi),%rcx
   1bc9b:	48 89 0f             	mov    %rcx,(%rdi)
   1bc9e:	0f 92 c1             	setb   %cl
   1bca1:	48 83 e8 01          	sub    $0x1,%rax
   1bca5:	48 83 c7 08          	add    $0x8,%rdi
   1bca9:	0f b6 c9             	movzbl %cl,%ecx
   1bcac:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bcb0:	75 e6                	jne    1bc98 <mbedtls_mpi_core_mla+0x188>
   1bcb2:	48 89 c8             	mov    %rcx,%rax
   1bcb5:	5b                   	pop    %rbx
   1bcb6:	c3                   	retq   
   1bcb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bcbe:	00 00 

000000000001bcc0 <mbedtls_mpi_core_mul>:
   1bcc0:	f3 0f 1e fa          	endbr64 
   1bcc4:	41 57                	push   %r15
   1bcc6:	4d 89 c7             	mov    %r8,%r15
   1bcc9:	41 56                	push   %r14
   1bccb:	41 55                	push   %r13
   1bccd:	49 89 f5             	mov    %rsi,%r13
   1bcd0:	31 f6                	xor    %esi,%esi
   1bcd2:	41 54                	push   %r12
   1bcd4:	49 89 d4             	mov    %rdx,%r12
   1bcd7:	4c 01 c2             	add    %r8,%rdx
   1bcda:	55                   	push   %rbp
   1bcdb:	48 c1 e2 03          	shl    $0x3,%rdx
   1bcdf:	48 89 fd             	mov    %rdi,%rbp
   1bce2:	53                   	push   %rbx
   1bce3:	48 89 cb             	mov    %rcx,%rbx
   1bce6:	48 83 ec 08          	sub    $0x8,%rsp
   1bcea:	e8 a1 75 fe ff       	callq  3290 <memset@plt>
   1bcef:	4d 85 ff             	test   %r15,%r15
   1bcf2:	74 2d                	je     1bd21 <mbedtls_mpi_core_mul+0x61>
   1bcf4:	4d 8d 74 24 01       	lea    0x1(%r12),%r14
   1bcf9:	4e 8d 3c fb          	lea    (%rbx,%r15,8),%r15
   1bcfd:	0f 1f 00             	nopl   (%rax)
   1bd00:	4c 8b 03             	mov    (%rbx),%r8
   1bd03:	48 89 ef             	mov    %rbp,%rdi
   1bd06:	4c 89 e1             	mov    %r12,%rcx
   1bd09:	4c 89 ea             	mov    %r13,%rdx
   1bd0c:	4c 89 f6             	mov    %r14,%rsi
   1bd0f:	48 83 c3 08          	add    $0x8,%rbx
   1bd13:	48 83 c5 08          	add    $0x8,%rbp
   1bd17:	e8 f4 fd ff ff       	callq  1bb10 <mbedtls_mpi_core_mla>
   1bd1c:	4c 39 fb             	cmp    %r15,%rbx
   1bd1f:	75 df                	jne    1bd00 <mbedtls_mpi_core_mul+0x40>
   1bd21:	48 83 c4 08          	add    $0x8,%rsp
   1bd25:	5b                   	pop    %rbx
   1bd26:	5d                   	pop    %rbp
   1bd27:	41 5c                	pop    %r12
   1bd29:	41 5d                	pop    %r13
   1bd2b:	41 5e                	pop    %r14
   1bd2d:	41 5f                	pop    %r15
   1bd2f:	c3                   	retq   

000000000001bd30 <mbedtls_mpi_core_montmul_init>:
   1bd30:	f3 0f 1e fa          	endbr64 
   1bd34:	48 8b 37             	mov    (%rdi),%rsi
   1bd37:	ba 04 00 00 00       	mov    $0x4,%edx
   1bd3c:	bf 02 00 00 00       	mov    $0x2,%edi
   1bd41:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
   1bd46:	83 e0 08             	and    $0x8,%eax
   1bd49:	48 01 f0             	add    %rsi,%rax
   1bd4c:	48 89 f1             	mov    %rsi,%rcx
   1bd4f:	49 89 f8             	mov    %rdi,%r8
   1bd52:	48 0f af c8          	imul   %rax,%rcx
   1bd56:	49 29 c8             	sub    %rcx,%r8
   1bd59:	49 0f af c0          	imul   %r8,%rax
   1bd5d:	83 ea 01             	sub    $0x1,%edx
   1bd60:	75 ea                	jne    1bd4c <mbedtls_mpi_core_montmul_init+0x1c>
   1bd62:	48 f7 d8             	neg    %rax
   1bd65:	c3                   	retq   
   1bd66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bd6d:	00 00 00 

000000000001bd70 <mbedtls_mpi_core_montmul>:
   1bd70:	f3 0f 1e fa          	endbr64 
   1bd74:	41 57                	push   %r15
   1bd76:	41 56                	push   %r14
   1bd78:	41 55                	push   %r13
   1bd7a:	41 54                	push   %r12
   1bd7c:	4d 89 c4             	mov    %r8,%r12
   1bd7f:	55                   	push   %rbp
   1bd80:	4c 89 cd             	mov    %r9,%rbp
   1bd83:	53                   	push   %rbx
   1bd84:	48 89 f3             	mov    %rsi,%rbx
   1bd87:	31 f6                	xor    %esi,%esi
   1bd89:	48 83 ec 38          	sub    $0x38,%rsp
   1bd8d:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
   1bd92:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1bd97:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1bd9c:	4c 89 ca             	mov    %r9,%rdx
   1bd9f:	48 c1 e2 04          	shl    $0x4,%rdx
   1bda3:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   1bda8:	48 83 c2 08          	add    $0x8,%rdx
   1bdac:	4c 89 ff             	mov    %r15,%rdi
   1bdaf:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1bdb4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1bdb9:	e8 d2 74 fe ff       	callq  3290 <memset@plt>
   1bdbe:	48 85 ed             	test   %rbp,%rbp
   1bdc1:	0f 84 e9 00 00 00    	je     1beb0 <mbedtls_mpi_core_montmul+0x140>
   1bdc7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1bdcc:	4c 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%r11
   1bdd3:	00 
   1bdd4:	49 89 d9             	mov    %rbx,%r9
   1bdd7:	4c 8d 6d 02          	lea    0x2(%rbp),%r13
   1bddb:	4f 8d 34 1f          	lea    (%r15,%r11,1),%r14
   1bddf:	4c 89 fb             	mov    %r15,%rbx
   1bde2:	4d 89 cf             	mov    %r9,%r15
   1bde5:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   1bdea:	4d 89 d6             	mov    %r10,%r14
   1bded:	0f 1f 00             	nopl   (%rax)
   1bdf0:	4d 8b 07             	mov    (%r15),%r8
   1bdf3:	4d 8b 1e             	mov    (%r14),%r11
   1bdf6:	48 89 df             	mov    %rbx,%rdi
   1bdf9:	4c 89 f2             	mov    %r14,%rdx
   1bdfc:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1be01:	4c 89 ee             	mov    %r13,%rsi
   1be04:	49 83 c7 08          	add    $0x8,%r15
   1be08:	4d 0f af d8          	imul   %r8,%r11
   1be0c:	4c 03 1b             	add    (%rbx),%r11
   1be0f:	4c 0f af 5c 24 20    	imul   0x20(%rsp),%r11
   1be15:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1be1a:	e8 f1 fc ff ff       	callq  1bb10 <mbedtls_mpi_core_mla>
   1be1f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1be24:	48 89 df             	mov    %rbx,%rdi
   1be27:	48 89 e9             	mov    %rbp,%rcx
   1be2a:	4c 89 e2             	mov    %r12,%rdx
   1be2d:	4c 89 ee             	mov    %r13,%rsi
   1be30:	48 83 c3 08          	add    $0x8,%rbx
   1be34:	4d 89 d8             	mov    %r11,%r8
   1be37:	e8 d4 fc ff ff       	callq  1bb10 <mbedtls_mpi_core_mla>
   1be3c:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
   1be41:	75 ad                	jne    1bdf0 <mbedtls_mpi_core_montmul+0x80>
   1be43:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   1be48:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   1be4d:	31 c9                	xor    %ecx,%ecx
   1be4f:	31 d2                	xor    %edx,%edx
   1be51:	4d 8b 04 ee          	mov    (%r14,%rbp,8),%r8
   1be55:	0f 1f 00             	nopl   (%rax)
   1be58:	49 8b 04 d6          	mov    (%r14,%rdx,8),%rax
   1be5c:	49 8b 34 d4          	mov    (%r12,%rdx,8),%rsi
   1be60:	31 ff                	xor    %edi,%edi
   1be62:	48 39 c8             	cmp    %rcx,%rax
   1be65:	40 0f 92 c7          	setb   %dil
   1be69:	48 29 c8             	sub    %rcx,%rax
   1be6c:	48 39 f0             	cmp    %rsi,%rax
   1be6f:	48 83 d7 00          	adc    $0x0,%rdi
   1be73:	48 29 f0             	sub    %rsi,%rax
   1be76:	49 89 04 d1          	mov    %rax,(%r9,%rdx,8)
   1be7a:	48 83 c2 01          	add    $0x1,%rdx
   1be7e:	48 89 f9             	mov    %rdi,%rcx
   1be81:	48 39 d5             	cmp    %rdx,%rbp
   1be84:	75 d2                	jne    1be58 <mbedtls_mpi_core_montmul+0xe8>
   1be86:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1be8b:	44 31 c1             	xor    %r8d,%ecx
   1be8e:	48 83 c4 38          	add    $0x38,%rsp
   1be92:	4c 89 f2             	mov    %r14,%rdx
   1be95:	5b                   	pop    %rbx
   1be96:	48 89 ef             	mov    %rbp,%rdi
   1be99:	0f b6 c9             	movzbl %cl,%ecx
   1be9c:	5d                   	pop    %rbp
   1be9d:	41 5c                	pop    %r12
   1be9f:	41 5d                	pop    %r13
   1bea1:	41 5e                	pop    %r14
   1bea3:	41 5f                	pop    %r15
   1bea5:	e9 96 b5 fe ff       	jmpq   7440 <mbedtls_ct_mpi_uint_cond_assign>
   1beaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1beb0:	4d 8b 07             	mov    (%r15),%r8
   1beb3:	4d 89 fe             	mov    %r15,%r14
   1beb6:	31 c9                	xor    %ecx,%ecx
   1beb8:	eb cc                	jmp    1be86 <mbedtls_mpi_core_montmul+0x116>
   1beba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001bec0 <mbedtls_mpi_core_get_mont_r2_unsafe>:
   1bec0:	f3 0f 1e fa          	endbr64 
   1bec4:	55                   	push   %rbp
   1bec5:	48 89 fd             	mov    %rdi,%rbp
   1bec8:	53                   	push   %rbx
   1bec9:	48 89 f3             	mov    %rsi,%rbx
   1becc:	be 01 00 00 00       	mov    $0x1,%esi
   1bed1:	48 83 ec 08          	sub    $0x8,%rsp
   1bed5:	e8 66 a6 ff ff       	callq  16540 <mbedtls_mpi_lset>
   1beda:	85 c0                	test   %eax,%eax
   1bedc:	74 0a                	je     1bee8 <mbedtls_mpi_core_get_mont_r2_unsafe+0x28>
   1bede:	48 83 c4 08          	add    $0x8,%rsp
   1bee2:	5b                   	pop    %rbx
   1bee3:	5d                   	pop    %rbp
   1bee4:	c3                   	retq   
   1bee5:	0f 1f 00             	nopl   (%rax)
   1bee8:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1beec:	48 89 ef             	mov    %rbp,%rdi
   1beef:	48 c1 e6 07          	shl    $0x7,%rsi
   1bef3:	e8 08 a9 ff ff       	callq  16800 <mbedtls_mpi_shift_l>
   1bef8:	85 c0                	test   %eax,%eax
   1befa:	75 e2                	jne    1bede <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
   1befc:	48 89 da             	mov    %rbx,%rdx
   1beff:	48 89 ee             	mov    %rbp,%rsi
   1bf02:	48 89 ef             	mov    %rbp,%rdi
   1bf05:	e8 c6 c0 ff ff       	callq  17fd0 <mbedtls_mpi_mod_mpi>
   1bf0a:	85 c0                	test   %eax,%eax
   1bf0c:	75 d0                	jne    1bede <mbedtls_mpi_core_get_mont_r2_unsafe+0x1e>
   1bf0e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1bf12:	48 83 c4 08          	add    $0x8,%rsp
   1bf16:	48 89 ef             	mov    %rbp,%rdi
   1bf19:	5b                   	pop    %rbx
   1bf1a:	5d                   	pop    %rbp
   1bf1b:	e9 90 a3 ff ff       	jmpq   162b0 <mbedtls_mpi_shrink>

000000000001bf20 <mbedtls_mpi_core_fill_random>:
   1bf20:	f3 0f 1e fa          	endbr64 
   1bf24:	41 57                	push   %r15
   1bf26:	48 89 d0             	mov    %rdx,%rax
   1bf29:	41 56                	push   %r14
   1bf2b:	41 55                	push   %r13
   1bf2d:	41 54                	push   %r12
   1bf2f:	55                   	push   %rbp
   1bf30:	31 ed                	xor    %ebp,%ebp
   1bf32:	53                   	push   %rbx
   1bf33:	48 83 ec 18          	sub    $0x18,%rsp
   1bf37:	f6 c2 07             	test   $0x7,%dl
   1bf3a:	40 0f 95 c5          	setne  %bpl
   1bf3e:	48 c1 e8 03          	shr    $0x3,%rax
   1bf42:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1bf47:	48 01 c5             	add    %rax,%rbp
   1bf4a:	4c 89 04 24          	mov    %r8,(%rsp)
   1bf4e:	4c 8d 34 ed 00 00 00 	lea    0x0(,%rbp,8),%r14
   1bf55:	00 
   1bf56:	4d 89 f7             	mov    %r14,%r15
   1bf59:	49 29 d7             	sub    %rdx,%r15
   1bf5c:	48 39 f5             	cmp    %rsi,%rbp
   1bf5f:	77 6f                	ja     1bfd0 <mbedtls_mpi_core_fill_random+0xb0>
   1bf61:	48 89 f3             	mov    %rsi,%rbx
   1bf64:	49 89 fd             	mov    %rdi,%r13
   1bf67:	49 89 d4             	mov    %rdx,%r12
   1bf6a:	31 f6                	xor    %esi,%esi
   1bf6c:	4c 89 fa             	mov    %r15,%rdx
   1bf6f:	48 29 eb             	sub    %rbp,%rbx
   1bf72:	e8 19 73 fe ff       	callq  3290 <memset@plt>
   1bf77:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   1bf7e:	00 
   1bf7f:	4b 8d 7c 35 00       	lea    0x0(%r13,%r14,1),%rdi
   1bf84:	31 f6                	xor    %esi,%esi
   1bf86:	e8 05 73 fe ff       	callq  3290 <memset@plt>
   1bf8b:	4c 8b 04 24          	mov    (%rsp),%r8
   1bf8f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1bf94:	4c 89 e2             	mov    %r12,%rdx
   1bf97:	4b 8d 74 3d 00       	lea    0x0(%r13,%r15,1),%rsi
   1bf9c:	4c 89 c7             	mov    %r8,%rdi
   1bf9f:	ff d1                	callq  *%rcx
   1bfa1:	41 89 c0             	mov    %eax,%r8d
   1bfa4:	85 c0                	test   %eax,%eax
   1bfa6:	75 10                	jne    1bfb8 <mbedtls_mpi_core_fill_random+0x98>
   1bfa8:	48 85 ed             	test   %rbp,%rbp
   1bfab:	74 0b                	je     1bfb8 <mbedtls_mpi_core_fill_random+0x98>
   1bfad:	48 89 ee             	mov    %rbp,%rsi
   1bfb0:	4c 89 ef             	mov    %r13,%rdi
   1bfb3:	e8 c8 f4 ff ff       	callq  1b480 <mbedtls_mpi_core_bigendian_to_host.part.0>
   1bfb8:	48 83 c4 18          	add    $0x18,%rsp
   1bfbc:	44 89 c0             	mov    %r8d,%eax
   1bfbf:	5b                   	pop    %rbx
   1bfc0:	5d                   	pop    %rbp
   1bfc1:	41 5c                	pop    %r12
   1bfc3:	41 5d                	pop    %r13
   1bfc5:	41 5e                	pop    %r14
   1bfc7:	41 5f                	pop    %r15
   1bfc9:	c3                   	retq   
   1bfca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bfd0:	41 b8 fc ff ff ff    	mov    $0xfffffffc,%r8d
   1bfd6:	eb e0                	jmp    1bfb8 <mbedtls_mpi_core_fill_random+0x98>
   1bfd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bfdf:	00 

000000000001bfe0 <mbedtls_mpi_core_random>:
   1bfe0:	f3 0f 1e fa          	endbr64 
   1bfe4:	41 57                	push   %r15
   1bfe6:	4d 89 cf             	mov    %r9,%r15
   1bfe9:	41 56                	push   %r14
   1bfeb:	41 55                	push   %r13
   1bfed:	41 54                	push   %r12
   1bfef:	55                   	push   %rbp
   1bff0:	48 89 fd             	mov    %rdi,%rbp
   1bff3:	53                   	push   %rbx
   1bff4:	48 89 cb             	mov    %rcx,%rbx
   1bff7:	48 83 ec 38          	sub    $0x38,%rsp
   1bffb:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1c000:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   1c005:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1c00a:	48 85 c9             	test   %rcx,%rcx
   1c00d:	0f 84 bd 00 00 00    	je     1c0d0 <mbedtls_mpi_core_random+0xf0>
   1c013:	48 89 ce             	mov    %rcx,%rsi
   1c016:	48 89 d7             	mov    %rdx,%rdi
   1c019:	e8 12 f4 ff ff       	callq  1b430 <mbedtls_mpi_core_bitlen.part.0>
   1c01e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c023:	48 83 c0 07          	add    $0x7,%rax
   1c027:	48 89 c1             	mov    %rax,%rcx
   1c02a:	48 c1 e9 03          	shr    $0x3,%rcx
   1c02e:	48 83 f8 28          	cmp    $0x28,%rax
   1c032:	45 19 ed             	sbb    %r13d,%r13d
   1c035:	48 89 0c 24          	mov    %rcx,(%rsp)
   1c039:	41 81 e5 dc 00 00 00 	and    $0xdc,%r13d
   1c040:	41 83 c5 1e          	add    $0x1e,%r13d
   1c044:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1c048:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c04d:	0f 1f 00             	nopl   (%rax)
   1c050:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c055:	48 8b 14 24          	mov    (%rsp),%rdx
   1c059:	4d 89 f8             	mov    %r15,%r8
   1c05c:	48 89 de             	mov    %rbx,%rsi
   1c05f:	48 89 ef             	mov    %rbp,%rdi
   1c062:	e8 b9 fe ff ff       	callq  1bf20 <mbedtls_mpi_core_fill_random>
   1c067:	41 89 c4             	mov    %eax,%r12d
   1c06a:	85 c0                	test   %eax,%eax
   1c06c:	75 47                	jne    1c0b5 <mbedtls_mpi_core_random+0xd5>
   1c06e:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1c073:	48 89 de             	mov    %rbx,%rsi
   1c076:	48 2b 54 24 10       	sub    0x10(%rsp),%rdx
   1c07b:	48 89 ef             	mov    %rbp,%rdi
   1c07e:	e8 8d f8 ff ff       	callq  1b910 <mbedtls_mpi_core_shift_r>
   1c083:	41 83 ed 01          	sub    $0x1,%r13d
   1c087:	74 6f                	je     1c0f8 <mbedtls_mpi_core_random+0x118>
   1c089:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1c08e:	48 89 da             	mov    %rbx,%rdx
   1c091:	48 89 ee             	mov    %rbp,%rsi
   1c094:	e8 97 f4 ff ff       	callq  1b530 <mbedtls_mpi_core_uint_le_mpi>
   1c099:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1c09e:	48 89 da             	mov    %rbx,%rdx
   1c0a1:	48 89 ef             	mov    %rbp,%rdi
   1c0a4:	41 89 c6             	mov    %eax,%r14d
   1c0a7:	e8 f4 b9 fe ff       	callq  7aa0 <mbedtls_mpi_core_lt_ct>
   1c0ac:	45 85 f6             	test   %r14d,%r14d
   1c0af:	74 9f                	je     1c050 <mbedtls_mpi_core_random+0x70>
   1c0b1:	85 c0                	test   %eax,%eax
   1c0b3:	74 9b                	je     1c050 <mbedtls_mpi_core_random+0x70>
   1c0b5:	48 83 c4 38          	add    $0x38,%rsp
   1c0b9:	44 89 e0             	mov    %r12d,%eax
   1c0bc:	5b                   	pop    %rbx
   1c0bd:	5d                   	pop    %rbp
   1c0be:	41 5c                	pop    %r12
   1c0c0:	41 5d                	pop    %r13
   1c0c2:	41 5e                	pop    %r14
   1c0c4:	41 5f                	pop    %r15
   1c0c6:	c3                   	retq   
   1c0c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c0ce:	00 00 
   1c0d0:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1c0d7:	00 00 
   1c0d9:	b8 07 00 00 00       	mov    $0x7,%eax
   1c0de:	41 bd fa 00 00 00    	mov    $0xfa,%r13d
   1c0e4:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1c0eb:	00 
   1c0ec:	e9 53 ff ff ff       	jmpq   1c044 <mbedtls_mpi_core_random+0x64>
   1c0f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c0f8:	f3 0f 1e fa          	endbr64 
   1c0fc:	41 bc f2 ff ff ff    	mov    $0xfffffff2,%r12d
   1c102:	eb b1                	jmp    1c0b5 <mbedtls_mpi_core_random+0xd5>
   1c104:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c10b:	00 00 00 00 
   1c10f:	90                   	nop

000000000001c110 <mbedtls_mpi_core_exp_mod_working_limbs>:
   1c110:	f3 0f 1e fa          	endbr64 
   1c114:	48 c1 e6 06          	shl    $0x6,%rsi
   1c118:	49 89 f8             	mov    %rdi,%r8
   1c11b:	48 83 fe 50          	cmp    $0x50,%rsi
   1c11f:	48 19 ff             	sbb    %rdi,%rdi
   1c122:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   1c126:	48 83 c7 07          	add    $0x7,%rdi
   1c12a:	49 0f af f8          	imul   %r8,%rdi
   1c12e:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1c132:	c3                   	retq   
   1c133:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c13a:	00 00 00 00 
   1c13e:	66 90                	xchg   %ax,%ax

000000000001c140 <mbedtls_mpi_core_exp_mod>:
   1c140:	f3 0f 1e fa          	endbr64 
   1c144:	41 57                	push   %r15
   1c146:	4c 89 c8             	mov    %r9,%rax
   1c149:	49 89 cf             	mov    %rcx,%r15
   1c14c:	41 56                	push   %r14
   1c14e:	48 c1 e0 06          	shl    $0x6,%rax
   1c152:	49 89 d6             	mov    %rdx,%r14
   1c155:	41 55                	push   %r13
   1c157:	4d 89 cd             	mov    %r9,%r13
   1c15a:	41 54                	push   %r12
   1c15c:	49 89 f4             	mov    %rsi,%r12
   1c15f:	55                   	push   %rbp
   1c160:	48 89 fd             	mov    %rdi,%rbp
   1c163:	4a 8d 3c fd 00 00 00 	lea    0x0(,%r15,8),%rdi
   1c16a:	00 
   1c16b:	53                   	push   %rbx
   1c16c:	48 83 ec 68          	sub    $0x68,%rsp
   1c170:	48 83 f8 50          	cmp    $0x50,%rax
   1c174:	48 19 f6             	sbb    %rsi,%rsi
   1c177:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   1c17c:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
   1c180:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   1c185:	48 83 c6 04          	add    $0x4,%rsi
   1c189:	48 83 f8 50          	cmp    $0x50,%rax
   1c18d:	19 c9                	sbb    %ecx,%ecx
   1c18f:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1c194:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c19b:	00 
   1c19c:	83 c1 02             	add    $0x2,%ecx
   1c19f:	48 83 f8 50          	cmp    $0x50,%rax
   1c1a3:	48 19 c0             	sbb    %rax,%rax
   1c1a6:	48 83 c0 02          	add    $0x2,%rax
   1c1aa:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1c1af:	4c 89 f8             	mov    %r15,%rax
   1c1b2:	48 d3 e0             	shl    %cl,%rax
   1c1b5:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
   1c1b9:	48 8b 32             	mov    (%rdx),%rsi
   1c1bc:	ba 04 00 00 00       	mov    $0x4,%edx
   1c1c1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1c1c6:	48 01 f8             	add    %rdi,%rax
   1c1c9:	bf 02 00 00 00       	mov    $0x2,%edi
   1c1ce:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c1d3:	48 8d 44 36 04       	lea    0x4(%rsi,%rsi,1),%rax
   1c1d8:	83 e0 08             	and    $0x8,%eax
   1c1db:	48 01 f0             	add    %rsi,%rax
   1c1de:	48 89 f1             	mov    %rsi,%rcx
   1c1e1:	48 89 fb             	mov    %rdi,%rbx
   1c1e4:	48 0f af c8          	imul   %rax,%rcx
   1c1e8:	48 29 cb             	sub    %rcx,%rbx
   1c1eb:	48 0f af c3          	imul   %rbx,%rax
   1c1ef:	83 ea 01             	sub    $0x1,%edx
   1c1f2:	75 ea                	jne    1c1de <mbedtls_mpi_core_exp_mod+0x9e>
   1c1f4:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1c1f9:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1c200:	00 
   1c201:	48 f7 d8             	neg    %rax
   1c204:	31 f6                	xor    %esi,%esi
   1c206:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1c20b:	48 89 da             	mov    %rbx,%rdx
   1c20e:	e8 7d 70 fe ff       	callq  3290 <memset@plt>
   1c213:	4d 89 f9             	mov    %r15,%r9
   1c216:	4d 89 f0             	mov    %r14,%r8
   1c219:	4c 89 f9             	mov    %r15,%rcx
   1c21c:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c223:	00 
   1c224:	48 c7 06 01 00 00 00 	movq   $0x1,(%rsi)
   1c22b:	ff 74 24 10          	pushq  0x10(%rsp)
   1c22f:	ff 74 24 30          	pushq  0x30(%rsp)
   1c233:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   1c23a:	00 
   1c23b:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   1c242:	00 
   1c243:	48 89 f7             	mov    %rsi,%rdi
   1c246:	e8 25 fb ff ff       	callq  1bd70 <mbedtls_mpi_core_montmul>
   1c24b:	48 89 da             	mov    %rbx,%rdx
   1c24e:	48 03 9c 24 b8 00 00 	add    0xb8(%rsp),%rbx
   1c255:	00 
   1c256:	4c 89 e6             	mov    %r12,%rsi
   1c259:	48 89 df             	mov    %rbx,%rdi
   1c25c:	49 89 dc             	mov    %rbx,%r12
   1c25f:	e8 ac 70 fe ff       	callq  3310 <memcpy@plt>
   1c264:	41 59                	pop    %r9
   1c266:	41 5a                	pop    %r10
   1c268:	b8 02 00 00 00       	mov    $0x2,%eax
   1c26d:	48 83 7c 24 20 02    	cmpq   $0x2,0x20(%rsp)
   1c273:	74 58                	je     1c2cd <mbedtls_mpi_core_exp_mod+0x18d>
   1c275:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   1c27a:	4d 89 e5             	mov    %r12,%r13
   1c27d:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   1c282:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   1c287:	48 89 dd             	mov    %rbx,%rbp
   1c28a:	4c 89 fb             	mov    %r15,%rbx
   1c28d:	49 89 c7             	mov    %rax,%r15
   1c290:	4c 89 ee             	mov    %r13,%rsi
   1c293:	4c 03 6c 24 18       	add    0x18(%rsp),%r13
   1c298:	ff 74 24 10          	pushq  0x10(%rsp)
   1c29c:	4d 89 f0             	mov    %r14,%r8
   1c29f:	41 54                	push   %r12
   1c2a1:	4c 89 ef             	mov    %r13,%rdi
   1c2a4:	49 89 d9             	mov    %rbx,%r9
   1c2a7:	48 89 d9             	mov    %rbx,%rcx
   1c2aa:	48 89 ea             	mov    %rbp,%rdx
   1c2ad:	49 83 c7 01          	add    $0x1,%r15
   1c2b1:	e8 ba fa ff ff       	callq  1bd70 <mbedtls_mpi_core_montmul>
   1c2b6:	5f                   	pop    %rdi
   1c2b7:	41 58                	pop    %r8
   1c2b9:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
   1c2be:	75 d0                	jne    1c290 <mbedtls_mpi_core_exp_mod+0x150>
   1c2c0:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   1c2c5:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   1c2ca:	49 89 df             	mov    %rbx,%r15
   1c2cd:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1c2d2:	48 89 ef             	mov    %rbp,%rdi
   1c2d5:	49 89 ec             	mov    %rbp,%r12
   1c2d8:	31 db                	xor    %ebx,%ebx
   1c2da:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
   1c2e1:	00 
   1c2e2:	4c 89 fd             	mov    %r15,%rbp
   1c2e5:	e8 26 70 fe ff       	callq  3310 <memcpy@plt>
   1c2ea:	31 c0                	xor    %eax,%eax
   1c2ec:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   1c2f1:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1c2f8:	00 00 
   1c2fa:	49 89 c6             	mov    %rax,%r14
   1c2fd:	0f 1f 00             	nopl   (%rax)
   1c300:	ff 74 24 10          	pushq  0x10(%rsp)
   1c304:	48 89 e9             	mov    %rbp,%rcx
   1c307:	4c 89 e6             	mov    %r12,%rsi
   1c30a:	49 89 e9             	mov    %rbp,%r9
   1c30d:	ff 74 24 30          	pushq  0x30(%rsp)
   1c311:	4c 89 e2             	mov    %r12,%rdx
   1c314:	4c 89 e7             	mov    %r12,%rdi
   1c317:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1c31c:	e8 4f fa ff ff       	callq  1bd70 <mbedtls_mpi_core_montmul>
   1c321:	59                   	pop    %rcx
   1c322:	5e                   	pop    %rsi
   1c323:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   1c329:	0f 85 d1 00 00 00    	jne    1c400 <mbedtls_mpi_core_exp_mod+0x2c0>
   1c32f:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1c334:	49 83 ed 01          	sub    $0x1,%r13
   1c338:	48 01 db             	add    %rbx,%rbx
   1c33b:	49 83 c6 01          	add    $0x1,%r14
   1c33f:	4a 8b 04 e8          	mov    (%rax,%r13,8),%rax
   1c343:	48 89 c2             	mov    %rax,%rdx
   1c346:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c34b:	4c 89 e8             	mov    %r13,%rax
   1c34e:	48 c1 ea 3f          	shr    $0x3f,%rdx
   1c352:	48 83 c8 3f          	or     $0x3f,%rax
   1c356:	48 c7 44 24 08 3f 00 	movq   $0x3f,0x8(%rsp)
   1c35d:	00 00 
   1c35f:	48 09 d3             	or     %rdx,%rbx
   1c362:	4c 39 74 24 50       	cmp    %r14,0x50(%rsp)
   1c367:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1c36c:	75 92                	jne    1c300 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c36e:	66 90                	xchg   %ax,%ax
   1c370:	4c 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%r15
   1c377:	00 
   1c378:	45 31 f6             	xor    %r14d,%r14d
   1c37b:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   1c380:	4d 89 fc             	mov    %r15,%r12
   1c383:	4d 89 f7             	mov    %r14,%r15
   1c386:	49 89 de             	mov    %rbx,%r14
   1c389:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
   1c38e:	66 90                	xchg   %ax,%ax
   1c390:	4c 89 f6             	mov    %r14,%rsi
   1c393:	4c 89 ff             	mov    %r15,%rdi
   1c396:	e8 45 b0 fe ff       	callq  73e0 <mbedtls_ct_size_bool_eq>
   1c39b:	4c 39 e3             	cmp    %r12,%rbx
   1c39e:	74 11                	je     1c3b1 <mbedtls_mpi_core_exp_mod+0x271>
   1c3a0:	0f b6 c8             	movzbl %al,%ecx
   1c3a3:	4c 89 e2             	mov    %r12,%rdx
   1c3a6:	48 89 de             	mov    %rbx,%rsi
   1c3a9:	48 89 ef             	mov    %rbp,%rdi
   1c3ac:	e8 8f b0 fe ff       	callq  7440 <mbedtls_ct_mpi_uint_cond_assign>
   1c3b1:	49 83 c7 01          	add    $0x1,%r15
   1c3b5:	4c 03 64 24 18       	add    0x18(%rsp),%r12
   1c3ba:	4c 3b 7c 24 20       	cmp    0x20(%rsp),%r15
   1c3bf:	75 cf                	jne    1c390 <mbedtls_mpi_core_exp_mod+0x250>
   1c3c1:	4c 8b 64 24 48       	mov    0x48(%rsp),%r12
   1c3c6:	ff 74 24 10          	pushq  0x10(%rsp)
   1c3ca:	49 89 e9             	mov    %rbp,%r9
   1c3cd:	48 89 e9             	mov    %rbp,%rcx
   1c3d0:	ff 74 24 30          	pushq  0x30(%rsp)
   1c3d4:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1c3d9:	4c 89 e6             	mov    %r12,%rsi
   1c3dc:	4c 89 e7             	mov    %r12,%rdi
   1c3df:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1c3e4:	e8 87 f9 ff ff       	callq  1bd70 <mbedtls_mpi_core_montmul>
   1c3e9:	58                   	pop    %rax
   1c3ea:	5a                   	pop    %rdx
   1c3eb:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   1c3f1:	74 6d                	je     1c460 <mbedtls_mpi_core_exp_mod+0x320>
   1c3f3:	31 db                	xor    %ebx,%ebx
   1c3f5:	45 31 f6             	xor    %r14d,%r14d
   1c3f8:	e9 03 ff ff ff       	jmpq   1c300 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c3fd:	0f 1f 00             	nopl   (%rax)
   1c400:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1c405:	48 83 6c 24 08 01    	subq   $0x1,0x8(%rsp)
   1c40b:	48 01 db             	add    %rbx,%rbx
   1c40e:	49 83 c6 01          	add    $0x1,%r14
   1c412:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1c417:	4a 8b 3c ef          	mov    (%rdi,%r13,8),%rdi
   1c41b:	89 c1                	mov    %eax,%ecx
   1c41d:	4c 09 e8             	or     %r13,%rax
   1c420:	48 89 fa             	mov    %rdi,%rdx
   1c423:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1c428:	48 d3 ea             	shr    %cl,%rdx
   1c42b:	83 e2 01             	and    $0x1,%edx
   1c42e:	48 09 d3             	or     %rdx,%rbx
   1c431:	4c 3b 74 24 50       	cmp    0x50(%rsp),%r14
   1c436:	0f 84 34 ff ff ff    	je     1c370 <mbedtls_mpi_core_exp_mod+0x230>
   1c43c:	48 85 c0             	test   %rax,%rax
   1c43f:	0f 85 bb fe ff ff    	jne    1c300 <mbedtls_mpi_core_exp_mod+0x1c0>
   1c445:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1c44c:	00 00 
   1c44e:	45 31 ed             	xor    %r13d,%r13d
   1c451:	e9 1a ff ff ff       	jmpq   1c370 <mbedtls_mpi_core_exp_mod+0x230>
   1c456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c45d:	00 00 00 
   1c460:	48 83 c4 68          	add    $0x68,%rsp
   1c464:	5b                   	pop    %rbx
   1c465:	5d                   	pop    %rbp
   1c466:	41 5c                	pop    %r12
   1c468:	41 5d                	pop    %r13
   1c46a:	41 5e                	pop    %r14
   1c46c:	41 5f                	pop    %r15
   1c46e:	c3                   	retq   
   1c46f:	90                   	nop

000000000001c470 <mbedtls_mpi_core_sub_int>:
   1c470:	f3 0f 1e fa          	endbr64 
   1c474:	48 89 d0             	mov    %rdx,%rax
   1c477:	48 85 c9             	test   %rcx,%rcx
   1c47a:	74 21                	je     1c49d <mbedtls_mpi_core_sub_int+0x2d>
   1c47c:	45 31 c0             	xor    %r8d,%r8d
   1c47f:	90                   	nop
   1c480:	4a 8b 14 c6          	mov    (%rsi,%r8,8),%rdx
   1c484:	49 89 d1             	mov    %rdx,%r9
   1c487:	49 29 c1             	sub    %rax,%r9
   1c48a:	0f 92 c0             	setb   %al
   1c48d:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
   1c491:	49 83 c0 01          	add    $0x1,%r8
   1c495:	0f b6 c0             	movzbl %al,%eax
   1c498:	4c 39 c1             	cmp    %r8,%rcx
   1c49b:	75 e3                	jne    1c480 <mbedtls_mpi_core_sub_int+0x10>
   1c49d:	c3                   	retq   
   1c49e:	66 90                	xchg   %ax,%ax

000000000001c4a0 <mbedtls_mpi_core_check_zero_ct>:
   1c4a0:	f3 0f 1e fa          	endbr64 
   1c4a4:	48 85 f6             	test   %rsi,%rsi
   1c4a7:	74 17                	je     1c4c0 <mbedtls_mpi_core_check_zero_ct+0x20>
   1c4a9:	48 8d 14 f7          	lea    (%rdi,%rsi,8),%rdx
   1c4ad:	31 c0                	xor    %eax,%eax
   1c4af:	90                   	nop
   1c4b0:	48 0b 07             	or     (%rdi),%rax
   1c4b3:	48 83 c7 08          	add    $0x8,%rdi
   1c4b7:	48 39 d7             	cmp    %rdx,%rdi
   1c4ba:	75 f4                	jne    1c4b0 <mbedtls_mpi_core_check_zero_ct+0x10>
   1c4bc:	c3                   	retq   
   1c4bd:	0f 1f 00             	nopl   (%rax)
   1c4c0:	31 c0                	xor    %eax,%eax
   1c4c2:	c3                   	retq   
   1c4c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c4ca:	00 00 00 00 
   1c4ce:	66 90                	xchg   %ax,%ax

000000000001c4d0 <mbedtls_mpi_core_to_mont_rep>:
   1c4d0:	f3 0f 1e fa          	endbr64 
   1c4d4:	48 83 ec 08          	sub    $0x8,%rsp
   1c4d8:	49 89 d2             	mov    %rdx,%r10
   1c4db:	4c 89 ca             	mov    %r9,%rdx
   1c4de:	49 89 c9             	mov    %rcx,%r9
   1c4e1:	ff 74 24 10          	pushq  0x10(%rsp)
   1c4e5:	41 50                	push   %r8
   1c4e7:	4d 89 d0             	mov    %r10,%r8
   1c4ea:	e8 81 f8 ff ff       	callq  1bd70 <mbedtls_mpi_core_montmul>
   1c4ef:	48 83 c4 18          	add    $0x18,%rsp
   1c4f3:	c3                   	retq   
   1c4f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c4fb:	00 00 00 00 
   1c4ff:	90                   	nop

000000000001c500 <mbedtls_mpi_core_from_mont_rep>:
   1c500:	f3 0f 1e fa          	endbr64 
   1c504:	48 83 ec 18          	sub    $0x18,%rsp
   1c508:	49 89 d2             	mov    %rdx,%r10
   1c50b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c512:	00 00 
   1c514:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c519:	31 c0                	xor    %eax,%eax
   1c51b:	48 89 e2             	mov    %rsp,%rdx
   1c51e:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   1c525:	00 
   1c526:	41 51                	push   %r9
   1c528:	49 89 c9             	mov    %rcx,%r9
   1c52b:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c530:	41 50                	push   %r8
   1c532:	4d 89 d0             	mov    %r10,%r8
   1c535:	e8 36 f8 ff ff       	callq  1bd70 <mbedtls_mpi_core_montmul>
   1c53a:	58                   	pop    %rax
   1c53b:	5a                   	pop    %rdx
   1c53c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1c541:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1c548:	00 00 
   1c54a:	75 05                	jne    1c551 <mbedtls_mpi_core_from_mont_rep+0x51>
   1c54c:	48 83 c4 18          	add    $0x18,%rsp
   1c550:	c3                   	retq   
   1c551:	e8 0a 6d fe ff       	callq  3260 <__stack_chk_fail@plt>
   1c556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c55d:	00 00 00 

000000000001c560 <camellia_feistel>:
   1c560:	8b 0f                	mov    (%rdi),%ecx
   1c562:	33 0e                	xor    (%rsi),%ecx
   1c564:	4c 8d 05 15 9b 00 00 	lea    0x9b15(%rip),%r8        # 26080 <FSb3>
   1c56b:	4c 8d 15 0e 9d 00 00 	lea    0x9d0e(%rip),%r10        # 26280 <FSb>
   1c572:	8b 47 04             	mov    0x4(%rdi),%eax
   1c575:	33 46 04             	xor    0x4(%rsi),%eax
   1c578:	0f b6 f5             	movzbl %ch,%esi
   1c57b:	48 8d 3d fe 99 00 00 	lea    0x99fe(%rip),%rdi        # 25f80 <FSb4>
   1c582:	45 0f b6 0c 30       	movzbl (%r8,%rsi,1),%r9d
   1c587:	89 ce                	mov    %ecx,%esi
   1c589:	44 0f b6 d9          	movzbl %cl,%r11d
   1c58d:	c1 e9 10             	shr    $0x10,%ecx
   1c590:	c1 ee 18             	shr    $0x18,%esi
   1c593:	46 0f b6 1c 1f       	movzbl (%rdi,%r11,1),%r11d
   1c598:	0f b6 c9             	movzbl %cl,%ecx
   1c59b:	41 0f b6 34 32       	movzbl (%r10,%rsi,1),%esi
   1c5a0:	41 c1 e1 08          	shl    $0x8,%r9d
   1c5a4:	c1 e6 18             	shl    $0x18,%esi
   1c5a7:	44 09 de             	or     %r11d,%esi
   1c5aa:	4c 8d 1d cf 9b 00 00 	lea    0x9bcf(%rip),%r11        # 26180 <FSb2>
   1c5b1:	41 0f b6 0c 0b       	movzbl (%r11,%rcx,1),%ecx
   1c5b6:	c1 e1 10             	shl    $0x10,%ecx
   1c5b9:	09 f1                	or     %esi,%ecx
   1c5bb:	41 09 c9             	or     %ecx,%r9d
   1c5be:	0f b6 cc             	movzbl %ah,%ecx
   1c5c1:	0f b6 3c 0f          	movzbl (%rdi,%rcx,1),%edi
   1c5c5:	89 c1                	mov    %eax,%ecx
   1c5c7:	c1 e9 18             	shr    $0x18,%ecx
   1c5ca:	41 0f b6 34 0b       	movzbl (%r11,%rcx,1),%esi
   1c5cf:	0f b6 c8             	movzbl %al,%ecx
   1c5d2:	c1 e8 10             	shr    $0x10,%eax
   1c5d5:	41 0f b6 0c 0a       	movzbl (%r10,%rcx,1),%ecx
   1c5da:	c1 e7 08             	shl    $0x8,%edi
   1c5dd:	c1 e6 18             	shl    $0x18,%esi
   1c5e0:	09 ce                	or     %ecx,%esi
   1c5e2:	0f b6 c8             	movzbl %al,%ecx
   1c5e5:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   1c5ea:	c1 e0 10             	shl    $0x10,%eax
   1c5ed:	09 f0                	or     %esi,%eax
   1c5ef:	09 c7                	or     %eax,%edi
   1c5f1:	89 f9                	mov    %edi,%ecx
   1c5f3:	c1 c1 08             	rol    $0x8,%ecx
   1c5f6:	89 ce                	mov    %ecx,%esi
   1c5f8:	44 31 ce             	xor    %r9d,%esi
   1c5fb:	89 f0                	mov    %esi,%eax
   1c5fd:	c1 c0 10             	rol    $0x10,%eax
   1c600:	31 f8                	xor    %edi,%eax
   1c602:	89 c1                	mov    %eax,%ecx
   1c604:	33 02                	xor    (%rdx),%eax
   1c606:	c1 c9 08             	ror    $0x8,%ecx
   1c609:	31 f1                	xor    %esi,%ecx
   1c60b:	31 4a 04             	xor    %ecx,0x4(%rdx)
   1c60e:	89 ce                	mov    %ecx,%esi
   1c610:	c1 ce 08             	ror    $0x8,%esi
   1c613:	31 f0                	xor    %esi,%eax
   1c615:	89 02                	mov    %eax,(%rdx)
   1c617:	c3                   	retq   
   1c618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c61f:	00 

000000000001c620 <mbedtls_camellia_init>:
   1c620:	f3 0f 1e fa          	endbr64 
   1c624:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1c62b:	48 89 f9             	mov    %rdi,%rcx
   1c62e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1c632:	31 c0                	xor    %eax,%eax
   1c634:	48 c7 87 04 01 00 00 	movq   $0x0,0x104(%rdi)
   1c63b:	00 00 00 00 
   1c63f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1c643:	48 29 f9             	sub    %rdi,%rcx
   1c646:	81 c1 14 01 00 00    	add    $0x114,%ecx
   1c64c:	c1 e9 03             	shr    $0x3,%ecx
   1c64f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1c652:	c3                   	retq   
   1c653:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c65a:	00 00 00 00 
   1c65e:	66 90                	xchg   %ax,%ax

000000000001c660 <mbedtls_camellia_free>:
   1c660:	f3 0f 1e fa          	endbr64 
   1c664:	48 85 ff             	test   %rdi,%rdi
   1c667:	74 0f                	je     1c678 <mbedtls_camellia_free+0x18>
   1c669:	be 14 01 00 00       	mov    $0x114,%esi
   1c66e:	e9 ad 8b fe ff       	jmpq   5220 <mbedtls_platform_zeroize>
   1c673:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c678:	c3                   	retq   
   1c679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c680 <mbedtls_camellia_setkey_enc>:
   1c680:	f3 0f 1e fa          	endbr64 
   1c684:	41 57                	push   %r15
   1c686:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1c68a:	41 89 d7             	mov    %edx,%r15d
   1c68d:	41 56                	push   %r14
   1c68f:	41 55                	push   %r13
   1c691:	49 89 fd             	mov    %rdi,%r13
   1c694:	41 54                	push   %r12
   1c696:	4c 8d 67 04          	lea    0x4(%rdi),%r12
   1c69a:	48 83 c7 0c          	add    $0xc,%rdi
   1c69e:	55                   	push   %rbp
   1c69f:	4c 89 e1             	mov    %r12,%rcx
   1c6a2:	53                   	push   %rbx
   1c6a3:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   1c6aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c6b1:	00 00 
   1c6b3:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   1c6ba:	00 
   1c6bb:	31 c0                	xor    %eax,%eax
   1c6bd:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   1c6c4:	00 
   1c6c5:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   1c6cc:	00 
   1c6cd:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   1c6d4:	00 
   1c6d5:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
   1c6dc:	00 
   1c6dd:	48 c7 47 f8 00 00 00 	movq   $0x0,-0x8(%rdi)
   1c6e4:	00 
   1c6e5:	48 c7 87 00 01 00 00 	movq   $0x0,0x100(%rdi)
   1c6ec:	00 00 00 00 
   1c6f0:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1c6f4:	48 29 f9             	sub    %rdi,%rcx
   1c6f7:	81 c1 10 01 00 00    	add    $0x110,%ecx
   1c6fd:	c1 e9 03             	shr    $0x3,%ecx
   1c700:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1c703:	8d 82 40 ff ff ff    	lea    -0xc0(%rdx),%eax
   1c709:	83 e0 bf             	and    $0xffffffbf,%eax
   1c70c:	74 42                	je     1c750 <mbedtls_camellia_setkey_enc+0xd0>
   1c70e:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1c713:	81 fa 80 00 00 00    	cmp    $0x80,%edx
   1c719:	0f 84 11 07 00 00    	je     1ce30 <mbedtls_camellia_setkey_enc+0x7b0>
   1c71f:	48 8b 9c 24 28 01 00 	mov    0x128(%rsp),%rbx
   1c726:	00 
   1c727:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1c72e:	00 00 
   1c730:	0f 85 50 07 00 00    	jne    1ce86 <mbedtls_camellia_setkey_enc+0x806>
   1c736:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
   1c73d:	5b                   	pop    %rbx
   1c73e:	5d                   	pop    %rbp
   1c73f:	41 5c                	pop    %r12
   1c741:	41 5d                	pop    %r13
   1c743:	41 5e                	pop    %r14
   1c745:	41 5f                	pop    %r15
   1c747:	c3                   	retq   
   1c748:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c74f:	00 
   1c750:	89 d1                	mov    %edx,%ecx
   1c752:	41 c7 45 00 04 00 00 	movl   $0x4,0x0(%r13)
   1c759:	00 
   1c75a:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   1c761:	bb 19 00 00 00       	mov    $0x19,%ebx
   1c766:	c1 e9 03             	shr    $0x3,%ecx
   1c769:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%rsp)
   1c770:	00 
   1c771:	48 c7 44 24 10 2c 00 	movq   $0x2c,0x10(%rsp)
   1c778:	00 00 
   1c77a:	89 cf                	mov    %ecx,%edi
   1c77c:	74 2b                	je     1c7a9 <mbedtls_camellia_setkey_enc+0x129>
   1c77e:	31 c0                	xor    %eax,%eax
   1c780:	48 8d 8c 24 e0 00 00 	lea    0xe0(%rsp),%rcx
   1c787:	00 
   1c788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c78f:	00 
   1c790:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
   1c794:	88 14 01             	mov    %dl,(%rcx,%rax,1)
   1c797:	48 83 c0 01          	add    $0x1,%rax
   1c79b:	48 39 f8             	cmp    %rdi,%rax
   1c79e:	72 f0                	jb     1c790 <mbedtls_camellia_setkey_enc+0x110>
   1c7a0:	8b 8c 24 e0 00 00 00 	mov    0xe0(%rsp),%ecx
   1c7a7:	0f c9                	bswap  %ecx
   1c7a9:	41 81 ff c0 00 00 00 	cmp    $0xc0,%r15d
   1c7b0:	0f 84 aa 06 00 00    	je     1ce60 <mbedtls_camellia_setkey_enc+0x7e0>
   1c7b6:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
   1c7bb:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1c7c0:	bf 7f 66 9e a0       	mov    $0xa09e667f,%edi
   1c7c5:	41 b9 8b 90 cc 3b    	mov    $0x3bcc908b,%r9d
   1c7cb:	4c 89 c2             	mov    %r8,%rdx
   1c7ce:	48 8d 35 ab 9b 00 00 	lea    0x9bab(%rip),%rsi        # 26380 <SIGMA_CHARS>
   1c7d5:	eb 14                	jmp    1c7eb <mbedtls_camellia_setkey_enc+0x16b>
   1c7d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c7de:	00 00 
   1c7e0:	8b 3e                	mov    (%rsi),%edi
   1c7e2:	44 8b 4e 04          	mov    0x4(%rsi),%r9d
   1c7e6:	0f cf                	bswap  %edi
   1c7e8:	41 0f c9             	bswap  %r9d
   1c7eb:	89 3a                	mov    %edi,(%rdx)
   1c7ed:	48 83 c2 08          	add    $0x8,%rdx
   1c7f1:	48 83 c6 08          	add    $0x8,%rsi
   1c7f5:	44 89 4a fc          	mov    %r9d,-0x4(%rdx)
   1c7f9:	48 39 c2             	cmp    %rax,%rdx
   1c7fc:	75 e2                	jne    1c7e0 <mbedtls_camellia_setkey_enc+0x160>
   1c7fe:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1c802:	31 d2                	xor    %edx,%edx
   1c804:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1c809:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1c80e:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1c813:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1c81a:	00 
   1c81b:	eb 0c                	jmp    1c829 <mbedtls_camellia_setkey_enc+0x1a9>
   1c81d:	0f 1f 00             	nopl   (%rax)
   1c820:	8b 8c 94 e0 00 00 00 	mov    0xe0(%rsp,%rdx,4),%ecx
   1c827:	0f c9                	bswap  %ecx
   1c829:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
   1c82c:	48 83 c2 01          	add    $0x1,%rdx
   1c830:	48 83 fa 08          	cmp    $0x8,%rdx
   1c834:	75 ea                	jne    1c820 <mbedtls_camellia_setkey_enc+0x1a0>
   1c836:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1c83b:	48 33 54 24 60       	xor    0x60(%rsp),%rdx
   1c840:	4c 8d 54 24 70       	lea    0x70(%rsp),%r10
   1c845:	4c 89 c6             	mov    %r8,%rsi
   1c848:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
   1c84d:	4c 8d 74 24 78       	lea    0x78(%rsp),%r14
   1c852:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   1c857:	4c 89 d7             	mov    %r10,%rdi
   1c85a:	48 33 54 24 68       	xor    0x68(%rsp),%rdx
   1c85f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c864:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
   1c869:	4c 89 f2             	mov    %r14,%rdx
   1c86c:	4c 89 14 24          	mov    %r10,(%rsp)
   1c870:	e8 eb fc ff ff       	callq  1c560 <camellia_feistel>
   1c875:	4c 8b 14 24          	mov    (%rsp),%r10
   1c879:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   1c87e:	4c 89 f7             	mov    %r14,%rdi
   1c881:	4c 89 d2             	mov    %r10,%rdx
   1c884:	e8 d7 fc ff ff       	callq  1c560 <camellia_feistel>
   1c889:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1c88e:	4c 8b 14 24          	mov    (%rsp),%r10
   1c892:	48 8d 4c 24 60       	lea    0x60(%rsp),%rcx
   1c897:	8b 10                	mov    (%rax),%edx
   1c899:	31 50 20             	xor    %edx,0x20(%rax)
   1c89c:	48 83 c0 04          	add    $0x4,%rax
   1c8a0:	48 39 c8             	cmp    %rcx,%rax
   1c8a3:	75 f2                	jne    1c897 <mbedtls_camellia_setkey_enc+0x217>
   1c8a5:	4c 89 d7             	mov    %r10,%rdi
   1c8a8:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1c8ad:	4c 89 f2             	mov    %r14,%rdx
   1c8b0:	4c 89 14 24          	mov    %r10,(%rsp)
   1c8b4:	e8 a7 fc ff ff       	callq  1c560 <camellia_feistel>
   1c8b9:	4c 8b 14 24          	mov    (%rsp),%r10
   1c8bd:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   1c8c2:	4c 89 f7             	mov    %r14,%rdi
   1c8c5:	4c 89 d2             	mov    %r10,%rdx
   1c8c8:	e8 93 fc ff ff       	callq  1c560 <camellia_feistel>
   1c8cd:	41 81 ff 80 00 00 00 	cmp    $0x80,%r15d
   1c8d4:	76 66                	jbe    1c93c <mbedtls_camellia_setkey_enc+0x2bc>
   1c8d6:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   1c8dd:	00 
   1c8de:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1c8e3:	48 33 44 24 70       	xor    0x70(%rsp),%rax
   1c8e8:	4c 8d 8c 24 80 00 00 	lea    0x80(%rsp),%r9
   1c8ef:	00 
   1c8f0:	4c 89 c2             	mov    %r8,%rdx
   1c8f3:	4c 89 cf             	mov    %r9,%rdi
   1c8f6:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   1c8fb:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1c900:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1c907:	00 
   1c908:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1c90d:	48 33 44 24 78       	xor    0x78(%rsp),%rax
   1c912:	4c 89 0c 24          	mov    %r9,(%rsp)
   1c916:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   1c91d:	00 
   1c91e:	e8 3d fc ff ff       	callq  1c560 <camellia_feistel>
   1c923:	4c 8b 0c 24          	mov    (%rsp),%r9
   1c927:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1c92c:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
   1c931:	4c 89 ca             	mov    %r9,%rdx
   1c934:	4c 89 c7             	mov    %r8,%rdi
   1c937:	e8 24 fc ff ff       	callq  1c560 <camellia_feistel>
   1c93c:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1c941:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
   1c948:	00 
   1c949:	be 01 00 00 00       	mov    $0x1,%esi
   1c94e:	41 be 20 00 00 00    	mov    $0x20,%r14d
   1c954:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1c959:	49 89 d3             	mov    %rdx,%r11
   1c95c:	48 89 d7             	mov    %rdx,%rdi
   1c95f:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1c966:	00 
   1c967:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1c96c:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1c973:	00 
   1c974:	48 63 44 24 1c       	movslq 0x1c(%rsp),%rax
   1c979:	49 89 c1             	mov    %rax,%r9
   1c97c:	48 89 04 24          	mov    %rax,(%rsp)
   1c980:	48 8d 05 d9 95 00 00 	lea    0x95d9(%rip),%rax        # 25f60 <shifts>
   1c987:	49 c1 e1 04          	shl    $0x4,%r9
   1c98b:	49 01 c1             	add    %rax,%r9
   1c98e:	b8 01 00 00 00       	mov    $0x1,%eax
   1c993:	84 c0                	test   %al,%al
   1c995:	0f 84 8e 00 00 00    	je     1ca29 <mbedtls_camellia_setkey_enc+0x3a9>
   1c99b:	89 f0                	mov    %esi,%eax
   1c99d:	44 8b 94 24 90 00 00 	mov    0x90(%rsp),%r10d
   1c9a4:	00 
   1c9a5:	45 89 f0             	mov    %r14d,%r8d
   1c9a8:	8b 94 24 94 00 00 00 	mov    0x94(%rsp),%edx
   1c9af:	c1 e0 04             	shl    $0x4,%eax
   1c9b2:	29 f0                	sub    %esi,%eax
   1c9b4:	83 e0 1f             	and    $0x1f,%eax
   1c9b7:	41 29 c0             	sub    %eax,%r8d
   1c9ba:	89 c1                	mov    %eax,%ecx
   1c9bc:	41 d3 e2             	shl    %cl,%r10d
   1c9bf:	44 89 c1             	mov    %r8d,%ecx
   1c9c2:	d3 ea                	shr    %cl,%edx
   1c9c4:	89 c1                	mov    %eax,%ecx
   1c9c6:	41 31 d2             	xor    %edx,%r10d
   1c9c9:	44 89 57 10          	mov    %r10d,0x10(%rdi)
   1c9cd:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   1c9d4:	00 
   1c9d5:	8b 94 24 98 00 00 00 	mov    0x98(%rsp),%edx
   1c9dc:	41 d3 e2             	shl    %cl,%r10d
   1c9df:	44 89 c1             	mov    %r8d,%ecx
   1c9e2:	d3 ea                	shr    %cl,%edx
   1c9e4:	89 c1                	mov    %eax,%ecx
   1c9e6:	41 31 d2             	xor    %edx,%r10d
   1c9e9:	44 89 57 14          	mov    %r10d,0x14(%rdi)
   1c9ed:	44 8b 94 24 98 00 00 	mov    0x98(%rsp),%r10d
   1c9f4:	00 
   1c9f5:	8b 94 24 9c 00 00 00 	mov    0x9c(%rsp),%edx
   1c9fc:	41 d3 e2             	shl    %cl,%r10d
   1c9ff:	44 89 c1             	mov    %r8d,%ecx
   1ca02:	d3 ea                	shr    %cl,%edx
   1ca04:	89 c1                	mov    %eax,%ecx
   1ca06:	41 31 d2             	xor    %edx,%r10d
   1ca09:	44 89 57 18          	mov    %r10d,0x18(%rdi)
   1ca0d:	8b 94 24 9c 00 00 00 	mov    0x9c(%rsp),%edx
   1ca14:	d3 e2                	shl    %cl,%edx
   1ca16:	44 89 c1             	mov    %r8d,%ecx
   1ca19:	89 d0                	mov    %edx,%eax
   1ca1b:	8b 94 24 90 00 00 00 	mov    0x90(%rsp),%edx
   1ca22:	d3 ea                	shr    %cl,%edx
   1ca24:	31 d0                	xor    %edx,%eax
   1ca26:	89 47 1c             	mov    %eax,0x1c(%rdi)
   1ca29:	48 83 c6 01          	add    $0x1,%rsi
   1ca2d:	48 83 c7 10          	add    $0x10,%rdi
   1ca31:	48 83 fe 05          	cmp    $0x5,%rsi
   1ca35:	74 1c                	je     1ca53 <mbedtls_camellia_setkey_enc+0x3d3>
   1ca37:	41 0f b6 44 31 ff    	movzbl -0x1(%r9,%rsi,1),%eax
   1ca3d:	84 c0                	test   %al,%al
   1ca3f:	0f 85 56 ff ff ff    	jne    1c99b <mbedtls_camellia_setkey_enc+0x31b>
   1ca45:	48 83 c6 01          	add    $0x1,%rsi
   1ca49:	48 83 c7 10          	add    $0x10,%rdi
   1ca4d:	48 83 fe 05          	cmp    $0x5,%rsi
   1ca51:	75 e4                	jne    1ca37 <mbedtls_camellia_setkey_enc+0x3b7>
   1ca53:	48 8b 3c 24          	mov    (%rsp),%rdi
   1ca57:	48 8d 0d 62 94 00 00 	lea    0x9462(%rip),%rcx        # 25ec0 <indexes>
   1ca5e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1ca63:	31 f6                	xor    %esi,%esi
   1ca65:	48 8d 04 bd 00 00 00 	lea    0x0(,%rdi,4),%rax
   1ca6c:	00 
   1ca6d:	48 01 f8             	add    %rdi,%rax
   1ca70:	48 c1 e0 04          	shl    $0x4,%rax
   1ca74:	48 01 c8             	add    %rcx,%rax
   1ca77:	31 c9                	xor    %ecx,%ecx
   1ca79:	eb 0a                	jmp    1ca85 <mbedtls_camellia_setkey_enc+0x405>
   1ca7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ca80:	48 0f be 34 08       	movsbq (%rax,%rcx,1),%rsi
   1ca85:	40 80 fe ff          	cmp    $0xff,%sil
   1ca89:	74 07                	je     1ca92 <mbedtls_camellia_setkey_enc+0x412>
   1ca8b:	8b 3c 8a             	mov    (%rdx,%rcx,4),%edi
   1ca8e:	41 89 3c b4          	mov    %edi,(%r12,%rsi,4)
   1ca92:	48 83 c1 01          	add    $0x1,%rcx
   1ca96:	48 83 f9 14          	cmp    $0x14,%rcx
   1ca9a:	75 e4                	jne    1ca80 <mbedtls_camellia_setkey_enc+0x400>
   1ca9c:	41 81 ff 80 00 00 00 	cmp    $0x80,%r15d
   1caa3:	0f 86 04 01 00 00    	jbe    1cbad <mbedtls_camellia_setkey_enc+0x52d>
   1caa9:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
   1caae:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cab3:	49 89 d0             	mov    %rdx,%r8
   1cab6:	be 01 00 00 00       	mov    $0x1,%esi
   1cabb:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   1cac2:	00 
   1cac3:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   1cac8:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   1cacf:	00 
   1cad0:	41 80 7c 31 03 00    	cmpb   $0x0,0x3(%r9,%rsi,1)
   1cad6:	0f 84 92 00 00 00    	je     1cb6e <mbedtls_camellia_setkey_enc+0x4ee>
   1cadc:	89 f7                	mov    %esi,%edi
   1cade:	44 8b b4 24 90 00 00 	mov    0x90(%rsp),%r14d
   1cae5:	00 
   1cae6:	41 ba 20 00 00 00    	mov    $0x20,%r10d
   1caec:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
   1caf3:	c1 e7 04             	shl    $0x4,%edi
   1caf6:	29 f7                	sub    %esi,%edi
   1caf8:	83 e7 1f             	and    $0x1f,%edi
   1cafb:	41 29 fa             	sub    %edi,%r10d
   1cafe:	89 f9                	mov    %edi,%ecx
   1cb00:	41 d3 e6             	shl    %cl,%r14d
   1cb03:	44 89 d1             	mov    %r10d,%ecx
   1cb06:	d3 e8                	shr    %cl,%eax
   1cb08:	89 f9                	mov    %edi,%ecx
   1cb0a:	41 31 c6             	xor    %eax,%r14d
   1cb0d:	45 89 70 10          	mov    %r14d,0x10(%r8)
   1cb11:	44 8b b4 24 94 00 00 	mov    0x94(%rsp),%r14d
   1cb18:	00 
   1cb19:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
   1cb20:	41 d3 e6             	shl    %cl,%r14d
   1cb23:	44 89 d1             	mov    %r10d,%ecx
   1cb26:	d3 e8                	shr    %cl,%eax
   1cb28:	89 f9                	mov    %edi,%ecx
   1cb2a:	41 31 c6             	xor    %eax,%r14d
   1cb2d:	45 89 70 14          	mov    %r14d,0x14(%r8)
   1cb31:	44 8b b4 24 98 00 00 	mov    0x98(%rsp),%r14d
   1cb38:	00 
   1cb39:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cb40:	41 d3 e6             	shl    %cl,%r14d
   1cb43:	44 89 d1             	mov    %r10d,%ecx
   1cb46:	d3 e8                	shr    %cl,%eax
   1cb48:	89 f9                	mov    %edi,%ecx
   1cb4a:	41 31 c6             	xor    %eax,%r14d
   1cb4d:	45 89 70 18          	mov    %r14d,0x18(%r8)
   1cb51:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cb58:	d3 e0                	shl    %cl,%eax
   1cb5a:	44 89 d1             	mov    %r10d,%ecx
   1cb5d:	89 c7                	mov    %eax,%edi
   1cb5f:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
   1cb66:	d3 e8                	shr    %cl,%eax
   1cb68:	31 c7                	xor    %eax,%edi
   1cb6a:	41 89 78 1c          	mov    %edi,0x1c(%r8)
   1cb6e:	48 83 c6 01          	add    $0x1,%rsi
   1cb72:	49 83 c0 10          	add    $0x10,%r8
   1cb76:	48 83 fe 05          	cmp    $0x5,%rsi
   1cb7a:	0f 85 50 ff ff ff    	jne    1cad0 <mbedtls_camellia_setkey_enc+0x450>
   1cb80:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1cb85:	31 c9                	xor    %ecx,%ecx
   1cb87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cb8e:	00 00 
   1cb90:	48 0f be 74 08 14    	movsbq 0x14(%rax,%rcx,1),%rsi
   1cb96:	40 80 fe ff          	cmp    $0xff,%sil
   1cb9a:	74 07                	je     1cba3 <mbedtls_camellia_setkey_enc+0x523>
   1cb9c:	8b 3c 8a             	mov    (%rdx,%rcx,4),%edi
   1cb9f:	41 89 3c b4          	mov    %edi,(%r12,%rsi,4)
   1cba3:	48 83 c1 01          	add    $0x1,%rcx
   1cba7:	48 83 f9 14          	cmp    $0x14,%rcx
   1cbab:	75 e3                	jne    1cb90 <mbedtls_camellia_setkey_enc+0x510>
   1cbad:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   1cbb2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cbb7:	49 89 d0             	mov    %rdx,%r8
   1cbba:	bf 01 00 00 00       	mov    $0x1,%edi
   1cbbf:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   1cbc6:	00 
   1cbc7:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   1cbcc:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   1cbd3:	00 
   1cbd4:	b9 01 00 00 00       	mov    $0x1,%ecx
   1cbd9:	84 c9                	test   %cl,%cl
   1cbdb:	0f 84 92 00 00 00    	je     1cc73 <mbedtls_camellia_setkey_enc+0x5f3>
   1cbe1:	89 fe                	mov    %edi,%esi
   1cbe3:	44 8b b4 24 90 00 00 	mov    0x90(%rsp),%r14d
   1cbea:	00 
   1cbeb:	41 ba 20 00 00 00    	mov    $0x20,%r10d
   1cbf1:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
   1cbf8:	c1 e6 04             	shl    $0x4,%esi
   1cbfb:	29 fe                	sub    %edi,%esi
   1cbfd:	83 e6 1f             	and    $0x1f,%esi
   1cc00:	41 29 f2             	sub    %esi,%r10d
   1cc03:	89 f1                	mov    %esi,%ecx
   1cc05:	41 d3 e6             	shl    %cl,%r14d
   1cc08:	44 89 d1             	mov    %r10d,%ecx
   1cc0b:	d3 e8                	shr    %cl,%eax
   1cc0d:	89 f1                	mov    %esi,%ecx
   1cc0f:	41 31 c6             	xor    %eax,%r14d
   1cc12:	45 89 70 10          	mov    %r14d,0x10(%r8)
   1cc16:	44 8b b4 24 94 00 00 	mov    0x94(%rsp),%r14d
   1cc1d:	00 
   1cc1e:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
   1cc25:	41 d3 e6             	shl    %cl,%r14d
   1cc28:	44 89 d1             	mov    %r10d,%ecx
   1cc2b:	d3 e8                	shr    %cl,%eax
   1cc2d:	89 f1                	mov    %esi,%ecx
   1cc2f:	41 31 c6             	xor    %eax,%r14d
   1cc32:	45 89 70 14          	mov    %r14d,0x14(%r8)
   1cc36:	44 8b b4 24 98 00 00 	mov    0x98(%rsp),%r14d
   1cc3d:	00 
   1cc3e:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cc45:	41 d3 e6             	shl    %cl,%r14d
   1cc48:	44 89 d1             	mov    %r10d,%ecx
   1cc4b:	d3 e8                	shr    %cl,%eax
   1cc4d:	89 f1                	mov    %esi,%ecx
   1cc4f:	41 31 c6             	xor    %eax,%r14d
   1cc52:	45 89 70 18          	mov    %r14d,0x18(%r8)
   1cc56:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cc5d:	d3 e0                	shl    %cl,%eax
   1cc5f:	44 89 d1             	mov    %r10d,%ecx
   1cc62:	89 c6                	mov    %eax,%esi
   1cc64:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
   1cc6b:	d3 e8                	shr    %cl,%eax
   1cc6d:	31 c6                	xor    %eax,%esi
   1cc6f:	41 89 70 1c          	mov    %esi,0x1c(%r8)
   1cc73:	48 83 c7 01          	add    $0x1,%rdi
   1cc77:	49 83 c0 10          	add    $0x10,%r8
   1cc7b:	48 83 ff 05          	cmp    $0x5,%rdi
   1cc7f:	74 1c                	je     1cc9d <mbedtls_camellia_setkey_enc+0x61d>
   1cc81:	41 0f b6 4c 39 07    	movzbl 0x7(%r9,%rdi,1),%ecx
   1cc87:	84 c9                	test   %cl,%cl
   1cc89:	0f 85 52 ff ff ff    	jne    1cbe1 <mbedtls_camellia_setkey_enc+0x561>
   1cc8f:	48 83 c7 01          	add    $0x1,%rdi
   1cc93:	49 83 c0 10          	add    $0x10,%r8
   1cc97:	48 83 ff 05          	cmp    $0x5,%rdi
   1cc9b:	75 e4                	jne    1cc81 <mbedtls_camellia_setkey_enc+0x601>
   1cc9d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1cca2:	31 c9                	xor    %ecx,%ecx
   1cca4:	eb 10                	jmp    1ccb6 <mbedtls_camellia_setkey_enc+0x636>
   1cca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ccad:	00 00 00 
   1ccb0:	48 0f be 6c 08 28    	movsbq 0x28(%rax,%rcx,1),%rbp
   1ccb6:	40 80 fd ff          	cmp    $0xff,%bpl
   1ccba:	74 07                	je     1ccc3 <mbedtls_camellia_setkey_enc+0x643>
   1ccbc:	8b 34 8a             	mov    (%rdx,%rcx,4),%esi
   1ccbf:	41 89 34 ac          	mov    %esi,(%r12,%rbp,4)
   1ccc3:	48 83 c1 01          	add    $0x1,%rcx
   1ccc7:	48 83 f9 14          	cmp    $0x14,%rcx
   1cccb:	75 e3                	jne    1ccb0 <mbedtls_camellia_setkey_enc+0x630>
   1cccd:	41 81 ff 80 00 00 00 	cmp    $0x80,%r15d
   1ccd4:	0f 86 03 01 00 00    	jbe    1cddd <mbedtls_camellia_setkey_enc+0x75d>
   1ccda:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1cce1:	00 
   1cce2:	be 01 00 00 00       	mov    $0x1,%esi
   1cce7:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   1cced:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
   1ccf4:	00 
   1ccf5:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   1ccfc:	00 
   1ccfd:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   1cd04:	00 
   1cd05:	41 80 7c 31 0b 00    	cmpb   $0x0,0xb(%r9,%rsi,1)
   1cd0b:	0f 84 96 00 00 00    	je     1cda7 <mbedtls_camellia_setkey_enc+0x727>
   1cd11:	89 f7                	mov    %esi,%edi
   1cd13:	44 8b 94 24 90 00 00 	mov    0x90(%rsp),%r10d
   1cd1a:	00 
   1cd1b:	44 89 c5             	mov    %r8d,%ebp
   1cd1e:	44 8b bc 24 94 00 00 	mov    0x94(%rsp),%r15d
   1cd25:	00 
   1cd26:	c1 e7 04             	shl    $0x4,%edi
   1cd29:	29 f7                	sub    %esi,%edi
   1cd2b:	83 e7 1f             	and    $0x1f,%edi
   1cd2e:	29 fd                	sub    %edi,%ebp
   1cd30:	89 f9                	mov    %edi,%ecx
   1cd32:	41 d3 e2             	shl    %cl,%r10d
   1cd35:	89 e9                	mov    %ebp,%ecx
   1cd37:	41 d3 ef             	shr    %cl,%r15d
   1cd3a:	89 f9                	mov    %edi,%ecx
   1cd3c:	45 31 fa             	xor    %r15d,%r10d
   1cd3f:	45 89 53 10          	mov    %r10d,0x10(%r11)
   1cd43:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   1cd4a:	00 
   1cd4b:	44 8b bc 24 98 00 00 	mov    0x98(%rsp),%r15d
   1cd52:	00 
   1cd53:	41 d3 e2             	shl    %cl,%r10d
   1cd56:	89 e9                	mov    %ebp,%ecx
   1cd58:	41 d3 ef             	shr    %cl,%r15d
   1cd5b:	89 f9                	mov    %edi,%ecx
   1cd5d:	45 31 fa             	xor    %r15d,%r10d
   1cd60:	45 89 53 14          	mov    %r10d,0x14(%r11)
   1cd64:	44 8b 94 24 98 00 00 	mov    0x98(%rsp),%r10d
   1cd6b:	00 
   1cd6c:	44 8b bc 24 9c 00 00 	mov    0x9c(%rsp),%r15d
   1cd73:	00 
   1cd74:	41 d3 e2             	shl    %cl,%r10d
   1cd77:	89 e9                	mov    %ebp,%ecx
   1cd79:	41 d3 ef             	shr    %cl,%r15d
   1cd7c:	89 f9                	mov    %edi,%ecx
   1cd7e:	45 31 fa             	xor    %r15d,%r10d
   1cd81:	45 89 53 18          	mov    %r10d,0x18(%r11)
   1cd85:	44 8b bc 24 9c 00 00 	mov    0x9c(%rsp),%r15d
   1cd8c:	00 
   1cd8d:	41 d3 e7             	shl    %cl,%r15d
   1cd90:	89 e9                	mov    %ebp,%ecx
   1cd92:	44 89 ff             	mov    %r15d,%edi
   1cd95:	44 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15d
   1cd9c:	00 
   1cd9d:	41 d3 ef             	shr    %cl,%r15d
   1cda0:	44 31 ff             	xor    %r15d,%edi
   1cda3:	41 89 7b 1c          	mov    %edi,0x1c(%r11)
   1cda7:	48 83 c6 01          	add    $0x1,%rsi
   1cdab:	49 83 c3 10          	add    $0x10,%r11
   1cdaf:	48 83 fe 05          	cmp    $0x5,%rsi
   1cdb3:	0f 85 4c ff ff ff    	jne    1cd05 <mbedtls_camellia_setkey_enc+0x685>
   1cdb9:	31 c9                	xor    %ecx,%ecx
   1cdbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1cdc0:	48 0f be 74 08 3c    	movsbq 0x3c(%rax,%rcx,1),%rsi
   1cdc6:	40 80 fe ff          	cmp    $0xff,%sil
   1cdca:	74 07                	je     1cdd3 <mbedtls_camellia_setkey_enc+0x753>
   1cdcc:	8b 3c 8a             	mov    (%rdx,%rcx,4),%edi
   1cdcf:	41 89 3c b4          	mov    %edi,(%r12,%rsi,4)
   1cdd3:	48 83 c1 01          	add    $0x1,%rcx
   1cdd7:	48 83 f9 14          	cmp    $0x14,%rcx
   1cddb:	75 e3                	jne    1cdc0 <mbedtls_camellia_setkey_enc+0x740>
   1cddd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1cde2:	49 8d 74 85 00       	lea    0x0(%r13,%rax,4),%rsi
   1cde7:	48 8b 04 24          	mov    (%rsp),%rax
   1cdeb:	4c 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%r14
   1cdf2:	00 
   1cdf3:	49 01 c6             	add    %rax,%r14
   1cdf6:	48 8d 05 83 90 00 00 	lea    0x9083(%rip),%rax        # 25e80 <transposes>
   1cdfd:	4a 8d 0c b0          	lea    (%rax,%r14,4),%rcx
   1ce01:	31 c0                	xor    %eax,%eax
   1ce03:	eb 08                	jmp    1ce0d <mbedtls_camellia_setkey_enc+0x78d>
   1ce05:	0f 1f 00             	nopl   (%rax)
   1ce08:	48 0f be 1c 01       	movsbq (%rcx,%rax,1),%rbx
   1ce0d:	80 fb ff             	cmp    $0xff,%bl
   1ce10:	74 08                	je     1ce1a <mbedtls_camellia_setkey_enc+0x79a>
   1ce12:	41 8b 14 9c          	mov    (%r12,%rbx,4),%edx
   1ce16:	89 54 86 04          	mov    %edx,0x4(%rsi,%rax,4)
   1ce1a:	48 83 c0 01          	add    $0x1,%rax
   1ce1e:	48 83 f8 14          	cmp    $0x14,%rax
   1ce22:	75 e4                	jne    1ce08 <mbedtls_camellia_setkey_enc+0x788>
   1ce24:	31 c0                	xor    %eax,%eax
   1ce26:	e9 f4 f8 ff ff       	jmpq   1c71f <mbedtls_camellia_setkey_enc+0x9f>
   1ce2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ce30:	bd 04 00 00 00       	mov    $0x4,%ebp
   1ce35:	bb 15 00 00 00       	mov    $0x15,%ebx
   1ce3a:	bf 10 00 00 00       	mov    $0x10,%edi
   1ce3f:	41 c7 45 00 03 00 00 	movl   $0x3,0x0(%r13)
   1ce46:	00 
   1ce47:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
   1ce4e:	00 00 
   1ce50:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   1ce57:	00 
   1ce58:	e9 21 f9 ff ff       	jmpq   1c77e <mbedtls_camellia_setkey_enc+0xfe>
   1ce5d:	0f 1f 00             	nopl   (%rax)
   1ce60:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   1ce67:	00 
   1ce68:	48 8d b4 24 f8 00 00 	lea    0xf8(%rsp),%rsi
   1ce6f:	00 
   1ce70:	0f b6 10             	movzbl (%rax),%edx
   1ce73:	48 83 c0 01          	add    $0x1,%rax
   1ce77:	f7 d2                	not    %edx
   1ce79:	88 50 07             	mov    %dl,0x7(%rax)
   1ce7c:	48 39 f0             	cmp    %rsi,%rax
   1ce7f:	75 ef                	jne    1ce70 <mbedtls_camellia_setkey_enc+0x7f0>
   1ce81:	e9 30 f9 ff ff       	jmpq   1c7b6 <mbedtls_camellia_setkey_enc+0x136>
   1ce86:	e8 d5 63 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1ce8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ce90 <mbedtls_camellia_setkey_dec>:
   1ce90:	f3 0f 1e fa          	endbr64 
   1ce94:	41 54                	push   %r12
   1ce96:	b9 22 00 00 00       	mov    $0x22,%ecx
   1ce9b:	55                   	push   %rbp
   1ce9c:	53                   	push   %rbx
   1ce9d:	48 89 fb             	mov    %rdi,%rbx
   1cea0:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   1cea7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ceae:	00 00 
   1ceb0:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   1ceb7:	00 
   1ceb8:	31 c0                	xor    %eax,%eax
   1ceba:	48 89 e5             	mov    %rsp,%rbp
   1cebd:	48 89 ef             	mov    %rbp,%rdi
   1cec0:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1cec3:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1cec9:	48 89 ef             	mov    %rbp,%rdi
   1cecc:	e8 af f7 ff ff       	callq  1c680 <mbedtls_camellia_setkey_enc>
   1ced1:	41 89 c4             	mov    %eax,%r12d
   1ced4:	85 c0                	test   %eax,%eax
   1ced6:	0f 85 92 00 00 00    	jne    1cf6e <mbedtls_camellia_setkey_dec+0xde>
   1cedc:	8b 04 24             	mov    (%rsp),%eax
   1cedf:	45 31 c0             	xor    %r8d,%r8d
   1cee2:	4c 8d 4b 14          	lea    0x14(%rbx),%r9
   1cee6:	83 f8 04             	cmp    $0x4,%eax
   1cee9:	89 03                	mov    %eax,(%rbx)
   1ceeb:	41 0f 94 c0          	sete   %r8b
   1ceef:	44 89 c0             	mov    %r8d,%eax
   1cef2:	c1 e0 04             	shl    $0x4,%eax
   1cef5:	48 98                	cltq   
   1cef7:	48 83 c0 30          	add    $0x30,%rax
   1cefb:	48 8d 44 84 04       	lea    0x4(%rsp,%rax,4),%rax
   1cf00:	48 8b 10             	mov    (%rax),%rdx
   1cf03:	48 83 e8 08          	sub    $0x8,%rax
   1cf07:	48 89 53 04          	mov    %rdx,0x4(%rbx)
   1cf0b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1cf0f:	48 89 c1             	mov    %rax,%rcx
   1cf12:	48 89 53 0c          	mov    %rdx,0xc(%rbx)
   1cf16:	ba 16 00 00 00       	mov    $0x16,%edx
   1cf1b:	46 8d 04 c2          	lea    (%rdx,%r8,8),%r8d
   1cf1f:	4c 89 ca             	mov    %r9,%rdx
   1cf22:	4d 63 c0             	movslq %r8d,%r8
   1cf25:	4c 89 c6             	mov    %r8,%rsi
   1cf28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cf2f:	00 
   1cf30:	8b 39                	mov    (%rcx),%edi
   1cf32:	48 83 c2 08          	add    $0x8,%rdx
   1cf36:	48 83 e9 08          	sub    $0x8,%rcx
   1cf3a:	89 7a f8             	mov    %edi,-0x8(%rdx)
   1cf3d:	8b 79 0c             	mov    0xc(%rcx),%edi
   1cf40:	89 7a fc             	mov    %edi,-0x4(%rdx)
   1cf43:	48 83 ee 01          	sub    $0x1,%rsi
   1cf47:	75 e7                	jne    1cf30 <mbedtls_camellia_setkey_dec+0xa0>
   1cf49:	4b 8d 54 c1 f8       	lea    -0x8(%r9,%r8,8),%rdx
   1cf4e:	49 f7 d8             	neg    %r8
   1cf51:	4a 8d 44 c0 08       	lea    0x8(%rax,%r8,8),%rax
   1cf56:	8b 48 f0             	mov    -0x10(%rax),%ecx
   1cf59:	89 4a 08             	mov    %ecx,0x8(%rdx)
   1cf5c:	8b 48 f4             	mov    -0xc(%rax),%ecx
   1cf5f:	89 4a 0c             	mov    %ecx,0xc(%rdx)
   1cf62:	8b 48 f8             	mov    -0x8(%rax),%ecx
   1cf65:	8b 40 fc             	mov    -0x4(%rax),%eax
   1cf68:	89 4a 10             	mov    %ecx,0x10(%rdx)
   1cf6b:	89 42 14             	mov    %eax,0x14(%rdx)
   1cf6e:	be 14 01 00 00       	mov    $0x114,%esi
   1cf73:	48 89 ef             	mov    %rbp,%rdi
   1cf76:	e8 a5 82 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1cf7b:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   1cf82:	00 
   1cf83:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1cf8a:	00 00 
   1cf8c:	75 0f                	jne    1cf9d <mbedtls_camellia_setkey_dec+0x10d>
   1cf8e:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
   1cf95:	44 89 e0             	mov    %r12d,%eax
   1cf98:	5b                   	pop    %rbx
   1cf99:	5d                   	pop    %rbp
   1cf9a:	41 5c                	pop    %r12
   1cf9c:	c3                   	retq   
   1cf9d:	e8 be 62 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1cfa2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1cfa9:	00 00 00 00 
   1cfad:	0f 1f 00             	nopl   (%rax)

000000000001cfb0 <mbedtls_camellia_crypt_ecb>:
   1cfb0:	f3 0f 1e fa          	endbr64 
   1cfb4:	41 57                	push   %r15
   1cfb6:	41 56                	push   %r14
   1cfb8:	41 55                	push   %r13
   1cfba:	41 54                	push   %r12
   1cfbc:	55                   	push   %rbp
   1cfbd:	53                   	push   %rbx
   1cfbe:	48 83 ec 38          	sub    $0x38,%rsp
   1cfc2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1cfc9:	00 00 
   1cfcb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1cfd0:	31 c0                	xor    %eax,%eax
   1cfd2:	83 fe 01             	cmp    $0x1,%esi
   1cfd5:	0f 87 7a 01 00 00    	ja     1d155 <mbedtls_camellia_crypt_ecb+0x1a5>
   1cfdb:	49 89 d1             	mov    %rdx,%r9
   1cfde:	49 89 cf             	mov    %rcx,%r15
   1cfe1:	8b 12                	mov    (%rdx),%edx
   1cfe3:	44 8b 07             	mov    (%rdi),%r8d
   1cfe6:	41 8b 41 04          	mov    0x4(%r9),%eax
   1cfea:	41 8b 71 08          	mov    0x8(%r9),%esi
   1cfee:	4c 8d 6f 14          	lea    0x14(%rdi),%r13
   1cff2:	41 8b 49 0c          	mov    0xc(%r9),%ecx
   1cff6:	0f ca                	bswap  %edx
   1cff8:	33 57 04             	xor    0x4(%rdi),%edx
   1cffb:	0f c8                	bswap  %eax
   1cffd:	0f ce                	bswap  %esi
   1cfff:	33 47 08             	xor    0x8(%rdi),%eax
   1d002:	33 77 0c             	xor    0xc(%rdi),%esi
   1d005:	0f c9                	bswap  %ecx
   1d007:	33 4f 10             	xor    0x10(%rdi),%ecx
   1d00a:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1d00e:	89 44 24 14          	mov    %eax,0x14(%rsp)
   1d012:	89 74 24 18          	mov    %esi,0x18(%rsp)
   1d016:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   1d01a:	45 85 c0             	test   %r8d,%r8d
   1d01d:	0f 84 ea 00 00 00    	je     1d10d <mbedtls_camellia_crypt_ecb+0x15d>
   1d023:	41 8d 40 ff          	lea    -0x1(%r8),%eax
   1d027:	4c 89 eb             	mov    %r13,%rbx
   1d02a:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   1d02f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1d033:	48 c1 e0 06          	shl    $0x6,%rax
   1d037:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
   1d03c:	4c 8d 74 07 14       	lea    0x14(%rdi,%rax,1),%r14
   1d041:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d048:	48 89 ea             	mov    %rbp,%rdx
   1d04b:	48 89 de             	mov    %rbx,%rsi
   1d04e:	4c 89 e7             	mov    %r12,%rdi
   1d051:	e8 0a f5 ff ff       	callq  1c560 <camellia_feistel>
   1d056:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1d05a:	4c 89 e2             	mov    %r12,%rdx
   1d05d:	48 89 ef             	mov    %rbp,%rdi
   1d060:	e8 fb f4 ff ff       	callq  1c560 <camellia_feistel>
   1d065:	48 8d 73 10          	lea    0x10(%rbx),%rsi
   1d069:	48 89 ea             	mov    %rbp,%rdx
   1d06c:	4c 89 e7             	mov    %r12,%rdi
   1d06f:	e8 ec f4 ff ff       	callq  1c560 <camellia_feistel>
   1d074:	48 8d 73 18          	lea    0x18(%rbx),%rsi
   1d078:	4c 89 e2             	mov    %r12,%rdx
   1d07b:	48 89 ef             	mov    %rbp,%rdi
   1d07e:	e8 dd f4 ff ff       	callq  1c560 <camellia_feistel>
   1d083:	48 8d 73 20          	lea    0x20(%rbx),%rsi
   1d087:	48 89 ea             	mov    %rbp,%rdx
   1d08a:	4c 89 e7             	mov    %r12,%rdi
   1d08d:	e8 ce f4 ff ff       	callq  1c560 <camellia_feistel>
   1d092:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   1d096:	4c 89 e2             	mov    %r12,%rdx
   1d099:	48 89 ef             	mov    %rbp,%rdi
   1d09c:	e8 bf f4 ff ff       	callq  1c560 <camellia_feistel>
   1d0a1:	4c 39 f3             	cmp    %r14,%rbx
   1d0a4:	74 4a                	je     1d0f0 <mbedtls_camellia_crypt_ecb+0x140>
   1d0a6:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d0aa:	8b 43 30             	mov    0x30(%rbx),%eax
   1d0ad:	48 83 c3 40          	add    $0x40,%rbx
   1d0b1:	21 d0                	and    %edx,%eax
   1d0b3:	d1 c0                	rol    %eax
   1d0b5:	33 44 24 14          	xor    0x14(%rsp),%eax
   1d0b9:	89 44 24 14          	mov    %eax,0x14(%rsp)
   1d0bd:	0b 43 f4             	or     -0xc(%rbx),%eax
   1d0c0:	31 d0                	xor    %edx,%eax
   1d0c2:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
   1d0c6:	89 44 24 10          	mov    %eax,0x10(%rsp)
   1d0ca:	8b 43 fc             	mov    -0x4(%rbx),%eax
   1d0cd:	09 d0                	or     %edx,%eax
   1d0cf:	33 44 24 18          	xor    0x18(%rsp),%eax
   1d0d3:	89 44 24 18          	mov    %eax,0x18(%rsp)
   1d0d7:	23 43 f8             	and    -0x8(%rbx),%eax
   1d0da:	d1 c0                	rol    %eax
   1d0dc:	31 d0                	xor    %edx,%eax
   1d0de:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1d0e2:	e9 61 ff ff ff       	jmpq   1d048 <mbedtls_camellia_crypt_ecb+0x98>
   1d0e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d0ee:	00 00 
   1d0f0:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1d0f4:	8b 74 24 18          	mov    0x18(%rsp),%esi
   1d0f8:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   1d0fc:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d100:	48 c1 e0 06          	shl    $0x6,%rax
   1d104:	4d 8d 6c 05 30       	lea    0x30(%r13,%rax,1),%r13
   1d109:	8b 44 24 14          	mov    0x14(%rsp),%eax
   1d10d:	41 33 4d 04          	xor    0x4(%r13),%ecx
   1d111:	41 33 55 08          	xor    0x8(%r13),%edx
   1d115:	41 33 75 00          	xor    0x0(%r13),%esi
   1d119:	41 33 45 0c          	xor    0xc(%r13),%eax
   1d11d:	0f c9                	bswap  %ecx
   1d11f:	0f ca                	bswap  %edx
   1d121:	0f ce                	bswap  %esi
   1d123:	41 89 4f 04          	mov    %ecx,0x4(%r15)
   1d127:	0f c8                	bswap  %eax
   1d129:	41 89 37             	mov    %esi,(%r15)
   1d12c:	41 89 57 08          	mov    %edx,0x8(%r15)
   1d130:	41 89 47 0c          	mov    %eax,0xc(%r15)
   1d134:	31 c0                	xor    %eax,%eax
   1d136:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1d13b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1d142:	00 00 
   1d144:	75 16                	jne    1d15c <mbedtls_camellia_crypt_ecb+0x1ac>
   1d146:	48 83 c4 38          	add    $0x38,%rsp
   1d14a:	5b                   	pop    %rbx
   1d14b:	5d                   	pop    %rbp
   1d14c:	41 5c                	pop    %r12
   1d14e:	41 5d                	pop    %r13
   1d150:	41 5e                	pop    %r14
   1d152:	41 5f                	pop    %r15
   1d154:	c3                   	retq   
   1d155:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1d15a:	eb da                	jmp    1d136 <mbedtls_camellia_crypt_ecb+0x186>
   1d15c:	e8 ff 60 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1d161:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1d168:	00 00 00 00 
   1d16c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d170 <mbedtls_camellia_crypt_cbc>:
   1d170:	f3 0f 1e fa          	endbr64 
   1d174:	83 fe 01             	cmp    $0x1,%esi
   1d177:	0f 87 f1 00 00 00    	ja     1d26e <mbedtls_camellia_crypt_cbc+0xfe>
   1d17d:	f6 c2 0f             	test   $0xf,%dl
   1d180:	0f 85 ee 00 00 00    	jne    1d274 <mbedtls_camellia_crypt_cbc+0x104>
   1d186:	41 56                	push   %r14
   1d188:	41 55                	push   %r13
   1d18a:	49 89 cd             	mov    %rcx,%r13
   1d18d:	41 54                	push   %r12
   1d18f:	49 89 fc             	mov    %rdi,%r12
   1d192:	55                   	push   %rbp
   1d193:	4c 89 c5             	mov    %r8,%rbp
   1d196:	53                   	push   %rbx
   1d197:	4c 89 cb             	mov    %r9,%rbx
   1d19a:	48 83 ec 10          	sub    $0x10,%rsp
   1d19e:	85 f6                	test   %esi,%esi
   1d1a0:	75 66                	jne    1d208 <mbedtls_camellia_crypt_cbc+0x98>
   1d1a2:	48 85 d2             	test   %rdx,%rdx
   1d1a5:	74 4d                	je     1d1f4 <mbedtls_camellia_crypt_cbc+0x84>
   1d1a7:	4d 8d 34 10          	lea    (%r8,%rdx,1),%r14
   1d1ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d1b0:	f3 0f 6f 45 00       	movdqu 0x0(%rbp),%xmm0
   1d1b5:	48 89 d9             	mov    %rbx,%rcx
   1d1b8:	48 89 ea             	mov    %rbp,%rdx
   1d1bb:	31 f6                	xor    %esi,%esi
   1d1bd:	4c 89 e7             	mov    %r12,%rdi
   1d1c0:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1d1c4:	e8 e7 fd ff ff       	callq  1cfb0 <mbedtls_camellia_crypt_ecb>
   1d1c9:	66 0f 6f 04 24       	movdqa (%rsp),%xmm0
   1d1ce:	31 c0                	xor    %eax,%eax
   1d1d0:	41 8b 54 05 00       	mov    0x0(%r13,%rax,1),%edx
   1d1d5:	31 14 03             	xor    %edx,(%rbx,%rax,1)
   1d1d8:	48 83 c0 04          	add    $0x4,%rax
   1d1dc:	48 83 f8 10          	cmp    $0x10,%rax
   1d1e0:	75 ee                	jne    1d1d0 <mbedtls_camellia_crypt_cbc+0x60>
   1d1e2:	48 83 c5 10          	add    $0x10,%rbp
   1d1e6:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
   1d1eb:	48 83 c3 10          	add    $0x10,%rbx
   1d1ef:	4c 39 f5             	cmp    %r14,%rbp
   1d1f2:	75 bc                	jne    1d1b0 <mbedtls_camellia_crypt_cbc+0x40>
   1d1f4:	48 83 c4 10          	add    $0x10,%rsp
   1d1f8:	31 c0                	xor    %eax,%eax
   1d1fa:	5b                   	pop    %rbx
   1d1fb:	5d                   	pop    %rbp
   1d1fc:	41 5c                	pop    %r12
   1d1fe:	41 5d                	pop    %r13
   1d200:	41 5e                	pop    %r14
   1d202:	c3                   	retq   
   1d203:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d208:	4d 8d 34 11          	lea    (%r9,%rdx,1),%r14
   1d20c:	48 85 d2             	test   %rdx,%rdx
   1d20f:	74 e3                	je     1d1f4 <mbedtls_camellia_crypt_cbc+0x84>
   1d211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d218:	31 c0                	xor    %eax,%eax
   1d21a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d220:	8b 54 05 00          	mov    0x0(%rbp,%rax,1),%edx
   1d224:	41 33 54 05 00       	xor    0x0(%r13,%rax,1),%edx
   1d229:	89 14 03             	mov    %edx,(%rbx,%rax,1)
   1d22c:	48 83 c0 04          	add    $0x4,%rax
   1d230:	48 83 f8 10          	cmp    $0x10,%rax
   1d234:	75 ea                	jne    1d220 <mbedtls_camellia_crypt_cbc+0xb0>
   1d236:	48 89 d9             	mov    %rbx,%rcx
   1d239:	48 89 da             	mov    %rbx,%rdx
   1d23c:	be 01 00 00 00       	mov    $0x1,%esi
   1d241:	4c 89 e7             	mov    %r12,%rdi
   1d244:	e8 67 fd ff ff       	callq  1cfb0 <mbedtls_camellia_crypt_ecb>
   1d249:	f3 0f 6f 0b          	movdqu (%rbx),%xmm1
   1d24d:	48 83 c3 10          	add    $0x10,%rbx
   1d251:	48 83 c5 10          	add    $0x10,%rbp
   1d255:	41 0f 11 4d 00       	movups %xmm1,0x0(%r13)
   1d25a:	4c 39 f3             	cmp    %r14,%rbx
   1d25d:	75 b9                	jne    1d218 <mbedtls_camellia_crypt_cbc+0xa8>
   1d25f:	48 83 c4 10          	add    $0x10,%rsp
   1d263:	31 c0                	xor    %eax,%eax
   1d265:	5b                   	pop    %rbx
   1d266:	5d                   	pop    %rbp
   1d267:	41 5c                	pop    %r12
   1d269:	41 5d                	pop    %r13
   1d26b:	41 5e                	pop    %r14
   1d26d:	c3                   	retq   
   1d26e:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1d273:	c3                   	retq   
   1d274:	b8 da ff ff ff       	mov    $0xffffffda,%eax
   1d279:	c3                   	retq   
   1d27a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001d280 <mbedtls_camellia_crypt_cfb128>:
   1d280:	f3 0f 1e fa          	endbr64 
   1d284:	41 57                	push   %r15
   1d286:	41 56                	push   %r14
   1d288:	41 55                	push   %r13
   1d28a:	41 54                	push   %r12
   1d28c:	55                   	push   %rbp
   1d28d:	53                   	push   %rbx
   1d28e:	48 83 ec 18          	sub    $0x18,%rsp
   1d292:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1d297:	83 fe 01             	cmp    $0x1,%esi
   1d29a:	0f 87 f5 00 00 00    	ja     1d395 <mbedtls_camellia_crypt_cfb128+0x115>
   1d2a0:	48 8b 19             	mov    (%rcx),%rbx
   1d2a3:	49 89 cd             	mov    %rcx,%r13
   1d2a6:	48 83 fb 0f          	cmp    $0xf,%rbx
   1d2aa:	0f 87 e5 00 00 00    	ja     1d395 <mbedtls_camellia_crypt_cfb128+0x115>
   1d2b0:	49 89 ff             	mov    %rdi,%r15
   1d2b3:	4d 89 c6             	mov    %r8,%r14
   1d2b6:	4c 89 cd             	mov    %r9,%rbp
   1d2b9:	85 f6                	test   %esi,%esi
   1d2bb:	75 63                	jne    1d320 <mbedtls_camellia_crypt_cfb128+0xa0>
   1d2bd:	48 85 d2             	test   %rdx,%rdx
   1d2c0:	0f 84 ba 00 00 00    	je     1d380 <mbedtls_camellia_crypt_cfb128+0x100>
   1d2c6:	4d 8d 04 11          	lea    (%r9,%rdx,1),%r8
   1d2ca:	eb 30                	jmp    1d2fc <mbedtls_camellia_crypt_cfb128+0x7c>
   1d2cc:	0f 1f 40 00          	nopl   0x0(%rax)
   1d2d0:	49 8d 04 1e          	lea    (%r14,%rbx,1),%rax
   1d2d4:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   1d2d8:	48 83 c5 01          	add    $0x1,%rbp
   1d2dc:	49 83 c4 01          	add    $0x1,%r12
   1d2e0:	0f b6 08             	movzbl (%rax),%ecx
   1d2e3:	48 83 c3 01          	add    $0x1,%rbx
   1d2e7:	83 e3 0f             	and    $0xf,%ebx
   1d2ea:	31 d1                	xor    %edx,%ecx
   1d2ec:	41 88 4c 24 ff       	mov    %cl,-0x1(%r12)
   1d2f1:	88 10                	mov    %dl,(%rax)
   1d2f3:	4c 39 c5             	cmp    %r8,%rbp
   1d2f6:	0f 84 84 00 00 00    	je     1d380 <mbedtls_camellia_crypt_cfb128+0x100>
   1d2fc:	48 85 db             	test   %rbx,%rbx
   1d2ff:	75 cf                	jne    1d2d0 <mbedtls_camellia_crypt_cfb128+0x50>
   1d301:	4c 89 f1             	mov    %r14,%rcx
   1d304:	4c 89 f2             	mov    %r14,%rdx
   1d307:	be 01 00 00 00       	mov    $0x1,%esi
   1d30c:	4c 89 ff             	mov    %r15,%rdi
   1d30f:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1d314:	e8 97 fc ff ff       	callq  1cfb0 <mbedtls_camellia_crypt_ecb>
   1d319:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1d31e:	eb b0                	jmp    1d2d0 <mbedtls_camellia_crypt_cfb128+0x50>
   1d320:	4d 8d 0c 11          	lea    (%r9,%rdx,1),%r9
   1d324:	48 85 d2             	test   %rdx,%rdx
   1d327:	75 2c                	jne    1d355 <mbedtls_camellia_crypt_cfb128+0xd5>
   1d329:	eb 55                	jmp    1d380 <mbedtls_camellia_crypt_cfb128+0x100>
   1d32b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d330:	49 8d 14 1e          	lea    (%r14,%rbx,1),%rdx
   1d334:	48 83 c5 01          	add    $0x1,%rbp
   1d338:	49 83 c4 01          	add    $0x1,%r12
   1d33c:	48 83 c3 01          	add    $0x1,%rbx
   1d340:	0f b6 02             	movzbl (%rdx),%eax
   1d343:	32 45 ff             	xor    -0x1(%rbp),%al
   1d346:	83 e3 0f             	and    $0xf,%ebx
   1d349:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   1d34e:	88 02                	mov    %al,(%rdx)
   1d350:	4c 39 cd             	cmp    %r9,%rbp
   1d353:	74 2b                	je     1d380 <mbedtls_camellia_crypt_cfb128+0x100>
   1d355:	48 85 db             	test   %rbx,%rbx
   1d358:	75 d6                	jne    1d330 <mbedtls_camellia_crypt_cfb128+0xb0>
   1d35a:	4c 89 f1             	mov    %r14,%rcx
   1d35d:	4c 89 f2             	mov    %r14,%rdx
   1d360:	be 01 00 00 00       	mov    $0x1,%esi
   1d365:	4c 89 ff             	mov    %r15,%rdi
   1d368:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1d36d:	e8 3e fc ff ff       	callq  1cfb0 <mbedtls_camellia_crypt_ecb>
   1d372:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1d377:	eb b7                	jmp    1d330 <mbedtls_camellia_crypt_cfb128+0xb0>
   1d379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d380:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   1d384:	31 c0                	xor    %eax,%eax
   1d386:	48 83 c4 18          	add    $0x18,%rsp
   1d38a:	5b                   	pop    %rbx
   1d38b:	5d                   	pop    %rbp
   1d38c:	41 5c                	pop    %r12
   1d38e:	41 5d                	pop    %r13
   1d390:	41 5e                	pop    %r14
   1d392:	41 5f                	pop    %r15
   1d394:	c3                   	retq   
   1d395:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1d39a:	eb ea                	jmp    1d386 <mbedtls_camellia_crypt_cfb128+0x106>
   1d39c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d3a0 <mbedtls_camellia_crypt_ctr>:
   1d3a0:	f3 0f 1e fa          	endbr64 
   1d3a4:	41 57                	push   %r15
   1d3a6:	41 56                	push   %r14
   1d3a8:	41 55                	push   %r13
   1d3aa:	41 54                	push   %r12
   1d3ac:	55                   	push   %rbp
   1d3ad:	53                   	push   %rbx
   1d3ae:	48 83 ec 28          	sub    $0x28,%rsp
   1d3b2:	48 8b 1a             	mov    (%rdx),%rbx
   1d3b5:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
   1d3ba:	48 83 fb 0f          	cmp    $0xf,%rbx
   1d3be:	0f 87 a8 00 00 00    	ja     1d46c <mbedtls_camellia_crypt_ctr+0xcc>
   1d3c4:	49 89 d6             	mov    %rdx,%r14
   1d3c7:	48 85 f6             	test   %rsi,%rsi
   1d3ca:	0f 84 88 00 00 00    	je     1d458 <mbedtls_camellia_crypt_ctr+0xb8>
   1d3d0:	48 8d 41 0f          	lea    0xf(%rcx),%rax
   1d3d4:	49 89 cd             	mov    %rcx,%r13
   1d3d7:	4d 8d 3c 31          	lea    (%r9,%rsi,1),%r15
   1d3db:	4c 89 cd             	mov    %r9,%rbp
   1d3de:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1d3e3:	eb 24                	jmp    1d409 <mbedtls_camellia_crypt_ctr+0x69>
   1d3e5:	0f 1f 00             	nopl   (%rax)
   1d3e8:	48 83 c5 01          	add    $0x1,%rbp
   1d3ec:	41 0f b6 04 18       	movzbl (%r8,%rbx,1),%eax
   1d3f1:	49 83 c4 01          	add    $0x1,%r12
   1d3f5:	48 83 c3 01          	add    $0x1,%rbx
   1d3f9:	32 45 ff             	xor    -0x1(%rbp),%al
   1d3fc:	83 e3 0f             	and    $0xf,%ebx
   1d3ff:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
   1d404:	49 39 ef             	cmp    %rbp,%r15
   1d407:	74 4f                	je     1d458 <mbedtls_camellia_crypt_ctr+0xb8>
   1d409:	48 85 db             	test   %rbx,%rbx
   1d40c:	75 da                	jne    1d3e8 <mbedtls_camellia_crypt_ctr+0x48>
   1d40e:	4c 89 c1             	mov    %r8,%rcx
   1d411:	4c 89 ea             	mov    %r13,%rdx
   1d414:	be 01 00 00 00       	mov    $0x1,%esi
   1d419:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   1d41e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1d423:	e8 88 fb ff ff       	callq  1cfb0 <mbedtls_camellia_crypt_ecb>
   1d428:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1d42d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1d432:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1d437:	eb 0a                	jmp    1d443 <mbedtls_camellia_crypt_ctr+0xa3>
   1d439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d440:	48 89 c2             	mov    %rax,%rdx
   1d443:	80 02 01             	addb   $0x1,(%rdx)
   1d446:	75 a0                	jne    1d3e8 <mbedtls_camellia_crypt_ctr+0x48>
   1d448:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   1d44c:	49 39 d5             	cmp    %rdx,%r13
   1d44f:	75 ef                	jne    1d440 <mbedtls_camellia_crypt_ctr+0xa0>
   1d451:	eb 95                	jmp    1d3e8 <mbedtls_camellia_crypt_ctr+0x48>
   1d453:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d458:	49 89 1e             	mov    %rbx,(%r14)
   1d45b:	31 c0                	xor    %eax,%eax
   1d45d:	48 83 c4 28          	add    $0x28,%rsp
   1d461:	5b                   	pop    %rbx
   1d462:	5d                   	pop    %rbp
   1d463:	41 5c                	pop    %r12
   1d465:	41 5d                	pop    %r13
   1d467:	41 5e                	pop    %r14
   1d469:	41 5f                	pop    %r15
   1d46b:	c3                   	retq   
   1d46c:	b8 dc ff ff ff       	mov    $0xffffffdc,%eax
   1d471:	eb ea                	jmp    1d45d <mbedtls_camellia_crypt_ctr+0xbd>
   1d473:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1d47a:	00 00 00 00 
   1d47e:	66 90                	xchg   %ax,%ax

000000000001d480 <mbedtls_camellia_self_test>:
   1d480:	f3 0f 1e fa          	endbr64 
   1d484:	41 57                	push   %r15
   1d486:	b9 22 00 00 00       	mov    $0x22,%ecx
   1d48b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1d48f:	41 56                	push   %r14
   1d491:	41 55                	push   %r13
   1d493:	41 54                	push   %r12
   1d495:	55                   	push   %rbp
   1d496:	53                   	push   %rbx
   1d497:	48 81 ec 38 02 00 00 	sub    $0x238,%rsp
   1d49e:	89 7c 24 30          	mov    %edi,0x30(%rsp)
   1d4a2:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
   1d4a7:	4c 8d bc 24 e0 01 00 	lea    0x1e0(%rsp),%r15
   1d4ae:	00 
   1d4af:	4c 89 f7             	mov    %r14,%rdi
   1d4b2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d4b9:	00 00 
   1d4bb:	48 89 84 24 28 02 00 	mov    %rax,0x228(%rsp)
   1d4c2:	00 
   1d4c3:	31 c0                	xor    %eax,%eax
   1d4c5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   1d4cc:	00 
   1d4cd:	0f 29 84 24 c0 01 00 	movaps %xmm0,0x1c0(%rsp)
   1d4d4:	00 
   1d4d5:	0f 29 84 24 d0 01 00 	movaps %xmm0,0x1d0(%rsp)
   1d4dc:	00 
   1d4dd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1d4e0:	48 8d 84 24 c0 01 00 	lea    0x1c0(%rsp),%rax
   1d4e7:	00 
   1d4e8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d4ed:	48 8d 84 24 70 01 00 	lea    0x170(%rsp),%rax
   1d4f4:	00 
   1d4f5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d4fa:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   1d501:	00 
   1d502:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1d507:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1d50d:	8b 44 24 10          	mov    0x10(%rsp),%eax
   1d511:	89 c3                	mov    %eax,%ebx
   1d513:	83 e0 01             	and    $0x1,%eax
   1d516:	41 89 c5             	mov    %eax,%r13d
   1d519:	8b 44 24 30          	mov    0x30(%rsp),%eax
   1d51d:	d1 fb                	sar    %ebx
   1d51f:	8d 6b 02             	lea    0x2(%rbx),%ebp
   1d522:	85 c0                	test   %eax,%eax
   1d524:	74 2d                	je     1d553 <mbedtls_camellia_self_test+0xd3>
   1d526:	45 85 ed             	test   %r13d,%r13d
   1d529:	48 8d 05 ce 3b 00 00 	lea    0x3bce(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   1d530:	89 ea                	mov    %ebp,%edx
   1d532:	bf 01 00 00 00       	mov    $0x1,%edi
   1d537:	48 8d 0d 9b 3b 00 00 	lea    0x3b9b(%rip),%rcx        # 210d9 <_IO_stdin_used+0xd9>
   1d53e:	48 8d 35 7b 84 00 00 	lea    0x847b(%rip),%rsi        # 259c0 <small_prime+0x2a0>
   1d545:	48 0f 44 c8          	cmove  %rax,%rcx
   1d549:	c1 e2 06             	shl    $0x6,%edx
   1d54c:	31 c0                	xor    %eax,%eax
   1d54e:	e8 ed 5d fe ff       	callq  3340 <__printf_chk@plt>
   1d553:	8d 04 ed 00 00 00 00 	lea    0x0(,%rbp,8),%eax
   1d55a:	48 63 db             	movslq %ebx,%rbx
   1d55d:	c1 e5 06             	shl    $0x6,%ebp
   1d560:	4c 8d 25 39 88 00 00 	lea    0x8839(%rip),%r12        # 25da0 <camellia_test_ecb_plain>
   1d567:	48 98                	cltq   
   1d569:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
   1d56d:	48 89 dd             	mov    %rbx,%rbp
   1d570:	48 c1 e3 05          	shl    $0x5,%rbx
   1d574:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d579:	48 c1 e5 06          	shl    $0x6,%rbp
   1d57d:	48 8d 05 3c 88 00 00 	lea    0x883c(%rip),%rax        # 25dc0 <camellia_test_ecb_key>
   1d584:	48 01 c5             	add    %rax,%rbp
   1d587:	48 8d 05 b2 87 00 00 	lea    0x87b2(%rip),%rax        # 25d40 <camellia_test_ecb_cipher>
   1d58e:	48 01 c3             	add    %rax,%rbx
   1d591:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1d596:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1d59b:	48 89 ee             	mov    %rbp,%rsi
   1d59e:	b9 20 00 00 00       	mov    $0x20,%ecx
   1d5a3:	e8 38 5d fe ff       	callq  32e0 <__memcpy_chk@plt>
   1d5a8:	8b 54 24 34          	mov    0x34(%rsp),%edx
   1d5ac:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1d5b1:	4c 89 f7             	mov    %r14,%rdi
   1d5b4:	45 85 ed             	test   %r13d,%r13d
   1d5b7:	0f 85 23 04 00 00    	jne    1d9e0 <mbedtls_camellia_self_test+0x560>
   1d5bd:	e8 ce f8 ff ff       	callq  1ce90 <mbedtls_camellia_setkey_dec>
   1d5c2:	66 0f 6f 0b          	movdqa (%rbx),%xmm1
   1d5c6:	66 41 0f 6f 14 24    	movdqa (%r12),%xmm2
   1d5cc:	0f 29 8c 24 70 01 00 	movaps %xmm1,0x170(%rsp)
   1d5d3:	00 
   1d5d4:	0f 29 94 24 80 01 00 	movaps %xmm2,0x180(%rsp)
   1d5db:	00 
   1d5dc:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1d5e1:	4c 89 f9             	mov    %r15,%rcx
   1d5e4:	44 89 ee             	mov    %r13d,%esi
   1d5e7:	4c 89 f7             	mov    %r14,%rdi
   1d5ea:	e8 c1 f9 ff ff       	callq  1cfb0 <mbedtls_camellia_crypt_ecb>
   1d5ef:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1d5f4:	49 8b 07             	mov    (%r15),%rax
   1d5f7:	49 8b 57 08          	mov    0x8(%r15),%rdx
   1d5fb:	48 33 01             	xor    (%rcx),%rax
   1d5fe:	48 33 51 08          	xor    0x8(%rcx),%rdx
   1d602:	48 09 c2             	or     %rax,%rdx
   1d605:	74 59                	je     1d660 <mbedtls_camellia_self_test+0x1e0>
   1d607:	44 8b 64 24 30       	mov    0x30(%rsp),%r12d
   1d60c:	c7 44 24 34 01 00 00 	movl   $0x1,0x34(%rsp)
   1d613:	00 
   1d614:	45 85 e4             	test   %r12d,%r12d
   1d617:	0f 85 6b 04 00 00    	jne    1da88 <mbedtls_camellia_self_test+0x608>
   1d61d:	be 14 01 00 00       	mov    $0x114,%esi
   1d622:	4c 89 f7             	mov    %r14,%rdi
   1d625:	e8 f6 7b fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1d62a:	48 8b 84 24 28 02 00 	mov    0x228(%rsp),%rax
   1d631:	00 
   1d632:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1d639:	00 00 
   1d63b:	0f 85 0e 05 00 00    	jne    1db4f <mbedtls_camellia_self_test+0x6cf>
   1d641:	8b 44 24 34          	mov    0x34(%rsp),%eax
   1d645:	48 81 c4 38 02 00 00 	add    $0x238,%rsp
   1d64c:	5b                   	pop    %rbx
   1d64d:	5d                   	pop    %rbp
   1d64e:	41 5c                	pop    %r12
   1d650:	41 5d                	pop    %r13
   1d652:	41 5e                	pop    %r14
   1d654:	41 5f                	pop    %r15
   1d656:	c3                   	retq   
   1d657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d65e:	00 00 
   1d660:	49 83 c4 10          	add    $0x10,%r12
   1d664:	31 d2                	xor    %edx,%edx
   1d666:	48 83 c5 20          	add    $0x20,%rbp
   1d66a:	48 83 c3 10          	add    $0x10,%rbx
   1d66e:	48 8d 05 4b 87 00 00 	lea    0x874b(%rip),%rax        # 25dc0 <camellia_test_ecb_key>
   1d675:	4c 39 e0             	cmp    %r12,%rax
   1d678:	0f 85 13 ff ff ff    	jne    1d591 <mbedtls_camellia_self_test+0x111>
   1d67e:	8b 6c 24 30          	mov    0x30(%rsp),%ebp
   1d682:	89 54 24 28          	mov    %edx,0x28(%rsp)
   1d686:	85 ed                	test   %ebp,%ebp
   1d688:	0f 85 b2 03 00 00    	jne    1da40 <mbedtls_camellia_self_test+0x5c0>
   1d68e:	83 44 24 10 01       	addl   $0x1,0x10(%rsp)
   1d693:	8b 44 24 10          	mov    0x10(%rsp),%eax
   1d697:	83 f8 06             	cmp    $0x6,%eax
   1d69a:	0f 85 6d fe ff ff    	jne    1d50d <mbedtls_camellia_self_test+0x8d>
   1d6a0:	8b 5c 24 30          	mov    0x30(%rsp),%ebx
   1d6a4:	85 db                	test   %ebx,%ebx
   1d6a6:	0f 85 f4 03 00 00    	jne    1daa0 <mbedtls_camellia_self_test+0x620>
   1d6ac:	4c 8d a4 24 90 01 00 	lea    0x190(%rsp),%r12
   1d6b3:	00 
   1d6b4:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
   1d6b9:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1d6be:	4d 89 fc             	mov    %r15,%r12
   1d6c1:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1d6c5:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   1d6ca:	89 c5                	mov    %eax,%ebp
   1d6cc:	83 e0 01             	and    $0x1,%eax
   1d6cf:	d1 fd                	sar    %ebp
   1d6d1:	89 c3                	mov    %eax,%ebx
   1d6d3:	44 8d 7d 02          	lea    0x2(%rbp),%r15d
   1d6d7:	45 89 fa             	mov    %r15d,%r10d
   1d6da:	41 c1 e2 06          	shl    $0x6,%r10d
   1d6de:	45 85 db             	test   %r11d,%r11d
   1d6e1:	74 34                	je     1d717 <mbedtls_camellia_self_test+0x297>
   1d6e3:	85 c0                	test   %eax,%eax
   1d6e5:	44 89 d2             	mov    %r10d,%edx
   1d6e8:	bf 01 00 00 00       	mov    $0x1,%edi
   1d6ed:	44 89 54 24 34       	mov    %r10d,0x34(%rsp)
   1d6f2:	48 8d 05 05 3a 00 00 	lea    0x3a05(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   1d6f9:	48 8d 0d d9 39 00 00 	lea    0x39d9(%rip),%rcx        # 210d9 <_IO_stdin_used+0xd9>
   1d700:	48 0f 44 c8          	cmove  %rax,%rcx
   1d704:	48 8d 35 cf 82 00 00 	lea    0x82cf(%rip),%rsi        # 259da <small_prime+0x2ba>
   1d70b:	31 c0                	xor    %eax,%eax
   1d70d:	e8 2e 5c fe ff       	callq  3340 <__printf_chk@plt>
   1d712:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
   1d717:	48 63 ed             	movslq %ebp,%rbp
   1d71a:	b9 20 00 00 00       	mov    $0x20,%ecx
   1d71f:	44 89 54 24 34       	mov    %r10d,0x34(%rsp)
   1d724:	48 ba 08 09 0a 0b 0c 	movabs $0xf0e0d0c0b0a0908,%rdx
   1d72b:	0d 0e 0f 
   1d72e:	48 b8 00 01 02 03 04 	movabs $0x706050403020100,%rax
   1d735:	05 06 07 
   1d738:	48 89 94 24 78 01 00 	mov    %rdx,0x178(%rsp)
   1d73f:	00 
   1d740:	48 89 ee             	mov    %rbp,%rsi
   1d743:	48 89 94 24 88 01 00 	mov    %rdx,0x188(%rsp)
   1d74a:	00 
   1d74b:	42 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%edx
   1d752:	00 
   1d753:	48 c1 e6 05          	shl    $0x5,%rsi
   1d757:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   1d75c:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1d763:	00 
   1d764:	48 63 d2             	movslq %edx,%rdx
   1d767:	48 89 84 24 80 01 00 	mov    %rax,0x180(%rsp)
   1d76e:	00 
   1d76f:	48 8d 05 6a 85 00 00 	lea    0x856a(%rip),%rax        # 25ce0 <camellia_test_cbc_key>
   1d776:	4c 89 ff             	mov    %r15,%rdi
   1d779:	48 01 c6             	add    %rax,%rsi
   1d77c:	e8 5f 5b fe ff       	callq  32e0 <__memcpy_chk@plt>
   1d781:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
   1d786:	85 db                	test   %ebx,%ebx
   1d788:	44 89 d2             	mov    %r10d,%edx
   1d78b:	0f 85 c7 02 00 00    	jne    1da58 <mbedtls_camellia_self_test+0x5d8>
   1d791:	4c 89 fe             	mov    %r15,%rsi
   1d794:	4c 89 f7             	mov    %r14,%rdi
   1d797:	e8 f4 f6 ff ff       	callq  1ce90 <mbedtls_camellia_setkey_dec>
   1d79c:	48 8d 6c 6d 00       	lea    0x0(%rbp,%rbp,2),%rbp
   1d7a1:	48 8d 05 58 84 00 00 	lea    0x8458(%rip),%rax        # 25c00 <camellia_test_cbc_cipher>
   1d7a8:	48 c1 e5 04          	shl    $0x4,%rbp
   1d7ac:	4c 8d 3d ed 84 00 00 	lea    0x84ed(%rip),%r15        # 25ca0 <camellia_test_cbc_plain>
   1d7b3:	48 01 c5             	add    %rax,%rbp
   1d7b6:	4c 89 e8             	mov    %r13,%rax
   1d7b9:	4d 89 f5             	mov    %r14,%r13
   1d7bc:	49 89 c6             	mov    %rax,%r14
   1d7bf:	85 db                	test   %ebx,%ebx
   1d7c1:	0f 85 49 02 00 00    	jne    1da10 <mbedtls_camellia_self_test+0x590>
   1d7c7:	66 0f 6f ac 24 70 01 	movdqa 0x170(%rsp),%xmm5
   1d7ce:	00 00 
   1d7d0:	66 0f 6f 75 00       	movdqa 0x0(%rbp),%xmm6
   1d7d5:	66 41 0f 6f 3f       	movdqa (%r15),%xmm7
   1d7da:	0f 29 ac 24 90 01 00 	movaps %xmm5,0x190(%rsp)
   1d7e1:	00 
   1d7e2:	0f 29 b4 24 70 01 00 	movaps %xmm6,0x170(%rsp)
   1d7e9:	00 
   1d7ea:	0f 29 bc 24 80 01 00 	movaps %xmm7,0x180(%rsp)
   1d7f1:	00 
   1d7f2:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   1d7f7:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1d7fc:	4d 89 e1             	mov    %r12,%r9
   1d7ff:	89 de                	mov    %ebx,%esi
   1d801:	ba 10 00 00 00       	mov    $0x10,%edx
   1d806:	4c 89 ef             	mov    %r13,%rdi
   1d809:	e8 62 f9 ff ff       	callq  1d170 <mbedtls_camellia_crypt_cbc>
   1d80e:	49 8b 04 24          	mov    (%r12),%rax
   1d812:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   1d817:	49 33 06             	xor    (%r14),%rax
   1d81a:	49 33 56 08          	xor    0x8(%r14),%rdx
   1d81e:	48 09 c2             	or     %rax,%rdx
   1d821:	0f 85 e1 01 00 00    	jne    1da08 <mbedtls_camellia_self_test+0x588>
   1d827:	49 83 c7 10          	add    $0x10,%r15
   1d82b:	48 8d 05 9e 84 00 00 	lea    0x849e(%rip),%rax        # 25cd0 <camellia_test_cbc_plain+0x30>
   1d832:	31 d2                	xor    %edx,%edx
   1d834:	48 83 c5 10          	add    $0x10,%rbp
   1d838:	4c 39 f8             	cmp    %r15,%rax
   1d83b:	75 82                	jne    1d7bf <mbedtls_camellia_self_test+0x33f>
   1d83d:	44 8b 4c 24 30       	mov    0x30(%rsp),%r9d
   1d842:	4c 89 f0             	mov    %r14,%rax
   1d845:	89 54 24 34          	mov    %edx,0x34(%rsp)
   1d849:	4d 89 ee             	mov    %r13,%r14
   1d84c:	49 89 c5             	mov    %rax,%r13
   1d84f:	45 85 c9             	test   %r9d,%r9d
   1d852:	0f 85 18 02 00 00    	jne    1da70 <mbedtls_camellia_self_test+0x5f0>
   1d858:	83 44 24 28 01       	addl   $0x1,0x28(%rsp)
   1d85d:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1d861:	83 f8 06             	cmp    $0x6,%eax
   1d864:	0f 85 57 fe ff ff    	jne    1d6c1 <mbedtls_camellia_self_test+0x241>
   1d86a:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
   1d86f:	4d 89 e7             	mov    %r12,%r15
   1d872:	45 85 c0             	test   %r8d,%r8d
   1d875:	0f 85 c5 02 00 00    	jne    1db40 <mbedtls_camellia_self_test+0x6c0>
   1d87b:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   1d882:	00 
   1d883:	31 ed                	xor    %ebp,%ebp
   1d885:	41 bc 10 00 00 00    	mov    $0x10,%r12d
   1d88b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1d890:	48 8d 84 24 a0 01 00 	lea    0x1a0(%rsp),%rax
   1d897:	00 
   1d898:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d89d:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1d8a2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d8a7:	8b 7c 24 30          	mov    0x30(%rsp),%edi
   1d8ab:	41 89 ed             	mov    %ebp,%r13d
   1d8ae:	89 eb                	mov    %ebp,%ebx
   1d8b0:	41 d1 fd             	sar    %r13d
   1d8b3:	83 e3 01             	and    $0x1,%ebx
   1d8b6:	85 ff                	test   %edi,%edi
   1d8b8:	74 27                	je     1d8e1 <mbedtls_camellia_self_test+0x461>
   1d8ba:	85 db                	test   %ebx,%ebx
   1d8bc:	48 8d 05 3b 38 00 00 	lea    0x383b(%rip),%rax        # 210fe <_IO_stdin_used+0xfe>
   1d8c3:	48 8d 15 0f 38 00 00 	lea    0x380f(%rip),%rdx        # 210d9 <_IO_stdin_used+0xd9>
   1d8ca:	bf 01 00 00 00       	mov    $0x1,%edi
   1d8cf:	48 0f 44 d0          	cmove  %rax,%rdx
   1d8d3:	48 8d 35 1a 81 00 00 	lea    0x811a(%rip),%rsi        # 259f4 <small_prime+0x2d4>
   1d8da:	31 c0                	xor    %eax,%eax
   1d8dc:	e8 5f 5a fe ff       	callq  3340 <__printf_chk@plt>
   1d8e1:	4d 63 ed             	movslq %r13d,%r13
   1d8e4:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1d8e9:	ba 80 00 00 00       	mov    $0x80,%edx
   1d8ee:	48 8d 3d 8b 82 00 00 	lea    0x828b(%rip),%rdi        # 25b80 <camellia_test_ctr_nonce_counter>
   1d8f5:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   1d8fc:	00 00 
   1d8fe:	4c 89 e8             	mov    %r13,%rax
   1d901:	48 c1 e0 04          	shl    $0x4,%rax
   1d905:	66 0f 6f 3c 07       	movdqa (%rdi,%rax,1),%xmm7
   1d90a:	48 8d 3d af 82 00 00 	lea    0x82af(%rip),%rdi        # 25bc0 <camellia_test_ctr_key>
   1d911:	66 0f 6f 14 07       	movdqa (%rdi,%rax,1),%xmm2
   1d916:	4c 89 f7             	mov    %r14,%rdi
   1d919:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   1d91e:	0f 29 bc 24 a0 01 00 	movaps %xmm7,0x1a0(%rsp)
   1d925:	00 
   1d926:	0f 29 94 24 c0 01 00 	movaps %xmm2,0x1c0(%rsp)
   1d92d:	00 
   1d92e:	e8 4d ed ff ff       	callq  1c680 <mbedtls_camellia_setkey_enc>
   1d933:	4f 8d 54 6d 00       	lea    0x0(%r13,%r13,2),%r10
   1d938:	48 8d 05 a1 81 00 00 	lea    0x81a1(%rip),%rax        # 25ae0 <camellia_test_ctr_pt>
   1d93f:	49 c1 e2 04          	shl    $0x4,%r10
   1d943:	4e 8d 1c 10          	lea    (%rax,%r10,1),%r11
   1d947:	48 8d 05 f2 80 00 00 	lea    0x80f2(%rip),%rax        # 25a40 <camellia_test_ctr_ct>
   1d94e:	49 01 c2             	add    %rax,%r10
   1d951:	85 db                	test   %ebx,%ebx
   1d953:	0f 85 57 01 00 00    	jne    1dab0 <mbedtls_camellia_self_test+0x630>
   1d959:	4c 89 d6             	mov    %r10,%rsi
   1d95c:	b9 40 00 00 00       	mov    $0x40,%ecx
   1d961:	4c 89 e2             	mov    %r12,%rdx
   1d964:	4c 89 ff             	mov    %r15,%rdi
   1d967:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1d96c:	e8 6f 59 fe ff       	callq  32e0 <__memcpy_chk@plt>
   1d971:	48 83 ec 08          	sub    $0x8,%rsp
   1d975:	4c 89 e6             	mov    %r12,%rsi
   1d978:	4d 89 f9             	mov    %r15,%r9
   1d97b:	41 57                	push   %r15
   1d97d:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   1d982:	4c 89 f7             	mov    %r14,%rdi
   1d985:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   1d98a:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1d98f:	e8 0c fa ff ff       	callq  1d3a0 <mbedtls_camellia_crypt_ctr>
   1d994:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1d999:	4c 89 e2             	mov    %r12,%rdx
   1d99c:	4c 89 de             	mov    %r11,%rsi
   1d99f:	4c 89 ff             	mov    %r15,%rdi
   1d9a2:	e8 f9 58 fe ff       	callq  32a0 <memcmp@plt>
   1d9a7:	59                   	pop    %rcx
   1d9a8:	5e                   	pop    %rsi
   1d9a9:	85 c0                	test   %eax,%eax
   1d9ab:	0f 85 56 fc ff ff    	jne    1d607 <mbedtls_camellia_self_test+0x187>
   1d9b1:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1d9b5:	85 d2                	test   %edx,%edx
   1d9b7:	0f 85 43 01 00 00    	jne    1db00 <mbedtls_camellia_self_test+0x680>
   1d9bd:	83 c5 01             	add    $0x1,%ebp
   1d9c0:	83 fd 06             	cmp    $0x6,%ebp
   1d9c3:	0f 84 4f 01 00 00    	je     1db18 <mbedtls_camellia_self_test+0x698>
   1d9c9:	89 e8                	mov    %ebp,%eax
   1d9cb:	48 8d 35 4e 80 00 00 	lea    0x804e(%rip),%rsi        # 25a20 <camellia_test_ctr_len>
   1d9d2:	d1 f8                	sar    %eax
   1d9d4:	48 98                	cltq   
   1d9d6:	4c 63 24 86          	movslq (%rsi,%rax,4),%r12
   1d9da:	e9 c8 fe ff ff       	jmpq   1d8a7 <mbedtls_camellia_self_test+0x427>
   1d9df:	90                   	nop
   1d9e0:	e8 9b ec ff ff       	callq  1c680 <mbedtls_camellia_setkey_enc>
   1d9e5:	66 41 0f 6f 1c 24    	movdqa (%r12),%xmm3
   1d9eb:	66 0f 6f 23          	movdqa (%rbx),%xmm4
   1d9ef:	0f 29 9c 24 70 01 00 	movaps %xmm3,0x170(%rsp)
   1d9f6:	00 
   1d9f7:	0f 29 a4 24 80 01 00 	movaps %xmm4,0x180(%rsp)
   1d9fe:	00 
   1d9ff:	e9 d8 fb ff ff       	jmpq   1d5dc <mbedtls_camellia_self_test+0x15c>
   1da04:	0f 1f 40 00          	nopl   0x0(%rax)
   1da08:	4d 89 ee             	mov    %r13,%r14
   1da0b:	e9 f7 fb ff ff       	jmpq   1d607 <mbedtls_camellia_self_test+0x187>
   1da10:	66 0f 6f 84 24 80 01 	movdqa 0x180(%rsp),%xmm0
   1da17:	00 00 
   1da19:	66 41 0f 6f 2f       	movdqa (%r15),%xmm5
   1da1e:	66 0f 6f 75 00       	movdqa 0x0(%rbp),%xmm6
   1da23:	0f 29 84 24 90 01 00 	movaps %xmm0,0x190(%rsp)
   1da2a:	00 
   1da2b:	0f 29 ac 24 70 01 00 	movaps %xmm5,0x170(%rsp)
   1da32:	00 
   1da33:	0f 29 b4 24 80 01 00 	movaps %xmm6,0x180(%rsp)
   1da3a:	00 
   1da3b:	e9 b2 fd ff ff       	jmpq   1d7f2 <mbedtls_camellia_self_test+0x372>
   1da40:	48 8d 3d 9b 57 00 00 	lea    0x579b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1da47:	e8 b4 57 fe ff       	callq  3200 <puts@plt>
   1da4c:	e9 3d fc ff ff       	jmpq   1d68e <mbedtls_camellia_self_test+0x20e>
   1da51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1da58:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1da5d:	4c 89 f7             	mov    %r14,%rdi
   1da60:	e8 1b ec ff ff       	callq  1c680 <mbedtls_camellia_setkey_enc>
   1da65:	e9 32 fd ff ff       	jmpq   1d79c <mbedtls_camellia_self_test+0x31c>
   1da6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1da70:	48 8d 3d 6b 57 00 00 	lea    0x576b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1da77:	e8 84 57 fe ff       	callq  3200 <puts@plt>
   1da7c:	e9 d7 fd ff ff       	jmpq   1d858 <mbedtls_camellia_self_test+0x3d8>
   1da81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1da88:	48 8d 3d 2e 60 00 00 	lea    0x602e(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   1da8f:	e8 6c 57 fe ff       	callq  3200 <puts@plt>
   1da94:	e9 84 fb ff ff       	jmpq   1d61d <mbedtls_camellia_self_test+0x19d>
   1da99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1daa0:	bf 0a 00 00 00       	mov    $0xa,%edi
   1daa5:	e8 46 57 fe ff       	callq  31f0 <putchar@plt>
   1daaa:	e9 fd fb ff ff       	jmpq   1d6ac <mbedtls_camellia_self_test+0x22c>
   1daaf:	90                   	nop
   1dab0:	4c 89 de             	mov    %r11,%rsi
   1dab3:	b9 40 00 00 00       	mov    $0x40,%ecx
   1dab8:	4c 89 e2             	mov    %r12,%rdx
   1dabb:	4c 89 ff             	mov    %r15,%rdi
   1dabe:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1dac3:	e8 18 58 fe ff       	callq  32e0 <__memcpy_chk@plt>
   1dac8:	48 83 ec 08          	sub    $0x8,%rsp
   1dacc:	4c 89 e6             	mov    %r12,%rsi
   1dacf:	4d 89 f9             	mov    %r15,%r9
   1dad2:	41 57                	push   %r15
   1dad4:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   1dad9:	4c 89 f7             	mov    %r14,%rdi
   1dadc:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   1dae1:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1dae6:	e8 b5 f8 ff ff       	callq  1d3a0 <mbedtls_camellia_crypt_ctr>
   1daeb:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1daf0:	4c 89 e2             	mov    %r12,%rdx
   1daf3:	4c 89 d6             	mov    %r10,%rsi
   1daf6:	e9 a4 fe ff ff       	jmpq   1d99f <mbedtls_camellia_self_test+0x51f>
   1dafb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1db00:	48 8d 3d db 56 00 00 	lea    0x56db(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1db07:	83 c5 01             	add    $0x1,%ebp
   1db0a:	e8 f1 56 fe ff       	callq  3200 <puts@plt>
   1db0f:	83 fd 06             	cmp    $0x6,%ebp
   1db12:	0f 85 b1 fe ff ff    	jne    1d9c9 <mbedtls_camellia_self_test+0x549>
   1db18:	8b 44 24 30          	mov    0x30(%rsp),%eax
   1db1c:	85 c0                	test   %eax,%eax
   1db1e:	75 0d                	jne    1db2d <mbedtls_camellia_self_test+0x6ad>
   1db20:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%rsp)
   1db27:	00 
   1db28:	e9 f0 fa ff ff       	jmpq   1d61d <mbedtls_camellia_self_test+0x19d>
   1db2d:	bf 0a 00 00 00       	mov    $0xa,%edi
   1db32:	e8 b9 56 fe ff       	callq  31f0 <putchar@plt>
   1db37:	e9 e1 fa ff ff       	jmpq   1d61d <mbedtls_camellia_self_test+0x19d>
   1db3c:	0f 1f 40 00          	nopl   0x0(%rax)
   1db40:	bf 0a 00 00 00       	mov    $0xa,%edi
   1db45:	e8 a6 56 fe ff       	callq  31f0 <putchar@plt>
   1db4a:	e9 2c fd ff ff       	jmpq   1d87b <mbedtls_camellia_self_test+0x3fb>
   1db4f:	e8 0c 57 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1db54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1db5b:	00 00 00 
   1db5e:	66 90                	xchg   %ax,%ax

000000000001db60 <ccm_calculate_first_block_if_ready>:
   1db60:	53                   	push   %rbx
   1db61:	48 89 fb             	mov    %rdi,%rbx
   1db64:	48 83 ec 10          	sub    $0x10,%rsp
   1db68:	8b bf a4 00 00 00    	mov    0xa4(%rdi),%edi
   1db6e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1db75:	00 00 
   1db77:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1db7c:	31 c0                	xor    %eax,%eax
   1db7e:	89 fa                	mov    %edi,%edx
   1db80:	83 e2 03             	and    $0x3,%edx
   1db83:	83 fa 03             	cmp    $0x3,%edx
   1db86:	0f 85 8b 00 00 00    	jne    1dc17 <ccm_calculate_first_block_if_ready+0xb7>
   1db8c:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
   1db93:	48 85 c0             	test   %rax,%rax
   1db96:	0f 84 94 00 00 00    	je     1dc30 <ccm_calculate_first_block_if_ready+0xd0>
   1db9c:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
   1dba3:	48 83 bb 88 00 00 00 	cmpq   $0x0,0x88(%rbx)
   1dbaa:	00 
   1dbab:	44 0f b6 03          	movzbl (%rbx),%r8d
   1dbaf:	74 04                	je     1dbb5 <ccm_calculate_first_block_if_ready+0x55>
   1dbb1:	41 83 c8 40          	or     $0x40,%r8d
   1dbb5:	48 83 e8 02          	sub    $0x2,%rax
   1dbb9:	0f b6 8b a0 00 00 00 	movzbl 0xa0(%rbx),%ecx
   1dbc0:	48 d1 e8             	shr    %rax
   1dbc3:	c1 e0 03             	shl    $0x3,%eax
   1dbc6:	8d 71 ff             	lea    -0x1(%rcx),%esi
   1dbc9:	44 09 c0             	or     %r8d,%eax
   1dbcc:	09 f0                	or     %esi,%eax
   1dbce:	88 03                	mov    %al,(%rbx)
   1dbd0:	84 c9                	test   %cl,%cl
   1dbd2:	74 23                	je     1dbf7 <ccm_calculate_first_block_if_ready+0x97>
   1dbd4:	48 8d 4b 0e          	lea    0xe(%rbx),%rcx
   1dbd8:	40 0f b6 f6          	movzbl %sil,%esi
   1dbdc:	48 8d 43 0f          	lea    0xf(%rbx),%rax
   1dbe0:	48 29 f1             	sub    %rsi,%rcx
   1dbe3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dbe8:	88 10                	mov    %dl,(%rax)
   1dbea:	48 83 e8 01          	sub    $0x1,%rax
   1dbee:	48 c1 ea 08          	shr    $0x8,%rdx
   1dbf2:	48 39 c8             	cmp    %rcx,%rax
   1dbf5:	75 f1                	jne    1dbe8 <ccm_calculate_first_block_if_ready+0x88>
   1dbf7:	48 85 d2             	test   %rdx,%rdx
   1dbfa:	75 65                	jne    1dc61 <ccm_calculate_first_block_if_ready+0x101>
   1dbfc:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   1dc00:	49 89 e0             	mov    %rsp,%r8
   1dc03:	48 89 d9             	mov    %rbx,%rcx
   1dc06:	ba 10 00 00 00       	mov    $0x10,%edx
   1dc0b:	48 89 de             	mov    %rbx,%rsi
   1dc0e:	e8 3d 84 fe ff       	callq  6050 <mbedtls_cipher_update>
   1dc13:	85 c0                	test   %eax,%eax
   1dc15:	75 41                	jne    1dc58 <ccm_calculate_first_block_if_ready+0xf8>
   1dc17:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1dc1c:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1dc23:	00 00 
   1dc25:	75 51                	jne    1dc78 <ccm_calculate_first_block_if_ready+0x118>
   1dc27:	48 83 c4 10          	add    $0x10,%rsp
   1dc2b:	5b                   	pop    %rbx
   1dc2c:	c3                   	retq   
   1dc2d:	0f 1f 00             	nopl   (%rax)
   1dc30:	0f b6 b3 a1 00 00 00 	movzbl 0xa1(%rbx),%esi
   1dc37:	8d 56 fe             	lea    -0x2(%rsi),%edx
   1dc3a:	80 fa 01             	cmp    $0x1,%dl
   1dc3d:	77 32                	ja     1dc71 <ccm_calculate_first_block_if_ready+0x111>
   1dc3f:	48 c7 83 80 00 00 00 	movq   $0x0,0x80(%rbx)
   1dc46:	00 00 00 00 
   1dc4a:	31 d2                	xor    %edx,%edx
   1dc4c:	e9 52 ff ff ff       	jmpq   1dba3 <ccm_calculate_first_block_if_ready+0x43>
   1dc51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1dc58:	83 8b a4 00 00 00 10 	orl    $0x10,0xa4(%rbx)
   1dc5f:	eb b6                	jmp    1dc17 <ccm_calculate_first_block_if_ready+0xb7>
   1dc61:	83 cf 10             	or     $0x10,%edi
   1dc64:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1dc69:	89 bb a4 00 00 00    	mov    %edi,0xa4(%rbx)
   1dc6f:	eb a6                	jmp    1dc17 <ccm_calculate_first_block_if_ready+0xb7>
   1dc71:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1dc76:	eb 9f                	jmp    1dc17 <ccm_calculate_first_block_if_ready+0xb7>
   1dc78:	e8 e3 55 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1dc7d:	0f 1f 00             	nopl   (%rax)

000000000001dc80 <mbedtls_ccm_crypt>:
   1dc80:	41 57                	push   %r15
   1dc82:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1dc86:	41 56                	push   %r14
   1dc88:	41 55                	push   %r13
   1dc8a:	4d 89 c5             	mov    %r8,%r13
   1dc8d:	41 54                	push   %r12
   1dc8f:	49 89 cc             	mov    %rcx,%r12
   1dc92:	55                   	push   %rbp
   1dc93:	48 89 fd             	mov    %rdi,%rbp
   1dc96:	53                   	push   %rbx
   1dc97:	48 89 d3             	mov    %rdx,%rbx
   1dc9a:	ba 10 00 00 00       	mov    $0x10,%edx
   1dc9f:	48 83 ec 48          	sub    $0x48,%rsp
   1dca3:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1dca8:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1dcad:	48 8d 77 10          	lea    0x10(%rdi),%rsi
   1dcb1:	48 83 c7 20          	add    $0x20,%rdi
   1dcb5:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1dcba:	4c 89 f9             	mov    %r15,%rcx
   1dcbd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dcc4:	00 00 
   1dcc6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1dccb:	31 c0                	xor    %eax,%eax
   1dccd:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1dcd2:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1dcd9:	00 00 
   1dcdb:	e8 70 83 fe ff       	callq  6050 <mbedtls_cipher_update>
   1dce0:	41 89 c6             	mov    %eax,%r14d
   1dce3:	85 c0                	test   %eax,%eax
   1dce5:	0f 85 85 00 00 00    	jne    1dd70 <mbedtls_ccm_crypt+0xf0>
   1dceb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1dcf0:	4c 01 fe             	add    %r15,%rsi
   1dcf3:	48 83 fb 03          	cmp    $0x3,%rbx
   1dcf7:	0f 86 93 00 00 00    	jbe    1dd90 <mbedtls_ccm_crypt+0x110>
   1dcfd:	b9 04 00 00 00       	mov    $0x4,%ecx
   1dd02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1dd08:	41 8b 44 0c fc       	mov    -0x4(%r12,%rcx,1),%eax
   1dd0d:	33 44 0e fc          	xor    -0x4(%rsi,%rcx,1),%eax
   1dd11:	48 89 ca             	mov    %rcx,%rdx
   1dd14:	41 89 44 0d fc       	mov    %eax,-0x4(%r13,%rcx,1)
   1dd19:	48 8d 49 04          	lea    0x4(%rcx),%rcx
   1dd1d:	48 39 cb             	cmp    %rcx,%rbx
   1dd20:	73 e6                	jae    1dd08 <mbedtls_ccm_crypt+0x88>
   1dd22:	48 39 d3             	cmp    %rdx,%rbx
   1dd25:	76 16                	jbe    1dd3d <mbedtls_ccm_crypt+0xbd>
   1dd27:	41 0f b6 04 14       	movzbl (%r12,%rdx,1),%eax
   1dd2c:	32 04 16             	xor    (%rsi,%rdx,1),%al
   1dd2f:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
   1dd34:	48 83 c2 01          	add    $0x1,%rdx
   1dd38:	48 39 d3             	cmp    %rdx,%rbx
   1dd3b:	77 ea                	ja     1dd27 <mbedtls_ccm_crypt+0xa7>
   1dd3d:	be 10 00 00 00       	mov    $0x10,%esi
   1dd42:	4c 89 ff             	mov    %r15,%rdi
   1dd45:	e8 d6 74 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1dd4a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1dd4f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1dd56:	00 00 
   1dd58:	75 3a                	jne    1dd94 <mbedtls_ccm_crypt+0x114>
   1dd5a:	48 83 c4 48          	add    $0x48,%rsp
   1dd5e:	44 89 f0             	mov    %r14d,%eax
   1dd61:	5b                   	pop    %rbx
   1dd62:	5d                   	pop    %rbp
   1dd63:	41 5c                	pop    %r12
   1dd65:	41 5d                	pop    %r13
   1dd67:	41 5e                	pop    %r14
   1dd69:	41 5f                	pop    %r15
   1dd6b:	c3                   	retq   
   1dd6c:	0f 1f 40 00          	nopl   0x0(%rax)
   1dd70:	83 8d a4 00 00 00 10 	orl    $0x10,0xa4(%rbp)
   1dd77:	be 10 00 00 00       	mov    $0x10,%esi
   1dd7c:	4c 89 ff             	mov    %r15,%rdi
   1dd7f:	e8 9c 74 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1dd84:	eb c4                	jmp    1dd4a <mbedtls_ccm_crypt+0xca>
   1dd86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1dd8d:	00 00 00 
   1dd90:	31 d2                	xor    %edx,%edx
   1dd92:	eb 93                	jmp    1dd27 <mbedtls_ccm_crypt+0xa7>
   1dd94:	e8 c7 54 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1dd99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001dda0 <mbedtls_ccm_init>:
   1dda0:	f3 0f 1e fa          	endbr64 
   1dda4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1ddab:	48 89 f9             	mov    %rdi,%rcx
   1ddae:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1ddb2:	31 c0                	xor    %eax,%eax
   1ddb4:	48 c7 87 98 00 00 00 	movq   $0x0,0x98(%rdi)
   1ddbb:	00 00 00 00 
   1ddbf:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1ddc3:	48 29 f9             	sub    %rdi,%rcx
   1ddc6:	81 c1 a8 00 00 00    	add    $0xa8,%ecx
   1ddcc:	c1 e9 03             	shr    $0x3,%ecx
   1ddcf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1ddd2:	c3                   	retq   
   1ddd3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ddda:	00 00 00 00 
   1ddde:	66 90                	xchg   %ax,%ax

000000000001dde0 <mbedtls_ccm_setkey>:
   1dde0:	f3 0f 1e fa          	endbr64 
   1dde4:	41 56                	push   %r14
   1dde6:	49 89 d6             	mov    %rdx,%r14
   1dde9:	ba 01 00 00 00       	mov    $0x1,%edx
   1ddee:	41 55                	push   %r13
   1ddf0:	41 89 cd             	mov    %ecx,%r13d
   1ddf3:	41 54                	push   %r12
   1ddf5:	49 89 fc             	mov    %rdi,%r12
   1ddf8:	89 f7                	mov    %esi,%edi
   1ddfa:	89 ce                	mov    %ecx,%esi
   1ddfc:	55                   	push   %rbp
   1ddfd:	48 83 ec 08          	sub    $0x8,%rsp
   1de01:	e8 ca 7d fe ff       	callq  5bd0 <mbedtls_cipher_info_from_values>
   1de06:	48 85 c0             	test   %rax,%rax
   1de09:	74 55                	je     1de60 <mbedtls_ccm_setkey+0x80>
   1de0b:	83 78 20 10          	cmpl   $0x10,0x20(%rax)
   1de0f:	48 89 c5             	mov    %rax,%rbp
   1de12:	75 4c                	jne    1de60 <mbedtls_ccm_setkey+0x80>
   1de14:	49 83 c4 20          	add    $0x20,%r12
   1de18:	4c 89 e7             	mov    %r12,%rdi
   1de1b:	e8 30 7e fe ff       	callq  5c50 <mbedtls_cipher_free>
   1de20:	48 89 ee             	mov    %rbp,%rsi
   1de23:	4c 89 e7             	mov    %r12,%rdi
   1de26:	e8 85 7e fe ff       	callq  5cb0 <mbedtls_cipher_setup>
   1de2b:	85 c0                	test   %eax,%eax
   1de2d:	74 11                	je     1de40 <mbedtls_ccm_setkey+0x60>
   1de2f:	48 83 c4 08          	add    $0x8,%rsp
   1de33:	5d                   	pop    %rbp
   1de34:	41 5c                	pop    %r12
   1de36:	41 5d                	pop    %r13
   1de38:	41 5e                	pop    %r14
   1de3a:	c3                   	retq   
   1de3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1de40:	48 83 c4 08          	add    $0x8,%rsp
   1de44:	44 89 ea             	mov    %r13d,%edx
   1de47:	4c 89 f6             	mov    %r14,%rsi
   1de4a:	4c 89 e7             	mov    %r12,%rdi
   1de4d:	5d                   	pop    %rbp
   1de4e:	b9 01 00 00 00       	mov    $0x1,%ecx
   1de53:	41 5c                	pop    %r12
   1de55:	41 5d                	pop    %r13
   1de57:	41 5e                	pop    %r14
   1de59:	e9 f2 7e fe ff       	jmpq   5d50 <mbedtls_cipher_setkey>
   1de5e:	66 90                	xchg   %ax,%ax
   1de60:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1de65:	eb c8                	jmp    1de2f <mbedtls_ccm_setkey+0x4f>
   1de67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1de6e:	00 00 

000000000001de70 <mbedtls_ccm_free>:
   1de70:	f3 0f 1e fa          	endbr64 
   1de74:	48 85 ff             	test   %rdi,%rdi
   1de77:	74 1f                	je     1de98 <mbedtls_ccm_free+0x28>
   1de79:	55                   	push   %rbp
   1de7a:	48 89 fd             	mov    %rdi,%rbp
   1de7d:	48 8d 7f 20          	lea    0x20(%rdi),%rdi
   1de81:	e8 ca 7d fe ff       	callq  5c50 <mbedtls_cipher_free>
   1de86:	48 89 ef             	mov    %rbp,%rdi
   1de89:	be a8 00 00 00       	mov    $0xa8,%esi
   1de8e:	5d                   	pop    %rbp
   1de8f:	e9 8c 73 fe ff       	jmpq   5220 <mbedtls_platform_zeroize>
   1de94:	0f 1f 40 00          	nopl   0x0(%rax)
   1de98:	c3                   	retq   
   1de99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001dea0 <mbedtls_ccm_starts>:
   1dea0:	f3 0f 1e fa          	endbr64 
   1dea4:	48 8d 41 f9          	lea    -0x7(%rcx),%rax
   1dea8:	48 83 f8 06          	cmp    $0x6,%rax
   1deac:	0f 87 ee 00 00 00    	ja     1dfa0 <mbedtls_ccm_starts+0x100>
   1deb2:	41 55                	push   %r13
   1deb4:	b8 0f 00 00 00       	mov    $0xf,%eax
   1deb9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1debd:	49 89 d5             	mov    %rdx,%r13
   1dec0:	41 54                	push   %r12
   1dec2:	29 c8                	sub    %ecx,%eax
   1dec4:	48 89 ca             	mov    %rcx,%rdx
   1dec7:	49 89 cc             	mov    %rcx,%r12
   1deca:	55                   	push   %rbp
   1decb:	48 89 fd             	mov    %rdi,%rbp
   1dece:	53                   	push   %rbx
   1decf:	48 8d 5f 10          	lea    0x10(%rdi),%rbx
   1ded3:	48 8d 7f 11          	lea    0x11(%rdi),%rdi
   1ded7:	48 83 ec 08          	sub    $0x8,%rsp
   1dedb:	88 87 8f 00 00 00    	mov    %al,0x8f(%rdi)
   1dee1:	b8 0e 00 00 00       	mov    $0xe,%eax
   1dee6:	29 c8                	sub    %ecx,%eax
   1dee8:	40 88 b7 90 00 00 00 	mov    %sil,0x90(%rdi)
   1deef:	4c 89 ee             	mov    %r13,%rsi
   1def2:	0f 11 47 ff          	movups %xmm0,-0x1(%rdi)
   1def6:	88 47 ff             	mov    %al,-0x1(%rdi)
   1def9:	e8 12 54 fe ff       	callq  3310 <memcpy@plt>
   1defe:	0f b6 8d a0 00 00 00 	movzbl 0xa0(%rbp),%ecx
   1df05:	4a 8d 44 23 01       	lea    0x1(%rbx,%r12,1),%rax
   1df0a:	83 f9 08             	cmp    $0x8,%ecx
   1df0d:	73 21                	jae    1df30 <mbedtls_ccm_starts+0x90>
   1df0f:	f6 c1 04             	test   $0x4,%cl
   1df12:	75 74                	jne    1df88 <mbedtls_ccm_starts+0xe8>
   1df14:	85 c9                	test   %ecx,%ecx
   1df16:	74 3d                	je     1df55 <mbedtls_ccm_starts+0xb5>
   1df18:	c6 00 00             	movb   $0x0,(%rax)
   1df1b:	f6 c1 02             	test   $0x2,%cl
   1df1e:	74 35                	je     1df55 <mbedtls_ccm_starts+0xb5>
   1df20:	31 d2                	xor    %edx,%edx
   1df22:	66 89 54 01 fe       	mov    %dx,-0x2(%rcx,%rax,1)
   1df27:	eb 2c                	jmp    1df55 <mbedtls_ccm_starts+0xb5>
   1df29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1df30:	48 8d 78 08          	lea    0x8(%rax),%rdi
   1df34:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1df3b:	48 c7 44 01 f8 00 00 	movq   $0x0,-0x8(%rcx,%rax,1)
   1df42:	00 00 
   1df44:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1df48:	48 29 f8             	sub    %rdi,%rax
   1df4b:	01 c1                	add    %eax,%ecx
   1df4d:	31 c0                	xor    %eax,%eax
   1df4f:	c1 e9 03             	shr    $0x3,%ecx
   1df52:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1df55:	c6 45 1f 01          	movb   $0x1,0x1f(%rbp)
   1df59:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
   1df5d:	4c 89 e2             	mov    %r12,%rdx
   1df60:	4c 89 ee             	mov    %r13,%rsi
   1df63:	e8 a8 53 fe ff       	callq  3310 <memcpy@plt>
   1df68:	83 8d a4 00 00 00 01 	orl    $0x1,0xa4(%rbp)
   1df6f:	48 83 c4 08          	add    $0x8,%rsp
   1df73:	48 89 ef             	mov    %rbp,%rdi
   1df76:	5b                   	pop    %rbx
   1df77:	5d                   	pop    %rbp
   1df78:	41 5c                	pop    %r12
   1df7a:	41 5d                	pop    %r13
   1df7c:	e9 df fb ff ff       	jmpq   1db60 <ccm_calculate_first_block_if_ready>
   1df81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1df88:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1df8e:	c7 44 01 fc 00 00 00 	movl   $0x0,-0x4(%rcx,%rax,1)
   1df95:	00 
   1df96:	eb bd                	jmp    1df55 <mbedtls_ccm_starts+0xb5>
   1df98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1df9f:	00 
   1dfa0:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1dfa5:	c3                   	retq   
   1dfa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1dfad:	00 00 00 

000000000001dfb0 <mbedtls_ccm_set_lengths>:
   1dfb0:	f3 0f 1e fa          	endbr64 
   1dfb4:	48 83 f9 02          	cmp    $0x2,%rcx
   1dfb8:	74 46                	je     1e000 <mbedtls_ccm_set_lengths+0x50>
   1dfba:	48 83 f9 10          	cmp    $0x10,%rcx
   1dfbe:	77 40                	ja     1e000 <mbedtls_ccm_set_lengths+0x50>
   1dfc0:	48 81 fe ff fe 00 00 	cmp    $0xfeff,%rsi
   1dfc7:	77 37                	ja     1e000 <mbedtls_ccm_set_lengths+0x50>
   1dfc9:	f6 c1 01             	test   $0x1,%cl
   1dfcc:	75 32                	jne    1e000 <mbedtls_ccm_set_lengths+0x50>
   1dfce:	83 8f a4 00 00 00 02 	orl    $0x2,0xa4(%rdi)
   1dfd5:	48 89 97 80 00 00 00 	mov    %rdx,0x80(%rdi)
   1dfdc:	48 89 b7 88 00 00 00 	mov    %rsi,0x88(%rdi)
   1dfe3:	48 89 8f 90 00 00 00 	mov    %rcx,0x90(%rdi)
   1dfea:	48 c7 87 98 00 00 00 	movq   $0x0,0x98(%rdi)
   1dff1:	00 00 00 00 
   1dff5:	e9 66 fb ff ff       	jmpq   1db60 <ccm_calculate_first_block_if_ready>
   1dffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e000:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   1e005:	c3                   	retq   
   1e006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e00d:	00 00 00 

000000000001e010 <mbedtls_ccm_update_ad>:
   1e010:	f3 0f 1e fa          	endbr64 
   1e014:	41 56                	push   %r14
   1e016:	41 55                	push   %r13
   1e018:	41 54                	push   %r12
   1e01a:	55                   	push   %rbp
   1e01b:	53                   	push   %rbx
   1e01c:	48 83 ec 10          	sub    $0x10,%rsp
   1e020:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e027:	00 00 
   1e029:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e02e:	31 c0                	xor    %eax,%eax
   1e030:	8b 87 a4 00 00 00    	mov    0xa4(%rdi),%eax
   1e036:	41 89 c4             	mov    %eax,%r12d
   1e039:	41 83 e4 10          	and    $0x10,%r12d
   1e03d:	0f 85 61 01 00 00    	jne    1e1a4 <mbedtls_ccm_update_ad+0x194>
   1e043:	48 89 d5             	mov    %rdx,%rbp
   1e046:	48 85 d2             	test   %rdx,%rdx
   1e049:	0f 84 e9 00 00 00    	je     1e138 <mbedtls_ccm_update_ad+0x128>
   1e04f:	41 89 c4             	mov    %eax,%r12d
   1e052:	41 83 e4 08          	and    $0x8,%r12d
   1e056:	0f 85 48 01 00 00    	jne    1e1a4 <mbedtls_ccm_update_ad+0x194>
   1e05c:	48 8b 8f 88 00 00 00 	mov    0x88(%rdi),%rcx
   1e063:	49 89 fe             	mov    %rdi,%r14
   1e066:	49 89 f5             	mov    %rsi,%r13
   1e069:	a8 04                	test   $0x4,%al
   1e06b:	0f 85 1f 01 00 00    	jne    1e190 <mbedtls_ccm_update_ad+0x180>
   1e071:	48 39 ca             	cmp    %rcx,%rdx
   1e074:	0f 87 2a 01 00 00    	ja     1e1a4 <mbedtls_ccm_update_ad+0x194>
   1e07a:	83 c8 04             	or     $0x4,%eax
   1e07d:	30 4f 01             	xor    %cl,0x1(%rdi)
   1e080:	48 89 ca             	mov    %rcx,%rdx
   1e083:	89 87 a4 00 00 00    	mov    %eax,0xa4(%rdi)
   1e089:	48 c1 ea 08          	shr    $0x8,%rdx
   1e08d:	30 17                	xor    %dl,(%rdi)
   1e08f:	48 8b 97 98 00 00 00 	mov    0x98(%rdi),%rdx
   1e096:	bb 10 00 00 00       	mov    $0x10,%ebx
   1e09b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e0a0:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
   1e0a4:	48 89 d8             	mov    %rbx,%rax
   1e0a7:	83 e1 0f             	and    $0xf,%ecx
   1e0aa:	48 29 c8             	sub    %rcx,%rax
   1e0ad:	49 8d 3c 0e          	lea    (%r14,%rcx,1),%rdi
   1e0b1:	48 39 e8             	cmp    %rbp,%rax
   1e0b4:	48 0f 47 c5          	cmova  %rbp,%rax
   1e0b8:	48 83 f8 03          	cmp    $0x3,%rax
   1e0bc:	0f 86 c6 00 00 00    	jbe    1e188 <mbedtls_ccm_update_ad+0x178>
   1e0c2:	be 04 00 00 00       	mov    $0x4,%esi
   1e0c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e0ce:	00 00 
   1e0d0:	41 8b 54 35 fc       	mov    -0x4(%r13,%rsi,1),%edx
   1e0d5:	31 54 37 fc          	xor    %edx,-0x4(%rdi,%rsi,1)
   1e0d9:	48 89 f2             	mov    %rsi,%rdx
   1e0dc:	48 8d 76 04          	lea    0x4(%rsi),%rsi
   1e0e0:	48 39 f0             	cmp    %rsi,%rax
   1e0e3:	73 eb                	jae    1e0d0 <mbedtls_ccm_update_ad+0xc0>
   1e0e5:	48 39 d0             	cmp    %rdx,%rax
   1e0e8:	76 13                	jbe    1e0fd <mbedtls_ccm_update_ad+0xed>
   1e0ea:	41 0f b6 74 15 00    	movzbl 0x0(%r13,%rdx,1),%esi
   1e0f0:	40 30 34 17          	xor    %sil,(%rdi,%rdx,1)
   1e0f4:	48 83 c2 01          	add    $0x1,%rdx
   1e0f8:	48 39 d0             	cmp    %rdx,%rax
   1e0fb:	77 ed                	ja     1e0ea <mbedtls_ccm_update_ad+0xda>
   1e0fd:	49 8b 96 98 00 00 00 	mov    0x98(%r14),%rdx
   1e104:	48 29 c5             	sub    %rax,%rbp
   1e107:	49 01 c5             	add    %rax,%r13
   1e10a:	48 01 c2             	add    %rax,%rdx
   1e10d:	48 01 c8             	add    %rcx,%rax
   1e110:	49 89 96 98 00 00 00 	mov    %rdx,0x98(%r14)
   1e117:	48 83 f8 10          	cmp    $0x10,%rax
   1e11b:	74 43                	je     1e160 <mbedtls_ccm_update_ad+0x150>
   1e11d:	49 3b 96 88 00 00 00 	cmp    0x88(%r14),%rdx
   1e124:	74 3a                	je     1e160 <mbedtls_ccm_update_ad+0x150>
   1e126:	48 85 ed             	test   %rbp,%rbp
   1e129:	0f 85 71 ff ff ff    	jne    1e0a0 <mbedtls_ccm_update_ad+0x90>
   1e12f:	49 39 96 88 00 00 00 	cmp    %rdx,0x88(%r14)
   1e136:	74 78                	je     1e1b0 <mbedtls_ccm_update_ad+0x1a0>
   1e138:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1e13d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1e144:	00 00 
   1e146:	0f 85 94 00 00 00    	jne    1e1e0 <mbedtls_ccm_update_ad+0x1d0>
   1e14c:	48 83 c4 10          	add    $0x10,%rsp
   1e150:	44 89 e0             	mov    %r12d,%eax
   1e153:	5b                   	pop    %rbx
   1e154:	5d                   	pop    %rbp
   1e155:	41 5c                	pop    %r12
   1e157:	41 5d                	pop    %r13
   1e159:	41 5e                	pop    %r14
   1e15b:	c3                   	retq   
   1e15c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e160:	49 8d 7e 20          	lea    0x20(%r14),%rdi
   1e164:	49 89 e0             	mov    %rsp,%r8
   1e167:	4c 89 f1             	mov    %r14,%rcx
   1e16a:	ba 10 00 00 00       	mov    $0x10,%edx
   1e16f:	4c 89 f6             	mov    %r14,%rsi
   1e172:	e8 d9 7e fe ff       	callq  6050 <mbedtls_cipher_update>
   1e177:	85 c0                	test   %eax,%eax
   1e179:	75 55                	jne    1e1d0 <mbedtls_ccm_update_ad+0x1c0>
   1e17b:	49 8b 96 98 00 00 00 	mov    0x98(%r14),%rdx
   1e182:	eb a2                	jmp    1e126 <mbedtls_ccm_update_ad+0x116>
   1e184:	0f 1f 40 00          	nopl   0x0(%rax)
   1e188:	31 d2                	xor    %edx,%edx
   1e18a:	e9 5b ff ff ff       	jmpq   1e0ea <mbedtls_ccm_update_ad+0xda>
   1e18f:	90                   	nop
   1e190:	48 8b 97 98 00 00 00 	mov    0x98(%rdi),%rdx
   1e197:	48 8d 04 2a          	lea    (%rdx,%rbp,1),%rax
   1e19b:	48 39 c8             	cmp    %rcx,%rax
   1e19e:	0f 86 f2 fe ff ff    	jbe    1e096 <mbedtls_ccm_update_ad+0x86>
   1e1a4:	41 bc f3 ff ff ff    	mov    $0xfffffff3,%r12d
   1e1aa:	eb 8c                	jmp    1e138 <mbedtls_ccm_update_ad+0x128>
   1e1ac:	0f 1f 40 00          	nopl   0x0(%rax)
   1e1b0:	41 83 8e a4 00 00 00 	orl    $0x8,0xa4(%r14)
   1e1b7:	08 
   1e1b8:	49 c7 86 98 00 00 00 	movq   $0x0,0x98(%r14)
   1e1bf:	00 00 00 00 
   1e1c3:	e9 70 ff ff ff       	jmpq   1e138 <mbedtls_ccm_update_ad+0x128>
   1e1c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e1cf:	00 
   1e1d0:	41 83 8e a4 00 00 00 	orl    $0x10,0xa4(%r14)
   1e1d7:	10 
   1e1d8:	41 89 c4             	mov    %eax,%r12d
   1e1db:	e9 58 ff ff ff       	jmpq   1e138 <mbedtls_ccm_update_ad+0x128>
   1e1e0:	e8 7b 50 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1e1e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e1ec:	00 00 00 00 

000000000001e1f0 <mbedtls_ccm_update>:
   1e1f0:	f3 0f 1e fa          	endbr64 
   1e1f4:	41 57                	push   %r15
   1e1f6:	41 56                	push   %r14
   1e1f8:	41 55                	push   %r13
   1e1fa:	41 54                	push   %r12
   1e1fc:	55                   	push   %rbp
   1e1fd:	53                   	push   %rbx
   1e1fe:	48 83 ec 48          	sub    $0x48,%rsp
   1e202:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e209:	00 00 
   1e20b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e210:	31 c0                	xor    %eax,%eax
   1e212:	8b 87 a4 00 00 00    	mov    0xa4(%rdi),%eax
   1e218:	83 e0 10             	and    $0x10,%eax
   1e21b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1e21f:	0f 85 c9 03 00 00    	jne    1e5ee <mbedtls_ccm_update+0x3fe>
   1e225:	48 89 fd             	mov    %rdi,%rbp
   1e228:	49 89 f5             	mov    %rsi,%r13
   1e22b:	49 89 d6             	mov    %rdx,%r14
   1e22e:	49 89 cb             	mov    %rcx,%r11
   1e231:	48 83 bf 90 00 00 00 	cmpq   $0x0,0x90(%rdi)
   1e238:	00 
   1e239:	0f 85 98 03 00 00    	jne    1e5d7 <mbedtls_ccm_update+0x3e7>
   1e23f:	4d 39 c6             	cmp    %r8,%r14
   1e242:	0f 87 a6 03 00 00    	ja     1e5ee <mbedtls_ccm_update+0x3fe>
   1e248:	4d 89 31             	mov    %r14,(%r9)
   1e24b:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1e250:	4d 85 f6             	test   %r14,%r14
   1e253:	75 46                	jne    1e29b <mbedtls_ccm_update+0xab>
   1e255:	e9 6e 02 00 00       	jmpq   1e4c8 <mbedtls_ccm_update+0x2d8>
   1e25a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e260:	84 c0                	test   %al,%al
   1e262:	0f 84 04 01 00 00    	je     1e36c <mbedtls_ccm_update+0x17c>
   1e268:	49 01 dc             	add    %rbx,%r12
   1e26b:	49 83 fc 10          	cmp    $0x10,%r12
   1e26f:	0f 84 03 02 00 00    	je     1e478 <mbedtls_ccm_update+0x288>
   1e275:	48 8b 95 98 00 00 00 	mov    0x98(%rbp),%rdx
   1e27c:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   1e283:	48 39 c2             	cmp    %rax,%rdx
   1e286:	0f 84 ec 01 00 00    	je     1e478 <mbedtls_ccm_update+0x288>
   1e28c:	49 01 dd             	add    %rbx,%r13
   1e28f:	49 01 db             	add    %rbx,%r11
   1e292:	49 29 de             	sub    %rbx,%r14
   1e295:	0f 84 2d 02 00 00    	je     1e4c8 <mbedtls_ccm_update+0x2d8>
   1e29b:	48 8b 85 98 00 00 00 	mov    0x98(%rbp),%rax
   1e2a2:	bb 10 00 00 00       	mov    $0x10,%ebx
   1e2a7:	49 89 c4             	mov    %rax,%r12
   1e2aa:	41 83 e4 0f          	and    $0xf,%r12d
   1e2ae:	4c 29 e3             	sub    %r12,%rbx
   1e2b1:	4c 39 f3             	cmp    %r14,%rbx
   1e2b4:	49 0f 47 de          	cmova  %r14,%rbx
   1e2b8:	48 01 d8             	add    %rbx,%rax
   1e2bb:	48 89 85 98 00 00 00 	mov    %rax,0x98(%rbp)
   1e2c2:	0f b6 85 a1 00 00 00 	movzbl 0xa1(%rbp),%eax
   1e2c9:	83 e0 fd             	and    $0xfffffffd,%eax
   1e2cc:	3c 01                	cmp    $0x1,%al
   1e2ce:	75 90                	jne    1e260 <mbedtls_ccm_update+0x70>
   1e2d0:	4a 8d 4c 25 00       	lea    0x0(%rbp,%r12,1),%rcx
   1e2d5:	48 83 fb 03          	cmp    $0x3,%rbx
   1e2d9:	0f 86 e1 02 00 00    	jbe    1e5c0 <mbedtls_ccm_update+0x3d0>
   1e2df:	b8 04 00 00 00       	mov    $0x4,%eax
   1e2e4:	0f 1f 40 00          	nopl   0x0(%rax)
   1e2e8:	41 8b 54 05 fc       	mov    -0x4(%r13,%rax,1),%edx
   1e2ed:	31 54 01 fc          	xor    %edx,-0x4(%rcx,%rax,1)
   1e2f1:	48 89 c2             	mov    %rax,%rdx
   1e2f4:	48 8d 40 04          	lea    0x4(%rax),%rax
   1e2f8:	48 39 c3             	cmp    %rax,%rbx
   1e2fb:	73 eb                	jae    1e2e8 <mbedtls_ccm_update+0xf8>
   1e2fd:	48 39 d3             	cmp    %rdx,%rbx
   1e300:	76 12                	jbe    1e314 <mbedtls_ccm_update+0x124>
   1e302:	41 0f b6 44 15 00    	movzbl 0x0(%r13,%rdx,1),%eax
   1e308:	30 04 11             	xor    %al,(%rcx,%rdx,1)
   1e30b:	48 83 c2 01          	add    $0x1,%rdx
   1e30f:	48 39 d3             	cmp    %rdx,%rbx
   1e312:	77 ee                	ja     1e302 <mbedtls_ccm_update+0x112>
   1e314:	49 8d 04 1c          	lea    (%r12,%rbx,1),%rax
   1e318:	48 83 f8 10          	cmp    $0x10,%rax
   1e31c:	0f 84 2e 02 00 00    	je     1e550 <mbedtls_ccm_update+0x360>
   1e322:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   1e329:	48 39 85 98 00 00 00 	cmp    %rax,0x98(%rbp)
   1e330:	0f 84 1a 02 00 00    	je     1e550 <mbedtls_ccm_update+0x360>
   1e336:	4d 89 d8             	mov    %r11,%r8
   1e339:	4c 89 e9             	mov    %r13,%rcx
   1e33c:	48 89 da             	mov    %rbx,%rdx
   1e33f:	4c 89 e6             	mov    %r12,%rsi
   1e342:	48 89 ef             	mov    %rbp,%rdi
   1e345:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e349:	e8 32 f9 ff ff       	callq  1dc80 <mbedtls_ccm_crypt>
   1e34e:	85 c0                	test   %eax,%eax
   1e350:	0f 85 c1 02 00 00    	jne    1e617 <mbedtls_ccm_update+0x427>
   1e356:	0f b6 85 a1 00 00 00 	movzbl 0xa1(%rbp),%eax
   1e35d:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e361:	83 e0 fd             	and    $0xfffffffd,%eax
   1e364:	84 c0                	test   %al,%al
   1e366:	0f 85 fc fe ff ff    	jne    1e268 <mbedtls_ccm_update+0x78>
   1e36c:	4d 89 f8             	mov    %r15,%r8
   1e36f:	4c 89 e9             	mov    %r13,%rcx
   1e372:	48 89 da             	mov    %rbx,%rdx
   1e375:	4c 89 e6             	mov    %r12,%rsi
   1e378:	48 89 ef             	mov    %rbp,%rdi
   1e37b:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e37f:	e8 fc f8 ff ff       	callq  1dc80 <mbedtls_ccm_crypt>
   1e384:	85 c0                	test   %eax,%eax
   1e386:	0f 85 8b 02 00 00    	jne    1e617 <mbedtls_ccm_update+0x427>
   1e38c:	48 83 fb 03          	cmp    $0x3,%rbx
   1e390:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e394:	4a 8d 4c 25 00       	lea    0x0(%rbp,%r12,1),%rcx
   1e399:	0f 86 31 02 00 00    	jbe    1e5d0 <mbedtls_ccm_update+0x3e0>
   1e39f:	b8 04 00 00 00       	mov    $0x4,%eax
   1e3a4:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
   1e3a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e3b0:	8b 14 06             	mov    (%rsi,%rax,1),%edx
   1e3b3:	31 54 01 fc          	xor    %edx,-0x4(%rcx,%rax,1)
   1e3b7:	48 89 c2             	mov    %rax,%rdx
   1e3ba:	48 8d 40 04          	lea    0x4(%rax),%rax
   1e3be:	48 39 c3             	cmp    %rax,%rbx
   1e3c1:	73 ed                	jae    1e3b0 <mbedtls_ccm_update+0x1c0>
   1e3c3:	48 39 d3             	cmp    %rdx,%rbx
   1e3c6:	76 11                	jbe    1e3d9 <mbedtls_ccm_update+0x1e9>
   1e3c8:	41 0f b6 04 17       	movzbl (%r15,%rdx,1),%eax
   1e3cd:	30 04 11             	xor    %al,(%rcx,%rdx,1)
   1e3d0:	48 83 c2 01          	add    $0x1,%rdx
   1e3d4:	48 39 d3             	cmp    %rdx,%rbx
   1e3d7:	77 ef                	ja     1e3c8 <mbedtls_ccm_update+0x1d8>
   1e3d9:	83 fb 08             	cmp    $0x8,%ebx
   1e3dc:	0f 83 1e 01 00 00    	jae    1e500 <mbedtls_ccm_update+0x310>
   1e3e2:	f6 c3 04             	test   $0x4,%bl
   1e3e5:	0f 85 15 02 00 00    	jne    1e600 <mbedtls_ccm_update+0x410>
   1e3eb:	85 db                	test   %ebx,%ebx
   1e3ed:	74 10                	je     1e3ff <mbedtls_ccm_update+0x20f>
   1e3ef:	41 0f b6 07          	movzbl (%r15),%eax
   1e3f3:	41 88 03             	mov    %al,(%r11)
   1e3f6:	f6 c3 02             	test   $0x2,%bl
   1e3f9:	0f 85 21 02 00 00    	jne    1e620 <mbedtls_ccm_update+0x430>
   1e3ff:	be 10 00 00 00       	mov    $0x10,%esi
   1e404:	4c 89 ff             	mov    %r15,%rdi
   1e407:	49 01 dc             	add    %rbx,%r12
   1e40a:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e40e:	e8 0d 6e fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1e413:	49 83 fc 10          	cmp    $0x10,%r12
   1e417:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e41b:	0f 84 6f 01 00 00    	je     1e590 <mbedtls_ccm_update+0x3a0>
   1e421:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   1e428:	48 39 85 98 00 00 00 	cmp    %rax,0x98(%rbp)
   1e42f:	0f 85 57 fe ff ff    	jne    1e28c <mbedtls_ccm_update+0x9c>
   1e435:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e439:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1e43e:	48 89 e9             	mov    %rbp,%rcx
   1e441:	48 89 ee             	mov    %rbp,%rsi
   1e444:	ba 10 00 00 00       	mov    $0x10,%edx
   1e449:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e44d:	e8 fe 7b fe ff       	callq  6050 <mbedtls_cipher_update>
   1e452:	85 c0                	test   %eax,%eax
   1e454:	0f 85 1f 01 00 00    	jne    1e579 <mbedtls_ccm_update+0x389>
   1e45a:	48 8b 95 98 00 00 00 	mov    0x98(%rbp),%rdx
   1e461:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   1e468:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e46c:	48 39 c2             	cmp    %rax,%rdx
   1e46f:	0f 85 17 fe ff ff    	jne    1e28c <mbedtls_ccm_update+0x9c>
   1e475:	0f 1f 00             	nopl   (%rax)
   1e478:	0f b6 85 a0 00 00 00 	movzbl 0xa0(%rbp),%eax
   1e47f:	84 c0                	test   %al,%al
   1e481:	0f 84 05 fe ff ff    	je     1e28c <mbedtls_ccm_update+0x9c>
   1e487:	83 e8 01             	sub    $0x1,%eax
   1e48a:	48 8d 4d 1e          	lea    0x1e(%rbp),%rcx
   1e48e:	48 8d 55 1f          	lea    0x1f(%rbp),%rdx
   1e492:	0f b6 c0             	movzbl %al,%eax
   1e495:	48 29 c1             	sub    %rax,%rcx
   1e498:	eb 13                	jmp    1e4ad <mbedtls_ccm_update+0x2bd>
   1e49a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e4a0:	48 83 ea 01          	sub    $0x1,%rdx
   1e4a4:	48 39 d1             	cmp    %rdx,%rcx
   1e4a7:	0f 84 df fd ff ff    	je     1e28c <mbedtls_ccm_update+0x9c>
   1e4ad:	80 02 01             	addb   $0x1,(%rdx)
   1e4b0:	74 ee                	je     1e4a0 <mbedtls_ccm_update+0x2b0>
   1e4b2:	49 01 dd             	add    %rbx,%r13
   1e4b5:	49 01 db             	add    %rbx,%r11
   1e4b8:	49 29 de             	sub    %rbx,%r14
   1e4bb:	0f 85 da fd ff ff    	jne    1e29b <mbedtls_ccm_update+0xab>
   1e4c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e4c8:	be 10 00 00 00       	mov    $0x10,%esi
   1e4cd:	4c 89 ff             	mov    %r15,%rdi
   1e4d0:	e8 4b 6d fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1e4d5:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1e4da:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1e4e1:	00 00 
   1e4e3:	0f 85 4a 01 00 00    	jne    1e633 <mbedtls_ccm_update+0x443>
   1e4e9:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1e4ed:	48 83 c4 48          	add    $0x48,%rsp
   1e4f1:	5b                   	pop    %rbx
   1e4f2:	5d                   	pop    %rbp
   1e4f3:	41 5c                	pop    %r12
   1e4f5:	41 5d                	pop    %r13
   1e4f7:	41 5e                	pop    %r14
   1e4f9:	41 5f                	pop    %r15
   1e4fb:	c3                   	retq   
   1e4fc:	0f 1f 40 00          	nopl   0x0(%rax)
   1e500:	49 8b 07             	mov    (%r15),%rax
   1e503:	49 8d 4b 08          	lea    0x8(%r11),%rcx
   1e507:	4c 89 fe             	mov    %r15,%rsi
   1e50a:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   1e50e:	49 89 03             	mov    %rax,(%r11)
   1e511:	89 d8                	mov    %ebx,%eax
   1e513:	49 8b 54 07 f8       	mov    -0x8(%r15,%rax,1),%rdx
   1e518:	49 89 54 03 f8       	mov    %rdx,-0x8(%r11,%rax,1)
   1e51d:	4c 89 d8             	mov    %r11,%rax
   1e520:	48 29 c8             	sub    %rcx,%rax
   1e523:	48 29 c6             	sub    %rax,%rsi
   1e526:	01 d8                	add    %ebx,%eax
   1e528:	83 e0 f8             	and    $0xfffffff8,%eax
   1e52b:	83 f8 08             	cmp    $0x8,%eax
   1e52e:	0f 82 cb fe ff ff    	jb     1e3ff <mbedtls_ccm_update+0x20f>
   1e534:	83 e0 f8             	and    $0xfffffff8,%eax
   1e537:	31 d2                	xor    %edx,%edx
   1e539:	89 d7                	mov    %edx,%edi
   1e53b:	83 c2 08             	add    $0x8,%edx
   1e53e:	4c 8b 04 3e          	mov    (%rsi,%rdi,1),%r8
   1e542:	4c 89 04 39          	mov    %r8,(%rcx,%rdi,1)
   1e546:	39 c2                	cmp    %eax,%edx
   1e548:	72 ef                	jb     1e539 <mbedtls_ccm_update+0x349>
   1e54a:	e9 b0 fe ff ff       	jmpq   1e3ff <mbedtls_ccm_update+0x20f>
   1e54f:	90                   	nop
   1e550:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e554:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1e559:	48 89 e9             	mov    %rbp,%rcx
   1e55c:	48 89 ee             	mov    %rbp,%rsi
   1e55f:	ba 10 00 00 00       	mov    $0x10,%edx
   1e564:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e568:	e8 e3 7a fe ff       	callq  6050 <mbedtls_cipher_update>
   1e56d:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e571:	85 c0                	test   %eax,%eax
   1e573:	0f 84 bd fd ff ff    	je     1e336 <mbedtls_ccm_update+0x146>
   1e579:	83 8d a4 00 00 00 10 	orl    $0x10,0xa4(%rbp)
   1e580:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1e584:	e9 3f ff ff ff       	jmpq   1e4c8 <mbedtls_ccm_update+0x2d8>
   1e589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e590:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e594:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1e599:	48 89 e9             	mov    %rbp,%rcx
   1e59c:	48 89 ee             	mov    %rbp,%rsi
   1e59f:	ba 10 00 00 00       	mov    $0x10,%edx
   1e5a4:	4c 89 1c 24          	mov    %r11,(%rsp)
   1e5a8:	e8 a3 7a fe ff       	callq  6050 <mbedtls_cipher_update>
   1e5ad:	4c 8b 1c 24          	mov    (%rsp),%r11
   1e5b1:	85 c0                	test   %eax,%eax
   1e5b3:	0f 84 bf fe ff ff    	je     1e478 <mbedtls_ccm_update+0x288>
   1e5b9:	eb be                	jmp    1e579 <mbedtls_ccm_update+0x389>
   1e5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e5c0:	31 d2                	xor    %edx,%edx
   1e5c2:	e9 3b fd ff ff       	jmpq   1e302 <mbedtls_ccm_update+0x112>
   1e5c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e5ce:	00 00 
   1e5d0:	31 d2                	xor    %edx,%edx
   1e5d2:	e9 f1 fd ff ff       	jmpq   1e3c8 <mbedtls_ccm_update+0x1d8>
   1e5d7:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
   1e5de:	48 01 d0             	add    %rdx,%rax
   1e5e1:	48 3b 87 80 00 00 00 	cmp    0x80(%rdi),%rax
   1e5e8:	0f 86 51 fc ff ff    	jbe    1e23f <mbedtls_ccm_update+0x4f>
   1e5ee:	c7 44 24 0c f3 ff ff 	movl   $0xfffffff3,0xc(%rsp)
   1e5f5:	ff 
   1e5f6:	e9 da fe ff ff       	jmpq   1e4d5 <mbedtls_ccm_update+0x2e5>
   1e5fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e600:	41 8b 07             	mov    (%r15),%eax
   1e603:	41 89 03             	mov    %eax,(%r11)
   1e606:	89 d8                	mov    %ebx,%eax
   1e608:	41 8b 54 07 fc       	mov    -0x4(%r15,%rax,1),%edx
   1e60d:	41 89 54 03 fc       	mov    %edx,-0x4(%r11,%rax,1)
   1e612:	e9 e8 fd ff ff       	jmpq   1e3ff <mbedtls_ccm_update+0x20f>
   1e617:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1e61b:	e9 a8 fe ff ff       	jmpq   1e4c8 <mbedtls_ccm_update+0x2d8>
   1e620:	89 d8                	mov    %ebx,%eax
   1e622:	41 0f b7 54 07 fe    	movzwl -0x2(%r15,%rax,1),%edx
   1e628:	66 41 89 54 03 fe    	mov    %dx,-0x2(%r11,%rax,1)
   1e62e:	e9 cc fd ff ff       	jmpq   1e3ff <mbedtls_ccm_update+0x20f>
   1e633:	e8 28 4c fe ff       	callq  3260 <__stack_chk_fail@plt>
   1e638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e63f:	00 

000000000001e640 <mbedtls_ccm_finish>:
   1e640:	f3 0f 1e fa          	endbr64 
   1e644:	41 55                	push   %r13
   1e646:	41 54                	push   %r12
   1e648:	55                   	push   %rbp
   1e649:	53                   	push   %rbx
   1e64a:	48 83 ec 08          	sub    $0x8,%rsp
   1e64e:	8b 87 a4 00 00 00    	mov    0xa4(%rdi),%eax
   1e654:	a8 10                	test   $0x10,%al
   1e656:	0f 85 b9 00 00 00    	jne    1e715 <mbedtls_ccm_finish+0xd5>
   1e65c:	48 83 bf 88 00 00 00 	cmpq   $0x0,0x88(%rdi)
   1e663:	00 
   1e664:	48 89 fb             	mov    %rdi,%rbx
   1e667:	48 89 f5             	mov    %rsi,%rbp
   1e66a:	49 89 d4             	mov    %rdx,%r12
   1e66d:	74 08                	je     1e677 <mbedtls_ccm_finish+0x37>
   1e66f:	a8 08                	test   $0x8,%al
   1e671:	0f 84 96 00 00 00    	je     1e70d <mbedtls_ccm_finish+0xcd>
   1e677:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
   1e67e:	48 85 c0             	test   %rax,%rax
   1e681:	75 7d                	jne    1e700 <mbedtls_ccm_finish+0xc0>
   1e683:	0f b6 8b a0 00 00 00 	movzbl 0xa0(%rbx),%ecx
   1e68a:	84 c9                	test   %cl,%cl
   1e68c:	74 1e                	je     1e6ac <mbedtls_ccm_finish+0x6c>
   1e68e:	83 e9 01             	sub    $0x1,%ecx
   1e691:	48 8d 53 1e          	lea    0x1e(%rbx),%rdx
   1e695:	48 8d 43 1f          	lea    0x1f(%rbx),%rax
   1e699:	0f b6 c9             	movzbl %cl,%ecx
   1e69c:	48 29 ca             	sub    %rcx,%rdx
   1e69f:	90                   	nop
   1e6a0:	c6 00 00             	movb   $0x0,(%rax)
   1e6a3:	48 83 e8 01          	sub    $0x1,%rax
   1e6a7:	48 39 d0             	cmp    %rdx,%rax
   1e6aa:	75 f4                	jne    1e6a0 <mbedtls_ccm_finish+0x60>
   1e6ac:	49 89 d8             	mov    %rbx,%r8
   1e6af:	48 89 d9             	mov    %rbx,%rcx
   1e6b2:	ba 10 00 00 00       	mov    $0x10,%edx
   1e6b7:	31 f6                	xor    %esi,%esi
   1e6b9:	48 89 df             	mov    %rbx,%rdi
   1e6bc:	e8 bf f5 ff ff       	callq  1dc80 <mbedtls_ccm_crypt>
   1e6c1:	41 89 c5             	mov    %eax,%r13d
   1e6c4:	85 c0                	test   %eax,%eax
   1e6c6:	75 28                	jne    1e6f0 <mbedtls_ccm_finish+0xb0>
   1e6c8:	48 85 ed             	test   %rbp,%rbp
   1e6cb:	74 0e                	je     1e6db <mbedtls_ccm_finish+0x9b>
   1e6cd:	4c 89 e2             	mov    %r12,%rdx
   1e6d0:	48 89 de             	mov    %rbx,%rsi
   1e6d3:	48 89 ef             	mov    %rbp,%rdi
   1e6d6:	e8 35 4c fe ff       	callq  3310 <memcpy@plt>
   1e6db:	c7 83 a4 00 00 00 00 	movl   $0x0,0xa4(%rbx)
   1e6e2:	00 00 00 
   1e6e5:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1e6e9:	0f 11 03             	movups %xmm0,(%rbx)
   1e6ec:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   1e6f0:	48 83 c4 08          	add    $0x8,%rsp
   1e6f4:	44 89 e8             	mov    %r13d,%eax
   1e6f7:	5b                   	pop    %rbx
   1e6f8:	5d                   	pop    %rbp
   1e6f9:	41 5c                	pop    %r12
   1e6fb:	41 5d                	pop    %r13
   1e6fd:	c3                   	retq   
   1e6fe:	66 90                	xchg   %ax,%ax
   1e700:	48 3b 83 98 00 00 00 	cmp    0x98(%rbx),%rax
   1e707:	0f 84 76 ff ff ff    	je     1e683 <mbedtls_ccm_finish+0x43>
   1e70d:	41 bd f3 ff ff ff    	mov    $0xfffffff3,%r13d
   1e713:	eb db                	jmp    1e6f0 <mbedtls_ccm_finish+0xb0>
   1e715:	41 bd 92 ff ff ff    	mov    $0xffffff92,%r13d
   1e71b:	eb d3                	jmp    1e6f0 <mbedtls_ccm_finish+0xb0>
   1e71d:	0f 1f 00             	nopl   (%rax)

000000000001e720 <ccm_auth_crypt>:
   1e720:	41 57                	push   %r15
   1e722:	41 56                	push   %r14
   1e724:	41 55                	push   %r13
   1e726:	41 54                	push   %r12
   1e728:	49 89 d4             	mov    %rdx,%r12
   1e72b:	48 89 ca             	mov    %rcx,%rdx
   1e72e:	4c 89 c1             	mov    %r8,%rcx
   1e731:	55                   	push   %rbp
   1e732:	4c 89 cd             	mov    %r9,%rbp
   1e735:	53                   	push   %rbx
   1e736:	48 89 fb             	mov    %rdi,%rbx
   1e739:	48 83 ec 18          	sub    $0x18,%rsp
   1e73d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e744:	00 00 
   1e746:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e74b:	31 c0                	xor    %eax,%eax
   1e74d:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
   1e752:	4c 8b 74 24 60       	mov    0x60(%rsp),%r14
   1e757:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15
   1e75c:	e8 3f f7 ff ff       	callq  1dea0 <mbedtls_ccm_starts>
   1e761:	85 c0                	test   %eax,%eax
   1e763:	74 23                	je     1e788 <ccm_auth_crypt+0x68>
   1e765:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1e76a:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1e771:	00 00 
   1e773:	75 6d                	jne    1e7e2 <ccm_auth_crypt+0xc2>
   1e775:	48 83 c4 18          	add    $0x18,%rsp
   1e779:	5b                   	pop    %rbx
   1e77a:	5d                   	pop    %rbp
   1e77b:	41 5c                	pop    %r12
   1e77d:	41 5d                	pop    %r13
   1e77f:	41 5e                	pop    %r14
   1e781:	41 5f                	pop    %r15
   1e783:	c3                   	retq   
   1e784:	0f 1f 40 00          	nopl   0x0(%rax)
   1e788:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   1e78d:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1e792:	4c 89 e2             	mov    %r12,%rdx
   1e795:	48 89 df             	mov    %rbx,%rdi
   1e798:	e8 13 f8 ff ff       	callq  1dfb0 <mbedtls_ccm_set_lengths>
   1e79d:	85 c0                	test   %eax,%eax
   1e79f:	75 c4                	jne    1e765 <ccm_auth_crypt+0x45>
   1e7a1:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1e7a6:	48 89 ee             	mov    %rbp,%rsi
   1e7a9:	48 89 df             	mov    %rbx,%rdi
   1e7ac:	e8 5f f8 ff ff       	callq  1e010 <mbedtls_ccm_update_ad>
   1e7b1:	85 c0                	test   %eax,%eax
   1e7b3:	75 b0                	jne    1e765 <ccm_auth_crypt+0x45>
   1e7b5:	49 89 e1             	mov    %rsp,%r9
   1e7b8:	4d 89 e0             	mov    %r12,%r8
   1e7bb:	4c 89 f1             	mov    %r14,%rcx
   1e7be:	4c 89 e2             	mov    %r12,%rdx
   1e7c1:	4c 89 ee             	mov    %r13,%rsi
   1e7c4:	48 89 df             	mov    %rbx,%rdi
   1e7c7:	e8 24 fa ff ff       	callq  1e1f0 <mbedtls_ccm_update>
   1e7cc:	85 c0                	test   %eax,%eax
   1e7ce:	75 95                	jne    1e765 <ccm_auth_crypt+0x45>
   1e7d0:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   1e7d5:	4c 89 fe             	mov    %r15,%rsi
   1e7d8:	48 89 df             	mov    %rbx,%rdi
   1e7db:	e8 60 fe ff ff       	callq  1e640 <mbedtls_ccm_finish>
   1e7e0:	eb 83                	jmp    1e765 <ccm_auth_crypt+0x45>
   1e7e2:	e8 79 4a fe ff       	callq  3260 <__stack_chk_fail@plt>
   1e7e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e7ee:	00 00 

000000000001e7f0 <ccm_auth_decrypt>:
   1e7f0:	41 55                	push   %r13
   1e7f2:	49 89 d5             	mov    %rdx,%r13
   1e7f5:	41 54                	push   %r12
   1e7f7:	55                   	push   %rbp
   1e7f8:	53                   	push   %rbx
   1e7f9:	48 83 ec 30          	sub    $0x30,%rsp
   1e7fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e804:	00 00 
   1e806:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e80b:	31 c0                	xor    %eax,%eax
   1e80d:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
   1e812:	4c 8b 64 24 68       	mov    0x68(%rsp),%r12
   1e817:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   1e81c:	53                   	push   %rbx
   1e81d:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1e822:	50                   	push   %rax
   1e823:	41 54                	push   %r12
   1e825:	ff 74 24 78          	pushq  0x78(%rsp)
   1e829:	ff 74 24 78          	pushq  0x78(%rsp)
   1e82d:	e8 ee fe ff ff       	callq  1e720 <ccm_auth_crypt>
   1e832:	48 83 c4 30          	add    $0x30,%rsp
   1e836:	85 c0                	test   %eax,%eax
   1e838:	75 2b                	jne    1e865 <ccm_auth_decrypt+0x75>
   1e83a:	48 85 db             	test   %rbx,%rbx
   1e83d:	74 26                	je     1e865 <ccm_auth_decrypt+0x75>
   1e83f:	31 ff                	xor    %edi,%edi
   1e841:	31 f6                	xor    %esi,%esi
   1e843:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e848:	0f b6 4c 35 00       	movzbl 0x0(%rbp,%rsi,1),%ecx
   1e84d:	83 c7 01             	add    $0x1,%edi
   1e850:	32 0c 34             	xor    (%rsp,%rsi,1),%cl
   1e853:	0f b6 c9             	movzbl %cl,%ecx
   1e856:	40 0f b6 f7          	movzbl %dil,%esi
   1e85a:	09 c8                	or     %ecx,%eax
   1e85c:	48 39 f3             	cmp    %rsi,%rbx
   1e85f:	77 e7                	ja     1e848 <ccm_auth_decrypt+0x58>
   1e861:	85 c0                	test   %eax,%eax
   1e863:	75 1b                	jne    1e880 <ccm_auth_decrypt+0x90>
   1e865:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1e86a:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1e871:	00 00 
   1e873:	75 1d                	jne    1e892 <ccm_auth_decrypt+0xa2>
   1e875:	48 83 c4 28          	add    $0x28,%rsp
   1e879:	5b                   	pop    %rbx
   1e87a:	5d                   	pop    %rbp
   1e87b:	41 5c                	pop    %r12
   1e87d:	41 5d                	pop    %r13
   1e87f:	c3                   	retq   
   1e880:	4c 89 ee             	mov    %r13,%rsi
   1e883:	4c 89 e7             	mov    %r12,%rdi
   1e886:	e8 95 69 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1e88b:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
   1e890:	eb d3                	jmp    1e865 <ccm_auth_decrypt+0x75>
   1e892:	e8 c9 49 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1e897:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e89e:	00 00 

000000000001e8a0 <mbedtls_ccm_star_encrypt_and_tag>:
   1e8a0:	f3 0f 1e fa          	endbr64 
   1e8a4:	48 83 ec 10          	sub    $0x10,%rsp
   1e8a8:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8ac:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8b0:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8b4:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8b8:	41 51                	push   %r9
   1e8ba:	4d 89 c1             	mov    %r8,%r9
   1e8bd:	49 89 c8             	mov    %rcx,%r8
   1e8c0:	48 89 d1             	mov    %rdx,%rcx
   1e8c3:	48 89 f2             	mov    %rsi,%rdx
   1e8c6:	be 03 00 00 00       	mov    $0x3,%esi
   1e8cb:	e8 50 fe ff ff       	callq  1e720 <ccm_auth_crypt>
   1e8d0:	48 83 c4 38          	add    $0x38,%rsp
   1e8d4:	c3                   	retq   
   1e8d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e8dc:	00 00 00 00 

000000000001e8e0 <mbedtls_ccm_encrypt_and_tag>:
   1e8e0:	f3 0f 1e fa          	endbr64 
   1e8e4:	48 83 ec 10          	sub    $0x10,%rsp
   1e8e8:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8ec:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8f0:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8f4:	ff 74 24 30          	pushq  0x30(%rsp)
   1e8f8:	41 51                	push   %r9
   1e8fa:	4d 89 c1             	mov    %r8,%r9
   1e8fd:	49 89 c8             	mov    %rcx,%r8
   1e900:	48 89 d1             	mov    %rdx,%rcx
   1e903:	48 89 f2             	mov    %rsi,%rdx
   1e906:	be 01 00 00 00       	mov    $0x1,%esi
   1e90b:	e8 10 fe ff ff       	callq  1e720 <ccm_auth_crypt>
   1e910:	48 83 c4 38          	add    $0x38,%rsp
   1e914:	c3                   	retq   
   1e915:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e91c:	00 00 00 00 

000000000001e920 <mbedtls_ccm_star_auth_decrypt>:
   1e920:	f3 0f 1e fa          	endbr64 
   1e924:	48 83 ec 10          	sub    $0x10,%rsp
   1e928:	ff 74 24 30          	pushq  0x30(%rsp)
   1e92c:	ff 74 24 30          	pushq  0x30(%rsp)
   1e930:	ff 74 24 30          	pushq  0x30(%rsp)
   1e934:	ff 74 24 30          	pushq  0x30(%rsp)
   1e938:	41 51                	push   %r9
   1e93a:	4d 89 c1             	mov    %r8,%r9
   1e93d:	49 89 c8             	mov    %rcx,%r8
   1e940:	48 89 d1             	mov    %rdx,%rcx
   1e943:	48 89 f2             	mov    %rsi,%rdx
   1e946:	be 02 00 00 00       	mov    $0x2,%esi
   1e94b:	e8 a0 fe ff ff       	callq  1e7f0 <ccm_auth_decrypt>
   1e950:	48 83 c4 38          	add    $0x38,%rsp
   1e954:	c3                   	retq   
   1e955:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e95c:	00 00 00 00 

000000000001e960 <mbedtls_ccm_auth_decrypt>:
   1e960:	f3 0f 1e fa          	endbr64 
   1e964:	48 83 ec 10          	sub    $0x10,%rsp
   1e968:	ff 74 24 30          	pushq  0x30(%rsp)
   1e96c:	ff 74 24 30          	pushq  0x30(%rsp)
   1e970:	ff 74 24 30          	pushq  0x30(%rsp)
   1e974:	ff 74 24 30          	pushq  0x30(%rsp)
   1e978:	41 51                	push   %r9
   1e97a:	4d 89 c1             	mov    %r8,%r9
   1e97d:	49 89 c8             	mov    %rcx,%r8
   1e980:	48 89 d1             	mov    %rdx,%rcx
   1e983:	48 89 f2             	mov    %rsi,%rdx
   1e986:	31 f6                	xor    %esi,%esi
   1e988:	e8 63 fe ff ff       	callq  1e7f0 <ccm_auth_decrypt>
   1e98d:	48 83 c4 38          	add    $0x38,%rsp
   1e991:	c3                   	retq   
   1e992:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e999:	00 00 00 00 
   1e99d:	0f 1f 00             	nopl   (%rax)

000000000001e9a0 <mbedtls_ccm_self_test>:
   1e9a0:	f3 0f 1e fa          	endbr64 
   1e9a4:	41 57                	push   %r15
   1e9a6:	b9 15 00 00 00       	mov    $0x15,%ecx
   1e9ab:	be 02 00 00 00       	mov    $0x2,%esi
   1e9b0:	48 8d 15 59 7b 00 00 	lea    0x7b59(%rip),%rdx        # 26510 <key_test_data>
   1e9b7:	41 56                	push   %r14
   1e9b9:	41 55                	push   %r13
   1e9bb:	41 54                	push   %r12
   1e9bd:	55                   	push   %rbp
   1e9be:	53                   	push   %rbx
   1e9bf:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
   1e9c6:	89 7c 24 04          	mov    %edi,0x4(%rsp)
   1e9ca:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1e9cf:	4c 89 ff             	mov    %r15,%rdi
   1e9d2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e9d9:	00 00 
   1e9db:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   1e9e2:	00 
   1e9e3:	31 c0                	xor    %eax,%eax
   1e9e5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1e9e8:	b9 80 00 00 00       	mov    $0x80,%ecx
   1e9ed:	4c 89 ff             	mov    %r15,%rdi
   1e9f0:	e8 eb f3 ff ff       	callq  1dde0 <mbedtls_ccm_setkey>
   1e9f5:	85 c0                	test   %eax,%eax
   1e9f7:	0f 85 fb 01 00 00    	jne    1ebf8 <mbedtls_ccm_self_test+0x258>
   1e9fd:	31 db                	xor    %ebx,%ebx
   1e9ff:	48 8d ac 24 d0 00 00 	lea    0xd0(%rsp),%rbp
   1ea06:	00 
   1ea07:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   1ea0e:	00 
   1ea0f:	8b 74 24 04          	mov    0x4(%rsp),%esi
   1ea13:	85 f6                	test   %esi,%esi
   1ea15:	0f 85 a5 01 00 00    	jne    1ebc0 <mbedtls_ccm_self_test+0x220>
   1ea1b:	48 8d 05 3e 7a 00 00 	lea    0x7a3e(%rip),%rax        # 26460 <msg_len_test_data>
   1ea22:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1ea26:	b9 18 00 00 00       	mov    $0x18,%ecx
   1ea2b:	48 89 ef             	mov    %rbp,%rdi
   1ea2e:	4c 8b 34 d8          	mov    (%rax,%rbx,8),%r14
   1ea32:	48 8d 35 87 7a 00 00 	lea    0x7a87(%rip),%rsi        # 264c0 <msg_test_data>
   1ea39:	0f 29 45 00          	movaps %xmm0,0x0(%rbp)
   1ea3d:	41 0f 29 04 24       	movaps %xmm0,(%r12)
   1ea42:	4c 89 f2             	mov    %r14,%rdx
   1ea45:	41 0f 29 44 24 10    	movaps %xmm0,0x10(%r12)
   1ea4b:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
   1ea52:	00 
   1ea53:	e8 88 48 fe ff       	callq  32e0 <__memcpy_chk@plt>
   1ea58:	48 8d 15 21 7a 00 00 	lea    0x7a21(%rip),%rdx        # 26480 <add_len_test_data>
   1ea5f:	48 83 ec 08          	sub    $0x8,%rsp
   1ea63:	48 8d 05 d6 79 00 00 	lea    0x79d6(%rip),%rax        # 26440 <tag_len_test_data>
   1ea6a:	48 8b 0c da          	mov    (%rdx,%rbx,8),%rcx
   1ea6e:	4c 8b 2c d8          	mov    (%rax,%rbx,8),%r13
   1ea72:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
   1ea76:	4c 89 ff             	mov    %r15,%rdi
   1ea79:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ea7e:	48 8d 15 1b 7a 00 00 	lea    0x7a1b(%rip),%rdx        # 264a0 <iv_len_test_data>
   1ea85:	be 01 00 00 00       	mov    $0x1,%esi
   1ea8a:	4c 8d 0d 4f 7a 00 00 	lea    0x7a4f(%rip),%r9        # 264e0 <ad_test_data>
   1ea91:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1ea96:	4c 8b 04 da          	mov    (%rdx,%rbx,8),%r8
   1ea9a:	4c 89 f2             	mov    %r14,%rdx
   1ea9d:	41 55                	push   %r13
   1ea9f:	50                   	push   %rax
   1eaa0:	41 54                	push   %r12
   1eaa2:	55                   	push   %rbp
   1eaa3:	51                   	push   %rcx
   1eaa4:	48 8d 0d 4d 7a 00 00 	lea    0x7a4d(%rip),%rcx        # 264f8 <iv_test_data>
   1eaab:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   1eab0:	e8 6b fc ff ff       	callq  1e720 <ccm_auth_crypt>
   1eab5:	48 83 c4 30          	add    $0x30,%rsp
   1eab9:	85 c0                	test   %eax,%eax
   1eabb:	0f 85 5f 01 00 00    	jne    1ec20 <mbedtls_ccm_self_test+0x280>
   1eac1:	48 89 de             	mov    %rbx,%rsi
   1eac4:	48 8d 05 15 79 00 00 	lea    0x7915(%rip),%rax        # 263e0 <res_test_data>
   1eacb:	4b 8d 14 2e          	lea    (%r14,%r13,1),%rdx
   1eacf:	4c 89 e7             	mov    %r12,%rdi
   1ead2:	48 c1 e6 05          	shl    $0x5,%rsi
   1ead6:	48 01 c6             	add    %rax,%rsi
   1ead9:	e8 c2 47 fe ff       	callq  32a0 <memcmp@plt>
   1eade:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1eae3:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1eae7:	85 c0                	test   %eax,%eax
   1eae9:	0f 85 31 01 00 00    	jne    1ec20 <mbedtls_ccm_self_test+0x280>
   1eaef:	48 83 ec 08          	sub    $0x8,%rsp
   1eaf3:	0f 29 45 00          	movaps %xmm0,0x0(%rbp)
   1eaf7:	4c 89 f2             	mov    %r14,%rdx
   1eafa:	31 f6                	xor    %esi,%esi
   1eafc:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
   1eb03:	00 
   1eb04:	4c 8d 0d d5 79 00 00 	lea    0x79d5(%rip),%r9        # 264e0 <ad_test_data>
   1eb0b:	48 8d 0d e6 79 00 00 	lea    0x79e6(%rip),%rcx        # 264f8 <iv_test_data>
   1eb12:	4c 89 ff             	mov    %r15,%rdi
   1eb15:	41 55                	push   %r13
   1eb17:	ff 74 24 20          	pushq  0x20(%rsp)
   1eb1b:	55                   	push   %rbp
   1eb1c:	41 54                	push   %r12
   1eb1e:	ff 74 24 40          	pushq  0x40(%rsp)
   1eb22:	e8 c9 fc ff ff       	callq  1e7f0 <ccm_auth_decrypt>
   1eb27:	48 83 c4 30          	add    $0x30,%rsp
   1eb2b:	85 c0                	test   %eax,%eax
   1eb2d:	0f 85 ed 00 00 00    	jne    1ec20 <mbedtls_ccm_self_test+0x280>
   1eb33:	4c 89 f2             	mov    %r14,%rdx
   1eb36:	48 8d 35 83 79 00 00 	lea    0x7983(%rip),%rsi        # 264c0 <msg_test_data>
   1eb3d:	48 89 ef             	mov    %rbp,%rdi
   1eb40:	e8 5b 47 fe ff       	callq  32a0 <memcmp@plt>
   1eb45:	41 89 c5             	mov    %eax,%r13d
   1eb48:	85 c0                	test   %eax,%eax
   1eb4a:	0f 85 d0 00 00 00    	jne    1ec20 <mbedtls_ccm_self_test+0x280>
   1eb50:	8b 54 24 04          	mov    0x4(%rsp),%edx
   1eb54:	85 d2                	test   %edx,%edx
   1eb56:	0f 85 84 00 00 00    	jne    1ebe0 <mbedtls_ccm_self_test+0x240>
   1eb5c:	48 83 c3 01          	add    $0x1,%rbx
   1eb60:	48 83 fb 03          	cmp    $0x3,%rbx
   1eb64:	0f 85 a5 fe ff ff    	jne    1ea0f <mbedtls_ccm_self_test+0x6f>
   1eb6a:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1eb6f:	e8 dc 70 fe ff       	callq  5c50 <mbedtls_cipher_free>
   1eb74:	be a8 00 00 00       	mov    $0xa8,%esi
   1eb79:	4c 89 ff             	mov    %r15,%rdi
   1eb7c:	e8 9f 66 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1eb81:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1eb85:	85 c0                	test   %eax,%eax
   1eb87:	0f 85 83 00 00 00    	jne    1ec10 <mbedtls_ccm_self_test+0x270>
   1eb8d:	45 31 ed             	xor    %r13d,%r13d
   1eb90:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   1eb97:	00 
   1eb98:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1eb9f:	00 00 
   1eba1:	0f 85 b7 00 00 00    	jne    1ec5e <mbedtls_ccm_self_test+0x2be>
   1eba7:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
   1ebae:	44 89 e8             	mov    %r13d,%eax
   1ebb1:	5b                   	pop    %rbx
   1ebb2:	5d                   	pop    %rbp
   1ebb3:	41 5c                	pop    %r12
   1ebb5:	41 5d                	pop    %r13
   1ebb7:	41 5e                	pop    %r14
   1ebb9:	41 5f                	pop    %r15
   1ebbb:	c3                   	retq   
   1ebbc:	0f 1f 40 00          	nopl   0x0(%rax)
   1ebc0:	8d 53 01             	lea    0x1(%rbx),%edx
   1ebc3:	48 8d 35 fa 77 00 00 	lea    0x77fa(%rip),%rsi        # 263c4 <SIGMA_CHARS+0x44>
   1ebca:	bf 01 00 00 00       	mov    $0x1,%edi
   1ebcf:	31 c0                	xor    %eax,%eax
   1ebd1:	e8 6a 47 fe ff       	callq  3340 <__printf_chk@plt>
   1ebd6:	e9 40 fe ff ff       	jmpq   1ea1b <mbedtls_ccm_self_test+0x7b>
   1ebdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ebe0:	48 8d 3d fb 45 00 00 	lea    0x45fb(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1ebe7:	e8 14 46 fe ff       	callq  3200 <puts@plt>
   1ebec:	e9 6b ff ff ff       	jmpq   1eb5c <mbedtls_ccm_self_test+0x1bc>
   1ebf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ebf8:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   1ebfc:	85 ff                	test   %edi,%edi
   1ebfe:	75 40                	jne    1ec40 <mbedtls_ccm_self_test+0x2a0>
   1ec00:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1ec06:	eb 88                	jmp    1eb90 <mbedtls_ccm_self_test+0x1f0>
   1ec08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ec0f:	00 
   1ec10:	bf 0a 00 00 00       	mov    $0xa,%edi
   1ec15:	e8 d6 45 fe ff       	callq  31f0 <putchar@plt>
   1ec1a:	e9 71 ff ff ff       	jmpq   1eb90 <mbedtls_ccm_self_test+0x1f0>
   1ec1f:	90                   	nop
   1ec20:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   1ec24:	85 c9                	test   %ecx,%ecx
   1ec26:	74 d8                	je     1ec00 <mbedtls_ccm_self_test+0x260>
   1ec28:	48 8d 3d 8e 4e 00 00 	lea    0x4e8e(%rip),%rdi        # 23abd <sha1_test_buf+0xbd>
   1ec2f:	e8 cc 45 fe ff       	callq  3200 <puts@plt>
   1ec34:	eb ca                	jmp    1ec00 <mbedtls_ccm_self_test+0x260>
   1ec36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ec3d:	00 00 00 
   1ec40:	48 8d 35 69 77 00 00 	lea    0x7769(%rip),%rsi        # 263b0 <SIGMA_CHARS+0x30>
   1ec47:	bf 01 00 00 00       	mov    $0x1,%edi
   1ec4c:	31 c0                	xor    %eax,%eax
   1ec4e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1ec54:	e8 e7 46 fe ff       	callq  3340 <__printf_chk@plt>
   1ec59:	e9 32 ff ff ff       	jmpq   1eb90 <mbedtls_ccm_self_test+0x1f0>
   1ec5e:	e8 fd 45 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1ec63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ec6a:	00 00 00 
   1ec6d:	0f 1f 00             	nopl   (%rax)

000000000001ec70 <chacha20_block>:
   1ec70:	41 57                	push   %r15
   1ec72:	48 89 f8             	mov    %rdi,%rax
   1ec75:	41 56                	push   %r14
   1ec77:	41 55                	push   %r13
   1ec79:	41 54                	push   %r12
   1ec7b:	55                   	push   %rbp
   1ec7c:	53                   	push   %rbx
   1ec7d:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1ec84:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
   1ec88:	f3 0f 6f 57 10       	movdqu 0x10(%rdi),%xmm2
   1ec8d:	f3 0f 6f 67 20       	movdqu 0x20(%rdi),%xmm4
   1ec92:	f3 0f 6f 70 30       	movdqu 0x30(%rax),%xmm6
   1ec97:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   1ec9c:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1eca1:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
   1eca8:	00 00 
   1ecaa:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   1ecaf:	31 c9                	xor    %ecx,%ecx
   1ecb1:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1ecb6:	8b 54 24 38          	mov    0x38(%rsp),%edx
   1ecba:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
   1ecbf:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1ecc3:	44 8b 34 24          	mov    (%rsp),%r14d
   1ecc7:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   1eccc:	8b 5c 24 44          	mov    0x44(%rsp),%ebx
   1ecd0:	0f 29 14 24          	movaps %xmm2,(%rsp)
   1ecd4:	8b 34 24             	mov    (%rsp),%esi
   1ecd7:	0f 29 64 24 50       	movaps %xmm4,0x50(%rsp)
   1ecdc:	44 8b 44 24 54       	mov    0x54(%rsp),%r8d
   1ece1:	0f 29 24 24          	movaps %xmm4,(%rsp)
   1ece5:	8b 3c 24             	mov    (%rsp),%edi
   1ece8:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1eced:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
   1ecf1:	0f 29 34 24          	movaps %xmm6,(%rsp)
   1ecf5:	8b 04 24             	mov    (%rsp),%eax
   1ecf8:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1ecfc:	44 8b 4c 24 5c       	mov    0x5c(%rsp),%r9d
   1ed01:	48 c7 44 24 18 0a 00 	movq   $0xa,0x18(%rsp)
   1ed08:	00 00 
   1ed0a:	44 8b 64 24 48       	mov    0x48(%rsp),%r12d
   1ed0f:	8b 54 24 68          	mov    0x68(%rsp),%edx
   1ed13:	44 8b 6c 24 58       	mov    0x58(%rsp),%r13d
   1ed18:	44 89 0c 24          	mov    %r9d,(%rsp)
   1ed1c:	8b 6c 24 3c          	mov    0x3c(%rsp),%ebp
   1ed20:	44 8b 5c 24 4c       	mov    0x4c(%rsp),%r11d
   1ed25:	44 8b 7c 24 6c       	mov    0x6c(%rsp),%r15d
   1ed2a:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   1ed2f:	90                   	nop
   1ed30:	41 01 f6             	add    %esi,%r14d
   1ed33:	41 01 da             	add    %ebx,%r10d
   1ed36:	45 01 e1             	add    %r12d,%r9d
   1ed39:	44 31 f0             	xor    %r14d,%eax
   1ed3c:	44 31 d1             	xor    %r10d,%ecx
   1ed3f:	44 31 ca             	xor    %r9d,%edx
   1ed42:	c1 c0 10             	rol    $0x10,%eax
   1ed45:	c1 c1 10             	rol    $0x10,%ecx
   1ed48:	01 c7                	add    %eax,%edi
   1ed4a:	41 01 c8             	add    %ecx,%r8d
   1ed4d:	c1 c2 10             	rol    $0x10,%edx
   1ed50:	31 fe                	xor    %edi,%esi
   1ed52:	44 31 c3             	xor    %r8d,%ebx
   1ed55:	41 01 d5             	add    %edx,%r13d
   1ed58:	c1 c6 0c             	rol    $0xc,%esi
   1ed5b:	c1 c3 0c             	rol    $0xc,%ebx
   1ed5e:	45 31 ec             	xor    %r13d,%r12d
   1ed61:	41 01 f6             	add    %esi,%r14d
   1ed64:	41 01 da             	add    %ebx,%r10d
   1ed67:	41 c1 c4 0c          	rol    $0xc,%r12d
   1ed6b:	44 31 f0             	xor    %r14d,%eax
   1ed6e:	44 31 d1             	xor    %r10d,%ecx
   1ed71:	45 01 e1             	add    %r12d,%r9d
   1ed74:	c1 c0 08             	rol    $0x8,%eax
   1ed77:	c1 c1 08             	rol    $0x8,%ecx
   1ed7a:	44 31 ca             	xor    %r9d,%edx
   1ed7d:	01 c7                	add    %eax,%edi
   1ed7f:	41 01 c8             	add    %ecx,%r8d
   1ed82:	31 fe                	xor    %edi,%esi
   1ed84:	44 31 c3             	xor    %r8d,%ebx
   1ed87:	89 7c 24 10          	mov    %edi,0x10(%rsp)
   1ed8b:	c1 c6 07             	rol    $0x7,%esi
   1ed8e:	c1 c3 07             	rol    $0x7,%ebx
   1ed91:	c1 c2 08             	rol    $0x8,%edx
   1ed94:	44 01 dd             	add    %r11d,%ebp
   1ed97:	89 74 24 14          	mov    %esi,0x14(%rsp)
   1ed9b:	41 01 de             	add    %ebx,%r14d
   1ed9e:	41 31 ef             	xor    %ebp,%r15d
   1eda1:	41 01 d5             	add    %edx,%r13d
   1eda4:	44 89 fe             	mov    %r15d,%esi
   1eda7:	44 8b 3c 24          	mov    (%rsp),%r15d
   1edab:	45 31 ec             	xor    %r13d,%r12d
   1edae:	c1 c6 10             	rol    $0x10,%esi
   1edb1:	41 c1 c4 07          	rol    $0x7,%r12d
   1edb5:	41 01 f7             	add    %esi,%r15d
   1edb8:	45 01 e2             	add    %r12d,%r10d
   1edbb:	45 31 fb             	xor    %r15d,%r11d
   1edbe:	44 89 ff             	mov    %r15d,%edi
   1edc1:	44 31 d0             	xor    %r10d,%eax
   1edc4:	41 c1 c3 0c          	rol    $0xc,%r11d
   1edc8:	c1 c0 10             	rol    $0x10,%eax
   1edcb:	44 01 dd             	add    %r11d,%ebp
   1edce:	31 ee                	xor    %ebp,%esi
   1edd0:	c1 c6 08             	rol    $0x8,%esi
   1edd3:	01 f7                	add    %esi,%edi
   1edd5:	44 31 f6             	xor    %r14d,%esi
   1edd8:	c1 c6 10             	rol    $0x10,%esi
   1eddb:	41 31 fb             	xor    %edi,%r11d
   1edde:	01 c7                	add    %eax,%edi
   1ede0:	41 01 f5             	add    %esi,%r13d
   1ede3:	41 c1 c3 07          	rol    $0x7,%r11d
   1ede7:	44 31 eb             	xor    %r13d,%ebx
   1edea:	c1 c3 0c             	rol    $0xc,%ebx
   1eded:	41 01 de             	add    %ebx,%r14d
   1edf0:	44 31 f6             	xor    %r14d,%esi
   1edf3:	41 89 f7             	mov    %esi,%r15d
   1edf6:	41 c1 c7 08          	rol    $0x8,%r15d
   1edfa:	45 01 fd             	add    %r15d,%r13d
   1edfd:	44 31 eb             	xor    %r13d,%ebx
   1ee00:	c1 c3 07             	rol    $0x7,%ebx
   1ee03:	41 31 fc             	xor    %edi,%r12d
   1ee06:	45 01 d9             	add    %r11d,%r9d
   1ee09:	41 c1 c4 0c          	rol    $0xc,%r12d
   1ee0d:	44 31 c9             	xor    %r9d,%ecx
   1ee10:	45 01 e2             	add    %r12d,%r10d
   1ee13:	c1 c1 10             	rol    $0x10,%ecx
   1ee16:	44 31 d0             	xor    %r10d,%eax
   1ee19:	c1 c0 08             	rol    $0x8,%eax
   1ee1c:	8d 34 07             	lea    (%rdi,%rax,1),%esi
   1ee1f:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   1ee23:	41 31 f4             	xor    %esi,%r12d
   1ee26:	89 34 24             	mov    %esi,(%rsp)
   1ee29:	8b 74 24 14          	mov    0x14(%rsp),%esi
   1ee2d:	01 cf                	add    %ecx,%edi
   1ee2f:	41 c1 c4 07          	rol    $0x7,%r12d
   1ee33:	01 f5                	add    %esi,%ebp
   1ee35:	41 31 fb             	xor    %edi,%r11d
   1ee38:	31 ea                	xor    %ebp,%edx
   1ee3a:	41 c1 c3 0c          	rol    $0xc,%r11d
   1ee3e:	c1 c2 10             	rol    $0x10,%edx
   1ee41:	45 01 d9             	add    %r11d,%r9d
   1ee44:	41 01 d0             	add    %edx,%r8d
   1ee47:	44 31 c9             	xor    %r9d,%ecx
   1ee4a:	44 31 c6             	xor    %r8d,%esi
   1ee4d:	c1 c1 08             	rol    $0x8,%ecx
   1ee50:	c1 c6 0c             	rol    $0xc,%esi
   1ee53:	01 cf                	add    %ecx,%edi
   1ee55:	01 f5                	add    %esi,%ebp
   1ee57:	41 31 fb             	xor    %edi,%r11d
   1ee5a:	31 ea                	xor    %ebp,%edx
   1ee5c:	41 c1 c3 07          	rol    $0x7,%r11d
   1ee60:	c1 c2 08             	rol    $0x8,%edx
   1ee63:	41 01 d0             	add    %edx,%r8d
   1ee66:	44 31 c6             	xor    %r8d,%esi
   1ee69:	c1 c6 07             	rol    $0x7,%esi
   1ee6c:	48 83 6c 24 18 01    	subq   $0x1,0x18(%rsp)
   1ee72:	0f 85 b8 fe ff ff    	jne    1ed30 <chacha20_block+0xc0>
   1ee78:	44 89 4c 24 10       	mov    %r9d,0x10(%rsp)
   1ee7d:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1ee82:	45 03 51 04          	add    0x4(%r9),%r10d
   1ee86:	45 03 31             	add    (%r9),%r14d
   1ee89:	44 89 54 24 34       	mov    %r10d,0x34(%rsp)
   1ee8e:	4d 89 ca             	mov    %r9,%r10
   1ee91:	44 8b 4c 24 10       	mov    0x10(%rsp),%r9d
   1ee96:	45 03 62 18          	add    0x18(%r10),%r12d
   1ee9a:	41 03 7a 20          	add    0x20(%r10),%edi
   1ee9e:	44 89 74 24 30       	mov    %r14d,0x30(%rsp)
   1eea3:	41 03 42 30          	add    0x30(%r10),%eax
   1eea7:	45 03 4a 08          	add    0x8(%r10),%r9d
   1eeab:	44 89 64 24 48       	mov    %r12d,0x48(%rsp)
   1eeb0:	41 03 6a 0c          	add    0xc(%r10),%ebp
   1eeb4:	44 8b 24 24          	mov    (%rsp),%r12d
   1eeb8:	89 7c 24 50          	mov    %edi,0x50(%rsp)
   1eebc:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   1eec1:	41 03 72 10          	add    0x10(%r10),%esi
   1eec5:	41 03 5a 14          	add    0x14(%r10),%ebx
   1eec9:	89 44 24 60          	mov    %eax,0x60(%rsp)
   1eecd:	45 03 5a 1c          	add    0x1c(%r10),%r11d
   1eed1:	45 03 42 24          	add    0x24(%r10),%r8d
   1eed5:	44 89 4c 24 38       	mov    %r9d,0x38(%rsp)
   1eeda:	45 03 6a 28          	add    0x28(%r10),%r13d
   1eede:	45 03 62 2c          	add    0x2c(%r10),%r12d
   1eee2:	89 6c 24 3c          	mov    %ebp,0x3c(%rsp)
   1eee6:	41 03 4a 34          	add    0x34(%r10),%ecx
   1eeea:	89 74 24 40          	mov    %esi,0x40(%rsp)
   1eeee:	89 5c 24 44          	mov    %ebx,0x44(%rsp)
   1eef2:	44 89 5c 24 4c       	mov    %r11d,0x4c(%rsp)
   1eef7:	44 89 44 24 54       	mov    %r8d,0x54(%rsp)
   1eefc:	44 89 6c 24 58       	mov    %r13d,0x58(%rsp)
   1ef01:	44 89 64 24 5c       	mov    %r12d,0x5c(%rsp)
   1ef06:	89 4c 24 64          	mov    %ecx,0x64(%rsp)
   1ef0a:	41 03 52 38          	add    0x38(%r10),%edx
   1ef0e:	45 03 7a 3c          	add    0x3c(%r10),%r15d
   1ef12:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1ef17:	89 54 24 68          	mov    %edx,0x68(%rsp)
   1ef1b:	44 89 7c 24 6c       	mov    %r15d,0x6c(%rsp)
   1ef20:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1ef25:	eb 0d                	jmp    1ef34 <chacha20_block+0x2c4>
   1ef27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ef2e:	00 00 
   1ef30:	44 8b 34 87          	mov    (%rdi,%rax,4),%r14d
   1ef34:	44 89 34 82          	mov    %r14d,(%rdx,%rax,4)
   1ef38:	48 83 c0 01          	add    $0x1,%rax
   1ef3c:	48 83 f8 10          	cmp    $0x10,%rax
   1ef40:	75 ee                	jne    1ef30 <chacha20_block+0x2c0>
   1ef42:	be 40 00 00 00       	mov    $0x40,%esi
   1ef47:	e8 d4 62 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1ef4c:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1ef51:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1ef58:	00 00 
   1ef5a:	75 12                	jne    1ef6e <chacha20_block+0x2fe>
   1ef5c:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1ef63:	5b                   	pop    %rbx
   1ef64:	5d                   	pop    %rbp
   1ef65:	41 5c                	pop    %r12
   1ef67:	41 5d                	pop    %r13
   1ef69:	41 5e                	pop    %r14
   1ef6b:	41 5f                	pop    %r15
   1ef6d:	c3                   	retq   
   1ef6e:	e8 ed 42 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1ef73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ef7a:	00 00 00 00 
   1ef7e:	66 90                	xchg   %ax,%ax

000000000001ef80 <mbedtls_chacha20_init>:
   1ef80:	f3 0f 1e fa          	endbr64 
   1ef84:	53                   	push   %rbx
   1ef85:	be 40 00 00 00       	mov    $0x40,%esi
   1ef8a:	48 89 fb             	mov    %rdi,%rbx
   1ef8d:	e8 8e 62 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1ef92:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   1ef96:	be 40 00 00 00       	mov    $0x40,%esi
   1ef9b:	e8 80 62 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1efa0:	48 c7 83 80 00 00 00 	movq   $0x40,0x80(%rbx)
   1efa7:	40 00 00 00 
   1efab:	5b                   	pop    %rbx
   1efac:	c3                   	retq   
   1efad:	0f 1f 00             	nopl   (%rax)

000000000001efb0 <mbedtls_chacha20_free>:
   1efb0:	f3 0f 1e fa          	endbr64 
   1efb4:	48 85 ff             	test   %rdi,%rdi
   1efb7:	74 0f                	je     1efc8 <mbedtls_chacha20_free+0x18>
   1efb9:	be 88 00 00 00       	mov    $0x88,%esi
   1efbe:	e9 5d 62 fe ff       	jmpq   5220 <mbedtls_platform_zeroize>
   1efc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1efc8:	c3                   	retq   
   1efc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001efd0 <mbedtls_chacha20_setkey>:
   1efd0:	f3 0f 1e fa          	endbr64 
   1efd4:	48 b8 65 78 70 61 6e 	movabs $0x3320646e61707865,%rax
   1efdb:	64 20 33 
   1efde:	48 89 07             	mov    %rax,(%rdi)
   1efe1:	48 b8 32 2d 62 79 74 	movabs $0x6b20657479622d32,%rax
   1efe8:	65 20 6b 
   1efeb:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1efef:	8b 06                	mov    (%rsi),%eax
   1eff1:	89 47 10             	mov    %eax,0x10(%rdi)
   1eff4:	8b 46 04             	mov    0x4(%rsi),%eax
   1eff7:	89 47 14             	mov    %eax,0x14(%rdi)
   1effa:	8b 46 08             	mov    0x8(%rsi),%eax
   1effd:	89 47 18             	mov    %eax,0x18(%rdi)
   1f000:	8b 46 0c             	mov    0xc(%rsi),%eax
   1f003:	89 47 1c             	mov    %eax,0x1c(%rdi)
   1f006:	8b 46 10             	mov    0x10(%rsi),%eax
   1f009:	89 47 20             	mov    %eax,0x20(%rdi)
   1f00c:	8b 46 14             	mov    0x14(%rsi),%eax
   1f00f:	89 47 24             	mov    %eax,0x24(%rdi)
   1f012:	8b 46 18             	mov    0x18(%rsi),%eax
   1f015:	89 47 28             	mov    %eax,0x28(%rdi)
   1f018:	8b 46 1c             	mov    0x1c(%rsi),%eax
   1f01b:	89 47 2c             	mov    %eax,0x2c(%rdi)
   1f01e:	31 c0                	xor    %eax,%eax
   1f020:	c3                   	retq   
   1f021:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1f028:	00 00 00 00 
   1f02c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f030 <mbedtls_chacha20_starts>:
   1f030:	f3 0f 1e fa          	endbr64 
   1f034:	53                   	push   %rbx
   1f035:	48 89 fb             	mov    %rdi,%rbx
   1f038:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1f03c:	89 57 f0             	mov    %edx,-0x10(%rdi)
   1f03f:	8b 06                	mov    (%rsi),%eax
   1f041:	89 47 f4             	mov    %eax,-0xc(%rdi)
   1f044:	8b 46 04             	mov    0x4(%rsi),%eax
   1f047:	89 47 f8             	mov    %eax,-0x8(%rdi)
   1f04a:	8b 46 08             	mov    0x8(%rsi),%eax
   1f04d:	be 40 00 00 00       	mov    $0x40,%esi
   1f052:	89 47 fc             	mov    %eax,-0x4(%rdi)
   1f055:	e8 c6 61 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1f05a:	31 c0                	xor    %eax,%eax
   1f05c:	48 c7 83 80 00 00 00 	movq   $0x40,0x80(%rbx)
   1f063:	40 00 00 00 
   1f067:	5b                   	pop    %rbx
   1f068:	c3                   	retq   
   1f069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f070 <mbedtls_chacha20_update>:
   1f070:	f3 0f 1e fa          	endbr64 
   1f074:	41 57                	push   %r15
   1f076:	41 56                	push   %r14
   1f078:	41 55                	push   %r13
   1f07a:	41 54                	push   %r12
   1f07c:	55                   	push   %rbp
   1f07d:	53                   	push   %rbx
   1f07e:	48 83 ec 28          	sub    $0x28,%rsp
   1f082:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1f087:	48 85 f6             	test   %rsi,%rsi
   1f08a:	0f 84 40 01 00 00    	je     1f1d0 <mbedtls_chacha20_update+0x160>
   1f090:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   1f097:	48 89 fb             	mov    %rdi,%rbx
   1f09a:	49 89 d6             	mov    %rdx,%r14
   1f09d:	45 31 ed             	xor    %r13d,%r13d
   1f0a0:	eb 38                	jmp    1f0da <mbedtls_chacha20_update+0x6a>
   1f0a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f0a8:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1f0ad:	43 0f b6 3c 2e       	movzbl (%r14,%r13,1),%edi
   1f0b2:	40 32 7c 03 40       	xor    0x40(%rbx,%rax,1),%dil
   1f0b7:	42 88 3c 2a          	mov    %dil,(%rdx,%r13,1)
   1f0bb:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
   1f0c2:	49 83 c5 01          	add    $0x1,%r13
   1f0c6:	48 83 c0 01          	add    $0x1,%rax
   1f0ca:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
   1f0d1:	4c 39 ee             	cmp    %r13,%rsi
   1f0d4:	0f 84 f6 00 00 00    	je     1f1d0 <mbedtls_chacha20_update+0x160>
   1f0da:	48 89 f5             	mov    %rsi,%rbp
   1f0dd:	4c 29 ed             	sub    %r13,%rbp
   1f0e0:	48 83 f8 3f          	cmp    $0x3f,%rax
   1f0e4:	76 c2                	jbe    1f0a8 <mbedtls_chacha20_update+0x38>
   1f0e6:	48 83 fd 3f          	cmp    $0x3f,%rbp
   1f0ea:	76 7b                	jbe    1f167 <mbedtls_chacha20_update+0xf7>
   1f0ec:	49 8d 04 36          	lea    (%r14,%rsi,1),%rax
   1f0f0:	4c 8d 7b 40          	lea    0x40(%rbx),%r15
   1f0f4:	49 89 ec             	mov    %rbp,%r12
   1f0f7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f0fc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1f101:	48 01 f0             	add    %rsi,%rax
   1f104:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f110:	48 89 df             	mov    %rbx,%rdi
   1f113:	4c 89 fe             	mov    %r15,%rsi
   1f116:	e8 55 fb ff ff       	callq  1ec70 <chacha20_block>
   1f11b:	83 43 30 01          	addl   $0x1,0x30(%rbx)
   1f11f:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1f124:	31 c0                	xor    %eax,%eax
   1f126:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1f12b:	4d 29 e1             	sub    %r12,%r9
   1f12e:	4c 29 e7             	sub    %r12,%rdi
   1f131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f138:	41 8b 34 01          	mov    (%r9,%rax,1),%esi
   1f13c:	33 74 03 40          	xor    0x40(%rbx,%rax,1),%esi
   1f140:	89 34 07             	mov    %esi,(%rdi,%rax,1)
   1f143:	48 83 c0 04          	add    $0x4,%rax
   1f147:	48 83 f8 40          	cmp    $0x40,%rax
   1f14b:	75 eb                	jne    1f138 <mbedtls_chacha20_update+0xc8>
   1f14d:	49 83 ec 40          	sub    $0x40,%r12
   1f151:	49 83 fc 3f          	cmp    $0x3f,%r12
   1f155:	77 b9                	ja     1f110 <mbedtls_chacha20_update+0xa0>
   1f157:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1f15b:	83 e5 3f             	and    $0x3f,%ebp
   1f15e:	48 83 e0 c0          	and    $0xffffffffffffffc0,%rax
   1f162:	4d 8d 6c 05 40       	lea    0x40(%r13,%rax,1),%r13
   1f167:	48 85 ed             	test   %rbp,%rbp
   1f16a:	74 64                	je     1f1d0 <mbedtls_chacha20_update+0x160>
   1f16c:	48 8d 73 40          	lea    0x40(%rbx),%rsi
   1f170:	48 89 df             	mov    %rbx,%rdi
   1f173:	e8 f8 fa ff ff       	callq  1ec70 <chacha20_block>
   1f178:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1f17d:	83 43 30 01          	addl   $0x1,0x30(%rbx)
   1f181:	4b 8d 14 2e          	lea    (%r14,%r13,1),%rdx
   1f185:	4c 01 e9             	add    %r13,%rcx
   1f188:	48 83 fd 03          	cmp    $0x3,%rbp
   1f18c:	76 53                	jbe    1f1e1 <mbedtls_chacha20_update+0x171>
   1f18e:	b8 04 00 00 00       	mov    $0x4,%eax
   1f193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f198:	8b 74 02 fc          	mov    -0x4(%rdx,%rax,1),%esi
   1f19c:	33 74 03 3c          	xor    0x3c(%rbx,%rax,1),%esi
   1f1a0:	89 74 01 fc          	mov    %esi,-0x4(%rcx,%rax,1)
   1f1a4:	48 89 c6             	mov    %rax,%rsi
   1f1a7:	48 8d 40 04          	lea    0x4(%rax),%rax
   1f1ab:	48 39 c5             	cmp    %rax,%rbp
   1f1ae:	73 e8                	jae    1f198 <mbedtls_chacha20_update+0x128>
   1f1b0:	48 39 ee             	cmp    %rbp,%rsi
   1f1b3:	73 14                	jae    1f1c9 <mbedtls_chacha20_update+0x159>
   1f1b5:	0f b6 04 32          	movzbl (%rdx,%rsi,1),%eax
   1f1b9:	32 44 33 40          	xor    0x40(%rbx,%rsi,1),%al
   1f1bd:	88 04 31             	mov    %al,(%rcx,%rsi,1)
   1f1c0:	48 83 c6 01          	add    $0x1,%rsi
   1f1c4:	48 39 ee             	cmp    %rbp,%rsi
   1f1c7:	75 ec                	jne    1f1b5 <mbedtls_chacha20_update+0x145>
   1f1c9:	48 89 ab 80 00 00 00 	mov    %rbp,0x80(%rbx)
   1f1d0:	48 83 c4 28          	add    $0x28,%rsp
   1f1d4:	31 c0                	xor    %eax,%eax
   1f1d6:	5b                   	pop    %rbx
   1f1d7:	5d                   	pop    %rbp
   1f1d8:	41 5c                	pop    %r12
   1f1da:	41 5d                	pop    %r13
   1f1dc:	41 5e                	pop    %r14
   1f1de:	41 5f                	pop    %r15
   1f1e0:	c3                   	retq   
   1f1e1:	31 f6                	xor    %esi,%esi
   1f1e3:	eb d0                	jmp    1f1b5 <mbedtls_chacha20_update+0x145>
   1f1e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1f1ec:	00 00 00 00 

000000000001f1f0 <mbedtls_chacha20_crypt>:
   1f1f0:	f3 0f 1e fa          	endbr64 
   1f1f4:	41 57                	push   %r15
   1f1f6:	4d 89 cf             	mov    %r9,%r15
   1f1f9:	41 56                	push   %r14
   1f1fb:	4d 89 c6             	mov    %r8,%r14
   1f1fe:	41 55                	push   %r13
   1f200:	49 89 cd             	mov    %rcx,%r13
   1f203:	41 54                	push   %r12
   1f205:	55                   	push   %rbp
   1f206:	48 89 f5             	mov    %rsi,%rbp
   1f209:	53                   	push   %rbx
   1f20a:	48 89 fb             	mov    %rdi,%rbx
   1f20d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1f214:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   1f218:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   1f21d:	4c 89 e7             	mov    %r12,%rdi
   1f220:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f227:	00 00 
   1f229:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1f230:	00 
   1f231:	31 c0                	xor    %eax,%eax
   1f233:	e8 48 fd ff ff       	callq  1ef80 <mbedtls_chacha20_init>
   1f238:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   1f23c:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1f241:	48 b8 65 78 70 61 6e 	movabs $0x3320646e61707865,%rax
   1f248:	64 20 33 
   1f24b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f250:	be 40 00 00 00       	mov    $0x40,%esi
   1f255:	48 b8 32 2d 62 79 74 	movabs $0x6b20657479622d32,%rax
   1f25c:	65 20 6b 
   1f25f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f264:	48 8b 03             	mov    (%rbx),%rax
   1f267:	89 54 24 40          	mov    %edx,0x40(%rsp)
   1f26b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1f270:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1f274:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1f279:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1f27d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1f282:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1f286:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f28b:	8b 45 00             	mov    0x0(%rbp),%eax
   1f28e:	89 44 24 44          	mov    %eax,0x44(%rsp)
   1f292:	48 8b 45 04          	mov    0x4(%rbp),%rax
   1f296:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1f29b:	e8 80 5f fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1f2a0:	4c 89 ee             	mov    %r13,%rsi
   1f2a3:	4c 89 f9             	mov    %r15,%rcx
   1f2a6:	4c 89 f2             	mov    %r14,%rdx
   1f2a9:	48 c7 84 24 90 00 00 	movq   $0x40,0x90(%rsp)
   1f2b0:	00 40 00 00 00 
   1f2b5:	4c 89 e7             	mov    %r12,%rdi
   1f2b8:	e8 b3 fd ff ff       	callq  1f070 <mbedtls_chacha20_update>
   1f2bd:	be 88 00 00 00       	mov    $0x88,%esi
   1f2c2:	4c 89 e7             	mov    %r12,%rdi
   1f2c5:	41 89 c5             	mov    %eax,%r13d
   1f2c8:	e8 53 5f fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1f2cd:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   1f2d4:	00 
   1f2d5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1f2dc:	00 00 
   1f2de:	75 15                	jne    1f2f5 <mbedtls_chacha20_crypt+0x105>
   1f2e0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1f2e7:	44 89 e8             	mov    %r13d,%eax
   1f2ea:	5b                   	pop    %rbx
   1f2eb:	5d                   	pop    %rbp
   1f2ec:	41 5c                	pop    %r12
   1f2ee:	41 5d                	pop    %r13
   1f2f0:	41 5e                	pop    %r14
   1f2f2:	41 5f                	pop    %r15
   1f2f4:	c3                   	retq   
   1f2f5:	e8 66 3f fe ff       	callq  3260 <__stack_chk_fail@plt>
   1f2fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001f300 <mbedtls_chacha20_self_test>:
   1f300:	f3 0f 1e fa          	endbr64 
   1f304:	41 54                	push   %r12
   1f306:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
   1f30d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f314:	00 00 
   1f316:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1f31d:	00 
   1f31e:	31 c0                	xor    %eax,%eax
   1f320:	85 ff                	test   %edi,%edi
   1f322:	0f 85 30 01 00 00    	jne    1f458 <mbedtls_chacha20_self_test+0x158>
   1f328:	49 89 e4             	mov    %rsp,%r12
   1f32b:	31 d2                	xor    %edx,%edx
   1f32d:	4c 8d 05 2c 75 00 00 	lea    0x752c(%rip),%r8        # 26860 <test_input>
   1f334:	b9 40 00 00 00       	mov    $0x40,%ecx
   1f339:	4d 89 e1             	mov    %r12,%r9
   1f33c:	48 8d 35 0d 78 00 00 	lea    0x780d(%rip),%rsi        # 26b50 <test_nonces>
   1f343:	48 8d 3d 36 78 00 00 	lea    0x7836(%rip),%rdi        # 26b80 <test_keys>
   1f34a:	e8 a1 fe ff ff       	callq  1f1f0 <mbedtls_chacha20_crypt>
   1f34f:	85 c0                	test   %eax,%eax
   1f351:	75 1c                	jne    1f36f <mbedtls_chacha20_self_test+0x6f>
   1f353:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1f358:	48 8b 04 24          	mov    (%rsp),%rax
   1f35c:	48 33 15 05 72 00 00 	xor    0x7205(%rip),%rdx        # 26568 <test_output+0x8>
   1f363:	48 33 05 f6 71 00 00 	xor    0x71f6(%rip),%rax        # 26560 <test_output>
   1f36a:	48 09 c2             	or     %rax,%rdx
   1f36d:	74 31                	je     1f3a0 <mbedtls_chacha20_self_test+0xa0>
   1f36f:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1f375:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   1f37c:	00 
   1f37d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1f384:	00 00 
   1f386:	0f 85 47 02 00 00    	jne    1f5d3 <mbedtls_chacha20_self_test+0x2d3>
   1f38c:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
   1f393:	44 89 e0             	mov    %r12d,%eax
   1f396:	41 5c                	pop    %r12
   1f398:	c3                   	retq   
   1f399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f3a0:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1f3a5:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
   1f3aa:	48 33 05 bf 71 00 00 	xor    0x71bf(%rip),%rax        # 26570 <test_output+0x10>
   1f3b1:	48 33 15 c0 71 00 00 	xor    0x71c0(%rip),%rdx        # 26578 <test_output+0x18>
   1f3b8:	48 09 c2             	or     %rax,%rdx
   1f3bb:	75 b2                	jne    1f36f <mbedtls_chacha20_self_test+0x6f>
   1f3bd:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   1f3c2:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
   1f3c7:	48 33 05 b2 71 00 00 	xor    0x71b2(%rip),%rax        # 26580 <test_output+0x20>
   1f3ce:	48 33 15 b3 71 00 00 	xor    0x71b3(%rip),%rdx        # 26588 <test_output+0x28>
   1f3d5:	48 09 c2             	or     %rax,%rdx
   1f3d8:	75 95                	jne    1f36f <mbedtls_chacha20_self_test+0x6f>
   1f3da:	49 8b 44 24 30       	mov    0x30(%r12),%rax
   1f3df:	49 8b 54 24 38       	mov    0x38(%r12),%rdx
   1f3e4:	48 33 05 a5 71 00 00 	xor    0x71a5(%rip),%rax        # 26590 <test_output+0x30>
   1f3eb:	48 33 15 a6 71 00 00 	xor    0x71a6(%rip),%rdx        # 26598 <test_output+0x38>
   1f3f2:	48 09 c2             	or     %rax,%rdx
   1f3f5:	0f 85 74 ff ff ff    	jne    1f36f <mbedtls_chacha20_self_test+0x6f>
   1f3fb:	4d 89 e1             	mov    %r12,%r9
   1f3fe:	b9 77 01 00 00       	mov    $0x177,%ecx
   1f403:	4c 8d 05 cd 75 00 00 	lea    0x75cd(%rip),%r8        # 269d7 <test_input+0x177>
   1f40a:	ba 01 00 00 00       	mov    $0x1,%edx
   1f40f:	48 8d 35 46 77 00 00 	lea    0x7746(%rip),%rsi        # 26b5c <test_nonces+0xc>
   1f416:	48 8d 3d 83 77 00 00 	lea    0x7783(%rip),%rdi        # 26ba0 <test_keys+0x20>
   1f41d:	e8 ce fd ff ff       	callq  1f1f0 <mbedtls_chacha20_crypt>
   1f422:	85 c0                	test   %eax,%eax
   1f424:	0f 85 45 ff ff ff    	jne    1f36f <mbedtls_chacha20_self_test+0x6f>
   1f42a:	4c 89 e7             	mov    %r12,%rdi
   1f42d:	ba 77 01 00 00       	mov    $0x177,%edx
   1f432:	48 8d 35 9e 72 00 00 	lea    0x729e(%rip),%rsi        # 266d7 <test_output+0x177>
   1f439:	e8 62 3e fe ff       	callq  32a0 <memcmp@plt>
   1f43e:	41 89 c4             	mov    %eax,%r12d
   1f441:	85 c0                	test   %eax,%eax
   1f443:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f448:	44 0f 45 e0          	cmovne %eax,%r12d
   1f44c:	e9 24 ff ff ff       	jmpq   1f375 <mbedtls_chacha20_self_test+0x75>
   1f451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f458:	31 d2                	xor    %edx,%edx
   1f45a:	48 8d 35 bf 70 00 00 	lea    0x70bf(%rip),%rsi        # 26520 <key_test_data+0x10>
   1f461:	bf 01 00 00 00       	mov    $0x1,%edi
   1f466:	49 89 e4             	mov    %rsp,%r12
   1f469:	e8 d2 3e fe ff       	callq  3340 <__printf_chk@plt>
   1f46e:	31 d2                	xor    %edx,%edx
   1f470:	4d 89 e1             	mov    %r12,%r9
   1f473:	b9 40 00 00 00       	mov    $0x40,%ecx
   1f478:	4c 8d 05 e1 73 00 00 	lea    0x73e1(%rip),%r8        # 26860 <test_input>
   1f47f:	48 8d 35 ca 76 00 00 	lea    0x76ca(%rip),%rsi        # 26b50 <test_nonces>
   1f486:	48 8d 3d f3 76 00 00 	lea    0x76f3(%rip),%rdi        # 26b80 <test_keys>
   1f48d:	e8 5e fd ff ff       	callq  1f1f0 <mbedtls_chacha20_crypt>
   1f492:	85 c0                	test   %eax,%eax
   1f494:	0f 85 19 01 00 00    	jne    1f5b3 <mbedtls_chacha20_self_test+0x2b3>
   1f49a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1f49f:	48 8b 04 24          	mov    (%rsp),%rax
   1f4a3:	48 33 15 be 70 00 00 	xor    0x70be(%rip),%rdx        # 26568 <test_output+0x8>
   1f4aa:	48 33 05 af 70 00 00 	xor    0x70af(%rip),%rax        # 26560 <test_output>
   1f4b1:	48 09 c2             	or     %rax,%rdx
   1f4b4:	75 1d                	jne    1f4d3 <mbedtls_chacha20_self_test+0x1d3>
   1f4b6:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1f4bb:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
   1f4c0:	48 33 05 a9 70 00 00 	xor    0x70a9(%rip),%rax        # 26570 <test_output+0x10>
   1f4c7:	48 33 15 aa 70 00 00 	xor    0x70aa(%rip),%rdx        # 26578 <test_output+0x18>
   1f4ce:	48 09 c2             	or     %rax,%rdx
   1f4d1:	74 1d                	je     1f4f0 <mbedtls_chacha20_self_test+0x1f0>
   1f4d3:	48 8d 3d 5a 70 00 00 	lea    0x705a(%rip),%rdi        # 26534 <key_test_data+0x24>
   1f4da:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1f4e0:	e8 1b 3d fe ff       	callq  3200 <puts@plt>
   1f4e5:	e9 8b fe ff ff       	jmpq   1f375 <mbedtls_chacha20_self_test+0x75>
   1f4ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f4f0:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   1f4f5:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
   1f4fa:	48 33 05 7f 70 00 00 	xor    0x707f(%rip),%rax        # 26580 <test_output+0x20>
   1f501:	48 33 15 80 70 00 00 	xor    0x7080(%rip),%rdx        # 26588 <test_output+0x28>
   1f508:	48 09 c2             	or     %rax,%rdx
   1f50b:	75 c6                	jne    1f4d3 <mbedtls_chacha20_self_test+0x1d3>
   1f50d:	49 8b 44 24 30       	mov    0x30(%r12),%rax
   1f512:	49 8b 54 24 38       	mov    0x38(%r12),%rdx
   1f517:	48 33 05 72 70 00 00 	xor    0x7072(%rip),%rax        # 26590 <test_output+0x30>
   1f51e:	48 33 15 73 70 00 00 	xor    0x7073(%rip),%rdx        # 26598 <test_output+0x38>
   1f525:	48 09 c2             	or     %rax,%rdx
   1f528:	75 a9                	jne    1f4d3 <mbedtls_chacha20_self_test+0x1d3>
   1f52a:	48 8d 3d b1 3c 00 00 	lea    0x3cb1(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1f531:	e8 ca 3c fe ff       	callq  3200 <puts@plt>
   1f536:	ba 01 00 00 00       	mov    $0x1,%edx
   1f53b:	48 8d 35 de 6f 00 00 	lea    0x6fde(%rip),%rsi        # 26520 <key_test_data+0x10>
   1f542:	31 c0                	xor    %eax,%eax
   1f544:	bf 01 00 00 00       	mov    $0x1,%edi
   1f549:	e8 f2 3d fe ff       	callq  3340 <__printf_chk@plt>
   1f54e:	4d 89 e1             	mov    %r12,%r9
   1f551:	b9 77 01 00 00       	mov    $0x177,%ecx
   1f556:	4c 8d 05 7a 74 00 00 	lea    0x747a(%rip),%r8        # 269d7 <test_input+0x177>
   1f55d:	ba 01 00 00 00       	mov    $0x1,%edx
   1f562:	48 8d 35 f3 75 00 00 	lea    0x75f3(%rip),%rsi        # 26b5c <test_nonces+0xc>
   1f569:	48 8d 3d 30 76 00 00 	lea    0x7630(%rip),%rdi        # 26ba0 <test_keys+0x20>
   1f570:	e8 7b fc ff ff       	callq  1f1f0 <mbedtls_chacha20_crypt>
   1f575:	85 c0                	test   %eax,%eax
   1f577:	75 3a                	jne    1f5b3 <mbedtls_chacha20_self_test+0x2b3>
   1f579:	4c 89 e7             	mov    %r12,%rdi
   1f57c:	ba 77 01 00 00       	mov    $0x177,%edx
   1f581:	48 8d 35 4f 71 00 00 	lea    0x714f(%rip),%rsi        # 266d7 <test_output+0x177>
   1f588:	e8 13 3d fe ff       	callq  32a0 <memcmp@plt>
   1f58d:	41 89 c4             	mov    %eax,%r12d
   1f590:	85 c0                	test   %eax,%eax
   1f592:	0f 85 3b ff ff ff    	jne    1f4d3 <mbedtls_chacha20_self_test+0x1d3>
   1f598:	48 8d 3d 43 3c 00 00 	lea    0x3c43(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1f59f:	e8 5c 3c fe ff       	callq  3200 <puts@plt>
   1f5a4:	bf 0a 00 00 00       	mov    $0xa,%edi
   1f5a9:	e8 42 3c fe ff       	callq  31f0 <putchar@plt>
   1f5ae:	e9 c2 fd ff ff       	jmpq   1f375 <mbedtls_chacha20_self_test+0x75>
   1f5b3:	89 c2                	mov    %eax,%edx
   1f5b5:	48 8d 35 2a 76 00 00 	lea    0x762a(%rip),%rsi        # 26be6 <test_keys+0x66>
   1f5bc:	31 c0                	xor    %eax,%eax
   1f5be:	bf 01 00 00 00       	mov    $0x1,%edi
   1f5c3:	e8 78 3d fe ff       	callq  3340 <__printf_chk@plt>
   1f5c8:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1f5ce:	e9 a2 fd ff ff       	jmpq   1f375 <mbedtls_chacha20_self_test+0x75>
   1f5d3:	e8 88 3c fe ff       	callq  3260 <__stack_chk_fail@plt>
   1f5d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f5df:	00 

000000000001f5e0 <chachapoly_pad_aad>:
   1f5e0:	48 83 ec 28          	sub    $0x28,%rsp
   1f5e4:	8b 8f d8 00 00 00    	mov    0xd8(%rdi),%ecx
   1f5ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f5f1:	00 00 
   1f5f3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f5f8:	31 c0                	xor    %eax,%eax
   1f5fa:	83 e1 0f             	and    $0xf,%ecx
   1f5fd:	74 35                	je     1f634 <chachapoly_pad_aad+0x54>
   1f5ff:	ba 10 00 00 00       	mov    $0x10,%edx
   1f604:	31 c0                	xor    %eax,%eax
   1f606:	48 8d 74 24 09       	lea    0x9(%rsp),%rsi
   1f60b:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
   1f612:	29 ca                	sub    %ecx,%edx
   1f614:	c7 44 24 11 00 00 00 	movl   $0x0,0x11(%rsp)
   1f61b:	00 
   1f61c:	48 c7 44 24 09 00 00 	movq   $0x0,0x9(%rsp)
   1f623:	00 00 
   1f625:	66 89 44 24 15       	mov    %ax,0x15(%rsp)
   1f62a:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
   1f62f:	e8 8c 0b 00 00       	callq  201c0 <mbedtls_poly1305_update>
   1f634:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1f639:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1f640:	00 00 
   1f642:	75 05                	jne    1f649 <chachapoly_pad_aad+0x69>
   1f644:	48 83 c4 28          	add    $0x28,%rsp
   1f648:	c3                   	retq   
   1f649:	e8 12 3c fe ff       	callq  3260 <__stack_chk_fail@plt>
   1f64e:	66 90                	xchg   %ax,%ax

000000000001f650 <mbedtls_chachapoly_init>:
   1f650:	f3 0f 1e fa          	endbr64 
   1f654:	53                   	push   %rbx
   1f655:	48 89 fb             	mov    %rdi,%rbx
   1f658:	e8 23 f9 ff ff       	callq  1ef80 <mbedtls_chacha20_init>
   1f65d:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
   1f664:	e8 a7 0a 00 00       	callq  20110 <mbedtls_poly1305_init>
   1f669:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1f670:	00 00 00 00 
   1f674:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   1f67b:	00 00 00 00 
   1f67f:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
   1f686:	00 00 00 00 
   1f68a:	5b                   	pop    %rbx
   1f68b:	c3                   	retq   
   1f68c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f690 <mbedtls_chachapoly_free>:
   1f690:	f3 0f 1e fa          	endbr64 
   1f694:	48 85 ff             	test   %rdi,%rdi
   1f697:	74 3f                	je     1f6d8 <mbedtls_chachapoly_free+0x48>
   1f699:	53                   	push   %rbx
   1f69a:	48 89 fb             	mov    %rdi,%rbx
   1f69d:	e8 0e f9 ff ff       	callq  1efb0 <mbedtls_chacha20_free>
   1f6a2:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
   1f6a9:	e8 72 0a 00 00       	callq  20120 <mbedtls_poly1305_free>
   1f6ae:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1f6b5:	00 00 00 00 
   1f6b9:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   1f6c0:	00 00 00 00 
   1f6c4:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
   1f6cb:	00 00 00 00 
   1f6cf:	5b                   	pop    %rbx
   1f6d0:	c3                   	retq   
   1f6d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f6d8:	c3                   	retq   
   1f6d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f6e0 <mbedtls_chachapoly_setkey>:
   1f6e0:	f3 0f 1e fa          	endbr64 
   1f6e4:	e9 e7 f8 ff ff       	jmpq   1efd0 <mbedtls_chacha20_setkey>
   1f6e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f6f0 <mbedtls_chachapoly_starts>:
   1f6f0:	f3 0f 1e fa          	endbr64 
   1f6f4:	41 55                	push   %r13
   1f6f6:	41 54                	push   %r12
   1f6f8:	55                   	push   %rbp
   1f6f9:	89 d5                	mov    %edx,%ebp
   1f6fb:	31 d2                	xor    %edx,%edx
   1f6fd:	53                   	push   %rbx
   1f6fe:	48 89 fb             	mov    %rdi,%rbx
   1f701:	48 83 ec 58          	sub    $0x58,%rsp
   1f705:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f70c:	00 00 
   1f70e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1f713:	31 c0                	xor    %eax,%eax
   1f715:	49 89 e5             	mov    %rsp,%r13
   1f718:	e8 13 f9 ff ff       	callq  1f030 <mbedtls_chacha20_starts>
   1f71d:	41 89 c4             	mov    %eax,%r12d
   1f720:	85 c0                	test   %eax,%eax
   1f722:	74 34                	je     1f758 <mbedtls_chachapoly_starts+0x68>
   1f724:	be 40 00 00 00       	mov    $0x40,%esi
   1f729:	4c 89 ef             	mov    %r13,%rdi
   1f72c:	e8 ef 5a fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1f731:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1f736:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1f73d:	00 00 
   1f73f:	0f 85 85 00 00 00    	jne    1f7ca <mbedtls_chachapoly_starts+0xda>
   1f745:	48 83 c4 58          	add    $0x58,%rsp
   1f749:	44 89 e0             	mov    %r12d,%eax
   1f74c:	5b                   	pop    %rbx
   1f74d:	5d                   	pop    %rbp
   1f74e:	41 5c                	pop    %r12
   1f750:	41 5d                	pop    %r13
   1f752:	c3                   	retq   
   1f753:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f758:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f75c:	4c 89 e9             	mov    %r13,%rcx
   1f75f:	4c 89 ea             	mov    %r13,%rdx
   1f762:	be 40 00 00 00       	mov    $0x40,%esi
   1f767:	48 89 df             	mov    %rbx,%rdi
   1f76a:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1f76e:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1f773:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1f778:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1f77d:	e8 ee f8 ff ff       	callq  1f070 <mbedtls_chacha20_update>
   1f782:	41 89 c4             	mov    %eax,%r12d
   1f785:	85 c0                	test   %eax,%eax
   1f787:	75 9b                	jne    1f724 <mbedtls_chachapoly_starts+0x34>
   1f789:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
   1f790:	4c 89 ee             	mov    %r13,%rsi
   1f793:	e8 a8 09 00 00       	callq  20140 <mbedtls_poly1305_starts>
   1f798:	41 89 c4             	mov    %eax,%r12d
   1f79b:	85 c0                	test   %eax,%eax
   1f79d:	75 85                	jne    1f724 <mbedtls_chachapoly_starts+0x34>
   1f79f:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1f7a6:	00 00 00 00 
   1f7aa:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   1f7b1:	00 00 00 00 
   1f7b5:	c7 83 e8 00 00 00 01 	movl   $0x1,0xe8(%rbx)
   1f7bc:	00 00 00 
   1f7bf:	89 ab ec 00 00 00    	mov    %ebp,0xec(%rbx)
   1f7c5:	e9 5a ff ff ff       	jmpq   1f724 <mbedtls_chachapoly_starts+0x34>
   1f7ca:	e8 91 3a fe ff       	callq  3260 <__stack_chk_fail@plt>
   1f7cf:	90                   	nop

000000000001f7d0 <mbedtls_chachapoly_update_aad>:
   1f7d0:	f3 0f 1e fa          	endbr64 
   1f7d4:	83 bf e8 00 00 00 01 	cmpl   $0x1,0xe8(%rdi)
   1f7db:	75 13                	jne    1f7f0 <mbedtls_chachapoly_update_aad+0x20>
   1f7dd:	48 01 97 d8 00 00 00 	add    %rdx,0xd8(%rdi)
   1f7e4:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
   1f7eb:	e9 d0 09 00 00       	jmpq   201c0 <mbedtls_poly1305_update>
   1f7f0:	b8 ac ff ff ff       	mov    $0xffffffac,%eax
   1f7f5:	c3                   	retq   
   1f7f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f7fd:	00 00 00 

000000000001f800 <mbedtls_chachapoly_update>:
   1f800:	f3 0f 1e fa          	endbr64 
   1f804:	41 56                	push   %r14
   1f806:	41 55                	push   %r13
   1f808:	49 89 d5             	mov    %rdx,%r13
   1f80b:	41 54                	push   %r12
   1f80d:	55                   	push   %rbp
   1f80e:	48 83 ec 08          	sub    $0x8,%rsp
   1f812:	8b 87 e8 00 00 00    	mov    0xe8(%rdi),%eax
   1f818:	8d 50 ff             	lea    -0x1(%rax),%edx
   1f81b:	83 fa 01             	cmp    $0x1,%edx
   1f81e:	0f 87 94 00 00 00    	ja     1f8b8 <mbedtls_chachapoly_update+0xb8>
   1f824:	48 89 fd             	mov    %rdi,%rbp
   1f827:	49 89 f4             	mov    %rsi,%r12
   1f82a:	49 89 ce             	mov    %rcx,%r14
   1f82d:	83 f8 01             	cmp    $0x1,%eax
   1f830:	0f 84 9a 00 00 00    	je     1f8d0 <mbedtls_chachapoly_update+0xd0>
   1f836:	8b 85 ec 00 00 00    	mov    0xec(%rbp),%eax
   1f83c:	4c 01 a5 e0 00 00 00 	add    %r12,0xe0(%rbp)
   1f843:	85 c0                	test   %eax,%eax
   1f845:	75 39                	jne    1f880 <mbedtls_chachapoly_update+0x80>
   1f847:	4c 89 f1             	mov    %r14,%rcx
   1f84a:	4c 89 ea             	mov    %r13,%rdx
   1f84d:	4c 89 e6             	mov    %r12,%rsi
   1f850:	48 89 ef             	mov    %rbp,%rdi
   1f853:	e8 18 f8 ff ff       	callq  1f070 <mbedtls_chacha20_update>
   1f858:	85 c0                	test   %eax,%eax
   1f85a:	75 61                	jne    1f8bd <mbedtls_chachapoly_update+0xbd>
   1f85c:	48 83 c4 08          	add    $0x8,%rsp
   1f860:	48 8d bd 88 00 00 00 	lea    0x88(%rbp),%rdi
   1f867:	4c 89 e2             	mov    %r12,%rdx
   1f86a:	4c 89 f6             	mov    %r14,%rsi
   1f86d:	5d                   	pop    %rbp
   1f86e:	41 5c                	pop    %r12
   1f870:	41 5d                	pop    %r13
   1f872:	41 5e                	pop    %r14
   1f874:	e9 47 09 00 00       	jmpq   201c0 <mbedtls_poly1305_update>
   1f879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f880:	48 8d bd 88 00 00 00 	lea    0x88(%rbp),%rdi
   1f887:	4c 89 e2             	mov    %r12,%rdx
   1f88a:	4c 89 ee             	mov    %r13,%rsi
   1f88d:	e8 2e 09 00 00       	callq  201c0 <mbedtls_poly1305_update>
   1f892:	85 c0                	test   %eax,%eax
   1f894:	75 27                	jne    1f8bd <mbedtls_chachapoly_update+0xbd>
   1f896:	48 83 c4 08          	add    $0x8,%rsp
   1f89a:	4c 89 f1             	mov    %r14,%rcx
   1f89d:	4c 89 ea             	mov    %r13,%rdx
   1f8a0:	4c 89 e6             	mov    %r12,%rsi
   1f8a3:	48 89 ef             	mov    %rbp,%rdi
   1f8a6:	5d                   	pop    %rbp
   1f8a7:	41 5c                	pop    %r12
   1f8a9:	41 5d                	pop    %r13
   1f8ab:	41 5e                	pop    %r14
   1f8ad:	e9 be f7 ff ff       	jmpq   1f070 <mbedtls_chacha20_update>
   1f8b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f8b8:	b8 ac ff ff ff       	mov    $0xffffffac,%eax
   1f8bd:	48 83 c4 08          	add    $0x8,%rsp
   1f8c1:	5d                   	pop    %rbp
   1f8c2:	41 5c                	pop    %r12
   1f8c4:	41 5d                	pop    %r13
   1f8c6:	41 5e                	pop    %r14
   1f8c8:	c3                   	retq   
   1f8c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f8d0:	c7 87 e8 00 00 00 02 	movl   $0x2,0xe8(%rdi)
   1f8d7:	00 00 00 
   1f8da:	e8 01 fd ff ff       	callq  1f5e0 <chachapoly_pad_aad>
   1f8df:	85 c0                	test   %eax,%eax
   1f8e1:	0f 84 4f ff ff ff    	je     1f836 <mbedtls_chachapoly_update+0x36>
   1f8e7:	eb d4                	jmp    1f8bd <mbedtls_chachapoly_update+0xbd>
   1f8e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f8f0 <mbedtls_chachapoly_finish>:
   1f8f0:	f3 0f 1e fa          	endbr64 
   1f8f4:	41 54                	push   %r12
   1f8f6:	55                   	push   %rbp
   1f8f7:	53                   	push   %rbx
   1f8f8:	48 83 ec 30          	sub    $0x30,%rsp
   1f8fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f903:	00 00 
   1f905:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1f90a:	31 c0                	xor    %eax,%eax
   1f90c:	8b 87 e8 00 00 00    	mov    0xe8(%rdi),%eax
   1f912:	85 c0                	test   %eax,%eax
   1f914:	0f 84 fe 00 00 00    	je     1fa18 <mbedtls_chachapoly_finish+0x128>
   1f91a:	48 89 fb             	mov    %rdi,%rbx
   1f91d:	48 89 f5             	mov    %rsi,%rbp
   1f920:	83 f8 01             	cmp    $0x1,%eax
   1f923:	74 7b                	je     1f9a0 <mbedtls_chachapoly_finish+0xb0>
   1f925:	48 8b 97 e0 00 00 00 	mov    0xe0(%rdi),%rdx
   1f92c:	4c 8d a7 88 00 00 00 	lea    0x88(%rdi),%r12
   1f933:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1f938:	83 f8 02             	cmp    $0x2,%eax
   1f93b:	0f 84 7f 00 00 00    	je     1f9c0 <mbedtls_chachapoly_finish+0xd0>
   1f941:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
   1f948:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1f94d:	4c 89 e7             	mov    %r12,%rdi
   1f950:	ba 10 00 00 00       	mov    $0x10,%edx
   1f955:	c7 83 e8 00 00 00 03 	movl   $0x3,0xe8(%rbx)
   1f95c:	00 00 00 
   1f95f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f964:	e8 57 08 00 00       	callq  201c0 <mbedtls_poly1305_update>
   1f969:	85 c0                	test   %eax,%eax
   1f96b:	74 23                	je     1f990 <mbedtls_chachapoly_finish+0xa0>
   1f96d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1f972:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1f979:	00 00 
   1f97b:	0f 85 a1 00 00 00    	jne    1fa22 <mbedtls_chachapoly_finish+0x132>
   1f981:	48 83 c4 30          	add    $0x30,%rsp
   1f985:	5b                   	pop    %rbx
   1f986:	5d                   	pop    %rbp
   1f987:	41 5c                	pop    %r12
   1f989:	c3                   	retq   
   1f98a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f990:	48 89 ee             	mov    %rbp,%rsi
   1f993:	4c 89 e7             	mov    %r12,%rdi
   1f996:	e8 a5 09 00 00       	callq  20340 <mbedtls_poly1305_finish>
   1f99b:	eb d0                	jmp    1f96d <mbedtls_chachapoly_finish+0x7d>
   1f99d:	0f 1f 00             	nopl   (%rax)
   1f9a0:	e8 3b fc ff ff       	callq  1f5e0 <chachapoly_pad_aad>
   1f9a5:	85 c0                	test   %eax,%eax
   1f9a7:	75 c4                	jne    1f96d <mbedtls_chachapoly_finish+0x7d>
   1f9a9:	48 8b 93 e0 00 00 00 	mov    0xe0(%rbx),%rdx
   1f9b0:	4c 8d a3 88 00 00 00 	lea    0x88(%rbx),%r12
   1f9b7:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1f9bc:	eb 83                	jmp    1f941 <mbedtls_chachapoly_finish+0x51>
   1f9be:	66 90                	xchg   %ax,%ax
   1f9c0:	89 d0                	mov    %edx,%eax
   1f9c2:	83 e0 0f             	and    $0xf,%eax
   1f9c5:	0f 84 76 ff ff ff    	je     1f941 <mbedtls_chachapoly_finish+0x51>
   1f9cb:	31 d2                	xor    %edx,%edx
   1f9cd:	4c 89 e7             	mov    %r12,%rdi
   1f9d0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1f9d5:	66 89 54 24 1c       	mov    %dx,0x1c(%rsp)
   1f9da:	ba 10 00 00 00       	mov    $0x10,%edx
   1f9df:	29 c2                	sub    %eax,%edx
   1f9e1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
   1f9e8:	00 
   1f9e9:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1f9f0:	00 00 
   1f9f2:	c6 44 24 1e 00       	movb   $0x0,0x1e(%rsp)
   1f9f7:	e8 c4 07 00 00       	callq  201c0 <mbedtls_poly1305_update>
   1f9fc:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1fa01:	85 c0                	test   %eax,%eax
   1fa03:	0f 85 64 ff ff ff    	jne    1f96d <mbedtls_chachapoly_finish+0x7d>
   1fa09:	48 8b 93 e0 00 00 00 	mov    0xe0(%rbx),%rdx
   1fa10:	e9 2c ff ff ff       	jmpq   1f941 <mbedtls_chachapoly_finish+0x51>
   1fa15:	0f 1f 00             	nopl   (%rax)
   1fa18:	b8 ac ff ff ff       	mov    $0xffffffac,%eax
   1fa1d:	e9 4b ff ff ff       	jmpq   1f96d <mbedtls_chachapoly_finish+0x7d>
   1fa22:	e8 39 38 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1fa27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1fa2e:	00 00 

000000000001fa30 <chachapoly_crypt_and_tag>:
   1fa30:	41 57                	push   %r15
   1fa32:	41 89 f2             	mov    %esi,%r10d
   1fa35:	48 89 ce             	mov    %rcx,%rsi
   1fa38:	49 89 ff             	mov    %rdi,%r15
   1fa3b:	41 56                	push   %r14
   1fa3d:	4d 89 c6             	mov    %r8,%r14
   1fa40:	41 55                	push   %r13
   1fa42:	41 54                	push   %r12
   1fa44:	55                   	push   %rbp
   1fa45:	48 89 d5             	mov    %rdx,%rbp
   1fa48:	44 89 d2             	mov    %r10d,%edx
   1fa4b:	53                   	push   %rbx
   1fa4c:	4c 89 cb             	mov    %r9,%rbx
   1fa4f:	48 83 ec 18          	sub    $0x18,%rsp
   1fa53:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1fa58:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1fa5d:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
   1fa62:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1fa67:	e8 84 fc ff ff       	callq  1f6f0 <mbedtls_chachapoly_starts>
   1fa6c:	85 c0                	test   %eax,%eax
   1fa6e:	75 27                	jne    1fa97 <chachapoly_crypt_and_tag+0x67>
   1fa70:	41 83 bf e8 00 00 00 	cmpl   $0x1,0xe8(%r15)
   1fa77:	01 
   1fa78:	75 66                	jne    1fae0 <chachapoly_crypt_and_tag+0xb0>
   1fa7a:	49 01 9f d8 00 00 00 	add    %rbx,0xd8(%r15)
   1fa81:	49 8d bf 88 00 00 00 	lea    0x88(%r15),%rdi
   1fa88:	48 89 da             	mov    %rbx,%rdx
   1fa8b:	4c 89 f6             	mov    %r14,%rsi
   1fa8e:	e8 2d 07 00 00       	callq  201c0 <mbedtls_poly1305_update>
   1fa93:	85 c0                	test   %eax,%eax
   1fa95:	74 19                	je     1fab0 <chachapoly_crypt_and_tag+0x80>
   1fa97:	48 83 c4 18          	add    $0x18,%rsp
   1fa9b:	5b                   	pop    %rbx
   1fa9c:	5d                   	pop    %rbp
   1fa9d:	41 5c                	pop    %r12
   1fa9f:	41 5d                	pop    %r13
   1faa1:	41 5e                	pop    %r14
   1faa3:	41 5f                	pop    %r15
   1faa5:	c3                   	retq   
   1faa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1faad:	00 00 00 
   1fab0:	4c 89 e9             	mov    %r13,%rcx
   1fab3:	4c 89 e2             	mov    %r12,%rdx
   1fab6:	48 89 ee             	mov    %rbp,%rsi
   1fab9:	4c 89 ff             	mov    %r15,%rdi
   1fabc:	e8 3f fd ff ff       	callq  1f800 <mbedtls_chachapoly_update>
   1fac1:	85 c0                	test   %eax,%eax
   1fac3:	75 d2                	jne    1fa97 <chachapoly_crypt_and_tag+0x67>
   1fac5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1faca:	48 83 c4 18          	add    $0x18,%rsp
   1face:	4c 89 ff             	mov    %r15,%rdi
   1fad1:	5b                   	pop    %rbx
   1fad2:	5d                   	pop    %rbp
   1fad3:	41 5c                	pop    %r12
   1fad5:	41 5d                	pop    %r13
   1fad7:	41 5e                	pop    %r14
   1fad9:	41 5f                	pop    %r15
   1fadb:	e9 10 fe ff ff       	jmpq   1f8f0 <mbedtls_chachapoly_finish>
   1fae0:	f3 0f 1e fa          	endbr64 
   1fae4:	b8 ac ff ff ff       	mov    $0xffffffac,%eax
   1fae9:	eb ac                	jmp    1fa97 <chachapoly_crypt_and_tag+0x67>
   1faeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001faf0 <mbedtls_chachapoly_encrypt_and_tag>:
   1faf0:	f3 0f 1e fa          	endbr64 
   1faf4:	48 83 ec 10          	sub    $0x10,%rsp
   1faf8:	ff 74 24 20          	pushq  0x20(%rsp)
   1fafc:	ff 74 24 20          	pushq  0x20(%rsp)
   1fb00:	41 51                	push   %r9
   1fb02:	4d 89 c1             	mov    %r8,%r9
   1fb05:	49 89 c8             	mov    %rcx,%r8
   1fb08:	48 89 d1             	mov    %rdx,%rcx
   1fb0b:	48 89 f2             	mov    %rsi,%rdx
   1fb0e:	31 f6                	xor    %esi,%esi
   1fb10:	e8 1b ff ff ff       	callq  1fa30 <chachapoly_crypt_and_tag>
   1fb15:	48 83 c4 28          	add    $0x28,%rsp
   1fb19:	c3                   	retq   
   1fb1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001fb20 <mbedtls_chachapoly_auth_decrypt>:
   1fb20:	f3 0f 1e fa          	endbr64 
   1fb24:	41 55                	push   %r13
   1fb26:	41 54                	push   %r12
   1fb28:	49 89 f4             	mov    %rsi,%r12
   1fb2b:	55                   	push   %rbp
   1fb2c:	53                   	push   %rbx
   1fb2d:	4c 89 cb             	mov    %r9,%rbx
   1fb30:	4d 89 c1             	mov    %r8,%r9
   1fb33:	49 89 c8             	mov    %rcx,%r8
   1fb36:	48 89 d1             	mov    %rdx,%rcx
   1fb39:	48 89 f2             	mov    %rsi,%rdx
   1fb3c:	be 01 00 00 00       	mov    $0x1,%esi
   1fb41:	48 83 ec 30          	sub    $0x30,%rsp
   1fb45:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fb4c:	00 00 
   1fb4e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1fb53:	31 c0                	xor    %eax,%eax
   1fb55:	4c 8b 6c 24 60       	mov    0x60(%rsp),%r13
   1fb5a:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   1fb5f:	55                   	push   %rbp
   1fb60:	41 55                	push   %r13
   1fb62:	ff 74 24 68          	pushq  0x68(%rsp)
   1fb66:	e8 c5 fe ff ff       	callq  1fa30 <chachapoly_crypt_and_tag>
   1fb6b:	48 83 c4 20          	add    $0x20,%rsp
   1fb6f:	85 c0                	test   %eax,%eax
   1fb71:	75 20                	jne    1fb93 <mbedtls_chachapoly_auth_decrypt+0x73>
   1fb73:	31 c9                	xor    %ecx,%ecx
   1fb75:	0f 1f 00             	nopl   (%rax)
   1fb78:	0f b6 14 0b          	movzbl (%rbx,%rcx,1),%edx
   1fb7c:	32 54 0d 00          	xor    0x0(%rbp,%rcx,1),%dl
   1fb80:	48 83 c1 01          	add    $0x1,%rcx
   1fb84:	0f b6 d2             	movzbl %dl,%edx
   1fb87:	09 d0                	or     %edx,%eax
   1fb89:	48 83 f9 10          	cmp    $0x10,%rcx
   1fb8d:	75 e9                	jne    1fb78 <mbedtls_chachapoly_auth_decrypt+0x58>
   1fb8f:	85 c0                	test   %eax,%eax
   1fb91:	75 1b                	jne    1fbae <mbedtls_chachapoly_auth_decrypt+0x8e>
   1fb93:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1fb98:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1fb9f:	00 00 
   1fba1:	75 1d                	jne    1fbc0 <mbedtls_chachapoly_auth_decrypt+0xa0>
   1fba3:	48 83 c4 28          	add    $0x28,%rsp
   1fba7:	5b                   	pop    %rbx
   1fba8:	5d                   	pop    %rbp
   1fba9:	41 5c                	pop    %r12
   1fbab:	41 5d                	pop    %r13
   1fbad:	c3                   	retq   
   1fbae:	4c 89 e6             	mov    %r12,%rsi
   1fbb1:	4c 89 ef             	mov    %r13,%rdi
   1fbb4:	e8 67 56 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   1fbb9:	b8 aa ff ff ff       	mov    $0xffffffaa,%eax
   1fbbe:	eb d3                	jmp    1fb93 <mbedtls_chachapoly_auth_decrypt+0x73>
   1fbc0:	e8 9b 36 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1fbc5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fbcc:	00 00 00 00 

000000000001fbd0 <mbedtls_chachapoly_self_test>:
   1fbd0:	f3 0f 1e fa          	endbr64 
   1fbd4:	41 55                	push   %r13
   1fbd6:	41 54                	push   %r12
   1fbd8:	55                   	push   %rbp
   1fbd9:	53                   	push   %rbx
   1fbda:	89 fb                	mov    %edi,%ebx
   1fbdc:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
   1fbe3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fbea:	00 00 
   1fbec:	48 89 84 24 c8 01 00 	mov    %rax,0x1c8(%rsp)
   1fbf3:	00 
   1fbf4:	31 c0                	xor    %eax,%eax
   1fbf6:	85 ff                	test   %edi,%edi
   1fbf8:	0f 85 02 01 00 00    	jne    1fd00 <mbedtls_chachapoly_self_test+0x130>
   1fbfe:	49 89 e4             	mov    %rsp,%r12
   1fc01:	48 8d ac 24 88 00 00 	lea    0x88(%rsp),%rbp
   1fc08:	00 
   1fc09:	4c 89 e7             	mov    %r12,%rdi
   1fc0c:	e8 6f f3 ff ff       	callq  1ef80 <mbedtls_chacha20_init>
   1fc11:	48 89 ef             	mov    %rbp,%rdi
   1fc14:	e8 f7 04 00 00       	callq  20110 <mbedtls_poly1305_init>
   1fc19:	48 8d 35 80 71 00 00 	lea    0x7180(%rip),%rsi        # 26da0 <test_key>
   1fc20:	4c 89 e7             	mov    %r12,%rdi
   1fc23:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1fc2a:	00 00 00 00 00 
   1fc2f:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1fc36:	00 00 00 00 00 
   1fc3b:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1fc42:	00 00 00 00 00 
   1fc47:	e8 84 f3 ff ff       	callq  1efd0 <mbedtls_chacha20_setkey>
   1fc4c:	85 c0                	test   %eax,%eax
   1fc4e:	75 70                	jne    1fcc0 <mbedtls_chachapoly_self_test+0xf0>
   1fc50:	48 83 ec 08          	sub    $0x8,%rsp
   1fc54:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
   1fc5a:	31 f6                	xor    %esi,%esi
   1fc5c:	4c 89 e7             	mov    %r12,%rdi
   1fc5f:	48 8d 84 24 f8 00 00 	lea    0xf8(%rsp),%rax
   1fc66:	00 
   1fc67:	4c 8d 05 0a 71 00 00 	lea    0x710a(%rip),%r8        # 26d78 <test_aad>
   1fc6e:	ba 72 00 00 00       	mov    $0x72,%edx
   1fc73:	50                   	push   %rax
   1fc74:	48 8d 05 85 70 00 00 	lea    0x7085(%rip),%rax        # 26d00 <test_input>
   1fc7b:	48 8d 0d 06 71 00 00 	lea    0x7106(%rip),%rcx        # 26d88 <test_nonce>
   1fc82:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
   1fc89:	00 
   1fc8a:	41 55                	push   %r13
   1fc8c:	50                   	push   %rax
   1fc8d:	e8 9e fd ff ff       	callq  1fa30 <chachapoly_crypt_and_tag>
   1fc92:	48 83 c4 20          	add    $0x20,%rsp
   1fc96:	85 c0                	test   %eax,%eax
   1fc98:	75 26                	jne    1fcc0 <mbedtls_chachapoly_self_test+0xf0>
   1fc9a:	ba 72 00 00 00       	mov    $0x72,%edx
   1fc9f:	48 8d 35 da 6f 00 00 	lea    0x6fda(%rip),%rsi        # 26c80 <test_output>
   1fca6:	4c 89 ef             	mov    %r13,%rdi
   1fca9:	e8 f2 35 fe ff       	callq  32a0 <memcmp@plt>
   1fcae:	85 c0                	test   %eax,%eax
   1fcb0:	0f 84 1d 01 00 00    	je     1fdd3 <mbedtls_chachapoly_self_test+0x203>
   1fcb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fcbd:	00 00 00 
   1fcc0:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1fcc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fccd:	00 00 00 
   1fcd0:	48 8b 84 24 c8 01 00 	mov    0x1c8(%rsp),%rax
   1fcd7:	00 
   1fcd8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1fcdf:	00 00 
   1fce1:	0f 85 d9 01 00 00    	jne    1fec0 <mbedtls_chachapoly_self_test+0x2f0>
   1fce7:	48 81 c4 d8 01 00 00 	add    $0x1d8,%rsp
   1fcee:	44 89 e8             	mov    %r13d,%eax
   1fcf1:	5b                   	pop    %rbx
   1fcf2:	5d                   	pop    %rbp
   1fcf3:	41 5c                	pop    %r12
   1fcf5:	41 5d                	pop    %r13
   1fcf7:	c3                   	retq   
   1fcf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1fcff:	00 
   1fd00:	31 d2                	xor    %edx,%edx
   1fd02:	48 8d 35 b7 6e 00 00 	lea    0x6eb7(%rip),%rsi        # 26bc0 <test_keys+0x40>
   1fd09:	bf 01 00 00 00       	mov    $0x1,%edi
   1fd0e:	49 89 e4             	mov    %rsp,%r12
   1fd11:	e8 2a 36 fe ff       	callq  3340 <__printf_chk@plt>
   1fd16:	48 8d ac 24 88 00 00 	lea    0x88(%rsp),%rbp
   1fd1d:	00 
   1fd1e:	4c 89 e7             	mov    %r12,%rdi
   1fd21:	e8 5a f2 ff ff       	callq  1ef80 <mbedtls_chacha20_init>
   1fd26:	48 89 ef             	mov    %rbp,%rdi
   1fd29:	e8 e2 03 00 00       	callq  20110 <mbedtls_poly1305_init>
   1fd2e:	48 8d 35 6b 70 00 00 	lea    0x706b(%rip),%rsi        # 26da0 <test_key>
   1fd35:	4c 89 e7             	mov    %r12,%rdi
   1fd38:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1fd3f:	00 00 00 00 00 
   1fd44:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1fd4b:	00 00 00 00 00 
   1fd50:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1fd57:	00 00 00 00 00 
   1fd5c:	e8 6f f2 ff ff       	callq  1efd0 <mbedtls_chacha20_setkey>
   1fd61:	85 c0                	test   %eax,%eax
   1fd63:	0f 85 06 01 00 00    	jne    1fe6f <mbedtls_chachapoly_self_test+0x29f>
   1fd69:	48 83 ec 08          	sub    $0x8,%rsp
   1fd6d:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
   1fd73:	31 f6                	xor    %esi,%esi
   1fd75:	4c 89 e7             	mov    %r12,%rdi
   1fd78:	48 8d 84 24 f8 00 00 	lea    0xf8(%rsp),%rax
   1fd7f:	00 
   1fd80:	4c 8d 05 f1 6f 00 00 	lea    0x6ff1(%rip),%r8        # 26d78 <test_aad>
   1fd87:	ba 72 00 00 00       	mov    $0x72,%edx
   1fd8c:	50                   	push   %rax
   1fd8d:	48 8d 05 6c 6f 00 00 	lea    0x6f6c(%rip),%rax        # 26d00 <test_input>
   1fd94:	48 8d 0d ed 6f 00 00 	lea    0x6fed(%rip),%rcx        # 26d88 <test_nonce>
   1fd9b:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
   1fda2:	00 
   1fda3:	41 55                	push   %r13
   1fda5:	50                   	push   %rax
   1fda6:	e8 85 fc ff ff       	callq  1fa30 <chachapoly_crypt_and_tag>
   1fdab:	48 83 c4 20          	add    $0x20,%rsp
   1fdaf:	85 c0                	test   %eax,%eax
   1fdb1:	0f 85 d8 00 00 00    	jne    1fe8f <mbedtls_chachapoly_self_test+0x2bf>
   1fdb7:	ba 72 00 00 00       	mov    $0x72,%edx
   1fdbc:	48 8d 35 bd 6e 00 00 	lea    0x6ebd(%rip),%rsi        # 26c80 <test_output>
   1fdc3:	4c 89 ef             	mov    %r13,%rdi
   1fdc6:	e8 d5 34 fe ff       	callq  32a0 <memcmp@plt>
   1fdcb:	85 c0                	test   %eax,%eax
   1fdcd:	0f 85 dc 00 00 00    	jne    1feaf <mbedtls_chachapoly_self_test+0x2df>
   1fdd3:	48 8b 94 24 f8 00 00 	mov    0xf8(%rsp),%rdx
   1fdda:	00 
   1fddb:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   1fde2:	00 
   1fde3:	48 33 15 7e 6e 00 00 	xor    0x6e7e(%rip),%rdx        # 26c68 <test_mac+0x8>
   1fdea:	48 33 05 6f 6e 00 00 	xor    0x6e6f(%rip),%rax        # 26c60 <test_mac>
   1fdf1:	48 09 c2             	or     %rax,%rdx
   1fdf4:	75 5a                	jne    1fe50 <mbedtls_chachapoly_self_test+0x280>
   1fdf6:	4c 89 e7             	mov    %r12,%rdi
   1fdf9:	45 31 ed             	xor    %r13d,%r13d
   1fdfc:	e8 af f1 ff ff       	callq  1efb0 <mbedtls_chacha20_free>
   1fe01:	48 89 ef             	mov    %rbp,%rdi
   1fe04:	e8 17 03 00 00       	callq  20120 <mbedtls_poly1305_free>
   1fe09:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
   1fe10:	00 00 00 00 00 
   1fe15:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1fe1c:	00 00 00 00 00 
   1fe21:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
   1fe28:	00 00 00 00 00 
   1fe2d:	85 db                	test   %ebx,%ebx
   1fe2f:	0f 84 9b fe ff ff    	je     1fcd0 <mbedtls_chachapoly_self_test+0x100>
   1fe35:	48 8d 3d a6 33 00 00 	lea    0x33a6(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   1fe3c:	e8 bf 33 fe ff       	callq  3200 <puts@plt>
   1fe41:	bf 0a 00 00 00       	mov    $0xa,%edi
   1fe46:	e8 a5 33 fe ff       	callq  31f0 <putchar@plt>
   1fe4b:	e9 80 fe ff ff       	jmpq   1fcd0 <mbedtls_chachapoly_self_test+0x100>
   1fe50:	85 db                	test   %ebx,%ebx
   1fe52:	0f 84 68 fe ff ff    	je     1fcc0 <mbedtls_chachapoly_self_test+0xf0>
   1fe58:	48 8d 3d ae 6d 00 00 	lea    0x6dae(%rip),%rdi        # 26c0d <test_keys+0x8d>
   1fe5f:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1fe65:	e8 96 33 fe ff       	callq  3200 <puts@plt>
   1fe6a:	e9 61 fe ff ff       	jmpq   1fcd0 <mbedtls_chachapoly_self_test+0x100>
   1fe6f:	89 c2                	mov    %eax,%edx
   1fe71:	48 8d 35 65 6d 00 00 	lea    0x6d65(%rip),%rsi        # 26bdd <test_keys+0x5d>
   1fe78:	31 c0                	xor    %eax,%eax
   1fe7a:	bf 01 00 00 00       	mov    $0x1,%edi
   1fe7f:	e8 bc 34 fe ff       	callq  3340 <__printf_chk@plt>
   1fe84:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1fe8a:	e9 41 fe ff ff       	jmpq   1fcd0 <mbedtls_chachapoly_self_test+0x100>
   1fe8f:	89 c2                	mov    %eax,%edx
   1fe91:	48 8d 35 90 6d 00 00 	lea    0x6d90(%rip),%rsi        # 26c28 <test_keys+0xa8>
   1fe98:	31 c0                	xor    %eax,%eax
   1fe9a:	bf 01 00 00 00       	mov    $0x1,%edi
   1fe9f:	e8 9c 34 fe ff       	callq  3340 <__printf_chk@plt>
   1fea4:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1feaa:	e9 21 fe ff ff       	jmpq   1fcd0 <mbedtls_chachapoly_self_test+0x100>
   1feaf:	48 8d 3d 40 6d 00 00 	lea    0x6d40(%rip),%rdi        # 26bf6 <test_keys+0x76>
   1feb6:	e8 45 33 fe ff       	callq  3200 <puts@plt>
   1febb:	e9 00 fe ff ff       	jmpq   1fcc0 <mbedtls_chachapoly_self_test+0xf0>
   1fec0:	e8 9b 33 fe ff       	callq  3260 <__stack_chk_fail@plt>
   1fec5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fecc:	00 00 00 
   1fecf:	90                   	nop

000000000001fed0 <poly1305_process>:
   1fed0:	41 57                	push   %r15
   1fed2:	48 c1 e6 04          	shl    $0x4,%rsi
   1fed6:	41 56                	push   %r14
   1fed8:	41 55                	push   %r13
   1feda:	41 54                	push   %r12
   1fedc:	55                   	push   %rbp
   1fedd:	53                   	push   %rbx
   1fede:	48 89 fb             	mov    %rdi,%rbx
   1fee1:	44 8b 67 04          	mov    0x4(%rdi),%r12d
   1fee5:	44 8b 1f             	mov    (%rdi),%r11d
   1fee8:	8b 43 0c             	mov    0xc(%rbx),%eax
   1feeb:	44 8b 73 20          	mov    0x20(%rbx),%r14d
   1feef:	44 8b 7b 28          	mov    0x28(%rbx),%r15d
   1fef3:	45 89 e2             	mov    %r12d,%r10d
   1fef6:	44 8b 6b 2c          	mov    0x2c(%rbx),%r13d
   1fefa:	44 8b 43 30          	mov    0x30(%rbx),%r8d
   1fefe:	89 4c 24 f4          	mov    %ecx,-0xc(%rsp)
   1ff02:	41 c1 ea 02          	shr    $0x2,%r10d
   1ff06:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   1ff0b:	8b 7f 08             	mov    0x8(%rdi),%edi
   1ff0e:	8b 4b 24             	mov    0x24(%rbx),%ecx
   1ff11:	89 c3                	mov    %eax,%ebx
   1ff13:	44 89 5c 24 f0       	mov    %r11d,-0x10(%rsp)
   1ff18:	41 89 f9             	mov    %edi,%r9d
   1ff1b:	48 89 5c 24 e0       	mov    %rbx,-0x20(%rsp)
   1ff20:	89 fb                	mov    %edi,%ebx
   1ff22:	41 c1 e9 02          	shr    $0x2,%r9d
   1ff26:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
   1ff2b:	43 8d 1c 22          	lea    (%r10,%r12,1),%ebx
   1ff2f:	41 8d 2c 39          	lea    (%r9,%rdi,1),%ebp
   1ff33:	89 c7                	mov    %eax,%edi
   1ff35:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
   1ff3a:	c1 ef 02             	shr    $0x2,%edi
   1ff3d:	8d 1c 07             	lea    (%rdi,%rax,1),%ebx
   1ff40:	48 8d 04 32          	lea    (%rdx,%rsi,1),%rax
   1ff44:	48 89 44 24 d8       	mov    %rax,-0x28(%rsp)
   1ff49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ff50:	8b 72 04             	mov    0x4(%rdx),%esi
   1ff53:	44 8b 0a             	mov    (%rdx),%r9d
   1ff56:	89 c9                	mov    %ecx,%ecx
   1ff58:	45 89 ff             	mov    %r15d,%r15d
   1ff5b:	45 89 ed             	mov    %r13d,%r13d
   1ff5e:	48 01 f1             	add    %rsi,%rcx
   1ff61:	44 89 f6             	mov    %r14d,%esi
   1ff64:	4c 89 cf             	mov    %r9,%rdi
   1ff67:	4a 8d 04 0e          	lea    (%rsi,%r9,1),%rax
   1ff6b:	44 8b 4a 0c          	mov    0xc(%rdx),%r9d
   1ff6f:	48 c1 e8 20          	shr    $0x20,%rax
   1ff73:	48 01 c8             	add    %rcx,%rax
   1ff76:	8b 4a 08             	mov    0x8(%rdx),%ecx
   1ff79:	4d 01 cd             	add    %r9,%r13
   1ff7c:	48 89 c6             	mov    %rax,%rsi
   1ff7f:	89 c0                	mov    %eax,%eax
   1ff81:	49 01 cf             	add    %rcx,%r15
   1ff84:	48 c1 ee 20          	shr    $0x20,%rsi
   1ff88:	49 89 c2             	mov    %rax,%r10
   1ff8b:	4c 01 fe             	add    %r15,%rsi
   1ff8e:	4c 8b 7c 24 e8       	mov    -0x18(%rsp),%r15
   1ff93:	4d 0f af d4          	imul   %r12,%r10
   1ff97:	48 89 f1             	mov    %rsi,%rcx
   1ff9a:	89 f6                	mov    %esi,%esi
   1ff9c:	48 c1 e9 20          	shr    $0x20,%rcx
   1ffa0:	4c 01 e9             	add    %r13,%rcx
   1ffa3:	46 8d 2c 37          	lea    (%rdi,%r14,1),%r13d
   1ffa7:	4c 89 df             	mov    %r11,%rdi
   1ffaa:	49 89 c9             	mov    %rcx,%r9
   1ffad:	49 0f af fd          	imul   %r13,%rdi
   1ffb1:	89 c9                	mov    %ecx,%ecx
   1ffb3:	49 c1 e9 20          	shr    $0x20,%r9
   1ffb7:	44 03 4c 24 f4       	add    -0xc(%rsp),%r9d
   1ffbc:	45 01 c8             	add    %r9d,%r8d
   1ffbf:	49 89 c1             	mov    %rax,%r9
   1ffc2:	4c 0f af cb          	imul   %rbx,%r9
   1ffc6:	45 89 c6             	mov    %r8d,%r14d
   1ffc9:	49 01 f9             	add    %rdi,%r9
   1ffcc:	48 89 f7             	mov    %rsi,%rdi
   1ffcf:	48 0f af fd          	imul   %rbp,%rdi
   1ffd3:	4c 01 cf             	add    %r9,%rdi
   1ffd6:	4c 8b 4c 24 d0       	mov    -0x30(%rsp),%r9
   1ffdb:	4c 0f af c9          	imul   %rcx,%r9
   1ffdf:	4c 01 cf             	add    %r9,%rdi
   1ffe2:	4d 89 f9             	mov    %r15,%r9
   1ffe5:	4d 0f af cd          	imul   %r13,%r9
   1ffe9:	4c 0f af f8          	imul   %rax,%r15
   1ffed:	4d 01 d1             	add    %r10,%r9
   1fff0:	49 89 f2             	mov    %rsi,%r10
   1fff3:	4d 0f af d3          	imul   %r11,%r10
   1fff7:	4d 01 d1             	add    %r10,%r9
   1fffa:	49 89 ca             	mov    %rcx,%r10
   1fffd:	4c 0f af d3          	imul   %rbx,%r10
   20001:	4d 01 ca             	add    %r9,%r10
   20004:	4d 89 f1             	mov    %r14,%r9
   20007:	4c 0f af cd          	imul   %rbp,%r9
   2000b:	4d 01 ca             	add    %r9,%r10
   2000e:	4c 8b 4c 24 e0       	mov    -0x20(%rsp),%r9
   20013:	4d 0f af cd          	imul   %r13,%r9
   20017:	4d 01 cf             	add    %r9,%r15
   2001a:	49 89 f1             	mov    %rsi,%r9
   2001d:	4d 0f af cc          	imul   %r12,%r9
   20021:	4d 01 cf             	add    %r9,%r15
   20024:	4d 0f af ec          	imul   %r12,%r13
   20028:	49 89 c9             	mov    %rcx,%r9
   2002b:	49 0f af c3          	imul   %r11,%rax
   2002f:	48 0f af f3          	imul   %rbx,%rsi
   20033:	48 0f af cd          	imul   %rbp,%rcx
   20037:	4d 0f af cb          	imul   %r11,%r9
   2003b:	4c 01 e8             	add    %r13,%rax
   2003e:	48 01 f0             	add    %rsi,%rax
   20041:	44 0f af 44 24 f0    	imul   -0x10(%rsp),%r8d
   20047:	48 01 c8             	add    %rcx,%rax
   2004a:	48 89 f9             	mov    %rdi,%rcx
   2004d:	89 ff                	mov    %edi,%edi
   2004f:	4d 01 f9             	add    %r15,%r9
   20052:	4d 89 f7             	mov    %r14,%r15
   20055:	48 c1 e9 20          	shr    $0x20,%rcx
   20059:	4c 0f af 74 24 d0    	imul   -0x30(%rsp),%r14
   2005f:	48 01 c8             	add    %rcx,%rax
   20062:	4c 0f af fb          	imul   %rbx,%r15
   20066:	4a 8d 0c 30          	lea    (%rax,%r14,1),%rcx
   2006a:	48 89 c8             	mov    %rcx,%rax
   2006d:	4d 01 f9             	add    %r15,%r9
   20070:	89 c9                	mov    %ecx,%ecx
   20072:	48 c1 e8 20          	shr    $0x20,%rax
   20076:	49 01 c2             	add    %rax,%r10
   20079:	4c 89 d0             	mov    %r10,%rax
   2007c:	45 89 d2             	mov    %r10d,%r10d
   2007f:	48 c1 e8 20          	shr    $0x20,%rax
   20083:	49 01 c1             	add    %rax,%r9
   20086:	4c 89 c8             	mov    %r9,%rax
   20089:	45 89 c9             	mov    %r9d,%r9d
   2008c:	48 c1 e8 20          	shr    $0x20,%rax
   20090:	41 01 c0             	add    %eax,%r8d
   20093:	44 89 c0             	mov    %r8d,%eax
   20096:	44 89 c6             	mov    %r8d,%esi
   20099:	83 e6 fc             	and    $0xfffffffc,%esi
   2009c:	c1 e8 02             	shr    $0x2,%eax
   2009f:	48 01 f0             	add    %rsi,%rax
   200a2:	48 01 c7             	add    %rax,%rdi
   200a5:	48 89 f8             	mov    %rdi,%rax
   200a8:	41 89 fe             	mov    %edi,%r14d
   200ab:	48 c1 e8 20          	shr    $0x20,%rax
   200af:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   200b3:	48 89 f0             	mov    %rsi,%rax
   200b6:	89 f1                	mov    %esi,%ecx
   200b8:	48 c1 e8 20          	shr    $0x20,%rax
   200bc:	49 01 c2             	add    %rax,%r10
   200bf:	4c 89 d0             	mov    %r10,%rax
   200c2:	45 89 d7             	mov    %r10d,%r15d
   200c5:	48 c1 e8 20          	shr    $0x20,%rax
   200c9:	49 01 c1             	add    %rax,%r9
   200cc:	4c 89 c8             	mov    %r9,%rax
   200cf:	45 89 cd             	mov    %r9d,%r13d
   200d2:	48 c1 e8 20          	shr    $0x20,%rax
   200d6:	41 83 e0 03          	and    $0x3,%r8d
   200da:	48 83 c2 10          	add    $0x10,%rdx
   200de:	4c 01 c0             	add    %r8,%rax
   200e1:	41 89 c0             	mov    %eax,%r8d
   200e4:	48 39 54 24 d8       	cmp    %rdx,-0x28(%rsp)
   200e9:	0f 85 61 fe ff ff    	jne    1ff50 <poly1305_process+0x80>
   200ef:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
   200f4:	89 7a 20             	mov    %edi,0x20(%rdx)
   200f7:	89 72 24             	mov    %esi,0x24(%rdx)
   200fa:	44 89 52 28          	mov    %r10d,0x28(%rdx)
   200fe:	44 89 4a 2c          	mov    %r9d,0x2c(%rdx)
   20102:	89 42 30             	mov    %eax,0x30(%rdx)
   20105:	5b                   	pop    %rbx
   20106:	5d                   	pop    %rbp
   20107:	41 5c                	pop    %r12
   20109:	41 5d                	pop    %r13
   2010b:	41 5e                	pop    %r14
   2010d:	41 5f                	pop    %r15
   2010f:	c3                   	retq   

0000000000020110 <mbedtls_poly1305_init>:
   20110:	f3 0f 1e fa          	endbr64 
   20114:	be 50 00 00 00       	mov    $0x50,%esi
   20119:	e9 02 51 fe ff       	jmpq   5220 <mbedtls_platform_zeroize>
   2011e:	66 90                	xchg   %ax,%ax

0000000000020120 <mbedtls_poly1305_free>:
   20120:	f3 0f 1e fa          	endbr64 
   20124:	48 85 ff             	test   %rdi,%rdi
   20127:	74 0f                	je     20138 <mbedtls_poly1305_free+0x18>
   20129:	be 50 00 00 00       	mov    $0x50,%esi
   2012e:	e9 ed 50 fe ff       	jmpq   5220 <mbedtls_platform_zeroize>
   20133:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20138:	c3                   	retq   
   20139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000020140 <mbedtls_poly1305_starts>:
   20140:	f3 0f 1e fa          	endbr64 
   20144:	53                   	push   %rbx
   20145:	8b 06                	mov    (%rsi),%eax
   20147:	48 89 fb             	mov    %rdi,%rbx
   2014a:	48 8d 7f 34          	lea    0x34(%rdi),%rdi
   2014e:	25 ff ff ff 0f       	and    $0xfffffff,%eax
   20153:	89 47 cc             	mov    %eax,-0x34(%rdi)
   20156:	8b 46 04             	mov    0x4(%rsi),%eax
   20159:	25 fc ff ff 0f       	and    $0xffffffc,%eax
   2015e:	89 47 d0             	mov    %eax,-0x30(%rdi)
   20161:	8b 46 08             	mov    0x8(%rsi),%eax
   20164:	25 fc ff ff 0f       	and    $0xffffffc,%eax
   20169:	89 47 d4             	mov    %eax,-0x2c(%rdi)
   2016c:	8b 46 0c             	mov    0xc(%rsi),%eax
   2016f:	25 fc ff ff 0f       	and    $0xffffffc,%eax
   20174:	89 47 d8             	mov    %eax,-0x28(%rdi)
   20177:	8b 46 10             	mov    0x10(%rsi),%eax
   2017a:	89 47 dc             	mov    %eax,-0x24(%rdi)
   2017d:	8b 46 14             	mov    0x14(%rsi),%eax
   20180:	89 47 e0             	mov    %eax,-0x20(%rdi)
   20183:	8b 46 18             	mov    0x18(%rsi),%eax
   20186:	89 47 e4             	mov    %eax,-0x1c(%rdi)
   20189:	8b 46 1c             	mov    0x1c(%rsi),%eax
   2018c:	be 10 00 00 00       	mov    $0x10,%esi
   20191:	48 c7 47 ec 00 00 00 	movq   $0x0,-0x14(%rdi)
   20198:	00 
   20199:	89 47 e8             	mov    %eax,-0x18(%rdi)
   2019c:	48 c7 47 f4 00 00 00 	movq   $0x0,-0xc(%rdi)
   201a3:	00 
   201a4:	c7 47 fc 00 00 00 00 	movl   $0x0,-0x4(%rdi)
   201ab:	e8 70 50 fe ff       	callq  5220 <mbedtls_platform_zeroize>
   201b0:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   201b7:	00 
   201b8:	31 c0                	xor    %eax,%eax
   201ba:	5b                   	pop    %rbx
   201bb:	c3                   	retq   
   201bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000201c0 <mbedtls_poly1305_update>:
   201c0:	f3 0f 1e fa          	endbr64 
   201c4:	48 85 d2             	test   %rdx,%rdx
   201c7:	0f 84 fb 00 00 00    	je     202c8 <mbedtls_poly1305_update+0x108>
   201cd:	41 56                	push   %r14
   201cf:	49 89 f6             	mov    %rsi,%r14
   201d2:	41 55                	push   %r13
   201d4:	49 89 fd             	mov    %rdi,%r13
   201d7:	41 54                	push   %r12
   201d9:	55                   	push   %rbp
   201da:	53                   	push   %rbx
   201db:	4c 8b 67 48          	mov    0x48(%rdi),%r12
   201df:	48 89 d3             	mov    %rdx,%rbx
   201e2:	4d 85 e4             	test   %r12,%r12
   201e5:	0f 84 e5 00 00 00    	je     202d0 <mbedtls_poly1305_update+0x110>
   201eb:	bd 10 00 00 00       	mov    $0x10,%ebp
   201f0:	4a 8d 7c 27 34       	lea    0x34(%rdi,%r12,1),%rdi
   201f5:	4c 29 e5             	sub    %r12,%rbp
   201f8:	48 39 ea             	cmp    %rbp,%rdx
   201fb:	0f 82 07 01 00 00    	jb     20308 <mbedtls_poly1305_update+0x148>
   20201:	48 89 ea             	mov    %rbp,%rdx
   20204:	49 8d 5c 1c f0       	lea    -0x10(%r12,%rbx,1),%rbx
   20209:	e8 02 31 fe ff       	callq  3310 <memcpy@plt>
   2020e:	49 c7 45 48 00 00 00 	movq   $0x0,0x48(%r13)
   20215:	00 
   20216:	49 8d 55 34          	lea    0x34(%r13),%rdx
   2021a:	4c 89 ef             	mov    %r13,%rdi
   2021d:	b9 01 00 00 00       	mov    $0x1,%ecx
   20222:	be 01 00 00 00       	mov    $0x1,%esi
   20227:	e8 a4 fc ff ff       	callq  1fed0 <poly1305_process>
   2022c:	48 83 fb 0f          	cmp    $0xf,%rbx
   20230:	76 28                	jbe    2025a <mbedtls_poly1305_update+0x9a>
   20232:	49 8d 14 2e          	lea    (%r14,%rbp,1),%rdx
   20236:	49 89 ec             	mov    %rbp,%r12
   20239:	48 89 de             	mov    %rbx,%rsi
   2023c:	48 89 dd             	mov    %rbx,%rbp
   2023f:	b9 01 00 00 00       	mov    $0x1,%ecx
   20244:	4c 89 ef             	mov    %r13,%rdi
   20247:	48 c1 ee 04          	shr    $0x4,%rsi
   2024b:	48 83 e5 f0          	and    $0xfffffffffffffff0,%rbp
   2024f:	83 e3 0f             	and    $0xf,%ebx
   20252:	e8 79 fc ff ff       	callq  1fed0 <poly1305_process>
   20257:	4c 01 e5             	add    %r12,%rbp
   2025a:	48 85 db             	test   %rbx,%rbx
   2025d:	74 58                	je     202b7 <mbedtls_poly1305_update+0xf7>
   2025f:	49 01 ee             	add    %rbp,%r14
   20262:	49 89 5d 48          	mov    %rbx,0x48(%r13)
   20266:	49 8d 4d 34          	lea    0x34(%r13),%rcx
   2026a:	89 d8                	mov    %ebx,%eax
   2026c:	83 fb 08             	cmp    $0x8,%ebx
   2026f:	72 6f                	jb     202e0 <mbedtls_poly1305_update+0x120>
   20271:	49 8b 06             	mov    (%r14),%rax
   20274:	49 83 c5 3c          	add    $0x3c,%r13
   20278:	4c 89 f6             	mov    %r14,%rsi
   2027b:	49 89 45 f8          	mov    %rax,-0x8(%r13)
   2027f:	89 d8                	mov    %ebx,%eax
   20281:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   20285:	49 8b 54 06 f8       	mov    -0x8(%r14,%rax,1),%rdx
   2028a:	48 89 54 01 f8       	mov    %rdx,-0x8(%rcx,%rax,1)
   2028f:	4c 29 e9             	sub    %r13,%rcx
   20292:	8d 04 0b             	lea    (%rbx,%rcx,1),%eax
   20295:	48 29 ce             	sub    %rcx,%rsi
   20298:	83 e0 f8             	and    $0xfffffff8,%eax
   2029b:	83 f8 08             	cmp    $0x8,%eax
   2029e:	72 17                	jb     202b7 <mbedtls_poly1305_update+0xf7>
   202a0:	83 e0 f8             	and    $0xfffffff8,%eax
   202a3:	31 d2                	xor    %edx,%edx
   202a5:	89 d1                	mov    %edx,%ecx
   202a7:	83 c2 08             	add    $0x8,%edx
   202aa:	48 8b 3c 0e          	mov    (%rsi,%rcx,1),%rdi
   202ae:	49 89 7c 0d 00       	mov    %rdi,0x0(%r13,%rcx,1)
   202b3:	39 c2                	cmp    %eax,%edx
   202b5:	72 ee                	jb     202a5 <mbedtls_poly1305_update+0xe5>
   202b7:	5b                   	pop    %rbx
   202b8:	31 c0                	xor    %eax,%eax
   202ba:	5d                   	pop    %rbp
   202bb:	41 5c                	pop    %r12
   202bd:	41 5d                	pop    %r13
   202bf:	41 5e                	pop    %r14
   202c1:	c3                   	retq   
   202c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   202c8:	31 c0                	xor    %eax,%eax
   202ca:	c3                   	retq   
   202cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   202d0:	48 89 f2             	mov    %rsi,%rdx
   202d3:	48 83 fb 0f          	cmp    $0xf,%rbx
   202d7:	0f 87 5c ff ff ff    	ja     20239 <mbedtls_poly1305_update+0x79>
   202dd:	eb 83                	jmp    20262 <mbedtls_poly1305_update+0xa2>
   202df:	90                   	nop
   202e0:	83 e3 04             	and    $0x4,%ebx
   202e3:	75 3b                	jne    20320 <mbedtls_poly1305_update+0x160>
   202e5:	85 c0                	test   %eax,%eax
   202e7:	74 ce                	je     202b7 <mbedtls_poly1305_update+0xf7>
   202e9:	41 0f b6 16          	movzbl (%r14),%edx
   202ed:	41 88 55 34          	mov    %dl,0x34(%r13)
   202f1:	a8 02                	test   $0x2,%al
   202f3:	74 c2                	je     202b7 <mbedtls_poly1305_update+0xf7>
   202f5:	89 c2                	mov    %eax,%edx
   202f7:	41 0f b7 44 16 fe    	movzwl -0x2(%r14,%rdx,1),%eax
   202fd:	66 89 44 11 fe       	mov    %ax,-0x2(%rcx,%rdx,1)
   20302:	eb b3                	jmp    202b7 <mbedtls_poly1305_update+0xf7>
   20304:	0f 1f 40 00          	nopl   0x0(%rax)
   20308:	e8 03 30 fe ff       	callq  3310 <memcpy@plt>
   2030d:	49 01 5d 48          	add    %rbx,0x48(%r13)
   20311:	31 c0                	xor    %eax,%eax
   20313:	5b                   	pop    %rbx
   20314:	5d                   	pop    %rbp
   20315:	41 5c                	pop    %r12
   20317:	41 5d                	pop    %r13
   20319:	41 5e                	pop    %r14
   2031b:	c3                   	retq   
   2031c:	0f 1f 40 00          	nopl   0x0(%rax)
   20320:	41 8b 16             	mov    (%r14),%edx
   20323:	41 89 55 34          	mov    %edx,0x34(%r13)
   20327:	89 c2                	mov    %eax,%edx
   20329:	41 8b 44 16 fc       	mov    -0x4(%r14,%rdx,1),%eax
   2032e:	89 44 11 fc          	mov    %eax,-0x4(%rcx,%rdx,1)
   20332:	eb 83                	jmp    202b7 <mbedtls_poly1305_update+0xf7>
   20334:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2033b:	00 00 00 00 
   2033f:	90                   	nop

0000000000020340 <mbedtls_poly1305_finish>:
   20340:	f3 0f 1e fa          	endbr64 
   20344:	41 55                	push   %r13
   20346:	41 54                	push   %r12
   20348:	55                   	push   %rbp
   20349:	48 89 f5             	mov    %rsi,%rbp
   2034c:	53                   	push   %rbx
   2034d:	48 89 fb             	mov    %rdi,%rbx
   20350:	48 83 ec 08          	sub    $0x8,%rsp
   20354:	48 8b 47 48          	mov    0x48(%rdi),%rax
   20358:	48 85 c0             	test   %rax,%rax
   2035b:	0f 85 c7 00 00 00    	jne    20428 <mbedtls_poly1305_finish+0xe8>
   20361:	8b 4b 20             	mov    0x20(%rbx),%ecx
   20364:	8b 53 24             	mov    0x24(%rbx),%edx
   20367:	8b 73 28             	mov    0x28(%rbx),%esi
   2036a:	44 8b 5b 2c          	mov    0x2c(%rbx),%r11d
   2036e:	49 89 cd             	mov    %rcx,%r13
   20371:	48 83 c1 05          	add    $0x5,%rcx
   20375:	49 89 d0             	mov    %rdx,%r8
   20378:	48 c1 e9 20          	shr    $0x20,%rcx
   2037c:	48 89 f0             	mov    %rsi,%rax
   2037f:	45 8d 4d 05          	lea    0x5(%r13),%r9d
   20383:	4d 89 dc             	mov    %r11,%r12
   20386:	48 01 d1             	add    %rdx,%rcx
   20389:	48 89 ca             	mov    %rcx,%rdx
   2038c:	48 c1 ea 20          	shr    $0x20,%rdx
   20390:	48 01 f2             	add    %rsi,%rdx
   20393:	48 89 d6             	mov    %rdx,%rsi
   20396:	48 c1 ee 20          	shr    $0x20,%rsi
   2039a:	49 01 f3             	add    %rsi,%r11
   2039d:	4d 89 da             	mov    %r11,%r10
   203a0:	49 c1 ea 20          	shr    $0x20,%r10
   203a4:	44 03 53 30          	add    0x30(%rbx),%r10d
   203a8:	41 c1 ea 02          	shr    $0x2,%r10d
   203ac:	44 89 d6             	mov    %r10d,%esi
   203af:	41 8d 7a ff          	lea    -0x1(%r10),%edi
   203b3:	45 89 ea             	mov    %r13d,%r10d
   203b6:	f7 de                	neg    %esi
   203b8:	41 21 f8             	and    %edi,%r8d
   203bb:	41 21 fa             	and    %edi,%r10d
   203be:	21 f8                	and    %edi,%eax
   203c0:	21 f1                	and    %esi,%ecx
   203c2:	41 21 f1             	and    %esi,%r9d
   203c5:	44 21 e7             	and    %r12d,%edi
   203c8:	44 8b 63 10          	mov    0x10(%rbx),%r12d
   203cc:	44 09 c1             	or     %r8d,%ecx
   203cf:	44 8b 43 14          	mov    0x14(%rbx),%r8d
   203d3:	45 09 d1             	or     %r10d,%r9d
   203d6:	21 f2                	and    %esi,%edx
   203d8:	09 c2                	or     %eax,%edx
   203da:	8b 43 18             	mov    0x18(%rbx),%eax
   203dd:	44 21 de             	and    %r11d,%esi
   203e0:	49 01 c8             	add    %rcx,%r8
   203e3:	44 89 c9             	mov    %r9d,%ecx
   203e6:	09 fe                	or     %edi,%esi
   203e8:	45 01 e1             	add    %r12d,%r9d
   203eb:	4c 01 e1             	add    %r12,%rcx
   203ee:	48 01 d0             	add    %rdx,%rax
   203f1:	03 73 1c             	add    0x1c(%rbx),%esi
   203f4:	44 89 4d 00          	mov    %r9d,0x0(%rbp)
   203f8:	48 c1 e9 20          	shr    $0x20,%rcx
   203fc:	4c 01 c1             	add    %r8,%rcx
   203ff:	48 89 ca             	mov    %rcx,%rdx
   20402:	89 4d 04             	mov    %ecx,0x4(%rbp)
   20405:	48 c1 ea 20          	shr    $0x20,%rdx
   20409:	48 01 d0             	add    %rdx,%rax
   2040c:	89 45 08             	mov    %eax,0x8(%rbp)
   2040f:	48 c1 e8 20          	shr    $0x20,%rax
   20413:	01 f0                	add    %esi,%eax
   20415:	89 45 0c             	mov    %eax,0xc(%rbp)
   20418:	48 83 c4 08          	add    $0x8,%rsp
   2041c:	31 c0                	xor    %eax,%eax
   2041e:	5b                   	pop    %rbx
   2041f:	5d                   	pop    %rbp
   20420:	41 5c                	pop    %r12
   20422:	41 5d                	pop    %r13
   20424:	c3                   	retq   
   20425:	0f 1f 00             	nopl   (%rax)
   20428:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2042c:	c6 44 07 34 01       	movb   $0x1,0x34(%rdi,%rax,1)
   20431:	ba 10 00 00 00       	mov    $0x10,%edx
   20436:	31 f6                	xor    %esi,%esi
   20438:	48 89 4f 48          	mov    %rcx,0x48(%rdi)
   2043c:	48 29 ca             	sub    %rcx,%rdx
   2043f:	48 8d 7c 07 35       	lea    0x35(%rdi,%rax,1),%rdi
   20444:	e8 47 2e fe ff       	callq  3290 <memset@plt>
   20449:	48 8d 53 34          	lea    0x34(%rbx),%rdx
   2044d:	31 c9                	xor    %ecx,%ecx
   2044f:	be 01 00 00 00       	mov    $0x1,%esi
   20454:	48 89 df             	mov    %rbx,%rdi
   20457:	e8 74 fa ff ff       	callq  1fed0 <poly1305_process>
   2045c:	e9 00 ff ff ff       	jmpq   20361 <mbedtls_poly1305_finish+0x21>
   20461:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   20468:	00 00 00 00 
   2046c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020470 <mbedtls_poly1305_mac>:
   20470:	f3 0f 1e fa          	endbr64 
   20474:	41 57                	push   %r15
   20476:	49 89 d7             	mov    %rdx,%r15
   20479:	41 56                	push   %r14
   2047b:	49 89 f6             	mov    %rsi,%r14
   2047e:	be 50 00 00 00       	mov    $0x50,%esi
   20483:	41 55                	push   %r13
   20485:	49 89 cd             	mov    %rcx,%r13
   20488:	41 54                	push   %r12
   2048a:	49 89 fc             	mov    %rdi,%r12
   2048d:	55                   	push   %rbp
   2048e:	48 83 ec 60          	sub    $0x60,%rsp
   20492:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20499:	00 00 
   2049b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   204a0:	31 c0                	xor    %eax,%eax
   204a2:	48 89 e5             	mov    %rsp,%rbp
   204a5:	48 89 ef             	mov    %rbp,%rdi
   204a8:	e8 73 4d fe ff       	callq  5220 <mbedtls_platform_zeroize>
   204ad:	4c 89 e6             	mov    %r12,%rsi
   204b0:	48 89 ef             	mov    %rbp,%rdi
   204b3:	e8 88 fc ff ff       	callq  20140 <mbedtls_poly1305_starts>
   204b8:	41 89 c4             	mov    %eax,%r12d
   204bb:	85 c0                	test   %eax,%eax
   204bd:	74 31                	je     204f0 <mbedtls_poly1305_mac+0x80>
   204bf:	be 50 00 00 00       	mov    $0x50,%esi
   204c4:	48 89 ef             	mov    %rbp,%rdi
   204c7:	e8 54 4d fe ff       	callq  5220 <mbedtls_platform_zeroize>
   204cc:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   204d1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   204d8:	00 00 
   204da:	75 39                	jne    20515 <mbedtls_poly1305_mac+0xa5>
   204dc:	48 83 c4 60          	add    $0x60,%rsp
   204e0:	44 89 e0             	mov    %r12d,%eax
   204e3:	5d                   	pop    %rbp
   204e4:	41 5c                	pop    %r12
   204e6:	41 5d                	pop    %r13
   204e8:	41 5e                	pop    %r14
   204ea:	41 5f                	pop    %r15
   204ec:	c3                   	retq   
   204ed:	0f 1f 00             	nopl   (%rax)
   204f0:	4c 89 fa             	mov    %r15,%rdx
   204f3:	4c 89 f6             	mov    %r14,%rsi
   204f6:	48 89 ef             	mov    %rbp,%rdi
   204f9:	e8 c2 fc ff ff       	callq  201c0 <mbedtls_poly1305_update>
   204fe:	41 89 c4             	mov    %eax,%r12d
   20501:	85 c0                	test   %eax,%eax
   20503:	75 ba                	jne    204bf <mbedtls_poly1305_mac+0x4f>
   20505:	4c 89 ee             	mov    %r13,%rsi
   20508:	48 89 ef             	mov    %rbp,%rdi
   2050b:	e8 30 fe ff ff       	callq  20340 <mbedtls_poly1305_finish>
   20510:	41 89 c4             	mov    %eax,%r12d
   20513:	eb aa                	jmp    204bf <mbedtls_poly1305_mac+0x4f>
   20515:	e8 46 2d fe ff       	callq  3260 <__stack_chk_fail@plt>
   2051a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020520 <mbedtls_poly1305_self_test>:
   20520:	f3 0f 1e fa          	endbr64 
   20524:	41 55                	push   %r13
   20526:	41 54                	push   %r12
   20528:	48 83 ec 28          	sub    $0x28,%rsp
   2052c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20533:	00 00 
   20535:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2053a:	31 c0                	xor    %eax,%eax
   2053c:	85 ff                	test   %edi,%edi
   2053e:	0f 85 bc 00 00 00    	jne    20600 <mbedtls_poly1305_self_test+0xe0>
   20544:	49 89 e5             	mov    %rsp,%r13
   20547:	ba 22 00 00 00       	mov    $0x22,%edx
   2054c:	48 8d 35 cd 68 00 00 	lea    0x68cd(%rip),%rsi        # 26e20 <test_data>
   20553:	4c 89 e9             	mov    %r13,%rcx
   20556:	48 8d 3d c3 69 00 00 	lea    0x69c3(%rip),%rdi        # 26f20 <test_keys>
   2055d:	e8 0e ff ff ff       	callq  20470 <mbedtls_poly1305_mac>
   20562:	85 c0                	test   %eax,%eax
   20564:	0f 85 86 01 00 00    	jne    206f0 <mbedtls_poly1305_self_test+0x1d0>
   2056a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2056f:	48 8b 04 24          	mov    (%rsp),%rax
   20573:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   20579:	48 33 15 88 68 00 00 	xor    0x6888(%rip),%rdx        # 26e08 <test_mac+0x8>
   20580:	48 33 05 79 68 00 00 	xor    0x6879(%rip),%rax        # 26e00 <test_mac>
   20587:	48 09 c2             	or     %rax,%rdx
   2058a:	74 24                	je     205b0 <mbedtls_poly1305_self_test+0x90>
   2058c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   20591:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   20598:	00 00 
   2059a:	0f 85 7b 01 00 00    	jne    2071b <mbedtls_poly1305_self_test+0x1fb>
   205a0:	48 83 c4 28          	add    $0x28,%rsp
   205a4:	44 89 e0             	mov    %r12d,%eax
   205a7:	41 5c                	pop    %r12
   205a9:	41 5d                	pop    %r13
   205ab:	c3                   	retq   
   205ac:	0f 1f 40 00          	nopl   0x0(%rax)
   205b0:	4c 89 e9             	mov    %r13,%rcx
   205b3:	ba 7f 00 00 00       	mov    $0x7f,%edx
   205b8:	48 8d 35 e0 68 00 00 	lea    0x68e0(%rip),%rsi        # 26e9f <test_data+0x7f>
   205bf:	48 8d 3d 7a 69 00 00 	lea    0x697a(%rip),%rdi        # 26f40 <test_keys+0x20>
   205c6:	e8 a5 fe ff ff       	callq  20470 <mbedtls_poly1305_mac>
   205cb:	85 c0                	test   %eax,%eax
   205cd:	0f 85 1d 01 00 00    	jne    206f0 <mbedtls_poly1305_self_test+0x1d0>
   205d3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   205d8:	48 8b 04 24          	mov    (%rsp),%rax
   205dc:	45 31 e4             	xor    %r12d,%r12d
   205df:	48 33 15 32 68 00 00 	xor    0x6832(%rip),%rdx        # 26e18 <test_mac+0x18>
   205e6:	48 33 05 23 68 00 00 	xor    0x6823(%rip),%rax        # 26e10 <test_mac+0x10>
   205ed:	48 09 c2             	or     %rax,%rdx
   205f0:	41 0f 94 c4          	sete   %r12b
   205f4:	41 83 ec 01          	sub    $0x1,%r12d
   205f8:	eb 92                	jmp    2058c <mbedtls_poly1305_self_test+0x6c>
   205fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20600:	31 d2                	xor    %edx,%edx
   20602:	48 8d 35 b7 67 00 00 	lea    0x67b7(%rip),%rsi        # 26dc0 <test_key+0x20>
   20609:	bf 01 00 00 00       	mov    $0x1,%edi
   2060e:	49 89 e5             	mov    %rsp,%r13
   20611:	e8 2a 2d fe ff       	callq  3340 <__printf_chk@plt>
   20616:	4c 89 e9             	mov    %r13,%rcx
   20619:	ba 22 00 00 00       	mov    $0x22,%edx
   2061e:	48 8d 35 fb 67 00 00 	lea    0x67fb(%rip),%rsi        # 26e20 <test_data>
   20625:	48 8d 3d f4 68 00 00 	lea    0x68f4(%rip),%rdi        # 26f20 <test_keys>
   2062c:	e8 3f fe ff ff       	callq  20470 <mbedtls_poly1305_mac>
   20631:	85 c0                	test   %eax,%eax
   20633:	0f 85 c2 00 00 00    	jne    206fb <mbedtls_poly1305_self_test+0x1db>
   20639:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2063e:	48 8b 04 24          	mov    (%rsp),%rax
   20642:	48 33 15 bf 67 00 00 	xor    0x67bf(%rip),%rdx        # 26e08 <test_mac+0x8>
   20649:	48 33 05 b0 67 00 00 	xor    0x67b0(%rip),%rax        # 26e00 <test_mac>
   20650:	48 09 c2             	or     %rax,%rdx
   20653:	75 5f                	jne    206b4 <mbedtls_poly1305_self_test+0x194>
   20655:	48 8d 3d 86 2b 00 00 	lea    0x2b86(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   2065c:	e8 9f 2b fe ff       	callq  3200 <puts@plt>
   20661:	ba 01 00 00 00       	mov    $0x1,%edx
   20666:	48 8d 35 53 67 00 00 	lea    0x6753(%rip),%rsi        # 26dc0 <test_key+0x20>
   2066d:	31 c0                	xor    %eax,%eax
   2066f:	bf 01 00 00 00       	mov    $0x1,%edi
   20674:	e8 c7 2c fe ff       	callq  3340 <__printf_chk@plt>
   20679:	4c 89 e9             	mov    %r13,%rcx
   2067c:	ba 7f 00 00 00       	mov    $0x7f,%edx
   20681:	48 8d 35 17 68 00 00 	lea    0x6817(%rip),%rsi        # 26e9f <test_data+0x7f>
   20688:	48 8d 3d b1 68 00 00 	lea    0x68b1(%rip),%rdi        # 26f40 <test_keys+0x20>
   2068f:	e8 dc fd ff ff       	callq  20470 <mbedtls_poly1305_mac>
   20694:	85 c0                	test   %eax,%eax
   20696:	75 63                	jne    206fb <mbedtls_poly1305_self_test+0x1db>
   20698:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2069d:	48 8b 04 24          	mov    (%rsp),%rax
   206a1:	48 33 15 70 67 00 00 	xor    0x6770(%rip),%rdx        # 26e18 <test_mac+0x18>
   206a8:	48 33 05 61 67 00 00 	xor    0x6761(%rip),%rax        # 26e10 <test_mac+0x10>
   206af:	48 09 c2             	or     %rax,%rdx
   206b2:	74 1c                	je     206d0 <mbedtls_poly1305_self_test+0x1b0>
   206b4:	48 8d 3d 19 67 00 00 	lea    0x6719(%rip),%rdi        # 26dd4 <test_key+0x34>
   206bb:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   206c1:	e8 3a 2b fe ff       	callq  3200 <puts@plt>
   206c6:	e9 c1 fe ff ff       	jmpq   2058c <mbedtls_poly1305_self_test+0x6c>
   206cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   206d0:	48 8d 3d 0b 2b 00 00 	lea    0x2b0b(%rip),%rdi        # 231e2 <md5_test_buf+0x262>
   206d7:	45 31 e4             	xor    %r12d,%r12d
   206da:	e8 21 2b fe ff       	callq  3200 <puts@plt>
   206df:	bf 0a 00 00 00       	mov    $0xa,%edi
   206e4:	e8 07 2b fe ff       	callq  31f0 <putchar@plt>
   206e9:	e9 9e fe ff ff       	jmpq   2058c <mbedtls_poly1305_self_test+0x6c>
   206ee:	66 90                	xchg   %ax,%ax
   206f0:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   206f6:	e9 91 fe ff ff       	jmpq   2058c <mbedtls_poly1305_self_test+0x6c>
   206fb:	89 c2                	mov    %eax,%edx
   206fd:	48 8d 35 e2 64 00 00 	lea    0x64e2(%rip),%rsi        # 26be6 <test_keys+0x66>
   20704:	31 c0                	xor    %eax,%eax
   20706:	bf 01 00 00 00       	mov    $0x1,%edi
   2070b:	e8 30 2c fe ff       	callq  3340 <__printf_chk@plt>
   20710:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   20716:	e9 71 fe ff ff       	jmpq   2058c <mbedtls_poly1305_self_test+0x6c>
   2071b:	e8 40 2b fe ff       	callq  3260 <__stack_chk_fail@plt>

0000000000020720 <__udivti3>:
   20720:	f3 0f 1e fa          	endbr64 
   20724:	49 89 d0             	mov    %rdx,%r8
   20727:	48 89 ca             	mov    %rcx,%rdx
   2072a:	48 85 c9             	test   %rcx,%rcx
   2072d:	75 11                	jne    20740 <__udivti3+0x20>
   2072f:	49 39 f0             	cmp    %rsi,%r8
   20732:	76 44                	jbe    20778 <__udivti3+0x58>
   20734:	48 89 f8             	mov    %rdi,%rax
   20737:	48 89 f2             	mov    %rsi,%rdx
   2073a:	49 f7 f0             	div    %r8
   2073d:	31 d2                	xor    %edx,%edx
   2073f:	c3                   	retq   
   20740:	48 39 f1             	cmp    %rsi,%rcx
   20743:	76 0b                	jbe    20750 <__udivti3+0x30>
   20745:	31 d2                	xor    %edx,%edx
   20747:	31 c0                	xor    %eax,%eax
   20749:	c3                   	retq   
   2074a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20750:	48 0f bd c1          	bsr    %rcx,%rax
   20754:	48 83 f0 3f          	xor    $0x3f,%rax
   20758:	41 89 c2             	mov    %eax,%r10d
   2075b:	85 c0                	test   %eax,%eax
   2075d:	75 49                	jne    207a8 <__udivti3+0x88>
   2075f:	48 39 f1             	cmp    %rsi,%rcx
   20762:	72 09                	jb     2076d <__udivti3+0x4d>
   20764:	31 d2                	xor    %edx,%edx
   20766:	31 c0                	xor    %eax,%eax
   20768:	49 39 f8             	cmp    %rdi,%r8
   2076b:	77 d2                	ja     2073f <__udivti3+0x1f>
   2076d:	31 d2                	xor    %edx,%edx
   2076f:	b8 01 00 00 00       	mov    $0x1,%eax
   20774:	c3                   	retq   
   20775:	0f 1f 00             	nopl   (%rax)
   20778:	4c 89 c1             	mov    %r8,%rcx
   2077b:	4d 85 c0             	test   %r8,%r8
   2077e:	75 0d                	jne    2078d <__udivti3+0x6d>
   20780:	b8 01 00 00 00       	mov    $0x1,%eax
   20785:	31 d2                	xor    %edx,%edx
   20787:	49 f7 f0             	div    %r8
   2078a:	48 89 c1             	mov    %rax,%rcx
   2078d:	31 d2                	xor    %edx,%edx
   2078f:	48 89 f0             	mov    %rsi,%rax
   20792:	48 f7 f1             	div    %rcx
   20795:	48 89 c6             	mov    %rax,%rsi
   20798:	48 89 f8             	mov    %rdi,%rax
   2079b:	48 f7 f1             	div    %rcx
   2079e:	48 89 f2             	mov    %rsi,%rdx
   207a1:	c3                   	retq   
   207a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   207a8:	89 c1                	mov    %eax,%ecx
   207aa:	53                   	push   %rbx
   207ab:	bb 40 00 00 00       	mov    $0x40,%ebx
   207b0:	4d 89 c3             	mov    %r8,%r11
   207b3:	48 d3 e2             	shl    %cl,%rdx
   207b6:	48 63 c8             	movslq %eax,%rcx
   207b9:	49 89 f1             	mov    %rsi,%r9
   207bc:	48 29 cb             	sub    %rcx,%rbx
   207bf:	89 d9                	mov    %ebx,%ecx
   207c1:	49 d3 eb             	shr    %cl,%r11
   207c4:	89 c1                	mov    %eax,%ecx
   207c6:	49 d3 e0             	shl    %cl,%r8
   207c9:	89 d9                	mov    %ebx,%ecx
   207cb:	49 09 d3             	or     %rdx,%r11
   207ce:	49 d3 e9             	shr    %cl,%r9
   207d1:	89 c1                	mov    %eax,%ecx
   207d3:	48 89 f8             	mov    %rdi,%rax
   207d6:	48 d3 e6             	shl    %cl,%rsi
   207d9:	89 d9                	mov    %ebx,%ecx
   207db:	4c 89 ca             	mov    %r9,%rdx
   207de:	48 d3 e8             	shr    %cl,%rax
   207e1:	48 09 f0             	or     %rsi,%rax
   207e4:	49 f7 f3             	div    %r11
   207e7:	49 89 d1             	mov    %rdx,%r9
   207ea:	48 89 c6             	mov    %rax,%rsi
   207ed:	49 f7 e0             	mul    %r8
   207f0:	49 39 d1             	cmp    %rdx,%r9
   207f3:	72 1b                	jb     20810 <__udivti3+0xf0>
   207f5:	44 89 d1             	mov    %r10d,%ecx
   207f8:	48 d3 e7             	shl    %cl,%rdi
   207fb:	48 39 c7             	cmp    %rax,%rdi
   207fe:	73 05                	jae    20805 <__udivti3+0xe5>
   20800:	49 39 d1             	cmp    %rdx,%r9
   20803:	74 0b                	je     20810 <__udivti3+0xf0>
   20805:	48 89 f0             	mov    %rsi,%rax
   20808:	31 d2                	xor    %edx,%edx
   2080a:	5b                   	pop    %rbx
   2080b:	c3                   	retq   
   2080c:	0f 1f 40 00          	nopl   0x0(%rax)
   20810:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   20814:	31 d2                	xor    %edx,%edx
   20816:	5b                   	pop    %rbx
   20817:	c3                   	retq   
   20818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2081f:	00 

0000000000020820 <__libc_csu_init>:
   20820:	f3 0f 1e fa          	endbr64 
   20824:	41 57                	push   %r15
   20826:	4c 8d 3d 83 d4 00 00 	lea    0xd483(%rip),%r15        # 2dcb0 <__frame_dummy_init_array_entry>
   2082d:	41 56                	push   %r14
   2082f:	49 89 d6             	mov    %rdx,%r14
   20832:	41 55                	push   %r13
   20834:	49 89 f5             	mov    %rsi,%r13
   20837:	41 54                	push   %r12
   20839:	41 89 fc             	mov    %edi,%r12d
   2083c:	55                   	push   %rbp
   2083d:	48 8d 2d 74 d4 00 00 	lea    0xd474(%rip),%rbp        # 2dcb8 <__do_global_dtors_aux_fini_array_entry>
   20844:	53                   	push   %rbx
   20845:	4c 29 fd             	sub    %r15,%rbp
   20848:	48 83 ec 08          	sub    $0x8,%rsp
   2084c:	e8 af 27 fe ff       	callq  3000 <_init>
   20851:	48 c1 fd 03          	sar    $0x3,%rbp
   20855:	74 1f                	je     20876 <__libc_csu_init+0x56>
   20857:	31 db                	xor    %ebx,%ebx
   20859:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20860:	4c 89 f2             	mov    %r14,%rdx
   20863:	4c 89 ee             	mov    %r13,%rsi
   20866:	44 89 e7             	mov    %r12d,%edi
   20869:	41 ff 14 df          	callq  *(%r15,%rbx,8)
   2086d:	48 83 c3 01          	add    $0x1,%rbx
   20871:	48 39 dd             	cmp    %rbx,%rbp
   20874:	75 ea                	jne    20860 <__libc_csu_init+0x40>
   20876:	48 83 c4 08          	add    $0x8,%rsp
   2087a:	5b                   	pop    %rbx
   2087b:	5d                   	pop    %rbp
   2087c:	41 5c                	pop    %r12
   2087e:	41 5d                	pop    %r13
   20880:	41 5e                	pop    %r14
   20882:	41 5f                	pop    %r15
   20884:	c3                   	retq   
   20885:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2088c:	00 00 00 00 

0000000000020890 <__libc_csu_fini>:
   20890:	f3 0f 1e fa          	endbr64 
   20894:	c3                   	retq   

Disassembly of section .fini:

0000000000020898 <_fini>:
   20898:	e9 33 57 01 00       	jmpq   35fd0 <.instr.bb_20898>
   2089d:	83 ec 08             	sub    $0x8,%esp
   208a0:	48 83 c4 08          	add    $0x8,%rsp
   208a4:	c3                   	retq   

Disassembly of section .instr.text:

0000000000033000 <instrument_entrypoint>:
   33000:	57                   	push   %rdi
   33001:	56                   	push   %rsi
   33002:	52                   	push   %rdx
   33003:	51                   	push   %rcx
   33004:	41 50                	push   %r8
   33006:	41 51                	push   %r9
   33008:	41 52                	push   %r10
   3300a:	41 53                	push   %r11
   3300c:	e8 51 00 00 00       	callq  33062 <register_management_object>
   33011:	e8 45 02 00 00       	callq  3325b <allocate_data_block_masks>
   33016:	41 5b                	pop    %r11
   33018:	41 5a                	pop    %r10
   3301a:	41 59                	pop    %r9
   3301c:	41 58                	pop    %r8
   3301e:	59                   	pop    %rcx
   3301f:	5a                   	pop    %rdx
   33020:	5e                   	pop    %rsi
   33021:	5f                   	pop    %rdi

0000000000033022 <instrument_entrypoint_main_call>:
   33022:	ff 15 a8 cf ff ff    	callq  *-0x3058(%rip)        # 2ffd0 <__libc_start_main@GLIBC_2.2.5>
   33028:	00 00                	add    %al,(%rax)
	...

000000000003302c <library_init>:
   3302c:	41 57                	push   %r15
   3302e:	41 56                	push   %r14
   33030:	41 53                	push   %r11
   33032:	41 52                	push   %r10
   33034:	41 51                	push   %r9
   33036:	41 50                	push   %r8
   33038:	56                   	push   %rsi
   33039:	57                   	push   %rdi
   3303a:	52                   	push   %rdx
   3303b:	51                   	push   %rcx
   3303c:	50                   	push   %rax
   3303d:	e8 20 00 00 00       	callq  33062 <register_management_object>
   33042:	e8 14 02 00 00       	callq  3325b <allocate_data_block_masks>
   33047:	58                   	pop    %rax
   33048:	59                   	pop    %rcx
   33049:	5a                   	pop    %rdx
   3304a:	5f                   	pop    %rdi
   3304b:	5e                   	pop    %rsi
   3304c:	41 58                	pop    %r8
   3304e:	41 59                	pop    %r9
   33050:	41 5a                	pop    %r10
   33052:	41 5b                	pop    %r11
   33054:	41 5e                	pop    %r14
   33056:	41 5f                	pop    %r15

0000000000033058 <library_init.constructor_jump>:
   33058:	c3                   	retq   
   33059:	f4                   	hlt    
   3305a:	f4                   	hlt    
   3305b:	f4                   	hlt    
   3305c:	f4                   	hlt    
   3305d:	00 00                	add    %al,(%rax)
   3305f:	00 00                	add    %al,(%rax)
	...

0000000000033062 <register_management_object>:
   33062:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   33069:	b8 09 00 00 00       	mov    $0x9,%eax
   3306e:	48 bf 00 00 00 00 00 	movabs $0x700000000000,%rdi
   33075:	70 00 00 
   33078:	be 00 10 00 00       	mov    $0x1000,%esi
   3307d:	ba 03 00 00 00       	mov    $0x3,%edx
   33082:	41 ba 22 00 10 00    	mov    $0x100022,%r10d
   33088:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   3308f:	45 31 c9             	xor    %r9d,%r9d
   33092:	0f 05                	syscall 
   33094:	48 85 c0             	test   %rax,%rax
   33097:	79 0f                	jns    330a8 <register_management_object.init>
   33099:	48 83 f8 ef          	cmp    $0xffffffffffffffef,%rax
   3309d:	0f 84 cf 00 00 00    	je     33172 <register_management_object.register_library>
   330a3:	e8 09 07 00 00       	callq  337b1 <instrument_error>

00000000000330a8 <register_management_object.init>:
   330a8:	48 b8 00 00 00 00 00 	movabs $0x700000000000,%rax
   330af:	70 00 00 
   330b2:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx
   330b9:	31 ff                	xor    %edi,%edi

00000000000330bb <register_management_object.clear_loop>:
   330bb:	48 89 38             	mov    %rdi,(%rax)
   330be:	48 83 c0 08          	add    $0x8,%rax
   330c2:	48 39 d0             	cmp    %rdx,%rax
   330c5:	75 f4                	jne    330bb <register_management_object.clear_loop>
   330c7:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   330ce:	70 00 00 
   330d1:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
   330d8:	b8 20 00 00 00       	mov    $0x20,%eax

00000000000330dd <register_management_object.rng_loop>:
   330dd:	48 0f c7 f7          	rdrand %rdi
   330e1:	73 fa                	jae    330dd <register_management_object.rng_loop>
   330e3:	48 c1 e7 03          	shl    $0x3,%rdi
   330e7:	48 89 7c c4 f8       	mov    %rdi,-0x8(%rsp,%rax,8)
   330ec:	48 ff c8             	dec    %rax
   330ef:	75 ec                	jne    330dd <register_management_object.rng_loop>
   330f1:	c5 fa 6f 04 24       	vmovdqu (%rsp),%xmm0
   330f6:	c5 fa 6f 4c 24 10    	vmovdqu 0x10(%rsp),%xmm1
   330fc:	c5 fa 6f 54 24 20    	vmovdqu 0x20(%rsp),%xmm2
   33102:	c5 fa 6f 5c 24 30    	vmovdqu 0x30(%rsp),%xmm3
   33108:	c5 fa 6f 64 24 40    	vmovdqu 0x40(%rsp),%xmm4
   3310e:	c5 fa 6f 6c 24 50    	vmovdqu 0x50(%rsp),%xmm5
   33114:	c5 fa 6f 74 24 60    	vmovdqu 0x60(%rsp),%xmm6
   3311a:	c5 fa 6f 7c 24 70    	vmovdqu 0x70(%rsp),%xmm7
   33120:	c5 7a 6f 84 24 80 00 	vmovdqu 0x80(%rsp),%xmm8
   33127:	00 00 
   33129:	c5 7a 6f 8c 24 90 00 	vmovdqu 0x90(%rsp),%xmm9
   33130:	00 00 
   33132:	c5 7a 6f 94 24 a0 00 	vmovdqu 0xa0(%rsp),%xmm10
   33139:	00 00 
   3313b:	c5 7a 6f 9c 24 b0 00 	vmovdqu 0xb0(%rsp),%xmm11
   33142:	00 00 
   33144:	c5 7a 6f a4 24 c0 00 	vmovdqu 0xc0(%rsp),%xmm12
   3314b:	00 00 
   3314d:	c5 7a 6f ac 24 d0 00 	vmovdqu 0xd0(%rsp),%xmm13
   33154:	00 00 
   33156:	c5 7a 6f b4 24 e0 00 	vmovdqu 0xe0(%rsp),%xmm14
   3315d:	00 00 
   3315f:	c5 7a 6f bc 24 f0 00 	vmovdqu 0xf0(%rsp),%xmm15
   33166:	00 00 
   33168:	e8 45 00 00 00       	callq  331b2 <set_up_signal_handler>
   3316d:	e8 92 00 00 00       	callq  33204 <allocate_stack_mask>

0000000000033172 <register_management_object.register_library>:
   33172:	48 b8 00 00 00 00 00 	movabs $0x700000000000,%rax
   33179:	70 00 00 
   3317c:	31 c9                	xor    %ecx,%ecx

000000000003317e <register_management_object.next_table_entry>:
   3317e:	48 83 3c c8 00       	cmpq   $0x0,(%rax,%rcx,8)
   33183:	74 05                	je     3318a <register_management_object.store_hash_table>
   33185:	48 ff c1             	inc    %rcx
   33188:	eb f4                	jmp    3317e <register_management_object.next_table_entry>

000000000003318a <register_management_object.store_hash_table>:
   3318a:	48 8d 15 ef 01 00 00 	lea    0x1ef(%rip),%rdx        # 33380 <instrument_signal_handler_hash_table>
   33191:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
   33195:	48 b8 80 00 00 00 00 	movabs $0x700000000080,%rax
   3319c:	70 00 00 
   3319f:	48 8d 15 5a fe ff ff 	lea    -0x1a6(%rip),%rdx        # 33000 <instrument_entrypoint>
   331a6:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
   331aa:	48 81 c4 00 01 00 00 	add    $0x100,%rsp
   331b1:	c3                   	retq   

00000000000331b2 <set_up_signal_handler>:
   331b2:	48 83 ec 28          	sub    $0x28,%rsp
   331b6:	48 8d 05 43 01 00 00 	lea    0x143(%rip),%rax        # 33300 <instrument_signal_handler>
   331bd:	48 89 04 24          	mov    %rax,(%rsp)
   331c1:	b8 04 00 00 04       	mov    $0x4000004,%eax
   331c6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   331cb:	48 8d 05 2e 02 00 00 	lea    0x22e(%rip),%rax        # 33400 <instrument_signal_restorer>
   331d2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   331d7:	31 c0                	xor    %eax,%eax
   331d9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   331de:	b8 0d 00 00 00       	mov    $0xd,%eax
   331e3:	bf 05 00 00 00       	mov    $0x5,%edi
   331e8:	48 89 e6             	mov    %rsp,%rsi
   331eb:	31 d2                	xor    %edx,%edx
   331ed:	41 ba 08 00 00 00    	mov    $0x8,%r10d
   331f3:	0f 05                	syscall 
   331f5:	48 85 c0             	test   %rax,%rax
   331f8:	79 05                	jns    331ff <set_up_signal_handler.done>
   331fa:	e8 b2 05 00 00       	callq  337b1 <instrument_error>

00000000000331ff <set_up_signal_handler.done>:
   331ff:	48 83 c4 28          	add    $0x28,%rsp
   33203:	c3                   	retq   

0000000000033204 <allocate_stack_mask>:
   33204:	48 83 ec 10          	sub    $0x10,%rsp
   33208:	b8 61 00 00 00       	mov    $0x61,%eax
   3320d:	bf 03 00 00 00       	mov    $0x3,%edi
   33212:	48 89 e6             	mov    %rsp,%rsi
   33215:	0f 05                	syscall 
   33217:	48 85 c0             	test   %rax,%rax
   3321a:	79 05                	jns    33221 <allocate_stack_mask.allocate_stack_mask_buffer>
   3321c:	e8 90 05 00 00       	callq  337b1 <instrument_error>

0000000000033221 <allocate_stack_mask.allocate_stack_mask_buffer>:
   33221:	48 89 e7             	mov    %rsp,%rdi
   33224:	48 8b 34 24          	mov    (%rsp),%rsi
   33228:	48 29 f7             	sub    %rsi,%rdi
   3322b:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
   33232:	48 81 c6 00 20 00 00 	add    $0x2000,%rsi
   33239:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   33240:	56                   	push   %rsi
   33241:	e8 f9 04 00 00       	callq  3373f <allocate_mask_buffer>
   33246:	5e                   	pop    %rsi
   33247:	48 89 c7             	mov    %rax,%rdi
   3324a:	48 c1 ee 03          	shr    $0x3,%rsi
   3324e:	48 89 f1             	mov    %rsi,%rcx
   33251:	31 c0                	xor    %eax,%eax
   33253:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   33256:	48 83 c4 10          	add    $0x10,%rsp
   3325a:	c3                   	retq   

000000000003325b <allocate_data_block_masks>:
   3325b:	41 57                	push   %r15
   3325d:	41 56                	push   %r14
   3325f:	4c 8d 3d 9a fd ff ff 	lea    -0x266(%rip),%r15        # 33000 <instrument_entrypoint>
   33266:	4c 8b 35 7e 00 00 00 	mov    0x7e(%rip),%r14        # 332eb <segments_pointer>
   3326d:	4d 01 fe             	add    %r15,%r14

0000000000033270 <allocate_data_block_masks.next_segment>:
   33270:	49 8b 3e             	mov    (%r14),%rdi
   33273:	48 85 ff             	test   %rdi,%rdi
   33276:	74 12                	je     3328a <allocate_data_block_masks.segments_done>
   33278:	4c 01 ff             	add    %r15,%rdi
   3327b:	41 8b 76 08          	mov    0x8(%r14),%esi
   3327f:	e8 bb 04 00 00       	callq  3373f <allocate_mask_buffer>
   33284:	49 83 c6 10          	add    $0x10,%r14
   33288:	eb e6                	jmp    33270 <allocate_data_block_masks.next_segment>

000000000003328a <allocate_data_block_masks.segments_done>:
   3328a:	4c 8b 35 62 00 00 00 	mov    0x62(%rip),%r14        # 332f3 <private_data_blocks_pointer>
   33291:	4d 01 fe             	add    %r15,%r14

0000000000033294 <allocate_data_block_masks.next_block>:
   33294:	49 8b 3e             	mov    (%r14),%rdi
   33297:	48 85 ff             	test   %rdi,%rdi
   3329a:	74 4a                	je     332e6 <allocate_data_block_masks.end>
   3329c:	4c 01 ff             	add    %r15,%rdi
   3329f:	48 81 c7 00 10 00 c0 	add    $0xffffffffc0001000,%rdi
   332a6:	41 8a 56 0c          	mov    0xc(%r14),%dl
   332aa:	84 d2                	test   %dl,%dl
   332ac:	75 0a                	jne    332b8 <allocate_data_block_masks.randomize_mask_buffer>
   332ae:	41 8b 4e 08          	mov    0x8(%r14),%ecx
   332b2:	31 c0                	xor    %eax,%eax
   332b4:	f3 aa                	rep stos %al,%es:(%rdi)
   332b6:	eb 2e                	jmp    332e6 <allocate_data_block_masks.end>

00000000000332b8 <allocate_data_block_masks.randomize_mask_buffer>:
   332b8:	41 8b 76 08          	mov    0x8(%r14),%esi
   332bc:	e8 cf 04 00 00       	callq  33790 <get_random_bytes>
   332c1:	49 8b 3e             	mov    (%r14),%rdi
   332c4:	4c 01 ff             	add    %r15,%rdi
   332c7:	41 8b 76 08          	mov    0x8(%r14),%esi
   332cb:	48 01 fe             	add    %rdi,%rsi

00000000000332ce <allocate_data_block_masks.mask_loop>:
   332ce:	48 39 f7             	cmp    %rsi,%rdi
   332d1:	74 0d                	je     332e0 <allocate_data_block_masks.mask_loop_end>
   332d3:	8a 87 00 10 00 c0    	mov    -0x3ffff000(%rdi),%al
   332d9:	30 07                	xor    %al,(%rdi)
   332db:	48 ff c7             	inc    %rdi
   332de:	eb ee                	jmp    332ce <allocate_data_block_masks.mask_loop>

00000000000332e0 <allocate_data_block_masks.mask_loop_end>:
   332e0:	49 83 c6 10          	add    $0x10,%r14
   332e4:	eb ae                	jmp    33294 <allocate_data_block_masks.next_block>

00000000000332e6 <allocate_data_block_masks.end>:
   332e6:	41 5e                	pop    %r14
   332e8:	41 5f                	pop    %r15
   332ea:	c3                   	retq   

00000000000332eb <segments_pointer>:
   332eb:	00 31                	add    %dh,(%rcx)
   332ed:	00 00                	add    %al,(%rax)
   332ef:	00 00                	add    %al,(%rax)
	...

00000000000332f3 <private_data_blocks_pointer>:
   332f3:	30 31                	xor    %dh,(%rcx)
   332f5:	00 00                	add    %al,(%rax)
   332f7:	00 00                	add    %al,(%rax)
   332f9:	00 00                	add    %al,(%rax)
   332fb:	90                   	nop
   332fc:	90                   	nop
   332fd:	90                   	nop
   332fe:	90                   	nop
   332ff:	90                   	nop

0000000000033300 <instrument_signal_handler>:
   33300:	48 8b 82 a8 00 00 00 	mov    0xa8(%rdx),%rax
   33307:	49 ba 00 00 00 00 00 	movabs $0x700000000000,%r10
   3330e:	70 00 00 
   33311:	41 bb 10 00 00 00    	mov    $0x10,%r11d

0000000000033317 <instrument_signal_handler.loop_hash_table>:
   33317:	4b 8b 4c da f8       	mov    -0x8(%r10,%r11,8),%rcx
   3331c:	48 85 c9             	test   %rcx,%rcx
   3331f:	74 2c                	je     3334d <instrument_signal_handler.list_end>
   33321:	4f 8b 4c da 78       	mov    0x78(%r10,%r11,8),%r9
   33326:	49 89 c4             	mov    %rax,%r12
   33329:	4d 29 cc             	sub    %r9,%r12
   3332c:	4d 89 e0             	mov    %r12,%r8
   3332f:	41 83 e0 78          	and    $0x78,%r8d
   33333:	4a 8b 0c 01          	mov    (%rcx,%r8,1),%rcx
   33337:	4c 01 c9             	add    %r9,%rcx

000000000003333a <instrument_signal_handler.loop>:
   3333a:	48 8b 31             	mov    (%rcx),%rsi
   3333d:	48 85 f6             	test   %rsi,%rsi
   33340:	74 0b                	je     3334d <instrument_signal_handler.list_end>
   33342:	49 39 f4             	cmp    %rsi,%r12
   33345:	74 10                	je     33357 <instrument_signal_handler.found>
   33347:	48 83 c1 10          	add    $0x10,%rcx
   3334b:	eb ed                	jmp    3333a <instrument_signal_handler.loop>

000000000003334d <instrument_signal_handler.list_end>:
   3334d:	49 ff cb             	dec    %r11
   33350:	75 c5                	jne    33317 <instrument_signal_handler.loop_hash_table>
   33352:	e8 5a 04 00 00       	callq  337b1 <instrument_error>

0000000000033357 <instrument_signal_handler.found>:
   33357:	4c 03 49 08          	add    0x8(%rcx),%r9
   3335b:	4c 89 8a a8 00 00 00 	mov    %r9,0xa8(%rdx)
   33362:	c3                   	retq   
   33363:	90                   	nop
   33364:	90                   	nop
   33365:	90                   	nop
   33366:	90                   	nop
   33367:	90                   	nop
   33368:	90                   	nop
   33369:	90                   	nop
   3336a:	90                   	nop
   3336b:	90                   	nop
   3336c:	90                   	nop
   3336d:	90                   	nop
   3336e:	90                   	nop
   3336f:	90                   	nop
   33370:	90                   	nop
   33371:	90                   	nop
   33372:	90                   	nop
   33373:	90                   	nop
   33374:	90                   	nop
   33375:	90                   	nop
   33376:	90                   	nop
   33377:	90                   	nop
   33378:	90                   	nop
   33379:	90                   	nop
   3337a:	90                   	nop
   3337b:	90                   	nop
   3337c:	90                   	nop
   3337d:	90                   	nop
   3337e:	90                   	nop
   3337f:	90                   	nop

0000000000033380 <instrument_signal_handler_hash_table>:
   33380:	00 30                	add    %dh,(%rax)
   33382:	00 00                	add    %al,(%rax)
   33384:	00 00                	add    %al,(%rax)
   33386:	00 00                	add    %al,(%rax)
   33388:	10 30                	adc    %dh,(%rax)
   3338a:	00 00                	add    %al,(%rax)
   3338c:	00 00                	add    %al,(%rax)
   3338e:	00 00                	add    %al,(%rax)
   33390:	20 30                	and    %dh,(%rax)
   33392:	00 00                	add    %al,(%rax)
   33394:	00 00                	add    %al,(%rax)
   33396:	00 00                	add    %al,(%rax)
   33398:	30 30                	xor    %dh,(%rax)
   3339a:	00 00                	add    %al,(%rax)
   3339c:	00 00                	add    %al,(%rax)
   3339e:	00 00                	add    %al,(%rax)
   333a0:	40 30 00             	xor    %al,(%rax)
   333a3:	00 00                	add    %al,(%rax)
   333a5:	00 00                	add    %al,(%rax)
   333a7:	00 50 30             	add    %dl,0x30(%rax)
   333aa:	00 00                	add    %al,(%rax)
   333ac:	00 00                	add    %al,(%rax)
   333ae:	00 00                	add    %al,(%rax)
   333b0:	60                   	(bad)  
   333b1:	30 00                	xor    %al,(%rax)
   333b3:	00 00                	add    %al,(%rax)
   333b5:	00 00                	add    %al,(%rax)
   333b7:	00 70 30             	add    %dh,0x30(%rax)
   333ba:	00 00                	add    %al,(%rax)
   333bc:	00 00                	add    %al,(%rax)
   333be:	00 00                	add    %al,(%rax)
   333c0:	80 30 00             	xorb   $0x0,(%rax)
   333c3:	00 00                	add    %al,(%rax)
   333c5:	00 00                	add    %al,(%rax)
   333c7:	00 90 30 00 00 00    	add    %dl,0x30(%rax)
   333cd:	00 00                	add    %al,(%rax)
   333cf:	00 a0 30 00 00 00    	add    %ah,0x30(%rax)
   333d5:	00 00                	add    %al,(%rax)
   333d7:	00 b0 30 00 00 00    	add    %dh,0x30(%rax)
   333dd:	00 00                	add    %al,(%rax)
   333df:	00 c0                	add    %al,%al
   333e1:	30 00                	xor    %al,(%rax)
   333e3:	00 00                	add    %al,(%rax)
   333e5:	00 00                	add    %al,(%rax)
   333e7:	00 d0                	add    %dl,%al
   333e9:	30 00                	xor    %al,(%rax)
   333eb:	00 00                	add    %al,(%rax)
   333ed:	00 00                	add    %al,(%rax)
   333ef:	00 e0                	add    %ah,%al
   333f1:	30 00                	xor    %al,(%rax)
   333f3:	00 00                	add    %al,(%rax)
   333f5:	00 00                	add    %al,(%rax)
   333f7:	00 f0                	add    %dh,%al
   333f9:	30 00                	xor    %al,(%rax)
   333fb:	00 00                	add    %al,(%rax)
   333fd:	00 00                	add    %al,(%rax)
	...

0000000000033400 <instrument_signal_restorer>:
   33400:	b8 0f 00 00 00       	mov    $0xf,%eax
   33405:	0f 05                	syscall 
   33407:	e8 a5 03 00 00       	callq  337b1 <instrument_error>

000000000003340c <handle_system_call>:
   3340c:	83 f8 09             	cmp    $0x9,%eax
   3340f:	74 14                	je     33425 <handle_system_call.handle_mmap>
   33411:	83 f8 0b             	cmp    $0xb,%eax
   33414:	74 34                	je     3344a <handle_system_call.handle_munmap>
   33416:	83 f8 19             	cmp    $0x19,%eax
   33419:	74 36                	je     33451 <handle_system_call.handle_mremap>
   3341b:	83 f8 0c             	cmp    $0xc,%eax
   3341e:	74 38                	je     33458 <handle_system_call.handle_brk>
   33420:	e9 80 00 00 00       	jmpq   334a5 <handle_system_call.end>

0000000000033425 <handle_system_call.handle_mmap>:
   33425:	0f 05                	syscall 
   33427:	48 85 c0             	test   %rax,%rax
   3342a:	78 79                	js     334a5 <handle_system_call.end>
   3342c:	41 52                	push   %r10
   3342e:	41 51                	push   %r9
   33430:	41 50                	push   %r8
   33432:	56                   	push   %rsi
   33433:	57                   	push   %rdi
   33434:	52                   	push   %rdx
   33435:	50                   	push   %rax
   33436:	48 89 c7             	mov    %rax,%rdi
   33439:	e8 01 03 00 00       	callq  3373f <allocate_mask_buffer>
   3343e:	58                   	pop    %rax
   3343f:	5a                   	pop    %rdx
   33440:	5f                   	pop    %rdi
   33441:	5e                   	pop    %rsi
   33442:	41 58                	pop    %r8
   33444:	41 59                	pop    %r9
   33446:	41 5a                	pop    %r10
   33448:	eb 5b                	jmp    334a5 <handle_system_call.end>

000000000003344a <handle_system_call.handle_munmap>:
   3344a:	e8 62 03 00 00       	callq  337b1 <instrument_error>
   3344f:	eb 54                	jmp    334a5 <handle_system_call.end>

0000000000033451 <handle_system_call.handle_mremap>:
   33451:	e8 5b 03 00 00       	callq  337b1 <instrument_error>
   33456:	eb 4d                	jmp    334a5 <handle_system_call.end>

0000000000033458 <handle_system_call.handle_brk>:
   33458:	48 85 ff             	test   %rdi,%rdi
   3345b:	74 46                	je     334a3 <handle_system_call.handle_others>
   3345d:	41 52                	push   %r10
   3345f:	41 51                	push   %r9
   33461:	41 50                	push   %r8
   33463:	56                   	push   %rsi
   33464:	57                   	push   %rdi
   33465:	52                   	push   %rdx
   33466:	48 89 fe             	mov    %rdi,%rsi
   33469:	31 ff                	xor    %edi,%edi
   3346b:	0f 05                	syscall 
   3346d:	48 89 f7             	mov    %rsi,%rdi
   33470:	48 89 c6             	mov    %rax,%rsi
   33473:	b8 0c 00 00 00       	mov    $0xc,%eax
   33478:	0f 05                	syscall 
   3347a:	50                   	push   %rax
   3347b:	48 39 f0             	cmp    %rsi,%rax
   3347e:	72 12                	jb     33492 <handle_system_call.handle_brk.dealloc>
   33480:	74 15                	je     33497 <handle_system_call.handle_brk.end>

0000000000033482 <handle_system_call.handle_brk.alloc>:
   33482:	48 89 f7             	mov    %rsi,%rdi
   33485:	48 89 c6             	mov    %rax,%rsi
   33488:	48 29 fe             	sub    %rdi,%rsi
   3348b:	e8 af 02 00 00       	callq  3373f <allocate_mask_buffer>
   33490:	eb 05                	jmp    33497 <handle_system_call.handle_brk.end>

0000000000033492 <handle_system_call.handle_brk.dealloc>:
   33492:	e8 1a 03 00 00       	callq  337b1 <instrument_error>

0000000000033497 <handle_system_call.handle_brk.end>:
   33497:	58                   	pop    %rax
   33498:	5a                   	pop    %rdx
   33499:	5f                   	pop    %rdi
   3349a:	5e                   	pop    %rsi
   3349b:	41 58                	pop    %r8
   3349d:	41 59                	pop    %r9
   3349f:	41 5a                	pop    %r10
   334a1:	eb 02                	jmp    334a5 <handle_system_call.end>

00000000000334a3 <handle_system_call.handle_others>:
   334a3:	0f 05                	syscall 

00000000000334a5 <handle_system_call.end>:
   334a5:	c3                   	retq   

00000000000334a6 <handle_malloc>:
   334a6:	41 57                	push   %r15
   334a8:	41 56                	push   %r14
   334aa:	41 55                	push   %r13
   334ac:	49 89 ff             	mov    %rdi,%r15

00000000000334af <handle_malloc.continue_malloc>:
   334af:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   334b6:	70 00 00 
   334b9:	4d 8b 75 00          	mov    0x0(%r13),%r14
   334bd:	49 c7 45 00 02 00 00 	movq   $0x2,0x0(%r13)
   334c4:	00 
   334c5:	ff d0                	callq  *%rax
   334c7:	48 85 c0             	test   %rax,%rax
   334ca:	74 2c                	je     334f8 <handle_malloc.end>
   334cc:	49 89 c5             	mov    %rax,%r13
   334cf:	48 8d b8 00 10 00 c0 	lea    -0x3ffff000(%rax),%rdi
   334d6:	4d 85 f6             	test   %r14,%r14
   334d9:	74 13                	je     334ee <handle_malloc.init_zero_mask>
   334db:	49 8d 46 01          	lea    0x1(%r14),%rax
   334df:	4c 21 f0             	and    %r14,%rax
   334e2:	75 0a                	jne    334ee <handle_malloc.init_zero_mask>

00000000000334e4 <handle_malloc.init_random_mask>:
   334e4:	4c 89 fe             	mov    %r15,%rsi
   334e7:	e8 a4 02 00 00       	callq  33790 <get_random_bytes>
   334ec:	eb 07                	jmp    334f5 <handle_malloc.mask_init_done>

00000000000334ee <handle_malloc.init_zero_mask>:
   334ee:	31 c0                	xor    %eax,%eax
   334f0:	4c 89 f9             	mov    %r15,%rcx
   334f3:	f3 aa                	rep stos %al,%es:(%rdi)

00000000000334f5 <handle_malloc.mask_init_done>:
   334f5:	4c 89 e8             	mov    %r13,%rax

00000000000334f8 <handle_malloc.end>:
   334f8:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   334ff:	70 00 00 
   33502:	4d 89 75 00          	mov    %r14,0x0(%r13)
   33506:	41 5d                	pop    %r13
   33508:	41 5e                	pop    %r14
   3350a:	41 5f                	pop    %r15
   3350c:	c3                   	retq   

000000000003350d <handle_calloc>:
   3350d:	41 57                	push   %r15
   3350f:	41 56                	push   %r14
   33511:	41 55                	push   %r13
   33513:	49 89 ff             	mov    %rdi,%r15
   33516:	4c 0f af fe          	imul   %rsi,%r15
   3351a:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   33521:	70 00 00 
   33524:	4d 8b 75 00          	mov    0x0(%r13),%r14
   33528:	49 c7 45 00 02 00 00 	movq   $0x2,0x0(%r13)
   3352f:	00 
   33530:	ff d0                	callq  *%rax
   33532:	48 85 c0             	test   %rax,%rax
   33535:	74 3b                	je     33572 <handle_calloc.end>
   33537:	49 89 c5             	mov    %rax,%r13
   3353a:	48 8d b8 00 10 00 c0 	lea    -0x3ffff000(%rax),%rdi
   33541:	4d 85 f6             	test   %r14,%r14
   33544:	74 22                	je     33568 <handle_calloc.init_zero_mask>
   33546:	49 8d 46 01          	lea    0x1(%r14),%rax
   3354a:	4c 21 f0             	and    %r14,%rax
   3354d:	75 19                	jne    33568 <handle_calloc.init_zero_mask>

000000000003354f <handle_calloc.init_random_mask>:
   3354f:	4c 89 fe             	mov    %r15,%rsi
   33552:	e8 39 02 00 00       	callq  33790 <get_random_bytes>
   33557:	49 8d b5 00 10 00 c0 	lea    -0x3ffff000(%r13),%rsi
   3355e:	4c 89 ef             	mov    %r13,%rdi
   33561:	4c 89 f9             	mov    %r15,%rcx
   33564:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   33566:	eb 07                	jmp    3356f <handle_calloc.mask_init_done>

0000000000033568 <handle_calloc.init_zero_mask>:
   33568:	31 c0                	xor    %eax,%eax
   3356a:	4c 89 f9             	mov    %r15,%rcx
   3356d:	f3 aa                	rep stos %al,%es:(%rdi)

000000000003356f <handle_calloc.mask_init_done>:
   3356f:	4c 89 e8             	mov    %r13,%rax

0000000000033572 <handle_calloc.end>:
   33572:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   33579:	70 00 00 
   3357c:	4d 89 75 00          	mov    %r14,0x0(%r13)
   33580:	41 5d                	pop    %r13
   33582:	41 5e                	pop    %r14
   33584:	41 5f                	pop    %r15
   33586:	c3                   	retq   

0000000000033587 <handle_realloc>:
   33587:	48 85 ff             	test   %rdi,%rdi
   3358a:	75 0e                	jne    3359a <handle_realloc.continue_realloc>
   3358c:	41 57                	push   %r15
   3358e:	41 56                	push   %r14
   33590:	41 55                	push   %r13
   33592:	49 89 f7             	mov    %rsi,%r15
   33595:	e9 15 ff ff ff       	jmpq   334af <handle_malloc.continue_malloc>

000000000003359a <handle_realloc.continue_realloc>:
   3359a:	41 57                	push   %r15
   3359c:	41 56                	push   %r14
   3359e:	41 55                	push   %r13
   335a0:	41 54                	push   %r12
   335a2:	55                   	push   %rbp
   335a3:	53                   	push   %rbx
   335a4:	48 83 ec 08          	sub    $0x8,%rsp
   335a8:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   335af:	70 00 00 
   335b2:	4d 8b 5d 00          	mov    0x0(%r13),%r11
   335b6:	49 c7 45 00 02 00 00 	movq   $0x2,0x0(%r13)
   335bd:	00 
   335be:	49 89 ff             	mov    %rdi,%r15
   335c1:	49 89 f5             	mov    %rsi,%r13
   335c4:	48 89 c3             	mov    %rax,%rbx
   335c7:	4c 8b 77 f8          	mov    -0x8(%rdi),%r14
   335cb:	49 83 e6 f8          	and    $0xfffffffffffffff8,%r14

00000000000335cf <handle_realloc.allocate_secondary_data>:
   335cf:	41 53                	push   %r11
   335d1:	41 51                	push   %r9
   335d3:	41 50                	push   %r8
   335d5:	51                   	push   %rcx
   335d6:	52                   	push   %rdx
   335d7:	56                   	push   %rsi
   335d8:	57                   	push   %rdi
   335d9:	4c 89 f6             	mov    %r14,%rsi
   335dc:	48 81 c6 00 10 00 00 	add    $0x1000,%rsi
   335e3:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   335ea:	b8 09 00 00 00       	mov    $0x9,%eax
   335ef:	31 ff                	xor    %edi,%edi
   335f1:	ba 03 00 00 00       	mov    $0x3,%edx
   335f6:	41 ba 22 00 00 00    	mov    $0x22,%r10d
   335fc:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   33603:	45 31 c9             	xor    %r9d,%r9d
   33606:	0f 05                	syscall 
   33608:	48 85 c0             	test   %rax,%rax
   3360b:	79 05                	jns    33612 <handle_realloc.allocate_secondary_mask>
   3360d:	e8 9f 01 00 00       	callq  337b1 <instrument_error>

0000000000033612 <handle_realloc.allocate_secondary_mask>:
   33612:	49 89 c4             	mov    %rax,%r12
   33615:	b8 09 00 00 00       	mov    $0x9,%eax
   3361a:	0f 05                	syscall 
   3361c:	48 85 c0             	test   %rax,%rax
   3361f:	79 05                	jns    33626 <handle_realloc.copy_old_to_secondary>
   33621:	e8 8b 01 00 00       	callq  337b1 <instrument_error>

0000000000033626 <handle_realloc.copy_old_to_secondary>:
   33626:	48 89 c5             	mov    %rax,%rbp
   33629:	4c 89 fe             	mov    %r15,%rsi
   3362c:	4c 89 e7             	mov    %r12,%rdi
   3362f:	4c 89 f1             	mov    %r14,%rcx
   33632:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   33634:	49 8d b7 00 10 00 c0 	lea    -0x3ffff000(%r15),%rsi
   3363b:	48 89 ef             	mov    %rbp,%rdi
   3363e:	4c 89 f1             	mov    %r14,%rcx
   33641:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   33643:	5f                   	pop    %rdi
   33644:	5e                   	pop    %rsi
   33645:	5a                   	pop    %rdx
   33646:	59                   	pop    %rcx
   33647:	41 58                	pop    %r8
   33649:	41 59                	pop    %r9
   3364b:	41 5b                	pop    %r11

000000000003364d <handle_realloc.call_realloc>:
   3364d:	48 89 d8             	mov    %rbx,%rax
   33650:	4c 89 db             	mov    %r11,%rbx
   33653:	ff d0                	callq  *%rax
   33655:	49 89 db             	mov    %rbx,%r11
   33658:	48 85 c0             	test   %rax,%rax
   3365b:	0f 84 c1 00 00 00    	je     33722 <handle_realloc.end>
   33661:	48 89 c3             	mov    %rax,%rbx

0000000000033664 <handle_realloc.new_mask>:
   33664:	4d 85 db             	test   %r11,%r11
   33667:	74 47                	je     336b0 <handle_realloc.copy_with_zero_mask>
   33669:	49 8d 43 01          	lea    0x1(%r11),%rax
   3366d:	4c 21 d8             	and    %r11,%rax
   33670:	75 3e                	jne    336b0 <handle_realloc.copy_with_zero_mask>

0000000000033672 <handle_realloc.copy_with_random_mask>:
   33672:	48 8d bb 00 10 00 c0 	lea    -0x3ffff000(%rbx),%rdi
   33679:	4c 89 ee             	mov    %r13,%rsi
   3367c:	e8 0f 01 00 00       	callq  33790 <get_random_bytes>
   33681:	48 8d b3 00 10 00 c0 	lea    -0x3ffff000(%rbx),%rsi
   33688:	31 c9                	xor    %ecx,%ecx
   3368a:	4d 39 ee             	cmp    %r13,%r14
   3368d:	4c 89 ea             	mov    %r13,%rdx
   33690:	49 0f 46 d6          	cmovbe %r14,%rdx

0000000000033694 <handle_realloc.copy_with_random_mask_loop>:
   33694:	48 39 d1             	cmp    %rdx,%rcx
   33697:	73 49                	jae    336e2 <handle_realloc.unmap_secondary_data>
   33699:	49 8b 04 0c          	mov    (%r12,%rcx,1),%rax
   3369d:	48 33 44 0d 00       	xor    0x0(%rbp,%rcx,1),%rax
   336a2:	48 33 04 0e          	xor    (%rsi,%rcx,1),%rax
   336a6:	48 89 04 0b          	mov    %rax,(%rbx,%rcx,1)
   336aa:	48 83 c1 08          	add    $0x8,%rcx
   336ae:	eb e4                	jmp    33694 <handle_realloc.copy_with_random_mask_loop>

00000000000336b0 <handle_realloc.copy_with_zero_mask>:
   336b0:	48 8d bb 00 10 00 c0 	lea    -0x3ffff000(%rbx),%rdi
   336b7:	31 c0                	xor    %eax,%eax
   336b9:	4c 89 e9             	mov    %r13,%rcx
   336bc:	f3 aa                	rep stos %al,%es:(%rdi)
   336be:	31 c9                	xor    %ecx,%ecx
   336c0:	4d 39 ee             	cmp    %r13,%r14
   336c3:	4c 89 ea             	mov    %r13,%rdx
   336c6:	49 0f 46 d6          	cmovbe %r14,%rdx

00000000000336ca <handle_realloc.copy_with_zero_mask_loop>:
   336ca:	48 39 d1             	cmp    %rdx,%rcx
   336cd:	73 13                	jae    336e2 <handle_realloc.unmap_secondary_data>
   336cf:	49 8b 04 0c          	mov    (%r12,%rcx,1),%rax
   336d3:	48 33 44 0d 00       	xor    0x0(%rbp,%rcx,1),%rax
   336d8:	48 89 04 0b          	mov    %rax,(%rbx,%rcx,1)
   336dc:	48 83 c1 08          	add    $0x8,%rcx
   336e0:	eb e8                	jmp    336ca <handle_realloc.copy_with_zero_mask_loop>

00000000000336e2 <handle_realloc.unmap_secondary_data>:
   336e2:	41 53                	push   %r11
   336e4:	4c 89 f6             	mov    %r14,%rsi
   336e7:	48 81 c6 00 10 00 00 	add    $0x1000,%rsi
   336ee:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   336f5:	b8 0b 00 00 00       	mov    $0xb,%eax
   336fa:	4c 89 e7             	mov    %r12,%rdi
   336fd:	0f 05                	syscall 
   336ff:	48 85 c0             	test   %rax,%rax
   33702:	79 05                	jns    33709 <handle_realloc.unmap_secondary_mask>
   33704:	e8 a8 00 00 00       	callq  337b1 <instrument_error>

0000000000033709 <handle_realloc.unmap_secondary_mask>:
   33709:	b8 0b 00 00 00       	mov    $0xb,%eax
   3370e:	48 89 ef             	mov    %rbp,%rdi
   33711:	0f 05                	syscall 
   33713:	48 85 c0             	test   %rax,%rax
   33716:	79 05                	jns    3371d <handle_realloc.restore_return_address>
   33718:	e8 94 00 00 00       	callq  337b1 <instrument_error>

000000000003371d <handle_realloc.restore_return_address>:
   3371d:	41 5b                	pop    %r11
   3371f:	48 89 d8             	mov    %rbx,%rax

0000000000033722 <handle_realloc.end>:
   33722:	49 bd 00 01 00 00 00 	movabs $0x700000000100,%r13
   33729:	70 00 00 
   3372c:	4d 89 5d 00          	mov    %r11,0x0(%r13)
   33730:	48 83 c4 08          	add    $0x8,%rsp
   33734:	5b                   	pop    %rbx
   33735:	5d                   	pop    %rbp
   33736:	41 5c                	pop    %r12
   33738:	41 5d                	pop    %r13
   3373a:	41 5e                	pop    %r14
   3373c:	41 5f                	pop    %r15
   3373e:	c3                   	retq   

000000000003373f <allocate_mask_buffer>:
   3373f:	55                   	push   %rbp
   33740:	53                   	push   %rbx
   33741:	41 57                	push   %r15
   33743:	41 56                	push   %r14
   33745:	48 85 f6             	test   %rsi,%rsi
   33748:	74 3c                	je     33786 <allocate_mask_buffer.done>
   3374a:	48 89 fd             	mov    %rdi,%rbp
   3374d:	48 89 f3             	mov    %rsi,%rbx
   33750:	49 89 d6             	mov    %rdx,%r14
   33753:	4c 8d bf 00 10 00 c0 	lea    -0x3ffff000(%rdi),%r15
   3375a:	b8 09 00 00 00       	mov    $0x9,%eax
   3375f:	4c 89 ff             	mov    %r15,%rdi
   33762:	48 89 de             	mov    %rbx,%rsi
   33765:	ba 03 00 00 00       	mov    $0x3,%edx
   3376a:	41 ba 32 00 00 00    	mov    $0x32,%r10d
   33770:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   33777:	45 31 c9             	xor    %r9d,%r9d
   3377a:	0f 05                	syscall 
   3377c:	48 85 c0             	test   %rax,%rax
   3377f:	79 05                	jns    33786 <allocate_mask_buffer.done>
   33781:	e8 2b 00 00 00       	callq  337b1 <instrument_error>

0000000000033786 <allocate_mask_buffer.done>:
   33786:	4c 89 f8             	mov    %r15,%rax
   33789:	41 5e                	pop    %r14
   3378b:	41 5f                	pop    %r15
   3378d:	5b                   	pop    %rbx
   3378e:	5d                   	pop    %rbp
   3378f:	c3                   	retq   

0000000000033790 <get_random_bytes>:
   33790:	48 8d 46 08          	lea    0x8(%rsi),%rax
   33794:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   33798:	40 f6 c6 07          	test   $0x7,%sil
   3379c:	48 0f 45 f0          	cmovne %rax,%rsi

00000000000337a0 <get_random_bytes.get_random_number>:
   337a0:	48 0f c7 f0          	rdrand %rax
   337a4:	73 fa                	jae    337a0 <get_random_bytes.get_random_number>
   337a6:	48 89 f1             	mov    %rsi,%rcx
   337a9:	48 c1 e9 03          	shr    $0x3,%rcx
   337ad:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   337b0:	c3                   	retq   

00000000000337b1 <instrument_error>:
   337b1:	48 a3 00 00 00 00 00 	movabs %rax,0x0
   337b8:	00 00 00 

00000000000337bb <instrument_header_end>:
   337bb:	00 00                	add    %al,(%rax)
   337bd:	00 00                	add    %al,(%rax)
	...

00000000000337c0 <main.instr.bb_3390>:
   337c0:	c5 e5 ef db          	vpxor  %ymm3,%ymm3,%ymm3
   337c4:	c5 fe 7f 9c 24 98 0f 	vmovdqu %ymm3,-0x3ffff068(%rsp)
   337cb:	00 c0 
   337cd:	c5 fe 7f 9c 24 b8 0f 	vmovdqu %ymm3,-0x3ffff048(%rsp)
   337d4:	00 c0 
   337d6:	c5 fe 7f 9c 24 d8 0f 	vmovdqu %ymm3,-0x3ffff028(%rsp)
   337dd:	00 c0 
   337df:	c5 fa 7f 9c 24 f8 0f 	vmovdqu %xmm3,-0x3ffff008(%rsp)
   337e6:	00 c0 
   337e8:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   337ed:	f3 0f 1e fa          	endbr64 
   337f1:	41 56                	push   %r14
   337f3:	41 55                	push   %r13
   337f5:	41 54                	push   %r12
   337f7:	49 89 f4             	mov    %rsi,%r12
   337fa:	53                   	push   %rbx
   337fb:	89 fb                	mov    %edi,%ebx
   337fd:	bf 01 00 00 00       	mov    $0x1,%edi
   33802:	48 83 ec 48          	sub    $0x48,%rsp
   33806:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3380d:	00 00 
   3380f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   33814:	31 c0                	xor    %eax,%eax
   33816:	48 89 e6             	mov    %rsp,%rsi
   33819:	e8 12 fa fc ff       	callq  3230 <clock_gettime@plt>

000000000003381e <instr.bb_33c1>:
   3381e:	31 c0                	xor    %eax,%eax
   33820:	e8 eb 03 00 00       	callq  33c10 <foo.instr.bb_3800>

0000000000033825 <instr.bb_33c8>:
   33825:	83 fb 01             	cmp    $0x1,%ebx
   33828:	0f 8f 48 fd fc ff    	jg     3576 <main+0x1e6>

000000000003382e <instr.bb_33d1>:
   3382e:	48 8d 3d 8b ea ff ff 	lea    -0x1575(%rip),%rdi        # 322c0 <aes>
   33835:	45 31 ed             	xor    %r13d,%r13d
   33838:	45 31 e4             	xor    %r12d,%r12d
   3383b:	e8 a0 09 00 00       	callq  341e0 <mbedtls_gcm_init.instr.bb_3d60>

0000000000033840 <instr.bb_33e3>:
   33840:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   33845:	bf 01 00 00 00       	mov    $0x1,%edi
   3384a:	e8 e1 f9 fc ff       	callq  3230 <clock_gettime@plt>

000000000003384f <instr.bb_33f2>:
   3384f:	41 83 f4 01          	xor    $0x1,%r12d
   33853:	48 8d 1d c6 c7 ff ff 	lea    -0x383a(%rip),%rbx        # 30020 <__TMC_END__>
   3385a:	90                   	nop
   3385b:	90                   	nop
   3385c:	90                   	nop
   3385d:	90                   	nop
   3385e:	90                   	nop
   3385f:	90                   	nop
   33860:	45 85 ed             	test   %r13d,%r13d
   33863:	40 0f 94 c7          	sete   %dil
   33867:	44 09 e7             	or     %r12d,%edi
   3386a:	40 0f b6 ff          	movzbl %dil,%edi
   3386e:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33875:	70 00 00 
   33878:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   3387f:	00 
   33880:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33887:	70 00 00 
   3388a:	e8 d1 03 00 00       	callq  33c60 <cf_run_target.instr.bb_3850>
   3388f:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33896:	70 00 00 
   33899:	48 8b 37             	mov    (%rdi),%rsi
   3389c:	48 d1 ee             	shr    %rsi
   3389f:	48 89 37             	mov    %rsi,(%rdi)

00000000000338a2 <instr.bb_3413>:
   338a2:	e8 89 01 00 00       	callq  33a30 <drop_taint.instr.bb_3710>

00000000000338a7 <instr.bb_3418>:
   338a7:	48 8d 15 62 c7 ff ff 	lea    -0x389e(%rip),%rdx        # 30010 <m>
   338ae:	90                   	nop
   338af:	90                   	nop
   338b0:	40 8a 3a             	mov    (%rdx),%dil
   338b3:	8a 8a 00 10 00 c0    	mov    -0x3ffff000(%rdx),%cl
   338b9:	40 30 cf             	xor    %cl,%dil
   338bc:	40 80 c7 01          	add    $0x1,%dil
   338c0:	0f 94 c0             	sete   %al
   338c3:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   338c8:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   338cd:	88 8a 00 10 00 c0    	mov    %cl,-0x3ffff000(%rdx)
   338d3:	40 30 cf             	xor    %cl,%dil
   338d6:	40 88 3a             	mov    %dil,(%rdx)
   338d9:	2c 01                	sub    $0x1,%al
   338db:	0f 85 0d 00 00 00    	jne    338ee <instr.bb_342e>

00000000000338e1 <instr.bb_3425>:
   338e1:	48 83 c2 01          	add    $0x1,%rdx
   338e5:	48 39 d3             	cmp    %rdx,%rbx
   338e8:	0f 85 c2 ff ff ff    	jne    338b0 <instr.bb_3418+0x9>

00000000000338ee <instr.bb_342e>:
   338ee:	41 8d 45 ff          	lea    -0x1(%r13),%eax
   338f2:	45 85 ed             	test   %r13d,%r13d
   338f5:	0f 8e 6d fb fc ff    	jle    3468 <main+0xd8>

00000000000338fb <instr.bb_3437>:
   338fb:	41 89 c5             	mov    %eax,%r13d
   338fe:	e9 5d ff ff ff       	jmpq   33860 <instr.bb_33f2+0x11>
   33903:	90                   	nop
   33904:	90                   	nop
   33905:	90                   	nop
   33906:	90                   	nop
   33907:	90                   	nop
   33908:	90                   	nop
   33909:	90                   	nop
   3390a:	90                   	nop
   3390b:	90                   	nop
   3390c:	90                   	nop
   3390d:	90                   	nop
   3390e:	90                   	nop
   3390f:	90                   	nop

0000000000033910 <deregister_tm_clones.instr.bb_3610>:
   33910:	31 c9                	xor    %ecx,%ecx
   33912:	48 8d 3d 07 c7 ff ff 	lea    -0x38f9(%rip),%rdi        # 30020 <__TMC_END__>
   33919:	48 8d 05 00 c7 ff ff 	lea    -0x3900(%rip),%rax        # 30020 <__TMC_END__>
   33920:	48 39 f8             	cmp    %rdi,%rax
   33923:	0f 84 0f fd fc ff    	je     3638 <deregister_tm_clones+0x28>

0000000000033929 <instr.bb_3623>:
   33929:	48 8b 05 98 c6 ff ff 	mov    -0x3968(%rip),%rax        # 2ffc8 <_ITM_deregisterTMCloneTable>
   33930:	48 85 c0             	test   %rax,%rax
   33933:	0f 84 ff fc fc ff    	je     3638 <deregister_tm_clones+0x28>

0000000000033939 <instr.bb_362f>:
   33939:	ff e0                	jmpq   *%rax
   3393b:	90                   	nop
   3393c:	90                   	nop
   3393d:	90                   	nop
   3393e:	90                   	nop
   3393f:	90                   	nop

0000000000033940 <__do_global_dtors_aux.instr.bb_3680>:
   33940:	31 c9                	xor    %ecx,%ecx
   33942:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33949:	c0 
   3394a:	f3 0f 1e fa          	endbr64 
   3394e:	90                   	nop
   3394f:	8a 0d cb d6 ff bf    	mov    -0x40002935(%rip),%cl        # ffffffffc0031020 <.instr.bb_20898+0xffffffffbfffb050>
   33955:	32 0d c5 c6 ff ff    	xor    -0x393b(%rip),%cl        # 30020 <__TMC_END__>
   3395b:	80 f9 00             	cmp    $0x0,%cl
   3395e:	0f 85 54 fd fc ff    	jne    36b8 <__do_global_dtors_aux+0x38>

0000000000033964 <instr.bb_368d>:
   33964:	55                   	push   %rbp
   33965:	48 83 3d 7b c6 ff ff 	cmpq   $0x0,-0x3985(%rip)        # 2ffe8 <__cxa_finalize@GLIBC_2.2.5>
   3396c:	00 
   3396d:	48 89 e5             	mov    %rsp,%rbp
   33970:	0f 84 14 00 00 00    	je     3398a <instr.bb_36a7>

0000000000033976 <instr.bb_369b>:
   33976:	90                   	nop
   33977:	48 8b 3d 8a d6 ff bf 	mov    -0x40002976(%rip),%rdi        # ffffffffc0031008 <.instr.bb_20898+0xffffffffbfffb038>
   3397e:	48 33 3d 83 c6 ff ff 	xor    -0x397d(%rip),%rdi        # 30008 <__dso_handle>
   33985:	e8 46 f8 fc ff       	callq  31d0 <__cxa_finalize@plt>

000000000003398a <instr.bb_36a7>:
   3398a:	e8 81 ff ff ff       	callq  33910 <deregister_tm_clones.instr.bb_3610>

000000000003398f <instr.bb_36ac>:
   3398f:	90                   	nop
   33990:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   33995:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3399a:	88 0d 80 d6 ff bf    	mov    %cl,-0x40002980(%rip)        # ffffffffc0031020 <.instr.bb_20898+0xffffffffbfffb050>
   339a0:	80 f1 01             	xor    $0x1,%cl
   339a3:	88 0d 77 c6 ff ff    	mov    %cl,-0x3989(%rip)        # 30020 <__TMC_END__>
   339a9:	5d                   	pop    %rbp
   339aa:	c3                   	retq   
   339ab:	90                   	nop
   339ac:	90                   	nop
   339ad:	90                   	nop
   339ae:	90                   	nop
   339af:	90                   	nop

00000000000339b0 <classify.instr.bb_36d0>:
   339b0:	31 c9                	xor    %ecx,%ecx
   339b2:	89 8c 24 ec 0f 00 c0 	mov    %ecx,-0x3ffff014(%rsp)
   339b9:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   339c0:	c0 
   339c1:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   339c8:	c0 
   339c9:	f3 0f 1e fa          	endbr64 
   339cd:	55                   	push   %rbp
   339ce:	48 89 e5             	mov    %rsp,%rbp
   339d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   339d5:	89 75 f4             	mov    %esi,-0xc(%rbp)
   339d8:	90                   	nop
   339d9:	90                   	nop
   339da:	90                   	nop
   339db:	90                   	nop
   339dc:	90                   	nop
   339dd:	90                   	nop
   339de:	90                   	nop
   339df:	90                   	nop
   339e0:	5d                   	pop    %rbp
   339e1:	c3                   	retq   
   339e2:	90                   	nop
   339e3:	90                   	nop
   339e4:	90                   	nop
   339e5:	90                   	nop
   339e6:	90                   	nop
   339e7:	90                   	nop
   339e8:	90                   	nop
   339e9:	90                   	nop
   339ea:	90                   	nop
   339eb:	90                   	nop
   339ec:	90                   	nop
   339ed:	90                   	nop
   339ee:	90                   	nop
   339ef:	90                   	nop

00000000000339f0 <declassify.instr.bb_36f0>:
   339f0:	45 31 d2             	xor    %r10d,%r10d
   339f3:	44 89 94 24 ec 0f 00 	mov    %r10d,-0x3ffff014(%rsp)
   339fa:	c0 
   339fb:	4c 89 94 24 f0 0f 00 	mov    %r10,-0x3ffff010(%rsp)
   33a02:	c0 
   33a03:	4c 89 94 24 f8 0f 00 	mov    %r10,-0x3ffff008(%rsp)
   33a0a:	c0 
   33a0b:	f3 0f 1e fa          	endbr64 
   33a0f:	55                   	push   %rbp
   33a10:	48 89 e5             	mov    %rsp,%rbp
   33a13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   33a17:	89 75 f4             	mov    %esi,-0xc(%rbp)
   33a1a:	90                   	nop
   33a1b:	90                   	nop
   33a1c:	90                   	nop
   33a1d:	90                   	nop
   33a1e:	90                   	nop
   33a1f:	90                   	nop
   33a20:	5d                   	pop    %rbp
   33a21:	c3                   	retq   
   33a22:	90                   	nop
   33a23:	90                   	nop
   33a24:	90                   	nop
   33a25:	90                   	nop
   33a26:	90                   	nop
   33a27:	90                   	nop
   33a28:	90                   	nop
   33a29:	90                   	nop
   33a2a:	90                   	nop
   33a2b:	90                   	nop
   33a2c:	90                   	nop
   33a2d:	90                   	nop
   33a2e:	90                   	nop
   33a2f:	90                   	nop

0000000000033a30 <drop_taint.instr.bb_3710>:
   33a30:	31 c9                	xor    %ecx,%ecx
   33a32:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33a39:	c0 
   33a3a:	f3 0f 1e fa          	endbr64 
   33a3e:	55                   	push   %rbp
   33a3f:	48 89 e5             	mov    %rsp,%rbp
   33a42:	5d                   	pop    %rbp
   33a43:	c3                   	retq   
   33a44:	90                   	nop
   33a45:	90                   	nop
   33a46:	90                   	nop
   33a47:	90                   	nop
   33a48:	90                   	nop
   33a49:	90                   	nop
   33a4a:	90                   	nop
   33a4b:	90                   	nop
   33a4c:	90                   	nop
   33a4d:	90                   	nop
   33a4e:	90                   	nop
   33a4f:	90                   	nop

0000000000033a50 <dump_secret.instr.bb_3720>:
   33a50:	31 c9                	xor    %ecx,%ecx
   33a52:	48 89 8c 24 c8 0f 00 	mov    %rcx,-0x3ffff038(%rsp)
   33a59:	c0 
   33a5a:	48 89 8c 24 d0 0f 00 	mov    %rcx,-0x3ffff030(%rsp)
   33a61:	c0 
   33a62:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   33a69:	c0 
   33a6a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   33a71:	c0 
   33a72:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   33a79:	c0 
   33a7a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   33a81:	c0 
   33a82:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33a89:	c0 
   33a8a:	f3 0f 1e fa          	endbr64 
   33a8e:	41 57                	push   %r15
   33a90:	49 89 ff             	mov    %rdi,%r15
   33a93:	41 56                	push   %r14
   33a95:	49 89 d6             	mov    %rdx,%r14
   33a98:	48 63 d6             	movslq %esi,%rdx
   33a9b:	41 55                	push   %r13
   33a9d:	48 89 d7             	mov    %rdx,%rdi
   33aa0:	41 54                	push   %r12
   33aa2:	53                   	push   %rbx
   33aa3:	89 f3                	mov    %esi,%ebx
   33aa5:	48 83 ec 10          	sub    $0x10,%rsp
   33aa9:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   33aae:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33ab5:	70 00 00 
   33ab8:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33abf:	00 
   33ac0:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33ac7:	70 00 00 
   33aca:	48 8d 05 5f f8 fc ff 	lea    -0x307a1(%rip),%rax        # 3330 <malloc@plt>
   33ad1:	e8 d0 f9 ff ff       	callq  334a6 <handle_malloc>
   33ad6:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33add:	70 00 00 
   33ae0:	48 8b 37             	mov    (%rdi),%rsi
   33ae3:	48 d1 ee             	shr    %rsi
   33ae6:	48 89 37             	mov    %rsi,(%rdi)

0000000000033ae9 <instr.bb_3749>:
   33ae9:	bf 04 00 00 00       	mov    $0x4,%edi
   33aee:	49 89 c5             	mov    %rax,%r13
   33af1:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33af8:	70 00 00 
   33afb:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33b02:	00 
   33b03:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33b0a:	70 00 00 
   33b0d:	48 8d 05 1c f8 fc ff 	lea    -0x307e4(%rip),%rax        # 3330 <malloc@plt>
   33b14:	e8 8d f9 ff ff       	callq  334a6 <handle_malloc>
   33b19:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33b20:	70 00 00 
   33b23:	48 8b 37             	mov    (%rdi),%rsi
   33b26:	48 d1 ee             	shr    %rsi
   33b29:	48 89 37             	mov    %rsi,(%rdi)

0000000000033b2c <instr.bb_3756>:
   33b2c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   33b31:	4c 89 fe             	mov    %r15,%rsi
   33b34:	4c 89 ef             	mov    %r13,%rdi
   33b37:	49 89 c4             	mov    %rax,%r12
   33b3a:	e8 d1 f7 fc ff       	callq  3310 <memcpy@plt>

0000000000033b3f <instr.bb_3769>:
   33b3f:	be 04 00 00 00       	mov    $0x4,%esi
   33b44:	4c 89 e7             	mov    %r12,%rdi
   33b47:	41 89 1c 24          	mov    %ebx,(%r12)
   33b4b:	e8 a0 fe ff ff       	callq  339f0 <declassify.instr.bb_36f0>

0000000000033b50 <instr.bb_377a>:
   33b50:	41 8b 34 24          	mov    (%r12),%esi
   33b54:	4c 89 ef             	mov    %r13,%rdi
   33b57:	e8 94 fe ff ff       	callq  339f0 <declassify.instr.bb_36f0>

0000000000033b5c <instr.bb_3786>:
   33b5c:	4d 85 f6             	test   %r14,%r14
   33b5f:	0f 84 4b 00 00 00    	je     33bb0 <instr.bb_37a1>

0000000000033b65 <instr.bb_378b>:
   33b65:	4c 89 f2             	mov    %r14,%rdx
   33b68:	48 8d 35 99 d4 fe ff 	lea    -0x12b67(%rip),%rsi        # 21008 <_IO_stdin_used+0x8>
   33b6f:	bf 01 00 00 00       	mov    $0x1,%edi
   33b74:	31 c0                	xor    %eax,%eax
   33b76:	49 89 c2             	mov    %rax,%r10
   33b79:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33b80:	70 00 00 
   33b83:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33b8a:	00 
   33b8b:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33b92:	70 00 00 
   33b95:	4c 89 d0             	mov    %r10,%rax
   33b98:	e8 a3 f7 fc ff       	callq  3340 <__printf_chk@plt>
   33b9d:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33ba4:	70 00 00 
   33ba7:	48 8b 37             	mov    (%rdi),%rsi
   33baa:	48 d1 ee             	shr    %rsi
   33bad:	48 89 37             	mov    %rsi,(%rdi)

0000000000033bb0 <instr.bb_37a1>:
   33bb0:	41 8b 04 24          	mov    (%r12),%eax
   33bb4:	85 c0                	test   %eax,%eax
   33bb6:	0f 8e 2f 00 00 00    	jle    33beb <instr.bb_37d7>

0000000000033bbc <instr.bb_37a9>:
   33bbc:	31 db                	xor    %ebx,%ebx
   33bbe:	4c 8d 35 48 d4 fe ff 	lea    -0x12bb8(%rip),%r14        # 2100d <_IO_stdin_used+0xd>
   33bc5:	90                   	nop
   33bc6:	90                   	nop
   33bc7:	90                   	nop

0000000000033bc8 <instr.bb_37b8>:
   33bc8:	41 0f b6 54 1d 00    	movzbl 0x0(%r13,%rbx,1),%edx
   33bce:	4c 89 f6             	mov    %r14,%rsi
   33bd1:	bf 01 00 00 00       	mov    $0x1,%edi
   33bd6:	31 c0                	xor    %eax,%eax
   33bd8:	48 83 c3 01          	add    $0x1,%rbx
   33bdc:	e8 5f f7 fc ff       	callq  3340 <__printf_chk@plt>

0000000000033be1 <instr.bb_37d1>:
   33be1:	41 39 1c 24          	cmp    %ebx,(%r12)
   33be5:	0f 8f dd ff ff ff    	jg     33bc8 <instr.bb_37b8>

0000000000033beb <instr.bb_37d7>:
   33beb:	bf 0a 00 00 00       	mov    $0xa,%edi
   33bf0:	e8 fb f5 fc ff       	callq  31f0 <putchar@plt>

0000000000033bf5 <instr.bb_37e1>:
   33bf5:	4c 89 ef             	mov    %r13,%rdi
   33bf8:	e8 e3 f5 fc ff       	callq  31e0 <free@plt>

0000000000033bfd <instr.bb_37e9>:
   33bfd:	48 83 c4 10          	add    $0x10,%rsp
   33c01:	5b                   	pop    %rbx
   33c02:	41 5c                	pop    %r12
   33c04:	41 5d                	pop    %r13
   33c06:	41 5e                	pop    %r14
   33c08:	41 5f                	pop    %r15
   33c0a:	c3                   	retq   
   33c0b:	90                   	nop
   33c0c:	90                   	nop
   33c0d:	90                   	nop
   33c0e:	90                   	nop
   33c0f:	90                   	nop

0000000000033c10 <foo.instr.bb_3800>:
   33c10:	31 c9                	xor    %ecx,%ecx
   33c12:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   33c19:	c0 
   33c1a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   33c21:	c0 
   33c22:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   33c29:	c0 
   33c2a:	f3 0f 1e fa          	endbr64 
   33c2e:	55                   	push   %rbp
   33c2f:	48 89 e5             	mov    %rsp,%rbp
   33c32:	48 83 ec 10          	sub    $0x10,%rsp
   33c36:	bf 04 00 00 00       	mov    $0x4,%edi
   33c3b:	e8 f0 f6 fc ff       	callq  3330 <malloc@plt>

0000000000033c40 <instr.bb_3816>:
   33c40:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   33c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   33c48:	48 89 c7             	mov    %rax,%rdi
   33c4b:	e8 90 f5 fc ff       	callq  31e0 <free@plt>

0000000000033c50 <instr.bb_3826>:
   33c50:	c9                   	leaveq 
   33c51:	c3                   	retq   
   33c52:	90                   	nop
   33c53:	90                   	nop
   33c54:	90                   	nop
   33c55:	90                   	nop
   33c56:	90                   	nop
   33c57:	90                   	nop
   33c58:	90                   	nop
   33c59:	90                   	nop
   33c5a:	90                   	nop
   33c5b:	90                   	nop
   33c5c:	90                   	nop
   33c5d:	90                   	nop
   33c5e:	90                   	nop
   33c5f:	90                   	nop

0000000000033c60 <cf_run_target.instr.bb_3850>:
   33c60:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   33c64:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   33c6b:	00 c0 
   33c6d:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   33c74:	00 c0 
   33c76:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   33c7d:	00 c0 
   33c7f:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   33c84:	f3 0f 1e fa          	endbr64 
   33c88:	41 55                	push   %r13
   33c8a:	be 10 00 00 00       	mov    $0x10,%esi
   33c8f:	41 54                	push   %r12
   33c91:	53                   	push   %rbx
   33c92:	89 fb                	mov    %edi,%ebx
   33c94:	48 8d 3d 95 c3 ff ff 	lea    -0x3c6b(%rip),%rdi        # 30030 <key>
   33c9b:	e8 10 fd ff ff       	callq  339b0 <classify.instr.bb_36d0>

0000000000033ca0 <instr.bb_386c>:
   33ca0:	be 10 00 00 00       	mov    $0x10,%esi
   33ca5:	48 8d 3d 64 c3 ff ff 	lea    -0x3c9c(%rip),%rdi        # 30010 <m>
   33cac:	e8 ff fc ff ff       	callq  339b0 <classify.instr.bb_36d0>

0000000000033cb1 <instr.bb_387d>:
   33cb1:	b9 80 00 00 00       	mov    $0x80,%ecx
   33cb6:	48 8d 15 73 c3 ff ff 	lea    -0x3c8d(%rip),%rdx        # 30030 <key>
   33cbd:	be 02 00 00 00       	mov    $0x2,%esi
   33cc2:	48 8d 3d f7 e5 ff ff 	lea    -0x1a09(%rip),%rdi        # 322c0 <aes>
   33cc9:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33cd0:	70 00 00 
   33cd3:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   33cda:	00 
   33cdb:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33ce2:	70 00 00 
   33ce5:	e8 86 05 00 00       	callq  34270 <mbedtls_gcm_setkey.instr.bb_3da0>
   33cea:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33cf1:	70 00 00 
   33cf4:	48 8b 37             	mov    (%rdi),%rsi
   33cf7:	48 d1 ee             	shr    %rsi
   33cfa:	48 89 37             	mov    %rsi,(%rdi)

0000000000033cfd <instr.bb_389a>:
   33cfd:	85 c0                	test   %eax,%eax
   33cff:	0f 85 2b fc fc ff    	jne    3930 <cf_run_target+0xe0>

0000000000033d05 <instr.bb_38a2>:
   33d05:	bf 10 00 00 00       	mov    $0x10,%edi
   33d0a:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33d11:	70 00 00 
   33d14:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   33d1b:	00 
   33d1c:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33d23:	70 00 00 
   33d26:	48 8d 05 03 f6 fc ff 	lea    -0x309fd(%rip),%rax        # 3330 <malloc@plt>
   33d2d:	e8 74 f7 ff ff       	callq  334a6 <handle_malloc>
   33d32:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33d39:	70 00 00 
   33d3c:	48 8b 37             	mov    (%rdi),%rsi
   33d3f:	48 d1 ee             	shr    %rsi
   33d42:	48 89 37             	mov    %rsi,(%rdi)

0000000000033d45 <instr.bb_38ac>:
   33d45:	bf 10 00 00 00       	mov    $0x10,%edi
   33d4a:	49 89 c4             	mov    %rax,%r12
   33d4d:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33d54:	70 00 00 
   33d57:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   33d5e:	00 
   33d5f:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33d66:	70 00 00 
   33d69:	48 8d 05 c0 f5 fc ff 	lea    -0x30a40(%rip),%rax        # 3330 <malloc@plt>
   33d70:	e8 31 f7 ff ff       	callq  334a6 <handle_malloc>
   33d75:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33d7c:	70 00 00 
   33d7f:	48 8b 37             	mov    (%rdi),%rsi
   33d82:	48 d1 ee             	shr    %rsi
   33d85:	48 89 37             	mov    %rsi,(%rdi)

0000000000033d88 <instr.bb_38b9>:
   33d88:	48 83 ec 30          	sub    $0x30,%rsp
   33d8c:	45 31 c9             	xor    %r9d,%r9d
   33d8f:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   33d95:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   33d9a:	49 89 c5             	mov    %rax,%r13
   33d9d:	ba 10 00 00 00       	mov    $0x10,%edx
   33da2:	48 8d 05 67 c2 ff ff 	lea    -0x3d99(%rip),%rax        # 30010 <m>
   33da9:	48 c7 44 24 18 10 00 	movq   $0x10,0x18(%rsp)
   33db0:	00 00 
   33db2:	48 8d 0d 87 c2 ff ff 	lea    -0x3d79(%rip),%rcx        # 30040 <iv>
   33db9:	be 01 00 00 00       	mov    $0x1,%esi
   33dbe:	48 8d 3d fb e4 ff ff 	lea    -0x1b05(%rip),%rdi        # 322c0 <aes>
   33dc5:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   33dca:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   33dcf:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   33dd6:	00 
   33dd7:	e8 14 0f 00 00       	callq  34cf0 <mbedtls_gcm_crypt_and_tag.instr.bb_4760>

0000000000033ddc <instr.bb_390d>:
   33ddc:	48 83 c4 30          	add    $0x30,%rsp
   33de0:	85 c0                	test   %eax,%eax
   33de2:	0f 85 98 fb fc ff    	jne    3980 <cf_run_target+0x130>

0000000000033de8 <instr.bb_3915>:
   33de8:	84 db                	test   %bl,%bl
   33dea:	0f 85 10 00 00 00    	jne    33e00 <instr.bb_3948>

0000000000033df0 <instr.bb_3919>:
   33df0:	4c 89 e7             	mov    %r12,%rdi
   33df3:	e8 e8 f3 fc ff       	callq  31e0 <free@plt>
   33df8:	e9 24 fb fc ff       	jmpq   3921 <cf_run_target+0xd1>
   33dfd:	90                   	nop
   33dfe:	90                   	nop
   33dff:	90                   	nop

0000000000033e00 <instr.bb_3948>:
   33e00:	4c 89 e7             	mov    %r12,%rdi
   33e03:	48 8d 15 9a d2 fe ff 	lea    -0x12d66(%rip),%rdx        # 210a4 <_IO_stdin_used+0xa4>
   33e0a:	be 10 00 00 00       	mov    $0x10,%esi
   33e0f:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33e16:	70 00 00 
   33e19:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33e20:	00 
   33e21:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33e28:	70 00 00 
   33e2b:	e8 20 fc ff ff       	callq  33a50 <dump_secret.instr.bb_3720>
   33e30:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33e37:	70 00 00 
   33e3a:	48 8b 37             	mov    (%rdi),%rsi
   33e3d:	48 d1 ee             	shr    %rsi
   33e40:	48 89 37             	mov    %rsi,(%rdi)

0000000000033e43 <instr.bb_395c>:
   33e43:	4c 89 ef             	mov    %r13,%rdi
   33e46:	be 10 00 00 00       	mov    $0x10,%esi
   33e4b:	48 8d 15 5d d2 fe ff 	lea    -0x12da3(%rip),%rdx        # 210af <_IO_stdin_used+0xaf>
   33e52:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   33e59:	70 00 00 
   33e5c:	48 8d 04 45 00 00 00 	lea    0x0(,%rax,2),%rax
   33e63:	00 
   33e64:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   33e6b:	70 00 00 
   33e6e:	e8 dd fb ff ff       	callq  33a50 <dump_secret.instr.bb_3720>
   33e73:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   33e7a:	70 00 00 
   33e7d:	48 8b 37             	mov    (%rdi),%rsi
   33e80:	48 d1 ee             	shr    %rsi
   33e83:	48 89 37             	mov    %rsi,(%rdi)

0000000000033e86 <instr.bb_3970>:
   33e86:	4c 89 e7             	mov    %r12,%rdi
   33e89:	e8 52 f3 fc ff       	callq  31e0 <free@plt>

0000000000033e8e <instr.bb_3978>:
   33e8e:	5b                   	pop    %rbx
   33e8f:	41 5c                	pop    %r12
   33e91:	41 5d                	pop    %r13
   33e93:	c3                   	retq   
   33e94:	90                   	nop
   33e95:	90                   	nop
   33e96:	90                   	nop
   33e97:	90                   	nop
   33e98:	90                   	nop
   33e99:	90                   	nop
   33e9a:	90                   	nop
   33e9b:	90                   	nop
   33e9c:	90                   	nop
   33e9d:	90                   	nop
   33e9e:	90                   	nop
   33e9f:	90                   	nop

0000000000033ea0 <gcm_mult.instr.bb_39b0>:
   33ea0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   33ea4:	c4 c2 7d 59 c6       	vpbroadcastq %xmm14,%ymm0
   33ea9:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   33eae:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   33eb5:	00 c0 
   33eb7:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   33ebe:	00 c0 
   33ec0:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   33ec7:	00 c0 
   33ec9:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   33ece:	c5 fa 7f 84 24 b8 0f 	vmovdqu %xmm0,-0x3ffff048(%rsp)
   33ed5:	00 c0 
   33ed7:	41 55                	push   %r13
   33ed9:	41 54                	push   %r12
   33edb:	49 89 f4             	mov    %rsi,%r12
   33ede:	55                   	push   %rbp
   33edf:	48 89 d5             	mov    %rdx,%rbp
   33ee2:	53                   	push   %rbx
   33ee3:	48 89 fb             	mov    %rdi,%rbx
   33ee6:	bf 02 00 00 00       	mov    $0x2,%edi
   33eeb:	48 83 ec 28          	sub    $0x28,%rsp
   33eef:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   33ef6:	00 00 
   33ef8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   33efd:	31 c0                	xor    %eax,%eax
   33eff:	e8 9c 0e 00 00       	callq  34da0 <mbedtls_aesni_has_support.instr.bb_52e0>

0000000000033f04 <instr.bb_39dd>:
   33f04:	85 c0                	test   %eax,%eax
   33f06:	0f 85 44 00 00 00    	jne    33f50 <instr.bb_3b00>

0000000000033f0c <instr.bb_39e5>:
   33f0c:	41 0f b6 7c 24 0f    	movzbl 0xf(%r12),%edi
   33f12:	4c 8d 15 47 de fe ff 	lea    -0x121b9(%rip),%r10        # 21d60 <last4>
   33f19:	41 b8 0e 00 00 00    	mov    $0xe,%r8d
   33f1f:	48 89 f8             	mov    %rdi,%rax
   33f22:	40 c0 ef 04          	shr    $0x4,%dil
   33f26:	83 e0 0f             	and    $0xf,%eax
   33f29:	48 8d 14 c3          	lea    (%rbx,%rax,8),%rdx
   33f2d:	48 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%rax
   33f34:	48 8b 52 60          	mov    0x60(%rdx),%rdx
   33f38:	48 89 d1             	mov    %rdx,%rcx
   33f3b:	83 e1 0f             	and    $0xf,%ecx
   33f3e:	49 8b 0c ca          	mov    (%r10,%rcx,8),%rcx
   33f42:	e9 42 fb fc ff       	jmpq   3a89 <gcm_mult+0xd9>
   33f47:	90                   	nop
   33f48:	90                   	nop
   33f49:	90                   	nop
   33f4a:	90                   	nop
   33f4b:	90                   	nop
   33f4c:	90                   	nop
   33f4d:	90                   	nop
   33f4e:	90                   	nop
   33f4f:	90                   	nop

0000000000033f50 <instr.bb_3b00>:
   33f50:	48 8b 83 20 11 00 c0 	mov    -0x3fffeee0(%rbx),%rax
   33f57:	48 33 83 20 01 00 00 	xor    0x120(%rbx),%rax
   33f5e:	4c 89 e6             	mov    %r12,%rsi
   33f61:	48 89 ef             	mov    %rbp,%rdi
   33f64:	48 89 c2             	mov    %rax,%rdx
   33f67:	0f c8                	bswap  %eax
   33f69:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   33f6e:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   33f73:	89 8c 24 04 10 00 c0 	mov    %ecx,-0x3fffeffc(%rsp)
   33f7a:	31 c1                	xor    %eax,%ecx
   33f7c:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
   33f80:	48 8b 83 a0 10 00 c0 	mov    -0x3fffef60(%rbx),%rax
   33f87:	48 33 83 a0 00 00 00 	xor    0xa0(%rbx),%rax
   33f8e:	48 c1 ea 20          	shr    $0x20,%rdx
   33f92:	0f ca                	bswap  %edx
   33f94:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   33f99:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   33f9e:	89 9c 24 00 10 00 c0 	mov    %ebx,-0x3ffff000(%rsp)
   33fa5:	31 d3                	xor    %edx,%ebx
   33fa7:	89 1c 24             	mov    %ebx,(%rsp)
   33faa:	48 89 c2             	mov    %rax,%rdx
   33fad:	0f c8                	bswap  %eax
   33faf:	48 c1 ea 20          	shr    $0x20,%rdx
   33fb3:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   33fb8:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   33fbd:	89 9c 24 0c 10 00 c0 	mov    %ebx,-0x3fffeff4(%rsp)
   33fc4:	31 c3                	xor    %eax,%ebx
   33fc6:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
   33fca:	0f ca                	bswap  %edx
   33fcc:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   33fd1:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   33fd6:	89 9c 24 08 10 00 c0 	mov    %ebx,-0x3fffeff8(%rsp)
   33fdd:	31 d3                	xor    %edx,%ebx
   33fdf:	89 5c 24 08          	mov    %ebx,0x8(%rsp)
   33fe3:	48 89 e2             	mov    %rsp,%rdx
   33fe6:	e8 05 0f 00 00       	callq  34ef0 <mbedtls_aesni_gcm_mult.instr.bb_53a0>

0000000000033feb <instr.bb_3b41>:
   33feb:	e9 f4 fa fc ff       	jmpq   3ae4 <gcm_mult+0x134>

0000000000033ff0 <gcm_mask.instr.bb_3b70>:
   33ff0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   33ff4:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   33ffb:	00 c0 
   33ffd:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   34004:	00 c0 
   34006:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   3400d:	00 c0 
   3400f:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
   34014:	41 57                	push   %r15
   34016:	49 89 f7             	mov    %rsi,%r15
   34019:	48 8d b7 80 01 00 00 	lea    0x180(%rdi),%rsi
   34020:	41 56                	push   %r14
   34022:	49 89 d6             	mov    %rdx,%r14
   34025:	ba 10 00 00 00       	mov    $0x10,%edx
   3402a:	41 55                	push   %r13
   3402c:	4d 89 cd             	mov    %r9,%r13
   3402f:	41 54                	push   %r12
   34031:	4d 89 c4             	mov    %r8,%r12
   34034:	55                   	push   %rbp
   34035:	48 89 fd             	mov    %rdi,%rbp
   34038:	53                   	push   %rbx
   34039:	48 89 cb             	mov    %rcx,%rbx
   3403c:	4c 89 f9             	mov    %r15,%rcx
   3403f:	48 83 ec 28          	sub    $0x28,%rsp
   34043:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3404a:	00 00 
   3404c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   34051:	31 c0                	xor    %eax,%eax
   34053:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   34058:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   3405f:	00 00 
   34061:	e8 ea 14 00 00       	callq  35550 <mbedtls_cipher_update.instr.bb_6050>

0000000000034066 <instr.bb_3bc2>:
   34066:	85 c0                	test   %eax,%eax
   34068:	0f 85 52 fc fc ff    	jne    3cc0 <gcm_mask+0x150>

000000000003406e <instr.bb_3bca>:
   3406e:	8b 95 a0 11 00 c0    	mov    -0x3fffee60(%rbp),%edx
   34074:	33 95 a0 01 00 00    	xor    0x1a0(%rbp),%edx
   3407a:	4d 01 f7             	add    %r14,%r15
   3407d:	85 d2                	test   %edx,%edx
   3407f:	0f 84 db fb fc ff    	je     3c60 <gcm_mask+0xf0>

0000000000034085 <instr.bb_3bdb>:
   34085:	48 83 fb 03          	cmp    $0x3,%rbx
   34089:	0f 86 51 fc fc ff    	jbe    3ce0 <gcm_mask+0x170>

000000000003408f <instr.bb_3be5>:
   3408f:	b9 04 00 00 00       	mov    $0x4,%ecx
   34094:	90                   	nop
   34095:	90                   	nop
   34096:	90                   	nop
   34097:	90                   	nop
   34098:	90                   	nop
   34099:	90                   	nop
   3409a:	90                   	nop
   3409b:	90                   	nop
   3409c:	90                   	nop
   3409d:	90                   	nop
   3409e:	90                   	nop
   3409f:	90                   	nop

00000000000340a0 <instr.bb_3bf0>:
   340a0:	41 8b 94 0f fc 0f 00 	mov    -0x3ffff004(%r15,%rcx,1),%edx
   340a7:	c0 
   340a8:	41 33 54 0f fc       	xor    -0x4(%r15,%rcx,1),%edx
   340ad:	41 8b bc 0c fc 0f 00 	mov    -0x3ffff004(%r12,%rcx,1),%edi
   340b4:	c0 
   340b5:	41 33 7c 0c fc       	xor    -0x4(%r12,%rcx,1),%edi
   340ba:	31 fa                	xor    %edi,%edx
   340bc:	c4 61 f9 7e f7       	vmovq  %xmm14,%rdi
   340c1:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   340c6:	41 89 bc 0d fc 0f 00 	mov    %edi,-0x3ffff004(%r13,%rcx,1)
   340cd:	c0 
   340ce:	31 d7                	xor    %edx,%edi
   340d0:	41 89 7c 0d fc       	mov    %edi,-0x4(%r13,%rcx,1)
   340d5:	48 89 ca             	mov    %rcx,%rdx
   340d8:	48 83 c1 04          	add    $0x4,%rcx
   340dc:	48 39 cb             	cmp    %rcx,%rbx
   340df:	0f 83 bb ff ff ff    	jae    340a0 <instr.bb_3bf0>

00000000000340e5 <instr.bb_3c0b>:
   340e5:	48 39 d3             	cmp    %rdx,%rbx
   340e8:	0f 86 1b 00 00 00    	jbe    34109 <instr.bb_3c27>

00000000000340ee <instr.bb_3c10>:
   340ee:	41 0f b6 0c 17       	movzbl (%r15,%rdx,1),%ecx
   340f3:	41 32 0c 14          	xor    (%r12,%rdx,1),%cl
   340f7:	41 88 4c 15 00       	mov    %cl,0x0(%r13,%rdx,1)
   340fc:	48 83 c2 01          	add    $0x1,%rdx
   34100:	48 39 d3             	cmp    %rdx,%rbx
   34103:	0f 87 e5 ff ff ff    	ja     340ee <instr.bb_3c10>

0000000000034109 <instr.bb_3c27>:
   34109:	8b 8d a0 11 00 c0    	mov    -0x3fffee60(%rbp),%ecx
   3410f:	33 8d a0 01 00 00    	xor    0x1a0(%rbp),%ecx
   34115:	83 f9 01             	cmp    $0x1,%ecx
   34118:	0f 84 32 00 00 00    	je     34150 <instr.bb_3cf0>

000000000003411e <instr.bb_3c34>:
   3411e:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   34123:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   3412a:	00 00 
   3412c:	0f 85 1e fc fc ff    	jne    3d50 <gcm_mask+0x1e0>

0000000000034132 <instr.bb_3c48>:
   34132:	48 83 c4 28          	add    $0x28,%rsp
   34136:	5b                   	pop    %rbx
   34137:	5d                   	pop    %rbp
   34138:	41 5c                	pop    %r12
   3413a:	41 5d                	pop    %r13
   3413c:	41 5e                	pop    %r14
   3413e:	41 5f                	pop    %r15
   34140:	c3                   	retq   
   34141:	90                   	nop
   34142:	90                   	nop
   34143:	90                   	nop
   34144:	90                   	nop
   34145:	90                   	nop
   34146:	90                   	nop
   34147:	90                   	nop
   34148:	90                   	nop
   34149:	90                   	nop
   3414a:	90                   	nop
   3414b:	90                   	nop
   3414c:	90                   	nop
   3414d:	90                   	nop
   3414e:	90                   	nop
   3414f:	90                   	nop

0000000000034150 <instr.bb_3cf0>:
   34150:	4a 8d b4 35 90 01 00 	lea    0x190(%rbp,%r14,1),%rsi
   34157:	00 
   34158:	ba 04 00 00 00       	mov    $0x4,%edx
   3415d:	31 c9                	xor    %ecx,%ecx
   3415f:	48 83 fb 03          	cmp    $0x3,%rbx
   34163:	0f 86 4a 00 00 00    	jbe    341b3 <instr.bb_3d1d>

0000000000034169 <instr.bb_3d05>:
   34169:	90                   	nop
   3416a:	90                   	nop
   3416b:	90                   	nop
   3416c:	90                   	nop
   3416d:	90                   	nop
   3416e:	90                   	nop
   3416f:	90                   	nop

0000000000034170 <instr.bb_3d08>:
   34170:	41 8b 8c 15 fc 0f 00 	mov    -0x3ffff004(%r13,%rdx,1),%ecx
   34177:	c0 
   34178:	41 33 4c 15 fc       	xor    -0x4(%r13,%rdx,1),%ecx
   3417d:	8b 6c 16 fc          	mov    -0x4(%rsi,%rdx,1),%ebp
   34181:	8b bc 16 fc 0f 00 c0 	mov    -0x3ffff004(%rsi,%rdx,1),%edi
   34188:	31 fd                	xor    %edi,%ebp
   3418a:	31 cd                	xor    %ecx,%ebp
   3418c:	c4 61 f9 7e f7       	vmovq  %xmm14,%rdi
   34191:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34196:	89 bc 16 fc 0f 00 c0 	mov    %edi,-0x3ffff004(%rsi,%rdx,1)
   3419d:	31 fd                	xor    %edi,%ebp
   3419f:	89 6c 16 fc          	mov    %ebp,-0x4(%rsi,%rdx,1)
   341a3:	48 89 d1             	mov    %rdx,%rcx
   341a6:	48 83 c2 04          	add    $0x4,%rdx
   341aa:	48 39 d3             	cmp    %rdx,%rbx
   341ad:	0f 83 bd ff ff ff    	jae    34170 <instr.bb_3d08>

00000000000341b3 <instr.bb_3d1d>:
   341b3:	48 39 cb             	cmp    %rcx,%rbx
   341b6:	0f 86 62 ff ff ff    	jbe    3411e <instr.bb_3c34>

00000000000341bc <instr.bb_3d26>:
   341bc:	41 0f b6 54 0d 00    	movzbl 0x0(%r13,%rcx,1),%edx
   341c2:	30 14 0e             	xor    %dl,(%rsi,%rcx,1)
   341c5:	48 83 c1 01          	add    $0x1,%rcx
   341c9:	48 39 cb             	cmp    %rcx,%rbx
   341cc:	0f 85 ea ff ff ff    	jne    341bc <instr.bb_3d26>
   341d2:	e9 61 fb fc ff       	jmpq   3d38 <gcm_mask+0x1c8>
   341d7:	90                   	nop
   341d8:	90                   	nop
   341d9:	90                   	nop
   341da:	90                   	nop
   341db:	90                   	nop
   341dc:	90                   	nop
   341dd:	90                   	nop
   341de:	90                   	nop
   341df:	90                   	nop

00000000000341e0 <mbedtls_gcm_init.instr.bb_3d60>:
   341e0:	31 c9                	xor    %ecx,%ecx
   341e2:	f3 0f 1e fa          	endbr64 
   341e6:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   341eb:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   341f0:	48 89 8f 00 10 00 c0 	mov    %rcx,-0x3ffff000(%rdi)
   341f7:	48 89 0f             	mov    %rcx,(%rdi)
   341fa:	48 89 f9             	mov    %rdi,%rcx
   341fd:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   34201:	31 c0                	xor    %eax,%eax
   34203:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
   34208:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3420d:	48 89 b7 98 11 00 c0 	mov    %rsi,-0x3fffee68(%rdi)
   34214:	48 89 b7 98 01 00 00 	mov    %rsi,0x198(%rdi)
   3421b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   3421f:	48 29 f9             	sub    %rdi,%rcx
   34222:	81 c1 a8 01 00 00    	add    $0x1a8,%ecx
   34228:	c1 e9 03             	shr    $0x3,%ecx

000000000003422b <instr.bb_3d8f>:
   3422b:	49 89 c8             	mov    %rcx,%r8
   3422e:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
   34233:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34238:	48 31 f0             	xor    %rsi,%rax
   3423b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   3423e:	4c 89 c1             	mov    %r8,%rcx
   34241:	49 89 c0             	mov    %rax,%r8
   34244:	48 89 f0             	mov    %rsi,%rax
   34247:	48 8d 34 cd 00 00 00 	lea    0x0(,%rcx,8),%rsi
   3424e:	00 
   3424f:	48 29 f7             	sub    %rsi,%rdi
   34252:	48 81 c7 00 10 00 c0 	add    $0xffffffffc0001000,%rdi
   34259:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   3425c:	4c 31 c0             	xor    %r8,%rax
   3425f:	48 81 ef 00 10 00 c0 	sub    $0xffffffffc0001000,%rdi

0000000000034266 <instr.bb_3d92>:
   34266:	c3                   	retq   
   34267:	90                   	nop
   34268:	90                   	nop
   34269:	90                   	nop
   3426a:	90                   	nop
   3426b:	90                   	nop
   3426c:	90                   	nop
   3426d:	90                   	nop
   3426e:	90                   	nop
   3426f:	90                   	nop

0000000000034270 <mbedtls_gcm_setkey.instr.bb_3da0>:
   34270:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   34274:	c4 c2 7d 59 c6       	vpbroadcastq %xmm14,%ymm0
   34279:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3427e:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   34285:	00 c0 
   34287:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   3428e:	00 c0 
   34290:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   34297:	00 c0 
   34299:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
   3429e:	c5 fa 7f 84 24 b8 0f 	vmovdqu %xmm0,-0x3ffff048(%rsp)
   342a5:	00 c0 
   342a7:	f3 0f 1e fa          	endbr64 
   342ab:	41 55                	push   %r13
   342ad:	41 89 cd             	mov    %ecx,%r13d
   342b0:	41 54                	push   %r12
   342b2:	55                   	push   %rbp
   342b3:	48 89 d5             	mov    %rdx,%rbp
   342b6:	53                   	push   %rbx
   342b7:	48 89 fb             	mov    %rdi,%rbx
   342ba:	89 f7                	mov    %esi,%edi
   342bc:	48 83 ec 38          	sub    $0x38,%rsp
   342c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   342c7:	00 00 
   342c9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   342ce:	31 c0                	xor    %eax,%eax
   342d0:	89 c8                	mov    %ecx,%eax
   342d2:	83 e0 bf             	and    $0xffffffbf,%eax
   342d5:	3d 80 00 00 00       	cmp    $0x80,%eax
   342da:	0f 84 0c 00 00 00    	je     342ec <instr.bb_3de1>

00000000000342e0 <instr.bb_3dd5>:
   342e0:	81 f9 00 01 00 00    	cmp    $0x100,%ecx
   342e6:	0f 85 b4 fc fc ff    	jne    3fa0 <mbedtls_gcm_setkey+0x200>

00000000000342ec <instr.bb_3de1>:
   342ec:	ba 01 00 00 00       	mov    $0x1,%edx
   342f1:	44 89 ee             	mov    %r13d,%esi
   342f4:	e8 97 0f 00 00       	callq  35290 <mbedtls_cipher_info_from_values.instr.bb_5bd0>

00000000000342f9 <instr.bb_3dee>:
   342f9:	49 89 c4             	mov    %rax,%r12
   342fc:	48 85 c0             	test   %rax,%rax
   342ff:	0f 84 9b fc fc ff    	je     3fa0 <mbedtls_gcm_setkey+0x200>

0000000000034305 <instr.bb_3dfa>:
   34305:	83 78 20 10          	cmpl   $0x10,0x20(%rax)
   34309:	0f 85 91 fc fc ff    	jne    3fa0 <mbedtls_gcm_setkey+0x200>

000000000003430f <instr.bb_3e04>:
   3430f:	48 89 df             	mov    %rbx,%rdi
   34312:	e8 d9 0f 00 00       	callq  352f0 <mbedtls_cipher_free.instr.bb_5c50>

0000000000034317 <instr.bb_3e0c>:
   34317:	4c 89 e6             	mov    %r12,%rsi
   3431a:	48 89 df             	mov    %rbx,%rdi
   3431d:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   34324:	70 00 00 
   34327:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   3432e:	00 
   3432f:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   34336:	70 00 00 
   34339:	e8 32 10 00 00       	callq  35370 <mbedtls_cipher_setup.instr.bb_5cb0>
   3433e:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   34345:	70 00 00 
   34348:	48 8b 37             	mov    (%rdi),%rsi
   3434b:	48 d1 ee             	shr    %rsi
   3434e:	48 89 37             	mov    %rsi,(%rdi)

0000000000034351 <instr.bb_3e17>:
   34351:	41 89 c4             	mov    %eax,%r12d
   34354:	85 c0                	test   %eax,%eax
   34356:	0f 84 22 00 00 00    	je     3437e <instr.bb_3e40>

000000000003435c <instr.bb_3e1e>:
   3435c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   34361:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   34368:	00 00 
   3436a:	0f 85 3b fc fc ff    	jne    3fab <mbedtls_gcm_setkey+0x20b>

0000000000034370 <instr.bb_3e32>:
   34370:	48 83 c4 38          	add    $0x38,%rsp
   34374:	44 89 e0             	mov    %r12d,%eax
   34377:	5b                   	pop    %rbx
   34378:	5d                   	pop    %rbp
   34379:	41 5c                	pop    %r12
   3437b:	41 5d                	pop    %r13
   3437d:	c3                   	retq   

000000000003437e <instr.bb_3e40>:
   3437e:	b9 01 00 00 00       	mov    $0x1,%ecx
   34383:	44 89 ea             	mov    %r13d,%edx
   34386:	48 89 ee             	mov    %rbp,%rsi
   34389:	48 89 df             	mov    %rbx,%rdi
   3438c:	e8 2f 11 00 00       	callq  354c0 <mbedtls_cipher_setkey.instr.bb_5d50>

0000000000034391 <instr.bb_3e53>:
   34391:	41 89 c4             	mov    %eax,%r12d
   34394:	85 c0                	test   %eax,%eax
   34396:	0f 85 c0 ff ff ff    	jne    3435c <instr.bb_3e1e>

000000000003439c <instr.bb_3e5a>:
   3439c:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   343a1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   343a5:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   343aa:	48 89 df             	mov    %rbx,%rdi
   343ad:	48 89 f1             	mov    %rsi,%rcx
   343b0:	ba 10 00 00 00       	mov    $0x10,%edx
   343b5:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
   343b9:	4c 8b 8c 24 10 10 00 	mov    -0x3fffeff0(%rsp),%r9
   343c0:	c0 
   343c1:	4d 85 c9             	test   %r9,%r9
   343c4:	0f 84 0a 00 00 00    	je     343d4 <instr.bb_3e5a+0x38>
   343ca:	c4 c2 79 59 ce       	vpbroadcastq %xmm14,%xmm1
   343cf:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   343d4:	c5 fa 7f 8c 24 10 10 	vmovdqu %xmm1,-0x3fffeff0(%rsp)
   343db:	00 c0 
   343dd:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   343e1:	c5 fa 7f 4c 24 10    	vmovdqu %xmm1,0x10(%rsp)
   343e7:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   343ee:	00 00 
   343f0:	e8 5b 11 00 00       	callq  35550 <mbedtls_cipher_update.instr.bb_6050>

00000000000343f5 <instr.bb_3e86>:
   343f5:	41 89 c4             	mov    %eax,%r12d
   343f8:	85 c0                	test   %eax,%eax
   343fa:	0f 85 5c ff ff ff    	jne    3435c <instr.bb_3e1e>

0000000000034400 <instr.bb_3e8d>:
   34400:	8b 84 24 10 10 00 c0 	mov    -0x3fffeff0(%rsp),%eax
   34407:	33 44 24 10          	xor    0x10(%rsp),%eax
   3440b:	8b 94 24 14 10 00 c0 	mov    -0x3fffefec(%rsp),%edx
   34412:	33 54 24 14          	xor    0x14(%rsp),%edx
   34416:	bf 02 00 00 00       	mov    $0x2,%edi
   3441b:	8b ac 24 18 10 00 c0 	mov    -0x3fffefe8(%rsp),%ebp
   34422:	33 6c 24 18          	xor    0x18(%rsp),%ebp
   34426:	0f c8                	bswap  %eax
   34428:	0f ca                	bswap  %edx
   3442a:	48 c1 e0 20          	shl    $0x20,%rax
   3442e:	89 d2                	mov    %edx,%edx
   34430:	48 09 d0             	or     %rdx,%rax
   34433:	8b 94 24 1c 10 00 c0 	mov    -0x3fffefe4(%rsp),%edx
   3443a:	33 54 24 1c          	xor    0x1c(%rsp),%edx
   3443e:	0f cd                	bswap  %ebp
   34440:	48 c1 e5 20          	shl    $0x20,%rbp
   34444:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   34449:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3444e:	48 89 8b 20 11 00 c0 	mov    %rcx,-0x3fffeee0(%rbx)
   34455:	48 31 c1             	xor    %rax,%rcx
   34458:	48 89 8b 20 01 00 00 	mov    %rcx,0x120(%rbx)
   3445f:	49 89 c5             	mov    %rax,%r13
   34462:	0f ca                	bswap  %edx
   34464:	89 d2                	mov    %edx,%edx
   34466:	48 09 d5             	or     %rdx,%rbp
   34469:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   3446e:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34473:	48 89 8b a0 10 00 c0 	mov    %rcx,-0x3fffef60(%rbx)
   3447a:	48 31 e9             	xor    %rbp,%rcx
   3447d:	48 89 8b a0 00 00 00 	mov    %rcx,0xa0(%rbx)
   34484:	e8 17 09 00 00       	callq  34da0 <mbedtls_aesni_has_support.instr.bb_52e0>

0000000000034489 <instr.bb_3ed2>:
   34489:	85 c0                	test   %eax,%eax
   3448b:	0f 85 cb fe ff ff    	jne    3435c <instr.bb_3e1e>

0000000000034491 <instr.bb_3eda>:
   34491:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   34498:	00 00 00 00 
   3449c:	b9 03 00 00 00       	mov    $0x3,%ecx
   344a1:	ba 04 00 00 00       	mov    $0x4,%edx
   344a6:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
   344ad:	00 
   344ae:	89 e8                	mov    %ebp,%eax
   344b0:	48 d1 ed             	shr    %rbp
   344b3:	83 e0 01             	and    $0x1,%eax
   344b6:	89 c6                	mov    %eax,%esi
   344b8:	c1 e6 05             	shl    $0x5,%esi
   344bb:	29 f0                	sub    %esi,%eax
   344bd:	4c 89 ee             	mov    %r13,%rsi
   344c0:	49 d1 ed             	shr    %r13
   344c3:	c1 e0 18             	shl    $0x18,%eax
   344c6:	48 c1 e6 3f          	shl    $0x3f,%rsi
   344ca:	48 c1 e0 20          	shl    $0x20,%rax
   344ce:	48 09 f5             	or     %rsi,%rbp
   344d1:	49 31 c5             	xor    %rax,%r13
   344d4:	48 63 c2             	movslq %edx,%rax
   344d7:	d1 fa                	sar    %edx
   344d9:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
   344dd:	48 89 68 60          	mov    %rbp,0x60(%rax)
   344e1:	4c 89 a8 e0 00 00 00 	mov    %r13,0xe0(%rax)
   344e8:	83 e9 01             	sub    $0x1,%ecx
   344eb:	0f 85 bd ff ff ff    	jne    344ae <instr.bb_3eda+0x1d>

00000000000344f1 <instr.bb_3f36>:
   344f1:	48 8d 6b 60          	lea    0x60(%rbx),%rbp
   344f5:	41 ba 03 00 00 00    	mov    $0x3,%r10d
   344fb:	be 02 00 00 00       	mov    $0x2,%esi
   34500:	4c 8d 9b e0 00 00 00 	lea    0xe0(%rbx),%r11
   34507:	48 63 d6             	movslq %esi,%rdx
   3450a:	b8 01 00 00 00       	mov    $0x1,%eax
   3450f:	48 c1 e2 03          	shl    $0x3,%rdx
   34513:	48 8d 7c 15 00       	lea    0x0(%rbp,%rdx,1),%rdi
   34518:	4c 01 da             	add    %r11,%rdx
   3451b:	4c 8b 0a             	mov    (%rdx),%r9
   3451e:	4c 8b 07             	mov    (%rdi),%r8
   34521:	90                   	nop
   34522:	90                   	nop
   34523:	90                   	nop
   34524:	90                   	nop
   34525:	90                   	nop
   34526:	90                   	nop
   34527:	90                   	nop
   34528:	90                   	nop
   34529:	90                   	nop
   3452a:	90                   	nop
   3452b:	90                   	nop
   3452c:	90                   	nop
   3452d:	90                   	nop
   3452e:	90                   	nop
   3452f:	90                   	nop
   34530:	48 8b 8c c3 e0 00 00 	mov    0xe0(%rbx,%rax,8),%rcx
   34537:	00 
   34538:	4c 31 c9             	xor    %r9,%rcx
   3453b:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
   3453f:	48 8b 4c c3 60       	mov    0x60(%rbx,%rax,8),%rcx
   34544:	4c 31 c1             	xor    %r8,%rcx
   34547:	48 89 0c c7          	mov    %rcx,(%rdi,%rax,8)
   3454b:	48 83 c0 01          	add    $0x1,%rax
   3454f:	39 c6                	cmp    %eax,%esi
   34551:	0f 8f d9 ff ff ff    	jg     34530 <instr.bb_3f36+0x3f>
   34557:	e9 37 fa fc ff       	jmpq   3f93 <mbedtls_gcm_setkey+0x1f3>
   3455c:	90                   	nop
   3455d:	90                   	nop
   3455e:	90                   	nop
   3455f:	90                   	nop

0000000000034560 <mbedtls_gcm_starts.instr.bb_3fb0>:
   34560:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   34564:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   3456b:	00 c0 
   3456d:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   34574:	00 c0 
   34576:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   3457d:	00 c0 
   3457f:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   34586:	00 c0 
   34588:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
   3458d:	f3 0f 1e fa          	endbr64 
   34591:	41 57                	push   %r15
   34593:	41 56                	push   %r14
   34595:	41 55                	push   %r13
   34597:	41 54                	push   %r12
   34599:	55                   	push   %rbp
   3459a:	53                   	push   %rbx
   3459b:	48 83 ec 38          	sub    $0x38,%rsp
   3459f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   345a6:	00 00 
   345a8:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   345ad:	31 c0                	xor    %eax,%eax
   345af:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   345b6:	00 00 
   345b8:	48 85 c9             	test   %rcx,%rcx
   345bb:	0f 84 99 fb fc ff    	je     415a <mbedtls_gcm_starts+0x1aa>

00000000000345c1 <instr.bb_3fe4>:
   345c1:	48 89 c8             	mov    %rcx,%rax
   345c4:	48 89 cb             	mov    %rcx,%rbx
   345c7:	48 c1 e8 3d          	shr    $0x3d,%rax
   345cb:	0f 85 89 fb fc ff    	jne    415a <mbedtls_gcm_starts+0x1aa>

00000000000345d1 <instr.bb_3ff4>:
   345d1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   345d5:	c4 61 f9 7e f5       	vmovq  %xmm14,%rbp
   345da:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   345df:	89 af a0 11 00 c0    	mov    %ebp,-0x3fffee60(%rdi)
   345e5:	31 f5                	xor    %esi,%ebp
   345e7:	89 af a0 01 00 00    	mov    %ebp,0x1a0(%rdi)
   345ed:	48 89 fd             	mov    %rdi,%rbp
   345f0:	49 89 d6             	mov    %rdx,%r14
   345f3:	4c 8d bf 80 01 00 00 	lea    0x180(%rdi),%r15
   345fa:	c4 c2 79 59 ce       	vpbroadcastq %xmm14,%xmm1
   345ff:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34604:	c5 fa 7f 8f 80 11 00 	vmovdqu %xmm1,-0x3fffee80(%rdi)
   3460b:	c0 
   3460c:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   34610:	c5 fa 7f 8f 80 01 00 	vmovdqu %xmm1,0x180(%rdi)
   34617:	00 
   34618:	c4 61 f9 7e f2       	vmovq  %xmm14,%rdx
   3461d:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34622:	48 89 97 60 11 00 c0 	mov    %rdx,-0x3fffeea0(%rdi)
   34629:	48 89 97 60 01 00 00 	mov    %rdx,0x160(%rdi)
   34630:	c4 61 f9 7e f2       	vmovq  %xmm14,%rdx
   34635:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3463a:	48 89 97 68 11 00 c0 	mov    %rdx,-0x3fffee98(%rdi)
   34641:	48 89 97 68 01 00 00 	mov    %rdx,0x168(%rdi)
   34648:	c4 c2 79 59 ce       	vpbroadcastq %xmm14,%xmm1
   3464d:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34652:	c5 fa 7f 8f 90 11 00 	vmovdqu %xmm1,-0x3fffee70(%rdi)
   34659:	c0 
   3465a:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   3465e:	c5 fa 7f 8f 90 01 00 	vmovdqu %xmm1,0x190(%rdi)
   34665:	00 
   34666:	48 83 f9 0c          	cmp    $0xc,%rcx
   3466a:	0f 84 d0 fa fc ff    	je     4140 <mbedtls_gcm_starts+0x190>

0000000000034670 <instr.bb_4039>:
   34670:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
   34677:	00 
   34678:	41 bd 10 00 00 00    	mov    $0x10,%r13d
   3467e:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   34685:	00 00 
   34687:	48 0f c8             	bswap  %rax
   3468a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3468f:	90                   	nop
   34690:	48 83 fb 10          	cmp    $0x10,%rbx
   34694:	4d 89 ec             	mov    %r13,%r12
   34697:	4c 0f 46 e3          	cmovbe %rbx,%r12
   3469b:	48 83 fb 03          	cmp    $0x3,%rbx
   3469f:	0f 86 8b fa fc ff    	jbe    4130 <mbedtls_gcm_starts+0x180>

00000000000346a5 <instr.bb_4075>:
   346a5:	ba 04 00 00 00       	mov    $0x4,%edx
   346aa:	90                   	nop
   346ab:	90                   	nop
   346ac:	90                   	nop
   346ad:	90                   	nop
   346ae:	90                   	nop
   346af:	90                   	nop

00000000000346b0 <instr.bb_4080>:
   346b0:	41 8b 84 16 fc 0f 00 	mov    -0x3ffff004(%r14,%rdx,1),%eax
   346b7:	c0 
   346b8:	41 33 44 16 fc       	xor    -0x4(%r14,%rdx,1),%eax
   346bd:	8b bc 15 7c 01 00 00 	mov    0x17c(%rbp,%rdx,1),%edi
   346c4:	8b 8c 15 7c 11 00 c0 	mov    -0x3fffee84(%rbp,%rdx,1),%ecx
   346cb:	31 cf                	xor    %ecx,%edi
   346cd:	31 c7                	xor    %eax,%edi
   346cf:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   346d4:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   346d9:	89 8c 15 7c 11 00 c0 	mov    %ecx,-0x3fffee84(%rbp,%rdx,1)
   346e0:	31 cf                	xor    %ecx,%edi
   346e2:	89 bc 15 7c 01 00 00 	mov    %edi,0x17c(%rbp,%rdx,1)
   346e9:	48 89 d0             	mov    %rdx,%rax
   346ec:	48 8d 52 04          	lea    0x4(%rdx),%rdx
   346f0:	49 39 d4             	cmp    %rdx,%r12
   346f3:	0f 83 b7 ff ff ff    	jae    346b0 <instr.bb_4080>

00000000000346f9 <instr.bb_4098>:
   346f9:	49 39 c4             	cmp    %rax,%r12
   346fc:	0f 86 19 00 00 00    	jbe    3471b <instr.bb_40b2>

0000000000034702 <instr.bb_409d>:
   34702:	41 0f b6 14 06       	movzbl (%r14,%rax,1),%edx
   34707:	30 94 05 80 01 00 00 	xor    %dl,0x180(%rbp,%rax,1)
   3470e:	48 83 c0 01          	add    $0x1,%rax
   34712:	49 39 c4             	cmp    %rax,%r12
   34715:	0f 87 e7 ff ff ff    	ja     34702 <instr.bb_409d>

000000000003471b <instr.bb_40b2>:
   3471b:	4c 89 fa             	mov    %r15,%rdx
   3471e:	4c 89 fe             	mov    %r15,%rsi
   34721:	48 89 ef             	mov    %rbp,%rdi
   34724:	4d 01 e6             	add    %r12,%r14
   34727:	e8 74 f7 ff ff       	callq  33ea0 <gcm_mult.instr.bb_39b0>

000000000003472c <instr.bb_40c3>:
   3472c:	4c 29 e3             	sub    %r12,%rbx
   3472f:	0f 85 5b ff ff ff    	jne    34690 <instr.bb_4039+0x20>

0000000000034735 <instr.bb_40c8>:
   34735:	31 c0                	xor    %eax,%eax
   34737:	e9 08 00 00 00       	jmpq   34744 <instr.bb_40d4>
   3473c:	90                   	nop
   3473d:	90                   	nop
   3473e:	90                   	nop
   3473f:	90                   	nop

0000000000034740 <instr.bb_40d0>:
   34740:	8b 44 1c 10          	mov    0x10(%rsp,%rbx,1),%eax

0000000000034744 <instr.bb_40d4>:
   34744:	8b 94 1d 80 01 00 00 	mov    0x180(%rbp,%rbx,1),%edx
   3474b:	8b 8c 1d 80 11 00 c0 	mov    -0x3fffee80(%rbp,%rbx,1),%ecx
   34752:	31 ca                	xor    %ecx,%edx
   34754:	31 c2                	xor    %eax,%edx
   34756:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   3475b:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34760:	89 8c 1d 80 11 00 c0 	mov    %ecx,-0x3fffee80(%rbp,%rbx,1)
   34767:	31 ca                	xor    %ecx,%edx
   34769:	89 94 1d 80 01 00 00 	mov    %edx,0x180(%rbp,%rbx,1)
   34770:	48 83 c3 04          	add    $0x4,%rbx
   34774:	48 83 fb 10          	cmp    $0x10,%rbx
   34778:	0f 85 c2 ff ff ff    	jne    34740 <instr.bb_40d0>

000000000003477e <instr.bb_40e5>:
   3477e:	4c 89 fa             	mov    %r15,%rdx
   34781:	4c 89 fe             	mov    %r15,%rsi
   34784:	48 89 ef             	mov    %rbp,%rdi
   34787:	e8 14 f7 ff ff       	callq  33ea0 <gcm_mult.instr.bb_39b0>

000000000003478c <instr.bb_40f3>:
   3478c:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   34791:	ba 10 00 00 00       	mov    $0x10,%edx
   34796:	4c 89 fe             	mov    %r15,%rsi
   34799:	48 89 ef             	mov    %rbp,%rdi
   3479c:	48 8d 8d 70 01 00 00 	lea    0x170(%rbp),%rcx
   347a3:	e8 a8 0d 00 00       	callq  35550 <mbedtls_cipher_update.instr.bb_6050>

00000000000347a8 <instr.bb_410f>:
   347a8:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   347ad:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   347b4:	00 00 
   347b6:	0f 85 a5 f9 fc ff    	jne    4161 <mbedtls_gcm_starts+0x1b1>

00000000000347bc <instr.bb_411f>:
   347bc:	48 83 c4 38          	add    $0x38,%rsp
   347c0:	5b                   	pop    %rbx
   347c1:	5d                   	pop    %rbp
   347c2:	41 5c                	pop    %r12
   347c4:	41 5d                	pop    %r13
   347c6:	41 5e                	pop    %r14
   347c8:	41 5f                	pop    %r15
   347ca:	c3                   	retq   
   347cb:	90                   	nop
   347cc:	90                   	nop
   347cd:	90                   	nop
   347ce:	90                   	nop
   347cf:	90                   	nop

00000000000347d0 <mbedtls_gcm_update_ad.instr.bb_4170>:
   347d0:	31 c9                	xor    %ecx,%ecx
   347d2:	48 89 8c 24 c8 0f 00 	mov    %rcx,-0x3ffff038(%rsp)
   347d9:	c0 
   347da:	48 89 8c 24 d0 0f 00 	mov    %rcx,-0x3ffff030(%rsp)
   347e1:	c0 
   347e2:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   347e9:	c0 
   347ea:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   347f1:	c0 
   347f2:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   347f9:	c0 
   347fa:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   34801:	c0 
   34802:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   34809:	c0 
   3480a:	f3 0f 1e fa          	endbr64 
   3480e:	41 57                	push   %r15
   34810:	41 56                	push   %r14
   34812:	41 55                	push   %r13
   34814:	49 89 d5             	mov    %rdx,%r13
   34817:	41 54                	push   %r12
   34819:	55                   	push   %rbp
   3481a:	53                   	push   %rbx
   3481b:	48 83 ec 08          	sub    $0x8,%rsp
   3481f:	49 c1 ed 3d          	shr    $0x3d,%r13
   34823:	0f 85 e9 fa fc ff    	jne    4312 <mbedtls_gcm_update_ad+0x1a2>

0000000000034829 <instr.bb_418f>:
   34829:	48 8b 87 68 11 00 c0 	mov    -0x3fffee98(%rdi),%rax
   34830:	48 33 87 68 01 00 00 	xor    0x168(%rdi),%rax
   34837:	48 89 f3             	mov    %rsi,%rbx
   3483a:	48 89 fd             	mov    %rdi,%rbp
   3483d:	49 89 d4             	mov    %rdx,%r12
   34840:	48 89 c6             	mov    %rax,%rsi
   34843:	83 e6 0f             	and    $0xf,%esi
   34846:	0f 85 24 fa fc ff    	jne    4270 <mbedtls_gcm_update_ad+0x100>

000000000003484c <instr.bb_41ab>:
   3484c:	4c 01 e0             	add    %r12,%rax
   3484f:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   34854:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34859:	48 89 8d 68 11 00 c0 	mov    %rcx,-0x3fffee98(%rbp)
   34860:	48 31 c1             	xor    %rax,%rcx
   34863:	48 89 8d 68 01 00 00 	mov    %rcx,0x168(%rbp)
   3486a:	49 83 fc 0f          	cmp    $0xf,%r12
   3486e:	0f 86 82 fa fc ff    	jbe    42f6 <mbedtls_gcm_update_ad+0x186>
   34874:	e9 46 f9 fc ff       	jmpq   41bf <mbedtls_gcm_update_ad+0x4f>
   34879:	90                   	nop
   3487a:	90                   	nop
   3487b:	90                   	nop
   3487c:	90                   	nop
   3487d:	90                   	nop
   3487e:	90                   	nop
   3487f:	90                   	nop

0000000000034880 <mbedtls_gcm_update.instr.bb_4320>:
   34880:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   34884:	c4 c2 7d 59 c6       	vpbroadcastq %xmm14,%ymm0
   34889:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3488e:	c5 fe 7f 8c 24 98 0f 	vmovdqu %ymm1,-0x3ffff068(%rsp)
   34895:	00 c0 
   34897:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   3489e:	00 c0 
   348a0:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   348a7:	00 c0 
   348a9:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   348b0:	00 c0 
   348b2:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
   348b7:	c5 fa 7f 84 24 a8 0f 	vmovdqu %xmm0,-0x3ffff058(%rsp)
   348be:	00 c0 
   348c0:	f3 0f 1e fa          	endbr64 
   348c4:	41 57                	push   %r15
   348c6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   348ca:	41 56                	push   %r14
   348cc:	41 55                	push   %r13
   348ce:	41 54                	push   %r12
   348d0:	55                   	push   %rbp
   348d1:	53                   	push   %rbx
   348d2:	48 83 ec 38          	sub    $0x38,%rsp
   348d6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   348dd:	00 00 
   348df:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   348e4:	31 c0                	xor    %eax,%eax
   348e6:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
   348ea:	48 8b 9c 24 10 10 00 	mov    -0x3fffeff0(%rsp),%rbx
   348f1:	c0 
   348f2:	48 85 db             	test   %rbx,%rbx
   348f5:	0f 84 0a 00 00 00    	je     34905 <mbedtls_gcm_update.instr.bb_4320+0x85>
   348fb:	c4 c2 79 59 ce       	vpbroadcastq %xmm14,%xmm1
   34900:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34905:	c5 fa 7f 8c 24 10 10 	vmovdqu %xmm1,-0x3fffeff0(%rsp)
   3490c:	00 c0 
   3490e:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   34912:	c5 fa 7f 4c 24 10    	vmovdqu %xmm1,0x10(%rsp)
   34918:	49 39 d0             	cmp    %rdx,%r8
   3491b:	0f 82 67 fc fc ff    	jb     4588 <mbedtls_gcm_update+0x268>

0000000000034921 <instr.bb_4354>:
   34921:	49 89 11             	mov    %rdx,(%r9)
   34924:	49 89 d4             	mov    %rdx,%r12
   34927:	48 85 d2             	test   %rdx,%rdx
   3492a:	0f 84 53 fb fc ff    	je     4483 <mbedtls_gcm_update+0x163>

0000000000034930 <instr.bb_4363>:
   34930:	49 89 ff             	mov    %rdi,%r15
   34933:	48 89 f3             	mov    %rsi,%rbx
   34936:	48 89 cd             	mov    %rcx,%rbp
   34939:	48 39 ce             	cmp    %rcx,%rsi
   3493c:	0f 82 6e fb fc ff    	jb     44b0 <mbedtls_gcm_update+0x190>

0000000000034942 <instr.bb_4375>:
   34942:	49 8b 87 60 11 00 c0 	mov    -0x3fffeea0(%r15),%rax
   34949:	49 33 87 60 01 00 00 	xor    0x160(%r15),%rax
   34950:	31 d2                	xor    %edx,%edx
   34952:	48 b9 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rcx
   34959:	00 00 00 
   3495c:	48 89 c6             	mov    %rax,%rsi
   3495f:	4c 01 e6             	add    %r12,%rsi
   34962:	0f 92 c2             	setb   %dl
   34965:	48 39 ce             	cmp    %rcx,%rsi
   34968:	0f 87 51 fb fc ff    	ja     44bf <mbedtls_gcm_update+0x19f>

000000000003496e <instr.bb_439a>:
   3496e:	48 85 d2             	test   %rdx,%rdx
   34971:	0f 85 48 fb fc ff    	jne    44bf <mbedtls_gcm_update+0x19f>

0000000000034977 <instr.bb_43a3>:
   34977:	48 85 c0             	test   %rax,%rax
   3497a:	0f 84 20 01 00 00    	je     34aa0 <instr.bb_44d0>
   34980:	e9 27 fa fc ff       	jmpq   43ac <mbedtls_gcm_update+0x8c>
   34985:	90                   	nop
   34986:	90                   	nop
   34987:	90                   	nop
   34988:	90                   	nop
   34989:	90                   	nop
   3498a:	90                   	nop
   3498b:	90                   	nop
   3498c:	90                   	nop
   3498d:	90                   	nop
   3498e:	90                   	nop
   3498f:	90                   	nop

0000000000034990 <instr.bb_43bc>:
   34990:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   34995:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3499a:	49 89 8f 60 11 00 c0 	mov    %rcx,-0x3fffeea0(%r15)
   349a1:	48 31 c1             	xor    %rax,%rcx
   349a4:	49 89 8f 60 01 00 00 	mov    %rcx,0x160(%r15)
   349ab:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   349b0:	49 83 fc 0f          	cmp    $0xf,%r12
   349b4:	0f 86 ad 00 00 00    	jbe    34a67 <instr.bb_4433>

00000000000349ba <instr.bb_43ce>:
   349ba:	4d 8d af 90 01 00 00 	lea    0x190(%r15),%r13
   349c1:	90                   	nop
   349c2:	90                   	nop
   349c3:	90                   	nop
   349c4:	90                   	nop
   349c5:	90                   	nop
   349c6:	90                   	nop
   349c7:	90                   	nop
   349c8:	b8 10 00 00 00       	mov    $0x10,%eax
   349cd:	48 83 e8 01          	sub    $0x1,%rax
   349d1:	41 8a 94 07 80 01 00 	mov    0x180(%r15,%rax,1),%dl
   349d8:	00 
   349d9:	41 8a 8c 07 80 11 00 	mov    -0x3fffee80(%r15,%rax,1),%cl
   349e0:	c0 
   349e1:	30 ca                	xor    %cl,%dl
   349e3:	80 c2 01             	add    $0x1,%dl
   349e6:	40 0f 94 c7          	sete   %dil
   349ea:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   349ef:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   349f4:	41 88 8c 07 80 11 00 	mov    %cl,-0x3fffee80(%r15,%rax,1)
   349fb:	c0 
   349fc:	30 ca                	xor    %cl,%dl
   349fe:	41 88 94 07 80 01 00 	mov    %dl,0x180(%r15,%rax,1)
   34a05:	00 
   34a06:	40 80 ef 01          	sub    $0x1,%dil
   34a0a:	0f 85 0a 00 00 00    	jne    34a1a <instr.bb_43f2>

0000000000034a10 <instr.bb_43ec>:
   34a10:	48 83 f8 0c          	cmp    $0xc,%rax
   34a14:	0f 87 b3 ff ff ff    	ja     349cd <instr.bb_43ce+0x13>

0000000000034a1a <instr.bb_43f2>:
   34a1a:	31 d2                	xor    %edx,%edx
   34a1c:	49 89 e9             	mov    %rbp,%r9
   34a1f:	49 89 d8             	mov    %rbx,%r8
   34a22:	b9 10 00 00 00       	mov    $0x10,%ecx
   34a27:	4c 89 f6             	mov    %r14,%rsi
   34a2a:	4c 89 ff             	mov    %r15,%rdi
   34a2d:	e8 be f5 ff ff       	callq  33ff0 <gcm_mask.instr.bb_3b70>

0000000000034a32 <instr.bb_440a>:
   34a32:	85 c0                	test   %eax,%eax
   34a34:	0f 85 49 fa fc ff    	jne    4483 <mbedtls_gcm_update+0x163>

0000000000034a3a <instr.bb_440e>:
   34a3a:	4c 89 ea             	mov    %r13,%rdx
   34a3d:	4c 89 ee             	mov    %r13,%rsi
   34a40:	4c 89 ff             	mov    %r15,%rdi
   34a43:	49 83 ec 10          	sub    $0x10,%r12
   34a47:	e8 54 f4 ff ff       	callq  33ea0 <gcm_mult.instr.bb_39b0>

0000000000034a4c <instr.bb_4420>:
   34a4c:	48 83 c3 10          	add    $0x10,%rbx
   34a50:	48 83 c5 10          	add    $0x10,%rbp
   34a54:	49 83 fc 0f          	cmp    $0xf,%r12
   34a58:	0f 87 6a ff ff ff    	ja     349c8 <instr.bb_43ce+0xe>

0000000000034a5e <instr.bb_442e>:
   34a5e:	4d 85 e4             	test   %r12,%r12
   34a61:	0f 84 0d fa fc ff    	je     4474 <mbedtls_gcm_update+0x154>

0000000000034a67 <instr.bb_4433>:
   34a67:	b8 10 00 00 00       	mov    $0x10,%eax
   34a6c:	48 83 e8 01          	sub    $0x1,%rax
   34a70:	41 0f b6 bc 07 80 01 	movzbl 0x180(%r15,%rax,1),%edi
   34a77:	00 00 
   34a79:	8d 57 01             	lea    0x1(%rdi),%edx
   34a7c:	41 88 94 07 80 01 00 	mov    %dl,0x180(%r15,%rax,1)
   34a83:	00 
   34a84:	48 83 f8 0c          	cmp    $0xc,%rax
   34a88:	0f 86 cc f9 fc ff    	jbe    445a <mbedtls_gcm_update+0x13a>
   34a8e:	e9 c3 f9 fc ff       	jmpq   4456 <mbedtls_gcm_update+0x136>
   34a93:	90                   	nop
   34a94:	90                   	nop
   34a95:	90                   	nop
   34a96:	90                   	nop
   34a97:	90                   	nop
   34a98:	90                   	nop
   34a99:	90                   	nop
   34a9a:	90                   	nop
   34a9b:	90                   	nop
   34a9c:	90                   	nop
   34a9d:	90                   	nop
   34a9e:	90                   	nop
   34a9f:	90                   	nop

0000000000034aa0 <instr.bb_44d0>:
   34aa0:	4c 89 e0             	mov    %r12,%rax
   34aa3:	41 8a 8f 68 11 00 c0 	mov    -0x3fffee98(%r15),%cl
   34aaa:	41 32 8f 68 01 00 00 	xor    0x168(%r15),%cl
   34ab1:	f6 c1 0f             	test   $0xf,%cl
   34ab4:	0f 84 d6 fe ff ff    	je     34990 <instr.bb_43bc>

0000000000034aba <instr.bb_44e1>:
   34aba:	49 8d b7 90 01 00 00 	lea    0x190(%r15),%rsi
   34ac1:	4c 89 ff             	mov    %r15,%rdi
   34ac4:	48 89 f2             	mov    %rsi,%rdx
   34ac7:	e8 d4 f3 ff ff       	callq  33ea0 <gcm_mult.instr.bb_39b0>
   34acc:	e9 22 fa fc ff       	jmpq   44f3 <mbedtls_gcm_update+0x1d3>
   34ad1:	90                   	nop
   34ad2:	90                   	nop
   34ad3:	90                   	nop
   34ad4:	90                   	nop
   34ad5:	90                   	nop
   34ad6:	90                   	nop
   34ad7:	90                   	nop
   34ad8:	90                   	nop
   34ad9:	90                   	nop
   34ada:	90                   	nop
   34adb:	90                   	nop
   34adc:	90                   	nop
   34add:	90                   	nop
   34ade:	90                   	nop
   34adf:	90                   	nop

0000000000034ae0 <mbedtls_gcm_finish.instr.bb_45a0>:
   34ae0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   34ae4:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   34aeb:	00 c0 
   34aed:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   34af4:	00 c0 
   34af6:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   34afd:	00 c0 
   34aff:	c4 e1 f9 7e c6       	vmovq  %xmm0,%rsi
   34b04:	f3 0f 1e fa          	endbr64 
   34b08:	41 57                	push   %r15
   34b0a:	41 56                	push   %r14
   34b0c:	41 55                	push   %r13
   34b0e:	4d 89 cd             	mov    %r9,%r13
   34b11:	41 54                	push   %r12
   34b13:	4d 8d 61 fc          	lea    -0x4(%r9),%r12
   34b17:	55                   	push   %rbp
   34b18:	4c 89 c5             	mov    %r8,%rbp
   34b1b:	53                   	push   %rbx
   34b1c:	48 89 fb             	mov    %rdi,%rbx
   34b1f:	48 83 ec 28          	sub    $0x28,%rsp
   34b23:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   34b2a:	00 00 
   34b2c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   34b31:	31 c0                	xor    %eax,%eax
   34b33:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
   34b3a:	48 8b 87 60 11 00 c0 	mov    -0x3fffeea0(%rdi),%rax
   34b41:	48 33 87 60 01 00 00 	xor    0x160(%rdi),%rax
   34b48:	48 8b 97 68 11 00 c0 	mov    -0x3fffee98(%rdi),%rdx
   34b4f:	48 33 97 68 01 00 00 	xor    0x168(%rdi),%rdx
   34b56:	4c 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%r14
   34b5d:	00 
   34b5e:	4c 8d 3c d5 00 00 00 	lea    0x0(,%rdx,8),%r15
   34b65:	00 
   34b66:	48 85 c0             	test   %rax,%rax
   34b69:	0f 85 61 00 00 00    	jne    34bd0 <instr.bb_465f>

0000000000034b6f <instr.bb_45f9>:
   34b6f:	83 e2 0f             	and    $0xf,%edx
   34b72:	0f 85 d8 fa fc ff    	jne    4650 <mbedtls_gcm_finish+0xb0>

0000000000034b78 <instr.bb_45fe>:
   34b78:	49 83 fc 0c          	cmp    $0xc,%r12
   34b7c:	0f 87 ce fb fc ff    	ja     4750 <mbedtls_gcm_finish+0x1b0>

0000000000034b82 <instr.bb_4608>:
   34b82:	48 8d b3 70 01 00 00 	lea    0x170(%rbx),%rsi
   34b89:	4c 89 ea             	mov    %r13,%rdx
   34b8c:	48 89 ef             	mov    %rbp,%rdi
   34b8f:	e8 7c e7 fc ff       	callq  3310 <memcpy@plt>

0000000000034b94 <instr.bb_461a>:
   34b94:	4c 89 f0             	mov    %r14,%rax
   34b97:	4c 09 f8             	or     %r15,%rax
   34b9a:	0f 85 f0 fa fc ff    	jne    4690 <mbedtls_gcm_finish+0xf0>

0000000000034ba0 <instr.bb_4622>:
   34ba0:	31 c0                	xor    %eax,%eax
   34ba2:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   34ba7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   34bae:	00 00 
   34bb0:	0f 85 a4 fb fc ff    	jne    475a <mbedtls_gcm_finish+0x1ba>

0000000000034bb6 <instr.bb_4638>:
   34bb6:	48 83 c4 28          	add    $0x28,%rsp
   34bba:	5b                   	pop    %rbx
   34bbb:	5d                   	pop    %rbp
   34bbc:	41 5c                	pop    %r12
   34bbe:	41 5d                	pop    %r13
   34bc0:	41 5e                	pop    %r14
   34bc2:	41 5f                	pop    %r15
   34bc4:	c3                   	retq   
   34bc5:	90                   	nop
   34bc6:	90                   	nop
   34bc7:	90                   	nop
   34bc8:	90                   	nop
   34bc9:	90                   	nop
   34bca:	90                   	nop
   34bcb:	90                   	nop
   34bcc:	90                   	nop
   34bcd:	90                   	nop
   34bce:	90                   	nop
   34bcf:	90                   	nop

0000000000034bd0 <instr.bb_465f>:
   34bd0:	49 83 fc 0c          	cmp    $0xc,%r12
   34bd4:	0f 87 76 fb fc ff    	ja     4750 <mbedtls_gcm_finish+0x1b0>

0000000000034bda <instr.bb_4669>:
   34bda:	8a 8b 60 11 00 c0    	mov    -0x3fffeea0(%rbx),%cl
   34be0:	32 8b 60 01 00 00    	xor    0x160(%rbx),%cl
   34be6:	f6 c1 0f             	test   $0xf,%cl
   34be9:	0f 84 93 ff ff ff    	je     34b82 <instr.bb_4608>

0000000000034bef <instr.bb_4672>:
   34bef:	48 8d b3 90 01 00 00 	lea    0x190(%rbx),%rsi
   34bf6:	48 89 df             	mov    %rbx,%rdi
   34bf9:	48 89 f2             	mov    %rsi,%rdx
   34bfc:	e8 9f f2 ff ff       	callq  33ea0 <gcm_mult.instr.bb_39b0>
   34c01:	e9 7e fa fc ff       	jmpq   4684 <mbedtls_gcm_finish+0xe4>
   34c06:	90                   	nop
   34c07:	90                   	nop
   34c08:	90                   	nop
   34c09:	90                   	nop
   34c0a:	90                   	nop
   34c0b:	90                   	nop
   34c0c:	90                   	nop
   34c0d:	90                   	nop
   34c0e:	90                   	nop
   34c0f:	90                   	nop

0000000000034c10 <instr.bb_46d0>:
   34c10:	8b 14 04             	mov    (%rsp,%rax,1),%edx
   34c13:	48 83 c0 04          	add    $0x4,%rax

0000000000034c17 <instr.bb_46d7>:
   34c17:	8b bc 03 8c 01 00 00 	mov    0x18c(%rbx,%rax,1),%edi
   34c1e:	8b 8c 03 8c 11 00 c0 	mov    -0x3fffee74(%rbx,%rax,1),%ecx
   34c25:	31 cf                	xor    %ecx,%edi
   34c27:	31 d7                	xor    %edx,%edi
   34c29:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   34c2e:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34c33:	89 8c 03 8c 11 00 c0 	mov    %ecx,-0x3fffee74(%rbx,%rax,1)
   34c3a:	31 cf                	xor    %ecx,%edi
   34c3c:	89 bc 03 8c 01 00 00 	mov    %edi,0x18c(%rbx,%rax,1)
   34c43:	48 83 f8 10          	cmp    $0x10,%rax
   34c47:	0f 85 c3 ff ff ff    	jne    34c10 <instr.bb_46d0>

0000000000034c4d <instr.bb_46e4>:
   34c4d:	48 89 f2             	mov    %rsi,%rdx
   34c50:	48 89 df             	mov    %rbx,%rdi
   34c53:	e8 48 f2 ff ff       	callq  33ea0 <gcm_mult.instr.bb_39b0>

0000000000034c58 <instr.bb_46ef>:
   34c58:	b8 04 00 00 00       	mov    $0x4,%eax
   34c5d:	90                   	nop
   34c5e:	90                   	nop
   34c5f:	90                   	nop

0000000000034c60 <instr.bb_46f8>:
   34c60:	8b 94 03 8c 11 00 c0 	mov    -0x3fffee74(%rbx,%rax,1),%edx
   34c67:	33 94 03 8c 01 00 00 	xor    0x18c(%rbx,%rax,1),%edx
   34c6e:	8b 7c 05 fc          	mov    -0x4(%rbp,%rax,1),%edi
   34c72:	8b 8c 05 fc 0f 00 c0 	mov    -0x3ffff004(%rbp,%rax,1),%ecx
   34c79:	31 cf                	xor    %ecx,%edi
   34c7b:	31 d7                	xor    %edx,%edi
   34c7d:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   34c82:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34c87:	89 8c 05 fc 0f 00 c0 	mov    %ecx,-0x3ffff004(%rbp,%rax,1)
   34c8e:	31 cf                	xor    %ecx,%edi
   34c90:	89 7c 05 fc          	mov    %edi,-0x4(%rbp,%rax,1)
   34c94:	48 83 c0 04          	add    $0x4,%rax
   34c98:	49 39 c5             	cmp    %rax,%r13
   34c9b:	0f 83 bf ff ff ff    	jae    34c60 <instr.bb_46f8>

0000000000034ca1 <instr.bb_470c>:
   34ca1:	49 83 e4 fc          	and    $0xfffffffffffffffc,%r12
   34ca5:	49 8d 55 01          	lea    0x1(%r13),%rdx
   34ca9:	48 83 fa 04          	cmp    $0x4,%rdx
   34cad:	49 8d 44 24 04       	lea    0x4(%r12),%rax
   34cb2:	ba 04 00 00 00       	mov    $0x4,%edx
   34cb7:	48 0f 46 c2          	cmovbe %rdx,%rax
   34cbb:	49 39 c5             	cmp    %rax,%r13
   34cbe:	0f 86 dc fe ff ff    	jbe    34ba0 <instr.bb_4622>

0000000000034cc4 <instr.bb_472f>:
   34cc4:	0f b6 94 03 90 01 00 	movzbl 0x190(%rbx,%rax,1),%edx
   34ccb:	00 
   34ccc:	30 54 05 00          	xor    %dl,0x0(%rbp,%rax,1)
   34cd0:	48 83 c0 01          	add    $0x1,%rax
   34cd4:	49 39 c5             	cmp    %rax,%r13
   34cd7:	0f 85 e7 ff ff ff    	jne    34cc4 <instr.bb_472f>
   34cdd:	e9 62 fa fc ff       	jmpq   4744 <mbedtls_gcm_finish+0x1a4>
   34ce2:	90                   	nop
   34ce3:	90                   	nop
   34ce4:	90                   	nop
   34ce5:	90                   	nop
   34ce6:	90                   	nop
   34ce7:	90                   	nop
   34ce8:	90                   	nop
   34ce9:	90                   	nop
   34cea:	90                   	nop
   34ceb:	90                   	nop
   34cec:	90                   	nop
   34ced:	90                   	nop
   34cee:	90                   	nop
   34cef:	90                   	nop

0000000000034cf0 <mbedtls_gcm_crypt_and_tag.instr.bb_4760>:
   34cf0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   34cf4:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   34cfb:	00 c0 
   34cfd:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   34d04:	00 c0 
   34d06:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   34d0d:	00 c0 
   34d0f:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
   34d14:	f3 0f 1e fa          	endbr64 
   34d18:	41 57                	push   %r15
   34d1a:	49 89 ff             	mov    %rdi,%r15
   34d1d:	41 56                	push   %r14
   34d1f:	41 55                	push   %r13
   34d21:	41 54                	push   %r12
   34d23:	49 89 d4             	mov    %rdx,%r12
   34d26:	48 89 ca             	mov    %rcx,%rdx
   34d29:	4c 89 c1             	mov    %r8,%rcx
   34d2c:	55                   	push   %rbp
   34d2d:	4c 89 cd             	mov    %r9,%rbp
   34d30:	53                   	push   %rbx
   34d31:	48 83 ec 18          	sub    $0x18,%rsp
   34d35:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   34d3c:	00 00 
   34d3e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   34d43:	31 c0                	xor    %eax,%eax
   34d45:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
   34d4a:	4c 8b 74 24 60       	mov    0x60(%rsp),%r14
   34d4f:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   34d54:	e8 07 f8 ff ff       	callq  34560 <mbedtls_gcm_starts.instr.bb_3fb0>

0000000000034d59 <instr.bb_47a5>:
   34d59:	85 c0                	test   %eax,%eax
   34d5b:	0f 84 6f fa fc ff    	je     47d0 <mbedtls_gcm_crypt_and_tag+0x70>

0000000000034d61 <instr.bb_47a9>:
   34d61:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   34d66:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   34d6d:	00 00 
   34d6f:	0f 85 a6 fa fc ff    	jne    481b <mbedtls_gcm_crypt_and_tag+0xbb>

0000000000034d75 <instr.bb_47b9>:
   34d75:	48 83 c4 18          	add    $0x18,%rsp
   34d79:	5b                   	pop    %rbx
   34d7a:	5d                   	pop    %rbp
   34d7b:	41 5c                	pop    %r12
   34d7d:	41 5d                	pop    %r13
   34d7f:	41 5e                	pop    %r14
   34d81:	41 5f                	pop    %r15
   34d83:	c3                   	retq   
   34d84:	90                   	nop
   34d85:	90                   	nop
   34d86:	90                   	nop
   34d87:	90                   	nop
   34d88:	90                   	nop
   34d89:	90                   	nop
   34d8a:	90                   	nop
   34d8b:	90                   	nop
   34d8c:	90                   	nop
   34d8d:	90                   	nop
   34d8e:	90                   	nop
   34d8f:	90                   	nop

0000000000034d90 <mbedtls_platform_zeroize.instr.bb_5220>:
   34d90:	31 c9                	xor    %ecx,%ecx
   34d92:	f3 0f 1e fa          	endbr64 
   34d96:	48 85 f6             	test   %rsi,%rsi
   34d99:	0f 85 91 04 fd ff    	jne    5230 <mbedtls_platform_zeroize+0x10>

0000000000034d9f <instr.bb_5229>:
   34d9f:	c3                   	retq   

0000000000034da0 <mbedtls_aesni_has_support.instr.bb_52e0>:
   34da0:	31 f6                	xor    %esi,%esi
   34da2:	48 89 b4 24 f8 0f 00 	mov    %rsi,-0x3ffff008(%rsp)
   34da9:	c0 
   34daa:	f3 0f 1e fa          	endbr64 
   34dae:	90                   	nop
   34daf:	8b 05 9f c2 ff bf    	mov    -0x40003d61(%rip),%eax        # ffffffffc0031054 <.instr.bb_20898+0xffffffffbfffb084>
   34db5:	33 05 99 b2 ff ff    	xor    -0x4d67(%rip),%eax        # 30054 <done.3241>
   34dbb:	85 c0                	test   %eax,%eax
   34dbd:	0f 85 5d 00 00 00    	jne    34e20 <instr.bb_5318>

0000000000034dc3 <instr.bb_52ee>:
   34dc3:	53                   	push   %rbx
   34dc4:	b8 01 00 00 00       	mov    $0x1,%eax
   34dc9:	0f a2                	cpuid  

0000000000034dcb <instr.bb_52f6>:
   34dcb:	31 c0                	xor    %eax,%eax
   34dcd:	90                   	nop
   34dce:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   34dd3:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34dd8:	89 1d 72 c2 ff bf    	mov    %ebx,-0x40003d8e(%rip)        # ffffffffc0031050 <.instr.bb_20898+0xffffffffbfffb080>
   34dde:	31 cb                	xor    %ecx,%ebx
   34de0:	89 1d 6a b2 ff ff    	mov    %ebx,-0x4d96(%rip)        # 30050 <c.3242>
   34de6:	90                   	nop
   34de7:	8b 1d 63 c2 ff bf    	mov    -0x40003d9d(%rip),%ebx        # ffffffffc0031050 <.instr.bb_20898+0xffffffffbfffb080>
   34ded:	33 1d 5d b2 ff ff    	xor    -0x4da3(%rip),%ebx        # 30050 <c.3242>
   34df3:	85 fb                	test   %edi,%ebx
   34df5:	90                   	nop
   34df6:	0f 94 c3             	sete   %bl
   34df9:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   34dfe:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34e03:	89 0d 4b c2 ff bf    	mov    %ecx,-0x40003db5(%rip)        # ffffffffc0031054 <.instr.bb_20898+0xffffffffbfffb084>
   34e09:	83 f1 01             	xor    $0x1,%ecx
   34e0c:	89 0d 42 b2 ff ff    	mov    %ecx,-0x4dbe(%rip)        # 30054 <done.3241>
   34e12:	80 eb 01             	sub    $0x1,%bl
   34e15:	0f 95 c0             	setne  %al
   34e18:	5b                   	pop    %rbx
   34e19:	c3                   	retq   
   34e1a:	90                   	nop
   34e1b:	90                   	nop
   34e1c:	90                   	nop
   34e1d:	90                   	nop
   34e1e:	90                   	nop
   34e1f:	90                   	nop

0000000000034e20 <instr.bb_5318>:
   34e20:	31 c0                	xor    %eax,%eax
   34e22:	90                   	nop
   34e23:	8b 0d 27 c2 ff bf    	mov    -0x40003dd9(%rip),%ecx        # ffffffffc0031050 <.instr.bb_20898+0xffffffffbfffb080>
   34e29:	33 0d 21 b2 ff ff    	xor    -0x4ddf(%rip),%ecx        # 30050 <c.3242>
   34e2f:	85 f9                	test   %edi,%ecx
   34e31:	0f 95 c0             	setne  %al
   34e34:	c3                   	retq   
   34e35:	90                   	nop
   34e36:	90                   	nop
   34e37:	90                   	nop
   34e38:	90                   	nop
   34e39:	90                   	nop
   34e3a:	90                   	nop
   34e3b:	90                   	nop
   34e3c:	90                   	nop
   34e3d:	90                   	nop
   34e3e:	90                   	nop
   34e3f:	90                   	nop

0000000000034e40 <mbedtls_aesni_crypt_ecb.instr.bb_5330>:
   34e40:	45 31 c0             	xor    %r8d,%r8d
   34e43:	f3 0f 1e fa          	endbr64 
   34e47:	49 89 d0             	mov    %rdx,%r8
   34e4a:	48 8b 97 08 10 00 c0 	mov    -0x3fffeff8(%rdi),%rdx
   34e51:	48 33 57 08          	xor    0x8(%rdi),%rdx
   34e55:	8b 87 00 10 00 c0    	mov    -0x3ffff000(%rdi),%eax
   34e5b:	33 07                	xor    (%rdi),%eax
   34e5d:	48 8d 54 97 10       	lea    0x10(%rdi,%rdx,4),%rdx
   34e62:	c4 c1 7a 6f 80 00 10 	vmovdqu -0x3ffff000(%r8),%xmm0
   34e69:	00 c0 
   34e6b:	c4 c1 79 ef 00       	vpxor  (%r8),%xmm0,%xmm0
   34e70:	c5 fa 6f 8a 00 10 00 	vmovdqu -0x3ffff000(%rdx),%xmm1
   34e77:	c0 
   34e78:	c5 f1 ef 0a          	vpxor  (%rdx),%xmm1,%xmm1
   34e7c:	66 0f ef c1          	pxor   %xmm1,%xmm0
   34e80:	48 83 c2 10          	add    $0x10,%rdx
   34e84:	83 e8 01             	sub    $0x1,%eax
   34e87:	85 f6                	test   %esi,%esi
   34e89:	0f 84 e8 04 fd ff    	je     5377 <mbedtls_aesni_crypt_ecb+0x47>

0000000000034e8f <instr.bb_535a>:
   34e8f:	c5 fa 6f 8a 00 10 00 	vmovdqu -0x3ffff000(%rdx),%xmm1
   34e96:	c0 
   34e97:	c5 f1 ef 0a          	vpxor  (%rdx),%xmm1,%xmm1
   34e9b:	66 0f 38 dc c1       	aesenc %xmm1,%xmm0
   34ea0:	48 83 c2 10          	add    $0x10,%rdx
   34ea4:	83 e8 01             	sub    $0x1,%eax
   34ea7:	0f 85 e2 ff ff ff    	jne    34e8f <instr.bb_535a>

0000000000034ead <instr.bb_536c>:
   34ead:	c5 fa 6f 8a 00 10 00 	vmovdqu -0x3ffff000(%rdx),%xmm1
   34eb4:	c0 
   34eb5:	c5 f1 ef 0a          	vpxor  (%rdx),%xmm1,%xmm1
   34eb9:	66 0f 38 dd c1       	aesenclast %xmm1,%xmm0
   34ebe:	e9 0d 00 00 00       	jmpq   34ed0 <instr.bb_5392>
   34ec3:	90                   	nop
   34ec4:	90                   	nop
   34ec5:	90                   	nop
   34ec6:	90                   	nop
   34ec7:	90                   	nop
   34ec8:	90                   	nop
   34ec9:	90                   	nop
   34eca:	90                   	nop
   34ecb:	90                   	nop
   34ecc:	90                   	nop
   34ecd:	90                   	nop
   34ece:	90                   	nop
   34ecf:	90                   	nop

0000000000034ed0 <instr.bb_5392>:
   34ed0:	31 d2                	xor    %edx,%edx
   34ed2:	c4 c2 79 59 ce       	vpbroadcastq %xmm14,%xmm1
   34ed7:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34edc:	c5 fa 7f 89 00 10 00 	vmovdqu %xmm1,-0x3ffff000(%rcx)
   34ee3:	c0 
   34ee4:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   34ee8:	c5 fa 7f 09          	vmovdqu %xmm1,(%rcx)
   34eec:	31 c0                	xor    %eax,%eax
   34eee:	c3                   	retq   
   34eef:	90                   	nop

0000000000034ef0 <mbedtls_aesni_gcm_mult.instr.bb_53a0>:
   34ef0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   34ef4:	c4 c2 7d 59 c6       	vpbroadcastq %xmm14,%ymm0
   34ef9:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34efe:	c5 fe 7f 84 24 b8 0f 	vmovdqu %ymm0,-0x3ffff048(%rsp)
   34f05:	00 c0 
   34f07:	c5 fe 7f 84 24 d8 0f 	vmovdqu %ymm0,-0x3ffff028(%rsp)
   34f0e:	00 c0 
   34f10:	c5 fa 7f 84 24 f8 0f 	vmovdqu %xmm0,-0x3ffff008(%rsp)
   34f17:	00 c0 
   34f19:	31 db                	xor    %ebx,%ebx
   34f1b:	c5 fa 7f 8c 24 e8 0f 	vmovdqu %xmm1,-0x3ffff018(%rsp)
   34f22:	00 c0 
   34f24:	48 89 9c 24 f8 0f 00 	mov    %rbx,-0x3ffff008(%rsp)
   34f2b:	c0 
   34f2c:	f3 0f 1e fa          	endbr64 
   34f30:	48 83 ec 48          	sub    $0x48,%rsp
   34f34:	31 c9                	xor    %ecx,%ecx
   34f36:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   34f3d:	00 00 
   34f3f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   34f44:	31 c0                	xor    %eax,%eax
   34f46:	49 89 e1             	mov    %rsp,%r9
   34f49:	b8 10 00 00 00       	mov    $0x10,%eax
   34f4e:	4c 8d 54 24 10       	lea    0x10(%rsp),%r10
   34f53:	90                   	nop
   34f54:	90                   	nop
   34f55:	90                   	nop
   34f56:	90                   	nop
   34f57:	90                   	nop
   34f58:	90                   	nop
   34f59:	90                   	nop
   34f5a:	90                   	nop
   34f5b:	90                   	nop
   34f5c:	90                   	nop
   34f5d:	90                   	nop
   34f5e:	90                   	nop
   34f5f:	90                   	nop

0000000000034f60 <instr.bb_53d0>:
   34f60:	8a 9c 06 ff 0f 00 c0 	mov    -0x3ffff001(%rsi,%rax,1),%bl
   34f67:	32 5c 06 ff          	xor    -0x1(%rsi,%rax,1),%bl
   34f6b:	44 0f b6 c3          	movzbl %bl,%r8d
   34f6f:	41 8a 9c 09 00 10 00 	mov    -0x3ffff000(%r9,%rcx,1),%bl
   34f76:	c0 
   34f77:	84 db                	test   %bl,%bl
   34f79:	0f 84 12 00 00 00    	je     34f91 <instr.bb_53d0+0x31>
   34f7f:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   34f84:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34f89:	41 88 9c 09 00 10 00 	mov    %bl,-0x3ffff000(%r9,%rcx,1)
   34f90:	c0 
   34f91:	44 30 c3             	xor    %r8b,%bl
   34f94:	41 88 1c 09          	mov    %bl,(%r9,%rcx,1)
   34f98:	8a 9c 02 ff 0f 00 c0 	mov    -0x3ffff001(%rdx,%rax,1),%bl
   34f9f:	32 5c 02 ff          	xor    -0x1(%rdx,%rax,1),%bl
   34fa3:	44 0f b6 c3          	movzbl %bl,%r8d
   34fa7:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   34fac:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   34fb1:	41 88 9c 0a 00 10 00 	mov    %bl,-0x3ffff000(%r10,%rcx,1)
   34fb8:	c0 
   34fb9:	44 30 c3             	xor    %r8b,%bl
   34fbc:	41 88 1c 0a          	mov    %bl,(%r10,%rcx,1)
   34fc0:	48 83 c1 01          	add    $0x1,%rcx
   34fc4:	48 83 e8 01          	sub    $0x1,%rax
   34fc8:	0f 85 92 ff ff ff    	jne    34f60 <instr.bb_53d0>

0000000000034fce <instr.bb_53ee>:
   34fce:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   34fd3:	c4 c1 7a 6f 81 00 10 	vmovdqu -0x3ffff000(%r9),%xmm0
   34fda:	00 c0 
   34fdc:	c4 c1 79 ef 01       	vpxor  (%r9),%xmm0,%xmm0
   34fe1:	c4 c1 7a 6f 8a 00 10 	vmovdqu -0x3ffff000(%r10),%xmm1
   34fe8:	00 c0 
   34fea:	c4 c1 71 ef 0a       	vpxor  (%r10),%xmm1,%xmm1
   34fef:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   34ff3:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   34ff7:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   34ffb:	66 0f 3a 44 c8 00    	pclmullqlqdq %xmm0,%xmm1
   35001:	66 0f 3a 44 d0 11    	pclmulhqhqdq %xmm0,%xmm2
   35007:	66 0f 3a 44 d8 10    	pclmullqhqdq %xmm0,%xmm3
   3500d:	66 0f 3a 44 e0 01    	pclmulhqlqdq %xmm0,%xmm4
   35013:	66 0f ef e3          	pxor   %xmm3,%xmm4
   35017:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   3501b:	66 0f 73 dc 08       	psrldq $0x8,%xmm4
   35020:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
   35025:	66 0f ef d4          	pxor   %xmm4,%xmm2
   35029:	66 0f ef cb          	pxor   %xmm3,%xmm1
   3502d:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   35031:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   35035:	66 0f 73 f1 01       	psllq  $0x1,%xmm1
   3503a:	66 0f 73 f2 01       	psllq  $0x1,%xmm2
   3503f:	66 0f 73 d3 3f       	psrlq  $0x3f,%xmm3
   35044:	66 0f 73 d4 3f       	psrlq  $0x3f,%xmm4
   35049:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   3504d:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
   35052:	66 0f 73 fc 08       	pslldq $0x8,%xmm4
   35057:	66 0f 73 dd 08       	psrldq $0x8,%xmm5
   3505c:	66 0f eb cb          	por    %xmm3,%xmm1
   35060:	66 0f eb d4          	por    %xmm4,%xmm2
   35064:	66 0f eb d5          	por    %xmm5,%xmm2
   35068:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   3506c:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   35070:	66 0f 6f e9          	movdqa %xmm1,%xmm5
   35074:	66 0f 73 f3 3f       	psllq  $0x3f,%xmm3
   35079:	66 0f 73 f4 3e       	psllq  $0x3e,%xmm4
   3507e:	66 0f 73 f5 39       	psllq  $0x39,%xmm5
   35083:	66 0f ef dc          	pxor   %xmm4,%xmm3
   35087:	66 0f ef dd          	pxor   %xmm5,%xmm3
   3508b:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
   35090:	66 0f ef cb          	pxor   %xmm3,%xmm1
   35094:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   35098:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   3509c:	66 0f 6f e9          	movdqa %xmm1,%xmm5
   350a0:	66 0f 73 d0 01       	psrlq  $0x1,%xmm0
   350a5:	66 0f 73 d4 02       	psrlq  $0x2,%xmm4
   350aa:	66 0f 73 d5 07       	psrlq  $0x7,%xmm5
   350af:	66 0f ef c4          	pxor   %xmm4,%xmm0
   350b3:	66 0f ef c5          	pxor   %xmm5,%xmm0
   350b7:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   350bb:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   350bf:	66 0f 6f e9          	movdqa %xmm1,%xmm5
   350c3:	66 0f 73 f3 3f       	psllq  $0x3f,%xmm3
   350c8:	66 0f 73 f4 3e       	psllq  $0x3e,%xmm4
   350cd:	66 0f 73 f5 39       	psllq  $0x39,%xmm5
   350d2:	66 0f ef dc          	pxor   %xmm4,%xmm3
   350d6:	66 0f ef dd          	pxor   %xmm5,%xmm3
   350da:	66 0f 73 db 08       	psrldq $0x8,%xmm3
   350df:	66 0f ef c3          	pxor   %xmm3,%xmm0
   350e3:	66 0f ef c1          	pxor   %xmm1,%xmm0
   350e7:	66 0f ef c2          	pxor   %xmm2,%xmm0
   350eb:	c4 c2 79 59 ce       	vpbroadcastq %xmm14,%xmm1
   350f0:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   350f5:	c5 fa 7f 89 00 10 00 	vmovdqu %xmm1,-0x3ffff000(%rcx)
   350fc:	c0 
   350fd:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   35101:	c5 fa 7f 09          	vmovdqu %xmm1,(%rcx)
   35105:	48 8d 44 24 2f       	lea    0x2f(%rsp),%rax
   3510a:	90                   	nop
   3510b:	90                   	nop
   3510c:	90                   	nop
   3510d:	90                   	nop
   3510e:	90                   	nop
   3510f:	90                   	nop

0000000000035110 <instr.bb_5508>:
   35110:	8a 98 00 10 00 c0    	mov    -0x3ffff000(%rax),%bl
   35116:	32 18                	xor    (%rax),%bl
   35118:	0f b6 d3             	movzbl %bl,%edx

000000000003511b <instr.bb_550b>:
   3511b:	48 83 c7 01          	add    $0x1,%rdi
   3511f:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   35124:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35129:	88 9f ff 0f 00 c0    	mov    %bl,-0x3ffff001(%rdi)
   3512f:	30 d3                	xor    %dl,%bl
   35131:	88 5f ff             	mov    %bl,-0x1(%rdi)
   35134:	48 89 c2             	mov    %rax,%rdx
   35137:	48 83 e8 01          	sub    $0x1,%rax
   3513b:	48 39 ca             	cmp    %rcx,%rdx
   3513e:	0f 85 cc ff ff ff    	jne    35110 <instr.bb_5508>

0000000000035144 <instr.bb_551e>:
   35144:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   35149:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   35150:	00 00 
   35152:	0f 85 db 03 fd ff    	jne    5533 <mbedtls_aesni_gcm_mult+0x193>

0000000000035158 <instr.bb_552e>:
   35158:	48 83 c4 48          	add    $0x48,%rsp
   3515c:	c3                   	retq   
   3515d:	90                   	nop
   3515e:	90                   	nop
   3515f:	90                   	nop

0000000000035160 <mbedtls_aesni_setkey_enc.instr.bb_55c0>:
   35160:	31 c9                	xor    %ecx,%ecx
   35162:	f3 0f 1e fa          	endbr64 
   35166:	48 81 fa c0 00 00 00 	cmp    $0xc0,%rdx
   3516d:	0f 84 fd 05 fd ff    	je     5770 <mbedtls_aesni_setkey_enc+0x1b0>

0000000000035173 <instr.bb_55d1>:
   35173:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
   3517a:	0f 84 20 05 fd ff    	je     56a0 <mbedtls_aesni_setkey_enc+0xe0>

0000000000035180 <instr.bb_55de>:
   35180:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   35185:	48 81 fa 80 00 00 00 	cmp    $0x80,%rdx
   3518c:	0f 84 0e 00 00 00    	je     351a0 <instr.bb_55f0>
   35192:	e9 55 04 fd ff       	jmpq   55ec <mbedtls_aesni_setkey_enc+0x2c>
   35197:	90                   	nop
   35198:	90                   	nop
   35199:	90                   	nop
   3519a:	90                   	nop
   3519b:	90                   	nop
   3519c:	90                   	nop
   3519d:	90                   	nop
   3519e:	90                   	nop
   3519f:	90                   	nop

00000000000351a0 <instr.bb_55f0>:
   351a0:	c5 fa 6f 86 00 10 00 	vmovdqu -0x3ffff000(%rsi),%xmm0
   351a7:	c0 
   351a8:	c5 f9 ef 06          	vpxor  (%rsi),%xmm0,%xmm0
   351ac:	c4 c2 79 59 ce       	vpbroadcastq %xmm14,%xmm1
   351b1:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   351b6:	c5 fa 7f 8f 00 10 00 	vmovdqu %xmm1,-0x3ffff000(%rdi)
   351bd:	c0 
   351be:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   351c2:	c5 fa 7f 0f          	vmovdqu %xmm1,(%rdi)
   351c6:	e9 45 00 00 00       	jmpq   35210 <instr.bb_5627>

00000000000351cb <instr.bb_55fa>:
   351cb:	31 c9                	xor    %ecx,%ecx
   351cd:	66 0f 70 c9 ff       	pshufd $0xff,%xmm1,%xmm1
   351d2:	66 0f ef c8          	pxor   %xmm0,%xmm1
   351d6:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   351db:	66 0f ef c8          	pxor   %xmm0,%xmm1
   351df:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   351e4:	66 0f ef c8          	pxor   %xmm0,%xmm1
   351e8:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   351ed:	66 0f ef c1          	pxor   %xmm1,%xmm0
   351f1:	48 83 c7 10          	add    $0x10,%rdi
   351f5:	c4 c2 79 59 ce       	vpbroadcastq %xmm14,%xmm1
   351fa:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   351ff:	c5 fa 7f 8f 00 10 00 	vmovdqu %xmm1,-0x3ffff000(%rdi)
   35206:	c0 
   35207:	c5 f1 ef c8          	vpxor  %xmm0,%xmm1,%xmm1
   3520b:	c5 fa 7f 0f          	vmovdqu %xmm1,(%rdi)
   3520f:	c3                   	retq   

0000000000035210 <instr.bb_5627>:
   35210:	31 c9                	xor    %ecx,%ecx
   35212:	66 0f 3a df c8 01    	aeskeygenassist $0x1,%xmm0,%xmm1
   35218:	e8 ae ff ff ff       	callq  351cb <instr.bb_55fa>

000000000003521d <instr.bb_5632>:
   3521d:	66 0f 3a df c8 02    	aeskeygenassist $0x2,%xmm0,%xmm1
   35223:	e8 a3 ff ff ff       	callq  351cb <instr.bb_55fa>

0000000000035228 <instr.bb_563d>:
   35228:	66 0f 3a df c8 04    	aeskeygenassist $0x4,%xmm0,%xmm1
   3522e:	e8 98 ff ff ff       	callq  351cb <instr.bb_55fa>

0000000000035233 <instr.bb_5648>:
   35233:	66 0f 3a df c8 08    	aeskeygenassist $0x8,%xmm0,%xmm1
   35239:	e8 8d ff ff ff       	callq  351cb <instr.bb_55fa>

000000000003523e <instr.bb_5653>:
   3523e:	66 0f 3a df c8 10    	aeskeygenassist $0x10,%xmm0,%xmm1
   35244:	e8 82 ff ff ff       	callq  351cb <instr.bb_55fa>

0000000000035249 <instr.bb_565e>:
   35249:	66 0f 3a df c8 20    	aeskeygenassist $0x20,%xmm0,%xmm1
   3524f:	e8 77 ff ff ff       	callq  351cb <instr.bb_55fa>

0000000000035254 <instr.bb_5669>:
   35254:	66 0f 3a df c8 40    	aeskeygenassist $0x40,%xmm0,%xmm1
   3525a:	e8 6c ff ff ff       	callq  351cb <instr.bb_55fa>

000000000003525f <instr.bb_5674>:
   3525f:	66 0f 3a df c8 80    	aeskeygenassist $0x80,%xmm0,%xmm1
   35265:	e8 61 ff ff ff       	callq  351cb <instr.bb_55fa>

000000000003526a <instr.bb_567f>:
   3526a:	66 0f 3a df c8 1b    	aeskeygenassist $0x1b,%xmm0,%xmm1
   35270:	e8 56 ff ff ff       	callq  351cb <instr.bb_55fa>

0000000000035275 <instr.bb_568a>:
   35275:	66 0f 3a df c8 36    	aeskeygenassist $0x36,%xmm0,%xmm1
   3527b:	e8 4b ff ff ff       	callq  351cb <instr.bb_55fa>

0000000000035280 <instr.bb_5695>:
   35280:	31 c0                	xor    %eax,%eax
   35282:	c3                   	retq   
   35283:	90                   	nop
   35284:	90                   	nop
   35285:	90                   	nop
   35286:	90                   	nop
   35287:	90                   	nop
   35288:	90                   	nop
   35289:	90                   	nop
   3528a:	90                   	nop
   3528b:	90                   	nop
   3528c:	90                   	nop
   3528d:	90                   	nop
   3528e:	90                   	nop
   3528f:	90                   	nop

0000000000035290 <mbedtls_cipher_info_from_values.instr.bb_5bd0>:
   35290:	31 c9                	xor    %ecx,%ecx
   35292:	f3 0f 1e fa          	endbr64 
   35296:	48 8b 05 2b 8a ff ff 	mov    -0x75d5(%rip),%rax        # 2dcc8 <mbedtls_cipher_definitions+0x8>
   3529d:	48 85 c0             	test   %rax,%rax
   352a0:	0f 84 3b 00 00 00    	je     352e1 <instr.bb_5c10>

00000000000352a6 <instr.bb_5be0>:
   352a6:	48 8d 0d 13 8a ff ff 	lea    -0x75ed(%rip),%rcx        # 2dcc0 <mbedtls_cipher_definitions>
   352ad:	e9 0e 00 00 00       	jmpq   352c0 <instr.bb_5bfd>
   352b2:	90                   	nop
   352b3:	90                   	nop
   352b4:	90                   	nop
   352b5:	90                   	nop
   352b6:	90                   	nop
   352b7:	90                   	nop
   352b8:	90                   	nop
   352b9:	90                   	nop
   352ba:	90                   	nop
   352bb:	90                   	nop
   352bc:	90                   	nop
   352bd:	90                   	nop
   352be:	90                   	nop
   352bf:	90                   	nop

00000000000352c0 <instr.bb_5bfd>:
   352c0:	31 c9                	xor    %ecx,%ecx
   352c2:	4c 8b 40 28          	mov    0x28(%rax),%r8
   352c6:	41 39 38             	cmp    %edi,(%r8)
   352c9:	0f 85 21 09 fd ff    	jne    5bf0 <mbedtls_cipher_info_from_values+0x20>

00000000000352cf <instr.bb_5c06>:
   352cf:	39 70 08             	cmp    %esi,0x8(%rax)
   352d2:	0f 85 18 09 fd ff    	jne    5bf0 <mbedtls_cipher_info_from_values+0x20>

00000000000352d8 <instr.bb_5c0b>:
   352d8:	39 50 04             	cmp    %edx,0x4(%rax)
   352db:	0f 85 0f 09 fd ff    	jne    5bf0 <mbedtls_cipher_info_from_values+0x20>

00000000000352e1 <instr.bb_5c10>:
   352e1:	c3                   	retq   
   352e2:	90                   	nop
   352e3:	90                   	nop
   352e4:	90                   	nop
   352e5:	90                   	nop
   352e6:	90                   	nop
   352e7:	90                   	nop
   352e8:	90                   	nop
   352e9:	90                   	nop
   352ea:	90                   	nop
   352eb:	90                   	nop
   352ec:	90                   	nop
   352ed:	90                   	nop
   352ee:	90                   	nop
   352ef:	90                   	nop

00000000000352f0 <mbedtls_cipher_free.instr.bb_5c50>:
   352f0:	31 c9                	xor    %ecx,%ecx
   352f2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   352f9:	c0 
   352fa:	f3 0f 1e fa          	endbr64 
   352fe:	48 85 ff             	test   %rdi,%rdi
   35301:	0f 84 99 09 fd ff    	je     5ca0 <mbedtls_cipher_free+0x50>

0000000000035307 <instr.bb_5c59>:
   35307:	55                   	push   %rbp
   35308:	48 89 fd             	mov    %rdi,%rbp
   3530b:	48 89 f9             	mov    %rdi,%rcx
   3530e:	48 8b b9 58 10 00 c0 	mov    -0x3fffefa8(%rcx),%rdi
   35315:	48 33 79 58          	xor    0x58(%rcx),%rdi
   35319:	48 85 ff             	test   %rdi,%rdi
   3531c:	0f 84 1e 00 00 00    	je     35340 <instr.bb_5c79>

0000000000035322 <instr.bb_5c66>:
   35322:	be 28 00 00 00       	mov    $0x28,%esi
   35327:	e8 64 fa ff ff       	callq  34d90 <mbedtls_platform_zeroize.instr.bb_5220>
   3532c:	e9 3f 09 fd ff       	jmpq   5c70 <mbedtls_cipher_free+0x20>
   35331:	90                   	nop
   35332:	90                   	nop
   35333:	90                   	nop
   35334:	90                   	nop
   35335:	90                   	nop
   35336:	90                   	nop
   35337:	90                   	nop
   35338:	90                   	nop
   35339:	90                   	nop
   3533a:	90                   	nop
   3533b:	90                   	nop
   3533c:	90                   	nop
   3533d:	90                   	nop
   3533e:	90                   	nop
   3533f:	90                   	nop

0000000000035340 <instr.bb_5c79>:
   35340:	48 8b bd 50 10 00 c0 	mov    -0x3fffefb0(%rbp),%rdi
   35347:	48 33 7d 50          	xor    0x50(%rbp),%rdi
   3534b:	48 85 ff             	test   %rdi,%rdi
   3534e:	0f 84 0b 00 00 00    	je     3535f <instr.bb_5c8d>

0000000000035354 <instr.bb_5c82>:
   35354:	48 8b 45 00          	mov    0x0(%rbp),%rax
   35358:	48 8b 40 28          	mov    0x28(%rax),%rax
   3535c:	ff 50 58             	callq  *0x58(%rax)

000000000003535f <instr.bb_5c8d>:
   3535f:	48 89 ef             	mov    %rbp,%rdi
   35362:	be 60 00 00 00       	mov    $0x60,%esi
   35367:	5d                   	pop    %rbp
   35368:	e9 23 fa ff ff       	jmpq   34d90 <mbedtls_platform_zeroize.instr.bb_5220>
   3536d:	90                   	nop
   3536e:	90                   	nop
   3536f:	90                   	nop

0000000000035370 <mbedtls_cipher_setup.instr.bb_5cb0>:
   35370:	31 c9                	xor    %ecx,%ecx
   35372:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   35379:	c0 
   3537a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   35381:	c0 
   35382:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   35389:	c0 
   3538a:	f3 0f 1e fa          	endbr64 
   3538e:	48 85 f6             	test   %rsi,%rsi
   35391:	0f 84 9d 09 fd ff    	je     5d34 <mbedtls_cipher_setup+0x84>

0000000000035397 <instr.bb_5cb9>:
   35397:	55                   	push   %rbp
   35398:	31 c0                	xor    %eax,%eax
   3539a:	48 89 f5             	mov    %rsi,%rbp
   3539d:	53                   	push   %rbx
   3539e:	48 89 fb             	mov    %rdi,%rbx
   353a1:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   353a5:	48 89 d9             	mov    %rbx,%rcx
   353a8:	48 83 ec 08          	sub    $0x8,%rsp
   353ac:	c4 41 f9 7e f0       	vmovq  %xmm14,%r8
   353b1:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   353b6:	4c 89 87 f8 0f 00 c0 	mov    %r8,-0x3ffff008(%rdi)
   353bd:	4c 89 47 f8          	mov    %r8,-0x8(%rdi)
   353c1:	c4 41 f9 7e f0       	vmovq  %xmm14,%r8
   353c6:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   353cb:	4c 89 87 50 10 00 c0 	mov    %r8,-0x3fffefb0(%rdi)
   353d2:	4c 89 47 50          	mov    %r8,0x50(%rdi)
   353d6:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   353da:	48 29 f9             	sub    %rdi,%rcx
   353dd:	83 c1 60             	add    $0x60,%ecx
   353e0:	c1 e9 03             	shr    $0x3,%ecx

00000000000353e3 <instr.bb_5ceb>:
   353e3:	49 89 c9             	mov    %rcx,%r9
   353e6:	c4 41 f9 7e f0       	vmovq  %xmm14,%r8
   353eb:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   353f0:	4c 31 c0             	xor    %r8,%rax
   353f3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   353f6:	4c 89 c9             	mov    %r9,%rcx
   353f9:	49 89 c1             	mov    %rax,%r9
   353fc:	4c 89 c0             	mov    %r8,%rax
   353ff:	4c 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%r8
   35406:	00 
   35407:	4c 29 c7             	sub    %r8,%rdi
   3540a:	48 81 c7 00 10 00 c0 	add    $0xffffffffc0001000,%rdi
   35411:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   35414:	4c 31 c8             	xor    %r9,%rax
   35417:	48 81 ef 00 10 00 c0 	sub    $0xffffffffc0001000,%rdi

000000000003541e <instr.bb_5cee>:
   3541e:	48 8b 46 28          	mov    0x28(%rsi),%rax
   35422:	48 89 c1             	mov    %rax,%rcx
   35425:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   3542c:	70 00 00 
   3542f:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   35436:	00 
   35437:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   3543e:	70 00 00 
   35441:	48 89 c8             	mov    %rcx,%rax
   35444:	ff 50 50             	callq  *0x50(%rax)
   35447:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   3544e:	70 00 00 
   35451:	48 8b 37             	mov    (%rdi),%rsi
   35454:	48 d1 ee             	shr    %rsi
   35457:	48 89 37             	mov    %rsi,(%rdi)

000000000003545a <instr.bb_5cf5>:
   3545a:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   3545f:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35464:	48 89 8b 50 10 00 c0 	mov    %rcx,-0x3fffefb0(%rbx)
   3546b:	48 31 c1             	xor    %rax,%rcx
   3546e:	48 89 4b 50          	mov    %rcx,0x50(%rbx)
   35472:	48 85 c0             	test   %rax,%rax
   35475:	0f 84 bf 08 fd ff    	je     5d3a <mbedtls_cipher_setup+0x8a>

000000000003547b <instr.bb_5cfe>:
   3547b:	83 7d 04 02          	cmpl   $0x2,0x4(%rbp)
   3547f:	0f 94 c0             	sete   %al
   35482:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   35487:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   3548c:	48 89 8b 00 10 00 c0 	mov    %rcx,-0x3ffff000(%rbx)
   35493:	48 31 e9             	xor    %rbp,%rcx
   35496:	48 89 0b             	mov    %rcx,(%rbx)
   35499:	2c 01                	sub    $0x1,%al
   3549b:	0f 85 8f 08 fd ff    	jne    5d30 <mbedtls_cipher_setup+0x80>

00000000000354a1 <instr.bb_5d07>:
   354a1:	48 8d 05 88 03 fd ff 	lea    -0x2fc78(%rip),%rax        # 5830 <add_pkcs_padding>
   354a8:	48 89 43 10          	mov    %rax,0x10(%rbx)
   354ac:	48 8d 05 bd 03 fd ff 	lea    -0x2fc43(%rip),%rax        # 5870 <get_pkcs_padding>
   354b3:	48 89 43 18          	mov    %rax,0x18(%rbx)
   354b7:	31 c0                	xor    %eax,%eax

00000000000354b9 <instr.bb_5d1f>:
   354b9:	48 83 c4 08          	add    $0x8,%rsp
   354bd:	5b                   	pop    %rbx
   354be:	5d                   	pop    %rbp
   354bf:	c3                   	retq   

00000000000354c0 <mbedtls_cipher_setkey.instr.bb_5d50>:
   354c0:	45 31 c0             	xor    %r8d,%r8d
   354c3:	f3 0f 1e fa          	endbr64 
   354c7:	83 f9 01             	cmp    $0x1,%ecx
   354ca:	0f 87 c5 08 fd ff    	ja     5d95 <mbedtls_cipher_setkey+0x45>

00000000000354d0 <instr.bb_5d59>:
   354d0:	48 8b 87 00 10 00 c0 	mov    -0x3ffff000(%rdi),%rax
   354d7:	48 33 07             	xor    (%rdi),%rax
   354da:	48 85 c0             	test   %rax,%rax
   354dd:	0f 84 b2 08 fd ff    	je     5d95 <mbedtls_cipher_setkey+0x45>

00000000000354e3 <instr.bb_5d61>:
   354e3:	f6 40 1c 02          	testb  $0x2,0x1c(%rax)
   354e7:	0f 84 a3 08 fd ff    	je     5d90 <mbedtls_cipher_setkey+0x40>

00000000000354ed <instr.bb_5d67>:
   354ed:	c4 41 f9 7e f0       	vmovq  %xmm14,%r8
   354f2:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   354f7:	44 89 87 08 10 00 c0 	mov    %r8d,-0x3fffeff8(%rdi)
   354fe:	41 31 d0             	xor    %edx,%r8d
   35501:	44 89 47 08          	mov    %r8d,0x8(%rdi)
   35505:	4c 8b 40 28          	mov    0x28(%rax),%r8
   35509:	c4 41 f9 7e f1       	vmovq  %xmm14,%r9
   3550e:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35513:	44 89 8f 0c 10 00 c0 	mov    %r9d,-0x3fffeff4(%rdi)
   3551a:	41 31 c9             	xor    %ecx,%r9d
   3551d:	44 89 4f 0c          	mov    %r9d,0xc(%rdi)
   35521:	49 89 f9             	mov    %rdi,%r9
   35524:	49 8b b9 50 10 00 c0 	mov    -0x3fffefb0(%r9),%rdi
   3552b:	49 33 79 50          	xor    0x50(%r9),%rdi
   3552f:	83 f9 01             	cmp    $0x1,%ecx
   35532:	0f 84 0f 00 00 00    	je     35547 <instr.bb_5d85>

0000000000035538 <instr.bb_5d7a>:
   35538:	8b 40 04             	mov    0x4(%rax),%eax
   3553b:	83 e8 03             	sub    $0x3,%eax
   3553e:	83 f8 02             	cmp    $0x2,%eax
   35541:	0f 87 59 08 fd ff    	ja     5da0 <mbedtls_cipher_setkey+0x50>

0000000000035547 <instr.bb_5d85>:
   35547:	41 ff 60 40          	jmpq   *0x40(%r8)
   3554b:	90                   	nop
   3554c:	90                   	nop
   3554d:	90                   	nop
   3554e:	90                   	nop
   3554f:	90                   	nop

0000000000035550 <mbedtls_cipher_update.instr.bb_6050>:
   35550:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   35554:	c5 fe 7f 8c 24 b8 0f 	vmovdqu %ymm1,-0x3ffff048(%rsp)
   3555b:	00 c0 
   3555d:	c5 fe 7f 8c 24 d8 0f 	vmovdqu %ymm1,-0x3ffff028(%rsp)
   35564:	00 c0 
   35566:	c5 fa 7f 8c 24 f8 0f 	vmovdqu %xmm1,-0x3ffff008(%rsp)
   3556d:	00 c0 
   3556f:	c4 c1 f9 7e c1       	vmovq  %xmm0,%r9
   35574:	f3 0f 1e fa          	endbr64 
   35578:	41 57                	push   %r15
   3557a:	41 56                	push   %r14
   3557c:	49 89 ce             	mov    %rcx,%r14
   3557f:	41 55                	push   %r13
   35581:	41 54                	push   %r12
   35583:	55                   	push   %rbp
   35584:	53                   	push   %rbx
   35585:	48 83 ec 18          	sub    $0x18,%rsp
   35589:	48 8b 8f 00 10 00 c0 	mov    -0x3ffff000(%rdi),%rcx
   35590:	48 33 0f             	xor    (%rdi),%rcx
   35593:	48 85 c9             	test   %rcx,%rcx
   35596:	0f 84 0c 0d fd ff    	je     62a8 <mbedtls_cipher_update+0x258>

000000000003559c <instr.bb_6071>:
   3559c:	44 8b 79 20          	mov    0x20(%rcx),%r15d
   355a0:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
   355a7:	4c 89 c5             	mov    %r8,%rbp
   355aa:	4d 85 ff             	test   %r15,%r15
   355ad:	0f 84 7d 0e fd ff    	je     6430 <mbedtls_cipher_update+0x3e0>

00000000000355b3 <instr.bb_6088>:
   355b3:	49 89 f5             	mov    %rsi,%r13
   355b6:	8b 71 04             	mov    0x4(%rcx),%esi
   355b9:	48 89 fb             	mov    %rdi,%rbx
   355bc:	49 89 d4             	mov    %rdx,%r12
   355bf:	83 fe 01             	cmp    $0x1,%esi
   355c2:	0f 84 08 00 00 00    	je     355d0 <instr.bb_6110>
   355c8:	e9 cc 0a fd ff       	jmpq   6099 <mbedtls_cipher_update+0x49>
   355cd:	90                   	nop
   355ce:	90                   	nop
   355cf:	90                   	nop

00000000000355d0 <instr.bb_6110>:
   355d0:	49 39 d7             	cmp    %rdx,%r15
   355d3:	0f 85 61 0e fd ff    	jne    643a <mbedtls_cipher_update+0x3ea>

00000000000355d9 <instr.bb_6119>:
   355d9:	48 8b 41 28          	mov    0x28(%rcx),%rax
   355dd:	4d 89 38             	mov    %r15,(%r8)
   355e0:	4c 89 f1             	mov    %r14,%rcx
   355e3:	4c 89 ea             	mov    %r13,%rdx
   355e6:	8b b7 0c 10 00 c0    	mov    -0x3fffeff4(%rdi),%esi
   355ec:	33 77 0c             	xor    0xc(%rdi),%esi
   355ef:	48 89 fb             	mov    %rdi,%rbx
   355f2:	48 8b bb 50 10 00 c0 	mov    -0x3fffefb0(%rbx),%rdi
   355f9:	48 33 7b 50          	xor    0x50(%rbx),%rdi
   355fd:	48 8b 40 08          	mov    0x8(%rax),%rax
   35601:	48 83 c4 18          	add    $0x18,%rsp
   35605:	5b                   	pop    %rbx
   35606:	5d                   	pop    %rbp
   35607:	41 5c                	pop    %r12
   35609:	41 5d                	pop    %r13
   3560b:	41 5e                	pop    %r14
   3560d:	41 5f                	pop    %r15
   3560f:	ff e0                	jmpq   *%rax
   35611:	90                   	nop
   35612:	90                   	nop
   35613:	90                   	nop
   35614:	90                   	nop
   35615:	90                   	nop
   35616:	90                   	nop
   35617:	90                   	nop
   35618:	90                   	nop
   35619:	90                   	nop
   3561a:	90                   	nop
   3561b:	90                   	nop
   3561c:	90                   	nop
   3561d:	90                   	nop
   3561e:	90                   	nop
   3561f:	90                   	nop

0000000000035620 <aes_ctx_alloc.instr.bb_7250>:
   35620:	31 c9                	xor    %ecx,%ecx
   35622:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   35629:	c0 
   3562a:	f3 0f 1e fa          	endbr64 
   3562e:	41 54                	push   %r12
   35630:	be 20 01 00 00       	mov    $0x120,%esi
   35635:	bf 01 00 00 00       	mov    $0x1,%edi
   3563a:	48 a1 00 01 00 00 00 	movabs 0x700000000100,%rax
   35641:	70 00 00 
   35644:	48 8d 04 45 01 00 00 	lea    0x1(,%rax,2),%rax
   3564b:	00 
   3564c:	48 a3 00 01 00 00 00 	movabs %rax,0x700000000100
   35653:	70 00 00 
   35656:	48 8d 05 63 dc fc ff 	lea    -0x3239d(%rip),%rax        # 32c0 <calloc@plt>
   3565d:	e8 ab de ff ff       	callq  3350d <handle_calloc>
   35662:	48 bf 00 01 00 00 00 	movabs $0x700000000100,%rdi
   35669:	70 00 00 
   3566c:	48 8b 37             	mov    (%rdi),%rsi
   3566f:	48 d1 ee             	shr    %rsi
   35672:	48 89 37             	mov    %rsi,(%rdi)

0000000000035675 <instr.bb_7265>:
   35675:	49 89 c4             	mov    %rax,%r12
   35678:	48 85 c0             	test   %rax,%rax
   3567b:	0f 84 08 00 00 00    	je     35689 <instr.bb_7275>

0000000000035681 <instr.bb_726d>:
   35681:	48 89 c7             	mov    %rax,%rdi
   35684:	e8 17 07 00 00       	callq  35da0 <mbedtls_aes_init.instr.bb_12140>

0000000000035689 <instr.bb_7275>:
   35689:	4c 89 e0             	mov    %r12,%rax
   3568c:	41 5c                	pop    %r12
   3568e:	c3                   	retq   
   3568f:	90                   	nop

0000000000035690 <aes_setkey_enc_wrap.instr.bb_7290>:
   35690:	31 c9                	xor    %ecx,%ecx
   35692:	f3 0f 1e fa          	endbr64 
   35696:	e9 95 07 00 00       	jmpq   35e30 <mbedtls_aes_setkey_enc.instr.bb_12250>
   3569b:	90                   	nop
   3569c:	90                   	nop
   3569d:	90                   	nop
   3569e:	90                   	nop
   3569f:	90                   	nop

00000000000356a0 <aes_crypt_ecb_wrap.instr.bb_72e0>:
   356a0:	45 31 c0             	xor    %r8d,%r8d
   356a3:	f3 0f 1e fa          	endbr64 
   356a7:	e9 94 08 00 00       	jmpq   35f40 <mbedtls_aes_crypt_ecb.instr.bb_130b0>
   356ac:	90                   	nop
   356ad:	90                   	nop
   356ae:	90                   	nop
   356af:	90                   	nop

00000000000356b0 <aes_gen_tables.instr.bb_11d90>:
   356b0:	c5 f5 ef c9          	vpxor  %ymm1,%ymm1,%ymm1
   356b4:	c5 fe 7f 8c 24 a8 07 	vmovdqu %ymm1,-0x3ffff858(%rsp)
   356bb:	00 c0 
   356bd:	c5 fe 7f 8c 24 c8 07 	vmovdqu %ymm1,-0x3ffff838(%rsp)
   356c4:	00 c0 
   356c6:	c5 fe 7f 8c 24 e8 07 	vmovdqu %ymm1,-0x3ffff818(%rsp)
   356cd:	00 c0 
   356cf:	c5 fe 7f 8c 24 08 08 	vmovdqu %ymm1,-0x3ffff7f8(%rsp)
   356d6:	00 c0 
   356d8:	c5 fe 7f 8c 24 28 08 	vmovdqu %ymm1,-0x3ffff7d8(%rsp)
   356df:	00 c0 
   356e1:	c5 fe 7f 8c 24 48 08 	vmovdqu %ymm1,-0x3ffff7b8(%rsp)
   356e8:	00 c0 
   356ea:	c5 fe 7f 8c 24 68 08 	vmovdqu %ymm1,-0x3ffff798(%rsp)
   356f1:	00 c0 
   356f3:	c5 fe 7f 8c 24 88 08 	vmovdqu %ymm1,-0x3ffff778(%rsp)
   356fa:	00 c0 
   356fc:	c5 fe 7f 8c 24 a8 08 	vmovdqu %ymm1,-0x3ffff758(%rsp)
   35703:	00 c0 
   35705:	c5 fe 7f 8c 24 c8 08 	vmovdqu %ymm1,-0x3ffff738(%rsp)
   3570c:	00 c0 
   3570e:	c5 fe 7f 8c 24 e8 08 	vmovdqu %ymm1,-0x3ffff718(%rsp)
   35715:	00 c0 
   35717:	c5 fe 7f 8c 24 08 09 	vmovdqu %ymm1,-0x3ffff6f8(%rsp)
   3571e:	00 c0 
   35720:	c5 fe 7f 8c 24 28 09 	vmovdqu %ymm1,-0x3ffff6d8(%rsp)
   35727:	00 c0 
   35729:	c5 fe 7f 8c 24 48 09 	vmovdqu %ymm1,-0x3ffff6b8(%rsp)
   35730:	00 c0 
   35732:	c5 fe 7f 8c 24 68 09 	vmovdqu %ymm1,-0x3ffff698(%rsp)
   35739:	00 c0 
   3573b:	c5 fe 7f 8c 24 88 09 	vmovdqu %ymm1,-0x3ffff678(%rsp)
   35742:	00 c0 
   35744:	c5 fe 7f 8c 24 a8 09 	vmovdqu %ymm1,-0x3ffff658(%rsp)
   3574b:	00 c0 
   3574d:	c5 fe 7f 8c 24 c8 09 	vmovdqu %ymm1,-0x3ffff638(%rsp)
   35754:	00 c0 
   35756:	c5 fe 7f 8c 24 e8 09 	vmovdqu %ymm1,-0x3ffff618(%rsp)
   3575d:	00 c0 
   3575f:	c5 fe 7f 8c 24 08 0a 	vmovdqu %ymm1,-0x3ffff5f8(%rsp)
   35766:	00 c0 
   35768:	c5 fe 7f 8c 24 28 0a 	vmovdqu %ymm1,-0x3ffff5d8(%rsp)
   3576f:	00 c0 
   35771:	c5 fe 7f 8c 24 48 0a 	vmovdqu %ymm1,-0x3ffff5b8(%rsp)
   35778:	00 c0 
   3577a:	c5 fe 7f 8c 24 68 0a 	vmovdqu %ymm1,-0x3ffff598(%rsp)
   35781:	00 c0 
   35783:	c5 fe 7f 8c 24 88 0a 	vmovdqu %ymm1,-0x3ffff578(%rsp)
   3578a:	00 c0 
   3578c:	c5 fe 7f 8c 24 a8 0a 	vmovdqu %ymm1,-0x3ffff558(%rsp)
   35793:	00 c0 
   35795:	c5 fe 7f 8c 24 c8 0a 	vmovdqu %ymm1,-0x3ffff538(%rsp)
   3579c:	00 c0 
   3579e:	c5 fe 7f 8c 24 e8 0a 	vmovdqu %ymm1,-0x3ffff518(%rsp)
   357a5:	00 c0 
   357a7:	c5 fe 7f 8c 24 08 0b 	vmovdqu %ymm1,-0x3ffff4f8(%rsp)
   357ae:	00 c0 
   357b0:	c5 fe 7f 8c 24 28 0b 	vmovdqu %ymm1,-0x3ffff4d8(%rsp)
   357b7:	00 c0 
   357b9:	c5 fe 7f 8c 24 48 0b 	vmovdqu %ymm1,-0x3ffff4b8(%rsp)
   357c0:	00 c0 
   357c2:	c5 fe 7f 8c 24 68 0b 	vmovdqu %ymm1,-0x3ffff498(%rsp)
   357c9:	00 c0 
   357cb:	c5 fe 7f 8c 24 88 0b 	vmovdqu %ymm1,-0x3ffff478(%rsp)
   357d2:	00 c0 
   357d4:	c5 fe 7f 8c 24 a8 0b 	vmovdqu %ymm1,-0x3ffff458(%rsp)
   357db:	00 c0 
   357dd:	c5 fe 7f 8c 24 c8 0b 	vmovdqu %ymm1,-0x3ffff438(%rsp)
   357e4:	00 c0 
   357e6:	c5 fe 7f 8c 24 e8 0b 	vmovdqu %ymm1,-0x3ffff418(%rsp)
   357ed:	00 c0 
   357ef:	c5 fe 7f 8c 24 08 0c 	vmovdqu %ymm1,-0x3ffff3f8(%rsp)
   357f6:	00 c0 
   357f8:	c5 fe 7f 8c 24 28 0c 	vmovdqu %ymm1,-0x3ffff3d8(%rsp)
   357ff:	00 c0 
   35801:	c5 fe 7f 8c 24 48 0c 	vmovdqu %ymm1,-0x3ffff3b8(%rsp)
   35808:	00 c0 
   3580a:	c5 fe 7f 8c 24 68 0c 	vmovdqu %ymm1,-0x3ffff398(%rsp)
   35811:	00 c0 
   35813:	c5 fe 7f 8c 24 88 0c 	vmovdqu %ymm1,-0x3ffff378(%rsp)
   3581a:	00 c0 
   3581c:	c5 fe 7f 8c 24 a8 0c 	vmovdqu %ymm1,-0x3ffff358(%rsp)
   35823:	00 c0 
   35825:	c5 fe 7f 8c 24 c8 0c 	vmovdqu %ymm1,-0x3ffff338(%rsp)
   3582c:	00 c0 
   3582e:	c5 fe 7f 8c 24 e8 0c 	vmovdqu %ymm1,-0x3ffff318(%rsp)
   35835:	00 c0 
   35837:	c5 fe 7f 8c 24 08 0d 	vmovdqu %ymm1,-0x3ffff2f8(%rsp)
   3583e:	00 c0 
   35840:	c5 fe 7f 8c 24 28 0d 	vmovdqu %ymm1,-0x3ffff2d8(%rsp)
   35847:	00 c0 
   35849:	c5 fe 7f 8c 24 48 0d 	vmovdqu %ymm1,-0x3ffff2b8(%rsp)
   35850:	00 c0 
   35852:	c5 fe 7f 8c 24 68 0d 	vmovdqu %ymm1,-0x3ffff298(%rsp)
   35859:	00 c0 
   3585b:	c5 fe 7f 8c 24 88 0d 	vmovdqu %ymm1,-0x3ffff278(%rsp)
   35862:	00 c0 
   35864:	c5 fe 7f 8c 24 a8 0d 	vmovdqu %ymm1,-0x3ffff258(%rsp)
   3586b:	00 c0 
   3586d:	c5 fe 7f 8c 24 c8 0d 	vmovdqu %ymm1,-0x3ffff238(%rsp)
   35874:	00 c0 
   35876:	c5 fe 7f 8c 24 e8 0d 	vmovdqu %ymm1,-0x3ffff218(%rsp)
   3587d:	00 c0 
   3587f:	c5 fe 7f 8c 24 08 0e 	vmovdqu %ymm1,-0x3ffff1f8(%rsp)
   35886:	00 c0 
   35888:	c5 fe 7f 8c 24 28 0e 	vmovdqu %ymm1,-0x3ffff1d8(%rsp)
   3588f:	00 c0 
   35891:	c5 fe 7f 8c 24 48 0e 	vmovdqu %ymm1,-0x3ffff1b8(%rsp)
   35898:	00 c0 
   3589a:	c5 fe 7f 8c 24 68 0e 	vmovdqu %ymm1,-0x3ffff198(%rsp)
   358a1:	00 c0 
   358a3:	c5 fe 7f 8c 24 88 0e 	vmovdqu %ymm1,-0x3ffff178(%rsp)
   358aa:	00 c0 
   358ac:	c5 fe 7f 8c 24 a8 0e 	vmovdqu %ymm1,-0x3ffff158(%rsp)
   358b3:	00 c0 
   358b5:	c5 fe 7f 8c 24 c8 0e 	vmovdqu %ymm1,-0x3ffff138(%rsp)
   358bc:	00 c0 
   358be:	c5 fe 7f 8c 24 e8 0e 	vmovdqu %ymm1,-0x3ffff118(%rsp)
   358c5:	00 c0 
   358c7:	c5 fe 7f 8c 24 08 0f 	vmovdqu %ymm1,-0x3ffff0f8(%rsp)
   358ce:	00 c0 
   358d0:	c5 fe 7f 8c 24 28 0f 	vmovdqu %ymm1,-0x3ffff0d8(%rsp)
   358d7:	00 c0 
   358d9:	c5 fe 7f 8c 24 48 0f 	vmovdqu %ymm1,-0x3ffff0b8(%rsp)
   358e0:	00 c0 
   358e2:	c5 fe 7f 8c 24 68 0f 	vmovdqu %ymm1,-0x3ffff098(%rsp)
   358e9:	00 c0 
   358eb:	c5 fe 7f 8c 24 88 0f 	vmovdqu %ymm1,-0x3ffff078(%rsp)
   358f2:	00 c0 
   358f4:	c5 fe 7f 8c 24 a8 0f 	vmovdqu %ymm1,-0x3ffff058(%rsp)
   358fb:	00 c0 
   358fd:	c5 fe 7f 8c 24 c8 0f 	vmovdqu %ymm1,-0x3ffff038(%rsp)
   35904:	00 c0 
   35906:	c5 fe 7f 8c 24 e8 0f 	vmovdqu %ymm1,-0x3ffff018(%rsp)
   3590d:	00 c0 
   3590f:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
   35914:	41 57                	push   %r15
   35916:	31 f6                	xor    %esi,%esi
   35918:	41 56                	push   %r14
   3591a:	41 55                	push   %r13
   3591c:	41 54                	push   %r12
   3591e:	55                   	push   %rbp
   3591f:	53                   	push   %rbx
   35920:	48 81 ec 28 08 00 00 	sub    $0x828,%rsp
   35927:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3592e:	00 00 
   35930:	48 89 84 24 18 08 00 	mov    %rax,0x818(%rsp)
   35937:	00 
   35938:	31 c0                	xor    %eax,%eax
   3593a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   3593f:	b8 01 00 00 00       	mov    $0x1,%eax

0000000000035944 <instr.bb_11dc0>:
   35944:	48 63 d0             	movslq %eax,%rdx
   35947:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
   3594a:	89 04 b7             	mov    %eax,(%rdi,%rsi,4)
   3594d:	89 b4 94 10 04 00 00 	mov    %esi,0x410(%rsp,%rdx,4)
   35954:	89 c2                	mov    %eax,%edx
   35956:	81 e2 80 00 00 00    	and    $0x80,%edx
   3595c:	83 fa 01             	cmp    $0x1,%edx
   3595f:	19 d2                	sbb    %edx,%edx
   35961:	31 c8                	xor    %ecx,%eax
   35963:	48 83 c6 01          	add    $0x1,%rsi
   35967:	f7 d2                	not    %edx
   35969:	83 e2 1b             	and    $0x1b,%edx
   3596c:	31 d0                	xor    %edx,%eax
   3596e:	0f b6 c0             	movzbl %al,%eax
   35971:	48 81 fe 00 01 00 00 	cmp    $0x100,%rsi
   35978:	0f 85 c6 ff ff ff    	jne    35944 <instr.bb_11dc0>

000000000003597e <instr.bb_11df6>:
   3597e:	48 8d 0d fb a6 ff ff 	lea    -0x5905(%rip),%rcx        # 30080 <RCON>
   35985:	b8 01 00 00 00       	mov    $0x1,%eax
   3598a:	48 8d 79 28          	lea    0x28(%rcx),%rdi
   3598e:	90                   	nop
   3598f:	90                   	nop

0000000000035990 <instr.bb_11e10>:
   35990:	8d 14 00             	lea    (%rax,%rax,1),%edx
   35993:	89 01                	mov    %eax,(%rcx)
   35995:	89 d6                	mov    %edx,%esi
   35997:	83 f6 1b             	xor    $0x1b,%esi
   3599a:	a8 80                	test   $0x80,%al
   3599c:	0f 45 d6             	cmovne %esi,%edx
   3599f:	48 83 c1 04          	add    $0x4,%rcx
   359a3:	0f b6 c2             	movzbl %dl,%eax
   359a6:	48 39 cf             	cmp    %rcx,%rdi
   359a9:	0f 85 e1 ff ff ff    	jne    35990 <instr.bb_11e10>

00000000000359af <instr.bb_11e2b>:
   359af:	90                   	nop
   359b0:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   359b5:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   359ba:	88 1d 00 d8 ff bf    	mov    %bl,-0x40002800(%rip)        # ffffffffc00331c0 <.instr.bb_20898+0xffffffffbfffd1f0>
   359c0:	80 f3 63             	xor    $0x63,%bl
   359c3:	88 1d f7 c7 ff ff    	mov    %bl,-0x3809(%rip)        # 321c0 <FSb>
   359c9:	ba 01 00 00 00       	mov    $0x1,%edx
   359ce:	4c 8d 94 24 10 04 00 	lea    0x410(%rsp),%r10
   359d5:	00 
   359d6:	4c 8d 0d e3 c7 ff ff 	lea    -0x381d(%rip),%r9        # 321c0 <FSb>
   359dd:	90                   	nop
   359de:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   359e3:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   359e8:	88 1d 35 c7 ff bf    	mov    %bl,-0x400038cb(%rip)        # ffffffffc0032123 <.instr.bb_20898+0xffffffffbfffc153>
   359ee:	88 1d 2f b7 ff ff    	mov    %bl,-0x48d1(%rip)        # 31123 <RSb+0x63>
   359f4:	48 8d 35 c5 b6 ff ff 	lea    -0x493b(%rip),%rsi        # 310c0 <RSb>
   359fb:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
   35a01:	90                   	nop
   35a02:	90                   	nop
   35a03:	90                   	nop
   35a04:	90                   	nop
   35a05:	90                   	nop
   35a06:	90                   	nop
   35a07:	90                   	nop
   35a08:	90                   	nop
   35a09:	90                   	nop
   35a0a:	90                   	nop
   35a0b:	90                   	nop
   35a0c:	90                   	nop
   35a0d:	90                   	nop
   35a0e:	90                   	nop
   35a0f:	90                   	nop

0000000000035a10 <instr.bb_11e60>:
   35a10:	44 89 c0             	mov    %r8d,%eax
   35a13:	41 2b 04 92          	sub    (%r10,%rdx,4),%eax
   35a17:	48 98                	cltq   
   35a19:	8b 4c 84 10          	mov    0x10(%rsp,%rax,4),%ecx
   35a1d:	89 cf                	mov    %ecx,%edi
   35a1f:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   35a22:	c1 ff 07             	sar    $0x7,%edi
   35a25:	09 f8                	or     %edi,%eax
   35a27:	89 c7                	mov    %eax,%edi
   35a29:	44 0f b6 d8          	movzbl %al,%r11d
   35a2d:	40 d0 c7             	rol    %dil
   35a30:	41 31 cb             	xor    %ecx,%r11d
   35a33:	40 0f b6 cf          	movzbl %dil,%ecx
   35a37:	89 c7                	mov    %eax,%edi
   35a39:	c0 c0 03             	rol    $0x3,%al
   35a3c:	40 c0 c7 02          	rol    $0x2,%dil
   35a40:	41 31 cb             	xor    %ecx,%r11d
   35a43:	83 f0 63             	xor    $0x63,%eax
   35a46:	40 0f b6 cf          	movzbl %dil,%ecx
   35a4a:	0f b6 c0             	movzbl %al,%eax
   35a4d:	44 31 d9             	xor    %r11d,%ecx
   35a50:	31 c8                	xor    %ecx,%eax
   35a52:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   35a57:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35a5c:	41 88 9c 11 00 10 00 	mov    %bl,-0x3ffff000(%r9,%rdx,1)
   35a63:	c0 
   35a64:	30 c3                	xor    %al,%bl
   35a66:	41 88 1c 11          	mov    %bl,(%r9,%rdx,1)
   35a6a:	48 98                	cltq   
   35a6c:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   35a71:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35a76:	88 9c 06 00 10 00 c0 	mov    %bl,-0x3ffff000(%rsi,%rax,1)
   35a7d:	30 d3                	xor    %dl,%bl
   35a7f:	88 1c 06             	mov    %bl,(%rsi,%rax,1)
   35a82:	48 83 c2 01          	add    $0x1,%rdx
   35a86:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
   35a8d:	0f 85 7d ff ff ff    	jne    35a10 <instr.bb_11e60>

0000000000035a93 <instr.bb_11eb8>:
   35a93:	8b 84 24 48 04 00 00 	mov    0x448(%rsp),%eax
   35a9a:	41 bd 63 00 00 00    	mov    $0x63,%r13d
   35aa0:	41 be c6 ff ff ff    	mov    $0xffffffc6,%r14d
   35aa6:	31 d2                	xor    %edx,%edx
   35aa8:	b9 63 00 00 00       	mov    $0x63,%ecx
   35aad:	48 8d 2d 0c c3 ff ff 	lea    -0x3cf4(%rip),%rbp        # 31dc0 <FT0>
   35ab4:	48 8d 1d 05 bf ff ff 	lea    -0x40fb(%rip),%rbx        # 319c0 <FT1>
   35abb:	89 04 24             	mov    %eax,(%rsp)
   35abe:	8b 84 24 34 04 00 00 	mov    0x434(%rsp),%eax
   35ac5:	4c 8d 1d f4 ba ff ff 	lea    -0x450c(%rip),%r11        # 315c0 <FT2>
   35acc:	4c 8d 15 ed b6 ff ff 	lea    -0x4913(%rip),%r10        # 311c0 <FT3>
   35ad3:	4c 8d 0d e6 b1 ff ff 	lea    -0x4e1a(%rip),%r9        # 30cc0 <RT0>
   35ada:	4c 8d 05 df a9 ff ff 	lea    -0x5621(%rip),%r8        # 304c0 <RT2>
   35ae1:	89 44 24 04          	mov    %eax,0x4(%rsp)
   35ae5:	8b 84 24 44 04 00 00 	mov    0x444(%rsp),%eax
   35aec:	48 8d 3d cd a5 ff ff 	lea    -0x5a33(%rip),%rdi        # 300c0 <RT3>
   35af3:	4c 8d 25 c7 c6 ff ff 	lea    -0x3939(%rip),%r12        # 321c1 <FSb+0x1>
   35afa:	89 44 24 08          	mov    %eax,0x8(%rsp)
   35afe:	8b 84 24 3c 04 00 00 	mov    0x43c(%rsp),%eax
   35b05:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   35b09:	31 c0                	xor    %eax,%eax
   35b0b:	e9 b2 01 00 00       	jmpq   35cc2 <instr.bb_1207d>

0000000000035b10 <instr.bb_11f38>:
   35b10:	8b 94 94 10 04 00 00 	mov    0x410(%rsp,%rdx,4),%edx
   35b17:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   35b1b:	44 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13d
   35b1f:	49 63 cd             	movslq %r13d,%rcx
   35b22:	45 89 ee             	mov    %r13d,%r14d
   35b25:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   35b2c:	41 c1 fe 1f          	sar    $0x1f,%r14d
   35b30:	48 c1 e9 20          	shr    $0x20,%rcx
   35b34:	44 01 e9             	add    %r13d,%ecx
   35b37:	c1 f9 07             	sar    $0x7,%ecx
   35b3a:	44 29 f1             	sub    %r14d,%ecx
   35b3d:	41 89 ce             	mov    %ecx,%r14d
   35b40:	41 c1 e6 08          	shl    $0x8,%r14d
   35b44:	41 29 ce             	sub    %ecx,%r14d
   35b47:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   35b4b:	45 29 f5             	sub    %r14d,%r13d
   35b4e:	4d 63 ed             	movslq %r13d,%r13
   35b51:	46 8b 74 ac 10       	mov    0x10(%rsp,%r13,4),%r14d
   35b56:	44 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13d
   35b5a:	49 63 cd             	movslq %r13d,%rcx
   35b5d:	45 89 ef             	mov    %r13d,%r15d
   35b60:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   35b67:	41 c1 ff 1f          	sar    $0x1f,%r15d
   35b6b:	41 c1 e6 08          	shl    $0x8,%r14d
   35b6f:	48 c1 e9 20          	shr    $0x20,%rcx
   35b73:	44 01 e9             	add    %r13d,%ecx
   35b76:	c1 f9 07             	sar    $0x7,%ecx
   35b79:	44 29 f9             	sub    %r15d,%ecx
   35b7c:	41 89 cf             	mov    %ecx,%r15d
   35b7f:	41 c1 e7 08          	shl    $0x8,%r15d
   35b83:	41 29 cf             	sub    %ecx,%r15d
   35b86:	45 29 fd             	sub    %r15d,%r13d
   35b89:	4d 63 ed             	movslq %r13d,%r13
   35b8c:	42 8b 4c ac 10       	mov    0x10(%rsp,%r13,4),%ecx
   35b91:	c1 e1 10             	shl    $0x10,%ecx
   35b94:	41 31 ce             	xor    %ecx,%r14d
   35b97:	8b 0c 24             	mov    (%rsp),%ecx
   35b9a:	44 8d 2c 11          	lea    (%rcx,%rdx,1),%r13d
   35b9e:	03 54 24 0c          	add    0xc(%rsp),%edx
   35ba2:	49 63 cd             	movslq %r13d,%rcx
   35ba5:	45 89 ef             	mov    %r13d,%r15d
   35ba8:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   35baf:	41 c1 ff 1f          	sar    $0x1f,%r15d
   35bb3:	48 c1 e9 20          	shr    $0x20,%rcx
   35bb7:	44 01 e9             	add    %r13d,%ecx
   35bba:	c1 f9 07             	sar    $0x7,%ecx
   35bbd:	44 29 f9             	sub    %r15d,%ecx
   35bc0:	41 89 cf             	mov    %ecx,%r15d
   35bc3:	41 c1 e7 08          	shl    $0x8,%r15d
   35bc7:	41 29 cf             	sub    %ecx,%r15d
   35bca:	48 63 ca             	movslq %edx,%rcx
   35bcd:	45 29 fd             	sub    %r15d,%r13d
   35bd0:	4d 63 ed             	movslq %r13d,%r13
   35bd3:	46 33 74 ac 10       	xor    0x10(%rsp,%r13,4),%r14d
   35bd8:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   35bdf:	41 89 d5             	mov    %edx,%r13d
   35be2:	41 c1 fd 1f          	sar    $0x1f,%r13d
   35be6:	48 c1 e9 20          	shr    $0x20,%rcx
   35bea:	01 d1                	add    %edx,%ecx
   35bec:	c1 f9 07             	sar    $0x7,%ecx
   35bef:	44 29 e9             	sub    %r13d,%ecx
   35bf2:	41 89 cd             	mov    %ecx,%r13d
   35bf5:	41 c1 e5 08          	shl    $0x8,%r13d
   35bf9:	41 29 cd             	sub    %ecx,%r13d
   35bfc:	44 29 ea             	sub    %r13d,%edx
   35bff:	48 63 d2             	movslq %edx,%rdx
   35c02:	8b 54 94 10          	mov    0x10(%rsp,%rdx,4),%edx
   35c06:	c1 e2 18             	shl    $0x18,%edx
   35c09:	41 31 d6             	xor    %edx,%r14d
   35c0c:	45 89 f5             	mov    %r14d,%r13d

0000000000035c0f <instr.bb_12037>:
   35c0f:	44 89 f1             	mov    %r14d,%ecx
   35c12:	44 89 f2             	mov    %r14d,%edx
   35c15:	41 c1 c5 08          	rol    $0x8,%r13d
   35c19:	c1 c1 10             	rol    $0x10,%ecx
   35c1c:	c1 ca 08             	ror    $0x8,%edx

0000000000035c1f <instr.bb_12047>:
   35c1f:	4c 8d 3d 9a ac ff ff 	lea    -0x5366(%rip),%r15        # 308c0 <RT1>
   35c26:	c4 e1 f9 6e c3       	vmovq  %rbx,%xmm0
   35c2b:	c4 61 f9 7e f3       	vmovq  %xmm14,%rbx
   35c30:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35c35:	41 89 9c 81 00 10 00 	mov    %ebx,-0x3ffff000(%r9,%rax,4)
   35c3c:	c0 
   35c3d:	44 31 f3             	xor    %r14d,%ebx
   35c40:	41 89 1c 81          	mov    %ebx,(%r9,%rax,4)
   35c44:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
   35c49:	c4 41 f9 7e f6       	vmovq  %xmm14,%r14
   35c4e:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35c53:	45 89 b4 87 00 10 00 	mov    %r14d,-0x3ffff000(%r15,%rax,4)
   35c5a:	c0 
   35c5b:	45 31 ee             	xor    %r13d,%r14d
   35c5e:	45 89 34 87          	mov    %r14d,(%r15,%rax,4)
   35c62:	c4 41 f9 7e f5       	vmovq  %xmm14,%r13
   35c67:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35c6c:	45 89 ac 80 00 10 00 	mov    %r13d,-0x3ffff000(%r8,%rax,4)
   35c73:	c0 
   35c74:	41 31 cd             	xor    %ecx,%r13d
   35c77:	45 89 2c 80          	mov    %r13d,(%r8,%rax,4)
   35c7b:	c4 41 f9 7e f5       	vmovq  %xmm14,%r13
   35c80:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35c85:	44 89 ac 87 00 10 00 	mov    %r13d,-0x3ffff000(%rdi,%rax,4)
   35c8c:	c0 
   35c8d:	41 31 d5             	xor    %edx,%r13d
   35c90:	44 89 2c 87          	mov    %r13d,(%rdi,%rax,4)
   35c94:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   35c9a:	0f 84 d6 00 00 00    	je     35d76 <instr.bb_120d3>

0000000000035ca0 <instr.bb_12065>:
   35ca0:	42 8a 94 20 00 10 00 	mov    -0x3ffff000(%rax,%r12,1),%dl
   35ca7:	c0 
   35ca8:	42 32 14 20          	xor    (%rax,%r12,1),%dl
   35cac:	0f b6 ca             	movzbl %dl,%ecx
   35caf:	48 83 c0 01          	add    $0x1,%rax
   35cb3:	89 ca                	mov    %ecx,%edx
   35cb5:	41 89 cd             	mov    %ecx,%r13d
   35cb8:	44 8d 34 09          	lea    (%rcx,%rcx,1),%r14d
   35cbc:	c0 fa 07             	sar    $0x7,%dl
   35cbf:	83 e2 1b             	and    $0x1b,%edx

0000000000035cc2 <instr.bb_1207d>:
   35cc2:	44 31 f2             	xor    %r14d,%edx
   35cc5:	41 89 ce             	mov    %ecx,%r14d
   35cc8:	c1 e1 10             	shl    $0x10,%ecx
   35ccb:	41 c1 e6 08          	shl    $0x8,%r14d
   35ccf:	44 31 f1             	xor    %r14d,%ecx
   35cd2:	44 0f b6 f2          	movzbl %dl,%r14d
   35cd6:	44 31 ea             	xor    %r13d,%edx
   35cd9:	c1 e2 18             	shl    $0x18,%edx
   35cdc:	44 31 f1             	xor    %r14d,%ecx
   35cdf:	31 d1                	xor    %edx,%ecx
   35ce1:	89 ca                	mov    %ecx,%edx
   35ce3:	c4 41 f9 7e f5       	vmovq  %xmm14,%r13
   35ce8:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35ced:	44 89 ac 85 00 10 00 	mov    %r13d,-0x3ffff000(%rbp,%rax,4)
   35cf4:	c0 
   35cf5:	41 31 cd             	xor    %ecx,%r13d
   35cf8:	44 89 6c 85 00       	mov    %r13d,0x0(%rbp,%rax,4)
   35cfd:	c1 c2 08             	rol    $0x8,%edx
   35d00:	c4 41 f9 7e f5       	vmovq  %xmm14,%r13
   35d05:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35d0a:	44 89 ac 83 00 10 00 	mov    %r13d,-0x3ffff000(%rbx,%rax,4)
   35d11:	c0 
   35d12:	41 31 d5             	xor    %edx,%r13d
   35d15:	44 89 2c 83          	mov    %r13d,(%rbx,%rax,4)
   35d19:	89 ca                	mov    %ecx,%edx
   35d1b:	c1 c9 08             	ror    $0x8,%ecx
   35d1e:	c1 c2 10             	rol    $0x10,%edx
   35d21:	c4 41 f9 7e f5       	vmovq  %xmm14,%r13
   35d26:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35d2b:	45 89 ac 82 00 10 00 	mov    %r13d,-0x3ffff000(%r10,%rax,4)
   35d32:	c0 
   35d33:	41 31 cd             	xor    %ecx,%r13d
   35d36:	45 89 2c 82          	mov    %r13d,(%r10,%rax,4)
   35d3a:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   35d3f:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35d44:	41 89 8c 83 00 10 00 	mov    %ecx,-0x3ffff000(%r11,%rax,4)
   35d4b:	c0 
   35d4c:	31 d1                	xor    %edx,%ecx
   35d4e:	41 89 0c 83          	mov    %ecx,(%r11,%rax,4)
   35d52:	8a 8c 06 00 10 00 c0 	mov    -0x3ffff000(%rsi,%rax,1),%cl
   35d59:	32 0c 06             	xor    (%rsi,%rax,1),%cl
   35d5c:	0f b6 d1             	movzbl %cl,%edx
   35d5f:	85 d2                	test   %edx,%edx
   35d61:	0f 85 a9 fd ff ff    	jne    35b10 <instr.bb_11f38>

0000000000035d67 <instr.bb_120c4>:
   35d67:	31 d2                	xor    %edx,%edx
   35d69:	31 c9                	xor    %ecx,%ecx
   35d6b:	45 31 ed             	xor    %r13d,%r13d
   35d6e:	45 31 f6             	xor    %r14d,%r14d
   35d71:	e9 a9 fe ff ff       	jmpq   35c1f <instr.bb_12047>

0000000000035d76 <instr.bb_120d3>:
   35d76:	48 8b 84 24 18 08 00 	mov    0x818(%rsp),%rax
   35d7d:	00 
   35d7e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   35d85:	00 00 
   35d87:	0f 85 6b c3 fd ff    	jne    120f8 <aes_gen_tables+0x368>

0000000000035d8d <instr.bb_120e6>:
   35d8d:	48 81 c4 28 08 00 00 	add    $0x828,%rsp
   35d94:	5b                   	pop    %rbx
   35d95:	5d                   	pop    %rbp
   35d96:	41 5c                	pop    %r12
   35d98:	41 5d                	pop    %r13
   35d9a:	41 5e                	pop    %r14
   35d9c:	41 5f                	pop    %r15
   35d9e:	c3                   	retq   
   35d9f:	90                   	nop

0000000000035da0 <mbedtls_aes_init.instr.bb_12140>:
   35da0:	31 c9                	xor    %ecx,%ecx
   35da2:	f3 0f 1e fa          	endbr64 
   35da6:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   35dab:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35db0:	48 89 8f 00 10 00 c0 	mov    %rcx,-0x3ffff000(%rdi)
   35db7:	48 89 0f             	mov    %rcx,(%rdi)
   35dba:	48 89 f9             	mov    %rdi,%rcx
   35dbd:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   35dc1:	31 c0                	xor    %eax,%eax
   35dc3:	c4 61 f9 7e f2       	vmovq  %xmm14,%rdx
   35dc8:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35dcd:	48 89 97 10 11 00 c0 	mov    %rdx,-0x3fffeef0(%rdi)
   35dd4:	48 89 97 10 01 00 00 	mov    %rdx,0x110(%rdi)
   35ddb:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   35ddf:	48 29 f9             	sub    %rdi,%rcx
   35de2:	81 c1 20 01 00 00    	add    $0x120,%ecx
   35de8:	c1 e9 03             	shr    $0x3,%ecx

0000000000035deb <instr.bb_1216f>:
   35deb:	48 89 ce             	mov    %rcx,%rsi
   35dee:	c4 61 f9 7e f2       	vmovq  %xmm14,%rdx
   35df3:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35df8:	48 31 d0             	xor    %rdx,%rax
   35dfb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   35dfe:	48 89 f1             	mov    %rsi,%rcx
   35e01:	48 89 c6             	mov    %rax,%rsi
   35e04:	48 89 d0             	mov    %rdx,%rax
   35e07:	48 8d 14 cd 00 00 00 	lea    0x0(,%rcx,8),%rdx
   35e0e:	00 
   35e0f:	48 29 d7             	sub    %rdx,%rdi
   35e12:	48 81 c7 00 10 00 c0 	add    $0xffffffffc0001000,%rdi
   35e19:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   35e1c:	48 31 f0             	xor    %rsi,%rax
   35e1f:	48 81 ef 00 10 00 c0 	sub    $0xffffffffc0001000,%rdi

0000000000035e26 <instr.bb_12172>:
   35e26:	c3                   	retq   
   35e27:	90                   	nop
   35e28:	90                   	nop
   35e29:	90                   	nop
   35e2a:	90                   	nop
   35e2b:	90                   	nop
   35e2c:	90                   	nop
   35e2d:	90                   	nop
   35e2e:	90                   	nop
   35e2f:	90                   	nop

0000000000035e30 <mbedtls_aes_setkey_enc.instr.bb_12250>:
   35e30:	31 c9                	xor    %ecx,%ecx
   35e32:	48 89 8c 24 d8 0f 00 	mov    %rcx,-0x3ffff028(%rsp)
   35e39:	c0 
   35e3a:	48 89 8c 24 e0 0f 00 	mov    %rcx,-0x3ffff020(%rsp)
   35e41:	c0 
   35e42:	48 89 8c 24 e8 0f 00 	mov    %rcx,-0x3ffff018(%rsp)
   35e49:	c0 
   35e4a:	48 89 8c 24 f0 0f 00 	mov    %rcx,-0x3ffff010(%rsp)
   35e51:	c0 
   35e52:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   35e59:	c0 
   35e5a:	f3 0f 1e fa          	endbr64 
   35e5e:	41 55                	push   %r13
   35e60:	49 89 f5             	mov    %rsi,%r13
   35e63:	41 54                	push   %r12
   35e65:	41 89 d4             	mov    %edx,%r12d
   35e68:	55                   	push   %rbp
   35e69:	53                   	push   %rbx
   35e6a:	48 89 fb             	mov    %rdi,%rbx
   35e6d:	48 83 ec 08          	sub    $0x8,%rsp
   35e71:	81 fa c0 00 00 00    	cmp    $0xc0,%edx
   35e77:	0f 84 23 c4 fd ff    	je     122a0 <mbedtls_aes_setkey_enc+0x50>

0000000000035e7d <instr.bb_1226f>:
   35e7d:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   35e83:	0f 84 47 c5 fd ff    	je     123d0 <mbedtls_aes_setkey_enc+0x180>

0000000000035e89 <instr.bb_1227b>:
   35e89:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   35e8e:	81 fa 80 00 00 00    	cmp    $0x80,%edx
   35e94:	0f 84 66 00 00 00    	je     35f00 <instr.bb_123a0>
   35e9a:	e9 ed c3 fd ff       	jmpq   1228c <mbedtls_aes_setkey_enc+0x3c>
   35e9f:	90                   	nop

0000000000035ea0 <instr.bb_122b4>:
   35ea0:	c4 61 f9 7e f7       	vmovq  %xmm14,%rdi
   35ea5:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35eaa:	48 89 bb 08 10 00 c0 	mov    %rdi,-0x3fffeff8(%rbx)
   35eb1:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
   35eb5:	bf 00 00 00 02       	mov    $0x2000000,%edi
   35eba:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
   35ebe:	e8 dd ee ff ff       	callq  34da0 <mbedtls_aesni_has_support.instr.bb_52e0>

0000000000035ec3 <instr.bb_122ca>:
   35ec3:	85 c0                	test   %eax,%eax
   35ec5:	0f 85 15 c5 fd ff    	jne    123e0 <mbedtls_aes_setkey_enc+0x190>

0000000000035ecb <instr.bb_122d2>:
   35ecb:	41 c1 ec 05          	shr    $0x5,%r12d
   35ecf:	b9 00 00 00 00       	mov    $0x0,%ecx
   35ed4:	41 8d 74 24 ff       	lea    -0x1(%r12),%esi
   35ed9:	0f 84 1e c4 fd ff    	je     122fd <mbedtls_aes_setkey_enc+0xad>

0000000000035edf <instr.bb_122e2>:
   35edf:	90                   	nop
   35ee0:	41 8b 54 8d 00       	mov    0x0(%r13,%rcx,4),%edx
   35ee5:	89 54 8b 10          	mov    %edx,0x10(%rbx,%rcx,4)
   35ee9:	48 89 ca             	mov    %rcx,%rdx
   35eec:	48 83 c1 01          	add    $0x1,%rcx
   35ef0:	48 39 d6             	cmp    %rdx,%rsi
   35ef3:	0f 85 e7 ff ff ff    	jne    35ee0 <instr.bb_122e2+0x1>
   35ef9:	e9 ff c3 fd ff       	jmpq   122fd <mbedtls_aes_setkey_enc+0xad>
   35efe:	90                   	nop
   35eff:	90                   	nop

0000000000035f00 <instr.bb_123a0>:
   35f00:	8b 05 5a a1 ff ff    	mov    -0x5ea6(%rip),%eax        # 30060 <aes_init_done>
   35f06:	c4 61 f9 7e f1       	vmovq  %xmm14,%rcx
   35f0b:	c4 42 09 dc f7       	vaesenc %xmm15,%xmm14,%xmm14
   35f10:	89 8f 00 10 00 c0    	mov    %ecx,-0x3ffff000(%rdi)
   35f16:	83 f1 0a             	xor    $0xa,%ecx
   35f19:	89 0f                	mov    %ecx,(%rdi)
   35f1b:	85 c0                	test   %eax,%eax
   35f1d:	0f 85 7d ff ff ff    	jne    35ea0 <instr.bb_122b4>

0000000000035f23 <instr.bb_123b4>:
   35f23:	e8 88 f7 ff ff       	callq  356b0 <aes_gen_tables.instr.bb_11d90>

0000000000035f28 <instr.bb_123b9>:
   35f28:	c7 05 2e a1 ff ff 01 	movl   $0x1,-0x5ed2(%rip)        # 30060 <aes_init_done>
   35f2f:	00 00 00 
   35f32:	e9 69 ff ff ff       	jmpq   35ea0 <instr.bb_122b4>
   35f37:	90                   	nop
   35f38:	90                   	nop
   35f39:	90                   	nop
   35f3a:	90                   	nop
   35f3b:	90                   	nop
   35f3c:	90                   	nop
   35f3d:	90                   	nop
   35f3e:	90                   	nop
   35f3f:	90                   	nop

0000000000035f40 <mbedtls_aes_crypt_ecb.instr.bb_130b0>:
   35f40:	45 31 c0             	xor    %r8d,%r8d
   35f43:	4c 89 84 24 d8 0f 00 	mov    %r8,-0x3ffff028(%rsp)
   35f4a:	c0 
   35f4b:	4c 89 84 24 e0 0f 00 	mov    %r8,-0x3ffff020(%rsp)
   35f52:	c0 
   35f53:	4c 89 84 24 e8 0f 00 	mov    %r8,-0x3ffff018(%rsp)
   35f5a:	c0 
   35f5b:	4c 89 84 24 f0 0f 00 	mov    %r8,-0x3ffff010(%rsp)
   35f62:	c0 
   35f63:	4c 89 84 24 f8 0f 00 	mov    %r8,-0x3ffff008(%rsp)
   35f6a:	c0 
   35f6b:	f3 0f 1e fa          	endbr64 
   35f6f:	83 fe 01             	cmp    $0x1,%esi
   35f72:	0f 87 b8 d1 fd ff    	ja     13130 <mbedtls_aes_crypt_ecb+0x80>

0000000000035f78 <instr.bb_130b9>:
   35f78:	41 56                	push   %r14
   35f7a:	49 89 ce             	mov    %rcx,%r14
   35f7d:	41 55                	push   %r13
   35f7f:	49 89 d5             	mov    %rdx,%r13
   35f82:	41 54                	push   %r12
   35f84:	49 89 fc             	mov    %rdi,%r12
   35f87:	bf 00 00 00 02       	mov    $0x2000000,%edi
   35f8c:	55                   	push   %rbp
   35f8d:	89 f5                	mov    %esi,%ebp
   35f8f:	48 83 ec 08          	sub    $0x8,%rsp
   35f93:	e8 08 ee ff ff       	callq  34da0 <mbedtls_aesni_has_support.instr.bb_52e0>

0000000000035f98 <instr.bb_130d9>:
   35f98:	85 c0                	test   %eax,%eax
   35f9a:	0f 85 70 d1 fd ff    	jne    13110 <mbedtls_aes_crypt_ecb+0x60>

0000000000035fa0 <instr.bb_130dd>:
   35fa0:	4c 89 f2             	mov    %r14,%rdx
   35fa3:	4c 89 ee             	mov    %r13,%rsi
   35fa6:	4c 89 e7             	mov    %r12,%rdi
   35fa9:	83 fd 01             	cmp    $0x1,%ebp
   35fac:	0f 84 4e d1 fd ff    	je     13100 <mbedtls_aes_crypt_ecb+0x50>

0000000000035fb2 <instr.bb_130eb>:
   35fb2:	48 83 c4 08          	add    $0x8,%rsp
   35fb6:	5d                   	pop    %rbp
   35fb7:	41 5c                	pop    %r12
   35fb9:	41 5d                	pop    %r13
   35fbb:	41 5e                	pop    %r14
   35fbd:	e9 9e cc fd ff       	jmpq   12c60 <mbedtls_internal_aes_decrypt>
   35fc2:	90                   	nop
   35fc3:	90                   	nop
   35fc4:	90                   	nop
   35fc5:	90                   	nop
   35fc6:	90                   	nop
   35fc7:	90                   	nop
   35fc8:	90                   	nop
   35fc9:	90                   	nop
   35fca:	90                   	nop
   35fcb:	90                   	nop
   35fcc:	90                   	nop
   35fcd:	90                   	nop
   35fce:	90                   	nop
   35fcf:	90                   	nop

0000000000035fd0 <.instr.bb_20898>:
   35fd0:	31 c9                	xor    %ecx,%ecx
   35fd2:	48 89 8c 24 f8 0f 00 	mov    %rcx,-0x3ffff008(%rsp)
   35fd9:	c0 
   35fda:	f3 0f 1e fa          	endbr64 
   35fde:	48 83 ec 08          	sub    $0x8,%rsp
   35fe2:	48 83 c4 08          	add    $0x8,%rsp
   35fe6:	c3                   	retq   
   35fe7:	90                   	nop
   35fe8:	90                   	nop
   35fe9:	90                   	nop
   35fea:	90                   	nop
   35feb:	90                   	nop
   35fec:	90                   	nop
   35fed:	90                   	nop
   35fee:	90                   	nop
   35fef:	90                   	nop
	...
   36100:	00 d0                	add    %dl,%al
   36102:	fc                   	cld    
   36103:	ff                   	(bad)  
   36104:	ff                   	(bad)  
   36105:	ff                   	(bad)  
   36106:	ff                   	(bad)  
   36107:	ff 00                	incl   (%rax)
   36109:	d0 02                	rolb   (%rdx)
   3610b:	00 00                	add    %al,(%rax)
   3610d:	00 00                	add    %al,(%rax)
   3610f:	00 00                	add    %al,(%rax)
   36111:	b0 ff                	mov    $0xff,%al
   36113:	ff                   	(bad)  
   36114:	ff                   	(bad)  
   36115:	ff                   	(bad)  
   36116:	ff                   	(bad)  
   36117:	ff 00                	incl   (%rax)
   36119:	50                   	push   %rax
	...
   3612e:	00 00                	add    %al,(%rax)
   36130:	08 d0                	or     %dl,%al
   36132:	ff                   	(bad)  
   36133:	ff                   	(bad)  
   36134:	ff                   	(bad)  
   36135:	ff                   	(bad)  
   36136:	ff                   	(bad)  
   36137:	ff 19                	lcall  *(%rcx)
   36139:	00 00                	add    %al,(%rax)
   3613b:	00 01                	add    %al,(%rcx)
   3613d:	00 00                	add    %al,(%rax)
   3613f:	00 30                	add    %dh,(%rax)
   36141:	d0 ff                	sar    %bh
   36143:	ff                   	(bad)  
   36144:	ff                   	(bad)  
   36145:	ff                   	(bad)  
   36146:	ff                   	(bad)  
   36147:	ff 28                	ljmp   *(%rax)
   36149:	00 00                	add    %al,(%rax)
   3614b:	00 01                	add    %al,(%rcx)
   3614d:	00 00                	add    %al,(%rax)
   3614f:	00 c0                	add    %al,%al
   36151:	d0 ff                	sar    %bh
   36153:	ff                   	(bad)  
   36154:	ff                   	(bad)  
   36155:	ff                   	(bad)  
   36156:	ff                   	(bad)  
   36157:	ff a8 23 00 00 01    	ljmp   *0x1000023(%rax)
	...
